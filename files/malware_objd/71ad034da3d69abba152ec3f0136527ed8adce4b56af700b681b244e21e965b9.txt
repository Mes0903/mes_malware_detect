
71ad034da3d69abba152ec3f0136527ed8adce4b56af700b681b244e21e965b9.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	push   esi
64001001:	mov    esi,DWORD PTR [esp+0x8]
64001005:	test   esi,esi
64001007:	je     0x64001038
64001009:	mov    eax,DWORD PTR [esp+0xc]
6400100d:	test   eax,eax
6400100f:	je     0x64001038
64001011:	mov    ecx,DWORD PTR [esp+0x10]
64001015:	mov    edx,DWORD PTR [esp+0x14]
64001019:	push   0x0
6400101b:	push   0x0
6400101d:	push   ecx
6400101e:	push   esi
6400101f:	push   0xffffffff
64001021:	push   eax
64001022:	push   0x0
64001024:	push   edx
64001025:	mov    BYTE PTR [esi],0x0
64001028:	call   DWORD PTR ds:0x64024010
6400102e:	neg    eax
64001030:	sbb    eax,eax
64001032:	and    eax,esi
64001034:	pop    esi
64001035:	ret    0x10
64001038:	xor    eax,eax
6400103a:	pop    esi
6400103b:	ret    0x10
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x6402bc5c
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x64013872
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	mov    eax,DWORD PTR [esp+0x4]
64001064:	cmp    eax,0x50
64001067:	ja     0x6400108b
64001069:	movzx  ecx,BYTE PTR [eax+0x640010a8]
64001070:	jmp    DWORD PTR [ecx*4+0x64001098]
64001077:	push   0x8007000e
6400107c:	call   0x64001040
64001081:	push   0x80070057
64001086:	call   0x64001040
6400108b:	push   0x80004005
64001090:	call   0x64001040
64001095:	ret    
64001096:	mov    edi,edi
64001098:	xchg   ebp,eax
64001099:	adc    BYTE PTR [eax],al
6400109b:	fs ja  0x640010ae
6400109e:	add    BYTE PTR [ecx+eax*4+0x10],ah
640010a2:	add    BYTE PTR [ebx+ecx*4+0x10],ah
640010a6:	add    BYTE PTR [eax+eax*1+0x3],ah
640010aa:	add    eax,DWORD PTR [ebx]
640010ac:	add    eax,DWORD PTR [ebx]
640010ae:	add    eax,DWORD PTR [ebx]
640010b0:	add    eax,DWORD PTR [ebx]
640010b2:	add    eax,DWORD PTR [ebx]
640010b4:	add    DWORD PTR [ebx],eax
640010b6:	add    eax,DWORD PTR [ebx]
640010b8:	add    eax,DWORD PTR [ebx]
640010ba:	add    eax,DWORD PTR [ebx]
640010bc:	add    eax,DWORD PTR [ebx]
640010be:	add    al,BYTE PTR [ebx]
640010c0:	add    eax,DWORD PTR [ebx]
640010c2:	add    eax,DWORD PTR [ebx]
640010c4:	add    eax,DWORD PTR [ebx]
640010c6:	add    eax,DWORD PTR [ebx]
640010c8:	add    eax,DWORD PTR [ebx]
640010ca:	add    al,BYTE PTR [ebx]
640010cc:	add    eax,DWORD PTR [ebx]
640010ce:	add    eax,DWORD PTR [ebx]
640010d0:	add    eax,DWORD PTR [ebx]
640010d2:	add    eax,DWORD PTR [ebx]
640010d4:	add    eax,DWORD PTR [ebx]
640010d6:	add    eax,DWORD PTR [ebx]
640010d8:	add    eax,DWORD PTR [ebx]
640010da:	add    eax,DWORD PTR [ebx]
640010dc:	add    eax,DWORD PTR [ebx]
640010de:	add    eax,DWORD PTR [ebx]
640010e0:	add    eax,DWORD PTR [ebx]
640010e2:	add    eax,DWORD PTR [ebx]
640010e4:	add    eax,DWORD PTR [ebx]
640010e6:	add    eax,DWORD PTR [ebx]
640010e8:	add    eax,DWORD PTR [ebx]
640010ea:	add    eax,DWORD PTR [ebx]
640010ec:	add    eax,DWORD PTR [ebx]
640010ee:	add    eax,DWORD PTR [ebx]
640010f0:	add    eax,DWORD PTR [ebx]
640010f2:	add    eax,DWORD PTR [ebx]
640010f4:	add    eax,DWORD PTR [ebx]
640010f6:	add    eax,DWORD PTR [ebx]
640010f8:	add    ah,cl
640010fa:	int3   
640010fb:	int3   
640010fc:	int3   
640010fd:	int3   
640010fe:	int3   
640010ff:	int3   
64001100:	push   ebx
64001101:	mov    ebx,DWORD PTR [esp+0x8]
64001105:	push   edi
64001106:	mov    edi,DWORD PTR [esp+0x10]
6400110a:	push   edi
6400110b:	push   ebx
6400110c:	call   DWORD PTR ds:0x6402401c
64001112:	test   eax,eax
64001114:	jne    0x64001119
64001116:	pop    edi
64001117:	pop    ebx
64001118:	ret    
64001119:	push   esi
6400111a:	push   eax
6400111b:	call   DWORD PTR ds:0x64024018
64001121:	mov    esi,eax
64001123:	test   esi,esi
64001125:	je     0x64001154
64001127:	push   edi
64001128:	push   ebx
64001129:	call   DWORD PTR ds:0x64024014
6400112f:	mov    ecx,DWORD PTR [esp+0x18]
64001133:	add    eax,esi
64001135:	and    ecx,0xf
64001138:	jbe    0x64001150
6400113a:	lea    ebx,[ebx+0x0]
64001140:	cmp    esi,eax
64001142:	jae    0x64001154
64001144:	sub    ecx,0x1
64001147:	movzx  edx,WORD PTR [esi]
6400114a:	lea    esi,[esi+edx*2+0x2]
6400114e:	jne    0x64001140
64001150:	cmp    esi,eax
64001152:	jb     0x6400115a
64001154:	pop    esi
64001155:	pop    edi
64001156:	xor    eax,eax
64001158:	pop    ebx
64001159:	ret    
6400115a:	mov    ax,WORD PTR [esi]
6400115d:	neg    ax
64001160:	sbb    eax,eax
64001162:	and    eax,esi
64001164:	pop    esi
64001165:	pop    edi
64001166:	pop    ebx
64001167:	ret    
64001168:	int3   
64001169:	int3   
6400116a:	int3   
6400116b:	int3   
6400116c:	int3   
6400116d:	int3   
6400116e:	int3   
6400116f:	int3   
64001170:	push   ebx
64001171:	push   ebp
64001172:	push   esi
64001173:	push   edi
64001174:	xor    edi,edi
64001176:	push   edi
64001177:	mov    ecx,0x64038df0
6400117c:	call   0x640132f6
64001181:	mov    esi,eax
64001183:	test   esi,esi
64001185:	lea    ebp,[edi+0x1]
64001188:	je     0x640011d7
6400118a:	mov    ebx,DWORD PTR [esp+0x14]
6400118e:	mov    edi,edi
64001190:	test   edi,edi
64001192:	jne    0x640011d7
64001194:	mov    eax,DWORD PTR [esp+0x18]
64001198:	mov    ecx,ebx
6400119a:	shr    ecx,0x4
6400119d:	add    ecx,0x1
640011a0:	push   eax
640011a1:	movzx  edx,cx
640011a4:	push   edx
640011a5:	push   0x6
640011a7:	push   esi
640011a8:	call   DWORD PTR ds:0x64024024
640011ae:	test   eax,eax
640011b0:	je     0x640011c3
640011b2:	push   ebx
640011b3:	push   eax
640011b4:	push   esi
640011b5:	call   0x64001100
640011ba:	mov    edi,eax
640011bc:	add    esp,0xc
640011bf:	test   edi,edi
640011c1:	jne    0x640011de
640011c3:	push   ebp
640011c4:	mov    ecx,0x64038df0
640011c9:	call   0x640132f6
640011ce:	mov    esi,eax
640011d0:	add    ebp,0x1
640011d3:	test   esi,esi
640011d5:	jne    0x64001190
640011d7:	pop    edi
640011d8:	pop    esi
640011d9:	pop    ebp
640011da:	xor    eax,eax
640011dc:	pop    ebx
640011dd:	ret    
640011de:	pop    edi
640011df:	mov    eax,esi
640011e1:	pop    esi
640011e2:	pop    ebp
640011e3:	pop    ebx
640011e4:	ret    
640011e5:	int3   
640011e6:	int3   
640011e7:	int3   
640011e8:	int3   
640011e9:	int3   
640011ea:	int3   
640011eb:	int3   
640011ec:	int3   
640011ed:	int3   
640011ee:	int3   
640011ef:	int3   
640011f0:	mov    eax,DWORD PTR [esp+0x8]
640011f4:	ret    
640011f5:	int3   
640011f6:	int3   
640011f7:	int3   
640011f8:	int3   
640011f9:	int3   
640011fa:	int3   
640011fb:	int3   
640011fc:	int3   
640011fd:	int3   
640011fe:	int3   
640011ff:	int3   
64001200:	ret    
64001201:	int3   
64001202:	int3   
64001203:	int3   
64001204:	int3   
64001205:	int3   
64001206:	int3   
64001207:	int3   
64001208:	int3   
64001209:	int3   
6400120a:	int3   
6400120b:	int3   
6400120c:	int3   
6400120d:	int3   
6400120e:	int3   
6400120f:	int3   
64001210:	push   esi
64001211:	lea    eax,[esp+0x8]
64001215:	push   eax
64001216:	mov    esi,ecx
64001218:	call   0x6401365a
6400121d:	mov    DWORD PTR [esi],0x640242a4
64001223:	mov    eax,esi
64001225:	pop    esi
64001226:	ret    0x4
64001229:	int3   
6400122a:	int3   
6400122b:	int3   
6400122c:	int3   
6400122d:	int3   
6400122e:	int3   
6400122f:	int3   
64001230:	mov    DWORD PTR [ecx],0x640242a4
64001236:	jmp    0x64013718
6400123b:	int3   
6400123c:	int3   
6400123d:	int3   
6400123e:	int3   
6400123f:	int3   
64001240:	push   esi
64001241:	mov    esi,ecx
64001243:	mov    DWORD PTR [esi],0x640242a4
64001249:	call   0x64013718
6400124e:	test   BYTE PTR [esp+0x8],0x1
64001253:	je     0x6400125e
64001255:	push   esi
64001256:	call   0x64013644
6400125b:	add    esp,0x4
6400125e:	mov    eax,esi
64001260:	pop    esi
64001261:	ret    0x4
64001264:	int3   
64001265:	int3   
64001266:	int3   
64001267:	int3   
64001268:	int3   
64001269:	int3   
6400126a:	int3   
6400126b:	int3   
6400126c:	int3   
6400126d:	int3   
6400126e:	int3   
6400126f:	int3   
64001270:	mov    eax,DWORD PTR [esp+0xc]
64001274:	cmp    eax,0x4
64001277:	mov    ecx,DWORD PTR [esp+0x8]
6400127b:	mov    edx,DWORD PTR [esp+0x4]
6400127f:	push   esi
64001280:	push   edi
64001281:	jb     0x64001297
64001283:	mov    esi,DWORD PTR [edx]
64001285:	cmp    esi,DWORD PTR [ecx]
64001287:	jne    0x6400129b
64001289:	sub    eax,0x4
6400128c:	add    ecx,0x4
6400128f:	add    edx,0x4
64001292:	cmp    eax,0x4
64001295:	jae    0x64001283
64001297:	test   eax,eax
64001299:	je     0x640012f9
6400129b:	movzx  esi,BYTE PTR [edx]
6400129e:	movzx  edi,BYTE PTR [ecx]
640012a1:	sub    esi,edi
640012a3:	jne    0x640012ea
640012a5:	sub    eax,0x1
640012a8:	add    ecx,0x1
640012ab:	add    edx,0x1
640012ae:	test   eax,eax
640012b0:	je     0x640012f9
640012b2:	movzx  esi,BYTE PTR [edx]
640012b5:	movzx  edi,BYTE PTR [ecx]
640012b8:	sub    esi,edi
640012ba:	jne    0x640012ea
640012bc:	sub    eax,0x1
640012bf:	add    ecx,0x1
640012c2:	add    edx,0x1
640012c5:	test   eax,eax
640012c7:	je     0x640012f9
640012c9:	movzx  esi,BYTE PTR [edx]
640012cc:	movzx  edi,BYTE PTR [ecx]
640012cf:	sub    esi,edi
640012d1:	jne    0x640012ea
640012d3:	sub    eax,0x1
640012d6:	add    ecx,0x1
640012d9:	add    edx,0x1
640012dc:	test   eax,eax
640012de:	je     0x640012f9
640012e0:	movzx  esi,BYTE PTR [edx]
640012e3:	movzx  eax,BYTE PTR [ecx]
640012e6:	sub    esi,eax
640012e8:	je     0x640012f9
640012ea:	test   esi,esi
640012ec:	mov    eax,0x1
640012f1:	jg     0x640012fb
640012f3:	pop    edi
640012f4:	or     eax,0xffffffff
640012f7:	pop    esi
640012f8:	ret    
640012f9:	xor    eax,eax
640012fb:	pop    edi
640012fc:	pop    esi
640012fd:	ret    
640012fe:	int3   
640012ff:	int3   
64001300:	mov    eax,ecx
64001302:	mov    DWORD PTR [eax],0x0
64001308:	ret    
64001309:	int3   
6400130a:	int3   
6400130b:	int3   
6400130c:	int3   
6400130d:	int3   
6400130e:	int3   
6400130f:	int3   
64001310:	push   0xffffffff
64001312:	push   0x64023108
64001317:	mov    eax,fs:0x0
6400131d:	push   eax
6400131e:	push   ecx
6400131f:	push   esi
64001320:	mov    eax,ds:0x64037644
64001325:	xor    eax,esp
64001327:	push   eax
64001328:	lea    eax,[esp+0xc]
6400132c:	mov    fs:0x0,eax
64001332:	mov    esi,ecx
64001334:	mov    DWORD PTR [esp+0x8],esi
64001338:	call   0x64013649
6400133d:	xor    eax,eax
6400133f:	mov    DWORD PTR [esp+0x14],eax
64001343:	lea    ecx,[esi+0xc]
64001346:	mov    DWORD PTR [esi],0x640242d4
6400134c:	push   0xffffffff
6400134e:	mov    DWORD PTR [ecx+0x14],eax
64001351:	mov    DWORD PTR [ecx+0x18],0xf
64001358:	push   eax
64001359:	mov    BYTE PTR [ecx+0x4],al
6400135c:	mov    eax,DWORD PTR [esp+0x24]
64001360:	push   eax
64001361:	call   0x64003390
64001366:	mov    eax,esi
64001368:	mov    ecx,DWORD PTR [esp+0xc]
6400136c:	mov    DWORD PTR fs:0x0,ecx
64001373:	pop    ecx
64001374:	pop    esi
64001375:	add    esp,0x10
64001378:	ret    0x4
6400137b:	int3   
6400137c:	int3   
6400137d:	int3   
6400137e:	int3   
6400137f:	int3   
64001380:	mov    eax,DWORD PTR [esp+0x4]
64001384:	push   esi
64001385:	push   eax
64001386:	mov    esi,ecx
64001388:	call   0x64001310
6400138d:	mov    DWORD PTR [esi],0x640242e0
64001393:	mov    eax,esi
64001395:	pop    esi
64001396:	ret    0x4
64001399:	int3   
6400139a:	int3   
6400139b:	int3   
6400139c:	int3   
6400139d:	int3   
6400139e:	int3   
6400139f:	int3   
640013a0:	push   esi
640013a1:	mov    esi,ecx
640013a3:	mov    DWORD PTR [esi],0x640242d4
640013a9:	cmp    DWORD PTR [esi+0x24],0x10
640013ad:	jb     0x640013bb
640013af:	mov    eax,DWORD PTR [esi+0x10]
640013b2:	push   eax
640013b3:	call   0x64013644
640013b8:	add    esp,0x4
640013bb:	xor    eax,eax
640013bd:	mov    DWORD PTR [esi+0x24],0xf
640013c4:	mov    DWORD PTR [esi+0x20],eax
640013c7:	mov    ecx,esi
640013c9:	mov    BYTE PTR [esi+0x10],al
640013cc:	call   0x64013718
640013d1:	test   BYTE PTR [esp+0x8],0x1
640013d6:	je     0x640013e1
640013d8:	push   esi
640013d9:	call   0x64013644
640013de:	add    esp,0x4
640013e1:	mov    eax,esi
640013e3:	pop    esi
640013e4:	ret    0x4
640013e7:	int3   
640013e8:	int3   
640013e9:	int3   
640013ea:	int3   
640013eb:	int3   
640013ec:	int3   
640013ed:	int3   
640013ee:	int3   
640013ef:	int3   
640013f0:	push   esi
640013f1:	mov    esi,ecx
640013f3:	mov    DWORD PTR [esi],0x640242d4
640013f9:	cmp    DWORD PTR [esi+0x24],0x10
640013fd:	jb     0x6400140b
640013ff:	mov    eax,DWORD PTR [esi+0x10]
64001402:	push   eax
64001403:	call   0x64013644
64001408:	add    esp,0x4
6400140b:	xor    eax,eax
6400140d:	mov    DWORD PTR [esi+0x24],0xf
64001414:	mov    DWORD PTR [esi+0x20],eax
64001417:	mov    BYTE PTR [esi+0x10],al
6400141a:	mov    ecx,esi
6400141c:	pop    esi
6400141d:	jmp    0x64013718
64001422:	int3   
64001423:	int3   
64001424:	int3   
64001425:	int3   
64001426:	int3   
64001427:	int3   
64001428:	int3   
64001429:	int3   
6400142a:	int3   
6400142b:	int3   
6400142c:	int3   
6400142d:	int3   
6400142e:	int3   
6400142f:	int3   
64001430:	push   0xffffffff
64001432:	push   0x640230d8
64001437:	mov    eax,fs:0x0
6400143d:	push   eax
6400143e:	push   esi
6400143f:	mov    eax,ds:0x64037644
64001444:	xor    eax,esp
64001446:	push   eax
64001447:	lea    eax,[esp+0x8]
6400144b:	mov    fs:0x0,eax
64001451:	mov    esi,DWORD PTR [esp+0x18]
64001455:	mov    ecx,esi
64001457:	call   0x64013649
6400145c:	xor    eax,eax
6400145e:	mov    DWORD PTR [esp+0x10],eax
64001462:	lea    ecx,[esi+0xc]
64001465:	mov    DWORD PTR [esi],0x64029928
6400146b:	push   0xffffffff
6400146d:	mov    DWORD PTR [ecx+0x14],eax
64001470:	mov    DWORD PTR [ecx+0x18],0xf
64001477:	push   eax
64001478:	mov    BYTE PTR [ecx+0x4],al
6400147b:	mov    eax,DWORD PTR [esp+0x24]
6400147f:	push   eax
64001480:	call   0x64003390
64001485:	mov    eax,esi
64001487:	mov    ecx,DWORD PTR [esp+0x8]
6400148b:	mov    DWORD PTR fs:0x0,ecx
64001492:	pop    ecx
64001493:	pop    esi
64001494:	add    esp,0xc
64001497:	ret    0x8
6400149a:	int3   
6400149b:	int3   
6400149c:	int3   
6400149d:	int3   
6400149e:	int3   
6400149f:	int3   
640014a0:	push   esi
640014a1:	mov    esi,ecx
640014a3:	mov    DWORD PTR [esi],0x64029928
640014a9:	cmp    DWORD PTR [esi+0x24],0x10
640014ad:	jb     0x640014bb
640014af:	mov    eax,DWORD PTR [esi+0x10]
640014b2:	push   eax
640014b3:	call   0x64013644
640014b8:	add    esp,0x4
640014bb:	xor    eax,eax
640014bd:	mov    DWORD PTR [esi+0x24],0xf
640014c4:	mov    DWORD PTR [esi+0x20],eax
640014c7:	mov    BYTE PTR [esi+0x10],al
640014ca:	mov    ecx,esi
640014cc:	pop    esi
640014cd:	jmp    0x64013718
640014d2:	int3   
640014d3:	int3   
640014d4:	int3   
640014d5:	int3   
640014d6:	int3   
640014d7:	int3   
640014d8:	int3   
640014d9:	int3   
640014da:	int3   
640014db:	int3   
640014dc:	int3   
640014dd:	int3   
640014de:	int3   
640014df:	int3   
640014e0:	cmp    DWORD PTR [ecx+0x24],0x10
640014e4:	jb     0x640014ea
640014e6:	mov    eax,DWORD PTR [ecx+0x10]
640014e9:	ret    
640014ea:	lea    eax,[ecx+0x10]
640014ed:	ret    
640014ee:	int3   
640014ef:	int3   
640014f0:	push   esi
640014f1:	mov    esi,ecx
640014f3:	mov    DWORD PTR [esi],0x64029928
640014f9:	cmp    DWORD PTR [esi+0x24],0x10
640014fd:	jb     0x6400150b
640014ff:	mov    eax,DWORD PTR [esi+0x10]
64001502:	push   eax
64001503:	call   0x64013644
64001508:	add    esp,0x4
6400150b:	xor    eax,eax
6400150d:	mov    DWORD PTR [esi+0x24],0xf
64001514:	mov    DWORD PTR [esi+0x20],eax
64001517:	mov    ecx,esi
64001519:	mov    BYTE PTR [esi+0x10],al
6400151c:	call   0x64013718
64001521:	test   BYTE PTR [esp+0x8],0x1
64001526:	je     0x64001531
64001528:	push   esi
64001529:	call   0x64013644
6400152e:	add    esp,0x4
64001531:	mov    eax,esi
64001533:	pop    esi
64001534:	ret    0x4
64001537:	int3   
64001538:	int3   
64001539:	int3   
6400153a:	int3   
6400153b:	int3   
6400153c:	int3   
6400153d:	int3   
6400153e:	int3   
6400153f:	int3   
64001540:	push   0xffffffff
64001542:	push   0x640230a8
64001547:	mov    eax,fs:0x0
6400154d:	push   eax
6400154e:	push   ecx
6400154f:	push   esi
64001550:	push   edi
64001551:	mov    eax,ds:0x64037644
64001556:	xor    eax,esp
64001558:	push   eax
64001559:	lea    eax,[esp+0x10]
6400155d:	mov    fs:0x0,eax
64001563:	mov    esi,ecx
64001565:	mov    DWORD PTR [esp+0xc],esi
64001569:	mov    edi,DWORD PTR [esp+0x20]
6400156d:	push   edi
6400156e:	call   0x640136c0
64001573:	xor    edx,edx
64001575:	mov    DWORD PTR [esp+0x18],edx
64001579:	push   0xffffffff
6400157b:	lea    ecx,[esi+0xc]
6400157e:	mov    DWORD PTR [esi],0x64029928
64001584:	lea    eax,[edi+0xc]
64001587:	push   edx
64001588:	mov    DWORD PTR [ecx+0x18],0xf
6400158f:	mov    DWORD PTR [ecx+0x14],edx
64001592:	push   eax
64001593:	mov    BYTE PTR [ecx+0x4],dl
64001596:	call   0x64003390
6400159b:	mov    eax,esi
6400159d:	mov    ecx,DWORD PTR [esp+0x10]
640015a1:	mov    DWORD PTR fs:0x0,ecx
640015a8:	pop    ecx
640015a9:	pop    edi
640015aa:	pop    esi
640015ab:	add    esp,0x10
640015ae:	ret    0x4
640015b1:	int3   
640015b2:	int3   
640015b3:	int3   
640015b4:	int3   
640015b5:	int3   
640015b6:	int3   
640015b7:	int3   
640015b8:	int3   
640015b9:	int3   
640015ba:	int3   
640015bb:	int3   
640015bc:	int3   
640015bd:	int3   
640015be:	int3   
640015bf:	int3   
640015c0:	push   ecx
640015c1:	push   edi
640015c2:	mov    edi,DWORD PTR [ecx]
640015c4:	test   edi,edi
640015c6:	je     0x64001609
640015c8:	push   0x0
640015ca:	lea    ecx,[esp+0x8]
640015ce:	call   0x64012ff7
640015d3:	mov    eax,DWORD PTR [edi+0x4]
640015d6:	test   eax,eax
640015d8:	jbe    0x640015e5
640015da:	cmp    eax,0xffffffff
640015dd:	jae    0x640015e5
640015df:	add    eax,0xffffffff
640015e2:	mov    DWORD PTR [edi+0x4],eax
640015e5:	push   esi
640015e6:	mov    esi,DWORD PTR [edi+0x4]
640015e9:	neg    esi
640015eb:	sbb    esi,esi
640015ed:	not    esi
640015ef:	lea    ecx,[esp+0x8]
640015f3:	and    esi,edi
640015f5:	call   0x64013018
640015fa:	test   esi,esi
640015fc:	je     0x64001608
640015fe:	mov    eax,DWORD PTR [esi]
64001600:	mov    edx,DWORD PTR [eax]
64001602:	push   0x1
64001604:	mov    ecx,esi
64001606:	call   edx
64001608:	pop    esi
64001609:	pop    edi
6400160a:	pop    ecx
6400160b:	ret    
6400160c:	int3   
6400160d:	int3   
6400160e:	int3   
6400160f:	int3   
64001610:	mov    eax,DWORD PTR [esp+0x4]
64001614:	push   esi
64001615:	push   eax
64001616:	mov    esi,ecx
64001618:	call   0x64001630
6400161d:	mov    DWORD PTR [esi],0x640242ec
64001623:	mov    eax,esi
64001625:	pop    esi
64001626:	ret    0x4
64001629:	int3   
6400162a:	int3   
6400162b:	int3   
6400162c:	int3   
6400162d:	int3   
6400162e:	int3   
6400162f:	int3   
64001630:	push   0xffffffff
64001632:	push   0x64023078
64001637:	mov    eax,fs:0x0
6400163d:	push   eax
6400163e:	push   ecx
6400163f:	push   esi
64001640:	push   edi
64001641:	mov    eax,ds:0x64037644
64001646:	xor    eax,esp
64001648:	push   eax
64001649:	lea    eax,[esp+0x10]
6400164d:	mov    fs:0x0,eax
64001653:	mov    esi,ecx
64001655:	mov    DWORD PTR [esp+0xc],esi
64001659:	mov    edi,DWORD PTR [esp+0x20]
6400165d:	push   edi
6400165e:	call   0x640136c0
64001663:	xor    edx,edx
64001665:	mov    DWORD PTR [esp+0x18],edx
64001669:	push   0xffffffff
6400166b:	lea    ecx,[esi+0xc]
6400166e:	mov    DWORD PTR [esi],0x640242d4
64001674:	lea    eax,[edi+0xc]
64001677:	push   edx
64001678:	mov    DWORD PTR [ecx+0x18],0xf
6400167f:	mov    DWORD PTR [ecx+0x14],edx
64001682:	push   eax
64001683:	mov    BYTE PTR [ecx+0x4],dl
64001686:	call   0x64003390
6400168b:	mov    eax,esi
6400168d:	mov    ecx,DWORD PTR [esp+0x10]
64001691:	mov    DWORD PTR fs:0x0,ecx
64001698:	pop    ecx
64001699:	pop    edi
6400169a:	pop    esi
6400169b:	add    esp,0x10
6400169e:	ret    0x4
640016a1:	int3   
640016a2:	int3   
640016a3:	int3   
640016a4:	int3   
640016a5:	int3   
640016a6:	int3   
640016a7:	int3   
640016a8:	int3   
640016a9:	int3   
640016aa:	int3   
640016ab:	int3   
640016ac:	int3   
640016ad:	int3   
640016ae:	int3   
640016af:	int3   
640016b0:	mov    eax,esi
640016b2:	mov    edx,0xe3
640016b7:	push   edi
640016b8:	mov    ecx,DWORD PTR [eax+0x4]
640016bb:	mov    edi,DWORD PTR [eax]
640016bd:	xor    edi,ecx
640016bf:	and    edi,0x7ffffffe
640016c5:	xor    edi,DWORD PTR [eax]
640016c7:	and    cl,0x1
640016ca:	shr    edi,1
640016cc:	sub    edx,0x1
640016cf:	neg    cl
640016d1:	sbb    ecx,ecx
640016d3:	and    ecx,0x9908b0df
640016d9:	xor    edi,ecx
640016db:	xor    edi,DWORD PTR [eax+0x634]
640016e1:	add    eax,0x4
640016e4:	test   edx,edx
640016e6:	mov    DWORD PTR [eax-0x4],edi
640016e9:	jne    0x640016b8
640016eb:	mov    edx,0x18c
640016f0:	mov    ecx,DWORD PTR [eax+0x4]
640016f3:	mov    edi,DWORD PTR [eax]
640016f5:	xor    edi,ecx
640016f7:	and    edi,0x7ffffffe
640016fd:	xor    edi,DWORD PTR [eax]
640016ff:	and    cl,0x1
64001702:	shr    edi,1
64001704:	neg    cl
64001706:	sbb    ecx,ecx
64001708:	and    ecx,0x9908b0df
6400170e:	xor    edi,ecx
64001710:	xor    edi,DWORD PTR [eax-0x38c]
64001716:	add    eax,0x4
64001719:	sub    edx,0x1
6400171c:	mov    DWORD PTR [eax-0x4],edi
6400171f:	jne    0x640016f0
64001721:	mov    ecx,DWORD PTR [esi]
64001723:	mov    edx,DWORD PTR [eax]
64001725:	xor    edx,ecx
64001727:	and    edx,0x7ffffffe
6400172d:	xor    edx,DWORD PTR [eax]
6400172f:	and    cl,0x1
64001732:	shr    edx,1
64001734:	neg    cl
64001736:	pop    edi
64001737:	sbb    ecx,ecx
64001739:	and    ecx,0x9908b0df
6400173f:	xor    edx,ecx
64001741:	xor    edx,DWORD PTR [eax-0x38c]
64001747:	mov    DWORD PTR [eax],edx
64001749:	mov    DWORD PTR [esi+0x9c4],0x270
64001753:	mov    DWORD PTR [esi+0x9c0],esi
64001759:	ret    
6400175a:	int3   
6400175b:	int3   
6400175c:	int3   
6400175d:	int3   
6400175e:	int3   
6400175f:	int3   
64001760:	push   esi
64001761:	mov    esi,eax
64001763:	push   edi
64001764:	mov    ecx,0x1
64001769:	mov    DWORD PTR [esi],edx
6400176b:	jmp    0x64001770
6400176d:	lea    ecx,[ecx+0x0]
64001770:	mov    edx,DWORD PTR [eax]
64001772:	mov    edi,edx
64001774:	shr    edi,0x1e
64001777:	xor    edi,edx
64001779:	imul   edi,edi,0x6c078965
6400177f:	add    edi,ecx
64001781:	mov    DWORD PTR [eax+0x4],edi
64001784:	add    ecx,0x1
64001787:	add    eax,0x4
6400178a:	cmp    ecx,0x270
64001790:	jl     0x64001770
64001792:	call   0x640016b0
64001797:	pop    edi
64001798:	pop    esi
64001799:	ret    
6400179a:	int3   
6400179b:	int3   
6400179c:	int3   
6400179d:	int3   
6400179e:	int3   
6400179f:	int3   
640017a0:	push   esi
640017a1:	push   edi
640017a2:	mov    edi,ebx
640017a4:	shr    edi,1
640017a6:	or     edi,ebx
640017a8:	mov    esi,eax
640017aa:	mov    eax,edi
640017ac:	shr    eax,0x2
640017af:	or     edi,eax
640017b1:	mov    ecx,edi
640017b3:	shr    ecx,0x4
640017b6:	or     edi,ecx
640017b8:	mov    edx,edi
640017ba:	shr    edx,0x8
640017bd:	or     edi,edx
640017bf:	mov    eax,edi
640017c1:	shr    eax,0x10
640017c4:	or     edi,eax
640017c6:	cmp    DWORD PTR [esi+0x9c4],0x0
640017cd:	jne    0x640017d4
640017cf:	call   0x640016b0
640017d4:	mov    eax,DWORD PTR [esi+0x9c0]
640017da:	add    DWORD PTR [esi+0x9c4],0xffffffff
640017e1:	mov    ecx,DWORD PTR [eax]
640017e3:	add    eax,0x4
640017e6:	mov    edx,ecx
640017e8:	shr    edx,0xb
640017eb:	xor    ecx,edx
640017ed:	mov    DWORD PTR [esi+0x9c0],eax
640017f3:	mov    eax,ecx
640017f5:	and    eax,0xff3a58ad
640017fa:	shl    eax,0x7
640017fd:	xor    ecx,eax
640017ff:	mov    edx,ecx
64001801:	and    edx,0xffffdf8c
64001807:	shl    edx,0xf
6400180a:	xor    ecx,edx
6400180c:	mov    eax,ecx
6400180e:	shr    eax,0x12
64001811:	xor    eax,ecx
64001813:	and    eax,edi
64001815:	cmp    eax,ebx
64001817:	ja     0x640017c6
64001819:	pop    edi
6400181a:	pop    esi
6400181b:	ret    
6400181c:	int3   
6400181d:	int3   
6400181e:	int3   
6400181f:	int3   
64001820:	cmp    DWORD PTR ds:0x640399e4,0x0
64001827:	jne    0x640018a8
64001829:	push   esi
6400182a:	push   0x11c
6400182f:	push   0x0
64001831:	push   0x640399e8
64001836:	mov    DWORD PTR ds:0x64039b04,0x0
64001840:	call   0x64015160
64001845:	mov    esi,DWORD PTR ds:0x640240f4
6400184b:	add    esp,0xc
6400184e:	push   0x640399e8
64001853:	mov    DWORD PTR ds:0x640399e8,0x114
6400185d:	call   esi
6400185f:	test   eax,eax
64001861:	je     0x640018a4
64001863:	cmp    DWORD PTR ds:0x640399f8,0x2
6400186a:	mov    DWORD PTR ds:0x640399e4,0x1
64001874:	jne    0x640018a4
64001876:	cmp    DWORD PTR ds:0x640399ec,0x5
6400187d:	jb     0x640018a4
6400187f:	push   0x11c
64001884:	push   0x0
64001886:	push   0x640399e8
6400188b:	call   0x64015160
64001890:	add    esp,0xc
64001893:	push   0x640399e8
64001898:	mov    DWORD PTR ds:0x640399e8,0x11c
640018a2:	call   esi
640018a4:	mov    eax,edi
640018a6:	pop    esi
640018a7:	ret    
640018a8:	mov    eax,edi
640018aa:	ret    
640018ab:	int3   
640018ac:	int3   
640018ad:	int3   
640018ae:	int3   
640018af:	int3   
640018b0:	push   ebp
640018b1:	mov    ebp,esp
640018b3:	and    esp,0xfffffff8
640018b6:	push   0xffffffff
640018b8:	push   0x64022f60
640018bd:	mov    eax,fs:0x0
640018c3:	push   eax
640018c4:	sub    esp,0x50
640018c7:	push   ebx
640018c8:	push   esi
640018c9:	push   edi
640018ca:	mov    eax,ds:0x64037644
640018cf:	xor    eax,esp
640018d1:	push   eax
640018d2:	lea    eax,[esp+0x60]
640018d6:	mov    fs:0x0,eax
640018dc:	xor    ebx,ebx
640018de:	push   0x4000
640018e3:	mov    DWORD PTR [esp+0x18],ebx
640018e7:	call   0x64012f9a
640018ec:	mov    edi,eax
640018ee:	push   0x38
640018f0:	mov    DWORD PTR [esp+0x70],ebx
640018f4:	push   0x640295f8
640018f9:	lea    eax,[esp+0x30]
640018fd:	push   0x2f
640018ff:	push   eax
64001900:	mov    DWORD PTR [esp+0x58],ebx
64001904:	mov    DWORD PTR [esp+0x5c],ebx
64001908:	mov    DWORD PTR [esp+0x60],ebx
6400190c:	mov    DWORD PTR [esp+0x3c],ebx
64001910:	mov    DWORD PTR [esp+0x38],ebx
64001914:	call   0x6400e3b0
64001919:	add    esp,0x14
6400191c:	test   eax,eax
6400191e:	je     0x6400194d
64001920:	mov    esi,DWORD PTR [ebp+0x8]
64001923:	push   ebx
64001924:	mov    DWORD PTR [esp+0x1c],ebx
64001928:	mov    DWORD PTR [esi],ebx
6400192a:	call   0x64013644
6400192f:	push   edi
64001930:	call   0x64013644
64001935:	add    esp,0x8
64001938:	mov    eax,esi
6400193a:	mov    ecx,DWORD PTR [esp+0x60]
6400193e:	mov    DWORD PTR fs:0x0,ecx
64001945:	pop    ecx
64001946:	pop    edi
64001947:	pop    esi
64001948:	pop    ebx
64001949:	mov    esp,ebp
6400194b:	pop    ebp
6400194c:	ret    
6400194d:	mov    ecx,DWORD PTR [ebp+0x10]
64001950:	mov    edx,DWORD PTR [ebp+0xc]
64001953:	mov    DWORD PTR [esp+0x28],ecx
64001957:	mov    DWORD PTR [esp+0x24],edx
6400195b:	jmp    0x64001960
6400195d:	lea    ecx,[ecx+0x0]
64001960:	lea    ecx,[esp+0x24]
64001964:	lea    eax,[ebx+edi*1]
64001967:	push   0x4
64001969:	push   ecx
6400196a:	mov    DWORD PTR [esp+0x3c],0x4000
64001972:	mov    DWORD PTR [esp+0x38],eax
64001976:	call   0x6400e590
6400197b:	mov    esi,eax
6400197d:	add    esp,0x8
64001980:	cmp    esi,0xfffffffc
64001983:	mov    DWORD PTR [esp+0x18],esi
64001987:	jl     0x6400199b
64001989:	cmp    esi,0xfffffffd
6400198c:	jle    0x64001a32
64001992:	cmp    esi,0x2
64001995:	je     0x64001a32
6400199b:	mov    ecx,DWORD PTR [esp+0x34]
6400199f:	mov    eax,0x4000
640019a4:	sub    eax,ecx
640019a6:	add    ebx,eax
640019a8:	test   ecx,ecx
640019aa:	mov    DWORD PTR [esp+0x14],ebx
640019ae:	jne    0x64001a19
640019b0:	mov    esi,edi
640019b2:	mov    DWORD PTR [esp+0x1c],ecx
640019b6:	mov    DWORD PTR [esp+0x20],esi
640019ba:	add    ebx,0x4000
640019c0:	push   ebx
640019c1:	mov    BYTE PTR [esp+0x6c],0x1
640019c6:	call   0x64012f9a
640019cb:	mov    edi,eax
640019cd:	add    esp,0x4
640019d0:	test   edi,edi
640019d2:	mov    DWORD PTR [esp+0x10],0x0
640019da:	je     0x640019e6
640019dc:	push   0x0
640019de:	call   0x64013644
640019e3:	add    esp,0x4
640019e6:	mov    edx,DWORD PTR [esp+0x10]
640019ea:	push   edx
640019eb:	call   0x64013644
640019f0:	mov    ebx,DWORD PTR [esp+0x18]
640019f4:	push   ebx
640019f5:	push   esi
640019f6:	push   edi
640019f7:	call   0x640151e0
640019fc:	push   esi
640019fd:	mov    BYTE PTR [esp+0x7c],0x0
64001a02:	call   0x64013644
64001a07:	add    esp,0x14
64001a0a:	cmp    DWORD PTR [esp+0x34],0x0
64001a0f:	je     0x64001960
64001a15:	mov    esi,DWORD PTR [esp+0x18]
64001a19:	lea    ecx,[esp+0x24]
64001a1d:	push   ecx
64001a1e:	call   0x6400fb80
64001a23:	add    esp,0x4
64001a26:	cmp    esi,0x1
64001a29:	jne    0x64001a72
64001a2b:	mov    edx,DWORD PTR [ebp+0x14]
64001a2e:	mov    DWORD PTR [edx],ebx
64001a30:	jmp    0x64001a96
64001a32:	lea    eax,[esp+0x24]
64001a36:	push   eax
64001a37:	call   0x6400fb80
64001a3c:	mov    esi,DWORD PTR [ebp+0x8]
64001a3f:	push   0x0
64001a41:	mov    DWORD PTR [esp+0x28],0x0
64001a49:	mov    DWORD PTR [esi],0x0
64001a4f:	call   0x64013644
64001a54:	push   edi
64001a55:	call   0x64013644
64001a5a:	add    esp,0xc
64001a5d:	mov    eax,esi
64001a5f:	mov    ecx,DWORD PTR [esp+0x60]
64001a63:	mov    DWORD PTR fs:0x0,ecx
64001a6a:	pop    ecx
64001a6b:	pop    edi
64001a6c:	pop    esi
64001a6d:	pop    ebx
64001a6e:	mov    esp,ebp
64001a70:	pop    ebp
64001a71:	ret    
64001a72:	test   edi,edi
64001a74:	mov    DWORD PTR [esp+0x18],0x0
64001a7c:	je     0x64001a87
64001a7e:	push   edi
64001a7f:	call   0x64013644
64001a84:	add    esp,0x4
64001a87:	mov    eax,DWORD PTR [esp+0x18]
64001a8b:	push   eax
64001a8c:	xor    edi,edi
64001a8e:	call   0x64013644
64001a93:	add    esp,0x4
64001a96:	mov    esi,DWORD PTR [ebp+0x8]
64001a99:	push   0x0
64001a9b:	mov    DWORD PTR [esi],edi
64001a9d:	call   0x64013644
64001aa2:	add    esp,0x4
64001aa5:	mov    eax,esi
64001aa7:	mov    ecx,DWORD PTR [esp+0x60]
64001aab:	mov    DWORD PTR fs:0x0,ecx
64001ab2:	pop    ecx
64001ab3:	pop    edi
64001ab4:	pop    esi
64001ab5:	pop    ebx
64001ab6:	mov    esp,ebp
64001ab8:	pop    ebp
64001ab9:	ret    
64001aba:	int3   
64001abb:	int3   
64001abc:	int3   
64001abd:	int3   
64001abe:	int3   
64001abf:	int3   
64001ac0:	sub    esp,0x74
64001ac3:	mov    eax,ds:0x64037644
64001ac8:	xor    eax,esp
64001aca:	mov    DWORD PTR [esp+0x70],eax
64001ace:	mov    eax,DWORD PTR [esp+0x78]
64001ad2:	movzx  ecx,BYTE PTR [eax+0xf]
64001ad6:	movzx  edx,BYTE PTR [eax+0xe]
64001ada:	push   ecx
64001adb:	movzx  ecx,BYTE PTR [eax+0xd]
64001adf:	push   edx
64001ae0:	movzx  edx,BYTE PTR [eax+0xc]
64001ae4:	push   ecx
64001ae5:	movzx  ecx,BYTE PTR [eax+0xb]
64001ae9:	push   edx
64001aea:	movzx  edx,BYTE PTR [eax+0xa]
64001aee:	push   ecx
64001aef:	movzx  ecx,BYTE PTR [eax+0x9]
64001af3:	push   edx
64001af4:	movzx  edx,BYTE PTR [eax+0x8]
64001af8:	push   ecx
64001af9:	movzx  ecx,WORD PTR [eax+0x6]
64001afd:	push   edx
64001afe:	movzx  edx,WORD PTR [eax+0x4]
64001b02:	mov    eax,DWORD PTR [eax]
64001b04:	push   ecx
64001b05:	push   edx
64001b06:	push   eax
64001b07:	push   0x64029618
64001b0c:	push   0x32
64001b0e:	push   0x6402963c
64001b13:	mov    DWORD PTR [esp+0x38],0x0
64001b1b:	call   0x64002e70
64001b20:	add    esp,0xc
64001b23:	push   eax
64001b24:	lea    ecx,[esp+0x34]
64001b28:	push   ecx
64001b29:	call   0x64014667
64001b2e:	lea    eax,[esp+0x38]
64001b32:	mov    DWORD PTR [esi+0x18],0xf
64001b39:	mov    DWORD PTR [esi+0x14],0x0
64001b40:	add    esp,0x34
64001b43:	mov    BYTE PTR [esi+0x4],0x0
64001b47:	lea    edx,[eax+0x1]
64001b4a:	lea    ebx,[ebx+0x0]
64001b50:	mov    cl,BYTE PTR [eax]
64001b52:	add    eax,0x1
64001b55:	test   cl,cl
64001b57:	jne    0x64001b50
64001b59:	sub    eax,edx
64001b5b:	push   eax
64001b5c:	lea    edx,[esp+0x8]
64001b60:	push   edx
64001b61:	mov    ecx,esi
64001b63:	call   0x64003470
64001b68:	mov    ecx,DWORD PTR [esp+0x70]
64001b6c:	xor    ecx,esp
64001b6e:	mov    eax,esi
64001b70:	call   0x64013d06
64001b75:	add    esp,0x74
64001b78:	ret    
64001b79:	int3   
64001b7a:	int3   
64001b7b:	int3   
64001b7c:	int3   
64001b7d:	int3   
64001b7e:	int3   
64001b7f:	int3   
64001b80:	push   ebp
64001b81:	mov    ebp,esp
64001b83:	sub    esp,0x8
64001b86:	mov    eax,ds:0x64037644
64001b8b:	xor    eax,ebp
64001b8d:	mov    DWORD PTR [ebp-0x4],eax
64001b90:	push   ebx
64001b91:	push   esi
64001b92:	mov    esi,DWORD PTR [ebp+0xc]
64001b95:	push   edi
64001b96:	call   DWORD PTR ds:0x6403761c
64001b9c:	mov    edi,DWORD PTR [ebp+0x8]
64001b9f:	mov    DWORD PTR [edi],0x0
64001ba5:	mov    DWORD PTR [ebp-0x8],eax
64001ba8:	xor    eax,eax
64001baa:	mov    DWORD PTR [edi+0x4],eax
64001bad:	mov    DWORD PTR [edi+0x8],eax
64001bb0:	mov    DWORD PTR [edi+0xc],eax
64001bb3:	cmp    DWORD PTR [esi+0x18],0x10
64001bb7:	jb     0x64001bbe
64001bb9:	mov    ebx,DWORD PTR [esi+0x4]
64001bbc:	jmp    0x64001bc1
64001bbe:	lea    ebx,[esi+0x4]
64001bc1:	test   ebx,ebx
64001bc3:	jne    0x64001bc9
64001bc5:	xor    eax,eax
64001bc7:	jmp    0x64001c0e
64001bc9:	push   ebx
64001bca:	call   DWORD PTR ds:0x64024068
64001bd0:	mov    edi,eax
64001bd2:	add    edi,0x1
64001bd5:	cmp    edi,0x3fffffff
64001bdb:	jg     0x64001c09
64001bdd:	lea    eax,[edi+edi*1]
64001be0:	call   0x64013d20
64001be5:	mov    esi,esp
64001be7:	test   esi,esi
64001be9:	je     0x64001c09
64001beb:	mov    eax,DWORD PTR [ebp-0x8]
64001bee:	push   edi
64001bef:	push   esi
64001bf0:	push   0xffffffff
64001bf2:	push   ebx
64001bf3:	push   0x0
64001bf5:	push   eax
64001bf6:	mov    WORD PTR [esi],0x0
64001bfb:	call   DWORD PTR ds:0x64024028
64001c01:	neg    eax
64001c03:	sbb    eax,eax
64001c05:	and    eax,esi
64001c07:	jmp    0x64001c0b
64001c09:	xor    eax,eax
64001c0b:	mov    edi,DWORD PTR [ebp+0x8]
64001c0e:	push   edi
64001c0f:	push   eax
64001c10:	call   DWORD PTR ds:0x640241fc
64001c16:	mov    eax,edi
64001c18:	lea    esp,[ebp-0x14]
64001c1b:	pop    edi
64001c1c:	pop    esi
64001c1d:	pop    ebx
64001c1e:	mov    ecx,DWORD PTR [ebp-0x4]
64001c21:	xor    ecx,ebp
64001c23:	call   0x64013d06
64001c28:	mov    esp,ebp
64001c2a:	pop    ebp
64001c2b:	ret    
64001c2c:	int3   
64001c2d:	int3   
64001c2e:	int3   
64001c2f:	int3   
64001c30:	push   0xffffffff
64001c32:	push   0x64023741
64001c37:	mov    eax,fs:0x0
64001c3d:	push   eax
64001c3e:	sub    esp,0x4c
64001c41:	push   ebx
64001c42:	push   esi
64001c43:	push   edi
64001c44:	mov    eax,ds:0x64037644
64001c49:	xor    eax,esp
64001c4b:	push   eax
64001c4c:	lea    eax,[esp+0x5c]
64001c50:	mov    fs:0x0,eax
64001c56:	mov    edi,DWORD PTR [esp+0x6c]
64001c5a:	xor    ebx,ebx
64001c5c:	mov    DWORD PTR [esp+0x64],ebx
64001c60:	mov    DWORD PTR [esp+0x10],ebx
64001c64:	mov    eax,ds:0x64038e64
64001c69:	mov    edx,DWORD PTR [eax+0xc]
64001c6c:	mov    ecx,0x64038e64
64001c71:	call   edx
64001c73:	add    eax,0x10
64001c76:	mov    DWORD PTR [edi],eax
64001c78:	mov    DWORD PTR [esp+0x64],ebx
64001c7c:	mov    ecx,0x1
64001c81:	sub    ecx,DWORD PTR [eax-0x4]
64001c84:	mov    eax,DWORD PTR [eax-0x8]
64001c87:	sub    eax,0x800
64001c8c:	or     eax,ecx
64001c8e:	mov    DWORD PTR [esp+0x10],0x1
64001c96:	jge    0x64001ca4
64001c98:	push   0x800
64001c9d:	mov    ecx,edi
64001c9f:	call   0x640043e0
64001ca4:	mov    eax,DWORD PTR [edi]
64001ca6:	push   0x800
64001cab:	push   eax
64001cac:	call   DWORD PTR ds:0x64024058
64001cb2:	test   eax,eax
64001cb4:	jne    0x64001d1c
64001cb6:	push   0x6402967c
64001cbb:	push   0x1c
64001cbd:	push   0x640296ac
64001cc2:	call   0x64002e70
64001cc7:	mov    ecx,eax
64001cc9:	add    esp,0xc
64001ccc:	mov    DWORD PTR [esp+0x2c],0xf
64001cd4:	mov    DWORD PTR [esp+0x28],ebx
64001cd8:	mov    BYTE PTR [esp+0x18],bl
64001cdc:	lea    esi,[ecx+0x1]
64001cdf:	nop
64001ce0:	mov    dl,BYTE PTR [ecx]
64001ce2:	add    ecx,0x1
64001ce5:	cmp    dl,bl
64001ce7:	jne    0x64001ce0
64001ce9:	sub    ecx,esi
64001ceb:	push   ecx
64001cec:	push   eax
64001ced:	lea    ecx,[esp+0x1c]
64001cf1:	call   0x64003470
64001cf6:	lea    eax,[esp+0x14]
64001cfa:	push   eax
64001cfb:	lea    ecx,[esp+0x34]
64001cff:	push   ecx
64001d00:	mov    DWORD PTR [esp+0x6c],0x1
64001d08:	call   0x64001430
64001d0d:	push   0x6402bcb0
64001d12:	lea    edx,[esp+0x34]
64001d16:	push   edx
64001d17:	call   0x64013872
64001d1c:	mov    edx,DWORD PTR [edi]
64001d1e:	cmp    edx,ebx
64001d20:	jne    0x64001d26
64001d22:	xor    eax,eax
64001d24:	jmp    0x64001d41
64001d26:	mov    eax,edx
64001d28:	lea    esi,[eax+0x2]
64001d2b:	jmp    0x64001d30
64001d2d:	lea    ecx,[ecx+0x0]
64001d30:	mov    cx,WORD PTR [eax]
64001d33:	add    eax,0x2
64001d36:	cmp    cx,bx
64001d39:	jne    0x64001d30
64001d3b:	sub    eax,esi
64001d3d:	sar    eax,1
64001d3f:	js     0x64001d85
64001d41:	cmp    eax,DWORD PTR [edx-0x8]
64001d44:	jg     0x64001d85
64001d46:	mov    DWORD PTR [edx-0xc],eax
64001d49:	mov    ecx,DWORD PTR [edi]
64001d4b:	mov    WORD PTR [ecx+eax*2],bx
64001d4f:	mov    ecx,DWORD PTR [edi]
64001d51:	mov    edx,DWORD PTR [ecx-0xc]
64001d54:	lea    eax,[edx-0x1]
64001d57:	cmp    eax,ebx
64001d59:	jl     0x64001d85
64001d5b:	cmp    eax,edx
64001d5d:	jg     0x64001d85
64001d5f:	movzx  eax,WORD PTR [ecx+eax*2]
64001d63:	cmp    ax,0x5c
64001d67:	je     0x64001d70
64001d69:	push   0x5c
64001d6b:	call   0x64002bf0
64001d70:	mov    eax,edi
64001d72:	mov    ecx,DWORD PTR [esp+0x5c]
64001d76:	mov    DWORD PTR fs:0x0,ecx
64001d7d:	pop    ecx
64001d7e:	pop    edi
64001d7f:	pop    esi
64001d80:	pop    ebx
64001d81:	add    esp,0x58
64001d84:	ret    
64001d85:	push   0x80070057
64001d8a:	call   0x64001040
64001d8f:	int3   
64001d90:	push   0xffffffff
64001d92:	push   0x64023ac1
64001d97:	mov    eax,fs:0x0
64001d9d:	push   eax
64001d9e:	sub    esp,0x50
64001da1:	push   ebx
64001da2:	push   ebp
64001da3:	push   esi
64001da4:	push   edi
64001da5:	mov    eax,ds:0x64037644
64001daa:	xor    eax,esp
64001dac:	push   eax
64001dad:	lea    eax,[esp+0x64]
64001db1:	mov    fs:0x0,eax
64001db7:	mov    esi,DWORD PTR [esp+0x74]
64001dbb:	xor    ebx,ebx
64001dbd:	mov    DWORD PTR [esp+0x6c],ebx
64001dc1:	push   esi
64001dc2:	mov    DWORD PTR [esp+0x1c],ebx
64001dc6:	call   0x64001c30
64001dcb:	add    esp,0x4
64001dce:	mov    DWORD PTR [esp+0x6c],ebx
64001dd2:	mov    eax,DWORD PTR [esi]
64001dd4:	mov    ebp,0x1
64001dd9:	sub    eax,0x10
64001ddc:	cmp    DWORD PTR [eax+0xc],ebp
64001ddf:	mov    DWORD PTR [esp+0x18],ebp
64001de3:	jle    0x64001df0
64001de5:	mov    eax,DWORD PTR [eax+0x4]
64001de8:	push   eax
64001de9:	mov    ecx,esi
64001deb:	call   0x64003820
64001df0:	mov    eax,DWORD PTR [esi]
64001df2:	push   0x5c
64001df4:	push   eax
64001df5:	call   0x640147e8
64001dfa:	mov    edi,eax
64001dfc:	add    esp,0x8
64001dff:	cmp    edi,ebx
64001e01:	jne    0x64001e67
64001e03:	push   0x640296cc
64001e08:	push   0x18
64001e0a:	push   0x640296f8
64001e0f:	call   0x64002e70
64001e14:	mov    ecx,eax
64001e16:	add    esp,0xc
64001e19:	mov    DWORD PTR [esp+0x34],0xf
64001e21:	mov    DWORD PTR [esp+0x30],ebx
64001e25:	mov    BYTE PTR [esp+0x20],bl
64001e29:	lea    esi,[ecx+0x1]
64001e2c:	lea    esp,[esp+0x0]
64001e30:	mov    dl,BYTE PTR [ecx]
64001e32:	add    ecx,ebp
64001e34:	cmp    dl,bl
64001e36:	jne    0x64001e30
64001e38:	sub    ecx,esi
64001e3a:	push   ecx
64001e3b:	push   eax
64001e3c:	lea    ecx,[esp+0x24]
64001e40:	call   0x64003470
64001e45:	lea    ecx,[esp+0x1c]
64001e49:	push   ecx
64001e4a:	lea    edx,[esp+0x3c]
64001e4e:	push   edx
64001e4f:	mov    DWORD PTR [esp+0x74],ebp
64001e53:	call   0x64001430
64001e58:	push   0x6402bcb0
64001e5d:	lea    eax,[esp+0x3c]
64001e61:	push   eax
64001e62:	call   0x64013872
64001e67:	mov    eax,DWORD PTR [esi]
64001e69:	sub    eax,0x10
64001e6c:	cmp    DWORD PTR [eax+0xc],ebp
64001e6f:	jle    0x64001e7c
64001e71:	mov    ecx,DWORD PTR [eax+0x4]
64001e74:	push   ecx
64001e75:	mov    ecx,esi
64001e77:	call   0x64003820
64001e7c:	mov    ecx,DWORD PTR [esi]
64001e7e:	sub    edi,ecx
64001e80:	sar    edi,1
64001e82:	add    edi,ebp
64001e84:	cmp    ecx,ebx
64001e86:	jne    0x64001e8c
64001e88:	xor    eax,eax
64001e8a:	jmp    0x64001ea7
64001e8c:	mov    eax,ecx
64001e8e:	lea    ebp,[eax+0x2]
64001e91:	mov    dx,WORD PTR [eax]
64001e94:	add    eax,0x2
64001e97:	cmp    dx,bx
64001e9a:	jne    0x64001e91
64001e9c:	sub    eax,ebp
64001e9e:	sar    eax,1
64001ea0:	js     0x64001efa
64001ea2:	mov    ebp,0x1
64001ea7:	cmp    eax,DWORD PTR [ecx-0x8]
64001eaa:	jg     0x64001efa
64001eac:	mov    DWORD PTR [ecx-0xc],eax
64001eaf:	mov    edx,DWORD PTR [esi]
64001eb1:	mov    WORD PTR [edx+eax*2],bx
64001eb5:	mov    eax,DWORD PTR [esi]
64001eb7:	sub    eax,0x10
64001eba:	mov    ecx,ebp
64001ebc:	sub    ecx,DWORD PTR [eax+0xc]
64001ebf:	mov    eax,DWORD PTR [eax+0x8]
64001ec2:	sub    eax,edi
64001ec4:	or     eax,ecx
64001ec6:	jge    0x64001ed0
64001ec8:	push   edi
64001ec9:	mov    ecx,esi
64001ecb:	call   0x640043e0
64001ed0:	cmp    edi,ebx
64001ed2:	jl     0x64001efa
64001ed4:	mov    eax,DWORD PTR [esi]
64001ed6:	cmp    edi,DWORD PTR [eax-0x8]
64001ed9:	jg     0x64001efa
64001edb:	mov    DWORD PTR [eax-0xc],edi
64001ede:	mov    eax,DWORD PTR [esi]
64001ee0:	mov    WORD PTR [eax+edi*2],bx
64001ee4:	mov    eax,esi
64001ee6:	mov    ecx,DWORD PTR [esp+0x64]
64001eea:	mov    DWORD PTR fs:0x0,ecx
64001ef1:	pop    ecx
64001ef2:	pop    edi
64001ef3:	pop    esi
64001ef4:	pop    ebp
64001ef5:	pop    ebx
64001ef6:	add    esp,0x5c
64001ef9:	ret    
64001efa:	push   0x80070057
64001eff:	call   0x64001040
64001f04:	int3   
64001f05:	int3   
64001f06:	int3   
64001f07:	int3   
64001f08:	int3   
64001f09:	int3   
64001f0a:	int3   
64001f0b:	int3   
64001f0c:	int3   
64001f0d:	int3   
64001f0e:	int3   
64001f0f:	int3   
64001f10:	push   ebp
64001f11:	mov    ebp,esp
64001f13:	push   0xffffffff
64001f15:	push   0x64023b8f
64001f1a:	mov    eax,fs:0x0
64001f20:	push   eax
64001f21:	sub    esp,0x134
64001f27:	mov    eax,ds:0x64037644
64001f2c:	xor    eax,ebp
64001f2e:	mov    DWORD PTR [ebp-0x10],eax
64001f31:	push   ebx
64001f32:	push   esi
64001f33:	push   edi
64001f34:	push   eax
64001f35:	lea    eax,[ebp-0xc]
64001f38:	mov    fs:0x0,eax
64001f3e:	call   DWORD PTR ds:0x6403761c
64001f44:	mov    ebx,eax
64001f46:	lea    eax,[ebp-0x7c]
64001f49:	push   eax
64001f4a:	call   0x64001d90
64001f4f:	add    esp,0x4
64001f52:	push   0x0
64001f54:	push   0x0
64001f56:	lea    ecx,[ebp-0x88]
64001f5c:	push   ecx
64001f5d:	lea    edx,[ebp-0x84]
64001f63:	push   edx
64001f64:	lea    eax,[ebp-0x80]
64001f67:	push   eax
64001f68:	push   0x0
64001f6a:	mov    DWORD PTR [ebp-0x4],0x0
64001f71:	mov    ecx,DWORD PTR [ebp-0x7c]
64001f74:	push   0x0
64001f76:	push   ecx
64001f77:	call   DWORD PTR ds:0x6402405c
64001f7d:	test   eax,eax
64001f7f:	jne    0x640020af
64001f85:	call   DWORD PTR ds:0x64024064
64001f8b:	push   0xa
64001f8d:	lea    edx,[ebp-0x78]
64001f90:	push   edx
64001f91:	push   eax
64001f92:	call   0x6401484a
64001f97:	mov    eax,DWORD PTR [ebp-0x7c]
64001f9a:	add    esp,0xc
64001f9d:	test   eax,eax
64001f9f:	mov    edi,eax
64001fa1:	je     0x64001fcf
64001fa3:	push   eax
64001fa4:	call   DWORD PTR ds:0x64024030
64001faa:	add    eax,0x1
64001fad:	cmp    eax,0x3fffffff
64001fb2:	jle    0x64001fb8
64001fb4:	xor    edi,edi
64001fb6:	jmp    0x64001fcf
64001fb8:	lea    esi,[eax+eax*1]
64001fbb:	mov    eax,esi
64001fbd:	call   0x64013d20
64001fc2:	mov    eax,esp
64001fc4:	push   ebx
64001fc5:	push   esi
64001fc6:	push   edi
64001fc7:	push   eax
64001fc8:	call   0x64001000
64001fcd:	mov    edi,eax
64001fcf:	push   0x64029744
64001fd4:	push   0x21
64001fd6:	push   0x64029774
64001fdb:	call   0x64002e70
64001fe0:	mov    ecx,eax
64001fe2:	add    esp,0xc
64001fe5:	mov    DWORD PTR [ebp-0x8c],0xf
64001fef:	mov    DWORD PTR [ebp-0x90],0x0
64001ff9:	mov    BYTE PTR [ebp-0xa0],0x0
64002000:	lea    esi,[ecx+0x1]
64002003:	mov    dl,BYTE PTR [ecx]
64002005:	add    ecx,0x1
64002008:	test   dl,dl
6400200a:	jne    0x64002003
6400200c:	sub    ecx,esi
6400200e:	push   ecx
6400200f:	push   eax
64002010:	lea    ecx,[ebp-0xa4]
64002016:	call   0x64003470
6400201b:	lea    eax,[ebp-0xa4]
64002021:	push   eax
64002022:	lea    esi,[ebp-0xe8]
64002028:	mov    BYTE PTR [ebp-0x4],0x1
6400202c:	call   0x640068c0
64002031:	add    esp,0x4
64002034:	mov    esi,eax
64002036:	push   0x64029718
6400203b:	push   0x7
6400203d:	push   0x6402973c
64002042:	mov    BYTE PTR [ebp-0x4],0x2
64002046:	call   0x64002e70
6400204b:	add    esp,0xc
6400204e:	push   esi
6400204f:	mov    edi,eax
64002051:	lea    esi,[ebp-0x104]
64002057:	call   0x640068c0
6400205c:	add    esp,0x4
6400205f:	push   eax
64002060:	lea    edi,[ebp-0x78]
64002063:	lea    esi,[ebp-0x13c]
64002069:	mov    BYTE PTR [ebp-0x4],0x3
6400206d:	call   0x640068c0
64002072:	add    esp,0x4
64002075:	push   eax
64002076:	mov    edi,0x64029714
6400207b:	lea    esi,[ebp-0x120]
64002081:	mov    BYTE PTR [ebp-0x4],0x4
64002085:	call   0x640068c0
6400208a:	add    esp,0x4
6400208d:	push   eax
6400208e:	lea    ecx,[ebp-0xcc]
64002094:	push   ecx
64002095:	mov    BYTE PTR [ebp-0x4],0x5
64002099:	call   0x64001430
6400209e:	push   0x6402bcb0
640020a3:	lea    edx,[ebp-0xcc]
640020a9:	push   edx
640020aa:	call   0x64013872
640020af:	mov    esi,DWORD PTR [ebp-0x80]
640020b2:	mov    DWORD PTR [ebp-0x4],0xffffffff
640020b9:	mov    eax,DWORD PTR [ebp-0x7c]
640020bc:	add    eax,0xfffffff0
640020bf:	lea    ecx,[eax+0xc]
640020c2:	or     edx,0xffffffff
640020c5:	lock xadd DWORD PTR [ecx],edx
640020c9:	dec    edx
640020ca:	test   edx,edx
640020cc:	jg     0x640020d8
640020ce:	mov    ecx,DWORD PTR [eax]
640020d0:	mov    edx,DWORD PTR [ecx]
640020d2:	push   eax
640020d3:	mov    eax,DWORD PTR [edx+0x4]
640020d6:	call   eax
640020d8:	mov    eax,esi
640020da:	lea    esp,[ebp-0x150]
640020e0:	mov    ecx,DWORD PTR [ebp-0xc]
640020e3:	mov    DWORD PTR fs:0x0,ecx
640020ea:	pop    ecx
640020eb:	pop    edi
640020ec:	pop    esi
640020ed:	pop    ebx
640020ee:	mov    ecx,DWORD PTR [ebp-0x10]
640020f1:	xor    ecx,ebp
640020f3:	call   0x64013d06
640020f8:	mov    esp,ebp
640020fa:	pop    ebp
640020fb:	ret    
640020fc:	int3   
640020fd:	int3   
640020fe:	int3   
640020ff:	int3   
64002100:	push   ebp
64002101:	mov    ebp,esp
64002103:	and    esp,0xfffffff8
64002106:	push   ecx
64002107:	push   esi
64002108:	mov    DWORD PTR [esp+0x4],0x0
64002110:	call   0x64001f10
64002115:	mov    ecx,DWORD PTR [ebp+0x10]
64002118:	mov    edx,DWORD PTR [ebp+0xc]
6400211b:	mov    esi,DWORD PTR [ebp+0x8]
6400211e:	push   ecx
6400211f:	push   edx
64002120:	push   eax
64002121:	push   esi
64002122:	call   0x640022f0
64002127:	add    esp,0x10
6400212a:	mov    eax,esi
6400212c:	pop    esi
6400212d:	mov    esp,ebp
6400212f:	pop    ebp
64002130:	ret    
64002131:	int3   
64002132:	int3   
64002133:	int3   
64002134:	int3   
64002135:	int3   
64002136:	int3   
64002137:	int3   
64002138:	int3   
64002139:	int3   
6400213a:	int3   
6400213b:	int3   
6400213c:	int3   
6400213d:	int3   
6400213e:	int3   
6400213f:	int3   
64002140:	mov    eax,0x64000000
64002145:	ret    
64002146:	int3   
64002147:	int3   
64002148:	int3   
64002149:	int3   
6400214a:	int3   
6400214b:	int3   
6400214c:	int3   
6400214d:	int3   
6400214e:	int3   
6400214f:	int3   
64002150:	push   ecx
64002151:	mov    eax,DWORD PTR [esp+0xc]
64002155:	push   esi
64002156:	mov    esi,DWORD PTR [esp+0xc]
6400215a:	push   eax
6400215b:	push   esi
6400215c:	mov    DWORD PTR [esp+0xc],0x0
64002164:	call   0x64002180
64002169:	add    esp,0x8
6400216c:	mov    eax,esi
6400216e:	pop    esi
6400216f:	pop    ecx
64002170:	ret    
64002171:	int3   
64002172:	int3   
64002173:	int3   
64002174:	int3   
64002175:	int3   
64002176:	int3   
64002177:	int3   
64002178:	int3   
64002179:	int3   
6400217a:	int3   
6400217b:	int3   
6400217c:	int3   
6400217d:	int3   
6400217e:	int3   
6400217f:	int3   
64002180:	push   0xffffffff
64002182:	push   0x640232f8
64002187:	mov    eax,fs:0x0
6400218d:	push   eax
6400218e:	push   ecx
6400218f:	push   ebp
64002190:	push   esi
64002191:	mov    eax,ds:0x64037644
64002196:	xor    eax,esp
64002198:	push   eax
64002199:	lea    eax,[esp+0x10]
6400219d:	mov    fs:0x0,eax
640021a3:	mov    ebp,DWORD PTR [esp+0x20]
640021a7:	mov    DWORD PTR [esp+0xc],0x0
640021af:	mov    eax,ds:0x64038e64
640021b4:	mov    edx,DWORD PTR [eax+0xc]
640021b7:	mov    ecx,0x64038e64
640021bc:	call   edx
640021be:	lea    esi,[eax+0x10]
640021c1:	mov    DWORD PTR [esp+0xc],esi
640021c5:	mov    DWORD PTR [esp+0x18],0x0
640021cd:	mov    eax,DWORD PTR [esi-0x8]
640021d0:	mov    ecx,0x1
640021d5:	sub    ecx,DWORD PTR [esi-0x4]
640021d8:	sub    eax,0x104
640021dd:	or     eax,ecx
640021df:	jge    0x640021f3
640021e1:	push   0x104
640021e6:	lea    ecx,[esp+0x10]
640021ea:	call   0x640043e0
640021ef:	mov    esi,DWORD PTR [esp+0xc]
640021f3:	cmp    DWORD PTR [esi-0x8],0x104
640021fa:	jge    0x64002206
640021fc:	push   0x80070057
64002201:	call   0x64001040
64002206:	push   0x104
6400220b:	push   esi
6400220c:	mov    DWORD PTR [esi-0xc],0x104
64002213:	push   0x64000000
64002218:	mov    WORD PTR [esi+0x208],0x0
64002221:	call   DWORD PTR ds:0x64024054
64002227:	mov    eax,esi
64002229:	lea    edx,[eax+0x2]
6400222c:	lea    esp,[esp+0x0]
64002230:	mov    cx,WORD PTR [eax]
64002233:	add    eax,0x2
64002236:	test   cx,cx
64002239:	jne    0x64002230
6400223b:	sub    eax,edx
6400223d:	sar    eax,1
6400223f:	js     0x640021fc
64002241:	cmp    eax,DWORD PTR [esi-0x8]
64002244:	jg     0x640021fc
64002246:	cmp    BYTE PTR [esp+0x24],cl
6400224a:	mov    DWORD PTR [esi-0xc],eax
6400224d:	mov    WORD PTR [esi+eax*2],cx
64002251:	je     0x6400227f
64002253:	add    esi,0xfffffff0
64002256:	mov    eax,esi
64002258:	call   0x64004430
6400225d:	add    eax,0x10
64002260:	mov    DWORD PTR [ebp+0x0],eax
64002263:	mov    DWORD PTR [esp+0x18],0xffffffff
6400226b:	lea    eax,[esi+0xc]
6400226e:	or     ecx,0xffffffff
64002271:	lock xadd DWORD PTR [eax],ecx
64002275:	dec    ecx
64002276:	test   ecx,ecx
64002278:	jg     0x640022d5
6400227a:	mov    ecx,DWORD PTR [esi]
6400227c:	push   esi
6400227d:	jmp    0x640022ce
6400227f:	push   0x5c
64002281:	push   esi
64002282:	call   0x64014c85
64002287:	add    esp,0x8
6400228a:	test   eax,eax
6400228c:	je     0x64002299
6400228e:	sub    eax,esi
64002290:	sar    eax,1
64002292:	mov    ecx,eax
64002294:	cmp    ecx,0xffffffff
64002297:	jne    0x6400229d
64002299:	xor    ecx,ecx
6400229b:	jmp    0x640022a0
6400229d:	add    ecx,0x1
640022a0:	mov    eax,DWORD PTR [esi-0xc]
640022a3:	sub    eax,ecx
640022a5:	lea    ecx,[esp+0xc]
640022a9:	push   ecx
640022aa:	mov    ecx,ebp
640022ac:	call   0x64002c50
640022b1:	lea    eax,[esi-0x10]
640022b4:	mov    DWORD PTR [esp+0x18],0xffffffff
640022bc:	lea    edx,[eax+0xc]
640022bf:	or     ecx,0xffffffff
640022c2:	lock xadd DWORD PTR [edx],ecx
640022c6:	dec    ecx
640022c7:	test   ecx,ecx
640022c9:	jg     0x640022d5
640022cb:	mov    ecx,DWORD PTR [eax]
640022cd:	push   eax
640022ce:	mov    edx,DWORD PTR [ecx]
640022d0:	mov    eax,DWORD PTR [edx+0x4]
640022d3:	call   eax
640022d5:	mov    eax,ebp
640022d7:	mov    ecx,DWORD PTR [esp+0x10]
640022db:	mov    DWORD PTR fs:0x0,ecx
640022e2:	pop    ecx
640022e3:	pop    esi
640022e4:	pop    ebp
640022e5:	add    esp,0x10
640022e8:	ret    
640022e9:	int3   
640022ea:	int3   
640022eb:	int3   
640022ec:	int3   
640022ed:	int3   
640022ee:	int3   
640022ef:	int3   
640022f0:	push   ebp
640022f1:	mov    ebp,esp
640022f3:	push   0xffffffff
640022f5:	push   0x64023a6f
640022fa:	mov    eax,fs:0x0
64002300:	push   eax
64002301:	sub    esp,0xa0c
64002307:	mov    eax,ds:0x64037644
6400230c:	xor    eax,ebp
6400230e:	mov    DWORD PTR [ebp-0x10],eax
64002311:	push   ebx
64002312:	push   esi
64002313:	push   edi
64002314:	push   eax
64002315:	lea    eax,[ebp-0xc]
64002318:	mov    fs:0x0,eax
6400231e:	mov    esi,DWORD PTR [ebp+0x14]
64002321:	mov    ecx,DWORD PTR [ebp+0x10]
64002324:	mov    edx,DWORD PTR [ebp+0xc]
64002327:	mov    edi,DWORD PTR [ebp+0x8]
6400232a:	xor    eax,eax
6400232c:	mov    DWORD PTR [ebp-0x4],eax
6400232f:	mov    DWORD PTR [ebp-0x2c],eax
64002332:	lea    eax,[esi+esi*4]
64002335:	lea    eax,[ecx+eax*2]
64002338:	add    edx,eax
6400233a:	lea    eax,[ebp-0xa18]
64002340:	mov    DWORD PTR [ebp-0x30],edi
64002343:	call   0x64001760
64002348:	mov    ebx,0x1
6400234d:	test   BYTE PTR ds:0x64039b1c,bl
64002353:	jne    0x64002415
64002359:	or     DWORD PTR ds:0x64039b1c,ebx
6400235f:	push   0x64029888
64002364:	push   0x3
64002366:	mov    ecx,0x64029880
6400236b:	mov    DWORD PTR [ebp-0x4],ebx
6400236e:	call   0x64003090
64002373:	push   0x64029840
64002378:	push   0x3
6400237a:	mov    ecx,0x64029838
6400237f:	mov    ds:0x64039994,eax
64002384:	mov    DWORD PTR ds:0x64039998,ebx
6400238a:	call   0x64003090
6400238f:	push   0x6402980c
64002394:	push   0x0
64002396:	mov    ecx,0x640295f4
6400239b:	mov    ds:0x6403999c,eax
640023a0:	mov    DWORD PTR ds:0x640399a0,ebx
640023a6:	call   0x64003090
640023ab:	push   0x640297d8
640023b0:	push   0x0
640023b2:	mov    ecx,0x640295f4
640023b7:	mov    ds:0x640399a4,eax
640023bc:	mov    DWORD PTR ds:0x640399a8,ebx
640023c2:	call   0x64003090
640023c7:	push   0x640297a4
640023cc:	push   0x4
640023ce:	mov    ecx,0x64029798
640023d3:	mov    ds:0x640399ac,eax
640023d8:	mov    DWORD PTR ds:0x640399b0,ebx
640023de:	call   0x64003090
640023e3:	mov    ds:0x640399b4,eax
640023e8:	mov    ecx,0x640295f4
640023ed:	mov    eax,0x2
640023f2:	add    esp,0x28
640023f5:	mov    DWORD PTR ds:0x640399b8,ebx
640023fb:	mov    DWORD PTR ds:0x640399bc,ecx
64002401:	mov    ds:0x640399c0,eax
64002406:	mov    DWORD PTR ds:0x640399c4,ecx
6400240c:	mov    ds:0x640399c8,eax
64002411:	mov    BYTE PTR [ebp-0x4],0x0
64002415:	lea    ecx,[esi-0x1]
64002418:	cmp    ecx,0x5
6400241b:	ja     0x64002439
6400241d:	lea    eax,[esi*8+0x0]
64002424:	sub    eax,esi
64002426:	add    eax,DWORD PTR [ebp+0x10]
64002429:	mov    ecx,DWORD PTR [eax*8+0x6403995c]
64002430:	mov    esi,DWORD PTR [eax*8+0x64039960]
64002437:	jmp    0x64002440
64002439:	mov    ecx,0x640295f4
6400243e:	xor    esi,esi
64002440:	push   edi
64002441:	call   0x64002ab0
64002446:	xor    ecx,ecx
64002448:	mov    eax,esi
6400244a:	sub    eax,ebx
6400244c:	mov    DWORD PTR [ebp-0x4],ecx
6400244f:	mov    DWORD PTR [ebp-0x2c],ebx
64002452:	je     0x6400258d
64002458:	sub    eax,ebx
6400245a:	jne    0x64002569
64002460:	mov    DWORD PTR [ebp-0x1c],eax
64002463:	mov    DWORD PTR [ebp-0x18],eax
64002466:	mov    DWORD PTR [ebp-0x14],eax
64002469:	or     ebx,0xffffffff
6400246c:	lea    eax,[ebp-0xa18]
64002472:	call   0x640017a0
64002477:	mov    DWORD PTR [ebp-0x20],eax
6400247a:	or     ebx,0xffffffff
6400247d:	lea    eax,[ebp-0xa18]
64002483:	call   0x640017a0
64002488:	mov    DWORD PTR [ebp-0x1c],eax
6400248b:	or     ebx,0xffffffff
6400248e:	lea    eax,[ebp-0xa18]
64002494:	call   0x640017a0
64002499:	mov    DWORD PTR [ebp-0x18],eax
6400249c:	or     ebx,0xffffffff
6400249f:	lea    eax,[ebp-0xa18]
640024a5:	call   0x640017a0
640024aa:	mov    DWORD PTR [ebp-0x14],eax
640024ad:	call   DWORD PTR ds:0x6403761c
640024b3:	lea    edx,[ebp-0x20]
640024b6:	push   edx
640024b7:	lea    esi,[ebp-0x4c]
640024ba:	mov    DWORD PTR [ebp-0x28],eax
640024bd:	call   0x64001ac0
640024c2:	add    esp,0x4
640024c5:	mov    DWORD PTR [ebp-0x4],0x2
640024cc:	cmp    DWORD PTR [eax+0x18],0x10
640024d0:	jb     0x640024da
640024d2:	mov    eax,DWORD PTR [eax+0x4]
640024d5:	mov    DWORD PTR [ebp-0x24],eax
640024d8:	jmp    0x640024e0
640024da:	add    eax,0x4
640024dd:	mov    DWORD PTR [ebp-0x24],eax
640024e0:	test   eax,eax
640024e2:	jne    0x640024e8
640024e4:	xor    edx,edx
640024e6:	jmp    0x6400254f
640024e8:	push   eax
640024e9:	call   DWORD PTR ds:0x64024068
640024ef:	mov    ebx,eax
640024f1:	add    ebx,0x1
640024f4:	cmp    ebx,0x3fffffff
640024fa:	jg     0x6400252b
640024fc:	lea    eax,[ebx+ebx*1]
640024ff:	call   0x64013d20
64002504:	mov    esi,esp
64002506:	test   esi,esi
64002508:	je     0x6400252b
6400250a:	mov    eax,DWORD PTR [ebp-0x24]
6400250d:	mov    ecx,DWORD PTR [ebp-0x28]
64002510:	push   ebx
64002511:	push   esi
64002512:	push   0xffffffff
64002514:	push   eax
64002515:	push   0x0
64002517:	push   ecx
64002518:	mov    WORD PTR [esi],0x0
6400251d:	call   DWORD PTR ds:0x64024028
64002523:	neg    eax
64002525:	sbb    eax,eax
64002527:	and    eax,esi
64002529:	jmp    0x6400252d
6400252b:	xor    eax,eax
6400252d:	mov    edx,eax
6400252f:	test   edx,edx
64002531:	je     0x6400254f
64002533:	mov    eax,edx
64002535:	lea    esi,[eax+0x2]
64002538:	jmp    0x64002540
6400253a:	lea    ebx,[ebx+0x0]
64002540:	mov    cx,WORD PTR [eax]
64002543:	add    eax,0x2
64002546:	test   cx,cx
64002549:	jne    0x64002540
6400254b:	sub    eax,esi
6400254d:	sar    eax,1
6400254f:	push   eax
64002550:	push   edx
64002551:	push   edi
64002552:	call   0x640036d0
64002557:	cmp    DWORD PTR [ebp-0x34],0x10
6400255b:	jb     0x64002569
6400255d:	mov    edx,DWORD PTR [ebp-0x48]
64002560:	push   edx
64002561:	call   0x64013644
64002566:	add    esp,0x4
64002569:	mov    eax,edi
6400256b:	lea    esp,[ebp-0xa28]
64002571:	mov    ecx,DWORD PTR [ebp-0xc]
64002574:	mov    DWORD PTR fs:0x0,ecx
6400257b:	pop    ecx
6400257c:	pop    edi
6400257d:	pop    esi
6400257e:	pop    ebx
6400257f:	mov    ecx,DWORD PTR [ebp-0x10]
64002582:	xor    ecx,ebp
64002584:	call   0x64013d06
64002589:	mov    esp,ebp
6400258b:	pop    ebp
6400258c:	ret    
6400258d:	mov    DWORD PTR [ebp-0x28],ecx
64002590:	mov    ebx,0x23
64002595:	lea    eax,[ebp-0xa18]
6400259b:	call   0x640017a0
640025a0:	cmp    eax,0xa
640025a3:	jae    0x640025b0
640025a5:	add    eax,0x30
640025a8:	movzx  eax,ax
640025ab:	mov    DWORD PTR [ebp-0x24],eax
640025ae:	jmp    0x640025b9
640025b0:	add    eax,0x57
640025b3:	movzx  ecx,ax
640025b6:	mov    DWORD PTR [ebp-0x24],ecx
640025b9:	mov    eax,DWORD PTR [edi]
640025bb:	mov    ebx,DWORD PTR [eax-0xc]
640025be:	mov    ecx,0x1
640025c3:	sub    ecx,DWORD PTR [eax-0x4]
640025c6:	mov    eax,DWORD PTR [eax-0x8]
640025c9:	lea    esi,[ebx+0x1]
640025cc:	sub    eax,esi
640025ce:	or     eax,ecx
640025d0:	jge    0x640025da
640025d2:	push   esi
640025d3:	mov    ecx,edi
640025d5:	call   0x640043e0
640025da:	test   esi,esi
640025dc:	mov    eax,DWORD PTR [edi]
640025de:	mov    dx,WORD PTR [ebp-0x24]
640025e2:	mov    WORD PTR [eax+ebx*2],dx
640025e6:	jl     0x6400260d
640025e8:	mov    eax,DWORD PTR [edi]
640025ea:	cmp    esi,DWORD PTR [eax-0x8]
640025ed:	jg     0x6400260d
640025ef:	mov    DWORD PTR [eax-0xc],esi
640025f2:	mov    eax,DWORD PTR [edi]
640025f4:	mov    WORD PTR [eax+esi*2],0x0
640025fa:	mov    eax,DWORD PTR [ebp-0x28]
640025fd:	add    eax,0x1
64002600:	cmp    eax,0x5
64002603:	mov    DWORD PTR [ebp-0x28],eax
64002606:	jl     0x64002590
64002608:	jmp    0x64002569
6400260d:	push   0x80070057
64002612:	call   0x64001040
64002617:	int3   
64002618:	int3   
64002619:	int3   
6400261a:	int3   
6400261b:	int3   
6400261c:	int3   
6400261d:	int3   
6400261e:	int3   
6400261f:	int3   
64002620:	push   0xffffffff
64002622:	push   0x64023cc1
64002627:	mov    eax,fs:0x0
6400262d:	push   eax
6400262e:	sub    esp,0xc
64002631:	push   ebx
64002632:	push   esi
64002633:	push   edi
64002634:	mov    eax,ds:0x64037644
64002639:	xor    eax,esp
6400263b:	push   eax
6400263c:	lea    eax,[esp+0x1c]
64002640:	mov    fs:0x0,eax
64002646:	xor    ebx,ebx
64002648:	mov    DWORD PTR [esp+0x24],ebx
6400264c:	mov    DWORD PTR [esp+0x10],ebx
64002650:	mov    eax,ds:0x64038e64
64002655:	mov    edx,DWORD PTR [eax+0xc]
64002658:	mov    ecx,0x64038e64
6400265d:	call   edx
6400265f:	mov    esi,DWORD PTR [esp+0x2c]
64002663:	add    eax,0x10
64002666:	mov    DWORD PTR [esi],eax
64002668:	cmp    BYTE PTR [esp+0x30],bl
6400266c:	mov    edi,0x1
64002671:	mov    DWORD PTR [esp+0x24],ebx
64002675:	mov    DWORD PTR [esp+0x10],edi
64002679:	je     0x640026bd
6400267b:	lea    eax,[esp+0x14]
6400267f:	push   eax
64002680:	call   0x64001c30
64002685:	add    esp,0x4
64002688:	mov    DWORD PTR [esp+0x24],edi
6400268c:	mov    eax,DWORD PTR [eax]
6400268e:	mov    ecx,DWORD PTR [eax-0xc]
64002691:	push   ecx
64002692:	push   eax
64002693:	push   esi
64002694:	call   0x640036d0
64002699:	mov    BYTE PTR [esp+0x24],bl
6400269d:	mov    eax,DWORD PTR [esp+0x14]
640026a1:	add    eax,0xfffffff0
640026a4:	lea    ecx,[eax+0xc]
640026a7:	or     edx,0xffffffff
640026aa:	lock xadd DWORD PTR [ecx],edx
640026ae:	dec    edx
640026af:	test   edx,edx
640026b1:	jg     0x640026bd
640026b3:	mov    ecx,DWORD PTR [eax]
640026b5:	mov    edx,DWORD PTR [ecx]
640026b7:	push   eax
640026b8:	mov    eax,DWORD PTR [edx+0x4]
640026bb:	call   eax
640026bd:	push   edi
640026be:	lea    ecx,[esp+0x1c]
640026c2:	push   0x2
640026c4:	push   ecx
640026c5:	call   0x64002100
640026ca:	mov    edi,eax
640026cc:	push   0x640298b4
640026d1:	push   0x4
640026d3:	mov    ecx,0x640298e8
640026d8:	mov    DWORD PTR [esp+0x38],0x2
640026e0:	call   0x64003090
640026e5:	lea    edx,[esp+0x28]
640026e9:	push   edi
640026ea:	push   edx
640026eb:	mov    ebx,eax
640026ed:	call   0x64002cd0
640026f2:	add    esp,0x1c
640026f5:	mov    BYTE PTR [esp+0x24],0x3
640026fa:	mov    eax,DWORD PTR [eax]
640026fc:	mov    ecx,DWORD PTR [eax-0xc]
640026ff:	push   ecx
64002700:	push   eax
64002701:	push   esi
64002702:	call   0x640036d0
64002707:	mov    BYTE PTR [esp+0x24],0x2
6400270c:	mov    eax,DWORD PTR [esp+0x14]
64002710:	add    eax,0xfffffff0
64002713:	lea    ecx,[eax+0xc]
64002716:	or     edx,0xffffffff
64002719:	lock xadd DWORD PTR [ecx],edx
6400271d:	dec    edx
6400271e:	test   edx,edx
64002720:	jg     0x6400272c
64002722:	mov    ecx,DWORD PTR [eax]
64002724:	mov    edx,DWORD PTR [ecx]
64002726:	push   eax
64002727:	mov    eax,DWORD PTR [edx+0x4]
6400272a:	call   eax
6400272c:	mov    BYTE PTR [esp+0x24],0x0
64002731:	mov    eax,DWORD PTR [esp+0x18]
64002735:	add    eax,0xfffffff0
64002738:	lea    ecx,[eax+0xc]
6400273b:	or     edx,0xffffffff
6400273e:	lock xadd DWORD PTR [ecx],edx
64002742:	dec    edx
64002743:	test   edx,edx
64002745:	jg     0x64002751
64002747:	mov    ecx,DWORD PTR [eax]
64002749:	mov    edx,DWORD PTR [ecx]
6400274b:	push   eax
6400274c:	mov    eax,DWORD PTR [edx+0x4]
6400274f:	call   eax
64002751:	mov    eax,esi
64002753:	mov    ecx,DWORD PTR [esp+0x1c]
64002757:	mov    DWORD PTR fs:0x0,ecx
6400275e:	pop    ecx
6400275f:	pop    edi
64002760:	pop    esi
64002761:	pop    ebx
64002762:	add    esp,0x18
64002765:	ret    
64002766:	int3   
64002767:	int3   
64002768:	int3   
64002769:	int3   
6400276a:	int3   
6400276b:	int3   
6400276c:	int3   
6400276d:	int3   
6400276e:	int3   
6400276f:	int3   
64002770:	push   0xffffffff
64002772:	push   0x64022fc3
64002777:	mov    eax,fs:0x0
6400277d:	push   eax
6400277e:	sub    esp,0x434
64002784:	mov    eax,ds:0x64037644
64002789:	xor    eax,esp
6400278b:	mov    DWORD PTR [esp+0x430],eax
64002792:	push   ebx
64002793:	push   ebp
64002794:	push   esi
64002795:	push   edi
64002796:	mov    eax,ds:0x64037644
6400279b:	xor    eax,esp
6400279d:	push   eax
6400279e:	lea    eax,[esp+0x448]
640027a5:	mov    fs:0x0,eax
640027ab:	mov    eax,DWORD PTR [esp+0x458]
640027b2:	push   eax
640027b3:	push   0x18
640027b5:	mov    DWORD PTR [esp+0x458],0x0
640027c0:	call   0x64012efe
640027c5:	mov    esi,eax
640027c7:	mov    DWORD PTR [esp+0x18],esi
640027cb:	or     ebp,0xffffffff
640027ce:	cmp    esi,ebp
640027d0:	mov    BYTE PTR [esp+0x450],0x1
640027d8:	jne    0x64002806
640027da:	call   DWORD PTR ds:0x64024064
640027e0:	push   ebp
640027e1:	mov    esi,eax
640027e3:	call   DWORD PTR ds:0x6402406c
640027e9:	push   esi
640027ea:	call   DWORD PTR ds:0x64024070
640027f0:	mov    DWORD PTR [esp+0x450],ebp
640027f7:	mov    eax,DWORD PTR [esp+0x45c]
640027fe:	add    eax,0xfffffff0
64002801:	jmp    0x640028c2
64002806:	lea    ecx,[esp+0x1c]
6400280a:	push   ecx
6400280b:	push   esi
6400280c:	mov    DWORD PTR [esp+0x24],0x428
64002814:	call   0x64012f04
64002819:	test   eax,eax
6400281b:	jne    0x64002852
6400281d:	test   esi,esi
6400281f:	je     0x64002837
64002821:	call   DWORD PTR ds:0x64024064
64002827:	push   esi
64002828:	mov    edi,eax
6400282a:	call   DWORD PTR ds:0x6402406c
64002830:	push   edi
64002831:	call   DWORD PTR ds:0x64024070
64002837:	mov    DWORD PTR [esp+0x450],ebp
6400283e:	mov    eax,DWORD PTR [esp+0x45c]
64002845:	add    eax,0xfffffff0
64002848:	lea    edx,[eax+0xc]
6400284b:	lock xadd DWORD PTR [edx],ebp
6400284f:	dec    ebp
64002850:	jmp    0x640028ca
64002852:	mov    edi,DWORD PTR [esp+0x45c]
64002859:	lea    esp,[esp+0x0]
64002860:	cmp    DWORD PTR [edi-0x4],0x1
64002864:	jle    0x6400287d
64002866:	mov    ecx,DWORD PTR [edi-0xc]
64002869:	push   ecx
6400286a:	lea    ecx,[esp+0x460]
64002871:	call   0x64003820
64002876:	mov    edi,DWORD PTR [esp+0x45c]
6400287d:	lea    edx,[esp+0x3c]
64002881:	push   edi
64002882:	push   edx
64002883:	call   0x64014a90
64002888:	add    esp,0x8
6400288b:	test   eax,eax
6400288d:	je     0x64002902
6400288f:	lea    eax,[esp+0x1c]
64002893:	push   eax
64002894:	push   esi
64002895:	call   0x64012f0a
6400289a:	test   eax,eax
6400289c:	jne    0x64002860
6400289e:	test   esi,esi
640028a0:	je     0x640028b8
640028a2:	call   DWORD PTR ds:0x64024064
640028a8:	push   esi
640028a9:	mov    ebx,eax
640028ab:	call   DWORD PTR ds:0x6402406c
640028b1:	push   ebx
640028b2:	call   DWORD PTR ds:0x64024070
640028b8:	mov    DWORD PTR [esp+0x450],ebp
640028bf:	lea    eax,[edi-0x10]
640028c2:	lea    ecx,[eax+0xc]
640028c5:	lock xadd DWORD PTR [ecx],ebp
640028c9:	dec    ebp
640028ca:	test   ebp,ebp
640028cc:	jg     0x640028d8
640028ce:	mov    ecx,DWORD PTR [eax]
640028d0:	mov    edx,DWORD PTR [ecx]
640028d2:	push   eax
640028d3:	mov    eax,DWORD PTR [edx+0x4]
640028d6:	call   eax
640028d8:	xor    al,al
640028da:	mov    ecx,DWORD PTR [esp+0x448]
640028e1:	mov    DWORD PTR fs:0x0,ecx
640028e8:	pop    ecx
640028e9:	pop    edi
640028ea:	pop    esi
640028eb:	pop    ebp
640028ec:	pop    ebx
640028ed:	mov    ecx,DWORD PTR [esp+0x430]
640028f4:	xor    ecx,esp
640028f6:	call   0x64013d06
640028fb:	add    esp,0x440
64002901:	ret    
64002902:	test   esi,esi
64002904:	je     0x6400291c
64002906:	call   DWORD PTR ds:0x64024064
6400290c:	push   esi
6400290d:	mov    ebx,eax
6400290f:	call   DWORD PTR ds:0x6402406c
64002915:	push   ebx
64002916:	call   DWORD PTR ds:0x64024070
6400291c:	lea    eax,[edi-0x10]
6400291f:	mov    DWORD PTR [esp+0x450],ebp
64002926:	lea    ecx,[eax+0xc]
64002929:	lock xadd DWORD PTR [ecx],ebp
6400292d:	dec    ebp
6400292e:	test   ebp,ebp
64002930:	jg     0x6400293c
64002932:	mov    ecx,DWORD PTR [eax]
64002934:	mov    edx,DWORD PTR [ecx]
64002936:	push   eax
64002937:	mov    eax,DWORD PTR [edx+0x4]
6400293a:	call   eax
6400293c:	mov    al,0x1
6400293e:	jmp    0x640028da
64002940:	xor    ax,ax
64002943:	ret    
64002944:	int3   
64002945:	int3   
64002946:	int3   
64002947:	int3   
64002948:	int3   
64002949:	int3   
6400294a:	int3   
6400294b:	int3   
6400294c:	int3   
6400294d:	int3   
6400294e:	int3   
6400294f:	int3   
64002950:	mov    edx,DWORD PTR [esp+0x4]
64002954:	push   esi
64002955:	mov    esi,ecx
64002957:	mov    eax,edx
64002959:	push   edi
6400295a:	mov    DWORD PTR [esi+0x18],0xf
64002961:	mov    DWORD PTR [esi+0x14],0x0
64002968:	mov    BYTE PTR [esi+0x4],0x0
6400296c:	lea    edi,[eax+0x1]
6400296f:	nop
64002970:	mov    cl,BYTE PTR [eax]
64002972:	add    eax,0x1
64002975:	test   cl,cl
64002977:	jne    0x64002970
64002979:	sub    eax,edi
6400297b:	push   eax
6400297c:	push   edx
6400297d:	mov    ecx,esi
6400297f:	call   0x64003470
64002984:	pop    edi
64002985:	mov    eax,esi
64002987:	pop    esi
64002988:	ret    0x4
6400298b:	int3   
6400298c:	int3   
6400298d:	int3   
6400298e:	int3   
6400298f:	int3   
64002990:	push   esi
64002991:	mov    esi,ecx
64002993:	cmp    DWORD PTR [esi+0x18],0x10
64002997:	jb     0x640029a5
64002999:	mov    eax,DWORD PTR [esi+0x4]
6400299c:	push   eax
6400299d:	call   0x64013644
640029a2:	add    esp,0x4
640029a5:	xor    eax,eax
640029a7:	mov    DWORD PTR [esi+0x18],0xf
640029ae:	mov    DWORD PTR [esi+0x14],eax
640029b1:	mov    BYTE PTR [esi+0x4],al
640029b4:	pop    esi
640029b5:	ret    
640029b6:	int3   
640029b7:	int3   
640029b8:	int3   
640029b9:	int3   
640029ba:	int3   
640029bb:	int3   
640029bc:	int3   
640029bd:	int3   
640029be:	int3   
640029bf:	int3   
640029c0:	mov    ecx,DWORD PTR [esp+0x4]
640029c4:	push   ebx
640029c5:	push   ebp
640029c6:	mov    ebp,DWORD PTR [esp+0x10]
640029ca:	push   esi
640029cb:	mov    esi,eax
640029cd:	mov    edx,DWORD PTR [esi+0x18]
640029d0:	cmp    edx,0x10
640029d3:	push   edi
640029d4:	lea    ebx,[esi+0x4]
640029d7:	jb     0x640029dd
640029d9:	mov    eax,DWORD PTR [ebx]
640029db:	jmp    0x640029df
640029dd:	mov    eax,ebx
640029df:	cmp    ecx,eax
640029e1:	jb     0x64002a10
640029e3:	cmp    edx,0x10
640029e6:	jb     0x640029ec
640029e8:	mov    eax,DWORD PTR [ebx]
640029ea:	jmp    0x640029ee
640029ec:	mov    eax,ebx
640029ee:	mov    edi,DWORD PTR [esi+0x14]
640029f1:	add    edi,eax
640029f3:	cmp    edi,ecx
640029f5:	jbe    0x64002a10
640029f7:	cmp    edx,0x10
640029fa:	jb     0x640029fe
640029fc:	mov    ebx,DWORD PTR [ebx]
640029fe:	sub    ecx,ebx
64002a00:	push   ecx
64002a01:	push   esi
64002a02:	mov    eax,ebp
64002a04:	call   0x640032a0
64002a09:	pop    edi
64002a0a:	pop    esi
64002a0b:	pop    ebp
64002a0c:	pop    ebx
64002a0d:	ret    0x8
64002a10:	mov    eax,DWORD PTR [esi+0x14]
64002a13:	or     ecx,0xffffffff
64002a16:	sub    ecx,eax
64002a18:	cmp    ecx,ebp
64002a1a:	jbe    0x64002a23
64002a1c:	lea    edx,[eax+ebp*1]
64002a1f:	cmp    edx,eax
64002a21:	jae    0x64002a28
64002a23:	call   0x64012f1c
64002a28:	test   ebp,ebp
64002a2a:	jbe    0x64002aa0
64002a2c:	mov    edi,DWORD PTR [esi+0x14]
64002a2f:	add    edi,ebp
64002a31:	cmp    edi,0xfffffffe
64002a34:	jbe    0x64002a3b
64002a36:	call   0x64012f1c
64002a3b:	mov    eax,DWORD PTR [esi+0x18]
64002a3e:	cmp    eax,edi
64002a40:	jae    0x64002a5e
64002a42:	mov    eax,DWORD PTR [esi+0x14]
64002a45:	push   eax
64002a46:	push   edi
64002a47:	mov    ecx,esi
64002a49:	call   0x640040e0
64002a4e:	test   edi,edi
64002a50:	jbe    0x64002aa0
64002a52:	mov    eax,DWORD PTR [esi+0x18]
64002a55:	cmp    eax,0x10
64002a58:	jb     0x64002a78
64002a5a:	mov    edx,DWORD PTR [ebx]
64002a5c:	jmp    0x64002a7a
64002a5e:	test   edi,edi
64002a60:	jne    0x64002a50
64002a62:	cmp    eax,0x10
64002a65:	mov    DWORD PTR [esi+0x14],edi
64002a68:	jb     0x64002a6c
64002a6a:	mov    ebx,DWORD PTR [ebx]
64002a6c:	pop    edi
64002a6d:	mov    eax,esi
64002a6f:	pop    esi
64002a70:	pop    ebp
64002a71:	mov    BYTE PTR [ebx],0x0
64002a74:	pop    ebx
64002a75:	ret    0x8
64002a78:	mov    edx,ebx
64002a7a:	mov    ecx,DWORD PTR [esi+0x14]
64002a7d:	push   ebp
64002a7e:	mov    ebp,DWORD PTR [esp+0x18]
64002a82:	sub    eax,ecx
64002a84:	push   ebp
64002a85:	push   eax
64002a86:	add    ecx,edx
64002a88:	push   ecx
64002a89:	call   0x6401379c
64002a8e:	add    esp,0x10
64002a91:	cmp    DWORD PTR [esi+0x18],0x10
64002a95:	mov    DWORD PTR [esi+0x14],edi
64002a98:	jb     0x64002a9c
64002a9a:	mov    ebx,DWORD PTR [ebx]
64002a9c:	mov    BYTE PTR [ebx+edi*1],0x0
64002aa0:	pop    edi
64002aa1:	mov    eax,esi
64002aa3:	pop    esi
64002aa4:	pop    ebp
64002aa5:	pop    ebx
64002aa6:	ret    0x8
64002aa9:	int3   
64002aaa:	int3   
64002aab:	int3   
64002aac:	int3   
64002aad:	int3   
64002aae:	int3   
64002aaf:	int3   
64002ab0:	push   0xffffffff
64002ab2:	push   0x64023428
64002ab7:	mov    eax,fs:0x0
64002abd:	push   eax
64002abe:	push   ebx
64002abf:	push   esi
64002ac0:	push   edi
64002ac1:	mov    eax,ds:0x64037644
64002ac6:	xor    eax,esp
64002ac8:	push   eax
64002ac9:	lea    eax,[esp+0x10]
64002acd:	mov    fs:0x0,eax
64002ad3:	mov    esi,ecx
64002ad5:	mov    ebx,DWORD PTR [esp+0x20]
64002ad9:	mov    eax,ds:0x64038e64
64002ade:	mov    edx,DWORD PTR [eax+0xc]
64002ae1:	mov    ecx,0x64038e64
64002ae6:	call   edx
64002ae8:	add    eax,0x10
64002aeb:	mov    DWORD PTR [ebx],eax
64002aed:	test   esi,esi
64002aef:	mov    DWORD PTR [esp+0x18],0x0
64002af7:	je     0x64002b1e
64002af9:	test   esi,0xffff0000
64002aff:	jne    0x64002b22
64002b01:	movzx  esi,si
64002b04:	push   0x0
64002b06:	push   esi
64002b07:	call   0x64001170
64002b0c:	add    esp,0x8
64002b0f:	test   eax,eax
64002b11:	je     0x64002b3f
64002b13:	push   esi
64002b14:	push   eax
64002b15:	mov    ecx,ebx
64002b17:	call   0x64004b90
64002b1c:	jmp    0x64002b3f
64002b1e:	xor    eax,eax
64002b20:	jmp    0x64002b36
64002b22:	mov    eax,esi
64002b24:	lea    edx,[eax+0x2]
64002b27:	mov    cx,WORD PTR [eax]
64002b2a:	add    eax,0x2
64002b2d:	test   cx,cx
64002b30:	jne    0x64002b27
64002b32:	sub    eax,edx
64002b34:	sar    eax,1
64002b36:	push   esi
64002b37:	push   ebx
64002b38:	mov    edi,eax
64002b3a:	call   0x64004330
64002b3f:	mov    eax,ebx
64002b41:	mov    ecx,DWORD PTR [esp+0x10]
64002b45:	mov    DWORD PTR fs:0x0,ecx
64002b4c:	pop    ecx
64002b4d:	pop    edi
64002b4e:	pop    esi
64002b4f:	pop    ebx
64002b50:	add    esp,0xc
64002b53:	ret    0x4
64002b56:	int3   
64002b57:	int3   
64002b58:	int3   
64002b59:	int3   
64002b5a:	int3   
64002b5b:	int3   
64002b5c:	int3   
64002b5d:	int3   
64002b5e:	int3   
64002b5f:	int3   
64002b60:	push   0xffffffff
64002b62:	push   0x640233f8
64002b67:	mov    eax,fs:0x0
64002b6d:	push   eax
64002b6e:	push   ecx
64002b6f:	push   esi
64002b70:	push   edi
64002b71:	mov    eax,ds:0x64037644
64002b76:	xor    eax,esp
64002b78:	push   eax
64002b79:	lea    eax,[esp+0x10]
64002b7d:	mov    fs:0x0,eax
64002b83:	mov    esi,ecx
64002b85:	mov    DWORD PTR [esp+0xc],esi
64002b89:	mov    eax,ds:0x64038e64
64002b8e:	mov    edx,DWORD PTR [eax+0xc]
64002b91:	mov    ecx,0x64038e64
64002b96:	call   edx
64002b98:	add    eax,0x10
64002b9b:	mov    DWORD PTR [esi],eax
64002b9d:	mov    eax,DWORD PTR [esp+0x20]
64002ba1:	test   eax,eax
64002ba3:	mov    DWORD PTR [esp+0x18],0x0
64002bab:	je     0x64002bd1
64002bad:	test   eax,0xffff0000
64002bb2:	jne    0x64002bd1
64002bb4:	movzx  edi,ax
64002bb7:	push   0x0
64002bb9:	push   edi
64002bba:	call   0x64001170
64002bbf:	add    esp,0x8
64002bc2:	test   eax,eax
64002bc4:	je     0x64002bd9
64002bc6:	push   edi
64002bc7:	push   eax
64002bc8:	mov    ecx,esi
64002bca:	call   0x64004b90
64002bcf:	jmp    0x64002bd9
64002bd1:	push   eax
64002bd2:	mov    ecx,esi
64002bd4:	call   0x64003610
64002bd9:	mov    eax,esi
64002bdb:	mov    ecx,DWORD PTR [esp+0x10]
64002bdf:	mov    DWORD PTR fs:0x0,ecx
64002be6:	pop    ecx
64002be7:	pop    edi
64002be8:	pop    esi
64002be9:	add    esp,0x10
64002bec:	ret    0x4
64002bef:	int3   
64002bf0:	mov    eax,DWORD PTR [edi]
64002bf2:	mov    edx,DWORD PTR [eax-0x8]
64002bf5:	push   ebx
64002bf6:	mov    ebx,DWORD PTR [eax-0xc]
64002bf9:	push   esi
64002bfa:	mov    ecx,0x1
64002bff:	sub    ecx,DWORD PTR [eax-0x4]
64002c02:	lea    esi,[ebx+0x1]
64002c05:	sub    edx,esi
64002c07:	or     ecx,edx
64002c09:	jge    0x64002c13
64002c0b:	push   esi
64002c0c:	mov    ecx,edi
64002c0e:	call   0x640043e0
64002c13:	test   esi,esi
64002c15:	mov    eax,DWORD PTR [edi]
64002c17:	mov    cx,WORD PTR [esp+0xc]
64002c1c:	mov    WORD PTR [eax+ebx*2],cx
64002c20:	jl     0x64002c3b
64002c22:	mov    eax,DWORD PTR [edi]
64002c24:	cmp    esi,DWORD PTR [eax-0x8]
64002c27:	jg     0x64002c3b
64002c29:	mov    DWORD PTR [eax-0xc],esi
64002c2c:	mov    edx,DWORD PTR [edi]
64002c2e:	mov    WORD PTR [edx+esi*2],0x0
64002c34:	pop    esi
64002c35:	mov    eax,edi
64002c37:	pop    ebx
64002c38:	ret    0x4
64002c3b:	push   0x80070057
64002c40:	call   0x64001040
64002c45:	int3   
64002c46:	int3   
64002c47:	int3   
64002c48:	int3   
64002c49:	int3   
64002c4a:	int3   
64002c4b:	int3   
64002c4c:	int3   
64002c4d:	int3   
64002c4e:	int3   
64002c4f:	int3   
64002c50:	push   ebx
64002c51:	push   ebp
64002c52:	mov    ebp,DWORD PTR [esp+0xc]
64002c56:	push   esi
64002c57:	mov    esi,eax
64002c59:	test   esi,esi
64002c5b:	push   edi
64002c5c:	mov    edi,ecx
64002c5e:	mov    DWORD PTR [esp+0x14],0x0
64002c66:	jge    0x64002c6a
64002c68:	xor    esi,esi
64002c6a:	mov    eax,DWORD PTR [ebp+0x0]
64002c6d:	mov    ebx,DWORD PTR [eax-0xc]
64002c70:	cmp    esi,ebx
64002c72:	jl     0x64002c8a
64002c74:	add    eax,0xfffffff0
64002c77:	call   0x64004430
64002c7c:	add    eax,0x10
64002c7f:	mov    DWORD PTR [edi],eax
64002c81:	mov    eax,edi
64002c83:	pop    edi
64002c84:	pop    esi
64002c85:	pop    ebp
64002c86:	pop    ebx
64002c87:	ret    0x4
64002c8a:	mov    eax,DWORD PTR [eax-0x10]
64002c8d:	test   eax,eax
64002c8f:	je     0x64002c9e
64002c91:	mov    edx,DWORD PTR [eax]
64002c93:	mov    ecx,eax
64002c95:	mov    eax,DWORD PTR [edx+0x10]
64002c98:	call   eax
64002c9a:	test   eax,eax
64002c9c:	jne    0x64002cae
64002c9e:	mov    edx,DWORD PTR ds:0x64038e64
64002ca4:	mov    eax,DWORD PTR [edx+0x10]
64002ca7:	mov    ecx,0x64038e64
64002cac:	call   eax
64002cae:	mov    ecx,DWORD PTR [ebp+0x0]
64002cb1:	sub    ebx,esi
64002cb3:	lea    ebx,[ecx+ebx*2]
64002cb6:	mov    ecx,eax
64002cb8:	call   0x64004260
64002cbd:	mov    eax,edi
64002cbf:	pop    edi
64002cc0:	pop    esi
64002cc1:	pop    ebp
64002cc2:	pop    ebx
64002cc3:	ret    0x4
64002cc6:	int3   
64002cc7:	int3   
64002cc8:	int3   
64002cc9:	int3   
64002cca:	int3   
64002ccb:	int3   
64002ccc:	int3   
64002ccd:	int3   
64002cce:	int3   
64002ccf:	int3   
64002cd0:	push   0xffffffff
64002cd2:	push   0x640232c9
64002cd7:	mov    eax,fs:0x0
64002cdd:	push   eax
64002cde:	push   ebp
64002cdf:	push   esi
64002ce0:	mov    eax,ds:0x64037644
64002ce5:	xor    eax,esp
64002ce7:	push   eax
64002ce8:	lea    eax,[esp+0xc]
64002cec:	mov    fs:0x0,eax
64002cf2:	mov    ebp,DWORD PTR [esp+0x20]
64002cf6:	mov    esi,DWORD PTR [esp+0x1c]
64002cfa:	mov    DWORD PTR [esp+0x14],0x0
64002d02:	mov    DWORD PTR [esp+0x20],0x0
64002d0a:	mov    eax,DWORD PTR [ebp+0x0]
64002d0d:	mov    ecx,DWORD PTR [eax-0x10]
64002d10:	test   ecx,ecx
64002d12:	je     0x64002d1f
64002d14:	mov    edx,DWORD PTR [ecx]
64002d16:	mov    eax,DWORD PTR [edx+0x10]
64002d19:	call   eax
64002d1b:	test   eax,eax
64002d1d:	jne    0x64002d2f
64002d1f:	mov    edx,DWORD PTR ds:0x64038e64
64002d25:	mov    eax,DWORD PTR [edx+0x10]
64002d28:	mov    ecx,0x64038e64
64002d2d:	call   eax
64002d2f:	xor    ecx,ecx
64002d31:	test   eax,eax
64002d33:	setne  cl
64002d36:	test   ecx,ecx
64002d38:	jne    0x64002d44
64002d3a:	push   0x80004005
64002d3f:	call   0x64001040
64002d44:	mov    edx,DWORD PTR [eax]
64002d46:	mov    ecx,eax
64002d48:	mov    eax,DWORD PTR [edx+0xc]
64002d4b:	call   eax
64002d4d:	add    eax,0x10
64002d50:	mov    DWORD PTR [esi],eax
64002d52:	test   ebx,ebx
64002d54:	mov    DWORD PTR [esp+0x14],0x0
64002d5c:	mov    DWORD PTR [esp+0x20],0x1
64002d64:	jne    0x64002d6a
64002d66:	xor    edx,edx
64002d68:	jmp    0x64002d81
64002d6a:	mov    eax,ebx
64002d6c:	lea    edx,[eax+0x2]
64002d6f:	nop
64002d70:	mov    cx,WORD PTR [eax]
64002d73:	add    eax,0x2
64002d76:	test   cx,cx
64002d79:	jne    0x64002d70
64002d7b:	sub    eax,edx
64002d7d:	sar    eax,1
64002d7f:	mov    edx,eax
64002d81:	mov    ecx,DWORD PTR [ebp+0x0]
64002d84:	mov    eax,DWORD PTR [ecx-0xc]
64002d87:	push   edx
64002d88:	push   ebx
64002d89:	push   ecx
64002d8a:	push   esi
64002d8b:	call   0x64003790
64002d90:	add    esp,0x10
64002d93:	mov    eax,esi
64002d95:	mov    ecx,DWORD PTR [esp+0xc]
64002d99:	mov    DWORD PTR fs:0x0,ecx
64002da0:	pop    ecx
64002da1:	pop    esi
64002da2:	pop    ebp
64002da3:	add    esp,0xc
64002da6:	ret    
64002da7:	int3   
64002da8:	int3   
64002da9:	int3   
64002daa:	int3   
64002dab:	int3   
64002dac:	int3   
64002dad:	int3   
64002dae:	int3   
64002daf:	int3   
64002db0:	mov    ecx,DWORD PTR [esp+0x8]
64002db4:	test   ecx,ecx
64002db6:	jne    0x64002dc2
64002db8:	push   0x80004005
64002dbd:	call   0x64001040
64002dc2:	mov    eax,DWORD PTR [esp+0x4]
64002dc6:	mov    eax,DWORD PTR [eax]
64002dc8:	mov    dx,WORD PTR [eax]
64002dcb:	cmp    dx,WORD PTR [ecx]
64002dce:	jne    0x64002df6
64002dd0:	test   dx,dx
64002dd3:	je     0x64002dea
64002dd5:	mov    dx,WORD PTR [eax+0x2]
64002dd9:	cmp    dx,WORD PTR [ecx+0x2]
64002ddd:	jne    0x64002df6
64002ddf:	add    eax,0x4
64002de2:	add    ecx,0x4
64002de5:	test   dx,dx
64002de8:	jne    0x64002dc8
64002dea:	xor    eax,eax
64002dec:	xor    ecx,ecx
64002dee:	test   eax,eax
64002df0:	sete   cl
64002df3:	mov    al,cl
64002df5:	ret    
64002df6:	sbb    eax,eax
64002df8:	sbb    eax,0xffffffff
64002dfb:	xor    ecx,ecx
64002dfd:	test   eax,eax
64002dff:	sete   cl
64002e02:	mov    al,cl
64002e04:	ret    
64002e05:	int3   
64002e06:	int3   
64002e07:	int3   
64002e08:	int3   
64002e09:	int3   
64002e0a:	int3   
64002e0b:	int3   
64002e0c:	int3   
64002e0d:	int3   
64002e0e:	int3   
64002e0f:	int3   
64002e10:	push   esi
64002e11:	mov    esi,ecx
64002e13:	mov    eax,DWORD PTR [esi]
64002e15:	mov    edx,DWORD PTR [eax-0x8]
64002e18:	sub    eax,0x10
64002e1b:	mov    ecx,0x1
64002e20:	sub    ecx,DWORD PTR [eax+0xc]
64002e23:	mov    eax,DWORD PTR [esp+0x8]
64002e27:	sub    edx,eax
64002e29:	or     ecx,edx
64002e2b:	jge    0x64002e35
64002e2d:	push   eax
64002e2e:	mov    ecx,esi
64002e30:	call   0x640043e0
64002e35:	mov    eax,DWORD PTR [esi]
64002e37:	pop    esi
64002e38:	ret    0x4
64002e3b:	int3   
64002e3c:	int3   
64002e3d:	int3   
64002e3e:	int3   
64002e3f:	int3   
64002e40:	push   esi
64002e41:	mov    esi,ecx
64002e43:	push   edi
64002e44:	mov    edi,DWORD PTR [esi]
64002e46:	test   edi,edi
64002e48:	je     0x64002e62
64002e4a:	push   ebx
64002e4b:	call   DWORD PTR ds:0x64024064
64002e51:	push   edi
64002e52:	mov    ebx,eax
64002e54:	call   DWORD PTR ds:0x6402406c
64002e5a:	push   ebx
64002e5b:	call   DWORD PTR ds:0x64024070
64002e61:	pop    ebx
64002e62:	pop    edi
64002e63:	mov    DWORD PTR [esi],0x0
64002e69:	pop    esi
64002e6a:	ret    
64002e6b:	int3   
64002e6c:	int3   
64002e6d:	int3   
64002e6e:	int3   
64002e6f:	int3   
64002e70:	push   ebp
64002e71:	mov    ebp,esp
64002e73:	and    esp,0xfffffff8
64002e76:	push   0xffffffff
64002e78:	push   0x640236f0
64002e7d:	mov    eax,fs:0x0
64002e83:	push   eax
64002e84:	sub    esp,0x50
64002e87:	mov    eax,ds:0x64037644
64002e8c:	xor    eax,esp
64002e8e:	mov    DWORD PTR [esp+0x48],eax
64002e92:	push   ebx
64002e93:	push   esi
64002e94:	push   edi
64002e95:	mov    eax,ds:0x64037644
64002e9a:	xor    eax,esp
64002e9c:	push   eax
64002e9d:	lea    eax,[esp+0x60]
64002ea1:	mov    fs:0x0,eax
64002ea7:	mov    eax,ds:0x640399d4
64002eac:	mov    esi,DWORD PTR [ebp+0x8]
64002eaf:	xor    edi,edi
64002eb1:	cmp    eax,edi
64002eb3:	mov    DWORD PTR [esp+0x1c],esi
64002eb7:	jne    0x64002ec7
64002eb9:	push   edi
64002eba:	push   edi
64002ebb:	push   edi
64002ebc:	call   DWORD PTR ds:0x64024098
64002ec2:	mov    ds:0x640399d4,eax
64002ec7:	push   0xffffffff
64002ec9:	push   eax
64002eca:	call   DWORD PTR ds:0x64024088
64002ed0:	test   eax,eax
64002ed2:	je     0x64002edb
64002ed4:	mov    eax,esi
64002ed6:	jmp    0x6400306c
64002edb:	mov    eax,DWORD PTR [ebp+0xc]
64002ede:	push   eax
64002edf:	push   esi
64002ee0:	lea    ecx,[esp+0x28]
64002ee4:	mov    DWORD PTR [esp+0x40],0xf
64002eec:	mov    DWORD PTR [esp+0x3c],edi
64002ef0:	mov    BYTE PTR [esp+0x2c],0x0
64002ef5:	call   0x64003470
64002efa:	lea    ecx,[esp+0x20]
64002efe:	push   ecx
64002eff:	lea    edx,[esp+0x18]
64002f03:	push   edx
64002f04:	mov    DWORD PTR [esp+0x70],edi
64002f08:	call   0x640038a0
64002f0d:	mov    ecx,eax
64002f0f:	call   0x64003cc0
64002f14:	call   0x640038a0
64002f19:	mov    esi,DWORD PTR [esp+0x14]
64002f1d:	cmp    esi,edi
64002f1f:	mov    ebx,DWORD PTR [eax+0x4]
64002f22:	je     0x64002f28
64002f24:	cmp    esi,eax
64002f26:	je     0x64002f2d
64002f28:	call   0x64013e76
64002f2d:	mov    edi,DWORD PTR [esp+0x18]
64002f31:	cmp    edi,ebx
64002f33:	jne    0x64002faa
64002f35:	sub    esp,0x1c
64002f38:	mov    ecx,esp
64002f3a:	mov    DWORD PTR [esp+0x30],esp
64002f3e:	push   0xffffffff
64002f40:	push   0x0
64002f42:	lea    eax,[esp+0x44]
64002f46:	mov    DWORD PTR [ecx+0x18],0xf
64002f4d:	mov    DWORD PTR [ecx+0x14],0x0
64002f54:	push   eax
64002f55:	mov    BYTE PTR [ecx+0x4],0x0
64002f59:	call   0x64003390
64002f5e:	lea    ecx,[esp+0x58]
64002f62:	push   ecx
64002f63:	call   0x64003930
64002f68:	add    esp,0x20
64002f6b:	lea    edx,[esp+0x20]
64002f6f:	push   edx
64002f70:	mov    BYTE PTR [esp+0x6c],0x1
64002f75:	call   0x640038a0
64002f7a:	mov    ecx,eax
64002f7c:	call   0x64003b60
64002f81:	push   0xffffffff
64002f83:	push   0x0
64002f85:	lea    ecx,[esp+0x44]
64002f89:	push   ecx
64002f8a:	mov    ecx,eax
64002f8c:	call   0x64003390
64002f91:	mov    BYTE PTR [esp+0x68],0x0
64002f96:	cmp    DWORD PTR [esp+0x54],0x10
64002f9b:	jb     0x64002faa
64002f9d:	mov    edx,DWORD PTR [esp+0x40]
64002fa1:	push   edx
64002fa2:	call   0x64013644
64002fa7:	add    esp,0x4
64002faa:	mov    eax,DWORD PTR [ebp+0x10]
64002fad:	movzx  ecx,BYTE PTR [eax]
64002fb0:	cmp    ecx,0x100
64002fb6:	jge    0x64002fd3
64002fb8:	lea    edx,[esp+0x20]
64002fbc:	push   edx
64002fbd:	lea    eax,[esp+0x18]
64002fc1:	push   eax
64002fc2:	call   0x640038a0
64002fc7:	mov    ecx,eax
64002fc9:	call   0x64003cc0
64002fce:	mov    esi,DWORD PTR [eax]
64002fd0:	mov    edi,DWORD PTR [eax+0x4]
64002fd3:	call   0x640038a0
64002fd8:	test   esi,esi
64002fda:	mov    ebx,DWORD PTR [eax+0x4]
64002fdd:	je     0x64002fe3
64002fdf:	cmp    esi,eax
64002fe1:	je     0x64002fe8
64002fe3:	call   0x64013e76
64002fe8:	cmp    edi,ebx
64002fea:	je     0x6400300f
64002fec:	test   esi,esi
64002fee:	jne    0x64002ff5
64002ff0:	call   0x64013e76
64002ff5:	cmp    edi,DWORD PTR [esi+0x4]
64002ff8:	jne    0x64002fff
64002ffa:	call   0x64013e76
64002fff:	cmp    DWORD PTR [edi+0x40],0x10
64003003:	jb     0x6400300a
64003005:	mov    edi,DWORD PTR [edi+0x2c]
64003008:	jmp    0x64003013
6400300a:	add    edi,0x2c
6400300d:	jmp    0x64003013
6400300f:	mov    edi,DWORD PTR [esp+0x1c]
64003013:	cmp    DWORD PTR ds:0x640399d0,0x0
6400301a:	jne    0x64003038
6400301c:	push   0x64029978
64003021:	push   0x64029988
64003026:	call   DWORD PTR ds:0x6402409c
6400302c:	push   eax
6400302d:	call   DWORD PTR ds:0x64024094
64003033:	mov    ds:0x640399d0,eax
64003038:	mov    eax,ds:0x640399d4
6400303d:	test   eax,eax
6400303f:	jne    0x6400304f
64003041:	push   eax
64003042:	push   eax
64003043:	push   eax
64003044:	call   DWORD PTR ds:0x64024098
6400304a:	mov    ds:0x640399d4,eax
6400304f:	push   eax
64003050:	call   DWORD PTR ds:0x640399d0
64003056:	cmp    DWORD PTR [esp+0x38],0x10
6400305b:	jb     0x6400306a
6400305d:	mov    ecx,DWORD PTR [esp+0x24]
64003061:	push   ecx
64003062:	call   0x64013644
64003067:	add    esp,0x4
6400306a:	mov    eax,edi
6400306c:	mov    ecx,DWORD PTR [esp+0x60]
64003070:	mov    DWORD PTR fs:0x0,ecx
64003077:	pop    ecx
64003078:	pop    edi
64003079:	pop    esi
6400307a:	pop    ebx
6400307b:	mov    ecx,DWORD PTR [esp+0x48]
6400307f:	xor    ecx,esp
64003081:	call   0x64013d06
64003086:	mov    esp,ebp
64003088:	pop    ebp
64003089:	ret    
6400308a:	int3   
6400308b:	int3   
6400308c:	int3   
6400308d:	int3   
6400308e:	int3   
6400308f:	int3   
64003090:	push   ebp
64003091:	mov    ebp,esp
64003093:	and    esp,0xfffffff8
64003096:	push   0xffffffff
64003098:	push   0x640236b0
6400309d:	mov    eax,fs:0x0
640030a3:	push   eax
640030a4:	sub    esp,0x50
640030a7:	mov    eax,ds:0x64037644
640030ac:	xor    eax,esp
640030ae:	mov    DWORD PTR [esp+0x48],eax
640030b2:	push   ebx
640030b3:	push   esi
640030b4:	push   edi
640030b5:	mov    eax,ds:0x64037644
640030ba:	xor    eax,esp
640030bc:	push   eax
640030bd:	lea    eax,[esp+0x60]
640030c1:	mov    fs:0x0,eax
640030c7:	mov    eax,ds:0x640399d4
640030cc:	xor    ebx,ebx
640030ce:	cmp    eax,ebx
640030d0:	mov    esi,ecx
640030d2:	mov    DWORD PTR [esp+0x1c],esi
640030d6:	jne    0x640030e6
640030d8:	push   ebx
640030d9:	push   ebx
640030da:	push   ebx
640030db:	call   DWORD PTR ds:0x64024098
640030e1:	mov    ds:0x640399d4,eax
640030e6:	push   0xffffffff
640030e8:	push   eax
640030e9:	call   DWORD PTR ds:0x64024088
640030ef:	test   eax,eax
640030f1:	je     0x640030fa
640030f3:	mov    eax,esi
640030f5:	jmp    0x64003280
640030fa:	mov    eax,DWORD PTR [ebp+0x8]
640030fd:	push   eax
640030fe:	push   esi
640030ff:	lea    esi,[esp+0x28]
64003103:	mov    DWORD PTR [esp+0x40],0x7
6400310b:	mov    DWORD PTR [esp+0x3c],ebx
6400310f:	mov    WORD PTR [esp+0x2c],bx
64003114:	call   0x64004820
64003119:	mov    ecx,esi
6400311b:	push   ecx
6400311c:	lea    edx,[esp+0x18]
64003120:	push   edx
64003121:	mov    DWORD PTR [esp+0x70],ebx
64003125:	call   0x64003a00
6400312a:	mov    ebx,eax
6400312c:	call   0x64003ef0
64003131:	call   0x64003a00
64003136:	mov    ebx,DWORD PTR [esp+0x14]
6400313a:	test   ebx,ebx
6400313c:	mov    esi,DWORD PTR [eax+0x4]
6400313f:	je     0x64003145
64003141:	cmp    ebx,eax
64003143:	je     0x6400314a
64003145:	call   0x64013e76
6400314a:	mov    edi,DWORD PTR [esp+0x18]
6400314e:	cmp    edi,esi
64003150:	jne    0x640031bf
64003152:	sub    esp,0x1c
64003155:	mov    ecx,esp
64003157:	xor    eax,eax
64003159:	mov    DWORD PTR [esp+0x30],esp
6400315d:	mov    DWORD PTR [ecx+0x14],eax
64003160:	push   0xffffffff
64003162:	mov    DWORD PTR [ecx+0x18],0x7
64003169:	mov    WORD PTR [ecx+0x4],ax
6400316d:	push   eax
6400316e:	lea    eax,[esp+0x44]
64003172:	call   0x64004770
64003177:	lea    esi,[esp+0x58]
6400317b:	call   0x64003a90
64003180:	add    esp,0x1c
64003183:	lea    eax,[esp+0x20]
64003187:	push   eax
64003188:	mov    BYTE PTR [esp+0x6c],0x1
6400318d:	call   0x64003a00
64003192:	mov    ecx,eax
64003194:	call   0x64003da0
64003199:	push   0xffffffff
6400319b:	mov    ecx,eax
6400319d:	push   0x0
6400319f:	mov    eax,esi
640031a1:	call   0x64004770
640031a6:	mov    BYTE PTR [esp+0x68],0x0
640031ab:	cmp    DWORD PTR [esp+0x54],0x8
640031b0:	jb     0x640031bf
640031b2:	mov    ecx,DWORD PTR [esp+0x40]
640031b6:	push   ecx
640031b7:	call   0x64013644
640031bc:	add    esp,0x4
640031bf:	mov    edx,DWORD PTR [ebp+0xc]
640031c2:	movzx  eax,BYTE PTR [edx]
640031c5:	cmp    eax,0x100
640031ca:	jge    0x640031e7
640031cc:	lea    ecx,[esp+0x20]
640031d0:	push   ecx
640031d1:	lea    edx,[esp+0x18]
640031d5:	push   edx
640031d6:	call   0x64003a00
640031db:	mov    ebx,eax
640031dd:	call   0x64003ef0
640031e2:	mov    ebx,DWORD PTR [eax]
640031e4:	mov    edi,DWORD PTR [eax+0x4]
640031e7:	call   0x64003a00
640031ec:	test   ebx,ebx
640031ee:	mov    esi,DWORD PTR [eax+0x4]
640031f1:	je     0x640031f7
640031f3:	cmp    ebx,eax
640031f5:	je     0x640031fc
640031f7:	call   0x64013e76
640031fc:	cmp    edi,esi
640031fe:	je     0x64003223
64003200:	test   ebx,ebx
64003202:	jne    0x64003209
64003204:	call   0x64013e76
64003209:	cmp    edi,DWORD PTR [ebx+0x4]
6400320c:	jne    0x64003213
6400320e:	call   0x64013e76
64003213:	cmp    DWORD PTR [edi+0x40],0x8
64003217:	jb     0x6400321e
64003219:	mov    edi,DWORD PTR [edi+0x2c]
6400321c:	jmp    0x64003227
6400321e:	add    edi,0x2c
64003221:	jmp    0x64003227
64003223:	mov    edi,DWORD PTR [esp+0x1c]
64003227:	cmp    DWORD PTR ds:0x640399d0,0x0
6400322e:	jne    0x6400324c
64003230:	push   0x64029978
64003235:	push   0x64029988
6400323a:	call   DWORD PTR ds:0x6402409c
64003240:	push   eax
64003241:	call   DWORD PTR ds:0x64024094
64003247:	mov    ds:0x640399d0,eax
6400324c:	mov    eax,ds:0x640399d4
64003251:	test   eax,eax
64003253:	jne    0x64003263
64003255:	push   eax
64003256:	push   eax
64003257:	push   eax
64003258:	call   DWORD PTR ds:0x64024098
6400325e:	mov    ds:0x640399d4,eax
64003263:	push   eax
64003264:	call   DWORD PTR ds:0x640399d0
6400326a:	cmp    DWORD PTR [esp+0x38],0x8
6400326f:	jb     0x6400327e
64003271:	mov    eax,DWORD PTR [esp+0x24]
64003275:	push   eax
64003276:	call   0x64013644
6400327b:	add    esp,0x4
6400327e:	mov    eax,edi
64003280:	mov    ecx,DWORD PTR [esp+0x60]
64003284:	mov    DWORD PTR fs:0x0,ecx
6400328b:	pop    ecx
6400328c:	pop    edi
6400328d:	pop    esi
6400328e:	pop    ebx
6400328f:	mov    ecx,DWORD PTR [esp+0x48]
64003293:	xor    ecx,esp
64003295:	call   0x64013d06
6400329a:	mov    esp,ebp
6400329c:	pop    ebp
6400329d:	ret    
6400329e:	int3   
6400329f:	int3   
640032a0:	push   ebx
640032a1:	push   ebp
640032a2:	mov    ebp,DWORD PTR [esp+0xc]
640032a6:	push   edi
640032a7:	mov    edi,DWORD PTR [esp+0x14]
640032ab:	cmp    DWORD PTR [ebp+0x14],edi
640032ae:	mov    ebx,eax
640032b0:	jae    0x640032b7
640032b2:	call   0x64012f5b
640032b7:	mov    eax,DWORD PTR [ebp+0x14]
640032ba:	sub    eax,edi
640032bc:	cmp    eax,ebx
640032be:	jae    0x640032c2
640032c0:	mov    ebx,eax
640032c2:	mov    eax,DWORD PTR [esi+0x14]
640032c5:	or     ecx,0xffffffff
640032c8:	sub    ecx,eax
640032ca:	cmp    ecx,ebx
640032cc:	jbe    0x640032d5
640032ce:	lea    edx,[eax+ebx*1]
640032d1:	cmp    edx,eax
640032d3:	jae    0x640032da
640032d5:	call   0x64012f1c
640032da:	test   ebx,ebx
640032dc:	jbe    0x64003386
640032e2:	mov    edi,DWORD PTR [esi+0x14]
640032e5:	add    edi,ebx
640032e7:	cmp    edi,0xfffffffe
640032ea:	jbe    0x640032f1
640032ec:	call   0x64012f1c
640032f1:	mov    eax,DWORD PTR [esi+0x18]
640032f4:	cmp    eax,edi
640032f6:	jae    0x64003313
640032f8:	mov    eax,DWORD PTR [esi+0x14]
640032fb:	push   eax
640032fc:	push   edi
640032fd:	mov    ecx,esi
640032ff:	call   0x640040e0
64003304:	test   edi,edi
64003306:	jbe    0x64003386
64003308:	cmp    DWORD PTR [ebp+0x18],0x10
6400330c:	jb     0x6400333b
6400330e:	mov    ebp,DWORD PTR [ebp+0x4]
64003311:	jmp    0x6400333e
64003313:	test   edi,edi
64003315:	jne    0x64003306
64003317:	cmp    eax,0x10
6400331a:	mov    DWORD PTR [esi+0x14],edi
6400331d:	jb     0x6400332d
6400331f:	mov    eax,DWORD PTR [esi+0x4]
64003322:	pop    edi
64003323:	pop    ebp
64003324:	mov    BYTE PTR [eax],0x0
64003327:	mov    eax,esi
64003329:	pop    ebx
6400332a:	ret    0x8
6400332d:	pop    edi
6400332e:	lea    eax,[esi+0x4]
64003331:	pop    ebp
64003332:	mov    BYTE PTR [eax],0x0
64003335:	mov    eax,esi
64003337:	pop    ebx
64003338:	ret    0x8
6400333b:	add    ebp,0x4
6400333e:	mov    eax,DWORD PTR [esi+0x18]
64003341:	cmp    eax,0x10
64003344:	jb     0x6400334b
64003346:	mov    edx,DWORD PTR [esi+0x4]
64003349:	jmp    0x6400334e
6400334b:	lea    edx,[esi+0x4]
6400334e:	mov    ecx,DWORD PTR [esi+0x14]
64003351:	push   ebx
64003352:	mov    ebx,DWORD PTR [esp+0x18]
64003356:	add    ebp,ebx
64003358:	sub    eax,ecx
6400335a:	push   ebp
6400335b:	push   eax
6400335c:	add    ecx,edx
6400335e:	push   ecx
6400335f:	call   0x6401379c
64003364:	add    esp,0x10
64003367:	cmp    DWORD PTR [esi+0x18],0x10
6400336b:	mov    DWORD PTR [esi+0x14],edi
6400336e:	jb     0x6400337f
64003370:	mov    eax,DWORD PTR [esi+0x4]
64003373:	mov    BYTE PTR [eax+edi*1],0x0
64003377:	pop    edi
64003378:	pop    ebp
64003379:	mov    eax,esi
6400337b:	pop    ebx
6400337c:	ret    0x8
6400337f:	lea    eax,[esi+0x4]
64003382:	mov    BYTE PTR [eax+edi*1],0x0
64003386:	pop    edi
64003387:	pop    ebp
64003388:	mov    eax,esi
6400338a:	pop    ebx
6400338b:	ret    0x8
6400338e:	int3   
6400338f:	int3   
64003390:	push   ebx
64003391:	mov    ebx,DWORD PTR [esp+0x8]
64003395:	push   ebp
64003396:	mov    ebp,DWORD PTR [esp+0x10]
6400339a:	cmp    DWORD PTR [ebx+0x14],ebp
6400339d:	push   esi
6400339e:	push   edi
6400339f:	mov    esi,ecx
640033a1:	jae    0x640033a8
640033a3:	call   0x64012f5b
640033a8:	mov    edi,DWORD PTR [ebx+0x14]
640033ab:	mov    eax,DWORD PTR [esp+0x1c]
640033af:	sub    edi,ebp
640033b1:	cmp    eax,edi
640033b3:	jae    0x640033b7
640033b5:	mov    edi,eax
640033b7:	cmp    esi,ebx
640033b9:	jne    0x640033da
640033bb:	push   0xffffffff
640033bd:	add    edi,ebp
640033bf:	push   edi
640033c0:	mov    ecx,esi
640033c2:	call   0x64004050
640033c7:	push   ebp
640033c8:	push   0x0
640033ca:	mov    ecx,esi
640033cc:	call   0x64004050
640033d1:	pop    edi
640033d2:	mov    eax,esi
640033d4:	pop    esi
640033d5:	pop    ebp
640033d6:	pop    ebx
640033d7:	ret    0xc
640033da:	cmp    edi,0xfffffffe
640033dd:	jbe    0x640033e4
640033df:	call   0x64012f1c
640033e4:	mov    eax,DWORD PTR [esi+0x18]
640033e7:	cmp    eax,edi
640033e9:	jae    0x64003406
640033eb:	mov    eax,DWORD PTR [esi+0x14]
640033ee:	push   eax
640033ef:	push   edi
640033f0:	mov    ecx,esi
640033f2:	call   0x640040e0
640033f7:	test   edi,edi
640033f9:	jbe    0x64003461
640033fb:	cmp    DWORD PTR [ebx+0x18],0x10
640033ff:	jb     0x64003430
64003401:	mov    edx,DWORD PTR [ebx+0x4]
64003404:	jmp    0x64003433
64003406:	test   edi,edi
64003408:	jne    0x640033f9
6400340a:	cmp    eax,0x10
6400340d:	mov    DWORD PTR [esi+0x14],edi
64003410:	jb     0x64003421
64003412:	mov    eax,DWORD PTR [esi+0x4]
64003415:	pop    edi
64003416:	mov    BYTE PTR [eax],0x0
64003419:	mov    eax,esi
6400341b:	pop    esi
6400341c:	pop    ebp
6400341d:	pop    ebx
6400341e:	ret    0xc
64003421:	lea    eax,[esi+0x4]
64003424:	pop    edi
64003425:	mov    BYTE PTR [eax],0x0
64003428:	mov    eax,esi
6400342a:	pop    esi
6400342b:	pop    ebp
6400342c:	pop    ebx
6400342d:	ret    0xc
64003430:	lea    edx,[ebx+0x4]
64003433:	mov    ecx,DWORD PTR [esi+0x18]
64003436:	cmp    ecx,0x10
64003439:	lea    ebx,[esi+0x4]
6400343c:	jb     0x64003442
6400343e:	mov    eax,DWORD PTR [ebx]
64003440:	jmp    0x64003444
64003442:	mov    eax,ebx
64003444:	push   edi
64003445:	add    edx,ebp
64003447:	push   edx
64003448:	push   ecx
64003449:	push   eax
6400344a:	call   0x6401379c
6400344f:	add    esp,0x10
64003452:	cmp    DWORD PTR [esi+0x18],0x10
64003456:	mov    DWORD PTR [esi+0x14],edi
64003459:	jb     0x6400345d
6400345b:	mov    ebx,DWORD PTR [ebx]
6400345d:	mov    BYTE PTR [ebx+edi*1],0x0
64003461:	pop    edi
64003462:	mov    eax,esi
64003464:	pop    esi
64003465:	pop    ebp
64003466:	pop    ebx
64003467:	ret    0xc
6400346a:	int3   
6400346b:	int3   
6400346c:	int3   
6400346d:	int3   
6400346e:	int3   
6400346f:	int3   
64003470:	push   ebx
64003471:	push   ebp
64003472:	push   esi
64003473:	mov    esi,ecx
64003475:	mov    ecx,DWORD PTR [esi+0x18]
64003478:	cmp    ecx,0x10
6400347b:	lea    ebx,[esi+0x4]
6400347e:	jb     0x64003484
64003480:	mov    eax,DWORD PTR [ebx]
64003482:	jmp    0x64003486
64003484:	mov    eax,ebx
64003486:	mov    ebp,DWORD PTR [esp+0x10]
6400348a:	cmp    ebp,eax
6400348c:	jb     0x640034bf
6400348e:	cmp    ecx,0x10
64003491:	jb     0x64003497
64003493:	mov    eax,DWORD PTR [ebx]
64003495:	jmp    0x64003499
64003497:	mov    eax,ebx
64003499:	mov    edx,DWORD PTR [esi+0x14]
6400349c:	add    edx,eax
6400349e:	cmp    edx,ebp
640034a0:	jbe    0x640034bf
640034a2:	cmp    ecx,0x10
640034a5:	jb     0x640034a9
640034a7:	mov    ebx,DWORD PTR [ebx]
640034a9:	mov    eax,DWORD PTR [esp+0x14]
640034ad:	push   eax
640034ae:	sub    ebp,ebx
640034b0:	push   ebp
640034b1:	push   esi
640034b2:	mov    ecx,esi
640034b4:	call   0x64003390
640034b9:	pop    esi
640034ba:	pop    ebp
640034bb:	pop    ebx
640034bc:	ret    0x8
640034bf:	push   edi
640034c0:	mov    edi,DWORD PTR [esp+0x18]
640034c4:	cmp    edi,0xfffffffe
640034c7:	jbe    0x640034ce
640034c9:	call   0x64012f1c
640034ce:	mov    eax,DWORD PTR [esi+0x18]
640034d1:	cmp    eax,edi
640034d3:	jae    0x640034f1
640034d5:	mov    ecx,DWORD PTR [esi+0x14]
640034d8:	push   ecx
640034d9:	push   edi
640034da:	mov    ecx,esi
640034dc:	call   0x640040e0
640034e1:	test   edi,edi
640034e3:	jbe    0x64003528
640034e5:	mov    ecx,DWORD PTR [esi+0x18]
640034e8:	cmp    ecx,0x10
640034eb:	jb     0x6400350b
640034ed:	mov    eax,DWORD PTR [ebx]
640034ef:	jmp    0x6400350d
640034f1:	test   edi,edi
640034f3:	jne    0x640034e3
640034f5:	cmp    eax,0x10
640034f8:	mov    DWORD PTR [esi+0x14],edi
640034fb:	jb     0x640034ff
640034fd:	mov    ebx,DWORD PTR [ebx]
640034ff:	pop    edi
64003500:	mov    eax,esi
64003502:	pop    esi
64003503:	pop    ebp
64003504:	mov    BYTE PTR [ebx],0x0
64003507:	pop    ebx
64003508:	ret    0x8
6400350b:	mov    eax,ebx
6400350d:	push   edi
6400350e:	push   ebp
6400350f:	push   ecx
64003510:	push   eax
64003511:	call   0x6401379c
64003516:	add    esp,0x10
64003519:	cmp    DWORD PTR [esi+0x18],0x10
6400351d:	mov    DWORD PTR [esi+0x14],edi
64003520:	jb     0x64003524
64003522:	mov    ebx,DWORD PTR [ebx]
64003524:	mov    BYTE PTR [ebx+edi*1],0x0
64003528:	pop    edi
64003529:	mov    eax,esi
6400352b:	pop    esi
6400352c:	pop    ebp
6400352d:	pop    ebx
6400352e:	ret    0x8
64003531:	int3   
64003532:	int3   
64003533:	int3   
64003534:	int3   
64003535:	int3   
64003536:	int3   
64003537:	int3   
64003538:	int3   
64003539:	int3   
6400353a:	int3   
6400353b:	int3   
6400353c:	int3   
6400353d:	int3   
6400353e:	int3   
6400353f:	int3   
64003540:	push   ebx
64003541:	push   ebp
64003542:	mov    ebp,DWORD PTR [esp+0xc]
64003546:	push   esi
64003547:	push   edi
64003548:	mov    edi,ecx
6400354a:	cmp    DWORD PTR [edi+0x14],ebp
6400354d:	jae    0x64003554
6400354f:	call   0x64012f5b
64003554:	mov    eax,DWORD PTR [edi+0x14]
64003557:	mov    esi,DWORD PTR [esp+0x18]
6400355b:	sub    eax,ebp
6400355d:	cmp    eax,esi
6400355f:	jae    0x64003563
64003561:	mov    esi,eax
64003563:	mov    ebx,DWORD PTR [esp+0x20]
64003567:	cmp    esi,ebx
64003569:	mov    eax,esi
6400356b:	jb     0x6400356f
6400356d:	mov    eax,ebx
6400356f:	cmp    DWORD PTR [edi+0x18],0x10
64003573:	jb     0x6400357a
64003575:	mov    edi,DWORD PTR [edi+0x4]
64003578:	jmp    0x6400357d
6400357a:	add    edi,0x4
6400357d:	push   eax
6400357e:	mov    eax,DWORD PTR [esp+0x20]
64003582:	push   eax
64003583:	add    edi,ebp
64003585:	push   edi
64003586:	call   0x64001270
6400358b:	add    esp,0xc
6400358e:	test   eax,eax
64003590:	jne    0x640035a7
64003592:	cmp    esi,ebx
64003594:	jae    0x640035a0
64003596:	pop    edi
64003597:	pop    esi
64003598:	pop    ebp
64003599:	or     eax,0xffffffff
6400359c:	pop    ebx
6400359d:	ret    0x10
640035a0:	xor    eax,eax
640035a2:	cmp    esi,ebx
640035a4:	setne  al
640035a7:	pop    edi
640035a8:	pop    esi
640035a9:	pop    ebp
640035aa:	pop    ebx
640035ab:	ret    0x10
640035ae:	int3   
640035af:	int3   
640035b0:	mov    ecx,DWORD PTR [esp+0x4]
640035b4:	sub    esp,0xc
640035b7:	test   ecx,ecx
640035b9:	ja     0x640035cc
640035bb:	xor    ecx,ecx
640035bd:	push   ecx
640035be:	call   0x640138d5
640035c3:	add    esp,0x4
640035c6:	add    esp,0xc
640035c9:	ret    0x4
640035cc:	or     eax,0xffffffff
640035cf:	xor    edx,edx
640035d1:	div    ecx
640035d3:	cmp    eax,0x1
640035d6:	jae    0x640035bd
640035d8:	lea    eax,[esp+0x10]
640035dc:	push   eax
640035dd:	lea    ecx,[esp+0x4]
640035e1:	mov    DWORD PTR [esp+0x14],0x0
640035e9:	call   0x6401365a
640035ee:	push   0x6402bd7c
640035f3:	lea    ecx,[esp+0x4]
640035f7:	push   ecx
640035f8:	mov    DWORD PTR [esp+0x8],0x640242a4
64003600:	call   0x64013872
64003605:	int3   
64003606:	int3   
64003607:	int3   
64003608:	int3   
64003609:	int3   
6400360a:	int3   
6400360b:	int3   
6400360c:	int3   
6400360d:	int3   
6400360e:	int3   
6400360f:	int3   
64003610:	push   ebx
64003611:	mov    ebx,DWORD PTR [esp+0x8]
64003615:	test   ebx,ebx
64003617:	push   ebp
64003618:	push   esi
64003619:	push   edi
6400361a:	mov    edi,ecx
6400361c:	je     0x64003694
6400361e:	call   DWORD PTR ds:0x6403761c
64003624:	mov    ebp,DWORD PTR ds:0x64024028
6400362a:	push   0x0
6400362c:	push   0x0
6400362e:	push   0xffffffff
64003630:	push   ebx
64003631:	push   0x0
64003633:	push   eax
64003634:	call   ebp
64003636:	mov    esi,eax
64003638:	sub    esi,0x1
6400363b:	test   esi,esi
6400363d:	jle    0x64003694
6400363f:	mov    eax,DWORD PTR [edi]
64003641:	mov    edx,DWORD PTR [eax-0x8]
64003644:	sub    eax,0x10
64003647:	mov    ecx,0x1
6400364c:	sub    ecx,DWORD PTR [eax+0xc]
6400364f:	sub    edx,esi
64003651:	or     ecx,edx
64003653:	jge    0x6400365d
64003655:	push   esi
64003656:	mov    ecx,edi
64003658:	call   0x640043e0
6400365d:	mov    eax,DWORD PTR [edi]
6400365f:	push   esi
64003660:	push   eax
64003661:	push   0xffffffff
64003663:	push   ebx
64003664:	push   0x0
64003666:	call   DWORD PTR ds:0x6403761c
6400366c:	push   eax
6400366d:	call   ebp
6400366f:	mov    eax,DWORD PTR [edi]
64003671:	cmp    esi,DWORD PTR [eax-0x8]
64003674:	jg     0x6400368a
64003676:	mov    DWORD PTR [eax-0xc],esi
64003679:	mov    eax,DWORD PTR [edi]
6400367b:	mov    WORD PTR [eax+esi*2],0x0
64003681:	mov    eax,edi
64003683:	pop    edi
64003684:	pop    esi
64003685:	pop    ebp
64003686:	pop    ebx
64003687:	ret    0x4
6400368a:	push   0x80070057
6400368f:	call   0x64001040
64003694:	mov    ecx,edi
64003696:	call   0x640042c0
6400369b:	mov    eax,edi
6400369d:	pop    edi
6400369e:	pop    esi
6400369f:	pop    ebp
640036a0:	pop    ebx
640036a1:	ret    0x4
640036a4:	int3   
640036a5:	int3   
640036a6:	int3   
640036a7:	int3   
640036a8:	int3   
640036a9:	int3   
640036aa:	int3   
640036ab:	int3   
640036ac:	int3   
640036ad:	int3   
640036ae:	int3   
640036af:	int3   
640036b0:	mov    eax,DWORD PTR [ecx]
640036b2:	sub    eax,0x10
640036b5:	lea    ecx,[eax+0xc]
640036b8:	or     edx,0xffffffff
640036bb:	lock xadd DWORD PTR [ecx],edx
640036bf:	dec    edx
640036c0:	test   edx,edx
640036c2:	jg     0x640036ce
640036c4:	mov    ecx,DWORD PTR [eax]
640036c6:	mov    edx,DWORD PTR [ecx]
640036c8:	push   eax
640036c9:	mov    eax,DWORD PTR [edx+0x4]
640036cc:	call   eax
640036ce:	ret    
640036cf:	int3   
640036d0:	mov    ecx,DWORD PTR [esp+0xc]
640036d4:	push   ebx
640036d5:	push   ebp
640036d6:	mov    ebp,DWORD PTR [esp+0xc]
640036da:	mov    eax,DWORD PTR [ebp+0x0]
640036dd:	mov    ebx,DWORD PTR [eax-0xc]
640036e0:	push   esi
640036e1:	mov    esi,DWORD PTR [esp+0x14]
640036e5:	sub    esi,eax
640036e7:	mov    edx,0x1
640036ec:	sub    edx,DWORD PTR [eax-0x4]
640036ef:	mov    eax,DWORD PTR [eax-0x8]
640036f2:	push   edi
640036f3:	lea    edi,[ebx+ecx*1]
640036f6:	sub    eax,edi
640036f8:	sar    esi,1
640036fa:	or     edx,eax
640036fc:	jge    0x64003706
640036fe:	push   edi
640036ff:	mov    ecx,ebp
64003701:	call   0x640043e0
64003706:	cmp    esi,ebx
64003708:	mov    ecx,DWORD PTR [ebp+0x0]
6400370b:	ja     0x64003714
6400370d:	lea    edx,[ecx+esi*2]
64003710:	mov    DWORD PTR [esp+0x18],edx
64003714:	mov    eax,DWORD PTR [esp+0x1c]
64003718:	mov    edx,DWORD PTR [esp+0x18]
6400371c:	add    eax,eax
6400371e:	push   eax
6400371f:	push   edx
64003720:	push   eax
64003721:	lea    eax,[ecx+ebx*2]
64003724:	push   eax
64003725:	call   0x6401379c
6400372a:	add    esp,0x10
6400372d:	test   edi,edi
6400372f:	jl     0x6400374c
64003731:	mov    eax,DWORD PTR [ebp+0x0]
64003734:	cmp    edi,DWORD PTR [eax-0x8]
64003737:	jg     0x6400374c
64003739:	mov    DWORD PTR [eax-0xc],edi
6400373c:	mov    ecx,DWORD PTR [ebp+0x0]
6400373f:	mov    WORD PTR [ecx+edi*2],0x0
64003745:	pop    edi
64003746:	pop    esi
64003747:	pop    ebp
64003748:	pop    ebx
64003749:	ret    0xc
6400374c:	push   0x80070057
64003751:	call   0x64001040
64003756:	int3   
64003757:	int3   
64003758:	int3   
64003759:	int3   
6400375a:	int3   
6400375b:	int3   
6400375c:	int3   
6400375d:	int3   
6400375e:	int3   
6400375f:	int3   
64003760:	mov    eax,DWORD PTR [esp+0x4]
64003764:	test   eax,eax
64003766:	jl     0x6400377d
64003768:	mov    edx,DWORD PTR [ecx]
6400376a:	cmp    eax,DWORD PTR [edx-0x8]
6400376d:	jg     0x6400377d
6400376f:	mov    DWORD PTR [edx-0xc],eax
64003772:	mov    ecx,DWORD PTR [ecx]
64003774:	mov    WORD PTR [ecx+eax*2],0x0
6400377a:	ret    0x4
6400377d:	push   0x80070057
64003782:	call   0x64001040
64003787:	int3   
64003788:	int3   
64003789:	int3   
6400378a:	int3   
6400378b:	int3   
6400378c:	int3   
6400378d:	int3   
6400378e:	int3   
6400378f:	int3   
64003790:	push   ebp
64003791:	mov    ebp,DWORD PTR [esp+0x8]
64003795:	push   esi
64003796:	mov    esi,eax
64003798:	mov    eax,DWORD PTR [esp+0x18]
6400379c:	push   edi
6400379d:	lea    edi,[esi+eax*1]
640037a0:	mov    eax,DWORD PTR [ebp+0x0]
640037a3:	mov    edx,DWORD PTR [eax-0x8]
640037a6:	sub    eax,0x10
640037a9:	mov    ecx,0x1
640037ae:	sub    ecx,DWORD PTR [eax+0xc]
640037b1:	sub    edx,edi
640037b3:	or     ecx,edx
640037b5:	jge    0x640037bf
640037b7:	push   edi
640037b8:	mov    ecx,ebp
640037ba:	call   0x640043e0
640037bf:	mov    eax,DWORD PTR [esp+0x14]
640037c3:	push   ebx
640037c4:	mov    ebx,DWORD PTR [ebp+0x0]
640037c7:	add    esi,esi
640037c9:	push   esi
640037ca:	push   eax
640037cb:	push   esi
640037cc:	push   ebx
640037cd:	call   0x6401379c
640037d2:	mov    eax,DWORD PTR [esp+0x30]
640037d6:	mov    ecx,DWORD PTR [esp+0x2c]
640037da:	add    eax,eax
640037dc:	push   eax
640037dd:	push   ecx
640037de:	push   eax
640037df:	add    esi,ebx
640037e1:	push   esi
640037e2:	call   0x6401379c
640037e7:	add    esp,0x20
640037ea:	test   edi,edi
640037ec:	pop    ebx
640037ed:	jl     0x64003807
640037ef:	mov    eax,DWORD PTR [ebp+0x0]
640037f2:	cmp    edi,DWORD PTR [eax-0x8]
640037f5:	jg     0x64003807
640037f7:	mov    DWORD PTR [eax-0xc],edi
640037fa:	mov    edx,DWORD PTR [ebp+0x0]
640037fd:	mov    WORD PTR [edx+edi*2],0x0
64003803:	pop    edi
64003804:	pop    esi
64003805:	pop    ebp
64003806:	ret    
64003807:	push   0x80070057
6400380c:	call   0x64001040
64003811:	int3   
64003812:	int3   
64003813:	int3   
64003814:	int3   
64003815:	int3   
64003816:	int3   
64003817:	int3   
64003818:	int3   
64003819:	int3   
6400381a:	int3   
6400381b:	int3   
6400381c:	int3   
6400381d:	int3   
6400381e:	int3   
6400381f:	int3   
64003820:	push   ecx
64003821:	push   ebx
64003822:	push   ebp
64003823:	push   esi
64003824:	mov    esi,DWORD PTR [ecx]
64003826:	mov    ebx,DWORD PTR [esi-0xc]
64003829:	sub    esi,0x10
6400382c:	mov    DWORD PTR [esp+0xc],ecx
64003830:	mov    ecx,DWORD PTR [esi]
64003832:	mov    eax,DWORD PTR [ecx]
64003834:	mov    edx,DWORD PTR [eax+0x10]
64003837:	push   edi
64003838:	call   edx
6400383a:	mov    edx,DWORD PTR [eax]
6400383c:	mov    ebp,DWORD PTR [esp+0x18]
64003840:	push   0x2
64003842:	mov    ecx,eax
64003844:	mov    eax,DWORD PTR [edx]
64003846:	push   ebp
64003847:	call   eax
64003849:	mov    edi,eax
6400384b:	test   edi,edi
6400384d:	jne    0x64003854
6400384f:	call   0x640043d0
64003854:	cmp    ebx,ebp
64003856:	jge    0x6400385a
64003858:	mov    ebp,ebx
6400385a:	lea    eax,[ebp+ebp*1+0x2]
6400385e:	push   eax
6400385f:	lea    ecx,[esi+0x10]
64003862:	push   ecx
64003863:	push   eax
64003864:	lea    ebp,[edi+0x10]
64003867:	push   ebp
64003868:	call   0x6401379c
6400386d:	add    esp,0x10
64003870:	mov    DWORD PTR [edi+0x4],ebx
64003873:	lea    edx,[esi+0xc]
64003876:	or     eax,0xffffffff
64003879:	lock xadd DWORD PTR [edx],eax
6400387d:	dec    eax
6400387e:	test   eax,eax
64003880:	jg     0x6400388c
64003882:	mov    ecx,DWORD PTR [esi]
64003884:	mov    edx,DWORD PTR [ecx]
64003886:	mov    eax,DWORD PTR [edx+0x4]
64003889:	push   esi
6400388a:	call   eax
6400388c:	mov    ecx,DWORD PTR [esp+0x10]
64003890:	pop    edi
64003891:	pop    esi
64003892:	mov    DWORD PTR [ecx],ebp
64003894:	pop    ebp
64003895:	pop    ebx
64003896:	pop    ecx
64003897:	ret    0x4
6400389a:	int3   
6400389b:	int3   
6400389c:	int3   
6400389d:	int3   
6400389e:	int3   
6400389f:	int3   
640038a0:	push   0xffffffff
640038a2:	push   0x6402367e
640038a7:	mov    eax,fs:0x0
640038ad:	push   eax
640038ae:	mov    eax,ds:0x64037644
640038b3:	xor    eax,esp
640038b5:	push   eax
640038b6:	lea    eax,[esp+0x4]
640038ba:	mov    fs:0x0,eax
640038c0:	test   BYTE PTR ds:0x6403998c,0x1
640038c7:	jne    0x64003919
640038c9:	or     DWORD PTR ds:0x6403998c,0x1
640038d0:	mov    ecx,0x64039970
640038d5:	mov    DWORD PTR [esp+0xc],0x0
640038dd:	call   0x64006500
640038e2:	mov    ds:0x64039974,eax
640038e7:	mov    BYTE PTR [eax+0x45],0x1
640038eb:	mov    eax,ds:0x64039974
640038f0:	mov    DWORD PTR [eax+0x4],eax
640038f3:	mov    eax,ds:0x64039974
640038f8:	mov    DWORD PTR [eax],eax
640038fa:	mov    eax,ds:0x64039974
640038ff:	mov    DWORD PTR [eax+0x8],eax
64003902:	push   0x64023ea0
64003907:	mov    DWORD PTR ds:0x64039978,0x0
64003911:	call   0x64013faa
64003916:	add    esp,0x4
64003919:	mov    eax,0x64039970
6400391e:	mov    ecx,DWORD PTR [esp+0x4]
64003922:	mov    DWORD PTR fs:0x0,ecx
64003929:	pop    ecx
6400392a:	add    esp,0xc
6400392d:	ret    
6400392e:	int3   
6400392f:	int3   
64003930:	push   0xffffffff
64003932:	push   0x64023288
64003937:	mov    eax,fs:0x0
6400393d:	push   eax
6400393e:	push   ecx
6400393f:	push   ebx
64003940:	push   ebp
64003941:	push   esi
64003942:	push   edi
64003943:	mov    eax,ds:0x64037644
64003948:	xor    eax,esp
6400394a:	push   eax
6400394b:	lea    eax,[esp+0x18]
6400394f:	mov    fs:0x0,eax
64003955:	mov    esi,DWORD PTR [esp+0x28]
64003959:	xor    eax,eax
6400395b:	mov    DWORD PTR [esp+0x14],eax
6400395f:	mov    DWORD PTR [esp+0x20],eax
64003963:	push   0xffffffff
64003965:	mov    DWORD PTR [esi+0x14],eax
64003968:	mov    DWORD PTR [esi+0x18],0xf
6400396f:	lea    ebp,[esi+0x4]
64003972:	push   eax
64003973:	mov    BYTE PTR [ebp+0x0],al
64003976:	lea    eax,[esp+0x34]
6400397a:	push   eax
6400397b:	mov    ecx,esi
6400397d:	call   0x64003390
64003982:	mov    eax,DWORD PTR [esi+0x14]
64003985:	mov    edi,0x1
6400398a:	cmp    eax,edi
6400398c:	jbe    0x640039cd
6400398e:	cmp    edi,eax
64003990:	jbe    0x64003997
64003992:	call   0x64013e76
64003997:	cmp    DWORD PTR [esi+0x18],0x10
6400399b:	jb     0x640039a2
6400399d:	mov    ebx,DWORD PTR [ebp+0x0]
640039a0:	jmp    0x640039a4
640039a2:	mov    ebx,ebp
640039a4:	lea    ecx,[edi-0x1]
640039a7:	cmp    ecx,DWORD PTR [esi+0x14]
640039aa:	jbe    0x640039b1
640039ac:	call   0x64013e76
640039b1:	cmp    DWORD PTR [esi+0x18],0x10
640039b5:	jb     0x640039bc
640039b7:	mov    eax,DWORD PTR [ebp+0x0]
640039ba:	jmp    0x640039be
640039bc:	mov    eax,ebp
640039be:	mov    dl,BYTE PTR [eax+edi*1-0x1]
640039c2:	xor    BYTE PTR [ebx+edi*1],dl
640039c5:	add    edi,0x1
640039c8:	cmp    edi,DWORD PTR [esi+0x14]
640039cb:	jb     0x64003997
640039cd:	cmp    DWORD PTR [esp+0x44],0x10
640039d2:	jb     0x640039e1
640039d4:	mov    eax,DWORD PTR [esp+0x30]
640039d8:	push   eax
640039d9:	call   0x64013644
640039de:	add    esp,0x4
640039e1:	mov    eax,esi
640039e3:	mov    ecx,DWORD PTR [esp+0x18]
640039e7:	mov    DWORD PTR fs:0x0,ecx
640039ee:	pop    ecx
640039ef:	pop    edi
640039f0:	pop    esi
640039f1:	pop    ebp
640039f2:	pop    ebx
640039f3:	add    esp,0x10
640039f6:	ret    
640039f7:	int3   
640039f8:	int3   
640039f9:	int3   
640039fa:	int3   
640039fb:	int3   
640039fc:	int3   
640039fd:	int3   
640039fe:	int3   
640039ff:	int3   
64003a00:	push   0xffffffff
64003a02:	push   0x6402364e
64003a07:	mov    eax,fs:0x0
64003a0d:	push   eax
64003a0e:	mov    eax,ds:0x64037644
64003a13:	xor    eax,esp
64003a15:	push   eax
64003a16:	lea    eax,[esp+0x4]
64003a1a:	mov    fs:0x0,eax
64003a20:	test   BYTE PTR ds:0x64039988,0x1
64003a27:	jne    0x64003a74
64003a29:	or     DWORD PTR ds:0x64039988,0x1
64003a30:	mov    DWORD PTR [esp+0xc],0x0
64003a38:	call   0x64006500
64003a3d:	mov    ds:0x64039980,eax
64003a42:	mov    BYTE PTR [eax+0x45],0x1
64003a46:	mov    eax,ds:0x64039980
64003a4b:	mov    DWORD PTR [eax+0x4],eax
64003a4e:	mov    eax,ds:0x64039980
64003a53:	mov    DWORD PTR [eax],eax
64003a55:	mov    eax,ds:0x64039980
64003a5a:	mov    DWORD PTR [eax+0x8],eax
64003a5d:	push   0x64023e50
64003a62:	mov    DWORD PTR ds:0x64039984,0x0
64003a6c:	call   0x64013faa
64003a71:	add    esp,0x4
64003a74:	mov    eax,0x6403997c
64003a79:	mov    ecx,DWORD PTR [esp+0x4]
64003a7d:	mov    DWORD PTR fs:0x0,ecx
64003a84:	pop    ecx
64003a85:	add    esp,0xc
64003a88:	ret    
64003a89:	int3   
64003a8a:	int3   
64003a8b:	int3   
64003a8c:	int3   
64003a8d:	int3   
64003a8e:	int3   
64003a8f:	int3   
64003a90:	push   0xffffffff
64003a92:	push   0x64023048
64003a97:	mov    eax,fs:0x0
64003a9d:	push   eax
64003a9e:	push   ecx
64003a9f:	push   ebx
64003aa0:	push   ebp
64003aa1:	push   edi
64003aa2:	mov    eax,ds:0x64037644
64003aa7:	xor    eax,esp
64003aa9:	push   eax
64003aaa:	lea    eax,[esp+0x14]
64003aae:	mov    fs:0x0,eax
64003ab4:	xor    eax,eax
64003ab6:	mov    DWORD PTR [esp+0x10],eax
64003aba:	mov    DWORD PTR [esp+0x1c],eax
64003abe:	mov    DWORD PTR [esi+0x14],eax
64003ac1:	push   0xffffffff
64003ac3:	mov    DWORD PTR [esi+0x18],0x7
64003aca:	lea    ebp,[esi+0x4]
64003acd:	mov    WORD PTR [ebp+0x0],ax
64003ad1:	push   eax
64003ad2:	lea    eax,[esp+0x2c]
64003ad6:	mov    ecx,esi
64003ad8:	call   0x64004770
64003add:	mov    eax,DWORD PTR [esi+0x14]
64003ae0:	mov    edi,0x1
64003ae5:	cmp    eax,edi
64003ae7:	jbe    0x64003b2a
64003ae9:	cmp    edi,eax
64003aeb:	jbe    0x64003af2
64003aed:	call   0x64013e76
64003af2:	cmp    DWORD PTR [esi+0x18],0x8
64003af6:	jb     0x64003afd
64003af8:	mov    ebx,DWORD PTR [ebp+0x0]
64003afb:	jmp    0x64003aff
64003afd:	mov    ebx,ebp
64003aff:	lea    eax,[edi-0x1]
64003b02:	cmp    eax,DWORD PTR [esi+0x14]
64003b05:	jbe    0x64003b0c
64003b07:	call   0x64013e76
64003b0c:	cmp    DWORD PTR [esi+0x18],0x8
64003b10:	jb     0x64003b17
64003b12:	mov    eax,DWORD PTR [ebp+0x0]
64003b15:	jmp    0x64003b19
64003b17:	mov    eax,ebp
64003b19:	mov    cx,WORD PTR [eax+edi*2-0x2]
64003b1e:	xor    WORD PTR [ebx+edi*2],cx
64003b22:	add    edi,0x1
64003b25:	cmp    edi,DWORD PTR [esi+0x14]
64003b28:	jb     0x64003af2
64003b2a:	cmp    DWORD PTR [esp+0x3c],0x8
64003b2f:	jb     0x64003b3e
64003b31:	mov    edx,DWORD PTR [esp+0x28]
64003b35:	push   edx
64003b36:	call   0x64013644
64003b3b:	add    esp,0x4
64003b3e:	mov    eax,esi
64003b40:	mov    ecx,DWORD PTR [esp+0x14]
64003b44:	mov    DWORD PTR fs:0x0,ecx
64003b4b:	pop    ecx
64003b4c:	pop    edi
64003b4d:	pop    ebp
64003b4e:	pop    ebx
64003b4f:	add    esp,0x10
64003b52:	ret    
64003b53:	int3   
64003b54:	int3   
64003b55:	int3   
64003b56:	int3   
64003b57:	int3   
64003b58:	int3   
64003b59:	int3   
64003b5a:	int3   
64003b5b:	int3   
64003b5c:	int3   
64003b5d:	int3   
64003b5e:	int3   
64003b5f:	int3   
64003b60:	push   ebp
64003b61:	mov    ebp,esp
64003b63:	and    esp,0xfffffff8
64003b66:	push   0xffffffff
64003b68:	push   0x64023620
64003b6d:	mov    eax,fs:0x0
64003b73:	push   eax
64003b74:	sub    esp,0x60
64003b77:	push   ebx
64003b78:	push   esi
64003b79:	push   edi
64003b7a:	mov    eax,ds:0x64037644
64003b7f:	xor    eax,esp
64003b81:	push   eax
64003b82:	lea    eax,[esp+0x70]
64003b86:	mov    fs:0x0,eax
64003b8c:	mov    edi,ecx
64003b8e:	mov    ebx,DWORD PTR [ebp+0x8]
64003b91:	push   ebx
64003b92:	call   0x64005080
64003b97:	test   edi,edi
64003b99:	mov    esi,eax
64003b9b:	jne    0x64003ba2
64003b9d:	call   0x64013e76
64003ba2:	mov    eax,DWORD PTR [edi+0x4]
64003ba5:	cmp    esi,eax
64003ba7:	je     0x64003bd1
64003ba9:	cmp    DWORD PTR [esi+0x24],0x10
64003bad:	mov    ecx,DWORD PTR [esi+0x20]
64003bb0:	jb     0x64003bb7
64003bb2:	mov    eax,DWORD PTR [esi+0x10]
64003bb5:	jmp    0x64003bba
64003bb7:	lea    eax,[esi+0x10]
64003bba:	push   ecx
64003bbb:	push   eax
64003bbc:	mov    eax,DWORD PTR [ebx+0x14]
64003bbf:	push   eax
64003bc0:	push   0x0
64003bc2:	mov    ecx,ebx
64003bc4:	call   0x64003540
64003bc9:	test   eax,eax
64003bcb:	jge    0x64003c85
64003bd1:	xor    eax,eax
64003bd3:	mov    DWORD PTR [esp+0x30],0xf
64003bdb:	mov    DWORD PTR [esp+0x2c],eax
64003bdf:	mov    BYTE PTR [esp+0x1c],al
64003be3:	lea    ecx,[esp+0x18]
64003be7:	push   ecx
64003be8:	push   ebx
64003be9:	lea    ecx,[esp+0x3c]
64003bed:	mov    DWORD PTR [esp+0x80],eax
64003bf4:	call   0x640046f0
64003bf9:	push   eax
64003bfa:	push   esi
64003bfb:	push   edi
64003bfc:	lea    edx,[esp+0x1c]
64003c00:	push   edx
64003c01:	mov    ecx,edi
64003c03:	mov    BYTE PTR [esp+0x88],0x1
64003c0b:	call   0x640044a0
64003c10:	cmp    DWORD PTR [esp+0x68],0x10
64003c15:	mov    edi,DWORD PTR [eax]
64003c17:	mov    esi,DWORD PTR [eax+0x4]
64003c1a:	jb     0x64003c29
64003c1c:	mov    eax,DWORD PTR [esp+0x54]
64003c20:	push   eax
64003c21:	call   0x64013644
64003c26:	add    esp,0x4
64003c29:	xor    ebx,ebx
64003c2b:	cmp    DWORD PTR [esp+0x4c],0x10
64003c30:	mov    DWORD PTR [esp+0x68],0xf
64003c38:	mov    DWORD PTR [esp+0x64],ebx
64003c3c:	mov    BYTE PTR [esp+0x54],bl
64003c40:	jb     0x64003c4f
64003c42:	mov    ecx,DWORD PTR [esp+0x38]
64003c46:	push   ecx
64003c47:	call   0x64013644
64003c4c:	add    esp,0x4
64003c4f:	cmp    DWORD PTR [esp+0x30],0x10
64003c54:	mov    DWORD PTR [esp+0x4c],0xf
64003c5c:	mov    DWORD PTR [esp+0x48],ebx
64003c60:	mov    BYTE PTR [esp+0x38],bl
64003c64:	jb     0x64003c73
64003c66:	mov    edx,DWORD PTR [esp+0x1c]
64003c6a:	push   edx
64003c6b:	call   0x64013644
64003c70:	add    esp,0x4
64003c73:	mov    DWORD PTR [esp+0x30],0xf
64003c7b:	mov    DWORD PTR [esp+0x2c],ebx
64003c7f:	mov    BYTE PTR [esp+0x1c],bl
64003c83:	jmp    0x64003c87
64003c85:	xor    ebx,ebx
64003c87:	cmp    edi,ebx
64003c89:	jne    0x64003c90
64003c8b:	call   0x64013e76
64003c90:	cmp    esi,DWORD PTR [edi+0x4]
64003c93:	jne    0x64003c9a
64003c95:	call   0x64013e76
64003c9a:	lea    eax,[esi+0x28]
64003c9d:	mov    ecx,DWORD PTR [esp+0x70]
64003ca1:	mov    DWORD PTR fs:0x0,ecx
64003ca8:	pop    ecx
64003ca9:	pop    edi
64003caa:	pop    esi
64003cab:	pop    ebx
64003cac:	mov    esp,ebp
64003cae:	pop    ebp
64003caf:	ret    0x4
64003cb2:	int3   
64003cb3:	int3   
64003cb4:	int3   
64003cb5:	int3   
64003cb6:	int3   
64003cb7:	int3   
64003cb8:	int3   
64003cb9:	int3   
64003cba:	int3   
64003cbb:	int3   
64003cbc:	int3   
64003cbd:	int3   
64003cbe:	int3   
64003cbf:	int3   
64003cc0:	sub    esp,0x18
64003cc3:	push   ebx
64003cc4:	mov    ebx,DWORD PTR [esp+0x24]
64003cc8:	push   esi
64003cc9:	push   edi
64003cca:	push   ebx
64003ccb:	mov    esi,ecx
64003ccd:	call   0x64005080
64003cd2:	test   esi,esi
64003cd4:	mov    edi,eax
64003cd6:	mov    DWORD PTR [esp+0x14],edi
64003cda:	jne    0x64003ce1
64003cdc:	call   0x64013e76
64003ce1:	cmp    edi,DWORD PTR [esi+0x4]
64003ce4:	mov    DWORD PTR [esp+0x10],esi
64003ce8:	je     0x64003d14
64003cea:	cmp    DWORD PTR [edi+0x24],0x10
64003cee:	mov    eax,DWORD PTR [edi+0x20]
64003cf1:	jb     0x64003cf8
64003cf3:	mov    edi,DWORD PTR [edi+0x10]
64003cf6:	jmp    0x64003cfb
64003cf8:	add    edi,0x10
64003cfb:	push   eax
64003cfc:	mov    eax,DWORD PTR [ebx+0x14]
64003cff:	push   edi
64003d00:	push   eax
64003d01:	push   0x0
64003d03:	mov    ecx,ebx
64003d05:	call   0x64003540
64003d0a:	test   eax,eax
64003d0c:	jl     0x64003d14
64003d0e:	lea    ecx,[esp+0x10]
64003d12:	jmp    0x64003d23
64003d14:	mov    ecx,DWORD PTR [esi+0x4]
64003d17:	mov    DWORD PTR [esp+0x1c],ecx
64003d1b:	mov    DWORD PTR [esp+0x18],esi
64003d1f:	lea    ecx,[esp+0x18]
64003d23:	mov    edx,DWORD PTR [ecx]
64003d25:	mov    eax,DWORD PTR [esp+0x28]
64003d29:	mov    ecx,DWORD PTR [ecx+0x4]
64003d2c:	pop    edi
64003d2d:	pop    esi
64003d2e:	mov    DWORD PTR [eax],edx
64003d30:	mov    DWORD PTR [eax+0x4],ecx
64003d33:	pop    ebx
64003d34:	add    esp,0x18
64003d37:	ret    0x8
64003d3a:	int3   
64003d3b:	int3   
64003d3c:	int3   
64003d3d:	int3   
64003d3e:	int3   
64003d3f:	int3   
64003d40:	push   esi
64003d41:	mov    esi,ecx
64003d43:	mov    eax,DWORD PTR [esi]
64003d45:	test   eax,eax
64003d47:	push   edi
64003d48:	mov    edi,DWORD PTR [esp+0xc]
64003d4c:	je     0x64003d52
64003d4e:	cmp    eax,DWORD PTR [edi]
64003d50:	je     0x64003d57
64003d52:	call   0x64013e76
64003d57:	mov    eax,DWORD PTR [esi+0x4]
64003d5a:	xor    ecx,ecx
64003d5c:	cmp    eax,DWORD PTR [edi+0x4]
64003d5f:	pop    edi
64003d60:	sete   cl
64003d63:	mov    al,cl
64003d65:	pop    esi
64003d66:	ret    0x4
64003d69:	int3   
64003d6a:	int3   
64003d6b:	int3   
64003d6c:	int3   
64003d6d:	int3   
64003d6e:	int3   
64003d6f:	int3   
64003d70:	cmp    DWORD PTR [esi+0x18],0x8
64003d74:	jb     0x64003d82
64003d76:	mov    eax,DWORD PTR [esi+0x4]
64003d79:	push   eax
64003d7a:	call   0x64013644
64003d7f:	add    esp,0x4
64003d82:	xor    eax,eax
64003d84:	mov    DWORD PTR [esi+0x18],0x7
64003d8b:	mov    DWORD PTR [esi+0x14],eax
64003d8e:	mov    WORD PTR [esi+0x4],ax
64003d92:	ret    
64003d93:	int3   
64003d94:	int3   
64003d95:	int3   
64003d96:	int3   
64003d97:	int3   
64003d98:	int3   
64003d99:	int3   
64003d9a:	int3   
64003d9b:	int3   
64003d9c:	int3   
64003d9d:	int3   
64003d9e:	int3   
64003d9f:	int3   
64003da0:	push   0xffffffff
64003da2:	push   0x640235f0
64003da7:	mov    eax,fs:0x0
64003dad:	push   eax
64003dae:	sub    esp,0x60
64003db1:	push   ebx
64003db2:	push   ebp
64003db3:	push   esi
64003db4:	push   edi
64003db5:	mov    eax,ds:0x64037644
64003dba:	xor    eax,esp
64003dbc:	push   eax
64003dbd:	lea    eax,[esp+0x74]
64003dc1:	mov    fs:0x0,eax
64003dc7:	mov    ebx,ecx
64003dc9:	mov    ecx,DWORD PTR [esp+0x84]
64003dd0:	mov    eax,ebx
64003dd2:	call   0x64005620
64003dd7:	xor    ebp,ebp
64003dd9:	cmp    ebx,ebp
64003ddb:	mov    esi,eax
64003ddd:	jne    0x64003de4
64003ddf:	call   0x64013e76
64003de4:	mov    eax,DWORD PTR [ebx+0x4]
64003de7:	cmp    esi,eax
64003de9:	je     0x64003e14
64003deb:	cmp    DWORD PTR [esi+0x24],0x8
64003def:	mov    edi,DWORD PTR [esi+0x20]
64003df2:	jb     0x64003df9
64003df4:	mov    eax,DWORD PTR [esi+0x10]
64003df7:	jmp    0x64003dfc
64003df9:	lea    eax,[esi+0x10]
64003dfc:	mov    ecx,DWORD PTR [esp+0x84]
64003e03:	push   eax
64003e04:	mov    eax,DWORD PTR [ecx+0x14]
64003e07:	call   0x64006990
64003e0c:	test   eax,eax
64003e0e:	jge    0x64003ec1
64003e14:	mov    edi,0x7
64003e19:	mov    DWORD PTR [esp+0x34],edi
64003e1d:	mov    DWORD PTR [esp+0x30],ebp
64003e21:	mov    WORD PTR [esp+0x20],bp
64003e26:	mov    ecx,DWORD PTR [esp+0x84]
64003e2d:	lea    eax,[esp+0x1c]
64003e31:	push   eax
64003e32:	push   ecx
64003e33:	lea    edx,[esp+0x40]
64003e37:	push   edx
64003e38:	mov    DWORD PTR [esp+0x88],ebp
64003e3f:	call   0x64004b10
64003e44:	push   esi
64003e45:	push   ebx
64003e46:	push   eax
64003e47:	lea    eax,[esp+0x20]
64003e4b:	push   eax
64003e4c:	mov    BYTE PTR [esp+0x8c],0x1
64003e54:	call   0x640048c0
64003e59:	cmp    DWORD PTR [esp+0x6c],0x8
64003e5e:	mov    ebx,DWORD PTR [eax]
64003e60:	mov    esi,DWORD PTR [eax+0x4]
64003e63:	jb     0x64003e72
64003e65:	mov    ecx,DWORD PTR [esp+0x58]
64003e69:	push   ecx
64003e6a:	call   0x64013644
64003e6f:	add    esp,0x4
64003e72:	cmp    DWORD PTR [esp+0x50],0x8
64003e77:	mov    DWORD PTR [esp+0x6c],edi
64003e7b:	mov    DWORD PTR [esp+0x68],ebp
64003e7f:	mov    WORD PTR [esp+0x58],bp
64003e84:	jb     0x64003e93
64003e86:	mov    edx,DWORD PTR [esp+0x3c]
64003e8a:	push   edx
64003e8b:	call   0x64013644
64003e90:	add    esp,0x4
64003e93:	cmp    DWORD PTR [esp+0x34],0x8
64003e98:	mov    DWORD PTR [esp+0x50],edi
64003e9c:	mov    DWORD PTR [esp+0x4c],ebp
64003ea0:	mov    WORD PTR [esp+0x3c],bp
64003ea5:	jb     0x64003eb4
64003ea7:	mov    eax,DWORD PTR [esp+0x20]
64003eab:	push   eax
64003eac:	call   0x64013644
64003eb1:	add    esp,0x4
64003eb4:	mov    DWORD PTR [esp+0x34],edi
64003eb8:	mov    DWORD PTR [esp+0x30],ebp
64003ebc:	mov    WORD PTR [esp+0x20],bp
64003ec1:	cmp    ebx,ebp
64003ec3:	jne    0x64003eca
64003ec5:	call   0x64013e76
64003eca:	cmp    esi,DWORD PTR [ebx+0x4]
64003ecd:	jne    0x64003ed4
64003ecf:	call   0x64013e76
64003ed4:	lea    eax,[esi+0x28]
64003ed7:	mov    ecx,DWORD PTR [esp+0x74]
64003edb:	mov    DWORD PTR fs:0x0,ecx
64003ee2:	pop    ecx
64003ee3:	pop    edi
64003ee4:	pop    esi
64003ee5:	pop    ebp
64003ee6:	pop    ebx
64003ee7:	add    esp,0x6c
64003eea:	ret    0x4
64003eed:	int3   
64003eee:	int3   
64003eef:	int3   
64003ef0:	sub    esp,0x18
64003ef3:	push   ebp
64003ef4:	mov    ebp,DWORD PTR [esp+0x24]
64003ef8:	push   esi
64003ef9:	push   edi
64003efa:	mov    ecx,ebp
64003efc:	mov    eax,ebx
64003efe:	call   0x64005620
64003f03:	test   ebx,ebx
64003f05:	mov    esi,eax
64003f07:	mov    DWORD PTR [esp+0x14],esi
64003f0b:	jne    0x64003f12
64003f0d:	call   0x64013e76
64003f12:	cmp    esi,DWORD PTR [ebx+0x4]
64003f15:	mov    DWORD PTR [esp+0x10],ebx
64003f19:	je     0x64003f41
64003f1b:	cmp    DWORD PTR [esi+0x24],0x8
64003f1f:	mov    edi,DWORD PTR [esi+0x20]
64003f22:	jb     0x64003f29
64003f24:	mov    esi,DWORD PTR [esi+0x10]
64003f27:	jmp    0x64003f2c
64003f29:	add    esi,0x10
64003f2c:	mov    eax,DWORD PTR [ebp+0x14]
64003f2f:	push   esi
64003f30:	mov    ecx,ebp
64003f32:	call   0x64006990
64003f37:	test   eax,eax
64003f39:	jl     0x64003f41
64003f3b:	lea    eax,[esp+0x10]
64003f3f:	jmp    0x64003f50
64003f41:	mov    eax,DWORD PTR [ebx+0x4]
64003f44:	mov    DWORD PTR [esp+0x1c],eax
64003f48:	mov    DWORD PTR [esp+0x18],ebx
64003f4c:	lea    eax,[esp+0x18]
64003f50:	mov    edx,DWORD PTR [eax]
64003f52:	mov    ecx,DWORD PTR [esp+0x28]
64003f56:	mov    eax,DWORD PTR [eax+0x4]
64003f59:	pop    edi
64003f5a:	pop    esi
64003f5b:	mov    DWORD PTR [ecx+0x4],eax
64003f5e:	mov    DWORD PTR [ecx],edx
64003f60:	mov    eax,ecx
64003f62:	pop    ebp
64003f63:	add    esp,0x18
64003f66:	ret    0x8
64003f69:	int3   
64003f6a:	int3   
64003f6b:	int3   
64003f6c:	int3   
64003f6d:	int3   
64003f6e:	int3   
64003f6f:	int3   
64003f70:	mov    eax,DWORD PTR [edi]
64003f72:	test   eax,eax
64003f74:	je     0x64003f7a
64003f76:	cmp    eax,DWORD PTR [esi]
64003f78:	je     0x64003f7f
64003f7a:	call   0x64013e76
64003f7f:	mov    eax,DWORD PTR [edi+0x4]
64003f82:	xor    ecx,ecx
64003f84:	cmp    eax,DWORD PTR [esi+0x4]
64003f87:	sete   cl
64003f8a:	mov    al,cl
64003f8c:	ret    
64003f8d:	int3   
64003f8e:	int3   
64003f8f:	int3   
64003f90:	mov    eax,DWORD PTR [esp+0x4]
64003f94:	push   esi
64003f95:	push   eax
64003f96:	mov    esi,ecx
64003f98:	call   0x64001630
64003f9d:	mov    DWORD PTR [esi],0x640242e0
64003fa3:	mov    eax,esi
64003fa5:	pop    esi
64003fa6:	ret    0x4
64003fa9:	int3   
64003faa:	int3   
64003fab:	int3   
64003fac:	int3   
64003fad:	int3   
64003fae:	int3   
64003faf:	int3   
64003fb0:	push   ebx
64003fb1:	push   esi
64003fb2:	mov    esi,ecx
64003fb4:	cmp    DWORD PTR [esi+0x34],0x10
64003fb8:	jb     0x64003fc6
64003fba:	mov    eax,DWORD PTR [esi+0x20]
64003fbd:	push   eax
64003fbe:	call   0x64013644
64003fc3:	add    esp,0x4
64003fc6:	xor    ebx,ebx
64003fc8:	mov    DWORD PTR [esi+0x34],0xf
64003fcf:	mov    DWORD PTR [esi+0x30],ebx
64003fd2:	mov    BYTE PTR [esi+0x20],bl
64003fd5:	cmp    DWORD PTR [esi+0x18],0x10
64003fd9:	jb     0x64003fe7
64003fdb:	mov    ecx,DWORD PTR [esi+0x4]
64003fde:	push   ecx
64003fdf:	call   0x64013644
64003fe4:	add    esp,0x4
64003fe7:	mov    DWORD PTR [esi+0x14],ebx
64003fea:	mov    DWORD PTR [esi+0x18],0xf
64003ff1:	mov    BYTE PTR [esi+0x4],bl
64003ff4:	pop    esi
64003ff5:	pop    ebx
64003ff6:	ret    
64003ff7:	int3   
64003ff8:	int3   
64003ff9:	int3   
64003ffa:	int3   
64003ffb:	int3   
64003ffc:	int3   
64003ffd:	int3   
64003ffe:	int3   
64003fff:	int3   
64004000:	cmp    DWORD PTR [esi+0x34],0x8
64004004:	jb     0x64004012
64004006:	mov    eax,DWORD PTR [esi+0x20]
64004009:	push   eax
6400400a:	call   0x64013644
6400400f:	add    esp,0x4
64004012:	push   edi
64004013:	xor    edi,edi
64004015:	mov    DWORD PTR [esi+0x34],0x7
6400401c:	mov    DWORD PTR [esi+0x30],edi
6400401f:	mov    WORD PTR [esi+0x20],di
64004023:	cmp    DWORD PTR [esi+0x18],0x8
64004027:	jb     0x64004035
64004029:	mov    ecx,DWORD PTR [esi+0x4]
6400402c:	push   ecx
6400402d:	call   0x64013644
64004032:	add    esp,0x4
64004035:	mov    DWORD PTR [esi+0x14],edi
64004038:	mov    DWORD PTR [esi+0x18],0x7
6400403f:	mov    WORD PTR [esi+0x4],di
64004043:	pop    edi
64004044:	ret    
64004045:	int3   
64004046:	int3   
64004047:	int3   
64004048:	int3   
64004049:	int3   
6400404a:	int3   
6400404b:	int3   
6400404c:	int3   
6400404d:	int3   
6400404e:	int3   
6400404f:	int3   
64004050:	push   ebx
64004051:	mov    ebx,DWORD PTR [esp+0x8]
64004055:	push   esi
64004056:	mov    esi,ecx
64004058:	cmp    DWORD PTR [esi+0x14],ebx
6400405b:	push   edi
6400405c:	jae    0x64004063
6400405e:	call   0x64012f5b
64004063:	mov    eax,DWORD PTR [esi+0x14]
64004066:	mov    edi,DWORD PTR [esp+0x14]
6400406a:	sub    eax,ebx
6400406c:	cmp    eax,edi
6400406e:	jae    0x64004072
64004070:	mov    edi,eax
64004072:	test   edi,edi
64004074:	jbe    0x640040cb
64004076:	mov    ecx,DWORD PTR [esi+0x18]
64004079:	cmp    ecx,0x10
6400407c:	push   ebp
6400407d:	lea    ebp,[esi+0x4]
64004080:	jb     0x6400408b
64004082:	mov    edx,DWORD PTR [ebp+0x0]
64004085:	mov    DWORD PTR [esp+0x14],edx
64004089:	jmp    0x6400408f
6400408b:	mov    DWORD PTR [esp+0x14],ebp
6400408f:	cmp    ecx,0x10
64004092:	jb     0x64004099
64004094:	mov    edx,DWORD PTR [ebp+0x0]
64004097:	jmp    0x6400409b
64004099:	mov    edx,ebp
6400409b:	sub    eax,edi
6400409d:	push   eax
6400409e:	mov    eax,DWORD PTR [esp+0x18]
640040a2:	add    eax,ebx
640040a4:	add    eax,edi
640040a6:	push   eax
640040a7:	sub    ecx,ebx
640040a9:	push   ecx
640040aa:	add    edx,ebx
640040ac:	push   edx
640040ad:	call   0x64013817
640040b2:	mov    eax,DWORD PTR [esi+0x14]
640040b5:	sub    eax,edi
640040b7:	add    esp,0x10
640040ba:	cmp    DWORD PTR [esi+0x18],0x10
640040be:	mov    DWORD PTR [esi+0x14],eax
640040c1:	jb     0x640040c6
640040c3:	mov    ebp,DWORD PTR [ebp+0x0]
640040c6:	mov    BYTE PTR [eax+ebp*1],0x0
640040ca:	pop    ebp
640040cb:	pop    edi
640040cc:	mov    eax,esi
640040ce:	pop    esi
640040cf:	pop    ebx
640040d0:	ret    0x8
640040d3:	int3   
640040d4:	int3   
640040d5:	int3   
640040d6:	int3   
640040d7:	int3   
640040d8:	int3   
640040d9:	int3   
640040da:	int3   
640040db:	int3   
640040dc:	int3   
640040dd:	int3   
640040de:	int3   
640040df:	int3   
640040e0:	push   ebp
640040e1:	mov    ebp,esp
640040e3:	push   0xffffffff
640040e5:	push   0x64023020
640040ea:	mov    eax,fs:0x0
640040f0:	push   eax
640040f1:	sub    esp,0x1c
640040f4:	push   ebx
640040f5:	push   esi
640040f6:	push   edi
640040f7:	mov    eax,ds:0x64037644
640040fc:	xor    eax,ebp
640040fe:	push   eax
640040ff:	lea    eax,[ebp-0xc]
64004102:	mov    fs:0x0,eax
64004108:	mov    DWORD PTR [ebp-0x10],esp
6400410b:	mov    edi,ecx
6400410d:	mov    DWORD PTR [ebp-0x14],edi
64004110:	mov    eax,DWORD PTR [ebp+0x8]
64004113:	mov    esi,eax
64004115:	or     esi,0xf
64004118:	cmp    esi,0xfffffffe
6400411b:	jbe    0x64004121
6400411d:	mov    esi,eax
6400411f:	jmp    0x64004143
64004121:	mov    ebx,DWORD PTR [edi+0x18]
64004124:	mov    eax,0xaaaaaaab
64004129:	mul    esi
6400412b:	mov    ecx,ebx
6400412d:	shr    ecx,1
6400412f:	shr    edx,1
64004131:	cmp    edx,ecx
64004133:	jae    0x64004143
64004135:	mov    eax,0xfffffffe
6400413a:	sub    eax,ecx
6400413c:	cmp    ebx,eax
6400413e:	ja     0x64004143
64004140:	lea    esi,[ecx+ebx*1]
64004143:	xor    ebx,ebx
64004145:	lea    ecx,[esi+0x1]
64004148:	cmp    ecx,ebx
6400414a:	mov    DWORD PTR [ebp-0x4],ebx
6400414d:	ja     0x6400415f
6400414f:	xor    ecx,ecx
64004151:	push   ecx
64004152:	call   0x640138d5
64004157:	add    esp,0x4
6400415a:	mov    DWORD PTR [ebp+0x8],eax
6400415d:	jmp    0x640041b7
6400415f:	or     eax,0xffffffff
64004162:	xor    edx,edx
64004164:	div    ecx
64004166:	cmp    eax,0x1
64004169:	jae    0x64004151
6400416b:	lea    ecx,[ebp-0x18]
6400416e:	push   ecx
6400416f:	lea    ecx,[ebp-0x28]
64004172:	mov    DWORD PTR [ebp-0x18],ebx
64004175:	call   0x6401365a
6400417a:	push   0x6402bd7c
6400417f:	lea    edx,[ebp-0x28]
64004182:	push   edx
64004183:	mov    DWORD PTR [ebp-0x28],0x640242a4
6400418a:	call   0x64013872
6400418f:	mov    eax,DWORD PTR [ebp+0x8]
64004192:	mov    ecx,DWORD PTR [ebp-0x14]
64004195:	mov    DWORD PTR [ebp-0x1c],eax
64004198:	add    eax,0x1
6400419b:	mov    DWORD PTR [ebp-0x10],esp
6400419e:	push   eax
6400419f:	mov    BYTE PTR [ebp-0x4],0x2
640041a3:	call   0x640035b0
640041a8:	mov    DWORD PTR [ebp+0x8],eax
640041ab:	mov    eax,0x640041b1
640041b0:	ret    
640041b1:	mov    edi,DWORD PTR [ebp-0x14]
640041b4:	mov    esi,DWORD PTR [ebp-0x1c]
640041b7:	mov    ebx,DWORD PTR [ebp+0xc]
640041ba:	test   ebx,ebx
640041bc:	jbe    0x640041de
640041be:	cmp    DWORD PTR [edi+0x18],0x10
640041c2:	jb     0x640041c9
640041c4:	mov    eax,DWORD PTR [edi+0x4]
640041c7:	jmp    0x640041cc
640041c9:	lea    eax,[edi+0x4]
640041cc:	mov    ecx,DWORD PTR [ebp+0x8]
640041cf:	push   ebx
640041d0:	push   eax
640041d1:	lea    eax,[esi+0x1]
640041d4:	push   eax
640041d5:	push   ecx
640041d6:	call   0x6401379c
640041db:	add    esp,0x10
640041de:	cmp    DWORD PTR [edi+0x18],0x10
640041e2:	jb     0x640041f0
640041e4:	mov    edx,DWORD PTR [edi+0x4]
640041e7:	push   edx
640041e8:	call   0x64013644
640041ed:	add    esp,0x4
640041f0:	cmp    esi,0x10
640041f3:	mov    ecx,DWORD PTR [ebp+0x8]
640041f6:	lea    eax,[edi+0x4]
640041f9:	mov    BYTE PTR [eax],0x0
640041fc:	mov    DWORD PTR [eax],ecx
640041fe:	mov    DWORD PTR [edi+0x18],esi
64004201:	mov    DWORD PTR [edi+0x14],ebx
64004204:	jb     0x64004208
64004206:	mov    eax,ecx
64004208:	mov    BYTE PTR [eax+ebx*1],0x0
6400420c:	mov    ecx,DWORD PTR [ebp-0xc]
6400420f:	mov    DWORD PTR fs:0x0,ecx
64004216:	pop    ecx
64004217:	pop    edi
64004218:	pop    esi
64004219:	pop    ebx
6400421a:	mov    esp,ebp
6400421c:	pop    ebp
6400421d:	ret    0x8
64004220:	mov    esi,DWORD PTR [ebp-0x14]
64004223:	cmp    DWORD PTR [esi+0x18],0x10
64004227:	jb     0x64004235
64004229:	mov    eax,DWORD PTR [esi+0x4]
6400422c:	push   eax
6400422d:	call   0x64013644
64004232:	add    esp,0x4
64004235:	push   0x0
64004237:	mov    DWORD PTR [esi+0x18],0xf
6400423e:	mov    DWORD PTR [esi+0x14],0x0
64004245:	push   0x0
64004247:	mov    BYTE PTR [esi+0x4],0x0
6400424b:	call   0x64013872
64004250:	int3   
64004251:	int3   
64004252:	int3   
64004253:	int3   
64004254:	int3   
64004255:	int3   
64004256:	int3   
64004257:	int3   
64004258:	int3   
64004259:	int3   
6400425a:	int3   
6400425b:	int3   
6400425c:	int3   
6400425d:	int3   
6400425e:	int3   
6400425f:	int3   
64004260:	test   ecx,ecx
64004262:	jne    0x6400426e
64004264:	push   0x80004005
64004269:	call   0x64001040
6400426e:	test   ebx,ebx
64004270:	jne    0x64004280
64004272:	test   esi,esi
64004274:	je     0x64004280
64004276:	push   0x80070057
6400427b:	call   0x64001040
64004280:	mov    eax,DWORD PTR [ecx]
64004282:	mov    edx,DWORD PTR [eax]
64004284:	push   0x2
64004286:	push   esi
64004287:	call   edx
64004289:	test   eax,eax
6400428b:	jne    0x64004292
6400428d:	jmp    0x640043d0
64004292:	add    eax,0x10
64004295:	test   esi,esi
64004297:	mov    DWORD PTR [edi],eax
64004299:	jl     0x64004276
6400429b:	cmp    esi,DWORD PTR [eax-0x8]
6400429e:	jg     0x64004276
640042a0:	mov    DWORD PTR [eax-0xc],esi
640042a3:	mov    ecx,DWORD PTR [edi]
640042a5:	lea    eax,[esi+esi*1]
640042a8:	push   eax
640042a9:	push   ebx
640042aa:	mov    WORD PTR [eax+ecx*1],0x0
640042b0:	mov    edx,DWORD PTR [edi]
640042b2:	push   eax
640042b3:	push   edx
640042b4:	call   0x6401379c
640042b9:	add    esp,0x10
640042bc:	mov    eax,edi
640042be:	ret    
640042bf:	int3   
640042c0:	push   esi
640042c1:	mov    esi,ecx
640042c3:	mov    ecx,DWORD PTR [esi]
640042c5:	cmp    DWORD PTR [ecx-0xc],0x0
640042c9:	lea    eax,[ecx-0x10]
640042cc:	push   edi
640042cd:	mov    edi,DWORD PTR [eax]
640042cf:	je     0x6400431f
640042d1:	cmp    DWORD PTR [eax+0xc],0x0
640042d5:	lea    edx,[eax+0xc]
640042d8:	jge    0x640042fb
640042da:	cmp    DWORD PTR [ecx-0x8],0x0
640042de:	jge    0x640042ea
640042e0:	push   0x80070057
640042e5:	call   0x64001040
640042ea:	mov    DWORD PTR [ecx-0xc],0x0
640042f1:	mov    eax,DWORD PTR [esi]
640042f3:	pop    edi
640042f4:	mov    WORD PTR [eax],0x0
640042f9:	pop    esi
640042fa:	ret    
640042fb:	or     ecx,0xffffffff
640042fe:	lock xadd DWORD PTR [edx],ecx
64004302:	dec    ecx
64004303:	test   ecx,ecx
64004305:	jg     0x64004311
64004307:	mov    ecx,DWORD PTR [eax]
64004309:	mov    edx,DWORD PTR [ecx]
6400430b:	push   eax
6400430c:	mov    eax,DWORD PTR [edx+0x4]
6400430f:	call   eax
64004311:	mov    edx,DWORD PTR [edi]
64004313:	mov    eax,DWORD PTR [edx+0xc]
64004316:	mov    ecx,edi
64004318:	call   eax
6400431a:	add    eax,0x10
6400431d:	mov    DWORD PTR [esi],eax
6400431f:	pop    edi
64004320:	pop    esi
64004321:	ret    
64004322:	int3   
64004323:	int3   
64004324:	int3   
64004325:	int3   
64004326:	int3   
64004327:	int3   
64004328:	int3   
64004329:	int3   
6400432a:	int3   
6400432b:	int3   
6400432c:	int3   
6400432d:	int3   
6400432e:	int3   
6400432f:	int3   
64004330:	test   edi,edi
64004332:	push   ebp
64004333:	mov    ebp,DWORD PTR [esp+0x8]
64004337:	jne    0x64004344
64004339:	mov    ecx,ebp
6400433b:	call   0x640042c0
64004340:	pop    ebp
64004341:	ret    0x8
64004344:	push   esi
64004345:	mov    esi,DWORD PTR [esp+0x10]
64004349:	test   esi,esi
6400434b:	jne    0x64004357
6400434d:	push   0x80070057
64004352:	call   0x64001040
64004357:	mov    eax,DWORD PTR [ebp+0x0]
6400435a:	mov    edx,DWORD PTR [eax-0x8]
6400435d:	mov    ecx,0x1
64004362:	sub    ecx,DWORD PTR [eax-0x4]
64004365:	sub    esi,eax
64004367:	sub    edx,edi
64004369:	sar    esi,1
6400436b:	or     ecx,edx
6400436d:	push   ebx
6400436e:	mov    ebx,DWORD PTR [eax-0xc]
64004371:	jge    0x6400437b
64004373:	push   edi
64004374:	mov    ecx,ebp
64004376:	call   0x640043e0
6400437b:	mov    eax,DWORD PTR [ebp+0x0]
6400437e:	cmp    esi,ebx
64004380:	lea    ebx,[edi+edi*1]
64004383:	push   ebx
64004384:	ja     0x64004393
64004386:	lea    ecx,[eax+esi*2]
64004389:	push   ecx
6400438a:	push   ebx
6400438b:	push   eax
6400438c:	call   0x64013817
64004391:	jmp    0x6400439f
64004393:	mov    edx,DWORD PTR [esp+0x18]
64004397:	push   edx
64004398:	push   ebx
64004399:	push   eax
6400439a:	call   0x6401379c
6400439f:	add    esp,0x10
640043a2:	test   edi,edi
640043a4:	jl     0x640043c0
640043a6:	mov    eax,DWORD PTR [ebp+0x0]
640043a9:	cmp    edi,DWORD PTR [eax-0x8]
640043ac:	jg     0x640043c0
640043ae:	mov    DWORD PTR [eax-0xc],edi
640043b1:	mov    eax,DWORD PTR [ebp+0x0]
640043b4:	mov    WORD PTR [ebx+eax*1],0x0
640043ba:	pop    ebx
640043bb:	pop    esi
640043bc:	pop    ebp
640043bd:	ret    0x8
640043c0:	push   0x80070057
640043c5:	call   0x64001040
640043ca:	int3   
640043cb:	int3   
640043cc:	int3   
640043cd:	int3   
640043ce:	int3   
640043cf:	int3   
640043d0:	push   0x8007000e
640043d5:	call   0x64001040
640043da:	int3   
640043db:	int3   
640043dc:	int3   
640043dd:	int3   
640043de:	int3   
640043df:	int3   
640043e0:	mov    eax,DWORD PTR [ecx]
640043e2:	mov    edx,DWORD PTR [esp+0x4]
640043e6:	sub    eax,0x10
640043e9:	push   esi
640043ea:	mov    esi,DWORD PTR [eax+0x4]
640043ed:	cmp    esi,edx
640043ef:	jle    0x640043f3
640043f1:	mov    edx,esi
640043f3:	cmp    DWORD PTR [eax+0xc],0x1
640043f7:	pop    esi
640043f8:	jle    0x64004403
640043fa:	mov    DWORD PTR [esp+0x4],edx
640043fe:	jmp    0x64003820
64004403:	mov    eax,DWORD PTR [eax+0x8]
64004406:	cmp    eax,edx
64004408:	jge    0x64004429
6400440a:	cmp    eax,0x400
6400440f:	jle    0x64004418
64004411:	add    eax,0x400
64004416:	jmp    0x6400441a
64004418:	add    eax,eax
6400441a:	cmp    eax,edx
6400441c:	jge    0x64004420
6400441e:	mov    eax,edx
64004420:	mov    DWORD PTR [esp+0x4],eax
64004424:	jmp    0x64004c60
64004429:	ret    0x4
6400442c:	int3   
6400442d:	int3   
6400442e:	int3   
6400442f:	int3   
64004430:	push   esi
64004431:	mov    esi,eax
64004433:	mov    ecx,DWORD PTR [esi]
64004435:	mov    eax,DWORD PTR [ecx]
64004437:	mov    edx,DWORD PTR [eax+0x10]
6400443a:	push   edi
6400443b:	call   edx
6400443d:	cmp    DWORD PTR [esi+0xc],0x0
64004441:	lea    ecx,[esi+0xc]
64004444:	jl     0x6400445a
64004446:	cmp    eax,DWORD PTR [esi]
64004448:	jne    0x6400445a
6400444a:	mov    edi,esi
6400444c:	mov    eax,0x1
64004451:	lock xadd DWORD PTR [ecx],eax
64004455:	mov    eax,edi
64004457:	pop    edi
64004458:	pop    esi
64004459:	ret    
6400445a:	mov    ecx,DWORD PTR [esi+0x4]
6400445d:	mov    edx,DWORD PTR [eax]
6400445f:	mov    edx,DWORD PTR [edx]
64004461:	push   0x2
64004463:	push   ecx
64004464:	mov    ecx,eax
64004466:	call   edx
64004468:	mov    edi,eax
6400446a:	test   edi,edi
6400446c:	jne    0x64004473
6400446e:	jmp    0x640043d0
64004473:	mov    eax,DWORD PTR [esi+0x4]
64004476:	mov    DWORD PTR [edi+0x4],eax
64004479:	mov    eax,DWORD PTR [esi+0x4]
6400447c:	lea    eax,[eax+eax*1+0x2]
64004480:	push   eax
64004481:	add    esi,0x10
64004484:	push   esi
64004485:	push   eax
64004486:	lea    ecx,[edi+0x10]
64004489:	push   ecx
6400448a:	call   0x6401379c
6400448f:	add    esp,0x10
64004492:	mov    eax,edi
64004494:	pop    edi
64004495:	pop    esi
64004496:	ret    
64004497:	int3   
64004498:	int3   
64004499:	int3   
6400449a:	int3   
6400449b:	int3   
6400449c:	int3   
6400449d:	int3   
6400449e:	int3   
6400449f:	int3   
640044a0:	push   ebp
640044a1:	mov    ebp,esp
640044a3:	and    esp,0xfffffff8
640044a6:	sub    esp,0x14
640044a9:	push   ebx
640044aa:	push   esi
640044ab:	mov    esi,ecx
640044ad:	cmp    DWORD PTR [esi+0x8],0x0
640044b1:	push   edi
640044b2:	jne    0x640044d4
640044b4:	mov    eax,DWORD PTR [ebp+0x14]
640044b7:	mov    ecx,DWORD PTR [esi+0x4]
640044ba:	mov    edi,DWORD PTR [ebp+0x8]
640044bd:	push   eax
640044be:	push   ecx
640044bf:	push   0x1
640044c1:	push   edi
640044c2:	mov    ecx,esi
640044c4:	call   0x64004e30
640044c9:	mov    eax,edi
640044cb:	pop    edi
640044cc:	pop    esi
640044cd:	pop    ebx
640044ce:	mov    esp,ebp
640044d0:	pop    ebp
640044d1:	ret    0x10
640044d4:	mov    edx,DWORD PTR [esi+0x4]
640044d7:	mov    edi,DWORD PTR [ebp+0xc]
640044da:	test   edi,edi
640044dc:	mov    eax,DWORD PTR [edx]
640044de:	mov    DWORD PTR [esp+0x18],eax
640044e2:	je     0x640044e8
640044e4:	cmp    edi,esi
640044e6:	je     0x640044ed
640044e8:	call   0x64013e76
640044ed:	mov    ebx,DWORD PTR [ebp+0x10]
640044f0:	cmp    ebx,DWORD PTR [esp+0x18]
640044f4:	jne    0x64004527
640044f6:	mov    edi,DWORD PTR [ebp+0x14]
640044f9:	lea    ecx,[ebx+0xc]
640044fc:	push   ecx
640044fd:	push   edi
640044fe:	mov    ecx,esi
64004500:	call   0x640046b0
64004505:	test   al,al
64004507:	je     0x64004683
6400450d:	push   edi
6400450e:	mov    edi,DWORD PTR [ebp+0x8]
64004511:	push   ebx
64004512:	push   0x1
64004514:	push   edi
64004515:	mov    ecx,esi
64004517:	call   0x64004e30
6400451c:	mov    eax,edi
6400451e:	pop    edi
6400451f:	pop    esi
64004520:	pop    ebx
64004521:	mov    esp,ebp
64004523:	pop    ebp
64004524:	ret    0x10
64004527:	test   edi,edi
64004529:	mov    edx,DWORD PTR [esi+0x4]
6400452c:	mov    DWORD PTR [esp+0x18],edx
64004530:	je     0x64004536
64004532:	cmp    edi,esi
64004534:	je     0x6400453b
64004536:	call   0x64013e76
6400453b:	cmp    ebx,DWORD PTR [esp+0x18]
6400453f:	mov    edi,DWORD PTR [ebp+0x14]
64004542:	mov    ecx,esi
64004544:	jne    0x6400457e
64004546:	mov    eax,DWORD PTR [esi+0x4]
64004549:	mov    eax,DWORD PTR [eax+0x8]
6400454c:	add    eax,0xc
6400454f:	push   edi
64004550:	push   eax
64004551:	call   0x640046b0
64004556:	test   al,al
64004558:	je     0x64004683
6400455e:	mov    ecx,DWORD PTR [esi+0x4]
64004561:	mov    edx,DWORD PTR [ecx+0x8]
64004564:	push   edi
64004565:	mov    edi,DWORD PTR [ebp+0x8]
64004568:	push   edx
64004569:	push   0x0
6400456b:	push   edi
6400456c:	mov    ecx,esi
6400456e:	call   0x64004e30
64004573:	mov    eax,edi
64004575:	pop    edi
64004576:	pop    esi
64004577:	pop    ebx
64004578:	mov    esp,ebp
6400457a:	pop    ebp
6400457b:	ret    0x10
6400457e:	lea    eax,[ebx+0xc]
64004581:	push   eax
64004582:	push   edi
64004583:	call   0x640046b0
64004588:	test   al,al
6400458a:	je     0x640045ef
6400458c:	mov    eax,DWORD PTR [ebp+0xc]
6400458f:	lea    ecx,[esp+0xc]
64004593:	mov    DWORD PTR [esp+0xc],eax
64004597:	mov    DWORD PTR [esp+0x10],ebx
6400459b:	call   0x64006070
640045a0:	mov    ecx,DWORD PTR [esp+0x10]
640045a4:	add    ecx,0xc
640045a7:	push   edi
640045a8:	push   ecx
640045a9:	mov    ecx,esi
640045ab:	call   0x640046b0
640045b0:	test   al,al
640045b2:	je     0x640045ef
640045b4:	mov    eax,DWORD PTR [esp+0x10]
640045b8:	mov    edx,DWORD PTR [eax+0x8]
640045bb:	cmp    BYTE PTR [edx+0x45],0x0
640045bf:	push   edi
640045c0:	mov    edi,DWORD PTR [ebp+0x8]
640045c3:	mov    ecx,esi
640045c5:	je     0x640045db
640045c7:	push   eax
640045c8:	push   0x0
640045ca:	push   edi
640045cb:	call   0x64004e30
640045d0:	mov    eax,edi
640045d2:	pop    edi
640045d3:	pop    esi
640045d4:	pop    ebx
640045d5:	mov    esp,ebp
640045d7:	pop    ebp
640045d8:	ret    0x10
640045db:	push   ebx
640045dc:	push   0x1
640045de:	push   edi
640045df:	call   0x64004e30
640045e4:	mov    eax,edi
640045e6:	pop    edi
640045e7:	pop    esi
640045e8:	pop    ebx
640045e9:	mov    esp,ebp
640045eb:	pop    ebp
640045ec:	ret    0x10
640045ef:	push   edi
640045f0:	lea    eax,[ebx+0xc]
640045f3:	push   eax
640045f4:	mov    ecx,esi
640045f6:	call   0x640046b0
640045fb:	test   al,al
640045fd:	je     0x64004683
64004603:	mov    ecx,DWORD PTR [esi+0x4]
64004606:	mov    eax,DWORD PTR [ebp+0xc]
64004609:	mov    DWORD PTR [esp+0x18],ecx
6400460d:	lea    ecx,[esp+0xc]
64004611:	mov    DWORD PTR [esp+0xc],eax
64004615:	mov    DWORD PTR [esp+0x10],ebx
64004619:	mov    DWORD PTR [esp+0x14],esi
6400461d:	call   0x64006100
64004622:	lea    edx,[esp+0x14]
64004626:	push   edx
64004627:	lea    ecx,[esp+0x10]
6400462b:	call   0x64003d40
64004630:	test   al,al
64004632:	jne    0x64004648
64004634:	mov    eax,DWORD PTR [esp+0x10]
64004638:	add    eax,0xc
6400463b:	push   eax
6400463c:	push   edi
6400463d:	mov    ecx,esi
6400463f:	call   0x640046b0
64004644:	test   al,al
64004646:	je     0x64004683
64004648:	mov    ecx,DWORD PTR [ebx+0x8]
6400464b:	cmp    BYTE PTR [ecx+0x45],0x0
6400464f:	push   edi
64004650:	mov    edi,DWORD PTR [ebp+0x8]
64004653:	mov    ecx,esi
64004655:	je     0x6400466b
64004657:	push   ebx
64004658:	push   0x0
6400465a:	push   edi
6400465b:	call   0x64004e30
64004660:	mov    eax,edi
64004662:	pop    edi
64004663:	pop    esi
64004664:	pop    ebx
64004665:	mov    esp,ebp
64004667:	pop    ebp
64004668:	ret    0x10
6400466b:	mov    edx,DWORD PTR [esp+0x14]
6400466f:	push   edx
64004670:	push   0x1
64004672:	push   edi
64004673:	call   0x64004e30
64004678:	mov    eax,edi
6400467a:	pop    edi
6400467b:	pop    esi
6400467c:	pop    ebx
6400467d:	mov    esp,ebp
6400467f:	pop    ebp
64004680:	ret    0x10
64004683:	push   edi
64004684:	lea    eax,[esp+0x18]
64004688:	push   eax
64004689:	mov    ecx,esi
6400468b:	call   0x64004ca0
64004690:	mov    edx,DWORD PTR [eax]
64004692:	mov    ecx,DWORD PTR [ebp+0x8]
64004695:	pop    edi
64004696:	mov    DWORD PTR [ecx],edx
64004698:	mov    eax,DWORD PTR [eax+0x4]
6400469b:	pop    esi
6400469c:	mov    DWORD PTR [ecx+0x4],eax
6400469f:	mov    eax,ecx
640046a1:	pop    ebx
640046a2:	mov    esp,ebp
640046a4:	pop    ebp
640046a5:	ret    0x10
640046a8:	int3   
640046a9:	int3   
640046aa:	int3   
640046ab:	int3   
640046ac:	int3   
640046ad:	int3   
640046ae:	int3   
640046af:	int3   
640046b0:	mov    eax,DWORD PTR [esp+0x8]
640046b4:	cmp    DWORD PTR [eax+0x18],0x10
640046b8:	mov    ecx,DWORD PTR [eax+0x14]
640046bb:	jb     0x640046c2
640046bd:	mov    eax,DWORD PTR [eax+0x4]
640046c0:	jmp    0x640046c5
640046c2:	add    eax,0x4
640046c5:	push   ecx
640046c6:	mov    ecx,DWORD PTR [esp+0x8]
640046ca:	push   eax
640046cb:	mov    eax,DWORD PTR [ecx+0x14]
640046ce:	push   eax
640046cf:	push   0x0
640046d1:	call   0x64003540
640046d6:	xor    ecx,ecx
640046d8:	test   eax,eax
640046da:	setl   cl
640046dd:	mov    al,cl
640046df:	ret    0x8
640046e2:	int3   
640046e3:	int3   
640046e4:	int3   
640046e5:	int3   
640046e6:	int3   
640046e7:	int3   
640046e8:	int3   
640046e9:	int3   
640046ea:	int3   
640046eb:	int3   
640046ec:	int3   
640046ed:	int3   
640046ee:	int3   
640046ef:	int3   
640046f0:	push   0xffffffff
640046f2:	push   0x64023258
640046f7:	mov    eax,fs:0x0
640046fd:	push   eax
640046fe:	push   ecx
640046ff:	push   ebx
64004700:	push   esi
64004701:	mov    eax,ds:0x64037644
64004706:	xor    eax,esp
64004708:	push   eax
64004709:	lea    eax,[esp+0x10]
6400470d:	mov    fs:0x0,eax
64004713:	mov    esi,ecx
64004715:	mov    DWORD PTR [esp+0xc],esi
64004719:	mov    eax,DWORD PTR [esp+0x20]
6400471d:	xor    ebx,ebx
6400471f:	push   0xffffffff
64004721:	push   ebx
64004722:	mov    DWORD PTR [esi+0x18],0xf
64004729:	mov    DWORD PTR [esi+0x14],ebx
6400472c:	push   eax
6400472d:	mov    BYTE PTR [esi+0x4],bl
64004730:	call   0x64003390
64004735:	mov    edx,DWORD PTR [esp+0x24]
64004739:	push   0xffffffff
6400473b:	lea    ecx,[esi+0x1c]
6400473e:	mov    DWORD PTR [esp+0x1c],ebx
64004742:	push   ebx
64004743:	mov    DWORD PTR [ecx+0x18],0xf
6400474a:	mov    DWORD PTR [ecx+0x14],ebx
6400474d:	push   edx
6400474e:	mov    BYTE PTR [ecx+0x4],bl
64004751:	call   0x64003390
64004756:	mov    eax,esi
64004758:	mov    ecx,DWORD PTR [esp+0x10]
6400475c:	mov    DWORD PTR fs:0x0,ecx
64004763:	pop    ecx
64004764:	pop    esi
64004765:	pop    ebx
64004766:	add    esp,0x10
64004769:	ret    0x8
6400476c:	int3   
6400476d:	int3   
6400476e:	int3   
6400476f:	int3   
64004770:	push   ebx
64004771:	push   ebp
64004772:	mov    ebp,DWORD PTR [esp+0xc]
64004776:	push   esi
64004777:	mov    ebx,eax
64004779:	cmp    DWORD PTR [ebx+0x14],ebp
6400477c:	push   edi
6400477d:	mov    esi,ecx
6400477f:	jae    0x64004786
64004781:	call   0x64012f5b
64004786:	mov    edi,DWORD PTR [ebx+0x14]
64004789:	mov    eax,DWORD PTR [esp+0x18]
6400478d:	sub    edi,ebp
6400478f:	cmp    eax,edi
64004791:	jae    0x64004795
64004793:	mov    edi,eax
64004795:	cmp    esi,ebx
64004797:	jne    0x640047b6
64004799:	lea    ebx,[edi+ebp*1]
6400479c:	or     eax,0xffffffff
6400479f:	call   0x64005110
640047a4:	mov    eax,ebp
640047a6:	xor    ebx,ebx
640047a8:	call   0x64005110
640047ad:	pop    edi
640047ae:	mov    eax,esi
640047b0:	pop    esi
640047b1:	pop    ebp
640047b2:	pop    ebx
640047b3:	ret    0x8
640047b6:	mov    eax,esi
640047b8:	call   0x640051a0
640047bd:	test   al,al
640047bf:	je     0x6400480d
640047c1:	cmp    DWORD PTR [ebx+0x18],0x8
640047c5:	jb     0x640047cc
640047c7:	mov    ecx,DWORD PTR [ebx+0x4]
640047ca:	jmp    0x640047cf
640047cc:	lea    ecx,[ebx+0x4]
640047cf:	cmp    DWORD PTR [esi+0x18],0x8
640047d3:	lea    ebp,[esi+0x4]
640047d6:	jb     0x640047dd
640047d8:	mov    eax,DWORD PTR [ebp+0x0]
640047db:	jmp    0x640047df
640047dd:	mov    eax,ebp
640047df:	mov    edx,DWORD PTR [esp+0x14]
640047e3:	lea    ecx,[ecx+edx*2]
640047e6:	lea    ebx,[edi+edi*1]
640047e9:	push   ebx
640047ea:	push   ecx
640047eb:	mov    ecx,DWORD PTR [esi+0x18]
640047ee:	lea    edx,[ecx+ecx*1]
640047f1:	push   edx
640047f2:	push   eax
640047f3:	call   0x6401379c
640047f8:	add    esp,0x10
640047fb:	cmp    DWORD PTR [esi+0x18],0x8
640047ff:	mov    DWORD PTR [esi+0x14],edi
64004802:	jb     0x64004807
64004804:	mov    ebp,DWORD PTR [ebp+0x0]
64004807:	mov    WORD PTR [ebx+ebp*1],0x0
6400480d:	pop    edi
6400480e:	mov    eax,esi
64004810:	pop    esi
64004811:	pop    ebp
64004812:	pop    ebx
64004813:	ret    0x8
64004816:	int3   
64004817:	int3   
64004818:	int3   
64004819:	int3   
6400481a:	int3   
6400481b:	int3   
6400481c:	int3   
6400481d:	int3   
6400481e:	int3   
6400481f:	int3   
64004820:	mov    ecx,DWORD PTR [esi+0x18]
64004823:	cmp    ecx,0x8
64004826:	push   ebx
64004827:	push   ebp
64004828:	mov    ebp,DWORD PTR [esp+0xc]
6400482c:	lea    ebx,[esi+0x4]
6400482f:	jb     0x64004835
64004831:	mov    eax,DWORD PTR [ebx]
64004833:	jmp    0x64004837
64004835:	mov    eax,ebx
64004837:	cmp    ebp,eax
64004839:	jb     0x6400486f
6400483b:	cmp    ecx,0x8
6400483e:	jb     0x64004844
64004840:	mov    eax,DWORD PTR [ebx]
64004842:	jmp    0x64004846
64004844:	mov    eax,ebx
64004846:	mov    edx,DWORD PTR [esi+0x14]
64004849:	lea    eax,[eax+edx*2]
6400484c:	cmp    eax,ebp
6400484e:	jbe    0x6400486f
64004850:	cmp    ecx,0x8
64004853:	jb     0x64004857
64004855:	mov    ebx,DWORD PTR [ebx]
64004857:	mov    ecx,DWORD PTR [esp+0x10]
6400485b:	sub    ebp,ebx
6400485d:	push   ecx
6400485e:	sar    ebp,1
64004860:	push   ebp
64004861:	mov    eax,esi
64004863:	mov    ecx,esi
64004865:	call   0x64004770
6400486a:	pop    ebp
6400486b:	pop    ebx
6400486c:	ret    0x8
6400486f:	push   edi
64004870:	mov    edi,DWORD PTR [esp+0x14]
64004874:	mov    eax,esi
64004876:	call   0x640051a0
6400487b:	test   al,al
6400487d:	je     0x640048b3
6400487f:	mov    ecx,DWORD PTR [esi+0x18]
64004882:	cmp    ecx,0x8
64004885:	jb     0x6400488b
64004887:	mov    eax,DWORD PTR [ebx]
64004889:	jmp    0x6400488d
6400488b:	mov    eax,ebx
6400488d:	add    edi,edi
6400488f:	push   edi
64004890:	push   ebp
64004891:	lea    edx,[ecx+ecx*1]
64004894:	push   edx
64004895:	push   eax
64004896:	call   0x6401379c
6400489b:	mov    eax,DWORD PTR [esp+0x24]
6400489f:	add    esp,0x10
640048a2:	cmp    DWORD PTR [esi+0x18],0x8
640048a6:	mov    DWORD PTR [esi+0x14],eax
640048a9:	jb     0x640048ad
640048ab:	mov    ebx,DWORD PTR [ebx]
640048ad:	mov    WORD PTR [edi+ebx*1],0x0
640048b3:	pop    edi
640048b4:	pop    ebp
640048b5:	mov    eax,esi
640048b7:	pop    ebx
640048b8:	ret    0x8
640048bb:	int3   
640048bc:	int3   
640048bd:	int3   
640048be:	int3   
640048bf:	int3   
640048c0:	mov    ecx,DWORD PTR [ebx+0x4]
640048c3:	sub    esp,0x18
640048c6:	cmp    DWORD PTR [ebx+0x8],0x0
640048ca:	push   ebp
640048cb:	mov    ebp,DWORD PTR [esp+0x20]
640048cf:	push   esi
640048d0:	push   edi
640048d1:	jne    0x640048ec
640048d3:	mov    eax,DWORD PTR [esp+0x2c]
640048d7:	push   eax
640048d8:	push   0x1
640048da:	push   ebp
640048db:	push   ebx
640048dc:	call   0x64005390
640048e1:	mov    eax,ebp
640048e3:	pop    edi
640048e4:	pop    esi
640048e5:	pop    ebp
640048e6:	add    esp,0x18
640048e9:	ret    0x10
640048ec:	mov    esi,DWORD PTR [esp+0x30]
640048f0:	test   esi,esi
640048f2:	mov    edx,DWORD PTR [ecx]
640048f4:	mov    DWORD PTR [esp+0x18],edx
640048f8:	je     0x640048fe
640048fa:	cmp    esi,ebx
640048fc:	je     0x64004903
640048fe:	call   0x64013e76
64004903:	mov    edi,DWORD PTR [esp+0x34]
64004907:	cmp    edi,DWORD PTR [esp+0x18]
6400490b:	jne    0x6400493a
6400490d:	mov    esi,DWORD PTR [esp+0x2c]
64004911:	lea    eax,[edi+0xc]
64004914:	mov    ecx,esi
64004916:	call   0x64004ad0
6400491b:	test   al,al
6400491d:	je     0x64004a9f
64004923:	push   esi
64004924:	push   0x1
64004926:	push   ebp
64004927:	push   ebx
64004928:	mov    ecx,edi
6400492a:	call   0x64005390
6400492f:	mov    eax,ebp
64004931:	pop    edi
64004932:	pop    esi
64004933:	pop    ebp
64004934:	add    esp,0x18
64004937:	ret    0x10
6400493a:	test   esi,esi
6400493c:	mov    eax,DWORD PTR [ebx+0x4]
6400493f:	mov    DWORD PTR [esp+0x18],eax
64004943:	je     0x64004949
64004945:	cmp    esi,ebx
64004947:	je     0x6400494e
64004949:	call   0x64013e76
6400494e:	cmp    edi,DWORD PTR [esp+0x18]
64004952:	jne    0x6400498d
64004954:	mov    ecx,DWORD PTR [ebx+0x4]
64004957:	mov    ecx,DWORD PTR [ecx+0x8]
6400495a:	mov    eax,DWORD PTR [esp+0x2c]
6400495e:	add    ecx,0xc
64004961:	call   0x64004ad0
64004966:	test   al,al
64004968:	je     0x64004a9b
6400496e:	mov    edx,DWORD PTR [esp+0x2c]
64004972:	mov    eax,DWORD PTR [ebx+0x4]
64004975:	mov    ecx,DWORD PTR [eax+0x8]
64004978:	push   edx
64004979:	push   0x0
6400497b:	push   ebp
6400497c:	push   ebx
6400497d:	call   0x64005390
64004982:	mov    eax,ebp
64004984:	pop    edi
64004985:	pop    esi
64004986:	pop    ebp
64004987:	add    esp,0x18
6400498a:	ret    0x10
6400498d:	mov    ecx,DWORD PTR [esp+0x2c]
64004991:	lea    eax,[edi+0xc]
64004994:	call   0x64004ad0
64004999:	test   al,al
6400499b:	je     0x64004a05
6400499d:	mov    DWORD PTR [esp+0xc],esi
640049a1:	lea    esi,[esp+0xc]
640049a5:	mov    DWORD PTR [esp+0x10],edi
640049a9:	call   0x64006540
640049ae:	mov    esi,DWORD PTR [esp+0x10]
640049b2:	mov    eax,DWORD PTR [esp+0x2c]
640049b6:	lea    ecx,[esi+0xc]
640049b9:	call   0x64004ad0
640049be:	test   al,al
640049c0:	je     0x64004a01
640049c2:	mov    ecx,DWORD PTR [esi+0x8]
640049c5:	cmp    BYTE PTR [ecx+0x45],0x0
640049c9:	je     0x640049e6
640049cb:	mov    edx,DWORD PTR [esp+0x2c]
640049cf:	push   edx
640049d0:	push   0x0
640049d2:	push   ebp
640049d3:	push   ebx
640049d4:	mov    ecx,esi
640049d6:	call   0x64005390
640049db:	mov    eax,ebp
640049dd:	pop    edi
640049de:	pop    esi
640049df:	pop    ebp
640049e0:	add    esp,0x18
640049e3:	ret    0x10
640049e6:	mov    eax,DWORD PTR [esp+0x2c]
640049ea:	push   eax
640049eb:	push   0x1
640049ed:	push   ebp
640049ee:	push   ebx
640049ef:	mov    ecx,edi
640049f1:	call   0x64005390
640049f6:	mov    eax,ebp
640049f8:	pop    edi
640049f9:	pop    esi
640049fa:	pop    ebp
640049fb:	add    esp,0x18
640049fe:	ret    0x10
64004a01:	mov    esi,DWORD PTR [esp+0x30]
64004a05:	mov    eax,DWORD PTR [esp+0x2c]
64004a09:	lea    ecx,[edi+0xc]
64004a0c:	call   0x64004ad0
64004a11:	test   al,al
64004a13:	je     0x64004a9b
64004a19:	mov    ecx,DWORD PTR [ebx+0x4]
64004a1c:	mov    DWORD PTR [esp+0xc],esi
64004a20:	lea    esi,[esp+0xc]
64004a24:	mov    DWORD PTR [esp+0x10],edi
64004a28:	mov    DWORD PTR [esp+0x18],ecx
64004a2c:	mov    DWORD PTR [esp+0x14],ebx
64004a30:	call   0x640065c0
64004a35:	lea    esi,[esp+0x14]
64004a39:	lea    edi,[esp+0xc]
64004a3d:	call   0x64003f70
64004a42:	test   al,al
64004a44:	mov    esi,DWORD PTR [esp+0x10]
64004a48:	jne    0x64004a5a
64004a4a:	mov    ecx,DWORD PTR [esp+0x2c]
64004a4e:	lea    eax,[esi+0xc]
64004a51:	call   0x64004ad0
64004a56:	test   al,al
64004a58:	je     0x64004a9b
64004a5a:	mov    ecx,DWORD PTR [esp+0x34]
64004a5e:	mov    edx,DWORD PTR [ecx+0x8]
64004a61:	cmp    BYTE PTR [edx+0x45],0x0
64004a65:	je     0x64004a80
64004a67:	mov    eax,DWORD PTR [esp+0x2c]
64004a6b:	push   eax
64004a6c:	push   0x0
64004a6e:	push   ebp
64004a6f:	push   ebx
64004a70:	call   0x64005390
64004a75:	mov    eax,ebp
64004a77:	pop    edi
64004a78:	pop    esi
64004a79:	pop    ebp
64004a7a:	add    esp,0x18
64004a7d:	ret    0x10
64004a80:	mov    ecx,DWORD PTR [esp+0x2c]
64004a84:	push   ecx
64004a85:	push   0x1
64004a87:	push   ebp
64004a88:	push   ebx
64004a89:	mov    ecx,esi
64004a8b:	call   0x64005390
64004a90:	mov    eax,ebp
64004a92:	pop    edi
64004a93:	pop    esi
64004a94:	pop    ebp
64004a95:	add    esp,0x18
64004a98:	ret    0x10
64004a9b:	mov    esi,DWORD PTR [esp+0x2c]
64004a9f:	push   esi
64004aa0:	lea    edx,[esp+0x18]
64004aa4:	push   edx
64004aa5:	push   ebx
64004aa6:	call   0x64005200
64004aab:	mov    ecx,DWORD PTR [eax]
64004aad:	mov    DWORD PTR [ebp+0x0],ecx
64004ab0:	mov    edx,DWORD PTR [eax+0x4]
64004ab3:	pop    edi
64004ab4:	pop    esi
64004ab5:	mov    DWORD PTR [ebp+0x4],edx
64004ab8:	mov    eax,ebp
64004aba:	pop    ebp
64004abb:	add    esp,0x18
64004abe:	ret    0x10
64004ac1:	int3   
64004ac2:	int3   
64004ac3:	int3   
64004ac4:	int3   
64004ac5:	int3   
64004ac6:	int3   
64004ac7:	int3   
64004ac8:	int3   
64004ac9:	int3   
64004aca:	int3   
64004acb:	int3   
64004acc:	int3   
64004acd:	int3   
64004ace:	int3   
64004acf:	int3   
64004ad0:	cmp    DWORD PTR [eax+0x18],0x8
64004ad4:	push   edi
64004ad5:	mov    edi,DWORD PTR [eax+0x14]
64004ad8:	jb     0x64004af1
64004ada:	mov    eax,DWORD PTR [eax+0x4]
64004add:	push   eax
64004ade:	mov    eax,DWORD PTR [ecx+0x14]
64004ae1:	call   0x64006990
64004ae6:	xor    ecx,ecx
64004ae8:	test   eax,eax
64004aea:	setl   cl
64004aed:	mov    al,cl
64004aef:	pop    edi
64004af0:	ret    
64004af1:	add    eax,0x4
64004af4:	push   eax
64004af5:	mov    eax,DWORD PTR [ecx+0x14]
64004af8:	call   0x64006990
64004afd:	xor    ecx,ecx
64004aff:	test   eax,eax
64004b01:	setl   cl
64004b04:	mov    al,cl
64004b06:	pop    edi
64004b07:	ret    
64004b08:	int3   
64004b09:	int3   
64004b0a:	int3   
64004b0b:	int3   
64004b0c:	int3   
64004b0d:	int3   
64004b0e:	int3   
64004b0f:	int3   
64004b10:	push   0xffffffff
64004b12:	push   0x64023228
64004b17:	mov    eax,fs:0x0
64004b1d:	push   eax
64004b1e:	push   esi
64004b1f:	push   edi
64004b20:	mov    eax,ds:0x64037644
64004b25:	xor    eax,esp
64004b27:	push   eax
64004b28:	lea    eax,[esp+0xc]
64004b2c:	mov    fs:0x0,eax
64004b32:	mov    esi,DWORD PTR [esp+0x1c]
64004b36:	mov    eax,DWORD PTR [esp+0x20]
64004b3a:	xor    edi,edi
64004b3c:	push   0xffffffff
64004b3e:	mov    DWORD PTR [esi+0x18],0x7
64004b45:	mov    DWORD PTR [esi+0x14],edi
64004b48:	push   edi
64004b49:	mov    ecx,esi
64004b4b:	mov    WORD PTR [esi+0x4],di
64004b4f:	call   0x64004770
64004b54:	mov    eax,DWORD PTR [esp+0x24]
64004b58:	lea    ecx,[esi+0x1c]
64004b5b:	mov    DWORD PTR [esp+0x14],edi
64004b5f:	push   0xffffffff
64004b61:	mov    DWORD PTR [ecx+0x18],0x7
64004b68:	mov    DWORD PTR [ecx+0x14],edi
64004b6b:	push   edi
64004b6c:	mov    WORD PTR [ecx+0x4],di
64004b70:	call   0x64004770
64004b75:	mov    eax,esi
64004b77:	mov    ecx,DWORD PTR [esp+0xc]
64004b7b:	mov    DWORD PTR fs:0x0,ecx
64004b82:	pop    ecx
64004b83:	pop    edi
64004b84:	pop    esi
64004b85:	add    esp,0xc
64004b88:	ret    0xc
64004b8b:	int3   
64004b8c:	int3   
64004b8d:	int3   
64004b8e:	int3   
64004b8f:	int3   
64004b90:	push   ebx
64004b91:	push   esi
64004b92:	mov    esi,DWORD PTR [esp+0x10]
64004b96:	mov    eax,esi
64004b98:	shr    eax,0x4
64004b9b:	push   edi
64004b9c:	mov    edi,DWORD PTR [esp+0x10]
64004ba0:	add    eax,0x1
64004ba3:	mov    ebx,ecx
64004ba5:	movzx  ecx,ax
64004ba8:	push   0x6
64004baa:	push   ecx
64004bab:	push   edi
64004bac:	call   DWORD PTR ds:0x64024020
64004bb2:	test   eax,eax
64004bb4:	je     0x64004bc7
64004bb6:	push   esi
64004bb7:	push   eax
64004bb8:	push   edi
64004bb9:	call   0x64001100
64004bbe:	mov    esi,eax
64004bc0:	add    esp,0xc
64004bc3:	test   esi,esi
64004bc5:	jne    0x64004bcf
64004bc7:	pop    edi
64004bc8:	pop    esi
64004bc9:	xor    eax,eax
64004bcb:	pop    ebx
64004bcc:	ret    0x8
64004bcf:	mov    eax,DWORD PTR [ebx]
64004bd1:	movzx  edi,WORD PTR [esi]
64004bd4:	sub    eax,0x10
64004bd7:	mov    edx,0x1
64004bdc:	sub    edx,DWORD PTR [eax+0xc]
64004bdf:	mov    eax,DWORD PTR [eax+0x8]
64004be2:	sub    eax,edi
64004be4:	or     edx,eax
64004be6:	jge    0x64004bf0
64004be8:	push   edi
64004be9:	mov    ecx,ebx
64004beb:	call   0x640043e0
64004bf0:	movzx  eax,WORD PTR [esi]
64004bf3:	cmp    eax,0xffffffff
64004bf6:	push   ebp
64004bf7:	mov    ebp,DWORD PTR [ebx]
64004bf9:	lea    edx,[esi+0x2]
64004bfc:	jne    0x64004c15
64004bfe:	mov    eax,edx
64004c00:	lea    esi,[eax+0x2]
64004c03:	mov    cx,WORD PTR [eax]
64004c06:	add    eax,0x2
64004c09:	test   cx,cx
64004c0c:	jne    0x64004c03
64004c0e:	sub    eax,esi
64004c10:	sar    eax,1
64004c12:	add    eax,0x1
64004c15:	lea    ecx,[eax+eax*1]
64004c18:	push   ecx
64004c19:	push   edx
64004c1a:	lea    esi,[edi+edi*1]
64004c1d:	push   esi
64004c1e:	push   ebp
64004c1f:	call   0x6401379c
64004c24:	push   eax
64004c25:	call   0x64001060
64004c2a:	add    esp,0x14
64004c2d:	test   edi,edi
64004c2f:	pop    ebp
64004c30:	jl     0x64004c4f
64004c32:	mov    eax,DWORD PTR [ebx]
64004c34:	cmp    edi,DWORD PTR [eax-0x8]
64004c37:	jg     0x64004c4f
64004c39:	mov    DWORD PTR [eax-0xc],edi
64004c3c:	mov    edx,DWORD PTR [ebx]
64004c3e:	pop    edi
64004c3f:	mov    WORD PTR [esi+edx*1],0x0
64004c45:	pop    esi
64004c46:	mov    eax,0x1
64004c4b:	pop    ebx
64004c4c:	ret    0x8
64004c4f:	push   0x80070057
64004c54:	call   0x64001040
64004c59:	int3   
64004c5a:	int3   
64004c5b:	int3   
64004c5c:	int3   
64004c5d:	int3   
64004c5e:	int3   
64004c5f:	int3   
64004c60:	mov    edx,DWORD PTR [esp+0x4]
64004c64:	push   esi
64004c65:	mov    esi,ecx
64004c67:	mov    eax,DWORD PTR [esi]
64004c69:	mov    ecx,DWORD PTR [eax-0x10]
64004c6c:	sub    eax,0x10
64004c6f:	cmp    DWORD PTR [eax+0x8],edx
64004c72:	jge    0x64004c89
64004c74:	test   edx,edx
64004c76:	jle    0x64004c89
64004c78:	push   edi
64004c79:	mov    edi,DWORD PTR [ecx]
64004c7b:	push   0x2
64004c7d:	push   edx
64004c7e:	push   eax
64004c7f:	mov    eax,DWORD PTR [edi+0x8]
64004c82:	call   eax
64004c84:	test   eax,eax
64004c86:	pop    edi
64004c87:	jne    0x64004c8e
64004c89:	call   0x640043d0
64004c8e:	add    eax,0x10
64004c91:	mov    DWORD PTR [esi],eax
64004c93:	pop    esi
64004c94:	ret    0x4
64004c97:	int3   
64004c98:	int3   
64004c99:	int3   
64004c9a:	int3   
64004c9b:	int3   
64004c9c:	int3   
64004c9d:	int3   
64004c9e:	int3   
64004c9f:	int3   
64004ca0:	push   ebp
64004ca1:	mov    ebp,esp
64004ca3:	and    esp,0xfffffff8
64004ca6:	sub    esp,0x24
64004ca9:	push   ebx
64004caa:	push   esi
64004cab:	push   edi
64004cac:	mov    edi,ecx
64004cae:	mov    eax,DWORD PTR [edi+0x4]
64004cb1:	mov    esi,DWORD PTR [eax+0x4]
64004cb4:	cmp    BYTE PTR [esi+0x45],0x0
64004cb8:	mov    ecx,eax
64004cba:	mov    al,0x1
64004cbc:	mov    DWORD PTR [esp+0x28],edi
64004cc0:	mov    DWORD PTR [esp+0x10],ecx
64004cc4:	mov    BYTE PTR [esp+0x18],al
64004cc8:	jne    0x64004d68
64004cce:	mov    edx,DWORD PTR [ebp+0xc]
64004cd1:	mov    eax,DWORD PTR [edx+0x14]
64004cd4:	mov    ecx,DWORD PTR [edx+0x18]
64004cd7:	mov    DWORD PTR [esp+0x20],eax
64004cdb:	mov    DWORD PTR [esp+0x1c],eax
64004cdf:	mov    DWORD PTR [esp+0x24],ecx
64004ce3:	jmp    0x64004cec
64004ce5:	mov    edx,DWORD PTR [ebp+0xc]
64004ce8:	mov    eax,DWORD PTR [esp+0x1c]
64004cec:	cmp    DWORD PTR [esi+0x24],0x10
64004cf0:	mov    ebx,DWORD PTR [esi+0x20]
64004cf3:	mov    DWORD PTR [esp+0x10],esi
64004cf7:	jb     0x64004cfe
64004cf9:	mov    ecx,DWORD PTR [esi+0x10]
64004cfc:	jmp    0x64004d01
64004cfe:	lea    ecx,[esi+0x10]
64004d01:	mov    edi,DWORD PTR [esp+0x20]
64004d05:	cmp    eax,edi
64004d07:	mov    DWORD PTR [esp+0x14],ecx
64004d0b:	jae    0x64004d0f
64004d0d:	mov    edi,eax
64004d0f:	cmp    edi,ebx
64004d11:	mov    ecx,edi
64004d13:	jb     0x64004d17
64004d15:	mov    ecx,ebx
64004d17:	cmp    DWORD PTR [esp+0x24],0x10
64004d1c:	lea    eax,[edx+0x4]
64004d1f:	jb     0x64004d23
64004d21:	mov    eax,DWORD PTR [eax]
64004d23:	mov    edx,DWORD PTR [esp+0x14]
64004d27:	push   ecx
64004d28:	push   edx
64004d29:	push   eax
64004d2a:	call   0x64001270
64004d2f:	add    esp,0xc
64004d32:	test   eax,eax
64004d34:	jne    0x64004d48
64004d36:	cmp    edi,ebx
64004d38:	jae    0x64004d3f
64004d3a:	or     eax,0xffffffff
64004d3d:	jmp    0x64004d46
64004d3f:	xor    eax,eax
64004d41:	cmp    edi,ebx
64004d43:	setne  al
64004d46:	test   eax,eax
64004d48:	setl   al
64004d4b:	test   al,al
64004d4d:	mov    BYTE PTR [esp+0x18],al
64004d51:	je     0x64004d57
64004d53:	mov    esi,DWORD PTR [esi]
64004d55:	jmp    0x64004d5a
64004d57:	mov    esi,DWORD PTR [esi+0x8]
64004d5a:	cmp    BYTE PTR [esi+0x45],0x0
64004d5e:	je     0x64004ce5
64004d60:	mov    edi,DWORD PTR [esp+0x28]
64004d64:	mov    ecx,DWORD PTR [esp+0x10]
64004d68:	test   al,al
64004d6a:	mov    esi,ecx
64004d6c:	mov    DWORD PTR [esp+0x2c],esi
64004d70:	mov    DWORD PTR [esp+0x28],edi
64004d74:	je     0x64004db9
64004d76:	mov    eax,DWORD PTR [edi+0x4]
64004d79:	cmp    ecx,DWORD PTR [eax]
64004d7b:	jne    0x64004dac
64004d7d:	mov    edx,DWORD PTR [ebp+0xc]
64004d80:	push   edx
64004d81:	push   ecx
64004d82:	push   0x1
64004d84:	lea    eax,[esp+0x34]
64004d88:	push   eax
64004d89:	mov    ecx,edi
64004d8b:	call   0x64004e30
64004d90:	mov    ecx,eax
64004d92:	mov    edx,DWORD PTR [ecx]
64004d94:	mov    eax,DWORD PTR [ebp+0x8]
64004d97:	mov    ecx,DWORD PTR [ecx+0x4]
64004d9a:	mov    DWORD PTR [eax+0x4],ecx
64004d9d:	mov    BYTE PTR [eax+0x8],0x1
64004da1:	mov    DWORD PTR [eax],edx
64004da3:	pop    edi
64004da4:	pop    esi
64004da5:	pop    ebx
64004da6:	mov    esp,ebp
64004da8:	pop    ebp
64004da9:	ret    0x8
64004dac:	lea    ecx,[esp+0x28]
64004db0:	call   0x64006070
64004db5:	mov    esi,DWORD PTR [esp+0x2c]
64004db9:	mov    ebx,DWORD PTR [ebp+0xc]
64004dbc:	cmp    DWORD PTR [ebx+0x18],0x10
64004dc0:	mov    edx,DWORD PTR [ebx+0x14]
64004dc3:	lea    ecx,[esi+0xc]
64004dc6:	jb     0x64004dcd
64004dc8:	mov    eax,DWORD PTR [ebx+0x4]
64004dcb:	jmp    0x64004dd0
64004dcd:	lea    eax,[ebx+0x4]
64004dd0:	push   edx
64004dd1:	mov    edx,DWORD PTR [ecx+0x14]
64004dd4:	push   eax
64004dd5:	push   edx
64004dd6:	push   0x0
64004dd8:	call   0x64003540
64004ddd:	test   eax,eax
64004ddf:	jge    0x64004e14
64004de1:	mov    eax,DWORD PTR [esp+0x10]
64004de5:	mov    ecx,DWORD PTR [esp+0x18]
64004de9:	push   ebx
64004dea:	push   eax
64004deb:	push   ecx
64004dec:	lea    edx,[esp+0x34]
64004df0:	push   edx
64004df1:	mov    ecx,edi
64004df3:	call   0x64004e30
64004df8:	mov    ecx,eax
64004dfa:	mov    edx,DWORD PTR [ecx]
64004dfc:	mov    eax,DWORD PTR [ebp+0x8]
64004dff:	mov    ecx,DWORD PTR [ecx+0x4]
64004e02:	mov    DWORD PTR [eax+0x4],ecx
64004e05:	mov    BYTE PTR [eax+0x8],0x1
64004e09:	mov    DWORD PTR [eax],edx
64004e0b:	pop    edi
64004e0c:	pop    esi
64004e0d:	pop    ebx
64004e0e:	mov    esp,ebp
64004e10:	pop    ebp
64004e11:	ret    0x8
64004e14:	mov    eax,DWORD PTR [ebp+0x8]
64004e17:	mov    edx,DWORD PTR [esp+0x28]
64004e1b:	pop    edi
64004e1c:	mov    DWORD PTR [eax+0x4],esi
64004e1f:	pop    esi
64004e20:	mov    BYTE PTR [eax+0x8],0x0
64004e24:	mov    DWORD PTR [eax],edx
64004e26:	pop    ebx
64004e27:	mov    esp,ebp
64004e29:	pop    ebp
64004e2a:	ret    0x8
64004e2d:	int3   
64004e2e:	int3   
64004e2f:	int3   
64004e30:	push   ebp
64004e31:	mov    ebp,esp
64004e33:	and    esp,0xfffffff8
64004e36:	push   0xffffffff
64004e38:	push   0x640235b8
64004e3d:	mov    eax,fs:0x0
64004e43:	push   eax
64004e44:	sub    esp,0x50
64004e47:	push   ebx
64004e48:	push   esi
64004e49:	push   edi
64004e4a:	mov    eax,ds:0x64037644
64004e4f:	xor    eax,esp
64004e51:	push   eax
64004e52:	lea    eax,[esp+0x60]
64004e56:	mov    fs:0x0,eax
64004e5c:	mov    edi,ecx
64004e5e:	xor    ebx,ebx
64004e60:	cmp    DWORD PTR [edi+0x8],0x4924923
64004e67:	jb     0x64004eb2
64004e69:	push   0x13
64004e6b:	push   0x640298f4
64004e70:	lea    ecx,[esp+0x20]
64004e74:	mov    DWORD PTR [esp+0x38],0xf
64004e7c:	mov    DWORD PTR [esp+0x34],ebx
64004e80:	mov    BYTE PTR [esp+0x24],bl
64004e84:	call   0x64003470
64004e89:	lea    eax,[esp+0x18]
64004e8d:	push   eax
64004e8e:	lea    ecx,[esp+0x38]
64004e92:	mov    DWORD PTR [esp+0x6c],ebx
64004e96:	call   0x64001310
64004e9b:	push   0x6402bd44
64004ea0:	lea    ecx,[esp+0x38]
64004ea4:	push   ecx
64004ea5:	mov    DWORD PTR [esp+0x3c],0x640242e0
64004ead:	call   0x64013872
64004eb2:	mov    edx,DWORD PTR [ebp+0x14]
64004eb5:	mov    eax,DWORD PTR [edi+0x4]
64004eb8:	mov    esi,DWORD PTR [ebp+0x10]
64004ebb:	push   ebx
64004ebc:	push   edx
64004ebd:	push   eax
64004ebe:	push   esi
64004ebf:	push   eax
64004ec0:	call   0x640058a0
64004ec5:	add    DWORD PTR [edi+0x8],0x1
64004ec9:	mov    ecx,eax
64004ecb:	mov    eax,DWORD PTR [edi+0x4]
64004ece:	cmp    esi,eax
64004ed0:	mov    DWORD PTR [esp+0x14],ecx
64004ed4:	jne    0x64004ee6
64004ed6:	mov    DWORD PTR [eax+0x4],ecx
64004ed9:	mov    eax,DWORD PTR [edi+0x4]
64004edc:	mov    DWORD PTR [eax],ecx
64004ede:	mov    edx,DWORD PTR [edi+0x4]
64004ee1:	mov    DWORD PTR [edx+0x8],ecx
64004ee4:	jmp    0x64004f06
64004ee6:	cmp    BYTE PTR [ebp+0xc],bl
64004ee9:	je     0x64004ef8
64004eeb:	mov    DWORD PTR [esi],ecx
64004eed:	mov    eax,DWORD PTR [edi+0x4]
64004ef0:	cmp    esi,DWORD PTR [eax]
64004ef2:	jne    0x64004f06
64004ef4:	mov    DWORD PTR [eax],ecx
64004ef6:	jmp    0x64004f06
64004ef8:	mov    DWORD PTR [esi+0x8],ecx
64004efb:	mov    eax,DWORD PTR [edi+0x4]
64004efe:	cmp    esi,DWORD PTR [eax+0x8]
64004f01:	jne    0x64004f06
64004f03:	mov    DWORD PTR [eax+0x8],ecx
64004f06:	mov    edx,DWORD PTR [ecx+0x4]
64004f09:	cmp    BYTE PTR [edx+0x44],bl
64004f0c:	lea    eax,[ecx+0x4]
64004f0f:	mov    esi,ecx
64004f11:	jne    0x64005052
64004f17:	mov    ecx,DWORD PTR [eax]
64004f19:	mov    edx,DWORD PTR [ecx+0x4]
64004f1c:	cmp    ecx,DWORD PTR [edx]
64004f1e:	jne    0x64004fc5
64004f24:	mov    edx,DWORD PTR [edx+0x8]
64004f27:	cmp    BYTE PTR [edx+0x44],bl
64004f2a:	je     0x64004fcc
64004f30:	cmp    esi,DWORD PTR [ecx+0x8]
64004f33:	jne    0x64004f70
64004f35:	mov    esi,ecx
64004f37:	mov    ecx,DWORD PTR [esi+0x8]
64004f3a:	mov    eax,DWORD PTR [ecx]
64004f3c:	mov    DWORD PTR [esi+0x8],eax
64004f3f:	mov    eax,DWORD PTR [ecx]
64004f41:	cmp    BYTE PTR [eax+0x45],bl
64004f44:	jne    0x64004f49
64004f46:	mov    DWORD PTR [eax+0x4],esi
64004f49:	mov    edx,DWORD PTR [esi+0x4]
64004f4c:	lea    eax,[esi+0x4]
64004f4f:	mov    DWORD PTR [ecx+0x4],edx
64004f52:	mov    edx,DWORD PTR [edi+0x4]
64004f55:	cmp    esi,DWORD PTR [edx+0x4]
64004f58:	jne    0x64004f5f
64004f5a:	mov    DWORD PTR [edx+0x4],ecx
64004f5d:	jmp    0x64004f6c
64004f5f:	mov    edx,DWORD PTR [eax]
64004f61:	cmp    esi,DWORD PTR [edx]
64004f63:	jne    0x64004f69
64004f65:	mov    DWORD PTR [edx],ecx
64004f67:	jmp    0x64004f6c
64004f69:	mov    DWORD PTR [edx+0x8],ecx
64004f6c:	mov    DWORD PTR [ecx],esi
64004f6e:	mov    DWORD PTR [eax],ecx
64004f70:	mov    ecx,DWORD PTR [eax]
64004f72:	mov    BYTE PTR [ecx+0x44],0x1
64004f76:	mov    edx,DWORD PTR [eax]
64004f78:	mov    ecx,DWORD PTR [edx+0x4]
64004f7b:	mov    BYTE PTR [ecx+0x44],bl
64004f7e:	mov    edx,DWORD PTR [eax]
64004f80:	mov    eax,DWORD PTR [edx+0x4]
64004f83:	mov    ecx,DWORD PTR [eax]
64004f85:	mov    edx,DWORD PTR [ecx+0x8]
64004f88:	mov    DWORD PTR [eax],edx
64004f8a:	mov    edx,DWORD PTR [ecx+0x8]
64004f8d:	cmp    BYTE PTR [edx+0x45],bl
64004f90:	jne    0x64004f95
64004f92:	mov    DWORD PTR [edx+0x4],eax
64004f95:	mov    edx,DWORD PTR [eax+0x4]
64004f98:	mov    DWORD PTR [ecx+0x4],edx
64004f9b:	mov    edx,DWORD PTR [edi+0x4]
64004f9e:	cmp    eax,DWORD PTR [edx+0x4]
64004fa1:	jne    0x64004fae
64004fa3:	mov    DWORD PTR [edx+0x4],ecx
64004fa6:	mov    DWORD PTR [ecx+0x8],eax
64004fa9:	jmp    0x6400503c
64004fae:	mov    edx,DWORD PTR [eax+0x4]
64004fb1:	cmp    eax,DWORD PTR [edx+0x8]
64004fb4:	jne    0x64004fbe
64004fb6:	mov    DWORD PTR [edx+0x8],ecx
64004fb9:	mov    DWORD PTR [ecx+0x8],eax
64004fbc:	jmp    0x6400503c
64004fbe:	mov    DWORD PTR [edx],ecx
64004fc0:	mov    DWORD PTR [ecx+0x8],eax
64004fc3:	jmp    0x6400503c
64004fc5:	mov    edx,DWORD PTR [edx]
64004fc7:	cmp    BYTE PTR [edx+0x44],bl
64004fca:	jne    0x64004fe3
64004fcc:	mov    BYTE PTR [ecx+0x44],0x1
64004fd0:	mov    BYTE PTR [edx+0x44],0x1
64004fd4:	mov    edx,DWORD PTR [eax]
64004fd6:	mov    ecx,DWORD PTR [edx+0x4]
64004fd9:	mov    BYTE PTR [ecx+0x44],bl
64004fdc:	mov    edx,DWORD PTR [eax]
64004fde:	mov    esi,DWORD PTR [edx+0x4]
64004fe1:	jmp    0x6400503f
64004fe3:	cmp    esi,DWORD PTR [ecx]
64004fe5:	jne    0x64004ff1
64004fe7:	mov    esi,ecx
64004fe9:	push   esi
64004fea:	mov    ecx,edi
64004fec:	call   0x64005840
64004ff1:	mov    eax,DWORD PTR [esi+0x4]
64004ff4:	mov    BYTE PTR [eax+0x44],0x1
64004ff8:	mov    ecx,DWORD PTR [esi+0x4]
64004ffb:	mov    edx,DWORD PTR [ecx+0x4]
64004ffe:	mov    BYTE PTR [edx+0x44],bl
64005001:	mov    eax,DWORD PTR [esi+0x4]
64005004:	mov    eax,DWORD PTR [eax+0x4]
64005007:	mov    ecx,DWORD PTR [eax+0x8]
6400500a:	mov    edx,DWORD PTR [ecx]
6400500c:	mov    DWORD PTR [eax+0x8],edx
6400500f:	mov    edx,DWORD PTR [ecx]
64005011:	cmp    BYTE PTR [edx+0x45],bl
64005014:	jne    0x64005019
64005016:	mov    DWORD PTR [edx+0x4],eax
64005019:	mov    edx,DWORD PTR [eax+0x4]
6400501c:	mov    DWORD PTR [ecx+0x4],edx
6400501f:	mov    edx,DWORD PTR [edi+0x4]
64005022:	cmp    eax,DWORD PTR [edx+0x4]
64005025:	jne    0x6400502c
64005027:	mov    DWORD PTR [edx+0x4],ecx
6400502a:	jmp    0x6400503a
6400502c:	mov    edx,DWORD PTR [eax+0x4]
6400502f:	cmp    eax,DWORD PTR [edx]
64005031:	jne    0x64005037
64005033:	mov    DWORD PTR [edx],ecx
64005035:	jmp    0x6400503a
64005037:	mov    DWORD PTR [edx+0x8],ecx
6400503a:	mov    DWORD PTR [ecx],eax
6400503c:	mov    DWORD PTR [eax+0x4],ecx
6400503f:	mov    ecx,DWORD PTR [esi+0x4]
64005042:	cmp    BYTE PTR [ecx+0x44],bl
64005045:	lea    eax,[esi+0x4]
64005048:	je     0x64004f17
6400504e:	mov    ecx,DWORD PTR [esp+0x14]
64005052:	mov    edx,DWORD PTR [edi+0x4]
64005055:	mov    eax,DWORD PTR [edx+0x4]
64005058:	mov    BYTE PTR [eax+0x44],0x1
6400505c:	mov    eax,DWORD PTR [ebp+0x8]
6400505f:	mov    DWORD PTR [eax+0x4],ecx
64005062:	mov    DWORD PTR [eax],edi
64005064:	mov    ecx,DWORD PTR [esp+0x60]
64005068:	mov    DWORD PTR fs:0x0,ecx
6400506f:	pop    ecx
64005070:	pop    edi
64005071:	pop    esi
64005072:	pop    ebx
64005073:	mov    esp,ebp
64005075:	pop    ebp
64005076:	ret    0x10
64005079:	int3   
6400507a:	int3   
6400507b:	int3   
6400507c:	int3   
6400507d:	int3   
6400507e:	int3   
6400507f:	int3   
64005080:	push   ecx
64005081:	mov    eax,DWORD PTR [ecx+0x4]
64005084:	push   esi
64005085:	mov    esi,DWORD PTR [eax+0x4]
64005088:	cmp    BYTE PTR [esi+0x45],0x0
6400508c:	mov    DWORD PTR [esp+0x4],eax
64005090:	jne    0x64005107
64005092:	mov    eax,DWORD PTR [esp+0xc]
64005096:	mov    ecx,DWORD PTR [eax+0x18]
64005099:	push   ebx
6400509a:	mov    ebx,DWORD PTR [eax+0x14]
6400509d:	push   ebp
6400509e:	push   edi
6400509f:	mov    DWORD PTR [esp+0x18],ecx
640050a3:	lea    ebp,[eax+0x4]
640050a6:	cmp    DWORD PTR [esp+0x18],0x10
640050ab:	jb     0x640050b2
640050ad:	mov    edx,DWORD PTR [ebp+0x0]
640050b0:	jmp    0x640050b4
640050b2:	mov    edx,ebp
640050b4:	mov    edi,DWORD PTR [esi+0x20]
640050b7:	mov    eax,edi
640050b9:	cmp    eax,edi
640050bb:	jae    0x640050bd
640050bd:	cmp    edi,ebx
640050bf:	mov    ecx,edi
640050c1:	jb     0x640050c5
640050c3:	mov    ecx,ebx
640050c5:	cmp    DWORD PTR [esi+0x24],0x10
640050c9:	jb     0x640050d0
640050cb:	mov    eax,DWORD PTR [esi+0x10]
640050ce:	jmp    0x640050d3
640050d0:	lea    eax,[esi+0x10]
640050d3:	push   ecx
640050d4:	push   edx
640050d5:	push   eax
640050d6:	call   0x64001270
640050db:	add    esp,0xc
640050de:	test   eax,eax
640050e0:	jne    0x640050ed
640050e2:	cmp    edi,ebx
640050e4:	jb     0x640050ef
640050e6:	cmp    edi,ebx
640050e8:	setne  al
640050eb:	test   eax,eax
640050ed:	jge    0x640050f4
640050ef:	mov    esi,DWORD PTR [esi+0x8]
640050f2:	jmp    0x640050fa
640050f4:	mov    DWORD PTR [esp+0x10],esi
640050f8:	mov    esi,DWORD PTR [esi]
640050fa:	cmp    BYTE PTR [esi+0x45],0x0
640050fe:	je     0x640050a6
64005100:	mov    eax,DWORD PTR [esp+0x10]
64005104:	pop    edi
64005105:	pop    ebp
64005106:	pop    ebx
64005107:	pop    esi
64005108:	pop    ecx
64005109:	ret    0x4
6400510c:	int3   
6400510d:	int3   
6400510e:	int3   
6400510f:	int3   
64005110:	sub    esp,0x8
64005113:	cmp    DWORD PTR [esi+0x14],ebx
64005116:	push   edi
64005117:	mov    edi,eax
64005119:	jae    0x64005120
6400511b:	call   0x64012f5b
64005120:	mov    eax,DWORD PTR [esi+0x14]
64005123:	sub    eax,ebx
64005125:	cmp    eax,edi
64005127:	jae    0x6400512b
64005129:	mov    edi,eax
6400512b:	test   edi,edi
6400512d:	jbe    0x64005198
6400512f:	mov    ecx,DWORD PTR [esi+0x18]
64005132:	cmp    ecx,0x8
64005135:	push   ebp
64005136:	lea    ebp,[esi+0x4]
64005139:	jb     0x64005144
6400513b:	mov    edx,DWORD PTR [ebp+0x0]
6400513e:	mov    DWORD PTR [esp+0x8],edx
64005142:	jmp    0x64005148
64005144:	mov    DWORD PTR [esp+0x8],ebp
64005148:	cmp    ecx,0x8
6400514b:	jb     0x64005156
6400514d:	mov    edx,DWORD PTR [ebp+0x0]
64005150:	mov    DWORD PTR [esp+0xc],edx
64005154:	jmp    0x6400515a
64005156:	mov    DWORD PTR [esp+0xc],ebp
6400515a:	mov    edx,DWORD PTR [esp+0x8]
6400515e:	sub    eax,edi
64005160:	add    eax,eax
64005162:	push   eax
64005163:	lea    eax,[ebx+edi*1]
64005166:	lea    eax,[edx+eax*2]
64005169:	sub    ecx,ebx
6400516b:	push   eax
6400516c:	add    ecx,ecx
6400516e:	push   ecx
6400516f:	mov    ecx,DWORD PTR [esp+0x18]
64005173:	lea    edx,[ecx+ebx*2]
64005176:	push   edx
64005177:	call   0x64013817
6400517c:	mov    eax,DWORD PTR [esi+0x14]
6400517f:	sub    eax,edi
64005181:	add    esp,0x10
64005184:	cmp    DWORD PTR [esi+0x18],0x8
64005188:	mov    DWORD PTR [esi+0x14],eax
6400518b:	jb     0x64005190
6400518d:	mov    ebp,DWORD PTR [ebp+0x0]
64005190:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64005197:	pop    ebp
64005198:	mov    eax,esi
6400519a:	pop    edi
6400519b:	add    esp,0x8
6400519e:	ret    
6400519f:	int3   
640051a0:	cmp    edi,0x7ffffffe
640051a6:	push   esi
640051a7:	mov    esi,eax
640051a9:	jbe    0x640051b0
640051ab:	call   0x64012f1c
640051b0:	mov    eax,DWORD PTR [esi+0x18]
640051b3:	cmp    eax,edi
640051b5:	jae    0x640051cc
640051b7:	mov    eax,DWORD PTR [esi+0x14]
640051ba:	push   eax
640051bb:	push   edi
640051bc:	push   esi
640051bd:	call   0x64005940
640051c2:	xor    ecx,ecx
640051c4:	cmp    ecx,edi
640051c6:	sbb    eax,eax
640051c8:	neg    eax
640051ca:	pop    esi
640051cb:	ret    
640051cc:	test   edi,edi
640051ce:	jne    0x640051f0
640051d0:	cmp    eax,0x8
640051d3:	mov    DWORD PTR [esi+0x14],edi
640051d6:	jb     0x640051e8
640051d8:	mov    esi,DWORD PTR [esi+0x4]
640051db:	xor    ecx,ecx
640051dd:	cmp    ecx,edi
640051df:	sbb    eax,eax
640051e1:	mov    WORD PTR [esi],di
640051e4:	neg    eax
640051e6:	pop    esi
640051e7:	ret    
640051e8:	add    esi,0x4
640051eb:	mov    WORD PTR [esi],0x0
640051f0:	xor    ecx,ecx
640051f2:	cmp    ecx,edi
640051f4:	sbb    eax,eax
640051f6:	neg    eax
640051f8:	pop    esi
640051f9:	ret    
640051fa:	int3   
640051fb:	int3   
640051fc:	int3   
640051fd:	int3   
640051fe:	int3   
640051ff:	int3   
64005200:	sub    esp,0x18
64005203:	mov    ecx,DWORD PTR [esp+0x1c]
64005207:	mov    eax,DWORD PTR [ecx+0x4]
6400520a:	push   ebx
6400520b:	mov    ebx,DWORD PTR [esp+0x24]
6400520f:	push   ebp
64005210:	push   esi
64005211:	mov    esi,DWORD PTR [eax+0x4]
64005214:	cmp    BYTE PTR [esi+0x45],0x0
64005218:	mov    ebp,eax
6400521a:	mov    al,0x1
6400521c:	push   edi
6400521d:	mov    BYTE PTR [esp+0x10],al
64005221:	jne    0x640052e3
64005227:	mov    eax,DWORD PTR [esp+0x34]
6400522b:	mov    ecx,DWORD PTR [eax+0x14]
6400522e:	mov    edx,DWORD PTR [eax+0x18]
64005231:	mov    DWORD PTR [esp+0x18],ecx
64005235:	mov    DWORD PTR [esp+0x14],ecx
64005239:	mov    DWORD PTR [esp+0x1c],edx
6400523d:	jmp    0x64005244
6400523f:	nop
64005240:	mov    ecx,DWORD PTR [esp+0x14]
64005244:	cmp    DWORD PTR [esi+0x24],0x8
64005248:	mov    ebp,DWORD PTR [esi+0x20]
6400524b:	mov    DWORD PTR [esp+0x20],esi
6400524f:	jb     0x64005256
64005251:	mov    eax,DWORD PTR [esi+0x10]
64005254:	jmp    0x64005259
64005256:	lea    eax,[esi+0x10]
64005259:	mov    edi,DWORD PTR [esp+0x18]
6400525d:	cmp    ecx,edi
6400525f:	jae    0x64005263
64005261:	mov    edi,ecx
64005263:	cmp    edi,ebp
64005265:	mov    edx,edi
64005267:	jb     0x6400526b
64005269:	mov    edx,ebp
6400526b:	mov    ecx,DWORD PTR [esp+0x34]
6400526f:	add    ecx,0x4
64005272:	cmp    DWORD PTR [esp+0x1c],0x8
64005277:	jb     0x6400527b
64005279:	mov    ecx,DWORD PTR [ecx]
6400527b:	test   edx,edx
6400527d:	jbe    0x64005297
6400527f:	nop
64005280:	mov    bx,WORD PTR [ecx]
64005283:	cmp    bx,WORD PTR [eax]
64005286:	jne    0x640052a0
64005288:	add    ecx,0x2
6400528b:	add    eax,0x2
6400528e:	sub    edx,0x1
64005291:	jne    0x64005280
64005293:	mov    ebx,DWORD PTR [esp+0x30]
64005297:	cmp    edi,ebp
64005299:	jae    0x640052b6
6400529b:	or     eax,0xffffffff
6400529e:	jmp    0x640052bd
640052a0:	mov    cx,bx
640052a3:	cmp    cx,WORD PTR [eax]
640052a6:	sbb    eax,eax
640052a8:	and    eax,0xfffffffe
640052ab:	add    eax,0x1
640052ae:	je     0x64005293
640052b0:	mov    ebx,DWORD PTR [esp+0x30]
640052b4:	jmp    0x640052bd
640052b6:	xor    eax,eax
640052b8:	cmp    edi,ebp
640052ba:	setne  al
640052bd:	test   eax,eax
640052bf:	setl   al
640052c2:	test   al,al
640052c4:	mov    BYTE PTR [esp+0x10],al
640052c8:	je     0x640052ce
640052ca:	mov    esi,DWORD PTR [esi]
640052cc:	jmp    0x640052d1
640052ce:	mov    esi,DWORD PTR [esi+0x8]
640052d1:	cmp    BYTE PTR [esi+0x45],0x0
640052d5:	je     0x64005240
640052db:	mov    ebp,DWORD PTR [esp+0x20]
640052df:	mov    ecx,DWORD PTR [esp+0x2c]
640052e3:	test   al,al
640052e5:	mov    esi,ebp
640052e7:	mov    DWORD PTR [esp+0x24],esi
640052eb:	mov    DWORD PTR [esp+0x20],ecx
640052ef:	je     0x64005333
640052f1:	mov    edx,DWORD PTR [ecx+0x4]
640052f4:	cmp    ebp,DWORD PTR [edx]
640052f6:	jne    0x64005326
640052f8:	mov    eax,DWORD PTR [esp+0x34]
640052fc:	push   eax
640052fd:	push   0x1
640052ff:	lea    edx,[esp+0x28]
64005303:	push   edx
64005304:	push   ecx
64005305:	mov    ecx,ebp
64005307:	call   0x64005390
6400530c:	mov    ecx,DWORD PTR [eax]
6400530e:	mov    edx,DWORD PTR [eax+0x4]
64005311:	mov    DWORD PTR [ebx],ecx
64005313:	mov    DWORD PTR [ebx+0x4],edx
64005316:	mov    BYTE PTR [ebx+0x8],0x1
6400531a:	mov    eax,ebx
6400531c:	pop    edi
6400531d:	pop    esi
6400531e:	pop    ebp
6400531f:	pop    ebx
64005320:	add    esp,0x18
64005323:	ret    0xc
64005326:	lea    esi,[esp+0x20]
6400532a:	call   0x64006540
6400532f:	mov    esi,DWORD PTR [esp+0x24]
64005333:	mov    eax,DWORD PTR [esp+0x34]
64005337:	cmp    DWORD PTR [eax+0x18],0x8
6400533b:	mov    edi,DWORD PTR [eax+0x14]
6400533e:	lea    ecx,[esi+0xc]
64005341:	jb     0x64005348
64005343:	mov    eax,DWORD PTR [eax+0x4]
64005346:	jmp    0x6400534b
64005348:	add    eax,0x4
6400534b:	push   eax
6400534c:	mov    eax,DWORD PTR [ecx+0x14]
6400534f:	call   0x64006990
64005354:	test   eax,eax
64005356:	jge    0x6400536e
64005358:	mov    eax,DWORD PTR [esp+0x34]
6400535c:	mov    ecx,DWORD PTR [esp+0x10]
64005360:	push   eax
64005361:	mov    eax,DWORD PTR [esp+0x30]
64005365:	push   ecx
64005366:	lea    edx,[esp+0x28]
6400536a:	push   edx
6400536b:	push   eax
6400536c:	jmp    0x64005305
6400536e:	mov    eax,DWORD PTR [esp+0x20]
64005372:	pop    edi
64005373:	mov    DWORD PTR [ebx+0x4],esi
64005376:	pop    esi
64005377:	mov    DWORD PTR [ebx],eax
64005379:	pop    ebp
6400537a:	mov    BYTE PTR [ebx+0x8],0x0
6400537e:	mov    eax,ebx
64005380:	pop    ebx
64005381:	add    esp,0x18
64005384:	ret    0xc
64005387:	int3   
64005388:	int3   
64005389:	int3   
6400538a:	int3   
6400538b:	int3   
6400538c:	int3   
6400538d:	int3   
6400538e:	int3   
6400538f:	int3   
64005390:	push   0xffffffff
64005392:	push   0x64023588
64005397:	mov    eax,fs:0x0
6400539d:	push   eax
6400539e:	sub    esp,0x44
640053a1:	push   ebx
640053a2:	push   ebp
640053a3:	push   esi
640053a4:	push   edi
640053a5:	mov    eax,ds:0x64037644
640053aa:	xor    eax,esp
640053ac:	push   eax
640053ad:	lea    eax,[esp+0x58]
640053b1:	mov    fs:0x0,eax
640053b7:	mov    esi,ecx
640053b9:	mov    ebp,DWORD PTR [esp+0x68]
640053bd:	cmp    DWORD PTR [ebp+0x8],0x4924923
640053c4:	jb     0x64005411
640053c6:	push   0x13
640053c8:	xor    ebx,ebx
640053ca:	push   0x640298f4
640053cf:	lea    ecx,[esp+0x1c]
640053d3:	mov    DWORD PTR [esp+0x34],0xf
640053db:	mov    DWORD PTR [esp+0x30],ebx
640053df:	mov    BYTE PTR [esp+0x20],bl
640053e3:	call   0x64003470
640053e8:	lea    eax,[esp+0x14]
640053ec:	push   eax
640053ed:	lea    ecx,[esp+0x34]
640053f1:	mov    DWORD PTR [esp+0x64],ebx
640053f5:	call   0x64001310
640053fa:	push   0x6402bd44
640053ff:	lea    ecx,[esp+0x34]
64005403:	push   ecx
64005404:	mov    DWORD PTR [esp+0x38],0x640242e0
6400540c:	call   0x64013872
64005411:	mov    edx,DWORD PTR [esp+0x74]
64005415:	mov    eax,DWORD PTR [ebp+0x4]
64005418:	push   edx
64005419:	push   eax
6400541a:	push   esi
6400541b:	push   eax
6400541c:	call   0x64005cb0
64005421:	mov    ecx,DWORD PTR [ebp+0x4]
64005424:	mov    edx,eax
64005426:	mov    eax,0x1
6400542b:	add    DWORD PTR [ebp+0x8],eax
6400542e:	xor    ebx,ebx
64005430:	cmp    esi,ecx
64005432:	mov    DWORD PTR [esp+0x68],edx
64005436:	jne    0x64005445
64005438:	mov    DWORD PTR [ecx+0x4],edx
6400543b:	mov    ecx,DWORD PTR [ebp+0x4]
6400543e:	mov    DWORD PTR [ecx],edx
64005440:	mov    ecx,DWORD PTR [ebp+0x4]
64005443:	jmp    0x64005463
64005445:	cmp    BYTE PTR [esp+0x70],bl
64005449:	je     0x64005458
6400544b:	mov    DWORD PTR [esi],edx
6400544d:	mov    ecx,DWORD PTR [ebp+0x4]
64005450:	cmp    esi,DWORD PTR [ecx]
64005452:	jne    0x64005466
64005454:	mov    DWORD PTR [ecx],edx
64005456:	jmp    0x64005466
64005458:	mov    DWORD PTR [esi+0x8],edx
6400545b:	mov    ecx,DWORD PTR [ebp+0x4]
6400545e:	cmp    esi,DWORD PTR [ecx+0x8]
64005461:	jne    0x64005466
64005463:	mov    DWORD PTR [ecx+0x8],edx
64005466:	mov    esi,DWORD PTR [edx+0x4]
64005469:	cmp    BYTE PTR [esi+0x44],bl
6400546c:	lea    ecx,[edx+0x4]
6400546f:	jne    0x640055e7
64005475:	mov    esi,DWORD PTR [ecx]
64005477:	mov    edi,DWORD PTR [esi+0x4]
6400547a:	cmp    esi,DWORD PTR [edi]
6400547c:	jne    0x64005528
64005482:	mov    edi,DWORD PTR [edi+0x8]
64005485:	cmp    BYTE PTR [edi+0x44],bl
64005488:	je     0x6400552f
6400548e:	cmp    edx,DWORD PTR [esi+0x8]
64005491:	jne    0x640054ce
64005493:	mov    edx,esi
64005495:	mov    esi,DWORD PTR [edx+0x8]
64005498:	mov    ecx,DWORD PTR [esi]
6400549a:	mov    DWORD PTR [edx+0x8],ecx
6400549d:	mov    ecx,DWORD PTR [esi]
6400549f:	cmp    BYTE PTR [ecx+0x45],bl
640054a2:	jne    0x640054a7
640054a4:	mov    DWORD PTR [ecx+0x4],edx
640054a7:	mov    edi,DWORD PTR [edx+0x4]
640054aa:	lea    ecx,[edx+0x4]
640054ad:	mov    DWORD PTR [esi+0x4],edi
640054b0:	mov    edi,DWORD PTR [ebp+0x4]
640054b3:	cmp    edx,DWORD PTR [edi+0x4]
640054b6:	jne    0x640054bd
640054b8:	mov    DWORD PTR [edi+0x4],esi
640054bb:	jmp    0x640054ca
640054bd:	mov    edi,DWORD PTR [ecx]
640054bf:	cmp    edx,DWORD PTR [edi]
640054c1:	jne    0x640054c7
640054c3:	mov    DWORD PTR [edi],esi
640054c5:	jmp    0x640054ca
640054c7:	mov    DWORD PTR [edi+0x8],esi
640054ca:	mov    DWORD PTR [esi],edx
640054cc:	mov    DWORD PTR [ecx],esi
640054ce:	mov    esi,DWORD PTR [ecx]
640054d0:	mov    BYTE PTR [esi+0x44],al
640054d3:	mov    esi,DWORD PTR [ecx]
640054d5:	mov    esi,DWORD PTR [esi+0x4]
640054d8:	mov    BYTE PTR [esi+0x44],bl
640054db:	mov    ecx,DWORD PTR [ecx]
640054dd:	mov    ecx,DWORD PTR [ecx+0x4]
640054e0:	mov    esi,DWORD PTR [ecx]
640054e2:	mov    edi,DWORD PTR [esi+0x8]
640054e5:	mov    DWORD PTR [ecx],edi
640054e7:	mov    edi,DWORD PTR [esi+0x8]
640054ea:	cmp    BYTE PTR [edi+0x45],bl
640054ed:	jne    0x640054f2
640054ef:	mov    DWORD PTR [edi+0x4],ecx
640054f2:	mov    edi,DWORD PTR [ecx+0x4]
640054f5:	mov    DWORD PTR [esi+0x4],edi
640054f8:	mov    edi,DWORD PTR [ebp+0x4]
640054fb:	cmp    ecx,DWORD PTR [edi+0x4]
640054fe:	jne    0x6400550b
64005500:	mov    DWORD PTR [edi+0x4],esi
64005503:	mov    DWORD PTR [esi+0x8],ecx
64005506:	jmp    0x640055d1
6400550b:	mov    edi,DWORD PTR [ecx+0x4]
6400550e:	cmp    ecx,DWORD PTR [edi+0x8]
64005511:	jne    0x6400551e
64005513:	mov    DWORD PTR [edi+0x8],esi
64005516:	mov    DWORD PTR [esi+0x8],ecx
64005519:	jmp    0x640055d1
6400551e:	mov    DWORD PTR [edi],esi
64005520:	mov    DWORD PTR [esi+0x8],ecx
64005523:	jmp    0x640055d1
64005528:	mov    edi,DWORD PTR [edi]
6400552a:	cmp    BYTE PTR [edi+0x44],bl
6400552d:	jne    0x64005549
6400552f:	mov    edx,esi
64005531:	mov    BYTE PTR [edx+0x44],al
64005534:	mov    BYTE PTR [edi+0x44],al
64005537:	mov    edx,DWORD PTR [ecx]
64005539:	mov    edx,DWORD PTR [edx+0x4]
6400553c:	mov    BYTE PTR [edx+0x44],bl
6400553f:	mov    ecx,DWORD PTR [ecx]
64005541:	mov    edx,DWORD PTR [ecx+0x4]
64005544:	jmp    0x640055d4
64005549:	cmp    edx,DWORD PTR [esi]
6400554b:	jne    0x6400558a
6400554d:	mov    edx,esi
6400554f:	mov    esi,DWORD PTR [edx]
64005551:	mov    ecx,DWORD PTR [esi+0x8]
64005554:	mov    DWORD PTR [edx],ecx
64005556:	mov    ecx,DWORD PTR [esi+0x8]
64005559:	cmp    BYTE PTR [ecx+0x45],bl
6400555c:	jne    0x64005561
6400555e:	mov    DWORD PTR [ecx+0x4],edx
64005561:	mov    edi,DWORD PTR [edx+0x4]
64005564:	lea    ecx,[edx+0x4]
64005567:	mov    DWORD PTR [esi+0x4],edi
6400556a:	mov    edi,DWORD PTR [ebp+0x4]
6400556d:	cmp    edx,DWORD PTR [edi+0x4]
64005570:	jne    0x64005577
64005572:	mov    DWORD PTR [edi+0x4],esi
64005575:	jmp    0x64005585
64005577:	mov    edi,DWORD PTR [ecx]
64005579:	cmp    edx,DWORD PTR [edi+0x8]
6400557c:	jne    0x64005583
6400557e:	mov    DWORD PTR [edi+0x8],esi
64005581:	jmp    0x64005585
64005583:	mov    DWORD PTR [edi],esi
64005585:	mov    DWORD PTR [esi+0x8],edx
64005588:	mov    DWORD PTR [ecx],esi
6400558a:	mov    esi,DWORD PTR [ecx]
6400558c:	mov    BYTE PTR [esi+0x44],al
6400558f:	mov    esi,DWORD PTR [ecx]
64005591:	mov    esi,DWORD PTR [esi+0x4]
64005594:	mov    BYTE PTR [esi+0x44],bl
64005597:	mov    ecx,DWORD PTR [ecx]
64005599:	mov    ecx,DWORD PTR [ecx+0x4]
6400559c:	mov    esi,DWORD PTR [ecx+0x8]
6400559f:	mov    edi,DWORD PTR [esi]
640055a1:	mov    DWORD PTR [ecx+0x8],edi
640055a4:	mov    edi,DWORD PTR [esi]
640055a6:	cmp    BYTE PTR [edi+0x45],bl
640055a9:	jne    0x640055ae
640055ab:	mov    DWORD PTR [edi+0x4],ecx
640055ae:	mov    edi,DWORD PTR [ecx+0x4]
640055b1:	mov    DWORD PTR [esi+0x4],edi
640055b4:	mov    edi,DWORD PTR [ebp+0x4]
640055b7:	cmp    ecx,DWORD PTR [edi+0x4]
640055ba:	jne    0x640055c1
640055bc:	mov    DWORD PTR [edi+0x4],esi
640055bf:	jmp    0x640055cf
640055c1:	mov    edi,DWORD PTR [ecx+0x4]
640055c4:	cmp    ecx,DWORD PTR [edi]
640055c6:	jne    0x640055cc
640055c8:	mov    DWORD PTR [edi],esi
640055ca:	jmp    0x640055cf
640055cc:	mov    DWORD PTR [edi+0x8],esi
640055cf:	mov    DWORD PTR [esi],ecx
640055d1:	mov    DWORD PTR [ecx+0x4],esi
640055d4:	mov    esi,DWORD PTR [edx+0x4]
640055d7:	cmp    BYTE PTR [esi+0x44],bl
640055da:	lea    ecx,[edx+0x4]
640055dd:	je     0x64005475
640055e3:	mov    edx,DWORD PTR [esp+0x68]
640055e7:	mov    ecx,DWORD PTR [ebp+0x4]
640055ea:	mov    ecx,DWORD PTR [ecx+0x4]
640055ed:	mov    BYTE PTR [ecx+0x44],al
640055f0:	mov    ecx,DWORD PTR [esp+0x6c]
640055f4:	mov    DWORD PTR [ecx+0x4],edx
640055f7:	mov    DWORD PTR [ecx],ebp
640055f9:	mov    eax,ecx
640055fb:	mov    ecx,DWORD PTR [esp+0x58]
640055ff:	mov    DWORD PTR fs:0x0,ecx
64005606:	pop    ecx
64005607:	pop    edi
64005608:	pop    esi
64005609:	pop    ebp
6400560a:	pop    ebx
6400560b:	add    esp,0x50
6400560e:	ret    0x10
64005611:	int3   
64005612:	int3   
64005613:	int3   
64005614:	int3   
64005615:	int3   
64005616:	int3   
64005617:	int3   
64005618:	int3   
64005619:	int3   
6400561a:	int3   
6400561b:	int3   
6400561c:	int3   
6400561d:	int3   
6400561e:	int3   
6400561f:	int3   
64005620:	sub    esp,0xc
64005623:	mov    eax,DWORD PTR [eax+0x4]
64005626:	push   edi
64005627:	mov    edi,DWORD PTR [eax+0x4]
6400562a:	cmp    BYTE PTR [edi+0x45],0x0
6400562e:	mov    DWORD PTR [esp+0x4],eax
64005632:	jne    0x640056cf
64005638:	mov    edx,DWORD PTR [ecx+0x18]
6400563b:	push   ebx
6400563c:	push   ebp
6400563d:	mov    ebp,DWORD PTR [ecx+0x14]
64005640:	add    ecx,0x4
64005643:	push   esi
64005644:	mov    DWORD PTR [esp+0x18],edx
64005648:	mov    DWORD PTR [esp+0x14],ecx
6400564c:	jmp    0x64005654
6400564e:	mov    edi,edi
64005650:	mov    ecx,DWORD PTR [esp+0x14]
64005654:	mov    eax,0x8
64005659:	cmp    DWORD PTR [esp+0x18],eax
6400565d:	jb     0x64005661
6400565f:	mov    ecx,DWORD PTR [ecx]
64005661:	mov    ebx,DWORD PTR [edi+0x20]
64005664:	mov    edx,ebx
64005666:	cmp    edx,ebx
64005668:	jae    0x6400566a
6400566a:	cmp    ebx,ebp
6400566c:	mov    esi,ebx
6400566e:	jb     0x64005672
64005670:	mov    esi,ebp
64005672:	cmp    DWORD PTR [edi+0x24],eax
64005675:	jb     0x6400567c
64005677:	mov    edx,DWORD PTR [edi+0x10]
6400567a:	jmp    0x6400567f
6400567c:	lea    edx,[edi+0x10]
6400567f:	test   esi,esi
64005681:	jbe    0x640056a8
64005683:	mov    ax,WORD PTR [edx]
64005686:	cmp    ax,WORD PTR [ecx]
64005689:	jne    0x64005698
6400568b:	add    edx,0x2
6400568e:	add    ecx,0x2
64005691:	sub    esi,0x1
64005694:	jne    0x64005683
64005696:	jmp    0x640056a8
64005698:	mov    dx,ax
6400569b:	cmp    dx,WORD PTR [ecx]
6400569e:	sbb    ecx,ecx
640056a0:	and    ecx,0xfffffffe
640056a3:	add    ecx,0x1
640056a6:	jne    0x640056b3
640056a8:	cmp    ebx,ebp
640056aa:	jb     0x640056b7
640056ac:	xor    ecx,ecx
640056ae:	cmp    ebx,ebp
640056b0:	setne  cl
640056b3:	test   ecx,ecx
640056b5:	jge    0x640056bc
640056b7:	mov    edi,DWORD PTR [edi+0x8]
640056ba:	jmp    0x640056c2
640056bc:	mov    DWORD PTR [esp+0x10],edi
640056c0:	mov    edi,DWORD PTR [edi]
640056c2:	cmp    BYTE PTR [edi+0x45],0x0
640056c6:	je     0x64005650
640056c8:	mov    eax,DWORD PTR [esp+0x10]
640056cc:	pop    esi
640056cd:	pop    ebp
640056ce:	pop    ebx
640056cf:	pop    edi
640056d0:	add    esp,0xc
640056d3:	ret    
640056d4:	int3   
640056d5:	int3   
640056d6:	int3   
640056d7:	int3   
640056d8:	int3   
640056d9:	int3   
640056da:	int3   
640056db:	int3   
640056dc:	int3   
640056dd:	int3   
640056de:	int3   
640056df:	int3   
640056e0:	push   ebp
640056e1:	mov    ebp,esp
640056e3:	and    esp,0xfffffff8
640056e6:	sub    esp,0x14
640056e9:	push   ebx
640056ea:	push   esi
640056eb:	push   edi
640056ec:	mov    edi,ecx
640056ee:	mov    eax,DWORD PTR [edi+0x4]
640056f1:	mov    ebx,DWORD PTR [eax]
640056f3:	mov    eax,DWORD PTR [ebp+0xc]
640056f6:	test   eax,eax
640056f8:	je     0x640056fe
640056fa:	cmp    eax,edi
640056fc:	je     0x64005703
640056fe:	call   0x64013e76
64005703:	mov    esi,DWORD PTR [ebp+0x10]
64005706:	cmp    esi,ebx
64005708:	jne    0x64005760
6400570a:	mov    eax,DWORD PTR [ebp+0x14]
6400570d:	test   eax,eax
6400570f:	mov    ebx,DWORD PTR [edi+0x4]
64005712:	je     0x64005718
64005714:	cmp    eax,edi
64005716:	je     0x6400571d
64005718:	call   0x64013e76
6400571d:	cmp    DWORD PTR [ebp+0x18],ebx
64005720:	jne    0x64005760
64005722:	mov    ecx,DWORD PTR [edi+0x4]
64005725:	mov    edx,DWORD PTR [ecx+0x4]
64005728:	push   edx
64005729:	mov    ecx,edi
6400572b:	call   0x64006730
64005730:	mov    eax,DWORD PTR [edi+0x4]
64005733:	mov    DWORD PTR [eax+0x4],eax
64005736:	mov    eax,DWORD PTR [edi+0x4]
64005739:	mov    DWORD PTR [edi+0x8],0x0
64005740:	mov    DWORD PTR [eax],eax
64005742:	mov    eax,DWORD PTR [edi+0x4]
64005745:	mov    DWORD PTR [eax+0x8],eax
64005748:	mov    eax,DWORD PTR [edi+0x4]
6400574b:	mov    ecx,DWORD PTR [eax]
6400574d:	mov    eax,DWORD PTR [ebp+0x8]
64005750:	mov    DWORD PTR [eax+0x4],ecx
64005753:	mov    DWORD PTR [eax],edi
64005755:	pop    edi
64005756:	pop    esi
64005757:	pop    ebx
64005758:	mov    esp,ebp
6400575a:	pop    ebp
6400575b:	ret    0x14
6400575e:	mov    edi,edi
64005760:	mov    ebx,DWORD PTR [ebp+0xc]
64005763:	test   ebx,ebx
64005765:	je     0x6400576c
64005767:	cmp    ebx,DWORD PTR [ebp+0x14]
6400576a:	je     0x64005771
6400576c:	call   0x64013e76
64005771:	cmp    esi,DWORD PTR [ebp+0x18]
64005774:	je     0x640057de
64005776:	test   ebx,ebx
64005778:	mov    DWORD PTR [esp+0x14],esi
6400577c:	jne    0x64005783
6400577e:	call   0x64013e76
64005783:	cmp    BYTE PTR [esi+0x45],0x0
64005787:	je     0x64005790
64005789:	call   0x64013e76
6400578e:	jmp    0x640057ca
64005790:	mov    eax,DWORD PTR [esi+0x8]
64005793:	cmp    BYTE PTR [eax+0x45],0x0
64005797:	jne    0x640057af
64005799:	mov    esi,eax
6400579b:	mov    eax,DWORD PTR [esi]
6400579d:	cmp    BYTE PTR [eax+0x45],0x0
640057a1:	jne    0x640057ca
640057a3:	mov    esi,eax
640057a5:	mov    eax,DWORD PTR [esi]
640057a7:	cmp    BYTE PTR [eax+0x45],0x0
640057ab:	je     0x640057a3
640057ad:	jmp    0x640057ca
640057af:	mov    eax,DWORD PTR [esi+0x4]
640057b2:	cmp    BYTE PTR [eax+0x45],0x0
640057b6:	jne    0x640057c8
640057b8:	cmp    esi,DWORD PTR [eax+0x8]
640057bb:	jne    0x640057c8
640057bd:	mov    esi,eax
640057bf:	mov    eax,DWORD PTR [eax+0x4]
640057c2:	cmp    BYTE PTR [eax+0x45],0x0
640057c6:	je     0x640057b8
640057c8:	mov    esi,eax
640057ca:	mov    edx,DWORD PTR [esp+0x14]
640057ce:	push   edx
640057cf:	push   ebx
640057d0:	lea    eax,[esp+0x20]
640057d4:	push   eax
640057d5:	mov    ecx,edi
640057d7:	call   0x64005d50
640057dc:	jmp    0x64005760
640057de:	mov    eax,DWORD PTR [ebp+0x8]
640057e1:	pop    edi
640057e2:	mov    DWORD PTR [eax+0x4],esi
640057e5:	pop    esi
640057e6:	mov    DWORD PTR [eax],ebx
640057e8:	pop    ebx
640057e9:	mov    esp,ebp
640057eb:	pop    ebp
640057ec:	ret    0x14
640057ef:	int3   
640057f0:	mov    edx,DWORD PTR [esp+0x4]
640057f4:	mov    eax,DWORD PTR [edx+0x8]
640057f7:	push   esi
640057f8:	mov    esi,DWORD PTR [eax]
640057fa:	mov    DWORD PTR [edx+0x8],esi
640057fd:	mov    esi,DWORD PTR [eax]
640057ff:	cmp    BYTE PTR [esi+0x45],0x0
64005803:	jne    0x64005808
64005805:	mov    DWORD PTR [esi+0x4],edx
64005808:	mov    esi,DWORD PTR [edx+0x4]
6400580b:	mov    DWORD PTR [eax+0x4],esi
6400580e:	mov    ecx,DWORD PTR [ecx+0x4]
64005811:	cmp    edx,DWORD PTR [ecx+0x4]
64005814:	pop    esi
64005815:	jne    0x64005822
64005817:	mov    DWORD PTR [ecx+0x4],eax
6400581a:	mov    DWORD PTR [eax],edx
6400581c:	mov    DWORD PTR [edx+0x4],eax
6400581f:	ret    0x4
64005822:	mov    ecx,DWORD PTR [edx+0x4]
64005825:	cmp    edx,DWORD PTR [ecx]
64005827:	jne    0x64005833
64005829:	mov    DWORD PTR [ecx],eax
6400582b:	mov    DWORD PTR [eax],edx
6400582d:	mov    DWORD PTR [edx+0x4],eax
64005830:	ret    0x4
64005833:	mov    DWORD PTR [ecx+0x8],eax
64005836:	mov    DWORD PTR [eax],edx
64005838:	mov    DWORD PTR [edx+0x4],eax
6400583b:	ret    0x4
6400583e:	int3   
6400583f:	int3   
64005840:	mov    edx,DWORD PTR [esp+0x4]
64005844:	mov    eax,DWORD PTR [edx]
64005846:	push   esi
64005847:	mov    esi,DWORD PTR [eax+0x8]
6400584a:	mov    DWORD PTR [edx],esi
6400584c:	mov    esi,DWORD PTR [eax+0x8]
6400584f:	cmp    BYTE PTR [esi+0x45],0x0
64005853:	jne    0x64005858
64005855:	mov    DWORD PTR [esi+0x4],edx
64005858:	mov    esi,DWORD PTR [edx+0x4]
6400585b:	mov    DWORD PTR [eax+0x4],esi
6400585e:	mov    ecx,DWORD PTR [ecx+0x4]
64005861:	cmp    edx,DWORD PTR [ecx+0x4]
64005864:	pop    esi
64005865:	jne    0x64005873
64005867:	mov    DWORD PTR [ecx+0x4],eax
6400586a:	mov    DWORD PTR [eax+0x8],edx
6400586d:	mov    DWORD PTR [edx+0x4],eax
64005870:	ret    0x4
64005873:	mov    ecx,DWORD PTR [edx+0x4]
64005876:	cmp    edx,DWORD PTR [ecx+0x8]
64005879:	jne    0x64005887
6400587b:	mov    DWORD PTR [ecx+0x8],eax
6400587e:	mov    DWORD PTR [eax+0x8],edx
64005881:	mov    DWORD PTR [edx+0x4],eax
64005884:	ret    0x4
64005887:	mov    DWORD PTR [ecx],eax
64005889:	mov    DWORD PTR [eax+0x8],edx
6400588c:	mov    DWORD PTR [edx+0x4],eax
6400588f:	ret    0x4
64005892:	int3   
64005893:	int3   
64005894:	int3   
64005895:	int3   
64005896:	int3   
64005897:	int3   
64005898:	int3   
64005899:	int3   
6400589a:	int3   
6400589b:	int3   
6400589c:	int3   
6400589d:	int3   
6400589e:	int3   
6400589f:	int3   
640058a0:	push   ebp
640058a1:	mov    ebp,esp
640058a3:	push   0xffffffff
640058a5:	push   0x64023201
640058aa:	mov    eax,fs:0x0
640058b0:	push   eax
640058b1:	sub    esp,0xc
640058b4:	push   ebx
640058b5:	push   esi
640058b6:	push   edi
640058b7:	mov    eax,ds:0x64037644
640058bc:	xor    eax,ebp
640058be:	push   eax
640058bf:	lea    eax,[ebp-0xc]
640058c2:	mov    fs:0x0,eax
640058c8:	mov    DWORD PTR [ebp-0x10],esp
640058cb:	push   0x48
640058cd:	call   0x640138d5
640058d2:	mov    esi,eax
640058d4:	mov    DWORD PTR [ebp-0x4],0x0
640058db:	add    esp,0x4
640058de:	mov    DWORD PTR [ebp-0x14],esi
640058e1:	mov    DWORD PTR [ebp-0x18],esi
640058e4:	test   esi,esi
640058e6:	mov    BYTE PTR [ebp-0x4],0x1
640058ea:	je     0x64005913
640058ec:	mov    eax,DWORD PTR [ebp+0x8]
640058ef:	mov    ecx,DWORD PTR [ebp+0xc]
640058f2:	mov    edx,DWORD PTR [ebp+0x10]
640058f5:	mov    DWORD PTR [esi],eax
640058f7:	mov    eax,DWORD PTR [ebp+0x14]
640058fa:	mov    DWORD PTR [esi+0x4],ecx
640058fd:	push   eax
640058fe:	lea    ecx,[esi+0xc]
64005901:	mov    DWORD PTR [esi+0x8],edx
64005904:	call   0x64006630
64005909:	mov    cl,BYTE PTR [ebp+0x18]
6400590c:	mov    BYTE PTR [esi+0x44],cl
6400590f:	mov    BYTE PTR [esi+0x45],0x0
64005913:	mov    eax,esi
64005915:	mov    ecx,DWORD PTR [ebp-0xc]
64005918:	mov    DWORD PTR fs:0x0,ecx
6400591f:	pop    ecx
64005920:	pop    edi
64005921:	pop    esi
64005922:	pop    ebx
64005923:	mov    esp,ebp
64005925:	pop    ebp
64005926:	ret    0x14
64005929:	mov    edx,DWORD PTR [ebp-0x14]
6400592c:	push   edx
6400592d:	call   0x64013644
64005932:	add    esp,0x4
64005935:	push   0x0
64005937:	push   0x0
64005939:	call   0x64013872
6400593e:	int3   
6400593f:	int3   
64005940:	push   ebp
64005941:	mov    ebp,esp
64005943:	push   0xffffffff
64005945:	push   0x64023000
6400594a:	mov    eax,fs:0x0
64005950:	push   eax
64005951:	sub    esp,0x18
64005954:	push   ebx
64005955:	push   esi
64005956:	push   edi
64005957:	mov    eax,ds:0x64037644
6400595c:	xor    eax,ebp
6400595e:	push   eax
6400595f:	lea    eax,[ebp-0xc]
64005962:	mov    fs:0x0,eax
64005968:	mov    DWORD PTR [ebp-0x10],esp
6400596b:	mov    eax,DWORD PTR [ebp+0xc]
6400596e:	mov    edi,DWORD PTR [ebp+0x8]
64005971:	mov    esi,eax
64005973:	or     esi,0x7
64005976:	cmp    esi,0x7ffffffe
6400597c:	jbe    0x64005982
6400597e:	mov    esi,eax
64005980:	jmp    0x640059a4
64005982:	mov    ebx,DWORD PTR [edi+0x18]
64005985:	mov    eax,0xaaaaaaab
6400598a:	mul    esi
6400598c:	mov    ecx,ebx
6400598e:	shr    ecx,1
64005990:	shr    edx,1
64005992:	cmp    edx,ecx
64005994:	jae    0x640059a4
64005996:	mov    eax,0x7ffffffe
6400599b:	sub    eax,ecx
6400599d:	cmp    ebx,eax
6400599f:	ja     0x640059a4
640059a1:	lea    esi,[ecx+ebx*1]
640059a4:	xor    ebx,ebx
640059a6:	lea    ecx,[esi+0x1]
640059a9:	cmp    ecx,ebx
640059ab:	mov    DWORD PTR [ebp-0x4],ebx
640059ae:	ja     0x640059c3
640059b0:	xor    ecx,ecx
640059b2:	lea    eax,[ecx+ecx*1]
640059b5:	push   eax
640059b6:	call   0x640138d5
640059bb:	add    esp,0x4
640059be:	mov    DWORD PTR [ebp+0xc],eax
640059c1:	jmp    0x64005a17
640059c3:	or     eax,0xffffffff
640059c6:	xor    edx,edx
640059c8:	div    ecx
640059ca:	cmp    eax,0x2
640059cd:	jae    0x640059b2
640059cf:	lea    ecx,[ebp-0x14]
640059d2:	push   ecx
640059d3:	lea    ecx,[ebp-0x24]
640059d6:	mov    DWORD PTR [ebp-0x14],ebx
640059d9:	call   0x6401365a
640059de:	push   0x6402bd7c
640059e3:	lea    edx,[ebp-0x24]
640059e6:	push   edx
640059e7:	mov    DWORD PTR [ebp-0x24],0x640242a4
640059ee:	call   0x64013872
640059f3:	mov    eax,DWORD PTR [ebp+0xc]
640059f6:	lea    ecx,[eax+0x1]
640059f9:	mov    DWORD PTR [ebp-0x10],esp
640059fc:	mov    DWORD PTR [ebp-0x18],eax
640059ff:	mov    BYTE PTR [ebp-0x4],0x2
64005a03:	call   0x64006170
64005a08:	mov    DWORD PTR [ebp+0xc],eax
64005a0b:	mov    eax,0x64005a11
64005a10:	ret    
64005a11:	mov    edi,DWORD PTR [ebp+0x8]
64005a14:	mov    esi,DWORD PTR [ebp-0x18]
64005a17:	mov    ebx,DWORD PTR [ebp+0x10]
64005a1a:	test   ebx,ebx
64005a1c:	jbe    0x64005a42
64005a1e:	cmp    DWORD PTR [edi+0x18],0x8
64005a22:	jb     0x64005a29
64005a24:	mov    eax,DWORD PTR [edi+0x4]
64005a27:	jmp    0x64005a2c
64005a29:	lea    eax,[edi+0x4]
64005a2c:	lea    ecx,[ebx+ebx*1]
64005a2f:	push   ecx
64005a30:	push   eax
64005a31:	mov    eax,DWORD PTR [ebp+0xc]
64005a34:	lea    edx,[esi+esi*1+0x2]
64005a38:	push   edx
64005a39:	push   eax
64005a3a:	call   0x6401379c
64005a3f:	add    esp,0x10
64005a42:	cmp    DWORD PTR [edi+0x18],0x8
64005a46:	jb     0x64005a54
64005a48:	mov    ecx,DWORD PTR [edi+0x4]
64005a4b:	push   ecx
64005a4c:	call   0x64013644
64005a51:	add    esp,0x4
64005a54:	cmp    esi,0x8
64005a57:	mov    ecx,DWORD PTR [ebp+0xc]
64005a5a:	lea    eax,[edi+0x4]
64005a5d:	mov    WORD PTR [eax],0x0
64005a62:	mov    DWORD PTR [eax],ecx
64005a64:	mov    DWORD PTR [edi+0x18],esi
64005a67:	mov    DWORD PTR [edi+0x14],ebx
64005a6a:	jb     0x64005a6e
64005a6c:	mov    eax,ecx
64005a6e:	mov    WORD PTR [eax+ebx*2],0x0
64005a74:	mov    ecx,DWORD PTR [ebp-0xc]
64005a77:	mov    DWORD PTR fs:0x0,ecx
64005a7e:	pop    ecx
64005a7f:	pop    edi
64005a80:	pop    esi
64005a81:	pop    ebx
64005a82:	mov    esp,ebp
64005a84:	pop    ebp
64005a85:	ret    0xc
64005a88:	mov    esi,DWORD PTR [ebp+0x8]
64005a8b:	cmp    DWORD PTR [esi+0x18],0x8
64005a8f:	jb     0x64005a9d
64005a91:	mov    edx,DWORD PTR [esi+0x4]
64005a94:	push   edx
64005a95:	call   0x64013644
64005a9a:	add    esp,0x4
64005a9d:	xor    eax,eax
64005a9f:	push   eax
64005aa0:	mov    DWORD PTR [esi+0x18],0x7
64005aa7:	mov    DWORD PTR [esi+0x14],eax
64005aaa:	push   eax
64005aab:	mov    WORD PTR [esi+0x4],ax
64005aaf:	call   0x64013872
64005ab4:	int3   
64005ab5:	int3   
64005ab6:	int3   
64005ab7:	int3   
64005ab8:	int3   
64005ab9:	int3   
64005aba:	int3   
64005abb:	int3   
64005abc:	int3   
64005abd:	int3   
64005abe:	int3   
64005abf:	int3   
64005ac0:	mov    eax,ds:0x64039980
64005ac5:	push   ebx
64005ac6:	mov    ebx,DWORD PTR [esp+0xc]
64005aca:	test   ebx,ebx
64005acc:	push   ebp
64005acd:	mov    ebp,DWORD PTR [esp+0xc]
64005ad1:	push   esi
64005ad2:	push   edi
64005ad3:	mov    edi,DWORD PTR [eax]
64005ad5:	je     0x64005adf
64005ad7:	cmp    ebx,0x6403997c
64005add:	je     0x64005ae4
64005adf:	call   0x64013e76
64005ae4:	mov    esi,DWORD PTR [esp+0x1c]
64005ae8:	cmp    esi,edi
64005aea:	jne    0x64005b60
64005aec:	mov    eax,DWORD PTR [esp+0x20]
64005af0:	test   eax,eax
64005af2:	mov    edi,DWORD PTR ds:0x64039980
64005af8:	je     0x64005b01
64005afa:	cmp    eax,0x6403997c
64005aff:	je     0x64005b06
64005b01:	call   0x64013e76
64005b06:	cmp    DWORD PTR [esp+0x24],edi
64005b0a:	jne    0x64005b60
64005b0c:	mov    ecx,DWORD PTR ds:0x64039980
64005b12:	mov    edx,DWORD PTR [ecx+0x4]
64005b15:	push   edx
64005b16:	mov    ecx,0x6403997c
64005b1b:	call   0x640067f0
64005b20:	mov    eax,ds:0x64039980
64005b25:	mov    DWORD PTR [eax+0x4],eax
64005b28:	mov    eax,ds:0x64039980
64005b2d:	mov    DWORD PTR ds:0x64039984,0x0
64005b37:	mov    DWORD PTR [eax],eax
64005b39:	mov    eax,ds:0x64039980
64005b3e:	mov    DWORD PTR [eax+0x8],eax
64005b41:	mov    eax,ds:0x64039980
64005b46:	mov    ecx,DWORD PTR [eax]
64005b48:	mov    DWORD PTR [ebp+0x4],ecx
64005b4b:	mov    DWORD PTR [ebp+0x0],0x6403997c
64005b52:	mov    eax,ebp
64005b54:	pop    edi
64005b55:	pop    esi
64005b56:	pop    ebp
64005b57:	pop    ebx
64005b58:	ret    0x14
64005b5b:	jmp    0x64005b60
64005b5d:	lea    ecx,[ecx+0x0]
64005b60:	test   ebx,ebx
64005b62:	je     0x64005b6a
64005b64:	cmp    ebx,DWORD PTR [esp+0x20]
64005b68:	je     0x64005b6f
64005b6a:	call   0x64013e76
64005b6f:	cmp    esi,DWORD PTR [esp+0x24]
64005b73:	je     0x64005bf4
64005b75:	test   ebx,ebx
64005b77:	mov    edi,esi
64005b79:	jne    0x64005b80
64005b7b:	call   0x64013e76
64005b80:	cmp    BYTE PTR [esi+0x45],0x0
64005b84:	je     0x64005b99
64005b86:	call   0x64013e76
64005b8b:	push   edi
64005b8c:	push   ebx
64005b8d:	lea    edx,[esp+0x20]
64005b91:	push   edx
64005b92:	call   0x640061d0
64005b97:	jmp    0x64005b60
64005b99:	mov    eax,DWORD PTR [esi+0x8]
64005b9c:	cmp    BYTE PTR [eax+0x45],0x0
64005ba0:	jne    0x64005bc8
64005ba2:	mov    esi,eax
64005ba4:	mov    eax,DWORD PTR [esi]
64005ba6:	cmp    BYTE PTR [eax+0x45],0x0
64005baa:	jne    0x64005be3
64005bac:	lea    esp,[esp+0x0]
64005bb0:	mov    esi,eax
64005bb2:	mov    eax,DWORD PTR [esi]
64005bb4:	cmp    BYTE PTR [eax+0x45],0x0
64005bb8:	je     0x64005bb0
64005bba:	push   edi
64005bbb:	push   ebx
64005bbc:	lea    edx,[esp+0x20]
64005bc0:	push   edx
64005bc1:	call   0x640061d0
64005bc6:	jmp    0x64005b60
64005bc8:	mov    eax,DWORD PTR [esi+0x4]
64005bcb:	cmp    BYTE PTR [eax+0x45],0x0
64005bcf:	jne    0x64005be1
64005bd1:	cmp    esi,DWORD PTR [eax+0x8]
64005bd4:	jne    0x64005be1
64005bd6:	mov    esi,eax
64005bd8:	mov    eax,DWORD PTR [eax+0x4]
64005bdb:	cmp    BYTE PTR [eax+0x45],0x0
64005bdf:	je     0x64005bd1
64005be1:	mov    esi,eax
64005be3:	push   edi
64005be4:	push   ebx
64005be5:	lea    edx,[esp+0x20]
64005be9:	push   edx
64005bea:	call   0x640061d0
64005bef:	jmp    0x64005b60
64005bf4:	pop    edi
64005bf5:	mov    DWORD PTR [ebp+0x4],esi
64005bf8:	pop    esi
64005bf9:	mov    DWORD PTR [ebp+0x0],ebx
64005bfc:	mov    eax,ebp
64005bfe:	pop    ebp
64005bff:	pop    ebx
64005c00:	ret    0x14
64005c03:	int3   
64005c04:	int3   
64005c05:	int3   
64005c06:	int3   
64005c07:	int3   
64005c08:	int3   
64005c09:	int3   
64005c0a:	int3   
64005c0b:	int3   
64005c0c:	int3   
64005c0d:	int3   
64005c0e:	int3   
64005c0f:	int3   
64005c10:	mov    eax,DWORD PTR [ecx+0x8]
64005c13:	mov    edx,DWORD PTR [eax]
64005c15:	mov    DWORD PTR [ecx+0x8],edx
64005c18:	mov    edx,DWORD PTR [eax]
64005c1a:	cmp    BYTE PTR [edx+0x45],0x0
64005c1e:	jne    0x64005c23
64005c20:	mov    DWORD PTR [edx+0x4],ecx
64005c23:	mov    edx,DWORD PTR [ecx+0x4]
64005c26:	mov    DWORD PTR [eax+0x4],edx
64005c29:	mov    edx,DWORD PTR [esp+0x4]
64005c2d:	mov    edx,DWORD PTR [edx+0x4]
64005c30:	cmp    ecx,DWORD PTR [edx+0x4]
64005c33:	jne    0x64005c40
64005c35:	mov    DWORD PTR [edx+0x4],eax
64005c38:	mov    DWORD PTR [eax],ecx
64005c3a:	mov    DWORD PTR [ecx+0x4],eax
64005c3d:	ret    0x4
64005c40:	mov    edx,DWORD PTR [ecx+0x4]
64005c43:	cmp    ecx,DWORD PTR [edx]
64005c45:	jne    0x64005c51
64005c47:	mov    DWORD PTR [edx],eax
64005c49:	mov    DWORD PTR [eax],ecx
64005c4b:	mov    DWORD PTR [ecx+0x4],eax
64005c4e:	ret    0x4
64005c51:	mov    DWORD PTR [edx+0x8],eax
64005c54:	mov    DWORD PTR [eax],ecx
64005c56:	mov    DWORD PTR [ecx+0x4],eax
64005c59:	ret    0x4
64005c5c:	int3   
64005c5d:	int3   
64005c5e:	int3   
64005c5f:	int3   
64005c60:	mov    eax,DWORD PTR [ecx]
64005c62:	mov    edx,DWORD PTR [eax+0x8]
64005c65:	mov    DWORD PTR [ecx],edx
64005c67:	mov    edx,DWORD PTR [eax+0x8]
64005c6a:	cmp    BYTE PTR [edx+0x45],0x0
64005c6e:	jne    0x64005c73
64005c70:	mov    DWORD PTR [edx+0x4],ecx
64005c73:	mov    edx,DWORD PTR [ecx+0x4]
64005c76:	mov    DWORD PTR [eax+0x4],edx
64005c79:	mov    edx,DWORD PTR [esp+0x4]
64005c7d:	mov    edx,DWORD PTR [edx+0x4]
64005c80:	cmp    ecx,DWORD PTR [edx+0x4]
64005c83:	jne    0x64005c91
64005c85:	mov    DWORD PTR [edx+0x4],eax
64005c88:	mov    DWORD PTR [eax+0x8],ecx
64005c8b:	mov    DWORD PTR [ecx+0x4],eax
64005c8e:	ret    0x4
64005c91:	mov    edx,DWORD PTR [ecx+0x4]
64005c94:	cmp    ecx,DWORD PTR [edx+0x8]
64005c97:	jne    0x64005ca5
64005c99:	mov    DWORD PTR [edx+0x8],eax
64005c9c:	mov    DWORD PTR [eax+0x8],ecx
64005c9f:	mov    DWORD PTR [ecx+0x4],eax
64005ca2:	ret    0x4
64005ca5:	mov    DWORD PTR [edx],eax
64005ca7:	mov    DWORD PTR [eax+0x8],ecx
64005caa:	mov    DWORD PTR [ecx+0x4],eax
64005cad:	ret    0x4
64005cb0:	push   ebp
64005cb1:	mov    ebp,esp
64005cb3:	push   0xffffffff
64005cb5:	push   0x640231d1
64005cba:	mov    eax,fs:0x0
64005cc0:	push   eax
64005cc1:	sub    esp,0xc
64005cc4:	push   ebx
64005cc5:	push   esi
64005cc6:	push   edi
64005cc7:	mov    eax,ds:0x64037644
64005ccc:	xor    eax,ebp
64005cce:	push   eax
64005ccf:	lea    eax,[ebp-0xc]
64005cd2:	mov    fs:0x0,eax
64005cd8:	mov    DWORD PTR [ebp-0x10],esp
64005cdb:	push   0x48
64005cdd:	call   0x640138d5
64005ce2:	mov    esi,eax
64005ce4:	mov    DWORD PTR [ebp-0x4],0x0
64005ceb:	add    esp,0x4
64005cee:	mov    DWORD PTR [ebp-0x14],esi
64005cf1:	mov    DWORD PTR [ebp-0x18],esi
64005cf4:	test   esi,esi
64005cf6:	mov    BYTE PTR [ebp-0x4],0x1
64005cfa:	je     0x64005d21
64005cfc:	mov    eax,DWORD PTR [ebp+0x8]
64005cff:	mov    ecx,DWORD PTR [ebp+0xc]
64005d02:	mov    edx,DWORD PTR [ebp+0x10]
64005d05:	mov    ebx,DWORD PTR [ebp+0x14]
64005d08:	mov    DWORD PTR [esi],eax
64005d0a:	lea    eax,[esi+0xc]
64005d0d:	push   eax
64005d0e:	mov    DWORD PTR [esi+0x4],ecx
64005d11:	mov    DWORD PTR [esi+0x8],edx
64005d14:	call   0x640066b0
64005d19:	xor    al,al
64005d1b:	mov    BYTE PTR [esi+0x44],al
64005d1e:	mov    BYTE PTR [esi+0x45],al
64005d21:	mov    eax,esi
64005d23:	mov    ecx,DWORD PTR [ebp-0xc]
64005d26:	mov    DWORD PTR fs:0x0,ecx
64005d2d:	pop    ecx
64005d2e:	pop    edi
64005d2f:	pop    esi
64005d30:	pop    ebx
64005d31:	mov    esp,ebp
64005d33:	pop    ebp
64005d34:	ret    0x10
64005d37:	mov    ecx,DWORD PTR [ebp-0x14]
64005d3a:	push   ecx
64005d3b:	call   0x64013644
64005d40:	add    esp,0x4
64005d43:	push   0x0
64005d45:	push   0x0
64005d47:	call   0x64013872
64005d4c:	int3   
64005d4d:	int3   
64005d4e:	int3   
64005d4f:	int3   
64005d50:	push   ebp
64005d51:	mov    ebp,esp
64005d53:	and    esp,0xfffffff8
64005d56:	push   0xffffffff
64005d58:	push   0x64023558
64005d5d:	mov    eax,fs:0x0
64005d63:	push   eax
64005d64:	sub    esp,0x50
64005d67:	push   ebx
64005d68:	push   esi
64005d69:	push   edi
64005d6a:	mov    eax,ds:0x64037644
64005d6f:	xor    eax,esp
64005d71:	push   eax
64005d72:	lea    eax,[esp+0x60]
64005d76:	mov    fs:0x0,eax
64005d7c:	mov    DWORD PTR [esp+0x14],ecx
64005d80:	mov    edi,DWORD PTR [ebp+0x10]
64005d83:	cmp    BYTE PTR [edi+0x45],0x0
64005d87:	je     0x64005dd5
64005d89:	push   0x1b
64005d8b:	xor    esi,esi
64005d8d:	push   0x64029908
64005d92:	lea    ecx,[esp+0x20]
64005d96:	mov    DWORD PTR [esp+0x38],0xf
64005d9e:	mov    DWORD PTR [esp+0x34],esi
64005da2:	mov    BYTE PTR [esp+0x24],0x0
64005da7:	call   0x64003470
64005dac:	lea    eax,[esp+0x18]
64005db0:	push   eax
64005db1:	lea    ecx,[esp+0x38]
64005db5:	mov    DWORD PTR [esp+0x6c],esi
64005db9:	call   0x64001310
64005dbe:	push   0x6402bd08
64005dc3:	lea    ecx,[esp+0x38]
64005dc7:	push   ecx
64005dc8:	mov    DWORD PTR [esp+0x3c],0x640242ec
64005dd0:	call   0x64013872
64005dd5:	lea    ecx,[ebp+0xc]
64005dd8:	call   0x64006100
64005ddd:	mov    ecx,DWORD PTR [edi]
64005ddf:	cmp    BYTE PTR [ecx+0x45],0x0
64005de3:	je     0x64005dea
64005de5:	mov    ebx,DWORD PTR [edi+0x8]
64005de8:	jmp    0x64005e01
64005dea:	mov    edx,DWORD PTR [edi+0x8]
64005ded:	cmp    BYTE PTR [edx+0x45],0x0
64005df1:	je     0x64005df7
64005df3:	mov    ebx,ecx
64005df5:	jmp    0x64005e01
64005df7:	mov    eax,DWORD PTR [ebp+0x10]
64005dfa:	cmp    eax,edi
64005dfc:	mov    ebx,DWORD PTR [eax+0x8]
64005dff:	jne    0x64005e7d
64005e01:	cmp    BYTE PTR [ebx+0x45],0x0
64005e05:	mov    esi,DWORD PTR [edi+0x4]
64005e08:	jne    0x64005e0d
64005e0a:	mov    DWORD PTR [ebx+0x4],esi
64005e0d:	mov    ecx,DWORD PTR [esp+0x14]
64005e11:	mov    eax,DWORD PTR [ecx+0x4]
64005e14:	cmp    DWORD PTR [eax+0x4],edi
64005e17:	jne    0x64005e1e
64005e19:	mov    DWORD PTR [eax+0x4],ebx
64005e1c:	jmp    0x64005e29
64005e1e:	cmp    DWORD PTR [esi],edi
64005e20:	jne    0x64005e26
64005e22:	mov    DWORD PTR [esi],ebx
64005e24:	jmp    0x64005e29
64005e26:	mov    DWORD PTR [esi+0x8],ebx
64005e29:	mov    eax,DWORD PTR [ecx+0x4]
64005e2c:	cmp    DWORD PTR [eax],edi
64005e2e:	jne    0x64005e4c
64005e30:	cmp    BYTE PTR [ebx+0x45],0x0
64005e34:	je     0x64005e3a
64005e36:	mov    eax,esi
64005e38:	jmp    0x64005e47
64005e3a:	push   ebx
64005e3b:	call   0x640067d0
64005e40:	mov    ecx,DWORD PTR [esp+0x18]
64005e44:	add    esp,0x4
64005e47:	mov    edx,DWORD PTR [ecx+0x4]
64005e4a:	mov    DWORD PTR [edx],eax
64005e4c:	mov    eax,DWORD PTR [ecx+0x4]
64005e4f:	cmp    DWORD PTR [eax+0x8],edi
64005e52:	jne    0x64005edc
64005e58:	cmp    BYTE PTR [ebx+0x45],0x0
64005e5c:	je     0x64005e68
64005e5e:	mov    edx,DWORD PTR [ecx+0x4]
64005e61:	mov    eax,esi
64005e63:	mov    DWORD PTR [edx+0x8],eax
64005e66:	jmp    0x64005edc
64005e68:	push   ebx
64005e69:	call   0x640067b0
64005e6e:	mov    ecx,DWORD PTR [esp+0x18]
64005e72:	mov    edx,DWORD PTR [ecx+0x4]
64005e75:	add    esp,0x4
64005e78:	mov    DWORD PTR [edx+0x8],eax
64005e7b:	jmp    0x64005edc
64005e7d:	mov    DWORD PTR [ecx+0x4],eax
64005e80:	mov    ecx,DWORD PTR [edi]
64005e82:	mov    DWORD PTR [eax],ecx
64005e84:	cmp    eax,DWORD PTR [edi+0x8]
64005e87:	jne    0x64005e8d
64005e89:	mov    esi,eax
64005e8b:	jmp    0x64005ea7
64005e8d:	cmp    BYTE PTR [ebx+0x45],0x0
64005e91:	mov    esi,DWORD PTR [eax+0x4]
64005e94:	jne    0x64005e99
64005e96:	mov    DWORD PTR [ebx+0x4],esi
64005e99:	mov    DWORD PTR [esi],ebx
64005e9b:	mov    edx,DWORD PTR [edi+0x8]
64005e9e:	mov    DWORD PTR [eax+0x8],edx
64005ea1:	mov    ecx,DWORD PTR [edi+0x8]
64005ea4:	mov    DWORD PTR [ecx+0x4],eax
64005ea7:	mov    edx,DWORD PTR [esp+0x14]
64005eab:	mov    ecx,DWORD PTR [edx+0x4]
64005eae:	cmp    DWORD PTR [ecx+0x4],edi
64005eb1:	jne    0x64005eb8
64005eb3:	mov    DWORD PTR [ecx+0x4],eax
64005eb6:	jmp    0x64005ec6
64005eb8:	mov    ecx,DWORD PTR [edi+0x4]
64005ebb:	cmp    DWORD PTR [ecx],edi
64005ebd:	jne    0x64005ec3
64005ebf:	mov    DWORD PTR [ecx],eax
64005ec1:	jmp    0x64005ec6
64005ec3:	mov    DWORD PTR [ecx+0x8],eax
64005ec6:	mov    ecx,DWORD PTR [edi+0x4]
64005ec9:	mov    DWORD PTR [eax+0x4],ecx
64005ecc:	mov    cl,BYTE PTR [eax+0x44]
64005ecf:	mov    dl,BYTE PTR [edi+0x44]
64005ed2:	mov    BYTE PTR [eax+0x44],dl
64005ed5:	mov    BYTE PTR [edi+0x44],cl
64005ed8:	mov    ecx,DWORD PTR [esp+0x14]
64005edc:	cmp    BYTE PTR [edi+0x44],0x1
64005ee0:	jne    0x64005ff1
64005ee6:	mov    eax,DWORD PTR [ecx+0x4]
64005ee9:	cmp    ebx,DWORD PTR [eax+0x4]
64005eec:	je     0x64005fed
64005ef2:	cmp    BYTE PTR [ebx+0x44],0x1
64005ef6:	jne    0x64005fed
64005efc:	mov    eax,DWORD PTR [esi]
64005efe:	cmp    ebx,eax
64005f00:	jne    0x64005f70
64005f02:	mov    eax,DWORD PTR [esi+0x8]
64005f05:	cmp    BYTE PTR [eax+0x44],0x0
64005f09:	jne    0x64005f20
64005f0b:	mov    BYTE PTR [eax+0x44],0x1
64005f0f:	push   esi
64005f10:	mov    BYTE PTR [esi+0x44],0x0
64005f14:	call   0x640057f0
64005f19:	mov    eax,DWORD PTR [esi+0x8]
64005f1c:	mov    ecx,DWORD PTR [esp+0x14]
64005f20:	cmp    BYTE PTR [eax+0x45],0x0
64005f24:	jne    0x64005fa5
64005f26:	mov    edx,DWORD PTR [eax]
64005f28:	cmp    BYTE PTR [edx+0x44],0x1
64005f2c:	jne    0x64005f37
64005f2e:	mov    edx,DWORD PTR [eax+0x8]
64005f31:	cmp    BYTE PTR [edx+0x44],0x1
64005f35:	je     0x64005fa1
64005f37:	mov    edx,DWORD PTR [eax+0x8]
64005f3a:	cmp    BYTE PTR [edx+0x44],0x1
64005f3e:	jne    0x64005f57
64005f40:	mov    edx,DWORD PTR [eax]
64005f42:	mov    BYTE PTR [edx+0x44],0x1
64005f46:	push   eax
64005f47:	mov    BYTE PTR [eax+0x44],0x0
64005f4b:	call   0x64005840
64005f50:	mov    eax,DWORD PTR [esi+0x8]
64005f53:	mov    ecx,DWORD PTR [esp+0x14]
64005f57:	mov    dl,BYTE PTR [esi+0x44]
64005f5a:	mov    BYTE PTR [eax+0x44],dl
64005f5d:	mov    BYTE PTR [esi+0x44],0x1
64005f61:	mov    eax,DWORD PTR [eax+0x8]
64005f64:	push   esi
64005f65:	mov    BYTE PTR [eax+0x44],0x1
64005f69:	call   0x640057f0
64005f6e:	jmp    0x64005fed
64005f70:	cmp    BYTE PTR [eax+0x44],0x0
64005f74:	jne    0x64005f8a
64005f76:	mov    BYTE PTR [eax+0x44],0x1
64005f7a:	push   esi
64005f7b:	mov    BYTE PTR [esi+0x44],0x0
64005f7f:	call   0x64005840
64005f84:	mov    eax,DWORD PTR [esi]
64005f86:	mov    ecx,DWORD PTR [esp+0x14]
64005f8a:	cmp    BYTE PTR [eax+0x45],0x0
64005f8e:	jne    0x64005fa5
64005f90:	mov    edx,DWORD PTR [eax+0x8]
64005f93:	cmp    BYTE PTR [edx+0x44],0x1
64005f97:	jne    0x64005fb8
64005f99:	mov    edx,DWORD PTR [eax]
64005f9b:	cmp    BYTE PTR [edx+0x44],0x1
64005f9f:	jne    0x64005fb8
64005fa1:	mov    BYTE PTR [eax+0x44],0x0
64005fa5:	mov    eax,DWORD PTR [ecx+0x4]
64005fa8:	mov    ebx,esi
64005faa:	cmp    ebx,DWORD PTR [eax+0x4]
64005fad:	mov    esi,DWORD PTR [esi+0x4]
64005fb0:	jne    0x64005ef2
64005fb6:	jmp    0x64005fed
64005fb8:	mov    edx,DWORD PTR [eax]
64005fba:	cmp    BYTE PTR [edx+0x44],0x1
64005fbe:	jne    0x64005fd7
64005fc0:	mov    edx,DWORD PTR [eax+0x8]
64005fc3:	mov    BYTE PTR [edx+0x44],0x1
64005fc7:	push   eax
64005fc8:	mov    BYTE PTR [eax+0x44],0x0
64005fcc:	call   0x640057f0
64005fd1:	mov    eax,DWORD PTR [esi]
64005fd3:	mov    ecx,DWORD PTR [esp+0x14]
64005fd7:	mov    dl,BYTE PTR [esi+0x44]
64005fda:	mov    BYTE PTR [eax+0x44],dl
64005fdd:	mov    BYTE PTR [esi+0x44],0x1
64005fe1:	mov    eax,DWORD PTR [eax]
64005fe3:	push   esi
64005fe4:	mov    BYTE PTR [eax+0x44],0x1
64005fe8:	call   0x64005840
64005fed:	mov    BYTE PTR [ebx+0x44],0x1
64005ff1:	cmp    DWORD PTR [edi+0x40],0x10
64005ff5:	jb     0x64006003
64005ff7:	mov    ecx,DWORD PTR [edi+0x2c]
64005ffa:	push   ecx
64005ffb:	call   0x64013644
64006000:	add    esp,0x4
64006003:	xor    esi,esi
64006005:	mov    ebx,0xf
6400600a:	mov    DWORD PTR [edi+0x40],ebx
6400600d:	mov    DWORD PTR [edi+0x3c],esi
64006010:	mov    BYTE PTR [edi+0x2c],0x0
64006014:	cmp    DWORD PTR [edi+0x24],0x10
64006018:	jb     0x64006026
6400601a:	mov    edx,DWORD PTR [edi+0x10]
6400601d:	push   edx
6400601e:	call   0x64013644
64006023:	add    esp,0x4
64006026:	mov    DWORD PTR [edi+0x24],ebx
64006029:	mov    DWORD PTR [edi+0x20],esi
6400602c:	push   edi
6400602d:	mov    BYTE PTR [edi+0x10],0x0
64006031:	call   0x64013644
64006036:	mov    ecx,DWORD PTR [esp+0x18]
6400603a:	mov    eax,DWORD PTR [ecx+0x8]
6400603d:	add    esp,0x4
64006040:	cmp    eax,esi
64006042:	jbe    0x6400604a
64006044:	add    eax,0xffffffff
64006047:	mov    DWORD PTR [ecx+0x8],eax
6400604a:	mov    eax,DWORD PTR [ebp+0x8]
6400604d:	mov    ecx,DWORD PTR [ebp+0xc]
64006050:	mov    edx,DWORD PTR [ebp+0x10]
64006053:	mov    DWORD PTR [eax],ecx
64006055:	mov    DWORD PTR [eax+0x4],edx
64006058:	mov    ecx,DWORD PTR [esp+0x60]
6400605c:	mov    DWORD PTR fs:0x0,ecx
64006063:	pop    ecx
64006064:	pop    edi
64006065:	pop    esi
64006066:	pop    ebx
64006067:	mov    esp,ebp
64006069:	pop    ebp
6400606a:	ret    0xc
6400606d:	int3   
6400606e:	int3   
6400606f:	int3   
64006070:	push   esi
64006071:	mov    esi,ecx
64006073:	cmp    DWORD PTR [esi],0x0
64006076:	jne    0x6400607d
64006078:	call   0x64013e76
6400607d:	mov    eax,DWORD PTR [esi+0x4]
64006080:	cmp    BYTE PTR [eax+0x45],0x0
64006084:	je     0x64006098
64006086:	mov    eax,DWORD PTR [eax+0x8]
64006089:	mov    DWORD PTR [esi+0x4],eax
6400608c:	cmp    BYTE PTR [eax+0x45],0x0
64006090:	je     0x640060f7
64006092:	pop    esi
64006093:	jmp    0x64013e76
64006098:	mov    ecx,DWORD PTR [eax]
6400609a:	cmp    BYTE PTR [ecx+0x45],0x0
6400609e:	jne    0x640060c0
640060a0:	mov    eax,DWORD PTR [ecx+0x8]
640060a3:	cmp    BYTE PTR [eax+0x45],0x0
640060a7:	jne    0x640060bb
640060a9:	lea    esp,[esp+0x0]
640060b0:	mov    ecx,eax
640060b2:	mov    eax,DWORD PTR [ecx+0x8]
640060b5:	cmp    BYTE PTR [eax+0x45],0x0
640060b9:	je     0x640060b0
640060bb:	mov    DWORD PTR [esi+0x4],ecx
640060be:	pop    esi
640060bf:	ret    
640060c0:	mov    eax,DWORD PTR [eax+0x4]
640060c3:	cmp    BYTE PTR [eax+0x45],0x0
640060c7:	jne    0x640060e5
640060c9:	lea    esp,[esp+0x0]
640060d0:	mov    ecx,DWORD PTR [esi+0x4]
640060d3:	cmp    ecx,DWORD PTR [eax]
640060d5:	jne    0x640060e5
640060d7:	mov    DWORD PTR [esi+0x4],eax
640060da:	mov    edx,eax
640060dc:	mov    eax,DWORD PTR [edx+0x4]
640060df:	cmp    BYTE PTR [eax+0x45],0x0
640060e3:	je     0x640060d0
640060e5:	mov    ecx,DWORD PTR [esi+0x4]
640060e8:	cmp    BYTE PTR [ecx+0x45],0x0
640060ec:	je     0x640060f4
640060ee:	pop    esi
640060ef:	jmp    0x64013e76
640060f4:	mov    DWORD PTR [esi+0x4],eax
640060f7:	pop    esi
640060f8:	ret    
640060f9:	int3   
640060fa:	int3   
640060fb:	int3   
640060fc:	int3   
640060fd:	int3   
640060fe:	int3   
640060ff:	int3   
64006100:	push   esi
64006101:	mov    esi,ecx
64006103:	cmp    DWORD PTR [esi],0x0
64006106:	jne    0x6400610d
64006108:	call   0x64013e76
6400610d:	mov    eax,DWORD PTR [esi+0x4]
64006110:	cmp    BYTE PTR [eax+0x45],0x0
64006114:	je     0x6400611c
64006116:	pop    esi
64006117:	jmp    0x64013e76
6400611c:	mov    ecx,DWORD PTR [eax+0x8]
6400611f:	cmp    BYTE PTR [ecx+0x45],0x0
64006123:	jne    0x6400613f
64006125:	mov    eax,DWORD PTR [ecx]
64006127:	cmp    BYTE PTR [eax+0x45],0x0
6400612b:	jne    0x6400613a
6400612d:	lea    ecx,[ecx+0x0]
64006130:	mov    ecx,eax
64006132:	mov    eax,DWORD PTR [ecx]
64006134:	cmp    BYTE PTR [eax+0x45],0x0
64006138:	je     0x64006130
6400613a:	mov    DWORD PTR [esi+0x4],ecx
6400613d:	pop    esi
6400613e:	ret    
6400613f:	mov    eax,DWORD PTR [eax+0x4]
64006142:	cmp    BYTE PTR [eax+0x45],0x0
64006146:	jne    0x6400615e
64006148:	mov    ecx,DWORD PTR [esi+0x4]
6400614b:	cmp    ecx,DWORD PTR [eax+0x8]
6400614e:	jne    0x6400615e
64006150:	mov    DWORD PTR [esi+0x4],eax
64006153:	mov    edx,eax
64006155:	mov    eax,DWORD PTR [edx+0x4]
64006158:	cmp    BYTE PTR [eax+0x45],0x0
6400615c:	je     0x64006148
6400615e:	mov    DWORD PTR [esi+0x4],eax
64006161:	pop    esi
64006162:	ret    
64006163:	int3   
64006164:	int3   
64006165:	int3   
64006166:	int3   
64006167:	int3   
64006168:	int3   
64006169:	int3   
6400616a:	int3   
6400616b:	int3   
6400616c:	int3   
6400616d:	int3   
6400616e:	int3   
6400616f:	int3   
64006170:	sub    esp,0x10
64006173:	test   ecx,ecx
64006175:	ja     0x64006189
64006177:	xor    ecx,ecx
64006179:	lea    edx,[ecx+ecx*1]
6400617c:	push   edx
6400617d:	call   0x640138d5
64006182:	add    esp,0x4
64006185:	add    esp,0x10
64006188:	ret    
64006189:	or     eax,0xffffffff
6400618c:	xor    edx,edx
6400618e:	div    ecx
64006190:	cmp    eax,0x2
64006193:	jae    0x64006179
64006195:	lea    eax,[esp]
64006198:	push   eax
64006199:	lea    ecx,[esp+0x8]
6400619d:	mov    DWORD PTR [esp+0x4],0x0
640061a5:	call   0x6401365a
640061aa:	push   0x6402bd7c
640061af:	lea    ecx,[esp+0x8]
640061b3:	push   ecx
640061b4:	mov    DWORD PTR [esp+0xc],0x640242a4
640061bc:	call   0x64013872
640061c1:	int3   
640061c2:	int3   
640061c3:	int3   
640061c4:	int3   
640061c5:	int3   
640061c6:	int3   
640061c7:	int3   
640061c8:	int3   
640061c9:	int3   
640061ca:	int3   
640061cb:	int3   
640061cc:	int3   
640061cd:	int3   
640061ce:	int3   
640061cf:	int3   
640061d0:	push   0xffffffff
640061d2:	push   0x64023528
640061d7:	mov    eax,fs:0x0
640061dd:	push   eax
640061de:	sub    esp,0x48
640061e1:	push   ebx
640061e2:	push   ebp
640061e3:	push   esi
640061e4:	push   edi
640061e5:	mov    eax,ds:0x64037644
640061ea:	xor    eax,esp
640061ec:	push   eax
640061ed:	lea    eax,[esp+0x5c]
640061f1:	mov    fs:0x0,eax
640061f7:	mov    eax,DWORD PTR [esp+0x74]
640061fb:	cmp    BYTE PTR [eax+0x45],0x0
640061ff:	je     0x6400624d
64006201:	push   0x1b
64006203:	xor    esi,esi
64006205:	push   0x64029908
6400620a:	lea    ecx,[esp+0x1c]
6400620e:	mov    DWORD PTR [esp+0x34],0xf
64006216:	mov    DWORD PTR [esp+0x30],esi
6400621a:	mov    BYTE PTR [esp+0x20],0x0
6400621f:	call   0x64003470
64006224:	lea    eax,[esp+0x14]
64006228:	push   eax
64006229:	lea    ecx,[esp+0x34]
6400622d:	mov    DWORD PTR [esp+0x68],esi
64006231:	call   0x64001310
64006236:	push   0x6402bd08
6400623b:	lea    ecx,[esp+0x34]
6400623f:	push   ecx
64006240:	mov    DWORD PTR [esp+0x38],0x640242ec
64006248:	call   0x64013872
6400624d:	lea    esi,[esp+0x70]
64006251:	mov    ebp,eax
64006253:	call   0x640065c0
64006258:	mov    eax,DWORD PTR [ebp+0x0]
6400625b:	cmp    BYTE PTR [eax+0x45],0x0
6400625f:	je     0x64006266
64006261:	mov    edi,DWORD PTR [ebp+0x8]
64006264:	jmp    0x6400627e
64006266:	mov    edx,DWORD PTR [ebp+0x8]
64006269:	cmp    BYTE PTR [edx+0x45],0x0
6400626d:	je     0x64006273
6400626f:	mov    edi,eax
64006271:	jmp    0x6400627e
64006273:	mov    ecx,DWORD PTR [esp+0x74]
64006277:	cmp    ecx,ebp
64006279:	mov    edi,DWORD PTR [ecx+0x8]
6400627c:	jne    0x640062fd
6400627e:	cmp    BYTE PTR [edi+0x45],0x0
64006282:	mov    esi,DWORD PTR [ebp+0x4]
64006285:	jne    0x6400628a
64006287:	mov    DWORD PTR [edi+0x4],esi
6400628a:	mov    eax,ds:0x64039980
6400628f:	cmp    DWORD PTR [eax+0x4],ebp
64006292:	jne    0x64006299
64006294:	mov    DWORD PTR [eax+0x4],edi
64006297:	jmp    0x640062a4
64006299:	cmp    DWORD PTR [esi],ebp
6400629b:	jne    0x640062a1
6400629d:	mov    DWORD PTR [esi],edi
6400629f:	jmp    0x640062a4
640062a1:	mov    DWORD PTR [esi+0x8],edi
640062a4:	mov    edx,DWORD PTR ds:0x64039980
640062aa:	cmp    DWORD PTR [edx],ebp
640062ac:	jne    0x640062ce
640062ae:	cmp    BYTE PTR [edi+0x45],0x0
640062b2:	je     0x640062b8
640062b4:	mov    ecx,esi
640062b6:	jmp    0x640062cc
640062b8:	mov    eax,DWORD PTR [edi]
640062ba:	cmp    BYTE PTR [eax+0x45],0x0
640062be:	mov    ecx,edi
640062c0:	jne    0x640062cc
640062c2:	mov    ecx,eax
640062c4:	mov    eax,DWORD PTR [ecx]
640062c6:	cmp    BYTE PTR [eax+0x45],0x0
640062ca:	je     0x640062c2
640062cc:	mov    DWORD PTR [edx],ecx
640062ce:	mov    eax,ds:0x64039980
640062d3:	cmp    DWORD PTR [eax+0x8],ebp
640062d6:	jne    0x64006357
640062d8:	cmp    BYTE PTR [edi+0x45],0x0
640062dc:	je     0x640062eb
640062de:	mov    ecx,DWORD PTR ds:0x64039980
640062e4:	mov    eax,esi
640062e6:	mov    DWORD PTR [ecx+0x8],eax
640062e9:	jmp    0x64006357
640062eb:	mov    eax,edi
640062ed:	call   0x64006870
640062f2:	mov    ecx,DWORD PTR ds:0x64039980
640062f8:	mov    DWORD PTR [ecx+0x8],eax
640062fb:	jmp    0x64006357
640062fd:	mov    DWORD PTR [eax+0x4],ecx
64006300:	mov    edx,DWORD PTR [ebp+0x0]
64006303:	mov    DWORD PTR [ecx],edx
64006305:	cmp    ecx,DWORD PTR [ebp+0x8]
64006308:	jne    0x6400630e
6400630a:	mov    esi,ecx
6400630c:	jmp    0x64006328
6400630e:	cmp    BYTE PTR [edi+0x45],0x0
64006312:	mov    esi,DWORD PTR [ecx+0x4]
64006315:	jne    0x6400631a
64006317:	mov    DWORD PTR [edi+0x4],esi
6400631a:	mov    DWORD PTR [esi],edi
6400631c:	mov    eax,DWORD PTR [ebp+0x8]
6400631f:	mov    DWORD PTR [ecx+0x8],eax
64006322:	mov    edx,DWORD PTR [ebp+0x8]
64006325:	mov    DWORD PTR [edx+0x4],ecx
64006328:	mov    eax,ds:0x64039980
6400632d:	cmp    DWORD PTR [eax+0x4],ebp
64006330:	jne    0x64006337
64006332:	mov    DWORD PTR [eax+0x4],ecx
64006335:	jmp    0x64006345
64006337:	mov    eax,DWORD PTR [ebp+0x4]
6400633a:	cmp    DWORD PTR [eax],ebp
6400633c:	jne    0x64006342
6400633e:	mov    DWORD PTR [eax],ecx
64006340:	jmp    0x64006345
64006342:	mov    DWORD PTR [eax+0x8],ecx
64006345:	mov    eax,DWORD PTR [ebp+0x4]
64006348:	mov    DWORD PTR [ecx+0x4],eax
6400634b:	mov    dl,BYTE PTR [ebp+0x44]
6400634e:	mov    al,BYTE PTR [ecx+0x44]
64006351:	mov    BYTE PTR [ecx+0x44],dl
64006354:	mov    BYTE PTR [ebp+0x44],al
64006357:	mov    ebx,0x1
6400635c:	cmp    BYTE PTR [ebp+0x44],bl
6400635f:	jne    0x6400647c
64006365:	mov    eax,ds:0x64039980
6400636a:	cmp    edi,DWORD PTR [eax+0x4]
6400636d:	je     0x64006479
64006373:	cmp    BYTE PTR [edi+0x44],bl
64006376:	jne    0x64006479
6400637c:	mov    ecx,DWORD PTR [esi]
6400637e:	cmp    edi,ecx
64006380:	jne    0x640063f8
64006382:	mov    ecx,DWORD PTR [esi+0x8]
64006385:	cmp    BYTE PTR [ecx+0x44],0x0
64006389:	jne    0x640063a1
6400638b:	mov    BYTE PTR [ecx+0x44],bl
6400638e:	push   0x6403997c
64006393:	mov    ecx,esi
64006395:	mov    BYTE PTR [esi+0x44],0x0
64006399:	call   0x64005c10
6400639e:	mov    ecx,DWORD PTR [esi+0x8]
640063a1:	cmp    BYTE PTR [ecx+0x45],0x0
640063a5:	jne    0x6400642c
640063ab:	mov    edx,DWORD PTR [ecx]
640063ad:	cmp    BYTE PTR [edx+0x44],bl
640063b0:	jne    0x640063ba
640063b2:	mov    eax,DWORD PTR [ecx+0x8]
640063b5:	cmp    BYTE PTR [eax+0x44],bl
640063b8:	je     0x64006428
640063ba:	mov    edx,DWORD PTR [ecx+0x8]
640063bd:	cmp    BYTE PTR [edx+0x44],bl
640063c0:	jne    0x640063d8
640063c2:	mov    eax,DWORD PTR [ecx]
640063c4:	mov    BYTE PTR [eax+0x44],bl
640063c7:	push   0x6403997c
640063cc:	mov    BYTE PTR [ecx+0x44],0x0
640063d0:	call   0x64005c60
640063d5:	mov    ecx,DWORD PTR [esi+0x8]
640063d8:	mov    dl,BYTE PTR [esi+0x44]
640063db:	mov    BYTE PTR [ecx+0x44],dl
640063de:	mov    BYTE PTR [esi+0x44],bl
640063e1:	mov    eax,DWORD PTR [ecx+0x8]
640063e4:	push   0x6403997c
640063e9:	mov    ecx,esi
640063eb:	mov    BYTE PTR [eax+0x44],bl
640063ee:	call   0x64005c10
640063f3:	jmp    0x64006479
640063f8:	cmp    BYTE PTR [ecx+0x44],0x0
640063fc:	jne    0x64006413
640063fe:	mov    BYTE PTR [ecx+0x44],bl
64006401:	push   0x6403997c
64006406:	mov    ecx,esi
64006408:	mov    BYTE PTR [esi+0x44],0x0
6400640c:	call   0x64005c60
64006411:	mov    ecx,DWORD PTR [esi]
64006413:	cmp    BYTE PTR [ecx+0x45],0x0
64006417:	jne    0x6400642c
64006419:	mov    edx,DWORD PTR [ecx+0x8]
6400641c:	cmp    BYTE PTR [edx+0x44],bl
6400641f:	jne    0x64006442
64006421:	mov    eax,DWORD PTR [ecx]
64006423:	cmp    BYTE PTR [eax+0x44],bl
64006426:	jne    0x64006442
64006428:	mov    BYTE PTR [ecx+0x44],0x0
6400642c:	mov    ecx,DWORD PTR ds:0x64039980
64006432:	mov    edi,esi
64006434:	cmp    edi,DWORD PTR [ecx+0x4]
64006437:	mov    esi,DWORD PTR [esi+0x4]
6400643a:	jne    0x64006373
64006440:	jmp    0x64006479
64006442:	mov    edx,DWORD PTR [ecx]
64006444:	cmp    BYTE PTR [edx+0x44],bl
64006447:	jne    0x6400645f
64006449:	mov    eax,DWORD PTR [ecx+0x8]
6400644c:	mov    BYTE PTR [eax+0x44],bl
6400644f:	push   0x6403997c
64006454:	mov    BYTE PTR [ecx+0x44],0x0
64006458:	call   0x64005c10
6400645d:	mov    ecx,DWORD PTR [esi]
6400645f:	mov    dl,BYTE PTR [esi+0x44]
64006462:	mov    BYTE PTR [ecx+0x44],dl
64006465:	mov    BYTE PTR [esi+0x44],bl
64006468:	mov    eax,DWORD PTR [ecx]
6400646a:	push   0x6403997c
6400646f:	mov    ecx,esi
64006471:	mov    BYTE PTR [eax+0x44],bl
64006474:	call   0x64005c60
64006479:	mov    BYTE PTR [edi+0x44],bl
6400647c:	mov    edi,0x8
64006481:	cmp    DWORD PTR [ebp+0x40],edi
64006484:	jb     0x64006492
64006486:	mov    ecx,DWORD PTR [ebp+0x2c]
64006489:	push   ecx
6400648a:	call   0x64013644
6400648f:	add    esp,0x4
64006492:	xor    eax,eax
64006494:	mov    esi,0x7
64006499:	mov    DWORD PTR [ebp+0x40],esi
6400649c:	mov    DWORD PTR [ebp+0x3c],eax
6400649f:	mov    WORD PTR [ebp+0x2c],ax
640064a3:	cmp    DWORD PTR [ebp+0x24],edi
640064a6:	jb     0x640064b6
640064a8:	mov    edx,DWORD PTR [ebp+0x10]
640064ab:	push   edx
640064ac:	call   0x64013644
640064b1:	add    esp,0x4
640064b4:	xor    eax,eax
640064b6:	mov    DWORD PTR [ebp+0x24],esi
640064b9:	mov    DWORD PTR [ebp+0x20],eax
640064bc:	push   ebp
640064bd:	mov    WORD PTR [ebp+0x10],ax
640064c1:	call   0x64013644
640064c6:	add    esp,0x4
640064c9:	cmp    DWORD PTR ds:0x64039984,0x0
640064d0:	jbe    0x640064d8
640064d2:	sub    DWORD PTR ds:0x64039984,ebx
640064d8:	mov    eax,DWORD PTR [esp+0x6c]
640064dc:	mov    ecx,DWORD PTR [esp+0x70]
640064e0:	mov    edx,DWORD PTR [esp+0x74]
640064e4:	mov    DWORD PTR [eax],ecx
640064e6:	mov    DWORD PTR [eax+0x4],edx
640064e9:	mov    ecx,DWORD PTR [esp+0x5c]
640064ed:	mov    DWORD PTR fs:0x0,ecx
640064f4:	pop    ecx
640064f5:	pop    edi
640064f6:	pop    esi
640064f7:	pop    ebp
640064f8:	pop    ebx
640064f9:	add    esp,0x54
640064fc:	ret    0xc
640064ff:	int3   
64006500:	push   0x48
64006502:	call   0x640138d5
64006507:	add    esp,0x4
6400650a:	test   eax,eax
6400650c:	je     0x64006514
6400650e:	mov    DWORD PTR [eax],0x0
64006514:	lea    ecx,[eax+0x4]
64006517:	test   ecx,ecx
64006519:	je     0x64006521
6400651b:	mov    DWORD PTR [ecx],0x0
64006521:	lea    ecx,[eax+0x8]
64006524:	test   ecx,ecx
64006526:	je     0x6400652e
64006528:	mov    DWORD PTR [ecx],0x0
6400652e:	mov    BYTE PTR [eax+0x44],0x1
64006532:	mov    BYTE PTR [eax+0x45],0x0
64006536:	ret    
64006537:	int3   
64006538:	int3   
64006539:	int3   
6400653a:	int3   
6400653b:	int3   
6400653c:	int3   
6400653d:	int3   
6400653e:	int3   
6400653f:	int3   
64006540:	cmp    DWORD PTR [esi],0x0
64006543:	jne    0x6400654a
64006545:	call   0x64013e76
6400654a:	mov    eax,DWORD PTR [esi+0x4]
6400654d:	cmp    BYTE PTR [eax+0x45],0x0
64006551:	je     0x64006564
64006553:	mov    eax,DWORD PTR [eax+0x8]
64006556:	mov    DWORD PTR [esi+0x4],eax
64006559:	cmp    BYTE PTR [eax+0x45],0x0
6400655d:	je     0x640065b6
6400655f:	jmp    0x64013e76
64006564:	mov    ecx,DWORD PTR [eax]
64006566:	cmp    BYTE PTR [ecx+0x45],0x0
6400656a:	jne    0x64006584
6400656c:	mov    eax,DWORD PTR [ecx+0x8]
6400656f:	cmp    BYTE PTR [eax+0x45],0x0
64006573:	jne    0x64006580
64006575:	mov    ecx,eax
64006577:	mov    eax,DWORD PTR [ecx+0x8]
6400657a:	cmp    BYTE PTR [eax+0x45],0x0
6400657e:	je     0x64006575
64006580:	mov    DWORD PTR [esi+0x4],ecx
64006583:	ret    
64006584:	mov    eax,DWORD PTR [eax+0x4]
64006587:	cmp    BYTE PTR [eax+0x45],0x0
6400658b:	jne    0x640065a5
6400658d:	lea    ecx,[ecx+0x0]
64006590:	mov    ecx,DWORD PTR [esi+0x4]
64006593:	cmp    ecx,DWORD PTR [eax]
64006595:	jne    0x640065a5
64006597:	mov    DWORD PTR [esi+0x4],eax
6400659a:	mov    edx,eax
6400659c:	mov    eax,DWORD PTR [edx+0x4]
6400659f:	cmp    BYTE PTR [eax+0x45],0x0
640065a3:	je     0x64006590
640065a5:	mov    ecx,DWORD PTR [esi+0x4]
640065a8:	cmp    BYTE PTR [ecx+0x45],0x0
640065ac:	je     0x640065b3
640065ae:	jmp    0x64013e76
640065b3:	mov    DWORD PTR [esi+0x4],eax
640065b6:	ret    
640065b7:	int3   
640065b8:	int3   
640065b9:	int3   
640065ba:	int3   
640065bb:	int3   
640065bc:	int3   
640065bd:	int3   
640065be:	int3   
640065bf:	int3   
640065c0:	cmp    DWORD PTR [esi],0x0
640065c3:	jne    0x640065ca
640065c5:	call   0x64013e76
640065ca:	mov    eax,DWORD PTR [esi+0x4]
640065cd:	cmp    BYTE PTR [eax+0x45],0x0
640065d1:	je     0x640065d8
640065d3:	jmp    0x64013e76
640065d8:	mov    ecx,DWORD PTR [eax+0x8]
640065db:	cmp    BYTE PTR [ecx+0x45],0x0
640065df:	jne    0x640065fe
640065e1:	mov    eax,DWORD PTR [ecx]
640065e3:	cmp    BYTE PTR [eax+0x45],0x0
640065e7:	jne    0x640065fa
640065e9:	lea    esp,[esp+0x0]
640065f0:	mov    ecx,eax
640065f2:	mov    eax,DWORD PTR [ecx]
640065f4:	cmp    BYTE PTR [eax+0x45],0x0
640065f8:	je     0x640065f0
640065fa:	mov    DWORD PTR [esi+0x4],ecx
640065fd:	ret    
640065fe:	mov    eax,DWORD PTR [eax+0x4]
64006601:	cmp    BYTE PTR [eax+0x45],0x0
64006605:	jne    0x6400661d
64006607:	mov    ecx,DWORD PTR [esi+0x4]
6400660a:	cmp    ecx,DWORD PTR [eax+0x8]
6400660d:	jne    0x6400661d
6400660f:	mov    DWORD PTR [esi+0x4],eax
64006612:	mov    edx,eax
64006614:	mov    eax,DWORD PTR [edx+0x4]
64006617:	cmp    BYTE PTR [eax+0x45],0x0
6400661b:	je     0x64006607
6400661d:	mov    DWORD PTR [esi+0x4],eax
64006620:	ret    
64006621:	int3   
64006622:	int3   
64006623:	int3   
64006624:	int3   
64006625:	int3   
64006626:	int3   
64006627:	int3   
64006628:	int3   
64006629:	int3   
6400662a:	int3   
6400662b:	int3   
6400662c:	int3   
6400662d:	int3   
6400662e:	int3   
6400662f:	int3   
64006630:	push   0xffffffff
64006632:	push   0x64023198
64006637:	mov    eax,fs:0x0
6400663d:	push   eax
6400663e:	push   ecx
6400663f:	push   ebx
64006640:	push   esi
64006641:	push   edi
64006642:	mov    eax,ds:0x64037644
64006647:	xor    eax,esp
64006649:	push   eax
6400664a:	lea    eax,[esp+0x14]
6400664e:	mov    fs:0x0,eax
64006654:	mov    esi,ecx
64006656:	mov    DWORD PTR [esp+0x10],esi
6400665a:	mov    edi,DWORD PTR [esp+0x24]
6400665e:	xor    ebx,ebx
64006660:	push   0xffffffff
64006662:	push   ebx
64006663:	mov    DWORD PTR [esi+0x18],0xf
6400666a:	mov    DWORD PTR [esi+0x14],ebx
6400666d:	push   edi
6400666e:	mov    BYTE PTR [esi+0x4],bl
64006671:	call   0x64003390
64006676:	push   0xffffffff
64006678:	lea    ecx,[esi+0x1c]
6400667b:	mov    DWORD PTR [esp+0x20],ebx
6400667f:	lea    eax,[edi+0x1c]
64006682:	push   ebx
64006683:	mov    DWORD PTR [ecx+0x18],0xf
6400668a:	mov    DWORD PTR [ecx+0x14],ebx
6400668d:	push   eax
6400668e:	mov    BYTE PTR [ecx+0x4],bl
64006691:	call   0x64003390
64006696:	mov    eax,esi
64006698:	mov    ecx,DWORD PTR [esp+0x14]
6400669c:	mov    DWORD PTR fs:0x0,ecx
640066a3:	pop    ecx
640066a4:	pop    edi
640066a5:	pop    esi
640066a6:	pop    ebx
640066a7:	add    esp,0x10
640066aa:	ret    0x4
640066ad:	int3   
640066ae:	int3   
640066af:	int3   
640066b0:	push   0xffffffff
640066b2:	push   0x64023168
640066b7:	mov    eax,fs:0x0
640066bd:	push   eax
640066be:	push   esi
640066bf:	push   edi
640066c0:	mov    eax,ds:0x64037644
640066c5:	xor    eax,esp
640066c7:	push   eax
640066c8:	lea    eax,[esp+0xc]
640066cc:	mov    fs:0x0,eax
640066d2:	mov    esi,DWORD PTR [esp+0x1c]
640066d6:	xor    edi,edi
640066d8:	push   0xffffffff
640066da:	mov    DWORD PTR [esi+0x18],0x7
640066e1:	mov    DWORD PTR [esi+0x14],edi
640066e4:	push   edi
640066e5:	mov    eax,ebx
640066e7:	mov    ecx,esi
640066e9:	mov    WORD PTR [esi+0x4],di
640066ed:	call   0x64004770
640066f2:	lea    ecx,[esi+0x1c]
640066f5:	mov    DWORD PTR [esp+0x14],edi
640066f9:	push   0xffffffff
640066fb:	mov    DWORD PTR [ecx+0x18],0x7
64006702:	mov    DWORD PTR [ecx+0x14],edi
64006705:	lea    eax,[ebx+0x1c]
64006708:	push   edi
64006709:	mov    WORD PTR [ecx+0x4],di
6400670d:	call   0x64004770
64006712:	mov    eax,esi
64006714:	mov    ecx,DWORD PTR [esp+0xc]
64006718:	mov    DWORD PTR fs:0x0,ecx
6400671f:	pop    ecx
64006720:	pop    edi
64006721:	pop    esi
64006722:	add    esp,0xc
64006725:	ret    0x4
64006728:	int3   
64006729:	int3   
6400672a:	int3   
6400672b:	int3   
6400672c:	int3   
6400672d:	int3   
6400672e:	int3   
6400672f:	int3   
64006730:	push   ecx
64006731:	push   ebx
64006732:	push   esi
64006733:	mov    esi,DWORD PTR [esp+0x10]
64006737:	xor    ebx,ebx
64006739:	cmp    BYTE PTR [esi+0x45],bl
6400673c:	push   edi
6400673d:	mov    DWORD PTR [esp+0xc],ecx
64006741:	mov    edi,esi
64006743:	jne    0x640067a6
64006745:	push   ebp
64006746:	lea    ebp,[ebx+0xf]
64006749:	lea    esp,[esp+0x0]
64006750:	mov    eax,DWORD PTR [edi+0x8]
64006753:	mov    ecx,DWORD PTR [esp+0x10]
64006757:	push   eax
64006758:	call   0x64006730
6400675d:	cmp    DWORD PTR [esi+0x40],0x10
64006761:	mov    edi,DWORD PTR [edi]
64006763:	jb     0x64006771
64006765:	mov    ecx,DWORD PTR [esi+0x2c]
64006768:	push   ecx
64006769:	call   0x64013644
6400676e:	add    esp,0x4
64006771:	mov    DWORD PTR [esi+0x40],ebp
64006774:	mov    DWORD PTR [esi+0x3c],ebx
64006777:	mov    BYTE PTR [esi+0x2c],bl
6400677a:	cmp    DWORD PTR [esi+0x24],0x10
6400677e:	jb     0x6400678c
64006780:	mov    edx,DWORD PTR [esi+0x10]
64006783:	push   edx
64006784:	call   0x64013644
64006789:	add    esp,0x4
6400678c:	mov    DWORD PTR [esi+0x24],ebp
6400678f:	mov    DWORD PTR [esi+0x20],ebx
64006792:	push   esi
64006793:	mov    BYTE PTR [esi+0x10],bl
64006796:	call   0x64013644
6400679b:	add    esp,0x4
6400679e:	cmp    BYTE PTR [edi+0x45],bl
640067a1:	mov    esi,edi
640067a3:	je     0x64006750
640067a5:	pop    ebp
640067a6:	pop    edi
640067a7:	pop    esi
640067a8:	pop    ebx
640067a9:	pop    ecx
640067aa:	ret    0x4
640067ad:	int3   
640067ae:	int3   
640067af:	int3   
640067b0:	mov    eax,DWORD PTR [esp+0x4]
640067b4:	mov    ecx,DWORD PTR [eax+0x8]
640067b7:	cmp    BYTE PTR [ecx+0x45],0x0
640067bb:	jne    0x640067cb
640067bd:	lea    ecx,[ecx+0x0]
640067c0:	mov    eax,ecx
640067c2:	mov    ecx,DWORD PTR [eax+0x8]
640067c5:	cmp    BYTE PTR [ecx+0x45],0x0
640067c9:	je     0x640067c0
640067cb:	ret    
640067cc:	int3   
640067cd:	int3   
640067ce:	int3   
640067cf:	int3   
640067d0:	mov    eax,DWORD PTR [esp+0x4]
640067d4:	mov    ecx,DWORD PTR [eax]
640067d6:	cmp    BYTE PTR [ecx+0x45],0x0
640067da:	jne    0x640067ea
640067dc:	lea    esp,[esp+0x0]
640067e0:	mov    eax,ecx
640067e2:	mov    ecx,DWORD PTR [eax]
640067e4:	cmp    BYTE PTR [ecx+0x45],0x0
640067e8:	je     0x640067e0
640067ea:	ret    
640067eb:	int3   
640067ec:	int3   
640067ed:	int3   
640067ee:	int3   
640067ef:	int3   
640067f0:	push   ecx
640067f1:	push   ebx
640067f2:	push   esi
640067f3:	mov    esi,DWORD PTR [esp+0x10]
640067f7:	xor    ebx,ebx
640067f9:	cmp    BYTE PTR [esi+0x45],bl
640067fc:	push   edi
640067fd:	mov    DWORD PTR [esp+0xc],ecx
64006801:	mov    edi,esi
64006803:	jne    0x64006868
64006805:	push   ebp
64006806:	lea    ebp,[ebx+0x7]
64006809:	lea    esp,[esp+0x0]
64006810:	mov    eax,DWORD PTR [edi+0x8]
64006813:	mov    ecx,DWORD PTR [esp+0x10]
64006817:	push   eax
64006818:	call   0x640067f0
6400681d:	cmp    DWORD PTR [esi+0x40],0x8
64006821:	mov    edi,DWORD PTR [edi]
64006823:	jb     0x64006831
64006825:	mov    ecx,DWORD PTR [esi+0x2c]
64006828:	push   ecx
64006829:	call   0x64013644
6400682e:	add    esp,0x4
64006831:	mov    DWORD PTR [esi+0x40],ebp
64006834:	mov    DWORD PTR [esi+0x3c],ebx
64006837:	mov    WORD PTR [esi+0x2c],bx
6400683b:	cmp    DWORD PTR [esi+0x24],0x8
6400683f:	jb     0x6400684d
64006841:	mov    edx,DWORD PTR [esi+0x10]
64006844:	push   edx
64006845:	call   0x64013644
6400684a:	add    esp,0x4
6400684d:	mov    DWORD PTR [esi+0x24],ebp
64006850:	mov    DWORD PTR [esi+0x20],ebx
64006853:	push   esi
64006854:	mov    WORD PTR [esi+0x10],bx
64006858:	call   0x64013644
6400685d:	add    esp,0x4
64006860:	cmp    BYTE PTR [edi+0x45],bl
64006863:	mov    esi,edi
64006865:	je     0x64006810
64006867:	pop    ebp
64006868:	pop    edi
64006869:	pop    esi
6400686a:	pop    ebx
6400686b:	pop    ecx
6400686c:	ret    0x4
6400686f:	int3   
64006870:	mov    ecx,DWORD PTR [eax+0x8]
64006873:	cmp    BYTE PTR [ecx+0x45],0x0
64006877:	jne    0x6400688b
64006879:	lea    esp,[esp+0x0]
64006880:	mov    eax,ecx
64006882:	mov    ecx,DWORD PTR [eax+0x8]
64006885:	cmp    BYTE PTR [ecx+0x45],0x0
64006889:	je     0x64006880
6400688b:	ret    
6400688c:	int3   
6400688d:	int3   
6400688e:	int3   
6400688f:	int3   
64006890:	mov    eax,DWORD PTR [esp+0x8]
64006894:	mov    ecx,DWORD PTR [esp+0xc]
64006898:	or     edx,0xffffffff
6400689b:	sub    edx,eax
6400689d:	cmp    edx,ecx
6400689f:	jae    0x640068a7
640068a1:	mov    eax,0x80070057
640068a6:	ret    
640068a7:	add    eax,ecx
640068a9:	mov    ecx,DWORD PTR [esp+0x4]
640068ad:	mov    DWORD PTR [ecx],eax
640068af:	xor    eax,eax
640068b1:	ret    
640068b2:	int3   
640068b3:	int3   
640068b4:	int3   
640068b5:	int3   
640068b6:	int3   
640068b7:	int3   
640068b8:	int3   
640068b9:	int3   
640068ba:	int3   
640068bb:	int3   
640068bc:	int3   
640068bd:	int3   
640068be:	int3   
640068bf:	int3   
640068c0:	push   0xffffffff
640068c2:	push   0x640233c8
640068c7:	mov    eax,fs:0x0
640068cd:	push   eax
640068ce:	sub    esp,0x20
640068d1:	push   ebx
640068d2:	push   ebp
640068d3:	mov    eax,ds:0x64037644
640068d8:	xor    eax,esp
640068da:	push   eax
640068db:	lea    eax,[esp+0x2c]
640068df:	mov    fs:0x0,eax
640068e5:	mov    eax,DWORD PTR [esp+0x3c]
640068e9:	xor    ebx,ebx
640068eb:	push   0xffffffff
640068ed:	push   ebx
640068ee:	push   eax
640068ef:	lea    ecx,[esp+0x1c]
640068f3:	mov    DWORD PTR [esp+0x18],ebx
640068f7:	mov    DWORD PTR [esp+0x34],0xf
640068ff:	mov    DWORD PTR [esp+0x30],ebx
64006903:	mov    BYTE PTR [esp+0x20],bl
64006907:	call   0x64003390
6400690c:	mov    eax,edi
6400690e:	mov    DWORD PTR [esp+0x34],ebx
64006912:	lea    ebp,[eax+0x1]
64006915:	mov    cl,BYTE PTR [eax]
64006917:	add    eax,0x1
6400691a:	cmp    cl,bl
6400691c:	jne    0x64006915
6400691e:	sub    eax,ebp
64006920:	push   eax
64006921:	push   edi
64006922:	lea    eax,[esp+0x18]
64006926:	call   0x640029c0
6400692b:	push   0xffffffff
6400692d:	push   ebx
6400692e:	mov    DWORD PTR [esi+0x18],0xf
64006935:	mov    DWORD PTR [esi+0x14],ebx
64006938:	push   eax
64006939:	mov    ecx,esi
6400693b:	mov    BYTE PTR [esi+0x4],bl
6400693e:	call   0x64003390
64006943:	cmp    DWORD PTR [esp+0x28],0x10
64006948:	jb     0x64006957
6400694a:	mov    ecx,DWORD PTR [esp+0x14]
6400694e:	push   ecx
6400694f:	call   0x64013644
64006954:	add    esp,0x4
64006957:	mov    eax,esi
64006959:	mov    ecx,DWORD PTR [esp+0x2c]
6400695d:	mov    DWORD PTR fs:0x0,ecx
64006964:	pop    ecx
64006965:	pop    ebp
64006966:	pop    ebx
64006967:	add    esp,0x2c
6400696a:	ret    
6400696b:	int3   
6400696c:	int3   
6400696d:	int3   
6400696e:	int3   
6400696f:	int3   
64006970:	mov    eax,DWORD PTR [esp+0x4]
64006974:	push   esi
64006975:	push   eax
64006976:	mov    esi,ecx
64006978:	call   0x640136c0
6400697d:	mov    DWORD PTR [esi],0x640242a4
64006983:	mov    eax,esi
64006985:	pop    esi
64006986:	ret    0x4
64006989:	int3   
6400698a:	int3   
6400698b:	int3   
6400698c:	int3   
6400698d:	int3   
6400698e:	int3   
6400698f:	int3   
64006990:	push   ebx
64006991:	push   esi
64006992:	mov    esi,eax
64006994:	mov    eax,DWORD PTR [ecx+0x14]
64006997:	cmp    eax,esi
64006999:	jae    0x6400699d
6400699b:	mov    esi,eax
6400699d:	cmp    esi,edi
6400699f:	mov    edx,esi
640069a1:	jb     0x640069a5
640069a3:	mov    edx,edi
640069a5:	cmp    DWORD PTR [ecx+0x18],0x8
640069a9:	jb     0x640069b0
640069ab:	mov    eax,DWORD PTR [ecx+0x4]
640069ae:	jmp    0x640069b3
640069b0:	lea    eax,[ecx+0x4]
640069b3:	test   edx,edx
640069b5:	mov    ecx,DWORD PTR [esp+0xc]
640069b9:	jbe    0x640069e5
640069bb:	jmp    0x640069c0
640069bd:	lea    ecx,[ecx+0x0]
640069c0:	mov    bx,WORD PTR [eax]
640069c3:	cmp    bx,WORD PTR [ecx]
640069c6:	jne    0x640069d5
640069c8:	add    eax,0x2
640069cb:	add    ecx,0x2
640069ce:	sub    edx,0x1
640069d1:	jne    0x640069c0
640069d3:	jmp    0x640069e5
640069d5:	movzx  eax,WORD PTR [eax]
640069d8:	cmp    ax,WORD PTR [ecx]
640069db:	sbb    eax,eax
640069dd:	and    eax,0xfffffffe
640069e0:	add    eax,0x1
640069e3:	jne    0x640069f8
640069e5:	cmp    esi,edi
640069e7:	jae    0x640069f1
640069e9:	pop    esi
640069ea:	or     eax,0xffffffff
640069ed:	pop    ebx
640069ee:	ret    0x4
640069f1:	xor    eax,eax
640069f3:	cmp    esi,edi
640069f5:	setne  al
640069f8:	pop    esi
640069f9:	pop    ebx
640069fa:	ret    0x4
640069fd:	int3   
640069fe:	int3   
640069ff:	int3   
64006a00:	push   ebp
64006a01:	mov    ebp,esp
64006a03:	and    esp,0xfffffff8
64006a06:	push   0xffffffff
64006a08:	push   0x64023c68
64006a0d:	mov    eax,fs:0x0
64006a13:	push   eax
64006a14:	sub    esp,0x14
64006a17:	push   ebx
64006a18:	push   esi
64006a19:	mov    eax,ds:0x64037644
64006a1e:	xor    eax,esp
64006a20:	push   eax
64006a21:	lea    eax,[esp+0x20]
64006a25:	mov    fs:0x0,eax
64006a2b:	mov    eax,DWORD PTR [ebp+0xc]
64006a2e:	push   eax
64006a2f:	lea    ecx,[esp+0x14]
64006a33:	push   0x4
64006a35:	xor    esi,esi
64006a37:	push   ecx
64006a38:	mov    DWORD PTR [esp+0x1c],esi
64006a3c:	call   0x64002100
64006a41:	add    esp,0xc
64006a44:	lea    edx,[esp+0x18]
64006a48:	push   edx
64006a49:	mov    DWORD PTR [esp+0x2c],esi
64006a4d:	call   0x64001c30
64006a52:	add    esp,0x4
64006a55:	lea    ecx,[esp+0x10]
64006a59:	push   ecx
64006a5a:	lea    edx,[esp+0x18]
64006a5e:	push   edx
64006a5f:	mov    ebx,eax
64006a61:	mov    BYTE PTR [esp+0x30],0x1
64006a66:	call   0x64006c10
64006a6b:	mov    esi,eax
64006a6d:	push   0x64029930
64006a72:	push   0x4
64006a74:	mov    ecx,0x640298e8
64006a79:	mov    BYTE PTR [esp+0x38],0x2
64006a7e:	call   0x64003090
64006a83:	push   esi
64006a84:	mov    esi,DWORD PTR [ebp+0x8]
64006a87:	push   esi
64006a88:	mov    ebx,eax
64006a8a:	call   0x64002cd0
64006a8f:	mov    BYTE PTR [esp+0x40],0x1
64006a94:	mov    eax,DWORD PTR [esp+0x2c]
64006a98:	add    eax,0xfffffff0
64006a9b:	add    esp,0x18
64006a9e:	lea    ecx,[eax+0xc]
64006aa1:	or     edx,0xffffffff
64006aa4:	lock xadd DWORD PTR [ecx],edx
64006aa8:	dec    edx
64006aa9:	test   edx,edx
64006aab:	jg     0x64006ab7
64006aad:	mov    ecx,DWORD PTR [eax]
64006aaf:	mov    edx,DWORD PTR [ecx]
64006ab1:	push   eax
64006ab2:	mov    eax,DWORD PTR [edx+0x4]
64006ab5:	call   eax
64006ab7:	mov    BYTE PTR [esp+0x28],0x0
64006abc:	mov    eax,DWORD PTR [esp+0x18]
64006ac0:	add    eax,0xfffffff0
64006ac3:	lea    ecx,[eax+0xc]
64006ac6:	or     edx,0xffffffff
64006ac9:	lock xadd DWORD PTR [ecx],edx
64006acd:	dec    edx
64006ace:	test   edx,edx
64006ad0:	jg     0x64006adc
64006ad2:	mov    ecx,DWORD PTR [eax]
64006ad4:	mov    edx,DWORD PTR [ecx]
64006ad6:	push   eax
64006ad7:	mov    eax,DWORD PTR [edx+0x4]
64006ada:	call   eax
64006adc:	mov    DWORD PTR [esp+0x28],0xffffffff
64006ae4:	mov    eax,DWORD PTR [esp+0x10]
64006ae8:	add    eax,0xfffffff0
64006aeb:	lea    ecx,[eax+0xc]
64006aee:	or     edx,0xffffffff
64006af1:	lock xadd DWORD PTR [ecx],edx
64006af5:	dec    edx
64006af6:	test   edx,edx
64006af8:	jg     0x64006b04
64006afa:	mov    ecx,DWORD PTR [eax]
64006afc:	mov    edx,DWORD PTR [ecx]
64006afe:	push   eax
64006aff:	mov    eax,DWORD PTR [edx+0x4]
64006b02:	call   eax
64006b04:	mov    eax,esi
64006b06:	mov    ecx,DWORD PTR [esp+0x20]
64006b0a:	mov    DWORD PTR fs:0x0,ecx
64006b11:	pop    ecx
64006b12:	pop    esi
64006b13:	pop    ebx
64006b14:	mov    esp,ebp
64006b16:	pop    ebp
64006b17:	ret    
64006b18:	int3   
64006b19:	int3   
64006b1a:	int3   
64006b1b:	int3   
64006b1c:	int3   
64006b1d:	int3   
64006b1e:	int3   
64006b1f:	int3   
64006b20:	push   0xffffffff
64006b22:	push   0x640233a0
64006b27:	mov    eax,fs:0x0
64006b2d:	push   eax
64006b2e:	sub    esp,0xc
64006b31:	push   ebx
64006b32:	push   ebp
64006b33:	push   esi
64006b34:	push   edi
64006b35:	mov    eax,ds:0x64037644
64006b3a:	xor    eax,esp
64006b3c:	push   eax
64006b3d:	lea    eax,[esp+0x20]
64006b41:	mov    fs:0x0,eax
64006b47:	mov    edi,ecx
64006b49:	mov    ebp,DWORD PTR [esp+0x30]
64006b4d:	xor    ebx,ebx
64006b4f:	push   edi
64006b50:	mov    DWORD PTR [esp+0x34],ebx
64006b54:	call   0x64012f9a
64006b59:	mov    esi,eax
64006b5b:	mov    DWORD PTR [esp+0x1c],esi
64006b5f:	mov    eax,DWORD PTR [esp+0x38]
64006b63:	push   edi
64006b64:	push   eax
64006b65:	push   esi
64006b66:	mov    DWORD PTR [esp+0x38],ebx
64006b6a:	call   0x640151e0
64006b6f:	add    esp,0x10
64006b72:	xor    ecx,ecx
64006b74:	xor    edx,edx
64006b76:	cmp    edi,ebx
64006b78:	je     0x64006b99
64006b7a:	mov    eax,DWORD PTR [esp+0x38]
64006b7e:	mov    al,BYTE PTR [edx+eax*1]
64006b81:	xor    BYTE PTR [ecx+esi*1],al
64006b84:	lea    eax,[edx+0x1]
64006b87:	xor    edx,edx
64006b89:	mov    ebx,0x25
64006b8e:	add    ecx,0x1
64006b91:	div    ebx
64006b93:	cmp    ecx,edi
64006b95:	jne    0x64006b7a
64006b97:	xor    ebx,ebx
64006b99:	lea    ecx,[esp+0x14]
64006b9d:	push   ecx
64006b9e:	push   edi
64006b9f:	lea    edx,[esp+0x38]
64006ba3:	push   esi
64006ba4:	push   edx
64006ba5:	call   0x640018b0
64006baa:	mov    ecx,DWORD PTR [eax]
64006bac:	mov    edi,ecx
64006bae:	mov    DWORD PTR [eax],ebx
64006bb0:	mov    DWORD PTR [esp+0x2c],edi
64006bb4:	mov    BYTE PTR [esp+0x38],0x1
64006bb9:	mov    edx,DWORD PTR [esp+0x40]
64006bbd:	push   edx
64006bbe:	call   0x64013644
64006bc3:	mov    eax,DWORD PTR [esp+0x28]
64006bc7:	add    esp,0x14
64006bca:	push   eax
64006bcb:	mov    DWORD PTR [ebp+0x18],0xf
64006bd2:	mov    DWORD PTR [ebp+0x14],ebx
64006bd5:	push   edi
64006bd6:	mov    ecx,ebp
64006bd8:	mov    BYTE PTR [ebp+0x4],bl
64006bdb:	call   0x64003470
64006be0:	push   edi
64006be1:	call   0x64013644
64006be6:	push   esi
64006be7:	call   0x64013644
64006bec:	add    esp,0x8
64006bef:	mov    eax,ebp
64006bf1:	mov    ecx,DWORD PTR [esp+0x20]
64006bf5:	mov    DWORD PTR fs:0x0,ecx
64006bfc:	pop    ecx
64006bfd:	pop    edi
64006bfe:	pop    esi
64006bff:	pop    ebp
64006c00:	pop    ebx
64006c01:	add    esp,0x18
64006c04:	ret    
64006c05:	int3   
64006c06:	int3   
64006c07:	int3   
64006c08:	int3   
64006c09:	int3   
64006c0a:	int3   
64006c0b:	int3   
64006c0c:	int3   
64006c0d:	int3   
64006c0e:	int3   
64006c0f:	int3   
64006c10:	push   0xffffffff
64006c12:	push   0x64023369
64006c17:	mov    eax,fs:0x0
64006c1d:	push   eax
64006c1e:	push   ecx
64006c1f:	push   esi
64006c20:	push   edi
64006c21:	mov    eax,ds:0x64037644
64006c26:	xor    eax,esp
64006c28:	push   eax
64006c29:	lea    eax,[esp+0x10]
64006c2d:	mov    fs:0x0,eax
64006c33:	mov    esi,DWORD PTR [esp+0x20]
64006c37:	xor    edi,edi
64006c39:	mov    DWORD PTR [esp+0x18],edi
64006c3d:	mov    DWORD PTR [esp+0xc],edi
64006c41:	mov    eax,DWORD PTR [ebx]
64006c43:	mov    ecx,DWORD PTR [eax-0x10]
64006c46:	cmp    ecx,edi
64006c48:	je     0x64006c55
64006c4a:	mov    edx,DWORD PTR [ecx]
64006c4c:	mov    eax,DWORD PTR [edx+0x10]
64006c4f:	call   eax
64006c51:	cmp    eax,edi
64006c53:	jne    0x64006c65
64006c55:	mov    edx,DWORD PTR ds:0x64038e64
64006c5b:	mov    eax,DWORD PTR [edx+0x10]
64006c5e:	mov    ecx,0x64038e64
64006c63:	call   eax
64006c65:	xor    ecx,ecx
64006c67:	cmp    eax,edi
64006c69:	setne  cl
64006c6c:	cmp    ecx,edi
64006c6e:	jne    0x64006c7a
64006c70:	push   0x80004005
64006c75:	call   0x64001040
64006c7a:	mov    edx,DWORD PTR [eax]
64006c7c:	mov    ecx,eax
64006c7e:	mov    eax,DWORD PTR [edx+0xc]
64006c81:	call   eax
64006c83:	add    eax,0x10
64006c86:	mov    DWORD PTR [esi],eax
64006c88:	mov    ecx,DWORD PTR [esp+0x24]
64006c8c:	mov    DWORD PTR [esp+0x18],edi
64006c90:	mov    ecx,DWORD PTR [ecx]
64006c92:	mov    edi,DWORD PTR [ecx-0xc]
64006c95:	mov    edx,DWORD PTR [ebx]
64006c97:	mov    eax,DWORD PTR [edx-0xc]
64006c9a:	push   edi
64006c9b:	push   ecx
64006c9c:	push   edx
64006c9d:	push   esi
64006c9e:	mov    DWORD PTR [esp+0x1c],0x1
64006ca6:	call   0x64003790
64006cab:	add    esp,0x10
64006cae:	mov    eax,esi
64006cb0:	mov    ecx,DWORD PTR [esp+0x10]
64006cb4:	mov    DWORD PTR fs:0x0,ecx
64006cbb:	pop    ecx
64006cbc:	pop    edi
64006cbd:	pop    esi
64006cbe:	add    esp,0x10
64006cc1:	ret    
64006cc2:	int3   
64006cc3:	int3   
64006cc4:	int3   
64006cc5:	int3   
64006cc6:	int3   
64006cc7:	int3   
64006cc8:	int3   
64006cc9:	int3   
64006cca:	int3   
64006ccb:	int3   
64006ccc:	int3   
64006ccd:	int3   
64006cce:	int3   
64006ccf:	int3   
64006cd0:	mov    ecx,DWORD PTR [eax]
64006cd2:	push   ecx
64006cd3:	call   0x64013644
64006cd8:	pop    ecx
64006cd9:	ret    
64006cda:	int3   
64006cdb:	int3   
64006cdc:	int3   
64006cdd:	int3   
64006cde:	int3   
64006cdf:	int3   
64006ce0:	push   ebp
64006ce1:	mov    ebp,esp
64006ce3:	and    esp,0xfffffff8
64006ce6:	sub    esp,0x34
64006ce9:	xor    eax,eax
64006ceb:	push   ebx
64006cec:	mov    DWORD PTR [esp+0x24],eax
64006cf0:	mov    DWORD PTR [esp+0x28],eax
64006cf4:	mov    DWORD PTR [esp+0x2c],eax
64006cf8:	mov    DWORD PTR [esp+0x30],eax
64006cfc:	mov    DWORD PTR [esp+0x34],eax
64006d00:	mov    eax,DWORD PTR [ebp+0xc]
64006d03:	push   esi
64006d04:	push   edi
64006d05:	mov    edi,DWORD PTR [ebp+0x8]
64006d08:	add    eax,0xc
64006d0b:	mov    DWORD PTR [esp+0xc],edi
64006d0f:	mov    DWORD PTR [esp+0x18],eax
64006d13:	mov    eax,0x14
64006d18:	lea    ecx,[esp+0x2c]
64006d1c:	mov    edx,edi
64006d1e:	mov    edi,edi
64006d20:	mov    esi,DWORD PTR [edx]
64006d22:	cmp    esi,DWORD PTR [ecx]
64006d24:	jne    0x64006d38
64006d26:	sub    eax,0x4
64006d29:	add    ecx,0x4
64006d2c:	add    edx,0x4
64006d2f:	cmp    eax,0x4
64006d32:	jae    0x64006d20
64006d34:	test   eax,eax
64006d36:	je     0x64006d95
64006d38:	movzx  esi,BYTE PTR [edx]
64006d3b:	movzx  ebx,BYTE PTR [ecx]
64006d3e:	sub    esi,ebx
64006d40:	jne    0x64006d87
64006d42:	sub    eax,0x1
64006d45:	add    ecx,0x1
64006d48:	add    edx,0x1
64006d4b:	test   eax,eax
64006d4d:	je     0x64006d95
64006d4f:	movzx  esi,BYTE PTR [edx]
64006d52:	movzx  ebx,BYTE PTR [ecx]
64006d55:	sub    esi,ebx
64006d57:	jne    0x64006d87
64006d59:	sub    eax,0x1
64006d5c:	add    ecx,0x1
64006d5f:	add    edx,0x1
64006d62:	test   eax,eax
64006d64:	je     0x64006d95
64006d66:	movzx  esi,BYTE PTR [edx]
64006d69:	movzx  ebx,BYTE PTR [ecx]
64006d6c:	sub    esi,ebx
64006d6e:	jne    0x64006d87
64006d70:	sub    eax,0x1
64006d73:	add    ecx,0x1
64006d76:	add    edx,0x1
64006d79:	test   eax,eax
64006d7b:	je     0x64006d95
64006d7d:	movzx  esi,BYTE PTR [edx]
64006d80:	movzx  ecx,BYTE PTR [ecx]
64006d83:	sub    esi,ecx
64006d85:	je     0x64006d95
64006d87:	test   esi,esi
64006d89:	mov    eax,0x1
64006d8e:	jg     0x64006d97
64006d90:	or     eax,0xffffffff
64006d93:	jmp    0x64006d97
64006d95:	xor    eax,eax
64006d97:	test   eax,eax
64006d99:	je     0x64006e7d
64006d9f:	mov    eax,DWORD PTR [ebp+0xc]
64006da2:	sub    eax,DWORD PTR [ebp+0x8]
64006da5:	cdq    
64006da6:	mov    ebx,eax
64006da8:	mov    DWORD PTR [esp+0x24],edx
64006dac:	mov    edx,DWORD PTR [esp+0x18]
64006db0:	mov    eax,DWORD PTR [edx]
64006db2:	lea    esi,[eax+ebx*1+0x64000000]
64006db9:	push   esi
64006dba:	mov    DWORD PTR [esp+0x24],ebx
64006dbe:	call   DWORD PTR ds:0x640240a0
64006dc4:	test   eax,eax
64006dc6:	mov    DWORD PTR [esp+0x1c],eax
64006dca:	jne    0x64006dd7
64006dcc:	push   esi
64006dcd:	call   DWORD PTR ds:0x640240a4
64006dd3:	mov    DWORD PTR [esp+0x1c],eax
64006dd7:	mov    edi,DWORD PTR [edi]
64006dd9:	mov    ecx,DWORD PTR [esp+0xc]
64006ddd:	mov    esi,DWORD PTR [ecx+0x10]
64006de0:	add    edi,0x64000000
64006de6:	add    esi,0x64000000
64006dec:	cmp    DWORD PTR [edi],0x0
64006def:	lea    edx,[ebx+edi*1]
64006df2:	mov    DWORD PTR [esp+0x14],edx
64006df6:	je     0x64006e5e
64006df8:	mov    eax,DWORD PTR [esp+0x14]
64006dfc:	mov    eax,DWORD PTR [eax]
64006dfe:	test   eax,eax
64006e00:	je     0x64006e4e
64006e02:	js     0x64006e4e
64006e04:	mov    edx,DWORD PTR [esp+0x1c]
64006e08:	lea    ecx,[eax+ebx*1+0x64000002]
64006e0f:	push   ecx
64006e10:	push   edx
64006e11:	call   DWORD PTR ds:0x64024094
64006e17:	mov    ebx,eax
64006e19:	xor    eax,eax
64006e1b:	mov    ecx,ebx
64006e1d:	or     ecx,eax
64006e1f:	je     0x64006e74
64006e21:	lea    edx,[esp+0x10]
64006e25:	push   edx
64006e26:	push   0x40
64006e28:	push   0x4
64006e2a:	push   esi
64006e2b:	mov    DWORD PTR [esp+0x20],eax
64006e2f:	call   DWORD PTR ds:0x640399d8
64006e35:	mov    ecx,DWORD PTR [esp+0x10]
64006e39:	lea    eax,[esp+0x10]
64006e3d:	push   eax
64006e3e:	push   ecx
64006e3f:	push   0x4
64006e41:	push   esi
64006e42:	mov    DWORD PTR [esi],ebx
64006e44:	call   DWORD PTR ds:0x640399d8
64006e4a:	mov    ebx,DWORD PTR [esp+0x20]
64006e4e:	add    DWORD PTR [esp+0x14],0x4
64006e53:	add    edi,0x4
64006e56:	add    esi,0x4
64006e59:	cmp    DWORD PTR [edi],0x0
64006e5c:	jne    0x64006df8
64006e5e:	mov    eax,0x14
64006e63:	add    DWORD PTR [esp+0xc],eax
64006e67:	add    DWORD PTR [esp+0x18],eax
64006e6b:	mov    edi,DWORD PTR [esp+0xc]
64006e6f:	jmp    0x64006d13
64006e74:	xor    al,al
64006e76:	pop    edi
64006e77:	pop    esi
64006e78:	pop    ebx
64006e79:	mov    esp,ebp
64006e7b:	pop    ebp
64006e7c:	ret    
64006e7d:	pop    edi
64006e7e:	pop    esi
64006e7f:	mov    al,0x1
64006e81:	pop    ebx
64006e82:	mov    esp,ebp
64006e84:	pop    ebp
64006e85:	ret    
64006e86:	int3   
64006e87:	int3   
64006e88:	int3   
64006e89:	int3   
64006e8a:	int3   
64006e8b:	int3   
64006e8c:	int3   
64006e8d:	int3   
64006e8e:	int3   
64006e8f:	int3   
64006e90:	mov    eax,0x853c
64006e95:	call   0x64017d40
64006e9a:	mov    eax,ds:0x64037644
64006e9f:	xor    eax,esp
64006ea1:	mov    DWORD PTR [esp+0x8538],eax
64006ea8:	push   ebx
64006ea9:	push   esi
64006eaa:	push   edi
64006eab:	mov    edi,DWORD PTR [esp+0x854c]
64006eb2:	push   0x6402a70c
64006eb7:	push   0x6402a71c
64006ebc:	call   DWORD PTR ds:0x640240a0
64006ec2:	push   eax
64006ec3:	call   DWORD PTR ds:0x64024094
64006ec9:	mov    ds:0x640399d8,eax
64006ece:	mov    eax,ds:0x6400003c
64006ed3:	mov    eax,DWORD PTR [eax+0x64000080]
64006ed9:	test   eax,eax
64006edb:	je     0x64006ee9
64006edd:	lea    ecx,[eax+0x64000000]
64006ee3:	mov    DWORD PTR [esp+0x10],ecx
64006ee7:	jmp    0x64006ef1
64006ee9:	mov    DWORD PTR [esp+0x10],0x0
64006ef1:	push   0x640299a4
64006ef6:	push   0x2711
64006efb:	push   edi
64006efc:	call   DWORD PTR ds:0x64024020
64006f02:	mov    esi,eax
64006f04:	test   esi,esi
64006f06:	je     0x64006fb5
64006f0c:	push   esi
64006f0d:	push   edi
64006f0e:	call   DWORD PTR ds:0x6402401c
64006f14:	mov    ebx,eax
64006f16:	test   ebx,ebx
64006f18:	je     0x64006fb5
64006f1e:	push   esi
64006f1f:	push   edi
64006f20:	call   DWORD PTR ds:0x64024014
64006f26:	push   ebx
64006f27:	mov    esi,eax
64006f29:	call   DWORD PTR ds:0x64024018
64006f2f:	mov    ebx,eax
64006f31:	mov    eax,0x4
64006f36:	mov    ecx,0x6402a708
64006f3b:	mov    edx,ebx
64006f3d:	push   ebp
64006f3e:	mov    edi,edi
64006f40:	mov    edi,DWORD PTR [edx]
64006f42:	cmp    edi,DWORD PTR [ecx]
64006f44:	jne    0x64006f58
64006f46:	sub    eax,0x4
64006f49:	add    ecx,0x4
64006f4c:	add    edx,0x4
64006f4f:	cmp    eax,0x4
64006f52:	jae    0x64006f40
64006f54:	test   eax,eax
64006f56:	je     0x64006fcf
64006f58:	movzx  edi,BYTE PTR [edx]
64006f5b:	movzx  ebp,BYTE PTR [ecx]
64006f5e:	sub    edi,ebp
64006f60:	jne    0x64006fa7
64006f62:	sub    eax,0x1
64006f65:	add    ecx,0x1
64006f68:	add    edx,0x1
64006f6b:	test   eax,eax
64006f6d:	je     0x64006fcf
64006f6f:	movzx  edi,BYTE PTR [edx]
64006f72:	movzx  ebp,BYTE PTR [ecx]
64006f75:	sub    edi,ebp
64006f77:	jne    0x64006fa7
64006f79:	sub    eax,0x1
64006f7c:	add    ecx,0x1
64006f7f:	add    edx,0x1
64006f82:	test   eax,eax
64006f84:	je     0x64006fcf
64006f86:	movzx  edi,BYTE PTR [edx]
64006f89:	movzx  ebp,BYTE PTR [ecx]
64006f8c:	sub    edi,ebp
64006f8e:	jne    0x64006fa7
64006f90:	sub    eax,0x1
64006f93:	add    ecx,0x1
64006f96:	add    edx,0x1
64006f99:	test   eax,eax
64006f9b:	je     0x64006fcf
64006f9d:	movzx  edi,BYTE PTR [edx]
64006fa0:	movzx  edx,BYTE PTR [ecx]
64006fa3:	sub    edi,edx
64006fa5:	je     0x64006fcf
64006fa7:	test   edi,edi
64006fa9:	mov    eax,0x1
64006fae:	jg     0x64006fd1
64006fb0:	or     eax,0xffffffff
64006fb3:	jmp    0x64006fd1
64006fb5:	pop    edi
64006fb6:	pop    esi
64006fb7:	xor    al,al
64006fb9:	pop    ebx
64006fba:	mov    ecx,DWORD PTR [esp+0x8538]
64006fc1:	xor    ecx,esp
64006fc3:	call   0x64013d06
64006fc8:	add    esp,0x853c
64006fce:	ret    
64006fcf:	xor    eax,eax
64006fd1:	test   eax,eax
64006fd3:	pop    ebp
64006fd4:	jne    0x64006fb5
64006fd6:	mov    edi,DWORD PTR [ebx+0x4]
64006fd9:	push   edi
64006fda:	lea    eax,[ebx+0x8]
64006fdd:	push   eax
64006fde:	lea    ecx,[esp+0x1c]
64006fe2:	push   ecx
64006fe3:	call   0x640151e0
64006fe8:	sub    esi,edi
64006fea:	sub    esi,0x8
64006fed:	push   esi
64006fee:	lea    edx,[edi+ebx*1+0x8]
64006ff2:	push   edx
64006ff3:	lea    eax,[esp+0x1028]
64006ffa:	push   eax
64006ffb:	call   0x640151e0
64007000:	add    esp,0x18
64007003:	xor    ecx,ecx
64007005:	xor    edx,edx
64007007:	test   esi,esi
64007009:	je     0x64007029
6400700b:	jmp    0x64007010
6400700d:	lea    ecx,[ecx+0x0]
64007010:	mov    al,BYTE PTR [esp+edx*1+0x14]
64007014:	xor    BYTE PTR [esp+ecx*1+0x1014],al
6400701b:	lea    eax,[edx+0x1]
6400701e:	xor    edx,edx
64007020:	add    ecx,0x1
64007023:	div    edi
64007025:	cmp    ecx,esi
64007027:	jne    0x64007010
64007029:	mov    edi,DWORD PTR [esp+0x10]
6400702d:	lea    ecx,[esp+0xc]
64007031:	push   ecx
64007032:	push   0x40
64007034:	push   esi
64007035:	push   edi
64007036:	mov    DWORD PTR [esp+0x1c],0x0
6400703e:	call   DWORD PTR ds:0x640399d8
64007044:	lea    edx,[esp+0x1014]
6400704b:	push   edx
6400704c:	push   edi
6400704d:	call   0x64006ce0
64007052:	mov    ecx,DWORD PTR [esp+0x14]
64007056:	add    esp,0x8
64007059:	mov    bl,al
6400705b:	lea    eax,[esp+0xc]
6400705f:	push   eax
64007060:	push   ecx
64007061:	push   esi
64007062:	push   edi
64007063:	call   DWORD PTR ds:0x640399d8
64007069:	mov    ecx,DWORD PTR [esp+0x8544]
64007070:	pop    edi
64007071:	pop    esi
64007072:	mov    al,bl
64007074:	pop    ebx
64007075:	xor    ecx,esp
64007077:	call   0x64013d06
6400707c:	add    esp,0x853c
64007082:	ret    
64007083:	int3   
64007084:	int3   
64007085:	int3   
64007086:	int3   
64007087:	int3   
64007088:	int3   
64007089:	int3   
6400708a:	int3   
6400708b:	int3   
6400708c:	int3   
6400708d:	int3   
6400708e:	int3   
6400708f:	int3   
64007090:	mov    eax,ecx
64007092:	mov    cl,BYTE PTR [esp+0x8]
64007096:	mov    BYTE PTR [eax],cl
64007098:	mov    DWORD PTR [eax+0x4],0xffffffff
6400709f:	mov    BYTE PTR [eax+0x8],0x1
640070a3:	ret    0x8
640070a6:	int3   
640070a7:	int3   
640070a8:	int3   
640070a9:	int3   
640070aa:	int3   
640070ab:	int3   
640070ac:	int3   
640070ad:	int3   
640070ae:	int3   
640070af:	int3   
640070b0:	push   esi
640070b1:	mov    esi,ecx
640070b3:	push   edi
640070b4:	mov    edi,DWORD PTR [esi+0x4]
640070b7:	test   edi,edi
640070b9:	je     0x640070d3
640070bb:	push   ebx
640070bc:	call   DWORD PTR ds:0x64024064
640070c2:	push   edi
640070c3:	mov    ebx,eax
640070c5:	call   DWORD PTR ds:0x6402406c
640070cb:	push   ebx
640070cc:	call   DWORD PTR ds:0x64024070
640070d2:	pop    ebx
640070d3:	pop    edi
640070d4:	mov    DWORD PTR [esi+0x4],0x0
640070db:	pop    esi
640070dc:	ret    
640070dd:	int3   
640070de:	int3   
640070df:	int3   
640070e0:	push   ebp
640070e1:	mov    ebp,esp
640070e3:	and    esp,0xfffffff8
640070e6:	push   0xffffffff
640070e8:	push   0x64023a18
640070ed:	mov    eax,fs:0x0
640070f3:	push   eax
640070f4:	sub    esp,0x50
640070f7:	push   ebx
640070f8:	push   esi
640070f9:	push   edi
640070fa:	mov    eax,ds:0x64037644
640070ff:	xor    eax,esp
64007101:	push   eax
64007102:	lea    eax,[esp+0x60]
64007106:	mov    fs:0x0,eax
6400710c:	xor    ebx,ebx
6400710e:	mov    DWORD PTR [esp+0x10],ebx
64007112:	mov    DWORD PTR [esp+0x14],ebx
64007116:	push   0xa
64007118:	mov    DWORD PTR [esp+0x6c],ebx
6400711c:	call   0x64012f9a
64007121:	mov    edi,eax
64007123:	add    esp,0x4
64007126:	mov    DWORD PTR [esp+0x10],edi
6400712a:	mov    eax,DWORD PTR [ebp+0x10]
6400712d:	cmp    eax,ebx
6400712f:	mov    BYTE PTR [esp+0x68],0x1
64007134:	mov    DWORD PTR [edi+0x4],0x2
6400713b:	je     0x64007144
6400713d:	mov    ax,WORD PTR [eax]
64007140:	mov    WORD PTR [edi+0x8],ax
64007144:	mov    eax,DWORD PTR [edi+0x4]
64007147:	mov    ecx,DWORD PTR [ebp+0x8]
6400714a:	add    eax,0x8
6400714d:	push   eax
6400714e:	push   edi
6400714f:	push   eax
64007150:	push   edi
64007151:	push   0x3
64007153:	call   0x64007350
64007158:	test   eax,eax
6400715a:	jne    0x640071bf
6400715c:	push   0x6402a72c
64007161:	push   0x19
64007163:	push   0x6402a760
64007168:	call   0x64002e70
6400716d:	mov    ecx,eax
6400716f:	add    esp,0xc
64007172:	mov    DWORD PTR [esp+0x30],0xf
6400717a:	mov    DWORD PTR [esp+0x2c],ebx
6400717e:	mov    BYTE PTR [esp+0x1c],0x0
64007183:	lea    esi,[ecx+0x1]
64007186:	mov    dl,BYTE PTR [ecx]
64007188:	add    ecx,0x1
6400718b:	test   dl,dl
6400718d:	jne    0x64007186
6400718f:	sub    ecx,esi
64007191:	push   ecx
64007192:	push   eax
64007193:	lea    ecx,[esp+0x20]
64007197:	call   0x64003470
6400719c:	lea    ecx,[esp+0x18]
640071a0:	push   ecx
640071a1:	lea    edx,[esp+0x38]
640071a5:	push   edx
640071a6:	mov    BYTE PTR [esp+0x70],0x2
640071ab:	call   0x64001430
640071b0:	push   0x6402bcb0
640071b5:	lea    eax,[esp+0x38]
640071b9:	push   eax
640071ba:	call   0x64013872
640071bf:	cmp    DWORD PTR [edi],0x1
640071c2:	jne    0x64007218
640071c4:	mov    ebx,DWORD PTR [edi+0x4]
640071c7:	lea    ecx,[ebx+0x8]
640071ca:	push   ecx
640071cb:	call   0x64012f9a
640071d0:	mov    esi,eax
640071d2:	add    esp,0x4
640071d5:	cmp    esi,edi
640071d7:	je     0x640071e2
640071d9:	push   edi
640071da:	call   0x64013644
640071df:	add    esp,0x4
640071e2:	mov    eax,DWORD PTR [ebp+0x10]
640071e5:	test   eax,eax
640071e7:	mov    edi,esi
640071e9:	mov    DWORD PTR [esp+0x10],edi
640071ed:	mov    DWORD PTR [esi+0x4],ebx
640071f0:	je     0x640071f9
640071f2:	mov    dx,WORD PTR [eax]
640071f5:	mov    WORD PTR [esi+0x8],dx
640071f9:	mov    eax,DWORD PTR [esi+0x4]
640071fc:	mov    ecx,DWORD PTR [ebp+0x8]
640071ff:	add    eax,0x8
64007202:	push   eax
64007203:	push   esi
64007204:	push   eax
64007205:	push   esi
64007206:	push   0x3
64007208:	call   0x64007350
6400720d:	test   eax,eax
6400720f:	je     0x64007261
64007211:	cmp    DWORD PTR [esi],0x1
64007214:	je     0x640071c4
64007216:	xor    ebx,ebx
64007218:	cmp    DWORD PTR [edi],ebx
6400721a:	je     0x640072c9
64007220:	push   0x6402a7b8
64007225:	push   0x19
64007227:	push   0x6402a760
6400722c:	call   0x64002e70
64007231:	add    esp,0xc
64007234:	push   eax
64007235:	lea    ecx,[esp+0x1c]
64007239:	call   0x64002950
6400723e:	lea    eax,[esp+0x18]
64007242:	push   eax
64007243:	lea    ecx,[esp+0x38]
64007247:	push   ecx
64007248:	mov    BYTE PTR [esp+0x70],0x4
6400724d:	call   0x64001430
64007252:	push   0x6402bcb0
64007257:	lea    edx,[esp+0x38]
6400725b:	push   edx
6400725c:	call   0x64013872
64007261:	push   0x6402a77c
64007266:	push   0x19
64007268:	push   0x6402a760
6400726d:	call   0x64002e70
64007272:	mov    ecx,eax
64007274:	add    esp,0xc
64007277:	mov    DWORD PTR [esp+0x30],0xf
6400727f:	mov    DWORD PTR [esp+0x2c],0x0
64007287:	mov    BYTE PTR [esp+0x1c],0x0
6400728c:	lea    esi,[ecx+0x1]
6400728f:	nop
64007290:	mov    dl,BYTE PTR [ecx]
64007292:	add    ecx,0x1
64007295:	test   dl,dl
64007297:	jne    0x64007290
64007299:	sub    ecx,esi
6400729b:	push   ecx
6400729c:	push   eax
6400729d:	lea    ecx,[esp+0x20]
640072a1:	call   0x64003470
640072a6:	lea    eax,[esp+0x18]
640072aa:	push   eax
640072ab:	lea    ecx,[esp+0x38]
640072af:	push   ecx
640072b0:	mov    BYTE PTR [esp+0x70],0x3
640072b5:	call   0x64001430
640072ba:	push   0x6402bcb0
640072bf:	lea    edx,[esp+0x38]
640072c3:	push   edx
640072c4:	call   0x64013872
640072c9:	mov    eax,DWORD PTR [edi+0x4]
640072cc:	mov    esi,DWORD PTR [ebp+0xc]
640072cf:	push   eax
640072d0:	lea    eax,[edi+0x8]
640072d3:	mov    DWORD PTR [esi+0x18],0xf
640072da:	mov    DWORD PTR [esi+0x14],ebx
640072dd:	push   eax
640072de:	mov    ecx,esi
640072e0:	mov    BYTE PTR [esi+0x4],0x0
640072e4:	call   0x64003470
640072e9:	push   edi
640072ea:	call   0x64013644
640072ef:	add    esp,0x4
640072f2:	push   ebx
640072f3:	call   0x64013644
640072f8:	add    esp,0x4
640072fb:	mov    eax,esi
640072fd:	mov    ecx,DWORD PTR [esp+0x60]
64007301:	mov    DWORD PTR fs:0x0,ecx
64007308:	pop    ecx
64007309:	pop    edi
6400730a:	pop    esi
6400730b:	pop    ebx
6400730c:	mov    esp,ebp
6400730e:	pop    ebp
6400730f:	ret    0xc
64007312:	int3   
64007313:	int3   
64007314:	int3   
64007315:	int3   
64007316:	int3   
64007317:	int3   
64007318:	int3   
64007319:	int3   
6400731a:	int3   
6400731b:	int3   
6400731c:	int3   
6400731d:	int3   
6400731e:	int3   
6400731f:	int3   
64007320:	push   ecx
64007321:	push   esi
64007322:	mov    esi,DWORD PTR [esp+0xc]
64007326:	lea    eax,[esp+0x10]
6400732a:	push   eax
6400732b:	push   esi
6400732c:	push   ecx
6400732d:	mov    DWORD PTR [esp+0x10],0x0
64007335:	call   0x640070e0
6400733a:	mov    eax,esi
6400733c:	pop    esi
6400733d:	pop    ecx
6400733e:	ret    0x8
64007341:	int3   
64007342:	int3   
64007343:	int3   
64007344:	int3   
64007345:	int3   
64007346:	int3   
64007347:	int3   
64007348:	int3   
64007349:	int3   
6400734a:	int3   
6400734b:	int3   
6400734c:	int3   
6400734d:	int3   
6400734e:	int3   
6400734f:	int3   
64007350:	push   0xffffffff
64007352:	push   0x640239c8
64007357:	mov    eax,fs:0x0
6400735d:	push   eax
6400735e:	push   ecx
6400735f:	push   ebx
64007360:	push   ebp
64007361:	push   esi
64007362:	push   edi
64007363:	mov    eax,ds:0x64037644
64007368:	xor    eax,esp
6400736a:	push   eax
6400736b:	lea    eax,[esp+0x18]
6400736f:	mov    fs:0x0,eax
64007375:	mov    esi,ecx
64007377:	xor    ebp,ebp
64007379:	mov    DWORD PTR [esp+0x14],ebp
6400737d:	mov    DWORD PTR [esp+0x20],ebp
64007381:	cmp    BYTE PTR [esi],0x0
64007384:	jne    0x64007391
64007386:	call   0x64007470
6400738b:	mov    ebp,eax
6400738d:	mov    ebx,ebp
6400738f:	jmp    0x640073c7
64007391:	cmp    DWORD PTR [esi+0x4],0xffffffff
64007395:	jne    0x640073c4
64007397:	call   0x64007470
6400739c:	mov    edi,DWORD PTR [esi+0x4]
6400739f:	test   edi,edi
640073a1:	mov    DWORD PTR [esp+0x14],eax
640073a5:	je     0x640073bd
640073a7:	call   DWORD PTR ds:0x64024064
640073ad:	push   edi
640073ae:	mov    ebx,eax
640073b0:	call   DWORD PTR ds:0x6402406c
640073b6:	push   ebx
640073b7:	call   DWORD PTR ds:0x64024070
640073bd:	mov    eax,DWORD PTR [esp+0x14]
640073c1:	mov    DWORD PTR [esi+0x4],eax
640073c4:	mov    ebx,DWORD PTR [esi+0x4]
640073c7:	cmp    ebx,0xffffffff
640073ca:	jne    0x640073ea
640073cc:	test   ebp,ebp
640073ce:	je     0x640073e6
640073d0:	call   DWORD PTR ds:0x64024064
640073d6:	push   ebp
640073d7:	mov    esi,eax
640073d9:	call   DWORD PTR ds:0x6402406c
640073df:	push   esi
640073e0:	call   DWORD PTR ds:0x64024070
640073e6:	xor    eax,eax
640073e8:	jmp    0x64007458
640073ea:	mov    ecx,DWORD PTR [esp+0x38]
640073ee:	mov    edx,DWORD PTR [esp+0x30]
640073f2:	mov    edi,DWORD PTR [esp+0x34]
640073f6:	push   ecx
640073f7:	mov    ecx,DWORD PTR [esp+0x2c]
640073fb:	push   edx
640073fc:	mov    edx,DWORD PTR [esp+0x34]
64007400:	push   esi
64007401:	call   0x64007680
64007406:	mov    ebx,eax
64007408:	test   ebx,ebx
6400740a:	mov    DWORD PTR [esp+0x38],ebx
6400740e:	jne    0x6400743c
64007410:	cmp    BYTE PTR [esi],al
64007412:	je     0x6400743c
64007414:	mov    edi,DWORD PTR [esi+0x4]
64007417:	test   edi,edi
64007419:	je     0x64007435
6400741b:	call   DWORD PTR ds:0x64024064
64007421:	push   edi
64007422:	mov    ebx,eax
64007424:	call   DWORD PTR ds:0x6402406c
6400742a:	push   ebx
6400742b:	call   DWORD PTR ds:0x64024070
64007431:	mov    ebx,DWORD PTR [esp+0x38]
64007435:	mov    DWORD PTR [esi+0x4],0x0
6400743c:	test   ebp,ebp
6400743e:	je     0x64007456
64007440:	call   DWORD PTR ds:0x64024064
64007446:	push   ebp
64007447:	mov    esi,eax
64007449:	call   DWORD PTR ds:0x6402406c
6400744f:	push   esi
64007450:	call   DWORD PTR ds:0x64024070
64007456:	mov    eax,ebx
64007458:	mov    ecx,DWORD PTR [esp+0x18]
6400745c:	mov    DWORD PTR fs:0x0,ecx
64007463:	pop    ecx
64007464:	pop    edi
64007465:	pop    esi
64007466:	pop    ebp
64007467:	pop    ebx
64007468:	add    esp,0x10
6400746b:	ret    0x14
6400746e:	int3   
6400746f:	int3   
64007470:	push   ebp
64007471:	mov    ebp,esp
64007473:	and    esp,0xfffffff8
64007476:	push   0xffffffff
64007478:	push   0x6402399e
6400747d:	mov    eax,fs:0x0
64007483:	push   eax
64007484:	sub    esp,0x14
64007487:	push   ebx
64007488:	push   ebp
64007489:	push   esi
6400748a:	push   edi
6400748b:	mov    eax,ds:0x64037644
64007490:	xor    eax,esp
64007492:	push   eax
64007493:	lea    eax,[esp+0x28]
64007497:	mov    fs:0x0,eax
6400749d:	xor    edi,edi
6400749f:	mov    DWORD PTR [esp+0x1c],edi
640074a3:	lea    eax,[esp+0x18]
640074a7:	mov    DWORD PTR [esp+0x30],edi
640074ab:	mov    ecx,DWORD PTR ds:0x64039b10
640074b1:	push   eax
640074b2:	call   0x64002ab0
640074b7:	mov    ebx,0x1
640074bc:	mov    BYTE PTR [esp+0x30],bl
640074c0:	test   BYTE PTR ds:0x64039b18,bl
640074c6:	jne    0x64007513
640074c8:	or     DWORD PTR ds:0x64039b18,ebx
640074ce:	push   0x6402a7e0
640074d3:	push   0xb
640074d5:	push   0x6402a820
640074da:	mov    BYTE PTR [esp+0x3c],0x2
640074df:	call   0x64002e70
640074e4:	add    esp,0xc
640074e7:	push   eax
640074e8:	push   0x6402a82c
640074ed:	push   0xc
640074ef:	push   0x6402a864
640074f4:	call   0x64002e70
640074f9:	add    esp,0xc
640074fc:	push   eax
640074fd:	call   DWORD PTR ds:0x640240a0
64007503:	push   eax
64007504:	call   DWORD PTR ds:0x64024094
6400750a:	mov    ds:0x64039b14,eax
6400750f:	mov    BYTE PTR [esp+0x30],bl
64007513:	mov    ebx,DWORD PTR ds:0x64024064
64007519:	lea    esp,[esp+0x0]
64007520:	mov    ecx,DWORD PTR [esp+0x18]
64007524:	push   0x0
64007526:	push   0x0
64007528:	push   0x3
6400752a:	push   0x0
6400752c:	push   0x0
6400752e:	push   0xc0000000
64007533:	push   ecx
64007534:	call   DWORD PTR ds:0x64039b14
6400753a:	test   edi,edi
6400753c:	mov    esi,eax
6400753e:	je     0x64007556
64007540:	call   ebx
64007542:	push   edi
64007543:	mov    ebp,eax
64007545:	call   DWORD PTR ds:0x6402406c
6400754b:	push   ebp
6400754c:	mov    ebp,DWORD PTR ds:0x64024070
64007552:	call   ebp
64007554:	jmp    0x6400755c
64007556:	mov    ebp,DWORD PTR ds:0x64024070
6400755c:	cmp    esi,0xffffffff
6400755f:	mov    edi,esi
64007561:	mov    DWORD PTR [esp+0x1c],edi
64007565:	jne    0x6400758d
64007567:	call   ebx
64007569:	cmp    eax,0xe7
6400756e:	jne    0x64007629
64007574:	mov    edx,DWORD PTR [esp+0x18]
64007578:	push   0x1f4
6400757d:	push   edx
6400757e:	call   DWORD PTR ds:0x640240a8
64007584:	test   eax,eax
64007586:	jne    0x64007520
64007588:	jmp    0x6400762b
6400758d:	push   0x0
6400758f:	push   0x0
64007591:	lea    eax,[esp+0x28]
64007595:	push   eax
64007596:	push   esi
64007597:	mov    DWORD PTR [esp+0x30],0x2
6400759f:	call   DWORD PTR ds:0x640240ac
640075a5:	test   eax,eax
640075a7:	jne    0x640075e6
640075a9:	call   ebx
640075ab:	mov    BYTE PTR [esp+0x30],0x0
640075b0:	mov    eax,DWORD PTR [esp+0x18]
640075b4:	add    eax,0xfffffff0
640075b7:	lea    ecx,[eax+0xc]
640075ba:	or     edx,0xffffffff
640075bd:	lock xadd DWORD PTR [ecx],edx
640075c1:	dec    edx
640075c2:	test   edx,edx
640075c4:	jg     0x640075d0
640075c6:	mov    ecx,DWORD PTR [eax]
640075c8:	mov    edx,DWORD PTR [ecx]
640075ca:	push   eax
640075cb:	mov    eax,DWORD PTR [edx+0x4]
640075ce:	call   eax
640075d0:	test   esi,esi
640075d2:	je     0x6400765f
640075d8:	call   ebx
640075da:	push   esi
640075db:	mov    edi,eax
640075dd:	call   DWORD PTR ds:0x6402406c
640075e3:	push   edi
640075e4:	jmp    0x6400765d
640075e6:	mov    BYTE PTR [esp+0x30],0x0
640075eb:	mov    eax,DWORD PTR [esp+0x18]
640075ef:	add    eax,0xfffffff0
640075f2:	mov    DWORD PTR [esp+0x1c],0x0
640075fa:	lea    ecx,[eax+0xc]
640075fd:	or     edx,0xffffffff
64007600:	lock xadd DWORD PTR [ecx],edx
64007604:	dec    edx
64007605:	test   edx,edx
64007607:	jg     0x64007613
64007609:	mov    ecx,DWORD PTR [eax]
6400760b:	mov    edx,DWORD PTR [ecx]
6400760d:	push   eax
6400760e:	mov    eax,DWORD PTR [edx+0x4]
64007611:	call   eax
64007613:	mov    eax,esi
64007615:	mov    ecx,DWORD PTR [esp+0x28]
64007619:	mov    DWORD PTR fs:0x0,ecx
64007620:	pop    ecx
64007621:	pop    edi
64007622:	pop    esi
64007623:	pop    ebp
64007624:	pop    ebx
64007625:	mov    esp,ebp
64007627:	pop    ebp
64007628:	ret    
64007629:	call   ebx
6400762b:	mov    BYTE PTR [esp+0x30],0x0
64007630:	mov    eax,DWORD PTR [esp+0x18]
64007634:	add    eax,0xfffffff0
64007637:	or     edx,0xffffffff
6400763a:	lea    ecx,[eax+0xc]
6400763d:	lock xadd DWORD PTR [ecx],edx
64007641:	dec    edx
64007642:	test   edx,edx
64007644:	jg     0x64007650
64007646:	mov    ecx,DWORD PTR [eax]
64007648:	mov    edx,DWORD PTR [ecx]
6400764a:	push   eax
6400764b:	mov    eax,DWORD PTR [edx+0x4]
6400764e:	call   eax
64007650:	call   ebx
64007652:	push   0xffffffff
64007654:	mov    esi,eax
64007656:	call   DWORD PTR ds:0x6402406c
6400765c:	push   esi
6400765d:	call   ebp
6400765f:	or     eax,0xffffffff
64007662:	mov    ecx,DWORD PTR [esp+0x28]
64007666:	mov    DWORD PTR fs:0x0,ecx
6400766d:	pop    ecx
6400766e:	pop    edi
6400766f:	pop    esi
64007670:	pop    ebp
64007671:	pop    ebx
64007672:	mov    esp,ebp
64007674:	pop    ebp
64007675:	ret    
64007676:	int3   
64007677:	int3   
64007678:	int3   
64007679:	int3   
6400767a:	int3   
6400767b:	int3   
6400767c:	int3   
6400767d:	int3   
6400767e:	int3   
6400767f:	int3   
64007680:	push   ebp
64007681:	mov    ebp,esp
64007683:	and    esp,0xfffffff8
64007686:	sub    esp,0x5c
64007689:	mov    eax,ds:0x64037644
6400768e:	xor    eax,esp
64007690:	mov    DWORD PTR [esp+0x58],eax
64007694:	xor    eax,eax
64007696:	cmp    BYTE PTR ds:0x640399dc,al
6400769c:	push   esi
6400769d:	mov    esi,edx
6400769f:	mov    WORD PTR [esp+0x18],ax
640076a4:	mov    DWORD PTR [esp+0x1a],eax
640076a8:	mov    DWORD PTR [esp+0x1e],eax
640076ac:	mov    DWORD PTR [esp+0x22],eax
640076b0:	mov    WORD PTR [esp+0x26],ax
640076b5:	mov    DWORD PTR [esp+0x28],eax
640076b9:	mov    DWORD PTR [esp+0x2c],eax
640076bd:	mov    DWORD PTR [esp+0x30],eax
640076c1:	mov    DWORD PTR [esp+0x34],eax
640076c5:	mov    DWORD PTR [esp+0x38],eax
640076c9:	mov    WORD PTR [esp+0x3c],ax
640076ce:	mov    DWORD PTR [esp+0x3e],eax
640076d2:	mov    DWORD PTR [esp+0x42],eax
640076d6:	mov    DWORD PTR [esp+0x46],eax
640076da:	mov    WORD PTR [esp+0x4a],ax
640076df:	mov    DWORD PTR [esp+0x4c],eax
640076e3:	mov    DWORD PTR [esp+0x50],eax
640076e7:	mov    DWORD PTR [esp+0x54],eax
640076eb:	mov    DWORD PTR [esp+0x58],eax
640076ef:	jne    0x6400773e
640076f1:	mov    DWORD PTR [esp+0x28],ecx
640076f5:	call   DWORD PTR ds:0x64024038
640076fb:	mov    ecx,DWORD PTR [ebp+0x10]
640076fe:	mov    DWORD PTR [esp+0x2c],eax
64007702:	mov    eax,DWORD PTR [ebp+0xc]
64007705:	cmp    esi,edi
64007707:	mov    DWORD PTR [esp+0x30],eax
6400770b:	mov    eax,DWORD PTR [ebp+0x8]
6400770e:	sete   dl
64007711:	cmp    BYTE PTR [eax+0x8],0x0
64007715:	mov    DWORD PTR [esp+0x34],ecx
64007719:	mov    BYTE PTR [esp+0x38],dl
6400771d:	je     0x64007733
6400771f:	push   0x8
64007721:	lea    ecx,[esp+0x1c]
64007725:	push   0x64029600
6400772a:	push   ecx
6400772b:	call   0x64014df3
64007730:	add    esp,0xc
64007733:	mov    eax,0x24
64007738:	lea    ecx,[esp+0x18]
6400773c:	jmp    0x6400777f
6400773e:	mov    edx,DWORD PTR [ebp+0xc]
64007741:	mov    eax,DWORD PTR [ebp+0x10]
64007744:	cmp    esi,edi
64007746:	mov    DWORD PTR [esp+0x50],edx
6400774a:	mov    edx,DWORD PTR [ebp+0x8]
6400774d:	mov    DWORD PTR [esp+0x4c],ecx
64007751:	sete   cl
64007754:	cmp    BYTE PTR [edx+0x8],0x0
64007758:	mov    DWORD PTR [esp+0x54],eax
6400775c:	mov    BYTE PTR [esp+0x58],cl
64007760:	je     0x64007776
64007762:	push   0x8
64007764:	lea    eax,[esp+0x40]
64007768:	push   0x64029600
6400776d:	push   eax
6400776e:	call   0x64014df3
64007773:	add    esp,0xc
64007776:	mov    eax,0x20
6400777b:	lea    ecx,[esp+0x3c]
6400777f:	push   0x0
64007781:	lea    edx,[esp+0x14]
64007785:	push   edx
64007786:	push   eax
64007787:	push   ecx
64007788:	push   ebx
64007789:	call   DWORD PTR ds:0x64024090
6400778f:	test   eax,eax
64007791:	jne    0x640077a7
64007793:	xor    eax,eax
64007795:	pop    esi
64007796:	mov    ecx,DWORD PTR [esp+0x58]
6400779a:	xor    ecx,esp
6400779c:	call   0x64013d06
640077a1:	mov    esp,ebp
640077a3:	pop    ebp
640077a4:	ret    0xc
640077a7:	mov    ecx,DWORD PTR [ebp+0xc]
640077aa:	push   0x0
640077ac:	lea    eax,[esp+0x14]
640077b0:	push   eax
640077b1:	push   ecx
640077b2:	push   esi
640077b3:	push   ebx
640077b4:	call   DWORD PTR ds:0x64024090
640077ba:	test   eax,eax
640077bc:	je     0x64007793
640077be:	mov    esi,DWORD PTR ds:0x6402408c
640077c4:	xor    eax,eax
640077c6:	push   eax
640077c7:	lea    edx,[esp+0x18]
640077cb:	push   edx
640077cc:	mov    DWORD PTR [esp+0x10],eax
640077d0:	mov    DWORD PTR [esp+0x14],eax
640077d4:	push   0x8
640077d6:	lea    eax,[esp+0x14]
640077da:	push   eax
640077db:	push   ebx
640077dc:	call   esi
640077de:	test   eax,eax
640077e0:	je     0x64007793
640077e2:	cmp    DWORD PTR [esp+0x8],0x0
640077e7:	je     0x64007793
640077e9:	mov    eax,DWORD PTR [esp+0xc]
640077ed:	cmp    eax,DWORD PTR [ebp+0x10]
640077f0:	ja     0x64007793
640077f2:	test   eax,eax
640077f4:	je     0x64007806
640077f6:	push   0x0
640077f8:	lea    ecx,[esp+0x18]
640077fc:	push   ecx
640077fd:	push   eax
640077fe:	push   edi
640077ff:	push   ebx
64007800:	call   esi
64007802:	test   eax,eax
64007804:	je     0x64007793
64007806:	mov    ecx,DWORD PTR [esp+0x5c]
6400780a:	pop    esi
6400780b:	xor    ecx,esp
6400780d:	mov    eax,0x1
64007812:	call   0x64013d06
64007817:	mov    esp,ebp
64007819:	pop    ebp
6400781a:	ret    0xc
6400781d:	int3   
6400781e:	int3   
6400781f:	int3   
64007820:	push   eax
64007821:	push   ecx
64007822:	call   0x640150c4
64007827:	add    esp,0x8
6400782a:	ret    
6400782b:	int3   
6400782c:	int3   
6400782d:	int3   
6400782e:	int3   
6400782f:	int3   
64007830:	push   eax
64007831:	mov    eax,DWORD PTR [esp+0x8]
64007835:	push   ecx
64007836:	push   edx
64007837:	push   eax
64007838:	call   0x64015054
6400783d:	add    esp,0x10
64007840:	ret    
64007841:	int3   
64007842:	int3   
64007843:	int3   
64007844:	int3   
64007845:	int3   
64007846:	int3   
64007847:	int3   
64007848:	int3   
64007849:	int3   
6400784a:	int3   
6400784b:	int3   
6400784c:	int3   
6400784d:	int3   
6400784e:	int3   
6400784f:	int3   
64007850:	push   ecx
64007851:	xor    eax,eax
64007853:	cmp    WORD PTR [esp+0x8],ax
64007858:	mov    DWORD PTR [esp],eax
6400785b:	je     0x64007870
6400785d:	mov    DWORD PTR [esp+0x8],eax
64007861:	push   0x6402bdb0
64007866:	lea    eax,[esp+0xc]
6400786a:	push   eax
6400786b:	call   0x64013872
64007870:	push   0x6402a5a4
64007875:	push   0x640299b0
6400787a:	push   esi
6400787b:	mov    ecx,0xbf4
64007880:	call   0x64006b20
64007885:	add    esp,0xc
64007888:	mov    eax,esi
6400788a:	pop    ecx
6400788b:	ret    
6400788c:	int3   
6400788d:	int3   
6400788e:	int3   
6400788f:	int3   
64007890:	push   ecx
64007891:	xor    eax,eax
64007893:	cmp    WORD PTR [esp+0x8],ax
64007898:	mov    DWORD PTR [esp],eax
6400789b:	je     0x640078b0
6400789d:	mov    DWORD PTR [esp+0x8],eax
640078a1:	push   0x6402bdb0
640078a6:	lea    eax,[esp+0xc]
640078aa:	push   eax
640078ab:	call   0x64013872
640078b0:	push   0x6402a624
640078b5:	push   0x6402a5d0
640078ba:	push   esi
640078bb:	mov    ecx,0x53
640078c0:	call   0x64006b20
640078c5:	add    esp,0xc
640078c8:	mov    eax,esi
640078ca:	pop    ecx
640078cb:	ret    
640078cc:	int3   
640078cd:	int3   
640078ce:	int3   
640078cf:	int3   
640078d0:	sub    esp,0x8
640078d3:	xor    eax,eax
640078d5:	cmp    WORD PTR [esp+0xc],ax
640078da:	mov    DWORD PTR [esp+0x4],eax
640078de:	je     0x640078f3
640078e0:	mov    DWORD PTR [esp+0xc],eax
640078e4:	push   0x6402bdb0
640078e9:	lea    eax,[esp+0x10]
640078ed:	push   eax
640078ee:	call   0x64013872
640078f3:	push   0x6402a6e0
640078f8:	push   0x6402a650
640078fd:	push   esi
640078fe:	mov    ecx,0x8e
64007903:	call   0x64006b20
64007908:	add    esp,0xc
6400790b:	mov    eax,esi
6400790d:	add    esp,0x8
64007910:	ret    
64007911:	int3   
64007912:	int3   
64007913:	int3   
64007914:	int3   
64007915:	int3   
64007916:	int3   
64007917:	int3   
64007918:	int3   
64007919:	int3   
6400791a:	int3   
6400791b:	int3   
6400791c:	int3   
6400791d:	int3   
6400791e:	int3   
6400791f:	int3   
64007920:	mov    DWORD PTR [ecx],0x6402b040
64007926:	ret    
64007927:	int3   
64007928:	int3   
64007929:	int3   
6400792a:	int3   
6400792b:	int3   
6400792c:	int3   
6400792d:	int3   
6400792e:	int3   
6400792f:	int3   
64007930:	test   BYTE PTR [esp+0x4],0x1
64007935:	push   esi
64007936:	mov    esi,ecx
64007938:	mov    DWORD PTR [esi],0x6402b040
6400793e:	je     0x64007949
64007940:	push   esi
64007941:	call   0x64013644
64007946:	add    esp,0x4
64007949:	mov    eax,esi
6400794b:	pop    esi
6400794c:	ret    0x4
6400794f:	int3   
64007950:	push   0xffffffff
64007952:	push   0x64023138
64007957:	mov    eax,fs:0x0
6400795d:	push   eax
6400795e:	push   esi
6400795f:	mov    eax,ds:0x64037644
64007964:	xor    eax,esp
64007966:	push   eax
64007967:	lea    eax,[esp+0x8]
6400796b:	mov    fs:0x0,eax
64007971:	mov    esi,DWORD PTR [esp+0x18]
64007975:	mov    eax,DWORD PTR [esp+0x1c]
64007979:	mov    DWORD PTR [esp+0x10],0x0
64007981:	mov    DWORD PTR [esi],0x6402b04c
64007987:	mov    eax,DWORD PTR [eax]
64007989:	sub    eax,0x10
6400798c:	call   0x64004430
64007991:	add    eax,0x10
64007994:	mov    DWORD PTR [esi+0x4],eax
64007997:	mov    eax,esi
64007999:	mov    ecx,DWORD PTR [esp+0x8]
6400799d:	mov    DWORD PTR fs:0x0,ecx
640079a4:	pop    ecx
640079a5:	pop    esi
640079a6:	add    esp,0xc
640079a9:	ret    0x8
640079ac:	int3   
640079ad:	int3   
640079ae:	int3   
640079af:	int3   
640079b0:	mov    ecx,DWORD PTR [ecx+0x4]
640079b3:	push   ecx
640079b4:	call   DWORD PTR ds:0x6402409c
640079ba:	test   eax,eax
640079bc:	jne    0x640079c3
640079be:	xor    edx,edx
640079c0:	ret    0x4
640079c3:	mov    ecx,DWORD PTR [esp+0x4]
640079c7:	push   ecx
640079c8:	push   eax
640079c9:	call   DWORD PTR ds:0x64024094
640079cf:	xor    edx,edx
640079d1:	ret    0x4
640079d4:	int3   
640079d5:	int3   
640079d6:	int3   
640079d7:	int3   
640079d8:	int3   
640079d9:	int3   
640079da:	int3   
640079db:	int3   
640079dc:	int3   
640079dd:	int3   
640079de:	int3   
640079df:	int3   
640079e0:	push   esi
640079e1:	mov    esi,ecx
640079e3:	mov    eax,DWORD PTR [esi+0x4]
640079e6:	sub    eax,0x10
640079e9:	lea    ecx,[eax+0xc]
640079ec:	or     edx,0xffffffff
640079ef:	lock xadd DWORD PTR [ecx],edx
640079f3:	dec    edx
640079f4:	test   edx,edx
640079f6:	jg     0x64007a02
640079f8:	mov    ecx,DWORD PTR [eax]
640079fa:	mov    edx,DWORD PTR [ecx]
640079fc:	push   eax
640079fd:	mov    eax,DWORD PTR [edx+0x4]
64007a00:	call   eax
64007a02:	test   BYTE PTR [esp+0x8],0x1
64007a07:	mov    DWORD PTR [esi],0x6402b040
64007a0d:	je     0x64007a18
64007a0f:	push   esi
64007a10:	call   0x64013644
64007a15:	add    esp,0x4
64007a18:	mov    eax,esi
64007a1a:	pop    esi
64007a1b:	ret    0x4
64007a1e:	int3   
64007a1f:	int3   
64007a20:	push   0xffffffff
64007a22:	push   0x64023333
64007a27:	mov    eax,fs:0x0
64007a2d:	push   eax
64007a2e:	push   ecx
64007a2f:	push   esi
64007a30:	mov    eax,ds:0x64037644
64007a35:	xor    eax,esp
64007a37:	push   eax
64007a38:	lea    eax,[esp+0xc]
64007a3c:	mov    fs:0x0,eax
64007a42:	xor    esi,esi
64007a44:	push   0x8
64007a46:	mov    DWORD PTR [esp+0x18],esi
64007a4a:	call   0x640138d5
64007a4f:	add    esp,0x4
64007a52:	mov    DWORD PTR [esp+0x8],eax
64007a56:	cmp    eax,esi
64007a58:	mov    BYTE PTR [esp+0x14],0x1
64007a5d:	je     0x64007a6c
64007a5f:	lea    ecx,[esp+0x1c]
64007a63:	push   ecx
64007a64:	push   eax
64007a65:	call   0x64007950
64007a6a:	mov    esi,eax
64007a6c:	mov    DWORD PTR [esp+0x14],0xffffffff
64007a74:	mov    eax,DWORD PTR [esp+0x1c]
64007a78:	add    eax,0xfffffff0
64007a7b:	lea    edx,[eax+0xc]
64007a7e:	or     ecx,0xffffffff
64007a81:	lock xadd DWORD PTR [edx],ecx
64007a85:	dec    ecx
64007a86:	test   ecx,ecx
64007a88:	jg     0x64007a94
64007a8a:	mov    ecx,DWORD PTR [eax]
64007a8c:	mov    edx,DWORD PTR [ecx]
64007a8e:	push   eax
64007a8f:	mov    eax,DWORD PTR [edx+0x4]
64007a92:	call   eax
64007a94:	mov    eax,esi
64007a96:	mov    ecx,DWORD PTR [esp+0xc]
64007a9a:	mov    DWORD PTR fs:0x0,ecx
64007aa1:	pop    ecx
64007aa2:	pop    esi
64007aa3:	add    esp,0x10
64007aa6:	ret    
64007aa7:	int3   
64007aa8:	int3   
64007aa9:	int3   
64007aaa:	int3   
64007aab:	int3   
64007aac:	int3   
64007aad:	int3   
64007aae:	int3   
64007aaf:	int3   
64007ab0:	push   esi
64007ab1:	mov    esi,eax
64007ab3:	call   0x64007bc0
64007ab8:	mov    ecx,esi
64007aba:	pop    esi
64007abb:	jmp    0x64009c80
64007ac0:	push   0xffffffff
64007ac2:	push   0x640234f8
64007ac7:	mov    eax,fs:0x0
64007acd:	push   eax
64007ace:	sub    esp,0x28
64007ad1:	push   ebx
64007ad2:	push   ebp
64007ad3:	push   esi
64007ad4:	push   edi
64007ad5:	mov    eax,ds:0x64037644
64007ada:	xor    eax,esp
64007adc:	push   eax
64007add:	lea    eax,[esp+0x3c]
64007ae1:	mov    fs:0x0,eax
64007ae7:	mov    esi,ecx
64007ae9:	call   DWORD PTR ds:0x640240bc
64007aef:	mov    DWORD PTR [esp+0x18],eax
64007af3:	call   0x64007bc0
64007af8:	push   0x0
64007afa:	push   0x4
64007afc:	call   0x64012efe
64007b01:	mov    edi,eax
64007b03:	mov    DWORD PTR [esp+0x1c],edi
64007b07:	cmp    edi,0xffffffff
64007b0a:	mov    DWORD PTR [esp+0x44],0x0
64007b12:	jne    0x64007b1d
64007b14:	call   DWORD PTR ds:0x64024064
64007b1a:	push   edi
64007b1b:	jmp    0x64007b8c
64007b1d:	lea    eax,[esp+0x20]
64007b21:	push   eax
64007b22:	push   edi
64007b23:	mov    DWORD PTR [esp+0x28],0x1c
64007b2b:	call   0x64012f16
64007b30:	test   eax,eax
64007b32:	je     0x64007b81
64007b34:	mov    ebx,DWORD PTR ds:0x640240dc
64007b3a:	mov    ebp,DWORD PTR ds:0x640240b0
64007b40:	mov    ecx,DWORD PTR [esp+0x4c]
64007b44:	cmp    DWORD PTR [esp+0x2c],ecx
64007b48:	jne    0x64007b72
64007b4a:	mov    eax,DWORD PTR [esp+0x28]
64007b4e:	cmp    DWORD PTR [esp+0x18],eax
64007b52:	je     0x64007b72
64007b54:	push   eax
64007b55:	push   0x0
64007b57:	push   0x2
64007b59:	call   ebx
64007b5b:	lea    edx,[esp+0x14]
64007b5f:	push   edx
64007b60:	mov    ecx,esi
64007b62:	mov    DWORD PTR [esp+0x18],eax
64007b66:	call   0x64009c30
64007b6b:	mov    eax,DWORD PTR [esp+0x14]
64007b6f:	push   eax
64007b70:	call   ebp
64007b72:	lea    ecx,[esp+0x20]
64007b76:	push   ecx
64007b77:	push   edi
64007b78:	call   0x64012f10
64007b7d:	test   eax,eax
64007b7f:	jne    0x64007b40
64007b81:	test   edi,edi
64007b83:	je     0x64007b9b
64007b85:	call   DWORD PTR ds:0x64024064
64007b8b:	push   edi
64007b8c:	mov    esi,eax
64007b8e:	call   DWORD PTR ds:0x6402406c
64007b94:	push   esi
64007b95:	call   DWORD PTR ds:0x64024070
64007b9b:	mov    ecx,DWORD PTR [esp+0x3c]
64007b9f:	mov    DWORD PTR fs:0x0,ecx
64007ba6:	pop    ecx
64007ba7:	pop    edi
64007ba8:	pop    esi
64007ba9:	pop    ebp
64007baa:	pop    ebx
64007bab:	add    esp,0x34
64007bae:	ret    0x4
64007bb1:	int3   
64007bb2:	int3   
64007bb3:	int3   
64007bb4:	int3   
64007bb5:	int3   
64007bb6:	int3   
64007bb7:	int3   
64007bb8:	int3   
64007bb9:	int3   
64007bba:	int3   
64007bbb:	int3   
64007bbc:	int3   
64007bbd:	int3   
64007bbe:	int3   
64007bbf:	int3   
64007bc0:	mov    ecx,esi
64007bc2:	call   0x64009be0
64007bc7:	test   eax,eax
64007bc9:	je     0x64007c0c
64007bcb:	push   ebx
64007bcc:	mov    ebx,DWORD PTR ds:0x6402406c
64007bd2:	push   edi
64007bd3:	mov    edi,DWORD PTR ds:0x640240b8
64007bd9:	lea    esp,[esp+0x0]
64007be0:	mov    ecx,esi
64007be2:	call   0x64009c00
64007be7:	mov    eax,DWORD PTR [eax]
64007be9:	push   eax
64007bea:	call   edi
64007bec:	mov    ecx,esi
64007bee:	call   0x64009c00
64007bf3:	mov    ecx,DWORD PTR [eax]
64007bf5:	push   ecx
64007bf6:	call   ebx
64007bf8:	mov    ecx,esi
64007bfa:	call   0x64009c60
64007bff:	mov    ecx,esi
64007c01:	call   0x64009be0
64007c06:	test   eax,eax
64007c08:	jne    0x64007be0
64007c0a:	pop    edi
64007c0b:	pop    ebx
64007c0c:	ret    
64007c0d:	int3   
64007c0e:	int3   
64007c0f:	int3   
64007c10:	push   0xffffffff
64007c12:	push   0x6402395a
64007c17:	mov    eax,fs:0x0
64007c1d:	push   eax
64007c1e:	sub    esp,0x24
64007c21:	push   ebx
64007c22:	push   ebp
64007c23:	push   esi
64007c24:	push   edi
64007c25:	mov    eax,ds:0x64037644
64007c2a:	xor    eax,esp
64007c2c:	push   eax
64007c2d:	lea    eax,[esp+0x38]
64007c31:	mov    fs:0x0,eax
64007c37:	mov    esi,ecx
64007c39:	mov    edi,DWORD PTR [esp+0x48]
64007c3d:	xor    ebx,ebx
64007c3f:	mov    DWORD PTR [esp+0x14],ebx
64007c43:	mov    DWORD PTR [edi],ebx
64007c45:	mov    DWORD PTR [esp+0x40],ebx
64007c49:	lea    ecx,[edi+0x894]
64007c4f:	push   ebx
64007c50:	mov    DWORD PTR [edi+0x4],esi
64007c53:	mov    DWORD PTR [edi+0x888],ebx
64007c59:	mov    BYTE PTR [edi+0x890],bl
64007c5f:	call   0x64009ca0
64007c64:	push   esi
64007c65:	push   ebx
64007c66:	push   0x1f0fff
64007c6b:	mov    BYTE PTR [esp+0x4c],0x1
64007c70:	call   DWORD PTR ds:0x640240e0
64007c76:	mov    esi,DWORD PTR [edi]
64007c78:	test   esi,esi
64007c7a:	mov    ebp,eax
64007c7c:	je     0x64007c9a
64007c7e:	call   DWORD PTR ds:0x64024064
64007c84:	push   esi
64007c85:	mov    DWORD PTR [esp+0x18],eax
64007c89:	call   DWORD PTR ds:0x6402406c
64007c8f:	mov    eax,DWORD PTR [esp+0x14]
64007c93:	push   eax
64007c94:	call   DWORD PTR ds:0x64024070
64007c9a:	push   0x8
64007c9c:	mov    DWORD PTR [edi],ebp
64007c9e:	call   0x640138d5
64007ca3:	mov    ebp,eax
64007ca5:	add    esp,0x4
64007ca8:	mov    DWORD PTR [esp+0x18],ebp
64007cac:	test   ebp,ebp
64007cae:	mov    BYTE PTR [esp+0x40],0x2
64007cb3:	je     0x64007cdb
64007cb5:	push   0x0
64007cb7:	lea    esi,[esp+0x20]
64007cbb:	call   0x64007850
64007cc0:	add    esp,0x4
64007cc3:	mov    BYTE PTR [esp+0x40],0x3
64007cc8:	mov    ebx,0x1
64007ccd:	push   ebp
64007cce:	mov    ecx,eax
64007cd0:	mov    DWORD PTR [esp+0x18],ebx
64007cd4:	call   0x6400a8a0
64007cd9:	jmp    0x64007cdd
64007cdb:	xor    eax,eax
64007cdd:	push   eax
64007cde:	lea    ecx,[edi+0x894]
64007ce4:	call   0x64009b20
64007ce9:	test   bl,0x1
64007cec:	je     0x64007d02
64007cee:	cmp    DWORD PTR [esp+0x34],0x10
64007cf3:	jb     0x64007d02
64007cf5:	mov    ecx,DWORD PTR [esp+0x20]
64007cf9:	push   ecx
64007cfa:	call   0x64013644
64007cff:	add    esp,0x4
64007d02:	mov    eax,edi
64007d04:	mov    ecx,DWORD PTR [esp+0x38]
64007d08:	mov    DWORD PTR fs:0x0,ecx
64007d0f:	pop    ecx
64007d10:	pop    edi
64007d11:	pop    esi
64007d12:	pop    ebp
64007d13:	pop    ebx
64007d14:	add    esp,0x30
64007d17:	ret    0x4
64007d1a:	int3   
64007d1b:	int3   
64007d1c:	int3   
64007d1d:	int3   
64007d1e:	int3   
64007d1f:	int3   
64007d20:	push   0xffffffff
64007d22:	push   0x640234ce
64007d27:	mov    eax,fs:0x0
64007d2d:	push   eax
64007d2e:	sub    esp,0x98
64007d34:	push   ebx
64007d35:	push   ebp
64007d36:	push   esi
64007d37:	push   edi
64007d38:	mov    eax,ds:0x64037644
64007d3d:	xor    eax,esp
64007d3f:	push   eax
64007d40:	lea    eax,[esp+0xac]
64007d47:	mov    fs:0x0,eax
64007d4d:	mov    ebx,ecx
64007d4f:	mov    ebp,DWORD PTR [esp+0xbc]
64007d56:	mov    esi,DWORD PTR [ebp+0x3c]
64007d59:	mov    ecx,DWORD PTR [esi+ebp*1+0x50]
64007d5d:	mov    edx,DWORD PTR [esi+ebp*1+0x34]
64007d61:	mov    eax,DWORD PTR [ebx]
64007d63:	push   0x40
64007d65:	add    esi,ebp
64007d67:	push   0x3000
64007d6c:	push   ecx
64007d6d:	push   edx
64007d6e:	push   eax
64007d6f:	call   DWORD PTR ds:0x640240d4
64007d75:	mov    edi,eax
64007d77:	test   edi,edi
64007d79:	jne    0x64007de5
64007d7b:	mov    ecx,DWORD PTR [esi+0x50]
64007d7e:	mov    eax,DWORD PTR [ebx]
64007d80:	push   0x40
64007d82:	push   0x3000
64007d87:	push   ecx
64007d88:	push   edi
64007d89:	push   eax
64007d8a:	call   DWORD PTR ds:0x640240d4
64007d90:	mov    edi,eax
64007d92:	test   edi,edi
64007d94:	jne    0x64007de5
64007d96:	xor    esi,esi
64007d98:	push   esi
64007d99:	push   0x64029616
64007d9e:	lea    ecx,[esp+0x28]
64007da2:	mov    DWORD PTR [esp+0x40],0xf
64007daa:	mov    DWORD PTR [esp+0x3c],esi
64007dae:	mov    BYTE PTR [esp+0x2c],0x0
64007db3:	call   0x64003470
64007db8:	lea    edx,[esp+0x20]
64007dbc:	push   edx
64007dbd:	lea    eax,[esp+0x5c]
64007dc1:	push   eax
64007dc2:	mov    DWORD PTR [esp+0xbc],esi
64007dc9:	call   0x64001430
64007dce:	push   0x6402bdec
64007dd3:	lea    ecx,[esp+0x5c]
64007dd7:	push   ecx
64007dd8:	mov    DWORD PTR [esp+0x60],0x6402b034
64007de0:	call   0x64013872
64007de5:	mov    eax,DWORD PTR [ebx]
64007de7:	lea    edx,[esp+0x1c]
64007deb:	push   edx
64007dec:	mov    DWORD PTR [esp+0x20],0x0
64007df4:	mov    ecx,DWORD PTR [esi+0x54]
64007df7:	push   ecx
64007df8:	push   ebp
64007df9:	push   edi
64007dfa:	push   eax
64007dfb:	call   DWORD PTR ds:0x640240e4
64007e01:	test   eax,eax
64007e03:	jne    0x64007e61
64007e05:	call   DWORD PTR ds:0x64024064
64007e0b:	push   0x0
64007e0d:	push   0x64029616
64007e12:	lea    ecx,[esp+0x28]
64007e16:	mov    DWORD PTR [esp+0x40],0xf
64007e1e:	mov    DWORD PTR [esp+0x3c],0x0
64007e26:	mov    BYTE PTR [esp+0x2c],0x0
64007e2b:	call   0x64003470
64007e30:	lea    edx,[esp+0x20]
64007e34:	push   edx
64007e35:	lea    eax,[esp+0x5c]
64007e39:	push   eax
64007e3a:	mov    DWORD PTR [esp+0xbc],0x1
64007e45:	call   0x64001430
64007e4a:	push   0x6402bdec
64007e4f:	lea    ecx,[esp+0x5c]
64007e53:	push   ecx
64007e54:	mov    DWORD PTR [esp+0x60],0x6402b034
64007e5c:	call   0x64013872
64007e61:	movzx  eax,WORD PTR [esi+0x6]
64007e65:	sub    eax,0x1
64007e68:	movzx  edx,WORD PTR [esi+0x14]
64007e6c:	lea    ebp,[edx+esi*1+0x18]
64007e70:	mov    DWORD PTR [esp+0x18],0x0
64007e78:	js     0x64007ec1
64007e7a:	add    ebp,0x10
64007e7d:	lea    ecx,[ecx+0x0]
64007e80:	mov    ecx,DWORD PTR [ebp+0x0]
64007e83:	test   ecx,ecx
64007e85:	je     0x64007ea8
64007e87:	mov    edx,DWORD PTR [ebp-0x4]
64007e8a:	mov    eax,DWORD PTR [ebx]
64007e8c:	push   0x0
64007e8e:	push   ecx
64007e8f:	mov    ecx,DWORD PTR [ebp+0x4]
64007e92:	add    ecx,DWORD PTR [esp+0xc4]
64007e99:	add    edx,edi
64007e9b:	push   ecx
64007e9c:	push   edx
64007e9d:	push   eax
64007e9e:	call   DWORD PTR ds:0x640240e4
64007ea4:	test   eax,eax
64007ea6:	je     0x64007eec
64007ea8:	movzx  ecx,WORD PTR [esi+0x6]
64007eac:	mov    eax,DWORD PTR [esp+0x18]
64007eb0:	add    eax,0x1
64007eb3:	sub    ecx,0x1
64007eb6:	add    ebp,0x28
64007eb9:	cmp    eax,ecx
64007ebb:	mov    DWORD PTR [esp+0x18],eax
64007ebf:	jle    0x64007e80
64007ec1:	mov    eax,edi
64007ec3:	cdq    
64007ec4:	mov    DWORD PTR [ebx+0x70],eax
64007ec7:	mov    DWORD PTR [ebx+0x74],edx
64007eca:	mov    edx,DWORD PTR [esi+0x50]
64007ecd:	mov    DWORD PTR [ebx+0x78],edx
64007ed0:	mov    ecx,DWORD PTR [esp+0xac]
64007ed7:	mov    DWORD PTR fs:0x0,ecx
64007ede:	pop    ecx
64007edf:	pop    edi
64007ee0:	pop    esi
64007ee1:	pop    ebp
64007ee2:	pop    ebx
64007ee3:	add    esp,0xa4
64007ee9:	ret    0x4
64007eec:	call   DWORD PTR ds:0x64024064
64007ef2:	mov    ebx,DWORD PTR [ebx]
64007ef4:	push   0x8000
64007ef9:	push   0x0
64007efb:	push   edi
64007efc:	push   ebx
64007efd:	call   DWORD PTR ds:0x640240c4
64007f03:	push   0x0
64007f05:	push   0x64029616
64007f0a:	lea    ecx,[esp+0x44]
64007f0e:	mov    DWORD PTR [esp+0x5c],0xf
64007f16:	mov    DWORD PTR [esp+0x58],0x0
64007f1e:	mov    BYTE PTR [esp+0x48],0x0
64007f23:	call   0x64003470
64007f28:	lea    edx,[esp+0x3c]
64007f2c:	push   edx
64007f2d:	lea    eax,[esp+0x84]
64007f34:	push   eax
64007f35:	mov    DWORD PTR [esp+0xbc],0x2
64007f40:	call   0x64001430
64007f45:	push   0x6402bdec
64007f4a:	lea    ecx,[esp+0x84]
64007f51:	push   ecx
64007f52:	mov    DWORD PTR [esp+0x88],0x6402b034
64007f5d:	call   0x64013872
64007f62:	int3   
64007f63:	int3   
64007f64:	int3   
64007f65:	int3   
64007f66:	int3   
64007f67:	int3   
64007f68:	int3   
64007f69:	int3   
64007f6a:	int3   
64007f6b:	int3   
64007f6c:	int3   
64007f6d:	int3   
64007f6e:	int3   
64007f6f:	int3   
64007f70:	mov    eax,DWORD PTR [esp+0x4]
64007f74:	push   esi
64007f75:	push   eax
64007f76:	mov    esi,ecx
64007f78:	call   0x64001540
64007f7d:	mov    DWORD PTR [esi],0x6402b034
64007f83:	mov    eax,esi
64007f85:	pop    esi
64007f86:	ret    0x4
64007f89:	int3   
64007f8a:	int3   
64007f8b:	int3   
64007f8c:	int3   
64007f8d:	int3   
64007f8e:	int3   
64007f8f:	int3   
64007f90:	push   0xffffffff
64007f92:	push   0x640238fe
64007f97:	mov    eax,fs:0x0
64007f9d:	push   eax
64007f9e:	sub    esp,0xa8
64007fa4:	push   ebx
64007fa5:	push   ebp
64007fa6:	push   esi
64007fa7:	mov    eax,ds:0x64037644
64007fac:	xor    eax,esp
64007fae:	push   eax
64007faf:	lea    eax,[esp+0xb8]
64007fb6:	mov    fs:0x0,eax
64007fbc:	lea    eax,[esp+0x18]
64007fc0:	push   eax
64007fc1:	call   DWORD PTR ds:0x64024080
64007fc7:	lea    ecx,[esp+0x38]
64007fcb:	push   ecx
64007fcc:	lea    edx,[esp+0x1c]
64007fd0:	push   edx
64007fd1:	call   DWORD PTR ds:0x64024060
64007fd7:	mov    ecx,DWORD PTR [esp+0x38]
64007fdb:	mov    eax,DWORD PTR [esp+0x3c]
64007fdf:	sub    ecx,0x2a69c000
64007fe5:	push   0x2
64007fe7:	sbb    eax,0xc9
64007fec:	xor    ebx,ebx
64007fee:	push   ebx
64007fef:	push   ebx
64007ff0:	mov    DWORD PTR [edi+0x80],ecx
64007ff6:	lea    ecx,[esp+0x40]
64007ffa:	mov    DWORD PTR [edi+0x84],eax
64008000:	mov    eax,DWORD PTR [edi]
64008002:	push   ecx
64008003:	push   eax
64008004:	push   eax
64008005:	mov    DWORD PTR [esp+0x4c],ebx
64008009:	call   DWORD PTR ds:0x6402403c
6400800f:	push   eax
64008010:	call   DWORD PTR ds:0x640240c0
64008016:	mov    eax,DWORD PTR [esp+0x34]
6400801a:	cdq    
6400801b:	push   0x6402a874
64008020:	push   0x9
64008022:	mov    ecx,0x64029964
64008027:	mov    DWORD PTR [edi+0x68],eax
6400802a:	mov    DWORD PTR [edi+0x6c],edx
6400802d:	call   0x64003090
64008032:	add    esp,0x4
64008035:	mov    edx,esp
64008037:	mov    DWORD PTR [esp+0x3c],esp
6400803b:	push   edx
6400803c:	mov    ecx,eax
6400803e:	call   0x64002ab0
64008043:	call   0x64007a20
64008048:	add    esp,0x4
6400804b:	push   eax
6400804c:	lea    ecx,[esp+0x18]
64008050:	call   0x64009ca0
64008055:	lea    ecx,[esp+0x14]
64008059:	mov    DWORD PTR [esp+0xc0],ebx
64008060:	call   0x64009d00
64008065:	push   0x6402a8b0
6400806a:	mov    esi,eax
6400806c:	mov    ebp,DWORD PTR [esi]
6400806e:	push   0xd
64008070:	push   0x6402a8e8
64008075:	call   0x64002e70
6400807a:	add    esp,0xc
6400807d:	push   eax
6400807e:	mov    eax,DWORD PTR [ebp+0x0]
64008081:	mov    ecx,esi
64008083:	call   eax
64008085:	lea    ecx,[esp+0x14]
64008089:	mov    DWORD PTR [esp+0x58],eax
6400808d:	call   0x64009d00
64008092:	push   0x6402a8f8
64008097:	mov    esi,eax
64008099:	mov    ebp,DWORD PTR [esi]
6400809b:	push   0xf
6400809d:	push   0x6402a934
640080a2:	call   0x64002e70
640080a7:	mov    edx,DWORD PTR [ebp+0x0]
640080aa:	add    esp,0xc
640080ad:	push   eax
640080ae:	mov    ecx,esi
640080b0:	call   edx
640080b2:	lea    ecx,[esp+0x14]
640080b6:	mov    DWORD PTR [esp+0x48],eax
640080ba:	call   0x64009d00
640080bf:	mov    esi,eax
640080c1:	mov    ebp,DWORD PTR [esi]
640080c3:	push   0x6402a944
640080c8:	push   0xe
640080ca:	push   0x6402a970
640080cf:	call   0x64002e70
640080d4:	add    esp,0xc
640080d7:	push   eax
640080d8:	mov    eax,DWORD PTR [ebp+0x0]
640080db:	mov    ecx,esi
640080dd:	call   eax
640080df:	lea    ecx,[esp+0x14]
640080e3:	mov    DWORD PTR [esp+0x50],eax
640080e7:	call   0x64009d00
640080ec:	push   0x6402a980
640080f1:	mov    esi,eax
640080f3:	mov    ebp,DWORD PTR [esi]
640080f5:	push   0x12
640080f7:	push   0x6402a9b0
640080fc:	call   0x64002e70
64008101:	mov    edx,DWORD PTR [ebp+0x0]
64008104:	add    esp,0xc
64008107:	push   eax
64008108:	mov    ecx,esi
6400810a:	call   edx
6400810c:	lea    ecx,[esp+0x14]
64008110:	mov    DWORD PTR [esp+0x5c],eax
64008114:	call   0x64009d00
64008119:	push   0x6402a9c4
6400811e:	mov    esi,eax
64008120:	mov    ebp,DWORD PTR [esi]
64008122:	push   0x14
64008124:	push   0x6402a9f0
64008129:	call   0x64002e70
6400812e:	add    esp,0xc
64008131:	push   eax
64008132:	mov    eax,DWORD PTR [ebp+0x0]
64008135:	mov    ecx,esi
64008137:	call   eax
64008139:	lea    ecx,[esp+0x14]
6400813d:	mov    DWORD PTR [esp+0x4c],eax
64008141:	call   0x64009d00
64008146:	push   0x6402aa08
6400814b:	mov    esi,eax
6400814d:	mov    ebp,DWORD PTR [esi]
6400814f:	push   0xa
64008151:	push   0x6402aa34
64008156:	call   0x64002e70
6400815b:	mov    edx,DWORD PTR [ebp+0x0]
6400815e:	add    esp,0xc
64008161:	push   eax
64008162:	mov    ecx,esi
64008164:	call   edx
64008166:	lea    ecx,[esp+0x14]
6400816a:	mov    DWORD PTR [esp+0x54],eax
6400816e:	call   0x64009d00
64008173:	push   0x6402aa40
64008178:	mov    esi,eax
6400817a:	mov    ebp,DWORD PTR [esi]
6400817c:	push   0x15
6400817e:	push   0x6402aa74
64008183:	call   0x64002e70
64008188:	add    esp,0xc
6400818b:	push   eax
6400818c:	mov    eax,DWORD PTR [ebp+0x0]
6400818f:	mov    ecx,esi
64008191:	call   eax
64008193:	lea    ecx,[esp+0x14]
64008197:	mov    DWORD PTR [esp+0x40],eax
6400819b:	call   0x64009d00
640081a0:	push   0x6402aa8c
640081a5:	mov    esi,eax
640081a7:	mov    ebp,DWORD PTR [esi]
640081a9:	push   0x7
640081ab:	push   0x6402aab8
640081b0:	call   0x64002e70
640081b5:	mov    edx,DWORD PTR [ebp+0x0]
640081b8:	add    esp,0xc
640081bb:	push   eax
640081bc:	mov    ecx,esi
640081be:	call   edx
640081c0:	lea    ecx,[esp+0x14]
640081c4:	mov    DWORD PTR [esp+0x44],eax
640081c8:	call   0x64009d00
640081cd:	push   0x6402aac0
640081d2:	mov    esi,eax
640081d4:	mov    ebp,DWORD PTR [esi]
640081d6:	push   0x14
640081d8:	push   0x6402aae4
640081dd:	call   0x64002e70
640081e2:	add    esp,0xc
640081e5:	push   eax
640081e6:	mov    eax,DWORD PTR [ebp+0x0]
640081e9:	mov    ecx,esi
640081eb:	call   eax
640081ed:	lea    ecx,[esp+0x60]
640081f1:	mov    DWORD PTR [esp+0x38],eax
640081f5:	call   0x64009b90
640081fa:	mov    BYTE PTR [esp+0xc0],0x1
64008202:	mov    ecx,DWORD PTR [edi+0x4]
64008205:	push   ecx
64008206:	lea    ecx,[esp+0x64]
6400820a:	call   0x64007ac0
6400820f:	push   0x6402aafc
64008214:	push   0xf
64008216:	push   0x6402ab38
6400821b:	call   0x64002e70
64008220:	mov    ecx,eax
64008222:	add    esp,0xc
64008225:	mov    DWORD PTR [esp+0x30],0xf
6400822d:	mov    DWORD PTR [esp+0x2c],ebx
64008231:	mov    BYTE PTR [esp+0x1c],bl
64008235:	lea    esi,[ecx+0x1]
64008238:	mov    dl,BYTE PTR [ecx]
6400823a:	add    ecx,0x1
6400823d:	cmp    dl,bl
6400823f:	jne    0x64008238
64008241:	sub    ecx,esi
64008243:	push   ecx
64008244:	push   eax
64008245:	lea    ecx,[esp+0x20]
64008249:	call   0x64003470
6400824e:	lea    edx,[esp+0x18]
64008252:	lea    ebp,[edi+0x894]
64008258:	mov    BYTE PTR [esp+0xc0],0x2
64008260:	mov    esi,DWORD PTR [edi]
64008262:	push   edx
64008263:	mov    ecx,ebp
64008265:	call   0x64009d00
6400826a:	call   0x6400a930
6400826f:	add    eax,DWORD PTR [edi+0x88c]
64008275:	push   eax
64008276:	mov    eax,DWORD PTR [esp+0x5c]
6400827a:	push   eax
6400827b:	call   0x6400ad60
64008280:	cdq    
64008281:	add    esp,0x8
64008284:	mov    BYTE PTR [esp+0xc0],0x1
6400828c:	cmp    DWORD PTR [esp+0x30],0x10
64008291:	mov    DWORD PTR [edi+0x8],eax
64008294:	mov    DWORD PTR [edi+0xc],edx
64008297:	jb     0x640082a6
64008299:	mov    ecx,DWORD PTR [esp+0x1c]
6400829d:	push   ecx
6400829e:	call   0x64013644
640082a3:	add    esp,0x4
640082a6:	push   0x6402ab48
640082ab:	push   0x11
640082ad:	push   0x6402ab88
640082b2:	call   0x64002e70
640082b7:	mov    esi,eax
640082b9:	mov    ecx,esi
640082bb:	add    esp,0xc
640082be:	mov    DWORD PTR [esp+0x30],0xf
640082c6:	mov    DWORD PTR [esp+0x2c],ebx
640082ca:	mov    BYTE PTR [esp+0x1c],bl
640082ce:	lea    edx,[ecx+0x1]
640082d1:	mov    al,BYTE PTR [ecx]
640082d3:	add    ecx,0x1
640082d6:	cmp    al,bl
640082d8:	jne    0x640082d1
640082da:	sub    ecx,edx
640082dc:	push   ecx
640082dd:	push   esi
640082de:	lea    ecx,[esp+0x20]
640082e2:	call   0x64003470
640082e7:	lea    edx,[esp+0x18]
640082eb:	mov    BYTE PTR [esp+0xc0],0x3
640082f3:	mov    esi,DWORD PTR [edi]
640082f5:	push   edx
640082f6:	mov    ecx,ebp
640082f8:	call   0x64009d00
640082fd:	call   0x6400a930
64008302:	add    eax,DWORD PTR [edi+0x88c]
64008308:	push   eax
64008309:	mov    eax,DWORD PTR [esp+0x4c]
6400830d:	push   eax
6400830e:	call   0x6400ad60
64008313:	cdq    
64008314:	add    esp,0x8
64008317:	mov    BYTE PTR [esp+0xc0],0x1
6400831f:	cmp    DWORD PTR [esp+0x30],0x10
64008324:	mov    DWORD PTR [edi+0x10],eax
64008327:	mov    DWORD PTR [edi+0x14],edx
6400832a:	jb     0x64008339
6400832c:	mov    ecx,DWORD PTR [esp+0x1c]
64008330:	push   ecx
64008331:	call   0x64013644
64008336:	add    esp,0x4
64008339:	push   0x6402ab9c
6400833e:	push   0x10
64008340:	push   0x6402abc0
64008345:	call   0x64002e70
6400834a:	mov    esi,eax
6400834c:	mov    ecx,esi
6400834e:	add    esp,0xc
64008351:	mov    DWORD PTR [esp+0x30],0xf
64008359:	mov    DWORD PTR [esp+0x2c],ebx
6400835d:	mov    BYTE PTR [esp+0x1c],bl
64008361:	lea    eax,[ecx+0x1]
64008364:	mov    dl,BYTE PTR [ecx]
64008366:	add    ecx,0x1
64008369:	cmp    dl,bl
6400836b:	jne    0x64008364
6400836d:	sub    ecx,eax
6400836f:	push   ecx
64008370:	push   esi
64008371:	lea    ecx,[esp+0x20]
64008375:	call   0x64003470
6400837a:	lea    edx,[esp+0x18]
6400837e:	mov    BYTE PTR [esp+0xc0],0x4
64008386:	mov    esi,DWORD PTR [edi]
64008388:	push   edx
64008389:	mov    ecx,ebp
6400838b:	call   0x64009d00
64008390:	call   0x6400a930
64008395:	add    eax,DWORD PTR [edi+0x88c]
6400839b:	push   eax
6400839c:	mov    eax,DWORD PTR [esp+0x54]
640083a0:	push   eax
640083a1:	call   0x6400ad60
640083a6:	cdq    
640083a7:	add    esp,0x8
640083aa:	mov    BYTE PTR [esp+0xc0],0x1
640083b2:	cmp    DWORD PTR [esp+0x30],0x10
640083b7:	mov    DWORD PTR [edi+0x28],eax
640083ba:	mov    DWORD PTR [edi+0x2c],edx
640083bd:	jb     0x640083cc
640083bf:	mov    ecx,DWORD PTR [esp+0x1c]
640083c3:	push   ecx
640083c4:	call   0x64013644
640083c9:	add    esp,0x4
640083cc:	push   0x6402abd4
640083d1:	push   0x14
640083d3:	push   0x6402ac14
640083d8:	call   0x64002e70
640083dd:	mov    esi,eax
640083df:	mov    ecx,esi
640083e1:	add    esp,0xc
640083e4:	mov    DWORD PTR [esp+0x30],0xf
640083ec:	mov    DWORD PTR [esp+0x2c],ebx
640083f0:	mov    BYTE PTR [esp+0x1c],bl
640083f4:	lea    eax,[ecx+0x1]
640083f7:	mov    dl,BYTE PTR [ecx]
640083f9:	add    ecx,0x1
640083fc:	cmp    dl,bl
640083fe:	jne    0x640083f7
64008400:	sub    ecx,eax
64008402:	push   ecx
64008403:	push   esi
64008404:	lea    ecx,[esp+0x20]
64008408:	call   0x64003470
6400840d:	lea    edx,[esp+0x18]
64008411:	mov    BYTE PTR [esp+0xc0],0x5
64008419:	mov    esi,DWORD PTR [edi]
6400841b:	push   edx
6400841c:	mov    ecx,ebp
6400841e:	call   0x64009d00
64008423:	call   0x6400a930
64008428:	add    eax,DWORD PTR [edi+0x88c]
6400842e:	push   eax
6400842f:	mov    eax,DWORD PTR [esp+0x60]
64008433:	push   eax
64008434:	call   0x6400ad60
64008439:	cdq    
6400843a:	add    esp,0x8
6400843d:	mov    BYTE PTR [esp+0xc0],0x1
64008445:	cmp    DWORD PTR [esp+0x30],0x10
6400844a:	mov    DWORD PTR [edi+0x18],eax
6400844d:	mov    DWORD PTR [edi+0x1c],edx
64008450:	jb     0x6400845f
64008452:	mov    ecx,DWORD PTR [esp+0x1c]
64008456:	push   ecx
64008457:	call   0x64013644
6400845c:	add    esp,0x4
6400845f:	push   0x6402ac2c
64008464:	push   0x16
64008466:	push   0x6402ac64
6400846b:	call   0x64002e70
64008470:	mov    esi,eax
64008472:	mov    ecx,esi
64008474:	add    esp,0xc
64008477:	mov    DWORD PTR [esp+0x30],0xf
6400847f:	mov    DWORD PTR [esp+0x2c],ebx
64008483:	mov    BYTE PTR [esp+0x1c],bl
64008487:	lea    eax,[ecx+0x1]
6400848a:	lea    ebx,[ebx+0x0]
64008490:	mov    dl,BYTE PTR [ecx]
64008492:	add    ecx,0x1
64008495:	cmp    dl,bl
64008497:	jne    0x64008490
64008499:	sub    ecx,eax
6400849b:	push   ecx
6400849c:	push   esi
6400849d:	lea    ecx,[esp+0x20]
640084a1:	call   0x64003470
640084a6:	lea    edx,[esp+0x18]
640084aa:	mov    BYTE PTR [esp+0xc0],0x6
640084b2:	mov    esi,DWORD PTR [edi]
640084b4:	push   edx
640084b5:	mov    ecx,ebp
640084b7:	call   0x64009d00
640084bc:	call   0x6400a930
640084c1:	add    eax,DWORD PTR [edi+0x88c]
640084c7:	push   eax
640084c8:	mov    eax,DWORD PTR [esp+0x50]
640084cc:	push   eax
640084cd:	call   0x6400ad60
640084d2:	cdq    
640084d3:	add    esp,0x8
640084d6:	mov    BYTE PTR [esp+0xc0],0x1
640084de:	cmp    DWORD PTR [esp+0x30],0x10
640084e3:	mov    DWORD PTR [edi+0x20],eax
640084e6:	mov    DWORD PTR [edi+0x24],edx
640084e9:	jb     0x640084f8
640084eb:	mov    ecx,DWORD PTR [esp+0x1c]
640084ef:	push   ecx
640084f0:	call   0x64013644
640084f5:	add    esp,0x4
640084f8:	push   0x6402ac7c
640084fd:	push   0x17
640084ff:	push   0x6402aca4
64008504:	call   0x64002e70
64008509:	mov    esi,eax
6400850b:	mov    ecx,esi
6400850d:	add    esp,0xc
64008510:	mov    DWORD PTR [esp+0x30],0xf
64008518:	mov    DWORD PTR [esp+0x2c],ebx
6400851c:	mov    BYTE PTR [esp+0x1c],bl
64008520:	lea    eax,[ecx+0x1]
64008523:	mov    dl,BYTE PTR [ecx]
64008525:	add    ecx,0x1
64008528:	cmp    dl,bl
6400852a:	jne    0x64008523
6400852c:	sub    ecx,eax
6400852e:	push   ecx
6400852f:	push   esi
64008530:	lea    ecx,[esp+0x20]
64008534:	call   0x64003470
64008539:	lea    edx,[esp+0x18]
6400853d:	mov    BYTE PTR [esp+0xc0],0x7
64008545:	mov    esi,DWORD PTR [edi]
64008547:	push   edx
64008548:	mov    ecx,ebp
6400854a:	call   0x64009d00
6400854f:	call   0x6400a930
64008554:	add    eax,DWORD PTR [edi+0x88c]
6400855a:	push   eax
6400855b:	mov    eax,DWORD PTR [esp+0x44]
6400855f:	push   eax
64008560:	call   0x6400ad60
64008565:	cdq    
64008566:	add    esp,0x8
64008569:	mov    BYTE PTR [esp+0xc0],0x1
64008571:	cmp    DWORD PTR [esp+0x30],0x10
64008576:	mov    DWORD PTR [edi+0x30],eax
64008579:	mov    DWORD PTR [edi+0x34],edx
6400857c:	jb     0x6400858b
6400857e:	mov    ecx,DWORD PTR [esp+0x1c]
64008582:	push   ecx
64008583:	call   0x64013644
64008588:	add    esp,0x4
6400858b:	push   0x6402acbc
64008590:	push   0xc
64008592:	push   0x6402ace0
64008597:	call   0x64002e70
6400859c:	mov    esi,eax
6400859e:	mov    ecx,esi
640085a0:	add    esp,0xc
640085a3:	mov    DWORD PTR [esp+0x30],0xf
640085ab:	mov    DWORD PTR [esp+0x2c],ebx
640085af:	mov    BYTE PTR [esp+0x1c],bl
640085b3:	lea    edx,[ecx+0x1]
640085b6:	mov    al,BYTE PTR [ecx]
640085b8:	add    ecx,0x1
640085bb:	cmp    al,bl
640085bd:	jne    0x640085b6
640085bf:	sub    ecx,edx
640085c1:	push   ecx
640085c2:	push   esi
640085c3:	lea    ecx,[esp+0x20]
640085c7:	call   0x64003470
640085cc:	lea    edx,[esp+0x18]
640085d0:	mov    BYTE PTR [esp+0xc0],0x8
640085d8:	mov    esi,DWORD PTR [edi]
640085da:	push   edx
640085db:	mov    ecx,ebp
640085dd:	call   0x64009d00
640085e2:	call   0x6400a930
640085e7:	add    eax,DWORD PTR [edi+0x88c]
640085ed:	push   eax
640085ee:	mov    eax,DWORD PTR [esp+0x58]
640085f2:	push   eax
640085f3:	call   0x6400ad60
640085f8:	cdq    
640085f9:	add    esp,0x8
640085fc:	mov    BYTE PTR [esp+0xc0],0x1
64008604:	cmp    DWORD PTR [esp+0x30],0x10
64008609:	mov    DWORD PTR [edi+0x38],eax
6400860c:	mov    DWORD PTR [edi+0x3c],edx
6400860f:	jb     0x6400861e
64008611:	mov    ecx,DWORD PTR [esp+0x1c]
64008615:	push   ecx
64008616:	call   0x64013644
6400861b:	add    esp,0x4
6400861e:	push   0x6402acf0
64008623:	push   0x9
64008625:	push   0x6402ad30
6400862a:	call   0x64002e70
6400862f:	mov    esi,eax
64008631:	mov    ecx,esi
64008633:	add    esp,0xc
64008636:	mov    DWORD PTR [esp+0x30],0xf
6400863e:	mov    DWORD PTR [esp+0x2c],ebx
64008642:	mov    BYTE PTR [esp+0x1c],bl
64008646:	lea    eax,[ecx+0x1]
64008649:	lea    esp,[esp+0x0]
64008650:	mov    dl,BYTE PTR [ecx]
64008652:	add    ecx,0x1
64008655:	cmp    dl,bl
64008657:	jne    0x64008650
64008659:	sub    ecx,eax
6400865b:	push   ecx
6400865c:	push   esi
6400865d:	lea    ecx,[esp+0x20]
64008661:	call   0x64003470
64008666:	lea    edx,[esp+0x18]
6400866a:	mov    BYTE PTR [esp+0xc0],0x9
64008672:	mov    esi,DWORD PTR [edi]
64008674:	push   edx
64008675:	mov    ecx,ebp
64008677:	call   0x64009d00
6400867c:	call   0x6400a930
64008681:	add    eax,DWORD PTR [edi+0x88c]
64008687:	push   eax
64008688:	mov    eax,DWORD PTR [esp+0x48]
6400868c:	push   eax
6400868d:	call   0x6400ad60
64008692:	cdq    
64008693:	add    esp,0x8
64008696:	mov    BYTE PTR [esp+0xc0],0x1
6400869e:	cmp    DWORD PTR [esp+0x30],0x10
640086a3:	mov    DWORD PTR [edi+0x40],eax
640086a6:	mov    DWORD PTR [edi+0x44],edx
640086a9:	jb     0x640086b8
640086ab:	mov    ecx,DWORD PTR [esp+0x1c]
640086af:	push   ecx
640086b0:	call   0x64013644
640086b5:	add    esp,0x4
640086b8:	push   0x6402ad3c
640086bd:	push   0x16
640086bf:	push   0x6402ad60
640086c4:	call   0x64002e70
640086c9:	mov    esi,eax
640086cb:	mov    ecx,esi
640086cd:	add    esp,0xc
640086d0:	mov    DWORD PTR [esp+0x30],0xf
640086d8:	mov    DWORD PTR [esp+0x2c],ebx
640086dc:	mov    BYTE PTR [esp+0x1c],bl
640086e0:	lea    eax,[ecx+0x1]
640086e3:	mov    dl,BYTE PTR [ecx]
640086e5:	add    ecx,0x1
640086e8:	cmp    dl,bl
640086ea:	jne    0x640086e3
640086ec:	sub    ecx,eax
640086ee:	push   ecx
640086ef:	push   esi
640086f0:	lea    ecx,[esp+0x20]
640086f4:	call   0x64003470
640086f9:	lea    edx,[esp+0x18]
640086fd:	mov    BYTE PTR [esp+0xc0],0xa
64008705:	mov    esi,DWORD PTR [edi]
64008707:	push   edx
64008708:	mov    ecx,ebp
6400870a:	call   0x64009d00
6400870f:	call   0x6400a930
64008714:	add    eax,DWORD PTR [edi+0x88c]
6400871a:	push   eax
6400871b:	mov    eax,DWORD PTR [esp+0x3c]
6400871f:	push   eax
64008720:	call   0x6400ad60
64008725:	cdq    
64008726:	add    esp,0x8
64008729:	mov    BYTE PTR [esp+0xc0],0x1
64008731:	cmp    DWORD PTR [esp+0x30],0x10
64008736:	mov    DWORD PTR [edi+0x48],eax
64008739:	mov    DWORD PTR [edi+0x4c],edx
6400873c:	jb     0x6400874b
6400873e:	mov    ecx,DWORD PTR [esp+0x1c]
64008742:	push   ecx
64008743:	call   0x64013644
64008748:	add    esp,0x4
6400874b:	mov    edx,DWORD PTR [edi+0x8]
6400874e:	or     edx,DWORD PTR [edi+0xc]
64008751:	je     0x640087e4
64008757:	mov    eax,DWORD PTR [edi+0x10]
6400875a:	or     eax,DWORD PTR [edi+0x14]
6400875d:	je     0x640087e4
64008763:	mov    ecx,DWORD PTR [edi+0x28]
64008766:	or     ecx,DWORD PTR [edi+0x2c]
64008769:	je     0x640087e4
6400876b:	mov    edx,DWORD PTR [edi+0x18]
6400876e:	or     edx,DWORD PTR [edi+0x1c]
64008771:	je     0x640087e4
64008773:	mov    eax,DWORD PTR [edi+0x20]
64008776:	or     eax,DWORD PTR [edi+0x24]
64008779:	je     0x640087e4
6400877b:	mov    ecx,DWORD PTR [edi+0x30]
6400877e:	or     ecx,DWORD PTR [edi+0x34]
64008781:	je     0x640087e4
64008783:	mov    edx,DWORD PTR [edi+0x38]
64008786:	or     edx,DWORD PTR [edi+0x3c]
64008789:	je     0x640087e4
6400878b:	mov    eax,DWORD PTR [edi+0x40]
6400878e:	or     eax,DWORD PTR [edi+0x44]
64008791:	je     0x640087e4
64008793:	mov    ecx,DWORD PTR [edi+0x48]
64008796:	or     ecx,DWORD PTR [edi+0x4c]
64008799:	je     0x640087e4
6400879b:	push   edi
6400879c:	call   0x640089a0
640087a1:	lea    esi,[esp+0x60]
640087a5:	call   0x64007bc0
640087aa:	mov    ecx,esi
640087ac:	call   0x64009c80
640087b1:	call   DWORD PTR ds:0x64024038
640087b7:	lea    ecx,[esp+0x14]
640087bb:	mov    DWORD PTR [esp+0xc0],0xffffffff
640087c6:	call   0x64009cc0
640087cb:	mov    ecx,DWORD PTR [esp+0xb8]
640087d2:	mov    DWORD PTR fs:0x0,ecx
640087d9:	pop    ecx
640087da:	pop    esi
640087db:	pop    ebp
640087dc:	pop    ebx
640087dd:	add    esp,0xb4
640087e3:	ret    
640087e4:	push   ebx
640087e5:	push   0x64029616
640087ea:	lea    ecx,[esp+0x7c]
640087ee:	mov    DWORD PTR [esp+0x94],0xf
640087f9:	mov    DWORD PTR [esp+0x90],ebx
64008800:	mov    BYTE PTR [esp+0x80],bl
64008807:	call   0x64003470
6400880c:	lea    edx,[esp+0x74]
64008810:	push   edx
64008811:	lea    eax,[esp+0x94]
64008818:	push   eax
64008819:	mov    BYTE PTR [esp+0xc8],0xb
64008821:	call   0x64001430
64008826:	push   0x6402bcb0
6400882b:	lea    ecx,[esp+0x94]
64008832:	push   ecx
64008833:	call   0x64013872
64008838:	int3   
64008839:	int3   
6400883a:	int3   
6400883b:	int3   
6400883c:	int3   
6400883d:	int3   
6400883e:	int3   
6400883f:	int3   
64008840:	push   0xffffffff
64008842:	push   0x64023858
64008847:	mov    eax,fs:0x0
6400884d:	push   eax
6400884e:	sub    esp,0x1c
64008851:	push   ebx
64008852:	push   ebp
64008853:	push   edi
64008854:	mov    eax,ds:0x64037644
64008859:	xor    eax,esp
6400885b:	push   eax
6400885c:	lea    eax,[esp+0x2c]
64008860:	mov    fs:0x0,eax
64008866:	mov    eax,DWORD PTR [esi]
64008868:	mov    ebx,DWORD PTR ds:0x640240d4
6400886e:	push   0x4
64008870:	push   0x3000
64008875:	push   0x880
6400887a:	push   0x0
6400887c:	push   eax
6400887d:	call   ebx
6400887f:	lea    edi,[esi+0x894]
64008885:	mov    ecx,edi
64008887:	mov    DWORD PTR [esi+0x888],eax
6400888d:	call   0x64009d00
64008892:	mov    eax,DWORD PTR [eax]
64008894:	mov    ebp,DWORD PTR [eax+0x6]
64008897:	mov    eax,DWORD PTR [esi]
64008899:	push   0x40
6400889b:	push   0x3000
640088a0:	push   ebp
640088a1:	push   0x0
640088a3:	push   eax
640088a4:	call   ebx
640088a6:	push   eax
640088a7:	mov    ecx,edi
640088a9:	mov    DWORD PTR [esi+0x88c],eax
640088af:	call   0x64009d00
640088b4:	call   0x6400aa20
640088b9:	mov    ecx,edi
640088bb:	call   0x64009d00
640088c0:	mov    eax,DWORD PTR [eax]
640088c2:	mov    ecx,DWORD PTR [esi]
640088c4:	push   0x0
640088c6:	push   ebp
640088c7:	mov    ebp,DWORD PTR ds:0x640240e4
640088cd:	add    eax,0x12
640088d0:	push   eax
640088d1:	mov    eax,DWORD PTR [esi+0x88c]
640088d7:	push   eax
640088d8:	push   ecx
640088d9:	call   ebp
640088db:	test   eax,eax
640088dd:	jne    0x640088e5
640088df:	call   DWORD PTR ds:0x64024064
640088e5:	push   0x6402ad78
640088ea:	push   0xe
640088ec:	push   0x6402adb4
640088f1:	call   0x64002e70
640088f6:	mov    ecx,eax
640088f8:	add    esp,0xc
640088fb:	mov    DWORD PTR [esp+0x28],0xf
64008903:	mov    DWORD PTR [esp+0x24],0x0
6400890b:	mov    BYTE PTR [esp+0x14],0x0
64008910:	lea    ebx,[ecx+0x1]
64008913:	mov    dl,BYTE PTR [ecx]
64008915:	add    ecx,0x1
64008918:	test   dl,dl
6400891a:	jne    0x64008913
6400891c:	sub    ecx,ebx
6400891e:	push   ecx
6400891f:	push   eax
64008920:	lea    ecx,[esp+0x18]
64008924:	call   0x64003470
64008929:	lea    ecx,[esp+0x10]
6400892d:	push   ecx
6400892e:	xor    ebx,ebx
64008930:	mov    ecx,edi
64008932:	mov    DWORD PTR [esp+0x38],ebx
64008936:	call   0x64009d00
6400893b:	call   0x6400a930
64008940:	cmp    DWORD PTR [esp+0x28],0x10
64008945:	mov    edi,eax
64008947:	jb     0x64008956
64008949:	mov    edx,DWORD PTR [esp+0x14]
6400894d:	push   edx
6400894e:	call   0x64013644
64008953:	add    esp,0x4
64008956:	mov    eax,DWORD PTR [esi]
64008958:	push   ebx
64008959:	push   0x4
6400895b:	lea    ecx,[esi+0x888]
64008961:	push   ecx
64008962:	mov    ecx,DWORD PTR [esi+0x88c]
64008968:	add    ecx,edi
6400896a:	push   ecx
6400896b:	push   eax
6400896c:	mov    DWORD PTR [esp+0x3c],0xf
64008974:	mov    DWORD PTR [esp+0x38],ebx
64008978:	mov    BYTE PTR [esp+0x28],0x0
6400897d:	call   ebp
6400897f:	test   eax,eax
64008981:	jne    0x64008989
64008983:	call   DWORD PTR ds:0x64024064
64008989:	mov    ecx,DWORD PTR [esp+0x2c]
6400898d:	mov    DWORD PTR fs:0x0,ecx
64008994:	pop    ecx
64008995:	pop    edi
64008996:	pop    ebp
64008997:	pop    ebx
64008998:	add    esp,0x28
6400899b:	ret    
6400899c:	int3   
6400899d:	int3   
6400899e:	int3   
6400899f:	int3   
640089a0:	push   0xffffffff
640089a2:	push   0x64023488
640089a7:	mov    eax,fs:0x0
640089ad:	push   eax
640089ae:	sub    esp,0x48
640089b1:	mov    eax,ds:0x64037644
640089b6:	xor    eax,esp
640089b8:	push   eax
640089b9:	lea    eax,[esp+0x4c]
640089bd:	mov    fs:0x0,eax
640089c3:	mov    eax,DWORD PTR [esp+0x5c]
640089c7:	mov    ecx,DWORD PTR [eax]
640089c9:	push   0x0
640089cb:	push   0x880
640089d0:	lea    edx,[eax+0x8]
640089d3:	mov    eax,DWORD PTR [eax+0x888]
640089d9:	push   edx
640089da:	push   eax
640089db:	push   ecx
640089dc:	call   DWORD PTR ds:0x640240e4
640089e2:	test   eax,eax
640089e4:	jne    0x64008a2b
640089e6:	push   eax
640089e7:	push   0x64029616
640089ec:	lea    ecx,[esp+0xc]
640089f0:	mov    DWORD PTR [esp+0x24],0xf
640089f8:	mov    DWORD PTR [esp+0x20],eax
640089fc:	mov    BYTE PTR [esp+0x10],al
64008a00:	call   0x64003470
64008a05:	lea    ecx,[esp+0x4]
64008a09:	push   ecx
64008a0a:	lea    edx,[esp+0x24]
64008a0e:	push   edx
64008a0f:	mov    DWORD PTR [esp+0x5c],0x0
64008a17:	call   0x64001430
64008a1c:	push   0x6402bcb0
64008a21:	lea    eax,[esp+0x24]
64008a25:	push   eax
64008a26:	call   0x64013872
64008a2b:	mov    ecx,DWORD PTR [esp+0x4c]
64008a2f:	mov    DWORD PTR fs:0x0,ecx
64008a36:	pop    ecx
64008a37:	add    esp,0x54
64008a3a:	ret    0x4
64008a3d:	int3   
64008a3e:	int3   
64008a3f:	int3   
64008a40:	push   ebp
64008a41:	mov    ebp,esp
64008a43:	push   0xfffffffe
64008a45:	push   0x6402be00
64008a4a:	push   0x64015f70
64008a4f:	mov    eax,fs:0x0
64008a55:	push   eax
64008a56:	sub    esp,0x28
64008a59:	push   ebx
64008a5a:	push   esi
64008a5b:	push   edi
64008a5c:	mov    eax,ds:0x64037644
64008a61:	xor    DWORD PTR [ebp-0x8],eax
64008a64:	xor    eax,ebp
64008a66:	push   eax
64008a67:	lea    eax,[ebp-0x10]
64008a6a:	mov    fs:0x0,eax
64008a70:	mov    esi,DWORD PTR [ebp+0x8]
64008a73:	xor    ebx,ebx
64008a75:	mov    DWORD PTR [ebp-0x2c],ebx
64008a78:	mov    DWORD PTR [ebp-0x30],ebx
64008a7b:	mov    DWORD PTR [ebp-0x20],ebx
64008a7e:	mov    DWORD PTR [ebp-0x34],ebx
64008a81:	mov    DWORD PTR [ebp-0x38],ebx
64008a84:	mov    DWORD PTR [ebp-0x24],ebx
64008a87:	mov    BYTE PTR [ebp-0x19],bl
64008a8a:	mov    DWORD PTR [ebp-0x4],ebx
64008a8d:	push   0x4
64008a8f:	push   0x3000
64008a94:	push   0x1020
64008a99:	push   ebx
64008a9a:	push   esi
64008a9b:	call   DWORD PTR ds:0x640240d4
64008aa1:	mov    edi,eax
64008aa3:	mov    DWORD PTR [ebp-0x2c],edi
64008aa6:	test   edi,edi
64008aa8:	jne    0x64008ab5
64008aaa:	call   DWORD PTR ds:0x64024064
64008ab0:	jmp    0x64008b7d
64008ab5:	lea    eax,[ebp-0x24]
64008ab8:	push   eax
64008ab9:	push   0x1020
64008abe:	mov    ecx,DWORD PTR [ebp+0x14]
64008ac1:	push   ecx
64008ac2:	push   edi
64008ac3:	push   esi
64008ac4:	call   DWORD PTR ds:0x640240e4
64008aca:	test   eax,eax
64008acc:	je     0x64008b7d
64008ad2:	push   0x40
64008ad4:	push   0x3000
64008ad9:	mov    edx,DWORD PTR [ebp+0x10]
64008adc:	push   edx
64008add:	push   0x0
64008adf:	push   esi
64008ae0:	call   DWORD PTR ds:0x640240d4
64008ae6:	mov    ebx,eax
64008ae8:	mov    DWORD PTR [ebp-0x30],ebx
64008aeb:	test   ebx,ebx
64008aed:	je     0x64008b7d
64008af3:	lea    eax,[ebp-0x24]
64008af6:	push   eax
64008af7:	mov    ecx,DWORD PTR [ebp+0x10]
64008afa:	push   ecx
64008afb:	mov    edx,DWORD PTR [ebp+0xc]
64008afe:	push   edx
64008aff:	push   ebx
64008b00:	push   esi
64008b01:	call   DWORD PTR ds:0x640240e4
64008b07:	test   eax,eax
64008b09:	je     0x64008b7d
64008b0b:	mov    DWORD PTR [ebp-0x28],0x0
64008b12:	lea    eax,[ebp-0x28]
64008b15:	push   eax
64008b16:	push   0xf01ff
64008b1b:	push   esi
64008b1c:	call   DWORD PTR ds:0x64024008
64008b22:	test   eax,eax
64008b24:	je     0x64008b7d
64008b26:	mov    ecx,DWORD PTR [ebp-0x28]
64008b29:	push   ecx
64008b2a:	call   DWORD PTR ds:0x64024004
64008b30:	test   eax,eax
64008b32:	je     0x64008b7d
64008b34:	lea    edx,[ebp-0x34]
64008b37:	push   edx
64008b38:	push   0x0
64008b3a:	push   edi
64008b3b:	push   ebx
64008b3c:	push   0x0
64008b3e:	push   0x0
64008b40:	push   esi
64008b41:	call   DWORD PTR ds:0x640240cc
64008b47:	mov    DWORD PTR [ebp-0x20],eax
64008b4a:	test   eax,eax
64008b4c:	je     0x64008b7d
64008b4e:	call   DWORD PTR ds:0x64024000
64008b54:	push   0xffffffff
64008b56:	mov    eax,DWORD PTR [ebp-0x20]
64008b59:	push   eax
64008b5a:	call   DWORD PTR ds:0x64024088
64008b60:	lea    ecx,[ebp-0x24]
64008b63:	push   ecx
64008b64:	push   0x1020
64008b69:	mov    edx,DWORD PTR [ebp+0x14]
64008b6c:	push   edx
64008b6d:	push   edi
64008b6e:	push   esi
64008b6f:	call   DWORD PTR ds:0x640240d8
64008b75:	test   eax,eax
64008b77:	je     0x64008b7d
64008b79:	mov    BYTE PTR [ebp-0x19],0x1
64008b7d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64008b84:	call   0x64008ba7
64008b89:	mov    al,BYTE PTR [ebp-0x19]
64008b8c:	mov    ecx,DWORD PTR [ebp-0x10]
64008b8f:	mov    DWORD PTR fs:0x0,ecx
64008b96:	pop    ecx
64008b97:	pop    edi
64008b98:	pop    esi
64008b99:	pop    ebx
64008b9a:	mov    esp,ebp
64008b9c:	pop    ebp
64008b9d:	ret    
64008b9e:	mov    esi,DWORD PTR [ebp+0x8]
64008ba1:	mov    edi,DWORD PTR [ebp-0x2c]
64008ba4:	mov    ebx,DWORD PTR [ebp-0x30]
64008ba7:	test   edi,edi
64008ba9:	je     0x64008bba
64008bab:	push   0x8000
64008bb0:	push   0x0
64008bb2:	push   edi
64008bb3:	push   esi
64008bb4:	call   DWORD PTR ds:0x640240c4
64008bba:	test   ebx,ebx
64008bbc:	je     0x64008bcd
64008bbe:	push   0x8000
64008bc3:	push   0x0
64008bc5:	push   ebx
64008bc6:	push   esi
64008bc7:	call   DWORD PTR ds:0x640240c4
64008bcd:	mov    eax,DWORD PTR [ebp-0x20]
64008bd0:	test   eax,eax
64008bd2:	je     0x64008be9
64008bd4:	lea    ecx,[ebp-0x38]
64008bd7:	push   ecx
64008bd8:	push   eax
64008bd9:	call   DWORD PTR ds:0x640240d0
64008bdf:	mov    edx,DWORD PTR [ebp-0x20]
64008be2:	push   edx
64008be3:	call   DWORD PTR ds:0x6402406c
64008be9:	ret    
64008bea:	int3   
64008beb:	int3   
64008bec:	int3   
64008bed:	int3   
64008bee:	int3   
64008bef:	int3   
64008bf0:	push   ebp
64008bf1:	mov    ebp,esp
64008bf3:	push   0xffffffff
64008bf5:	push   0x64023821
64008bfa:	mov    eax,fs:0x0
64008c00:	push   eax
64008c01:	push   ecx
64008c02:	mov    eax,0x1060
64008c07:	call   0x64017d40
64008c0c:	mov    eax,ds:0x64037644
64008c11:	xor    eax,ebp
64008c13:	mov    DWORD PTR [ebp-0x14],eax
64008c16:	push   ebx
64008c17:	push   esi
64008c18:	push   edi
64008c19:	push   eax
64008c1a:	lea    eax,[ebp-0xc]
64008c1d:	mov    fs:0x0,eax
64008c23:	mov    DWORD PTR [ebp-0x10],esp
64008c26:	mov    ebx,DWORD PTR [ebp+0xc]
64008c29:	mov    eax,DWORD PTR [ebp+0x8]
64008c2c:	push   0x1018
64008c31:	xor    edi,edi
64008c33:	lea    edx,[ebp-0x1030]
64008c39:	push   edi
64008c3a:	push   edx
64008c3b:	mov    DWORD PTR [ebp-0x104c],eax
64008c41:	mov    DWORD PTR [ebp-0x1048],ecx
64008c47:	mov    BYTE PTR [ebp-0x1038],0x0
64008c4e:	call   0x64015160
64008c53:	mov    eax,ebx
64008c55:	add    esp,0xc
64008c58:	lea    edx,[eax+0x2]
64008c5b:	jmp    0x64008c60
64008c5d:	lea    ecx,[ecx+0x0]
64008c60:	mov    cx,WORD PTR [eax]
64008c63:	add    eax,0x2
64008c66:	cmp    cx,di
64008c69:	jne    0x64008c60
64008c6b:	sub    eax,edx
64008c6d:	sar    eax,1
64008c6f:	cmp    eax,0x400
64008c74:	ja     0x64008e20
64008c7a:	push   edi
64008c7b:	lea    ecx,[ebp-0x103c]
64008c81:	call   0x64009ca0
64008c86:	push   0x6402adc4
64008c8b:	mov    DWORD PTR [ebp-0x4],edi
64008c8e:	push   0xc
64008c90:	mov    ecx,0x6402adf0
64008c95:	mov    BYTE PTR [ebp-0x4],0x1
64008c99:	call   0x64003090
64008c9e:	add    esp,0x8
64008ca1:	push   ecx
64008ca2:	mov    ecx,esp
64008ca4:	mov    DWORD PTR [ebp-0x1050],esp
64008caa:	push   ecx
64008cab:	mov    ecx,eax
64008cad:	call   0x64002ab0
64008cb2:	call   0x64007a20
64008cb7:	add    esp,0x4
64008cba:	push   eax
64008cbb:	lea    ecx,[ebp-0x103c]
64008cc1:	call   0x64009d30
64008cc6:	mov    DWORD PTR [ebp-0x4],edi
64008cc9:	jmp    0x64008cdd
64008ccb:	mov    DWORD PTR [ebp-0x4],0x0
64008cd2:	mov    eax,0x64008cd8
64008cd7:	ret    
64008cd8:	mov    ebx,DWORD PTR [ebp+0xc]
64008cdb:	xor    edi,edi
64008cdd:	lea    ecx,[ebp-0x103c]
64008ce3:	call   0x64009d20
64008ce8:	test   eax,eax
64008cea:	je     0x64008e0e
64008cf0:	push   edi
64008cf1:	lea    esi,[ebp-0x106c]
64008cf7:	call   0x640078d0
64008cfc:	add    esp,0x4
64008cff:	lea    edx,[ebp-0x1044]
64008d05:	push   edx
64008d06:	mov    ecx,eax
64008d08:	mov    BYTE PTR [ebp-0x4],0x3
64008d0c:	call   0x6400a8a0
64008d11:	mov    BYTE PTR [ebp-0x4],0x5
64008d15:	cmp    DWORD PTR [ebp-0x1054],0x10
64008d1c:	jb     0x64008d2d
64008d1e:	mov    eax,DWORD PTR [ebp-0x1068]
64008d24:	push   eax
64008d25:	call   0x64013644
64008d2a:	add    esp,0x4
64008d2d:	lea    ecx,[ebp-0x103c]
64008d33:	mov    DWORD PTR [ebp-0x1054],0xf
64008d3d:	mov    DWORD PTR [ebp-0x1058],edi
64008d43:	mov    BYTE PTR [ebp-0x1068],0x0
64008d4a:	mov    BYTE PTR [ebp-0x1038],0x0
64008d51:	call   0x64009d00
64008d56:	push   0x6402ae0c
64008d5b:	mov    esi,eax
64008d5d:	mov    edi,DWORD PTR [esi]
64008d5f:	push   0x17
64008d61:	push   0x6402ae30
64008d66:	call   0x64002e70
64008d6b:	mov    edx,DWORD PTR [edi]
64008d6d:	add    esp,0xc
64008d70:	push   eax
64008d71:	mov    ecx,esi
64008d73:	call   edx
64008d75:	lea    ecx,[ebp-0x103c]
64008d7b:	mov    DWORD PTR [ebp-0x1030],eax
64008d81:	mov    DWORD PTR [ebp-0x102c],edx
64008d87:	call   0x64009d00
64008d8c:	push   0x6402ae48
64008d91:	mov    esi,eax
64008d93:	mov    edi,DWORD PTR [esi]
64008d95:	push   0x17
64008d97:	push   0x6402ae6c
64008d9c:	call   0x64002e70
64008da1:	add    esp,0xc
64008da4:	push   eax
64008da5:	mov    eax,DWORD PTR [edi]
64008da7:	mov    ecx,esi
64008da9:	call   eax
64008dab:	mov    DWORD PTR [ebp-0x1024],edx
64008db1:	lea    edx,[ebp-0x1020]
64008db7:	mov    DWORD PTR [ebp-0x1028],eax
64008dbd:	mov    eax,ebx
64008dbf:	sub    edx,ebx
64008dc1:	movzx  ecx,WORD PTR [eax]
64008dc4:	mov    WORD PTR [edx+eax*1],cx
64008dc8:	add    eax,0x2
64008dcb:	test   cx,cx
64008dce:	jne    0x64008dc1
64008dd0:	mov    eax,DWORD PTR [ebp-0x1044]
64008dd6:	lea    edx,[ebp-0x1038]
64008ddc:	push   edx
64008ddd:	mov    DWORD PTR [ebp-0x20],0x40
64008de4:	mov    ecx,DWORD PTR [eax+0x6]
64008de7:	push   ecx
64008de8:	add    eax,0x12
64008deb:	push   eax
64008dec:	mov    eax,DWORD PTR [ebp-0x104c]
64008df2:	push   eax
64008df3:	call   0x64008a40
64008df8:	add    esp,0x10
64008dfb:	test   al,al
64008dfd:	jne    0x64008e24
64008dff:	mov    ecx,DWORD PTR [ebp-0x1044]
64008e05:	push   ecx
64008e06:	call   0x64013644
64008e0b:	add    esp,0x4
64008e0e:	lea    ecx,[ebp-0x103c]
64008e14:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008e1b:	call   0x64009cc0
64008e20:	xor    eax,eax
64008e22:	jmp    0x64008e72
64008e24:	mov    esi,DWORD PTR [ebp-0x20]
64008e27:	cmp    esi,0x40
64008e2a:	jae    0x64008e4f
64008e2c:	mov    edx,DWORD PTR [ebp-0x1048]
64008e32:	lea    eax,[ebp-0x820]
64008e38:	mov    ecx,eax
64008e3a:	sub    edx,ecx
64008e3c:	lea    esp,[esp+0x0]
64008e40:	movzx  ecx,WORD PTR [eax]
64008e43:	mov    WORD PTR [edx+eax*1],cx
64008e47:	add    eax,0x2
64008e4a:	test   cx,cx
64008e4d:	jne    0x64008e40
64008e4f:	mov    edx,DWORD PTR [ebp-0x1044]
64008e55:	push   edx
64008e56:	call   0x64013644
64008e5b:	add    esp,0x4
64008e5e:	lea    ecx,[ebp-0x103c]
64008e64:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008e6b:	call   0x64009cc0
64008e70:	mov    eax,esi
64008e72:	mov    ecx,DWORD PTR [ebp-0xc]
64008e75:	mov    DWORD PTR fs:0x0,ecx
64008e7c:	pop    ecx
64008e7d:	pop    edi
64008e7e:	pop    esi
64008e7f:	pop    ebx
64008e80:	mov    ecx,DWORD PTR [ebp-0x14]
64008e83:	xor    ecx,ebp
64008e85:	call   0x64013d06
64008e8a:	mov    esp,ebp
64008e8c:	pop    ebp
64008e8d:	ret    
64008e8e:	int3   
64008e8f:	int3   
64008e90:	push   ebp
64008e91:	mov    ebp,esp
64008e93:	push   0xffffffff
64008e95:	push   0x640237d1
64008e9a:	mov    eax,fs:0x0
64008ea0:	push   eax
64008ea1:	push   ecx
64008ea2:	mov    eax,0x105c
64008ea7:	call   0x64017d40
64008eac:	mov    eax,ds:0x64037644
64008eb1:	xor    eax,ebp
64008eb3:	mov    DWORD PTR [ebp-0x18],eax
64008eb6:	push   ebx
64008eb7:	push   esi
64008eb8:	push   edi
64008eb9:	push   eax
64008eba:	lea    eax,[ebp-0xc]
64008ebd:	mov    fs:0x0,eax
64008ec3:	mov    DWORD PTR [ebp-0x10],esp
64008ec6:	mov    ebx,DWORD PTR [ebp+0xc]
64008ec9:	mov    eax,DWORD PTR [ebp+0x8]
64008ecc:	push   0x1018
64008ed1:	xor    edi,edi
64008ed3:	lea    ecx,[ebp-0x1034]
64008ed9:	push   edi
64008eda:	push   ecx
64008edb:	mov    DWORD PTR [ebp-0x1044],eax
64008ee1:	mov    BYTE PTR [ebp-0x103c],0x0
64008ee8:	call   0x64015160
64008eed:	mov    eax,ebx
64008eef:	add    esp,0xc
64008ef2:	lea    edx,[eax+0x2]
64008ef5:	mov    cx,WORD PTR [eax]
64008ef8:	add    eax,0x2
64008efb:	cmp    cx,di
64008efe:	jne    0x64008ef5
64008f00:	sub    eax,edx
64008f02:	sar    eax,1
64008f04:	cmp    eax,0x400
64008f09:	ja     0x640090e8
64008f0f:	mov    eax,DWORD PTR [ebp+0x10]
64008f12:	lea    edx,[eax+0x2]
64008f15:	mov    cx,WORD PTR [eax]
64008f18:	add    eax,0x2
64008f1b:	cmp    cx,di
64008f1e:	jne    0x64008f15
64008f20:	sub    eax,edx
64008f22:	sar    eax,1
64008f24:	cmp    eax,0x400
64008f29:	ja     0x640090e8
64008f2f:	push   edi
64008f30:	lea    ecx,[ebp-0x1040]
64008f36:	call   0x64009ca0
64008f3b:	push   0x6402ae84
64008f40:	mov    DWORD PTR [ebp-0x4],edi
64008f43:	push   0xc
64008f45:	mov    ecx,0x6402adf0
64008f4a:	mov    BYTE PTR [ebp-0x4],0x1
64008f4e:	call   0x64003090
64008f53:	add    esp,0x8
64008f56:	push   ecx
64008f57:	mov    edx,esp
64008f59:	mov    DWORD PTR [ebp-0x1050],esp
64008f5f:	push   edx
64008f60:	mov    ecx,eax
64008f62:	call   0x64002ab0
64008f67:	call   0x64007a20
64008f6c:	add    esp,0x4
64008f6f:	push   eax
64008f70:	lea    ecx,[ebp-0x1040]
64008f76:	call   0x64009d30
64008f7b:	mov    DWORD PTR [ebp-0x4],edi
64008f7e:	jmp    0x64008f92
64008f80:	mov    DWORD PTR [ebp-0x4],0x0
64008f87:	mov    eax,0x64008f8d
64008f8c:	ret    
64008f8d:	mov    ebx,DWORD PTR [ebp+0xc]
64008f90:	xor    edi,edi
64008f92:	lea    ecx,[ebp-0x1040]
64008f98:	call   0x64009d20
64008f9d:	test   eax,eax
64008f9f:	je     0x640090d6
64008fa5:	push   edi
64008fa6:	lea    esi,[ebp-0x106c]
64008fac:	call   0x640078d0
64008fb1:	add    esp,0x4
64008fb4:	lea    ecx,[ebp-0x104c]
64008fba:	push   ecx
64008fbb:	mov    ecx,eax
64008fbd:	mov    BYTE PTR [ebp-0x4],0x3
64008fc1:	call   0x6400a8a0
64008fc6:	mov    BYTE PTR [ebp-0x4],0x5
64008fca:	cmp    DWORD PTR [ebp-0x1054],0x10
64008fd1:	jb     0x64008fe2
64008fd3:	mov    edx,DWORD PTR [ebp-0x1068]
64008fd9:	push   edx
64008fda:	call   0x64013644
64008fdf:	add    esp,0x4
64008fe2:	lea    ecx,[ebp-0x1040]
64008fe8:	mov    DWORD PTR [ebp-0x1054],0xf
64008ff2:	mov    DWORD PTR [ebp-0x1058],edi
64008ff8:	mov    BYTE PTR [ebp-0x1068],0x0
64008fff:	mov    BYTE PTR [ebp-0x103c],0x1
64009006:	call   0x64009d00
6400900b:	push   0x6402aeb4
64009010:	mov    esi,eax
64009012:	mov    edi,DWORD PTR [esi]
64009014:	push   0x17
64009016:	push   0x6402ae30
6400901b:	call   0x64002e70
64009020:	add    esp,0xc
64009023:	push   eax
64009024:	mov    eax,DWORD PTR [edi]
64009026:	mov    ecx,esi
64009028:	call   eax
6400902a:	lea    ecx,[ebp-0x1040]
64009030:	mov    DWORD PTR [ebp-0x1034],eax
64009036:	mov    DWORD PTR [ebp-0x1030],edx
6400903c:	call   0x64009d00
64009041:	push   0x6402aee8
64009046:	mov    esi,eax
64009048:	mov    edi,DWORD PTR [esi]
6400904a:	push   0x17
6400904c:	push   0x6402ae6c
64009051:	call   0x64002e70
64009056:	mov    edx,DWORD PTR [edi]
64009058:	add    esp,0xc
6400905b:	push   eax
6400905c:	mov    ecx,esi
6400905e:	call   edx
64009060:	mov    DWORD PTR [ebp-0x1028],edx
64009066:	lea    edx,[ebp-0x1024]
6400906c:	mov    DWORD PTR [ebp-0x102c],eax
64009072:	mov    eax,ebx
64009074:	sub    edx,ebx
64009076:	movzx  ecx,WORD PTR [eax]
64009079:	mov    WORD PTR [edx+eax*1],cx
6400907d:	add    eax,0x2
64009080:	test   cx,cx
64009083:	jne    0x64009076
64009085:	mov    eax,DWORD PTR [ebp+0x10]
64009088:	lea    edx,[ebp-0x824]
6400908e:	sub    edx,eax
64009090:	movzx  ecx,WORD PTR [eax]
64009093:	mov    WORD PTR [edx+eax*1],cx
64009097:	add    eax,0x2
6400909a:	test   cx,cx
6400909d:	jne    0x64009090
6400909f:	mov    eax,DWORD PTR [ebp-0x104c]
640090a5:	mov    ecx,DWORD PTR [eax+0x6]
640090a8:	lea    edx,[ebp-0x103c]
640090ae:	push   edx
640090af:	push   ecx
640090b0:	add    eax,0x12
640090b3:	push   eax
640090b4:	mov    eax,DWORD PTR [ebp-0x1044]
640090ba:	push   eax
640090bb:	call   0x64008a40
640090c0:	add    esp,0x10
640090c3:	test   al,al
640090c5:	jne    0x640090ec
640090c7:	mov    ecx,DWORD PTR [ebp-0x104c]
640090cd:	push   ecx
640090ce:	call   0x64013644
640090d3:	add    esp,0x4
640090d6:	lea    ecx,[ebp-0x1040]
640090dc:	mov    DWORD PTR [ebp-0x4],0xffffffff
640090e3:	call   0x64009cc0
640090e8:	xor    eax,eax
640090ea:	jmp    0x64009112
640090ec:	mov    edx,DWORD PTR [ebp-0x104c]
640090f2:	push   edx
640090f3:	call   0x64013644
640090f8:	add    esp,0x4
640090fb:	lea    ecx,[ebp-0x1040]
64009101:	mov    DWORD PTR [ebp-0x4],0xffffffff
64009108:	call   0x64009cc0
6400910d:	mov    eax,0x1
64009112:	mov    ecx,DWORD PTR [ebp-0xc]
64009115:	mov    DWORD PTR fs:0x0,ecx
6400911c:	pop    ecx
6400911d:	pop    edi
6400911e:	pop    esi
6400911f:	pop    ebx
64009120:	mov    ecx,DWORD PTR [ebp-0x18]
64009123:	xor    ecx,ebp
64009125:	call   0x64013d06
6400912a:	mov    esp,ebp
6400912c:	pop    ebp
6400912d:	ret    
6400912e:	int3   
6400912f:	int3   
64009130:	push   0xffffffff
64009132:	push   0x64023b1b
64009137:	mov    eax,fs:0x0
6400913d:	push   eax
6400913e:	sub    esp,0x88
64009144:	mov    eax,ds:0x64037644
64009149:	xor    eax,esp
6400914b:	mov    DWORD PTR [esp+0x84],eax
64009152:	push   edi
64009153:	mov    eax,ds:0x64037644
64009158:	xor    eax,esp
6400915a:	push   eax
6400915b:	lea    eax,[esp+0x90]
64009162:	mov    fs:0x0,eax
64009168:	mov    BYTE PTR [esi+0x890],0x0
6400916f:	mov    eax,ds:0x64038e64
64009174:	mov    edx,DWORD PTR [eax+0xc]
64009177:	mov    ecx,0x64038e64
6400917c:	call   edx
6400917e:	add    eax,0x10
64009181:	mov    DWORD PTR [esp+0x8],eax
64009185:	mov    DWORD PTR [esp+0x98],0x0
64009190:	mov    eax,DWORD PTR [esi+0x4]
64009193:	push   eax
64009194:	push   0x6402af28
64009199:	push   0x10
6400919b:	mov    ecx,0x6402af50
640091a0:	call   0x64003090
640091a5:	add    esp,0x8
640091a8:	push   eax
640091a9:	lea    ecx,[esp+0x10]
640091ad:	push   ecx
640091ae:	call   0x6400a5e0
640091b3:	mov    edx,DWORD PTR [esp+0x14]
640091b7:	mov    eax,DWORD PTR [esi]
640091b9:	add    esp,0xc
640091bc:	push   edx
640091bd:	push   eax
640091be:	lea    ecx,[esp+0x14]
640091c2:	call   0x64008bf0
640091c7:	add    esp,0x8
640091ca:	test   eax,eax
640091cc:	je     0x64009228
640091ce:	lea    eax,[esp+0xc]
640091d2:	push   eax
640091d3:	call   0x640150dc
640091d8:	mov    edi,eax
640091da:	add    esp,0x4
640091dd:	test   edi,edi
640091df:	je     0x64009228
640091e1:	mov    eax,DWORD PTR [esi]
640091e3:	push   0x0
640091e5:	push   0x880
640091ea:	lea    ecx,[esi+0x8]
640091ed:	push   ecx
640091ee:	push   edi
640091ef:	push   eax
640091f0:	call   DWORD PTR ds:0x640240d8
640091f6:	test   eax,eax
640091f8:	jne    0x6400921b
640091fa:	mov    DWORD PTR [esp+0x98],0xffffffff
64009205:	mov    eax,DWORD PTR [esp+0x8]
64009209:	add    eax,0xfffffff0
6400920c:	lea    edx,[eax+0xc]
6400920f:	or     ecx,0xffffffff
64009212:	lock xadd DWORD PTR [edx],ecx
64009216:	dec    ecx
64009217:	test   ecx,ecx
64009219:	jmp    0x64009247
6400921b:	mov    DWORD PTR [esi+0x888],edi
64009221:	mov    BYTE PTR [esi+0x890],0x1
64009228:	mov    DWORD PTR [esp+0x98],0xffffffff
64009233:	mov    eax,DWORD PTR [esp+0x8]
64009237:	add    eax,0xfffffff0
6400923a:	or     edx,0xffffffff
6400923d:	lea    ecx,[eax+0xc]
64009240:	lock xadd DWORD PTR [ecx],edx
64009244:	dec    edx
64009245:	test   edx,edx
64009247:	jg     0x64009253
64009249:	mov    ecx,DWORD PTR [eax]
6400924b:	mov    edx,DWORD PTR [ecx]
6400924d:	push   eax
6400924e:	mov    eax,DWORD PTR [edx+0x4]
64009251:	call   eax
64009253:	mov    ecx,DWORD PTR [esp+0x90]
6400925a:	mov    DWORD PTR fs:0x0,ecx
64009261:	pop    ecx
64009262:	pop    edi
64009263:	mov    ecx,DWORD PTR [esp+0x84]
6400926a:	xor    ecx,esp
6400926c:	call   0x64013d06
64009271:	add    esp,0x94
64009277:	ret    
64009278:	int3   
64009279:	int3   
6400927a:	int3   
6400927b:	int3   
6400927c:	int3   
6400927d:	int3   
6400927e:	int3   
6400927f:	int3   
64009280:	push   ebp
64009281:	mov    ebp,esp
64009283:	and    esp,0xfffffff8
64009286:	push   0xffffffff
64009288:	push   0x64023be1
6400928d:	mov    eax,fs:0x0
64009293:	push   eax
64009294:	sub    esp,0x874
6400929a:	mov    eax,ds:0x64037644
6400929f:	xor    eax,esp
640092a1:	mov    DWORD PTR [esp+0x86c],eax
640092a8:	push   esi
640092a9:	push   edi
640092aa:	mov    eax,ds:0x64037644
640092af:	xor    eax,esp
640092b1:	push   eax
640092b2:	lea    eax,[esp+0x880]
640092b9:	mov    fs:0x0,eax
640092bf:	mov    eax,DWORD PTR [ebp+0x8]
640092c2:	mov    edi,ecx
640092c4:	mov    esi,edi
640092c6:	mov    DWORD PTR [esp+0x14],eax
640092ca:	call   0x64009130
640092cf:	cmp    BYTE PTR [edi+0x890],0x0
640092d6:	je     0x640093cd
640092dc:	push   ecx
640092dd:	mov    ecx,esp
640092df:	mov    DWORD PTR [esp+0x1c],esp
640092e3:	lea    esi,[edi+0x88]
640092e9:	push   ecx
640092ea:	mov    ecx,esi
640092ec:	call   0x64002ab0
640092f1:	mov    edx,DWORD PTR [edi+0x4]
640092f4:	push   edx
640092f5:	call   0x64002770
640092fa:	add    esp,0x8
640092fd:	test   al,al
640092ff:	je     0x64009348
64009301:	xor    esi,esi
64009303:	push   esi
64009304:	push   0x64029616
64009309:	lea    ecx,[esp+0x38]
6400930d:	mov    DWORD PTR [esp+0x50],0xf
64009315:	mov    DWORD PTR [esp+0x4c],esi
64009319:	mov    BYTE PTR [esp+0x3c],0x0
6400931e:	call   0x64003470
64009323:	lea    eax,[esp+0x30]
64009327:	push   eax
64009328:	lea    ecx,[esp+0x50]
6400932c:	push   ecx
6400932d:	mov    DWORD PTR [esp+0x890],esi
64009334:	call   0x64001430
64009339:	push   0x6402bcb0
6400933e:	lea    edx,[esp+0x50]
64009342:	push   edx
64009343:	call   0x64013872
64009348:	mov    edx,esi
6400934a:	mov    eax,ebx
6400934c:	sub    edx,ebx
6400934e:	mov    edi,edi
64009350:	movzx  ecx,WORD PTR [eax]
64009353:	mov    WORD PTR [edx+eax*1],cx
64009357:	add    eax,0x2
6400935a:	test   cx,cx
6400935d:	jne    0x64009350
6400935f:	lea    ecx,[esp+0x1c]
64009363:	call   0x64009b90
64009368:	mov    DWORD PTR [esp+0x888],0x1
64009373:	mov    eax,DWORD PTR [edi+0x4]
64009376:	push   eax
64009377:	lea    ecx,[esp+0x20]
6400937b:	call   0x64007ac0
64009380:	mov    eax,DWORD PTR [edi+0x70]
64009383:	mov    ecx,DWORD PTR [edi]
64009385:	xor    edx,edx
64009387:	push   0x8000
6400938c:	push   edx
6400938d:	push   eax
6400938e:	push   ecx
6400938f:	mov    DWORD PTR [edi+0x70],edx
64009392:	mov    DWORD PTR [edi+0x74],edx
64009395:	mov    DWORD PTR [edi+0x78],edx
64009398:	call   DWORD PTR ds:0x640240c4
6400939e:	mov    ecx,DWORD PTR [esp+0x14]
640093a2:	push   ecx
640093a3:	mov    ecx,edi
640093a5:	call   0x64007d20
640093aa:	push   edi
640093ab:	call   0x640089a0
640093b0:	lea    esi,[esp+0x1c]
640093b4:	mov    DWORD PTR [esp+0x888],0xffffffff
640093bf:	call   0x64007bc0
640093c4:	mov    ecx,esi
640093c6:	call   0x64009c80
640093cb:	jmp    0x64009405
640093cd:	lea    edx,[edi+0x88]
640093d3:	mov    eax,ebx
640093d5:	sub    edx,ebx
640093d7:	jmp    0x640093e0
640093d9:	lea    esp,[esp+0x0]
640093e0:	movzx  ecx,WORD PTR [eax]
640093e3:	mov    WORD PTR [edx+eax*1],cx
640093e7:	add    eax,0x2
640093ea:	test   cx,cx
640093ed:	jne    0x640093e0
640093ef:	call   0x64008840
640093f4:	mov    edx,DWORD PTR [esp+0x14]
640093f8:	push   edx
640093f9:	mov    ecx,edi
640093fb:	call   0x64007d20
64009400:	call   0x64007f90
64009405:	push   0xa
64009407:	lea    eax,[esp+0x78]
6400940b:	push   eax
6400940c:	mov    eax,DWORD PTR [edi+0x888]
64009412:	cdq    
64009413:	push   edx
64009414:	push   eax
64009415:	call   0x64014ea6
6400941a:	mov    edx,DWORD PTR ds:0x64038e64
64009420:	mov    eax,DWORD PTR [edx+0xc]
64009423:	add    esp,0x10
64009426:	mov    ecx,0x64038e64
6400942b:	call   eax
6400942d:	add    eax,0x10
64009430:	mov    DWORD PTR [esp+0x10],eax
64009434:	mov    DWORD PTR [esp+0x888],0x2
6400943f:	mov    ecx,DWORD PTR [edi+0x4]
64009442:	push   ecx
64009443:	push   0x6402af74
64009448:	push   0x10
6400944a:	mov    ecx,0x6402af50
6400944f:	call   0x64003090
64009454:	add    esp,0x8
64009457:	push   eax
64009458:	lea    edx,[esp+0x18]
6400945c:	push   edx
6400945d:	call   0x6400a5e0
64009462:	mov    ecx,DWORD PTR [esp+0x1c]
64009466:	mov    edi,DWORD PTR [edi]
64009468:	add    esp,0xc
6400946b:	lea    eax,[esp+0x74]
6400946f:	push   eax
64009470:	push   ecx
64009471:	push   edi
64009472:	call   0x64008e90
64009477:	mov    DWORD PTR [esp+0x894],0xffffffff
64009482:	mov    eax,DWORD PTR [esp+0x1c]
64009486:	add    eax,0xfffffff0
64009489:	add    esp,0xc
6400948c:	lea    edx,[eax+0xc]
6400948f:	or     ecx,0xffffffff
64009492:	lock xadd DWORD PTR [edx],ecx
64009496:	dec    ecx
64009497:	test   ecx,ecx
64009499:	jg     0x640094a5
6400949b:	mov    ecx,DWORD PTR [eax]
6400949d:	mov    edx,DWORD PTR [ecx]
6400949f:	push   eax
640094a0:	mov    eax,DWORD PTR [edx+0x4]
640094a3:	call   eax
640094a5:	mov    ecx,DWORD PTR [esp+0x880]
640094ac:	mov    DWORD PTR fs:0x0,ecx
640094b3:	pop    ecx
640094b4:	pop    edi
640094b5:	pop    esi
640094b6:	mov    ecx,DWORD PTR [esp+0x86c]
640094bd:	xor    ecx,esp
640094bf:	call   0x64013d06
640094c4:	mov    esp,ebp
640094c6:	pop    ebp
640094c7:	ret    0x4
640094ca:	int3   
640094cb:	int3   
640094cc:	int3   
640094cd:	int3   
640094ce:	int3   
640094cf:	int3   
640094d0:	push   ebp
640094d1:	mov    ebp,esp
640094d3:	push   0xffffffff
640094d5:	push   0x64023c26
640094da:	mov    eax,fs:0x0
640094e0:	push   eax
640094e1:	sub    esp,0x8bc
640094e7:	mov    eax,ds:0x64037644
640094ec:	xor    eax,ebp
640094ee:	mov    DWORD PTR [ebp-0x14],eax
640094f1:	push   ebx
640094f2:	push   esi
640094f3:	push   edi
640094f4:	push   eax
640094f5:	lea    eax,[ebp-0xc]
640094f8:	mov    fs:0x0,eax
640094fe:	mov    DWORD PTR [ebp-0x10],esp
64009501:	mov    esi,DWORD PTR [ebp+0x8]
64009504:	mov    edi,DWORD PTR [ebp+0xc]
64009507:	mov    ebx,DWORD PTR [ebp+0x10]
6400950a:	lea    eax,[ebp-0x8ac]
64009510:	push   eax
64009511:	mov    ecx,esi
64009513:	mov    DWORD PTR [ebp-0x4],0x0
6400951a:	call   0x64007c10
6400951f:	push   edi
64009520:	lea    ecx,[ebp-0x8ac]
64009526:	mov    BYTE PTR [ebp-0x4],0x1
6400952a:	call   0x64009280
6400952f:	call   DWORD PTR ds:0x6403761c
64009535:	mov    edi,eax
64009537:	call   DWORD PTR ds:0x64024038
6400953d:	cmp    esi,eax
6400953f:	je     0x640095a8
64009541:	test   ebx,ebx
64009543:	jne    0x64009559
64009545:	mov    ecx,DWORD PTR [ebp-0x8ac]
6400954b:	xor    eax,eax
6400954d:	push   eax
6400954e:	push   ecx
6400954f:	call   0x64009670
64009554:	add    esp,0x8
64009557:	jmp    0x640095af
64009559:	push   ebx
6400955a:	call   DWORD PTR ds:0x64024030
64009560:	add    eax,0x1
64009563:	cmp    eax,0x3fffffff
64009568:	jle    0x6400957e
6400956a:	mov    ecx,DWORD PTR [ebp-0x8ac]
64009570:	xor    eax,eax
64009572:	push   eax
64009573:	push   ecx
64009574:	call   0x64009670
64009579:	add    esp,0x8
6400957c:	jmp    0x640095af
6400957e:	lea    esi,[eax+eax*1]
64009581:	mov    eax,esi
64009583:	call   0x64013d20
64009588:	mov    DWORD PTR [ebp-0x10],esp
6400958b:	mov    eax,esp
6400958d:	push   edi
6400958e:	push   esi
6400958f:	push   ebx
64009590:	push   eax
64009591:	call   0x64001000
64009596:	mov    ecx,DWORD PTR [ebp-0x8ac]
6400959c:	push   eax
6400959d:	push   ecx
6400959e:	call   0x64009670
640095a3:	add    esp,0x8
640095a6:	jmp    0x640095af
640095a8:	push   ebx
640095a9:	call   DWORD PTR ds:0x640240c8
640095af:	lea    ecx,[ebp-0x18]
640095b2:	call   0x64009ad0
640095b7:	mov    esi,DWORD PTR [ebp-0x8ac]
640095bd:	test   esi,esi
640095bf:	je     0x640095d7
640095c1:	call   DWORD PTR ds:0x64024064
640095c7:	push   esi
640095c8:	mov    edi,eax
640095ca:	call   DWORD PTR ds:0x6402406c
640095d0:	push   edi
640095d1:	call   DWORD PTR ds:0x64024070
640095d7:	lea    esp,[ebp-0x8d8]
640095dd:	mov    ecx,DWORD PTR [ebp-0xc]
640095e0:	mov    DWORD PTR fs:0x0,ecx
640095e7:	pop    ecx
640095e8:	pop    edi
640095e9:	pop    esi
640095ea:	pop    ebx
640095eb:	mov    ecx,DWORD PTR [ebp-0x14]
640095ee:	xor    ecx,ebp
640095f0:	call   0x64013d06
640095f5:	mov    esp,ebp
640095f7:	pop    ebp
640095f8:	ret    
640095f9:	push   0x64029616
640095fe:	lea    ecx,[ebp-0x8c8]
64009604:	call   0x64002950
64009609:	mov    BYTE PTR [ebp-0x4],0x3
6400960d:	call   0x6400a800
64009612:	lea    ecx,[ebp-0x8c8]
64009618:	call   0x64002990
6400961d:	mov    eax,0x640095d7
64009622:	ret    
64009623:	int3   
64009624:	int3   
64009625:	int3   
64009626:	int3   
64009627:	int3   
64009628:	int3   
64009629:	int3   
6400962a:	int3   
6400962b:	int3   
6400962c:	int3   
6400962d:	int3   
6400962e:	int3   
6400962f:	int3   
64009630:	push   edi
64009631:	lea    ecx,[esi+0x894]
64009637:	call   0x64009ad0
6400963c:	mov    edi,DWORD PTR [esi]
6400963e:	test   edi,edi
64009640:	je     0x6400965a
64009642:	push   ebx
64009643:	call   DWORD PTR ds:0x64024064
64009649:	push   edi
6400964a:	mov    ebx,eax
6400964c:	call   DWORD PTR ds:0x6402406c
64009652:	push   ebx
64009653:	call   DWORD PTR ds:0x64024070
64009659:	pop    ebx
6400965a:	mov    DWORD PTR [esi],0x0
64009660:	pop    edi
64009661:	ret    
64009662:	int3   
64009663:	int3   
64009664:	int3   
64009665:	int3   
64009666:	int3   
64009667:	int3   
64009668:	int3   
64009669:	int3   
6400966a:	int3   
6400966b:	int3   
6400966c:	int3   
6400966d:	int3   
6400966e:	int3   
6400966f:	int3   
64009670:	push   ebp
64009671:	mov    ebp,esp
64009673:	push   0xffffffff
64009675:	push   0x6402377b
6400967a:	mov    eax,fs:0x0
64009680:	push   eax
64009681:	push   ecx
64009682:	sub    esp,0x220
64009688:	mov    eax,ds:0x64037644
6400968d:	xor    eax,ebp
6400968f:	mov    DWORD PTR [ebp-0x3c],eax
64009692:	push   ebx
64009693:	push   esi
64009694:	push   edi
64009695:	push   eax
64009696:	lea    eax,[ebp-0xc]
64009699:	mov    fs:0x0,eax
6400969f:	mov    DWORD PTR [ebp-0x10],esp
640096a2:	push   0x6402afa4
640096a7:	push   0xc
640096a9:	mov    ecx,0x6402adf0
640096ae:	call   0x64003090
640096b3:	add    esp,0x4
640096b6:	mov    ecx,esp
640096b8:	mov    DWORD PTR [ebp-0xd8],esp
640096be:	push   ecx
640096bf:	mov    ecx,eax
640096c1:	call   0x64002ab0
640096c6:	mov    DWORD PTR [ebp-0x200],eax
640096cc:	call   0x64007a20
640096d1:	add    esp,0x4
640096d4:	mov    DWORD PTR [ebp-0x174],eax
640096da:	mov    edx,DWORD PTR [ebp-0x174]
640096e0:	mov    DWORD PTR [ebp-0x28],edx
640096e3:	mov    DWORD PTR [ebp-0x4],0x0
640096ea:	cmp    DWORD PTR [ebp-0x28],0x0
640096ee:	jne    0x6400974e
640096f0:	mov    BYTE PTR [ebp-0xd9],0x0
640096f7:	mov    DWORD PTR [ebp-0x4],0xffffffff
640096fe:	mov    eax,DWORD PTR [ebp-0x28]
64009701:	mov    DWORD PTR [ebp-0x17c],eax
64009707:	mov    ecx,DWORD PTR [ebp-0x17c]
6400970d:	mov    DWORD PTR [ebp-0x178],ecx
64009713:	cmp    DWORD PTR [ebp-0x178],0x0
6400971a:	je     0x64009739
6400971c:	push   0x1
6400971e:	mov    edx,DWORD PTR [ebp-0x178]
64009724:	mov    eax,DWORD PTR [edx]
64009726:	mov    ecx,DWORD PTR [ebp-0x178]
6400972c:	mov    edx,DWORD PTR [eax+0x4]
6400972f:	call   edx
64009731:	mov    DWORD PTR [ebp-0x204],eax
64009737:	jmp    0x64009743
64009739:	mov    DWORD PTR [ebp-0x204],0x0
64009743:	mov    al,BYTE PTR [ebp-0xd9]
64009749:	jmp    0x64009ab2
6400974e:	mov    eax,DWORD PTR [ebp+0x8]
64009751:	push   eax
64009752:	call   0x64002940
64009757:	add    esp,0x4
6400975a:	push   eax
6400975b:	lea    esi,[ebp-0xf8]
64009761:	call   0x64007890
64009766:	add    esp,0x4
64009769:	mov    DWORD PTR [ebp-0x208],eax
6400976f:	mov    ecx,DWORD PTR [ebp-0x208]
64009775:	mov    DWORD PTR [ebp-0x20c],ecx
6400977b:	mov    BYTE PTR [ebp-0x4],0x1
6400977f:	lea    edx,[ebp-0x38]
64009782:	push   edx
64009783:	mov    ecx,DWORD PTR [ebp-0x20c]
64009789:	call   0x6400a8a0
6400978e:	mov    BYTE PTR [ebp-0x4],0x3
64009792:	lea    ecx,[ebp-0xf8]
64009798:	call   0x64002990
6400979d:	mov    BYTE PTR [ebp-0x11],0x0
640097a1:	mov    DWORD PTR [ebp-0x18],0x0
640097a8:	mov    DWORD PTR [ebp-0x30],0x0
640097af:	mov    DWORD PTR [ebp-0x24],0x0
640097b6:	mov    DWORD PTR [ebp-0x2c],0x0
640097bd:	mov    DWORD PTR [ebp-0x1c],0x0
640097c4:	mov    DWORD PTR [ebp-0x20],0x0
640097cb:	mov    BYTE PTR [ebp-0x4],0x4
640097cf:	mov    eax,DWORD PTR [ebp-0x28]
640097d2:	mov    DWORD PTR [ebp-0x210],eax
640097d8:	push   0x6402afd0
640097dd:	push   0xc
640097df:	push   0x6402b00c
640097e4:	call   0x64002e70
640097e9:	add    esp,0xc
640097ec:	mov    DWORD PTR [ebp-0x214],eax
640097f2:	mov    ecx,DWORD PTR [ebp-0x214]
640097f8:	push   ecx
640097f9:	mov    edx,DWORD PTR [ebp-0x210]
640097ff:	mov    eax,DWORD PTR [edx]
64009801:	mov    ecx,DWORD PTR [ebp-0x210]
64009807:	mov    edx,DWORD PTR [eax]
64009809:	call   edx
6400980b:	mov    DWORD PTR [ebp-0x21c],eax
64009811:	mov    DWORD PTR [ebp-0x218],edx
64009817:	mov    eax,DWORD PTR [ebp-0x21c]
6400981d:	mov    DWORD PTR [ebp-0xc8],eax
64009823:	mov    ecx,DWORD PTR [ebp-0x218]
64009829:	mov    DWORD PTR [ebp-0xc4],ecx
6400982f:	push   0x80
64009834:	push   0x0
64009836:	lea    edx,[ebp-0xc0]
6400983c:	push   edx
6400983d:	call   0x64015160
64009842:	add    esp,0xc
64009845:	mov    eax,DWORD PTR [ebp+0xc]
64009848:	mov    DWORD PTR [ebp-0x220],eax
6400984e:	lea    ecx,[ebp-0xc0]
64009854:	mov    DWORD PTR [ebp-0x224],ecx
6400985a:	mov    edx,DWORD PTR [ebp-0x224]
64009860:	mov    DWORD PTR [ebp-0x228],edx
64009866:	mov    eax,DWORD PTR [ebp-0x220]
6400986c:	mov    cl,BYTE PTR [eax]
6400986e:	mov    BYTE PTR [ebp-0x229],cl
64009874:	mov    edx,DWORD PTR [ebp-0x224]
6400987a:	mov    al,BYTE PTR [ebp-0x229]
64009880:	mov    BYTE PTR [edx],al
64009882:	mov    ecx,DWORD PTR [ebp-0x220]
64009888:	add    ecx,0x1
6400988b:	mov    DWORD PTR [ebp-0x220],ecx
64009891:	mov    edx,DWORD PTR [ebp-0x224]
64009897:	add    edx,0x1
6400989a:	mov    DWORD PTR [ebp-0x224],edx
640098a0:	cmp    BYTE PTR [ebp-0x229],0x0
640098a7:	jne    0x64009866
640098a9:	mov    eax,DWORD PTR [ebp-0xc8]
640098af:	or     eax,DWORD PTR [ebp-0xc4]
640098b5:	jne    0x640098bc
640098b7:	jmp    0x640099e1
640098bc:	push   0x4
640098be:	push   0x3000
640098c3:	push   0x88
640098c8:	push   0x0
640098ca:	mov    ecx,DWORD PTR [ebp+0x8]
640098cd:	push   ecx
640098ce:	call   DWORD PTR ds:0x640240d4
640098d4:	mov    DWORD PTR [ebp-0x18],eax
640098d7:	cmp    DWORD PTR [ebp-0x18],0x0
640098db:	jne    0x640098ee
640098dd:	call   DWORD PTR ds:0x64024064
640098e3:	mov    DWORD PTR [ebp-0xd4],eax
640098e9:	jmp    0x640099e1
640098ee:	lea    edx,[ebp-0x20]
640098f1:	push   edx
640098f2:	push   0x88
640098f7:	lea    eax,[ebp-0xc8]
640098fd:	push   eax
640098fe:	mov    ecx,DWORD PTR [ebp-0x18]
64009901:	push   ecx
64009902:	mov    edx,DWORD PTR [ebp+0x8]
64009905:	push   edx
64009906:	call   DWORD PTR ds:0x640240e4
6400990c:	lea    eax,[ebp-0x38]
6400990f:	call   0x6400aa10
64009914:	mov    DWORD PTR [ebp-0xcc],eax
6400991a:	push   0x40
6400991c:	push   0x3000
64009921:	mov    eax,DWORD PTR [ebp-0xcc]
64009927:	push   eax
64009928:	push   0x0
6400992a:	mov    ecx,DWORD PTR [ebp+0x8]
6400992d:	push   ecx
6400992e:	call   DWORD PTR ds:0x640240d4
64009934:	mov    DWORD PTR [ebp-0x30],eax
64009937:	mov    edx,DWORD PTR [ebp-0x30]
6400993a:	push   edx
6400993b:	lea    eax,[ebp-0x38]
6400993e:	call   0x6400aa20
64009943:	cmp    DWORD PTR [ebp-0x30],0x0
64009947:	jne    0x6400994e
64009949:	jmp    0x640099e1
6400994e:	lea    eax,[ebp-0x20]
64009951:	push   eax
64009952:	mov    ecx,DWORD PTR [ebp-0xcc]
64009958:	push   ecx
64009959:	lea    eax,[ebp-0x38]
6400995c:	call   0x6400aa00
64009961:	push   eax
64009962:	mov    edx,DWORD PTR [ebp-0x30]
64009965:	push   edx
64009966:	mov    eax,DWORD PTR [ebp+0x8]
64009969:	push   eax
6400996a:	call   DWORD PTR ds:0x640240e4
64009970:	mov    DWORD PTR [ebp-0xd0],0x0
6400997a:	lea    ecx,[ebp-0xd0]
64009980:	push   ecx
64009981:	push   0xf01ff
64009986:	mov    edx,DWORD PTR [ebp+0x8]
64009989:	push   edx
6400998a:	call   DWORD PTR ds:0x64024008
64009990:	mov    eax,DWORD PTR [ebp-0xd0]
64009996:	push   eax
64009997:	call   DWORD PTR ds:0x64024004
6400999d:	lea    ecx,[ebp-0x2c]
640099a0:	push   ecx
640099a1:	push   0x0
640099a3:	mov    edx,DWORD PTR [ebp-0x18]
640099a6:	push   edx
640099a7:	mov    eax,DWORD PTR [ebp-0x30]
640099aa:	push   eax
640099ab:	push   0x0
640099ad:	push   0x0
640099af:	mov    ecx,DWORD PTR [ebp+0x8]
640099b2:	push   ecx
640099b3:	call   DWORD PTR ds:0x640240cc
640099b9:	mov    DWORD PTR [ebp-0x24],eax
640099bc:	cmp    DWORD PTR [ebp-0x24],0x0
640099c0:	jne    0x640099c4
640099c2:	jmp    0x640099e1
640099c4:	call   DWORD PTR ds:0x64024000
640099ca:	push   0xffffffff
640099cc:	mov    edx,DWORD PTR [ebp-0x24]
640099cf:	push   edx
640099d0:	call   DWORD PTR ds:0x64024088
640099d6:	mov    BYTE PTR [ebp-0x11],0x1
640099da:	jmp    0x640099e1
640099dc:	jmp    0x640097cf
640099e1:	jmp    0x640099f0
640099e3:	mov    DWORD PTR [ebp-0x4],0x3
640099ea:	mov    eax,0x640099f7
640099ef:	ret    
640099f0:	mov    DWORD PTR [ebp-0x4],0x3
640099f7:	cmp    DWORD PTR [ebp-0x18],0x0
640099fb:	je     0x64009a12
640099fd:	push   0x8000
64009a02:	push   0x0
64009a04:	mov    eax,DWORD PTR [ebp-0x18]
64009a07:	push   eax
64009a08:	mov    ecx,DWORD PTR [ebp+0x8]
64009a0b:	push   ecx
64009a0c:	call   DWORD PTR ds:0x640240c4
64009a12:	cmp    DWORD PTR [ebp-0x30],0x0
64009a16:	je     0x64009a2d
64009a18:	push   0x8000
64009a1d:	push   0x0
64009a1f:	mov    edx,DWORD PTR [ebp-0x30]
64009a22:	push   edx
64009a23:	mov    eax,DWORD PTR [ebp+0x8]
64009a26:	push   eax
64009a27:	call   DWORD PTR ds:0x640240c4
64009a2d:	cmp    DWORD PTR [ebp-0x24],0x0
64009a31:	je     0x64009a4b
64009a33:	lea    ecx,[ebp-0x1c]
64009a36:	push   ecx
64009a37:	mov    edx,DWORD PTR [ebp-0x24]
64009a3a:	push   edx
64009a3b:	call   DWORD PTR ds:0x640240d0
64009a41:	mov    eax,DWORD PTR [ebp-0x24]
64009a44:	push   eax
64009a45:	call   DWORD PTR ds:0x6402406c
64009a4b:	mov    cl,BYTE PTR [ebp-0x11]
64009a4e:	mov    BYTE PTR [ebp-0xf9],cl
64009a54:	mov    BYTE PTR [ebp-0x4],0x0
64009a58:	lea    eax,[ebp-0x38]
64009a5b:	call   0x64006cd0
64009a60:	mov    DWORD PTR [ebp-0x4],0xffffffff
64009a67:	mov    edx,DWORD PTR [ebp-0x28]
64009a6a:	mov    DWORD PTR [ebp-0x1fc],edx
64009a70:	mov    eax,DWORD PTR [ebp-0x1fc]
64009a76:	mov    DWORD PTR [ebp-0x1f8],eax
64009a7c:	cmp    DWORD PTR [ebp-0x1f8],0x0
64009a83:	je     0x64009aa2
64009a85:	push   0x1
64009a87:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a8d:	mov    edx,DWORD PTR [ecx]
64009a8f:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a95:	mov    eax,DWORD PTR [edx+0x4]
64009a98:	call   eax
64009a9a:	mov    DWORD PTR [ebp-0x230],eax
64009aa0:	jmp    0x64009aac
64009aa2:	mov    DWORD PTR [ebp-0x230],0x0
64009aac:	mov    al,BYTE PTR [ebp-0xf9]
64009ab2:	mov    ecx,DWORD PTR [ebp-0xc]
64009ab5:	mov    DWORD PTR fs:0x0,ecx
64009abc:	pop    ecx
64009abd:	pop    edi
64009abe:	pop    esi
64009abf:	pop    ebx
64009ac0:	mov    ecx,DWORD PTR [ebp-0x3c]
64009ac3:	xor    ecx,ebp
64009ac5:	call   0x64013d06
64009aca:	mov    esp,ebp
64009acc:	pop    ebp
64009acd:	ret    
64009ace:	int3   
64009acf:	int3   
64009ad0:	push   ebp
64009ad1:	mov    ebp,esp
64009ad3:	sub    esp,0x14
64009ad6:	mov    DWORD PTR [ebp-0x10],ecx
64009ad9:	mov    eax,DWORD PTR [ebp-0x10]
64009adc:	mov    ecx,DWORD PTR [eax]
64009ade:	mov    DWORD PTR [ebp-0x8],ecx
64009ae1:	mov    edx,DWORD PTR [ebp-0x8]
64009ae4:	mov    DWORD PTR [ebp-0x4],edx
64009ae7:	cmp    DWORD PTR [ebp-0x4],0x0
64009aeb:	je     0x64009b13
64009aed:	mov    eax,DWORD PTR [ebp-0x4]
64009af0:	call   0x64006cd0
64009af5:	mov    eax,0x1
64009afa:	and    eax,0x1
64009afd:	je     0x64009b0b
64009aff:	mov    ecx,DWORD PTR [ebp-0x4]
64009b02:	push   ecx
64009b03:	call   0x64013644
64009b08:	add    esp,0x4
64009b0b:	mov    edx,DWORD PTR [ebp-0x4]
64009b0e:	mov    DWORD PTR [ebp-0x14],edx
64009b11:	jmp    0x64009b1a
64009b13:	mov    DWORD PTR [ebp-0x14],0x0
64009b1a:	mov    esp,ebp
64009b1c:	pop    ebp
64009b1d:	ret    
64009b1e:	int3   
64009b1f:	int3   
64009b20:	push   ebp
64009b21:	mov    ebp,esp
64009b23:	sub    esp,0x14
64009b26:	mov    DWORD PTR [ebp-0x10],ecx
64009b29:	mov    eax,DWORD PTR [ebp-0x10]
64009b2c:	mov    ecx,DWORD PTR [ebp+0x8]
64009b2f:	cmp    ecx,DWORD PTR [eax]
64009b31:	je     0x64009b74
64009b33:	mov    edx,DWORD PTR [ebp-0x10]
64009b36:	mov    eax,DWORD PTR [edx]
64009b38:	mov    DWORD PTR [ebp-0x8],eax
64009b3b:	mov    ecx,DWORD PTR [ebp-0x8]
64009b3e:	mov    DWORD PTR [ebp-0x4],ecx
64009b41:	cmp    DWORD PTR [ebp-0x4],0x0
64009b45:	je     0x64009b6d
64009b47:	mov    eax,DWORD PTR [ebp-0x4]
64009b4a:	call   0x64006cd0
64009b4f:	mov    edx,0x1
64009b54:	and    edx,0x1
64009b57:	je     0x64009b65
64009b59:	mov    eax,DWORD PTR [ebp-0x4]
64009b5c:	push   eax
64009b5d:	call   0x64013644
64009b62:	add    esp,0x4
64009b65:	mov    ecx,DWORD PTR [ebp-0x4]
64009b68:	mov    DWORD PTR [ebp-0x14],ecx
64009b6b:	jmp    0x64009b74
64009b6d:	mov    DWORD PTR [ebp-0x14],0x0
64009b74:	mov    edx,DWORD PTR [ebp-0x10]
64009b77:	mov    eax,DWORD PTR [ebp+0x8]
64009b7a:	mov    DWORD PTR [edx],eax
64009b7c:	mov    esp,ebp
64009b7e:	pop    ebp
64009b7f:	ret    0x4
64009b82:	int3   
64009b83:	int3   
64009b84:	int3   
64009b85:	int3   
64009b86:	int3   
64009b87:	int3   
64009b88:	int3   
64009b89:	int3   
64009b8a:	int3   
64009b8b:	int3   
64009b8c:	int3   
64009b8d:	int3   
64009b8e:	int3   
64009b8f:	int3   
64009b90:	push   ebp
64009b91:	mov    ebp,esp
64009b93:	sub    esp,0x18
64009b96:	mov    DWORD PTR [ebp-0x18],ecx
64009b99:	lea    eax,[ebp-0x12]
64009b9c:	mov    DWORD PTR [ebp-0x8],eax
64009b9f:	lea    ecx,[ebp-0x11]
64009ba2:	mov    DWORD PTR [ebp-0x10],ecx
64009ba5:	mov    edx,DWORD PTR [ebp-0x18]
64009ba8:	mov    DWORD PTR [edx+0x4],0x0
64009baf:	mov    eax,DWORD PTR [ebp-0x18]
64009bb2:	mov    DWORD PTR [eax+0x8],0x0
64009bb9:	mov    ecx,DWORD PTR [ebp-0x18]
64009bbc:	mov    DWORD PTR [ecx+0xc],0x0
64009bc3:	mov    edx,DWORD PTR [ebp-0x18]
64009bc6:	mov    DWORD PTR [edx+0x10],0x0
64009bcd:	mov    eax,DWORD PTR [ebp-0x18]
64009bd0:	mov    esp,ebp
64009bd2:	pop    ebp
64009bd3:	ret    
64009bd4:	int3   
64009bd5:	int3   
64009bd6:	int3   
64009bd7:	int3   
64009bd8:	int3   
64009bd9:	int3   
64009bda:	int3   
64009bdb:	int3   
64009bdc:	int3   
64009bdd:	int3   
64009bde:	int3   
64009bdf:	int3   
64009be0:	push   ebp
64009be1:	mov    ebp,esp
64009be3:	sub    esp,0x8
64009be6:	mov    DWORD PTR [ebp-0x8],ecx
64009be9:	mov    eax,DWORD PTR [ebp-0x8]
64009bec:	mov    ecx,DWORD PTR [eax+0x10]
64009bef:	mov    DWORD PTR [ebp-0x4],ecx
64009bf2:	mov    eax,DWORD PTR [ebp-0x4]
64009bf5:	mov    esp,ebp
64009bf7:	pop    ebp
64009bf8:	ret    
64009bf9:	int3   
64009bfa:	int3   
64009bfb:	int3   
64009bfc:	int3   
64009bfd:	int3   
64009bfe:	int3   
64009bff:	int3   
64009c00:	push   ebp
64009c01:	mov    ebp,esp
64009c03:	sub    esp,0x20
64009c06:	mov    DWORD PTR [ebp-0x20],ecx
64009c09:	lea    eax,[ebp-0xc]
64009c0c:	push   eax
64009c0d:	mov    ecx,DWORD PTR [ebp-0x20]
64009c10:	call   0x6400a010
64009c15:	mov    DWORD PTR [ebp-0x1c],eax
64009c18:	mov    ecx,DWORD PTR [ebp-0x1c]
64009c1b:	call   0x6400a550
64009c20:	mov    esp,ebp
64009c22:	pop    ebp
64009c23:	ret    
64009c24:	int3   
64009c25:	int3   
64009c26:	int3   
64009c27:	int3   
64009c28:	int3   
64009c29:	int3   
64009c2a:	int3   
64009c2b:	int3   
64009c2c:	int3   
64009c2d:	int3   
64009c2e:	int3   
64009c2f:	int3   
64009c30:	push   ebp
64009c31:	mov    ebp,esp
64009c33:	sub    esp,0xc8
64009c39:	mov    DWORD PTR [ebp-0xc8],ecx
64009c3f:	mov    eax,DWORD PTR [ebp+0x8]
64009c42:	push   eax
64009c43:	mov    ecx,DWORD PTR [ebp-0xc8]
64009c49:	call   0x64009e00
64009c4e:	mov    esp,ebp
64009c50:	pop    ebp
64009c51:	ret    0x4
64009c54:	int3   
64009c55:	int3   
64009c56:	int3   
64009c57:	int3   
64009c58:	int3   
64009c59:	int3   
64009c5a:	int3   
64009c5b:	int3   
64009c5c:	int3   
64009c5d:	int3   
64009c5e:	int3   
64009c5f:	int3   
64009c60:	push   ebp
64009c61:	mov    ebp,esp
64009c63:	sub    esp,0x8
64009c66:	mov    DWORD PTR [ebp-0x8],ecx
64009c69:	mov    ecx,DWORD PTR [ebp-0x8]
64009c6c:	call   0x64009d80
64009c71:	mov    esp,ebp
64009c73:	pop    ebp
64009c74:	ret    
64009c75:	int3   
64009c76:	int3   
64009c77:	int3   
64009c78:	int3   
64009c79:	int3   
64009c7a:	int3   
64009c7b:	int3   
64009c7c:	int3   
64009c7d:	int3   
64009c7e:	int3   
64009c7f:	int3   
64009c80:	push   ebp
64009c81:	mov    ebp,esp
64009c83:	sub    esp,0x1c
64009c86:	mov    DWORD PTR [ebp-0x1c],ecx
64009c89:	mov    ecx,DWORD PTR [ebp-0x1c]
64009c8c:	call   0x64009f60
64009c91:	mov    esp,ebp
64009c93:	pop    ebp
64009c94:	ret    
64009c95:	int3   
64009c96:	int3   
64009c97:	int3   
64009c98:	int3   
64009c99:	int3   
64009c9a:	int3   
64009c9b:	int3   
64009c9c:	int3   
64009c9d:	int3   
64009c9e:	int3   
64009c9f:	int3   
64009ca0:	push   ebp
64009ca1:	mov    ebp,esp
64009ca3:	push   ecx
64009ca4:	mov    DWORD PTR [ebp-0x4],ecx
64009ca7:	mov    eax,DWORD PTR [ebp-0x4]
64009caa:	mov    ecx,DWORD PTR [ebp+0x8]
64009cad:	mov    DWORD PTR [eax],ecx
64009caf:	mov    eax,DWORD PTR [ebp-0x4]
64009cb2:	mov    esp,ebp
64009cb4:	pop    ebp
64009cb5:	ret    0x4
64009cb8:	int3   
64009cb9:	int3   
64009cba:	int3   
64009cbb:	int3   
64009cbc:	int3   
64009cbd:	int3   
64009cbe:	int3   
64009cbf:	int3   
64009cc0:	push   ebp
64009cc1:	mov    ebp,esp
64009cc3:	sub    esp,0x10
64009cc6:	mov    DWORD PTR [ebp-0xc],ecx
64009cc9:	mov    eax,DWORD PTR [ebp-0xc]
64009ccc:	mov    ecx,DWORD PTR [eax]
64009cce:	mov    DWORD PTR [ebp-0x8],ecx
64009cd1:	mov    edx,DWORD PTR [ebp-0x8]
64009cd4:	mov    DWORD PTR [ebp-0x4],edx
64009cd7:	cmp    DWORD PTR [ebp-0x4],0x0
64009cdb:	je     0x64009cf1
64009cdd:	push   0x1
64009cdf:	mov    eax,DWORD PTR [ebp-0x4]
64009ce2:	mov    edx,DWORD PTR [eax]
64009ce4:	mov    ecx,DWORD PTR [ebp-0x4]
64009ce7:	mov    eax,DWORD PTR [edx+0x4]
64009cea:	call   eax
64009cec:	mov    DWORD PTR [ebp-0x10],eax
64009cef:	jmp    0x64009cf8
64009cf1:	mov    DWORD PTR [ebp-0x10],0x0
64009cf8:	mov    esp,ebp
64009cfa:	pop    ebp
64009cfb:	ret    
64009cfc:	int3   
64009cfd:	int3   
64009cfe:	int3   
64009cff:	int3   
64009d00:	push   ebp
64009d01:	mov    ebp,esp
64009d03:	sub    esp,0x8
64009d06:	mov    DWORD PTR [ebp-0x8],ecx
64009d09:	mov    eax,DWORD PTR [ebp-0x8]
64009d0c:	mov    ecx,DWORD PTR [eax]
64009d0e:	mov    DWORD PTR [ebp-0x4],ecx
64009d11:	mov    eax,DWORD PTR [ebp-0x4]
64009d14:	mov    esp,ebp
64009d16:	pop    ebp
64009d17:	ret    
64009d18:	int3   
64009d19:	int3   
64009d1a:	int3   
64009d1b:	int3   
64009d1c:	int3   
64009d1d:	int3   
64009d1e:	int3   
64009d1f:	int3   
64009d20:	push   ebp
64009d21:	mov    ebp,esp
64009d23:	push   ecx
64009d24:	mov    DWORD PTR [ebp-0x4],ecx
64009d27:	mov    eax,DWORD PTR [ebp-0x4]
64009d2a:	mov    eax,DWORD PTR [eax]
64009d2c:	mov    esp,ebp
64009d2e:	pop    ebp
64009d2f:	ret    
64009d30:	push   ebp
64009d31:	mov    ebp,esp
64009d33:	sub    esp,0x10
64009d36:	mov    DWORD PTR [ebp-0xc],ecx
64009d39:	mov    eax,DWORD PTR [ebp-0xc]
64009d3c:	mov    ecx,DWORD PTR [ebp+0x8]
64009d3f:	cmp    ecx,DWORD PTR [eax]
64009d41:	je     0x64009d72
64009d43:	mov    edx,DWORD PTR [ebp-0xc]
64009d46:	mov    eax,DWORD PTR [edx]
64009d48:	mov    DWORD PTR [ebp-0x8],eax
64009d4b:	mov    ecx,DWORD PTR [ebp-0x8]
64009d4e:	mov    DWORD PTR [ebp-0x4],ecx
64009d51:	cmp    DWORD PTR [ebp-0x4],0x0
64009d55:	je     0x64009d6b
64009d57:	push   0x1
64009d59:	mov    edx,DWORD PTR [ebp-0x4]
64009d5c:	mov    eax,DWORD PTR [edx]
64009d5e:	mov    ecx,DWORD PTR [ebp-0x4]
64009d61:	mov    edx,DWORD PTR [eax+0x4]
64009d64:	call   edx
64009d66:	mov    DWORD PTR [ebp-0x10],eax
64009d69:	jmp    0x64009d72
64009d6b:	mov    DWORD PTR [ebp-0x10],0x0
64009d72:	mov    eax,DWORD PTR [ebp-0xc]
64009d75:	mov    ecx,DWORD PTR [ebp+0x8]
64009d78:	mov    DWORD PTR [eax],ecx
64009d7a:	mov    esp,ebp
64009d7c:	pop    ebp
64009d7d:	ret    0x4
64009d80:	push   ebp
64009d81:	mov    ebp,esp
64009d83:	sub    esp,0x8
64009d86:	mov    DWORD PTR [ebp-0x8],ecx
64009d89:	mov    eax,DWORD PTR [ebp-0x8]
64009d8c:	xor    ecx,ecx
64009d8e:	cmp    DWORD PTR [eax+0x10],0x0
64009d92:	sete   cl
64009d95:	movzx  edx,cl
64009d98:	test   edx,edx
64009d9a:	jne    0x64009df4
64009d9c:	mov    eax,DWORD PTR [ebp-0x8]
64009d9f:	mov    ecx,DWORD PTR [eax+0xc]
64009da2:	shr    ecx,0x2
64009da5:	mov    DWORD PTR [ebp-0x4],ecx
64009da8:	mov    edx,DWORD PTR [ebp-0x8]
64009dab:	mov    eax,DWORD PTR [edx+0xc]
64009dae:	add    eax,0x1
64009db1:	mov    ecx,DWORD PTR [ebp-0x8]
64009db4:	mov    DWORD PTR [ecx+0xc],eax
64009db7:	mov    edx,DWORD PTR [ebp-0x8]
64009dba:	mov    eax,DWORD PTR [edx+0x8]
64009dbd:	shl    eax,0x2
64009dc0:	mov    ecx,DWORD PTR [ebp-0x8]
64009dc3:	cmp    eax,DWORD PTR [ecx+0xc]
64009dc6:	ja     0x64009dd2
64009dc8:	mov    edx,DWORD PTR [ebp-0x8]
64009dcb:	mov    DWORD PTR [edx+0xc],0x0
64009dd2:	mov    eax,DWORD PTR [ebp-0x8]
64009dd5:	mov    ecx,DWORD PTR [eax+0x10]
64009dd8:	sub    ecx,0x1
64009ddb:	mov    edx,DWORD PTR [ebp-0x8]
64009dde:	mov    DWORD PTR [edx+0x10],ecx
64009de1:	mov    eax,DWORD PTR [ebp-0x8]
64009de4:	cmp    DWORD PTR [eax+0x10],0x0
64009de8:	jne    0x64009df4
64009dea:	mov    ecx,DWORD PTR [ebp-0x8]
64009ded:	mov    DWORD PTR [ecx+0xc],0x0
64009df4:	mov    esp,ebp
64009df6:	pop    ebp
64009df7:	ret    
64009df8:	int3   
64009df9:	int3   
64009dfa:	int3   
64009dfb:	int3   
64009dfc:	int3   
64009dfd:	int3   
64009dfe:	int3   
64009dff:	int3   
64009e00:	push   ebp
64009e01:	mov    ebp,esp
64009e03:	sub    esp,0xe8
64009e09:	push   esi
64009e0a:	mov    DWORD PTR [ebp-0xe4],ecx
64009e10:	mov    eax,DWORD PTR [ebp-0xe4]
64009e16:	mov    eax,DWORD PTR [eax+0xc]
64009e19:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e1f:	add    eax,DWORD PTR [ecx+0x10]
64009e22:	xor    edx,edx
64009e24:	mov    ecx,0x4
64009e29:	div    ecx
64009e2b:	test   edx,edx
64009e2d:	jne    0x64009e56
64009e2f:	mov    edx,DWORD PTR [ebp-0xe4]
64009e35:	mov    eax,DWORD PTR [edx+0x10]
64009e38:	add    eax,0x4
64009e3b:	shr    eax,0x2
64009e3e:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e44:	cmp    DWORD PTR [ecx+0x8],eax
64009e47:	ja     0x64009e56
64009e49:	push   0x1
64009e4b:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e51:	call   0x6400a100
64009e56:	mov    edx,DWORD PTR [ebp-0xe4]
64009e5c:	mov    eax,DWORD PTR [edx+0xc]
64009e5f:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e65:	add    eax,DWORD PTR [ecx+0x10]
64009e68:	mov    DWORD PTR [ebp-0x4],eax
64009e6b:	mov    edx,DWORD PTR [ebp-0x4]
64009e6e:	shr    edx,0x2
64009e71:	mov    DWORD PTR [ebp-0x8],edx
64009e74:	mov    eax,DWORD PTR [ebp-0xe4]
64009e7a:	mov    ecx,DWORD PTR [eax+0x8]
64009e7d:	cmp    ecx,DWORD PTR [ebp-0x8]
64009e80:	ja     0x64009e91
64009e82:	mov    edx,DWORD PTR [ebp-0xe4]
64009e88:	mov    eax,DWORD PTR [ebp-0x8]
64009e8b:	sub    eax,DWORD PTR [edx+0x8]
64009e8e:	mov    DWORD PTR [ebp-0x8],eax
64009e91:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e97:	mov    edx,DWORD PTR [ecx+0x4]
64009e9a:	mov    eax,DWORD PTR [ebp-0x8]
64009e9d:	cmp    DWORD PTR [edx+eax*4],0x0
64009ea1:	jne    0x64009ec2
64009ea3:	push   0x4
64009ea5:	mov    ecx,DWORD PTR [ebp-0xe4]
64009eab:	add    ecx,0x1
64009eae:	call   0x6400a4b0
64009eb3:	mov    ecx,DWORD PTR [ebp-0xe4]
64009eb9:	mov    edx,DWORD PTR [ecx+0x4]
64009ebc:	mov    ecx,DWORD PTR [ebp-0x8]
64009ebf:	mov    DWORD PTR [edx+ecx*4],eax
64009ec2:	mov    edx,DWORD PTR [ebp-0xe4]
64009ec8:	mov    ecx,DWORD PTR [edx+0x4]
64009ecb:	mov    eax,DWORD PTR [ebp-0x4]
64009ece:	xor    edx,edx
64009ed0:	mov    esi,0x4
64009ed5:	div    esi
64009ed7:	mov    eax,DWORD PTR [ebp-0x8]
64009eda:	mov    ecx,DWORD PTR [ecx+eax*4]
64009edd:	lea    edx,[ecx+edx*4]
64009ee0:	mov    DWORD PTR [ebp-0xe0],edx
64009ee6:	mov    eax,DWORD PTR [ebp-0xe0]
64009eec:	mov    DWORD PTR [ebp-0xd8],eax
64009ef2:	mov    ecx,DWORD PTR [ebp-0xd8]
64009ef8:	push   ecx
64009ef9:	push   0x4
64009efb:	call   0x640011f0
64009f00:	add    esp,0x8
64009f03:	mov    DWORD PTR [ebp-0xdc],eax
64009f09:	cmp    DWORD PTR [ebp-0xdc],0x0
64009f10:	je     0x64009f2d
64009f12:	mov    edx,DWORD PTR [ebp-0xdc]
64009f18:	mov    eax,DWORD PTR [ebp+0x8]
64009f1b:	mov    ecx,DWORD PTR [eax]
64009f1d:	mov    DWORD PTR [edx],ecx
64009f1f:	mov    edx,DWORD PTR [ebp-0xdc]
64009f25:	mov    DWORD PTR [ebp-0xe8],edx
64009f2b:	jmp    0x64009f37
64009f2d:	mov    DWORD PTR [ebp-0xe8],0x0
64009f37:	mov    eax,DWORD PTR [ebp-0xe4]
64009f3d:	mov    ecx,DWORD PTR [eax+0x10]
64009f40:	add    ecx,0x1
64009f43:	mov    edx,DWORD PTR [ebp-0xe4]
64009f49:	mov    DWORD PTR [edx+0x10],ecx
64009f4c:	pop    esi
64009f4d:	mov    esp,ebp
64009f4f:	pop    ebp
64009f50:	ret    0x4
64009f53:	int3   
64009f54:	int3   
64009f55:	int3   
64009f56:	int3   
64009f57:	int3   
64009f58:	int3   
64009f59:	int3   
64009f5a:	int3   
64009f5b:	int3   
64009f5c:	int3   
64009f5d:	int3   
64009f5e:	int3   
64009f5f:	int3   
64009f60:	push   ebp
64009f61:	mov    ebp,esp
64009f63:	sub    esp,0x1c
64009f66:	mov    DWORD PTR [ebp-0x1c],ecx
64009f69:	mov    eax,DWORD PTR [ebp-0x1c]
64009f6c:	xor    ecx,ecx
64009f6e:	cmp    DWORD PTR [eax+0x10],0x0
64009f72:	sete   cl
64009f75:	movzx  edx,cl
64009f78:	test   edx,edx
64009f7a:	jne    0x64009f86
64009f7c:	mov    ecx,DWORD PTR [ebp-0x1c]
64009f7f:	call   0x6400a080
64009f84:	jmp    0x64009f69
64009f86:	mov    eax,DWORD PTR [ebp-0x1c]
64009f89:	mov    ecx,DWORD PTR [eax+0x8]
64009f8c:	mov    DWORD PTR [ebp-0x4],ecx
64009f8f:	cmp    DWORD PTR [ebp-0x4],0x0
64009f93:	jbe    0x64009fca
64009f95:	mov    edx,DWORD PTR [ebp-0x4]
64009f98:	sub    edx,0x1
64009f9b:	mov    DWORD PTR [ebp-0x4],edx
64009f9e:	mov    eax,DWORD PTR [ebp-0x1c]
64009fa1:	mov    ecx,DWORD PTR [eax+0x4]
64009fa4:	mov    edx,DWORD PTR [ebp-0x4]
64009fa7:	cmp    DWORD PTR [ecx+edx*4],0x0
64009fab:	je     0x64009fc8
64009fad:	mov    eax,DWORD PTR [ebp-0x1c]
64009fb0:	mov    ecx,DWORD PTR [eax+0x4]
64009fb3:	mov    edx,DWORD PTR [ebp-0x4]
64009fb6:	mov    eax,DWORD PTR [ecx+edx*4]
64009fb9:	mov    DWORD PTR [ebp-0x10],eax
64009fbc:	mov    ecx,DWORD PTR [ebp-0x10]
64009fbf:	push   ecx
64009fc0:	call   0x64013644
64009fc5:	add    esp,0x4
64009fc8:	jmp    0x64009f8f
64009fca:	mov    edx,DWORD PTR [ebp-0x1c]
64009fcd:	cmp    DWORD PTR [edx+0x4],0x0
64009fd1:	je     0x64009ff1
64009fd3:	mov    eax,DWORD PTR [ebp-0x1c]
64009fd6:	mov    ecx,DWORD PTR [eax+0x8]
64009fd9:	mov    DWORD PTR [ebp-0x18],ecx
64009fdc:	mov    edx,DWORD PTR [ebp-0x1c]
64009fdf:	mov    eax,DWORD PTR [edx+0x4]
64009fe2:	mov    DWORD PTR [ebp-0x14],eax
64009fe5:	mov    ecx,DWORD PTR [ebp-0x14]
64009fe8:	push   ecx
64009fe9:	call   0x64013644
64009fee:	add    esp,0x4
64009ff1:	mov    edx,DWORD PTR [ebp-0x1c]
64009ff4:	mov    DWORD PTR [edx+0x8],0x0
64009ffb:	mov    eax,DWORD PTR [ebp-0x1c]
64009ffe:	mov    DWORD PTR [eax+0x4],0x0
6400a005:	mov    esp,ebp
6400a007:	pop    ebp
6400a008:	ret    
6400a009:	int3   
6400a00a:	int3   
6400a00b:	int3   
6400a00c:	int3   
6400a00d:	int3   
6400a00e:	int3   
6400a00f:	int3   
6400a010:	push   ebp
6400a011:	mov    ebp,esp
6400a013:	sub    esp,0x8
6400a016:	mov    DWORD PTR [ebp-0x8],ecx
6400a019:	mov    eax,DWORD PTR [ebp-0x8]
6400a01c:	mov    ecx,DWORD PTR [eax+0xc]
6400a01f:	mov    DWORD PTR [ebp-0x4],ecx
6400a022:	mov    ecx,DWORD PTR [ebp+0x8]
6400a025:	call   0x64001300
6400a02a:	mov    edx,0x1
6400a02f:	test   edx,edx
6400a031:	je     0x6400a05a
6400a033:	cmp    DWORD PTR [ebp-0x8],0x0
6400a037:	je     0x6400a055
6400a039:	mov    eax,DWORD PTR [ebp-0x8]
6400a03c:	mov    ecx,DWORD PTR [eax+0xc]
6400a03f:	cmp    ecx,DWORD PTR [ebp-0x4]
6400a042:	ja     0x6400a055
6400a044:	mov    edx,DWORD PTR [ebp-0x8]
6400a047:	mov    eax,DWORD PTR [edx+0xc]
6400a04a:	mov    ecx,DWORD PTR [ebp-0x8]
6400a04d:	add    eax,DWORD PTR [ecx+0x10]
6400a050:	cmp    DWORD PTR [ebp-0x4],eax
6400a053:	jbe    0x6400a05a
6400a055:	call   0x64013e76
6400a05a:	mov    edx,DWORD PTR [ebp+0x8]
6400a05d:	mov    eax,DWORD PTR [ebp-0x8]
6400a060:	mov    DWORD PTR [edx+0x4],eax
6400a063:	mov    ecx,DWORD PTR [ebp+0x8]
6400a066:	mov    edx,DWORD PTR [ebp-0x4]
6400a069:	mov    DWORD PTR [ecx+0x8],edx
6400a06c:	mov    eax,DWORD PTR [ebp+0x8]
6400a06f:	mov    esp,ebp
6400a071:	pop    ebp
6400a072:	ret    0x4
6400a075:	int3   
6400a076:	int3   
6400a077:	int3   
6400a078:	int3   
6400a079:	int3   
6400a07a:	int3   
6400a07b:	int3   
6400a07c:	int3   
6400a07d:	int3   
6400a07e:	int3   
6400a07f:	int3   
6400a080:	push   ebp
6400a081:	mov    ebp,esp
6400a083:	sub    esp,0xc
6400a086:	mov    DWORD PTR [ebp-0xc],ecx
6400a089:	mov    eax,DWORD PTR [ebp-0xc]
6400a08c:	xor    ecx,ecx
6400a08e:	cmp    DWORD PTR [eax+0x10],0x0
6400a092:	sete   cl
6400a095:	movzx  edx,cl
6400a098:	test   edx,edx
6400a09a:	jne    0x6400a0f1
6400a09c:	mov    eax,DWORD PTR [ebp-0xc]
6400a09f:	mov    ecx,DWORD PTR [eax+0x10]
6400a0a2:	mov    edx,DWORD PTR [ebp-0xc]
6400a0a5:	mov    eax,DWORD PTR [edx+0xc]
6400a0a8:	lea    ecx,[ecx+eax*1-0x1]
6400a0ac:	mov    DWORD PTR [ebp-0x4],ecx
6400a0af:	mov    edx,DWORD PTR [ebp-0x4]
6400a0b2:	shr    edx,0x2
6400a0b5:	mov    DWORD PTR [ebp-0x8],edx
6400a0b8:	mov    eax,DWORD PTR [ebp-0xc]
6400a0bb:	mov    ecx,DWORD PTR [eax+0x8]
6400a0be:	cmp    ecx,DWORD PTR [ebp-0x8]
6400a0c1:	ja     0x6400a0cf
6400a0c3:	mov    edx,DWORD PTR [ebp-0xc]
6400a0c6:	mov    eax,DWORD PTR [ebp-0x8]
6400a0c9:	sub    eax,DWORD PTR [edx+0x8]
6400a0cc:	mov    DWORD PTR [ebp-0x8],eax
6400a0cf:	mov    ecx,DWORD PTR [ebp-0xc]
6400a0d2:	mov    edx,DWORD PTR [ecx+0x10]
6400a0d5:	sub    edx,0x1
6400a0d8:	mov    eax,DWORD PTR [ebp-0xc]
6400a0db:	mov    DWORD PTR [eax+0x10],edx
6400a0de:	mov    ecx,DWORD PTR [ebp-0xc]
6400a0e1:	cmp    DWORD PTR [ecx+0x10],0x0
6400a0e5:	jne    0x6400a0f1
6400a0e7:	mov    edx,DWORD PTR [ebp-0xc]
6400a0ea:	mov    DWORD PTR [edx+0xc],0x0
6400a0f1:	mov    esp,ebp
6400a0f3:	pop    ebp
6400a0f4:	ret    
6400a0f5:	int3   
6400a0f6:	int3   
6400a0f7:	int3   
6400a0f8:	int3   
6400a0f9:	int3   
6400a0fa:	int3   
6400a0fb:	int3   
6400a0fc:	int3   
6400a0fd:	int3   
6400a0fe:	int3   
6400a0ff:	int3   
6400a100:	push   ebp
6400a101:	mov    ebp,esp
6400a103:	sub    esp,0x168
6400a109:	mov    DWORD PTR [ebp-0x160],ecx
6400a10f:	mov    DWORD PTR [ebp-0x20],0x3fffffff
6400a116:	cmp    DWORD PTR [ebp-0x20],0x0
6400a11a:	jbe    0x6400a127
6400a11c:	mov    eax,DWORD PTR [ebp-0x20]
6400a11f:	mov    DWORD PTR [ebp-0x164],eax
6400a125:	jmp    0x6400a131
6400a127:	mov    DWORD PTR [ebp-0x164],0x1
6400a131:	mov    ecx,DWORD PTR [ebp-0x164]
6400a137:	shr    ecx,0x2
6400a13a:	mov    edx,DWORD PTR [ebp-0x160]
6400a140:	sub    ecx,DWORD PTR [edx+0x8]
6400a143:	cmp    ecx,DWORD PTR [ebp+0x8]
6400a146:	jae    0x6400a14d
6400a148:	call   0x6400a4d0
6400a14d:	mov    eax,DWORD PTR [ebp-0x160]
6400a153:	mov    ecx,DWORD PTR [eax+0x8]
6400a156:	shr    ecx,1
6400a158:	mov    DWORD PTR [ebp-0x8],ecx
6400a15b:	cmp    DWORD PTR [ebp-0x8],0x8
6400a15f:	jae    0x6400a168
6400a161:	mov    DWORD PTR [ebp-0x8],0x8
6400a168:	mov    edx,DWORD PTR [ebp+0x8]
6400a16b:	cmp    edx,DWORD PTR [ebp-0x8]
6400a16e:	jae    0x6400a1af
6400a170:	mov    DWORD PTR [ebp-0x6c],0x3fffffff
6400a177:	cmp    DWORD PTR [ebp-0x6c],0x0
6400a17b:	jbe    0x6400a188
6400a17d:	mov    eax,DWORD PTR [ebp-0x6c]
6400a180:	mov    DWORD PTR [ebp-0x168],eax
6400a186:	jmp    0x6400a192
6400a188:	mov    DWORD PTR [ebp-0x168],0x1
6400a192:	mov    ecx,DWORD PTR [ebp-0x168]
6400a198:	shr    ecx,0x2
6400a19b:	sub    ecx,DWORD PTR [ebp-0x8]
6400a19e:	mov    edx,DWORD PTR [ebp-0x160]
6400a1a4:	cmp    DWORD PTR [edx+0x8],ecx
6400a1a7:	ja     0x6400a1af
6400a1a9:	mov    eax,DWORD PTR [ebp-0x8]
6400a1ac:	mov    DWORD PTR [ebp+0x8],eax
6400a1af:	mov    ecx,DWORD PTR [ebp-0x160]
6400a1b5:	mov    edx,DWORD PTR [ecx+0xc]
6400a1b8:	shr    edx,0x2
6400a1bb:	mov    DWORD PTR [ebp-0x4],edx
6400a1be:	mov    eax,DWORD PTR [ebp-0x160]
6400a1c4:	mov    ecx,DWORD PTR [eax+0x8]
6400a1c7:	add    ecx,DWORD PTR [ebp+0x8]
6400a1ca:	mov    DWORD PTR [ebp-0x7c],ecx
6400a1cd:	push   0x0
6400a1cf:	mov    edx,DWORD PTR [ebp-0x7c]
6400a1d2:	push   edx
6400a1d3:	call   0x6400a680
6400a1d8:	add    esp,0x8
6400a1db:	mov    DWORD PTR [ebp-0x10],eax
6400a1de:	mov    eax,DWORD PTR [ebp-0x4]
6400a1e1:	mov    ecx,DWORD PTR [ebp-0x10]
6400a1e4:	lea    edx,[ecx+eax*4]
6400a1e7:	mov    DWORD PTR [ebp-0xc],edx
6400a1ea:	mov    eax,DWORD PTR [ebp-0x160]
6400a1f0:	push   eax
6400a1f1:	mov    ecx,DWORD PTR [ebp-0xc]
6400a1f4:	push   ecx
6400a1f5:	mov    edx,DWORD PTR [ebp-0x160]
6400a1fb:	mov    eax,DWORD PTR [edx+0x8]
6400a1fe:	mov    ecx,DWORD PTR [ebp-0x160]
6400a204:	mov    edx,DWORD PTR [ecx+0x4]
6400a207:	lea    eax,[edx+eax*4]
6400a20a:	push   eax
6400a20b:	mov    ecx,DWORD PTR [ebp-0x160]
6400a211:	mov    edx,DWORD PTR [ecx+0x4]
6400a214:	mov    eax,DWORD PTR [ebp-0x4]
6400a217:	lea    ecx,[edx+eax*4]
6400a21a:	push   ecx
6400a21b:	call   0x6400a610
6400a220:	add    esp,0x10
6400a223:	mov    DWORD PTR [ebp-0xc],eax
6400a226:	mov    edx,DWORD PTR [ebp-0x4]
6400a229:	cmp    edx,DWORD PTR [ebp+0x8]
6400a22c:	ja     0x6400a354
6400a232:	mov    eax,DWORD PTR [ebp-0x160]
6400a238:	push   eax
6400a239:	mov    ecx,DWORD PTR [ebp-0xc]
6400a23c:	push   ecx
6400a23d:	mov    edx,DWORD PTR [ebp-0x160]
6400a243:	mov    eax,DWORD PTR [edx+0x4]
6400a246:	mov    ecx,DWORD PTR [ebp-0x4]
6400a249:	lea    edx,[eax+ecx*4]
6400a24c:	push   edx
6400a24d:	mov    eax,DWORD PTR [ebp-0x160]
6400a253:	mov    ecx,DWORD PTR [eax+0x4]
6400a256:	push   ecx
6400a257:	call   0x6400a610
6400a25c:	add    esp,0x10
6400a25f:	mov    DWORD PTR [ebp-0xc],eax
6400a262:	mov    DWORD PTR [ebp-0x14],0x0
6400a269:	mov    edx,DWORD PTR [ebp-0xc]
6400a26c:	mov    DWORD PTR [ebp-0xd0],edx
6400a272:	xor    eax,eax
6400a274:	mov    BYTE PTR [ebp-0xba],al
6400a27a:	mov    cl,BYTE PTR [ebp-0xbc]
6400a280:	mov    BYTE PTR [ebp-0xbb],cl
6400a286:	mov    dl,BYTE PTR [ebp-0xba]
6400a28c:	mov    BYTE PTR [ebp-0xc9],dl
6400a292:	mov    eax,DWORD PTR [ebp-0xd0]
6400a298:	mov    DWORD PTR [ebp-0xc8],eax
6400a29e:	mov    ecx,DWORD PTR [ebp-0xc8]
6400a2a4:	mov    DWORD PTR [ebp-0xc4],ecx
6400a2aa:	xor    edx,edx
6400a2ac:	mov    BYTE PTR [ebp-0xbd],dl
6400a2b2:	mov    al,BYTE PTR [ebp-0xbd]
6400a2b8:	push   eax
6400a2b9:	mov    cl,BYTE PTR [ebp-0xbe]
6400a2bf:	push   ecx
6400a2c0:	lea    edx,[ebp-0x14]
6400a2c3:	push   edx
6400a2c4:	mov    eax,DWORD PTR [ebp+0x8]
6400a2c7:	sub    eax,DWORD PTR [ebp-0x4]
6400a2ca:	push   eax
6400a2cb:	mov    ecx,DWORD PTR [ebp-0xc4]
6400a2d1:	push   ecx
6400a2d2:	call   0x6400a7a0
6400a2d7:	add    esp,0x14
6400a2da:	mov    DWORD PTR [ebp-0x18],0x0
6400a2e1:	mov    edx,DWORD PTR [ebp-0x10]
6400a2e4:	mov    DWORD PTR [ebp-0xe8],edx
6400a2ea:	xor    eax,eax
6400a2ec:	mov    BYTE PTR [ebp-0xd1],al
6400a2f2:	mov    cl,BYTE PTR [ebp-0xd3]
6400a2f8:	mov    BYTE PTR [ebp-0xd2],cl
6400a2fe:	mov    dl,BYTE PTR [ebp-0xd1]
6400a304:	mov    BYTE PTR [ebp-0xe1],dl
6400a30a:	mov    eax,DWORD PTR [ebp-0xe8]
6400a310:	mov    DWORD PTR [ebp-0xe0],eax
6400a316:	mov    ecx,DWORD PTR [ebp-0xe0]
6400a31c:	mov    DWORD PTR [ebp-0xdc],ecx
6400a322:	xor    edx,edx
6400a324:	mov    BYTE PTR [ebp-0xd4],dl
6400a32a:	mov    al,BYTE PTR [ebp-0xd4]
6400a330:	push   eax
6400a331:	mov    cl,BYTE PTR [ebp-0xd5]
6400a337:	push   ecx
6400a338:	lea    edx,[ebp-0x18]
6400a33b:	push   edx
6400a33c:	mov    eax,DWORD PTR [ebp-0x4]
6400a33f:	push   eax
6400a340:	mov    ecx,DWORD PTR [ebp-0xdc]
6400a346:	push   ecx
6400a347:	call   0x6400a7a0
6400a34c:	add    esp,0x14
6400a34f:	jmp    0x6400a40a
6400a354:	mov    edx,DWORD PTR [ebp-0x160]
6400a35a:	push   edx
6400a35b:	mov    eax,DWORD PTR [ebp-0xc]
6400a35e:	push   eax
6400a35f:	mov    ecx,DWORD PTR [ebp-0x160]
6400a365:	mov    edx,DWORD PTR [ecx+0x4]
6400a368:	mov    eax,DWORD PTR [ebp+0x8]
6400a36b:	lea    ecx,[edx+eax*4]
6400a36e:	push   ecx
6400a36f:	mov    edx,DWORD PTR [ebp-0x160]
6400a375:	mov    eax,DWORD PTR [edx+0x4]
6400a378:	push   eax
6400a379:	call   0x6400a610
6400a37e:	add    esp,0x10
6400a381:	mov    ecx,DWORD PTR [ebp-0x160]
6400a387:	push   ecx
6400a388:	mov    edx,DWORD PTR [ebp-0x10]
6400a38b:	push   edx
6400a38c:	mov    eax,DWORD PTR [ebp-0x160]
6400a392:	mov    ecx,DWORD PTR [eax+0x4]
6400a395:	mov    edx,DWORD PTR [ebp-0x4]
6400a398:	lea    eax,[ecx+edx*4]
6400a39b:	push   eax
6400a39c:	mov    ecx,DWORD PTR [ebp-0x160]
6400a3a2:	mov    edx,DWORD PTR [ecx+0x4]
6400a3a5:	mov    eax,DWORD PTR [ebp+0x8]
6400a3a8:	lea    ecx,[edx+eax*4]
6400a3ab:	push   ecx
6400a3ac:	call   0x6400a610
6400a3b1:	add    esp,0x10
6400a3b4:	mov    DWORD PTR [ebp-0xc],eax
6400a3b7:	mov    DWORD PTR [ebp-0x1c],0x0
6400a3be:	mov    edx,DWORD PTR [ebp-0xc]
6400a3c1:	mov    DWORD PTR [ebp-0x148],edx
6400a3c7:	xor    eax,eax
6400a3c9:	mov    BYTE PTR [ebp-0x126],al
6400a3cf:	mov    cl,BYTE PTR [ebp-0x128]
6400a3d5:	mov    BYTE PTR [ebp-0x127],cl
6400a3db:	mov    dl,BYTE PTR [ebp-0x126]
6400a3e1:	mov    BYTE PTR [ebp-0x141],dl
6400a3e7:	mov    eax,DWORD PTR [ebp-0x148]
6400a3ed:	mov    DWORD PTR [ebp-0x140],eax
6400a3f3:	lea    ecx,[ebp-0x1c]
6400a3f6:	push   ecx
6400a3f7:	mov    edx,DWORD PTR [ebp+0x8]
6400a3fa:	push   edx
6400a3fb:	mov    eax,DWORD PTR [ebp-0x140]
6400a401:	push   eax
6400a402:	call   0x6400a730
6400a407:	add    esp,0xc
6400a40a:	mov    ecx,DWORD PTR [ebp-0x160]
6400a410:	mov    edx,DWORD PTR [ecx+0x8]
6400a413:	mov    eax,DWORD PTR [ebp-0x160]
6400a419:	mov    ecx,DWORD PTR [eax+0x4]
6400a41c:	lea    edx,[ecx+edx*4]
6400a41f:	mov    DWORD PTR [ebp-0x154],edx
6400a425:	mov    eax,DWORD PTR [ebp-0x160]
6400a42b:	mov    ecx,DWORD PTR [eax+0x4]
6400a42e:	mov    edx,DWORD PTR [ebp-0x4]
6400a431:	lea    eax,[ecx+edx*4]
6400a434:	mov    DWORD PTR [ebp-0x150],eax
6400a43a:	mov    cl,BYTE PTR [ebp-0x14a]
6400a440:	mov    BYTE PTR [ebp-0x149],cl
6400a446:	mov    edx,DWORD PTR [ebp-0x160]
6400a44c:	cmp    DWORD PTR [edx+0x4],0x0
6400a450:	je     0x6400a47f
6400a452:	mov    eax,DWORD PTR [ebp-0x160]
6400a458:	mov    ecx,DWORD PTR [eax+0x8]
6400a45b:	mov    DWORD PTR [ebp-0x15c],ecx
6400a461:	mov    edx,DWORD PTR [ebp-0x160]
6400a467:	mov    eax,DWORD PTR [edx+0x4]
6400a46a:	mov    DWORD PTR [ebp-0x158],eax
6400a470:	mov    ecx,DWORD PTR [ebp-0x158]
6400a476:	push   ecx
6400a477:	call   0x64013644
6400a47c:	add    esp,0x4
6400a47f:	mov    edx,DWORD PTR [ebp-0x160]
6400a485:	mov    eax,DWORD PTR [ebp-0x10]
6400a488:	mov    DWORD PTR [edx+0x4],eax
6400a48b:	mov    ecx,DWORD PTR [ebp-0x160]
6400a491:	mov    edx,DWORD PTR [ecx+0x8]
6400a494:	add    edx,DWORD PTR [ebp+0x8]
6400a497:	mov    eax,DWORD PTR [ebp-0x160]
6400a49d:	mov    DWORD PTR [eax+0x8],edx
6400a4a0:	mov    esp,ebp
6400a4a2:	pop    ebp
6400a4a3:	ret    0x4
6400a4a6:	int3   
6400a4a7:	int3   
6400a4a8:	int3   
6400a4a9:	int3   
6400a4aa:	int3   
6400a4ab:	int3   
6400a4ac:	int3   
6400a4ad:	int3   
6400a4ae:	int3   
6400a4af:	int3   
6400a4b0:	push   ebp
6400a4b1:	mov    ebp,esp
6400a4b3:	sub    esp,0x10
6400a4b6:	mov    DWORD PTR [ebp-0x10],ecx
6400a4b9:	push   0x0
6400a4bb:	mov    eax,DWORD PTR [ebp+0x8]
6400a4be:	push   eax
6400a4bf:	call   0x6400a680
6400a4c4:	add    esp,0x8
6400a4c7:	mov    esp,ebp
6400a4c9:	pop    ebp
6400a4ca:	ret    0x4
6400a4cd:	int3   
6400a4ce:	int3   
6400a4cf:	int3   
6400a4d0:	push   ebp
6400a4d1:	mov    ebp,esp
6400a4d3:	push   0xffffffff
6400a4d5:	push   0x64023458
6400a4da:	mov    eax,fs:0x0
6400a4e0:	push   eax
6400a4e1:	sub    esp,0x6c
6400a4e4:	mov    eax,ds:0x64037644
6400a4e9:	xor    eax,ebp
6400a4eb:	push   eax
6400a4ec:	lea    eax,[ebp-0xc]
6400a4ef:	mov    fs:0x0,eax
6400a4f5:	push   0x6402b01c
6400a4fa:	lea    ecx,[ebp-0x50]
6400a4fd:	call   0x64002950
6400a502:	mov    DWORD PTR [ebp-0x4],0x0
6400a509:	lea    eax,[ebp-0x50]
6400a50c:	push   eax
6400a50d:	lea    ecx,[ebp-0x34]
6400a510:	call   0x64001380
6400a515:	push   0x6402bd44
6400a51a:	lea    ecx,[ebp-0x34]
6400a51d:	push   ecx
6400a51e:	call   0x64013872
6400a523:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400a52a:	lea    ecx,[ebp-0x50]
6400a52d:	call   0x64002990
6400a532:	mov    ecx,DWORD PTR [ebp-0xc]
6400a535:	mov    DWORD PTR fs:0x0,ecx
6400a53c:	pop    ecx
6400a53d:	mov    esp,ebp
6400a53f:	pop    ebp
6400a540:	ret    
6400a541:	int3   
6400a542:	int3   
6400a543:	int3   
6400a544:	int3   
6400a545:	int3   
6400a546:	int3   
6400a547:	int3   
6400a548:	int3   
6400a549:	int3   
6400a54a:	int3   
6400a54b:	int3   
6400a54c:	int3   
6400a54d:	int3   
6400a54e:	int3   
6400a54f:	int3   
6400a550:	push   ebp
6400a551:	mov    ebp,esp
6400a553:	sub    esp,0xc
6400a556:	mov    DWORD PTR [ebp-0xc],ecx
6400a559:	mov    eax,DWORD PTR [ebp-0xc]
6400a55c:	mov    ecx,DWORD PTR [eax+0x8]
6400a55f:	shr    ecx,0x2
6400a562:	mov    DWORD PTR [ebp-0x4],ecx
6400a565:	mov    edx,DWORD PTR [ebp-0xc]
6400a568:	mov    eax,DWORD PTR [edx+0x8]
6400a56b:	and    eax,0x3
6400a56e:	mov    DWORD PTR [ebp-0x8],eax
6400a571:	mov    ecx,DWORD PTR [ebp-0xc]
6400a574:	cmp    DWORD PTR [ecx+0x4],0x0
6400a578:	jne    0x6400a57f
6400a57a:	call   0x64013e76
6400a57f:	mov    edx,DWORD PTR [ebp-0xc]
6400a582:	mov    eax,DWORD PTR [edx+0x4]
6400a585:	mov    ecx,DWORD PTR [ebp-0xc]
6400a588:	mov    edx,DWORD PTR [ecx+0x4]
6400a58b:	mov    eax,DWORD PTR [eax+0xc]
6400a58e:	add    eax,DWORD PTR [edx+0x10]
6400a591:	mov    ecx,DWORD PTR [ebp-0xc]
6400a594:	cmp    DWORD PTR [ecx+0x8],eax
6400a597:	jb     0x6400a59e
6400a599:	call   0x64013e76
6400a59e:	mov    edx,DWORD PTR [ebp-0xc]
6400a5a1:	mov    eax,DWORD PTR [edx+0x4]
6400a5a4:	mov    ecx,DWORD PTR [eax+0x8]
6400a5a7:	cmp    ecx,DWORD PTR [ebp-0x4]
6400a5aa:	ja     0x6400a5bb
6400a5ac:	mov    edx,DWORD PTR [ebp-0xc]
6400a5af:	mov    eax,DWORD PTR [edx+0x4]
6400a5b2:	mov    ecx,DWORD PTR [ebp-0x4]
6400a5b5:	sub    ecx,DWORD PTR [eax+0x8]
6400a5b8:	mov    DWORD PTR [ebp-0x4],ecx
6400a5bb:	mov    edx,DWORD PTR [ebp-0xc]
6400a5be:	mov    eax,DWORD PTR [edx+0x4]
6400a5c1:	mov    ecx,DWORD PTR [eax+0x4]
6400a5c4:	mov    edx,DWORD PTR [ebp-0x4]
6400a5c7:	mov    eax,DWORD PTR [ecx+edx*4]
6400a5ca:	mov    ecx,DWORD PTR [ebp-0x8]
6400a5cd:	lea    eax,[eax+ecx*4]
6400a5d0:	mov    esp,ebp
6400a5d2:	pop    ebp
6400a5d3:	ret    
6400a5d4:	int3   
6400a5d5:	int3   
6400a5d6:	int3   
6400a5d7:	int3   
6400a5d8:	int3   
6400a5d9:	int3   
6400a5da:	int3   
6400a5db:	int3   
6400a5dc:	int3   
6400a5dd:	int3   
6400a5de:	int3   
6400a5df:	int3   
6400a5e0:	push   ebp
6400a5e1:	mov    ebp,esp
6400a5e3:	sub    esp,0x18
6400a5e6:	lea    eax,[ebp+0x10]
6400a5e9:	mov    DWORD PTR [ebp-0x4],eax
6400a5ec:	mov    ecx,DWORD PTR [ebp-0x4]
6400a5ef:	push   ecx
6400a5f0:	mov    edx,DWORD PTR [ebp+0xc]
6400a5f3:	push   edx
6400a5f4:	mov    ecx,DWORD PTR [ebp+0x8]
6400a5f7:	call   0x6400a6d0
6400a5fc:	mov    DWORD PTR [ebp-0x4],0x0
6400a603:	mov    esp,ebp
6400a605:	pop    ebp
6400a606:	ret    
6400a607:	int3   
6400a608:	int3   
6400a609:	int3   
6400a60a:	int3   
6400a60b:	int3   
6400a60c:	int3   
6400a60d:	int3   
6400a60e:	int3   
6400a60f:	int3   
6400a610:	push   ebp
6400a611:	mov    ebp,esp
6400a613:	sub    esp,0x20
6400a616:	xor    eax,eax
6400a618:	mov    BYTE PTR [ebp-0x1],al
6400a61b:	mov    cl,BYTE PTR [ebp-0x3]
6400a61e:	mov    BYTE PTR [ebp-0x2],cl
6400a621:	mov    edx,DWORD PTR [ebp+0xc]
6400a624:	mov    DWORD PTR [ebp-0x8],edx
6400a627:	mov    eax,DWORD PTR [ebp+0x8]
6400a62a:	mov    DWORD PTR [ebp-0x10],eax
6400a62d:	mov    cl,BYTE PTR [ebp-0x1]
6400a630:	mov    BYTE PTR [ebp-0x1d],cl
6400a633:	mov    edx,DWORD PTR [ebp+0x10]
6400a636:	mov    DWORD PTR [ebp-0x1c],edx
6400a639:	mov    eax,DWORD PTR [ebp-0x8]
6400a63c:	sub    eax,DWORD PTR [ebp-0x10]
6400a63f:	sar    eax,0x2
6400a642:	mov    DWORD PTR [ebp-0x14],eax
6400a645:	mov    ecx,DWORD PTR [ebp-0x14]
6400a648:	mov    edx,DWORD PTR [ebp-0x1c]
6400a64b:	lea    eax,[edx+ecx*4]
6400a64e:	mov    DWORD PTR [ebp-0x18],eax
6400a651:	je     0x6400a671
6400a653:	mov    ecx,DWORD PTR [ebp-0x14]
6400a656:	shl    ecx,0x2
6400a659:	push   ecx
6400a65a:	mov    edx,DWORD PTR [ebp-0x10]
6400a65d:	push   edx
6400a65e:	mov    eax,DWORD PTR [ebp-0x14]
6400a661:	shl    eax,0x2
6400a664:	push   eax
6400a665:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a668:	push   ecx
6400a669:	call   0x64013817
6400a66e:	add    esp,0x10
6400a671:	mov    eax,DWORD PTR [ebp-0x18]
6400a674:	mov    esp,ebp
6400a676:	pop    ebp
6400a677:	ret    
6400a678:	int3   
6400a679:	int3   
6400a67a:	int3   
6400a67b:	int3   
6400a67c:	int3   
6400a67d:	int3   
6400a67e:	int3   
6400a67f:	int3   
6400a680:	push   ebp
6400a681:	mov    ebp,esp
6400a683:	sub    esp,0xc
6400a686:	cmp    DWORD PTR [ebp+0x8],0x0
6400a68a:	ja     0x6400a695
6400a68c:	mov    DWORD PTR [ebp+0x8],0x0
6400a693:	jmp    0x6400a6ba
6400a695:	or     eax,0xffffffff
6400a698:	xor    edx,edx
6400a69a:	div    DWORD PTR [ebp+0x8]
6400a69d:	cmp    eax,0x4
6400a6a0:	jae    0x6400a6ba
6400a6a2:	push   0x0
6400a6a4:	lea    ecx,[ebp-0xc]
6400a6a7:	call   0x64001210
6400a6ac:	push   0x6402bd7c
6400a6b1:	lea    eax,[ebp-0xc]
6400a6b4:	push   eax
6400a6b5:	call   0x64013872
6400a6ba:	mov    ecx,DWORD PTR [ebp+0x8]
6400a6bd:	shl    ecx,0x2
6400a6c0:	push   ecx
6400a6c1:	call   0x640138d5
6400a6c6:	add    esp,0x4
6400a6c9:	mov    esp,ebp
6400a6cb:	pop    ebp
6400a6cc:	ret    
6400a6cd:	int3   
6400a6ce:	int3   
6400a6cf:	int3   
6400a6d0:	push   ebp
6400a6d1:	mov    ebp,esp
6400a6d3:	sub    esp,0x18
6400a6d6:	mov    DWORD PTR [ebp-0x18],ecx
6400a6d9:	cmp    DWORD PTR [ebp+0x8],0x0
6400a6dd:	jne    0x6400a6e9
6400a6df:	push   0x80070057
6400a6e4:	call   0x64001040
6400a6e9:	mov    eax,DWORD PTR [ebp+0xc]
6400a6ec:	mov    ecx,DWORD PTR [ebp+0x8]
6400a6ef:	call   0x64007820
6400a6f4:	mov    DWORD PTR [ebp-0x8],eax
6400a6f7:	mov    eax,DWORD PTR [ebp-0x8]
6400a6fa:	push   eax
6400a6fb:	mov    ecx,DWORD PTR [ebp-0x18]
6400a6fe:	call   0x64002e10
6400a703:	mov    DWORD PTR [ebp-0x4],eax
6400a706:	mov    edx,DWORD PTR [ebp-0x8]
6400a709:	add    edx,0x1
6400a70c:	mov    ecx,DWORD PTR [ebp-0x4]
6400a70f:	push   ecx
6400a710:	mov    eax,DWORD PTR [ebp+0xc]
6400a713:	mov    ecx,DWORD PTR [ebp+0x8]
6400a716:	call   0x64007830
6400a71b:	add    esp,0x4
6400a71e:	mov    edx,DWORD PTR [ebp-0x8]
6400a721:	push   edx
6400a722:	mov    ecx,DWORD PTR [ebp-0x18]
6400a725:	call   0x64003760
6400a72a:	mov    esp,ebp
6400a72c:	pop    ebp
6400a72d:	ret    0x8
6400a730:	push   ebp
6400a731:	mov    ebp,esp
6400a733:	sub    esp,0x20
6400a736:	xor    eax,eax
6400a738:	mov    BYTE PTR [ebp-0x1],al
6400a73b:	mov    cl,BYTE PTR [ebp-0x1]
6400a73e:	mov    BYTE PTR [ebp-0x1e],cl
6400a741:	mov    dl,BYTE PTR [ebp-0x2]
6400a744:	mov    BYTE PTR [ebp-0x1d],dl
6400a747:	mov    eax,DWORD PTR [ebp+0x8]
6400a74a:	mov    DWORD PTR [ebp-0x1c],eax
6400a74d:	mov    ecx,DWORD PTR [ebp+0xc]
6400a750:	mov    edx,DWORD PTR [ebp-0x1c]
6400a753:	lea    eax,[edx+ecx*4]
6400a756:	mov    DWORD PTR [ebp-0x8],eax
6400a759:	xor    ecx,ecx
6400a75b:	mov    BYTE PTR [ebp-0x9],cl
6400a75e:	mov    dl,BYTE PTR [ebp-0x9]
6400a761:	mov    BYTE PTR [ebp-0x15],dl
6400a764:	mov    eax,DWORD PTR [ebp+0xc]
6400a767:	mov    DWORD PTR [ebp-0x14],eax
6400a76a:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a76d:	mov    DWORD PTR [ebp-0x10],ecx
6400a770:	jmp    0x6400a784
6400a772:	mov    edx,DWORD PTR [ebp-0x14]
6400a775:	sub    edx,0x1
6400a778:	mov    DWORD PTR [ebp-0x14],edx
6400a77b:	mov    eax,DWORD PTR [ebp-0x10]
6400a77e:	add    eax,0x4
6400a781:	mov    DWORD PTR [ebp-0x10],eax
6400a784:	cmp    DWORD PTR [ebp-0x14],0x0
6400a788:	jbe    0x6400a796
6400a78a:	mov    ecx,DWORD PTR [ebp-0x10]
6400a78d:	mov    edx,DWORD PTR [ebp+0x10]
6400a790:	mov    eax,DWORD PTR [edx]
6400a792:	mov    DWORD PTR [ecx],eax
6400a794:	jmp    0x6400a772
6400a796:	mov    esp,ebp
6400a798:	pop    ebp
6400a799:	ret    
6400a79a:	int3   
6400a79b:	int3   
6400a79c:	int3   
6400a79d:	int3   
6400a79e:	int3   
6400a79f:	int3   
6400a7a0:	push   ebp
6400a7a1:	mov    ebp,esp
6400a7a3:	sub    esp,0x14
6400a7a6:	mov    eax,DWORD PTR [ebp+0xc]
6400a7a9:	mov    ecx,DWORD PTR [ebp+0x8]
6400a7ac:	lea    edx,[ecx+eax*4]
6400a7af:	mov    DWORD PTR [ebp-0x4],edx
6400a7b2:	xor    eax,eax
6400a7b4:	mov    BYTE PTR [ebp-0x5],al
6400a7b7:	mov    cl,BYTE PTR [ebp-0x5]
6400a7ba:	mov    BYTE PTR [ebp-0x11],cl
6400a7bd:	mov    edx,DWORD PTR [ebp+0xc]
6400a7c0:	mov    DWORD PTR [ebp-0x10],edx
6400a7c3:	mov    eax,DWORD PTR [ebp+0x8]
6400a7c6:	mov    DWORD PTR [ebp-0xc],eax
6400a7c9:	jmp    0x6400a7dd
6400a7cb:	mov    ecx,DWORD PTR [ebp-0x10]
6400a7ce:	sub    ecx,0x1
6400a7d1:	mov    DWORD PTR [ebp-0x10],ecx
6400a7d4:	mov    edx,DWORD PTR [ebp-0xc]
6400a7d7:	add    edx,0x4
6400a7da:	mov    DWORD PTR [ebp-0xc],edx
6400a7dd:	cmp    DWORD PTR [ebp-0x10],0x0
6400a7e1:	jbe    0x6400a7ef
6400a7e3:	mov    eax,DWORD PTR [ebp-0xc]
6400a7e6:	mov    ecx,DWORD PTR [ebp+0x10]
6400a7e9:	mov    edx,DWORD PTR [ecx]
6400a7eb:	mov    DWORD PTR [eax],edx
6400a7ed:	jmp    0x6400a7cb
6400a7ef:	mov    esp,ebp
6400a7f1:	pop    ebp
6400a7f2:	ret    
6400a7f3:	int3   
6400a7f4:	int3   
6400a7f5:	int3   
6400a7f6:	int3   
6400a7f7:	int3   
6400a7f8:	int3   
6400a7f9:	int3   
6400a7fa:	int3   
6400a7fb:	int3   
6400a7fc:	int3   
6400a7fd:	int3   
6400a7fe:	int3   
6400a7ff:	int3   
6400a800:	push   ebp
6400a801:	mov    ebp,esp
6400a803:	push   0xffffffff
6400a805:	push   0x64023ae8
6400a80a:	mov    eax,fs:0x0
6400a810:	push   eax
6400a811:	sub    esp,0x14
6400a814:	push   ebx
6400a815:	push   esi
6400a816:	push   edi
6400a817:	mov    eax,ds:0x64037644
6400a81c:	xor    eax,ebp
6400a81e:	push   eax
6400a81f:	lea    eax,[ebp-0xc]
6400a822:	mov    fs:0x0,eax
6400a828:	mov    DWORD PTR [ebp-0x10],esp
6400a82b:	mov    DWORD PTR [ebp-0x4],0x0
6400a832:	mov    al,0x1
6400a834:	mov    BYTE PTR [ebp-0x20],al
6400a837:	mov    DWORD PTR [ebp-0x1c],0xffffffff
6400a83e:	mov    BYTE PTR [ebp-0x18],al
6400a841:	push   0x4
6400a843:	mov    BYTE PTR [ebp-0x4],al
6400a846:	lea    eax,[ebp-0x14]
6400a849:	push   eax
6400a84a:	push   0x4
6400a84c:	mov    ecx,eax
6400a84e:	push   ecx
6400a84f:	push   0x7
6400a851:	lea    ecx,[ebp-0x20]
6400a854:	mov    DWORD PTR [ebp-0x14],0x4
6400a85b:	call   0x64007350
6400a860:	mov    edi,DWORD PTR [ebp-0x1c]
6400a863:	test   edi,edi
6400a865:	je     0x6400a87d
6400a867:	call   DWORD PTR ds:0x64024064
6400a86d:	push   edi
6400a86e:	mov    esi,eax
6400a870:	call   DWORD PTR ds:0x6402406c
6400a876:	push   esi
6400a877:	call   DWORD PTR ds:0x64024070
6400a87d:	mov    ecx,DWORD PTR [ebp-0xc]
6400a880:	mov    DWORD PTR fs:0x0,ecx
6400a887:	pop    ecx
6400a888:	pop    edi
6400a889:	pop    esi
6400a88a:	pop    ebx
6400a88b:	mov    esp,ebp
6400a88d:	pop    ebp
6400a88e:	ret    
6400a88f:	mov    eax,0x6400a87d
6400a894:	ret    
6400a895:	int3   
6400a896:	int3   
6400a897:	int3   
6400a898:	int3   
6400a899:	int3   
6400a89a:	int3   
6400a89b:	int3   
6400a89c:	int3   
6400a89d:	int3   
6400a89e:	int3   
6400a89f:	int3   
6400a8a0:	push   0xffffffff
6400a8a2:	push   0x64022f88
6400a8a7:	mov    eax,fs:0x0
6400a8ad:	push   eax
6400a8ae:	push   ebx
6400a8af:	push   esi
6400a8b0:	push   edi
6400a8b1:	mov    eax,ds:0x64037644
6400a8b6:	xor    eax,esp
6400a8b8:	push   eax
6400a8b9:	lea    eax,[esp+0x10]
6400a8bd:	mov    fs:0x0,eax
6400a8c3:	mov    esi,ecx
6400a8c5:	mov    edi,DWORD PTR [esp+0x20]
6400a8c9:	mov    DWORD PTR [edi],0x0
6400a8cf:	mov    DWORD PTR [esp+0x18],0x0
6400a8d7:	mov    eax,DWORD PTR [esi+0x14]
6400a8da:	mov    DWORD PTR [edi+0x4],eax
6400a8dd:	mov    eax,DWORD PTR [esi+0x14]
6400a8e0:	push   eax
6400a8e1:	call   0x64012f9a
6400a8e6:	mov    ebx,eax
6400a8e8:	mov    eax,DWORD PTR [edi]
6400a8ea:	add    esp,0x4
6400a8ed:	cmp    ebx,eax
6400a8ef:	je     0x6400a8fa
6400a8f1:	push   eax
6400a8f2:	call   0x64013644
6400a8f7:	add    esp,0x4
6400a8fa:	mov    DWORD PTR [edi],ebx
6400a8fc:	cmp    DWORD PTR [esi+0x18],0x10
6400a900:	mov    eax,DWORD PTR [esi+0x14]
6400a903:	jb     0x6400a90a
6400a905:	mov    esi,DWORD PTR [esi+0x4]
6400a908:	jmp    0x6400a90d
6400a90a:	add    esi,0x4
6400a90d:	push   eax
6400a90e:	push   esi
6400a90f:	push   ebx
6400a910:	call   0x640151e0
6400a915:	add    esp,0xc
6400a918:	mov    eax,edi
6400a91a:	mov    ecx,DWORD PTR [esp+0x10]
6400a91e:	mov    DWORD PTR fs:0x0,ecx
6400a925:	pop    ecx
6400a926:	pop    edi
6400a927:	pop    esi
6400a928:	pop    ebx
6400a929:	add    esp,0xc
6400a92c:	ret    0x4
6400a92f:	int3   
6400a930:	sub    esp,0x14
6400a933:	mov    eax,DWORD PTR [eax]
6400a935:	mov    ecx,DWORD PTR [eax+0xa]
6400a938:	imul   ecx,ecx,0xd
6400a93b:	add    ecx,DWORD PTR [eax+0x6]
6400a93e:	push   ebx
6400a93f:	push   ebp
6400a940:	lea    ebp,[ecx+eax*1+0x12]
6400a944:	mov    eax,DWORD PTR [eax+0xe]
6400a947:	test   eax,eax
6400a949:	push   esi
6400a94a:	push   edi
6400a94b:	mov    DWORD PTR [esp+0x10],0x0
6400a953:	mov    DWORD PTR [esp+0x20],eax
6400a957:	je     0x6400a9d9
6400a95d:	mov    eax,DWORD PTR [esp+0x28]
6400a961:	mov    edx,DWORD PTR [eax+0x14]
6400a964:	mov    DWORD PTR [esp+0x14],edx
6400a968:	mov    edx,DWORD PTR [eax+0x18]
6400a96b:	mov    DWORD PTR [esp+0x1c],edx
6400a96f:	nop
6400a970:	lea    ebx,[ebp+0x6]
6400a973:	mov    eax,ebx
6400a975:	lea    edx,[eax+0x1]
6400a978:	mov    cl,BYTE PTR [eax]
6400a97a:	add    eax,0x1
6400a97d:	test   cl,cl
6400a97f:	jne    0x6400a978
6400a981:	mov    esi,DWORD PTR [esp+0x14]
6400a985:	sub    eax,edx
6400a987:	mov    edi,eax
6400a989:	cmp    esi,edi
6400a98b:	mov    eax,esi
6400a98d:	mov    ecx,esi
6400a98f:	jb     0x6400a993
6400a991:	mov    ecx,edi
6400a993:	cmp    DWORD PTR [esp+0x1c],0x10
6400a998:	mov    eax,DWORD PTR [esp+0x28]
6400a99c:	jb     0x6400a9a3
6400a99e:	mov    eax,DWORD PTR [eax+0x4]
6400a9a1:	jmp    0x6400a9a6
6400a9a3:	add    eax,0x4
6400a9a6:	push   ecx
6400a9a7:	push   ebx
6400a9a8:	push   eax
6400a9a9:	call   0x64001270
6400a9ae:	add    esp,0xc
6400a9b1:	test   eax,eax
6400a9b3:	jne    0x6400a9c2
6400a9b5:	cmp    esi,edi
6400a9b7:	jb     0x6400a9c2
6400a9b9:	cmp    esi,edi
6400a9bb:	setne  al
6400a9be:	test   eax,eax
6400a9c0:	je     0x6400a9e6
6400a9c2:	movzx  ecx,WORD PTR [ebp+0x0]
6400a9c6:	mov    eax,DWORD PTR [esp+0x10]
6400a9ca:	add    eax,0x1
6400a9cd:	add    ebp,ecx
6400a9cf:	cmp    eax,DWORD PTR [esp+0x20]
6400a9d3:	mov    DWORD PTR [esp+0x10],eax
6400a9d7:	jne    0x6400a970
6400a9d9:	pop    edi
6400a9da:	pop    esi
6400a9db:	pop    ebp
6400a9dc:	or     eax,0xffffffff
6400a9df:	pop    ebx
6400a9e0:	add    esp,0x14
6400a9e3:	ret    0x4
6400a9e6:	mov    eax,DWORD PTR [ebp+0x2]
6400a9e9:	pop    edi
6400a9ea:	pop    esi
6400a9eb:	pop    ebp
6400a9ec:	pop    ebx
6400a9ed:	add    esp,0x14
6400a9f0:	ret    0x4
6400a9f3:	int3   
6400a9f4:	int3   
6400a9f5:	int3   
6400a9f6:	int3   
6400a9f7:	int3   
6400a9f8:	int3   
6400a9f9:	int3   
6400a9fa:	int3   
6400a9fb:	int3   
6400a9fc:	int3   
6400a9fd:	int3   
6400a9fe:	int3   
6400a9ff:	int3   
6400aa00:	mov    eax,DWORD PTR [eax]
6400aa02:	add    eax,0x12
6400aa05:	ret    
6400aa06:	int3   
6400aa07:	int3   
6400aa08:	int3   
6400aa09:	int3   
6400aa0a:	int3   
6400aa0b:	int3   
6400aa0c:	int3   
6400aa0d:	int3   
6400aa0e:	int3   
6400aa0f:	int3   
6400aa10:	mov    ecx,DWORD PTR [eax]
6400aa12:	mov    eax,DWORD PTR [ecx+0x6]
6400aa15:	ret    
6400aa16:	int3   
6400aa17:	int3   
6400aa18:	int3   
6400aa19:	int3   
6400aa1a:	int3   
6400aa1b:	int3   
6400aa1c:	int3   
6400aa1d:	int3   
6400aa1e:	int3   
6400aa1f:	int3   
6400aa20:	push   ebp
6400aa21:	push   esi
6400aa22:	mov    esi,DWORD PTR [eax]
6400aa24:	mov    ecx,DWORD PTR [esi+0x6]
6400aa27:	push   edi
6400aa28:	lea    edi,[esi+0x12]
6400aa2b:	xor    ebp,ebp
6400aa2d:	add    ecx,edi
6400aa2f:	cmp    DWORD PTR [esi+0xa],ebp
6400aa32:	je     0x6400aa66
6400aa34:	push   ebx
6400aa35:	cmp    BYTE PTR [ecx+0x4],0x0
6400aa39:	jne    0x6400aa49
6400aa3b:	mov    edx,DWORD PTR [ecx+0x5]
6400aa3e:	add    edx,DWORD PTR [esp+0x14]
6400aa42:	mov    eax,DWORD PTR [ecx]
6400aa44:	mov    DWORD PTR [edi+eax*1],edx
6400aa47:	jmp    0x6400aa5a
6400aa49:	mov    eax,DWORD PTR [ecx+0x5]
6400aa4c:	add    eax,DWORD PTR [esp+0x14]
6400aa50:	mov    ebx,DWORD PTR [ecx]
6400aa52:	cdq    
6400aa53:	mov    DWORD PTR [edi+ebx*1],eax
6400aa56:	mov    DWORD PTR [edi+ebx*1+0x4],edx
6400aa5a:	add    ebp,0x1
6400aa5d:	add    ecx,0xd
6400aa60:	cmp    ebp,DWORD PTR [esi+0xa]
6400aa63:	jne    0x6400aa35
6400aa65:	pop    ebx
6400aa66:	pop    edi
6400aa67:	pop    esi
6400aa68:	pop    ebp
6400aa69:	ret    0x4
6400aa6c:	int3   
6400aa6d:	int3   
6400aa6e:	int3   
6400aa6f:	int3   
6400aa70:	sub    esp,0x8
6400aa73:	push   edi
6400aa74:	mov    edi,DWORD PTR ds:0x64024100
6400aa7a:	lea    eax,[esp+0x4]
6400aa7e:	push   eax
6400aa7f:	mov    eax,ds:0x64038a34
6400aa84:	lea    ecx,[eax+eax*2]
6400aa87:	push   0x40
6400aa89:	add    ecx,ecx
6400aa8b:	push   ecx
6400aa8c:	push   esi
6400aa8d:	mov    DWORD PTR [esp+0x14],0x0
6400aa95:	call   edi
6400aa97:	mov    edx,DWORD PTR [esp+0x14]
6400aa9b:	sub    edx,DWORD PTR [esp+0x1c]
6400aa9f:	mov    ecx,DWORD PTR [esp+0x10]
6400aaa3:	lea    eax,[esi+0x1]
6400aaa6:	sub    edx,eax
6400aaa8:	lea    edx,[edx+ecx*1-0x4]
6400aaac:	mov    ecx,DWORD PTR [esp+0x4]
6400aab0:	mov    BYTE PTR [esi],0xe9
6400aab3:	mov    DWORD PTR [eax],edx
6400aab5:	lea    eax,[esp+0x8]
6400aab9:	push   eax
6400aaba:	push   ecx
6400aabb:	push   0x5
6400aabd:	push   esi
6400aabe:	mov    DWORD PTR [esp+0x18],0x0
6400aac6:	call   edi
6400aac8:	pop    edi
6400aac9:	add    esp,0x8
6400aacc:	ret    
6400aacd:	int3   
6400aace:	int3   
6400aacf:	int3   
6400aad0:	mov    eax,0x193c
6400aad5:	call   0x64017d40
6400aada:	push   ebx
6400aadb:	xor    eax,eax
6400aadd:	push   ebp
6400aade:	push   esi
6400aadf:	push   edi
6400aae0:	mov    DWORD PTR [esp+0x38],eax
6400aae4:	mov    DWORD PTR [esp+0x3c],eax
6400aae8:	mov    DWORD PTR [esp+0x40],eax
6400aaec:	mov    DWORD PTR [esp+0x30],eax
6400aaf0:	mov    DWORD PTR [esp+0x34],eax
6400aaf4:	mov    DWORD PTR [esp+0x44],eax
6400aaf8:	mov    eax,DWORD PTR [esp+0x1950]
6400aaff:	lea    edx,[esp+0x20]
6400ab03:	push   edx
6400ab04:	mov    ebx,ecx
6400ab06:	mov    ecx,DWORD PTR ds:0x64038a38
6400ab0c:	mov    DWORD PTR [esp+0x3c],eax
6400ab10:	push   0x64
6400ab12:	lea    eax,[esp+0x50]
6400ab16:	mov    DWORD PTR [esp+0x48],ecx
6400ab1a:	xor    esi,esi
6400ab1c:	push   eax
6400ab1d:	lea    ecx,[esp+0x34]
6400ab21:	push   ecx
6400ab22:	mov    DWORD PTR [esp+0x30],esi
6400ab26:	mov    DWORD PTR [esp+0x38],esi
6400ab2a:	mov    DWORD PTR [esp+0x3c],esi
6400ab2e:	mov    DWORD PTR [esp+0x4c],0x1e
6400ab36:	call   0x6400b4e0
6400ab3b:	add    esp,0x10
6400ab3e:	cmp    eax,0x3
6400ab41:	jne    0x6400ab50
6400ab43:	xor    eax,eax
6400ab45:	pop    edi
6400ab46:	pop    esi
6400ab47:	pop    ebp
6400ab48:	pop    ebx
6400ab49:	add    esp,0x193c
6400ab4f:	ret    
6400ab50:	xor    edi,edi
6400ab52:	xor    ebp,ebp
6400ab54:	cmp    DWORD PTR [esp+0x20],esi
6400ab58:	mov    DWORD PTR [esp+0x14],edi
6400ab5c:	mov    DWORD PTR [esp+0x10],esi
6400ab60:	jbe    0x6400ac92
6400ab66:	lea    edx,[esp+0x50]
6400ab6a:	mov    DWORD PTR [esp+0x18],edx
6400ab6e:	jmp    0x6400ab74
6400ab70:	mov    edx,DWORD PTR [esp+0x18]
6400ab74:	cmp    edi,DWORD PTR [esp+0x1954]
6400ab7b:	jae    0x6400ac92
6400ab81:	mov    eax,DWORD PTR [esp+0x1950]
6400ab88:	add    edi,eax
6400ab8a:	mov    DWORD PTR [esp+0x1c],0xffffffff
6400ab92:	lea    eax,[edx+0xa]
6400ab95:	mov    cl,BYTE PTR [eax]
6400ab97:	test   cl,cl
6400ab99:	je     0x6400abaf
6400ab9b:	cmp    cl,0x8
6400ab9e:	jne    0x6400aba4
6400aba0:	mov    DWORD PTR [esp+0x1c],esi
6400aba4:	add    esi,0x1
6400aba7:	add    eax,0x4
6400abaa:	cmp    esi,0x4
6400abad:	jne    0x6400ab95
6400abaf:	mov    DWORD PTR [esp+0x24],esi
6400abb3:	movzx  esi,BYTE PTR [edx]
6400abb6:	push   esi
6400abb7:	lea    ecx,[ebx+ebp*1]
6400abba:	push   edi
6400abbb:	push   ecx
6400abbc:	call   0x640151e0
6400abc1:	add    esp,0xc
6400abc4:	cmp    DWORD PTR [esp+0x24],0x1
6400abc9:	jne    0x6400ac63
6400abcf:	cmp    DWORD PTR [esp+0x1c],0x0
6400abd4:	jne    0x6400ac63
6400abda:	mov    edx,DWORD PTR [esp+0x18]
6400abde:	movzx  ecx,WORD PTR [edx+0xc]
6400abe2:	movzx  eax,cx
6400abe5:	shr    eax,0x3
6400abe8:	cmp    cx,0x10
6400abec:	jne    0x6400ac0b
6400abee:	sub    edi,ebx
6400abf0:	sub    edi,ebp
6400abf2:	sub    edi,DWORD PTR [esp+0x1960]
6400abf9:	sub    esi,eax
6400abfb:	add    edi,DWORD PTR [esp+0x1958]
6400ac02:	add    esi,ebp
6400ac04:	add    esi,ebx
6400ac06:	add    WORD PTR [esi],di
6400ac09:	jmp    0x6400ac63
6400ac0b:	cmp    cx,0x20
6400ac0f:	jne    0x6400ac2f
6400ac11:	sub    esi,eax
6400ac13:	mov    eax,DWORD PTR [esp+0x1958]
6400ac1a:	sub    eax,DWORD PTR [esp+0x1960]
6400ac21:	add    esi,ebp
6400ac23:	sub    eax,ebp
6400ac25:	sub    eax,ebx
6400ac27:	add    esi,ebx
6400ac29:	add    eax,edi
6400ac2b:	add    DWORD PTR [esi],eax
6400ac2d:	jmp    0x6400ac63
6400ac2f:	cmp    cx,0x40
6400ac33:	jne    0x6400ac63
6400ac35:	sub    esi,eax
6400ac37:	mov    eax,edi
6400ac39:	sub    eax,ebp
6400ac3b:	sub    eax,ebx
6400ac3d:	add    esi,ebp
6400ac3f:	cdq    
6400ac40:	add    esi,ebx
6400ac42:	sub    eax,DWORD PTR [esp+0x1960]
6400ac49:	sbb    edx,DWORD PTR [esp+0x1964]
6400ac50:	add    eax,DWORD PTR [esp+0x1958]
6400ac57:	adc    edx,DWORD PTR [esp+0x195c]
6400ac5e:	add    DWORD PTR [esi],eax
6400ac60:	adc    DWORD PTR [esi+0x4],edx
6400ac63:	mov    ecx,DWORD PTR [esp+0x18]
6400ac67:	movzx  eax,BYTE PTR [ecx]
6400ac6a:	add    DWORD PTR [esp+0x14],eax
6400ac6e:	mov    edi,DWORD PTR [esp+0x14]
6400ac72:	add    ebp,eax
6400ac74:	mov    eax,DWORD PTR [esp+0x10]
6400ac78:	add    eax,0x1
6400ac7b:	add    ecx,0x40
6400ac7e:	xor    esi,esi
6400ac80:	cmp    eax,DWORD PTR [esp+0x20]
6400ac84:	mov    DWORD PTR [esp+0x10],eax
6400ac88:	mov    DWORD PTR [esp+0x18],ecx
6400ac8c:	jb     0x6400ab70
6400ac92:	mov    eax,ds:0x64038a34
6400ac97:	mov    ecx,DWORD PTR [esp+0x1950]
6400ac9e:	lea    edx,[esp+0x10]
6400aca2:	push   edx
6400aca3:	lea    eax,[eax+eax*2]
6400aca6:	push   0x40
6400aca8:	add    eax,eax
6400acaa:	add    ebx,ebp
6400acac:	mov    ebp,DWORD PTR ds:0x64024100
6400acb2:	push   eax
6400acb3:	push   ebx
6400acb4:	add    edi,ecx
6400acb6:	mov    DWORD PTR [esp+0x20],esi
6400acba:	call   ebp
6400acbc:	mov    eax,DWORD PTR [esp+0x1958]
6400acc3:	sub    eax,DWORD PTR [esp+0x1960]
6400acca:	lea    ecx,[ebx+0x1]
6400accd:	sub    eax,ecx
6400accf:	lea    edx,[eax+edi*1-0x4]
6400acd3:	mov    BYTE PTR [ebx],0xe9
6400acd6:	lea    eax,[esp+0x1c]
6400acda:	push   eax
6400acdb:	mov    DWORD PTR [ecx],edx
6400acdd:	mov    ecx,DWORD PTR [esp+0x14]
6400ace1:	push   ecx
6400ace2:	push   0x5
6400ace4:	push   ebx
6400ace5:	mov    DWORD PTR [esp+0x2c],esi
6400ace9:	call   ebp
6400aceb:	pop    edi
6400acec:	pop    esi
6400aced:	pop    ebp
6400acee:	mov    eax,0x1
6400acf3:	pop    ebx
6400acf4:	add    esp,0x193c
6400acfa:	ret    
6400acfb:	int3   
6400acfc:	int3   
6400acfd:	int3   
6400acfe:	int3   
6400acff:	int3   
6400ad00:	mov    ecx,DWORD PTR [esp+0x1c]
6400ad04:	mov    edx,DWORD PTR ds:0x64038a34
6400ad0a:	push   ebx
6400ad0b:	mov    ebx,DWORD PTR [esp+0x10]
6400ad0f:	push   esi
6400ad10:	push   edi
6400ad11:	mov    edi,DWORD PTR [esp+0x1c]
6400ad15:	mov    esi,eax
6400ad17:	mov    eax,DWORD PTR [esp+0x2c]
6400ad1b:	push   eax
6400ad1c:	push   ecx
6400ad1d:	mov    ecx,DWORD PTR [esp+0x18]
6400ad21:	push   edi
6400ad22:	push   ebx
6400ad23:	push   edx
6400ad24:	push   esi
6400ad25:	call   0x6400aad0
6400ad2a:	add    esp,0x18
6400ad2d:	test   eax,eax
6400ad2f:	jne    0x6400ad35
6400ad31:	pop    edi
6400ad32:	pop    esi
6400ad33:	pop    ebx
6400ad34:	ret    
6400ad35:	mov    eax,DWORD PTR [esp+0x24]
6400ad39:	mov    ecx,DWORD PTR [esp+0x20]
6400ad3d:	mov    edx,DWORD PTR [esp+0x14]
6400ad41:	push   edi
6400ad42:	push   ebx
6400ad43:	push   eax
6400ad44:	push   ecx
6400ad45:	push   edx
6400ad46:	call   0x6400aa70
6400ad4b:	add    esp,0x14
6400ad4e:	pop    edi
6400ad4f:	pop    esi
6400ad50:	mov    eax,0x1
6400ad55:	pop    ebx
6400ad56:	ret    
6400ad57:	int3   
6400ad58:	int3   
6400ad59:	int3   
6400ad5a:	int3   
6400ad5b:	int3   
6400ad5c:	int3   
6400ad5d:	int3   
6400ad5e:	int3   
6400ad5f:	int3   
6400ad60:	sub    esp,0x8
6400ad63:	push   ebx
6400ad64:	push   ebp
6400ad65:	push   edi
6400ad66:	push   0x20
6400ad68:	mov    DWORD PTR [esp+0x14],0x0
6400ad70:	call   0x64012f9a
6400ad75:	add    esp,0x4
6400ad78:	push   0x20
6400ad7a:	mov    ebx,eax
6400ad7c:	call   0x64012f9a
6400ad81:	mov    ebp,eax
6400ad83:	mov    eax,ds:0x64038a34
6400ad88:	lea    eax,[eax+eax*2]
6400ad8b:	add    eax,eax
6400ad8d:	add    esp,0x4
6400ad90:	push   eax
6400ad91:	call   0x64012f9a
6400ad96:	add    esp,0x4
6400ad99:	mov    DWORD PTR [esp+0xc],eax
6400ad9d:	mov    eax,ds:0x64038a34
6400ada2:	push   0x40
6400ada4:	lea    eax,[eax+eax*2]
6400ada7:	push   0x3000
6400adac:	add    eax,eax
6400adae:	push   eax
6400adaf:	push   0x0
6400adb1:	push   esi
6400adb2:	call   DWORD PTR ds:0x640240d4
6400adb8:	mov    edi,eax
6400adba:	test   edi,edi
6400adbc:	je     0x6400ae6e
6400adc2:	mov    eax,DWORD PTR [esp+0x18]
6400adc6:	push   0x0
6400adc8:	push   0x20
6400adca:	push   ebx
6400adcb:	push   eax
6400adcc:	push   esi
6400adcd:	call   DWORD PTR ds:0x640240d8
6400add3:	test   eax,eax
6400add5:	je     0x6400ae5f
6400addb:	mov    ecx,DWORD PTR [esp+0x1c]
6400addf:	push   0x0
6400ade1:	push   0x20
6400ade3:	push   ebp
6400ade4:	push   ecx
6400ade5:	push   esi
6400ade6:	call   DWORD PTR ds:0x640240d8
6400adec:	test   eax,eax
6400adee:	je     0x6400ae5f
6400adf0:	mov    ecx,DWORD PTR [esp+0xc]
6400adf4:	mov    eax,edi
6400adf6:	sub    eax,ecx
6400adf8:	cdq    
6400adf9:	push   edx
6400adfa:	push   eax
6400adfb:	mov    eax,DWORD PTR [esp+0x24]
6400adff:	sub    eax,ebp
6400ae01:	cdq    
6400ae02:	push   edx
6400ae03:	push   eax
6400ae04:	mov    eax,DWORD PTR [esp+0x28]
6400ae08:	sub    eax,ebx
6400ae0a:	cdq    
6400ae0b:	push   edx
6400ae0c:	push   eax
6400ae0d:	push   ebp
6400ae0e:	push   ecx
6400ae0f:	mov    eax,ebx
6400ae11:	call   0x6400ad00
6400ae16:	add    esp,0x20
6400ae19:	test   eax,eax
6400ae1b:	je     0x6400ae5f
6400ae1d:	mov    eax,ds:0x64038a34
6400ae22:	push   0x0
6400ae24:	lea    edx,[eax+eax*2]
6400ae27:	mov    eax,DWORD PTR [esp+0x10]
6400ae2b:	add    edx,edx
6400ae2d:	push   edx
6400ae2e:	push   eax
6400ae2f:	push   edi
6400ae30:	push   esi
6400ae31:	call   DWORD PTR ds:0x640240e4
6400ae37:	mov    ecx,DWORD PTR [esp+0x18]
6400ae3b:	push   0x0
6400ae3d:	push   0x20
6400ae3f:	push   ebx
6400ae40:	push   ecx
6400ae41:	push   esi
6400ae42:	call   DWORD PTR ds:0x640240e4
6400ae48:	mov    edx,DWORD PTR [esp+0x1c]
6400ae4c:	push   0x0
6400ae4e:	push   0x20
6400ae50:	push   ebp
6400ae51:	push   edx
6400ae52:	push   esi
6400ae53:	call   DWORD PTR ds:0x640240e4
6400ae59:	mov    DWORD PTR [esp+0x10],edi
6400ae5d:	jmp    0x6400ae6e
6400ae5f:	push   0x8000
6400ae64:	push   0x0
6400ae66:	push   edi
6400ae67:	push   esi
6400ae68:	call   DWORD PTR ds:0x640240c4
6400ae6e:	push   ebx
6400ae6f:	call   0x64014574
6400ae74:	add    esp,0x4
6400ae77:	push   ebp
6400ae78:	call   0x64014574
6400ae7d:	mov    eax,DWORD PTR [esp+0x10]
6400ae81:	add    esp,0x4
6400ae84:	push   eax
6400ae85:	call   0x64014574
6400ae8a:	mov    eax,DWORD PTR [esp+0x14]
6400ae8e:	add    esp,0x4
6400ae91:	pop    edi
6400ae92:	pop    ebp
6400ae93:	pop    ebx
6400ae94:	add    esp,0x8
6400ae97:	ret    
6400ae98:	int3   
6400ae99:	int3   
6400ae9a:	int3   
6400ae9b:	int3   
6400ae9c:	int3   
6400ae9d:	int3   
6400ae9e:	int3   
6400ae9f:	int3   
6400aea0:	mov    eax,DWORD PTR [esp+0x8]
6400aea4:	sub    eax,0x1
6400aea7:	jne    0x6400aeb2
6400aea9:	mov    eax,DWORD PTR [esp+0x4]
6400aead:	mov    ds:0x64038cc0,eax
6400aeb2:	mov    eax,0x1
6400aeb7:	ret    0xc
6400aeba:	int3   
6400aebb:	int3   
6400aebc:	int3   
6400aebd:	int3   
6400aebe:	int3   
6400aebf:	int3   
6400aec0:	push   0x64038cc4
6400aec5:	call   DWORD PTR ds:0x6402402c
6400aecb:	cmp    eax,0x1
6400aece:	jne    0x6400aed5
6400aed0:	call   0x6400b3f0
6400aed5:	or     eax,0xffffffff
6400aed8:	ret    0x8
6400aedb:	int3   
6400aedc:	int3   
6400aedd:	int3   
6400aede:	int3   
6400aedf:	int3   
6400aee0:	or     eax,0xffffffff
6400aee3:	ret    0x4
6400aee6:	int3   
6400aee7:	int3   
6400aee8:	int3   
6400aee9:	int3   
6400aeea:	int3   
6400aeeb:	int3   
6400aeec:	int3   
6400aeed:	int3   
6400aeee:	int3   
6400aeef:	int3   
6400aef0:	push   ecx
6400aef1:	push   esi
6400aef2:	push   0x1
6400aef4:	push   0x4
6400aef6:	mov    DWORD PTR [esp+0xc],0x0
6400aefe:	call   0x64001f10
6400af03:	mov    esi,DWORD PTR [esp+0x14]
6400af07:	push   eax
6400af08:	push   esi
6400af09:	call   0x640022f0
6400af0e:	add    esp,0x10
6400af11:	mov    eax,esi
6400af13:	pop    esi
6400af14:	pop    ecx
6400af15:	ret    
6400af16:	int3   
6400af17:	int3   
6400af18:	int3   
6400af19:	int3   
6400af1a:	int3   
6400af1b:	int3   
6400af1c:	int3   
6400af1d:	int3   
6400af1e:	int3   
6400af1f:	int3   
6400af20:	push   ebp
6400af21:	mov    ebp,esp
6400af23:	push   0xffffffff
6400af25:	push   0x64022e80
6400af2a:	mov    eax,fs:0x0
6400af30:	push   eax
6400af31:	sub    esp,0x34
6400af34:	mov    eax,ds:0x64037644
6400af39:	xor    eax,ebp
6400af3b:	mov    DWORD PTR [ebp-0x10],eax
6400af3e:	push   ebx
6400af3f:	push   esi
6400af40:	push   edi
6400af41:	push   eax
6400af42:	lea    eax,[ebp-0xc]
6400af45:	mov    fs:0x0,eax
6400af4b:	call   DWORD PTR ds:0x6403761c
6400af51:	push   0x1
6400af53:	mov    ebx,eax
6400af55:	lea    eax,[ebp-0x14]
6400af58:	push   0x5
6400af5a:	push   eax
6400af5b:	call   0x64002100
6400af60:	add    esp,0xc
6400af63:	mov    esi,DWORD PTR [eax]
6400af65:	xor    edi,edi
6400af67:	cmp    esi,edi
6400af69:	mov    DWORD PTR [ebp-0x4],edi
6400af6c:	jne    0x6400af72
6400af6e:	xor    eax,eax
6400af70:	jmp    0x6400af9e
6400af72:	push   esi
6400af73:	call   DWORD PTR ds:0x64024030
6400af79:	add    eax,0x1
6400af7c:	cmp    eax,0x3fffffff
6400af81:	jle    0x6400af87
6400af83:	xor    eax,eax
6400af85:	jmp    0x6400af9e
6400af87:	lea    edi,[eax+eax*1]
6400af8a:	mov    eax,edi
6400af8c:	call   0x64013d20
6400af91:	mov    eax,esp
6400af93:	push   ebx
6400af94:	push   edi
6400af95:	push   esi
6400af96:	push   eax
6400af97:	call   0x64001000
6400af9c:	xor    edi,edi
6400af9e:	mov    ebx,0xf
6400afa3:	mov    ecx,eax
6400afa5:	mov    DWORD PTR [ebp-0x18],ebx
6400afa8:	mov    DWORD PTR [ebp-0x1c],edi
6400afab:	mov    BYTE PTR [ebp-0x2c],0x0
6400afaf:	lea    esi,[ecx+0x1]
6400afb2:	mov    dl,BYTE PTR [ecx]
6400afb4:	add    ecx,0x1
6400afb7:	test   dl,dl
6400afb9:	jne    0x6400afb2
6400afbb:	sub    ecx,esi
6400afbd:	push   ecx
6400afbe:	push   eax
6400afbf:	lea    ecx,[ebp-0x30]
6400afc2:	call   0x64003470
6400afc7:	lea    ecx,[ebp-0x30]
6400afca:	push   ecx
6400afcb:	lea    edx,[ebp-0x40]
6400afce:	push   edx
6400afcf:	mov    BYTE PTR [ebp-0x4],0x1
6400afd3:	call   0x64001b80
6400afd8:	mov    esi,DWORD PTR [ebp+0x8]
6400afdb:	mov    ecx,DWORD PTR [eax]
6400afdd:	mov    edx,DWORD PTR [eax+0x4]
6400afe0:	mov    DWORD PTR [esi],ecx
6400afe2:	mov    ecx,DWORD PTR [eax+0x8]
6400afe5:	mov    DWORD PTR [esi+0x4],edx
6400afe8:	mov    edx,DWORD PTR [eax+0xc]
6400afeb:	add    esp,0x8
6400afee:	cmp    DWORD PTR [ebp-0x18],0x10
6400aff2:	mov    DWORD PTR [esi+0x8],ecx
6400aff5:	mov    DWORD PTR [esi+0xc],edx
6400aff8:	jb     0x6400b006
6400affa:	mov    eax,DWORD PTR [ebp-0x2c]
6400affd:	push   eax
6400affe:	call   0x64013644
6400b003:	add    esp,0x4
6400b006:	mov    eax,DWORD PTR [ebp-0x14]
6400b009:	add    eax,0xfffffff0
6400b00c:	mov    DWORD PTR [ebp-0x18],ebx
6400b00f:	mov    DWORD PTR [ebp-0x1c],edi
6400b012:	mov    BYTE PTR [ebp-0x2c],0x0
6400b016:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400b01d:	lea    ecx,[eax+0xc]
6400b020:	or     edx,0xffffffff
6400b023:	lock xadd DWORD PTR [ecx],edx
6400b027:	dec    edx
6400b028:	test   edx,edx
6400b02a:	jg     0x6400b036
6400b02c:	mov    ecx,DWORD PTR [eax]
6400b02e:	mov    edx,DWORD PTR [ecx]
6400b030:	push   eax
6400b031:	mov    eax,DWORD PTR [edx+0x4]
6400b034:	call   eax
6400b036:	mov    eax,esi
6400b038:	lea    esp,[ebp-0x50]
6400b03b:	mov    ecx,DWORD PTR [ebp-0xc]
6400b03e:	mov    DWORD PTR fs:0x0,ecx
6400b045:	pop    ecx
6400b046:	pop    edi
6400b047:	pop    esi
6400b048:	pop    ebx
6400b049:	mov    ecx,DWORD PTR [ebp-0x10]
6400b04c:	xor    ecx,ebp
6400b04e:	call   0x64013d06
6400b053:	mov    esp,ebp
6400b055:	pop    ebp
6400b056:	ret    
6400b057:	int3   
6400b058:	int3   
6400b059:	int3   
6400b05a:	int3   
6400b05b:	int3   
6400b05c:	int3   
6400b05d:	int3   
6400b05e:	int3   
6400b05f:	int3   
6400b060:	sub    esp,0x1bc
6400b066:	mov    eax,ds:0x64037644
6400b06b:	xor    eax,esp
6400b06d:	mov    DWORD PTR [esp+0x1b8],eax
6400b074:	push   esi
6400b075:	lea    eax,[esp+0x2c]
6400b079:	push   eax
6400b07a:	push   0x202
6400b07f:	call   DWORD PTR ds:0x640241f0
6400b085:	lea    ecx,[esp+0xc]
6400b089:	push   ecx
6400b08a:	call   0x6400af20
6400b08f:	mov    edx,DWORD PTR [eax]
6400b091:	mov    DWORD PTR [esp+0x20],edx
6400b095:	mov    ecx,DWORD PTR [eax+0x4]
6400b098:	mov    DWORD PTR [esp+0x24],ecx
6400b09c:	mov    edx,DWORD PTR [eax+0x8]
6400b09f:	add    esp,0x4
6400b0a2:	mov    DWORD PTR [esp+0x24],edx
6400b0a6:	mov    eax,DWORD PTR [eax+0xc]
6400b0a9:	lea    ecx,[esp+0x1c]
6400b0ad:	push   ecx
6400b0ae:	mov    DWORD PTR [esp+0x2c],eax
6400b0b2:	call   0x6400b4d8
6400b0b7:	lea    edx,[esp+0x4]
6400b0bb:	push   edx
6400b0bc:	call   0x6400aef0
6400b0c1:	push   0x0
6400b0c3:	lea    eax,[esp+0x10]
6400b0c7:	push   0x1
6400b0c9:	push   eax
6400b0ca:	call   0x64006a00
6400b0cf:	mov    esi,DWORD PTR [esp+0x18]
6400b0d3:	add    esp,0x10
6400b0d6:	cmp    DWORD PTR [esi-0x4],0x1
6400b0da:	jle    0x6400b0ed
6400b0dc:	mov    ecx,DWORD PTR [esi-0xc]
6400b0df:	push   ecx
6400b0e0:	lea    ecx,[esp+0xc]
6400b0e4:	call   0x64003820
6400b0e9:	mov    esi,DWORD PTR [esp+0x8]
6400b0ed:	mov    eax,DWORD PTR [esp+0x4]
6400b0f1:	cmp    DWORD PTR [eax-0x4],0x1
6400b0f5:	jle    0x6400b108
6400b0f7:	mov    edx,DWORD PTR [eax-0xc]
6400b0fa:	push   edx
6400b0fb:	lea    ecx,[esp+0x8]
6400b0ff:	call   0x64003820
6400b104:	mov    eax,DWORD PTR [esp+0x4]
6400b108:	lea    ecx,[esp+0x1c]
6400b10c:	push   ecx
6400b10d:	push   0x1
6400b10f:	push   0xc
6400b111:	push   esi
6400b112:	push   eax
6400b113:	call   0x6400b4d2
6400b118:	mov    esi,eax
6400b11a:	call   DWORD PTR ds:0x640241f4
6400b120:	mov    eax,DWORD PTR [esp+0x8]
6400b124:	add    eax,0xfffffff0
6400b127:	lea    edx,[eax+0xc]
6400b12a:	or     ecx,0xffffffff
6400b12d:	lock xadd DWORD PTR [edx],ecx
6400b131:	dec    ecx
6400b132:	test   ecx,ecx
6400b134:	jg     0x6400b140
6400b136:	mov    ecx,DWORD PTR [eax]
6400b138:	mov    edx,DWORD PTR [ecx]
6400b13a:	push   eax
6400b13b:	mov    eax,DWORD PTR [edx+0x4]
6400b13e:	call   eax
6400b140:	mov    eax,DWORD PTR [esp+0x4]
6400b144:	add    eax,0xfffffff0
6400b147:	lea    ecx,[eax+0xc]
6400b14a:	or     edx,0xffffffff
6400b14d:	lock xadd DWORD PTR [ecx],edx
6400b151:	dec    edx
6400b152:	test   edx,edx
6400b154:	jg     0x6400b160
6400b156:	mov    ecx,DWORD PTR [eax]
6400b158:	mov    edx,DWORD PTR [ecx]
6400b15a:	push   eax
6400b15b:	mov    eax,DWORD PTR [edx+0x4]
6400b15e:	call   eax
6400b160:	mov    ecx,DWORD PTR [esp+0x1bc]
6400b167:	mov    eax,esi
6400b169:	pop    esi
6400b16a:	xor    ecx,esp
6400b16c:	call   0x64013d06
6400b171:	add    esp,0x1bc
6400b177:	ret    
6400b178:	int3   
6400b179:	int3   
6400b17a:	int3   
6400b17b:	int3   
6400b17c:	int3   
6400b17d:	int3   
6400b17e:	int3   
6400b17f:	int3   
6400b180:	sub    esp,0x1b4
6400b186:	mov    eax,ds:0x64037644
6400b18b:	xor    eax,esp
6400b18d:	mov    DWORD PTR [esp+0x1b0],eax
6400b194:	push   esi
6400b195:	lea    eax,[esp+0x24]
6400b199:	push   eax
6400b19a:	push   0x202
6400b19f:	call   DWORD PTR ds:0x640241f0
6400b1a5:	lea    ecx,[esp+0x4]
6400b1a9:	push   ecx
6400b1aa:	call   0x6400af20
6400b1af:	mov    edx,DWORD PTR [eax]
6400b1b1:	mov    DWORD PTR [esp+0x18],edx
6400b1b5:	mov    ecx,DWORD PTR [eax+0x4]
6400b1b8:	mov    DWORD PTR [esp+0x1c],ecx
6400b1bc:	mov    edx,DWORD PTR [eax+0x8]
6400b1bf:	add    esp,0x4
6400b1c2:	mov    DWORD PTR [esp+0x1c],edx
6400b1c6:	mov    eax,DWORD PTR [eax+0xc]
6400b1c9:	lea    ecx,[esp+0x14]
6400b1cd:	push   ecx
6400b1ce:	mov    DWORD PTR [esp+0x24],eax
6400b1d2:	call   0x6400b4d8
6400b1d7:	mov    esi,eax
6400b1d9:	call   DWORD PTR ds:0x640241f4
6400b1df:	mov    ecx,DWORD PTR [esp+0x1b4]
6400b1e6:	mov    eax,esi
6400b1e8:	pop    esi
6400b1e9:	xor    ecx,esp
6400b1eb:	call   0x64013d06
6400b1f0:	add    esp,0x1b4
6400b1f6:	ret    
6400b1f7:	int3   
6400b1f8:	int3   
6400b1f9:	int3   
6400b1fa:	int3   
6400b1fb:	int3   
6400b1fc:	int3   
6400b1fd:	int3   
6400b1fe:	int3   
6400b1ff:	int3   
6400b200:	mov    eax,DWORD PTR [esp+0xc]
6400b204:	push   eax
6400b205:	lea    ecx,[esp+0x10]
6400b209:	call   0x64002b60
6400b20e:	lea    ecx,[esp+0xc]
6400b212:	push   0x640242ac
6400b217:	push   ecx
6400b218:	call   0x64002db0
6400b21d:	add    esp,0x8
6400b220:	test   al,al
6400b222:	je     0x6400b22b
6400b224:	call   0x6400b180
6400b229:	jmp    0x6400b230
6400b22b:	call   0x6400b060
6400b230:	push   0x0
6400b232:	call   DWORD PTR ds:0x64024034
6400b238:	int3   
6400b239:	int3   
6400b23a:	int3   
6400b23b:	int3   
6400b23c:	int3   
6400b23d:	int3   
6400b23e:	int3   
6400b23f:	int3   
6400b240:	cmp    BYTE PTR ds:0x64038cd4,0x0
6400b247:	jne    0x6400b267
6400b249:	mov    BYTE PTR ds:0x64038cd4,0x1
6400b250:	call   0x64002140
6400b255:	push   eax
6400b256:	call   0x64006e90
6400b25b:	add    esp,0x4
6400b25e:	test   al,al
6400b260:	jne    0x6400b267
6400b262:	xor    eax,eax
6400b264:	ret    0xc
6400b267:	jmp    0x640142e9
6400b26c:	int3   
6400b26d:	int3   
6400b26e:	int3   
6400b26f:	int3   
6400b270:	push   ebp
6400b271:	mov    ebp,esp
6400b273:	push   0xffffffff
6400b275:	push   0x64022ec8
6400b27a:	mov    eax,fs:0x0
6400b280:	push   eax
6400b281:	sub    esp,0x38
6400b284:	mov    eax,ds:0x64037644
6400b289:	xor    eax,ebp
6400b28b:	mov    DWORD PTR [ebp-0x14],eax
6400b28e:	push   ebx
6400b28f:	push   esi
6400b290:	push   edi
6400b291:	push   eax
6400b292:	lea    eax,[ebp-0xc]
6400b295:	mov    fs:0x0,eax
6400b29b:	mov    DWORD PTR [ebp-0x10],esp
6400b29e:	push   0x1
6400b2a0:	xor    esi,esi
6400b2a2:	push   0x1
6400b2a4:	lea    ecx,[ebp-0x44]
6400b2a7:	mov    DWORD PTR [ebp-0x4],esi
6400b2aa:	call   0x64007090
6400b2af:	mov    BYTE PTR [ebp-0x4],0x1
6400b2b3:	call   DWORD PTR ds:0x6402403c
6400b2b9:	push   eax
6400b2ba:	call   0x64002940
6400b2bf:	movzx  eax,ax
6400b2c2:	add    esp,0x4
6400b2c5:	push   eax
6400b2c6:	lea    eax,[ebp-0x30]
6400b2c9:	push   eax
6400b2ca:	lea    ecx,[ebp-0x44]
6400b2cd:	call   0x64007320
6400b2d2:	cmp    DWORD PTR [ebp-0x1c],esi
6400b2d5:	mov    bl,0x2
6400b2d7:	mov    BYTE PTR [ebp-0x4],bl
6400b2da:	jne    0x6400b2ed
6400b2dc:	push   0x6402bdb0
6400b2e1:	lea    ecx,[ebp-0x38]
6400b2e4:	push   ecx
6400b2e5:	mov    DWORD PTR [ebp-0x38],esi
6400b2e8:	call   0x64013872
6400b2ed:	call   DWORD PTR ds:0x6403761c
6400b2f3:	push   esi
6400b2f4:	lea    edx,[ebp-0x34]
6400b2f7:	push   0x1
6400b2f9:	push   edx
6400b2fa:	call   0x64002620
6400b2ff:	add    esp,0xc
6400b302:	mov    esi,eax
6400b304:	mov    eax,DWORD PTR [esi]
6400b306:	mov    edi,0x10
6400b30b:	sub    eax,edi
6400b30d:	cmp    DWORD PTR [eax+0xc],0x1
6400b311:	mov    BYTE PTR [ebp-0x4],0x3
6400b315:	jle    0x6400b322
6400b317:	mov    eax,DWORD PTR [eax+0x4]
6400b31a:	push   eax
6400b31b:	mov    ecx,esi
6400b31d:	call   0x64003820
6400b322:	cmp    DWORD PTR [ebp-0x18],edi
6400b325:	mov    esi,DWORD PTR [esi]
6400b327:	mov    eax,DWORD PTR [ebp-0x2c]
6400b32a:	jae    0x6400b32f
6400b32c:	lea    eax,[ebp-0x2c]
6400b32f:	push   esi
6400b330:	push   eax
6400b331:	call   DWORD PTR ds:0x64024038
6400b337:	push   eax
6400b338:	call   0x640094d0
6400b33d:	mov    eax,DWORD PTR [ebp-0x34]
6400b340:	add    eax,0xfffffff0
6400b343:	add    esp,0xc
6400b346:	mov    BYTE PTR [ebp-0x4],bl
6400b349:	lea    ecx,[eax+0xc]
6400b34c:	or     edx,0xffffffff
6400b34f:	lock xadd DWORD PTR [ecx],edx
6400b353:	dec    edx
6400b354:	test   edx,edx
6400b356:	jg     0x6400b362
6400b358:	mov    ecx,DWORD PTR [eax]
6400b35a:	mov    edx,DWORD PTR [ecx]
6400b35c:	push   eax
6400b35d:	mov    eax,DWORD PTR [edx+0x4]
6400b360:	call   eax
6400b362:	cmp    DWORD PTR [ebp-0x18],edi
6400b365:	jb     0x6400b373
6400b367:	mov    ecx,DWORD PTR [ebp-0x2c]
6400b36a:	push   ecx
6400b36b:	call   0x64013644
6400b370:	add    esp,0x4
6400b373:	lea    ecx,[ebp-0x44]
6400b376:	mov    DWORD PTR [ebp-0x18],0xf
6400b37d:	mov    DWORD PTR [ebp-0x1c],0x0
6400b384:	mov    BYTE PTR [ebp-0x2c],0x0
6400b388:	mov    BYTE PTR [ebp-0x4],0x0
6400b38c:	call   0x640070b0
6400b391:	mov    al,0x1
6400b393:	jmp    0x6400b39d
6400b395:	mov    eax,0x6400b39b
6400b39a:	ret    
6400b39b:	xor    al,al
6400b39d:	mov    ecx,DWORD PTR [ebp-0xc]
6400b3a0:	mov    DWORD PTR fs:0x0,ecx
6400b3a7:	pop    ecx
6400b3a8:	pop    edi
6400b3a9:	pop    esi
6400b3aa:	pop    ebx
6400b3ab:	mov    ecx,DWORD PTR [ebp-0x14]
6400b3ae:	xor    ecx,ebp
6400b3b0:	call   0x64013d06
6400b3b5:	mov    esp,ebp
6400b3b7:	pop    ebp
6400b3b8:	ret    
6400b3b9:	int3   
6400b3ba:	int3   
6400b3bb:	int3   
6400b3bc:	int3   
6400b3bd:	int3   
6400b3be:	int3   
6400b3bf:	int3   
6400b3c0:	push   esi
6400b3c1:	push   edi
6400b3c2:	mov    edi,DWORD PTR ds:0x64024040
6400b3c8:	xor    esi,esi
6400b3ca:	lea    ebx,[ebx+0x0]
6400b3d0:	call   0x6400b270
6400b3d5:	test   al,al
6400b3d7:	jne    0x6400b3e8
6400b3d9:	push   0xbb8
6400b3de:	call   edi
6400b3e0:	add    esi,0x1
6400b3e3:	cmp    esi,0x32
6400b3e6:	jne    0x6400b3d0
6400b3e8:	pop    edi
6400b3e9:	xor    eax,eax
6400b3eb:	pop    esi
6400b3ec:	ret    0x4
6400b3ef:	int3   
6400b3f0:	sub    esp,0x214
6400b3f6:	mov    eax,ds:0x64037644
6400b3fb:	xor    eax,esp
6400b3fd:	mov    DWORD PTR [esp+0x210],eax
6400b404:	push   0x208
6400b409:	lea    eax,[esp+0xc]
6400b40d:	push   eax
6400b40e:	push   0x0
6400b410:	call   DWORD PTR ds:0x64024054
6400b416:	test   eax,eax
6400b418:	je     0x6400b4bd
6400b41e:	lea    ecx,[esp+0x8]
6400b422:	push   0x104
6400b427:	push   ecx
6400b428:	call   0x64014561
6400b42d:	lea    edx,[esp+0x10]
6400b431:	push   0x640243f4
6400b436:	push   edx
6400b437:	call   0x64013fbc
6400b43c:	add    esp,0x10
6400b43f:	test   eax,eax
6400b441:	jne    0x6400b459
6400b443:	lea    eax,[esp+0x8]
6400b447:	push   0x640243dc
6400b44c:	push   eax
6400b44d:	call   0x64013fbc
6400b452:	add    esp,0x8
6400b455:	test   eax,eax
6400b457:	je     0x6400b4bd
6400b459:	lea    ecx,[esp]
6400b45c:	push   0x1
6400b45e:	push   ecx
6400b45f:	call   0x64002150
6400b464:	mov    eax,DWORD PTR [eax]
6400b466:	add    esp,0x8
6400b469:	lea    edx,[esp+0x4]
6400b46d:	push   edx
6400b46e:	push   eax
6400b46f:	push   0x0
6400b471:	call   DWORD PTR ds:0x64024050
6400b477:	mov    eax,DWORD PTR [esp]
6400b47a:	add    eax,0xfffffff0
6400b47d:	lea    ecx,[eax+0xc]
6400b480:	or     edx,0xffffffff
6400b483:	lock xadd DWORD PTR [ecx],edx
6400b487:	dec    edx
6400b488:	test   edx,edx
6400b48a:	jg     0x6400b496
6400b48c:	mov    ecx,DWORD PTR [eax]
6400b48e:	mov    edx,DWORD PTR [ecx]
6400b490:	push   eax
6400b491:	mov    eax,DWORD PTR [edx+0x4]
6400b494:	call   eax
6400b496:	lea    ecx,[esp+0x8]
6400b49a:	push   ecx
6400b49b:	call   DWORD PTR ds:0x6402404c
6400b4a1:	push   eax
6400b4a2:	call   DWORD PTR ds:0x64024048
6400b4a8:	push   0x0
6400b4aa:	push   0x0
6400b4ac:	push   0x0
6400b4ae:	push   0x6400b3c0
6400b4b3:	push   0x0
6400b4b5:	push   0x0
6400b4b7:	call   DWORD PTR ds:0x64024044
6400b4bd:	mov    ecx,DWORD PTR [esp+0x210]
6400b4c4:	xor    ecx,esp
6400b4c6:	call   0x64013d06
6400b4cb:	add    esp,0x214
6400b4d1:	ret    
6400b4d2:	jmp    DWORD PTR ds:0x640241ec
6400b4d8:	jmp    DWORD PTR ds:0x640241e8
6400b4de:	int3   
6400b4df:	int3   
6400b4e0:	push   edi
6400b4e1:	mov    edi,DWORD PTR [esp+0x14]
6400b4e5:	test   edi,edi
6400b4e7:	jne    0x6400b4ee
6400b4e9:	lea    eax,[edi+0x1]
6400b4ec:	pop    edi
6400b4ed:	ret    
6400b4ee:	mov    eax,DWORD PTR [esp+0x8]
6400b4f2:	test   eax,eax
6400b4f4:	push   esi
6400b4f5:	mov    DWORD PTR [edi],0x0
6400b4fb:	je     0x6400b54d
6400b4fd:	mov    esi,DWORD PTR [eax+0x14]
6400b500:	test   esi,esi
6400b502:	jl     0x6400b54d
6400b504:	mov    ecx,DWORD PTR [eax+0x18]
6400b507:	test   ecx,ecx
6400b509:	je     0x6400b515
6400b50b:	cmp    ecx,0x1
6400b50e:	je     0x6400b515
6400b510:	cmp    ecx,0x2
6400b513:	jne    0x6400b54d
6400b515:	cmp    DWORD PTR [eax+0x10],0x0
6400b519:	je     0x6400b54d
6400b51b:	mov    ecx,DWORD PTR [esp+0x10]
6400b51f:	test   ecx,ecx
6400b521:	je     0x6400b54d
6400b523:	mov    edx,DWORD PTR [eax+0x1c]
6400b526:	and    edx,0x3
6400b529:	cmp    dl,0x3
6400b52c:	je     0x6400b54d
6400b52e:	test   esi,esi
6400b530:	jne    0x6400b538
6400b532:	lea    eax,[esi+0x1]
6400b535:	pop    esi
6400b536:	pop    edi
6400b537:	ret    
6400b538:	mov    edx,DWORD PTR [esp+0x14]
6400b53c:	push   edi
6400b53d:	push   edx
6400b53e:	push   ecx
6400b53f:	push   0x0
6400b541:	push   eax
6400b542:	call   0x6400ba50
6400b547:	add    esp,0x14
6400b54a:	pop    esi
6400b54b:	pop    edi
6400b54c:	ret    
6400b54d:	pop    esi
6400b54e:	mov    eax,0x3
6400b553:	pop    edi
6400b554:	ret    
6400b555:	int3   
6400b556:	int3   
6400b557:	int3   
6400b558:	int3   
6400b559:	int3   
6400b55a:	int3   
6400b55b:	int3   
6400b55c:	int3   
6400b55d:	int3   
6400b55e:	int3   
6400b55f:	int3   
6400b560:	test   DWORD PTR [esp+0x4],0x4000
6400b568:	je     0x6400b571
6400b56a:	mov    eax,DWORD PTR [eax*4+0x6402e00c]
6400b571:	ret    
6400b572:	int3   
6400b573:	int3   
6400b574:	int3   
6400b575:	int3   
6400b576:	int3   
6400b577:	int3   
6400b578:	int3   
6400b579:	int3   
6400b57a:	int3   
6400b57b:	int3   
6400b57c:	int3   
6400b57d:	int3   
6400b57e:	int3   
6400b57f:	int3   
6400b580:	test   ecx,0x2000
6400b586:	je     0x6400b590
6400b588:	mov    eax,DWORD PTR [eax*4+0x6402e018]
6400b58f:	ret    
6400b590:	cmp    eax,0x2
6400b593:	jne    0x6400b5bd
6400b595:	and    edx,0x3000000
6400b59b:	cmp    edx,0x1000000
6400b5a1:	je     0x6400b5b8
6400b5a3:	test   ecx,0x2000000
6400b5a9:	je     0x6400b5b2
6400b5ab:	test   BYTE PTR [esp+0x4],0x8
6400b5b0:	jne    0x6400b5b8
6400b5b2:	mov    eax,0x1
6400b5b7:	ret    
6400b5b8:	mov    eax,0x2
6400b5bd:	ret    
6400b5be:	int3   
6400b5bf:	int3   
6400b5c0:	sub    esp,0x18
6400b5c3:	mov    edx,DWORD PTR [ebx+0x10]
6400b5c6:	push   ebp
6400b5c7:	mov    ebp,DWORD PTR [esp+0x20]
6400b5cb:	mov    ecx,DWORD PTR [ebp+0x28]
6400b5ce:	push   esi
6400b5cf:	xor    eax,eax
6400b5d1:	push   ebp
6400b5d2:	push   ebx
6400b5d3:	mov    DWORD PTR [esp+0x10],eax
6400b5d7:	mov    DWORD PTR [esp+0x1c],ecx
6400b5db:	mov    DWORD PTR [esp+0x24],edx
6400b5df:	mov    BYTE PTR [esp+0x2c],al
6400b5e3:	mov    DWORD PTR [esp+0x20],eax
6400b5e7:	call   0x6400e010
6400b5ec:	mov    esi,eax
6400b5ee:	add    esp,0x8
6400b5f1:	test   esi,esi
6400b5f3:	je     0x6400b7f0
6400b5f9:	cmp    DWORD PTR [ebp+0x18],0x1
6400b5fd:	jne    0x6400b629
6400b5ff:	mov    eax,DWORD PTR [ebp+0x0]
6400b602:	test   eax,0x2000
6400b607:	je     0x6400b629
6400b609:	cmp    DWORD PTR [ebp+0x20],0x0
6400b60d:	jne    0x6400b629
6400b60f:	test   BYTE PTR [esp+0x14],0x8
6400b614:	je     0x6400b629
6400b616:	and    eax,0xffffdfff
6400b61b:	push   0x3
6400b61d:	push   ebp
6400b61e:	mov    DWORD PTR [ebp+0x0],eax
6400b621:	call   0x6400d960
6400b626:	add    esp,0x8
6400b629:	mov    eax,DWORD PTR [ebx+0x18]
6400b62c:	cmp    eax,0x2
6400b62f:	jne    0x6400b642
6400b631:	test   DWORD PTR [esi+0x8],0x800000
6400b638:	jne    0x6400b7f0
6400b63e:	cmp    eax,eax
6400b640:	je     0x6400b64f
6400b642:	test   DWORD PTR [esi+0x8],0x8000000
6400b649:	jne    0x6400b7f0
6400b64f:	mov    ecx,DWORD PTR [esi+0x8]
6400b652:	test   cl,0x1
6400b655:	je     0x6400b6a1
6400b657:	not    ecx
6400b659:	test   ecx,0x40000000
6400b65f:	je     0x6400b66f
6400b661:	add    DWORD PTR [ebx+0x10],0x1
6400b665:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b669:	js     0x6400b7f0
6400b66f:	mov    ecx,DWORD PTR [ebx+0x10]
6400b672:	movzx  edx,BYTE PTR [ecx]
6400b675:	mov    ecx,DWORD PTR [esi+0x8]
6400b678:	test   ecx,0x10000000
6400b67e:	mov    DWORD PTR [esp+0x8],edx
6400b682:	je     0x6400b68d
6400b684:	test   dl,0x38
6400b687:	jne    0x6400b7f0
6400b68d:	test   ecx,0x100000
6400b693:	je     0x6400b6a1
6400b695:	cmp    edx,0xc0
6400b69b:	jb     0x6400b7f0
6400b6a1:	mov    edx,DWORD PTR [esp+0x14]
6400b6a5:	add    DWORD PTR [ebx+0x10],0x1
6400b6a9:	mov    ecx,DWORD PTR [ebp+0x0]
6400b6ac:	push   edx
6400b6ad:	mov    edx,DWORD PTR [esi+0x8]
6400b6b0:	call   0x6400b580
6400b6b5:	mov    DWORD PTR [esp+0x14],eax
6400b6b9:	mov    eax,ecx
6400b6bb:	push   eax
6400b6bc:	mov    eax,DWORD PTR [ebx+0x18]
6400b6bf:	call   0x6400b560
6400b6c4:	push   0x40
6400b6c6:	push   0x0
6400b6c8:	push   edi
6400b6c9:	mov    DWORD PTR [esp+0x20],eax
6400b6cd:	call   0x64015160
6400b6d2:	mov    BYTE PTR [edi+0xd],0xff
6400b6d6:	mov    al,BYTE PTR [esi+0x3]
6400b6d9:	add    esp,0x14
6400b6dc:	test   al,al
6400b6de:	je     0x6400b7aa
6400b6e4:	mov    edx,DWORD PTR [esp+0xc]
6400b6e8:	lea    ecx,[esp+0x18]
6400b6ec:	push   ecx
6400b6ed:	mov    ecx,DWORD PTR [esp+0x14]
6400b6f1:	push   edx
6400b6f2:	mov    edx,DWORD PTR [esp+0x10]
6400b6f6:	push   ecx
6400b6f7:	push   ebp
6400b6f8:	push   edx
6400b6f9:	push   0x0
6400b6fb:	movzx  eax,al
6400b6fe:	push   eax
6400b6ff:	push   esi
6400b700:	push   edi
6400b701:	push   ebx
6400b702:	call   0x6400c770
6400b707:	add    esp,0x28
6400b70a:	test   eax,eax
6400b70c:	je     0x6400b7f0
6400b712:	mov    al,BYTE PTR [esi+0x2]
6400b715:	test   al,al
6400b717:	je     0x6400b7aa
6400b71d:	mov    ecx,DWORD PTR [esp+0xc]
6400b721:	mov    edx,DWORD PTR [esp+0x10]
6400b725:	push   0x0
6400b727:	push   ecx
6400b728:	mov    ecx,DWORD PTR [esp+0x10]
6400b72c:	push   edx
6400b72d:	push   ebp
6400b72e:	push   ecx
6400b72f:	push   0x1
6400b731:	movzx  edx,al
6400b734:	push   edx
6400b735:	push   esi
6400b736:	push   edi
6400b737:	push   ebx
6400b738:	call   0x6400c770
6400b73d:	add    esp,0x28
6400b740:	test   eax,eax
6400b742:	je     0x6400b7f0
6400b748:	test   DWORD PTR [esi+0x8],0x20000
6400b74f:	je     0x6400b7aa
6400b751:	mov    eax,DWORD PTR [esp+0xc]
6400b755:	mov    ecx,DWORD PTR [esp+0x10]
6400b759:	mov    edx,DWORD PTR [esp+0x8]
6400b75d:	push   0x0
6400b75f:	push   eax
6400b760:	movzx  eax,BYTE PTR [esi+0x10]
6400b764:	push   ecx
6400b765:	push   ebp
6400b766:	push   edx
6400b767:	push   0x2
6400b769:	push   eax
6400b76a:	push   esi
6400b76b:	push   edi
6400b76c:	push   ebx
6400b76d:	call   0x6400c770
6400b772:	add    esp,0x28
6400b775:	test   eax,eax
6400b777:	je     0x6400b7f0
6400b779:	test   DWORD PTR [esi+0x8],0x40000
6400b780:	je     0x6400b7aa
6400b782:	mov    ecx,DWORD PTR [esp+0xc]
6400b786:	mov    edx,DWORD PTR [esp+0x10]
6400b78a:	mov    eax,DWORD PTR [esp+0x8]
6400b78e:	push   0x0
6400b790:	push   ecx
6400b791:	movzx  ecx,BYTE PTR [esi+0x11]
6400b795:	push   edx
6400b796:	push   ebp
6400b797:	push   eax
6400b798:	push   0x3
6400b79a:	push   ecx
6400b79b:	push   esi
6400b79c:	push   edi
6400b79d:	push   ebx
6400b79e:	call   0x6400c770
6400b7a3:	add    esp,0x28
6400b7a6:	test   eax,eax
6400b7a8:	je     0x6400b7f0
6400b7aa:	test   DWORD PTR [esi+0x8],0x200000
6400b7b1:	je     0x6400b7c2
6400b7b3:	push   ebx
6400b7b4:	call   0x6400e300
6400b7b9:	mov    esi,eax
6400b7bb:	add    esp,0x4
6400b7be:	test   esi,esi
6400b7c0:	je     0x6400b7f0
6400b7c2:	test   DWORD PTR [esi+0x8],0x400000
6400b7c9:	je     0x6400b7e5
6400b7cb:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b7cf:	js     0x6400b7f0
6400b7d1:	mov    eax,DWORD PTR [ebx+0x10]
6400b7d4:	mov    cl,BYTE PTR [eax]
6400b7d6:	add    eax,0x1
6400b7d9:	cmp    cl,0x8
6400b7dc:	mov    BYTE PTR [esp+0x24],cl
6400b7e0:	mov    DWORD PTR [ebx+0x10],eax
6400b7e3:	jae    0x6400b7f0
6400b7e5:	mov    edx,DWORD PTR [ebx+0x10]
6400b7e8:	sub    edx,DWORD PTR [ebp+0x8]
6400b7eb:	cmp    edx,0xf
6400b7ee:	jle    0x6400b835
6400b7f0:	push   0x40
6400b7f2:	push   0x0
6400b7f4:	push   edi
6400b7f5:	call   0x64015160
6400b7fa:	mov    eax,DWORD PTR [esp+0x28]
6400b7fe:	mov    BYTE PTR [edi+0xd],0xff
6400b802:	mov    BYTE PTR [edi+0x8],0x1
6400b806:	add    esp,0xc
6400b809:	mov    DWORD PTR [ebp+0x4],0x0
6400b810:	cmp    BYTE PTR [eax],0x9b
6400b813:	jne    0x6400b82a
6400b815:	or     BYTE PTR [edi+0x3a],0x8
6400b819:	pop    esi
6400b81a:	mov    WORD PTR [edi+0x10],0x3db
6400b820:	mov    eax,0x1
6400b825:	pop    ebp
6400b826:	add    esp,0x18
6400b829:	ret    
6400b82a:	pop    esi
6400b82b:	mov    eax,0x3
6400b830:	pop    ebp
6400b831:	add    esp,0x18
6400b834:	ret    
6400b835:	mov    edx,0x1
6400b83a:	cmp    DWORD PTR [esp+0x18],edx
6400b83e:	jne    0x6400b850
6400b840:	test   BYTE PTR [esi+0x8],0x10
6400b844:	je     0x6400b850
6400b846:	or     DWORD PTR [ebp+0x4],0x10
6400b84a:	or     WORD PTR [edi+0xa],dx
6400b84e:	jmp    0x6400b87b
6400b850:	mov    eax,DWORD PTR [esi+0x8]
6400b853:	test   al,0x20
6400b855:	je     0x6400b868
6400b857:	test   BYTE PTR [ebp+0x0],0x20
6400b85b:	je     0x6400b868
6400b85d:	or     DWORD PTR [ebp+0x4],0x20
6400b861:	or     WORD PTR [edi+0xa],0x2
6400b866:	jmp    0x6400b87b
6400b868:	test   al,0x40
6400b86a:	je     0x6400b87b
6400b86c:	test   BYTE PTR [ebp+0x0],0x40
6400b870:	je     0x6400b87b
6400b872:	or     DWORD PTR [ebp+0x4],0x40
6400b876:	or     WORD PTR [edi+0xa],0x4
6400b87b:	mov    eax,DWORD PTR [esi+0x8]
6400b87e:	mov    ecx,eax
6400b880:	and    ecx,0x14000
6400b886:	cmp    ecx,0x14000
6400b88c:	jne    0x6400b8bf
6400b88e:	mov    eax,DWORD PTR [esp+0xc]
6400b892:	or     DWORD PTR [ebp+0x4],0x4000
6400b899:	test   eax,eax
6400b89b:	je     0x6400b99b
6400b8a1:	cmp    eax,edx
6400b8a3:	jne    0x6400b8b2
6400b8a5:	mov    ax,WORD PTR [esi+0x12]
6400b8a9:	mov    WORD PTR [edi+0x10],ax
6400b8ad:	jmp    0x6400b9a3
6400b8b2:	mov    cx,WORD PTR [esi+0x14]
6400b8b6:	mov    WORD PTR [edi+0x10],cx
6400b8ba:	jmp    0x6400b9a3
6400b8bf:	mov    ecx,eax
6400b8c1:	and    ecx,0xc000
6400b8c7:	cmp    ecx,0xc000
6400b8cd:	jne    0x6400b8e3
6400b8cf:	mov    dx,WORD PTR [esi+0x4]
6400b8d3:	mov    WORD PTR [edi+0x10],dx
6400b8d7:	or     DWORD PTR [ebp+0x4],0x4000
6400b8de:	jmp    0x6400b9a3
6400b8e3:	mov    ecx,DWORD PTR [esp+0x10]
6400b8e7:	test   ecx,ecx
6400b8e9:	jne    0x6400b90d
6400b8eb:	test   eax,0x10000
6400b8f0:	je     0x6400b900
6400b8f2:	test   eax,0x1000008
6400b8f7:	jne    0x6400b900
6400b8f9:	or     DWORD PTR [ebp+0x4],0x2000
6400b900:	mov    ax,WORD PTR [esi+0x4]
6400b904:	mov    WORD PTR [edi+0x10],ax
6400b908:	jmp    0x6400b9a3
6400b90d:	cmp    ecx,edx
6400b90f:	jne    0x6400b962
6400b911:	or     WORD PTR [edi+0xa],0x100
6400b917:	test   DWORD PTR [esi+0x8],0x10000
6400b91e:	je     0x6400b99b
6400b920:	or     DWORD PTR [ebp+0x4],0x2000
6400b927:	mov    eax,DWORD PTR [esi+0x8]
6400b92a:	test   eax,0x80000
6400b92f:	je     0x6400b94b
6400b931:	cmp    DWORD PTR [esp+0x8],0xc0
6400b939:	jb     0x6400b945
6400b93b:	mov    cx,WORD PTR [esi+0x4]
6400b93f:	mov    WORD PTR [edi+0x10],cx
6400b943:	jmp    0x6400b9a3
6400b945:	mov    dx,WORD PTR [esi+0x12]
6400b949:	jmp    0x6400b99f
6400b94b:	test   eax,0x400000
6400b950:	je     0x6400b991
6400b952:	movzx  ax,BYTE PTR [esp+0x24]
6400b958:	add    ax,WORD PTR [esi+0x4]
6400b95c:	mov    WORD PTR [edi+0x10],ax
6400b960:	jmp    0x6400b9a3
6400b962:	or     WORD PTR [edi+0xa],0x200
6400b968:	mov    eax,DWORD PTR [esi+0x8]
6400b96b:	test   eax,0x4010000
6400b970:	je     0x6400b99b
6400b972:	test   eax,0x4000000
6400b977:	je     0x6400b991
6400b979:	test   BYTE PTR [esp+0x14],0x8
6400b97e:	je     0x6400b991
6400b980:	or     DWORD PTR [ebp+0x4],0x2000000
6400b987:	mov    ax,WORD PTR [esi+0x14]
6400b98b:	mov    WORD PTR [edi+0x10],ax
6400b98f:	jmp    0x6400b9a3
6400b991:	mov    cx,WORD PTR [esi+0x12]
6400b995:	mov    WORD PTR [edi+0x10],cx
6400b999:	jmp    0x6400b9a3
6400b99b:	mov    dx,WORD PTR [esi+0x4]
6400b99f:	mov    WORD PTR [edi+0x10],dx
6400b9a3:	test   DWORD PTR [esi+0x8],0x8000
6400b9aa:	je     0x6400b9bc
6400b9ac:	test   DWORD PTR [ebp+0x0],0x2000
6400b9b3:	je     0x6400b9bc
6400b9b5:	or     DWORD PTR [ebp+0x4],0x2000
6400b9bc:	test   DWORD PTR [esi+0x8],0x20000000
6400b9c3:	je     0x6400b9e6
6400b9c5:	mov    eax,DWORD PTR [esi+0xc]
6400b9c8:	test   al,0x4
6400b9ca:	je     0x6400b9d3
6400b9cc:	test   BYTE PTR [esp+0x14],0x8
6400b9d1:	jne    0x6400b9de
6400b9d3:	test   al,0x8
6400b9d5:	je     0x6400b9e6
6400b9d7:	test   BYTE PTR [esp+0x14],0x10
6400b9dc:	je     0x6400b9e6
6400b9de:	mov    ax,WORD PTR [esi+0x12]
6400b9e2:	mov    WORD PTR [edi+0x10],ax
6400b9e6:	mov    eax,DWORD PTR [esp+0xc]
6400b9ea:	and    eax,0x3
6400b9ed:	shl    eax,0xa
6400b9f0:	or     WORD PTR [edi+0xa],ax
6400b9f4:	test   DWORD PTR [esi+0x8],0x80000000
6400b9fb:	movzx  eax,WORD PTR [edi+0xa]
6400b9ff:	je     0x6400ba08
6400ba01:	or     eax,0x40
6400ba04:	mov    WORD PTR [edi+0xa],ax
6400ba08:	push   ebp
6400ba09:	call   0x6400d9a0
6400ba0e:	mov    WORD PTR [edi+0x38],ax
6400ba12:	mov    cl,BYTE PTR [esi+0x1]
6400ba15:	add    esp,0x4
6400ba18:	cmp    BYTE PTR [edi+0xc],0x0
6400ba1c:	mov    BYTE PTR [edi+0x3a],cl
6400ba1f:	jne    0x6400ba25
6400ba21:	mov    BYTE PTR [edi+0xc],0xff
6400ba25:	mov    al,BYTE PTR [edi+0xd]
6400ba28:	cmp    al,0xff
6400ba2a:	je     0x6400ba3b
6400ba2c:	movzx  edx,al
6400ba2f:	mov    ax,WORD PTR [edx*2+0x6402e028]
6400ba37:	or     WORD PTR [edi+0x3c],ax
6400ba3b:	mov    cl,BYTE PTR [ebx+0x10]
6400ba3e:	sub    cl,BYTE PTR [esp+0x1c]
6400ba42:	pop    esi
6400ba43:	mov    BYTE PTR [edi+0x8],cl
6400ba46:	mov    eax,0x1
6400ba4b:	pop    ebp
6400ba4c:	add    esp,0x18
6400ba4f:	ret    
6400ba50:	sub    esp,0x90
6400ba56:	push   ebx
6400ba57:	push   ebp
6400ba58:	push   esi
6400ba59:	or     eax,0xffffffff
6400ba5c:	push   edi
6400ba5d:	mov    edi,DWORD PTR [esp+0xa4]
6400ba64:	mov    ebp,DWORD PTR [edi]
6400ba66:	mov    ecx,DWORD PTR [edi+0x4]
6400ba69:	mov    ebx,DWORD PTR [edi+0x10]
6400ba6c:	mov    edx,DWORD PTR [edi+0x14]
6400ba6f:	mov    DWORD PTR [esp+0x2c],eax
6400ba73:	mov    DWORD PTR [esp+0x30],eax
6400ba77:	mov    eax,DWORD PTR [edi+0x1c]
6400ba7a:	xor    esi,esi
6400ba7c:	test   al,0x2
6400ba7e:	mov    DWORD PTR [esp+0x1c],ebp
6400ba82:	mov    DWORD PTR [esp+0x20],ecx
6400ba86:	mov    DWORD PTR [esp+0x18],ebx
6400ba8a:	mov    DWORD PTR [esp+0x14],edx
6400ba8e:	je     0x6400ba9a
6400ba90:	mov    DWORD PTR [esp+0x2c],0xffffffff
6400ba98:	jmp    0x6400baa6
6400ba9a:	test   al,0x1
6400ba9c:	je     0x6400baaa
6400ba9e:	mov    DWORD PTR [esp+0x2c],0xffff
6400baa6:	mov    DWORD PTR [esp+0x30],esi
6400baaa:	test   edx,edx
6400baac:	mov    eax,DWORD PTR [esp+0xb4]
6400bab3:	mov    DWORD PTR [eax],esi
6400bab5:	mov    eax,DWORD PTR [edi+0x18]
6400bab8:	mov    DWORD PTR [esp+0x98],eax
6400babf:	mov    DWORD PTR [edi+0x8],ebp
6400bac2:	mov    DWORD PTR [edi+0xc],ecx
6400bac5:	jg     0x6400bae8
6400bac7:	pop    edi
6400bac8:	pop    esi
6400bac9:	pop    ebp
6400baca:	mov    eax,0x1
6400bacf:	pop    ebx
6400bad0:	add    esp,0x90
6400bad6:	ret    
6400bad7:	jmp    0x6400bae0
6400bad9:	lea    esp,[esp+0x0]
6400bae0:	mov    ecx,DWORD PTR [esp+0x20]
6400bae4:	mov    ebp,DWORD PTR [esp+0x1c]
6400bae8:	push   0x2c
6400baea:	mov    DWORD PTR [esp+0x3c],ecx
6400baee:	lea    ecx,[esp+0x44]
6400baf2:	push   0x0
6400baf4:	push   ecx
6400baf5:	call   0x64015160
6400bafa:	mov    edx,DWORD PTR [esp+0xa4]
6400bb01:	or     eax,0xffffffff
6400bb04:	mov    DWORD PTR [esp+0x78],eax
6400bb08:	mov    DWORD PTR [esp+0x7c],eax
6400bb0c:	mov    DWORD PTR [esp+0x80],eax
6400bb13:	mov    DWORD PTR [esp+0x84],eax
6400bb1a:	mov    DWORD PTR [esp+0x88],eax
6400bb21:	mov    DWORD PTR [esp+0x54],ebx
6400bb25:	mov    DWORD PTR [esp+0x58],ebx
6400bb29:	movzx  eax,BYTE PTR [ebx]
6400bb2c:	push   edx
6400bb2d:	push   eax
6400bb2e:	mov    DWORD PTR [esp+0x38],0x0
6400bb36:	call   0x6400d850
6400bb3b:	add    esp,0x14
6400bb3e:	test   eax,eax
6400bb40:	je     0x6400bc6e
6400bb46:	mov    ecx,DWORD PTR [esp+0x98]
6400bb4d:	mov    eax,DWORD PTR [esp+0x14]
6400bb51:	push   ecx
6400bb52:	lea    edx,[esp+0x44]
6400bb56:	push   edx
6400bb57:	push   eax
6400bb58:	push   ebx
6400bb59:	call   0x6400da30
6400bb5e:	mov    ecx,DWORD PTR [esp+0x5c]
6400bb62:	mov    eax,ecx
6400bb64:	sub    eax,DWORD PTR [esp+0x58]
6400bb68:	add    esp,0x10
6400bb6b:	sub    DWORD PTR [esp+0x14],eax
6400bb6f:	mov    DWORD PTR [esp+0x24],eax
6400bb73:	je     0x6400bb7e
6400bb75:	cmp    eax,0xf
6400bb78:	jne    0x6400bc56
6400bb7e:	mov    edx,DWORD PTR [edi+0x1c]
6400bb81:	not    edx
6400bb83:	test   dl,0x4
6400bb86:	je     0x6400bc4b
6400bb8c:	sub    ecx,ebx
6400bb8e:	lea    edx,[ecx+esi*1]
6400bb91:	cmp    edx,DWORD PTR [esp+0xb0]
6400bb98:	ja     0x6400bf71
6400bb9e:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bba2:	jae    0x6400bc42
6400bba8:	mov    edx,DWORD PTR [esp+0xac]
6400bbaf:	mov    edi,esi
6400bbb1:	imul   edi,edi,0xa8
6400bbb7:	mov    eax,esi
6400bbb9:	shl    eax,0x6
6400bbbc:	add    eax,edx
6400bbbe:	add    edi,edx
6400bbc0:	add    esi,ecx
6400bbc2:	mov    DWORD PTR [esp+0x10],esi
6400bbc6:	jmp    0x6400bbd4
6400bbc8:	jmp    0x6400bbd0
6400bbca:	lea    ebx,[ebx+0x0]
6400bbd0:	mov    eax,DWORD PTR [esp+0x28]
6400bbd4:	cmp    DWORD PTR [esp+0xa8],0x0
6400bbdc:	mov    esi,edi
6400bbde:	jne    0x6400bbe2
6400bbe0:	mov    esi,eax
6400bbe2:	push   0x40
6400bbe4:	add    eax,0x40
6400bbe7:	push   0x0
6400bbe9:	push   esi
6400bbea:	add    edi,0xa8
6400bbf0:	mov    DWORD PTR [esp+0x34],eax
6400bbf4:	call   0x64015160
6400bbf9:	mov    ecx,DWORD PTR [esp+0x38]
6400bbfd:	mov    edx,DWORD PTR [esp+0x3c]
6400bc01:	and    edx,DWORD PTR [esp+0x44]
6400bc05:	mov    WORD PTR [esi+0xa],0xffff
6400bc0b:	mov    al,BYTE PTR [ebx]
6400bc0d:	and    ecx,ebp
6400bc0f:	add    esp,0xc
6400bc12:	add    ebx,0x1
6400bc15:	add    ebp,0x1
6400bc18:	adc    DWORD PTR [esp+0x38],0x0
6400bc1d:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bc21:	mov    BYTE PTR [esi+0x30],al
6400bc24:	mov    BYTE PTR [esi+0x8],0x1
6400bc28:	mov    DWORD PTR [esi],ecx
6400bc2a:	mov    DWORD PTR [esi+0x4],edx
6400bc2d:	jb     0x6400bbd0
6400bc2f:	mov    eax,DWORD PTR [esp+0x24]
6400bc33:	mov    esi,DWORD PTR [esp+0x10]
6400bc37:	mov    ebx,DWORD PTR [esp+0x18]
6400bc3b:	mov    edi,DWORD PTR [esp+0xa4]
6400bc42:	mov    ecx,DWORD PTR [esp+0xb4]
6400bc49:	mov    DWORD PTR [ecx],esi
6400bc4b:	cmp    DWORD PTR [esp+0x14],0x0
6400bc50:	je     0x6400bac7
6400bc56:	add    ebx,eax
6400bc58:	add    DWORD PTR [esp+0x1c],eax
6400bc5c:	mov    DWORD PTR [esp+0x18],ebx
6400bc60:	adc    DWORD PTR [esp+0x20],0x0
6400bc65:	cmp    eax,0xf
6400bc68:	je     0x6400bf56
6400bc6e:	cmp    DWORD PTR [esp+0x98],0x2
6400bc76:	jne    0x6400bccb
6400bc78:	test   DWORD PTR [esp+0x40],0x2000000
6400bc80:	je     0x6400bcaa
6400bc82:	add    ebx,0xffffffff
6400bc85:	cmp    DWORD PTR [esp+0x54],ebx
6400bc89:	je     0x6400bcaa
6400bc8b:	and    DWORD PTR [esp+0x40],0xfdffffff
6400bc93:	lea    edx,[esp+0x40]
6400bc97:	push   0x0
6400bc99:	push   edx
6400bc9a:	mov    DWORD PTR [esp+0x60],0x0
6400bca2:	call   0x6400d960
6400bca7:	add    esp,0x8
6400bcaa:	test   DWORD PTR [esp+0x40],0x780
6400bcb2:	je     0x6400bccb
6400bcb4:	and    DWORD PTR [esp+0x40],0xfffff87f
6400bcbc:	lea    eax,[esp+0x40]
6400bcc0:	push   0x2
6400bcc2:	push   eax
6400bcc3:	call   0x6400d960
6400bcc8:	add    esp,0x8
6400bccb:	lea    eax,[esi+0x1]
6400bcce:	cmp    eax,DWORD PTR [esp+0xb0]
6400bcd5:	ja     0x6400bf71
6400bcdb:	cmp    DWORD PTR [esp+0xa8],0x0
6400bce3:	je     0x6400bced
6400bce5:	imul   esi,esi,0xa8
6400bceb:	jmp    0x6400bcf0
6400bced:	shl    esi,0x6
6400bcf0:	add    esi,DWORD PTR [esp+0xac]
6400bcf7:	mov    ecx,DWORD PTR [esp+0x18]
6400bcfb:	mov    edx,DWORD PTR [esp+0x14]
6400bcff:	mov    DWORD PTR [esp+0x10],eax
6400bd03:	lea    eax,[esp+0x40]
6400bd07:	mov    edi,esi
6400bd09:	push   eax
6400bd0a:	lea    ebx,[esp+0x84]
6400bd11:	mov    DWORD PTR [esp+0x94],ecx
6400bd18:	mov    DWORD PTR [esp+0x98],edx
6400bd1f:	call   0x6400b5c0
6400bd24:	mov    ecx,DWORD PTR [esp+0xa8]
6400bd2b:	add    esp,0x4
6400bd2e:	test   BYTE PTR [ecx+0x1c],0x4
6400bd32:	mov    DWORD PTR [esp+0x28],eax
6400bd36:	je     0x6400bd46
6400bd38:	test   BYTE PTR [edi+0x3a],0x7
6400bd3c:	jne    0x6400bd46
6400bd3e:	mov    DWORD PTR [esp+0x28],0x4
6400bd46:	mov    ecx,DWORD PTR [esp+0x30]
6400bd4a:	and    DWORD PTR [edi+0x2c],ecx
6400bd4d:	mov    eax,DWORD PTR [esp+0x2c]
6400bd51:	and    DWORD PTR [edi+0x28],eax
6400bd54:	mov    esi,ecx
6400bd56:	mov    cl,BYTE PTR [edi+0x8]
6400bd59:	and    esi,DWORD PTR [esp+0x38]
6400bd5d:	movzx  ebx,cl
6400bd60:	sub    DWORD PTR [esp+0x14],ebx
6400bd64:	mov    edx,eax
6400bd66:	and    edx,ebp
6400bd68:	mov    DWORD PTR [edi],edx
6400bd6a:	mov    eax,ebx
6400bd6c:	cdq    
6400bd6d:	add    DWORD PTR [esp+0x1c],eax
6400bd71:	mov    eax,DWORD PTR [esp+0x24]
6400bd75:	mov    DWORD PTR [edi+0x4],esi
6400bd78:	adc    DWORD PTR [esp+0x20],edx
6400bd7c:	mov    edx,DWORD PTR [esp+0x28]
6400bd80:	add    DWORD PTR [esp+0x18],ebx
6400bd84:	add    cl,al
6400bd86:	cmp    edx,0x3
6400bd89:	mov    BYTE PTR [edi+0x8],cl
6400bd8c:	jne    0x6400be79
6400bd92:	mov    ecx,DWORD PTR [esp+0xa4]
6400bd99:	mov    ecx,DWORD PTR [ecx+0x1c]
6400bd9c:	not    ecx
6400bd9e:	test   cl,0x4
6400bda1:	je     0x6400be83
6400bda7:	mov    esi,DWORD PTR [esp+0x10]
6400bdab:	sub    esi,0x1
6400bdae:	lea    ecx,[eax+0x1]
6400bdb1:	test   ecx,ecx
6400bdb3:	mov    DWORD PTR [esp+0x10],esi
6400bdb7:	jbe    0x6400be83
6400bdbd:	lea    eax,[eax+esi*1+0x1]
6400bdc1:	cmp    eax,DWORD PTR [esp+0xb0]
6400bdc8:	ja     0x6400bf71
6400bdce:	mov    ecx,DWORD PTR [esp+0x4c]
6400bdd2:	mov    ebx,DWORD PTR [esp+0x48]
6400bdd6:	add    ecx,0x1
6400bdd9:	cmp    ebx,ecx
6400bddb:	mov    DWORD PTR [esp+0x3c],ecx
6400bddf:	jae    0x6400be83
6400bde5:	mov    edx,DWORD PTR [esp+0xac]
6400bdec:	mov    eax,esi
6400bdee:	imul   esi,esi,0xa8
6400bdf4:	shl    eax,0x6
6400bdf7:	sub    ecx,ebx
6400bdf9:	add    eax,edx
6400bdfb:	add    esi,edx
6400bdfd:	add    DWORD PTR [esp+0x10],ecx
6400be01:	jmp    0x6400be14
6400be03:	jmp    0x6400be10
6400be05:	lea    esp,[esp+0x0]
6400be0c:	lea    esp,[esp+0x0]
6400be10:	mov    eax,DWORD PTR [esp+0x24]
6400be14:	cmp    DWORD PTR [esp+0xa8],0x0
6400be1c:	mov    edi,esi
6400be1e:	jne    0x6400be22
6400be20:	mov    edi,eax
6400be22:	push   0x40
6400be24:	add    eax,0x40
6400be27:	push   0x0
6400be29:	push   edi
6400be2a:	add    esi,0xa8
6400be30:	mov    DWORD PTR [esp+0x30],eax
6400be34:	call   0x64015160
6400be39:	mov    eax,DWORD PTR [esp+0x44]
6400be3d:	mov    edx,DWORD PTR [esp+0x38]
6400be41:	mov    WORD PTR [edi+0xa],0xffff
6400be47:	mov    cl,BYTE PTR [ebx]
6400be49:	mov    BYTE PTR [edi+0x30],cl
6400be4c:	mov    ecx,DWORD PTR [esp+0x3c]
6400be50:	and    ecx,eax
6400be52:	and    edx,ebp
6400be54:	add    esp,0xc
6400be57:	add    ebx,0x1
6400be5a:	add    ebp,0x1
6400be5d:	adc    eax,0x0
6400be60:	cmp    ebx,DWORD PTR [esp+0x3c]
6400be64:	mov    BYTE PTR [edi+0x8],0x1
6400be68:	mov    DWORD PTR [edi],edx
6400be6a:	mov    DWORD PTR [edi+0x4],ecx
6400be6d:	mov    DWORD PTR [esp+0x38],eax
6400be71:	jb     0x6400be10
6400be73:	mov    edx,DWORD PTR [esp+0x28]
6400be77:	jmp    0x6400be83
6400be79:	cmp    edx,0x4
6400be7c:	jne    0x6400be83
6400be7e:	sub    DWORD PTR [esp+0x10],0x1
6400be83:	cmp    edx,0x1
6400be86:	mov    eax,DWORD PTR [esp+0xb4]
6400be8d:	mov    ecx,DWORD PTR [esp+0x10]
6400be91:	mov    DWORD PTR [eax],ecx
6400be93:	mov    ecx,DWORD PTR [esp+0x1c]
6400be97:	mov    eax,DWORD PTR [esp+0xa4]
6400be9e:	mov    DWORD PTR [eax+0x8],ecx
6400bea1:	mov    ecx,DWORD PTR [esp+0x20]
6400bea5:	mov    DWORD PTR [eax+0xc],ecx
6400bea8:	jne    0x6400bf47
6400beae:	mov    eax,DWORD PTR [eax+0x1c]
6400beb1:	test   eax,0x3f8
6400beb6:	je     0x6400bf47
6400bebc:	test   al,0x8
6400bebe:	je     0x6400becf
6400bec0:	mov    dl,BYTE PTR [edi+0x3a]
6400bec3:	and    dl,0x7
6400bec6:	cmp    dl,0x1
6400bec9:	je     0x6400bac7
6400becf:	test   al,0x10
6400bed1:	je     0x6400bee2
6400bed3:	mov    cl,BYTE PTR [edi+0x3a]
6400bed6:	and    cl,0x7
6400bed9:	cmp    cl,0x2
6400bedc:	je     0x6400bac7
6400bee2:	test   al,0x20
6400bee4:	je     0x6400bef5
6400bee6:	mov    dl,BYTE PTR [edi+0x3a]
6400bee9:	and    dl,0x7
6400beec:	cmp    dl,0x3
6400beef:	je     0x6400bac7
6400bef5:	test   al,0x40
6400bef7:	je     0x6400bf08
6400bef9:	mov    cl,BYTE PTR [edi+0x3a]
6400befc:	and    cl,0x7
6400beff:	cmp    cl,0x4
6400bf02:	je     0x6400bac7
6400bf08:	test   al,al
6400bf0a:	jns    0x6400bf1b
6400bf0c:	mov    dl,BYTE PTR [edi+0x3a]
6400bf0f:	and    dl,0x7
6400bf12:	cmp    dl,0x5
6400bf15:	je     0x6400bac7
6400bf1b:	test   eax,0x100
6400bf20:	je     0x6400bf31
6400bf22:	mov    cl,BYTE PTR [edi+0x3a]
6400bf25:	and    cl,0x7
6400bf28:	cmp    cl,0x6
6400bf2b:	je     0x6400bac7
6400bf31:	test   eax,0x200
6400bf36:	je     0x6400bf47
6400bf38:	mov    dl,BYTE PTR [edi+0x3a]
6400bf3b:	and    dl,0x7
6400bf3e:	cmp    dl,0x7
6400bf41:	je     0x6400bac7
6400bf47:	mov    esi,DWORD PTR [esp+0x10]
6400bf4b:	mov    ebx,DWORD PTR [esp+0x18]
6400bf4f:	mov    edi,DWORD PTR [esp+0xa4]
6400bf56:	cmp    DWORD PTR [esp+0x14],0x0
6400bf5b:	jg     0x6400bae0
6400bf61:	pop    edi
6400bf62:	pop    esi
6400bf63:	pop    ebp
6400bf64:	mov    eax,0x1
6400bf69:	pop    ebx
6400bf6a:	add    esp,0x90
6400bf70:	ret    
6400bf71:	pop    edi
6400bf72:	pop    esi
6400bf73:	pop    ebp
6400bf74:	mov    eax,0x2
6400bf79:	pop    ebx
6400bf7a:	add    esp,0x90
6400bf80:	ret    
6400bf81:	int3   
6400bf82:	int3   
6400bf83:	int3   
6400bf84:	int3   
6400bf85:	int3   
6400bf86:	int3   
6400bf87:	int3   
6400bf88:	int3   
6400bf89:	int3   
6400bf8a:	int3   
6400bf8b:	int3   
6400bf8c:	int3   
6400bf8d:	int3   
6400bf8e:	int3   
6400bf8f:	int3   
6400bf90:	lea    ecx,[eax-0x4]
6400bf93:	cmp    ecx,0x3
6400bf96:	ja     0x6400bf9c
6400bf98:	add    eax,0x3c
6400bf9b:	ret    
6400bf9c:	add    eax,0x30
6400bf9f:	ret    
6400bfa0:	mov    cl,BYTE PTR [esp+0x4]
6400bfa4:	mov    BYTE PTR [eax],cl
6400bfa6:	mov    WORD PTR [eax+0x2],dx
6400bfaa:	ret    0x4
6400bfad:	int3   
6400bfae:	int3   
6400bfaf:	int3   
6400bfb0:	mov    cl,BYTE PTR [esp+0x4]
6400bfb4:	mov    dl,BYTE PTR [esp+0xc]
6400bfb8:	mov    BYTE PTR [eax],cl
6400bfba:	mov    cx,WORD PTR [esp+0x8]
6400bfbf:	mov    BYTE PTR [eax+0x1],dl
6400bfc2:	mov    WORD PTR [eax+0x2],cx
6400bfc6:	ret    0xc
6400bfc9:	int3   
6400bfca:	int3   
6400bfcb:	int3   
6400bfcc:	int3   
6400bfcd:	int3   
6400bfce:	int3   
6400bfcf:	int3   
6400bfd0:	sub    DWORD PTR [eax+0x14],esi
6400bfd3:	jns    0x6400bfd8
6400bfd5:	xor    eax,eax
6400bfd7:	ret    
6400bfd8:	lea    edx,[esi-0x1]
6400bfdb:	cmp    edx,0x7
6400bfde:	ja     0x6400c028
6400bfe0:	jmp    DWORD PTR [edx*4+0x6400c034]
6400bfe7:	mov    edx,DWORD PTR [eax+0x10]
6400bfea:	mov    dl,BYTE PTR [edx]
6400bfec:	mov    BYTE PTR [ecx],dl
6400bfee:	add    DWORD PTR [eax+0x10],esi
6400bff1:	mov    eax,0x1
6400bff6:	ret    
6400bff7:	mov    edx,DWORD PTR [eax+0x10]
6400bffa:	mov    dx,WORD PTR [edx]
6400bffd:	mov    WORD PTR [ecx],dx
6400c000:	add    DWORD PTR [eax+0x10],esi
6400c003:	mov    eax,0x1
6400c008:	ret    
6400c009:	mov    edx,DWORD PTR [eax+0x10]
6400c00c:	mov    edx,DWORD PTR [edx]
6400c00e:	mov    DWORD PTR [ecx],edx
6400c010:	add    DWORD PTR [eax+0x10],esi
6400c013:	mov    eax,0x1
6400c018:	ret    
6400c019:	mov    edx,DWORD PTR [eax+0x10]
6400c01c:	push   edi
6400c01d:	mov    edi,DWORD PTR [edx]
6400c01f:	mov    DWORD PTR [ecx],edi
6400c021:	mov    edx,DWORD PTR [edx+0x4]
6400c024:	mov    DWORD PTR [ecx+0x4],edx
6400c027:	pop    edi
6400c028:	add    DWORD PTR [eax+0x10],esi
6400c02b:	mov    eax,0x1
6400c030:	ret    
6400c031:	lea    ecx,[ecx+0x0]
6400c034:	out    0xbf,eax
6400c036:	add    BYTE PTR [edi+esi*8-0x41],ah
6400c03a:	add    BYTE PTR [eax+ebp*1-0x40],ah
6400c03e:	add    BYTE PTR [ecx+ecx*1-0x40],ah
6400c042:	add    BYTE PTR [eax+ebp*1-0x40],ah
6400c046:	add    BYTE PTR [eax+ebp*1-0x40],ah
6400c04a:	add    BYTE PTR [eax+ebp*1-0x40],ah
6400c04e:	add    BYTE PTR [ecx+ebx*1-0x40],ah
6400c052:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400c056:	int3   
6400c057:	int3   
6400c058:	int3   
6400c059:	int3   
6400c05a:	int3   
6400c05b:	int3   
6400c05c:	int3   
6400c05d:	int3   
6400c05e:	int3   
6400c05f:	int3   
6400c060:	sub    DWORD PTR [ecx+0x14],edi
6400c063:	jns    0x6400c068
6400c065:	xor    eax,eax
6400c067:	ret    
6400c068:	lea    eax,[edi-0x1]
6400c06b:	cmp    eax,0x7
6400c06e:	ja     0x6400c0c2
6400c070:	jmp    DWORD PTR [eax*4+0x6400c0cc]
6400c077:	mov    eax,DWORD PTR [ecx+0x10]
6400c07a:	movsx  eax,BYTE PTR [eax]
6400c07d:	cdq    
6400c07e:	mov    DWORD PTR [esi],eax
6400c080:	mov    DWORD PTR [esi+0x4],edx
6400c083:	add    DWORD PTR [ecx+0x10],edi
6400c086:	mov    eax,0x1
6400c08b:	ret    
6400c08c:	mov    edx,DWORD PTR [ecx+0x10]
6400c08f:	movsx  eax,WORD PTR [edx]
6400c092:	cdq    
6400c093:	mov    DWORD PTR [esi],eax
6400c095:	mov    DWORD PTR [esi+0x4],edx
6400c098:	add    DWORD PTR [ecx+0x10],edi
6400c09b:	mov    eax,0x1
6400c0a0:	ret    
6400c0a1:	mov    eax,DWORD PTR [ecx+0x10]
6400c0a4:	mov    eax,DWORD PTR [eax]
6400c0a6:	cdq    
6400c0a7:	mov    DWORD PTR [esi],eax
6400c0a9:	mov    DWORD PTR [esi+0x4],edx
6400c0ac:	add    DWORD PTR [ecx+0x10],edi
6400c0af:	mov    eax,0x1
6400c0b4:	ret    
6400c0b5:	mov    eax,DWORD PTR [ecx+0x10]
6400c0b8:	mov    edx,DWORD PTR [eax]
6400c0ba:	mov    DWORD PTR [esi],edx
6400c0bc:	mov    eax,DWORD PTR [eax+0x4]
6400c0bf:	mov    DWORD PTR [esi+0x4],eax
6400c0c2:	add    DWORD PTR [ecx+0x10],edi
6400c0c5:	mov    eax,0x1
6400c0ca:	ret    
6400c0cb:	nop
6400c0cc:	ja     0x6400c08e
6400c0ce:	add    BYTE PTR [esp+ecx*4-0x40],ah
6400c0d2:	add    BYTE PTR [edx+eax*8-0x40],ah
6400c0d6:	add    BYTE PTR [ecx+eiz*4-0x40],ah
6400c0da:	add    BYTE PTR [edx+eax*8-0x40],ah
6400c0de:	add    BYTE PTR [edx+eax*8-0x40],ah
6400c0e2:	add    BYTE PTR [edx+eax*8-0x40],ah
6400c0e6:	add    BYTE PTR [ebp+esi*4-0x40],ah
6400c0ea:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400c0ee:	int3   
6400c0ef:	int3   
6400c0f0:	mov    eax,DWORD PTR [edi+0x28]
6400c0f3:	push   ebx
6400c0f4:	push   ebp
6400c0f5:	push   esi
6400c0f6:	mov    esi,edx
6400c0f8:	mov    ebx,edx
6400c0fa:	shr    esi,0x6
6400c0fd:	shr    ebx,0x3
6400c100:	and    esi,0x3
6400c103:	and    ebx,0x7
6400c106:	and    edx,0x7
6400c109:	test   al,0x2
6400c10b:	je     0x6400c117
6400c10d:	or     DWORD PTR [edi+0x4],0x2000000
6400c114:	add    ebx,0x8
6400c117:	cmp    ebx,0x4
6400c11a:	jne    0x6400c12f
6400c11c:	mov    ecx,DWORD PTR [esp+0x10]
6400c120:	mov    ebp,DWORD PTR [esp+0x14]
6400c124:	mov    BYTE PTR [ecx+ebp*4+0x12],0x6
6400c129:	lea    ebp,[ecx+ebp*4+0x13]
6400c12d:	jmp    0x6400c143
6400c12f:	mov    ebp,DWORD PTR [esp+0x10]
6400c133:	mov    ecx,DWORD PTR [esp+0x14]
6400c137:	mov    BYTE PTR [ebp+ecx*4+0x12],0x7
6400c13c:	mov    ecx,DWORD PTR [esp+0x10]
6400c140:	add    ebp,0xd
6400c143:	cmp    edx,0x5
6400c146:	je     0x6400c18a
6400c148:	test   al,0x1
6400c14a:	je     0x6400c153
6400c14c:	or     DWORD PTR [edi+0x4],0x2000000
6400c153:	and    al,0x1
6400c155:	add    al,al
6400c157:	add    al,al
6400c159:	add    al,al
6400c15b:	cmp    DWORD PTR [esp+0x18],0x2
6400c160:	sete   cl
6400c163:	sub    cl,0x1
6400c166:	and    ecx,0x10
6400c169:	add    al,cl
6400c16b:	mov    ecx,DWORD PTR [esp+0x10]
6400c16f:	add    al,dl
6400c171:	cmp    ebx,0x4
6400c174:	mov    BYTE PTR [ebp+0x0],al
6400c177:	je     0x6400c1ed
6400c179:	cmp    DWORD PTR [esp+0x18],0x2
6400c17e:	jne    0x6400c1c5
6400c180:	mov    eax,DWORD PTR [esp+0x14]
6400c184:	mov    BYTE PTR [ecx+eax*4+0x13],bl
6400c188:	jmp    0x6400c1d0
6400c18a:	cmp    DWORD PTR [esp+0x1c],0x0
6400c18f:	je     0x6400c1b3
6400c191:	test   al,0x1
6400c193:	je     0x6400c19c
6400c195:	or     DWORD PTR [edi+0x4],0x2000000
6400c19c:	and    al,0x1
6400c19e:	add    al,al
6400c1a0:	add    al,al
6400c1a2:	add    al,al
6400c1a4:	cmp    DWORD PTR [esp+0x18],0x2
6400c1a9:	jne    0x6400c1af
6400c1ab:	add    al,0x5
6400c1ad:	jmp    0x6400c171
6400c1af:	add    al,0x15
6400c1b1:	jmp    0x6400c171
6400c1b3:	cmp    ebx,0x4
6400c1b6:	jne    0x6400c179
6400c1b8:	mov    edx,DWORD PTR [esp+0x14]
6400c1bc:	pop    esi
6400c1bd:	pop    ebp
6400c1be:	mov    BYTE PTR [ecx+edx*4+0x12],0x5
6400c1c3:	pop    ebx
6400c1c4:	ret    
6400c1c5:	mov    edx,DWORD PTR [esp+0x14]
6400c1c9:	add    bl,0x10
6400c1cc:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c1d0:	test   esi,esi
6400c1d2:	je     0x6400c1e8
6400c1d4:	mov    ecx,esi
6400c1d6:	mov    eax,0x1
6400c1db:	shl    eax,cl
6400c1dd:	mov    ecx,DWORD PTR [esp+0x10]
6400c1e1:	pop    esi
6400c1e2:	pop    ebp
6400c1e3:	mov    BYTE PTR [ecx+0xe],al
6400c1e6:	pop    ebx
6400c1e7:	ret    
6400c1e8:	xor    eax,eax
6400c1ea:	mov    BYTE PTR [ecx+0xe],al
6400c1ed:	pop    esi
6400c1ee:	pop    ebp
6400c1ef:	pop    ebx
6400c1f0:	ret    
6400c1f1:	int3   
6400c1f2:	int3   
6400c1f3:	int3   
6400c1f4:	int3   
6400c1f5:	int3   
6400c1f6:	int3   
6400c1f7:	int3   
6400c1f8:	int3   
6400c1f9:	int3   
6400c1fa:	int3   
6400c1fb:	int3   
6400c1fc:	int3   
6400c1fd:	int3   
6400c1fe:	int3   
6400c1ff:	int3   
6400c200:	mov    edx,DWORD PTR [esp+0x20]
6400c204:	push   ebx
6400c205:	push   ebp
6400c206:	mov    ebp,DWORD PTR [esp+0x1c]
6400c20a:	push   esi
6400c20b:	xor    esi,esi
6400c20d:	cmp    edx,0x3
6400c210:	push   edi
6400c211:	mov    edi,DWORD PTR [esp+0x1c]
6400c215:	mov    ebx,ecx
6400c217:	mov    ecx,DWORD PTR [ebp+0x28]
6400c21a:	mov    DWORD PTR [esp+0x24],esi
6400c21e:	jne    0x6400c439
6400c224:	mov    edx,DWORD PTR [esp+0x18]
6400c228:	mov    eax,DWORD PTR [esp+0x20]
6400c22c:	mov    BYTE PTR [edx+eax*4+0x12],0x1
6400c231:	lea    eax,[edx+eax*4+0x14]
6400c235:	movzx  edx,WORD PTR [eax]
6400c238:	lea    esi,[edi-0xf]
6400c23b:	cmp    esi,0x4c
6400c23e:	mov    DWORD PTR [esp+0x30],eax
6400c242:	ja     0x6400c48b
6400c248:	movzx  eax,BYTE PTR [esi+0x6400c720]
6400c24f:	jmp    DWORD PTR [eax*4+0x6400c6ec]
6400c256:	mov    eax,DWORD PTR [esp+0x28]
6400c25a:	sub    eax,0x0
6400c25d:	je     0x6400c2d0
6400c25f:	sub    eax,0x1
6400c262:	je     0x6400c291
6400c264:	sub    eax,0x1
6400c267:	jne    0x6400c2b3
6400c269:	cmp    edi,0x1c
6400c26c:	mov    eax,0x2000000
6400c271:	jne    0x6400c276
6400c273:	or     DWORD PTR [ebp+0x4],eax
6400c276:	test   DWORD PTR [esp+0x34],eax
6400c27a:	je     0x6400c27f
6400c27c:	or     DWORD PTR [ebp+0x4],eax
6400c27f:	test   cl,0x1
6400c282:	je     0x6400c28a
6400c284:	or     DWORD PTR [ebp+0x4],eax
6400c287:	add    ebx,0x8
6400c28a:	mov    edx,0x40
6400c28f:	jmp    0x6400c2b3
6400c291:	or     DWORD PTR [ebp+0x4],0x2000
6400c298:	test   cl,0x1
6400c29b:	mov    eax,DWORD PTR [ebp+0x4]
6400c29e:	je     0x6400c2ab
6400c2a0:	or     eax,0x2000000
6400c2a5:	mov    DWORD PTR [ebp+0x4],eax
6400c2a8:	add    ebx,0x8
6400c2ab:	mov    edx,0x20
6400c2b0:	add    ebx,0x10
6400c2b3:	mov    eax,DWORD PTR [esp+0x30]
6400c2b7:	mov    ecx,DWORD PTR [esp+0x18]
6400c2bb:	pop    edi
6400c2bc:	mov    WORD PTR [eax],dx
6400c2bf:	mov    edx,DWORD PTR [esp+0x1c]
6400c2c3:	pop    esi
6400c2c4:	pop    ebp
6400c2c5:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c2c9:	mov    eax,0x1
6400c2ce:	pop    ebx
6400c2cf:	ret    
6400c2d0:	or     DWORD PTR [ebp+0x4],0x2000
6400c2d7:	test   cl,0x1
6400c2da:	mov    eax,DWORD PTR [ebp+0x4]
6400c2dd:	je     0x6400c2ea
6400c2df:	or     eax,0x2000000
6400c2e4:	mov    DWORD PTR [ebp+0x4],eax
6400c2e7:	add    ebx,0x8
6400c2ea:	mov    edx,0x10
6400c2ef:	add    ebx,0x20
6400c2f2:	jmp    0x6400c2b3
6400c2f4:	test   cl,0x1
6400c2f7:	mov    eax,0x2000000
6400c2fc:	je     0x6400c304
6400c2fe:	or     DWORD PTR [ebp+0x4],eax
6400c301:	add    ebx,0x8
6400c304:	mov    edx,DWORD PTR [esp+0x14]
6400c308:	cmp    DWORD PTR [edx+0x18],0x2
6400c30c:	jne    0x6400c324
6400c30e:	mov    edx,DWORD PTR [esp+0x34]
6400c312:	and    edx,0x3000000
6400c318:	cmp    edx,0x1000000
6400c31e:	je     0x6400c42f
6400c324:	test   cl,0x8
6400c327:	je     0x6400c2ab
6400c329:	or     DWORD PTR [ebp+0x4],eax
6400c32c:	mov    edx,0x40
6400c331:	jmp    0x6400c2b3
6400c333:	test   cl,0x1
6400c336:	je     0x6400c342
6400c338:	or     DWORD PTR [ebp+0x4],0x2000000
6400c33f:	add    ebx,0x8
6400c342:	test   DWORD PTR [ebp+0x0],0x2000
6400c349:	je     0x6400c2ab
6400c34f:	or     DWORD PTR [ebp+0x4],0x2000
6400c356:	mov    edx,0x10
6400c35b:	add    ebx,0x20
6400c35e:	jmp    0x6400c2b3
6400c363:	test   cl,0x1
6400c366:	je     0x6400c372
6400c368:	or     DWORD PTR [ebp+0x4],0x2000000
6400c36f:	add    ebx,0x8
6400c372:	add    ebx,0x20
6400c375:	jmp    0x6400c2b3
6400c37a:	cmp    DWORD PTR [ebp+0x18],0x1
6400c37e:	jne    0x6400c399
6400c380:	or     DWORD PTR [ebp+0x4],0x2000000
6400c387:	and    ecx,0x1
6400c38a:	lea    eax,[ebx+ecx*8]
6400c38d:	call   0x6400bf90
6400c392:	mov    ebx,eax
6400c394:	jmp    0x6400c2b3
6400c399:	add    ebx,0x30
6400c39c:	jmp    0x6400c2b3
6400c3a1:	mov    edx,0x40
6400c3a6:	add    ebx,0x53
6400c3a9:	jmp    0x6400c2b3
6400c3ae:	test   cl,0x1
6400c3b1:	je     0x6400c3bd
6400c3b3:	or     DWORD PTR [ebp+0x4],0x2000000
6400c3ba:	add    ebx,0x8
6400c3bd:	mov    edx,0x80
6400c3c2:	add    ebx,0x5b
6400c3c5:	jmp    0x6400c2b3
6400c3ca:	test   cl,0x1
6400c3cd:	je     0x6400c2ab
6400c3d3:	or     DWORD PTR [ebp+0x4],0x2000000
6400c3da:	jmp    0x6400c2a8
6400c3df:	test   cl,0x1
6400c3e2:	je     0x6400c3e7
6400c3e4:	add    ebx,0x8
6400c3e7:	add    ebx,0x6b
6400c3ea:	jmp    0x6400c2b3
6400c3ef:	test   cl,0x1
6400c3f2:	je     0x6400c3f7
6400c3f4:	add    ebx,0x8
6400c3f7:	test   cl,0x10
6400c3fa:	je     0x6400c3bd
6400c3fc:	mov    edx,0x100
6400c401:	add    ebx,0x6b
6400c404:	jmp    0x6400c2b3
6400c409:	test   cl,0x1
6400c40c:	je     0x6400c3bd
6400c40e:	add    ebx,0x8
6400c411:	mov    edx,0x80
6400c416:	add    ebx,0x5b
6400c419:	jmp    0x6400c2b3
6400c41e:	test   cl,0x1
6400c421:	je     0x6400c426
6400c423:	add    ebx,0x8
6400c426:	test   cl,0x8
6400c429:	je     0x6400c2ab
6400c42f:	mov    edx,0x40
6400c434:	jmp    0x6400c2b3
6400c439:	or     DWORD PTR [ebp+0x4],0x4000
6400c440:	test   eax,eax
6400c442:	je     0x6400c450
6400c444:	test   BYTE PTR [ebp+0x0],0x10
6400c448:	je     0x6400c450
6400c44a:	mov    DWORD PTR [eax],0x1
6400c450:	cmp    DWORD PTR [esp+0x2c],esi
6400c454:	jne    0x6400c565
6400c45a:	test   edx,edx
6400c45c:	jne    0x6400c492
6400c45e:	cmp    ebx,0x6
6400c461:	jne    0x6400c492
6400c463:	mov    eax,DWORD PTR [esp+0x18]
6400c467:	mov    ecx,DWORD PTR [esp+0x20]
6400c46b:	mov    BYTE PTR [eax+ecx*4+0x12],0x5
6400c470:	mov    ecx,DWORD PTR [esp+0x14]
6400c474:	lea    esi,[eax+0x28]
6400c477:	lea    edi,[edx+0x2]
6400c47a:	mov    BYTE PTR [eax+0xf],0x10
6400c47e:	call   0x6400c060
6400c483:	test   eax,eax
6400c485:	jne    0x6400c52e
6400c48b:	pop    edi
6400c48c:	pop    esi
6400c48d:	pop    ebp
6400c48e:	xor    eax,eax
6400c490:	pop    ebx
6400c491:	ret    
6400c492:	cmp    ebx,0x4
6400c495:	jae    0x6400c4b9
6400c497:	mov    esi,DWORD PTR [esp+0x18]
6400c49b:	mov    edi,DWORD PTR [esp+0x20]
6400c49f:	mov    BYTE PTR [esi+edi*4+0x12],0x7
6400c4a4:	mov    al,BYTE PTR [ebx+0x6402e150]
6400c4aa:	mov    BYTE PTR [esi+0xd],al
6400c4ad:	mov    cl,BYTE PTR [ebx+0x6402e158]
6400c4b3:	mov    BYTE PTR [esi+edi*4+0x13],cl
6400c4b7:	jmp    0x6400c4d0
6400c4b9:	mov    edi,DWORD PTR [esp+0x18]
6400c4bd:	mov    esi,DWORD PTR [esp+0x20]
6400c4c1:	mov    BYTE PTR [edi+esi*4+0x12],0x6
6400c4c6:	mov    al,BYTE PTR [ebx+0x6402e150]
6400c4cc:	mov    BYTE PTR [edi+esi*4+0x13],al
6400c4d0:	cmp    edx,0x1
6400c4d3:	jne    0x6400c4f4
6400c4d5:	mov    eax,DWORD PTR [esp+0x18]
6400c4d9:	mov    ecx,DWORD PTR [esp+0x14]
6400c4dd:	lea    esi,[eax+0x28]
6400c4e0:	mov    edi,edx
6400c4e2:	mov    BYTE PTR [eax+0xf],0x8
6400c4e6:	call   0x6400c060
6400c4eb:	test   eax,eax
6400c4ed:	jne    0x6400c517
6400c4ef:	pop    edi
6400c4f0:	pop    esi
6400c4f1:	pop    ebp
6400c4f2:	pop    ebx
6400c4f3:	ret    
6400c4f4:	cmp    edx,0x2
6400c4f7:	jne    0x6400c51b
6400c4f9:	mov    eax,DWORD PTR [esp+0x18]
6400c4fd:	mov    ecx,DWORD PTR [esp+0x14]
6400c501:	lea    esi,[eax+0x28]
6400c504:	mov    edi,edx
6400c506:	mov    BYTE PTR [eax+0xf],0x10
6400c50a:	call   0x6400c060
6400c50f:	test   eax,eax
6400c511:	je     0x6400c48b
6400c517:	mov    edx,DWORD PTR [esp+0x30]
6400c51b:	cmp    ebx,0x2
6400c51e:	je     0x6400c553
6400c520:	cmp    ebx,0x3
6400c523:	je     0x6400c553
6400c525:	cmp    ebx,0x6
6400c528:	jne    0x6400c52e
6400c52a:	test   edx,edx
6400c52c:	jne    0x6400c553
6400c52e:	mov    ecx,DWORD PTR [esp+0x18]
6400c532:	mov    edx,DWORD PTR [esp+0x14]
6400c536:	mov    eax,DWORD PTR [edx+0x18]
6400c539:	push   ecx
6400c53a:	push   eax
6400c53b:	push   ebp
6400c53c:	push   0x200
6400c541:	call   0x6400dd80
6400c546:	add    esp,0x10
6400c549:	pop    edi
6400c54a:	pop    esi
6400c54b:	pop    ebp
6400c54c:	mov    eax,0x1
6400c551:	pop    ebx
6400c552:	ret    
6400c553:	mov    ecx,DWORD PTR [esp+0x18]
6400c557:	mov    edx,DWORD PTR [esp+0x14]
6400c55b:	mov    eax,DWORD PTR [edx+0x18]
6400c55e:	push   ecx
6400c55f:	push   eax
6400c560:	jmp    0x6400c6d2
6400c565:	test   edx,edx
6400c567:	jne    0x6400c5ba
6400c569:	cmp    ebx,0x5
6400c56c:	jne    0x6400c5ba
6400c56e:	mov    ebx,DWORD PTR [esp+0x18]
6400c572:	mov    ecx,DWORD PTR [esp+0x14]
6400c576:	lea    esi,[ebx+0x28]
6400c579:	lea    edi,[edx+0x4]
6400c57c:	mov    BYTE PTR [ebx+0xf],0x20
6400c580:	call   0x6400c060
6400c585:	test   eax,eax
6400c587:	je     0x6400c48b
6400c58d:	cmp    DWORD PTR [ecx+0x18],0x2
6400c591:	jne    0x6400c5ac
6400c593:	mov    eax,DWORD PTR [esp+0x20]
6400c597:	mov    BYTE PTR [ebx+eax*4+0x12],0x6
6400c59c:	mov    BYTE PTR [ebx+eax*4+0x13],0x4a
6400c5a1:	or     WORD PTR [ebx+0xa],0x80
6400c5a7:	jmp    0x6400c683
6400c5ac:	mov    ecx,DWORD PTR [esp+0x20]
6400c5b0:	mov    BYTE PTR [ebx+ecx*4+0x12],0x5
6400c5b5:	jmp    0x6400c683
6400c5ba:	cmp    ebx,0x4
6400c5bd:	jne    0x6400c601
6400c5bf:	mov    eax,DWORD PTR [esp+0x14]
6400c5c3:	lea    esi,[ebx-0x3]
6400c5c6:	lea    ecx,[esp+0x24]
6400c5ca:	call   0x6400bfd0
6400c5cf:	test   eax,eax
6400c5d1:	je     0x6400c48b
6400c5d7:	mov    edx,DWORD PTR [esp+0x30]
6400c5db:	mov    eax,DWORD PTR [esp+0x2c]
6400c5df:	mov    ecx,DWORD PTR [esp+0x20]
6400c5e3:	mov    esi,DWORD PTR [esp+0x24]
6400c5e7:	push   edx
6400c5e8:	mov    edx,DWORD PTR [esp+0x1c]
6400c5ec:	push   eax
6400c5ed:	push   ecx
6400c5ee:	push   edx
6400c5ef:	mov    edx,esi
6400c5f1:	mov    edi,ebp
6400c5f3:	call   0x6400c0f0
6400c5f8:	mov    edx,DWORD PTR [esp+0x40]
6400c5fc:	add    esp,0x10
6400c5ff:	jmp    0x6400c62b
6400c601:	test   cl,0x1
6400c604:	mov    edi,DWORD PTR [esp+0x18]
6400c608:	mov    eax,DWORD PTR [esp+0x20]
6400c60c:	mov    BYTE PTR [edi+eax*4+0x12],0x6
6400c611:	je     0x6400c61d
6400c613:	or     DWORD PTR [ebp+0x4],0x2000000
6400c61a:	add    ebx,0x8
6400c61d:	cmp    DWORD PTR [esp+0x2c],0x2
6400c622:	je     0x6400c627
6400c624:	add    bl,0x10
6400c627:	mov    BYTE PTR [edi+eax*4+0x13],bl
6400c62b:	cmp    edx,0x1
6400c62e:	jne    0x6400c64f
6400c630:	mov    eax,DWORD PTR [esp+0x18]
6400c634:	mov    ecx,DWORD PTR [esp+0x14]
6400c638:	lea    esi,[eax+0x28]
6400c63b:	mov    edi,edx
6400c63d:	mov    BYTE PTR [eax+0xf],0x8
6400c641:	call   0x6400c060
6400c646:	test   eax,eax
6400c648:	jne    0x6400c67f
6400c64a:	pop    edi
6400c64b:	pop    esi
6400c64c:	pop    ebp
6400c64d:	pop    ebx
6400c64e:	ret    
6400c64f:	cmp    edx,0x2
6400c652:	je     0x6400c65d
6400c654:	mov    eax,esi
6400c656:	and    eax,0x7
6400c659:	cmp    al,0x5
6400c65b:	jne    0x6400c67f
6400c65d:	mov    ebx,DWORD PTR [esp+0x18]
6400c661:	mov    ecx,DWORD PTR [esp+0x14]
6400c665:	lea    esi,[ebx+0x28]
6400c668:	mov    edi,0x4
6400c66d:	mov    BYTE PTR [ebx+0xf],0x20
6400c671:	call   0x6400c060
6400c676:	test   eax,eax
6400c678:	jne    0x6400c683
6400c67a:	pop    edi
6400c67b:	pop    esi
6400c67c:	pop    ebp
6400c67d:	pop    ebx
6400c67e:	ret    
6400c67f:	mov    ebx,DWORD PTR [esp+0x18]
6400c683:	mov    al,BYTE PTR [ebx+0xd]
6400c686:	cmp    al,0xff
6400c688:	mov    ecx,DWORD PTR [esp+0x20]
6400c68c:	movzx  ecx,BYTE PTR [ebx+ecx*4+0x13]
6400c691:	je     0x6400c698
6400c693:	movzx  ecx,al
6400c696:	jmp    0x6400c69e
6400c698:	cmp    BYTE PTR [ebx+0xe],0x2
6400c69c:	jae    0x6400c6a8
6400c69e:	cmp    ecx,0x15
6400c6a1:	je     0x6400c6c9
6400c6a3:	cmp    ecx,0x14
6400c6a6:	je     0x6400c6c9
6400c6a8:	mov    edx,DWORD PTR [esp+0x14]
6400c6ac:	mov    eax,DWORD PTR [edx+0x18]
6400c6af:	push   ebx
6400c6b0:	push   eax
6400c6b1:	push   ebp
6400c6b2:	push   0x200
6400c6b7:	call   0x6400dd80
6400c6bc:	add    esp,0x10
6400c6bf:	pop    edi
6400c6c0:	pop    esi
6400c6c1:	pop    ebp
6400c6c2:	mov    eax,0x1
6400c6c7:	pop    ebx
6400c6c8:	ret    
6400c6c9:	mov    ecx,DWORD PTR [esp+0x14]
6400c6cd:	mov    edx,DWORD PTR [ecx+0x18]
6400c6d0:	push   ebx
6400c6d1:	push   edx
6400c6d2:	push   ebp
6400c6d3:	push   0x100
6400c6d8:	call   0x6400dd80
6400c6dd:	add    esp,0x10
6400c6e0:	pop    edi
6400c6e1:	pop    esi
6400c6e2:	pop    ebp
6400c6e3:	mov    eax,0x1
6400c6e8:	pop    ebx
6400c6e9:	ret    
6400c6ea:	mov    edi,edi
6400c6ec:	jp     0x6400c6b1
6400c6ee:	add    BYTE PTR [ebx+eiz*2-0x3d],ah
6400c6f2:	add    BYTE PTR [esi+edx*2-0x3e],ah
6400c6f6:	add    BYTE PTR [esp+esi*8-0x3e],ah
6400c6fa:	add    BYTE PTR [ebx+esi*1-0x3d],ah
6400c6fe:	add    BYTE PTR [edx+ecx*8-0x3d],ah
6400c702:	add    BYTE PTR [ecx+eiz*4-0x3d],ah
6400c706:	add    BYTE PTR [esi+ebp*4-0x3d],ah
6400c70a:	add    BYTE PTR [esi+ebx*1-0x3c],ah
6400c70e:	add    BYTE PTR [ecx+ecx*1-0x3c],ah
6400c712:	add    BYTE PTR [edi+ebx*8-0x3d],ah
6400c716:	add    BYTE PTR [edi+ebp*8-0x3d],ah
6400c71a:	add    BYTE PTR [ebx+ecx*4-0x3c],ah
6400c71e:	add    BYTE PTR [eax+eax*1+0x1],ah
6400c722:	add    al,BYTE PTR [ebx]
6400c724:	add    al,0xc
6400c726:	or     al,0xc
6400c728:	or     al,0x5
6400c72a:	add    eax,0xc020303
6400c72f:	or     al,0xc
6400c731:	or     al,0xc
6400c733:	or     al,0xc
6400c735:	or     al,0xc
6400c737:	or     al,0xc
6400c739:	or     al,0xc
6400c73b:	or     al,0xc
6400c73d:	or     al,0xc
6400c73f:	or     al,0xc
6400c741:	or     al,0xc
6400c743:	or     al,0xc
6400c745:	or     al,0xc
6400c747:	or     al,0xc
6400c749:	or     al,0xc
6400c74b:	or     al,0xc
6400c74d:	or     al,0xc
6400c74f:	or     al,0xc
6400c751:	or     al,0xc
6400c753:	push   es
6400c754:	push   es
6400c755:	or     al,0xc
6400c757:	pop    es
6400c758:	pop    es
6400c759:	pop    es
6400c75a:	pop    es
6400c75b:	or     al,0x5
6400c75d:	or     BYTE PTR [eax],cl
6400c75f:	or     al,0x8
6400c761:	or     DWORD PTR [esp+ecx*1],ecx
6400c764:	or     al,0xc
6400c766:	or     al,0xa
6400c768:	or     al,0xc
6400c76a:	or     ecx,DWORD PTR [ebx]
6400c76c:	or     esp,ecx
6400c76e:	int3   
6400c76f:	int3   
6400c770:	sub    esp,0xc
6400c773:	mov    ecx,DWORD PTR [esp+0x18]
6400c777:	mov    edx,DWORD PTR [ecx+0x8]
6400c77a:	mov    ecx,DWORD PTR [esp+0x14]
6400c77e:	push   ebx
6400c77f:	push   ebp
6400c780:	mov    ebp,DWORD PTR [esp+0x30]
6400c784:	mov    eax,DWORD PTR [ebp+0x24]
6400c787:	push   esi
6400c788:	mov    esi,DWORD PTR [esp+0x30]
6400c78c:	mov    DWORD PTR [esp+0x34],edx
6400c790:	mov    edx,DWORD PTR [esp+0x2c]
6400c794:	lea    ebx,[ecx+edx*4+0x12]
6400c798:	push   edi
6400c799:	mov    edi,esi
6400c79b:	mov    edx,esi
6400c79d:	and    esi,0x7
6400c7a0:	mov    DWORD PTR [esp+0x34],esi
6400c7a4:	mov    esi,DWORD PTR [esp+0x2c]
6400c7a8:	shr    edi,0x6
6400c7ab:	shr    edx,0x3
6400c7ae:	mov    DWORD PTR [esp+0x18],eax
6400c7b2:	mov    eax,DWORD PTR [ebp+0x28]
6400c7b5:	and    edx,0x7
6400c7b8:	add    esi,0xffffffec
6400c7bb:	xor    ecx,ecx
6400c7bd:	and    edi,0x3
6400c7c0:	cmp    esi,0x48
6400c7c3:	mov    DWORD PTR [esp+0x14],eax
6400c7c7:	mov    DWORD PTR [esp+0x10],edx
6400c7cb:	ja     0x6400c92c
6400c7d1:	movzx  esi,BYTE PTR [esi+0x6400d640]
6400c7d8:	jmp    DWORD PTR [esi*4+0x6400d60c]
6400c7df:	mov    eax,DWORD PTR [esp+0x44]
6400c7e3:	test   eax,eax
6400c7e5:	je     0x6400c7f3
6400c7e7:	test   BYTE PTR [ebp+0x0],0x10
6400c7eb:	je     0x6400c7f3
6400c7ed:	mov    DWORD PTR [eax],0x1
6400c7f3:	cmp    DWORD PTR [esp+0x3c],0x2
6400c7f8:	jne    0x6400c819
6400c7fa:	or     DWORD PTR [ebp+0x4],0x2000000
6400c801:	mov    ecx,0x6
6400c806:	jmp    0x6400c8a5
6400c80b:	cmp    DWORD PTR [esp+0x3c],0x2
6400c810:	jne    0x6400c85b
6400c812:	or     DWORD PTR [ebp+0x4],0x2000000
6400c819:	mov    ecx,0x4
6400c81e:	jmp    0x6400c8a5
6400c823:	mov    eax,DWORD PTR [esp+0x3c]
6400c827:	sub    eax,0x0
6400c82a:	je     0x6400c862
6400c82c:	sub    eax,0x1
6400c82f:	je     0x6400c854
6400c831:	sub    eax,0x1
6400c834:	jne    0x6400c8a5
6400c836:	mov    eax,DWORD PTR [esp+0x38]
6400c83a:	and    eax,0x3000000
6400c83f:	cmp    eax,0x3000000
6400c844:	jne    0x6400c819
6400c846:	or     DWORD PTR [ebp+0x4],0x2000000
6400c84d:	mov    ecx,0x4
6400c852:	jmp    0x6400c8a5
6400c854:	or     DWORD PTR [ebp+0x4],0x2000
6400c85b:	mov    ecx,0x3
6400c860:	jmp    0x6400c8a5
6400c862:	or     DWORD PTR [ebp+0x4],0x2000
6400c869:	mov    ecx,0x2
6400c86e:	jmp    0x6400c8a5
6400c870:	mov    edx,DWORD PTR [esp+0x20]
6400c874:	xor    ecx,ecx
6400c876:	cmp    DWORD PTR [edx+0x18],0x2
6400c87a:	sete   cl
6400c87d:	add    ecx,0x3
6400c880:	jmp    0x6400c8a5
6400c882:	cmp    edi,0x3
6400c885:	jne    0x6400c8c2
6400c887:	lea    eax,[edi-0x2]
6400c88a:	pop    edi
6400c88b:	pop    esi
6400c88c:	pop    ebp
6400c88d:	pop    ebx
6400c88e:	add    esp,0xc
6400c891:	ret    
6400c892:	mov    ecx,0x5
6400c897:	jmp    0x6400c8a5
6400c899:	movzx  ecx,al
6400c89c:	and    ecx,0x10
6400c89f:	or     ecx,0x60
6400c8a2:	shr    ecx,0x4
6400c8a5:	cmp    edi,0x3
6400c8a8:	jne    0x6400c8c2
6400c8aa:	mov    eax,DWORD PTR [esp+0x44]
6400c8ae:	test   eax,eax
6400c8b0:	je     0x6400c8b8
6400c8b2:	mov    DWORD PTR [eax],0x0
6400c8b8:	xor    eax,eax
6400c8ba:	pop    edi
6400c8bb:	pop    esi
6400c8bc:	pop    ebp
6400c8bd:	pop    ebx
6400c8be:	add    esp,0xc
6400c8c1:	ret    
6400c8c2:	mov    ax,WORD PTR [ecx*2+0x6402e140]
6400c8ca:	mov    ecx,DWORD PTR [esp+0x38]
6400c8ce:	mov    edx,DWORD PTR [esp+0x40]
6400c8d2:	mov    esi,DWORD PTR [esp+0x24]
6400c8d6:	push   ecx
6400c8d7:	mov    ecx,DWORD PTR [esp+0x34]
6400c8db:	push   edi
6400c8dc:	push   edx
6400c8dd:	mov    edx,DWORD PTR [esp+0x38]
6400c8e1:	mov    WORD PTR [ebx+0x2],ax
6400c8e5:	mov    eax,DWORD PTR [esp+0x48]
6400c8e9:	push   eax
6400c8ea:	mov    eax,DWORD PTR [esp+0x30]
6400c8ee:	push   ebp
6400c8ef:	push   ecx
6400c8f0:	mov    ecx,DWORD PTR [esp+0x4c]
6400c8f4:	push   edx
6400c8f5:	push   esi
6400c8f6:	push   eax
6400c8f7:	mov    eax,DWORD PTR [esp+0x68]
6400c8fb:	call   0x6400c200
6400c900:	mov    cl,BYTE PTR [ebx]
6400c902:	add    esp,0x24
6400c905:	cmp    cl,0x1
6400c908:	je     0x6400c914
6400c90a:	cmp    cl,0x6
6400c90d:	je     0x6400c914
6400c90f:	cmp    cl,0x7
6400c912:	jne    0x6400c8ba
6400c914:	movzx  ecx,BYTE PTR [ebx+0x1]
6400c918:	mov    dx,WORD PTR [ecx*2+0x6402e028]
6400c920:	or     WORD PTR [esi+0x3c],dx
6400c924:	pop    edi
6400c925:	pop    esi
6400c926:	pop    ebp
6400c927:	pop    ebx
6400c928:	add    esp,0xc
6400c92b:	ret    
6400c92c:	mov    esi,DWORD PTR [esp+0x2c]
6400c930:	lea    ecx,[esi-0xf]
6400c933:	cmp    ecx,0x4c
6400c936:	ja     0x6400caa6
6400c93c:	movzx  ecx,BYTE PTR [ecx+0x6400d6cc]
6400c943:	mov    esi,0x2000
6400c948:	jmp    DWORD PTR [ecx*4+0x6400d68c]
6400c94f:	or     DWORD PTR [ebp+0x4],esi
6400c952:	mov    ecx,DWORD PTR [esp+0x3c]
6400c956:	cmp    ecx,0x1
6400c959:	mov    eax,DWORD PTR [ebp+0x4]
6400c95c:	jne    0x6400c970
6400c95e:	mov    eax,0x3
6400c963:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c96b:	jmp    0x6400c8ca
6400c970:	cmp    ecx,0x2
6400c973:	jne    0x6400c999
6400c975:	test   DWORD PTR [esp+0x38],0x1000000
6400c97d:	jne    0x6400c987
6400c97f:	or     eax,0x2000000
6400c984:	mov    DWORD PTR [ebp+0x4],eax
6400c987:	mov    eax,0x4
6400c98c:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c994:	jmp    0x6400c8ca
6400c999:	cmp    DWORD PTR [esp+0x2c],0x10
6400c99e:	je     0x6400c9a3
6400c9a0:	or     DWORD PTR [ebp+0x4],esi
6400c9a3:	mov    eax,0x2
6400c9a8:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c9b0:	jmp    0x6400c8ca
6400c9b5:	cmp    DWORD PTR [esp+0x3c],0x2
6400c9ba:	jne    0x6400c95e
6400c9bc:	mov    edx,DWORD PTR [esp+0x38]
6400c9c0:	and    edx,0x3000000
6400c9c6:	cmp    edx,0x3000000
6400c9cc:	mov    eax,0x4
6400c9d1:	jne    0x6400ca95
6400c9d7:	or     DWORD PTR [ebp+0x4],0x2000000
6400c9de:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400c9e6:	jmp    0x6400c8ca
6400c9eb:	test   DWORD PTR [ebp+0x0],esi
6400c9ee:	je     0x6400c95e
6400c9f4:	or     DWORD PTR [ebp+0x4],esi
6400c9f7:	mov    eax,0x2
6400c9fc:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca04:	jmp    0x6400c8ca
6400ca09:	and    al,0x8
6400ca0b:	neg    al
6400ca0d:	sbb    eax,eax
6400ca0f:	neg    eax
6400ca11:	add    eax,0x3
6400ca14:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca1c:	jmp    0x6400c8ca
6400ca21:	and    al,0x10
6400ca23:	neg    al
6400ca25:	sbb    eax,eax
6400ca27:	and    eax,0x3
6400ca2a:	add    eax,0x4
6400ca2d:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca35:	jmp    0x6400c8ca
6400ca3a:	movzx  eax,al
6400ca3d:	and    eax,0x10
6400ca40:	or     eax,0x60
6400ca43:	shr    eax,0x4
6400ca46:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca4e:	jmp    0x6400c8ca
6400ca53:	movzx  eax,al
6400ca56:	and    eax,0x10
6400ca59:	or     eax,0x20
6400ca5c:	shr    eax,0x3
6400ca5f:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca67:	jmp    0x6400c8ca
6400ca6c:	mov    eax,0x1
6400ca71:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca79:	jmp    0x6400c8ca
6400ca7e:	mov    eax,0x6
6400ca83:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca8b:	jmp    0x6400c8ca
6400ca90:	mov    eax,0x7
6400ca95:	mov    ax,WORD PTR [eax*2+0x6402e140]
6400ca9d:	jmp    0x6400c8ca
6400caa2:	mov    esi,DWORD PTR [esp+0x2c]
6400caa6:	lea    ecx,[esi-0x1]
6400caa9:	cmp    ecx,0x57
6400caac:	ja     0x6400c8b8
6400cab2:	movzx  ecx,BYTE PTR [ecx+0x6400d7ec]
6400cab9:	jmp    DWORD PTR [ecx*4+0x6400d71c]
6400cac0:	push   0x2
6400cac2:	mov    edx,0x8
6400cac7:	mov    eax,ebx
6400cac9:	call   0x6400bfa0
6400cace:	mov    ecx,DWORD PTR [esp+0x24]
6400cad2:	add    ecx,0x30
6400cad5:	mov    esi,0x1
6400cada:	mov    eax,DWORD PTR [esp+0x20]
6400cade:	call   0x6400bfd0
6400cae3:	test   eax,eax
6400cae5:	jne    0x6400cccd
6400caeb:	pop    edi
6400caec:	pop    esi
6400caed:	pop    ebp
6400caee:	pop    ebx
6400caef:	add    esp,0xc
6400caf2:	ret    
6400caf3:	mov    eax,DWORD PTR [esp+0x3c]
6400caf7:	test   eax,eax
6400caf9:	jne    0x6400cb1c
6400cafb:	or     DWORD PTR [ebp+0x4],0x2000
6400cb02:	push   0x2
6400cb04:	mov    edx,0x10
6400cb09:	mov    eax,ebx
6400cb0b:	call   0x6400bfa0
6400cb10:	mov    ecx,DWORD PTR [esp+0x24]
6400cb14:	add    ecx,0x30
6400cb17:	lea    esi,[edx-0xe]
6400cb1a:	jmp    0x6400cada
6400cb1c:	cmp    eax,0x2
6400cb1f:	jne    0x6400cb52
6400cb21:	mov    eax,DWORD PTR [esp+0x38]
6400cb25:	and    eax,0x3000000
6400cb2a:	cmp    eax,0x3000000
6400cb2f:	jne    0x6400cb52
6400cb31:	or     DWORD PTR [ebp+0x4],0x2000000
6400cb38:	push   0x2
6400cb3a:	mov    edx,0x40
6400cb3f:	mov    eax,ebx
6400cb41:	call   0x6400bfa0
6400cb46:	mov    ecx,DWORD PTR [esp+0x24]
6400cb4a:	add    ecx,0x30
6400cb4d:	lea    esi,[edx-0x38]
6400cb50:	jmp    0x6400cada
6400cb52:	or     DWORD PTR [ebp+0x4],0x2000
6400cb59:	mov    eax,DWORD PTR [esp+0x20]
6400cb5d:	mov    ecx,DWORD PTR [esp+0x24]
6400cb61:	mov    BYTE PTR [ebx],0x2
6400cb64:	cmp    DWORD PTR [eax+0x18],0x2
6400cb68:	jne    0x6400cb89
6400cb6a:	mov    edx,0x20
6400cb6f:	mov    WORD PTR [ebx+0x2],dx
6400cb73:	or     WORD PTR [ecx+0xa],dx
6400cb77:	lea    esi,[ecx+0x30]
6400cb7a:	lea    edi,[edx-0x1c]
6400cb7d:	mov    ecx,eax
6400cb7f:	call   0x6400c060
6400cb84:	jmp    0x6400cae3
6400cb89:	mov    WORD PTR [ebx+0x2],0x20
6400cb8f:	add    ecx,0x30
6400cb92:	mov    esi,0x4
6400cb97:	jmp    0x6400cade
6400cb9c:	mov    ecx,DWORD PTR [esp+0x20]
6400cba0:	mov    esi,0x2000
6400cba5:	test   DWORD PTR [esp+0x38],esi
6400cba9:	mov    BYTE PTR [ebx],0x2
6400cbac:	je     0x6400cbd5
6400cbae:	test   DWORD PTR [ebp+0x0],esi
6400cbb1:	je     0x6400cbd5
6400cbb3:	or     DWORD PTR [ebp+0x4],esi
6400cbb6:	mov    eax,DWORD PTR [ecx+0x18]
6400cbb9:	test   eax,eax
6400cbbb:	je     0x6400cbcd
6400cbbd:	add    eax,0xffffffff
6400cbc0:	cmp    eax,0x1
6400cbc3:	ja     0x6400cbdb
6400cbc5:	mov    WORD PTR [ebx+0x2],0x10
6400cbcb:	jmp    0x6400cbdb
6400cbcd:	mov    WORD PTR [ebx+0x2],0x20
6400cbd3:	jmp    0x6400cbdb
6400cbd5:	mov    WORD PTR [ebx+0x2],0x8
6400cbdb:	mov    eax,DWORD PTR [esp+0x24]
6400cbdf:	or     WORD PTR [eax+0xa],0x20
6400cbe4:	lea    esi,[eax+0x30]
6400cbe7:	mov    edi,0x1
6400cbec:	call   0x6400c060
6400cbf1:	jmp    0x6400cae3
6400cbf6:	push   0x3
6400cbf8:	jmp    0x6400cb04
6400cbfd:	push   0x3
6400cbff:	jmp    0x6400cac2
6400cc04:	push   0x4
6400cc06:	mov    edx,0x8
6400cc0b:	mov    eax,ebx
6400cc0d:	call   0x6400bfa0
6400cc12:	mov    ecx,DWORD PTR [esp+0x24]
6400cc16:	add    ecx,0x34
6400cc19:	jmp    0x6400cad5
6400cc1e:	push   0x1
6400cc20:	mov    edx,0x8
6400cc25:	mov    eax,ebx
6400cc27:	call   0x6400bfa0
6400cc2c:	cmp    DWORD PTR [ebp+0x18],0x0
6400cc30:	je     0x6400cc51
6400cc32:	mov    eax,DWORD PTR [esp+0x14]
6400cc36:	mov    edx,DWORD PTR [esp+0x10]
6400cc3a:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc41:	and    eax,0x4
6400cc44:	lea    eax,[edx+eax*2]
6400cc47:	call   0x6400bf90
6400cc4c:	mov    BYTE PTR [ebx+0x1],al
6400cc4f:	jmp    0x6400cccd
6400cc51:	mov    al,BYTE PTR [esp+0x10]
6400cc55:	add    al,0x30
6400cc57:	mov    BYTE PTR [ebx+0x1],al
6400cc5a:	jmp    0x6400cccd
6400cc5c:	mov    ecx,DWORD PTR [esp+0x3c]
6400cc60:	sub    ecx,0x0
6400cc63:	je     0x6400cc8e
6400cc65:	sub    ecx,0x1
6400cc68:	je     0x6400cc81
6400cc6a:	sub    ecx,0x1
6400cc6d:	jne    0x6400cccd
6400cc6f:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc76:	and    eax,0x4
6400cc79:	lea    eax,[edx+eax*2]
6400cc7c:	push   eax
6400cc7d:	push   0x40
6400cc7f:	jmp    0x6400ccc4
6400cc81:	test   al,0x4
6400cc83:	jne    0x6400ccb4
6400cc85:	or     DWORD PTR [ebp+0x4],0x2000
6400cc8c:	jmp    0x6400ccbe
6400cc8e:	or     DWORD PTR [ebp+0x4],0x2000
6400cc95:	test   al,0x4
6400cc97:	mov    ecx,DWORD PTR [ebp+0x4]
6400cc9a:	je     0x6400cca8
6400cc9c:	or     ecx,0x2000000
6400cca2:	mov    DWORD PTR [ebp+0x4],ecx
6400cca5:	add    edx,0x8
6400cca8:	add    edx,0x20
6400ccab:	push   edx
6400ccac:	push   0x10
6400ccae:	jmp    0x6400ccc4
6400ccb0:	test   al,0x4
6400ccb2:	je     0x6400ccbe
6400ccb4:	or     DWORD PTR [ebp+0x4],0x2000000
6400ccbb:	add    edx,0x8
6400ccbe:	add    edx,0x10
6400ccc1:	push   edx
6400ccc2:	push   0x20
6400ccc4:	mov    eax,ebx
6400ccc6:	push   0x1
6400ccc8:	call   0x6400bfb0
6400cccd:	mov    al,BYTE PTR [ebx]
6400cccf:	cmp    al,0x1
6400ccd1:	je     0x6400ccdb
6400ccd3:	cmp    al,0x6
6400ccd5:	je     0x6400ccdb
6400ccd7:	cmp    al,0x7
6400ccd9:	jne    0x6400ccef
6400ccdb:	movzx  ecx,BYTE PTR [ebx+0x1]
6400ccdf:	mov    dx,WORD PTR [ecx*2+0x6402e028]
6400cce7:	mov    eax,DWORD PTR [esp+0x24]
6400cceb:	or     WORD PTR [eax+0x3c],dx
6400ccef:	pop    edi
6400ccf0:	pop    esi
6400ccf1:	pop    ebp
6400ccf2:	mov    eax,0x1
6400ccf7:	pop    ebx
6400ccf8:	add    esp,0xc
6400ccfb:	ret    
6400ccfc:	test   al,0x4
6400ccfe:	mov    edi,0x2000000
6400cd03:	je     0x6400cd0b
6400cd05:	or     DWORD PTR [ebp+0x4],edi
6400cd08:	add    edx,0x8
6400cd0b:	mov    ecx,DWORD PTR [esp+0x20]
6400cd0f:	cmp    DWORD PTR [ecx+0x18],0x2
6400cd13:	jne    0x6400cd2c
6400cd15:	mov    esi,DWORD PTR [esp+0x38]
6400cd19:	and    esi,0x3000000
6400cd1f:	cmp    esi,0x1000000
6400cd25:	jne    0x6400cd2c
6400cd27:	push   edx
6400cd28:	push   0x40
6400cd2a:	jmp    0x6400ccc4
6400cd2c:	test   al,0x8
6400cd2e:	mov    eax,ebx
6400cd30:	je     0x6400cd3a
6400cd32:	or     DWORD PTR [ebp+0x4],edi
6400cd35:	push   edx
6400cd36:	push   0x40
6400cd38:	jmp    0x6400ccc6
6400cd3a:	add    edx,0x10
6400cd3d:	push   edx
6400cd3e:	push   0x20
6400cd40:	jmp    0x6400ccc6
6400cd42:	test   al,0x1
6400cd44:	mov    eax,DWORD PTR [esp+0x34]
6400cd48:	je     0x6400cd54
6400cd4a:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd51:	add    eax,0x8
6400cd54:	mov    edx,DWORD PTR [esp+0x20]
6400cd58:	cmp    DWORD PTR [edx+0x18],0x2
6400cd5c:	jne    0x6400cd66
6400cd5e:	push   eax
6400cd5f:	push   0x40
6400cd61:	jmp    0x6400ccc4
6400cd66:	add    eax,0x10
6400cd69:	push   eax
6400cd6a:	jmp    0x6400ccc2
6400cd6f:	add    edx,0x53
6400cd72:	push   edx
6400cd73:	push   0x40
6400cd75:	jmp    0x6400ccc4
6400cd7a:	mov    eax,DWORD PTR [esp+0x34]
6400cd7e:	add    eax,0x53
6400cd81:	push   eax
6400cd82:	push   0x40
6400cd84:	jmp    0x6400ccc4
6400cd89:	xor    eax,eax
6400cd8b:	mov    DWORD PTR [esp+0x10],eax
6400cd8f:	mov    DWORD PTR [esp+0x14],eax
6400cd93:	mov    edx,eax
6400cd95:	test   al,0x4
6400cd97:	je     0x6400cda3
6400cd99:	or     DWORD PTR [ebp+0x4],0x2000000
6400cda0:	add    edx,0x8
6400cda3:	add    edx,0x5b
6400cda6:	push   edx
6400cda7:	push   0x80
6400cdac:	jmp    0x6400ccc4
6400cdb1:	test   al,0x1
6400cdb3:	je     0x6400cdc1
6400cdb5:	or     DWORD PTR [ebp+0x4],0x2000000
6400cdbc:	add    DWORD PTR [esp+0x34],0x8
6400cdc1:	mov    ecx,DWORD PTR [esp+0x34]
6400cdc5:	add    ecx,0x5b
6400cdc8:	push   ecx
6400cdc9:	push   0x80
6400cdce:	jmp    0x6400ccc4
6400cdd3:	test   al,0x4
6400cdd5:	mov    eax,DWORD PTR [esp+0x20]
6400cdd9:	je     0x6400cde7
6400cddb:	or     DWORD PTR [ebp+0x4],0x2000000
6400cde2:	add    edx,0x8
6400cde5:	jmp    0x6400cdfa
6400cde7:	cmp    DWORD PTR [eax+0x18],0x1
6400cdeb:	jne    0x6400cdfa
6400cded:	test   BYTE PTR [ebp+0x0],0x10
6400cdf1:	je     0x6400cdfa
6400cdf3:	add    edx,0x8
6400cdf6:	or     DWORD PTR [ebp+0x4],0x10
6400cdfa:	cmp    edx,0x9
6400cdfd:	jae    0x6400c8b8
6400ce03:	cmp    edx,0x1
6400ce06:	je     0x6400c8b8
6400ce0c:	cmp    edx,0x5
6400ce0f:	jb     0x6400ce1a
6400ce11:	cmp    edx,0x7
6400ce14:	jbe    0x6400c8b8
6400ce1a:	mov    BYTE PTR [ebx],0x1
6400ce1d:	mov    eax,DWORD PTR [eax+0x18]
6400ce20:	sub    eax,0x2
6400ce23:	neg    eax
6400ce25:	sbb    eax,eax
6400ce27:	and    eax,0xffffffe0
6400ce2a:	add    eax,0x40
6400ce2d:	add    dl,0x7b
6400ce30:	mov    WORD PTR [ebx+0x2],ax
6400ce34:	mov    BYTE PTR [ebx+0x1],dl
6400ce37:	jmp    0x6400ccdb
6400ce3c:	cmp    edx,0x4
6400ce3f:	je     0x6400c8b8
6400ce45:	cmp    edx,0x5
6400ce48:	je     0x6400c8b8
6400ce4e:	test   al,0x4
6400ce50:	jne    0x6400c8b8
6400ce56:	mov    ecx,DWORD PTR [esp+0x20]
6400ce5a:	mov    BYTE PTR [ebx],0x1
6400ce5d:	mov    eax,DWORD PTR [ecx+0x18]
6400ce60:	sub    eax,0x2
6400ce63:	neg    eax
6400ce65:	sbb    eax,eax
6400ce67:	and    eax,0xffffffe0
6400ce6a:	add    eax,0x40
6400ce6d:	sub    dl,0x7c
6400ce70:	mov    WORD PTR [ebx+0x2],ax
6400ce74:	mov    BYTE PTR [ebx+0x1],dl
6400ce77:	jmp    0x6400ccdb
6400ce7c:	cmp    DWORD PTR [esp+0x44],0x0
6400ce81:	je     0x6400ce8c
6400ce83:	cmp    edx,0x1
6400ce86:	je     0x6400c8b8
6400ce8c:	cmp    edx,0x5
6400ce8f:	ja     0x6400c8b8
6400ce95:	add    edx,0x44
6400ce98:	push   edx
6400ce99:	push   0x10
6400ce9b:	jmp    0x6400ccc4
6400cea0:	mov    eax,DWORD PTR [esp+0x38]
6400cea4:	mov    BYTE PTR [ebx],0x1
6400cea7:	mov    WORD PTR [ebx+0x2],0x10
6400cead:	or     DWORD PTR [ebp+0x4],0x2000
6400ceb4:	and    eax,0x1f80
6400ceb9:	cmp    eax,0x400
6400cebe:	ja     0x6400ceff
6400cec0:	je     0x6400cef6
6400cec2:	cmp    eax,0x80
6400cec7:	je     0x6400ceed
6400cec9:	cmp    eax,0x100
6400cece:	je     0x6400cee4
6400ced0:	cmp    eax,0x200
6400ced5:	jne    0x6400cccd
6400cedb:	mov    BYTE PTR [ebx+0x1],0x47
6400cedf:	jmp    0x6400cccd
6400cee4:	mov    BYTE PTR [ebx+0x1],0x46
6400cee8:	jmp    0x6400cccd
6400ceed:	mov    BYTE PTR [ebx+0x1],0x45
6400cef1:	jmp    0x6400cccd
6400cef6:	mov    BYTE PTR [ebx+0x1],0x44
6400cefa:	jmp    0x6400cccd
6400ceff:	cmp    eax,0x800
6400cf04:	je     0x6400cf1a
6400cf06:	cmp    eax,0x1000
6400cf0b:	jne    0x6400cccd
6400cf11:	mov    BYTE PTR [ebx+0x1],0x49
6400cf15:	jmp    0x6400cccd
6400cf1a:	mov    BYTE PTR [ebx+0x1],0x48
6400cf1e:	jmp    0x6400cccd
6400cf23:	push   0x30
6400cf25:	push   0x8
6400cf27:	jmp    0x6400ccc4
6400cf2c:	mov    eax,DWORD PTR [esp+0x3c]
6400cf30:	test   eax,eax
6400cf32:	jne    0x6400cf44
6400cf34:	or     DWORD PTR [ebp+0x4],0x2000
6400cf3b:	push   0x20
6400cf3d:	push   0x10
6400cf3f:	jmp    0x6400ccc4
6400cf44:	cmp    eax,0x1
6400cf47:	jne    0x6400cf57
6400cf49:	or     DWORD PTR [ebp+0x4],0x2000
6400cf50:	push   0x10
6400cf52:	jmp    0x6400ccc2
6400cf57:	mov    eax,DWORD PTR [esp+0x38]
6400cf5b:	not    eax
6400cf5d:	test   eax,0x1000000
6400cf62:	je     0x6400cf6b
6400cf64:	or     DWORD PTR [ebp+0x4],0x2000000
6400cf6b:	push   0x0
6400cf6d:	push   0x40
6400cf6f:	jmp    0x6400ccc4
6400cf74:	or     DWORD PTR [ebp+0x4],0x2000
6400cf7b:	cmp    DWORD PTR [esp+0x3c],0x0
6400cf80:	mov    esi,DWORD PTR [esp+0x20]
6400cf84:	jne    0x6400cfbf
6400cf86:	add    DWORD PTR [esi+0x14],0xfffffffc
6400cf8a:	js     0x6400c8b8
6400cf90:	push   0x9
6400cf92:	mov    edx,0x10
6400cf97:	mov    eax,ebx
6400cf99:	call   0x6400bfa0
6400cf9e:	mov    ecx,DWORD PTR [esi+0x10]
6400cfa1:	movzx  edx,WORD PTR [ecx]
6400cfa4:	mov    eax,DWORD PTR [esp+0x24]
6400cfa8:	mov    DWORD PTR [eax+0x34],edx
6400cfab:	mov    ecx,DWORD PTR [esi+0x10]
6400cfae:	mov    dx,WORD PTR [ecx+0x2]
6400cfb2:	mov    WORD PTR [eax+0x30],dx
6400cfb6:	add    DWORD PTR [esi+0x10],0x4
6400cfba:	jmp    0x6400cccd
6400cfbf:	add    DWORD PTR [esi+0x14],0xfffffffa
6400cfc3:	js     0x6400c8b8
6400cfc9:	push   0x9
6400cfcb:	mov    edx,0x20
6400cfd0:	mov    eax,ebx
6400cfd2:	call   0x6400bfa0
6400cfd7:	mov    eax,DWORD PTR [esi+0x10]
6400cfda:	mov    ecx,DWORD PTR [eax]
6400cfdc:	mov    eax,DWORD PTR [esp+0x24]
6400cfe0:	mov    DWORD PTR [eax+0x34],ecx
6400cfe3:	mov    edx,DWORD PTR [esi+0x10]
6400cfe6:	mov    cx,WORD PTR [edx+0x4]
6400cfea:	mov    WORD PTR [eax+0x30],cx
6400cfee:	add    DWORD PTR [esi+0x10],0x6
6400cff2:	jmp    0x6400cccd
6400cff7:	cmp    esi,0x28
6400cffa:	push   0x8
6400cffc:	mov    eax,ebx
6400cffe:	jne    0x6400d027
6400d000:	lea    edx,[esi-0x20]
6400d003:	call   0x6400bfa0
6400d008:	lea    edi,[esi-0x27]
6400d00b:	mov    esi,DWORD PTR [esp+0x24]
6400d00f:	mov    ecx,DWORD PTR [esp+0x20]
6400d013:	add    esi,0x30
6400d016:	call   0x6400c060
6400d01b:	test   eax,eax
6400d01d:	jne    0x6400d069
6400d01f:	pop    edi
6400d020:	pop    esi
6400d021:	pop    ebp
6400d022:	pop    ebx
6400d023:	add    esp,0xc
6400d026:	ret    
6400d027:	or     DWORD PTR [ebp+0x4],0x2000
6400d02e:	cmp    DWORD PTR [esp+0x40],0x0
6400d033:	jne    0x6400d044
6400d035:	mov    edx,0x10
6400d03a:	call   0x6400bfa0
6400d03f:	lea    edi,[edx-0xe]
6400d042:	jmp    0x6400d00b
6400d044:	mov    edx,0x20
6400d049:	call   0x6400bfa0
6400d04e:	mov    esi,DWORD PTR [esp+0x24]
6400d052:	mov    ecx,DWORD PTR [esp+0x20]
6400d056:	add    esi,0x30
6400d059:	lea    edi,[edx-0x1c]
6400d05c:	call   0x6400c060
6400d061:	test   eax,eax
6400d063:	je     0x6400c8b8
6400d069:	mov    edx,DWORD PTR [esp+0x28]
6400d06d:	movzx  eax,WORD PTR [edx+0x4]
6400d071:	cmp    ax,0x18
6400d075:	jb     0x6400cccd
6400d07b:	cmp    ax,0x27
6400d07f:	ja     0x6400cccd
6400d085:	mov    eax,DWORD PTR [ebp+0x0]
6400d088:	test   al,al
6400d08a:	jns    0x6400d0a1
6400d08c:	mov    eax,DWORD PTR [esp+0x24]
6400d090:	or     DWORD PTR [ebp+0x4],0x80
6400d097:	or     WORD PTR [eax+0xa],0x10
6400d09c:	jmp    0x6400cccd
6400d0a1:	test   eax,0x200
6400d0a6:	je     0x6400cccd
6400d0ac:	mov    eax,DWORD PTR [esp+0x24]
6400d0b0:	or     DWORD PTR [ebp+0x4],0x200
6400d0b7:	or     WORD PTR [eax+0xa],0x8
6400d0bc:	jmp    0x6400cccd
6400d0c1:	mov    WORD PTR [ebx+0x2],0x8
6400d0c7:	cmp    WORD PTR [ebx+0x2],0x0
6400d0cc:	mov    BYTE PTR [ebx],0x5
6400d0cf:	jne    0x6400d0fa
6400d0d1:	mov    eax,DWORD PTR [esp+0x3c]
6400d0d5:	sub    eax,0x0
6400d0d8:	je     0x6400d0f4
6400d0da:	sub    eax,0x1
6400d0dd:	je     0x6400d0ec
6400d0df:	sub    eax,0x1
6400d0e2:	jne    0x6400d0fa
6400d0e4:	mov    WORD PTR [ebx+0x2],0x40
6400d0ea:	jmp    0x6400d0fa
6400d0ec:	mov    WORD PTR [ebx+0x2],0x20
6400d0f2:	jmp    0x6400d0fa
6400d0f4:	mov    WORD PTR [ebx+0x2],0x10
6400d0fa:	mov    eax,DWORD PTR [esp+0x24]
6400d0fe:	mov    edi,DWORD PTR [esp+0x20]
6400d102:	mov    ecx,DWORD PTR [edi+0x18]
6400d105:	push   eax
6400d106:	push   ecx
6400d107:	push   ebp
6400d108:	push   0x200
6400d10d:	call   0x6400dd80
6400d112:	mov    eax,DWORD PTR [esp+0x50]
6400d116:	add    esp,0x10
6400d119:	test   eax,eax
6400d11b:	jne    0x6400d13b
6400d11d:	mov    eax,DWORD PTR [esp+0x24]
6400d121:	or     DWORD PTR [ebp+0x4],0x4000
6400d128:	mov    BYTE PTR [eax+0xf],0x10
6400d12c:	lea    ecx,[eax+0x28]
6400d12f:	mov    esi,0x2
6400d134:	mov    eax,edi
6400d136:	jmp    0x6400cade
6400d13b:	cmp    eax,0x1
6400d13e:	mov    eax,DWORD PTR [esp+0x24]
6400d142:	lea    ecx,[eax+0x28]
6400d145:	jne    0x6400d15e
6400d147:	or     DWORD PTR [ebp+0x4],0x4000
6400d14e:	mov    BYTE PTR [eax+0xf],0x20
6400d152:	mov    esi,0x4
6400d157:	mov    eax,edi
6400d159:	jmp    0x6400cade
6400d15e:	mov    BYTE PTR [eax+0xf],0x40
6400d162:	mov    esi,0x8
6400d167:	mov    eax,edi
6400d169:	jmp    0x6400cade
6400d16e:	push   0x2
6400d170:	mov    edx,0x8
6400d175:	mov    eax,ebx
6400d177:	call   0x6400bfa0
6400d17c:	mov    edx,DWORD PTR [esp+0x24]
6400d180:	mov    BYTE PTR [edx+0x30],0x1
6400d184:	jmp    0x6400cccd
6400d189:	push   0x31
6400d18b:	push   0x8
6400d18d:	jmp    0x6400ccc4
6400d192:	mov    eax,DWORD PTR [esp+0x20]
6400d196:	mov    ecx,DWORD PTR [eax+0x10]
6400d199:	movzx  edx,BYTE PTR [ecx-0x1]
6400d19d:	and    edx,0x7
6400d1a0:	add    edx,0x4b
6400d1a3:	jmp    0x6400ccc1
6400d1a8:	push   0x4b
6400d1aa:	push   0x20
6400d1ac:	push   0x1
6400d1ae:	mov    eax,ebx
6400d1b0:	call   0x6400bfb0
6400d1b5:	mov    eax,DWORD PTR [esp+0x20]
6400d1b9:	mov    ecx,DWORD PTR [eax+0x10]
6400d1bc:	movzx  edx,BYTE PTR [ecx-0x1]
6400d1c0:	and    edx,0x7
6400d1c3:	add    edx,0x4b
6400d1c6:	push   edx
6400d1c7:	push   0x20
6400d1c9:	lea    eax,[ebx+0x4]
6400d1cc:	jmp    0x6400ccc6
6400d1d1:	mov    eax,DWORD PTR [esp+0x20]
6400d1d5:	mov    ecx,DWORD PTR [eax+0x10]
6400d1d8:	movzx  edx,BYTE PTR [ecx-0x1]
6400d1dc:	and    edx,0x7
6400d1df:	add    edx,0x4b
6400d1e2:	push   edx
6400d1e3:	push   0x20
6400d1e5:	push   0x1
6400d1e7:	mov    eax,ebx
6400d1e9:	call   0x6400bfb0
6400d1ee:	push   0x4b
6400d1f0:	push   0x20
6400d1f2:	lea    eax,[ebx+0x4]
6400d1f5:	jmp    0x6400ccc6
6400d1fa:	push   0x1
6400d1fc:	mov    edx,0x8
6400d201:	mov    eax,ebx
6400d203:	call   0x6400bfa0
6400d208:	mov    eax,DWORD PTR [esp+0x20]
6400d20c:	mov    ecx,DWORD PTR [eax+0x10]
6400d20f:	movzx  eax,BYTE PTR [ecx-0x1]
6400d213:	and    eax,0x7
6400d216:	test   BYTE PTR [esp+0x14],0x1
6400d21b:	je     0x6400d233
6400d21d:	or     DWORD PTR [ebp+0x4],0x2000000
6400d224:	add    eax,edx
6400d226:	call   0x6400bf90
6400d22b:	mov    BYTE PTR [ebx+0x1],al
6400d22e:	jmp    0x6400cccd
6400d233:	cmp    DWORD PTR [ebp+0x18],0x1
6400d237:	jne    0x6400cc55
6400d23d:	or     DWORD PTR [ebp+0x4],0x2000000
6400d244:	call   0x6400bf90
6400d249:	mov    BYTE PTR [ebx+0x1],al
6400d24c:	jmp    0x6400cccd
6400d251:	mov    edx,DWORD PTR [esp+0x20]
6400d255:	mov    ecx,DWORD PTR [edx+0x10]
6400d258:	movzx  ecx,BYTE PTR [ecx-0x1]
6400d25c:	mov    edx,DWORD PTR [esp+0x3c]
6400d260:	and    ecx,0x7
6400d263:	sub    edx,0x0
6400d266:	je     0x6400d2d5
6400d268:	sub    edx,0x1
6400d26b:	je     0x6400d2ae
6400d26d:	sub    edx,0x1
6400d270:	jne    0x6400cccd
6400d276:	mov    edx,DWORD PTR [esp+0x38]
6400d27a:	test   edx,0x1000000
6400d280:	mov    edi,0x2000000
6400d285:	je     0x6400d29d
6400d287:	test   edi,edx
6400d289:	jne    0x6400d29d
6400d28b:	test   al,0x1
6400d28d:	je     0x6400d2a6
6400d28f:	or     DWORD PTR [ebp+0x4],edi
6400d292:	add    ecx,0x8
6400d295:	push   ecx
6400d296:	push   0x40
6400d298:	jmp    0x6400ccc4
6400d29d:	or     DWORD PTR [ebp+0x4],edi
6400d2a0:	and    eax,0x1
6400d2a3:	lea    ecx,[ecx+eax*8]
6400d2a6:	push   ecx
6400d2a7:	push   0x40
6400d2a9:	jmp    0x6400ccc4
6400d2ae:	test   al,0x1
6400d2b0:	je     0x6400d2c5
6400d2b2:	or     DWORD PTR [ebp+0x4],0x2000000
6400d2b9:	add    ecx,0x8
6400d2bc:	add    ecx,0x10
6400d2bf:	push   ecx
6400d2c0:	jmp    0x6400ccc2
6400d2c5:	or     DWORD PTR [ebp+0x4],0x2000
6400d2cc:	add    ecx,0x10
6400d2cf:	push   ecx
6400d2d0:	jmp    0x6400ccc2
6400d2d5:	or     DWORD PTR [ebp+0x4],0x2000
6400d2dc:	test   al,0x1
6400d2de:	mov    edx,DWORD PTR [ebp+0x4]
6400d2e1:	je     0x6400d2ef
6400d2e3:	or     edx,0x2000000
6400d2e9:	mov    DWORD PTR [ebp+0x4],edx
6400d2ec:	add    ecx,0x8
6400d2ef:	add    ecx,0x20
6400d2f2:	push   ecx
6400d2f3:	push   0x10
6400d2f5:	jmp    0x6400ccc4
6400d2fa:	or     DWORD PTR [ebp+0x4],0x4000
6400d301:	mov    edx,DWORD PTR [esp+0x38]
6400d305:	test   dl,0x4
6400d308:	mov    BYTE PTR [ebx],0x6
6400d30b:	je     0x6400d34c
6400d30d:	or     DWORD PTR [ebp+0x4],0x2000
6400d314:	mov    ecx,DWORD PTR [esp+0x3c]
6400d318:	test   ecx,ecx
6400d31a:	mov    eax,DWORD PTR [ebp+0x4]
6400d31d:	jne    0x6400d327
6400d31f:	mov    WORD PTR [ebx+0x2],0x10
6400d325:	jmp    0x6400d352
6400d327:	cmp    ecx,0x2
6400d32a:	jne    0x6400d344
6400d32c:	test   edx,0x1000000
6400d332:	je     0x6400d344
6400d334:	or     eax,0x2000000
6400d339:	mov    DWORD PTR [ebp+0x4],eax
6400d33c:	mov    WORD PTR [ebx+0x2],0x40
6400d342:	jmp    0x6400d352
6400d344:	mov    WORD PTR [ebx+0x2],0x20
6400d34a:	jmp    0x6400d352
6400d34c:	mov    WORD PTR [ebx+0x2],0x8
6400d352:	mov    eax,DWORD PTR [esp+0x24]
6400d356:	mov    edx,DWORD PTR [esp+0x20]
6400d35a:	push   eax
6400d35b:	mov    BYTE PTR [eax+0xc],0x0
6400d35f:	mov    eax,DWORD PTR [edx+0x18]
6400d362:	push   eax
6400d363:	push   ebp
6400d364:	push   0x200
6400d369:	call   0x6400dd80
6400d36e:	mov    eax,DWORD PTR [esp+0x50]
6400d372:	add    esp,0x10
6400d375:	test   eax,eax
6400d377:	jne    0x6400d382
6400d379:	mov    BYTE PTR [ebx+0x1],0x26
6400d37d:	jmp    0x6400cccd
6400d382:	sub    eax,0x1
6400d385:	neg    eax
6400d387:	sbb    al,al
6400d389:	and    al,0xf0
6400d38b:	add    al,0x16
6400d38d:	mov    BYTE PTR [ebx+0x1],al
6400d390:	jmp    0x6400cccd
6400d395:	or     DWORD PTR [ebp+0x4],0x4000
6400d39c:	mov    edx,DWORD PTR [esp+0x38]
6400d3a0:	test   dl,0x4
6400d3a3:	mov    BYTE PTR [ebx],0x6
6400d3a6:	je     0x6400d3e7
6400d3a8:	or     DWORD PTR [ebp+0x4],0x2000
6400d3af:	mov    ecx,DWORD PTR [esp+0x3c]
6400d3b3:	test   ecx,ecx
6400d3b5:	mov    eax,DWORD PTR [ebp+0x4]
6400d3b8:	jne    0x6400d3c2
6400d3ba:	mov    WORD PTR [ebx+0x2],0x10
6400d3c0:	jmp    0x6400d3ed
6400d3c2:	cmp    ecx,0x2
6400d3c5:	jne    0x6400d3df
6400d3c7:	test   edx,0x1000000
6400d3cd:	je     0x6400d3df
6400d3cf:	or     eax,0x2000000
6400d3d4:	mov    DWORD PTR [ebp+0x4],eax
6400d3d7:	mov    WORD PTR [ebx+0x2],0x40
6400d3dd:	jmp    0x6400d3ed
6400d3df:	mov    WORD PTR [ebx+0x2],0x20
6400d3e5:	jmp    0x6400d3ed
6400d3e7:	mov    WORD PTR [ebx+0x2],0x8
6400d3ed:	cmp    DWORD PTR [esp+0x30],0x0
6400d3f2:	jne    0x6400d406
6400d3f4:	mov    ecx,DWORD PTR [esp+0x20]
6400d3f8:	cmp    DWORD PTR [ecx+0x18],0x2
6400d3fc:	je     0x6400d406
6400d3fe:	mov    edx,DWORD PTR [esp+0x24]
6400d402:	mov    BYTE PTR [edx+0xc],0xc4
6400d406:	mov    eax,DWORD PTR [esp+0x40]
6400d40a:	test   eax,eax
6400d40c:	jne    0x6400d417
6400d40e:	mov    BYTE PTR [ebx+0x1],0x27
6400d412:	jmp    0x6400cccd
6400d417:	sub    eax,0x1
6400d41a:	neg    eax
6400d41c:	sbb    al,al
6400d41e:	and    al,0xf0
6400d420:	add    al,0x17
6400d422:	mov    BYTE PTR [ebx+0x1],al
6400d425:	jmp    0x6400cccd
6400d42a:	push   0x22
6400d42c:	push   0x10
6400d42e:	jmp    0x6400ccc4
6400d433:	push   0x11
6400d435:	jmp    0x6400ccc2
6400d43a:	mov    eax,DWORD PTR [esp+0x20]
6400d43e:	or     DWORD PTR [ebp+0x4],0x4000
6400d445:	mov    edi,DWORD PTR [esp+0x24]
6400d449:	mov    ecx,DWORD PTR [eax+0x18]
6400d44c:	push   edi
6400d44d:	push   ecx
6400d44e:	push   ebp
6400d44f:	push   0x200
6400d454:	call   0x6400dd80
6400d459:	add    esp,0x10
6400d45c:	push   0x30
6400d45e:	push   0x8
6400d460:	push   0x7
6400d462:	mov    eax,ebx
6400d464:	call   0x6400bfb0
6400d469:	mov    eax,DWORD PTR [esp+0x40]
6400d46d:	test   eax,eax
6400d46f:	jne    0x6400d47a
6400d471:	mov    BYTE PTR [edi+0xd],0x23
6400d475:	jmp    0x6400cccd
6400d47a:	cmp    eax,0x1
6400d47d:	jne    0x6400d488
6400d47f:	mov    BYTE PTR [edi+0xd],0x13
6400d483:	jmp    0x6400cccd
6400d488:	or     DWORD PTR [ebp+0x4],0x2000000
6400d48f:	mov    BYTE PTR [edi+0xd],0x3
6400d493:	jmp    0x6400cccd
6400d498:	mov    eax,DWORD PTR [esp+0x40]
6400d49c:	cmp    eax,0x2
6400d49f:	jne    0x6400d4ae
6400d4a1:	push   0x0
6400d4a3:	push   0x40
6400d4a5:	push   0x6
6400d4a7:	mov    eax,ebx
6400d4a9:	jmp    0x6400ccc8
6400d4ae:	or     DWORD PTR [ebp+0x4],0x4000
6400d4b5:	cmp    eax,0x1
6400d4b8:	mov    eax,ebx
6400d4ba:	jne    0x6400d4c7
6400d4bc:	push   0x10
6400d4be:	push   0x20
6400d4c0:	push   0x6
6400d4c2:	jmp    0x6400ccc8
6400d4c7:	push   0x20
6400d4c9:	push   0x10
6400d4cb:	push   0x6
6400d4cd:	jmp    0x6400ccc8
6400d4d2:	mov    edx,DWORD PTR [esp+0x18]
6400d4d6:	add    edx,0x5b
6400d4d9:	push   edx
6400d4da:	push   0x80
6400d4df:	jmp    0x6400ccc4
6400d4e4:	mov    edi,DWORD PTR [esp+0x20]
6400d4e8:	add    DWORD PTR [edi+0x14],0xffffffff
6400d4ec:	js     0x6400c8b8
6400d4f2:	mov    esi,0x1
6400d4f7:	cmp    DWORD PTR [edi+0x18],esi
6400d4fa:	jne    0x6400d50a
6400d4fc:	mov    eax,DWORD PTR [edi+0x10]
6400d4ff:	movzx  eax,BYTE PTR [eax]
6400d502:	shr    eax,0x4
6400d505:	and    eax,0x7
6400d508:	jmp    0x6400d513
6400d50a:	mov    ecx,DWORD PTR [edi+0x10]
6400d50d:	movzx  eax,BYTE PTR [ecx]
6400d510:	shr    eax,0x4
6400d513:	add    eax,0x5b
6400d516:	push   eax
6400d517:	push   0x80
6400d51c:	push   esi
6400d51d:	mov    eax,ebx
6400d51f:	call   0x6400bfb0
6400d524:	add    DWORD PTR [edi+0x10],esi
6400d527:	jmp    0x6400cccd
6400d52c:	test   al,0x4
6400d52e:	je     0x6400d533
6400d530:	add    edx,0x8
6400d533:	test   al,0x10
6400d535:	mov    eax,ebx
6400d537:	je     0x6400d547
6400d539:	add    edx,0x6b
6400d53c:	push   edx
6400d53d:	push   0x100
6400d542:	jmp    0x6400ccc6
6400d547:	add    edx,0x5b
6400d54a:	push   edx
6400d54b:	push   0x80
6400d550:	jmp    0x6400ccc6
6400d555:	mov    edi,DWORD PTR [esp+0x20]
6400d559:	add    DWORD PTR [edi+0x14],0xffffffff
6400d55d:	js     0x6400c8b8
6400d563:	mov    esi,0x1
6400d568:	cmp    DWORD PTR [edi+0x18],esi
6400d56b:	jne    0x6400d57b
6400d56d:	mov    edx,DWORD PTR [edi+0x10]
6400d570:	movzx  eax,BYTE PTR [edx]
6400d573:	shr    eax,0x4
6400d576:	and    eax,0x7
6400d579:	jmp    0x6400d584
6400d57b:	mov    eax,DWORD PTR [edi+0x10]
6400d57e:	movzx  eax,BYTE PTR [eax]
6400d581:	shr    eax,0x4
6400d584:	test   BYTE PTR [ebp+0x28],0x10
6400d588:	je     0x6400d513
6400d58a:	add    eax,0x6b
6400d58d:	push   eax
6400d58e:	push   0x100
6400d593:	push   esi
6400d594:	mov    eax,ebx
6400d596:	call   0x6400bfb0
6400d59b:	add    DWORD PTR [edi+0x10],esi
6400d59e:	jmp    0x6400cccd
6400d5a3:	test   al,0x4
6400d5a5:	je     0x6400d5aa
6400d5a7:	add    edx,0x8
6400d5aa:	add    edx,0x6b
6400d5ad:	push   edx
6400d5ae:	push   0x100
6400d5b3:	jmp    0x6400ccc4
6400d5b8:	mov    ecx,DWORD PTR [esp+0x18]
6400d5bc:	add    ecx,0x6b
6400d5bf:	push   ecx
6400d5c0:	push   0x100
6400d5c5:	jmp    0x6400ccc4
6400d5ca:	test   al,0x10
6400d5cc:	je     0x6400d5e0
6400d5ce:	mov    edx,DWORD PTR [esp+0x18]
6400d5d2:	add    edx,0x6b
6400d5d5:	push   edx
6400d5d6:	push   0x100
6400d5db:	jmp    0x6400ccc4
6400d5e0:	mov    eax,DWORD PTR [esp+0x18]
6400d5e4:	add    eax,0x5b
6400d5e7:	push   eax
6400d5e8:	push   0x80
6400d5ed:	jmp    0x6400ccc4
6400d5f2:	test   al,0x4
6400d5f4:	je     0x6400d5f9
6400d5f6:	add    edx,0x8
6400d5f9:	test   al,0x8
6400d5fb:	je     0x6400ccbe
6400d601:	push   edx
6400d602:	push   0x40
6400d604:	jmp    0x6400ccc4
6400d609:	lea    ecx,[ecx+0x0]
6400d60c:	imul   ecx,eax,0xc85b6400
6400d612:	add    BYTE PTR [ecx+ebx*1-0x38],ah
6400d616:	add    BYTE PTR [edx+edx*4-0x38],ah
6400d61a:	add    BYTE PTR [ebx+eiz*1-0x38],ah
6400d61e:	add    BYTE PTR [eax+esi*2-0x38],ah
6400d622:	add    BYTE PTR [ebp+eiz*4-0x38],ah
6400d626:	add    BYTE PTR [edx+eax*4-0x38],ah
6400d62a:	add    BYTE PTR [ebx+ecx*1-0x38],ah
6400d62e:	add    BYTE PTR [ecx+eax*1-0x38],ah
6400d632:	add    BYTE PTR [edi+ebx*8-0x39],ah
6400d636:	add    BYTE PTR [ecx+ebx*4-0x38],ah
6400d63a:	add    BYTE PTR [esp+ebp*1-0x37],ah
6400d63e:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d642:	add    al,BYTE PTR [ebx]
6400d644:	or     al,0xc
6400d646:	or     al,0xc
6400d648:	or     al,0xc
6400d64a:	or     al,0xc
6400d64c:	or     al,0xc
6400d64e:	or     al,0xc
6400d650:	or     al,0x4
6400d652:	or     al,0x5
6400d654:	or     al,0xc
6400d656:	push   es
6400d657:	pop    es
6400d658:	add    DWORD PTR [eax],ecx
6400d65a:	add    cl,BYTE PTR [ecx]
6400d65c:	or     cl,BYTE PTR [esp+ecx*1]
6400d65f:	or     al,0xc
6400d661:	or     al,0xc
6400d663:	or     al,0xc
6400d665:	or     al,0xc
6400d667:	or     al,0xc
6400d669:	or     al,0xc
6400d66b:	or     al,0xc
6400d66d:	or     al,0xc
6400d66f:	or     al,0xc
6400d671:	or     al,0xc
6400d673:	or     al,0xc
6400d675:	or     al,0xc
6400d677:	or     al,0xc
6400d679:	or     al,0xc
6400d67b:	or     al,0xc
6400d67d:	or     al,0xc
6400d67f:	or     al,0xc
6400d681:	or     al,0xc
6400d683:	or     al,0xc
6400d685:	or     al,0xc
6400d687:	or     al,0xb
6400d689:	lea    ecx,[ecx+0x0]
6400d68c:	ins    BYTE PTR es:[edi],dx
6400d68d:	retf   0x6400
6400d690:	cdq    
6400d691:	leave  
6400d692:	add    BYTE PTR [edi+ecx*2-0x37],ah
6400d696:	add    BYTE PTR [ebp+esi*4-0x37],ah
6400d69a:	add    BYTE PTR [ebx+ebp*8-0x37],ah
6400d69e:	add    BYTE PTR [ebx+eiz*4-0x37],ah
6400d6a2:	add    BYTE PTR [eax+eiz*4-0x37],ah
6400d6a6:	add    BYTE PTR [esi+ebx*2-0x37],ah
6400d6aa:	add    BYTE PTR [edi+eax*4-0x37],ah
6400d6ae:	add    BYTE PTR [esi+edi*2-0x36],ah
6400d6b2:	add    BYTE PTR [ecx+ecx*1-0x36],ah
6400d6b6:	add    BYTE PTR [eax+edx*4-0x36],ah
6400d6ba:	add    BYTE PTR [ecx+eiz*1-0x36],ah
6400d6be:	add    BYTE PTR [edx+edi*1-0x36],ah
6400d6c2:	add    BYTE PTR [ebx+edx*2-0x36],ah
6400d6c6:	add    BYTE PTR [edx+eiz*4-0x36],ah
6400d6ca:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d6ce:	add    al,BYTE PTR [ebx]
6400d6d0:	add    al,0xf
6400d6d2:	(bad)  
6400d6d3:	(bad)  
6400d6d4:	sldt   WORD PTR ds:0xf060500
6400d6db:	(bad)  
6400d6dc:	(bad)  
6400d6dd:	(bad)  
6400d6de:	(bad)  
6400d6df:	(bad)  
6400d6e0:	(bad)  
6400d6e1:	(bad)  
6400d6e2:	(bad)  
6400d6e3:	(bad)  
6400d6e4:	(bad)  
6400d6e5:	(bad)  
6400d6e6:	(bad)  
6400d6e7:	(bad)  
6400d6e8:	(bad)  
6400d6e9:	(bad)  
6400d6ea:	(bad)  
6400d6eb:	(bad)  
6400d6ec:	(bad)  
6400d6ed:	(bad)  
6400d6ee:	(bad)  
6400d6ef:	(bad)  
6400d6f0:	(bad)  
6400d6f1:	(bad)  
6400d6f2:	(bad)  
6400d6f3:	(bad)  
6400d6f4:	(bad)  
6400d6f5:	(bad)  
6400d6f6:	(bad)  
6400d6f7:	(bad)  
6400d6f8:	(bad)  
6400d6f9:	(bad)  
6400d6fa:	(bad)  
6400d6fb:	(bad)  
6400d6fc:	(bad)  
6400d6fd:	(bad)  
6400d6fe:	sysret 
6400d700:	or     BYTE PTR [edi],cl
6400d702:	syscall 
6400d704:	pop    es
6400d705:	or     BYTE PTR [ecx],cl
6400d707:	sysret 
6400d709:	add    BYTE PTR ds:0xf0a0a0f,al
6400d70f:	(bad)  
6400d710:	(bad)  
6400d711:	(bad)  
6400d712:	ud2    
6400d714:	(bad)  
6400d715:	(bad)  
6400d717:	or     eax,0x498d0e
6400d71c:	ror    dl,0x0
6400d71f:	fs add cl,bl
6400d722:	add    BYTE PTR [ebx+esi*8-0x36],ah
6400d726:	add    BYTE PTR [ecx+ebx*2-0x35],ah
6400d72a:	add    BYTE PTR [esp+ebx*4-0x35],ah
6400d72e:	add    BYTE PTR [esi+esi*8-0x35],ah
6400d732:	add    BYTE PTR [ebp+edi*8-0x35],ah
6400d736:	add    BYTE PTR [esp+eax*1-0x34],ah
6400d73a:	add    BYTE PTR [esi+ebx*1-0x34],ah
6400d73e:	add    BYTE PTR [eax+ebp*4-0x34],ah
6400d742:	add    BYTE PTR [esp+ebx*2-0x34],ah
6400d746:	add    BYTE PTR [eax+esi*4-0x34],ah
6400d74a:	add    BYTE PTR [esp+edi*8-0x34],ah
6400d74e:	add    BYTE PTR [edx+eax*2-0x33],ah
6400d752:	add    BYTE PTR [ebx+edx*8-0x33],ah
6400d756:	add    BYTE PTR [esp+edi*1-0x32],ah
6400d75a:	add    BYTE PTR [esp+edi*2-0x32],ah
6400d75e:	add    BYTE PTR [eax+eiz*4-0x32],ah
6400d762:	add    BYTE PTR [ebx+eiz*1-0x31],ah
6400d766:	add    BYTE PTR [ebx+edi*1-0x31],ah
6400d76a:	add    BYTE PTR [esp+ebp*1-0x31],ah
6400d76e:	add    BYTE PTR [esp+esi*2-0x31],ah
6400d772:	add    BYTE PTR [edi+esi*8-0x31],ah
6400d776:	add    BYTE PTR [ecx+eax*8-0x30],ah
6400d77a:	add    BYTE PTR [edi+eax*8-0x30],ah
6400d77e:	add    BYTE PTR [esi+ebp*2-0x2f],ah
6400d782:	add    BYTE PTR [ecx+ecx*4-0x2f],ah
6400d786:	add    BYTE PTR [edx+edi*8-0x2f],ah
6400d78a:	add    BYTE PTR [ecx+edx*2-0x2e],ah
6400d78e:	add    BYTE PTR [edx+edi*8-0x2e],ah
6400d792:	add    BYTE PTR [ebp+edx*4-0x2d],ah
6400d796:	add    BYTE PTR [edx+edi*1-0x2c],ah
6400d79a:	add    BYTE PTR [eax+ebx*4-0x2c],ah
6400d79e:	add    BYTE PTR [edx+ebp*1-0x2c],ah
6400d7a2:	add    BYTE PTR [ebx+esi*1-0x2c],ah
6400d7a6:	add    BYTE PTR [edx+edx*4-0x2f],ah
6400d7aa:	add    BYTE PTR [eax+ebp*4-0x2f],ah
6400d7ae:	add    BYTE PTR [ecx+edx*8-0x2f],ah
6400d7b2:	add    BYTE PTR [edi+ebp*2-0x33],ah
6400d7b6:	add    BYTE PTR [edx+edi*2-0x33],ah
6400d7ba:	add    BYTE PTR [ebp+edx*4-0x33],ah
6400d7be:	add    BYTE PTR [ecx+esi*4-0x33],ah
6400d7c2:	add    BYTE PTR [ecx+ecx*4-0x33],ah
6400d7c6:	add    BYTE PTR [edx+esi*8-0x2b],ah
6400d7ca:	add    BYTE PTR [edx+edx*8-0x2c],ah
6400d7ce:	add    BYTE PTR [esp+eiz*8-0x2c],ah
6400d7d2:	add    BYTE PTR [esp+ebp*1-0x2b],ah
6400d7d6:	add    BYTE PTR [ebp+edx*2-0x2b],ah
6400d7da:	add    BYTE PTR [ebx+eiz*4-0x2b],ah
6400d7de:	add    BYTE PTR [eax+edi*4-0x2b],ah
6400d7e2:	add    BYTE PTR [edx+ecx*8-0x2b],ah
6400d7e6:	add    BYTE PTR [eax+edi*4-0x38],ah
6400d7ea:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d7ee:	add    al,BYTE PTR [ebx]
6400d7f0:	add    al,0x5
6400d7f2:	push   es
6400d7f3:	pop    es
6400d7f4:	or     BYTE PTR [ecx],cl
6400d7f6:	or     cl,BYTE PTR [ebx]
6400d7f8:	or     al,0xd
6400d7fa:	xor    esi,DWORD PTR [ebx]
6400d7fc:	xor    esi,DWORD PTR [ebx]
6400d7fe:	xor    esi,DWORD PTR [ebx]
6400d800:	xor    esi,DWORD PTR [ebx]
6400d802:	xor    esi,DWORD PTR [ebx]
6400d804:	xor    esi,DWORD PTR [ebx]
6400d806:	xor    esi,DWORD PTR [ebx]
6400d808:	push   cs
6400d809:	movups xmm2,XMMWORD PTR [ecx]
6400d80c:	adc    dl,BYTE PTR [ebx]
6400d80e:	adc    al,0x14
6400d810:	xor    edx,DWORD PTR ds:0x33161633
6400d816:	xor    esi,DWORD PTR [ebx]
6400d818:	xor    esi,DWORD PTR [ebx]
6400d81a:	xor    esi,DWORD PTR [ebx]
6400d81c:	pop    ss
6400d81d:	sbb    BYTE PTR [ecx],bl
6400d81f:	sbb    bl,BYTE PTR [ebx]
6400d821:	sbb    al,0x1d
6400d823:	push   ds
6400d824:	pop    ds
6400d825:	and    BYTE PTR [ecx],ah
6400d827:	and    ah,BYTE PTR [ebx]
6400d829:	and    al,0x25
6400d82b:	es daa 
6400d82d:	xor    esi,DWORD PTR [ebx]
6400d82f:	sub    BYTE PTR [ecx],ch
6400d831:	xor    esi,DWORD PTR [ebx]
6400d833:	xor    esi,DWORD PTR [ebx]
6400d835:	sub    dh,BYTE PTR [ebx]
6400d837:	xor    esi,DWORD PTR [ebx]
6400d839:	sub    esi,DWORD PTR [ebx]
6400d83b:	xor    ebp,DWORD PTR [ebp*1+0x33302f2e]
6400d842:	xor    DWORD PTR [edx],esi
6400d844:	int3   
6400d845:	int3   
6400d846:	int3   
6400d847:	int3   
6400d848:	int3   
6400d849:	int3   
6400d84a:	int3   
6400d84b:	int3   
6400d84c:	int3   
6400d84d:	int3   
6400d84e:	int3   
6400d84f:	int3   
6400d850:	mov    eax,DWORD PTR [esp+0x4]
6400d854:	add    eax,0xffffffda
6400d857:	cmp    eax,0xcd
6400d85c:	ja     0x6400d87d
6400d85e:	movzx  eax,BYTE PTR [eax+0x6400d88c]
6400d865:	jmp    DWORD PTR [eax*4+0x6400d880]
6400d86c:	xor    eax,eax
6400d86e:	cmp    DWORD PTR [esp+0x8],0x2
6400d873:	sete   al
6400d876:	ret    
6400d877:	mov    eax,0x1
6400d87c:	ret    
6400d87d:	xor    eax,eax
6400d87f:	ret    
6400d880:	ja     0x6400d85a
6400d882:	add    BYTE PTR [esp+ebp*2-0x28],ah
6400d886:	add    BYTE PTR [ebp+edi*2-0x28],ah
6400d88a:	add    BYTE PTR [eax+eax*1+0x2],ah
6400d88e:	add    al,BYTE PTR [edx]
6400d890:	add    al,BYTE PTR [edx]
6400d892:	add    al,BYTE PTR [edx]
6400d894:	add    BYTE PTR [edx],al
6400d896:	add    al,BYTE PTR [edx]
6400d898:	add    al,BYTE PTR [edx]
6400d89a:	add    al,BYTE PTR [edx]
6400d89c:	add    BYTE PTR [edx],al
6400d89e:	add    al,BYTE PTR [edx]
6400d8a0:	add    al,BYTE PTR [edx]
6400d8a2:	add    al,BYTE PTR [edx]
6400d8a4:	add    BYTE PTR [edx],al
6400d8a6:	add    DWORD PTR [ecx],eax
6400d8a8:	add    DWORD PTR [ecx],eax
6400d8aa:	add    DWORD PTR [ecx],eax
6400d8ac:	add    DWORD PTR [ecx],eax
6400d8ae:	add    DWORD PTR [ecx],eax
6400d8b0:	add    DWORD PTR [ecx],eax
6400d8b2:	add    DWORD PTR [ecx],eax
6400d8b4:	add    DWORD PTR [ecx],eax
6400d8b6:	add    al,BYTE PTR [edx]
6400d8b8:	add    al,BYTE PTR [edx]
6400d8ba:	add    al,BYTE PTR [edx]
6400d8bc:	add    al,BYTE PTR [edx]
6400d8be:	add    al,BYTE PTR [edx]
6400d8c0:	add    al,BYTE PTR [edx]
6400d8c2:	add    al,BYTE PTR [edx]
6400d8c4:	add    al,BYTE PTR [edx]
6400d8c6:	add    al,BYTE PTR [edx]
6400d8c8:	add    al,BYTE PTR [edx]
6400d8ca:	add    BYTE PTR [eax],al
6400d8cc:	add    BYTE PTR [eax],al
6400d8ce:	add    al,BYTE PTR [edx]
6400d8d0:	add    al,BYTE PTR [edx]
6400d8d2:	add    al,BYTE PTR [edx]
6400d8d4:	add    al,BYTE PTR [edx]
6400d8d6:	add    al,BYTE PTR [edx]
6400d8d8:	add    al,BYTE PTR [edx]
6400d8da:	add    al,BYTE PTR [edx]
6400d8dc:	add    al,BYTE PTR [edx]
6400d8de:	add    al,BYTE PTR [edx]
6400d8e0:	add    al,BYTE PTR [edx]
6400d8e2:	add    al,BYTE PTR [edx]
6400d8e4:	add    al,BYTE PTR [edx]
6400d8e6:	add    al,BYTE PTR [edx]
6400d8e8:	add    al,BYTE PTR [edx]
6400d8ea:	add    al,BYTE PTR [edx]
6400d8ec:	add    al,BYTE PTR [edx]
6400d8ee:	add    al,BYTE PTR [edx]
6400d8f0:	add    al,BYTE PTR [edx]
6400d8f2:	add    al,BYTE PTR [edx]
6400d8f4:	add    al,BYTE PTR [edx]
6400d8f6:	add    al,BYTE PTR [edx]
6400d8f8:	add    al,BYTE PTR [edx]
6400d8fa:	add    al,BYTE PTR [edx]
6400d8fc:	add    al,BYTE PTR [edx]
6400d8fe:	add    al,BYTE PTR [edx]
6400d900:	add    al,BYTE PTR [edx]
6400d902:	add    al,BYTE PTR [edx]
6400d904:	add    al,BYTE PTR [edx]
6400d906:	add    al,BYTE PTR [edx]
6400d908:	add    al,BYTE PTR [edx]
6400d90a:	add    al,BYTE PTR [edx]
6400d90c:	add    al,BYTE PTR [edx]
6400d90e:	add    al,BYTE PTR [edx]
6400d910:	add    al,BYTE PTR [edx]
6400d912:	add    al,BYTE PTR [edx]
6400d914:	add    al,BYTE PTR [edx]
6400d916:	add    al,BYTE PTR [edx]
6400d918:	add    al,BYTE PTR [edx]
6400d91a:	add    al,BYTE PTR [edx]
6400d91c:	add    al,BYTE PTR [edx]
6400d91e:	add    al,BYTE PTR [edx]
6400d920:	add    al,BYTE PTR [edx]
6400d922:	add    al,BYTE PTR [edx]
6400d924:	add    al,BYTE PTR [edx]
6400d926:	add    al,BYTE PTR [edx]
6400d928:	add    al,BYTE PTR [edx]
6400d92a:	add    BYTE PTR [eax],al
6400d92c:	add    al,BYTE PTR [edx]
6400d92e:	add    al,BYTE PTR [edx]
6400d930:	add    al,BYTE PTR [edx]
6400d932:	add    al,BYTE PTR [edx]
6400d934:	add    al,BYTE PTR [edx]
6400d936:	add    al,BYTE PTR [edx]
6400d938:	add    al,BYTE PTR [edx]
6400d93a:	add    al,BYTE PTR [edx]
6400d93c:	add    al,BYTE PTR [edx]
6400d93e:	add    al,BYTE PTR [edx]
6400d940:	add    al,BYTE PTR [edx]
6400d942:	add    al,BYTE PTR [edx]
6400d944:	add    al,BYTE PTR [edx]
6400d946:	add    al,BYTE PTR [edx]
6400d948:	add    al,BYTE PTR [edx]
6400d94a:	add    al,BYTE PTR [edx]
6400d94c:	add    al,BYTE PTR [edx]
6400d94e:	add    al,BYTE PTR [edx]
6400d950:	add    al,BYTE PTR [edx]
6400d952:	add    al,BYTE PTR [edx]
6400d954:	add    al,BYTE PTR [edx]
6400d956:	add    BYTE PTR [edx],al
6400d958:	add    BYTE PTR [eax],al
6400d95a:	int3   
6400d95b:	int3   
6400d95c:	int3   
6400d95d:	int3   
6400d95e:	int3   
6400d95f:	int3   
6400d960:	mov    eax,DWORD PTR [esp+0x4]
6400d964:	mov    ecx,DWORD PTR [esp+0x8]
6400d968:	mov    ecx,DWORD PTR [eax+ecx*4+0x2c]
6400d96c:	cmp    ecx,0xffffffff
6400d96f:	je     0x6400d97c
6400d971:	mov    edx,0x1
6400d976:	shl    edx,cl
6400d978:	or     WORD PTR [eax+0x1c],dx
6400d97c:	ret    
6400d97d:	int3   
6400d97e:	int3   
6400d97f:	int3   
6400d980:	push   esi
6400d981:	push   edi
6400d982:	mov    edi,DWORD PTR [esp+0xc]
6400d986:	xor    esi,esi
6400d988:	push   esi
6400d989:	push   edi
6400d98a:	call   0x6400d960
6400d98f:	add    esi,0x1
6400d992:	add    esp,0x8
6400d995:	cmp    esi,0x5
6400d998:	jl     0x6400d988
6400d99a:	pop    edi
6400d99b:	pop    esi
6400d99c:	ret    
6400d99d:	int3   
6400d99e:	int3   
6400d99f:	int3   
6400d9a0:	push   ebx
6400d9a1:	push   esi
6400d9a2:	mov    esi,DWORD PTR [esp+0xc]
6400d9a6:	mov    ebx,DWORD PTR [esi+0x4]
6400d9a9:	xor    ebx,DWORD PTR [esi]
6400d9ab:	test   ebx,0x2000000
6400d9b1:	je     0x6400d9be
6400d9b3:	push   0x0
6400d9b5:	push   esi
6400d9b6:	call   0x6400d960
6400d9bb:	add    esp,0x8
6400d9be:	test   ebx,0x1f80
6400d9c4:	je     0x6400d9d1
6400d9c6:	push   0x2
6400d9c8:	push   esi
6400d9c9:	call   0x6400d960
6400d9ce:	add    esp,0x8
6400d9d1:	test   bl,0x70
6400d9d4:	je     0x6400d9e1
6400d9d6:	push   0x1
6400d9d8:	push   esi
6400d9d9:	call   0x6400d960
6400d9de:	add    esp,0x8
6400d9e1:	test   ebx,0x2000
6400d9e7:	je     0x6400d9f4
6400d9e9:	push   0x3
6400d9eb:	push   esi
6400d9ec:	call   0x6400d960
6400d9f1:	add    esp,0x8
6400d9f4:	test   ebx,0x4000
6400d9fa:	je     0x6400da07
6400d9fc:	push   0x4
6400d9fe:	push   esi
6400d9ff:	call   0x6400d960
6400da04:	add    esp,0x8
6400da07:	mov    ax,WORD PTR [esi+0x1c]
6400da0b:	pop    esi
6400da0c:	pop    ebx
6400da0d:	ret    
6400da0e:	int3   
6400da0f:	int3   
6400da10:	push   esi
6400da11:	mov    esi,DWORD PTR [esp+0x10]
6400da15:	push   edi
6400da16:	mov    edi,DWORD PTR [esp+0xc]
6400da1a:	push   esi
6400da1b:	push   edi
6400da1c:	call   0x6400d960
6400da21:	mov    eax,DWORD PTR [esp+0x18]
6400da25:	add    esp,0x8
6400da28:	mov    DWORD PTR [edi+esi*4+0x2c],eax
6400da2c:	pop    edi
6400da2d:	pop    esi
6400da2e:	ret    
6400da2f:	int3   
6400da30:	push   ebx
6400da31:	mov    ebx,DWORD PTR [esp+0x8]
6400da35:	push   esi
6400da36:	mov    esi,DWORD PTR [esp+0x14]
6400da3a:	push   edi
6400da3b:	xor    edi,edi
6400da3d:	cmp    DWORD PTR [esp+0x14],edi
6400da41:	jle    0x6400db97
6400da47:	mov    eax,ebx
6400da49:	sub    eax,DWORD PTR [esi+0x8]
6400da4c:	cmp    eax,0xf
6400da4f:	jge    0x6400db97
6400da55:	movzx  eax,BYTE PTR [ebx]
6400da58:	add    eax,0xffffffda
6400da5b:	cmp    eax,0xcd
6400da60:	ja     0x6400db97
6400da66:	movzx  ecx,BYTE PTR [eax+0x6400dca4]
6400da6d:	jmp    DWORD PTR [ecx*4+0x6400dc70]
6400da74:	cmp    DWORD PTR [esp+0x1c],0x2
6400da79:	jne    0x6400db97
6400da7f:	or     DWORD PTR [esi],0x2000000
6400da85:	movzx  edx,BYTE PTR [ebx]
6400da88:	push   0x0
6400da8a:	and    edx,0xf
6400da8d:	push   edi
6400da8e:	push   esi
6400da8f:	mov    DWORD PTR [esi+0x28],edx
6400da92:	mov    DWORD PTR [esi+0x14],ebx
6400da95:	mov    DWORD PTR [esi+0x18],0x1
6400da9c:	call   0x6400da10
6400daa1:	add    esp,0xc
6400daa4:	jmp    0x6400db7e
6400daa9:	or     DWORD PTR [esi],0x10
6400daac:	push   0x1
6400daae:	push   esi
6400daaf:	call   0x6400d960
6400dab4:	mov    DWORD PTR [esi+0x30],edi
6400dab7:	jmp    0x6400db7b
6400dabc:	or     DWORD PTR [esi],0x20
6400dabf:	push   0x1
6400dac1:	push   esi
6400dac2:	call   0x6400d960
6400dac7:	mov    DWORD PTR [esi+0x30],edi
6400daca:	jmp    0x6400db7b
6400dacf:	or     DWORD PTR [esi],0x40
6400dad2:	push   0x1
6400dad4:	push   esi
6400dad5:	call   0x6400d960
6400dada:	mov    DWORD PTR [esi+0x30],edi
6400dadd:	jmp    0x6400db7b
6400dae2:	or     DWORD PTR [esi],0x80
6400dae8:	push   0x2
6400daea:	push   esi
6400daeb:	call   0x6400d960
6400daf0:	mov    DWORD PTR [esi+0x34],edi
6400daf3:	jmp    0x6400db7b
6400daf8:	or     DWORD PTR [esi],0x100
6400dafe:	push   0x2
6400db00:	push   esi
6400db01:	call   0x6400d960
6400db06:	mov    DWORD PTR [esi+0x34],edi
6400db09:	jmp    0x6400db7b
6400db0b:	or     DWORD PTR [esi],0x200
6400db11:	push   0x2
6400db13:	push   esi
6400db14:	call   0x6400d960
6400db19:	mov    DWORD PTR [esi+0x34],edi
6400db1c:	jmp    0x6400db7b
6400db1e:	or     DWORD PTR [esi],0x400
6400db24:	push   0x2
6400db26:	push   esi
6400db27:	call   0x6400d960
6400db2c:	mov    DWORD PTR [esi+0x34],edi
6400db2f:	jmp    0x6400db7b
6400db31:	or     DWORD PTR [esi],0x800
6400db37:	push   0x2
6400db39:	push   esi
6400db3a:	call   0x6400d960
6400db3f:	mov    DWORD PTR [esi+0x34],edi
6400db42:	jmp    0x6400db7b
6400db44:	or     DWORD PTR [esi],0x1000
6400db4a:	push   0x2
6400db4c:	push   esi
6400db4d:	call   0x6400d960
6400db52:	mov    DWORD PTR [esi+0x34],edi
6400db55:	jmp    0x6400db7b
6400db57:	or     DWORD PTR [esi],0x2000
6400db5d:	push   0x3
6400db5f:	push   esi
6400db60:	call   0x6400d960
6400db65:	mov    DWORD PTR [esi+0x38],edi
6400db68:	jmp    0x6400db7b
6400db6a:	or     DWORD PTR [esi],0x4000
6400db70:	push   0x4
6400db72:	push   esi
6400db73:	call   0x6400d960
6400db78:	mov    DWORD PTR [esi+0x3c],edi
6400db7b:	add    esp,0x8
6400db7e:	mov    eax,DWORD PTR [esp+0x14]
6400db82:	sub    eax,0x1
6400db85:	add    ebx,0x1
6400db88:	add    edi,0x1
6400db8b:	test   eax,eax
6400db8d:	mov    DWORD PTR [esp+0x14],eax
6400db91:	jg     0x6400da47
6400db97:	mov    eax,0x2
6400db9c:	cmp    DWORD PTR [esp+0x14],eax
6400dba0:	mov    dl,0xc0
6400dba2:	jl     0x6400dbf1
6400dba4:	cmp    BYTE PTR [ebx],0xc5
6400dba7:	jne    0x6400dbf1
6400dba9:	mov    ecx,ebx
6400dbab:	sub    ecx,DWORD PTR [esi+0x8]
6400dbae:	cmp    ecx,0xd
6400dbb1:	jg     0x6400dbf1
6400dbb3:	cmp    DWORD PTR [esp+0x1c],eax
6400dbb7:	je     0x6400dbbe
6400dbb9:	cmp    BYTE PTR [ebx+0x1],dl
6400dbbc:	jb     0x6400dbf1
6400dbbe:	or     DWORD PTR [esi],0x20000000
6400dbc4:	lea    eax,[ebx+0x1]
6400dbc7:	mov    edi,0x2
6400dbcc:	mov    DWORD PTR [esi+0x10],eax
6400dbcf:	mov    DWORD PTR [esi+0x18],edi
6400dbd2:	mov    al,BYTE PTR [eax]
6400dbd4:	movzx  ecx,al
6400dbd7:	not    ecx
6400dbd9:	test   cl,cl
6400dbdb:	jns    0x6400dbe7
6400dbdd:	cmp    DWORD PTR [esp+0x1c],edi
6400dbe1:	jne    0x6400dbe7
6400dbe3:	or     DWORD PTR [esi+0x28],0x4
6400dbe7:	test   al,0x4
6400dbe9:	je     0x6400dbef
6400dbeb:	or     DWORD PTR [esi+0x28],0x10
6400dbef:	add    ebx,edi
6400dbf1:	mov    edi,0x3
6400dbf6:	cmp    DWORD PTR [esp+0x14],edi
6400dbfa:	jl     0x6400dc68
6400dbfc:	cmp    BYTE PTR [ebx],0xc4
6400dbff:	jne    0x6400dc68
6400dc01:	mov    eax,ebx
6400dc03:	sub    eax,DWORD PTR [esi+0x8]
6400dc06:	cmp    eax,0xc
6400dc09:	jg     0x6400dc68
6400dc0b:	mov    ecx,DWORD PTR [esi]
6400dc0d:	mov    eax,ecx
6400dc0f:	not    eax
6400dc11:	test   eax,0x20000000
6400dc16:	je     0x6400dc68
6400dc18:	cmp    DWORD PTR [esp+0x1c],0x2
6400dc1d:	je     0x6400dc24
6400dc1f:	cmp    BYTE PTR [ebx+0x1],dl
6400dc22:	jb     0x6400dc68
6400dc24:	or     ecx,0x20000000
6400dc2a:	lea    eax,[ebx+0x1]
6400dc2d:	mov    DWORD PTR [esi],ecx
6400dc2f:	mov    DWORD PTR [esi+0x10],eax
6400dc32:	mov    DWORD PTR [esi+0x18],edi
6400dc35:	movzx  ecx,BYTE PTR [eax]
6400dc38:	not    ecx
6400dc3a:	sar    ecx,0x5
6400dc3d:	and    ecx,0x7
6400dc40:	or     DWORD PTR [esi+0x28],ecx
6400dc43:	mov    al,BYTE PTR [eax+0x1]
6400dc46:	test   al,0x4
6400dc48:	mov    ecx,DWORD PTR [esi+0x28]
6400dc4b:	je     0x6400dc53
6400dc4d:	or     ecx,0x10
6400dc50:	mov    DWORD PTR [esi+0x28],ecx
6400dc53:	test   al,al
6400dc55:	jns    0x6400dc5b
6400dc57:	or     DWORD PTR [esi+0x28],0x8
6400dc5b:	cmp    DWORD PTR [esp+0x1c],0x2
6400dc60:	je     0x6400dc66
6400dc62:	and    DWORD PTR [esi+0x28],0xfffffff0
6400dc66:	add    ebx,edi
6400dc68:	pop    edi
6400dc69:	mov    DWORD PTR [esi+0xc],ebx
6400dc6c:	pop    esi
6400dc6d:	pop    ebx
6400dc6e:	ret    
6400dc6f:	nop
6400dc70:	push   ds
6400dc71:	fild   DWORD PTR [eax]
6400dc73:	fs loop 0x6400dc50
6400dc76:	add    BYTE PTR [eax+edi*8-0x26],ah
6400dc7a:	add    BYTE PTR [ebx+ecx*1-0x25],ah
6400dc7e:	add    BYTE PTR [esp+esi*2-0x26],ah
6400dc82:	add    BYTE PTR [ecx+esi*1-0x25],ah
6400dc86:	add    BYTE PTR [esp+eax*2-0x25],ah
6400dc8a:	add    BYTE PTR [edi+edx*2-0x25],ah
6400dc8e:	add    BYTE PTR [edx+ebp*2-0x25],ah
6400dc92:	add    BYTE PTR [ecx+ebp*4-0x26],ah
6400dc96:	add    BYTE PTR [esp+edi*4-0x26],ah
6400dc9a:	add    BYTE PTR [edi+ecx*8-0x26],ah
6400dc9e:	add    BYTE PTR [edi+edx*4-0x25],ah
6400dca2:	add    BYTE PTR [eax+eax*1+0xc],ah
6400dca6:	or     al,0xc
6400dca8:	or     al,0xc
6400dcaa:	or     al,0xc
6400dcac:	add    DWORD PTR [esp+ecx*1],ecx
6400dcaf:	or     al,0xc
6400dcb1:	or     al,0xc
6400dcb3:	or     al,0x2
6400dcb5:	or     al,0xc
6400dcb7:	or     al,0xc
6400dcb9:	or     al,0xc
6400dcbb:	or     al,0x3
6400dcbd:	or     al,0x4
6400dcbf:	add    al,0x4
6400dcc1:	add    al,0x4
6400dcc3:	add    al,0x4
6400dcc5:	add    al,0x4
6400dcc7:	add    al,0x4
6400dcc9:	add    al,0x4
6400dccb:	add    al,0x4
6400dccd:	add    al,0xc
6400dccf:	or     al,0xc
6400dcd1:	or     al,0xc
6400dcd3:	or     al,0xc
6400dcd5:	or     al,0xc
6400dcd7:	or     al,0xc
6400dcd9:	or     al,0xc
6400dcdb:	or     al,0xc
6400dcdd:	or     al,0xc
6400dcdf:	or     al,0xc
6400dce1:	or     al,0x5
6400dce3:	push   es
6400dce4:	pop    es
6400dce5:	or     BYTE PTR [esp+ecx*1],cl
6400dce8:	or     al,0xc
6400dcea:	or     al,0xc
6400dcec:	or     al,0xc
6400dcee:	or     al,0xc
6400dcf0:	or     al,0xc
6400dcf2:	or     al,0xc
6400dcf4:	or     al,0xc
6400dcf6:	or     al,0xc
6400dcf8:	or     al,0xc
6400dcfa:	or     al,0xc
6400dcfc:	or     al,0xc
6400dcfe:	or     al,0xc
6400dd00:	or     al,0xc
6400dd02:	or     al,0xc
6400dd04:	or     al,0xc
6400dd06:	or     al,0xc
6400dd08:	or     al,0xc
6400dd0a:	or     al,0xc
6400dd0c:	or     al,0xc
6400dd0e:	or     al,0xc
6400dd10:	or     al,0xc
6400dd12:	or     al,0xc
6400dd14:	or     al,0xc
6400dd16:	or     al,0xc
6400dd18:	or     al,0xc
6400dd1a:	or     al,0xc
6400dd1c:	or     al,0xc
6400dd1e:	or     al,0xc
6400dd20:	or     al,0xc
6400dd22:	or     al,0xc
6400dd24:	or     al,0xc
6400dd26:	or     al,0xc
6400dd28:	or     al,0xc
6400dd2a:	or     al,0xc
6400dd2c:	or     al,0xc
6400dd2e:	or     al,0xc
6400dd30:	or     al,0xc
6400dd32:	or     al,0xc
6400dd34:	or     al,0xc
6400dd36:	or     al,0xc
6400dd38:	or     al,0xc
6400dd3a:	or     al,0xc
6400dd3c:	or     al,0xc
6400dd3e:	or     al,0xc
6400dd40:	or     al,0xc
6400dd42:	or     al,0xc
6400dd44:	or     al,0xc
6400dd46:	or     al,0xc
6400dd48:	or     al,0xc
6400dd4a:	or     al,0xc
6400dd4c:	or     al,0xc
6400dd4e:	or     al,0xc
6400dd50:	or     al,0xc
6400dd52:	or     al,0xc
6400dd54:	or     al,0xc
6400dd56:	or     al,0xc
6400dd58:	or     al,0xc
6400dd5a:	or     al,0xc
6400dd5c:	or     al,0xc
6400dd5e:	or     al,0xc
6400dd60:	or     al,0xc
6400dd62:	or     al,0xc
6400dd64:	or     al,0xc
6400dd66:	or     al,0xc
6400dd68:	or     al,0xc
6400dd6a:	or     al,0xc
6400dd6c:	or     al,0xc
6400dd6e:	or     DWORD PTR [edx+ecx*1],ecx
6400dd71:	or     ecx,esp
6400dd73:	int3   
6400dd74:	int3   
6400dd75:	int3   
6400dd76:	int3   
6400dd77:	int3   
6400dd78:	int3   
6400dd79:	int3   
6400dd7a:	int3   
6400dd7b:	int3   
6400dd7c:	int3   
6400dd7d:	int3   
6400dd7e:	int3   
6400dd7f:	int3   
6400dd80:	push   esi
6400dd81:	mov    esi,DWORD PTR [esp+0xc]
6400dd85:	mov    eax,DWORD PTR [esi]
6400dd87:	push   edi
6400dd88:	mov    edi,DWORD PTR [esp+0x14]
6400dd8c:	cmp    edi,0x2
6400dd8f:	jne    0x6400dd98
6400dd91:	and    eax,0x1800
6400dd96:	jmp    0x6400dd9d
6400dd98:	and    eax,0x1f80
6400dd9d:	test   eax,eax
6400dd9f:	mov    ecx,DWORD PTR [esp+0x18]
6400dda3:	mov    edx,DWORD PTR [esp+0xc]
6400dda7:	je     0x6400ddb2
6400dda9:	cmp    eax,edx
6400ddab:	je     0x6400ddb2
6400ddad:	or     DWORD PTR [esi+0x4],eax
6400ddb0:	jmp    0x6400ddb8
6400ddb2:	or     BYTE PTR [ecx+0xc],0x80
6400ddb6:	mov    eax,edx
6400ddb8:	cmp    eax,0x400
6400ddbd:	ja     0x6400ddee
6400ddbf:	je     0x6400dde8
6400ddc1:	cmp    eax,0x80
6400ddc6:	je     0x6400dde2
6400ddc8:	cmp    eax,0x100
6400ddcd:	je     0x6400dddc
6400ddcf:	cmp    eax,0x200
6400ddd4:	jne    0x6400de06
6400ddd6:	or     BYTE PTR [ecx+0xc],0x47
6400ddda:	jmp    0x6400de06
6400dddc:	or     BYTE PTR [ecx+0xc],0x46
6400dde0:	jmp    0x6400de06
6400dde2:	or     BYTE PTR [ecx+0xc],0x45
6400dde6:	jmp    0x6400de06
6400dde8:	or     BYTE PTR [ecx+0xc],0x44
6400ddec:	jmp    0x6400de06
6400ddee:	cmp    eax,0x800
6400ddf3:	je     0x6400de02
6400ddf5:	cmp    eax,0x1000
6400ddfa:	jne    0x6400de06
6400ddfc:	or     BYTE PTR [ecx+0xc],0x49
6400de00:	jmp    0x6400de06
6400de02:	or     BYTE PTR [ecx+0xc],0x48
6400de06:	cmp    edi,0x2
6400de09:	pop    edi
6400de0a:	pop    esi
6400de0b:	jne    0x6400de18
6400de0d:	test   eax,0x780
6400de12:	je     0x6400de18
6400de14:	mov    BYTE PTR [ecx+0xc],0xff
6400de18:	ret    
6400de19:	int3   
6400de1a:	int3   
6400de1b:	int3   
6400de1c:	int3   
6400de1d:	int3   
6400de1e:	int3   
6400de1f:	int3   
6400de20:	mov    ecx,DWORD PTR [esi]
6400de22:	mov    eax,ecx
6400de24:	and    eax,0x2060
6400de29:	cmp    eax,0x40
6400de2c:	push   edi
6400de2d:	ja     0x6400de6f
6400de2f:	je     0x6400de5d
6400de31:	test   eax,eax
6400de33:	je     0x6400de4f
6400de35:	cmp    eax,0x20
6400de38:	jne    0x6400de76
6400de3a:	mov    eax,DWORD PTR [edx+0x4]
6400de3d:	movzx  eax,BYTE PTR [eax+0x3]
6400de41:	mov    edi,DWORD PTR [edx+0x8]
6400de44:	mov    eax,DWORD PTR [edi+eax*4]
6400de47:	and    ecx,0xffffffdf
6400de4a:	jmp    0x6400ded6
6400de4f:	mov    ecx,DWORD PTR [edx+0x4]
6400de52:	movzx  eax,BYTE PTR [ecx]
6400de55:	mov    ecx,DWORD PTR [edx+0x8]
6400de58:	mov    eax,DWORD PTR [ecx+eax*4]
6400de5b:	jmp    0x6400ded8
6400de5d:	mov    eax,DWORD PTR [edx+0x4]
6400de60:	movzx  eax,BYTE PTR [eax+0x2]
6400de64:	mov    edi,DWORD PTR [edx+0x8]
6400de67:	mov    eax,DWORD PTR [edi+eax*4]
6400de6a:	and    ecx,0xffffffbf
6400de6d:	jmp    0x6400ded6
6400de6f:	cmp    eax,0x2000
6400de74:	je     0x6400debc
6400de76:	mov    eax,ecx
6400de78:	and    eax,0x60
6400de7b:	cmp    al,0x60
6400de7d:	je     0x6400deb8
6400de7f:	test   cl,0x20
6400de82:	je     0x6400de90
6400de84:	mov    eax,DWORD PTR [edx+0x4]
6400de87:	movzx  eax,BYTE PTR [eax+0x3]
6400de8b:	and    ecx,0xffffffdf
6400de8e:	jmp    0x6400de9f
6400de90:	test   cl,0x40
6400de93:	je     0x6400deb8
6400de95:	mov    eax,DWORD PTR [edx+0x4]
6400de98:	movzx  eax,BYTE PTR [eax+0x2]
6400de9c:	and    ecx,0xffffffbf
6400de9f:	mov    edi,DWORD PTR [edx+0x8]
6400dea2:	mov    eax,DWORD PTR [edi+eax*4]
6400dea5:	test   eax,eax
6400dea7:	mov    DWORD PTR [esi],ecx
6400dea9:	je     0x6400deb8
6400deab:	mov    ecx,DWORD PTR [eax+0x8]
6400deae:	not    ecx
6400deb0:	test   ecx,0x2000
6400deb6:	je     0x6400ded8
6400deb8:	xor    eax,eax
6400deba:	pop    edi
6400debb:	ret    
6400debc:	mov    eax,DWORD PTR [edx+0x4]
6400debf:	movzx  eax,BYTE PTR [eax+0x1]
6400dec3:	mov    edi,DWORD PTR [edx+0x8]
6400dec6:	mov    eax,DWORD PTR [edi+eax*4]
6400dec9:	mov    DWORD PTR [esi+0x20],0x1
6400ded0:	and    ecx,0xffffdfff
6400ded6:	mov    DWORD PTR [esi],ecx
6400ded8:	test   eax,eax
6400deda:	jne    0x6400dee8
6400dedc:	mov    ecx,DWORD PTR [edx+0x4]
6400dedf:	movzx  eax,BYTE PTR [ecx]
6400dee2:	mov    ecx,DWORD PTR [edx+0x8]
6400dee5:	mov    eax,DWORD PTR [ecx+eax*4]
6400dee8:	pop    edi
6400dee9:	ret    
6400deea:	int3   
6400deeb:	int3   
6400deec:	int3   
6400deed:	int3   
6400deee:	int3   
6400deef:	int3   
6400def0:	test   DWORD PTR [edx],0x2002070
6400def6:	mov    ecx,DWORD PTR [edx+0x10]
6400def9:	mov    al,BYTE PTR [ecx]
6400defb:	push   ebx
6400defc:	mov    ebx,0x4
6400df01:	je     0x6400df07
6400df03:	xor    eax,eax
6400df05:	pop    ebx
6400df06:	ret    
6400df07:	cmp    DWORD PTR [edx+0x18],0x2
6400df0b:	push   ebp
6400df0c:	push   esi
6400df0d:	jne    0x6400df28
6400df0f:	movzx  ecx,al
6400df12:	mov    eax,ecx
6400df14:	not    eax
6400df16:	sar    eax,0x3
6400df19:	and    al,0xf
6400df1b:	movzx  esi,al
6400df1e:	mov    DWORD PTR [edx+0x24],esi
6400df21:	mov    esi,0x1
6400df26:	jmp    0x6400df40
6400df28:	movzx  ecx,BYTE PTR [ecx+0x1]
6400df2c:	and    eax,0x1f
6400df2f:	mov    esi,eax
6400df31:	mov    eax,ecx
6400df33:	not    eax
6400df35:	sar    eax,0x3
6400df38:	and    al,0xf
6400df3a:	movzx  ebp,al
6400df3d:	mov    DWORD PTR [edx+0x24],ebp
6400df40:	and    ecx,0x3
6400df43:	sub    esi,0x1
6400df46:	je     0x6400df64
6400df48:	sub    esi,0x1
6400df4b:	je     0x6400df5d
6400df4d:	sub    esi,0x1
6400df50:	jne    0x6400e001
6400df56:	mov    edx,0x640333d4
6400df5b:	jmp    0x6400df69
6400df5d:	mov    edx,0x64034f44
6400df62:	jmp    0x6400df69
6400df64:	mov    edx,0x640367c0
6400df69:	test   al,al
6400df6b:	jne    0x6400df72
6400df6d:	mov    ebx,0x8
6400df72:	add    ebx,ecx
6400df74:	add    DWORD PTR [edi+0x14],0xffffffff
6400df78:	mov    esi,DWORD PTR [edi+0x14]
6400df7b:	js     0x6400e001
6400df81:	mov    ecx,DWORD PTR [edi+0x10]
6400df84:	movzx  eax,BYTE PTR [ecx]
6400df87:	mov    ebp,DWORD PTR [edx+0x4]
6400df8a:	movzx  eax,BYTE PTR [eax+ebp*1]
6400df8e:	mov    edx,DWORD PTR [edx+0x8]
6400df91:	mov    eax,DWORD PTR [edx+eax*4]
6400df94:	test   eax,eax
6400df96:	je     0x6400e001
6400df98:	mov    dl,BYTE PTR [eax]
6400df9a:	cmp    dl,0x5
6400df9d:	je     0x6400dff0
6400df9f:	cmp    dl,0x1
6400dfa2:	je     0x6400e001
6400dfa4:	cmp    dl,0x4
6400dfa7:	je     0x6400e001
6400dfa9:	lea    edx,[ecx+0x1]
6400dfac:	lea    ecx,[esi-0x1]
6400dfaf:	test   ecx,ecx
6400dfb1:	mov    DWORD PTR [edi+0x10],edx
6400dfb4:	mov    DWORD PTR [edi+0x14],ecx
6400dfb7:	jl     0x6400e001
6400dfb9:	mov    cl,BYTE PTR [eax]
6400dfbb:	cmp    cl,0x2
6400dfbe:	jne    0x6400dfd2
6400dfc0:	movzx  ecx,BYTE PTR [edx]
6400dfc3:	mov    edx,DWORD PTR [eax+0x4]
6400dfc6:	shr    ecx,0x3
6400dfc9:	and    ecx,0x7
6400dfcc:	movzx  ecx,BYTE PTR [ecx+edx*1]
6400dfd0:	jmp    0x6400dfe1
6400dfd2:	cmp    cl,0x3
6400dfd5:	jne    0x6400e001
6400dfd7:	movzx  ecx,BYTE PTR [edx]
6400dfda:	mov    edx,DWORD PTR [eax+0x4]
6400dfdd:	movzx  ecx,BYTE PTR [edx+ecx*1]
6400dfe1:	mov    edx,DWORD PTR [eax+0x8]
6400dfe4:	mov    eax,DWORD PTR [edx+ecx*4]
6400dfe7:	test   eax,eax
6400dfe9:	je     0x6400e001
6400dfeb:	cmp    BYTE PTR [eax],0x5
6400dfee:	jne    0x6400e001
6400dff0:	mov    ecx,DWORD PTR [eax+0x4]
6400dff3:	movzx  edx,BYTE PTR [ecx+ebx*1]
6400dff7:	mov    eax,DWORD PTR [eax+0x8]
6400dffa:	mov    eax,DWORD PTR [eax+edx*4]
6400dffd:	pop    esi
6400dffe:	pop    ebp
6400dfff:	pop    ebx
6400e000:	ret    
6400e001:	pop    esi
6400e002:	pop    ebp
6400e003:	xor    eax,eax
6400e005:	pop    ebx
6400e006:	ret    
6400e007:	int3   
6400e008:	int3   
6400e009:	int3   
6400e00a:	int3   
6400e00b:	int3   
6400e00c:	int3   
6400e00d:	int3   
6400e00e:	int3   
6400e00f:	int3   
6400e010:	sub    esp,0x8
6400e013:	push   ebx
6400e014:	push   esi
6400e015:	mov    esi,DWORD PTR [esp+0x18]
6400e019:	mov    eax,DWORD PTR [esi+0x28]
6400e01c:	xor    ebx,ebx
6400e01e:	test   DWORD PTR [esi],0x20000000
6400e024:	push   edi
6400e025:	mov    edi,DWORD PTR [esp+0x18]
6400e029:	mov    DWORD PTR [esp+0x10],eax
6400e02d:	je     0x6400e05f
6400e02f:	mov    edx,esi
6400e031:	call   0x6400def0
6400e036:	test   eax,eax
6400e038:	je     0x6400e2f8
6400e03e:	test   BYTE PTR [eax+0xc],0x10
6400e042:	je     0x6400e2f8
6400e048:	mov    ecx,DWORD PTR [esi+0x28]
6400e04b:	not    ecx
6400e04d:	test   cl,0x10
6400e050:	je     0x6400e2f8
6400e056:	pop    edi
6400e057:	pop    esi
6400e058:	xor    eax,eax
6400e05a:	pop    ebx
6400e05b:	add    esp,0x8
6400e05e:	ret    
6400e05f:	push   ebp
6400e060:	or     ebp,0xffffffff
6400e063:	add    DWORD PTR [edi+0x14],ebp
6400e066:	mov    eax,DWORD PTR [edi+0x14]
6400e069:	js     0x6400e2f5
6400e06f:	mov    edx,DWORD PTR [edi+0x10]
6400e072:	movzx  ecx,BYTE PTR [edx]
6400e075:	cmp    ecx,0x9b
6400e07b:	mov    DWORD PTR [esp+0x10],ecx
6400e07f:	jne    0x6400e0a6
6400e081:	push   esi
6400e082:	lea    ebx,[ebp+0x2]
6400e085:	call   0x6400d980
6400e08a:	add    DWORD PTR [edi+0x10],ebx
6400e08d:	mov    ecx,DWORD PTR [edi+0x10]
6400e090:	add    esp,0x4
6400e093:	add    DWORD PTR [edi+0x14],ebp
6400e096:	mov    eax,DWORD PTR [edi+0x14]
6400e099:	js     0x6400e2f5
6400e09f:	movzx  ecx,BYTE PTR [ecx]
6400e0a2:	mov    DWORD PTR [esp+0x10],ecx
6400e0a6:	mov    edx,DWORD PTR ds:0x64037520
6400e0ac:	movzx  edx,BYTE PTR [edx+ecx*1]
6400e0b0:	mov    ebp,DWORD PTR ds:0x64037524
6400e0b6:	mov    ebp,DWORD PTR [ebp+edx*4+0x0]
6400e0ba:	test   ebp,ebp
6400e0bc:	je     0x6400e2f5
6400e0c2:	cmp    BYTE PTR [ebp+0x0],0x1
6400e0c6:	jne    0x6400e15a
6400e0cc:	test   ebx,ebx
6400e0ce:	jne    0x6400e15a
6400e0d4:	mov    eax,ecx
6400e0d6:	sub    eax,0x63
6400e0d9:	je     0x6400e13e
6400e0db:	sub    eax,0x2a
6400e0de:	je     0x6400e123
6400e0e0:	sub    eax,0x3
6400e0e3:	jne    0x6400e134
6400e0e5:	test   BYTE PTR [esi],0x40
6400e0e8:	je     0x6400e0fb
6400e0ea:	or     DWORD PTR [esi+0x4],0x40
6400e0ee:	pop    ebp
6400e0ef:	pop    edi
6400e0f0:	pop    esi
6400e0f1:	mov    eax,0x64037558
6400e0f6:	pop    ebx
6400e0f7:	add    esp,0x8
6400e0fa:	ret    
6400e0fb:	mov    eax,DWORD PTR [esp+0x14]
6400e0ff:	test   al,0x8
6400e101:	je     0x6400e10a
6400e103:	or     DWORD PTR [esi+0x4],0x2000000
6400e10a:	cmp    DWORD PTR [edi+0x18],0x2
6400e10e:	jne    0x6400e116
6400e110:	not    eax
6400e112:	test   al,0x1
6400e114:	je     0x6400e134
6400e116:	pop    ebp
6400e117:	pop    edi
6400e118:	pop    esi
6400e119:	mov    eax,0x6403754c
6400e11e:	pop    ebx
6400e11f:	add    esp,0x8
6400e122:	ret    
6400e123:	and    DWORD PTR [esi],0xffffe07f
6400e129:	push   0x2
6400e12b:	push   esi
6400e12c:	call   0x6400d960
6400e131:	add    esp,0x8
6400e134:	mov    eax,ebp
6400e136:	pop    ebp
6400e137:	pop    edi
6400e138:	pop    esi
6400e139:	pop    ebx
6400e13a:	add    esp,0x8
6400e13d:	ret    
6400e13e:	cmp    DWORD PTR [edi+0x18],0x2
6400e142:	mov    eax,0x64037534
6400e147:	je     0x6400e2f7
6400e14d:	pop    ebp
6400e14e:	pop    edi
6400e14f:	pop    esi
6400e150:	mov    eax,0x64037528
6400e155:	pop    ebx
6400e156:	add    esp,0x8
6400e159:	ret    
6400e15a:	add    DWORD PTR [edi+0x10],0x1
6400e15e:	mov    esi,DWORD PTR [edi+0x10]
6400e161:	lea    edx,[eax-0x1]
6400e164:	test   edx,edx
6400e166:	mov    DWORD PTR [edi+0x14],edx
6400e169:	jl     0x6400e2f5
6400e16f:	mov    cl,BYTE PTR [ebp+0x0]
6400e172:	cmp    cl,0x2
6400e175:	movzx  eax,BYTE PTR [esi]
6400e178:	jne    0x6400e199
6400e17a:	test   ebx,ebx
6400e17c:	jne    0x6400e199
6400e17e:	mov    ecx,DWORD PTR [ebp+0x4]
6400e181:	shr    eax,0x3
6400e184:	and    eax,0x7
6400e187:	movzx  edx,BYTE PTR [eax+ecx*1]
6400e18b:	mov    eax,DWORD PTR [ebp+0x8]
6400e18e:	mov    eax,DWORD PTR [eax+edx*4]
6400e191:	pop    ebp
6400e192:	pop    edi
6400e193:	pop    esi
6400e194:	pop    ebx
6400e195:	add    esp,0x8
6400e198:	ret    
6400e199:	cmp    cl,0x4
6400e19c:	jne    0x6400e202
6400e19e:	cmp    eax,0xc0
6400e1a3:	jae    0x6400e1ad
6400e1a5:	shr    eax,0x3
6400e1a8:	and    eax,0x7
6400e1ab:	jmp    0x6400e1b2
6400e1ad:	sub    eax,0xb8
6400e1b2:	mov    ecx,DWORD PTR [ebp+0x4]
6400e1b5:	movzx  edx,BYTE PTR [ecx+eax*1]
6400e1b9:	mov    eax,DWORD PTR [ebp+0x8]
6400e1bc:	mov    eax,DWORD PTR [eax+edx*4]
6400e1bf:	test   eax,eax
6400e1c1:	je     0x6400e2f5
6400e1c7:	cmp    BYTE PTR [eax],0x1
6400e1ca:	jne    0x6400e1ed
6400e1cc:	mov    ecx,DWORD PTR [eax+0x8]
6400e1cf:	not    ecx
6400e1d1:	test   ecx,0x2000
6400e1d7:	je     0x6400e2f7
6400e1dd:	test   ebx,ebx
6400e1df:	jne    0x6400e2f5
6400e1e5:	pop    ebp
6400e1e6:	pop    edi
6400e1e7:	pop    esi
6400e1e8:	pop    ebx
6400e1e9:	add    esp,0x8
6400e1ec:	ret    
6400e1ed:	mov    edx,DWORD PTR [eax+0x4]
6400e1f0:	movzx  ecx,BYTE PTR [edx+ebx*1]
6400e1f4:	mov    edx,DWORD PTR [eax+0x8]
6400e1f7:	mov    eax,DWORD PTR [edx+ecx*4]
6400e1fa:	pop    ebp
6400e1fb:	pop    edi
6400e1fc:	pop    esi
6400e1fd:	pop    ebx
6400e1fe:	add    esp,0x8
6400e201:	ret    
6400e202:	test   ebx,ebx
6400e204:	jne    0x6400e2f5
6400e20a:	cmp    cl,0x3
6400e20d:	jne    0x6400e25f
6400e20f:	mov    ecx,DWORD PTR [ebp+0x4]
6400e212:	movzx  ecx,BYTE PTR [ecx+eax*1]
6400e216:	mov    ebx,DWORD PTR [ebp+0x8]
6400e219:	mov    ebp,DWORD PTR [ebx+ecx*4]
6400e21c:	test   ebp,ebp
6400e21e:	je     0x6400e2f5
6400e224:	cmp    DWORD PTR [esp+0x10],0xf
6400e229:	jne    0x6400e23d
6400e22b:	cmp    eax,0xf
6400e22e:	jne    0x6400e23d
6400e230:	pop    ebp
6400e231:	pop    edi
6400e232:	pop    esi
6400e233:	mov    eax,0x6402e15c
6400e238:	pop    ebx
6400e239:	add    esp,0x8
6400e23c:	ret    
6400e23d:	mov    al,BYTE PTR [ebp+0x0]
6400e240:	cmp    al,0x1
6400e242:	je     0x6400e134
6400e248:	cmp    al,0x5
6400e24a:	jne    0x6400e25f
6400e24c:	mov    esi,DWORD PTR [esp+0x20]
6400e250:	mov    edx,ebp
6400e252:	call   0x6400de20
6400e257:	pop    ebp
6400e258:	pop    edi
6400e259:	pop    esi
6400e25a:	pop    ebx
6400e25b:	add    esp,0x8
6400e25e:	ret    
6400e25f:	lea    ecx,[edx-0x1]
6400e262:	test   ecx,ecx
6400e264:	lea    eax,[esi+0x1]
6400e267:	mov    DWORD PTR [edi+0x10],eax
6400e26a:	mov    DWORD PTR [edi+0x14],ecx
6400e26d:	jl     0x6400e2f5
6400e273:	movzx  ecx,BYTE PTR [eax]
6400e276:	mov    edi,DWORD PTR [ebp+0x4]
6400e279:	mov    esi,DWORD PTR [ebp+0x8]
6400e27c:	mov    edx,ecx
6400e27e:	shr    edx,0x3
6400e281:	and    edx,0x7
6400e284:	movzx  eax,BYTE PTR [edx+edi*1]
6400e288:	mov    dl,BYTE PTR [ebp+0x0]
6400e28b:	cmp    dl,0x2
6400e28e:	mov    eax,DWORD PTR [esi+eax*4]
6400e291:	jne    0x6400e2af
6400e293:	test   eax,eax
6400e295:	je     0x6400e2f5
6400e297:	cmp    BYTE PTR [eax],0x1
6400e29a:	je     0x6400e2f7
6400e29c:	mov    esi,DWORD PTR [esp+0x20]
6400e2a0:	mov    edx,eax
6400e2a2:	call   0x6400de20
6400e2a7:	pop    ebp
6400e2a8:	pop    edi
6400e2a9:	pop    esi
6400e2aa:	pop    ebx
6400e2ab:	add    esp,0x8
6400e2ae:	ret    
6400e2af:	cmp    dl,0x4
6400e2b2:	jne    0x6400e2d9
6400e2b4:	test   eax,eax
6400e2b6:	je     0x6400e2be
6400e2b8:	test   BYTE PTR [eax+0x8],0x2
6400e2bc:	jne    0x6400e2f7
6400e2be:	cmp    ecx,0xc0
6400e2c4:	jb     0x6400e2f7
6400e2c6:	movzx  ecx,BYTE PTR [edi+ecx*1-0xb8]
6400e2ce:	mov    eax,DWORD PTR [esi+ecx*4]
6400e2d1:	pop    ebp
6400e2d2:	pop    edi
6400e2d3:	pop    esi
6400e2d4:	pop    ebx
6400e2d5:	add    esp,0x8
6400e2d8:	ret    
6400e2d9:	cmp    dl,0x3
6400e2dc:	jne    0x6400e2f5
6400e2de:	movzx  edx,BYTE PTR [edi+ecx*1]
6400e2e2:	mov    eax,DWORD PTR [esi+edx*4]
6400e2e5:	test   eax,eax
6400e2e7:	je     0x6400e2f5
6400e2e9:	mov    cl,BYTE PTR [eax]
6400e2eb:	cmp    cl,0x1
6400e2ee:	je     0x6400e2f7
6400e2f0:	cmp    cl,0x5
6400e2f3:	je     0x6400e29c
6400e2f5:	xor    eax,eax
6400e2f7:	pop    ebp
6400e2f8:	pop    edi
6400e2f9:	pop    esi
6400e2fa:	pop    ebx
6400e2fb:	add    esp,0x8
6400e2fe:	ret    
6400e2ff:	int3   
6400e300:	mov    ecx,DWORD PTR [esp+0x4]
6400e304:	push   esi
6400e305:	mov    esi,DWORD PTR [ecx+0x14]
6400e308:	cmp    esi,0x1
6400e30b:	jl     0x6400e33f
6400e30d:	mov    edx,DWORD PTR [ecx+0x10]
6400e310:	movzx  eax,BYTE PTR [edx]
6400e313:	push   edi
6400e314:	mov    edi,DWORD PTR ds:0x64035a48
6400e31a:	movzx  eax,BYTE PTR [eax+edi*1]
6400e31e:	mov    edi,DWORD PTR ds:0x64035a4c
6400e324:	mov    eax,DWORD PTR [edi+eax*4]
6400e327:	test   eax,eax
6400e329:	pop    edi
6400e32a:	je     0x6400e33f
6400e32c:	cmp    BYTE PTR [eax],0x1
6400e32f:	jne    0x6400e33f
6400e331:	add    esi,0xffffffff
6400e334:	add    edx,0x1
6400e337:	mov    DWORD PTR [ecx+0x14],esi
6400e33a:	mov    DWORD PTR [ecx+0x10],edx
6400e33d:	pop    esi
6400e33e:	ret    
6400e33f:	xor    eax,eax
6400e341:	pop    esi
6400e342:	ret    
6400e343:	int3   
6400e344:	int3   
6400e345:	int3   
6400e346:	int3   
6400e347:	int3   
6400e348:	int3   
6400e349:	int3   
6400e34a:	int3   
6400e34b:	int3   
6400e34c:	int3   
6400e34d:	int3   
6400e34e:	int3   
6400e34f:	int3   
6400e350:	mov    edx,DWORD PTR [esp+0x4]
6400e354:	xor    ecx,ecx
6400e356:	cmp    edx,ecx
6400e358:	je     0x6400e3a7
6400e35a:	mov    eax,DWORD PTR [edx+0x1c]
6400e35d:	cmp    eax,ecx
6400e35f:	je     0x6400e3a7
6400e361:	mov    DWORD PTR [eax+0x1c],ecx
6400e364:	mov    DWORD PTR [edx+0x14],ecx
6400e367:	mov    DWORD PTR [edx+0x8],ecx
6400e36a:	mov    DWORD PTR [edx+0x18],ecx
6400e36d:	mov    DWORD PTR [edx+0x30],0x1
6400e374:	mov    DWORD PTR [eax],ecx
6400e376:	mov    DWORD PTR [eax+0x4],ecx
6400e379:	mov    DWORD PTR [eax+0xc],ecx
6400e37c:	mov    DWORD PTR [eax+0x20],ecx
6400e37f:	mov    DWORD PTR [eax+0x28],ecx
6400e382:	mov    DWORD PTR [eax+0x2c],ecx
6400e385:	mov    DWORD PTR [eax+0x30],ecx
6400e388:	mov    DWORD PTR [eax+0x38],ecx
6400e38b:	mov    DWORD PTR [eax+0x3c],ecx
6400e38e:	lea    ecx,[eax+0x530]
6400e394:	mov    DWORD PTR [eax+0x14],0x8000
6400e39b:	mov    DWORD PTR [eax+0x6c],ecx
6400e39e:	mov    DWORD PTR [eax+0x50],ecx
6400e3a1:	mov    DWORD PTR [eax+0x4c],ecx
6400e3a4:	xor    eax,eax
6400e3a6:	ret    
6400e3a7:	mov    eax,0xfffffffe
6400e3ac:	ret    
6400e3ad:	int3   
6400e3ae:	int3   
6400e3af:	int3   
6400e3b0:	mov    eax,DWORD PTR [esp+0xc]
6400e3b4:	push   edi
6400e3b5:	xor    edi,edi
6400e3b7:	cmp    eax,edi
6400e3b9:	je     0x6400e474
6400e3bf:	cmp    BYTE PTR [eax],0x31
6400e3c2:	jne    0x6400e474
6400e3c8:	cmp    DWORD PTR [esp+0x14],0x38
6400e3cd:	jne    0x6400e474
6400e3d3:	push   esi
6400e3d4:	mov    esi,DWORD PTR [esp+0xc]
6400e3d8:	cmp    esi,edi
6400e3da:	je     0x6400e46c
6400e3e0:	cmp    DWORD PTR [esi+0x20],edi
6400e3e3:	mov    DWORD PTR [esi+0x18],edi
6400e3e6:	jne    0x6400e3f2
6400e3e8:	mov    DWORD PTR [esi+0x20],0x64010810
6400e3ef:	mov    DWORD PTR [esi+0x28],edi
6400e3f2:	cmp    DWORD PTR [esi+0x24],edi
6400e3f5:	jne    0x6400e3fe
6400e3f7:	mov    DWORD PTR [esi+0x24],0x64010830
6400e3fe:	mov    eax,DWORD PTR [esi+0x28]
6400e401:	mov    ecx,DWORD PTR [esi+0x20]
6400e404:	push   0x2530
6400e409:	push   0x1
6400e40b:	push   eax
6400e40c:	call   ecx
6400e40e:	add    esp,0xc
6400e411:	cmp    eax,edi
6400e413:	jne    0x6400e41d
6400e415:	pop    esi
6400e416:	mov    eax,0xfffffffc
6400e41b:	pop    edi
6400e41c:	ret    
6400e41d:	mov    ecx,DWORD PTR [esp+0x10]
6400e421:	cmp    ecx,edi
6400e423:	mov    DWORD PTR [esi+0x1c],eax
6400e426:	jge    0x6400e42f
6400e428:	mov    DWORD PTR [eax+0x8],edi
6400e42b:	neg    ecx
6400e42d:	jmp    0x6400e442
6400e42f:	mov    edx,ecx
6400e431:	sar    edx,0x4
6400e434:	add    edx,0x1
6400e437:	cmp    ecx,0x30
6400e43a:	mov    DWORD PTR [eax+0x8],edx
6400e43d:	jge    0x6400e442
6400e43f:	and    ecx,0xf
6400e442:	lea    edx,[ecx-0x8]
6400e445:	cmp    edx,0x7
6400e448:	ja     0x6400e45c
6400e44a:	push   esi
6400e44b:	mov    DWORD PTR [eax+0x24],ecx
6400e44e:	mov    DWORD PTR [eax+0x34],edi
6400e451:	call   0x6400e350
6400e456:	add    esp,0x4
6400e459:	pop    esi
6400e45a:	pop    edi
6400e45b:	ret    
6400e45c:	mov    ecx,DWORD PTR [esi+0x24]
6400e45f:	push   eax
6400e460:	mov    eax,DWORD PTR [esi+0x28]
6400e463:	push   eax
6400e464:	call   ecx
6400e466:	add    esp,0x8
6400e469:	mov    DWORD PTR [esi+0x1c],edi
6400e46c:	pop    esi
6400e46d:	mov    eax,0xfffffffe
6400e472:	pop    edi
6400e473:	ret    
6400e474:	mov    eax,0xfffffffa
6400e479:	pop    edi
6400e47a:	ret    
6400e47b:	int3   
6400e47c:	int3   
6400e47d:	int3   
6400e47e:	int3   
6400e47f:	int3   
6400e480:	mov    DWORD PTR [eax+0x4c],0x64024410
6400e487:	mov    DWORD PTR [eax+0x54],0x9
6400e48e:	mov    DWORD PTR [eax+0x50],0x64024c10
6400e495:	mov    DWORD PTR [eax+0x58],0x5
6400e49c:	ret    
6400e49d:	int3   
6400e49e:	int3   
6400e49f:	int3   
6400e4a0:	push   ebp
6400e4a1:	push   esi
6400e4a2:	mov    esi,DWORD PTR [ebx+0x1c]
6400e4a5:	xor    ebp,ebp
6400e4a7:	cmp    DWORD PTR [esi+0x34],ebp
6400e4aa:	push   edi
6400e4ab:	mov    edi,eax
6400e4ad:	jne    0x6400e4d6
6400e4af:	mov    ecx,DWORD PTR [esi+0x24]
6400e4b2:	mov    edx,DWORD PTR [ebx+0x20]
6400e4b5:	mov    eax,0x1
6400e4ba:	shl    eax,cl
6400e4bc:	mov    ecx,DWORD PTR [ebx+0x28]
6400e4bf:	push   0x1
6400e4c1:	push   eax
6400e4c2:	push   ecx
6400e4c3:	call   edx
6400e4c5:	add    esp,0xc
6400e4c8:	cmp    eax,ebp
6400e4ca:	mov    DWORD PTR [esi+0x34],eax
6400e4cd:	jne    0x6400e4d6
6400e4cf:	pop    edi
6400e4d0:	pop    esi
6400e4d1:	lea    eax,[ebp+0x1]
6400e4d4:	pop    ebp
6400e4d5:	ret    
6400e4d6:	cmp    DWORD PTR [esi+0x28],ebp
6400e4d9:	jne    0x6400e4ee
6400e4db:	mov    ecx,DWORD PTR [esi+0x24]
6400e4de:	mov    eax,0x1
6400e4e3:	shl    eax,cl
6400e4e5:	mov    DWORD PTR [esi+0x30],ebp
6400e4e8:	mov    DWORD PTR [esi+0x2c],ebp
6400e4eb:	mov    DWORD PTR [esi+0x28],eax
6400e4ee:	sub    edi,DWORD PTR [ebx+0x10]
6400e4f1:	mov    eax,DWORD PTR [esi+0x28]
6400e4f4:	cmp    edi,eax
6400e4f6:	jb     0x6400e51a
6400e4f8:	mov    ecx,DWORD PTR [ebx+0xc]
6400e4fb:	mov    edx,DWORD PTR [esi+0x34]
6400e4fe:	push   eax
6400e4ff:	sub    ecx,eax
6400e501:	push   ecx
6400e502:	push   edx
6400e503:	call   0x640151e0
6400e508:	mov    eax,DWORD PTR [esi+0x28]
6400e50b:	add    esp,0xc
6400e50e:	pop    edi
6400e50f:	mov    DWORD PTR [esi+0x30],ebp
6400e512:	mov    DWORD PTR [esi+0x2c],eax
6400e515:	pop    esi
6400e516:	xor    eax,eax
6400e518:	pop    ebp
6400e519:	ret    
6400e51a:	sub    eax,DWORD PTR [esi+0x30]
6400e51d:	mov    ebp,eax
6400e51f:	cmp    ebp,edi
6400e521:	jbe    0x6400e525
6400e523:	mov    ebp,edi
6400e525:	mov    ecx,DWORD PTR [ebx+0xc]
6400e528:	mov    edx,DWORD PTR [esi+0x34]
6400e52b:	add    edx,DWORD PTR [esi+0x30]
6400e52e:	push   ebp
6400e52f:	sub    ecx,edi
6400e531:	push   ecx
6400e532:	push   edx
6400e533:	call   0x640151e0
6400e538:	add    esp,0xc
6400e53b:	sub    edi,ebp
6400e53d:	je     0x6400e561
6400e53f:	mov    eax,DWORD PTR [ebx+0xc]
6400e542:	mov    ecx,DWORD PTR [esi+0x34]
6400e545:	push   edi
6400e546:	sub    eax,edi
6400e548:	push   eax
6400e549:	push   ecx
6400e54a:	call   0x640151e0
6400e54f:	mov    edx,DWORD PTR [esi+0x28]
6400e552:	add    esp,0xc
6400e555:	mov    DWORD PTR [esi+0x30],edi
6400e558:	pop    edi
6400e559:	mov    DWORD PTR [esi+0x2c],edx
6400e55c:	pop    esi
6400e55d:	xor    eax,eax
6400e55f:	pop    ebp
6400e560:	ret    
6400e561:	add    DWORD PTR [esi+0x30],ebp
6400e564:	mov    ecx,DWORD PTR [esi+0x30]
6400e567:	mov    eax,DWORD PTR [esi+0x28]
6400e56a:	cmp    ecx,eax
6400e56c:	jne    0x6400e575
6400e56e:	mov    DWORD PTR [esi+0x30],0x0
6400e575:	mov    ecx,DWORD PTR [esi+0x2c]
6400e578:	cmp    ecx,eax
6400e57a:	jae    0x6400e581
6400e57c:	add    ecx,ebp
6400e57e:	mov    DWORD PTR [esi+0x2c],ecx
6400e581:	pop    edi
6400e582:	pop    esi
6400e583:	xor    eax,eax
6400e585:	pop    ebp
6400e586:	ret    
6400e587:	int3   
6400e588:	int3   
6400e589:	int3   
6400e58a:	int3   
6400e58b:	int3   
6400e58c:	int3   
6400e58d:	int3   
6400e58e:	int3   
6400e58f:	int3   
6400e590:	mov    eax,DWORD PTR [esp+0x4]
6400e594:	sub    esp,0x2c
6400e597:	test   eax,eax
6400e599:	push   edi
6400e59a:	je     0x6400faec
6400e5a0:	mov    edi,DWORD PTR [eax+0x1c]
6400e5a3:	test   edi,edi
6400e5a5:	je     0x6400faec
6400e5ab:	cmp    DWORD PTR [eax+0xc],0x0
6400e5af:	je     0x6400faec
6400e5b5:	cmp    DWORD PTR [eax],0x0
6400e5b8:	jne    0x6400e5c4
6400e5ba:	cmp    DWORD PTR [eax+0x4],0x0
6400e5be:	jne    0x6400faec
6400e5c4:	cmp    DWORD PTR [edi],0xb
6400e5c7:	jne    0x6400e5cf
6400e5c9:	mov    DWORD PTR [edi],0xc
6400e5cf:	mov    ecx,DWORD PTR [eax+0xc]
6400e5d2:	mov    edx,DWORD PTR [eax+0x4]
6400e5d5:	push   ebx
6400e5d6:	mov    ebx,DWORD PTR [edi+0x38]
6400e5d9:	push   ebp
6400e5da:	mov    ebp,DWORD PTR [eax]
6400e5dc:	mov    DWORD PTR [esp+0x24],ecx
6400e5e0:	mov    ecx,DWORD PTR [eax+0x10]
6400e5e3:	mov    eax,DWORD PTR [edi]
6400e5e5:	cmp    eax,0x1c
6400e5e8:	push   esi
6400e5e9:	mov    esi,DWORD PTR [edi+0x3c]
6400e5ec:	mov    DWORD PTR [esp+0x1c],ecx
6400e5f0:	mov    DWORD PTR [esp+0x10],edx
6400e5f4:	mov    DWORD PTR [esp+0x18],ebx
6400e5f8:	mov    DWORD PTR [esp+0x38],edx
6400e5fc:	mov    DWORD PTR [esp+0x2c],ecx
6400e600:	mov    DWORD PTR [esp+0x30],0x0
6400e608:	ja     0x6400f999
6400e60e:	mov    edi,edi
6400e610:	jmp    DWORD PTR [eax*4+0x6400faf8]
6400e617:	cmp    DWORD PTR [edi+0x8],0x0
6400e61b:	jne    0x6400e628
6400e61d:	mov    DWORD PTR [edi],0xc
6400e623:	jmp    0x6400f98e
6400e628:	cmp    esi,0x10
6400e62b:	jae    0x6400e658
6400e62d:	lea    ecx,[ecx+0x0]
6400e630:	test   edx,edx
6400e632:	je     0x6400f9ec
6400e638:	movzx  eax,BYTE PTR [ebp+0x0]
6400e63c:	mov    ecx,esi
6400e63e:	shl    eax,cl
6400e640:	sub    edx,0x1
6400e643:	add    esi,0x8
6400e646:	add    ebp,0x1
6400e649:	add    ebx,eax
6400e64b:	cmp    esi,0x10
6400e64e:	mov    DWORD PTR [esp+0x10],edx
6400e652:	mov    DWORD PTR [esp+0x18],ebx
6400e656:	jb     0x6400e630
6400e658:	test   BYTE PTR [edi+0x8],0x2
6400e65c:	je     0x6400e6ab
6400e65e:	cmp    ebx,0x8b1f
6400e664:	jne    0x6400e6ab
6400e666:	push   0x0
6400e668:	push   0x0
6400e66a:	push   0x0
6400e66c:	call   0x64011710
6400e671:	mov    DWORD PTR [edi+0x18],eax
6400e674:	push   0x2
6400e676:	lea    ecx,[esp+0x30]
6400e67a:	mov    BYTE PTR [esp+0x30],0x1f
6400e67f:	mov    BYTE PTR [esp+0x31],0x8b
6400e684:	mov    edx,DWORD PTR [edi+0x18]
6400e687:	push   ecx
6400e688:	push   edx
6400e689:	call   0x64011710
6400e68e:	mov    edx,DWORD PTR [esp+0x28]
6400e692:	xor    ebx,ebx
6400e694:	add    esp,0x18
6400e697:	mov    DWORD PTR [edi+0x18],eax
6400e69a:	mov    DWORD PTR [esp+0x18],ebx
6400e69e:	xor    esi,esi
6400e6a0:	mov    DWORD PTR [edi],0x1
6400e6a6:	jmp    0x6400f98e
6400e6ab:	mov    eax,DWORD PTR [edi+0x20]
6400e6ae:	test   eax,eax
6400e6b0:	mov    DWORD PTR [edi+0x10],0x0
6400e6b7:	je     0x6400e6c0
6400e6b9:	mov    DWORD PTR [eax+0x30],0xffffffff
6400e6c0:	test   BYTE PTR [edi+0x8],0x1
6400e6c4:	je     0x6400e771
6400e6ca:	movzx  eax,bl
6400e6cd:	shl    eax,0x8
6400e6d0:	mov    ecx,ebx
6400e6d2:	shr    ecx,0x8
6400e6d5:	add    eax,ecx
6400e6d7:	xor    edx,edx
6400e6d9:	mov    ecx,0x1f
6400e6de:	div    ecx
6400e6e0:	test   edx,edx
6400e6e2:	jne    0x6400e771
6400e6e8:	mov    edx,ebx
6400e6ea:	and    dl,0xf
6400e6ed:	cmp    dl,0x8
6400e6f0:	je     0x6400e706
6400e6f2:	mov    eax,DWORD PTR [esp+0x40]
6400e6f6:	mov    edx,DWORD PTR [esp+0x10]
6400e6fa:	mov    DWORD PTR [eax+0x18],0x64024e5c
6400e701:	jmp    0x6400f988
6400e706:	shr    ebx,0x4
6400e709:	mov    ecx,ebx
6400e70b:	and    ecx,0xf
6400e70e:	add    ecx,0x8
6400e711:	sub    esi,0x4
6400e714:	cmp    ecx,DWORD PTR [edi+0x24]
6400e717:	mov    DWORD PTR [esp+0x18],ebx
6400e71b:	jbe    0x6400e731
6400e71d:	mov    ecx,DWORD PTR [esp+0x40]
6400e721:	mov    edx,DWORD PTR [esp+0x10]
6400e725:	mov    DWORD PTR [ecx+0x18],0x64024e48
6400e72c:	jmp    0x6400f988
6400e731:	mov    edx,0x1
6400e736:	shl    edx,cl
6400e738:	push   0x0
6400e73a:	push   0x0
6400e73c:	push   0x0
6400e73e:	mov    DWORD PTR [edi+0x14],edx
6400e741:	call   0x640111f0
6400e746:	mov    ecx,DWORD PTR [esp+0x4c]
6400e74a:	mov    edx,DWORD PTR [esp+0x1c]
6400e74e:	shr    ebx,0x8
6400e751:	not    ebx
6400e753:	and    ebx,0x2
6400e756:	or     ebx,0x9
6400e759:	mov    DWORD PTR [edi+0x18],eax
6400e75c:	mov    DWORD PTR [ecx+0x30],eax
6400e75f:	mov    DWORD PTR [edi],ebx
6400e761:	xor    ebx,ebx
6400e763:	add    esp,0xc
6400e766:	mov    DWORD PTR [esp+0x18],ebx
6400e76a:	xor    esi,esi
6400e76c:	jmp    0x6400f98e
6400e771:	mov    edx,DWORD PTR [esp+0x40]
6400e775:	mov    DWORD PTR [edx+0x18],0x64024e30
6400e77c:	mov    edx,DWORD PTR [esp+0x10]
6400e780:	jmp    0x6400f988
6400e785:	cmp    esi,0x10
6400e788:	jae    0x6400e7b8
6400e78a:	lea    ebx,[ebx+0x0]
6400e790:	test   edx,edx
6400e792:	je     0x6400f9ec
6400e798:	movzx  eax,BYTE PTR [ebp+0x0]
6400e79c:	mov    ecx,esi
6400e79e:	shl    eax,cl
6400e7a0:	sub    edx,0x1
6400e7a3:	add    esi,0x8
6400e7a6:	add    ebp,0x1
6400e7a9:	add    ebx,eax
6400e7ab:	cmp    esi,0x10
6400e7ae:	mov    DWORD PTR [esp+0x10],edx
6400e7b2:	mov    DWORD PTR [esp+0x18],ebx
6400e7b6:	jb     0x6400e790
6400e7b8:	cmp    bl,0x8
6400e7bb:	mov    DWORD PTR [edi+0x10],ebx
6400e7be:	je     0x6400e7d0
6400e7c0:	mov    ecx,DWORD PTR [esp+0x40]
6400e7c4:	mov    DWORD PTR [ecx+0x18],0x64024e5c
6400e7cb:	jmp    0x6400f988
6400e7d0:	test   ebx,0xe000
6400e7d6:	je     0x6400e7e8
6400e7d8:	mov    eax,DWORD PTR [esp+0x40]
6400e7dc:	mov    DWORD PTR [eax+0x18],0x64024e14
6400e7e3:	jmp    0x6400f988
6400e7e8:	mov    eax,DWORD PTR [edi+0x20]
6400e7eb:	test   eax,eax
6400e7ed:	je     0x6400e7f9
6400e7ef:	mov    ecx,ebx
6400e7f1:	shr    ecx,0x8
6400e7f4:	and    ecx,0x1
6400e7f7:	mov    DWORD PTR [eax],ecx
6400e7f9:	test   DWORD PTR [edi+0x10],0x200
6400e800:	je     0x6400e827
6400e802:	mov    BYTE PTR [esp+0x20],bl
6400e806:	shr    ebx,0x8
6400e809:	push   0x2
6400e80b:	lea    edx,[esp+0x24]
6400e80f:	mov    BYTE PTR [esp+0x25],bl
6400e813:	mov    eax,DWORD PTR [edi+0x18]
6400e816:	push   edx
6400e817:	push   eax
6400e818:	call   0x64011710
6400e81d:	mov    edx,DWORD PTR [esp+0x1c]
6400e821:	add    esp,0xc
6400e824:	mov    DWORD PTR [edi+0x18],eax
6400e827:	xor    ebx,ebx
6400e829:	xor    esi,esi
6400e82b:	mov    DWORD PTR [edi],0x2
6400e831:	jmp    0x6400e838
6400e833:	cmp    esi,0x20
6400e836:	jae    0x6400e85c
6400e838:	test   edx,edx
6400e83a:	je     0x6400f9ec
6400e840:	movzx  eax,BYTE PTR [ebp+0x0]
6400e844:	mov    ecx,esi
6400e846:	shl    eax,cl
6400e848:	sub    edx,0x1
6400e84b:	add    esi,0x8
6400e84e:	add    ebp,0x1
6400e851:	add    ebx,eax
6400e853:	cmp    esi,0x20
6400e856:	mov    DWORD PTR [esp+0x10],edx
6400e85a:	jb     0x6400e838
6400e85c:	mov    eax,DWORD PTR [edi+0x20]
6400e85f:	test   eax,eax
6400e861:	je     0x6400e866
6400e863:	mov    DWORD PTR [eax+0x4],ebx
6400e866:	test   DWORD PTR [edi+0x10],0x200
6400e86d:	je     0x6400e8a6
6400e86f:	mov    BYTE PTR [esp+0x20],bl
6400e873:	mov    ecx,ebx
6400e875:	mov    edx,ebx
6400e877:	shr    ecx,0x8
6400e87a:	shr    edx,0x10
6400e87d:	shr    ebx,0x18
6400e880:	push   0x4
6400e882:	lea    eax,[esp+0x24]
6400e886:	mov    BYTE PTR [esp+0x25],cl
6400e88a:	mov    BYTE PTR [esp+0x26],dl
6400e88e:	mov    BYTE PTR [esp+0x27],bl
6400e892:	mov    ecx,DWORD PTR [edi+0x18]
6400e895:	push   eax
6400e896:	push   ecx
6400e897:	call   0x64011710
6400e89c:	mov    edx,DWORD PTR [esp+0x1c]
6400e8a0:	add    esp,0xc
6400e8a3:	mov    DWORD PTR [edi+0x18],eax
6400e8a6:	xor    ebx,ebx
6400e8a8:	xor    esi,esi
6400e8aa:	mov    DWORD PTR [edi],0x3
6400e8b0:	jmp    0x6400e8b7
6400e8b2:	cmp    esi,0x10
6400e8b5:	jae    0x6400e8db
6400e8b7:	test   edx,edx
6400e8b9:	je     0x6400f9ec
6400e8bf:	movzx  eax,BYTE PTR [ebp+0x0]
6400e8c3:	mov    ecx,esi
6400e8c5:	shl    eax,cl
6400e8c7:	sub    edx,0x1
6400e8ca:	add    esi,0x8
6400e8cd:	add    ebp,0x1
6400e8d0:	add    ebx,eax
6400e8d2:	cmp    esi,0x10
6400e8d5:	mov    DWORD PTR [esp+0x10],edx
6400e8d9:	jb     0x6400e8b7
6400e8db:	mov    eax,DWORD PTR [edi+0x20]
6400e8de:	test   eax,eax
6400e8e0:	je     0x6400e8f8
6400e8e2:	mov    ecx,ebx
6400e8e4:	and    ecx,0xff
6400e8ea:	mov    DWORD PTR [eax+0x8],ecx
6400e8ed:	mov    ecx,DWORD PTR [edi+0x20]
6400e8f0:	mov    eax,ebx
6400e8f2:	shr    eax,0x8
6400e8f5:	mov    DWORD PTR [ecx+0xc],eax
6400e8f8:	test   DWORD PTR [edi+0x10],0x200
6400e8ff:	je     0x6400e926
6400e901:	mov    BYTE PTR [esp+0x20],bl
6400e905:	shr    ebx,0x8
6400e908:	push   0x2
6400e90a:	lea    edx,[esp+0x24]
6400e90e:	mov    BYTE PTR [esp+0x25],bl
6400e912:	mov    eax,DWORD PTR [edi+0x18]
6400e915:	push   edx
6400e916:	push   eax
6400e917:	call   0x64011710
6400e91c:	mov    edx,DWORD PTR [esp+0x1c]
6400e920:	add    esp,0xc
6400e923:	mov    DWORD PTR [edi+0x18],eax
6400e926:	xor    ebx,ebx
6400e928:	mov    DWORD PTR [esp+0x18],ebx
6400e92c:	xor    esi,esi
6400e92e:	mov    DWORD PTR [edi],0x4
6400e934:	test   DWORD PTR [edi+0x10],0x400
6400e93b:	je     0x6400e9ab
6400e93d:	cmp    esi,0x10
6400e940:	jae    0x6400e966
6400e942:	test   edx,edx
6400e944:	je     0x6400f9ec
6400e94a:	movzx  eax,BYTE PTR [ebp+0x0]
6400e94e:	mov    ecx,esi
6400e950:	shl    eax,cl
6400e952:	sub    edx,0x1
6400e955:	add    esi,0x8
6400e958:	add    ebp,0x1
6400e95b:	add    ebx,eax
6400e95d:	cmp    esi,0x10
6400e960:	mov    DWORD PTR [esp+0x10],edx
6400e964:	jb     0x6400e942
6400e966:	mov    eax,DWORD PTR [edi+0x20]
6400e969:	test   eax,eax
6400e96b:	mov    DWORD PTR [edi+0x40],ebx
6400e96e:	je     0x6400e973
6400e970:	mov    DWORD PTR [eax+0x14],ebx
6400e973:	test   DWORD PTR [edi+0x10],0x200
6400e97a:	je     0x6400e9a1
6400e97c:	mov    BYTE PTR [esp+0x20],bl
6400e980:	shr    ebx,0x8
6400e983:	push   0x2
6400e985:	lea    ecx,[esp+0x24]
6400e989:	mov    BYTE PTR [esp+0x25],bl
6400e98d:	mov    edx,DWORD PTR [edi+0x18]
6400e990:	push   ecx
6400e991:	push   edx
6400e992:	call   0x64011710
6400e997:	mov    edx,DWORD PTR [esp+0x1c]
6400e99b:	add    esp,0xc
6400e99e:	mov    DWORD PTR [edi+0x18],eax
6400e9a1:	xor    ebx,ebx
6400e9a3:	mov    DWORD PTR [esp+0x18],ebx
6400e9a7:	xor    esi,esi
6400e9a9:	jmp    0x6400e9b9
6400e9ab:	mov    eax,DWORD PTR [edi+0x20]
6400e9ae:	test   eax,eax
6400e9b0:	je     0x6400e9b9
6400e9b2:	mov    DWORD PTR [eax+0x10],0x0
6400e9b9:	mov    DWORD PTR [edi],0x5
6400e9bf:	test   DWORD PTR [edi+0x10],0x400
6400e9c6:	je     0x6400ea6e
6400e9cc:	mov    eax,DWORD PTR [edi+0x40]
6400e9cf:	cmp    eax,edx
6400e9d1:	mov    DWORD PTR [esp+0x14],eax
6400e9d5:	jbe    0x6400e9dd
6400e9d7:	mov    eax,edx
6400e9d9:	mov    DWORD PTR [esp+0x14],edx
6400e9dd:	test   eax,eax
6400e9df:	je     0x6400ea64
6400e9e5:	mov    ecx,DWORD PTR [edi+0x20]
6400e9e8:	test   ecx,ecx
6400e9ea:	je     0x6400ea33
6400e9ec:	mov    ecx,DWORD PTR [ecx+0x10]
6400e9ef:	test   ecx,ecx
6400e9f1:	mov    DWORD PTR [esp+0x34],ecx
6400e9f5:	je     0x6400ea33
6400e9f7:	mov    ecx,DWORD PTR [edi+0x20]
6400e9fa:	mov    ecx,DWORD PTR [ecx+0x14]
6400e9fd:	sub    ecx,DWORD PTR [edi+0x40]
6400ea00:	mov    edx,DWORD PTR [edi+0x20]
6400ea03:	mov    edx,DWORD PTR [edx+0x18]
6400ea06:	mov    DWORD PTR [esp+0x24],ecx
6400ea0a:	add    ecx,eax
6400ea0c:	cmp    ecx,edx
6400ea0e:	jbe    0x6400ea16
6400ea10:	sub    edx,DWORD PTR [esp+0x24]
6400ea14:	mov    eax,edx
6400ea16:	mov    edx,DWORD PTR [esp+0x34]
6400ea1a:	push   eax
6400ea1b:	mov    eax,DWORD PTR [esp+0x28]
6400ea1f:	add    edx,eax
6400ea21:	push   ebp
6400ea22:	push   edx
6400ea23:	call   0x640151e0
6400ea28:	mov    eax,DWORD PTR [esp+0x20]
6400ea2c:	mov    edx,DWORD PTR [esp+0x1c]
6400ea30:	add    esp,0xc
6400ea33:	test   DWORD PTR [edi+0x10],0x200
6400ea3a:	je     0x6400ea59
6400ea3c:	mov    ecx,DWORD PTR [esp+0x14]
6400ea40:	mov    edx,DWORD PTR [edi+0x18]
6400ea43:	push   ecx
6400ea44:	push   ebp
6400ea45:	push   edx
6400ea46:	call   0x64011710
6400ea4b:	mov    edx,DWORD PTR [esp+0x1c]
6400ea4f:	mov    DWORD PTR [edi+0x18],eax
6400ea52:	mov    eax,DWORD PTR [esp+0x20]
6400ea56:	add    esp,0xc
6400ea59:	sub    edx,eax
6400ea5b:	add    ebp,eax
6400ea5d:	sub    DWORD PTR [edi+0x40],eax
6400ea60:	mov    DWORD PTR [esp+0x10],edx
6400ea64:	cmp    DWORD PTR [edi+0x40],0x0
6400ea68:	jne    0x6400f9ec
6400ea6e:	mov    DWORD PTR [edi+0x40],0x0
6400ea75:	mov    DWORD PTR [edi],0x6
6400ea7b:	test   DWORD PTR [edi+0x10],0x800
6400ea82:	je     0x6400eb18
6400ea88:	test   edx,edx
6400ea8a:	je     0x6400f9ec
6400ea90:	xor    eax,eax
6400ea92:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400ea96:	add    eax,0x1
6400ea99:	mov    DWORD PTR [esp+0x14],eax
6400ea9d:	mov    eax,DWORD PTR [edi+0x20]
6400eaa0:	test   eax,eax
6400eaa2:	mov    DWORD PTR [esp+0x24],ecx
6400eaa6:	je     0x6400eace
6400eaa8:	mov    ecx,DWORD PTR [eax+0x1c]
6400eaab:	test   ecx,ecx
6400eaad:	mov    DWORD PTR [esp+0x34],ecx
6400eab1:	je     0x6400eace
6400eab3:	mov    ecx,DWORD PTR [edi+0x40]
6400eab6:	cmp    ecx,DWORD PTR [eax+0x20]
6400eab9:	jae    0x6400eace
6400eabb:	mov    edx,DWORD PTR [esp+0x34]
6400eabf:	mov    al,BYTE PTR [esp+0x24]
6400eac3:	mov    BYTE PTR [edx+ecx*1],al
6400eac6:	add    DWORD PTR [edi+0x40],0x1
6400eaca:	mov    edx,DWORD PTR [esp+0x10]
6400eace:	cmp    DWORD PTR [esp+0x24],0x0
6400ead3:	je     0x6400eadd
6400ead5:	mov    eax,DWORD PTR [esp+0x14]
6400ead9:	cmp    eax,edx
6400eadb:	jb     0x6400ea92
6400eadd:	test   DWORD PTR [edi+0x10],0x200
6400eae4:	je     0x6400eaff
6400eae6:	mov    ecx,DWORD PTR [esp+0x14]
6400eaea:	mov    edx,DWORD PTR [edi+0x18]
6400eaed:	push   ecx
6400eaee:	push   ebp
6400eaef:	push   edx
6400eaf0:	call   0x64011710
6400eaf5:	mov    edx,DWORD PTR [esp+0x1c]
6400eaf9:	add    esp,0xc
6400eafc:	mov    DWORD PTR [edi+0x18],eax
6400eaff:	mov    eax,DWORD PTR [esp+0x14]
6400eb03:	sub    edx,eax
6400eb05:	add    ebp,eax
6400eb07:	cmp    DWORD PTR [esp+0x24],0x0
6400eb0c:	mov    DWORD PTR [esp+0x10],edx
6400eb10:	jne    0x6400f9ec
6400eb16:	jmp    0x6400eb26
6400eb18:	mov    eax,DWORD PTR [edi+0x20]
6400eb1b:	test   eax,eax
6400eb1d:	je     0x6400eb26
6400eb1f:	mov    DWORD PTR [eax+0x1c],0x0
6400eb26:	mov    DWORD PTR [edi+0x40],0x0
6400eb2d:	mov    DWORD PTR [edi],0x7
6400eb33:	test   DWORD PTR [edi+0x10],0x1000
6400eb3a:	je     0x6400ebd6
6400eb40:	test   edx,edx
6400eb42:	je     0x6400f9ec
6400eb48:	xor    eax,eax
6400eb4a:	lea    ebx,[ebx+0x0]
6400eb50:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400eb54:	add    eax,0x1
6400eb57:	mov    DWORD PTR [esp+0x14],eax
6400eb5b:	mov    eax,DWORD PTR [edi+0x20]
6400eb5e:	test   eax,eax
6400eb60:	mov    DWORD PTR [esp+0x24],ecx
6400eb64:	je     0x6400eb8c
6400eb66:	mov    ecx,DWORD PTR [eax+0x24]
6400eb69:	test   ecx,ecx
6400eb6b:	mov    DWORD PTR [esp+0x34],ecx
6400eb6f:	je     0x6400eb8c
6400eb71:	mov    ecx,DWORD PTR [edi+0x40]
6400eb74:	cmp    ecx,DWORD PTR [eax+0x28]
6400eb77:	jae    0x6400eb8c
6400eb79:	mov    edx,DWORD PTR [esp+0x34]
6400eb7d:	mov    al,BYTE PTR [esp+0x24]
6400eb81:	mov    BYTE PTR [edx+ecx*1],al
6400eb84:	add    DWORD PTR [edi+0x40],0x1
6400eb88:	mov    edx,DWORD PTR [esp+0x10]
6400eb8c:	cmp    DWORD PTR [esp+0x24],0x0
6400eb91:	je     0x6400eb9b
6400eb93:	mov    eax,DWORD PTR [esp+0x14]
6400eb97:	cmp    eax,edx
6400eb99:	jb     0x6400eb50
6400eb9b:	test   DWORD PTR [edi+0x10],0x200
6400eba2:	je     0x6400ebbd
6400eba4:	mov    ecx,DWORD PTR [esp+0x14]
6400eba8:	mov    edx,DWORD PTR [edi+0x18]
6400ebab:	push   ecx
6400ebac:	push   ebp
6400ebad:	push   edx
6400ebae:	call   0x64011710
6400ebb3:	mov    edx,DWORD PTR [esp+0x1c]
6400ebb7:	add    esp,0xc
6400ebba:	mov    DWORD PTR [edi+0x18],eax
6400ebbd:	mov    eax,DWORD PTR [esp+0x14]
6400ebc1:	sub    edx,eax
6400ebc3:	add    ebp,eax
6400ebc5:	cmp    DWORD PTR [esp+0x24],0x0
6400ebca:	mov    DWORD PTR [esp+0x10],edx
6400ebce:	jne    0x6400f9ec
6400ebd4:	jmp    0x6400ebe4
6400ebd6:	mov    eax,DWORD PTR [edi+0x20]
6400ebd9:	test   eax,eax
6400ebdb:	je     0x6400ebe4
6400ebdd:	mov    DWORD PTR [eax+0x24],0x0
6400ebe4:	mov    DWORD PTR [edi],0x8
6400ebea:	test   DWORD PTR [edi+0x10],0x200
6400ebf1:	je     0x6400ec40
6400ebf3:	cmp    esi,0x10
6400ebf6:	jae    0x6400ec20
6400ebf8:	test   edx,edx
6400ebfa:	je     0x6400f9ec
6400ec00:	movzx  eax,BYTE PTR [ebp+0x0]
6400ec04:	mov    ecx,esi
6400ec06:	shl    eax,cl
6400ec08:	sub    edx,0x1
6400ec0b:	add    esi,0x8
6400ec0e:	add    ebp,0x1
6400ec11:	add    ebx,eax
6400ec13:	cmp    esi,0x10
6400ec16:	mov    DWORD PTR [esp+0x10],edx
6400ec1a:	mov    DWORD PTR [esp+0x18],ebx
6400ec1e:	jb     0x6400ebf8
6400ec20:	movzx  ecx,WORD PTR [edi+0x18]
6400ec24:	cmp    ebx,ecx
6400ec26:	je     0x6400ec38
6400ec28:	mov    eax,DWORD PTR [esp+0x40]
6400ec2c:	mov    DWORD PTR [eax+0x18],0x64024e00
6400ec33:	jmp    0x6400f988
6400ec38:	xor    ebx,ebx
6400ec3a:	mov    DWORD PTR [esp+0x18],ebx
6400ec3e:	xor    esi,esi
6400ec40:	mov    eax,DWORD PTR [edi+0x20]
6400ec43:	test   eax,eax
6400ec45:	je     0x6400ec5d
6400ec47:	mov    ecx,DWORD PTR [edi+0x10]
6400ec4a:	sar    ecx,0x9
6400ec4d:	and    ecx,0x1
6400ec50:	mov    DWORD PTR [eax+0x2c],ecx
6400ec53:	mov    edx,DWORD PTR [edi+0x20]
6400ec56:	mov    DWORD PTR [edx+0x30],0x1
6400ec5d:	push   0x0
6400ec5f:	push   0x0
6400ec61:	push   0x0
6400ec63:	call   0x64011710
6400ec68:	mov    ecx,DWORD PTR [esp+0x4c]
6400ec6c:	mov    edx,DWORD PTR [esp+0x1c]
6400ec70:	mov    DWORD PTR [edi+0x18],eax
6400ec73:	mov    DWORD PTR [ecx+0x30],eax
6400ec76:	add    esp,0xc
6400ec79:	mov    DWORD PTR [edi],0xb
6400ec7f:	jmp    0x6400f98e
6400ec84:	cmp    esi,0x20
6400ec87:	jae    0x6400ecb8
6400ec89:	lea    esp,[esp+0x0]
6400ec90:	test   edx,edx
6400ec92:	je     0x6400f9ec
6400ec98:	movzx  eax,BYTE PTR [ebp+0x0]
6400ec9c:	mov    ecx,esi
6400ec9e:	shl    eax,cl
6400eca0:	sub    edx,0x1
6400eca3:	add    esi,0x8
6400eca6:	add    ebp,0x1
6400eca9:	add    ebx,eax
6400ecab:	cmp    esi,0x20
6400ecae:	mov    DWORD PTR [esp+0x10],edx
6400ecb2:	mov    DWORD PTR [esp+0x18],ebx
6400ecb6:	jb     0x6400ec90
6400ecb8:	mov    ecx,ebx
6400ecba:	and    ecx,0xff00
6400ecc0:	mov    eax,ebx
6400ecc2:	shl    eax,0x10
6400ecc5:	add    ecx,eax
6400ecc7:	xor    eax,eax
6400ecc9:	mov    ah,BYTE PTR [esp+0x1a]
6400eccd:	shl    ecx,0x8
6400ecd0:	shr    ebx,0x18
6400ecd3:	add    ecx,eax
6400ecd5:	lea    eax,[ecx+ebx*1]
6400ecd8:	mov    ecx,DWORD PTR [esp+0x40]
6400ecdc:	mov    DWORD PTR [edi+0x18],eax
6400ecdf:	mov    DWORD PTR [ecx+0x30],eax
6400ece2:	xor    ebx,ebx
6400ece4:	xor    esi,esi
6400ece6:	mov    DWORD PTR [edi],0xa
6400ecec:	cmp    DWORD PTR [edi+0xc],0x0
6400ecf0:	je     0x6400f9a6
6400ecf6:	push   0x0
6400ecf8:	push   0x0
6400ecfa:	push   0x0
6400ecfc:	call   0x640111f0
6400ed01:	mov    edx,DWORD PTR [esp+0x4c]
6400ed05:	mov    DWORD PTR [edi+0x18],eax
6400ed08:	mov    DWORD PTR [edx+0x30],eax
6400ed0b:	mov    edx,DWORD PTR [esp+0x1c]
6400ed0f:	add    esp,0xc
6400ed12:	mov    DWORD PTR [edi],0xb
6400ed18:	cmp    DWORD PTR [esp+0x44],0x5
6400ed1d:	je     0x6400f9ec
6400ed23:	cmp    DWORD PTR [edi+0x4],0x0
6400ed27:	je     0x6400ed41
6400ed29:	mov    ecx,esi
6400ed2b:	and    ecx,0x7
6400ed2e:	shr    ebx,cl
6400ed30:	sub    esi,ecx
6400ed32:	mov    DWORD PTR [edi],0x18
6400ed38:	mov    DWORD PTR [esp+0x18],ebx
6400ed3c:	jmp    0x6400f98e
6400ed41:	cmp    esi,0x3
6400ed44:	jae    0x6400ed6a
6400ed46:	test   edx,edx
6400ed48:	je     0x6400f9ec
6400ed4e:	movzx  eax,BYTE PTR [ebp+0x0]
6400ed52:	mov    ecx,esi
6400ed54:	shl    eax,cl
6400ed56:	sub    edx,0x1
6400ed59:	add    esi,0x8
6400ed5c:	add    ebp,0x1
6400ed5f:	add    ebx,eax
6400ed61:	cmp    esi,0x3
6400ed64:	mov    DWORD PTR [esp+0x10],edx
6400ed68:	jb     0x6400ed46
6400ed6a:	mov    ecx,ebx
6400ed6c:	shr    ebx,1
6400ed6e:	mov    eax,ebx
6400ed70:	and    ecx,0x1
6400ed73:	and    eax,0x3
6400ed76:	sub    esi,0x1
6400ed79:	cmp    eax,0x3
6400ed7c:	mov    DWORD PTR [edi+0x4],ecx
6400ed7f:	ja     0x6400eddf
6400ed81:	jmp    DWORD PTR [eax*4+0x6400fb6c]
6400ed88:	shr    ebx,0x2
6400ed8b:	mov    DWORD PTR [edi],0xd
6400ed91:	mov    DWORD PTR [esp+0x18],ebx
6400ed95:	sub    esi,0x2
6400ed98:	jmp    0x6400f98e
6400ed9d:	mov    eax,edi
6400ed9f:	call   0x6400e480
6400eda4:	shr    ebx,0x2
6400eda7:	mov    DWORD PTR [edi],0x12
6400edad:	mov    DWORD PTR [esp+0x18],ebx
6400edb1:	sub    esi,0x2
6400edb4:	jmp    0x6400f98e
6400edb9:	shr    ebx,0x2
6400edbc:	mov    DWORD PTR [edi],0xf
6400edc2:	mov    DWORD PTR [esp+0x18],ebx
6400edc6:	sub    esi,0x2
6400edc9:	jmp    0x6400f98e
6400edce:	mov    eax,DWORD PTR [esp+0x40]
6400edd2:	mov    DWORD PTR [eax+0x18],0x64024dec
6400edd9:	mov    DWORD PTR [edi],0x1b
6400eddf:	shr    ebx,0x2
6400ede2:	mov    DWORD PTR [esp+0x18],ebx
6400ede6:	sub    esi,0x2
6400ede9:	jmp    0x6400f98e
6400edee:	mov    ecx,esi
6400edf0:	and    ecx,0x7
6400edf3:	shr    ebx,cl
6400edf5:	sub    esi,ecx
6400edf7:	cmp    esi,0x20
6400edfa:	mov    DWORD PTR [esp+0x18],ebx
6400edfe:	jae    0x6400ee28
6400ee00:	test   edx,edx
6400ee02:	je     0x6400f9ec
6400ee08:	movzx  eax,BYTE PTR [ebp+0x0]
6400ee0c:	mov    ecx,esi
6400ee0e:	shl    eax,cl
6400ee10:	sub    edx,0x1
6400ee13:	add    esi,0x8
6400ee16:	add    ebp,0x1
6400ee19:	add    ebx,eax
6400ee1b:	cmp    esi,0x20
6400ee1e:	mov    DWORD PTR [esp+0x10],edx
6400ee22:	mov    DWORD PTR [esp+0x18],ebx
6400ee26:	jb     0x6400ee00
6400ee28:	mov    ecx,ebx
6400ee2a:	mov    eax,ebx
6400ee2c:	not    ecx
6400ee2e:	and    eax,0xffff
6400ee33:	shr    ecx,0x10
6400ee36:	cmp    eax,ecx
6400ee38:	je     0x6400ee4a
6400ee3a:	mov    eax,DWORD PTR [esp+0x40]
6400ee3e:	mov    DWORD PTR [eax+0x18],0x64024dcc
6400ee45:	jmp    0x6400f988
6400ee4a:	xor    ebx,ebx
6400ee4c:	mov    DWORD PTR [edi+0x40],eax
6400ee4f:	mov    DWORD PTR [esp+0x18],ebx
6400ee53:	xor    esi,esi
6400ee55:	mov    DWORD PTR [edi],0xe
6400ee5b:	mov    eax,DWORD PTR [edi+0x40]
6400ee5e:	test   eax,eax
6400ee60:	mov    DWORD PTR [esp+0x14],eax
6400ee64:	je     0x6400f51c
6400ee6a:	cmp    eax,edx
6400ee6c:	jbe    0x6400ee74
6400ee6e:	mov    eax,edx
6400ee70:	mov    DWORD PTR [esp+0x14],edx
6400ee74:	mov    ecx,DWORD PTR [esp+0x1c]
6400ee78:	cmp    eax,ecx
6400ee7a:	jbe    0x6400ee82
6400ee7c:	mov    eax,ecx
6400ee7e:	mov    DWORD PTR [esp+0x14],eax
6400ee82:	test   eax,eax
6400ee84:	je     0x6400f9ec
6400ee8a:	mov    ecx,DWORD PTR [esp+0x14]
6400ee8e:	mov    edx,DWORD PTR [esp+0x28]
6400ee92:	push   ecx
6400ee93:	push   ebp
6400ee94:	push   edx
6400ee95:	call   0x640151e0
6400ee9a:	mov    eax,DWORD PTR [esp+0x20]
6400ee9e:	sub    DWORD PTR [esp+0x1c],eax
6400eea2:	sub    DWORD PTR [esp+0x28],eax
6400eea6:	add    DWORD PTR [esp+0x34],eax
6400eeaa:	mov    edx,DWORD PTR [esp+0x1c]
6400eeae:	add    esp,0xc
6400eeb1:	add    ebp,eax
6400eeb3:	sub    DWORD PTR [edi+0x40],eax
6400eeb6:	jmp    0x6400f98e
6400eebb:	cmp    esi,0xe
6400eebe:	jae    0x6400eee4
6400eec0:	test   edx,edx
6400eec2:	je     0x6400f9ec
6400eec8:	movzx  eax,BYTE PTR [ebp+0x0]
6400eecc:	mov    ecx,esi
6400eece:	shl    eax,cl
6400eed0:	sub    edx,0x1
6400eed3:	add    esi,0x8
6400eed6:	add    ebp,0x1
6400eed9:	add    ebx,eax
6400eedb:	cmp    esi,0xe
6400eede:	mov    DWORD PTR [esp+0x10],edx
6400eee2:	jb     0x6400eec0
6400eee4:	mov    ecx,ebx
6400eee6:	and    ecx,0x1f
6400eee9:	shr    ebx,0x5
6400eeec:	add    ecx,0x101
6400eef2:	mov    eax,ebx
6400eef4:	mov    DWORD PTR [edi+0x60],ecx
6400eef7:	shr    ebx,0x5
6400eefa:	mov    ecx,ebx
6400eefc:	and    eax,0x1f
6400eeff:	and    ecx,0xf
6400ef02:	add    eax,0x1
6400ef05:	add    ecx,0x4
6400ef08:	shr    ebx,0x4
6400ef0b:	sub    esi,0xe
6400ef0e:	cmp    DWORD PTR [edi+0x60],0x11e
6400ef15:	mov    DWORD PTR [edi+0x64],eax
6400ef18:	mov    DWORD PTR [edi+0x5c],ecx
6400ef1b:	mov    DWORD PTR [esp+0x18],ebx
6400ef1f:	ja     0x6400f015
6400ef25:	cmp    eax,0x1e
6400ef28:	ja     0x6400f015
6400ef2e:	mov    DWORD PTR [edi+0x68],0x0
6400ef35:	mov    DWORD PTR [edi],0x10
6400ef3b:	mov    ecx,DWORD PTR [edi+0x68]
6400ef3e:	cmp    ecx,DWORD PTR [edi+0x5c]
6400ef41:	jae    0x6400ef98
6400ef43:	cmp    esi,0x3
6400ef46:	jae    0x6400ef6c
6400ef48:	test   edx,edx
6400ef4a:	je     0x6400f9ec
6400ef50:	movzx  eax,BYTE PTR [ebp+0x0]
6400ef54:	mov    ecx,esi
6400ef56:	shl    eax,cl
6400ef58:	sub    edx,0x1
6400ef5b:	add    esi,0x8
6400ef5e:	add    ebp,0x1
6400ef61:	add    ebx,eax
6400ef63:	cmp    esi,0x3
6400ef66:	mov    DWORD PTR [esp+0x10],edx
6400ef6a:	jb     0x6400ef48
6400ef6c:	mov    eax,DWORD PTR [edi+0x68]
6400ef6f:	movzx  eax,WORD PTR [eax*2+0x64024c90]
6400ef77:	movzx  ecx,bl
6400ef7a:	and    ecx,0x7
6400ef7d:	mov    WORD PTR [edi+eax*2+0x70],cx
6400ef82:	add    DWORD PTR [edi+0x68],0x1
6400ef86:	mov    ecx,DWORD PTR [edi+0x68]
6400ef89:	shr    ebx,0x3
6400ef8c:	sub    esi,0x3
6400ef8f:	cmp    ecx,DWORD PTR [edi+0x5c]
6400ef92:	mov    DWORD PTR [esp+0x18],ebx
6400ef96:	jb     0x6400ef43
6400ef98:	cmp    DWORD PTR [edi+0x68],0x13
6400ef9c:	jae    0x6400efc9
6400ef9e:	mov    ecx,0x1
6400efa3:	xor    eax,eax
6400efa5:	jmp    0x6400efb0
6400efa7:	lea    esp,[esp+0x0]
6400efae:	mov    edi,edi
6400efb0:	mov    edx,DWORD PTR [edi+0x68]
6400efb3:	movzx  edx,WORD PTR [edx*2+0x64024c90]
6400efbb:	mov    WORD PTR [edi+edx*2+0x70],ax
6400efc0:	add    DWORD PTR [edi+0x68],ecx
6400efc3:	cmp    DWORD PTR [edi+0x68],0x13
6400efc7:	jb     0x6400efb0
6400efc9:	lea    eax,[edi+0x530]
6400efcf:	lea    ecx,[edi+0x6c]
6400efd2:	mov    DWORD PTR [ecx],eax
6400efd4:	mov    DWORD PTR [edi+0x4c],eax
6400efd7:	lea    edx,[edi+0x2f0]
6400efdd:	push   edx
6400efde:	lea    eax,[edi+0x54]
6400efe1:	push   eax
6400efe2:	push   ecx
6400efe3:	mov    DWORD PTR [eax],0x7
6400efe9:	push   0x13
6400efeb:	lea    eax,[edi+0x70]
6400efee:	push   eax
6400efef:	push   0x0
6400eff1:	call   0x64010d00
6400eff6:	mov    edx,DWORD PTR [esp+0x28]
6400effa:	add    esp,0x18
6400effd:	test   eax,eax
6400efff:	mov    DWORD PTR [esp+0x30],eax
6400f003:	je     0x6400f025
6400f005:	mov    ecx,DWORD PTR [esp+0x40]
6400f009:	mov    DWORD PTR [ecx+0x18],0x64024db0
6400f010:	jmp    0x6400f988
6400f015:	mov    eax,DWORD PTR [esp+0x40]
6400f019:	mov    DWORD PTR [eax+0x18],0x64024d8c
6400f020:	jmp    0x6400f988
6400f025:	mov    DWORD PTR [edi+0x68],0x0
6400f02c:	mov    DWORD PTR [edi],0x11
6400f032:	mov    eax,DWORD PTR [edi+0x64]
6400f035:	add    eax,DWORD PTR [edi+0x60]
6400f038:	cmp    DWORD PTR [edi+0x68],eax
6400f03b:	jae    0x6400f279
6400f041:	mov    ecx,DWORD PTR [edi+0x54]
6400f044:	mov    eax,0x1
6400f049:	shl    eax,cl
6400f04b:	mov    ecx,DWORD PTR [edi+0x4c]
6400f04e:	sub    eax,0x1
6400f051:	and    eax,ebx
6400f053:	mov    eax,DWORD PTR [ecx+eax*4]
6400f056:	mov    ecx,eax
6400f058:	shr    ecx,0x8
6400f05b:	movzx  ecx,cl
6400f05e:	cmp    ecx,esi
6400f060:	mov    DWORD PTR [esp+0x14],eax
6400f064:	jbe    0x6400f0aa
6400f066:	test   edx,edx
6400f068:	je     0x6400f9ec
6400f06e:	movzx  eax,BYTE PTR [ebp+0x0]
6400f072:	mov    ecx,esi
6400f074:	shl    eax,cl
6400f076:	mov    ecx,DWORD PTR [edi+0x54]
6400f079:	sub    edx,0x1
6400f07c:	add    esi,0x8
6400f07f:	add    ebx,eax
6400f081:	mov    eax,0x1
6400f086:	shl    eax,cl
6400f088:	mov    ecx,DWORD PTR [edi+0x4c]
6400f08b:	add    ebp,0x1
6400f08e:	mov    DWORD PTR [esp+0x10],edx
6400f092:	sub    eax,0x1
6400f095:	and    eax,ebx
6400f097:	mov    eax,DWORD PTR [ecx+eax*4]
6400f09a:	mov    ecx,eax
6400f09c:	shr    ecx,0x8
6400f09f:	movzx  ecx,cl
6400f0a2:	cmp    ecx,esi
6400f0a4:	mov    DWORD PTR [esp+0x14],eax
6400f0a8:	ja     0x6400f066
6400f0aa:	mov    ecx,eax
6400f0ac:	shr    ecx,0x10
6400f0af:	cmp    ecx,0x10
6400f0b2:	jae    0x6400f10b
6400f0b4:	mov    ecx,eax
6400f0b6:	shr    ecx,0x8
6400f0b9:	movzx  ecx,cl
6400f0bc:	cmp    esi,ecx
6400f0be:	jae    0x6400f0ea
6400f0c0:	test   edx,edx
6400f0c2:	je     0x6400f9ec
6400f0c8:	movzx  eax,BYTE PTR [ebp+0x0]
6400f0cc:	mov    ecx,esi
6400f0ce:	shl    eax,cl
6400f0d0:	sub    edx,0x1
6400f0d3:	add    esi,0x8
6400f0d6:	add    ebp,0x1
6400f0d9:	add    ebx,eax
6400f0db:	mov    eax,DWORD PTR [esp+0x14]
6400f0df:	movzx  ecx,ah
6400f0e2:	cmp    esi,ecx
6400f0e4:	mov    DWORD PTR [esp+0x10],edx
6400f0e8:	jb     0x6400f0c0
6400f0ea:	movzx  ecx,ah
6400f0ed:	mov    eax,DWORD PTR [edi+0x68]
6400f0f0:	shr    ebx,cl
6400f0f2:	sub    esi,ecx
6400f0f4:	mov    cx,WORD PTR [esp+0x16]
6400f0f9:	mov    WORD PTR [edi+eax*2+0x70],cx
6400f0fe:	add    DWORD PTR [edi+0x68],0x1
6400f102:	mov    DWORD PTR [esp+0x18],ebx
6400f106:	jmp    0x6400f26a
6400f10b:	mov    cx,WORD PTR [esp+0x16]
6400f110:	cmp    cx,0x10
6400f114:	jne    0x6400f181
6400f116:	movzx  ecx,ah
6400f119:	lea    eax,[ecx+0x2]
6400f11c:	cmp    esi,eax
6400f11e:	mov    DWORD PTR [esp+0x24],ecx
6400f122:	jae    0x6400f14e
6400f124:	test   edx,edx
6400f126:	je     0x6400f9ec
6400f12c:	movzx  eax,BYTE PTR [ebp+0x0]
6400f130:	mov    ecx,esi
6400f132:	shl    eax,cl
6400f134:	mov    ecx,DWORD PTR [esp+0x24]
6400f138:	sub    edx,0x1
6400f13b:	add    esi,0x8
6400f13e:	add    ebx,eax
6400f140:	lea    eax,[ecx+0x2]
6400f143:	add    ebp,0x1
6400f146:	cmp    esi,eax
6400f148:	mov    DWORD PTR [esp+0x10],edx
6400f14c:	jb     0x6400f124
6400f14e:	mov    eax,DWORD PTR [edi+0x68]
6400f151:	shr    ebx,cl
6400f153:	sub    esi,ecx
6400f155:	test   eax,eax
6400f157:	mov    DWORD PTR [esp+0x18],ebx
6400f15b:	je     0x6400f2d0
6400f161:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
6400f166:	mov    eax,ebx
6400f168:	and    eax,0x3
6400f16b:	add    eax,0x3
6400f16e:	shr    ebx,0x2
6400f171:	mov    DWORD PTR [esp+0x24],ecx
6400f175:	mov    DWORD PTR [esp+0x14],eax
6400f179:	sub    esi,0x2
6400f17c:	jmp    0x6400f230
6400f181:	cmp    cx,0x11
6400f185:	movzx  ecx,ah
6400f188:	mov    DWORD PTR [esp+0x24],ecx
6400f18c:	jne    0x6400f1d7
6400f18e:	lea    eax,[ecx+0x3]
6400f191:	cmp    esi,eax
6400f193:	jae    0x6400f1bf
6400f195:	test   edx,edx
6400f197:	je     0x6400f9ec
6400f19d:	movzx  eax,BYTE PTR [ebp+0x0]
6400f1a1:	mov    ecx,esi
6400f1a3:	shl    eax,cl
6400f1a5:	mov    ecx,DWORD PTR [esp+0x24]
6400f1a9:	sub    edx,0x1
6400f1ac:	add    esi,0x8
6400f1af:	add    ebx,eax
6400f1b1:	lea    eax,[ecx+0x3]
6400f1b4:	add    ebp,0x1
6400f1b7:	cmp    esi,eax
6400f1b9:	mov    DWORD PTR [esp+0x10],edx
6400f1bd:	jb     0x6400f195
6400f1bf:	shr    ebx,cl
6400f1c1:	mov    eax,ebx
6400f1c3:	and    eax,0x7
6400f1c6:	add    eax,0x3
6400f1c9:	mov    DWORD PTR [esp+0x14],eax
6400f1cd:	shr    ebx,0x3
6400f1d0:	mov    eax,0xfffffffd
6400f1d5:	jmp    0x6400f220
6400f1d7:	lea    eax,[ecx+0x7]
6400f1da:	cmp    esi,eax
6400f1dc:	jae    0x6400f20a
6400f1de:	mov    edi,edi
6400f1e0:	test   edx,edx
6400f1e2:	je     0x6400f9ec
6400f1e8:	movzx  eax,BYTE PTR [ebp+0x0]
6400f1ec:	mov    ecx,esi
6400f1ee:	shl    eax,cl
6400f1f0:	mov    ecx,DWORD PTR [esp+0x24]
6400f1f4:	sub    edx,0x1
6400f1f7:	add    esi,0x8
6400f1fa:	add    ebx,eax
6400f1fc:	lea    eax,[ecx+0x7]
6400f1ff:	add    ebp,0x1
6400f202:	cmp    esi,eax
6400f204:	mov    DWORD PTR [esp+0x10],edx
6400f208:	jb     0x6400f1e0
6400f20a:	shr    ebx,cl
6400f20c:	mov    eax,ebx
6400f20e:	and    eax,0x7f
6400f211:	add    eax,0xb
6400f214:	mov    DWORD PTR [esp+0x14],eax
6400f218:	shr    ebx,0x7
6400f21b:	mov    eax,0xfffffff9
6400f220:	sub    eax,ecx
6400f222:	add    esi,eax
6400f224:	mov    eax,DWORD PTR [esp+0x14]
6400f228:	mov    DWORD PTR [esp+0x24],0x0
6400f230:	mov    ecx,DWORD PTR [edi+0x68]
6400f233:	add    ecx,eax
6400f235:	mov    eax,DWORD PTR [edi+0x64]
6400f238:	add    eax,DWORD PTR [edi+0x60]
6400f23b:	mov    DWORD PTR [esp+0x18],ebx
6400f23f:	cmp    ecx,eax
6400f241:	ja     0x6400f2e0
6400f247:	cmp    DWORD PTR [esp+0x14],0x0
6400f24c:	je     0x6400f26a
6400f24e:	mov    eax,DWORD PTR [esp+0x24]
6400f252:	mov    ecx,DWORD PTR [edi+0x68]
6400f255:	sub    DWORD PTR [esp+0x14],0x1
6400f25a:	mov    WORD PTR [edi+ecx*2+0x70],ax
6400f25f:	add    DWORD PTR [edi+0x68],0x1
6400f263:	cmp    DWORD PTR [esp+0x14],0x0
6400f268:	jne    0x6400f252
6400f26a:	mov    eax,DWORD PTR [edi+0x64]
6400f26d:	add    eax,DWORD PTR [edi+0x60]
6400f270:	cmp    DWORD PTR [edi+0x68],eax
6400f273:	jb     0x6400f041
6400f279:	cmp    DWORD PTR [edi],0x1b
6400f27c:	je     0x6400f98e
6400f282:	lea    eax,[edi+0x530]
6400f288:	lea    ecx,[edi+0x6c]
6400f28b:	mov    DWORD PTR [ecx],eax
6400f28d:	lea    edx,[edi+0x2f0]
6400f293:	push   edx
6400f294:	mov    DWORD PTR [edi+0x4c],eax
6400f297:	lea    eax,[edi+0x54]
6400f29a:	push   eax
6400f29b:	push   ecx
6400f29c:	mov    ecx,DWORD PTR [edi+0x60]
6400f29f:	push   ecx
6400f2a0:	lea    edx,[edi+0x70]
6400f2a3:	push   edx
6400f2a4:	push   0x1
6400f2a6:	mov    DWORD PTR [eax],0x9
6400f2ac:	call   0x64010d00
6400f2b1:	add    esp,0x18
6400f2b4:	test   eax,eax
6400f2b6:	mov    DWORD PTR [esp+0x30],eax
6400f2ba:	je     0x6400f2f0
6400f2bc:	mov    eax,DWORD PTR [esp+0x40]
6400f2c0:	mov    edx,DWORD PTR [esp+0x10]
6400f2c4:	mov    DWORD PTR [eax+0x18],0x64024d70
6400f2cb:	jmp    0x6400f988
6400f2d0:	mov    ecx,DWORD PTR [esp+0x40]
6400f2d4:	mov    DWORD PTR [ecx+0x18],0x64024d54
6400f2db:	jmp    0x6400f988
6400f2e0:	mov    eax,DWORD PTR [esp+0x40]
6400f2e4:	mov    DWORD PTR [eax+0x18],0x64024d54
6400f2eb:	jmp    0x6400f988
6400f2f0:	mov    edx,DWORD PTR [edi+0x6c]
6400f2f3:	lea    ecx,[edi+0x6c]
6400f2f6:	mov    DWORD PTR [edi+0x50],edx
6400f2f9:	lea    edx,[edi+0x2f0]
6400f2ff:	push   edx
6400f300:	lea    eax,[edi+0x58]
6400f303:	push   eax
6400f304:	push   ecx
6400f305:	mov    ecx,DWORD PTR [edi+0x60]
6400f308:	mov    DWORD PTR [eax],0x6
6400f30e:	mov    eax,DWORD PTR [edi+0x64]
6400f311:	push   eax
6400f312:	lea    edx,[edi+ecx*2+0x70]
6400f316:	push   edx
6400f317:	push   0x2
6400f319:	call   0x64010d00
6400f31e:	mov    edx,DWORD PTR [esp+0x28]
6400f322:	add    esp,0x18
6400f325:	test   eax,eax
6400f327:	mov    DWORD PTR [esp+0x30],eax
6400f32b:	je     0x6400f33d
6400f32d:	mov    eax,DWORD PTR [esp+0x40]
6400f331:	mov    DWORD PTR [eax+0x18],0x64024d3c
6400f338:	jmp    0x6400f988
6400f33d:	mov    DWORD PTR [edi],0x12
6400f343:	cmp    edx,0x6
6400f346:	jb     0x6400f3b1
6400f34c:	cmp    DWORD PTR [esp+0x1c],0x102
6400f354:	jb     0x6400f3b1
6400f356:	mov    eax,DWORD PTR [esp+0x40]
6400f35a:	mov    edx,DWORD PTR [esp+0x1c]
6400f35e:	mov    ecx,DWORD PTR [esp+0x28]
6400f362:	mov    DWORD PTR [eax+0x10],edx
6400f365:	mov    edx,DWORD PTR [esp+0x2c]
6400f369:	mov    DWORD PTR [eax+0xc],ecx
6400f36c:	mov    ecx,DWORD PTR [esp+0x10]
6400f370:	push   edx
6400f371:	mov    DWORD PTR [eax],ebp
6400f373:	mov    DWORD PTR [eax+0x4],ecx
6400f376:	push   eax
6400f377:	mov    DWORD PTR [edi+0x38],ebx
6400f37a:	mov    DWORD PTR [edi+0x3c],esi
6400f37d:	call   0x64010840
6400f382:	mov    eax,DWORD PTR [esp+0x48]
6400f386:	mov    edx,DWORD PTR [eax+0x10]
6400f389:	mov    ecx,DWORD PTR [eax+0xc]
6400f38c:	mov    ebp,DWORD PTR [eax]
6400f38e:	mov    eax,DWORD PTR [eax+0x4]
6400f391:	mov    ebx,DWORD PTR [edi+0x38]
6400f394:	mov    esi,DWORD PTR [edi+0x3c]
6400f397:	mov    DWORD PTR [esp+0x24],edx
6400f39b:	add    esp,0x8
6400f39e:	mov    DWORD PTR [esp+0x28],ecx
6400f3a2:	mov    DWORD PTR [esp+0x10],eax
6400f3a6:	mov    DWORD PTR [esp+0x18],ebx
6400f3aa:	mov    edx,eax
6400f3ac:	jmp    0x6400f98e
6400f3b1:	mov    ecx,DWORD PTR [edi+0x54]
6400f3b4:	mov    eax,0x1
6400f3b9:	shl    eax,cl
6400f3bb:	sub    eax,0x1
6400f3be:	and    eax,ebx
6400f3c0:	mov    ecx,eax
6400f3c2:	mov    eax,DWORD PTR [edi+0x4c]
6400f3c5:	mov    eax,DWORD PTR [eax+ecx*4]
6400f3c8:	mov    ecx,eax
6400f3ca:	shr    ecx,0x8
6400f3cd:	movzx  ecx,cl
6400f3d0:	cmp    ecx,esi
6400f3d2:	mov    DWORD PTR [esp+0x14],eax
6400f3d6:	jbe    0x6400f41c
6400f3d8:	test   edx,edx
6400f3da:	je     0x6400f9ec
6400f3e0:	movzx  eax,BYTE PTR [ebp+0x0]
6400f3e4:	mov    ecx,esi
6400f3e6:	shl    eax,cl
6400f3e8:	mov    ecx,DWORD PTR [edi+0x54]
6400f3eb:	sub    edx,0x1
6400f3ee:	add    esi,0x8
6400f3f1:	add    ebx,eax
6400f3f3:	mov    eax,0x1
6400f3f8:	shl    eax,cl
6400f3fa:	mov    ecx,DWORD PTR [edi+0x4c]
6400f3fd:	add    ebp,0x1
6400f400:	mov    DWORD PTR [esp+0x10],edx
6400f404:	sub    eax,0x1
6400f407:	and    eax,ebx
6400f409:	mov    eax,DWORD PTR [ecx+eax*4]
6400f40c:	mov    ecx,eax
6400f40e:	shr    ecx,0x8
6400f411:	movzx  ecx,cl
6400f414:	cmp    ecx,esi
6400f416:	mov    DWORD PTR [esp+0x14],eax
6400f41a:	ja     0x6400f3d8
6400f41c:	test   al,al
6400f41e:	je     0x6400f4ed
6400f424:	test   al,0xf0
6400f426:	jne    0x6400f4ed
6400f42c:	mov    ecx,eax
6400f42e:	shr    ecx,0x8
6400f431:	mov    DWORD PTR [esp+0x34],ecx
6400f435:	movzx  ecx,cl
6400f438:	mov    DWORD PTR [esp+0x24],ecx
6400f43c:	movzx  ecx,al
6400f43f:	add    ecx,DWORD PTR [esp+0x24]
6400f443:	mov    DWORD PTR [esp+0x18],eax
6400f447:	mov    eax,0x1
6400f44c:	shl    eax,cl
6400f44e:	mov    ecx,DWORD PTR [esp+0x24]
6400f452:	sub    eax,0x1
6400f455:	and    eax,ebx
6400f457:	shr    eax,cl
6400f459:	mov    ecx,DWORD PTR [esp+0x14]
6400f45d:	shr    ecx,0x10
6400f460:	add    eax,ecx
6400f462:	mov    ecx,eax
6400f464:	mov    eax,DWORD PTR [edi+0x4c]
6400f467:	mov    eax,DWORD PTR [eax+ecx*4]
6400f46a:	movzx  ecx,BYTE PTR [esp+0x34]
6400f46f:	mov    DWORD PTR [esp+0x14],eax
6400f473:	shr    eax,0x8
6400f476:	movzx  eax,al
6400f479:	add    eax,ecx
6400f47b:	cmp    eax,esi
6400f47d:	jbe    0x6400f4e0
6400f483:	test   edx,edx
6400f485:	je     0x6400f9ec
6400f48b:	movzx  eax,BYTE PTR [ebp+0x0]
6400f48f:	mov    ecx,esi
6400f491:	shl    eax,cl
6400f493:	mov    ecx,DWORD PTR [esp+0x18]
6400f497:	sub    edx,0x1
6400f49a:	add    esi,0x8
6400f49d:	add    ebx,eax
6400f49f:	movzx  eax,ch
6400f4a2:	add    ecx,eax
6400f4a4:	mov    DWORD PTR [esp+0x24],eax
6400f4a8:	mov    eax,0x1
6400f4ad:	shl    eax,cl
6400f4af:	mov    ecx,DWORD PTR [esp+0x24]
6400f4b3:	add    ebp,0x1
6400f4b6:	mov    DWORD PTR [esp+0x10],edx
6400f4ba:	sub    eax,0x1
6400f4bd:	and    eax,ebx
6400f4bf:	shr    eax,cl
6400f4c1:	movzx  ecx,WORD PTR [esp+0x1a]
6400f4c6:	add    eax,ecx
6400f4c8:	mov    ecx,DWORD PTR [edi+0x4c]
6400f4cb:	mov    eax,DWORD PTR [ecx+eax*4]
6400f4ce:	mov    DWORD PTR [esp+0x14],eax
6400f4d2:	shr    eax,0x8
6400f4d5:	movzx  eax,al
6400f4d8:	add    eax,DWORD PTR [esp+0x24]
6400f4dc:	cmp    eax,esi
6400f4de:	ja     0x6400f483
6400f4e0:	movzx  ecx,BYTE PTR [esp+0x19]
6400f4e5:	mov    eax,DWORD PTR [esp+0x14]
6400f4e9:	shr    ebx,cl
6400f4eb:	sub    esi,ecx
6400f4ed:	mov    ecx,eax
6400f4ef:	shr    ecx,0x8
6400f4f2:	movzx  ecx,cl
6400f4f5:	shr    ebx,cl
6400f4f7:	sub    esi,ecx
6400f4f9:	mov    DWORD PTR [esp+0x24],ecx
6400f4fd:	mov    ecx,eax
6400f4ff:	shr    ecx,0x10
6400f502:	test   al,al
6400f504:	mov    DWORD PTR [esp+0x18],ebx
6400f508:	mov    DWORD PTR [edi+0x40],ecx
6400f50b:	jne    0x6400f518
6400f50d:	mov    DWORD PTR [edi],0x17
6400f513:	jmp    0x6400f98e
6400f518:	test   al,0x20
6400f51a:	je     0x6400f527
6400f51c:	mov    DWORD PTR [edi],0xb
6400f522:	jmp    0x6400f98e
6400f527:	test   al,0x40
6400f529:	je     0x6400f53b
6400f52b:	mov    eax,DWORD PTR [esp+0x40]
6400f52f:	mov    DWORD PTR [eax+0x18],0x64024d20
6400f536:	jmp    0x6400f988
6400f53b:	and    eax,0xf
6400f53e:	mov    DWORD PTR [edi+0x48],eax
6400f541:	mov    DWORD PTR [edi],0x13
6400f547:	mov    eax,DWORD PTR [edi+0x48]
6400f54a:	test   eax,eax
6400f54c:	je     0x6400f58c
6400f54e:	cmp    esi,eax
6400f550:	jae    0x6400f576
6400f552:	test   edx,edx
6400f554:	je     0x6400f9ec
6400f55a:	movzx  eax,BYTE PTR [ebp+0x0]
6400f55e:	mov    ecx,esi
6400f560:	shl    eax,cl
6400f562:	sub    edx,0x1
6400f565:	add    esi,0x8
6400f568:	add    ebp,0x1
6400f56b:	add    ebx,eax
6400f56d:	cmp    esi,DWORD PTR [edi+0x48]
6400f570:	mov    DWORD PTR [esp+0x10],edx
6400f574:	jb     0x6400f552
6400f576:	mov    ecx,DWORD PTR [edi+0x48]
6400f579:	mov    eax,0x1
6400f57e:	shl    eax,cl
6400f580:	sub    eax,0x1
6400f583:	and    eax,ebx
6400f585:	add    DWORD PTR [edi+0x40],eax
6400f588:	shr    ebx,cl
6400f58a:	sub    esi,ecx
6400f58c:	mov    DWORD PTR [edi],0x14
6400f592:	mov    ecx,DWORD PTR [edi+0x58]
6400f595:	mov    eax,0x1
6400f59a:	shl    eax,cl
6400f59c:	sub    eax,0x1
6400f59f:	and    eax,ebx
6400f5a1:	mov    ecx,eax
6400f5a3:	mov    eax,DWORD PTR [edi+0x50]
6400f5a6:	mov    eax,DWORD PTR [eax+ecx*4]
6400f5a9:	mov    ecx,eax
6400f5ab:	shr    ecx,0x8
6400f5ae:	movzx  ecx,cl
6400f5b1:	cmp    ecx,esi
6400f5b3:	mov    DWORD PTR [esp+0x14],eax
6400f5b7:	jbe    0x6400f604
6400f5b9:	lea    esp,[esp+0x0]
6400f5c0:	test   edx,edx
6400f5c2:	je     0x6400f9ec
6400f5c8:	movzx  eax,BYTE PTR [ebp+0x0]
6400f5cc:	mov    ecx,esi
6400f5ce:	shl    eax,cl
6400f5d0:	mov    ecx,DWORD PTR [edi+0x58]
6400f5d3:	sub    edx,0x1
6400f5d6:	add    esi,0x8
6400f5d9:	add    ebx,eax
6400f5db:	mov    eax,0x1
6400f5e0:	shl    eax,cl
6400f5e2:	mov    ecx,DWORD PTR [edi+0x50]
6400f5e5:	add    ebp,0x1
6400f5e8:	mov    DWORD PTR [esp+0x10],edx
6400f5ec:	sub    eax,0x1
6400f5ef:	and    eax,ebx
6400f5f1:	mov    eax,DWORD PTR [ecx+eax*4]
6400f5f4:	mov    ecx,eax
6400f5f6:	shr    ecx,0x8
6400f5f9:	movzx  ecx,cl
6400f5fc:	cmp    ecx,esi
6400f5fe:	mov    DWORD PTR [esp+0x14],eax
6400f602:	ja     0x6400f5c0
6400f604:	test   al,0xf0
6400f606:	jne    0x6400f6cd
6400f60c:	mov    ecx,eax
6400f60e:	shr    ecx,0x8
6400f611:	mov    DWORD PTR [esp+0x34],ecx
6400f615:	movzx  ecx,cl
6400f618:	mov    DWORD PTR [esp+0x24],ecx
6400f61c:	movzx  ecx,al
6400f61f:	add    ecx,DWORD PTR [esp+0x24]
6400f623:	mov    DWORD PTR [esp+0x18],eax
6400f627:	mov    eax,0x1
6400f62c:	shl    eax,cl
6400f62e:	mov    ecx,DWORD PTR [esp+0x24]
6400f632:	sub    eax,0x1
6400f635:	and    eax,ebx
6400f637:	shr    eax,cl
6400f639:	mov    ecx,DWORD PTR [esp+0x14]
6400f63d:	shr    ecx,0x10
6400f640:	add    eax,ecx
6400f642:	mov    ecx,eax
6400f644:	mov    eax,DWORD PTR [edi+0x50]
6400f647:	mov    eax,DWORD PTR [eax+ecx*4]
6400f64a:	movzx  ecx,BYTE PTR [esp+0x34]
6400f64f:	mov    DWORD PTR [esp+0x14],eax
6400f653:	shr    eax,0x8
6400f656:	movzx  eax,al
6400f659:	add    eax,ecx
6400f65b:	cmp    eax,esi
6400f65d:	jbe    0x6400f6c0
6400f663:	test   edx,edx
6400f665:	je     0x6400f9ec
6400f66b:	movzx  eax,BYTE PTR [ebp+0x0]
6400f66f:	mov    ecx,esi
6400f671:	shl    eax,cl
6400f673:	mov    ecx,DWORD PTR [esp+0x18]
6400f677:	sub    edx,0x1
6400f67a:	add    esi,0x8
6400f67d:	add    ebx,eax
6400f67f:	movzx  eax,ch
6400f682:	add    ecx,eax
6400f684:	mov    DWORD PTR [esp+0x24],eax
6400f688:	mov    eax,0x1
6400f68d:	shl    eax,cl
6400f68f:	mov    ecx,DWORD PTR [esp+0x24]
6400f693:	add    ebp,0x1
6400f696:	mov    DWORD PTR [esp+0x10],edx
6400f69a:	sub    eax,0x1
6400f69d:	and    eax,ebx
6400f69f:	shr    eax,cl
6400f6a1:	movzx  ecx,WORD PTR [esp+0x1a]
6400f6a6:	add    eax,ecx
6400f6a8:	mov    ecx,DWORD PTR [edi+0x50]
6400f6ab:	mov    eax,DWORD PTR [ecx+eax*4]
6400f6ae:	mov    DWORD PTR [esp+0x14],eax
6400f6b2:	shr    eax,0x8
6400f6b5:	movzx  eax,al
6400f6b8:	add    eax,DWORD PTR [esp+0x24]
6400f6bc:	cmp    eax,esi
6400f6be:	ja     0x6400f663
6400f6c0:	movzx  ecx,BYTE PTR [esp+0x19]
6400f6c5:	mov    eax,DWORD PTR [esp+0x14]
6400f6c9:	shr    ebx,cl
6400f6cb:	sub    esi,ecx
6400f6cd:	mov    ecx,eax
6400f6cf:	shr    ecx,0x8
6400f6d2:	movzx  ecx,cl
6400f6d5:	shr    ebx,cl
6400f6d7:	sub    esi,ecx
6400f6d9:	test   al,0x40
6400f6db:	mov    DWORD PTR [esp+0x24],ecx
6400f6df:	mov    DWORD PTR [esp+0x18],ebx
6400f6e3:	je     0x6400f6f5
6400f6e5:	mov    eax,DWORD PTR [esp+0x40]
6400f6e9:	mov    DWORD PTR [eax+0x18],0x64024d08
6400f6f0:	jmp    0x6400f988
6400f6f5:	mov    ecx,eax
6400f6f7:	shr    ecx,0x10
6400f6fa:	and    eax,0xf
6400f6fd:	mov    DWORD PTR [edi+0x44],ecx
6400f700:	mov    DWORD PTR [edi+0x48],eax
6400f703:	mov    DWORD PTR [edi],0x15
6400f709:	mov    eax,DWORD PTR [edi+0x48]
6400f70c:	test   eax,eax
6400f70e:	je     0x6400f752
6400f710:	cmp    esi,eax
6400f712:	jae    0x6400f738
6400f714:	test   edx,edx
6400f716:	je     0x6400f9ec
6400f71c:	movzx  eax,BYTE PTR [ebp+0x0]
6400f720:	mov    ecx,esi
6400f722:	shl    eax,cl
6400f724:	sub    edx,0x1
6400f727:	add    esi,0x8
6400f72a:	add    ebp,0x1
6400f72d:	add    ebx,eax
6400f72f:	cmp    esi,DWORD PTR [edi+0x48]
6400f732:	mov    DWORD PTR [esp+0x10],edx
6400f736:	jb     0x6400f714
6400f738:	mov    ecx,DWORD PTR [edi+0x48]
6400f73b:	mov    eax,0x1
6400f740:	shl    eax,cl
6400f742:	sub    eax,0x1
6400f745:	and    eax,ebx
6400f747:	add    DWORD PTR [edi+0x44],eax
6400f74a:	shr    ebx,cl
6400f74c:	sub    esi,ecx
6400f74e:	mov    DWORD PTR [esp+0x18],ebx
6400f752:	mov    ecx,DWORD PTR [edi+0x2c]
6400f755:	sub    ecx,DWORD PTR [esp+0x1c]
6400f759:	add    ecx,DWORD PTR [esp+0x2c]
6400f75d:	cmp    DWORD PTR [edi+0x44],ecx
6400f760:	jbe    0x6400f772
6400f762:	mov    eax,DWORD PTR [esp+0x40]
6400f766:	mov    DWORD PTR [eax+0x18],0x64024ce8
6400f76d:	jmp    0x6400f988
6400f772:	mov    DWORD PTR [edi],0x16
6400f778:	cmp    DWORD PTR [esp+0x1c],0x0
6400f77d:	je     0x6400f9ec
6400f783:	mov    ecx,DWORD PTR [esp+0x2c]
6400f787:	sub    ecx,DWORD PTR [esp+0x1c]
6400f78b:	mov    eax,DWORD PTR [edi+0x44]
6400f78e:	cmp    eax,ecx
6400f790:	jbe    0x6400f7ce
6400f792:	sub    eax,ecx
6400f794:	mov    ecx,DWORD PTR [edi+0x30]
6400f797:	cmp    eax,ecx
6400f799:	mov    DWORD PTR [esp+0x14],eax
6400f79d:	jbe    0x6400f7af
6400f79f:	sub    eax,ecx
6400f7a1:	mov    ecx,DWORD PTR [edi+0x34]
6400f7a4:	add    ecx,DWORD PTR [edi+0x28]
6400f7a7:	mov    DWORD PTR [esp+0x14],eax
6400f7ab:	sub    ecx,eax
6400f7ad:	jmp    0x6400f7bb
6400f7af:	mov    ecx,DWORD PTR [edi+0x34]
6400f7b2:	sub    ecx,eax
6400f7b4:	add    ecx,DWORD PTR [edi+0x30]
6400f7b7:	mov    eax,DWORD PTR [esp+0x14]
6400f7bb:	mov    DWORD PTR [esp+0x24],ecx
6400f7bf:	mov    ecx,DWORD PTR [edi+0x40]
6400f7c2:	cmp    eax,ecx
6400f7c4:	mov    DWORD PTR [esp+0x34],ecx
6400f7c8:	jbe    0x6400f7e3
6400f7ca:	mov    eax,ecx
6400f7cc:	jmp    0x6400f7df
6400f7ce:	mov    ecx,DWORD PTR [esp+0x28]
6400f7d2:	sub    ecx,eax
6400f7d4:	mov    eax,DWORD PTR [edi+0x40]
6400f7d7:	mov    DWORD PTR [esp+0x24],ecx
6400f7db:	mov    DWORD PTR [esp+0x34],eax
6400f7df:	mov    DWORD PTR [esp+0x14],eax
6400f7e3:	mov    ecx,DWORD PTR [esp+0x1c]
6400f7e7:	cmp    eax,ecx
6400f7e9:	jbe    0x6400f7f1
6400f7eb:	mov    eax,ecx
6400f7ed:	mov    DWORD PTR [esp+0x14],eax
6400f7f1:	sub    ecx,eax
6400f7f3:	mov    DWORD PTR [esp+0x1c],ecx
6400f7f7:	mov    ecx,DWORD PTR [esp+0x34]
6400f7fb:	sub    ecx,eax
6400f7fd:	mov    eax,DWORD PTR [esp+0x28]
6400f801:	mov    DWORD PTR [edi+0x40],ecx
6400f804:	mov    ecx,DWORD PTR [esp+0x24]
6400f808:	mov    cl,BYTE PTR [ecx]
6400f80a:	add    DWORD PTR [esp+0x24],0x1
6400f80f:	mov    BYTE PTR [eax],cl
6400f811:	add    eax,0x1
6400f814:	sub    DWORD PTR [esp+0x14],0x1
6400f819:	jne    0x6400f804
6400f81b:	cmp    DWORD PTR [edi+0x40],0x0
6400f81f:	mov    DWORD PTR [esp+0x28],eax
6400f823:	jne    0x6400f98e
6400f829:	mov    DWORD PTR [edi],0x12
6400f82f:	jmp    0x6400f98e
6400f834:	cmp    DWORD PTR [esp+0x1c],0x0
6400f839:	je     0x6400f9ec
6400f83f:	mov    eax,DWORD PTR [esp+0x28]
6400f843:	mov    cl,BYTE PTR [edi+0x40]
6400f846:	mov    BYTE PTR [eax],cl
6400f848:	add    eax,0x1
6400f84b:	sub    DWORD PTR [esp+0x1c],0x1
6400f850:	mov    DWORD PTR [esp+0x28],eax
6400f854:	mov    DWORD PTR [edi],0x12
6400f85a:	jmp    0x6400f98e
6400f85f:	cmp    DWORD PTR [edi+0x8],0x0
6400f863:	je     0x6400f92c
6400f869:	cmp    esi,0x20
6400f86c:	jae    0x6400f898
6400f86e:	mov    edi,edi
6400f870:	test   edx,edx
6400f872:	je     0x6400f9ec
6400f878:	movzx  eax,BYTE PTR [ebp+0x0]
6400f87c:	mov    ecx,esi
6400f87e:	shl    eax,cl
6400f880:	sub    edx,0x1
6400f883:	add    esi,0x8
6400f886:	add    ebp,0x1
6400f889:	add    ebx,eax
6400f88b:	cmp    esi,0x20
6400f88e:	mov    DWORD PTR [esp+0x10],edx
6400f892:	mov    DWORD PTR [esp+0x18],ebx
6400f896:	jb     0x6400f870
6400f898:	mov    eax,DWORD PTR [esp+0x2c]
6400f89c:	sub    eax,DWORD PTR [esp+0x1c]
6400f8a0:	mov    ecx,DWORD PTR [esp+0x40]
6400f8a4:	add    DWORD PTR [ecx+0x14],eax
6400f8a7:	add    DWORD PTR [edi+0x1c],eax
6400f8aa:	test   eax,eax
6400f8ac:	mov    DWORD PTR [esp+0x2c],eax
6400f8b0:	je     0x6400f8e1
6400f8b2:	mov    ecx,DWORD PTR [esp+0x28]
6400f8b6:	mov    edx,DWORD PTR [edi+0x18]
6400f8b9:	push   eax
6400f8ba:	sub    ecx,eax
6400f8bc:	cmp    DWORD PTR [edi+0x10],0x0
6400f8c0:	push   ecx
6400f8c1:	push   edx
6400f8c2:	je     0x6400f8cb
6400f8c4:	call   0x64011710
6400f8c9:	jmp    0x6400f8d0
6400f8cb:	call   0x640111f0
6400f8d0:	mov    ecx,DWORD PTR [esp+0x4c]
6400f8d4:	mov    edx,DWORD PTR [esp+0x1c]
6400f8d8:	mov    DWORD PTR [edi+0x18],eax
6400f8db:	add    esp,0xc
6400f8de:	mov    DWORD PTR [ecx+0x30],eax
6400f8e1:	cmp    DWORD PTR [edi+0x10],0x0
6400f8e5:	mov    eax,DWORD PTR [esp+0x1c]
6400f8e9:	mov    DWORD PTR [esp+0x2c],eax
6400f8ed:	mov    eax,ebx
6400f8ef:	jne    0x6400f90f
6400f8f1:	and    eax,0xff00
6400f8f6:	mov    ecx,ebx
6400f8f8:	shl    ecx,0x10
6400f8fb:	add    eax,ecx
6400f8fd:	xor    ecx,ecx
6400f8ff:	mov    ch,BYTE PTR [esp+0x1a]
6400f903:	shl    eax,0x8
6400f906:	add    eax,ecx
6400f908:	mov    ecx,ebx
6400f90a:	shr    ecx,0x18
6400f90d:	add    eax,ecx
6400f90f:	cmp    eax,DWORD PTR [edi+0x18]
6400f912:	je     0x6400f924
6400f914:	mov    eax,DWORD PTR [esp+0x40]
6400f918:	mov    DWORD PTR [eax+0x18],0x64024cd0
6400f91f:	jmp    0x6400f988
6400f924:	xor    ebx,ebx
6400f926:	mov    DWORD PTR [esp+0x18],ebx
6400f92a:	xor    esi,esi
6400f92c:	mov    DWORD PTR [edi],0x19
6400f932:	cmp    DWORD PTR [edi+0x8],0x0
6400f936:	je     0x6400f9d4
6400f93c:	cmp    DWORD PTR [edi+0x10],0x0
6400f940:	je     0x6400f9d4
6400f946:	cmp    esi,0x20
6400f949:	jae    0x6400f978
6400f94b:	jmp    0x6400f950
6400f94d:	lea    ecx,[ecx+0x0]
6400f950:	test   edx,edx
6400f952:	je     0x6400f9ec
6400f958:	movzx  eax,BYTE PTR [ebp+0x0]
6400f95c:	mov    ecx,esi
6400f95e:	shl    eax,cl
6400f960:	sub    edx,0x1
6400f963:	add    esi,0x8
6400f966:	add    ebp,0x1
6400f969:	add    ebx,eax
6400f96b:	cmp    esi,0x20
6400f96e:	mov    DWORD PTR [esp+0x10],edx
6400f972:	mov    DWORD PTR [esp+0x18],ebx
6400f976:	jb     0x6400f950
6400f978:	cmp    ebx,DWORD PTR [edi+0x1c]
6400f97b:	je     0x6400f9d0
6400f97d:	mov    ecx,DWORD PTR [esp+0x40]
6400f981:	mov    DWORD PTR [ecx+0x18],0x64024cb8
6400f988:	mov    DWORD PTR [edi],0x1b
6400f98e:	mov    eax,DWORD PTR [edi]
6400f990:	cmp    eax,0x1c
6400f993:	jbe    0x6400e610
6400f999:	mov    eax,0xfffffffe
6400f99e:	pop    esi
6400f99f:	pop    ebp
6400f9a0:	pop    ebx
6400f9a1:	pop    edi
6400f9a2:	add    esp,0x2c
6400f9a5:	ret    
6400f9a6:	mov    eax,DWORD PTR [esp+0x40]
6400f9aa:	mov    ecx,DWORD PTR [esp+0x28]
6400f9ae:	mov    DWORD PTR [eax+0xc],ecx
6400f9b1:	mov    ecx,DWORD PTR [esp+0x1c]
6400f9b5:	mov    DWORD PTR [eax],ebp
6400f9b7:	mov    DWORD PTR [eax+0x10],ecx
6400f9ba:	mov    DWORD PTR [eax+0x4],edx
6400f9bd:	mov    DWORD PTR [edi+0x3c],esi
6400f9c0:	pop    esi
6400f9c1:	pop    ebp
6400f9c2:	mov    DWORD PTR [edi+0x38],ebx
6400f9c5:	pop    ebx
6400f9c6:	mov    eax,0x2
6400f9cb:	pop    edi
6400f9cc:	add    esp,0x2c
6400f9cf:	ret    
6400f9d0:	xor    ebx,ebx
6400f9d2:	xor    esi,esi
6400f9d4:	mov    DWORD PTR [edi],0x1a
6400f9da:	mov    DWORD PTR [esp+0x30],0x1
6400f9e2:	jmp    0x6400f9ec
6400f9e4:	mov    DWORD PTR [esp+0x30],0xfffffffd
6400f9ec:	mov    eax,DWORD PTR [esp+0x40]
6400f9f0:	mov    ecx,DWORD PTR [esp+0x28]
6400f9f4:	mov    DWORD PTR [eax+0xc],ecx
6400f9f7:	mov    ecx,DWORD PTR [esp+0x1c]
6400f9fb:	mov    DWORD PTR [eax+0x10],ecx
6400f9fe:	mov    DWORD PTR [eax],ebp
6400fa00:	mov    DWORD PTR [eax+0x4],edx
6400fa03:	cmp    DWORD PTR [edi+0x28],0x0
6400fa07:	mov    DWORD PTR [edi+0x38],ebx
6400fa0a:	mov    DWORD PTR [edi+0x3c],esi
6400fa0d:	jne    0x6400fa1d
6400fa0f:	cmp    DWORD PTR [edi],0x18
6400fa12:	jge    0x6400fa41
6400fa14:	mov    edx,DWORD PTR [esp+0x2c]
6400fa18:	cmp    edx,DWORD PTR [eax+0x10]
6400fa1b:	je     0x6400fa41
6400fa1d:	mov    eax,DWORD PTR [esp+0x2c]
6400fa21:	mov    ebx,DWORD PTR [esp+0x40]
6400fa25:	call   0x6400e4a0
6400fa2a:	test   eax,eax
6400fa2c:	je     0x6400fa41
6400fa2e:	mov    DWORD PTR [edi],0x1c
6400fa34:	pop    esi
6400fa35:	pop    ebp
6400fa36:	pop    ebx
6400fa37:	mov    eax,0xfffffffc
6400fa3c:	pop    edi
6400fa3d:	add    esp,0x2c
6400fa40:	ret    
6400fa41:	mov    esi,DWORD PTR [esp+0x40]
6400fa45:	mov    ebp,DWORD PTR [esp+0x38]
6400fa49:	sub    ebp,DWORD PTR [esi+0x4]
6400fa4c:	mov    ebx,DWORD PTR [esp+0x2c]
6400fa50:	sub    ebx,DWORD PTR [esi+0x10]
6400fa53:	add    DWORD PTR [esi+0x8],ebp
6400fa56:	add    DWORD PTR [esi+0x14],ebx
6400fa59:	add    DWORD PTR [edi+0x1c],ebx
6400fa5c:	cmp    DWORD PTR [edi+0x8],0x0
6400fa60:	je     0x6400fa96
6400fa62:	test   ebx,ebx
6400fa64:	je     0x6400fa96
6400fa66:	cmp    DWORD PTR [edi+0x10],0x0
6400fa6a:	push   ebx
6400fa6b:	je     0x6400fa7e
6400fa6d:	mov    ecx,DWORD PTR [esi+0xc]
6400fa70:	mov    edx,DWORD PTR [edi+0x18]
6400fa73:	sub    ecx,ebx
6400fa75:	push   ecx
6400fa76:	push   edx
6400fa77:	call   0x64011710
6400fa7c:	jmp    0x6400fa8d
6400fa7e:	mov    eax,DWORD PTR [esi+0xc]
6400fa81:	mov    ecx,DWORD PTR [edi+0x18]
6400fa84:	sub    eax,ebx
6400fa86:	push   eax
6400fa87:	push   ecx
6400fa88:	call   0x640111f0
6400fa8d:	mov    DWORD PTR [edi+0x18],eax
6400fa90:	add    esp,0xc
6400fa93:	mov    DWORD PTR [esi+0x30],eax
6400fa96:	mov    edx,DWORD PTR [edi+0x4]
6400fa99:	neg    edx
6400fa9b:	sbb    edx,edx
6400fa9d:	and    edx,0x40
6400faa0:	xor    eax,eax
6400faa2:	cmp    DWORD PTR [edi],0xb
6400faa5:	setne  al
6400faa8:	sub    eax,0x1
6400faab:	and    eax,0x80
6400fab0:	add    edx,eax
6400fab2:	add    edx,DWORD PTR [edi+0x3c]
6400fab5:	test   ebp,ebp
6400fab7:	mov    DWORD PTR [esi+0x2c],edx
6400faba:	jne    0x6400fac0
6400fabc:	test   ebx,ebx
6400fabe:	je     0x6400fac7
6400fac0:	cmp    DWORD PTR [esp+0x44],0x4
6400fac5:	jne    0x6400fae0
6400fac7:	mov    eax,DWORD PTR [esp+0x30]
6400facb:	test   eax,eax
6400facd:	jne    0x6400f99e
6400fad3:	pop    esi
6400fad4:	pop    ebp
6400fad5:	pop    ebx
6400fad6:	mov    eax,0xfffffffb
6400fadb:	pop    edi
6400fadc:	add    esp,0x2c
6400fadf:	ret    
6400fae0:	mov    eax,DWORD PTR [esp+0x30]
6400fae4:	pop    esi
6400fae5:	pop    ebp
6400fae6:	pop    ebx
6400fae7:	pop    edi
6400fae8:	add    esp,0x2c
6400faeb:	ret    
6400faec:	mov    eax,0xfffffffe
6400faf1:	pop    edi
6400faf2:	add    esp,0x2c
6400faf5:	ret    
6400faf6:	mov    edi,edi
6400faf8:	pop    ss
6400faf9:	out    0x0,al
6400fafb:	fs test edi,esp
6400fafe:	add    BYTE PTR [ebx+esi*1-0x18],ah
6400fb02:	add    BYTE PTR [edx+esi*4-0x18],ah
6400fb06:	add    BYTE PTR [esp+esi*1-0x17],ah
6400fb0a:	add    BYTE PTR [edi+edi*4-0x17],ah
6400fb0e:	add    BYTE PTR [ebx+edi*2-0x16],ah
6400fb12:	add    BYTE PTR [ebx+esi*1-0x15],ah
6400fb16:	add    BYTE PTR [edx+ebp*8-0x15],ah
6400fb1a:	add    BYTE PTR [esp+eax*4-0x14],ah
6400fb1e:	add    BYTE PTR [esp+ebp*8-0x14],ah
6400fb22:	add    BYTE PTR [eax+ebx*1-0x13],ah
6400fb26:	add    BYTE PTR [ebx+eiz*1-0x13],ah
6400fb2a:	add    BYTE PTR [esi+ebp*8-0x13],ah
6400fb2e:	add    BYTE PTR [ebx+ebx*2-0x12],ah
6400fb32:	add    BYTE PTR [ebx+edi*4-0x12],ah
6400fb36:	add    BYTE PTR [ebx+edi*1-0x11],ah
6400fb3a:	add    BYTE PTR [edx+esi*1-0x10],ah
6400fb3e:	add    BYTE PTR [ebx+eax*2-0xd],ah
6400fb42:	add    BYTE PTR [edi+eax*2-0xb],ah
6400fb46:	add    BYTE PTR [edx+edx*4-0xb],ah
6400fb4a:	add    BYTE PTR [ecx+ecx*1-0x9],ah
6400fb4e:	add    BYTE PTR [eax+edi*2-0x9],ah
6400fb52:	add    BYTE PTR [esp+esi*1-0x8],ah
6400fb56:	add    BYTE PTR [edi+ebx*2-0x8],ah
6400fb5a:	add    BYTE PTR [edx+esi*1-0x7],ah
6400fb5e:	add    BYTE PTR [edx+ebx*8-0x7],ah
6400fb62:	add    BYTE PTR [esp+eiz*8-0x7],ah
6400fb66:	add    BYTE PTR [esp+esi*1-0x6],ah
6400fb6a:	add    BYTE PTR [eax+ecx*4-0x13],ah
6400fb6e:	add    BYTE PTR [ebp+ebx*4-0x13],ah
6400fb72:	add    BYTE PTR [ecx+edi*4-0x13],ah
6400fb76:	add    BYTE PTR [esi+ecx*8-0x13],ah
6400fb7a:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400fb7e:	int3   
6400fb7f:	int3   
6400fb80:	push   esi
6400fb81:	mov    esi,DWORD PTR [esp+0x8]
6400fb85:	test   esi,esi
6400fb87:	je     0x6400fbc3
6400fb89:	mov    eax,DWORD PTR [esi+0x1c]
6400fb8c:	test   eax,eax
6400fb8e:	je     0x6400fbc3
6400fb90:	mov    ecx,DWORD PTR [esi+0x24]
6400fb93:	test   ecx,ecx
6400fb95:	je     0x6400fbc3
6400fb97:	mov    eax,DWORD PTR [eax+0x34]
6400fb9a:	test   eax,eax
6400fb9c:	je     0x6400fba8
6400fb9e:	push   eax
6400fb9f:	mov    eax,DWORD PTR [esi+0x28]
6400fba2:	push   eax
6400fba3:	call   ecx
6400fba5:	add    esp,0x8
6400fba8:	mov    ecx,DWORD PTR [esi+0x1c]
6400fbab:	mov    edx,DWORD PTR [esi+0x28]
6400fbae:	mov    eax,DWORD PTR [esi+0x24]
6400fbb1:	push   ecx
6400fbb2:	push   edx
6400fbb3:	call   eax
6400fbb5:	add    esp,0x8
6400fbb8:	mov    DWORD PTR [esi+0x1c],0x0
6400fbbf:	xor    eax,eax
6400fbc1:	pop    esi
6400fbc2:	ret    
6400fbc3:	mov    eax,0xfffffffe
6400fbc8:	pop    esi
6400fbc9:	ret    
6400fbca:	int3   
6400fbcb:	int3   
6400fbcc:	int3   
6400fbcd:	int3   
6400fbce:	int3   
6400fbcf:	int3   
6400fbd0:	push   esi
6400fbd1:	mov    esi,eax
6400fbd3:	mov    eax,DWORD PTR [esi+0x1c]
6400fbd6:	mov    ecx,DWORD PTR [esi+0x10]
6400fbd9:	push   edi
6400fbda:	mov    edi,DWORD PTR [eax+0x14]
6400fbdd:	cmp    edi,ecx
6400fbdf:	jbe    0x6400fbe3
6400fbe1:	mov    edi,ecx
6400fbe3:	test   edi,edi
6400fbe5:	je     0x6400fc1c
6400fbe7:	mov    eax,DWORD PTR [eax+0x10]
6400fbea:	mov    ecx,DWORD PTR [esi+0xc]
6400fbed:	push   edi
6400fbee:	push   eax
6400fbef:	push   ecx
6400fbf0:	call   0x640151e0
6400fbf5:	mov    eax,DWORD PTR [esi+0x1c]
6400fbf8:	add    DWORD PTR [esi+0xc],edi
6400fbfb:	add    DWORD PTR [eax+0x10],edi
6400fbfe:	add    DWORD PTR [esi+0x14],edi
6400fc01:	sub    DWORD PTR [esi+0x10],edi
6400fc04:	mov    eax,DWORD PTR [esi+0x1c]
6400fc07:	sub    DWORD PTR [eax+0x14],edi
6400fc0a:	mov    esi,DWORD PTR [esi+0x1c]
6400fc0d:	add    esp,0xc
6400fc10:	cmp    DWORD PTR [esi+0x14],0x0
6400fc14:	jne    0x6400fc1c
6400fc16:	mov    edx,DWORD PTR [esi+0x8]
6400fc19:	mov    DWORD PTR [esi+0x10],edx
6400fc1c:	pop    edi
6400fc1d:	pop    esi
6400fc1e:	ret    
6400fc1f:	int3   
6400fc20:	mov    eax,DWORD PTR [esi+0x4]
6400fc23:	push   edi
6400fc24:	mov    edi,eax
6400fc26:	cmp    edi,ecx
6400fc28:	jbe    0x6400fc2c
6400fc2a:	mov    edi,ecx
6400fc2c:	test   edi,edi
6400fc2e:	jne    0x6400fc34
6400fc30:	xor    eax,eax
6400fc32:	pop    edi
6400fc33:	ret    
6400fc34:	sub    eax,edi
6400fc36:	mov    DWORD PTR [esi+0x4],eax
6400fc39:	mov    eax,DWORD PTR [esi+0x1c]
6400fc3c:	mov    eax,DWORD PTR [eax+0x18]
6400fc3f:	cmp    eax,0x1
6400fc42:	jne    0x6400fc53
6400fc44:	mov    ecx,DWORD PTR [esi]
6400fc46:	mov    edx,DWORD PTR [esi+0x30]
6400fc49:	push   edi
6400fc4a:	push   ecx
6400fc4b:	push   edx
6400fc4c:	call   0x640111f0
6400fc51:	jmp    0x6400fc65
6400fc53:	cmp    eax,0x2
6400fc56:	jne    0x6400fc6b
6400fc58:	mov    eax,DWORD PTR [esi]
6400fc5a:	mov    ecx,DWORD PTR [esi+0x30]
6400fc5d:	push   edi
6400fc5e:	push   eax
6400fc5f:	push   ecx
6400fc60:	call   0x64011710
6400fc65:	mov    DWORD PTR [esi+0x30],eax
6400fc68:	add    esp,0xc
6400fc6b:	mov    edx,DWORD PTR [esi]
6400fc6d:	mov    eax,DWORD PTR [esp+0x8]
6400fc71:	push   edi
6400fc72:	push   edx
6400fc73:	push   eax
6400fc74:	call   0x640151e0
6400fc79:	add    DWORD PTR [esi],edi
6400fc7b:	add    DWORD PTR [esi+0x8],edi
6400fc7e:	add    esp,0xc
6400fc81:	mov    eax,edi
6400fc83:	pop    edi
6400fc84:	ret    
6400fc85:	int3   
6400fc86:	int3   
6400fc87:	int3   
6400fc88:	int3   
6400fc89:	int3   
6400fc8a:	int3   
6400fc8b:	int3   
6400fc8c:	int3   
6400fc8d:	int3   
6400fc8e:	int3   
6400fc8f:	int3   
6400fc90:	sub    esp,0x14
6400fc93:	mov    ecx,DWORD PTR [edi+0x7c]
6400fc96:	mov    edx,DWORD PTR [edi+0x6c]
6400fc99:	push   ebx
6400fc9a:	push   ebp
6400fc9b:	mov    ebp,DWORD PTR [edi+0x78]
6400fc9e:	push   esi
6400fc9f:	mov    esi,DWORD PTR [edi+0x90]
6400fca5:	mov    DWORD PTR [esp+0x10],ecx
6400fca9:	mov    ecx,DWORD PTR [edi+0x38]
6400fcac:	mov    DWORD PTR [esp+0x14],esi
6400fcb0:	mov    esi,DWORD PTR [edi+0x2c]
6400fcb3:	lea    ebx,[esi-0x106]
6400fcb9:	add    ecx,edx
6400fcbb:	cmp    edx,ebx
6400fcbd:	jbe    0x6400fccd
6400fcbf:	sub    edx,esi
6400fcc1:	add    edx,0x106
6400fcc7:	mov    DWORD PTR [esp+0x18],edx
6400fccb:	jmp    0x6400fcd5
6400fccd:	mov    DWORD PTR [esp+0x18],0x0
6400fcd5:	cmp    ebp,DWORD PTR [edi+0x8c]
6400fcdb:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
6400fce0:	mov    BYTE PTR [esp+0xe],dl
6400fce4:	movzx  edx,BYTE PTR [ecx+ebp*1]
6400fce8:	lea    esi,[ecx+0x102]
6400fcee:	mov    BYTE PTR [esp+0xf],dl
6400fcf2:	jb     0x6400fcf9
6400fcf4:	shr    DWORD PTR [esp+0x10],0x2
6400fcf9:	mov    edx,DWORD PTR [edi+0x74]
6400fcfc:	cmp    DWORD PTR [esp+0x14],edx
6400fd00:	jbe    0x6400fd06
6400fd02:	mov    DWORD PTR [esp+0x14],edx
6400fd06:	mov    edx,DWORD PTR [edi+0x38]
6400fd09:	mov    bl,BYTE PTR [esp+0xf]
6400fd0d:	add    edx,eax
6400fd0f:	cmp    BYTE PTR [edx+ebp*1],bl
6400fd12:	jne    0x6400fddf
6400fd18:	mov    bl,BYTE PTR [esp+0xe]
6400fd1c:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
6400fd20:	jne    0x6400fddf
6400fd26:	mov    bl,BYTE PTR [edx]
6400fd28:	cmp    bl,BYTE PTR [ecx]
6400fd2a:	jne    0x6400fddf
6400fd30:	mov    bl,BYTE PTR [edx+0x1]
6400fd33:	add    edx,0x1
6400fd36:	cmp    bl,BYTE PTR [ecx+0x1]
6400fd39:	jne    0x6400fddf
6400fd3f:	add    ecx,0x2
6400fd42:	add    edx,0x1
6400fd45:	mov    bl,BYTE PTR [ecx+0x1]
6400fd48:	add    ecx,0x1
6400fd4b:	add    edx,0x1
6400fd4e:	cmp    bl,BYTE PTR [edx]
6400fd50:	jne    0x6400fdb1
6400fd52:	mov    bl,BYTE PTR [ecx+0x1]
6400fd55:	add    ecx,0x1
6400fd58:	add    edx,0x1
6400fd5b:	cmp    bl,BYTE PTR [edx]
6400fd5d:	jne    0x6400fdb1
6400fd5f:	mov    bl,BYTE PTR [ecx+0x1]
6400fd62:	add    ecx,0x1
6400fd65:	add    edx,0x1
6400fd68:	cmp    bl,BYTE PTR [edx]
6400fd6a:	jne    0x6400fdb1
6400fd6c:	mov    bl,BYTE PTR [ecx+0x1]
6400fd6f:	add    ecx,0x1
6400fd72:	add    edx,0x1
6400fd75:	cmp    bl,BYTE PTR [edx]
6400fd77:	jne    0x6400fdb1
6400fd79:	mov    bl,BYTE PTR [ecx+0x1]
6400fd7c:	add    ecx,0x1
6400fd7f:	add    edx,0x1
6400fd82:	cmp    bl,BYTE PTR [edx]
6400fd84:	jne    0x6400fdb1
6400fd86:	mov    bl,BYTE PTR [ecx+0x1]
6400fd89:	add    ecx,0x1
6400fd8c:	add    edx,0x1
6400fd8f:	cmp    bl,BYTE PTR [edx]
6400fd91:	jne    0x6400fdb1
6400fd93:	mov    bl,BYTE PTR [ecx+0x1]
6400fd96:	add    ecx,0x1
6400fd99:	add    edx,0x1
6400fd9c:	cmp    bl,BYTE PTR [edx]
6400fd9e:	jne    0x6400fdb1
6400fda0:	mov    bl,BYTE PTR [ecx+0x1]
6400fda3:	add    ecx,0x1
6400fda6:	add    edx,0x1
6400fda9:	cmp    bl,BYTE PTR [edx]
6400fdab:	jne    0x6400fdb1
6400fdad:	cmp    ecx,esi
6400fdaf:	jb     0x6400fd45
6400fdb1:	mov    edx,ecx
6400fdb3:	sub    edx,esi
6400fdb5:	add    edx,0x102
6400fdbb:	cmp    edx,ebp
6400fdbd:	lea    ecx,[esi-0x102]
6400fdc3:	jle    0x6400fddf
6400fdc5:	cmp    edx,DWORD PTR [esp+0x14]
6400fdc9:	mov    DWORD PTR [edi+0x70],eax
6400fdcc:	mov    ebp,edx
6400fdce:	jge    0x6400fdfc
6400fdd0:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
6400fdd4:	mov    dl,BYTE PTR [edx+ecx*1]
6400fdd7:	mov    BYTE PTR [esp+0xe],bl
6400fddb:	mov    BYTE PTR [esp+0xf],dl
6400fddf:	mov    edx,DWORD PTR [edi+0x34]
6400fde2:	and    edx,eax
6400fde4:	mov    eax,DWORD PTR [edi+0x40]
6400fde7:	movzx  eax,WORD PTR [eax+edx*2]
6400fdeb:	cmp    eax,DWORD PTR [esp+0x18]
6400fdef:	jbe    0x6400fdfc
6400fdf1:	sub    DWORD PTR [esp+0x10],0x1
6400fdf6:	jne    0x6400fd06
6400fdfc:	mov    eax,DWORD PTR [edi+0x74]
6400fdff:	cmp    ebp,eax
6400fe01:	ja     0x6400fe05
6400fe03:	mov    eax,ebp
6400fe05:	pop    esi
6400fe06:	pop    ebp
6400fe07:	pop    ebx
6400fe08:	add    esp,0x14
6400fe0b:	ret    
6400fe0c:	int3   
6400fe0d:	int3   
6400fe0e:	int3   
6400fe0f:	int3   
6400fe10:	mov    ecx,DWORD PTR [esi+0x38]
6400fe13:	mov    eax,DWORD PTR [esi+0x6c]
6400fe16:	push   ebp
6400fe17:	mov    ebp,DWORD PTR [esp+0x8]
6400fe1b:	mov    dl,BYTE PTR [ecx+ebp*1]
6400fe1e:	add    eax,ecx
6400fe20:	add    ecx,ebp
6400fe22:	cmp    dl,BYTE PTR [eax]
6400fe24:	push   edi
6400fe25:	lea    edi,[eax+0x102]
6400fe2b:	jne    0x6400feca
6400fe31:	mov    dl,BYTE PTR [ecx+0x1]
6400fe34:	cmp    dl,BYTE PTR [eax+0x1]
6400fe37:	jne    0x6400feca
6400fe3d:	add    eax,0x2
6400fe40:	add    ecx,0x2
6400fe43:	mov    dl,BYTE PTR [eax+0x1]
6400fe46:	add    eax,0x1
6400fe49:	add    ecx,0x1
6400fe4c:	cmp    dl,BYTE PTR [ecx]
6400fe4e:	jne    0x6400feaf
6400fe50:	mov    dl,BYTE PTR [eax+0x1]
6400fe53:	add    eax,0x1
6400fe56:	add    ecx,0x1
6400fe59:	cmp    dl,BYTE PTR [ecx]
6400fe5b:	jne    0x6400feaf
6400fe5d:	mov    dl,BYTE PTR [eax+0x1]
6400fe60:	add    eax,0x1
6400fe63:	add    ecx,0x1
6400fe66:	cmp    dl,BYTE PTR [ecx]
6400fe68:	jne    0x6400feaf
6400fe6a:	mov    dl,BYTE PTR [eax+0x1]
6400fe6d:	add    eax,0x1
6400fe70:	add    ecx,0x1
6400fe73:	cmp    dl,BYTE PTR [ecx]
6400fe75:	jne    0x6400feaf
6400fe77:	mov    dl,BYTE PTR [eax+0x1]
6400fe7a:	add    eax,0x1
6400fe7d:	add    ecx,0x1
6400fe80:	cmp    dl,BYTE PTR [ecx]
6400fe82:	jne    0x6400feaf
6400fe84:	mov    dl,BYTE PTR [eax+0x1]
6400fe87:	add    eax,0x1
6400fe8a:	add    ecx,0x1
6400fe8d:	cmp    dl,BYTE PTR [ecx]
6400fe8f:	jne    0x6400feaf
6400fe91:	mov    dl,BYTE PTR [eax+0x1]
6400fe94:	add    eax,0x1
6400fe97:	add    ecx,0x1
6400fe9a:	cmp    dl,BYTE PTR [ecx]
6400fe9c:	jne    0x6400feaf
6400fe9e:	mov    dl,BYTE PTR [eax+0x1]
6400fea1:	add    eax,0x1
6400fea4:	add    ecx,0x1
6400fea7:	cmp    dl,BYTE PTR [ecx]
6400fea9:	jne    0x6400feaf
6400feab:	cmp    eax,edi
6400fead:	jb     0x6400fe43
6400feaf:	sub    eax,edi
6400feb1:	add    eax,0x102
6400feb6:	cmp    eax,0x3
6400feb9:	jl     0x6400feca
6400febb:	mov    ecx,DWORD PTR [esi+0x74]
6400febe:	cmp    eax,ecx
6400fec0:	mov    DWORD PTR [esi+0x70],ebp
6400fec3:	jbe    0x6400fecf
6400fec5:	pop    edi
6400fec6:	mov    eax,ecx
6400fec8:	pop    ebp
6400fec9:	ret    
6400feca:	mov    eax,0x2
6400fecf:	pop    edi
6400fed0:	pop    ebp
6400fed1:	ret    
6400fed2:	int3   
6400fed3:	int3   
6400fed4:	int3   
6400fed5:	int3   
6400fed6:	int3   
6400fed7:	int3   
6400fed8:	int3   
6400fed9:	int3   
6400feda:	int3   
6400fedb:	int3   
6400fedc:	int3   
6400fedd:	int3   
6400fede:	int3   
6400fedf:	int3   
6400fee0:	push   ebx
6400fee1:	mov    ebx,DWORD PTR [edi+0x2c]
6400fee4:	push   ebp
6400fee5:	push   esi
6400fee6:	mov    ebp,DWORD PTR [edi+0x3c]
6400fee9:	sub    ebp,DWORD PTR [edi+0x74]
6400feec:	mov    eax,DWORD PTR [edi+0x6c]
6400feef:	mov    ecx,DWORD PTR [edi+0x2c]
6400fef2:	lea    edx,[ebx+ecx*1-0x106]
6400fef9:	sub    ebp,eax
6400fefb:	cmp    eax,edx
6400fefd:	jb     0x6400ff5e
6400feff:	mov    eax,DWORD PTR [edi+0x38]
6400ff02:	push   ebx
6400ff03:	lea    ecx,[eax+ebx*1]
6400ff06:	push   ecx
6400ff07:	push   eax
6400ff08:	call   0x640151e0
6400ff0d:	mov    edx,DWORD PTR [edi+0x4c]
6400ff10:	mov    eax,DWORD PTR [edi+0x44]
6400ff13:	sub    DWORD PTR [edi+0x70],ebx
6400ff16:	sub    DWORD PTR [edi+0x6c],ebx
6400ff19:	add    esp,0xc
6400ff1c:	sub    DWORD PTR [edi+0x5c],ebx
6400ff1f:	lea    ecx,[eax+edx*2]
6400ff22:	movzx  eax,WORD PTR [ecx-0x2]
6400ff26:	sub    ecx,0x2
6400ff29:	cmp    eax,ebx
6400ff2b:	jb     0x6400ff31
6400ff2d:	sub    eax,ebx
6400ff2f:	jmp    0x6400ff33
6400ff31:	xor    eax,eax
6400ff33:	sub    edx,0x1
6400ff36:	mov    WORD PTR [ecx],ax
6400ff39:	jne    0x6400ff22
6400ff3b:	mov    ecx,DWORD PTR [edi+0x40]
6400ff3e:	mov    edx,ebx
6400ff40:	lea    ecx,[ecx+ebx*2]
6400ff43:	movzx  eax,WORD PTR [ecx-0x2]
6400ff47:	sub    ecx,0x2
6400ff4a:	cmp    eax,ebx
6400ff4c:	jb     0x6400ff52
6400ff4e:	sub    eax,ebx
6400ff50:	jmp    0x6400ff54
6400ff52:	xor    eax,eax
6400ff54:	sub    edx,0x1
6400ff57:	mov    WORD PTR [ecx],ax
6400ff5a:	jne    0x6400ff43
6400ff5c:	add    ebp,ebx
6400ff5e:	mov    esi,DWORD PTR [edi]
6400ff60:	cmp    DWORD PTR [esi+0x4],0x0
6400ff64:	je     0x6400ffb9
6400ff66:	mov    edx,DWORD PTR [edi+0x74]
6400ff69:	add    edx,DWORD PTR [edi+0x6c]
6400ff6c:	mov    ecx,ebp
6400ff6e:	add    edx,DWORD PTR [edi+0x38]
6400ff71:	push   edx
6400ff72:	call   0x6400fc20
6400ff77:	add    DWORD PTR [edi+0x74],eax
6400ff7a:	mov    edx,DWORD PTR [edi+0x74]
6400ff7d:	add    esp,0x4
6400ff80:	cmp    edx,0x3
6400ff83:	jb     0x6400ffa5
6400ff85:	mov    eax,DWORD PTR [edi+0x6c]
6400ff88:	mov    ecx,DWORD PTR [edi+0x38]
6400ff8b:	lea    esi,[eax+ecx*1]
6400ff8e:	movzx  eax,BYTE PTR [esi]
6400ff91:	mov    ecx,DWORD PTR [edi+0x58]
6400ff94:	mov    DWORD PTR [edi+0x48],eax
6400ff97:	shl    eax,cl
6400ff99:	movzx  ecx,BYTE PTR [esi+0x1]
6400ff9d:	xor    eax,ecx
6400ff9f:	and    eax,DWORD PTR [edi+0x54]
6400ffa2:	mov    DWORD PTR [edi+0x48],eax
6400ffa5:	cmp    edx,0x106
6400ffab:	jae    0x6400ffb9
6400ffad:	mov    edx,DWORD PTR [edi]
6400ffaf:	cmp    DWORD PTR [edx+0x4],0x0
6400ffb3:	jne    0x6400fee6
6400ffb9:	pop    esi
6400ffba:	pop    ebp
6400ffbb:	pop    ebx
6400ffbc:	ret    
6400ffbd:	int3   
6400ffbe:	int3   
6400ffbf:	int3   
6400ffc0:	push   esi
6400ffc1:	push   edi
6400ffc2:	mov    edi,DWORD PTR [esp+0xc]
6400ffc6:	mov    eax,DWORD PTR [edi+0xc]
6400ffc9:	mov    esi,0xffff
6400ffce:	add    eax,0xfffffffb
6400ffd1:	cmp    eax,esi
6400ffd3:	jae    0x6400ffd7
6400ffd5:	mov    esi,eax
6400ffd7:	mov    eax,DWORD PTR [edi+0x74]
6400ffda:	cmp    eax,0x1
6400ffdd:	ja     0x6400ffef
6400ffdf:	call   0x6400fee0
6400ffe4:	mov    eax,DWORD PTR [edi+0x74]
6400ffe7:	test   eax,eax
6400ffe9:	je     0x6401008d
6400ffef:	add    DWORD PTR [edi+0x6c],eax
6400fff2:	mov    ecx,DWORD PTR [edi+0x5c]
6400fff5:	mov    edx,DWORD PTR [edi+0x6c]
6400fff8:	mov    DWORD PTR [edi+0x74],0x0
6400ffff:	lea    eax,[ecx+esi*1]
64010002:	je     0x64010008
64010004:	cmp    edx,eax
64010006:	jb     0x64010041
64010008:	sub    edx,eax
6401000a:	test   ecx,ecx
6401000c:	mov    DWORD PTR [edi+0x74],edx
6401000f:	mov    DWORD PTR [edi+0x6c],eax
64010012:	jl     0x6401001b
64010014:	mov    edx,DWORD PTR [edi+0x38]
64010017:	add    edx,ecx
64010019:	jmp    0x6401001d
6401001b:	xor    edx,edx
6401001d:	push   0x0
6401001f:	sub    eax,ecx
64010021:	push   eax
64010022:	push   edx
64010023:	push   edi
64010024:	call   0x64012cf0
64010029:	mov    eax,DWORD PTR [edi+0x6c]
6401002c:	mov    DWORD PTR [edi+0x5c],eax
6401002f:	mov    eax,DWORD PTR [edi]
64010031:	add    esp,0x10
64010034:	call   0x6400fbd0
64010039:	mov    ecx,DWORD PTR [edi]
6401003b:	cmp    DWORD PTR [ecx+0x10],0x0
6401003f:	je     0x64010088
64010041:	mov    ecx,DWORD PTR [edi+0x5c]
64010044:	mov    edx,DWORD PTR [edi+0x6c]
64010047:	mov    eax,DWORD PTR [edi+0x2c]
6401004a:	sub    edx,ecx
6401004c:	sub    eax,0x106
64010051:	cmp    edx,eax
64010053:	jb     0x6400ffd7
64010055:	test   ecx,ecx
64010057:	jl     0x64010060
64010059:	mov    eax,DWORD PTR [edi+0x38]
6401005c:	add    eax,ecx
6401005e:	jmp    0x64010062
64010060:	xor    eax,eax
64010062:	push   0x0
64010064:	push   edx
64010065:	push   eax
64010066:	push   edi
64010067:	call   0x64012cf0
6401006c:	mov    ecx,DWORD PTR [edi+0x6c]
6401006f:	mov    eax,DWORD PTR [edi]
64010071:	add    esp,0x10
64010074:	mov    DWORD PTR [edi+0x5c],ecx
64010077:	call   0x6400fbd0
6401007c:	mov    edx,DWORD PTR [edi]
6401007e:	cmp    DWORD PTR [edx+0x10],0x0
64010082:	jne    0x6400ffd7
64010088:	pop    edi
64010089:	xor    eax,eax
6401008b:	pop    esi
6401008c:	ret    
6401008d:	mov    esi,DWORD PTR [esp+0x10]
64010091:	test   esi,esi
64010093:	je     0x64010088
64010095:	mov    ecx,DWORD PTR [edi+0x5c]
64010098:	test   ecx,ecx
6401009a:	jl     0x640100a3
6401009c:	mov    eax,DWORD PTR [edi+0x38]
6401009f:	add    eax,ecx
640100a1:	jmp    0x640100a5
640100a3:	xor    eax,eax
640100a5:	xor    edx,edx
640100a7:	cmp    esi,0x4
640100aa:	sete   dl
640100ad:	push   edx
640100ae:	mov    edx,DWORD PTR [edi+0x6c]
640100b1:	sub    edx,ecx
640100b3:	push   edx
640100b4:	push   eax
640100b5:	push   edi
640100b6:	call   0x64012cf0
640100bb:	mov    eax,DWORD PTR [edi+0x6c]
640100be:	mov    DWORD PTR [edi+0x5c],eax
640100c1:	mov    eax,DWORD PTR [edi]
640100c3:	add    esp,0x10
640100c6:	call   0x6400fbd0
640100cb:	mov    ecx,DWORD PTR [edi]
640100cd:	xor    eax,eax
640100cf:	cmp    DWORD PTR [ecx+0x10],eax
640100d2:	jne    0x640100e3
640100d4:	cmp    esi,0x4
640100d7:	setne  al
640100da:	pop    edi
640100db:	pop    esi
640100dc:	sub    eax,0x1
640100df:	and    eax,0x2
640100e2:	ret    
640100e3:	cmp    esi,0x4
640100e6:	sete   al
640100e9:	pop    edi
640100ea:	pop    esi
640100eb:	lea    eax,[eax+eax*1+0x1]
640100ef:	ret    
640100f0:	push   ebx
640100f1:	push   ebp
640100f2:	push   esi
640100f3:	xor    ebp,ebp
640100f5:	push   edi
640100f6:	mov    edi,DWORD PTR [esp+0x14]
640100fa:	lea    ebx,[ebp+0x1]
640100fd:	lea    ecx,[ecx+0x0]
64010100:	mov    eax,DWORD PTR [edi+0x74]
64010103:	cmp    eax,0x106
64010108:	jae    0x6401012d
6401010a:	call   0x6400fee0
6401010f:	mov    eax,DWORD PTR [edi+0x74]
64010112:	cmp    eax,0x106
64010117:	mov    esi,DWORD PTR [esp+0x18]
6401011b:	jae    0x64010125
6401011d:	test   esi,esi
6401011f:	je     0x640103a4
64010125:	test   eax,eax
64010127:	je     0x640103ab
6401012d:	cmp    eax,0x3
64010130:	jb     0x6401017b
64010132:	mov    eax,DWORD PTR [edi+0x48]
64010135:	mov    ecx,DWORD PTR [edi+0x58]
64010138:	mov    edx,DWORD PTR [edi+0x6c]
6401013b:	mov    esi,DWORD PTR [edi+0x34]
6401013e:	shl    eax,cl
64010140:	mov    ecx,DWORD PTR [edi+0x38]
64010143:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
64010148:	xor    eax,ecx
6401014a:	and    eax,DWORD PTR [edi+0x54]
6401014d:	mov    ecx,DWORD PTR [edi+0x44]
64010150:	mov    DWORD PTR [edi+0x48],eax
64010153:	mov    ax,WORD PTR [ecx+eax*2]
64010157:	and    esi,edx
64010159:	mov    edx,DWORD PTR [edi+0x40]
6401015c:	mov    WORD PTR [edx+esi*2],ax
64010160:	mov    ecx,DWORD PTR [edi+0x6c]
64010163:	and    ecx,DWORD PTR [edi+0x34]
64010166:	mov    edx,DWORD PTR [edi+0x40]
64010169:	movzx  ebp,WORD PTR [edx+ecx*2]
6401016d:	mov    eax,DWORD PTR [edi+0x48]
64010170:	mov    ecx,DWORD PTR [edi+0x44]
64010173:	mov    dx,WORD PTR [edi+0x6c]
64010177:	mov    WORD PTR [ecx+eax*2],dx
6401017b:	test   ebp,ebp
6401017d:	je     0x640101c1
6401017f:	mov    eax,DWORD PTR [edi+0x6c]
64010182:	mov    ecx,DWORD PTR [edi+0x2c]
64010185:	sub    eax,ebp
64010187:	sub    ecx,0x106
6401018d:	cmp    eax,ecx
6401018f:	ja     0x640101c1
64010191:	mov    ecx,DWORD PTR [edi+0x88]
64010197:	cmp    ecx,0x2
6401019a:	je     0x640101aa
6401019c:	cmp    ecx,0x3
6401019f:	je     0x640101af
640101a1:	mov    eax,ebp
640101a3:	call   0x6400fc90
640101a8:	jmp    0x640101be
640101aa:	cmp    ecx,0x3
640101ad:	jne    0x640101c1
640101af:	cmp    eax,ebx
640101b1:	jne    0x640101c1
640101b3:	push   ebp
640101b4:	mov    esi,edi
640101b6:	call   0x6400fe10
640101bb:	add    esp,0x4
640101be:	mov    DWORD PTR [edi+0x60],eax
640101c1:	cmp    DWORD PTR [edi+0x60],0x3
640101c5:	jb     0x64010303
640101cb:	mov    dx,WORD PTR [edi+0x6c]
640101cf:	sub    dx,WORD PTR [edi+0x70]
640101d3:	mov    al,BYTE PTR [edi+0x60]
640101d6:	mov    esi,DWORD PTR [edi+0x16a4]
640101dc:	movzx  ecx,dx
640101df:	mov    edx,DWORD PTR [edi+0x16a0]
640101e5:	mov    WORD PTR [esi+edx*2],cx
640101e9:	mov    edx,DWORD PTR [edi+0x1698]
640101ef:	mov    esi,DWORD PTR [edi+0x16a0]
640101f5:	sub    al,0x3
640101f7:	mov    BYTE PTR [edx+esi*1],al
640101fa:	add    DWORD PTR [edi+0x16a0],ebx
64010200:	movzx  eax,al
64010203:	movzx  edx,BYTE PTR [eax+0x64027950]
6401020a:	add    WORD PTR [edi+edx*4+0x498],bx
64010212:	lea    eax,[edi+edx*4+0x498]
64010219:	add    ecx,0xffff
6401021f:	cmp    cx,0x100
64010224:	jae    0x64010232
64010226:	movzx  eax,cx
64010229:	movzx  eax,BYTE PTR [eax+0x64027750]
64010230:	jmp    0x6401023f
64010232:	movzx  ecx,cx
64010235:	shr    ecx,0x7
64010238:	movzx  eax,BYTE PTR [ecx+0x64027850]
6401023f:	add    WORD PTR [edi+eax*4+0x988],bx
64010247:	mov    edx,DWORD PTR [edi+0x169c]
6401024d:	xor    eax,eax
6401024f:	sub    edx,ebx
64010251:	cmp    DWORD PTR [edi+0x16a0],edx
64010257:	sete   al
6401025a:	mov    esi,eax
6401025c:	mov    eax,DWORD PTR [edi+0x60]
6401025f:	sub    DWORD PTR [edi+0x74],eax
64010262:	cmp    eax,DWORD PTR [edi+0x80]
64010268:	mov    ecx,DWORD PTR [edi+0x74]
6401026b:	ja     0x640102d7
6401026d:	cmp    ecx,0x3
64010270:	jb     0x640102d7
64010272:	add    eax,0xffffffff
64010275:	mov    DWORD PTR [edi+0x60],eax
64010278:	jmp    0x64010280
6401027a:	lea    ebx,[ebx+0x0]
64010280:	add    DWORD PTR [edi+0x6c],ebx
64010283:	mov    edx,DWORD PTR [edi+0x6c]
64010286:	mov    ecx,DWORD PTR [edi+0x38]
64010289:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
6401028e:	mov    ebp,DWORD PTR [edi+0x48]
64010291:	mov    ecx,DWORD PTR [edi+0x58]
64010294:	shl    ebp,cl
64010296:	mov    ecx,DWORD PTR [edi+0x44]
64010299:	xor    eax,ebp
6401029b:	and    eax,DWORD PTR [edi+0x54]
6401029e:	mov    ebp,DWORD PTR [edi+0x34]
640102a1:	and    ebp,edx
640102a3:	mov    edx,DWORD PTR [edi+0x40]
640102a6:	mov    DWORD PTR [edi+0x48],eax
640102a9:	mov    ax,WORD PTR [ecx+eax*2]
640102ad:	mov    WORD PTR [edx+ebp*2],ax
640102b1:	mov    ecx,DWORD PTR [edi+0x6c]
640102b4:	and    ecx,DWORD PTR [edi+0x34]
640102b7:	mov    edx,DWORD PTR [edi+0x40]
640102ba:	movzx  ebp,WORD PTR [edx+ecx*2]
640102be:	mov    eax,DWORD PTR [edi+0x48]
640102c1:	mov    ecx,DWORD PTR [edi+0x44]
640102c4:	mov    dx,WORD PTR [edi+0x6c]
640102c8:	mov    WORD PTR [ecx+eax*2],dx
640102cc:	add    DWORD PTR [edi+0x60],0xffffffff
640102d0:	jne    0x64010280
640102d2:	jmp    0x6401035e
640102d7:	add    DWORD PTR [edi+0x6c],eax
640102da:	mov    eax,DWORD PTR [edi+0x6c]
640102dd:	mov    ecx,DWORD PTR [edi+0x38]
640102e0:	lea    edx,[eax+ecx*1]
640102e3:	mov    ecx,DWORD PTR [edi+0x58]
640102e6:	mov    DWORD PTR [edi+0x60],0x0
640102ed:	movzx  eax,BYTE PTR [edx]
640102f0:	mov    DWORD PTR [edi+0x48],eax
640102f3:	movzx  edx,BYTE PTR [edx+0x1]
640102f7:	shl    eax,cl
640102f9:	xor    eax,edx
640102fb:	and    eax,DWORD PTR [edi+0x54]
640102fe:	mov    DWORD PTR [edi+0x48],eax
64010301:	jmp    0x64010361
64010303:	mov    eax,DWORD PTR [edi+0x6c]
64010306:	mov    ecx,DWORD PTR [edi+0x38]
64010309:	mov    al,BYTE PTR [eax+ecx*1]
6401030c:	mov    edx,DWORD PTR [edi+0x16a0]
64010312:	mov    ecx,DWORD PTR [edi+0x16a4]
64010318:	mov    WORD PTR [ecx+edx*2],0x0
6401031e:	mov    ecx,DWORD PTR [edi+0x16a0]
64010324:	mov    edx,DWORD PTR [edi+0x1698]
6401032a:	mov    BYTE PTR [edx+ecx*1],al
6401032d:	add    DWORD PTR [edi+0x16a0],ebx
64010333:	movzx  edx,al
64010336:	add    WORD PTR [edi+edx*4+0x94],bx
6401033e:	lea    eax,[edi+edx*4+0x94]
64010345:	mov    eax,DWORD PTR [edi+0x169c]
6401034b:	xor    ecx,ecx
6401034d:	sub    eax,ebx
6401034f:	cmp    DWORD PTR [edi+0x16a0],eax
64010355:	sete   cl
64010358:	add    DWORD PTR [edi+0x74],0xffffffff
6401035c:	mov    esi,ecx
6401035e:	add    DWORD PTR [edi+0x6c],ebx
64010361:	test   esi,esi
64010363:	je     0x64010100
64010369:	mov    ecx,DWORD PTR [edi+0x5c]
6401036c:	test   ecx,ecx
6401036e:	jl     0x64010377
64010370:	mov    eax,DWORD PTR [edi+0x38]
64010373:	add    eax,ecx
64010375:	jmp    0x64010379
64010377:	xor    eax,eax
64010379:	mov    edx,DWORD PTR [edi+0x6c]
6401037c:	push   0x0
6401037e:	sub    edx,ecx
64010380:	push   edx
64010381:	push   eax
64010382:	push   edi
64010383:	call   0x64012cf0
64010388:	mov    eax,DWORD PTR [edi+0x6c]
6401038b:	mov    DWORD PTR [edi+0x5c],eax
6401038e:	mov    eax,DWORD PTR [edi]
64010390:	add    esp,0x10
64010393:	call   0x6400fbd0
64010398:	mov    ecx,DWORD PTR [edi]
6401039a:	cmp    DWORD PTR [ecx+0x10],0x0
6401039e:	jne    0x64010100
640103a4:	pop    edi
640103a5:	pop    esi
640103a6:	pop    ebp
640103a7:	xor    eax,eax
640103a9:	pop    ebx
640103aa:	ret    
640103ab:	mov    ecx,DWORD PTR [edi+0x5c]
640103ae:	test   ecx,ecx
640103b0:	jl     0x640103b9
640103b2:	mov    eax,DWORD PTR [edi+0x38]
640103b5:	add    eax,ecx
640103b7:	jmp    0x640103bb
640103b9:	xor    eax,eax
640103bb:	xor    edx,edx
640103bd:	cmp    esi,0x4
640103c0:	sete   dl
640103c3:	push   edx
640103c4:	mov    edx,DWORD PTR [edi+0x6c]
640103c7:	sub    edx,ecx
640103c9:	push   edx
640103ca:	push   eax
640103cb:	push   edi
640103cc:	call   0x64012cf0
640103d1:	mov    eax,DWORD PTR [edi+0x6c]
640103d4:	mov    DWORD PTR [edi+0x5c],eax
640103d7:	mov    eax,DWORD PTR [edi]
640103d9:	add    esp,0x10
640103dc:	call   0x6400fbd0
640103e1:	mov    ecx,DWORD PTR [edi]
640103e3:	xor    eax,eax
640103e5:	cmp    DWORD PTR [ecx+0x10],eax
640103e8:	jne    0x640103fb
640103ea:	cmp    esi,0x4
640103ed:	setne  al
640103f0:	pop    edi
640103f1:	pop    esi
640103f2:	pop    ebp
640103f3:	pop    ebx
640103f4:	sub    eax,0x1
640103f7:	and    eax,0x2
640103fa:	ret    
640103fb:	cmp    esi,0x4
640103fe:	sete   al
64010401:	pop    edi
64010402:	pop    esi
64010403:	pop    ebp
64010404:	pop    ebx
64010405:	lea    eax,[eax+eax*1+0x1]
64010409:	ret    
6401040a:	int3   
6401040b:	int3   
6401040c:	int3   
6401040d:	int3   
6401040e:	int3   
6401040f:	int3   
64010410:	push   ecx
64010411:	push   ebx
64010412:	push   ebp
64010413:	push   esi
64010414:	push   edi
64010415:	mov    edi,DWORD PTR [esp+0x18]
64010419:	mov    DWORD PTR [esp+0x10],0x0
64010421:	mov    ebp,0x1
64010426:	mov    eax,DWORD PTR [edi+0x74]
64010429:	cmp    eax,0x106
6401042e:	jae    0x64010453
64010430:	call   0x6400fee0
64010435:	mov    eax,DWORD PTR [edi+0x74]
64010438:	cmp    eax,0x106
6401043d:	mov    esi,DWORD PTR [esp+0x1c]
64010441:	jae    0x6401044b
64010443:	test   esi,esi
64010445:	je     0x640106a6
6401044b:	test   eax,eax
6401044d:	je     0x6401075b
64010453:	cmp    eax,0x3
64010456:	jb     0x640104a5
64010458:	mov    eax,DWORD PTR [edi+0x48]
6401045b:	mov    ecx,DWORD PTR [edi+0x58]
6401045e:	mov    edx,DWORD PTR [edi+0x6c]
64010461:	mov    esi,DWORD PTR [edi+0x34]
64010464:	shl    eax,cl
64010466:	mov    ecx,DWORD PTR [edi+0x38]
64010469:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6401046e:	xor    eax,ecx
64010470:	and    eax,DWORD PTR [edi+0x54]
64010473:	mov    ecx,DWORD PTR [edi+0x44]
64010476:	mov    DWORD PTR [edi+0x48],eax
64010479:	movzx  eax,WORD PTR [ecx+eax*2]
6401047d:	and    esi,edx
6401047f:	mov    edx,DWORD PTR [edi+0x40]
64010482:	mov    WORD PTR [edx+esi*2],ax
64010486:	mov    ecx,DWORD PTR [edi+0x6c]
64010489:	and    ecx,DWORD PTR [edi+0x34]
6401048c:	mov    edx,DWORD PTR [edi+0x40]
6401048f:	movzx  eax,WORD PTR [edx+ecx*2]
64010493:	mov    ecx,DWORD PTR [edi+0x48]
64010496:	mov    edx,DWORD PTR [edi+0x44]
64010499:	mov    DWORD PTR [esp+0x10],eax
6401049d:	movzx  eax,WORD PTR [edi+0x6c]
640104a1:	mov    WORD PTR [edx+ecx*2],ax
640104a5:	mov    edx,DWORD PTR [edi+0x70]
640104a8:	mov    ecx,DWORD PTR [edi+0x60]
640104ab:	mov    DWORD PTR [edi+0x64],edx
640104ae:	mov    edx,DWORD PTR [esp+0x10]
640104b2:	test   edx,edx
640104b4:	mov    ebx,0x2
640104b9:	mov    DWORD PTR [edi+0x78],ecx
640104bc:	mov    DWORD PTR [edi+0x60],ebx
640104bf:	je     0x64010532
640104c1:	mov    eax,ecx
640104c3:	cmp    eax,DWORD PTR [edi+0x80]
640104c9:	jae    0x64010532
640104cb:	mov    eax,DWORD PTR [edi+0x6c]
640104ce:	mov    ecx,DWORD PTR [edi+0x2c]
640104d1:	sub    eax,edx
640104d3:	sub    ecx,0x106
640104d9:	cmp    eax,ecx
640104db:	ja     0x64010532
640104dd:	mov    ecx,DWORD PTR [edi+0x88]
640104e3:	cmp    ecx,ebx
640104e5:	je     0x640104f5
640104e7:	cmp    ecx,0x3
640104ea:	je     0x640104fa
640104ec:	mov    eax,edx
640104ee:	call   0x6400fc90
640104f3:	jmp    0x64010509
640104f5:	cmp    ecx,0x3
640104f8:	jne    0x6401050c
640104fa:	cmp    eax,ebp
640104fc:	jne    0x6401050c
640104fe:	push   edx
640104ff:	mov    esi,edi
64010501:	call   0x6400fe10
64010506:	add    esp,0x4
64010509:	mov    DWORD PTR [edi+0x60],eax
6401050c:	mov    eax,DWORD PTR [edi+0x60]
6401050f:	cmp    eax,0x5
64010512:	ja     0x64010532
64010514:	cmp    DWORD PTR [edi+0x88],ebp
6401051a:	je     0x6401052f
6401051c:	cmp    eax,0x3
6401051f:	jne    0x64010532
64010521:	mov    edx,DWORD PTR [edi+0x6c]
64010524:	sub    edx,DWORD PTR [edi+0x70]
64010527:	cmp    edx,0x1000
6401052d:	jbe    0x64010532
6401052f:	mov    DWORD PTR [edi+0x60],ebx
64010532:	mov    eax,DWORD PTR [edi+0x78]
64010535:	cmp    eax,0x3
64010538:	jb     0x640106ae
6401053e:	cmp    DWORD PTR [edi+0x60],eax
64010541:	ja     0x640106ae
64010547:	mov    dx,WORD PTR [edi+0x6c]
6401054b:	sub    dx,WORD PTR [edi+0x64]
6401054f:	mov    eax,DWORD PTR [edi+0x6c]
64010552:	mov    ecx,DWORD PTR [edi+0x74]
64010555:	mov    ebx,DWORD PTR [edi+0x16a4]
6401055b:	lea    esi,[eax+ecx*1-0x3]
6401055f:	mov    al,BYTE PTR [edi+0x78]
64010562:	sub    dx,bp
64010565:	movzx  ecx,dx
64010568:	mov    edx,DWORD PTR [edi+0x16a0]
6401056e:	mov    WORD PTR [ebx+edx*2],cx
64010572:	mov    edx,DWORD PTR [edi+0x1698]
64010578:	mov    ebx,DWORD PTR [edi+0x16a0]
6401057e:	sub    al,0x3
64010580:	mov    BYTE PTR [edx+ebx*1],al
64010583:	add    DWORD PTR [edi+0x16a0],ebp
64010589:	movzx  eax,al
6401058c:	movzx  edx,BYTE PTR [eax+0x64027950]
64010593:	add    WORD PTR [edi+edx*4+0x498],bp
6401059b:	lea    eax,[edi+edx*4+0x498]
640105a2:	add    ecx,0xffff
640105a8:	cmp    cx,0x100
640105ad:	jae    0x640105bb
640105af:	movzx  eax,cx
640105b2:	movzx  eax,BYTE PTR [eax+0x64027750]
640105b9:	jmp    0x640105c8
640105bb:	movzx  ecx,cx
640105be:	shr    ecx,0x7
640105c1:	movzx  eax,BYTE PTR [ecx+0x64027850]
640105c8:	add    WORD PTR [edi+eax*4+0x988],bp
640105d0:	mov    edx,DWORD PTR [edi+0x169c]
640105d6:	mov    eax,DWORD PTR [edi+0x78]
640105d9:	sub    edx,ebp
640105db:	xor    ebx,ebx
640105dd:	cmp    DWORD PTR [edi+0x16a0],edx
640105e3:	mov    ecx,ebp
640105e5:	sete   bl
640105e8:	sub    ecx,eax
640105ea:	add    DWORD PTR [edi+0x74],ecx
640105ed:	add    eax,0xfffffffe
640105f0:	mov    DWORD PTR [edi+0x78],eax
640105f3:	add    DWORD PTR [edi+0x6c],ebp
640105f6:	mov    edx,DWORD PTR [edi+0x6c]
640105f9:	cmp    edx,esi
640105fb:	ja     0x6401064c
640105fd:	mov    eax,DWORD PTR [edi+0x48]
64010600:	mov    ecx,DWORD PTR [edi+0x58]
64010603:	mov    ebp,DWORD PTR [edi+0x34]
64010606:	shl    eax,cl
64010608:	mov    ecx,DWORD PTR [edi+0x38]
6401060b:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
64010610:	xor    eax,ecx
64010612:	and    eax,DWORD PTR [edi+0x54]
64010615:	mov    ecx,DWORD PTR [edi+0x44]
64010618:	mov    DWORD PTR [edi+0x48],eax
6401061b:	movzx  eax,WORD PTR [ecx+eax*2]
6401061f:	and    ebp,edx
64010621:	mov    edx,DWORD PTR [edi+0x40]
64010624:	mov    WORD PTR [edx+ebp*2],ax
64010628:	mov    ecx,DWORD PTR [edi+0x6c]
6401062b:	and    ecx,DWORD PTR [edi+0x34]
6401062e:	mov    edx,DWORD PTR [edi+0x40]
64010631:	movzx  eax,WORD PTR [edx+ecx*2]
64010635:	mov    ecx,DWORD PTR [edi+0x48]
64010638:	mov    edx,DWORD PTR [edi+0x44]
6401063b:	mov    DWORD PTR [esp+0x10],eax
6401063f:	movzx  eax,WORD PTR [edi+0x6c]
64010643:	mov    WORD PTR [edx+ecx*2],ax
64010647:	mov    ebp,0x1
6401064c:	add    DWORD PTR [edi+0x78],0xffffffff
64010650:	jne    0x640105f3
64010652:	add    DWORD PTR [edi+0x6c],ebp
64010655:	test   ebx,ebx
64010657:	mov    eax,DWORD PTR [edi+0x6c]
6401065a:	mov    DWORD PTR [edi+0x68],0x0
64010661:	mov    DWORD PTR [edi+0x60],0x2
64010668:	je     0x64010426
6401066e:	mov    edx,DWORD PTR [edi+0x5c]
64010671:	test   edx,edx
64010673:	jl     0x6401067c
64010675:	mov    ecx,DWORD PTR [edi+0x38]
64010678:	add    ecx,edx
6401067a:	jmp    0x6401067e
6401067c:	xor    ecx,ecx
6401067e:	push   0x0
64010680:	sub    eax,edx
64010682:	push   eax
64010683:	push   ecx
64010684:	push   edi
64010685:	call   0x64012cf0
6401068a:	mov    ecx,DWORD PTR [edi+0x6c]
6401068d:	mov    eax,DWORD PTR [edi]
6401068f:	add    esp,0x10
64010692:	mov    DWORD PTR [edi+0x5c],ecx
64010695:	call   0x6400fbd0
6401069a:	mov    edx,DWORD PTR [edi]
6401069c:	cmp    DWORD PTR [edx+0x10],0x0
640106a0:	jne    0x64010426
640106a6:	pop    edi
640106a7:	pop    esi
640106a8:	pop    ebp
640106a9:	xor    eax,eax
640106ab:	pop    ebx
640106ac:	pop    ecx
640106ad:	ret    
640106ae:	cmp    DWORD PTR [edi+0x68],0x0
640106b2:	je     0x6401074c
640106b8:	mov    eax,DWORD PTR [edi+0x6c]
640106bb:	mov    ecx,DWORD PTR [edi+0x38]
640106be:	mov    al,BYTE PTR [eax+ecx*1-0x1]
640106c2:	mov    edx,DWORD PTR [edi+0x16a0]
640106c8:	mov    ecx,DWORD PTR [edi+0x16a4]
640106ce:	mov    WORD PTR [ecx+edx*2],0x0
640106d4:	mov    edx,DWORD PTR [edi+0x1698]
640106da:	mov    ecx,DWORD PTR [edi+0x16a0]
640106e0:	mov    BYTE PTR [edx+ecx*1],al
640106e3:	add    DWORD PTR [edi+0x16a0],ebp
640106e9:	movzx  edx,al
640106ec:	add    WORD PTR [edi+edx*4+0x94],bp
640106f4:	lea    eax,[edi+edx*4+0x94]
640106fb:	mov    eax,DWORD PTR [edi+0x169c]
64010701:	sub    eax,ebp
64010703:	cmp    DWORD PTR [edi+0x16a0],eax
64010709:	jne    0x6401073a
6401070b:	mov    ecx,DWORD PTR [edi+0x5c]
6401070e:	test   ecx,ecx
64010710:	jl     0x64010719
64010712:	mov    eax,DWORD PTR [edi+0x38]
64010715:	add    eax,ecx
64010717:	jmp    0x6401071b
64010719:	xor    eax,eax
6401071b:	mov    edx,DWORD PTR [edi+0x6c]
6401071e:	push   0x0
64010720:	sub    edx,ecx
64010722:	push   edx
64010723:	push   eax
64010724:	push   edi
64010725:	call   0x64012cf0
6401072a:	mov    eax,DWORD PTR [edi+0x6c]
6401072d:	mov    DWORD PTR [edi+0x5c],eax
64010730:	mov    eax,DWORD PTR [edi]
64010732:	add    esp,0x10
64010735:	call   0x6400fbd0
6401073a:	mov    ecx,DWORD PTR [edi]
6401073c:	add    DWORD PTR [edi+0x6c],ebp
6401073f:	add    DWORD PTR [edi+0x74],0xffffffff
64010743:	cmp    DWORD PTR [ecx+0x10],0x0
64010747:	jmp    0x640106a0
6401074c:	add    DWORD PTR [edi+0x6c],ebp
6401074f:	add    DWORD PTR [edi+0x74],0xffffffff
64010753:	mov    DWORD PTR [edi+0x68],ebp
64010756:	jmp    0x64010426
6401075b:	cmp    DWORD PTR [edi+0x68],0x0
6401075f:	je     0x640107ab
64010761:	mov    edx,DWORD PTR [edi+0x6c]
64010764:	mov    eax,DWORD PTR [edi+0x38]
64010767:	mov    al,BYTE PTR [edx+eax*1-0x1]
6401076b:	mov    ecx,DWORD PTR [edi+0x16a0]
64010771:	mov    edx,DWORD PTR [edi+0x16a4]
64010777:	mov    WORD PTR [edx+ecx*2],0x0
6401077d:	mov    edx,DWORD PTR [edi+0x16a0]
64010783:	mov    ecx,DWORD PTR [edi+0x1698]
64010789:	mov    BYTE PTR [ecx+edx*1],al
6401078c:	add    DWORD PTR [edi+0x16a0],ebp
64010792:	movzx  eax,al
64010795:	add    WORD PTR [edi+eax*4+0x94],bp
6401079d:	lea    eax,[edi+eax*4+0x94]
640107a4:	mov    DWORD PTR [edi+0x68],0x0
640107ab:	mov    ecx,DWORD PTR [edi+0x5c]
640107ae:	test   ecx,ecx
640107b0:	jl     0x640107b9
640107b2:	mov    eax,DWORD PTR [edi+0x38]
640107b5:	add    eax,ecx
640107b7:	jmp    0x640107bb
640107b9:	xor    eax,eax
640107bb:	xor    edx,edx
640107bd:	cmp    esi,0x4
640107c0:	sete   dl
640107c3:	push   edx
640107c4:	mov    edx,DWORD PTR [edi+0x6c]
640107c7:	sub    edx,ecx
640107c9:	push   edx
640107ca:	push   eax
640107cb:	push   edi
640107cc:	call   0x64012cf0
640107d1:	mov    eax,DWORD PTR [edi+0x6c]
640107d4:	mov    DWORD PTR [edi+0x5c],eax
640107d7:	mov    eax,DWORD PTR [edi]
640107d9:	add    esp,0x10
640107dc:	call   0x6400fbd0
640107e1:	mov    ecx,DWORD PTR [edi]
640107e3:	xor    eax,eax
640107e5:	cmp    DWORD PTR [ecx+0x10],eax
640107e8:	jne    0x640107fc
640107ea:	cmp    esi,0x4
640107ed:	setne  al
640107f0:	pop    edi
640107f1:	pop    esi
640107f2:	pop    ebp
640107f3:	pop    ebx
640107f4:	sub    eax,0x1
640107f7:	and    eax,0x2
640107fa:	pop    ecx
640107fb:	ret    
640107fc:	cmp    esi,0x4
640107ff:	sete   al
64010802:	pop    edi
64010803:	pop    esi
64010804:	pop    ebp
64010805:	pop    ebx
64010806:	lea    eax,[eax+eax*1+0x1]
6401080a:	pop    ecx
6401080b:	ret    
6401080c:	int3   
6401080d:	int3   
6401080e:	int3   
6401080f:	int3   
64010810:	mov    eax,DWORD PTR [esp+0x8]
64010814:	imul   eax,DWORD PTR [esp+0xc]
64010819:	push   eax
6401081a:	call   0x640148be
6401081f:	add    esp,0x4
64010822:	ret    
64010823:	int3   
64010824:	int3   
64010825:	int3   
64010826:	int3   
64010827:	int3   
64010828:	int3   
64010829:	int3   
6401082a:	int3   
6401082b:	int3   
6401082c:	int3   
6401082d:	int3   
6401082e:	int3   
6401082f:	int3   
64010830:	mov    eax,DWORD PTR [esp+0x8]
64010834:	push   eax
64010835:	call   0x6401475a
6401083a:	pop    ecx
6401083b:	ret    
6401083c:	int3   
6401083d:	int3   
6401083e:	int3   
6401083f:	int3   
64010840:	sub    esp,0x3c
64010843:	push   ebx
64010844:	push   ebp
64010845:	push   esi
64010846:	push   edi
64010847:	mov    ecx,DWORD PTR [esp+0x50]
6401084b:	mov    eax,DWORD PTR [ecx+0x1c]
6401084e:	mov    edx,DWORD PTR [ecx+0x4]
64010851:	mov    ebx,DWORD PTR [eax+0x38]
64010854:	mov    ebp,DWORD PTR [ecx]
64010856:	sub    ebp,0x1
64010859:	lea    edx,[edx+ebp*1-0x5]
6401085d:	mov    DWORD PTR [esp+0x14],edx
64010861:	mov    esi,DWORD PTR [ecx+0xc]
64010864:	mov    ecx,DWORD PTR [ecx+0x10]
64010867:	mov    edx,ecx
64010869:	sub    edx,DWORD PTR [esp+0x54]
6401086d:	sub    esi,0x1
64010870:	add    edx,esi
64010872:	lea    ecx,[ecx+esi*1-0x101]
64010879:	mov    DWORD PTR [esp+0x38],edx
6401087d:	mov    edx,DWORD PTR [eax+0x28]
64010880:	mov    DWORD PTR [esp+0x2c],ecx
64010884:	mov    ecx,DWORD PTR [eax+0x2c]
64010887:	mov    DWORD PTR [esp+0x28],edx
6401088b:	mov    edx,DWORD PTR [eax+0x30]
6401088e:	mov    DWORD PTR [esp+0x3c],ecx
64010892:	mov    ecx,DWORD PTR [eax+0x34]
64010895:	mov    DWORD PTR [esp+0x44],edx
64010899:	mov    edx,DWORD PTR [eax+0x4c]
6401089c:	mov    DWORD PTR [esp+0x40],ecx
640108a0:	mov    ecx,DWORD PTR [eax+0x50]
640108a3:	mov    DWORD PTR [esp+0x20],edx
640108a7:	mov    DWORD PTR [esp+0x24],ecx
640108ab:	mov    ecx,DWORD PTR [eax+0x54]
640108ae:	mov    edx,0x1
640108b3:	shl    edx,cl
640108b5:	mov    ecx,DWORD PTR [eax+0x58]
640108b8:	mov    DWORD PTR [esp+0x18],eax
640108bc:	mov    edi,DWORD PTR [eax+0x3c]
640108bf:	mov    DWORD PTR [esp+0x54],0x1
640108c7:	mov    eax,DWORD PTR [esp+0x54]
640108cb:	shl    eax,cl
640108cd:	sub    edx,0x1
640108d0:	mov    DWORD PTR [esp+0x10],ebp
640108d4:	mov    DWORD PTR [esp+0x48],edx
640108d8:	sub    eax,0x1
640108db:	mov    DWORD PTR [esp+0x30],eax
640108df:	nop
640108e0:	cmp    edi,0xf
640108e3:	jae    0x64010909
640108e5:	movzx  eax,BYTE PTR [ebp+0x1]
640108e9:	add    ebp,0x1
640108ec:	mov    ecx,edi
640108ee:	shl    eax,cl
640108f0:	add    ebp,0x1
640108f3:	add    edi,0x8
640108f6:	mov    ecx,edi
640108f8:	add    ebx,eax
640108fa:	movzx  eax,BYTE PTR [ebp+0x0]
640108fe:	shl    eax,cl
64010900:	mov    DWORD PTR [esp+0x10],ebp
64010904:	add    ebx,eax
64010906:	add    edi,0x8
64010909:	mov    ecx,DWORD PTR [esp+0x20]
6401090d:	and    edx,ebx
6401090f:	mov    eax,DWORD PTR [ecx+edx*4]
64010912:	mov    edx,eax
64010914:	shr    edx,0x8
64010917:	movzx  ecx,dl
6401091a:	movzx  edx,al
6401091d:	shr    ebx,cl
6401091f:	sub    edi,ecx
64010921:	test   edx,edx
64010923:	je     0x64010968
64010925:	test   dl,0x10
64010928:	jne    0x64010975
6401092a:	test   dl,0x40
6401092d:	jne    0x64010c7a
64010933:	mov    ecx,0x1
64010938:	mov    DWORD PTR [esp+0x54],ecx
6401093c:	mov    ecx,edx
6401093e:	mov    edx,DWORD PTR [esp+0x54]
64010942:	shl    edx,cl
64010944:	shr    eax,0x10
64010947:	sub    edx,0x1
6401094a:	and    edx,ebx
6401094c:	add    edx,eax
6401094e:	mov    eax,DWORD PTR [esp+0x20]
64010952:	mov    eax,DWORD PTR [eax+edx*4]
64010955:	mov    ecx,eax
64010957:	shr    ecx,0x8
6401095a:	movzx  ecx,cl
6401095d:	movzx  edx,al
64010960:	shr    ebx,cl
64010962:	sub    edi,ecx
64010964:	test   edx,edx
64010966:	jne    0x64010925
64010968:	add    esi,0x1
6401096b:	shr    eax,0x10
6401096e:	mov    BYTE PTR [esi],al
64010970:	jmp    0x64010bd5
64010975:	shr    eax,0x10
64010978:	and    edx,0xf
6401097b:	mov    DWORD PTR [esp+0x54],eax
6401097f:	je     0x640109af
64010981:	cmp    edi,edx
64010983:	jae    0x64010999
64010985:	movzx  eax,BYTE PTR [ebp+0x1]
64010989:	add    ebp,0x1
6401098c:	mov    ecx,edi
6401098e:	shl    eax,cl
64010990:	mov    DWORD PTR [esp+0x10],ebp
64010994:	add    ebx,eax
64010996:	add    edi,0x8
64010999:	mov    ecx,edx
6401099b:	mov    eax,0x1
640109a0:	shl    eax,cl
640109a2:	sub    eax,0x1
640109a5:	and    eax,ebx
640109a7:	add    DWORD PTR [esp+0x54],eax
640109ab:	shr    ebx,cl
640109ad:	sub    edi,edx
640109af:	cmp    edi,0xf
640109b2:	jae    0x640109d8
640109b4:	movzx  edx,BYTE PTR [ebp+0x1]
640109b8:	add    ebp,0x1
640109bb:	movzx  eax,BYTE PTR [ebp+0x1]
640109bf:	mov    ecx,edi
640109c1:	add    ebp,0x1
640109c4:	shl    edx,cl
640109c6:	add    edi,0x8
640109c9:	mov    ecx,edi
640109cb:	shl    eax,cl
640109cd:	add    ebx,edx
640109cf:	mov    DWORD PTR [esp+0x10],ebp
640109d3:	add    ebx,eax
640109d5:	add    edi,0x8
640109d8:	mov    ecx,DWORD PTR [esp+0x30]
640109dc:	mov    edx,DWORD PTR [esp+0x24]
640109e0:	and    ecx,ebx
640109e2:	mov    edx,DWORD PTR [edx+ecx*4]
640109e5:	mov    eax,edx
640109e7:	shr    eax,0x8
640109ea:	movzx  ecx,al
640109ed:	movzx  eax,dl
640109f0:	shr    ebx,cl
640109f2:	sub    edi,ecx
640109f4:	test   al,0x10
640109f6:	mov    DWORD PTR [esp+0x1c],edx
640109fa:	jne    0x64010a3b
640109fc:	lea    esp,[esp+0x0]
64010a00:	test   al,0x40
64010a02:	jne    0x64010c6d
64010a08:	mov    ecx,eax
64010a0a:	movzx  eax,WORD PTR [esp+0x1e]
64010a0f:	mov    edx,0x1
64010a14:	shl    edx,cl
64010a16:	mov    ecx,DWORD PTR [esp+0x24]
64010a1a:	sub    edx,0x1
64010a1d:	and    edx,ebx
64010a1f:	add    edx,eax
64010a21:	mov    edx,DWORD PTR [ecx+edx*4]
64010a24:	mov    eax,edx
64010a26:	shr    eax,0x8
64010a29:	movzx  ecx,al
64010a2c:	movzx  eax,dl
64010a2f:	shr    ebx,cl
64010a31:	sub    edi,ecx
64010a33:	test   al,0x10
64010a35:	mov    DWORD PTR [esp+0x1c],edx
64010a39:	je     0x64010a00
64010a3b:	shr    edx,0x10
64010a3e:	and    eax,0xf
64010a41:	cmp    edi,eax
64010a43:	mov    DWORD PTR [esp+0x1c],edx
64010a47:	jae    0x64010a75
64010a49:	movzx  edx,BYTE PTR [ebp+0x1]
64010a4d:	add    ebp,0x1
64010a50:	mov    ecx,edi
64010a52:	shl    edx,cl
64010a54:	add    edi,0x8
64010a57:	mov    DWORD PTR [esp+0x10],ebp
64010a5b:	add    ebx,edx
64010a5d:	cmp    edi,eax
64010a5f:	jae    0x64010a75
64010a61:	movzx  edx,BYTE PTR [ebp+0x1]
64010a65:	add    ebp,0x1
64010a68:	mov    ecx,edi
64010a6a:	shl    edx,cl
64010a6c:	mov    DWORD PTR [esp+0x10],ebp
64010a70:	add    ebx,edx
64010a72:	add    edi,0x8
64010a75:	mov    ecx,0x1
64010a7a:	mov    edx,ecx
64010a7c:	mov    ecx,eax
64010a7e:	shl    edx,cl
64010a80:	sub    edi,eax
64010a82:	sub    edx,0x1
64010a85:	and    edx,ebx
64010a87:	mov    ecx,edx
64010a89:	mov    edx,DWORD PTR [esp+0x1c]
64010a8d:	add    edx,ecx
64010a8f:	mov    ecx,eax
64010a91:	mov    eax,esi
64010a93:	sub    eax,DWORD PTR [esp+0x38]
64010a97:	shr    ebx,cl
64010a99:	cmp    edx,eax
64010a9b:	mov    DWORD PTR [esp+0x1c],edx
64010a9f:	jbe    0x64010bf4
64010aa5:	mov    ebp,edx
64010aa7:	sub    ebp,eax
64010aa9:	cmp    ebp,DWORD PTR [esp+0x3c]
64010aad:	ja     0x64010c52
64010ab3:	mov    ecx,DWORD PTR [esp+0x40]
64010ab7:	mov    eax,DWORD PTR [esp+0x44]
64010abb:	add    ecx,0xffffffff
64010abe:	test   eax,eax
64010ac0:	mov    DWORD PTR [esp+0x34],ecx
64010ac4:	jne    0x64010af2
64010ac6:	mov    eax,DWORD PTR [esp+0x28]
64010aca:	sub    eax,ebp
64010acc:	add    ecx,eax
64010ace:	cmp    ebp,DWORD PTR [esp+0x54]
64010ad2:	jae    0x64010b6a
64010ad8:	sub    DWORD PTR [esp+0x54],ebp
64010adc:	lea    esp,[esp+0x0]
64010ae0:	mov    al,BYTE PTR [ecx+0x1]
64010ae3:	add    ecx,0x1
64010ae6:	add    esi,0x1
64010ae9:	sub    ebp,0x1
64010aec:	mov    BYTE PTR [esi],al
64010aee:	jne    0x64010ae0
64010af0:	jmp    0x64010b66
64010af2:	cmp    eax,ebp
64010af4:	jae    0x64010b48
64010af6:	mov    edx,eax
64010af8:	sub    edx,ebp
64010afa:	add    edx,DWORD PTR [esp+0x28]
64010afe:	sub    ebp,eax
64010b00:	add    ecx,edx
64010b02:	cmp    ebp,DWORD PTR [esp+0x54]
64010b06:	jae    0x64010b6a
64010b08:	sub    DWORD PTR [esp+0x54],ebp
64010b0c:	lea    esp,[esp+0x0]
64010b10:	mov    dl,BYTE PTR [ecx+0x1]
64010b13:	add    ecx,0x1
64010b16:	add    esi,0x1
64010b19:	sub    ebp,0x1
64010b1c:	mov    BYTE PTR [esi],dl
64010b1e:	jne    0x64010b10
64010b20:	cmp    eax,DWORD PTR [esp+0x54]
64010b24:	mov    ecx,DWORD PTR [esp+0x34]
64010b28:	jae    0x64010b6a
64010b2a:	sub    DWORD PTR [esp+0x54],eax
64010b2e:	mov    ebp,eax
64010b30:	mov    al,BYTE PTR [ecx+0x1]
64010b33:	add    ecx,0x1
64010b36:	add    esi,0x1
64010b39:	sub    ebp,0x1
64010b3c:	mov    BYTE PTR [esi],al
64010b3e:	jne    0x64010b30
64010b40:	mov    ecx,esi
64010b42:	sub    ecx,DWORD PTR [esp+0x1c]
64010b46:	jmp    0x64010b6a
64010b48:	sub    eax,ebp
64010b4a:	add    ecx,eax
64010b4c:	cmp    ebp,DWORD PTR [esp+0x54]
64010b50:	jae    0x64010b6a
64010b52:	sub    DWORD PTR [esp+0x54],ebp
64010b56:	mov    al,BYTE PTR [ecx+0x1]
64010b59:	add    ecx,0x1
64010b5c:	add    esi,0x1
64010b5f:	sub    ebp,0x1
64010b62:	mov    BYTE PTR [esi],al
64010b64:	jne    0x64010b56
64010b66:	mov    ecx,esi
64010b68:	sub    ecx,edx
64010b6a:	mov    eax,DWORD PTR [esp+0x54]
64010b6e:	cmp    eax,0x2
64010b71:	jbe    0x64010bb1
64010b73:	lea    edx,[eax-0x3]
64010b76:	mov    eax,0xaaaaaaab
64010b7b:	mul    edx
64010b7d:	mov    ebp,edx
64010b7f:	shr    ebp,1
64010b81:	add    ebp,0x1
64010b84:	movzx  eax,BYTE PTR [ecx+0x1]
64010b88:	sub    DWORD PTR [esp+0x54],0x3
64010b8d:	add    ecx,0x1
64010b90:	add    esi,0x1
64010b93:	mov    BYTE PTR [esi],al
64010b95:	mov    dl,BYTE PTR [ecx+0x1]
64010b98:	add    ecx,0x1
64010b9b:	add    esi,0x1
64010b9e:	mov    BYTE PTR [esi],dl
64010ba0:	movzx  eax,BYTE PTR [ecx+0x1]
64010ba4:	add    ecx,0x1
64010ba7:	add    esi,0x1
64010baa:	sub    ebp,0x1
64010bad:	mov    BYTE PTR [esi],al
64010baf:	jne    0x64010b84
64010bb1:	mov    ebp,DWORD PTR [esp+0x54]
64010bb5:	test   ebp,ebp
64010bb7:	je     0x64010bd1
64010bb9:	mov    dl,BYTE PTR [ecx+0x1]
64010bbc:	add    ecx,0x1
64010bbf:	add    esi,0x1
64010bc2:	cmp    ebp,0x1
64010bc5:	mov    BYTE PTR [esi],dl
64010bc7:	jbe    0x64010bd1
64010bc9:	mov    al,BYTE PTR [ecx+0x1]
64010bcc:	add    esi,0x1
64010bcf:	mov    BYTE PTR [esi],al
64010bd1:	mov    ebp,DWORD PTR [esp+0x10]
64010bd5:	mov    edx,DWORD PTR [esp+0x14]
64010bd9:	cmp    ebp,edx
64010bdb:	jae    0x64010ca4
64010be1:	cmp    esi,DWORD PTR [esp+0x2c]
64010be5:	jae    0x64010ca4
64010beb:	mov    edx,DWORD PTR [esp+0x48]
64010bef:	jmp    0x640108e0
64010bf4:	mov    eax,esi
64010bf6:	sub    eax,edx
64010bf8:	jmp    0x64010c00
64010bfa:	lea    ebx,[ebx+0x0]
64010c00:	movzx  ecx,BYTE PTR [eax+0x1]
64010c04:	add    eax,0x1
64010c07:	mov    BYTE PTR [esi+0x1],cl
64010c0a:	mov    dl,BYTE PTR [eax+0x1]
64010c0d:	add    esi,0x1
64010c10:	add    eax,0x1
64010c13:	add    esi,0x1
64010c16:	mov    BYTE PTR [esi],dl
64010c18:	movzx  ecx,BYTE PTR [eax+0x1]
64010c1c:	add    eax,0x1
64010c1f:	add    esi,0x1
64010c22:	mov    BYTE PTR [esi],cl
64010c24:	mov    ecx,DWORD PTR [esp+0x54]
64010c28:	sub    ecx,0x3
64010c2b:	cmp    ecx,0x2
64010c2e:	mov    DWORD PTR [esp+0x54],ecx
64010c32:	ja     0x64010c00
64010c34:	test   ecx,ecx
64010c36:	je     0x64010bd5
64010c38:	mov    dl,BYTE PTR [eax+0x1]
64010c3b:	add    eax,0x1
64010c3e:	add    esi,0x1
64010c41:	cmp    ecx,0x1
64010c44:	mov    BYTE PTR [esi],dl
64010c46:	jbe    0x64010bd5
64010c48:	mov    al,BYTE PTR [eax+0x1]
64010c4b:	add    esi,0x1
64010c4e:	mov    BYTE PTR [esi],al
64010c50:	jmp    0x64010bd5
64010c52:	mov    ecx,DWORD PTR [esp+0x50]
64010c56:	mov    edx,DWORD PTR [esp+0x18]
64010c5a:	mov    ebp,DWORD PTR [esp+0x10]
64010c5e:	mov    DWORD PTR [ecx+0x18],0x64024ce8
64010c65:	mov    DWORD PTR [edx],0x1b
64010c6b:	jmp    0x64010ca0
64010c6d:	mov    eax,DWORD PTR [esp+0x50]
64010c71:	mov    DWORD PTR [eax+0x18],0x64024d08
64010c78:	jmp    0x64010c96
64010c7a:	test   dl,0x20
64010c7d:	je     0x64010c8b
64010c7f:	mov    edx,DWORD PTR [esp+0x18]
64010c83:	mov    DWORD PTR [edx],0xb
64010c89:	jmp    0x64010ca0
64010c8b:	mov    eax,DWORD PTR [esp+0x50]
64010c8f:	mov    DWORD PTR [eax+0x18],0x64024d20
64010c96:	mov    ecx,DWORD PTR [esp+0x18]
64010c9a:	mov    DWORD PTR [ecx],0x1b
64010ca0:	mov    edx,DWORD PTR [esp+0x14]
64010ca4:	mov    eax,edi
64010ca6:	shr    eax,0x3
64010ca9:	sub    ebp,eax
64010cab:	add    eax,eax
64010cad:	add    eax,eax
64010caf:	add    eax,eax
64010cb1:	sub    edi,eax
64010cb3:	mov    ecx,edi
64010cb5:	mov    eax,0x1
64010cba:	shl    eax,cl
64010cbc:	mov    ecx,DWORD PTR [esp+0x50]
64010cc0:	sub    edx,ebp
64010cc2:	add    edx,0x5
64010cc5:	sub    eax,0x1
64010cc8:	and    ebx,eax
64010cca:	lea    eax,[ebp+0x1]
64010ccd:	mov    DWORD PTR [ecx],eax
64010ccf:	lea    eax,[esi+0x1]
64010cd2:	mov    DWORD PTR [ecx+0xc],eax
64010cd5:	mov    eax,DWORD PTR [esp+0x2c]
64010cd9:	sub    eax,esi
64010cdb:	add    eax,0x101
64010ce0:	mov    DWORD PTR [ecx+0x10],eax
64010ce3:	mov    eax,DWORD PTR [esp+0x18]
64010ce7:	mov    DWORD PTR [ecx+0x4],edx
64010cea:	mov    DWORD PTR [eax+0x3c],edi
64010ced:	pop    edi
64010cee:	pop    esi
64010cef:	pop    ebp
64010cf0:	mov    DWORD PTR [eax+0x38],ebx
64010cf3:	pop    ebx
64010cf4:	add    esp,0x3c
64010cf7:	ret    
64010cf8:	int3   
64010cf9:	int3   
64010cfa:	int3   
64010cfb:	int3   
64010cfc:	int3   
64010cfd:	int3   
64010cfe:	int3   
64010cff:	int3   
64010d00:	sub    esp,0x8c
64010d06:	mov    eax,ds:0x64037644
64010d0b:	xor    eax,esp
64010d0d:	mov    DWORD PTR [esp+0x88],eax
64010d14:	mov    eax,DWORD PTR [esp+0xa4]
64010d1b:	mov    edx,DWORD PTR [esp+0xa0]
64010d22:	push   ebx
64010d23:	mov    ebx,DWORD PTR [esp+0xa0]
64010d2a:	push   ebp
64010d2b:	mov    ebp,DWORD PTR [esp+0x9c]
64010d32:	push   esi
64010d33:	mov    esi,DWORD PTR [esp+0xa4]
64010d3a:	mov    DWORD PTR [esp+0x18],eax
64010d3e:	xor    eax,eax
64010d40:	test   esi,esi
64010d42:	mov    DWORD PTR [esp+0x50],ebp
64010d46:	mov    DWORD PTR [esp+0x38],ebx
64010d4a:	mov    DWORD PTR [esp+0x48],edx
64010d4e:	mov    DWORD PTR [esp+0x54],eax
64010d52:	mov    DWORD PTR [esp+0x58],eax
64010d56:	mov    DWORD PTR [esp+0x5c],eax
64010d5a:	mov    DWORD PTR [esp+0x60],eax
64010d5e:	mov    DWORD PTR [esp+0x64],eax
64010d62:	mov    DWORD PTR [esp+0x68],eax
64010d66:	mov    DWORD PTR [esp+0x6c],eax
64010d6a:	mov    DWORD PTR [esp+0x70],eax
64010d6e:	jbe    0x64010d86
64010d70:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
64010d75:	add    WORD PTR [esp+ecx*2+0x54],0x1
64010d7b:	lea    ecx,[esp+ecx*2+0x54]
64010d7f:	add    eax,0x1
64010d82:	cmp    eax,esi
64010d84:	jb     0x64010d70
64010d86:	mov    eax,DWORD PTR [edx]
64010d88:	mov    DWORD PTR [esp+0x10],eax
64010d8c:	mov    ecx,0xf
64010d91:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
64010d97:	jne    0x64010da1
64010d99:	sub    ecx,0x1
64010d9c:	cmp    ecx,0x1
64010d9f:	jae    0x64010d91
64010da1:	cmp    eax,ecx
64010da3:	mov    DWORD PTR [esp+0x1c],ecx
64010da7:	jbe    0x64010daf
64010da9:	mov    DWORD PTR [esp+0x10],ecx
64010dad:	mov    eax,ecx
64010daf:	test   ecx,ecx
64010db1:	jne    0x64010df4
64010db3:	mov    WORD PTR [esp+0xe],cx
64010db8:	mov    ecx,DWORD PTR [ebx]
64010dba:	mov    BYTE PTR [esp+0xc],0x40
64010dbf:	mov    BYTE PTR [esp+0xd],0x1
64010dc4:	mov    eax,DWORD PTR [esp+0xc]
64010dc8:	mov    DWORD PTR [ecx],eax
64010dca:	add    DWORD PTR [ebx],0x4
64010dcd:	mov    ecx,DWORD PTR [ebx]
64010dcf:	pop    esi
64010dd0:	mov    DWORD PTR [ecx],eax
64010dd2:	add    DWORD PTR [ebx],0x4
64010dd5:	pop    ebp
64010dd6:	mov    DWORD PTR [edx],0x1
64010ddc:	xor    eax,eax
64010dde:	pop    ebx
64010ddf:	mov    ecx,DWORD PTR [esp+0x88]
64010de6:	xor    ecx,esp
64010de8:	call   0x64013d06
64010ded:	add    esp,0x8c
64010df3:	ret    
64010df4:	mov    esi,0x1
64010df9:	lea    esp,[esp+0x0]
64010e00:	cmp    WORD PTR [esp+esi*2+0x54],0x0
64010e06:	jne    0x64010e44
64010e08:	cmp    WORD PTR [esp+esi*2+0x56],0x0
64010e0e:	jne    0x64010e32
64010e10:	cmp    WORD PTR [esp+esi*2+0x58],0x0
64010e16:	jne    0x64010e37
64010e18:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
64010e1e:	jne    0x64010e3c
64010e20:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
64010e26:	jne    0x64010e41
64010e28:	add    esi,0x5
64010e2b:	cmp    esi,0xf
64010e2e:	jbe    0x64010e00
64010e30:	jmp    0x64010e44
64010e32:	add    esi,0x1
64010e35:	jmp    0x64010e44
64010e37:	add    esi,0x2
64010e3a:	jmp    0x64010e44
64010e3c:	add    esi,0x3
64010e3f:	jmp    0x64010e44
64010e41:	add    esi,0x4
64010e44:	cmp    eax,esi
64010e46:	jae    0x64010e4c
64010e48:	mov    DWORD PTR [esp+0x10],esi
64010e4c:	mov    edx,0x1
64010e51:	mov    eax,edx
64010e53:	push   edi
64010e54:	movzx  edi,WORD PTR [esp+eax*2+0x58]
64010e59:	add    edx,edx
64010e5b:	sub    edx,edi
64010e5d:	js     0x64010e7b
64010e5f:	add    eax,0x1
64010e62:	cmp    eax,0xf
64010e65:	jbe    0x64010e54
64010e67:	test   edx,edx
64010e69:	mov    edi,DWORD PTR [esp+0xa0]
64010e70:	jle    0x64010e83
64010e72:	test   edi,edi
64010e74:	je     0x64010e7b
64010e76:	cmp    ecx,0x1
64010e79:	je     0x64010e83
64010e7b:	or     eax,0xffffffff
64010e7e:	jmp    0x640111d5
64010e83:	mov    WORD PTR [esp+0x7a],0x0
64010e8a:	mov    eax,0x2
64010e8f:	nop
64010e90:	mov    cx,WORD PTR [esp+eax*1+0x78]
64010e95:	add    cx,WORD PTR [esp+eax*1+0x58]
64010e9a:	add    eax,0x2
64010e9d:	cmp    eax,0x1e
64010ea0:	mov    WORD PTR [esp+eax*1+0x78],cx
64010ea5:	jb     0x64010e90
64010ea7:	mov    ecx,DWORD PTR [esp+0x1c]
64010eab:	xor    eax,eax
64010ead:	cmp    DWORD PTR [esp+0xa8],eax
64010eb4:	jbe    0x64010ee7
64010eb6:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
64010ebc:	je     0x64010edb
64010ebe:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64010ec3:	movzx  edx,WORD PTR [esp+edx*2+0x78]
64010ec8:	mov    WORD PTR [ecx+edx*2],ax
64010ecc:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64010ed1:	add    WORD PTR [esp+edx*2+0x78],0x1
64010ed7:	lea    edx,[esp+edx*2+0x78]
64010edb:	add    eax,0x1
64010ede:	cmp    eax,DWORD PTR [esp+0xa8]
64010ee5:	jb     0x64010eb6
64010ee7:	mov    eax,edi
64010ee9:	sub    eax,0x0
64010eec:	mov    edx,0xffffffff
64010ef1:	je     0x64010f34
64010ef3:	sub    eax,0x1
64010ef6:	je     0x64010f0e
64010ef8:	mov    DWORD PTR [esp+0x2c],0x64025088
64010f00:	mov    DWORD PTR [esp+0x38],0x640250c8
64010f08:	mov    DWORD PTR [esp+0x30],edx
64010f0c:	jmp    0x64010f44
64010f0e:	mov    eax,0x64025008
64010f13:	sub    eax,0x202
64010f18:	mov    DWORD PTR [esp+0x2c],eax
64010f1c:	mov    eax,0x64025048
64010f21:	sub    eax,0x202
64010f26:	mov    DWORD PTR [esp+0x38],eax
64010f2a:	mov    DWORD PTR [esp+0x30],0x100
64010f32:	jmp    0x64010f44
64010f34:	mov    DWORD PTR [esp+0x38],ecx
64010f38:	mov    DWORD PTR [esp+0x2c],ecx
64010f3c:	mov    DWORD PTR [esp+0x30],0x13
64010f44:	mov    eax,DWORD PTR [ebx]
64010f46:	mov    ecx,DWORD PTR [esp+0x14]
64010f4a:	mov    DWORD PTR [esp+0x24],eax
64010f4e:	mov    eax,0x1
64010f53:	shl    eax,cl
64010f55:	xor    ebp,ebp
64010f57:	xor    ebx,ebx
64010f59:	cmp    edi,0x1
64010f5c:	lea    ecx,[eax-0x1]
64010f5f:	mov    DWORD PTR [esp+0x18],esi
64010f63:	mov    DWORD PTR [esp+0x34],edx
64010f67:	mov    DWORD PTR [esp+0x44],eax
64010f6b:	mov    DWORD PTR [esp+0x28],eax
64010f6f:	mov    DWORD PTR [esp+0x40],ecx
64010f73:	jne    0x64010f80
64010f75:	cmp    eax,0x5b0
64010f7a:	jae    0x640111d0
64010f80:	mov    edx,DWORD PTR [esp+0x1c]
64010f84:	mov    DWORD PTR [esp+0x1c],edx
64010f88:	jmp    0x64010f90
64010f8a:	lea    ebx,[ebx+0x0]
64010f90:	mov    al,BYTE PTR [esp+0x18]
64010f94:	mov    esi,DWORD PTR [esp+0x1c]
64010f98:	mov    edx,DWORD PTR [esp+0x30]
64010f9c:	sub    al,bl
64010f9e:	mov    BYTE PTR [esp+0x11],al
64010fa2:	movzx  eax,WORD PTR [esi]
64010fa5:	movzx  ecx,ax
64010fa8:	cmp    ecx,edx
64010faa:	jge    0x64010fb8
64010fac:	mov    BYTE PTR [esp+0x10],0x0
64010fb1:	mov    WORD PTR [esp+0x12],ax
64010fb6:	jmp    0x64010fe5
64010fb8:	jle    0x64010fd9
64010fba:	movzx  eax,WORD PTR [esi]
64010fbd:	mov    ecx,DWORD PTR [esp+0x38]
64010fc1:	add    eax,eax
64010fc3:	mov    dl,BYTE PTR [eax+ecx*1]
64010fc6:	mov    ecx,DWORD PTR [esp+0x2c]
64010fca:	mov    BYTE PTR [esp+0x10],dl
64010fce:	mov    dx,WORD PTR [eax+ecx*1]
64010fd2:	mov    WORD PTR [esp+0x12],dx
64010fd7:	jmp    0x64010fe5
64010fd9:	mov    BYTE PTR [esp+0x10],0x60
64010fde:	mov    WORD PTR [esp+0x12],0x0
64010fe5:	mov    ecx,DWORD PTR [esp+0x18]
64010fe9:	mov    eax,DWORD PTR [esp+0x44]
64010fed:	sub    ecx,ebx
64010fef:	mov    edx,0x1
64010ff4:	shl    edx,cl
64010ff6:	mov    ecx,ebx
64010ff8:	mov    edi,ebp
64010ffa:	shr    edi,cl
64010ffc:	mov    ecx,DWORD PTR [esp+0x24]
64011000:	mov    DWORD PTR [esp+0x50],eax
64011004:	lea    esi,[edx*4+0x0]
6401100b:	add    edi,eax
6401100d:	lea    ecx,[ecx+edi*4]
64011010:	mov    edi,DWORD PTR [esp+0x10]
64011014:	sub    eax,edx
64011016:	sub    ecx,esi
64011018:	test   eax,eax
6401101a:	mov    DWORD PTR [ecx],edi
6401101c:	jne    0x64011014
6401101e:	mov    edx,DWORD PTR [esp+0x18]
64011022:	lea    ecx,[edx-0x1]
64011025:	mov    eax,0x1
6401102a:	shl    eax,cl
6401102c:	test   ebp,eax
6401102e:	je     0x64011036
64011030:	shr    eax,1
64011032:	test   ebp,eax
64011034:	jne    0x64011030
64011036:	test   eax,eax
64011038:	je     0x64011045
6401103a:	lea    ecx,[eax-0x1]
6401103d:	and    ecx,ebp
6401103f:	add    ecx,eax
64011041:	mov    ebp,ecx
64011043:	jmp    0x64011047
64011045:	xor    ebp,ebp
64011047:	add    WORD PTR [esp+edx*2+0x58],0xffff
6401104e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
64011053:	add    DWORD PTR [esp+0x1c],0x2
64011058:	test   ax,ax
6401105b:	jne    0x6401107a
6401105d:	cmp    edx,DWORD PTR [esp+0x20]
64011061:	je     0x64011143
64011067:	mov    edx,DWORD PTR [esp+0x1c]
6401106b:	movzx  eax,WORD PTR [edx]
6401106e:	mov    ecx,DWORD PTR [esp+0x54]
64011072:	movzx  edx,WORD PTR [ecx+eax*2]
64011076:	mov    DWORD PTR [esp+0x18],edx
6401107a:	cmp    edx,DWORD PTR [esp+0x14]
6401107e:	jbe    0x64010f90
64011084:	mov    esi,DWORD PTR [esp+0x40]
64011088:	and    esi,ebp
6401108a:	cmp    esi,DWORD PTR [esp+0x34]
6401108e:	mov    DWORD PTR [esp+0x48],esi
64011092:	je     0x64010f90
64011098:	test   ebx,ebx
6401109a:	jne    0x640110a0
6401109c:	mov    ebx,DWORD PTR [esp+0x14]
640110a0:	mov    eax,DWORD PTR [esp+0x24]
640110a4:	mov    ecx,DWORD PTR [esp+0x50]
640110a8:	lea    edx,[eax+ecx*4]
640110ab:	mov    ecx,DWORD PTR [esp+0x18]
640110af:	sub    ecx,ebx
640110b1:	mov    DWORD PTR [esp+0x24],edx
640110b5:	mov    eax,0x1
640110ba:	lea    edx,[ebx+ecx*1]
640110bd:	shl    eax,cl
640110bf:	cmp    edx,DWORD PTR [esp+0x20]
640110c3:	jae    0x640110ee
640110c5:	lea    esi,[esp+edx*2+0x58]
640110c9:	lea    esp,[esp+0x0]
640110d0:	movzx  edi,WORD PTR [esi]
640110d3:	sub    eax,edi
640110d5:	test   eax,eax
640110d7:	jle    0x640110ea
640110d9:	add    edx,0x1
640110dc:	add    ecx,0x1
640110df:	add    esi,0x2
640110e2:	add    eax,eax
640110e4:	cmp    edx,DWORD PTR [esp+0x20]
640110e8:	jb     0x640110d0
640110ea:	mov    esi,DWORD PTR [esp+0x48]
640110ee:	mov    eax,0x1
640110f3:	shl    eax,cl
640110f5:	add    DWORD PTR [esp+0x28],eax
640110f9:	cmp    DWORD PTR [esp+0xa0],0x1
64011101:	mov    DWORD PTR [esp+0x44],eax
64011105:	jne    0x64011115
64011107:	cmp    DWORD PTR [esp+0x28],0x5b0
6401110f:	jae    0x640111d0
64011115:	mov    edx,esi
64011117:	mov    esi,DWORD PTR [esp+0x3c]
6401111b:	mov    eax,DWORD PTR [esi]
6401111d:	mov    BYTE PTR [eax+edx*4],cl
64011120:	mov    ecx,DWORD PTR [esi]
64011122:	mov    al,BYTE PTR [esp+0x14]
64011126:	mov    BYTE PTR [ecx+edx*4+0x1],al
6401112a:	mov    eax,DWORD PTR [esi]
6401112c:	mov    ecx,DWORD PTR [esp+0x24]
64011130:	sub    ecx,eax
64011132:	sar    ecx,0x2
64011135:	mov    DWORD PTR [esp+0x34],edx
64011139:	mov    WORD PTR [eax+edx*4+0x2],cx
6401113e:	jmp    0x64010f90
64011143:	mov    edi,DWORD PTR [esp+0x3c]
64011147:	mov    al,dl
64011149:	sub    al,bl
6401114b:	test   ebp,ebp
6401114d:	mov    BYTE PTR [esp+0x10],0x40
64011152:	mov    BYTE PTR [esp+0x11],al
64011156:	mov    WORD PTR [esp+0x12],0x0
6401115d:	je     0x640111b5
6401115f:	mov    esi,DWORD PTR [esp+0x24]
64011163:	test   ebx,ebx
64011165:	je     0x64011185
64011167:	mov    ecx,DWORD PTR [esp+0x40]
6401116b:	and    ecx,ebp
6401116d:	cmp    ecx,DWORD PTR [esp+0x34]
64011171:	je     0x64011185
64011173:	mov    eax,DWORD PTR [esp+0x14]
64011177:	mov    esi,DWORD PTR [edi]
64011179:	xor    ebx,ebx
6401117b:	mov    DWORD PTR [esp+0x18],eax
6401117f:	mov    BYTE PTR [esp+0x11],al
64011183:	mov    edx,eax
64011185:	mov    ecx,ebx
64011187:	mov    eax,ebp
64011189:	shr    eax,cl
6401118b:	mov    ecx,DWORD PTR [esp+0x10]
6401118f:	mov    DWORD PTR [esi+eax*4],ecx
64011192:	lea    ecx,[edx-0x1]
64011195:	mov    eax,0x1
6401119a:	shl    eax,cl
6401119c:	test   ebp,eax
6401119e:	je     0x640111a6
640111a0:	shr    eax,1
640111a2:	test   ebp,eax
640111a4:	jne    0x640111a0
640111a6:	test   eax,eax
640111a8:	je     0x640111b5
640111aa:	lea    ecx,[eax-0x1]
640111ad:	and    ecx,ebp
640111af:	add    ecx,eax
640111b1:	mov    ebp,ecx
640111b3:	jne    0x64011163
640111b5:	mov    edx,DWORD PTR [esp+0x28]
640111b9:	mov    ecx,DWORD PTR [esp+0x4c]
640111bd:	lea    eax,[edx*4+0x0]
640111c4:	add    DWORD PTR [edi],eax
640111c6:	mov    edx,DWORD PTR [esp+0x14]
640111ca:	mov    DWORD PTR [ecx],edx
640111cc:	xor    eax,eax
640111ce:	jmp    0x640111d5
640111d0:	mov    eax,0x1
640111d5:	mov    ecx,DWORD PTR [esp+0x98]
640111dc:	pop    edi
640111dd:	pop    esi
640111de:	pop    ebp
640111df:	pop    ebx
640111e0:	xor    ecx,esp
640111e2:	call   0x64013d06
640111e7:	add    esp,0x8c
640111ed:	ret    
640111ee:	int3   
640111ef:	int3   
640111f0:	mov    ecx,DWORD PTR [esp+0x4]
640111f4:	push   ebx
640111f5:	mov    ebx,DWORD PTR [esp+0x10]
640111f9:	push   edi
640111fa:	mov    edi,ecx
640111fc:	shr    edi,0x10
640111ff:	and    ecx,0xffff
64011205:	cmp    ebx,0x1
64011208:	jne    0x6401123b
6401120a:	mov    eax,DWORD PTR [esp+0x10]
6401120e:	movzx  edx,BYTE PTR [eax]
64011211:	add    ecx,edx
64011213:	cmp    ecx,0xfff1
64011219:	jb     0x64011221
6401121b:	sub    ecx,0xfff1
64011221:	add    edi,ecx
64011223:	cmp    edi,0xfff1
64011229:	jb     0x64011231
6401122b:	sub    edi,0xfff1
64011231:	mov    eax,edi
64011233:	shl    eax,0x10
64011236:	pop    edi
64011237:	or     eax,ecx
64011239:	pop    ebx
6401123a:	ret    
6401123b:	push   esi
6401123c:	mov    esi,DWORD PTR [esp+0x14]
64011240:	test   esi,esi
64011242:	jne    0x6401124b
64011244:	lea    eax,[esi+0x1]
64011247:	pop    esi
64011248:	pop    edi
64011249:	pop    ebx
6401124a:	ret    
6401124b:	cmp    ebx,0x10
6401124e:	jae    0x6401128f
64011250:	test   ebx,ebx
64011252:	je     0x64011265
64011254:	movzx  eax,BYTE PTR [esi]
64011257:	add    ecx,eax
64011259:	sub    ebx,0x1
6401125c:	add    esi,0x1
6401125f:	add    edi,ecx
64011261:	test   ebx,ebx
64011263:	jne    0x64011254
64011265:	cmp    ecx,0xfff1
6401126b:	jb     0x64011273
6401126d:	sub    ecx,0xfff1
64011273:	mov    eax,0x80078071
64011278:	mul    edi
6401127a:	shr    edx,0xf
6401127d:	mov    eax,edx
6401127f:	shl    eax,0x4
64011282:	sub    eax,edx
64011284:	add    eax,edi
64011286:	pop    esi
64011287:	shl    eax,0x10
6401128a:	pop    edi
6401128b:	or     eax,ecx
6401128d:	pop    ebx
6401128e:	ret    
6401128f:	cmp    ebx,0x15b0
64011295:	jb     0x64011379
6401129b:	mov    eax,0x5e6ea9af
640112a0:	mul    ebx
640112a2:	push   ebp
640112a3:	mov    ebp,edx
640112a5:	shr    ebp,0xb
640112a8:	jmp    0x640112b0
640112aa:	lea    ebx,[ebx+0x0]
640112b0:	sub    ebx,0x15b0
640112b6:	mov    eax,0x15b
640112bb:	jmp    0x640112c0
640112bd:	lea    ecx,[ecx+0x0]
640112c0:	movzx  edx,BYTE PTR [esi]
640112c3:	add    ecx,edx
640112c5:	movzx  edx,BYTE PTR [esi+0x1]
640112c9:	add    edi,ecx
640112cb:	add    ecx,edx
640112cd:	movzx  edx,BYTE PTR [esi+0x2]
640112d1:	add    edi,ecx
640112d3:	add    ecx,edx
640112d5:	movzx  edx,BYTE PTR [esi+0x3]
640112d9:	add    edi,ecx
640112db:	add    ecx,edx
640112dd:	movzx  edx,BYTE PTR [esi+0x4]
640112e1:	add    edi,ecx
640112e3:	add    ecx,edx
640112e5:	movzx  edx,BYTE PTR [esi+0x5]
640112e9:	add    edi,ecx
640112eb:	add    ecx,edx
640112ed:	movzx  edx,BYTE PTR [esi+0x6]
640112f1:	add    edi,ecx
640112f3:	add    ecx,edx
640112f5:	movzx  edx,BYTE PTR [esi+0x7]
640112f9:	add    edi,ecx
640112fb:	add    ecx,edx
640112fd:	movzx  edx,BYTE PTR [esi+0x8]
64011301:	add    edi,ecx
64011303:	add    ecx,edx
64011305:	movzx  edx,BYTE PTR [esi+0x9]
64011309:	add    edi,ecx
6401130b:	add    ecx,edx
6401130d:	movzx  edx,BYTE PTR [esi+0xa]
64011311:	add    edi,ecx
64011313:	add    ecx,edx
64011315:	movzx  edx,BYTE PTR [esi+0xb]
64011319:	add    edi,ecx
6401131b:	add    ecx,edx
6401131d:	movzx  edx,BYTE PTR [esi+0xc]
64011321:	add    edi,ecx
64011323:	add    ecx,edx
64011325:	movzx  edx,BYTE PTR [esi+0xd]
64011329:	add    edi,ecx
6401132b:	add    ecx,edx
6401132d:	movzx  edx,BYTE PTR [esi+0xe]
64011331:	add    edi,ecx
64011333:	add    ecx,edx
64011335:	movzx  edx,BYTE PTR [esi+0xf]
64011339:	add    edi,ecx
6401133b:	add    ecx,edx
6401133d:	add    edi,ecx
6401133f:	add    esi,0x10
64011342:	sub    eax,0x1
64011345:	jne    0x640112c0
6401134b:	mov    eax,0x80078071
64011350:	mul    ecx
64011352:	shr    edx,0xf
64011355:	imul   edx,edx,0xffff000f
6401135b:	add    ecx,edx
6401135d:	mov    eax,0x80078071
64011362:	mul    edi
64011364:	shr    edx,0xf
64011367:	imul   edx,edx,0xffff000f
6401136d:	add    edi,edx
6401136f:	sub    ebp,0x1
64011372:	jne    0x640112b0
64011378:	pop    ebp
64011379:	test   ebx,ebx
6401137b:	je     0x64011457
64011381:	cmp    ebx,0x10
64011384:	jb     0x6401141e
6401138a:	mov    eax,ebx
6401138c:	shr    eax,0x4
6401138f:	nop
64011390:	movzx  edx,BYTE PTR [esi]
64011393:	add    ecx,edx
64011395:	movzx  edx,BYTE PTR [esi+0x1]
64011399:	add    edi,ecx
6401139b:	add    ecx,edx
6401139d:	movzx  edx,BYTE PTR [esi+0x2]
640113a1:	add    edi,ecx
640113a3:	add    ecx,edx
640113a5:	movzx  edx,BYTE PTR [esi+0x3]
640113a9:	add    edi,ecx
640113ab:	add    ecx,edx
640113ad:	movzx  edx,BYTE PTR [esi+0x4]
640113b1:	add    edi,ecx
640113b3:	add    ecx,edx
640113b5:	movzx  edx,BYTE PTR [esi+0x5]
640113b9:	add    edi,ecx
640113bb:	add    ecx,edx
640113bd:	movzx  edx,BYTE PTR [esi+0x6]
640113c1:	add    edi,ecx
640113c3:	add    ecx,edx
640113c5:	movzx  edx,BYTE PTR [esi+0x7]
640113c9:	add    edi,ecx
640113cb:	add    ecx,edx
640113cd:	movzx  edx,BYTE PTR [esi+0x8]
640113d1:	add    edi,ecx
640113d3:	add    ecx,edx
640113d5:	movzx  edx,BYTE PTR [esi+0x9]
640113d9:	add    edi,ecx
640113db:	add    ecx,edx
640113dd:	movzx  edx,BYTE PTR [esi+0xa]
640113e1:	add    edi,ecx
640113e3:	add    ecx,edx
640113e5:	movzx  edx,BYTE PTR [esi+0xb]
640113e9:	add    edi,ecx
640113eb:	add    ecx,edx
640113ed:	movzx  edx,BYTE PTR [esi+0xc]
640113f1:	add    edi,ecx
640113f3:	add    ecx,edx
640113f5:	movzx  edx,BYTE PTR [esi+0xd]
640113f9:	add    edi,ecx
640113fb:	add    ecx,edx
640113fd:	movzx  edx,BYTE PTR [esi+0xe]
64011401:	add    edi,ecx
64011403:	add    ecx,edx
64011405:	movzx  edx,BYTE PTR [esi+0xf]
64011409:	add    edi,ecx
6401140b:	add    ecx,edx
6401140d:	sub    ebx,0x10
64011410:	add    edi,ecx
64011412:	add    esi,0x10
64011415:	sub    eax,0x1
64011418:	jne    0x64011390
6401141e:	test   ebx,ebx
64011420:	je     0x64011433
64011422:	movzx  eax,BYTE PTR [esi]
64011425:	add    ecx,eax
64011427:	sub    ebx,0x1
6401142a:	add    esi,0x1
6401142d:	add    edi,ecx
6401142f:	test   ebx,ebx
64011431:	jne    0x64011422
64011433:	mov    eax,0x80078071
64011438:	mul    ecx
6401143a:	shr    edx,0xf
6401143d:	imul   edx,edx,0xffff000f
64011443:	add    ecx,edx
64011445:	mov    eax,0x80078071
6401144a:	mul    edi
6401144c:	shr    edx,0xf
6401144f:	imul   edx,edx,0xffff000f
64011455:	add    edi,edx
64011457:	mov    eax,edi
64011459:	pop    esi
6401145a:	shl    eax,0x10
6401145d:	pop    edi
6401145e:	or     eax,ecx
64011460:	pop    ebx
64011461:	ret    
64011462:	int3   
64011463:	int3   
64011464:	int3   
64011465:	int3   
64011466:	int3   
64011467:	int3   
64011468:	int3   
64011469:	int3   
6401146a:	int3   
6401146b:	int3   
6401146c:	int3   
6401146d:	int3   
6401146e:	int3   
6401146f:	int3   
64011470:	push   esi
64011471:	mov    esi,edx
64011473:	test   esi,esi
64011475:	not    eax
64011477:	je     0x640114a2
64011479:	lea    esp,[esp+0x0]
64011480:	test   cl,0x3
64011483:	je     0x640114a2
64011485:	movzx  edx,BYTE PTR [ecx]
64011488:	xor    edx,eax
6401148a:	and    edx,0xff
64011490:	shr    eax,0x8
64011493:	xor    eax,DWORD PTR [edx*4+0x64025108]
6401149a:	add    ecx,0x1
6401149d:	sub    esi,0x1
640114a0:	jne    0x64011480
640114a2:	cmp    esi,0x20
640114a5:	push   ebx
640114a6:	push   edi
640114a7:	jb     0x6401168c
640114ad:	mov    edi,esi
640114af:	shr    edi,0x5
640114b2:	xor    eax,DWORD PTR [ecx]
640114b4:	add    ecx,0x4
640114b7:	mov    edx,eax
640114b9:	shr    edx,0x10
640114bc:	movzx  ebx,ah
640114bf:	and    edx,0xff
640114c5:	mov    edx,DWORD PTR [edx*4+0x64025508]
640114cc:	xor    edx,DWORD PTR [ebx*4+0x64025908]
640114d3:	mov    ebx,eax
640114d5:	and    eax,0xff
640114da:	shr    ebx,0x18
640114dd:	xor    edx,DWORD PTR [ebx*4+0x64025108]
640114e4:	add    ecx,0x4
640114e7:	xor    edx,DWORD PTR [eax*4+0x64025d08]
640114ee:	add    ecx,0x4
640114f1:	xor    edx,DWORD PTR [ecx-0x8]
640114f4:	add    ecx,0x4
640114f7:	mov    eax,edx
640114f9:	shr    eax,0x10
640114fc:	and    eax,0xff
64011501:	mov    eax,DWORD PTR [eax*4+0x64025508]
64011508:	movzx  ebx,dh
6401150b:	xor    eax,DWORD PTR [ebx*4+0x64025908]
64011512:	mov    ebx,edx
64011514:	and    edx,0xff
6401151a:	shr    ebx,0x18
6401151d:	xor    eax,DWORD PTR [ebx*4+0x64025108]
64011524:	add    ecx,0x4
64011527:	xor    eax,DWORD PTR [edx*4+0x64025d08]
6401152e:	add    ecx,0x4
64011531:	xor    eax,DWORD PTR [ecx-0x10]
64011534:	mov    edx,eax
64011536:	shr    edx,0x10
64011539:	movzx  ebx,ah
6401153c:	and    edx,0xff
64011542:	mov    edx,DWORD PTR [edx*4+0x64025508]
64011549:	xor    edx,DWORD PTR [ebx*4+0x64025908]
64011550:	mov    ebx,eax
64011552:	and    eax,0xff
64011557:	shr    ebx,0x18
6401155a:	xor    edx,DWORD PTR [ebx*4+0x64025108]
64011561:	xor    edx,DWORD PTR [eax*4+0x64025d08]
64011568:	xor    edx,DWORD PTR [ecx-0xc]
6401156b:	mov    eax,edx
6401156d:	shr    eax,0x10
64011570:	and    eax,0xff
64011575:	mov    eax,DWORD PTR [eax*4+0x64025508]
6401157c:	movzx  ebx,dh
6401157f:	xor    eax,DWORD PTR [ebx*4+0x64025908]
64011586:	mov    ebx,edx
64011588:	and    edx,0xff
6401158e:	shr    ebx,0x18
64011591:	xor    eax,DWORD PTR [ebx*4+0x64025108]
64011598:	xor    eax,DWORD PTR [edx*4+0x64025d08]
6401159f:	xor    eax,DWORD PTR [ecx-0x8]
640115a2:	mov    edx,eax
640115a4:	shr    edx,0x10
640115a7:	movzx  ebx,ah
640115aa:	and    edx,0xff
640115b0:	mov    edx,DWORD PTR [edx*4+0x64025508]
640115b7:	xor    edx,DWORD PTR [ebx*4+0x64025908]
640115be:	mov    ebx,eax
640115c0:	and    eax,0xff
640115c5:	shr    ebx,0x18
640115c8:	xor    edx,DWORD PTR [ebx*4+0x64025108]
640115cf:	xor    edx,DWORD PTR [eax*4+0x64025d08]
640115d6:	xor    edx,DWORD PTR [ecx-0x4]
640115d9:	mov    eax,edx
640115db:	shr    eax,0x10
640115de:	and    eax,0xff
640115e3:	mov    eax,DWORD PTR [eax*4+0x64025508]
640115ea:	movzx  ebx,dh
640115ed:	xor    eax,DWORD PTR [ebx*4+0x64025908]
640115f4:	mov    ebx,edx
640115f6:	shr    ebx,0x18
640115f9:	xor    eax,DWORD PTR [ebx*4+0x64025108]
64011600:	and    edx,0xff
64011606:	xor    eax,DWORD PTR [edx*4+0x64025d08]
6401160d:	xor    eax,DWORD PTR [ecx]
6401160f:	add    ecx,0x4
64011612:	mov    edx,eax
64011614:	shr    edx,0x10
64011617:	movzx  ebx,ah
6401161a:	and    edx,0xff
64011620:	mov    edx,DWORD PTR [edx*4+0x64025508]
64011627:	xor    edx,DWORD PTR [ebx*4+0x64025908]
6401162e:	mov    ebx,eax
64011630:	and    eax,0xff
64011635:	shr    ebx,0x18
64011638:	xor    edx,DWORD PTR [ebx*4+0x64025108]
6401163f:	add    ecx,0x4
64011642:	xor    edx,DWORD PTR [eax*4+0x64025d08]
64011649:	sub    esi,0x20
6401164c:	xor    edx,DWORD PTR [ecx-0x4]
6401164f:	mov    eax,edx
64011651:	shr    eax,0x10
64011654:	and    eax,0xff
64011659:	mov    eax,DWORD PTR [eax*4+0x64025508]
64011660:	movzx  ebx,dh
64011663:	xor    eax,DWORD PTR [ebx*4+0x64025908]
6401166a:	mov    ebx,edx
6401166c:	shr    ebx,0x18
6401166f:	xor    eax,DWORD PTR [ebx*4+0x64025108]
64011676:	and    edx,0xff
6401167c:	xor    eax,DWORD PTR [edx*4+0x64025d08]
64011683:	sub    edi,0x1
64011686:	jne    0x640114b2
6401168c:	cmp    esi,0x4
6401168f:	jb     0x640116d9
64011691:	mov    edx,esi
64011693:	shr    edx,0x2
64011696:	xor    eax,DWORD PTR [ecx]
64011698:	add    ecx,0x4
6401169b:	mov    edi,eax
6401169d:	shr    edi,0x10
640116a0:	and    edi,0xff
640116a6:	mov    edi,DWORD PTR [edi*4+0x64025508]
640116ad:	movzx  ebx,ah
640116b0:	xor    edi,DWORD PTR [ebx*4+0x64025908]
640116b7:	mov    ebx,eax
640116b9:	shr    ebx,0x18
640116bc:	xor    edi,DWORD PTR [ebx*4+0x64025108]
640116c3:	and    eax,0xff
640116c8:	xor    edi,DWORD PTR [eax*4+0x64025d08]
640116cf:	sub    esi,0x4
640116d2:	sub    edx,0x1
640116d5:	mov    eax,edi
640116d7:	jne    0x64011696
640116d9:	test   esi,esi
640116db:	pop    edi
640116dc:	pop    ebx
640116dd:	je     0x640116fd
640116df:	nop
640116e0:	movzx  edx,BYTE PTR [ecx]
640116e3:	xor    edx,eax
640116e5:	and    edx,0xff
640116eb:	shr    eax,0x8
640116ee:	xor    eax,DWORD PTR [edx*4+0x64025108]
640116f5:	add    ecx,0x1
640116f8:	sub    esi,0x1
640116fb:	jne    0x640116e0
640116fd:	not    eax
640116ff:	pop    esi
64011700:	ret    
64011701:	int3   
64011702:	int3   
64011703:	int3   
64011704:	int3   
64011705:	int3   
64011706:	int3   
64011707:	int3   
64011708:	int3   
64011709:	int3   
6401170a:	int3   
6401170b:	int3   
6401170c:	int3   
6401170d:	int3   
6401170e:	int3   
6401170f:	int3   
64011710:	mov    ecx,DWORD PTR [esp+0x8]
64011714:	test   ecx,ecx
64011716:	jne    0x6401171b
64011718:	xor    eax,eax
6401171a:	ret    
6401171b:	mov    edx,DWORD PTR [esp+0xc]
6401171f:	mov    eax,DWORD PTR [esp+0x4]
64011723:	jmp    0x64011470
64011728:	int3   
64011729:	int3   
6401172a:	int3   
6401172b:	int3   
6401172c:	int3   
6401172d:	int3   
6401172e:	int3   
6401172f:	int3   
64011730:	push   esi
64011731:	lea    eax,[edx+0x94]
64011737:	mov    ecx,0x11e
6401173c:	xor    esi,esi
6401173e:	mov    edi,edi
64011740:	mov    WORD PTR [eax],si
64011743:	add    eax,0x4
64011746:	sub    ecx,0x1
64011749:	jne    0x64011740
6401174b:	lea    eax,[edx+0x988]
64011751:	mov    ecx,0x1e
64011756:	mov    WORD PTR [eax],si
64011759:	add    eax,0x4
6401175c:	sub    ecx,0x1
6401175f:	jne    0x64011756
64011761:	lea    eax,[edx+0xa7c]
64011767:	mov    ecx,0x13
6401176c:	lea    esp,[esp+0x0]
64011770:	mov    WORD PTR [eax],si
64011773:	add    eax,0x4
64011776:	sub    ecx,0x1
64011779:	jne    0x64011770
6401177b:	mov    DWORD PTR [edx+0x16ac],esi
64011781:	mov    DWORD PTR [edx+0x16a8],esi
64011787:	mov    DWORD PTR [edx+0x16b0],esi
6401178d:	mov    DWORD PTR [edx+0x16a0],esi
64011793:	mov    WORD PTR [edx+0x494],0x1
6401179c:	pop    esi
6401179d:	ret    
6401179e:	int3   
6401179f:	int3   
640117a0:	push   ecx
640117a1:	mov    edx,DWORD PTR [eax+0x1450]
640117a7:	push   ebp
640117a8:	push   esi
640117a9:	mov    esi,DWORD PTR [esp+0x10]
640117ad:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
640117b4:	lea    ecx,[esi+esi*1]
640117b7:	cmp    ecx,edx
640117b9:	mov    DWORD PTR [esp+0x8],ebp
640117bd:	jg     0x6401185b
640117c3:	push   ebx
640117c4:	jge    0x640117fa
640117c6:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
640117cd:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
640117d4:	movzx  edx,WORD PTR [edi+esi*4]
640117d8:	movzx  ebx,WORD PTR [edi+ebp*4]
640117dc:	cmp    dx,bx
640117df:	jb     0x640117f3
640117e1:	jne    0x640117f6
640117e3:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
640117ea:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
640117f1:	ja     0x640117f6
640117f3:	add    ecx,0x1
640117f6:	mov    ebp,DWORD PTR [esp+0xc]
640117fa:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
64011801:	movzx  edx,WORD PTR [edi+ebp*4]
64011805:	movzx  ebx,WORD PTR [edi+esi*4]
64011809:	cmp    dx,bx
6401180c:	jb     0x6401183b
6401180e:	jne    0x64011820
64011810:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
64011817:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
6401181e:	jbe    0x6401184b
64011820:	mov    edx,DWORD PTR [esp+0x14]
64011824:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
6401182b:	mov    edx,DWORD PTR [eax+0x1450]
64011831:	mov    DWORD PTR [esp+0x14],ecx
64011835:	add    ecx,ecx
64011837:	cmp    ecx,edx
64011839:	jle    0x640117c4
6401183b:	mov    ecx,DWORD PTR [esp+0x14]
6401183f:	pop    ebx
64011840:	pop    esi
64011841:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
64011848:	pop    ebp
64011849:	pop    ecx
6401184a:	ret    
6401184b:	mov    edx,DWORD PTR [esp+0x14]
6401184f:	pop    ebx
64011850:	pop    esi
64011851:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
64011858:	pop    ebp
64011859:	pop    ecx
6401185a:	ret    
6401185b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
64011862:	pop    esi
64011863:	pop    ebp
64011864:	pop    ecx
64011865:	ret    
64011866:	int3   
64011867:	int3   
64011868:	int3   
64011869:	int3   
6401186a:	int3   
6401186b:	int3   
6401186c:	int3   
6401186d:	int3   
6401186e:	int3   
6401186f:	int3   
64011870:	sub    esp,0x20
64011873:	mov    edx,DWORD PTR [ecx+0x4]
64011876:	push   ebx
64011877:	mov    ebx,DWORD PTR [ecx]
64011879:	mov    ecx,DWORD PTR [ecx+0x8]
6401187c:	mov    DWORD PTR [esp+0x18],edx
64011880:	mov    edx,DWORD PTR [ecx+0x4]
64011883:	push   ebp
64011884:	mov    ebp,DWORD PTR [ecx]
64011886:	mov    DWORD PTR [esp+0x24],edx
6401188a:	mov    edx,DWORD PTR [ecx+0x8]
6401188d:	push   esi
6401188e:	mov    esi,DWORD PTR [ecx+0x10]
64011891:	xor    ecx,ecx
64011893:	mov    DWORD PTR [eax+0xb3c],ecx
64011899:	mov    DWORD PTR [eax+0xb40],ecx
6401189f:	mov    DWORD PTR [eax+0xb44],ecx
640118a5:	mov    DWORD PTR [eax+0xb48],ecx
640118ab:	mov    DWORD PTR [eax+0xb4c],ecx
640118b1:	mov    DWORD PTR [eax+0xb50],ecx
640118b7:	mov    DWORD PTR [eax+0xb54],ecx
640118bd:	mov    DWORD PTR [eax+0xb58],ecx
640118c3:	mov    DWORD PTR [esp+0x24],edx
640118c7:	mov    edx,DWORD PTR [eax+0x1454]
640118cd:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
640118d4:	push   edi
640118d5:	mov    WORD PTR [ebx+edx*4+0x2],cx
640118da:	mov    edi,DWORD PTR [eax+0x1454]
640118e0:	add    edi,0x1
640118e3:	cmp    edi,0x23d
640118e9:	mov    DWORD PTR [esp+0x1c],esi
640118ed:	mov    DWORD PTR [esp+0x18],ecx
640118f1:	jge    0x64011a7f
640118f7:	lea    ecx,[eax+edi*4+0xb5c]
640118fe:	mov    DWORD PTR [esp+0x14],ecx
64011902:	mov    ecx,0x23d
64011907:	sub    ecx,edi
64011909:	add    edi,ecx
6401190b:	mov    DWORD PTR [esp+0x20],ecx
6401190f:	mov    DWORD PTR [esp+0x10],edi
64011913:	jmp    0x64011919
64011915:	mov    esi,DWORD PTR [esp+0x1c]
64011919:	mov    edx,DWORD PTR [esp+0x14]
6401191d:	mov    edx,DWORD PTR [edx]
6401191f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
64011924:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
64011929:	add    ecx,0x1
6401192c:	cmp    ecx,esi
6401192e:	jle    0x64011937
64011930:	add    DWORD PTR [esp+0x18],0x1
64011935:	mov    ecx,esi
64011937:	cmp    edx,DWORD PTR [esp+0x24]
6401193b:	mov    WORD PTR [ebx+edx*4+0x2],cx
64011940:	jg     0x6401198a
64011942:	mov    edi,DWORD PTR [esp+0x28]
64011946:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
6401194f:	xor    esi,esi
64011951:	cmp    edx,edi
64011953:	jl     0x64011960
64011955:	mov    esi,edx
64011957:	sub    esi,edi
64011959:	mov    edi,DWORD PTR [esp+0x2c]
6401195d:	mov    esi,DWORD PTR [edi+esi*4]
64011960:	movzx  edi,WORD PTR [ebx+edx*4]
64011964:	movzx  edi,di
64011967:	add    ecx,esi
64011969:	imul   ecx,edi
6401196c:	add    DWORD PTR [eax+0x16a8],ecx
64011972:	test   ebp,ebp
64011974:	je     0x64011986
64011976:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
6401197b:	add    edx,esi
6401197d:	imul   edx,edi
64011980:	add    DWORD PTR [eax+0x16ac],edx
64011986:	mov    edi,DWORD PTR [esp+0x10]
6401198a:	add    DWORD PTR [esp+0x14],0x4
6401198f:	sub    DWORD PTR [esp+0x20],0x1
64011994:	jne    0x64011915
6401199a:	mov    ebp,DWORD PTR [esp+0x18]
6401199e:	test   ebp,ebp
640119a0:	je     0x64011a7f
640119a6:	mov    ecx,DWORD PTR [esp+0x1c]
640119aa:	lea    edx,[ecx-0x1]
640119ad:	mov    DWORD PTR [esp+0x2c],edx
640119b1:	lea    esi,[eax+ecx*2+0xb3c]
640119b8:	jmp    0x640119c0
640119ba:	lea    ebx,[ebx+0x0]
640119c0:	mov    ecx,DWORD PTR [esp+0x2c]
640119c4:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
640119cd:	lea    edx,[eax+ecx*2+0xb3c]
640119d4:	jne    0x640119e2
640119d6:	sub    edx,0x2
640119d9:	sub    ecx,0x1
640119dc:	cmp    WORD PTR [edx],0x0
640119e0:	je     0x640119d6
640119e2:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
640119ec:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
640119f5:	add    WORD PTR [esi],0xffff
640119fa:	sub    ebp,0x2
640119fd:	test   ebp,ebp
640119ff:	jg     0x640119c0
64011a01:	mov    edx,DWORD PTR [esp+0x1c]
64011a05:	test   edx,edx
64011a07:	je     0x64011a7f
64011a09:	mov    DWORD PTR [esp+0x20],esi
64011a0d:	lea    ecx,[ecx+0x0]
64011a10:	movzx  esi,WORD PTR [esi]
64011a13:	test   esi,esi
64011a15:	mov    DWORD PTR [esp+0x1c],esi
64011a19:	je     0x64011a6d
64011a1b:	lea    ebp,[eax+edi*4+0xb5c]
64011a22:	mov    ecx,DWORD PTR [ebp-0x4]
64011a25:	sub    DWORD PTR [esp+0x10],0x1
64011a2a:	sub    ebp,0x4
64011a2d:	cmp    ecx,DWORD PTR [esp+0x24]
64011a31:	mov    DWORD PTR [esp+0x2c],ebp
64011a35:	jg     0x64011a65
64011a37:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
64011a3c:	cmp    edi,edx
64011a3e:	lea    esi,[ebx+ecx*4+0x2]
64011a42:	je     0x64011a5c
64011a44:	movzx  ecx,WORD PTR [ebx+ecx*4]
64011a48:	mov    ebp,edx
64011a4a:	sub    ebp,edi
64011a4c:	imul   ebp,ecx
64011a4f:	add    DWORD PTR [eax+0x16a8],ebp
64011a55:	mov    ebp,DWORD PTR [esp+0x2c]
64011a59:	mov    WORD PTR [esi],dx
64011a5c:	sub    DWORD PTR [esp+0x1c],0x1
64011a61:	mov    esi,DWORD PTR [esp+0x1c]
64011a65:	test   esi,esi
64011a67:	jne    0x64011a22
64011a69:	mov    edi,DWORD PTR [esp+0x10]
64011a6d:	mov    esi,DWORD PTR [esp+0x20]
64011a71:	sub    edx,0x1
64011a74:	sub    esi,0x2
64011a77:	test   edx,edx
64011a79:	mov    DWORD PTR [esp+0x20],esi
64011a7d:	jne    0x64011a10
64011a7f:	pop    edi
64011a80:	pop    esi
64011a81:	pop    ebp
64011a82:	pop    ebx
64011a83:	add    esp,0x20
64011a86:	ret    
64011a87:	int3   
64011a88:	int3   
64011a89:	int3   
64011a8a:	int3   
64011a8b:	int3   
64011a8c:	int3   
64011a8d:	int3   
64011a8e:	int3   
64011a8f:	int3   
64011a90:	sub    esp,0xc
64011a93:	push   ebx
64011a94:	push   ebp
64011a95:	mov    ebp,DWORD PTR [esp+0x18]
64011a99:	push   esi
64011a9a:	push   edi
64011a9b:	movzx  edi,WORD PTR [eax+0x2]
64011a9f:	xor    edx,edx
64011aa1:	test   edi,edi
64011aa3:	mov    ebx,ecx
64011aa5:	mov    DWORD PTR [esp+0x14],0xffffffff
64011aad:	lea    ecx,[edx+0x7]
64011ab0:	lea    esi,[edx+0x4]
64011ab3:	jne    0x64011abd
64011ab5:	mov    ecx,0x8a
64011aba:	lea    esi,[edx+0x3]
64011abd:	test   ebx,ebx
64011abf:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
64011ac6:	jl     0x64011b6a
64011acc:	add    eax,0x6
64011acf:	add    ebx,0x1
64011ad2:	mov    DWORD PTR [esp+0x18],ebx
64011ad6:	mov    DWORD PTR [esp+0x10],eax
64011ada:	mov    ebx,0x1
64011adf:	nop
64011ae0:	mov    eax,edi
64011ae2:	mov    edi,DWORD PTR [esp+0x10]
64011ae6:	movzx  edi,WORD PTR [edi]
64011ae9:	add    edx,ebx
64011aeb:	cmp    edx,ecx
64011aed:	jge    0x64011af3
64011aef:	cmp    eax,edi
64011af1:	je     0x64011b5b
64011af3:	cmp    edx,esi
64011af5:	jge    0x64011b01
64011af7:	add    WORD PTR [ebp+eax*4+0xa7c],dx
64011aff:	jmp    0x64011b31
64011b01:	test   eax,eax
64011b03:	je     0x64011b1c
64011b05:	cmp    eax,DWORD PTR [esp+0x14]
64011b09:	je     0x64011b13
64011b0b:	add    WORD PTR [ebp+eax*4+0xa7c],bx
64011b13:	add    WORD PTR [ebp+0xabc],bx
64011b1a:	jmp    0x64011b31
64011b1c:	cmp    edx,0xa
64011b1f:	jg     0x64011b2a
64011b21:	add    WORD PTR [ebp+0xac0],bx
64011b28:	jmp    0x64011b31
64011b2a:	add    WORD PTR [ebp+0xac4],bx
64011b31:	xor    edx,edx
64011b33:	test   edi,edi
64011b35:	mov    DWORD PTR [esp+0x14],eax
64011b39:	jne    0x64011b45
64011b3b:	mov    ecx,0x8a
64011b40:	lea    esi,[edx+0x3]
64011b43:	jmp    0x64011b5b
64011b45:	cmp    eax,edi
64011b47:	jne    0x64011b53
64011b49:	mov    ecx,0x6
64011b4e:	lea    esi,[ecx-0x3]
64011b51:	jmp    0x64011b5b
64011b53:	mov    ecx,0x7
64011b58:	lea    esi,[ecx-0x3]
64011b5b:	add    DWORD PTR [esp+0x10],0x4
64011b60:	sub    DWORD PTR [esp+0x18],ebx
64011b64:	jne    0x64011ae0
64011b6a:	pop    edi
64011b6b:	pop    esi
64011b6c:	pop    ebp
64011b6d:	pop    ebx
64011b6e:	add    esp,0xc
64011b71:	ret    
64011b72:	int3   
64011b73:	int3   
64011b74:	int3   
64011b75:	int3   
64011b76:	int3   
64011b77:	int3   
64011b78:	int3   
64011b79:	int3   
64011b7a:	int3   
64011b7b:	int3   
64011b7c:	int3   
64011b7d:	int3   
64011b7e:	int3   
64011b7f:	int3   
64011b80:	sub    esp,0x18
64011b83:	push   ebx
64011b84:	push   ebp
64011b85:	movzx  ebp,WORD PTR [edx+0x2]
64011b89:	push   esi
64011b8a:	xor    esi,esi
64011b8c:	test   ebp,ebp
64011b8e:	push   edi
64011b8f:	mov    ebx,ecx
64011b91:	mov    DWORD PTR [esp+0x1c],0xffffffff
64011b99:	mov    DWORD PTR [esp+0x14],ebp
64011b9d:	lea    ecx,[esi+0x7]
64011ba0:	lea    edi,[esi+0x4]
64011ba3:	jne    0x64011bad
64011ba5:	mov    ecx,0x8a
64011baa:	lea    edi,[ebp+0x3]
64011bad:	test   ebx,ebx
64011baf:	jl     0x64012083
64011bb5:	add    edx,0x6
64011bb8:	add    ebx,0x1
64011bbb:	mov    DWORD PTR [esp+0x18],edx
64011bbf:	mov    DWORD PTR [esp+0x20],ebx
64011bc3:	mov    ebp,0x1
64011bc8:	jmp    0x64011bd0
64011bca:	lea    ebx,[ebx+0x0]
64011bd0:	mov    ebx,DWORD PTR [esp+0x18]
64011bd4:	movzx  ebx,WORD PTR [ebx]
64011bd7:	mov    edx,DWORD PTR [esp+0x14]
64011bdb:	add    esi,ebp
64011bdd:	cmp    esi,ecx
64011bdf:	mov    DWORD PTR [esp+0x24],edx
64011be3:	mov    DWORD PTR [esp+0x14],ebx
64011be7:	mov    DWORD PTR [esp+0x10],esi
64011beb:	jge    0x64011bf5
64011bed:	cmp    edx,ebx
64011bef:	je     0x64012074
64011bf5:	cmp    esi,edi
64011bf7:	jge    0x64011c9f
64011bfd:	lea    ecx,[ecx+0x0]
64011c00:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64011c08:	mov    ecx,DWORD PTR [eax+0x16bc]
64011c0e:	mov    ebx,0x10
64011c13:	sub    ebx,edi
64011c15:	cmp    ecx,ebx
64011c17:	jle    0x64011c74
64011c19:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64011c21:	mov    edx,esi
64011c23:	shl    edx,cl
64011c25:	mov    ecx,DWORD PTR [eax+0x8]
64011c28:	or     WORD PTR [eax+0x16b8],dx
64011c2f:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011c36:	mov    edx,DWORD PTR [eax+0x14]
64011c39:	mov    BYTE PTR [ecx+edx*1],bl
64011c3c:	add    DWORD PTR [eax+0x14],ebp
64011c3f:	mov    ecx,DWORD PTR [eax+0x14]
64011c42:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011c49:	mov    edx,DWORD PTR [eax+0x8]
64011c4c:	mov    BYTE PTR [ecx+edx*1],bl
64011c4f:	mov    edx,DWORD PTR [eax+0x16bc]
64011c55:	add    DWORD PTR [eax+0x14],ebp
64011c58:	mov    cl,0x10
64011c5a:	sub    cl,dl
64011c5c:	shr    si,cl
64011c5f:	lea    ecx,[edx+edi*1-0x10]
64011c63:	mov    edx,DWORD PTR [esp+0x24]
64011c67:	mov    WORD PTR [eax+0x16b8],si
64011c6e:	mov    esi,DWORD PTR [esp+0x10]
64011c72:	jmp    0x64011c88
64011c74:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
64011c7c:	shl    bx,cl
64011c7f:	or     WORD PTR [eax+0x16b8],bx
64011c86:	add    ecx,edi
64011c88:	sub    esi,ebp
64011c8a:	mov    DWORD PTR [eax+0x16bc],ecx
64011c90:	mov    DWORD PTR [esp+0x10],esi
64011c94:	jne    0x64011c00
64011c9a:	jmp    0x64012046
64011c9f:	test   edx,edx
64011ca1:	je     0x64011e4c
64011ca7:	cmp    edx,DWORD PTR [esp+0x1c]
64011cab:	je     0x64011d4d
64011cb1:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64011cb9:	mov    ecx,DWORD PTR [eax+0x16bc]
64011cbf:	mov    ebx,0x10
64011cc4:	sub    ebx,edi
64011cc6:	cmp    ecx,ebx
64011cc8:	mov    DWORD PTR [esp+0x1c],edi
64011ccc:	jle    0x64011d29
64011cce:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64011cd6:	mov    edi,esi
64011cd8:	shl    edi,cl
64011cda:	mov    ecx,DWORD PTR [eax+0x8]
64011cdd:	or     WORD PTR [eax+0x16b8],di
64011ce4:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011ceb:	mov    edi,DWORD PTR [eax+0x14]
64011cee:	mov    BYTE PTR [ecx+edi*1],bl
64011cf1:	add    DWORD PTR [eax+0x14],ebp
64011cf4:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011cfb:	mov    ecx,DWORD PTR [eax+0x8]
64011cfe:	mov    edi,DWORD PTR [eax+0x14]
64011d01:	mov    BYTE PTR [edi+ecx*1],bl
64011d04:	mov    ebx,DWORD PTR [eax+0x16bc]
64011d0a:	add    DWORD PTR [eax+0x14],ebp
64011d0d:	mov    cl,0x10
64011d0f:	sub    cl,bl
64011d11:	shr    si,cl
64011d14:	mov    ecx,DWORD PTR [esp+0x1c]
64011d18:	lea    ecx,[ebx+ecx*1-0x10]
64011d1c:	mov    WORD PTR [eax+0x16b8],si
64011d23:	mov    esi,DWORD PTR [esp+0x10]
64011d27:	jmp    0x64011d41
64011d29:	mov    di,WORD PTR [eax+edx*4+0xa7c]
64011d31:	shl    di,cl
64011d34:	or     WORD PTR [eax+0x16b8],di
64011d3b:	mov    edi,DWORD PTR [esp+0x1c]
64011d3f:	add    ecx,edi
64011d41:	sub    esi,ebp
64011d43:	mov    DWORD PTR [eax+0x16bc],ecx
64011d49:	mov    DWORD PTR [esp+0x10],esi
64011d4d:	movzx  edi,WORD PTR [eax+0xabe]
64011d54:	mov    ecx,DWORD PTR [eax+0x16bc]
64011d5a:	mov    ebx,0x10
64011d5f:	sub    ebx,edi
64011d61:	cmp    ecx,ebx
64011d63:	mov    DWORD PTR [esp+0x1c],edi
64011d67:	jle    0x64011dc3
64011d69:	movzx  esi,WORD PTR [eax+0xabc]
64011d70:	mov    edi,esi
64011d72:	shl    edi,cl
64011d74:	mov    ecx,DWORD PTR [eax+0x8]
64011d77:	or     WORD PTR [eax+0x16b8],di
64011d7e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011d85:	mov    edi,DWORD PTR [eax+0x14]
64011d88:	mov    BYTE PTR [ecx+edi*1],bl
64011d8b:	add    DWORD PTR [eax+0x14],ebp
64011d8e:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011d95:	mov    ecx,DWORD PTR [eax+0x8]
64011d98:	mov    edi,DWORD PTR [eax+0x14]
64011d9b:	mov    BYTE PTR [edi+ecx*1],bl
64011d9e:	mov    ebx,DWORD PTR [eax+0x16bc]
64011da4:	add    DWORD PTR [eax+0x14],ebp
64011da7:	mov    cl,0x10
64011da9:	sub    cl,bl
64011dab:	shr    si,cl
64011dae:	mov    ecx,DWORD PTR [esp+0x1c]
64011db2:	lea    ecx,[ebx+ecx*1-0x10]
64011db6:	mov    WORD PTR [eax+0x16b8],si
64011dbd:	mov    esi,DWORD PTR [esp+0x10]
64011dc1:	jmp    0x64011dda
64011dc3:	mov    di,WORD PTR [eax+0xabc]
64011dca:	shl    di,cl
64011dcd:	or     WORD PTR [eax+0x16b8],di
64011dd4:	mov    edi,DWORD PTR [esp+0x1c]
64011dd8:	add    ecx,edi
64011dda:	add    esi,0xfffffffd
64011ddd:	cmp    ecx,0xe
64011de0:	mov    DWORD PTR [eax+0x16bc],ecx
64011de6:	jle    0x64011e3b
64011de8:	mov    edi,esi
64011dea:	shl    edi,cl
64011dec:	mov    ecx,DWORD PTR [eax+0x8]
64011def:	or     WORD PTR [eax+0x16b8],di
64011df6:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011dfd:	mov    edi,DWORD PTR [eax+0x14]
64011e00:	mov    BYTE PTR [ecx+edi*1],bl
64011e03:	add    DWORD PTR [eax+0x14],ebp
64011e06:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011e0d:	mov    edi,DWORD PTR [eax+0x14]
64011e10:	mov    ecx,DWORD PTR [eax+0x8]
64011e13:	mov    BYTE PTR [edi+ecx*1],bl
64011e16:	mov    ebx,DWORD PTR [eax+0x16bc]
64011e1c:	add    DWORD PTR [eax+0x14],ebp
64011e1f:	mov    cl,0x10
64011e21:	sub    cl,bl
64011e23:	shr    si,cl
64011e26:	add    ebx,0xfffffff2
64011e29:	mov    DWORD PTR [eax+0x16bc],ebx
64011e2f:	mov    WORD PTR [eax+0x16b8],si
64011e36:	jmp    0x64012046
64011e3b:	shl    esi,cl
64011e3d:	or     WORD PTR [eax+0x16b8],si
64011e44:	add    ecx,0x2
64011e47:	jmp    0x64012040
64011e4c:	cmp    esi,0xa
64011e4f:	mov    ecx,DWORD PTR [eax+0x16bc]
64011e55:	mov    ebx,0x10
64011e5a:	jg     0x64011f54
64011e60:	movzx  edi,WORD PTR [eax+0xac2]
64011e67:	sub    ebx,edi
64011e69:	cmp    ecx,ebx
64011e6b:	mov    DWORD PTR [esp+0x1c],edi
64011e6f:	jle    0x64011ecb
64011e71:	movzx  esi,WORD PTR [eax+0xac0]
64011e78:	mov    edi,esi
64011e7a:	shl    edi,cl
64011e7c:	mov    ecx,DWORD PTR [eax+0x8]
64011e7f:	or     WORD PTR [eax+0x16b8],di
64011e86:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011e8d:	mov    edi,DWORD PTR [eax+0x14]
64011e90:	mov    BYTE PTR [ecx+edi*1],bl
64011e93:	add    DWORD PTR [eax+0x14],ebp
64011e96:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011e9d:	mov    ecx,DWORD PTR [eax+0x8]
64011ea0:	mov    edi,DWORD PTR [eax+0x14]
64011ea3:	mov    BYTE PTR [edi+ecx*1],bl
64011ea6:	mov    ebx,DWORD PTR [eax+0x16bc]
64011eac:	add    DWORD PTR [eax+0x14],ebp
64011eaf:	mov    cl,0x10
64011eb1:	sub    cl,bl
64011eb3:	shr    si,cl
64011eb6:	mov    ecx,DWORD PTR [esp+0x1c]
64011eba:	lea    ecx,[ebx+ecx*1-0x10]
64011ebe:	mov    WORD PTR [eax+0x16b8],si
64011ec5:	mov    esi,DWORD PTR [esp+0x10]
64011ec9:	jmp    0x64011ee2
64011ecb:	mov    di,WORD PTR [eax+0xac0]
64011ed2:	shl    di,cl
64011ed5:	or     WORD PTR [eax+0x16b8],di
64011edc:	mov    edi,DWORD PTR [esp+0x1c]
64011ee0:	add    ecx,edi
64011ee2:	add    esi,0xfffffffd
64011ee5:	cmp    ecx,0xd
64011ee8:	mov    DWORD PTR [eax+0x16bc],ecx
64011eee:	jle    0x64011f43
64011ef0:	mov    edi,esi
64011ef2:	shl    edi,cl
64011ef4:	mov    ecx,DWORD PTR [eax+0x8]
64011ef7:	or     WORD PTR [eax+0x16b8],di
64011efe:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011f05:	mov    edi,DWORD PTR [eax+0x14]
64011f08:	mov    BYTE PTR [ecx+edi*1],bl
64011f0b:	add    DWORD PTR [eax+0x14],ebp
64011f0e:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011f15:	mov    edi,DWORD PTR [eax+0x14]
64011f18:	mov    ecx,DWORD PTR [eax+0x8]
64011f1b:	mov    BYTE PTR [edi+ecx*1],bl
64011f1e:	mov    ebx,DWORD PTR [eax+0x16bc]
64011f24:	add    DWORD PTR [eax+0x14],ebp
64011f27:	mov    cl,0x10
64011f29:	sub    cl,bl
64011f2b:	shr    si,cl
64011f2e:	add    ebx,0xfffffff3
64011f31:	mov    DWORD PTR [eax+0x16bc],ebx
64011f37:	mov    WORD PTR [eax+0x16b8],si
64011f3e:	jmp    0x64012046
64011f43:	shl    esi,cl
64011f45:	or     WORD PTR [eax+0x16b8],si
64011f4c:	add    ecx,0x3
64011f4f:	jmp    0x64012040
64011f54:	movzx  edi,WORD PTR [eax+0xac6]
64011f5b:	sub    ebx,edi
64011f5d:	cmp    ecx,ebx
64011f5f:	mov    DWORD PTR [esp+0x1c],edi
64011f63:	jle    0x64011fbf
64011f65:	movzx  esi,WORD PTR [eax+0xac4]
64011f6c:	mov    edi,esi
64011f6e:	shl    edi,cl
64011f70:	mov    ecx,DWORD PTR [eax+0x8]
64011f73:	or     WORD PTR [eax+0x16b8],di
64011f7a:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011f81:	mov    edi,DWORD PTR [eax+0x14]
64011f84:	mov    BYTE PTR [ecx+edi*1],bl
64011f87:	add    DWORD PTR [eax+0x14],ebp
64011f8a:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011f91:	mov    ecx,DWORD PTR [eax+0x8]
64011f94:	mov    edi,DWORD PTR [eax+0x14]
64011f97:	mov    BYTE PTR [edi+ecx*1],bl
64011f9a:	mov    ebx,DWORD PTR [eax+0x16bc]
64011fa0:	add    DWORD PTR [eax+0x14],ebp
64011fa3:	mov    cl,0x10
64011fa5:	sub    cl,bl
64011fa7:	shr    si,cl
64011faa:	mov    ecx,DWORD PTR [esp+0x1c]
64011fae:	lea    ecx,[ebx+ecx*1-0x10]
64011fb2:	mov    WORD PTR [eax+0x16b8],si
64011fb9:	mov    esi,DWORD PTR [esp+0x10]
64011fbd:	jmp    0x64011fd6
64011fbf:	mov    di,WORD PTR [eax+0xac4]
64011fc6:	shl    di,cl
64011fc9:	or     WORD PTR [eax+0x16b8],di
64011fd0:	mov    edi,DWORD PTR [esp+0x1c]
64011fd4:	add    ecx,edi
64011fd6:	add    esi,0xfffffff5
64011fd9:	cmp    ecx,0x9
64011fdc:	mov    DWORD PTR [eax+0x16bc],ecx
64011fe2:	jle    0x64012034
64011fe4:	mov    edi,esi
64011fe6:	shl    edi,cl
64011fe8:	mov    ecx,DWORD PTR [eax+0x8]
64011feb:	or     WORD PTR [eax+0x16b8],di
64011ff2:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011ff9:	mov    edi,DWORD PTR [eax+0x14]
64011ffc:	mov    BYTE PTR [ecx+edi*1],bl
64011fff:	add    DWORD PTR [eax+0x14],ebp
64012002:	movzx  ebx,BYTE PTR [eax+0x16b9]
64012009:	mov    edi,DWORD PTR [eax+0x14]
6401200c:	mov    ecx,DWORD PTR [eax+0x8]
6401200f:	mov    BYTE PTR [edi+ecx*1],bl
64012012:	mov    ebx,DWORD PTR [eax+0x16bc]
64012018:	add    DWORD PTR [eax+0x14],ebp
6401201b:	mov    cl,0x10
6401201d:	sub    cl,bl
6401201f:	shr    si,cl
64012022:	add    ebx,0xfffffff7
64012025:	mov    DWORD PTR [eax+0x16bc],ebx
6401202b:	mov    WORD PTR [eax+0x16b8],si
64012032:	jmp    0x64012046
64012034:	shl    esi,cl
64012036:	or     WORD PTR [eax+0x16b8],si
6401203d:	add    ecx,0x7
64012040:	mov    DWORD PTR [eax+0x16bc],ecx
64012046:	mov    ecx,DWORD PTR [esp+0x14]
6401204a:	xor    esi,esi
6401204c:	test   ecx,ecx
6401204e:	mov    DWORD PTR [esp+0x1c],edx
64012052:	jne    0x6401205e
64012054:	mov    ecx,0x8a
64012059:	lea    edi,[esi+0x3]
6401205c:	jmp    0x64012074
6401205e:	cmp    edx,ecx
64012060:	jne    0x6401206c
64012062:	mov    ecx,0x6
64012067:	lea    edi,[ecx-0x3]
6401206a:	jmp    0x64012074
6401206c:	mov    ecx,0x7
64012071:	lea    edi,[ecx-0x3]
64012074:	add    DWORD PTR [esp+0x18],0x4
64012079:	sub    DWORD PTR [esp+0x20],ebp
6401207d:	jne    0x64011bd0
64012083:	pop    edi
64012084:	pop    esi
64012085:	pop    ebp
64012086:	pop    ebx
64012087:	add    esp,0x18
6401208a:	ret    
6401208b:	int3   
6401208c:	int3   
6401208d:	int3   
6401208e:	int3   
6401208f:	int3   
64012090:	push   ecx
64012091:	mov    ecx,DWORD PTR [eax+0x16bc]
64012097:	cmp    ecx,0xb
6401209a:	push   ebx
6401209b:	mov    ebx,DWORD PTR [esp+0x14]
6401209f:	push   ebp
640120a0:	push   esi
640120a1:	push   edi
640120a2:	mov    ebp,0x1
640120a7:	jle    0x64012107
640120a9:	mov    esi,DWORD PTR [esp+0x18]
640120ad:	add    esi,0xfffffeff
640120b3:	mov    edx,esi
640120b5:	shl    edx,cl
640120b7:	mov    ecx,DWORD PTR [eax+0x14]
640120ba:	or     WORD PTR [eax+0x16b8],dx
640120c1:	movzx  ebx,BYTE PTR [eax+0x16b8]
640120c8:	mov    edx,DWORD PTR [eax+0x8]
640120cb:	mov    BYTE PTR [ecx+edx*1],bl
640120ce:	add    DWORD PTR [eax+0x14],ebp
640120d1:	movzx  ebx,BYTE PTR [eax+0x16b9]
640120d8:	mov    ecx,DWORD PTR [eax+0x14]
640120db:	mov    edx,DWORD PTR [eax+0x8]
640120de:	mov    BYTE PTR [ecx+edx*1],bl
640120e1:	mov    edx,DWORD PTR [eax+0x16bc]
640120e7:	add    DWORD PTR [eax+0x14],ebp
640120ea:	mov    ebx,DWORD PTR [esp+0x20]
640120ee:	mov    cl,0x10
640120f0:	sub    cl,dl
640120f2:	shr    si,cl
640120f5:	add    edx,0xfffffff5
640120f8:	mov    DWORD PTR [eax+0x16bc],edx
640120fe:	mov    WORD PTR [eax+0x16b8],si
64012105:	jmp    0x64012123
64012107:	mov    edx,DWORD PTR [esp+0x18]
6401210b:	add    edx,0xfffffeff
64012111:	shl    edx,cl
64012113:	or     WORD PTR [eax+0x16b8],dx
6401211a:	add    ecx,0x5
6401211d:	mov    DWORD PTR [eax+0x16bc],ecx
64012123:	mov    ecx,DWORD PTR [eax+0x16bc]
64012129:	cmp    ecx,0xb
6401212c:	jle    0x6401218d
6401212e:	mov    esi,DWORD PTR [esp+0x1c]
64012132:	add    esi,0xffffffff
64012135:	mov    edx,esi
64012137:	shl    edx,cl
64012139:	mov    ecx,DWORD PTR [eax+0x14]
6401213c:	mov    DWORD PTR [esp+0x10],ebx
64012140:	or     WORD PTR [eax+0x16b8],dx
64012147:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401214e:	mov    edx,DWORD PTR [eax+0x8]
64012151:	mov    BYTE PTR [ecx+edx*1],bl
64012154:	add    DWORD PTR [eax+0x14],ebp
64012157:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401215e:	mov    ecx,DWORD PTR [eax+0x14]
64012161:	mov    edx,DWORD PTR [eax+0x8]
64012164:	mov    BYTE PTR [ecx+edx*1],bl
64012167:	mov    edx,DWORD PTR [eax+0x16bc]
6401216d:	add    DWORD PTR [eax+0x14],ebp
64012170:	mov    ebx,DWORD PTR [esp+0x10]
64012174:	mov    cl,0x10
64012176:	sub    cl,dl
64012178:	shr    si,cl
6401217b:	add    edx,0xfffffff5
6401217e:	mov    DWORD PTR [eax+0x16bc],edx
64012184:	mov    WORD PTR [eax+0x16b8],si
6401218b:	jmp    0x640121a6
6401218d:	mov    edx,DWORD PTR [esp+0x1c]
64012191:	add    edx,0xffffffff
64012194:	shl    edx,cl
64012196:	or     WORD PTR [eax+0x16b8],dx
6401219d:	add    ecx,0x5
640121a0:	mov    DWORD PTR [eax+0x16bc],ecx
640121a6:	mov    ecx,DWORD PTR [eax+0x16bc]
640121ac:	cmp    ecx,0xc
640121af:	jle    0x6401220c
640121b1:	lea    esi,[ebx-0x4]
640121b4:	mov    edx,esi
640121b6:	shl    edx,cl
640121b8:	mov    ecx,DWORD PTR [eax+0x14]
640121bb:	mov    DWORD PTR [esp+0x10],ebx
640121bf:	or     WORD PTR [eax+0x16b8],dx
640121c6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640121cd:	mov    edx,DWORD PTR [eax+0x8]
640121d0:	mov    BYTE PTR [ecx+edx*1],bl
640121d3:	add    DWORD PTR [eax+0x14],ebp
640121d6:	movzx  ebx,BYTE PTR [eax+0x16b9]
640121dd:	mov    ecx,DWORD PTR [eax+0x14]
640121e0:	mov    edx,DWORD PTR [eax+0x8]
640121e3:	mov    BYTE PTR [ecx+edx*1],bl
640121e6:	mov    edx,DWORD PTR [eax+0x16bc]
640121ec:	add    DWORD PTR [eax+0x14],ebp
640121ef:	mov    ebx,DWORD PTR [esp+0x10]
640121f3:	mov    cl,0x10
640121f5:	sub    cl,dl
640121f7:	shr    si,cl
640121fa:	add    edx,0xfffffff4
640121fd:	mov    DWORD PTR [eax+0x16bc],edx
64012203:	mov    WORD PTR [eax+0x16b8],si
6401220a:	jmp    0x64012221
6401220c:	lea    edx,[ebx-0x4]
6401220f:	shl    edx,cl
64012211:	or     WORD PTR [eax+0x16b8],dx
64012218:	add    ecx,0x4
6401221b:	mov    DWORD PTR [eax+0x16bc],ecx
64012221:	xor    edi,edi
64012223:	test   ebx,ebx
64012225:	jle    0x640122c3
6401222b:	jmp    0x64012230
6401222d:	lea    ecx,[ecx+0x0]
64012230:	mov    ecx,DWORD PTR [eax+0x16bc]
64012236:	cmp    ecx,0xd
64012239:	movzx  edx,BYTE PTR [edi+0x6402717c]
64012240:	jle    0x6401229e
64012242:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
6401224a:	mov    edx,esi
6401224c:	shl    edx,cl
6401224e:	mov    ecx,DWORD PTR [eax+0x14]
64012251:	or     WORD PTR [eax+0x16b8],dx
64012258:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401225f:	mov    edx,DWORD PTR [eax+0x8]
64012262:	mov    BYTE PTR [ecx+edx*1],bl
64012265:	add    DWORD PTR [eax+0x14],ebp
64012268:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401226f:	mov    ecx,DWORD PTR [eax+0x14]
64012272:	mov    edx,DWORD PTR [eax+0x8]
64012275:	mov    BYTE PTR [ecx+edx*1],bl
64012278:	mov    edx,DWORD PTR [eax+0x16bc]
6401227e:	add    DWORD PTR [eax+0x14],ebp
64012281:	mov    ebx,DWORD PTR [esp+0x20]
64012285:	mov    cl,0x10
64012287:	sub    cl,dl
64012289:	shr    si,cl
6401228c:	add    edx,0xfffffff3
6401228f:	mov    DWORD PTR [eax+0x16bc],edx
64012295:	mov    WORD PTR [eax+0x16b8],si
6401229c:	jmp    0x640122b9
6401229e:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
640122a6:	shl    dx,cl
640122a9:	or     WORD PTR [eax+0x16b8],dx
640122b0:	add    ecx,0x3
640122b3:	mov    DWORD PTR [eax+0x16bc],ecx
640122b9:	add    edi,ebp
640122bb:	cmp    edi,ebx
640122bd:	jl     0x64012230
640122c3:	mov    ecx,DWORD PTR [esp+0x18]
640122c7:	add    ecx,0xffffffff
640122ca:	lea    edx,[eax+0x94]
640122d0:	call   0x64011b80
640122d5:	mov    ecx,DWORD PTR [esp+0x1c]
640122d9:	pop    edi
640122da:	pop    esi
640122db:	pop    ebp
640122dc:	add    ecx,0xffffffff
640122df:	lea    edx,[eax+0x988]
640122e5:	pop    ebx
640122e6:	add    esp,0x4
640122e9:	jmp    0x64011b80
640122ee:	int3   
640122ef:	int3   
640122f0:	sub    esp,0xc
640122f3:	push   ebx
640122f4:	mov    ebx,DWORD PTR [esp+0x14]
640122f8:	push   ebp
640122f9:	xor    ecx,ecx
640122fb:	cmp    DWORD PTR [eax+0x16a0],ecx
64012301:	push   esi
64012302:	push   edi
64012303:	je     0x64012642
64012309:	lea    esp,[esp+0x0]
64012310:	mov    edx,DWORD PTR [eax+0x16a4]
64012316:	movzx  ebp,WORD PTR [edx+ecx*2]
6401231a:	mov    edx,DWORD PTR [eax+0x1698]
64012320:	movzx  esi,BYTE PTR [ecx+edx*1]
64012324:	add    ecx,0x1
64012327:	test   ebp,ebp
64012329:	mov    DWORD PTR [esp+0x18],ecx
6401232d:	mov    ecx,DWORD PTR [eax+0x16bc]
64012333:	jne    0x640123ba
64012339:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
6401233e:	mov    edx,0x10
64012343:	sub    edx,edi
64012345:	cmp    ecx,edx
64012347:	jle    0x640123a5
64012349:	movzx  esi,WORD PTR [ebx+esi*4]
6401234d:	mov    edx,esi
6401234f:	shl    edx,cl
64012351:	mov    ecx,DWORD PTR [eax+0x8]
64012354:	mov    DWORD PTR [esp+0x10],ebx
64012358:	or     WORD PTR [eax+0x16b8],dx
6401235f:	movzx  ebx,BYTE PTR [eax+0x16b8]
64012366:	mov    edx,DWORD PTR [eax+0x14]
64012369:	mov    BYTE PTR [ecx+edx*1],bl
6401236c:	add    DWORD PTR [eax+0x14],0x1
64012370:	movzx  ebx,BYTE PTR [eax+0x16b9]
64012377:	mov    ecx,DWORD PTR [eax+0x14]
6401237a:	mov    edx,DWORD PTR [eax+0x8]
6401237d:	mov    BYTE PTR [ecx+edx*1],bl
64012380:	mov    edx,DWORD PTR [eax+0x16bc]
64012386:	add    DWORD PTR [eax+0x14],0x1
6401238a:	mov    ebx,DWORD PTR [esp+0x10]
6401238e:	mov    cl,0x10
64012390:	sub    cl,dl
64012392:	shr    si,cl
64012395:	lea    ecx,[edx+edi*1-0x10]
64012399:	mov    WORD PTR [eax+0x16b8],si
640123a0:	jmp    0x6401262c
640123a5:	mov    dx,WORD PTR [ebx+esi*4]
640123a9:	shl    dx,cl
640123ac:	or     WORD PTR [eax+0x16b8],dx
640123b3:	add    ecx,edi
640123b5:	jmp    0x6401262c
640123ba:	movzx  edx,BYTE PTR [esi+0x64027950]
640123c1:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
640123c9:	mov    ebx,0x10
640123ce:	sub    ebx,edi
640123d0:	cmp    ecx,ebx
640123d2:	mov    DWORD PTR [esp+0x10],edi
640123d6:	mov    edi,DWORD PTR [esp+0x20]
640123da:	mov    DWORD PTR [esp+0x14],edx
640123de:	jle    0x64012443
640123e0:	movzx  edi,WORD PTR [edi+edx*4+0x404]
640123e8:	mov    edx,edi
640123ea:	shl    edx,cl
640123ec:	mov    ecx,DWORD PTR [eax+0x8]
640123ef:	or     WORD PTR [eax+0x16b8],dx
640123f6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640123fd:	mov    edx,DWORD PTR [eax+0x14]
64012400:	mov    BYTE PTR [ecx+edx*1],bl
64012403:	add    DWORD PTR [eax+0x14],0x1
64012407:	mov    ecx,DWORD PTR [eax+0x14]
6401240a:	movzx  ebx,BYTE PTR [eax+0x16b9]
64012411:	mov    edx,DWORD PTR [eax+0x8]
64012414:	mov    BYTE PTR [ecx+edx*1],bl
64012417:	mov    edx,DWORD PTR [eax+0x16bc]
6401241d:	add    DWORD PTR [eax+0x14],0x1
64012421:	mov    cl,0x10
64012423:	sub    cl,dl
64012425:	shr    di,cl
64012428:	mov    ecx,DWORD PTR [esp+0x10]
6401242c:	lea    edx,[edx+ecx*1-0x10]
64012430:	mov    DWORD PTR [eax+0x16bc],edx
64012436:	mov    edx,DWORD PTR [esp+0x14]
6401243a:	mov    WORD PTR [eax+0x16b8],di
64012441:	jmp    0x64012461
64012443:	mov    di,WORD PTR [edi+edx*4+0x404]
6401244b:	shl    di,cl
6401244e:	or     WORD PTR [eax+0x16b8],di
64012455:	mov    edi,DWORD PTR [esp+0x10]
64012459:	add    ecx,edi
6401245b:	mov    DWORD PTR [eax+0x16bc],ecx
64012461:	mov    edi,DWORD PTR [edx*4+0x64027108]
64012468:	test   edi,edi
6401246a:	mov    ebx,DWORD PTR [esp+0x20]
6401246e:	je     0x640124ea
64012470:	sub    esi,DWORD PTR [edx*4+0x64027a50]
64012477:	mov    ecx,DWORD PTR [eax+0x16bc]
6401247d:	mov    edx,0x10
64012482:	sub    edx,edi
64012484:	cmp    ecx,edx
64012486:	jle    0x640124d9
64012488:	mov    edx,esi
6401248a:	shl    edx,cl
6401248c:	mov    ecx,DWORD PTR [eax+0x8]
6401248f:	or     WORD PTR [eax+0x16b8],dx
64012496:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401249d:	mov    edx,DWORD PTR [eax+0x14]
640124a0:	mov    BYTE PTR [ecx+edx*1],bl
640124a3:	add    DWORD PTR [eax+0x14],0x1
640124a7:	movzx  ebx,BYTE PTR [eax+0x16b9]
640124ae:	mov    ecx,DWORD PTR [eax+0x14]
640124b1:	mov    edx,DWORD PTR [eax+0x8]
640124b4:	mov    BYTE PTR [ecx+edx*1],bl
640124b7:	mov    edx,DWORD PTR [eax+0x16bc]
640124bd:	add    DWORD PTR [eax+0x14],0x1
640124c1:	mov    ebx,DWORD PTR [esp+0x20]
640124c5:	mov    cl,0x10
640124c7:	sub    cl,dl
640124c9:	shr    si,cl
640124cc:	lea    ecx,[edx+edi*1-0x10]
640124d0:	mov    WORD PTR [eax+0x16b8],si
640124d7:	jmp    0x640124e4
640124d9:	shl    esi,cl
640124db:	or     WORD PTR [eax+0x16b8],si
640124e2:	add    ecx,edi
640124e4:	mov    DWORD PTR [eax+0x16bc],ecx
640124ea:	sub    ebp,0x1
640124ed:	cmp    ebp,0x100
640124f3:	jae    0x640124fe
640124f5:	movzx  edi,BYTE PTR [ebp+0x64027750]
640124fc:	jmp    0x6401250a
640124fe:	mov    edx,ebp
64012500:	shr    edx,0x7
64012503:	movzx  edi,BYTE PTR [edx+0x64027850]
6401250a:	mov    ecx,DWORD PTR [esp+0x24]
6401250e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
64012513:	mov    ecx,DWORD PTR [eax+0x16bc]
64012519:	mov    esi,0x10
6401251e:	sub    esi,edx
64012520:	cmp    ecx,esi
64012522:	mov    DWORD PTR [esp+0x14],edx
64012526:	jle    0x6401258b
64012528:	mov    edx,DWORD PTR [esp+0x24]
6401252c:	movzx  esi,WORD PTR [edx+edi*4]
64012530:	mov    edx,esi
64012532:	shl    edx,cl
64012534:	mov    ecx,DWORD PTR [eax+0x8]
64012537:	or     WORD PTR [eax+0x16b8],dx
6401253e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64012545:	mov    edx,DWORD PTR [eax+0x14]
64012548:	mov    BYTE PTR [ecx+edx*1],bl
6401254b:	add    DWORD PTR [eax+0x14],0x1
6401254f:	movzx  ebx,BYTE PTR [eax+0x16b9]
64012556:	mov    ecx,DWORD PTR [eax+0x14]
64012559:	mov    edx,DWORD PTR [eax+0x8]
6401255c:	mov    BYTE PTR [ecx+edx*1],bl
6401255f:	mov    edx,DWORD PTR [eax+0x16bc]
64012565:	add    DWORD PTR [eax+0x14],0x1
64012569:	mov    ebx,DWORD PTR [esp+0x20]
6401256d:	mov    cl,0x10
6401256f:	sub    cl,dl
64012571:	shr    si,cl
64012574:	mov    ecx,DWORD PTR [esp+0x14]
64012578:	lea    edx,[edx+ecx*1-0x10]
6401257c:	mov    DWORD PTR [eax+0x16bc],edx
64012582:	mov    WORD PTR [eax+0x16b8],si
64012589:	jmp    0x640125a5
6401258b:	mov    esi,DWORD PTR [esp+0x24]
6401258f:	mov    si,WORD PTR [esi+edi*4]
64012593:	shl    si,cl
64012596:	or     WORD PTR [eax+0x16b8],si
6401259d:	add    ecx,edx
6401259f:	mov    DWORD PTR [eax+0x16bc],ecx
640125a5:	mov    esi,DWORD PTR [edi*4+0x64027190]
640125ac:	test   esi,esi
640125ae:	je     0x64012632
640125b4:	mov    ecx,DWORD PTR [eax+0x16bc]
640125ba:	sub    ebp,DWORD PTR [edi*4+0x64027ac8]
640125c1:	mov    edx,0x10
640125c6:	sub    edx,esi
640125c8:	cmp    ecx,edx
640125ca:	jle    0x64012621
640125cc:	mov    edx,ebp
640125ce:	shl    edx,cl
640125d0:	mov    ecx,DWORD PTR [eax+0x8]
640125d3:	mov    DWORD PTR [esp+0x14],ebx
640125d7:	or     WORD PTR [eax+0x16b8],dx
640125de:	movzx  ebx,BYTE PTR [eax+0x16b8]
640125e5:	mov    edx,DWORD PTR [eax+0x14]
640125e8:	mov    BYTE PTR [ecx+edx*1],bl
640125eb:	add    DWORD PTR [eax+0x14],0x1
640125ef:	movzx  ebx,BYTE PTR [eax+0x16b9]
640125f6:	mov    ecx,DWORD PTR [eax+0x14]
640125f9:	mov    edx,DWORD PTR [eax+0x8]
640125fc:	mov    BYTE PTR [ecx+edx*1],bl
640125ff:	mov    edx,DWORD PTR [eax+0x16bc]
64012605:	add    DWORD PTR [eax+0x14],0x1
64012609:	mov    ebx,DWORD PTR [esp+0x14]
6401260d:	mov    cl,0x10
6401260f:	sub    cl,dl
64012611:	shr    bp,cl
64012614:	lea    ecx,[edx+esi*1-0x10]
64012618:	mov    WORD PTR [eax+0x16b8],bp
6401261f:	jmp    0x6401262c
64012621:	shl    ebp,cl
64012623:	or     WORD PTR [eax+0x16b8],bp
6401262a:	add    ecx,esi
6401262c:	mov    DWORD PTR [eax+0x16bc],ecx
64012632:	mov    ecx,DWORD PTR [esp+0x18]
64012636:	cmp    ecx,DWORD PTR [eax+0x16a0]
6401263c:	jb     0x64012310
64012642:	movzx  edi,WORD PTR [ebx+0x402]
64012649:	mov    ecx,DWORD PTR [eax+0x16bc]
6401264f:	mov    edx,0x10
64012654:	sub    edx,edi
64012656:	cmp    ecx,edx
64012658:	jle    0x640126cd
6401265a:	movzx  esi,WORD PTR [ebx+0x400]
64012661:	mov    edx,esi
64012663:	shl    edx,cl
64012665:	mov    ecx,DWORD PTR [eax+0x8]
64012668:	mov    DWORD PTR [esp+0x20],ebx
6401266c:	or     WORD PTR [eax+0x16b8],dx
64012673:	mov    edx,DWORD PTR [eax+0x14]
64012676:	mov    bl,BYTE PTR [eax+0x16b8]
6401267c:	mov    BYTE PTR [ecx+edx*1],bl
6401267f:	add    DWORD PTR [eax+0x14],0x1
64012683:	mov    ebp,DWORD PTR [eax+0x14]
64012686:	mov    ecx,DWORD PTR [eax+0x8]
64012689:	mov    dl,BYTE PTR [eax+0x16b9]
6401268f:	mov    ebx,DWORD PTR [esp+0x20]
64012693:	mov    BYTE PTR [ecx+ebp*1],dl
64012696:	mov    edx,DWORD PTR [eax+0x16bc]
6401269c:	add    DWORD PTR [eax+0x14],0x1
640126a0:	mov    cl,0x10
640126a2:	sub    cl,dl
640126a4:	shr    si,cl
640126a7:	lea    ecx,[edx+edi*1-0x10]
640126ab:	pop    edi
640126ac:	mov    DWORD PTR [eax+0x16bc],ecx
640126b2:	mov    WORD PTR [eax+0x16b8],si
640126b9:	movzx  edx,WORD PTR [ebx+0x402]
640126c0:	pop    esi
640126c1:	pop    ebp
640126c2:	mov    DWORD PTR [eax+0x16b4],edx
640126c8:	pop    ebx
640126c9:	add    esp,0xc
640126cc:	ret    
640126cd:	mov    dx,WORD PTR [ebx+0x400]
640126d4:	shl    dx,cl
640126d7:	or     WORD PTR [eax+0x16b8],dx
640126de:	add    ecx,edi
640126e0:	pop    edi
640126e1:	mov    DWORD PTR [eax+0x16bc],ecx
640126e7:	movzx  ecx,WORD PTR [ebx+0x402]
640126ee:	pop    esi
640126ef:	pop    ebp
640126f0:	mov    DWORD PTR [eax+0x16b4],ecx
640126f6:	pop    ebx
640126f7:	add    esp,0xc
640126fa:	ret    
640126fb:	int3   
640126fc:	int3   
640126fd:	int3   
640126fe:	int3   
640126ff:	int3   
64012700:	xor    eax,eax
64012702:	lea    ecx,[edx+0x94]
64012708:	cmp    WORD PTR [ecx],0x0
6401270c:	jne    0x64012719
6401270e:	add    eax,0x1
64012711:	add    ecx,0x4
64012714:	cmp    eax,0x9
64012717:	jl     0x64012708
64012719:	cmp    eax,0x9
6401271c:	jne    0x640127bd
64012722:	mov    eax,0xe
64012727:	lea    ecx,[edx+0xd0]
6401272d:	lea    ecx,[ecx+0x0]
64012730:	cmp    WORD PTR [ecx-0x4],0x0
64012735:	jne    0x640127bd
6401273b:	cmp    WORD PTR [ecx],0x0
6401273f:	jne    0x64012776
64012741:	cmp    WORD PTR [ecx+0x4],0x0
64012746:	jne    0x64012787
64012748:	cmp    WORD PTR [ecx+0x8],0x0
6401274d:	jne    0x64012798
6401274f:	cmp    WORD PTR [ecx+0xc],0x0
64012754:	jne    0x640127a9
64012756:	cmp    WORD PTR [ecx+0x10],0x0
6401275b:	jne    0x640127ba
6401275d:	add    eax,0x6
64012760:	add    ecx,0x18
64012763:	cmp    eax,0x20
64012766:	jl     0x64012730
64012768:	mov    edx,DWORD PTR [edx]
6401276a:	xor    ecx,ecx
6401276c:	cmp    eax,0x20
6401276f:	sete   cl
64012772:	mov    DWORD PTR [edx+0x2c],ecx
64012775:	ret    
64012776:	mov    edx,DWORD PTR [edx]
64012778:	xor    ecx,ecx
6401277a:	add    eax,0x1
6401277d:	cmp    eax,0x20
64012780:	sete   cl
64012783:	mov    DWORD PTR [edx+0x2c],ecx
64012786:	ret    
64012787:	mov    edx,DWORD PTR [edx]
64012789:	xor    ecx,ecx
6401278b:	add    eax,0x2
6401278e:	cmp    eax,0x20
64012791:	sete   cl
64012794:	mov    DWORD PTR [edx+0x2c],ecx
64012797:	ret    
64012798:	mov    edx,DWORD PTR [edx]
6401279a:	xor    ecx,ecx
6401279c:	add    eax,0x3
6401279f:	cmp    eax,0x20
640127a2:	sete   cl
640127a5:	mov    DWORD PTR [edx+0x2c],ecx
640127a8:	ret    
640127a9:	mov    edx,DWORD PTR [edx]
640127ab:	xor    ecx,ecx
640127ad:	add    eax,0x4
640127b0:	cmp    eax,0x20
640127b3:	sete   cl
640127b6:	mov    DWORD PTR [edx+0x2c],ecx
640127b9:	ret    
640127ba:	add    eax,0x5
640127bd:	mov    edx,DWORD PTR [edx]
640127bf:	xor    ecx,ecx
640127c1:	cmp    eax,0x20
640127c4:	sete   cl
640127c7:	mov    DWORD PTR [edx+0x2c],ecx
640127ca:	ret    
640127cb:	int3   
640127cc:	int3   
640127cd:	int3   
640127ce:	int3   
640127cf:	int3   
640127d0:	xor    eax,eax
640127d2:	push   esi
640127d3:	mov    esi,ecx
640127d5:	and    esi,0x1
640127d8:	or     eax,esi
640127da:	sub    edx,0x1
640127dd:	shr    ecx,1
640127df:	add    eax,eax
640127e1:	test   edx,edx
640127e3:	jg     0x640127d3
640127e5:	shr    eax,1
640127e7:	pop    esi
640127e8:	ret    
640127e9:	int3   
640127ea:	int3   
640127eb:	int3   
640127ec:	int3   
640127ed:	int3   
640127ee:	int3   
640127ef:	int3   
640127f0:	mov    edx,DWORD PTR [eax+0x16bc]
640127f6:	cmp    edx,0x8
640127f9:	push   ebx
640127fa:	push   esi
640127fb:	jle    0x6401283a
640127fd:	movzx  ebx,BYTE PTR [eax+0x16b8]
64012804:	mov    edx,DWORD PTR [eax+0x14]
64012807:	mov    ecx,DWORD PTR [eax+0x8]
6401280a:	mov    BYTE PTR [ecx+edx*1],bl
6401280d:	movzx  ebx,BYTE PTR [eax+0x16b9]
64012814:	mov    edx,DWORD PTR [eax+0x8]
64012817:	mov    esi,0x1
6401281c:	add    DWORD PTR [eax+0x14],esi
6401281f:	mov    ecx,DWORD PTR [eax+0x14]
64012822:	mov    BYTE PTR [ecx+edx*1],bl
64012825:	add    DWORD PTR [eax+0x14],esi
64012828:	xor    ecx,ecx
6401282a:	pop    esi
6401282b:	mov    WORD PTR [eax+0x16b8],cx
64012832:	mov    DWORD PTR [eax+0x16bc],ecx
64012838:	pop    ebx
64012839:	ret    
6401283a:	xor    ecx,ecx
6401283c:	cmp    edx,ecx
6401283e:	jle    0x64012853
64012840:	mov    esi,DWORD PTR [eax+0x14]
64012843:	mov    edx,DWORD PTR [eax+0x8]
64012846:	mov    bl,BYTE PTR [eax+0x16b8]
6401284c:	mov    BYTE PTR [edx+esi*1],bl
6401284f:	add    DWORD PTR [eax+0x14],0x1
64012853:	pop    esi
64012854:	mov    WORD PTR [eax+0x16b8],cx
6401285b:	mov    DWORD PTR [eax+0x16bc],ecx
64012861:	pop    ebx
64012862:	ret    
64012863:	int3   
64012864:	int3   
64012865:	int3   
64012866:	int3   
64012867:	int3   
64012868:	int3   
64012869:	int3   
6401286a:	int3   
6401286b:	int3   
6401286c:	int3   
6401286d:	int3   
6401286e:	int3   
6401286f:	int3   
64012870:	push   ebx
64012871:	push   esi
64012872:	push   edi
64012873:	mov    ebx,ecx
64012875:	mov    esi,edx
64012877:	call   0x640127f0
6401287c:	cmp    DWORD PTR [esp+0x10],0x0
64012881:	mov    DWORD PTR [eax+0x16b4],0x8
6401288b:	mov    edi,0x1
64012890:	je     0x640128cc
64012892:	mov    ecx,DWORD PTR [eax+0x14]
64012895:	mov    edx,DWORD PTR [eax+0x8]
64012898:	mov    BYTE PTR [ecx+edx*1],bl
6401289b:	add    DWORD PTR [eax+0x14],edi
6401289e:	mov    ecx,DWORD PTR [eax+0x14]
640128a1:	mov    edx,DWORD PTR [eax+0x8]
640128a4:	mov    BYTE PTR [ecx+edx*1],bh
640128a7:	add    DWORD PTR [eax+0x14],edi
640128aa:	mov    edx,DWORD PTR [eax+0x8]
640128ad:	push   ebp
640128ae:	mov    ebp,DWORD PTR [eax+0x14]
640128b1:	mov    cl,bl
640128b3:	not    cl
640128b5:	mov    BYTE PTR [edx+ebp*1],cl
640128b8:	add    DWORD PTR [eax+0x14],edi
640128bb:	mov    ebp,DWORD PTR [eax+0x14]
640128be:	mov    edx,DWORD PTR [eax+0x8]
640128c1:	mov    ecx,ebx
640128c3:	not    ecx
640128c5:	mov    BYTE PTR [edx+ebp*1],ch
640128c8:	add    DWORD PTR [eax+0x14],edi
640128cb:	pop    ebp
640128cc:	test   ebx,ebx
640128ce:	je     0x640128ee
640128d0:	mov    ecx,DWORD PTR [eax+0x14]
640128d3:	mov    edx,DWORD PTR [eax+0x8]
640128d6:	sub    ebx,edi
640128d8:	mov    DWORD PTR [esp+0x10],ebx
640128dc:	mov    bl,BYTE PTR [esi]
640128de:	mov    BYTE PTR [ecx+edx*1],bl
640128e1:	mov    ebx,DWORD PTR [esp+0x10]
640128e5:	add    DWORD PTR [eax+0x14],edi
640128e8:	add    esi,edi
640128ea:	test   ebx,ebx
640128ec:	jne    0x640128d0
640128ee:	pop    edi
640128ef:	pop    esi
640128f0:	pop    ebx
640128f1:	ret    
640128f2:	int3   
640128f3:	int3   
640128f4:	int3   
640128f5:	int3   
640128f6:	int3   
640128f7:	int3   
640128f8:	int3   
640128f9:	int3   
640128fa:	int3   
640128fb:	int3   
640128fc:	int3   
640128fd:	int3   
640128fe:	int3   
640128ff:	int3   
64012900:	sub    esp,0x24
64012903:	mov    eax,ds:0x64037644
64012908:	xor    eax,esp
6401290a:	mov    DWORD PTR [esp+0x20],eax
6401290e:	push   esi
6401290f:	lea    esi,[esp+0x6]
64012913:	xor    ecx,ecx
64012915:	mov    eax,0x1
6401291a:	sub    edx,esi
6401291c:	lea    esp,[esp+0x0]
64012920:	lea    esi,[edx+eax*2]
64012923:	mov    si,WORD PTR [esp+esi*1+0x4]
64012928:	add    si,cx
6401292b:	add    si,si
6401292e:	movzx  ecx,si
64012931:	mov    WORD PTR [esp+eax*2+0x4],cx
64012936:	add    eax,0x1
64012939:	cmp    eax,0xf
6401293c:	jle    0x64012920
6401293e:	xor    esi,esi
64012940:	test   ebx,ebx
64012942:	jl     0x6401296d
64012944:	movzx  edx,WORD PTR [edi+esi*4+0x2]
64012949:	test   edx,edx
6401294b:	je     0x64012966
6401294d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
64012952:	movzx  ecx,ax
64012955:	add    eax,0x1
64012958:	mov    WORD PTR [esp+edx*2+0x4],ax
6401295d:	call   0x640127d0
64012962:	mov    WORD PTR [edi+esi*4],ax
64012966:	add    esi,0x1
64012969:	cmp    esi,ebx
6401296b:	jle    0x64012944
6401296d:	mov    ecx,DWORD PTR [esp+0x24]
64012971:	pop    esi
64012972:	xor    ecx,esp
64012974:	call   0x64013d06
64012979:	add    esp,0x24
6401297c:	ret    
6401297d:	int3   
6401297e:	int3   
6401297f:	int3   
64012980:	sub    esp,0x8
64012983:	mov    eax,DWORD PTR [esp+0xc]
64012987:	push   ebx
64012988:	push   ebp
64012989:	push   edi
6401298a:	mov    edi,DWORD PTR [eax]
6401298c:	mov    eax,DWORD PTR [eax+0x8]
6401298f:	mov    ecx,DWORD PTR [eax+0xc]
64012992:	mov    ebp,DWORD PTR [eax]
64012994:	xor    edx,edx
64012996:	or     ebx,0xffffffff
64012999:	xor    eax,eax
6401299b:	cmp    ecx,edx
6401299d:	mov    DWORD PTR [esp+0x10],ecx
640129a1:	mov    DWORD PTR [esp+0xc],ebx
640129a5:	mov    DWORD PTR [esi+0x1450],edx
640129ab:	mov    DWORD PTR [esi+0x1454],0x23d
640129b5:	jle    0x640129ee
640129b7:	cmp    WORD PTR [edi+eax*4],dx
640129bb:	je     0x640129e0
640129bd:	add    DWORD PTR [esi+0x1450],0x1
640129c4:	mov    ecx,DWORD PTR [esi+0x1450]
640129ca:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
640129d1:	mov    DWORD PTR [esp+0xc],eax
640129d5:	mov    BYTE PTR [eax+esi*1+0x1458],dl
640129dc:	mov    ebx,eax
640129de:	jmp    0x640129e5
640129e0:	mov    WORD PTR [edi+eax*4+0x2],dx
640129e5:	add    eax,0x1
640129e8:	cmp    eax,DWORD PTR [esp+0x10]
640129ec:	jl     0x640129b7
640129ee:	cmp    DWORD PTR [esi+0x1450],0x2
640129f5:	jge    0x64012a49
640129f7:	cmp    ebx,0x2
640129fa:	jge    0x64012a03
640129fc:	add    ebx,0x1
640129ff:	mov    eax,ebx
64012a01:	jmp    0x64012a05
64012a03:	xor    eax,eax
64012a05:	add    DWORD PTR [esi+0x1450],0x1
64012a0c:	mov    ecx,DWORD PTR [esi+0x1450]
64012a12:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64012a19:	mov    WORD PTR [edi+eax*4],0x1
64012a1f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
64012a26:	add    DWORD PTR [esi+0x16a8],0xffffffff
64012a2d:	cmp    ebp,edx
64012a2f:	je     0x64012a3c
64012a31:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
64012a36:	sub    DWORD PTR [esi+0x16ac],eax
64012a3c:	cmp    DWORD PTR [esi+0x1450],0x2
64012a43:	jl     0x640129f7
64012a45:	mov    DWORD PTR [esp+0xc],ebx
64012a49:	mov    ecx,DWORD PTR [esp+0x18]
64012a4d:	mov    DWORD PTR [ecx+0x4],ebx
64012a50:	mov    eax,DWORD PTR [esi+0x1450]
64012a56:	cdq    
64012a57:	sub    eax,edx
64012a59:	mov    ebp,eax
64012a5b:	sar    ebp,1
64012a5d:	cmp    ebp,0x1
64012a60:	jl     0x64012a75
64012a62:	push   ebp
64012a63:	mov    eax,esi
64012a65:	call   0x640117a0
64012a6a:	sub    ebp,0x1
64012a6d:	add    esp,0x4
64012a70:	cmp    ebp,0x1
64012a73:	jge    0x64012a62
64012a75:	mov    ebx,DWORD PTR [esp+0x10]
64012a79:	lea    esp,[esp+0x0]
64012a80:	mov    eax,DWORD PTR [esi+0x1450]
64012a86:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
64012a8d:	mov    ebp,DWORD PTR [esi+0xb60]
64012a93:	add    eax,0xffffffff
64012a96:	mov    DWORD PTR [esi+0x1450],eax
64012a9c:	push   0x1
64012a9e:	mov    eax,esi
64012aa0:	mov    DWORD PTR [esi+0xb60],edx
64012aa6:	call   0x640117a0
64012aab:	mov    eax,DWORD PTR [esi+0xb60]
64012ab1:	or     edx,0xffffffff
64012ab4:	add    DWORD PTR [esi+0x1454],edx
64012aba:	mov    ecx,DWORD PTR [esi+0x1454]
64012ac0:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
64012ac7:	add    DWORD PTR [esi+0x1454],edx
64012acd:	mov    ecx,DWORD PTR [esi+0x1454]
64012ad3:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64012ada:	mov    cx,WORD PTR [edi+eax*4]
64012ade:	add    cx,WORD PTR [edi+ebp*4]
64012ae2:	add    esp,0x4
64012ae5:	mov    WORD PTR [edi+ebx*4],cx
64012ae9:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
64012af0:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
64012af7:	cmp    dl,cl
64012af9:	jb     0x64012b00
64012afb:	movzx  ecx,dl
64012afe:	jmp    0x64012b03
64012b00:	movzx  ecx,cl
64012b03:	add    cl,0x1
64012b06:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
64012b0d:	movzx  ecx,bx
64012b10:	mov    WORD PTR [edi+eax*4+0x2],cx
64012b15:	mov    WORD PTR [edi+ebp*4+0x2],cx
64012b1a:	mov    DWORD PTR [esi+0xb60],ebx
64012b20:	push   0x1
64012b22:	mov    eax,esi
64012b24:	add    ebx,0x1
64012b27:	call   0x640117a0
64012b2c:	add    esp,0x4
64012b2f:	cmp    DWORD PTR [esi+0x1450],0x2
64012b36:	jge    0x64012a80
64012b3c:	add    DWORD PTR [esi+0x1454],0xffffffff
64012b43:	mov    eax,DWORD PTR [esi+0x1454]
64012b49:	mov    edx,DWORD PTR [esi+0xb60]
64012b4f:	mov    ecx,DWORD PTR [esp+0x18]
64012b53:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
64012b5a:	mov    eax,esi
64012b5c:	call   0x64011870
64012b61:	mov    ebx,DWORD PTR [esp+0xc]
64012b65:	lea    edx,[esi+0xb3c]
64012b6b:	call   0x64012900
64012b70:	pop    edi
64012b71:	pop    ebp
64012b72:	pop    ebx
64012b73:	add    esp,0x8
64012b76:	ret    
64012b77:	int3   
64012b78:	int3   
64012b79:	int3   
64012b7a:	int3   
64012b7b:	int3   
64012b7c:	int3   
64012b7d:	int3   
64012b7e:	int3   
64012b7f:	int3   
64012b80:	push   esi
64012b81:	mov    esi,eax
64012b83:	mov    ecx,DWORD PTR [esi+0xb1c]
64012b89:	lea    eax,[esi+0x94]
64012b8f:	push   esi
64012b90:	call   0x64011a90
64012b95:	mov    ecx,DWORD PTR [esi+0xb28]
64012b9b:	lea    eax,[esi+0x988]
64012ba1:	push   esi
64012ba2:	call   0x64011a90
64012ba7:	lea    eax,[esi+0xb30]
64012bad:	push   eax
64012bae:	call   0x64012980
64012bb3:	add    esp,0xc
64012bb6:	mov    eax,0x12
64012bbb:	jmp    0x64012bc0
64012bbd:	lea    ecx,[ecx+0x0]
64012bc0:	movzx  ecx,BYTE PTR [eax+0x6402717c]
64012bc7:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64012bd0:	jne    0x64012c3d
64012bd2:	movzx  edx,BYTE PTR [eax+0x6402717b]
64012bd9:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64012be2:	jne    0x64012c1c
64012be4:	movzx  ecx,BYTE PTR [eax+0x6402717a]
64012beb:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64012bf4:	jne    0x64012c2b
64012bf6:	movzx  edx,BYTE PTR [eax+0x64027179]
64012bfd:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64012c06:	jne    0x64012c3a
64012c08:	sub    eax,0x4
64012c0b:	cmp    eax,0x3
64012c0e:	jge    0x64012bc0
64012c10:	lea    ecx,[eax+eax*2+0x11]
64012c14:	add    DWORD PTR [esi+0x16a8],ecx
64012c1a:	pop    esi
64012c1b:	ret    
64012c1c:	sub    eax,0x1
64012c1f:	lea    ecx,[eax+eax*2+0x11]
64012c23:	add    DWORD PTR [esi+0x16a8],ecx
64012c29:	pop    esi
64012c2a:	ret    
64012c2b:	sub    eax,0x2
64012c2e:	lea    ecx,[eax+eax*2+0x11]
64012c32:	add    DWORD PTR [esi+0x16a8],ecx
64012c38:	pop    esi
64012c39:	ret    
64012c3a:	sub    eax,0x3
64012c3d:	lea    ecx,[eax+eax*2+0x11]
64012c41:	add    DWORD PTR [esi+0x16a8],ecx
64012c47:	pop    esi
64012c48:	ret    
64012c49:	int3   
64012c4a:	int3   
64012c4b:	int3   
64012c4c:	int3   
64012c4d:	int3   
64012c4e:	int3   
64012c4f:	int3   
64012c50:	mov    eax,DWORD PTR [esp+0x4]
64012c54:	mov    ecx,DWORD PTR [eax+0x16bc]
64012c5a:	cmp    ecx,0xd
64012c5d:	jle    0x64012cc8
64012c5f:	push   ebx
64012c60:	push   esi
64012c61:	mov    esi,DWORD PTR [esp+0x18]
64012c65:	mov    edx,esi
64012c67:	shl    edx,cl
64012c69:	mov    ecx,DWORD PTR [eax+0x8]
64012c6c:	or     WORD PTR [eax+0x16b8],dx
64012c73:	movzx  ebx,BYTE PTR [eax+0x16b8]
64012c7a:	mov    edx,DWORD PTR [eax+0x14]
64012c7d:	mov    BYTE PTR [ecx+edx*1],bl
64012c80:	movzx  ebx,BYTE PTR [eax+0x16b9]
64012c87:	add    DWORD PTR [eax+0x14],0x1
64012c8b:	mov    ecx,DWORD PTR [eax+0x14]
64012c8e:	mov    edx,DWORD PTR [eax+0x8]
64012c91:	mov    BYTE PTR [ecx+edx*1],bl
64012c94:	mov    edx,DWORD PTR [eax+0x16bc]
64012c9a:	add    DWORD PTR [eax+0x14],0x1
64012c9e:	mov    cl,0x10
64012ca0:	sub    cl,dl
64012ca2:	shr    si,cl
64012ca5:	mov    ecx,DWORD PTR [esp+0x14]
64012ca9:	add    edx,0xfffffff3
64012cac:	mov    DWORD PTR [eax+0x16bc],edx
64012cb2:	mov    edx,DWORD PTR [esp+0x10]
64012cb6:	mov    WORD PTR [eax+0x16b8],si
64012cbd:	pop    esi
64012cbe:	pop    ebx
64012cbf:	push   0x1
64012cc1:	call   0x64012870
64012cc6:	pop    ecx
64012cc7:	ret    
64012cc8:	mov    edx,DWORD PTR [esp+0x10]
64012ccc:	shl    edx,cl
64012cce:	add    ecx,0x3
64012cd1:	mov    DWORD PTR [eax+0x16bc],ecx
64012cd7:	mov    ecx,DWORD PTR [esp+0xc]
64012cdb:	or     WORD PTR [eax+0x16b8],dx
64012ce2:	mov    edx,DWORD PTR [esp+0x8]
64012ce6:	push   0x1
64012ce8:	call   0x64012870
64012ced:	pop    ecx
64012cee:	ret    
64012cef:	int3   
64012cf0:	push   ecx
64012cf1:	push   ebx
64012cf2:	mov    ebx,DWORD PTR [esp+0x14]
64012cf6:	push   esi
64012cf7:	mov    esi,DWORD PTR [esp+0x10]
64012cfb:	cmp    DWORD PTR [esi+0x84],0x0
64012d02:	push   edi
64012d03:	mov    DWORD PTR [esp+0xc],0x0
64012d0b:	jle    0x64012d64
64012d0d:	test   ebx,ebx
64012d0f:	jbe    0x64012d20
64012d11:	mov    eax,DWORD PTR [esi]
64012d13:	cmp    DWORD PTR [eax+0x2c],0x2
64012d17:	jne    0x64012d20
64012d19:	mov    edx,esi
64012d1b:	call   0x64012700
64012d20:	lea    ecx,[esi+0xb18]
64012d26:	push   ecx
64012d27:	call   0x64012980
64012d2c:	lea    edx,[esi+0xb24]
64012d32:	push   edx
64012d33:	call   0x64012980
64012d38:	add    esp,0x8
64012d3b:	mov    eax,esi
64012d3d:	call   0x64012b80
64012d42:	mov    edx,DWORD PTR [esi+0x16a8]
64012d48:	mov    ecx,DWORD PTR [esi+0x16ac]
64012d4e:	add    edx,0xa
64012d51:	add    ecx,0xa
64012d54:	shr    edx,0x3
64012d57:	shr    ecx,0x3
64012d5a:	cmp    ecx,edx
64012d5c:	mov    DWORD PTR [esp+0xc],eax
64012d60:	ja     0x64012d69
64012d62:	jmp    0x64012d67
64012d64:	lea    ecx,[ebx+0x5]
64012d67:	mov    edx,ecx
64012d69:	lea    eax,[ebx+0x4]
64012d6c:	cmp    eax,edx
64012d6e:	ja     0x64012d8d
64012d70:	mov    eax,DWORD PTR [esp+0x18]
64012d74:	test   eax,eax
64012d76:	je     0x64012d8d
64012d78:	mov    edi,DWORD PTR [esp+0x20]
64012d7c:	push   edi
64012d7d:	push   ebx
64012d7e:	push   eax
64012d7f:	push   esi
64012d80:	call   0x64012c50
64012d85:	add    esp,0x10
64012d88:	jmp    0x64012ee2
64012d8d:	cmp    DWORD PTR [esi+0x88],0x4
64012d94:	je     0x64012e58
64012d9a:	cmp    ecx,edx
64012d9c:	je     0x64012e58
64012da2:	mov    ecx,DWORD PTR [esi+0x16bc]
64012da8:	cmp    ecx,0xd
64012dab:	mov    edi,DWORD PTR [esp+0x20]
64012daf:	lea    edx,[edi+0x4]
64012db2:	jle    0x64012e06
64012db4:	mov    eax,edx
64012db6:	shl    eax,cl
64012db8:	mov    ecx,DWORD PTR [esi+0x8]
64012dbb:	or     WORD PTR [esi+0x16b8],ax
64012dc2:	movzx  ebx,BYTE PTR [esi+0x16b8]
64012dc9:	mov    eax,DWORD PTR [esi+0x14]
64012dcc:	mov    BYTE PTR [ecx+eax*1],bl
64012dcf:	add    DWORD PTR [esi+0x14],0x1
64012dd3:	movzx  ebx,BYTE PTR [esi+0x16b9]
64012dda:	mov    ecx,DWORD PTR [esi+0x14]
64012ddd:	mov    eax,DWORD PTR [esi+0x8]
64012de0:	mov    BYTE PTR [ecx+eax*1],bl
64012de3:	mov    ebx,DWORD PTR [esi+0x16bc]
64012de9:	add    DWORD PTR [esi+0x14],0x1
64012ded:	mov    cl,0x10
64012def:	sub    cl,bl
64012df1:	shr    dx,cl
64012df4:	add    ebx,0xfffffff3
64012df7:	mov    DWORD PTR [esi+0x16bc],ebx
64012dfd:	mov    WORD PTR [esi+0x16b8],dx
64012e04:	jmp    0x64012e18
64012e06:	shl    edx,cl
64012e08:	or     WORD PTR [esi+0x16b8],dx
64012e0f:	add    ecx,0x3
64012e12:	mov    DWORD PTR [esi+0x16bc],ecx
64012e18:	mov    eax,DWORD PTR [esp+0xc]
64012e1c:	mov    ecx,DWORD PTR [esi+0xb28]
64012e22:	mov    edx,DWORD PTR [esi+0xb1c]
64012e28:	add    eax,0x1
64012e2b:	push   eax
64012e2c:	add    ecx,0x1
64012e2f:	push   ecx
64012e30:	add    edx,0x1
64012e33:	push   edx
64012e34:	mov    eax,esi
64012e36:	call   0x64012090
64012e3b:	lea    eax,[esi+0x988]
64012e41:	push   eax
64012e42:	lea    ecx,[esi+0x94]
64012e48:	push   ecx
64012e49:	mov    eax,esi
64012e4b:	call   0x640122f0
64012e50:	add    esp,0x14
64012e53:	jmp    0x64012ee2
64012e58:	mov    ecx,DWORD PTR [esi+0x16bc]
64012e5e:	cmp    ecx,0xd
64012e61:	mov    edi,DWORD PTR [esp+0x20]
64012e65:	lea    eax,[edi+0x2]
64012e68:	jle    0x64012ebc
64012e6a:	mov    edx,eax
64012e6c:	shl    edx,cl
64012e6e:	mov    ecx,DWORD PTR [esi+0x8]
64012e71:	or     WORD PTR [esi+0x16b8],dx
64012e78:	movzx  ebx,BYTE PTR [esi+0x16b8]
64012e7f:	mov    edx,DWORD PTR [esi+0x14]
64012e82:	mov    BYTE PTR [ecx+edx*1],bl
64012e85:	add    DWORD PTR [esi+0x14],0x1
64012e89:	movzx  ebx,BYTE PTR [esi+0x16b9]
64012e90:	mov    ecx,DWORD PTR [esi+0x14]
64012e93:	mov    edx,DWORD PTR [esi+0x8]
64012e96:	mov    BYTE PTR [ecx+edx*1],bl
64012e99:	mov    edx,DWORD PTR [esi+0x16bc]
64012e9f:	add    DWORD PTR [esi+0x14],0x1
64012ea3:	mov    cl,0x10
64012ea5:	sub    cl,dl
64012ea7:	shr    ax,cl
64012eaa:	add    edx,0xfffffff3
64012ead:	mov    DWORD PTR [esi+0x16bc],edx
64012eb3:	mov    WORD PTR [esi+0x16b8],ax
64012eba:	jmp    0x64012ece
64012ebc:	shl    eax,cl
64012ebe:	or     WORD PTR [esi+0x16b8],ax
64012ec5:	add    ecx,0x3
64012ec8:	mov    DWORD PTR [esi+0x16bc],ecx
64012ece:	push   0x640276d8
64012ed3:	push   0x64027258
64012ed8:	mov    eax,esi
64012eda:	call   0x640122f0
64012edf:	add    esp,0x8
64012ee2:	mov    edx,esi
64012ee4:	call   0x64011730
64012ee9:	test   edi,edi
64012eeb:	pop    edi
64012eec:	je     0x64012efa
64012eee:	mov    eax,esi
64012ef0:	pop    esi
64012ef1:	pop    ebx
64012ef2:	add    esp,0x4
64012ef5:	jmp    0x640127f0
64012efa:	pop    esi
64012efb:	pop    ebx
64012efc:	pop    ecx
64012efd:	ret    
64012efe:	jmp    DWORD PTR ds:0x64024078
64012f04:	jmp    DWORD PTR ds:0x6402407c
64012f0a:	jmp    DWORD PTR ds:0x64024084
64012f10:	jmp    DWORD PTR ds:0x640240b4
64012f16:	jmp    DWORD PTR ds:0x640240ec
64012f1c:	push   0x44
64012f1e:	mov    eax,0x64022ef5
64012f23:	call   0x640155db
64012f28:	push   0x64027b40
64012f2d:	lea    ecx,[ebp-0x28]
64012f30:	call   0x64002950
64012f35:	and    DWORD PTR [ebp-0x4],0x0
64012f39:	lea    eax,[ebp-0x28]
64012f3c:	push   eax
64012f3d:	lea    ecx,[ebp-0x50]
64012f40:	call   0x64001310
64012f45:	push   0x6402bd44
64012f4a:	lea    eax,[ebp-0x50]
64012f4d:	push   eax
64012f4e:	mov    DWORD PTR [ebp-0x50],0x640242e0
64012f55:	call   0x64013872
64012f5a:	int3   
64012f5b:	push   0x44
64012f5d:	mov    eax,0x64022f18
64012f62:	call   0x640155db
64012f67:	push   0x64027b50
64012f6c:	lea    ecx,[ebp-0x28]
64012f6f:	call   0x64002950
64012f74:	and    DWORD PTR [ebp-0x4],0x0
64012f78:	lea    eax,[ebp-0x28]
64012f7b:	push   eax
64012f7c:	lea    ecx,[ebp-0x50]
64012f7f:	call   0x64001310
64012f84:	push   0x6402bd08
64012f89:	lea    eax,[ebp-0x50]
64012f8c:	push   eax
64012f8d:	mov    DWORD PTR [ebp-0x50],0x640242ec
64012f94:	call   0x64013872
64012f99:	int3   
64012f9a:	jmp    0x640138d5
64012f9f:	push   edi
64012fa0:	push   0x640375b4
64012fa5:	mov    edi,ecx
64012fa7:	call   DWORD PTR ds:0x6402402c
64012fad:	test   eax,eax
64012faf:	jne    0x64012fca
64012fb1:	push   esi
64012fb2:	mov    esi,0x64038d40
64012fb7:	push   esi
64012fb8:	call   0x6401304f
64012fbd:	add    esi,0x18
64012fc0:	cmp    esi,0x64038da0
64012fc6:	pop    ecx
64012fc7:	jl     0x64012fb7
64012fc9:	pop    esi
64012fca:	mov    eax,edi
64012fcc:	pop    edi
64012fcd:	ret    
64012fce:	push   0x640375b4
64012fd3:	call   DWORD PTR ds:0x64024074
64012fd9:	test   eax,eax
64012fdb:	jge    0x64012ff6
64012fdd:	push   esi
64012fde:	mov    esi,0x64038d40
64012fe3:	push   esi
64012fe4:	call   0x6401305a
64012fe9:	add    esi,0x18
64012fec:	cmp    esi,0x64038da0
64012ff2:	pop    ecx
64012ff3:	jl     0x64012fe3
64012ff5:	pop    esi
64012ff6:	ret    
64012ff7:	mov    eax,DWORD PTR [esp+0x4]
64012ffb:	and    eax,0x3
64012ffe:	push   esi
64012fff:	mov    esi,ecx
64013001:	mov    DWORD PTR [esi],eax
64013003:	imul   eax,eax,0x18
64013006:	add    eax,0x64038d40
6401300b:	push   eax
6401300c:	call   0x64013065
64013011:	pop    ecx
64013012:	mov    eax,esi
64013014:	pop    esi
64013015:	ret    0x4
64013018:	mov    eax,DWORD PTR [ecx]
6401301a:	imul   eax,eax,0x18
6401301d:	add    eax,0x64038d40
64013022:	push   eax
64013023:	call   0x64013070
64013028:	pop    ecx
64013029:	ret    
6401302a:	jmp    0x64013044
6401302c:	mov    ecx,DWORD PTR [eax*4+0x64038dc4]
64013033:	inc    eax
64013034:	test   ecx,ecx
64013036:	mov    ds:0x640375bc,eax
6401303b:	je     0x64013049
6401303d:	call   DWORD PTR [eax*4+0x64038dc0]
64013044:	mov    eax,ds:0x640375bc
64013049:	cmp    eax,0xa
6401304c:	jb     0x6401302c
6401304e:	ret    
6401304f:	push   DWORD PTR [esp+0x4]
64013053:	call   DWORD PTR ds:0x64024154
64013059:	ret    
6401305a:	push   DWORD PTR [esp+0x4]
6401305e:	call   DWORD PTR ds:0x64024158
64013064:	ret    
64013065:	push   DWORD PTR [esp+0x4]
64013069:	call   DWORD PTR ds:0x6402415c
6401306f:	ret    
64013070:	push   DWORD PTR [esp+0x4]
64013074:	call   DWORD PTR ds:0x64024160
6401307a:	ret    
6401307b:	push   ebp
6401307c:	mov    ebp,esp
6401307e:	sub    esp,0xc
64013081:	mov    eax,ds:0x64037644
64013086:	xor    eax,ebp
64013088:	mov    DWORD PTR [ebp-0x4],eax
6401308b:	push   esi
6401308c:	xor    esi,esi
6401308e:	call   DWORD PTR ds:0x6402416c
64013094:	push   0x7
64013096:	lea    ecx,[ebp-0xc]
64013099:	push   ecx
6401309a:	push   0x1004
6401309f:	push   eax
640130a0:	call   DWORD PTR ds:0x64024168
640130a6:	test   eax,eax
640130a8:	je     0x640130c9
640130aa:	mov    cl,BYTE PTR [ebp-0xc]
640130ad:	test   cl,cl
640130af:	lea    eax,[ebp-0xc]
640130b2:	je     0x640130c9
640130b4:	imul   esi,esi,0xa
640130b7:	movsx  ecx,cl
640130ba:	inc    eax
640130bb:	lea    esi,[esi+ecx*1-0x30]
640130bf:	mov    cl,BYTE PTR [eax]
640130c1:	test   cl,cl
640130c3:	jne    0x640130b4
640130c5:	test   esi,esi
640130c7:	jne    0x640130d1
640130c9:	call   DWORD PTR ds:0x64024164
640130cf:	mov    esi,eax
640130d1:	mov    ecx,DWORD PTR [ebp-0x4]
640130d4:	mov    eax,esi
640130d6:	xor    ecx,ebp
640130d8:	pop    esi
640130d9:	call   0x64013d06
640130de:	leave  
640130df:	ret    
640130e0:	push   0x3
640130e2:	pop    eax
640130e3:	ret    
640130e4:	push   ebp
640130e5:	mov    ebp,esp
640130e7:	sub    esp,0x98
640130ed:	mov    eax,ds:0x64037644
640130f2:	xor    eax,ebp
640130f4:	mov    DWORD PTR [ebp-0x4],eax
640130f7:	lea    eax,[ebp-0x98]
640130fd:	push   eax
640130fe:	mov    DWORD PTR [ebp-0x98],0x94
64013108:	call   DWORD PTR ds:0x64024170
6401310e:	cmp    DWORD PTR [ebp-0x88],0x2
64013115:	jne    0x64013125
64013117:	cmp    DWORD PTR [ebp-0x94],0x5
6401311e:	mov    eax,0x640130e0
64013123:	jae    0x6401312a
64013125:	mov    eax,0x6401307b
6401312a:	push   eax
6401312b:	push   0x6403761c
64013130:	call   DWORD PTR ds:0x64024150
64013136:	call   DWORD PTR ds:0x6403761c
6401313c:	mov    ecx,DWORD PTR [ebp-0x4]
6401313f:	xor    ecx,ebp
64013141:	call   0x64013d06
64013146:	leave  
64013147:	ret    
64013148:	push   esi
64013149:	mov    esi,ecx
6401314b:	mov    eax,DWORD PTR [esi]
6401314d:	test   eax,eax
6401314f:	je     0x6401315b
64013151:	push   eax
64013152:	call   0x6401475a
64013157:	and    DWORD PTR [esi],0x0
6401315a:	pop    ecx
6401315b:	and    DWORD PTR [esi+0x4],0x0
6401315f:	and    DWORD PTR [esi+0x8],0x0
64013163:	pop    esi
64013164:	ret    
64013165:	push   esi
64013166:	push   0x18
64013168:	mov    esi,ecx
6401316a:	push   0x0
6401316c:	push   esi
6401316d:	call   0x64015160
64013172:	add    esp,0xc
64013175:	mov    eax,esi
64013177:	pop    esi
64013178:	ret    
64013179:	push   0xc
6401317b:	push   0x6402b6b8
64013180:	call   0x64015f14
64013185:	and    DWORD PTR [ebp-0x4],0x0
64013189:	push   ecx
6401318a:	call   DWORD PTR ds:0x64024154
64013190:	and    DWORD PTR [ebp-0x1c],0x0
64013194:	jmp    0x640131b4
64013196:	mov    eax,DWORD PTR [ebp-0x14]
64013199:	mov    eax,DWORD PTR [eax]
6401319b:	mov    eax,DWORD PTR [eax]
6401319d:	xor    ecx,ecx
6401319f:	cmp    eax,0xc0000017
640131a4:	sete   cl
640131a7:	mov    eax,ecx
640131a9:	ret    
640131aa:	mov    esp,DWORD PTR [ebp-0x18]
640131ad:	mov    DWORD PTR [ebp-0x1c],0x8007000e
640131b4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640131bb:	mov    eax,DWORD PTR [ebp-0x1c]
640131be:	call   0x64015f59
640131c3:	ret    
640131c4:	mov    eax,DWORD PTR [esp+0x4]
640131c8:	test   eax,eax
640131ca:	jne    0x640131d3
640131cc:	mov    eax,0x80070057
640131d1:	jmp    0x640131e4
640131d3:	cmp    DWORD PTR [eax],0x2c
640131d6:	jne    0x640131cc
640131d8:	and    DWORD PTR [eax+0x1c],0x0
640131dc:	lea    ecx,[eax+0x4]
640131df:	call   0x64013179
640131e4:	ret    0x4
640131e7:	mov    eax,DWORD PTR [esp+0x4]
640131eb:	test   eax,eax
640131ed:	jl     0x640131fc
640131ef:	cmp    eax,DWORD PTR [ecx+0x4]
640131f2:	jge    0x640131fc
640131f4:	mov    ecx,DWORD PTR [ecx]
640131f6:	lea    eax,[ecx+eax*2]
640131f9:	ret    0x4
640131fc:	push   0x0
640131fe:	push   0x0
64013200:	push   0x1
64013202:	push   0xc000008c
64013207:	call   DWORD PTR ds:0x64024174
6401320d:	int3   
6401320e:	mov    eax,DWORD PTR [esp+0x4]
64013212:	test   eax,eax
64013214:	jl     0x64013223
64013216:	cmp    eax,DWORD PTR [ecx+0x4]
64013219:	jge    0x64013223
6401321b:	mov    ecx,DWORD PTR [ecx]
6401321d:	lea    eax,[ecx+eax*4]
64013220:	ret    0x4
64013223:	push   0x0
64013225:	push   0x0
64013227:	push   0x1
64013229:	push   0xc000008c
6401322e:	call   DWORD PTR ds:0x64024174
64013234:	int3   
64013235:	push   esi
64013236:	mov    esi,ecx
64013238:	lea    ecx,[esi+0x4]
6401323b:	call   0x64013165
64013240:	xor    eax,eax
64013242:	mov    DWORD PTR [esi+0x20],eax
64013245:	mov    DWORD PTR [esi+0x24],eax
64013248:	mov    DWORD PTR [esi+0x28],eax
6401324b:	mov    eax,esi
6401324d:	pop    esi
6401324e:	ret    
6401324f:	push   esi
64013250:	mov    esi,DWORD PTR [esp+0x8]
64013254:	test   esi,esi
64013256:	jne    0x6401325f
64013258:	mov    eax,0x80070057
6401325d:	jmp    0x640132ab
6401325f:	mov    eax,DWORD PTR [esi]
64013261:	test   eax,eax
64013263:	je     0x640132a9
64013265:	cmp    eax,0x2c
64013268:	jne    0x64013258
6401326a:	push   edi
6401326b:	xor    edi,edi
6401326d:	cmp    DWORD PTR [esi+0x24],edi
64013270:	jle    0x64013293
64013272:	push   ebx
64013273:	lea    ebx,[esi+0x20]
64013276:	push   edi
64013277:	mov    ecx,ebx
64013279:	call   0x640131e7
6401327e:	movzx  eax,WORD PTR [eax]
64013281:	push   DWORD PTR [esp+0x14]
64013285:	push   eax
64013286:	call   DWORD PTR ds:0x640241e0
6401328c:	inc    edi
6401328d:	cmp    edi,DWORD PTR [esi+0x24]
64013290:	jl     0x64013276
64013292:	pop    ebx
64013293:	lea    ecx,[esi+0x20]
64013296:	call   0x64013148
6401329b:	lea    eax,[esi+0x4]
6401329e:	push   eax
6401329f:	call   DWORD PTR ds:0x64024158
640132a5:	and    DWORD PTR [esi],0x0
640132a8:	pop    edi
640132a9:	xor    eax,eax
640132ab:	pop    esi
640132ac:	ret    0x8
640132af:	push   esi
640132b0:	mov    esi,ecx
640132b2:	cmp    BYTE PTR [esi+0x4],0x0
640132b6:	je     0x640132c4
640132b8:	push   DWORD PTR [esi]
640132ba:	call   DWORD PTR ds:0x64024160
640132c0:	mov    BYTE PTR [esi+0x4],0x0
640132c4:	pop    esi
640132c5:	ret    
640132c6:	push   esi
640132c7:	mov    esi,ecx
640132c9:	lea    ecx,[esi+0x18]
640132cc:	call   0x64013165
640132d1:	xor    eax,eax
640132d3:	mov    DWORD PTR [esi+0x30],eax
640132d6:	mov    DWORD PTR [esi+0x34],eax
640132d9:	mov    DWORD PTR [esi+0x38],eax
640132dc:	mov    eax,esi
640132de:	pop    esi
640132df:	ret    
640132e0:	push   esi
640132e1:	mov    esi,ecx
640132e3:	lea    eax,[esi+0x18]
640132e6:	push   eax
640132e7:	call   DWORD PTR ds:0x64024158
640132ed:	lea    ecx,[esi+0x30]
640132f0:	pop    esi
640132f1:	jmp    0x64013148
640132f6:	push   ebp
640132f7:	mov    ebp,esp
640132f9:	push   ecx
640132fa:	push   ecx
640132fb:	push   esi
640132fc:	mov    esi,ecx
640132fe:	lea    eax,[esi+0x18]
64013301:	push   eax
64013302:	mov    DWORD PTR [ebp-0x8],eax
64013305:	call   DWORD PTR ds:0x6402415c
6401330b:	mov    eax,DWORD PTR [esi+0x34]
6401330e:	mov    ecx,DWORD PTR [ebp+0x8]
64013311:	cmp    ecx,eax
64013313:	mov    BYTE PTR [ebp-0x4],0x1
64013317:	jg     0x6401333d
64013319:	test   ecx,ecx
6401331b:	jl     0x6401333d
6401331d:	cmp    ecx,eax
6401331f:	jne    0x64013330
64013321:	mov    esi,DWORD PTR [esi+0x8]
64013324:	lea    ecx,[ebp-0x8]
64013327:	call   0x640132af
6401332c:	mov    eax,esi
6401332e:	jmp    0x64013347
64013330:	push   ecx
64013331:	lea    ecx,[esi+0x30]
64013334:	call   0x6401320e
64013339:	mov    esi,DWORD PTR [eax]
6401333b:	jmp    0x64013324
6401333d:	lea    ecx,[ebp-0x8]
64013340:	call   0x640132af
64013345:	xor    eax,eax
64013347:	pop    esi
64013348:	leave  
64013349:	ret    0x4
6401334c:	push   esi
6401334d:	mov    esi,ecx
6401334f:	call   0x64013235
64013354:	push   esi
64013355:	mov    DWORD PTR [esi],0x2c
6401335b:	call   0x640131c4
64013360:	test   eax,eax
64013362:	jge    0x6401336e
64013364:	mov    BYTE PTR ds:0x64039990,0x1
6401336b:	and    DWORD PTR [esi],0x0
6401336e:	mov    eax,esi
64013370:	pop    esi
64013371:	ret    
64013372:	push   ebp
64013373:	lea    ebp,[esp-0x78]
64013377:	sub    esp,0x98
6401337d:	mov    eax,ds:0x64037644
64013382:	xor    eax,ebp
64013384:	mov    DWORD PTR [ebp+0x74],eax
64013387:	push   esi
64013388:	mov    esi,ecx
6401338a:	call   0x640132c6
6401338f:	mov    eax,0x64000000
64013394:	push   0x94
64013399:	mov    DWORD PTR [esi+0x8],eax
6401339c:	mov    DWORD PTR [esi+0x4],eax
6401339f:	lea    eax,[ebp-0x20]
640133a2:	push   0x0
640133a4:	push   eax
640133a5:	mov    DWORD PTR [esi],0x3c
640133ab:	mov    BYTE PTR [esi+0xc],0x0
640133af:	call   0x64015160
640133b4:	add    esp,0xc
640133b7:	lea    eax,[ebp-0x20]
640133ba:	push   eax
640133bb:	mov    DWORD PTR [ebp-0x20],0x94
640133c2:	call   DWORD PTR ds:0x64024170
640133c8:	cmp    DWORD PTR [ebp-0x10],0x2
640133cc:	jne    0x640133d6
640133ce:	cmp    DWORD PTR [ebp-0x1c],0x5
640133d2:	jb     0x640133ee
640133d4:	jmp    0x640133ea
640133d6:	cmp    DWORD PTR [ebp-0x10],0x1
640133da:	jne    0x640133ee
640133dc:	cmp    DWORD PTR [ebp-0x1c],0x4
640133e0:	ja     0x640133ea
640133e2:	jne    0x640133ee
640133e4:	cmp    DWORD PTR [ebp-0x18],0x0
640133e8:	jbe    0x640133ee
640133ea:	mov    BYTE PTR [esi+0xc],0x1
640133ee:	lea    ecx,[esi+0x18]
640133f1:	mov    DWORD PTR [esi+0x10],0x800
640133f8:	mov    DWORD PTR [esi+0x14],0x64027b80
640133ff:	call   0x64013179
64013404:	test   eax,eax
64013406:	jge    0x6401340f
64013408:	mov    BYTE PTR ds:0x64039990,0x1
6401340f:	mov    ecx,DWORD PTR [ebp+0x74]
64013412:	mov    eax,esi
64013414:	xor    ecx,ebp
64013416:	pop    esi
64013417:	call   0x64013d06
6401341c:	add    ebp,0x78
6401341f:	leave  
64013420:	ret    
64013421:	push   esi
64013422:	push   DWORD PTR ds:0x64038df4
64013428:	mov    esi,ecx
6401342a:	push   esi
6401342b:	call   0x6401324f
64013430:	lea    ecx,[esi+0x20]
64013433:	pop    esi
64013434:	jmp    0x64013148
64013439:	cmp    BYTE PTR [ecx+0x8],0x0
6401343d:	mov    DWORD PTR [ecx],0x64027b90
64013443:	je     0x64013453
64013445:	mov    ecx,DWORD PTR [ecx+0x4]
64013448:	test   ecx,ecx
6401344a:	je     0x64013453
6401344c:	push   ecx
6401344d:	call   DWORD PTR ds:0x64024178
64013453:	ret    
64013454:	push   DWORD PTR [esp+0x4]
64013458:	push   0x0
6401345a:	push   DWORD PTR [ecx+0x4]
6401345d:	call   DWORD PTR ds:0x6402417c
64013463:	ret    0x4
64013466:	cmp    DWORD PTR [esp+0x4],0x0
6401346b:	je     0x6401347c
6401346d:	push   DWORD PTR [esp+0x4]
64013471:	push   0x0
64013473:	push   DWORD PTR [ecx+0x4]
64013476:	call   DWORD PTR ds:0x64024180
6401347c:	ret    0x4
6401347f:	push   ebp
64013480:	mov    ebp,esp
64013482:	xor    eax,eax
64013484:	cmp    DWORD PTR [ebp+0x8],eax
64013487:	jne    0x64013492
64013489:	push   DWORD PTR [ebp+0xc]
6401348c:	mov    eax,DWORD PTR [ecx]
6401348e:	call   DWORD PTR [eax]
64013490:	jmp    0x640134b3
64013492:	cmp    DWORD PTR [ebp+0xc],eax
64013495:	jne    0x640134a3
64013497:	push   DWORD PTR [ebp+0x8]
6401349a:	mov    eax,DWORD PTR [ecx]
6401349c:	call   DWORD PTR [eax+0x4]
6401349f:	xor    eax,eax
640134a1:	jmp    0x640134b3
640134a3:	push   DWORD PTR [ebp+0xc]
640134a6:	push   DWORD PTR [ebp+0x8]
640134a9:	push   eax
640134aa:	push   DWORD PTR [ecx+0x4]
640134ad:	call   DWORD PTR ds:0x64024184
640134b3:	pop    ebp
640134b4:	ret    0x8
640134b7:	push   DWORD PTR [esp+0x4]
640134bb:	push   0x0
640134bd:	push   DWORD PTR [ecx+0x4]
640134c0:	call   DWORD PTR ds:0x64024188
640134c6:	ret    0x4
640134c9:	push   esi
640134ca:	mov    esi,ecx
640134cc:	call   0x64013439
640134d1:	test   BYTE PTR [esp+0x8],0x1
640134d6:	je     0x640134df
640134d8:	push   esi
640134d9:	call   0x64013644
640134de:	pop    ecx
640134df:	mov    eax,esi
640134e1:	pop    esi
640134e2:	ret    0x4
640134e5:	mov    eax,ecx
640134e7:	mov    ecx,DWORD PTR [esp+0x4]
640134eb:	mov    DWORD PTR [eax+0x4],ecx
640134ee:	mov    DWORD PTR [eax],0x64027ba4
640134f4:	xor    ecx,ecx
640134f6:	mov    DWORD PTR [eax+0x14],0x2
640134fd:	mov    DWORD PTR [eax+0xc],ecx
64013500:	mov    DWORD PTR [eax+0x10],ecx
64013503:	mov    WORD PTR [eax+0x18],cx
64013507:	mov    WORD PTR [eax+0x1a],cx
6401350b:	mov    DWORD PTR [eax+0x8],eax
6401350e:	ret    0x4
64013511:	mov    eax,DWORD PTR [esp+0x8]
64013515:	mul    DWORD PTR [esp+0xc]
64013519:	test   edx,edx
6401351b:	ja     0x64013522
6401351d:	cmp    eax,0xffffffff
64013520:	jbe    0x64013528
64013522:	mov    eax,0x80070057
64013527:	ret    
64013528:	mov    ecx,DWORD PTR [esp+0x4]
6401352c:	mov    DWORD PTR [ecx],eax
6401352e:	xor    eax,eax
64013530:	ret    
64013531:	mov    ecx,DWORD PTR [ecx+0x4]
64013534:	mov    eax,DWORD PTR [ecx]
64013536:	jmp    DWORD PTR [eax+0x4]
64013539:	xor    edx,edx
6401353b:	lea    eax,[ecx+0x14]
6401353e:	inc    edx
6401353f:	lock xadd DWORD PTR [eax],edx
64013543:	lea    eax,[ecx+0x8]
64013546:	ret    
64013547:	mov    eax,ecx
64013549:	ret    
6401354a:	test   BYTE PTR [esp+0x4],0x1
6401354f:	push   esi
64013550:	mov    esi,ecx
64013552:	mov    DWORD PTR [esi],0x64027ba4
64013558:	je     0x64013561
6401355a:	push   esi
6401355b:	call   0x64013644
64013560:	pop    ecx
64013561:	mov    eax,esi
64013563:	pop    esi
64013564:	ret    0x4
64013567:	mov    eax,DWORD PTR [esp+0x8]
6401356b:	mov    ecx,DWORD PTR [esp+0xc]
6401356f:	or     edx,0xffffffff
64013572:	sub    edx,eax
64013574:	cmp    edx,ecx
64013576:	jae    0x6401357e
64013578:	mov    eax,0x80070057
6401357d:	ret    
6401357e:	add    eax,ecx
64013580:	mov    ecx,DWORD PTR [esp+0x4]
64013584:	mov    DWORD PTR [ecx],eax
64013586:	xor    eax,eax
64013588:	ret    
64013589:	push   ebp
6401358a:	mov    ebp,esp
6401358c:	push   esi
6401358d:	mov    esi,DWORD PTR [ebp+0x8]
64013590:	push   edi
64013591:	push   DWORD PTR [ebp+0xc]
64013594:	add    esi,0x8
64013597:	and    esi,0xfffffff8
6401359a:	lea    eax,[ebp+0x8]
6401359d:	push   esi
6401359e:	push   eax
6401359f:	mov    edi,ecx
640135a1:	call   0x64013511
640135a6:	add    esp,0xc
640135a9:	test   eax,eax
640135ab:	jl     0x640135e3
640135ad:	push   DWORD PTR [ebp+0x8]
640135b0:	lea    eax,[ebp+0x8]
640135b3:	push   0x10
640135b5:	push   eax
640135b6:	call   0x64013567
640135bb:	add    esp,0xc
640135be:	test   eax,eax
640135c0:	jl     0x640135e3
640135c2:	mov    ecx,DWORD PTR [edi+0x4]
640135c5:	push   DWORD PTR [ebp+0x8]
640135c8:	mov    eax,DWORD PTR [ecx]
640135ca:	call   DWORD PTR [eax]
640135cc:	test   eax,eax
640135ce:	je     0x640135e3
640135d0:	dec    esi
640135d1:	and    DWORD PTR [eax+0x4],0x0
640135d5:	mov    DWORD PTR [eax],edi
640135d7:	mov    DWORD PTR [eax+0xc],0x1
640135de:	mov    DWORD PTR [eax+0x8],esi
640135e1:	jmp    0x640135e5
640135e3:	xor    eax,eax
640135e5:	pop    edi
640135e6:	pop    esi
640135e7:	pop    ebp
640135e8:	ret    0x8
640135eb:	push   ebp
640135ec:	mov    ebp,esp
640135ee:	push   esi
640135ef:	mov    esi,DWORD PTR [ebp+0xc]
640135f2:	push   edi
640135f3:	push   DWORD PTR [ebp+0x10]
640135f6:	add    esi,0x8
640135f9:	and    esi,0xfffffff8
640135fc:	lea    eax,[ebp+0xc]
640135ff:	push   esi
64013600:	push   eax
64013601:	mov    edi,ecx
64013603:	call   0x64013511
64013608:	add    esp,0xc
6401360b:	test   eax,eax
6401360d:	jl     0x6401363c
6401360f:	push   DWORD PTR [ebp+0xc]
64013612:	lea    eax,[ebp+0xc]
64013615:	push   0x10
64013617:	push   eax
64013618:	call   0x64006890
6401361d:	add    esp,0xc
64013620:	test   eax,eax
64013622:	jl     0x6401363c
64013624:	push   DWORD PTR [ebp+0xc]
64013627:	mov    ecx,DWORD PTR [edi+0x4]
6401362a:	push   DWORD PTR [ebp+0x8]
6401362d:	mov    eax,DWORD PTR [ecx]
6401362f:	call   DWORD PTR [eax+0x8]
64013632:	test   eax,eax
64013634:	je     0x6401363c
64013636:	dec    esi
64013637:	mov    DWORD PTR [eax+0x8],esi
6401363a:	jmp    0x6401363e
6401363c:	xor    eax,eax
6401363e:	pop    edi
6401363f:	pop    esi
64013640:	pop    ebp
64013641:	ret    0xc
64013644:	jmp    0x6401475a
64013649:	mov    eax,ecx
6401364b:	and    DWORD PTR [eax+0x4],0x0
6401364f:	and    DWORD PTR [eax+0x8],0x0
64013653:	mov    DWORD PTR [eax],0x64027bc0
64013659:	ret    
6401365a:	push   ebx
6401365b:	mov    ebx,DWORD PTR [esp+0x8]
6401365f:	push   esi
64013660:	push   edi
64013661:	mov    edi,ecx
64013663:	mov    DWORD PTR [edi],0x64027bc0
64013669:	mov    eax,DWORD PTR [ebx]
6401366b:	test   eax,eax
6401366d:	je     0x64013695
6401366f:	push   eax
64013670:	call   0x64015550
64013675:	mov    esi,eax
64013677:	inc    esi
64013678:	push   esi
64013679:	call   0x640148be
6401367e:	test   eax,eax
64013680:	pop    ecx
64013681:	pop    ecx
64013682:	mov    DWORD PTR [edi+0x4],eax
64013685:	je     0x64013699
64013687:	push   DWORD PTR [ebx]
64013689:	push   esi
6401368a:	push   eax
6401368b:	call   0x64016321
64013690:	add    esp,0xc
64013693:	jmp    0x64013699
64013695:	and    DWORD PTR [edi+0x4],0x0
64013699:	mov    DWORD PTR [edi+0x8],0x1
640136a0:	mov    eax,edi
640136a2:	pop    edi
640136a3:	pop    esi
640136a4:	pop    ebx
640136a5:	ret    0x4
640136a8:	mov    eax,ecx
640136aa:	mov    ecx,DWORD PTR [esp+0x4]
640136ae:	mov    DWORD PTR [eax],0x64027bc0
640136b4:	mov    ecx,DWORD PTR [ecx]
640136b6:	and    DWORD PTR [eax+0x8],0x0
640136ba:	mov    DWORD PTR [eax+0x4],ecx
640136bd:	ret    0x8
640136c0:	push   ebx
640136c1:	mov    ebx,DWORD PTR [esp+0x8]
640136c5:	push   esi
640136c6:	mov    esi,ecx
640136c8:	mov    DWORD PTR [esi],0x64027bc0
640136ce:	mov    eax,DWORD PTR [ebx+0x8]
640136d1:	mov    DWORD PTR [esi+0x8],eax
640136d4:	test   eax,eax
640136d6:	mov    eax,DWORD PTR [ebx+0x4]
640136d9:	push   edi
640136da:	je     0x6401370d
640136dc:	test   eax,eax
640136de:	je     0x64013707
640136e0:	push   eax
640136e1:	call   0x64015550
640136e6:	mov    edi,eax
640136e8:	inc    edi
640136e9:	push   edi
640136ea:	call   0x640148be
640136ef:	test   eax,eax
640136f1:	pop    ecx
640136f2:	pop    ecx
640136f3:	mov    DWORD PTR [esi+0x4],eax
640136f6:	je     0x64013710
640136f8:	push   DWORD PTR [ebx+0x4]
640136fb:	push   edi
640136fc:	push   eax
640136fd:	call   0x64016321
64013702:	add    esp,0xc
64013705:	jmp    0x64013710
64013707:	and    DWORD PTR [esi+0x4],0x0
6401370b:	jmp    0x64013710
6401370d:	mov    DWORD PTR [esi+0x4],eax
64013710:	pop    edi
64013711:	mov    eax,esi
64013713:	pop    esi
64013714:	pop    ebx
64013715:	ret    0x4
64013718:	cmp    DWORD PTR [ecx+0x8],0x0
6401371c:	mov    DWORD PTR [ecx],0x64027bc0
64013722:	je     0x6401372d
64013724:	push   DWORD PTR [ecx+0x4]
64013727:	call   0x6401475a
6401372c:	pop    ecx
6401372d:	ret    
6401372e:	mov    eax,DWORD PTR [ecx+0x4]
64013731:	test   eax,eax
64013733:	jne    0x6401373a
64013735:	mov    eax,0x64027bc8
6401373a:	ret    
6401373b:	push   esi
6401373c:	mov    esi,ecx
6401373e:	call   0x64013718
64013743:	test   BYTE PTR [esp+0x8],0x1
64013748:	je     0x64013751
6401374a:	push   esi
6401374b:	call   0x64013644
64013750:	pop    ecx
64013751:	mov    eax,esi
64013753:	pop    esi
64013754:	ret    0x4
64013757:	push   ecx
64013758:	mov    DWORD PTR [ecx],0x64027be0
6401375e:	call   0x64016386
64013763:	pop    ecx
64013764:	ret    
64013765:	push   esi
64013766:	mov    esi,ecx
64013768:	call   0x64013757
6401376d:	test   BYTE PTR [esp+0x8],0x1
64013772:	je     0x6401377b
64013774:	push   esi
64013775:	call   0x64013644
6401377a:	pop    ecx
6401377b:	mov    eax,esi
6401377d:	pop    esi
6401377e:	ret    0x4
64013781:	mov    eax,DWORD PTR [esp+0x4]
64013785:	add    ecx,0x9
64013788:	push   ecx
64013789:	add    eax,0x9
6401378c:	push   eax
6401378d:	call   0x64016400
64013792:	neg    eax
64013794:	pop    ecx
64013795:	sbb    eax,eax
64013797:	pop    ecx
64013798:	inc    eax
64013799:	ret    0x4
6401379c:	push   ebp
6401379d:	mov    ebp,esp
6401379f:	push   esi
640137a0:	mov    esi,DWORD PTR [ebp+0x14]
640137a3:	push   edi
640137a4:	xor    edi,edi
640137a6:	cmp    esi,edi
640137a8:	jne    0x640137ae
640137aa:	xor    eax,eax
640137ac:	jmp    0x64013813
640137ae:	cmp    DWORD PTR [ebp+0x8],edi
640137b1:	jne    0x640137ce
640137b3:	call   0x640164c3
640137b8:	push   0x16
640137ba:	pop    esi
640137bb:	mov    DWORD PTR [eax],esi
640137bd:	push   edi
640137be:	push   edi
640137bf:	push   edi
640137c0:	push   edi
640137c1:	push   edi
640137c2:	call   0x64013e52
640137c7:	add    esp,0x14
640137ca:	mov    eax,esi
640137cc:	jmp    0x64013813
640137ce:	cmp    DWORD PTR [ebp+0x10],edi
640137d1:	je     0x640137e9
640137d3:	cmp    DWORD PTR [ebp+0xc],esi
640137d6:	jb     0x640137e9
640137d8:	push   esi
640137d9:	push   DWORD PTR [ebp+0x10]
640137dc:	push   DWORD PTR [ebp+0x8]
640137df:	call   0x640151e0
640137e4:	add    esp,0xc
640137e7:	jmp    0x640137aa
640137e9:	push   DWORD PTR [ebp+0xc]
640137ec:	push   edi
640137ed:	push   DWORD PTR [ebp+0x8]
640137f0:	call   0x64015160
640137f5:	add    esp,0xc
640137f8:	cmp    DWORD PTR [ebp+0x10],edi
640137fb:	je     0x640137b3
640137fd:	cmp    DWORD PTR [ebp+0xc],esi
64013800:	jae    0x64013810
64013802:	call   0x640164c3
64013807:	push   0x22
64013809:	pop    ecx
6401380a:	mov    DWORD PTR [eax],ecx
6401380c:	mov    esi,ecx
6401380e:	jmp    0x640137bd
64013810:	push   0x16
64013812:	pop    eax
64013813:	pop    edi
64013814:	pop    esi
64013815:	pop    ebp
64013816:	ret    
64013817:	push   ebp
64013818:	mov    ebp,esp
6401381a:	mov    eax,DWORD PTR [ebp+0x14]
6401381d:	push   esi
6401381e:	push   edi
6401381f:	xor    edi,edi
64013821:	cmp    eax,edi
64013823:	je     0x6401386c
64013825:	cmp    DWORD PTR [ebp+0x8],edi
64013828:	jne    0x64013845
6401382a:	call   0x640164c3
6401382f:	push   0x16
64013831:	pop    esi
64013832:	mov    DWORD PTR [eax],esi
64013834:	push   edi
64013835:	push   edi
64013836:	push   edi
64013837:	push   edi
64013838:	push   edi
64013839:	call   0x64013e52
6401383e:	add    esp,0x14
64013841:	mov    eax,esi
64013843:	jmp    0x6401386e
64013845:	cmp    DWORD PTR [ebp+0x10],edi
64013848:	je     0x6401382a
6401384a:	cmp    DWORD PTR [ebp+0xc],eax
6401384d:	jae    0x6401385d
6401384f:	call   0x640164c3
64013854:	push   0x22
64013856:	pop    ecx
64013857:	mov    DWORD PTR [eax],ecx
64013859:	mov    esi,ecx
6401385b:	jmp    0x64013834
6401385d:	push   eax
6401385e:	push   DWORD PTR [ebp+0x10]
64013861:	push   DWORD PTR [ebp+0x8]
64013864:	call   0x64016510
64013869:	add    esp,0xc
6401386c:	xor    eax,eax
6401386e:	pop    edi
6401386f:	pop    esi
64013870:	pop    ebp
64013871:	ret    
64013872:	push   ebp
64013873:	mov    ebp,esp
64013875:	sub    esp,0x20
64013878:	mov    eax,DWORD PTR [ebp+0x8]
6401387b:	push   esi
6401387c:	push   edi
6401387d:	push   0x8
6401387f:	pop    ecx
64013880:	mov    esi,0x64027be4
64013885:	lea    edi,[ebp-0x20]
64013888:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401388a:	mov    DWORD PTR [ebp-0x8],eax
6401388d:	mov    eax,DWORD PTR [ebp+0xc]
64013890:	test   eax,eax
64013892:	pop    edi
64013893:	mov    DWORD PTR [ebp-0x4],eax
64013896:	pop    esi
64013897:	je     0x640138a5
64013899:	test   BYTE PTR [eax],0x8
6401389c:	je     0x640138a5
6401389e:	mov    DWORD PTR [ebp-0xc],0x1994000
640138a5:	lea    eax,[ebp-0xc]
640138a8:	push   eax
640138a9:	push   DWORD PTR [ebp-0x10]
640138ac:	push   DWORD PTR [ebp-0x1c]
640138af:	push   DWORD PTR [ebp-0x20]
640138b2:	call   DWORD PTR ds:0x64024174
640138b8:	leave  
640138b9:	ret    0x8
640138bc:	push   esi
640138bd:	push   0x1
640138bf:	push   0x64037640
640138c4:	mov    esi,ecx
640138c6:	call   0x640136a8
640138cb:	mov    DWORD PTR [esi],0x640242a4
640138d1:	mov    eax,esi
640138d3:	pop    esi
640138d4:	ret    
640138d5:	push   ebp
640138d6:	mov    ebp,esp
640138d8:	sub    esp,0xc
640138db:	jmp    0x640138ea
640138dd:	push   DWORD PTR [ebp+0x8]
640138e0:	call   0x6401687f
640138e5:	test   eax,eax
640138e7:	pop    ecx
640138e8:	je     0x640138f9
640138ea:	push   DWORD PTR [ebp+0x8]
640138ed:	call   0x640148be
640138f2:	test   eax,eax
640138f4:	pop    ecx
640138f5:	je     0x640138dd
640138f7:	leave  
640138f8:	ret    
640138f9:	test   BYTE PTR ds:0x64038e8c,0x1
64013900:	mov    esi,0x64038e80
64013905:	jne    0x64013920
64013907:	or     DWORD PTR ds:0x64038e8c,0x1
6401390e:	mov    ecx,esi
64013910:	call   0x640138bc
64013915:	push   0x64023f37
6401391a:	call   0x64013faa
6401391f:	pop    ecx
64013920:	push   esi
64013921:	lea    ecx,[ebp-0xc]
64013924:	call   0x640136c0
64013929:	push   0x6402bd7c
6401392e:	lea    eax,[ebp-0xc]
64013931:	push   eax
64013932:	mov    DWORD PTR [ebp-0xc],0x640242a4
64013939:	call   0x64013872
6401393e:	int3   
6401393f:	push   ebp
64013940:	mov    ebp,esp
64013942:	push   ecx
64013943:	push   ebx
64013944:	mov    eax,DWORD PTR [ebp+0xc]
64013947:	add    eax,0xc
6401394a:	mov    DWORD PTR [ebp-0x4],eax
6401394d:	mov    ebx,DWORD PTR fs:0x0
64013954:	mov    eax,DWORD PTR [ebx]
64013956:	mov    fs:0x0,eax
6401395c:	mov    eax,DWORD PTR [ebp+0x8]
6401395f:	mov    ebx,DWORD PTR [ebp+0xc]
64013962:	mov    ebp,DWORD PTR [ebp-0x4]
64013965:	mov    esp,DWORD PTR [ebx-0x4]
64013968:	jmp    eax
6401396a:	pop    ebx
6401396b:	leave  
6401396c:	ret    0x8
6401396f:	pop    eax
64013970:	pop    ecx
64013971:	xchg   DWORD PTR [esp],eax
64013974:	jmp    eax
64013976:	push   ebp
64013977:	mov    ebp,esp
64013979:	push   ecx
6401397a:	push   ecx
6401397b:	push   ebx
6401397c:	push   esi
6401397d:	push   edi
6401397e:	mov    esi,DWORD PTR fs:0x0
64013985:	mov    DWORD PTR [ebp-0x4],esi
64013988:	mov    DWORD PTR [ebp-0x8],0x6401399f
6401398f:	push   0x0
64013991:	push   DWORD PTR [ebp+0xc]
64013994:	push   DWORD PTR [ebp-0x8]
64013997:	push   DWORD PTR [ebp+0x8]
6401399a:	call   0x64022e5c
6401399f:	mov    eax,DWORD PTR [ebp+0xc]
640139a2:	mov    eax,DWORD PTR [eax+0x4]
640139a5:	and    eax,0xfffffffd
640139a8:	mov    ecx,DWORD PTR [ebp+0xc]
640139ab:	mov    DWORD PTR [ecx+0x4],eax
640139ae:	mov    edi,DWORD PTR fs:0x0
640139b5:	mov    ebx,DWORD PTR [ebp-0x4]
640139b8:	mov    DWORD PTR [ebx],edi
640139ba:	mov    DWORD PTR fs:0x0,ebx
640139c1:	pop    edi
640139c2:	pop    esi
640139c3:	pop    ebx
640139c4:	leave  
640139c5:	ret    0x8
640139c8:	push   ebp
640139c9:	mov    ebp,esp
640139cb:	sub    esp,0x8
640139ce:	push   ebx
640139cf:	push   esi
640139d0:	push   edi
640139d1:	cld    
640139d2:	mov    DWORD PTR [ebp-0x4],eax
640139d5:	xor    eax,eax
640139d7:	push   eax
640139d8:	push   eax
640139d9:	push   eax
640139da:	push   DWORD PTR [ebp-0x4]
640139dd:	push   DWORD PTR [ebp+0x14]
640139e0:	push   DWORD PTR [ebp+0x10]
640139e3:	push   DWORD PTR [ebp+0xc]
640139e6:	push   DWORD PTR [ebp+0x8]
640139e9:	call   0x64017447
640139ee:	add    esp,0x20
640139f1:	mov    DWORD PTR [ebp-0x8],eax
640139f4:	pop    edi
640139f5:	pop    esi
640139f6:	pop    ebx
640139f7:	mov    eax,DWORD PTR [ebp-0x8]
640139fa:	mov    esp,ebp
640139fc:	pop    ebp
640139fd:	ret    
640139fe:	push   esi
640139ff:	cld    
64013a00:	mov    esi,DWORD PTR [esp+0xc]
64013a04:	mov    ecx,DWORD PTR [esi+0x8]
64013a07:	xor    ecx,esi
64013a09:	call   0x64013d06
64013a0e:	push   0x0
64013a10:	push   esi
64013a11:	push   DWORD PTR [esi+0x14]
64013a14:	push   DWORD PTR [esi+0xc]
64013a17:	push   0x0
64013a19:	push   DWORD PTR [esp+0x24]
64013a1d:	push   DWORD PTR [esi+0x10]
64013a20:	push   DWORD PTR [esp+0x24]
64013a24:	call   0x64017447
64013a29:	add    esp,0x20
64013a2c:	pop    esi
64013a2d:	ret    
64013a2e:	push   ebp
64013a2f:	mov    ebp,esp
64013a31:	sub    esp,0x38
64013a34:	push   ebx
64013a35:	cmp    DWORD PTR [ebp+0x8],0x123
64013a3c:	jne    0x64013a50
64013a3e:	mov    eax,0x64013ad7
64013a43:	mov    ecx,DWORD PTR [ebp+0xc]
64013a46:	mov    DWORD PTR [ecx],eax
64013a48:	xor    eax,eax
64013a4a:	inc    eax
64013a4b:	jmp    0x64013b00
64013a50:	and    DWORD PTR [ebp-0x28],0x0
64013a54:	mov    DWORD PTR [ebp-0x24],0x64013b03
64013a5b:	mov    eax,ds:0x64037644
64013a60:	lea    ecx,[ebp-0x28]
64013a63:	xor    eax,ecx
64013a65:	mov    DWORD PTR [ebp-0x20],eax
64013a68:	mov    eax,DWORD PTR [ebp+0x18]
64013a6b:	mov    DWORD PTR [ebp-0x1c],eax
64013a6e:	mov    eax,DWORD PTR [ebp+0xc]
64013a71:	mov    DWORD PTR [ebp-0x18],eax
64013a74:	mov    eax,DWORD PTR [ebp+0x1c]
64013a77:	mov    DWORD PTR [ebp-0x14],eax
64013a7a:	mov    eax,DWORD PTR [ebp+0x20]
64013a7d:	mov    DWORD PTR [ebp-0x10],eax
64013a80:	and    DWORD PTR [ebp-0xc],0x0
64013a84:	and    DWORD PTR [ebp-0x8],0x0
64013a88:	and    DWORD PTR [ebp-0x4],0x0
64013a8c:	mov    DWORD PTR [ebp-0xc],esp
64013a8f:	mov    DWORD PTR [ebp-0x8],ebp
64013a92:	mov    eax,fs:0x0
64013a98:	mov    DWORD PTR [ebp-0x28],eax
64013a9b:	lea    eax,[ebp-0x28]
64013a9e:	mov    fs:0x0,eax
64013aa4:	mov    DWORD PTR [ebp-0x38],0x1
64013aab:	mov    eax,DWORD PTR [ebp+0x8]
64013aae:	mov    DWORD PTR [ebp-0x34],eax
64013ab1:	mov    eax,DWORD PTR [ebp+0x10]
64013ab4:	mov    DWORD PTR [ebp-0x30],eax
64013ab7:	call   0x6401782a
64013abc:	mov    eax,DWORD PTR [eax+0x80]
64013ac2:	mov    DWORD PTR [ebp-0x2c],eax
64013ac5:	lea    eax,[ebp-0x34]
64013ac8:	push   eax
64013ac9:	mov    eax,DWORD PTR [ebp+0x8]
64013acc:	push   DWORD PTR [eax]
64013ace:	call   DWORD PTR [ebp-0x2c]
64013ad1:	pop    ecx
64013ad2:	pop    ecx
64013ad3:	and    DWORD PTR [ebp-0x38],0x0
64013ad7:	cmp    DWORD PTR [ebp-0x4],0x0
64013adb:	je     0x64013af4
64013add:	mov    ebx,DWORD PTR fs:0x0
64013ae4:	mov    eax,DWORD PTR [ebx]
64013ae6:	mov    ebx,DWORD PTR [ebp-0x28]
64013ae9:	mov    DWORD PTR [ebx],eax
64013aeb:	mov    DWORD PTR fs:0x0,ebx
64013af2:	jmp    0x64013afd
64013af4:	mov    eax,DWORD PTR [ebp-0x28]
64013af7:	mov    fs:0x0,eax
64013afd:	mov    eax,DWORD PTR [ebp-0x38]
64013b00:	pop    ebx
64013b01:	leave  
64013b02:	ret    
64013b03:	push   ebp
64013b04:	mov    ebp,esp
64013b06:	push   ecx
64013b07:	push   ebx
64013b08:	cld    
64013b09:	mov    eax,DWORD PTR [ebp+0xc]
64013b0c:	mov    ecx,DWORD PTR [eax+0x8]
64013b0f:	xor    ecx,DWORD PTR [ebp+0xc]
64013b12:	call   0x64013d06
64013b17:	mov    eax,DWORD PTR [ebp+0x8]
64013b1a:	mov    eax,DWORD PTR [eax+0x4]
64013b1d:	and    eax,0x66
64013b20:	je     0x64013b33
64013b22:	mov    eax,DWORD PTR [ebp+0xc]
64013b25:	mov    DWORD PTR [eax+0x24],0x1
64013b2c:	xor    eax,eax
64013b2e:	inc    eax
64013b2f:	jmp    0x64013b9d
64013b31:	jmp    0x64013b9d
64013b33:	push   0x1
64013b35:	mov    eax,DWORD PTR [ebp+0xc]
64013b38:	push   DWORD PTR [eax+0x18]
64013b3b:	mov    eax,DWORD PTR [ebp+0xc]
64013b3e:	push   DWORD PTR [eax+0x14]
64013b41:	mov    eax,DWORD PTR [ebp+0xc]
64013b44:	push   DWORD PTR [eax+0xc]
64013b47:	push   0x0
64013b49:	push   DWORD PTR [ebp+0x10]
64013b4c:	mov    eax,DWORD PTR [ebp+0xc]
64013b4f:	push   DWORD PTR [eax+0x10]
64013b52:	push   DWORD PTR [ebp+0x8]
64013b55:	call   0x64017447
64013b5a:	add    esp,0x20
64013b5d:	mov    eax,DWORD PTR [ebp+0xc]
64013b60:	cmp    DWORD PTR [eax+0x24],0x0
64013b64:	jne    0x64013b71
64013b66:	push   DWORD PTR [ebp+0x8]
64013b69:	push   DWORD PTR [ebp+0xc]
64013b6c:	call   0x64013976
64013b71:	push   0x0
64013b73:	push   0x0
64013b75:	push   0x0
64013b77:	push   0x0
64013b79:	push   0x0
64013b7b:	lea    eax,[ebp-0x4]
64013b7e:	push   eax
64013b7f:	push   0x123
64013b84:	call   0x64013a2e
64013b89:	add    esp,0x1c
64013b8c:	mov    eax,DWORD PTR [ebp-0x4]
64013b8f:	mov    ebx,DWORD PTR [ebp+0xc]
64013b92:	mov    esp,DWORD PTR [ebx+0x1c]
64013b95:	mov    ebp,DWORD PTR [ebx+0x20]
64013b98:	jmp    eax
64013b9a:	xor    eax,eax
64013b9c:	inc    eax
64013b9d:	pop    ebx
64013b9e:	leave  
64013b9f:	ret    
64013ba0:	push   ebp
64013ba1:	mov    ebp,esp
64013ba3:	push   ecx
64013ba4:	push   ebx
64013ba5:	push   esi
64013ba6:	push   edi
64013ba7:	mov    edi,DWORD PTR [ebp+0x8]
64013baa:	mov    eax,DWORD PTR [edi+0x10]
64013bad:	mov    esi,DWORD PTR [edi+0xc]
64013bb0:	mov    DWORD PTR [ebp-0x4],eax
64013bb3:	mov    ebx,esi
64013bb5:	jmp    0x64013be4
64013bb7:	cmp    esi,0xffffffff
64013bba:	jne    0x64013bc1
64013bbc:	call   0x64017b9c
64013bc1:	mov    ecx,DWORD PTR [ebp-0x4]
64013bc4:	dec    esi
64013bc5:	mov    eax,esi
64013bc7:	imul   eax,eax,0x14
64013bca:	add    eax,ecx
64013bcc:	mov    ecx,DWORD PTR [ebp+0x10]
64013bcf:	cmp    DWORD PTR [eax+0x4],ecx
64013bd2:	jge    0x64013bd9
64013bd4:	cmp    ecx,DWORD PTR [eax+0x8]
64013bd7:	jle    0x64013bde
64013bd9:	cmp    esi,0xffffffff
64013bdc:	jne    0x64013be7
64013bde:	dec    DWORD PTR [ebp+0xc]
64013be1:	mov    ebx,DWORD PTR [ebp+0x8]
64013be4:	mov    DWORD PTR [ebp+0x8],esi
64013be7:	cmp    DWORD PTR [ebp+0xc],0x0
64013beb:	jge    0x64013bb7
64013bed:	mov    eax,DWORD PTR [ebp+0x14]
64013bf0:	inc    esi
64013bf1:	mov    DWORD PTR [eax],esi
64013bf3:	mov    eax,DWORD PTR [ebp+0x18]
64013bf6:	mov    DWORD PTR [eax],ebx
64013bf8:	cmp    ebx,DWORD PTR [edi+0xc]
64013bfb:	ja     0x64013c01
64013bfd:	cmp    esi,ebx
64013bff:	jbe    0x64013c06
64013c01:	call   0x64017b9c
64013c06:	mov    eax,esi
64013c08:	imul   eax,eax,0x14
64013c0b:	add    eax,DWORD PTR [ebp-0x4]
64013c0e:	pop    edi
64013c0f:	pop    esi
64013c10:	pop    ebx
64013c11:	leave  
64013c12:	ret    
64013c13:	mov    eax,DWORD PTR [esp+0x8]
64013c17:	push   esi
64013c18:	mov    esi,DWORD PTR [esp+0x8]
64013c1c:	mov    DWORD PTR [esi],eax
64013c1e:	call   0x6401782a
64013c23:	mov    eax,DWORD PTR [eax+0x98]
64013c29:	mov    DWORD PTR [esi+0x4],eax
64013c2c:	call   0x6401782a
64013c31:	mov    DWORD PTR [eax+0x98],esi
64013c37:	mov    eax,esi
64013c39:	pop    esi
64013c3a:	ret    
64013c3b:	call   0x6401782a
64013c40:	mov    eax,DWORD PTR [eax+0x98]
64013c46:	jmp    0x64013c53
64013c48:	mov    ecx,DWORD PTR [eax]
64013c4a:	cmp    ecx,DWORD PTR [esp+0x4]
64013c4e:	je     0x64013c59
64013c50:	mov    eax,DWORD PTR [eax+0x4]
64013c53:	test   eax,eax
64013c55:	jne    0x64013c48
64013c57:	inc    eax
64013c58:	ret    
64013c59:	xor    eax,eax
64013c5b:	ret    
64013c5c:	push   esi
64013c5d:	call   0x6401782a
64013c62:	mov    esi,DWORD PTR [esp+0x8]
64013c66:	cmp    esi,DWORD PTR [eax+0x98]
64013c6c:	jne    0x64013c7e
64013c6e:	call   0x6401782a
64013c73:	mov    ecx,DWORD PTR [esi+0x4]
64013c76:	mov    DWORD PTR [eax+0x98],ecx
64013c7c:	pop    esi
64013c7d:	ret    
64013c7e:	call   0x6401782a
64013c83:	mov    eax,DWORD PTR [eax+0x98]
64013c89:	jmp    0x64013c94
64013c8b:	mov    ecx,DWORD PTR [eax+0x4]
64013c8e:	cmp    esi,ecx
64013c90:	je     0x64013ca0
64013c92:	mov    eax,ecx
64013c94:	cmp    DWORD PTR [eax+0x4],0x0
64013c98:	jne    0x64013c8b
64013c9a:	pop    esi
64013c9b:	jmp    0x64017b9c
64013ca0:	mov    ecx,DWORD PTR [esi+0x4]
64013ca3:	mov    DWORD PTR [eax+0x4],ecx
64013ca6:	pop    esi
64013ca7:	ret    
64013ca8:	push   ebp
64013ca9:	mov    ebp,esp
64013cab:	sub    esp,0x18
64013cae:	mov    eax,ds:0x64037644
64013cb3:	and    DWORD PTR [ebp-0x18],0x0
64013cb7:	lea    ecx,[ebp-0x18]
64013cba:	xor    eax,ecx
64013cbc:	mov    ecx,DWORD PTR [ebp+0x8]
64013cbf:	mov    DWORD PTR [ebp-0x10],eax
64013cc2:	mov    eax,DWORD PTR [ebp+0xc]
64013cc5:	mov    DWORD PTR [ebp-0xc],eax
64013cc8:	mov    eax,DWORD PTR [ebp+0x14]
64013ccb:	inc    eax
64013ccc:	mov    DWORD PTR [ebp-0x14],0x640139fe
64013cd3:	mov    DWORD PTR [ebp-0x8],ecx
64013cd6:	mov    DWORD PTR [ebp-0x4],eax
64013cd9:	mov    eax,fs:0x0
64013cdf:	mov    DWORD PTR [ebp-0x18],eax
64013ce2:	lea    eax,[ebp-0x18]
64013ce5:	mov    fs:0x0,eax
64013ceb:	push   DWORD PTR [ebp+0x18]
64013cee:	push   ecx
64013cef:	push   DWORD PTR [ebp+0x10]
64013cf2:	call   0x64017bf0
64013cf7:	mov    ecx,eax
64013cf9:	mov    eax,DWORD PTR [ebp-0x18]
64013cfc:	mov    fs:0x0,eax
64013d02:	mov    eax,ecx
64013d04:	leave  
64013d05:	ret    
64013d06:	cmp    ecx,DWORD PTR ds:0x64037644
64013d0c:	jne    0x64013d10
64013d0e:	repz ret 
64013d10:	jmp    0x64017c3c
64013d15:	int3   
64013d16:	int3   
64013d17:	int3   
64013d18:	int3   
64013d19:	int3   
64013d1a:	int3   
64013d1b:	int3   
64013d1c:	int3   
64013d1d:	int3   
64013d1e:	int3   
64013d1f:	int3   
64013d20:	push   ecx
64013d21:	lea    ecx,[esp+0x8]
64013d25:	sub    ecx,eax
64013d27:	and    ecx,0xf
64013d2a:	add    eax,ecx
64013d2c:	sbb    ecx,ecx
64013d2e:	or     eax,ecx
64013d30:	pop    ecx
64013d31:	jmp    0x64017d40
64013d36:	push   ecx
64013d37:	lea    ecx,[esp+0x8]
64013d3b:	sub    ecx,eax
64013d3d:	and    ecx,0x7
64013d40:	add    eax,ecx
64013d42:	sbb    ecx,ecx
64013d44:	or     eax,ecx
64013d46:	pop    ecx
64013d47:	jmp    0x64017d40
64013d4c:	mov    eax,DWORD PTR [esp+0x4]
64013d50:	mov    ds:0x64038e90,eax
64013d55:	ret    
64013d56:	push   ebp
64013d57:	lea    ebp,[esp-0x2a8]
64013d5e:	sub    esp,0x328
64013d64:	mov    eax,ds:0x64037644
64013d69:	xor    eax,ebp
64013d6b:	mov    DWORD PTR [ebp+0x2a4],eax
64013d71:	push   esi
64013d72:	mov    DWORD PTR [ebp+0x88],eax
64013d78:	mov    DWORD PTR [ebp+0x84],ecx
64013d7e:	mov    DWORD PTR [ebp+0x80],edx
64013d84:	mov    DWORD PTR [ebp+0x7c],ebx
64013d87:	mov    DWORD PTR [ebp+0x78],esi
64013d8a:	mov    DWORD PTR [ebp+0x74],edi
64013d8d:	data16 mov WORD PTR [ebp+0xa0],ss
64013d94:	data16 mov WORD PTR [ebp+0x94],cs
64013d9b:	data16 mov WORD PTR [ebp+0x70],ds
64013d9f:	data16 mov WORD PTR [ebp+0x6c],es
64013da3:	data16 mov WORD PTR [ebp+0x68],fs
64013da7:	data16 mov WORD PTR [ebp+0x64],gs
64013dab:	pushf  
64013dac:	pop    DWORD PTR [ebp+0x98]
64013db2:	mov    esi,DWORD PTR [ebp+0x2ac]
64013db8:	lea    eax,[ebp+0x2ac]
64013dbe:	mov    DWORD PTR [ebp+0x9c],eax
64013dc4:	mov    DWORD PTR [ebp-0x28],0x10001
64013dcb:	mov    DWORD PTR [ebp+0x90],esi
64013dd1:	mov    eax,DWORD PTR [eax-0x4]
64013dd4:	push   0x50
64013dd6:	mov    DWORD PTR [ebp+0x8c],eax
64013ddc:	lea    eax,[ebp-0x80]
64013ddf:	push   0x0
64013de1:	push   eax
64013de2:	call   0x64015160
64013de7:	lea    eax,[ebp-0x80]
64013dea:	mov    DWORD PTR [ebp-0x30],eax
64013ded:	lea    eax,[ebp-0x28]
64013df0:	add    esp,0xc
64013df3:	mov    DWORD PTR [ebp-0x80],0xc000000d
64013dfa:	mov    DWORD PTR [ebp-0x74],esi
64013dfd:	mov    DWORD PTR [ebp-0x2c],eax
64013e00:	call   DWORD PTR ds:0x6402419c
64013e06:	push   0x0
64013e08:	mov    esi,eax
64013e0a:	call   DWORD PTR ds:0x64024198
64013e10:	lea    eax,[ebp-0x30]
64013e13:	push   eax
64013e14:	call   DWORD PTR ds:0x64024194
64013e1a:	test   eax,eax
64013e1c:	jne    0x64013e2a
64013e1e:	test   esi,esi
64013e20:	jne    0x64013e2a
64013e22:	push   0x2
64013e24:	call   0x64017d6b
64013e29:	pop    ecx
64013e2a:	push   0xc000000d
64013e2f:	call   DWORD PTR ds:0x6402403c
64013e35:	push   eax
64013e36:	call   DWORD PTR ds:0x640240e8
64013e3c:	mov    ecx,DWORD PTR [ebp+0x2a4]
64013e42:	xor    ecx,ebp
64013e44:	pop    esi
64013e45:	call   0x64013d06
64013e4a:	add    ebp,0x2a8
64013e50:	leave  
64013e51:	ret    
64013e52:	push   ebp
64013e53:	mov    ebp,esp
64013e55:	push   DWORD PTR ds:0x64038e90
64013e5b:	call   0x6401760e
64013e60:	test   eax,eax
64013e62:	pop    ecx
64013e63:	je     0x64013e68
64013e65:	pop    ebp
64013e66:	jmp    eax
64013e68:	push   0x2
64013e6a:	call   0x64017d6b
64013e6f:	pop    ecx
64013e70:	pop    ebp
64013e71:	jmp    0x64013d56
64013e76:	xor    eax,eax
64013e78:	push   eax
64013e79:	push   eax
64013e7a:	push   eax
64013e7b:	push   eax
64013e7c:	push   eax
64013e7d:	call   0x64013e52
64013e82:	add    esp,0x14
64013e85:	ret    
64013e86:	push   ecx
64013e87:	push   ebx
64013e88:	push   ebp
64013e89:	push   esi
64013e8a:	push   edi
64013e8b:	push   DWORD PTR ds:0x6403ac88
64013e91:	call   0x6401760e
64013e96:	push   DWORD PTR ds:0x6403ac84
64013e9c:	mov    esi,eax
64013e9e:	mov    DWORD PTR [esp+0x18],esi
64013ea2:	call   0x6401760e
64013ea7:	mov    edi,eax
64013ea9:	cmp    edi,esi
64013eab:	pop    ecx
64013eac:	pop    ecx
64013ead:	jb     0x64013f37
64013eb3:	mov    ebx,edi
64013eb5:	sub    ebx,esi
64013eb7:	lea    ebp,[ebx+0x4]
64013eba:	cmp    ebp,0x4
64013ebd:	jb     0x64013f37
64013ebf:	push   esi
64013ec0:	call   0x64017d73
64013ec5:	mov    esi,eax
64013ec7:	cmp    esi,ebp
64013ec9:	pop    ecx
64013eca:	jae    0x64013f16
64013ecc:	mov    eax,0x800
64013ed1:	cmp    esi,eax
64013ed3:	jae    0x64013ed7
64013ed5:	mov    eax,esi
64013ed7:	add    eax,esi
64013ed9:	cmp    eax,esi
64013edb:	jb     0x64013eed
64013edd:	push   eax
64013ede:	push   DWORD PTR [esp+0x14]
64013ee2:	call   0x64015db7
64013ee7:	test   eax,eax
64013ee9:	pop    ecx
64013eea:	pop    ecx
64013eeb:	jne    0x64013f04
64013eed:	lea    eax,[esi+0x10]
64013ef0:	cmp    eax,esi
64013ef2:	jb     0x64013f37
64013ef4:	push   eax
64013ef5:	push   DWORD PTR [esp+0x14]
64013ef9:	call   0x64015db7
64013efe:	test   eax,eax
64013f00:	pop    ecx
64013f01:	pop    ecx
64013f02:	je     0x64013f37
64013f04:	sar    ebx,0x2
64013f07:	push   eax
64013f08:	lea    edi,[eax+ebx*4]
64013f0b:	call   0x64017597
64013f10:	pop    ecx
64013f11:	mov    ds:0x6403ac88,eax
64013f16:	push   DWORD PTR [esp+0x18]
64013f1a:	call   0x64017597
64013f1f:	mov    DWORD PTR [edi],eax
64013f21:	add    edi,0x4
64013f24:	push   edi
64013f25:	call   0x64017597
64013f2a:	pop    ecx
64013f2b:	mov    ds:0x6403ac84,eax
64013f30:	mov    eax,DWORD PTR [esp+0x1c]
64013f34:	pop    ecx
64013f35:	jmp    0x64013f39
64013f37:	xor    eax,eax
64013f39:	pop    edi
64013f3a:	pop    esi
64013f3b:	pop    ebp
64013f3c:	pop    ebx
64013f3d:	pop    ecx
64013f3e:	ret    
64013f3f:	push   esi
64013f40:	push   0x4
64013f42:	push   0x20
64013f44:	call   0x64015d6f
64013f49:	mov    esi,eax
64013f4b:	push   esi
64013f4c:	call   0x64017597
64013f51:	add    esp,0xc
64013f54:	test   esi,esi
64013f56:	mov    ds:0x6403ac88,eax
64013f5b:	mov    ds:0x6403ac84,eax
64013f60:	jne    0x64013f67
64013f62:	push   0x18
64013f64:	pop    eax
64013f65:	pop    esi
64013f66:	ret    
64013f67:	and    DWORD PTR [esi],0x0
64013f6a:	xor    eax,eax
64013f6c:	pop    esi
64013f6d:	ret    
64013f6e:	push   0xc
64013f70:	push   0x6402b6d8
64013f75:	call   0x64015f14
64013f7a:	call   0x64017e75
64013f7f:	and    DWORD PTR [ebp-0x4],0x0
64013f83:	push   DWORD PTR [ebp+0x8]
64013f86:	call   0x64013e86
64013f8b:	pop    ecx
64013f8c:	mov    DWORD PTR [ebp-0x1c],eax
64013f8f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013f96:	call   0x64013fa4
64013f9b:	mov    eax,DWORD PTR [ebp-0x1c]
64013f9e:	call   0x64015f59
64013fa3:	ret    
64013fa4:	call   0x64017e7e
64013fa9:	ret    
64013faa:	push   DWORD PTR [esp+0x4]
64013fae:	call   0x64013f6e
64013fb3:	neg    eax
64013fb5:	sbb    eax,eax
64013fb7:	neg    eax
64013fb9:	pop    ecx
64013fba:	dec    eax
64013fbb:	ret    
64013fbc:	mov    eax,DWORD PTR [esp+0x4]
64013fc0:	push   ebx
64013fc1:	mov    ebx,DWORD PTR [esp+0xc]
64013fc5:	cmp    WORD PTR [ebx],0x0
64013fc9:	push   edi
64013fca:	mov    edi,eax
64013fcc:	je     0x64014013
64013fce:	movzx  ecx,WORD PTR [eax]
64013fd1:	test   cx,cx
64013fd4:	je     0x64014011
64013fd6:	movzx  edx,cx
64013fd9:	sub    eax,ebx
64013fdb:	test   dx,dx
64013fde:	mov    ecx,DWORD PTR [esp+0x10]
64013fe2:	je     0x64013fff
64013fe4:	movzx  edx,WORD PTR [ecx]
64013fe7:	test   dx,dx
64013fea:	je     0x64014016
64013fec:	movzx  ebx,WORD PTR [eax+ecx*1]
64013ff0:	movzx  edx,dx
64013ff3:	sub    ebx,edx
64013ff5:	jne    0x64013fff
64013ff7:	inc    ecx
64013ff8:	inc    ecx
64013ff9:	cmp    WORD PTR [eax+ecx*1],bx
64013ffd:	jne    0x64013fe4
64013fff:	cmp    WORD PTR [ecx],0x0
64014003:	je     0x64014016
64014005:	inc    edi
64014006:	inc    edi
64014007:	movzx  edx,WORD PTR [edi]
6401400a:	inc    eax
6401400b:	inc    eax
6401400c:	test   dx,dx
6401400f:	jne    0x64013fdb
64014011:	xor    eax,eax
64014013:	pop    edi
64014014:	pop    ebx
64014015:	ret    
64014016:	mov    eax,edi
64014018:	jmp    0x64014013
6401401a:	push   ebp
6401401b:	mov    ebp,esp
6401401d:	push   ecx
6401401e:	mov    eax,DWORD PTR [ebp+0xc]
64014021:	cmp    eax,0x1
64014024:	push   ebx
64014025:	push   esi
64014026:	push   edi
64014027:	jne    0x64014144
6401402d:	mov    ebx,DWORD PTR ds:0x6402418c
64014033:	mov    edi,0x94
64014038:	push   edi
64014039:	push   0x0
6401403b:	call   ebx
6401403d:	push   eax
6401403e:	call   DWORD PTR ds:0x6402417c
64014044:	mov    esi,eax
64014046:	test   esi,esi
64014048:	jne    0x64014051
6401404a:	xor    eax,eax
6401404c:	jmp    0x640141ec
64014051:	push   esi
64014052:	mov    DWORD PTR [esi],edi
64014054:	call   DWORD PTR ds:0x64024170
6401405a:	test   eax,eax
6401405c:	push   esi
6401405d:	push   0x0
6401405f:	jne    0x6401406c
64014061:	call   ebx
64014063:	push   eax
64014064:	call   DWORD PTR ds:0x64024180
6401406a:	jmp    0x6401404a
6401406c:	mov    eax,DWORD PTR [esi+0x10]
6401406f:	mov    edi,DWORD PTR [esi+0xc]
64014072:	mov    DWORD PTR [ebp+0xc],eax
64014075:	mov    eax,DWORD PTR [esi+0x4]
64014078:	mov    DWORD PTR [ebp+0x10],eax
6401407b:	mov    eax,DWORD PTR [esi+0x8]
6401407e:	mov    DWORD PTR [ebp-0x4],eax
64014081:	and    edi,0x7fff
64014087:	call   ebx
64014089:	push   eax
6401408a:	call   DWORD PTR ds:0x64024180
64014090:	mov    eax,DWORD PTR [ebp+0xc]
64014093:	cmp    eax,0x2
64014096:	je     0x6401409e
64014098:	or     edi,0x8000
6401409e:	mov    ecx,DWORD PTR [ebp-0x4]
640140a1:	mov    ds:0x64039200,eax
640140a6:	mov    eax,DWORD PTR [ebp+0x10]
640140a9:	mov    edx,eax
640140ab:	shl    edx,0x8
640140ae:	add    edx,ecx
640140b0:	push   0x1
640140b2:	mov    DWORD PTR ds:0x64039208,edx
640140b8:	mov    ds:0x6403920c,eax
640140bd:	mov    DWORD PTR ds:0x64039210,ecx
640140c3:	mov    DWORD PTR ds:0x64039204,edi
640140c9:	call   0x640188b9
640140ce:	test   eax,eax
640140d0:	pop    ecx
640140d1:	je     0x6401404a
640140d7:	call   0x640179cc
640140dc:	test   eax,eax
640140de:	jne    0x640140ea
640140e0:	call   0x64018913
640140e5:	jmp    0x6401404a
640140ea:	call   0x64018816
640140ef:	call   DWORD PTR ds:0x640241a0
640140f5:	mov    ds:0x6403ac98,eax
640140fa:	call   0x640186e1
640140ff:	mov    ds:0x64038e98,eax
64014104:	call   0x64018115
64014109:	test   eax,eax
6401410b:	jge    0x64014114
6401410d:	call   0x640176b7
64014112:	jmp    0x640140e0
64014114:	call   0x64018628
64014119:	test   eax,eax
6401411b:	jl     0x6401413d
6401411d:	call   0x640183b5
64014122:	test   eax,eax
64014124:	jl     0x6401413d
64014126:	push   0x0
64014128:	call   0x64017f32
6401412d:	test   eax,eax
6401412f:	pop    ecx
64014130:	jne    0x6401413d
64014132:	inc    DWORD PTR ds:0x64038e94
64014138:	jmp    0x640141e9
6401413d:	call   0x64018369
64014142:	jmp    0x6401410d
64014144:	xor    edi,edi
64014146:	cmp    eax,edi
64014148:	jne    0x6401417f
6401414a:	cmp    DWORD PTR ds:0x64038e94,edi
64014150:	jle    0x6401404a
64014156:	dec    DWORD PTR ds:0x64038e94
6401415c:	cmp    DWORD PTR ds:0x6403923c,edi
64014162:	jne    0x64014169
64014164:	call   0x640180ba
64014169:	cmp    DWORD PTR [ebp+0x10],edi
6401416c:	jne    0x640141e9
6401416e:	call   0x64018369
64014173:	call   0x640176b7
64014178:	call   0x64018913
6401417d:	jmp    0x640141e9
6401417f:	cmp    eax,0x2
64014182:	jne    0x640141dd
64014184:	call   0x64017685
64014189:	push   0x214
6401418e:	push   0x1
64014190:	call   0x64015d6f
64014195:	mov    esi,eax
64014197:	cmp    esi,edi
64014199:	pop    ecx
6401419a:	pop    ecx
6401419b:	je     0x6401404a
640141a1:	push   esi
640141a2:	push   DWORD PTR ds:0x64037904
640141a8:	push   DWORD PTR ds:0x64038ec8
640141ae:	call   0x6401760e
640141b3:	pop    ecx
640141b4:	call   eax
640141b6:	test   eax,eax
640141b8:	je     0x640141d1
640141ba:	push   edi
640141bb:	push   esi
640141bc:	call   0x640176f4
640141c1:	pop    ecx
640141c2:	pop    ecx
640141c3:	call   DWORD PTR ds:0x640240bc
640141c9:	or     DWORD PTR [esi+0x4],0xffffffff
640141cd:	mov    DWORD PTR [esi],eax
640141cf:	jmp    0x640141e9
640141d1:	push   esi
640141d2:	call   0x6401475a
640141d7:	pop    ecx
640141d8:	jmp    0x6401404a
640141dd:	cmp    eax,0x3
640141e0:	jne    0x640141e9
640141e2:	push   edi
640141e3:	call   0x64017963
640141e8:	pop    ecx
640141e9:	xor    eax,eax
640141eb:	inc    eax
640141ec:	pop    edi
640141ed:	pop    esi
640141ee:	pop    ebx
640141ef:	leave  
640141f0:	ret    0xc
640141f3:	push   0xc
640141f5:	push   0x6402b6f8
640141fa:	call   0x64015f14
640141ff:	mov    edi,ecx
64014201:	mov    esi,edx
64014203:	mov    ebx,DWORD PTR [ebp+0x8]
64014206:	xor    eax,eax
64014208:	inc    eax
64014209:	mov    DWORD PTR [ebp-0x1c],eax
6401420c:	test   esi,esi
6401420e:	jne    0x6401421c
64014210:	cmp    DWORD PTR ds:0x64038e94,edx
64014216:	je     0x640142e1
6401421c:	and    DWORD PTR [ebp-0x4],0x0
64014220:	cmp    esi,eax
64014222:	je     0x64014229
64014224:	cmp    esi,0x2
64014227:	jne    0x64014257
64014229:	mov    eax,ds:0x64027c04
6401422e:	test   eax,eax
64014230:	je     0x6401423a
64014232:	push   edi
64014233:	push   esi
64014234:	push   ebx
64014235:	call   eax
64014237:	mov    DWORD PTR [ebp-0x1c],eax
6401423a:	cmp    DWORD PTR [ebp-0x1c],0x0
6401423e:	je     0x640142da
64014244:	push   edi
64014245:	push   esi
64014246:	push   ebx
64014247:	call   0x6401401a
6401424c:	mov    DWORD PTR [ebp-0x1c],eax
6401424f:	test   eax,eax
64014251:	je     0x640142da
64014257:	push   edi
64014258:	push   esi
64014259:	push   ebx
6401425a:	call   0x6400aea0
6401425f:	mov    DWORD PTR [ebp-0x1c],eax
64014262:	cmp    esi,0x1
64014265:	jne    0x6401428b
64014267:	test   eax,eax
64014269:	jne    0x6401428b
6401426b:	push   edi
6401426c:	push   eax
6401426d:	push   ebx
6401426e:	call   0x6400aea0
64014273:	push   edi
64014274:	push   0x0
64014276:	push   ebx
64014277:	call   0x6401401a
6401427c:	mov    eax,ds:0x64027c04
64014281:	test   eax,eax
64014283:	je     0x6401428b
64014285:	push   edi
64014286:	push   0x0
64014288:	push   ebx
64014289:	call   eax
6401428b:	test   esi,esi
6401428d:	je     0x64014294
6401428f:	cmp    esi,0x3
64014292:	jne    0x640142ba
64014294:	push   edi
64014295:	push   esi
64014296:	push   ebx
64014297:	call   0x6401401a
6401429c:	test   eax,eax
6401429e:	jne    0x640142a3
640142a0:	and    DWORD PTR [ebp-0x1c],eax
640142a3:	cmp    DWORD PTR [ebp-0x1c],0x0
640142a7:	je     0x640142ba
640142a9:	mov    eax,ds:0x64027c04
640142ae:	test   eax,eax
640142b0:	je     0x640142ba
640142b2:	push   edi
640142b3:	push   esi
640142b4:	push   ebx
640142b5:	call   eax
640142b7:	mov    DWORD PTR [ebp-0x1c],eax
640142ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640142c1:	mov    eax,DWORD PTR [ebp-0x1c]
640142c4:	jmp    0x640142e3
640142c6:	mov    eax,DWORD PTR [ebp-0x14]
640142c9:	mov    ecx,DWORD PTR [eax]
640142cb:	mov    ecx,DWORD PTR [ecx]
640142cd:	push   eax
640142ce:	push   ecx
640142cf:	call   0x64018ae5
640142d4:	pop    ecx
640142d5:	pop    ecx
640142d6:	ret    
640142d7:	mov    esp,DWORD PTR [ebp-0x18]
640142da:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640142e1:	xor    eax,eax
640142e3:	call   0x64015f59
640142e8:	ret    
640142e9:	cmp    DWORD PTR [esp+0x8],0x1
640142ee:	jne    0x640142f5
640142f0:	call   0x64018b00
640142f5:	push   DWORD PTR [esp+0x4]
640142f9:	mov    ecx,DWORD PTR [esp+0x10]
640142fd:	mov    edx,DWORD PTR [esp+0xc]
64014301:	call   0x640141f3
64014306:	pop    ecx
64014307:	ret    0xc
6401430a:	mov    eax,DWORD PTR [esp+0x4]
6401430e:	test   eax,eax
64014310:	je     0x64014324
64014312:	sub    eax,0x8
64014315:	cmp    DWORD PTR [eax],0xdddd
6401431b:	jne    0x64014324
6401431d:	push   eax
6401431e:	call   0x6401475a
64014323:	pop    ecx
64014324:	ret    
64014325:	mov    eax,DWORD PTR [esp+0x4]
64014329:	test   eax,eax
6401432b:	push   esi
6401432c:	mov    esi,ecx
6401432e:	mov    BYTE PTR [esi+0xc],0x0
64014332:	jne    0x64014397
64014334:	call   0x6401782a
64014339:	mov    DWORD PTR [esi+0x8],eax
6401433c:	mov    ecx,DWORD PTR [eax+0x6c]
6401433f:	mov    DWORD PTR [esi],ecx
64014341:	mov    ecx,DWORD PTR [eax+0x68]
64014344:	mov    DWORD PTR [esi+0x4],ecx
64014347:	mov    ecx,DWORD PTR [esi]
64014349:	cmp    ecx,DWORD PTR ds:0x64037ff0
6401434f:	je     0x64014363
64014351:	mov    ecx,DWORD PTR ds:0x64037f08
64014357:	test   DWORD PTR [eax+0x70],ecx
6401435a:	jne    0x64014363
6401435c:	call   0x640158d4
64014361:	mov    DWORD PTR [esi],eax
64014363:	mov    eax,DWORD PTR [esi+0x4]
64014366:	cmp    eax,DWORD PTR ds:0x64037e10
6401436c:	je     0x64014384
6401436e:	mov    eax,DWORD PTR [esi+0x8]
64014371:	mov    ecx,DWORD PTR ds:0x64037f08
64014377:	test   DWORD PTR [eax+0x70],ecx
6401437a:	jne    0x64014384
6401437c:	call   0x64018da2
64014381:	mov    DWORD PTR [esi+0x4],eax
64014384:	mov    eax,DWORD PTR [esi+0x8]
64014387:	test   BYTE PTR [eax+0x70],0x2
6401438b:	jne    0x640143a1
6401438d:	or     DWORD PTR [eax+0x70],0x2
64014391:	mov    BYTE PTR [esi+0xc],0x1
64014395:	jmp    0x640143a1
64014397:	mov    ecx,DWORD PTR [eax]
64014399:	mov    DWORD PTR [esi],ecx
6401439b:	mov    eax,DWORD PTR [eax+0x4]
6401439e:	mov    DWORD PTR [esi+0x4],eax
640143a1:	mov    eax,esi
640143a3:	pop    esi
640143a4:	ret    0x4
640143a7:	push   ebp
640143a8:	mov    ebp,esp
640143aa:	sub    esp,0xc
640143ad:	mov    eax,ds:0x64037644
640143b2:	xor    eax,ebp
640143b4:	mov    DWORD PTR [ebp-0x4],eax
640143b7:	push   esi
640143b8:	xor    esi,esi
640143ba:	cmp    ebx,esi
640143bc:	push   edi
640143bd:	jne    0x640143dd
640143bf:	call   0x640164c3
640143c4:	push   0x16
640143c6:	pop    edi
640143c7:	push   esi
640143c8:	push   esi
640143c9:	push   esi
640143ca:	push   esi
640143cb:	push   esi
640143cc:	mov    DWORD PTR [eax],edi
640143ce:	call   0x64013e52
640143d3:	add    esp,0x14
640143d6:	mov    eax,edi
640143d8:	jmp    0x6401451d
640143dd:	push   DWORD PTR [ebp+0x8]
640143e0:	push   ebx
640143e1:	call   0x6401955e
640143e6:	cmp    eax,DWORD PTR [ebp+0x8]
640143e9:	pop    ecx
640143ea:	pop    ecx
640143eb:	jb     0x640143f2
640143ed:	mov    WORD PTR [ebx],si
640143f0:	jmp    0x640143bf
640143f2:	mov    edx,DWORD PTR [ebp+0xc]
640143f5:	mov    eax,DWORD PTR [edx]
640143f7:	mov    ecx,DWORD PTR [eax+0x14]
640143fa:	cmp    ecx,esi
640143fc:	jne    0x64014428
640143fe:	cmp    WORD PTR [ebx],si
64014401:	mov    eax,ebx
64014403:	je     0x64014421
64014405:	movzx  ecx,WORD PTR [eax]
64014408:	cmp    cx,0x41
6401440c:	jb     0x6401441a
6401440e:	cmp    cx,0x5a
64014412:	ja     0x6401441a
64014414:	add    ecx,0x20
64014417:	mov    WORD PTR [eax],cx
6401441a:	inc    eax
6401441b:	inc    eax
6401441c:	cmp    WORD PTR [eax],si
6401441f:	jne    0x64014405
64014421:	xor    eax,eax
64014423:	jmp    0x6401451d
64014428:	push   DWORD PTR [eax+0x4]
6401442b:	mov    edi,0x100
64014430:	push   esi
64014431:	push   esi
64014432:	push   0xffffffff
64014434:	push   ebx
64014435:	push   edi
64014436:	push   ecx
64014437:	push   edx
64014438:	call   0x6401951e
6401443d:	mov    ecx,eax
6401443f:	add    esp,0x20
64014442:	cmp    ecx,esi
64014444:	mov    DWORD PTR [ebp-0xc],ecx
64014447:	jne    0x64014460
64014449:	call   0x640164c3
6401444e:	mov    DWORD PTR [eax],0x2a
64014454:	call   0x640164c3
64014459:	mov    eax,DWORD PTR [eax]
6401445b:	jmp    0x6401451d
64014460:	cmp    DWORD PTR [ebp+0x8],ecx
64014463:	jae    0x64014474
64014465:	mov    WORD PTR [ebx],si
64014468:	call   0x640164c3
6401446d:	push   0x22
6401446f:	jmp    0x640143c6
64014474:	cmp    ecx,esi
64014476:	jle    0x640144be
64014478:	push   0xffffffe0
6401447a:	xor    edx,edx
6401447c:	pop    eax
6401447d:	div    ecx
6401447f:	cmp    eax,0x2
64014482:	jb     0x640144be
64014484:	lea    eax,[ecx+ecx*1+0x8]
64014488:	cmp    eax,0x400
6401448d:	ja     0x640144a2
6401448f:	call   0x64013d20
64014494:	mov    eax,esp
64014496:	cmp    eax,esi
64014498:	je     0x640144b6
6401449a:	mov    DWORD PTR [eax],0xcccc
640144a0:	jmp    0x640144b3
640144a2:	push   eax
640144a3:	call   0x640148be
640144a8:	cmp    eax,esi
640144aa:	pop    ecx
640144ab:	je     0x640144b6
640144ad:	mov    DWORD PTR [eax],0xdddd
640144b3:	add    eax,0x8
640144b6:	mov    ecx,DWORD PTR [ebp-0xc]
640144b9:	mov    DWORD PTR [ebp-0x8],eax
640144bc:	jmp    0x640144c1
640144be:	mov    DWORD PTR [ebp-0x8],esi
640144c1:	cmp    DWORD PTR [ebp-0x8],esi
640144c4:	jne    0x640144d3
640144c6:	call   0x640164c3
640144cb:	mov    DWORD PTR [eax],0xc
640144d1:	jmp    0x64014454
640144d3:	mov    edx,DWORD PTR [ebp+0xc]
640144d6:	mov    eax,DWORD PTR [edx]
640144d8:	push   DWORD PTR [eax+0x4]
640144db:	push   ecx
640144dc:	push   DWORD PTR [ebp-0x8]
640144df:	push   0xffffffff
640144e1:	push   ebx
640144e2:	push   edi
640144e3:	push   DWORD PTR [eax+0x14]
640144e6:	push   edx
640144e7:	call   0x6401951e
640144ec:	add    esp,0x20
640144ef:	test   eax,eax
640144f1:	je     0x64014506
640144f3:	push   DWORD PTR [ebp-0x8]
640144f6:	push   DWORD PTR [ebp+0x8]
640144f9:	push   ebx
640144fa:	call   0x64019251
640144ff:	add    esp,0xc
64014502:	mov    esi,eax
64014504:	jmp    0x64014512
64014506:	call   0x640164c3
6401450b:	push   0x2a
6401450d:	pop    ecx
6401450e:	mov    DWORD PTR [eax],ecx
64014510:	mov    esi,ecx
64014512:	push   DWORD PTR [ebp-0x8]
64014515:	call   0x6401430a
6401451a:	pop    ecx
6401451b:	mov    eax,esi
6401451d:	lea    esp,[ebp-0x14]
64014520:	pop    edi
64014521:	pop    esi
64014522:	mov    ecx,DWORD PTR [ebp-0x4]
64014525:	xor    ecx,ebp
64014527:	call   0x64013d06
6401452c:	leave  
6401452d:	ret    
6401452e:	push   ebp
6401452f:	mov    ebp,esp
64014531:	sub    esp,0x10
64014534:	push   ebx
64014535:	push   DWORD PTR [ebp+0x10]
64014538:	lea    ecx,[ebp-0x10]
6401453b:	call   0x64014325
64014540:	mov    ebx,DWORD PTR [ebp+0x8]
64014543:	lea    eax,[ebp-0x10]
64014546:	push   eax
64014547:	push   DWORD PTR [ebp+0xc]
6401454a:	call   0x640143a7
6401454f:	cmp    BYTE PTR [ebp-0x4],0x0
64014553:	pop    ecx
64014554:	pop    ecx
64014555:	pop    ebx
64014556:	je     0x6401455f
64014558:	mov    ecx,DWORD PTR [ebp-0x8]
6401455b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401455f:	leave  
64014560:	ret    
64014561:	push   0x0
64014563:	push   DWORD PTR [esp+0xc]
64014567:	push   DWORD PTR [esp+0xc]
6401456b:	call   0x6401452e
64014570:	add    esp,0xc
64014573:	ret    
64014574:	jmp    0x64013644
64014579:	push   ebx
6401457a:	push   esi
6401457b:	mov    esi,DWORD PTR [esp+0xc]
6401457f:	push   edi
64014580:	xor    edi,edi
64014582:	or     ebx,0xffffffff
64014585:	cmp    esi,edi
64014587:	jne    0x640145a5
64014589:	call   0x640164c3
6401458e:	push   edi
6401458f:	push   edi
64014590:	push   edi
64014591:	push   edi
64014592:	push   edi
64014593:	mov    DWORD PTR [eax],0x16
64014599:	call   0x64013e52
6401459e:	add    esp,0x14
640145a1:	or     eax,ebx
640145a3:	jmp    0x640145e7
640145a5:	test   BYTE PTR [esi+0xc],0x83
640145a9:	je     0x640145e2
640145ab:	push   esi
640145ac:	call   0x640198c8
640145b1:	push   esi
640145b2:	mov    ebx,eax
640145b4:	call   0x6401989c
640145b9:	push   esi
640145ba:	call   0x6401986f
640145bf:	push   eax
640145c0:	call   0x64014bb8
640145c5:	add    esp,0x10
640145c8:	test   eax,eax
640145ca:	jge    0x640145d1
640145cc:	or     ebx,0xffffffff
640145cf:	jmp    0x640145e2
640145d1:	mov    eax,DWORD PTR [esi+0x1c]
640145d4:	cmp    eax,edi
640145d6:	je     0x640145e2
640145d8:	push   eax
640145d9:	call   0x6401475a
640145de:	pop    ecx
640145df:	mov    DWORD PTR [esi+0x1c],edi
640145e2:	mov    DWORD PTR [esi+0xc],edi
640145e5:	mov    eax,ebx
640145e7:	pop    edi
640145e8:	pop    esi
640145e9:	pop    ebx
640145ea:	ret    
640145eb:	push   0xc
640145ed:	push   0x6402b718
640145f2:	call   0x64015f14
640145f7:	or     DWORD PTR [ebp-0x1c],0xffffffff
640145fb:	xor    eax,eax
640145fd:	mov    esi,DWORD PTR [ebp+0x8]
64014600:	xor    edi,edi
64014602:	cmp    esi,edi
64014604:	setne  al
64014607:	cmp    eax,edi
64014609:	jne    0x64014628
6401460b:	call   0x640164c3
64014610:	mov    DWORD PTR [eax],0x16
64014616:	push   edi
64014617:	push   edi
64014618:	push   edi
64014619:	push   edi
6401461a:	push   edi
6401461b:	call   0x64013e52
64014620:	add    esp,0x14
64014623:	or     eax,0xffffffff
64014626:	jmp    0x64014634
64014628:	test   BYTE PTR [esi+0xc],0x40
6401462c:	je     0x6401463a
6401462e:	mov    DWORD PTR [esi+0xc],edi
64014631:	mov    eax,DWORD PTR [ebp-0x1c]
64014634:	call   0x64015f59
64014639:	ret    
6401463a:	push   esi
6401463b:	call   0x64019651
64014640:	pop    ecx
64014641:	mov    DWORD PTR [ebp-0x4],edi
64014644:	push   esi
64014645:	call   0x64014579
6401464a:	pop    ecx
6401464b:	mov    DWORD PTR [ebp-0x1c],eax
6401464e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014655:	call   0x6401465f
6401465a:	jmp    0x64014631
6401465c:	mov    esi,DWORD PTR [ebp+0x8]
6401465f:	push   esi
64014660:	call   0x640196bb
64014665:	pop    ecx
64014666:	ret    
64014667:	push   ebp
64014668:	mov    ebp,esp
6401466a:	sub    esp,0x20
6401466d:	push   ebx
6401466e:	xor    ebx,ebx
64014670:	cmp    DWORD PTR [ebp+0xc],ebx
64014673:	jne    0x64014692
64014675:	call   0x640164c3
6401467a:	push   ebx
6401467b:	push   ebx
6401467c:	push   ebx
6401467d:	push   ebx
6401467e:	push   ebx
6401467f:	mov    DWORD PTR [eax],0x16
64014685:	call   0x64013e52
6401468a:	add    esp,0x14
6401468d:	or     eax,0xffffffff
64014690:	jmp    0x640146df
64014692:	mov    eax,DWORD PTR [ebp+0x8]
64014695:	cmp    eax,ebx
64014697:	je     0x64014675
64014699:	push   esi
6401469a:	mov    DWORD PTR [ebp-0x18],eax
6401469d:	mov    DWORD PTR [ebp-0x20],eax
640146a0:	lea    eax,[ebp+0x10]
640146a3:	push   eax
640146a4:	push   ebx
640146a5:	push   DWORD PTR [ebp+0xc]
640146a8:	lea    eax,[ebp-0x20]
640146ab:	push   eax
640146ac:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640146b3:	mov    DWORD PTR [ebp-0x14],0x42
640146ba:	call   0x64019c50
640146bf:	add    esp,0x10
640146c2:	dec    DWORD PTR [ebp-0x1c]
640146c5:	mov    esi,eax
640146c7:	js     0x640146d0
640146c9:	mov    eax,DWORD PTR [ebp-0x20]
640146cc:	mov    BYTE PTR [eax],bl
640146ce:	jmp    0x640146dc
640146d0:	lea    eax,[ebp-0x20]
640146d3:	push   eax
640146d4:	push   ebx
640146d5:	call   0x64019a4f
640146da:	pop    ecx
640146db:	pop    ecx
640146dc:	mov    eax,esi
640146de:	pop    esi
640146df:	pop    ebx
640146e0:	leave  
640146e1:	ret    
640146e2:	push   ebp
640146e3:	mov    ebp,esp
640146e5:	sub    esp,0x10
640146e8:	push   DWORD PTR [ebp+0xc]
640146eb:	lea    ecx,[ebp-0x10]
640146ee:	call   0x64014325
640146f3:	mov    eax,DWORD PTR [ebp-0x10]
640146f6:	cmp    DWORD PTR [eax+0xac],0x1
640146fd:	jle    0x64014712
640146ff:	lea    eax,[ebp-0x10]
64014702:	push   eax
64014703:	push   0x4
64014705:	push   DWORD PTR [ebp+0x8]
64014708:	call   0x6401a5e4
6401470d:	add    esp,0xc
64014710:	jmp    0x64014722
64014712:	mov    eax,DWORD PTR [eax+0xc8]
64014718:	mov    ecx,DWORD PTR [ebp+0x8]
6401471b:	movzx  eax,BYTE PTR [eax+ecx*2]
6401471f:	and    eax,0x4
64014722:	cmp    BYTE PTR [ebp-0x4],0x0
64014726:	je     0x6401472f
64014728:	mov    ecx,DWORD PTR [ebp-0x8]
6401472b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401472f:	leave  
64014730:	ret    
64014731:	cmp    DWORD PTR ds:0x64038ea8,0x0
64014738:	jne    0x6401474c
6401473a:	mov    eax,DWORD PTR [esp+0x4]
6401473e:	mov    ecx,DWORD PTR ds:0x64037fe0
64014744:	movzx  eax,BYTE PTR [ecx+eax*2]
64014748:	and    eax,0x4
6401474b:	ret    
6401474c:	push   0x0
6401474e:	push   DWORD PTR [esp+0x8]
64014752:	call   0x640146e2
64014757:	pop    ecx
64014758:	pop    ecx
64014759:	ret    
6401475a:	push   0xc
6401475c:	push   0x6402b738
64014761:	call   0x64015f14
64014766:	mov    esi,DWORD PTR [ebp+0x8]
64014769:	test   esi,esi
6401476b:	je     0x640147e2
6401476d:	cmp    DWORD PTR ds:0x6403ab64,0x3
64014774:	jne    0x640147b9
64014776:	push   0x4
64014778:	call   0x6401af0e
6401477d:	pop    ecx
6401477e:	and    DWORD PTR [ebp-0x4],0x0
64014782:	push   esi
64014783:	call   0x6401af87
64014788:	pop    ecx
64014789:	mov    DWORD PTR [ebp-0x1c],eax
6401478c:	test   eax,eax
6401478e:	je     0x64014799
64014790:	push   esi
64014791:	push   eax
64014792:	call   0x6401afb2
64014797:	pop    ecx
64014798:	pop    ecx
64014799:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640147a0:	call   0x640147b0
640147a5:	cmp    DWORD PTR [ebp-0x1c],0x0
640147a9:	jne    0x640147e2
640147ab:	push   DWORD PTR [ebp+0x8]
640147ae:	jmp    0x640147ba
640147b0:	push   0x4
640147b2:	call   0x6401ae36
640147b7:	pop    ecx
640147b8:	ret    
640147b9:	push   esi
640147ba:	push   0x0
640147bc:	push   DWORD PTR ds:0x64039354
640147c2:	call   DWORD PTR ds:0x64024180
640147c8:	test   eax,eax
640147ca:	jne    0x640147e2
640147cc:	call   0x640164c3
640147d1:	mov    esi,eax
640147d3:	call   DWORD PTR ds:0x64024064
640147d9:	push   eax
640147da:	call   0x64016488
640147df:	mov    DWORD PTR [esi],eax
640147e1:	pop    ecx
640147e2:	call   0x64015f59
640147e7:	ret    
640147e8:	mov    eax,DWORD PTR [esp+0x4]
640147ec:	mov    dx,WORD PTR [esp+0x8]
640147f1:	jmp    0x640147fa
640147f3:	cmp    cx,dx
640147f6:	je     0x64014809
640147f8:	inc    eax
640147f9:	inc    eax
640147fa:	movzx  ecx,WORD PTR [eax]
640147fd:	test   cx,cx
64014800:	jne    0x640147f3
64014802:	cmp    WORD PTR [eax],dx
64014805:	je     0x64014809
64014807:	xor    eax,eax
64014809:	ret    
6401480a:	cmp    DWORD PTR [esp+0x8],0x0
6401480f:	je     0x64014817
64014811:	mov    BYTE PTR [ecx],0x2d
64014814:	inc    ecx
64014815:	neg    eax
64014817:	push   esi
64014818:	mov    esi,ecx
6401481a:	xor    edx,edx
6401481c:	div    DWORD PTR [esp+0x8]
64014820:	cmp    edx,0x9
64014823:	jbe    0x6401482a
64014825:	add    dl,0x57
64014828:	jmp    0x6401482d
6401482a:	add    dl,0x30
6401482d:	mov    BYTE PTR [ecx],dl
6401482f:	inc    ecx
64014830:	test   eax,eax
64014832:	ja     0x6401481a
64014834:	mov    BYTE PTR [ecx],0x0
64014837:	dec    ecx
64014838:	mov    dl,BYTE PTR [esi]
6401483a:	mov    al,BYTE PTR [ecx]
6401483c:	mov    BYTE PTR [ecx],dl
6401483e:	dec    ecx
6401483f:	mov    BYTE PTR [esi],al
64014841:	inc    esi
64014842:	cmp    esi,ecx
64014844:	jb     0x64014838
64014846:	pop    esi
64014847:	ret    0x8
6401484a:	push   ebp
6401484b:	mov    ebp,esp
6401484d:	xor    eax,eax
6401484f:	cmp    DWORD PTR [ebp+0x10],0xa
64014853:	jne    0x6401485b
64014855:	cmp    DWORD PTR [ebp+0x8],eax
64014858:	jge    0x6401485b
6401485a:	inc    eax
6401485b:	mov    ecx,DWORD PTR [ebp+0xc]
6401485e:	push   eax
6401485f:	push   DWORD PTR [ebp+0x10]
64014862:	mov    eax,DWORD PTR [ebp+0x8]
64014865:	call   0x6401480a
6401486a:	mov    eax,DWORD PTR [ebp+0xc]
6401486d:	pop    ebp
6401486e:	ret    
6401486f:	push   0xc
64014871:	push   0x6402b758
64014876:	call   0x64015f14
6401487b:	and    DWORD PTR [ebp-0x1c],0x0
6401487f:	mov    esi,DWORD PTR [ebp+0x8]
64014882:	cmp    esi,DWORD PTR ds:0x64039b30
64014888:	ja     0x640148ac
6401488a:	push   0x4
6401488c:	call   0x6401af0e
64014891:	pop    ecx
64014892:	and    DWORD PTR [ebp-0x4],0x0
64014896:	push   esi
64014897:	call   0x6401b75b
6401489c:	pop    ecx
6401489d:	mov    DWORD PTR [ebp-0x1c],eax
640148a0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640148a7:	call   0x640148b5
640148ac:	mov    eax,DWORD PTR [ebp-0x1c]
640148af:	call   0x64015f59
640148b4:	ret    
640148b5:	push   0x4
640148b7:	call   0x6401ae36
640148bc:	pop    ecx
640148bd:	ret    
640148be:	push   ebp
640148bf:	mov    ebp,DWORD PTR [esp+0x8]
640148c3:	cmp    ebp,0xffffffe0
640148c6:	ja     0x6401496b
640148cc:	push   ebx
640148cd:	mov    ebx,DWORD PTR ds:0x6402417c
640148d3:	push   esi
640148d4:	push   edi
640148d5:	xor    esi,esi
640148d7:	cmp    DWORD PTR ds:0x64039354,esi
640148dd:	mov    edi,ebp
640148df:	jne    0x640148f9
640148e1:	call   0x6401bcad
640148e6:	push   0x1e
640148e8:	call   0x6401bb0d
640148ed:	push   0xff
640148f2:	call   0x64017e60
640148f7:	pop    ecx
640148f8:	pop    ecx
640148f9:	mov    eax,ds:0x6403ab64
640148fe:	cmp    eax,0x1
64014901:	jne    0x64014911
64014903:	cmp    ebp,esi
64014905:	je     0x6401490b
64014907:	mov    eax,ebp
64014909:	jmp    0x6401490e
6401490b:	xor    eax,eax
6401490d:	inc    eax
6401490e:	push   eax
6401490f:	jmp    0x6401492f
64014911:	cmp    eax,0x3
64014914:	jne    0x64014921
64014916:	push   ebp
64014917:	call   0x6401486f
6401491c:	cmp    eax,esi
6401491e:	pop    ecx
6401491f:	jne    0x64014938
64014921:	cmp    ebp,esi
64014923:	jne    0x64014928
64014925:	xor    edi,edi
64014927:	inc    edi
64014928:	add    edi,0xf
6401492b:	and    edi,0xfffffff0
6401492e:	push   edi
6401492f:	push   esi
64014930:	push   DWORD PTR ds:0x64039354
64014936:	call   ebx
64014938:	mov    esi,eax
6401493a:	test   esi,esi
6401493c:	jne    0x64014964
6401493e:	cmp    DWORD PTR ds:0x6403980c,eax
64014944:	push   0xc
64014946:	pop    edi
64014947:	je     0x64014956
64014949:	push   ebp
6401494a:	call   0x6401687f
6401494f:	test   eax,eax
64014951:	pop    ecx
64014952:	jne    0x640148d5
64014954:	jmp    0x6401495d
64014956:	call   0x640164c3
6401495b:	mov    DWORD PTR [eax],edi
6401495d:	call   0x640164c3
64014962:	mov    DWORD PTR [eax],edi
64014964:	pop    edi
64014965:	mov    eax,esi
64014967:	pop    esi
64014968:	pop    ebx
64014969:	pop    ebp
6401496a:	ret    
6401496b:	push   ebp
6401496c:	call   0x6401687f
64014971:	pop    ecx
64014972:	call   0x640164c3
64014977:	mov    DWORD PTR [eax],0xc
6401497d:	xor    eax,eax
6401497f:	pop    ebp
64014980:	ret    
64014981:	push   ebp
64014982:	mov    ebp,esp
64014984:	sub    esp,0x10
64014987:	push   ebx
64014988:	push   esi
64014989:	push   DWORD PTR [ebp+0x10]
6401498c:	lea    ecx,[ebp-0x10]
6401498f:	call   0x64014325
64014994:	mov    ebx,DWORD PTR [ebp+0x8]
64014997:	xor    esi,esi
64014999:	cmp    ebx,esi
6401499b:	jne    0x640149cc
6401499d:	call   0x640164c3
640149a2:	push   esi
640149a3:	push   esi
640149a4:	push   esi
640149a5:	push   esi
640149a6:	push   esi
640149a7:	mov    DWORD PTR [eax],0x16
640149ad:	call   0x64013e52
640149b2:	add    esp,0x14
640149b5:	cmp    BYTE PTR [ebp-0x4],0x0
640149b9:	je     0x640149c2
640149bb:	mov    eax,DWORD PTR [ebp-0x8]
640149be:	and    DWORD PTR [eax+0x70],0xfffffffd
640149c2:	mov    eax,0x7fffffff
640149c7:	jmp    0x64014a8c
640149cc:	push   edi
640149cd:	mov    edi,DWORD PTR [ebp+0xc]
640149d0:	cmp    edi,esi
640149d2:	jne    0x64014a03
640149d4:	call   0x640164c3
640149d9:	push   esi
640149da:	push   esi
640149db:	push   esi
640149dc:	push   esi
640149dd:	push   esi
640149de:	mov    DWORD PTR [eax],0x16
640149e4:	call   0x64013e52
640149e9:	add    esp,0x14
640149ec:	cmp    BYTE PTR [ebp-0x4],0x0
640149f0:	je     0x640149f9
640149f2:	mov    eax,DWORD PTR [ebp-0x8]
640149f5:	and    DWORD PTR [eax+0x70],0xfffffffd
640149f9:	mov    eax,0x7fffffff
640149fe:	jmp    0x64014a8b
64014a03:	mov    eax,DWORD PTR [ebp-0x10]
64014a06:	cmp    DWORD PTR [eax+0x14],esi
64014a09:	jne    0x64014a45
64014a0b:	movzx  eax,WORD PTR [ebx]
64014a0e:	cmp    ax,0x41
64014a12:	jb     0x64014a1d
64014a14:	cmp    ax,0x5a
64014a18:	ja     0x64014a1d
64014a1a:	add    eax,0x20
64014a1d:	movzx  esi,ax
64014a20:	movzx  eax,WORD PTR [edi]
64014a23:	cmp    ax,0x41
64014a27:	jb     0x64014a32
64014a29:	cmp    ax,0x5a
64014a2d:	ja     0x64014a32
64014a2f:	add    eax,0x20
64014a32:	inc    ebx
64014a33:	inc    ebx
64014a34:	inc    edi
64014a35:	inc    edi
64014a36:	test   si,si
64014a39:	movzx  eax,ax
64014a3c:	je     0x64014a76
64014a3e:	cmp    si,ax
64014a41:	je     0x64014a0b
64014a43:	jmp    0x64014a76
64014a45:	movzx  eax,WORD PTR [ebx]
64014a48:	lea    ecx,[ebp-0x10]
64014a4b:	push   ecx
64014a4c:	push   eax
64014a4d:	call   0x6401bce6
64014a52:	movzx  esi,ax
64014a55:	movzx  eax,WORD PTR [edi]
64014a58:	lea    ecx,[ebp-0x10]
64014a5b:	push   ecx
64014a5c:	inc    ebx
64014a5d:	push   eax
64014a5e:	inc    ebx
64014a5f:	call   0x6401bce6
64014a64:	add    esp,0x10
64014a67:	inc    edi
64014a68:	inc    edi
64014a69:	test   si,si
64014a6c:	movzx  eax,ax
64014a6f:	je     0x64014a76
64014a71:	cmp    si,ax
64014a74:	je     0x64014a45
64014a76:	movzx  ecx,ax
64014a79:	movzx  eax,si
64014a7c:	sub    eax,ecx
64014a7e:	cmp    BYTE PTR [ebp-0x4],0x0
64014a82:	je     0x64014a8b
64014a84:	mov    ecx,DWORD PTR [ebp-0x8]
64014a87:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014a8b:	pop    edi
64014a8c:	pop    esi
64014a8d:	pop    ebx
64014a8e:	leave  
64014a8f:	ret    
64014a90:	push   esi
64014a91:	xor    esi,esi
64014a93:	cmp    DWORD PTR ds:0x64038ea8,esi
64014a99:	push   edi
64014a9a:	jne    0x64014b0d
64014a9c:	mov    edi,DWORD PTR [esp+0xc]
64014aa0:	cmp    edi,esi
64014aa2:	jne    0x64014ac3
64014aa4:	call   0x640164c3
64014aa9:	push   esi
64014aaa:	push   esi
64014aab:	push   esi
64014aac:	push   esi
64014aad:	push   esi
64014aae:	mov    DWORD PTR [eax],0x16
64014ab4:	call   0x64013e52
64014ab9:	add    esp,0x14
64014abc:	mov    eax,0x7fffffff
64014ac1:	jmp    0x64014b1e
64014ac3:	mov    edx,DWORD PTR [esp+0x10]
64014ac7:	cmp    edx,esi
64014ac9:	je     0x64014aa4
64014acb:	movzx  eax,WORD PTR [edi]
64014ace:	cmp    ax,0x41
64014ad2:	jb     0x64014add
64014ad4:	cmp    ax,0x5a
64014ad8:	ja     0x64014add
64014ada:	add    eax,0x20
64014add:	movzx  ecx,ax
64014ae0:	movzx  eax,WORD PTR [edx]
64014ae3:	cmp    ax,0x41
64014ae7:	jb     0x64014af2
64014ae9:	cmp    ax,0x5a
64014aed:	ja     0x64014af2
64014aef:	add    eax,0x20
64014af2:	inc    edi
64014af3:	inc    edi
64014af4:	inc    edx
64014af5:	inc    edx
64014af6:	cmp    cx,si
64014af9:	movzx  eax,ax
64014afc:	je     0x64014b03
64014afe:	cmp    cx,ax
64014b01:	je     0x64014acb
64014b03:	movzx  edx,ax
64014b06:	movzx  eax,cx
64014b09:	sub    eax,edx
64014b0b:	jmp    0x64014b1e
64014b0d:	push   esi
64014b0e:	push   DWORD PTR [esp+0x14]
64014b12:	push   DWORD PTR [esp+0x14]
64014b16:	call   0x64014981
64014b1b:	add    esp,0xc
64014b1e:	pop    edi
64014b1f:	pop    esi
64014b20:	ret    
64014b21:	push   esi
64014b22:	mov    esi,DWORD PTR [esp+0x8]
64014b26:	push   edi
64014b27:	push   esi
64014b28:	call   0x6401be14
64014b2d:	cmp    eax,0xffffffff
64014b30:	pop    ecx
64014b31:	je     0x64014b83
64014b33:	cmp    esi,0x1
64014b36:	mov    eax,ds:0x6403ab80
64014b3b:	jne    0x64014b46
64014b3d:	test   BYTE PTR [eax+0x84],0x1
64014b44:	jne    0x64014b51
64014b46:	cmp    esi,0x2
64014b49:	jne    0x64014b67
64014b4b:	test   BYTE PTR [eax+0x44],0x1
64014b4f:	je     0x64014b67
64014b51:	push   0x2
64014b53:	call   0x6401be14
64014b58:	push   0x1
64014b5a:	mov    edi,eax
64014b5c:	call   0x6401be14
64014b61:	cmp    eax,edi
64014b63:	pop    ecx
64014b64:	pop    ecx
64014b65:	je     0x64014b83
64014b67:	push   esi
64014b68:	call   0x6401be14
64014b6d:	pop    ecx
64014b6e:	push   eax
64014b6f:	call   DWORD PTR ds:0x6402406c
64014b75:	test   eax,eax
64014b77:	jne    0x64014b83
64014b79:	call   DWORD PTR ds:0x64024064
64014b7f:	mov    edi,eax
64014b81:	jmp    0x64014b85
64014b83:	xor    edi,edi
64014b85:	push   esi
64014b86:	call   0x6401bd93
64014b8b:	mov    eax,esi
64014b8d:	sar    eax,0x5
64014b90:	mov    eax,DWORD PTR [eax*4+0x6403ab80]
64014b97:	and    esi,0x1f
64014b9a:	shl    esi,0x6
64014b9d:	test   edi,edi
64014b9f:	pop    ecx
64014ba0:	mov    BYTE PTR [eax+esi*1+0x4],0x0
64014ba5:	je     0x64014bb3
64014ba7:	push   edi
64014ba8:	call   0x640164e9
64014bad:	pop    ecx
64014bae:	or     eax,0xffffffff
64014bb1:	jmp    0x64014bb5
64014bb3:	xor    eax,eax
64014bb5:	pop    edi
64014bb6:	pop    esi
64014bb7:	ret    
64014bb8:	push   0x10
64014bba:	push   0x6402b778
64014bbf:	call   0x64015f14
64014bc4:	mov    eax,DWORD PTR [ebp+0x8]
64014bc7:	cmp    eax,0xfffffffe
64014bca:	jne    0x64014be7
64014bcc:	call   0x640164d6
64014bd1:	and    DWORD PTR [eax],0x0
64014bd4:	call   0x640164c3
64014bd9:	mov    DWORD PTR [eax],0x9
64014bdf:	or     eax,0xffffffff
64014be2:	jmp    0x64014c75
64014be7:	xor    edi,edi
64014be9:	cmp    eax,edi
64014beb:	jl     0x64014bf5
64014bed:	cmp    eax,DWORD PTR ds:0x6403ab68
64014bf3:	jb     0x64014c16
64014bf5:	call   0x640164d6
64014bfa:	mov    DWORD PTR [eax],edi
64014bfc:	call   0x640164c3
64014c01:	mov    DWORD PTR [eax],0x9
64014c07:	push   edi
64014c08:	push   edi
64014c09:	push   edi
64014c0a:	push   edi
64014c0b:	push   edi
64014c0c:	call   0x64013e52
64014c11:	add    esp,0x14
64014c14:	jmp    0x64014bdf
64014c16:	mov    ecx,eax
64014c18:	sar    ecx,0x5
64014c1b:	lea    ebx,[ecx*4+0x6403ab80]
64014c22:	mov    esi,eax
64014c24:	and    esi,0x1f
64014c27:	shl    esi,0x6
64014c2a:	mov    ecx,DWORD PTR [ebx]
64014c2c:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
64014c31:	and    ecx,0x1
64014c34:	je     0x64014bf5
64014c36:	push   eax
64014c37:	call   0x6401be85
64014c3c:	pop    ecx
64014c3d:	mov    DWORD PTR [ebp-0x4],edi
64014c40:	mov    eax,DWORD PTR [ebx]
64014c42:	test   BYTE PTR [eax+esi*1+0x4],0x1
64014c47:	je     0x64014c57
64014c49:	push   DWORD PTR [ebp+0x8]
64014c4c:	call   0x64014b21
64014c51:	pop    ecx
64014c52:	mov    DWORD PTR [ebp-0x1c],eax
64014c55:	jmp    0x64014c66
64014c57:	call   0x640164c3
64014c5c:	mov    DWORD PTR [eax],0x9
64014c62:	or     DWORD PTR [ebp-0x1c],0xffffffff
64014c66:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014c6d:	call   0x64014c7b
64014c72:	mov    eax,DWORD PTR [ebp-0x1c]
64014c75:	call   0x64015f59
64014c7a:	ret    
64014c7b:	push   DWORD PTR [ebp+0x8]
64014c7e:	call   0x6401bf25
64014c83:	pop    ecx
64014c84:	ret    
64014c85:	mov    eax,DWORD PTR [esp+0x4]
64014c89:	mov    edx,eax
64014c8b:	mov    cx,WORD PTR [eax]
64014c8e:	inc    eax
64014c8f:	inc    eax
64014c90:	test   cx,cx
64014c93:	jne    0x64014c8b
64014c95:	mov    cx,WORD PTR [esp+0x8]
64014c9a:	dec    eax
64014c9b:	dec    eax
64014c9c:	cmp    eax,edx
64014c9e:	je     0x64014ca5
64014ca0:	cmp    WORD PTR [eax],cx
64014ca3:	jne    0x64014c9a
64014ca5:	mov    dx,WORD PTR [eax]
64014ca8:	sub    dx,cx
64014cab:	neg    dx
64014cae:	sbb    edx,edx
64014cb0:	not    edx
64014cb2:	and    eax,edx
64014cb4:	ret    
64014cb5:	push   ebp
64014cb6:	mov    ebp,esp
64014cb8:	sub    esp,0x18
64014cbb:	push   ebx
64014cbc:	push   esi
64014cbd:	push   DWORD PTR [ebp+0xc]
64014cc0:	lea    ecx,[ebp-0x18]
64014cc3:	call   0x64014325
64014cc8:	mov    ebx,DWORD PTR [ebp+0x8]
64014ccb:	mov    esi,0x100
64014cd0:	cmp    ebx,esi
64014cd2:	jae    0x64014d28
64014cd4:	mov    ecx,DWORD PTR [ebp-0x18]
64014cd7:	cmp    DWORD PTR [ecx+0xac],0x1
64014cde:	jle    0x64014cf4
64014ce0:	lea    eax,[ebp-0x18]
64014ce3:	push   eax
64014ce4:	push   0x1
64014ce6:	push   ebx
64014ce7:	call   0x6401a5e4
64014cec:	mov    ecx,DWORD PTR [ebp-0x18]
64014cef:	add    esp,0xc
64014cf2:	jmp    0x64014d01
64014cf4:	mov    eax,DWORD PTR [ecx+0xc8]
64014cfa:	movzx  eax,BYTE PTR [eax+ebx*2]
64014cfe:	and    eax,0x1
64014d01:	test   eax,eax
64014d03:	je     0x64014d14
64014d05:	mov    eax,DWORD PTR [ecx+0xcc]
64014d0b:	movzx  eax,BYTE PTR [eax+ebx*1]
64014d0f:	jmp    0x64014dbb
64014d14:	cmp    BYTE PTR [ebp-0xc],0x0
64014d18:	je     0x64014d21
64014d1a:	mov    eax,DWORD PTR [ebp-0x10]
64014d1d:	and    DWORD PTR [eax+0x70],0xfffffffd
64014d21:	mov    eax,ebx
64014d23:	jmp    0x64014dc8
64014d28:	mov    eax,DWORD PTR [ebp-0x18]
64014d2b:	cmp    DWORD PTR [eax+0xac],0x1
64014d32:	jle    0x64014d65
64014d34:	mov    DWORD PTR [ebp+0x8],ebx
64014d37:	sar    DWORD PTR [ebp+0x8],0x8
64014d3b:	lea    eax,[ebp-0x18]
64014d3e:	push   eax
64014d3f:	mov    eax,DWORD PTR [ebp+0x8]
64014d42:	and    eax,0xff
64014d47:	push   eax
64014d48:	call   0x64015117
64014d4d:	test   eax,eax
64014d4f:	pop    ecx
64014d50:	pop    ecx
64014d51:	je     0x64014d65
64014d53:	mov    al,BYTE PTR [ebp+0x8]
64014d56:	push   0x2
64014d58:	mov    BYTE PTR [ebp-0x4],al
64014d5b:	mov    BYTE PTR [ebp-0x3],bl
64014d5e:	mov    BYTE PTR [ebp-0x2],0x0
64014d62:	pop    ecx
64014d63:	jmp    0x64014d7a
64014d65:	call   0x640164c3
64014d6a:	mov    DWORD PTR [eax],0x2a
64014d70:	xor    ecx,ecx
64014d72:	mov    BYTE PTR [ebp-0x4],bl
64014d75:	mov    BYTE PTR [ebp-0x3],0x0
64014d79:	inc    ecx
64014d7a:	mov    eax,DWORD PTR [ebp-0x18]
64014d7d:	push   0x1
64014d7f:	push   DWORD PTR [eax+0x4]
64014d82:	lea    edx,[ebp-0x8]
64014d85:	push   0x3
64014d87:	push   edx
64014d88:	push   ecx
64014d89:	lea    ecx,[ebp-0x4]
64014d8c:	push   ecx
64014d8d:	push   esi
64014d8e:	push   DWORD PTR [eax+0x14]
64014d91:	lea    eax,[ebp-0x18]
64014d94:	push   eax
64014d95:	call   0x64015cec
64014d9a:	add    esp,0x24
64014d9d:	test   eax,eax
64014d9f:	je     0x64014d14
64014da5:	cmp    eax,0x1
64014da8:	jne    0x64014db0
64014daa:	movzx  eax,BYTE PTR [ebp-0x8]
64014dae:	jmp    0x64014dbb
64014db0:	movzx  ecx,BYTE PTR [ebp-0x7]
64014db4:	xor    eax,eax
64014db6:	mov    ah,BYTE PTR [ebp-0x8]
64014db9:	or     eax,ecx
64014dbb:	cmp    BYTE PTR [ebp-0xc],0x0
64014dbf:	je     0x64014dc8
64014dc1:	mov    ecx,DWORD PTR [ebp-0x10]
64014dc4:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014dc8:	pop    esi
64014dc9:	pop    ebx
64014dca:	leave  
64014dcb:	ret    
64014dcc:	cmp    DWORD PTR ds:0x64038ea8,0x0
64014dd3:	jne    0x64014de5
64014dd5:	mov    eax,DWORD PTR [esp+0x4]
64014dd9:	lea    ecx,[eax-0x41]
64014ddc:	cmp    ecx,0x19
64014ddf:	ja     0x64014df2
64014de1:	add    eax,0x20
64014de4:	ret    
64014de5:	push   0x0
64014de7:	push   DWORD PTR [esp+0x8]
64014deb:	call   0x64014cb5
64014df0:	pop    ecx
64014df1:	pop    ecx
64014df2:	ret    
64014df3:	mov    ecx,DWORD PTR [esp+0xc]
64014df7:	test   ecx,ecx
64014df9:	push   esi
64014dfa:	push   edi
64014dfb:	mov    edi,DWORD PTR [esp+0xc]
64014dff:	mov    esi,edi
64014e01:	je     0x64014e2b
64014e03:	mov    edx,DWORD PTR [esp+0x10]
64014e07:	movzx  eax,WORD PTR [edx]
64014e0a:	mov    WORD PTR [edi],ax
64014e0d:	inc    edi
64014e0e:	inc    edi
64014e0f:	inc    edx
64014e10:	inc    edx
64014e11:	test   ax,ax
64014e14:	je     0x64014e19
64014e16:	dec    ecx
64014e17:	jne    0x64014e07
64014e19:	test   ecx,ecx
64014e1b:	je     0x64014e2b
64014e1d:	dec    ecx
64014e1e:	je     0x64014e2b
64014e20:	xor    eax,eax
64014e22:	shr    ecx,1
64014e24:	rep stos DWORD PTR es:[edi],eax
64014e26:	adc    ecx,ecx
64014e28:	rep stos WORD PTR es:[edi],ax
64014e2b:	pop    edi
64014e2c:	mov    eax,esi
64014e2e:	pop    esi
64014e2f:	ret    
64014e30:	push   ebp
64014e31:	mov    ebp,esp
64014e33:	cmp    DWORD PTR [ebp+0x14],0x0
64014e37:	push   ebx
64014e38:	mov    ebx,DWORD PTR [ebp+0x8]
64014e3b:	push   esi
64014e3c:	mov    esi,eax
64014e3e:	mov    eax,DWORD PTR [ebp+0xc]
64014e41:	push   edi
64014e42:	je     0x64014e53
64014e44:	mov    WORD PTR [esi],0x2d
64014e49:	add    esi,0x2
64014e4c:	neg    ebx
64014e4e:	adc    eax,0x0
64014e51:	neg    eax
64014e53:	mov    edi,esi
64014e55:	xor    ecx,ecx
64014e57:	push   ecx
64014e58:	push   DWORD PTR [ebp+0x10]
64014e5b:	push   eax
64014e5c:	push   ebx
64014e5d:	call   0x6401ba40
64014e62:	cmp    ecx,0x9
64014e65:	mov    DWORD PTR [ebp+0xc],ebx
64014e68:	mov    ebx,eax
64014e6a:	mov    eax,edx
64014e6c:	jbe    0x64014e73
64014e6e:	add    ecx,0x57
64014e71:	jmp    0x64014e76
64014e73:	add    ecx,0x30
64014e76:	mov    WORD PTR [esi],cx
64014e79:	inc    esi
64014e7a:	inc    esi
64014e7b:	test   eax,eax
64014e7d:	ja     0x64014e55
64014e7f:	jb     0x64014e85
64014e81:	test   ebx,ebx
64014e83:	ja     0x64014e55
64014e85:	and    WORD PTR [esi],0x0
64014e89:	dec    esi
64014e8a:	dec    esi
64014e8b:	mov    cx,WORD PTR [edi]
64014e8e:	movzx  eax,WORD PTR [esi]
64014e91:	mov    WORD PTR [esi],cx
64014e94:	dec    esi
64014e95:	mov    WORD PTR [edi],ax
64014e98:	dec    esi
64014e99:	inc    edi
64014e9a:	inc    edi
64014e9b:	cmp    edi,esi
64014e9d:	jb     0x64014e8b
64014e9f:	pop    edi
64014ea0:	pop    esi
64014ea1:	pop    ebx
64014ea2:	pop    ebp
64014ea3:	ret    0x10
64014ea6:	push   ebp
64014ea7:	mov    ebp,esp
64014ea9:	xor    eax,eax
64014eab:	cmp    DWORD PTR [ebp+0x14],0xa
64014eaf:	jne    0x64014ec0
64014eb1:	cmp    DWORD PTR [ebp+0xc],eax
64014eb4:	jg     0x64014ec0
64014eb6:	jl     0x64014ebd
64014eb8:	cmp    DWORD PTR [ebp+0x8],eax
64014ebb:	jae    0x64014ec0
64014ebd:	xor    eax,eax
64014ebf:	inc    eax
64014ec0:	push   eax
64014ec1:	push   DWORD PTR [ebp+0x14]
64014ec4:	mov    eax,DWORD PTR [ebp+0x10]
64014ec7:	push   DWORD PTR [ebp+0xc]
64014eca:	push   DWORD PTR [ebp+0x8]
64014ecd:	call   0x64014e30
64014ed2:	mov    eax,DWORD PTR [ebp+0x10]
64014ed5:	pop    ebp
64014ed6:	ret    
64014ed7:	push   ebp
64014ed8:	mov    ebp,esp
64014eda:	sub    esp,0x20
64014edd:	push   ebx
64014ede:	xor    ebx,ebx
64014ee0:	cmp    DWORD PTR [ebp+0x14],ebx
64014ee3:	jne    0x64014f05
64014ee5:	call   0x640164c3
64014eea:	push   ebx
64014eeb:	push   ebx
64014eec:	push   ebx
64014eed:	push   ebx
64014eee:	push   ebx
64014eef:	mov    DWORD PTR [eax],0x16
64014ef5:	call   0x64013e52
64014efa:	add    esp,0x14
64014efd:	or     eax,0xffffffff
64014f00:	jmp    0x64014fca
64014f05:	push   esi
64014f06:	mov    esi,DWORD PTR [ebp+0xc]
64014f09:	push   edi
64014f0a:	mov    edi,DWORD PTR [ebp+0x10]
64014f0d:	cmp    edi,ebx
64014f0f:	je     0x64014f35
64014f11:	cmp    esi,ebx
64014f13:	jne    0x64014f35
64014f15:	call   0x640164c3
64014f1a:	push   ebx
64014f1b:	push   ebx
64014f1c:	push   ebx
64014f1d:	push   ebx
64014f1e:	push   ebx
64014f1f:	mov    DWORD PTR [eax],0x16
64014f25:	call   0x64013e52
64014f2a:	add    esp,0x14
64014f2d:	or     eax,0xffffffff
64014f30:	jmp    0x64014fc8
64014f35:	cmp    edi,0x3fffffff
64014f3b:	mov    DWORD PTR [ebp-0x14],0x42
64014f42:	mov    DWORD PTR [ebp-0x18],esi
64014f45:	mov    DWORD PTR [ebp-0x20],esi
64014f48:	jbe    0x64014f53
64014f4a:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014f51:	jmp    0x64014f59
64014f53:	lea    eax,[edi+edi*1]
64014f56:	mov    DWORD PTR [ebp-0x1c],eax
64014f59:	push   DWORD PTR [ebp+0x1c]
64014f5c:	lea    eax,[ebp-0x20]
64014f5f:	push   DWORD PTR [ebp+0x18]
64014f62:	push   DWORD PTR [ebp+0x14]
64014f65:	push   eax
64014f66:	call   DWORD PTR [ebp+0x8]
64014f69:	add    esp,0x10
64014f6c:	cmp    esi,ebx
64014f6e:	mov    DWORD PTR [ebp+0x14],eax
64014f71:	je     0x64014fc8
64014f73:	cmp    eax,ebx
64014f75:	jl     0x64014fb9
64014f77:	dec    DWORD PTR [ebp-0x1c]
64014f7a:	js     0x64014f86
64014f7c:	mov    eax,DWORD PTR [ebp-0x20]
64014f7f:	mov    BYTE PTR [eax],bl
64014f81:	inc    DWORD PTR [ebp-0x20]
64014f84:	jmp    0x64014f97
64014f86:	lea    eax,[ebp-0x20]
64014f89:	push   eax
64014f8a:	push   ebx
64014f8b:	call   0x64019a4f
64014f90:	cmp    eax,0xffffffff
64014f93:	pop    ecx
64014f94:	pop    ecx
64014f95:	je     0x64014fb9
64014f97:	dec    DWORD PTR [ebp-0x1c]
64014f9a:	js     0x64014fa3
64014f9c:	mov    eax,DWORD PTR [ebp-0x20]
64014f9f:	mov    BYTE PTR [eax],bl
64014fa1:	jmp    0x64014fb4
64014fa3:	lea    eax,[ebp-0x20]
64014fa6:	push   eax
64014fa7:	push   ebx
64014fa8:	call   0x64019a4f
64014fad:	cmp    eax,0xffffffff
64014fb0:	pop    ecx
64014fb1:	pop    ecx
64014fb2:	je     0x64014fb9
64014fb4:	mov    eax,DWORD PTR [ebp+0x14]
64014fb7:	jmp    0x64014fc8
64014fb9:	xor    eax,eax
64014fbb:	cmp    DWORD PTR [ebp-0x1c],ebx
64014fbe:	mov    WORD PTR [esi+edi*2-0x2],bx
64014fc3:	setge  al
64014fc6:	dec    eax
64014fc7:	dec    eax
64014fc8:	pop    edi
64014fc9:	pop    esi
64014fca:	pop    ebx
64014fcb:	leave  
64014fcc:	ret    
64014fcd:	push   ebp
64014fce:	mov    ebp,esp
64014fd0:	push   esi
64014fd1:	xor    esi,esi
64014fd3:	cmp    DWORD PTR [ebp+0x10],esi
64014fd6:	jne    0x64014ff5
64014fd8:	call   0x640164c3
64014fdd:	push   esi
64014fde:	push   esi
64014fdf:	push   esi
64014fe0:	push   esi
64014fe1:	push   esi
64014fe2:	mov    DWORD PTR [eax],0x16
64014fe8:	call   0x64013e52
64014fed:	add    esp,0x14
64014ff0:	or     eax,0xffffffff
64014ff3:	jmp    0x64015051
64014ff5:	push   edi
64014ff6:	mov    edi,DWORD PTR [ebp+0x8]
64014ff9:	cmp    edi,esi
64014ffb:	je     0x64015002
64014ffd:	cmp    DWORD PTR [ebp+0xc],esi
64015000:	ja     0x6401500f
64015002:	call   0x640164c3
64015007:	mov    DWORD PTR [eax],0x16
6401500d:	jmp    0x64015040
6401500f:	push   DWORD PTR [ebp+0x18]
64015012:	push   DWORD PTR [ebp+0x14]
64015015:	push   DWORD PTR [ebp+0x10]
64015018:	push   DWORD PTR [ebp+0xc]
6401501b:	push   edi
6401501c:	push   0x6401cb8d
64015021:	call   0x64014ed7
64015026:	add    esp,0x18
64015029:	cmp    eax,esi
6401502b:	jge    0x64015030
6401502d:	mov    WORD PTR [edi],si
64015030:	cmp    eax,0xfffffffe
64015033:	jne    0x64015050
64015035:	call   0x640164c3
6401503a:	mov    DWORD PTR [eax],0x22
64015040:	push   esi
64015041:	push   esi
64015042:	push   esi
64015043:	push   esi
64015044:	push   esi
64015045:	call   0x64013e52
6401504a:	add    esp,0x14
6401504d:	or     eax,0xffffffff
64015050:	pop    edi
64015051:	pop    esi
64015052:	pop    ebp
64015053:	ret    
64015054:	push   DWORD PTR [esp+0x10]
64015058:	push   0x0
6401505a:	push   DWORD PTR [esp+0x14]
6401505e:	push   DWORD PTR [esp+0x14]
64015062:	push   DWORD PTR [esp+0x14]
64015066:	call   0x64014fcd
6401506b:	add    esp,0x14
6401506e:	ret    
6401506f:	push   ebp
64015070:	mov    ebp,esp
64015072:	sub    esp,0x20
64015075:	push   esi
64015076:	xor    esi,esi
64015078:	cmp    DWORD PTR [ebp+0xc],esi
6401507b:	jne    0x6401509a
6401507d:	call   0x640164c3
64015082:	push   esi
64015083:	push   esi
64015084:	push   esi
64015085:	push   esi
64015086:	push   esi
64015087:	mov    DWORD PTR [eax],0x16
6401508d:	call   0x64013e52
64015092:	add    esp,0x14
64015095:	or     eax,0xffffffff
64015098:	jmp    0x640150c1
6401509a:	push   DWORD PTR [ebp+0x14]
6401509d:	lea    eax,[ebp-0x20]
640150a0:	push   DWORD PTR [ebp+0x10]
640150a3:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
640150aa:	push   DWORD PTR [ebp+0xc]
640150ad:	mov    DWORD PTR [ebp-0x14],0x42
640150b4:	push   eax
640150b5:	mov    DWORD PTR [ebp-0x18],esi
640150b8:	mov    DWORD PTR [ebp-0x20],esi
640150bb:	call   DWORD PTR [ebp+0x8]
640150be:	add    esp,0x10
640150c1:	pop    esi
640150c2:	leave  
640150c3:	ret    
640150c4:	push   DWORD PTR [esp+0x8]
640150c8:	push   0x0
640150ca:	push   DWORD PTR [esp+0xc]
640150ce:	push   0x6401c233
640150d3:	call   0x6401506f
640150d8:	add    esp,0x10
640150db:	ret    
640150dc:	push   0xa
640150de:	push   0x0
640150e0:	push   DWORD PTR [esp+0xc]
640150e4:	call   0x6401d759
640150e9:	add    esp,0xc
640150ec:	ret    
640150ed:	push   DWORD PTR ds:0x64039820
640150f3:	call   0x6401760e
640150f8:	test   eax,eax
640150fa:	pop    ecx
640150fb:	je     0x640150ff
640150fd:	call   eax
640150ff:	push   0x19
64015101:	call   0x6401bb0d
64015106:	push   0x1
64015108:	push   0x0
6401510a:	call   0x64015ef5
6401510f:	add    esp,0xc
64015112:	jmp    0x64015e02
64015117:	push   ebp
64015118:	mov    ebp,esp
6401511a:	sub    esp,0x10
6401511d:	push   DWORD PTR [ebp+0xc]
64015120:	lea    ecx,[ebp-0x10]
64015123:	call   0x64014325
64015128:	movzx  eax,BYTE PTR [ebp+0x8]
6401512c:	mov    ecx,DWORD PTR [ebp-0x10]
6401512f:	mov    ecx,DWORD PTR [ecx+0xc8]
64015135:	movzx  eax,WORD PTR [ecx+eax*2]
64015139:	and    eax,0x8000
6401513e:	cmp    BYTE PTR [ebp-0x4],0x0
64015142:	je     0x6401514b
64015144:	mov    ecx,DWORD PTR [ebp-0x8]
64015147:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401514b:	leave  
6401514c:	ret    
6401514d:	push   0x0
6401514f:	push   DWORD PTR [esp+0x8]
64015153:	call   0x64015117
64015158:	pop    ecx
64015159:	pop    ecx
6401515a:	ret    
6401515b:	int3   
6401515c:	int3   
6401515d:	int3   
6401515e:	int3   
6401515f:	int3   
64015160:	mov    edx,DWORD PTR [esp+0xc]
64015164:	mov    ecx,DWORD PTR [esp+0x4]
64015168:	test   edx,edx
6401516a:	je     0x640151d5
6401516c:	xor    eax,eax
6401516e:	mov    al,BYTE PTR [esp+0x8]
64015172:	test   al,al
64015174:	jne    0x6401518c
64015176:	cmp    edx,0x100
6401517c:	jb     0x6401518c
6401517e:	cmp    DWORD PTR ds:0x64039b24,0x0
64015185:	je     0x6401518c
64015187:	jmp    0x6401d847
6401518c:	push   edi
6401518d:	mov    edi,ecx
6401518f:	cmp    edx,0x4
64015192:	jb     0x640151c5
64015194:	neg    ecx
64015196:	and    ecx,0x3
64015199:	je     0x640151a7
6401519b:	sub    edx,ecx
6401519d:	mov    BYTE PTR [edi],al
6401519f:	add    edi,0x1
640151a2:	sub    ecx,0x1
640151a5:	jne    0x6401519d
640151a7:	mov    ecx,eax
640151a9:	shl    eax,0x8
640151ac:	add    eax,ecx
640151ae:	mov    ecx,eax
640151b0:	shl    eax,0x10
640151b3:	add    eax,ecx
640151b5:	mov    ecx,edx
640151b7:	and    edx,0x3
640151ba:	shr    ecx,0x2
640151bd:	je     0x640151c5
640151bf:	rep stos DWORD PTR es:[edi],eax
640151c1:	test   edx,edx
640151c3:	je     0x640151cf
640151c5:	mov    BYTE PTR [edi],al
640151c7:	add    edi,0x1
640151ca:	sub    edx,0x1
640151cd:	jne    0x640151c5
640151cf:	mov    eax,DWORD PTR [esp+0x8]
640151d3:	pop    edi
640151d4:	ret    
640151d5:	mov    eax,DWORD PTR [esp+0x4]
640151d9:	ret    
640151da:	int3   
640151db:	int3   
640151dc:	int3   
640151dd:	int3   
640151de:	int3   
640151df:	int3   
640151e0:	push   ebp
640151e1:	mov    ebp,esp
640151e3:	push   edi
640151e4:	push   esi
640151e5:	mov    esi,DWORD PTR [ebp+0xc]
640151e8:	mov    ecx,DWORD PTR [ebp+0x10]
640151eb:	mov    edi,DWORD PTR [ebp+0x8]
640151ee:	mov    eax,ecx
640151f0:	mov    edx,ecx
640151f2:	add    eax,esi
640151f4:	cmp    edi,esi
640151f6:	jbe    0x64015200
640151f8:	cmp    edi,eax
640151fa:	jb     0x640153a4
64015200:	cmp    ecx,0x100
64015206:	jb     0x64015227
64015208:	cmp    DWORD PTR ds:0x64039b24,0x0
6401520f:	je     0x64015227
64015211:	push   edi
64015212:	push   esi
64015213:	and    edi,0xf
64015216:	and    esi,0xf
64015219:	cmp    edi,esi
6401521b:	pop    esi
6401521c:	pop    edi
6401521d:	jne    0x64015227
6401521f:	pop    esi
64015220:	pop    edi
64015221:	pop    ebp
64015222:	jmp    0x6401d971
64015227:	test   edi,0x3
6401522d:	jne    0x64015244
6401522f:	shr    ecx,0x2
64015232:	and    edx,0x3
64015235:	cmp    ecx,0x8
64015238:	jb     0x64015264
6401523a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401523c:	jmp    DWORD PTR [edx*4+0x64015354]
64015243:	nop
64015244:	mov    eax,edi
64015246:	mov    edx,0x3
6401524b:	sub    ecx,0x4
6401524e:	jb     0x6401525c
64015250:	and    eax,0x3
64015253:	add    ecx,eax
64015255:	jmp    DWORD PTR [eax*4+0x64015268]
6401525c:	jmp    DWORD PTR [ecx*4+0x64015364]
64015263:	nop
64015264:	jmp    DWORD PTR [ecx*4+0x640152e8]
6401526b:	nop
6401526c:	js     0x640152c0
6401526e:	add    DWORD PTR [esp+eiz*4+0x52],esp
64015272:	add    DWORD PTR [eax+ecx*8+0x52],esp
64015276:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401527a:	mov    al,BYTE PTR [esi]
6401527c:	mov    BYTE PTR [edi],al
6401527e:	mov    al,BYTE PTR [esi+0x1]
64015281:	mov    BYTE PTR [edi+0x1],al
64015284:	mov    al,BYTE PTR [esi+0x2]
64015287:	shr    ecx,0x2
6401528a:	mov    BYTE PTR [edi+0x2],al
6401528d:	add    esi,0x3
64015290:	add    edi,0x3
64015293:	cmp    ecx,0x8
64015296:	jb     0x64015264
64015298:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401529a:	jmp    DWORD PTR [edx*4+0x64015354]
640152a1:	lea    ecx,[ecx+0x0]
640152a4:	and    edx,ecx
640152a6:	mov    al,BYTE PTR [esi]
640152a8:	mov    BYTE PTR [edi],al
640152aa:	mov    al,BYTE PTR [esi+0x1]
640152ad:	shr    ecx,0x2
640152b0:	mov    BYTE PTR [edi+0x1],al
640152b3:	add    esi,0x2
640152b6:	add    edi,0x2
640152b9:	cmp    ecx,0x8
640152bc:	jb     0x64015264
640152be:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640152c0:	jmp    DWORD PTR [edx*4+0x64015354]
640152c7:	nop
640152c8:	and    edx,ecx
640152ca:	mov    al,BYTE PTR [esi]
640152cc:	mov    BYTE PTR [edi],al
640152ce:	add    esi,0x1
640152d1:	shr    ecx,0x2
640152d4:	add    edi,0x1
640152d7:	cmp    ecx,0x8
640152da:	jb     0x64015264
640152dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640152de:	jmp    DWORD PTR [edx*4+0x64015354]
640152e5:	lea    ecx,[ecx+0x0]
640152e8:	dec    ebx
640152e9:	push   ebx
640152ea:	add    DWORD PTR [eax+edi*1+0x53],esp
640152ee:	add    DWORD PTR [eax+esi*1+0x53],esp
640152f2:	add    DWORD PTR [eax+ebp*1+0x53],esp
640152f6:	add    DWORD PTR [eax+eiz*1+0x53],esp
640152fa:	add    DWORD PTR [eax+ebx*1+0x53],esp
640152fe:	add    DWORD PTR [eax+edx*1+0x53],esp
64015302:	add    DWORD PTR [eax+ecx*1+0x53],esp
64015306:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401530a:	mov    fs,esp
6401530c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64015310:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64015314:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64015318:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401531c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64015320:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64015324:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64015328:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401532c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64015330:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64015334:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64015338:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401533c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64015340:	lea    eax,[ecx*4+0x0]
64015347:	add    esi,eax
64015349:	add    edi,eax
6401534b:	jmp    DWORD PTR [edx*4+0x64015354]
64015352:	mov    edi,edi
64015354:	fs push ebx
64015356:	add    DWORD PTR [esp+ebp*2+0x53],esp
6401535a:	add    DWORD PTR [eax+edi*2+0x53],esp
6401535e:	add    DWORD PTR [esp+ecx*4+0x53],esp
64015362:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015366:	or     BYTE PTR [esi+0x5f],bl
64015369:	leave  
6401536a:	ret    
6401536b:	nop
6401536c:	mov    al,BYTE PTR [esi]
6401536e:	mov    BYTE PTR [edi],al
64015370:	mov    eax,DWORD PTR [ebp+0x8]
64015373:	pop    esi
64015374:	pop    edi
64015375:	leave  
64015376:	ret    
64015377:	nop
64015378:	mov    al,BYTE PTR [esi]
6401537a:	mov    BYTE PTR [edi],al
6401537c:	mov    al,BYTE PTR [esi+0x1]
6401537f:	mov    BYTE PTR [edi+0x1],al
64015382:	mov    eax,DWORD PTR [ebp+0x8]
64015385:	pop    esi
64015386:	pop    edi
64015387:	leave  
64015388:	ret    
64015389:	lea    ecx,[ecx+0x0]
6401538c:	mov    al,BYTE PTR [esi]
6401538e:	mov    BYTE PTR [edi],al
64015390:	mov    al,BYTE PTR [esi+0x1]
64015393:	mov    BYTE PTR [edi+0x1],al
64015396:	mov    al,BYTE PTR [esi+0x2]
64015399:	mov    BYTE PTR [edi+0x2],al
6401539c:	mov    eax,DWORD PTR [ebp+0x8]
6401539f:	pop    esi
640153a0:	pop    edi
640153a1:	leave  
640153a2:	ret    
640153a3:	nop
640153a4:	lea    esi,[ecx+esi*1-0x4]
640153a8:	lea    edi,[ecx+edi*1-0x4]
640153ac:	test   edi,0x3
640153b2:	jne    0x640153d8
640153b4:	shr    ecx,0x2
640153b7:	and    edx,0x3
640153ba:	cmp    ecx,0x8
640153bd:	jb     0x640153cc
640153bf:	std    
640153c0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640153c2:	cld    
640153c3:	jmp    DWORD PTR [edx*4+0x640154f0]
640153ca:	mov    edi,edi
640153cc:	neg    ecx
640153ce:	jmp    DWORD PTR [ecx*4+0x640154a0]
640153d5:	lea    ecx,[ecx+0x0]
640153d8:	mov    eax,edi
640153da:	mov    edx,0x3
640153df:	cmp    ecx,0x4
640153e2:	jb     0x640153f0
640153e4:	and    eax,0x3
640153e7:	sub    ecx,eax
640153e9:	jmp    DWORD PTR [eax*4+0x640153f4]
640153f0:	jmp    DWORD PTR [ecx*4+0x640154f0]
640153f7:	nop
640153f8:	add    al,0x54
640153fa:	add    DWORD PTR [eax+ebp*1+0x54],esp
640153fe:	add    DWORD PTR [eax+edx*2+0x54],esp
64015402:	add    DWORD PTR [edx+ecx*4+0x46],esp
64015406:	add    esp,DWORD PTR [ebx]
64015408:	ror    DWORD PTR [eax-0x117cfcb9],1
6401540e:	add    ecx,eax
64015410:	jmp    0x65f0d717
64015415:	cmp    ecx,0x8
64015418:	jb     0x640153cc
6401541a:	std    
6401541b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401541d:	cld    
6401541e:	jmp    DWORD PTR [edx*4+0x640154f0]
64015425:	lea    ecx,[ecx+0x0]
64015428:	mov    al,BYTE PTR [esi+0x3]
6401542b:	and    edx,ecx
6401542d:	mov    BYTE PTR [edi+0x3],al
64015430:	mov    al,BYTE PTR [esi+0x2]
64015433:	shr    ecx,0x2
64015436:	mov    BYTE PTR [edi+0x2],al
64015439:	sub    esi,0x2
6401543c:	sub    edi,0x2
6401543f:	cmp    ecx,0x8
64015442:	jb     0x640153cc
64015444:	std    
64015445:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015447:	cld    
64015448:	jmp    DWORD PTR [edx*4+0x640154f0]
6401544f:	nop
64015450:	mov    al,BYTE PTR [esi+0x3]
64015453:	and    edx,ecx
64015455:	mov    BYTE PTR [edi+0x3],al
64015458:	mov    al,BYTE PTR [esi+0x2]
6401545b:	mov    BYTE PTR [edi+0x2],al
6401545e:	mov    al,BYTE PTR [esi+0x1]
64015461:	shr    ecx,0x2
64015464:	mov    BYTE PTR [edi+0x1],al
64015467:	sub    esi,0x3
6401546a:	sub    edi,0x3
6401546d:	cmp    ecx,0x8
64015470:	jb     0x640153cc
64015476:	std    
64015477:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015479:	cld    
6401547a:	jmp    DWORD PTR [edx*4+0x640154f0]
64015481:	lea    ecx,[ecx+0x0]
64015484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
64015485:	push   esp
64015486:	add    DWORD PTR [esp+ebp*4+0x54],esp
6401548a:	add    DWORD PTR [esp+esi*4+0x54],esp
6401548e:	add    DWORD PTR [esp+edi*4+0x54],esp
64015492:	add    DWORD PTR [esp+eax*8+0x54],esp
64015496:	add    DWORD PTR [esp+ecx*8+0x54],esp
6401549a:	add    DWORD PTR [esp+edx*8+0x54],esp
6401549e:	add    DWORD PTR [edi+eiz*8+0x54],esp
640154a2:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640154a6:	mov    ds,WORD PTR [ecx+ecx*4]
640154a9:	inc    esp
640154aa:	(bad)  
640154ab:	sbb    al,0x8b
640154ad:	inc    esp
640154ae:	mov    ds,WORD PTR [eax]
640154b0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
640154b4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
640154b8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
640154bc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
640154c0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
640154c4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
640154c8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
640154cc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640154d0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640154d4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640154d8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640154dc:	lea    eax,[ecx*4+0x0]
640154e3:	add    esi,eax
640154e5:	add    edi,eax
640154e7:	jmp    DWORD PTR [edx*4+0x640154f0]
640154ee:	mov    edi,edi
640154f0:	add    BYTE PTR [ebp+0x1],dl
640154f3:	or     BYTE PTR fs:[ebp+0x1],dl
640154f7:	sbb    BYTE PTR fs:[ebp+0x1],dl
640154fb:	fs sub al,0x55
640154fe:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015502:	or     BYTE PTR [esi+0x5f],bl
64015505:	leave  
64015506:	ret    
64015507:	nop
64015508:	mov    al,BYTE PTR [esi+0x3]
6401550b:	mov    BYTE PTR [edi+0x3],al
6401550e:	mov    eax,DWORD PTR [ebp+0x8]
64015511:	pop    esi
64015512:	pop    edi
64015513:	leave  
64015514:	ret    
64015515:	lea    ecx,[ecx+0x0]
64015518:	mov    al,BYTE PTR [esi+0x3]
6401551b:	mov    BYTE PTR [edi+0x3],al
6401551e:	mov    al,BYTE PTR [esi+0x2]
64015521:	mov    BYTE PTR [edi+0x2],al
64015524:	mov    eax,DWORD PTR [ebp+0x8]
64015527:	pop    esi
64015528:	pop    edi
64015529:	leave  
6401552a:	ret    
6401552b:	nop
6401552c:	mov    al,BYTE PTR [esi+0x3]
6401552f:	mov    BYTE PTR [edi+0x3],al
64015532:	mov    al,BYTE PTR [esi+0x2]
64015535:	mov    BYTE PTR [edi+0x2],al
64015538:	mov    al,BYTE PTR [esi+0x1]
6401553b:	mov    BYTE PTR [edi+0x1],al
6401553e:	mov    eax,DWORD PTR [ebp+0x8]
64015541:	pop    esi
64015542:	pop    edi
64015543:	leave  
64015544:	ret    
64015545:	int3   
64015546:	int3   
64015547:	int3   
64015548:	int3   
64015549:	int3   
6401554a:	int3   
6401554b:	int3   
6401554c:	int3   
6401554d:	int3   
6401554e:	int3   
6401554f:	int3   
64015550:	mov    ecx,DWORD PTR [esp+0x4]
64015554:	test   ecx,0x3
6401555a:	je     0x64015580
6401555c:	mov    al,BYTE PTR [ecx]
6401555e:	add    ecx,0x1
64015561:	test   al,al
64015563:	je     0x640155b3
64015565:	test   ecx,0x3
6401556b:	jne    0x6401555c
6401556d:	add    eax,0x0
64015572:	lea    esp,[esp+0x0]
64015579:	lea    esp,[esp+0x0]
64015580:	mov    eax,DWORD PTR [ecx]
64015582:	mov    edx,0x7efefeff
64015587:	add    edx,eax
64015589:	xor    eax,0xffffffff
6401558c:	xor    eax,edx
6401558e:	add    ecx,0x4
64015591:	test   eax,0x81010100
64015596:	je     0x64015580
64015598:	mov    eax,DWORD PTR [ecx-0x4]
6401559b:	test   al,al
6401559d:	je     0x640155d1
6401559f:	test   ah,ah
640155a1:	je     0x640155c7
640155a3:	test   eax,0xff0000
640155a8:	je     0x640155bd
640155aa:	test   eax,0xff000000
640155af:	je     0x640155b3
640155b1:	jmp    0x64015580
640155b3:	lea    eax,[ecx-0x1]
640155b6:	mov    ecx,DWORD PTR [esp+0x4]
640155ba:	sub    eax,ecx
640155bc:	ret    
640155bd:	lea    eax,[ecx-0x2]
640155c0:	mov    ecx,DWORD PTR [esp+0x4]
640155c4:	sub    eax,ecx
640155c6:	ret    
640155c7:	lea    eax,[ecx-0x3]
640155ca:	mov    ecx,DWORD PTR [esp+0x4]
640155ce:	sub    eax,ecx
640155d0:	ret    
640155d1:	lea    eax,[ecx-0x4]
640155d4:	mov    ecx,DWORD PTR [esp+0x4]
640155d8:	sub    eax,ecx
640155da:	ret    
640155db:	push   eax
640155dc:	push   DWORD PTR fs:0x0
640155e3:	lea    eax,[esp+0xc]
640155e7:	sub    esp,DWORD PTR [esp+0xc]
640155eb:	push   ebx
640155ec:	push   esi
640155ed:	push   edi
640155ee:	mov    DWORD PTR [eax],ebp
640155f0:	mov    ebp,eax
640155f2:	mov    eax,ds:0x64037644
640155f7:	xor    eax,ebp
640155f9:	push   eax
640155fa:	push   DWORD PTR [ebp-0x4]
640155fd:	mov    DWORD PTR [ebp-0x4],0xffffffff
64015604:	lea    eax,[ebp-0xc]
64015607:	mov    fs:0x0,eax
6401560d:	ret    
6401560e:	push   eax
6401560f:	push   DWORD PTR fs:0x0
64015616:	lea    eax,[esp+0xc]
6401561a:	sub    esp,DWORD PTR [esp+0xc]
6401561e:	push   ebx
6401561f:	push   esi
64015620:	push   edi
64015621:	mov    DWORD PTR [eax],ebp
64015623:	mov    ebp,eax
64015625:	mov    eax,ds:0x64037644
6401562a:	xor    eax,ebp
6401562c:	push   eax
6401562d:	mov    DWORD PTR [ebp-0x10],esp
64015630:	push   DWORD PTR [ebp-0x4]
64015633:	mov    DWORD PTR [ebp-0x4],0xffffffff
6401563a:	lea    eax,[ebp-0xc]
6401563d:	mov    fs:0x0,eax
64015643:	ret    
64015644:	push   ebx
64015645:	push   ebp
64015646:	push   esi
64015647:	mov    esi,DWORD PTR [esp+0x10]
6401564b:	mov    eax,DWORD PTR [esi+0xbc]
64015651:	xor    ebp,ebp
64015653:	cmp    eax,ebp
64015655:	push   edi
64015656:	je     0x640156c7
64015658:	cmp    eax,0x64038530
6401565d:	je     0x640156c7
6401565f:	mov    eax,DWORD PTR [esi+0xb0]
64015665:	cmp    eax,ebp
64015667:	je     0x640156c7
64015669:	cmp    DWORD PTR [eax],ebp
6401566b:	jne    0x640156c7
6401566d:	mov    eax,DWORD PTR [esi+0xb8]
64015673:	cmp    eax,ebp
64015675:	je     0x6401568e
64015677:	cmp    DWORD PTR [eax],ebp
64015679:	jne    0x6401568e
6401567b:	push   eax
6401567c:	call   0x6401475a
64015681:	push   DWORD PTR [esi+0xbc]
64015687:	call   0x6401dc24
6401568c:	pop    ecx
6401568d:	pop    ecx
6401568e:	mov    eax,DWORD PTR [esi+0xb4]
64015694:	cmp    eax,ebp
64015696:	je     0x640156af
64015698:	cmp    DWORD PTR [eax],ebp
6401569a:	jne    0x640156af
6401569c:	push   eax
6401569d:	call   0x6401475a
640156a2:	push   DWORD PTR [esi+0xbc]
640156a8:	call   0x6401dbe4
640156ad:	pop    ecx
640156ae:	pop    ecx
640156af:	push   DWORD PTR [esi+0xb0]
640156b5:	call   0x6401475a
640156ba:	push   DWORD PTR [esi+0xbc]
640156c0:	call   0x6401475a
640156c5:	pop    ecx
640156c6:	pop    ecx
640156c7:	mov    eax,DWORD PTR [esi+0xc0]
640156cd:	cmp    eax,ebp
640156cf:	je     0x64015715
640156d1:	cmp    DWORD PTR [eax],ebp
640156d3:	jne    0x64015715
640156d5:	mov    eax,DWORD PTR [esi+0xc4]
640156db:	sub    eax,0xfe
640156e0:	push   eax
640156e1:	call   0x6401475a
640156e6:	mov    eax,DWORD PTR [esi+0xcc]
640156ec:	mov    edi,0x80
640156f1:	sub    eax,edi
640156f3:	push   eax
640156f4:	call   0x6401475a
640156f9:	mov    eax,DWORD PTR [esi+0xd0]
640156ff:	sub    eax,edi
64015701:	push   eax
64015702:	call   0x6401475a
64015707:	push   DWORD PTR [esi+0xc0]
6401570d:	call   0x6401475a
64015712:	add    esp,0x10
64015715:	lea    edi,[esi+0xd4]
6401571b:	mov    eax,DWORD PTR [edi]
6401571d:	cmp    eax,0x64038470
64015722:	je     0x6401573b
64015724:	cmp    DWORD PTR [eax+0xb4],ebp
6401572a:	jne    0x6401573b
6401572c:	push   eax
6401572d:	call   0x6401da54
64015732:	push   DWORD PTR [edi]
64015734:	call   0x6401475a
64015739:	pop    ecx
6401573a:	pop    ecx
6401573b:	push   0x6
6401573d:	lea    edi,[esi+0x50]
64015740:	pop    ebx
64015741:	cmp    DWORD PTR [edi-0x8],0x64037f10
64015748:	je     0x6401575b
6401574a:	mov    eax,DWORD PTR [edi]
6401574c:	cmp    eax,ebp
6401574e:	je     0x6401575b
64015750:	cmp    DWORD PTR [eax],ebp
64015752:	jne    0x6401575b
64015754:	push   eax
64015755:	call   0x6401475a
6401575a:	pop    ecx
6401575b:	cmp    DWORD PTR [edi-0x4],ebp
6401575e:	je     0x64015772
64015760:	mov    eax,DWORD PTR [edi+0x4]
64015763:	cmp    eax,ebp
64015765:	je     0x64015772
64015767:	cmp    DWORD PTR [eax],ebp
64015769:	jne    0x64015772
6401576b:	push   eax
6401576c:	call   0x6401475a
64015771:	pop    ecx
64015772:	add    edi,0x10
64015775:	dec    ebx
64015776:	jne    0x64015741
64015778:	push   esi
64015779:	call   0x6401475a
6401577e:	pop    ecx
6401577f:	pop    edi
64015780:	pop    esi
64015781:	pop    ebp
64015782:	pop    ebx
64015783:	ret    
64015784:	push   ebx
64015785:	push   ebp
64015786:	push   esi
64015787:	mov    esi,DWORD PTR [esp+0x10]
6401578b:	push   edi
6401578c:	mov    edi,DWORD PTR ds:0x6402402c
64015792:	push   esi
64015793:	call   edi
64015795:	mov    eax,DWORD PTR [esi+0xb0]
6401579b:	test   eax,eax
6401579d:	je     0x640157a2
6401579f:	push   eax
640157a0:	call   edi
640157a2:	mov    eax,DWORD PTR [esi+0xb8]
640157a8:	test   eax,eax
640157aa:	je     0x640157af
640157ac:	push   eax
640157ad:	call   edi
640157af:	mov    eax,DWORD PTR [esi+0xb4]
640157b5:	test   eax,eax
640157b7:	je     0x640157bc
640157b9:	push   eax
640157ba:	call   edi
640157bc:	mov    eax,DWORD PTR [esi+0xc0]
640157c2:	test   eax,eax
640157c4:	je     0x640157c9
640157c6:	push   eax
640157c7:	call   edi
640157c9:	push   0x6
640157cb:	lea    ebx,[esi+0x50]
640157ce:	pop    ebp
640157cf:	cmp    DWORD PTR [ebx-0x8],0x64037f10
640157d6:	je     0x640157e1
640157d8:	mov    eax,DWORD PTR [ebx]
640157da:	test   eax,eax
640157dc:	je     0x640157e1
640157de:	push   eax
640157df:	call   edi
640157e1:	cmp    DWORD PTR [ebx-0x4],0x0
640157e5:	je     0x640157f1
640157e7:	mov    eax,DWORD PTR [ebx+0x4]
640157ea:	test   eax,eax
640157ec:	je     0x640157f1
640157ee:	push   eax
640157ef:	call   edi
640157f1:	add    ebx,0x10
640157f4:	dec    ebp
640157f5:	jne    0x640157cf
640157f7:	mov    eax,DWORD PTR [esi+0xd4]
640157fd:	add    eax,0xb4
64015802:	push   eax
64015803:	call   edi
64015805:	pop    edi
64015806:	pop    esi
64015807:	pop    ebp
64015808:	pop    ebx
64015809:	ret    
6401580a:	push   esi
6401580b:	mov    esi,DWORD PTR [esp+0x8]
6401580f:	test   esi,esi
64015811:	je     0x64015892
64015813:	push   ebx
64015814:	push   ebp
64015815:	push   edi
64015816:	mov    edi,DWORD PTR ds:0x64024074
6401581c:	push   esi
6401581d:	call   edi
6401581f:	mov    eax,DWORD PTR [esi+0xb0]
64015825:	test   eax,eax
64015827:	je     0x6401582c
64015829:	push   eax
6401582a:	call   edi
6401582c:	mov    eax,DWORD PTR [esi+0xb8]
64015832:	test   eax,eax
64015834:	je     0x64015839
64015836:	push   eax
64015837:	call   edi
64015839:	mov    eax,DWORD PTR [esi+0xb4]
6401583f:	test   eax,eax
64015841:	je     0x64015846
64015843:	push   eax
64015844:	call   edi
64015846:	mov    eax,DWORD PTR [esi+0xc0]
6401584c:	test   eax,eax
6401584e:	je     0x64015853
64015850:	push   eax
64015851:	call   edi
64015853:	push   0x6
64015855:	lea    ebx,[esi+0x50]
64015858:	pop    ebp
64015859:	cmp    DWORD PTR [ebx-0x8],0x64037f10
64015860:	je     0x6401586b
64015862:	mov    eax,DWORD PTR [ebx]
64015864:	test   eax,eax
64015866:	je     0x6401586b
64015868:	push   eax
64015869:	call   edi
6401586b:	cmp    DWORD PTR [ebx-0x4],0x0
6401586f:	je     0x6401587b
64015871:	mov    eax,DWORD PTR [ebx+0x4]
64015874:	test   eax,eax
64015876:	je     0x6401587b
64015878:	push   eax
64015879:	call   edi
6401587b:	add    ebx,0x10
6401587e:	dec    ebp
6401587f:	jne    0x64015859
64015881:	mov    eax,DWORD PTR [esi+0xd4]
64015887:	add    eax,0xb4
6401588c:	push   eax
6401588d:	call   edi
6401588f:	pop    edi
64015890:	pop    ebp
64015891:	pop    ebx
64015892:	mov    eax,esi
64015894:	pop    esi
64015895:	ret    
64015896:	test   edi,edi
64015898:	je     0x640158d1
6401589a:	test   eax,eax
6401589c:	je     0x640158d1
6401589e:	push   esi
6401589f:	mov    esi,DWORD PTR [eax]
640158a1:	cmp    esi,edi
640158a3:	je     0x640158cd
640158a5:	push   edi
640158a6:	mov    DWORD PTR [eax],edi
640158a8:	call   0x64015784
640158ad:	test   esi,esi
640158af:	pop    ecx
640158b0:	je     0x640158cd
640158b2:	push   esi
640158b3:	call   0x6401580a
640158b8:	cmp    DWORD PTR [esi],0x0
640158bb:	pop    ecx
640158bc:	jne    0x640158cd
640158be:	cmp    esi,0x64037f18
640158c4:	je     0x640158cd
640158c6:	push   esi
640158c7:	call   0x64015644
640158cc:	pop    ecx
640158cd:	mov    eax,edi
640158cf:	pop    esi
640158d0:	ret    
640158d1:	xor    eax,eax
640158d3:	ret    
640158d4:	push   0xc
640158d6:	push   0x6402b798
640158db:	call   0x64015f14
640158e0:	call   0x6401782a
640158e5:	mov    esi,eax
640158e7:	mov    eax,ds:0x64037f08
640158ec:	test   DWORD PTR [esi+0x70],eax
640158ef:	je     0x64015913
640158f1:	cmp    DWORD PTR [esi+0x6c],0x0
640158f5:	je     0x64015913
640158f7:	call   0x6401782a
640158fc:	mov    esi,DWORD PTR [eax+0x6c]
640158ff:	test   esi,esi
64015901:	jne    0x6401590b
64015903:	push   0x20
64015905:	call   0x64017e16
6401590a:	pop    ecx
6401590b:	mov    eax,esi
6401590d:	call   0x64015f59
64015912:	ret    
64015913:	push   0xc
64015915:	call   0x6401af0e
6401591a:	pop    ecx
6401591b:	and    DWORD PTR [ebp-0x4],0x0
6401591f:	lea    eax,[esi+0x6c]
64015922:	mov    edi,DWORD PTR ds:0x64037ff0
64015928:	call   0x64015896
6401592d:	mov    DWORD PTR [ebp-0x1c],eax
64015930:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015937:	call   0x6401593e
6401593c:	jmp    0x640158ff
6401593e:	push   0xc
64015940:	call   0x6401ae36
64015945:	pop    ecx
64015946:	mov    esi,DWORD PTR [ebp-0x1c]
64015949:	ret    
6401594a:	push   ebp
6401594b:	mov    ebp,esp
6401594d:	sub    esp,0x14
64015950:	mov    eax,ds:0x64037644
64015955:	xor    eax,ebp
64015957:	mov    DWORD PTR [ebp-0x4],eax
6401595a:	push   ebx
6401595b:	push   esi
6401595c:	xor    ebx,ebx
6401595e:	cmp    DWORD PTR ds:0x64038eac,ebx
64015964:	push   edi
64015965:	mov    esi,ecx
64015967:	jne    0x640159a1
64015969:	push   ebx
6401596a:	push   ebx
6401596b:	xor    edi,edi
6401596d:	inc    edi
6401596e:	push   edi
6401596f:	push   0x64029960
64015974:	push   0x100
64015979:	push   ebx
6401597a:	call   DWORD PTR ds:0x640241b0
64015980:	test   eax,eax
64015982:	je     0x6401598c
64015984:	mov    DWORD PTR ds:0x64038eac,edi
6401598a:	jmp    0x640159a1
6401598c:	call   DWORD PTR ds:0x64024064
64015992:	cmp    eax,0x78
64015995:	jne    0x640159a1
64015997:	mov    DWORD PTR ds:0x64038eac,0x2
640159a1:	cmp    DWORD PTR [ebp+0x14],ebx
640159a4:	jle    0x640159c8
640159a6:	mov    ecx,DWORD PTR [ebp+0x14]
640159a9:	mov    eax,DWORD PTR [ebp+0x10]
640159ac:	dec    ecx
640159ad:	cmp    BYTE PTR [eax],bl
640159af:	je     0x640159b9
640159b1:	inc    eax
640159b2:	cmp    ecx,ebx
640159b4:	jne    0x640159ac
640159b6:	or     ecx,0xffffffff
640159b9:	mov    eax,DWORD PTR [ebp+0x14]
640159bc:	sub    eax,ecx
640159be:	dec    eax
640159bf:	cmp    eax,DWORD PTR [ebp+0x14]
640159c2:	jge    0x640159c5
640159c4:	inc    eax
640159c5:	mov    DWORD PTR [ebp+0x14],eax
640159c8:	mov    eax,ds:0x64038eac
640159cd:	cmp    eax,0x2
640159d0:	je     0x64015b81
640159d6:	cmp    eax,ebx
640159d8:	je     0x64015b81
640159de:	cmp    eax,0x1
640159e1:	jne    0x64015bb2
640159e7:	cmp    DWORD PTR [ebp+0x20],ebx
640159ea:	mov    DWORD PTR [ebp-0x8],ebx
640159ed:	jne    0x640159f7
640159ef:	mov    eax,DWORD PTR [esi]
640159f1:	mov    eax,DWORD PTR [eax+0x4]
640159f4:	mov    DWORD PTR [ebp+0x20],eax
640159f7:	mov    esi,DWORD PTR ds:0x64024028
640159fd:	xor    eax,eax
640159ff:	cmp    DWORD PTR [ebp+0x24],ebx
64015a02:	push   ebx
64015a03:	push   ebx
64015a04:	push   DWORD PTR [ebp+0x14]
64015a07:	setne  al
64015a0a:	push   DWORD PTR [ebp+0x10]
64015a0d:	lea    eax,[eax*8+0x1]
64015a14:	push   eax
64015a15:	push   DWORD PTR [ebp+0x20]
64015a18:	call   esi
64015a1a:	mov    edi,eax
64015a1c:	cmp    edi,ebx
64015a1e:	je     0x64015bb2
64015a24:	jle    0x64015a69
64015a26:	push   0xffffffe0
64015a28:	xor    edx,edx
64015a2a:	pop    eax
64015a2b:	div    edi
64015a2d:	cmp    eax,0x2
64015a30:	jb     0x64015a69
64015a32:	lea    eax,[edi+edi*1+0x8]
64015a36:	cmp    eax,0x400
64015a3b:	ja     0x64015a50
64015a3d:	call   0x64013d20
64015a42:	mov    eax,esp
64015a44:	cmp    eax,ebx
64015a46:	je     0x64015a64
64015a48:	mov    DWORD PTR [eax],0xcccc
64015a4e:	jmp    0x64015a61
64015a50:	push   eax
64015a51:	call   0x640148be
64015a56:	cmp    eax,ebx
64015a58:	pop    ecx
64015a59:	je     0x64015a64
64015a5b:	mov    DWORD PTR [eax],0xdddd
64015a61:	add    eax,0x8
64015a64:	mov    DWORD PTR [ebp-0xc],eax
64015a67:	jmp    0x64015a6c
64015a69:	mov    DWORD PTR [ebp-0xc],ebx
64015a6c:	cmp    DWORD PTR [ebp-0xc],ebx
64015a6f:	je     0x64015bb2
64015a75:	push   edi
64015a76:	push   DWORD PTR [ebp-0xc]
64015a79:	push   DWORD PTR [ebp+0x14]
64015a7c:	push   DWORD PTR [ebp+0x10]
64015a7f:	push   0x1
64015a81:	push   DWORD PTR [ebp+0x20]
64015a84:	call   esi
64015a86:	test   eax,eax
64015a88:	je     0x64015b70
64015a8e:	mov    esi,DWORD PTR ds:0x640241b0
64015a94:	push   ebx
64015a95:	push   ebx
64015a96:	push   edi
64015a97:	push   DWORD PTR [ebp-0xc]
64015a9a:	push   DWORD PTR [ebp+0xc]
64015a9d:	push   DWORD PTR [ebp+0x8]
64015aa0:	call   esi
64015aa2:	mov    ecx,eax
64015aa4:	cmp    ecx,ebx
64015aa6:	mov    DWORD PTR [ebp-0x8],ecx
64015aa9:	je     0x64015b70
64015aaf:	test   WORD PTR [ebp+0xc],0x400
64015ab5:	je     0x64015ae0
64015ab7:	cmp    DWORD PTR [ebp+0x1c],ebx
64015aba:	je     0x64015b70
64015ac0:	cmp    ecx,DWORD PTR [ebp+0x1c]
64015ac3:	jg     0x64015b70
64015ac9:	push   DWORD PTR [ebp+0x1c]
64015acc:	push   DWORD PTR [ebp+0x18]
64015acf:	push   edi
64015ad0:	push   DWORD PTR [ebp-0xc]
64015ad3:	push   DWORD PTR [ebp+0xc]
64015ad6:	push   DWORD PTR [ebp+0x8]
64015ad9:	call   esi
64015adb:	jmp    0x64015b70
64015ae0:	cmp    ecx,ebx
64015ae2:	jle    0x64015b29
64015ae4:	push   0xffffffe0
64015ae6:	xor    edx,edx
64015ae8:	pop    eax
64015ae9:	div    ecx
64015aeb:	cmp    eax,0x2
64015aee:	jb     0x64015b29
64015af0:	lea    eax,[ecx+ecx*1+0x8]
64015af4:	cmp    eax,0x400
64015af9:	ja     0x64015b11
64015afb:	call   0x64013d20
64015b00:	mov    esi,esp
64015b02:	cmp    esi,ebx
64015b04:	je     0x64015b70
64015b06:	mov    DWORD PTR [esi],0xcccc
64015b0c:	add    esi,0x8
64015b0f:	jmp    0x64015b2b
64015b11:	push   eax
64015b12:	call   0x640148be
64015b17:	cmp    eax,ebx
64015b19:	pop    ecx
64015b1a:	je     0x64015b25
64015b1c:	mov    DWORD PTR [eax],0xdddd
64015b22:	add    eax,0x8
64015b25:	mov    esi,eax
64015b27:	jmp    0x64015b2b
64015b29:	xor    esi,esi
64015b2b:	cmp    esi,ebx
64015b2d:	je     0x64015b70
64015b2f:	push   DWORD PTR [ebp-0x8]
64015b32:	push   esi
64015b33:	push   edi
64015b34:	push   DWORD PTR [ebp-0xc]
64015b37:	push   DWORD PTR [ebp+0xc]
64015b3a:	push   DWORD PTR [ebp+0x8]
64015b3d:	call   DWORD PTR ds:0x640241b0
64015b43:	test   eax,eax
64015b45:	je     0x64015b69
64015b47:	cmp    DWORD PTR [ebp+0x1c],ebx
64015b4a:	push   ebx
64015b4b:	push   ebx
64015b4c:	jne    0x64015b52
64015b4e:	push   ebx
64015b4f:	push   ebx
64015b50:	jmp    0x64015b58
64015b52:	push   DWORD PTR [ebp+0x1c]
64015b55:	push   DWORD PTR [ebp+0x18]
64015b58:	push   DWORD PTR [ebp-0x8]
64015b5b:	push   esi
64015b5c:	push   ebx
64015b5d:	push   DWORD PTR [ebp+0x20]
64015b60:	call   DWORD PTR ds:0x64024010
64015b66:	mov    DWORD PTR [ebp-0x8],eax
64015b69:	push   esi
64015b6a:	call   0x6401430a
64015b6f:	pop    ecx
64015b70:	push   DWORD PTR [ebp-0xc]
64015b73:	call   0x6401430a
64015b78:	mov    eax,DWORD PTR [ebp-0x8]
64015b7b:	pop    ecx
64015b7c:	jmp    0x64015cda
64015b81:	cmp    DWORD PTR [ebp+0x8],ebx
64015b84:	mov    DWORD PTR [ebp-0xc],ebx
64015b87:	mov    DWORD PTR [ebp-0x10],ebx
64015b8a:	jne    0x64015b94
64015b8c:	mov    eax,DWORD PTR [esi]
64015b8e:	mov    eax,DWORD PTR [eax+0x14]
64015b91:	mov    DWORD PTR [ebp+0x8],eax
64015b94:	cmp    DWORD PTR [ebp+0x20],ebx
64015b97:	jne    0x64015ba1
64015b99:	mov    eax,DWORD PTR [esi]
64015b9b:	mov    eax,DWORD PTR [eax+0x4]
64015b9e:	mov    DWORD PTR [ebp+0x20],eax
64015ba1:	push   DWORD PTR [ebp+0x8]
64015ba4:	call   0x6401e060
64015ba9:	cmp    eax,0xffffffff
64015bac:	pop    ecx
64015bad:	mov    DWORD PTR [ebp-0x14],eax
64015bb0:	jne    0x64015bb9
64015bb2:	xor    eax,eax
64015bb4:	jmp    0x64015cda
64015bb9:	cmp    eax,DWORD PTR [ebp+0x20]
64015bbc:	je     0x64015c9d
64015bc2:	push   ebx
64015bc3:	push   ebx
64015bc4:	lea    ecx,[ebp+0x14]
64015bc7:	push   ecx
64015bc8:	push   DWORD PTR [ebp+0x10]
64015bcb:	push   eax
64015bcc:	push   DWORD PTR [ebp+0x20]
64015bcf:	call   0x6401e0a7
64015bd4:	add    esp,0x18
64015bd7:	cmp    eax,ebx
64015bd9:	mov    DWORD PTR [ebp-0xc],eax
64015bdc:	je     0x64015bb2
64015bde:	mov    esi,DWORD PTR ds:0x640241ac
64015be4:	push   ebx
64015be5:	push   ebx
64015be6:	push   DWORD PTR [ebp+0x14]
64015be9:	push   eax
64015bea:	push   DWORD PTR [ebp+0xc]
64015bed:	push   DWORD PTR [ebp+0x8]
64015bf0:	call   esi
64015bf2:	cmp    eax,ebx
64015bf4:	mov    DWORD PTR [ebp-0x8],eax
64015bf7:	jne    0x64015c00
64015bf9:	xor    esi,esi
64015bfb:	jmp    0x64015cb7
64015c00:	jle    0x64015c3f
64015c02:	cmp    eax,0xffffffe0
64015c05:	ja     0x64015c3f
64015c07:	add    eax,0x8
64015c0a:	cmp    eax,0x400
64015c0f:	ja     0x64015c27
64015c11:	call   0x64013d20
64015c16:	mov    edi,esp
64015c18:	cmp    edi,ebx
64015c1a:	je     0x64015bf9
64015c1c:	mov    DWORD PTR [edi],0xcccc
64015c22:	add    edi,0x8
64015c25:	jmp    0x64015c41
64015c27:	push   eax
64015c28:	call   0x640148be
64015c2d:	cmp    eax,ebx
64015c2f:	pop    ecx
64015c30:	je     0x64015c3b
64015c32:	mov    DWORD PTR [eax],0xdddd
64015c38:	add    eax,0x8
64015c3b:	mov    edi,eax
64015c3d:	jmp    0x64015c41
64015c3f:	xor    edi,edi
64015c41:	cmp    edi,ebx
64015c43:	je     0x64015bf9
64015c45:	push   DWORD PTR [ebp-0x8]
64015c48:	push   ebx
64015c49:	push   edi
64015c4a:	call   0x64015160
64015c4f:	add    esp,0xc
64015c52:	push   DWORD PTR [ebp-0x8]
64015c55:	push   edi
64015c56:	push   DWORD PTR [ebp+0x14]
64015c59:	push   DWORD PTR [ebp-0xc]
64015c5c:	push   DWORD PTR [ebp+0xc]
64015c5f:	push   DWORD PTR [ebp+0x8]
64015c62:	call   esi
64015c64:	cmp    eax,ebx
64015c66:	mov    DWORD PTR [ebp-0x8],eax
64015c69:	jne    0x64015c6f
64015c6b:	xor    esi,esi
64015c6d:	jmp    0x64015c94
64015c6f:	push   DWORD PTR [ebp+0x1c]
64015c72:	lea    eax,[ebp-0x8]
64015c75:	push   DWORD PTR [ebp+0x18]
64015c78:	push   eax
64015c79:	push   edi
64015c7a:	push   DWORD PTR [ebp+0x20]
64015c7d:	push   DWORD PTR [ebp-0x14]
64015c80:	call   0x6401e0a7
64015c85:	mov    esi,eax
64015c87:	mov    DWORD PTR [ebp-0x10],esi
64015c8a:	add    esp,0x18
64015c8d:	neg    esi
64015c8f:	sbb    esi,esi
64015c91:	and    esi,DWORD PTR [ebp-0x8]
64015c94:	push   edi
64015c95:	call   0x6401430a
64015c9a:	pop    ecx
64015c9b:	jmp    0x64015cb7
64015c9d:	push   DWORD PTR [ebp+0x1c]
64015ca0:	push   DWORD PTR [ebp+0x18]
64015ca3:	push   DWORD PTR [ebp+0x14]
64015ca6:	push   DWORD PTR [ebp+0x10]
64015ca9:	push   DWORD PTR [ebp+0xc]
64015cac:	push   DWORD PTR [ebp+0x8]
64015caf:	call   DWORD PTR ds:0x640241ac
64015cb5:	mov    esi,eax
64015cb7:	cmp    DWORD PTR [ebp-0xc],ebx
64015cba:	je     0x64015cc5
64015cbc:	push   DWORD PTR [ebp-0xc]
64015cbf:	call   0x6401475a
64015cc4:	pop    ecx
64015cc5:	mov    eax,DWORD PTR [ebp-0x10]
64015cc8:	cmp    eax,ebx
64015cca:	je     0x64015cd8
64015ccc:	cmp    DWORD PTR [ebp+0x18],eax
64015ccf:	je     0x64015cd8
64015cd1:	push   eax
64015cd2:	call   0x6401475a
64015cd7:	pop    ecx
64015cd8:	mov    eax,esi
64015cda:	lea    esp,[ebp-0x20]
64015cdd:	pop    edi
64015cde:	pop    esi
64015cdf:	pop    ebx
64015ce0:	mov    ecx,DWORD PTR [ebp-0x4]
64015ce3:	xor    ecx,ebp
64015ce5:	call   0x64013d06
64015cea:	leave  
64015ceb:	ret    
64015cec:	push   ebp
64015ced:	mov    ebp,esp
64015cef:	sub    esp,0x10
64015cf2:	push   DWORD PTR [ebp+0x8]
64015cf5:	lea    ecx,[ebp-0x10]
64015cf8:	call   0x64014325
64015cfd:	push   DWORD PTR [ebp+0x28]
64015d00:	lea    ecx,[ebp-0x10]
64015d03:	push   DWORD PTR [ebp+0x24]
64015d06:	push   DWORD PTR [ebp+0x20]
64015d09:	push   DWORD PTR [ebp+0x1c]
64015d0c:	push   DWORD PTR [ebp+0x18]
64015d0f:	push   DWORD PTR [ebp+0x14]
64015d12:	push   DWORD PTR [ebp+0x10]
64015d15:	push   DWORD PTR [ebp+0xc]
64015d18:	call   0x6401594a
64015d1d:	add    esp,0x20
64015d20:	cmp    BYTE PTR [ebp-0x4],0x0
64015d24:	je     0x64015d2d
64015d26:	mov    ecx,DWORD PTR [ebp-0x8]
64015d29:	and    DWORD PTR [ecx+0x70],0xfffffffd
64015d2d:	leave  
64015d2e:	ret    
64015d2f:	push   esi
64015d30:	push   edi
64015d31:	xor    esi,esi
64015d33:	push   DWORD PTR [esp+0xc]
64015d37:	call   0x640148be
64015d3c:	mov    edi,eax
64015d3e:	test   edi,edi
64015d40:	pop    ecx
64015d41:	jne    0x64015d6a
64015d43:	cmp    DWORD PTR ds:0x64038eb0,eax
64015d49:	jbe    0x64015d6a
64015d4b:	push   esi
64015d4c:	call   DWORD PTR ds:0x64024040
64015d52:	lea    eax,[esi+0x3e8]
64015d58:	cmp    eax,DWORD PTR ds:0x64038eb0
64015d5e:	jbe    0x64015d63
64015d60:	or     eax,0xffffffff
64015d63:	cmp    eax,0xffffffff
64015d66:	mov    esi,eax
64015d68:	jne    0x64015d33
64015d6a:	mov    eax,edi
64015d6c:	pop    edi
64015d6d:	pop    esi
64015d6e:	ret    
64015d6f:	push   esi
64015d70:	push   edi
64015d71:	xor    esi,esi
64015d73:	push   0x0
64015d75:	push   DWORD PTR [esp+0x14]
64015d79:	push   DWORD PTR [esp+0x14]
64015d7d:	call   0x6401e259
64015d82:	mov    edi,eax
64015d84:	add    esp,0xc
64015d87:	test   edi,edi
64015d89:	jne    0x64015db2
64015d8b:	cmp    DWORD PTR ds:0x64038eb0,eax
64015d91:	jbe    0x64015db2
64015d93:	push   esi
64015d94:	call   DWORD PTR ds:0x64024040
64015d9a:	lea    eax,[esi+0x3e8]
64015da0:	cmp    eax,DWORD PTR ds:0x64038eb0
64015da6:	jbe    0x64015dab
64015da8:	or     eax,0xffffffff
64015dab:	cmp    eax,0xffffffff
64015dae:	mov    esi,eax
64015db0:	jne    0x64015d73
64015db2:	mov    eax,edi
64015db4:	pop    edi
64015db5:	pop    esi
64015db6:	ret    
64015db7:	push   esi
64015db8:	push   edi
64015db9:	xor    esi,esi
64015dbb:	push   DWORD PTR [esp+0x10]
64015dbf:	push   DWORD PTR [esp+0x10]
64015dc3:	call   0x64016106
64015dc8:	mov    edi,eax
64015dca:	test   edi,edi
64015dcc:	pop    ecx
64015dcd:	pop    ecx
64015dce:	jne    0x64015dfd
64015dd0:	cmp    DWORD PTR [esp+0x10],eax
64015dd4:	je     0x64015dfd
64015dd6:	cmp    DWORD PTR ds:0x64038eb0,eax
64015ddc:	jbe    0x64015dfd
64015dde:	push   esi
64015ddf:	call   DWORD PTR ds:0x64024040
64015de5:	lea    eax,[esi+0x3e8]
64015deb:	cmp    eax,DWORD PTR ds:0x64038eb0
64015df1:	jbe    0x64015df6
64015df3:	or     eax,0xffffffff
64015df6:	cmp    eax,0xffffffff
64015df9:	mov    esi,eax
64015dfb:	jne    0x64015dbb
64015dfd:	mov    eax,edi
64015dff:	pop    edi
64015e00:	pop    esi
64015e01:	ret    
64015e02:	push   ebp
64015e03:	lea    ebp,[esp-0x2a8]
64015e0a:	sub    esp,0x328
64015e10:	mov    eax,ds:0x64037644
64015e15:	xor    eax,ebp
64015e17:	mov    DWORD PTR [ebp+0x2a4],eax
64015e1d:	test   BYTE PTR ds:0x6403775c,0x1
64015e24:	push   esi
64015e25:	je     0x64015e2f
64015e27:	push   0xa
64015e29:	call   0x6401bb0d
64015e2e:	pop    ecx
64015e2f:	call   0x6401e3c4
64015e34:	test   eax,eax
64015e36:	je     0x64015e40
64015e38:	push   0x16
64015e3a:	call   0x6401e3d1
64015e3f:	pop    ecx
64015e40:	test   BYTE PTR ds:0x6403775c,0x2
64015e47:	je     0x64015eed
64015e4d:	mov    DWORD PTR [ebp+0x88],eax
64015e53:	mov    DWORD PTR [ebp+0x84],ecx
64015e59:	mov    DWORD PTR [ebp+0x80],edx
64015e5f:	mov    DWORD PTR [ebp+0x7c],ebx
64015e62:	mov    DWORD PTR [ebp+0x78],esi
64015e65:	mov    DWORD PTR [ebp+0x74],edi
64015e68:	data16 mov WORD PTR [ebp+0xa0],ss
64015e6f:	data16 mov WORD PTR [ebp+0x94],cs
64015e76:	data16 mov WORD PTR [ebp+0x70],ds
64015e7a:	data16 mov WORD PTR [ebp+0x6c],es
64015e7e:	data16 mov WORD PTR [ebp+0x68],fs
64015e82:	data16 mov WORD PTR [ebp+0x64],gs
64015e86:	pushf  
64015e87:	pop    DWORD PTR [ebp+0x98]
64015e8d:	mov    esi,DWORD PTR [ebp+0x2ac]
64015e93:	lea    eax,[ebp+0x2ac]
64015e99:	mov    DWORD PTR [ebp+0x9c],eax
64015e9f:	mov    DWORD PTR [ebp-0x28],0x10001
64015ea6:	mov    DWORD PTR [ebp+0x90],esi
64015eac:	mov    eax,DWORD PTR [eax-0x4]
64015eaf:	push   0x50
64015eb1:	mov    DWORD PTR [ebp+0x8c],eax
64015eb7:	lea    eax,[ebp-0x80]
64015eba:	push   0x0
64015ebc:	push   eax
64015ebd:	call   0x64015160
64015ec2:	lea    eax,[ebp-0x80]
64015ec5:	add    esp,0xc
64015ec8:	mov    DWORD PTR [ebp-0x30],eax
64015ecb:	lea    eax,[ebp-0x28]
64015ece:	push   0x0
64015ed0:	mov    DWORD PTR [ebp-0x80],0x40000015
64015ed7:	mov    DWORD PTR [ebp-0x74],esi
64015eda:	mov    DWORD PTR [ebp-0x2c],eax
64015edd:	call   DWORD PTR ds:0x64024198
64015ee3:	lea    eax,[ebp-0x30]
64015ee6:	push   eax
64015ee7:	call   DWORD PTR ds:0x64024194
64015eed:	push   0x3
64015eef:	call   0x640180a9
64015ef4:	int3   
64015ef5:	mov    ecx,DWORD PTR [esp+0x8]
64015ef9:	mov    eax,ds:0x6403775c
64015efe:	mov    edx,DWORD PTR [esp+0x4]
64015f02:	and    edx,DWORD PTR [esp+0x8]
64015f06:	not    ecx
64015f08:	and    ecx,eax
64015f0a:	or     ecx,edx
64015f0c:	mov    DWORD PTR ds:0x6403775c,ecx
64015f12:	ret    
64015f13:	int3   
64015f14:	push   0x64015f70
64015f19:	push   DWORD PTR fs:0x0
64015f20:	mov    eax,DWORD PTR [esp+0x10]
64015f24:	mov    DWORD PTR [esp+0x10],ebp
64015f28:	lea    ebp,[esp+0x10]
64015f2c:	sub    esp,eax
64015f2e:	push   ebx
64015f2f:	push   esi
64015f30:	push   edi
64015f31:	mov    eax,ds:0x64037644
64015f36:	xor    DWORD PTR [ebp-0x4],eax
64015f39:	xor    eax,ebp
64015f3b:	push   eax
64015f3c:	mov    DWORD PTR [ebp-0x18],esp
64015f3f:	push   DWORD PTR [ebp-0x8]
64015f42:	mov    eax,DWORD PTR [ebp-0x4]
64015f45:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015f4c:	mov    DWORD PTR [ebp-0x8],eax
64015f4f:	lea    eax,[ebp-0x10]
64015f52:	mov    fs:0x0,eax
64015f58:	ret    
64015f59:	mov    ecx,DWORD PTR [ebp-0x10]
64015f5c:	mov    DWORD PTR fs:0x0,ecx
64015f63:	pop    ecx
64015f64:	pop    edi
64015f65:	pop    edi
64015f66:	pop    esi
64015f67:	pop    ebx
64015f68:	mov    esp,ebp
64015f6a:	pop    ebp
64015f6b:	push   ecx
64015f6c:	ret    
64015f6d:	int3   
64015f6e:	int3   
64015f6f:	int3   
64015f70:	sub    esp,0x14
64015f73:	push   ebx
64015f74:	mov    ebx,DWORD PTR [esp+0x20]
64015f78:	push   ebp
64015f79:	push   esi
64015f7a:	mov    esi,DWORD PTR [ebx+0x8]
64015f7d:	xor    esi,DWORD PTR ds:0x64037644
64015f83:	push   edi
64015f84:	mov    eax,DWORD PTR [esi]
64015f86:	cmp    eax,0xfffffffe
64015f89:	mov    BYTE PTR [esp+0x13],0x0
64015f8e:	mov    DWORD PTR [esp+0x18],0x1
64015f96:	lea    edi,[ebx+0x10]
64015f99:	je     0x64015fa8
64015f9b:	mov    ecx,DWORD PTR [esi+0x4]
64015f9e:	add    ecx,edi
64015fa0:	xor    ecx,DWORD PTR [eax+edi*1]
64015fa3:	call   0x64013d06
64015fa8:	mov    ecx,DWORD PTR [esi+0xc]
64015fab:	mov    eax,DWORD PTR [esi+0x8]
64015fae:	add    ecx,edi
64015fb0:	xor    ecx,DWORD PTR [eax+edi*1]
64015fb3:	call   0x64013d06
64015fb8:	mov    eax,DWORD PTR [esp+0x28]
64015fbc:	test   BYTE PTR [eax+0x4],0x66
64015fc0:	jne    0x640160e5
64015fc6:	mov    ebp,DWORD PTR [ebx+0xc]
64015fc9:	cmp    ebp,0xfffffffe
64015fcc:	mov    ecx,DWORD PTR [esp+0x30]
64015fd0:	lea    edx,[esp+0x1c]
64015fd4:	mov    DWORD PTR [esp+0x1c],eax
64015fd8:	mov    DWORD PTR [esp+0x20],ecx
64015fdc:	mov    DWORD PTR [ebx-0x4],edx
64015fdf:	je     0x6401603f
64015fe1:	lea    eax,[ebp+ebp*2+0x0]
64015fe5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
64015fe9:	test   ecx,ecx
64015feb:	lea    ebx,[esi+eax*4+0x10]
64015fef:	mov    eax,DWORD PTR [ebx]
64015ff1:	mov    DWORD PTR [esp+0x14],eax
64015ff5:	je     0x6401600d
64015ff7:	mov    edx,edi
64015ff9:	call   0x6401980e
64015ffe:	test   eax,eax
64016000:	mov    BYTE PTR [esp+0x13],0x1
64016005:	jl     0x6401604b
64016007:	jg     0x64016055
64016009:	mov    eax,DWORD PTR [esp+0x14]
6401600d:	cmp    eax,0xfffffffe
64016010:	mov    ebp,eax
64016012:	jne    0x64015fe1
64016014:	cmp    BYTE PTR [esp+0x13],0x0
64016019:	je     0x6401603f
6401601b:	mov    eax,DWORD PTR [esi]
6401601d:	cmp    eax,0xfffffffe
64016020:	je     0x6401602f
64016022:	mov    ecx,DWORD PTR [esi+0x4]
64016025:	add    ecx,edi
64016027:	xor    ecx,DWORD PTR [eax+edi*1]
6401602a:	call   0x64013d06
6401602f:	mov    ecx,DWORD PTR [esi+0xc]
64016032:	mov    eax,DWORD PTR [esi+0x8]
64016035:	add    ecx,edi
64016037:	xor    ecx,DWORD PTR [eax+edi*1]
6401603a:	call   0x64013d06
6401603f:	mov    eax,DWORD PTR [esp+0x18]
64016043:	pop    edi
64016044:	pop    esi
64016045:	pop    ebp
64016046:	pop    ebx
64016047:	add    esp,0x14
6401604a:	ret    
6401604b:	mov    DWORD PTR [esp+0x18],0x0
64016053:	jmp    0x6401601b
64016055:	mov    ecx,DWORD PTR [esp+0x28]
64016059:	cmp    DWORD PTR [ecx],0xe06d7363
6401605f:	jne    0x6401608b
64016061:	cmp    DWORD PTR ds:0x640284a0,0x0
64016068:	je     0x6401608b
6401606a:	push   0x640284a0
6401606f:	call   0x6401e610
64016074:	add    esp,0x4
64016077:	test   eax,eax
64016079:	je     0x6401608b
6401607b:	mov    edx,DWORD PTR [esp+0x28]
6401607f:	push   0x1
64016081:	push   edx
64016082:	call   DWORD PTR ds:0x640284a0
64016088:	add    esp,0x8
6401608b:	mov    ecx,DWORD PTR [esp+0x2c]
6401608f:	call   0x6401983e
64016094:	mov    eax,DWORD PTR [esp+0x2c]
64016098:	cmp    DWORD PTR [eax+0xc],ebp
6401609b:	je     0x640160b0
6401609d:	push   0x64037644
640160a2:	push   edi
640160a3:	mov    edx,ebp
640160a5:	mov    ecx,eax
640160a7:	call   0x64019858
640160ac:	mov    eax,DWORD PTR [esp+0x2c]
640160b0:	mov    ecx,DWORD PTR [esp+0x14]
640160b4:	mov    DWORD PTR [eax+0xc],ecx
640160b7:	mov    eax,DWORD PTR [esi]
640160b9:	cmp    eax,0xfffffffe
640160bc:	je     0x640160cb
640160be:	mov    ecx,DWORD PTR [esi+0x4]
640160c1:	add    ecx,edi
640160c3:	xor    ecx,DWORD PTR [eax+edi*1]
640160c6:	call   0x64013d06
640160cb:	mov    ecx,DWORD PTR [esi+0xc]
640160ce:	mov    edx,DWORD PTR [esi+0x8]
640160d1:	add    ecx,edi
640160d3:	xor    ecx,DWORD PTR [edx+edi*1]
640160d6:	call   0x64013d06
640160db:	mov    ecx,DWORD PTR [ebx+0x8]
640160de:	mov    edx,edi
640160e0:	jmp    0x64019825
640160e5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
640160e9:	je     0x6401603f
640160ef:	push   0x64037644
640160f4:	push   edi
640160f5:	mov    ecx,ebx
640160f7:	mov    edx,0xfffffffe
640160fc:	call   0x64019858
64016101:	jmp    0x6401601b
64016106:	push   0x10
64016108:	push   0x6402b7b8
6401610d:	call   0x64015f14
64016112:	mov    ebx,DWORD PTR [ebp+0x8]
64016115:	test   ebx,ebx
64016117:	jne    0x64016127
64016119:	push   DWORD PTR [ebp+0xc]
6401611c:	call   0x640148be
64016121:	pop    ecx
64016122:	jmp    0x640162f3
64016127:	mov    esi,DWORD PTR [ebp+0xc]
6401612a:	test   esi,esi
6401612c:	jne    0x6401613a
6401612e:	push   ebx
6401612f:	call   0x6401475a
64016134:	pop    ecx
64016135:	jmp    0x640162f1
6401613a:	cmp    DWORD PTR ds:0x6403ab64,0x3
64016141:	jne    0x640162da
64016147:	xor    edi,edi
64016149:	mov    DWORD PTR [ebp-0x1c],edi
6401614c:	cmp    esi,0xffffffe0
6401614f:	ja     0x640162df
64016155:	push   0x4
64016157:	call   0x6401af0e
6401615c:	pop    ecx
6401615d:	mov    DWORD PTR [ebp-0x4],edi
64016160:	push   ebx
64016161:	call   0x6401af87
64016166:	pop    ecx
64016167:	mov    DWORD PTR [ebp-0x20],eax
6401616a:	cmp    eax,edi
6401616c:	je     0x64016210
64016172:	cmp    esi,DWORD PTR ds:0x64039b30
64016178:	ja     0x640161c3
6401617a:	push   esi
6401617b:	push   ebx
6401617c:	push   eax
6401617d:	call   0x6401b47c
64016182:	add    esp,0xc
64016185:	test   eax,eax
64016187:	je     0x6401618e
64016189:	mov    DWORD PTR [ebp-0x1c],ebx
6401618c:	jmp    0x640161c3
6401618e:	push   esi
6401618f:	call   0x6401b75b
64016194:	pop    ecx
64016195:	mov    DWORD PTR [ebp-0x1c],eax
64016198:	cmp    eax,edi
6401619a:	je     0x640161c3
6401619c:	mov    eax,DWORD PTR [ebx-0x4]
6401619f:	dec    eax
640161a0:	cmp    eax,esi
640161a2:	jb     0x640161a6
640161a4:	mov    eax,esi
640161a6:	push   eax
640161a7:	push   ebx
640161a8:	push   DWORD PTR [ebp-0x1c]
640161ab:	call   0x640151e0
640161b0:	push   ebx
640161b1:	call   0x6401af87
640161b6:	mov    DWORD PTR [ebp-0x20],eax
640161b9:	push   ebx
640161ba:	push   eax
640161bb:	call   0x6401afb2
640161c0:	add    esp,0x18
640161c3:	cmp    DWORD PTR [ebp-0x1c],edi
640161c6:	jne    0x64016210
640161c8:	cmp    esi,edi
640161ca:	jne    0x640161d2
640161cc:	xor    esi,esi
640161ce:	inc    esi
640161cf:	mov    DWORD PTR [ebp+0xc],esi
640161d2:	add    esi,0xf
640161d5:	and    esi,0xfffffff0
640161d8:	mov    DWORD PTR [ebp+0xc],esi
640161db:	push   esi
640161dc:	push   edi
640161dd:	push   DWORD PTR ds:0x64039354
640161e3:	call   DWORD PTR ds:0x6402417c
640161e9:	mov    DWORD PTR [ebp-0x1c],eax
640161ec:	cmp    eax,edi
640161ee:	je     0x64016210
640161f0:	mov    eax,DWORD PTR [ebx-0x4]
640161f3:	dec    eax
640161f4:	cmp    eax,esi
640161f6:	jb     0x640161fa
640161f8:	mov    eax,esi
640161fa:	push   eax
640161fb:	push   ebx
640161fc:	push   DWORD PTR [ebp-0x1c]
640161ff:	call   0x640151e0
64016204:	push   ebx
64016205:	push   DWORD PTR [ebp-0x20]
64016208:	call   0x6401afb2
6401620d:	add    esp,0x14
64016210:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016217:	call   0x6401624a
6401621c:	cmp    DWORD PTR [ebp-0x20],0x0
64016220:	jne    0x64016253
64016222:	test   esi,esi
64016224:	jne    0x64016227
64016226:	inc    esi
64016227:	add    esi,0xf
6401622a:	and    esi,0xfffffff0
6401622d:	mov    DWORD PTR [ebp+0xc],esi
64016230:	push   esi
64016231:	push   ebx
64016232:	push   0x0
64016234:	push   DWORD PTR ds:0x64039354
6401623a:	call   DWORD PTR ds:0x64024184
64016240:	mov    edi,eax
64016242:	jmp    0x64016256
64016244:	mov    esi,DWORD PTR [ebp+0xc]
64016247:	mov    ebx,DWORD PTR [ebp+0x8]
6401624a:	push   0x4
6401624c:	call   0x6401ae36
64016251:	pop    ecx
64016252:	ret    
64016253:	mov    edi,DWORD PTR [ebp-0x1c]
64016256:	test   edi,edi
64016258:	jne    0x6401631d
6401625e:	cmp    DWORD PTR ds:0x6403980c,edi
64016264:	je     0x64016292
64016266:	push   esi
64016267:	call   0x6401687f
6401626c:	pop    ecx
6401626d:	test   eax,eax
6401626f:	jne    0x64016147
64016275:	call   0x640164c3
6401627a:	cmp    DWORD PTR [ebp-0x20],edi
6401627d:	jne    0x640162eb
6401627f:	mov    esi,eax
64016281:	call   DWORD PTR ds:0x64024064
64016287:	push   eax
64016288:	call   0x64016488
6401628d:	pop    ecx
6401628e:	mov    DWORD PTR [esi],eax
64016290:	jmp    0x640162f1
64016292:	test   edi,edi
64016294:	jne    0x6401631d
6401629a:	call   0x640164c3
6401629f:	cmp    DWORD PTR [ebp-0x20],edi
640162a2:	je     0x6401630c
640162a4:	mov    DWORD PTR [eax],0xc
640162aa:	jmp    0x6401631d
640162ac:	test   esi,esi
640162ae:	jne    0x640162b1
640162b0:	inc    esi
640162b1:	push   esi
640162b2:	push   ebx
640162b3:	push   0x0
640162b5:	push   DWORD PTR ds:0x64039354
640162bb:	call   DWORD PTR ds:0x64024184
640162c1:	mov    edi,eax
640162c3:	test   edi,edi
640162c5:	jne    0x6401631d
640162c7:	cmp    DWORD PTR ds:0x6403980c,eax
640162cd:	je     0x64016303
640162cf:	push   esi
640162d0:	call   0x6401687f
640162d5:	pop    ecx
640162d6:	test   eax,eax
640162d8:	je     0x640162f9
640162da:	cmp    esi,0xffffffe0
640162dd:	jbe    0x640162ac
640162df:	push   esi
640162e0:	call   0x6401687f
640162e5:	pop    ecx
640162e6:	call   0x640164c3
640162eb:	mov    DWORD PTR [eax],0xc
640162f1:	xor    eax,eax
640162f3:	call   0x64015f59
640162f8:	ret    
640162f9:	call   0x640164c3
640162fe:	jmp    0x6401627f
64016303:	test   edi,edi
64016305:	jne    0x6401631d
64016307:	call   0x640164c3
6401630c:	mov    esi,eax
6401630e:	call   DWORD PTR ds:0x64024064
64016314:	push   eax
64016315:	call   0x64016488
6401631a:	mov    DWORD PTR [esi],eax
6401631c:	pop    ecx
6401631d:	mov    eax,edi
6401631f:	jmp    0x640162f3
64016321:	mov    ecx,DWORD PTR [esp+0x4]
64016325:	push   ebx
64016326:	xor    ebx,ebx
64016328:	cmp    ecx,ebx
6401632a:	push   esi
6401632b:	push   edi
6401632c:	je     0x64016336
6401632e:	mov    edi,DWORD PTR [esp+0x14]
64016332:	cmp    edi,ebx
64016334:	ja     0x64016351
64016336:	call   0x640164c3
6401633b:	push   0x16
6401633d:	pop    esi
6401633e:	mov    DWORD PTR [eax],esi
64016340:	push   ebx
64016341:	push   ebx
64016342:	push   ebx
64016343:	push   ebx
64016344:	push   ebx
64016345:	call   0x64013e52
6401634a:	add    esp,0x14
6401634d:	mov    eax,esi
6401634f:	jmp    0x64016382
64016351:	mov    esi,DWORD PTR [esp+0x18]
64016355:	cmp    esi,ebx
64016357:	jne    0x6401635d
64016359:	mov    BYTE PTR [ecx],bl
6401635b:	jmp    0x64016336
6401635d:	mov    edx,ecx
6401635f:	mov    al,BYTE PTR [esi]
64016361:	mov    BYTE PTR [edx],al
64016363:	inc    edx
64016364:	inc    esi
64016365:	cmp    al,bl
64016367:	je     0x6401636c
64016369:	dec    edi
6401636a:	jne    0x6401635f
6401636c:	cmp    edi,ebx
6401636e:	jne    0x64016380
64016370:	mov    BYTE PTR [ecx],bl
64016372:	call   0x640164c3
64016377:	push   0x22
64016379:	pop    ecx
6401637a:	mov    DWORD PTR [eax],ecx
6401637c:	mov    esi,ecx
6401637e:	jmp    0x64016340
64016380:	xor    eax,eax
64016382:	pop    edi
64016383:	pop    esi
64016384:	pop    ebx
64016385:	ret    
64016386:	push   0xc
64016388:	push   0x6402b7d8
6401638d:	call   0x64015f14
64016392:	push   0xe
64016394:	call   0x6401af0e
64016399:	pop    ecx
6401639a:	and    DWORD PTR [ebp-0x4],0x0
6401639e:	mov    esi,DWORD PTR [ebp+0x8]
640163a1:	mov    ecx,DWORD PTR [esi+0x4]
640163a4:	test   ecx,ecx
640163a6:	je     0x640163d7
640163a8:	mov    eax,ds:0x64038eb8
640163ad:	mov    edx,0x64038eb4
640163b2:	mov    DWORD PTR [ebp-0x1c],eax
640163b5:	test   eax,eax
640163b7:	je     0x640163ca
640163b9:	cmp    DWORD PTR [eax],ecx
640163bb:	jne    0x640163e9
640163bd:	mov    ecx,DWORD PTR [eax+0x4]
640163c0:	mov    DWORD PTR [edx+0x4],ecx
640163c3:	push   eax
640163c4:	call   0x6401475a
640163c9:	pop    ecx
640163ca:	push   DWORD PTR [esi+0x4]
640163cd:	call   0x6401475a
640163d2:	pop    ecx
640163d3:	and    DWORD PTR [esi+0x4],0x0
640163d7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640163de:	call   0x640163ed
640163e3:	call   0x64015f59
640163e8:	ret    
640163e9:	mov    edx,eax
640163eb:	jmp    0x640163b2
640163ed:	push   0xe
640163ef:	call   0x6401ae36
640163f4:	pop    ecx
640163f5:	ret    
640163f6:	int3   
640163f7:	int3   
640163f8:	int3   
640163f9:	int3   
640163fa:	int3   
640163fb:	int3   
640163fc:	int3   
640163fd:	int3   
640163fe:	int3   
640163ff:	int3   
64016400:	mov    edx,DWORD PTR [esp+0x4]
64016404:	mov    ecx,DWORD PTR [esp+0x8]
64016408:	test   edx,0x3
6401640e:	jne    0x6401644c
64016410:	mov    eax,DWORD PTR [edx]
64016412:	cmp    al,BYTE PTR [ecx]
64016414:	jne    0x64016444
64016416:	or     al,al
64016418:	je     0x64016440
6401641a:	cmp    ah,BYTE PTR [ecx+0x1]
6401641d:	jne    0x64016444
6401641f:	or     ah,ah
64016421:	je     0x64016440
64016423:	shr    eax,0x10
64016426:	cmp    al,BYTE PTR [ecx+0x2]
64016429:	jne    0x64016444
6401642b:	or     al,al
6401642d:	je     0x64016440
6401642f:	cmp    ah,BYTE PTR [ecx+0x3]
64016432:	jne    0x64016444
64016434:	add    ecx,0x4
64016437:	add    edx,0x4
6401643a:	or     ah,ah
6401643c:	jne    0x64016410
6401643e:	mov    edi,edi
64016440:	xor    eax,eax
64016442:	ret    
64016443:	nop
64016444:	sbb    eax,eax
64016446:	shl    eax,1
64016448:	add    eax,0x1
6401644b:	ret    
6401644c:	test   edx,0x1
64016452:	je     0x6401646c
64016454:	mov    al,BYTE PTR [edx]
64016456:	add    edx,0x1
64016459:	cmp    al,BYTE PTR [ecx]
6401645b:	jne    0x64016444
6401645d:	add    ecx,0x1
64016460:	or     al,al
64016462:	je     0x64016440
64016464:	test   edx,0x2
6401646a:	je     0x64016410
6401646c:	mov    ax,WORD PTR [edx]
6401646f:	add    edx,0x2
64016472:	cmp    al,BYTE PTR [ecx]
64016474:	jne    0x64016444
64016476:	or     al,al
64016478:	je     0x64016440
6401647a:	cmp    ah,BYTE PTR [ecx+0x1]
6401647d:	jne    0x64016444
6401647f:	or     ah,ah
64016481:	je     0x64016440
64016483:	add    ecx,0x2
64016486:	jmp    0x64016410
64016488:	mov    eax,DWORD PTR [esp+0x4]
6401648c:	xor    ecx,ecx
6401648e:	cmp    eax,DWORD PTR [ecx*8+0x64037770]
64016495:	je     0x640164a9
64016497:	inc    ecx
64016498:	cmp    ecx,0x2d
6401649b:	jb     0x6401648e
6401649d:	lea    ecx,[eax-0x13]
640164a0:	cmp    ecx,0x11
640164a3:	ja     0x640164b1
640164a5:	push   0xd
640164a7:	pop    eax
640164a8:	ret    
640164a9:	mov    eax,DWORD PTR [ecx*8+0x64037774]
640164b0:	ret    
640164b1:	add    eax,0xffffff44
640164b6:	push   0xe
640164b8:	pop    ecx
640164b9:	cmp    ecx,eax
640164bb:	sbb    eax,eax
640164bd:	and    eax,ecx
640164bf:	add    eax,0x8
640164c2:	ret    
640164c3:	call   0x640177b3
640164c8:	test   eax,eax
640164ca:	jne    0x640164d2
640164cc:	mov    eax,0x640378d8
640164d1:	ret    
640164d2:	add    eax,0x8
640164d5:	ret    
640164d6:	call   0x640177b3
640164db:	test   eax,eax
640164dd:	jne    0x640164e5
640164df:	mov    eax,0x640378dc
640164e4:	ret    
640164e5:	add    eax,0xc
640164e8:	ret    
640164e9:	push   esi
640164ea:	call   0x640164d6
640164ef:	mov    ecx,DWORD PTR [esp+0x8]
640164f3:	push   ecx
640164f4:	mov    DWORD PTR [eax],ecx
640164f6:	call   0x64016488
640164fb:	pop    ecx
640164fc:	mov    esi,eax
640164fe:	call   0x640164c3
64016503:	mov    DWORD PTR [eax],esi
64016505:	pop    esi
64016506:	ret    
64016507:	int3   
64016508:	int3   
64016509:	int3   
6401650a:	int3   
6401650b:	int3   
6401650c:	int3   
6401650d:	int3   
6401650e:	int3   
6401650f:	int3   
64016510:	push   ebp
64016511:	mov    ebp,esp
64016513:	push   edi
64016514:	push   esi
64016515:	mov    esi,DWORD PTR [ebp+0xc]
64016518:	mov    ecx,DWORD PTR [ebp+0x10]
6401651b:	mov    edi,DWORD PTR [ebp+0x8]
6401651e:	mov    eax,ecx
64016520:	mov    edx,ecx
64016522:	add    eax,esi
64016524:	cmp    edi,esi
64016526:	jbe    0x64016530
64016528:	cmp    edi,eax
6401652a:	jb     0x640166d4
64016530:	cmp    ecx,0x100
64016536:	jb     0x64016557
64016538:	cmp    DWORD PTR ds:0x64039b24,0x0
6401653f:	je     0x64016557
64016541:	push   edi
64016542:	push   esi
64016543:	and    edi,0xf
64016546:	and    esi,0xf
64016549:	cmp    edi,esi
6401654b:	pop    esi
6401654c:	pop    edi
6401654d:	jne    0x64016557
6401654f:	pop    esi
64016550:	pop    edi
64016551:	pop    ebp
64016552:	jmp    0x6401d971
64016557:	test   edi,0x3
6401655d:	jne    0x64016574
6401655f:	shr    ecx,0x2
64016562:	and    edx,0x3
64016565:	cmp    ecx,0x8
64016568:	jb     0x64016594
6401656a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401656c:	jmp    DWORD PTR [edx*4+0x64016684]
64016573:	nop
64016574:	mov    eax,edi
64016576:	mov    edx,0x3
6401657b:	sub    ecx,0x4
6401657e:	jb     0x6401658c
64016580:	and    eax,0x3
64016583:	add    ecx,eax
64016585:	jmp    DWORD PTR [eax*4+0x64016598]
6401658c:	jmp    DWORD PTR [ecx*4+0x64016694]
64016593:	nop
64016594:	jmp    DWORD PTR [ecx*4+0x64016618]
6401659b:	nop
6401659c:	test   al,0x65
6401659e:	add    DWORD PTR [esp+edx*8+0x65],esp
640165a2:	add    DWORD PTR [eax+edi*8+0x65],esp
640165a6:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
640165aa:	mov    al,BYTE PTR [esi]
640165ac:	mov    BYTE PTR [edi],al
640165ae:	mov    al,BYTE PTR [esi+0x1]
640165b1:	mov    BYTE PTR [edi+0x1],al
640165b4:	mov    al,BYTE PTR [esi+0x2]
640165b7:	shr    ecx,0x2
640165ba:	mov    BYTE PTR [edi+0x2],al
640165bd:	add    esi,0x3
640165c0:	add    edi,0x3
640165c3:	cmp    ecx,0x8
640165c6:	jb     0x64016594
640165c8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640165ca:	jmp    DWORD PTR [edx*4+0x64016684]
640165d1:	lea    ecx,[ecx+0x0]
640165d4:	and    edx,ecx
640165d6:	mov    al,BYTE PTR [esi]
640165d8:	mov    BYTE PTR [edi],al
640165da:	mov    al,BYTE PTR [esi+0x1]
640165dd:	shr    ecx,0x2
640165e0:	mov    BYTE PTR [edi+0x1],al
640165e3:	add    esi,0x2
640165e6:	add    edi,0x2
640165e9:	cmp    ecx,0x8
640165ec:	jb     0x64016594
640165ee:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640165f0:	jmp    DWORD PTR [edx*4+0x64016684]
640165f7:	nop
640165f8:	and    edx,ecx
640165fa:	mov    al,BYTE PTR [esi]
640165fc:	mov    BYTE PTR [edi],al
640165fe:	add    esi,0x1
64016601:	shr    ecx,0x2
64016604:	add    edi,0x1
64016607:	cmp    ecx,0x8
6401660a:	jb     0x64016594
6401660c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401660e:	jmp    DWORD PTR [edx*4+0x64016684]
64016615:	lea    ecx,[ecx+0x0]
64016618:	jnp    0x64016680
6401661a:	add    DWORD PTR [eax+ebp*2+0x66],esp
6401661e:	add    DWORD PTR [eax+eiz*2+0x66],esp
64016622:	add    DWORD PTR [eax+ebx*2+0x66],esp
64016626:	add    DWORD PTR [eax+edx*2+0x66],esp
6401662a:	add    DWORD PTR [eax+ecx*2+0x66],esp
6401662e:	add    DWORD PTR [eax+eax*2+0x66],esp
64016632:	add    DWORD PTR [eax+edi*1+0x66],esp
64016636:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401663a:	mov    fs,esp
6401663c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64016640:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64016644:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64016648:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401664c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64016650:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64016654:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64016658:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401665c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64016660:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64016664:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64016668:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401666c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64016670:	lea    eax,[ecx*4+0x0]
64016677:	add    esi,eax
64016679:	add    edi,eax
6401667b:	jmp    DWORD PTR [edx*4+0x64016684]
64016682:	mov    edi,edi
64016684:	xchg   esp,eax
64016685:	add    WORD PTR [esp+ebx*4+0x66],sp
6401668a:	add    DWORD PTR [eax+ebp*4+0x66],esp
6401668e:	add    DWORD PTR [esp+edi*4+0x66],esp
64016692:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64016696:	or     BYTE PTR [esi+0x5f],bl
64016699:	leave  
6401669a:	ret    
6401669b:	nop
6401669c:	mov    al,BYTE PTR [esi]
6401669e:	mov    BYTE PTR [edi],al
640166a0:	mov    eax,DWORD PTR [ebp+0x8]
640166a3:	pop    esi
640166a4:	pop    edi
640166a5:	leave  
640166a6:	ret    
640166a7:	nop
640166a8:	mov    al,BYTE PTR [esi]
640166aa:	mov    BYTE PTR [edi],al
640166ac:	mov    al,BYTE PTR [esi+0x1]
640166af:	mov    BYTE PTR [edi+0x1],al
640166b2:	mov    eax,DWORD PTR [ebp+0x8]
640166b5:	pop    esi
640166b6:	pop    edi
640166b7:	leave  
640166b8:	ret    
640166b9:	lea    ecx,[ecx+0x0]
640166bc:	mov    al,BYTE PTR [esi]
640166be:	mov    BYTE PTR [edi],al
640166c0:	mov    al,BYTE PTR [esi+0x1]
640166c3:	mov    BYTE PTR [edi+0x1],al
640166c6:	mov    al,BYTE PTR [esi+0x2]
640166c9:	mov    BYTE PTR [edi+0x2],al
640166cc:	mov    eax,DWORD PTR [ebp+0x8]
640166cf:	pop    esi
640166d0:	pop    edi
640166d1:	leave  
640166d2:	ret    
640166d3:	nop
640166d4:	lea    esi,[ecx+esi*1-0x4]
640166d8:	lea    edi,[ecx+edi*1-0x4]
640166dc:	test   edi,0x3
640166e2:	jne    0x64016708
640166e4:	shr    ecx,0x2
640166e7:	and    edx,0x3
640166ea:	cmp    ecx,0x8
640166ed:	jb     0x640166fc
640166ef:	std    
640166f0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640166f2:	cld    
640166f3:	jmp    DWORD PTR [edx*4+0x64016820]
640166fa:	mov    edi,edi
640166fc:	neg    ecx
640166fe:	jmp    DWORD PTR [ecx*4+0x640167d0]
64016705:	lea    ecx,[ecx+0x0]
64016708:	mov    eax,edi
6401670a:	mov    edx,0x3
6401670f:	cmp    ecx,0x4
64016712:	jb     0x64016720
64016714:	and    eax,0x3
64016717:	sub    ecx,eax
64016719:	jmp    DWORD PTR [eax*4+0x64016724]
64016720:	jmp    DWORD PTR [ecx*4+0x64016820]
64016727:	nop
64016728:	xor    al,0x67
6401672a:	add    DWORD PTR [eax+ebx*2+0x67],esp
6401672e:	add    DWORD PTR [eax+eax*4+0x67],esp
64016732:	add    DWORD PTR [edx+ecx*4+0x46],esp
64016736:	add    esp,DWORD PTR [ebx]
64016738:	ror    DWORD PTR [eax-0x117cfcb9],1
6401673e:	add    ecx,eax
64016740:	jmp    0x65f0ea47
64016745:	cmp    ecx,0x8
64016748:	jb     0x640166fc
6401674a:	std    
6401674b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401674d:	cld    
6401674e:	jmp    DWORD PTR [edx*4+0x64016820]
64016755:	lea    ecx,[ecx+0x0]
64016758:	mov    al,BYTE PTR [esi+0x3]
6401675b:	and    edx,ecx
6401675d:	mov    BYTE PTR [edi+0x3],al
64016760:	mov    al,BYTE PTR [esi+0x2]
64016763:	shr    ecx,0x2
64016766:	mov    BYTE PTR [edi+0x2],al
64016769:	sub    esi,0x2
6401676c:	sub    edi,0x2
6401676f:	cmp    ecx,0x8
64016772:	jb     0x640166fc
64016774:	std    
64016775:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016777:	cld    
64016778:	jmp    DWORD PTR [edx*4+0x64016820]
6401677f:	nop
64016780:	mov    al,BYTE PTR [esi+0x3]
64016783:	and    edx,ecx
64016785:	mov    BYTE PTR [edi+0x3],al
64016788:	mov    al,BYTE PTR [esi+0x2]
6401678b:	mov    BYTE PTR [edi+0x2],al
6401678e:	mov    al,BYTE PTR [esi+0x1]
64016791:	shr    ecx,0x2
64016794:	mov    BYTE PTR [edi+0x1],al
64016797:	sub    esi,0x3
6401679a:	sub    edi,0x3
6401679d:	cmp    ecx,0x8
640167a0:	jb     0x640166fc
640167a6:	std    
640167a7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640167a9:	cld    
640167aa:	jmp    DWORD PTR [edx*4+0x64016820]
640167b1:	lea    ecx,[ecx+0x0]
640167b4:	aam    0x67
640167b6:	add    DWORD PTR [esp+ebx*8+0x67],esp
640167ba:	add    DWORD PTR [esp+eiz*8+0x67],esp
640167be:	add    DWORD PTR [esp+ebp*8+0x67],esp
640167c2:	add    DWORD PTR [esp+esi*8+0x67],esp
640167c6:	add    DWORD PTR [esp+edi*8+0x67],esp
640167ca:	add    DWORD PTR [esp+eax*1+0x68],esp
640167ce:	add    DWORD PTR [edi+edx*1+0x68],esp
640167d2:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640167d6:	mov    ds,WORD PTR [ecx+ecx*4]
640167d9:	inc    esp
640167da:	(bad)  
640167db:	sbb    al,0x8b
640167dd:	inc    esp
640167de:	mov    ds,WORD PTR [eax]
640167e0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
640167e4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
640167e8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
640167ec:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
640167f0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
640167f4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
640167f8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
640167fc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64016800:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64016804:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64016808:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401680c:	lea    eax,[ecx*4+0x0]
64016813:	add    esi,eax
64016815:	add    edi,eax
64016817:	jmp    DWORD PTR [edx*4+0x64016820]
6401681e:	mov    edi,edi
64016820:	xor    BYTE PTR [eax+0x1],ch
64016823:	cmp    BYTE PTR fs:[eax+0x1],ch
64016827:	fs dec eax
64016829:	push   0x685c6401
6401682e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64016832:	or     BYTE PTR [esi+0x5f],bl
64016835:	leave  
64016836:	ret    
64016837:	nop
64016838:	mov    al,BYTE PTR [esi+0x3]
6401683b:	mov    BYTE PTR [edi+0x3],al
6401683e:	mov    eax,DWORD PTR [ebp+0x8]
64016841:	pop    esi
64016842:	pop    edi
64016843:	leave  
64016844:	ret    
64016845:	lea    ecx,[ecx+0x0]
64016848:	mov    al,BYTE PTR [esi+0x3]
6401684b:	mov    BYTE PTR [edi+0x3],al
6401684e:	mov    al,BYTE PTR [esi+0x2]
64016851:	mov    BYTE PTR [edi+0x2],al
64016854:	mov    eax,DWORD PTR [ebp+0x8]
64016857:	pop    esi
64016858:	pop    edi
64016859:	leave  
6401685a:	ret    
6401685b:	nop
6401685c:	mov    al,BYTE PTR [esi+0x3]
6401685f:	mov    BYTE PTR [edi+0x3],al
64016862:	mov    al,BYTE PTR [esi+0x2]
64016865:	mov    BYTE PTR [edi+0x2],al
64016868:	mov    al,BYTE PTR [esi+0x1]
6401686b:	mov    BYTE PTR [edi+0x1],al
6401686e:	mov    eax,DWORD PTR [ebp+0x8]
64016871:	pop    esi
64016872:	pop    edi
64016873:	leave  
64016874:	ret    
64016875:	mov    eax,DWORD PTR [esp+0x4]
64016879:	mov    ds:0x64038ebc,eax
6401687e:	ret    
6401687f:	push   DWORD PTR ds:0x64038ebc
64016885:	call   0x6401760e
6401688a:	test   eax,eax
6401688c:	pop    ecx
6401688d:	je     0x6401689e
6401688f:	push   DWORD PTR [esp+0x4]
64016893:	call   eax
64016895:	test   eax,eax
64016897:	pop    ecx
64016898:	je     0x6401689e
6401689a:	xor    eax,eax
6401689c:	inc    eax
6401689d:	ret    
6401689e:	xor    eax,eax
640168a0:	ret    
640168a1:	mov    DWORD PTR [ecx],0x640284a8
640168a7:	jmp    0x64013718
640168ac:	push   esi
640168ad:	mov    esi,ecx
640168af:	mov    DWORD PTR [esi],0x640284a8
640168b5:	call   0x64013718
640168ba:	test   BYTE PTR [esp+0x8],0x1
640168bf:	je     0x640168c8
640168c1:	push   esi
640168c2:	call   0x64013644
640168c7:	pop    ecx
640168c8:	mov    eax,esi
640168ca:	pop    esi
640168cb:	ret    0x4
640168ce:	push   esi
640168cf:	push   edi
640168d0:	mov    edi,DWORD PTR [esp+0xc]
640168d4:	mov    eax,DWORD PTR [edi+0x4]
640168d7:	test   eax,eax
640168d9:	je     0x64016924
640168db:	lea    edx,[eax+0x8]
640168de:	cmp    BYTE PTR [edx],0x0
640168e1:	je     0x64016924
640168e3:	mov    esi,DWORD PTR [esp+0x10]
640168e7:	mov    ecx,DWORD PTR [esi+0x4]
640168ea:	cmp    eax,ecx
640168ec:	je     0x64016902
640168ee:	add    ecx,0x8
640168f1:	push   ecx
640168f2:	push   edx
640168f3:	call   0x64016400
640168f8:	test   eax,eax
640168fa:	pop    ecx
640168fb:	pop    ecx
640168fc:	je     0x64016902
640168fe:	xor    eax,eax
64016900:	jmp    0x64016927
64016902:	test   BYTE PTR [esi],0x2
64016905:	je     0x6401690c
64016907:	test   BYTE PTR [edi],0x8
6401690a:	je     0x640168fe
6401690c:	mov    eax,DWORD PTR [esp+0x14]
64016910:	mov    eax,DWORD PTR [eax]
64016912:	test   al,0x1
64016914:	je     0x6401691b
64016916:	test   BYTE PTR [edi],0x1
64016919:	je     0x640168fe
6401691b:	test   al,0x2
6401691d:	je     0x64016924
6401691f:	test   BYTE PTR [edi],0x2
64016922:	je     0x640168fe
64016924:	xor    eax,eax
64016926:	inc    eax
64016927:	pop    edi
64016928:	pop    esi
64016929:	ret    
6401692a:	mov    eax,DWORD PTR [esp+0x4]
6401692e:	mov    eax,DWORD PTR [eax]
64016930:	mov    eax,DWORD PTR [eax]
64016932:	cmp    eax,0xe0434f4d
64016937:	je     0x64016951
64016939:	cmp    eax,0xe06d7363
6401693e:	jne    0x6401696b
64016940:	call   0x6401782a
64016945:	and    DWORD PTR [eax+0x90],0x0
6401694c:	jmp    0x64017b50
64016951:	call   0x6401782a
64016956:	cmp    DWORD PTR [eax+0x90],0x0
6401695d:	jle    0x6401696b
6401695f:	call   0x6401782a
64016964:	add    eax,0x90
64016969:	dec    DWORD PTR [eax]
6401696b:	xor    eax,eax
6401696d:	ret    
6401696e:	push   0x10
64016970:	push   0x6402b7f8
64016975:	call   0x64015f14
6401697a:	mov    edi,DWORD PTR [ebp+0x10]
6401697d:	mov    ebx,DWORD PTR [ebp+0x8]
64016980:	cmp    DWORD PTR [edi+0x4],0x80
64016987:	jg     0x6401698f
64016989:	movsx  esi,BYTE PTR [ebx+0x8]
6401698d:	jmp    0x64016992
6401698f:	mov    esi,DWORD PTR [ebx+0x8]
64016992:	mov    DWORD PTR [ebp-0x1c],esi
64016995:	call   0x6401782a
6401699a:	add    eax,0x90
6401699f:	inc    DWORD PTR [eax]
640169a1:	and    DWORD PTR [ebp-0x4],0x0
640169a5:	cmp    esi,DWORD PTR [ebp+0x14]
640169a8:	je     0x64016a0f
640169aa:	cmp    esi,0xffffffff
640169ad:	jle    0x640169b4
640169af:	cmp    esi,DWORD PTR [edi+0x4]
640169b2:	jl     0x640169b9
640169b4:	call   0x64017b9c
640169b9:	mov    eax,esi
640169bb:	shl    eax,0x3
640169be:	mov    ecx,DWORD PTR [edi+0x8]
640169c1:	add    ecx,eax
640169c3:	mov    esi,DWORD PTR [ecx]
640169c5:	mov    DWORD PTR [ebp-0x20],esi
640169c8:	mov    DWORD PTR [ebp-0x4],0x1
640169cf:	cmp    DWORD PTR [ecx+0x4],0x0
640169d3:	je     0x640169ea
640169d5:	mov    DWORD PTR [ebx+0x8],esi
640169d8:	push   0x103
640169dd:	push   ebx
640169de:	mov    ecx,DWORD PTR [edi+0x8]
640169e1:	push   DWORD PTR [ecx+eax*1+0x4]
640169e5:	call   0x64017bf0
640169ea:	and    DWORD PTR [ebp-0x4],0x0
640169ee:	jmp    0x64016a0a
640169f0:	push   DWORD PTR [ebp-0x14]
640169f3:	call   0x6401692a
640169f8:	pop    ecx
640169f9:	ret    
640169fa:	mov    esp,DWORD PTR [ebp-0x18]
640169fd:	and    DWORD PTR [ebp-0x4],0x0
64016a01:	mov    edi,DWORD PTR [ebp+0x10]
64016a04:	mov    ebx,DWORD PTR [ebp+0x8]
64016a07:	mov    esi,DWORD PTR [ebp-0x20]
64016a0a:	mov    DWORD PTR [ebp-0x1c],esi
64016a0d:	jmp    0x640169a5
64016a0f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016a16:	call   0x64016a34
64016a1b:	cmp    esi,DWORD PTR [ebp+0x14]
64016a1e:	je     0x64016a25
64016a20:	call   0x64017b9c
64016a25:	mov    DWORD PTR [ebx+0x8],esi
64016a28:	call   0x64015f59
64016a2d:	ret    
64016a2e:	mov    ebx,DWORD PTR [ebp+0x8]
64016a31:	mov    esi,DWORD PTR [ebp-0x1c]
64016a34:	call   0x6401782a
64016a39:	cmp    DWORD PTR [eax+0x90],0x0
64016a40:	jle    0x64016a4e
64016a42:	call   0x6401782a
64016a47:	add    eax,0x90
64016a4c:	dec    DWORD PTR [eax]
64016a4e:	ret    
64016a4f:	mov    eax,DWORD PTR [eax]
64016a51:	cmp    DWORD PTR [eax],0xe06d7363
64016a57:	jne    0x64016a91
64016a59:	cmp    DWORD PTR [eax+0x10],0x3
64016a5d:	jne    0x64016a91
64016a5f:	mov    ecx,DWORD PTR [eax+0x14]
64016a62:	cmp    ecx,0x19930520
64016a68:	je     0x64016a7a
64016a6a:	cmp    ecx,0x19930521
64016a70:	je     0x64016a7a
64016a72:	cmp    ecx,0x19930522
64016a78:	jne    0x64016a91
64016a7a:	cmp    DWORD PTR [eax+0x1c],0x0
64016a7e:	jne    0x64016a91
64016a80:	call   0x6401782a
64016a85:	xor    ecx,ecx
64016a87:	inc    ecx
64016a88:	mov    DWORD PTR [eax+0x20c],ecx
64016a8e:	mov    eax,ecx
64016a90:	ret    
64016a91:	xor    eax,eax
64016a93:	ret    
64016a94:	push   0x8
64016a96:	push   0x6402b820
64016a9b:	call   0x64015f14
64016aa0:	mov    ecx,DWORD PTR [ebp+0x8]
64016aa3:	test   ecx,ecx
64016aa5:	je     0x64016ad1
64016aa7:	cmp    DWORD PTR [ecx],0xe06d7363
64016aad:	jne    0x64016ad1
64016aaf:	mov    eax,DWORD PTR [ecx+0x1c]
64016ab2:	test   eax,eax
64016ab4:	je     0x64016ad1
64016ab6:	mov    eax,DWORD PTR [eax+0x4]
64016ab9:	test   eax,eax
64016abb:	je     0x64016ad1
64016abd:	and    DWORD PTR [ebp-0x4],0x0
64016ac1:	push   eax
64016ac2:	push   DWORD PTR [ecx+0x18]
64016ac5:	call   0x6401396f
64016aca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016ad1:	call   0x64015f59
64016ad6:	ret    
64016ad7:	xor    eax,eax
64016ad9:	cmp    BYTE PTR [ebp+0xc],al
64016adc:	setne  al
64016adf:	ret    
64016ae0:	mov    esp,DWORD PTR [ebp-0x18]
64016ae3:	jmp    0x64017b50
64016ae8:	mov    ecx,DWORD PTR [esp+0x8]
64016aec:	mov    eax,DWORD PTR [ecx]
64016aee:	push   esi
64016aef:	mov    esi,DWORD PTR [esp+0x8]
64016af3:	add    eax,esi
64016af5:	cmp    DWORD PTR [ecx+0x4],0x0
64016af9:	jl     0x64016b0b
64016afb:	mov    edx,DWORD PTR [ecx+0x4]
64016afe:	mov    ecx,DWORD PTR [ecx+0x8]
64016b01:	mov    esi,DWORD PTR [edx+esi*1]
64016b04:	mov    ecx,DWORD PTR [esi+ecx*1]
64016b07:	add    ecx,edx
64016b09:	add    eax,ecx
64016b0b:	pop    esi
64016b0c:	ret    
64016b0d:	push   ebp
64016b0e:	mov    ebp,esp
64016b10:	sub    esp,0xc
64016b13:	test   edi,edi
64016b15:	jne    0x64016b21
64016b17:	call   0x64017b9c
64016b1c:	jmp    0x64017b50
64016b21:	and    DWORD PTR [ebp-0x8],0x0
64016b25:	cmp    DWORD PTR [edi],0x0
64016b28:	mov    BYTE PTR [ebp-0x1],0x0
64016b2c:	jle    0x64016b81
64016b2e:	push   ebx
64016b2f:	push   esi
64016b30:	mov    eax,DWORD PTR [ebp+0x8]
64016b33:	mov    eax,DWORD PTR [eax+0x1c]
64016b36:	mov    eax,DWORD PTR [eax+0xc]
64016b39:	mov    ebx,DWORD PTR [eax]
64016b3b:	test   ebx,ebx
64016b3d:	lea    esi,[eax+0x4]
64016b40:	jle    0x64016b75
64016b42:	mov    eax,DWORD PTR [ebp-0x8]
64016b45:	shl    eax,0x4
64016b48:	mov    DWORD PTR [ebp-0xc],eax
64016b4b:	mov    ecx,DWORD PTR [ebp+0x8]
64016b4e:	push   DWORD PTR [ecx+0x1c]
64016b51:	mov    eax,DWORD PTR [esi]
64016b53:	push   eax
64016b54:	mov    eax,DWORD PTR [edi+0x4]
64016b57:	add    eax,DWORD PTR [ebp-0xc]
64016b5a:	push   eax
64016b5b:	call   0x640168ce
64016b60:	add    esp,0xc
64016b63:	test   eax,eax
64016b65:	jne    0x64016b71
64016b67:	dec    ebx
64016b68:	add    esi,0x4
64016b6b:	test   ebx,ebx
64016b6d:	jg     0x64016b4b
64016b6f:	jmp    0x64016b75
64016b71:	mov    BYTE PTR [ebp-0x1],0x1
64016b75:	inc    DWORD PTR [ebp-0x8]
64016b78:	mov    eax,DWORD PTR [ebp-0x8]
64016b7b:	cmp    eax,DWORD PTR [edi]
64016b7d:	jl     0x64016b30
64016b7f:	pop    esi
64016b80:	pop    ebx
64016b81:	mov    al,BYTE PTR [ebp-0x1]
64016b84:	leave  
64016b85:	ret    
64016b86:	push   0x4
64016b88:	mov    eax,0x64022f33
64016b8d:	call   0x6401560e
64016b92:	call   0x6401782a
64016b97:	cmp    DWORD PTR [eax+0x94],0x0
64016b9e:	je     0x64016ba5
64016ba0:	call   0x64017b9c
64016ba5:	and    DWORD PTR [ebp-0x4],0x0
64016ba9:	call   0x64017b89
64016bae:	or     DWORD PTR [ebp-0x4],0xffffffff
64016bb2:	jmp    0x64017b50
64016bb7:	call   0x6401782a
64016bbc:	mov    ecx,DWORD PTR [ebp+0x8]
64016bbf:	push   0x0
64016bc1:	push   0x0
64016bc3:	mov    DWORD PTR [eax+0x94],ecx
64016bc9:	call   0x64013872
64016bce:	int3   
64016bcf:	push   0x2c
64016bd1:	push   0x6402b898
64016bd6:	call   0x64015f14
64016bdb:	mov    ebx,ecx
64016bdd:	mov    edi,DWORD PTR [ebp+0xc]
64016be0:	mov    esi,DWORD PTR [ebp+0x8]
64016be3:	mov    DWORD PTR [ebp-0x1c],ebx
64016be6:	and    DWORD PTR [ebp-0x34],0x0
64016bea:	mov    eax,DWORD PTR [edi-0x4]
64016bed:	mov    DWORD PTR [ebp-0x24],eax
64016bf0:	push   DWORD PTR [esi+0x18]
64016bf3:	lea    eax,[ebp-0x3c]
64016bf6:	push   eax
64016bf7:	call   0x64013c13
64016bfc:	pop    ecx
64016bfd:	pop    ecx
64016bfe:	mov    DWORD PTR [ebp-0x28],eax
64016c01:	call   0x6401782a
64016c06:	mov    eax,DWORD PTR [eax+0x88]
64016c0c:	mov    DWORD PTR [ebp-0x2c],eax
64016c0f:	call   0x6401782a
64016c14:	mov    eax,DWORD PTR [eax+0x8c]
64016c1a:	mov    DWORD PTR [ebp-0x30],eax
64016c1d:	call   0x6401782a
64016c22:	mov    DWORD PTR [eax+0x88],esi
64016c28:	call   0x6401782a
64016c2d:	mov    ecx,DWORD PTR [ebp+0x10]
64016c30:	mov    DWORD PTR [eax+0x8c],ecx
64016c36:	and    DWORD PTR [ebp-0x4],0x0
64016c3a:	xor    eax,eax
64016c3c:	inc    eax
64016c3d:	mov    DWORD PTR [ebp+0x10],eax
64016c40:	mov    DWORD PTR [ebp-0x4],eax
64016c43:	push   DWORD PTR [ebp+0x1c]
64016c46:	push   DWORD PTR [ebp+0x18]
64016c49:	push   ebx
64016c4a:	push   DWORD PTR [ebp+0x14]
64016c4d:	push   edi
64016c4e:	call   0x64013ca8
64016c53:	add    esp,0x14
64016c56:	mov    DWORD PTR [ebp-0x1c],eax
64016c59:	and    DWORD PTR [ebp-0x4],0x0
64016c5d:	jmp    0x64016cce
64016c5f:	mov    eax,DWORD PTR [ebp-0x14]
64016c62:	call   0x64016a4f
64016c67:	ret    
64016c68:	mov    esp,DWORD PTR [ebp-0x18]
64016c6b:	call   0x6401782a
64016c70:	and    DWORD PTR [eax+0x20c],0x0
64016c77:	mov    esi,DWORD PTR [ebp+0x14]
64016c7a:	mov    edi,DWORD PTR [ebp+0xc]
64016c7d:	cmp    DWORD PTR [esi+0x4],0x80
64016c84:	jg     0x64016c8c
64016c86:	movsx  ecx,BYTE PTR [edi+0x8]
64016c8a:	jmp    0x64016c8f
64016c8c:	mov    ecx,DWORD PTR [edi+0x8]
64016c8f:	mov    ebx,DWORD PTR [esi+0x10]
64016c92:	and    DWORD PTR [ebp-0x20],0x0
64016c96:	mov    eax,DWORD PTR [ebp-0x20]
64016c99:	cmp    eax,DWORD PTR [esi+0xc]
64016c9c:	jae    0x64016cb6
64016c9e:	imul   eax,eax,0x14
64016ca1:	add    eax,ebx
64016ca3:	mov    edx,DWORD PTR [eax+0x4]
64016ca6:	cmp    ecx,edx
64016ca8:	jle    0x64016cea
64016caa:	cmp    ecx,DWORD PTR [eax+0x8]
64016cad:	jg     0x64016cea
64016caf:	mov    eax,DWORD PTR [esi+0x8]
64016cb2:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64016cb6:	push   ecx
64016cb7:	push   esi
64016cb8:	push   0x0
64016cba:	push   edi
64016cbb:	call   0x6401696e
64016cc0:	add    esp,0x10
64016cc3:	and    DWORD PTR [ebp-0x1c],0x0
64016cc7:	and    DWORD PTR [ebp-0x4],0x0
64016ccb:	mov    esi,DWORD PTR [ebp+0x8]
64016cce:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016cd5:	mov    DWORD PTR [ebp+0x10],0x0
64016cdc:	call   0x64016cf5
64016ce1:	mov    eax,DWORD PTR [ebp-0x1c]
64016ce4:	call   0x64015f59
64016ce9:	ret    
64016cea:	inc    DWORD PTR [ebp-0x20]
64016ced:	jmp    0x64016c96
64016cef:	mov    edi,DWORD PTR [ebp+0xc]
64016cf2:	mov    esi,DWORD PTR [ebp+0x8]
64016cf5:	mov    eax,DWORD PTR [ebp-0x24]
64016cf8:	mov    DWORD PTR [edi-0x4],eax
64016cfb:	push   DWORD PTR [ebp-0x28]
64016cfe:	call   0x64013c5c
64016d03:	pop    ecx
64016d04:	call   0x6401782a
64016d09:	mov    ecx,DWORD PTR [ebp-0x2c]
64016d0c:	mov    DWORD PTR [eax+0x88],ecx
64016d12:	call   0x6401782a
64016d17:	mov    ecx,DWORD PTR [ebp-0x30]
64016d1a:	mov    DWORD PTR [eax+0x8c],ecx
64016d20:	cmp    DWORD PTR [esi],0xe06d7363
64016d26:	jne    0x64016d6a
64016d28:	cmp    DWORD PTR [esi+0x10],0x3
64016d2c:	jne    0x64016d6a
64016d2e:	mov    eax,DWORD PTR [esi+0x14]
64016d31:	cmp    eax,0x19930520
64016d36:	je     0x64016d46
64016d38:	cmp    eax,0x19930521
64016d3d:	je     0x64016d46
64016d3f:	cmp    eax,0x19930522
64016d44:	jne    0x64016d6a
64016d46:	cmp    DWORD PTR [ebp-0x34],0x0
64016d4a:	jne    0x64016d6a
64016d4c:	cmp    DWORD PTR [ebp-0x1c],0x0
64016d50:	je     0x64016d6a
64016d52:	push   DWORD PTR [esi+0x18]
64016d55:	call   0x64013c3b
64016d5a:	pop    ecx
64016d5b:	test   eax,eax
64016d5d:	je     0x64016d6a
64016d5f:	push   DWORD PTR [ebp+0x10]
64016d62:	push   esi
64016d63:	call   0x64016a94
64016d68:	pop    ecx
64016d69:	pop    ecx
64016d6a:	ret    
64016d6b:	push   0xc
64016d6d:	push   0x6402b8c0
64016d72:	call   0x64015f14
64016d77:	xor    edx,edx
64016d79:	mov    DWORD PTR [ebp-0x1c],edx
64016d7c:	mov    eax,DWORD PTR [ebp+0x10]
64016d7f:	mov    ecx,DWORD PTR [eax+0x4]
64016d82:	cmp    ecx,edx
64016d84:	je     0x64016ee2
64016d8a:	cmp    BYTE PTR [ecx+0x8],dl
64016d8d:	je     0x64016ee2
64016d93:	mov    ecx,DWORD PTR [eax+0x8]
64016d96:	cmp    ecx,edx
64016d98:	jne    0x64016da6
64016d9a:	test   DWORD PTR [eax],0x80000000
64016da0:	je     0x64016ee2
64016da6:	mov    eax,DWORD PTR [eax]
64016da8:	mov    esi,DWORD PTR [ebp+0xc]
64016dab:	test   eax,eax
64016dad:	js     0x64016db3
64016daf:	lea    esi,[ecx+esi*1+0xc]
64016db3:	mov    DWORD PTR [ebp-0x4],edx
64016db6:	xor    ebx,ebx
64016db8:	inc    ebx
64016db9:	push   ebx
64016dba:	test   al,0x8
64016dbc:	je     0x64016dff
64016dbe:	mov    edi,DWORD PTR [ebp+0x8]
64016dc1:	push   DWORD PTR [edi+0x18]
64016dc4:	call   0x6401e6cb
64016dc9:	pop    ecx
64016dca:	pop    ecx
64016dcb:	test   eax,eax
64016dcd:	je     0x64016ec5
64016dd3:	push   ebx
64016dd4:	push   esi
64016dd5:	call   0x6401e6cb
64016dda:	pop    ecx
64016ddb:	pop    ecx
64016ddc:	test   eax,eax
64016dde:	je     0x64016ec5
64016de4:	mov    eax,DWORD PTR [edi+0x18]
64016de7:	mov    DWORD PTR [esi],eax
64016de9:	mov    ecx,DWORD PTR [ebp+0x14]
64016dec:	add    ecx,0x8
64016def:	push   ecx
64016df0:	push   eax
64016df1:	call   0x64016ae8
64016df6:	pop    ecx
64016df7:	pop    ecx
64016df8:	mov    DWORD PTR [esi],eax
64016dfa:	jmp    0x64016eca
64016dff:	mov    edi,DWORD PTR [ebp+0x14]
64016e02:	mov    eax,DWORD PTR [ebp+0x8]
64016e05:	push   DWORD PTR [eax+0x18]
64016e08:	test   BYTE PTR [edi],bl
64016e0a:	je     0x64016e54
64016e0c:	call   0x6401e6cb
64016e11:	pop    ecx
64016e12:	pop    ecx
64016e13:	test   eax,eax
64016e15:	je     0x64016ec5
64016e1b:	push   ebx
64016e1c:	push   esi
64016e1d:	call   0x6401e6cb
64016e22:	pop    ecx
64016e23:	pop    ecx
64016e24:	test   eax,eax
64016e26:	je     0x64016ec5
64016e2c:	push   DWORD PTR [edi+0x14]
64016e2f:	mov    eax,DWORD PTR [ebp+0x8]
64016e32:	push   DWORD PTR [eax+0x18]
64016e35:	push   esi
64016e36:	call   0x64016510
64016e3b:	add    esp,0xc
64016e3e:	cmp    DWORD PTR [edi+0x14],0x4
64016e42:	jne    0x64016eca
64016e48:	mov    eax,DWORD PTR [esi]
64016e4a:	test   eax,eax
64016e4c:	je     0x64016eca
64016e4e:	add    edi,0x8
64016e51:	push   edi
64016e52:	jmp    0x64016df0
64016e54:	cmp    DWORD PTR [edi+0x18],edx
64016e57:	jne    0x64016e91
64016e59:	call   0x6401e6cb
64016e5e:	pop    ecx
64016e5f:	pop    ecx
64016e60:	test   eax,eax
64016e62:	je     0x64016ec5
64016e64:	push   ebx
64016e65:	push   esi
64016e66:	call   0x6401e6cb
64016e6b:	pop    ecx
64016e6c:	pop    ecx
64016e6d:	test   eax,eax
64016e6f:	je     0x64016ec5
64016e71:	push   DWORD PTR [edi+0x14]
64016e74:	add    edi,0x8
64016e77:	push   edi
64016e78:	mov    eax,DWORD PTR [ebp+0x8]
64016e7b:	push   DWORD PTR [eax+0x18]
64016e7e:	call   0x64016ae8
64016e83:	pop    ecx
64016e84:	pop    ecx
64016e85:	push   eax
64016e86:	push   esi
64016e87:	call   0x64016510
64016e8c:	add    esp,0xc
64016e8f:	jmp    0x64016eca
64016e91:	call   0x6401e6cb
64016e96:	pop    ecx
64016e97:	pop    ecx
64016e98:	test   eax,eax
64016e9a:	je     0x64016ec5
64016e9c:	push   ebx
64016e9d:	push   esi
64016e9e:	call   0x6401e6cb
64016ea3:	pop    ecx
64016ea4:	pop    ecx
64016ea5:	test   eax,eax
64016ea7:	je     0x64016ec5
64016ea9:	push   DWORD PTR [edi+0x18]
64016eac:	call   0x6401e6cb
64016eb1:	pop    ecx
64016eb2:	test   eax,eax
64016eb4:	je     0x64016ec5
64016eb6:	test   BYTE PTR [edi],0x4
64016eb9:	push   0x0
64016ebb:	pop    eax
64016ebc:	setne  al
64016ebf:	inc    eax
64016ec0:	mov    DWORD PTR [ebp-0x1c],eax
64016ec3:	jmp    0x64016eca
64016ec5:	call   0x64017b9c
64016eca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016ed1:	mov    eax,DWORD PTR [ebp-0x1c]
64016ed4:	jmp    0x64016ee4
64016ed6:	xor    eax,eax
64016ed8:	inc    eax
64016ed9:	ret    
64016eda:	mov    esp,DWORD PTR [ebp-0x18]
64016edd:	jmp    0x64017b50
64016ee2:	xor    eax,eax
64016ee4:	call   0x64015f59
64016ee9:	ret    
64016eea:	push   0x8
64016eec:	push   0x6402b8e0
64016ef1:	call   0x64015f14
64016ef6:	mov    eax,DWORD PTR [ebp+0x10]
64016ef9:	test   DWORD PTR [eax],0x80000000
64016eff:	je     0x64016f06
64016f01:	mov    ebx,DWORD PTR [ebp+0xc]
64016f04:	jmp    0x64016f10
64016f06:	mov    ecx,DWORD PTR [eax+0x8]
64016f09:	mov    edx,DWORD PTR [ebp+0xc]
64016f0c:	lea    ebx,[ecx+edx*1+0xc]
64016f10:	and    DWORD PTR [ebp-0x4],0x0
64016f14:	mov    esi,DWORD PTR [ebp+0x14]
64016f17:	push   esi
64016f18:	push   eax
64016f19:	push   DWORD PTR [ebp+0xc]
64016f1c:	mov    edi,DWORD PTR [ebp+0x8]
64016f1f:	push   edi
64016f20:	call   0x64016d6b
64016f25:	add    esp,0x10
64016f28:	dec    eax
64016f29:	je     0x64016f4a
64016f2b:	dec    eax
64016f2c:	jne    0x64016f62
64016f2e:	push   0x1
64016f30:	lea    eax,[esi+0x8]
64016f33:	push   eax
64016f34:	push   DWORD PTR [edi+0x18]
64016f37:	call   0x64016ae8
64016f3c:	pop    ecx
64016f3d:	pop    ecx
64016f3e:	push   eax
64016f3f:	push   DWORD PTR [esi+0x18]
64016f42:	push   ebx
64016f43:	call   0x6401396f
64016f48:	jmp    0x64016f62
64016f4a:	lea    eax,[esi+0x8]
64016f4d:	push   eax
64016f4e:	push   DWORD PTR [edi+0x18]
64016f51:	call   0x64016ae8
64016f56:	pop    ecx
64016f57:	pop    ecx
64016f58:	push   eax
64016f59:	push   DWORD PTR [esi+0x18]
64016f5c:	push   ebx
64016f5d:	call   0x6401396f
64016f62:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016f69:	call   0x64015f59
64016f6e:	ret    
64016f6f:	xor    eax,eax
64016f71:	inc    eax
64016f72:	ret    
64016f73:	mov    esp,DWORD PTR [ebp-0x18]
64016f76:	jmp    0x64017b50
64016f7b:	push   ebp
64016f7c:	mov    ebp,esp
64016f7e:	cmp    DWORD PTR [ebp+0x18],0x0
64016f82:	je     0x64016f94
64016f84:	push   DWORD PTR [ebp+0x18]
64016f87:	push   ebx
64016f88:	push   esi
64016f89:	push   DWORD PTR [ebp+0x8]
64016f8c:	call   0x64016eea
64016f91:	add    esp,0x10
64016f94:	cmp    DWORD PTR [ebp+0x20],0x0
64016f98:	push   DWORD PTR [ebp+0x8]
64016f9b:	jne    0x64016fa0
64016f9d:	push   esi
64016f9e:	jmp    0x64016fa3
64016fa0:	push   DWORD PTR [ebp+0x20]
64016fa3:	call   0x64013976
64016fa8:	push   DWORD PTR [edi]
64016faa:	push   DWORD PTR [ebp+0x14]
64016fad:	push   DWORD PTR [ebp+0x10]
64016fb0:	push   esi
64016fb1:	call   0x6401696e
64016fb6:	mov    eax,DWORD PTR [edi+0x4]
64016fb9:	push   0x100
64016fbe:	push   DWORD PTR [ebp+0x1c]
64016fc1:	inc    eax
64016fc2:	push   DWORD PTR [ebp+0x14]
64016fc5:	mov    DWORD PTR [esi+0x8],eax
64016fc8:	push   DWORD PTR [ebp+0xc]
64016fcb:	mov    ecx,DWORD PTR [ebx+0xc]
64016fce:	push   esi
64016fcf:	push   DWORD PTR [ebp+0x8]
64016fd2:	call   0x64016bcf
64016fd7:	add    esp,0x28
64016fda:	test   eax,eax
64016fdc:	je     0x64016fe5
64016fde:	push   esi
64016fdf:	push   eax
64016fe0:	call   0x6401393f
64016fe5:	pop    ebp
64016fe6:	ret    
64016fe7:	push   ebp
64016fe8:	mov    ebp,esp
64016fea:	push   ecx
64016feb:	push   ecx
64016fec:	push   esi
64016fed:	mov    esi,DWORD PTR [ebp+0x8]
64016ff0:	cmp    DWORD PTR [esi],0x80000003
64016ff6:	je     0x640170d6
64016ffc:	push   edi
64016ffd:	call   0x6401782a
64017002:	cmp    DWORD PTR [eax+0x80],0x0
64017009:	je     0x6401704a
6401700b:	call   0x6401782a
64017010:	lea    edi,[eax+0x80]
64017016:	call   0x64017605
6401701b:	cmp    DWORD PTR [edi],eax
6401701d:	je     0x6401704a
6401701f:	cmp    DWORD PTR [esi],0xe0434f4d
64017025:	je     0x6401704a
64017027:	push   DWORD PTR [ebp+0x24]
6401702a:	push   DWORD PTR [ebp+0x20]
6401702d:	push   DWORD PTR [ebp+0x18]
64017030:	push   DWORD PTR [ebp+0x14]
64017033:	push   DWORD PTR [ebp+0x10]
64017036:	push   DWORD PTR [ebp+0xc]
64017039:	push   esi
6401703a:	call   0x64013a2e
6401703f:	add    esp,0x1c
64017042:	test   eax,eax
64017044:	jne    0x640170d5
6401704a:	mov    edi,DWORD PTR [ebp+0x18]
6401704d:	cmp    DWORD PTR [edi+0xc],0x0
64017051:	jne    0x64017058
64017053:	call   0x64017b9c
64017058:	mov    esi,DWORD PTR [ebp+0x1c]
6401705b:	lea    eax,[ebp-0x8]
6401705e:	push   eax
6401705f:	lea    eax,[ebp-0x4]
64017062:	push   eax
64017063:	push   esi
64017064:	push   DWORD PTR [ebp+0x20]
64017067:	push   edi
64017068:	call   0x64013ba0
6401706d:	mov    edi,eax
6401706f:	mov    eax,DWORD PTR [ebp-0x4]
64017072:	add    esp,0x14
64017075:	cmp    eax,DWORD PTR [ebp-0x8]
64017078:	jae    0x640170d5
6401707a:	push   ebx
6401707b:	cmp    esi,DWORD PTR [edi]
6401707d:	jl     0x640170c6
6401707f:	cmp    esi,DWORD PTR [edi+0x4]
64017082:	jg     0x640170c6
64017084:	mov    eax,DWORD PTR [edi+0xc]
64017087:	mov    ecx,DWORD PTR [edi+0x10]
6401708a:	shl    eax,0x4
6401708d:	add    eax,ecx
6401708f:	mov    ecx,DWORD PTR [eax-0xc]
64017092:	test   ecx,ecx
64017094:	je     0x6401709c
64017096:	cmp    BYTE PTR [ecx+0x8],0x0
6401709a:	jne    0x640170c6
6401709c:	lea    ebx,[eax-0x10]
6401709f:	test   BYTE PTR [ebx],0x40
640170a2:	jne    0x640170c6
640170a4:	push   DWORD PTR [ebp+0x24]
640170a7:	mov    esi,DWORD PTR [ebp+0xc]
640170aa:	push   DWORD PTR [ebp+0x20]
640170ad:	push   0x0
640170af:	push   DWORD PTR [ebp+0x18]
640170b2:	push   DWORD PTR [ebp+0x14]
640170b5:	push   DWORD PTR [ebp+0x10]
640170b8:	push   DWORD PTR [ebp+0x8]
640170bb:	call   0x64016f7b
640170c0:	mov    esi,DWORD PTR [ebp+0x1c]
640170c3:	add    esp,0x1c
640170c6:	inc    DWORD PTR [ebp-0x4]
640170c9:	mov    eax,DWORD PTR [ebp-0x4]
640170cc:	add    edi,0x14
640170cf:	cmp    eax,DWORD PTR [ebp-0x8]
640170d2:	jb     0x6401707b
640170d4:	pop    ebx
640170d5:	pop    edi
640170d6:	pop    esi
640170d7:	leave  
640170d8:	ret    
640170d9:	push   ebp
640170da:	mov    ebp,esp
640170dc:	sub    esp,0x2c
640170df:	mov    ecx,DWORD PTR [ebp+0xc]
640170e2:	push   ebx
640170e3:	mov    ebx,DWORD PTR [ebp+0x18]
640170e6:	mov    eax,DWORD PTR [ebx+0x4]
640170e9:	cmp    eax,0x80
640170ee:	push   esi
640170ef:	push   edi
640170f0:	mov    BYTE PTR [ebp-0x1],0x0
640170f4:	jg     0x640170fc
640170f6:	movsx  ecx,BYTE PTR [ecx+0x8]
640170fa:	jmp    0x640170ff
640170fc:	mov    ecx,DWORD PTR [ecx+0x8]
640170ff:	cmp    ecx,0xffffffff
64017102:	mov    DWORD PTR [ebp-0x8],ecx
64017105:	jl     0x6401710b
64017107:	cmp    ecx,eax
64017109:	jl     0x64017110
6401710b:	call   0x64017b9c
64017110:	mov    esi,DWORD PTR [ebp+0x8]
64017113:	mov    edi,0xe06d7363
64017118:	cmp    DWORD PTR [esi],edi
6401711a:	jne    0x640173eb
64017120:	cmp    DWORD PTR [esi+0x10],0x3
64017124:	mov    ebx,0x19930520
64017129:	jne    0x64017258
6401712f:	mov    eax,DWORD PTR [esi+0x14]
64017132:	cmp    eax,ebx
64017134:	je     0x64017148
64017136:	cmp    eax,0x19930521
6401713b:	je     0x64017148
6401713d:	cmp    eax,0x19930522
64017142:	jne    0x64017258
64017148:	cmp    DWORD PTR [esi+0x1c],0x0
6401714c:	jne    0x64017258
64017152:	call   0x6401782a
64017157:	cmp    DWORD PTR [eax+0x88],0x0
6401715e:	je     0x6401742a
64017164:	call   0x6401782a
64017169:	mov    esi,DWORD PTR [eax+0x88]
6401716f:	mov    DWORD PTR [ebp+0x8],esi
64017172:	call   0x6401782a
64017177:	mov    eax,DWORD PTR [eax+0x8c]
6401717d:	push   0x1
6401717f:	push   esi
64017180:	mov    DWORD PTR [ebp+0x10],eax
64017183:	call   0x6401e6cb
64017188:	test   eax,eax
6401718a:	pop    ecx
6401718b:	pop    ecx
6401718c:	jne    0x64017193
6401718e:	call   0x64017b9c
64017193:	cmp    DWORD PTR [esi],edi
64017195:	jne    0x640171bd
64017197:	cmp    DWORD PTR [esi+0x10],0x3
6401719b:	jne    0x640171bd
6401719d:	mov    eax,DWORD PTR [esi+0x14]
640171a0:	cmp    eax,ebx
640171a2:	je     0x640171b2
640171a4:	cmp    eax,0x19930521
640171a9:	je     0x640171b2
640171ab:	cmp    eax,0x19930522
640171b0:	jne    0x640171bd
640171b2:	cmp    DWORD PTR [esi+0x1c],0x0
640171b6:	jne    0x640171bd
640171b8:	call   0x64017b9c
640171bd:	call   0x6401782a
640171c2:	cmp    DWORD PTR [eax+0x94],0x0
640171c9:	je     0x64017258
640171cf:	call   0x6401782a
640171d4:	mov    edi,DWORD PTR [eax+0x94]
640171da:	call   0x6401782a
640171df:	push   DWORD PTR [ebp+0x8]
640171e2:	xor    esi,esi
640171e4:	mov    DWORD PTR [eax+0x94],esi
640171ea:	call   0x64016b0d
640171ef:	test   al,al
640171f1:	pop    ecx
640171f2:	jne    0x64017250
640171f4:	xor    ebx,ebx
640171f6:	cmp    DWORD PTR [edi],ebx
640171f8:	jle    0x64017217
640171fa:	mov    eax,DWORD PTR [edi+0x4]
640171fd:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
64017201:	push   0x640378e4
64017206:	call   0x64013781
6401720b:	test   al,al
6401720d:	jne    0x6401721c
6401720f:	inc    esi
64017210:	add    ebx,0x10
64017213:	cmp    esi,DWORD PTR [edi]
64017215:	jl     0x640171fa
64017217:	jmp    0x64017b50
6401721c:	push   0x1
6401721e:	push   DWORD PTR [ebp+0x8]
64017221:	call   0x64016a94
64017226:	pop    ecx
64017227:	pop    ecx
64017228:	lea    eax,[ebp+0x8]
6401722b:	push   eax
6401722c:	lea    ecx,[ebp-0x2c]
6401722f:	mov    DWORD PTR [ebp+0x8],0x640284b0
64017236:	call   0x6401365a
6401723b:	push   0x6402b8fc
64017240:	lea    eax,[ebp-0x2c]
64017243:	push   eax
64017244:	mov    DWORD PTR [ebp-0x2c],0x640284a8
6401724b:	call   0x64013872
64017250:	mov    esi,DWORD PTR [ebp+0x8]
64017253:	mov    edi,0xe06d7363
64017258:	cmp    DWORD PTR [esi],edi
6401725a:	jne    0x640173e8
64017260:	cmp    DWORD PTR [esi+0x10],0x3
64017264:	jne    0x640173e8
6401726a:	mov    eax,DWORD PTR [esi+0x14]
6401726d:	cmp    eax,ebx
6401726f:	je     0x64017283
64017271:	cmp    eax,0x19930521
64017276:	je     0x64017283
64017278:	cmp    eax,0x19930522
6401727d:	jne    0x640173e8
64017283:	mov    edi,DWORD PTR [ebp+0x18]
64017286:	cmp    DWORD PTR [edi+0xc],0x0
6401728a:	jbe    0x6401734f
64017290:	lea    eax,[ebp-0x1c]
64017293:	push   eax
64017294:	lea    eax,[ebp-0x10]
64017297:	push   eax
64017298:	push   DWORD PTR [ebp-0x8]
6401729b:	push   DWORD PTR [ebp+0x20]
6401729e:	push   edi
6401729f:	call   0x64013ba0
640172a4:	add    esp,0x14
640172a7:	mov    edi,eax
640172a9:	mov    eax,DWORD PTR [ebp-0x10]
640172ac:	cmp    eax,DWORD PTR [ebp-0x1c]
640172af:	jae    0x6401734c
640172b5:	mov    eax,DWORD PTR [ebp-0x8]
640172b8:	cmp    DWORD PTR [edi],eax
640172ba:	jg     0x64017341
640172c0:	cmp    eax,DWORD PTR [edi+0x4]
640172c3:	jg     0x64017341
640172c5:	mov    eax,DWORD PTR [edi+0x10]
640172c8:	mov    DWORD PTR [ebp-0xc],eax
640172cb:	mov    eax,DWORD PTR [edi+0xc]
640172ce:	test   eax,eax
640172d0:	mov    DWORD PTR [ebp-0x18],eax
640172d3:	jle    0x64017341
640172d5:	mov    eax,DWORD PTR [esi+0x1c]
640172d8:	mov    eax,DWORD PTR [eax+0xc]
640172db:	lea    ebx,[eax+0x4]
640172de:	mov    eax,DWORD PTR [eax]
640172e0:	test   eax,eax
640172e2:	mov    DWORD PTR [ebp-0x14],eax
640172e5:	jle    0x6401730a
640172e7:	push   DWORD PTR [esi+0x1c]
640172ea:	mov    eax,DWORD PTR [ebx]
640172ec:	push   eax
640172ed:	push   DWORD PTR [ebp-0xc]
640172f0:	mov    DWORD PTR [ebp-0x20],eax
640172f3:	call   0x640168ce
640172f8:	add    esp,0xc
640172fb:	test   eax,eax
640172fd:	jne    0x64017319
640172ff:	dec    DWORD PTR [ebp-0x14]
64017302:	add    ebx,0x4
64017305:	cmp    DWORD PTR [ebp-0x14],eax
64017308:	jg     0x640172e7
6401730a:	dec    DWORD PTR [ebp-0x18]
6401730d:	add    DWORD PTR [ebp-0xc],0x10
64017311:	cmp    DWORD PTR [ebp-0x18],0x0
64017315:	jg     0x640172d5
64017317:	jmp    0x64017341
64017319:	push   DWORD PTR [ebp+0x24]
6401731c:	mov    ebx,DWORD PTR [ebp-0xc]
6401731f:	push   DWORD PTR [ebp+0x20]
64017322:	mov    BYTE PTR [ebp-0x1],0x1
64017326:	push   DWORD PTR [ebp-0x20]
64017329:	push   DWORD PTR [ebp+0x18]
6401732c:	push   DWORD PTR [ebp+0x14]
6401732f:	push   DWORD PTR [ebp+0x10]
64017332:	push   esi
64017333:	mov    esi,DWORD PTR [ebp+0xc]
64017336:	call   0x64016f7b
6401733b:	mov    esi,DWORD PTR [ebp+0x8]
6401733e:	add    esp,0x1c
64017341:	inc    DWORD PTR [ebp-0x10]
64017344:	add    edi,0x14
64017347:	jmp    0x640172a9
6401734c:	mov    edi,DWORD PTR [ebp+0x18]
6401734f:	cmp    BYTE PTR [ebp+0x1c],0x0
64017353:	je     0x6401735f
64017355:	push   0x1
64017357:	push   esi
64017358:	call   0x64016a94
6401735d:	pop    ecx
6401735e:	pop    ecx
6401735f:	cmp    BYTE PTR [ebp-0x1],0x0
64017363:	jne    0x64017417
64017369:	mov    eax,DWORD PTR [edi]
6401736b:	and    eax,0x1fffffff
64017370:	cmp    eax,0x19930521
64017375:	jb     0x64017417
6401737b:	mov    edi,DWORD PTR [edi+0x1c]
6401737e:	test   edi,edi
64017380:	je     0x64017417
64017386:	push   esi
64017387:	call   0x64016b0d
6401738c:	test   al,al
6401738e:	pop    ecx
6401738f:	jne    0x64017417
64017395:	call   0x6401782a
6401739a:	call   0x6401782a
6401739f:	call   0x6401782a
640173a4:	mov    DWORD PTR [eax+0x88],esi
640173aa:	call   0x6401782a
640173af:	cmp    DWORD PTR [ebp+0x24],0x0
640173b3:	mov    ecx,DWORD PTR [ebp+0x10]
640173b6:	mov    DWORD PTR [eax+0x8c],ecx
640173bc:	push   esi
640173bd:	jne    0x640173c4
640173bf:	push   DWORD PTR [ebp+0xc]
640173c2:	jmp    0x640173c7
640173c4:	push   DWORD PTR [ebp+0x24]
640173c7:	call   0x64013976
640173cc:	mov    esi,DWORD PTR [ebp+0x18]
640173cf:	push   0xffffffff
640173d1:	push   esi
640173d2:	push   DWORD PTR [ebp+0x14]
640173d5:	push   DWORD PTR [ebp+0xc]
640173d8:	call   0x6401696e
640173dd:	add    esp,0x10
640173e0:	push   DWORD PTR [esi+0x1c]
640173e3:	call   0x64016b86
640173e8:	mov    ebx,DWORD PTR [ebp+0x18]
640173eb:	cmp    DWORD PTR [ebx+0xc],0x0
640173ef:	jbe    0x64017417
640173f1:	cmp    BYTE PTR [ebp+0x1c],0x0
640173f5:	jne    0x64017217
640173fb:	push   DWORD PTR [ebp+0x24]
640173fe:	push   DWORD PTR [ebp+0x20]
64017401:	push   DWORD PTR [ebp-0x8]
64017404:	push   ebx
64017405:	push   DWORD PTR [ebp+0x14]
64017408:	push   DWORD PTR [ebp+0x10]
6401740b:	push   DWORD PTR [ebp+0xc]
6401740e:	push   esi
6401740f:	call   0x64016fe7
64017414:	add    esp,0x20
64017417:	call   0x6401782a
6401741c:	cmp    DWORD PTR [eax+0x94],0x0
64017423:	je     0x6401742a
64017425:	call   0x64017b9c
6401742a:	pop    edi
6401742b:	pop    esi
6401742c:	pop    ebx
6401742d:	leave  
6401742e:	ret    
6401742f:	push   esi
64017430:	push   DWORD PTR [esp+0x8]
64017434:	mov    esi,ecx
64017436:	call   0x640136c0
6401743b:	mov    DWORD PTR [esi],0x640284a8
64017441:	mov    eax,esi
64017443:	pop    esi
64017444:	ret    0x4
64017447:	push   ebp
64017448:	mov    ebp,esp
6401744a:	push   ebx
6401744b:	push   esi
6401744c:	push   edi
6401744d:	call   0x6401782a
64017452:	cmp    DWORD PTR [eax+0x20c],0x0
64017459:	mov    eax,DWORD PTR [ebp+0x18]
6401745c:	mov    ecx,DWORD PTR [ebp+0x8]
6401745f:	mov    edi,0xe06d7363
64017464:	mov    esi,0x1fffffff
64017469:	mov    ebx,0x19930522
6401746e:	jne    0x64017490
64017470:	mov    edx,DWORD PTR [ecx]
64017472:	cmp    edx,edi
64017474:	je     0x64017490
64017476:	cmp    edx,0x80000026
6401747c:	je     0x64017490
6401747e:	mov    edx,DWORD PTR [eax]
64017480:	and    edx,esi
64017482:	cmp    edx,ebx
64017484:	jb     0x64017490
64017486:	test   BYTE PTR [eax+0x20],0x1
6401748a:	jne    0x64017523
64017490:	test   BYTE PTR [ecx+0x4],0x66
64017494:	je     0x640174b9
64017496:	cmp    DWORD PTR [eax+0x4],0x0
6401749a:	je     0x64017523
640174a0:	cmp    DWORD PTR [ebp+0x1c],0x0
640174a4:	jne    0x64017523
640174a6:	push   0xffffffff
640174a8:	push   eax
640174a9:	push   DWORD PTR [ebp+0x14]
640174ac:	push   DWORD PTR [ebp+0xc]
640174af:	call   0x6401696e
640174b4:	add    esp,0x10
640174b7:	jmp    0x64017523
640174b9:	cmp    DWORD PTR [eax+0xc],0x0
640174bd:	jne    0x640174d1
640174bf:	mov    edx,DWORD PTR [eax]
640174c1:	and    edx,esi
640174c3:	cmp    edx,0x19930521
640174c9:	jb     0x64017523
640174cb:	cmp    DWORD PTR [eax+0x1c],0x0
640174cf:	je     0x64017523
640174d1:	cmp    DWORD PTR [ecx],edi
640174d3:	jne    0x64017507
640174d5:	cmp    DWORD PTR [ecx+0x10],0x3
640174d9:	jb     0x64017507
640174db:	cmp    DWORD PTR [ecx+0x14],ebx
640174de:	jbe    0x64017507
640174e0:	mov    edx,DWORD PTR [ecx+0x1c]
640174e3:	mov    edx,DWORD PTR [edx+0x8]
640174e6:	test   edx,edx
640174e8:	je     0x64017507
640174ea:	movzx  esi,BYTE PTR [ebp+0x24]
640174ee:	push   esi
640174ef:	push   DWORD PTR [ebp+0x20]
640174f2:	push   DWORD PTR [ebp+0x1c]
640174f5:	push   eax
640174f6:	push   DWORD PTR [ebp+0x14]
640174f9:	push   DWORD PTR [ebp+0x10]
640174fc:	push   DWORD PTR [ebp+0xc]
640174ff:	push   ecx
64017500:	call   edx
64017502:	add    esp,0x20
64017505:	jmp    0x64017526
64017507:	push   DWORD PTR [ebp+0x20]
6401750a:	push   DWORD PTR [ebp+0x1c]
6401750d:	push   DWORD PTR [ebp+0x24]
64017510:	push   eax
64017511:	push   DWORD PTR [ebp+0x14]
64017514:	push   DWORD PTR [ebp+0x10]
64017517:	push   DWORD PTR [ebp+0xc]
6401751a:	push   ecx
6401751b:	call   0x640170d9
64017520:	add    esp,0x20
64017523:	xor    eax,eax
64017525:	inc    eax
64017526:	pop    edi
64017527:	pop    esi
64017528:	pop    ebx
64017529:	pop    ebp
6401752a:	ret    
6401752b:	push   ebp
6401752c:	mov    ebp,esp
6401752e:	push   ecx
6401752f:	push   ecx
64017530:	push   ebx
64017531:	push   esi
64017532:	xor    esi,esi
64017534:	lea    eax,[ebp-0x4]
64017537:	inc    esi
64017538:	xor    ebx,ebx
6401753a:	push   eax
6401753b:	mov    DWORD PTR [ebp-0x8],esi
6401753e:	mov    DWORD PTR [ebp-0x4],ebx
64017541:	call   0x64017ef6
64017546:	cmp    DWORD PTR [ebp-0x4],0x5
6401754a:	pop    ecx
6401754b:	jle    0x64017551
6401754d:	mov    eax,esi
6401754f:	jmp    0x64017593
64017551:	push   edi
64017552:	push   ebx
64017553:	call   DWORD PTR ds:0x640240a0
64017559:	mov    esi,DWORD PTR [eax+0x3c]
6401755c:	add    esi,eax
6401755e:	cmp    WORD PTR [esi+0x6],bx
64017562:	movzx  eax,WORD PTR [esi+0x14]
64017566:	lea    edi,[eax+esi*1+0x18]
6401756a:	jbe    0x6401758f
6401756c:	push   edi
6401756d:	push   0x640284c0
64017572:	call   0x64016400
64017577:	test   eax,eax
64017579:	pop    ecx
6401757a:	pop    ecx
6401757b:	je     0x6401758b
6401757d:	movzx  eax,WORD PTR [esi+0x6]
64017581:	inc    ebx
64017582:	add    edi,0x28
64017585:	cmp    ebx,eax
64017587:	jb     0x6401756c
64017589:	jmp    0x6401758f
6401758b:	and    DWORD PTR [ebp-0x8],0x0
6401758f:	mov    eax,DWORD PTR [ebp-0x8]
64017592:	pop    edi
64017593:	pop    esi
64017594:	pop    ebx
64017595:	leave  
64017596:	ret    
64017597:	push   esi
64017598:	push   DWORD PTR ds:0x64037908
6401759e:	mov    esi,DWORD PTR ds:0x640241b8
640175a4:	call   esi
640175a6:	test   eax,eax
640175a8:	je     0x640175cb
640175aa:	mov    eax,ds:0x64037904
640175af:	cmp    eax,0xffffffff
640175b2:	je     0x640175cb
640175b4:	push   eax
640175b5:	push   DWORD PTR ds:0x64037908
640175bb:	call   esi
640175bd:	call   eax
640175bf:	test   eax,eax
640175c1:	je     0x640175cb
640175c3:	mov    eax,DWORD PTR [eax+0x1f8]
640175c9:	jmp    0x640175f1
640175cb:	push   0x640284d8
640175d0:	call   DWORD PTR ds:0x640240a0
640175d6:	mov    esi,eax
640175d8:	test   esi,esi
640175da:	je     0x640175ff
640175dc:	call   0x6401752b
640175e1:	test   eax,eax
640175e3:	je     0x640175ff
640175e5:	push   0x640284c8
640175ea:	push   esi
640175eb:	call   DWORD PTR ds:0x64024094
640175f1:	test   eax,eax
640175f3:	je     0x640175ff
640175f5:	push   DWORD PTR [esp+0x8]
640175f9:	call   eax
640175fb:	mov    DWORD PTR [esp+0x8],eax
640175ff:	mov    eax,DWORD PTR [esp+0x8]
64017603:	pop    esi
64017604:	ret    
64017605:	push   0x0
64017607:	call   0x64017597
6401760c:	pop    ecx
6401760d:	ret    
6401760e:	push   esi
6401760f:	push   DWORD PTR ds:0x64037908
64017615:	mov    esi,DWORD PTR ds:0x640241b8
6401761b:	call   esi
6401761d:	test   eax,eax
6401761f:	je     0x64017642
64017621:	mov    eax,ds:0x64037904
64017626:	cmp    eax,0xffffffff
64017629:	je     0x64017642
6401762b:	push   eax
6401762c:	push   DWORD PTR ds:0x64037908
64017632:	call   esi
64017634:	call   eax
64017636:	test   eax,eax
64017638:	je     0x64017642
6401763a:	mov    eax,DWORD PTR [eax+0x1fc]
64017640:	jmp    0x64017668
64017642:	push   0x640284d8
64017647:	call   DWORD PTR ds:0x640240a0
6401764d:	mov    esi,eax
6401764f:	test   esi,esi
64017651:	je     0x64017676
64017653:	call   0x6401752b
64017658:	test   eax,eax
6401765a:	je     0x64017676
6401765c:	push   0x640284e8
64017661:	push   esi
64017662:	call   DWORD PTR ds:0x64024094
64017668:	test   eax,eax
6401766a:	je     0x64017676
6401766c:	push   DWORD PTR [esp+0x8]
64017670:	call   eax
64017672:	mov    DWORD PTR [esp+0x8],eax
64017676:	mov    eax,DWORD PTR [esp+0x8]
6401767a:	pop    esi
6401767b:	ret    
6401767c:	call   DWORD PTR ds:0x640241bc
64017682:	ret    0x4
64017685:	push   esi
64017686:	push   DWORD PTR ds:0x64037908
6401768c:	call   DWORD PTR ds:0x640241b8
64017692:	mov    esi,eax
64017694:	test   esi,esi
64017696:	jne    0x640176b3
64017698:	push   DWORD PTR ds:0x64038ec4
6401769e:	call   0x6401760e
640176a3:	pop    ecx
640176a4:	mov    esi,eax
640176a6:	push   esi
640176a7:	push   DWORD PTR ds:0x64037908
640176ad:	call   DWORD PTR ds:0x640241c0
640176b3:	mov    eax,esi
640176b5:	pop    esi
640176b6:	ret    
640176b7:	mov    eax,ds:0x64037904
640176bc:	cmp    eax,0xffffffff
640176bf:	je     0x640176d7
640176c1:	push   eax
640176c2:	push   DWORD PTR ds:0x64038ecc
640176c8:	call   0x6401760e
640176cd:	pop    ecx
640176ce:	call   eax
640176d0:	or     DWORD PTR ds:0x64037904,0xffffffff
640176d7:	mov    eax,ds:0x64037908
640176dc:	cmp    eax,0xffffffff
640176df:	je     0x640176ef
640176e1:	push   eax
640176e2:	call   DWORD PTR ds:0x640241c4
640176e8:	or     DWORD PTR ds:0x64037908,0xffffffff
640176ef:	jmp    0x6401ade1
640176f4:	push   0xc
640176f6:	push   0x6402b938
640176fb:	call   0x64015f14
64017700:	push   0x640284d8
64017705:	call   DWORD PTR ds:0x640240a0
6401770b:	mov    DWORD PTR [ebp-0x1c],eax
6401770e:	mov    esi,DWORD PTR [ebp+0x8]
64017711:	mov    DWORD PTR [esi+0x5c],0x64037960
64017718:	xor    edi,edi
6401771a:	inc    edi
6401771b:	mov    DWORD PTR [esi+0x14],edi
6401771e:	test   eax,eax
64017720:	je     0x64017751
64017722:	call   0x6401752b
64017727:	test   eax,eax
64017729:	je     0x64017751
6401772b:	push   0x640284c8
64017730:	push   DWORD PTR [ebp-0x1c]
64017733:	mov    ebx,DWORD PTR ds:0x64024094
64017739:	call   ebx
6401773b:	mov    DWORD PTR [esi+0x1f8],eax
64017741:	push   0x640284e8
64017746:	push   DWORD PTR [ebp-0x1c]
64017749:	call   ebx
6401774b:	mov    DWORD PTR [esi+0x1fc],eax
64017751:	mov    DWORD PTR [esi+0x70],edi
64017754:	mov    BYTE PTR [esi+0xc8],0x43
6401775b:	mov    BYTE PTR [esi+0x14b],0x43
64017762:	mov    eax,0x640379e8
64017767:	mov    DWORD PTR [esi+0x68],eax
6401776a:	push   eax
6401776b:	call   DWORD PTR ds:0x6402402c
64017771:	push   0xc
64017773:	call   0x6401af0e
64017778:	pop    ecx
64017779:	and    DWORD PTR [ebp-0x4],0x0
6401777d:	mov    eax,DWORD PTR [ebp+0xc]
64017780:	mov    DWORD PTR [esi+0x6c],eax
64017783:	test   eax,eax
64017785:	jne    0x6401778f
64017787:	mov    eax,ds:0x64037ff0
6401778c:	mov    DWORD PTR [esi+0x6c],eax
6401778f:	push   DWORD PTR [esi+0x6c]
64017792:	call   0x64015784
64017797:	pop    ecx
64017798:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401779f:	call   0x640177aa
640177a4:	call   0x64015f59
640177a9:	ret    
640177aa:	push   0xc
640177ac:	call   0x6401ae36
640177b1:	pop    ecx
640177b2:	ret    
640177b3:	push   esi
640177b4:	push   edi
640177b5:	call   DWORD PTR ds:0x64024064
640177bb:	push   DWORD PTR ds:0x64037904
640177c1:	mov    edi,eax
640177c3:	call   0x64017685
640177c8:	call   eax
640177ca:	mov    esi,eax
640177cc:	test   esi,esi
640177ce:	jne    0x6401781e
640177d0:	push   0x214
640177d5:	push   0x1
640177d7:	call   0x64015d6f
640177dc:	mov    esi,eax
640177de:	test   esi,esi
640177e0:	pop    ecx
640177e1:	pop    ecx
640177e2:	je     0x6401781e
640177e4:	push   esi
640177e5:	push   DWORD PTR ds:0x64037904
640177eb:	push   DWORD PTR ds:0x64038ec8
640177f1:	call   0x6401760e
640177f6:	pop    ecx
640177f7:	call   eax
640177f9:	test   eax,eax
640177fb:	je     0x64017815
640177fd:	push   0x0
640177ff:	push   esi
64017800:	call   0x640176f4
64017805:	pop    ecx
64017806:	pop    ecx
64017807:	call   DWORD PTR ds:0x640240bc
6401780d:	or     DWORD PTR [esi+0x4],0xffffffff
64017811:	mov    DWORD PTR [esi],eax
64017813:	jmp    0x6401781e
64017815:	push   esi
64017816:	call   0x6401475a
6401781b:	pop    ecx
6401781c:	xor    esi,esi
6401781e:	push   edi
6401781f:	call   DWORD PTR ds:0x64024070
64017825:	pop    edi
64017826:	mov    eax,esi
64017828:	pop    esi
64017829:	ret    
6401782a:	push   esi
6401782b:	call   0x640177b3
64017830:	mov    esi,eax
64017832:	test   esi,esi
64017834:	jne    0x6401783e
64017836:	push   0x10
64017838:	call   0x64017e16
6401783d:	pop    ecx
6401783e:	mov    eax,esi
64017840:	pop    esi
64017841:	ret    
64017842:	push   0x8
64017844:	push   0x6402b958
64017849:	call   0x64015f14
6401784e:	mov    esi,DWORD PTR [ebp+0x8]
64017851:	test   esi,esi
64017853:	je     0x64017943
64017859:	mov    eax,DWORD PTR [esi+0x24]
6401785c:	test   eax,eax
6401785e:	je     0x64017867
64017860:	push   eax
64017861:	call   0x6401475a
64017866:	pop    ecx
64017867:	mov    eax,DWORD PTR [esi+0x2c]
6401786a:	test   eax,eax
6401786c:	je     0x64017875
6401786e:	push   eax
6401786f:	call   0x6401475a
64017874:	pop    ecx
64017875:	mov    eax,DWORD PTR [esi+0x34]
64017878:	test   eax,eax
6401787a:	je     0x64017883
6401787c:	push   eax
6401787d:	call   0x6401475a
64017882:	pop    ecx
64017883:	mov    eax,DWORD PTR [esi+0x3c]
64017886:	test   eax,eax
64017888:	je     0x64017891
6401788a:	push   eax
6401788b:	call   0x6401475a
64017890:	pop    ecx
64017891:	mov    eax,DWORD PTR [esi+0x44]
64017894:	test   eax,eax
64017896:	je     0x6401789f
64017898:	push   eax
64017899:	call   0x6401475a
6401789e:	pop    ecx
6401789f:	mov    eax,DWORD PTR [esi+0x48]
640178a2:	test   eax,eax
640178a4:	je     0x640178ad
640178a6:	push   eax
640178a7:	call   0x6401475a
640178ac:	pop    ecx
640178ad:	mov    eax,DWORD PTR [esi+0x5c]
640178b0:	cmp    eax,0x64037960
640178b5:	je     0x640178be
640178b7:	push   eax
640178b8:	call   0x6401475a
640178bd:	pop    ecx
640178be:	push   0xd
640178c0:	call   0x6401af0e
640178c5:	pop    ecx
640178c6:	and    DWORD PTR [ebp-0x4],0x0
640178ca:	mov    edi,DWORD PTR [esi+0x68]
640178cd:	test   edi,edi
640178cf:	je     0x640178eb
640178d1:	push   edi
640178d2:	call   DWORD PTR ds:0x64024074
640178d8:	test   eax,eax
640178da:	jne    0x640178eb
640178dc:	cmp    edi,0x640379e8
640178e2:	je     0x640178eb
640178e4:	push   edi
640178e5:	call   0x6401475a
640178ea:	pop    ecx
640178eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640178f2:	call   0x6401794e
640178f7:	push   0xc
640178f9:	call   0x6401af0e
640178fe:	pop    ecx
640178ff:	mov    DWORD PTR [ebp-0x4],0x1
64017906:	mov    edi,DWORD PTR [esi+0x6c]
64017909:	test   edi,edi
6401790b:	je     0x64017930
6401790d:	push   edi
6401790e:	call   0x6401580a
64017913:	pop    ecx
64017914:	cmp    edi,DWORD PTR ds:0x64037ff0
6401791a:	je     0x64017930
6401791c:	cmp    edi,0x64037f18
64017922:	je     0x64017930
64017924:	cmp    DWORD PTR [edi],0x0
64017927:	jne    0x64017930
64017929:	push   edi
6401792a:	call   0x64015644
6401792f:	pop    ecx
64017930:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017937:	call   0x6401795a
6401793c:	push   esi
6401793d:	call   0x6401475a
64017942:	pop    ecx
64017943:	call   0x64015f59
64017948:	ret    0x4
6401794b:	mov    esi,DWORD PTR [ebp+0x8]
6401794e:	push   0xd
64017950:	call   0x6401ae36
64017955:	pop    ecx
64017956:	ret    
64017957:	mov    esi,DWORD PTR [ebp+0x8]
6401795a:	push   0xc
6401795c:	call   0x6401ae36
64017961:	pop    ecx
64017962:	ret    
64017963:	cmp    DWORD PTR ds:0x64037904,0xffffffff
6401796a:	je     0x640179b8
6401796c:	push   edi
6401796d:	mov    edi,DWORD PTR [esp+0x8]
64017971:	test   edi,edi
64017973:	jne    0x6401799b
64017975:	push   esi
64017976:	push   DWORD PTR ds:0x64037908
6401797c:	mov    esi,DWORD PTR ds:0x640241b8
64017982:	call   esi
64017984:	test   eax,eax
64017986:	je     0x6401799a
64017988:	push   DWORD PTR ds:0x64037904
6401798e:	push   DWORD PTR ds:0x64037908
64017994:	call   esi
64017996:	call   eax
64017998:	mov    edi,eax
6401799a:	pop    esi
6401799b:	push   0x0
6401799d:	push   DWORD PTR ds:0x64037904
640179a3:	push   DWORD PTR ds:0x64038ec8
640179a9:	call   0x6401760e
640179ae:	pop    ecx
640179af:	call   eax
640179b1:	push   edi
640179b2:	call   0x64017842
640179b7:	pop    edi
640179b8:	mov    eax,ds:0x64037908
640179bd:	cmp    eax,0xffffffff
640179c0:	je     0x640179cb
640179c2:	push   0x0
640179c4:	push   eax
640179c5:	call   DWORD PTR ds:0x640241c0
640179cb:	ret    
640179cc:	push   edi
640179cd:	push   0x640284d8
640179d2:	call   DWORD PTR ds:0x640240a0
640179d8:	mov    edi,eax
640179da:	test   edi,edi
640179dc:	jne    0x640179e7
640179de:	call   0x640176b7
640179e3:	xor    eax,eax
640179e5:	pop    edi
640179e6:	ret    
640179e7:	push   esi
640179e8:	mov    esi,DWORD PTR ds:0x64024094
640179ee:	push   0x64028518
640179f3:	push   edi
640179f4:	call   esi
640179f6:	push   0x6402850c
640179fb:	push   edi
640179fc:	mov    ds:0x64038ec0,eax
64017a01:	call   esi
64017a03:	push   0x64028500
64017a08:	push   edi
64017a09:	mov    ds:0x64038ec4,eax
64017a0e:	call   esi
64017a10:	push   0x640284f8
64017a15:	push   edi
64017a16:	mov    ds:0x64038ec8,eax
64017a1b:	call   esi
64017a1d:	cmp    DWORD PTR ds:0x64038ec0,0x0
64017a24:	mov    esi,DWORD PTR ds:0x640241c0
64017a2a:	mov    ds:0x64038ecc,eax
64017a2f:	je     0x64017a47
64017a31:	cmp    DWORD PTR ds:0x64038ec4,0x0
64017a38:	je     0x64017a47
64017a3a:	cmp    DWORD PTR ds:0x64038ec8,0x0
64017a41:	je     0x64017a47
64017a43:	test   eax,eax
64017a45:	jne    0x64017a6b
64017a47:	mov    eax,ds:0x640241b8
64017a4c:	mov    ds:0x64038ec4,eax
64017a51:	mov    eax,ds:0x640241c4
64017a56:	mov    DWORD PTR ds:0x64038ec0,0x6401767c
64017a60:	mov    DWORD PTR ds:0x64038ec8,esi
64017a66:	mov    ds:0x64038ecc,eax
64017a6b:	call   DWORD PTR ds:0x640241bc
64017a71:	cmp    eax,0xffffffff
64017a74:	mov    ds:0x64037908,eax
64017a79:	je     0x64017b4b
64017a7f:	push   DWORD PTR ds:0x64038ec4
64017a85:	push   eax
64017a86:	call   esi
64017a88:	test   eax,eax
64017a8a:	je     0x64017b4b
64017a90:	call   0x640180c9
64017a95:	push   DWORD PTR ds:0x64038ec0
64017a9b:	call   0x64017597
64017aa0:	push   DWORD PTR ds:0x64038ec4
64017aa6:	mov    ds:0x64038ec0,eax
64017aab:	call   0x64017597
64017ab0:	push   DWORD PTR ds:0x64038ec8
64017ab6:	mov    ds:0x64038ec4,eax
64017abb:	call   0x64017597
64017ac0:	push   DWORD PTR ds:0x64038ecc
64017ac6:	mov    ds:0x64038ec8,eax
64017acb:	call   0x64017597
64017ad0:	add    esp,0x10
64017ad3:	mov    ds:0x64038ecc,eax
64017ad8:	call   0x6401ad98
64017add:	test   eax,eax
64017adf:	je     0x64017b46
64017ae1:	push   0x64017842
64017ae6:	push   DWORD PTR ds:0x64038ec0
64017aec:	call   0x6401760e
64017af1:	pop    ecx
64017af2:	call   eax
64017af4:	cmp    eax,0xffffffff
64017af7:	mov    ds:0x64037904,eax
64017afc:	je     0x64017b46
64017afe:	push   0x214
64017b03:	push   0x1
64017b05:	call   0x64015d6f
64017b0a:	mov    esi,eax
64017b0c:	test   esi,esi
64017b0e:	pop    ecx
64017b0f:	pop    ecx
64017b10:	je     0x64017b46
64017b12:	push   esi
64017b13:	push   DWORD PTR ds:0x64037904
64017b19:	push   DWORD PTR ds:0x64038ec8
64017b1f:	call   0x6401760e
64017b24:	pop    ecx
64017b25:	call   eax
64017b27:	test   eax,eax
64017b29:	je     0x64017b46
64017b2b:	push   0x0
64017b2d:	push   esi
64017b2e:	call   0x640176f4
64017b33:	pop    ecx
64017b34:	pop    ecx
64017b35:	call   DWORD PTR ds:0x640240bc
64017b3b:	or     DWORD PTR [esi+0x4],0xffffffff
64017b3f:	mov    DWORD PTR [esi],eax
64017b41:	xor    eax,eax
64017b43:	inc    eax
64017b44:	jmp    0x64017b4d
64017b46:	call   0x640176b7
64017b4b:	xor    eax,eax
64017b4d:	pop    esi
64017b4e:	pop    edi
64017b4f:	ret    
64017b50:	push   0x8
64017b52:	push   0x6402b980
64017b57:	call   0x64015f14
64017b5c:	call   0x6401782a
64017b61:	mov    eax,DWORD PTR [eax+0x78]
64017b64:	test   eax,eax
64017b66:	je     0x64017b7e
64017b68:	and    DWORD PTR [ebp-0x4],0x0
64017b6c:	call   eax
64017b6e:	jmp    0x64017b77
64017b70:	xor    eax,eax
64017b72:	inc    eax
64017b73:	ret    
64017b74:	mov    esp,DWORD PTR [ebp-0x18]
64017b77:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017b7e:	call   0x64015e02
64017b83:	call   0x64015f59
64017b88:	ret    
64017b89:	call   0x6401782a
64017b8e:	mov    eax,DWORD PTR [eax+0x7c]
64017b91:	test   eax,eax
64017b93:	je     0x64017b97
64017b95:	call   eax
64017b97:	jmp    0x64017b50
64017b9c:	push   0x8
64017b9e:	push   0x6402b9a0
64017ba3:	call   0x64015f14
64017ba8:	push   DWORD PTR ds:0x64038ed0
64017bae:	call   0x6401760e
64017bb3:	pop    ecx
64017bb4:	test   eax,eax
64017bb6:	je     0x64017bce
64017bb8:	and    DWORD PTR [ebp-0x4],0x0
64017bbc:	call   eax
64017bbe:	jmp    0x64017bc7
64017bc0:	xor    eax,eax
64017bc2:	inc    eax
64017bc3:	ret    
64017bc4:	mov    esp,DWORD PTR [ebp-0x18]
64017bc7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017bce:	jmp    0x64017b50
64017bd3:	push   0x64017b50
64017bd8:	call   0x64017597
64017bdd:	pop    ecx
64017bde:	mov    ds:0x64038ed0,eax
64017be3:	ret    
64017be4:	int3   
64017be5:	int3   
64017be6:	int3   
64017be7:	int3   
64017be8:	int3   
64017be9:	int3   
64017bea:	int3   
64017beb:	int3   
64017bec:	int3   
64017bed:	int3   
64017bee:	int3   
64017bef:	int3   
64017bf0:	push   ebp
64017bf1:	mov    ebp,esp
64017bf3:	sub    esp,0x4
64017bf6:	push   ebx
64017bf7:	push   ecx
64017bf8:	mov    eax,DWORD PTR [ebp+0xc]
64017bfb:	add    eax,0xc
64017bfe:	mov    DWORD PTR [ebp-0x4],eax
64017c01:	mov    eax,DWORD PTR [ebp+0x8]
64017c04:	push   ebp
64017c05:	push   DWORD PTR [ebp+0x10]
64017c08:	mov    ecx,DWORD PTR [ebp+0x10]
64017c0b:	mov    ebp,DWORD PTR [ebp-0x4]
64017c0e:	call   0x6401e7e4
64017c13:	push   esi
64017c14:	push   edi
64017c15:	call   eax
64017c17:	pop    edi
64017c18:	pop    esi
64017c19:	mov    ebx,ebp
64017c1b:	pop    ebp
64017c1c:	mov    ecx,DWORD PTR [ebp+0x10]
64017c1f:	push   ebp
64017c20:	mov    ebp,ebx
64017c22:	cmp    ecx,0x100
64017c28:	jne    0x64017c2f
64017c2a:	mov    ecx,0x2
64017c2f:	push   ecx
64017c30:	call   0x6401e7e4
64017c35:	pop    ebp
64017c36:	pop    ecx
64017c37:	pop    ebx
64017c38:	leave  
64017c39:	ret    0xc
64017c3c:	push   ebp
64017c3d:	mov    ebp,esp
64017c3f:	sub    esp,0x328
64017c45:	mov    ds:0x64038fe0,eax
64017c4a:	mov    DWORD PTR ds:0x64038fdc,ecx
64017c50:	mov    DWORD PTR ds:0x64038fd8,edx
64017c56:	mov    DWORD PTR ds:0x64038fd4,ebx
64017c5c:	mov    DWORD PTR ds:0x64038fd0,esi
64017c62:	mov    DWORD PTR ds:0x64038fcc,edi
64017c68:	data16 mov WORD PTR ds:0x64038ff8,ss
64017c6f:	data16 mov WORD PTR ds:0x64038fec,cs
64017c76:	data16 mov WORD PTR ds:0x64038fc8,ds
64017c7d:	data16 mov WORD PTR ds:0x64038fc4,es
64017c84:	data16 mov WORD PTR ds:0x64038fc0,fs
64017c8b:	data16 mov WORD PTR ds:0x64038fbc,gs
64017c92:	pushf  
64017c93:	pop    DWORD PTR ds:0x64038ff0
64017c99:	mov    eax,DWORD PTR [ebp+0x0]
64017c9c:	mov    ds:0x64038fe4,eax
64017ca1:	mov    eax,DWORD PTR [ebp+0x4]
64017ca4:	mov    ds:0x64038fe8,eax
64017ca9:	lea    eax,[ebp+0x8]
64017cac:	mov    ds:0x64038ff4,eax
64017cb1:	mov    eax,DWORD PTR [ebp-0x320]
64017cb7:	mov    DWORD PTR ds:0x64038f30,0x10001
64017cc1:	mov    eax,ds:0x64038fe8
64017cc6:	mov    ds:0x64038ee4,eax
64017ccb:	mov    DWORD PTR ds:0x64038ed8,0xc0000409
64017cd5:	mov    DWORD PTR ds:0x64038edc,0x1
64017cdf:	mov    eax,ds:0x64037644
64017ce4:	mov    DWORD PTR [ebp-0x328],eax
64017cea:	mov    eax,ds:0x64037648
64017cef:	mov    DWORD PTR [ebp-0x324],eax
64017cf5:	call   DWORD PTR ds:0x6402419c
64017cfb:	mov    ds:0x64038f28,eax
64017d00:	push   0x1
64017d02:	call   0x64017d6b
64017d07:	pop    ecx
64017d08:	push   0x0
64017d0a:	call   DWORD PTR ds:0x64024198
64017d10:	push   0x64028524
64017d15:	call   DWORD PTR ds:0x64024194
64017d1b:	cmp    DWORD PTR ds:0x64038f28,0x0
64017d22:	jne    0x64017d2c
64017d24:	push   0x1
64017d26:	call   0x64017d6b
64017d2b:	pop    ecx
64017d2c:	push   0xc0000409
64017d31:	call   DWORD PTR ds:0x6402403c
64017d37:	push   eax
64017d38:	call   DWORD PTR ds:0x640240e8
64017d3e:	leave  
64017d3f:	ret    
64017d40:	push   ecx
64017d41:	lea    ecx,[esp+0x4]
64017d45:	sub    ecx,eax
64017d47:	sbb    eax,eax
64017d49:	not    eax
64017d4b:	and    ecx,eax
64017d4d:	mov    eax,esp
64017d4f:	and    eax,0xfffff000
64017d54:	cmp    ecx,eax
64017d56:	jb     0x64017d62
64017d58:	mov    eax,ecx
64017d5a:	pop    ecx
64017d5b:	xchg   esp,eax
64017d5c:	mov    eax,DWORD PTR [eax]
64017d5e:	mov    DWORD PTR [esp],eax
64017d61:	ret    
64017d62:	sub    eax,0x1000
64017d67:	test   DWORD PTR [eax],eax
64017d69:	jmp    0x64017d54
64017d6b:	and    DWORD PTR ds:0x6403ac94,0x0
64017d72:	ret    
64017d73:	push   0x10
64017d75:	push   0x6402b9c0
64017d7a:	call   0x64015f14
64017d7f:	xor    eax,eax
64017d81:	mov    ebx,DWORD PTR [ebp+0x8]
64017d84:	xor    edi,edi
64017d86:	cmp    ebx,edi
64017d88:	setne  al
64017d8b:	cmp    eax,edi
64017d8d:	jne    0x64017dac
64017d8f:	call   0x640164c3
64017d94:	mov    DWORD PTR [eax],0x16
64017d9a:	push   edi
64017d9b:	push   edi
64017d9c:	push   edi
64017d9d:	push   edi
64017d9e:	push   edi
64017d9f:	call   0x64013e52
64017da4:	add    esp,0x14
64017da7:	or     eax,0xffffffff
64017daa:	jmp    0x64017dff
64017dac:	cmp    DWORD PTR ds:0x6403ab64,0x3
64017db3:	jne    0x64017ded
64017db5:	push   0x4
64017db7:	call   0x6401af0e
64017dbc:	pop    ecx
64017dbd:	mov    DWORD PTR [ebp-0x4],edi
64017dc0:	push   ebx
64017dc1:	call   0x6401af87
64017dc6:	pop    ecx
64017dc7:	mov    DWORD PTR [ebp-0x20],eax
64017dca:	cmp    eax,edi
64017dcc:	je     0x64017dd9
64017dce:	mov    esi,DWORD PTR [ebx-0x4]
64017dd1:	sub    esi,0x9
64017dd4:	mov    DWORD PTR [ebp-0x1c],esi
64017dd7:	jmp    0x64017ddc
64017dd9:	mov    esi,DWORD PTR [ebp-0x1c]
64017ddc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017de3:	call   0x64017e0d
64017de8:	cmp    DWORD PTR [ebp-0x20],edi
64017deb:	jne    0x64017dfd
64017ded:	push   ebx
64017dee:	push   edi
64017def:	push   DWORD PTR ds:0x64039354
64017df5:	call   DWORD PTR ds:0x64024188
64017dfb:	mov    esi,eax
64017dfd:	mov    eax,esi
64017dff:	call   0x64015f59
64017e04:	ret    
64017e05:	xor    edi,edi
64017e07:	mov    ebx,DWORD PTR [ebp+0x8]
64017e0a:	mov    esi,DWORD PTR [ebp-0x1c]
64017e0d:	push   0x4
64017e0f:	call   0x6401ae36
64017e14:	pop    ecx
64017e15:	ret    
64017e16:	call   0x6401bcad
64017e1b:	push   DWORD PTR [esp+0x4]
64017e1f:	call   0x6401bb0d
64017e24:	push   DWORD PTR ds:0x64037910
64017e2a:	call   0x6401760e
64017e2f:	push   0xff
64017e34:	call   eax
64017e36:	add    esp,0xc
64017e39:	ret    
64017e3a:	push   0x6402853c
64017e3f:	call   DWORD PTR ds:0x640240a0
64017e45:	test   eax,eax
64017e47:	je     0x64017e5f
64017e49:	push   0x6402852c
64017e4e:	push   eax
64017e4f:	call   DWORD PTR ds:0x64024094
64017e55:	test   eax,eax
64017e57:	je     0x64017e5f
64017e59:	push   DWORD PTR [esp+0x4]
64017e5d:	call   eax
64017e5f:	ret    
64017e60:	push   DWORD PTR [esp+0x4]
64017e64:	call   0x64017e3a
64017e69:	pop    ecx
64017e6a:	push   DWORD PTR [esp+0x4]
64017e6e:	call   DWORD PTR ds:0x64024034
64017e74:	int3   
64017e75:	push   0x8
64017e77:	call   0x6401af0e
64017e7c:	pop    ecx
64017e7d:	ret    
64017e7e:	push   0x8
64017e80:	call   0x6401ae36
64017e85:	pop    ecx
64017e86:	ret    
64017e87:	push   esi
64017e88:	mov    esi,eax
64017e8a:	jmp    0x64017e97
64017e8c:	mov    eax,DWORD PTR [esi]
64017e8e:	test   eax,eax
64017e90:	je     0x64017e94
64017e92:	call   eax
64017e94:	add    esi,0x4
64017e97:	cmp    esi,DWORD PTR [esp+0x8]
64017e9b:	jb     0x64017e8c
64017e9d:	pop    esi
64017e9e:	ret    
64017e9f:	push   esi
64017ea0:	mov    esi,DWORD PTR [esp+0x8]
64017ea4:	xor    eax,eax
64017ea6:	jmp    0x64017eb7
64017ea8:	test   eax,eax
64017eaa:	jne    0x64017ebd
64017eac:	mov    ecx,DWORD PTR [esi]
64017eae:	test   ecx,ecx
64017eb0:	je     0x64017eb4
64017eb2:	call   ecx
64017eb4:	add    esi,0x4
64017eb7:	cmp    esi,DWORD PTR [esp+0xc]
64017ebb:	jb     0x64017ea8
64017ebd:	pop    esi
64017ebe:	ret    
64017ebf:	mov    ecx,DWORD PTR [esp+0x4]
64017ec3:	push   esi
64017ec4:	xor    esi,esi
64017ec6:	cmp    ecx,esi
64017ec8:	jne    0x64017ee7
64017eca:	call   0x640164c3
64017ecf:	push   esi
64017ed0:	push   esi
64017ed1:	push   esi
64017ed2:	push   esi
64017ed3:	push   esi
64017ed4:	mov    DWORD PTR [eax],0x16
64017eda:	call   0x64013e52
64017edf:	add    esp,0x14
64017ee2:	push   0x16
64017ee4:	pop    eax
64017ee5:	pop    esi
64017ee6:	ret    
64017ee7:	mov    eax,ds:0x64039200
64017eec:	cmp    eax,esi
64017eee:	je     0x64017eca
64017ef0:	mov    DWORD PTR [ecx],eax
64017ef2:	xor    eax,eax
64017ef4:	pop    esi
64017ef5:	ret    
64017ef6:	mov    eax,DWORD PTR [esp+0x4]
64017efa:	push   esi
64017efb:	xor    esi,esi
64017efd:	cmp    eax,esi
64017eff:	jne    0x64017f1e
64017f01:	call   0x640164c3
64017f06:	push   esi
64017f07:	push   esi
64017f08:	push   esi
64017f09:	push   esi
64017f0a:	push   esi
64017f0b:	mov    DWORD PTR [eax],0x16
64017f11:	call   0x64013e52
64017f16:	add    esp,0x14
64017f19:	push   0x16
64017f1b:	pop    eax
64017f1c:	pop    esi
64017f1d:	ret    
64017f1e:	cmp    DWORD PTR ds:0x64039200,esi
64017f24:	je     0x64017f01
64017f26:	mov    ecx,DWORD PTR ds:0x6403920c
64017f2c:	mov    DWORD PTR [eax],ecx
64017f2e:	xor    eax,eax
64017f30:	pop    esi
64017f31:	ret    
64017f32:	cmp    DWORD PTR ds:0x64028ba4,0x0
64017f39:	je     0x64017f55
64017f3b:	push   0x64028ba4
64017f40:	call   0x6401e610
64017f45:	test   eax,eax
64017f47:	pop    ecx
64017f48:	je     0x64017f55
64017f4a:	push   DWORD PTR [esp+0x4]
64017f4e:	call   DWORD PTR ds:0x64028ba4
64017f54:	pop    ecx
64017f55:	call   0x6401e80f
64017f5a:	push   0x64024260
64017f5f:	push   0x64024248
64017f64:	call   0x64017e9f
64017f69:	test   eax,eax
64017f6b:	pop    ecx
64017f6c:	pop    ecx
64017f6d:	jne    0x64017fc3
64017f6f:	push   esi
64017f70:	push   edi
64017f71:	push   0x6401883a
64017f76:	call   0x64013faa
64017f7b:	mov    esi,0x64024204
64017f80:	mov    eax,esi
64017f82:	mov    edi,0x64024244
64017f87:	cmp    eax,edi
64017f89:	pop    ecx
64017f8a:	jae    0x64017f9b
64017f8c:	mov    eax,DWORD PTR [esi]
64017f8e:	test   eax,eax
64017f90:	je     0x64017f94
64017f92:	call   eax
64017f94:	add    esi,0x4
64017f97:	cmp    esi,edi
64017f99:	jb     0x64017f8c
64017f9b:	cmp    DWORD PTR ds:0x6403ac90,0x0
64017fa2:	pop    edi
64017fa3:	pop    esi
64017fa4:	je     0x64017fc1
64017fa6:	push   0x6403ac90
64017fab:	call   0x6401e610
64017fb0:	test   eax,eax
64017fb2:	pop    ecx
64017fb3:	je     0x64017fc1
64017fb5:	push   0x0
64017fb7:	push   0x2
64017fb9:	push   0x0
64017fbb:	call   DWORD PTR ds:0x6403ac90
64017fc1:	xor    eax,eax
64017fc3:	ret    
64017fc4:	int3   
64017fc5:	int3   
64017fc6:	int3   
64017fc7:	push   0x10
64017fc9:	push   0x6402b9e0
64017fce:	call   0x64015f14
64017fd3:	push   0x8
64017fd5:	call   0x6401af0e
64017fda:	pop    ecx
64017fdb:	xor    edi,edi
64017fdd:	mov    DWORD PTR [ebp-0x4],edi
64017fe0:	xor    ebx,ebx
64017fe2:	inc    ebx
64017fe3:	cmp    DWORD PTR ds:0x64039240,ebx
64017fe9:	je     0x64018069
64017feb:	mov    DWORD PTR ds:0x6403923c,ebx
64017ff1:	mov    al,BYTE PTR [ebp+0x10]
64017ff4:	mov    ds:0x64039238,al
64017ff9:	cmp    DWORD PTR [ebp+0xc],edi
64017ffc:	jne    0x64018059
64017ffe:	push   DWORD PTR ds:0x6403ac88
64018004:	call   0x6401760e
64018009:	mov    DWORD PTR [ebp-0x1c],eax
6401800c:	push   DWORD PTR ds:0x6403ac84
64018012:	call   0x6401760e
64018017:	pop    ecx
64018018:	pop    ecx
64018019:	mov    esi,eax
6401801b:	mov    DWORD PTR [ebp-0x20],esi
6401801e:	cmp    DWORD PTR [ebp-0x1c],edi
64018021:	je     0x64018049
64018023:	sub    esi,0x4
64018026:	mov    DWORD PTR [ebp-0x20],esi
64018029:	cmp    esi,DWORD PTR [ebp-0x1c]
6401802c:	jb     0x64018049
6401802e:	cmp    DWORD PTR [esi],0x0
64018031:	je     0x64018023
64018033:	mov    edi,DWORD PTR [esi]
64018035:	call   0x64017605
6401803a:	cmp    edi,eax
6401803c:	je     0x64018023
6401803e:	push   edi
6401803f:	call   0x6401760e
64018044:	pop    ecx
64018045:	call   eax
64018047:	jmp    0x64018023
64018049:	push   0x64024270
6401804e:	mov    eax,0x64024264
64018053:	call   0x64017e87
64018058:	pop    ecx
64018059:	push   0x64024278
6401805e:	mov    eax,0x64024274
64018063:	call   0x64017e87
64018068:	pop    ecx
64018069:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018070:	call   0x64018094
64018075:	cmp    DWORD PTR [ebp+0x10],0x0
64018079:	jne    0x640180a3
6401807b:	mov    DWORD PTR ds:0x64039240,ebx
64018081:	push   0x8
64018083:	call   0x6401ae36
64018088:	pop    ecx
64018089:	push   DWORD PTR [ebp+0x8]
6401808c:	call   0x64017e60
64018091:	xor    ebx,ebx
64018093:	inc    ebx
64018094:	cmp    DWORD PTR [ebp+0x10],0x0
64018098:	je     0x640180a2
6401809a:	push   0x8
6401809c:	call   0x6401ae36
640180a1:	pop    ecx
640180a2:	ret    
640180a3:	call   0x64015f59
640180a8:	ret    
640180a9:	push   0x0
640180ab:	push   0x1
640180ad:	push   DWORD PTR [esp+0xc]
640180b1:	call   0x64017fc7
640180b6:	add    esp,0xc
640180b9:	ret    
640180ba:	push   0x1
640180bc:	push   0x0
640180be:	push   0x0
640180c0:	call   0x64017fc7
640180c5:	add    esp,0xc
640180c8:	ret    
640180c9:	push   esi
640180ca:	call   0x64017605
640180cf:	mov    esi,eax
640180d1:	push   esi
640180d2:	call   0x64016875
640180d7:	push   esi
640180d8:	call   0x6401e838
640180dd:	push   esi
640180de:	call   0x64013d4c
640180e3:	push   esi
640180e4:	call   0x6401d782
640180e9:	push   esi
640180ea:	call   0x6401e82e
640180ef:	push   esi
640180f0:	call   0x6401e377
640180f5:	push   esi
640180f6:	call   0x6401c165
640180fb:	push   esi
640180fc:	call   0x64017bd3
64018101:	push   0x640180a9
64018106:	call   0x64017597
6401810b:	add    esp,0x24
6401810e:	mov    ds:0x64037910,eax
64018113:	pop    esi
64018114:	ret    
64018115:	push   0x54
64018117:	push   0x6402ba00
6401811c:	call   0x64015f14
64018121:	xor    edi,edi
64018123:	mov    DWORD PTR [ebp-0x4],edi
64018126:	lea    eax,[ebp-0x64]
64018129:	push   eax
6401812a:	call   DWORD PTR ds:0x640241d4
64018130:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018137:	push   0x40
64018139:	push   0x20
6401813b:	pop    esi
6401813c:	push   esi
6401813d:	call   0x64015d6f
64018142:	pop    ecx
64018143:	pop    ecx
64018144:	cmp    eax,edi
64018146:	je     0x64018360
6401814c:	mov    ds:0x6403ab80,eax
64018151:	mov    DWORD PTR ds:0x6403ab68,esi
64018157:	lea    ecx,[eax+0x800]
6401815d:	jmp    0x6401818f
6401815f:	mov    BYTE PTR [eax+0x4],0x0
64018163:	or     DWORD PTR [eax],0xffffffff
64018166:	mov    BYTE PTR [eax+0x5],0xa
6401816a:	mov    DWORD PTR [eax+0x8],edi
6401816d:	mov    BYTE PTR [eax+0x24],0x0
64018171:	mov    BYTE PTR [eax+0x25],0xa
64018175:	mov    BYTE PTR [eax+0x26],0xa
64018179:	mov    DWORD PTR [eax+0x38],edi
6401817c:	mov    BYTE PTR [eax+0x34],0x0
64018180:	add    eax,0x40
64018183:	mov    ecx,DWORD PTR ds:0x6403ab80
64018189:	add    ecx,0x800
6401818f:	cmp    eax,ecx
64018191:	jb     0x6401815f
64018193:	cmp    WORD PTR [ebp-0x32],di
64018197:	je     0x640182a7
6401819d:	mov    eax,DWORD PTR [ebp-0x30]
640181a0:	cmp    eax,edi
640181a2:	je     0x640182a7
640181a8:	mov    edi,DWORD PTR [eax]
640181aa:	lea    ebx,[eax+0x4]
640181ad:	lea    eax,[ebx+edi*1]
640181b0:	mov    DWORD PTR [ebp-0x1c],eax
640181b3:	mov    esi,0x800
640181b8:	cmp    edi,esi
640181ba:	jl     0x640181be
640181bc:	mov    edi,esi
640181be:	mov    DWORD PTR [ebp-0x20],0x1
640181c5:	jmp    0x64018222
640181c7:	push   0x40
640181c9:	push   0x20
640181cb:	call   0x64015d6f
640181d0:	pop    ecx
640181d1:	pop    ecx
640181d2:	test   eax,eax
640181d4:	je     0x6401822c
640181d6:	mov    ecx,DWORD PTR [ebp-0x20]
640181d9:	lea    ecx,[ecx*4+0x6403ab80]
640181e0:	mov    DWORD PTR [ecx],eax
640181e2:	add    DWORD PTR ds:0x6403ab68,0x20
640181e9:	lea    edx,[eax+0x800]
640181ef:	jmp    0x6401821b
640181f1:	mov    BYTE PTR [eax+0x4],0x0
640181f5:	or     DWORD PTR [eax],0xffffffff
640181f8:	mov    BYTE PTR [eax+0x5],0xa
640181fc:	and    DWORD PTR [eax+0x8],0x0
64018200:	and    BYTE PTR [eax+0x24],0x80
64018204:	mov    BYTE PTR [eax+0x25],0xa
64018208:	mov    BYTE PTR [eax+0x26],0xa
6401820c:	and    DWORD PTR [eax+0x38],0x0
64018210:	mov    BYTE PTR [eax+0x34],0x0
64018214:	add    eax,0x40
64018217:	mov    edx,DWORD PTR [ecx]
64018219:	add    edx,esi
6401821b:	cmp    eax,edx
6401821d:	jb     0x640181f1
6401821f:	inc    DWORD PTR [ebp-0x20]
64018222:	cmp    DWORD PTR ds:0x6403ab68,edi
64018228:	jl     0x640181c7
6401822a:	jmp    0x64018232
6401822c:	mov    edi,DWORD PTR ds:0x6403ab68
64018232:	and    DWORD PTR [ebp-0x20],0x0
64018236:	test   edi,edi
64018238:	jle    0x640182a7
6401823a:	mov    eax,DWORD PTR [ebp-0x1c]
6401823d:	mov    ecx,DWORD PTR [eax]
6401823f:	cmp    ecx,0xffffffff
64018242:	je     0x6401829a
64018244:	cmp    ecx,0xfffffffe
64018247:	je     0x6401829a
64018249:	mov    al,BYTE PTR [ebx]
6401824b:	test   al,0x1
6401824d:	je     0x6401829a
6401824f:	test   al,0x8
64018251:	jne    0x6401825e
64018253:	push   ecx
64018254:	call   DWORD PTR ds:0x640241d0
6401825a:	test   eax,eax
6401825c:	je     0x6401829a
6401825e:	mov    esi,DWORD PTR [ebp-0x20]
64018261:	mov    eax,esi
64018263:	sar    eax,0x5
64018266:	and    esi,0x1f
64018269:	shl    esi,0x6
6401826c:	add    esi,DWORD PTR [eax*4+0x6403ab80]
64018273:	mov    eax,DWORD PTR [ebp-0x1c]
64018276:	mov    eax,DWORD PTR [eax]
64018278:	mov    DWORD PTR [esi],eax
6401827a:	mov    al,BYTE PTR [ebx]
6401827c:	mov    BYTE PTR [esi+0x4],al
6401827f:	push   0xfa0
64018284:	lea    eax,[esi+0xc]
64018287:	push   eax
64018288:	call   0x6401e852
6401828d:	pop    ecx
6401828e:	pop    ecx
6401828f:	test   eax,eax
64018291:	je     0x64018360
64018297:	inc    DWORD PTR [esi+0x8]
6401829a:	inc    DWORD PTR [ebp-0x20]
6401829d:	inc    ebx
6401829e:	add    DWORD PTR [ebp-0x1c],0x4
640182a2:	cmp    DWORD PTR [ebp-0x20],edi
640182a5:	jl     0x6401823a
640182a7:	xor    ebx,ebx
640182a9:	mov    esi,ebx
640182ab:	shl    esi,0x6
640182ae:	add    esi,DWORD PTR ds:0x6403ab80
640182b4:	mov    eax,DWORD PTR [esi]
640182b6:	cmp    eax,0xffffffff
640182b9:	je     0x640182c6
640182bb:	cmp    eax,0xfffffffe
640182be:	je     0x640182c6
640182c0:	or     BYTE PTR [esi+0x4],0x80
640182c4:	jmp    0x64018338
640182c6:	mov    BYTE PTR [esi+0x4],0x81
640182ca:	test   ebx,ebx
640182cc:	jne    0x640182d3
640182ce:	push   0xfffffff6
640182d0:	pop    eax
640182d1:	jmp    0x640182dd
640182d3:	mov    eax,ebx
640182d5:	dec    eax
640182d6:	neg    eax
640182d8:	sbb    eax,eax
640182da:	add    eax,0xfffffff5
640182dd:	push   eax
640182de:	call   DWORD PTR ds:0x640241cc
640182e4:	mov    edi,eax
640182e6:	cmp    edi,0xffffffff
640182e9:	je     0x6401832e
640182eb:	test   edi,edi
640182ed:	je     0x6401832e
640182ef:	push   edi
640182f0:	call   DWORD PTR ds:0x640241d0
640182f6:	test   eax,eax
640182f8:	je     0x6401832e
640182fa:	mov    DWORD PTR [esi],edi
640182fc:	and    eax,0xff
64018301:	cmp    eax,0x2
64018304:	jne    0x6401830c
64018306:	or     BYTE PTR [esi+0x4],0x40
6401830a:	jmp    0x64018315
6401830c:	cmp    eax,0x3
6401830f:	jne    0x64018315
64018311:	or     BYTE PTR [esi+0x4],0x8
64018315:	push   0xfa0
6401831a:	lea    eax,[esi+0xc]
6401831d:	push   eax
6401831e:	call   0x6401e852
64018323:	pop    ecx
64018324:	pop    ecx
64018325:	test   eax,eax
64018327:	je     0x64018360
64018329:	inc    DWORD PTR [esi+0x8]
6401832c:	jmp    0x64018338
6401832e:	or     BYTE PTR [esi+0x4],0x40
64018332:	mov    DWORD PTR [esi],0xfffffffe
64018338:	inc    ebx
64018339:	cmp    ebx,0x3
6401833c:	jl     0x640182a9
64018342:	push   DWORD PTR ds:0x6403ab68
64018348:	call   DWORD PTR ds:0x640241c8
6401834e:	xor    eax,eax
64018350:	jmp    0x64018363
64018352:	xor    eax,eax
64018354:	inc    eax
64018355:	ret    
64018356:	mov    esp,DWORD PTR [ebp-0x18]
64018359:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018360:	or     eax,0xffffffff
64018363:	call   0x64015f59
64018368:	ret    
64018369:	push   esi
6401836a:	push   edi
6401836b:	mov    esi,0x6403ab80
64018370:	mov    edi,DWORD PTR [esi]
64018372:	test   edi,edi
64018374:	je     0x640183a7
64018376:	lea    eax,[edi+0x800]
6401837c:	jmp    0x64018398
6401837e:	cmp    DWORD PTR [edi+0x8],0x0
64018382:	je     0x6401838e
64018384:	lea    eax,[edi+0xc]
64018387:	push   eax
64018388:	call   DWORD PTR ds:0x64024158
6401838e:	mov    eax,DWORD PTR [esi]
64018390:	add    edi,0x40
64018393:	add    eax,0x800
64018398:	cmp    edi,eax
6401839a:	jb     0x6401837e
6401839c:	push   DWORD PTR [esi]
6401839e:	call   0x6401475a
640183a3:	and    DWORD PTR [esi],0x0
640183a6:	pop    ecx
640183a7:	add    esi,0x4
640183aa:	cmp    esi,0x6403ac80
640183b0:	jl     0x64018370
640183b2:	pop    edi
640183b3:	pop    esi
640183b4:	ret    
640183b5:	push   ebx
640183b6:	xor    ebx,ebx
640183b8:	cmp    DWORD PTR ds:0x6403ac8c,ebx
640183be:	push   esi
640183bf:	push   edi
640183c0:	jne    0x640183c7
640183c2:	call   0x64019233
640183c7:	mov    esi,DWORD PTR ds:0x64038e98
640183cd:	xor    edi,edi
640183cf:	cmp    esi,ebx
640183d1:	jne    0x640183eb
640183d3:	or     eax,0xffffffff
640183d6:	jmp    0x64018476
640183db:	cmp    al,0x3d
640183dd:	je     0x640183e0
640183df:	inc    edi
640183e0:	push   esi
640183e1:	call   0x64015550
640183e6:	pop    ecx
640183e7:	lea    esi,[esi+eax*1+0x1]
640183eb:	mov    al,BYTE PTR [esi]
640183ed:	cmp    al,bl
640183ef:	jne    0x640183db
640183f1:	push   0x4
640183f3:	inc    edi
640183f4:	push   edi
640183f5:	call   0x64015d6f
640183fa:	mov    edi,eax
640183fc:	cmp    edi,ebx
640183fe:	pop    ecx
640183ff:	pop    ecx
64018400:	mov    DWORD PTR ds:0x64039220,edi
64018406:	je     0x640183d3
64018408:	mov    esi,DWORD PTR ds:0x64038e98
6401840e:	push   ebp
6401840f:	jmp    0x64018451
64018411:	push   esi
64018412:	call   0x64015550
64018417:	mov    ebp,eax
64018419:	inc    ebp
6401841a:	cmp    BYTE PTR [esi],0x3d
6401841d:	pop    ecx
6401841e:	je     0x6401844f
64018420:	push   0x1
64018422:	push   ebp
64018423:	call   0x64015d6f
64018428:	cmp    eax,ebx
6401842a:	pop    ecx
6401842b:	pop    ecx
6401842c:	mov    DWORD PTR [edi],eax
6401842e:	je     0x6401847a
64018430:	push   esi
64018431:	push   ebp
64018432:	push   eax
64018433:	call   0x64016321
64018438:	add    esp,0xc
6401843b:	test   eax,eax
6401843d:	je     0x6401844c
6401843f:	push   ebx
64018440:	push   ebx
64018441:	push   ebx
64018442:	push   ebx
64018443:	push   ebx
64018444:	call   0x64013d56
64018449:	add    esp,0x14
6401844c:	add    edi,0x4
6401844f:	add    esi,ebp
64018451:	cmp    BYTE PTR [esi],bl
64018453:	jne    0x64018411
64018455:	push   DWORD PTR ds:0x64038e98
6401845b:	call   0x6401475a
64018460:	mov    DWORD PTR ds:0x64038e98,ebx
64018466:	mov    DWORD PTR [edi],ebx
64018468:	mov    DWORD PTR ds:0x6403ac80,0x1
64018472:	xor    eax,eax
64018474:	pop    ecx
64018475:	pop    ebp
64018476:	pop    edi
64018477:	pop    esi
64018478:	pop    ebx
64018479:	ret    
6401847a:	push   DWORD PTR ds:0x64039220
64018480:	call   0x6401475a
64018485:	mov    DWORD PTR ds:0x64039220,ebx
6401848b:	or     eax,0xffffffff
6401848e:	jmp    0x64018474
64018490:	push   ebp
64018491:	mov    ebp,esp
64018493:	push   ecx
64018494:	mov    ecx,DWORD PTR [ebp+0x10]
64018497:	push   ebx
64018498:	xor    eax,eax
6401849a:	cmp    DWORD PTR [ebp+0x8],eax
6401849d:	push   esi
6401849e:	mov    DWORD PTR [edi],eax
640184a0:	mov    esi,edx
640184a2:	mov    edx,DWORD PTR [ebp+0xc]
640184a5:	mov    DWORD PTR [ecx],0x1
640184ab:	je     0x640184b6
640184ad:	mov    ebx,DWORD PTR [ebp+0x8]
640184b0:	add    DWORD PTR [ebp+0x8],0x4
640184b4:	mov    DWORD PTR [ebx],edx
640184b6:	mov    DWORD PTR [ebp-0x4],eax
640184b9:	cmp    BYTE PTR [esi],0x22
640184bc:	jne    0x640184ce
640184be:	xor    eax,eax
640184c0:	cmp    DWORD PTR [ebp-0x4],eax
640184c3:	mov    bl,0x22
640184c5:	sete   al
640184c8:	inc    esi
640184c9:	mov    DWORD PTR [ebp-0x4],eax
640184cc:	jmp    0x6401850a
640184ce:	inc    DWORD PTR [edi]
640184d0:	test   edx,edx
640184d2:	je     0x640184dc
640184d4:	mov    al,BYTE PTR [esi]
640184d6:	mov    BYTE PTR [edx],al
640184d8:	inc    edx
640184d9:	mov    DWORD PTR [ebp+0xc],edx
640184dc:	mov    bl,BYTE PTR [esi]
640184de:	movzx  eax,bl
640184e1:	push   eax
640184e2:	inc    esi
640184e3:	call   0x6401d7dd
640184e8:	test   eax,eax
640184ea:	pop    ecx
640184eb:	je     0x64018500
640184ed:	inc    DWORD PTR [edi]
640184ef:	cmp    DWORD PTR [ebp+0xc],0x0
640184f3:	je     0x640184ff
640184f5:	mov    ecx,DWORD PTR [ebp+0xc]
640184f8:	mov    al,BYTE PTR [esi]
640184fa:	inc    DWORD PTR [ebp+0xc]
640184fd:	mov    BYTE PTR [ecx],al
640184ff:	inc    esi
64018500:	test   bl,bl
64018502:	mov    edx,DWORD PTR [ebp+0xc]
64018505:	mov    ecx,DWORD PTR [ebp+0x10]
64018508:	je     0x6401853c
6401850a:	cmp    DWORD PTR [ebp-0x4],0x0
6401850e:	jne    0x640184b9
64018510:	cmp    bl,0x20
64018513:	je     0x6401851a
64018515:	cmp    bl,0x9
64018518:	jne    0x640184b9
6401851a:	test   edx,edx
6401851c:	je     0x64018522
6401851e:	mov    BYTE PTR [edx-0x1],0x0
64018522:	and    DWORD PTR [ebp-0x4],0x0
64018526:	cmp    BYTE PTR [esi],0x0
64018529:	je     0x64018618
6401852f:	mov    al,BYTE PTR [esi]
64018531:	cmp    al,0x20
64018533:	je     0x64018539
64018535:	cmp    al,0x9
64018537:	jne    0x6401853f
64018539:	inc    esi
6401853a:	jmp    0x6401852f
6401853c:	dec    esi
6401853d:	jmp    0x64018522
6401853f:	cmp    BYTE PTR [esi],0x0
64018542:	je     0x64018618
64018548:	cmp    DWORD PTR [ebp+0x8],0x0
6401854c:	je     0x64018557
6401854e:	mov    eax,DWORD PTR [ebp+0x8]
64018551:	add    DWORD PTR [ebp+0x8],0x4
64018555:	mov    DWORD PTR [eax],edx
64018557:	inc    DWORD PTR [ecx]
64018559:	xor    ebx,ebx
6401855b:	inc    ebx
6401855c:	xor    ecx,ecx
6401855e:	jmp    0x64018562
64018560:	inc    esi
64018561:	inc    ecx
64018562:	cmp    BYTE PTR [esi],0x5c
64018565:	je     0x64018560
64018567:	cmp    BYTE PTR [esi],0x22
6401856a:	jne    0x64018592
6401856c:	test   cl,0x1
6401856f:	jne    0x64018590
64018571:	cmp    DWORD PTR [ebp-0x4],0x0
64018575:	je     0x64018583
64018577:	lea    eax,[esi+0x1]
6401857a:	cmp    BYTE PTR [eax],0x22
6401857d:	jne    0x64018583
6401857f:	mov    esi,eax
64018581:	jmp    0x64018590
64018583:	xor    eax,eax
64018585:	xor    ebx,ebx
64018587:	cmp    DWORD PTR [ebp-0x4],eax
6401858a:	sete   al
6401858d:	mov    DWORD PTR [ebp-0x4],eax
64018590:	shr    ecx,1
64018592:	test   ecx,ecx
64018594:	je     0x640185a8
64018596:	dec    ecx
64018597:	test   edx,edx
64018599:	je     0x6401859f
6401859b:	mov    BYTE PTR [edx],0x5c
6401859e:	inc    edx
6401859f:	inc    DWORD PTR [edi]
640185a1:	test   ecx,ecx
640185a3:	jne    0x64018596
640185a5:	mov    DWORD PTR [ebp+0xc],edx
640185a8:	mov    al,BYTE PTR [esi]
640185aa:	test   al,al
640185ac:	je     0x64018603
640185ae:	cmp    DWORD PTR [ebp-0x4],0x0
640185b2:	jne    0x640185bc
640185b4:	cmp    al,0x20
640185b6:	je     0x64018603
640185b8:	cmp    al,0x9
640185ba:	je     0x64018603
640185bc:	test   ebx,ebx
640185be:	je     0x640185fd
640185c0:	test   edx,edx
640185c2:	movsx  eax,al
640185c5:	push   eax
640185c6:	je     0x640185eb
640185c8:	call   0x6401d7dd
640185cd:	test   eax,eax
640185cf:	pop    ecx
640185d0:	je     0x640185df
640185d2:	mov    al,BYTE PTR [esi]
640185d4:	mov    ecx,DWORD PTR [ebp+0xc]
640185d7:	inc    DWORD PTR [ebp+0xc]
640185da:	mov    BYTE PTR [ecx],al
640185dc:	inc    esi
640185dd:	inc    DWORD PTR [edi]
640185df:	mov    ecx,DWORD PTR [ebp+0xc]
640185e2:	mov    al,BYTE PTR [esi]
640185e4:	inc    DWORD PTR [ebp+0xc]
640185e7:	mov    BYTE PTR [ecx],al
640185e9:	jmp    0x640185f8
640185eb:	call   0x6401d7dd
640185f0:	test   eax,eax
640185f2:	pop    ecx
640185f3:	je     0x640185f8
640185f5:	inc    esi
640185f6:	inc    DWORD PTR [edi]
640185f8:	inc    DWORD PTR [edi]
640185fa:	mov    edx,DWORD PTR [ebp+0xc]
640185fd:	inc    esi
640185fe:	jmp    0x64018559
64018603:	test   edx,edx
64018605:	je     0x6401860e
64018607:	mov    BYTE PTR [edx],0x0
6401860a:	inc    edx
6401860b:	mov    DWORD PTR [ebp+0xc],edx
6401860e:	inc    DWORD PTR [edi]
64018610:	mov    ecx,DWORD PTR [ebp+0x10]
64018613:	jmp    0x64018526
64018618:	mov    eax,DWORD PTR [ebp+0x8]
6401861b:	test   eax,eax
6401861d:	pop    esi
6401861e:	pop    ebx
6401861f:	je     0x64018624
64018621:	and    DWORD PTR [eax],0x0
64018624:	inc    DWORD PTR [ecx]
64018626:	leave  
64018627:	ret    
64018628:	push   ebp
64018629:	mov    ebp,esp
6401862b:	sub    esp,0xc
6401862e:	push   ebx
6401862f:	xor    ebx,ebx
64018631:	cmp    DWORD PTR ds:0x6403ac8c,ebx
64018637:	push   esi
64018638:	push   edi
64018639:	jne    0x64018640
6401863b:	call   0x64019233
64018640:	push   0x104
64018645:	mov    esi,0x64039248
6401864a:	push   esi
6401864b:	push   ebx
6401864c:	mov    BYTE PTR ds:0x6403934c,bl
64018652:	call   DWORD PTR ds:0x6402414c
64018658:	mov    eax,ds:0x6403ac98
6401865d:	cmp    eax,ebx
6401865f:	mov    DWORD PTR ds:0x64039230,esi
64018665:	je     0x6401866e
64018667:	cmp    BYTE PTR [eax],bl
64018669:	mov    DWORD PTR [ebp-0x4],eax
6401866c:	jne    0x64018671
6401866e:	mov    DWORD PTR [ebp-0x4],esi
64018671:	mov    edx,DWORD PTR [ebp-0x4]
64018674:	lea    eax,[ebp-0x8]
64018677:	push   eax
64018678:	push   ebx
64018679:	push   ebx
6401867a:	lea    edi,[ebp-0xc]
6401867d:	call   0x64018490
64018682:	mov    eax,DWORD PTR [ebp-0x8]
64018685:	add    esp,0xc
64018688:	cmp    eax,0x3fffffff
6401868d:	jae    0x640186d9
6401868f:	mov    ecx,DWORD PTR [ebp-0xc]
64018692:	cmp    ecx,0xffffffff
64018695:	jae    0x640186d9
64018697:	mov    edi,eax
64018699:	shl    edi,0x2
6401869c:	lea    eax,[edi+ecx*1]
6401869f:	cmp    eax,ecx
640186a1:	jb     0x640186d9
640186a3:	push   eax
640186a4:	call   0x64015d2f
640186a9:	mov    esi,eax
640186ab:	cmp    esi,ebx
640186ad:	pop    ecx
640186ae:	je     0x640186d9
640186b0:	mov    edx,DWORD PTR [ebp-0x4]
640186b3:	lea    eax,[ebp-0x8]
640186b6:	push   eax
640186b7:	add    edi,esi
640186b9:	push   edi
640186ba:	push   esi
640186bb:	lea    edi,[ebp-0xc]
640186be:	call   0x64018490
640186c3:	mov    eax,DWORD PTR [ebp-0x8]
640186c6:	add    esp,0xc
640186c9:	dec    eax
640186ca:	mov    ds:0x64039214,eax
640186cf:	mov    DWORD PTR ds:0x64039218,esi
640186d5:	xor    eax,eax
640186d7:	jmp    0x640186dc
640186d9:	or     eax,0xffffffff
640186dc:	pop    edi
640186dd:	pop    esi
640186de:	pop    ebx
640186df:	leave  
640186e0:	ret    
640186e1:	push   ecx
640186e2:	push   ecx
640186e3:	mov    eax,ds:0x64039350
640186e8:	push   ebx
640186e9:	push   ebp
640186ea:	push   esi
640186eb:	push   edi
640186ec:	mov    edi,DWORD PTR ds:0x64024110
640186f2:	xor    ebx,ebx
640186f4:	xor    esi,esi
640186f6:	cmp    eax,ebx
640186f8:	push   0x2
640186fa:	pop    ebp
640186fb:	jne    0x6401872a
640186fd:	call   edi
640186ff:	mov    esi,eax
64018701:	cmp    esi,ebx
64018703:	je     0x64018711
64018705:	mov    DWORD PTR ds:0x64039350,0x1
6401870f:	jmp    0x64018733
64018711:	call   DWORD PTR ds:0x64024064
64018717:	cmp    eax,0x78
6401871a:	jne    0x64018725
6401871c:	mov    eax,ebp
6401871e:	mov    ds:0x64039350,eax
64018723:	jmp    0x6401872a
64018725:	mov    eax,ds:0x64039350
6401872a:	cmp    eax,0x1
6401872d:	jne    0x640187b7
64018733:	cmp    esi,ebx
64018735:	jne    0x64018746
64018737:	call   edi
64018739:	mov    esi,eax
6401873b:	cmp    esi,ebx
6401873d:	jne    0x64018746
6401873f:	xor    eax,eax
64018741:	jmp    0x6401880f
64018746:	cmp    WORD PTR [esi],bx
64018749:	mov    eax,esi
6401874b:	je     0x6401875b
6401874d:	add    eax,ebp
6401874f:	cmp    WORD PTR [eax],bx
64018752:	jne    0x6401874d
64018754:	add    eax,ebp
64018756:	cmp    WORD PTR [eax],bx
64018759:	jne    0x6401874d
6401875b:	mov    edi,DWORD PTR ds:0x64024010
64018761:	push   ebx
64018762:	push   ebx
64018763:	push   ebx
64018764:	sub    eax,esi
64018766:	push   ebx
64018767:	sar    eax,1
64018769:	inc    eax
6401876a:	push   eax
6401876b:	push   esi
6401876c:	push   ebx
6401876d:	push   ebx
6401876e:	mov    DWORD PTR [esp+0x34],eax
64018772:	call   edi
64018774:	mov    ebp,eax
64018776:	cmp    ebp,ebx
64018778:	je     0x640187ac
6401877a:	push   ebp
6401877b:	call   0x64015d2f
64018780:	cmp    eax,ebx
64018782:	pop    ecx
64018783:	mov    DWORD PTR [esp+0x10],eax
64018787:	je     0x640187ac
64018789:	push   ebx
6401878a:	push   ebx
6401878b:	push   ebp
6401878c:	push   eax
6401878d:	push   DWORD PTR [esp+0x24]
64018791:	push   esi
64018792:	push   ebx
64018793:	push   ebx
64018794:	call   edi
64018796:	test   eax,eax
64018798:	jne    0x640187a8
6401879a:	push   DWORD PTR [esp+0x10]
6401879e:	call   0x6401475a
640187a3:	pop    ecx
640187a4:	mov    DWORD PTR [esp+0x10],ebx
640187a8:	mov    ebx,DWORD PTR [esp+0x10]
640187ac:	push   esi
640187ad:	call   DWORD PTR ds:0x640240fc
640187b3:	mov    eax,ebx
640187b5:	jmp    0x6401880f
640187b7:	cmp    eax,ebp
640187b9:	je     0x640187bf
640187bb:	cmp    eax,ebx
640187bd:	jne    0x6401873f
640187bf:	call   DWORD PTR ds:0x64024144
640187c5:	mov    esi,eax
640187c7:	cmp    esi,ebx
640187c9:	je     0x6401873f
640187cf:	cmp    BYTE PTR [esi],bl
640187d1:	je     0x640187dd
640187d3:	inc    eax
640187d4:	cmp    BYTE PTR [eax],bl
640187d6:	jne    0x640187d3
640187d8:	inc    eax
640187d9:	cmp    BYTE PTR [eax],bl
640187db:	jne    0x640187d3
640187dd:	sub    eax,esi
640187df:	inc    eax
640187e0:	mov    ebp,eax
640187e2:	push   ebp
640187e3:	call   0x64015d2f
640187e8:	mov    edi,eax
640187ea:	cmp    edi,ebx
640187ec:	pop    ecx
640187ed:	jne    0x640187fb
640187ef:	push   esi
640187f0:	call   DWORD PTR ds:0x64024148
640187f6:	jmp    0x6401873f
640187fb:	push   ebp
640187fc:	push   esi
640187fd:	push   edi
640187fe:	call   0x640151e0
64018803:	add    esp,0xc
64018806:	push   esi
64018807:	call   DWORD PTR ds:0x64024148
6401880d:	mov    eax,edi
6401880f:	pop    edi
64018810:	pop    esi
64018811:	pop    ebp
64018812:	pop    ebx
64018813:	pop    ecx
64018814:	pop    ecx
64018815:	ret    
64018816:	push   esi
64018817:	push   edi
64018818:	mov    eax,0x6402b5a8
6401881d:	mov    edi,0x6402b5a8
64018822:	cmp    eax,edi
64018824:	mov    esi,eax
64018826:	jae    0x64018837
64018828:	mov    eax,DWORD PTR [esi]
6401882a:	test   eax,eax
6401882c:	je     0x64018830
6401882e:	call   eax
64018830:	add    esi,0x4
64018833:	cmp    esi,edi
64018835:	jb     0x64018828
64018837:	pop    edi
64018838:	pop    esi
64018839:	ret    
6401883a:	push   esi
6401883b:	push   edi
6401883c:	mov    eax,0x6402b5b0
64018841:	mov    edi,0x6402b5b0
64018846:	cmp    eax,edi
64018848:	mov    esi,eax
6401884a:	jae    0x6401885b
6401884c:	mov    eax,DWORD PTR [esi]
6401884e:	test   eax,eax
64018850:	je     0x64018854
64018852:	call   eax
64018854:	add    esi,0x4
64018857:	cmp    esi,edi
64018859:	jb     0x6401884c
6401885b:	pop    edi
6401885c:	pop    esi
6401885d:	ret    
6401885e:	push   ebp
6401885f:	mov    ebp,esp
64018861:	push   ecx
64018862:	push   ecx
64018863:	push   esi
64018864:	lea    eax,[ebp-0x4]
64018867:	xor    esi,esi
64018869:	push   eax
6401886a:	mov    DWORD PTR [ebp-0x4],esi
6401886d:	mov    DWORD PTR [ebp-0x8],esi
64018870:	call   0x64017ebf
64018875:	test   eax,eax
64018877:	pop    ecx
64018878:	je     0x64018887
6401887a:	push   esi
6401887b:	push   esi
6401887c:	push   esi
6401887d:	push   esi
6401887e:	push   esi
6401887f:	call   0x64013d56
64018884:	add    esp,0x14
64018887:	lea    eax,[ebp-0x8]
6401888a:	push   eax
6401888b:	call   0x64017ef6
64018890:	test   eax,eax
64018892:	pop    ecx
64018893:	je     0x640188a2
64018895:	push   esi
64018896:	push   esi
64018897:	push   esi
64018898:	push   esi
64018899:	push   esi
6401889a:	call   0x64013d56
6401889f:	add    esp,0x14
640188a2:	cmp    DWORD PTR [ebp-0x4],0x2
640188a6:	pop    esi
640188a7:	jne    0x640188b4
640188a9:	cmp    DWORD PTR [ebp-0x8],0x5
640188ad:	jb     0x640188b4
640188af:	xor    eax,eax
640188b1:	inc    eax
640188b2:	leave  
640188b3:	ret    
640188b4:	push   0x3
640188b6:	pop    eax
640188b7:	leave  
640188b8:	ret    
640188b9:	xor    eax,eax
640188bb:	cmp    DWORD PTR [esp+0x4],eax
640188bf:	push   0x0
640188c1:	sete   al
640188c4:	push   0x1000
640188c9:	push   eax
640188ca:	call   DWORD PTR ds:0x64024114
640188d0:	test   eax,eax
640188d2:	mov    ds:0x64039354,eax
640188d7:	jne    0x640188dc
640188d9:	xor    eax,eax
640188db:	ret    
640188dc:	call   0x6401885e
640188e1:	cmp    eax,0x3
640188e4:	mov    ds:0x6403ab64,eax
640188e9:	jne    0x6401890f
640188eb:	push   0x3f8
640188f0:	call   0x6401af3f
640188f5:	test   eax,eax
640188f7:	pop    ecx
640188f8:	jne    0x6401890f
640188fa:	push   DWORD PTR ds:0x64039354
64018900:	call   DWORD PTR ds:0x64024178
64018906:	and    DWORD PTR ds:0x64039354,0x0
6401890d:	jmp    0x640188d9
6401890f:	xor    eax,eax
64018911:	inc    eax
64018912:	ret    
64018913:	push   ebp
64018914:	xor    ebp,ebp
64018916:	cmp    DWORD PTR ds:0x6403ab64,0x3
6401891d:	jne    0x64018973
6401891f:	push   ebx
64018920:	mov    ebx,DWORD PTR ds:0x64024180
64018926:	push   edi
64018927:	xor    edi,edi
64018929:	cmp    DWORD PTR ds:0x64039b28,ebp
6401892f:	jle    0x64018962
64018931:	push   esi
64018932:	mov    esi,DWORD PTR ds:0x64039b2c
64018938:	add    esi,0x10
6401893b:	push   0x8000
64018940:	push   ebp
64018941:	push   DWORD PTR [esi-0x4]
64018944:	call   DWORD PTR ds:0x64024124
6401894a:	push   DWORD PTR [esi]
6401894c:	push   ebp
6401894d:	push   DWORD PTR ds:0x64039354
64018953:	call   ebx
64018955:	add    esi,0x14
64018958:	inc    edi
64018959:	cmp    edi,DWORD PTR ds:0x64039b28
6401895f:	jl     0x6401893b
64018961:	pop    esi
64018962:	push   DWORD PTR ds:0x64039b2c
64018968:	push   ebp
64018969:	push   DWORD PTR ds:0x64039354
6401896f:	call   ebx
64018971:	pop    edi
64018972:	pop    ebx
64018973:	push   DWORD PTR ds:0x64039354
64018979:	call   DWORD PTR ds:0x64024178
6401897f:	mov    DWORD PTR ds:0x64039354,ebp
64018985:	pop    ebp
64018986:	ret    
64018987:	push   ebp
64018988:	mov    ebp,esp
6401898a:	push   ecx
6401898b:	push   ecx
6401898c:	push   esi
6401898d:	call   0x640177b3
64018992:	mov    esi,eax
64018994:	test   esi,esi
64018996:	je     0x64018ae2
6401899c:	mov    edx,DWORD PTR [esi+0x5c]
6401899f:	mov    eax,ds:0x640379e4
640189a4:	push   edi
640189a5:	mov    edi,DWORD PTR [ebp+0x8]
640189a8:	mov    ecx,edx
640189aa:	push   ebx
640189ab:	cmp    DWORD PTR [ecx],edi
640189ad:	je     0x640189bd
640189af:	mov    ebx,eax
640189b1:	imul   ebx,ebx,0xc
640189b4:	add    ecx,0xc
640189b7:	add    ebx,edx
640189b9:	cmp    ecx,ebx
640189bb:	jb     0x640189ab
640189bd:	imul   eax,eax,0xc
640189c0:	add    eax,edx
640189c2:	cmp    ecx,eax
640189c4:	jae    0x640189ce
640189c6:	cmp    DWORD PTR [ecx],edi
640189c8:	jne    0x640189ce
640189ca:	mov    eax,ecx
640189cc:	jmp    0x640189d0
640189ce:	xor    eax,eax
640189d0:	test   eax,eax
640189d2:	je     0x640189de
640189d4:	mov    ebx,DWORD PTR [eax+0x8]
640189d7:	test   ebx,ebx
640189d9:	mov    DWORD PTR [ebp-0x4],ebx
640189dc:	jne    0x640189e5
640189de:	xor    eax,eax
640189e0:	jmp    0x64018ae0
640189e5:	cmp    ebx,0x5
640189e8:	jne    0x640189f6
640189ea:	and    DWORD PTR [eax+0x8],0x0
640189ee:	xor    eax,eax
640189f0:	inc    eax
640189f1:	jmp    0x64018ae0
640189f6:	cmp    ebx,0x1
640189f9:	je     0x64018add
640189ff:	mov    ecx,DWORD PTR [esi+0x60]
64018a02:	mov    DWORD PTR [ebp-0x8],ecx
64018a05:	mov    ecx,DWORD PTR [ebp+0xc]
64018a08:	mov    DWORD PTR [esi+0x60],ecx
64018a0b:	mov    ecx,DWORD PTR [eax+0x4]
64018a0e:	cmp    ecx,0x8
64018a11:	jne    0x64018acf
64018a17:	mov    ecx,DWORD PTR ds:0x640379d8
64018a1d:	mov    edi,DWORD PTR ds:0x640379dc
64018a23:	mov    edx,ecx
64018a25:	add    edi,ecx
64018a27:	cmp    edx,edi
64018a29:	jge    0x64018a4f
64018a2b:	imul   ecx,ecx,0xc
64018a2e:	mov    edi,DWORD PTR [esi+0x5c]
64018a31:	and    DWORD PTR [ecx+edi*1+0x8],0x0
64018a36:	mov    edi,DWORD PTR ds:0x640379d8
64018a3c:	mov    ebx,DWORD PTR ds:0x640379dc
64018a42:	inc    edx
64018a43:	add    ebx,edi
64018a45:	add    ecx,0xc
64018a48:	cmp    edx,ebx
64018a4a:	jl     0x64018a2e
64018a4c:	mov    ebx,DWORD PTR [ebp-0x4]
64018a4f:	mov    eax,DWORD PTR [eax]
64018a51:	cmp    eax,0xc000008e
64018a56:	mov    edi,DWORD PTR [esi+0x64]
64018a59:	jne    0x64018a64
64018a5b:	mov    DWORD PTR [esi+0x64],0x83
64018a62:	jmp    0x64018ac2
64018a64:	cmp    eax,0xc0000090
64018a69:	jne    0x64018a74
64018a6b:	mov    DWORD PTR [esi+0x64],0x81
64018a72:	jmp    0x64018ac2
64018a74:	cmp    eax,0xc0000091
64018a79:	jne    0x64018a84
64018a7b:	mov    DWORD PTR [esi+0x64],0x84
64018a82:	jmp    0x64018ac2
64018a84:	cmp    eax,0xc0000093
64018a89:	jne    0x64018a94
64018a8b:	mov    DWORD PTR [esi+0x64],0x85
64018a92:	jmp    0x64018ac2
64018a94:	cmp    eax,0xc000008d
64018a99:	jne    0x64018aa4
64018a9b:	mov    DWORD PTR [esi+0x64],0x82
64018aa2:	jmp    0x64018ac2
64018aa4:	cmp    eax,0xc000008f
64018aa9:	jne    0x64018ab4
64018aab:	mov    DWORD PTR [esi+0x64],0x86
64018ab2:	jmp    0x64018ac2
64018ab4:	cmp    eax,0xc0000092
64018ab9:	jne    0x64018ac2
64018abb:	mov    DWORD PTR [esi+0x64],0x8a
64018ac2:	push   DWORD PTR [esi+0x64]
64018ac5:	push   0x8
64018ac7:	call   ebx
64018ac9:	pop    ecx
64018aca:	mov    DWORD PTR [esi+0x64],edi
64018acd:	jmp    0x64018ad6
64018acf:	and    DWORD PTR [eax+0x8],0x0
64018ad3:	push   ecx
64018ad4:	call   ebx
64018ad6:	mov    eax,DWORD PTR [ebp-0x8]
64018ad9:	pop    ecx
64018ada:	mov    DWORD PTR [esi+0x60],eax
64018add:	or     eax,0xffffffff
64018ae0:	pop    ebx
64018ae1:	pop    edi
64018ae2:	pop    esi
64018ae3:	leave  
64018ae4:	ret    
64018ae5:	mov    eax,0xe06d7363
64018aea:	cmp    DWORD PTR [esp+0x4],eax
64018aee:	jne    0x64018afd
64018af0:	push   DWORD PTR [esp+0x8]
64018af4:	push   eax
64018af5:	call   0x64018987
64018afa:	pop    ecx
64018afb:	pop    ecx
64018afc:	ret    
64018afd:	xor    eax,eax
64018aff:	ret    
64018b00:	push   ebp
64018b01:	mov    ebp,esp
64018b03:	sub    esp,0x10
64018b06:	mov    eax,ds:0x64037644
64018b0b:	and    DWORD PTR [ebp-0x8],0x0
64018b0f:	and    DWORD PTR [ebp-0x4],0x0
64018b13:	push   ebx
64018b14:	push   edi
64018b15:	mov    edi,0xbb40e64e
64018b1a:	cmp    eax,edi
64018b1c:	mov    ebx,0xffff0000
64018b21:	je     0x64018b30
64018b23:	test   ebx,eax
64018b25:	je     0x64018b30
64018b27:	not    eax
64018b29:	mov    ds:0x64037648,eax
64018b2e:	jmp    0x64018b90
64018b30:	push   esi
64018b31:	lea    eax,[ebp-0x8]
64018b34:	push   eax
64018b35:	call   DWORD PTR ds:0x6402412c
64018b3b:	mov    esi,DWORD PTR [ebp-0x4]
64018b3e:	xor    esi,DWORD PTR [ebp-0x8]
64018b41:	call   DWORD PTR ds:0x64024038
64018b47:	xor    esi,eax
64018b49:	call   DWORD PTR ds:0x640240bc
64018b4f:	xor    esi,eax
64018b51:	call   DWORD PTR ds:0x640240f8
64018b57:	xor    esi,eax
64018b59:	lea    eax,[ebp-0x10]
64018b5c:	push   eax
64018b5d:	call   DWORD PTR ds:0x64024128
64018b63:	mov    eax,DWORD PTR [ebp-0xc]
64018b66:	xor    eax,DWORD PTR [ebp-0x10]
64018b69:	xor    esi,eax
64018b6b:	cmp    esi,edi
64018b6d:	jne    0x64018b76
64018b6f:	mov    esi,0xbb40e64f
64018b74:	jmp    0x64018b81
64018b76:	test   ebx,esi
64018b78:	jne    0x64018b81
64018b7a:	mov    eax,esi
64018b7c:	shl    eax,0x10
64018b7f:	or     esi,eax
64018b81:	mov    DWORD PTR ds:0x64037644,esi
64018b87:	not    esi
64018b89:	mov    DWORD PTR ds:0x64037648,esi
64018b8f:	pop    esi
64018b90:	pop    edi
64018b91:	pop    ebx
64018b92:	leave  
64018b93:	ret    
64018b94:	sub    eax,0x3a4
64018b99:	je     0x64018bbd
64018b9b:	sub    eax,0x4
64018b9e:	je     0x64018bb7
64018ba0:	sub    eax,0xd
64018ba3:	je     0x64018bb1
64018ba5:	dec    eax
64018ba6:	je     0x64018bab
64018ba8:	xor    eax,eax
64018baa:	ret    
64018bab:	mov    eax,0x404
64018bb0:	ret    
64018bb1:	mov    eax,0x412
64018bb6:	ret    
64018bb7:	mov    eax,0x804
64018bbc:	ret    
64018bbd:	mov    eax,0x411
64018bc2:	ret    
64018bc3:	push   ebx
64018bc4:	push   ebp
64018bc5:	push   esi
64018bc6:	push   edi
64018bc7:	mov    ebp,0x101
64018bcc:	mov    esi,eax
64018bce:	push   ebp
64018bcf:	xor    edi,edi
64018bd1:	lea    ebx,[esi+0x1c]
64018bd4:	push   edi
64018bd5:	push   ebx
64018bd6:	call   0x64015160
64018bdb:	mov    DWORD PTR [esi+0x4],edi
64018bde:	mov    DWORD PTR [esi+0x8],edi
64018be1:	mov    DWORD PTR [esi+0xc],edi
64018be4:	xor    eax,eax
64018be6:	lea    edi,[esi+0x10]
64018be9:	stos   DWORD PTR es:[edi],eax
64018bea:	stos   DWORD PTR es:[edi],eax
64018beb:	stos   DWORD PTR es:[edi],eax
64018bec:	mov    eax,0x640379e8
64018bf1:	add    esp,0xc
64018bf4:	sub    eax,esi
64018bf6:	mov    cl,BYTE PTR [eax+ebx*1]
64018bf9:	mov    BYTE PTR [ebx],cl
64018bfb:	inc    ebx
64018bfc:	dec    ebp
64018bfd:	jne    0x64018bf6
64018bff:	lea    ecx,[esi+0x11d]
64018c05:	mov    esi,0x100
64018c0a:	mov    dl,BYTE PTR [ecx+eax*1]
64018c0d:	mov    BYTE PTR [ecx],dl
64018c0f:	inc    ecx
64018c10:	dec    esi
64018c11:	jne    0x64018c0a
64018c13:	pop    edi
64018c14:	pop    esi
64018c15:	pop    ebp
64018c16:	pop    ebx
64018c17:	ret    
64018c18:	push   ebp
64018c19:	lea    ebp,[esp-0x49c]
64018c20:	sub    esp,0x51c
64018c26:	mov    eax,ds:0x64037644
64018c2b:	xor    eax,ebp
64018c2d:	mov    DWORD PTR [ebp+0x498],eax
64018c33:	push   ebx
64018c34:	push   edi
64018c35:	lea    eax,[ebp-0x7c]
64018c38:	push   eax
64018c39:	push   DWORD PTR [esi+0x4]
64018c3c:	call   DWORD PTR ds:0x640241b4
64018c42:	test   eax,eax
64018c44:	mov    edi,0x100
64018c49:	je     0x64018d3e
64018c4f:	xor    eax,eax
64018c51:	mov    BYTE PTR [ebp+eax*1+0x398],al
64018c58:	inc    eax
64018c59:	cmp    eax,edi
64018c5b:	jb     0x64018c51
64018c5d:	mov    al,BYTE PTR [ebp-0x76]
64018c60:	test   al,al
64018c62:	mov    BYTE PTR [ebp+0x398],0x20
64018c69:	je     0x64018c96
64018c6b:	lea    ebx,[ebp-0x75]
64018c6e:	movzx  ecx,al
64018c71:	movzx  eax,BYTE PTR [ebx]
64018c74:	cmp    ecx,eax
64018c76:	ja     0x64018c8e
64018c78:	sub    eax,ecx
64018c7a:	inc    eax
64018c7b:	push   eax
64018c7c:	lea    edx,[ebp+ecx*1+0x398]
64018c83:	push   0x20
64018c85:	push   edx
64018c86:	call   0x64015160
64018c8b:	add    esp,0xc
64018c8e:	inc    ebx
64018c8f:	mov    al,BYTE PTR [ebx]
64018c91:	inc    ebx
64018c92:	test   al,al
64018c94:	jne    0x64018c6e
64018c96:	push   0x0
64018c98:	push   DWORD PTR [esi+0xc]
64018c9b:	lea    eax,[ebp-0x68]
64018c9e:	push   DWORD PTR [esi+0x4]
64018ca1:	push   eax
64018ca2:	push   edi
64018ca3:	lea    eax,[ebp+0x398]
64018ca9:	push   eax
64018caa:	push   0x1
64018cac:	push   0x0
64018cae:	call   0x6401dfd1
64018cb3:	xor    ebx,ebx
64018cb5:	push   ebx
64018cb6:	push   DWORD PTR [esi+0x4]
64018cb9:	lea    eax,[ebp+0x298]
64018cbf:	push   edi
64018cc0:	push   eax
64018cc1:	push   edi
64018cc2:	lea    eax,[ebp+0x398]
64018cc8:	push   eax
64018cc9:	push   edi
64018cca:	push   DWORD PTR [esi+0xc]
64018ccd:	push   ebx
64018cce:	call   0x64015cec
64018cd3:	add    esp,0x44
64018cd6:	push   ebx
64018cd7:	push   DWORD PTR [esi+0x4]
64018cda:	lea    eax,[ebp+0x198]
64018ce0:	push   edi
64018ce1:	push   eax
64018ce2:	push   edi
64018ce3:	lea    eax,[ebp+0x398]
64018ce9:	push   eax
64018cea:	push   0x200
64018cef:	push   DWORD PTR [esi+0xc]
64018cf2:	push   ebx
64018cf3:	call   0x64015cec
64018cf8:	add    esp,0x24
64018cfb:	xor    eax,eax
64018cfd:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64018d02:	test   cl,0x1
64018d05:	je     0x64018d15
64018d07:	or     BYTE PTR [esi+eax*1+0x1d],0x10
64018d0c:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64018d13:	jmp    0x64018d26
64018d15:	test   cl,0x2
64018d18:	je     0x64018d2f
64018d1a:	or     BYTE PTR [esi+eax*1+0x1d],0x20
64018d1f:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64018d26:	mov    BYTE PTR [esi+eax*1+0x11d],cl
64018d2d:	jmp    0x64018d37
64018d2f:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64018d37:	inc    eax
64018d38:	cmp    eax,edi
64018d3a:	jb     0x64018cfd
64018d3c:	jmp    0x64018d8b
64018d3e:	lea    eax,[esi+0x11d]
64018d44:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64018d4b:	xor    ecx,ecx
64018d4d:	sub    DWORD PTR [ebp-0x80],eax
64018d50:	mov    edx,DWORD PTR [ebp-0x80]
64018d53:	lea    eax,[esi+ecx*1+0x11d]
64018d5a:	add    edx,eax
64018d5c:	lea    ebx,[edx+0x20]
64018d5f:	cmp    ebx,0x19
64018d62:	ja     0x64018d70
64018d64:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64018d69:	mov    dl,cl
64018d6b:	add    dl,0x20
64018d6e:	jmp    0x64018d7f
64018d70:	cmp    edx,0x19
64018d73:	ja     0x64018d83
64018d75:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64018d7a:	mov    dl,cl
64018d7c:	sub    dl,0x20
64018d7f:	mov    BYTE PTR [eax],dl
64018d81:	jmp    0x64018d86
64018d83:	mov    BYTE PTR [eax],0x0
64018d86:	inc    ecx
64018d87:	cmp    ecx,edi
64018d89:	jb     0x64018d50
64018d8b:	mov    ecx,DWORD PTR [ebp+0x498]
64018d91:	pop    edi
64018d92:	xor    ecx,ebp
64018d94:	pop    ebx
64018d95:	call   0x64013d06
64018d9a:	add    ebp,0x49c
64018da0:	leave  
64018da1:	ret    
64018da2:	push   0xc
64018da4:	push   0x6402ba20
64018da9:	call   0x64015f14
64018dae:	call   0x6401782a
64018db3:	mov    edi,eax
64018db5:	mov    eax,ds:0x64037f08
64018dba:	test   DWORD PTR [edi+0x70],eax
64018dbd:	je     0x64018ddc
64018dbf:	cmp    DWORD PTR [edi+0x6c],0x0
64018dc3:	je     0x64018ddc
64018dc5:	mov    esi,DWORD PTR [edi+0x68]
64018dc8:	test   esi,esi
64018dca:	jne    0x64018dd4
64018dcc:	push   0x20
64018dce:	call   0x64017e16
64018dd3:	pop    ecx
64018dd4:	mov    eax,esi
64018dd6:	call   0x64015f59
64018ddb:	ret    
64018ddc:	push   0xd
64018dde:	call   0x6401af0e
64018de3:	pop    ecx
64018de4:	and    DWORD PTR [ebp-0x4],0x0
64018de8:	mov    esi,DWORD PTR [edi+0x68]
64018deb:	mov    DWORD PTR [ebp-0x1c],esi
64018dee:	cmp    esi,DWORD PTR ds:0x64037e10
64018df4:	je     0x64018e2c
64018df6:	test   esi,esi
64018df8:	je     0x64018e14
64018dfa:	push   esi
64018dfb:	call   DWORD PTR ds:0x64024074
64018e01:	test   eax,eax
64018e03:	jne    0x64018e14
64018e05:	cmp    esi,0x640379e8
64018e0b:	je     0x64018e14
64018e0d:	push   esi
64018e0e:	call   0x6401475a
64018e13:	pop    ecx
64018e14:	mov    eax,ds:0x64037e10
64018e19:	mov    DWORD PTR [edi+0x68],eax
64018e1c:	mov    esi,DWORD PTR ds:0x64037e10
64018e22:	mov    DWORD PTR [ebp-0x1c],esi
64018e25:	push   esi
64018e26:	call   DWORD PTR ds:0x6402402c
64018e2c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018e33:	call   0x64018e3d
64018e38:	jmp    0x64018dc8
64018e3a:	mov    esi,DWORD PTR [ebp-0x1c]
64018e3d:	push   0xd
64018e3f:	call   0x6401ae36
64018e44:	pop    ecx
64018e45:	ret    
64018e46:	push   ebp
64018e47:	mov    ebp,esp
64018e49:	sub    esp,0x10
64018e4c:	push   ebx
64018e4d:	xor    ebx,ebx
64018e4f:	push   ebx
64018e50:	lea    ecx,[ebp-0x10]
64018e53:	call   0x64014325
64018e58:	cmp    esi,0xfffffffe
64018e5b:	mov    DWORD PTR ds:0x64039358,ebx
64018e61:	jne    0x64018e81
64018e63:	mov    DWORD PTR ds:0x64039358,0x1
64018e6d:	call   DWORD PTR ds:0x64024130
64018e73:	cmp    BYTE PTR [ebp-0x4],bl
64018e76:	je     0x64018ebd
64018e78:	mov    ecx,DWORD PTR [ebp-0x8]
64018e7b:	and    DWORD PTR [ecx+0x70],0xfffffffd
64018e7f:	jmp    0x64018ebd
64018e81:	cmp    esi,0xfffffffd
64018e84:	jne    0x64018e98
64018e86:	mov    DWORD PTR ds:0x64039358,0x1
64018e90:	call   DWORD PTR ds:0x64024164
64018e96:	jmp    0x64018e73
64018e98:	cmp    esi,0xfffffffc
64018e9b:	jne    0x64018eaf
64018e9d:	mov    eax,DWORD PTR [ebp-0x10]
64018ea0:	mov    eax,DWORD PTR [eax+0x4]
64018ea3:	mov    DWORD PTR ds:0x64039358,0x1
64018ead:	jmp    0x64018e73
64018eaf:	cmp    BYTE PTR [ebp-0x4],bl
64018eb2:	je     0x64018ebb
64018eb4:	mov    eax,DWORD PTR [ebp-0x8]
64018eb7:	and    DWORD PTR [eax+0x70],0xfffffffd
64018ebb:	mov    eax,esi
64018ebd:	pop    ebx
64018ebe:	leave  
64018ebf:	ret    
64018ec0:	push   ebp
64018ec1:	mov    ebp,esp
64018ec3:	sub    esp,0x20
64018ec6:	mov    eax,ds:0x64037644
64018ecb:	xor    eax,ebp
64018ecd:	mov    DWORD PTR [ebp-0x4],eax
64018ed0:	push   ebx
64018ed1:	mov    ebx,DWORD PTR [ebp+0xc]
64018ed4:	push   esi
64018ed5:	mov    esi,DWORD PTR [ebp+0x8]
64018ed8:	push   edi
64018ed9:	call   0x64018e46
64018ede:	mov    edi,eax
64018ee0:	xor    esi,esi
64018ee2:	cmp    edi,esi
64018ee4:	mov    DWORD PTR [ebp+0x8],edi
64018ee7:	jne    0x64018ef7
64018ee9:	mov    eax,ebx
64018eeb:	call   0x64018bc3
64018ef0:	xor    eax,eax
64018ef2:	jmp    0x6401908a
64018ef7:	mov    DWORD PTR [ebp-0x1c],esi
64018efa:	xor    eax,eax
64018efc:	cmp    DWORD PTR [eax+0x64037e18],edi
64018f02:	je     0x64018f99
64018f08:	inc    DWORD PTR [ebp-0x1c]
64018f0b:	add    eax,0x30
64018f0e:	cmp    eax,0xf0
64018f13:	jb     0x64018efc
64018f15:	cmp    edi,0xfde8
64018f1b:	je     0x64019087
64018f21:	cmp    edi,0xfde9
64018f27:	je     0x64019087
64018f2d:	movzx  eax,di
64018f30:	push   eax
64018f31:	call   DWORD PTR ds:0x64024134
64018f37:	test   eax,eax
64018f39:	je     0x64019087
64018f3f:	lea    eax,[ebp-0x18]
64018f42:	push   eax
64018f43:	push   edi
64018f44:	call   DWORD PTR ds:0x640241b4
64018f4a:	test   eax,eax
64018f4c:	je     0x6401907b
64018f52:	push   0x101
64018f57:	lea    eax,[ebx+0x1c]
64018f5a:	push   esi
64018f5b:	push   eax
64018f5c:	call   0x64015160
64018f61:	xor    edx,edx
64018f63:	inc    edx
64018f64:	add    esp,0xc
64018f67:	cmp    DWORD PTR [ebp-0x18],edx
64018f6a:	mov    DWORD PTR [ebx+0x4],edi
64018f6d:	mov    DWORD PTR [ebx+0xc],esi
64018f70:	jbe    0x6401906e
64018f76:	cmp    BYTE PTR [ebp-0x12],0x0
64018f7a:	je     0x6401904f
64018f80:	lea    esi,[ebp-0x11]
64018f83:	mov    cl,BYTE PTR [esi]
64018f85:	test   cl,cl
64018f87:	je     0x6401904f
64018f8d:	movzx  eax,BYTE PTR [esi-0x1]
64018f91:	movzx  ecx,cl
64018f94:	jmp    0x6401903f
64018f99:	push   0x101
64018f9e:	lea    eax,[ebx+0x1c]
64018fa1:	push   esi
64018fa2:	push   eax
64018fa3:	call   0x64015160
64018fa8:	mov    ecx,DWORD PTR [ebp-0x1c]
64018fab:	add    esp,0xc
64018fae:	imul   ecx,ecx,0x30
64018fb1:	mov    DWORD PTR [ebp-0x20],esi
64018fb4:	lea    esi,[ecx+0x64037e28]
64018fba:	mov    DWORD PTR [ebp-0x1c],esi
64018fbd:	jmp    0x64018fe9
64018fbf:	mov    al,BYTE PTR [esi+0x1]
64018fc2:	test   al,al
64018fc4:	je     0x64018fee
64018fc6:	movzx  edi,BYTE PTR [esi]
64018fc9:	movzx  eax,al
64018fcc:	jmp    0x64018fe0
64018fce:	mov    eax,DWORD PTR [ebp-0x20]
64018fd1:	mov    al,BYTE PTR [eax+0x64037e14]
64018fd7:	or     BYTE PTR [ebx+edi*1+0x1d],al
64018fdb:	movzx  eax,BYTE PTR [esi+0x1]
64018fdf:	inc    edi
64018fe0:	cmp    edi,eax
64018fe2:	jbe    0x64018fce
64018fe4:	mov    edi,DWORD PTR [ebp+0x8]
64018fe7:	inc    esi
64018fe8:	inc    esi
64018fe9:	cmp    BYTE PTR [esi],0x0
64018fec:	jne    0x64018fbf
64018fee:	mov    esi,DWORD PTR [ebp-0x1c]
64018ff1:	inc    DWORD PTR [ebp-0x20]
64018ff4:	add    esi,0x8
64018ff7:	cmp    DWORD PTR [ebp-0x20],0x4
64018ffb:	mov    DWORD PTR [ebp-0x1c],esi
64018ffe:	jb     0x64018fe9
64019000:	mov    eax,edi
64019002:	mov    DWORD PTR [ebx+0x4],edi
64019005:	mov    DWORD PTR [ebx+0x8],0x1
6401900c:	call   0x64018b94
64019011:	push   0x6
64019013:	mov    DWORD PTR [ebx+0xc],eax
64019016:	lea    eax,[ebx+0x10]
64019019:	lea    ecx,[ecx+0x64037e1c]
6401901f:	pop    edx
64019020:	mov    si,WORD PTR [ecx]
64019023:	inc    ecx
64019024:	mov    WORD PTR [eax],si
64019027:	inc    ecx
64019028:	inc    eax
64019029:	inc    eax
6401902a:	dec    edx
6401902b:	jne    0x64019020
6401902d:	mov    esi,ebx
6401902f:	call   0x64018c18
64019034:	jmp    0x64018ef0
64019039:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
6401903e:	inc    eax
6401903f:	cmp    eax,ecx
64019041:	jbe    0x64019039
64019043:	inc    esi
64019044:	inc    esi
64019045:	cmp    BYTE PTR [esi-0x1],0x0
64019049:	jne    0x64018f83
6401904f:	lea    eax,[ebx+0x1e]
64019052:	mov    ecx,0xfe
64019057:	or     BYTE PTR [eax],0x8
6401905a:	inc    eax
6401905b:	dec    ecx
6401905c:	jne    0x64019057
6401905e:	mov    eax,DWORD PTR [ebx+0x4]
64019061:	call   0x64018b94
64019066:	mov    DWORD PTR [ebx+0xc],eax
64019069:	mov    DWORD PTR [ebx+0x8],edx
6401906c:	jmp    0x64019071
6401906e:	mov    DWORD PTR [ebx+0x8],esi
64019071:	xor    eax,eax
64019073:	lea    edi,[ebx+0x10]
64019076:	stos   DWORD PTR es:[edi],eax
64019077:	stos   DWORD PTR es:[edi],eax
64019078:	stos   DWORD PTR es:[edi],eax
64019079:	jmp    0x6401902d
6401907b:	cmp    DWORD PTR ds:0x64039358,esi
64019081:	jne    0x64018ee9
64019087:	or     eax,0xffffffff
6401908a:	mov    ecx,DWORD PTR [ebp-0x4]
6401908d:	pop    edi
6401908e:	pop    esi
6401908f:	xor    ecx,ebp
64019091:	pop    ebx
64019092:	call   0x64013d06
64019097:	leave  
64019098:	ret    
64019099:	push   0x14
6401909b:	push   0x6402ba40
640190a0:	call   0x64015f14
640190a5:	or     DWORD PTR [ebp-0x20],0xffffffff
640190a9:	call   0x6401782a
640190ae:	mov    edi,eax
640190b0:	mov    DWORD PTR [ebp-0x24],edi
640190b3:	call   0x64018da2
640190b8:	mov    ebx,DWORD PTR [edi+0x68]
640190bb:	mov    esi,DWORD PTR [ebp+0x8]
640190be:	call   0x64018e46
640190c3:	mov    DWORD PTR [ebp+0x8],eax
640190c6:	cmp    eax,DWORD PTR [ebx+0x4]
640190c9:	je     0x64019226
640190cf:	push   0x220
640190d4:	call   0x64015d2f
640190d9:	pop    ecx
640190da:	mov    ebx,eax
640190dc:	test   ebx,ebx
640190de:	je     0x6401922a
640190e4:	mov    ecx,0x88
640190e9:	mov    esi,DWORD PTR [edi+0x68]
640190ec:	mov    edi,ebx
640190ee:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640190f0:	and    DWORD PTR [ebx],0x0
640190f3:	push   ebx
640190f4:	push   DWORD PTR [ebp+0x8]
640190f7:	call   0x64018ec0
640190fc:	pop    ecx
640190fd:	pop    ecx
640190fe:	mov    DWORD PTR [ebp-0x20],eax
64019101:	test   eax,eax
64019103:	jne    0x64019205
64019109:	mov    esi,DWORD PTR [ebp-0x24]
6401910c:	push   DWORD PTR [esi+0x68]
6401910f:	call   DWORD PTR ds:0x64024074
64019115:	test   eax,eax
64019117:	jne    0x6401912a
64019119:	mov    eax,DWORD PTR [esi+0x68]
6401911c:	cmp    eax,0x640379e8
64019121:	je     0x6401912a
64019123:	push   eax
64019124:	call   0x6401475a
64019129:	pop    ecx
6401912a:	mov    DWORD PTR [esi+0x68],ebx
6401912d:	push   ebx
6401912e:	mov    edi,DWORD PTR ds:0x6402402c
64019134:	call   edi
64019136:	test   BYTE PTR [esi+0x70],0x2
6401913a:	jne    0x6401922a
64019140:	test   BYTE PTR ds:0x64037f08,0x1
64019147:	jne    0x6401922a
6401914d:	push   0xd
6401914f:	call   0x6401af0e
64019154:	pop    ecx
64019155:	and    DWORD PTR [ebp-0x4],0x0
64019159:	mov    eax,DWORD PTR [ebx+0x4]
6401915c:	mov    ds:0x64039368,eax
64019161:	mov    eax,DWORD PTR [ebx+0x8]
64019164:	mov    ds:0x6403936c,eax
64019169:	mov    eax,DWORD PTR [ebx+0xc]
6401916c:	mov    ds:0x64039370,eax
64019171:	xor    eax,eax
64019173:	mov    DWORD PTR [ebp-0x1c],eax
64019176:	cmp    eax,0x5
64019179:	jge    0x6401918b
6401917b:	mov    cx,WORD PTR [ebx+eax*2+0x10]
64019180:	mov    WORD PTR [eax*2+0x6403935c],cx
64019188:	inc    eax
64019189:	jmp    0x64019173
6401918b:	xor    eax,eax
6401918d:	mov    DWORD PTR [ebp-0x1c],eax
64019190:	cmp    eax,0x101
64019195:	jge    0x640191a4
64019197:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
6401919b:	mov    BYTE PTR [eax+0x64037c08],cl
640191a1:	inc    eax
640191a2:	jmp    0x6401918d
640191a4:	xor    eax,eax
640191a6:	mov    DWORD PTR [ebp-0x1c],eax
640191a9:	cmp    eax,0x100
640191ae:	jge    0x640191c0
640191b0:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
640191b7:	mov    BYTE PTR [eax+0x64037d10],cl
640191bd:	inc    eax
640191be:	jmp    0x640191a6
640191c0:	push   DWORD PTR ds:0x64037e10
640191c6:	call   DWORD PTR ds:0x64024074
640191cc:	test   eax,eax
640191ce:	jne    0x640191e3
640191d0:	mov    eax,ds:0x64037e10
640191d5:	cmp    eax,0x640379e8
640191da:	je     0x640191e3
640191dc:	push   eax
640191dd:	call   0x6401475a
640191e2:	pop    ecx
640191e3:	mov    DWORD PTR ds:0x64037e10,ebx
640191e9:	push   ebx
640191ea:	call   edi
640191ec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640191f3:	call   0x640191fa
640191f8:	jmp    0x6401922a
640191fa:	push   0xd
640191fc:	call   0x6401ae36
64019201:	pop    ecx
64019202:	ret    
64019203:	jmp    0x6401922a
64019205:	cmp    eax,0xffffffff
64019208:	jne    0x6401922a
6401920a:	cmp    ebx,0x640379e8
64019210:	je     0x64019219
64019212:	push   ebx
64019213:	call   0x6401475a
64019218:	pop    ecx
64019219:	call   0x640164c3
6401921e:	mov    DWORD PTR [eax],0x16
64019224:	jmp    0x6401922a
64019226:	and    DWORD PTR [ebp-0x20],0x0
6401922a:	mov    eax,DWORD PTR [ebp-0x20]
6401922d:	call   0x64015f59
64019232:	ret    
64019233:	cmp    DWORD PTR ds:0x6403ac8c,0x0
6401923a:	jne    0x6401924e
6401923c:	push   0xfffffffd
6401923e:	call   0x64019099
64019243:	pop    ecx
64019244:	mov    DWORD PTR ds:0x6403ac8c,0x1
6401924e:	xor    eax,eax
64019250:	ret    
64019251:	mov    ecx,DWORD PTR [esp+0x4]
64019255:	push   ebx
64019256:	push   esi
64019257:	push   edi
64019258:	xor    edi,edi
6401925a:	cmp    ecx,edi
6401925c:	je     0x64019266
6401925e:	mov    ebx,DWORD PTR [esp+0x14]
64019262:	cmp    ebx,edi
64019264:	ja     0x64019281
64019266:	call   0x640164c3
6401926b:	push   0x16
6401926d:	pop    esi
6401926e:	mov    DWORD PTR [eax],esi
64019270:	push   edi
64019271:	push   edi
64019272:	push   edi
64019273:	push   edi
64019274:	push   edi
64019275:	call   0x64013e52
6401927a:	add    esp,0x14
6401927d:	mov    eax,esi
6401927f:	jmp    0x640192b9
64019281:	mov    esi,DWORD PTR [esp+0x18]
64019285:	cmp    esi,edi
64019287:	jne    0x6401928e
64019289:	mov    WORD PTR [ecx],di
6401928c:	jmp    0x64019266
6401928e:	mov    edx,ecx
64019290:	movzx  eax,WORD PTR [esi]
64019293:	mov    WORD PTR [edx],ax
64019296:	inc    edx
64019297:	inc    edx
64019298:	inc    esi
64019299:	inc    esi
6401929a:	cmp    ax,di
6401929d:	je     0x640192a2
6401929f:	dec    ebx
640192a0:	jne    0x64019290
640192a2:	cmp    ebx,edi
640192a4:	jne    0x640192b7
640192a6:	mov    WORD PTR [ecx],di
640192a9:	call   0x640164c3
640192ae:	push   0x22
640192b0:	pop    ecx
640192b1:	mov    DWORD PTR [eax],ecx
640192b3:	mov    esi,ecx
640192b5:	jmp    0x64019270
640192b7:	xor    eax,eax
640192b9:	pop    edi
640192ba:	pop    esi
640192bb:	pop    ebx
640192bc:	ret    
640192bd:	push   ebp
640192be:	mov    ebp,esp
640192c0:	sub    esp,0x10
640192c3:	mov    eax,ds:0x64037644
640192c8:	xor    eax,ebp
640192ca:	mov    DWORD PTR [ebp-0x4],eax
640192cd:	push   ebx
640192ce:	push   esi
640192cf:	mov    esi,DWORD PTR ds:0x640241b0
640192d5:	xor    ebx,ebx
640192d7:	cmp    DWORD PTR ds:0x64039394,ebx
640192dd:	push   edi
640192de:	mov    edi,ecx
640192e0:	jne    0x64019318
640192e2:	push   ebx
640192e3:	push   ebx
640192e4:	push   0x1
640192e6:	push   0x64029960
640192eb:	push   0x100
640192f0:	push   ebx
640192f1:	call   esi
640192f3:	test   eax,eax
640192f5:	je     0x64019303
640192f7:	mov    DWORD PTR ds:0x64039394,0x1
64019301:	jmp    0x64019318
64019303:	call   DWORD PTR ds:0x64024064
64019309:	cmp    eax,0x78
6401930c:	jne    0x64019318
6401930e:	mov    DWORD PTR ds:0x64039394,0x2
64019318:	cmp    DWORD PTR [ebp+0x14],ebx
6401931b:	jle    0x6401933a
6401931d:	mov    ecx,DWORD PTR [ebp+0x14]
64019320:	mov    eax,DWORD PTR [ebp+0x10]
64019323:	dec    ecx
64019324:	cmp    WORD PTR [eax],bx
64019327:	je     0x64019332
64019329:	inc    eax
6401932a:	inc    eax
6401932b:	cmp    ecx,ebx
6401932d:	jne    0x64019323
6401932f:	or     ecx,0xffffffff
64019332:	or     eax,0xffffffff
64019335:	sub    eax,ecx
64019337:	add    DWORD PTR [ebp+0x14],eax
6401933a:	mov    eax,ds:0x64039394
6401933f:	cmp    eax,0x1
64019342:	jne    0x6401935d
64019344:	push   DWORD PTR [ebp+0x1c]
64019347:	push   DWORD PTR [ebp+0x18]
6401934a:	push   DWORD PTR [ebp+0x14]
6401934d:	push   DWORD PTR [ebp+0x10]
64019350:	push   DWORD PTR [ebp+0xc]
64019353:	push   DWORD PTR [ebp+0x8]
64019356:	call   esi
64019358:	jmp    0x6401950c
6401935d:	cmp    eax,0x2
64019360:	je     0x64019366
64019362:	cmp    eax,ebx
64019364:	jne    0x640193b8
64019366:	cmp    DWORD PTR [ebp+0x8],ebx
64019369:	mov    DWORD PTR [ebp-0xc],ebx
6401936c:	jne    0x64019376
6401936e:	mov    eax,DWORD PTR [edi]
64019370:	mov    eax,DWORD PTR [eax+0x14]
64019373:	mov    DWORD PTR [ebp+0x8],eax
64019376:	cmp    DWORD PTR [ebp+0x20],ebx
64019379:	jne    0x64019383
6401937b:	mov    eax,DWORD PTR [edi]
6401937d:	mov    eax,DWORD PTR [eax+0x4]
64019380:	mov    DWORD PTR [ebp+0x20],eax
64019383:	push   DWORD PTR [ebp+0x8]
64019386:	call   0x6401e060
6401938b:	cmp    DWORD PTR [ebp+0x20],eax
6401938e:	pop    ecx
6401938f:	je     0x64019399
64019391:	cmp    eax,0xffffffff
64019394:	je     0x64019399
64019396:	mov    DWORD PTR [ebp+0x20],eax
64019399:	mov    esi,DWORD PTR ds:0x64024010
6401939f:	push   ebx
640193a0:	push   ebx
640193a1:	push   ebx
640193a2:	push   ebx
640193a3:	push   DWORD PTR [ebp+0x14]
640193a6:	push   DWORD PTR [ebp+0x10]
640193a9:	push   ebx
640193aa:	push   DWORD PTR [ebp+0x20]
640193ad:	call   esi
640193af:	mov    edi,eax
640193b1:	cmp    edi,ebx
640193b3:	mov    DWORD PTR [ebp-0x10],edi
640193b6:	jne    0x640193bf
640193b8:	xor    eax,eax
640193ba:	jmp    0x6401950c
640193bf:	jle    0x64019403
640193c1:	push   0xffffffe0
640193c3:	xor    edx,edx
640193c5:	pop    eax
640193c6:	div    edi
640193c8:	cmp    eax,0x1
640193cb:	jb     0x64019403
640193cd:	lea    eax,[edi+0x8]
640193d0:	cmp    eax,0x400
640193d5:	ja     0x640193ea
640193d7:	call   0x64013d20
640193dc:	mov    eax,esp
640193de:	cmp    eax,ebx
640193e0:	je     0x640193fe
640193e2:	mov    DWORD PTR [eax],0xcccc
640193e8:	jmp    0x640193fb
640193ea:	push   eax
640193eb:	call   0x640148be
640193f0:	cmp    eax,ebx
640193f2:	pop    ecx
640193f3:	je     0x640193fe
640193f5:	mov    DWORD PTR [eax],0xdddd
640193fb:	add    eax,0x8
640193fe:	mov    DWORD PTR [ebp-0x8],eax
64019401:	jmp    0x64019406
64019403:	mov    DWORD PTR [ebp-0x8],ebx
64019406:	cmp    DWORD PTR [ebp-0x8],ebx
64019409:	je     0x640193b8
6401940b:	push   ebx
6401940c:	push   ebx
6401940d:	push   edi
6401940e:	push   DWORD PTR [ebp-0x8]
64019411:	push   DWORD PTR [ebp+0x14]
64019414:	push   DWORD PTR [ebp+0x10]
64019417:	push   ebx
64019418:	push   DWORD PTR [ebp+0x20]
6401941b:	call   esi
6401941d:	test   eax,eax
6401941f:	je     0x64019500
64019425:	push   ebx
64019426:	push   ebx
64019427:	push   edi
64019428:	push   DWORD PTR [ebp-0x8]
6401942b:	mov    edi,DWORD PTR ds:0x640241ac
64019431:	push   DWORD PTR [ebp+0xc]
64019434:	push   DWORD PTR [ebp+0x8]
64019437:	call   edi
64019439:	mov    esi,eax
6401943b:	cmp    esi,ebx
6401943d:	je     0x64019500
64019443:	jle    0x64019484
64019445:	push   0xffffffe0
64019447:	xor    edx,edx
64019449:	pop    eax
6401944a:	div    esi
6401944c:	cmp    eax,0x1
6401944f:	jb     0x64019484
64019451:	lea    eax,[esi+0x8]
64019454:	cmp    eax,0x400
64019459:	ja     0x6401946e
6401945b:	call   0x64013d20
64019460:	mov    eax,esp
64019462:	cmp    eax,ebx
64019464:	je     0x64019482
64019466:	mov    DWORD PTR [eax],0xcccc
6401946c:	jmp    0x6401947f
6401946e:	push   eax
6401946f:	call   0x640148be
64019474:	cmp    eax,ebx
64019476:	pop    ecx
64019477:	je     0x64019482
64019479:	mov    DWORD PTR [eax],0xdddd
6401947f:	add    eax,0x8
64019482:	mov    ebx,eax
64019484:	test   ebx,ebx
64019486:	je     0x64019500
64019488:	push   esi
64019489:	push   ebx
6401948a:	push   DWORD PTR [ebp-0x10]
6401948d:	push   DWORD PTR [ebp-0x8]
64019490:	push   DWORD PTR [ebp+0xc]
64019493:	push   DWORD PTR [ebp+0x8]
64019496:	call   edi
64019498:	test   eax,eax
6401949a:	je     0x640194f9
6401949c:	test   WORD PTR [ebp+0xc],0x400
640194a2:	je     0x640194d8
640194a4:	mov    eax,DWORD PTR [ebp+0x1c]
640194a7:	xor    edi,edi
640194a9:	cmp    eax,edi
640194ab:	mov    DWORD PTR [ebp-0xc],esi
640194ae:	je     0x640194f9
640194b0:	cmp    eax,esi
640194b2:	jg     0x640194b7
640194b4:	lea    esi,[eax-0x1]
640194b7:	push   esi
640194b8:	push   ebx
640194b9:	push   eax
640194ba:	push   DWORD PTR [ebp+0x18]
640194bd:	call   0x6401dd66
640194c2:	add    esp,0x10
640194c5:	test   eax,eax
640194c7:	je     0x640194f9
640194c9:	push   edi
640194ca:	push   edi
640194cb:	push   edi
640194cc:	push   edi
640194cd:	push   edi
640194ce:	call   0x64013d56
640194d3:	add    esp,0x14
640194d6:	jmp    0x640194f9
640194d8:	xor    eax,eax
640194da:	cmp    DWORD PTR [ebp+0x1c],eax
640194dd:	jne    0x640194e3
640194df:	push   eax
640194e0:	push   eax
640194e1:	jmp    0x640194e9
640194e3:	push   DWORD PTR [ebp+0x1c]
640194e6:	push   DWORD PTR [ebp+0x18]
640194e9:	push   esi
640194ea:	push   ebx
640194eb:	push   0x1
640194ed:	push   DWORD PTR [ebp+0x20]
640194f0:	call   DWORD PTR ds:0x64024028
640194f6:	mov    DWORD PTR [ebp-0xc],eax
640194f9:	push   ebx
640194fa:	call   0x6401430a
640194ff:	pop    ecx
64019500:	push   DWORD PTR [ebp-0x8]
64019503:	call   0x6401430a
64019508:	mov    eax,DWORD PTR [ebp-0xc]
6401950b:	pop    ecx
6401950c:	lea    esp,[ebp-0x1c]
6401950f:	pop    edi
64019510:	pop    esi
64019511:	pop    ebx
64019512:	mov    ecx,DWORD PTR [ebp-0x4]
64019515:	xor    ecx,ebp
64019517:	call   0x64013d06
6401951c:	leave  
6401951d:	ret    
6401951e:	push   ebp
6401951f:	mov    ebp,esp
64019521:	sub    esp,0x10
64019524:	push   DWORD PTR [ebp+0x8]
64019527:	lea    ecx,[ebp-0x10]
6401952a:	call   0x64014325
6401952f:	push   DWORD PTR [ebp+0x24]
64019532:	lea    ecx,[ebp-0x10]
64019535:	push   DWORD PTR [ebp+0x20]
64019538:	push   DWORD PTR [ebp+0x1c]
6401953b:	push   DWORD PTR [ebp+0x18]
6401953e:	push   DWORD PTR [ebp+0x14]
64019541:	push   DWORD PTR [ebp+0x10]
64019544:	push   DWORD PTR [ebp+0xc]
64019547:	call   0x640192bd
6401954c:	add    esp,0x1c
6401954f:	cmp    BYTE PTR [ebp-0x4],0x0
64019553:	je     0x6401955c
64019555:	mov    ecx,DWORD PTR [ebp-0x8]
64019558:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401955c:	leave  
6401955d:	ret    
6401955e:	xor    eax,eax
64019560:	cmp    DWORD PTR [esp+0x8],eax
64019564:	jbe    0x64019579
64019566:	mov    ecx,DWORD PTR [esp+0x4]
6401956a:	cmp    WORD PTR [ecx],0x0
6401956e:	je     0x64019579
64019570:	inc    eax
64019571:	inc    ecx
64019572:	inc    ecx
64019573:	cmp    eax,DWORD PTR [esp+0x8]
64019577:	jb     0x6401956a
64019579:	ret    
6401957a:	mov    eax,0x64038000
6401957f:	ret    
64019580:	mov    eax,ds:0x6403ab60
64019585:	test   eax,eax
64019587:	push   esi
64019588:	push   0x14
6401958a:	pop    esi
6401958b:	jne    0x64019594
6401958d:	mov    eax,0x200
64019592:	jmp    0x6401959a
64019594:	cmp    eax,esi
64019596:	jge    0x6401959f
64019598:	mov    eax,esi
6401959a:	mov    ds:0x6403ab60,eax
6401959f:	push   0x4
640195a1:	push   eax
640195a2:	call   0x64015d6f
640195a7:	test   eax,eax
640195a9:	pop    ecx
640195aa:	pop    ecx
640195ab:	mov    ds:0x64039b40,eax
640195b0:	jne    0x640195d0
640195b2:	push   0x4
640195b4:	push   esi
640195b5:	mov    DWORD PTR ds:0x6403ab60,esi
640195bb:	call   0x64015d6f
640195c0:	test   eax,eax
640195c2:	pop    ecx
640195c3:	pop    ecx
640195c4:	mov    ds:0x64039b40,eax
640195c9:	jne    0x640195d0
640195cb:	push   0x1a
640195cd:	pop    eax
640195ce:	pop    esi
640195cf:	ret    
640195d0:	xor    edx,edx
640195d2:	mov    ecx,0x64038000
640195d7:	jmp    0x640195de
640195d9:	mov    eax,ds:0x64039b40
640195de:	mov    DWORD PTR [edx+eax*1],ecx
640195e1:	add    ecx,0x20
640195e4:	add    edx,0x4
640195e7:	cmp    ecx,0x64038280
640195ed:	jl     0x640195d9
640195ef:	push   0xfffffffe
640195f1:	pop    esi
640195f2:	xor    edx,edx
640195f4:	mov    ecx,0x64038010
640195f9:	push   edi
640195fa:	mov    eax,edx
640195fc:	sar    eax,0x5
640195ff:	mov    eax,DWORD PTR [eax*4+0x6403ab80]
64019606:	mov    edi,edx
64019608:	and    edi,0x1f
6401960b:	shl    edi,0x6
6401960e:	mov    eax,DWORD PTR [edi+eax*1]
64019611:	cmp    eax,0xffffffff
64019614:	je     0x6401961e
64019616:	cmp    eax,esi
64019618:	je     0x6401961e
6401961a:	test   eax,eax
6401961c:	jne    0x64019620
6401961e:	mov    DWORD PTR [ecx],esi
64019620:	add    ecx,0x20
64019623:	inc    edx
64019624:	cmp    ecx,0x64038070
6401962a:	jl     0x640195fa
6401962c:	pop    edi
6401962d:	xor    eax,eax
6401962f:	pop    esi
64019630:	ret    
64019631:	call   0x64019a46
64019636:	cmp    BYTE PTR ds:0x64039238,0x0
6401963d:	je     0x64019644
6401963f:	call   0x6401e917
64019644:	push   DWORD PTR ds:0x64039b40
6401964a:	call   0x6401475a
6401964f:	pop    ecx
64019650:	ret    
64019651:	push   esi
64019652:	mov    esi,DWORD PTR [esp+0x8]
64019656:	mov    eax,0x64038000
6401965b:	cmp    esi,eax
6401965d:	jb     0x64019681
6401965f:	cmp    esi,0x64038260
64019665:	ja     0x64019681
64019667:	mov    ecx,esi
64019669:	sub    ecx,eax
6401966b:	sar    ecx,0x5
6401966e:	add    ecx,0x10
64019671:	push   ecx
64019672:	call   0x6401af0e
64019677:	or     DWORD PTR [esi+0xc],0x8000
6401967e:	pop    ecx
6401967f:	pop    esi
64019680:	ret    
64019681:	add    esi,0x20
64019684:	push   esi
64019685:	call   DWORD PTR ds:0x6402415c
6401968b:	pop    esi
6401968c:	ret    
6401968d:	mov    eax,DWORD PTR [esp+0x4]
64019691:	cmp    eax,0x14
64019694:	jge    0x640196ac
64019696:	add    eax,0x10
64019699:	push   eax
6401969a:	call   0x6401af0e
6401969f:	mov    eax,DWORD PTR [esp+0xc]
640196a3:	or     DWORD PTR [eax+0xc],0x8000
640196aa:	pop    ecx
640196ab:	ret    
640196ac:	mov    eax,DWORD PTR [esp+0x8]
640196b0:	add    eax,0x20
640196b3:	push   eax
640196b4:	call   DWORD PTR ds:0x6402415c
640196ba:	ret    
640196bb:	mov    eax,DWORD PTR [esp+0x4]
640196bf:	mov    ecx,0x64038000
640196c4:	cmp    eax,ecx
640196c6:	jb     0x640196e6
640196c8:	cmp    eax,0x64038260
640196cd:	ja     0x640196e6
640196cf:	and    DWORD PTR [eax+0xc],0xffff7fff
640196d6:	sub    eax,ecx
640196d8:	sar    eax,0x5
640196db:	add    eax,0x10
640196de:	push   eax
640196df:	call   0x6401ae36
640196e4:	pop    ecx
640196e5:	ret    
640196e6:	add    eax,0x20
640196e9:	push   eax
640196ea:	call   DWORD PTR ds:0x64024160
640196f0:	ret    
640196f1:	mov    ecx,DWORD PTR [esp+0x4]
640196f5:	cmp    ecx,0x14
640196f8:	mov    eax,DWORD PTR [esp+0x8]
640196fc:	jge    0x64019710
640196fe:	and    DWORD PTR [eax+0xc],0xffff7fff
64019705:	add    ecx,0x10
64019708:	push   ecx
64019709:	call   0x6401ae36
6401970e:	pop    ecx
6401970f:	ret    
64019710:	add    eax,0x20
64019713:	push   eax
64019714:	call   DWORD PTR ds:0x64024160
6401971a:	ret    
6401971b:	int3   
6401971c:	push   ebx
6401971d:	push   esi
6401971e:	push   edi
6401971f:	mov    edx,DWORD PTR [esp+0x10]
64019723:	mov    eax,DWORD PTR [esp+0x14]
64019727:	mov    ecx,DWORD PTR [esp+0x18]
6401972b:	push   ebp
6401972c:	push   edx
6401972d:	push   eax
6401972e:	push   ecx
6401972f:	push   ecx
64019730:	push   0x640197ac
64019735:	push   DWORD PTR fs:0x0
6401973c:	mov    eax,ds:0x64037644
64019741:	xor    eax,esp
64019743:	mov    DWORD PTR [esp+0x8],eax
64019747:	mov    DWORD PTR fs:0x0,esp
6401974e:	mov    eax,DWORD PTR [esp+0x30]
64019752:	mov    ebx,DWORD PTR [eax+0x8]
64019755:	mov    ecx,DWORD PTR [esp+0x2c]
64019759:	xor    ebx,DWORD PTR [ecx]
6401975b:	mov    esi,DWORD PTR [eax+0xc]
6401975e:	cmp    esi,0xfffffffe
64019761:	je     0x6401979e
64019763:	mov    edx,DWORD PTR [esp+0x34]
64019767:	cmp    edx,0xfffffffe
6401976a:	je     0x64019770
6401976c:	cmp    esi,edx
6401976e:	jbe    0x6401979e
64019770:	lea    esi,[esi+esi*2]
64019773:	lea    ebx,[ebx+esi*4+0x10]
64019777:	mov    ecx,DWORD PTR [ebx]
64019779:	mov    DWORD PTR [eax+0xc],ecx
6401977c:	cmp    DWORD PTR [ebx+0x4],0x0
64019780:	jne    0x6401974e
64019782:	push   0x101
64019787:	mov    eax,DWORD PTR [ebx+0x8]
6401978a:	call   0x6401e7ed
6401978f:	mov    ecx,0x1
64019794:	mov    eax,DWORD PTR [ebx+0x8]
64019797:	call   0x6401e80c
6401979c:	jmp    0x6401974e
6401979e:	pop    DWORD PTR fs:0x0
640197a5:	add    esp,0x18
640197a8:	pop    edi
640197a9:	pop    esi
640197aa:	pop    ebx
640197ab:	ret    
640197ac:	mov    ecx,DWORD PTR [esp+0x4]
640197b0:	test   DWORD PTR [ecx+0x4],0x6
640197b7:	mov    eax,0x1
640197bc:	je     0x640197f1
640197be:	mov    eax,DWORD PTR [esp+0x8]
640197c2:	mov    ecx,DWORD PTR [eax+0x8]
640197c5:	xor    ecx,eax
640197c7:	call   0x64013d06
640197cc:	push   ebp
640197cd:	mov    ebp,DWORD PTR [eax+0x18]
640197d0:	push   DWORD PTR [eax+0xc]
640197d3:	push   DWORD PTR [eax+0x10]
640197d6:	push   DWORD PTR [eax+0x14]
640197d9:	call   0x6401971c
640197de:	add    esp,0xc
640197e1:	pop    ebp
640197e2:	mov    eax,DWORD PTR [esp+0x8]
640197e6:	mov    edx,DWORD PTR [esp+0x10]
640197ea:	mov    DWORD PTR [edx],eax
640197ec:	mov    eax,0x3
640197f1:	ret    
640197f2:	push   ebp
640197f3:	mov    ecx,DWORD PTR [esp+0x8]
640197f7:	mov    ebp,DWORD PTR [ecx]
640197f9:	push   DWORD PTR [ecx+0x1c]
640197fc:	push   DWORD PTR [ecx+0x18]
640197ff:	push   DWORD PTR [ecx+0x28]
64019802:	call   0x6401971c
64019807:	add    esp,0xc
6401980a:	pop    ebp
6401980b:	ret    0x4
6401980e:	push   ebp
6401980f:	push   esi
64019810:	push   edi
64019811:	push   ebx
64019812:	mov    ebp,edx
64019814:	xor    eax,eax
64019816:	xor    ebx,ebx
64019818:	xor    edx,edx
6401981a:	xor    esi,esi
6401981c:	xor    edi,edi
6401981e:	call   ecx
64019820:	pop    ebx
64019821:	pop    edi
64019822:	pop    esi
64019823:	pop    ebp
64019824:	ret    
64019825:	mov    ebp,edx
64019827:	mov    esi,ecx
64019829:	mov    eax,ecx
6401982b:	push   0x1
6401982d:	call   0x6401e7ed
64019832:	xor    eax,eax
64019834:	xor    ebx,ebx
64019836:	xor    ecx,ecx
64019838:	xor    edx,edx
6401983a:	xor    edi,edi
6401983c:	jmp    esi
6401983e:	push   ebp
6401983f:	mov    ebp,esp
64019841:	push   ebx
64019842:	push   esi
64019843:	push   edi
64019844:	push   0x0
64019846:	push   0x0
64019848:	push   0x64019853
6401984d:	push   ecx
6401984e:	call   0x64022e5c
64019853:	pop    edi
64019854:	pop    esi
64019855:	pop    ebx
64019856:	pop    ebp
64019857:	ret    
64019858:	push   ebp
64019859:	mov    ebp,DWORD PTR [esp+0x8]
6401985d:	push   edx
6401985e:	push   ecx
6401985f:	push   DWORD PTR [esp+0x14]
64019863:	call   0x6401971c
64019868:	add    esp,0xc
6401986b:	pop    ebp
6401986c:	ret    0x8
6401986f:	mov    eax,DWORD PTR [esp+0x4]
64019873:	push   esi
64019874:	xor    esi,esi
64019876:	cmp    eax,esi
64019878:	jne    0x64019897
6401987a:	call   0x640164c3
6401987f:	push   esi
64019880:	push   esi
64019881:	push   esi
64019882:	push   esi
64019883:	push   esi
64019884:	mov    DWORD PTR [eax],0x16
6401988a:	call   0x64013e52
6401988f:	add    esp,0x14
64019892:	or     eax,0xffffffff
64019895:	pop    esi
64019896:	ret    
64019897:	mov    eax,DWORD PTR [eax+0x10]
6401989a:	pop    esi
6401989b:	ret    
6401989c:	push   esi
6401989d:	mov    esi,DWORD PTR [esp+0x8]
640198a1:	mov    eax,DWORD PTR [esi+0xc]
640198a4:	test   al,0x83
640198a6:	je     0x640198c6
640198a8:	test   al,0x8
640198aa:	je     0x640198c6
640198ac:	push   DWORD PTR [esi+0x8]
640198af:	call   0x6401475a
640198b4:	and    DWORD PTR [esi+0xc],0xfffffbf7
640198bb:	xor    eax,eax
640198bd:	pop    ecx
640198be:	mov    DWORD PTR [esi],eax
640198c0:	mov    DWORD PTR [esi+0x8],eax
640198c3:	mov    DWORD PTR [esi+0x4],eax
640198c6:	pop    esi
640198c7:	ret    
640198c8:	push   ebx
640198c9:	push   esi
640198ca:	mov    esi,DWORD PTR [esp+0xc]
640198ce:	mov    eax,DWORD PTR [esi+0xc]
640198d1:	mov    ecx,eax
640198d3:	and    cl,0x3
640198d6:	xor    ebx,ebx
640198d8:	cmp    cl,0x2
640198db:	jne    0x6401991c
640198dd:	test   ax,0x108
640198e1:	je     0x6401991c
640198e3:	mov    eax,DWORD PTR [esi+0x8]
640198e6:	push   edi
640198e7:	mov    edi,DWORD PTR [esi]
640198e9:	sub    edi,eax
640198eb:	test   edi,edi
640198ed:	jle    0x6401991b
640198ef:	push   edi
640198f0:	push   eax
640198f1:	push   esi
640198f2:	call   0x6401986f
640198f7:	pop    ecx
640198f8:	push   eax
640198f9:	call   0x6401acbc
640198fe:	add    esp,0xc
64019901:	cmp    eax,edi
64019903:	jne    0x64019914
64019905:	mov    eax,DWORD PTR [esi+0xc]
64019908:	test   al,al
6401990a:	jns    0x6401991b
6401990c:	and    eax,0xfffffffd
6401990f:	mov    DWORD PTR [esi+0xc],eax
64019912:	jmp    0x6401991b
64019914:	or     DWORD PTR [esi+0xc],0x20
64019918:	or     ebx,0xffffffff
6401991b:	pop    edi
6401991c:	mov    eax,DWORD PTR [esi+0x8]
6401991f:	and    DWORD PTR [esi+0x4],0x0
64019923:	mov    DWORD PTR [esi],eax
64019925:	pop    esi
64019926:	mov    eax,ebx
64019928:	pop    ebx
64019929:	ret    
6401992a:	push   esi
6401992b:	mov    esi,DWORD PTR [esp+0x8]
6401992f:	test   esi,esi
64019931:	jne    0x6401993c
64019933:	push   esi
64019934:	call   0x6401996c
64019939:	pop    ecx
6401993a:	pop    esi
6401993b:	ret    
6401993c:	push   esi
6401993d:	call   0x640198c8
64019942:	test   eax,eax
64019944:	pop    ecx
64019945:	je     0x6401994c
64019947:	or     eax,0xffffffff
6401994a:	pop    esi
6401994b:	ret    
6401994c:	test   WORD PTR [esi+0xc],0x4000
64019952:	je     0x64019968
64019954:	push   esi
64019955:	call   0x6401986f
6401995a:	push   eax
6401995b:	call   0x6401e9b6
64019960:	pop    ecx
64019961:	pop    ecx
64019962:	neg    eax
64019964:	sbb    eax,eax
64019966:	pop    esi
64019967:	ret    
64019968:	xor    eax,eax
6401996a:	pop    esi
6401996b:	ret    
6401996c:	push   0x14
6401996e:	push   0x6402ba60
64019973:	call   0x64015f14
64019978:	xor    edi,edi
6401997a:	mov    DWORD PTR [ebp-0x1c],edi
6401997d:	mov    DWORD PTR [ebp-0x24],edi
64019980:	push   0x1
64019982:	call   0x6401af0e
64019987:	pop    ecx
64019988:	mov    DWORD PTR [ebp-0x4],edi
6401998b:	xor    esi,esi
6401998d:	mov    DWORD PTR [ebp-0x20],esi
64019990:	cmp    esi,DWORD PTR ds:0x6403ab60
64019996:	jge    0x64019a1f
6401999c:	mov    eax,ds:0x64039b40
640199a1:	lea    eax,[eax+esi*4]
640199a4:	cmp    DWORD PTR [eax],edi
640199a6:	je     0x64019a06
640199a8:	mov    eax,DWORD PTR [eax]
640199aa:	test   BYTE PTR [eax+0xc],0x83
640199ae:	je     0x64019a06
640199b0:	push   eax
640199b1:	push   esi
640199b2:	call   0x6401968d
640199b7:	pop    ecx
640199b8:	pop    ecx
640199b9:	xor    edx,edx
640199bb:	inc    edx
640199bc:	mov    DWORD PTR [ebp-0x4],edx
640199bf:	mov    eax,ds:0x64039b40
640199c4:	mov    eax,DWORD PTR [eax+esi*4]
640199c7:	mov    ecx,DWORD PTR [eax+0xc]
640199ca:	test   cl,0x83
640199cd:	je     0x640199fe
640199cf:	cmp    DWORD PTR [ebp+0x8],edx
640199d2:	jne    0x640199e5
640199d4:	push   eax
640199d5:	call   0x6401992a
640199da:	pop    ecx
640199db:	cmp    eax,0xffffffff
640199de:	je     0x640199fe
640199e0:	inc    DWORD PTR [ebp-0x1c]
640199e3:	jmp    0x640199fe
640199e5:	cmp    DWORD PTR [ebp+0x8],edi
640199e8:	jne    0x640199fe
640199ea:	test   cl,0x2
640199ed:	je     0x640199fe
640199ef:	push   eax
640199f0:	call   0x6401992a
640199f5:	pop    ecx
640199f6:	cmp    eax,0xffffffff
640199f9:	jne    0x640199fe
640199fb:	or     DWORD PTR [ebp-0x24],eax
640199fe:	mov    DWORD PTR [ebp-0x4],edi
64019a01:	call   0x64019a0e
64019a06:	inc    esi
64019a07:	jmp    0x6401998d
64019a09:	xor    edi,edi
64019a0b:	mov    esi,DWORD PTR [ebp-0x20]
64019a0e:	mov    eax,ds:0x64039b40
64019a13:	push   DWORD PTR [eax+esi*4]
64019a16:	push   esi
64019a17:	call   0x640196f1
64019a1c:	pop    ecx
64019a1d:	pop    ecx
64019a1e:	ret    
64019a1f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019a26:	call   0x64019a3d
64019a2b:	cmp    DWORD PTR [ebp+0x8],0x1
64019a2f:	mov    eax,DWORD PTR [ebp-0x1c]
64019a32:	je     0x64019a37
64019a34:	mov    eax,DWORD PTR [ebp-0x24]
64019a37:	call   0x64015f59
64019a3c:	ret    
64019a3d:	push   0x1
64019a3f:	call   0x6401ae36
64019a44:	pop    ecx
64019a45:	ret    
64019a46:	push   0x1
64019a48:	call   0x6401996c
64019a4d:	pop    ecx
64019a4e:	ret    
64019a4f:	push   ebp
64019a50:	mov    ebp,esp
64019a52:	push   ecx
64019a53:	push   esi
64019a54:	mov    esi,DWORD PTR [ebp+0xc]
64019a57:	push   esi
64019a58:	call   0x6401986f
64019a5d:	mov    DWORD PTR [ebp+0xc],eax
64019a60:	mov    eax,DWORD PTR [esi+0xc]
64019a63:	test   al,0x82
64019a65:	pop    ecx
64019a66:	jne    0x64019a7f
64019a68:	call   0x640164c3
64019a6d:	mov    DWORD PTR [eax],0x9
64019a73:	or     DWORD PTR [esi+0xc],0x20
64019a77:	or     eax,0xffffffff
64019a7a:	jmp    0x64019bac
64019a7f:	test   al,0x40
64019a81:	je     0x64019a90
64019a83:	call   0x640164c3
64019a88:	mov    DWORD PTR [eax],0x22
64019a8e:	jmp    0x64019a73
64019a90:	push   ebx
64019a91:	xor    ebx,ebx
64019a93:	test   al,0x1
64019a95:	je     0x64019aad
64019a97:	test   al,0x10
64019a99:	mov    DWORD PTR [esi+0x4],ebx
64019a9c:	je     0x64019b27
64019aa2:	mov    ecx,DWORD PTR [esi+0x8]
64019aa5:	and    eax,0xfffffffe
64019aa8:	mov    DWORD PTR [esi],ecx
64019aaa:	mov    DWORD PTR [esi+0xc],eax
64019aad:	mov    eax,DWORD PTR [esi+0xc]
64019ab0:	and    eax,0xffffffef
64019ab3:	or     eax,0x2
64019ab6:	test   ax,0x10c
64019aba:	mov    DWORD PTR [esi+0xc],eax
64019abd:	mov    DWORD PTR [esi+0x4],ebx
64019ac0:	mov    DWORD PTR [ebp-0x4],ebx
64019ac3:	jne    0x64019af1
64019ac5:	call   0x6401957a
64019aca:	add    eax,0x20
64019acd:	cmp    esi,eax
64019acf:	je     0x64019add
64019ad1:	call   0x6401957a
64019ad6:	add    eax,0x40
64019ad9:	cmp    esi,eax
64019adb:	jne    0x64019aea
64019add:	push   DWORD PTR [ebp+0xc]
64019ae0:	call   0x6401eadb
64019ae5:	test   eax,eax
64019ae7:	pop    ecx
64019ae8:	jne    0x64019af1
64019aea:	push   esi
64019aeb:	call   0x6401ea97
64019af0:	pop    ecx
64019af1:	test   WORD PTR [esi+0xc],0x108
64019af7:	push   edi
64019af8:	je     0x64019b7e
64019afe:	mov    eax,DWORD PTR [esi+0x8]
64019b01:	mov    edi,DWORD PTR [esi]
64019b03:	lea    ecx,[eax+0x1]
64019b06:	mov    DWORD PTR [esi],ecx
64019b08:	mov    ecx,DWORD PTR [esi+0x18]
64019b0b:	sub    edi,eax
64019b0d:	dec    ecx
64019b0e:	cmp    edi,ebx
64019b10:	mov    DWORD PTR [esi+0x4],ecx
64019b13:	jle    0x64019b32
64019b15:	push   edi
64019b16:	push   eax
64019b17:	push   DWORD PTR [ebp+0xc]
64019b1a:	call   0x6401acbc
64019b1f:	add    esp,0xc
64019b22:	mov    DWORD PTR [ebp-0x4],eax
64019b25:	jmp    0x64019b74
64019b27:	or     eax,0x20
64019b2a:	mov    DWORD PTR [esi+0xc],eax
64019b2d:	or     eax,0xffffffff
64019b30:	jmp    0x64019bab
64019b32:	mov    ecx,DWORD PTR [ebp+0xc]
64019b35:	cmp    ecx,0xffffffff
64019b38:	je     0x64019b55
64019b3a:	cmp    ecx,0xfffffffe
64019b3d:	je     0x64019b55
64019b3f:	mov    eax,ecx
64019b41:	and    eax,0x1f
64019b44:	mov    edx,ecx
64019b46:	sar    edx,0x5
64019b49:	shl    eax,0x6
64019b4c:	add    eax,DWORD PTR [edx*4+0x6403ab80]
64019b53:	jmp    0x64019b5a
64019b55:	mov    eax,0x64037918
64019b5a:	test   BYTE PTR [eax+0x4],0x20
64019b5e:	je     0x64019b74
64019b60:	push   0x2
64019b62:	push   ebx
64019b63:	push   ebx
64019b64:	push   ecx
64019b65:	call   0x6401bfca
64019b6a:	and    eax,edx
64019b6c:	add    esp,0x10
64019b6f:	cmp    eax,0xffffffff
64019b72:	je     0x64019b99
64019b74:	mov    eax,DWORD PTR [esi+0x8]
64019b77:	mov    cl,BYTE PTR [ebp+0x8]
64019b7a:	mov    BYTE PTR [eax],cl
64019b7c:	jmp    0x64019b94
64019b7e:	xor    edi,edi
64019b80:	inc    edi
64019b81:	push   edi
64019b82:	lea    eax,[ebp+0x8]
64019b85:	push   eax
64019b86:	push   DWORD PTR [ebp+0xc]
64019b89:	call   0x6401acbc
64019b8e:	add    esp,0xc
64019b91:	mov    DWORD PTR [ebp-0x4],eax
64019b94:	cmp    DWORD PTR [ebp-0x4],edi
64019b97:	je     0x64019ba2
64019b99:	or     DWORD PTR [esi+0xc],0x20
64019b9d:	or     eax,0xffffffff
64019ba0:	jmp    0x64019baa
64019ba2:	mov    eax,DWORD PTR [ebp+0x8]
64019ba5:	and    eax,0xff
64019baa:	pop    edi
64019bab:	pop    ebx
64019bac:	pop    esi
64019bad:	leave  
64019bae:	ret    
64019baf:	test   BYTE PTR [ecx+0xc],0x40
64019bb3:	je     0x64019bbb
64019bb5:	cmp    DWORD PTR [ecx+0x8],0x0
64019bb9:	je     0x64019bdf
64019bbb:	dec    DWORD PTR [ecx+0x4]
64019bbe:	js     0x64019bcb
64019bc0:	mov    edx,DWORD PTR [ecx]
64019bc2:	mov    BYTE PTR [edx],al
64019bc4:	inc    DWORD PTR [ecx]
64019bc6:	movzx  eax,al
64019bc9:	jmp    0x64019bd7
64019bcb:	movsx  eax,al
64019bce:	push   ecx
64019bcf:	push   eax
64019bd0:	call   0x64019a4f
64019bd5:	pop    ecx
64019bd6:	pop    ecx
64019bd7:	cmp    eax,0xffffffff
64019bda:	jne    0x64019bdf
64019bdc:	or     DWORD PTR [esi],eax
64019bde:	ret    
64019bdf:	inc    DWORD PTR [esi]
64019be1:	ret    
64019be2:	push   ebp
64019be3:	mov    ebp,esp
64019be5:	push   esi
64019be6:	mov    esi,eax
64019be8:	jmp    0x64019bfd
64019bea:	mov    ecx,DWORD PTR [ebp+0x10]
64019bed:	mov    al,BYTE PTR [ebp+0x8]
64019bf0:	dec    DWORD PTR [ebp+0xc]
64019bf3:	call   0x64019baf
64019bf8:	cmp    DWORD PTR [esi],0xffffffff
64019bfb:	je     0x64019c03
64019bfd:	cmp    DWORD PTR [ebp+0xc],0x0
64019c01:	jg     0x64019bea
64019c03:	pop    esi
64019c04:	pop    ebp
64019c05:	ret    
64019c06:	test   BYTE PTR [edi+0xc],0x40
64019c0a:	push   ebx
64019c0b:	push   esi
64019c0c:	mov    esi,eax
64019c0e:	mov    ebx,ecx
64019c10:	je     0x64019c46
64019c12:	cmp    DWORD PTR [edi+0x8],0x0
64019c16:	jne    0x64019c46
64019c18:	mov    eax,DWORD PTR [esp+0xc]
64019c1c:	add    DWORD PTR [esi],eax
64019c1e:	jmp    0x64019c4d
64019c20:	mov    al,BYTE PTR [ebx]
64019c22:	dec    DWORD PTR [esp+0xc]
64019c26:	mov    ecx,edi
64019c28:	call   0x64019baf
64019c2d:	inc    ebx
64019c2e:	cmp    DWORD PTR [esi],0xffffffff
64019c31:	jne    0x64019c46
64019c33:	call   0x640164c3
64019c38:	cmp    DWORD PTR [eax],0x2a
64019c3b:	jne    0x64019c4d
64019c3d:	mov    ecx,edi
64019c3f:	mov    al,0x3f
64019c41:	call   0x64019baf
64019c46:	cmp    DWORD PTR [esp+0xc],0x0
64019c4b:	jg     0x64019c20
64019c4d:	pop    esi
64019c4e:	pop    ebx
64019c4f:	ret    
64019c50:	push   ebp
64019c51:	lea    ebp,[esp-0x1f8]
64019c58:	sub    esp,0x278
64019c5e:	mov    eax,ds:0x64037644
64019c63:	xor    eax,ebp
64019c65:	mov    DWORD PTR [ebp+0x1f4],eax
64019c6b:	mov    eax,DWORD PTR [ebp+0x200]
64019c71:	push   ebx
64019c72:	mov    ebx,DWORD PTR [ebp+0x204]
64019c78:	push   esi
64019c79:	xor    esi,esi
64019c7b:	push   edi
64019c7c:	mov    edi,DWORD PTR [ebp+0x20c]
64019c82:	push   DWORD PTR [ebp+0x208]
64019c88:	lea    ecx,[ebp-0x64]
64019c8b:	mov    DWORD PTR [ebp-0x30],eax
64019c8e:	mov    DWORD PTR [ebp-0x2c],edi
64019c91:	mov    DWORD PTR [ebp-0x4c],esi
64019c94:	mov    DWORD PTR [ebp-0x18],esi
64019c97:	mov    DWORD PTR [ebp-0x40],esi
64019c9a:	mov    DWORD PTR [ebp-0x20],esi
64019c9d:	mov    DWORD PTR [ebp-0x3c],esi
64019ca0:	mov    DWORD PTR [ebp-0x50],esi
64019ca3:	mov    DWORD PTR [ebp-0x44],esi
64019ca6:	call   0x64014325
64019cab:	cmp    DWORD PTR [ebp-0x30],esi
64019cae:	jne    0x64019cdd
64019cb0:	call   0x640164c3
64019cb5:	push   esi
64019cb6:	push   esi
64019cb7:	push   esi
64019cb8:	push   esi
64019cb9:	mov    DWORD PTR [eax],0x16
64019cbf:	push   esi
64019cc0:	call   0x64013e52
64019cc5:	add    esp,0x14
64019cc8:	cmp    BYTE PTR [ebp-0x58],0x0
64019ccc:	je     0x64019cd5
64019cce:	mov    eax,DWORD PTR [ebp-0x5c]
64019cd1:	and    DWORD PTR [eax+0x70],0xfffffffd
64019cd5:	or     eax,0xffffffff
64019cd8:	jmp    0x6401a5ac
64019cdd:	mov    eax,DWORD PTR [ebp-0x30]
64019ce0:	test   BYTE PTR [eax+0xc],0x40
64019ce4:	jne    0x64019d8e
64019cea:	push   eax
64019ceb:	call   0x6401986f
64019cf0:	cmp    eax,0xffffffff
64019cf3:	pop    ecx
64019cf4:	je     0x64019d2c
64019cf6:	push   DWORD PTR [ebp-0x30]
64019cf9:	call   0x6401986f
64019cfe:	cmp    eax,0xfffffffe
64019d01:	pop    ecx
64019d02:	je     0x64019d2c
64019d04:	push   DWORD PTR [ebp-0x30]
64019d07:	call   0x6401986f
64019d0c:	push   DWORD PTR [ebp-0x30]
64019d0f:	sar    eax,0x5
64019d12:	lea    esi,[eax*4+0x6403ab80]
64019d19:	call   0x6401986f
64019d1e:	and    eax,0x1f
64019d21:	shl    eax,0x6
64019d24:	add    eax,DWORD PTR [esi]
64019d26:	pop    ecx
64019d27:	pop    ecx
64019d28:	xor    esi,esi
64019d2a:	jmp    0x64019d31
64019d2c:	mov    eax,0x64037918
64019d31:	test   BYTE PTR [eax+0x24],0x7f
64019d35:	jne    0x64019cb0
64019d3b:	push   DWORD PTR [ebp-0x30]
64019d3e:	call   0x6401986f
64019d43:	cmp    eax,0xffffffff
64019d46:	pop    ecx
64019d47:	je     0x64019d7f
64019d49:	push   DWORD PTR [ebp-0x30]
64019d4c:	call   0x6401986f
64019d51:	cmp    eax,0xfffffffe
64019d54:	pop    ecx
64019d55:	je     0x64019d7f
64019d57:	push   DWORD PTR [ebp-0x30]
64019d5a:	call   0x6401986f
64019d5f:	push   DWORD PTR [ebp-0x30]
64019d62:	sar    eax,0x5
64019d65:	lea    esi,[eax*4+0x6403ab80]
64019d6c:	call   0x6401986f
64019d71:	and    eax,0x1f
64019d74:	shl    eax,0x6
64019d77:	add    eax,DWORD PTR [esi]
64019d79:	pop    ecx
64019d7a:	pop    ecx
64019d7b:	xor    esi,esi
64019d7d:	jmp    0x64019d84
64019d7f:	mov    eax,0x64037918
64019d84:	test   BYTE PTR [eax+0x24],0x80
64019d88:	jne    0x64019cb0
64019d8e:	cmp    ebx,esi
64019d90:	je     0x64019cb0
64019d96:	mov    dl,BYTE PTR [ebx]
64019d98:	xor    ecx,ecx
64019d9a:	test   dl,dl
64019d9c:	mov    DWORD PTR [ebp-0x34],esi
64019d9f:	mov    DWORD PTR [ebp-0x28],esi
64019da2:	mov    DWORD PTR [ebp-0x54],esi
64019da5:	mov    BYTE PTR [ebp-0x19],dl
64019da8:	je     0x6401a59c
64019dae:	inc    ebx
64019daf:	cmp    DWORD PTR [ebp-0x34],0x0
64019db3:	mov    DWORD PTR [ebp-0x48],ebx
64019db6:	jl     0x6401a59c
64019dbc:	mov    al,dl
64019dbe:	sub    al,0x20
64019dc0:	cmp    al,0x58
64019dc2:	ja     0x64019dd5
64019dc4:	movsx  eax,dl
64019dc7:	movzx  eax,BYTE PTR [eax+0x64028568]
64019dce:	and    eax,0xf
64019dd1:	xor    esi,esi
64019dd3:	jmp    0x64019dd9
64019dd5:	xor    esi,esi
64019dd7:	xor    eax,eax
64019dd9:	movsx  eax,BYTE PTR [ecx+eax*8+0x64028588]
64019de1:	push   0x7
64019de3:	sar    eax,0x4
64019de6:	pop    ecx
64019de7:	cmp    eax,ecx
64019de9:	mov    DWORD PTR [ebp-0x74],eax
64019dec:	ja     0x6401a56c
64019df2:	jmp    DWORD PTR [eax*4+0x6401a5c4]
64019df9:	or     DWORD PTR [ebp-0x20],0xffffffff
64019dfd:	mov    DWORD PTR [ebp-0x78],esi
64019e00:	mov    DWORD PTR [ebp-0x50],esi
64019e03:	mov    DWORD PTR [ebp-0x40],esi
64019e06:	mov    DWORD PTR [ebp-0x3c],esi
64019e09:	mov    DWORD PTR [ebp-0x18],esi
64019e0c:	mov    DWORD PTR [ebp-0x44],esi
64019e0f:	jmp    0x6401a56c
64019e14:	movsx  eax,dl
64019e17:	sub    eax,0x20
64019e1a:	je     0x64019e5a
64019e1c:	sub    eax,0x3
64019e1f:	je     0x64019e4e
64019e21:	sub    eax,0x8
64019e24:	je     0x64019e45
64019e26:	dec    eax
64019e27:	dec    eax
64019e28:	je     0x64019e3c
64019e2a:	sub    eax,0x3
64019e2d:	jne    0x6401a56c
64019e33:	or     DWORD PTR [ebp-0x18],0x8
64019e37:	jmp    0x6401a56c
64019e3c:	or     DWORD PTR [ebp-0x18],0x4
64019e40:	jmp    0x6401a56c
64019e45:	or     DWORD PTR [ebp-0x18],0x1
64019e49:	jmp    0x6401a56c
64019e4e:	or     DWORD PTR [ebp-0x18],0x80
64019e55:	jmp    0x6401a56c
64019e5a:	or     DWORD PTR [ebp-0x18],0x2
64019e5e:	jmp    0x6401a56c
64019e63:	cmp    dl,0x2a
64019e66:	jne    0x64019e88
64019e68:	add    edi,0x4
64019e6b:	mov    DWORD PTR [ebp-0x2c],edi
64019e6e:	mov    edi,DWORD PTR [edi-0x4]
64019e71:	cmp    edi,esi
64019e73:	mov    DWORD PTR [ebp-0x40],edi
64019e76:	jge    0x6401a56c
64019e7c:	or     DWORD PTR [ebp-0x18],0x4
64019e80:	neg    DWORD PTR [ebp-0x40]
64019e83:	jmp    0x6401a56c
64019e88:	mov    eax,DWORD PTR [ebp-0x40]
64019e8b:	imul   eax,eax,0xa
64019e8e:	movsx  ecx,dl
64019e91:	lea    eax,[eax+ecx*1-0x30]
64019e95:	mov    DWORD PTR [ebp-0x40],eax
64019e98:	jmp    0x6401a56c
64019e9d:	mov    DWORD PTR [ebp-0x20],esi
64019ea0:	jmp    0x6401a56c
64019ea5:	cmp    dl,0x2a
64019ea8:	jne    0x64019ec7
64019eaa:	add    edi,0x4
64019ead:	mov    DWORD PTR [ebp-0x2c],edi
64019eb0:	mov    edi,DWORD PTR [edi-0x4]
64019eb3:	cmp    edi,esi
64019eb5:	mov    DWORD PTR [ebp-0x20],edi
64019eb8:	jge    0x6401a56c
64019ebe:	or     DWORD PTR [ebp-0x20],0xffffffff
64019ec2:	jmp    0x6401a56c
64019ec7:	mov    eax,DWORD PTR [ebp-0x20]
64019eca:	imul   eax,eax,0xa
64019ecd:	movsx  ecx,dl
64019ed0:	lea    eax,[eax+ecx*1-0x30]
64019ed4:	mov    DWORD PTR [ebp-0x20],eax
64019ed7:	jmp    0x6401a56c
64019edc:	cmp    dl,0x49
64019edf:	je     0x64019f27
64019ee1:	cmp    dl,0x68
64019ee4:	je     0x64019f1e
64019ee6:	cmp    dl,0x6c
64019ee9:	je     0x64019f00
64019eeb:	cmp    dl,0x77
64019eee:	jne    0x6401a56c
64019ef4:	or     DWORD PTR [ebp-0x18],0x800
64019efb:	jmp    0x6401a56c
64019f00:	cmp    BYTE PTR [ebx],0x6c
64019f03:	jne    0x64019f15
64019f05:	inc    ebx
64019f06:	or     DWORD PTR [ebp-0x18],0x1000
64019f0d:	mov    DWORD PTR [ebp-0x48],ebx
64019f10:	jmp    0x6401a56c
64019f15:	or     DWORD PTR [ebp-0x18],0x10
64019f19:	jmp    0x6401a56c
64019f1e:	or     DWORD PTR [ebp-0x18],0x20
64019f22:	jmp    0x6401a56c
64019f27:	mov    al,BYTE PTR [ebx]
64019f29:	cmp    al,0x36
64019f2b:	jne    0x64019f44
64019f2d:	cmp    BYTE PTR [ebx+0x1],0x34
64019f31:	jne    0x64019f44
64019f33:	inc    ebx
64019f34:	inc    ebx
64019f35:	or     DWORD PTR [ebp-0x18],0x8000
64019f3c:	mov    DWORD PTR [ebp-0x48],ebx
64019f3f:	jmp    0x6401a56c
64019f44:	cmp    al,0x33
64019f46:	jne    0x64019f5f
64019f48:	cmp    BYTE PTR [ebx+0x1],0x32
64019f4c:	jne    0x64019f5f
64019f4e:	inc    ebx
64019f4f:	inc    ebx
64019f50:	and    DWORD PTR [ebp-0x18],0xffff7fff
64019f57:	mov    DWORD PTR [ebp-0x48],ebx
64019f5a:	jmp    0x6401a56c
64019f5f:	cmp    al,0x64
64019f61:	je     0x6401a56c
64019f67:	cmp    al,0x69
64019f69:	je     0x6401a56c
64019f6f:	cmp    al,0x6f
64019f71:	je     0x6401a56c
64019f77:	cmp    al,0x75
64019f79:	je     0x6401a56c
64019f7f:	cmp    al,0x78
64019f81:	je     0x6401a56c
64019f87:	cmp    al,0x58
64019f89:	je     0x6401a56c
64019f8f:	mov    DWORD PTR [ebp-0x74],esi
64019f92:	lea    eax,[ebp-0x64]
64019f95:	push   eax
64019f96:	movzx  eax,dl
64019f99:	push   eax
64019f9a:	mov    DWORD PTR [ebp-0x44],esi
64019f9d:	call   0x64015117
64019fa2:	pop    ecx
64019fa3:	test   eax,eax
64019fa5:	mov    al,BYTE PTR [ebp-0x19]
64019fa8:	pop    ecx
64019fa9:	je     0x64019fc4
64019fab:	mov    ecx,DWORD PTR [ebp-0x30]
64019fae:	lea    esi,[ebp-0x34]
64019fb1:	call   0x64019baf
64019fb6:	mov    al,BYTE PTR [ebx]
64019fb8:	inc    ebx
64019fb9:	test   al,al
64019fbb:	mov    DWORD PTR [ebp-0x48],ebx
64019fbe:	je     0x6401a585
64019fc4:	mov    ecx,DWORD PTR [ebp-0x30]
64019fc7:	lea    esi,[ebp-0x34]
64019fca:	call   0x64019baf
64019fcf:	jmp    0x6401a56c
64019fd4:	movsx  eax,dl
64019fd7:	cmp    eax,0x64
64019fda:	jg     0x6401a152
64019fe0:	je     0x6401a1d1
64019fe6:	cmp    eax,0x53
64019fe9:	jg     0x6401a09a
64019fef:	je     0x6401a04b
64019ff1:	sub    eax,0x41
64019ff4:	je     0x6401a006
64019ff6:	dec    eax
64019ff7:	dec    eax
64019ff8:	je     0x6401a03a
64019ffa:	dec    eax
64019ffb:	dec    eax
64019ffc:	je     0x6401a006
64019ffe:	dec    eax
64019fff:	dec    eax
6401a000:	jne    0x6401a454
6401a006:	add    dl,0x20
6401a009:	mov    DWORD PTR [ebp-0x78],0x1
6401a010:	mov    BYTE PTR [ebp-0x19],dl
6401a013:	or     DWORD PTR [ebp-0x18],0x40
6401a017:	cmp    DWORD PTR [ebp-0x20],esi
6401a01a:	lea    ebx,[ebp-0x14]
6401a01d:	mov    eax,0x200
6401a022:	mov    DWORD PTR [ebp-0x24],ebx
6401a025:	mov    DWORD PTR [ebp-0x68],eax
6401a028:	jge    0x6401a1f5
6401a02e:	mov    DWORD PTR [ebp-0x20],0x6
6401a035:	jmp    0x6401a243
6401a03a:	test   WORD PTR [ebp-0x18],0x830
6401a040:	jne    0x6401a0b7
6401a042:	or     DWORD PTR [ebp-0x18],0x800
6401a049:	jmp    0x6401a0b7
6401a04b:	test   WORD PTR [ebp-0x18],0x830
6401a051:	jne    0x6401a05a
6401a053:	or     DWORD PTR [ebp-0x18],0x800
6401a05a:	mov    ecx,DWORD PTR [ebp-0x20]
6401a05d:	cmp    ecx,0xffffffff
6401a060:	jne    0x6401a067
6401a062:	mov    ecx,0x7fffffff
6401a067:	add    edi,0x4
6401a06a:	test   WORD PTR [ebp-0x18],0x810
6401a070:	mov    DWORD PTR [ebp-0x2c],edi
6401a073:	mov    edi,DWORD PTR [edi-0x4]
6401a076:	mov    DWORD PTR [ebp-0x24],edi
6401a079:	je     0x6401a432
6401a07f:	cmp    edi,esi
6401a081:	jne    0x6401a08b
6401a083:	mov    eax,ds:0x64038284
6401a088:	mov    DWORD PTR [ebp-0x24],eax
6401a08b:	mov    eax,DWORD PTR [ebp-0x24]
6401a08e:	mov    DWORD PTR [ebp-0x44],0x1
6401a095:	jmp    0x6401a427
6401a09a:	sub    eax,0x58
6401a09d:	je     0x6401a2dc
6401a0a3:	dec    eax
6401a0a4:	dec    eax
6401a0a5:	je     0x6401a104
6401a0a7:	sub    eax,ecx
6401a0a9:	je     0x6401a013
6401a0af:	dec    eax
6401a0b0:	dec    eax
6401a0b1:	jne    0x6401a454
6401a0b7:	add    edi,0x4
6401a0ba:	test   WORD PTR [ebp-0x18],0x810
6401a0c0:	mov    DWORD PTR [ebp-0x2c],edi
6401a0c3:	je     0x6401a0ec
6401a0c5:	movzx  eax,WORD PTR [edi-0x4]
6401a0c9:	push   eax
6401a0ca:	push   0x200
6401a0cf:	lea    eax,[ebp-0x14]
6401a0d2:	push   eax
6401a0d3:	lea    eax,[ebp-0x28]
6401a0d6:	push   eax
6401a0d7:	call   0x6401ecae
6401a0dc:	add    esp,0x10
6401a0df:	test   eax,eax
6401a0e1:	je     0x6401a0f9
6401a0e3:	mov    DWORD PTR [ebp-0x50],0x1
6401a0ea:	jmp    0x6401a0f9
6401a0ec:	mov    al,BYTE PTR [edi-0x4]
6401a0ef:	mov    BYTE PTR [ebp-0x14],al
6401a0f2:	mov    DWORD PTR [ebp-0x28],0x1
6401a0f9:	lea    eax,[ebp-0x14]
6401a0fc:	mov    DWORD PTR [ebp-0x24],eax
6401a0ff:	jmp    0x6401a454
6401a104:	mov    eax,DWORD PTR [edi]
6401a106:	add    edi,0x4
6401a109:	cmp    eax,esi
6401a10b:	mov    DWORD PTR [ebp-0x2c],edi
6401a10e:	je     0x6401a13e
6401a110:	mov    ecx,DWORD PTR [eax+0x4]
6401a113:	cmp    ecx,esi
6401a115:	je     0x6401a13e
6401a117:	test   WORD PTR [ebp-0x18],0x800
6401a11d:	movsx  eax,WORD PTR [eax]
6401a120:	mov    DWORD PTR [ebp-0x24],ecx
6401a123:	je     0x6401a136
6401a125:	cdq    
6401a126:	sub    eax,edx
6401a128:	sar    eax,1
6401a12a:	mov    DWORD PTR [ebp-0x44],0x1
6401a131:	jmp    0x6401a451
6401a136:	mov    DWORD PTR [ebp-0x44],esi
6401a139:	jmp    0x6401a451
6401a13e:	mov    eax,ds:0x64038280
6401a143:	mov    DWORD PTR [ebp-0x24],eax
6401a146:	push   eax
6401a147:	call   0x64015550
6401a14c:	pop    ecx
6401a14d:	jmp    0x6401a451
6401a152:	cmp    eax,0x70
6401a155:	jg     0x6401a2e1
6401a15b:	je     0x6401a2d5
6401a161:	cmp    eax,0x65
6401a164:	jl     0x6401a454
6401a16a:	cmp    eax,0x67
6401a16d:	jle    0x6401a013
6401a173:	cmp    eax,0x69
6401a176:	je     0x6401a1d1
6401a178:	cmp    eax,0x6e
6401a17b:	je     0x6401a19c
6401a17d:	cmp    eax,0x6f
6401a180:	jne    0x6401a454
6401a186:	test   BYTE PTR [ebp-0x18],0x80
6401a18a:	mov    DWORD PTR [ebp-0x28],0x8
6401a191:	je     0x6401a1dc
6401a193:	or     DWORD PTR [ebp-0x18],0x200
6401a19a:	jmp    0x6401a1dc
6401a19c:	mov    esi,DWORD PTR [edi]
6401a19e:	add    edi,0x4
6401a1a1:	mov    DWORD PTR [ebp-0x2c],edi
6401a1a4:	call   0x6401eb39
6401a1a9:	test   eax,eax
6401a1ab:	je     0x6401a585
6401a1b1:	test   BYTE PTR [ebp-0x18],0x20
6401a1b5:	je     0x6401a1c0
6401a1b7:	mov    ax,WORD PTR [ebp-0x34]
6401a1bb:	mov    WORD PTR [esi],ax
6401a1be:	jmp    0x6401a1c5
6401a1c0:	mov    eax,DWORD PTR [ebp-0x34]
6401a1c3:	mov    DWORD PTR [esi],eax
6401a1c5:	mov    DWORD PTR [ebp-0x50],0x1
6401a1cc:	jmp    0x6401a559
6401a1d1:	or     DWORD PTR [ebp-0x18],0x40
6401a1d5:	mov    DWORD PTR [ebp-0x28],0xa
6401a1dc:	mov    ecx,DWORD PTR [ebp-0x18]
6401a1df:	test   cx,cx
6401a1e2:	jns    0x6401a32b
6401a1e8:	mov    eax,DWORD PTR [edi]
6401a1ea:	mov    edx,DWORD PTR [edi+0x4]
6401a1ed:	add    edi,0x8
6401a1f0:	jmp    0x6401a360
6401a1f5:	jne    0x6401a205
6401a1f7:	cmp    dl,0x67
6401a1fa:	jne    0x6401a243
6401a1fc:	mov    DWORD PTR [ebp-0x20],0x1
6401a203:	jmp    0x6401a243
6401a205:	cmp    DWORD PTR [ebp-0x20],eax
6401a208:	jle    0x6401a20d
6401a20a:	mov    DWORD PTR [ebp-0x20],eax
6401a20d:	cmp    DWORD PTR [ebp-0x20],0xa3
6401a214:	jle    0x6401a243
6401a216:	mov    esi,DWORD PTR [ebp-0x20]
6401a219:	add    esi,0x15d
6401a21f:	push   esi
6401a220:	call   0x64015d2f
6401a225:	test   eax,eax
6401a227:	mov    dl,BYTE PTR [ebp-0x19]
6401a22a:	pop    ecx
6401a22b:	mov    DWORD PTR [ebp-0x54],eax
6401a22e:	je     0x6401a23a
6401a230:	mov    DWORD PTR [ebp-0x24],eax
6401a233:	mov    DWORD PTR [ebp-0x68],esi
6401a236:	mov    ebx,eax
6401a238:	jmp    0x6401a241
6401a23a:	mov    DWORD PTR [ebp-0x20],0xa3
6401a241:	xor    esi,esi
6401a243:	mov    eax,DWORD PTR [edi]
6401a245:	add    edi,0x8
6401a248:	mov    DWORD PTR [ebp-0x80],eax
6401a24b:	mov    eax,DWORD PTR [edi-0x4]
6401a24e:	mov    DWORD PTR [ebp-0x7c],eax
6401a251:	lea    eax,[ebp-0x64]
6401a254:	push   eax
6401a255:	push   DWORD PTR [ebp-0x78]
6401a258:	movsx  eax,dl
6401a25b:	push   DWORD PTR [ebp-0x20]
6401a25e:	mov    DWORD PTR [ebp-0x2c],edi
6401a261:	push   eax
6401a262:	push   DWORD PTR [ebp-0x68]
6401a265:	lea    eax,[ebp-0x80]
6401a268:	push   ebx
6401a269:	push   eax
6401a26a:	push   DWORD PTR ds:0x64038598
6401a270:	call   0x6401760e
6401a275:	pop    ecx
6401a276:	call   eax
6401a278:	mov    edi,DWORD PTR [ebp-0x18]
6401a27b:	add    esp,0x1c
6401a27e:	and    edi,0x80
6401a284:	je     0x6401a2a0
6401a286:	cmp    DWORD PTR [ebp-0x20],esi
6401a289:	jne    0x6401a2a0
6401a28b:	lea    eax,[ebp-0x64]
6401a28e:	push   eax
6401a28f:	push   ebx
6401a290:	push   DWORD PTR ds:0x640385a4
6401a296:	call   0x6401760e
6401a29b:	pop    ecx
6401a29c:	call   eax
6401a29e:	pop    ecx
6401a29f:	pop    ecx
6401a2a0:	cmp    BYTE PTR [ebp-0x19],0x67
6401a2a4:	jne    0x6401a2bf
6401a2a6:	cmp    edi,esi
6401a2a8:	jne    0x6401a2bf
6401a2aa:	lea    eax,[ebp-0x64]
6401a2ad:	push   eax
6401a2ae:	push   ebx
6401a2af:	push   DWORD PTR ds:0x640385a0
6401a2b5:	call   0x6401760e
6401a2ba:	pop    ecx
6401a2bb:	call   eax
6401a2bd:	pop    ecx
6401a2be:	pop    ecx
6401a2bf:	cmp    BYTE PTR [ebx],0x2d
6401a2c2:	jne    0x6401a2cf
6401a2c4:	or     DWORD PTR [ebp-0x18],0x100
6401a2cb:	inc    ebx
6401a2cc:	mov    DWORD PTR [ebp-0x24],ebx
6401a2cf:	push   ebx
6401a2d0:	jmp    0x6401a147
6401a2d5:	mov    DWORD PTR [ebp-0x20],0x8
6401a2dc:	mov    DWORD PTR [ebp-0x4c],ecx
6401a2df:	jmp    0x6401a302
6401a2e1:	sub    eax,0x73
6401a2e4:	je     0x6401a05a
6401a2ea:	dec    eax
6401a2eb:	dec    eax
6401a2ec:	je     0x6401a1d5
6401a2f2:	sub    eax,0x3
6401a2f5:	jne    0x6401a454
6401a2fb:	mov    DWORD PTR [ebp-0x4c],0x27
6401a302:	test   BYTE PTR [ebp-0x18],0x80
6401a306:	mov    DWORD PTR [ebp-0x28],0x10
6401a30d:	je     0x6401a1dc
6401a313:	mov    al,BYTE PTR [ebp-0x4c]
6401a316:	add    al,0x51
6401a318:	mov    BYTE PTR [ebp-0x38],0x30
6401a31c:	mov    BYTE PTR [ebp-0x37],al
6401a31f:	mov    DWORD PTR [ebp-0x3c],0x2
6401a326:	jmp    0x6401a1dc
6401a32b:	test   cx,0x1000
6401a330:	jne    0x6401a1e8
6401a336:	add    edi,0x4
6401a339:	test   cl,0x20
6401a33c:	je     0x6401a353
6401a33e:	test   cl,0x40
6401a341:	mov    DWORD PTR [ebp-0x2c],edi
6401a344:	je     0x6401a34c
6401a346:	movsx  eax,WORD PTR [edi-0x4]
6401a34a:	jmp    0x6401a350
6401a34c:	movzx  eax,WORD PTR [edi-0x4]
6401a350:	cdq    
6401a351:	jmp    0x6401a363
6401a353:	test   cl,0x40
6401a356:	mov    eax,DWORD PTR [edi-0x4]
6401a359:	je     0x6401a35e
6401a35b:	cdq    
6401a35c:	jmp    0x6401a360
6401a35e:	xor    edx,edx
6401a360:	mov    DWORD PTR [ebp-0x2c],edi
6401a363:	test   cl,0x40
6401a366:	je     0x6401a380
6401a368:	cmp    edx,esi
6401a36a:	jg     0x6401a380
6401a36c:	jl     0x6401a372
6401a36e:	cmp    eax,esi
6401a370:	jae    0x6401a380
6401a372:	neg    eax
6401a374:	adc    edx,0x0
6401a377:	neg    edx
6401a379:	or     DWORD PTR [ebp-0x18],0x100
6401a380:	test   WORD PTR [ebp-0x18],0x9000
6401a386:	mov    ebx,edx
6401a388:	mov    edi,eax
6401a38a:	jne    0x6401a38e
6401a38c:	xor    ebx,ebx
6401a38e:	cmp    DWORD PTR [ebp-0x20],0x0
6401a392:	jge    0x6401a39d
6401a394:	mov    DWORD PTR [ebp-0x20],0x1
6401a39b:	jmp    0x6401a3ae
6401a39d:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401a3a1:	mov    eax,0x200
6401a3a6:	cmp    DWORD PTR [ebp-0x20],eax
6401a3a9:	jle    0x6401a3ae
6401a3ab:	mov    DWORD PTR [ebp-0x20],eax
6401a3ae:	mov    eax,edi
6401a3b0:	or     eax,ebx
6401a3b2:	jne    0x6401a3b7
6401a3b4:	and    DWORD PTR [ebp-0x3c],eax
6401a3b7:	lea    esi,[ebp+0x1eb]
6401a3bd:	mov    eax,DWORD PTR [ebp-0x20]
6401a3c0:	dec    DWORD PTR [ebp-0x20]
6401a3c3:	test   eax,eax
6401a3c5:	jg     0x6401a3cd
6401a3c7:	mov    eax,edi
6401a3c9:	or     eax,ebx
6401a3cb:	je     0x6401a3f1
6401a3cd:	mov    eax,DWORD PTR [ebp-0x28]
6401a3d0:	cdq    
6401a3d1:	push   edx
6401a3d2:	push   eax
6401a3d3:	push   ebx
6401a3d4:	push   edi
6401a3d5:	call   0x6401ba40
6401a3da:	add    ecx,0x30
6401a3dd:	cmp    ecx,0x39
6401a3e0:	mov    DWORD PTR [ebp-0x68],ebx
6401a3e3:	mov    edi,eax
6401a3e5:	mov    ebx,edx
6401a3e7:	jle    0x6401a3ec
6401a3e9:	add    ecx,DWORD PTR [ebp-0x4c]
6401a3ec:	mov    BYTE PTR [esi],cl
6401a3ee:	dec    esi
6401a3ef:	jmp    0x6401a3bd
6401a3f1:	lea    eax,[ebp+0x1eb]
6401a3f7:	sub    eax,esi
6401a3f9:	inc    esi
6401a3fa:	test   WORD PTR [ebp-0x18],0x200
6401a400:	mov    DWORD PTR [ebp-0x28],eax
6401a403:	mov    DWORD PTR [ebp-0x24],esi
6401a406:	je     0x6401a454
6401a408:	test   eax,eax
6401a40a:	je     0x6401a413
6401a40c:	mov    ecx,esi
6401a40e:	cmp    BYTE PTR [ecx],0x30
6401a411:	je     0x6401a454
6401a413:	dec    DWORD PTR [ebp-0x24]
6401a416:	mov    ecx,DWORD PTR [ebp-0x24]
6401a419:	mov    BYTE PTR [ecx],0x30
6401a41c:	inc    eax
6401a41d:	jmp    0x6401a451
6401a41f:	dec    ecx
6401a420:	cmp    WORD PTR [eax],si
6401a423:	je     0x6401a42b
6401a425:	inc    eax
6401a426:	inc    eax
6401a427:	cmp    ecx,esi
6401a429:	jne    0x6401a41f
6401a42b:	sub    eax,DWORD PTR [ebp-0x24]
6401a42e:	sar    eax,1
6401a430:	jmp    0x6401a451
6401a432:	cmp    edi,esi
6401a434:	jne    0x6401a43e
6401a436:	mov    eax,ds:0x64038280
6401a43b:	mov    DWORD PTR [ebp-0x24],eax
6401a43e:	mov    eax,DWORD PTR [ebp-0x24]
6401a441:	jmp    0x6401a44a
6401a443:	dec    ecx
6401a444:	cmp    BYTE PTR [eax],0x0
6401a447:	je     0x6401a44e
6401a449:	inc    eax
6401a44a:	cmp    ecx,esi
6401a44c:	jne    0x6401a443
6401a44e:	sub    eax,DWORD PTR [ebp-0x24]
6401a451:	mov    DWORD PTR [ebp-0x28],eax
6401a454:	cmp    DWORD PTR [ebp-0x50],0x0
6401a458:	jne    0x6401a559
6401a45e:	mov    eax,DWORD PTR [ebp-0x18]
6401a461:	test   al,0x40
6401a463:	je     0x6401a48a
6401a465:	test   ax,0x100
6401a469:	je     0x6401a471
6401a46b:	mov    BYTE PTR [ebp-0x38],0x2d
6401a46f:	jmp    0x6401a483
6401a471:	test   al,0x1
6401a473:	je     0x6401a47b
6401a475:	mov    BYTE PTR [ebp-0x38],0x2b
6401a479:	jmp    0x6401a483
6401a47b:	test   al,0x2
6401a47d:	je     0x6401a48a
6401a47f:	mov    BYTE PTR [ebp-0x38],0x20
6401a483:	mov    DWORD PTR [ebp-0x3c],0x1
6401a48a:	mov    ebx,DWORD PTR [ebp-0x40]
6401a48d:	sub    ebx,DWORD PTR [ebp-0x28]
6401a490:	sub    ebx,DWORD PTR [ebp-0x3c]
6401a493:	test   BYTE PTR [ebp-0x18],0xc
6401a497:	jne    0x6401a4aa
6401a499:	push   DWORD PTR [ebp-0x30]
6401a49c:	lea    eax,[ebp-0x34]
6401a49f:	push   ebx
6401a4a0:	push   0x20
6401a4a2:	call   0x64019be2
6401a4a7:	add    esp,0xc
6401a4aa:	push   DWORD PTR [ebp-0x3c]
6401a4ad:	mov    edi,DWORD PTR [ebp-0x30]
6401a4b0:	lea    eax,[ebp-0x34]
6401a4b3:	lea    ecx,[ebp-0x38]
6401a4b6:	call   0x64019c06
6401a4bb:	test   BYTE PTR [ebp-0x18],0x8
6401a4bf:	pop    ecx
6401a4c0:	je     0x6401a4d7
6401a4c2:	test   BYTE PTR [ebp-0x18],0x4
6401a4c6:	jne    0x6401a4d7
6401a4c8:	push   edi
6401a4c9:	push   ebx
6401a4ca:	push   0x30
6401a4cc:	lea    eax,[ebp-0x34]
6401a4cf:	call   0x64019be2
6401a4d4:	add    esp,0xc
6401a4d7:	cmp    DWORD PTR [ebp-0x44],0x0
6401a4db:	mov    eax,DWORD PTR [ebp-0x28]
6401a4de:	je     0x6401a531
6401a4e0:	test   eax,eax
6401a4e2:	jle    0x6401a531
6401a4e4:	mov    esi,DWORD PTR [ebp-0x24]
6401a4e7:	mov    DWORD PTR [ebp-0x68],eax
6401a4ea:	movzx  eax,WORD PTR [esi]
6401a4ed:	dec    DWORD PTR [ebp-0x68]
6401a4f0:	push   eax
6401a4f1:	push   0x6
6401a4f3:	lea    eax,[ebp+0x1ec]
6401a4f9:	push   eax
6401a4fa:	lea    eax,[ebp-0x70]
6401a4fd:	inc    esi
6401a4fe:	push   eax
6401a4ff:	inc    esi
6401a500:	call   0x6401ecae
6401a505:	add    esp,0x10
6401a508:	test   eax,eax
6401a50a:	jne    0x6401a52b
6401a50c:	cmp    DWORD PTR [ebp-0x70],eax
6401a50f:	je     0x6401a52b
6401a511:	push   DWORD PTR [ebp-0x70]
6401a514:	lea    eax,[ebp-0x34]
6401a517:	lea    ecx,[ebp+0x1ec]
6401a51d:	call   0x64019c06
6401a522:	cmp    DWORD PTR [ebp-0x68],0x0
6401a526:	pop    ecx
6401a527:	jne    0x6401a4ea
6401a529:	jmp    0x6401a53e
6401a52b:	or     DWORD PTR [ebp-0x34],0xffffffff
6401a52f:	jmp    0x6401a53e
6401a531:	mov    ecx,DWORD PTR [ebp-0x24]
6401a534:	push   eax
6401a535:	lea    eax,[ebp-0x34]
6401a538:	call   0x64019c06
6401a53d:	pop    ecx
6401a53e:	cmp    DWORD PTR [ebp-0x34],0x0
6401a542:	jl     0x6401a559
6401a544:	test   BYTE PTR [ebp-0x18],0x4
6401a548:	je     0x6401a559
6401a54a:	push   edi
6401a54b:	push   ebx
6401a54c:	push   0x20
6401a54e:	lea    eax,[ebp-0x34]
6401a551:	call   0x64019be2
6401a556:	add    esp,0xc
6401a559:	cmp    DWORD PTR [ebp-0x54],0x0
6401a55d:	je     0x6401a56c
6401a55f:	push   DWORD PTR [ebp-0x54]
6401a562:	call   0x6401475a
6401a567:	and    DWORD PTR [ebp-0x54],0x0
6401a56b:	pop    ecx
6401a56c:	mov    ebx,DWORD PTR [ebp-0x48]
6401a56f:	mov    al,BYTE PTR [ebx]
6401a571:	test   al,al
6401a573:	mov    BYTE PTR [ebp-0x19],al
6401a576:	je     0x6401a59c
6401a578:	mov    ecx,DWORD PTR [ebp-0x74]
6401a57b:	mov    edi,DWORD PTR [ebp-0x2c]
6401a57e:	mov    dl,al
6401a580:	jmp    0x64019dae
6401a585:	call   0x640164c3
6401a58a:	mov    DWORD PTR [eax],0x16
6401a590:	xor    eax,eax
6401a592:	push   eax
6401a593:	push   eax
6401a594:	push   eax
6401a595:	push   eax
6401a596:	push   eax
6401a597:	jmp    0x64019cc0
6401a59c:	cmp    BYTE PTR [ebp-0x58],0x0
6401a5a0:	je     0x6401a5a9
6401a5a2:	mov    eax,DWORD PTR [ebp-0x5c]
6401a5a5:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a5a9:	mov    eax,DWORD PTR [ebp-0x34]
6401a5ac:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401a5b2:	pop    edi
6401a5b3:	pop    esi
6401a5b4:	xor    ecx,ebp
6401a5b6:	pop    ebx
6401a5b7:	call   0x64013d06
6401a5bc:	add    ebp,0x1f8
6401a5c2:	leave  
6401a5c3:	ret    
6401a5c4:	xchg   edx,eax
6401a5c5:	lahf   
6401a5c6:	add    DWORD PTR [ecx+edi*8-0x63],esp
6401a5ca:	add    DWORD PTR [esp+edx*1-0x62],esp
6401a5ce:	add    DWORD PTR [ebx+eiz*2-0x62],esp
6401a5d2:	add    DWORD PTR [ebp+ebx*4-0x62],esp
6401a5d6:	add    DWORD PTR [ebp+eiz*4-0x62],esp
6401a5da:	add    DWORD PTR [esp+ebx*8-0x62],esp
6401a5de:	add    DWORD PTR [esp+edx*8-0x61],esp
6401a5e2:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401a5e6:	in     al,dx
6401a5e7:	sub    esp,0x18
6401a5ea:	push   ebx
6401a5eb:	push   DWORD PTR [ebp+0x10]
6401a5ee:	lea    ecx,[ebp-0x18]
6401a5f1:	call   0x64014325
6401a5f6:	mov    ebx,DWORD PTR [ebp+0x8]
6401a5f9:	lea    eax,[ebx+0x1]
6401a5fc:	cmp    eax,0x100
6401a601:	ja     0x6401a612
6401a603:	mov    eax,DWORD PTR [ebp-0x18]
6401a606:	mov    eax,DWORD PTR [eax+0xc8]
6401a60c:	movzx  eax,WORD PTR [eax+ebx*2]
6401a610:	jmp    0x6401a687
6401a612:	mov    DWORD PTR [ebp+0x8],ebx
6401a615:	sar    DWORD PTR [ebp+0x8],0x8
6401a619:	lea    eax,[ebp-0x18]
6401a61c:	push   eax
6401a61d:	mov    eax,DWORD PTR [ebp+0x8]
6401a620:	and    eax,0xff
6401a625:	push   eax
6401a626:	call   0x64015117
6401a62b:	test   eax,eax
6401a62d:	pop    ecx
6401a62e:	pop    ecx
6401a62f:	je     0x6401a643
6401a631:	mov    al,BYTE PTR [ebp+0x8]
6401a634:	push   0x2
6401a636:	mov    BYTE PTR [ebp-0x8],al
6401a639:	mov    BYTE PTR [ebp-0x7],bl
6401a63c:	mov    BYTE PTR [ebp-0x6],0x0
6401a640:	pop    ecx
6401a641:	jmp    0x6401a64d
6401a643:	xor    ecx,ecx
6401a645:	mov    BYTE PTR [ebp-0x8],bl
6401a648:	mov    BYTE PTR [ebp-0x7],0x0
6401a64c:	inc    ecx
6401a64d:	mov    eax,DWORD PTR [ebp-0x18]
6401a650:	push   0x1
6401a652:	push   DWORD PTR [eax+0x14]
6401a655:	push   DWORD PTR [eax+0x4]
6401a658:	lea    eax,[ebp-0x4]
6401a65b:	push   eax
6401a65c:	push   ecx
6401a65d:	lea    eax,[ebp-0x8]
6401a660:	push   eax
6401a661:	lea    eax,[ebp-0x18]
6401a664:	push   0x1
6401a666:	push   eax
6401a667:	call   0x6401dfd1
6401a66c:	add    esp,0x20
6401a66f:	test   eax,eax
6401a671:	jne    0x6401a683
6401a673:	cmp    BYTE PTR [ebp-0xc],al
6401a676:	je     0x6401a67f
6401a678:	mov    eax,DWORD PTR [ebp-0x10]
6401a67b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a67f:	xor    eax,eax
6401a681:	jmp    0x6401a697
6401a683:	movzx  eax,WORD PTR [ebp-0x4]
6401a687:	and    eax,DWORD PTR [ebp+0xc]
6401a68a:	cmp    BYTE PTR [ebp-0xc],0x0
6401a68e:	je     0x6401a697
6401a690:	mov    ecx,DWORD PTR [ebp-0x10]
6401a693:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401a697:	pop    ebx
6401a698:	leave  
6401a699:	ret    
6401a69a:	push   ebp
6401a69b:	lea    ebp,[esp-0x514]
6401a6a2:	sub    esp,0x590
6401a6a8:	mov    eax,ds:0x64037644
6401a6ad:	xor    eax,ebp
6401a6af:	mov    DWORD PTR [ebp+0x510],eax
6401a6b5:	mov    eax,DWORD PTR [ebp+0x520]
6401a6bb:	push   esi
6401a6bc:	xor    esi,esi
6401a6be:	cmp    DWORD PTR [ebp+0x524],esi
6401a6c4:	mov    DWORD PTR [ebp-0x64],eax
6401a6c7:	mov    DWORD PTR [ebp-0x60],esi
6401a6ca:	mov    DWORD PTR [ebp-0x68],esi
6401a6cd:	jne    0x6401a6d6
6401a6cf:	xor    eax,eax
6401a6d1:	jmp    0x6401aca6
6401a6d6:	cmp    eax,esi
6401a6d8:	jne    0x6401a701
6401a6da:	call   0x640164d6
6401a6df:	mov    DWORD PTR [eax],esi
6401a6e1:	call   0x640164c3
6401a6e6:	push   esi
6401a6e7:	push   esi
6401a6e8:	push   esi
6401a6e9:	push   esi
6401a6ea:	push   esi
6401a6eb:	mov    DWORD PTR [eax],0x16
6401a6f1:	call   0x64013e52
6401a6f6:	add    esp,0x14
6401a6f9:	or     eax,0xffffffff
6401a6fc:	jmp    0x6401aca6
6401a701:	push   ebx
6401a702:	push   edi
6401a703:	mov    edi,DWORD PTR [ebp+0x51c]
6401a709:	mov    eax,edi
6401a70b:	sar    eax,0x5
6401a70e:	lea    esi,[eax*4+0x6403ab80]
6401a715:	mov    eax,DWORD PTR [esi]
6401a717:	and    edi,0x1f
6401a71a:	shl    edi,0x6
6401a71d:	add    eax,edi
6401a71f:	mov    bl,BYTE PTR [eax+0x24]
6401a722:	add    bl,bl
6401a724:	sar    bl,1
6401a726:	cmp    bl,0x2
6401a729:	mov    DWORD PTR [ebp-0x70],esi
6401a72c:	mov    BYTE PTR [ebp-0x71],bl
6401a72f:	je     0x6401a736
6401a731:	cmp    bl,0x1
6401a734:	jne    0x6401a769
6401a736:	mov    ecx,DWORD PTR [ebp+0x524]
6401a73c:	not    ecx
6401a73e:	test   cl,0x1
6401a741:	jne    0x6401a769
6401a743:	call   0x640164d6
6401a748:	xor    esi,esi
6401a74a:	mov    DWORD PTR [eax],esi
6401a74c:	call   0x640164c3
6401a751:	push   esi
6401a752:	push   esi
6401a753:	push   esi
6401a754:	push   esi
6401a755:	push   esi
6401a756:	mov    DWORD PTR [eax],0x16
6401a75c:	call   0x64013e52
6401a761:	add    esp,0x14
6401a764:	jmp    0x6401ac99
6401a769:	test   BYTE PTR [eax+0x4],0x20
6401a76d:	je     0x6401a783
6401a76f:	push   0x2
6401a771:	push   0x0
6401a773:	push   0x0
6401a775:	push   DWORD PTR [ebp+0x51c]
6401a77b:	call   0x6401bf47
6401a780:	add    esp,0x10
6401a783:	push   DWORD PTR [ebp+0x51c]
6401a789:	call   0x6401eadb
6401a78e:	test   eax,eax
6401a790:	pop    ecx
6401a791:	je     0x6401a9d0
6401a797:	mov    eax,DWORD PTR [esi]
6401a799:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401a79e:	je     0x6401a9d0
6401a7a4:	call   0x6401782a
6401a7a9:	mov    eax,DWORD PTR [eax+0x6c]
6401a7ac:	xor    ecx,ecx
6401a7ae:	cmp    DWORD PTR [eax+0x14],ecx
6401a7b1:	lea    eax,[ebp-0x7c]
6401a7b4:	sete   cl
6401a7b7:	push   eax
6401a7b8:	mov    eax,DWORD PTR [esi]
6401a7ba:	push   DWORD PTR [edi+eax*1]
6401a7bd:	mov    DWORD PTR [ebp-0x78],ecx
6401a7c0:	call   DWORD PTR ds:0x64024140
6401a7c6:	test   eax,eax
6401a7c8:	je     0x6401a9d0
6401a7ce:	xor    ecx,ecx
6401a7d0:	cmp    DWORD PTR [ebp-0x78],ecx
6401a7d3:	je     0x6401a7dd
6401a7d5:	test   bl,bl
6401a7d7:	je     0x6401a9d2
6401a7dd:	call   DWORD PTR ds:0x640241d8
6401a7e3:	mov    ebx,DWORD PTR [ebp-0x64]
6401a7e6:	mov    DWORD PTR [ebp-0x7c],eax
6401a7e9:	xor    eax,eax
6401a7eb:	cmp    DWORD PTR [ebp+0x524],eax
6401a7f1:	mov    DWORD PTR [ebp-0x5c],eax
6401a7f4:	jbe    0x6401ac41
6401a7fa:	mov    DWORD PTR [ebp-0x54],eax
6401a7fd:	mov    al,BYTE PTR [ebp-0x71]
6401a800:	test   al,al
6401a802:	jne    0x6401a945
6401a808:	mov    cl,BYTE PTR [ebx]
6401a80a:	mov    esi,DWORD PTR [ebp-0x70]
6401a80d:	xor    eax,eax
6401a80f:	cmp    cl,0xa
6401a812:	sete   al
6401a815:	mov    DWORD PTR [ebp-0x78],eax
6401a818:	mov    eax,DWORD PTR [esi]
6401a81a:	add    eax,edi
6401a81c:	cmp    DWORD PTR [eax+0x38],0x0
6401a820:	je     0x6401a840
6401a822:	mov    dl,BYTE PTR [eax+0x34]
6401a825:	mov    BYTE PTR [ebp+0x508],dl
6401a82b:	mov    BYTE PTR [ebp+0x509],cl
6401a831:	and    DWORD PTR [eax+0x38],0x0
6401a835:	push   0x2
6401a837:	lea    eax,[ebp+0x508]
6401a83d:	push   eax
6401a83e:	jmp    0x6401a885
6401a840:	movsx  eax,cl
6401a843:	push   eax
6401a844:	call   0x6401514d
6401a849:	test   eax,eax
6401a84b:	pop    ecx
6401a84c:	je     0x6401a882
6401a84e:	mov    ecx,DWORD PTR [ebp-0x64]
6401a851:	sub    ecx,ebx
6401a853:	add    ecx,DWORD PTR [ebp+0x524]
6401a859:	xor    eax,eax
6401a85b:	inc    eax
6401a85c:	cmp    ecx,eax
6401a85e:	jbe    0x6401a9ba
6401a864:	push   0x2
6401a866:	lea    eax,[ebp-0x58]
6401a869:	push   ebx
6401a86a:	push   eax
6401a86b:	call   0x6401ee9e
6401a870:	add    esp,0xc
6401a873:	cmp    eax,0xffffffff
6401a876:	je     0x6401ac3b
6401a87c:	inc    ebx
6401a87d:	inc    DWORD PTR [ebp-0x54]
6401a880:	jmp    0x6401a89a
6401a882:	push   0x1
6401a884:	push   ebx
6401a885:	lea    eax,[ebp-0x58]
6401a888:	push   eax
6401a889:	call   0x6401ee9e
6401a88e:	add    esp,0xc
6401a891:	cmp    eax,0xffffffff
6401a894:	je     0x6401ac3b
6401a89a:	xor    eax,eax
6401a89c:	push   eax
6401a89d:	push   eax
6401a89e:	push   0x5
6401a8a0:	lea    ecx,[ebp+0x508]
6401a8a6:	push   ecx
6401a8a7:	push   0x1
6401a8a9:	lea    ecx,[ebp-0x58]
6401a8ac:	push   ecx
6401a8ad:	push   eax
6401a8ae:	push   DWORD PTR [ebp-0x7c]
6401a8b1:	inc    ebx
6401a8b2:	inc    DWORD PTR [ebp-0x54]
6401a8b5:	call   DWORD PTR ds:0x64024010
6401a8bb:	mov    esi,eax
6401a8bd:	test   esi,esi
6401a8bf:	je     0x6401ac3b
6401a8c5:	push   0x0
6401a8c7:	lea    eax,[ebp-0x5c]
6401a8ca:	push   eax
6401a8cb:	push   esi
6401a8cc:	lea    eax,[ebp+0x508]
6401a8d2:	push   eax
6401a8d3:	mov    eax,DWORD PTR [ebp-0x70]
6401a8d6:	mov    eax,DWORD PTR [eax]
6401a8d8:	push   DWORD PTR [edi+eax*1]
6401a8db:	call   DWORD PTR ds:0x64024090
6401a8e1:	test   eax,eax
6401a8e3:	je     0x6401ac32
6401a8e9:	mov    eax,DWORD PTR [ebp-0x54]
6401a8ec:	mov    ecx,DWORD PTR [ebp-0x68]
6401a8ef:	add    eax,ecx
6401a8f1:	cmp    DWORD PTR [ebp-0x5c],esi
6401a8f4:	mov    DWORD PTR [ebp-0x60],eax
6401a8f7:	jl     0x6401ac3b
6401a8fd:	cmp    DWORD PTR [ebp-0x78],0x0
6401a901:	je     0x6401a9a6
6401a907:	push   0x0
6401a909:	lea    eax,[ebp-0x5c]
6401a90c:	push   eax
6401a90d:	push   0x1
6401a90f:	lea    eax,[ebp+0x508]
6401a915:	push   eax
6401a916:	mov    eax,DWORD PTR [ebp-0x70]
6401a919:	mov    eax,DWORD PTR [eax]
6401a91b:	mov    BYTE PTR [ebp+0x508],0xd
6401a922:	push   DWORD PTR [edi+eax*1]
6401a925:	call   DWORD PTR ds:0x64024090
6401a92b:	test   eax,eax
6401a92d:	je     0x6401ac32
6401a933:	cmp    DWORD PTR [ebp-0x5c],0x1
6401a937:	jl     0x6401ac3b
6401a93d:	inc    DWORD PTR [ebp-0x68]
6401a940:	inc    DWORD PTR [ebp-0x60]
6401a943:	jmp    0x6401a9a6
6401a945:	cmp    al,0x1
6401a947:	je     0x6401a94d
6401a949:	cmp    al,0x2
6401a94b:	jne    0x6401a965
6401a94d:	movzx  esi,WORD PTR [ebx]
6401a950:	xor    ecx,ecx
6401a952:	cmp    si,0xa
6401a956:	sete   cl
6401a959:	inc    ebx
6401a95a:	inc    ebx
6401a95b:	add    DWORD PTR [ebp-0x54],0x2
6401a95f:	mov    DWORD PTR [ebp-0x58],esi
6401a962:	mov    DWORD PTR [ebp-0x78],ecx
6401a965:	cmp    al,0x1
6401a967:	je     0x6401a96d
6401a969:	cmp    al,0x2
6401a96b:	jne    0x6401a9a6
6401a96d:	push   DWORD PTR [ebp-0x58]
6401a970:	call   0x6401ecc9
6401a975:	cmp    ax,WORD PTR [ebp-0x58]
6401a979:	pop    ecx
6401a97a:	jne    0x6401ac32
6401a980:	inc    DWORD PTR [ebp-0x60]
6401a983:	cmp    DWORD PTR [ebp-0x78],0x0
6401a987:	je     0x6401a9a6
6401a989:	push   0xd
6401a98b:	pop    eax
6401a98c:	push   eax
6401a98d:	mov    DWORD PTR [ebp-0x58],eax
6401a990:	call   0x6401ecc9
6401a995:	cmp    ax,WORD PTR [ebp-0x58]
6401a999:	pop    ecx
6401a99a:	jne    0x6401ac32
6401a9a0:	inc    DWORD PTR [ebp-0x60]
6401a9a3:	inc    DWORD PTR [ebp-0x68]
6401a9a6:	mov    eax,DWORD PTR [ebp+0x524]
6401a9ac:	cmp    DWORD PTR [ebp-0x54],eax
6401a9af:	jb     0x6401a7fd
6401a9b5:	jmp    0x6401ac3b
6401a9ba:	mov    ecx,DWORD PTR [esi]
6401a9bc:	mov    dl,BYTE PTR [ebx]
6401a9be:	inc    DWORD PTR [ebp-0x60]
6401a9c1:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401a9c5:	mov    ecx,DWORD PTR [esi]
6401a9c7:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401a9cb:	jmp    0x6401ac3b
6401a9d0:	xor    ecx,ecx
6401a9d2:	mov    eax,DWORD PTR [esi]
6401a9d4:	add    eax,edi
6401a9d6:	test   BYTE PTR [eax+0x4],0x80
6401a9da:	je     0x6401ac0b
6401a9e0:	test   bl,bl
6401a9e2:	mov    eax,DWORD PTR [ebp-0x64]
6401a9e5:	mov    DWORD PTR [ebp-0x58],ecx
6401a9e8:	jne    0x6401aa84
6401a9ee:	cmp    DWORD PTR [ebp+0x524],ecx
6401a9f4:	mov    DWORD PTR [ebp-0x5c],eax
6401a9f7:	jbe    0x6401ac71
6401a9fd:	jmp    0x6401aa02
6401a9ff:	mov    esi,DWORD PTR [ebp-0x70]
6401aa02:	mov    ecx,DWORD PTR [ebp-0x5c]
6401aa05:	and    DWORD PTR [ebp-0x54],0x0
6401aa09:	sub    ecx,DWORD PTR [ebp-0x64]
6401aa0c:	lea    eax,[ebp-0x50]
6401aa0f:	cmp    ecx,DWORD PTR [ebp+0x524]
6401aa15:	jae    0x6401aa3e
6401aa17:	mov    edx,DWORD PTR [ebp-0x5c]
6401aa1a:	inc    DWORD PTR [ebp-0x5c]
6401aa1d:	mov    dl,BYTE PTR [edx]
6401aa1f:	inc    ecx
6401aa20:	cmp    dl,0xa
6401aa23:	jne    0x6401aa2f
6401aa25:	inc    DWORD PTR [ebp-0x68]
6401aa28:	mov    BYTE PTR [eax],0xd
6401aa2b:	inc    eax
6401aa2c:	inc    DWORD PTR [ebp-0x54]
6401aa2f:	mov    BYTE PTR [eax],dl
6401aa31:	inc    eax
6401aa32:	inc    DWORD PTR [ebp-0x54]
6401aa35:	cmp    DWORD PTR [ebp-0x54],0x400
6401aa3c:	jb     0x6401aa0f
6401aa3e:	mov    ebx,eax
6401aa40:	lea    eax,[ebp-0x50]
6401aa43:	sub    ebx,eax
6401aa45:	push   0x0
6401aa47:	lea    eax,[ebp-0x6c]
6401aa4a:	push   eax
6401aa4b:	push   ebx
6401aa4c:	lea    eax,[ebp-0x50]
6401aa4f:	push   eax
6401aa50:	mov    eax,DWORD PTR [esi]
6401aa52:	push   DWORD PTR [edi+eax*1]
6401aa55:	call   DWORD PTR ds:0x64024090
6401aa5b:	test   eax,eax
6401aa5d:	je     0x6401ac32
6401aa63:	mov    eax,DWORD PTR [ebp-0x6c]
6401aa66:	add    DWORD PTR [ebp-0x60],eax
6401aa69:	cmp    eax,ebx
6401aa6b:	jl     0x6401ac3b
6401aa71:	mov    eax,DWORD PTR [ebp-0x5c]
6401aa74:	sub    eax,DWORD PTR [ebp-0x64]
6401aa77:	cmp    eax,DWORD PTR [ebp+0x524]
6401aa7d:	jb     0x6401a9ff
6401aa7f:	jmp    0x6401ac3b
6401aa84:	cmp    bl,0x2
6401aa87:	mov    DWORD PTR [ebp-0x54],eax
6401aa8a:	jne    0x6401ab33
6401aa90:	cmp    DWORD PTR [ebp+0x524],ecx
6401aa96:	jbe    0x6401ac71
6401aa9c:	jmp    0x6401aaa1
6401aa9e:	mov    esi,DWORD PTR [ebp-0x70]
6401aaa1:	mov    ecx,DWORD PTR [ebp-0x54]
6401aaa4:	and    DWORD PTR [ebp-0x5c],0x0
6401aaa8:	sub    ecx,DWORD PTR [ebp-0x64]
6401aaab:	lea    eax,[ebp-0x50]
6401aaae:	cmp    ecx,DWORD PTR [ebp+0x524]
6401aab4:	jae    0x6401aae9
6401aab6:	mov    edx,DWORD PTR [ebp-0x54]
6401aab9:	add    DWORD PTR [ebp-0x54],0x2
6401aabd:	movzx  edx,WORD PTR [edx]
6401aac0:	inc    ecx
6401aac1:	inc    ecx
6401aac2:	cmp    dx,0xa
6401aac6:	jne    0x6401aad7
6401aac8:	add    DWORD PTR [ebp-0x68],0x2
6401aacc:	mov    WORD PTR [eax],0xd
6401aad1:	inc    eax
6401aad2:	inc    eax
6401aad3:	add    DWORD PTR [ebp-0x5c],0x2
6401aad7:	add    DWORD PTR [ebp-0x5c],0x2
6401aadb:	mov    WORD PTR [eax],dx
6401aade:	inc    eax
6401aadf:	inc    eax
6401aae0:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401aae7:	jb     0x6401aaae
6401aae9:	mov    ebx,eax
6401aaeb:	lea    eax,[ebp-0x50]
6401aaee:	sub    ebx,eax
6401aaf0:	push   0x0
6401aaf2:	lea    eax,[ebp-0x6c]
6401aaf5:	push   eax
6401aaf6:	push   ebx
6401aaf7:	lea    eax,[ebp-0x50]
6401aafa:	push   eax
6401aafb:	mov    eax,DWORD PTR [esi]
6401aafd:	push   DWORD PTR [edi+eax*1]
6401ab00:	call   DWORD PTR ds:0x64024090
6401ab06:	test   eax,eax
6401ab08:	je     0x6401ac32
6401ab0e:	mov    eax,DWORD PTR [ebp-0x6c]
6401ab11:	add    DWORD PTR [ebp-0x60],eax
6401ab14:	cmp    eax,ebx
6401ab16:	jl     0x6401ac3b
6401ab1c:	mov    eax,DWORD PTR [ebp-0x54]
6401ab1f:	sub    eax,DWORD PTR [ebp-0x64]
6401ab22:	cmp    eax,DWORD PTR [ebp+0x524]
6401ab28:	jb     0x6401aa9e
6401ab2e:	jmp    0x6401ac3b
6401ab33:	cmp    DWORD PTR [ebp+0x524],ecx
6401ab39:	jbe    0x6401ac71
6401ab3f:	mov    ecx,DWORD PTR [ebp-0x54]
6401ab42:	and    DWORD PTR [ebp-0x5c],0x0
6401ab46:	sub    ecx,DWORD PTR [ebp-0x64]
6401ab49:	push   0x2
6401ab4b:	lea    eax,[ebp+0x3b4]
6401ab51:	pop    esi
6401ab52:	cmp    ecx,DWORD PTR [ebp+0x524]
6401ab58:	jae    0x6401ab86
6401ab5a:	mov    edx,DWORD PTR [ebp-0x54]
6401ab5d:	movzx  edx,WORD PTR [edx]
6401ab60:	add    DWORD PTR [ebp-0x54],esi
6401ab63:	add    ecx,esi
6401ab65:	cmp    dx,0xa
6401ab69:	jne    0x6401ab75
6401ab6b:	mov    WORD PTR [eax],0xd
6401ab70:	add    eax,esi
6401ab72:	add    DWORD PTR [ebp-0x5c],esi
6401ab75:	add    DWORD PTR [ebp-0x5c],esi
6401ab78:	mov    WORD PTR [eax],dx
6401ab7b:	add    eax,esi
6401ab7d:	cmp    DWORD PTR [ebp-0x5c],0x152
6401ab84:	jb     0x6401ab52
6401ab86:	xor    esi,esi
6401ab88:	push   esi
6401ab89:	push   esi
6401ab8a:	push   0x2ab
6401ab8f:	lea    ecx,[ebp+0x104]
6401ab95:	push   ecx
6401ab96:	lea    ecx,[ebp+0x3b4]
6401ab9c:	sub    eax,ecx
6401ab9e:	cdq    
6401ab9f:	sub    eax,edx
6401aba1:	sar    eax,1
6401aba3:	push   eax
6401aba4:	mov    eax,ecx
6401aba6:	push   eax
6401aba7:	push   esi
6401aba8:	push   0xfde9
6401abad:	call   DWORD PTR ds:0x64024010
6401abb3:	mov    ebx,eax
6401abb5:	cmp    ebx,esi
6401abb7:	je     0x6401ac32
6401abb9:	push   0x0
6401abbb:	lea    eax,[ebp-0x6c]
6401abbe:	push   eax
6401abbf:	mov    eax,ebx
6401abc1:	sub    eax,esi
6401abc3:	push   eax
6401abc4:	lea    eax,[ebp+esi*1+0x104]
6401abcb:	push   eax
6401abcc:	mov    eax,DWORD PTR [ebp-0x70]
6401abcf:	mov    eax,DWORD PTR [eax]
6401abd1:	push   DWORD PTR [edi+eax*1]
6401abd4:	call   DWORD PTR ds:0x64024090
6401abda:	test   eax,eax
6401abdc:	je     0x6401abe7
6401abde:	add    esi,DWORD PTR [ebp-0x6c]
6401abe1:	cmp    ebx,esi
6401abe3:	jg     0x6401abb9
6401abe5:	jmp    0x6401abf0
6401abe7:	call   DWORD PTR ds:0x64024064
6401abed:	mov    DWORD PTR [ebp-0x58],eax
6401abf0:	cmp    ebx,esi
6401abf2:	jg     0x6401ac3b
6401abf4:	mov    eax,DWORD PTR [ebp-0x54]
6401abf7:	sub    eax,DWORD PTR [ebp-0x64]
6401abfa:	cmp    eax,DWORD PTR [ebp+0x524]
6401ac00:	mov    DWORD PTR [ebp-0x60],eax
6401ac03:	jb     0x6401ab3f
6401ac09:	jmp    0x6401ac3b
6401ac0b:	push   0x0
6401ac0d:	lea    ecx,[ebp-0x6c]
6401ac10:	push   ecx
6401ac11:	push   DWORD PTR [ebp+0x524]
6401ac17:	push   DWORD PTR [ebp-0x64]
6401ac1a:	push   DWORD PTR [eax]
6401ac1c:	call   DWORD PTR ds:0x64024090
6401ac22:	test   eax,eax
6401ac24:	je     0x6401ac32
6401ac26:	mov    eax,DWORD PTR [ebp-0x6c]
6401ac29:	and    DWORD PTR [ebp-0x58],0x0
6401ac2d:	mov    DWORD PTR [ebp-0x60],eax
6401ac30:	jmp    0x6401ac3b
6401ac32:	call   DWORD PTR ds:0x64024064
6401ac38:	mov    DWORD PTR [ebp-0x58],eax
6401ac3b:	cmp    DWORD PTR [ebp-0x60],0x0
6401ac3f:	jne    0x6401ac9e
6401ac41:	cmp    DWORD PTR [ebp-0x58],0x0
6401ac45:	je     0x6401ac6e
6401ac47:	push   0x5
6401ac49:	pop    esi
6401ac4a:	cmp    DWORD PTR [ebp-0x58],esi
6401ac4d:	jne    0x6401ac63
6401ac4f:	call   0x640164c3
6401ac54:	mov    DWORD PTR [eax],0x9
6401ac5a:	call   0x640164d6
6401ac5f:	mov    DWORD PTR [eax],esi
6401ac61:	jmp    0x6401ac99
6401ac63:	push   DWORD PTR [ebp-0x58]
6401ac66:	call   0x640164e9
6401ac6b:	pop    ecx
6401ac6c:	jmp    0x6401ac99
6401ac6e:	mov    esi,DWORD PTR [ebp-0x70]
6401ac71:	mov    eax,DWORD PTR [esi]
6401ac73:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401ac78:	je     0x6401ac86
6401ac7a:	mov    eax,DWORD PTR [ebp-0x64]
6401ac7d:	cmp    BYTE PTR [eax],0x1a
6401ac80:	jne    0x6401ac86
6401ac82:	xor    eax,eax
6401ac84:	jmp    0x6401aca4
6401ac86:	call   0x640164c3
6401ac8b:	mov    DWORD PTR [eax],0x1c
6401ac91:	call   0x640164d6
6401ac96:	and    DWORD PTR [eax],0x0
6401ac99:	or     eax,0xffffffff
6401ac9c:	jmp    0x6401aca4
6401ac9e:	mov    eax,DWORD PTR [ebp-0x60]
6401aca1:	sub    eax,DWORD PTR [ebp-0x68]
6401aca4:	pop    edi
6401aca5:	pop    ebx
6401aca6:	mov    ecx,DWORD PTR [ebp+0x510]
6401acac:	xor    ecx,ebp
6401acae:	pop    esi
6401acaf:	call   0x64013d06
6401acb4:	add    ebp,0x514
6401acba:	leave  
6401acbb:	ret    
6401acbc:	push   0x10
6401acbe:	push   0x6402ba88
6401acc3:	call   0x64015f14
6401acc8:	mov    eax,DWORD PTR [ebp+0x8]
6401accb:	cmp    eax,0xfffffffe
6401acce:	jne    0x6401aceb
6401acd0:	call   0x640164d6
6401acd5:	and    DWORD PTR [eax],0x0
6401acd8:	call   0x640164c3
6401acdd:	mov    DWORD PTR [eax],0x9
6401ace3:	or     eax,0xffffffff
6401ace6:	jmp    0x6401ad88
6401aceb:	xor    edi,edi
6401aced:	cmp    eax,edi
6401acef:	jl     0x6401acf9
6401acf1:	cmp    eax,DWORD PTR ds:0x6403ab68
6401acf7:	jb     0x6401ad1a
6401acf9:	call   0x640164d6
6401acfe:	mov    DWORD PTR [eax],edi
6401ad00:	call   0x640164c3
6401ad05:	mov    DWORD PTR [eax],0x9
6401ad0b:	push   edi
6401ad0c:	push   edi
6401ad0d:	push   edi
6401ad0e:	push   edi
6401ad0f:	push   edi
6401ad10:	call   0x64013e52
6401ad15:	add    esp,0x14
6401ad18:	jmp    0x6401ace3
6401ad1a:	mov    ecx,eax
6401ad1c:	sar    ecx,0x5
6401ad1f:	lea    ebx,[ecx*4+0x6403ab80]
6401ad26:	mov    esi,eax
6401ad28:	and    esi,0x1f
6401ad2b:	shl    esi,0x6
6401ad2e:	mov    ecx,DWORD PTR [ebx]
6401ad30:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401ad35:	and    ecx,0x1
6401ad38:	je     0x6401acf9
6401ad3a:	push   eax
6401ad3b:	call   0x6401be85
6401ad40:	pop    ecx
6401ad41:	mov    DWORD PTR [ebp-0x4],edi
6401ad44:	mov    eax,DWORD PTR [ebx]
6401ad46:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401ad4b:	je     0x6401ad63
6401ad4d:	push   DWORD PTR [ebp+0x10]
6401ad50:	push   DWORD PTR [ebp+0xc]
6401ad53:	push   DWORD PTR [ebp+0x8]
6401ad56:	call   0x6401a69a
6401ad5b:	add    esp,0xc
6401ad5e:	mov    DWORD PTR [ebp-0x1c],eax
6401ad61:	jmp    0x6401ad79
6401ad63:	call   0x640164c3
6401ad68:	mov    DWORD PTR [eax],0x9
6401ad6e:	call   0x640164d6
6401ad73:	mov    DWORD PTR [eax],edi
6401ad75:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ad79:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ad80:	call   0x6401ad8e
6401ad85:	mov    eax,DWORD PTR [ebp-0x1c]
6401ad88:	call   0x64015f59
6401ad8d:	ret    
6401ad8e:	push   DWORD PTR [ebp+0x8]
6401ad91:	call   0x6401bf25
6401ad96:	pop    ecx
6401ad97:	ret    
6401ad98:	push   esi
6401ad99:	push   edi
6401ad9a:	xor    esi,esi
6401ad9c:	mov    edi,0x640393a0
6401ada1:	cmp    DWORD PTR [esi*8+0x6403828c],0x1
6401ada9:	jne    0x6401adc9
6401adab:	lea    eax,[esi*8+0x64038288]
6401adb2:	mov    DWORD PTR [eax],edi
6401adb4:	push   0xfa0
6401adb9:	push   DWORD PTR [eax]
6401adbb:	add    edi,0x18
6401adbe:	call   0x6401e852
6401adc3:	test   eax,eax
6401adc5:	pop    ecx
6401adc6:	pop    ecx
6401adc7:	je     0x6401add5
6401adc9:	inc    esi
6401adca:	cmp    esi,0x24
6401adcd:	jl     0x6401ada1
6401adcf:	xor    eax,eax
6401add1:	inc    eax
6401add2:	pop    edi
6401add3:	pop    esi
6401add4:	ret    
6401add5:	and    DWORD PTR [esi*8+0x64038288],0x0
6401addd:	xor    eax,eax
6401addf:	jmp    0x6401add2
6401ade1:	push   ebx
6401ade2:	mov    ebx,DWORD PTR ds:0x64024158
6401ade8:	push   esi
6401ade9:	mov    esi,0x64038288
6401adee:	push   edi
6401adef:	mov    edi,DWORD PTR [esi]
6401adf1:	test   edi,edi
6401adf3:	je     0x6401ae08
6401adf5:	cmp    DWORD PTR [esi+0x4],0x1
6401adf9:	je     0x6401ae08
6401adfb:	push   edi
6401adfc:	call   ebx
6401adfe:	push   edi
6401adff:	call   0x6401475a
6401ae04:	and    DWORD PTR [esi],0x0
6401ae07:	pop    ecx
6401ae08:	add    esi,0x8
6401ae0b:	cmp    esi,0x640383a8
6401ae11:	jl     0x6401adef
6401ae13:	mov    esi,0x64038288
6401ae18:	pop    edi
6401ae19:	mov    eax,DWORD PTR [esi]
6401ae1b:	test   eax,eax
6401ae1d:	je     0x6401ae28
6401ae1f:	cmp    DWORD PTR [esi+0x4],0x1
6401ae23:	jne    0x6401ae28
6401ae25:	push   eax
6401ae26:	call   ebx
6401ae28:	add    esi,0x8
6401ae2b:	cmp    esi,0x640383a8
6401ae31:	jl     0x6401ae19
6401ae33:	pop    esi
6401ae34:	pop    ebx
6401ae35:	ret    
6401ae36:	push   ebp
6401ae37:	mov    ebp,esp
6401ae39:	mov    eax,DWORD PTR [ebp+0x8]
6401ae3c:	push   DWORD PTR [eax*8+0x64038288]
6401ae43:	call   DWORD PTR ds:0x64024160
6401ae49:	pop    ebp
6401ae4a:	ret    
6401ae4b:	push   0xc
6401ae4d:	push   0x6402baa8
6401ae52:	call   0x64015f14
6401ae57:	xor    edi,edi
6401ae59:	inc    edi
6401ae5a:	mov    DWORD PTR [ebp-0x1c],edi
6401ae5d:	xor    ebx,ebx
6401ae5f:	cmp    DWORD PTR ds:0x64039354,ebx
6401ae65:	jne    0x6401ae7f
6401ae67:	call   0x6401bcad
6401ae6c:	push   0x1e
6401ae6e:	call   0x6401bb0d
6401ae73:	push   0xff
6401ae78:	call   0x64017e60
6401ae7d:	pop    ecx
6401ae7e:	pop    ecx
6401ae7f:	mov    esi,DWORD PTR [ebp+0x8]
6401ae82:	lea    esi,[esi*8+0x64038288]
6401ae89:	cmp    DWORD PTR [esi],ebx
6401ae8b:	je     0x6401ae91
6401ae8d:	mov    eax,edi
6401ae8f:	jmp    0x6401aeff
6401ae91:	push   0x18
6401ae93:	call   0x64015d2f
6401ae98:	pop    ecx
6401ae99:	mov    edi,eax
6401ae9b:	cmp    edi,ebx
6401ae9d:	jne    0x6401aeae
6401ae9f:	call   0x640164c3
6401aea4:	mov    DWORD PTR [eax],0xc
6401aeaa:	xor    eax,eax
6401aeac:	jmp    0x6401aeff
6401aeae:	push   0xa
6401aeb0:	call   0x6401af0e
6401aeb5:	pop    ecx
6401aeb6:	mov    DWORD PTR [ebp-0x4],ebx
6401aeb9:	cmp    DWORD PTR [esi],ebx
6401aebb:	jne    0x6401aee9
6401aebd:	push   0xfa0
6401aec2:	push   edi
6401aec3:	call   0x6401e852
6401aec8:	pop    ecx
6401aec9:	pop    ecx
6401aeca:	test   eax,eax
6401aecc:	jne    0x6401aee5
6401aece:	push   edi
6401aecf:	call   0x6401475a
6401aed4:	pop    ecx
6401aed5:	call   0x640164c3
6401aeda:	mov    DWORD PTR [eax],0xc
6401aee0:	mov    DWORD PTR [ebp-0x1c],ebx
6401aee3:	jmp    0x6401aef0
6401aee5:	mov    DWORD PTR [esi],edi
6401aee7:	jmp    0x6401aef0
6401aee9:	push   edi
6401aeea:	call   0x6401475a
6401aeef:	pop    ecx
6401aef0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401aef7:	call   0x6401af05
6401aefc:	mov    eax,DWORD PTR [ebp-0x1c]
6401aeff:	call   0x64015f59
6401af04:	ret    
6401af05:	push   0xa
6401af07:	call   0x6401ae36
6401af0c:	pop    ecx
6401af0d:	ret    
6401af0e:	push   ebp
6401af0f:	mov    ebp,esp
6401af11:	mov    eax,DWORD PTR [ebp+0x8]
6401af14:	push   esi
6401af15:	lea    esi,[eax*8+0x64038288]
6401af1c:	cmp    DWORD PTR [esi],0x0
6401af1f:	jne    0x6401af34
6401af21:	push   eax
6401af22:	call   0x6401ae4b
6401af27:	test   eax,eax
6401af29:	pop    ecx
6401af2a:	jne    0x6401af34
6401af2c:	push   0x11
6401af2e:	call   0x64017e16
6401af33:	pop    ecx
6401af34:	push   DWORD PTR [esi]
6401af36:	call   DWORD PTR ds:0x6402415c
6401af3c:	pop    esi
6401af3d:	pop    ebp
6401af3e:	ret    
6401af3f:	push   0x140
6401af44:	push   0x0
6401af46:	push   DWORD PTR ds:0x64039354
6401af4c:	call   DWORD PTR ds:0x6402417c
6401af52:	test   eax,eax
6401af54:	mov    ds:0x64039b2c,eax
6401af59:	jne    0x6401af5c
6401af5b:	ret    
6401af5c:	mov    ecx,DWORD PTR [esp+0x4]
6401af60:	and    DWORD PTR ds:0x640394f0,0x0
6401af67:	and    DWORD PTR ds:0x64039b28,0x0
6401af6e:	mov    ds:0x64039b34,eax
6401af73:	xor    eax,eax
6401af75:	mov    DWORD PTR ds:0x64039b30,ecx
6401af7b:	mov    DWORD PTR ds:0x64039b38,0x10
6401af85:	inc    eax
6401af86:	ret    
6401af87:	mov    ecx,DWORD PTR ds:0x64039b28
6401af8d:	mov    eax,ds:0x64039b2c
6401af92:	imul   ecx,ecx,0x14
6401af95:	add    ecx,eax
6401af97:	jmp    0x6401afab
6401af99:	mov    edx,DWORD PTR [esp+0x4]
6401af9d:	sub    edx,DWORD PTR [eax+0xc]
6401afa0:	cmp    edx,0x100000
6401afa6:	jb     0x6401afb1
6401afa8:	add    eax,0x14
6401afab:	cmp    eax,ecx
6401afad:	jb     0x6401af99
6401afaf:	xor    eax,eax
6401afb1:	ret    
6401afb2:	push   ebp
6401afb3:	mov    ebp,esp
6401afb5:	sub    esp,0x10
6401afb8:	mov    ecx,DWORD PTR [ebp+0x8]
6401afbb:	mov    eax,DWORD PTR [ecx+0x10]
6401afbe:	push   esi
6401afbf:	mov    esi,DWORD PTR [ebp+0xc]
6401afc2:	push   edi
6401afc3:	mov    edi,esi
6401afc5:	sub    edi,DWORD PTR [ecx+0xc]
6401afc8:	add    esi,0xfffffffc
6401afcb:	shr    edi,0xf
6401afce:	mov    ecx,edi
6401afd0:	imul   ecx,ecx,0x204
6401afd6:	lea    ecx,[ecx+eax*1+0x144]
6401afdd:	mov    DWORD PTR [ebp-0x10],ecx
6401afe0:	mov    ecx,DWORD PTR [esi]
6401afe2:	dec    ecx
6401afe3:	test   cl,0x1
6401afe6:	mov    DWORD PTR [ebp-0x4],ecx
6401afe9:	jne    0x6401b2c2
6401afef:	push   ebx
6401aff0:	lea    ebx,[ecx+esi*1]
6401aff3:	mov    edx,DWORD PTR [ebx]
6401aff5:	mov    DWORD PTR [ebp-0xc],edx
6401aff8:	mov    edx,DWORD PTR [esi-0x4]
6401affb:	mov    DWORD PTR [ebp-0x8],edx
6401affe:	mov    edx,DWORD PTR [ebp-0xc]
6401b001:	test   dl,0x1
6401b004:	mov    DWORD PTR [ebp+0xc],ebx
6401b007:	jne    0x6401b07d
6401b009:	sar    edx,0x4
6401b00c:	dec    edx
6401b00d:	cmp    edx,0x3f
6401b010:	jbe    0x6401b015
6401b012:	push   0x3f
6401b014:	pop    edx
6401b015:	mov    ecx,DWORD PTR [ebx+0x4]
6401b018:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b01b:	jne    0x6401b05f
6401b01d:	cmp    edx,0x20
6401b020:	mov    ebx,0x80000000
6401b025:	jae    0x6401b040
6401b027:	mov    ecx,edx
6401b029:	shr    ebx,cl
6401b02b:	lea    ecx,[edx+eax*1+0x4]
6401b02f:	not    ebx
6401b031:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401b035:	dec    BYTE PTR [ecx]
6401b037:	jne    0x6401b05c
6401b039:	mov    ecx,DWORD PTR [ebp+0x8]
6401b03c:	and    DWORD PTR [ecx],ebx
6401b03e:	jmp    0x6401b05c
6401b040:	lea    ecx,[edx-0x20]
6401b043:	shr    ebx,cl
6401b045:	lea    ecx,[edx+eax*1+0x4]
6401b049:	not    ebx
6401b04b:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401b052:	dec    BYTE PTR [ecx]
6401b054:	jne    0x6401b05c
6401b056:	mov    ecx,DWORD PTR [ebp+0x8]
6401b059:	and    DWORD PTR [ecx+0x4],ebx
6401b05c:	mov    ebx,DWORD PTR [ebp+0xc]
6401b05f:	mov    edx,DWORD PTR [ebx+0x8]
6401b062:	mov    ebx,DWORD PTR [ebx+0x4]
6401b065:	mov    ecx,DWORD PTR [ebp-0x4]
6401b068:	add    ecx,DWORD PTR [ebp-0xc]
6401b06b:	mov    DWORD PTR [edx+0x4],ebx
6401b06e:	mov    edx,DWORD PTR [ebp+0xc]
6401b071:	mov    ebx,DWORD PTR [edx+0x4]
6401b074:	mov    edx,DWORD PTR [edx+0x8]
6401b077:	mov    DWORD PTR [ebx+0x8],edx
6401b07a:	mov    DWORD PTR [ebp-0x4],ecx
6401b07d:	mov    edx,ecx
6401b07f:	sar    edx,0x4
6401b082:	dec    edx
6401b083:	cmp    edx,0x3f
6401b086:	jbe    0x6401b08b
6401b088:	push   0x3f
6401b08a:	pop    edx
6401b08b:	mov    ebx,DWORD PTR [ebp-0x8]
6401b08e:	and    ebx,0x1
6401b091:	mov    DWORD PTR [ebp-0xc],ebx
6401b094:	jne    0x6401b129
6401b09a:	sub    esi,DWORD PTR [ebp-0x8]
6401b09d:	mov    ebx,DWORD PTR [ebp-0x8]
6401b0a0:	sar    ebx,0x4
6401b0a3:	push   0x3f
6401b0a5:	mov    DWORD PTR [ebp+0xc],esi
6401b0a8:	dec    ebx
6401b0a9:	pop    esi
6401b0aa:	cmp    ebx,esi
6401b0ac:	jbe    0x6401b0b0
6401b0ae:	mov    ebx,esi
6401b0b0:	add    ecx,DWORD PTR [ebp-0x8]
6401b0b3:	mov    edx,ecx
6401b0b5:	sar    edx,0x4
6401b0b8:	dec    edx
6401b0b9:	cmp    edx,esi
6401b0bb:	mov    DWORD PTR [ebp-0x4],ecx
6401b0be:	jbe    0x6401b0c2
6401b0c0:	mov    edx,esi
6401b0c2:	cmp    ebx,edx
6401b0c4:	je     0x6401b124
6401b0c6:	mov    ecx,DWORD PTR [ebp+0xc]
6401b0c9:	mov    esi,DWORD PTR [ecx+0x4]
6401b0cc:	cmp    esi,DWORD PTR [ecx+0x8]
6401b0cf:	jne    0x6401b10c
6401b0d1:	cmp    ebx,0x20
6401b0d4:	mov    esi,0x80000000
6401b0d9:	jae    0x6401b0f2
6401b0db:	mov    ecx,ebx
6401b0dd:	shr    esi,cl
6401b0df:	not    esi
6401b0e1:	and    DWORD PTR [eax+edi*4+0x44],esi
6401b0e5:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b0e9:	jne    0x6401b10c
6401b0eb:	mov    ecx,DWORD PTR [ebp+0x8]
6401b0ee:	and    DWORD PTR [ecx],esi
6401b0f0:	jmp    0x6401b10c
6401b0f2:	lea    ecx,[ebx-0x20]
6401b0f5:	shr    esi,cl
6401b0f7:	not    esi
6401b0f9:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401b100:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b104:	jne    0x6401b10c
6401b106:	mov    ecx,DWORD PTR [ebp+0x8]
6401b109:	and    DWORD PTR [ecx+0x4],esi
6401b10c:	mov    ecx,DWORD PTR [ebp+0xc]
6401b10f:	mov    esi,DWORD PTR [ecx+0x8]
6401b112:	mov    ecx,DWORD PTR [ecx+0x4]
6401b115:	mov    DWORD PTR [esi+0x4],ecx
6401b118:	mov    ecx,DWORD PTR [ebp+0xc]
6401b11b:	mov    esi,DWORD PTR [ecx+0x4]
6401b11e:	mov    ecx,DWORD PTR [ecx+0x8]
6401b121:	mov    DWORD PTR [esi+0x8],ecx
6401b124:	mov    esi,DWORD PTR [ebp+0xc]
6401b127:	jmp    0x6401b12c
6401b129:	mov    ebx,DWORD PTR [ebp+0x8]
6401b12c:	cmp    DWORD PTR [ebp-0xc],0x0
6401b130:	jne    0x6401b13a
6401b132:	cmp    ebx,edx
6401b134:	je     0x6401b1ba
6401b13a:	mov    ecx,DWORD PTR [ebp-0x10]
6401b13d:	lea    ecx,[ecx+edx*8]
6401b140:	mov    ebx,DWORD PTR [ecx+0x4]
6401b143:	mov    DWORD PTR [esi+0x8],ecx
6401b146:	mov    DWORD PTR [esi+0x4],ebx
6401b149:	mov    DWORD PTR [ecx+0x4],esi
6401b14c:	mov    ecx,DWORD PTR [esi+0x4]
6401b14f:	mov    DWORD PTR [ecx+0x8],esi
6401b152:	mov    ecx,DWORD PTR [esi+0x4]
6401b155:	cmp    ecx,DWORD PTR [esi+0x8]
6401b158:	jne    0x6401b1ba
6401b15a:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401b15e:	mov    BYTE PTR [ebp+0xf],cl
6401b161:	inc    cl
6401b163:	cmp    edx,0x20
6401b166:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401b16a:	jae    0x6401b191
6401b16c:	cmp    BYTE PTR [ebp+0xf],0x0
6401b170:	jne    0x6401b180
6401b172:	mov    ecx,edx
6401b174:	mov    ebx,0x80000000
6401b179:	shr    ebx,cl
6401b17b:	mov    ecx,DWORD PTR [ebp+0x8]
6401b17e:	or     DWORD PTR [ecx],ebx
6401b180:	mov    ebx,0x80000000
6401b185:	mov    ecx,edx
6401b187:	shr    ebx,cl
6401b189:	lea    eax,[eax+edi*4+0x44]
6401b18d:	or     DWORD PTR [eax],ebx
6401b18f:	jmp    0x6401b1ba
6401b191:	cmp    BYTE PTR [ebp+0xf],0x0
6401b195:	jne    0x6401b1a7
6401b197:	lea    ecx,[edx-0x20]
6401b19a:	mov    ebx,0x80000000
6401b19f:	shr    ebx,cl
6401b1a1:	mov    ecx,DWORD PTR [ebp+0x8]
6401b1a4:	or     DWORD PTR [ecx+0x4],ebx
6401b1a7:	lea    ecx,[edx-0x20]
6401b1aa:	mov    edx,0x80000000
6401b1af:	shr    edx,cl
6401b1b1:	lea    eax,[eax+edi*4+0xc4]
6401b1b8:	or     DWORD PTR [eax],edx
6401b1ba:	mov    eax,DWORD PTR [ebp-0x4]
6401b1bd:	mov    DWORD PTR [esi],eax
6401b1bf:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401b1c3:	mov    eax,DWORD PTR [ebp-0x10]
6401b1c6:	dec    DWORD PTR [eax]
6401b1c8:	jne    0x6401b2c1
6401b1ce:	mov    eax,ds:0x640394f0
6401b1d3:	test   eax,eax
6401b1d5:	je     0x6401b2b3
6401b1db:	mov    ecx,DWORD PTR ds:0x64039b3c
6401b1e1:	mov    esi,DWORD PTR ds:0x64024124
6401b1e7:	push   0x4000
6401b1ec:	shl    ecx,0xf
6401b1ef:	add    ecx,DWORD PTR [eax+0xc]
6401b1f2:	mov    ebx,0x8000
6401b1f7:	push   ebx
6401b1f8:	push   ecx
6401b1f9:	call   esi
6401b1fb:	mov    ecx,DWORD PTR ds:0x64039b3c
6401b201:	mov    eax,ds:0x640394f0
6401b206:	mov    edx,0x80000000
6401b20b:	shr    edx,cl
6401b20d:	or     DWORD PTR [eax+0x8],edx
6401b210:	mov    eax,ds:0x640394f0
6401b215:	mov    eax,DWORD PTR [eax+0x10]
6401b218:	mov    ecx,DWORD PTR ds:0x64039b3c
6401b21e:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401b226:	mov    eax,ds:0x640394f0
6401b22b:	mov    eax,DWORD PTR [eax+0x10]
6401b22e:	dec    BYTE PTR [eax+0x43]
6401b231:	mov    eax,ds:0x640394f0
6401b236:	mov    ecx,DWORD PTR [eax+0x10]
6401b239:	cmp    BYTE PTR [ecx+0x43],0x0
6401b23d:	jne    0x6401b248
6401b23f:	and    DWORD PTR [eax+0x4],0xfffffffe
6401b243:	mov    eax,ds:0x640394f0
6401b248:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401b24c:	jne    0x6401b2b3
6401b24e:	push   ebx
6401b24f:	push   0x0
6401b251:	push   DWORD PTR [eax+0xc]
6401b254:	call   esi
6401b256:	mov    eax,ds:0x640394f0
6401b25b:	push   DWORD PTR [eax+0x10]
6401b25e:	push   0x0
6401b260:	push   DWORD PTR ds:0x64039354
6401b266:	call   DWORD PTR ds:0x64024180
6401b26c:	mov    ecx,DWORD PTR ds:0x64039b28
6401b272:	mov    eax,ds:0x640394f0
6401b277:	imul   ecx,ecx,0x14
6401b27a:	mov    edx,DWORD PTR ds:0x64039b2c
6401b280:	sub    ecx,eax
6401b282:	lea    ecx,[ecx+edx*1-0x14]
6401b286:	push   ecx
6401b287:	lea    ecx,[eax+0x14]
6401b28a:	push   ecx
6401b28b:	push   eax
6401b28c:	call   0x64016510
6401b291:	mov    eax,DWORD PTR [ebp+0x8]
6401b294:	add    esp,0xc
6401b297:	dec    DWORD PTR ds:0x64039b28
6401b29d:	cmp    eax,DWORD PTR ds:0x640394f0
6401b2a3:	jbe    0x6401b2a9
6401b2a5:	sub    DWORD PTR [ebp+0x8],0x14
6401b2a9:	mov    eax,ds:0x64039b2c
6401b2ae:	mov    ds:0x64039b34,eax
6401b2b3:	mov    eax,DWORD PTR [ebp+0x8]
6401b2b6:	mov    ds:0x640394f0,eax
6401b2bb:	mov    DWORD PTR ds:0x64039b3c,edi
6401b2c1:	pop    ebx
6401b2c2:	pop    edi
6401b2c3:	pop    esi
6401b2c4:	leave  
6401b2c5:	ret    
6401b2c6:	mov    eax,ds:0x64039b38
6401b2cb:	push   esi
6401b2cc:	mov    esi,DWORD PTR ds:0x64039b28
6401b2d2:	push   edi
6401b2d3:	xor    edi,edi
6401b2d5:	cmp    esi,eax
6401b2d7:	jne    0x6401b30d
6401b2d9:	add    eax,0x10
6401b2dc:	imul   eax,eax,0x14
6401b2df:	push   eax
6401b2e0:	push   DWORD PTR ds:0x64039b2c
6401b2e6:	push   edi
6401b2e7:	push   DWORD PTR ds:0x64039354
6401b2ed:	call   DWORD PTR ds:0x64024184
6401b2f3:	cmp    eax,edi
6401b2f5:	jne    0x6401b2fb
6401b2f7:	xor    eax,eax
6401b2f9:	jmp    0x6401b373
6401b2fb:	add    DWORD PTR ds:0x64039b38,0x10
6401b302:	mov    esi,DWORD PTR ds:0x64039b28
6401b308:	mov    ds:0x64039b2c,eax
6401b30d:	imul   esi,esi,0x14
6401b310:	add    esi,DWORD PTR ds:0x64039b2c
6401b316:	push   0x41c4
6401b31b:	push   0x8
6401b31d:	push   DWORD PTR ds:0x64039354
6401b323:	call   DWORD PTR ds:0x6402417c
6401b329:	cmp    eax,edi
6401b32b:	mov    DWORD PTR [esi+0x10],eax
6401b32e:	je     0x6401b2f7
6401b330:	push   0x4
6401b332:	push   0x2000
6401b337:	push   0x100000
6401b33c:	push   edi
6401b33d:	call   DWORD PTR ds:0x640241a4
6401b343:	cmp    eax,edi
6401b345:	mov    DWORD PTR [esi+0xc],eax
6401b348:	jne    0x6401b35c
6401b34a:	push   DWORD PTR [esi+0x10]
6401b34d:	push   edi
6401b34e:	push   DWORD PTR ds:0x64039354
6401b354:	call   DWORD PTR ds:0x64024180
6401b35a:	jmp    0x6401b2f7
6401b35c:	or     DWORD PTR [esi+0x8],0xffffffff
6401b360:	mov    DWORD PTR [esi],edi
6401b362:	mov    DWORD PTR [esi+0x4],edi
6401b365:	inc    DWORD PTR ds:0x64039b28
6401b36b:	mov    eax,DWORD PTR [esi+0x10]
6401b36e:	or     DWORD PTR [eax],0xffffffff
6401b371:	mov    eax,esi
6401b373:	pop    edi
6401b374:	pop    esi
6401b375:	ret    
6401b376:	push   ebp
6401b377:	mov    ebp,esp
6401b379:	push   ecx
6401b37a:	push   ecx
6401b37b:	mov    ecx,DWORD PTR [ebp+0x8]
6401b37e:	mov    eax,DWORD PTR [ecx+0x8]
6401b381:	push   ebx
6401b382:	push   esi
6401b383:	mov    esi,DWORD PTR [ecx+0x10]
6401b386:	push   edi
6401b387:	xor    ebx,ebx
6401b389:	jmp    0x6401b38e
6401b38b:	add    eax,eax
6401b38d:	inc    ebx
6401b38e:	test   eax,eax
6401b390:	jge    0x6401b38b
6401b392:	mov    eax,ebx
6401b394:	imul   eax,eax,0x204
6401b39a:	lea    eax,[eax+esi*1+0x144]
6401b3a1:	push   0x3f
6401b3a3:	mov    DWORD PTR [ebp-0x8],eax
6401b3a6:	pop    edx
6401b3a7:	mov    DWORD PTR [eax+0x8],eax
6401b3aa:	mov    DWORD PTR [eax+0x4],eax
6401b3ad:	add    eax,0x8
6401b3b0:	dec    edx
6401b3b1:	jne    0x6401b3a7
6401b3b3:	push   0x4
6401b3b5:	mov    edi,ebx
6401b3b7:	push   0x1000
6401b3bc:	shl    edi,0xf
6401b3bf:	add    edi,DWORD PTR [ecx+0xc]
6401b3c2:	push   0x8000
6401b3c7:	push   edi
6401b3c8:	call   DWORD PTR ds:0x640241a4
6401b3ce:	test   eax,eax
6401b3d0:	jne    0x6401b3da
6401b3d2:	or     eax,0xffffffff
6401b3d5:	jmp    0x6401b477
6401b3da:	lea    edx,[edi+0x7000]
6401b3e0:	cmp    edi,edx
6401b3e2:	mov    DWORD PTR [ebp-0x4],edx
6401b3e5:	ja     0x6401b42a
6401b3e7:	mov    ecx,edx
6401b3e9:	sub    ecx,edi
6401b3eb:	shr    ecx,0xc
6401b3ee:	lea    eax,[edi+0x10]
6401b3f1:	inc    ecx
6401b3f2:	or     DWORD PTR [eax-0x8],0xffffffff
6401b3f6:	or     DWORD PTR [eax+0xfec],0xffffffff
6401b3fd:	lea    edx,[eax+0xffc]
6401b403:	mov    DWORD PTR [eax],edx
6401b405:	lea    edx,[eax-0x1004]
6401b40b:	mov    DWORD PTR [eax-0x4],0xff0
6401b412:	mov    DWORD PTR [eax+0x4],edx
6401b415:	mov    DWORD PTR [eax+0xfe8],0xff0
6401b41f:	add    eax,0x1000
6401b424:	dec    ecx
6401b425:	jne    0x6401b3f2
6401b427:	mov    edx,DWORD PTR [ebp-0x4]
6401b42a:	mov    eax,DWORD PTR [ebp-0x8]
6401b42d:	add    eax,0x1f8
6401b432:	lea    ecx,[edi+0xc]
6401b435:	mov    DWORD PTR [eax+0x4],ecx
6401b438:	mov    DWORD PTR [ecx+0x8],eax
6401b43b:	lea    ecx,[edx+0xc]
6401b43e:	mov    DWORD PTR [eax+0x8],ecx
6401b441:	mov    DWORD PTR [ecx+0x4],eax
6401b444:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401b449:	xor    edi,edi
6401b44b:	inc    edi
6401b44c:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401b453:	mov    al,BYTE PTR [esi+0x43]
6401b456:	mov    cl,al
6401b458:	inc    cl
6401b45a:	test   al,al
6401b45c:	mov    eax,DWORD PTR [ebp+0x8]
6401b45f:	mov    BYTE PTR [esi+0x43],cl
6401b462:	jne    0x6401b467
6401b464:	or     DWORD PTR [eax+0x4],edi
6401b467:	mov    edx,0x80000000
6401b46c:	mov    ecx,ebx
6401b46e:	shr    edx,cl
6401b470:	not    edx
6401b472:	and    DWORD PTR [eax+0x8],edx
6401b475:	mov    eax,ebx
6401b477:	pop    edi
6401b478:	pop    esi
6401b479:	pop    ebx
6401b47a:	leave  
6401b47b:	ret    
6401b47c:	push   ebp
6401b47d:	mov    ebp,esp
6401b47f:	sub    esp,0xc
6401b482:	mov    ecx,DWORD PTR [ebp+0x8]
6401b485:	mov    eax,DWORD PTR [ecx+0x10]
6401b488:	push   ebx
6401b489:	push   esi
6401b48a:	mov    esi,DWORD PTR [ebp+0x10]
6401b48d:	push   edi
6401b48e:	mov    edi,DWORD PTR [ebp+0xc]
6401b491:	mov    edx,edi
6401b493:	sub    edx,DWORD PTR [ecx+0xc]
6401b496:	add    esi,0x17
6401b499:	shr    edx,0xf
6401b49c:	mov    ecx,edx
6401b49e:	imul   ecx,ecx,0x204
6401b4a4:	lea    ecx,[ecx+eax*1+0x144]
6401b4ab:	mov    DWORD PTR [ebp-0xc],ecx
6401b4ae:	mov    ecx,DWORD PTR [edi-0x4]
6401b4b1:	and    esi,0xfffffff0
6401b4b4:	dec    ecx
6401b4b5:	cmp    esi,ecx
6401b4b7:	lea    edi,[ecx+edi*1-0x4]
6401b4bb:	mov    ebx,DWORD PTR [edi]
6401b4bd:	mov    DWORD PTR [ebp+0x10],ecx
6401b4c0:	mov    DWORD PTR [ebp-0x4],ebx
6401b4c3:	jle    0x6401b61e
6401b4c9:	test   bl,0x1
6401b4cc:	jne    0x6401b617
6401b4d2:	add    ebx,ecx
6401b4d4:	cmp    esi,ebx
6401b4d6:	jg     0x6401b617
6401b4dc:	mov    ecx,DWORD PTR [ebp-0x4]
6401b4df:	sar    ecx,0x4
6401b4e2:	dec    ecx
6401b4e3:	cmp    ecx,0x3f
6401b4e6:	mov    DWORD PTR [ebp-0x8],ecx
6401b4e9:	jbe    0x6401b4f1
6401b4eb:	push   0x3f
6401b4ed:	pop    ecx
6401b4ee:	mov    DWORD PTR [ebp-0x8],ecx
6401b4f1:	mov    ebx,DWORD PTR [edi+0x4]
6401b4f4:	cmp    ebx,DWORD PTR [edi+0x8]
6401b4f7:	jne    0x6401b53c
6401b4f9:	cmp    ecx,0x20
6401b4fc:	mov    ebx,0x80000000
6401b501:	jae    0x6401b51d
6401b503:	shr    ebx,cl
6401b505:	mov    ecx,DWORD PTR [ebp-0x8]
6401b508:	lea    ecx,[ecx+eax*1+0x4]
6401b50c:	not    ebx
6401b50e:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401b512:	dec    BYTE PTR [ecx]
6401b514:	jne    0x6401b53c
6401b516:	mov    ecx,DWORD PTR [ebp+0x8]
6401b519:	and    DWORD PTR [ecx],ebx
6401b51b:	jmp    0x6401b53c
6401b51d:	add    ecx,0xffffffe0
6401b520:	shr    ebx,cl
6401b522:	mov    ecx,DWORD PTR [ebp-0x8]
6401b525:	lea    ecx,[ecx+eax*1+0x4]
6401b529:	not    ebx
6401b52b:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401b532:	dec    BYTE PTR [ecx]
6401b534:	jne    0x6401b53c
6401b536:	mov    ecx,DWORD PTR [ebp+0x8]
6401b539:	and    DWORD PTR [ecx+0x4],ebx
6401b53c:	mov    ecx,DWORD PTR [edi+0x8]
6401b53f:	mov    ebx,DWORD PTR [edi+0x4]
6401b542:	mov    DWORD PTR [ecx+0x4],ebx
6401b545:	mov    ecx,DWORD PTR [edi+0x4]
6401b548:	mov    edi,DWORD PTR [edi+0x8]
6401b54b:	mov    DWORD PTR [ecx+0x8],edi
6401b54e:	mov    ecx,DWORD PTR [ebp+0x10]
6401b551:	sub    ecx,esi
6401b553:	add    DWORD PTR [ebp-0x4],ecx
6401b556:	cmp    DWORD PTR [ebp-0x4],0x0
6401b55a:	jle    0x6401b605
6401b560:	mov    edi,DWORD PTR [ebp-0x4]
6401b563:	mov    ecx,DWORD PTR [ebp+0xc]
6401b566:	sar    edi,0x4
6401b569:	dec    edi
6401b56a:	cmp    edi,0x3f
6401b56d:	lea    ecx,[ecx+esi*1-0x4]
6401b571:	jbe    0x6401b576
6401b573:	push   0x3f
6401b575:	pop    edi
6401b576:	mov    ebx,DWORD PTR [ebp-0xc]
6401b579:	lea    ebx,[ebx+edi*8]
6401b57c:	mov    DWORD PTR [ebp+0x10],ebx
6401b57f:	mov    ebx,DWORD PTR [ebx+0x4]
6401b582:	mov    DWORD PTR [ecx+0x4],ebx
6401b585:	mov    ebx,DWORD PTR [ebp+0x10]
6401b588:	mov    DWORD PTR [ecx+0x8],ebx
6401b58b:	mov    DWORD PTR [ebx+0x4],ecx
6401b58e:	mov    ebx,DWORD PTR [ecx+0x4]
6401b591:	mov    DWORD PTR [ebx+0x8],ecx
6401b594:	mov    ebx,DWORD PTR [ecx+0x4]
6401b597:	cmp    ebx,DWORD PTR [ecx+0x8]
6401b59a:	jne    0x6401b5f3
6401b59c:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401b5a0:	mov    BYTE PTR [ebp+0x13],cl
6401b5a3:	inc    cl
6401b5a5:	cmp    edi,0x20
6401b5a8:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401b5ac:	jae    0x6401b5ca
6401b5ae:	cmp    BYTE PTR [ebp+0x13],0x0
6401b5b2:	jne    0x6401b5c2
6401b5b4:	mov    ecx,edi
6401b5b6:	mov    ebx,0x80000000
6401b5bb:	shr    ebx,cl
6401b5bd:	mov    ecx,DWORD PTR [ebp+0x8]
6401b5c0:	or     DWORD PTR [ecx],ebx
6401b5c2:	lea    eax,[eax+edx*4+0x44]
6401b5c6:	mov    ecx,edi
6401b5c8:	jmp    0x6401b5ea
6401b5ca:	cmp    BYTE PTR [ebp+0x13],0x0
6401b5ce:	jne    0x6401b5e0
6401b5d0:	lea    ecx,[edi-0x20]
6401b5d3:	mov    ebx,0x80000000
6401b5d8:	shr    ebx,cl
6401b5da:	mov    ecx,DWORD PTR [ebp+0x8]
6401b5dd:	or     DWORD PTR [ecx+0x4],ebx
6401b5e0:	lea    eax,[eax+edx*4+0xc4]
6401b5e7:	lea    ecx,[edi-0x20]
6401b5ea:	mov    edx,0x80000000
6401b5ef:	shr    edx,cl
6401b5f1:	or     DWORD PTR [eax],edx
6401b5f3:	mov    edx,DWORD PTR [ebp+0xc]
6401b5f6:	mov    ecx,DWORD PTR [ebp-0x4]
6401b5f9:	lea    eax,[edx+esi*1-0x4]
6401b5fd:	mov    DWORD PTR [eax],ecx
6401b5ff:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401b603:	jmp    0x6401b608
6401b605:	mov    edx,DWORD PTR [ebp+0xc]
6401b608:	lea    eax,[esi+0x1]
6401b60b:	mov    DWORD PTR [edx-0x4],eax
6401b60e:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401b612:	jmp    0x6401b753
6401b617:	xor    eax,eax
6401b619:	jmp    0x6401b756
6401b61e:	jge    0x6401b753
6401b624:	mov    ebx,DWORD PTR [ebp+0xc]
6401b627:	sub    DWORD PTR [ebp+0x10],esi
6401b62a:	lea    ecx,[esi+0x1]
6401b62d:	mov    DWORD PTR [ebx-0x4],ecx
6401b630:	lea    ebx,[ebx+esi*1-0x4]
6401b634:	mov    esi,DWORD PTR [ebp+0x10]
6401b637:	sar    esi,0x4
6401b63a:	dec    esi
6401b63b:	cmp    esi,0x3f
6401b63e:	mov    DWORD PTR [ebp+0xc],ebx
6401b641:	mov    DWORD PTR [ebx-0x4],ecx
6401b644:	jbe    0x6401b649
6401b646:	push   0x3f
6401b648:	pop    esi
6401b649:	test   BYTE PTR [ebp-0x4],0x1
6401b64d:	jne    0x6401b6d3
6401b653:	mov    esi,DWORD PTR [ebp-0x4]
6401b656:	sar    esi,0x4
6401b659:	dec    esi
6401b65a:	cmp    esi,0x3f
6401b65d:	jbe    0x6401b662
6401b65f:	push   0x3f
6401b661:	pop    esi
6401b662:	mov    ecx,DWORD PTR [edi+0x4]
6401b665:	cmp    ecx,DWORD PTR [edi+0x8]
6401b668:	jne    0x6401b6ac
6401b66a:	cmp    esi,0x20
6401b66d:	mov    ebx,0x80000000
6401b672:	jae    0x6401b68d
6401b674:	mov    ecx,esi
6401b676:	shr    ebx,cl
6401b678:	lea    esi,[esi+eax*1+0x4]
6401b67c:	not    ebx
6401b67e:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401b682:	dec    BYTE PTR [esi]
6401b684:	jne    0x6401b6a9
6401b686:	mov    ecx,DWORD PTR [ebp+0x8]
6401b689:	and    DWORD PTR [ecx],ebx
6401b68b:	jmp    0x6401b6a9
6401b68d:	lea    ecx,[esi-0x20]
6401b690:	shr    ebx,cl
6401b692:	lea    ecx,[esi+eax*1+0x4]
6401b696:	not    ebx
6401b698:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401b69f:	dec    BYTE PTR [ecx]
6401b6a1:	jne    0x6401b6a9
6401b6a3:	mov    ecx,DWORD PTR [ebp+0x8]
6401b6a6:	and    DWORD PTR [ecx+0x4],ebx
6401b6a9:	mov    ebx,DWORD PTR [ebp+0xc]
6401b6ac:	mov    ecx,DWORD PTR [edi+0x8]
6401b6af:	mov    esi,DWORD PTR [edi+0x4]
6401b6b2:	mov    DWORD PTR [ecx+0x4],esi
6401b6b5:	mov    esi,DWORD PTR [edi+0x8]
6401b6b8:	mov    ecx,DWORD PTR [edi+0x4]
6401b6bb:	mov    DWORD PTR [ecx+0x8],esi
6401b6be:	mov    esi,DWORD PTR [ebp+0x10]
6401b6c1:	add    esi,DWORD PTR [ebp-0x4]
6401b6c4:	mov    DWORD PTR [ebp+0x10],esi
6401b6c7:	sar    esi,0x4
6401b6ca:	dec    esi
6401b6cb:	cmp    esi,0x3f
6401b6ce:	jbe    0x6401b6d3
6401b6d0:	push   0x3f
6401b6d2:	pop    esi
6401b6d3:	mov    ecx,DWORD PTR [ebp-0xc]
6401b6d6:	lea    ecx,[ecx+esi*8]
6401b6d9:	mov    edi,DWORD PTR [ecx+0x4]
6401b6dc:	mov    DWORD PTR [ebx+0x8],ecx
6401b6df:	mov    DWORD PTR [ebx+0x4],edi
6401b6e2:	mov    DWORD PTR [ecx+0x4],ebx
6401b6e5:	mov    ecx,DWORD PTR [ebx+0x4]
6401b6e8:	mov    DWORD PTR [ecx+0x8],ebx
6401b6eb:	mov    ecx,DWORD PTR [ebx+0x4]
6401b6ee:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b6f1:	jne    0x6401b74a
6401b6f3:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401b6f7:	mov    BYTE PTR [ebp+0xf],cl
6401b6fa:	inc    cl
6401b6fc:	cmp    esi,0x20
6401b6ff:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401b703:	jae    0x6401b721
6401b705:	cmp    BYTE PTR [ebp+0xf],0x0
6401b709:	jne    0x6401b719
6401b70b:	mov    ecx,esi
6401b70d:	mov    edi,0x80000000
6401b712:	shr    edi,cl
6401b714:	mov    ecx,DWORD PTR [ebp+0x8]
6401b717:	or     DWORD PTR [ecx],edi
6401b719:	lea    eax,[eax+edx*4+0x44]
6401b71d:	mov    ecx,esi
6401b71f:	jmp    0x6401b741
6401b721:	cmp    BYTE PTR [ebp+0xf],0x0
6401b725:	jne    0x6401b737
6401b727:	lea    ecx,[esi-0x20]
6401b72a:	mov    edi,0x80000000
6401b72f:	shr    edi,cl
6401b731:	mov    ecx,DWORD PTR [ebp+0x8]
6401b734:	or     DWORD PTR [ecx+0x4],edi
6401b737:	lea    eax,[eax+edx*4+0xc4]
6401b73e:	lea    ecx,[esi-0x20]
6401b741:	mov    edx,0x80000000
6401b746:	shr    edx,cl
6401b748:	or     DWORD PTR [eax],edx
6401b74a:	mov    eax,DWORD PTR [ebp+0x10]
6401b74d:	mov    DWORD PTR [ebx],eax
6401b74f:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401b753:	xor    eax,eax
6401b755:	inc    eax
6401b756:	pop    edi
6401b757:	pop    esi
6401b758:	pop    ebx
6401b759:	leave  
6401b75a:	ret    
6401b75b:	push   ebp
6401b75c:	mov    ebp,esp
6401b75e:	sub    esp,0x14
6401b761:	mov    eax,ds:0x64039b28
6401b766:	mov    ecx,DWORD PTR [ebp+0x8]
6401b769:	imul   eax,eax,0x14
6401b76c:	add    eax,DWORD PTR ds:0x64039b2c
6401b772:	add    ecx,0x17
6401b775:	and    ecx,0xfffffff0
6401b778:	mov    DWORD PTR [ebp-0x10],ecx
6401b77b:	sar    ecx,0x4
6401b77e:	push   ebx
6401b77f:	dec    ecx
6401b780:	cmp    ecx,0x20
6401b783:	push   esi
6401b784:	push   edi
6401b785:	jge    0x6401b792
6401b787:	or     esi,0xffffffff
6401b78a:	shr    esi,cl
6401b78c:	or     DWORD PTR [ebp-0x8],0xffffffff
6401b790:	jmp    0x6401b79f
6401b792:	add    ecx,0xffffffe0
6401b795:	or     edx,0xffffffff
6401b798:	xor    esi,esi
6401b79a:	shr    edx,cl
6401b79c:	mov    DWORD PTR [ebp-0x8],edx
6401b79f:	mov    ecx,DWORD PTR ds:0x64039b34
6401b7a5:	mov    ebx,ecx
6401b7a7:	jmp    0x6401b7ba
6401b7a9:	mov    edx,DWORD PTR [ebx+0x4]
6401b7ac:	mov    edi,DWORD PTR [ebx]
6401b7ae:	and    edx,DWORD PTR [ebp-0x8]
6401b7b1:	and    edi,esi
6401b7b3:	or     edx,edi
6401b7b5:	jne    0x6401b7c1
6401b7b7:	add    ebx,0x14
6401b7ba:	cmp    ebx,eax
6401b7bc:	mov    DWORD PTR [ebp+0x8],ebx
6401b7bf:	jb     0x6401b7a9
6401b7c1:	cmp    ebx,eax
6401b7c3:	jne    0x6401b844
6401b7c5:	mov    ebx,DWORD PTR ds:0x64039b2c
6401b7cb:	jmp    0x6401b7de
6401b7cd:	mov    edx,DWORD PTR [ebx+0x4]
6401b7d0:	mov    edi,DWORD PTR [ebx]
6401b7d2:	and    edx,DWORD PTR [ebp-0x8]
6401b7d5:	and    edi,esi
6401b7d7:	or     edx,edi
6401b7d9:	jne    0x6401b7e5
6401b7db:	add    ebx,0x14
6401b7de:	cmp    ebx,ecx
6401b7e0:	mov    DWORD PTR [ebp+0x8],ebx
6401b7e3:	jb     0x6401b7cd
6401b7e5:	cmp    ebx,ecx
6401b7e7:	jne    0x6401b844
6401b7e9:	jmp    0x6401b7f7
6401b7eb:	cmp    DWORD PTR [ebx+0x8],0x0
6401b7ef:	jne    0x6401b7fb
6401b7f1:	add    ebx,0x14
6401b7f4:	mov    DWORD PTR [ebp+0x8],ebx
6401b7f7:	cmp    ebx,eax
6401b7f9:	jb     0x6401b7eb
6401b7fb:	cmp    ebx,eax
6401b7fd:	jne    0x6401b830
6401b7ff:	mov    ebx,DWORD PTR ds:0x64039b2c
6401b805:	jmp    0x6401b810
6401b807:	cmp    DWORD PTR [ebx+0x8],0x0
6401b80b:	jne    0x6401b817
6401b80d:	add    ebx,0x14
6401b810:	cmp    ebx,ecx
6401b812:	mov    DWORD PTR [ebp+0x8],ebx
6401b815:	jb     0x6401b807
6401b817:	cmp    ebx,ecx
6401b819:	jne    0x6401b830
6401b81b:	call   0x6401b2c6
6401b820:	mov    ebx,eax
6401b822:	test   ebx,ebx
6401b824:	mov    DWORD PTR [ebp+0x8],ebx
6401b827:	jne    0x6401b830
6401b829:	xor    eax,eax
6401b82b:	jmp    0x6401ba39
6401b830:	push   ebx
6401b831:	call   0x6401b376
6401b836:	pop    ecx
6401b837:	mov    ecx,DWORD PTR [ebx+0x10]
6401b83a:	mov    DWORD PTR [ecx],eax
6401b83c:	mov    eax,DWORD PTR [ebx+0x10]
6401b83f:	cmp    DWORD PTR [eax],0xffffffff
6401b842:	je     0x6401b829
6401b844:	mov    DWORD PTR ds:0x64039b34,ebx
6401b84a:	mov    eax,DWORD PTR [ebx+0x10]
6401b84d:	mov    edx,DWORD PTR [eax]
6401b84f:	cmp    edx,0xffffffff
6401b852:	mov    DWORD PTR [ebp-0x4],edx
6401b855:	je     0x6401b86b
6401b857:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401b85e:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401b862:	and    ecx,DWORD PTR [ebp-0x8]
6401b865:	and    edi,esi
6401b867:	or     ecx,edi
6401b869:	jne    0x6401b894
6401b86b:	and    DWORD PTR [ebp-0x4],0x0
6401b86f:	mov    edx,DWORD PTR [eax+0xc4]
6401b875:	lea    ecx,[eax+0x44]
6401b878:	mov    edi,DWORD PTR [ecx]
6401b87a:	and    edx,DWORD PTR [ebp-0x8]
6401b87d:	and    edi,esi
6401b87f:	or     edx,edi
6401b881:	jne    0x6401b891
6401b883:	inc    DWORD PTR [ebp-0x4]
6401b886:	mov    edx,DWORD PTR [ecx+0x84]
6401b88c:	add    ecx,0x4
6401b88f:	jmp    0x6401b878
6401b891:	mov    edx,DWORD PTR [ebp-0x4]
6401b894:	mov    ecx,edx
6401b896:	imul   ecx,ecx,0x204
6401b89c:	lea    ecx,[ecx+eax*1+0x144]
6401b8a3:	mov    DWORD PTR [ebp-0xc],ecx
6401b8a6:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401b8aa:	xor    edi,edi
6401b8ac:	and    ecx,esi
6401b8ae:	jne    0x6401b8c2
6401b8b0:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401b8b7:	and    ecx,DWORD PTR [ebp-0x8]
6401b8ba:	push   0x20
6401b8bc:	pop    edi
6401b8bd:	jmp    0x6401b8c2
6401b8bf:	add    ecx,ecx
6401b8c1:	inc    edi
6401b8c2:	test   ecx,ecx
6401b8c4:	jge    0x6401b8bf
6401b8c6:	mov    ecx,DWORD PTR [ebp-0xc]
6401b8c9:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401b8cd:	mov    ecx,DWORD PTR [edx]
6401b8cf:	sub    ecx,DWORD PTR [ebp-0x10]
6401b8d2:	mov    esi,ecx
6401b8d4:	sar    esi,0x4
6401b8d7:	dec    esi
6401b8d8:	cmp    esi,0x3f
6401b8db:	mov    DWORD PTR [ebp-0x8],ecx
6401b8de:	jle    0x6401b8e3
6401b8e0:	push   0x3f
6401b8e2:	pop    esi
6401b8e3:	cmp    esi,edi
6401b8e5:	je     0x6401b9ec
6401b8eb:	mov    ecx,DWORD PTR [edx+0x4]
6401b8ee:	cmp    ecx,DWORD PTR [edx+0x8]
6401b8f1:	jne    0x6401b94f
6401b8f3:	cmp    edi,0x20
6401b8f6:	mov    ebx,0x80000000
6401b8fb:	jge    0x6401b923
6401b8fd:	mov    ecx,edi
6401b8ff:	shr    ebx,cl
6401b901:	mov    ecx,DWORD PTR [ebp-0x4]
6401b904:	lea    edi,[eax+edi*1+0x4]
6401b908:	not    ebx
6401b90a:	mov    DWORD PTR [ebp-0x14],ebx
6401b90d:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401b911:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401b915:	dec    BYTE PTR [edi]
6401b917:	jne    0x6401b94c
6401b919:	mov    ecx,DWORD PTR [ebp-0x14]
6401b91c:	mov    ebx,DWORD PTR [ebp+0x8]
6401b91f:	and    DWORD PTR [ebx],ecx
6401b921:	jmp    0x6401b94f
6401b923:	lea    ecx,[edi-0x20]
6401b926:	shr    ebx,cl
6401b928:	mov    ecx,DWORD PTR [ebp-0x4]
6401b92b:	lea    ecx,[eax+ecx*4+0xc4]
6401b932:	lea    edi,[eax+edi*1+0x4]
6401b936:	not    ebx
6401b938:	and    DWORD PTR [ecx],ebx
6401b93a:	dec    BYTE PTR [edi]
6401b93c:	mov    DWORD PTR [ebp-0x14],ebx
6401b93f:	jne    0x6401b94c
6401b941:	mov    ebx,DWORD PTR [ebp+0x8]
6401b944:	mov    ecx,DWORD PTR [ebp-0x14]
6401b947:	and    DWORD PTR [ebx+0x4],ecx
6401b94a:	jmp    0x6401b94f
6401b94c:	mov    ebx,DWORD PTR [ebp+0x8]
6401b94f:	cmp    DWORD PTR [ebp-0x8],0x0
6401b953:	mov    ecx,DWORD PTR [edx+0x8]
6401b956:	mov    edi,DWORD PTR [edx+0x4]
6401b959:	mov    DWORD PTR [ecx+0x4],edi
6401b95c:	mov    ecx,DWORD PTR [edx+0x4]
6401b95f:	mov    edi,DWORD PTR [edx+0x8]
6401b962:	mov    DWORD PTR [ecx+0x8],edi
6401b965:	je     0x6401b9f8
6401b96b:	mov    ecx,DWORD PTR [ebp-0xc]
6401b96e:	lea    ecx,[ecx+esi*8]
6401b971:	mov    edi,DWORD PTR [ecx+0x4]
6401b974:	mov    DWORD PTR [edx+0x8],ecx
6401b977:	mov    DWORD PTR [edx+0x4],edi
6401b97a:	mov    DWORD PTR [ecx+0x4],edx
6401b97d:	mov    ecx,DWORD PTR [edx+0x4]
6401b980:	mov    DWORD PTR [ecx+0x8],edx
6401b983:	mov    ecx,DWORD PTR [edx+0x4]
6401b986:	cmp    ecx,DWORD PTR [edx+0x8]
6401b989:	jne    0x6401b9e9
6401b98b:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401b98f:	mov    BYTE PTR [ebp+0xb],cl
6401b992:	inc    cl
6401b994:	cmp    esi,0x20
6401b997:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401b99b:	jge    0x6401b9c0
6401b99d:	cmp    BYTE PTR [ebp+0xb],0x0
6401b9a1:	jne    0x6401b9ae
6401b9a3:	mov    edi,0x80000000
6401b9a8:	mov    ecx,esi
6401b9aa:	shr    edi,cl
6401b9ac:	or     DWORD PTR [ebx],edi
6401b9ae:	mov    ecx,esi
6401b9b0:	mov    edi,0x80000000
6401b9b5:	shr    edi,cl
6401b9b7:	mov    ecx,DWORD PTR [ebp-0x4]
6401b9ba:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401b9be:	jmp    0x6401b9e9
6401b9c0:	cmp    BYTE PTR [ebp+0xb],0x0
6401b9c4:	jne    0x6401b9d3
6401b9c6:	lea    ecx,[esi-0x20]
6401b9c9:	mov    edi,0x80000000
6401b9ce:	shr    edi,cl
6401b9d0:	or     DWORD PTR [ebx+0x4],edi
6401b9d3:	mov    ecx,DWORD PTR [ebp-0x4]
6401b9d6:	lea    edi,[eax+ecx*4+0xc4]
6401b9dd:	lea    ecx,[esi-0x20]
6401b9e0:	mov    esi,0x80000000
6401b9e5:	shr    esi,cl
6401b9e7:	or     DWORD PTR [edi],esi
6401b9e9:	mov    ecx,DWORD PTR [ebp-0x8]
6401b9ec:	test   ecx,ecx
6401b9ee:	je     0x6401b9fb
6401b9f0:	mov    DWORD PTR [edx],ecx
6401b9f2:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401b9f6:	jmp    0x6401b9fb
6401b9f8:	mov    ecx,DWORD PTR [ebp-0x8]
6401b9fb:	mov    esi,DWORD PTR [ebp-0x10]
6401b9fe:	add    edx,ecx
6401ba00:	lea    ecx,[esi+0x1]
6401ba03:	mov    DWORD PTR [edx],ecx
6401ba05:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401ba09:	mov    esi,DWORD PTR [ebp-0xc]
6401ba0c:	mov    ecx,DWORD PTR [esi]
6401ba0e:	test   ecx,ecx
6401ba10:	lea    edi,[ecx+0x1]
6401ba13:	mov    DWORD PTR [esi],edi
6401ba15:	jne    0x6401ba31
6401ba17:	cmp    ebx,DWORD PTR ds:0x640394f0
6401ba1d:	jne    0x6401ba31
6401ba1f:	mov    ecx,DWORD PTR [ebp-0x4]
6401ba22:	cmp    ecx,DWORD PTR ds:0x64039b3c
6401ba28:	jne    0x6401ba31
6401ba2a:	and    DWORD PTR ds:0x640394f0,0x0
6401ba31:	mov    ecx,DWORD PTR [ebp-0x4]
6401ba34:	mov    DWORD PTR [eax],ecx
6401ba36:	lea    eax,[edx+0x4]
6401ba39:	pop    edi
6401ba3a:	pop    esi
6401ba3b:	pop    ebx
6401ba3c:	leave  
6401ba3d:	ret    
6401ba3e:	int3   
6401ba3f:	int3   
6401ba40:	push   esi
6401ba41:	mov    eax,DWORD PTR [esp+0x14]
6401ba45:	or     eax,eax
6401ba47:	jne    0x6401ba71
6401ba49:	mov    ecx,DWORD PTR [esp+0x10]
6401ba4d:	mov    eax,DWORD PTR [esp+0xc]
6401ba51:	xor    edx,edx
6401ba53:	div    ecx
6401ba55:	mov    ebx,eax
6401ba57:	mov    eax,DWORD PTR [esp+0x8]
6401ba5b:	div    ecx
6401ba5d:	mov    esi,eax
6401ba5f:	mov    eax,ebx
6401ba61:	mul    DWORD PTR [esp+0x10]
6401ba65:	mov    ecx,eax
6401ba67:	mov    eax,esi
6401ba69:	mul    DWORD PTR [esp+0x10]
6401ba6d:	add    edx,ecx
6401ba6f:	jmp    0x6401bab8
6401ba71:	mov    ecx,eax
6401ba73:	mov    ebx,DWORD PTR [esp+0x10]
6401ba77:	mov    edx,DWORD PTR [esp+0xc]
6401ba7b:	mov    eax,DWORD PTR [esp+0x8]
6401ba7f:	shr    ecx,1
6401ba81:	rcr    ebx,1
6401ba83:	shr    edx,1
6401ba85:	rcr    eax,1
6401ba87:	or     ecx,ecx
6401ba89:	jne    0x6401ba7f
6401ba8b:	div    ebx
6401ba8d:	mov    esi,eax
6401ba8f:	mul    DWORD PTR [esp+0x14]
6401ba93:	mov    ecx,eax
6401ba95:	mov    eax,DWORD PTR [esp+0x10]
6401ba99:	mul    esi
6401ba9b:	add    edx,ecx
6401ba9d:	jb     0x6401baad
6401ba9f:	cmp    edx,DWORD PTR [esp+0xc]
6401baa3:	ja     0x6401baad
6401baa5:	jb     0x6401bab6
6401baa7:	cmp    eax,DWORD PTR [esp+0x8]
6401baab:	jbe    0x6401bab6
6401baad:	dec    esi
6401baae:	sub    eax,DWORD PTR [esp+0x10]
6401bab2:	sbb    edx,DWORD PTR [esp+0x14]
6401bab6:	xor    ebx,ebx
6401bab8:	sub    eax,DWORD PTR [esp+0x8]
6401babc:	sbb    edx,DWORD PTR [esp+0xc]
6401bac0:	neg    edx
6401bac2:	neg    eax
6401bac4:	sbb    edx,0x0
6401bac7:	mov    ecx,edx
6401bac9:	mov    edx,ebx
6401bacb:	mov    ebx,ecx
6401bacd:	mov    ecx,eax
6401bacf:	mov    eax,esi
6401bad1:	pop    esi
6401bad2:	ret    0x10
6401bad5:	int3   
6401bad6:	int3   
6401bad7:	int3   
6401bad8:	int3   
6401bad9:	int3   
6401bada:	int3   
6401badb:	int3   
6401badc:	int3   
6401badd:	int3   
6401bade:	int3   
6401badf:	int3   
6401bae0:	push   ebp
6401bae1:	mov    ebp,esp
6401bae3:	push   edi
6401bae4:	mov    edi,DWORD PTR [ebp+0x8]
6401bae7:	xor    eax,eax
6401bae9:	or     ecx,0xffffffff
6401baec:	repnz scas al,BYTE PTR es:[edi]
6401baee:	add    ecx,0x1
6401baf1:	neg    ecx
6401baf3:	sub    edi,0x1
6401baf6:	mov    al,BYTE PTR [ebp+0xc]
6401baf9:	std    
6401bafa:	repnz scas al,BYTE PTR es:[edi]
6401bafc:	add    edi,0x1
6401baff:	cmp    BYTE PTR [edi],al
6401bb01:	je     0x6401bb07
6401bb03:	xor    eax,eax
6401bb05:	jmp    0x6401bb09
6401bb07:	mov    eax,edi
6401bb09:	cld    
6401bb0a:	pop    edi
6401bb0b:	leave  
6401bb0c:	ret    
6401bb0d:	push   ecx
6401bb0e:	push   ebx
6401bb0f:	mov    ebx,DWORD PTR [esp+0xc]
6401bb13:	push   esi
6401bb14:	push   edi
6401bb15:	xor    esi,esi
6401bb17:	xor    edi,edi
6401bb19:	cmp    ebx,DWORD PTR [edi*8+0x640383b0]
6401bb20:	je     0x6401bb28
6401bb22:	inc    edi
6401bb23:	cmp    edi,0x17
6401bb26:	jb     0x6401bb19
6401bb28:	cmp    edi,0x17
6401bb2b:	jae    0x6401bca8
6401bb31:	push   ebp
6401bb32:	push   0x3
6401bb34:	call   0x6401f072
6401bb39:	cmp    eax,0x1
6401bb3c:	pop    ecx
6401bb3d:	je     0x6401bc74
6401bb43:	push   0x3
6401bb45:	call   0x6401f072
6401bb4a:	test   eax,eax
6401bb4c:	pop    ecx
6401bb4d:	jne    0x6401bb5c
6401bb4f:	cmp    DWORD PTR ds:0x64038ea4,0x1
6401bb56:	je     0x6401bc74
6401bb5c:	cmp    ebx,0xfc
6401bb62:	je     0x6401bca7
6401bb68:	push   0x64028b88
6401bb6d:	mov    ebx,0x314
6401bb72:	push   ebx
6401bb73:	mov    ebp,0x640394f8
6401bb78:	push   ebp
6401bb79:	call   0x64016321
6401bb7e:	add    esp,0xc
6401bb81:	test   eax,eax
6401bb83:	je     0x6401bb92
6401bb85:	push   esi
6401bb86:	push   esi
6401bb87:	push   esi
6401bb88:	push   esi
6401bb89:	push   esi
6401bb8a:	call   0x64013d56
6401bb8f:	add    esp,0x14
6401bb92:	push   0x104
6401bb97:	mov    esi,0x64039511
6401bb9c:	push   esi
6401bb9d:	push   0x0
6401bb9f:	mov    BYTE PTR ds:0x64039615,0x0
6401bba6:	call   DWORD PTR ds:0x6402414c
6401bbac:	test   eax,eax
6401bbae:	jne    0x6401bbd6
6401bbb0:	push   0x64028b70
6401bbb5:	push   0x2fb
6401bbba:	push   esi
6401bbbb:	call   0x64016321
6401bbc0:	add    esp,0xc
6401bbc3:	test   eax,eax
6401bbc5:	je     0x6401bbd6
6401bbc7:	xor    eax,eax
6401bbc9:	push   eax
6401bbca:	push   eax
6401bbcb:	push   eax
6401bbcc:	push   eax
6401bbcd:	push   eax
6401bbce:	call   0x64013d56
6401bbd3:	add    esp,0x14
6401bbd6:	push   esi
6401bbd7:	call   0x64015550
6401bbdc:	inc    eax
6401bbdd:	cmp    eax,0x3c
6401bbe0:	pop    ecx
6401bbe1:	jbe    0x6401bc1b
6401bbe3:	push   esi
6401bbe4:	call   0x64015550
6401bbe9:	sub    esi,0x3b
6401bbec:	add    eax,esi
6401bbee:	push   0x3
6401bbf0:	mov    ecx,0x6403980c
6401bbf5:	push   0x64028b6c
6401bbfa:	sub    ecx,eax
6401bbfc:	push   ecx
6401bbfd:	push   eax
6401bbfe:	call   0x6401dd66
6401bc03:	add    esp,0x14
6401bc06:	test   eax,eax
6401bc08:	je     0x6401bc1b
6401bc0a:	xor    esi,esi
6401bc0c:	push   esi
6401bc0d:	push   esi
6401bc0e:	push   esi
6401bc0f:	push   esi
6401bc10:	push   esi
6401bc11:	call   0x64013d56
6401bc16:	add    esp,0x14
6401bc19:	jmp    0x6401bc1d
6401bc1b:	xor    esi,esi
6401bc1d:	push   0x64028b68
6401bc22:	push   ebx
6401bc23:	push   ebp
6401bc24:	call   0x6401dcad
6401bc29:	add    esp,0xc
6401bc2c:	test   eax,eax
6401bc2e:	je     0x6401bc3d
6401bc30:	push   esi
6401bc31:	push   esi
6401bc32:	push   esi
6401bc33:	push   esi
6401bc34:	push   esi
6401bc35:	call   0x64013d56
6401bc3a:	add    esp,0x14
6401bc3d:	push   DWORD PTR [edi*8+0x640383b4]
6401bc44:	push   ebx
6401bc45:	push   ebp
6401bc46:	call   0x6401dcad
6401bc4b:	add    esp,0xc
6401bc4e:	test   eax,eax
6401bc50:	je     0x6401bc5f
6401bc52:	push   esi
6401bc53:	push   esi
6401bc54:	push   esi
6401bc55:	push   esi
6401bc56:	push   esi
6401bc57:	call   0x64013d56
6401bc5c:	add    esp,0x14
6401bc5f:	push   0x12010
6401bc64:	push   0x64028b40
6401bc69:	push   ebp
6401bc6a:	call   0x6401eeb5
6401bc6f:	add    esp,0xc
6401bc72:	jmp    0x6401bca7
6401bc74:	push   0xfffffff4
6401bc76:	call   DWORD PTR ds:0x640241cc
6401bc7c:	mov    ebp,eax
6401bc7e:	cmp    ebp,esi
6401bc80:	je     0x6401bca7
6401bc82:	cmp    ebp,0xffffffff
6401bc85:	je     0x6401bca7
6401bc87:	push   0x0
6401bc89:	lea    eax,[esp+0x14]
6401bc8d:	push   eax
6401bc8e:	lea    esi,[edi*8+0x640383b4]
6401bc95:	push   DWORD PTR [esi]
6401bc97:	call   0x64015550
6401bc9c:	pop    ecx
6401bc9d:	push   eax
6401bc9e:	push   DWORD PTR [esi]
6401bca0:	push   ebp
6401bca1:	call   DWORD PTR ds:0x64024090
6401bca7:	pop    ebp
6401bca8:	pop    edi
6401bca9:	pop    esi
6401bcaa:	pop    ebx
6401bcab:	pop    ecx
6401bcac:	ret    
6401bcad:	push   0x3
6401bcaf:	call   0x6401f072
6401bcb4:	cmp    eax,0x1
6401bcb7:	pop    ecx
6401bcb8:	je     0x6401bccf
6401bcba:	push   0x3
6401bcbc:	call   0x6401f072
6401bcc1:	test   eax,eax
6401bcc3:	pop    ecx
6401bcc4:	jne    0x6401bce5
6401bcc6:	cmp    DWORD PTR ds:0x64038ea4,0x1
6401bccd:	jne    0x6401bce5
6401bccf:	push   0xfc
6401bcd4:	call   0x6401bb0d
6401bcd9:	push   0xff
6401bcde:	call   0x6401bb0d
6401bce3:	pop    ecx
6401bce4:	pop    ecx
6401bce5:	ret    
6401bce6:	push   ebp
6401bce7:	mov    ebp,esp
6401bce9:	mov    eax,0xffff
6401bcee:	sub    esp,0x14
6401bcf1:	cmp    WORD PTR [ebp+0x8],ax
6401bcf5:	je     0x6401bd91
6401bcfb:	push   ebx
6401bcfc:	push   DWORD PTR [ebp+0xc]
6401bcff:	lea    ecx,[ebp-0x14]
6401bd02:	call   0x64014325
6401bd07:	mov    ecx,DWORD PTR [ebp-0x14]
6401bd0a:	mov    edx,DWORD PTR [ecx+0x14]
6401bd0d:	xor    ebx,ebx
6401bd0f:	cmp    edx,ebx
6401bd11:	jne    0x6401bd27
6401bd13:	mov    eax,DWORD PTR [ebp+0x8]
6401bd16:	lea    ecx,[eax-0x41]
6401bd19:	cmp    cx,0x19
6401bd1d:	ja     0x6401bd22
6401bd1f:	add    eax,0x20
6401bd22:	movzx  eax,ax
6401bd25:	jmp    0x6401bd84
6401bd27:	mov    eax,0x100
6401bd2c:	cmp    WORD PTR [ebp+0x8],ax
6401bd30:	jae    0x6401bd5b
6401bd32:	lea    eax,[ebp-0x14]
6401bd35:	push   eax
6401bd36:	push   0x1
6401bd38:	push   DWORD PTR [ebp+0x8]
6401bd3b:	call   0x6401c0e3
6401bd40:	add    esp,0xc
6401bd43:	test   eax,eax
6401bd45:	movzx  eax,WORD PTR [ebp+0x8]
6401bd49:	je     0x6401bd84
6401bd4b:	mov    ecx,DWORD PTR [ebp-0x14]
6401bd4e:	mov    ecx,DWORD PTR [ecx+0xcc]
6401bd54:	movzx  ax,BYTE PTR [ecx+eax*1]
6401bd59:	jmp    0x6401bd22
6401bd5b:	push   DWORD PTR [ecx+0x4]
6401bd5e:	lea    ecx,[ebp-0x4]
6401bd61:	push   0x1
6401bd63:	push   ecx
6401bd64:	push   0x1
6401bd66:	lea    ecx,[ebp+0x8]
6401bd69:	push   ecx
6401bd6a:	push   eax
6401bd6b:	push   edx
6401bd6c:	lea    eax,[ebp-0x14]
6401bd6f:	push   eax
6401bd70:	call   0x6401951e
6401bd75:	add    esp,0x20
6401bd78:	test   eax,eax
6401bd7a:	movzx  eax,WORD PTR [ebp+0x8]
6401bd7e:	je     0x6401bd84
6401bd80:	movzx  eax,WORD PTR [ebp-0x4]
6401bd84:	cmp    BYTE PTR [ebp-0x8],bl
6401bd87:	je     0x6401bd90
6401bd89:	mov    ecx,DWORD PTR [ebp-0xc]
6401bd8c:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401bd90:	pop    ebx
6401bd91:	leave  
6401bd92:	ret    
6401bd93:	mov    ecx,DWORD PTR [esp+0x4]
6401bd97:	push   ebx
6401bd98:	xor    ebx,ebx
6401bd9a:	cmp    ecx,ebx
6401bd9c:	push   esi
6401bd9d:	push   edi
6401bd9e:	jl     0x6401bdfb
6401bda0:	cmp    ecx,DWORD PTR ds:0x6403ab68
6401bda6:	jae    0x6401bdfb
6401bda8:	mov    eax,ecx
6401bdaa:	sar    eax,0x5
6401bdad:	mov    esi,ecx
6401bdaf:	lea    edi,[eax*4+0x6403ab80]
6401bdb6:	mov    eax,DWORD PTR [edi]
6401bdb8:	and    esi,0x1f
6401bdbb:	shl    esi,0x6
6401bdbe:	add    eax,esi
6401bdc0:	test   BYTE PTR [eax+0x4],0x1
6401bdc4:	je     0x6401bdfb
6401bdc6:	cmp    DWORD PTR [eax],0xffffffff
6401bdc9:	je     0x6401bdfb
6401bdcb:	cmp    DWORD PTR ds:0x64038ea4,0x1
6401bdd2:	jne    0x6401bdf1
6401bdd4:	sub    ecx,ebx
6401bdd6:	je     0x6401bde8
6401bdd8:	dec    ecx
6401bdd9:	je     0x6401bde3
6401bddb:	dec    ecx
6401bddc:	jne    0x6401bdf1
6401bdde:	push   ebx
6401bddf:	push   0xfffffff4
6401bde1:	jmp    0x6401bdeb
6401bde3:	push   ebx
6401bde4:	push   0xfffffff5
6401bde6:	jmp    0x6401bdeb
6401bde8:	push   ebx
6401bde9:	push   0xfffffff6
6401bdeb:	call   DWORD PTR ds:0x64024104
6401bdf1:	mov    eax,DWORD PTR [edi]
6401bdf3:	or     DWORD PTR [esi+eax*1],0xffffffff
6401bdf7:	xor    eax,eax
6401bdf9:	jmp    0x6401be10
6401bdfb:	call   0x640164c3
6401be00:	mov    DWORD PTR [eax],0x9
6401be06:	call   0x640164d6
6401be0b:	mov    DWORD PTR [eax],ebx
6401be0d:	or     eax,0xffffffff
6401be10:	pop    edi
6401be11:	pop    esi
6401be12:	pop    ebx
6401be13:	ret    
6401be14:	mov    eax,DWORD PTR [esp+0x4]
6401be18:	cmp    eax,0xfffffffe
6401be1b:	jne    0x6401be34
6401be1d:	call   0x640164d6
6401be22:	and    DWORD PTR [eax],0x0
6401be25:	call   0x640164c3
6401be2a:	mov    DWORD PTR [eax],0x9
6401be30:	or     eax,0xffffffff
6401be33:	ret    
6401be34:	push   esi
6401be35:	xor    esi,esi
6401be37:	cmp    eax,esi
6401be39:	jl     0x6401be5d
6401be3b:	cmp    eax,DWORD PTR ds:0x6403ab68
6401be41:	jae    0x6401be5d
6401be43:	mov    ecx,eax
6401be45:	and    eax,0x1f
6401be48:	sar    ecx,0x5
6401be4b:	mov    ecx,DWORD PTR [ecx*4+0x6403ab80]
6401be52:	shl    eax,0x6
6401be55:	add    eax,ecx
6401be57:	test   BYTE PTR [eax+0x4],0x1
6401be5b:	jne    0x6401be81
6401be5d:	call   0x640164d6
6401be62:	mov    DWORD PTR [eax],esi
6401be64:	call   0x640164c3
6401be69:	push   esi
6401be6a:	push   esi
6401be6b:	push   esi
6401be6c:	push   esi
6401be6d:	push   esi
6401be6e:	mov    DWORD PTR [eax],0x9
6401be74:	call   0x64013e52
6401be79:	add    esp,0x14
6401be7c:	or     eax,0xffffffff
6401be7f:	pop    esi
6401be80:	ret    
6401be81:	mov    eax,DWORD PTR [eax]
6401be83:	pop    esi
6401be84:	ret    
6401be85:	push   0xc
6401be87:	push   0x6402bac8
6401be8c:	call   0x64015f14
6401be91:	mov    edi,DWORD PTR [ebp+0x8]
6401be94:	mov    eax,edi
6401be96:	sar    eax,0x5
6401be99:	mov    esi,edi
6401be9b:	and    esi,0x1f
6401be9e:	shl    esi,0x6
6401bea1:	add    esi,DWORD PTR [eax*4+0x6403ab80]
6401bea8:	mov    DWORD PTR [ebp-0x1c],0x1
6401beaf:	xor    ebx,ebx
6401beb1:	cmp    DWORD PTR [esi+0x8],ebx
6401beb4:	jne    0x6401beec
6401beb6:	push   0xa
6401beb8:	call   0x6401af0e
6401bebd:	pop    ecx
6401bebe:	mov    DWORD PTR [ebp-0x4],ebx
6401bec1:	cmp    DWORD PTR [esi+0x8],ebx
6401bec4:	jne    0x6401bee0
6401bec6:	push   0xfa0
6401becb:	lea    eax,[esi+0xc]
6401bece:	push   eax
6401becf:	call   0x6401e852
6401bed4:	pop    ecx
6401bed5:	pop    ecx
6401bed6:	test   eax,eax
6401bed8:	jne    0x6401bedd
6401beda:	mov    DWORD PTR [ebp-0x1c],ebx
6401bedd:	inc    DWORD PTR [esi+0x8]
6401bee0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401bee7:	call   0x6401bf1c
6401beec:	cmp    DWORD PTR [ebp-0x1c],ebx
6401beef:	je     0x6401bf0e
6401bef1:	mov    eax,edi
6401bef3:	sar    eax,0x5
6401bef6:	and    edi,0x1f
6401bef9:	shl    edi,0x6
6401befc:	mov    eax,DWORD PTR [eax*4+0x6403ab80]
6401bf03:	lea    eax,[eax+edi*1+0xc]
6401bf07:	push   eax
6401bf08:	call   DWORD PTR ds:0x6402415c
6401bf0e:	mov    eax,DWORD PTR [ebp-0x1c]
6401bf11:	call   0x64015f59
6401bf16:	ret    
6401bf17:	xor    ebx,ebx
6401bf19:	mov    edi,DWORD PTR [ebp+0x8]
6401bf1c:	push   0xa
6401bf1e:	call   0x6401ae36
6401bf23:	pop    ecx
6401bf24:	ret    
6401bf25:	mov    eax,DWORD PTR [esp+0x4]
6401bf29:	mov    ecx,eax
6401bf2b:	and    eax,0x1f
6401bf2e:	sar    ecx,0x5
6401bf31:	mov    ecx,DWORD PTR [ecx*4+0x6403ab80]
6401bf38:	shl    eax,0x6
6401bf3b:	lea    eax,[ecx+eax*1+0xc]
6401bf3f:	push   eax
6401bf40:	call   DWORD PTR ds:0x64024160
6401bf46:	ret    
6401bf47:	push   ebp
6401bf48:	mov    ebp,esp
6401bf4a:	push   ecx
6401bf4b:	push   ecx
6401bf4c:	mov    eax,DWORD PTR [ebp+0xc]
6401bf4f:	push   esi
6401bf50:	mov    esi,DWORD PTR [ebp+0x8]
6401bf53:	mov    DWORD PTR [ebp-0x8],eax
6401bf56:	mov    eax,DWORD PTR [ebp+0x10]
6401bf59:	push   edi
6401bf5a:	push   esi
6401bf5b:	mov    DWORD PTR [ebp-0x4],eax
6401bf5e:	call   0x6401be14
6401bf63:	or     edi,0xffffffff
6401bf66:	cmp    eax,edi
6401bf68:	pop    ecx
6401bf69:	jne    0x6401bf7c
6401bf6b:	call   0x640164c3
6401bf70:	mov    DWORD PTR [eax],0x9
6401bf76:	mov    eax,edi
6401bf78:	mov    edx,edi
6401bf7a:	jmp    0x6401bfc6
6401bf7c:	push   DWORD PTR [ebp+0x14]
6401bf7f:	lea    ecx,[ebp-0x4]
6401bf82:	push   ecx
6401bf83:	push   DWORD PTR [ebp-0x8]
6401bf86:	push   eax
6401bf87:	call   DWORD PTR ds:0x640241a8
6401bf8d:	cmp    eax,edi
6401bf8f:	mov    DWORD PTR [ebp-0x8],eax
6401bf92:	jne    0x6401bfa7
6401bf94:	call   DWORD PTR ds:0x64024064
6401bf9a:	test   eax,eax
6401bf9c:	je     0x6401bfa7
6401bf9e:	push   eax
6401bf9f:	call   0x640164e9
6401bfa4:	pop    ecx
6401bfa5:	jmp    0x6401bf76
6401bfa7:	mov    eax,esi
6401bfa9:	sar    eax,0x5
6401bfac:	mov    eax,DWORD PTR [eax*4+0x6403ab80]
6401bfb3:	and    esi,0x1f
6401bfb6:	shl    esi,0x6
6401bfb9:	lea    eax,[eax+esi*1+0x4]
6401bfbd:	and    BYTE PTR [eax],0xfd
6401bfc0:	mov    eax,DWORD PTR [ebp-0x8]
6401bfc3:	mov    edx,DWORD PTR [ebp-0x4]
6401bfc6:	pop    edi
6401bfc7:	pop    esi
6401bfc8:	leave  
6401bfc9:	ret    
6401bfca:	push   0x14
6401bfcc:	push   0x6402bae8
6401bfd1:	call   0x64015f14
6401bfd6:	or     esi,0xffffffff
6401bfd9:	mov    DWORD PTR [ebp-0x24],esi
6401bfdc:	mov    DWORD PTR [ebp-0x20],esi
6401bfdf:	mov    eax,DWORD PTR [ebp+0x8]
6401bfe2:	cmp    eax,0xfffffffe
6401bfe5:	jne    0x6401c003
6401bfe7:	call   0x640164d6
6401bfec:	and    DWORD PTR [eax],0x0
6401bfef:	call   0x640164c3
6401bff4:	mov    DWORD PTR [eax],0x9
6401bffa:	mov    eax,esi
6401bffc:	mov    edx,esi
6401bffe:	jmp    0x6401c0d3
6401c003:	xor    edi,edi
6401c005:	cmp    eax,edi
6401c007:	jl     0x6401c011
6401c009:	cmp    eax,DWORD PTR ds:0x6403ab68
6401c00f:	jb     0x6401c032
6401c011:	call   0x640164d6
6401c016:	mov    DWORD PTR [eax],edi
6401c018:	call   0x640164c3
6401c01d:	mov    DWORD PTR [eax],0x9
6401c023:	push   edi
6401c024:	push   edi
6401c025:	push   edi
6401c026:	push   edi
6401c027:	push   edi
6401c028:	call   0x64013e52
6401c02d:	add    esp,0x14
6401c030:	jmp    0x6401bffa
6401c032:	mov    ecx,eax
6401c034:	sar    ecx,0x5
6401c037:	lea    ebx,[ecx*4+0x6403ab80]
6401c03e:	mov    esi,eax
6401c040:	and    esi,0x1f
6401c043:	shl    esi,0x6
6401c046:	mov    ecx,DWORD PTR [ebx]
6401c048:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401c04d:	and    ecx,0x1
6401c050:	jne    0x6401c078
6401c052:	call   0x640164d6
6401c057:	mov    DWORD PTR [eax],edi
6401c059:	call   0x640164c3
6401c05e:	mov    DWORD PTR [eax],0x9
6401c064:	push   edi
6401c065:	push   edi
6401c066:	push   edi
6401c067:	push   edi
6401c068:	push   edi
6401c069:	call   0x64013e52
6401c06e:	add    esp,0x14
6401c071:	or     edx,0xffffffff
6401c074:	mov    eax,edx
6401c076:	jmp    0x6401c0d3
6401c078:	push   eax
6401c079:	call   0x6401be85
6401c07e:	pop    ecx
6401c07f:	mov    DWORD PTR [ebp-0x4],edi
6401c082:	mov    eax,DWORD PTR [ebx]
6401c084:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401c089:	je     0x6401c0a7
6401c08b:	push   DWORD PTR [ebp+0x14]
6401c08e:	push   DWORD PTR [ebp+0x10]
6401c091:	push   DWORD PTR [ebp+0xc]
6401c094:	push   DWORD PTR [ebp+0x8]
6401c097:	call   0x6401bf47
6401c09c:	add    esp,0x10
6401c09f:	mov    DWORD PTR [ebp-0x24],eax
6401c0a2:	mov    DWORD PTR [ebp-0x20],edx
6401c0a5:	jmp    0x6401c0c1
6401c0a7:	call   0x640164c3
6401c0ac:	mov    DWORD PTR [eax],0x9
6401c0b2:	call   0x640164d6
6401c0b7:	mov    DWORD PTR [eax],edi
6401c0b9:	or     DWORD PTR [ebp-0x24],0xffffffff
6401c0bd:	or     DWORD PTR [ebp-0x20],0xffffffff
6401c0c1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c0c8:	call   0x6401c0d9
6401c0cd:	mov    eax,DWORD PTR [ebp-0x24]
6401c0d0:	mov    edx,DWORD PTR [ebp-0x20]
6401c0d3:	call   0x64015f59
6401c0d8:	ret    
6401c0d9:	push   DWORD PTR [ebp+0x8]
6401c0dc:	call   0x6401bf25
6401c0e1:	pop    ecx
6401c0e2:	ret    
6401c0e3:	push   ebp
6401c0e4:	mov    ebp,esp
6401c0e6:	sub    esp,0x14
6401c0e9:	cmp    WORD PTR [ebp+0x8],0xffff
6401c0ef:	jne    0x6401c0f7
6401c0f1:	and    DWORD PTR [ebp-0x4],0x0
6401c0f5:	jmp    0x6401c159
6401c0f7:	cmp    WORD PTR [ebp+0x8],0x100
6401c0fd:	jae    0x6401c119
6401c0ff:	movzx  eax,WORD PTR [ebp+0x8]
6401c103:	mov    ecx,DWORD PTR ds:0x64037758
6401c109:	mov    ax,WORD PTR [ecx+eax*2]
6401c10d:	and    ax,WORD PTR [ebp+0xc]
6401c111:	movzx  eax,ax
6401c114:	mov    DWORD PTR [ebp-0x4],eax
6401c117:	jmp    0x6401c159
6401c119:	push   DWORD PTR [ebp+0x10]
6401c11c:	lea    ecx,[ebp-0x14]
6401c11f:	call   0x64014325
6401c124:	mov    eax,DWORD PTR [ebp-0x14]
6401c127:	push   DWORD PTR [eax+0x14]
6401c12a:	push   DWORD PTR [eax+0x4]
6401c12d:	lea    eax,[ebp-0x4]
6401c130:	push   eax
6401c131:	push   0x1
6401c133:	lea    eax,[ebp+0x8]
6401c136:	push   eax
6401c137:	lea    eax,[ebp-0x14]
6401c13a:	push   0x1
6401c13c:	push   eax
6401c13d:	call   0x6401fd60
6401c142:	add    esp,0x1c
6401c145:	test   eax,eax
6401c147:	jne    0x6401c14c
6401c149:	and    DWORD PTR [ebp-0x4],eax
6401c14c:	cmp    BYTE PTR [ebp-0x8],0x0
6401c150:	je     0x6401c159
6401c152:	mov    eax,DWORD PTR [ebp-0xc]
6401c155:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c159:	movzx  eax,WORD PTR [ebp-0x4]
6401c15d:	movzx  ecx,WORD PTR [ebp+0xc]
6401c161:	and    eax,ecx
6401c163:	leave  
6401c164:	ret    
6401c165:	ret    
6401c166:	mov    eax,0x6402082b
6401c16b:	mov    ds:0x64038580,eax
6401c170:	mov    DWORD PTR ds:0x64038584,0x6401ff27
6401c17a:	mov    DWORD PTR ds:0x64038588,0x6401fee5
6401c184:	mov    DWORD PTR ds:0x6403858c,0x6401ff19
6401c18e:	mov    DWORD PTR ds:0x64038590,0x6401fe8f
6401c198:	mov    ds:0x64038594,eax
6401c19d:	mov    DWORD PTR ds:0x64038598,0x640207a5
6401c1a7:	mov    DWORD PTR ds:0x6403859c,0x6401fea5
6401c1b1:	mov    DWORD PTR ds:0x640385a0,0x6401fe0f
6401c1bb:	mov    DWORD PTR ds:0x640385a4,0x6401fd9e
6401c1c5:	ret    
6401c1c6:	call   0x6401c166
6401c1cb:	call   0x640208b1
6401c1d0:	cmp    DWORD PTR [esp+0x4],0x0
6401c1d5:	mov    ds:0x64039814,eax
6401c1da:	je     0x6401c1e1
6401c1dc:	call   0x6402084c
6401c1e1:	fnclex 
6401c1e3:	ret    
6401c1e4:	test   BYTE PTR [edi+0xc],0x40
6401c1e8:	push   ebx
6401c1e9:	push   esi
6401c1ea:	mov    esi,eax
6401c1ec:	mov    ebx,ecx
6401c1ee:	je     0x6401c229
6401c1f0:	cmp    DWORD PTR [edi+0x8],0x0
6401c1f4:	jne    0x6401c229
6401c1f6:	mov    eax,DWORD PTR [esp+0xc]
6401c1fa:	add    DWORD PTR [esi],eax
6401c1fc:	jmp    0x6401c230
6401c1fe:	movzx  eax,WORD PTR [ebx]
6401c201:	dec    DWORD PTR [esp+0xc]
6401c205:	push   eax
6401c206:	mov    eax,edi
6401c208:	call   0x6401cb43
6401c20d:	inc    ebx
6401c20e:	inc    ebx
6401c20f:	cmp    DWORD PTR [esi],0xffffffff
6401c212:	pop    ecx
6401c213:	jne    0x6401c229
6401c215:	call   0x640164c3
6401c21a:	cmp    DWORD PTR [eax],0x2a
6401c21d:	jne    0x6401c230
6401c21f:	push   0x3f
6401c221:	mov    eax,edi
6401c223:	call   0x6401cb43
6401c228:	pop    ecx
6401c229:	cmp    DWORD PTR [esp+0xc],0x0
6401c22e:	jg     0x6401c1fe
6401c230:	pop    esi
6401c231:	pop    ebx
6401c232:	ret    
6401c233:	push   ebp
6401c234:	lea    ebp,[esp-0x3f4]
6401c23b:	sub    esp,0x474
6401c241:	mov    eax,ds:0x64037644
6401c246:	xor    eax,ebp
6401c248:	mov    DWORD PTR [ebp+0x3f0],eax
6401c24e:	mov    eax,DWORD PTR [ebp+0x3fc]
6401c254:	push   ebx
6401c255:	mov    ebx,DWORD PTR [ebp+0x408]
6401c25b:	push   esi
6401c25c:	mov    esi,DWORD PTR [ebp+0x400]
6401c262:	push   edi
6401c263:	push   DWORD PTR [ebp+0x404]
6401c269:	xor    edi,edi
6401c26b:	lea    ecx,[ebp-0x64]
6401c26e:	mov    DWORD PTR [ebp-0x3c],eax
6401c271:	mov    DWORD PTR [ebp-0x28],ebx
6401c274:	mov    DWORD PTR [ebp-0x54],edi
6401c277:	mov    DWORD PTR [ebp-0x14],edi
6401c27a:	mov    DWORD PTR [ebp-0x38],edi
6401c27d:	mov    DWORD PTR [ebp-0x18],edi
6401c280:	mov    DWORD PTR [ebp-0x30],edi
6401c283:	mov    DWORD PTR [ebp-0x48],edi
6401c286:	mov    DWORD PTR [ebp-0x34],edi
6401c289:	call   0x64014325
6401c28e:	cmp    DWORD PTR [ebp-0x3c],edi
6401c291:	jne    0x6401c2c0
6401c293:	call   0x640164c3
6401c298:	push   edi
6401c299:	push   edi
6401c29a:	push   edi
6401c29b:	push   edi
6401c29c:	mov    DWORD PTR [eax],0x16
6401c2a2:	push   edi
6401c2a3:	call   0x64013e52
6401c2a8:	add    esp,0x14
6401c2ab:	cmp    BYTE PTR [ebp-0x58],0x0
6401c2af:	je     0x6401c2b8
6401c2b1:	mov    eax,DWORD PTR [ebp-0x5c]
6401c2b4:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c2b8:	or     eax,0xffffffff
6401c2bb:	jmp    0x6401cb0b
6401c2c0:	cmp    esi,edi
6401c2c2:	je     0x6401c293
6401c2c4:	movzx  edx,WORD PTR [esi]
6401c2c7:	xor    ecx,ecx
6401c2c9:	cmp    dx,di
6401c2cc:	mov    DWORD PTR [ebp-0x2c],edi
6401c2cf:	mov    DWORD PTR [ebp-0x20],edi
6401c2d2:	mov    DWORD PTR [ebp-0x50],edi
6401c2d5:	mov    DWORD PTR [ebp-0x24],edx
6401c2d8:	je     0x6401cafb
6401c2de:	push   0x2
6401c2e0:	pop    edi
6401c2e1:	add    esi,edi
6401c2e3:	cmp    DWORD PTR [ebp-0x2c],0x0
6401c2e7:	mov    DWORD PTR [ebp-0x4c],esi
6401c2ea:	jl     0x6401cafb
6401c2f0:	lea    eax,[edx-0x20]
6401c2f3:	cmp    ax,0x58
6401c2f7:	ja     0x6401c308
6401c2f9:	movzx  eax,dx
6401c2fc:	movzx  eax,BYTE PTR [eax+0x64028568]
6401c303:	and    eax,0xf
6401c306:	jmp    0x6401c30a
6401c308:	xor    eax,eax
6401c30a:	movsx  eax,BYTE PTR [ecx+eax*8+0x64028588]
6401c312:	push   0x7
6401c314:	sar    eax,0x4
6401c317:	pop    ecx
6401c318:	cmp    eax,ecx
6401c31a:	mov    DWORD PTR [ebp-0x68],eax
6401c31d:	ja     0x6401cac9
6401c323:	jmp    DWORD PTR [eax*4+0x6401cb23]
6401c32a:	xor    eax,eax
6401c32c:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c330:	mov    DWORD PTR [ebp-0x6c],eax
6401c333:	mov    DWORD PTR [ebp-0x48],eax
6401c336:	mov    DWORD PTR [ebp-0x38],eax
6401c339:	mov    DWORD PTR [ebp-0x30],eax
6401c33c:	mov    DWORD PTR [ebp-0x14],eax
6401c33f:	mov    DWORD PTR [ebp-0x34],eax
6401c342:	jmp    0x6401cac9
6401c347:	movzx  eax,dx
6401c34a:	sub    eax,0x20
6401c34d:	je     0x6401c38d
6401c34f:	sub    eax,0x3
6401c352:	je     0x6401c381
6401c354:	sub    eax,0x8
6401c357:	je     0x6401c378
6401c359:	sub    eax,edi
6401c35b:	je     0x6401c36f
6401c35d:	sub    eax,0x3
6401c360:	jne    0x6401cac9
6401c366:	or     DWORD PTR [ebp-0x14],0x8
6401c36a:	jmp    0x6401cac9
6401c36f:	or     DWORD PTR [ebp-0x14],0x4
6401c373:	jmp    0x6401cac9
6401c378:	or     DWORD PTR [ebp-0x14],0x1
6401c37c:	jmp    0x6401cac9
6401c381:	or     DWORD PTR [ebp-0x14],0x80
6401c388:	jmp    0x6401cac9
6401c38d:	or     DWORD PTR [ebp-0x14],edi
6401c390:	jmp    0x6401cac9
6401c395:	cmp    dx,0x2a
6401c399:	jne    0x6401c3bb
6401c39b:	add    ebx,0x4
6401c39e:	mov    DWORD PTR [ebp-0x28],ebx
6401c3a1:	mov    ebx,DWORD PTR [ebx-0x4]
6401c3a4:	test   ebx,ebx
6401c3a6:	mov    DWORD PTR [ebp-0x38],ebx
6401c3a9:	jge    0x6401cac9
6401c3af:	or     DWORD PTR [ebp-0x14],0x4
6401c3b3:	neg    DWORD PTR [ebp-0x38]
6401c3b6:	jmp    0x6401cac9
6401c3bb:	mov    eax,DWORD PTR [ebp-0x38]
6401c3be:	imul   eax,eax,0xa
6401c3c1:	movzx  ecx,dx
6401c3c4:	lea    eax,[eax+ecx*1-0x30]
6401c3c8:	mov    DWORD PTR [ebp-0x38],eax
6401c3cb:	jmp    0x6401cac9
6401c3d0:	and    DWORD PTR [ebp-0x18],0x0
6401c3d4:	jmp    0x6401cac9
6401c3d9:	cmp    dx,0x2a
6401c3dd:	jne    0x6401c3fc
6401c3df:	add    ebx,0x4
6401c3e2:	mov    DWORD PTR [ebp-0x28],ebx
6401c3e5:	mov    ebx,DWORD PTR [ebx-0x4]
6401c3e8:	test   ebx,ebx
6401c3ea:	mov    DWORD PTR [ebp-0x18],ebx
6401c3ed:	jge    0x6401cac9
6401c3f3:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c3f7:	jmp    0x6401cac9
6401c3fc:	mov    eax,DWORD PTR [ebp-0x18]
6401c3ff:	imul   eax,eax,0xa
6401c402:	movzx  ecx,dx
6401c405:	lea    eax,[eax+ecx*1-0x30]
6401c409:	mov    DWORD PTR [ebp-0x18],eax
6401c40c:	jmp    0x6401cac9
6401c411:	movzx  eax,dx
6401c414:	cmp    eax,0x49
6401c417:	je     0x6401c461
6401c419:	cmp    eax,0x68
6401c41c:	je     0x6401c458
6401c41e:	cmp    eax,0x6c
6401c421:	je     0x6401c438
6401c423:	cmp    eax,0x77
6401c426:	jne    0x6401cac9
6401c42c:	or     DWORD PTR [ebp-0x14],0x800
6401c433:	jmp    0x6401cac9
6401c438:	cmp    WORD PTR [esi],0x6c
6401c43c:	jne    0x6401c44f
6401c43e:	add    esi,edi
6401c440:	or     DWORD PTR [ebp-0x14],0x1000
6401c447:	mov    DWORD PTR [ebp-0x4c],esi
6401c44a:	jmp    0x6401cac9
6401c44f:	or     DWORD PTR [ebp-0x14],0x10
6401c453:	jmp    0x6401cac9
6401c458:	or     DWORD PTR [ebp-0x14],0x20
6401c45c:	jmp    0x6401cac9
6401c461:	movzx  eax,WORD PTR [esi]
6401c464:	cmp    ax,0x36
6401c468:	jne    0x6401c483
6401c46a:	cmp    WORD PTR [esi+0x2],0x34
6401c46f:	jne    0x6401c483
6401c471:	add    esi,0x4
6401c474:	or     DWORD PTR [ebp-0x14],0x8000
6401c47b:	mov    DWORD PTR [ebp-0x4c],esi
6401c47e:	jmp    0x6401cac9
6401c483:	cmp    ax,0x33
6401c487:	jne    0x6401c4a2
6401c489:	cmp    WORD PTR [esi+0x2],0x32
6401c48e:	jne    0x6401c4a2
6401c490:	add    esi,0x4
6401c493:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401c49a:	mov    DWORD PTR [ebp-0x4c],esi
6401c49d:	jmp    0x6401cac9
6401c4a2:	cmp    ax,0x64
6401c4a6:	je     0x6401cac9
6401c4ac:	cmp    ax,0x69
6401c4b0:	je     0x6401cac9
6401c4b6:	cmp    ax,0x6f
6401c4ba:	je     0x6401cac9
6401c4c0:	cmp    ax,0x75
6401c4c4:	je     0x6401cac9
6401c4ca:	cmp    ax,0x78
6401c4ce:	je     0x6401cac9
6401c4d4:	cmp    ax,0x58
6401c4d8:	je     0x6401cac9
6401c4de:	and    DWORD PTR [ebp-0x68],0x0
6401c4e2:	mov    eax,DWORD PTR [ebp-0x3c]
6401c4e5:	push   edx
6401c4e6:	lea    esi,[ebp-0x2c]
6401c4e9:	mov    DWORD PTR [ebp-0x34],0x1
6401c4f0:	call   0x6401cb43
6401c4f5:	jmp    0x6401cac8
6401c4fa:	movzx  eax,dx
6401c4fd:	cmp    eax,0x64
6401c500:	jg     0x6401c6ad
6401c506:	je     0x6401c72c
6401c50c:	cmp    eax,0x53
6401c50f:	jg     0x6401c5ec
6401c515:	je     0x6401c576
6401c517:	sub    eax,0x41
6401c51a:	je     0x6401c52c
6401c51c:	sub    eax,edi
6401c51e:	je     0x6401c561
6401c520:	sub    eax,edi
6401c522:	je     0x6401c52c
6401c524:	sub    eax,edi
6401c526:	jne    0x6401c9ad
6401c52c:	add    edx,0x20
6401c52f:	mov    DWORD PTR [ebp-0x6c],0x1
6401c536:	mov    DWORD PTR [ebp-0x24],edx
6401c539:	or     DWORD PTR [ebp-0x14],0x40
6401c53d:	cmp    DWORD PTR [ebp-0x18],0x0
6401c541:	lea    esi,[ebp-0x10]
6401c544:	mov    eax,0x200
6401c549:	mov    DWORD PTR [ebp-0x1c],esi
6401c54c:	mov    DWORD PTR [ebp-0x20],eax
6401c54f:	jge    0x6401c750
6401c555:	mov    DWORD PTR [ebp-0x18],0x6
6401c55c:	jmp    0x6401c79d
6401c561:	test   WORD PTR [ebp-0x14],0x830
6401c567:	jne    0x6401c609
6401c56d:	or     DWORD PTR [ebp-0x14],0x20
6401c571:	jmp    0x6401c609
6401c576:	test   WORD PTR [ebp-0x14],0x830
6401c57c:	jne    0x6401c582
6401c57e:	or     DWORD PTR [ebp-0x14],0x20
6401c582:	mov    edi,DWORD PTR [ebp-0x18]
6401c585:	cmp    edi,0xffffffff
6401c588:	jne    0x6401c58f
6401c58a:	mov    edi,0x7fffffff
6401c58f:	add    ebx,0x4
6401c592:	test   BYTE PTR [ebp-0x14],0x20
6401c596:	mov    DWORD PTR [ebp-0x28],ebx
6401c599:	mov    ebx,DWORD PTR [ebx-0x4]
6401c59c:	mov    DWORD PTR [ebp-0x1c],ebx
6401c59f:	je     0x6401c980
6401c5a5:	test   ebx,ebx
6401c5a7:	jne    0x6401c5b1
6401c5a9:	mov    eax,ds:0x64038280
6401c5ae:	mov    DWORD PTR [ebp-0x1c],eax
6401c5b1:	and    DWORD PTR [ebp-0x20],0x0
6401c5b5:	test   edi,edi
6401c5b7:	mov    esi,DWORD PTR [ebp-0x1c]
6401c5ba:	jle    0x6401c9ad
6401c5c0:	mov    al,BYTE PTR [esi]
6401c5c2:	test   al,al
6401c5c4:	je     0x6401c9ad
6401c5ca:	lea    ecx,[ebp-0x64]
6401c5cd:	movzx  eax,al
6401c5d0:	push   ecx
6401c5d1:	push   eax
6401c5d2:	call   0x64015117
6401c5d7:	test   eax,eax
6401c5d9:	pop    ecx
6401c5da:	pop    ecx
6401c5db:	je     0x6401c5de
6401c5dd:	inc    esi
6401c5de:	inc    esi
6401c5df:	inc    DWORD PTR [ebp-0x20]
6401c5e2:	cmp    DWORD PTR [ebp-0x20],edi
6401c5e5:	jl     0x6401c5c0
6401c5e7:	jmp    0x6401c9ad
6401c5ec:	sub    eax,0x58
6401c5ef:	je     0x6401c838
6401c5f5:	sub    eax,edi
6401c5f7:	je     0x6401c660
6401c5f9:	sub    eax,ecx
6401c5fb:	je     0x6401c539
6401c601:	sub    eax,edi
6401c603:	jne    0x6401c9ad
6401c609:	movzx  eax,WORD PTR [ebx]
6401c60c:	add    ebx,0x4
6401c60f:	xor    esi,esi
6401c611:	inc    esi
6401c612:	test   BYTE PTR [ebp-0x14],0x20
6401c616:	mov    DWORD PTR [ebp-0x34],esi
6401c619:	mov    DWORD PTR [ebp-0x28],ebx
6401c61c:	mov    DWORD PTR [ebp-0x70],eax
6401c61f:	je     0x6401c64e
6401c621:	mov    BYTE PTR [ebp-0x40],al
6401c624:	lea    eax,[ebp-0x64]
6401c627:	push   eax
6401c628:	mov    eax,DWORD PTR [ebp-0x64]
6401c62b:	mov    BYTE PTR [ebp-0x3f],0x0
6401c62f:	push   DWORD PTR [eax+0xac]
6401c635:	lea    eax,[ebp-0x40]
6401c638:	push   eax
6401c639:	lea    eax,[ebp-0x10]
6401c63c:	push   eax
6401c63d:	call   0x6401ed8b
6401c642:	add    esp,0x10
6401c645:	test   eax,eax
6401c647:	jge    0x6401c652
6401c649:	mov    DWORD PTR [ebp-0x48],esi
6401c64c:	jmp    0x6401c652
6401c64e:	mov    WORD PTR [ebp-0x10],ax
6401c652:	lea    eax,[ebp-0x10]
6401c655:	mov    DWORD PTR [ebp-0x1c],eax
6401c658:	mov    DWORD PTR [ebp-0x20],esi
6401c65b:	jmp    0x6401c9ad
6401c660:	mov    eax,DWORD PTR [ebx]
6401c662:	add    ebx,0x4
6401c665:	test   eax,eax
6401c667:	mov    DWORD PTR [ebp-0x28],ebx
6401c66a:	je     0x6401c699
6401c66c:	mov    ecx,DWORD PTR [eax+0x4]
6401c66f:	test   ecx,ecx
6401c671:	je     0x6401c699
6401c673:	test   WORD PTR [ebp-0x14],0x800
6401c679:	movsx  eax,WORD PTR [eax]
6401c67c:	mov    DWORD PTR [ebp-0x1c],ecx
6401c67f:	je     0x6401c690
6401c681:	cdq    
6401c682:	sub    eax,edx
6401c684:	mov    DWORD PTR [ebp-0x34],0x1
6401c68b:	jmp    0x6401c9a8
6401c690:	and    DWORD PTR [ebp-0x34],0x0
6401c694:	jmp    0x6401c9aa
6401c699:	mov    eax,ds:0x64038280
6401c69e:	mov    DWORD PTR [ebp-0x1c],eax
6401c6a1:	push   eax
6401c6a2:	call   0x64015550
6401c6a7:	pop    ecx
6401c6a8:	jmp    0x6401c9aa
6401c6ad:	cmp    eax,0x70
6401c6b0:	jg     0x6401c83d
6401c6b6:	je     0x6401c831
6401c6bc:	cmp    eax,0x65
6401c6bf:	jl     0x6401c9ad
6401c6c5:	cmp    eax,0x67
6401c6c8:	jle    0x6401c539
6401c6ce:	cmp    eax,0x69
6401c6d1:	je     0x6401c72c
6401c6d3:	cmp    eax,0x6e
6401c6d6:	je     0x6401c6f7
6401c6d8:	cmp    eax,0x6f
6401c6db:	jne    0x6401c9ad
6401c6e1:	test   BYTE PTR [ebp-0x14],0x80
6401c6e5:	mov    DWORD PTR [ebp-0x24],0x8
6401c6ec:	je     0x6401c737
6401c6ee:	or     DWORD PTR [ebp-0x14],0x200
6401c6f5:	jmp    0x6401c737
6401c6f7:	mov    esi,DWORD PTR [ebx]
6401c6f9:	add    ebx,0x4
6401c6fc:	mov    DWORD PTR [ebp-0x28],ebx
6401c6ff:	call   0x6401eb39
6401c704:	test   eax,eax
6401c706:	je     0x6401cae4
6401c70c:	test   BYTE PTR [ebp-0x14],0x20
6401c710:	je     0x6401c71b
6401c712:	mov    ax,WORD PTR [ebp-0x2c]
6401c716:	mov    WORD PTR [esi],ax
6401c719:	jmp    0x6401c720
6401c71b:	mov    eax,DWORD PTR [ebp-0x2c]
6401c71e:	mov    DWORD PTR [esi],eax
6401c720:	mov    DWORD PTR [ebp-0x48],0x1
6401c727:	jmp    0x6401cab6
6401c72c:	or     DWORD PTR [ebp-0x14],0x40
6401c730:	mov    DWORD PTR [ebp-0x24],0xa
6401c737:	test   WORD PTR [ebp-0x14],0x8000
6401c73d:	je     0x6401c887
6401c743:	mov    eax,DWORD PTR [ebx]
6401c745:	mov    edx,DWORD PTR [ebx+0x4]
6401c748:	add    ebx,0x8
6401c74b:	jmp    0x6401c8c0
6401c750:	jne    0x6401c761
6401c752:	cmp    dx,0x67
6401c756:	jne    0x6401c79d
6401c758:	mov    DWORD PTR [ebp-0x18],0x1
6401c75f:	jmp    0x6401c79d
6401c761:	cmp    DWORD PTR [ebp-0x18],eax
6401c764:	jle    0x6401c769
6401c766:	mov    DWORD PTR [ebp-0x18],eax
6401c769:	cmp    DWORD PTR [ebp-0x18],0xa3
6401c770:	jle    0x6401c79d
6401c772:	mov    edi,DWORD PTR [ebp-0x18]
6401c775:	add    edi,0x15d
6401c77b:	push   edi
6401c77c:	call   0x64015d2f
6401c781:	test   eax,eax
6401c783:	mov    edx,DWORD PTR [ebp-0x24]
6401c786:	pop    ecx
6401c787:	mov    DWORD PTR [ebp-0x50],eax
6401c78a:	je     0x6401c796
6401c78c:	mov    DWORD PTR [ebp-0x1c],eax
6401c78f:	mov    DWORD PTR [ebp-0x20],edi
6401c792:	mov    esi,eax
6401c794:	jmp    0x6401c79d
6401c796:	mov    DWORD PTR [ebp-0x18],0xa3
6401c79d:	mov    eax,DWORD PTR [ebx]
6401c79f:	add    ebx,0x8
6401c7a2:	mov    DWORD PTR [ebp-0x78],eax
6401c7a5:	mov    eax,DWORD PTR [ebx-0x4]
6401c7a8:	mov    DWORD PTR [ebp-0x74],eax
6401c7ab:	lea    eax,[ebp-0x64]
6401c7ae:	push   eax
6401c7af:	push   DWORD PTR [ebp-0x6c]
6401c7b2:	movsx  eax,dl
6401c7b5:	push   DWORD PTR [ebp-0x18]
6401c7b8:	mov    DWORD PTR [ebp-0x28],ebx
6401c7bb:	push   eax
6401c7bc:	push   DWORD PTR [ebp-0x20]
6401c7bf:	lea    eax,[ebp-0x78]
6401c7c2:	push   esi
6401c7c3:	push   eax
6401c7c4:	push   DWORD PTR ds:0x64038598
6401c7ca:	call   0x6401760e
6401c7cf:	pop    ecx
6401c7d0:	call   eax
6401c7d2:	mov    ebx,DWORD PTR [ebp-0x14]
6401c7d5:	add    esp,0x1c
6401c7d8:	and    ebx,0x80
6401c7de:	je     0x6401c7fb
6401c7e0:	cmp    DWORD PTR [ebp-0x18],0x0
6401c7e4:	jne    0x6401c7fb
6401c7e6:	lea    eax,[ebp-0x64]
6401c7e9:	push   eax
6401c7ea:	push   esi
6401c7eb:	push   DWORD PTR ds:0x640385a4
6401c7f1:	call   0x6401760e
6401c7f6:	pop    ecx
6401c7f7:	call   eax
6401c7f9:	pop    ecx
6401c7fa:	pop    ecx
6401c7fb:	cmp    WORD PTR [ebp-0x24],0x67
6401c800:	jne    0x6401c81b
6401c802:	test   ebx,ebx
6401c804:	jne    0x6401c81b
6401c806:	lea    eax,[ebp-0x64]
6401c809:	push   eax
6401c80a:	push   esi
6401c80b:	push   DWORD PTR ds:0x640385a0
6401c811:	call   0x6401760e
6401c816:	pop    ecx
6401c817:	call   eax
6401c819:	pop    ecx
6401c81a:	pop    ecx
6401c81b:	cmp    BYTE PTR [esi],0x2d
6401c81e:	jne    0x6401c82b
6401c820:	or     DWORD PTR [ebp-0x14],0x100
6401c827:	inc    esi
6401c828:	mov    DWORD PTR [ebp-0x1c],esi
6401c82b:	push   esi
6401c82c:	jmp    0x6401c6a2
6401c831:	mov    DWORD PTR [ebp-0x18],0x8
6401c838:	mov    DWORD PTR [ebp-0x54],ecx
6401c83b:	jmp    0x6401c85e
6401c83d:	sub    eax,0x73
6401c840:	je     0x6401c582
6401c846:	sub    eax,edi
6401c848:	je     0x6401c730
6401c84e:	sub    eax,0x3
6401c851:	jne    0x6401c9ad
6401c857:	mov    DWORD PTR [ebp-0x54],0x27
6401c85e:	test   BYTE PTR [ebp-0x14],0x80
6401c862:	mov    DWORD PTR [ebp-0x24],0x10
6401c869:	je     0x6401c737
6401c86f:	mov    eax,DWORD PTR [ebp-0x54]
6401c872:	add    eax,0x51
6401c875:	mov    WORD PTR [ebp-0x44],0x30
6401c87b:	mov    WORD PTR [ebp-0x42],ax
6401c87f:	mov    DWORD PTR [ebp-0x30],edi
6401c882:	jmp    0x6401c737
6401c887:	test   WORD PTR [ebp-0x14],0x1000
6401c88d:	jne    0x6401c743
6401c893:	add    ebx,0x4
6401c896:	test   BYTE PTR [ebp-0x14],0x20
6401c89a:	je     0x6401c8b2
6401c89c:	test   BYTE PTR [ebp-0x14],0x40
6401c8a0:	mov    DWORD PTR [ebp-0x28],ebx
6401c8a3:	je     0x6401c8ab
6401c8a5:	movsx  eax,WORD PTR [ebx-0x4]
6401c8a9:	jmp    0x6401c8af
6401c8ab:	movzx  eax,WORD PTR [ebx-0x4]
6401c8af:	cdq    
6401c8b0:	jmp    0x6401c8c3
6401c8b2:	test   BYTE PTR [ebp-0x14],0x40
6401c8b6:	mov    eax,DWORD PTR [ebx-0x4]
6401c8b9:	je     0x6401c8be
6401c8bb:	cdq    
6401c8bc:	jmp    0x6401c8c0
6401c8be:	xor    edx,edx
6401c8c0:	mov    DWORD PTR [ebp-0x28],ebx
6401c8c3:	test   BYTE PTR [ebp-0x14],0x40
6401c8c7:	je     0x6401c8e1
6401c8c9:	test   edx,edx
6401c8cb:	jg     0x6401c8e1
6401c8cd:	jl     0x6401c8d3
6401c8cf:	test   eax,eax
6401c8d1:	jae    0x6401c8e1
6401c8d3:	neg    eax
6401c8d5:	adc    edx,0x0
6401c8d8:	neg    edx
6401c8da:	or     DWORD PTR [ebp-0x14],0x100
6401c8e1:	test   WORD PTR [ebp-0x14],0x9000
6401c8e7:	mov    ebx,edx
6401c8e9:	mov    edi,eax
6401c8eb:	jne    0x6401c8ef
6401c8ed:	xor    ebx,ebx
6401c8ef:	cmp    DWORD PTR [ebp-0x18],0x0
6401c8f3:	jge    0x6401c8fe
6401c8f5:	mov    DWORD PTR [ebp-0x18],0x1
6401c8fc:	jmp    0x6401c90f
6401c8fe:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401c902:	mov    eax,0x200
6401c907:	cmp    DWORD PTR [ebp-0x18],eax
6401c90a:	jle    0x6401c90f
6401c90c:	mov    DWORD PTR [ebp-0x18],eax
6401c90f:	mov    eax,edi
6401c911:	or     eax,ebx
6401c913:	jne    0x6401c918
6401c915:	and    DWORD PTR [ebp-0x30],eax
6401c918:	lea    esi,[ebp+0x1ef]
6401c91e:	mov    eax,DWORD PTR [ebp-0x18]
6401c921:	dec    DWORD PTR [ebp-0x18]
6401c924:	test   eax,eax
6401c926:	jg     0x6401c92e
6401c928:	mov    eax,edi
6401c92a:	or     eax,ebx
6401c92c:	je     0x6401c952
6401c92e:	mov    eax,DWORD PTR [ebp-0x24]
6401c931:	cdq    
6401c932:	push   edx
6401c933:	push   eax
6401c934:	push   ebx
6401c935:	push   edi
6401c936:	call   0x6401ba40
6401c93b:	add    ecx,0x30
6401c93e:	cmp    ecx,0x39
6401c941:	mov    DWORD PTR [ebp-0x7c],ebx
6401c944:	mov    edi,eax
6401c946:	mov    ebx,edx
6401c948:	jle    0x6401c94d
6401c94a:	add    ecx,DWORD PTR [ebp-0x54]
6401c94d:	mov    BYTE PTR [esi],cl
6401c94f:	dec    esi
6401c950:	jmp    0x6401c91e
6401c952:	lea    eax,[ebp+0x1ef]
6401c958:	sub    eax,esi
6401c95a:	inc    esi
6401c95b:	test   WORD PTR [ebp-0x14],0x200
6401c961:	mov    DWORD PTR [ebp-0x20],eax
6401c964:	mov    DWORD PTR [ebp-0x1c],esi
6401c967:	je     0x6401c9ad
6401c969:	test   eax,eax
6401c96b:	je     0x6401c974
6401c96d:	mov    ecx,esi
6401c96f:	cmp    BYTE PTR [ecx],0x30
6401c972:	je     0x6401c9ad
6401c974:	dec    DWORD PTR [ebp-0x1c]
6401c977:	mov    ecx,DWORD PTR [ebp-0x1c]
6401c97a:	mov    BYTE PTR [ecx],0x30
6401c97d:	inc    eax
6401c97e:	jmp    0x6401c9aa
6401c980:	test   ebx,ebx
6401c982:	jne    0x6401c98c
6401c984:	mov    eax,ds:0x64038284
6401c989:	mov    DWORD PTR [ebp-0x1c],eax
6401c98c:	mov    eax,DWORD PTR [ebp-0x1c]
6401c98f:	mov    DWORD PTR [ebp-0x34],0x1
6401c996:	jmp    0x6401c9a1
6401c998:	dec    edi
6401c999:	cmp    WORD PTR [eax],0x0
6401c99d:	je     0x6401c9a5
6401c99f:	inc    eax
6401c9a0:	inc    eax
6401c9a1:	test   edi,edi
6401c9a3:	jne    0x6401c998
6401c9a5:	sub    eax,DWORD PTR [ebp-0x1c]
6401c9a8:	sar    eax,1
6401c9aa:	mov    DWORD PTR [ebp-0x20],eax
6401c9ad:	cmp    DWORD PTR [ebp-0x48],0x0
6401c9b1:	jne    0x6401cab6
6401c9b7:	mov    eax,DWORD PTR [ebp-0x14]
6401c9ba:	test   al,0x40
6401c9bc:	je     0x6401c9e9
6401c9be:	test   ax,0x100
6401c9c2:	je     0x6401c9cc
6401c9c4:	mov    WORD PTR [ebp-0x44],0x2d
6401c9ca:	jmp    0x6401c9e2
6401c9cc:	test   al,0x1
6401c9ce:	je     0x6401c9d8
6401c9d0:	mov    WORD PTR [ebp-0x44],0x2b
6401c9d6:	jmp    0x6401c9e2
6401c9d8:	test   al,0x2
6401c9da:	je     0x6401c9e9
6401c9dc:	mov    WORD PTR [ebp-0x44],0x20
6401c9e2:	mov    DWORD PTR [ebp-0x30],0x1
6401c9e9:	mov    ebx,DWORD PTR [ebp-0x38]
6401c9ec:	mov    esi,DWORD PTR [ebp-0x20]
6401c9ef:	sub    ebx,esi
6401c9f1:	sub    ebx,DWORD PTR [ebp-0x30]
6401c9f4:	test   BYTE PTR [ebp-0x14],0xc
6401c9f8:	jne    0x6401ca0b
6401c9fa:	push   DWORD PTR [ebp-0x3c]
6401c9fd:	lea    eax,[ebp-0x2c]
6401ca00:	push   ebx
6401ca01:	push   0x20
6401ca03:	call   0x6401cb68
6401ca08:	add    esp,0xc
6401ca0b:	push   DWORD PTR [ebp-0x30]
6401ca0e:	mov    edi,DWORD PTR [ebp-0x3c]
6401ca11:	lea    eax,[ebp-0x2c]
6401ca14:	lea    ecx,[ebp-0x44]
6401ca17:	call   0x6401c1e4
6401ca1c:	test   BYTE PTR [ebp-0x14],0x8
6401ca20:	pop    ecx
6401ca21:	je     0x6401ca38
6401ca23:	test   BYTE PTR [ebp-0x14],0x4
6401ca27:	jne    0x6401ca38
6401ca29:	push   edi
6401ca2a:	push   ebx
6401ca2b:	push   0x30
6401ca2d:	lea    eax,[ebp-0x2c]
6401ca30:	call   0x6401cb68
6401ca35:	add    esp,0xc
6401ca38:	cmp    DWORD PTR [ebp-0x34],0x0
6401ca3c:	jne    0x6401ca8c
6401ca3e:	test   esi,esi
6401ca40:	jle    0x6401ca8c
6401ca42:	mov    edi,DWORD PTR [ebp-0x1c]
6401ca45:	mov    DWORD PTR [ebp-0x24],esi
6401ca48:	dec    DWORD PTR [ebp-0x24]
6401ca4b:	lea    eax,[ebp-0x64]
6401ca4e:	push   eax
6401ca4f:	mov    eax,DWORD PTR [ebp-0x64]
6401ca52:	push   DWORD PTR [eax+0xac]
6401ca58:	lea    eax,[ebp-0x70]
6401ca5b:	push   edi
6401ca5c:	push   eax
6401ca5d:	call   0x6401ed8b
6401ca62:	add    esp,0x10
6401ca65:	test   eax,eax
6401ca67:	mov    DWORD PTR [ebp-0x7c],eax
6401ca6a:	jle    0x6401ca86
6401ca6c:	push   DWORD PTR [ebp-0x70]
6401ca6f:	mov    eax,DWORD PTR [ebp-0x3c]
6401ca72:	lea    esi,[ebp-0x2c]
6401ca75:	call   0x6401cb43
6401ca7a:	add    edi,DWORD PTR [ebp-0x7c]
6401ca7d:	cmp    DWORD PTR [ebp-0x24],0x0
6401ca81:	pop    ecx
6401ca82:	jg     0x6401ca48
6401ca84:	jmp    0x6401ca99
6401ca86:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401ca8a:	jmp    0x6401ca99
6401ca8c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ca8f:	push   esi
6401ca90:	lea    eax,[ebp-0x2c]
6401ca93:	call   0x6401c1e4
6401ca98:	pop    ecx
6401ca99:	cmp    DWORD PTR [ebp-0x2c],0x0
6401ca9d:	jl     0x6401cab6
6401ca9f:	test   BYTE PTR [ebp-0x14],0x4
6401caa3:	je     0x6401cab6
6401caa5:	push   DWORD PTR [ebp-0x3c]
6401caa8:	lea    eax,[ebp-0x2c]
6401caab:	push   ebx
6401caac:	push   0x20
6401caae:	call   0x6401cb68
6401cab3:	add    esp,0xc
6401cab6:	cmp    DWORD PTR [ebp-0x50],0x0
6401caba:	je     0x6401cac9
6401cabc:	push   DWORD PTR [ebp-0x50]
6401cabf:	call   0x6401475a
6401cac4:	and    DWORD PTR [ebp-0x50],0x0
6401cac8:	pop    ecx
6401cac9:	mov    esi,DWORD PTR [ebp-0x4c]
6401cacc:	movzx  eax,WORD PTR [esi]
6401cacf:	test   ax,ax
6401cad2:	mov    DWORD PTR [ebp-0x24],eax
6401cad5:	je     0x6401cafb
6401cad7:	mov    ecx,DWORD PTR [ebp-0x68]
6401cada:	mov    ebx,DWORD PTR [ebp-0x28]
6401cadd:	mov    edx,eax
6401cadf:	jmp    0x6401c2de
6401cae4:	call   0x640164c3
6401cae9:	mov    DWORD PTR [eax],0x16
6401caef:	xor    eax,eax
6401caf1:	push   eax
6401caf2:	push   eax
6401caf3:	push   eax
6401caf4:	push   eax
6401caf5:	push   eax
6401caf6:	jmp    0x6401c2a3
6401cafb:	cmp    BYTE PTR [ebp-0x58],0x0
6401caff:	je     0x6401cb08
6401cb01:	mov    eax,DWORD PTR [ebp-0x5c]
6401cb04:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cb08:	mov    eax,DWORD PTR [ebp-0x2c]
6401cb0b:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401cb11:	pop    edi
6401cb12:	pop    esi
6401cb13:	xor    ecx,ebp
6401cb15:	pop    ebx
6401cb16:	call   0x64013d06
6401cb1b:	add    ebp,0x3f4
6401cb21:	leave  
6401cb22:	ret    
6401cb23:	loop   0x6401cae9
6401cb25:	add    DWORD PTR [edx+ebp*1-0x3d],esp
6401cb29:	add    DWORD PTR [edi+eax*2-0x3d],esp
6401cb2d:	add    DWORD PTR [ebp+edx*4-0x3d],esp
6401cb31:	add    DWORD PTR [eax+edx*8-0x3d],esp
6401cb35:	add    DWORD PTR [ecx+ebx*8-0x3d],esp
6401cb39:	add    DWORD PTR [ecx+edx*1-0x3c],esp
6401cb3d:	add    DWORD PTR [edx+edi*8-0x3c],esp
6401cb41:	add    DWORD PTR [esi+esi*8+0x40],esp
6401cb45:	or     al,0x40
6401cb47:	je     0x6401cb4f
6401cb49:	cmp    DWORD PTR [eax+0x8],0x0
6401cb4d:	je     0x6401cb65
6401cb4f:	push   eax
6401cb50:	push   DWORD PTR [esp+0x8]
6401cb54:	call   0x64020aa6
6401cb59:	cmp    ax,0xffff
6401cb5d:	pop    ecx
6401cb5e:	pop    ecx
6401cb5f:	jne    0x6401cb65
6401cb61:	or     DWORD PTR [esi],0xffffffff
6401cb64:	ret    
6401cb65:	inc    DWORD PTR [esi]
6401cb67:	ret    
6401cb68:	push   ebp
6401cb69:	mov    ebp,esp
6401cb6b:	push   esi
6401cb6c:	mov    esi,eax
6401cb6e:	jmp    0x6401cb84
6401cb70:	push   DWORD PTR [ebp+0x8]
6401cb73:	mov    eax,DWORD PTR [ebp+0x10]
6401cb76:	dec    DWORD PTR [ebp+0xc]
6401cb79:	call   0x6401cb43
6401cb7e:	cmp    DWORD PTR [esi],0xffffffff
6401cb81:	pop    ecx
6401cb82:	je     0x6401cb8a
6401cb84:	cmp    DWORD PTR [ebp+0xc],0x0
6401cb88:	jg     0x6401cb70
6401cb8a:	pop    esi
6401cb8b:	pop    ebp
6401cb8c:	ret    
6401cb8d:	push   ebp
6401cb8e:	lea    ebp,[esp-0x3f4]
6401cb95:	sub    esp,0x474
6401cb9b:	mov    eax,ds:0x64037644
6401cba0:	xor    eax,ebp
6401cba2:	mov    DWORD PTR [ebp+0x3f0],eax
6401cba8:	push   ebx
6401cba9:	mov    ebx,DWORD PTR [ebp+0x408]
6401cbaf:	push   esi
6401cbb0:	mov    esi,DWORD PTR [ebp+0x3fc]
6401cbb6:	xor    eax,eax
6401cbb8:	push   edi
6401cbb9:	push   DWORD PTR [ebp+0x404]
6401cbbf:	mov    edi,DWORD PTR [ebp+0x400]
6401cbc5:	lea    ecx,[ebp-0x58]
6401cbc8:	mov    DWORD PTR [ebp-0x48],esi
6401cbcb:	mov    DWORD PTR [ebp-0x24],ebx
6401cbce:	mov    DWORD PTR [ebp-0x60],eax
6401cbd1:	mov    DWORD PTR [ebp-0x14],eax
6401cbd4:	mov    DWORD PTR [ebp-0x38],eax
6401cbd7:	mov    DWORD PTR [ebp-0x18],eax
6401cbda:	mov    DWORD PTR [ebp-0x30],eax
6401cbdd:	mov    DWORD PTR [ebp-0x5c],eax
6401cbe0:	mov    DWORD PTR [ebp-0x34],eax
6401cbe3:	call   0x64014325
6401cbe8:	test   esi,esi
6401cbea:	jne    0x6401cc1b
6401cbec:	call   0x640164c3
6401cbf1:	mov    DWORD PTR [eax],0x16
6401cbf7:	xor    eax,eax
6401cbf9:	push   eax
6401cbfa:	push   eax
6401cbfb:	push   eax
6401cbfc:	push   eax
6401cbfd:	push   eax
6401cbfe:	call   0x64013e52
6401cc03:	add    esp,0x14
6401cc06:	cmp    BYTE PTR [ebp-0x4c],0x0
6401cc0a:	je     0x6401cc13
6401cc0c:	mov    eax,DWORD PTR [ebp-0x50]
6401cc0f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cc13:	or     eax,0xffffffff
6401cc16:	jmp    0x6401d471
6401cc1b:	xor    esi,esi
6401cc1d:	cmp    edi,esi
6401cc1f:	jne    0x6401cc33
6401cc21:	call   0x640164c3
6401cc26:	push   esi
6401cc27:	push   esi
6401cc28:	push   esi
6401cc29:	push   esi
6401cc2a:	mov    DWORD PTR [eax],0x16
6401cc30:	push   esi
6401cc31:	jmp    0x6401cbfe
6401cc33:	movzx  ecx,WORD PTR [edi]
6401cc36:	cmp    cx,si
6401cc39:	mov    DWORD PTR [ebp-0x2c],esi
6401cc3c:	mov    DWORD PTR [ebp-0x20],esi
6401cc3f:	mov    DWORD PTR [ebp-0x40],esi
6401cc42:	mov    DWORD PTR [ebp-0x64],esi
6401cc45:	mov    DWORD PTR [ebp-0x28],ecx
6401cc48:	je     0x6401d461
6401cc4e:	push   0x2
6401cc50:	pop    esi
6401cc51:	add    edi,esi
6401cc53:	xor    eax,eax
6401cc55:	cmp    DWORD PTR [ebp-0x2c],eax
6401cc58:	mov    DWORD PTR [ebp-0x6c],edi
6401cc5b:	jl     0x6401d451
6401cc61:	lea    edx,[ecx-0x20]
6401cc64:	cmp    dx,0x58
6401cc68:	ja     0x6401cc77
6401cc6a:	movzx  eax,cx
6401cc6d:	movzx  eax,BYTE PTR [eax+0x64028b90]
6401cc74:	and    eax,0xf
6401cc77:	mov    edx,DWORD PTR [ebp-0x40]
6401cc7a:	imul   eax,eax,0x9
6401cc7d:	movzx  eax,BYTE PTR [eax+edx*1+0x64028bb0]
6401cc85:	push   0x8
6401cc87:	shr    eax,0x4
6401cc8a:	pop    edx
6401cc8b:	cmp    eax,edx
6401cc8d:	mov    DWORD PTR [ebp-0x40],eax
6401cc90:	je     0x6401cbec
6401cc96:	cmp    eax,0x7
6401cc99:	ja     0x6401d439
6401cc9f:	jmp    DWORD PTR [eax*4+0x6401d489]
6401cca6:	xor    eax,eax
6401cca8:	or     DWORD PTR [ebp-0x18],0xffffffff
6401ccac:	mov    DWORD PTR [ebp-0x68],eax
6401ccaf:	mov    DWORD PTR [ebp-0x5c],eax
6401ccb2:	mov    DWORD PTR [ebp-0x38],eax
6401ccb5:	mov    DWORD PTR [ebp-0x30],eax
6401ccb8:	mov    DWORD PTR [ebp-0x14],eax
6401ccbb:	mov    DWORD PTR [ebp-0x34],eax
6401ccbe:	jmp    0x6401d43f
6401ccc3:	movzx  eax,cx
6401ccc6:	sub    eax,0x20
6401ccc9:	je     0x6401cd07
6401cccb:	sub    eax,0x3
6401ccce:	je     0x6401ccfb
6401ccd0:	sub    eax,edx
6401ccd2:	je     0x6401ccf2
6401ccd4:	sub    eax,esi
6401ccd6:	je     0x6401cce9
6401ccd8:	sub    eax,0x3
6401ccdb:	jne    0x6401d439
6401cce1:	or     DWORD PTR [ebp-0x14],edx
6401cce4:	jmp    0x6401d43f
6401cce9:	or     DWORD PTR [ebp-0x14],0x4
6401cced:	jmp    0x6401d43f
6401ccf2:	or     DWORD PTR [ebp-0x14],0x1
6401ccf6:	jmp    0x6401d43f
6401ccfb:	or     DWORD PTR [ebp-0x14],0x80
6401cd02:	jmp    0x6401d43f
6401cd07:	or     DWORD PTR [ebp-0x14],esi
6401cd0a:	jmp    0x6401d43f
6401cd0f:	cmp    cx,0x2a
6401cd13:	jne    0x6401cd34
6401cd15:	mov    eax,DWORD PTR [ebx]
6401cd17:	add    ebx,0x4
6401cd1a:	test   eax,eax
6401cd1c:	mov    DWORD PTR [ebp-0x24],ebx
6401cd1f:	mov    DWORD PTR [ebp-0x38],eax
6401cd22:	jge    0x6401d43f
6401cd28:	or     DWORD PTR [ebp-0x14],0x4
6401cd2c:	neg    DWORD PTR [ebp-0x38]
6401cd2f:	jmp    0x6401d43f
6401cd34:	mov    eax,DWORD PTR [ebp-0x38]
6401cd37:	imul   eax,eax,0xa
6401cd3a:	movzx  ecx,cx
6401cd3d:	lea    eax,[eax+ecx*1-0x30]
6401cd41:	mov    DWORD PTR [ebp-0x38],eax
6401cd44:	jmp    0x6401d43f
6401cd49:	and    DWORD PTR [ebp-0x18],0x0
6401cd4d:	jmp    0x6401d43f
6401cd52:	cmp    cx,0x2a
6401cd56:	jne    0x6401cd74
6401cd58:	mov    eax,DWORD PTR [ebx]
6401cd5a:	add    ebx,0x4
6401cd5d:	test   eax,eax
6401cd5f:	mov    DWORD PTR [ebp-0x24],ebx
6401cd62:	mov    DWORD PTR [ebp-0x18],eax
6401cd65:	jge    0x6401d43f
6401cd6b:	or     DWORD PTR [ebp-0x18],0xffffffff
6401cd6f:	jmp    0x6401d43f
6401cd74:	mov    eax,DWORD PTR [ebp-0x18]
6401cd77:	imul   eax,eax,0xa
6401cd7a:	movzx  ecx,cx
6401cd7d:	lea    eax,[eax+ecx*1-0x30]
6401cd81:	mov    DWORD PTR [ebp-0x18],eax
6401cd84:	jmp    0x6401d43f
6401cd89:	movzx  eax,cx
6401cd8c:	cmp    eax,0x49
6401cd8f:	je     0x6401cdd6
6401cd91:	cmp    eax,0x68
6401cd94:	je     0x6401cdcd
6401cd96:	cmp    eax,0x6c
6401cd99:	je     0x6401cdb0
6401cd9b:	cmp    eax,0x77
6401cd9e:	jne    0x6401d43f
6401cda4:	or     DWORD PTR [ebp-0x14],0x800
6401cdab:	jmp    0x6401d43f
6401cdb0:	cmp    WORD PTR [edi],0x6c
6401cdb4:	jne    0x6401cdc4
6401cdb6:	add    edi,esi
6401cdb8:	or     DWORD PTR [ebp-0x14],0x1000
6401cdbf:	jmp    0x6401d43f
6401cdc4:	or     DWORD PTR [ebp-0x14],0x10
6401cdc8:	jmp    0x6401d43f
6401cdcd:	or     DWORD PTR [ebp-0x14],0x20
6401cdd1:	jmp    0x6401d43f
6401cdd6:	movzx  eax,WORD PTR [edi]
6401cdd9:	cmp    ax,0x36
6401cddd:	jne    0x6401cdf5
6401cddf:	cmp    WORD PTR [edi+0x2],0x34
6401cde4:	jne    0x6401cdf5
6401cde6:	add    edi,0x4
6401cde9:	or     DWORD PTR [ebp-0x14],0x8000
6401cdf0:	jmp    0x6401d43f
6401cdf5:	cmp    ax,0x33
6401cdf9:	jne    0x6401ce11
6401cdfb:	cmp    WORD PTR [edi+0x2],0x32
6401ce00:	jne    0x6401ce11
6401ce02:	add    edi,0x4
6401ce05:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401ce0c:	jmp    0x6401d43f
6401ce11:	cmp    ax,0x64
6401ce15:	je     0x6401d43f
6401ce1b:	cmp    ax,0x69
6401ce1f:	je     0x6401d43f
6401ce25:	cmp    ax,0x6f
6401ce29:	je     0x6401d43f
6401ce2f:	cmp    ax,0x75
6401ce33:	je     0x6401d43f
6401ce39:	cmp    ax,0x78
6401ce3d:	je     0x6401d43f
6401ce43:	cmp    ax,0x58
6401ce47:	je     0x6401d43f
6401ce4d:	and    DWORD PTR [ebp-0x40],0x0
6401ce51:	mov    eax,DWORD PTR [ebp-0x48]
6401ce54:	push   ecx
6401ce55:	lea    esi,[ebp-0x2c]
6401ce58:	mov    DWORD PTR [ebp-0x34],0x1
6401ce5f:	call   0x6401cb43
6401ce64:	pop    ecx
6401ce65:	jmp    0x6401d43f
6401ce6a:	movzx  eax,cx
6401ce6d:	cmp    eax,0x64
6401ce70:	jg     0x6401d01e
6401ce76:	je     0x6401d099
6401ce7c:	cmp    eax,0x53
6401ce7f:	jg     0x6401cf5c
6401ce85:	je     0x6401cee6
6401ce87:	sub    eax,0x41
6401ce8a:	je     0x6401ce9c
6401ce8c:	sub    eax,esi
6401ce8e:	je     0x6401ced1
6401ce90:	sub    eax,esi
6401ce92:	je     0x6401ce9c
6401ce94:	sub    eax,esi
6401ce96:	jne    0x6401d31d
6401ce9c:	add    ecx,0x20
6401ce9f:	mov    DWORD PTR [ebp-0x68],0x1
6401cea6:	mov    DWORD PTR [ebp-0x28],ecx
6401cea9:	or     DWORD PTR [ebp-0x14],0x40
6401cead:	cmp    DWORD PTR [ebp-0x18],0x0
6401ceb1:	lea    esi,[ebp-0x10]
6401ceb4:	mov    eax,0x200
6401ceb9:	mov    DWORD PTR [ebp-0x1c],esi
6401cebc:	mov    DWORD PTR [ebp-0x20],eax
6401cebf:	jge    0x6401d0bd
6401cec5:	mov    DWORD PTR [ebp-0x18],0x6
6401cecc:	jmp    0x6401d10d
6401ced1:	test   WORD PTR [ebp-0x14],0x830
6401ced7:	jne    0x6401cf7a
6401cedd:	or     DWORD PTR [ebp-0x14],0x20
6401cee1:	jmp    0x6401cf7a
6401cee6:	test   WORD PTR [ebp-0x14],0x830
6401ceec:	jne    0x6401cef2
6401ceee:	or     DWORD PTR [ebp-0x14],0x20
6401cef2:	mov    edi,DWORD PTR [ebp-0x18]
6401cef5:	cmp    edi,0xffffffff
6401cef8:	jne    0x6401ceff
6401cefa:	mov    edi,0x7fffffff
6401ceff:	add    ebx,0x4
6401cf02:	test   BYTE PTR [ebp-0x14],0x20
6401cf06:	mov    DWORD PTR [ebp-0x24],ebx
6401cf09:	mov    ebx,DWORD PTR [ebx-0x4]
6401cf0c:	mov    DWORD PTR [ebp-0x1c],ebx
6401cf0f:	je     0x6401d2f0
6401cf15:	test   ebx,ebx
6401cf17:	jne    0x6401cf21
6401cf19:	mov    eax,ds:0x64038280
6401cf1e:	mov    DWORD PTR [ebp-0x1c],eax
6401cf21:	and    DWORD PTR [ebp-0x20],0x0
6401cf25:	test   edi,edi
6401cf27:	mov    esi,DWORD PTR [ebp-0x1c]
6401cf2a:	jle    0x6401d31d
6401cf30:	mov    al,BYTE PTR [esi]
6401cf32:	test   al,al
6401cf34:	je     0x6401d31d
6401cf3a:	lea    ecx,[ebp-0x58]
6401cf3d:	movzx  eax,al
6401cf40:	push   ecx
6401cf41:	push   eax
6401cf42:	call   0x64015117
6401cf47:	test   eax,eax
6401cf49:	pop    ecx
6401cf4a:	pop    ecx
6401cf4b:	je     0x6401cf4e
6401cf4d:	inc    esi
6401cf4e:	inc    esi
6401cf4f:	inc    DWORD PTR [ebp-0x20]
6401cf52:	cmp    DWORD PTR [ebp-0x20],edi
6401cf55:	jl     0x6401cf30
6401cf57:	jmp    0x6401d31d
6401cf5c:	sub    eax,0x58
6401cf5f:	je     0x6401d1a4
6401cf65:	sub    eax,esi
6401cf67:	je     0x6401cfd1
6401cf69:	sub    eax,0x7
6401cf6c:	je     0x6401cea9
6401cf72:	sub    eax,esi
6401cf74:	jne    0x6401d31d
6401cf7a:	movzx  eax,WORD PTR [ebx]
6401cf7d:	add    ebx,0x4
6401cf80:	xor    esi,esi
6401cf82:	inc    esi
6401cf83:	test   BYTE PTR [ebp-0x14],0x20
6401cf87:	mov    DWORD PTR [ebp-0x34],esi
6401cf8a:	mov    DWORD PTR [ebp-0x24],ebx
6401cf8d:	mov    DWORD PTR [ebp-0x70],eax
6401cf90:	je     0x6401cfbf
6401cf92:	mov    BYTE PTR [ebp-0x44],al
6401cf95:	lea    eax,[ebp-0x58]
6401cf98:	push   eax
6401cf99:	mov    eax,DWORD PTR [ebp-0x58]
6401cf9c:	mov    BYTE PTR [ebp-0x43],0x0
6401cfa0:	push   DWORD PTR [eax+0xac]
6401cfa6:	lea    eax,[ebp-0x44]
6401cfa9:	push   eax
6401cfaa:	lea    eax,[ebp-0x10]
6401cfad:	push   eax
6401cfae:	call   0x6401ed8b
6401cfb3:	add    esp,0x10
6401cfb6:	test   eax,eax
6401cfb8:	jge    0x6401cfc3
6401cfba:	mov    DWORD PTR [ebp-0x5c],esi
6401cfbd:	jmp    0x6401cfc3
6401cfbf:	mov    WORD PTR [ebp-0x10],ax
6401cfc3:	lea    eax,[ebp-0x10]
6401cfc6:	mov    DWORD PTR [ebp-0x1c],eax
6401cfc9:	mov    DWORD PTR [ebp-0x20],esi
6401cfcc:	jmp    0x6401d31d
6401cfd1:	mov    eax,DWORD PTR [ebx]
6401cfd3:	add    ebx,0x4
6401cfd6:	test   eax,eax
6401cfd8:	mov    DWORD PTR [ebp-0x24],ebx
6401cfdb:	je     0x6401d00a
6401cfdd:	mov    ecx,DWORD PTR [eax+0x4]
6401cfe0:	test   ecx,ecx
6401cfe2:	je     0x6401d00a
6401cfe4:	test   WORD PTR [ebp-0x14],0x800
6401cfea:	movsx  eax,WORD PTR [eax]
6401cfed:	mov    DWORD PTR [ebp-0x1c],ecx
6401cff0:	je     0x6401d001
6401cff2:	cdq    
6401cff3:	sub    eax,edx
6401cff5:	mov    DWORD PTR [ebp-0x34],0x1
6401cffc:	jmp    0x6401d318
6401d001:	and    DWORD PTR [ebp-0x34],0x0
6401d005:	jmp    0x6401d31a
6401d00a:	mov    eax,ds:0x64038280
6401d00f:	mov    DWORD PTR [ebp-0x1c],eax
6401d012:	push   eax
6401d013:	call   0x64015550
6401d018:	pop    ecx
6401d019:	jmp    0x6401d31a
6401d01e:	cmp    eax,0x70
6401d021:	jg     0x6401d1ad
6401d027:	je     0x6401d1a1
6401d02d:	cmp    eax,0x65
6401d030:	jl     0x6401d31d
6401d036:	cmp    eax,0x67
6401d039:	jle    0x6401cea9
6401d03f:	cmp    eax,0x69
6401d042:	je     0x6401d099
6401d044:	cmp    eax,0x6e
6401d047:	je     0x6401d064
6401d049:	cmp    eax,0x6f
6401d04c:	jne    0x6401d31d
6401d052:	test   BYTE PTR [ebp-0x14],0x80
6401d056:	mov    DWORD PTR [ebp-0x28],edx
6401d059:	je     0x6401d0a4
6401d05b:	or     DWORD PTR [ebp-0x14],0x200
6401d062:	jmp    0x6401d0a4
6401d064:	mov    esi,DWORD PTR [ebx]
6401d066:	add    ebx,0x4
6401d069:	mov    DWORD PTR [ebp-0x24],ebx
6401d06c:	call   0x6401eb39
6401d071:	test   eax,eax
6401d073:	je     0x6401cbec
6401d079:	test   BYTE PTR [ebp-0x14],0x20
6401d07d:	je     0x6401d088
6401d07f:	mov    ax,WORD PTR [ebp-0x2c]
6401d083:	mov    WORD PTR [esi],ax
6401d086:	jmp    0x6401d08d
6401d088:	mov    eax,DWORD PTR [ebp-0x2c]
6401d08b:	mov    DWORD PTR [esi],eax
6401d08d:	mov    DWORD PTR [ebp-0x5c],0x1
6401d094:	jmp    0x6401d426
6401d099:	or     DWORD PTR [ebp-0x14],0x40
6401d09d:	mov    DWORD PTR [ebp-0x28],0xa
6401d0a4:	test   WORD PTR [ebp-0x14],0x8000
6401d0aa:	je     0x6401d1f7
6401d0b0:	add    ebx,edx
6401d0b2:	mov    eax,DWORD PTR [ebx-0x8]
6401d0b5:	mov    edx,DWORD PTR [ebx-0x4]
6401d0b8:	jmp    0x6401d230
6401d0bd:	jne    0x6401d0ce
6401d0bf:	cmp    cx,0x67
6401d0c3:	jne    0x6401d10d
6401d0c5:	mov    DWORD PTR [ebp-0x18],0x1
6401d0cc:	jmp    0x6401d10d
6401d0ce:	cmp    DWORD PTR [ebp-0x18],eax
6401d0d1:	jle    0x6401d0d6
6401d0d3:	mov    DWORD PTR [ebp-0x18],eax
6401d0d6:	cmp    DWORD PTR [ebp-0x18],0xa3
6401d0dd:	jle    0x6401d10d
6401d0df:	mov    edi,DWORD PTR [ebp-0x18]
6401d0e2:	add    edi,0x15d
6401d0e8:	push   edi
6401d0e9:	call   0x64015d2f
6401d0ee:	test   eax,eax
6401d0f0:	pop    ecx
6401d0f1:	mov    ecx,DWORD PTR [ebp-0x28]
6401d0f4:	push   0x8
6401d0f6:	mov    DWORD PTR [ebp-0x64],eax
6401d0f9:	pop    edx
6401d0fa:	je     0x6401d106
6401d0fc:	mov    DWORD PTR [ebp-0x1c],eax
6401d0ff:	mov    DWORD PTR [ebp-0x20],edi
6401d102:	mov    esi,eax
6401d104:	jmp    0x6401d10d
6401d106:	mov    DWORD PTR [ebp-0x18],0xa3
6401d10d:	add    ebx,edx
6401d10f:	mov    eax,DWORD PTR [ebx-0x8]
6401d112:	mov    DWORD PTR [ebp-0x78],eax
6401d115:	mov    eax,DWORD PTR [ebx-0x4]
6401d118:	mov    DWORD PTR [ebp-0x74],eax
6401d11b:	lea    eax,[ebp-0x58]
6401d11e:	push   eax
6401d11f:	push   DWORD PTR [ebp-0x68]
6401d122:	movsx  eax,cl
6401d125:	push   DWORD PTR [ebp-0x18]
6401d128:	mov    DWORD PTR [ebp-0x24],ebx
6401d12b:	push   eax
6401d12c:	push   DWORD PTR [ebp-0x20]
6401d12f:	lea    eax,[ebp-0x78]
6401d132:	push   esi
6401d133:	push   eax
6401d134:	push   DWORD PTR ds:0x64038598
6401d13a:	call   0x6401760e
6401d13f:	pop    ecx
6401d140:	call   eax
6401d142:	mov    ebx,DWORD PTR [ebp-0x14]
6401d145:	add    esp,0x1c
6401d148:	and    ebx,0x80
6401d14e:	je     0x6401d16b
6401d150:	cmp    DWORD PTR [ebp-0x18],0x0
6401d154:	jne    0x6401d16b
6401d156:	lea    eax,[ebp-0x58]
6401d159:	push   eax
6401d15a:	push   esi
6401d15b:	push   DWORD PTR ds:0x640385a4
6401d161:	call   0x6401760e
6401d166:	pop    ecx
6401d167:	call   eax
6401d169:	pop    ecx
6401d16a:	pop    ecx
6401d16b:	cmp    WORD PTR [ebp-0x28],0x67
6401d170:	jne    0x6401d18b
6401d172:	test   ebx,ebx
6401d174:	jne    0x6401d18b
6401d176:	lea    eax,[ebp-0x58]
6401d179:	push   eax
6401d17a:	push   esi
6401d17b:	push   DWORD PTR ds:0x640385a0
6401d181:	call   0x6401760e
6401d186:	pop    ecx
6401d187:	call   eax
6401d189:	pop    ecx
6401d18a:	pop    ecx
6401d18b:	cmp    BYTE PTR [esi],0x2d
6401d18e:	jne    0x6401d19b
6401d190:	or     DWORD PTR [ebp-0x14],0x100
6401d197:	inc    esi
6401d198:	mov    DWORD PTR [ebp-0x1c],esi
6401d19b:	push   esi
6401d19c:	jmp    0x6401d013
6401d1a1:	mov    DWORD PTR [ebp-0x18],edx
6401d1a4:	mov    DWORD PTR [ebp-0x60],0x7
6401d1ab:	jmp    0x6401d1ce
6401d1ad:	sub    eax,0x73
6401d1b0:	je     0x6401cef2
6401d1b6:	sub    eax,esi
6401d1b8:	je     0x6401d09d
6401d1be:	sub    eax,0x3
6401d1c1:	jne    0x6401d31d
6401d1c7:	mov    DWORD PTR [ebp-0x60],0x27
6401d1ce:	test   BYTE PTR [ebp-0x14],0x80
6401d1d2:	mov    DWORD PTR [ebp-0x28],0x10
6401d1d9:	je     0x6401d0a4
6401d1df:	mov    eax,DWORD PTR [ebp-0x60]
6401d1e2:	add    eax,0x51
6401d1e5:	mov    WORD PTR [ebp-0x3c],0x30
6401d1eb:	mov    WORD PTR [ebp-0x3a],ax
6401d1ef:	mov    DWORD PTR [ebp-0x30],esi
6401d1f2:	jmp    0x6401d0a4
6401d1f7:	test   WORD PTR [ebp-0x14],0x1000
6401d1fd:	jne    0x6401d0b0
6401d203:	add    ebx,0x4
6401d206:	test   BYTE PTR [ebp-0x14],0x20
6401d20a:	je     0x6401d222
6401d20c:	test   BYTE PTR [ebp-0x14],0x40
6401d210:	mov    DWORD PTR [ebp-0x24],ebx
6401d213:	je     0x6401d21b
6401d215:	movsx  eax,WORD PTR [ebx-0x4]
6401d219:	jmp    0x6401d21f
6401d21b:	movzx  eax,WORD PTR [ebx-0x4]
6401d21f:	cdq    
6401d220:	jmp    0x6401d233
6401d222:	test   BYTE PTR [ebp-0x14],0x40
6401d226:	mov    eax,DWORD PTR [ebx-0x4]
6401d229:	je     0x6401d22e
6401d22b:	cdq    
6401d22c:	jmp    0x6401d230
6401d22e:	xor    edx,edx
6401d230:	mov    DWORD PTR [ebp-0x24],ebx
6401d233:	test   BYTE PTR [ebp-0x14],0x40
6401d237:	je     0x6401d251
6401d239:	test   edx,edx
6401d23b:	jg     0x6401d251
6401d23d:	jl     0x6401d243
6401d23f:	test   eax,eax
6401d241:	jae    0x6401d251
6401d243:	neg    eax
6401d245:	adc    edx,0x0
6401d248:	neg    edx
6401d24a:	or     DWORD PTR [ebp-0x14],0x100
6401d251:	test   WORD PTR [ebp-0x14],0x9000
6401d257:	mov    ebx,edx
6401d259:	mov    edi,eax
6401d25b:	jne    0x6401d25f
6401d25d:	xor    ebx,ebx
6401d25f:	cmp    DWORD PTR [ebp-0x18],0x0
6401d263:	jge    0x6401d26e
6401d265:	mov    DWORD PTR [ebp-0x18],0x1
6401d26c:	jmp    0x6401d27f
6401d26e:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401d272:	mov    eax,0x200
6401d277:	cmp    DWORD PTR [ebp-0x18],eax
6401d27a:	jle    0x6401d27f
6401d27c:	mov    DWORD PTR [ebp-0x18],eax
6401d27f:	mov    eax,edi
6401d281:	or     eax,ebx
6401d283:	jne    0x6401d288
6401d285:	and    DWORD PTR [ebp-0x30],eax
6401d288:	lea    esi,[ebp+0x1ef]
6401d28e:	mov    eax,DWORD PTR [ebp-0x18]
6401d291:	dec    DWORD PTR [ebp-0x18]
6401d294:	test   eax,eax
6401d296:	jg     0x6401d29e
6401d298:	mov    eax,edi
6401d29a:	or     eax,ebx
6401d29c:	je     0x6401d2c2
6401d29e:	mov    eax,DWORD PTR [ebp-0x28]
6401d2a1:	cdq    
6401d2a2:	push   edx
6401d2a3:	push   eax
6401d2a4:	push   ebx
6401d2a5:	push   edi
6401d2a6:	call   0x6401ba40
6401d2ab:	add    ecx,0x30
6401d2ae:	cmp    ecx,0x39
6401d2b1:	mov    DWORD PTR [ebp-0x7c],ebx
6401d2b4:	mov    edi,eax
6401d2b6:	mov    ebx,edx
6401d2b8:	jle    0x6401d2bd
6401d2ba:	add    ecx,DWORD PTR [ebp-0x60]
6401d2bd:	mov    BYTE PTR [esi],cl
6401d2bf:	dec    esi
6401d2c0:	jmp    0x6401d28e
6401d2c2:	lea    eax,[ebp+0x1ef]
6401d2c8:	sub    eax,esi
6401d2ca:	inc    esi
6401d2cb:	test   WORD PTR [ebp-0x14],0x200
6401d2d1:	mov    DWORD PTR [ebp-0x20],eax
6401d2d4:	mov    DWORD PTR [ebp-0x1c],esi
6401d2d7:	je     0x6401d31d
6401d2d9:	test   eax,eax
6401d2db:	je     0x6401d2e4
6401d2dd:	mov    ecx,esi
6401d2df:	cmp    BYTE PTR [ecx],0x30
6401d2e2:	je     0x6401d31d
6401d2e4:	dec    DWORD PTR [ebp-0x1c]
6401d2e7:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d2ea:	mov    BYTE PTR [ecx],0x30
6401d2ed:	inc    eax
6401d2ee:	jmp    0x6401d31a
6401d2f0:	test   ebx,ebx
6401d2f2:	jne    0x6401d2fc
6401d2f4:	mov    eax,ds:0x64038284
6401d2f9:	mov    DWORD PTR [ebp-0x1c],eax
6401d2fc:	mov    eax,DWORD PTR [ebp-0x1c]
6401d2ff:	mov    DWORD PTR [ebp-0x34],0x1
6401d306:	jmp    0x6401d311
6401d308:	dec    edi
6401d309:	cmp    WORD PTR [eax],0x0
6401d30d:	je     0x6401d315
6401d30f:	add    eax,esi
6401d311:	test   edi,edi
6401d313:	jne    0x6401d308
6401d315:	sub    eax,DWORD PTR [ebp-0x1c]
6401d318:	sar    eax,1
6401d31a:	mov    DWORD PTR [ebp-0x20],eax
6401d31d:	cmp    DWORD PTR [ebp-0x5c],0x0
6401d321:	jne    0x6401d426
6401d327:	mov    eax,DWORD PTR [ebp-0x14]
6401d32a:	test   al,0x40
6401d32c:	je     0x6401d359
6401d32e:	test   ax,0x100
6401d332:	je     0x6401d33c
6401d334:	mov    WORD PTR [ebp-0x3c],0x2d
6401d33a:	jmp    0x6401d352
6401d33c:	test   al,0x1
6401d33e:	je     0x6401d348
6401d340:	mov    WORD PTR [ebp-0x3c],0x2b
6401d346:	jmp    0x6401d352
6401d348:	test   al,0x2
6401d34a:	je     0x6401d359
6401d34c:	mov    WORD PTR [ebp-0x3c],0x20
6401d352:	mov    DWORD PTR [ebp-0x30],0x1
6401d359:	mov    ebx,DWORD PTR [ebp-0x38]
6401d35c:	mov    esi,DWORD PTR [ebp-0x20]
6401d35f:	sub    ebx,esi
6401d361:	sub    ebx,DWORD PTR [ebp-0x30]
6401d364:	test   BYTE PTR [ebp-0x14],0xc
6401d368:	jne    0x6401d37b
6401d36a:	push   DWORD PTR [ebp-0x48]
6401d36d:	lea    eax,[ebp-0x2c]
6401d370:	push   ebx
6401d371:	push   0x20
6401d373:	call   0x6401cb68
6401d378:	add    esp,0xc
6401d37b:	push   DWORD PTR [ebp-0x30]
6401d37e:	mov    edi,DWORD PTR [ebp-0x48]
6401d381:	lea    eax,[ebp-0x2c]
6401d384:	lea    ecx,[ebp-0x3c]
6401d387:	call   0x6401c1e4
6401d38c:	test   BYTE PTR [ebp-0x14],0x8
6401d390:	pop    ecx
6401d391:	je     0x6401d3a8
6401d393:	test   BYTE PTR [ebp-0x14],0x4
6401d397:	jne    0x6401d3a8
6401d399:	push   edi
6401d39a:	push   ebx
6401d39b:	push   0x30
6401d39d:	lea    eax,[ebp-0x2c]
6401d3a0:	call   0x6401cb68
6401d3a5:	add    esp,0xc
6401d3a8:	cmp    DWORD PTR [ebp-0x34],0x0
6401d3ac:	jne    0x6401d3fc
6401d3ae:	test   esi,esi
6401d3b0:	jle    0x6401d3fc
6401d3b2:	mov    edi,DWORD PTR [ebp-0x1c]
6401d3b5:	mov    DWORD PTR [ebp-0x28],esi
6401d3b8:	dec    DWORD PTR [ebp-0x28]
6401d3bb:	lea    eax,[ebp-0x58]
6401d3be:	push   eax
6401d3bf:	mov    eax,DWORD PTR [ebp-0x58]
6401d3c2:	push   DWORD PTR [eax+0xac]
6401d3c8:	lea    eax,[ebp-0x70]
6401d3cb:	push   edi
6401d3cc:	push   eax
6401d3cd:	call   0x6401ed8b
6401d3d2:	add    esp,0x10
6401d3d5:	test   eax,eax
6401d3d7:	mov    DWORD PTR [ebp-0x7c],eax
6401d3da:	jle    0x6401d3f6
6401d3dc:	push   DWORD PTR [ebp-0x70]
6401d3df:	mov    eax,DWORD PTR [ebp-0x48]
6401d3e2:	lea    esi,[ebp-0x2c]
6401d3e5:	call   0x6401cb43
6401d3ea:	add    edi,DWORD PTR [ebp-0x7c]
6401d3ed:	cmp    DWORD PTR [ebp-0x28],0x0
6401d3f1:	pop    ecx
6401d3f2:	jg     0x6401d3b8
6401d3f4:	jmp    0x6401d409
6401d3f6:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401d3fa:	jmp    0x6401d409
6401d3fc:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d3ff:	push   esi
6401d400:	lea    eax,[ebp-0x2c]
6401d403:	call   0x6401c1e4
6401d408:	pop    ecx
6401d409:	cmp    DWORD PTR [ebp-0x2c],0x0
6401d40d:	jl     0x6401d426
6401d40f:	test   BYTE PTR [ebp-0x14],0x4
6401d413:	je     0x6401d426
6401d415:	push   DWORD PTR [ebp-0x48]
6401d418:	lea    eax,[ebp-0x2c]
6401d41b:	push   ebx
6401d41c:	push   0x20
6401d41e:	call   0x6401cb68
6401d423:	add    esp,0xc
6401d426:	cmp    DWORD PTR [ebp-0x64],0x0
6401d42a:	je     0x6401d439
6401d42c:	push   DWORD PTR [ebp-0x64]
6401d42f:	call   0x6401475a
6401d434:	and    DWORD PTR [ebp-0x64],0x0
6401d438:	pop    ecx
6401d439:	mov    edi,DWORD PTR [ebp-0x6c]
6401d43c:	mov    ebx,DWORD PTR [ebp-0x24]
6401d43f:	movzx  eax,WORD PTR [edi]
6401d442:	test   ax,ax
6401d445:	mov    DWORD PTR [ebp-0x28],eax
6401d448:	je     0x6401d451
6401d44a:	mov    ecx,eax
6401d44c:	jmp    0x6401cc4e
6401d451:	cmp    DWORD PTR [ebp-0x40],0x0
6401d455:	je     0x6401d461
6401d457:	cmp    DWORD PTR [ebp-0x40],0x7
6401d45b:	jne    0x6401cbec
6401d461:	cmp    BYTE PTR [ebp-0x4c],0x0
6401d465:	je     0x6401d46e
6401d467:	mov    eax,DWORD PTR [ebp-0x50]
6401d46a:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d46e:	mov    eax,DWORD PTR [ebp-0x2c]
6401d471:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401d477:	pop    edi
6401d478:	pop    esi
6401d479:	xor    ecx,ebp
6401d47b:	pop    ebx
6401d47c:	call   0x64013d06
6401d481:	add    ebp,0x3f4
6401d487:	leave  
6401d488:	ret    
6401d489:	push   ecx
6401d48a:	into   
6401d48b:	add    DWORD PTR [esi+eiz*4-0x34],esp
6401d48f:	add    DWORD PTR [ebx+eax*8-0x34],esp
6401d493:	add    DWORD PTR [edi+ecx*1-0x33],esp
6401d497:	add    DWORD PTR [ecx+ecx*2-0x33],esp
6401d49b:	add    DWORD PTR [edx+edx*2-0x33],esp
6401d49f:	add    DWORD PTR [ecx+ecx*4-0x33],esp
6401d4a3:	add    DWORD PTR [edx+ebp*2-0x32],esp
6401d4a7:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d4ab:	in     al,dx
6401d4ac:	sub    esp,0x30
6401d4af:	push   ebx
6401d4b0:	push   esi
6401d4b1:	push   DWORD PTR [ebp+0x8]
6401d4b4:	lea    ecx,[ebp-0x30]
6401d4b7:	call   0x64014325
6401d4bc:	mov    eax,DWORD PTR [ebp+0x10]
6401d4bf:	mov    ebx,DWORD PTR [ebp+0xc]
6401d4c2:	xor    esi,esi
6401d4c4:	cmp    eax,esi
6401d4c6:	je     0x6401d4ca
6401d4c8:	mov    DWORD PTR [eax],ebx
6401d4ca:	cmp    ebx,esi
6401d4cc:	jne    0x6401d4fc
6401d4ce:	call   0x640164c3
6401d4d3:	push   esi
6401d4d4:	push   esi
6401d4d5:	push   esi
6401d4d6:	push   esi
6401d4d7:	push   esi
6401d4d8:	mov    DWORD PTR [eax],0x16
6401d4de:	call   0x64013e52
6401d4e3:	add    esp,0x14
6401d4e6:	cmp    BYTE PTR [ebp-0x24],0x0
6401d4ea:	je     0x6401d4f3
6401d4ec:	mov    eax,DWORD PTR [ebp-0x28]
6401d4ef:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d4f3:	xor    eax,eax
6401d4f5:	xor    edx,edx
6401d4f7:	jmp    0x6401d755
6401d4fc:	cmp    DWORD PTR [ebp+0x14],esi
6401d4ff:	je     0x6401d50d
6401d501:	cmp    DWORD PTR [ebp+0x14],0x2
6401d505:	jl     0x6401d4ce
6401d507:	cmp    DWORD PTR [ebp+0x14],0x24
6401d50b:	jg     0x6401d4ce
6401d50d:	push   edi
6401d50e:	mov    DWORD PTR [ebp-0x8],esi
6401d511:	mov    DWORD PTR [ebp-0x4],esi
6401d514:	movzx  esi,WORD PTR [ebx]
6401d517:	lea    edi,[ebx+0x2]
6401d51a:	jmp    0x6401d521
6401d51c:	movzx  esi,WORD PTR [edi]
6401d51f:	inc    edi
6401d520:	inc    edi
6401d521:	lea    eax,[ebp-0x30]
6401d524:	push   eax
6401d525:	push   0x8
6401d527:	push   esi
6401d528:	call   0x6401c0e3
6401d52d:	add    esp,0xc
6401d530:	test   eax,eax
6401d532:	jne    0x6401d51c
6401d534:	cmp    si,0x2d
6401d538:	jne    0x6401d540
6401d53a:	or     DWORD PTR [ebp+0x18],0x2
6401d53e:	jmp    0x6401d546
6401d540:	cmp    si,0x2b
6401d544:	jne    0x6401d54b
6401d546:	movzx  esi,WORD PTR [edi]
6401d549:	inc    edi
6401d54a:	inc    edi
6401d54b:	mov    eax,DWORD PTR [ebp+0x14]
6401d54e:	test   eax,eax
6401d550:	jl     0x6401d73a
6401d556:	cmp    eax,0x1
6401d559:	je     0x6401d73a
6401d55f:	cmp    eax,0x24
6401d562:	jg     0x6401d73a
6401d568:	test   eax,eax
6401d56a:	push   0x10
6401d56c:	pop    ebx
6401d56d:	jne    0x6401d59e
6401d56f:	push   esi
6401d570:	call   0x64020c84
6401d575:	test   eax,eax
6401d577:	pop    ecx
6401d578:	je     0x6401d583
6401d57a:	mov    DWORD PTR [ebp+0x14],0xa
6401d581:	jmp    0x6401d5c4
6401d583:	movzx  eax,WORD PTR [edi]
6401d586:	cmp    ax,0x78
6401d58a:	je     0x6401d59b
6401d58c:	cmp    ax,0x58
6401d590:	je     0x6401d59b
6401d592:	mov    DWORD PTR [ebp+0x14],0x8
6401d599:	jmp    0x6401d5c4
6401d59b:	mov    DWORD PTR [ebp+0x14],ebx
6401d59e:	cmp    DWORD PTR [ebp+0x14],ebx
6401d5a1:	jne    0x6401d5c4
6401d5a3:	push   esi
6401d5a4:	call   0x64020c84
6401d5a9:	test   eax,eax
6401d5ab:	pop    ecx
6401d5ac:	jne    0x6401d5c4
6401d5ae:	movzx  eax,WORD PTR [edi]
6401d5b1:	cmp    ax,0x78
6401d5b5:	je     0x6401d5bd
6401d5b7:	cmp    ax,0x58
6401d5bb:	jne    0x6401d5c4
6401d5bd:	inc    edi
6401d5be:	inc    edi
6401d5bf:	movzx  esi,WORD PTR [edi]
6401d5c2:	inc    edi
6401d5c3:	inc    edi
6401d5c4:	mov    eax,DWORD PTR [ebp+0x14]
6401d5c7:	cdq    
6401d5c8:	push   edx
6401d5c9:	push   eax
6401d5ca:	push   0xffffffff
6401d5cc:	push   0xffffffff
6401d5ce:	mov    DWORD PTR [ebp-0x20],eax
6401d5d1:	mov    DWORD PTR [ebp-0x1c],edx
6401d5d4:	call   0x6401ba40
6401d5d9:	mov    DWORD PTR [ebp-0x18],ecx
6401d5dc:	mov    DWORD PTR [ebp-0x14],ebx
6401d5df:	mov    DWORD PTR [ebp-0x10],eax
6401d5e2:	mov    DWORD PTR [ebp-0xc],edx
6401d5e5:	push   esi
6401d5e6:	call   0x64020c84
6401d5eb:	mov    ebx,eax
6401d5ed:	cmp    ebx,0xffffffff
6401d5f0:	pop    ecx
6401d5f1:	jne    0x6401d61a
6401d5f3:	cmp    si,0x41
6401d5f7:	jb     0x6401d5ff
6401d5f9:	cmp    si,0x5a
6401d5fd:	jbe    0x6401d608
6401d5ff:	lea    eax,[esi-0x61]
6401d602:	cmp    ax,0x19
6401d606:	ja     0x6401d65a
6401d608:	lea    eax,[esi-0x61]
6401d60b:	cmp    ax,0x19
6401d60f:	movzx  eax,si
6401d612:	ja     0x6401d617
6401d614:	sub    eax,0x20
6401d617:	lea    ebx,[eax-0x37]
6401d61a:	cmp    ebx,DWORD PTR [ebp+0x14]
6401d61d:	jae    0x6401d65a
6401d61f:	mov    ecx,DWORD PTR [ebp-0x4]
6401d622:	or     DWORD PTR [ebp+0x18],0x8
6401d626:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d629:	jb     0x6401d678
6401d62b:	ja     0x6401d635
6401d62d:	mov    eax,DWORD PTR [ebp-0x8]
6401d630:	cmp    eax,DWORD PTR [ebp-0x10]
6401d633:	jb     0x6401d678
6401d635:	mov    eax,DWORD PTR [ebp-0x10]
6401d638:	cmp    DWORD PTR [ebp-0x8],eax
6401d63b:	jne    0x6401d650
6401d63d:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d640:	jne    0x6401d650
6401d642:	xor    eax,eax
6401d644:	cmp    eax,DWORD PTR [ebp-0x14]
6401d647:	jb     0x6401d678
6401d649:	ja     0x6401d650
6401d64b:	cmp    ebx,DWORD PTR [ebp-0x18]
6401d64e:	jbe    0x6401d678
6401d650:	or     DWORD PTR [ebp+0x18],0x4
6401d654:	cmp    DWORD PTR [ebp+0x10],0x0
6401d658:	jne    0x6401d693
6401d65a:	mov    eax,DWORD PTR [ebp+0x18]
6401d65d:	dec    edi
6401d65e:	dec    edi
6401d65f:	test   al,0x8
6401d661:	jne    0x6401d69d
6401d663:	xor    eax,eax
6401d665:	cmp    DWORD PTR [ebp+0x10],eax
6401d668:	je     0x6401d66d
6401d66a:	mov    edi,DWORD PTR [ebp+0xc]
6401d66d:	mov    DWORD PTR [ebp-0x8],eax
6401d670:	mov    DWORD PTR [ebp-0x4],eax
6401d673:	jmp    0x6401d703
6401d678:	push   ecx
6401d679:	push   DWORD PTR [ebp-0x8]
6401d67c:	push   DWORD PTR [ebp-0x1c]
6401d67f:	push   DWORD PTR [ebp-0x20]
6401d682:	call   0x64020e10
6401d687:	xor    ecx,ecx
6401d689:	add    eax,ebx
6401d68b:	adc    edx,ecx
6401d68d:	mov    DWORD PTR [ebp-0x8],eax
6401d690:	mov    DWORD PTR [ebp-0x4],edx
6401d693:	movzx  esi,WORD PTR [edi]
6401d696:	inc    edi
6401d697:	inc    edi
6401d698:	jmp    0x6401d5e5
6401d69d:	test   al,0x4
6401d69f:	mov    esi,0x7fffffff
6401d6a4:	mov    ebx,0x80000000
6401d6a9:	jne    0x6401d6d2
6401d6ab:	test   al,0x1
6401d6ad:	jne    0x6401d703
6401d6af:	and    eax,0x2
6401d6b2:	je     0x6401d6c1
6401d6b4:	cmp    DWORD PTR [ebp-0x4],ebx
6401d6b7:	ja     0x6401d6d2
6401d6b9:	jb     0x6401d6c1
6401d6bb:	cmp    DWORD PTR [ebp-0x8],0x0
6401d6bf:	ja     0x6401d6d2
6401d6c1:	test   eax,eax
6401d6c3:	jne    0x6401d703
6401d6c5:	cmp    DWORD PTR [ebp-0x4],esi
6401d6c8:	jb     0x6401d703
6401d6ca:	ja     0x6401d6d2
6401d6cc:	cmp    DWORD PTR [ebp-0x8],0xffffffff
6401d6d0:	jbe    0x6401d703
6401d6d2:	call   0x640164c3
6401d6d7:	test   BYTE PTR [ebp+0x18],0x1
6401d6db:	mov    DWORD PTR [eax],0x22
6401d6e1:	je     0x6401d6ed
6401d6e3:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d6e7:	or     DWORD PTR [ebp-0x4],0xffffffff
6401d6eb:	jmp    0x6401d703
6401d6ed:	test   BYTE PTR [ebp+0x18],0x2
6401d6f1:	je     0x6401d6fc
6401d6f3:	and    DWORD PTR [ebp-0x8],0x0
6401d6f7:	mov    DWORD PTR [ebp-0x4],ebx
6401d6fa:	jmp    0x6401d703
6401d6fc:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d700:	mov    DWORD PTR [ebp-0x4],esi
6401d703:	mov    eax,DWORD PTR [ebp+0x10]
6401d706:	test   eax,eax
6401d708:	je     0x6401d70c
6401d70a:	mov    DWORD PTR [eax],edi
6401d70c:	test   BYTE PTR [ebp+0x18],0x2
6401d710:	je     0x6401d725
6401d712:	mov    eax,DWORD PTR [ebp-0x8]
6401d715:	mov    ecx,DWORD PTR [ebp-0x4]
6401d718:	neg    eax
6401d71a:	adc    ecx,0x0
6401d71d:	neg    ecx
6401d71f:	mov    DWORD PTR [ebp-0x8],eax
6401d722:	mov    DWORD PTR [ebp-0x4],ecx
6401d725:	cmp    BYTE PTR [ebp-0x24],0x0
6401d729:	je     0x6401d732
6401d72b:	mov    eax,DWORD PTR [ebp-0x28]
6401d72e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d732:	mov    eax,DWORD PTR [ebp-0x8]
6401d735:	mov    edx,DWORD PTR [ebp-0x4]
6401d738:	jmp    0x6401d754
6401d73a:	mov    eax,DWORD PTR [ebp+0x10]
6401d73d:	test   eax,eax
6401d73f:	je     0x6401d743
6401d741:	mov    DWORD PTR [eax],ebx
6401d743:	cmp    BYTE PTR [ebp-0x24],0x0
6401d747:	je     0x6401d750
6401d749:	mov    eax,DWORD PTR [ebp-0x28]
6401d74c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d750:	xor    eax,eax
6401d752:	xor    edx,edx
6401d754:	pop    edi
6401d755:	pop    esi
6401d756:	pop    ebx
6401d757:	leave  
6401d758:	ret    
6401d759:	push   ebp
6401d75a:	mov    ebp,esp
6401d75c:	xor    eax,eax
6401d75e:	cmp    DWORD PTR ds:0x64038ea8,eax
6401d764:	push   eax
6401d765:	push   DWORD PTR [ebp+0x10]
6401d768:	push   DWORD PTR [ebp+0xc]
6401d76b:	push   DWORD PTR [ebp+0x8]
6401d76e:	jne    0x6401d777
6401d770:	push   0x64037ff8
6401d775:	jmp    0x6401d778
6401d777:	push   eax
6401d778:	call   0x6401d4a9
6401d77d:	add    esp,0x14
6401d780:	pop    ebp
6401d781:	ret    
6401d782:	mov    eax,DWORD PTR [esp+0x4]
6401d786:	mov    ds:0x64039820,eax
6401d78b:	ret    
6401d78c:	push   ebp
6401d78d:	mov    ebp,esp
6401d78f:	sub    esp,0x10
6401d792:	push   DWORD PTR [ebp+0x8]
6401d795:	lea    ecx,[ebp-0x10]
6401d798:	call   0x64014325
6401d79d:	movzx  eax,BYTE PTR [ebp+0xc]
6401d7a1:	mov    ecx,DWORD PTR [ebp-0xc]
6401d7a4:	mov    dl,BYTE PTR [ebp+0x14]
6401d7a7:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401d7ab:	jne    0x6401d7cb
6401d7ad:	cmp    DWORD PTR [ebp+0x10],0x0
6401d7b1:	je     0x6401d7c5
6401d7b3:	mov    ecx,DWORD PTR [ebp-0x10]
6401d7b6:	mov    ecx,DWORD PTR [ecx+0xc8]
6401d7bc:	movzx  eax,WORD PTR [ecx+eax*2]
6401d7c0:	and    eax,DWORD PTR [ebp+0x10]
6401d7c3:	jmp    0x6401d7c7
6401d7c5:	xor    eax,eax
6401d7c7:	test   eax,eax
6401d7c9:	je     0x6401d7ce
6401d7cb:	xor    eax,eax
6401d7cd:	inc    eax
6401d7ce:	cmp    BYTE PTR [ebp-0x4],0x0
6401d7d2:	je     0x6401d7db
6401d7d4:	mov    ecx,DWORD PTR [ebp-0x8]
6401d7d7:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d7db:	leave  
6401d7dc:	ret    
6401d7dd:	push   0x4
6401d7df:	push   0x0
6401d7e1:	push   DWORD PTR [esp+0xc]
6401d7e5:	push   0x0
6401d7e7:	call   0x6401d78c
6401d7ec:	add    esp,0x10
6401d7ef:	ret    
6401d7f0:	push   ebp
6401d7f1:	mov    ebp,esp
6401d7f3:	sub    esp,0x4
6401d7f6:	mov    DWORD PTR [ebp-0x4],edi
6401d7f9:	mov    edi,DWORD PTR [ebp+0x8]
6401d7fc:	mov    ecx,DWORD PTR [ebp+0xc]
6401d7ff:	shr    ecx,0x7
6401d802:	pxor   xmm0,xmm0
6401d806:	jmp    0x6401d810
6401d808:	lea    esp,[esp+0x0]
6401d80f:	nop
6401d810:	movdqa XMMWORD PTR [edi],xmm0
6401d814:	movdqa XMMWORD PTR [edi+0x10],xmm0
6401d819:	movdqa XMMWORD PTR [edi+0x20],xmm0
6401d81e:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401d823:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401d828:	movdqa XMMWORD PTR [edi+0x50],xmm0
6401d82d:	movdqa XMMWORD PTR [edi+0x60],xmm0
6401d832:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401d837:	lea    edi,[edi+0x80]
6401d83d:	dec    ecx
6401d83e:	jne    0x6401d810
6401d840:	mov    edi,DWORD PTR [ebp-0x4]
6401d843:	mov    esp,ebp
6401d845:	pop    ebp
6401d846:	ret    
6401d847:	push   ebp
6401d848:	mov    ebp,esp
6401d84a:	sub    esp,0x10
6401d84d:	mov    DWORD PTR [ebp-0x4],edi
6401d850:	mov    eax,DWORD PTR [ebp+0x8]
6401d853:	cdq    
6401d854:	mov    edi,eax
6401d856:	xor    edi,edx
6401d858:	sub    edi,edx
6401d85a:	and    edi,0xf
6401d85d:	xor    edi,edx
6401d85f:	sub    edi,edx
6401d861:	test   edi,edi
6401d863:	jne    0x6401d8a1
6401d865:	mov    ecx,DWORD PTR [ebp+0x10]
6401d868:	mov    edx,ecx
6401d86a:	and    edx,0x7f
6401d86d:	mov    DWORD PTR [ebp-0xc],edx
6401d870:	cmp    ecx,edx
6401d872:	je     0x6401d886
6401d874:	sub    ecx,edx
6401d876:	push   ecx
6401d877:	push   eax
6401d878:	call   0x6401d7f0
6401d87d:	add    esp,0x8
6401d880:	mov    eax,DWORD PTR [ebp+0x8]
6401d883:	mov    edx,DWORD PTR [ebp-0xc]
6401d886:	test   edx,edx
6401d888:	je     0x6401d8cf
6401d88a:	add    eax,DWORD PTR [ebp+0x10]
6401d88d:	sub    eax,edx
6401d88f:	mov    DWORD PTR [ebp-0x8],eax
6401d892:	xor    eax,eax
6401d894:	mov    edi,DWORD PTR [ebp-0x8]
6401d897:	mov    ecx,DWORD PTR [ebp-0xc]
6401d89a:	rep stos BYTE PTR es:[edi],al
6401d89c:	mov    eax,DWORD PTR [ebp+0x8]
6401d89f:	jmp    0x6401d8cf
6401d8a1:	neg    edi
6401d8a3:	add    edi,0x10
6401d8a6:	mov    DWORD PTR [ebp-0x10],edi
6401d8a9:	xor    eax,eax
6401d8ab:	mov    edi,DWORD PTR [ebp+0x8]
6401d8ae:	mov    ecx,DWORD PTR [ebp-0x10]
6401d8b1:	rep stos BYTE PTR es:[edi],al
6401d8b3:	mov    eax,DWORD PTR [ebp-0x10]
6401d8b6:	mov    ecx,DWORD PTR [ebp+0x8]
6401d8b9:	mov    edx,DWORD PTR [ebp+0x10]
6401d8bc:	add    ecx,eax
6401d8be:	sub    edx,eax
6401d8c0:	push   edx
6401d8c1:	push   0x0
6401d8c3:	push   ecx
6401d8c4:	call   0x6401d847
6401d8c9:	add    esp,0xc
6401d8cc:	mov    eax,DWORD PTR [ebp+0x8]
6401d8cf:	mov    edi,DWORD PTR [ebp-0x4]
6401d8d2:	mov    esp,ebp
6401d8d4:	pop    ebp
6401d8d5:	ret    
6401d8d6:	and    DWORD PTR ds:0x64039b20,0x0
6401d8dd:	call   0x640210e8
6401d8e2:	mov    ds:0x64039b20,eax
6401d8e7:	xor    eax,eax
6401d8e9:	ret    
6401d8ea:	push   ebp
6401d8eb:	mov    ebp,esp
6401d8ed:	sub    esp,0x8
6401d8f0:	mov    DWORD PTR [ebp-0x4],edi
6401d8f3:	mov    DWORD PTR [ebp-0x8],esi
6401d8f6:	mov    esi,DWORD PTR [ebp+0xc]
6401d8f9:	mov    edi,DWORD PTR [ebp+0x8]
6401d8fc:	mov    ecx,DWORD PTR [ebp+0x10]
6401d8ff:	shr    ecx,0x7
6401d902:	jmp    0x6401d90a
6401d904:	lea    ebx,[ebx+0x0]
6401d90a:	movdqa xmm0,XMMWORD PTR [esi]
6401d90e:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401d913:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401d918:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401d91d:	movdqa XMMWORD PTR [edi],xmm0
6401d921:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401d926:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401d92b:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401d930:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401d935:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401d93a:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401d93f:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401d944:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401d949:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401d94e:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401d953:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401d958:	lea    esi,[esi+0x80]
6401d95e:	lea    edi,[edi+0x80]
6401d964:	dec    ecx
6401d965:	jne    0x6401d90a
6401d967:	mov    esi,DWORD PTR [ebp-0x8]
6401d96a:	mov    edi,DWORD PTR [ebp-0x4]
6401d96d:	mov    esp,ebp
6401d96f:	pop    ebp
6401d970:	ret    
6401d971:	push   ebp
6401d972:	mov    ebp,esp
6401d974:	sub    esp,0x1c
6401d977:	mov    DWORD PTR [ebp-0xc],edi
6401d97a:	mov    DWORD PTR [ebp-0x8],esi
6401d97d:	mov    DWORD PTR [ebp-0x4],ebx
6401d980:	mov    ebx,DWORD PTR [ebp+0xc]
6401d983:	mov    eax,ebx
6401d985:	cdq    
6401d986:	mov    ecx,eax
6401d988:	mov    eax,DWORD PTR [ebp+0x8]
6401d98b:	xor    ecx,edx
6401d98d:	sub    ecx,edx
6401d98f:	and    ecx,0xf
6401d992:	xor    ecx,edx
6401d994:	sub    ecx,edx
6401d996:	cdq    
6401d997:	mov    edi,eax
6401d999:	xor    edi,edx
6401d99b:	sub    edi,edx
6401d99d:	and    edi,0xf
6401d9a0:	xor    edi,edx
6401d9a2:	sub    edi,edx
6401d9a4:	mov    edx,ecx
6401d9a6:	or     edx,edi
6401d9a8:	jne    0x6401d9f4
6401d9aa:	mov    esi,DWORD PTR [ebp+0x10]
6401d9ad:	mov    ecx,esi
6401d9af:	and    ecx,0x7f
6401d9b2:	mov    DWORD PTR [ebp-0x18],ecx
6401d9b5:	cmp    esi,ecx
6401d9b7:	je     0x6401d9cc
6401d9b9:	sub    esi,ecx
6401d9bb:	push   esi
6401d9bc:	push   ebx
6401d9bd:	push   eax
6401d9be:	call   0x6401d8ea
6401d9c3:	add    esp,0xc
6401d9c6:	mov    eax,DWORD PTR [ebp+0x8]
6401d9c9:	mov    ecx,DWORD PTR [ebp-0x18]
6401d9cc:	test   ecx,ecx
6401d9ce:	je     0x6401da47
6401d9d0:	mov    ebx,DWORD PTR [ebp+0x10]
6401d9d3:	mov    edx,DWORD PTR [ebp+0xc]
6401d9d6:	add    edx,ebx
6401d9d8:	sub    edx,ecx
6401d9da:	mov    DWORD PTR [ebp-0x14],edx
6401d9dd:	add    ebx,eax
6401d9df:	sub    ebx,ecx
6401d9e1:	mov    DWORD PTR [ebp-0x10],ebx
6401d9e4:	mov    esi,DWORD PTR [ebp-0x14]
6401d9e7:	mov    edi,DWORD PTR [ebp-0x10]
6401d9ea:	mov    ecx,DWORD PTR [ebp-0x18]
6401d9ed:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401d9ef:	mov    eax,DWORD PTR [ebp+0x8]
6401d9f2:	jmp    0x6401da47
6401d9f4:	cmp    ecx,edi
6401d9f6:	jne    0x6401da2d
6401d9f8:	neg    ecx
6401d9fa:	add    ecx,0x10
6401d9fd:	mov    DWORD PTR [ebp-0x1c],ecx
6401da00:	mov    esi,DWORD PTR [ebp+0xc]
6401da03:	mov    edi,DWORD PTR [ebp+0x8]
6401da06:	mov    ecx,DWORD PTR [ebp-0x1c]
6401da09:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401da0b:	mov    ecx,DWORD PTR [ebp+0x8]
6401da0e:	add    ecx,DWORD PTR [ebp-0x1c]
6401da11:	mov    edx,DWORD PTR [ebp+0xc]
6401da14:	add    edx,DWORD PTR [ebp-0x1c]
6401da17:	mov    eax,DWORD PTR [ebp+0x10]
6401da1a:	sub    eax,DWORD PTR [ebp-0x1c]
6401da1d:	push   eax
6401da1e:	push   edx
6401da1f:	push   ecx
6401da20:	call   0x6401d971
6401da25:	add    esp,0xc
6401da28:	mov    eax,DWORD PTR [ebp+0x8]
6401da2b:	jmp    0x6401da47
6401da2d:	mov    esi,DWORD PTR [ebp+0xc]
6401da30:	mov    edi,DWORD PTR [ebp+0x8]
6401da33:	mov    ecx,DWORD PTR [ebp+0x10]
6401da36:	mov    edx,ecx
6401da38:	shr    ecx,0x2
6401da3b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401da3d:	mov    ecx,edx
6401da3f:	and    ecx,0x3
6401da42:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401da44:	mov    eax,DWORD PTR [ebp+0x8]
6401da47:	mov    ebx,DWORD PTR [ebp-0x4]
6401da4a:	mov    esi,DWORD PTR [ebp-0x8]
6401da4d:	mov    edi,DWORD PTR [ebp-0xc]
6401da50:	mov    esp,ebp
6401da52:	pop    ebp
6401da53:	ret    
6401da54:	push   esi
6401da55:	mov    esi,DWORD PTR [esp+0x8]
6401da59:	test   esi,esi
6401da5b:	je     0x6401dbe2
6401da61:	push   DWORD PTR [esi+0x4]
6401da64:	call   0x6401475a
6401da69:	push   DWORD PTR [esi+0x8]
6401da6c:	call   0x6401475a
6401da71:	push   DWORD PTR [esi+0xc]
6401da74:	call   0x6401475a
6401da79:	push   DWORD PTR [esi+0x10]
6401da7c:	call   0x6401475a
6401da81:	push   DWORD PTR [esi+0x14]
6401da84:	call   0x6401475a
6401da89:	push   DWORD PTR [esi+0x18]
6401da8c:	call   0x6401475a
6401da91:	push   DWORD PTR [esi]
6401da93:	call   0x6401475a
6401da98:	push   DWORD PTR [esi+0x20]
6401da9b:	call   0x6401475a
6401daa0:	push   DWORD PTR [esi+0x24]
6401daa3:	call   0x6401475a
6401daa8:	push   DWORD PTR [esi+0x28]
6401daab:	call   0x6401475a
6401dab0:	push   DWORD PTR [esi+0x2c]
6401dab3:	call   0x6401475a
6401dab8:	push   DWORD PTR [esi+0x30]
6401dabb:	call   0x6401475a
6401dac0:	push   DWORD PTR [esi+0x34]
6401dac3:	call   0x6401475a
6401dac8:	push   DWORD PTR [esi+0x1c]
6401dacb:	call   0x6401475a
6401dad0:	push   DWORD PTR [esi+0x38]
6401dad3:	call   0x6401475a
6401dad8:	push   DWORD PTR [esi+0x3c]
6401dadb:	call   0x6401475a
6401dae0:	add    esp,0x40
6401dae3:	push   DWORD PTR [esi+0x40]
6401dae6:	call   0x6401475a
6401daeb:	push   DWORD PTR [esi+0x44]
6401daee:	call   0x6401475a
6401daf3:	push   DWORD PTR [esi+0x48]
6401daf6:	call   0x6401475a
6401dafb:	push   DWORD PTR [esi+0x4c]
6401dafe:	call   0x6401475a
6401db03:	push   DWORD PTR [esi+0x50]
6401db06:	call   0x6401475a
6401db0b:	push   DWORD PTR [esi+0x54]
6401db0e:	call   0x6401475a
6401db13:	push   DWORD PTR [esi+0x58]
6401db16:	call   0x6401475a
6401db1b:	push   DWORD PTR [esi+0x5c]
6401db1e:	call   0x6401475a
6401db23:	push   DWORD PTR [esi+0x60]
6401db26:	call   0x6401475a
6401db2b:	push   DWORD PTR [esi+0x64]
6401db2e:	call   0x6401475a
6401db33:	push   DWORD PTR [esi+0x68]
6401db36:	call   0x6401475a
6401db3b:	push   DWORD PTR [esi+0x6c]
6401db3e:	call   0x6401475a
6401db43:	push   DWORD PTR [esi+0x70]
6401db46:	call   0x6401475a
6401db4b:	push   DWORD PTR [esi+0x74]
6401db4e:	call   0x6401475a
6401db53:	push   DWORD PTR [esi+0x78]
6401db56:	call   0x6401475a
6401db5b:	push   DWORD PTR [esi+0x7c]
6401db5e:	call   0x6401475a
6401db63:	add    esp,0x40
6401db66:	push   DWORD PTR [esi+0x80]
6401db6c:	call   0x6401475a
6401db71:	push   DWORD PTR [esi+0x84]
6401db77:	call   0x6401475a
6401db7c:	push   DWORD PTR [esi+0x88]
6401db82:	call   0x6401475a
6401db87:	push   DWORD PTR [esi+0x8c]
6401db8d:	call   0x6401475a
6401db92:	push   DWORD PTR [esi+0x90]
6401db98:	call   0x6401475a
6401db9d:	push   DWORD PTR [esi+0x94]
6401dba3:	call   0x6401475a
6401dba8:	push   DWORD PTR [esi+0x98]
6401dbae:	call   0x6401475a
6401dbb3:	push   DWORD PTR [esi+0x9c]
6401dbb9:	call   0x6401475a
6401dbbe:	push   DWORD PTR [esi+0xa0]
6401dbc4:	call   0x6401475a
6401dbc9:	push   DWORD PTR [esi+0xa4]
6401dbcf:	call   0x6401475a
6401dbd4:	push   DWORD PTR [esi+0xa8]
6401dbda:	call   0x6401475a
6401dbdf:	add    esp,0x2c
6401dbe2:	pop    esi
6401dbe3:	ret    
6401dbe4:	push   esi
6401dbe5:	mov    esi,DWORD PTR [esp+0x8]
6401dbe9:	test   esi,esi
6401dbeb:	je     0x6401dc22
6401dbed:	mov    eax,DWORD PTR [esi]
6401dbef:	cmp    eax,DWORD PTR ds:0x64038530
6401dbf5:	je     0x6401dbfe
6401dbf7:	push   eax
6401dbf8:	call   0x6401475a
6401dbfd:	pop    ecx
6401dbfe:	mov    eax,DWORD PTR [esi+0x4]
6401dc01:	cmp    eax,DWORD PTR ds:0x64038534
6401dc07:	je     0x6401dc10
6401dc09:	push   eax
6401dc0a:	call   0x6401475a
6401dc0f:	pop    ecx
6401dc10:	mov    esi,DWORD PTR [esi+0x8]
6401dc13:	cmp    esi,DWORD PTR ds:0x64038538
6401dc19:	je     0x6401dc22
6401dc1b:	push   esi
6401dc1c:	call   0x6401475a
6401dc21:	pop    ecx
6401dc22:	pop    esi
6401dc23:	ret    
6401dc24:	push   esi
6401dc25:	mov    esi,DWORD PTR [esp+0x8]
6401dc29:	test   esi,esi
6401dc2b:	je     0x6401dcab
6401dc2d:	mov    eax,DWORD PTR [esi+0xc]
6401dc30:	cmp    eax,DWORD PTR ds:0x6403853c
6401dc36:	je     0x6401dc3f
6401dc38:	push   eax
6401dc39:	call   0x6401475a
6401dc3e:	pop    ecx
6401dc3f:	mov    eax,DWORD PTR [esi+0x10]
6401dc42:	cmp    eax,DWORD PTR ds:0x64038540
6401dc48:	je     0x6401dc51
6401dc4a:	push   eax
6401dc4b:	call   0x6401475a
6401dc50:	pop    ecx
6401dc51:	mov    eax,DWORD PTR [esi+0x14]
6401dc54:	cmp    eax,DWORD PTR ds:0x64038544
6401dc5a:	je     0x6401dc63
6401dc5c:	push   eax
6401dc5d:	call   0x6401475a
6401dc62:	pop    ecx
6401dc63:	mov    eax,DWORD PTR [esi+0x18]
6401dc66:	cmp    eax,DWORD PTR ds:0x64038548
6401dc6c:	je     0x6401dc75
6401dc6e:	push   eax
6401dc6f:	call   0x6401475a
6401dc74:	pop    ecx
6401dc75:	mov    eax,DWORD PTR [esi+0x1c]
6401dc78:	cmp    eax,DWORD PTR ds:0x6403854c
6401dc7e:	je     0x6401dc87
6401dc80:	push   eax
6401dc81:	call   0x6401475a
6401dc86:	pop    ecx
6401dc87:	mov    eax,DWORD PTR [esi+0x20]
6401dc8a:	cmp    eax,DWORD PTR ds:0x64038550
6401dc90:	je     0x6401dc99
6401dc92:	push   eax
6401dc93:	call   0x6401475a
6401dc98:	pop    ecx
6401dc99:	mov    esi,DWORD PTR [esi+0x24]
6401dc9c:	cmp    esi,DWORD PTR ds:0x64038554
6401dca2:	je     0x6401dcab
6401dca4:	push   esi
6401dca5:	call   0x6401475a
6401dcaa:	pop    ecx
6401dcab:	pop    esi
6401dcac:	ret    
6401dcad:	mov    eax,DWORD PTR [esp+0x4]
6401dcb1:	push   ebx
6401dcb2:	xor    ebx,ebx
6401dcb4:	cmp    eax,ebx
6401dcb6:	push   esi
6401dcb7:	push   edi
6401dcb8:	je     0x6401dcc2
6401dcba:	mov    edi,DWORD PTR [esp+0x14]
6401dcbe:	cmp    edi,ebx
6401dcc0:	ja     0x6401dcdd
6401dcc2:	call   0x640164c3
6401dcc7:	push   0x16
6401dcc9:	pop    esi
6401dcca:	mov    DWORD PTR [eax],esi
6401dccc:	push   ebx
6401dccd:	push   ebx
6401dcce:	push   ebx
6401dccf:	push   ebx
6401dcd0:	push   ebx
6401dcd1:	call   0x64013e52
6401dcd6:	add    esp,0x14
6401dcd9:	mov    eax,esi
6401dcdb:	jmp    0x6401dd1a
6401dcdd:	mov    esi,DWORD PTR [esp+0x18]
6401dce1:	cmp    esi,ebx
6401dce3:	jne    0x6401dce9
6401dce5:	mov    BYTE PTR [eax],bl
6401dce7:	jmp    0x6401dcc2
6401dce9:	mov    edx,eax
6401dceb:	cmp    BYTE PTR [edx],bl
6401dced:	je     0x6401dcf3
6401dcef:	inc    edx
6401dcf0:	dec    edi
6401dcf1:	jne    0x6401dceb
6401dcf3:	cmp    edi,ebx
6401dcf5:	je     0x6401dce5
6401dcf7:	mov    cl,BYTE PTR [esi]
6401dcf9:	mov    BYTE PTR [edx],cl
6401dcfb:	inc    edx
6401dcfc:	inc    esi
6401dcfd:	cmp    cl,bl
6401dcff:	je     0x6401dd04
6401dd01:	dec    edi
6401dd02:	jne    0x6401dcf7
6401dd04:	cmp    edi,ebx
6401dd06:	jne    0x6401dd18
6401dd08:	mov    BYTE PTR [eax],bl
6401dd0a:	call   0x640164c3
6401dd0f:	push   0x22
6401dd11:	pop    ecx
6401dd12:	mov    DWORD PTR [eax],ecx
6401dd14:	mov    esi,ecx
6401dd16:	jmp    0x6401dccc
6401dd18:	xor    eax,eax
6401dd1a:	pop    edi
6401dd1b:	pop    esi
6401dd1c:	pop    ebx
6401dd1d:	ret    
6401dd1e:	int3   
6401dd1f:	int3   
6401dd20:	push   ebp
6401dd21:	mov    ebp,esp
6401dd23:	push   esi
6401dd24:	xor    eax,eax
6401dd26:	push   eax
6401dd27:	push   eax
6401dd28:	push   eax
6401dd29:	push   eax
6401dd2a:	push   eax
6401dd2b:	push   eax
6401dd2c:	push   eax
6401dd2d:	push   eax
6401dd2e:	mov    edx,DWORD PTR [ebp+0xc]
6401dd31:	lea    ecx,[ecx+0x0]
6401dd34:	mov    al,BYTE PTR [edx]
6401dd36:	or     al,al
6401dd38:	je     0x6401dd43
6401dd3a:	add    edx,0x1
6401dd3d:	bts    DWORD PTR [esp],eax
6401dd41:	jmp    0x6401dd34
6401dd43:	mov    esi,DWORD PTR [ebp+0x8]
6401dd46:	or     ecx,0xffffffff
6401dd49:	lea    ecx,[ecx+0x0]
6401dd4c:	add    ecx,0x1
6401dd4f:	mov    al,BYTE PTR [esi]
6401dd51:	or     al,al
6401dd53:	je     0x6401dd5e
6401dd55:	add    esi,0x1
6401dd58:	bt     DWORD PTR [esp],eax
6401dd5c:	jae    0x6401dd4c
6401dd5e:	mov    eax,ecx
6401dd60:	add    esp,0x20
6401dd63:	pop    esi
6401dd64:	leave  
6401dd65:	ret    
6401dd66:	push   ebp
6401dd67:	mov    ebp,esp
6401dd69:	push   ebx
6401dd6a:	push   esi
6401dd6b:	mov    esi,DWORD PTR [ebp+0x8]
6401dd6e:	xor    ebx,ebx
6401dd70:	cmp    DWORD PTR [ebp+0x14],ebx
6401dd73:	push   edi
6401dd74:	jne    0x6401dd86
6401dd76:	cmp    esi,ebx
6401dd78:	jne    0x6401dd8a
6401dd7a:	cmp    DWORD PTR [ebp+0xc],ebx
6401dd7d:	jne    0x6401dd91
6401dd7f:	xor    eax,eax
6401dd81:	pop    edi
6401dd82:	pop    esi
6401dd83:	pop    ebx
6401dd84:	pop    ebp
6401dd85:	ret    
6401dd86:	cmp    esi,ebx
6401dd88:	je     0x6401dd91
6401dd8a:	mov    edi,DWORD PTR [ebp+0xc]
6401dd8d:	cmp    edi,ebx
6401dd8f:	ja     0x6401ddac
6401dd91:	call   0x640164c3
6401dd96:	push   0x16
6401dd98:	pop    esi
6401dd99:	mov    DWORD PTR [eax],esi
6401dd9b:	push   ebx
6401dd9c:	push   ebx
6401dd9d:	push   ebx
6401dd9e:	push   ebx
6401dd9f:	push   ebx
6401dda0:	call   0x64013e52
6401dda5:	add    esp,0x14
6401dda8:	mov    eax,esi
6401ddaa:	jmp    0x6401dd81
6401ddac:	cmp    DWORD PTR [ebp+0x14],ebx
6401ddaf:	jne    0x6401ddb5
6401ddb1:	mov    BYTE PTR [esi],bl
6401ddb3:	jmp    0x6401dd7f
6401ddb5:	mov    edx,DWORD PTR [ebp+0x10]
6401ddb8:	cmp    edx,ebx
6401ddba:	jne    0x6401ddc0
6401ddbc:	mov    BYTE PTR [esi],bl
6401ddbe:	jmp    0x6401dd91
6401ddc0:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401ddc4:	mov    eax,esi
6401ddc6:	jne    0x6401ddd7
6401ddc8:	mov    cl,BYTE PTR [edx]
6401ddca:	mov    BYTE PTR [eax],cl
6401ddcc:	inc    eax
6401ddcd:	inc    edx
6401ddce:	cmp    cl,bl
6401ddd0:	je     0x6401ddf0
6401ddd2:	dec    edi
6401ddd3:	jne    0x6401ddc8
6401ddd5:	jmp    0x6401ddf0
6401ddd7:	mov    cl,BYTE PTR [edx]
6401ddd9:	mov    BYTE PTR [eax],cl
6401dddb:	inc    eax
6401dddc:	inc    edx
6401dddd:	cmp    cl,bl
6401dddf:	je     0x6401dde9
6401dde1:	dec    edi
6401dde2:	je     0x6401dde9
6401dde4:	dec    DWORD PTR [ebp+0x14]
6401dde7:	jne    0x6401ddd7
6401dde9:	cmp    DWORD PTR [ebp+0x14],ebx
6401ddec:	jne    0x6401ddf0
6401ddee:	mov    BYTE PTR [eax],bl
6401ddf0:	cmp    edi,ebx
6401ddf2:	jne    0x6401dd7f
6401ddf4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401ddf8:	jne    0x6401de09
6401ddfa:	mov    eax,DWORD PTR [ebp+0xc]
6401ddfd:	push   0x50
6401ddff:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401de03:	pop    eax
6401de04:	jmp    0x6401dd81
6401de09:	mov    BYTE PTR [esi],bl
6401de0b:	call   0x640164c3
6401de10:	push   0x22
6401de12:	pop    ecx
6401de13:	mov    DWORD PTR [eax],ecx
6401de15:	mov    esi,ecx
6401de17:	jmp    0x6401dd9b
6401de19:	push   ebp
6401de1a:	mov    ebp,esp
6401de1c:	push   ecx
6401de1d:	push   ecx
6401de1e:	mov    eax,ds:0x64037644
6401de23:	xor    eax,ebp
6401de25:	mov    DWORD PTR [ebp-0x4],eax
6401de28:	mov    eax,ds:0x64039828
6401de2d:	push   ebx
6401de2e:	push   esi
6401de2f:	xor    ebx,ebx
6401de31:	cmp    eax,ebx
6401de33:	push   edi
6401de34:	mov    edi,ecx
6401de36:	jne    0x6401de72
6401de38:	lea    eax,[ebp-0x8]
6401de3b:	push   eax
6401de3c:	xor    esi,esi
6401de3e:	inc    esi
6401de3f:	push   esi
6401de40:	push   0x64029960
6401de45:	push   esi
6401de46:	call   DWORD PTR ds:0x6402410c
6401de4c:	test   eax,eax
6401de4e:	je     0x6401de58
6401de50:	mov    DWORD PTR ds:0x64039828,esi
6401de56:	jmp    0x6401de8c
6401de58:	call   DWORD PTR ds:0x64024064
6401de5e:	cmp    eax,0x78
6401de61:	jne    0x6401de6d
6401de63:	push   0x2
6401de65:	pop    eax
6401de66:	mov    ds:0x64039828,eax
6401de6b:	jmp    0x6401de72
6401de6d:	mov    eax,ds:0x64039828
6401de72:	cmp    eax,0x2
6401de75:	je     0x6401df4a
6401de7b:	cmp    eax,ebx
6401de7d:	je     0x6401df4a
6401de83:	cmp    eax,0x1
6401de86:	jne    0x6401df74
6401de8c:	cmp    DWORD PTR [ebp+0x18],ebx
6401de8f:	mov    DWORD PTR [ebp-0x8],ebx
6401de92:	jne    0x6401de9c
6401de94:	mov    eax,DWORD PTR [edi]
6401de96:	mov    eax,DWORD PTR [eax+0x4]
6401de99:	mov    DWORD PTR [ebp+0x18],eax
6401de9c:	mov    esi,DWORD PTR ds:0x64024028
6401dea2:	xor    eax,eax
6401dea4:	cmp    DWORD PTR [ebp+0x20],ebx
6401dea7:	push   ebx
6401dea8:	push   ebx
6401dea9:	push   DWORD PTR [ebp+0x10]
6401deac:	setne  al
6401deaf:	push   DWORD PTR [ebp+0xc]
6401deb2:	lea    eax,[eax*8+0x1]
6401deb9:	push   eax
6401deba:	push   DWORD PTR [ebp+0x18]
6401debd:	call   esi
6401debf:	mov    edi,eax
6401dec1:	cmp    edi,ebx
6401dec3:	je     0x6401df74
6401dec9:	jle    0x6401df07
6401decb:	cmp    edi,0x7ffffff0
6401ded1:	ja     0x6401df07
6401ded3:	lea    eax,[edi+edi*1+0x8]
6401ded7:	cmp    eax,0x400
6401dedc:	ja     0x6401def1
6401dede:	call   0x64013d20
6401dee3:	mov    eax,esp
6401dee5:	cmp    eax,ebx
6401dee7:	je     0x6401df05
6401dee9:	mov    DWORD PTR [eax],0xcccc
6401deef:	jmp    0x6401df02
6401def1:	push   eax
6401def2:	call   0x640148be
6401def7:	cmp    eax,ebx
6401def9:	pop    ecx
6401defa:	je     0x6401df05
6401defc:	mov    DWORD PTR [eax],0xdddd
6401df02:	add    eax,0x8
6401df05:	mov    ebx,eax
6401df07:	test   ebx,ebx
6401df09:	je     0x6401df74
6401df0b:	lea    eax,[edi+edi*1]
6401df0e:	push   eax
6401df0f:	push   0x0
6401df11:	push   ebx
6401df12:	call   0x64015160
6401df17:	add    esp,0xc
6401df1a:	push   edi
6401df1b:	push   ebx
6401df1c:	push   DWORD PTR [ebp+0x10]
6401df1f:	push   DWORD PTR [ebp+0xc]
6401df22:	push   0x1
6401df24:	push   DWORD PTR [ebp+0x18]
6401df27:	call   esi
6401df29:	test   eax,eax
6401df2b:	je     0x6401df3e
6401df2d:	push   DWORD PTR [ebp+0x14]
6401df30:	push   eax
6401df31:	push   ebx
6401df32:	push   DWORD PTR [ebp+0x8]
6401df35:	call   DWORD PTR ds:0x6402410c
6401df3b:	mov    DWORD PTR [ebp-0x8],eax
6401df3e:	push   ebx
6401df3f:	call   0x6401430a
6401df44:	mov    eax,DWORD PTR [ebp-0x8]
6401df47:	pop    ecx
6401df48:	jmp    0x6401dfbf
6401df4a:	xor    esi,esi
6401df4c:	cmp    DWORD PTR [ebp+0x1c],ebx
6401df4f:	jne    0x6401df59
6401df51:	mov    eax,DWORD PTR [edi]
6401df53:	mov    eax,DWORD PTR [eax+0x14]
6401df56:	mov    DWORD PTR [ebp+0x1c],eax
6401df59:	cmp    DWORD PTR [ebp+0x18],ebx
6401df5c:	jne    0x6401df66
6401df5e:	mov    eax,DWORD PTR [edi]
6401df60:	mov    eax,DWORD PTR [eax+0x4]
6401df63:	mov    DWORD PTR [ebp+0x18],eax
6401df66:	push   DWORD PTR [ebp+0x1c]
6401df69:	call   0x6401e060
6401df6e:	cmp    eax,0xffffffff
6401df71:	pop    ecx
6401df72:	jne    0x6401df78
6401df74:	xor    eax,eax
6401df76:	jmp    0x6401dfbf
6401df78:	cmp    eax,DWORD PTR [ebp+0x18]
6401df7b:	je     0x6401df9b
6401df7d:	push   ebx
6401df7e:	push   ebx
6401df7f:	lea    ecx,[ebp+0x10]
6401df82:	push   ecx
6401df83:	push   DWORD PTR [ebp+0xc]
6401df86:	push   eax
6401df87:	push   DWORD PTR [ebp+0x18]
6401df8a:	call   0x6401e0a7
6401df8f:	mov    esi,eax
6401df91:	add    esp,0x18
6401df94:	cmp    esi,ebx
6401df96:	je     0x6401df74
6401df98:	mov    DWORD PTR [ebp+0xc],esi
6401df9b:	push   DWORD PTR [ebp+0x14]
6401df9e:	push   DWORD PTR [ebp+0x10]
6401dfa1:	push   DWORD PTR [ebp+0xc]
6401dfa4:	push   DWORD PTR [ebp+0x8]
6401dfa7:	push   DWORD PTR [ebp+0x1c]
6401dfaa:	call   DWORD PTR ds:0x64024108
6401dfb0:	cmp    esi,ebx
6401dfb2:	mov    edi,eax
6401dfb4:	je     0x6401dfbd
6401dfb6:	push   esi
6401dfb7:	call   0x6401475a
6401dfbc:	pop    ecx
6401dfbd:	mov    eax,edi
6401dfbf:	lea    esp,[ebp-0x14]
6401dfc2:	pop    edi
6401dfc3:	pop    esi
6401dfc4:	pop    ebx
6401dfc5:	mov    ecx,DWORD PTR [ebp-0x4]
6401dfc8:	xor    ecx,ebp
6401dfca:	call   0x64013d06
6401dfcf:	leave  
6401dfd0:	ret    
6401dfd1:	push   ebp
6401dfd2:	mov    ebp,esp
6401dfd4:	sub    esp,0x10
6401dfd7:	push   DWORD PTR [ebp+0x8]
6401dfda:	lea    ecx,[ebp-0x10]
6401dfdd:	call   0x64014325
6401dfe2:	push   DWORD PTR [ebp+0x24]
6401dfe5:	lea    ecx,[ebp-0x10]
6401dfe8:	push   DWORD PTR [ebp+0x20]
6401dfeb:	push   DWORD PTR [ebp+0x1c]
6401dfee:	push   DWORD PTR [ebp+0x18]
6401dff1:	push   DWORD PTR [ebp+0x14]
6401dff4:	push   DWORD PTR [ebp+0x10]
6401dff7:	push   DWORD PTR [ebp+0xc]
6401dffa:	call   0x6401de19
6401dfff:	add    esp,0x1c
6401e002:	cmp    BYTE PTR [ebp-0x4],0x0
6401e006:	je     0x6401e00f
6401e008:	mov    ecx,DWORD PTR [ebp-0x8]
6401e00b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401e00f:	leave  
6401e010:	ret    
6401e011:	int3   
6401e012:	int3   
6401e013:	int3   
6401e014:	int3   
6401e015:	int3   
6401e016:	int3   
6401e017:	int3   
6401e018:	int3   
6401e019:	int3   
6401e01a:	int3   
6401e01b:	int3   
6401e01c:	int3   
6401e01d:	int3   
6401e01e:	int3   
6401e01f:	int3   
6401e020:	push   ebp
6401e021:	mov    ebp,esp
6401e023:	push   esi
6401e024:	xor    eax,eax
6401e026:	push   eax
6401e027:	push   eax
6401e028:	push   eax
6401e029:	push   eax
6401e02a:	push   eax
6401e02b:	push   eax
6401e02c:	push   eax
6401e02d:	push   eax
6401e02e:	mov    edx,DWORD PTR [ebp+0xc]
6401e031:	lea    ecx,[ecx+0x0]
6401e034:	mov    al,BYTE PTR [edx]
6401e036:	or     al,al
6401e038:	je     0x6401e043
6401e03a:	add    edx,0x1
6401e03d:	bts    DWORD PTR [esp],eax
6401e041:	jmp    0x6401e034
6401e043:	mov    esi,DWORD PTR [ebp+0x8]
6401e046:	mov    edi,edi
6401e048:	mov    al,BYTE PTR [esi]
6401e04a:	or     al,al
6401e04c:	je     0x6401e05a
6401e04e:	add    esi,0x1
6401e051:	bt     DWORD PTR [esp],eax
6401e055:	jae    0x6401e048
6401e057:	lea    eax,[esi-0x1]
6401e05a:	add    esp,0x20
6401e05d:	pop    esi
6401e05e:	leave  
6401e05f:	ret    
6401e060:	push   ebp
6401e061:	mov    ebp,esp
6401e063:	sub    esp,0xc
6401e066:	mov    eax,ds:0x64037644
6401e06b:	xor    eax,ebp
6401e06d:	mov    DWORD PTR [ebp-0x4],eax
6401e070:	push   0x6
6401e072:	lea    eax,[ebp-0xc]
6401e075:	push   eax
6401e076:	push   0x1004
6401e07b:	push   DWORD PTR [ebp+0x8]
6401e07e:	mov    BYTE PTR [ebp-0x6],0x0
6401e082:	call   DWORD PTR ds:0x64024168
6401e088:	test   eax,eax
6401e08a:	jne    0x6401e091
6401e08c:	or     eax,0xffffffff
6401e08f:	jmp    0x6401e09b
6401e091:	lea    eax,[ebp-0xc]
6401e094:	push   eax
6401e095:	call   0x64021155
6401e09a:	pop    ecx
6401e09b:	mov    ecx,DWORD PTR [ebp-0x4]
6401e09e:	xor    ecx,ebp
6401e0a0:	call   0x64013d06
6401e0a5:	leave  
6401e0a6:	ret    
6401e0a7:	push   ebp
6401e0a8:	mov    ebp,esp
6401e0aa:	sub    esp,0x34
6401e0ad:	mov    eax,ds:0x64037644
6401e0b2:	xor    eax,ebp
6401e0b4:	mov    DWORD PTR [ebp-0x4],eax
6401e0b7:	mov    eax,DWORD PTR [ebp+0x10]
6401e0ba:	mov    ecx,DWORD PTR [ebp+0x18]
6401e0bd:	mov    DWORD PTR [ebp-0x28],eax
6401e0c0:	mov    eax,DWORD PTR [ebp+0x14]
6401e0c3:	push   ebx
6401e0c4:	mov    DWORD PTR [ebp-0x30],eax
6401e0c7:	mov    eax,DWORD PTR [eax]
6401e0c9:	push   esi
6401e0ca:	mov    DWORD PTR [ebp-0x24],eax
6401e0cd:	mov    eax,DWORD PTR [ebp+0x8]
6401e0d0:	push   edi
6401e0d1:	xor    edi,edi
6401e0d3:	cmp    eax,DWORD PTR [ebp+0xc]
6401e0d6:	mov    DWORD PTR [ebp-0x34],ecx
6401e0d9:	mov    DWORD PTR [ebp-0x20],edi
6401e0dc:	mov    DWORD PTR [ebp-0x2c],edi
6401e0df:	je     0x6401e244
6401e0e5:	mov    esi,DWORD PTR ds:0x640241b4
6401e0eb:	lea    ecx,[ebp-0x18]
6401e0ee:	push   ecx
6401e0ef:	push   eax
6401e0f0:	call   esi
6401e0f2:	test   eax,eax
6401e0f4:	mov    ebx,DWORD PTR ds:0x64024028
6401e0fa:	je     0x6401e15a
6401e0fc:	cmp    DWORD PTR [ebp-0x18],0x1
6401e100:	jne    0x6401e15a
6401e102:	lea    eax,[ebp-0x18]
6401e105:	push   eax
6401e106:	push   DWORD PTR [ebp+0xc]
6401e109:	call   esi
6401e10b:	test   eax,eax
6401e10d:	je     0x6401e15a
6401e10f:	cmp    DWORD PTR [ebp-0x18],0x1
6401e113:	jne    0x6401e15a
6401e115:	mov    esi,DWORD PTR [ebp-0x24]
6401e118:	cmp    esi,0xffffffff
6401e11b:	mov    DWORD PTR [ebp-0x2c],0x1
6401e122:	jne    0x6401e130
6401e124:	push   DWORD PTR [ebp-0x28]
6401e127:	call   0x64015550
6401e12c:	mov    esi,eax
6401e12e:	pop    ecx
6401e12f:	inc    esi
6401e130:	cmp    esi,edi
6401e132:	jle    0x6401e18f
6401e134:	cmp    esi,0x7ffffff0
6401e13a:	ja     0x6401e18f
6401e13c:	lea    eax,[esi+esi*1+0x8]
6401e140:	cmp    eax,0x400
6401e145:	ja     0x6401e176
6401e147:	call   0x64013d20
6401e14c:	mov    eax,esp
6401e14e:	cmp    eax,edi
6401e150:	je     0x6401e18a
6401e152:	mov    DWORD PTR [eax],0xcccc
6401e158:	jmp    0x6401e187
6401e15a:	push   edi
6401e15b:	push   edi
6401e15c:	push   DWORD PTR [ebp-0x24]
6401e15f:	push   DWORD PTR [ebp-0x28]
6401e162:	push   0x1
6401e164:	push   DWORD PTR [ebp+0x8]
6401e167:	call   ebx
6401e169:	mov    esi,eax
6401e16b:	cmp    esi,edi
6401e16d:	jne    0x6401e132
6401e16f:	xor    eax,eax
6401e171:	jmp    0x6401e247
6401e176:	push   eax
6401e177:	call   0x640148be
6401e17c:	cmp    eax,edi
6401e17e:	pop    ecx
6401e17f:	je     0x6401e18a
6401e181:	mov    DWORD PTR [eax],0xdddd
6401e187:	add    eax,0x8
6401e18a:	mov    DWORD PTR [ebp-0x1c],eax
6401e18d:	jmp    0x6401e192
6401e18f:	mov    DWORD PTR [ebp-0x1c],edi
6401e192:	cmp    DWORD PTR [ebp-0x1c],edi
6401e195:	je     0x6401e16f
6401e197:	lea    eax,[esi+esi*1]
6401e19a:	push   eax
6401e19b:	push   edi
6401e19c:	push   DWORD PTR [ebp-0x1c]
6401e19f:	call   0x64015160
6401e1a4:	add    esp,0xc
6401e1a7:	push   esi
6401e1a8:	push   DWORD PTR [ebp-0x1c]
6401e1ab:	push   DWORD PTR [ebp-0x24]
6401e1ae:	push   DWORD PTR [ebp-0x28]
6401e1b1:	push   0x1
6401e1b3:	push   DWORD PTR [ebp+0x8]
6401e1b6:	call   ebx
6401e1b8:	test   eax,eax
6401e1ba:	je     0x6401e23b
6401e1bc:	mov    ebx,DWORD PTR [ebp-0x34]
6401e1bf:	cmp    ebx,edi
6401e1c1:	je     0x6401e1e0
6401e1c3:	push   edi
6401e1c4:	push   edi
6401e1c5:	push   DWORD PTR [ebp+0x1c]
6401e1c8:	push   ebx
6401e1c9:	push   esi
6401e1ca:	push   DWORD PTR [ebp-0x1c]
6401e1cd:	push   edi
6401e1ce:	push   DWORD PTR [ebp+0xc]
6401e1d1:	call   DWORD PTR ds:0x64024010
6401e1d7:	test   eax,eax
6401e1d9:	je     0x6401e23b
6401e1db:	mov    DWORD PTR [ebp-0x20],ebx
6401e1de:	jmp    0x6401e23b
6401e1e0:	cmp    DWORD PTR [ebp-0x2c],edi
6401e1e3:	mov    ebx,DWORD PTR ds:0x64024010
6401e1e9:	jne    0x6401e1ff
6401e1eb:	push   edi
6401e1ec:	push   edi
6401e1ed:	push   edi
6401e1ee:	push   edi
6401e1ef:	push   esi
6401e1f0:	push   DWORD PTR [ebp-0x1c]
6401e1f3:	push   edi
6401e1f4:	push   DWORD PTR [ebp+0xc]
6401e1f7:	call   ebx
6401e1f9:	mov    esi,eax
6401e1fb:	cmp    esi,edi
6401e1fd:	je     0x6401e23b
6401e1ff:	push   esi
6401e200:	push   0x1
6401e202:	call   0x64015d6f
6401e207:	cmp    eax,edi
6401e209:	pop    ecx
6401e20a:	pop    ecx
6401e20b:	mov    DWORD PTR [ebp-0x20],eax
6401e20e:	je     0x6401e23b
6401e210:	push   edi
6401e211:	push   edi
6401e212:	push   esi
6401e213:	push   eax
6401e214:	push   esi
6401e215:	push   DWORD PTR [ebp-0x1c]
6401e218:	push   edi
6401e219:	push   DWORD PTR [ebp+0xc]
6401e21c:	call   ebx
6401e21e:	cmp    eax,edi
6401e220:	jne    0x6401e230
6401e222:	push   DWORD PTR [ebp-0x20]
6401e225:	call   0x6401475a
6401e22a:	pop    ecx
6401e22b:	mov    DWORD PTR [ebp-0x20],edi
6401e22e:	jmp    0x6401e23b
6401e230:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401e234:	je     0x6401e23b
6401e236:	mov    ecx,DWORD PTR [ebp-0x30]
6401e239:	mov    DWORD PTR [ecx],eax
6401e23b:	push   DWORD PTR [ebp-0x1c]
6401e23e:	call   0x6401430a
6401e243:	pop    ecx
6401e244:	mov    eax,DWORD PTR [ebp-0x20]
6401e247:	lea    esp,[ebp-0x40]
6401e24a:	pop    edi
6401e24b:	pop    esi
6401e24c:	pop    ebx
6401e24d:	mov    ecx,DWORD PTR [ebp-0x4]
6401e250:	xor    ecx,ebp
6401e252:	call   0x64013d06
6401e257:	leave  
6401e258:	ret    
6401e259:	push   0xc
6401e25b:	push   0x6402bb08
6401e260:	call   0x64015f14
6401e265:	mov    ecx,DWORD PTR [ebp+0x8]
6401e268:	xor    edi,edi
6401e26a:	cmp    ecx,edi
6401e26c:	jbe    0x6401e29c
6401e26e:	push   0xffffffe0
6401e270:	pop    eax
6401e271:	xor    edx,edx
6401e273:	div    ecx
6401e275:	cmp    eax,DWORD PTR [ebp+0xc]
6401e278:	sbb    eax,eax
6401e27a:	inc    eax
6401e27b:	jne    0x6401e29c
6401e27d:	call   0x640164c3
6401e282:	mov    DWORD PTR [eax],0xc
6401e288:	push   edi
6401e289:	push   edi
6401e28a:	push   edi
6401e28b:	push   edi
6401e28c:	push   edi
6401e28d:	call   0x64013e52
6401e292:	add    esp,0x14
6401e295:	xor    eax,eax
6401e297:	jmp    0x6401e371
6401e29c:	imul   ecx,DWORD PTR [ebp+0xc]
6401e2a0:	mov    esi,ecx
6401e2a2:	mov    DWORD PTR [ebp+0x8],esi
6401e2a5:	cmp    esi,edi
6401e2a7:	jne    0x6401e2ac
6401e2a9:	xor    esi,esi
6401e2ab:	inc    esi
6401e2ac:	xor    ebx,ebx
6401e2ae:	mov    DWORD PTR [ebp-0x1c],ebx
6401e2b1:	cmp    esi,0xffffffe0
6401e2b4:	ja     0x6401e31f
6401e2b6:	cmp    DWORD PTR ds:0x6403ab64,0x3
6401e2bd:	jne    0x6401e30a
6401e2bf:	add    esi,0xf
6401e2c2:	and    esi,0xfffffff0
6401e2c5:	mov    DWORD PTR [ebp+0xc],esi
6401e2c8:	mov    eax,DWORD PTR [ebp+0x8]
6401e2cb:	cmp    eax,DWORD PTR ds:0x64039b30
6401e2d1:	ja     0x6401e30a
6401e2d3:	push   0x4
6401e2d5:	call   0x6401af0e
6401e2da:	pop    ecx
6401e2db:	mov    DWORD PTR [ebp-0x4],edi
6401e2de:	push   DWORD PTR [ebp+0x8]
6401e2e1:	call   0x6401b75b
6401e2e6:	pop    ecx
6401e2e7:	mov    DWORD PTR [ebp-0x1c],eax
6401e2ea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e2f1:	call   0x6401e355
6401e2f6:	mov    ebx,DWORD PTR [ebp-0x1c]
6401e2f9:	cmp    ebx,edi
6401e2fb:	je     0x6401e30e
6401e2fd:	push   DWORD PTR [ebp+0x8]
6401e300:	push   edi
6401e301:	push   ebx
6401e302:	call   0x64015160
6401e307:	add    esp,0xc
6401e30a:	cmp    ebx,edi
6401e30c:	jne    0x6401e36f
6401e30e:	push   esi
6401e30f:	push   0x8
6401e311:	push   DWORD PTR ds:0x64039354
6401e317:	call   DWORD PTR ds:0x6402417c
6401e31d:	mov    ebx,eax
6401e31f:	cmp    ebx,edi
6401e321:	jne    0x6401e36f
6401e323:	cmp    DWORD PTR ds:0x6403980c,edi
6401e329:	je     0x6401e35e
6401e32b:	push   esi
6401e32c:	call   0x6401687f
6401e331:	pop    ecx
6401e332:	test   eax,eax
6401e334:	jne    0x6401e2ac
6401e33a:	mov    eax,DWORD PTR [ebp+0x10]
6401e33d:	cmp    eax,edi
6401e33f:	je     0x6401e295
6401e345:	mov    DWORD PTR [eax],0xc
6401e34b:	jmp    0x6401e295
6401e350:	xor    edi,edi
6401e352:	mov    esi,DWORD PTR [ebp+0xc]
6401e355:	push   0x4
6401e357:	call   0x6401ae36
6401e35c:	pop    ecx
6401e35d:	ret    
6401e35e:	cmp    ebx,edi
6401e360:	jne    0x6401e36f
6401e362:	mov    eax,DWORD PTR [ebp+0x10]
6401e365:	cmp    eax,edi
6401e367:	je     0x6401e36f
6401e369:	mov    DWORD PTR [eax],0xc
6401e36f:	mov    eax,ebx
6401e371:	call   0x64015f59
6401e376:	ret    
6401e377:	mov    eax,DWORD PTR [esp+0x4]
6401e37b:	mov    ds:0x6403982c,eax
6401e380:	mov    ds:0x64039830,eax
6401e385:	mov    ds:0x64039834,eax
6401e38a:	mov    ds:0x64039838,eax
6401e38f:	ret    
6401e390:	mov    eax,DWORD PTR [esp+0x4]
6401e394:	mov    ecx,DWORD PTR ds:0x640379e4
6401e39a:	push   esi
6401e39b:	cmp    DWORD PTR [eax+0x4],edx
6401e39e:	je     0x6401e3b0
6401e3a0:	mov    esi,ecx
6401e3a2:	imul   esi,esi,0xc
6401e3a5:	add    esi,DWORD PTR [esp+0x8]
6401e3a9:	add    eax,0xc
6401e3ac:	cmp    eax,esi
6401e3ae:	jb     0x6401e39b
6401e3b0:	imul   ecx,ecx,0xc
6401e3b3:	add    ecx,DWORD PTR [esp+0x8]
6401e3b7:	pop    esi
6401e3b8:	cmp    eax,ecx
6401e3ba:	jae    0x6401e3c1
6401e3bc:	cmp    DWORD PTR [eax+0x4],edx
6401e3bf:	je     0x6401e3c3
6401e3c1:	xor    eax,eax
6401e3c3:	ret    
6401e3c4:	push   DWORD PTR ds:0x64039834
6401e3ca:	call   0x6401760e
6401e3cf:	pop    ecx
6401e3d0:	ret    
6401e3d1:	push   0x20
6401e3d3:	push   0x6402bb28
6401e3d8:	call   0x64015f14
6401e3dd:	xor    edi,edi
6401e3df:	mov    DWORD PTR [ebp-0x1c],edi
6401e3e2:	mov    DWORD PTR [ebp-0x28],edi
6401e3e5:	mov    ebx,DWORD PTR [ebp+0x8]
6401e3e8:	cmp    ebx,0xb
6401e3eb:	jg     0x6401e439
6401e3ed:	je     0x6401e404
6401e3ef:	mov    eax,ebx
6401e3f1:	push   0x2
6401e3f3:	pop    ecx
6401e3f4:	sub    eax,ecx
6401e3f6:	je     0x6401e41a
6401e3f8:	sub    eax,ecx
6401e3fa:	je     0x6401e404
6401e3fc:	sub    eax,ecx
6401e3fe:	je     0x6401e464
6401e400:	sub    eax,ecx
6401e402:	jne    0x6401e448
6401e404:	call   0x640177b3
6401e409:	mov    edi,eax
6401e40b:	mov    DWORD PTR [ebp-0x28],edi
6401e40e:	test   edi,edi
6401e410:	jne    0x6401e426
6401e412:	or     eax,0xffffffff
6401e415:	jmp    0x6401e57b
6401e41a:	mov    esi,0x6403982c
6401e41f:	mov    eax,ds:0x6403982c
6401e424:	jmp    0x6401e486
6401e426:	push   DWORD PTR [edi+0x5c]
6401e429:	mov    edx,ebx
6401e42b:	call   0x6401e390
6401e430:	mov    esi,eax
6401e432:	add    esi,0x8
6401e435:	mov    eax,DWORD PTR [esi]
6401e437:	jmp    0x6401e493
6401e439:	mov    eax,ebx
6401e43b:	sub    eax,0xf
6401e43e:	je     0x6401e47c
6401e440:	sub    eax,0x6
6401e443:	je     0x6401e470
6401e445:	dec    eax
6401e446:	je     0x6401e464
6401e448:	call   0x640164c3
6401e44d:	mov    DWORD PTR [eax],0x16
6401e453:	xor    eax,eax
6401e455:	push   eax
6401e456:	push   eax
6401e457:	push   eax
6401e458:	push   eax
6401e459:	push   eax
6401e45a:	call   0x64013e52
6401e45f:	add    esp,0x14
6401e462:	jmp    0x6401e412
6401e464:	mov    esi,0x64039834
6401e469:	mov    eax,ds:0x64039834
6401e46e:	jmp    0x6401e486
6401e470:	mov    esi,0x64039830
6401e475:	mov    eax,ds:0x64039830
6401e47a:	jmp    0x6401e486
6401e47c:	mov    esi,0x64039838
6401e481:	mov    eax,ds:0x64039838
6401e486:	mov    DWORD PTR [ebp-0x1c],0x1
6401e48d:	push   eax
6401e48e:	call   0x6401760e
6401e493:	mov    DWORD PTR [ebp-0x20],eax
6401e496:	pop    ecx
6401e497:	xor    eax,eax
6401e499:	cmp    DWORD PTR [ebp-0x20],0x1
6401e49d:	je     0x6401e57b
6401e4a3:	cmp    DWORD PTR [ebp-0x20],eax
6401e4a6:	jne    0x6401e4af
6401e4a8:	push   0x3
6401e4aa:	call   0x640180a9
6401e4af:	cmp    DWORD PTR [ebp-0x1c],eax
6401e4b2:	je     0x6401e4bb
6401e4b4:	push   eax
6401e4b5:	call   0x6401af0e
6401e4ba:	pop    ecx
6401e4bb:	xor    eax,eax
6401e4bd:	mov    DWORD PTR [ebp-0x4],eax
6401e4c0:	cmp    ebx,0x8
6401e4c3:	je     0x6401e4cf
6401e4c5:	cmp    ebx,0xb
6401e4c8:	je     0x6401e4cf
6401e4ca:	cmp    ebx,0x4
6401e4cd:	jne    0x6401e4ea
6401e4cf:	mov    ecx,DWORD PTR [edi+0x60]
6401e4d2:	mov    DWORD PTR [ebp-0x2c],ecx
6401e4d5:	mov    DWORD PTR [edi+0x60],eax
6401e4d8:	cmp    ebx,0x8
6401e4db:	jne    0x6401e51d
6401e4dd:	mov    ecx,DWORD PTR [edi+0x64]
6401e4e0:	mov    DWORD PTR [ebp-0x30],ecx
6401e4e3:	mov    DWORD PTR [edi+0x64],0x8c
6401e4ea:	cmp    ebx,0x8
6401e4ed:	jne    0x6401e51d
6401e4ef:	mov    ecx,DWORD PTR ds:0x640379d8
6401e4f5:	mov    DWORD PTR [ebp-0x24],ecx
6401e4f8:	mov    ecx,DWORD PTR ds:0x640379dc
6401e4fe:	mov    edx,DWORD PTR ds:0x640379d8
6401e504:	add    ecx,edx
6401e506:	cmp    DWORD PTR [ebp-0x24],ecx
6401e509:	jge    0x6401e524
6401e50b:	mov    ecx,DWORD PTR [ebp-0x24]
6401e50e:	imul   ecx,ecx,0xc
6401e511:	mov    edx,DWORD PTR [edi+0x5c]
6401e514:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401e518:	inc    DWORD PTR [ebp-0x24]
6401e51b:	jmp    0x6401e4f8
6401e51d:	call   0x64017605
6401e522:	mov    DWORD PTR [esi],eax
6401e524:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e52b:	call   0x6401e545
6401e530:	cmp    ebx,0x8
6401e533:	jne    0x6401e554
6401e535:	push   DWORD PTR [edi+0x64]
6401e538:	push   ebx
6401e539:	call   DWORD PTR [ebp-0x20]
6401e53c:	pop    ecx
6401e53d:	jmp    0x6401e558
6401e53f:	mov    ebx,DWORD PTR [ebp+0x8]
6401e542:	mov    edi,DWORD PTR [ebp-0x28]
6401e545:	cmp    DWORD PTR [ebp-0x1c],0x0
6401e549:	je     0x6401e553
6401e54b:	push   0x0
6401e54d:	call   0x6401ae36
6401e552:	pop    ecx
6401e553:	ret    
6401e554:	push   ebx
6401e555:	call   DWORD PTR [ebp-0x20]
6401e558:	pop    ecx
6401e559:	cmp    ebx,0x8
6401e55c:	je     0x6401e568
6401e55e:	cmp    ebx,0xb
6401e561:	je     0x6401e568
6401e563:	cmp    ebx,0x4
6401e566:	jne    0x6401e579
6401e568:	mov    eax,DWORD PTR [ebp-0x2c]
6401e56b:	mov    DWORD PTR [edi+0x60],eax
6401e56e:	cmp    ebx,0x8
6401e571:	jne    0x6401e579
6401e573:	mov    eax,DWORD PTR [ebp-0x30]
6401e576:	mov    DWORD PTR [edi+0x64],eax
6401e579:	xor    eax,eax
6401e57b:	call   0x64015f59
6401e580:	ret    
6401e581:	int3   
6401e582:	int3   
6401e583:	int3   
6401e584:	int3   
6401e585:	int3   
6401e586:	int3   
6401e587:	int3   
6401e588:	int3   
6401e589:	int3   
6401e58a:	int3   
6401e58b:	int3   
6401e58c:	int3   
6401e58d:	int3   
6401e58e:	int3   
6401e58f:	int3   
6401e590:	mov    ecx,DWORD PTR [esp+0x4]
6401e594:	cmp    WORD PTR [ecx],0x5a4d
6401e599:	je     0x6401e59e
6401e59b:	xor    eax,eax
6401e59d:	ret    
6401e59e:	mov    eax,DWORD PTR [ecx+0x3c]
6401e5a1:	add    eax,ecx
6401e5a3:	cmp    DWORD PTR [eax],0x4550
6401e5a9:	jne    0x6401e59b
6401e5ab:	xor    ecx,ecx
6401e5ad:	cmp    WORD PTR [eax+0x18],0x10b
6401e5b3:	sete   cl
6401e5b6:	mov    eax,ecx
6401e5b8:	ret    
6401e5b9:	int3   
6401e5ba:	int3   
6401e5bb:	int3   
6401e5bc:	int3   
6401e5bd:	int3   
6401e5be:	int3   
6401e5bf:	int3   
6401e5c0:	mov    eax,DWORD PTR [esp+0x4]
6401e5c4:	mov    ecx,DWORD PTR [eax+0x3c]
6401e5c7:	add    ecx,eax
6401e5c9:	movzx  eax,WORD PTR [ecx+0x14]
6401e5cd:	push   ebx
6401e5ce:	push   esi
6401e5cf:	movzx  esi,WORD PTR [ecx+0x6]
6401e5d3:	xor    edx,edx
6401e5d5:	test   esi,esi
6401e5d7:	push   edi
6401e5d8:	lea    eax,[eax+ecx*1+0x18]
6401e5dc:	jbe    0x6401e5fc
6401e5de:	mov    edi,DWORD PTR [esp+0x14]
6401e5e2:	mov    ecx,DWORD PTR [eax+0xc]
6401e5e5:	cmp    edi,ecx
6401e5e7:	jb     0x6401e5f2
6401e5e9:	mov    ebx,DWORD PTR [eax+0x8]
6401e5ec:	add    ebx,ecx
6401e5ee:	cmp    edi,ebx
6401e5f0:	jb     0x6401e5fe
6401e5f2:	add    edx,0x1
6401e5f5:	add    eax,0x28
6401e5f8:	cmp    edx,esi
6401e5fa:	jb     0x6401e5e2
6401e5fc:	xor    eax,eax
6401e5fe:	pop    edi
6401e5ff:	pop    esi
6401e600:	pop    ebx
6401e601:	ret    
6401e602:	int3   
6401e603:	int3   
6401e604:	int3   
6401e605:	int3   
6401e606:	int3   
6401e607:	int3   
6401e608:	int3   
6401e609:	int3   
6401e60a:	int3   
6401e60b:	int3   
6401e60c:	int3   
6401e60d:	int3   
6401e60e:	int3   
6401e60f:	int3   
6401e610:	push   ebp
6401e611:	mov    ebp,esp
6401e613:	push   0xfffffffe
6401e615:	push   0x6402bb48
6401e61a:	push   0x64015f70
6401e61f:	mov    eax,fs:0x0
6401e625:	push   eax
6401e626:	sub    esp,0x8
6401e629:	push   ebx
6401e62a:	push   esi
6401e62b:	push   edi
6401e62c:	mov    eax,ds:0x64037644
6401e631:	xor    DWORD PTR [ebp-0x8],eax
6401e634:	xor    eax,ebp
6401e636:	push   eax
6401e637:	lea    eax,[ebp-0x10]
6401e63a:	mov    fs:0x0,eax
6401e640:	mov    DWORD PTR [ebp-0x18],esp
6401e643:	mov    DWORD PTR [ebp-0x4],0x0
6401e64a:	push   0x64000000
6401e64f:	call   0x6401e590
6401e654:	add    esp,0x4
6401e657:	test   eax,eax
6401e659:	je     0x6401e6b0
6401e65b:	mov    eax,DWORD PTR [ebp+0x8]
6401e65e:	sub    eax,0x64000000
6401e663:	push   eax
6401e664:	push   0x64000000
6401e669:	call   0x6401e5c0
6401e66e:	add    esp,0x8
6401e671:	test   eax,eax
6401e673:	je     0x6401e6b0
6401e675:	mov    eax,DWORD PTR [eax+0x24]
6401e678:	shr    eax,0x1f
6401e67b:	not    eax
6401e67d:	and    eax,0x1
6401e680:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e687:	mov    ecx,DWORD PTR [ebp-0x10]
6401e68a:	mov    DWORD PTR fs:0x0,ecx
6401e691:	pop    ecx
6401e692:	pop    edi
6401e693:	pop    esi
6401e694:	pop    ebx
6401e695:	mov    esp,ebp
6401e697:	pop    ebp
6401e698:	ret    
6401e699:	mov    eax,DWORD PTR [ebp-0x14]
6401e69c:	mov    ecx,DWORD PTR [eax]
6401e69e:	mov    eax,DWORD PTR [ecx]
6401e6a0:	xor    edx,edx
6401e6a2:	cmp    eax,0xc0000005
6401e6a7:	sete   dl
6401e6aa:	mov    eax,edx
6401e6ac:	ret    
6401e6ad:	mov    esp,DWORD PTR [ebp-0x18]
6401e6b0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e6b7:	xor    eax,eax
6401e6b9:	mov    ecx,DWORD PTR [ebp-0x10]
6401e6bc:	mov    DWORD PTR fs:0x0,ecx
6401e6c3:	pop    ecx
6401e6c4:	pop    edi
6401e6c5:	pop    esi
6401e6c6:	pop    ebx
6401e6c7:	mov    esp,ebp
6401e6c9:	pop    ebp
6401e6ca:	ret    
6401e6cb:	xor    eax,eax
6401e6cd:	inc    eax
6401e6ce:	cmp    DWORD PTR [esp+0x4],0x0
6401e6d3:	jne    0x6401e6d7
6401e6d5:	xor    eax,eax
6401e6d7:	ret    
6401e6d8:	push   ebp
6401e6d9:	mov    ebp,esp
6401e6db:	push   ebx
6401e6dc:	push   esi
6401e6dd:	push   edi
6401e6de:	push   ebp
6401e6df:	push   0x0
6401e6e1:	push   0x0
6401e6e3:	push   0x6401e6f0
6401e6e8:	push   DWORD PTR [ebp+0x8]
6401e6eb:	call   0x64022e5c
6401e6f0:	pop    ebp
6401e6f1:	pop    edi
6401e6f2:	pop    esi
6401e6f3:	pop    ebx
6401e6f4:	mov    esp,ebp
6401e6f6:	pop    ebp
6401e6f7:	ret    
6401e6f8:	mov    ecx,DWORD PTR [esp+0x4]
6401e6fc:	test   DWORD PTR [ecx+0x4],0x6
6401e703:	mov    eax,0x1
6401e708:	je     0x6401e73c
6401e70a:	mov    eax,DWORD PTR [esp+0x14]
6401e70e:	mov    ecx,DWORD PTR [eax-0x4]
6401e711:	xor    ecx,eax
6401e713:	call   0x64013d06
6401e718:	push   ebp
6401e719:	mov    ebp,DWORD PTR [eax+0x10]
6401e71c:	mov    edx,DWORD PTR [eax+0x28]
6401e71f:	push   edx
6401e720:	mov    edx,DWORD PTR [eax+0x24]
6401e723:	push   edx
6401e724:	call   0x6401e73d
6401e729:	add    esp,0x8
6401e72c:	pop    ebp
6401e72d:	mov    eax,DWORD PTR [esp+0x8]
6401e731:	mov    edx,DWORD PTR [esp+0x10]
6401e735:	mov    DWORD PTR [edx],eax
6401e737:	mov    eax,0x3
6401e73c:	ret    
6401e73d:	push   ebx
6401e73e:	push   esi
6401e73f:	push   edi
6401e740:	mov    eax,DWORD PTR [esp+0x10]
6401e744:	push   ebp
6401e745:	push   eax
6401e746:	push   0xfffffffe
6401e748:	push   0x6401e6f8
6401e74d:	push   DWORD PTR fs:0x0
6401e754:	mov    eax,ds:0x64037644
6401e759:	xor    eax,esp
6401e75b:	push   eax
6401e75c:	lea    eax,[esp+0x4]
6401e760:	mov    fs:0x0,eax
6401e766:	mov    eax,DWORD PTR [esp+0x28]
6401e76a:	mov    ebx,DWORD PTR [eax+0x8]
6401e76d:	mov    esi,DWORD PTR [eax+0xc]
6401e770:	cmp    esi,0xffffffff
6401e773:	je     0x6401e7af
6401e775:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401e77a:	je     0x6401e782
6401e77c:	cmp    esi,DWORD PTR [esp+0x2c]
6401e780:	jbe    0x6401e7af
6401e782:	lea    esi,[esi+esi*2]
6401e785:	mov    ecx,DWORD PTR [ebx+esi*4]
6401e788:	mov    DWORD PTR [esp+0xc],ecx
6401e78c:	mov    DWORD PTR [eax+0xc],ecx
6401e78f:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401e794:	jne    0x6401e7ad
6401e796:	push   0x101
6401e79b:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e79f:	call   0x6401e7ed
6401e7a4:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e7a8:	call   0x6401e80c
6401e7ad:	jmp    0x6401e766
6401e7af:	mov    ecx,DWORD PTR [esp+0x4]
6401e7b3:	mov    DWORD PTR fs:0x0,ecx
6401e7ba:	add    esp,0x18
6401e7bd:	pop    edi
6401e7be:	pop    esi
6401e7bf:	pop    ebx
6401e7c0:	ret    
6401e7c1:	xor    eax,eax
6401e7c3:	mov    ecx,DWORD PTR fs:0x0
6401e7ca:	cmp    DWORD PTR [ecx+0x4],0x6401e6f8
6401e7d1:	jne    0x6401e7e3
6401e7d3:	mov    edx,DWORD PTR [ecx+0xc]
6401e7d6:	mov    edx,DWORD PTR [edx+0xc]
6401e7d9:	cmp    DWORD PTR [ecx+0x8],edx
6401e7dc:	jne    0x6401e7e3
6401e7de:	mov    eax,0x1
6401e7e3:	ret    
6401e7e4:	push   ebx
6401e7e5:	push   ecx
6401e7e6:	mov    ebx,0x64038570
6401e7eb:	jmp    0x6401e7f8
6401e7ed:	push   ebx
6401e7ee:	push   ecx
6401e7ef:	mov    ebx,0x64038570
6401e7f4:	mov    ecx,DWORD PTR [esp+0xc]
6401e7f8:	mov    DWORD PTR [ebx+0x8],ecx
6401e7fb:	mov    DWORD PTR [ebx+0x4],eax
6401e7fe:	mov    DWORD PTR [ebx+0xc],ebp
6401e801:	push   ebp
6401e802:	push   ecx
6401e803:	push   eax
6401e804:	pop    eax
6401e805:	pop    ecx
6401e806:	pop    ebp
6401e807:	pop    ecx
6401e808:	pop    ebx
6401e809:	ret    0x4
6401e80c:	call   eax
6401e80e:	ret    
6401e80f:	push   esi
6401e810:	push   edi
6401e811:	xor    edi,edi
6401e813:	lea    esi,[edi+0x64038580]
6401e819:	push   DWORD PTR [esi]
6401e81b:	call   0x64017597
6401e820:	add    edi,0x4
6401e823:	cmp    edi,0x28
6401e826:	pop    ecx
6401e827:	mov    DWORD PTR [esi],eax
6401e829:	jb     0x6401e813
6401e82b:	pop    edi
6401e82c:	pop    esi
6401e82d:	ret    
6401e82e:	mov    eax,DWORD PTR [esp+0x4]
6401e832:	mov    ds:0x6403987c,eax
6401e837:	ret    
6401e838:	mov    eax,DWORD PTR [esp+0x4]
6401e83c:	mov    ds:0x64039880,eax
6401e841:	ret    
6401e842:	push   DWORD PTR [esp+0x4]
6401e846:	call   DWORD PTR ds:0x64024154
6401e84c:	xor    eax,eax
6401e84e:	inc    eax
6401e84f:	ret    0x8
6401e852:	push   0x14
6401e854:	push   0x6402bb68
6401e859:	call   0x64015f14
6401e85e:	xor    edi,edi
6401e860:	mov    DWORD PTR [ebp-0x1c],edi
6401e863:	push   DWORD PTR ds:0x64039880
6401e869:	call   0x6401760e
6401e86e:	pop    ecx
6401e86f:	mov    esi,eax
6401e871:	cmp    esi,edi
6401e873:	jne    0x6401e8c8
6401e875:	lea    eax,[ebp-0x1c]
6401e878:	push   eax
6401e879:	call   0x64017ebf
6401e87e:	pop    ecx
6401e87f:	cmp    eax,edi
6401e881:	je     0x6401e890
6401e883:	push   edi
6401e884:	push   edi
6401e885:	push   edi
6401e886:	push   edi
6401e887:	push   edi
6401e888:	call   0x64013d56
6401e88d:	add    esp,0x14
6401e890:	cmp    DWORD PTR [ebp-0x1c],0x1
6401e894:	je     0x6401e8b7
6401e896:	push   0x64027c08
6401e89b:	call   DWORD PTR ds:0x640240a0
6401e8a1:	cmp    eax,edi
6401e8a3:	je     0x6401e8b7
6401e8a5:	push   0x64029448
6401e8aa:	push   eax
6401e8ab:	call   DWORD PTR ds:0x64024094
6401e8b1:	mov    esi,eax
6401e8b3:	cmp    esi,edi
6401e8b5:	jne    0x6401e8bc
6401e8b7:	mov    esi,0x6401e842
6401e8bc:	push   esi
6401e8bd:	call   0x64017597
6401e8c2:	pop    ecx
6401e8c3:	mov    ds:0x64039880,eax
6401e8c8:	mov    DWORD PTR [ebp-0x4],edi
6401e8cb:	push   DWORD PTR [ebp+0xc]
6401e8ce:	push   DWORD PTR [ebp+0x8]
6401e8d1:	call   esi
6401e8d3:	mov    DWORD PTR [ebp-0x20],eax
6401e8d6:	jmp    0x6401e907
6401e8d8:	mov    eax,DWORD PTR [ebp-0x14]
6401e8db:	mov    eax,DWORD PTR [eax]
6401e8dd:	mov    eax,DWORD PTR [eax]
6401e8df:	mov    DWORD PTR [ebp-0x24],eax
6401e8e2:	xor    ecx,ecx
6401e8e4:	cmp    eax,0xc0000017
6401e8e9:	sete   cl
6401e8ec:	mov    eax,ecx
6401e8ee:	ret    
6401e8ef:	mov    esp,DWORD PTR [ebp-0x18]
6401e8f2:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401e8f9:	jne    0x6401e903
6401e8fb:	push   0x8
6401e8fd:	call   DWORD PTR ds:0x64024070
6401e903:	and    DWORD PTR [ebp-0x20],0x0
6401e907:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e90e:	mov    eax,DWORD PTR [ebp-0x20]
6401e911:	call   0x64015f59
6401e916:	ret    
6401e917:	push   0x10
6401e919:	push   0x6402bb88
6401e91e:	call   0x64015f14
6401e923:	xor    ebx,ebx
6401e925:	mov    DWORD PTR [ebp-0x1c],ebx
6401e928:	push   0x1
6401e92a:	call   0x6401af0e
6401e92f:	pop    ecx
6401e930:	mov    DWORD PTR [ebp-0x4],ebx
6401e933:	push   0x3
6401e935:	pop    edi
6401e936:	mov    DWORD PTR [ebp-0x20],edi
6401e939:	cmp    edi,DWORD PTR ds:0x6403ab60
6401e93f:	jge    0x6401e998
6401e941:	mov    esi,edi
6401e943:	shl    esi,0x2
6401e946:	mov    eax,ds:0x64039b40
6401e94b:	add    eax,esi
6401e94d:	cmp    DWORD PTR [eax],ebx
6401e94f:	je     0x6401e995
6401e951:	mov    eax,DWORD PTR [eax]
6401e953:	test   BYTE PTR [eax+0xc],0x83
6401e957:	je     0x6401e968
6401e959:	push   eax
6401e95a:	call   0x640145eb
6401e95f:	pop    ecx
6401e960:	cmp    eax,0xffffffff
6401e963:	je     0x6401e968
6401e965:	inc    DWORD PTR [ebp-0x1c]
6401e968:	cmp    edi,0x14
6401e96b:	jl     0x6401e995
6401e96d:	mov    eax,ds:0x64039b40
6401e972:	mov    eax,DWORD PTR [esi+eax*1]
6401e975:	add    eax,0x20
6401e978:	push   eax
6401e979:	call   DWORD PTR ds:0x64024158
6401e97f:	mov    eax,ds:0x64039b40
6401e984:	push   DWORD PTR [esi+eax*1]
6401e987:	call   0x6401475a
6401e98c:	pop    ecx
6401e98d:	mov    eax,ds:0x64039b40
6401e992:	mov    DWORD PTR [esi+eax*1],ebx
6401e995:	inc    edi
6401e996:	jmp    0x6401e936
6401e998:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e99f:	call   0x6401e9ad
6401e9a4:	mov    eax,DWORD PTR [ebp-0x1c]
6401e9a7:	call   0x64015f59
6401e9ac:	ret    
6401e9ad:	push   0x1
6401e9af:	call   0x6401ae36
6401e9b4:	pop    ecx
6401e9b5:	ret    
6401e9b6:	push   0x10
6401e9b8:	push   0x6402bba8
6401e9bd:	call   0x64015f14
6401e9c2:	mov    eax,DWORD PTR [ebp+0x8]
6401e9c5:	cmp    eax,0xfffffffe
6401e9c8:	jne    0x6401e9dd
6401e9ca:	call   0x640164c3
6401e9cf:	mov    DWORD PTR [eax],0x9
6401e9d5:	or     eax,0xffffffff
6401e9d8:	jmp    0x6401ea87
6401e9dd:	xor    ebx,ebx
6401e9df:	cmp    eax,ebx
6401e9e1:	jl     0x6401e9eb
6401e9e3:	cmp    eax,DWORD PTR ds:0x6403ab68
6401e9e9:	jb     0x6401ea05
6401e9eb:	call   0x640164c3
6401e9f0:	mov    DWORD PTR [eax],0x9
6401e9f6:	push   ebx
6401e9f7:	push   ebx
6401e9f8:	push   ebx
6401e9f9:	push   ebx
6401e9fa:	push   ebx
6401e9fb:	call   0x64013e52
6401ea00:	add    esp,0x14
6401ea03:	jmp    0x6401e9d5
6401ea05:	mov    ecx,eax
6401ea07:	sar    ecx,0x5
6401ea0a:	lea    edi,[ecx*4+0x6403ab80]
6401ea11:	mov    esi,eax
6401ea13:	and    esi,0x1f
6401ea16:	shl    esi,0x6
6401ea19:	mov    ecx,DWORD PTR [edi]
6401ea1b:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401ea20:	and    ecx,0x1
6401ea23:	je     0x6401e9eb
6401ea25:	push   eax
6401ea26:	call   0x6401be85
6401ea2b:	pop    ecx
6401ea2c:	mov    DWORD PTR [ebp-0x4],ebx
6401ea2f:	mov    eax,DWORD PTR [edi]
6401ea31:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401ea36:	je     0x6401ea69
6401ea38:	push   DWORD PTR [ebp+0x8]
6401ea3b:	call   0x6401be14
6401ea40:	pop    ecx
6401ea41:	push   eax
6401ea42:	call   DWORD PTR ds:0x64024138
6401ea48:	test   eax,eax
6401ea4a:	jne    0x6401ea57
6401ea4c:	call   DWORD PTR ds:0x64024064
6401ea52:	mov    DWORD PTR [ebp-0x1c],eax
6401ea55:	jmp    0x6401ea5a
6401ea57:	mov    DWORD PTR [ebp-0x1c],ebx
6401ea5a:	cmp    DWORD PTR [ebp-0x1c],ebx
6401ea5d:	je     0x6401ea78
6401ea5f:	call   0x640164d6
6401ea64:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ea67:	mov    DWORD PTR [eax],ecx
6401ea69:	call   0x640164c3
6401ea6e:	mov    DWORD PTR [eax],0x9
6401ea74:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401ea78:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ea7f:	call   0x6401ea8d
6401ea84:	mov    eax,DWORD PTR [ebp-0x1c]
6401ea87:	call   0x64015f59
6401ea8c:	ret    
6401ea8d:	push   DWORD PTR [ebp+0x8]
6401ea90:	call   0x6401bf25
6401ea95:	pop    ecx
6401ea96:	ret    
6401ea97:	inc    DWORD PTR ds:0x64039398
6401ea9d:	push   0x1000
6401eaa2:	call   0x64015d2f
6401eaa7:	test   eax,eax
6401eaa9:	pop    ecx
6401eaaa:	mov    ecx,DWORD PTR [esp+0x4]
6401eaae:	mov    DWORD PTR [ecx+0x8],eax
6401eab1:	je     0x6401eac0
6401eab3:	or     DWORD PTR [ecx+0xc],0x8
6401eab7:	mov    DWORD PTR [ecx+0x18],0x1000
6401eabe:	jmp    0x6401ead1
6401eac0:	or     DWORD PTR [ecx+0xc],0x4
6401eac4:	lea    eax,[ecx+0x14]
6401eac7:	mov    DWORD PTR [ecx+0x8],eax
6401eaca:	mov    DWORD PTR [ecx+0x18],0x2
6401ead1:	mov    eax,DWORD PTR [ecx+0x8]
6401ead4:	and    DWORD PTR [ecx+0x4],0x0
6401ead8:	mov    DWORD PTR [ecx],eax
6401eada:	ret    
6401eadb:	mov    eax,DWORD PTR [esp+0x4]
6401eadf:	cmp    eax,0xfffffffe
6401eae2:	jne    0x6401eaf2
6401eae4:	call   0x640164c3
6401eae9:	mov    DWORD PTR [eax],0x9
6401eaef:	xor    eax,eax
6401eaf1:	ret    
6401eaf2:	push   esi
6401eaf3:	xor    esi,esi
6401eaf5:	cmp    eax,esi
6401eaf7:	jl     0x6401eb01
6401eaf9:	cmp    eax,DWORD PTR ds:0x6403ab68
6401eaff:	jb     0x6401eb1d
6401eb01:	call   0x640164c3
6401eb06:	push   esi
6401eb07:	push   esi
6401eb08:	push   esi
6401eb09:	push   esi
6401eb0a:	push   esi
6401eb0b:	mov    DWORD PTR [eax],0x9
6401eb11:	call   0x64013e52
6401eb16:	add    esp,0x14
6401eb19:	xor    eax,eax
6401eb1b:	pop    esi
6401eb1c:	ret    
6401eb1d:	mov    ecx,eax
6401eb1f:	and    eax,0x1f
6401eb22:	sar    ecx,0x5
6401eb25:	mov    ecx,DWORD PTR [ecx*4+0x6403ab80]
6401eb2c:	shl    eax,0x6
6401eb2f:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401eb34:	and    eax,0x40
6401eb37:	pop    esi
6401eb38:	ret    
6401eb39:	mov    eax,ds:0x64037644
6401eb3e:	or     eax,0x1
6401eb41:	xor    ecx,ecx
6401eb43:	cmp    DWORD PTR ds:0x64039888,eax
6401eb49:	sete   cl
6401eb4c:	mov    eax,ecx
6401eb4e:	ret    
6401eb4f:	push   ebp
6401eb50:	mov    ebp,esp
6401eb52:	sub    esp,0x10
6401eb55:	push   ebx
6401eb56:	push   esi
6401eb57:	mov    esi,DWORD PTR [ebp+0xc]
6401eb5a:	xor    ebx,ebx
6401eb5c:	cmp    esi,ebx
6401eb5e:	push   edi
6401eb5f:	mov    edi,DWORD PTR [ebp+0x10]
6401eb62:	jne    0x6401eb75
6401eb64:	cmp    edi,ebx
6401eb66:	jbe    0x6401eb75
6401eb68:	mov    eax,DWORD PTR [ebp+0x8]
6401eb6b:	cmp    eax,ebx
6401eb6d:	je     0x6401eb71
6401eb6f:	mov    DWORD PTR [eax],ebx
6401eb71:	xor    eax,eax
6401eb73:	jmp    0x6401ebf4
6401eb75:	mov    eax,DWORD PTR [ebp+0x8]
6401eb78:	cmp    eax,ebx
6401eb7a:	je     0x6401eb7f
6401eb7c:	or     DWORD PTR [eax],0xffffffff
6401eb7f:	cmp    edi,0x7fffffff
6401eb85:	jbe    0x6401eba2
6401eb87:	call   0x640164c3
6401eb8c:	push   0x16
6401eb8e:	pop    esi
6401eb8f:	push   ebx
6401eb90:	push   ebx
6401eb91:	push   ebx
6401eb92:	push   ebx
6401eb93:	push   ebx
6401eb94:	mov    DWORD PTR [eax],esi
6401eb96:	call   0x64013e52
6401eb9b:	add    esp,0x14
6401eb9e:	mov    eax,esi
6401eba0:	jmp    0x6401ebf4
6401eba2:	push   DWORD PTR [ebp+0x18]
6401eba5:	lea    ecx,[ebp-0x10]
6401eba8:	call   0x64014325
6401ebad:	mov    eax,DWORD PTR [ebp-0x10]
6401ebb0:	cmp    DWORD PTR [eax+0x14],ebx
6401ebb3:	jne    0x6401ec4d
6401ebb9:	mov    ax,WORD PTR [ebp+0x14]
6401ebbd:	cmp    ax,0xff
6401ebc1:	jbe    0x6401ebf9
6401ebc3:	cmp    esi,ebx
6401ebc5:	je     0x6401ebd6
6401ebc7:	cmp    edi,ebx
6401ebc9:	jbe    0x6401ebd6
6401ebcb:	push   edi
6401ebcc:	push   ebx
6401ebcd:	push   esi
6401ebce:	call   0x64015160
6401ebd3:	add    esp,0xc
6401ebd6:	call   0x640164c3
6401ebdb:	mov    DWORD PTR [eax],0x2a
6401ebe1:	call   0x640164c3
6401ebe6:	cmp    BYTE PTR [ebp-0x4],bl
6401ebe9:	mov    eax,DWORD PTR [eax]
6401ebeb:	je     0x6401ebf4
6401ebed:	mov    ecx,DWORD PTR [ebp-0x8]
6401ebf0:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ebf4:	pop    edi
6401ebf5:	pop    esi
6401ebf6:	pop    ebx
6401ebf7:	leave  
6401ebf8:	ret    
6401ebf9:	cmp    esi,ebx
6401ebfb:	je     0x6401ec2b
6401ebfd:	cmp    edi,ebx
6401ebff:	ja     0x6401ec29
6401ec01:	call   0x640164c3
6401ec06:	push   0x22
6401ec08:	pop    esi
6401ec09:	push   ebx
6401ec0a:	push   ebx
6401ec0b:	push   ebx
6401ec0c:	push   ebx
6401ec0d:	push   ebx
6401ec0e:	mov    DWORD PTR [eax],esi
6401ec10:	call   0x64013e52
6401ec15:	add    esp,0x14
6401ec18:	cmp    BYTE PTR [ebp-0x4],bl
6401ec1b:	je     0x6401eb9e
6401ec1d:	mov    eax,DWORD PTR [ebp-0x8]
6401ec20:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ec24:	jmp    0x6401eb9e
6401ec29:	mov    BYTE PTR [esi],al
6401ec2b:	mov    eax,DWORD PTR [ebp+0x8]
6401ec2e:	cmp    eax,ebx
6401ec30:	je     0x6401ec38
6401ec32:	mov    DWORD PTR [eax],0x1
6401ec38:	cmp    BYTE PTR [ebp-0x4],bl
6401ec3b:	je     0x6401eb71
6401ec41:	mov    eax,DWORD PTR [ebp-0x8]
6401ec44:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ec48:	jmp    0x6401eb71
6401ec4d:	lea    ecx,[ebp+0xc]
6401ec50:	push   ecx
6401ec51:	push   ebx
6401ec52:	push   edi
6401ec53:	push   esi
6401ec54:	push   0x1
6401ec56:	lea    ecx,[ebp+0x14]
6401ec59:	push   ecx
6401ec5a:	push   ebx
6401ec5b:	mov    DWORD PTR [ebp+0xc],ebx
6401ec5e:	push   DWORD PTR [eax+0x4]
6401ec61:	call   DWORD PTR ds:0x64024010
6401ec67:	cmp    eax,ebx
6401ec69:	je     0x6401ec7f
6401ec6b:	cmp    DWORD PTR [ebp+0xc],ebx
6401ec6e:	jne    0x6401ebd6
6401ec74:	mov    ecx,DWORD PTR [ebp+0x8]
6401ec77:	cmp    ecx,ebx
6401ec79:	je     0x6401ec38
6401ec7b:	mov    DWORD PTR [ecx],eax
6401ec7d:	jmp    0x6401ec38
6401ec7f:	call   DWORD PTR ds:0x64024064
6401ec85:	cmp    eax,0x7a
6401ec88:	jne    0x6401ebd6
6401ec8e:	cmp    esi,ebx
6401ec90:	je     0x6401ec01
6401ec96:	cmp    edi,ebx
6401ec98:	jbe    0x6401ec01
6401ec9e:	push   edi
6401ec9f:	push   ebx
6401eca0:	push   esi
6401eca1:	call   0x64015160
6401eca6:	add    esp,0xc
6401eca9:	jmp    0x6401ec01
6401ecae:	push   0x0
6401ecb0:	push   DWORD PTR [esp+0x14]
6401ecb4:	push   DWORD PTR [esp+0x14]
6401ecb8:	push   DWORD PTR [esp+0x14]
6401ecbc:	push   DWORD PTR [esp+0x14]
6401ecc0:	call   0x6401eb4f
6401ecc5:	add    esp,0x14
6401ecc8:	ret    
6401ecc9:	push   ebp
6401ecca:	mov    ebp,esp
6401eccc:	sub    esp,0x10
6401eccf:	mov    eax,ds:0x64037644
6401ecd4:	xor    eax,ebp
6401ecd6:	mov    DWORD PTR [ebp-0x4],eax
6401ecd9:	push   esi
6401ecda:	xor    esi,esi
6401ecdc:	cmp    DWORD PTR ds:0x640385a8,esi
6401ece2:	je     0x6401ed32
6401ece4:	cmp    DWORD PTR ds:0x64038954,0xfffffffe
6401eceb:	jne    0x6401ecf2
6401eced:	call   0x6402116f
6401ecf2:	mov    eax,ds:0x64038954
6401ecf7:	cmp    eax,0xffffffff
6401ecfa:	jne    0x6401ed02
6401ecfc:	or     ax,0xffff
6401ed00:	jmp    0x6401ed72
6401ed02:	push   esi
6401ed03:	lea    ecx,[ebp-0x10]
6401ed06:	push   ecx
6401ed07:	push   0x1
6401ed09:	lea    ecx,[ebp+0x8]
6401ed0c:	push   ecx
6401ed0d:	push   eax
6401ed0e:	call   DWORD PTR ds:0x64024120
6401ed14:	test   eax,eax
6401ed16:	jne    0x6401ed7f
6401ed18:	cmp    DWORD PTR ds:0x640385a8,0x2
6401ed1f:	jne    0x6401ecfc
6401ed21:	call   DWORD PTR ds:0x64024064
6401ed27:	cmp    eax,0x78
6401ed2a:	jne    0x6401ecfc
6401ed2c:	mov    DWORD PTR ds:0x640385a8,esi
6401ed32:	push   esi
6401ed33:	push   esi
6401ed34:	push   0x5
6401ed36:	lea    eax,[ebp-0xc]
6401ed39:	push   eax
6401ed3a:	push   0x1
6401ed3c:	lea    eax,[ebp+0x8]
6401ed3f:	push   eax
6401ed40:	push   esi
6401ed41:	call   DWORD PTR ds:0x6402411c
6401ed47:	push   eax
6401ed48:	call   DWORD PTR ds:0x64024010
6401ed4e:	mov    ecx,DWORD PTR ds:0x64038954
6401ed54:	cmp    ecx,0xffffffff
6401ed57:	je     0x6401ecfc
6401ed59:	push   esi
6401ed5a:	lea    edx,[ebp-0x10]
6401ed5d:	push   edx
6401ed5e:	push   eax
6401ed5f:	lea    eax,[ebp-0xc]
6401ed62:	push   eax
6401ed63:	push   ecx
6401ed64:	call   DWORD PTR ds:0x64024118
6401ed6a:	test   eax,eax
6401ed6c:	je     0x6401ecfc
6401ed6e:	mov    ax,WORD PTR [ebp+0x8]
6401ed72:	mov    ecx,DWORD PTR [ebp-0x4]
6401ed75:	xor    ecx,ebp
6401ed77:	pop    esi
6401ed78:	call   0x64013d06
6401ed7d:	leave  
6401ed7e:	ret    
6401ed7f:	mov    DWORD PTR ds:0x640385a8,0x1
6401ed89:	jmp    0x6401ed6e
6401ed8b:	push   ebp
6401ed8c:	mov    ebp,esp
6401ed8e:	sub    esp,0x10
6401ed91:	push   ebx
6401ed92:	push   esi
6401ed93:	mov    esi,DWORD PTR [ebp+0xc]
6401ed96:	xor    ebx,ebx
6401ed98:	cmp    esi,ebx
6401ed9a:	je     0x6401edaf
6401ed9c:	cmp    DWORD PTR [ebp+0x10],ebx
6401ed9f:	je     0x6401edaf
6401eda1:	cmp    BYTE PTR [esi],bl
6401eda3:	jne    0x6401edb5
6401eda5:	mov    eax,DWORD PTR [ebp+0x8]
6401eda8:	cmp    eax,ebx
6401edaa:	je     0x6401edaf
6401edac:	mov    WORD PTR [eax],bx
6401edaf:	xor    eax,eax
6401edb1:	pop    esi
6401edb2:	pop    ebx
6401edb3:	leave  
6401edb4:	ret    
6401edb5:	push   DWORD PTR [ebp+0x14]
6401edb8:	lea    ecx,[ebp-0x10]
6401edbb:	call   0x64014325
6401edc0:	mov    eax,DWORD PTR [ebp-0x10]
6401edc3:	cmp    DWORD PTR [eax+0x14],ebx
6401edc6:	jne    0x6401ede7
6401edc8:	mov    eax,DWORD PTR [ebp+0x8]
6401edcb:	cmp    eax,ebx
6401edcd:	je     0x6401edd6
6401edcf:	movzx  cx,BYTE PTR [esi]
6401edd3:	mov    WORD PTR [eax],cx
6401edd6:	cmp    BYTE PTR [ebp-0x4],bl
6401edd9:	je     0x6401ede2
6401eddb:	mov    eax,DWORD PTR [ebp-0x8]
6401edde:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ede2:	xor    eax,eax
6401ede4:	inc    eax
6401ede5:	jmp    0x6401edb1
6401ede7:	lea    eax,[ebp-0x10]
6401edea:	push   eax
6401edeb:	movzx  eax,BYTE PTR [esi]
6401edee:	push   eax
6401edef:	call   0x64015117
6401edf4:	test   eax,eax
6401edf6:	pop    ecx
6401edf7:	pop    ecx
6401edf8:	je     0x6401ee77
6401edfa:	mov    eax,DWORD PTR [ebp-0x10]
6401edfd:	mov    ecx,DWORD PTR [eax+0xac]
6401ee03:	cmp    ecx,0x1
6401ee06:	jle    0x6401ee2d
6401ee08:	cmp    DWORD PTR [ebp+0x10],ecx
6401ee0b:	jl     0x6401ee2d
6401ee0d:	xor    edx,edx
6401ee0f:	cmp    DWORD PTR [ebp+0x8],ebx
6401ee12:	setne  dl
6401ee15:	push   edx
6401ee16:	push   DWORD PTR [ebp+0x8]
6401ee19:	push   ecx
6401ee1a:	push   esi
6401ee1b:	push   0x9
6401ee1d:	push   DWORD PTR [eax+0x4]
6401ee20:	call   DWORD PTR ds:0x64024028
6401ee26:	test   eax,eax
6401ee28:	mov    eax,DWORD PTR [ebp-0x10]
6401ee2b:	jne    0x6401ee3d
6401ee2d:	mov    ecx,DWORD PTR [ebp+0x10]
6401ee30:	cmp    ecx,DWORD PTR [eax+0xac]
6401ee36:	jb     0x6401ee58
6401ee38:	cmp    BYTE PTR [esi+0x1],bl
6401ee3b:	je     0x6401ee58
6401ee3d:	cmp    BYTE PTR [ebp-0x4],bl
6401ee40:	mov    eax,DWORD PTR [eax+0xac]
6401ee46:	je     0x6401edb1
6401ee4c:	mov    ecx,DWORD PTR [ebp-0x8]
6401ee4f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ee53:	jmp    0x6401edb1
6401ee58:	call   0x640164c3
6401ee5d:	mov    DWORD PTR [eax],0x2a
6401ee63:	cmp    BYTE PTR [ebp-0x4],bl
6401ee66:	je     0x6401ee6f
6401ee68:	mov    eax,DWORD PTR [ebp-0x8]
6401ee6b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ee6f:	or     eax,0xffffffff
6401ee72:	jmp    0x6401edb1
6401ee77:	xor    eax,eax
6401ee79:	cmp    DWORD PTR [ebp+0x8],ebx
6401ee7c:	setne  al
6401ee7f:	push   eax
6401ee80:	push   DWORD PTR [ebp+0x8]
6401ee83:	mov    eax,DWORD PTR [ebp-0x10]
6401ee86:	push   0x1
6401ee88:	push   esi
6401ee89:	push   0x9
6401ee8b:	push   DWORD PTR [eax+0x4]
6401ee8e:	call   DWORD PTR ds:0x64024028
6401ee94:	test   eax,eax
6401ee96:	jne    0x6401edd6
6401ee9c:	jmp    0x6401ee58
6401ee9e:	push   0x0
6401eea0:	push   DWORD PTR [esp+0x10]
6401eea4:	push   DWORD PTR [esp+0x10]
6401eea8:	push   DWORD PTR [esp+0x10]
6401eeac:	call   0x6401ed8b
6401eeb1:	add    esp,0x10
6401eeb4:	ret    
6401eeb5:	push   ebp
6401eeb6:	mov    ebp,esp
6401eeb8:	sub    esp,0x20
6401eebb:	push   ebx
6401eebc:	push   esi
6401eebd:	push   edi
6401eebe:	call   0x64017605
6401eec3:	xor    ebx,ebx
6401eec5:	cmp    DWORD PTR ds:0x6403988c,ebx
6401eecb:	mov    DWORD PTR [ebp-0x8],eax
6401eece:	mov    DWORD PTR [ebp-0x4],ebx
6401eed1:	mov    DWORD PTR [ebp-0xc],ebx
6401eed4:	mov    DWORD PTR [ebp-0x10],ebx
6401eed7:	jne    0x6401ef8b
6401eedd:	push   0x640294d4
6401eee2:	call   DWORD PTR ds:0x640240a4
6401eee8:	mov    edi,eax
6401eeea:	cmp    edi,ebx
6401eeec:	je     0x6401f06b
6401eef2:	mov    esi,DWORD PTR ds:0x64024094
6401eef8:	push   0x640294c8
6401eefd:	push   edi
6401eefe:	call   esi
6401ef00:	cmp    eax,ebx
6401ef02:	je     0x6401f06b
6401ef08:	push   eax
6401ef09:	call   0x64017597
6401ef0e:	mov    DWORD PTR [esp],0x640294b8
6401ef15:	push   edi
6401ef16:	mov    ds:0x6403988c,eax
6401ef1b:	call   esi
6401ef1d:	push   eax
6401ef1e:	call   0x64017597
6401ef23:	mov    DWORD PTR [esp],0x640294a4
6401ef2a:	push   edi
6401ef2b:	mov    ds:0x64039890,eax
6401ef30:	call   esi
6401ef32:	push   eax
6401ef33:	call   0x64017597
6401ef38:	mov    ds:0x64039894,eax
6401ef3d:	lea    eax,[ebp-0xc]
6401ef40:	push   eax
6401ef41:	call   0x64017ebf
6401ef46:	test   eax,eax
6401ef48:	pop    ecx
6401ef49:	pop    ecx
6401ef4a:	je     0x6401ef59
6401ef4c:	push   ebx
6401ef4d:	push   ebx
6401ef4e:	push   ebx
6401ef4f:	push   ebx
6401ef50:	push   ebx
6401ef51:	call   0x64013d56
6401ef56:	add    esp,0x14
6401ef59:	cmp    DWORD PTR [ebp-0xc],0x2
6401ef5d:	jne    0x6401ef8b
6401ef5f:	push   0x64029488
6401ef64:	push   edi
6401ef65:	call   esi
6401ef67:	push   eax
6401ef68:	call   0x64017597
6401ef6d:	cmp    eax,ebx
6401ef6f:	pop    ecx
6401ef70:	mov    ds:0x6403989c,eax
6401ef75:	je     0x6401ef8b
6401ef77:	push   0x64029470
6401ef7c:	push   edi
6401ef7d:	call   esi
6401ef7f:	push   eax
6401ef80:	call   0x64017597
6401ef85:	pop    ecx
6401ef86:	mov    ds:0x64039898,eax
6401ef8b:	mov    eax,ds:0x64039898
6401ef90:	mov    ecx,DWORD PTR [ebp-0x8]
6401ef93:	cmp    eax,ecx
6401ef95:	je     0x6401f010
6401ef97:	cmp    DWORD PTR ds:0x6403989c,ecx
6401ef9d:	je     0x6401f010
6401ef9f:	push   eax
6401efa0:	call   0x6401760e
6401efa5:	push   DWORD PTR ds:0x6403989c
6401efab:	mov    esi,eax
6401efad:	call   0x6401760e
6401efb2:	cmp    esi,ebx
6401efb4:	pop    ecx
6401efb5:	pop    ecx
6401efb6:	mov    edi,eax
6401efb8:	je     0x6401f010
6401efba:	cmp    edi,ebx
6401efbc:	je     0x6401f010
6401efbe:	call   esi
6401efc0:	cmp    eax,ebx
6401efc2:	je     0x6401efdd
6401efc4:	lea    ecx,[ebp-0x14]
6401efc7:	push   ecx
6401efc8:	push   0xc
6401efca:	lea    ecx,[ebp-0x20]
6401efcd:	push   ecx
6401efce:	push   0x1
6401efd0:	push   eax
6401efd1:	call   edi
6401efd3:	test   eax,eax
6401efd5:	je     0x6401efdd
6401efd7:	test   BYTE PTR [ebp-0x18],0x1
6401efdb:	jne    0x6401f010
6401efdd:	lea    eax,[ebp-0x10]
6401efe0:	push   eax
6401efe1:	call   0x64017ef6
6401efe6:	test   eax,eax
6401efe8:	pop    ecx
6401efe9:	je     0x6401eff8
6401efeb:	push   ebx
6401efec:	push   ebx
6401efed:	push   ebx
6401efee:	push   ebx
6401efef:	push   ebx
6401eff0:	call   0x64013d56
6401eff5:	add    esp,0x14
6401eff8:	cmp    DWORD PTR [ebp-0x10],0x4
6401effc:	jb     0x6401f007
6401effe:	or     DWORD PTR [ebp+0x10],0x200000
6401f005:	jmp    0x6401f04b
6401f007:	or     DWORD PTR [ebp+0x10],0x40000
6401f00e:	jmp    0x6401f04b
6401f010:	mov    eax,ds:0x64039890
6401f015:	cmp    eax,DWORD PTR [ebp-0x8]
6401f018:	je     0x6401f04b
6401f01a:	push   eax
6401f01b:	call   0x6401760e
6401f020:	cmp    eax,ebx
6401f022:	pop    ecx
6401f023:	je     0x6401f04b
6401f025:	call   eax
6401f027:	cmp    eax,ebx
6401f029:	mov    DWORD PTR [ebp-0x4],eax
6401f02c:	je     0x6401f04b
6401f02e:	mov    eax,ds:0x64039894
6401f033:	cmp    eax,DWORD PTR [ebp-0x8]
6401f036:	je     0x6401f04b
6401f038:	push   eax
6401f039:	call   0x6401760e
6401f03e:	cmp    eax,ebx
6401f040:	pop    ecx
6401f041:	je     0x6401f04b
6401f043:	push   DWORD PTR [ebp-0x4]
6401f046:	call   eax
6401f048:	mov    DWORD PTR [ebp-0x4],eax
6401f04b:	push   DWORD PTR ds:0x6403988c
6401f051:	call   0x6401760e
6401f056:	cmp    eax,ebx
6401f058:	pop    ecx
6401f059:	je     0x6401f06b
6401f05b:	push   DWORD PTR [ebp+0x10]
6401f05e:	push   DWORD PTR [ebp+0xc]
6401f061:	push   DWORD PTR [ebp+0x8]
6401f064:	push   DWORD PTR [ebp-0x4]
6401f067:	call   eax
6401f069:	jmp    0x6401f06d
6401f06b:	xor    eax,eax
6401f06d:	pop    edi
6401f06e:	pop    esi
6401f06f:	pop    ebx
6401f070:	leave  
6401f071:	ret    
6401f072:	mov    ecx,DWORD PTR [esp+0x4]
6401f076:	push   esi
6401f077:	xor    esi,esi
6401f079:	cmp    ecx,esi
6401f07b:	jl     0x6401f09b
6401f07d:	cmp    ecx,0x2
6401f080:	jle    0x6401f08e
6401f082:	cmp    ecx,0x3
6401f085:	jne    0x6401f09b
6401f087:	mov    eax,ds:0x64038ea0
6401f08c:	pop    esi
6401f08d:	ret    
6401f08e:	mov    eax,ds:0x64038ea0
6401f093:	mov    DWORD PTR ds:0x64038ea0,ecx
6401f099:	pop    esi
6401f09a:	ret    
6401f09b:	call   0x640164c3
6401f0a0:	push   esi
6401f0a1:	push   esi
6401f0a2:	push   esi
6401f0a3:	push   esi
6401f0a4:	push   esi
6401f0a5:	mov    DWORD PTR [eax],0x16
6401f0ab:	call   0x64013e52
6401f0b0:	add    esp,0x14
6401f0b3:	or     eax,0xffffffff
6401f0b6:	pop    esi
6401f0b7:	ret    
6401f0b8:	push   ebp
6401f0b9:	mov    ebp,esp
6401f0bb:	sub    esp,0x2c
6401f0be:	mov    eax,DWORD PTR [ebp+0x8]
6401f0c1:	movzx  ecx,WORD PTR [eax+0xa]
6401f0c5:	push   ebx
6401f0c6:	mov    ebx,ecx
6401f0c8:	and    ecx,0x8000
6401f0ce:	mov    DWORD PTR [ebp-0x14],ecx
6401f0d1:	mov    ecx,DWORD PTR [eax+0x6]
6401f0d4:	mov    DWORD PTR [ebp-0x20],ecx
6401f0d7:	mov    ecx,DWORD PTR [eax+0x2]
6401f0da:	movzx  eax,WORD PTR [eax]
6401f0dd:	and    ebx,0x7fff
6401f0e3:	sub    ebx,0x3fff
6401f0e9:	shl    eax,0x10
6401f0ec:	cmp    ebx,0xffffc001
6401f0f2:	push   edi
6401f0f3:	mov    DWORD PTR [ebp-0x1c],ecx
6401f0f6:	mov    DWORD PTR [ebp-0x18],eax
6401f0f9:	jne    0x6401f122
6401f0fb:	xor    ebx,ebx
6401f0fd:	xor    eax,eax
6401f0ff:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f103:	jne    0x6401f112
6401f105:	inc    eax
6401f106:	cmp    eax,0x3
6401f109:	jl     0x6401f0ff
6401f10b:	xor    eax,eax
6401f10d:	jmp    0x6401f5b7
6401f112:	xor    eax,eax
6401f114:	lea    edi,[ebp-0x20]
6401f117:	stos   DWORD PTR es:[edi],eax
6401f118:	stos   DWORD PTR es:[edi],eax
6401f119:	push   0x2
6401f11b:	stos   DWORD PTR es:[edi],eax
6401f11c:	pop    eax
6401f11d:	jmp    0x6401f5b7
6401f122:	and    DWORD PTR [ebp+0x8],0x0
6401f126:	push   esi
6401f127:	lea    esi,[ebp-0x20]
6401f12a:	lea    edi,[ebp-0x2c]
6401f12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f130:	mov    esi,DWORD PTR ds:0x640385b4
6401f136:	dec    esi
6401f137:	lea    ecx,[esi+0x1]
6401f13a:	mov    eax,ecx
6401f13c:	cdq    
6401f13d:	and    edx,0x1f
6401f140:	add    eax,edx
6401f142:	sar    eax,0x5
6401f145:	mov    edx,ecx
6401f147:	and    edx,0x8000001f
6401f14d:	mov    DWORD PTR [ebp-0x10],ebx
6401f150:	mov    DWORD PTR [ebp-0xc],eax
6401f153:	jns    0x6401f15a
6401f155:	dec    edx
6401f156:	or     edx,0xffffffe0
6401f159:	inc    edx
6401f15a:	lea    edi,[ebp+eax*4-0x20]
6401f15e:	push   0x1f
6401f160:	xor    eax,eax
6401f162:	pop    ecx
6401f163:	sub    ecx,edx
6401f165:	inc    eax
6401f166:	shl    eax,cl
6401f168:	mov    DWORD PTR [ebp-0x8],ecx
6401f16b:	test   DWORD PTR [edi],eax
6401f16d:	je     0x6401f200
6401f173:	mov    eax,DWORD PTR [ebp-0xc]
6401f176:	or     edx,0xffffffff
6401f179:	shl    edx,cl
6401f17b:	not    edx
6401f17d:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f181:	jmp    0x6401f188
6401f183:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f188:	jne    0x6401f192
6401f18a:	inc    eax
6401f18b:	cmp    eax,0x3
6401f18e:	jl     0x6401f183
6401f190:	jmp    0x6401f200
6401f192:	mov    eax,esi
6401f194:	cdq    
6401f195:	push   0x1f
6401f197:	pop    ecx
6401f198:	and    edx,ecx
6401f19a:	add    eax,edx
6401f19c:	sar    eax,0x5
6401f19f:	and    esi,0x8000001f
6401f1a5:	jns    0x6401f1ac
6401f1a7:	dec    esi
6401f1a8:	or     esi,0xffffffe0
6401f1ab:	inc    esi
6401f1ac:	and    DWORD PTR [ebp-0x4],0x0
6401f1b0:	sub    ecx,esi
6401f1b2:	xor    edx,edx
6401f1b4:	inc    edx
6401f1b5:	shl    edx,cl
6401f1b7:	lea    ecx,[ebp+eax*4-0x20]
6401f1bb:	mov    esi,DWORD PTR [ecx]
6401f1bd:	add    esi,edx
6401f1bf:	mov    DWORD PTR [ebp+0x8],esi
6401f1c2:	mov    esi,DWORD PTR [ecx]
6401f1c4:	cmp    DWORD PTR [ebp+0x8],esi
6401f1c7:	jb     0x6401f1eb
6401f1c9:	cmp    DWORD PTR [ebp+0x8],edx
6401f1cc:	jmp    0x6401f1e9
6401f1ce:	test   ecx,ecx
6401f1d0:	je     0x6401f1fd
6401f1d2:	and    DWORD PTR [ebp-0x4],0x0
6401f1d6:	lea    ecx,[ebp+eax*4-0x20]
6401f1da:	mov    edx,DWORD PTR [ecx]
6401f1dc:	lea    esi,[edx+0x1]
6401f1df:	cmp    esi,edx
6401f1e1:	mov    DWORD PTR [ebp+0x8],esi
6401f1e4:	jb     0x6401f1eb
6401f1e6:	cmp    esi,0x1
6401f1e9:	jae    0x6401f1f2
6401f1eb:	mov    DWORD PTR [ebp-0x4],0x1
6401f1f2:	dec    eax
6401f1f3:	mov    edx,DWORD PTR [ebp+0x8]
6401f1f6:	mov    DWORD PTR [ecx],edx
6401f1f8:	mov    ecx,DWORD PTR [ebp-0x4]
6401f1fb:	jns    0x6401f1ce
6401f1fd:	mov    DWORD PTR [ebp+0x8],ecx
6401f200:	mov    ecx,DWORD PTR [ebp-0x8]
6401f203:	or     eax,0xffffffff
6401f206:	shl    eax,cl
6401f208:	and    DWORD PTR [edi],eax
6401f20a:	mov    eax,DWORD PTR [ebp-0xc]
6401f20d:	inc    eax
6401f20e:	cmp    eax,0x3
6401f211:	jge    0x6401f220
6401f213:	push   0x3
6401f215:	pop    ecx
6401f216:	lea    edi,[ebp+eax*4-0x20]
6401f21a:	sub    ecx,eax
6401f21c:	xor    eax,eax
6401f21e:	rep stos DWORD PTR es:[edi],eax
6401f220:	cmp    DWORD PTR [ebp+0x8],0x0
6401f224:	je     0x6401f227
6401f226:	inc    ebx
6401f227:	mov    eax,ds:0x640385b0
6401f22c:	mov    ecx,eax
6401f22e:	sub    ecx,DWORD PTR ds:0x640385b4
6401f234:	cmp    ebx,ecx
6401f236:	jge    0x6401f245
6401f238:	xor    eax,eax
6401f23a:	lea    edi,[ebp-0x20]
6401f23d:	stos   DWORD PTR es:[edi],eax
6401f23e:	stos   DWORD PTR es:[edi],eax
6401f23f:	stos   DWORD PTR es:[edi],eax
6401f240:	jmp    0x6401f452
6401f245:	cmp    ebx,eax
6401f247:	jg     0x6401f45c
6401f24d:	sub    eax,DWORD PTR [ebp-0x10]
6401f250:	lea    esi,[ebp-0x2c]
6401f253:	mov    ecx,eax
6401f255:	lea    edi,[ebp-0x20]
6401f258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f259:	cdq    
6401f25a:	and    edx,0x1f
6401f25d:	add    eax,edx
6401f25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f260:	mov    edx,ecx
6401f262:	sar    eax,0x5
6401f265:	and    edx,0x8000001f
6401f26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f26c:	jns    0x6401f273
6401f26e:	dec    edx
6401f26f:	or     edx,0xffffffe0
6401f272:	inc    edx
6401f273:	and    DWORD PTR [ebp-0xc],0x0
6401f277:	and    DWORD PTR [ebp+0x8],0x0
6401f27b:	or     edi,0xffffffff
6401f27e:	mov    ecx,edx
6401f280:	shl    edi,cl
6401f282:	mov    DWORD PTR [ebp-0x4],0x20
6401f289:	sub    DWORD PTR [ebp-0x4],edx
6401f28c:	not    edi
6401f28e:	mov    ebx,DWORD PTR [ebp+0x8]
6401f291:	lea    ebx,[ebp+ebx*4-0x20]
6401f295:	mov    esi,DWORD PTR [ebx]
6401f297:	mov    ecx,esi
6401f299:	and    ecx,edi
6401f29b:	mov    DWORD PTR [ebp-0x10],ecx
6401f29e:	mov    ecx,edx
6401f2a0:	shr    esi,cl
6401f2a2:	mov    ecx,DWORD PTR [ebp-0x4]
6401f2a5:	or     esi,DWORD PTR [ebp-0xc]
6401f2a8:	mov    DWORD PTR [ebx],esi
6401f2aa:	mov    esi,DWORD PTR [ebp-0x10]
6401f2ad:	shl    esi,cl
6401f2af:	inc    DWORD PTR [ebp+0x8]
6401f2b2:	cmp    DWORD PTR [ebp+0x8],0x3
6401f2b6:	mov    DWORD PTR [ebp-0xc],esi
6401f2b9:	jl     0x6401f28e
6401f2bb:	mov    esi,eax
6401f2bd:	push   0x2
6401f2bf:	shl    esi,0x2
6401f2c2:	lea    ecx,[ebp-0x18]
6401f2c5:	pop    edx
6401f2c6:	sub    ecx,esi
6401f2c8:	cmp    edx,eax
6401f2ca:	jl     0x6401f2d4
6401f2cc:	mov    esi,DWORD PTR [ecx]
6401f2ce:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f2d2:	jmp    0x6401f2d9
6401f2d4:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f2d9:	dec    edx
6401f2da:	sub    ecx,0x4
6401f2dd:	test   edx,edx
6401f2df:	jge    0x6401f2c8
6401f2e1:	mov    esi,DWORD PTR ds:0x640385b4
6401f2e7:	dec    esi
6401f2e8:	lea    ecx,[esi+0x1]
6401f2eb:	mov    eax,ecx
6401f2ed:	cdq    
6401f2ee:	and    edx,0x1f
6401f2f1:	add    eax,edx
6401f2f3:	sar    eax,0x5
6401f2f6:	mov    edx,ecx
6401f2f8:	and    edx,0x8000001f
6401f2fe:	mov    DWORD PTR [ebp-0xc],eax
6401f301:	jns    0x6401f308
6401f303:	dec    edx
6401f304:	or     edx,0xffffffe0
6401f307:	inc    edx
6401f308:	push   0x1f
6401f30a:	pop    ecx
6401f30b:	sub    ecx,edx
6401f30d:	xor    edx,edx
6401f30f:	inc    edx
6401f310:	shl    edx,cl
6401f312:	lea    ebx,[ebp+eax*4-0x20]
6401f316:	mov    DWORD PTR [ebp-0x10],ecx
6401f319:	test   DWORD PTR [ebx],edx
6401f31b:	je     0x6401f3a3
6401f321:	or     edx,0xffffffff
6401f324:	shl    edx,cl
6401f326:	not    edx
6401f328:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f32c:	jmp    0x6401f333
6401f32e:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f333:	jne    0x6401f33d
6401f335:	inc    eax
6401f336:	cmp    eax,0x3
6401f339:	jl     0x6401f32e
6401f33b:	jmp    0x6401f3a3
6401f33d:	mov    eax,esi
6401f33f:	cdq    
6401f340:	push   0x1f
6401f342:	pop    ecx
6401f343:	and    edx,ecx
6401f345:	add    eax,edx
6401f347:	sar    eax,0x5
6401f34a:	and    esi,0x8000001f
6401f350:	jns    0x6401f357
6401f352:	dec    esi
6401f353:	or     esi,0xffffffe0
6401f356:	inc    esi
6401f357:	and    DWORD PTR [ebp+0x8],0x0
6401f35b:	xor    edx,edx
6401f35d:	sub    ecx,esi
6401f35f:	inc    edx
6401f360:	shl    edx,cl
6401f362:	lea    ecx,[ebp+eax*4-0x20]
6401f366:	mov    esi,DWORD PTR [ecx]
6401f368:	lea    edi,[esi+edx*1]
6401f36b:	cmp    edi,esi
6401f36d:	jb     0x6401f373
6401f36f:	cmp    edi,edx
6401f371:	jae    0x6401f37a
6401f373:	mov    DWORD PTR [ebp+0x8],0x1
6401f37a:	mov    DWORD PTR [ecx],edi
6401f37c:	mov    ecx,DWORD PTR [ebp+0x8]
6401f37f:	jmp    0x6401f3a0
6401f381:	test   ecx,ecx
6401f383:	je     0x6401f3a3
6401f385:	lea    ecx,[ebp+eax*4-0x20]
6401f389:	mov    edx,DWORD PTR [ecx]
6401f38b:	lea    esi,[edx+0x1]
6401f38e:	xor    edi,edi
6401f390:	cmp    esi,edx
6401f392:	jb     0x6401f399
6401f394:	cmp    esi,0x1
6401f397:	jae    0x6401f39c
6401f399:	xor    edi,edi
6401f39b:	inc    edi
6401f39c:	mov    DWORD PTR [ecx],esi
6401f39e:	mov    ecx,edi
6401f3a0:	dec    eax
6401f3a1:	jns    0x6401f381
6401f3a3:	mov    ecx,DWORD PTR [ebp-0x10]
6401f3a6:	or     eax,0xffffffff
6401f3a9:	shl    eax,cl
6401f3ab:	and    DWORD PTR [ebx],eax
6401f3ad:	mov    eax,DWORD PTR [ebp-0xc]
6401f3b0:	inc    eax
6401f3b1:	cmp    eax,0x3
6401f3b4:	jge    0x6401f3c3
6401f3b6:	push   0x3
6401f3b8:	pop    ecx
6401f3b9:	lea    edi,[ebp+eax*4-0x20]
6401f3bd:	sub    ecx,eax
6401f3bf:	xor    eax,eax
6401f3c1:	rep stos DWORD PTR es:[edi],eax
6401f3c3:	mov    ecx,DWORD PTR ds:0x640385b8
6401f3c9:	inc    ecx
6401f3ca:	mov    eax,ecx
6401f3cc:	cdq    
6401f3cd:	and    edx,0x1f
6401f3d0:	add    eax,edx
6401f3d2:	mov    edx,ecx
6401f3d4:	sar    eax,0x5
6401f3d7:	and    edx,0x8000001f
6401f3dd:	jns    0x6401f3e4
6401f3df:	dec    edx
6401f3e0:	or     edx,0xffffffe0
6401f3e3:	inc    edx
6401f3e4:	and    DWORD PTR [ebp-0xc],0x0
6401f3e8:	and    DWORD PTR [ebp+0x8],0x0
6401f3ec:	or     edi,0xffffffff
6401f3ef:	mov    ecx,edx
6401f3f1:	shl    edi,cl
6401f3f3:	mov    DWORD PTR [ebp-0x4],0x20
6401f3fa:	sub    DWORD PTR [ebp-0x4],edx
6401f3fd:	not    edi
6401f3ff:	mov    ebx,DWORD PTR [ebp+0x8]
6401f402:	lea    ebx,[ebp+ebx*4-0x20]
6401f406:	mov    esi,DWORD PTR [ebx]
6401f408:	mov    ecx,esi
6401f40a:	and    ecx,edi
6401f40c:	mov    DWORD PTR [ebp-0x10],ecx
6401f40f:	mov    ecx,edx
6401f411:	shr    esi,cl
6401f413:	mov    ecx,DWORD PTR [ebp-0x4]
6401f416:	or     esi,DWORD PTR [ebp-0xc]
6401f419:	mov    DWORD PTR [ebx],esi
6401f41b:	mov    esi,DWORD PTR [ebp-0x10]
6401f41e:	shl    esi,cl
6401f420:	inc    DWORD PTR [ebp+0x8]
6401f423:	cmp    DWORD PTR [ebp+0x8],0x3
6401f427:	mov    DWORD PTR [ebp-0xc],esi
6401f42a:	jl     0x6401f3ff
6401f42c:	mov    esi,eax
6401f42e:	push   0x2
6401f430:	shl    esi,0x2
6401f433:	lea    ecx,[ebp-0x18]
6401f436:	pop    edx
6401f437:	sub    ecx,esi
6401f439:	cmp    edx,eax
6401f43b:	jl     0x6401f445
6401f43d:	mov    esi,DWORD PTR [ecx]
6401f43f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f443:	jmp    0x6401f44a
6401f445:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f44a:	dec    edx
6401f44b:	sub    ecx,0x4
6401f44e:	test   edx,edx
6401f450:	jge    0x6401f439
6401f452:	push   0x2
6401f454:	xor    ebx,ebx
6401f456:	pop    eax
6401f457:	jmp    0x6401f5b6
6401f45c:	cmp    ebx,DWORD PTR ds:0x640385ac
6401f462:	mov    ecx,DWORD PTR ds:0x640385b8
6401f468:	jl     0x6401f51b
6401f46e:	xor    eax,eax
6401f470:	lea    edi,[ebp-0x20]
6401f473:	stos   DWORD PTR es:[edi],eax
6401f474:	stos   DWORD PTR es:[edi],eax
6401f475:	stos   DWORD PTR es:[edi],eax
6401f476:	or     DWORD PTR [ebp-0x20],0x80000000
6401f47d:	mov    eax,ecx
6401f47f:	cdq    
6401f480:	and    edx,0x1f
6401f483:	add    eax,edx
6401f485:	mov    edx,ecx
6401f487:	sar    eax,0x5
6401f48a:	and    edx,0x8000001f
6401f490:	jns    0x6401f497
6401f492:	dec    edx
6401f493:	or     edx,0xffffffe0
6401f496:	inc    edx
6401f497:	and    DWORD PTR [ebp-0xc],0x0
6401f49b:	and    DWORD PTR [ebp+0x8],0x0
6401f49f:	or     edi,0xffffffff
6401f4a2:	mov    ecx,edx
6401f4a4:	shl    edi,cl
6401f4a6:	mov    DWORD PTR [ebp-0x4],0x20
6401f4ad:	sub    DWORD PTR [ebp-0x4],edx
6401f4b0:	not    edi
6401f4b2:	mov    ebx,DWORD PTR [ebp+0x8]
6401f4b5:	lea    ebx,[ebp+ebx*4-0x20]
6401f4b9:	mov    esi,DWORD PTR [ebx]
6401f4bb:	mov    ecx,esi
6401f4bd:	and    ecx,edi
6401f4bf:	mov    DWORD PTR [ebp-0x10],ecx
6401f4c2:	mov    ecx,edx
6401f4c4:	shr    esi,cl
6401f4c6:	mov    ecx,DWORD PTR [ebp-0x4]
6401f4c9:	or     esi,DWORD PTR [ebp-0xc]
6401f4cc:	mov    DWORD PTR [ebx],esi
6401f4ce:	mov    esi,DWORD PTR [ebp-0x10]
6401f4d1:	shl    esi,cl
6401f4d3:	inc    DWORD PTR [ebp+0x8]
6401f4d6:	cmp    DWORD PTR [ebp+0x8],0x3
6401f4da:	mov    DWORD PTR [ebp-0xc],esi
6401f4dd:	jl     0x6401f4b2
6401f4df:	mov    esi,eax
6401f4e1:	push   0x2
6401f4e3:	shl    esi,0x2
6401f4e6:	lea    ecx,[ebp-0x18]
6401f4e9:	pop    edx
6401f4ea:	sub    ecx,esi
6401f4ec:	cmp    edx,eax
6401f4ee:	jl     0x6401f4f8
6401f4f0:	mov    esi,DWORD PTR [ecx]
6401f4f2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f4f6:	jmp    0x6401f4fd
6401f4f8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f4fd:	dec    edx
6401f4fe:	sub    ecx,0x4
6401f501:	test   edx,edx
6401f503:	jge    0x6401f4ec
6401f505:	mov    eax,ds:0x640385ac
6401f50a:	mov    ecx,DWORD PTR ds:0x640385c0
6401f510:	lea    ebx,[ecx+eax*1]
6401f513:	xor    eax,eax
6401f515:	inc    eax
6401f516:	jmp    0x6401f5b6
6401f51b:	mov    eax,ds:0x640385c0
6401f520:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401f527:	add    ebx,eax
6401f529:	mov    eax,ecx
6401f52b:	cdq    
6401f52c:	and    edx,0x1f
6401f52f:	add    eax,edx
6401f531:	mov    edx,ecx
6401f533:	sar    eax,0x5
6401f536:	and    edx,0x8000001f
6401f53c:	jns    0x6401f543
6401f53e:	dec    edx
6401f53f:	or     edx,0xffffffe0
6401f542:	inc    edx
6401f543:	and    DWORD PTR [ebp-0xc],0x0
6401f547:	and    DWORD PTR [ebp+0x8],0x0
6401f54b:	or     esi,0xffffffff
6401f54e:	mov    ecx,edx
6401f550:	shl    esi,cl
6401f552:	mov    DWORD PTR [ebp-0x4],0x20
6401f559:	sub    DWORD PTR [ebp-0x4],edx
6401f55c:	not    esi
6401f55e:	mov    ecx,DWORD PTR [ebp+0x8]
6401f561:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401f565:	mov    ecx,edi
6401f567:	and    ecx,esi
6401f569:	mov    DWORD PTR [ebp-0x10],ecx
6401f56c:	mov    ecx,edx
6401f56e:	shr    edi,cl
6401f570:	mov    ecx,DWORD PTR [ebp+0x8]
6401f573:	or     edi,DWORD PTR [ebp-0xc]
6401f576:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401f57a:	mov    edi,DWORD PTR [ebp-0x10]
6401f57d:	mov    ecx,DWORD PTR [ebp-0x4]
6401f580:	shl    edi,cl
6401f582:	inc    DWORD PTR [ebp+0x8]
6401f585:	cmp    DWORD PTR [ebp+0x8],0x3
6401f589:	mov    DWORD PTR [ebp-0xc],edi
6401f58c:	jl     0x6401f55e
6401f58e:	mov    esi,eax
6401f590:	push   0x2
6401f592:	shl    esi,0x2
6401f595:	lea    ecx,[ebp-0x18]
6401f598:	pop    edx
6401f599:	sub    ecx,esi
6401f59b:	cmp    edx,eax
6401f59d:	jl     0x6401f5a7
6401f59f:	mov    esi,DWORD PTR [ecx]
6401f5a1:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f5a5:	jmp    0x6401f5ac
6401f5a7:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f5ac:	dec    edx
6401f5ad:	sub    ecx,0x4
6401f5b0:	test   edx,edx
6401f5b2:	jge    0x6401f59b
6401f5b4:	xor    eax,eax
6401f5b6:	pop    esi
6401f5b7:	push   0x1f
6401f5b9:	pop    ecx
6401f5ba:	sub    ecx,DWORD PTR ds:0x640385b8
6401f5c0:	shl    ebx,cl
6401f5c2:	mov    ecx,DWORD PTR [ebp-0x14]
6401f5c5:	neg    ecx
6401f5c7:	sbb    ecx,ecx
6401f5c9:	and    ecx,0x80000000
6401f5cf:	or     ebx,ecx
6401f5d1:	mov    ecx,DWORD PTR ds:0x640385bc
6401f5d7:	or     ebx,DWORD PTR [ebp-0x20]
6401f5da:	cmp    ecx,0x40
6401f5dd:	jne    0x6401f5ec
6401f5df:	mov    ecx,DWORD PTR [ebp+0xc]
6401f5e2:	mov    edx,DWORD PTR [ebp-0x1c]
6401f5e5:	mov    DWORD PTR [ecx+0x4],ebx
6401f5e8:	mov    DWORD PTR [ecx],edx
6401f5ea:	jmp    0x6401f5f6
6401f5ec:	cmp    ecx,0x20
6401f5ef:	jne    0x6401f5f6
6401f5f1:	mov    ecx,DWORD PTR [ebp+0xc]
6401f5f4:	mov    DWORD PTR [ecx],ebx
6401f5f6:	pop    edi
6401f5f7:	pop    ebx
6401f5f8:	leave  
6401f5f9:	ret    
6401f5fa:	push   ebp
6401f5fb:	mov    ebp,esp
6401f5fd:	sub    esp,0x2c
6401f600:	mov    eax,DWORD PTR [ebp+0x8]
6401f603:	movzx  ecx,WORD PTR [eax+0xa]
6401f607:	push   ebx
6401f608:	mov    ebx,ecx
6401f60a:	and    ecx,0x8000
6401f610:	mov    DWORD PTR [ebp-0x14],ecx
6401f613:	mov    ecx,DWORD PTR [eax+0x6]
6401f616:	mov    DWORD PTR [ebp-0x20],ecx
6401f619:	mov    ecx,DWORD PTR [eax+0x2]
6401f61c:	movzx  eax,WORD PTR [eax]
6401f61f:	and    ebx,0x7fff
6401f625:	sub    ebx,0x3fff
6401f62b:	shl    eax,0x10
6401f62e:	cmp    ebx,0xffffc001
6401f634:	push   edi
6401f635:	mov    DWORD PTR [ebp-0x1c],ecx
6401f638:	mov    DWORD PTR [ebp-0x18],eax
6401f63b:	jne    0x6401f664
6401f63d:	xor    ebx,ebx
6401f63f:	xor    eax,eax
6401f641:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f645:	jne    0x6401f654
6401f647:	inc    eax
6401f648:	cmp    eax,0x3
6401f64b:	jl     0x6401f641
6401f64d:	xor    eax,eax
6401f64f:	jmp    0x6401faf9
6401f654:	xor    eax,eax
6401f656:	lea    edi,[ebp-0x20]
6401f659:	stos   DWORD PTR es:[edi],eax
6401f65a:	stos   DWORD PTR es:[edi],eax
6401f65b:	push   0x2
6401f65d:	stos   DWORD PTR es:[edi],eax
6401f65e:	pop    eax
6401f65f:	jmp    0x6401faf9
6401f664:	and    DWORD PTR [ebp+0x8],0x0
6401f668:	push   esi
6401f669:	lea    esi,[ebp-0x20]
6401f66c:	lea    edi,[ebp-0x2c]
6401f66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f672:	mov    esi,DWORD PTR ds:0x640385cc
6401f678:	dec    esi
6401f679:	lea    ecx,[esi+0x1]
6401f67c:	mov    eax,ecx
6401f67e:	cdq    
6401f67f:	and    edx,0x1f
6401f682:	add    eax,edx
6401f684:	sar    eax,0x5
6401f687:	mov    edx,ecx
6401f689:	and    edx,0x8000001f
6401f68f:	mov    DWORD PTR [ebp-0x10],ebx
6401f692:	mov    DWORD PTR [ebp-0xc],eax
6401f695:	jns    0x6401f69c
6401f697:	dec    edx
6401f698:	or     edx,0xffffffe0
6401f69b:	inc    edx
6401f69c:	lea    edi,[ebp+eax*4-0x20]
6401f6a0:	push   0x1f
6401f6a2:	xor    eax,eax
6401f6a4:	pop    ecx
6401f6a5:	sub    ecx,edx
6401f6a7:	inc    eax
6401f6a8:	shl    eax,cl
6401f6aa:	mov    DWORD PTR [ebp-0x8],ecx
6401f6ad:	test   DWORD PTR [edi],eax
6401f6af:	je     0x6401f742
6401f6b5:	mov    eax,DWORD PTR [ebp-0xc]
6401f6b8:	or     edx,0xffffffff
6401f6bb:	shl    edx,cl
6401f6bd:	not    edx
6401f6bf:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f6c3:	jmp    0x6401f6ca
6401f6c5:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f6ca:	jne    0x6401f6d4
6401f6cc:	inc    eax
6401f6cd:	cmp    eax,0x3
6401f6d0:	jl     0x6401f6c5
6401f6d2:	jmp    0x6401f742
6401f6d4:	mov    eax,esi
6401f6d6:	cdq    
6401f6d7:	push   0x1f
6401f6d9:	pop    ecx
6401f6da:	and    edx,ecx
6401f6dc:	add    eax,edx
6401f6de:	sar    eax,0x5
6401f6e1:	and    esi,0x8000001f
6401f6e7:	jns    0x6401f6ee
6401f6e9:	dec    esi
6401f6ea:	or     esi,0xffffffe0
6401f6ed:	inc    esi
6401f6ee:	and    DWORD PTR [ebp-0x4],0x0
6401f6f2:	sub    ecx,esi
6401f6f4:	xor    edx,edx
6401f6f6:	inc    edx
6401f6f7:	shl    edx,cl
6401f6f9:	lea    ecx,[ebp+eax*4-0x20]
6401f6fd:	mov    esi,DWORD PTR [ecx]
6401f6ff:	add    esi,edx
6401f701:	mov    DWORD PTR [ebp+0x8],esi
6401f704:	mov    esi,DWORD PTR [ecx]
6401f706:	cmp    DWORD PTR [ebp+0x8],esi
6401f709:	jb     0x6401f72d
6401f70b:	cmp    DWORD PTR [ebp+0x8],edx
6401f70e:	jmp    0x6401f72b
6401f710:	test   ecx,ecx
6401f712:	je     0x6401f73f
6401f714:	and    DWORD PTR [ebp-0x4],0x0
6401f718:	lea    ecx,[ebp+eax*4-0x20]
6401f71c:	mov    edx,DWORD PTR [ecx]
6401f71e:	lea    esi,[edx+0x1]
6401f721:	cmp    esi,edx
6401f723:	mov    DWORD PTR [ebp+0x8],esi
6401f726:	jb     0x6401f72d
6401f728:	cmp    esi,0x1
6401f72b:	jae    0x6401f734
6401f72d:	mov    DWORD PTR [ebp-0x4],0x1
6401f734:	dec    eax
6401f735:	mov    edx,DWORD PTR [ebp+0x8]
6401f738:	mov    DWORD PTR [ecx],edx
6401f73a:	mov    ecx,DWORD PTR [ebp-0x4]
6401f73d:	jns    0x6401f710
6401f73f:	mov    DWORD PTR [ebp+0x8],ecx
6401f742:	mov    ecx,DWORD PTR [ebp-0x8]
6401f745:	or     eax,0xffffffff
6401f748:	shl    eax,cl
6401f74a:	and    DWORD PTR [edi],eax
6401f74c:	mov    eax,DWORD PTR [ebp-0xc]
6401f74f:	inc    eax
6401f750:	cmp    eax,0x3
6401f753:	jge    0x6401f762
6401f755:	push   0x3
6401f757:	pop    ecx
6401f758:	lea    edi,[ebp+eax*4-0x20]
6401f75c:	sub    ecx,eax
6401f75e:	xor    eax,eax
6401f760:	rep stos DWORD PTR es:[edi],eax
6401f762:	cmp    DWORD PTR [ebp+0x8],0x0
6401f766:	je     0x6401f769
6401f768:	inc    ebx
6401f769:	mov    eax,ds:0x640385c8
6401f76e:	mov    ecx,eax
6401f770:	sub    ecx,DWORD PTR ds:0x640385cc
6401f776:	cmp    ebx,ecx
6401f778:	jge    0x6401f787
6401f77a:	xor    eax,eax
6401f77c:	lea    edi,[ebp-0x20]
6401f77f:	stos   DWORD PTR es:[edi],eax
6401f780:	stos   DWORD PTR es:[edi],eax
6401f781:	stos   DWORD PTR es:[edi],eax
6401f782:	jmp    0x6401f994
6401f787:	cmp    ebx,eax
6401f789:	jg     0x6401f99e
6401f78f:	sub    eax,DWORD PTR [ebp-0x10]
6401f792:	lea    esi,[ebp-0x2c]
6401f795:	mov    ecx,eax
6401f797:	lea    edi,[ebp-0x20]
6401f79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f79b:	cdq    
6401f79c:	and    edx,0x1f
6401f79f:	add    eax,edx
6401f7a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f7a2:	mov    edx,ecx
6401f7a4:	sar    eax,0x5
6401f7a7:	and    edx,0x8000001f
6401f7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f7ae:	jns    0x6401f7b5
6401f7b0:	dec    edx
6401f7b1:	or     edx,0xffffffe0
6401f7b4:	inc    edx
6401f7b5:	and    DWORD PTR [ebp-0xc],0x0
6401f7b9:	and    DWORD PTR [ebp+0x8],0x0
6401f7bd:	or     edi,0xffffffff
6401f7c0:	mov    ecx,edx
6401f7c2:	shl    edi,cl
6401f7c4:	mov    DWORD PTR [ebp-0x4],0x20
6401f7cb:	sub    DWORD PTR [ebp-0x4],edx
6401f7ce:	not    edi
6401f7d0:	mov    ebx,DWORD PTR [ebp+0x8]
6401f7d3:	lea    ebx,[ebp+ebx*4-0x20]
6401f7d7:	mov    esi,DWORD PTR [ebx]
6401f7d9:	mov    ecx,esi
6401f7db:	and    ecx,edi
6401f7dd:	mov    DWORD PTR [ebp-0x10],ecx
6401f7e0:	mov    ecx,edx
6401f7e2:	shr    esi,cl
6401f7e4:	mov    ecx,DWORD PTR [ebp-0x4]
6401f7e7:	or     esi,DWORD PTR [ebp-0xc]
6401f7ea:	mov    DWORD PTR [ebx],esi
6401f7ec:	mov    esi,DWORD PTR [ebp-0x10]
6401f7ef:	shl    esi,cl
6401f7f1:	inc    DWORD PTR [ebp+0x8]
6401f7f4:	cmp    DWORD PTR [ebp+0x8],0x3
6401f7f8:	mov    DWORD PTR [ebp-0xc],esi
6401f7fb:	jl     0x6401f7d0
6401f7fd:	mov    esi,eax
6401f7ff:	push   0x2
6401f801:	shl    esi,0x2
6401f804:	lea    ecx,[ebp-0x18]
6401f807:	pop    edx
6401f808:	sub    ecx,esi
6401f80a:	cmp    edx,eax
6401f80c:	jl     0x6401f816
6401f80e:	mov    esi,DWORD PTR [ecx]
6401f810:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f814:	jmp    0x6401f81b
6401f816:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f81b:	dec    edx
6401f81c:	sub    ecx,0x4
6401f81f:	test   edx,edx
6401f821:	jge    0x6401f80a
6401f823:	mov    esi,DWORD PTR ds:0x640385cc
6401f829:	dec    esi
6401f82a:	lea    ecx,[esi+0x1]
6401f82d:	mov    eax,ecx
6401f82f:	cdq    
6401f830:	and    edx,0x1f
6401f833:	add    eax,edx
6401f835:	sar    eax,0x5
6401f838:	mov    edx,ecx
6401f83a:	and    edx,0x8000001f
6401f840:	mov    DWORD PTR [ebp-0xc],eax
6401f843:	jns    0x6401f84a
6401f845:	dec    edx
6401f846:	or     edx,0xffffffe0
6401f849:	inc    edx
6401f84a:	push   0x1f
6401f84c:	pop    ecx
6401f84d:	sub    ecx,edx
6401f84f:	xor    edx,edx
6401f851:	inc    edx
6401f852:	shl    edx,cl
6401f854:	lea    ebx,[ebp+eax*4-0x20]
6401f858:	mov    DWORD PTR [ebp-0x10],ecx
6401f85b:	test   DWORD PTR [ebx],edx
6401f85d:	je     0x6401f8e5
6401f863:	or     edx,0xffffffff
6401f866:	shl    edx,cl
6401f868:	not    edx
6401f86a:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f86e:	jmp    0x6401f875
6401f870:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f875:	jne    0x6401f87f
6401f877:	inc    eax
6401f878:	cmp    eax,0x3
6401f87b:	jl     0x6401f870
6401f87d:	jmp    0x6401f8e5
6401f87f:	mov    eax,esi
6401f881:	cdq    
6401f882:	push   0x1f
6401f884:	pop    ecx
6401f885:	and    edx,ecx
6401f887:	add    eax,edx
6401f889:	sar    eax,0x5
6401f88c:	and    esi,0x8000001f
6401f892:	jns    0x6401f899
6401f894:	dec    esi
6401f895:	or     esi,0xffffffe0
6401f898:	inc    esi
6401f899:	and    DWORD PTR [ebp+0x8],0x0
6401f89d:	xor    edx,edx
6401f89f:	sub    ecx,esi
6401f8a1:	inc    edx
6401f8a2:	shl    edx,cl
6401f8a4:	lea    ecx,[ebp+eax*4-0x20]
6401f8a8:	mov    esi,DWORD PTR [ecx]
6401f8aa:	lea    edi,[esi+edx*1]
6401f8ad:	cmp    edi,esi
6401f8af:	jb     0x6401f8b5
6401f8b1:	cmp    edi,edx
6401f8b3:	jae    0x6401f8bc
6401f8b5:	mov    DWORD PTR [ebp+0x8],0x1
6401f8bc:	mov    DWORD PTR [ecx],edi
6401f8be:	mov    ecx,DWORD PTR [ebp+0x8]
6401f8c1:	jmp    0x6401f8e2
6401f8c3:	test   ecx,ecx
6401f8c5:	je     0x6401f8e5
6401f8c7:	lea    ecx,[ebp+eax*4-0x20]
6401f8cb:	mov    edx,DWORD PTR [ecx]
6401f8cd:	lea    esi,[edx+0x1]
6401f8d0:	xor    edi,edi
6401f8d2:	cmp    esi,edx
6401f8d4:	jb     0x6401f8db
6401f8d6:	cmp    esi,0x1
6401f8d9:	jae    0x6401f8de
6401f8db:	xor    edi,edi
6401f8dd:	inc    edi
6401f8de:	mov    DWORD PTR [ecx],esi
6401f8e0:	mov    ecx,edi
6401f8e2:	dec    eax
6401f8e3:	jns    0x6401f8c3
6401f8e5:	mov    ecx,DWORD PTR [ebp-0x10]
6401f8e8:	or     eax,0xffffffff
6401f8eb:	shl    eax,cl
6401f8ed:	and    DWORD PTR [ebx],eax
6401f8ef:	mov    eax,DWORD PTR [ebp-0xc]
6401f8f2:	inc    eax
6401f8f3:	cmp    eax,0x3
6401f8f6:	jge    0x6401f905
6401f8f8:	push   0x3
6401f8fa:	pop    ecx
6401f8fb:	lea    edi,[ebp+eax*4-0x20]
6401f8ff:	sub    ecx,eax
6401f901:	xor    eax,eax
6401f903:	rep stos DWORD PTR es:[edi],eax
6401f905:	mov    ecx,DWORD PTR ds:0x640385d0
6401f90b:	inc    ecx
6401f90c:	mov    eax,ecx
6401f90e:	cdq    
6401f90f:	and    edx,0x1f
6401f912:	add    eax,edx
6401f914:	mov    edx,ecx
6401f916:	sar    eax,0x5
6401f919:	and    edx,0x8000001f
6401f91f:	jns    0x6401f926
6401f921:	dec    edx
6401f922:	or     edx,0xffffffe0
6401f925:	inc    edx
6401f926:	and    DWORD PTR [ebp-0xc],0x0
6401f92a:	and    DWORD PTR [ebp+0x8],0x0
6401f92e:	or     edi,0xffffffff
6401f931:	mov    ecx,edx
6401f933:	shl    edi,cl
6401f935:	mov    DWORD PTR [ebp-0x4],0x20
6401f93c:	sub    DWORD PTR [ebp-0x4],edx
6401f93f:	not    edi
6401f941:	mov    ebx,DWORD PTR [ebp+0x8]
6401f944:	lea    ebx,[ebp+ebx*4-0x20]
6401f948:	mov    esi,DWORD PTR [ebx]
6401f94a:	mov    ecx,esi
6401f94c:	and    ecx,edi
6401f94e:	mov    DWORD PTR [ebp-0x10],ecx
6401f951:	mov    ecx,edx
6401f953:	shr    esi,cl
6401f955:	mov    ecx,DWORD PTR [ebp-0x4]
6401f958:	or     esi,DWORD PTR [ebp-0xc]
6401f95b:	mov    DWORD PTR [ebx],esi
6401f95d:	mov    esi,DWORD PTR [ebp-0x10]
6401f960:	shl    esi,cl
6401f962:	inc    DWORD PTR [ebp+0x8]
6401f965:	cmp    DWORD PTR [ebp+0x8],0x3
6401f969:	mov    DWORD PTR [ebp-0xc],esi
6401f96c:	jl     0x6401f941
6401f96e:	mov    esi,eax
6401f970:	push   0x2
6401f972:	shl    esi,0x2
6401f975:	lea    ecx,[ebp-0x18]
6401f978:	pop    edx
6401f979:	sub    ecx,esi
6401f97b:	cmp    edx,eax
6401f97d:	jl     0x6401f987
6401f97f:	mov    esi,DWORD PTR [ecx]
6401f981:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f985:	jmp    0x6401f98c
6401f987:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f98c:	dec    edx
6401f98d:	sub    ecx,0x4
6401f990:	test   edx,edx
6401f992:	jge    0x6401f97b
6401f994:	push   0x2
6401f996:	xor    ebx,ebx
6401f998:	pop    eax
6401f999:	jmp    0x6401faf8
6401f99e:	cmp    ebx,DWORD PTR ds:0x640385c4
6401f9a4:	mov    ecx,DWORD PTR ds:0x640385d0
6401f9aa:	jl     0x6401fa5d
6401f9b0:	xor    eax,eax
6401f9b2:	lea    edi,[ebp-0x20]
6401f9b5:	stos   DWORD PTR es:[edi],eax
6401f9b6:	stos   DWORD PTR es:[edi],eax
6401f9b7:	stos   DWORD PTR es:[edi],eax
6401f9b8:	or     DWORD PTR [ebp-0x20],0x80000000
6401f9bf:	mov    eax,ecx
6401f9c1:	cdq    
6401f9c2:	and    edx,0x1f
6401f9c5:	add    eax,edx
6401f9c7:	mov    edx,ecx
6401f9c9:	sar    eax,0x5
6401f9cc:	and    edx,0x8000001f
6401f9d2:	jns    0x6401f9d9
6401f9d4:	dec    edx
6401f9d5:	or     edx,0xffffffe0
6401f9d8:	inc    edx
6401f9d9:	and    DWORD PTR [ebp-0xc],0x0
6401f9dd:	and    DWORD PTR [ebp+0x8],0x0
6401f9e1:	or     edi,0xffffffff
6401f9e4:	mov    ecx,edx
6401f9e6:	shl    edi,cl
6401f9e8:	mov    DWORD PTR [ebp-0x4],0x20
6401f9ef:	sub    DWORD PTR [ebp-0x4],edx
6401f9f2:	not    edi
6401f9f4:	mov    ebx,DWORD PTR [ebp+0x8]
6401f9f7:	lea    ebx,[ebp+ebx*4-0x20]
6401f9fb:	mov    esi,DWORD PTR [ebx]
6401f9fd:	mov    ecx,esi
6401f9ff:	and    ecx,edi
6401fa01:	mov    DWORD PTR [ebp-0x10],ecx
6401fa04:	mov    ecx,edx
6401fa06:	shr    esi,cl
6401fa08:	mov    ecx,DWORD PTR [ebp-0x4]
6401fa0b:	or     esi,DWORD PTR [ebp-0xc]
6401fa0e:	mov    DWORD PTR [ebx],esi
6401fa10:	mov    esi,DWORD PTR [ebp-0x10]
6401fa13:	shl    esi,cl
6401fa15:	inc    DWORD PTR [ebp+0x8]
6401fa18:	cmp    DWORD PTR [ebp+0x8],0x3
6401fa1c:	mov    DWORD PTR [ebp-0xc],esi
6401fa1f:	jl     0x6401f9f4
6401fa21:	mov    esi,eax
6401fa23:	push   0x2
6401fa25:	shl    esi,0x2
6401fa28:	lea    ecx,[ebp-0x18]
6401fa2b:	pop    edx
6401fa2c:	sub    ecx,esi
6401fa2e:	cmp    edx,eax
6401fa30:	jl     0x6401fa3a
6401fa32:	mov    esi,DWORD PTR [ecx]
6401fa34:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fa38:	jmp    0x6401fa3f
6401fa3a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fa3f:	dec    edx
6401fa40:	sub    ecx,0x4
6401fa43:	test   edx,edx
6401fa45:	jge    0x6401fa2e
6401fa47:	mov    eax,ds:0x640385c4
6401fa4c:	mov    ecx,DWORD PTR ds:0x640385d8
6401fa52:	lea    ebx,[ecx+eax*1]
6401fa55:	xor    eax,eax
6401fa57:	inc    eax
6401fa58:	jmp    0x6401faf8
6401fa5d:	mov    eax,ds:0x640385d8
6401fa62:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401fa69:	add    ebx,eax
6401fa6b:	mov    eax,ecx
6401fa6d:	cdq    
6401fa6e:	and    edx,0x1f
6401fa71:	add    eax,edx
6401fa73:	mov    edx,ecx
6401fa75:	sar    eax,0x5
6401fa78:	and    edx,0x8000001f
6401fa7e:	jns    0x6401fa85
6401fa80:	dec    edx
6401fa81:	or     edx,0xffffffe0
6401fa84:	inc    edx
6401fa85:	and    DWORD PTR [ebp-0xc],0x0
6401fa89:	and    DWORD PTR [ebp+0x8],0x0
6401fa8d:	or     esi,0xffffffff
6401fa90:	mov    ecx,edx
6401fa92:	shl    esi,cl
6401fa94:	mov    DWORD PTR [ebp-0x4],0x20
6401fa9b:	sub    DWORD PTR [ebp-0x4],edx
6401fa9e:	not    esi
6401faa0:	mov    ecx,DWORD PTR [ebp+0x8]
6401faa3:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401faa7:	mov    ecx,edi
6401faa9:	and    ecx,esi
6401faab:	mov    DWORD PTR [ebp-0x10],ecx
6401faae:	mov    ecx,edx
6401fab0:	shr    edi,cl
6401fab2:	mov    ecx,DWORD PTR [ebp+0x8]
6401fab5:	or     edi,DWORD PTR [ebp-0xc]
6401fab8:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401fabc:	mov    edi,DWORD PTR [ebp-0x10]
6401fabf:	mov    ecx,DWORD PTR [ebp-0x4]
6401fac2:	shl    edi,cl
6401fac4:	inc    DWORD PTR [ebp+0x8]
6401fac7:	cmp    DWORD PTR [ebp+0x8],0x3
6401facb:	mov    DWORD PTR [ebp-0xc],edi
6401face:	jl     0x6401faa0
6401fad0:	mov    esi,eax
6401fad2:	push   0x2
6401fad4:	shl    esi,0x2
6401fad7:	lea    ecx,[ebp-0x18]
6401fada:	pop    edx
6401fadb:	sub    ecx,esi
6401fadd:	cmp    edx,eax
6401fadf:	jl     0x6401fae9
6401fae1:	mov    esi,DWORD PTR [ecx]
6401fae3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fae7:	jmp    0x6401faee
6401fae9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401faee:	dec    edx
6401faef:	sub    ecx,0x4
6401faf2:	test   edx,edx
6401faf4:	jge    0x6401fadd
6401faf6:	xor    eax,eax
6401faf8:	pop    esi
6401faf9:	push   0x1f
6401fafb:	pop    ecx
6401fafc:	sub    ecx,DWORD PTR ds:0x640385d0
6401fb02:	shl    ebx,cl
6401fb04:	mov    ecx,DWORD PTR [ebp-0x14]
6401fb07:	neg    ecx
6401fb09:	sbb    ecx,ecx
6401fb0b:	and    ecx,0x80000000
6401fb11:	or     ebx,ecx
6401fb13:	mov    ecx,DWORD PTR ds:0x640385d4
6401fb19:	or     ebx,DWORD PTR [ebp-0x20]
6401fb1c:	cmp    ecx,0x40
6401fb1f:	jne    0x6401fb2e
6401fb21:	mov    ecx,DWORD PTR [ebp+0xc]
6401fb24:	mov    edx,DWORD PTR [ebp-0x1c]
6401fb27:	mov    DWORD PTR [ecx+0x4],ebx
6401fb2a:	mov    DWORD PTR [ecx],edx
6401fb2c:	jmp    0x6401fb38
6401fb2e:	cmp    ecx,0x20
6401fb31:	jne    0x6401fb38
6401fb33:	mov    ecx,DWORD PTR [ebp+0xc]
6401fb36:	mov    DWORD PTR [ecx],ebx
6401fb38:	pop    edi
6401fb39:	pop    ebx
6401fb3a:	leave  
6401fb3b:	ret    
6401fb3c:	push   ebp
6401fb3d:	mov    ebp,esp
6401fb3f:	sub    esp,0x10
6401fb42:	mov    eax,ds:0x64037644
6401fb47:	xor    eax,ebp
6401fb49:	mov    DWORD PTR [ebp-0x4],eax
6401fb4c:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401fb50:	push   ebx
6401fb51:	push   esi
6401fb52:	push   edi
6401fb53:	jge    0x6401fb5c
6401fb55:	xor    eax,eax
6401fb57:	jmp    0x6401fd4e
6401fb5c:	mov    eax,ds:0x640398a0
6401fb61:	mov    esi,DWORD PTR ds:0x6402410c
6401fb67:	xor    ebx,ebx
6401fb69:	xor    edi,edi
6401fb6b:	inc    ebx
6401fb6c:	cmp    eax,edi
6401fb6e:	jne    0x6401fba3
6401fb70:	lea    eax,[ebp-0x8]
6401fb73:	push   eax
6401fb74:	push   ebx
6401fb75:	push   0x64029960
6401fb7a:	push   ebx
6401fb7b:	call   esi
6401fb7d:	test   eax,eax
6401fb7f:	je     0x6401fb89
6401fb81:	mov    DWORD PTR ds:0x640398a0,ebx
6401fb87:	jmp    0x6401fba7
6401fb89:	call   DWORD PTR ds:0x64024064
6401fb8f:	cmp    eax,0x78
6401fb92:	jne    0x6401fb9e
6401fb94:	push   0x2
6401fb96:	pop    eax
6401fb97:	mov    ds:0x640398a0,eax
6401fb9c:	jmp    0x6401fba3
6401fb9e:	mov    eax,ds:0x640398a0
6401fba3:	cmp    eax,ebx
6401fba5:	jne    0x6401fbba
6401fba7:	push   DWORD PTR [ebp+0x18]
6401fbaa:	push   DWORD PTR [ebp+0x14]
6401fbad:	push   DWORD PTR [ebp+0x10]
6401fbb0:	push   DWORD PTR [ebp+0xc]
6401fbb3:	call   esi
6401fbb5:	jmp    0x6401fd4e
6401fbba:	cmp    eax,0x2
6401fbbd:	je     0x6401fbc3
6401fbbf:	cmp    eax,edi
6401fbc1:	jne    0x6401fb55
6401fbc3:	cmp    DWORD PTR [ebp+0x20],edi
6401fbc6:	mov    DWORD PTR [ebp-0xc],edi
6401fbc9:	jne    0x6401fbd6
6401fbcb:	mov    eax,DWORD PTR [ebp+0x8]
6401fbce:	mov    eax,DWORD PTR [eax]
6401fbd0:	mov    eax,DWORD PTR [eax+0x14]
6401fbd3:	mov    DWORD PTR [ebp+0x20],eax
6401fbd6:	cmp    DWORD PTR [ebp+0x1c],edi
6401fbd9:	jne    0x6401fbe6
6401fbdb:	mov    eax,DWORD PTR [ebp+0x8]
6401fbde:	mov    eax,DWORD PTR [eax]
6401fbe0:	mov    eax,DWORD PTR [eax+0x4]
6401fbe3:	mov    DWORD PTR [ebp+0x1c],eax
6401fbe6:	push   DWORD PTR [ebp+0x20]
6401fbe9:	call   0x6401e060
6401fbee:	cmp    DWORD PTR [ebp+0x1c],eax
6401fbf1:	pop    ecx
6401fbf2:	je     0x6401fbfc
6401fbf4:	cmp    eax,0xffffffff
6401fbf7:	je     0x6401fbfc
6401fbf9:	mov    DWORD PTR [ebp+0x1c],eax
6401fbfc:	mov    ebx,DWORD PTR ds:0x64024010
6401fc02:	push   edi
6401fc03:	push   edi
6401fc04:	push   edi
6401fc05:	push   edi
6401fc06:	push   DWORD PTR [ebp+0x14]
6401fc09:	push   DWORD PTR [ebp+0x10]
6401fc0c:	push   edi
6401fc0d:	push   DWORD PTR [ebp+0x1c]
6401fc10:	call   ebx
6401fc12:	mov    esi,eax
6401fc14:	cmp    esi,edi
6401fc16:	mov    DWORD PTR [ebp-0x10],esi
6401fc19:	je     0x6401fb55
6401fc1f:	jle    0x6401fc5c
6401fc21:	cmp    esi,0xffffffe0
6401fc24:	ja     0x6401fc5c
6401fc26:	lea    eax,[esi+0x8]
6401fc29:	cmp    eax,0x400
6401fc2e:	ja     0x6401fc43
6401fc30:	call   0x64013d20
6401fc35:	mov    eax,esp
6401fc37:	cmp    eax,edi
6401fc39:	je     0x6401fc57
6401fc3b:	mov    DWORD PTR [eax],0xcccc
6401fc41:	jmp    0x6401fc54
6401fc43:	push   eax
6401fc44:	call   0x640148be
6401fc49:	cmp    eax,edi
6401fc4b:	pop    ecx
6401fc4c:	je     0x6401fc57
6401fc4e:	mov    DWORD PTR [eax],0xdddd
6401fc54:	add    eax,0x8
6401fc57:	mov    DWORD PTR [ebp-0x8],eax
6401fc5a:	jmp    0x6401fc5f
6401fc5c:	mov    DWORD PTR [ebp-0x8],edi
6401fc5f:	cmp    DWORD PTR [ebp-0x8],edi
6401fc62:	je     0x6401fb55
6401fc68:	push   esi
6401fc69:	push   edi
6401fc6a:	push   DWORD PTR [ebp-0x8]
6401fc6d:	call   0x64015160
6401fc72:	add    esp,0xc
6401fc75:	push   edi
6401fc76:	push   edi
6401fc77:	push   esi
6401fc78:	push   DWORD PTR [ebp-0x8]
6401fc7b:	push   DWORD PTR [ebp+0x14]
6401fc7e:	push   DWORD PTR [ebp+0x10]
6401fc81:	push   edi
6401fc82:	push   DWORD PTR [ebp+0x1c]
6401fc85:	call   ebx
6401fc87:	test   eax,eax
6401fc89:	je     0x6401fd42
6401fc8f:	lea    eax,[esi+0x1]
6401fc92:	cmp    eax,edi
6401fc94:	jle    0x6401fcda
6401fc96:	cmp    eax,0x7ffffff0
6401fc9b:	ja     0x6401fcda
6401fc9d:	lea    eax,[esi+esi*1+0xa]
6401fca1:	cmp    eax,0x400
6401fca6:	ja     0x6401fcc2
6401fca8:	call   0x64013d20
6401fcad:	mov    ebx,esp
6401fcaf:	cmp    ebx,edi
6401fcb1:	je     0x6401fd42
6401fcb7:	mov    DWORD PTR [ebx],0xcccc
6401fcbd:	add    ebx,0x8
6401fcc0:	jmp    0x6401fcdc
6401fcc2:	push   eax
6401fcc3:	call   0x640148be
6401fcc8:	cmp    eax,edi
6401fcca:	pop    ecx
6401fccb:	je     0x6401fcd6
6401fccd:	mov    DWORD PTR [eax],0xdddd
6401fcd3:	add    eax,0x8
6401fcd6:	mov    ebx,eax
6401fcd8:	jmp    0x6401fcdc
6401fcda:	xor    ebx,ebx
6401fcdc:	cmp    ebx,edi
6401fcde:	je     0x6401fd42
6401fce0:	cmp    DWORD PTR [ebp+0x20],edi
6401fce3:	jne    0x6401fcf0
6401fce5:	mov    eax,DWORD PTR [ebp+0x8]
6401fce8:	mov    eax,DWORD PTR [eax]
6401fcea:	mov    eax,DWORD PTR [eax+0x14]
6401fced:	mov    DWORD PTR [ebp+0x20],eax
6401fcf0:	mov    edi,DWORD PTR [ebp+0x14]
6401fcf3:	push   ebx
6401fcf4:	push   DWORD PTR [ebp-0x10]
6401fcf7:	add    edi,edi
6401fcf9:	push   DWORD PTR [ebp-0x8]
6401fcfc:	lea    esi,[edi+ebx*1]
6401fcff:	push   DWORD PTR [ebp+0xc]
6401fd02:	or     WORD PTR [esi],0xffff
6401fd07:	push   DWORD PTR [ebp+0x20]
6401fd0a:	or     WORD PTR [esi-0x2],0xffff
6401fd10:	call   DWORD PTR ds:0x64024108
6401fd16:	cmp    WORD PTR [esi-0x2],0xffff
6401fd1c:	mov    DWORD PTR [ebp-0xc],eax
6401fd1f:	je     0x6401fd37
6401fd21:	cmp    WORD PTR [esi],0xffff
6401fd26:	jne    0x6401fd37
6401fd28:	push   edi
6401fd29:	push   ebx
6401fd2a:	push   DWORD PTR [ebp+0x18]
6401fd2d:	call   0x64016510
6401fd32:	add    esp,0xc
6401fd35:	jmp    0x6401fd3b
6401fd37:	and    DWORD PTR [ebp-0xc],0x0
6401fd3b:	push   ebx
6401fd3c:	call   0x6401430a
6401fd41:	pop    ecx
6401fd42:	push   DWORD PTR [ebp-0x8]
6401fd45:	call   0x6401430a
6401fd4a:	mov    eax,DWORD PTR [ebp-0xc]
6401fd4d:	pop    ecx
6401fd4e:	lea    esp,[ebp-0x1c]
6401fd51:	pop    edi
6401fd52:	pop    esi
6401fd53:	pop    ebx
6401fd54:	mov    ecx,DWORD PTR [ebp-0x4]
6401fd57:	xor    ecx,ebp
6401fd59:	call   0x64013d06
6401fd5e:	leave  
6401fd5f:	ret    
6401fd60:	push   ebp
6401fd61:	mov    ebp,esp
6401fd63:	sub    esp,0x10
6401fd66:	push   DWORD PTR [ebp+0x8]
6401fd69:	lea    ecx,[ebp-0x10]
6401fd6c:	call   0x64014325
6401fd71:	push   DWORD PTR [ebp+0x20]
6401fd74:	lea    eax,[ebp-0x10]
6401fd77:	push   DWORD PTR [ebp+0x1c]
6401fd7a:	push   DWORD PTR [ebp+0x18]
6401fd7d:	push   DWORD PTR [ebp+0x14]
6401fd80:	push   DWORD PTR [ebp+0x10]
6401fd83:	push   DWORD PTR [ebp+0xc]
6401fd86:	push   eax
6401fd87:	call   0x6401fb3c
6401fd8c:	add    esp,0x1c
6401fd8f:	cmp    BYTE PTR [ebp-0x4],0x0
6401fd93:	je     0x6401fd9c
6401fd95:	mov    ecx,DWORD PTR [ebp-0x8]
6401fd98:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401fd9c:	leave  
6401fd9d:	ret    
6401fd9e:	push   ebp
6401fd9f:	mov    ebp,esp
6401fda1:	sub    esp,0x10
6401fda4:	push   esi
6401fda5:	push   DWORD PTR [ebp+0xc]
6401fda8:	lea    ecx,[ebp-0x10]
6401fdab:	call   0x64014325
6401fdb0:	mov    esi,DWORD PTR [ebp+0x8]
6401fdb3:	movsx  eax,BYTE PTR [esi]
6401fdb6:	push   eax
6401fdb7:	call   0x64014dcc
6401fdbc:	cmp    eax,0x65
6401fdbf:	jmp    0x6401fdcd
6401fdc1:	inc    esi
6401fdc2:	movzx  eax,BYTE PTR [esi]
6401fdc5:	push   eax
6401fdc6:	call   0x64014731
6401fdcb:	test   eax,eax
6401fdcd:	pop    ecx
6401fdce:	jne    0x6401fdc1
6401fdd0:	movsx  eax,BYTE PTR [esi]
6401fdd3:	push   eax
6401fdd4:	call   0x64014dcc
6401fdd9:	cmp    eax,0x78
6401fddc:	pop    ecx
6401fddd:	jne    0x6401fde1
6401fddf:	inc    esi
6401fde0:	inc    esi
6401fde1:	mov    ecx,DWORD PTR [ebp-0x10]
6401fde4:	mov    ecx,DWORD PTR [ecx+0xbc]
6401fdea:	mov    ecx,DWORD PTR [ecx]
6401fdec:	mov    al,BYTE PTR [esi]
6401fdee:	mov    cl,BYTE PTR [ecx]
6401fdf0:	mov    BYTE PTR [esi],cl
6401fdf2:	inc    esi
6401fdf3:	mov    cl,BYTE PTR [esi]
6401fdf5:	mov    BYTE PTR [esi],al
6401fdf7:	mov    al,cl
6401fdf9:	mov    cl,BYTE PTR [esi]
6401fdfb:	inc    esi
6401fdfc:	test   cl,cl
6401fdfe:	jne    0x6401fdf3
6401fe00:	cmp    BYTE PTR [ebp-0x4],cl
6401fe03:	pop    esi
6401fe04:	je     0x6401fe0d
6401fe06:	mov    eax,DWORD PTR [ebp-0x8]
6401fe09:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fe0d:	leave  
6401fe0e:	ret    
6401fe0f:	push   ebp
6401fe10:	mov    ebp,esp
6401fe12:	sub    esp,0x10
6401fe15:	push   esi
6401fe16:	push   DWORD PTR [ebp+0xc]
6401fe19:	lea    ecx,[ebp-0x10]
6401fe1c:	call   0x64014325
6401fe21:	mov    eax,DWORD PTR [ebp+0x8]
6401fe24:	mov    cl,BYTE PTR [eax]
6401fe26:	test   cl,cl
6401fe28:	mov    esi,DWORD PTR [ebp-0x10]
6401fe2b:	je     0x6401fe42
6401fe2d:	mov    edx,DWORD PTR [esi+0xbc]
6401fe33:	mov    edx,DWORD PTR [edx]
6401fe35:	mov    dl,BYTE PTR [edx]
6401fe37:	cmp    cl,dl
6401fe39:	je     0x6401fe42
6401fe3b:	inc    eax
6401fe3c:	mov    cl,BYTE PTR [eax]
6401fe3e:	test   cl,cl
6401fe40:	jne    0x6401fe37
6401fe42:	mov    cl,BYTE PTR [eax]
6401fe44:	inc    eax
6401fe45:	test   cl,cl
6401fe47:	je     0x6401fe7f
6401fe49:	jmp    0x6401fe56
6401fe4b:	cmp    cl,0x65
6401fe4e:	je     0x6401fe5c
6401fe50:	cmp    cl,0x45
6401fe53:	je     0x6401fe5c
6401fe55:	inc    eax
6401fe56:	mov    cl,BYTE PTR [eax]
6401fe58:	test   cl,cl
6401fe5a:	jne    0x6401fe4b
6401fe5c:	mov    edx,eax
6401fe5e:	dec    eax
6401fe5f:	cmp    BYTE PTR [eax],0x30
6401fe62:	je     0x6401fe5e
6401fe64:	mov    ecx,DWORD PTR [esi+0xbc]
6401fe6a:	mov    ecx,DWORD PTR [ecx]
6401fe6c:	push   ebx
6401fe6d:	mov    bl,BYTE PTR [eax]
6401fe6f:	cmp    bl,BYTE PTR [ecx]
6401fe71:	pop    ebx
6401fe72:	jne    0x6401fe75
6401fe74:	dec    eax
6401fe75:	mov    cl,BYTE PTR [edx]
6401fe77:	inc    eax
6401fe78:	inc    edx
6401fe79:	test   cl,cl
6401fe7b:	mov    BYTE PTR [eax],cl
6401fe7d:	jne    0x6401fe75
6401fe7f:	cmp    BYTE PTR [ebp-0x4],0x0
6401fe83:	pop    esi
6401fe84:	je     0x6401fe8d
6401fe86:	mov    eax,DWORD PTR [ebp-0x8]
6401fe89:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fe8d:	leave  
6401fe8e:	ret    
6401fe8f:	fldz   
6401fe91:	mov    eax,DWORD PTR [esp+0x4]
6401fe95:	fcomp  QWORD PTR [eax]
6401fe97:	fnstsw ax
6401fe99:	test   ah,0x41
6401fe9c:	jp     0x6401fea2
6401fe9e:	xor    eax,eax
6401fea0:	inc    eax
6401fea1:	ret    
6401fea2:	xor    eax,eax
6401fea4:	ret    
6401fea5:	push   ebp
6401fea6:	mov    ebp,esp
6401fea8:	push   ecx
6401fea9:	push   ecx
6401feaa:	cmp    DWORD PTR [ebp+0x8],0x0
6401feae:	push   DWORD PTR [ebp+0x14]
6401feb1:	push   DWORD PTR [ebp+0x10]
6401feb4:	je     0x6401fecf
6401feb6:	lea    eax,[ebp-0x8]
6401feb9:	push   eax
6401feba:	call   0x640211bb
6401febf:	mov    ecx,DWORD PTR [ebp-0x8]
6401fec2:	mov    eax,DWORD PTR [ebp+0xc]
6401fec5:	mov    DWORD PTR [eax],ecx
6401fec7:	mov    ecx,DWORD PTR [ebp-0x4]
6401feca:	mov    DWORD PTR [eax+0x4],ecx
6401fecd:	jmp    0x6401fee0
6401fecf:	lea    eax,[ebp+0x8]
6401fed2:	push   eax
6401fed3:	call   0x64021261
6401fed8:	mov    eax,DWORD PTR [ebp+0xc]
6401fedb:	mov    ecx,DWORD PTR [ebp+0x8]
6401fede:	mov    DWORD PTR [eax],ecx
6401fee0:	add    esp,0xc
6401fee3:	leave  
6401fee4:	ret    
6401fee5:	push   0x0
6401fee7:	push   DWORD PTR [esp+0x10]
6401feeb:	push   DWORD PTR [esp+0x10]
6401feef:	push   DWORD PTR [esp+0x10]
6401fef3:	call   0x6401fea5
6401fef8:	add    esp,0x10
6401fefb:	ret    
6401fefc:	test   edi,edi
6401fefe:	push   esi
6401feff:	mov    esi,eax
6401ff01:	je     0x6401ff17
6401ff03:	push   esi
6401ff04:	call   0x64015550
6401ff09:	inc    eax
6401ff0a:	push   eax
6401ff0b:	push   esi
6401ff0c:	add    esi,edi
6401ff0e:	push   esi
6401ff0f:	call   0x64016510
6401ff14:	add    esp,0x10
6401ff17:	pop    esi
6401ff18:	ret    
6401ff19:	push   0x0
6401ff1b:	push   DWORD PTR [esp+0x8]
6401ff1f:	call   0x6401fd9e
6401ff24:	pop    ecx
6401ff25:	pop    ecx
6401ff26:	ret    
6401ff27:	push   0x0
6401ff29:	push   DWORD PTR [esp+0x8]
6401ff2d:	call   0x6401fe0f
6401ff32:	pop    ecx
6401ff33:	pop    ecx
6401ff34:	ret    
6401ff35:	push   ebp
6401ff36:	mov    ebp,esp
6401ff38:	sub    esp,0x10
6401ff3b:	push   ebx
6401ff3c:	push   esi
6401ff3d:	push   edi
6401ff3e:	push   DWORD PTR [ebp+0x1c]
6401ff41:	lea    ecx,[ebp-0x10]
6401ff44:	mov    ebx,eax
6401ff46:	call   0x64014325
6401ff4b:	xor    esi,esi
6401ff4d:	cmp    ebx,esi
6401ff4f:	jne    0x6401ff7c
6401ff51:	call   0x640164c3
6401ff56:	push   0x16
6401ff58:	pop    edi
6401ff59:	push   esi
6401ff5a:	push   esi
6401ff5b:	push   esi
6401ff5c:	push   esi
6401ff5d:	push   esi
6401ff5e:	mov    DWORD PTR [eax],edi
6401ff60:	call   0x64013e52
6401ff65:	add    esp,0x14
6401ff68:	cmp    BYTE PTR [ebp-0x4],0x0
6401ff6c:	je     0x6401ff75
6401ff6e:	mov    eax,DWORD PTR [ebp-0x8]
6401ff71:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ff75:	mov    eax,edi
6401ff77:	jmp    0x6402009d
6401ff7c:	cmp    DWORD PTR [ebp+0x8],esi
6401ff7f:	jbe    0x6401ff51
6401ff81:	cmp    DWORD PTR [ebp+0xc],esi
6401ff84:	jle    0x6401ff8b
6401ff86:	mov    eax,DWORD PTR [ebp+0xc]
6401ff89:	jmp    0x6401ff8d
6401ff8b:	xor    eax,eax
6401ff8d:	add    eax,0x9
6401ff90:	cmp    DWORD PTR [ebp+0x8],eax
6401ff93:	ja     0x6401ff9e
6401ff95:	call   0x640164c3
6401ff9a:	push   0x22
6401ff9c:	jmp    0x6401ff58
6401ff9e:	cmp    BYTE PTR [ebp+0x18],0x0
6401ffa2:	je     0x6401ffc2
6401ffa4:	mov    edx,DWORD PTR [ebp+0x14]
6401ffa7:	xor    eax,eax
6401ffa9:	cmp    DWORD PTR [ebp+0xc],esi
6401ffac:	setg   al
6401ffaf:	xor    ecx,ecx
6401ffb1:	cmp    DWORD PTR [edx],0x2d
6401ffb4:	sete   cl
6401ffb7:	mov    edi,eax
6401ffb9:	add    ecx,ebx
6401ffbb:	mov    eax,ecx
6401ffbd:	call   0x6401fefc
6401ffc2:	mov    edi,DWORD PTR [ebp+0x14]
6401ffc5:	cmp    DWORD PTR [edi],0x2d
6401ffc8:	mov    esi,ebx
6401ffca:	jne    0x6401ffd2
6401ffcc:	mov    BYTE PTR [ebx],0x2d
6401ffcf:	lea    esi,[ebx+0x1]
6401ffd2:	cmp    DWORD PTR [ebp+0xc],0x0
6401ffd6:	jle    0x6401fff0
6401ffd8:	lea    eax,[esi+0x1]
6401ffdb:	mov    cl,BYTE PTR [eax]
6401ffdd:	mov    BYTE PTR [esi],cl
6401ffdf:	mov    esi,eax
6401ffe1:	mov    eax,DWORD PTR [ebp-0x10]
6401ffe4:	mov    eax,DWORD PTR [eax+0xbc]
6401ffea:	mov    eax,DWORD PTR [eax]
6401ffec:	mov    al,BYTE PTR [eax]
6401ffee:	mov    BYTE PTR [esi],al
6401fff0:	xor    eax,eax
6401fff2:	cmp    BYTE PTR [ebp+0x18],al
6401fff5:	sete   al
6401fff8:	add    eax,DWORD PTR [ebp+0xc]
6401fffb:	add    esi,eax
6401fffd:	cmp    DWORD PTR [ebp+0x8],0xffffffff
64020001:	jne    0x64020008
64020003:	or     ebx,0xffffffff
64020006:	jmp    0x6402000d
64020008:	sub    ebx,esi
6402000a:	add    ebx,DWORD PTR [ebp+0x8]
6402000d:	push   0x640294e0
64020012:	push   ebx
64020013:	push   esi
64020014:	call   0x64016321
64020019:	add    esp,0xc
6402001c:	xor    ebx,ebx
6402001e:	test   eax,eax
64020020:	je     0x6402002f
64020022:	push   ebx
64020023:	push   ebx
64020024:	push   ebx
64020025:	push   ebx
64020026:	push   ebx
64020027:	call   0x64013d56
6402002c:	add    esp,0x14
6402002f:	cmp    DWORD PTR [ebp+0x10],ebx
64020032:	lea    ecx,[esi+0x2]
64020035:	je     0x6402003a
64020037:	mov    BYTE PTR [esi],0x45
6402003a:	mov    eax,DWORD PTR [edi+0xc]
6402003d:	inc    esi
6402003e:	cmp    BYTE PTR [eax],0x30
64020041:	je     0x64020071
64020043:	mov    eax,DWORD PTR [edi+0x4]
64020046:	dec    eax
64020047:	jns    0x6402004e
64020049:	neg    eax
6402004b:	mov    BYTE PTR [esi],0x2d
6402004e:	inc    esi
6402004f:	cmp    eax,0x64
64020052:	jl     0x6402005e
64020054:	cdq    
64020055:	push   0x64
64020057:	pop    edi
64020058:	idiv   edi
6402005a:	add    BYTE PTR [esi],al
6402005c:	mov    eax,edx
6402005e:	inc    esi
6402005f:	cmp    eax,0xa
64020062:	jl     0x6402006e
64020064:	cdq    
64020065:	push   0xa
64020067:	pop    edi
64020068:	idiv   edi
6402006a:	add    BYTE PTR [esi],al
6402006c:	mov    eax,edx
6402006e:	add    BYTE PTR [esi+0x1],al
64020071:	test   BYTE PTR ds:0x6403996c,0x1
64020078:	je     0x6402008e
6402007a:	cmp    BYTE PTR [ecx],0x30
6402007d:	jne    0x6402008e
6402007f:	push   0x3
64020081:	lea    eax,[ecx+0x1]
64020084:	push   eax
64020085:	push   ecx
64020086:	call   0x64016510
6402008b:	add    esp,0xc
6402008e:	cmp    BYTE PTR [ebp-0x4],0x0
64020092:	je     0x6402009b
64020094:	mov    eax,DWORD PTR [ebp-0x8]
64020097:	and    DWORD PTR [eax+0x70],0xfffffffd
6402009b:	xor    eax,eax
6402009d:	pop    edi
6402009e:	pop    esi
6402009f:	pop    ebx
640200a0:	leave  
640200a1:	ret    
640200a2:	push   ebp
640200a3:	mov    ebp,esp
640200a5:	sub    esp,0x2c
640200a8:	mov    eax,ds:0x64037644
640200ad:	xor    eax,ebp
640200af:	mov    DWORD PTR [ebp-0x4],eax
640200b2:	mov    eax,DWORD PTR [ebp+0x8]
640200b5:	push   ebx
640200b6:	push   esi
640200b7:	push   edi
640200b8:	mov    edi,DWORD PTR [ebp+0xc]
640200bb:	push   0x16
640200bd:	pop    esi
640200be:	push   esi
640200bf:	lea    ecx,[ebp-0x1c]
640200c2:	push   ecx
640200c3:	lea    ecx,[ebp-0x2c]
640200c6:	push   ecx
640200c7:	push   DWORD PTR [eax+0x4]
640200ca:	push   DWORD PTR [eax]
640200cc:	call   0x6402147f
640200d1:	xor    ebx,ebx
640200d3:	add    esp,0x14
640200d6:	cmp    edi,ebx
640200d8:	jne    0x640200f2
640200da:	call   0x640164c3
640200df:	push   ebx
640200e0:	push   ebx
640200e1:	push   ebx
640200e2:	push   ebx
640200e3:	push   ebx
640200e4:	mov    DWORD PTR [eax],esi
640200e6:	call   0x64013e52
640200eb:	add    esp,0x14
640200ee:	mov    eax,esi
640200f0:	jmp    0x64020161
640200f2:	mov    eax,DWORD PTR [ebp+0x10]
640200f5:	cmp    eax,ebx
640200f7:	jbe    0x640200da
640200f9:	cmp    eax,0xffffffff
640200fc:	mov    esi,DWORD PTR [ebp+0x14]
640200ff:	jne    0x64020106
64020101:	or     eax,0xffffffff
64020104:	jmp    0x6402011a
64020106:	xor    ecx,ecx
64020108:	cmp    DWORD PTR [ebp-0x2c],0x2d
6402010c:	sete   cl
6402010f:	sub    eax,ecx
64020111:	xor    ecx,ecx
64020113:	cmp    esi,ebx
64020115:	setg   cl
64020118:	sub    eax,ecx
6402011a:	lea    ecx,[ebp-0x2c]
6402011d:	push   ecx
6402011e:	lea    ecx,[esi+0x1]
64020121:	push   ecx
64020122:	push   eax
64020123:	xor    eax,eax
64020125:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020129:	sete   al
6402012c:	xor    ecx,ecx
6402012e:	cmp    esi,ebx
64020130:	setg   cl
64020133:	add    eax,edi
64020135:	add    ecx,eax
64020137:	push   ecx
64020138:	call   0x64021307
6402013d:	add    esp,0x10
64020140:	cmp    eax,ebx
64020142:	je     0x64020148
64020144:	mov    BYTE PTR [edi],bl
64020146:	jmp    0x64020161
64020148:	push   DWORD PTR [ebp+0x1c]
6402014b:	lea    eax,[ebp-0x2c]
6402014e:	push   ebx
6402014f:	push   eax
64020150:	push   DWORD PTR [ebp+0x18]
64020153:	mov    eax,edi
64020155:	push   esi
64020156:	push   DWORD PTR [ebp+0x10]
64020159:	call   0x6401ff35
6402015e:	add    esp,0x18
64020161:	mov    ecx,DWORD PTR [ebp-0x4]
64020164:	pop    edi
64020165:	pop    esi
64020166:	xor    ecx,ebp
64020168:	pop    ebx
64020169:	call   0x64013d06
6402016e:	leave  
6402016f:	ret    
64020170:	push   ebp
64020171:	mov    ebp,esp
64020173:	push   0x0
64020175:	push   DWORD PTR [ebp+0x18]
64020178:	push   DWORD PTR [ebp+0x14]
6402017b:	push   DWORD PTR [ebp+0x10]
6402017e:	push   DWORD PTR [ebp+0xc]
64020181:	push   DWORD PTR [ebp+0x8]
64020184:	call   0x640200a2
64020189:	add    esp,0x18
6402018c:	pop    ebp
6402018d:	ret    
6402018e:	push   ebp
6402018f:	mov    ebp,esp
64020191:	sub    esp,0x24
64020194:	push   esi
64020195:	push   edi
64020196:	push   DWORD PTR [ebp+0x1c]
64020199:	lea    ecx,[ebp-0x24]
6402019c:	mov    DWORD PTR [ebp-0x14],0x3ff
640201a3:	xor    edi,edi
640201a5:	mov    DWORD PTR [ebp-0x4],0x30
640201ac:	call   0x64014325
640201b1:	cmp    DWORD PTR [ebp+0x14],edi
640201b4:	jge    0x640201b9
640201b6:	mov    DWORD PTR [ebp+0x14],edi
640201b9:	mov    esi,DWORD PTR [ebp+0xc]
640201bc:	cmp    esi,edi
640201be:	jne    0x640201eb
640201c0:	call   0x640164c3
640201c5:	push   0x16
640201c7:	pop    esi
640201c8:	push   edi
640201c9:	push   edi
640201ca:	push   edi
640201cb:	push   edi
640201cc:	push   edi
640201cd:	mov    DWORD PTR [eax],esi
640201cf:	call   0x64013e52
640201d4:	add    esp,0x14
640201d7:	cmp    BYTE PTR [ebp-0x18],0x0
640201db:	je     0x640201e4
640201dd:	mov    eax,DWORD PTR [ebp-0x1c]
640201e0:	and    DWORD PTR [eax+0x70],0xfffffffd
640201e4:	mov    eax,esi
640201e6:	jmp    0x640204fb
640201eb:	cmp    DWORD PTR [ebp+0x10],edi
640201ee:	jbe    0x640201c0
640201f0:	mov    eax,DWORD PTR [ebp+0x14]
640201f3:	add    eax,0xb
640201f6:	cmp    DWORD PTR [ebp+0x10],eax
640201f9:	mov    BYTE PTR [esi],0x0
640201fc:	ja     0x64020207
640201fe:	call   0x640164c3
64020203:	push   0x22
64020205:	jmp    0x640201c7
64020207:	mov    edi,DWORD PTR [ebp+0x8]
6402020a:	mov    eax,DWORD PTR [edi]
6402020c:	mov    DWORD PTR [ebp-0xc],eax
6402020f:	mov    eax,DWORD PTR [edi+0x4]
64020212:	mov    ecx,eax
64020214:	shr    ecx,0x14
64020217:	mov    edx,0x7ff
6402021c:	push   ebx
6402021d:	and    ecx,edx
6402021f:	xor    ebx,ebx
64020221:	cmp    ecx,edx
64020223:	jne    0x640202b9
64020229:	test   ebx,ebx
6402022b:	jne    0x640202b9
64020231:	mov    eax,DWORD PTR [ebp+0x10]
64020234:	cmp    eax,0xffffffff
64020237:	jne    0x6402023d
64020239:	or     eax,eax
6402023b:	jmp    0x64020240
6402023d:	add    eax,0xfffffffe
64020240:	push   0x0
64020242:	push   DWORD PTR [ebp+0x14]
64020245:	lea    ebx,[esi+0x2]
64020248:	push   eax
64020249:	push   ebx
6402024a:	push   edi
6402024b:	call   0x64020170
64020250:	add    esp,0x14
64020253:	test   eax,eax
64020255:	je     0x64020270
64020257:	cmp    BYTE PTR [ebp-0x18],0x0
6402025b:	mov    BYTE PTR [esi],0x0
6402025e:	je     0x640204fa
64020264:	mov    ecx,DWORD PTR [ebp-0x1c]
64020267:	and    DWORD PTR [ecx+0x70],0xfffffffd
6402026b:	jmp    0x640204fa
64020270:	cmp    BYTE PTR [ebx],0x2d
64020273:	jne    0x64020279
64020275:	mov    BYTE PTR [esi],0x2d
64020278:	inc    esi
64020279:	mov    BYTE PTR [esi],0x30
6402027c:	inc    esi
6402027d:	cmp    DWORD PTR [ebp+0x18],0x0
64020281:	push   0x65
64020283:	sete   al
64020286:	dec    al
64020288:	and    al,0xe0
6402028a:	add    al,0x78
6402028c:	mov    BYTE PTR [esi],al
6402028e:	inc    esi
6402028f:	push   esi
64020290:	call   0x6401bae0
64020295:	test   eax,eax
64020297:	pop    ecx
64020298:	pop    ecx
64020299:	je     0x640204eb
6402029f:	cmp    DWORD PTR [ebp+0x18],0x0
640202a3:	sete   cl
640202a6:	dec    cl
640202a8:	and    cl,0xe0
640202ab:	add    cl,0x70
640202ae:	mov    BYTE PTR [eax],cl
640202b0:	mov    BYTE PTR [eax+0x3],0x0
640202b4:	jmp    0x640204eb
640202b9:	and    eax,0x80000000
640202be:	xor    ecx,ecx
640202c0:	or     ecx,eax
640202c2:	je     0x640202c8
640202c4:	mov    BYTE PTR [esi],0x2d
640202c7:	inc    esi
640202c8:	mov    ebx,DWORD PTR [ebp+0x18]
640202cb:	mov    BYTE PTR [esi],0x30
640202ce:	inc    esi
640202cf:	test   ebx,ebx
640202d1:	sete   al
640202d4:	dec    al
640202d6:	and    al,0xe0
640202d8:	add    al,0x78
640202da:	mov    BYTE PTR [esi],al
640202dc:	mov    ecx,DWORD PTR [edi+0x4]
640202df:	inc    esi
640202e0:	neg    ebx
640202e2:	sbb    ebx,ebx
640202e4:	and    ebx,0xffffffe0
640202e7:	and    ecx,0x7ff00000
640202ed:	xor    eax,eax
640202ef:	add    ebx,0x27
640202f2:	xor    edx,edx
640202f4:	or     eax,ecx
640202f6:	jne    0x64020319
640202f8:	mov    BYTE PTR [esi],0x30
640202fb:	mov    ecx,DWORD PTR [edi+0x4]
640202fe:	mov    eax,DWORD PTR [edi]
64020300:	and    ecx,0xfffff
64020306:	inc    esi
64020307:	or     eax,ecx
64020309:	jne    0x64020310
6402030b:	mov    DWORD PTR [ebp-0x14],edx
6402030e:	jmp    0x6402031d
64020310:	mov    DWORD PTR [ebp-0x14],0x3fe
64020317:	jmp    0x6402031d
64020319:	mov    BYTE PTR [esi],0x31
6402031c:	inc    esi
6402031d:	mov    eax,esi
6402031f:	inc    esi
64020320:	cmp    DWORD PTR [ebp+0x14],edx
64020323:	mov    DWORD PTR [ebp+0xc],eax
64020326:	jne    0x6402032c
64020328:	mov    BYTE PTR [eax],dl
6402032a:	jmp    0x6402033b
6402032c:	mov    ecx,DWORD PTR [ebp-0x24]
6402032f:	mov    ecx,DWORD PTR [ecx+0xbc]
64020335:	mov    ecx,DWORD PTR [ecx]
64020337:	mov    cl,BYTE PTR [ecx]
64020339:	mov    BYTE PTR [eax],cl
6402033b:	mov    ecx,DWORD PTR [edi+0x4]
6402033e:	mov    eax,DWORD PTR [edi]
64020340:	and    ecx,0xfffff
64020346:	mov    DWORD PTR [ebp-0x8],ecx
64020349:	ja     0x64020353
6402034b:	cmp    eax,edx
6402034d:	jbe    0x64020408
64020353:	mov    DWORD PTR [ebp-0xc],edx
64020356:	mov    DWORD PTR [ebp-0x8],0xf0000
6402035d:	cmp    DWORD PTR [ebp+0x14],0x0
64020361:	jle    0x640203b0
64020363:	mov    edx,DWORD PTR [edi+0x4]
64020366:	and    edx,DWORD PTR [ebp-0x8]
64020369:	mov    eax,DWORD PTR [edi]
6402036b:	movsx  ecx,WORD PTR [ebp-0x4]
6402036f:	and    eax,DWORD PTR [ebp-0xc]
64020372:	and    edx,0xfffff
64020378:	call   0x640215f0
6402037d:	add    ax,0x30
64020381:	movzx  eax,ax
64020384:	cmp    ax,0x39
64020388:	jbe    0x6402038c
6402038a:	add    eax,ebx
6402038c:	mov    ecx,DWORD PTR [ebp-0x8]
6402038f:	sub    DWORD PTR [ebp-0x4],0x4
64020393:	mov    BYTE PTR [esi],al
64020395:	mov    eax,DWORD PTR [ebp-0xc]
64020398:	shrd   eax,ecx,0x4
6402039c:	shr    ecx,0x4
6402039f:	inc    esi
640203a0:	dec    DWORD PTR [ebp+0x14]
640203a3:	cmp    WORD PTR [ebp-0x4],0x0
640203a8:	mov    DWORD PTR [ebp-0xc],eax
640203ab:	mov    DWORD PTR [ebp-0x8],ecx
640203ae:	jge    0x6402035d
640203b0:	cmp    WORD PTR [ebp-0x4],0x0
640203b5:	jl     0x64020408
640203b7:	mov    edx,DWORD PTR [edi+0x4]
640203ba:	and    edx,DWORD PTR [ebp-0x8]
640203bd:	mov    eax,DWORD PTR [edi]
640203bf:	movsx  ecx,WORD PTR [ebp-0x4]
640203c3:	and    eax,DWORD PTR [ebp-0xc]
640203c6:	and    edx,0xfffff
640203cc:	call   0x640215f0
640203d1:	cmp    ax,0x8
640203d5:	jbe    0x64020408
640203d7:	lea    eax,[esi-0x1]
640203da:	mov    cl,BYTE PTR [eax]
640203dc:	cmp    cl,0x66
640203df:	je     0x640203e6
640203e1:	cmp    cl,0x46
640203e4:	jne    0x640203ec
640203e6:	mov    BYTE PTR [eax],0x30
640203e9:	dec    eax
640203ea:	jmp    0x640203da
640203ec:	cmp    eax,DWORD PTR [ebp+0xc]
640203ef:	je     0x64020405
640203f1:	mov    cl,BYTE PTR [eax]
640203f3:	cmp    cl,0x39
640203f6:	jne    0x640203ff
640203f8:	add    bl,0x3a
640203fb:	mov    BYTE PTR [eax],bl
640203fd:	jmp    0x64020408
640203ff:	inc    cl
64020401:	mov    BYTE PTR [eax],cl
64020403:	jmp    0x64020408
64020405:	inc    BYTE PTR [eax-0x1]
64020408:	cmp    DWORD PTR [ebp+0x14],0x0
6402040c:	jle    0x6402041f
6402040e:	push   DWORD PTR [ebp+0x14]
64020411:	push   0x30
64020413:	push   esi
64020414:	call   0x64015160
64020419:	add    esp,0xc
6402041c:	add    esi,DWORD PTR [ebp+0x14]
6402041f:	mov    eax,DWORD PTR [ebp+0xc]
64020422:	cmp    BYTE PTR [eax],0x0
64020425:	jne    0x64020429
64020427:	mov    esi,eax
64020429:	cmp    DWORD PTR [ebp+0x18],0x0
6402042d:	mov    cl,0x34
6402042f:	sete   al
64020432:	dec    al
64020434:	and    al,0xe0
64020436:	add    al,0x70
64020438:	mov    BYTE PTR [esi],al
6402043a:	mov    eax,DWORD PTR [edi]
6402043c:	mov    edx,DWORD PTR [edi+0x4]
6402043f:	inc    esi
64020440:	call   0x640215f0
64020445:	xor    ebx,ebx
64020447:	and    eax,0x7ff
6402044c:	and    edx,ebx
6402044e:	sub    eax,DWORD PTR [ebp-0x14]
64020451:	push   ebx
64020452:	pop    ecx
64020453:	sbb    edx,ecx
64020455:	js     0x64020463
64020457:	jg     0x6402045d
64020459:	cmp    eax,ebx
6402045b:	jb     0x64020463
6402045d:	mov    BYTE PTR [esi],0x2b
64020460:	inc    esi
64020461:	jmp    0x6402046d
64020463:	mov    BYTE PTR [esi],0x2d
64020466:	inc    esi
64020467:	neg    eax
64020469:	adc    edx,ebx
6402046b:	neg    edx
6402046d:	cmp    edx,ebx
6402046f:	mov    edi,esi
64020471:	mov    BYTE PTR [esi],0x30
64020474:	jl     0x6402049a
64020476:	mov    ecx,0x3e8
6402047b:	jg     0x64020481
6402047d:	cmp    eax,ecx
6402047f:	jb     0x6402049a
64020481:	push   ebx
64020482:	push   ecx
64020483:	push   edx
64020484:	push   eax
64020485:	call   0x64021510
6402048a:	add    al,0x30
6402048c:	mov    BYTE PTR [esi],al
6402048e:	inc    esi
6402048f:	cmp    esi,edi
64020491:	mov    DWORD PTR [ebp-0x10],edx
64020494:	mov    eax,ecx
64020496:	mov    edx,ebx
64020498:	jne    0x640204a5
6402049a:	test   edx,edx
6402049c:	jl     0x640204bc
6402049e:	jg     0x640204a5
640204a0:	cmp    eax,0x64
640204a3:	jb     0x640204bc
640204a5:	push   0x0
640204a7:	push   0x64
640204a9:	push   edx
640204aa:	push   eax
640204ab:	call   0x64021510
640204b0:	add    al,0x30
640204b2:	mov    BYTE PTR [esi],al
640204b4:	mov    DWORD PTR [ebp-0x10],edx
640204b7:	inc    esi
640204b8:	mov    eax,ecx
640204ba:	mov    edx,ebx
640204bc:	cmp    esi,edi
640204be:	jne    0x640204cb
640204c0:	test   edx,edx
640204c2:	jl     0x640204e3
640204c4:	jg     0x640204cb
640204c6:	cmp    eax,0xa
640204c9:	jb     0x640204e3
640204cb:	push   0x0
640204cd:	push   0xa
640204cf:	push   edx
640204d0:	push   eax
640204d1:	call   0x64021510
640204d6:	add    al,0x30
640204d8:	mov    BYTE PTR [esi],al
640204da:	mov    DWORD PTR [ebp-0x10],edx
640204dd:	inc    esi
640204de:	mov    eax,ecx
640204e0:	mov    DWORD PTR [ebp-0x10],ebx
640204e3:	add    al,0x30
640204e5:	mov    BYTE PTR [esi],al
640204e7:	mov    BYTE PTR [esi+0x1],0x0
640204eb:	cmp    BYTE PTR [ebp-0x18],0x0
640204ef:	je     0x640204f8
640204f1:	mov    eax,DWORD PTR [ebp-0x1c]
640204f4:	and    DWORD PTR [eax+0x70],0xfffffffd
640204f8:	xor    eax,eax
640204fa:	pop    ebx
640204fb:	pop    edi
640204fc:	pop    esi
640204fd:	leave  
640204fe:	ret    
640204ff:	push   ebp
64020500:	mov    ebp,esp
64020502:	sub    esp,0x10
64020505:	push   ebx
64020506:	push   esi
64020507:	push   edi
64020508:	push   DWORD PTR [ebp+0x14]
6402050b:	mov    ebx,eax
6402050d:	mov    esi,DWORD PTR [ebx+0x4]
64020510:	mov    edi,ecx
64020512:	lea    ecx,[ebp-0x10]
64020515:	dec    esi
64020516:	call   0x64014325
6402051b:	test   edi,edi
6402051d:	jne    0x6402054c
6402051f:	call   0x640164c3
64020524:	push   0x16
64020526:	pop    esi
64020527:	mov    DWORD PTR [eax],esi
64020529:	xor    eax,eax
6402052b:	push   eax
6402052c:	push   eax
6402052d:	push   eax
6402052e:	push   eax
6402052f:	push   eax
64020530:	call   0x64013e52
64020535:	add    esp,0x14
64020538:	cmp    BYTE PTR [ebp-0x4],0x0
6402053c:	je     0x64020545
6402053e:	mov    eax,DWORD PTR [ebp-0x8]
64020541:	and    DWORD PTR [eax+0x70],0xfffffffd
64020545:	mov    eax,esi
64020547:	jmp    0x640205ef
6402054c:	cmp    DWORD PTR [ebp+0x8],0x0
64020550:	jbe    0x6402051f
64020552:	cmp    BYTE PTR [ebp+0x10],0x0
64020556:	je     0x64020570
64020558:	cmp    esi,DWORD PTR [ebp+0xc]
6402055b:	jne    0x64020570
6402055d:	xor    eax,eax
6402055f:	cmp    DWORD PTR [ebx],0x2d
64020562:	sete   al
64020565:	add    eax,esi
64020567:	add    eax,edi
64020569:	mov    BYTE PTR [eax],0x30
6402056c:	mov    BYTE PTR [eax+0x1],0x0
64020570:	cmp    DWORD PTR [ebx],0x2d
64020573:	mov    esi,edi
64020575:	jne    0x6402057d
64020577:	mov    BYTE PTR [edi],0x2d
6402057a:	lea    esi,[edi+0x1]
6402057d:	mov    eax,DWORD PTR [ebx+0x4]
64020580:	xor    edi,edi
64020582:	inc    edi
64020583:	test   eax,eax
64020585:	jg     0x64020594
64020587:	mov    eax,esi
64020589:	call   0x6401fefc
6402058e:	mov    BYTE PTR [esi],0x30
64020591:	inc    esi
64020592:	jmp    0x64020596
64020594:	add    esi,eax
64020596:	cmp    DWORD PTR [ebp+0xc],0x0
6402059a:	jle    0x640205e0
6402059c:	mov    eax,esi
6402059e:	call   0x6401fefc
640205a3:	mov    eax,DWORD PTR [ebp-0x10]
640205a6:	mov    eax,DWORD PTR [eax+0xbc]
640205ac:	mov    eax,DWORD PTR [eax]
640205ae:	mov    al,BYTE PTR [eax]
640205b0:	mov    BYTE PTR [esi],al
640205b2:	mov    ebx,DWORD PTR [ebx+0x4]
640205b5:	inc    esi
640205b6:	test   ebx,ebx
640205b8:	jge    0x640205e0
640205ba:	neg    ebx
640205bc:	cmp    BYTE PTR [ebp+0x10],0x0
640205c0:	jne    0x640205c7
640205c2:	cmp    DWORD PTR [ebp+0xc],ebx
640205c5:	jl     0x640205ca
640205c7:	mov    DWORD PTR [ebp+0xc],ebx
640205ca:	mov    edi,DWORD PTR [ebp+0xc]
640205cd:	mov    eax,esi
640205cf:	call   0x6401fefc
640205d4:	push   edi
640205d5:	push   0x30
640205d7:	push   esi
640205d8:	call   0x64015160
640205dd:	add    esp,0xc
640205e0:	cmp    BYTE PTR [ebp-0x4],0x0
640205e4:	je     0x640205ed
640205e6:	mov    eax,DWORD PTR [ebp-0x8]
640205e9:	and    DWORD PTR [eax+0x70],0xfffffffd
640205ed:	xor    eax,eax
640205ef:	pop    edi
640205f0:	pop    esi
640205f1:	pop    ebx
640205f2:	leave  
640205f3:	ret    
640205f4:	push   ebp
640205f5:	mov    ebp,esp
640205f7:	sub    esp,0x2c
640205fa:	mov    eax,ds:0x64037644
640205ff:	xor    eax,ebp
64020601:	mov    DWORD PTR [ebp-0x4],eax
64020604:	mov    eax,DWORD PTR [ebp+0x8]
64020607:	push   ebx
64020608:	push   esi
64020609:	push   edi
6402060a:	mov    edi,DWORD PTR [ebp+0xc]
6402060d:	push   0x16
6402060f:	pop    esi
64020610:	push   esi
64020611:	lea    ecx,[ebp-0x1c]
64020614:	push   ecx
64020615:	lea    ecx,[ebp-0x2c]
64020618:	push   ecx
64020619:	push   DWORD PTR [eax+0x4]
6402061c:	push   DWORD PTR [eax]
6402061e:	call   0x6402147f
64020623:	xor    ebx,ebx
64020625:	add    esp,0x14
64020628:	cmp    edi,ebx
6402062a:	jne    0x64020644
6402062c:	call   0x640164c3
64020631:	push   ebx
64020632:	push   ebx
64020633:	push   ebx
64020634:	push   ebx
64020635:	push   ebx
64020636:	mov    DWORD PTR [eax],esi
64020638:	call   0x64013e52
6402063d:	add    esp,0x14
64020640:	mov    eax,esi
64020642:	jmp    0x6402069e
64020644:	mov    eax,DWORD PTR [ebp+0x10]
64020647:	cmp    eax,ebx
64020649:	jbe    0x6402062c
6402064b:	cmp    eax,0xffffffff
6402064e:	jne    0x64020654
64020650:	or     eax,eax
64020652:	jmp    0x6402065f
64020654:	xor    ecx,ecx
64020656:	cmp    DWORD PTR [ebp-0x2c],0x2d
6402065a:	sete   cl
6402065d:	sub    eax,ecx
6402065f:	mov    esi,DWORD PTR [ebp+0x14]
64020662:	lea    ecx,[ebp-0x2c]
64020665:	push   ecx
64020666:	mov    ecx,DWORD PTR [ebp-0x28]
64020669:	add    ecx,esi
6402066b:	push   ecx
6402066c:	push   eax
6402066d:	xor    eax,eax
6402066f:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020673:	sete   al
64020676:	add    eax,edi
64020678:	push   eax
64020679:	call   0x64021307
6402067e:	add    esp,0x10
64020681:	cmp    eax,ebx
64020683:	je     0x64020689
64020685:	mov    BYTE PTR [edi],bl
64020687:	jmp    0x6402069e
64020689:	push   DWORD PTR [ebp+0x18]
6402068c:	lea    eax,[ebp-0x2c]
6402068f:	push   ebx
64020690:	push   esi
64020691:	push   DWORD PTR [ebp+0x10]
64020694:	mov    ecx,edi
64020696:	call   0x640204ff
6402069b:	add    esp,0x10
6402069e:	mov    ecx,DWORD PTR [ebp-0x4]
640206a1:	pop    edi
640206a2:	pop    esi
640206a3:	xor    ecx,ebp
640206a5:	pop    ebx
640206a6:	call   0x64013d06
640206ab:	leave  
640206ac:	ret    
640206ad:	push   ebp
640206ae:	mov    ebp,esp
640206b0:	sub    esp,0x30
640206b3:	mov    eax,ds:0x64037644
640206b8:	xor    eax,ebp
640206ba:	mov    DWORD PTR [ebp-0x4],eax
640206bd:	mov    eax,DWORD PTR [ebp+0x8]
640206c0:	push   ebx
640206c1:	push   esi
640206c2:	mov    esi,DWORD PTR [ebp+0xc]
640206c5:	push   edi
640206c6:	push   0x16
640206c8:	pop    edi
640206c9:	push   edi
640206ca:	lea    ecx,[ebp-0x1c]
640206cd:	push   ecx
640206ce:	lea    ecx,[ebp-0x30]
640206d1:	push   ecx
640206d2:	push   DWORD PTR [eax+0x4]
640206d5:	push   DWORD PTR [eax]
640206d7:	call   0x6402147f
640206dc:	xor    ebx,ebx
640206de:	add    esp,0x14
640206e1:	cmp    esi,ebx
640206e3:	jne    0x64020700
640206e5:	call   0x640164c3
640206ea:	push   ebx
640206eb:	push   ebx
640206ec:	push   ebx
640206ed:	push   ebx
640206ee:	push   ebx
640206ef:	mov    DWORD PTR [eax],edi
640206f1:	call   0x64013e52
640206f6:	add    esp,0x14
640206f9:	mov    eax,edi
640206fb:	jmp    0x64020796
64020700:	mov    ecx,DWORD PTR [ebp+0x10]
64020703:	cmp    ecx,ebx
64020705:	jbe    0x640206e5
64020707:	mov    eax,DWORD PTR [ebp-0x2c]
6402070a:	dec    eax
6402070b:	mov    DWORD PTR [ebp-0x20],eax
6402070e:	xor    eax,eax
64020710:	cmp    DWORD PTR [ebp-0x30],0x2d
64020714:	sete   al
64020717:	cmp    ecx,0xffffffff
6402071a:	lea    edi,[eax+esi*1]
6402071d:	jne    0x64020723
6402071f:	or     ecx,ecx
64020721:	jmp    0x64020725
64020723:	sub    ecx,eax
64020725:	lea    eax,[ebp-0x30]
64020728:	push   eax
64020729:	push   DWORD PTR [ebp+0x14]
6402072c:	push   ecx
6402072d:	push   edi
6402072e:	call   0x64021307
64020733:	add    esp,0x10
64020736:	cmp    eax,ebx
64020738:	je     0x6402073e
6402073a:	mov    BYTE PTR [esi],bl
6402073c:	jmp    0x64020796
6402073e:	mov    eax,DWORD PTR [ebp-0x2c]
64020741:	dec    eax
64020742:	cmp    DWORD PTR [ebp-0x20],eax
64020745:	setl   cl
64020748:	cmp    eax,0xfffffffc
6402074b:	jl     0x6402077a
6402074d:	cmp    eax,DWORD PTR [ebp+0x14]
64020750:	jge    0x6402077a
64020752:	cmp    cl,bl
64020754:	je     0x64020760
64020756:	mov    al,BYTE PTR [edi]
64020758:	inc    edi
64020759:	test   al,al
6402075b:	jne    0x64020756
6402075d:	mov    BYTE PTR [edi-0x2],bl
64020760:	push   DWORD PTR [ebp+0x1c]
64020763:	lea    eax,[ebp-0x30]
64020766:	push   0x1
64020768:	push   DWORD PTR [ebp+0x14]
6402076b:	mov    ecx,esi
6402076d:	push   DWORD PTR [ebp+0x10]
64020770:	call   0x640204ff
64020775:	add    esp,0x10
64020778:	jmp    0x64020796
6402077a:	push   DWORD PTR [ebp+0x1c]
6402077d:	lea    eax,[ebp-0x30]
64020780:	push   0x1
64020782:	push   eax
64020783:	push   DWORD PTR [ebp+0x18]
64020786:	mov    eax,esi
64020788:	push   DWORD PTR [ebp+0x14]
6402078b:	push   DWORD PTR [ebp+0x10]
6402078e:	call   0x6401ff35
64020793:	add    esp,0x18
64020796:	mov    ecx,DWORD PTR [ebp-0x4]
64020799:	pop    edi
6402079a:	pop    esi
6402079b:	xor    ecx,ebp
6402079d:	pop    ebx
6402079e:	call   0x64013d06
640207a3:	leave  
640207a4:	ret    
640207a5:	push   ebp
640207a6:	mov    ebp,esp
640207a8:	mov    eax,DWORD PTR [ebp+0x14]
640207ab:	cmp    eax,0x65
640207ae:	je     0x6402080f
640207b0:	cmp    eax,0x45
640207b3:	je     0x6402080f
640207b5:	cmp    eax,0x66
640207b8:	jne    0x640207d3
640207ba:	push   DWORD PTR [ebp+0x20]
640207bd:	push   DWORD PTR [ebp+0x18]
640207c0:	push   DWORD PTR [ebp+0x10]
640207c3:	push   DWORD PTR [ebp+0xc]
640207c6:	push   DWORD PTR [ebp+0x8]
640207c9:	call   0x640205f4
640207ce:	add    esp,0x14
640207d1:	pop    ebp
640207d2:	ret    
640207d3:	cmp    eax,0x61
640207d6:	je     0x640207f6
640207d8:	cmp    eax,0x41
640207db:	je     0x640207f6
640207dd:	push   DWORD PTR [ebp+0x20]
640207e0:	push   DWORD PTR [ebp+0x1c]
640207e3:	push   DWORD PTR [ebp+0x18]
640207e6:	push   DWORD PTR [ebp+0x10]
640207e9:	push   DWORD PTR [ebp+0xc]
640207ec:	push   DWORD PTR [ebp+0x8]
640207ef:	call   0x640206ad
640207f4:	jmp    0x64020826
640207f6:	push   DWORD PTR [ebp+0x20]
640207f9:	push   DWORD PTR [ebp+0x1c]
640207fc:	push   DWORD PTR [ebp+0x18]
640207ff:	push   DWORD PTR [ebp+0x10]
64020802:	push   DWORD PTR [ebp+0xc]
64020805:	push   DWORD PTR [ebp+0x8]
64020808:	call   0x6402018e
6402080d:	jmp    0x64020826
6402080f:	push   DWORD PTR [ebp+0x20]
64020812:	push   DWORD PTR [ebp+0x1c]
64020815:	push   DWORD PTR [ebp+0x18]
64020818:	push   DWORD PTR [ebp+0x10]
6402081b:	push   DWORD PTR [ebp+0xc]
6402081e:	push   DWORD PTR [ebp+0x8]
64020821:	call   0x640200a2
64020826:	add    esp,0x18
64020829:	pop    ebp
6402082a:	ret    
6402082b:	push   ebp
6402082c:	mov    ebp,esp
6402082e:	push   0x0
64020830:	push   DWORD PTR [ebp+0x1c]
64020833:	push   DWORD PTR [ebp+0x18]
64020836:	push   DWORD PTR [ebp+0x14]
64020839:	push   DWORD PTR [ebp+0x10]
6402083c:	push   DWORD PTR [ebp+0xc]
6402083f:	push   DWORD PTR [ebp+0x8]
64020842:	call   0x640207a5
64020847:	add    esp,0x1c
6402084a:	pop    ebp
6402084b:	ret    
6402084c:	push   esi
6402084d:	push   0x30000
64020852:	push   0x10000
64020857:	xor    esi,esi
64020859:	push   esi
6402085a:	call   0x6402160f
6402085f:	add    esp,0xc
64020862:	test   eax,eax
64020864:	je     0x64020873
64020866:	push   esi
64020867:	push   esi
64020868:	push   esi
64020869:	push   esi
6402086a:	push   esi
6402086b:	call   0x64013d56
64020870:	add    esp,0x14
64020873:	pop    esi
64020874:	ret    
64020875:	push   ebp
64020876:	mov    ebp,esp
64020878:	sub    esp,0x18
6402087b:	fld    QWORD PTR ds:0x640294f0
64020881:	fstp   QWORD PTR [ebp-0x10]
64020884:	fld    QWORD PTR ds:0x640294e8
6402088a:	fstp   QWORD PTR [ebp-0x18]
6402088d:	fld    QWORD PTR [ebp-0x18]
64020890:	fdiv   QWORD PTR [ebp-0x10]
64020893:	fmul   QWORD PTR [ebp-0x10]
64020896:	fsubr  QWORD PTR [ebp-0x18]
64020899:	fstp   QWORD PTR [ebp-0x8]
6402089c:	fld1   
6402089e:	fcomp  QWORD PTR [ebp-0x8]
640208a1:	fnstsw ax
640208a3:	test   ah,0x5
640208a6:	jp     0x640208ad
640208a8:	xor    eax,eax
640208aa:	inc    eax
640208ab:	leave  
640208ac:	ret    
640208ad:	xor    eax,eax
640208af:	leave  
640208b0:	ret    
640208b1:	push   0x64029514
640208b6:	call   DWORD PTR ds:0x640240a0
640208bc:	test   eax,eax
640208be:	je     0x640208d5
640208c0:	push   0x640294f8
640208c5:	push   eax
640208c6:	call   DWORD PTR ds:0x64024094
640208cc:	test   eax,eax
640208ce:	je     0x640208d5
640208d0:	push   0x0
640208d2:	call   eax
640208d4:	ret    
640208d5:	jmp    0x64020875
640208da:	push   ebp
640208db:	mov    ebp,esp
640208dd:	sub    esp,0x18
640208e0:	mov    eax,ds:0x64037644
640208e5:	xor    eax,ebp
640208e7:	mov    DWORD PTR [ebp-0x4],eax
640208ea:	mov    eax,DWORD PTR [ebp+0x10]
640208ed:	push   ebx
640208ee:	push   esi
640208ef:	xor    esi,esi
640208f1:	cmp    DWORD PTR [ebp+0xc],esi
640208f4:	push   edi
640208f5:	mov    DWORD PTR [ebp-0x18],0x404e
640208fc:	mov    DWORD PTR [eax],esi
640208fe:	mov    DWORD PTR [eax+0x4],esi
64020901:	mov    DWORD PTR [eax+0x8],esi
64020904:	jbe    0x64020a50
6402090a:	mov    edx,DWORD PTR [eax]
6402090c:	mov    ebx,DWORD PTR [eax+0x4]
6402090f:	mov    esi,eax
64020911:	lea    edi,[ebp-0x10]
64020914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020917:	mov    ecx,edx
64020919:	shr    ecx,0x1f
6402091c:	lea    edi,[edx+edx*1]
6402091f:	lea    edx,[ebx+ebx*1]
64020922:	or     edx,ecx
64020924:	mov    ecx,DWORD PTR [eax+0x8]
64020927:	mov    esi,ebx
64020929:	shr    esi,0x1f
6402092c:	add    ecx,ecx
6402092e:	or     ecx,esi
64020930:	mov    DWORD PTR [ebp-0x14],edi
64020933:	mov    esi,edi
64020935:	and    DWORD PTR [ebp-0x14],0x0
64020939:	mov    ebx,edx
6402093b:	shr    ebx,0x1f
6402093e:	add    ecx,ecx
64020940:	shr    edi,0x1f
64020943:	or     ecx,ebx
64020945:	mov    ebx,DWORD PTR [ebp-0x10]
64020948:	add    esi,esi
6402094a:	add    edx,edx
6402094c:	or     edx,edi
6402094e:	lea    edi,[esi+ebx*1]
64020951:	cmp    edi,esi
64020953:	mov    DWORD PTR [eax],esi
64020955:	mov    DWORD PTR [eax+0x4],edx
64020958:	mov    DWORD PTR [eax+0x8],ecx
6402095b:	jb     0x64020961
6402095d:	cmp    edi,ebx
6402095f:	jae    0x64020968
64020961:	mov    DWORD PTR [ebp-0x14],0x1
64020968:	xor    ebx,ebx
6402096a:	cmp    DWORD PTR [ebp-0x14],ebx
6402096d:	mov    DWORD PTR [eax],edi
6402096f:	je     0x6402098b
64020971:	lea    esi,[edx+0x1]
64020974:	cmp    esi,edx
64020976:	jb     0x6402097d
64020978:	cmp    esi,0x1
6402097b:	jae    0x64020980
6402097d:	xor    ebx,ebx
6402097f:	inc    ebx
64020980:	test   ebx,ebx
64020982:	mov    DWORD PTR [eax+0x4],esi
64020985:	je     0x6402098b
64020987:	inc    ecx
64020988:	mov    DWORD PTR [eax+0x8],ecx
6402098b:	mov    ecx,DWORD PTR [eax+0x4]
6402098e:	mov    edx,DWORD PTR [ebp-0xc]
64020991:	lea    ebx,[ecx+edx*1]
64020994:	xor    esi,esi
64020996:	cmp    ebx,ecx
64020998:	jb     0x6402099e
6402099a:	cmp    ebx,edx
6402099c:	jae    0x640209a1
6402099e:	xor    esi,esi
640209a0:	inc    esi
640209a1:	test   esi,esi
640209a3:	mov    DWORD PTR [eax+0x4],ebx
640209a6:	je     0x640209ab
640209a8:	inc    DWORD PTR [eax+0x8]
640209ab:	mov    ecx,DWORD PTR [ebp-0x8]
640209ae:	add    DWORD PTR [eax+0x8],ecx
640209b1:	and    DWORD PTR [ebp-0x14],0x0
640209b5:	lea    ecx,[edi+edi*1]
640209b8:	mov    edx,edi
640209ba:	shr    edx,0x1f
640209bd:	lea    edi,[ebx+ebx*1]
640209c0:	or     edi,edx
640209c2:	mov    edx,DWORD PTR [eax+0x8]
640209c5:	mov    esi,ebx
640209c7:	shr    esi,0x1f
640209ca:	lea    ebx,[edx+edx*1]
640209cd:	mov    edx,DWORD PTR [ebp+0x8]
640209d0:	or     ebx,esi
640209d2:	mov    DWORD PTR [eax],ecx
640209d4:	mov    DWORD PTR [eax+0x4],edi
640209d7:	mov    DWORD PTR [eax+0x8],ebx
640209da:	movsx  edx,BYTE PTR [edx]
640209dd:	lea    esi,[ecx+edx*1]
640209e0:	cmp    esi,ecx
640209e2:	mov    DWORD PTR [ebp-0x10],edx
640209e5:	jb     0x640209eb
640209e7:	cmp    esi,edx
640209e9:	jae    0x640209f2
640209eb:	mov    DWORD PTR [ebp-0x14],0x1
640209f2:	cmp    DWORD PTR [ebp-0x14],0x0
640209f6:	mov    DWORD PTR [eax],esi
640209f8:	je     0x64020a16
640209fa:	lea    ecx,[edi+0x1]
640209fd:	xor    edx,edx
640209ff:	cmp    ecx,edi
64020a01:	jb     0x64020a08
64020a03:	cmp    ecx,0x1
64020a06:	jae    0x64020a0b
64020a08:	xor    edx,edx
64020a0a:	inc    edx
64020a0b:	test   edx,edx
64020a0d:	mov    DWORD PTR [eax+0x4],ecx
64020a10:	je     0x64020a16
64020a12:	inc    ebx
64020a13:	mov    DWORD PTR [eax+0x8],ebx
64020a16:	dec    DWORD PTR [ebp+0xc]
64020a19:	inc    DWORD PTR [ebp+0x8]
64020a1c:	cmp    DWORD PTR [ebp+0xc],0x0
64020a20:	ja     0x6402090a
64020a26:	xor    esi,esi
64020a28:	jmp    0x64020a50
64020a2a:	mov    ecx,DWORD PTR [eax+0x4]
64020a2d:	mov    edx,ecx
64020a2f:	shr    edx,0x10
64020a32:	mov    DWORD PTR [eax+0x8],edx
64020a35:	mov    edx,DWORD PTR [eax]
64020a37:	mov    edi,edx
64020a39:	shl    ecx,0x10
64020a3c:	shr    edi,0x10
64020a3f:	or     ecx,edi
64020a41:	shl    edx,0x10
64020a44:	add    DWORD PTR [ebp-0x18],0xfff0
64020a4b:	mov    DWORD PTR [eax+0x4],ecx
64020a4e:	mov    DWORD PTR [eax],edx
64020a50:	cmp    DWORD PTR [eax+0x8],esi
64020a53:	je     0x64020a2a
64020a55:	mov    ebx,0x8000
64020a5a:	test   DWORD PTR [eax+0x8],ebx
64020a5d:	jne    0x64020a8f
64020a5f:	mov    esi,DWORD PTR [eax]
64020a61:	mov    edi,DWORD PTR [eax+0x4]
64020a64:	add    DWORD PTR [ebp-0x18],0xffff
64020a6b:	mov    ecx,esi
64020a6d:	add    esi,esi
64020a6f:	shr    ecx,0x1f
64020a72:	mov    DWORD PTR [eax],esi
64020a74:	lea    esi,[edi+edi*1]
64020a77:	or     esi,ecx
64020a79:	mov    ecx,DWORD PTR [eax+0x8]
64020a7c:	mov    edx,edi
64020a7e:	shr    edx,0x1f
64020a81:	add    ecx,ecx
64020a83:	or     ecx,edx
64020a85:	test   ebx,ecx
64020a87:	mov    DWORD PTR [eax+0x4],esi
64020a8a:	mov    DWORD PTR [eax+0x8],ecx
64020a8d:	je     0x64020a5f
64020a8f:	mov    cx,WORD PTR [ebp-0x18]
64020a93:	mov    WORD PTR [eax+0xa],cx
64020a97:	mov    ecx,DWORD PTR [ebp-0x4]
64020a9a:	pop    edi
64020a9b:	pop    esi
64020a9c:	xor    ecx,ebp
64020a9e:	pop    ebx
64020a9f:	call   0x64013d06
64020aa4:	leave  
64020aa5:	ret    
64020aa6:	push   ebp
64020aa7:	mov    ebp,esp
64020aa9:	sub    esp,0x10
64020aac:	mov    eax,ds:0x64037644
64020ab1:	xor    eax,ebp
64020ab3:	mov    DWORD PTR [ebp-0x4],eax
64020ab6:	push   ebx
64020ab7:	push   esi
64020ab8:	mov    esi,DWORD PTR [ebp+0xc]
64020abb:	test   BYTE PTR [esi+0xc],0x40
64020abf:	push   edi
64020ac0:	jne    0x64020c55
64020ac6:	push   esi
64020ac7:	call   0x6401986f
64020acc:	cmp    eax,0xffffffff
64020acf:	pop    ecx
64020ad0:	mov    edi,0x64037918
64020ad5:	je     0x64020b05
64020ad7:	push   esi
64020ad8:	call   0x6401986f
64020add:	cmp    eax,0xfffffffe
64020ae0:	pop    ecx
64020ae1:	je     0x64020b05
64020ae3:	push   esi
64020ae4:	call   0x6401986f
64020ae9:	sar    eax,0x5
64020aec:	push   esi
64020aed:	lea    ebx,[eax*4+0x6403ab80]
64020af4:	call   0x6401986f
64020af9:	and    eax,0x1f
64020afc:	pop    ecx
64020afd:	shl    eax,0x6
64020b00:	add    eax,DWORD PTR [ebx]
64020b02:	pop    ecx
64020b03:	jmp    0x64020b07
64020b05:	mov    eax,edi
64020b07:	mov    al,BYTE PTR [eax+0x24]
64020b0a:	and    al,0x7f
64020b0c:	cmp    al,0x2
64020b0e:	je     0x64020c55
64020b14:	push   esi
64020b15:	call   0x6401986f
64020b1a:	cmp    eax,0xffffffff
64020b1d:	pop    ecx
64020b1e:	je     0x64020b4e
64020b20:	push   esi
64020b21:	call   0x6401986f
64020b26:	cmp    eax,0xfffffffe
64020b29:	pop    ecx
64020b2a:	je     0x64020b4e
64020b2c:	push   esi
64020b2d:	call   0x6401986f
64020b32:	sar    eax,0x5
64020b35:	push   esi
64020b36:	lea    ebx,[eax*4+0x6403ab80]
64020b3d:	call   0x6401986f
64020b42:	and    eax,0x1f
64020b45:	pop    ecx
64020b46:	shl    eax,0x6
64020b49:	add    eax,DWORD PTR [ebx]
64020b4b:	pop    ecx
64020b4c:	jmp    0x64020b50
64020b4e:	mov    eax,edi
64020b50:	mov    al,BYTE PTR [eax+0x24]
64020b53:	and    al,0x7f
64020b55:	cmp    al,0x1
64020b57:	jne    0x64020bb5
64020b59:	dec    DWORD PTR [esi+0x4]
64020b5c:	mov    ebx,DWORD PTR [ebp+0x8]
64020b5f:	js     0x64020b6f
64020b61:	mov    eax,DWORD PTR [esi]
64020b63:	mov    BYTE PTR [eax],bl
64020b65:	mov    ecx,DWORD PTR [esi]
64020b67:	movzx  eax,BYTE PTR [ecx]
64020b6a:	inc    ecx
64020b6b:	mov    DWORD PTR [esi],ecx
64020b6d:	jmp    0x64020b7b
64020b6f:	movsx  eax,bl
64020b72:	push   esi
64020b73:	push   eax
64020b74:	call   0x64019a4f
64020b79:	pop    ecx
64020b7a:	pop    ecx
64020b7b:	cmp    eax,0xffffffff
64020b7e:	jne    0x64020b89
64020b80:	or     ax,0xffff
64020b84:	jmp    0x64020c75
64020b89:	dec    DWORD PTR [esi+0x4]
64020b8c:	js     0x64020b9c
64020b8e:	mov    eax,DWORD PTR [esi]
64020b90:	mov    BYTE PTR [eax],bh
64020b92:	mov    ecx,DWORD PTR [esi]
64020b94:	movzx  eax,BYTE PTR [ecx]
64020b97:	inc    ecx
64020b98:	mov    DWORD PTR [esi],ecx
64020b9a:	jmp    0x64020ba8
64020b9c:	movsx  eax,bh
64020b9f:	push   esi
64020ba0:	push   eax
64020ba1:	call   0x64019a4f
64020ba6:	pop    ecx
64020ba7:	pop    ecx
64020ba8:	cmp    eax,0xffffffff
64020bab:	je     0x64020b80
64020bad:	mov    ax,bx
64020bb0:	jmp    0x64020c75
64020bb5:	push   esi
64020bb6:	call   0x6401986f
64020bbb:	cmp    eax,0xffffffff
64020bbe:	pop    ecx
64020bbf:	je     0x64020bef
64020bc1:	push   esi
64020bc2:	call   0x6401986f
64020bc7:	cmp    eax,0xfffffffe
64020bca:	pop    ecx
64020bcb:	je     0x64020bef
64020bcd:	push   esi
64020bce:	call   0x6401986f
64020bd3:	sar    eax,0x5
64020bd6:	push   esi
64020bd7:	lea    ebx,[eax*4+0x6403ab80]
64020bde:	call   0x6401986f
64020be3:	and    eax,0x1f
64020be6:	pop    ecx
64020be7:	shl    eax,0x6
64020bea:	add    eax,DWORD PTR [ebx]
64020bec:	pop    ecx
64020bed:	jmp    0x64020bf1
64020bef:	mov    eax,edi
64020bf1:	test   BYTE PTR [eax+0x4],0x80
64020bf5:	je     0x64020c55
64020bf7:	push   DWORD PTR [ebp+0x8]
64020bfa:	lea    eax,[ebp-0xc]
64020bfd:	push   0x5
64020bff:	push   eax
64020c00:	lea    eax,[ebp-0x10]
64020c03:	push   eax
64020c04:	call   0x6401ecae
64020c09:	add    esp,0x10
64020c0c:	test   eax,eax
64020c0e:	jne    0x64020b80
64020c14:	xor    ebx,ebx
64020c16:	cmp    DWORD PTR [ebp-0x10],ebx
64020c19:	jle    0x64020c4f
64020c1b:	dec    DWORD PTR [esi+0x4]
64020c1e:	js     0x64020c32
64020c20:	mov    eax,DWORD PTR [esi]
64020c22:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
64020c26:	mov    BYTE PTR [eax],cl
64020c28:	mov    ecx,DWORD PTR [esi]
64020c2a:	movzx  eax,BYTE PTR [ecx]
64020c2d:	inc    ecx
64020c2e:	mov    DWORD PTR [esi],ecx
64020c30:	jmp    0x64020c40
64020c32:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
64020c37:	push   esi
64020c38:	push   eax
64020c39:	call   0x64019a4f
64020c3e:	pop    ecx
64020c3f:	pop    ecx
64020c40:	cmp    eax,0xffffffff
64020c43:	je     0x64020b80
64020c49:	inc    ebx
64020c4a:	cmp    ebx,DWORD PTR [ebp-0x10]
64020c4d:	jl     0x64020c1b
64020c4f:	mov    ax,WORD PTR [ebp+0x8]
64020c53:	jmp    0x64020c75
64020c55:	add    DWORD PTR [esi+0x4],0xfffffffe
64020c59:	js     0x64020c68
64020c5b:	mov    ecx,DWORD PTR [esi]
64020c5d:	mov    eax,DWORD PTR [ebp+0x8]
64020c60:	mov    WORD PTR [ecx],ax
64020c63:	add    DWORD PTR [esi],0x2
64020c66:	jmp    0x64020c75
64020c68:	movzx  eax,WORD PTR [ebp+0x8]
64020c6c:	push   esi
64020c6d:	push   eax
64020c6e:	call   0x64021679
64020c73:	pop    ecx
64020c74:	pop    ecx
64020c75:	mov    ecx,DWORD PTR [ebp-0x4]
64020c78:	pop    edi
64020c79:	pop    esi
64020c7a:	xor    ecx,ebp
64020c7c:	pop    ebx
64020c7d:	call   0x64013d06
64020c82:	leave  
64020c83:	ret    
64020c84:	mov    ax,WORD PTR [esp+0x4]
64020c89:	cmp    ax,0x30
64020c8d:	jb     0x64020e02
64020c93:	cmp    ax,0x3a
64020c97:	jae    0x64020ca0
64020c99:	movzx  eax,ax
64020c9c:	sub    eax,0x30
64020c9f:	ret    
64020ca0:	mov    ecx,0xff10
64020ca5:	cmp    ax,cx
64020ca8:	jae    0x64020df8
64020cae:	mov    ecx,0x660
64020cb3:	cmp    ax,cx
64020cb6:	jb     0x64020e02
64020cbc:	cmp    ax,0x66a
64020cc0:	jae    0x64020cc8
64020cc2:	movzx  eax,ax
64020cc5:	sub    eax,ecx
64020cc7:	ret    
64020cc8:	mov    ecx,0x6f0
64020ccd:	cmp    ax,cx
64020cd0:	jb     0x64020e02
64020cd6:	cmp    ax,0x6fa
64020cda:	jb     0x64020cc2
64020cdc:	mov    ecx,0x966
64020ce1:	cmp    ax,cx
64020ce4:	jb     0x64020e02
64020cea:	cmp    ax,0x970
64020cee:	jb     0x64020cc2
64020cf0:	mov    ecx,0x9e6
64020cf5:	cmp    ax,cx
64020cf8:	jb     0x64020e02
64020cfe:	cmp    ax,0x9f0
64020d02:	jb     0x64020cc2
64020d04:	mov    ecx,0xa66
64020d09:	cmp    ax,cx
64020d0c:	jb     0x64020e02
64020d12:	cmp    ax,0xa70
64020d16:	jb     0x64020cc2
64020d18:	mov    ecx,0xae6
64020d1d:	cmp    ax,cx
64020d20:	jb     0x64020e02
64020d26:	cmp    ax,0xaf0
64020d2a:	jb     0x64020cc2
64020d2c:	mov    ecx,0xb66
64020d31:	cmp    ax,cx
64020d34:	jb     0x64020e02
64020d3a:	cmp    ax,0xb70
64020d3e:	jb     0x64020cc2
64020d40:	mov    ecx,0xc66
64020d45:	cmp    ax,cx
64020d48:	jb     0x64020e02
64020d4e:	cmp    ax,0xc70
64020d52:	jb     0x64020cc2
64020d58:	mov    ecx,0xce6
64020d5d:	cmp    ax,cx
64020d60:	jb     0x64020e02
64020d66:	cmp    ax,0xcf0
64020d6a:	jb     0x64020cc2
64020d70:	mov    ecx,0xd66
64020d75:	cmp    ax,cx
64020d78:	jb     0x64020e02
64020d7e:	cmp    ax,0xd70
64020d82:	jb     0x64020cc2
64020d88:	mov    ecx,0xe50
64020d8d:	cmp    ax,cx
64020d90:	jb     0x64020e02
64020d92:	cmp    ax,0xe5a
64020d96:	jb     0x64020cc2
64020d9c:	mov    ecx,0xed0
64020da1:	cmp    ax,cx
64020da4:	jb     0x64020e02
64020da6:	cmp    ax,0xeda
64020daa:	jb     0x64020cc2
64020db0:	add    ecx,0x50
64020db3:	cmp    ax,cx
64020db6:	jb     0x64020e02
64020db8:	cmp    ax,0xf2a
64020dbc:	jb     0x64020cc2
64020dc2:	mov    ecx,0x1040
64020dc7:	cmp    ax,cx
64020dca:	jb     0x64020e02
64020dcc:	cmp    ax,0x104a
64020dd0:	jb     0x64020cc2
64020dd6:	mov    ecx,0x17e0
64020ddb:	cmp    ax,cx
64020dde:	jb     0x64020e02
64020de0:	cmp    ax,0x17ea
64020de4:	jb     0x64020cc2
64020dea:	add    ecx,0x30
64020ded:	cmp    ax,cx
64020df0:	jb     0x64020e02
64020df2:	cmp    ax,0x181a
64020df6:	jmp    0x64020dfc
64020df8:	cmp    ax,0xff1a
64020dfc:	jb     0x64020cc2
64020e02:	or     eax,0xffffffff
64020e05:	ret    
64020e06:	int3   
64020e07:	int3   
64020e08:	int3   
64020e09:	int3   
64020e0a:	int3   
64020e0b:	int3   
64020e0c:	int3   
64020e0d:	int3   
64020e0e:	int3   
64020e0f:	int3   
64020e10:	mov    eax,DWORD PTR [esp+0x8]
64020e14:	mov    ecx,DWORD PTR [esp+0x10]
64020e18:	or     ecx,eax
64020e1a:	mov    ecx,DWORD PTR [esp+0xc]
64020e1e:	jne    0x64020e29
64020e20:	mov    eax,DWORD PTR [esp+0x4]
64020e24:	mul    ecx
64020e26:	ret    0x10
64020e29:	push   ebx
64020e2a:	mul    ecx
64020e2c:	mov    ebx,eax
64020e2e:	mov    eax,DWORD PTR [esp+0x8]
64020e32:	mul    DWORD PTR [esp+0x14]
64020e36:	add    ebx,eax
64020e38:	mov    eax,DWORD PTR [esp+0x8]
64020e3c:	mul    ecx
64020e3e:	add    edx,ebx
64020e40:	pop    ebx
64020e41:	ret    0x10
64020e44:	push   ebp
64020e45:	mov    ebp,esp
64020e47:	sub    esp,0x14
64020e4a:	push   esi
64020e4b:	push   edi
64020e4c:	push   DWORD PTR [ebp+0x8]
64020e4f:	lea    ecx,[ebp-0x14]
64020e52:	call   0x64014325
64020e57:	mov    eax,DWORD PTR [ebp+0x10]
64020e5a:	mov    esi,DWORD PTR [ebp+0xc]
64020e5d:	xor    edi,edi
64020e5f:	cmp    eax,edi
64020e61:	je     0x64020e65
64020e63:	mov    DWORD PTR [eax],esi
64020e65:	cmp    esi,edi
64020e67:	jne    0x64020e95
64020e69:	call   0x640164c3
64020e6e:	push   edi
64020e6f:	push   edi
64020e70:	push   edi
64020e71:	push   edi
64020e72:	push   edi
64020e73:	mov    DWORD PTR [eax],0x16
64020e79:	call   0x64013e52
64020e7e:	add    esp,0x14
64020e81:	cmp    BYTE PTR [ebp-0x8],0x0
64020e85:	je     0x64020e8e
64020e87:	mov    eax,DWORD PTR [ebp-0xc]
64020e8a:	and    DWORD PTR [eax+0x70],0xfffffffd
64020e8e:	xor    eax,eax
64020e90:	jmp    0x6402106b
64020e95:	cmp    DWORD PTR [ebp+0x14],edi
64020e98:	je     0x64020ea6
64020e9a:	cmp    DWORD PTR [ebp+0x14],0x2
64020e9e:	jl     0x64020e69
64020ea0:	cmp    DWORD PTR [ebp+0x14],0x24
64020ea4:	jg     0x64020e69
64020ea6:	mov    ecx,DWORD PTR [ebp-0x14]
64020ea9:	push   ebx
64020eaa:	mov    bl,BYTE PTR [esi]
64020eac:	mov    DWORD PTR [ebp-0x4],edi
64020eaf:	lea    edi,[esi+0x1]
64020eb2:	cmp    DWORD PTR [ecx+0xac],0x1
64020eb9:	jle    0x64020ed2
64020ebb:	lea    eax,[ebp-0x14]
64020ebe:	push   eax
64020ebf:	movzx  eax,bl
64020ec2:	push   0x8
64020ec4:	push   eax
64020ec5:	call   0x6401a5e4
64020eca:	mov    ecx,DWORD PTR [ebp-0x14]
64020ecd:	add    esp,0xc
64020ed0:	jmp    0x64020ee2
64020ed2:	mov    edx,DWORD PTR [ecx+0xc8]
64020ed8:	movzx  eax,bl
64020edb:	movzx  eax,BYTE PTR [edx+eax*2]
64020edf:	and    eax,0x8
64020ee2:	test   eax,eax
64020ee4:	je     0x64020eeb
64020ee6:	mov    bl,BYTE PTR [edi]
64020ee8:	inc    edi
64020ee9:	jmp    0x64020eb2
64020eeb:	cmp    bl,0x2d
64020eee:	jne    0x64020ef6
64020ef0:	or     DWORD PTR [ebp+0x18],0x2
64020ef4:	jmp    0x64020efb
64020ef6:	cmp    bl,0x2b
64020ef9:	jne    0x64020efe
64020efb:	mov    bl,BYTE PTR [edi]
64020efd:	inc    edi
64020efe:	mov    eax,DWORD PTR [ebp+0x14]
64020f01:	test   eax,eax
64020f03:	jl     0x64021052
64020f09:	cmp    eax,0x1
64020f0c:	je     0x64021052
64020f12:	cmp    eax,0x24
64020f15:	jg     0x64021052
64020f1b:	test   eax,eax
64020f1d:	jne    0x64020f49
64020f1f:	cmp    bl,0x30
64020f22:	je     0x64020f2d
64020f24:	mov    DWORD PTR [ebp+0x14],0xa
64020f2b:	jmp    0x64020f61
64020f2d:	mov    al,BYTE PTR [edi]
64020f2f:	cmp    al,0x78
64020f31:	je     0x64020f40
64020f33:	cmp    al,0x58
64020f35:	je     0x64020f40
64020f37:	mov    DWORD PTR [ebp+0x14],0x8
64020f3e:	jmp    0x64020f61
64020f40:	mov    DWORD PTR [ebp+0x14],0x10
64020f47:	jmp    0x64020f53
64020f49:	cmp    eax,0x10
64020f4c:	jne    0x64020f61
64020f4e:	cmp    bl,0x30
64020f51:	jne    0x64020f61
64020f53:	mov    al,BYTE PTR [edi]
64020f55:	cmp    al,0x78
64020f57:	je     0x64020f5d
64020f59:	cmp    al,0x58
64020f5b:	jne    0x64020f61
64020f5d:	inc    edi
64020f5e:	mov    bl,BYTE PTR [edi]
64020f60:	inc    edi
64020f61:	mov    esi,DWORD PTR [ecx+0xc8]
64020f67:	or     eax,0xffffffff
64020f6a:	xor    edx,edx
64020f6c:	div    DWORD PTR [ebp+0x14]
64020f6f:	movzx  ecx,bl
64020f72:	movzx  ecx,WORD PTR [esi+ecx*2]
64020f76:	test   cl,0x4
64020f79:	je     0x64020f83
64020f7b:	movsx  ecx,bl
64020f7e:	sub    ecx,0x30
64020f81:	jmp    0x64020f9d
64020f83:	test   cx,0x103
64020f88:	je     0x64020fbb
64020f8a:	mov    cl,bl
64020f8c:	sub    cl,0x61
64020f8f:	cmp    cl,0x19
64020f92:	movsx  ecx,bl
64020f95:	ja     0x64020f9a
64020f97:	sub    ecx,0x20
64020f9a:	add    ecx,0xffffffc9
64020f9d:	cmp    ecx,DWORD PTR [ebp+0x14]
64020fa0:	jae    0x64020fbb
64020fa2:	or     DWORD PTR [ebp+0x18],0x8
64020fa6:	cmp    DWORD PTR [ebp-0x4],eax
64020fa9:	jb     0x64020fd2
64020fab:	jne    0x64020fb1
64020fad:	cmp    ecx,edx
64020faf:	jbe    0x64020fd2
64020fb1:	or     DWORD PTR [ebp+0x18],0x4
64020fb5:	cmp    DWORD PTR [ebp+0x10],0x0
64020fb9:	jne    0x64020fde
64020fbb:	mov    eax,DWORD PTR [ebp+0x18]
64020fbe:	dec    edi
64020fbf:	test   al,0x8
64020fc1:	jne    0x64020fe3
64020fc3:	cmp    DWORD PTR [ebp+0x10],0x0
64020fc7:	je     0x64020fcc
64020fc9:	mov    edi,DWORD PTR [ebp+0xc]
64020fcc:	and    DWORD PTR [ebp-0x4],0x0
64020fd0:	jmp    0x6402102e
64020fd2:	mov    ebx,DWORD PTR [ebp-0x4]
64020fd5:	imul   ebx,DWORD PTR [ebp+0x14]
64020fd9:	add    ebx,ecx
64020fdb:	mov    DWORD PTR [ebp-0x4],ebx
64020fde:	mov    bl,BYTE PTR [edi]
64020fe0:	inc    edi
64020fe1:	jmp    0x64020f6f
64020fe3:	test   al,0x4
64020fe5:	mov    esi,0x7fffffff
64020fea:	jne    0x64021007
64020fec:	test   al,0x1
64020fee:	jne    0x6402102e
64020ff0:	and    eax,0x2
64020ff3:	je     0x64020ffe
64020ff5:	cmp    DWORD PTR [ebp-0x4],0x80000000
64020ffc:	ja     0x64021007
64020ffe:	test   eax,eax
64021000:	jne    0x6402102e
64021002:	cmp    DWORD PTR [ebp-0x4],esi
64021005:	jbe    0x6402102e
64021007:	call   0x640164c3
6402100c:	test   BYTE PTR [ebp+0x18],0x1
64021010:	mov    DWORD PTR [eax],0x22
64021016:	je     0x6402101e
64021018:	or     DWORD PTR [ebp-0x4],0xffffffff
6402101c:	jmp    0x6402102e
6402101e:	mov    al,BYTE PTR [ebp+0x18]
64021021:	and    al,0x2
64021023:	neg    al
64021025:	sbb    eax,eax
64021027:	neg    eax
64021029:	add    eax,esi
6402102b:	mov    DWORD PTR [ebp-0x4],eax
6402102e:	mov    eax,DWORD PTR [ebp+0x10]
64021031:	test   eax,eax
64021033:	je     0x64021037
64021035:	mov    DWORD PTR [eax],edi
64021037:	test   BYTE PTR [ebp+0x18],0x2
6402103b:	je     0x64021040
6402103d:	neg    DWORD PTR [ebp-0x4]
64021040:	cmp    BYTE PTR [ebp-0x8],0x0
64021044:	je     0x6402104d
64021046:	mov    eax,DWORD PTR [ebp-0xc]
64021049:	and    DWORD PTR [eax+0x70],0xfffffffd
6402104d:	mov    eax,DWORD PTR [ebp-0x4]
64021050:	jmp    0x6402106a
64021052:	mov    eax,DWORD PTR [ebp+0x10]
64021055:	test   eax,eax
64021057:	je     0x6402105b
64021059:	mov    DWORD PTR [eax],esi
6402105b:	cmp    BYTE PTR [ebp-0x8],0x0
6402105f:	je     0x64021068
64021061:	mov    eax,DWORD PTR [ebp-0xc]
64021064:	and    DWORD PTR [eax+0x70],0xfffffffd
64021068:	xor    eax,eax
6402106a:	pop    ebx
6402106b:	pop    edi
6402106c:	pop    esi
6402106d:	leave  
6402106e:	ret    
6402106f:	push   ebp
64021070:	mov    ebp,esp
64021072:	xor    eax,eax
64021074:	cmp    DWORD PTR ds:0x64038ea8,eax
6402107a:	push   eax
6402107b:	push   DWORD PTR [ebp+0x10]
6402107e:	push   DWORD PTR [ebp+0xc]
64021081:	push   DWORD PTR [ebp+0x8]
64021084:	jne    0x6402108d
64021086:	push   0x64037ff8
6402108b:	jmp    0x6402108e
6402108d:	push   eax
6402108e:	call   0x64020e44
64021093:	add    esp,0x14
64021096:	pop    ebp
64021097:	ret    
64021098:	push   0xc
6402109a:	push   0x6402bbc8
6402109f:	call   0x64015f14
640210a4:	and    DWORD PTR [ebp-0x4],0x0
640210a8:	movapd xmm0,xmm1
640210ac:	mov    DWORD PTR [ebp-0x1c],0x1
640210b3:	jmp    0x640210d8
640210b5:	mov    eax,DWORD PTR [ebp-0x14]
640210b8:	mov    eax,DWORD PTR [eax]
640210ba:	mov    eax,DWORD PTR [eax]
640210bc:	cmp    eax,0xc0000005
640210c1:	je     0x640210cd
640210c3:	cmp    eax,0xc000001d
640210c8:	je     0x640210cd
640210ca:	xor    eax,eax
640210cc:	ret    
640210cd:	xor    eax,eax
640210cf:	inc    eax
640210d0:	ret    
640210d1:	mov    esp,DWORD PTR [ebp-0x18]
640210d4:	and    DWORD PTR [ebp-0x1c],0x0
640210d8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640210df:	mov    eax,DWORD PTR [ebp-0x1c]
640210e2:	call   0x64015f59
640210e7:	ret    
640210e8:	push   ebp
640210e9:	mov    ebp,esp
640210eb:	sub    esp,0x18
640210ee:	xor    eax,eax
640210f0:	push   ebx
640210f1:	mov    DWORD PTR [ebp-0x4],eax
640210f4:	mov    DWORD PTR [ebp-0xc],eax
640210f7:	mov    DWORD PTR [ebp-0x8],eax
640210fa:	push   ebx
640210fb:	pushf  
640210fc:	pop    eax
640210fd:	mov    ecx,eax
640210ff:	xor    eax,0x200000
64021104:	push   eax
64021105:	popf   
64021106:	pushf  
64021107:	pop    edx
64021108:	sub    edx,ecx
6402110a:	je     0x6402112b
6402110c:	push   ecx
6402110d:	popf   
6402110e:	xor    eax,eax
64021110:	cpuid  
64021112:	mov    DWORD PTR [ebp-0xc],eax
64021115:	mov    DWORD PTR [ebp-0x18],ebx
64021118:	mov    DWORD PTR [ebp-0x14],edx
6402111b:	mov    DWORD PTR [ebp-0x10],ecx
6402111e:	mov    eax,0x1
64021123:	cpuid  
64021125:	mov    DWORD PTR [ebp-0x4],edx
64021128:	mov    DWORD PTR [ebp-0x8],eax
6402112b:	pop    ebx
6402112c:	test   DWORD PTR [ebp-0x4],0x4000000
64021133:	je     0x64021143
64021135:	call   0x64021098
6402113a:	test   eax,eax
6402113c:	je     0x64021143
6402113e:	xor    eax,eax
64021140:	inc    eax
64021141:	jmp    0x64021145
64021143:	xor    eax,eax
64021145:	pop    ebx
64021146:	leave  
64021147:	ret    
64021148:	call   0x640210e8
6402114d:	mov    ds:0x64039b24,eax
64021152:	xor    eax,eax
64021154:	ret    
64021155:	push   0xa
64021157:	push   0x0
64021159:	push   DWORD PTR [esp+0xc]
6402115d:	call   0x6402106f
64021162:	add    esp,0xc
64021165:	ret    
64021166:	push   0x2
64021168:	call   0x64017e16
6402116d:	pop    ecx
6402116e:	ret    
6402116f:	xor    eax,eax
64021171:	push   eax
64021172:	push   eax
64021173:	push   0x3
64021175:	push   eax
64021176:	push   0x3
64021178:	push   0x40000000
6402117d:	push   0x64029560
64021182:	call   DWORD PTR ds:0x6402413c
64021188:	mov    ds:0x64038954,eax
6402118d:	ret    
6402118e:	mov    eax,ds:0x64038954
64021193:	cmp    eax,0xffffffff
64021196:	push   esi
64021197:	mov    esi,DWORD PTR ds:0x6402406c
6402119d:	je     0x640211a7
6402119f:	cmp    eax,0xfffffffe
640211a2:	je     0x640211a7
640211a4:	push   eax
640211a5:	call   esi
640211a7:	mov    eax,ds:0x64038950
640211ac:	cmp    eax,0xffffffff
640211af:	je     0x640211b9
640211b1:	cmp    eax,0xfffffffe
640211b4:	je     0x640211b9
640211b6:	push   eax
640211b7:	call   esi
640211b9:	pop    esi
640211ba:	ret    
640211bb:	push   ebp
640211bc:	mov    ebp,esp
640211be:	sub    esp,0x28
640211c1:	mov    eax,ds:0x64037644
640211c6:	xor    eax,ebp
640211c8:	mov    DWORD PTR [ebp-0x4],eax
640211cb:	push   ebx
640211cc:	push   esi
640211cd:	mov    esi,DWORD PTR [ebp+0x8]
640211d0:	push   edi
640211d1:	push   DWORD PTR [ebp+0x10]
640211d4:	mov    edi,DWORD PTR [ebp+0xc]
640211d7:	lea    ecx,[ebp-0x24]
640211da:	call   0x64014325
640211df:	lea    eax,[ebp-0x24]
640211e2:	push   eax
640211e3:	xor    ebx,ebx
640211e5:	push   ebx
640211e6:	push   ebx
640211e7:	push   ebx
640211e8:	push   ebx
640211e9:	push   edi
640211ea:	lea    eax,[ebp-0x28]
640211ed:	push   eax
640211ee:	lea    eax,[ebp-0x10]
640211f1:	push   eax
640211f2:	call   0x64021851
640211f7:	mov    DWORD PTR [ebp-0x14],eax
640211fa:	lea    eax,[ebp-0x10]
640211fd:	push   esi
640211fe:	push   eax
640211ff:	call   0x6401f0b8
64021204:	add    esp,0x28
64021207:	test   BYTE PTR [ebp-0x14],0x3
6402120b:	jne    0x64021238
6402120d:	cmp    eax,0x1
64021210:	jne    0x64021223
64021212:	cmp    BYTE PTR [ebp-0x18],bl
64021215:	je     0x6402121e
64021217:	mov    eax,DWORD PTR [ebp-0x1c]
6402121a:	and    DWORD PTR [eax+0x70],0xfffffffd
6402121e:	push   0x3
64021220:	pop    eax
64021221:	jmp    0x64021252
64021223:	cmp    eax,0x2
64021226:	jne    0x64021244
64021228:	cmp    BYTE PTR [ebp-0x18],bl
6402122b:	je     0x64021234
6402122d:	mov    eax,DWORD PTR [ebp-0x1c]
64021230:	and    DWORD PTR [eax+0x70],0xfffffffd
64021234:	push   0x4
64021236:	jmp    0x64021220
64021238:	test   BYTE PTR [ebp-0x14],0x1
6402123c:	jne    0x64021228
6402123e:	test   BYTE PTR [ebp-0x14],0x2
64021242:	jne    0x64021212
64021244:	cmp    BYTE PTR [ebp-0x18],bl
64021247:	je     0x64021250
64021249:	mov    eax,DWORD PTR [ebp-0x1c]
6402124c:	and    DWORD PTR [eax+0x70],0xfffffffd
64021250:	xor    eax,eax
64021252:	mov    ecx,DWORD PTR [ebp-0x4]
64021255:	pop    edi
64021256:	pop    esi
64021257:	xor    ecx,ebp
64021259:	pop    ebx
6402125a:	call   0x64013d06
6402125f:	leave  
64021260:	ret    
64021261:	push   ebp
64021262:	mov    ebp,esp
64021264:	sub    esp,0x28
64021267:	mov    eax,ds:0x64037644
6402126c:	xor    eax,ebp
6402126e:	mov    DWORD PTR [ebp-0x4],eax
64021271:	push   ebx
64021272:	push   esi
64021273:	mov    esi,DWORD PTR [ebp+0x8]
64021276:	push   edi
64021277:	push   DWORD PTR [ebp+0x10]
6402127a:	mov    edi,DWORD PTR [ebp+0xc]
6402127d:	lea    ecx,[ebp-0x24]
64021280:	call   0x64014325
64021285:	lea    eax,[ebp-0x24]
64021288:	push   eax
64021289:	xor    ebx,ebx
6402128b:	push   ebx
6402128c:	push   ebx
6402128d:	push   ebx
6402128e:	push   ebx
6402128f:	push   edi
64021290:	lea    eax,[ebp-0x28]
64021293:	push   eax
64021294:	lea    eax,[ebp-0x10]
64021297:	push   eax
64021298:	call   0x64021851
6402129d:	mov    DWORD PTR [ebp-0x14],eax
640212a0:	lea    eax,[ebp-0x10]
640212a3:	push   esi
640212a4:	push   eax
640212a5:	call   0x6401f5fa
640212aa:	add    esp,0x28
640212ad:	test   BYTE PTR [ebp-0x14],0x3
640212b1:	jne    0x640212de
640212b3:	cmp    eax,0x1
640212b6:	jne    0x640212c9
640212b8:	cmp    BYTE PTR [ebp-0x18],bl
640212bb:	je     0x640212c4
640212bd:	mov    eax,DWORD PTR [ebp-0x1c]
640212c0:	and    DWORD PTR [eax+0x70],0xfffffffd
640212c4:	push   0x3
640212c6:	pop    eax
640212c7:	jmp    0x640212f8
640212c9:	cmp    eax,0x2
640212cc:	jne    0x640212ea
640212ce:	cmp    BYTE PTR [ebp-0x18],bl
640212d1:	je     0x640212da
640212d3:	mov    eax,DWORD PTR [ebp-0x1c]
640212d6:	and    DWORD PTR [eax+0x70],0xfffffffd
640212da:	push   0x4
640212dc:	jmp    0x640212c6
640212de:	test   BYTE PTR [ebp-0x14],0x1
640212e2:	jne    0x640212ce
640212e4:	test   BYTE PTR [ebp-0x14],0x2
640212e8:	jne    0x640212b8
640212ea:	cmp    BYTE PTR [ebp-0x18],bl
640212ed:	je     0x640212f6
640212ef:	mov    eax,DWORD PTR [ebp-0x1c]
640212f2:	and    DWORD PTR [eax+0x70],0xfffffffd
640212f6:	xor    eax,eax
640212f8:	mov    ecx,DWORD PTR [ebp-0x4]
640212fb:	pop    edi
640212fc:	pop    esi
640212fd:	xor    ecx,ebp
640212ff:	pop    ebx
64021300:	call   0x64013d06
64021305:	leave  
64021306:	ret    
64021307:	push   ebp
64021308:	mov    ebp,esp
6402130a:	mov    ecx,DWORD PTR [ebp+0x14]
6402130d:	push   ebx
6402130e:	push   esi
6402130f:	mov    esi,DWORD PTR [ebp+0x8]
64021312:	xor    ebx,ebx
64021314:	cmp    esi,ebx
64021316:	push   edi
64021317:	mov    edi,DWORD PTR [ecx+0xc]
6402131a:	jne    0x6402133a
6402131c:	call   0x640164c3
64021321:	push   0x16
64021323:	pop    esi
64021324:	mov    DWORD PTR [eax],esi
64021326:	push   ebx
64021327:	push   ebx
64021328:	push   ebx
64021329:	push   ebx
6402132a:	push   ebx
6402132b:	call   0x64013e52
64021330:	add    esp,0x14
64021333:	mov    eax,esi
64021335:	jmp    0x640213bf
6402133a:	cmp    DWORD PTR [ebp+0xc],ebx
6402133d:	jbe    0x6402131c
6402133f:	mov    edx,DWORD PTR [ebp+0x10]
64021342:	cmp    edx,ebx
64021344:	mov    BYTE PTR [esi],bl
64021346:	jle    0x6402134c
64021348:	mov    eax,edx
6402134a:	jmp    0x6402134e
6402134c:	xor    eax,eax
6402134e:	inc    eax
6402134f:	cmp    DWORD PTR [ebp+0xc],eax
64021352:	ja     0x64021362
64021354:	call   0x640164c3
64021359:	push   0x22
6402135b:	pop    ecx
6402135c:	mov    DWORD PTR [eax],ecx
6402135e:	mov    esi,ecx
64021360:	jmp    0x64021326
64021362:	cmp    edx,ebx
64021364:	mov    BYTE PTR [esi],0x30
64021367:	lea    eax,[esi+0x1]
6402136a:	jle    0x64021386
6402136c:	mov    cl,BYTE PTR [edi]
6402136e:	cmp    cl,bl
64021370:	je     0x64021378
64021372:	movsx  ecx,cl
64021375:	inc    edi
64021376:	jmp    0x6402137b
64021378:	push   0x30
6402137a:	pop    ecx
6402137b:	mov    BYTE PTR [eax],cl
6402137d:	inc    eax
6402137e:	dec    edx
6402137f:	cmp    edx,ebx
64021381:	jg     0x6402136c
64021383:	mov    ecx,DWORD PTR [ebp+0x14]
64021386:	cmp    edx,ebx
64021388:	mov    BYTE PTR [eax],bl
6402138a:	jl     0x6402139e
6402138c:	cmp    BYTE PTR [edi],0x35
6402138f:	jl     0x6402139e
64021391:	jmp    0x64021396
64021393:	mov    BYTE PTR [eax],0x30
64021396:	dec    eax
64021397:	cmp    BYTE PTR [eax],0x39
6402139a:	je     0x64021393
6402139c:	inc    BYTE PTR [eax]
6402139e:	cmp    BYTE PTR [esi],0x31
640213a1:	jne    0x640213a8
640213a3:	inc    DWORD PTR [ecx+0x4]
640213a6:	jmp    0x640213bd
640213a8:	lea    edi,[esi+0x1]
640213ab:	push   edi
640213ac:	call   0x64015550
640213b1:	inc    eax
640213b2:	push   eax
640213b3:	push   edi
640213b4:	push   esi
640213b5:	call   0x64016510
640213ba:	add    esp,0x10
640213bd:	xor    eax,eax
640213bf:	pop    edi
640213c0:	pop    esi
640213c1:	pop    ebx
640213c2:	pop    ebp
640213c3:	ret    
640213c4:	push   ebp
640213c5:	mov    ebp,esp
640213c7:	push   ecx
640213c8:	mov    edx,DWORD PTR [ebp+0xc]
640213cb:	movzx  eax,WORD PTR [edx+0x6]
640213cf:	push   ebx
640213d0:	mov    ecx,eax
640213d2:	push   esi
640213d3:	push   edi
640213d4:	shr    ecx,0x4
640213d7:	and    eax,0x8000
640213dc:	mov    edi,0x7ff
640213e1:	and    ecx,edi
640213e3:	mov    DWORD PTR [ebp+0xc],eax
640213e6:	mov    eax,DWORD PTR [edx+0x4]
640213e9:	mov    edx,DWORD PTR [edx]
640213eb:	movzx  ebx,cx
640213ee:	mov    esi,0x80000000
640213f3:	and    eax,0xfffff
640213f8:	test   ebx,ebx
640213fa:	mov    DWORD PTR [ebp-0x4],esi
640213fd:	je     0x64021412
640213ff:	cmp    ebx,edi
64021401:	je     0x6402140b
64021403:	add    ecx,0x3c00
64021409:	jmp    0x64021433
6402140b:	mov    edi,0x7fff
64021410:	jmp    0x64021436
64021412:	xor    ebx,ebx
64021414:	cmp    eax,ebx
64021416:	jne    0x6402142a
64021418:	cmp    edx,ebx
6402141a:	jne    0x6402142a
6402141c:	mov    eax,DWORD PTR [ebp+0x8]
6402141f:	mov    cx,WORD PTR [ebp+0xc]
64021423:	mov    DWORD PTR [eax+0x4],ebx
64021426:	mov    DWORD PTR [eax],ebx
64021428:	jmp    0x64021476
6402142a:	add    ecx,0x3c01
64021430:	mov    DWORD PTR [ebp-0x4],ebx
64021433:	movzx  edi,cx
64021436:	mov    ecx,edx
64021438:	shr    ecx,0x15
6402143b:	shl    eax,0xb
6402143e:	or     ecx,eax
64021440:	or     ecx,DWORD PTR [ebp-0x4]
64021443:	mov    eax,DWORD PTR [ebp+0x8]
64021446:	shl    edx,0xb
64021449:	test   esi,ecx
6402144b:	mov    DWORD PTR [eax+0x4],ecx
6402144e:	mov    DWORD PTR [eax],edx
64021450:	jne    0x64021471
64021452:	mov    ecx,DWORD PTR [eax]
64021454:	mov    edx,DWORD PTR [eax+0x4]
64021457:	mov    ebx,ecx
64021459:	add    edx,edx
6402145b:	shr    ebx,0x1f
6402145e:	or     edx,ebx
64021460:	add    ecx,ecx
64021462:	add    edi,0xffff
64021468:	test   esi,edx
6402146a:	mov    DWORD PTR [eax+0x4],edx
6402146d:	mov    DWORD PTR [eax],ecx
6402146f:	je     0x64021452
64021471:	mov    ecx,DWORD PTR [ebp+0xc]
64021474:	or     ecx,edi
64021476:	pop    edi
64021477:	pop    esi
64021478:	mov    WORD PTR [eax+0x8],cx
6402147c:	pop    ebx
6402147d:	leave  
6402147e:	ret    
6402147f:	push   ebp
64021480:	mov    ebp,esp
64021482:	sub    esp,0x30
64021485:	mov    eax,ds:0x64037644
6402148a:	xor    eax,ebp
6402148c:	mov    DWORD PTR [ebp-0x4],eax
6402148f:	mov    eax,DWORD PTR [ebp+0x14]
64021492:	push   ebx
64021493:	mov    ebx,DWORD PTR [ebp+0x10]
64021496:	push   esi
64021497:	mov    DWORD PTR [ebp-0x30],eax
6402149a:	push   edi
6402149b:	lea    eax,[ebp+0x8]
6402149e:	push   eax
6402149f:	lea    eax,[ebp-0x10]
640214a2:	push   eax
640214a3:	call   0x640213c4
640214a8:	pop    ecx
640214a9:	pop    ecx
640214aa:	lea    eax,[ebp-0x2c]
640214ad:	push   eax
640214ae:	push   0x0
640214b0:	push   0x11
640214b2:	sub    esp,0xc
640214b5:	lea    esi,[ebp-0x10]
640214b8:	mov    edi,esp
640214ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640214bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640214bc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
640214be:	call   0x64021f11
640214c3:	mov    esi,DWORD PTR [ebp-0x30]
640214c6:	mov    DWORD PTR [ebx+0x8],eax
640214c9:	movsx  eax,BYTE PTR [ebp-0x2a]
640214cd:	mov    DWORD PTR [ebx],eax
640214cf:	movsx  eax,WORD PTR [ebp-0x2c]
640214d3:	mov    DWORD PTR [ebx+0x4],eax
640214d6:	lea    eax,[ebp-0x28]
640214d9:	push   eax
640214da:	push   DWORD PTR [ebp+0x18]
640214dd:	push   esi
640214de:	call   0x64016321
640214e3:	add    esp,0x24
640214e6:	test   eax,eax
640214e8:	je     0x640214f9
640214ea:	xor    eax,eax
640214ec:	push   eax
640214ed:	push   eax
640214ee:	push   eax
640214ef:	push   eax
640214f0:	push   eax
640214f1:	call   0x64013d56
640214f6:	add    esp,0x14
640214f9:	mov    ecx,DWORD PTR [ebp-0x4]
640214fc:	pop    edi
640214fd:	mov    DWORD PTR [ebx+0xc],esi
64021500:	pop    esi
64021501:	mov    eax,ebx
64021503:	xor    ecx,ebp
64021505:	pop    ebx
64021506:	call   0x64013d06
6402150b:	leave  
6402150c:	ret    
6402150d:	int3   
6402150e:	int3   
6402150f:	int3   
64021510:	push   edi
64021511:	push   esi
64021512:	push   ebp
64021513:	xor    edi,edi
64021515:	xor    ebp,ebp
64021517:	mov    eax,DWORD PTR [esp+0x14]
6402151b:	or     eax,eax
6402151d:	jge    0x64021534
6402151f:	inc    edi
64021520:	inc    ebp
64021521:	mov    edx,DWORD PTR [esp+0x10]
64021525:	neg    eax
64021527:	neg    edx
64021529:	sbb    eax,0x0
6402152c:	mov    DWORD PTR [esp+0x14],eax
64021530:	mov    DWORD PTR [esp+0x10],edx
64021534:	mov    eax,DWORD PTR [esp+0x1c]
64021538:	or     eax,eax
6402153a:	jge    0x64021550
6402153c:	inc    edi
6402153d:	mov    edx,DWORD PTR [esp+0x18]
64021541:	neg    eax
64021543:	neg    edx
64021545:	sbb    eax,0x0
64021548:	mov    DWORD PTR [esp+0x1c],eax
6402154c:	mov    DWORD PTR [esp+0x18],edx
64021550:	or     eax,eax
64021552:	jne    0x6402157c
64021554:	mov    ecx,DWORD PTR [esp+0x18]
64021558:	mov    eax,DWORD PTR [esp+0x14]
6402155c:	xor    edx,edx
6402155e:	div    ecx
64021560:	mov    ebx,eax
64021562:	mov    eax,DWORD PTR [esp+0x10]
64021566:	div    ecx
64021568:	mov    esi,eax
6402156a:	mov    eax,ebx
6402156c:	mul    DWORD PTR [esp+0x18]
64021570:	mov    ecx,eax
64021572:	mov    eax,esi
64021574:	mul    DWORD PTR [esp+0x18]
64021578:	add    edx,ecx
6402157a:	jmp    0x640215c3
6402157c:	mov    ebx,eax
6402157e:	mov    ecx,DWORD PTR [esp+0x18]
64021582:	mov    edx,DWORD PTR [esp+0x14]
64021586:	mov    eax,DWORD PTR [esp+0x10]
6402158a:	shr    ebx,1
6402158c:	rcr    ecx,1
6402158e:	shr    edx,1
64021590:	rcr    eax,1
64021592:	or     ebx,ebx
64021594:	jne    0x6402158a
64021596:	div    ecx
64021598:	mov    esi,eax
6402159a:	mul    DWORD PTR [esp+0x1c]
6402159e:	mov    ecx,eax
640215a0:	mov    eax,DWORD PTR [esp+0x18]
640215a4:	mul    esi
640215a6:	add    edx,ecx
640215a8:	jb     0x640215b8
640215aa:	cmp    edx,DWORD PTR [esp+0x14]
640215ae:	ja     0x640215b8
640215b0:	jb     0x640215c1
640215b2:	cmp    eax,DWORD PTR [esp+0x10]
640215b6:	jbe    0x640215c1
640215b8:	dec    esi
640215b9:	sub    eax,DWORD PTR [esp+0x18]
640215bd:	sbb    edx,DWORD PTR [esp+0x1c]
640215c1:	xor    ebx,ebx
640215c3:	sub    eax,DWORD PTR [esp+0x10]
640215c7:	sbb    edx,DWORD PTR [esp+0x14]
640215cb:	dec    ebp
640215cc:	jns    0x640215d5
640215ce:	neg    edx
640215d0:	neg    eax
640215d2:	sbb    edx,0x0
640215d5:	mov    ecx,edx
640215d7:	mov    edx,ebx
640215d9:	mov    ebx,ecx
640215db:	mov    ecx,eax
640215dd:	mov    eax,esi
640215df:	dec    edi
640215e0:	jne    0x640215e9
640215e2:	neg    edx
640215e4:	neg    eax
640215e6:	sbb    edx,0x0
640215e9:	pop    ebp
640215ea:	pop    esi
640215eb:	pop    edi
640215ec:	ret    0x10
640215ef:	int3   
640215f0:	cmp    cl,0x40
640215f3:	jae    0x6402160a
640215f5:	cmp    cl,0x20
640215f8:	jae    0x64021600
640215fa:	shrd   eax,edx,cl
640215fd:	shr    edx,cl
640215ff:	ret    
64021600:	mov    eax,edx
64021602:	xor    edx,edx
64021604:	and    cl,0x1f
64021607:	shr    eax,cl
64021609:	ret    
6402160a:	xor    eax,eax
6402160c:	xor    edx,edx
6402160e:	ret    
6402160f:	push   ebp
64021610:	mov    ebp,esp
64021612:	mov    eax,DWORD PTR [ebp+0x10]
64021615:	mov    ecx,DWORD PTR [ebp+0xc]
64021618:	and    eax,0xfff7ffff
6402161d:	and    ecx,eax
6402161f:	test   ecx,0xfcf0fce0
64021625:	push   esi
64021626:	je     0x64021659
64021628:	push   edi
64021629:	mov    edi,DWORD PTR [ebp+0x8]
6402162c:	xor    esi,esi
6402162e:	cmp    edi,esi
64021630:	je     0x6402163d
64021632:	push   esi
64021633:	push   esi
64021634:	call   0x64022905
64021639:	pop    ecx
6402163a:	pop    ecx
6402163b:	mov    DWORD PTR [edi],eax
6402163d:	call   0x640164c3
64021642:	push   0x16
64021644:	pop    edi
64021645:	push   esi
64021646:	push   esi
64021647:	push   esi
64021648:	push   esi
64021649:	push   esi
6402164a:	mov    DWORD PTR [eax],edi
6402164c:	call   0x64013e52
64021651:	add    esp,0x14
64021654:	mov    eax,edi
64021656:	pop    edi
64021657:	jmp    0x64021676
64021659:	mov    esi,DWORD PTR [ebp+0x8]
6402165c:	test   esi,esi
6402165e:	push   eax
6402165f:	push   DWORD PTR [ebp+0xc]
64021662:	je     0x6402166d
64021664:	call   0x64022905
64021669:	mov    DWORD PTR [esi],eax
6402166b:	jmp    0x64021672
6402166d:	call   0x64022905
64021672:	pop    ecx
64021673:	pop    ecx
64021674:	xor    eax,eax
64021676:	pop    esi
64021677:	pop    ebp
64021678:	ret    
64021679:	push   ebp
6402167a:	mov    ebp,esp
6402167c:	push   ecx
6402167d:	push   esi
6402167e:	mov    esi,DWORD PTR [ebp+0xc]
64021681:	push   esi
64021682:	call   0x6401986f
64021687:	mov    DWORD PTR [ebp+0xc],eax
6402168a:	mov    eax,DWORD PTR [esi+0xc]
6402168d:	test   al,0x82
6402168f:	pop    ecx
64021690:	jne    0x640216ab
64021692:	call   0x640164c3
64021697:	mov    DWORD PTR [eax],0x9
6402169d:	or     DWORD PTR [esi+0xc],0x20
640216a1:	mov    eax,0xffff
640216a6:	jmp    0x640217e6
640216ab:	test   al,0x40
640216ad:	je     0x640216bc
640216af:	call   0x640164c3
640216b4:	mov    DWORD PTR [eax],0x22
640216ba:	jmp    0x6402169d
640216bc:	test   al,0x1
640216be:	je     0x640216d7
640216c0:	and    DWORD PTR [esi+0x4],0x0
640216c4:	test   al,0x10
640216c6:	je     0x64021757
640216cc:	mov    ecx,DWORD PTR [esi+0x8]
640216cf:	and    eax,0xfffffffe
640216d2:	mov    DWORD PTR [esi],ecx
640216d4:	mov    DWORD PTR [esi+0xc],eax
640216d7:	mov    eax,DWORD PTR [esi+0xc]
640216da:	and    DWORD PTR [esi+0x4],0x0
640216de:	and    DWORD PTR [ebp-0x4],0x0
640216e2:	push   ebx
640216e3:	push   0x2
640216e5:	and    eax,0xffffffef
640216e8:	pop    ebx
640216e9:	or     eax,ebx
640216eb:	test   ax,0x10c
640216ef:	mov    DWORD PTR [esi+0xc],eax
640216f2:	jne    0x64021720
640216f4:	call   0x6401957a
640216f9:	add    eax,0x20
640216fc:	cmp    esi,eax
640216fe:	je     0x6402170c
64021700:	call   0x6401957a
64021705:	add    eax,0x40
64021708:	cmp    esi,eax
6402170a:	jne    0x64021719
6402170c:	push   DWORD PTR [ebp+0xc]
6402170f:	call   0x6401eadb
64021714:	test   eax,eax
64021716:	pop    ecx
64021717:	jne    0x64021720
64021719:	push   esi
6402171a:	call   0x6401ea97
6402171f:	pop    ecx
64021720:	test   WORD PTR [esi+0xc],0x108
64021726:	push   edi
64021727:	je     0x640217b0
6402172d:	mov    eax,DWORD PTR [esi+0x8]
64021730:	mov    edi,DWORD PTR [esi]
64021732:	lea    ecx,[eax+0x2]
64021735:	mov    DWORD PTR [esi],ecx
64021737:	mov    ecx,DWORD PTR [esi+0x18]
6402173a:	sub    edi,eax
6402173c:	sub    ecx,ebx
6402173e:	test   edi,edi
64021740:	mov    DWORD PTR [esi+0x4],ecx
64021743:	jle    0x64021762
64021745:	push   edi
64021746:	push   eax
64021747:	push   DWORD PTR [ebp+0xc]
6402174a:	call   0x6401acbc
6402174f:	add    esp,0xc
64021752:	mov    DWORD PTR [ebp-0x4],eax
64021755:	jmp    0x640217a5
64021757:	or     eax,0x20
6402175a:	mov    DWORD PTR [esi+0xc],eax
6402175d:	jmp    0x640216a1
64021762:	mov    ecx,DWORD PTR [ebp+0xc]
64021765:	cmp    ecx,0xffffffff
64021768:	je     0x64021785
6402176a:	cmp    ecx,0xfffffffe
6402176d:	je     0x64021785
6402176f:	mov    eax,ecx
64021771:	and    eax,0x1f
64021774:	mov    edx,ecx
64021776:	sar    edx,0x5
64021779:	shl    eax,0x6
6402177c:	add    eax,DWORD PTR [edx*4+0x6403ab80]
64021783:	jmp    0x6402178a
64021785:	mov    eax,0x64037918
6402178a:	test   BYTE PTR [eax+0x4],0x20
6402178e:	je     0x640217a5
64021790:	push   ebx
64021791:	push   0x0
64021793:	push   0x0
64021795:	push   ecx
64021796:	call   0x6401bfca
6402179b:	and    eax,edx
6402179d:	add    esp,0x10
640217a0:	cmp    eax,0xffffffff
640217a3:	je     0x640217d2
640217a5:	mov    eax,DWORD PTR [esi+0x8]
640217a8:	mov    ebx,DWORD PTR [ebp+0x8]
640217ab:	mov    WORD PTR [eax],bx
640217ae:	jmp    0x640217cd
640217b0:	push   0x2
640217b2:	lea    eax,[ebp-0x4]
640217b5:	push   eax
640217b6:	push   DWORD PTR [ebp+0xc]
640217b9:	mov    edi,ebx
640217bb:	mov    ebx,DWORD PTR [ebp+0x8]
640217be:	mov    WORD PTR [ebp-0x4],bx
640217c2:	call   0x6401acbc
640217c7:	add    esp,0xc
640217ca:	mov    DWORD PTR [ebp-0x4],eax
640217cd:	cmp    DWORD PTR [ebp-0x4],edi
640217d0:	je     0x640217dd
640217d2:	or     DWORD PTR [esi+0xc],0x20
640217d6:	mov    eax,0xffff
640217db:	jmp    0x640217e4
640217dd:	mov    eax,ebx
640217df:	and    eax,0xffff
640217e4:	pop    edi
640217e5:	pop    ebx
640217e6:	pop    esi
640217e7:	leave  
640217e8:	ret    
640217e9:	int3   
640217ea:	int3   
640217eb:	int3   
640217ec:	int3   
640217ed:	int3   
640217ee:	int3   
640217ef:	int3   
640217f0:	push   ebp
640217f1:	mov    ebp,esp
640217f3:	push   edi
640217f4:	push   esi
640217f5:	push   ebx
640217f6:	mov    ecx,DWORD PTR [ebp+0x10]
640217f9:	or     ecx,ecx
640217fb:	je     0x6402184a
640217fd:	mov    esi,DWORD PTR [ebp+0x8]
64021800:	mov    edi,DWORD PTR [ebp+0xc]
64021803:	mov    bh,0x41
64021805:	mov    bl,0x5a
64021807:	mov    dh,0x20
64021809:	lea    ecx,[ecx+0x0]
6402180c:	mov    ah,BYTE PTR [esi]
6402180e:	or     ah,ah
64021810:	mov    al,BYTE PTR [edi]
64021812:	je     0x6402183b
64021814:	or     al,al
64021816:	je     0x6402183b
64021818:	add    esi,0x1
6402181b:	add    edi,0x1
6402181e:	cmp    ah,bh
64021820:	jb     0x64021828
64021822:	cmp    ah,bl
64021824:	ja     0x64021828
64021826:	add    ah,dh
64021828:	cmp    al,bh
6402182a:	jb     0x64021832
6402182c:	cmp    al,bl
6402182e:	ja     0x64021832
64021830:	add    al,dh
64021832:	cmp    ah,al
64021834:	jne    0x64021841
64021836:	sub    ecx,0x1
64021839:	jne    0x6402180c
6402183b:	xor    ecx,ecx
6402183d:	cmp    ah,al
6402183f:	je     0x6402184a
64021841:	mov    ecx,0xffffffff
64021846:	jb     0x6402184a
64021848:	neg    ecx
6402184a:	mov    eax,ecx
6402184c:	pop    ebx
6402184d:	pop    esi
6402184e:	pop    edi
6402184f:	leave  
64021850:	ret    
64021851:	push   ebp
64021852:	mov    ebp,esp
64021854:	sub    esp,0x7c
64021857:	mov    eax,ds:0x64037644
6402185c:	xor    eax,ebp
6402185e:	mov    DWORD PTR [ebp-0x4],eax
64021861:	mov    eax,DWORD PTR [ebp+0x8]
64021864:	push   ebx
64021865:	xor    ebx,ebx
64021867:	push   esi
64021868:	xor    esi,esi
6402186a:	mov    DWORD PTR [ebp-0x7c],eax
6402186d:	mov    eax,DWORD PTR [ebp+0xc]
64021870:	inc    esi
64021871:	xor    ecx,ecx
64021873:	cmp    DWORD PTR [ebp+0x24],ebx
64021876:	push   edi
64021877:	mov    DWORD PTR [ebp-0x70],eax
6402187a:	lea    edi,[ebp-0x20]
6402187d:	mov    DWORD PTR [ebp-0x74],ebx
64021880:	mov    DWORD PTR [ebp-0x68],esi
64021883:	mov    DWORD PTR [ebp-0x4c],ebx
64021886:	mov    DWORD PTR [ebp-0x58],ebx
64021889:	mov    DWORD PTR [ebp-0x5c],ebx
6402188c:	mov    DWORD PTR [ebp-0x60],ebx
6402188f:	mov    DWORD PTR [ebp-0x64],ebx
64021892:	mov    DWORD PTR [ebp-0x50],ebx
64021895:	mov    DWORD PTR [ebp-0x6c],ebx
64021898:	jne    0x640218b9
6402189a:	call   0x640164c3
6402189f:	push   ebx
640218a0:	push   ebx
640218a1:	push   ebx
640218a2:	push   ebx
640218a3:	push   ebx
640218a4:	mov    DWORD PTR [eax],0x16
640218aa:	call   0x64013e52
640218af:	add    esp,0x14
640218b2:	xor    eax,eax
640218b4:	jmp    0x64021ed2
640218b9:	mov    edx,DWORD PTR [ebp+0x10]
640218bc:	mov    DWORD PTR [ebp-0x54],edx
640218bf:	mov    al,BYTE PTR [edx]
640218c1:	cmp    al,0x20
640218c3:	je     0x640218d1
640218c5:	cmp    al,0x9
640218c7:	je     0x640218d1
640218c9:	cmp    al,0xa
640218cb:	je     0x640218d1
640218cd:	cmp    al,0xd
640218cf:	jne    0x640218d4
640218d1:	inc    edx
640218d2:	jmp    0x640218bf
640218d4:	mov    bl,0x30
640218d6:	mov    al,BYTE PTR [edx]
640218d8:	inc    edx
640218d9:	cmp    ecx,0xb
640218dc:	ja     0x64021b11
640218e2:	jmp    DWORD PTR [ecx*4+0x64021ee1]
640218e9:	mov    cl,al
640218eb:	sub    cl,0x31
640218ee:	cmp    cl,0x8
640218f1:	ja     0x640218f9
640218f3:	push   0x3
640218f5:	pop    ecx
640218f6:	dec    edx
640218f7:	jmp    0x640218d6
640218f9:	mov    ecx,DWORD PTR [ebp+0x24]
640218fc:	mov    ecx,DWORD PTR [ecx]
640218fe:	mov    ecx,DWORD PTR [ecx+0xbc]
64021904:	mov    ecx,DWORD PTR [ecx]
64021906:	cmp    al,BYTE PTR [ecx]
64021908:	jne    0x6402190f
6402190a:	push   0x5
6402190c:	pop    ecx
6402190d:	jmp    0x640218d6
6402190f:	movsx  eax,al
64021912:	sub    eax,0x2b
64021915:	je     0x64021934
64021917:	dec    eax
64021918:	dec    eax
64021919:	je     0x64021928
6402191b:	sub    eax,0x3
6402191e:	jne    0x64021aaf
64021924:	mov    ecx,esi
64021926:	jmp    0x640218d6
64021928:	push   0x2
6402192a:	pop    ecx
6402192b:	mov    DWORD PTR [ebp-0x74],0x8000
64021932:	jmp    0x640218d6
64021934:	and    DWORD PTR [ebp-0x74],0x0
64021938:	push   0x2
6402193a:	pop    ecx
6402193b:	jmp    0x640218d6
6402193d:	mov    cl,al
6402193f:	sub    cl,0x31
64021942:	cmp    cl,0x8
64021945:	mov    DWORD PTR [ebp-0x58],esi
64021948:	jbe    0x640218f3
6402194a:	mov    ecx,DWORD PTR [ebp+0x24]
6402194d:	mov    ecx,DWORD PTR [ecx]
6402194f:	mov    ecx,DWORD PTR [ecx+0xbc]
64021955:	mov    ecx,DWORD PTR [ecx]
64021957:	cmp    al,BYTE PTR [ecx]
64021959:	jne    0x6402195f
6402195b:	push   0x4
6402195d:	jmp    0x6402190c
6402195f:	cmp    al,0x2b
64021961:	je     0x6402198b
64021963:	cmp    al,0x2d
64021965:	je     0x6402198b
64021967:	cmp    al,bl
64021969:	je     0x64021924
6402196b:	cmp    al,0x43
6402196d:	jle    0x64021aaf
64021973:	cmp    al,0x45
64021975:	jle    0x64021987
64021977:	cmp    al,0x63
64021979:	jle    0x64021aaf
6402197f:	cmp    al,0x65
64021981:	jg     0x64021aaf
64021987:	push   0x6
64021989:	jmp    0x6402190c
6402198b:	dec    edx
6402198c:	push   0xb
6402198e:	jmp    0x6402190c
64021993:	mov    cl,al
64021995:	sub    cl,0x31
64021998:	cmp    cl,0x8
6402199b:	jbe    0x640218f3
640219a1:	mov    ecx,DWORD PTR [ebp+0x24]
640219a4:	mov    ecx,DWORD PTR [ecx]
640219a6:	mov    ecx,DWORD PTR [ecx+0xbc]
640219ac:	mov    ecx,DWORD PTR [ecx]
640219ae:	cmp    al,BYTE PTR [ecx]
640219b0:	je     0x6402190a
640219b6:	cmp    al,bl
640219b8:	je     0x64021924
640219be:	mov    edx,DWORD PTR [ebp-0x54]
640219c1:	jmp    0x64021ada
640219c6:	mov    DWORD PTR [ebp-0x58],esi
640219c9:	jmp    0x640219e5
640219cb:	cmp    al,0x39
640219cd:	jg     0x640219e9
640219cf:	cmp    DWORD PTR [ebp-0x4c],0x19
640219d3:	jae    0x640219df
640219d5:	inc    DWORD PTR [ebp-0x4c]
640219d8:	sub    al,bl
640219da:	mov    BYTE PTR [edi],al
640219dc:	inc    edi
640219dd:	jmp    0x640219e2
640219df:	inc    DWORD PTR [ebp-0x50]
640219e2:	mov    al,BYTE PTR [edx]
640219e4:	inc    edx
640219e5:	cmp    al,bl
640219e7:	jge    0x640219cb
640219e9:	mov    ecx,DWORD PTR [ebp+0x24]
640219ec:	mov    ecx,DWORD PTR [ecx]
640219ee:	mov    ecx,DWORD PTR [ecx+0xbc]
640219f4:	mov    ecx,DWORD PTR [ecx]
640219f6:	cmp    al,BYTE PTR [ecx]
640219f8:	je     0x6402195b
640219fe:	cmp    al,0x2b
64021a00:	je     0x6402198b
64021a02:	cmp    al,0x2d
64021a04:	je     0x6402198b
64021a06:	jmp    0x6402196b
64021a0b:	cmp    DWORD PTR [ebp-0x4c],0x0
64021a0f:	mov    DWORD PTR [ebp-0x58],esi
64021a12:	mov    DWORD PTR [ebp-0x5c],esi
64021a15:	jne    0x64021a3d
64021a17:	jmp    0x64021a1f
64021a19:	dec    DWORD PTR [ebp-0x50]
64021a1c:	mov    al,BYTE PTR [edx]
64021a1e:	inc    edx
64021a1f:	cmp    al,bl
64021a21:	je     0x64021a19
64021a23:	jmp    0x64021a3d
64021a25:	cmp    al,0x39
64021a27:	jg     0x640219fe
64021a29:	cmp    DWORD PTR [ebp-0x4c],0x19
64021a2d:	jae    0x64021a3a
64021a2f:	inc    DWORD PTR [ebp-0x4c]
64021a32:	sub    al,bl
64021a34:	mov    BYTE PTR [edi],al
64021a36:	inc    edi
64021a37:	dec    DWORD PTR [ebp-0x50]
64021a3a:	mov    al,BYTE PTR [edx]
64021a3c:	inc    edx
64021a3d:	cmp    al,bl
64021a3f:	jge    0x64021a25
64021a41:	jmp    0x640219fe
64021a43:	sub    al,bl
64021a45:	cmp    al,0x9
64021a47:	mov    DWORD PTR [ebp-0x5c],esi
64021a4a:	ja     0x640219be
64021a50:	push   0x4
64021a52:	jmp    0x640218f5
64021a57:	lea    ecx,[edx-0x2]
64021a5a:	mov    DWORD PTR [ebp-0x54],ecx
64021a5d:	mov    cl,al
64021a5f:	sub    cl,0x31
64021a62:	cmp    cl,0x8
64021a65:	ja     0x64021a6e
64021a67:	push   0x9
64021a69:	jmp    0x640218f5
64021a6e:	movsx  eax,al
64021a71:	sub    eax,0x2b
64021a74:	je     0x64021a96
64021a76:	dec    eax
64021a77:	dec    eax
64021a78:	je     0x64021a8a
64021a7a:	sub    eax,0x3
64021a7d:	jne    0x640219be
64021a83:	push   0x8
64021a85:	jmp    0x6402190c
64021a8a:	or     DWORD PTR [ebp-0x68],0xffffffff
64021a8e:	push   0x7
64021a90:	pop    ecx
64021a91:	jmp    0x640218d6
64021a96:	push   0x7
64021a98:	jmp    0x6402190c
64021a9d:	mov    DWORD PTR [ebp-0x60],esi
64021aa0:	jmp    0x64021aa5
64021aa2:	mov    al,BYTE PTR [edx]
64021aa4:	inc    edx
64021aa5:	cmp    al,bl
64021aa7:	je     0x64021aa2
64021aa9:	sub    al,0x31
64021aab:	cmp    al,0x8
64021aad:	jbe    0x64021a67
64021aaf:	dec    edx
64021ab0:	jmp    0x64021ada
64021ab2:	mov    cl,al
64021ab4:	sub    cl,0x31
64021ab7:	cmp    cl,0x8
64021aba:	jbe    0x64021a67
64021abc:	cmp    al,bl
64021abe:	jmp    0x64021a7d
64021ac0:	cmp    DWORD PTR [ebp+0x20],0x0
64021ac4:	je     0x64021b0d
64021ac6:	movsx  eax,al
64021ac9:	sub    eax,0x2b
64021acc:	lea    ecx,[edx-0x1]
64021acf:	mov    DWORD PTR [ebp-0x54],ecx
64021ad2:	je     0x64021a96
64021ad4:	dec    eax
64021ad5:	dec    eax
64021ad6:	je     0x64021a8a
64021ad8:	mov    edx,ecx
64021ada:	cmp    DWORD PTR [ebp-0x58],0x0
64021ade:	mov    eax,DWORD PTR [ebp-0x70]
64021ae1:	mov    DWORD PTR [eax],edx
64021ae3:	je     0x64021e8d
64021ae9:	push   0x18
64021aeb:	pop    eax
64021aec:	cmp    DWORD PTR [ebp-0x4c],eax
64021aef:	jbe    0x64021b01
64021af1:	cmp    BYTE PTR [ebp-0x9],0x5
64021af5:	jl     0x64021afa
64021af7:	inc    BYTE PTR [ebp-0x9]
64021afa:	dec    edi
64021afb:	inc    DWORD PTR [ebp-0x50]
64021afe:	mov    DWORD PTR [ebp-0x4c],eax
64021b01:	cmp    DWORD PTR [ebp-0x4c],0x0
64021b05:	jbe    0x64021eb4
64021b0b:	jmp    0x64021b66
64021b0d:	push   0xa
64021b0f:	pop    ecx
64021b10:	dec    edx
64021b11:	cmp    ecx,0xa
64021b14:	jne    0x640218d6
64021b1a:	jmp    0x64021ada
64021b1c:	mov    DWORD PTR [ebp-0x60],esi
64021b1f:	xor    ecx,ecx
64021b21:	jmp    0x64021b3c
64021b23:	cmp    al,0x39
64021b25:	jg     0x64021b47
64021b27:	imul   ecx,ecx,0xa
64021b2a:	movsx  esi,al
64021b2d:	lea    ecx,[ecx+esi*1-0x30]
64021b31:	cmp    ecx,0x1450
64021b37:	jg     0x64021b42
64021b39:	mov    al,BYTE PTR [edx]
64021b3b:	inc    edx
64021b3c:	cmp    al,bl
64021b3e:	jge    0x64021b23
64021b40:	jmp    0x64021b47
64021b42:	mov    ecx,0x1451
64021b47:	mov    DWORD PTR [ebp-0x64],ecx
64021b4a:	jmp    0x64021b57
64021b4c:	cmp    al,0x39
64021b4e:	jg     0x64021aaf
64021b54:	mov    al,BYTE PTR [edx]
64021b56:	inc    edx
64021b57:	cmp    al,bl
64021b59:	jge    0x64021b4c
64021b5b:	jmp    0x64021aaf
64021b60:	dec    DWORD PTR [ebp-0x4c]
64021b63:	inc    DWORD PTR [ebp-0x50]
64021b66:	dec    edi
64021b67:	cmp    BYTE PTR [edi],0x0
64021b6a:	je     0x64021b60
64021b6c:	lea    eax,[ebp-0x3c]
64021b6f:	push   eax
64021b70:	push   DWORD PTR [ebp-0x4c]
64021b73:	lea    eax,[ebp-0x20]
64021b76:	push   eax
64021b77:	call   0x640208da
64021b7c:	mov    eax,DWORD PTR [ebp-0x64]
64021b7f:	xor    ecx,ecx
64021b81:	add    esp,0xc
64021b84:	cmp    DWORD PTR [ebp-0x68],ecx
64021b87:	jge    0x64021b8b
64021b89:	neg    eax
64021b8b:	add    eax,DWORD PTR [ebp-0x50]
64021b8e:	cmp    DWORD PTR [ebp-0x60],ecx
64021b91:	jne    0x64021b96
64021b93:	add    eax,DWORD PTR [ebp+0x18]
64021b96:	cmp    DWORD PTR [ebp-0x5c],ecx
64021b99:	jne    0x64021b9e
64021b9b:	sub    eax,DWORD PTR [ebp+0x1c]
64021b9e:	cmp    eax,0x1450
64021ba3:	jg     0x64021e96
64021ba9:	cmp    eax,0xffffebb0
64021bae:	jl     0x64021ead
64021bb4:	mov    esi,0x640385e0
64021bb9:	sub    esi,0x60
64021bbc:	cmp    eax,ecx
64021bbe:	mov    DWORD PTR [ebp-0x54],eax
64021bc1:	je     0x64021e7b
64021bc7:	jge    0x64021bd6
64021bc9:	neg    eax
64021bcb:	mov    esi,0x64038740
64021bd0:	mov    DWORD PTR [ebp-0x54],eax
64021bd3:	sub    esi,0x60
64021bd6:	cmp    DWORD PTR [ebp+0x14],ecx
64021bd9:	jne    0x64021bdf
64021bdb:	mov    WORD PTR [ebp-0x3c],cx
64021bdf:	cmp    DWORD PTR [ebp-0x54],ecx
64021be2:	je     0x64021e7b
64021be8:	mov    eax,DWORD PTR [ebp-0x54]
64021beb:	sar    DWORD PTR [ebp-0x54],0x3
64021bef:	add    esi,0x54
64021bf2:	and    eax,0x7
64021bf5:	test   eax,eax
64021bf7:	mov    DWORD PTR [ebp-0x4c],esi
64021bfa:	je     0x64021e71
64021c00:	imul   eax,eax,0xc
64021c03:	add    eax,esi
64021c05:	mov    ebx,eax
64021c07:	cmp    WORD PTR [ebx],0x8000
64021c0c:	mov    DWORD PTR [ebp-0x70],ebx
64021c0f:	jb     0x64021c25
64021c11:	mov    esi,ebx
64021c13:	lea    edi,[ebp-0x48]
64021c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c19:	dec    DWORD PTR [ebp-0x46]
64021c1c:	mov    esi,DWORD PTR [ebp-0x4c]
64021c1f:	lea    ebx,[ebp-0x48]
64021c22:	mov    DWORD PTR [ebp-0x70],ebx
64021c25:	movzx  edx,WORD PTR [ebx+0xa]
64021c29:	mov    ecx,DWORD PTR [ebp-0x32]
64021c2c:	xor    eax,eax
64021c2e:	mov    DWORD PTR [ebp-0x50],eax
64021c31:	mov    DWORD PTR [ebp-0x2c],eax
64021c34:	mov    DWORD PTR [ebp-0x28],eax
64021c37:	mov    DWORD PTR [ebp-0x24],eax
64021c3a:	mov    eax,edx
64021c3c:	mov    edi,0x7fff
64021c41:	xor    eax,ecx
64021c43:	and    ecx,edi
64021c45:	and    edx,edi
64021c47:	and    eax,0x8000
64021c4c:	cmp    cx,0x7fff
64021c51:	lea    edi,[edx+ecx*1]
64021c54:	movzx  edi,di
64021c57:	jae    0x64021e57
64021c5d:	cmp    dx,0x7fff
64021c62:	jae    0x64021e57
64021c68:	cmp    di,0xbffd
64021c6d:	ja     0x64021e57
64021c73:	cmp    di,0x3fbf
64021c78:	ja     0x64021c87
64021c7a:	xor    eax,eax
64021c7c:	mov    DWORD PTR [ebp-0x38],eax
64021c7f:	mov    DWORD PTR [ebp-0x3c],eax
64021c82:	jmp    0x64021e6e
64021c87:	test   cx,cx
64021c8a:	jne    0x64021cab
64021c8c:	inc    edi
64021c8d:	test   DWORD PTR [ebp-0x34],0x7fffffff
64021c94:	jne    0x64021cab
64021c96:	cmp    DWORD PTR [ebp-0x38],0x0
64021c9a:	jne    0x64021cab
64021c9c:	cmp    DWORD PTR [ebp-0x3c],0x0
64021ca0:	jne    0x64021cab
64021ca2:	and    WORD PTR [ebp-0x32],cx
64021ca6:	jmp    0x64021e71
64021cab:	xor    ecx,ecx
64021cad:	cmp    dx,cx
64021cb0:	jne    0x64021cd3
64021cb2:	inc    edi
64021cb3:	test   DWORD PTR [ebx+0x8],0x7fffffff
64021cba:	jne    0x64021cd3
64021cbc:	cmp    DWORD PTR [ebx+0x4],ecx
64021cbf:	jne    0x64021cd3
64021cc1:	cmp    DWORD PTR [ebx],ecx
64021cc3:	jne    0x64021cd3
64021cc5:	mov    DWORD PTR [ebp-0x34],ecx
64021cc8:	mov    DWORD PTR [ebp-0x38],ecx
64021ccb:	mov    DWORD PTR [ebp-0x3c],ecx
64021cce:	jmp    0x64021e71
64021cd3:	and    DWORD PTR [ebp-0x68],ecx
64021cd6:	lea    esi,[ebp-0x28]
64021cd9:	mov    DWORD PTR [ebp-0x58],0x5
64021ce0:	mov    ecx,DWORD PTR [ebp-0x68]
64021ce3:	mov    edx,DWORD PTR [ebp-0x58]
64021ce6:	add    ecx,ecx
64021ce8:	test   edx,edx
64021cea:	mov    DWORD PTR [ebp-0x64],edx
64021ced:	jle    0x64021d44
64021cef:	lea    ecx,[ebp+ecx*1-0x3c]
64021cf3:	add    ebx,0x8
64021cf6:	mov    DWORD PTR [ebp-0x5c],ecx
64021cf9:	mov    DWORD PTR [ebp-0x60],ebx
64021cfc:	mov    ecx,DWORD PTR [ebp-0x60]
64021cff:	mov    edx,DWORD PTR [ebp-0x5c]
64021d02:	movzx  edx,WORD PTR [edx]
64021d05:	movzx  ecx,WORD PTR [ecx]
64021d08:	and    DWORD PTR [ebp-0x78],0x0
64021d0c:	imul   ecx,edx
64021d0f:	mov    edx,DWORD PTR [esi-0x4]
64021d12:	lea    ebx,[edx+ecx*1]
64021d15:	cmp    ebx,edx
64021d17:	jb     0x64021d1d
64021d19:	cmp    ebx,ecx
64021d1b:	jae    0x64021d24
64021d1d:	mov    DWORD PTR [ebp-0x78],0x1
64021d24:	cmp    DWORD PTR [ebp-0x78],0x0
64021d28:	mov    DWORD PTR [esi-0x4],ebx
64021d2b:	je     0x64021d30
64021d2d:	inc    WORD PTR [esi]
64021d30:	add    DWORD PTR [ebp-0x5c],0x2
64021d34:	sub    DWORD PTR [ebp-0x60],0x2
64021d38:	dec    DWORD PTR [ebp-0x64]
64021d3b:	cmp    DWORD PTR [ebp-0x64],0x0
64021d3f:	jg     0x64021cfc
64021d41:	mov    ebx,DWORD PTR [ebp-0x70]
64021d44:	inc    esi
64021d45:	inc    esi
64021d46:	inc    DWORD PTR [ebp-0x68]
64021d49:	dec    DWORD PTR [ebp-0x58]
64021d4c:	cmp    DWORD PTR [ebp-0x58],0x0
64021d50:	jg     0x64021ce0
64021d52:	add    edi,0xc002
64021d58:	test   di,di
64021d5b:	jle    0x64021d98
64021d5d:	test   DWORD PTR [ebp-0x24],0x80000000
64021d64:	jne    0x64021d93
64021d66:	mov    esi,DWORD PTR [ebp-0x28]
64021d69:	mov    ecx,DWORD PTR [ebp-0x2c]
64021d6c:	shl    DWORD PTR [ebp-0x2c],1
64021d6f:	shr    ecx,0x1f
64021d72:	mov    edx,esi
64021d74:	add    esi,esi
64021d76:	or     esi,ecx
64021d78:	mov    ecx,DWORD PTR [ebp-0x24]
64021d7b:	shr    edx,0x1f
64021d7e:	add    ecx,ecx
64021d80:	or     ecx,edx
64021d82:	add    edi,0xffff
64021d88:	test   di,di
64021d8b:	mov    DWORD PTR [ebp-0x28],esi
64021d8e:	mov    DWORD PTR [ebp-0x24],ecx
64021d91:	jg     0x64021d5d
64021d93:	test   di,di
64021d96:	jg     0x64021de5
64021d98:	add    edi,0xffff
64021d9e:	test   di,di
64021da1:	jge    0x64021de5
64021da3:	mov    ecx,edi
64021da5:	neg    ecx
64021da7:	movzx  esi,cx
64021daa:	add    edi,esi
64021dac:	test   BYTE PTR [ebp-0x2c],0x1
64021db0:	je     0x64021db5
64021db2:	inc    DWORD PTR [ebp-0x50]
64021db5:	mov    ecx,DWORD PTR [ebp-0x24]
64021db8:	mov    ebx,DWORD PTR [ebp-0x28]
64021dbb:	mov    edx,DWORD PTR [ebp-0x28]
64021dbe:	shr    DWORD PTR [ebp-0x24],1
64021dc1:	shl    ecx,0x1f
64021dc4:	shr    ebx,1
64021dc6:	or     ebx,ecx
64021dc8:	mov    ecx,DWORD PTR [ebp-0x2c]
64021dcb:	shl    edx,0x1f
64021dce:	shr    ecx,1
64021dd0:	or     ecx,edx
64021dd2:	dec    esi
64021dd3:	mov    DWORD PTR [ebp-0x28],ebx
64021dd6:	mov    DWORD PTR [ebp-0x2c],ecx
64021dd9:	jne    0x64021dac
64021ddb:	cmp    DWORD PTR [ebp-0x50],esi
64021dde:	je     0x64021de5
64021de0:	or     WORD PTR [ebp-0x2c],0x1
64021de5:	cmp    WORD PTR [ebp-0x2c],0x8000
64021deb:	ja     0x64021dfe
64021ded:	mov    ecx,DWORD PTR [ebp-0x2c]
64021df0:	and    ecx,0x1ffff
64021df6:	cmp    ecx,0x18000
64021dfc:	jne    0x64021e31
64021dfe:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
64021e02:	jne    0x64021e2e
64021e04:	and    DWORD PTR [ebp-0x2a],0x0
64021e08:	cmp    DWORD PTR [ebp-0x26],0xffffffff
64021e0c:	jne    0x64021e29
64021e0e:	and    DWORD PTR [ebp-0x26],0x0
64021e12:	cmp    WORD PTR [ebp-0x22],0xffff
64021e18:	jne    0x64021e23
64021e1a:	mov    WORD PTR [ebp-0x22],0x8000
64021e20:	inc    edi
64021e21:	jmp    0x64021e31
64021e23:	inc    WORD PTR [ebp-0x22]
64021e27:	jmp    0x64021e31
64021e29:	inc    DWORD PTR [ebp-0x26]
64021e2c:	jmp    0x64021e31
64021e2e:	inc    DWORD PTR [ebp-0x2a]
64021e31:	cmp    di,0x7fff
64021e36:	mov    esi,DWORD PTR [ebp-0x4c]
64021e39:	jae    0x64021e57
64021e3b:	mov    cx,WORD PTR [ebp-0x2a]
64021e3f:	mov    WORD PTR [ebp-0x3c],cx
64021e43:	mov    ecx,DWORD PTR [ebp-0x28]
64021e46:	mov    DWORD PTR [ebp-0x3a],ecx
64021e49:	mov    ecx,DWORD PTR [ebp-0x24]
64021e4c:	or     edi,eax
64021e4e:	mov    DWORD PTR [ebp-0x36],ecx
64021e51:	mov    WORD PTR [ebp-0x32],di
64021e55:	jmp    0x64021e71
64021e57:	neg    ax
64021e5a:	sbb    eax,eax
64021e5c:	and    DWORD PTR [ebp-0x38],0x0
64021e60:	and    eax,0x80000000
64021e65:	add    eax,0x7fff8000
64021e6a:	and    DWORD PTR [ebp-0x3c],0x0
64021e6e:	mov    DWORD PTR [ebp-0x34],eax
64021e71:	cmp    DWORD PTR [ebp-0x54],0x0
64021e75:	jne    0x64021be8
64021e7b:	mov    eax,DWORD PTR [ebp-0x34]
64021e7e:	movzx  ecx,WORD PTR [ebp-0x3c]
64021e82:	mov    esi,DWORD PTR [ebp-0x3a]
64021e85:	mov    edx,DWORD PTR [ebp-0x36]
64021e88:	shr    eax,0x10
64021e8b:	jmp    0x64021ebc
64021e8d:	mov    DWORD PTR [ebp-0x6c],0x4
64021e94:	jmp    0x64021eb4
64021e96:	xor    esi,esi
64021e98:	mov    eax,0x7fff
64021e9d:	mov    edx,0x80000000
64021ea2:	xor    ecx,ecx
64021ea4:	mov    DWORD PTR [ebp-0x6c],0x2
64021eab:	jmp    0x64021ebc
64021ead:	mov    DWORD PTR [ebp-0x6c],0x1
64021eb4:	xor    ecx,ecx
64021eb6:	xor    eax,eax
64021eb8:	xor    edx,edx
64021eba:	xor    esi,esi
64021ebc:	mov    edi,DWORD PTR [ebp-0x7c]
64021ebf:	or     eax,DWORD PTR [ebp-0x74]
64021ec2:	mov    WORD PTR [edi],cx
64021ec5:	mov    WORD PTR [edi+0xa],ax
64021ec9:	mov    eax,DWORD PTR [ebp-0x6c]
64021ecc:	mov    DWORD PTR [edi+0x2],esi
64021ecf:	mov    DWORD PTR [edi+0x6],edx
64021ed2:	mov    ecx,DWORD PTR [ebp-0x4]
64021ed5:	pop    edi
64021ed6:	pop    esi
64021ed7:	xor    ecx,ebp
64021ed9:	pop    ebx
64021eda:	call   0x64013d06
64021edf:	leave  
64021ee0:	ret    
64021ee1:	jmp    0xa16620fe
64021ee6:	sbb    DWORD PTR [edx],eax
64021ee8:	fs xchg ebx,eax
64021eea:	sbb    DWORD PTR [edx],eax
64021eec:	fs (bad) 
64021eee:	sbb    DWORD PTR [edx],eax
64021ef0:	or     ebx,DWORD PTR fs:[edx]
64021ef3:	add    ah,BYTE PTR [ebx+eax*2+0x1a]
64021ef7:	add    ah,BYTE PTR [edi+edx*2+0x1a]
64021efb:	add    ah,BYTE PTR [edx+esi*4+0x1a]
64021eff:	add    ah,BYTE PTR [ebp+ebx*4+0x1a]
64021f03:	add    ah,BYTE PTR [esp+ebx*1+0x1b]
64021f07:	add    ah,BYTE PTR [ecx+edx*1+0x1b]
64021f0b:	add    ah,BYTE PTR [eax+eax*8+0x1a]
64021f0f:	add    ah,BYTE PTR [ebp+edx*2-0x75]
64021f13:	in     al,dx
64021f14:	sub    esp,0x74
64021f17:	mov    eax,ds:0x64037644
64021f1c:	xor    eax,ebp
64021f1e:	mov    DWORD PTR [ebp-0x4],eax
64021f21:	push   ebx
64021f22:	mov    ebx,DWORD PTR [ebp+0x1c]
64021f25:	push   esi
64021f26:	push   edi
64021f27:	lea    esi,[ebp+0x8]
64021f2a:	lea    edi,[ebp-0x10]
64021f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021f2f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64021f31:	mov    edx,DWORD PTR [ebp-0x8]
64021f34:	mov    ecx,edx
64021f36:	mov    eax,0x8000
64021f3b:	and    ecx,eax
64021f3d:	and    edx,0x7fff
64021f43:	test   cx,cx
64021f46:	mov    DWORD PTR [ebp-0x60],ebx
64021f49:	mov    BYTE PTR [ebp-0x30],0xcc
64021f4d:	mov    BYTE PTR [ebp-0x2f],0xcc
64021f51:	mov    BYTE PTR [ebp-0x2e],0xcc
64021f55:	mov    BYTE PTR [ebp-0x2d],0xcc
64021f59:	mov    BYTE PTR [ebp-0x2c],0xcc
64021f5d:	mov    BYTE PTR [ebp-0x2b],0xcc
64021f61:	mov    BYTE PTR [ebp-0x2a],0xcc
64021f65:	mov    BYTE PTR [ebp-0x29],0xcc
64021f69:	mov    BYTE PTR [ebp-0x28],0xcc
64021f6d:	mov    BYTE PTR [ebp-0x27],0xcc
64021f71:	mov    BYTE PTR [ebp-0x26],0xfb
64021f75:	mov    BYTE PTR [ebp-0x25],0x3f
64021f79:	mov    DWORD PTR [ebp-0x74],0x1
64021f80:	mov    DWORD PTR [ebp-0x6c],ecx
64021f83:	je     0x64021f8b
64021f85:	mov    BYTE PTR [ebx+0x2],0x2d
64021f89:	jmp    0x64021f8f
64021f8b:	mov    BYTE PTR [ebx+0x2],0x20
64021f8f:	test   dx,dx
64021f92:	mov    esi,DWORD PTR [ebp-0xc]
64021f95:	mov    edi,DWORD PTR [ebp-0x10]
64021f98:	jne    0x64021fc8
64021f9a:	test   esi,esi
64021f9c:	jne    0x64021fc8
64021f9e:	test   edi,edi
64021fa0:	jne    0x64021fc8
64021fa2:	and    WORD PTR [ebx],di
64021fa5:	cmp    cx,ax
64021fa8:	setne  al
64021fab:	dec    al
64021fad:	and    al,0xd
64021faf:	add    al,0x20
64021fb1:	mov    BYTE PTR [ebx+0x2],al
64021fb4:	mov    BYTE PTR [ebx+0x3],0x1
64021fb8:	mov    BYTE PTR [ebx+0x4],0x30
64021fbc:	mov    BYTE PTR [ebx+0x5],0x0
64021fc0:	xor    eax,eax
64021fc2:	inc    eax
64021fc3:	jmp    0x6402278f
64021fc8:	cmp    dx,0x7fff
64021fcd:	jne    0x64022071
64021fd3:	mov    eax,0x80000000
64021fd8:	cmp    esi,eax
64021fda:	mov    WORD PTR [ebx],0x1
64021fdf:	jne    0x64021fe5
64021fe1:	test   edi,edi
64021fe3:	je     0x64021ff4
64021fe5:	test   esi,0x40000000
64021feb:	jne    0x64021ff4
64021fed:	push   0x64029580
64021ff2:	jmp    0x64022045
64021ff4:	test   cx,cx
64021ff7:	je     0x6402200c
64021ff9:	cmp    esi,0xc0000000
64021fff:	jne    0x6402200c
64022001:	test   edi,edi
64022003:	jne    0x64022040
64022005:	push   0x64029578
6402200a:	jmp    0x64022019
6402200c:	cmp    esi,eax
6402200e:	jne    0x64022040
64022010:	test   edi,edi
64022012:	jne    0x64022040
64022014:	push   0x64029570
64022019:	lea    eax,[ebx+0x4]
6402201c:	push   0x16
6402201e:	push   eax
6402201f:	call   0x64016321
64022024:	add    esp,0xc
64022027:	xor    esi,esi
64022029:	test   eax,eax
6402202b:	je     0x6402203a
6402202d:	push   esi
6402202e:	push   esi
6402202f:	push   esi
64022030:	push   esi
64022031:	push   esi
64022032:	call   0x64013d56
64022037:	add    esp,0x14
6402203a:	mov    BYTE PTR [ebx+0x3],0x5
6402203e:	jmp    0x6402206a
64022040:	push   0x64029568
64022045:	lea    eax,[ebx+0x4]
64022048:	push   0x16
6402204a:	push   eax
6402204b:	call   0x64016321
64022050:	add    esp,0xc
64022053:	xor    esi,esi
64022055:	test   eax,eax
64022057:	je     0x64022066
64022059:	push   esi
6402205a:	push   esi
6402205b:	push   esi
6402205c:	push   esi
6402205d:	push   esi
6402205e:	call   0x64013d56
64022063:	add    esp,0x14
64022066:	mov    BYTE PTR [ebx+0x3],0x6
6402206a:	xor    eax,eax
6402206c:	jmp    0x6402278f
64022071:	movzx  ecx,dx
64022074:	mov    ebx,ecx
64022076:	imul   ecx,ecx,0x4d10
6402207c:	shr    ebx,0x8
6402207f:	mov    eax,esi
64022081:	shr    eax,0x18
64022084:	lea    eax,[ebx+eax*2]
64022087:	imul   eax,eax,0x4d
6402208a:	lea    eax,[eax+ecx*1-0x134312f4]
64022091:	sar    eax,0x10
64022094:	movzx  ecx,ax
64022097:	movsx  ebx,cx
6402209a:	mov    DWORD PTR [ebp-0x4c],ecx
6402209d:	xor    eax,eax
6402209f:	mov    ecx,0x640385e0
640220a4:	neg    ebx
640220a6:	sub    ecx,0x60
640220a9:	cmp    ebx,eax
640220ab:	mov    WORD PTR [ebp-0x16],dx
640220af:	mov    DWORD PTR [ebp-0x1a],esi
640220b2:	mov    DWORD PTR [ebp-0x1e],edi
640220b5:	mov    WORD PTR [ebp-0x20],ax
640220b9:	mov    DWORD PTR [ebp-0x68],ecx
640220bc:	je     0x64022370
640220c2:	jge    0x640220d1
640220c4:	mov    ecx,0x64038740
640220c9:	neg    ebx
640220cb:	sub    ecx,0x60
640220ce:	mov    DWORD PTR [ebp-0x68],ecx
640220d1:	cmp    ebx,eax
640220d3:	je     0x64022370
640220d9:	add    DWORD PTR [ebp-0x68],0x54
640220dd:	mov    ecx,ebx
640220df:	and    ecx,0x7
640220e2:	sar    ebx,0x3
640220e5:	test   ecx,ecx
640220e7:	je     0x64022366
640220ed:	imul   ecx,ecx,0xc
640220f0:	add    ecx,DWORD PTR [ebp-0x68]
640220f3:	cmp    WORD PTR [ecx],0x8000
640220f8:	mov    DWORD PTR [ebp-0x64],ecx
640220fb:	jb     0x64022110
640220fd:	mov    esi,ecx
640220ff:	lea    edi,[ebp-0x3c]
64022102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022104:	lea    eax,[ebp-0x3c]
64022107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022108:	dec    DWORD PTR [ebp-0x3a]
6402210b:	mov    DWORD PTR [ebp-0x64],eax
6402210e:	mov    ecx,eax
64022110:	movzx  edi,WORD PTR [ecx+0xa]
64022114:	mov    edx,DWORD PTR [ebp-0x16]
64022117:	xor    eax,eax
64022119:	mov    ecx,edi
6402211b:	mov    esi,0x7fff
64022120:	xor    ecx,edx
64022122:	and    edx,esi
64022124:	and    edi,esi
64022126:	mov    DWORD PTR [ebp-0x48],eax
64022129:	mov    DWORD PTR [ebp-0x10],eax
6402212c:	mov    DWORD PTR [ebp-0xc],eax
6402212f:	mov    DWORD PTR [ebp-0x8],eax
64022132:	and    ecx,0x8000
64022138:	cmp    dx,si
6402213b:	lea    eax,[edi+edx*1]
6402213e:	movzx  eax,ax
64022141:	jae    0x6402234a
64022147:	cmp    di,si
6402214a:	jae    0x6402234a
64022150:	cmp    ax,0xbffd
64022154:	ja     0x6402234a
6402215a:	cmp    ax,0x3fbf
6402215e:	ja     0x64022170
64022160:	xor    eax,eax
64022162:	mov    DWORD PTR [ebp-0x18],eax
64022165:	mov    DWORD PTR [ebp-0x1c],eax
64022168:	mov    DWORD PTR [ebp-0x20],eax
6402216b:	jmp    0x64022366
64022170:	xor    esi,esi
64022172:	cmp    dx,si
64022175:	jne    0x64022194
64022177:	inc    eax
64022178:	test   DWORD PTR [ebp-0x18],0x7fffffff
6402217f:	jne    0x64022194
64022181:	cmp    DWORD PTR [ebp-0x1c],esi
64022184:	jne    0x64022194
64022186:	cmp    DWORD PTR [ebp-0x20],esi
64022189:	jne    0x64022194
6402218b:	mov    WORD PTR [ebp-0x16],si
6402218f:	jmp    0x64022366
64022194:	cmp    di,si
64022197:	jne    0x640221bd
64022199:	mov    edx,DWORD PTR [ebp-0x64]
6402219c:	inc    eax
6402219d:	test   DWORD PTR [edx+0x8],0x7fffffff
640221a4:	jne    0x640221bd
640221a6:	cmp    DWORD PTR [edx+0x4],esi
640221a9:	jne    0x640221bd
640221ab:	cmp    DWORD PTR [edx],esi
640221ad:	jne    0x640221bd
640221af:	mov    DWORD PTR [ebp-0x18],esi
640221b2:	mov    DWORD PTR [ebp-0x1c],esi
640221b5:	mov    DWORD PTR [ebp-0x20],esi
640221b8:	jmp    0x64022366
640221bd:	lea    edi,[ebp-0xc]
640221c0:	mov    DWORD PTR [ebp-0x5c],esi
640221c3:	mov    DWORD PTR [ebp-0x44],edi
640221c6:	mov    DWORD PTR [ebp-0x40],0x5
640221cd:	mov    edx,DWORD PTR [ebp-0x5c]
640221d0:	mov    esi,DWORD PTR [ebp-0x40]
640221d3:	add    edx,edx
640221d5:	test   esi,esi
640221d7:	mov    DWORD PTR [ebp-0x50],esi
640221da:	jle    0x64022234
640221dc:	lea    edx,[ebp+edx*1-0x20]
640221e0:	mov    DWORD PTR [ebp-0x58],edx
640221e3:	mov    edx,DWORD PTR [ebp-0x64]
640221e6:	add    edx,0x8
640221e9:	mov    DWORD PTR [ebp-0x54],edx
640221ec:	mov    edx,DWORD PTR [ebp-0x58]
640221ef:	mov    esi,DWORD PTR [ebp-0x54]
640221f2:	movzx  esi,WORD PTR [esi]
640221f5:	movzx  edx,WORD PTR [edx]
640221f8:	mov    edi,DWORD PTR [edi-0x4]
640221fb:	imul   edx,esi
640221fe:	and    DWORD PTR [ebp-0x70],0x0
64022202:	lea    esi,[edi+edx*1]
64022205:	cmp    esi,edi
64022207:	jb     0x6402220d
64022209:	cmp    esi,edx
6402220b:	jae    0x64022214
6402220d:	mov    DWORD PTR [ebp-0x70],0x1
64022214:	cmp    DWORD PTR [ebp-0x70],0x0
64022218:	mov    edi,DWORD PTR [ebp-0x44]
6402221b:	mov    DWORD PTR [edi-0x4],esi
6402221e:	je     0x64022223
64022220:	inc    WORD PTR [edi]
64022223:	add    DWORD PTR [ebp-0x58],0x2
64022227:	sub    DWORD PTR [ebp-0x54],0x2
6402222b:	dec    DWORD PTR [ebp-0x50]
6402222e:	cmp    DWORD PTR [ebp-0x50],0x0
64022232:	jg     0x640221ec
64022234:	inc    edi
64022235:	inc    edi
64022236:	inc    DWORD PTR [ebp-0x5c]
64022239:	dec    DWORD PTR [ebp-0x40]
6402223c:	cmp    DWORD PTR [ebp-0x40],0x0
64022240:	mov    DWORD PTR [ebp-0x44],edi
64022243:	jg     0x640221cd
64022245:	add    eax,0xc002
6402224a:	test   ax,ax
6402224d:	jle    0x6402228a
6402224f:	test   DWORD PTR [ebp-0x8],0x80000000
64022256:	jne    0x64022285
64022258:	mov    edx,DWORD PTR [ebp-0x10]
6402225b:	mov    edi,DWORD PTR [ebp-0xc]
6402225e:	mov    esi,DWORD PTR [ebp-0xc]
64022261:	shl    DWORD PTR [ebp-0x10],1
64022264:	shr    edx,0x1f
64022267:	add    edi,edi
64022269:	or     edi,edx
6402226b:	mov    edx,DWORD PTR [ebp-0x8]
6402226e:	shr    esi,0x1f
64022271:	add    edx,edx
64022273:	or     edx,esi
64022275:	add    eax,0xffff
6402227a:	test   ax,ax
6402227d:	mov    DWORD PTR [ebp-0xc],edi
64022280:	mov    DWORD PTR [ebp-0x8],edx
64022283:	jg     0x6402224f
64022285:	test   ax,ax
64022288:	jg     0x640222dc
6402228a:	add    eax,0xffff
6402228f:	test   ax,ax
64022292:	jge    0x640222dc
64022294:	mov    edx,eax
64022296:	neg    edx
64022298:	movzx  edx,dx
6402229b:	mov    DWORD PTR [ebp-0x44],edx
6402229e:	add    eax,edx
640222a0:	test   BYTE PTR [ebp-0x10],0x1
640222a4:	je     0x640222a9
640222a6:	inc    DWORD PTR [ebp-0x48]
640222a9:	mov    edx,DWORD PTR [ebp-0x8]
640222ac:	mov    edi,DWORD PTR [ebp-0xc]
640222af:	mov    esi,DWORD PTR [ebp-0xc]
640222b2:	shr    DWORD PTR [ebp-0x8],1
640222b5:	shl    edx,0x1f
640222b8:	shr    edi,1
640222ba:	or     edi,edx
640222bc:	mov    edx,DWORD PTR [ebp-0x10]
640222bf:	shl    esi,0x1f
640222c2:	shr    edx,1
640222c4:	or     edx,esi
640222c6:	dec    DWORD PTR [ebp-0x44]
640222c9:	mov    DWORD PTR [ebp-0xc],edi
640222cc:	mov    DWORD PTR [ebp-0x10],edx
640222cf:	jne    0x640222a0
640222d1:	cmp    DWORD PTR [ebp-0x48],0x0
640222d5:	je     0x640222dc
640222d7:	or     WORD PTR [ebp-0x10],0x1
640222dc:	cmp    WORD PTR [ebp-0x10],0x8000
640222e2:	ja     0x640222f5
640222e4:	mov    edx,DWORD PTR [ebp-0x10]
640222e7:	and    edx,0x1ffff
640222ed:	cmp    edx,0x18000
640222f3:	jne    0x64022328
640222f5:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640222f9:	jne    0x64022325
640222fb:	and    DWORD PTR [ebp-0xe],0x0
640222ff:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64022303:	jne    0x64022320
64022305:	and    DWORD PTR [ebp-0xa],0x0
64022309:	cmp    WORD PTR [ebp-0x6],0xffff
6402230f:	jne    0x6402231a
64022311:	mov    WORD PTR [ebp-0x6],0x8000
64022317:	inc    eax
64022318:	jmp    0x64022328
6402231a:	inc    WORD PTR [ebp-0x6]
6402231e:	jmp    0x64022328
64022320:	inc    DWORD PTR [ebp-0xa]
64022323:	jmp    0x64022328
64022325:	inc    DWORD PTR [ebp-0xe]
64022328:	cmp    ax,0x7fff
6402232c:	jae    0x6402234a
6402232e:	mov    dx,WORD PTR [ebp-0xe]
64022332:	mov    WORD PTR [ebp-0x20],dx
64022336:	mov    edx,DWORD PTR [ebp-0xc]
64022339:	mov    DWORD PTR [ebp-0x1e],edx
6402233c:	mov    edx,DWORD PTR [ebp-0x8]
6402233f:	or     eax,ecx
64022341:	mov    DWORD PTR [ebp-0x1a],edx
64022344:	mov    WORD PTR [ebp-0x16],ax
64022348:	jmp    0x64022366
6402234a:	neg    cx
6402234d:	sbb    ecx,ecx
6402234f:	and    DWORD PTR [ebp-0x1c],0x0
64022353:	and    ecx,0x80000000
64022359:	add    ecx,0x7fff8000
6402235f:	and    DWORD PTR [ebp-0x20],0x0
64022363:	mov    DWORD PTR [ebp-0x18],ecx
64022366:	test   ebx,ebx
64022368:	jne    0x640220d9
6402236e:	xor    eax,eax
64022370:	mov    ecx,DWORD PTR [ebp-0x18]
64022373:	shr    ecx,0x10
64022376:	cmp    cx,0x3fff
6402237b:	mov    ebx,0x7fff
64022380:	jb     0x640225ce
64022386:	mov    esi,DWORD PTR [ebp-0x26]
64022389:	inc    DWORD PTR [ebp-0x4c]
6402238c:	movzx  edx,cx
6402238f:	mov    ecx,esi
64022391:	xor    ecx,edx
64022393:	and    edx,ebx
64022395:	and    esi,ebx
64022397:	and    ecx,0x8000
6402239d:	cmp    dx,bx
640223a0:	lea    edi,[esi+edx*1]
640223a3:	mov    DWORD PTR [ebp-0x58],eax
640223a6:	mov    DWORD PTR [ebp-0x10],eax
640223a9:	mov    DWORD PTR [ebp-0xc],eax
640223ac:	mov    DWORD PTR [ebp-0x8],eax
640223af:	movzx  edi,di
640223b2:	jae    0x640225b4
640223b8:	cmp    si,bx
640223bb:	jae    0x640225b4
640223c1:	cmp    di,0xbffd
640223c6:	ja     0x640225b4
640223cc:	cmp    di,0x3fbf
640223d1:	ja     0x640223db
640223d3:	mov    DWORD PTR [ebp-0x18],eax
640223d6:	jmp    0x640225c8
640223db:	cmp    dx,ax
640223de:	jne    0x640223fd
640223e0:	inc    edi
640223e1:	test   DWORD PTR [ebp-0x18],0x7fffffff
640223e8:	jne    0x640223fd
640223ea:	cmp    DWORD PTR [ebp-0x1c],eax
640223ed:	jne    0x640223fd
640223ef:	cmp    DWORD PTR [ebp-0x20],eax
640223f2:	jne    0x640223fd
640223f4:	mov    WORD PTR [ebp-0x16],ax
640223f8:	jmp    0x640225ce
640223fd:	cmp    si,ax
64022400:	jne    0x64022416
64022402:	inc    edi
64022403:	test   DWORD PTR [ebp-0x28],0x7fffffff
6402240a:	jne    0x64022416
6402240c:	cmp    DWORD PTR [ebp-0x2c],eax
6402240f:	jne    0x64022416
64022411:	cmp    DWORD PTR [ebp-0x30],eax
64022414:	je     0x640223d3
64022416:	and    DWORD PTR [ebp-0x54],0x0
6402241a:	lea    eax,[ebp-0xc]
6402241d:	mov    DWORD PTR [ebp-0x40],0x5
64022424:	mov    edx,DWORD PTR [ebp-0x54]
64022427:	mov    esi,DWORD PTR [ebp-0x40]
6402242a:	add    edx,edx
6402242c:	test   esi,esi
6402242e:	mov    DWORD PTR [ebp-0x50],esi
64022431:	jle    0x64022485
64022433:	lea    esi,[ebp-0x28]
64022436:	lea    edx,[ebp+edx*1-0x20]
6402243a:	mov    DWORD PTR [ebp-0x5c],esi
6402243d:	mov    DWORD PTR [ebp-0x48],edx
64022440:	mov    edx,DWORD PTR [ebp-0x5c]
64022443:	mov    esi,DWORD PTR [ebp-0x48]
64022446:	movzx  esi,WORD PTR [esi]
64022449:	movzx  edx,WORD PTR [edx]
6402244c:	and    DWORD PTR [ebp-0x44],0x0
64022450:	imul   edx,esi
64022453:	mov    esi,DWORD PTR [eax-0x4]
64022456:	lea    ebx,[esi+edx*1]
64022459:	cmp    ebx,esi
6402245b:	jb     0x64022461
6402245d:	cmp    ebx,edx
6402245f:	jae    0x64022468
64022461:	mov    DWORD PTR [ebp-0x44],0x1
64022468:	cmp    DWORD PTR [ebp-0x44],0x0
6402246c:	mov    DWORD PTR [eax-0x4],ebx
6402246f:	je     0x64022474
64022471:	inc    WORD PTR [eax]
64022474:	add    DWORD PTR [ebp-0x48],0x2
64022478:	sub    DWORD PTR [ebp-0x5c],0x2
6402247c:	dec    DWORD PTR [ebp-0x50]
6402247f:	cmp    DWORD PTR [ebp-0x50],0x0
64022483:	jg     0x64022440
64022485:	inc    eax
64022486:	inc    eax
64022487:	inc    DWORD PTR [ebp-0x54]
6402248a:	dec    DWORD PTR [ebp-0x40]
6402248d:	cmp    DWORD PTR [ebp-0x40],0x0
64022491:	jg     0x64022424
64022493:	add    edi,0xc002
64022499:	xor    eax,eax
6402249b:	cmp    di,ax
6402249e:	jle    0x640224dc
640224a0:	test   DWORD PTR [ebp-0x8],0x80000000
640224a7:	jne    0x640224d7
640224a9:	mov    edx,DWORD PTR [ebp-0x10]
640224ac:	mov    ebx,DWORD PTR [ebp-0xc]
640224af:	mov    esi,DWORD PTR [ebp-0xc]
640224b2:	shl    DWORD PTR [ebp-0x10],1
640224b5:	shr    edx,0x1f
640224b8:	add    ebx,ebx
640224ba:	or     ebx,edx
640224bc:	mov    edx,DWORD PTR [ebp-0x8]
640224bf:	shr    esi,0x1f
640224c2:	add    edx,edx
640224c4:	or     edx,esi
640224c6:	add    edi,0xffff
640224cc:	cmp    di,ax
640224cf:	mov    DWORD PTR [ebp-0xc],ebx
640224d2:	mov    DWORD PTR [ebp-0x8],edx
640224d5:	jg     0x640224a0
640224d7:	cmp    di,ax
640224da:	jg     0x64022529
640224dc:	add    edi,0xffff
640224e2:	cmp    di,ax
640224e5:	jge    0x64022529
640224e7:	mov    eax,edi
640224e9:	neg    eax
640224eb:	movzx  eax,ax
640224ee:	add    edi,eax
640224f0:	test   BYTE PTR [ebp-0x10],0x1
640224f4:	je     0x640224f9
640224f6:	inc    DWORD PTR [ebp-0x58]
640224f9:	mov    edx,DWORD PTR [ebp-0x8]
640224fc:	mov    ebx,DWORD PTR [ebp-0xc]
640224ff:	mov    esi,DWORD PTR [ebp-0xc]
64022502:	shr    DWORD PTR [ebp-0x8],1
64022505:	shl    edx,0x1f
64022508:	shr    ebx,1
6402250a:	or     ebx,edx
6402250c:	mov    edx,DWORD PTR [ebp-0x10]
6402250f:	shl    esi,0x1f
64022512:	shr    edx,1
64022514:	or     edx,esi
64022516:	dec    eax
64022517:	mov    DWORD PTR [ebp-0xc],ebx
6402251a:	mov    DWORD PTR [ebp-0x10],edx
6402251d:	jne    0x640224f0
6402251f:	cmp    DWORD PTR [ebp-0x58],eax
64022522:	je     0x64022529
64022524:	or     WORD PTR [ebp-0x10],0x1
64022529:	cmp    WORD PTR [ebp-0x10],0x8000
6402252f:	ja     0x64022542
64022531:	mov    edx,DWORD PTR [ebp-0x10]
64022534:	and    edx,0x1ffff
6402253a:	cmp    edx,0x18000
64022540:	jne    0x64022573
64022542:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64022546:	jne    0x64022570
64022548:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6402254c:	mov    DWORD PTR [ebp-0xe],eax
6402254f:	jne    0x6402256b
64022551:	cmp    WORD PTR [ebp-0x6],0xffff
64022557:	mov    DWORD PTR [ebp-0xa],eax
6402255a:	jne    0x64022565
6402255c:	mov    WORD PTR [ebp-0x6],0x8000
64022562:	inc    edi
64022563:	jmp    0x64022573
64022565:	inc    WORD PTR [ebp-0x6]
64022569:	jmp    0x64022573
6402256b:	inc    DWORD PTR [ebp-0xa]
6402256e:	jmp    0x64022573
64022570:	inc    DWORD PTR [ebp-0xe]
64022573:	cmp    di,0x7fff
64022578:	jb     0x64022598
6402257a:	neg    cx
6402257d:	mov    DWORD PTR [ebp-0x1c],eax
64022580:	mov    DWORD PTR [ebp-0x20],eax
64022583:	sbb    ecx,ecx
64022585:	and    ecx,0x80000000
6402258b:	add    ecx,0x7fff8000
64022591:	mov    DWORD PTR [ebp-0x18],ecx
64022594:	xor    eax,eax
64022596:	jmp    0x640225ce
64022598:	mov    ax,WORD PTR [ebp-0xe]
6402259c:	mov    WORD PTR [ebp-0x20],ax
640225a0:	mov    eax,DWORD PTR [ebp-0xc]
640225a3:	mov    DWORD PTR [ebp-0x1e],eax
640225a6:	mov    eax,DWORD PTR [ebp-0x8]
640225a9:	or     edi,ecx
640225ab:	mov    DWORD PTR [ebp-0x1a],eax
640225ae:	mov    WORD PTR [ebp-0x16],di
640225b2:	jmp    0x64022594
640225b4:	neg    cx
640225b7:	sbb    ecx,ecx
640225b9:	and    ecx,0x80000000
640225bf:	add    ecx,0x7fff8000
640225c5:	mov    DWORD PTR [ebp-0x18],ecx
640225c8:	mov    DWORD PTR [ebp-0x1c],eax
640225cb:	mov    DWORD PTR [ebp-0x20],eax
640225ce:	test   BYTE PTR [ebp+0x18],0x1
640225d2:	mov    edx,DWORD PTR [ebp-0x60]
640225d5:	mov    ecx,DWORD PTR [ebp-0x4c]
640225d8:	mov    WORD PTR [edx],cx
640225db:	je     0x6402260f
640225dd:	movsx  ecx,cx
640225e0:	add    DWORD PTR [ebp+0x14],ecx
640225e3:	cmp    DWORD PTR [ebp+0x14],eax
640225e6:	jg     0x6402260f
640225e8:	and    WORD PTR [edx],0x0
640225ec:	cmp    WORD PTR [ebp-0x6c],0x8000
640225f2:	mov    BYTE PTR [edx+0x3],0x1
640225f6:	setne  al
640225f9:	dec    al
640225fb:	and    al,0xd
640225fd:	add    al,0x20
640225ff:	mov    BYTE PTR [edx+0x2],al
64022602:	mov    BYTE PTR [edx+0x4],0x30
64022606:	mov    BYTE PTR [edx+0x5],0x0
6402260a:	jmp    0x64021fc0
6402260f:	push   0x15
64022611:	pop    ecx
64022612:	cmp    DWORD PTR [ebp+0x14],ecx
64022615:	jle    0x6402261a
64022617:	mov    DWORD PTR [ebp+0x14],ecx
6402261a:	mov    esi,DWORD PTR [ebp-0x18]
6402261d:	shr    esi,0x10
64022620:	push   0x8
64022622:	sub    esi,0x3ffe
64022628:	mov    WORD PTR [ebp-0x16],ax
6402262c:	pop    ebx
6402262d:	mov    eax,DWORD PTR [ebp-0x20]
64022630:	mov    edi,DWORD PTR [ebp-0x1c]
64022633:	mov    ecx,DWORD PTR [ebp-0x1c]
64022636:	shl    DWORD PTR [ebp-0x20],1
64022639:	shr    eax,0x1f
6402263c:	add    edi,edi
6402263e:	or     edi,eax
64022640:	mov    eax,DWORD PTR [ebp-0x18]
64022643:	shr    ecx,0x1f
64022646:	add    eax,eax
64022648:	or     eax,ecx
6402264a:	dec    ebx
6402264b:	mov    DWORD PTR [ebp-0x1c],edi
6402264e:	mov    DWORD PTR [ebp-0x18],eax
64022651:	jne    0x6402262d
64022653:	test   esi,esi
64022655:	jge    0x64022689
64022657:	neg    esi
64022659:	and    esi,0xff
6402265f:	jle    0x64022689
64022661:	mov    eax,DWORD PTR [ebp-0x18]
64022664:	mov    edi,DWORD PTR [ebp-0x1c]
64022667:	mov    ecx,DWORD PTR [ebp-0x1c]
6402266a:	shr    DWORD PTR [ebp-0x18],1
6402266d:	shl    eax,0x1f
64022670:	shr    edi,1
64022672:	or     edi,eax
64022674:	mov    eax,DWORD PTR [ebp-0x20]
64022677:	shl    ecx,0x1f
6402267a:	shr    eax,1
6402267c:	or     eax,ecx
6402267e:	dec    esi
6402267f:	test   esi,esi
64022681:	mov    DWORD PTR [ebp-0x1c],edi
64022684:	mov    DWORD PTR [ebp-0x20],eax
64022687:	jg     0x64022661
64022689:	mov    eax,DWORD PTR [ebp+0x14]
6402268c:	inc    eax
6402268d:	test   eax,eax
6402268f:	lea    ebx,[edx+0x4]
64022692:	mov    DWORD PTR [ebp-0x40],ebx
64022695:	mov    DWORD PTR [ebp-0x4c],eax
64022698:	jle    0x64022753
6402269e:	mov    edx,DWORD PTR [ebp-0x20]
640226a1:	mov    eax,DWORD PTR [ebp-0x1c]
640226a4:	lea    esi,[ebp-0x20]
640226a7:	lea    edi,[ebp-0x3c]
640226aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640226ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640226ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640226ad:	shl    DWORD PTR [ebp-0x20],1
640226b0:	mov    edi,DWORD PTR [ebp-0x20]
640226b3:	shl    DWORD PTR [ebp-0x20],1
640226b6:	shr    edx,0x1f
640226b9:	lea    ecx,[eax+eax*1]
640226bc:	or     ecx,edx
640226be:	mov    edx,DWORD PTR [ebp-0x18]
640226c1:	mov    esi,eax
640226c3:	shr    esi,0x1f
640226c6:	add    edx,edx
640226c8:	or     edx,esi
640226ca:	mov    eax,ecx
640226cc:	lea    esi,[ecx+ecx*1]
640226cf:	shr    eax,0x1f
640226d2:	lea    ecx,[edx+edx*1]
640226d5:	mov    edx,DWORD PTR [ebp-0x3c]
640226d8:	shr    edi,0x1f
640226db:	or     ecx,eax
640226dd:	mov    eax,DWORD PTR [ebp-0x20]
640226e0:	or     esi,edi
640226e2:	lea    edi,[edx+eax*1]
640226e5:	cmp    edi,eax
640226e7:	jb     0x640226ed
640226e9:	cmp    edi,edx
640226eb:	jae    0x64022705
640226ed:	lea    eax,[esi+0x1]
640226f0:	xor    edx,edx
640226f2:	cmp    eax,esi
640226f4:	jb     0x640226fb
640226f6:	cmp    eax,0x1
640226f9:	jae    0x640226fe
640226fb:	xor    edx,edx
640226fd:	inc    edx
640226fe:	test   edx,edx
64022700:	mov    esi,eax
64022702:	je     0x64022705
64022704:	inc    ecx
64022705:	mov    eax,DWORD PTR [ebp-0x38]
64022708:	lea    edx,[eax+esi*1]
6402270b:	cmp    edx,esi
6402270d:	mov    DWORD PTR [ebp-0x44],edx
64022710:	jb     0x64022716
64022712:	cmp    edx,eax
64022714:	jae    0x64022717
64022716:	inc    ecx
64022717:	add    ecx,DWORD PTR [ebp-0x34]
6402271a:	shr    edx,0x1f
6402271d:	add    ecx,ecx
6402271f:	or     ecx,edx
64022721:	lea    esi,[edi+edi*1]
64022724:	mov    DWORD PTR [ebp-0x20],esi
64022727:	mov    esi,DWORD PTR [ebp-0x44]
6402272a:	mov    DWORD PTR [ebp-0x18],ecx
6402272d:	shr    ecx,0x18
64022730:	add    esi,esi
64022732:	add    cl,0x30
64022735:	mov    eax,edi
64022737:	shr    eax,0x1f
6402273a:	or     esi,eax
6402273c:	mov    BYTE PTR [ebx],cl
6402273e:	inc    ebx
6402273f:	dec    DWORD PTR [ebp-0x4c]
64022742:	cmp    DWORD PTR [ebp-0x4c],0x0
64022746:	mov    DWORD PTR [ebp-0x1c],esi
64022749:	mov    BYTE PTR [ebp-0x15],0x0
6402274d:	jg     0x6402269e
64022753:	dec    ebx
64022754:	mov    al,BYTE PTR [ebx]
64022756:	dec    ebx
64022757:	cmp    al,0x35
64022759:	jge    0x64022769
6402275b:	mov    ecx,DWORD PTR [ebp-0x40]
6402275e:	jmp    0x640227a4
64022760:	cmp    BYTE PTR [ebx],0x39
64022763:	jne    0x6402276e
64022765:	mov    BYTE PTR [ebx],0x30
64022768:	dec    ebx
64022769:	cmp    ebx,DWORD PTR [ebp-0x40]
6402276c:	jae    0x64022760
6402276e:	cmp    ebx,DWORD PTR [ebp-0x40]
64022771:	mov    eax,DWORD PTR [ebp-0x60]
64022774:	jae    0x6402277a
64022776:	inc    ebx
64022777:	inc    WORD PTR [eax]
6402277a:	inc    BYTE PTR [ebx]
6402277c:	sub    bl,al
6402277e:	sub    bl,0x3
64022781:	movsx  ecx,bl
64022784:	mov    BYTE PTR [eax+0x3],bl
64022787:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
6402278c:	mov    eax,DWORD PTR [ebp-0x74]
6402278f:	mov    ecx,DWORD PTR [ebp-0x4]
64022792:	pop    edi
64022793:	pop    esi
64022794:	xor    ecx,ebp
64022796:	pop    ebx
64022797:	call   0x64013d06
6402279c:	leave  
6402279d:	ret    
6402279e:	cmp    BYTE PTR [ebx],0x30
640227a1:	jne    0x640227a8
640227a3:	dec    ebx
640227a4:	cmp    ebx,ecx
640227a6:	jae    0x6402279e
640227a8:	cmp    ebx,ecx
640227aa:	mov    eax,DWORD PTR [ebp-0x60]
640227ad:	jae    0x6402277c
640227af:	and    WORD PTR [eax],0x0
640227b3:	cmp    WORD PTR [ebp-0x6c],0x8000
640227b9:	mov    BYTE PTR [eax+0x3],0x1
640227bd:	setne  dl
640227c0:	dec    dl
640227c2:	and    dl,0xd
640227c5:	add    dl,0x20
640227c8:	mov    BYTE PTR [eax+0x2],dl
640227cb:	mov    BYTE PTR [ecx],0x30
640227ce:	mov    BYTE PTR [eax+0x5],0x0
640227d2:	jmp    0x64021fc0
640227d7:	xor    eax,eax
640227d9:	test   bl,0x10
640227dc:	je     0x640227df
640227de:	inc    eax
640227df:	test   bl,0x8
640227e2:	je     0x640227e7
640227e4:	or     eax,0x4
640227e7:	test   bl,0x4
640227ea:	je     0x640227ef
640227ec:	or     eax,0x8
640227ef:	test   bl,0x2
640227f2:	je     0x640227f7
640227f4:	or     eax,0x10
640227f7:	test   bl,0x1
640227fa:	je     0x640227ff
640227fc:	or     eax,0x20
640227ff:	test   ebx,0x80000
64022805:	je     0x6402280a
64022807:	or     eax,0x2
6402280a:	mov    ecx,ebx
6402280c:	mov    edx,0x300
64022811:	and    ecx,edx
64022813:	push   esi
64022814:	mov    esi,0x200
64022819:	je     0x6402283e
6402281b:	cmp    ecx,0x100
64022821:	je     0x64022839
64022823:	cmp    ecx,esi
64022825:	je     0x64022832
64022827:	cmp    ecx,edx
64022829:	jne    0x6402283e
6402282b:	or     eax,0xc00
64022830:	jmp    0x6402283e
64022832:	or     eax,0x800
64022837:	jmp    0x6402283e
64022839:	or     eax,0x400
6402283e:	mov    ecx,ebx
64022840:	and    ecx,0x30000
64022846:	je     0x64022854
64022848:	cmp    ecx,0x10000
6402284e:	jne    0x64022856
64022850:	or     eax,esi
64022852:	jmp    0x64022856
64022854:	or     eax,edx
64022856:	test   ebx,0x40000
6402285c:	pop    esi
6402285d:	je     0x64022864
6402285f:	or     eax,0x1000
64022864:	ret    
64022865:	xor    eax,eax
64022867:	test   dl,0x10
6402286a:	je     0x64022871
6402286c:	mov    eax,0x80
64022871:	test   dl,0x8
64022874:	push   ebx
64022875:	push   esi
64022876:	push   edi
64022877:	mov    ebx,0x200
6402287c:	je     0x64022880
6402287e:	or     eax,ebx
64022880:	test   dl,0x4
64022883:	je     0x6402288a
64022885:	or     eax,0x400
6402288a:	test   dl,0x2
6402288d:	je     0x64022894
6402288f:	or     eax,0x800
64022894:	test   dl,0x1
64022897:	je     0x6402289e
64022899:	or     eax,0x1000
6402289e:	test   edx,0x80000
640228a4:	mov    edi,0x100
640228a9:	je     0x640228ad
640228ab:	or     eax,edi
640228ad:	mov    ecx,edx
640228af:	mov    esi,0x300
640228b4:	and    ecx,esi
640228b6:	je     0x640228d7
640228b8:	cmp    ecx,edi
640228ba:	je     0x640228d2
640228bc:	cmp    ecx,ebx
640228be:	je     0x640228cb
640228c0:	cmp    ecx,esi
640228c2:	jne    0x640228d7
640228c4:	or     eax,0x6000
640228c9:	jmp    0x640228d7
640228cb:	or     eax,0x4000
640228d0:	jmp    0x640228d7
640228d2:	or     eax,0x2000
640228d7:	mov    ecx,0x3000000
640228dc:	pop    edi
640228dd:	and    edx,ecx
640228df:	cmp    edx,0x1000000
640228e5:	pop    esi
640228e6:	pop    ebx
640228e7:	je     0x640228ff
640228e9:	cmp    edx,0x2000000
640228ef:	je     0x640228fb
640228f1:	cmp    edx,ecx
640228f3:	jne    0x64022904
640228f5:	or     eax,0x8000
640228fa:	ret    
640228fb:	or     eax,0x40
640228fe:	ret    
640228ff:	or     eax,0x8040
64022904:	ret    
64022905:	sub    esp,0x10
64022908:	push   ebx
64022909:	push   ebp
6402290a:	push   esi
6402290b:	push   edi
6402290c:	fstcw  WORD PTR [esp+0x14]
64022911:	mov    ebx,DWORD PTR [esp+0x14]
64022915:	xor    edx,edx
64022917:	test   bl,0x1
6402291a:	je     0x6402291f
6402291c:	push   0x10
6402291e:	pop    edx
6402291f:	test   bl,0x4
64022922:	je     0x64022927
64022924:	or     edx,0x8
64022927:	test   bl,0x8
6402292a:	je     0x6402292f
6402292c:	or     edx,0x4
6402292f:	test   bl,0x10
64022932:	je     0x64022937
64022934:	or     edx,0x2
64022937:	test   bl,0x20
6402293a:	je     0x6402293f
6402293c:	or     edx,0x1
6402293f:	test   bl,0x2
64022942:	je     0x6402294a
64022944:	or     edx,0x80000
6402294a:	movzx  ecx,bx
6402294d:	mov    eax,ecx
6402294f:	mov    edi,0xc00
64022954:	and    eax,edi
64022956:	mov    ebp,0x300
6402295b:	mov    esi,0x200
64022960:	je     0x64022982
64022962:	cmp    eax,0x400
64022967:	je     0x6402297c
64022969:	cmp    eax,0x800
6402296e:	je     0x64022978
64022970:	cmp    eax,edi
64022972:	jne    0x64022982
64022974:	or     edx,ebp
64022976:	jmp    0x64022982
64022978:	or     edx,esi
6402297a:	jmp    0x64022982
6402297c:	or     edx,0x100
64022982:	and    ecx,ebp
64022984:	je     0x64022992
64022986:	cmp    ecx,esi
64022988:	jne    0x64022998
6402298a:	or     edx,0x10000
64022990:	jmp    0x64022998
64022992:	or     edx,0x20000
64022998:	test   bx,0x1000
6402299d:	je     0x640229a5
6402299f:	or     edx,0x40000
640229a5:	mov    esi,DWORD PTR [esp+0x28]
640229a9:	mov    ecx,DWORD PTR [esp+0x24]
640229ad:	mov    eax,esi
640229af:	not    eax
640229b1:	and    eax,edx
640229b3:	and    ecx,esi
640229b5:	or     eax,ecx
640229b7:	cmp    eax,edx
640229b9:	mov    DWORD PTR [esp+0x1c],eax
640229bd:	je     0x64022a6d
640229c3:	mov    ebx,eax
640229c5:	call   0x640227d7
640229ca:	movzx  eax,ax
640229cd:	mov    DWORD PTR [esp+0x10],eax
640229d1:	fldcw  WORD PTR [esp+0x10]
640229d5:	fstcw  WORD PTR [esp+0x10]
640229da:	mov    ebx,DWORD PTR [esp+0x10]
640229de:	xor    edx,edx
640229e0:	test   bl,0x1
640229e3:	je     0x640229e8
640229e5:	push   0x10
640229e7:	pop    edx
640229e8:	test   bl,0x4
640229eb:	je     0x640229f0
640229ed:	or     edx,0x8
640229f0:	test   bl,0x8
640229f3:	je     0x640229f8
640229f5:	or     edx,0x4
640229f8:	test   bl,0x10
640229fb:	je     0x64022a00
640229fd:	or     edx,0x2
64022a00:	test   bl,0x20
64022a03:	je     0x64022a08
64022a05:	or     edx,0x1
64022a08:	test   bl,0x2
64022a0b:	je     0x64022a13
64022a0d:	or     edx,0x80000
64022a13:	movzx  ecx,bx
64022a16:	mov    eax,ecx
64022a18:	and    eax,edi
64022a1a:	je     0x64022a40
64022a1c:	cmp    eax,0x400
64022a21:	je     0x64022a3a
64022a23:	cmp    eax,0x800
64022a28:	je     0x64022a32
64022a2a:	cmp    eax,edi
64022a2c:	jne    0x64022a40
64022a2e:	or     edx,ebp
64022a30:	jmp    0x64022a40
64022a32:	or     edx,0x200
64022a38:	jmp    0x64022a40
64022a3a:	or     edx,0x100
64022a40:	and    ecx,ebp
64022a42:	je     0x64022a54
64022a44:	cmp    ecx,0x200
64022a4a:	jne    0x64022a5a
64022a4c:	or     edx,0x10000
64022a52:	jmp    0x64022a5a
64022a54:	or     edx,0x20000
64022a5a:	test   bx,0x1000
64022a5f:	je     0x64022a67
64022a61:	or     edx,0x40000
64022a67:	mov    eax,edx
64022a69:	mov    DWORD PTR [esp+0x1c],edx
64022a6d:	cmp    DWORD PTR ds:0x64039b24,0x0
64022a74:	je     0x64022c00
64022a7a:	and    esi,0x308031f
64022a80:	mov    edi,esi
64022a82:	stmxcsr DWORD PTR [esp+0x18]
64022a87:	mov    eax,DWORD PTR [esp+0x18]
64022a8b:	xor    esi,esi
64022a8d:	test   al,al
64022a8f:	jns    0x64022a94
64022a91:	push   0x10
64022a93:	pop    esi
64022a94:	test   ax,0x200
64022a98:	je     0x64022a9d
64022a9a:	or     esi,0x8
64022a9d:	test   ax,0x400
64022aa1:	je     0x64022aa6
64022aa3:	or     esi,0x4
64022aa6:	test   ax,0x800
64022aaa:	je     0x64022aaf
64022aac:	or     esi,0x2
64022aaf:	test   ax,0x1000
64022ab3:	je     0x64022ab8
64022ab5:	or     esi,0x1
64022ab8:	test   ax,0x100
64022abc:	je     0x64022ac4
64022abe:	or     esi,0x80000
64022ac4:	mov    ecx,eax
64022ac6:	mov    ebp,0x6000
64022acb:	and    ecx,ebp
64022acd:	je     0x64022af9
64022acf:	cmp    ecx,0x2000
64022ad5:	je     0x64022af3
64022ad7:	cmp    ecx,0x4000
64022add:	je     0x64022aeb
64022adf:	cmp    ecx,ebp
64022ae1:	jne    0x64022af9
64022ae3:	or     esi,0x300
64022ae9:	jmp    0x64022af9
64022aeb:	or     esi,0x200
64022af1:	jmp    0x64022af9
64022af3:	or     esi,0x100
64022af9:	mov    ebx,0x8040
64022afe:	and    eax,ebx
64022b00:	sub    eax,0x40
64022b03:	je     0x64022b21
64022b05:	sub    eax,0x7fc0
64022b0a:	je     0x64022b19
64022b0c:	sub    eax,0x40
64022b0f:	jne    0x64022b27
64022b11:	or     esi,0x1000000
64022b17:	jmp    0x64022b27
64022b19:	or     esi,0x3000000
64022b1f:	jmp    0x64022b27
64022b21:	or     esi,0x2000000
64022b27:	mov    edx,edi
64022b29:	and    edi,DWORD PTR [esp+0x24]
64022b2d:	not    edx
64022b2f:	and    edx,esi
64022b31:	or     edx,edi
64022b33:	cmp    edx,esi
64022b35:	jne    0x64022b3e
64022b37:	mov    eax,esi
64022b39:	jmp    0x64022be9
64022b3e:	call   0x64022865
64022b43:	push   eax
64022b44:	mov    DWORD PTR [esp+0x2c],eax
64022b48:	call   0x64022c08
64022b4d:	pop    ecx
64022b4e:	stmxcsr DWORD PTR [esp+0x28]
64022b53:	mov    eax,DWORD PTR [esp+0x28]
64022b57:	xor    edx,edx
64022b59:	test   al,al
64022b5b:	jns    0x64022b60
64022b5d:	push   0x10
64022b5f:	pop    edx
64022b60:	mov    edi,0x200
64022b65:	test   edi,eax
64022b67:	je     0x64022b6c
64022b69:	or     edx,0x8
64022b6c:	test   ax,0x400
64022b70:	je     0x64022b75
64022b72:	or     edx,0x4
64022b75:	test   ax,0x800
64022b79:	je     0x64022b7e
64022b7b:	or     edx,0x2
64022b7e:	test   ax,0x1000
64022b82:	je     0x64022b87
64022b84:	or     edx,0x1
64022b87:	mov    esi,0x100
64022b8c:	test   esi,eax
64022b8e:	je     0x64022b96
64022b90:	or     edx,0x80000
64022b96:	mov    ecx,eax
64022b98:	and    ecx,ebp
64022b9a:	je     0x64022bbe
64022b9c:	cmp    ecx,0x2000
64022ba2:	je     0x64022bbc
64022ba4:	cmp    ecx,0x4000
64022baa:	je     0x64022bb8
64022bac:	cmp    ecx,ebp
64022bae:	jne    0x64022bbe
64022bb0:	or     edx,0x300
64022bb6:	jmp    0x64022bbe
64022bb8:	or     edx,edi
64022bba:	jmp    0x64022bbe
64022bbc:	or     edx,esi
64022bbe:	and    eax,ebx
64022bc0:	sub    eax,0x40
64022bc3:	je     0x64022be1
64022bc5:	sub    eax,0x7fc0
64022bca:	je     0x64022bd9
64022bcc:	sub    eax,0x40
64022bcf:	jne    0x64022be7
64022bd1:	or     edx,0x1000000
64022bd7:	jmp    0x64022be7
64022bd9:	or     edx,0x3000000
64022bdf:	jmp    0x64022be7
64022be1:	or     edx,0x2000000
64022be7:	mov    eax,edx
64022be9:	mov    ecx,DWORD PTR [esp+0x1c]
64022bed:	mov    edx,eax
64022bef:	xor    edx,ecx
64022bf1:	or     eax,ecx
64022bf3:	test   edx,0x8031f
64022bf9:	je     0x64022c00
64022bfb:	or     eax,0x80000000
64022c00:	pop    edi
64022c01:	pop    esi
64022c02:	pop    ebp
64022c03:	pop    ebx
64022c04:	add    esp,0x10
64022c07:	ret    
64022c08:	push   0x8
64022c0a:	push   0x6402bbe8
64022c0f:	call   0x64015f14
64022c14:	xor    eax,eax
64022c16:	cmp    DWORD PTR ds:0x64039b24,eax
64022c1c:	je     0x64022c74
64022c1e:	test   BYTE PTR [ebp+0x8],0x40
64022c22:	je     0x64022c6c
64022c24:	cmp    DWORD PTR ds:0x640389e8,eax
64022c2a:	je     0x64022c6c
64022c2c:	mov    DWORD PTR [ebp-0x4],eax
64022c2f:	ldmxcsr DWORD PTR [ebp+0x8]
64022c33:	jmp    0x64022c63
64022c35:	mov    eax,DWORD PTR [ebp-0x14]
64022c38:	mov    eax,DWORD PTR [eax]
64022c3a:	mov    eax,DWORD PTR [eax]
64022c3c:	cmp    eax,0xc0000005
64022c41:	je     0x64022c4d
64022c43:	cmp    eax,0xc000001d
64022c48:	je     0x64022c4d
64022c4a:	xor    eax,eax
64022c4c:	ret    
64022c4d:	xor    eax,eax
64022c4f:	inc    eax
64022c50:	ret    
64022c51:	mov    esp,DWORD PTR [ebp-0x18]
64022c54:	and    DWORD PTR ds:0x640389e8,0x0
64022c5b:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022c5f:	ldmxcsr DWORD PTR [ebp+0x8]
64022c63:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64022c6a:	jmp    0x64022c74
64022c6c:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022c70:	ldmxcsr DWORD PTR [ebp+0x8]
64022c74:	call   0x64015f59
64022c79:	ret    
64022c7a:	int3   
64022c7b:	int3   
64022c7c:	int3   
64022c7d:	int3   
64022c7e:	int3   
64022c7f:	int3   
64022c80:	lea    eax,[edx-0x1]
64022c83:	pop    ebx
64022c84:	ret    
64022c85:	lea    esp,[esp+0x0]
64022c8c:	lea    esp,[esp+0x0]
64022c90:	xor    eax,eax
64022c92:	mov    al,BYTE PTR [esp+0x8]
64022c96:	push   ebx
64022c97:	mov    ebx,eax
64022c99:	shl    eax,0x8
64022c9c:	mov    edx,DWORD PTR [esp+0x8]
64022ca0:	test   edx,0x3
64022ca6:	je     0x64022cbd
64022ca8:	mov    cl,BYTE PTR [edx]
64022caa:	add    edx,0x1
64022cad:	cmp    cl,bl
64022caf:	je     0x64022c80
64022cb1:	test   cl,cl
64022cb3:	je     0x64022d06
64022cb5:	test   edx,0x3
64022cbb:	jne    0x64022ca8
64022cbd:	or     ebx,eax
64022cbf:	push   edi
64022cc0:	mov    eax,ebx
64022cc2:	shl    ebx,0x10
64022cc5:	push   esi
64022cc6:	or     ebx,eax
64022cc8:	mov    ecx,DWORD PTR [edx]
64022cca:	mov    edi,0x7efefeff
64022ccf:	mov    eax,ecx
64022cd1:	mov    esi,edi
64022cd3:	xor    ecx,ebx
64022cd5:	add    esi,eax
64022cd7:	add    edi,ecx
64022cd9:	xor    ecx,0xffffffff
64022cdc:	xor    eax,0xffffffff
64022cdf:	xor    ecx,edi
64022ce1:	xor    eax,esi
64022ce3:	add    edx,0x4
64022ce6:	and    ecx,0x81010100
64022cec:	jne    0x64022d0a
64022cee:	and    eax,0x81010100
64022cf3:	je     0x64022cc8
64022cf5:	and    eax,0x1010100
64022cfa:	jne    0x64022d04
64022cfc:	and    esi,0x80000000
64022d02:	jne    0x64022cc8
64022d04:	pop    esi
64022d05:	pop    edi
64022d06:	pop    ebx
64022d07:	xor    eax,eax
64022d09:	ret    
64022d0a:	mov    eax,DWORD PTR [edx-0x4]
64022d0d:	cmp    al,bl
64022d0f:	je     0x64022d47
64022d11:	test   al,al
64022d13:	je     0x64022d04
64022d15:	cmp    ah,bl
64022d17:	je     0x64022d40
64022d19:	test   ah,ah
64022d1b:	je     0x64022d04
64022d1d:	shr    eax,0x10
64022d20:	cmp    al,bl
64022d22:	je     0x64022d39
64022d24:	test   al,al
64022d26:	je     0x64022d04
64022d28:	cmp    ah,bl
64022d2a:	je     0x64022d32
64022d2c:	test   ah,ah
64022d2e:	je     0x64022d04
64022d30:	jmp    0x64022cc8
64022d32:	pop    esi
64022d33:	pop    edi
64022d34:	lea    eax,[edx-0x1]
64022d37:	pop    ebx
64022d38:	ret    
64022d39:	lea    eax,[edx-0x2]
64022d3c:	pop    esi
64022d3d:	pop    edi
64022d3e:	pop    ebx
64022d3f:	ret    
64022d40:	lea    eax,[edx-0x3]
64022d43:	pop    esi
64022d44:	pop    edi
64022d45:	pop    ebx
64022d46:	ret    
64022d47:	lea    eax,[edx-0x4]
64022d4a:	pop    esi
64022d4b:	pop    edi
64022d4c:	pop    ebx
64022d4d:	ret    
64022d4e:	int3   
64022d4f:	int3   
64022d50:	push   esi
64022d51:	mov    esi,ecx
64022d53:	mov    eax,DWORD PTR [esi+0x8]
64022d56:	test   eax,eax
64022d58:	mov    DWORD PTR [esi],0x6402958c
64022d5e:	je     0x64022d68
64022d60:	mov    ecx,DWORD PTR [eax]
64022d62:	mov    edx,DWORD PTR [ecx+0x8]
64022d65:	push   eax
64022d66:	call   edx
64022d68:	cmp    DWORD PTR [esi+0xc],0x0
64022d6c:	je     0x64022d85
64022d6e:	call   DWORD PTR ds:0x6402418c
64022d74:	test   eax,eax
64022d76:	je     0x64022d85
64022d78:	mov    ecx,DWORD PTR [esi+0xc]
64022d7b:	push   ecx
64022d7c:	push   0x0
64022d7e:	push   eax
64022d7f:	call   DWORD PTR ds:0x64024180
64022d85:	pop    esi
64022d86:	ret    
64022d87:	int3   
64022d88:	int3   
64022d89:	int3   
64022d8a:	int3   
64022d8b:	int3   
64022d8c:	int3   
64022d8d:	int3   
64022d8e:	int3   
64022d8f:	int3   
64022d90:	sub    esp,0x10
64022d93:	mov    eax,DWORD PTR [esp+0x14]
64022d97:	mov    ecx,DWORD PTR [esp+0x18]
64022d9b:	push   0x6402bc04
64022da0:	lea    edx,[esp+0x4]
64022da4:	push   edx
64022da5:	mov    DWORD PTR [esp+0x8],0x6402958c
64022dad:	mov    DWORD PTR [esp+0xc],eax
64022db1:	mov    DWORD PTR [esp+0x10],ecx
64022db5:	mov    DWORD PTR [esp+0x14],0x0
64022dbd:	call   0x64013872
64022dc2:	int3   
64022dc3:	int3   
64022dc4:	int3   
64022dc5:	int3   
64022dc6:	int3   
64022dc7:	int3   
64022dc8:	int3   
64022dc9:	int3   
64022dca:	int3   
64022dcb:	int3   
64022dcc:	int3   
64022dcd:	int3   
64022dce:	int3   
64022dcf:	int3   
64022dd0:	mov    eax,DWORD PTR [esp+0x4]
64022dd4:	push   esi
64022dd5:	mov    esi,ecx
64022dd7:	mov    DWORD PTR [esi],0x6402958c
64022ddd:	mov    ecx,DWORD PTR [eax+0x4]
64022de0:	mov    DWORD PTR [esi+0x4],ecx
64022de3:	mov    edx,DWORD PTR [eax+0x8]
64022de6:	mov    eax,edx
64022de8:	test   eax,eax
64022dea:	mov    DWORD PTR [esi+0x8],edx
64022ded:	mov    DWORD PTR [esi+0xc],0x0
64022df4:	je     0x64022dfe
64022df6:	mov    ecx,DWORD PTR [eax]
64022df8:	mov    edx,DWORD PTR [ecx+0x4]
64022dfb:	push   eax
64022dfc:	call   edx
64022dfe:	mov    eax,esi
64022e00:	pop    esi
64022e01:	ret    0x4
64022e04:	int3   
64022e05:	int3   
64022e06:	int3   
64022e07:	int3   
64022e08:	int3   
64022e09:	int3   
64022e0a:	int3   
64022e0b:	int3   
64022e0c:	int3   
64022e0d:	int3   
64022e0e:	int3   
64022e0f:	int3   
64022e10:	push   esi
64022e11:	mov    esi,ecx
64022e13:	mov    eax,DWORD PTR [esi+0x8]
64022e16:	test   eax,eax
64022e18:	mov    DWORD PTR [esi],0x6402958c
64022e1e:	je     0x64022e28
64022e20:	mov    ecx,DWORD PTR [eax]
64022e22:	mov    edx,DWORD PTR [ecx+0x8]
64022e25:	push   eax
64022e26:	call   edx
64022e28:	cmp    DWORD PTR [esi+0xc],0x0
64022e2c:	je     0x64022e45
64022e2e:	call   DWORD PTR ds:0x6402418c
64022e34:	test   eax,eax
64022e36:	je     0x64022e45
64022e38:	mov    ecx,DWORD PTR [esi+0xc]
64022e3b:	push   ecx
64022e3c:	push   0x0
64022e3e:	push   eax
64022e3f:	call   DWORD PTR ds:0x64024180
64022e45:	test   BYTE PTR [esp+0x8],0x1
64022e4a:	je     0x64022e55
64022e4c:	push   esi
64022e4d:	call   0x64013644
64022e52:	add    esp,0x4
64022e55:	mov    eax,esi
64022e57:	pop    esi
64022e58:	ret    0x4
64022e5b:	int3   
64022e5c:	jmp    DWORD PTR ds:0x64024190
64022e62:	int3   
64022e63:	int3   
64022e64:	int3   
64022e65:	int3   
64022e66:	int3   
64022e67:	int3   
64022e68:	int3   
64022e69:	int3   
64022e6a:	int3   
64022e6b:	int3   
64022e6c:	int3   
64022e6d:	int3   
64022e6e:	int3   
64022e6f:	int3   
64022e70:	lea    ecx,[ebp-0x14]
64022e73:	jmp    0x640036b0
64022e78:	lea    ecx,[ebp-0x30]
64022e7b:	jmp    0x64002990
64022e80:	mov    edx,DWORD PTR [esp+0x8]
64022e84:	lea    eax,[edx+0xc]
64022e87:	mov    ecx,DWORD PTR [edx-0x44]
64022e8a:	xor    ecx,eax
64022e8c:	call   0x64013d06
64022e91:	mov    ecx,DWORD PTR [edx-0x4]
64022e94:	xor    ecx,eax
64022e96:	call   0x64013d06
64022e9b:	mov    eax,0x6402b5c8
64022ea0:	jmp    0x640139c8
64022ea5:	int3   
64022ea6:	int3   
64022ea7:	int3   
64022ea8:	int3   
64022ea9:	int3   
64022eaa:	int3   
64022eab:	int3   
64022eac:	int3   
64022ead:	int3   
64022eae:	int3   
64022eaf:	int3   
64022eb0:	lea    ecx,[ebp-0x44]
64022eb3:	jmp    0x640070b0
64022eb8:	lea    ecx,[ebp-0x30]
64022ebb:	jmp    0x64002990
64022ec0:	lea    ecx,[ebp-0x34]
64022ec3:	jmp    0x640036b0
64022ec8:	mov    edx,DWORD PTR [esp+0x8]
64022ecc:	lea    eax,[edx+0xc]
64022ecf:	mov    ecx,DWORD PTR [edx-0x48]
64022ed2:	xor    ecx,eax
64022ed4:	call   0x64013d06
64022ed9:	mov    ecx,DWORD PTR [edx-0x8]
64022edc:	xor    ecx,eax
64022ede:	call   0x64013d06
64022ee3:	mov    eax,0x6402b610
64022ee8:	jmp    0x640139c8
64022eed:	lea    ecx,[ebp-0x28]
64022ef0:	jmp    0x64002990
64022ef5:	mov    edx,DWORD PTR [esp+0x8]
64022ef9:	lea    eax,[edx+0xc]
64022efc:	mov    ecx,DWORD PTR [edx-0x54]
64022eff:	xor    ecx,eax
64022f01:	call   0x64013d06
64022f06:	mov    eax,0x6402b664
64022f0b:	jmp    0x640139c8
64022f10:	lea    ecx,[ebp-0x28]
64022f13:	jmp    0x64002990
64022f18:	mov    edx,DWORD PTR [esp+0x8]
64022f1c:	lea    eax,[edx+0xc]
64022f1f:	mov    ecx,DWORD PTR [edx-0x54]
64022f22:	xor    ecx,eax
64022f24:	call   0x64013d06
64022f29:	mov    eax,0x6402b690
64022f2e:	jmp    0x640139c8
64022f33:	mov    edx,DWORD PTR [esp+0x8]
64022f37:	lea    eax,[edx+0xc]
64022f3a:	mov    ecx,DWORD PTR [edx-0x14]
64022f3d:	xor    ecx,eax
64022f3f:	call   0x64013d06
64022f44:	mov    eax,0x6402b870
64022f49:	jmp    0x640139c8
64022f4e:	int3   
64022f4f:	int3   
64022f50:	lea    eax,[ebp-0x50]
64022f53:	jmp    0x64006cd0
64022f58:	lea    eax,[ebp-0x4c]
64022f5b:	jmp    0x64006cd0
64022f60:	mov    edx,DWORD PTR [esp+0x8]
64022f64:	lea    eax,[edx-0x5c]
64022f67:	mov    ecx,DWORD PTR [edx-0x60]
64022f6a:	xor    ecx,eax
64022f6c:	call   0x64013d06
64022f71:	mov    eax,0x6402be2c
64022f76:	jmp    0x640139c8
64022f7b:	int3   
64022f7c:	int3   
64022f7d:	int3   
64022f7e:	int3   
64022f7f:	int3   
64022f80:	mov    eax,DWORD PTR [ebp+0x4]
64022f83:	jmp    0x64006cd0
64022f88:	mov    edx,DWORD PTR [esp+0x8]
64022f8c:	lea    eax,[edx-0xc]
64022f8f:	mov    ecx,DWORD PTR [edx-0x10]
64022f92:	xor    ecx,eax
64022f94:	call   0x64013d06
64022f99:	mov    eax,0x6402be58
64022f9e:	jmp    0x640139c8
64022fa3:	int3   
64022fa4:	int3   
64022fa5:	int3   
64022fa6:	int3   
64022fa7:	int3   
64022fa8:	int3   
64022fa9:	int3   
64022faa:	int3   
64022fab:	int3   
64022fac:	int3   
64022fad:	int3   
64022fae:	int3   
64022faf:	int3   
64022fb0:	lea    ecx,[ebp+0x8]
64022fb3:	jmp    0x640036b0
64022fb8:	lea    ecx,[ebp-0x43c]
64022fbe:	jmp    0x64002e40
64022fc3:	mov    edx,DWORD PTR [esp+0x8]
64022fc7:	lea    eax,[edx-0x444]
64022fcd:	mov    ecx,DWORD PTR [edx-0x448]
64022fd3:	xor    ecx,eax
64022fd5:	call   0x64013d06
64022fda:	add    eax,0x10
64022fdd:	mov    ecx,DWORD PTR [edx-0x4]
64022fe0:	xor    ecx,eax
64022fe2:	call   0x64013d06
64022fe7:	mov    eax,0x6402be8c
64022fec:	jmp    0x640139c8
64022ff1:	int3   
64022ff2:	int3   
64022ff3:	int3   
64022ff4:	int3   
64022ff5:	int3   
64022ff6:	int3   
64022ff7:	int3   
64022ff8:	int3   
64022ff9:	int3   
64022ffa:	int3   
64022ffb:	int3   
64022ffc:	int3   
64022ffd:	int3   
64022ffe:	int3   
64022fff:	int3   
64023000:	mov    edx,DWORD PTR [esp+0x8]
64023004:	lea    eax,[edx+0xc]
64023007:	mov    ecx,DWORD PTR [edx-0x28]
6402300a:	xor    ecx,eax
6402300c:	call   0x64013d06
64023011:	mov    eax,0x6402bf18
64023016:	jmp    0x640139c8
6402301b:	int3   
6402301c:	int3   
6402301d:	int3   
6402301e:	int3   
6402301f:	int3   
64023020:	mov    edx,DWORD PTR [esp+0x8]
64023024:	lea    eax,[edx+0xc]
64023027:	mov    ecx,DWORD PTR [edx-0x2c]
6402302a:	xor    ecx,eax
6402302c:	call   0x64013d06
64023031:	mov    eax,0x6402bfa4
64023036:	jmp    0x640139c8
6402303b:	int3   
6402303c:	int3   
6402303d:	int3   
6402303e:	int3   
6402303f:	int3   
64023040:	lea    esi,[ebp+0x4]
64023043:	jmp    0x64003d70
64023048:	mov    edx,DWORD PTR [esp+0x8]
6402304c:	lea    eax,[edx-0x10]
6402304f:	mov    ecx,DWORD PTR [edx-0x14]
64023052:	xor    ecx,eax
64023054:	call   0x64013d06
64023059:	mov    eax,0x6402bfd0
6402305e:	jmp    0x640139c8
64023063:	int3   
64023064:	int3   
64023065:	int3   
64023066:	int3   
64023067:	int3   
64023068:	int3   
64023069:	int3   
6402306a:	int3   
6402306b:	int3   
6402306c:	int3   
6402306d:	int3   
6402306e:	int3   
6402306f:	int3   
64023070:	mov    ecx,DWORD PTR [ebp-0x10]
64023073:	jmp    0x64013718
64023078:	mov    edx,DWORD PTR [esp+0x8]
6402307c:	lea    eax,[edx-0xc]
6402307f:	mov    ecx,DWORD PTR [edx-0x10]
64023082:	xor    ecx,eax
64023084:	call   0x64013d06
64023089:	mov    eax,0x6402bffc
6402308e:	jmp    0x640139c8
64023093:	int3   
64023094:	int3   
64023095:	int3   
64023096:	int3   
64023097:	int3   
64023098:	int3   
64023099:	int3   
6402309a:	int3   
6402309b:	int3   
6402309c:	int3   
6402309d:	int3   
6402309e:	int3   
6402309f:	int3   
640230a0:	mov    ecx,DWORD PTR [ebp-0x10]
640230a3:	jmp    0x64013718
640230a8:	mov    edx,DWORD PTR [esp+0x8]
640230ac:	lea    eax,[edx-0xc]
640230af:	mov    ecx,DWORD PTR [edx-0x10]
640230b2:	xor    ecx,eax
640230b4:	call   0x64013d06
640230b9:	mov    eax,0x6402c028
640230be:	jmp    0x640139c8
640230c3:	int3   
640230c4:	int3   
640230c5:	int3   
640230c6:	int3   
640230c7:	int3   
640230c8:	int3   
640230c9:	int3   
640230ca:	int3   
640230cb:	int3   
640230cc:	int3   
640230cd:	int3   
640230ce:	int3   
640230cf:	int3   
640230d0:	mov    ecx,DWORD PTR [ebp+0x4]
640230d3:	jmp    0x64013718
640230d8:	mov    edx,DWORD PTR [esp+0x8]
640230dc:	lea    eax,[edx-0x4]
640230df:	mov    ecx,DWORD PTR [edx-0x8]
640230e2:	xor    ecx,eax
640230e4:	call   0x64013d06
640230e9:	mov    eax,0x6402c054
640230ee:	jmp    0x640139c8
640230f3:	int3   
640230f4:	int3   
640230f5:	int3   
640230f6:	int3   
640230f7:	int3   
640230f8:	int3   
640230f9:	int3   
640230fa:	int3   
640230fb:	int3   
640230fc:	int3   
640230fd:	int3   
640230fe:	int3   
640230ff:	int3   
64023100:	mov    ecx,DWORD PTR [ebp-0x10]
64023103:	jmp    0x64013718
64023108:	mov    edx,DWORD PTR [esp+0x8]
6402310c:	lea    eax,[edx-0x8]
6402310f:	mov    ecx,DWORD PTR [edx-0xc]
64023112:	xor    ecx,eax
64023114:	call   0x64013d06
64023119:	mov    eax,0x6402c080
6402311e:	jmp    0x640139c8
64023123:	int3   
64023124:	int3   
64023125:	int3   
64023126:	int3   
64023127:	int3   
64023128:	int3   
64023129:	int3   
6402312a:	int3   
6402312b:	int3   
6402312c:	int3   
6402312d:	int3   
6402312e:	int3   
6402312f:	int3   
64023130:	mov    ecx,DWORD PTR [ebp+0x4]
64023133:	jmp    0x64007920
64023138:	mov    edx,DWORD PTR [esp+0x8]
6402313c:	lea    eax,[edx-0x4]
6402313f:	mov    ecx,DWORD PTR [edx-0x8]
64023142:	xor    ecx,eax
64023144:	call   0x64013d06
64023149:	mov    eax,0x6402c0ac
6402314e:	jmp    0x640139c8
64023153:	int3   
64023154:	int3   
64023155:	int3   
64023156:	int3   
64023157:	int3   
64023158:	int3   
64023159:	int3   
6402315a:	int3   
6402315b:	int3   
6402315c:	int3   
6402315d:	int3   
6402315e:	int3   
6402315f:	int3   
64023160:	mov    esi,DWORD PTR [ebp+0x4]
64023163:	jmp    0x64003d70
64023168:	mov    edx,DWORD PTR [esp+0x8]
6402316c:	lea    eax,[edx-0x8]
6402316f:	mov    ecx,DWORD PTR [edx-0xc]
64023172:	xor    ecx,eax
64023174:	call   0x64013d06
64023179:	mov    eax,0x6402c0d8
6402317e:	jmp    0x640139c8
64023183:	int3   
64023184:	int3   
64023185:	int3   
64023186:	int3   
64023187:	int3   
64023188:	int3   
64023189:	int3   
6402318a:	int3   
6402318b:	int3   
6402318c:	int3   
6402318d:	int3   
6402318e:	int3   
6402318f:	int3   
64023190:	mov    ecx,DWORD PTR [ebp-0x10]
64023193:	jmp    0x64002990
64023198:	mov    edx,DWORD PTR [esp+0x8]
6402319c:	lea    eax,[edx-0x10]
6402319f:	mov    ecx,DWORD PTR [edx-0x14]
640231a2:	xor    ecx,eax
640231a4:	call   0x64013d06
640231a9:	mov    eax,0x6402c104
640231ae:	jmp    0x640139c8
640231b3:	int3   
640231b4:	int3   
640231b5:	int3   
640231b6:	int3   
640231b7:	int3   
640231b8:	int3   
640231b9:	int3   
640231ba:	int3   
640231bb:	int3   
640231bc:	int3   
640231bd:	int3   
640231be:	int3   
640231bf:	int3   
640231c0:	mov    eax,DWORD PTR [ebp-0x14]
640231c3:	push   eax
640231c4:	mov    ecx,DWORD PTR [ebp-0x18]
640231c7:	push   ecx
640231c8:	call   0x64001200
640231cd:	add    esp,0x8
640231d0:	ret    
640231d1:	mov    edx,DWORD PTR [esp+0x8]
640231d5:	lea    eax,[edx+0xc]
640231d8:	mov    ecx,DWORD PTR [edx-0x1c]
640231db:	xor    ecx,eax
640231dd:	call   0x64013d06
640231e2:	mov    eax,0x6402c164
640231e7:	jmp    0x640139c8
640231ec:	int3   
640231ed:	int3   
640231ee:	int3   
640231ef:	int3   
640231f0:	mov    eax,DWORD PTR [ebp-0x14]
640231f3:	push   eax
640231f4:	mov    ecx,DWORD PTR [ebp-0x18]
640231f7:	push   ecx
640231f8:	call   0x64001200
640231fd:	add    esp,0x8
64023200:	ret    
64023201:	mov    edx,DWORD PTR [esp+0x8]
64023205:	lea    eax,[edx+0xc]
64023208:	mov    ecx,DWORD PTR [edx-0x1c]
6402320b:	xor    ecx,eax
6402320d:	call   0x64013d06
64023212:	mov    eax,0x6402c1c4
64023217:	jmp    0x640139c8
6402321c:	int3   
6402321d:	int3   
6402321e:	int3   
6402321f:	int3   
64023220:	mov    esi,DWORD PTR [ebp+0x4]
64023223:	jmp    0x64003d70
64023228:	mov    edx,DWORD PTR [esp+0x8]
6402322c:	lea    eax,[edx-0x8]
6402322f:	mov    ecx,DWORD PTR [edx-0xc]
64023232:	xor    ecx,eax
64023234:	call   0x64013d06
64023239:	mov    eax,0x6402c1f0
6402323e:	jmp    0x640139c8
64023243:	int3   
64023244:	int3   
64023245:	int3   
64023246:	int3   
64023247:	int3   
64023248:	int3   
64023249:	int3   
6402324a:	int3   
6402324b:	int3   
6402324c:	int3   
6402324d:	int3   
6402324e:	int3   
6402324f:	int3   
64023250:	mov    ecx,DWORD PTR [ebp-0x10]
64023253:	jmp    0x64002990
64023258:	mov    edx,DWORD PTR [esp+0x8]
6402325c:	lea    eax,[edx-0xc]
6402325f:	mov    ecx,DWORD PTR [edx-0x10]
64023262:	xor    ecx,eax
64023264:	call   0x64013d06
64023269:	mov    eax,0x6402c21c
6402326e:	jmp    0x640139c8
64023273:	int3   
64023274:	int3   
64023275:	int3   
64023276:	int3   
64023277:	int3   
64023278:	int3   
64023279:	int3   
6402327a:	int3   
6402327b:	int3   
6402327c:	int3   
6402327d:	int3   
6402327e:	int3   
6402327f:	int3   
64023280:	lea    ecx,[ebp+0x8]
64023283:	jmp    0x64002990
64023288:	mov    edx,DWORD PTR [esp+0x8]
6402328c:	lea    eax,[edx-0x14]
6402328f:	mov    ecx,DWORD PTR [edx-0x18]
64023292:	xor    ecx,eax
64023294:	call   0x64013d06
64023299:	mov    eax,0x6402c248
6402329e:	jmp    0x640139c8
640232a3:	int3   
640232a4:	int3   
640232a5:	int3   
640232a6:	int3   
640232a7:	int3   
640232a8:	int3   
640232a9:	int3   
640232aa:	int3   
640232ab:	int3   
640232ac:	int3   
640232ad:	int3   
640232ae:	int3   
640232af:	int3   
640232b0:	mov    eax,DWORD PTR [ebp+0x8]
640232b3:	and    eax,0x1
640232b6:	je     0x640232c8
640232bc:	and    DWORD PTR [ebp+0x8],0xfffffffe
640232c0:	mov    ecx,DWORD PTR [ebp+0x4]
640232c3:	jmp    0x640036b0
640232c8:	ret    
640232c9:	mov    edx,DWORD PTR [esp+0x8]
640232cd:	lea    eax,[edx-0x8]
640232d0:	mov    ecx,DWORD PTR [edx-0xc]
640232d3:	xor    ecx,eax
640232d5:	call   0x64013d06
640232da:	mov    eax,0x6402c274
640232df:	jmp    0x640139c8
640232e4:	int3   
640232e5:	int3   
640232e6:	int3   
640232e7:	int3   
640232e8:	int3   
640232e9:	int3   
640232ea:	int3   
640232eb:	int3   
640232ec:	int3   
640232ed:	int3   
640232ee:	int3   
640232ef:	int3   
640232f0:	lea    ecx,[ebp-0x10]
640232f3:	jmp    0x640036b0
640232f8:	mov    edx,DWORD PTR [esp+0x8]
640232fc:	lea    eax,[edx-0xc]
640232ff:	mov    ecx,DWORD PTR [edx-0x10]
64023302:	xor    ecx,eax
64023304:	call   0x64013d06
64023309:	mov    eax,0x6402c2a0
6402330e:	jmp    0x640139c8
64023313:	int3   
64023314:	int3   
64023315:	int3   
64023316:	int3   
64023317:	int3   
64023318:	int3   
64023319:	int3   
6402331a:	int3   
6402331b:	int3   
6402331c:	int3   
6402331d:	int3   
6402331e:	int3   
6402331f:	int3   
64023320:	lea    ecx,[ebp+0x4]
64023323:	jmp    0x640036b0
64023328:	mov    eax,DWORD PTR [ebp-0x10]
6402332b:	push   eax
6402332c:	call   0x64013644
64023331:	pop    ecx
64023332:	ret    
64023333:	mov    edx,DWORD PTR [esp+0x8]
64023337:	lea    eax,[edx-0x8]
6402333a:	mov    ecx,DWORD PTR [edx-0xc]
6402333d:	xor    ecx,eax
6402333f:	call   0x64013d06
64023344:	mov    eax,0x6402c2d4
64023349:	jmp    0x640139c8
6402334e:	int3   
6402334f:	int3   
64023350:	mov    eax,DWORD PTR [ebp-0x10]
64023353:	and    eax,0x1
64023356:	je     0x64023368
6402335c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023360:	mov    ecx,DWORD PTR [ebp+0x4]
64023363:	jmp    0x640036b0
64023368:	ret    
64023369:	mov    edx,DWORD PTR [esp+0x8]
6402336d:	lea    eax,[edx-0xc]
64023370:	mov    ecx,DWORD PTR [edx-0x10]
64023373:	xor    ecx,eax
64023375:	call   0x64013d06
6402337a:	mov    eax,0x6402c300
6402337f:	jmp    0x640139c8
64023384:	int3   
64023385:	int3   
64023386:	int3   
64023387:	int3   
64023388:	int3   
64023389:	int3   
6402338a:	int3   
6402338b:	int3   
6402338c:	int3   
6402338d:	int3   
6402338e:	int3   
6402338f:	int3   
64023390:	lea    eax,[ebp-0x14]
64023393:	jmp    0x64006cd0
64023398:	lea    eax,[ebp-0x10]
6402339b:	jmp    0x64006cd0
640233a0:	mov    edx,DWORD PTR [esp+0x8]
640233a4:	lea    eax,[edx-0x1c]
640233a7:	mov    ecx,DWORD PTR [edx-0x20]
640233aa:	xor    ecx,eax
640233ac:	call   0x64013d06
640233b1:	mov    eax,0x6402c334
640233b6:	jmp    0x640139c8
640233bb:	int3   
640233bc:	int3   
640233bd:	int3   
640233be:	int3   
640233bf:	int3   
640233c0:	lea    ecx,[ebp-0x28]
640233c3:	jmp    0x64002990
640233c8:	mov    edx,DWORD PTR [esp+0x8]
640233cc:	lea    eax,[edx-0x28]
640233cf:	mov    ecx,DWORD PTR [edx-0x2c]
640233d2:	xor    ecx,eax
640233d4:	call   0x64013d06
640233d9:	mov    eax,0x6402c360
640233de:	jmp    0x640139c8
640233e3:	int3   
640233e4:	int3   
640233e5:	int3   
640233e6:	int3   
640233e7:	int3   
640233e8:	int3   
640233e9:	int3   
640233ea:	int3   
640233eb:	int3   
640233ec:	int3   
640233ed:	int3   
640233ee:	int3   
640233ef:	int3   
640233f0:	mov    ecx,DWORD PTR [ebp-0x10]
640233f3:	jmp    0x640036b0
640233f8:	mov    edx,DWORD PTR [esp+0x8]
640233fc:	lea    eax,[edx-0xc]
640233ff:	mov    ecx,DWORD PTR [edx-0x10]
64023402:	xor    ecx,eax
64023404:	call   0x64013d06
64023409:	mov    eax,0x6402c38c
6402340e:	jmp    0x640139c8
64023413:	int3   
64023414:	int3   
64023415:	int3   
64023416:	int3   
64023417:	int3   
64023418:	int3   
64023419:	int3   
6402341a:	int3   
6402341b:	int3   
6402341c:	int3   
6402341d:	int3   
6402341e:	int3   
6402341f:	int3   
64023420:	mov    ecx,DWORD PTR [ebp+0x4]
64023423:	jmp    0x640036b0
64023428:	mov    edx,DWORD PTR [esp+0x8]
6402342c:	lea    eax,[edx-0xc]
6402342f:	mov    ecx,DWORD PTR [edx-0x10]
64023432:	xor    ecx,eax
64023434:	call   0x64013d06
64023439:	mov    eax,0x6402c3b8
6402343e:	jmp    0x640139c8
64023443:	int3   
64023444:	int3   
64023445:	int3   
64023446:	int3   
64023447:	int3   
64023448:	int3   
64023449:	int3   
6402344a:	int3   
6402344b:	int3   
6402344c:	int3   
6402344d:	int3   
6402344e:	int3   
6402344f:	int3   
64023450:	lea    ecx,[ebp-0x50]
64023453:	jmp    0x64002990
64023458:	mov    edx,DWORD PTR [esp+0x8]
6402345c:	lea    eax,[edx+0xc]
6402345f:	mov    ecx,DWORD PTR [edx-0x70]
64023462:	xor    ecx,eax
64023464:	call   0x64013d06
64023469:	mov    eax,0x6402c3e4
6402346e:	jmp    0x640139c8
64023473:	int3   
64023474:	int3   
64023475:	int3   
64023476:	int3   
64023477:	int3   
64023478:	int3   
64023479:	int3   
6402347a:	int3   
6402347b:	int3   
6402347c:	int3   
6402347d:	int3   
6402347e:	int3   
6402347f:	int3   
64023480:	lea    ecx,[ebp-0x54]
64023483:	jmp    0x64002990
64023488:	mov    edx,DWORD PTR [esp+0x8]
6402348c:	lea    eax,[edx-0x48]
6402348f:	mov    ecx,DWORD PTR [edx-0x4c]
64023492:	xor    ecx,eax
64023494:	call   0x64013d06
64023499:	mov    eax,0x6402c410
6402349e:	jmp    0x640139c8
640234a3:	int3   
640234a4:	int3   
640234a5:	int3   
640234a6:	int3   
640234a7:	int3   
640234a8:	int3   
640234a9:	int3   
640234aa:	int3   
640234ab:	int3   
640234ac:	int3   
640234ad:	int3   
640234ae:	int3   
640234af:	int3   
640234b0:	lea    ecx,[ebp-0x98]
640234b6:	jmp    0x64002990
640234bb:	lea    ecx,[ebp-0x98]
640234c1:	jmp    0x64002990
640234c6:	lea    ecx,[ebp-0x7c]
640234c9:	jmp    0x64002990
640234ce:	mov    edx,DWORD PTR [esp+0x8]
640234d2:	lea    eax,[edx-0xa8]
640234d8:	mov    ecx,DWORD PTR [edx-0xac]
640234de:	xor    ecx,eax
640234e0:	call   0x64013d06
640234e5:	mov    eax,0x6402c44c
640234ea:	jmp    0x640139c8
640234ef:	int3   
640234f0:	lea    ecx,[ebp-0x2c]
640234f3:	jmp    0x64002e40
640234f8:	mov    edx,DWORD PTR [esp+0x8]
640234fc:	lea    eax,[edx-0x38]
640234ff:	mov    ecx,DWORD PTR [edx-0x3c]
64023502:	xor    ecx,eax
64023504:	call   0x64013d06
64023509:	mov    eax,0x6402c478
6402350e:	jmp    0x640139c8
64023513:	int3   
64023514:	int3   
64023515:	int3   
64023516:	int3   
64023517:	int3   
64023518:	int3   
64023519:	int3   
6402351a:	int3   
6402351b:	int3   
6402351c:	int3   
6402351d:	int3   
6402351e:	int3   
6402351f:	int3   
64023520:	lea    ecx,[ebp-0x54]
64023523:	jmp    0x64002990
64023528:	mov    edx,DWORD PTR [esp+0x8]
6402352c:	lea    eax,[edx-0x58]
6402352f:	mov    ecx,DWORD PTR [edx-0x5c]
64023532:	xor    ecx,eax
64023534:	call   0x64013d06
64023539:	mov    eax,0x6402c4a4
6402353e:	jmp    0x640139c8
64023543:	int3   
64023544:	int3   
64023545:	int3   
64023546:	int3   
64023547:	int3   
64023548:	int3   
64023549:	int3   
6402354a:	int3   
6402354b:	int3   
6402354c:	int3   
6402354d:	int3   
6402354e:	int3   
6402354f:	int3   
64023550:	lea    ecx,[ebp-0x54]
64023553:	jmp    0x64002990
64023558:	mov    edx,DWORD PTR [esp+0x8]
6402355c:	lea    eax,[edx-0x5c]
6402355f:	mov    ecx,DWORD PTR [edx-0x60]
64023562:	xor    ecx,eax
64023564:	call   0x64013d06
64023569:	mov    eax,0x6402c4d0
6402356e:	jmp    0x640139c8
64023573:	int3   
64023574:	int3   
64023575:	int3   
64023576:	int3   
64023577:	int3   
64023578:	int3   
64023579:	int3   
6402357a:	int3   
6402357b:	int3   
6402357c:	int3   
6402357d:	int3   
6402357e:	int3   
6402357f:	int3   
64023580:	lea    ecx,[ebp-0x50]
64023583:	jmp    0x64002990
64023588:	mov    edx,DWORD PTR [esp+0x8]
6402358c:	lea    eax,[edx-0x54]
6402358f:	mov    ecx,DWORD PTR [edx-0x58]
64023592:	xor    ecx,eax
64023594:	call   0x64013d06
64023599:	mov    eax,0x6402c4fc
6402359e:	jmp    0x640139c8
640235a3:	int3   
640235a4:	int3   
640235a5:	int3   
640235a6:	int3   
640235a7:	int3   
640235a8:	int3   
640235a9:	int3   
640235aa:	int3   
640235ab:	int3   
640235ac:	int3   
640235ad:	int3   
640235ae:	int3   
640235af:	int3   
640235b0:	lea    ecx,[ebp-0x54]
640235b3:	jmp    0x64002990
640235b8:	mov    edx,DWORD PTR [esp+0x8]
640235bc:	lea    eax,[edx-0x5c]
640235bf:	mov    ecx,DWORD PTR [edx-0x60]
640235c2:	xor    ecx,eax
640235c4:	call   0x64013d06
640235c9:	mov    eax,0x6402c528
640235ce:	jmp    0x640139c8
640235d3:	int3   
640235d4:	int3   
640235d5:	int3   
640235d6:	int3   
640235d7:	int3   
640235d8:	int3   
640235d9:	int3   
640235da:	int3   
640235db:	int3   
640235dc:	int3   
640235dd:	int3   
640235de:	int3   
640235df:	int3   
640235e0:	lea    esi,[ebp-0x64]
640235e3:	jmp    0x64003d70
640235e8:	lea    esi,[ebp-0x48]
640235eb:	jmp    0x64004000
640235f0:	mov    edx,DWORD PTR [esp+0x8]
640235f4:	lea    eax,[edx-0x70]
640235f7:	mov    ecx,DWORD PTR [edx-0x74]
640235fa:	xor    ecx,eax
640235fc:	call   0x64013d06
64023601:	mov    eax,0x6402c55c
64023606:	jmp    0x640139c8
6402360b:	int3   
6402360c:	int3   
6402360d:	int3   
6402360e:	int3   
6402360f:	int3   
64023610:	lea    ecx,[ebp-0x64]
64023613:	jmp    0x64002990
64023618:	lea    ecx,[ebp-0x48]
6402361b:	jmp    0x64003fb0
64023620:	mov    edx,DWORD PTR [esp+0x8]
64023624:	lea    eax,[edx-0x6c]
64023627:	mov    ecx,DWORD PTR [edx-0x70]
6402362a:	xor    ecx,eax
6402362c:	call   0x64013d06
64023631:	mov    eax,0x6402c590
64023636:	jmp    0x640139c8
6402363b:	int3   
6402363c:	int3   
6402363d:	int3   
6402363e:	int3   
6402363f:	int3   
64023640:	mov    eax,ds:0x64039988
64023645:	and    eax,0xfffffffe
64023648:	mov    ds:0x64039988,eax
6402364d:	ret    
6402364e:	mov    edx,DWORD PTR [esp+0x8]
64023652:	lea    eax,[edx]
64023654:	mov    ecx,DWORD PTR [edx-0x4]
64023657:	xor    ecx,eax
64023659:	call   0x64013d06
6402365e:	mov    eax,0x6402c5bc
64023663:	jmp    0x640139c8
64023668:	int3   
64023669:	int3   
6402366a:	int3   
6402366b:	int3   
6402366c:	int3   
6402366d:	int3   
6402366e:	int3   
6402366f:	int3   
64023670:	mov    eax,ds:0x6403998c
64023675:	and    eax,0xfffffffe
64023678:	mov    ds:0x6403998c,eax
6402367d:	ret    
6402367e:	mov    edx,DWORD PTR [esp+0x8]
64023682:	lea    eax,[edx]
64023684:	mov    ecx,DWORD PTR [edx-0x4]
64023687:	xor    ecx,eax
64023689:	call   0x64013d06
6402368e:	mov    eax,0x6402c5e8
64023693:	jmp    0x640139c8
64023698:	int3   
64023699:	int3   
6402369a:	int3   
6402369b:	int3   
6402369c:	int3   
6402369d:	int3   
6402369e:	int3   
6402369f:	int3   
640236a0:	lea    esi,[ebp-0x4c]
640236a3:	jmp    0x64003d70
640236a8:	lea    esi,[ebp-0x30]
640236ab:	jmp    0x64003d70
640236b0:	mov    edx,DWORD PTR [esp+0x8]
640236b4:	lea    eax,[edx-0x5c]
640236b7:	mov    ecx,DWORD PTR [edx-0x60]
640236ba:	xor    ecx,eax
640236bc:	call   0x64013d06
640236c1:	add    eax,0xc
640236c4:	mov    ecx,DWORD PTR [edx-0x8]
640236c7:	xor    ecx,eax
640236c9:	call   0x64013d06
640236ce:	mov    eax,0x6402c61c
640236d3:	jmp    0x640139c8
640236d8:	int3   
640236d9:	int3   
640236da:	int3   
640236db:	int3   
640236dc:	int3   
640236dd:	int3   
640236de:	int3   
640236df:	int3   
640236e0:	lea    ecx,[ebp-0x4c]
640236e3:	jmp    0x64002990
640236e8:	lea    ecx,[ebp-0x30]
640236eb:	jmp    0x64002990
640236f0:	mov    edx,DWORD PTR [esp+0x8]
640236f4:	lea    eax,[edx-0x5c]
640236f7:	mov    ecx,DWORD PTR [edx-0x60]
640236fa:	xor    ecx,eax
640236fc:	call   0x64013d06
64023701:	add    eax,0xc
64023704:	mov    ecx,DWORD PTR [edx-0x8]
64023707:	xor    ecx,eax
64023709:	call   0x64013d06
6402370e:	mov    eax,0x6402c650
64023713:	jmp    0x640139c8
64023718:	int3   
64023719:	int3   
6402371a:	int3   
6402371b:	int3   
6402371c:	int3   
6402371d:	int3   
6402371e:	int3   
6402371f:	int3   
64023720:	mov    eax,DWORD PTR [ebp-0x58]
64023723:	and    eax,0x1
64023726:	je     0x64023738
6402372c:	and    DWORD PTR [ebp-0x58],0xfffffffe
64023730:	mov    ecx,DWORD PTR [ebp+0x4]
64023733:	jmp    0x640036b0
64023738:	ret    
64023739:	lea    ecx,[ebp-0x54]
6402373c:	jmp    0x64002990
64023741:	mov    edx,DWORD PTR [esp+0x8]
64023745:	lea    eax,[edx-0x58]
64023748:	mov    ecx,DWORD PTR [edx-0x5c]
6402374b:	xor    ecx,eax
6402374d:	call   0x64013d06
64023752:	mov    eax,0x6402c684
64023757:	jmp    0x640139c8
6402375c:	int3   
6402375d:	int3   
6402375e:	int3   
6402375f:	int3   
64023760:	lea    ecx,[ebp-0x28]
64023763:	jmp    0x64009cc0
64023768:	lea    ecx,[ebp-0xf8]
6402376e:	jmp    0x64002990
64023773:	lea    eax,[ebp-0x38]
64023776:	jmp    0x64006cd0
6402377b:	mov    edx,DWORD PTR [esp+0x8]
6402377f:	lea    eax,[edx+0xc]
64023782:	mov    ecx,DWORD PTR [edx-0x234]
64023788:	xor    ecx,eax
6402378a:	call   0x64013d06
6402378f:	mov    ecx,DWORD PTR [edx-0x30]
64023792:	xor    ecx,eax
64023794:	call   0x64013d06
64023799:	mov    eax,0x6402c6fc
6402379e:	jmp    0x640139c8
640237a3:	int3   
640237a4:	int3   
640237a5:	int3   
640237a6:	int3   
640237a7:	int3   
640237a8:	int3   
640237a9:	int3   
640237aa:	int3   
640237ab:	int3   
640237ac:	int3   
640237ad:	int3   
640237ae:	int3   
640237af:	int3   
640237b0:	lea    ecx,[ebp-0x1040]
640237b6:	jmp    0x64009cc0
640237bb:	lea    ecx,[ebp-0x106c]
640237c1:	jmp    0x64002990
640237c6:	lea    eax,[ebp-0x104c]
640237cc:	jmp    0x64006cd0
640237d1:	mov    edx,DWORD PTR [esp+0x8]
640237d5:	lea    eax,[edx+0xc]
640237d8:	mov    ecx,DWORD PTR [edx-0x1070]
640237de:	xor    ecx,eax
640237e0:	call   0x64013d06
640237e5:	mov    ecx,DWORD PTR [edx-0xc]
640237e8:	xor    ecx,eax
640237ea:	call   0x64013d06
640237ef:	mov    eax,0x6402c774
640237f4:	jmp    0x640139c8
640237f9:	int3   
640237fa:	int3   
640237fb:	int3   
640237fc:	int3   
640237fd:	int3   
640237fe:	int3   
640237ff:	int3   
64023800:	lea    ecx,[ebp-0x103c]
64023806:	jmp    0x64009cc0
6402380b:	lea    ecx,[ebp-0x106c]
64023811:	jmp    0x64002990
64023816:	lea    eax,[ebp-0x1044]
6402381c:	jmp    0x64006cd0
64023821:	mov    edx,DWORD PTR [esp+0x8]
64023825:	lea    eax,[edx+0xc]
64023828:	mov    ecx,DWORD PTR [edx-0x1074]
6402382e:	xor    ecx,eax
64023830:	call   0x64013d06
64023835:	mov    ecx,DWORD PTR [edx-0x8]
64023838:	xor    ecx,eax
6402383a:	call   0x64013d06
6402383f:	mov    eax,0x6402c7ec
64023844:	jmp    0x640139c8
64023849:	int3   
6402384a:	int3   
6402384b:	int3   
6402384c:	int3   
6402384d:	int3   
6402384e:	int3   
6402384f:	int3   
64023850:	lea    ecx,[ebp-0x28]
64023853:	jmp    0x64002990
64023858:	mov    edx,DWORD PTR [esp+0x8]
6402385c:	lea    eax,[edx-0x28]
6402385f:	mov    ecx,DWORD PTR [edx-0x2c]
64023862:	xor    ecx,eax
64023864:	call   0x64013d06
64023869:	mov    eax,0x6402c818
6402386e:	jmp    0x640139c8
64023873:	int3   
64023874:	int3   
64023875:	int3   
64023876:	int3   
64023877:	int3   
64023878:	int3   
64023879:	int3   
6402387a:	int3   
6402387b:	int3   
6402387c:	int3   
6402387d:	int3   
6402387e:	int3   
6402387f:	int3   
64023880:	lea    ecx,[ebp-0xb0]
64023886:	jmp    0x64009cc0
6402388b:	lea    eax,[ebp-0x64]
6402388e:	jmp    0x64007ab0
64023893:	lea    ecx,[ebp-0xac]
64023899:	jmp    0x64002990
6402389e:	lea    ecx,[ebp-0xac]
640238a4:	jmp    0x64002990
640238a9:	lea    ecx,[ebp-0xac]
640238af:	jmp    0x64002990
640238b4:	lea    ecx,[ebp-0xac]
640238ba:	jmp    0x64002990
640238bf:	lea    ecx,[ebp-0xac]
640238c5:	jmp    0x64002990
640238ca:	lea    ecx,[ebp-0xac]
640238d0:	jmp    0x64002990
640238d5:	lea    ecx,[ebp-0xac]
640238db:	jmp    0x64002990
640238e0:	lea    ecx,[ebp-0xac]
640238e6:	jmp    0x64002990
640238eb:	lea    ecx,[ebp-0xac]
640238f1:	jmp    0x64002990
640238f6:	lea    ecx,[ebp-0x50]
640238f9:	jmp    0x64002990
640238fe:	mov    edx,DWORD PTR [esp+0x8]
64023902:	lea    eax,[edx-0xb4]
64023908:	mov    ecx,DWORD PTR [edx-0xb8]
6402390e:	xor    ecx,eax
64023910:	call   0x64013d06
64023915:	mov    eax,0x6402c8a0
6402391a:	jmp    0x640139c8
6402391f:	int3   
64023920:	mov    ecx,DWORD PTR [ebp+0x4]
64023923:	jmp    0x64002e40
64023928:	mov    ecx,DWORD PTR [ebp+0x4]
6402392b:	add    ecx,0x894
64023931:	jmp    0x64009ad0
64023936:	mov    eax,DWORD PTR [ebp-0x2c]
64023939:	push   eax
6402393a:	call   0x64013644
6402393f:	pop    ecx
64023940:	ret    
64023941:	mov    eax,DWORD PTR [ebp-0x30]
64023944:	and    eax,0x1
64023947:	je     0x64023959
6402394d:	and    DWORD PTR [ebp-0x30],0xfffffffe
64023951:	lea    ecx,[ebp-0x28]
64023954:	jmp    0x64002990
64023959:	ret    
6402395a:	mov    edx,DWORD PTR [esp+0x8]
6402395e:	lea    eax,[edx-0x34]
64023961:	mov    ecx,DWORD PTR [edx-0x38]
64023964:	xor    ecx,eax
64023966:	call   0x64013d06
6402396b:	mov    eax,0x6402c8ec
64023970:	jmp    0x640139c8
64023975:	int3   
64023976:	int3   
64023977:	int3   
64023978:	int3   
64023979:	int3   
6402397a:	int3   
6402397b:	int3   
6402397c:	int3   
6402397d:	int3   
6402397e:	int3   
6402397f:	int3   
64023980:	lea    ecx,[ebp-0x18]
64023983:	jmp    0x64002e40
64023988:	lea    ecx,[ebp-0x1c]
6402398b:	jmp    0x640036b0
64023990:	mov    eax,ds:0x64039b18
64023995:	and    eax,0xfffffffe
64023998:	mov    ds:0x64039b18,eax
6402399d:	ret    
6402399e:	mov    edx,DWORD PTR [esp+0x8]
640239a2:	lea    eax,[edx-0x24]
640239a5:	mov    ecx,DWORD PTR [edx-0x28]
640239a8:	xor    ecx,eax
640239aa:	call   0x64013d06
640239af:	mov    eax,0x6402c928
640239b4:	jmp    0x640139c8
640239b9:	int3   
640239ba:	int3   
640239bb:	int3   
640239bc:	int3   
640239bd:	int3   
640239be:	int3   
640239bf:	int3   
640239c0:	lea    ecx,[ebp-0x10]
640239c3:	jmp    0x64002e40
640239c8:	mov    edx,DWORD PTR [esp+0x8]
640239cc:	lea    eax,[edx-0x14]
640239cf:	mov    ecx,DWORD PTR [edx-0x18]
640239d2:	xor    ecx,eax
640239d4:	call   0x64013d06
640239d9:	mov    eax,0x6402c954
640239de:	jmp    0x640139c8
640239e3:	int3   
640239e4:	int3   
640239e5:	int3   
640239e6:	int3   
640239e7:	int3   
640239e8:	int3   
640239e9:	int3   
640239ea:	int3   
640239eb:	int3   
640239ec:	int3   
640239ed:	int3   
640239ee:	int3   
640239ef:	int3   
640239f0:	lea    eax,[ebp-0x58]
640239f3:	jmp    0x64006cd0
640239f8:	lea    eax,[ebp-0x5c]
640239fb:	jmp    0x64006cd0
64023a00:	lea    ecx,[ebp-0x54]
64023a03:	jmp    0x64002990
64023a08:	lea    ecx,[ebp-0x54]
64023a0b:	jmp    0x64002990
64023a10:	lea    ecx,[ebp-0x54]
64023a13:	jmp    0x64002990
64023a18:	mov    edx,DWORD PTR [esp+0x8]
64023a1c:	lea    eax,[edx-0x5c]
64023a1f:	mov    ecx,DWORD PTR [edx-0x60]
64023a22:	xor    ecx,eax
64023a24:	call   0x64013d06
64023a29:	mov    eax,0x6402c9a0
64023a2e:	jmp    0x640139c8
64023a33:	int3   
64023a34:	int3   
64023a35:	int3   
64023a36:	int3   
64023a37:	int3   
64023a38:	int3   
64023a39:	int3   
64023a3a:	int3   
64023a3b:	int3   
64023a3c:	int3   
64023a3d:	int3   
64023a3e:	int3   
64023a3f:	int3   
64023a40:	mov    eax,ds:0x64039b1c
64023a45:	and    eax,0xfffffffe
64023a48:	mov    ds:0x64039b1c,eax
64023a4d:	ret    
64023a4e:	mov    eax,DWORD PTR [ebp-0x2c]
64023a51:	and    eax,0x1
64023a54:	je     0x64023a66
64023a5a:	and    DWORD PTR [ebp-0x2c],0xfffffffe
64023a5e:	mov    ecx,DWORD PTR [ebp-0x30]
64023a61:	jmp    0x640036b0
64023a66:	ret    
64023a67:	lea    ecx,[ebp-0x4c]
64023a6a:	jmp    0x64002990
64023a6f:	mov    edx,DWORD PTR [esp+0x8]
64023a73:	lea    eax,[edx+0xc]
64023a76:	mov    ecx,DWORD PTR [edx-0xa1c]
64023a7c:	xor    ecx,eax
64023a7e:	call   0x64013d06
64023a83:	mov    ecx,DWORD PTR [edx-0x4]
64023a86:	xor    ecx,eax
64023a88:	call   0x64013d06
64023a8d:	mov    eax,0x6402c9dc
64023a92:	jmp    0x640139c8
64023a97:	int3   
64023a98:	int3   
64023a99:	int3   
64023a9a:	int3   
64023a9b:	int3   
64023a9c:	int3   
64023a9d:	int3   
64023a9e:	int3   
64023a9f:	int3   
64023aa0:	mov    eax,DWORD PTR [ebp-0x58]
64023aa3:	and    eax,0x1
64023aa6:	je     0x64023ab8
64023aac:	and    DWORD PTR [ebp-0x58],0xfffffffe
64023ab0:	mov    ecx,DWORD PTR [ebp+0x4]
64023ab3:	jmp    0x640036b0
64023ab8:	ret    
64023ab9:	lea    ecx,[ebp-0x54]
64023abc:	jmp    0x64002990
64023ac1:	mov    edx,DWORD PTR [esp+0x8]
64023ac5:	lea    eax,[edx-0x60]
64023ac8:	mov    ecx,DWORD PTR [edx-0x64]
64023acb:	xor    ecx,eax
64023acd:	call   0x64013d06
64023ad2:	mov    eax,0x6402ca10
64023ad7:	jmp    0x640139c8
64023adc:	int3   
64023add:	int3   
64023ade:	int3   
64023adf:	int3   
64023ae0:	lea    ecx,[ebp-0x20]
64023ae3:	jmp    0x640070b0
64023ae8:	mov    edx,DWORD PTR [esp+0x8]
64023aec:	lea    eax,[edx+0xc]
64023aef:	mov    ecx,DWORD PTR [edx-0x24]
64023af2:	xor    ecx,eax
64023af4:	call   0x64013d06
64023af9:	mov    eax,0x6402ca70
64023afe:	jmp    0x640139c8
64023b03:	int3   
64023b04:	int3   
64023b05:	int3   
64023b06:	int3   
64023b07:	int3   
64023b08:	int3   
64023b09:	int3   
64023b0a:	int3   
64023b0b:	int3   
64023b0c:	int3   
64023b0d:	int3   
64023b0e:	int3   
64023b0f:	int3   
64023b10:	lea    ecx,[ebp-0x94]
64023b16:	jmp    0x640036b0
64023b1b:	mov    edx,DWORD PTR [esp+0x8]
64023b1f:	lea    eax,[edx-0x8c]
64023b25:	mov    ecx,DWORD PTR [edx-0x90]
64023b2b:	xor    ecx,eax
64023b2d:	call   0x64013d06
64023b32:	add    eax,0x4
64023b35:	mov    ecx,DWORD PTR [edx-0x4]
64023b38:	xor    ecx,eax
64023b3a:	call   0x64013d06
64023b3f:	mov    eax,0x6402ca9c
64023b44:	jmp    0x640139c8
64023b49:	int3   
64023b4a:	int3   
64023b4b:	int3   
64023b4c:	int3   
64023b4d:	int3   
64023b4e:	int3   
64023b4f:	int3   
64023b50:	lea    ecx,[ebp-0x7c]
64023b53:	jmp    0x640036b0
64023b58:	lea    ecx,[ebp-0xa4]
64023b5e:	jmp    0x64002990
64023b63:	lea    ecx,[ebp-0xe8]
64023b69:	jmp    0x64002990
64023b6e:	lea    ecx,[ebp-0x104]
64023b74:	jmp    0x64002990
64023b79:	lea    ecx,[ebp-0x13c]
64023b7f:	jmp    0x64002990
64023b84:	lea    ecx,[ebp-0x120]
64023b8a:	jmp    0x64002990
64023b8f:	mov    edx,DWORD PTR [esp+0x8]
64023b93:	lea    eax,[edx+0xc]
64023b96:	mov    ecx,DWORD PTR [edx-0x144]
64023b9c:	xor    ecx,eax
64023b9e:	call   0x64013d06
64023ba3:	mov    ecx,DWORD PTR [edx-0x4]
64023ba6:	xor    ecx,eax
64023ba8:	call   0x64013d06
64023bad:	mov    eax,0x6402caf0
64023bb2:	jmp    0x640139c8
64023bb7:	int3   
64023bb8:	int3   
64023bb9:	int3   
64023bba:	int3   
64023bbb:	int3   
64023bbc:	int3   
64023bbd:	int3   
64023bbe:	int3   
64023bbf:	int3   
64023bc0:	lea    ecx,[ebp-0x85c]
64023bc6:	jmp    0x64002990
64023bcb:	lea    eax,[ebp-0x870]
64023bd1:	jmp    0x64007ab0
64023bd6:	lea    ecx,[ebp-0x87c]
64023bdc:	jmp    0x640036b0
64023be1:	mov    edx,DWORD PTR [esp+0x8]
64023be5:	lea    eax,[edx-0x87c]
64023beb:	mov    ecx,DWORD PTR [edx-0x880]
64023bf1:	xor    ecx,eax
64023bf3:	call   0x64013d06
64023bf8:	add    eax,0x8
64023bfb:	mov    ecx,DWORD PTR [edx-0x8]
64023bfe:	xor    ecx,eax
64023c00:	call   0x64013d06
64023c05:	mov    eax,0x6402cb2c
64023c0a:	jmp    0x640139c8
64023c0f:	int3   
64023c10:	lea    esi,[ebp-0x8ac]
64023c16:	jmp    0x64009630
64023c1b:	lea    ecx,[ebp-0x8c8]
64023c21:	jmp    0x64002990
64023c26:	mov    edx,DWORD PTR [esp+0x8]
64023c2a:	lea    eax,[edx+0xc]
64023c2d:	mov    ecx,DWORD PTR [edx-0x8cc]
64023c33:	xor    ecx,eax
64023c35:	call   0x64013d06
64023c3a:	mov    ecx,DWORD PTR [edx-0x8]
64023c3d:	xor    ecx,eax
64023c3f:	call   0x64013d06
64023c44:	mov    eax,0x6402cb94
64023c49:	jmp    0x640139c8
64023c4e:	int3   
64023c4f:	int3   
64023c50:	lea    ecx,[ebp-0x1c]
64023c53:	jmp    0x640036b0
64023c58:	lea    ecx,[ebp-0x14]
64023c5b:	jmp    0x640036b0
64023c60:	lea    ecx,[ebp-0x18]
64023c63:	jmp    0x640036b0
64023c68:	mov    edx,DWORD PTR [esp+0x8]
64023c6c:	lea    eax,[edx-0x1c]
64023c6f:	mov    ecx,DWORD PTR [edx-0x20]
64023c72:	xor    ecx,eax
64023c74:	call   0x64013d06
64023c79:	mov    eax,0x6402cbd0
64023c7e:	jmp    0x640139c8
64023c83:	int3   
64023c84:	int3   
64023c85:	int3   
64023c86:	int3   
64023c87:	int3   
64023c88:	int3   
64023c89:	int3   
64023c8a:	int3   
64023c8b:	int3   
64023c8c:	int3   
64023c8d:	int3   
64023c8e:	int3   
64023c8f:	int3   
64023c90:	mov    eax,DWORD PTR [ebp-0x18]
64023c93:	and    eax,0x1
64023c96:	je     0x64023ca8
64023c9c:	and    DWORD PTR [ebp-0x18],0xfffffffe
64023ca0:	mov    ecx,DWORD PTR [ebp+0x4]
64023ca3:	jmp    0x640036b0
64023ca8:	ret    
64023ca9:	lea    ecx,[ebp-0x14]
64023cac:	jmp    0x640036b0
64023cb1:	lea    ecx,[ebp-0x10]
64023cb4:	jmp    0x640036b0
64023cb9:	lea    ecx,[ebp-0x14]
64023cbc:	jmp    0x640036b0
64023cc1:	mov    edx,DWORD PTR [esp+0x8]
64023cc5:	lea    eax,[edx-0x18]
64023cc8:	mov    ecx,DWORD PTR [edx-0x1c]
64023ccb:	xor    ecx,eax
64023ccd:	call   0x64013d06
64023cd2:	mov    eax,0x6402cc14
64023cd7:	jmp    0x640139c8
64023cdc:	int3   
64023cdd:	int3   
64023cde:	int3   
64023cdf:	int3   
64023ce0:	push   edi
64023ce1:	mov    edi,0x64039b08
64023ce6:	call   0x64001820
64023ceb:	pop    edi
64023cec:	ret    
64023ced:	int3   
64023cee:	int3   
64023cef:	int3   
64023cf0:	push   edi
64023cf1:	mov    edi,0x64039b09
64023cf6:	call   0x64001820
64023cfb:	pop    edi
64023cfc:	ret    
64023cfd:	int3   
64023cfe:	int3   
64023cff:	int3   
64023d00:	push   0x0
64023d02:	push   0x0
64023d04:	push   0x1
64023d06:	push   0x0
64023d08:	call   DWORD PTR ds:0x640240f0
64023d0e:	mov    ds:0x64039b0c,eax
64023d13:	ret    
64023d14:	int3   
64023d15:	int3   
64023d16:	int3   
64023d17:	int3   
64023d18:	int3   
64023d19:	int3   
64023d1a:	int3   
64023d1b:	int3   
64023d1c:	int3   
64023d1d:	int3   
64023d1e:	int3   
64023d1f:	int3   
64023d20:	push   0x6402b058
64023d25:	push   0xf
64023d27:	mov    ecx,0x6402b098
64023d2c:	call   0x64003090
64023d31:	add    esp,0x8
64023d34:	mov    ds:0x64039b10,eax
64023d39:	ret    
64023d3a:	int3   
64023d3b:	int3   
64023d3c:	int3   
64023d3d:	int3   
64023d3e:	int3   
64023d3f:	int3   
64023d40:	push   0x64024308
64023d45:	push   0x10
64023d47:	push   0x640242f4
64023d4c:	call   0x64002e70
64023d51:	add    esp,0xc
64023d54:	mov    ds:0x64038cd0,eax
64023d59:	ret    
64023d5a:	int3   
64023d5b:	int3   
64023d5c:	int3   
64023d5d:	int3   
64023d5e:	int3   
64023d5f:	int3   
64023d60:	push   0x64024354
64023d65:	push   0x10
64023d67:	push   0x64024340
64023d6c:	call   0x64002e70
64023d71:	add    esp,0xc
64023d74:	mov    ds:0x64038ccc,eax
64023d79:	ret    
64023d7a:	int3   
64023d7b:	int3   
64023d7c:	int3   
64023d7d:	int3   
64023d7e:	int3   
64023d7f:	int3   
64023d80:	push   0x64024394
64023d85:	push   0x10
64023d87:	push   0x64024380
64023d8c:	call   0x64002e70
64023d91:	add    esp,0xc
64023d94:	mov    ds:0x64038cc8,eax
64023d99:	ret    
64023d9a:	push   0x64023ee6
64023d9f:	call   0x64013faa
64023da4:	pop    ecx
64023da5:	ret    
64023da6:	mov    ecx,0x64038da0
64023dab:	call   0x64012f9f
64023db0:	push   0x64023ef0
64023db5:	call   0x64013faa
64023dba:	pop    ecx
64023dbb:	ret    
64023dbc:	mov    ecx,0x64038dec
64023dc1:	call   0x64012f9f
64023dc6:	push   0x64023efa
64023dcb:	call   0x64013faa
64023dd0:	pop    ecx
64023dd1:	ret    
64023dd2:	push   0x64023f04
64023dd7:	call   0x64013faa
64023ddc:	pop    ecx
64023ddd:	ret    
64023dde:	mov    ecx,0x64038df0
64023de3:	call   0x64013372
64023de8:	push   0x64023f0e
64023ded:	call   0x64013faa
64023df2:	pop    ecx
64023df3:	ret    
64023df4:	mov    ecx,0x64038e2c
64023df9:	call   0x6401334c
64023dfe:	push   0x64023f18
64023e03:	call   0x64013faa
64023e08:	pop    ecx
64023e09:	ret    
64023e0a:	call   DWORD PTR ds:0x6402418c
64023e10:	push   0x64023f22
64023e15:	mov    DWORD PTR ds:0x64038e58,0x64027b90
64023e1f:	mov    ds:0x64038e5c,eax
64023e24:	mov    BYTE PTR ds:0x64038e60,0x0
64023e2b:	call   0x64013faa
64023e30:	pop    ecx
64023e31:	ret    
64023e32:	push   0x64038e58
64023e37:	mov    ecx,0x64038e64
64023e3c:	call   0x640134e5
64023e41:	push   0x64023f2c
64023e46:	call   0x64013faa
64023e4b:	pop    ecx
64023e4c:	ret    
64023e4d:	int3   
64023e4e:	int3   
64023e4f:	int3   
64023e50:	push   ebp
64023e51:	mov    ebp,esp
64023e53:	and    esp,0xfffffff8
64023e56:	mov    eax,ds:0x64039980
64023e5b:	mov    edx,DWORD PTR [eax]
64023e5d:	sub    esp,0xc
64023e60:	push   esi
64023e61:	push   eax
64023e62:	mov    ecx,0x6403997c
64023e67:	push   ecx
64023e68:	push   edx
64023e69:	mov    esi,ecx
64023e6b:	push   esi
64023e6c:	lea    eax,[esp+0x18]
64023e70:	push   eax
64023e71:	call   0x64005ac0
64023e76:	mov    ecx,DWORD PTR ds:0x64039980
64023e7c:	push   ecx
64023e7d:	call   0x64013644
64023e82:	add    esp,0x4
64023e85:	xor    eax,eax
64023e87:	mov    ds:0x64039980,eax
64023e8c:	mov    ds:0x64039984,eax
64023e91:	pop    esi
64023e92:	mov    esp,ebp
64023e94:	pop    ebp
64023e95:	ret    
64023e96:	int3   
64023e97:	int3   
64023e98:	int3   
64023e99:	int3   
64023e9a:	int3   
64023e9b:	int3   
64023e9c:	int3   
64023e9d:	int3   
64023e9e:	int3   
64023e9f:	int3   
64023ea0:	push   ebp
64023ea1:	mov    ebp,esp
64023ea3:	and    esp,0xfffffff8
64023ea6:	mov    eax,ds:0x64039974
64023eab:	mov    edx,DWORD PTR [eax]
64023ead:	sub    esp,0xc
64023eb0:	push   esi
64023eb1:	push   eax
64023eb2:	mov    ecx,0x64039970
64023eb7:	push   ecx
64023eb8:	push   edx
64023eb9:	mov    esi,ecx
64023ebb:	push   esi
64023ebc:	lea    eax,[esp+0x18]
64023ec0:	push   eax
64023ec1:	call   0x640056e0
64023ec6:	mov    ecx,DWORD PTR ds:0x64039974
64023ecc:	push   ecx
64023ecd:	call   0x64013644
64023ed2:	add    esp,0x4
64023ed5:	xor    eax,eax
64023ed7:	mov    ds:0x64039974,eax
64023edc:	mov    ds:0x64039978,eax
64023ee1:	pop    esi
64023ee2:	mov    esp,ebp
64023ee4:	pop    ebp
64023ee5:	ret    
64023ee6:	mov    ecx,0x64038cf8
64023eeb:	jmp    0x640015c0
64023ef0:	mov    ecx,0x64038da0
64023ef5:	jmp    0x64012fce
64023efa:	mov    ecx,0x64038dec
64023eff:	jmp    0x64012fce
64023f04:	mov    ecx,0x64038ded
64023f09:	jmp    0x6401302a
64023f0e:	mov    ecx,0x64038df0
64023f13:	jmp    0x640132e0
64023f18:	mov    ecx,0x64038e2c
64023f1d:	jmp    0x64013421
64023f22:	mov    ecx,0x64038e58
64023f27:	jmp    0x64013439
64023f2c:	mov    DWORD PTR ds:0x64038e64,0x64027ba4
64023f36:	ret    
64023f37:	mov    DWORD PTR ds:0x64038e80,0x640242a4
64023f41:	mov    ecx,0x64038e80
64023f46:	jmp    0x64013718
