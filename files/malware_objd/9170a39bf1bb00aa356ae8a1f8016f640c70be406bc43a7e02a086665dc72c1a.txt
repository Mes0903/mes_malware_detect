
9170a39bf1bb00aa356ae8a1f8016f640c70be406bc43a7e02a086665dc72c1a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412370
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417e59,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x412368
  404736:	and    DWORD PTR ds:0x41abde,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4245be,0x412378
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417e55,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4245c6,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4245c6,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412370
  404789:	and    DWORD PTR ds:0x415111,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41abd2,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x706d87ea
  4047be:	mov    ds:0x7e7e7e3f,eax
  4047c3:	jle    0x40479f
  4047c5:	jg     0x404845
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fld    st(2)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [eax]
  4047d5:	sbb    cl,BYTE PTR [eax]
  4047d7:	(bad)  
  4047d9:	bswap  eax
  4047db:	adc    BYTE PTR [edi],dh
  4047dd:	sbb    BYTE PTR [edi],bl
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483c
  40486f:	xchg   esp,eax
  404870:	inc    edi
  404871:	sbb    eax,0xd5c0ea8e
  404876:	cmc    
  404877:	jae    0x404821
  404879:	ret    0xd7ab
  40487c:	push   eax
  40487d:	and    edx,0x5f
  404880:	pushf  
  404881:	jg     0x40481e
  404883:	fs addr16 (bad) 
  404886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404887:	fadd   st(2),st
  404889:	pop    ds
  40488a:	mov    eax,ds:0x18be5182
  40488f:	icebp  
  404890:	sub    edx,DWORD PTR [edx+ebx*4]
  404893:	out    0xdc,eax
  404895:	inc    ebp
  404896:	sub    ch,dh
  404898:	sub    al,0x70
  40489a:	in     eax,0x75
  40489c:	ds ins DWORD PTR es:[edi],dx
  40489e:	je     0x40486c
  4048a0:	outs   dx,DWORD PTR ds:[esi]
  4048a1:	and    DWORD PTR [eax+0x1e],edx
  4048a4:	and    ebp,DWORD PTR [ebx+0x62c9186c]
  4048aa:	(bad)  
  4048ab:	loope  0x404922
  4048ad:	pop    ecx
  4048ae:	xchg   esi,esi
  4048b0:	inc    ebp
  4048b1:	inc    esp
  4048b2:	jl     0x4048cf
  4048b4:	adc    bh,BYTE PTR [edi+0x64]
  4048b7:	or     eax,0x8d48373c
  4048bc:	dec    esp
  4048bd:	mov    ecx,0x6aa5eae2
  4048c2:	sar    esp,cl
  4048c4:	aaa    
  4048c5:	je     0x404885
  4048c7:	sub    ch,BYTE PTR [eax+ebp*8-0x722312c8]
  4048ce:	or     ch,BYTE PTR [edx]
  4048d0:	sbb    eax,0xc8ce758b
  4048d5:	pop    edi
  4048d6:	xor    eax,0xc04d8260
  4048db:	lds    esp,FWORD PTR [ebp-0x4b0cdbae]
  4048e1:	mov    ?,WORD PTR [esi+0x23]
  4048e4:	xchg   eax,esi
  4048e6:	adc    ebx,DWORD PTR [ebx-0x460666cd]
  4048ec:	inc    edx
  4048ed:	outs   dx,DWORD PTR ds:[esi]
  4048ee:	add    ecx,DWORD PTR [ebp+ebp*2+0xf1c3574]
  4048f5:	cmp    ah,BYTE PTR [ebx-0x435606a4]
  4048fb:	lods   eax,DWORD PTR ds:[esi]
  4048fc:	das    
  4048fd:	int3   
  4048fe:	xchg   ebp,eax
  4048ff:	in     eax,dx
  404900:	inc    eax
  404901:	add    BYTE PTR [edx-0x53b6bfc6],al
  404907:	pop    edx
  404908:	jbe    0x4048b9
  40490a:	clc    
  40490b:	shl    BYTE PTR [ebx+0x499c13fe],1
  404911:	adc    al,0x56
  404913:	mov    dl,0x62
  404915:	(bad)  
  404916:	in     al,dx
  404917:	mov    cl,0xc6
  404919:	ret    0x8f8c
  40491c:	jmp    0x1326:0xda7384d0
  404923:	add    bh,al
  404925:	inc    ebp
  404926:	(bad)  
  404928:	test   DWORD PTR [eax+edi*8-0x7e0bba75],ebx
  40492f:	sbb    eax,0x417e59
  404934:	push   ecx
  404935:	jle    0x404978
  404937:	add    BYTE PTR [ebx],dh
  404939:	mov    BYTE PTR [ecx+0x41abde2d],0x0
  404940:	mov    edx,0xe9004245
  404945:	je     0x404948
  404947:	add    BYTE PTR [eax],al
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 push 0xffffffc1
  404957:	ins    DWORD PTR es:[edi],dx
  404958:	cmp    eax,0x7e7e7fda
  40495d:	fidivr DWORD PTR [edi+0x7e]
  404960:	jle    0x404998
  404962:	ret    
  404963:	sbb    eax,0x7b1b6bb9
  404968:	adc    BYTE PTR [eax-0xc1468b5],cl
  40496e:	ret    0xefa6
  404971:	loopne 0x40495b
  404973:	lods   eax,DWORD PTR ds:[esi]
  404974:	or     eax,0x9e5d76d7
  404979:	push   edi
  40497a:	(bad)  
  40497b:	mov    ds:0x7b7774e0,al
  404980:	scas   eax,DWORD PTR es:[edi]
  404981:	push   0x8880d3ec
  404986:	les    ebp,FWORD PTR [edi+0x4]
  404989:	mov    bh,0xd6
  40498b:	mov    eax,?
  40498d:	(bad)  
  40498e:	jmp    0x404985
  404990:	add    bh,BYTE PTR [ebx-0x777991fd]
  404996:	mov    esi,0x2436aa34
  40499b:	lods   eax,DWORD PTR ds:[esi]
  40499c:	mov    bh,0xe2
  40499e:	shl    DWORD PTR ds:0x1d99a89,1
  4049a4:	scas   al,BYTE PTR es:[edi]
  4049a5:	or     ah,dh
  4049a7:	in     al,0x15
  4049a9:	daa    
  4049aa:	fwait
  4049ab:	or     ebp,DWORD PTR [ebx-0x2e00981e]
  4049b1:	sahf   
  4049b2:	imul   ebp,DWORD PTR [ecx*4+0x7fc5e2fc],0x20383707
  4049bd:	sar    ecx,0x5d
  4049c0:	cmp    al,0x1d
  4049c2:	xchg   ebx,eax
  4049c3:	call   0x9671:0xaab7d9c5
  4049ca:	cs cdq 
  4049cc:	sahf   
  4049cd:	and    BYTE PTR [esi+0x2e],cl
  4049d0:	dec    edi
  4049d1:	out    0x6d,al
  4049d3:	mov    bl,BYTE PTR [eax+0x1b]
  4049d6:	adc    ch,BYTE PTR ds:0x7b5d500e
  4049dc:	pop    eax
  4049dd:	sti    
  4049de:	out    dx,eax
  4049df:	sahf   
  4049e0:	pop    ebx
  4049e1:	cmp    eax,0x16f0e68c
  4049e6:	adc    ebx,DWORD PTR [edx+0x5a]
  4049e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ea:	sti    
  4049eb:	mov    esi,0xb9cc0c67
  4049f0:	add    al,ch
  4049f2:	push   edx
  4049f3:	imul   esp,DWORD PTR [edx-0x50],0x67
  4049f7:	pop    ds
  4049f8:	jg     0x4049a9
  4049fa:	arpl   WORD PTR [edi+esi*8-0x53],sp
  4049fe:	mov    dl,0x3a
  404a00:	mov    ds:0x941c730c,al
  404a05:	mov    dh,0x5b
  404a07:	push   0xffffff91
  404a09:	add    bh,BYTE PTR [ecx-0x521b847f]
  404a0f:	ja     0x404a83
  404a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a12:	int    0xd4
  404a14:	inc    edi
  404a15:	jp     0x404a03
  404a17:	dec    ebx
  404a18:	les    eax,FWORD PTR [ebp+0x5df02acb]
  404a1e:	push   edx
  404a1f:	std    
  404a20:	loop   0x404a90
  404a22:	or     ah,BYTE PTR [ebx+edx*2]
  404a25:	sbb    esi,edi
  404a27:	loopne 0x404a29
  404a29:	and    eax,0x93458be
  404a2e:	(bad)  
  404a2f:	mov    al,ds:0x360ed336
  404a34:	sub    eax,0xc1266b82
  404a39:	cdq    
  404a3a:	jmp    edi
  404a3c:	xchg   ebx,eax
  404a3d:	cmp    ch,dh
  404a3f:	fldenv [eax+0x4611cceb]
  404a45:	lods   al,BYTE PTR ds:[esi]
  404a46:	sbb    bh,BYTE PTR [esi-0x1c]
  404a49:	jo     0x404a8b
  404a4b:	call   0x67f7:0x67b47296
  404a52:	push   esi
  404a53:	clc    
  404a54:	stos   DWORD PTR es:[edi],eax
  404a55:	xchg   edi,eax
  404a56:	mov    ebp,0xd12312df
  404a5b:	or     eax,0xc219260f
  404a60:	fsubr  st(5),st
  404a62:	aas    
  404a63:	xor    ecx,DWORD PTR fs:[eax+0x2e]
  404a67:	call   0x68367d50
  404a6c:	xchg   edi,eax
  404a6d:	or     edi,edx
  404a6f:	mov    ebx,0xeb439bcd
  404a74:	xor    edi,ebp
  404a76:	out    0x30,al
  404a78:	fnstcw WORD PTR [ebx*4+0x3dd77337]
  404a7f:	mov    eax,ds:0x48c754a
  404a84:	cdq    
  404a85:	adc    eax,0x680ed326
  404a8a:	jl     0x404aa6
  404a8c:	mov    esi,0xef32a05f
  404a91:	xchg   BYTE PTR [esi-0x2b],ah
  404a94:	mov    ds:0x9188eb5d,al
  404a99:	xchg   esp,eax
  404a9a:	jl     0x404a76
  404a9c:	lods   eax,DWORD PTR ds:[esi]
  404a9d:	jo     0x404a8f
  404a9f:	pop    ds
  404aa0:	xchg   ebp,eax
  404aa1:	fbstp  TBYTE PTR [ebx-0x6d]
  404aa4:	in     eax,0x94
  404aa6:	dec    esi
  404aa7:	jge    0x404aad
  404aa9:	sbb    BYTE PTR [eax-0x7d598fbb],cl
  404aaf:	inc    edi
  404ab0:	dec    edi
  404ab1:	shl    BYTE PTR [ebp+0x7b99934e],1
  404ab7:	jnp    0x404af9
  404ab9:	push   cs
  404aba:	mov    ebx,0xc70342dd
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4245ba,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4245ba
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4245ba,eax
  404adc:	cmp    DWORD PTR ds:0x4245ba,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4245ba,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ae97
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4245ba,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4245ba
  404b13:	inc    eax
  404b14:	mov    ds:0x4245ba,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415111,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417e59,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415115,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41abde,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4245be,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4245b2,0x41abce
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41abda,0x41237c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4245be,0x41abe2
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	push   cs
  404ba5:	or     al,0x85
  404ba7:	mov    esp,0x7e7e7ca6
  404bac:	fidivr DWORD PTR [edi+0x7e]
  404baf:	jle    0x404bc8
  404bb1:	out    0x35,al
  404bb3:	sub    BYTE PTR [edx+0x1c3e46f2],dl
  404bb9:	jle    0x404bc2
  404bbb:	push   ebp
  404bbc:	sub    bh,dh
  404bbe:	retf   
  404bbf:	mov    dh,0x60
  404bc1:	js     0x404b9c
  404bc3:	test   al,0x48
  404bc5:	dec    edx
  404bc6:	mov    cl,BYTE PTR [esi]
  404bc8:	adc    DWORD PTR [eax-0x1a],esp
  404bcb:	(bad)  
  404bcd:	push   eax
  404bce:	int    0x2d
  404bd0:	pop    edx
  404bd1:	popa   
  404bd2:	push   0xffffffff
  404bd4:	jmp    0x17e9:0x44044753
  404bdb:	mov    WORD PTR [edx+0x18],?
  404bde:	mov    esp,0xf04c5c9e
  404be3:	in     eax,dx
  404be4:	xchg   al,dl
  404be6:	mov    ecx,0xd60f5958
  404bec:	dec    edx
  404bed:	loope  0x404bd6
  404bef:	hlt    
  404bf0:	and    BYTE PTR [ecx-0x54fcdc0],dl
  404bf6:	dec    edi
  404bf7:	push   eax
  404bf8:	mov    ebp,0x123c0d45
  404bfd:	cmp    BYTE PTR [ecx+0x2e],bl
  404c00:	ja     0x404bc4
  404c02:	adc    al,0x55
  404c04:	fist   DWORD PTR cs:[eax-0x9]
  404c08:	imul   eax,DWORD PTR [edx-0x3d],0x18
  404c0c:	loope  0x404bb0
  404c0e:	fisubr DWORD PTR [esi+ebx*2]
  404c11:	fadd   st(4),st
  404c13:	mov    DWORD PTR [eax],esi
  404c15:	dec    edi
  404c16:	sahf   
  404c17:	jg     0x404c29
  404c19:	dec    DWORD PTR [edi-0x3bde69f2]
  404c1f:	daa    
  404c20:	mov    edi,0xbfadfd24
  404c25:	inc    ebx
  404c26:	pop    ss
  404c27:	sti    
  404c28:	pop    ebx
  404c29:	sbb    BYTE PTR [ecx],ah
  404c2b:	bound  ebp,QWORD PTR [ebp+0x31c2fe83]
  404c31:	cmp    BYTE PTR [ebx+0x70c21ac0],bl
  404c37:	je     0x404bf7
  404c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c3a:	shr    bl,0xb5
  404c3d:	fimul  WORD PTR [ecx+0x6d]
  404c40:	sbb    cl,BYTE PTR [ecx+0x0]
  404c43:	mov    ?,WORD PTR [esi+0x601d9734]
  404c49:	sub    edx,DWORD PTR [ebx+ebp*1-0x12]
  404c4d:	ror    edx,0x23
  404c50:	outs   dx,BYTE PTR ds:[esi]
  404c51:	add    DWORD PTR [ebx+0x484ebd51],ebx
  404c57:	out    dx,al
  404c58:	scas   al,BYTE PTR es:[edi]
  404c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5a:	setbe  dl
  404c5d:	mov    ds:0x1b02d9c5,eax
  404c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c63:	jecxz  0x404bfd
  404c65:	push   esi
  404c66:	mov    ?,WORD PTR [ecx+0x88bff64]
  404c6c:	cmp    eax,0xfe091378
  404c71:	mov    edi,0xbe1c903e
  404c76:	(bad)  
  404c77:	jmp    0xfc0:0x12c329c0
  404c7e:	cld    
  404c7f:	into   
  404c80:	push   edi
  404c81:	mov    esp,0xae338a65
  404c86:	lea    ebx,[esi]
  404c88:	repz and eax,0x7eb10050
  404c8e:	adc    eax,0x1ab91ee6
  404c93:	cmp    dh,BYTE PTR [edi-0x4fe02592]
  404c99:	cmp    dh,BYTE PTR ds:0x639ccb6e
  404c9f:	(bad)  
  404ca0:	jne    0x404cfd
  404ca2:	shr    al,1
  404ca4:	jno    0x404c5c
  404ca6:	ins    BYTE PTR es:[edi],dx
  404ca7:	test   eax,0xb62b18b4
  404cac:	rcl    al,1
  404cae:	jl     0x404cd3
  404cb0:	push   0x6e
  404cb2:	sbb    ch,0x6c
  404cb5:	adc    DWORD PTR [ecx-0x25],0x48
  404cb9:	lock add BYTE PTR [edx],ah
  404cbc:	sub    cl,0x7c
  404cbf:	imul   ecx,edi,0x725cc255
  404cc5:	jne    0x404ce4
  404cc7:	add    bh,BYTE PTR [ebp-0x69b992a4]
  404ccd:	xchg   BYTE PTR [esi-0x28f960d4],dl
  404cd3:	add    DWORD PTR [esi-0x35c134b0],edi
  404cd9:	loopne 0x404d31
  404cdb:	loope  0x404c81
  404cdd:	aam    0xed
  404cdf:	fidivr WORD PTR [edx]
  404ce1:	inc    ebp
  404ce2:	mov    al,0xab
  404ce4:	cli    
  404ce5:	es dec edi
  404ce7:	jae    0x404d4f
  404ce9:	int    0x67
  404ceb:	int    0x3d
  404ced:	jecxz  0x404d5a
  404cef:	cdq    
  404cf0:	pop    esp
  404cf1:	(bad)  
  404cf2:	jge    0x404d3d
  404cf4:	aad    0x7c
  404cf6:	sub    dh,BYTE PTR [ebp-0xdb3b7e0]
  404cfc:	ja     0x404c8b
  404cfe:	xchg   esi,eax
  404cff:	mov    eax,ds:0xbdcb3490
  404d04:	xchg   esp,eax
  404d05:	dec    esi
  404d06:	in     eax,dx
  404d07:	mov    edx,0x712893c2
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415105
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x412364,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41237c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415111,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4245b6,0x412364
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415119
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4245b6,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417e59,0x4245ca
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4245be
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4245ca
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417e59,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417e3d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41abd2,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417e55,0x41236c
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417e55,0x417e3d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41abd6,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x412368,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x412364
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404e0b
  404e15:	jns    0x404e5a
  404e17:	stos   BYTE PTR es:[edi],al
  404e18:	add    dh,BYTE PTR [edx+0x7e]
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e99
  404e21:	add    cl,BYTE PTR [edi]
  404e23:	fwait
  404e24:	push   es
  404e25:	xor    ebx,0x13b80faf
  404e2b:	and    al,0x9e
  404e2d:	sti    
  404e2e:	xchg   edi,eax
  404e2f:	mov    bh,0x86
  404e31:	sub    al,0xfb
  404e33:	cmp    esi,DWORD PTR [ebp+0x42]
  404e36:	dec    ebp
  404e37:	mov    ebx,DWORD PTR gs:0x6e101670
  404e3e:	loop   0x404e8c
  404e40:	shl    bl,cl
  404e42:	neg    BYTE PTR [edx]
  404e44:	scas   eax,DWORD PTR es:[edi]
  404e45:	xchg   DWORD PTR [esi],ebx
  404e47:	xor    BYTE PTR [ebp-0x3341d210],0x6e
  404e4e:	mov    bh,0x6f
  404e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e51:	out    dx,eax
  404e52:	xchg   esp,eax
  404e53:	clc    
  404e54:	mov    gs,WORD PTR [eax]
  404e56:	jl     0x404dde
  404e58:	xor    eax,0xdb645010
  404e5d:	mov    ah,0x7f
  404e5f:	shr    BYTE PTR [eax],cl
  404e61:	and    ebp,esi
  404e63:	mov    cl,0x2c
  404e65:	cmovnp ebx,DWORD PTR [edi]
  404e68:	push   eax
  404e69:	clc    
  404e6a:	or     cl,BYTE PTR [esi]
  404e6c:	add    al,0x6d
  404e6e:	(bad)  
  404e6f:	or     DWORD PTR [ecx+0x7c],ebp
  404e72:	pop    ecx
  404e73:	pop    ebp
  404e74:	sti    
  404e75:	jb     0x404e35
  404e77:	inc    esp
  404e78:	jecxz  0x404e42
  404e7a:	das    
  404e7b:	xor    DWORD PTR [ebx+eax*1],edx
  404e7e:	mov    ch,0x96
  404e80:	outs   dx,DWORD PTR ds:[esi]
  404e81:	inc    esi
  404e82:	rol    BYTE PTR [ecx],0x96
  404e85:	lds    ebx,FWORD PTR [ebx]
  404e87:	and    ecx,DWORD PTR [edx+0xb]
  404e8a:	cmp    dl,ah
  404e8c:	fstp   QWORD PTR [edi+0x6f]
  404e8f:	cli    
  404e90:	stos   BYTE PTR es:[edi],al
  404e91:	dec    edi
  404e92:	scas   eax,DWORD PTR es:[edi]
  404e93:	mov    BYTE PTR [ebx+0x18],cl
  404e96:	mov    eax,ds:0x55d4aba9
  404e9b:	and    eax,DWORD PTR [esi+edx*8+0x4506b3cd]
  404ea2:	cmp    edx,DWORD PTR [esi+0x33]
  404ea5:	sub    al,0x96
  404ea7:	xchg   ecx,eax
  404ea8:	test   BYTE PTR [ecx+0x6228186c],bh
  404eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eaf:	sar    DWORD PTR [edi-0x360775c8],1
  404eb5:	mov    ebx,?
  404eb7:	jmp    0x14687efd
  404ebc:	daa    
  404ebd:	push   eax
  404ebe:	push   ebp
  404ebf:	aas    
  404ec0:	jnp    0x404e52
  404ec2:	imul   edx,DWORD PTR [ebx-0x482794cb],0x7
  404ec9:	(bad)  
  404eca:	jb     0x404e61
  404ecc:	ret    
  404ecd:	test   eax,esi
  404ecf:	jns    0x404f32
  404ed1:	fs mov dl,0xd2
  404ed4:	mov    dh,0xc5
  404ed6:	xchg   edi,eax
  404ed7:	icebp  
  404ed8:	pop    ss
  404ed9:	fadd   DWORD PTR [eax+0x79c8333b]
  404edf:	push   es
  404ee0:	stos   BYTE PTR es:[edi],al
  404ee1:	cli    
  404ee2:	and    al,0xa0
  404ee4:	pushf  
  404ee5:	icebp  
  404ee6:	pusha  
  404ee7:	leave  
  404ee8:	test   BYTE PTR [ecx+0x3b],dl
  404eeb:	fcomp  st(2)
  404eed:	loopne 0x404e78
  404eef:	add    al,0x87
  404ef1:	pop    ebp
  404ef2:	sub    ch,BYTE PTR [ecx-0x62]
  404ef5:	mov    eax,ds:0x9a20e6e1
  404efa:	jae    0x404f53
  404efc:	sbb    al,0xfc
  404efe:	mov    dl,0x8f
  404f00:	mov    ch,0x60
  404f02:	fist   DWORD PTR [ebp+0x62d54a4b]
  404f08:	bound  ebx,QWORD PTR [ebx]
  404f0a:	xor    dh,BYTE PTR [edx-0x73]
  404f0d:	in     al,0x89
  404f0f:	cmp    esi,0xffffffa2
  404f12:	sbb    BYTE PTR [ebp-0x2b],cl
  404f15:	inc    ebx
  404f16:	add    bl,BYTE PTR [esi-0x16]
  404f19:	push   edx
  404f1a:	aaa    
  404f1b:	xchg   edx,eax
  404f1c:	xor    ah,BYTE PTR [ecx+0x7f]
  404f1f:	bound  ebx,QWORD PTR [ecx]
  404f21:	icebp  
  404f22:	mov    dl,0x3c
  404f24:	adc    bh,cl
  404f26:	inc    edi
  404f27:	out    dx,eax
  404f28:	fild   DWORD PTR [di-0x74]
  404f2c:	stc    
  404f2d:	xchg   ebp,eax
  404f2e:	je     0x404ed3
  404f30:	dec    edx
  404f31:	pop    esi
  404f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f33:	xchg   esi,eax
  404f34:	shr    BYTE PTR [edi+0x15fc10a2],1
  404f3a:	and    DWORD PTR [eax-0x4262fbcb],0xffffff84
  404f41:	push   ebp
  404f42:	imul   edx,DWORD PTR ds:0x3f0a33f9,0xffffff87
  404f49:	jbe    0x404fc5
  404f4b:	push   eax
  404f4c:	dec    eax
  404f4d:	pop    edx
  404f4e:	jb     0x404f41
  404f50:	repnz adc bh,dh
  404f53:	fdivr  DWORD PTR [ecx]
  404f55:	dec    esp
  404f56:	loop   0x404f41
  404f58:	es mov edx,0xab383443
  404f5e:	and    edi,DWORD PTR [edx]
  404f60:	pop    eax
  404f61:	popf   
  404f62:	scas   al,BYTE PTR es:[edi]
  404f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f64:	mov    cl,0x86
  404f66:	mov    edi,0xd71414e2
  404f6b:	test   DWORD PTR [ebp-0x27372915],0xe2e47bf7
  404f75:	jge    0x404f5d
  404f77:	mov    bl,0x38
  404f79:	sub    DWORD PTR [eax+0x71],ebp
  404f7c:	push   eax
  404f7d:	and    DWORD PTR ds:0x4245ae,0x0
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4245ae
  404f91:	inc    eax
  404f92:	mov    ds:0x4245ae,eax
  404f97:	cmp    DWORD PTR ds:0x4245ae,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4245ae,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x412354,0x412370
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415115,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx-0x22d1764c],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x404ff0
  404ff9:	icebp  
  404ffa:	fisubr WORD PTR [ebp*2+0x5b95002c]
  405001:	sti    
  405002:	dec    eax
  405003:	shr    ebp,cl
  405005:	pushf  
  405006:	and    ebp,DWORD PTR [esi+0x44c98643]
  40500c:	stos   BYTE PTR es:[edi],al
  40500d:	frndint 
  40500f:	retf   0x1769
  405012:	pop    esp
  405013:	push   ds
  405014:	jp     0x405014
  405016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405017:	sar    cl,cl
  405019:	enter  0x142e,0x78
  40501d:	loop   0x404fc7
  40501f:	adc    dl,BYTE PTR [edx]
  405021:	jp     0x404fd0
  405023:	and    ebp,DWORD PTR [esi]
  405025:	push   ss
  405026:	mov    edi,0x7a7d1ef4
  40502b:	mov    cl,0x3f
  40502d:	enter  0xaa89,0x65
  405031:	jae    0x40506c
  405033:	mov    esp,0xd3b7e5a2
  405038:	(bad)  
  405039:	push   edi
  40503a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40503b:	adc    cl,0x85
  40503e:	(bad)  
  40503f:	mov    ecx,0x12a226ec
  405044:	jbe    0x4050c3
  405046:	popa   
  405047:	rcr    edi,cl
  405049:	pop    ecx
  40504a:	adc    eax,0xb455e69
  40504f:	xchg   edi,eax
  405050:	mov    eax,0x31609567
  405055:	jmp    0x2488:0x69fd2723
  40505c:	push   edx
  40505d:	mov    ds:0xa0357d02,eax
  405062:	not    DWORD PTR [edx]
  405064:	mov    cl,0xcb
  405066:	outs   dx,DWORD PTR ds:[esi]
  405067:	ror    BYTE PTR [ecx-0x1a85860],1
  40506d:	add    ah,BYTE PTR [esi]
  40506f:	xor    al,0xad
  405071:	rcl    BYTE PTR [edi+0x5c],1
  405074:	inc    eax
  405075:	xchg   esi,eax
  405076:	pop    ebp
  405077:	test   eax,0x8a975780
  40507c:	or     ah,BYTE PTR [edi+0x21]
  40507f:	pop    esp
  405080:	loope  0x4050f2
  405082:	inc    edi
  405083:	sbb    al,0x4b
  405085:	lahf   
  405086:	and    DWORD PTR [ebx+0x16],esi
  405089:	dec    ecx
  40508a:	push   edx
  40508b:	jmp    FWORD PTR [edx+edi*8+0x54dd65ec]
  405092:	jecxz  0x405111
  405094:	dec    edi
  405095:	jg     0x4050e4
  405097:	dec    ecx
  405098:	sub    BYTE PTR [esi-0x77],al
  40509b:	bound  ebx,QWORD PTR [eax+0x11]
  40509e:	(bad)  
  40509f:	int3   
  4050a0:	jo     0x4050dd
  4050a2:	sub    BYTE PTR [esi],0xac
  4050a5:	gs ret 
  4050a7:	repnz mov bh,0x2e
  4050aa:	out    0xc8,al
  4050ac:	add    al,0xa8
  4050ae:	data16 jbe 0x405072
  4050b1:	inc    edi
  4050b2:	rcr    DWORD PTR [edx-0x68],cl
  4050b5:	mov    edx,0x9d237d9d
  4050ba:	push   eax
  4050bb:	aad    0x9a
  4050bd:	sub    edi,DWORD PTR [ebp+0x6]
  4050c0:	out    dx,eax
  4050c1:	scas   al,BYTE PTR es:[edi]
  4050c2:	imul   ecx,ebp,0x1d
  4050c5:	mov    dh,0x4e
  4050c7:	cdq    
  4050c8:	sbb    DWORD PTR [edx-0x7731c351],esp
  4050ce:	popf   
  4050cf:	retf   
  4050d0:	xchg   ebx,eax
  4050d1:	frstor ds:0xe2e40b9b
  4050d7:	push   edi
  4050d8:	xor    ebp,DWORD PTR [esi+edi*2+0x75]
  4050dc:	daa    
  4050dd:	fisttp WORD PTR [ebp+0x78664a08]
  4050e3:	aaa    
  4050e4:	cmc    
  4050e5:	inc    ebp
  4050e6:	pop    ss
  4050e7:	je     0x4050d8
  4050e9:	mov    bl,0x2a
  4050eb:	fild   QWORD PTR [eax+0x45fe3d14]
  4050f1:	cmp    esp,edx
  4050f3:	sahf   
  4050f4:	stos   BYTE PTR es:[edi],al
  4050f5:	push   0xee108c0c
  4050fa:	shl    DWORD PTR [ebx-0x6403d80c],0xad
  405101:	pop    edx
  405102:	sahf   
  405103:	(bad)  
  405104:	les    ecx,FWORD PTR [esi+esi*2+0x5f]
  405108:	fldcw  WORD PTR [ebp-0x4b916727]
  40510e:	(bad)  
  40510f:	dec    ebp
  405110:	loope  0x4050ca
  405112:	es pop edx
  405115:	jg     0x4050f9
  405117:	jns    0x40514a
  405119:	nop
  40511a:	inc    eax
  40511b:	js     0x40511d
  40511d:	lds    ecx,FWORD PTR [edx-0xb]
  405120:	adc    esi,DWORD PTR [edx]
  405122:	sub    edx,DWORD PTR [esi+ebp*2]
  405125:	pushf  
  405126:	call   0x225d2b9d
  40512b:	adc    al,0x98
  40512d:	dec    edi
  40512e:	(bad)  
  40512f:	iret   
  405130:	mov    bh,0x4f
  405132:	pop    edi
  405133:	(bad)  
  405134:	fs mov bh,0xab
  405137:	ja     0x40514f
  405139:	push   esi
  40513a:	cld    
  40513b:	sti    
  40513c:	xor    eax,0xf816937a
  405141:	jno    0x40512e
  405143:	test   al,0x17
  405145:	push   ds
  405146:	lock dec edi
  405148:	or     al,0x84
  40514a:	(bad)  
  40514b:	je     0x405134
  40514d:	mov    eax,ds:0x29395774
  405152:	sbb    al,0x92
  405154:	push   eax
  405155:	mov    DWORD PTR ds:0x412358,0x10
  40515f:	cmp    DWORD PTR ds:0x412358,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x412358,0x4
  405173:	jne    0x405184
  405179:	push   0x4150fd
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x412358,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x412358
  405196:	dec    eax
  405197:	mov    ds:0x412358,eax
  40519c:	mov    eax,ds:0x412358
  4051a1:	dec    eax
  4051a2:	mov    ds:0x412358,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi-0x2ff0698e]
  4051c5:	inc    esi
  4051c6:	inc    edi
  4051c7:	pop    ds
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x4051a4
  4051d1:	popa   
  4051d2:	enter  0x4541,0x2f
  4051d6:	fdivr  QWORD PTR [esi-0x7038a628]
  4051dc:	int    0x3d
  4051de:	rol    BYTE PTR ds:0xa45c3943,cl
  4051e4:	ja     0x405171
  4051e6:	adc    BYTE PTR ds:0xfa00eacf,0x50
  4051ed:	mov    ah,0x33
  4051ef:	jne    0x405258
  4051f1:	jae    0x40522e
  4051f3:	push   edi
  4051f4:	pop    es
  4051f5:	sub    eax,0x28185b92
  4051fa:	retf   
  4051fb:	sub    al,0x6
  4051fd:	pusha  
  4051fe:	xchg   ecx,eax
  4051ff:	push   0x61
  405201:	ror    BYTE PTR [eax+0x7391f343],0x74
  405208:	fidiv  WORD PTR [esi-0x47]
  40520b:	out    dx,al
  40520c:	add    DWORD PTR [eax+0x21],esp
  40520f:	sbb    bh,BYTE PTR [ecx+0x5401d5b4]
  405215:	in     eax,0x5d
  405217:	pop    esi
  405218:	bound  eax,QWORD PTR [edx-0x1c]
  40521b:	dec    ebp
  40521c:	mov    BYTE PTR [ecx],dh
  40521e:	fnstenv [ebx-0x662e327f]
  405224:	loopne 0x40529b
  405226:	repnz add cl,ah
  405229:	jle    0x4051be
  40522b:	jge    0x4051b7
  40522d:	cmp    BYTE PTR [esi-0x366dda0c],ah
  405233:	out    dx,al
  405234:	test   bh,al
  405236:	rcr    ebx,0xd1
  405239:	test   al,0x31
  40523b:	in     eax,0x22
  40523d:	xor    DWORD PTR [esi-0x32],ebp
  405240:	div    bl
  405242:	inc    esi
  405243:	inc    esp
  405244:	mov    ecx,0x51f7baea
  405249:	and    DWORD PTR [edi],ebx
  40524b:	sub    edx,0xe29d27f9
  405251:	mov    edi,0x88026e1c
  405256:	xor    bl,dl
  405258:	adc    DWORD PTR [edi],edx
  40525a:	pop    ds
  40525b:	dec    esp
  40525c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40525d:	cmp    DWORD PTR [ecx-0x2c82cd5c],esi
  405263:	scas   al,BYTE PTR es:[edi]
  405264:	outs   dx,BYTE PTR ds:[esi]
  405265:	(bad)  
  405267:	inc    esi
  405268:	test   BYTE PTR [edx-0x4a],0x55
  40526c:	shufps xmm5,XMMWORD PTR [esi+0x55d85c2f],0x96
  405274:	loop   0x4052e4
  405276:	jo     0x405207
  405278:	ret    
  405279:	shr    DWORD PTR [edi-0x1e],1
  40527c:	les    ecx,FWORD PTR [eax+edx*2+0x33d5dc3e]
  405283:	push   es
  405284:	push   ecx
  405285:	pop    ss
  405286:	in     al,dx
  405287:	mov    BYTE PTR [edx+0x29cbd16a],al
  40528d:	jmp    0x40527f
  40528f:	mov    DWORD PTR [edx+0x28],ecx
  405292:	xchg   esp,eax
  405293:	fimul  WORD PTR [esi+ebp*1-0x66a8f879]
  40529a:	push   ebp
  40529b:	scas   eax,DWORD PTR es:[edi]
  40529c:	push   0xa09a2228
  4052a1:	das    
  4052a2:	push   edx
  4052a3:	jle    0x4052b4
  4052a5:	sub    BYTE PTR [esi-0x1e36ffd8],dl
  4052ab:	adc    al,0xc9
  4052ad:	popf   
  4052ae:	fld    DWORD PTR [edx]
  4052b0:	bound  ebx,QWORD PTR [eax-0x57]
  4052b3:	lahf   
  4052b4:	xor    al,0xc3
  4052b6:	repz adc eax,0x3e3fa182
  4052bc:	test   BYTE PTR [edx+eiz*4-0x4c],ah
  4052c0:	mov    esp,0xde5ed5bf
  4052c5:	adc    eax,0xba37fcc8
  4052ca:	outs   dx,BYTE PTR ds:[esi]
  4052cb:	cmp    eax,0x8c908782
  4052d0:	(bad)  
  4052d1:	mov    ebx,0x5ecb2b7f
  4052d6:	jecxz  0x4052ca
  4052d8:	outs   dx,BYTE PTR ds:[esi]
  4052d9:	mov    dl,0x1
  4052db:	clc    
  4052dc:	inc    ebx
  4052dd:	cmp    ah,BYTE PTR [ebx+0x30]
  4052e0:	bound  edx,QWORD PTR [edi-0x6]
  4052e3:	lea    eax,[edi+0x16]
  4052e6:	test   DWORD PTR [esi+eiz*4+0x10860975],edx
  4052ed:	sub    edx,DWORD PTR [ebp+0x3d5bc1e2]
  4052f3:	xchg   ecx,eax
  4052f4:	mov    WORD PTR [edi],cs
  4052f6:	repz push 0xb14b57a0
  4052fc:	in     al,0x35
  4052fe:	js     0x4052fc
  405300:	add    BYTE PTR [esi+0x1d],dh
  405303:	cdq    
  405304:	and    esi,esi
  405306:	(bad)  
  405307:	mov    esp,0xdb95e725
  40530c:	test   eax,0x354bd466
  405311:	mov    DWORD PTR [edi-0x42],ebx
  405314:	daa    
  405315:	mov    esp,0x16819210
  40531a:	arpl   bp,dx
  40531c:	out    dx,eax
  40531d:	aam    0xa1
  40531f:	ins    DWORD PTR es:[edi],dx
  405320:	xchg   ebp,eax
  405321:	xor    BYTE PTR [esi-0x4bfc391f],ah
  405327:	out    dx,al
  405328:	pushf  
  405329:	das    
  40532a:	jmp    0x763fa3d1
  40532f:	clc    
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	mov    ds:0x16a76bcb,eax
  405350:	jbe    0x4053d0
  405352:	jle    0x40532e
  405354:	jg     0x4053d4
  405356:	jle    0x405346
  405358:	or     al,0xa3
  40535a:	push   edi
  40535b:	rol    ecx,0xc
  40535e:	(bad)  ds:0xdf0f8ac3
  405364:	(bad)  
  405365:	sbb    ch,BYTE PTR [ecx]
  405367:	aad    0x13
  405369:	sub    al,BYTE PTR [esi-0x4cfcbba5]
  40536f:	sbb    al,0x61
  405371:	mov    ah,0xb7
  405373:	ja     0x4053de
  405375:	jnp    0x40538e
  405377:	and    BYTE PTR [eax-0x70],cl
  40537a:	ja     0x40539c
  40537c:	mov    ds:0x197b1888,al
  405381:	ror    DWORD PTR [esi+edi*1],cl
  405384:	test   eax,0x33171b2f
  405389:	pop    esp
  40538a:	jo     0x405397
  40538c:	shr    DWORD PTR [ecx-0x42b9e00c],0x7f
  405393:	push   bx
  405395:	(bad)  
  405396:	push   0xb5f62188
  40539b:	jmp    0xb89fe316
  4053a0:	sbb    eax,0xc7cd84de
  4053a5:	fistp  DWORD PTR [edx-0x3b]
  4053a8:	stos   DWORD PTR es:[edi],eax
  4053a9:	jns    0x40537a
  4053ab:	loope  0x4053de
  4053ad:	pop    ds
  4053ae:	dec    edi
  4053af:	stc    
  4053b0:	cmp    BYTE PTR [ebx+0x2a],dl
  4053b3:	out    0x5e,eax
  4053b5:	retf   0xb63d
  4053b8:	mov    ebx,0x9bc10094
  4053bd:	(bad)  
  4053bf:	sub    DWORD PTR [ebx+0x1c],0xffffff90
  4053c3:	push   ebx
  4053c4:	shl    BYTE PTR [ecx],cl
  4053c6:	mov    bh,0xaa
  4053c8:	fdiv   QWORD PTR [esp+ecx*4]
  4053cb:	into   
  4053cc:	or     DWORD PTR [edx-0x219dd6fc],edx
  4053d2:	adc    DWORD PTR [ebp+0x79b971ee],ecx
  4053d8:	sbb    eax,0xaa4e395d
  4053dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053de:	adc    al,BYTE PTR es:[esi-0x58dc6ea6]
  4053e5:	hlt    
  4053e6:	xchg   esp,eax
  4053e7:	push   ss
  4053e8:	and    BYTE PTR [eax],al
  4053ea:	mov    ebx,0xc571b9f5
  4053ef:	xor    eax,0x3c8073c0
  4053f4:	jp     0x405445
  4053f6:	popf   
  4053f7:	imul   ecx,DWORD PTR [edx-0x61],0xdff953cc
  4053fe:	fwait
  4053ff:	or     ebp,DWORD PTR [edi]
  405401:	call   0x8570843e
  405406:	out    0x69,eax
  405408:	xchg   ecx,eax
  405409:	stos   DWORD PTR es:[edi],eax
  40540a:	out    0x75,eax
  40540c:	sbb    eax,0x79f8b316
  405411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405412:	mov    dh,bl
  405414:	mov    dh,0xeb
  405416:	aas    
  405417:	(bad)  
  405418:	jmp    0x40540c
  40541a:	(bad)  
  40541b:	loopne 0x4053e5
  40541d:	mov    ecx,0xbb4a85bc
  405422:	inc    esi
  405423:	xadd   BYTE PTR [ebx-0x33a1bd16],ah
  40542a:	pop    ecx
  40542b:	sub    DWORD PTR [edx],edi
  40542d:	scas   al,BYTE PTR es:[edi]
  40542e:	pop    edi
  40542f:	nop
  405430:	sub    DWORD PTR [edx+0x34760c4d],eax
  405436:	mov    ebp,0x9b918be
  40543b:	fmul   QWORD PTR [esi-0x70]
  40543e:	out    0x6b,al
  405440:	xchg   esi,eax
  405441:	jbe    0x405421
  405443:	mov    eax,0xa48ffc21
  405448:	(bad)  
  405449:	pop    esp
  40544a:	mov    esp,0xab2b08b
  40544f:	add    al,0xa1
  405451:	adc    DWORD PTR [ebx-0x2bc9f8a],edi
  405457:	call   0x9e3b0f4e
  40545c:	(bad)  
  40545d:	dec    esp
  40545e:	lods   eax,DWORD PTR ds:[esi]
  40545f:	jmp    0x40541d
  405461:	sahf   
  405462:	lea    edi,[edx+ebp*8]
  405465:	cmp    ch,BYTE PTR [eax-0x66]
  405468:	jo     0x405449
  40546a:	retf   
  40546b:	xor    DWORD PTR [edi+edi*4-0x35b2cb88],esp
  405472:	add    dl,BYTE PTR [ecx]
  405474:	ret    
  405475:	sbb    bh,ah
  405477:	xor    ebp,esi
  405479:	xchg   esi,eax
  40547a:	sub    DWORD PTR [ebp-0x2b1f4909],0xffffffc3
  405481:	push   edx
  405482:	leave  
  405483:	pushf  
  405484:	push   ss
  405485:	adc    BYTE PTR [ebx-0x2c6c20bc],ch
  40548b:	scas   eax,DWORD PTR es:[edi]
  40548c:	add    dl,BYTE PTR [esi+ebx*2+0x55e4fa74]
  405493:	sub    BYTE PTR [ecx],al
  405495:	xor    BYTE PTR [eax],bh
  405497:	xor    eax,0xd119b438
  40549c:	popf   
  40549d:	push   edx
  40549e:	xor    DWORD PTR [ecx+ecx*4-0x48],esi
  4054a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a3:	xor    bl,BYTE PTR [ebx]
  4054a5:	or     edx,edi
  4054a7:	xlat   BYTE PTR ds:[ebx]
  4054a8:	mov    esp,0x336b54a2
  4054ad:	stos   BYTE PTR es:[edi],al
  4054ae:	aad    0x49
  4054b0:	pushf  
  4054b1:	stc    
  4054b2:	jl     0x40549c
  4054b4:	dec    edi
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0x5a],0x5e
  40550f:	cs data16 bnd ja 0x405592
  405514:	jle    0x4054f0
  405516:	jg     0x405596
  405518:	jle    0x4054e7
  40551a:	mov    eax,0xa79cb29c
  40551f:	call   0x6472:0xcb346bcf
  405526:	sub    ecx,DWORD PTR [eax]
  405528:	mov    ch,0x46
  40552a:	sub    DWORD PTR [edi],ebx
  40552c:	push   0xf8b529ae
  405531:	rcr    DWORD PTR [edi],cl
  405533:	or     ebx,0xffffff8d
  405536:	imul   esi,ebp,0xb5b81fad
  40553c:	sbb    al,dl
  40553e:	push   ebp
  40553f:	in     eax,dx
  405540:	cli    
  405541:	scas   eax,DWORD PTR es:[edi]
  405542:	enter  0xbf27,0xa5
  405546:	and    eax,esi
  405548:	ins    BYTE PTR es:[edi],dx
  405549:	fidivr DWORD PTR [eax+edi*1]
  40554c:	test   eax,0x930fc613
  405551:	loopne 0x40552d
  405553:	mov    edi,0x2efd2135
  405558:	mov    ecx,0xc6c94522
  40555d:	pop    ebp
  40555e:	stos   DWORD PTR es:[edi],eax
  40555f:	mov    bl,0x69
  405561:	jae    0x40552b
  405563:	sub    eax,0x39403b5e
  405568:	push   eax
  405569:	cmc    
  40556a:	fs jae 0x40554e
  40556d:	cmc    
  40556e:	and    cl,BYTE PTR [esi+0x2e2e1fa3]
  405574:	shl    bh,0x6
  405577:	cmp    al,0x3
  405579:	sub    ebp,ecx
  40557b:	xlat   BYTE PTR ds:[ebx]
  40557c:	sbb    BYTE PTR [esi],al
  40557e:	push   0xfffffff0
  405580:	sub    eax,0x1d5bea4e
  405585:	enter  0xda1f,0x61
  405589:	mov    ecx,0x11202ff9
  40558e:	dec    eax
  40558f:	scas   al,BYTE PTR es:[edi]
  405590:	mov    cs,WORD PTR [ecx+0x357de0fd]
  405596:	push   es
  405597:	sbb    bh,BYTE PTR [ebp-0x43]
  40559a:	stc    
  40559b:	xchg   ebx,eax
  40559c:	in     eax,0xec
  40559e:	xor    esi,esi
  4055a0:	add    edi,DWORD PTR [esi+0x7aaef9f8]
  4055a6:	mov    dl,BYTE PTR [ecx+ebp*2]
  4055a9:	jno    0x405606
  4055ab:	test   BYTE PTR [ebx+eiz*4],cl
  4055ae:	ds int3 
  4055b0:	sbb    esp,ebx
  4055b2:	dec    ebp
  4055b3:	js     0x4055b9
  4055b5:	les    ecx,FWORD PTR [edx-0x26984920]
  4055bb:	pushf  
  4055bc:	mov    bh,0x56
  4055be:	out    dx,eax
  4055bf:	add    DWORD PTR [esi],ebp
  4055c1:	add    eax,0x9a4bfdf0
  4055c6:	push   ss
  4055c7:	inc    ebx
  4055c8:	add    esi,esi
  4055ca:	push   0x3252289e
  4055cf:	leave  
  4055d0:	mov    WORD PTR [ebp+0x5272fc86],?
  4055d6:	ins    DWORD PTR es:[edi],dx
  4055d7:	push   0x79089421
  4055dc:	jb     0x4055d3
  4055de:	popa   
  4055df:	lods   eax,DWORD PTR ds:[esi]
  4055e0:	or     eax,DWORD PTR [edx+ebp*2]
  4055e3:	pop    esp
  4055e4:	retf   0x2339
  4055e7:	mov    edi,0xe3cf70c5
  4055ec:	sahf   
  4055ed:	data16 ins BYTE PTR es:[edi],dx
  4055ef:	mov    dl,0xd9
  4055f1:	cmp    BYTE PTR [edi],cl
  4055f3:	jae    0x405585
  4055f5:	mov    dh,0x3b
  4055f7:	jmp    0x4055ec
  4055f9:	dec    ebp
  4055fa:	push   ss
  4055fb:	fs scas al,BYTE PTR es:[edi]
  4055fd:	dec    esi
  4055fe:	or     BYTE PTR [eax],ch
  405600:	call   0x6f0e:0x7a3a688a
  405607:	sar    ah,cl
  405609:	sbb    BYTE PTR [ecx-0x9],dl
  40560c:	mov    ds:0xee98d0df,al
  405611:	jle    0x4055eb
  405613:	pop    es
  405614:	mov    esp,0xb37132a
  405619:	cmp    BYTE PTR ds:0x5be31936,0xe6
  405620:	add    ebx,DWORD PTR [esi]
  405622:	adc    BYTE PTR [edi-0x2f],bh
  405625:	sub    al,0xf6
  405627:	cmp    BYTE PTR [esi+edi*8+0x9],bl
  40562b:	push   eax
  40562c:	pusha  
  40562d:	sub    DWORD PTR [ebp+eiz*4+0x548661f1],0xffffff84
  405635:	dec    ecx
  405636:	daa    
  405637:	adc    DWORD PTR [edi-0x62],eax
  40563a:	(bad)  
  40563b:	mov    edi,0x46e53def
  405640:	pop    esp
  405641:	into   
  405642:	repz les edi,FWORD PTR [esi+0xa2abf77]
  405649:	test   eax,0x85b083c0
  40564e:	pop    ecx
  40564f:	pop    esi
  405650:	xor    DWORD PTR [edi+ecx*2],0x76e2ae6a
  405657:	and    eax,0xcafac651
  40565c:	xchg   esi,eax
  40565d:	mov    BYTE PTR [esi],0x7f
  405660:	js     0x405685
  405662:	div    BYTE PTR [edx]
  405664:	cmp    eax,0x5b541b63
  405669:	icebp  
  40566a:	lock mov dh,0xa3
  40566d:	mov    edi,0x1996df97
  405672:	ins    DWORD PTR es:[edi],dx
  405673:	push   edi
  405674:	or     DWORD PTR [ecx+0x458a0148],0xf84d8bff
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	cmp    bh,BYTE PTR [esp+ebp*2]
  4056a3:	out    0x5e,al
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x405632
  4056ad:	pop    ebx
  4056ae:	jnp    0x4056c0
  4056b0:	rol    DWORD PTR [ebx],cl
  4056b2:	ret    0xdbda
  4056b5:	not    BYTE PTR [edx]
  4056b7:	xchg   DWORD PTR [ebx-0x4c],ebp
  4056ba:	push   0x2f
  4056bc:	cs or  al,0xf4
  4056bf:	imul   edi,ecx,0x1d544ff7
  4056c5:	fist   DWORD PTR [edx]
  4056c7:	sbb    bh,BYTE PTR [ebx]
  4056c9:	icebp  
  4056ca:	sti    
  4056cb:	adc    cl,BYTE PTR ds:0x24b7ed00
  4056d1:	and    al,0xc0
  4056d3:	mov    edx,0x3089d974
  4056d8:	aam    0xca
  4056da:	mov    eax,0xe9eb26b3
  4056df:	xor    ch,ah
  4056e1:	jecxz  0x4056b3
  4056e3:	add    BYTE PTR [ecx+0x49],ch
  4056e6:	mov    eax,DWORD PTR [edi+0x6a]
  4056e9:	cmp    DWORD PTR [ebx],esi
  4056eb:	and    DWORD PTR cs:[edi+0x66],eax
  4056ef:	sbb    BYTE PTR [edx+eax*4],ch
  4056f2:	lea    esp,[ebx+esi*2]
  4056f5:	xor    BYTE PTR [ebx],al
  4056f7:	jno    0x4056c4
  4056f9:	repz into 
  4056fb:	std    
  4056fc:	cs enter 0xca0c,0x4a
  405701:	je     0x4056fd
  405703:	inc    edx
  405704:	pop    ebp
  405705:	test   BYTE PTR [ebx*2+0x471c80ac],al
  40570c:	fimul  WORD PTR [ebx]
  40570e:	pop    esi
  40570f:	cmp    ebp,ecx
  405711:	mov    esp,0xc31f0498
  405716:	mov    eax,ds:0xd551de8f
  40571b:	xor    BYTE PTR [edx],cl
  40571d:	and    DWORD PTR ds:0x1c002fe4,0xffffffde
  405725:	inc    ecx
  405726:	test   al,0x6c
  405728:	test   eax,0xb0316032
  40572d:	sub    esi,DWORD PTR [ebx+eax*2-0x6c]
  405731:	dec    edx
  405732:	mov    eax,ds:0xfffd90d1
  405737:	xor    dh,dh
  405739:	outs   dx,BYTE PTR ds:[esi]
  40573a:	cmp    eax,0xe3edc345
  40573f:	addr16 addr16 mov ds:0x5fb,al
  405744:	push   ebp
  405745:	rcl    DWORD PTR [ebx+eiz*2-0x3],cl
  405749:	cmc    
  40574a:	retf   0xe84f
  40574d:	add    DWORD PTR [ebx+0x35],ebp
  405750:	call   0x9e112486
  405755:	mov    esi,DWORD PTR [edx+0x3d0cfa4a]
  40575b:	mov    eax,0xe4e9ee7e
  405760:	pop    ds
  405761:	sub    eax,0x3d459d34
  405766:	mov    WORD PTR [esi-0x2d],gs
  405769:	jmp    ebx
  40576b:	xchg   BYTE PTR [ecx],bl
  40576d:	imul   ebp,ebx,0x3983e944
  405773:	xor    bh,BYTE PTR [ebp+0x6561e692]
  405779:	sahf   
  40577a:	adc    edx,DWORD PTR [ecx-0x47]
  40577d:	add    al,0xc
  40577f:	shl    BYTE PTR [esp+eax*4],cl
  405782:	sub    al,0xb7
  405784:	pop    ds
  405785:	push   ecx
  405786:	pop    esp
  405787:	fld1   
  405789:	jmp    0x4057f7
  40578b:	jns    0x4057a5
  40578d:	not    DWORD PTR ds:0x297a6d95
  405793:	dec    ebp
  405794:	idiv   BYTE PTR [esp+edx*2-0x16]
  405798:	stos   DWORD PTR es:[edi],eax
  405799:	dec    ebp
  40579a:	scas   al,BYTE PTR es:[edi]
  40579b:	pop    esp
  40579c:	and    BYTE PTR [ebx-0x3b6cb41f],dh
  4057a2:	mov    ecx,0x9f32d2b5
  4057a7:	mov    edx,0x3961c5f5
  4057ac:	aas    
  4057ad:	push   0xffffff84
  4057af:	stos   DWORD PTR es:[edi],eax
  4057b0:	xchg   esi,eax
  4057b1:	jp     0x4057ad
  4057b3:	jns    0x405758
  4057b5:	and    BYTE PTR [eax],al
  4057b7:	scas   al,BYTE PTR es:[edi]
  4057b8:	outs   dx,DWORD PTR ds:[esi]
  4057b9:	push   ss
  4057ba:	xor    BYTE PTR cs:[esi+0x710a50f3],ah
  4057c1:	call   0xd40a:0x6ddf0055
  4057c8:	xchg   esi,edx
  4057ca:	mov    bl,0x2
  4057cc:	push   ss
  4057cd:	xlat   BYTE PTR ds:[ebx]
  4057ce:	loop   0x405833
  4057d0:	cmp    bl,bh
  4057d2:	mov    cs,WORD PTR [ecx-0x7d]
  4057d5:	cs fs xor eax,0x51687193
  4057dc:	xchg   ecx,eax
  4057dd:	mov    bh,0x8
  4057df:	xor    eax,0xfe65a083
  4057e4:	xor    ebp,ebx
  4057e6:	jno    0x40580a
  4057e8:	cdq    
  4057e9:	mov    cl,0x19
  4057eb:	push   esp
  4057ec:	and    esp,ebp
  4057ee:	lds    ebp,FWORD PTR [edi-0x56]
  4057f1:	shl    DWORD PTR ds:0x55cca5c,cl
  4057f7:	popa   
  4057f8:	fs lock dec eax
  4057fb:	cmp    ebp,esp
  4057fd:	or     eax,0x824e75ae
  405802:	jnp    0x405851
  405804:	leave  
  405805:	add    edi,DWORD PTR [edx-0xf50188]
  40580b:	jne    0x4057fd
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	jp     0x405889
  405858:	or     eax,0x7e0a3ad5
  40585d:	jle    0x405839
  40585f:	jg     0x4058df
  405861:	jle    0x405887
  405863:	nop
  405864:	xor    esp,DWORD PTR [eax+0x28]
  405867:	pop    es
  405868:	jl     0x40582d
  40586a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40586b:	xchg   ebp,eax
  40586c:	mov    esi,0xf7778390
  405871:	sbb    DWORD PTR [edx],edx
  405873:	xchg   edx,eax
  405874:	mov    esi,0x8ff1cafe
  405879:	and    al,BYTE PTR [esi]
  40587b:	pop    ebx
  40587c:	dec    esi
  40587d:	imul   edi,DWORD PTR [edi-0x24e4b9fe],0x5c195b2b
  405887:	dec    ebp
  405888:	cmp    al,0x97
  40588a:	outs   dx,DWORD PTR ds:[esi]
  40588b:	out    dx,eax
  40588c:	(bad)  
  40588d:	test   eax,0xe696e3bc
  405892:	inc    edx
  405893:	les    ecx,FWORD PTR [edi]
  405895:	pop    edi
  405896:	jl     0x4058d3
  405898:	(bad)  
  405899:	ja     0x405898
  40589b:	sub    eax,0x421d0ce9
  4058a0:	cmp    al,0x7e
  4058a2:	push   edx
  4058a3:	add    eax,0x1f6e74e5
  4058a8:	jno    0x4058b7
  4058aa:	iret   
  4058ab:	fisttp DWORD PTR [edi+0x35e38527]
  4058b1:	imul   DWORD PTR [edx]
  4058b3:	repnz ror BYTE PTR [ecx+0x9e5964a],0x8e
  4058bb:	popa   
  4058bc:	gs jno 0x405845
  4058bf:	and    ecx,DWORD PTR [ebx-0x646fd7d2]
  4058c5:	sahf   
  4058c6:	loope  0x405887
  4058c8:	inc    esi
  4058c9:	arpl   WORD PTR [edi-0x47],ax
  4058cc:	adc    bh,BYTE PTR [eax]
  4058ce:	jg     0x405852
  4058d0:	stc    
  4058d1:	ds je  0x40590c
  4058d4:	loopne 0x40593d
  4058d6:	pushf  
  4058d7:	leave  
  4058d8:	mov    al,0xb9
  4058da:	adc    ch,BYTE PTR [esp+esi*4]
  4058dd:	pop    ss
  4058de:	pop    eax
  4058df:	sbb    BYTE PTR [ebp+0x3b0f4663],ah
  4058e5:	enter  0x543a,0x81
  4058e9:	mov    eax,0x277e0cb9
  4058ee:	(bad)  
  4058ef:	push   cs
  4058f0:	fs inc esi
  4058f2:	push   edi
  4058f3:	cwde   
  4058f4:	xor    DWORD PTR [ebx+eiz*2],edi
  4058f7:	cld    
  4058f8:	arpl   bp,di
  4058fa:	xor    eax,DWORD PTR [edx+0x1a]
  4058fd:	and    ax,WORD PTR [ecx]
  405900:	jge    0x405966
  405902:	xor    bl,cl
  405904:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405906:	cmp    ebp,ebx
  405908:	hlt    
  405909:	and    eax,0x2ff683cc
  40590e:	pop    ebp
  40590f:	cmp    esi,DWORD PTR [edi-0x7e4edd78]
  405915:	sbb    esp,DWORD PTR [ebp+0x58]
  405918:	sub    BYTE PTR [eax-0x40],al
  40591b:	push   cs
  40591c:	ins    DWORD PTR es:[edi],dx
  40591d:	nop
  40591e:	xchg   DWORD PTR [ebp+0x11a48921],eax
  405924:	push   cs
  405925:	jg     0x405964
  405927:	mov    al,ds:0x7357fa2
  40592c:	inc    edi
  40592d:	or     DWORD PTR [esi-0x2e6bff54],0x480f1873
  405937:	sahf   
  405938:	in     al,0xc8
  40593a:	or     BYTE PTR [eax+0x67ed1839],dh
  405940:	or     DWORD PTR [edi+0x3c],edx
  405943:	pop    ebx
  405944:	adc    ecx,ecx
  405946:	fisubr DWORD PTR ds:0xded9ec29
  40594c:	cmp    al,0x1e
  40594e:	loop   0x4059cd
  405950:	cmp    BYTE PTR [edx-0x5b8f5323],bh
  405956:	sar    eax,1
  405958:	lahf   
  405959:	and    BYTE PTR [ecx-0x34f4125c],bl
  40595f:	mov    bh,0xd2
  405961:	int3   
  405962:	mov    edi,0x1c438c24
  405967:	mov    dh,BYTE PTR [edx]
  405969:	stc    
  40596a:	inc    edx
  40596b:	gs jbe 0x4059cc
  40596e:	sti    
  40596f:	ins    DWORD PTR es:[edi],dx
  405970:	cmp    edx,DWORD PTR [ecx]
  405972:	push   esi
  405973:	xor    eax,0xfc8284e4
  405978:	dec    edi
  405979:	repnz (bad) 
  40597b:	adc    edx,eax
  40597d:	(bad)
  405981:	addr16 mov ch,0x3d
  405984:	ins    BYTE PTR es:[edi],dx
  405985:	imul   eax,DWORD PTR [esi+0x1862fb1a],0x85639118
  40598f:	inc    ebp
  405990:	daa    
  405991:	and    cl,BYTE PTR [eax-0x63]
  405994:	daa    
  405995:	(bad)  
  405996:	cwde   
  405997:	data16 push di
  40599a:	out    0x36,eax
  40599c:	pop    ebx
  40599d:	cdq    
  40599e:	sub    ebp,DWORD PTR [edi]
  4059a0:	std    
  4059a1:	gs cmp eax,0xd97e35d3
  4059a7:	(bad)  
  4059a8:	cmp    DWORD PTR [ebx],edx
  4059aa:	imul   edx,DWORD PTR [ebp+ecx*2+0x2ef77157],0x3db12483
  4059b5:	ret    0xf510
  4059b8:	arpl   WORD PTR [edx-0x22],sp
  4059bb:	scas   al,BYTE PTR es:[edi]
  4059bc:	mov    ecx,0x4c0d8bce
  4059c1:	(bad)  
  4059c2:	inc    eax
  4059c3:	add    BYTE PTR [ecx],al
  4059c5:	or     BYTE PTR [edi+0x5e],bl
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4245b6
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417e4d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417e55,0x17
  4059ee:	cmp    DWORD PTR ds:0x417e55,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417e55,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417e45
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417e55,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417e55
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417e55,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417e55
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417e55,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417e41,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4245b2
  405a75:	and    DWORD PTR ds:0x41abd6,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41510d
  405a9d:	sbb    DWORD PTR ds:0x4245be,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x412354,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	(bad)  
  405ac4:	(bad)
  405ac8:	or     edi,DWORD PTR [esi+0x7e]
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405ae1
  405ad0:	or     DWORD PTR [eax+0x68],edi
  405ad3:	leave  
  405ad4:	fld    DWORD PTR [edi-0x59]
  405ad7:	(bad)
  405adb:	dec    esi
  405adc:	js     0x405aad
  405ade:	in     al,0xc0
  405ae0:	push   edi
  405ae1:	dec    ebp
  405ae2:	sahf   
  405ae3:	inc    ebx
  405ae4:	inc    edx
  405ae5:	inc    eax
  405ae6:	sub    al,0xd5
  405ae8:	outs   dx,DWORD PTR ds:[esi]
  405ae9:	add    BYTE PTR [eax+0xde39481],dl
  405aef:	push   eax
  405af0:	aad    0x2a
  405af2:	rcl    DWORD PTR [edi-0x5c],cl
  405af5:	ret    
  405af6:	sub    esi,ecx
  405af8:	pop    es
  405af9:	les    eax,FWORD PTR [eax-0x70]
  405afc:	jbe    0x405b49
  405afe:	outs   dx,BYTE PTR ds:[esi]
  405aff:	inc    ecx
  405b00:	and    esp,DWORD PTR [eax]
  405b02:	pop    ebp
  405b03:	in     al,dx
  405b04:	int3   
  405b05:	sub    al,0x6c
  405b07:	sbb    al,0x67
  405b09:	pop    esi
  405b0a:	or     BYTE PTR [esi],bl
  405b0c:	nop    DWORD PTR [edx+esi*4]
  405b10:	adc    BYTE PTR [ecx],ch
  405b12:	jo     0x405b04
  405b14:	inc    eax
  405b15:	pmuludq mm2,QWORD PTR [eax-0x6f]
  405b19:	out    0x3,al
  405b1b:	repz mov ebp,0xfe928c33
  405b21:	cmp    eax,DWORD PTR [edi+ebp*2+0x52]
  405b25:	dec    ebx
  405b26:	fs loope 0x405b60
  405b29:	ins    BYTE PTR es:[edi],dx
  405b2a:	push   0xfffffffb
  405b2c:	pop    es
  405b2d:	push   edx
  405b2e:	and    edx,DWORD PTR [edi+0x5]
  405b31:	fidivr DWORD PTR [edx+0x65bcb542]
  405b37:	imul   DWORD PTR [esi]
  405b39:	lock fld QWORD PTR [edx+0x28]
  405b3d:	lods   eax,DWORD PTR ds:[esi]
  405b3e:	mov    al,ds:0x1f19c084
  405b43:	das    
  405b44:	cmp    al,0x69
  405b46:	sub    DWORD PTR [eax],ecx
  405b48:	or     ch,BYTE PTR [ecx+0x2e0e30e2]
  405b4e:	pop    ss
  405b4f:	push   cs
  405b50:	push   ss
  405b51:	aam    0x2c
  405b53:	push   ebp
  405b54:	jnp    0x405b92
  405b56:	jbe    0x405b45
  405b58:	daa    
  405b59:	xor    edx,DWORD PTR [edx+0x13]
  405b5c:	mov    BYTE PTR [ebp+0x244ffdb8],bh
  405b62:	pop    edx
  405b63:	daa    
  405b64:	inc    esp
  405b65:	out    dx,al
  405b66:	ss pop ds
  405b68:	mov    bl,0x9
  405b6a:	jg     0x405be1
  405b6c:	bound  ecx,QWORD PTR [edx]
  405b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b6f:	pusha  
  405b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b71:	jb     0x405b6b
  405b73:	jne    0x405b5b
  405b75:	inc    ebp
  405b76:	out    dx,eax
  405b77:	int3   
  405b78:	pop    ebp
  405b79:	and    DWORD PTR [edi-0x76],ebx
  405b7c:	aam    0xa2
  405b7e:	cmp    al,0x1
  405b80:	imul   esi,DWORD PTR [edi-0x4],0xffffff96
  405b84:	cmp    ebp,DWORD PTR [esi+0x1633aaec]
  405b8a:	icebp  
  405b8b:	addr16 inc ebp
  405b8d:	sar    DWORD PTR [eax+0x5a],1
  405b90:	das    
  405b91:	adc    DWORD PTR [ecx-0x572791f6],edi
  405b97:	scas   al,BYTE PTR es:[edi]
  405b98:	fptan  
  405b9a:	loop   0x405b26
  405b9c:	and    cl,BYTE PTR [edx]
  405b9e:	push   es
  405b9f:	push   ecx
  405ba0:	inc    eax
  405ba1:	cmc    
  405ba2:	push   esi
  405ba3:	adc    eax,0xdb12cf8e
  405ba8:	rcl    BYTE PTR [ebx],1
  405baa:	out    dx,eax
  405bab:	mov    ds:0xd31a3dde,al
  405bb0:	and    cl,BYTE PTR [ebp-0x12]
  405bb3:	jmp    0x405b7f
  405bb5:	xlat   BYTE PTR ds:[ebx]
  405bb6:	aas    
  405bb7:	sub    al,0xd4
  405bb9:	div    DWORD PTR [ecx-0x12]
  405bbc:	ret    
  405bbd:	fcmove st,st(0)
  405bbf:	inc    esp
  405bc0:	sub    eax,0x9bbefa79
  405bc5:	outs   dx,DWORD PTR ds:[esi]
  405bc6:	mov    WORD PTR ds:0x9d627f51,?
  405bcc:	in     al,dx
  405bcd:	adc    eax,0xda296d6c
  405bd2:	add    BYTE PTR [ebp-0x6b102d58],bh
  405bd8:	xchg   esi,eax
  405bd9:	xor    edx,esi
  405bdb:	xlat   BYTE PTR ds:[ebx]
  405bdc:	pop    eax
  405bdd:	out    dx,al
  405bde:	jp     0x405c13
  405be0:	sbb    dh,BYTE PTR gs:[ecx-0x10]
  405be4:	cmp    al,0xb9
  405be6:	aam    0xb3
  405be8:	lock cli 
  405bea:	jg     0x405c0a
  405bec:	ds ins DWORD PTR es:[edi],dx
  405bee:	mov    al,ds:0xa79faf4c
  405bf3:	(bad)  
  405bf4:	pushf  
  405bf5:	unpckhps xmm2,XMMWORD PTR [ebx]
  405bf8:	fdivr  DWORD PTR [esi+0x59295712]
  405bfe:	mov    bl,0xaf
  405c00:	and    DWORD PTR [edi-0x4d],0x8558bba
  405c07:	and    DWORD PTR ds:0x4245c6,0x0
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4245c6
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4245c6,edi
  405c25:	cmp    DWORD PTR ds:0x4245c6,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4245c6,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x412358,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	push   es
  405c69:	mov    edi,ecx
  405c6b:	test   BYTE PTR [ebx+0x8],cl
  405c6e:	jle    0x405cee
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405c6e
  405c75:	dec    esp
  405c76:	fsub   DWORD PTR [ecx]
  405c78:	jle    0x405c73
  405c7a:	cmp    DWORD PTR [eax],0x25
  405c7d:	mov    esi,0x94952043
  405c82:	jle    0x405c67
  405c84:	enter  0xdb98,0x6c
  405c88:	push   esi
  405c89:	shr    ecx,1
  405c8b:	mov    cs,WORD PTR [edx]
  405c8d:	pop    ss
  405c8e:	retf   
  405c8f:	jle    0x405ce6
  405c91:	or     eax,0x79244487
  405c96:	and    BYTE PTR [edi+ecx*8-0x2e41362],0xdf
  405c9e:	int3   
  405c9f:	test   dl,dl
  405ca1:	dec    ebx
  405ca2:	sahf   
  405ca3:	add    DWORD PTR [edx-0x1e],edi
  405ca6:	int3   
  405ca7:	pop    ss
  405ca8:	adc    BYTE PTR ds:0xf1af10dc,ch
  405cae:	jge    0x405c96
  405cb0:	pop    eax
  405cb1:	int    0x4f
  405cb3:	xchg   ebx,eax
  405cb4:	cdq    
  405cb5:	test   BYTE PTR ds:[esi-0x748f6ab2],0x3a
  405cbd:	or     al,0x2f
  405cbf:	aaa    
  405cc0:	stc    
  405cc1:	mov    ds:0xf8c3f959,eax
  405cc6:	inc    esi
  405cc7:	fwait
  405cc8:	test   DWORD PTR [eax+edi*4+0x5d6f3d31],0xb77c5564
  405cd3:	dec    ecx
  405cd4:	iret   
  405cd5:	fst    st(1)
  405cd7:	dec    ebx
  405cd8:	sahf   
  405cd9:	jne    0x405cde
  405cdb:	dec    ebp
  405cdc:	cld    
  405cdd:	lds    ebx,FWORD PTR [edx+0x66b82dc3]
  405ce3:	cs cli 
  405ce5:	mov    DWORD PTR [ebx+0x35],edi
  405ce8:	lods   al,BYTE PTR ds:[esi]
  405ce9:	xor    DWORD PTR [ebp-0x65],ebp
  405cec:	mov    dh,0x25
  405cee:	pop    ss
  405cef:	test   dl,ch
  405cf1:	addr16 push edi
  405cf3:	cmp    dl,bl
  405cf5:	fs pop es
  405cf7:	pop    ebx
  405cf8:	inc    edx
  405cf9:	jns    0x405cea
  405cfb:	into   
  405cfc:	xchg   ecx,eax
  405cfd:	jmp    0x4afdc0d0
  405d02:	stc    
  405d03:	jmp    0xaf01:0xc9a300ef
  405d0a:	push   esp
  405d0b:	lods   al,BYTE PTR ds:[esi]
  405d0c:	pusha  
  405d0d:	adc    esp,esp
  405d0f:	inc    ecx
  405d10:	out    dx,eax
  405d11:	cld    
  405d12:	jne    0x405d5c
  405d14:	jbe    0x405cc4
  405d16:	dec    ebx
  405d17:	sbb    bl,BYTE PTR [ebx+0x16da0f68]
  405d1d:	loop   0x405d3f
  405d1f:	mov    ah,0x15
  405d21:	(bad)  
  405d22:	mov    ebp,0x5fa58f00
  405d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d28:	aam    0x5d
  405d2a:	xchg   bh,dh
  405d2c:	retf   0x78cf
  405d2f:	jmp    0xa9611cb5
  405d34:	cdq    
  405d35:	scas   eax,DWORD PTR es:[edi]
  405d36:	add    edx,DWORD PTR [eax+0x25]
  405d39:	xchg   cx,ax
  405d3b:	fnstsw WORD PTR [esi+0x3d]
  405d3e:	sub    BYTE PTR [eax-0x6a],0xfa
  405d42:	clc    
  405d43:	nop
  405d44:	test   ch,0x9f
  405d47:	outs   dx,BYTE PTR ds:[esi]
  405d48:	xor    eax,0xf486010b
  405d4d:	aam    0xdc
  405d4f:	sbb    ebx,ecx
  405d51:	into   
  405d52:	iret   
  405d53:	in     eax,dx
  405d54:	iret   
  405d55:	xchg   ebp,eax
  405d56:	fldl2t 
  405d58:	call   0xeaf71815
  405d5d:	shl    BYTE PTR [eax+0x1],cl
  405d60:	jl     0x405cef
  405d62:	pop    ds
  405d63:	inc    ebx
  405d64:	dec    esp
  405d65:	push   edi
  405d66:	xor    BYTE PTR [esi+0x4086344],bh
  405d6c:	out    dx,eax
  405d6d:	lds    edx,FWORD PTR [esi]
  405d6f:	mov    edi,0x89e9036e
  405d74:	mov    al,ds:0x9a463730
  405d79:	(bad)  
  405d7b:	call   0x1fc1e7d1
  405d80:	and    BYTE PTR [eax],bh
  405d82:	loopne 0x405dc2
  405d84:	loop   0x405df5
  405d86:	sahf   
  405d87:	pusha  
  405d88:	dec    edi
  405d89:	retf   0x19e6
  405d8c:	dec    eax
  405d8d:	mov    cs,WORD PTR [edx+0x1b859649]
  405d93:	scas   al,BYTE PTR es:[edi]
  405d94:	pusha  
  405d95:	dec    edx
  405d96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d97:	mov    dh,0x4
  405d99:	dec    ebx
  405d9a:	call   0x2a9b:0xd0753a56
  405da1:	add    BYTE PTR [ebp-0x458afebe],cl
  405da7:	xchg   ebx,eax
  405da8:	jecxz  0x405d33
  405daa:	push   ebp
  405dab:	or     al,0x47
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	inc    ebx
  405dbf:	mov    edi,0xe7c1809
  405dc4:	jle    0x405e44
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405de3
  405dcb:	mov    bl,0x5e
  405dcd:	arpl   WORD PTR [edx-0x75022d94],bp
  405dd3:	cmp    DWORD PTR [ebx-0x67],esi
  405dd6:	pusha  
  405dd7:	or     eax,0x2ba1469d
  405ddc:	mov    cl,0x4d
  405dde:	fcmovb st,st(0)
  405de0:	cmp    bh,dl
  405de2:	outs   dx,BYTE PTR ds:[esi]
  405de3:	nop
  405de4:	mul    BYTE PTR [edx+edi*4-0x4e]
  405de8:	mov    ah,0xf7
  405dea:	sbb    eax,0x5d186adf
  405def:	mov    al,0xa1
  405df1:	scas   eax,DWORD PTR es:[edi]
  405df2:	inc    esi
  405df3:	mov    eax,ds:0xb004b489
  405df8:	shl    edx,0x8b
  405dfb:	mov    ebx,0x800d79d8
  405e00:	das    
  405e01:	imul   eax,DWORD PTR [ebx+0x3c],0xdc66381
  405e08:	push   ebp
  405e09:	aaa    
  405e0a:	dec    ecx
  405e0b:	test   DWORD PTR [edi-0x2a4298c4],edx
  405e11:	add    BYTE PTR [edx-0xb37b887],ch
  405e17:	or     eax,DWORD PTR [esi]
  405e19:	and    DWORD PTR [edi],ebx
  405e1b:	fwait
  405e1c:	popa   
  405e1d:	outs   dx,DWORD PTR ds:[esi]
  405e1e:	ja     0x405e23
  405e20:	sbb    dh,BYTE PTR ds:0x38e96dae
  405e26:	mov    dl,0x94
  405e28:	nop
  405e29:	fsubp  st(6),st
  405e2b:	or     cl,0xc4
  405e2e:	jo     0x405e71
  405e30:	sub    BYTE PTR [ebx-0x6a],ah
  405e33:	inc    edx
  405e34:	out    0x91,eax
  405e36:	in     eax,0xb5
  405e38:	ja     0x405dc9
  405e3a:	rol    BYTE PTR [ebp+0x65],cl
  405e3d:	add    WORD PTR [ecx],0x297a
  405e42:	fcmovbe st,st(1)
  405e44:	mov    ebx,0x7408706b
  405e49:	nop
  405e4a:	or     edx,DWORD PTR [ebx+0x2eae2f38]
  405e50:	test   BYTE PTR [eax+0x1c6c95af],dh
  405e56:	aas    
  405e57:	mov    esp,0xd2e1e48e
  405e5c:	stos   DWORD PTR es:[edi],eax
  405e5d:	cmp    eax,0x89282504
  405e62:	rcl    BYTE PTR [ebp+0x2723c91f],cl
  405e68:	xchg   esi,eax
  405e69:	neg    dh
  405e6b:	jl     0x405e34
  405e6d:	cmp    DWORD PTR [ecx-0x3753f010],ebp
  405e73:	ficom  WORD PTR [eax]
  405e75:	inc    esi
  405e76:	mov    WORD PTR [ecx],cs
  405e78:	or     esi,ebx
  405e7a:	jecxz  0x405e68
  405e7c:	ret    
  405e7d:	pop    eax
  405e7e:	bound  ecx,QWORD PTR [eax+0x3cb29456]
  405e84:	cld    
  405e85:	pushf  
  405e86:	mov    al,ds:0xb9048161
  405e8b:	and    BYTE PTR [eax-0x52],0xfc
  405e8f:	hlt    
  405e90:	mov    BYTE PTR [esi],dh
  405e92:	jmp    0xaca05998
  405e97:	(bad)  
  405e98:	cmp    eax,0x7f295636
  405e9d:	push   ds
  405e9e:	sbb    ch,dl
  405ea0:	(bad)  
  405ea1:	dec    esp
  405ea2:	mov    eax,ds:0x3cf4f6f5
  405ea7:	mov    ebx,0x1433f492
  405eac:	adc    al,0x31
  405eae:	push   edi
  405eaf:	dec    eax
  405eb0:	and    DWORD PTR [ecx],edx
  405eb2:	inc    esp
  405eb3:	popf   
  405eb4:	lds    eax,FWORD PTR ds:0x489e81e8
  405eba:	xchg   edx,eax
  405ebb:	mov    ds,WORD PTR [eax+0x4a590778]
  405ec1:	mov    bl,0xec
  405ec3:	sar    bl,1
  405ec5:	mov    al,ds:0xdaaf83b7
  405eca:	xor    al,0x69
  405ecc:	adc    DWORD PTR [eax],ebx
  405ece:	cli    
  405ecf:	mov    ebx,0x50a95bb4
  405ed4:	push   0xffffff90
  405ed6:	imul   ebx,DWORD PTR [edx+ebp*4-0xc],0x5
  405edb:	adc    bh,BYTE PTR [ebx]
  405edd:	lods   al,BYTE PTR ds:[esi]
  405ede:	mov    ds:0x95c11d,al
  405ee3:	mov    ch,0x95
  405ee5:	aam    0x1d
  405ee7:	mov    DWORD PTR [eax+0x3e],ebp
  405eea:	fcom   DWORD PTR [edi+0x7c]
  405eed:	jle    0x405f14
  405eef:	jns    0x405f3f
  405ef1:	sar    BYTE PTR [esi-0x7a],cl
  405ef4:	bound  ebp,QWORD PTR [edi+0x768d6757]
  405efa:	repz push edx
  405efc:	pop    ebp
  405efd:	hlt    
  405efe:	enter  0x45c7,0xfc
  405f02:	fadd   DWORD PTR [ebp-0xcc0764]
  405f08:	xor    edi,DWORD PTR ds:0x415109
  405f0e:	adc    edi,DWORD PTR ds:0x4245ae
  405f14:	mov    DWORD PTR ds:0x415109,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4245be,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417e41,0x15
  405f48:	cmp    DWORD PTR ds:0x417e41,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417e41,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41ac41
  405f6c:	push   0x41ac72
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417e41,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417e41
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417e41,edi
  405f96:	mov    edi,DWORD PTR ds:0x417e41
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417e41,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417e4d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x412364,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417e49,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417e55,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417e55
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417e55,edi
  405fef:	cmp    DWORD PTR ds:0x417e55,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417e55,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412378
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x412368,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415109,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0x75db13c5
  406054:	je     0x405fd8
  406056:	jp     0x406079
  406058:	movd   DWORD PTR [esi+0x23],mm7
  40605c:	jg     0x4060dc
  40605e:	jle    0x406048
  406060:	xchg   BYTE PTR [ecx],bl
  406062:	or     BYTE PTR [ecx-0x2ac7fc2a],0x76
  406069:	ret    0x4522
  40606c:	shr    BYTE PTR [edx+0x3a37770b],0x5d
  406073:	adc    eax,0x12a203a9
  406078:	and    edx,DWORD PTR [esi]
  40607a:	mov    WORD PTR [edx],ss
  40607c:	or     BYTE PTR [esp+ecx*2],0x92
  406080:	cmp    al,0x61
  406082:	sub    ch,BYTE PTR ds:0x6b0a6008
  406088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406089:	mov    ah,0x89
  40608b:	jo     0x406050
  40608d:	scas   al,BYTE PTR es:[edi]
  40608e:	enter  0xe4b8,0x82
  406092:	stos   BYTE PTR es:[edi],al
  406093:	int    0x2
  406095:	pop    edi
  406096:	sbb    DWORD PTR [ebp+0x6fa71475],edi
  40609c:	cld    
  40609d:	std    
  40609e:	jne    0x40602d
  4060a0:	sbb    eax,DWORD PTR [esi]
  4060a2:	inc    ebx
  4060a3:	in     eax,0x73
  4060a5:	jb     0x4060f1
  4060a7:	push   edi
  4060a8:	add    ebp,edi
  4060aa:	or     DWORD PTR [ebp+0x20],0x3a2af26d
  4060b1:	push   cs
  4060b2:	xor    BYTE PTR [eax+0x5b69afb9],ah
  4060b8:	mov    bh,0x8d
  4060ba:	nop
  4060bb:	stos   BYTE PTR es:[edi],al
  4060bc:	add    BYTE PTR ds:0xbe17c21c,bh
  4060c2:	push   ebx
  4060c3:	sub    al,0xe2
  4060c5:	call   0x838fbe9c
  4060ca:	lea    esp,[esi+0x6]
  4060cd:	add    dh,BYTE PTR [edi]
  4060cf:	in     eax,0xf7
  4060d1:	(bad)  
  4060d2:	adc    ebx,DWORD PTR [ecx]
  4060d4:	cmp    eax,DWORD PTR [edx+ecx*2+0x9]
  4060d8:	nop
  4060d9:	js     0x4060ad
  4060db:	out    dx,al
  4060dc:	xor    esi,eax
  4060de:	int3   
  4060df:	in     al,0x32
  4060e1:	mov    edi,0x768bdad1
  4060e6:	lahf   
  4060e7:	xor    al,0x9e
  4060e9:	mov    ch,0x56
  4060eb:	lods   eax,DWORD PTR ds:[esi]
  4060ec:	inc    edi
  4060ed:	xor    eax,0xa0d94626
  4060f2:	mul    BYTE PTR [edx-0x723141d0]
  4060f8:	mov    WORD PTR [esi],ds
  4060fa:	or     al,0x60
  4060fc:	sub    al,0x9c
  4060fe:	mov    dl,0x4c
  406100:	lahf   
  406101:	sar    ebx,0x68
  406104:	cmp    eax,0x2ace2a92
  406109:	adc    al,0x3a
  40610b:	test   DWORD PTR [eax-0x5e6a71a7],esi
  406111:	pop    ds
  406112:	push   0x72
  406114:	pop    ss
  406115:	and    esp,DWORD PTR [eax-0xa41f0be]
  40611b:	pusha  
  40611c:	or     DWORD PTR [edi+0x1d],eax
  40611f:	out    dx,eax
  406120:	dec    ebx
  406121:	into   
  406122:	(bad)  
  406123:	repz push esi
  406125:	cmp    eax,0x6ea85488
  40612a:	push   ecx
  40612b:	out    dx,al
  40612c:	mov    dh,0xef
  40612e:	mov    eax,0x7b6df1ed
  406133:	int    0xec
  406135:	inc    esp
  406136:	mov    ch,0x2f
  406138:	mov    eax,eax
  40613a:	mov    ds:0x6f974f79,al
  40613f:	push   ds
  406140:	mov    ?,WORD PTR [eax-0xf696c09]
  406146:	xchg   edi,eax
  406147:	and    ebp,DWORD PTR [ebx-0x72]
  40614a:	inc    edi
  40614b:	scas   al,BYTE PTR es:[edi]
  40614c:	jnp    0x40613a
  40614e:	add    bh,dl
  406150:	loopne 0x4060ec
  406152:	and    eax,DWORD PTR [eax]
  406154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406155:	push   ecx
  406156:	std    
  406157:	xchg   ebp,eax
  406158:	add    ebx,ebp
  40615a:	(bad)  
  40615b:	xorps  xmm0,XMMWORD PTR [eax]
  40615e:	imul   ecx,DWORD PTR [ebx+0x7ef3e00a],0xd984e9ec
  406168:	lods   eax,DWORD PTR ds:[esi]
  406169:	dec    eax
  40616a:	mov    dl,0x3a
  40616c:	cmp    BYTE PTR [edi+0x6df103ce],0x93
  406173:	hlt    
  406174:	rol    DWORD PTR [esi],0xa
  406177:	push   ecx
  406178:	dec    edx
  406179:	ins    BYTE PTR es:[edi],dx
  40617a:	mov    esp,0x34d18019
  40617f:	jmp    0x4061db
  406181:	cld    
  406182:	xchg   DWORD PTR [edx-0x22],esi
  406185:	rcl    BYTE PTR [esi+0x30],1
  406188:	xchg   ecx,eax
  406189:	scas   al,BYTE PTR es:[edi]
  40618a:	icebp  
  40618b:	add    DWORD PTR [eax],ebp
  40618d:	dec    esi
  40618f:	cwde   
  406190:	arpl   WORD PTR [ecx-0x16ac0932],bp
  406196:	lds    ecx,FWORD PTR [edi]
  406198:	add    BYTE PTR [eax],al
  40619a:	and    DWORD PTR ds:0x412370,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412370
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412370,edx
  4061b6:	cmp    DWORD PTR ds:0x412370,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412370,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41acf1
  4061d8:	push   0x41ac28
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x412364,0x11
  4061f7:	cmp    DWORD PTR ds:0x412364,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x412364,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x412364
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x412364,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x41235c,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4245b2,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41abca,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4245c2,0x415105
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41abda,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x4150fd,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417e45
  406297:	or     DWORD PTR ds:0x417e3d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417e55,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41abe2,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41abd2,0x13
  4062cb:	cmp    DWORD PTR ds:0x41abd2,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41abd2,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41abd2
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41abd2,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41abce
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4245c6,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41abd2,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x412368,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415109,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417e59,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412370,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415111,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415111
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415111,ebx
  40638e:	cmp    DWORD PTR ds:0x415111,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415111,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx-0x11a95fe8],0xffffffaa
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x4063f4
  4063d4:	sbb    BYTE PTR [edi],al
  4063d6:	pop    eax
  4063d7:	imul   edi,ecx,0xffffffa0
  4063da:	in     eax,0x95
  4063dc:	and    eax,0x6952eb36
  4063e1:	xchg   ebp,ebp
  4063e3:	cwde   
  4063e4:	mov    esp,esi
  4063e6:	xor    esp,DWORD PTR [ecx]
  4063e8:	pop    ds
  4063e9:	ss icebp 
  4063eb:	jne    0x40639a
  4063ed:	pop    edx
  4063ee:	outs   dx,DWORD PTR ds:[esi]
  4063ef:	pop    edx
  4063f0:	sbb    DWORD PTR [esi-0x32],ebp
  4063f3:	dec    ebp
  4063f4:	or     edi,DWORD PTR [edx]
  4063f6:	jmp    0xdf7:0x3fcc1c29
  4063fd:	inc    esi
  4063fe:	add    al,0xe2
  406400:	and    DWORD PTR ds:0xa2e391ed,esi
  406406:	add    eax,0x21fb27e7
  40640b:	mov    BYTE PTR [edx],ah
  40640d:	push   0x378aaf4f
  406412:	lahf   
  406413:	(bad)  
  406414:	out    dx,eax
  406415:	push   eax
  406416:	scas   eax,DWORD PTR es:[edi]
  406417:	mov    sp,0x84f1
  40641b:	es retf 0xbc30
  40641f:	mov    BYTE PTR [ecx],ah
  406421:	(bad)  
  406422:	stc    
  406423:	push   ecx
  406424:	fs xchg ebp,eax
  406426:	les    ecx,FWORD PTR [eax]
  406428:	xchg   ecx,eax
  406429:	adc    eax,0x60b3a80b
  40642e:	dec    esi
  40642f:	mov    WORD PTR [eax],?
  406431:	adc    BYTE PTR [esi-0x76e10998],dl
  406437:	test   eax,0xf1bb8a01
  40643c:	fnstenv [edi]
  40643e:	adc    al,0x2f
  406440:	and    al,0x6a
  406442:	mov    esp,0xc1d6f066
  406447:	daa    
  406448:	arpl   WORD PTR [esp+edx*4+0x4003566a],si
  40644f:	xchg   ebx,eax
  406450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406451:	cs sar ebx,cl
  406454:	lahf   
  406455:	cmp    al,bl
  406457:	sbb    al,0x18
  406459:	xor    DWORD PTR [edi+0x47],eax
  40645c:	fucom  st(0)
  40645e:	and    al,0x8d
  406460:	cwde   
  406461:	pushf  
  406462:	fs (bad) 
  406464:	pop    eax
  406465:	xchg   edi,eax
  406466:	retf   0x2fa5
  406469:	sub    bh,ch
  40646b:	mov    ds:0x4513ae5f,al
  406470:	push   es
  406471:	jl     0x4064bb
  406473:	cmc    
  406474:	emms   
  406476:	pushf  
  406477:	or     BYTE PTR [eax-0x9],ah
  40647a:	fwait
  40647b:	test   BYTE PTR [esi],dh
  40647d:	test   al,0x39
  40647f:	mov    eax,0xcd4096ba
  406484:	mov    ebx,0xc15ae3f2
  406489:	sbb    dl,BYTE PTR [esi-0x7673112d]
  40648f:	pusha  
  406490:	dec    ecx
  406491:	xchg   edi,eax
  406492:	and    BYTE PTR [eax+0x6a1732fe],ch
  406498:	call   FWORD PTR [esi-0x49cebc79]
  40649e:	sub    bl,BYTE PTR [edi]
  4064a0:	aas    
  4064a1:	dec    ebp
  4064a2:	or     BYTE PTR [edi+0x11e1ae4e],0x33
  4064a9:	lds    esp,FWORD PTR [edx]
  4064ab:	mov    eax,ds:0x85fb1d63
  4064b0:	loop   0x406509
  4064b2:	retf   0x9640
  4064b5:	test   ch,dh
  4064b7:	call   0xb7d6cd22
  4064bc:	sub    DWORD PTR [edi+0x28],ecx
  4064bf:	aas    
  4064c0:	sub    al,0x77
  4064c2:	cld    
  4064c3:	pop    es
  4064c4:	and    al,0xe5
  4064c6:	int    0x94
  4064c8:	inc    ebx
  4064c9:	adc    eax,0x44a09d50
  4064ce:	xchg   esi,eax
  4064cf:	test   BYTE PTR [eax+eax*1+0x1],0x88
  4064d4:	fyl2x  
  4064d6:	sub    BYTE PTR [ecx-0x22692845],dh
  4064dc:	cmp    eax,0x9197a87f
  4064e1:	in     al,0x18
  4064e3:	dec    ebx
  4064e4:	popf   
  4064e5:	or     eax,0x291a72d5
  4064ea:	(bad)  
  4064eb:	cli    
  4064ec:	cdq    
  4064ed:	mov    ah,0xa
  4064ef:	jecxz  0x406511
  4064f1:	lods   al,BYTE PTR ds:[esi]
  4064f2:	mov    eax,0xf4ccc5b6
  4064f7:	out    0xf0,al
  4064f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064fa:	cmp    eax,0xbff06c4b
  4064ff:	and    esi,DWORD PTR [edx-0x75529bed]
  406505:	hlt    
  406506:	daa    
  406507:	jns    0x40653c
  406509:	clc    
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0xf8994057,edi
  406527:	test   BYTE PTR [edi+ebx*4+0xd],0x7e
  40652c:	jle    0x406551
  40652e:	jg     0x4065ae
  406530:	jle    0x40651d
  406532:	es (bad) 
  406534:	popa   
  406535:	sub    bh,BYTE PTR [eax-0x40c5574f]
  40653b:	jmp    0x4064c6
  40653d:	and    BYTE PTR [eax+eiz*4+0x2b],ch
  406541:	leave  
  406542:	xchg   esi,eax
  406543:	popf   
  406544:	adc    DWORD PTR [esi],esp
  406546:	mov    bl,BYTE PTR [esi+0x27]
  406549:	or     ch,bh
  40654b:	mov    edx,0xf88f3942
  406550:	xchg   DWORD PTR [ecx-0x15330547],ebp
  406556:	aam    0x8
  406558:	fwait
  406559:	test   BYTE PTR [ebx+eiz*8-0x7ec1d2c1],bh
  406560:	sahf   
  406561:	mov    esp,0x40fa9568
  406566:	ret    
  406567:	add    al,0xb8
  406569:	pop    ss
  40656a:	push   ebp
  40656b:	fnstcw WORD PTR [edi+0x32d10e75]
  406571:	jmp    0x4065cb
  406573:	sbb    DWORD PTR [edx],esp
  406575:	jecxz  0x406581
  406577:	jne    0x4065ea
  406579:	dec    ecx
  40657a:	and    BYTE PTR [esi],bl
  40657c:	ins    DWORD PTR es:[edi],dx
  40657d:	jo     0x40655f
  40657f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406580:	hlt    
  406581:	aaa    
  406582:	and    DWORD PTR [ebp-0x48],ebx
  406585:	mov    edx,0x9f7ec048
  40658a:	fisttp DWORD PTR [ebp-0x61d77f16]
  406590:	test   DWORD PTR [edi+0x17539421],edx
  406596:	jae    0x406613
  406598:	adc    DWORD PTR [edi+ebx*4],ebp
  40659b:	sbb    dl,dh
  40659d:	add    ebp,ecx
  40659f:	in     al,dx
  4065a0:	stos   BYTE PTR es:[edi],al
  4065a1:	jmp    0x4065ab
  4065a3:	xor    ch,BYTE PTR ss:[edx+0x4ccfddd6]
  4065aa:	lock sub eax,0xa6312567
  4065b0:	stos   BYTE PTR es:[edi],al
  4065b1:	not    DWORD PTR [ebx+0x5672695b]
  4065b7:	shl    ebx,1
  4065b9:	shr    BYTE PTR [edx],cl
  4065bb:	and    DWORD PTR [esi-0x1b0d2eb4],edx
  4065c1:	mov    bh,0xa2
  4065c3:	dec    esp
  4065c4:	arpl   WORD PTR [edx],bp
  4065c6:	mov    eax,ds:0xad17b05f
  4065cb:	inc    edi
  4065cc:	sbb    ecx,DWORD PTR [eax]
  4065ce:	(bad)  
  4065cf:	jecxz  0x4065e2
  4065d1:	fimul  WORD PTR [esi+0x33]
  4065d4:	xchg   DWORD PTR ds:0xac0a4bb0,eax
  4065da:	ja     0x406630
  4065dc:	inc    esp
  4065dd:	fwait
  4065de:	inc    ecx
  4065df:	mov    ds:0xf9e16d4c,eax
  4065e4:	jae    0x4065c0
  4065e6:	shl    eax,cl
  4065e8:	jp     0x40661a
  4065ea:	push   esp
  4065eb:	inc    eax
  4065ed:	ss inc eax
  4065ef:	or     DWORD PTR [esi+0x7a72e0db],0x2b
  4065f6:	xchg   DWORD PTR [ebp-0xc2bcc2a],edx
  4065fc:	sbb    BYTE PTR [eax-0x7e],bh
  4065ff:	cld    
  406600:	ret    0x2663
  406603:	inc    esi
  406604:	inc    esp
  406605:	jg     0x40659b
  406607:	jno    0x406679
  406609:	inc    ebp
  40660a:	(bad)  
  40660b:	in     eax,0x54
  40660d:	pop    esp
  40660e:	loope  0x4065b4
  406610:	adc    edi,DWORD PTR [edi+0x509fcc91]
  406616:	sub    eax,0xe16f3149
  40661b:	shl    ebp,1
  40661d:	ja     0x406608
  40661f:	push   ds
  406620:	stc    
  406621:	leave  
  406622:	ror    DWORD PTR ds:0xf20aa63d,cl
  406628:	or     ecx,esp
  40662a:	push   cs
  40662b:	lds    ebx,FWORD PTR [edx]
  40662d:	daa    
  40662e:	cmp    BYTE PTR [ecx+0x12b93ec8],al
  406634:	test   BYTE PTR [esi-0x75],bh
  406637:	cmp    BYTE PTR [eax+0x6a],bl
  40663a:	outs   dx,DWORD PTR ds:[esi]
  40663b:	repz jb 0x40664c
  40663e:	jns    0x406673
  406640:	je     0x4066ab
  406642:	nop
  406643:	and    DWORD PTR [ecx-0x60],edx
  406646:	out    dx,al
  406647:	xor    al,0xb1
  406649:	push   esp
  40664a:	lods   al,BYTE PTR ds:[esi]
  40664b:	inc    esi
  40664c:	in     al,0xca
  40664e:	inc    esp
  40664f:	push   0x51
  406651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406652:	out    0x57,eax
  406654:	lock retf 0xac46
  406658:	sbb    eax,0x70f37d0e
  40665d:	cmp    bl,BYTE PTR [ecx]
  40665f:	lea    ebx,[eax+ebp*2]
  406662:	mov    esi,es
  406664:	adc    BYTE PTR ds:0x2bf05d8b,ch
  40666a:	fistp  QWORD PTR [ebx]
  40666c:	fimul  DWORD PTR [edi]
  40666e:	xchg   DWORD PTR [eax],ecx
  406670:	add    BYTE PTR [eax],al
  406672:	add    BYTE PTR [ebx-0x5d1627ab],cl
  406678:	add    BYTE PTR [eax],al
  40667a:	add    BYTE PTR [ebx+0x7d8bd055],cl
  406680:	cld    
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	hlt    
  406749:	repz xchg ecx,eax
  40674b:	outs   dx,DWORD PTR ds:[esi]
  40674c:	inc    eax
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x406772
  406755:	data16 test al,0xe9
  406758:	xchg   BYTE PTR [eax-0x2e],cl
  40675b:	adc    ebp,0xffffffcc
  40675e:	xchg   ecx,eax
  40675f:	jl     0x4067d4
  406761:	jo     0x4067ac
  406763:	adc    cl,BYTE PTR [edi+0x267639fc]
  406769:	add    eax,0x3314fb6f
  40676e:	mov    esi,0x51a4a492
  406773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406774:	and    eax,0x62c682ae
  406779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40677a:	jge    0x40671a
  40677c:	imul   edi,DWORD PTR [edi+ebp*4+0x2e],0xcc94e09f
  406784:	rcl    bl,1
  406786:	aad    0x10
  406788:	or     eax,0x440157b
  40678d:	sbb    dl,BYTE PTR [esi-0x6ed8e3ea]
  406793:	pop    eax
  406794:	and    ah,dh
  406796:	mov    dh,0xfd
  406798:	cmp    eax,0xed94547c
  40679d:	and    BYTE PTR [edx],bh
  40679f:	pop    ecx
  4067a0:	and    DWORD PTR [edi],ebp
  4067a2:	or     al,ch
  4067a4:	retf   
  4067a5:	adc    BYTE PTR [eax+0x1a44519e],ah
  4067ab:	(bad)  
  4067ac:	in     eax,0x85
  4067ae:	pop    edi
  4067af:	jecxz  0x4067ff
  4067b1:	ret    
  4067b2:	ss or  al,0x84
  4067b5:	dec    ebp
  4067b6:	add    al,0xa
  4067b8:	xchg   ecx,eax
  4067b9:	push   ebx
  4067ba:	popa   
  4067bb:	ins    BYTE PTR es:[edi],dx
  4067bc:	xor    eax,0x21cc2113
  4067c1:	bound  esi,QWORD PTR [ebx-0x74]
  4067c4:	xor    dh,BYTE PTR [eax-0x35]
  4067c7:	hlt    
  4067c8:	push   esi
  4067c9:	push   ebx
  4067ca:	fiadd  WORD PTR [ebx]
  4067cc:	out    0x3a,al
  4067ce:	arpl   WORD PTR [ecx],cx
  4067d0:	push   es
  4067d1:	aas    
  4067d2:	adc    eax,0x60e589eb
  4067d7:	sub    al,0xae
  4067d9:	dec    ebx
  4067da:	xchg   edi,eax
  4067db:	xor    BYTE PTR [edx+0x485c954c],dh
  4067e1:	int3   
  4067e2:	jne    0x40680e
  4067e4:	aam    0x24
  4067e6:	pusha  
  4067e7:	mov    ds:0xe14c4aea,eax
  4067ec:	jle    0x406824
  4067ee:	dec    edx
  4067ef:	pop    edi
  4067f0:	in     al,dx
  4067f1:	and    eax,0x34ca26ad
  4067f6:	fucomip st,st(1)
  4067f8:	in     eax,0x2b
  4067fa:	lds    eax,FWORD PTR [esi]
  4067fc:	xor    al,0xdc
  4067fe:	adc    al,0x6
  406800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406801:	inc    edi
  406802:	cmp    BYTE PTR [ecx],ch
  406804:	hlt    
  406805:	pop    ds
  406806:	out    0xe5,eax
  406808:	(bad)  
  406809:	in     eax,0x56
  40680b:	lea    edx,[ebx+0x11]
  40680e:	mov    ch,0x88
  406810:	ror    BYTE PTR [esi-0x3f1c051b],1
  406816:	sar    ch,cl
  406818:	sti    
  406819:	int3   
  40681a:	fdiv   DWORD PTR [edx+0x30]
  40681d:	jbe    0x406880
  40681f:	jne    0x40680c
  406821:	mov    esp,0xea5ad7cc
  406826:	addr16 popa 
  406828:	in     al,0x52
  40682a:	and    edx,edx
  40682c:	push   ecx
  40682d:	aam    0x40
  40682f:	add    ch,0xc0
  406832:	xlat   BYTE PTR ds:[bx]
  406834:	adc    ebp,DWORD PTR [ecx-0x12d150dc]
  40683a:	pop    esi
  40683b:	ror    DWORD PTR [ecx+ebx*2-0x3a],0x40
  406840:	test   eax,0x9c84aa79
  406845:	bound  esp,QWORD PTR [ebx-0x73ae627e]
  40684b:	xchg   ecx,eax
  40684c:	mov    ah,0x52
  40684e:	nop
  40684f:	pop    edi
  406850:	test   eax,0xf87decb0
  406855:	outs   dx,DWORD PTR ds:[esi]
  406856:	xchg   esi,eax
  406857:	xor    eax,0xb7442e6e
  40685c:	in     al,0xcd
  40685e:	cmc    
  40685f:	push   edx
  406860:	push   cs
  406861:	mov    dl,0xa5
  406863:	and    DWORD PTR [esi],eax
  406865:	inc    ebp
  406866:	test   al,0x2c
  406868:	pop    es
  406869:	sar    edi,1
  40686b:	shr    esp,0xd0
  40686e:	cmc    
  40686f:	bnd jnp 0x4068b5
  406872:	sbb    esi,DWORD PTR [eax]
  406874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406875:	xchg   esi,eax
  406876:	push   ss
  406877:	jle    0x406815
  406879:	fisubr DWORD PTR [edx]
  40687b:	adc    DWORD PTR [ecx+0x774b599],edx
  406881:	ror    BYTE PTR [esi],1
  406883:	jp     0x4068c7
  406885:	pop    ebp
  406886:	icebp  
  406887:	stc    
  406888:	jmp    0xc800bd90
  40688d:	inc    ebp
  40688e:	call   0xf8dcedcb
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0x88
  4068b9:	cmp    dh,BYTE PTR [ecx+ebp*2]
  4068bc:	jne    0x4068be
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x40688e
  4068c5:	shr    DWORD PTR [ebx*1+0x24125334],0xd
  4068cd:	xor    esp,ebx
  4068cf:	pusha  
  4068d0:	pop    ebp
  4068d1:	and    BYTE PTR [esi+edi*4],0x43
  4068d5:	jecxz  0x40693e
  4068d7:	add    al,BYTE PTR [ebp-0x5792de13]
  4068dd:	mov    bh,ch
  4068df:	mov    ah,BYTE PTR [ebp-0x27]
  4068e2:	lods   eax,DWORD PTR ds:[esi]
  4068e3:	jecxz  0x40686b
  4068e5:	rcr    BYTE PTR [ebx+0x4df111fc],cl
  4068eb:	jecxz  0x40689e
  4068ed:	jmp    0xa591:0x924503d
  4068f4:	adc    DWORD PTR cs:[esi-0x78],ebp
  4068f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068f9:	fnstsw WORD PTR [edi]
  4068fb:	fistp  DWORD PTR [ecx*1-0x44e31f8]
  406902:	mov    ah,0x53
  406904:	in     al,0x79
  406906:	or     DWORD PTR [ebp*1-0x6c7c674a],esp
  40690d:	jge    0x406917
  40690f:	ss push edx
  406911:	adc    BYTE PTR [edx+0x43cac8ec],cl
  406917:	jno    0x4068d5
  406919:	mov    ecx,0x10e6692
  40691e:	into   
  40691f:	sbb    al,0x41
  406921:	(bad)  
  406923:	call   0x4bf814b2
  406928:	int3   
  406929:	loop   0x406964
  40692b:	add    DWORD PTR [eax+0x37],ecx
  40692e:	jae    0x406905
  406930:	out    dx,al
  406931:	out    0xe4,al
  406933:	ins    BYTE PTR es:[edi],dx
  406934:	and    dh,BYTE PTR [edx]
  406936:	cdq    
  406937:	cmp    BYTE PTR [edi],0x86
  40693a:	test   eax,0x6924b1ef
  40693f:	push   edi
  406940:	cmp    BYTE PTR [eax-0x28],dl
  406943:	cwde   
  406944:	xlat   BYTE PTR ds:[ebx]
  406945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406946:	loope  0x40692c
  406948:	popa   
  406949:	jb     0x4068ee
  40694b:	pushf  
  40694c:	add    eax,0x22fa2593
  406951:	push   es
  406952:	mov    ah,bh
  406954:	sbb    BYTE PTR [ecx],ah
  406956:	into   
  406957:	imul   esp,ebp,0xcda66dc0
  40695d:	or     ebp,DWORD PTR fs:[edx-0x2f6c6fbe]
  406964:	sahf   
  406965:	fimul  WORD PTR [esi+0x551d053c]
  40696b:	adc    al,0x64
  40696d:	xchg   edi,eax
  40696e:	and    DWORD PTR [ebx],esi
  406970:	movzx  edx,bx
  406973:	mov    bl,0x17
  406975:	repnz pusha 
  406977:	mov    DWORD PTR [eax-0x5ec81be6],esp
  40697d:	pushf  
  40697e:	fwait
  40697f:	(bad)  
  406980:	sub    al,0x86
  406982:	data16 jns 0x406992
  406985:	pop    esi
  406986:	adc    eax,0x92c4efa
  40698b:	xchg   DWORD PTR [ecx+0x28bb2c87],esi
  406991:	in     al,dx
  406992:	xor    DWORD PTR [ebp+0x6b11cd9b],0xdcc401f0
  40699c:	aas    
  40699d:	inc    ebp
  40699e:	ret    0x40ce
  4069a1:	jb     0x406a19
  4069a3:	push   es
  4069a4:	fcmovnbe st,st(6)
  4069a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069a7:	(bad)  
  4069a8:	adc    BYTE PTR [edi],bl
  4069aa:	inc    ecx
  4069ab:	xor    dl,BYTE PTR [edi+0x71]
  4069ae:	xchg   ebx,eax
  4069af:	iret   
  4069b0:	push   edx
  4069b1:	mov    ecx,0x99520465
  4069b6:	fld    st(7)
  4069b8:	mov    dl,0x23
  4069ba:	xchg   ebx,eax
  4069bb:	push   edx
  4069bc:	fldcw  WORD PTR [ebx-0x7a4cec06]
  4069c2:	pop    ss
  4069c3:	rol    DWORD PTR [eax],1
  4069c5:	or     al,0x10
  4069c7:	cmp    al,BYTE PTR [ebx-0x12]
  4069ca:	lods   al,BYTE PTR ds:[esi]
  4069cb:	vdpps  ymm2,ymm2,ymm7,0x7e
  4069d1:	push   edx
  4069d2:	xor    eax,0xbac24823
  4069d7:	lds    ebx,FWORD PTR [ebp+0x36fe305]
  4069dd:	sub    BYTE PTR [ebx+0x65],bh
  4069e0:	in     al,dx
  4069e1:	(bad)  
  4069e2:	ins    BYTE PTR es:[edi],dx
  4069e3:	aaa    
  4069e4:	and    al,0x1d
  4069e6:	hlt    
  4069e7:	mov    ebp,0x9c245c0
  4069ec:	pusha  
  4069ed:	outs   dx,DWORD PTR ds:[esi]
  4069ee:	mov    ds:0xd0f5748b,eax
  4069f3:	or     esi,DWORD PTR [edx+edx*4]
  4069f6:	lods   eax,DWORD PTR ds:[esi]
  4069f7:	mov    bh,0x4a
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0x67a93
  406a0e:	in     eax,0x1e
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x406a76
  406a19:	add    al,0x8e
  406a1b:	mov    ebp,0x95d9b7bc
  406a20:	loop   0x406a56
  406a22:	inc    ebx
  406a23:	push   0xbcb93ec1
  406a28:	leave  
  406a29:	sbb    eax,0x6643fe76
  406a2e:	mov    ds:0x5def1f1f,al
  406a33:	jecxz  0x406a77
  406a35:	js     0x406aa8
  406a37:	out    0xc2,eax
  406a39:	adc    BYTE PTR [eax-0x8dc5559],0x85
  406a40:	add    al,0xa5
  406a43:	mov    bl,0xb8
  406a45:	adc    al,al
  406a47:	scas   al,BYTE PTR es:[edi]
  406a48:	ja     0x4069d8
  406a4a:	lods   al,BYTE PTR ds:[esi]
  406a4b:	js     0x4069ea
  406a4d:	sbb    bl,cl
  406a4f:	xor    ebx,edi
  406a51:	xor    eax,ebx
  406a53:	pop    esp
  406a54:	add    al,0x24
  406a56:	test   eax,0xf0408099
  406a5b:	xchg   edx,eax
  406a5c:	push   edx
  406a5d:	sub    ch,0x66
  406a60:	cs ds popa 
  406a63:	mov    al,BYTE PTR [edi+edi*1+0x73]
  406a67:	fdivr  QWORD PTR [ebp-0x30999300]
  406a6d:	mov    es,WORD PTR [eax-0x5ce766bb]
  406a73:	xor    al,0x79
  406a75:	repz rol al,cl
  406a78:	or     eax,0x3eaeefad
  406a7d:	rcl    DWORD PTR [eax+eax*1-0x230cab6a],1
  406a84:	cli    
  406a85:	out    dx,eax
  406a86:	sbb    DWORD PTR [edx-0x565ba69b],esi
  406a8c:	std    
  406a8d:	ficomp DWORD PTR [edi]
  406a8f:	fnstenv [ecx+0x68]
  406a92:	inc    ebx
  406a93:	and    al,BYTE PTR [edi+0x23]
  406a96:	es jns 0x406ae9
  406a99:	push   0xbc7023
  406a9e:	jp     0x406af6
  406aa0:	or     ch,0x66
  406aa3:	pop    eax
  406aa4:	dec    eax
  406aa5:	sahf   
  406aa6:	add    al,0x27
  406aa8:	mov    al,0xe0
  406aaa:	and    ecx,DWORD PTR [edi]
  406aac:	sti    
  406aad:	test   eax,0xcea37743
  406ab2:	jmp    0x9cce:0x8c1ed610
  406ab9:	ja     0x406b38
  406abb:	add    dl,BYTE PTR [edx-0x52]
  406abe:	jecxz  0x406aa1
  406ac0:	sbb    DWORD PTR [ebx-0x5b],ebp
  406ac3:	int    0xad
  406ac5:	into   
  406ac6:	std    
  406ac7:	xchg   esi,eax
  406ac8:	cs dec eax
  406aca:	inc    eax
  406acb:	(bad)  
  406acc:	aas    
  406acd:	sub    ebp,ebx
  406acf:	dec    ebp
  406ad0:	mov    ebp,0x50a7f672
  406ad5:	jns    0x406a75
  406ad7:	jbe    0x406ad8
  406ad9:	loop   0x406ade
  406adb:	jg     0x406a63
  406add:	sbb    eax,0xea017f07
  406ae2:	dec    ebx
  406ae3:	xchg   ebp,eax
  406ae4:	and    eax,0x3e411c9d
  406ae9:	jbe    0x406ac5
  406aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aec:	pop    ecx
  406aed:	aas    
  406aee:	jl     0x406a79
  406af0:	add    al,0x71
  406af2:	xor    ecx,esp
  406af4:	push   0x5
  406af6:	stos   DWORD PTR es:[edi],eax
  406af7:	popf   
  406af8:	dec    edx
  406af9:	int3   
  406afa:	push   es
  406afb:	cld    
  406afc:	add    dl,cl
  406afe:	fs and al,0xc
  406b01:	ins    DWORD PTR es:[edi],dx
  406b02:	ins    DWORD PTR es:[edi],dx
  406b03:	adc    eax,0x48a9396a
  406b08:	pop    es
  406b09:	jae    0x406b88
  406b0b:	mov    al,fs:0xdb541bd8
  406b11:	lahf   
  406b12:	icebp  
  406b13:	mov    ch,0xdd
  406b15:	and    dl,BYTE PTR [ecx]
  406b17:	stos   DWORD PTR es:[edi],eax
  406b18:	fild   WORD PTR [eax-0x3d]
  406b1b:	outs   dx,DWORD PTR ds:[esi]
  406b1c:	pusha  
  406b1d:	adc    BYTE PTR [ebx-0xffa7a99],ah
  406b23:	loopne 0x406b15
  406b25:	xor    bh,al
  406b27:	fild   DWORD PTR [esi-0x47]
  406b2a:	mov    ch,0xc
  406b2c:	call   0x5099b64b
  406b31:	outs   dx,DWORD PTR ds:[esi]
  406b32:	fistp  WORD PTR [edx+0x326d6df8]
  406b38:	js     0x406b6d
  406b3a:	js     0x406b10
  406b3c:	pop    esp
  406b3d:	and    eax,0x367f5a2
  406b42:	jge    0x406b25
  406b44:	pminub mm5,QWORD PTR [ebp+0x2d71a051]
  406b4b:	xor    ecx,DWORD PTR [edi+0x3]
  406b4e:	shr    ecx,1
  406b50:	pop    esi
  406b51:	add    al,0x0
  406b53:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax+0x710352cd],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b3c
  406b8f:	ins    BYTE PTR es:[edi],dx
  406b90:	sub    al,0x9
  406b92:	mov    edi,0x423538c9
  406b97:	push   ebx
  406b98:	leave  
  406b99:	jnp    0x406b47
  406b9b:	or     BYTE PTR [esi-0x2f],dh
  406b9e:	xchg   esi,eax
  406b9f:	xchg   al,bh
  406ba1:	or     BYTE PTR [esi],ah
  406ba3:	add    al,0x61
  406ba5:	jge    0x406b47
  406ba7:	push   ebx
  406ba8:	add    al,0x35
  406baa:	ds loopne 0x406b95
  406bad:	jnp    0x406b76
  406baf:	xor    ebp,DWORD PTR [ebx-0x39]
  406bb2:	in     eax,dx
  406bb3:	xchg   edi,eax
  406bb4:	imul   esi,esp,0xffffff88
  406bb7:	jns    0x406b3b
  406bb9:	pop    edi
  406bba:	or     DWORD PTR ds:0x30aa1647,edx
  406bc0:	inc    eax
  406bc1:	inc    esp
  406bc2:	and    edx,ebp
  406bc4:	icebp  
  406bc5:	dec    eax
  406bc6:	jno    0x406c30
  406bc8:	in     eax,0x74
  406bca:	sbb    esi,DWORD PTR [ebp-0x68]
  406bcd:	and    esi,ebx
  406bcf:	lock in eax,0xde
  406bd2:	aad    0x2a
  406bd4:	sbb    al,BYTE PTR [ecx-0x1a91f475]
  406bda:	mov    eax,0x98485db8
  406bdf:	fidiv  DWORD PTR [eax]
  406be1:	and    DWORD PTR [ecx+0x2d4858d8],0xbdf4204a
  406beb:	or     al,0xa9
  406bed:	test   BYTE PTR [ebp+0x44],dl
  406bf0:	sbb    DWORD PTR [ecx-0x9],0x813818bb
  406bf7:	outs   dx,BYTE PTR ds:[esi]
  406bf8:	xor    eax,0x6f951f6f
  406bfd:	test   al,0xc4
  406bff:	mov    WORD PTR [edi+ebp*1+0x5fc61730],es
  406c06:	jp     0x406c73
  406c08:	xor    edi,ebx
  406c0a:	cmp    ch,BYTE PTR [ebx-0x15cb7366]
  406c10:	cmp    ah,ah
  406c12:	mov    ch,0xcc
  406c14:	popa   
  406c15:	pusha  
  406c16:	push   ss
  406c17:	(bad)  
  406c18:	enter  0x6f9b,0xc6
  406c1c:	sar    al,1
  406c1e:	push   eax
  406c1f:	inc    edx
  406c20:	mov    al,ds:0xebd73e6e
  406c25:	mov    ebp,0x1011a089
  406c2a:	test   al,0xe0
  406c2c:	cs push cs
  406c2e:	or     edi,DWORD PTR [ecx-0x13]
  406c31:	fwait
  406c32:	pop    ebp
  406c33:	pop    edi
  406c34:	mov    dl,0x31
  406c36:	xchg   esi,eax
  406c37:	xchg   ebp,eax
  406c38:	fsubr  st(6),st
  406c3a:	push   cs
  406c3b:	ret    0x15ba
  406c3e:	loop   0x406c99
  406c40:	dec    esp
  406c41:	mov    WORD PTR [eax+ebp*2-0x337ffa9b],?
  406c48:	in     eax,0x73
  406c4a:	imul   edx,ecx,0x1c
  406c4d:	aas    
  406c4e:	sar    dl,cl
  406c50:	jecxz  0x406bdd
  406c52:	sar    DWORD PTR [ecx+0x18345d4b],1
  406c58:	mov    dl,0xce
  406c5a:	data16 jne 0x406c79
  406c5d:	xlat   BYTE PTR ds:[ebx]
  406c5e:	fcom   QWORD PTR [esi+eiz*2-0x788be4cb]
  406c65:	add    DWORD PTR [esi+ebx*4],ebx
  406c68:	and    eax,0xe1fd246e
  406c6d:	pusha  
  406c6e:	pop    ebp
  406c6f:	dec    edi
  406c70:	cs out 0x62,al
  406c73:	mov    ds:0xb1d1316c,eax
  406c78:	nop
  406c79:	xchg   DWORD PTR [esi-0x34],ecx
  406c7c:	inc    ebx
  406c7d:	push   ss
  406c7e:	ret    0x2806
  406c81:	lods   eax,DWORD PTR ds:[esi]
  406c82:	psubusw mm7,QWORD PTR [edx+ecx*4-0x2c3015e8]
  406c8a:	push   0x8
  406c8c:	leave  
  406c8d:	inc    edi
  406c8e:	inc    esi
  406c8f:	jnp    0x406cfb
  406c91:	dec    ebx
  406c92:	rsm    
  406c94:	ins    DWORD PTR es:[edi],dx
  406c95:	cmp    ah,cl
  406c97:	stos   DWORD PTR es:[edi],eax
  406c98:	dec    ebp
  406c99:	jl     0x406d04
  406c9b:	push   edx
  406c9c:	sub    bh,BYTE PTR [ecx+0x566d36fd]
  406ca2:	(bad)  
  406ca3:	out    dx,al
  406ca4:	and    ch,BYTE PTR [edi+0x5725858e]
  406caa:	retf   0x3622
  406cad:	inc    eax
  406cae:	sbb    ebx,esp
  406cb0:	mov    ebp,0x47cfac61
  406cb5:	xchg   edi,eax
  406cb6:	ja     0x406c8c
  406cb8:	lods   eax,DWORD PTR ds:[esi]
  406cb9:	loopne 0x406c77
  406cbb:	cli    
  406cbc:	std    
  406cbd:	test   BYTE PTR [ecx+0x5cd5746f],0x8b
  406cc4:	jge    0x406caa
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss xchg ecx,eax
  406cf0:	sub    BYTE PTR [edx+ebp*1-0x6c],0x7
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406d73
  406cfc:	xor    bh,bh
  406cfe:	std    
  406cff:	cmp    BYTE PTR [eax+0x4a],ch
  406d02:	lods   al,BYTE PTR ds:[esi]
  406d03:	(bad)  
  406d04:	fs jecxz 0x406d02
  406d07:	outs   dx,DWORD PTR ds:[esi]
  406d08:	lahf   
  406d09:	dec    edi
  406d0a:	xlat   BYTE PTR ds:[ebx]
  406d0b:	imul   edx,ecx,0x6f991c70
  406d11:	shl    BYTE PTR [ebp-0x5c],1
  406d14:	adc    BYTE PTR [esi-0x1ae4259b],cl
  406d1a:	test   BYTE PTR [ebx+eax*2],0x9b
  406d1e:	mov    dl,0x44
  406d20:	(bad)  
  406d21:	sbb    BYTE PTR [eax+eax*4+0x26129d3f],dl
  406d28:	or     ecx,DWORD PTR [eax+0x3d]
  406d2b:	jns    0x406d53
  406d2d:	aam    0x88
  406d2f:	xchg   esp,eax
  406d30:	das    
  406d31:	cmp    esi,DWORD PTR [eax+edx*8+0x28f2b51f]
  406d38:	test   BYTE PTR [esi+edi*1-0x1500f159],bh
  406d3f:	retf   
  406d40:	(bad)  
  406d41:	fst    QWORD PTR [edx+0xb]
  406d44:	push   0xffffffe2
  406d46:	outs   dx,DWORD PTR ds:[esi]
  406d47:	loope  0x406d7a
  406d49:	lds    ecx,FWORD PTR [esi-0x28]
  406d4c:	jp     0x406d30
  406d4e:	cmp    al,0x2f
  406d50:	cmc    
  406d51:	inc    ebx
  406d52:	lods   eax,DWORD PTR ds:[esi]
  406d53:	aaa    
  406d54:	sar    DWORD PTR [esi+ebx*1-0x3ada357b],1
  406d5b:	inc    edx
  406d5c:	clc    
  406d5d:	pop    esi
  406d5e:	(bad)  [ebx+0x6a]
  406d61:	lods   al,BYTE PTR ds:[esi]
  406d62:	mov    WORD PTR [edx],es
  406d64:	ins    BYTE PTR es:[edi],dx
  406d65:	push   ecx
  406d66:	or     DWORD PTR [ebx],ecx
  406d68:	cdq    
  406d69:	pop    esp
  406d6a:	int    0xe8
  406d6c:	jmp    0x406d9e
  406d6e:	xor    al,0x5e
  406d70:	ror    BYTE PTR gs:[eax-0x7e67e9d8],cl
  406d77:	aaa    
  406d78:	test   eax,0x93f02cd
  406d7d:	inc    eax
  406d7e:	pop    eax
  406d7f:	out    0xd4,al
  406d81:	jg     0x406dc7
  406d83:	sbb    esp,DWORD PTR [edi+0x56]
  406d86:	les    ebp,FWORD PTR [ebp-0x33]
  406d89:	aam    0x47
  406d8b:	cmp    eax,0x3ba818f4
  406d90:	loop   0x406dfe
  406d92:	mov    bh,0x90
  406d94:	xchg   esp,eax
  406d95:	inc    edx
  406d96:	jb     0x406dc5
  406d98:	inc    eax
  406d99:	cs mov ebx,0x980b0b9
  406d9f:	mov    ebp,0x5892e9c1
  406da4:	int    0x95
  406da6:	inc    eax
  406da7:	loop   0x406dcc
  406da9:	jmp    0x671da938
  406dae:	mov    ch,0x15
  406db0:	xlat   BYTE PTR ds:[ebx]
  406db1:	jbe    0x406db6
  406db3:	pop    ss
  406db4:	and    eax,0x2dca1374
  406db9:	lods   eax,DWORD PTR ds:[esi]
  406dba:	dec    ebp
  406dbb:	push   eax
  406dbc:	or     BYTE PTR [edi],dh
  406dbe:	shl    BYTE PTR [edx],1
  406dc0:	lahf   
  406dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dc2:	xchg   BYTE PTR [ebx],al
  406dc4:	out    dx,al
  406dc5:	mov    eax,ds:0x2d5dcfac
  406dca:	aas    
  406dcb:	cld    
  406dcc:	xchg   esi,eax
  406dcd:	mov    bl,0xb5
  406dcf:	rcl    DWORD PTR [eax],cl
  406dd1:	cmp    DWORD PTR ss:[edx-0x4d],ebx
  406dd5:	sbb    BYTE PTR [ecx-0x16ae3c46],al
  406ddb:	leave  
  406ddc:	add    DWORD PTR [ecx],ebp
  406dde:	lods   al,BYTE PTR ds:[esi]
  406ddf:	inc    eax
  406de0:	popf   
  406de1:	das    
  406de2:	stos   BYTE PTR es:[edi],al
  406de3:	data16 out 0x3f,al
  406de6:	jne    0x406dcf
  406de8:	xchg   esp,ebp
  406dea:	aaa    
  406deb:	les    edx,FWORD PTR [eax-0x39091dd8]
  406df1:	pop    edx
  406df2:	(bad)  
  406df3:	imul   esi,edx,0x63
  406df6:	inc    ebp
  406df7:	pop    esp
  406df8:	fwait
  406df9:	ja     0xcc0536f6
  406dff:	mov    ds:0x53b3aeb4,eax
  406e04:	or     BYTE PTR [ecx+ebp*2-0x38],ah
  406e08:	pop    edx
  406e09:	cmc    
  406e0a:	xor    bh,dl
  406e0c:	popf   
  406e0d:	sbb    esi,esp
  406e0f:	test   eax,0x7a71fdfa
  406e14:	mov    WORD PTR [ebx+0x1eeff33c],fs
  406e1a:	mov    edi,0x1c28912f
  406e1f:	inc    esp
  406e20:	mov    bh,0xa
  406e22:	leave  
  406e23:	(bad)  
  406e24:	mov    ebx,0xbd189a5d
  406e29:	jl     0x406e2b
  406e2b:	sub    eax,0xa9915cf4
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	or     DWORD PTR [ecx+ebx*8+0x7e0459c9],esi
  406e4f:	jle    0x406e74
  406e51:	jg     0x406ed1
  406e53:	jle    0x406eac
  406e55:	iret   
  406e56:	dec    esi
  406e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e58:	mov    bh,0xe6
  406e5a:	dec    eax
  406e5b:	inc    cx
  406e5d:	dec    esp
  406e5e:	aam    0xd1
  406e60:	dec    esi
  406e61:	xor    BYTE PTR [edi+0x1339112b],ah
  406e67:	pop    es
  406e68:	push   0x4e8e6e2d
  406e6d:	push   ecx
  406e6e:	(bad)  
  406e6f:	jle    0x406e29
  406e71:	jmp    0x406ed0
  406e73:	jle    0x406ec0
  406e75:	aam    0xe7
  406e77:	sub    al,0xcd
  406e79:	jge    0x406e27
  406e7b:	(bad)  
  406e7c:	in     al,dx
  406e7d:	stc    
  406e7e:	mov    ecx,0x2a26ffc5
  406e83:	in     al,0x84
  406e85:	(bad)  
  406e87:	fisttp DWORD PTR [edx+0x6a]
  406e8a:	shl    eax,cl
  406e8c:	popf   
  406e8d:	cmp    DWORD PTR [eax-0x34af85d],ebx
  406e93:	pop    eax
  406e94:	jg     0x406e7a
  406e96:	call   0xc841:0x9fc3b810
  406e9d:	add    bh,cl
  406e9f:	or     BYTE PTR [ebx+0x5b],ah
  406ea2:	aad    0x55
  406ea4:	mov    ss,WORD PTR [ebp+ecx*2-0x413aaea]
  406eab:	push   ds
  406eac:	sub    esp,eax
  406eae:	or     edi,DWORD PTR [eax+0x53]
  406eb1:	pop    ecx
  406eb2:	fwait
  406eb3:	repz into 
  406eb5:	xor    dh,al
  406eb7:	cmp    DWORD PTR [edx-0x3f],edi
  406eba:	and    eax,0xc04c39b2
  406ebf:	addr16 cmp esp,edx
  406ec2:	pop    esp
  406ec3:	popf   
  406ec4:	lahf   
  406ec5:	mov    eax,0xbaf32246
  406eca:	fwait
  406ecb:	or     BYTE PTR [ebx+0x6acbb59f],ah
  406ed1:	iret   
  406ed2:	adc    DWORD PTR [ebx],ecx
  406ed4:	cmp    al,0x63
  406ed6:	pop    ebp
  406ed7:	sti    
  406ed8:	sbb    eax,0xf36e814e
  406edd:	mov    ecx,0x6ce1e1ac
  406ee2:	mov    edi,0x53ca8755
  406ee7:	mov    ch,0xe5
  406ee9:	ds mov bh,0xab
  406eec:	jmp    0x406efb
  406eee:	loope  0x406e74
  406ef0:	and    DWORD PTR [edi],ebp
  406ef2:	cs inc ebx
  406ef4:	and    dl,BYTE PTR [edx]
  406ef6:	add    BYTE PTR [ebx-0x41],dl
  406ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406efa:	mov    dl,0x57
  406efc:	adc    DWORD PTR [edx+0x5b],ebp
  406eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f00:	std    
  406f01:	pop    ecx
  406f02:	xchg   edi,eax
  406f03:	or     al,0x8a
  406f05:	xchg   esp,eax
  406f06:	out    dx,eax
  406f07:	outs   dx,DWORD PTR ds:[esi]
  406f08:	imul   esp,DWORD PTR [ecx+eiz*2],0x80424276
  406f0f:	sub    bh,BYTE PTR [ebx-0x1b]
  406f12:	shl    DWORD PTR fs:[ecx],0xad
  406f16:	or     ah,BYTE PTR [eax]
  406f18:	fmulp  st(6),st
  406f1a:	dec    edx
  406f1b:	xor    esp,DWORD PTR gs:[ebx]
  406f1e:	jge    0x406efd
  406f20:	mov    ds:0xdfc61a4e,al
  406f25:	inc    edi
  406f26:	pop    ecx
  406f27:	jb     0x406f5b
  406f29:	add    edx,DWORD PTR [edi+0x2d]
  406f2c:	or     al,0x6e
  406f2e:	pop    ds
  406f2f:	test   dh,0xaa
  406f32:	js     0x406f16
  406f34:	mov    dh,0xa0
  406f36:	jnp    0x406eba
  406f38:	(bad)  [ecx-0x4967eff]
  406f3e:	cmp    esi,0xa6b0e88d
  406f44:	push   es
  406f45:	jb     0x406f68
  406f47:	icebp  
  406f48:	or     DWORD PTR [eax+0x23],esp
  406f4b:	retf   
  406f4c:	pop    ebp
  406f4d:	fwait
  406f4e:	cmp    BYTE PTR [edi+0x13300385],dh
  406f54:	add    edi,DWORD PTR [ebp-0x64]
  406f57:	sub    ch,ah
  406f59:	push   edi
  406f5a:	(bad)  
  406f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5c:	dec    ebx
  406f5d:	jge    0x406f93
  406f5f:	outs   dx,DWORD PTR ds:[esi]
  406f60:	mov    al,0xfb
  406f62:	and    BYTE PTR [esi+0x50ab94b6],0x1e
  406f69:	pop    edx
  406f6a:	inc    edx
  406f6b:	aas    
  406f6c:	test   BYTE PTR [eax],0x23
  406f6f:	imul   ecx,DWORD PTR [edi],0x9f0054bd
  406f75:	jecxz  0x406f71
  406f77:	jae    0x406f7c
  406f79:	sti    
  406f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f7b:	shl    BYTE PTR [ebp+0x38],0x34
  406f7f:	and    ebx,0x6c
  406f82:	hlt    
  406f83:	sbb    DWORD PTR [esi+ebx*4-0x2],edx
  406f87:	and    al,0xf
  406f89:	mov    dl,BYTE PTR [ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	jl     0x406fe9
  407011:	out    dx,al
  407012:	in     al,dx
  407013:	add    bl,BYTE PTR [edx]
  407015:	jle    0x407095
  407017:	and    edi,DWORD PTR [edi+0x7e]
  40701a:	jle    0x406fe4
  40701c:	popa   
  40701d:	lahf   
  40701e:	and    al,0x62
  407020:	mov    eax,0xb0209a6b
  407025:	adc    ecx,DWORD PTR [ebx]
  407027:	jle    0x407050
  407029:	je     0x407055
  40702b:	mov    esi,0xcc49bb7f
  407030:	repnz in al,0xc6
  407033:	fcom   DWORD PTR [edi-0x43334415]
  407039:	mov    ebx,0xdac94492
  40703e:	inc    eax
  40703f:	mov    bh,0xaa
  407041:	dec    eax
  407042:	cmp    dh,bl
  407044:	and    eax,0xa449c996
  407049:	mov    ch,BYTE PTR [eax+0x3fa51c9d]
  40704f:	mov    ds:0xaa8e378f,eax
  407054:	pcmpgtb mm2,mm5
  407057:	pop    ds
  407058:	arpl   WORD PTR [ebx+edx*2+0x116334bb],bp
  40705f:	outs   dx,BYTE PTR ds:[esi]
  407060:	push   ecx
  407061:	test   BYTE PTR [ecx-0x6529cf63],bh
  407067:	push   ds
  407068:	add    esi,esp
  40706a:	sub    edx,DWORD PTR ds:0xeadf3963
  407070:	pop    edx
  407071:	pop    ss
  407072:	pop    es
  407073:	std    
  407074:	jo     0x407023
  407076:	mov    edx,0x66b5bf16
  40707b:	mov    bl,BYTE PTR [eax]
  40707d:	pop    edx
  40707e:	xchg   esp,eax
  40707f:	push   edi
  407080:	sub    BYTE PTR [edx],al
  407082:	add    DWORD PTR [esi-0x29],edx
  407085:	mov    al,ds:0x1d9848a
  40708a:	imul   ebx,DWORD PTR [eax],0x98f3eea8
  407090:	sbb    eax,0x7320b23f
  407095:	jo     0x4070f2
  407097:	mov    esp,DWORD PTR [esi]
  407099:	mov    ch,0x71
  40709b:	fsub   QWORD PTR [edx-0x540e0383]
  4070a1:	int    0xe6
  4070a3:	retf   
  4070a4:	addr16 (bad) 
  4070a7:	dec    BYTE PTR [ebp-0x6abf9ee0]
  4070ad:	sbb    DWORD PTR [ebp+0x64351aba],ebx
  4070b3:	xchg   ecx,eax
  4070b4:	or     ebp,0x6f
  4070b7:	outs   dx,BYTE PTR ds:[esi]
  4070b8:	sub    dl,BYTE PTR ds:[edi-0x5]
  4070bc:	jg     0x407106
  4070be:	fidivr WORD PTR [edx]
  4070c0:	mov    al,ds:0x93953b66
  4070c5:	xchg   DWORD PTR [edx-0x7f513d],edi
  4070cb:	mov    dl,0x26
  4070cd:	fsubr  QWORD PTR [edx+eax*8]
  4070d0:	cmp    BYTE PTR [esp+edx*8-0x10a5e6d0],ah
  4070d7:	out    0x71,eax
  4070d9:	push   ebp
  4070da:	mov    cl,BYTE PTR [edi+0x394407fe]
  4070e0:	mov    cs,WORD PTR [eax+eiz*8-0x5dff37f9]
  4070e7:	ins    BYTE PTR es:[edi],dx
  4070e8:	lock lods al,BYTE PTR ds:[esi]
  4070ea:	xor    BYTE PTR [ebx+0x29ca50bd],ah
  4070f0:	sub    cl,BYTE PTR [ebx]
  4070f2:	mov    al,0x0
  4070f4:	adc    al,0xed
  4070f6:	(bad)  
  4070f7:	gs nop
  4070f9:	leave  
  4070fa:	adc    eax,0x10284a13
  4070ff:	dec    esi
  407100:	pop    edx
  407101:	fs pop ds
  407103:	outs   dx,BYTE PTR ds:[esi]
  407104:	xchg   esi,eax
  407105:	push   ebp
  407106:	aad    0xc0
  407108:	mov    eax,0x842572eb
  40710d:	dec    ebx
  40710e:	je     0x407107
  407110:	sub    ecx,DWORD PTR [edi-0x6e]
  407113:	aad    0xd9
  407115:	popf   
  407116:	fadd   DWORD PTR [edi]
  407118:	leave  
  407119:	iret   
  40711a:	and    ah,ah
  40711c:	iret   
  40711d:	sbb    al,0x32
  40711f:	ret    0xb15a
  407122:	mov    ecx,0xaffcc7ce
  407127:	dec    esi
  407128:	xor    ebp,DWORD PTR ds:0x87e975b0
  40712e:	pop    esp
  40712f:	pop    eax
  407130:	cld    
  407131:	mov    esp,0xf27058ce
  407136:	pop    esi
  407137:	mov    fs,WORD PTR [eax*2+0x2de15380]
  40713e:	mov    eax,ds:0x4dbbd49a
  407143:	mov    eax,0x7145ab9d
  407148:	shr    BYTE PTR [ecx],cl
  40714a:	mov    ebx,DWORD PTR [eax-0x28a7f03b]
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x8a
  407180:	add    dh,ch
  407182:	cmp    DWORD PTR [edi],esi
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x4071d8
  40718c:	aam    0x61
  40718e:	jge    0x40718a
  407190:	neg    DWORD PTR [edx+ebp*1-0x555befd0]
  407197:	cmp    BYTE PTR [edi],bh
  407199:	or     eax,0xcf59324b
  40719e:	push   esi
  40719f:	dec    ecx
  4071a0:	jle    0x40715c
  4071a2:	cmp    eax,0xf9eabec9
  4071a7:	add    BYTE PTR [edi],bl
  4071a9:	adc    cl,BYTE PTR [edi-0x1e387a9d]
  4071af:	xor    edi,DWORD PTR [edx+0x1fc814b9]
  4071b5:	mov    ?,ebx
  4071b7:	ja     0x407207
  4071b9:	sahf   
  4071ba:	xchg   edi,eax
  4071bb:	push   esp
  4071bc:	sbb    DWORD PTR [ebx-0x15b0a1e0],ebp
  4071c2:	sbb    ah,dh
  4071c4:	and    al,al
  4071c6:	popf   
  4071c7:	sub    eax,0xc15ce185
  4071cc:	mov    dh,0xb9
  4071ce:	cld    
  4071cf:	jne    0x40722d
  4071d1:	mov    ecx,0x1835ba08
  4071d6:	icebp  
  4071d7:	mov    edx,0x4c687046
  4071dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071dd:	sbb    al,al
  4071df:	rcr    DWORD PTR [edi+0x3bb90af0],0x71
  4071e6:	adc    al,0x0
  4071e8:	aad    0x5e
  4071ea:	lods   al,BYTE PTR ds:[esi]
  4071eb:	stos   DWORD PTR es:[edi],eax
  4071ec:	adc    esi,DWORD PTR [eax]
  4071ee:	arpl   WORD PTR [eax],bp
  4071f0:	push   0xffffffb7
  4071f2:	jl     0x4071ba
  4071f4:	push   0xa849006b
  4071f9:	jbe    0x407201
  4071fb:	(bad)  
  4071fe:	loopne 0x4071f5
  407200:	arpl   WORD PTR es:[eax],dx
  407203:	icebp  
  407204:	adc    BYTE PTR [ebp-0x294d980e],dl
  40720a:	lahf   
  40720b:	inc    ecx
  40720c:	sbb    BYTE PTR [edi-0x138bb5f3],dl
  407212:	mov    ebx,0xeb71938
  407217:	outs   dx,DWORD PTR ds:[esi]
  407218:	test   eax,0xf3316acb
  40721d:	out    dx,eax
  40721e:	dec    edx
  40721f:	adc    esi,ebp
  407221:	push   eax
  407222:	add    edx,DWORD PTR [eax+0x2029d8cc]
  407228:	jb     0x4071bd
  40722a:	and    cl,bl
  40722c:	mov    eax,0x873a4f67
  407231:	fs xchg esp,eax
  407233:	mov    cl,0xe6
  407235:	sahf   
  407236:	jno    0x407254
  407238:	jl     0x407258
  40723a:	fldcw  WORD PTR [bx+si-0xf]
  40723e:	and    dl,al
  407240:	sbb    DWORD PTR [esi+0x706b9696],ebp
  407246:	xchg   edx,eax
  407247:	pusha  
  407248:	xchg   esi,eax
  407249:	cmc    
  40724a:	dec    esi
  40724b:	pop    ss
  40724c:	aad    0x91
  40724e:	fcomp  st(3)
  407250:	loop   0x4072c5
  407252:	imul   ebp,DWORD PTR [ecx-0x1c2bb9c9],0x29
  407259:	jae    0x407209
  40725b:	mov    ds:0x833dac52,al
  407260:	xchg   ebp,eax
  407261:	dec    edx
  407262:	pop    es
  407263:	dec    edx
  407264:	inc    eax
  407265:	retf   
  407266:	das    
  407267:	fmul   st(7),st
  407269:	bound  ebx,QWORD PTR [ecx-0x23]
  40726c:	mov    ah,0xc
  40726e:	loope  0x40725e
  407270:	test   al,0x64
  407272:	xchg   esp,eax
  407273:	xor    eax,0x2484e13b
  407278:	xchg   DWORD PTR [edi-0x580f9d96],eax
  40727e:	dec    ecx
  40727f:	test   al,0xed
  407281:	jns    0x407263
  407283:	sub    eax,0x5cc69b2f
  407288:	push   0x16
  40728a:	add    dl,cl
  40728c:	add    BYTE PTR [ebx],bl
  40728e:	aad    0x43
  407290:	frstpm(287 only) 
  407292:	fisttp WORD PTR [esi+0x12]
  407295:	fidiv  DWORD PTR [eax-0x5e]
  407298:	call   FWORD PTR [esi+0x5f]
  40729b:	inc    eax
  40729c:	aaa    
  40729d:	mov    al,0x20
  40729f:	mov    BYTE PTR [edi],al
  4072a1:	das    
  4072a2:	ss sub bh,ch
  4072a5:	add    edx,DWORD PTR [edi+0x44]
  4072a8:	push   dx
  4072aa:	in     al,0x7e
  4072ac:	xor    eax,0x12c0279a
  4072b1:	add    ebp,ebp
  4072b3:	and    eax,0xeefdf649
  4072b8:	xchg   esi,eax
  4072b9:	push   es
  4072ba:	mov    dh,0x8d
  4072bc:	or     al,0xec
  4072be:	jns    0x40732d
  4072c0:	mov    edx,DWORD PTR [ebp-0x20]
  4072c3:	mov    ebx,DWORD PTR [ebp-0x8]
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0xb19a0f0c
  4072e9:	les    ebx,FWORD PTR [ebx-0x8]
  4072ec:	sbb    BYTE PTR [esi+0x7e],bh
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x40735e
  4072f4:	sub    bh,dl
  4072f6:	mov    esp,0xad4aa9ed
  4072fb:	cdq    
  4072fc:	cmc    
  4072fd:	cli    
  4072fe:	sti    
  4072ff:	dec    ecx
  407300:	sub    BYTE PTR [ebp+0x13b8bc8b],dh
  407306:	mov    dl,BYTE PTR es:[ebp-0x6f]
  40730a:	cmp    al,BYTE PTR [edi-0x27]
  40730d:	xchg   DWORD PTR [edi-0x76],ebp
  407310:	out    dx,eax
  407311:	enter  0x51e4,0x35
  407315:	mov    ?,WORD PTR [edx]
  407317:	adc    ah,dl
  407319:	xchg   ebp,eax
  40731a:	xchg   ebx,eax
  40731b:	test   DWORD PTR [esi+edi*2],ecx
  40731e:	lods   al,BYTE PTR ds:[esi]
  40731f:	push   esp
  407320:	ins    BYTE PTR es:[edi],dx
  407321:	outs   dx,BYTE PTR ds:[esi]
  407322:	mov    al,ds:0xa28933d7
  407327:	aam    0xf6
  407329:	adc    edi,DWORD PTR [edx+0x3f5f7f8a]
  40732f:	lods   al,BYTE PTR ds:[esi]
  407330:	fsubr  DWORD PTR [ecx-0x562147ba]
  407336:	daa    
  407337:	or     ebx,eax
  407339:	shl    BYTE PTR [eax],cl
  40733b:	dec    ebp
  40733c:	ret    0x22d
  40733f:	pop    ds
  407340:	dec    DWORD PTR [esi]
  407342:	adc    BYTE PTR [ebp-0x374a441a],bh
  407348:	jo     0x4073b9
  40734a:	xor    al,0x44
  40734c:	jb     0x407302
  40734e:	pop    edi
  40734f:	sbb    ch,0x91
  407352:	shl    BYTE PTR [edx+ebp*4-0x521e82fd],0x94
  40735a:	popf   
  40735b:	or     esp,eax
  40735d:	mov    dl,0x3a
  40735f:	test   esi,esp
  407361:	in     al,dx
  407362:	aam    0x3a
  407364:	cmp    bl,0xa3
  407367:	jo     0x4073b4
  407369:	push   edx
  40736a:	fs xchg esp,eax
  40736c:	repnz add dh,BYTE PTR [ebp+0x7a]
  407370:	in     eax,0xec
  407372:	mov    ch,0x77
  407374:	push   eax
  407375:	cwde   
  407376:	xor    ebx,eax
  407378:	and    edi,DWORD PTR [eax-0x3e3294e0]
  40737e:	in     eax,0xbf
  407380:	inc    edx
  407381:	jns    0x4073ef
  407383:	mov    ?,eax
  407385:	or     eax,0xc82b8b28
  40738a:	xchg   edx,eax
  40738b:	retf   0xd97e
  40738e:	lods   eax,DWORD PTR ds:[esi]
  40738f:	or     al,0x9b
  407391:	mov    WORD PTR [ecx],fs
  407393:	stos   DWORD PTR es:[edi],eax
  407394:	ror    DWORD PTR [eax],cl
  407396:	ret    0xaab3
  407399:	popf   
  40739a:	adc    DWORD PTR [ebp+0x3],ecx
  40739d:	mov    BYTE PTR [ecx+eiz*4],al
  4073a0:	pop    ebx
  4073a1:	mov    eax,ds:0xa9f881d2
  4073a6:	stos   DWORD PTR es:[edi],eax
  4073a7:	jl     0x40740c
  4073a9:	fcmove st,st(1)
  4073ab:	sbb    bh,dl
  4073ad:	or     bh,BYTE PTR [esi-0x6c]
  4073b0:	jmp    0xfdd42d45
  4073b5:	adc    bh,BYTE PTR [esi-0x5e]
  4073b8:	sbb    ch,ch
  4073ba:	and    BYTE PTR [edi-0x68],0x76
  4073be:	scas   eax,DWORD PTR es:[di]
  4073c0:	in     al,0x66
  4073c2:	inc    eax
  4073c3:	aad    0x45
  4073c5:	inc    ebp
  4073c6:	sbb    eax,0x835036
  4073cb:	xchg   ebx,ebx
  4073cd:	xchg   ebx,eax
  4073ce:	push   ss
  4073cf:	ficomp DWORD PTR [edx-0x28]
  4073d2:	and    edx,edi
  4073d4:	jbe    0x40735e
  4073d6:	retf   
  4073d7:	out    0x6c,al
  4073d9:	add    BYTE PTR [edx],ah
  4073db:	inc    edi
  4073dc:	out    0x54,ax
  4073df:	cdq    
  4073e0:	xor    eax,0x1f0966db
  4073e5:	rcl    esp,1
  4073e7:	sbb    BYTE PTR [ecx+ebx*8+0x281e26b],bh
  4073ee:	add    DWORD PTR [edx],ecx
  4073f0:	bound  esi,QWORD PTR [ebx]
  4073f2:	aaa    
  4073f3:	mov    ecx,0x3caf4d15
  4073f8:	aas    
  4073f9:	xchg   esp,eax
  4073fa:	mov    al,0x50
  4073fc:	xlat   BYTE PTR ds:[ebx]
  4073fd:	and    al,BYTE PTR [ecx+0x54]
  407400:	xor    ebp,DWORD PTR [esi]
  407402:	js     0x4073cc
  407404:	aas    
  407405:	inc    esi
  407406:	jae    0x4073f9
  407408:	inc    esp
  407409:	lds    esp,FWORD PTR ds:0x3a5fd687
  40740f:	loope  0x40747f
  407411:	xor    DWORD PTR [esi+0x3e37c878],0x1aa9580b
  40741b:	push   es
  40741c:	inc    esp
  40741d:	push   0x6e3bee56
  407422:	xor    al,0x60
  407424:	push   ebp
  407425:	add    eax,0xc95f337d
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1+0x777927ff],edi
  407443:	mov    bl,0x59
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	sbb    DWORD PTR [esi+0x7e],edi
  407449:	jmp    0x1abef2cd
  40744e:	mov    esp,0x5ad8ceb7
  407453:	pop    edi
  407454:	mov    WORD PTR [ebp-0x227f9ab7],gs
  40745a:	xchg   DWORD PTR [ecx],ebx
  40745c:	push   ecx
  40745d:	ffreep st(4)
  40745f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407460:	mov    al,0xab
  407462:	dec    eax
  407463:	lea    esi,[edx]
  407465:	out    dx,al
  407466:	mov    dl,0x67
  407468:	sbb    BYTE PTR [ebx+0x40],al
  40746b:	out    0x78,eax
  40746d:	sbb    BYTE PTR [ebx],ah
  40746f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407470:	xchg   edi,eax
  407471:	call   0x193d:0x43c7c91b
  407478:	sar    BYTE PTR [ecx],cl
  40747a:	ins    BYTE PTR es:[edi],dx
  40747b:	or     BYTE PTR [eax],al
  40747d:	or     cl,BYTE PTR [eax+eax*4]
  407480:	inc    edi
  407481:	scas   eax,DWORD PTR es:[edi]
  407482:	adc    al,0x9c
  407484:	sar    BYTE PTR [ecx],0x7a
  407487:	stos   DWORD PTR es:[edi],eax
  407488:	mov    BYTE PTR [edx+0x28400454],dl
  40748e:	pop    edx
  40748f:	jp     0x4074ad
  407491:	pop    edi
  407492:	push   0xd
  407494:	test   ch,0x22
  407497:	xchg   ebx,eax
  407498:	or     DWORD PTR [eax],eax
  40749a:	lock mov ch,0x35
  40749d:	pop    ebx
  40749e:	xchg   ebp,eax
  40749f:	fadd   st(6),st
  4074a1:	out    0x33,eax
  4074a3:	in     al,dx
  4074a4:	mov    cl,0x9
  4074a6:	dec    esp
  4074a7:	sbb    BYTE PTR [ebp+ebp*4-0x359ee92d],dl
  4074ae:	hlt    
  4074af:	push   ss
  4074b0:	mov    DWORD PTR [ecx-0x37cd31fe],0x5db6f25d
  4074ba:	dec    esp
  4074bb:	pop    ds
  4074bc:	fisttp WORD PTR [esi+0x74f06ed2]
  4074c2:	clc    
  4074c3:	mov    ah,0x9d
  4074c5:	int    0xb
  4074c7:	out    dx,al
  4074c8:	(bad)  
  4074c9:	ins    BYTE PTR es:[edi],dx
  4074ca:	ins    BYTE PTR es:[edi],dx
  4074cb:	mov    bl,0x2e
  4074cd:	and    edx,esp
  4074cf:	imul   esi,DWORD PTR [edx-0x33dd20e4],0x28748f9d
  4074d9:	cmc    
  4074da:	inc    esi
  4074db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074dc:	or     DWORD PTR [eax-0x78f0fa4e],0xffffff9f
  4074e3:	push   esi
  4074e4:	rcl    BYTE PTR [eax],cl
  4074e6:	sbb    BYTE PTR [eax],ah
  4074e8:	xchg   edx,eax
  4074e9:	inc    dx
  4074eb:	or     esp,ecx
  4074ed:	or     ecx,DWORD PTR [ebx-0x68aabb4a]
  4074f3:	jg     0x407538
  4074f5:	push   ss
  4074f6:	ror    BYTE PTR [ebx-0x4e6ec6f9],cl
  4074fc:	jo     0x407508
  4074fe:	int    0xaa
  407500:	stos   DWORD PTR es:[edi],eax
  407501:	cmp    edi,esp
  407503:	(bad)  
  407504:	les    ebx,FWORD PTR [eax-0x59747209]
  40750a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40750b:	xor    dl,bh
  40750d:	sbb    al,0xd4
  40750f:	(bad)  
  407510:	sar    dh,cl
  407512:	addr16 and eax,0x30e49911
  407518:	mov    WORD PTR [ebx-0x454bf2],ss
  40751e:	les    esp,FWORD PTR [edx]
  407520:	and    al,0x7c
  407522:	sub    al,0xb6
  407524:	rol    BYTE PTR [eax+ebx*2],0xac
  407528:	scas   al,BYTE PTR es:[edi]
  407529:	sbb    DWORD PTR [esi-0x80],ebp
  40752c:	in     al,0x84
  40752e:	sub    al,0xc3
  407530:	mov    BYTE PTR [ebp-0x356b0b40],al
  407536:	loop   0x407530
  407538:	pop    edx
  407539:	mov    edi,0x9a65f27b
  40753e:	sbb    DWORD PTR [eax+0x75363e9e],esi
  407544:	leave  
  407545:	in     al,0x52
  407547:	icebp  
  407548:	imul   edi,DWORD PTR [edx-0x5],0x2ba8f31f
  40754f:	mov    esi,0x47d69b76
  407554:	pop    es
  407555:	mov    cl,0x88
  407557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407558:	push   es
  407559:	jae    0x4075bb
  40755b:	sbb    DWORD PTR cs:[ecx+0x4f380bc0],ebx
  407562:	pushf  
  407563:	add    ecx,edi
  407565:	inc    ebx
  407566:	sub    eax,0x96e4dea
  40756b:	pop    eax
  40756c:	in     al,dx
  40756d:	cdq    
  40756e:	adc    al,0x18
  407570:	out    dx,al
  407571:	fdivr  DWORD PTR [eax-0xe]
  407574:	add    BYTE PTR [edi-0x48],cl
  407577:	dec    ecx
  407578:	mov    gs,WORD PTR [edi+0x26ac887c]
  40757e:	div    BYTE PTR [esp+ebp*1]
  407581:	jb     0x4075e3
  407583:	xchg   edi,eax
  407585:	bound  esp,QWORD PTR [ebx+0x4e]
  407588:	mov    DWORD PTR [esi-0x762f771b],ecx
  40758e:	daa    
  40758f:	xor    BYTE PTR [eax+0x6a5575e3],ah
  407595:	hlt    
  407596:	xor    eax,0x7132025d
  40759b:	mov    bh,0x8d
  40759d:	cdq    
  40759e:	cli    
  40759f:	lods   al,BYTE PTR ds:[esi]
  4075a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075a1:	xor    al,0x94
  4075a3:	mov    ds,WORD PTR [edi+0x6506f100]
  4075a9:	test   DWORD PTR [eax],edi
  4075ab:	bound  eax,QWORD PTR [ebx-0x32]
  4075ae:	lods   al,BYTE PTR ds:[esi]
  4075b0:	enter  0xa37f,0x69
  4075b4:	xchg   DWORD PTR [ebp+0x4e],esi
  4075b7:	add    esi,DWORD PTR [esi+0x51742488]
  4075bd:	push   ecx
  4075be:	and    DWORD PTR ds:0x41abce,0x0
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41abce
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41abce,edx
  4075da:	cmp    DWORD PTR ds:0x41abce,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41abce,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412374,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41abd6,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41abd6
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41abd6,ecx
  40763f:	cmp    DWORD PTR ds:0x41abd6,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41abd6,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417e45,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417e45
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417e45,edx
  407680:	cmp    DWORD PTR ds:0x417e45,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417e45,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41abea
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417e45,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417e45
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417e45,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x1d]
  4076f9:	rcr    BYTE PTR [esi],1
  4076fb:	mov    eax,ds:0x7e7e1f1c
  407700:	jmp    0x3ebef584
  407705:	dec    edx
  407706:	dec    edi
  407707:	jecxz  0x4076fb
  407709:	sbb    DWORD PTR [ebp+0x7b],0x2c9b0f1e
  407710:	push   ds
  407711:	inc    ebp
  407712:	or     ebx,ebp
  407714:	jmp    0x4076d3
  407716:	mov    edi,DWORD PTR [esi+0x6c]
  407719:	mov    dh,0xf0
  40771b:	cmp    cl,BYTE PTR [ecx-0x44]
  40771e:	out    0x99,eax
  407720:	clc    
  407721:	mov    eax,0xf4ed6a00
  407726:	jg     0x4076b5
  407728:	xchg   esp,eax
  407729:	sti    
  40772a:	je     0x4076c8
  40772c:	dec    ecx
  40772d:	mov    esp,0xa170d35d
  407732:	popf   
  407733:	mov    bh,BYTE PTR [eax+0x13f682ec]
  407739:	sub    BYTE PTR [edx],al
  40773b:	mov    ch,0xd0
  40773d:	aad    0xce
  40773f:	ins    DWORD PTR es:[edi],dx
  407740:	cs jne 0x407714
  407743:	aad    0x4f
  407745:	cmp    al,BYTE PTR [esi]
  407747:	pop    ebx
  407748:	sar    DWORD PTR [edx],cl
  40774a:	mov    edx,0x8997256b
  40774f:	push   esp
  407750:	data16 div BYTE PTR [edx+0x31d34a10]
  407757:	pop    ss
  407758:	sub    ebp,ebp
  40775a:	mov    esi,0xd5fc7a27
  40775f:	mov    edi,es
  407761:	jae    0x4077b9
  407763:	push   eax
  407764:	scas   eax,DWORD PTR es:[edi]
  407765:	xchg   ecx,eax
  407766:	fidivr DWORD PTR ds:[edi-0x49]
  40776a:	ds dec edx
  40776c:	sub    DWORD PTR [edi],ebp
  40776e:	jmp    0xd63a48d3
  407773:	and    edi,esi
  407775:	and    ah,BYTE PTR [esi-0x1a]
  407778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407779:	xlat   BYTE PTR ds:[ebx]
  40777a:	(bad)  
  40777b:	xor    al,BYTE PTR [ebx]
  40777d:	push   edi
  40777e:	ror    BYTE PTR [ebp+0x759275c],1
  407784:	clc    
  407785:	add    DWORD PTR [edi],ebx
  407787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407788:	pop    eax
  407789:	adc    BYTE PTR [eax+ecx*8],0x62
  40778d:	xor    ax,0xa72b
  407791:	mov    ebp,0xa94ffce
  407796:	fcom   st(1)
  407798:	cmp    ebx,DWORD PTR [edx-0x1]
  40779b:	cli    
  40779c:	sti    
  40779d:	enter  0x347d,0xff
  4077a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077a2:	stos   DWORD PTR es:[edi],eax
  4077a3:	or     al,0x25
  4077a5:	dec    edx
  4077a6:	or     esp,esp
  4077a8:	xchg   esi,eax
  4077a9:	je     0x407806
  4077ab:	repnz bound esp,QWORD PTR [eax+0x516b0feb]
  4077b2:	add    BYTE PTR [ebp+ecx*2+0x379f9f16],bl
  4077b9:	popa   
  4077ba:	out    0xb3,eax
  4077bc:	cdq    
  4077bd:	fild   QWORD PTR [eax]
  4077bf:	add    BYTE PTR [eax+0x2e],0x3c
  4077c3:	jnp    0x407818
  4077c5:	repz sahf 
  4077c7:	push   ds
  4077c8:	enter  0xf235,0x34
  4077cc:	ja     0x407840
  4077ce:	jg     0x407774
  4077d0:	inc    ecx
  4077d1:	jmp    esp
  4077d3:	repz ret 0x9556
  4077d7:	jnp    0x407784
  4077d9:	loope  0x4077f9
  4077db:	cmp    esp,0x5f
  4077de:	adc    DWORD PTR [edi+eiz*2],edi
  4077e1:	es jmp 0x31b7:0x2248963a
  4077e9:	lods   eax,DWORD PTR ds:[esi]
  4077ea:	scas   al,BYTE PTR es:[edi]
  4077eb:	pusha  
  4077ec:	add    BYTE PTR [ebp-0xd],al
  4077ef:	std    
  4077f0:	ins    BYTE PTR es:[edi],dx
  4077f1:	inc    esp
  4077f2:	cld    
  4077f3:	inc    edx
  4077f4:	mov    ebx,0xe1e2a400
  4077f9:	push   ebx
  4077fa:	push   ss
  4077fb:	inc    ebp
  4077fc:	inc    ecx
  4077fd:	inc    eax
  4077fe:	inc    ecx
  4077ff:	add    ebp,DWORD PTR [esp+eax*1-0x379afd63]
  407806:	xor    al,0x9c
  407808:	dec    BYTE PTR [ebx-0x56f768b7]
  40780e:	cwde   
  40780f:	fist   WORD PTR [edi-0x726db220]
  407815:	pop    ss
  407816:	xor    DWORD PTR [ebp-0xdc5eb0d],0x5740e5fe
  407820:	add    dh,ah
  407822:	aad    0xb6
  407824:	mov    esi,gs
  407826:	jge    0x40785b
  407828:	xchg   ecx,eax
  407829:	pusha  
  40782a:	lock fcmovu st,st(3)
  40782d:	jo     0x40785b
  40782f:	push   0xffffff82
  407831:	mov    BYTE PTR [esi+0x95c5eb2],bl
  407837:	or     edi,DWORD PTR [edx+edx*4-0x53]
  40783b:	or     BYTE PTR [edx],0x5a
  40783e:	inc    ebp
  40783f:	aad    0x21
  407841:	push   0x52
  407843:	(bad)  
  407844:	in     eax,dx
  407845:	sbb    BYTE PTR ds:0x9bb769c8,dh
  40784b:	push   ecx
  40784c:	mov    BYTE PTR [edx+0x1122fe4],ch
  407852:	mov    BYTE PTR [edi-0x8],al
  407855:	ds icebp 
  407857:	in     al,0x89
  407859:	outs   dx,BYTE PTR ds:[esi]
  40785a:	push   cs
  40785b:	repz ss dec ebx
  40785e:	cld    
  40785f:	xchg   esi,eax
  407860:	inc    ebp
  407861:	sbb    DWORD PTR [ebp-0x56],esp
  407864:	adc    ah,BYTE PTR [edx-0x49]
  407867:	pop    ebp
  407868:	or     BYTE PTR [ecx+0x74327fd3],ah
  40786e:	jno    0x40780e
  407870:	push   0xffffffe0
  407872:	stos   BYTE PTR es:[edi],al
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi+0x601a548c],0xffffffb8
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x407888
  407897:	mov    ds:0xcaa0ade4,eax
  40789c:	test   DWORD PTR [eax+0x3f],esp
  40789f:	jno    0x40782f
  4078a1:	mov    WORD PTR [ebx+0x3e],?
  4078a4:	push   esi
  4078a5:	test   al,0x9d
  4078a7:	stos   DWORD PTR es:[edi],eax
  4078a8:	xchg   edi,eax
  4078a9:	data16 lods al,BYTE PTR ds:[esi]
  4078ab:	jmp    0x9b0cd7b5
  4078b0:	pop    ds
  4078b1:	cmp    ebx,DWORD PTR [esi-0x9]
  4078b4:	sub    BYTE PTR [ebp+0x4],dh
  4078b7:	out    dx,al
  4078b8:	add    ebp,ecx
  4078ba:	cmp    al,0x99
  4078bc:	cwde   
  4078bd:	dec    edi
  4078be:	mov    ah,0x4f
  4078c0:	lock push 0xffffffe4
  4078c3:	inc    eax
  4078c4:	xor    dl,BYTE PTR [esi]
  4078c6:	inc    edi
  4078c7:	push   eax
  4078c8:	(bad)  
  4078c9:	ficom  DWORD PTR [ecx-0x4]
  4078cc:	xchg   edi,eax
  4078cd:	xlat   BYTE PTR ds:[ebx]
  4078ce:	das    
  4078cf:	lahf   
  4078d0:	cmp    ecx,edx
  4078d2:	fadd   DWORD PTR [edx+0x5cd6f26e]
  4078d8:	out    dx,al
  4078d9:	dec    edx
  4078da:	or     al,0xdf
  4078dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078dd:	cmp    ebp,DWORD PTR [eax+0xa]
  4078e0:	fimul  WORD PTR [esi-0x596caf83]
  4078e6:	or     BYTE PTR [edx+0x66],dl
  4078e9:	inc    edi
  4078ea:	popf   
  4078eb:	xchg   ebp,eax
  4078ec:	test   al,0x66
  4078ee:	data16 xor bh,BYTE PTR [eax-0x2c]
  4078f2:	mov    ch,0x83
  4078f4:	fistp  QWORD PTR [esi]
  4078f6:	test   esi,esi
  4078f8:	jae    0x4078e5
  4078fa:	cld    
  4078fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078fc:	xor    DWORD PTR [edi+eax*4+0x22],ebx
  407900:	xchg   esp,eax
  407901:	enter  0x8a3,0x32
  407905:	lock jb 0x407943
  407908:	dec    ebx
  407909:	ins    BYTE PTR es:[edi],dx
  40790a:	xchg   ecx,eax
  40790b:	fld    TBYTE PTR [ecx-0x3db4af3f]
  407911:	mov    ebp,ebx
  407913:	adc    al,0x11
  407915:	popf   
  407916:	inc    esp
  407917:	cmp    ecx,eax
  407919:	lock mov ch,0xe1
  40791c:	fsub   QWORD PTR [ecx+0x757b8ac8]
  407922:	imul   edi
  407924:	jno    0x407911
  407926:	cs jle 0x40798f
  407929:	inc    esi
  40792a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40792b:	and    esp,ecx
  40792d:	xchg   ecx,eax
  40792e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40792f:	xchg   edi,eax
  407930:	cli    
  407931:	mov    ah,0x36
  407933:	cmp    DWORD PTR [ecx],esi
  407935:	cwde   
  407936:	mov    al,0xc7
  407938:	pop    ebx
  407939:	ins    BYTE PTR es:[edi],dx
  40793a:	loop   0x40796a
  40793c:	idiv   DWORD PTR [eax+esi*2]
  40793f:	ja     0x407900
  407941:	fsubr  QWORD PTR [edx]
  407943:	push   esp
  407944:	test   al,0x91
  407946:	or     DWORD PTR [edi-0xe69ca8c],edx
  40794c:	mov    ebp,0x9cf88a33
  407951:	sbb    esp,DWORD PTR [ebx+eiz*2-0x259007e5]
  407958:	shl    BYTE PTR [esi+0x37d1c21f],cl
  40795e:	cmp    cl,dl
  407960:	fbld   TBYTE PTR [eax-0x671232e5]
  407966:	repnz shl DWORD PTR [edi+0x4e],cl
  40796a:	or     al,0xbc
  40796c:	sbb    edi,0x3269e38b
  407972:	das    
  407973:	add    edi,esp
  407975:	lahf   
  407976:	out    dx,al
  407977:	js     0x407933
  407979:	jp     0x407914
  40797b:	dec    edi
  40797c:	sbb    edx,edx
  40797e:	inc    ecx
  40797f:	lds    esp,FWORD PTR [ecx+ecx*2+0x77]
  407983:	xchg   esp,eax
  407984:	in     eax,dx
  407985:	imul   esp,DWORD PTR [ebx],0x203c1c44
  40798b:	ja     0x4079ac
  40798d:	mov    bh,0x4e
  40798f:	inc    edi
  407990:	ret    
  407991:	shl    DWORD PTR [esi-0x5a],0x81
  407995:	not    DWORD PTR [edx]
  407997:	xor    BYTE PTR [ecx-0x3f4a3ed4],bl
  40799d:	test   al,0xef
  40799f:	jge    0x40795c
  4079a1:	mov    cs,WORD PTR [eax+0x1b]
  4079a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a5:	inc    eax
  4079a6:	fidivr WORD PTR [ecx+0x325291c6]
  4079ac:	mov    al,ds:0xdb388ed7
  4079b1:	sbb    al,0x9
  4079b3:	mov    ebp,0x1317d548
  4079b8:	dec    ebx
  4079b9:	js     0x407994
  4079bb:	les    ebp,FWORD PTR [ebx+0x5eac9dd]
  4079c1:	or     al,0x18
  4079c3:	add    cl,dl
  4079c5:	jbe    0x4079d8
  4079c7:	xchg   esp,eax
  4079c8:	ret    
  4079c9:	ins    BYTE PTR es:[edi],dx
  4079ca:	inc    ebp
  4079cb:	dec    esp
  4079cc:	mov    edi,0x8b62d247
  4079d1:	data16 aad 0x45
  4079d4:	pushf  
  4079d5:	jnp    0x4079a1
  4079d7:	test   al,0xfb
  4079d9:	cmc    
  4079da:	iret   
  4079db:	jle    0x407a1e
  4079dd:	adc    DWORD PTR ds:0x31120696,esi
  4079e3:	sub    eax,0xdfb3a49
  4079e8:	xchg   esp,eax
  4079e9:	bound  esi,QWORD PTR [eax-0x6fe0c353]
  4079ef:	mov    bl,0x91
  4079f1:	mov    dl,0xe5
  4079f3:	jg     0x407975
  4079f5:	add    ebp,ebx
  4079f7:	pop    edx
  4079f8:	int    0xee
  4079fa:	ret    
  4079fb:	xchg   esi,eax
  4079fc:	retf   
  4079fd:	ret    0x26a3
  407a00:	(bad)  
  407a01:	xchg   ecx,eax
  407a02:	jnp    0x4079b6
  407a04:	test   DWORD PTR [ebx+0x458bf855],ecx
  407a0a:	cld    
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx+0x63],0x67
  407a27:	es int3 
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0xffbef8b1
  407a32:	mov    cl,0xe
  407a34:	xor    al,0x5a
  407a36:	pop    esp
  407a37:	imul   ebp,DWORD PTR [ebp-0x44],0xffffffe8
  407a3b:	std    
  407a3c:	sbb    DWORD PTR [edx],esp
  407a3e:	jle    0x407ab9
  407a40:	dec    ebx
  407a41:	fs int 0x80
  407a44:	ror    al,cl
  407a46:	loop   0x4079cb
  407a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a49:	xchg   DWORD PTR [eax-0x32],ebx
  407a4c:	cld    
  407a4d:	test   eax,0xb6e28a32
  407a52:	mov    esi,0x11f40c55
  407a57:	push   ss
  407a58:	popf   
  407a59:	js     0x4079fb
  407a5b:	rol    BYTE PTR [ecx-0x71],0xa0
  407a5f:	adc    dh,BYTE PTR [ebx-0x48]
  407a62:	pop    esp
  407a63:	clc    
  407a64:	add    eax,0xf86be450
  407a69:	mov    ecx,0x660693ff
  407a6e:	inc    eax
  407a6f:	call   0x8bcc:0x62f5d5d5
  407a76:	in     eax,dx
  407a77:	mov    edi,0xe89040a2
  407a7c:	sub    al,0xd3
  407a7e:	in     al,0xba
  407a80:	jno    0x407a58
  407a82:	inc    edx
  407a83:	jns    0x407a7e
  407a85:	sub    ch,dl
  407a87:	adc    BYTE PTR [edx-0x53dac395],ch
  407a8d:	loop   0x407a2d
  407a8f:	jbe    0x407a7c
  407a91:	mov    dh,0x3b
  407a93:	call   0x32b5:0x1cbfa71
  407a9a:	or     BYTE PTR [edi+0x69872dc2],bl
  407aa0:	repz fs jbe 0x407aff
  407aa4:	push   eax
  407aa5:	push   ebp
  407aa6:	add    DWORD PTR [eax-0x76],esp
  407aa9:	xchg   ebp,eax
  407aaa:	(bad)  
  407aab:	jle    0x407a8a
  407aad:	xchg   edi,eax
  407aae:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407ab0:	lea    ebx,ds:[edx+0x41]
  407ab4:	cmp    eax,0xa61bb6b3
  407ab9:	mov    eax,DWORD PTR [edi-0xdac6dbb]
  407abf:	adc    esi,DWORD PTR [edx]
  407ac1:	test   eax,0xccd42c10
  407ac6:	mov    ah,0x49
  407ac8:	mov    ebp,0x4f689a5b
  407acd:	call   0xa4ef:0x8c3efefb
  407ad4:	sub    DWORD PTR [edx+0x7d],ecx
  407ad7:	sbb    BYTE PTR [ebx+0x1503f10b],0xd1
  407ade:	fisub  WORD PTR [edx]
  407ae0:	shl    DWORD PTR es:[ebx-0x5afbc6c2],0xa6
  407ae8:	mov    eax,0x20c0f458
  407aed:	mov    dh,0x49
  407aef:	sub    ebx,DWORD PTR [edx]
  407af1:	fs mov cl,0x35
  407af4:	jns    0x407ac5
  407af6:	or     ecx,eax
  407af8:	hlt    
  407af9:	ret    0xc8cf
  407afc:	outs   dx,DWORD PTR ds:[esi]
  407afd:	cli    
  407afe:	fdiv   QWORD PTR [edi+0x1b]
  407b01:	shr    ch,1
  407b03:	xor    ah,BYTE PTR [edx+0x30c08f27]
  407b09:	mov    dh,0xb3
  407b0b:	mov    ah,0x24
  407b0d:	mov    al,0x42
  407b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b10:	fwait
  407b11:	inc    eax
  407b12:	or     BYTE PTR [ecx],cl
  407b14:	jns    0x407a98
  407b16:	jae    0x407aa2
  407b18:	div    esi
  407b1a:	pop    edi
  407b1b:	mov    dl,0x3a
  407b1d:	add    DWORD PTR [eax-0x6],esi
  407b20:	pop    esp
  407b21:	test   BYTE PTR [ecx-0x71],cl
  407b24:	ror    edi,cl
  407b26:	lahf   
  407b27:	push   ds
  407b28:	add    BYTE PTR [edx-0x3],al
  407b2b:	cwde   
  407b2c:	pushf  
  407b2d:	clc    
  407b2e:	push   eax
  407b2f:	xchg   esp,eax
  407b30:	aas    
  407b31:	xor    ah,dh
  407b33:	mov    DWORD PTR [edi-0x48],edx
  407b36:	sbb    edx,DWORD PTR [edx+edx*1+0xaacc148]
  407b3d:	int    0x18
  407b3f:	inc    edx
  407b40:	mov    ah,0xcc
  407b42:	sbb    bl,BYTE PTR [esi]
  407b44:	pop    es
  407b45:	fcmovnbe st,st(7)
  407b47:	inc    ecx
  407b48:	or     esi,DWORD PTR [ebx+0x3ea533f9]
  407b4e:	xor    al,0x39
  407b50:	xor    BYTE PTR [ebx-0x6291230e],bl
  407b56:	mov    cl,0x48
  407b58:	mov    eax,0x68b89cfa
  407b5d:	and    BYTE PTR [ecx-0xe],al
  407b60:	cmp    dl,dl
  407b62:	mov    edx,0x1b05c9ea
  407b67:	adc    DWORD PTR [edx-0x6be6c647],ebx
  407b6d:	xor    edi,esi
  407b6f:	cld    
  407b70:	mov    ch,0x28
  407b72:	pop    ecx
  407b73:	mov    ebp,0x8a41699a
  407b78:	data16 mov ds:0x518fbe9,al
  407b7e:	test   al,0xdb
  407b80:	daa    
  407b81:	retf   0xd23d
  407b84:	pop    esi
  407b85:	ins    BYTE PTR es:[edi],dx
  407b86:	cmp    edi,DWORD PTR [ebx]
  407b88:	fild   WORD PTR [esp+ebx*8+0x4d20488c]
  407b8f:	aas    
  407b90:	popa   
  407b91:	icebp  
  407b92:	push   cs
  407b93:	not    BYTE PTR [eax]
  407b95:	sbb    ch,BYTE PTR [edi+eiz*4+0x5d3ca981]
  407b9c:	cmc    
  407b9d:	int    0xc4
  407b9f:	fiadd  DWORD PTR [ebx]
  407ba1:	jge    0x407bb3
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417e3d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417e3d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417e3d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417e3d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417e3d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41237c,0x41abd2
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41abd2,0x0
  407c72:	push   DWORD PTR ds:0x41abd2
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41abd2,esi
  407c80:	cmp    DWORD PTR ds:0x41abd2,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41abde
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41abd2,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x412354,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x9875:0x3fdba79
  407cce:	out    dx,eax
  407ccf:	jmp    0xdcbefae7
  407cd4:	jg     0x407d54
  407cd6:	jle    0x407c88
  407cd8:	ret    
  407cd9:	daa    
  407cda:	dec    edx
  407cdb:	push   cs
  407cdc:	jge    0x407cbe
  407cde:	lea    ecx,[ecx]
  407ce0:	jne    0x407d45
  407ce2:	xchg   edi,eax
  407ce3:	and    DWORD PTR [edi-0x6fc55339],eax
  407ce9:	jl     0x407d46
  407ceb:	scas   eax,DWORD PTR es:[edi]
  407cec:	and    DWORD PTR [ebx],edi
  407cee:	mov    WORD PTR [esi+0x3f],es
  407cf1:	mul    edi
  407cf3:	in     al,dx
  407cf4:	push   ebx
  407cf5:	dec    edi
  407cf6:	fwait
  407cf7:	xor    al,0x20
  407cf9:	jne    0x407d0c
  407cfb:	(bad)  
  407cfd:	shl    BYTE PTR [ebp-0x31],0xcb
  407d01:	outs   dx,DWORD PTR ds:[esi]
  407d02:	push   cs
  407d03:	or     al,0x10
  407d05:	aad    0xf9
  407d07:	lds    esp,FWORD PTR ds:0xd34c6410
  407d0d:	or     DWORD PTR ds:0x81eb1f4d,edi
  407d13:	fcomi  st,st(1)
  407d15:	jecxz  0x407cf4
  407d17:	xchg   BYTE PTR [edx+0x6e],ch
  407d1a:	pop    es
  407d1b:	shl    DWORD PTR [ebp+0x6465e88b],1
  407d21:	mov    es,WORD PTR [edx]
  407d23:	jge    0x407d4f
  407d25:	leave  
  407d26:	jmp    0x551383a1
  407d2b:	(bad)  
  407d2c:	fstp   DWORD PTR [edx]
  407d2e:	push   esp
  407d2f:	shl    DWORD PTR [eax+0x7a56dfa4],cl
  407d35:	imul   esp,DWORD PTR [ecx+0x17],0xffffffc7
  407d39:	push   ebp
  407d3a:	in     eax,0x19
  407d3c:	inc    edi
  407d3d:	ins    BYTE PTR es:[edi],dx
  407d3e:	or     eax,0x3f23c63b
  407d43:	sti    
  407d44:	jmp    0x6f9f3c49
  407d49:	mov    cl,0xab
  407d4b:	pusha  
  407d4c:	mov    eax,0xe6f7f591
  407d51:	mov    al,ds:0x27b2d383
  407d56:	mov    ?,WORD PTR [eax]
  407d58:	sti    
  407d59:	aaa    
  407d5a:	jp     0x407cee
  407d5c:	sahf   
  407d5d:	stos   DWORD PTR es:[edi],eax
  407d5e:	jg     0x407da5
  407d60:	rcl    dh,1
  407d62:	stc    
  407d63:	dec    ecx
  407d64:	mov    ebx,0x3753c37e
  407d69:	or     edx,DWORD PTR [esi-0x3bab299f]
  407d6f:	mov    al,0x27
  407d71:	pop    ebx
  407d72:	mov    ecx,ebp
  407d74:	ins    BYTE PTR es:[edi],dx
  407d75:	jmp    0x64ac20db
  407d7a:	and    DWORD PTR [ecx],ecx
  407d7c:	shr    BYTE PTR [edx-0x1949f250],0xd9
  407d83:	sub    eax,0xc0a8afba
  407d88:	js     0x407da4
  407d8a:	push   esp
  407d8b:	je     0x407dc5
  407d8d:	out    dx,al
  407d8e:	pop    ebx
  407d8f:	mov    ah,0xed
  407d91:	pop    edi
  407d92:	mov    eax,ds:0xea6394be
  407d97:	outs   dx,DWORD PTR ds:[esi]
  407d98:	mov    edx,0x479a7ca9
  407d9d:	jp     0x407d43
  407d9f:	pop    ebp
  407da0:	cmp    al,0x7b
  407da2:	loope  0x407de2
  407da4:	addr16 cwde 
  407da6:	sbb    ebp,edx
  407da8:	jb     0x407e05
  407daa:	stc    
  407dab:	and    DWORD PTR ds:0x90330a88,ebp
  407db1:	ret    
  407db2:	xchg   esi,eax
  407db3:	or     DWORD PTR [esi+0x42],ebp
  407db6:	leave  
  407db7:	lahf   
  407db8:	xor    al,BYTE PTR [edx+0xa2b3bcb]
  407dbe:	adc    dl,BYTE PTR [esi-0x19666315]
  407dc4:	retf   0xe3a9
  407dc7:	aam    0x54
  407dc9:	mov    ebx,esp
  407dcb:	stos   BYTE PTR es:[edi],al
  407dcc:	mov    edi,0x15b8acda
  407dd1:	xchg   BYTE PTR [eax-0x53],bh
  407dd4:	sub    al,ch
  407dd6:	ss jge 0x407ded
  407dd9:	mov    cl,0x43
  407ddb:	dec    edi
  407ddc:	dec    ecx
  407ddd:	popf   
  407dde:	dec    ecx
  407ddf:	xchg   edx,eax
  407de0:	in     eax,0x3c
  407de2:	in     eax,dx
  407de3:	call   0x1b34:0x8cc7651e
  407dea:	xchg   BYTE PTR [eax-0x1d265e9c],dl
  407df0:	fcomp  QWORD PTR [edx+0x2c]
  407df3:	stc    
  407df4:	lock loop 0x407da9
  407df7:	ja     0x407db5
  407df9:	sbb    eax,0x54b49454
  407dfe:	sbb    DWORD PTR [ecx+0x1ba5856f],0x25
  407e05:	fisttp DWORD PTR [ebp+0x6e10fe26]
  407e0b:	out    dx,al
  407e0c:	dec    edi
  407e0d:	cwde   
  407e0e:	(bad)  
  407e0f:	xlat   BYTE PTR ds:[ebx]
  407e10:	pop    es
  407e11:	sub    BYTE PTR [edx+0x33],ah
  407e14:	sahf   
  407e15:	mov    es,esi
  407e17:	in     eax,dx
  407e18:	rcr    DWORD PTR [ebp+0x4f],cl
  407e1b:	pop    esp
  407e1c:	mov    ebp,0x8d6ec81b
  407e21:	add    ecx,DWORD PTR [edx-0x3c8e931]
  407e27:	jecxz  0x407dde
  407e29:	loop   0x407e99
  407e2b:	and    ah,BYTE PTR [ebx]
  407e2d:	outs   dx,DWORD PTR ds:[esi]
  407e2e:	es push ds
  407e30:	or     eax,0xb4b30788
  407e35:	cs push ecx
  407e37:	jl     0x407de0
  407e39:	cmp    eax,esi
  407e3b:	mov    DWORD PTR ds:0x41abe2,0x45d5
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    DWORD PTR [ebx-0x7],esi
  407e85:	(bad)  
  407e86:	xchg   esp,eax
  407e87:	dec    edi
  407e88:	adc    BYTE PTR [esi+0x7e],bh
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e43
  407e90:	ja     0x407f03
  407e92:	xor    ecx,eax
  407e94:	add    edx,DWORD PTR [edi+0x16b361d0]
  407e9a:	pop    eax
  407e9b:	inc    edx
  407e9c:	lock jo 0x407eff
  407e9f:	xor    al,0xca
  407ea1:	and    DWORD PTR [ecx+0x23],eax
  407ea4:	fst    st(4)
  407ea6:	push   ebx
  407ea7:	xchg   ecx,eax
  407ea8:	sub    eax,0xbf339d42
  407ead:	outs   dx,DWORD PTR ds:[esi]
  407eae:	rol    DWORD PTR [ebx-0x5],cl
  407eb1:	rol    esp,0xdf
  407eb4:	mov    fs,WORD PTR [edx]
  407eb6:	mov    al,ds:0xe7345ace
  407ebb:	enter  0x555e,0x34
  407ebf:	cmp    DWORD PTR [edx-0x28ba18ad],edx
  407ec5:	cdq    
  407ec6:	bound  eax,QWORD PTR [ebp+ebp*2+0x11]
  407eca:	jae    0x407e9c
  407ecc:	xchg   ebp,eax
  407ecd:	sub    al,0x9f
  407ecf:	dec    esp
  407ed0:	pop    esi
  407ed1:	xchg   ebx,eax
  407ed2:	iret   
  407ed3:	imul   edx,ebx,0x21abd7f1
  407ed9:	ret    
  407eda:	es pop ss
  407edc:	aam    0xb9
  407ede:	pop    ebp
  407edf:	jecxz  0x407f0a
  407ee1:	mov    eax,0xb3ab7483
  407ee6:	sub    bl,BYTE PTR [ebp+0x74]
  407ee9:	sti    
  407eea:	add    eax,DWORD PTR [ecx]
  407eec:	sbb    al,0xf3
  407eee:	ins    BYTE PTR es:[edi],dx
  407eef:	aam    0xdc
  407ef1:	push   0x82e4f983
  407ef6:	push   ds
  407ef7:	out    0xa7,al
  407ef9:	in     al,0x17
  407efb:	je     0x407f17
  407efd:	mov    WORD PTR [esi],es
  407eff:	and    edi,DWORD PTR [ecx+0x7ce47982]
  407f05:	mov    ebp,0xed98c89d
  407f0a:	pop    ecx
  407f0b:	sub    bh,BYTE PTR [edi-0x312774bc]
  407f11:	xchg   BYTE PTR [eax],dl
  407f13:	stos   DWORD PTR es:[edi],eax
  407f14:	scas   al,BYTE PTR es:[edi]
  407f15:	int    0xf8
  407f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f18:	jl     0x407ee0
  407f1a:	adc    ch,al
  407f1c:	stc    
  407f1d:	(bad)  
  407f1e:	stc    
  407f1f:	pop    ds
  407f20:	jne    0x407f7f
  407f22:	popw   ss
  407f24:	loopne 0x407f73
  407f26:	sub    esi,DWORD PTR [ebx+eax*2-0x3c]
  407f2a:	ins    DWORD PTR es:[edi],dx
  407f2b:	pop    edx
  407f2c:	outs   dx,BYTE PTR ds:[esi]
  407f2d:	sbb    DWORD PTR [edx-0x3c60ca0],ebp
  407f33:	pusha  
  407f34:	test   al,0xf2
  407f36:	xor    eax,0x6a0274a5
  407f3b:	push   es
  407f3c:	pop    ds
  407f3d:	add    eax,edi
  407f3f:	xchg   ebx,eax
  407f40:	adc    BYTE PTR [ebx],0x4a
  407f43:	addr16 (bad) 
  407f45:	mov    cl,0x97
  407f47:	jo     0x407f7d
  407f49:	cli    
  407f4a:	aas    
  407f4b:	add    al,0x8a
  407f4d:	jno    0x407ed4
  407f4f:	nop
  407f50:	jno    0x407f8a
  407f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f53:	mov    ebx,0x268bca33
  407f58:	sbb    eax,0x4bb289d1
  407f5d:	jle    0x407f09
  407f5f:	sbb    al,0x70
  407f61:	in     eax,0x6
  407f63:	pop    es
  407f64:	(bad)  
  407f65:	mov    cl,0x9f
  407f67:	(bad)  
  407f68:	out    dx,al
  407f69:	jnp    0x407f4c
  407f6b:	mov    edi,0x1aba9b99
  407f70:	mov    cl,0x61
  407f72:	pop    edx
  407f73:	mov    esi,0x1f798647
  407f78:	je     0x407f13
  407f7a:	lds    eax,FWORD PTR [ecx]
  407f7c:	cmp    al,0xf8
  407f7e:	mov    cs,WORD PTR [edx+eax*8-0x60008003]
  407f85:	cmp    ch,BYTE PTR [ecx*8-0xeb0d110]
  407f8c:	add    edi,edx
  407f8e:	cmp    ecx,ebx
  407f90:	sbb    esp,edx
  407f92:	pop    esp
  407f93:	mov    esi,0x3f132a4d
  407f98:	rcl    DWORD PTR [eax],cl
  407f9a:	mov    ch,0xd1
  407f9c:	xchg   edx,edx
  407f9e:	mov    bl,0xa7
  407fa0:	stos   BYTE PTR es:[edi],al
  407fa1:	pop    eax
  407fa2:	jb     0x407f7d
  407fa4:	sub    DWORD PTR [eax-0x69],ebp
  407fa7:	sbb    edi,DWORD PTR [edi-0x3bb7a53]
  407fad:	int    0x51
  407faf:	dec    ebp
  407fb0:	cmp    dh,BYTE PTR [eax]
  407fb2:	and    DWORD PTR [ecx+ecx*1-0x4102fd38],edx
  407fb9:	and    edi,ecx
  407fbb:	jns    0x407f9f
  407fbd:	xor    BYTE PTR [ebx+0x71],cl
  407fc0:	jnp    0x407f5f
  407fc2:	aaa    
  407fc3:	adc    ch,BYTE PTR [edi+0x6a2f2d14]
  407fc9:	or     BYTE PTR [esi],al
  407fcb:	shl    DWORD PTR [ecx-0x22],0xe
  407fcf:	jnp    0x407f9d
  407fd1:	ficom  WORD PTR [esi+0x3d]
  407fd4:	or     al,0xba
  407fd6:	or     bl,dh
  407fd8:	pop    es
  407fd9:	test   DWORD PTR [ebp+0x35fbb42c],eax
  407fdf:	aas    
  407fe0:	pop    ebx
  407fe1:	fs push ebx
  407fe3:	aaa    
  407fe4:	jmp    0x40036d75
  407fe9:	and    al,BYTE PTR [edx]
  407feb:	cld    
  407fec:	out    0x62,eax
  407fee:	mov    esp,0xc1339020
  407ff3:	add    eax,edx
  407ff5:	mov    ds:0x40d64c,eax
  407ffa:	mov    eax,DWORD PTR [ebp+0xc]
  407ffd:	jmp    0x40817c
  408002:	and    ebp,DWORD PTR [edi]
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	push   0x2d07b9df
  408013:	push   ss
  408014:	jle    0x408094
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x408036
  40801b:	push   ecx
  40801c:	inc    edx
  40801d:	jle    0x407fe8
  40801f:	arpl   WORD PTR [edi],cx
  408021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408022:	outs   dx,BYTE PTR ds:[esi]
  408023:	xlat   BYTE PTR ds:[ebx]
  408024:	icebp  
  408025:	(bad)  
  408026:	aam    0xcf
  408028:	or     esi,DWORD PTR [ecx-0x74e808b9]
  40802e:	push   ebp
  40802f:	stos   BYTE PTR es:[edi],al
  408030:	sbb    edi,eax
  408032:	sub    dl,BYTE PTR [esi-0x45]
  408035:	aaa    
  408036:	test   DWORD PTR [eax-0x61ee5ff0],0xd907d895
  408040:	cmp    DWORD PTR [ecx+0x11],ebx
  408043:	jae    0x407fe2
  408045:	test   eax,0x88019cb9
  40804a:	add    al,0x37
  40804c:	mov    BYTE PTR [ebx],dl
  40804e:	pop    edx
  40804f:	scas   eax,DWORD PTR es:[edi]
  408050:	lods   eax,DWORD PTR ds:[esi]
  408051:	fsub   QWORD PTR [ebx+0x61]
  408054:	push   0xc928b32f
  408059:	push   edx
  40805a:	add    bl,ch
  40805c:	adc    eax,0xa67522eb
  408061:	stos   DWORD PTR es:[edi],eax
  408062:	cli    
  408063:	sar    DWORD PTR [ecx-0x1a],cl
  408066:	mov    al,0x29
  408068:	nop
  408069:	fwait
  40806a:	jg     0x40806a
  40806c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40806d:	mov    ds,WORD PTR [eax]
  40806f:	mov    ch,bl
  408071:	out    0xa7,eax
  408073:	mov    edx,0x2acf1e49
  408078:	jo     0x4080b9
  40807a:	pop    ss
  40807b:	add    eax,0xdd8f294c
  408080:	push   ebp
  408081:	add    ebx,DWORD PTR ds:0x936e048e
  408087:	sbb    DWORD PTR [ebp+0x70],esi
  40808a:	das    
  40808b:	or     dl,BYTE PTR [eax]
  40808d:	data16 repz mov bl,0xe0
  408091:	jbe    0x4080d4
  408093:	imul   ecx,DWORD PTR [edx-0x73],0x40
  408097:	inc    DWORD PTR [edi*2+0x5dbf4f1d]
  40809e:	dec    esp
  40809f:	mov    esi,0x4a2e97b6
  4080a4:	and    eax,0x21e1a9d
  4080a9:	cmp    edx,DWORD PTR [ebp-0x45a06c73]
  4080af:	leave  
  4080b0:	es ret 
  4080b2:	std    
  4080b3:	push   esi
  4080b4:	ds mov ebx,0x8440b643
  4080ba:	adc    eax,0xec7a41d9
  4080bf:	and    BYTE PTR [edi-0x63d9897d],ah
  4080c5:	std    
  4080c6:	sbb    al,ch
  4080c8:	ret    
  4080c9:	and    al,0x55
  4080cb:	mov    ah,0x62
  4080cd:	xor    dl,0x80
  4080d0:	aad    0x95
  4080d2:	test   al,0xf4
  4080d4:	rcr    DWORD PTR [ebx+0x12374f0d],0xce
  4080db:	mov    esp,0x6c9aa689
  4080e0:	icebp  
  4080e1:	es xchg edi,eax
  4080e3:	test   eax,0xd25a504a
  4080e8:	aad    0x75
  4080ea:	cdq    
  4080eb:	inc    ebx
  4080ec:	jae    0x40811b
  4080ee:	out    dx,al
  4080ef:	sbb    al,0xb0
  4080f1:	dec    edi
  4080f2:	inc    edx
  4080f3:	(bad)  
  4080f4:	js     0x408137
  4080f6:	aas    
  4080f7:	test   DWORD PTR [esi],0xae73c720
  4080fd:	repz in al,0x4
  408100:	push   edx
  408101:	outs   dx,BYTE PTR ds:[esi]
  408102:	ficomp WORD PTR [ebx*1+0x3570fd5f]
  408109:	mov    ah,0xc3
  40810b:	mov    WORD PTR [ebp+0x3d],?
  40810e:	psubd  mm4,QWORD PTR gs:[edx]
  408112:	mov    bh,BYTE PTR [eax-0x66dec52b]
  408118:	addr16 jbe 0x4080de
  40811b:	jo     0x4080e4
  40811d:	add    ecx,edx
  40811f:	(bad)  
  408120:	call   0x2b1d5604
  408125:	loope  0x408156
  408127:	jbe    0x40810b
  408129:	xor    BYTE PTR [esi+0x79],bh
  40812c:	pop    DWORD PTR [edx+0x7adcf666]
  408132:	and    esp,esi
  408134:	dec    ebp
  408135:	push   cs
  408136:	fs imul ebx,DWORD PTR ss:[esi],0xffffffd1
  40813b:	adc    bh,BYTE PTR [ecx]
  40813d:	add    edx,DWORD PTR [ebx-0x53]
  408140:	bound  eax,QWORD PTR [edx+0x40e3f09a]
  408146:	pop    edi
  408147:	and    BYTE PTR [ecx-0x7d],0xac
  40814b:	mov    dh,0x0
  40814d:	pop    edi
  40814e:	(bad)  [eax]
  408150:	dec    DWORD PTR [ebx+0x69b0898]
  408156:	sub    eax,0x76a7b800
  40815b:	lea    edi,[ecx]
  40815d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40815e:	(bad)  
  408160:	jae    0x4080f9
  408162:	cmp    DWORD PTR [eax-0x1eb0335f],ebx
  408168:	call   0x7ac904d5
  40816d:	mov    dh,0x7a
  40816f:	mov    edi,0xc8834fdb
  408174:	cld    
  408175:	rol    edi,cl
  408177:	and    BYTE PTR [ebx+0x339cbde0],bh
  40817d:	rol    DWORD PTR [ebx],0xc2
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	fisubr WORD PTR es:[ebx+0x1783e6a7]
  4081a6:	jle    0x408226
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x408175
  4081ad:	repnz xchg esi,eax
  4081af:	in     eax,0xad
  4081b1:	icebp  
  4081b2:	aaa    
  4081b3:	fwait
  4081b4:	xlat   BYTE PTR ds:[ebx]
  4081b5:	inc    eax
  4081b6:	out    0xfc,eax
  4081b8:	mov    ebx,0x59673e02
  4081bd:	inc    edi
  4081be:	lahf   
  4081bf:	fild   WORD PTR [edi+0x31]
  4081c2:	dec    ebx
  4081c3:	xor    DWORD PTR [edi],ebp
  4081c5:	mov    edx,0xb66b7a0d
  4081ca:	or     eax,0x1be00c15
  4081cf:	lahf   
  4081d0:	int    0x81
  4081d2:	(bad)  
  4081d3:	cmc    
  4081d4:	test   BYTE PTR ds:0x994a57f5,dh
  4081da:	fisubr WORD PTR ds:0xb76bcaa0
  4081e0:	pop    ss
  4081e1:	mov    ebx,0x215602b2
  4081e6:	dec    eax
  4081e7:	inc    esi
  4081e8:	mov    WORD PTR [edx+ebp*1],?
  4081eb:	or     cl,al
  4081ed:	or     DWORD PTR [eax-0x15],eax
  4081f0:	push   esp
  4081f1:	adc    dh,BYTE PTR [esi-0xc3c5265]
  4081f7:	adc    BYTE PTR [ebx-0x1e],bh
  4081fa:	add    DWORD PTR [esp+ecx*1],ecx
  4081fd:	test   BYTE PTR [edx-0x31],0x6c
  408201:	je     0x4081a4
  408203:	and    al,0x1a
  408205:	nop
  408206:	or     ebx,eax
  408208:	lds    ebp,FWORD PTR ds:0x36167aa4
  40820e:	adc    al,BYTE PTR [ebx+ecx*2-0x604704d7]
  408215:	jle    0x4081c6
  408217:	jno    0x4081d2
  408219:	mov    ds:0xb09092c6,eax
  40821e:	inc    eax
  40821f:	loop   0x408210
  408221:	arpl   WORD PTR [ebx+edx*1+0x264af6f9],bx
  408228:	scas   eax,DWORD PTR es:[edi]
  408229:	fstp   QWORD PTR [edx-0x3]
  40822c:	nop
  40822d:	sbb    eax,0x50cddea4
  408232:	pusha  
  408233:	jb     0x4081d5
  408235:	dec    esi
  408236:	jg     0x408210
  408238:	sub    ecx,DWORD PTR [edi+0x7a]
  40823b:	push   esp
  40823c:	pop    esp
  40823d:	inc    esp
  40823e:	cmp    al,0x81
  408240:	adc    bh,BYTE PTR [ebp+ecx*4-0x144eb162]
  408247:	(bad)  
  408248:	retf   0x8bf7
  40824b:	sbb    al,0x9f
  40824d:	pop    eax
  40824e:	or     al,0x76
  408250:	test   DWORD PTR [eax+eiz*2+0x2a7a6b08],0xc720dcf
  40825b:	jbe    0x40820c
  40825d:	repnz out 0x2,al
  408260:	dec    esp
  408261:	push   edi
  408262:	inc    ecx
  408263:	mov    eax,0xa6562646
  408268:	push   ss
  408269:	pop    ebp
  40826a:	call   0x22df:0xeaf35878
  408271:	add    bh,dh
  408273:	cmc    
  408274:	mov    bh,0x34
  408276:	xchg   edx,eax
  408277:	leave  
  408278:	repnz pop ss
  40827a:	and    al,dl
  40827c:	mov    eax,0xf9a68e6c
  408281:	sti    
  408282:	inc    esi
  408283:	lods   al,BYTE PTR ds:[esi]
  408284:	adc    esi,esp
  408286:	sahf   
  408287:	faddp  st(1),st
  408289:	rcr    ebp,0x3d
  40828c:	loop   0x40829b
  40828e:	dec    esi
  40828f:	mov    bh,0x59
  408291:	push   es
  408292:	cld    
  408293:	aaa    
  408294:	xor    DWORD PTR [esp+esi*4+0x53],0xebfb189c
  40829c:	jmp    0xb9d1:0x1857146a
  4082a3:	rcr    eax,1
  4082a5:	cmp    eax,0xa1bfc720
  4082aa:	pop    esi
  4082ab:	(bad)  
  4082ac:	adc    eax,edx
  4082ae:	jne    0x40825f
  4082b0:	xor    esi,edx
  4082b2:	sub    DWORD PTR [ebp-0x76],eax
  4082b5:	mov    al,ds:0x5631d426
  4082ba:	pop    ebp
  4082bb:	push   es
  4082bc:	sub    al,0xcb
  4082be:	iret   
  4082bf:	pop    edi
  4082c0:	adc    ebx,0x258297db
  4082c6:	in     eax,dx
  4082c7:	ror    DWORD PTR [eax-0x76],0x3a
  4082cb:	cmc    
  4082cc:	mov    ebp,0x798c296b
  4082d1:	lds    ecx,FWORD PTR [eax+0x6aa7dc0b]
  4082d7:	sbb    dl,BYTE PTR [ecx-0x7830c2df]
  4082dd:	ins    DWORD PTR es:[edi],dx
  4082de:	jg     0x4082b3
  4082e0:	sub    eax,0xb905805a
  4082e5:	jmp    FWORD PTR [ecx]
  4082e7:	mov    ds:0xd9a73580,al
  4082ec:	imul   ecx,DWORD PTR [ebx+0x18b77a3f],0x4f
  4082f3:	in     eax,0x7d
  4082f5:	push   es
  4082f6:	push   ss
  4082f7:	pop    ss
  4082f8:	mov    eax,ds:0x2a80ae47
  4082fd:	jg     0x4082b2
  4082ff:	jne    0x4082db
  408301:	or     edi,ecx
  408303:	or     ecx,DWORD PTR [eax+0x3]
  408306:	mov    ah,0x11
  408308:	clc    
  408309:	dec    edx
  40830a:	popa   
  40830b:	xor    al,0x3d
  40830d:	test   BYTE PTR [ebx+0x40d64c],ah
  408313:	mov    eax,DWORD PTR [ebp+0x8]
  408316:	mov    eax,DWORD PTR [eax]
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4245ca,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4245ca
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4245ca,ecx
  408347:	cmp    DWORD PTR ds:0x4245ca,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4245ca,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4245ca,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4245ca
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4245ca,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412370
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417e55,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417e55
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417e55,eax
  4083b1:	cmp    DWORD PTR ds:0x417e55,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417e55,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4245ca,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415101,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [esp+ebp*2+0x610353c8],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x4083c3
  40840c:	addr16 fucom st(0)
  40840f:	fcom   QWORD PTR ds:0x47e6a259
  408415:	jnp    0x4083ce
  408417:	(bad)  
  408418:	adc    ecx,DWORD PTR [ecx-0xb300933]
  40841e:	jno    0x408465
  408420:	push   esp
  408421:	inc    ecx
  408422:	xchg   BYTE PTR [ecx+0x1],dh
  408425:	icebp  
  408426:	leave  
  408427:	sbb    BYTE PTR fs:0xc542d97d,0x62
  40842f:	pop    edx
  408430:	mov    ds:0x64a4d584,eax
  408435:	loop   0x408464
  408437:	xchg   bh,al
  408439:	jae    0x4083fb
  40843b:	pop    esi
  40843c:	sbb    al,0xf1
  40843e:	xchg   DWORD PTR [edx+0x52ab53b],ecx
  408444:	mov    ch,0x56
  408446:	inc    edx
  408447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408448:	ins    DWORD PTR es:[edi],dx
  408449:	das    
  40844a:	pushf  
  40844b:	sbb    dl,BYTE PTR [ebp+0x65]
  40844e:	vsqrtsd xmm0,xmm3,QWORD PTR [edx]
  408452:	xchg   esi,eax
  408453:	push   ss
  408454:	imul   esi,DWORD PTR [edx+0x5eb687e6],0xffffffa6
  40845b:	ror    ebp,1
  40845d:	jmp    0x408412
  40845f:	cwde   
  408460:	test   eax,0x8d14708c
  408465:	xchg   ecx,eax
  408466:	je     0x40845b
  408468:	dec    eax
  408469:	push   esp
  40846a:	push   es
  40846b:	push   ss
  40846c:	jle    0x4084ec
  40846e:	popa   
  40846f:	aad    0x35
  408471:	daa    
  408472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408473:	mov    ebx,0xb9413e38
  408478:	in     al,dx
  408479:	fimul  WORD PTR [ebx+0x28]
  40847c:	cs jmp 0x4084c4
  40847f:	mov    ds:0x61a23a3d,al
  408484:	fwait
  408485:	and    al,0xca
  408487:	xchg   ebx,eax
  408488:	call   0x29cf:0xb443e6ae
  40848f:	outs   dx,DWORD PTR ds:[esi]
  408490:	mov    esp,0x8f6e226d
  408495:	inc    ecx
  408496:	arpl   WORD PTR [ecx],di
  408498:	(bad)  
  408499:	jl     0x4084a2
  40849b:	mov    WORD PTR [ebx+0x6b2be969],?
  4084a1:	xor    DWORD PTR [eax],0xeaa59789
  4084a7:	pop    esp
  4084a8:	xor    DWORD PTR [esi-0x4f805fa6],ebx
  4084ae:	sub    DWORD PTR [ebp+ecx*8+0x45],0x88b6f490
  4084b6:	pop    ecx
  4084b7:	jno    0x408458
  4084b9:	push   0x77
  4084bb:	addr16 dec edx
  4084bd:	pop    esp
  4084be:	push   DWORD PTR [esi-0x1a955508]
  4084c4:	imul   esi,DWORD PTR [ebp+0x3e],0xffffffc2
  4084c8:	ret    0xae6
  4084cb:	cmp    al,0x24
  4084cd:	scas   al,BYTE PTR es:[edi]
  4084ce:	pop    edx
  4084cf:	cmp    DWORD PTR fs:[eax+0x6b],edx
  4084d3:	mov    al,0xda
  4084d5:	test   eax,0x2e2d0440
  4084da:	xor    al,0x92
  4084dc:	xchg   edx,eax
  4084dd:	imul   edi,DWORD PTR [edx-0x4d4007fc],0xe75f0211
  4084e7:	fadd   QWORD PTR [eax-0x2525d267]
  4084ed:	dec    ebx
  4084ee:	test   DWORD PTR ds:0xa5a82a35,0xc2573479
  4084f8:	xor    DWORD PTR [edx+0x19336f0f],0x77
  4084ff:	jbe    0x408570
  408501:	aaa    
  408502:	sbb    bl,BYTE PTR [edi]
  408504:	mov    dl,0x5e
  408506:	xchg   edx,eax
  408507:	leave  
  408508:	pop    esp
  408509:	mov    eax,0x6b25514d
  40850e:	push   edi
  40850f:	clc    
  408510:	addr16 mov esp,0x7e504958
  408516:	inc    esp
  408517:	xor    ax,WORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41abce
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417e49
  40852f:	or     ecx,DWORD PTR ds:0x412374
  408535:	mov    DWORD PTR ds:0x417e49,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0x926a896
  40854d:	xor    al,0xe5
  40854f:	fidivr WORD PTR [ebp+0x2a]
  408552:	jle    0x4085d2
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x40854f
  408559:	jg     0x408595
  40855b:	rep fs ins DWORD PTR es:[edi],dx
  40855e:	ja     0x408596
  408560:	mov    ah,bh
  408562:	mov    dh,0xcf
  408564:	inc    DWORD PTR [eax-0x71]
  408567:	aam    0xef
  408569:	clc    
  40856a:	adc    esp,DWORD PTR ds:0xc4c2181b
  408570:	or     al,0xbc
  408572:	dec    ebx
  408573:	or     ecx,DWORD PTR [edi+0x60106fd6]
  408579:	(bad)  
  40857a:	imul   edx,DWORD PTR [eax+0x4dfc192],0xffffffed
  408581:	adc    ebx,DWORD PTR [edx-0x73]
  408584:	adc    BYTE PTR ds:0x88b4b7a8,ch
  40858a:	mov    ah,0x56
  40858c:	jne    0x408513
  40858e:	pop    ecx
  40858f:	(bad)  [ecx+0x7d]
  408592:	push   ebp
  408593:	out    dx,eax
  408594:	inc    ebp
  408595:	(bad)  
  408596:	aad    0x31
  408598:	cli    
  408599:	mov    bl,0x89
  40859b:	mov    ds:0x9250ffc6,al
  4085a0:	fidivr WORD PTR [ebx]
  4085a2:	cli    
  4085a3:	pop    ebx
  4085a4:	sub    eax,0x641faefa
  4085a9:	leave  
  4085aa:	push   ds
  4085ab:	ss cs lahf 
  4085ae:	inc    esp
  4085af:	pushf  
  4085b0:	mov    eax,0x10e28847
  4085b5:	or     eax,0x7136c7d3
  4085ba:	lods   al,BYTE PTR ds:[esi]
  4085bb:	add    DWORD PTR [eax-0x3f],ebp
  4085be:	mov    edx,0x30871ed5
  4085c3:	sub    BYTE PTR [ebx+0x427186b],dh
  4085c9:	or     cl,ah
  4085cb:	icebp  
  4085cc:	push   ds
  4085cd:	es sbb eax,0x913ca4a7
  4085d3:	icebp  
  4085d4:	or     DWORD PTR [esi-0x2d],ebx
  4085d7:	xchg   ebp,ecx
  4085d9:	mov    edx,0x2a23646a
  4085de:	sti    
  4085df:	mov    ebx,esi
  4085e1:	adc    dl,bh
  4085e3:	nop
  4085e4:	ja     0x4085a9
  4085e6:	aas    
  4085e7:	cmp    al,0x41
  4085e9:	cwde   
  4085ea:	popf   
  4085eb:	mov    bh,BYTE PTR [edi]
  4085ed:	pop    ds
  4085ee:	and    BYTE PTR [eax],bl
  4085f0:	js     0x408661
  4085f2:	xor    bh,BYTE PTR ds:0xd7255ae3
  4085f8:	xchg   esp,ecx
  4085fa:	pop    eax
  4085fb:	mov    DWORD PTR [ebx+0x8f758df],ebx
  408601:	call   0xa61f8dd
  408606:	push   0xb6946c9f
  40860b:	sub    al,0x26
  40860d:	push   ss
  40860e:	enter  0x94b9,0x7
  408612:	sti    
  408613:	jne    0x408671
  408615:	shl    BYTE PTR [ecx+0x27],0x26
  408619:	(bad)
  40861c:	js     0x4085c0
  40861e:	cmp    DWORD PTR [ecx],esi
  408620:	mov    dl,0xe2
  408622:	dec    esp
  408623:	jae    0x408633
  408625:	jg     0x40861a
  408627:	cwde   
  408628:	cld    
  408629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40862a:	scas   eax,DWORD PTR es:[edi]
  40862b:	int    0xb2
  40862d:	and    BYTE PTR [ecx-0x7e6f1156],cl
  408633:	cmp    DWORD PTR [edx+0x8],esp
  408636:	xchg   DWORD PTR [ecx],esi
  408638:	out    dx,eax
  408639:	rol    BYTE PTR [ebx],cl
  40863b:	sub    eax,0xb4f8d0e7
  408640:	mov    ds:0xf794a390,al
  408645:	sbb    eax,0x882cf887
  40864a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40864b:	and    esi,DWORD PTR [esi-0x68]
  40864e:	test   DWORD PTR [edi+0x25f7ae21],ecx
  408654:	sbb    al,0xfa
  408656:	lock push ecx
  408658:	sub    al,0x3
  40865a:	stos   DWORD PTR es:[edi],eax
  40865b:	pop    ebx
  40865c:	retf   
  40865d:	xor    eax,0xf39f292f
  408662:	cmc    
  408663:	push   cs
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417e49
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4245c6,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41510d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41510d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41510d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41510d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41510d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x4150fd,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x4150fd
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x4150fd,ecx
  4086d9:	cmp    DWORD PTR ds:0x4150fd,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41ad87
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x4150fd,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x4150fd
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x4150fd,ecx
  40870b:	cmp    DWORD PTR ds:0x4150fd,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41abe2,0x415105
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	ficom  DWORD PTR [edi+0x954d707]
  408745:	sub    edi,DWORD PTR [esi+0x7e]
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x4086ea
  40874d:	sbb    bl,BYTE PTR [ecx+0x66]
  408750:	fisubr DWORD PTR [esi+0x6e]
  408753:	in     eax,0xec
  408755:	mov    WORD PTR [eax+0x78],fs
  408758:	call   0x5955f962
  40875d:	ss test al,0x72
  408760:	imul   edi,DWORD PTR [ebx-0x1a412b20],0x927fd1e3
  40876a:	cld    
  40876b:	pshufw mm6,mm1,0xcb
  40876f:	pusha  
  408770:	jne    0x40876e
  408772:	out    0x7e,al
  408774:	fisttp DWORD PTR [eax+0x61]
  408777:	fst    st(2)
  408779:	add    BYTE PTR [ebx],dh
  40877b:	xor    eax,0xd53daaa2
  408780:	mov    ds:0x36e67885,eax
  408785:	out    dx,al
  408786:	in     eax,dx
  408787:	push   0xb1cf2b91
  40878c:	jmp    0x7a3774eb
  408791:	jnp    0x4087cd
  408793:	es jmp 0x40872a
  408796:	repnz sbb esi,DWORD PTR [ecx+0x62]
  40879a:	jmp    DWORD PTR [esi-0x5d]
  40879d:	mov    ebx,0xf02e2515
  4087a2:	sbb    DWORD PTR [ebx],esi
  4087a4:	daa    
  4087a5:	mov    esp,0x13a0f748
  4087aa:	jp     0x4087e1
  4087ac:	adc    esi,DWORD PTR [eax+0x26]
  4087af:	stos   BYTE PTR es:[edi],al
  4087b0:	add    ch,BYTE PTR [edi]
  4087b2:	inc    ecx
  4087b3:	push   ds
  4087b4:	jns    0x408750
  4087b6:	cdq    
  4087b7:	sub    ebp,DWORD PTR [edi]
  4087b9:	ret    0xe9f
  4087bc:	jno    0x40878b
  4087be:	add    al,BYTE PTR [edx-0x4e]
  4087c1:	mov    edi,0x6a60ac66
  4087c6:	call   0xe39f886c
  4087cb:	mov    ds:0x313ee94a,al
  4087d0:	mov    edi,eax
  4087d2:	ret    0x30f9
  4087d5:	stc    
  4087d6:	cld    
  4087d7:	jp     0x4087d1
  4087d9:	rcl    BYTE PTR [edx+0x2f],0x91
  4087dd:	mov    ebp,0xb2785429
  4087e2:	sub    al,BYTE PTR ds:[edx+esi*1]
  4087e6:	call   0xdd97152d
  4087eb:	mov    ecx,0xd98a0338
  4087f0:	jg     0x408859
  4087f2:	sahf   
  4087f3:	sub    BYTE PTR [ecx+0x61],ah
  4087f6:	mov    ecx,0x681cee53
  4087fb:	shl    BYTE PTR [edx],0x40
  4087fe:	xor    bh,0x2e
  408801:	push   ecx
  408802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408803:	mov    bl,0x11
  408805:	inc    ebp
  408806:	pop    esp
  408807:	enter  0xb3c6,0xc1
  40880b:	adc    eax,ebx
  40880d:	jp     0x4087c8
  40880f:	mov    cl,0xd9
  408811:	pop    ebx
  408812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408813:	push   es
  408814:	out    dx,eax
  408815:	adc    ebx,DWORD PTR [ebx]
  408817:	sbb    DWORD PTR [esi+0x53e8fc05],eax
  40881d:	in     al,0xa0
  40881f:	out    dx,al
  408820:	mov    edi,0xc29411a1
  408825:	and    ecx,DWORD PTR [ebp-0x2f]
  408828:	adc    esp,esp
  40882a:	adc    ecx,DWORD PTR [esi-0x171fe373]
  408830:	or     eax,0x7d9b19d1
  408835:	xchg   ebx,eax
  408836:	ins    DWORD PTR es:[edi],dx
  408837:	stos   DWORD PTR es:[edi],eax
  408838:	stos   BYTE PTR es:[edi],al
  408839:	test   eax,0x3b096f14
  40883e:	xchg   esp,eax
  40883f:	(bad)  
  408840:	jmp    0x61ed12aa
  408845:	aad    0xee
  408847:	das    
  408848:	test   eax,0xb2f235f5
  40884d:	out    dx,eax
  40884e:	inc    esp
  40884f:	push   eax
  408850:	pop    esi
  408851:	test   eax,0x4462214d
  408856:	xchg   di,ax
  408859:	inc    ebp
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	jo     0x408886
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417e59
  40887b:	sbb    DWORD PTR ds:0x41abde,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41abe6,0x417e51
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417e59,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417e59
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417e59,esi
  4088a8:	cmp    DWORD PTR ds:0x417e59,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ad06
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417e59,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417e59
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417e59,esi
  40890d:	cmp    DWORD PTR ds:0x417e59,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x23d74167],edx
  408951:	sti    
  408952:	lds    eax,FWORD PTR ds:0x7e7e2805
  408958:	or     bh,BYTE PTR [edi+0x7e]
  40895b:	jle    0x408949
  40895d:	out    0x4b,eax
  40895f:	add    BYTE PTR [eax],ch
  408961:	mov    ch,0x25
  408963:	dec    esi
  408964:	xchg   dl,ch
  408966:	ror    dl,0xbe
  408969:	(bad)  
  40896a:	(bad)  
  40896b:	rcl    edx,cl
  40896d:	bound  esp,QWORD PTR [esi-0x33921dc]
  408973:	repnz sub eax,0xb2b0434a
  408979:	add    eax,0x2bd29fe2
  40897e:	jns    0x408925
  408980:	out    dx,al
  408981:	add    DWORD PTR [eax+0x5f],ecx
  408984:	cwde   
  408985:	add    dl,al
  408987:	dec    eax
  408988:	fstp   QWORD PTR [ebp+eiz*8-0x4766e05d]
  40898f:	xor    DWORD PTR [ebp+0x649b3ac7],edi
  408995:	add    dl,BYTE PTR [edi+0x5f]
  408998:	mov    eax,0xd0f5b643
  40899d:	or     eax,0xec54f386
  4089a2:	push   cs
  4089a3:	and    ch,BYTE PTR [edx+0x5a45af78]
  4089a9:	xchg   esp,eax
  4089aa:	les    ebx,FWORD PTR [esi-0x7a63f51f]
  4089b0:	and    dh,al
  4089b2:	lods   al,BYTE PTR ds:[esi]
  4089b3:	and    al,0x1a
  4089b5:	xor    BYTE PTR [ecx-0x5e5dc404],ah
  4089bb:	repnz shr BYTE PTR [esi],0x79
  4089bf:	xor    ah,dh
  4089c1:	popf   
  4089c2:	std    
  4089c3:	or     ebp,ebp
  4089c5:	push   esi
  4089c6:	mov    al,ds:0xff5754b0
  4089cb:	cmp    bl,cl
  4089cd:	das    
  4089ce:	mov    ds:0x3a25bd1b,eax
  4089d3:	repnz fsub DWORD PTR [ebx-0x7e]
  4089d7:	xor    BYTE PTR [eax*1-0x57b1d008],0x8b
  4089df:	push   cs
  4089e0:	pop    ebx
  4089e1:	data16 or BYTE PTR [edx+esi*1+0x17ea19ba],dh
  4089e9:	fsubr  QWORD PTR [ebp+0x6b8a950d]
  4089ef:	fmul   DWORD PTR [eax]
  4089f1:	jg     0x4089b6
  4089f3:	das    
  4089f4:	nop
  4089f5:	stos   BYTE PTR es:[edi],al
  4089f6:	call   DWORD PTR [ebx]
  4089f8:	jl     0x4089b5
  4089fa:	std    
  4089fb:	(bad)  
  4089fc:	mov    ah,0x78
  4089fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ff:	push   cs
  408a00:	loopne 0x4089cf
  408a02:	call   0x8c5e5871
  408a07:	ret    
  408a08:	popf   
  408a09:	not    DWORD PTR [edx+0x7a]
  408a0c:	mov    DWORD PTR [eax+esi*4+0xe370288],esp
  408a13:	mov    edx,0x1e088e72
  408a18:	push   esi
  408a19:	loop   0x4089d6
  408a1b:	push   0xfffffff6
  408a1d:	cwde   
  408a1e:	add    DWORD PTR [ecx+ebx*2+0x4dd64d14],ecx
  408a25:	adc    al,0x2c
  408a27:	lahf   
  408a28:	xor    ebp,DWORD PTR [ebx-0xd]
  408a2b:	dec    eax
  408a2c:	sub    ch,BYTE PTR [edi]
  408a2e:	shr    DWORD PTR [edi-0x1a],0x32
  408a32:	bnd ja 0x408a47
  408a35:	cli    
  408a36:	iret   
  408a37:	jno    0x408a32
  408a39:	aam    0xee
  408a3b:	ds inc esi
  408a3d:	nop
  408a3e:	and    BYTE PTR cs:[edx],0x3b
  408a42:	loope  0x4089df
  408a44:	cli    
  408a45:	test   DWORD PTR [edx+0x7c],edi
  408a48:	xchg   DWORD PTR [ecx+0x59],edi
  408a4b:	add    ax,WORD PTR [ecx]
  408a4e:	mov    BYTE PTR [ecx],ch
  408a50:	cmp    esi,0xd7beb20
  408a56:	push   eax
  408a57:	xor    al,0xc4
  408a59:	xor    ebp,ecx
  408a5b:	sub    ebx,ecx
  408a5d:	gs (bad) 
  408a5f:	jae    0x408aa4
  408a61:	cmp    ch,dl
  408a63:	inc    edx
  408a64:	pop    edi
  408a65:	inc    edi
  408a66:	in     eax,dx
  408a67:	rdpmc  
  408a69:	rol    DWORD PTR [ebx],1
  408a6b:	(bad)  
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	and    esi,DWORD PTR [edx]
  408a87:	xchg   esi,eax
  408a88:	cwde   
  408a89:	adc    DWORD PTR [ecx],ebp
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408ab1
  408a92:	ds gs popf 
  408a95:	mov    ebx,esi
  408a97:	fs pop esp
  408a99:	push   edx
  408a9a:	rcr    DWORD PTR [ebx-0x163cc078],cl
  408aa0:	dec    esp
  408aa1:	push   ebp
  408aa2:	aas    
  408aa3:	push   0x24826e54
  408aa8:	aad    0xec
  408aaa:	pop    ss
  408aab:	inc    ecx
  408aac:	scas   al,BYTE PTR es:[edi]
  408aad:	imul   edx,DWORD PTR [edi+eiz*8],0x7bc86eff
  408ab4:	cmc    
  408ab5:	lock retfw 
  408ab8:	ja     0x408b39
  408aba:	sar    BYTE PTR [esi],0xf
  408abd:	out    0x74,eax
  408abf:	push   ds
  408ac0:	dec    DWORD PTR [eax-0x56dc51e]
  408ac6:	add    al,0xa9
  408ac8:	cli    
  408ac9:	aaa    
  408aca:	add    bl,BYTE PTR [eax]
  408acc:	mov    edi,0x98fcea6b
  408ad1:	jle    0x408b4d
  408ad3:	test   BYTE PTR [eax-0x5d647a68],bl
  408ad9:	xchg   ecx,eax
  408ada:	aam    0xc9
  408adc:	pop    esp
  408add:	pop    esp
  408ade:	xchg   esp,eax
  408adf:	and    eax,0x7268aef2
  408ae4:	enter  0x7d02,0xed
  408ae8:	jl     0x408afc
  408aea:	jmp    0x408a9f
  408aec:	mov    bh,0xe
  408aee:	add    ecx,DWORD PTR [ebp-0x67]
  408af1:	test   bh,bl
  408af3:	cmp    DWORD PTR [ebx+ebx*2-0x310db7f1],0x48
  408afb:	xchg   edi,eax
  408afc:	lahf   
  408afd:	pop    ds
  408afe:	mov    ebx,0xf9f7dffd
  408b03:	stc    
  408b04:	xlat   BYTE PTR ds:[ebx]
  408b05:	jp     0x408b18
  408b07:	scas   al,BYTE PTR es:[edi]
  408b08:	jg     0x408b38
  408b0a:	fsub   DWORD PTR [edi+edi*8+0x63]
  408b0e:	mov    bl,0x5c
  408b10:	pop    es
  408b11:	inc    esi
  408b12:	imul   ecx,esi,0x93c5d825
  408b18:	out    0x2c,eax
  408b1a:	jne    0x408b30
  408b1c:	push   edi
  408b1d:	lods   al,BYTE PTR ds:[esi]
  408b1e:	rcl    ecx,cl
  408b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b21:	(bad)  
  408b22:	iret   
  408b23:	(bad)  
  408b24:	out    0x96,al
  408b26:	dec    edi
  408b27:	je     0x408afa
  408b29:	add    ah,BYTE PTR [edx]
  408b2b:	outs   dx,BYTE PTR ds:[esi]
  408b2c:	or     BYTE PTR [ebx+0xb],al
  408b2f:	sbb    BYTE PTR ds:[esi+0x2e],bl
  408b33:	into   
  408b34:	jge    0x408b2a
  408b36:	mov    WORD PTR [ebx-0x8],ds
  408b39:	push   esi
  408b3a:	imul   eax,DWORD PTR [ebx-0x2b],0xffffffb7
  408b3e:	cmp    dh,BYTE PTR [esi+0x3f]
  408b41:	cmc    
  408b42:	fisubr DWORD PTR [esi]
  408b44:	xchg   edi,eax
  408b45:	icebp  
  408b46:	or     BYTE PTR [edi+0x12],0x3c
  408b4a:	mov    ebp,0x91d8159f
  408b4f:	mov    BYTE PTR [ebx-0x14],al
  408b52:	dec    edi
  408b53:	inc    edx
  408b54:	in     al,dx
  408b55:	jg     0x408b7d
  408b57:	das    
  408b58:	pop    esi
  408b59:	pop    esi
  408b5a:	retf   
  408b5b:	inc    edi
  408b5c:	lods   eax,DWORD PTR ds:[esi]
  408b5d:	(bad)  
  408b5e:	mov    bl,0x13
  408b60:	repz mov ss:0x80019aa,al
  408b67:	fnstsw WORD PTR [edx]
  408b69:	fldenv [edi-0x7590f4a6]
  408b6f:	push   0x40
  408b71:	jg     0x408b99
  408b73:	lahf   
  408b74:	mov    esi,0xa168eecb
  408b79:	jecxz  0x408b58
  408b7b:	shr    BYTE PTR [ecx-0x7c],0xc9
  408b7f:	repz sbb edx,edi
  408b82:	nop
  408b83:	sar    BYTE PTR [ebx],0x70
  408b86:	jnp    0x408b9c
  408b88:	jl     0x408b93
  408b8a:	(bad)  
  408b8b:	imul   edi,DWORD PTR [edx+0x7f],0x461637aa
  408b92:	push   ds
  408b93:	pop    es
  408b94:	mov    WORD PTR [ecx],?
  408b96:	aam    0xf
  408b98:	xchg   DWORD PTR [ecx+0x5a],edx
  408b9b:	(bad)  
  408b9d:	push   ebx
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0x581369bd]
  408bcf:	iret   
  408bd0:	jge    0x408bf4
  408bd2:	sub    eax,0xa7e7e2e
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408c0d
  408bdb:	pop    esi
  408bdc:	or     al,0x3e
  408bde:	jbe    0x408bf1
  408be0:	sahf   
  408be1:	pop    edx
  408be2:	jecxz  0x408c47
  408be4:	lods   al,BYTE PTR ds:[esi]
  408be5:	cmp    DWORD PTR [edx+0x5e],edx
  408be8:	scas   al,BYTE PTR es:[edi]
  408be9:	xor    DWORD PTR [ebx],ecx
  408beb:	dec    esp
  408bec:	repz test BYTE PTR [eax],dh
  408bef:	shl    DWORD PTR [eax+ebp*1+0x44e54521],0x40
  408bf7:	iret   
  408bf8:	jge    0x408bf6
  408bfa:	sbb    al,0x61
  408bfc:	or     ebx,eax
  408bfe:	pop    esp
  408bff:	(bad)  
  408c00:	fidivr DWORD PTR [ebp+0x5b]
  408c03:	popa   
  408c04:	pop    ebp
  408c05:	cwde   
  408c06:	shl    DWORD PTR [edx+esi*1+0x3ac3443f],0x85
  408c0e:	or     al,BYTE PTR [esi-0x68]
  408c11:	lds    ebp,FWORD PTR [ecx-0x1b]
  408c14:	sti    
  408c15:	and    eax,0x973c8346
  408c1a:	dec    edx
  408c1b:	add    al,0x45
  408c1d:	push   ss
  408c1e:	pop    esi
  408c1f:	cmp    dl,0xee
  408c22:	jmp    0x408ba6
  408c24:	js     0xf322d01d
  408c2a:	sbb    eax,0x387446dd
  408c2f:	push   edi
  408c30:	adc    eax,0x405f5ac8
  408c35:	sub    DWORD PTR [edx],0x3129f283
  408c3b:	sub    DWORD PTR [ebp-0x69e1f1bc],edx
  408c41:	lods   al,BYTE PTR ds:[esi]
  408c42:	fs dec edi
  408c44:	das    
  408c45:	push   DWORD PTR [esi+eax*2-0x5e]
  408c49:	jg     0x408c29
  408c4b:	dec    edi
  408c4c:	dec    esp
  408c4d:	mov    dl,0xd0
  408c4f:	xchg   ecx,edx
  408c51:	xchg   edi,eax
  408c52:	adc    al,BYTE PTR [edi-0x15]
  408c55:	dec    esp
  408c56:	xchg   BYTE PTR ds:0xe515a7dd,ah
  408c5c:	jge    0x408cb0
  408c5e:	ins    BYTE PTR es:[edi],dx
  408c5f:	mov    ss,WORD PTR es:[eax]
  408c62:	es sub eax,0xd8b8b147
  408c68:	test   bh,al
  408c6a:	xchg   BYTE PTR [ebx+ebp*2],bh
  408c6d:	imul   ebp,edx,0xffffffa0
  408c70:	in     al,0x36
  408c72:	stos   DWORD PTR es:[edi],eax
  408c73:	pop    ebx
  408c74:	jo     0x408bfe
  408c76:	xor    dh,BYTE PTR [eax]
  408c78:	mov    dh,0xad
  408c7a:	pop    edi
  408c7b:	fwait
  408c7c:	(bad)  
  408c7d:	scas   al,BYTE PTR es:[edi]
  408c7e:	cmp    BYTE PTR [ecx+0x149e22a4],0xd7
  408c85:	adc    dh,BYTE PTR [edi]
  408c87:	push   edx
  408c88:	xchg   ebx,eax
  408c89:	lods   al,BYTE PTR ds:[esi]
  408c8a:	pop    ebp
  408c8b:	or     al,0x98
  408c8d:	iret   
  408c8e:	pop    edi
  408c8f:	shl    BYTE PTR [edx+0x6ad4e109],1
  408c95:	repz push edx
  408c97:	test   DWORD PTR [edi-0x6f],ebp
  408c9a:	imul   eax,DWORD PTR [ebx-0x2d],0xffffffbe
  408c9e:	pop    ds
  408c9f:	sub    eax,DWORD PTR [eax-0x30]
  408ca2:	mov    esi,0x40ce2d00
  408ca7:	or     DWORD PTR [eax],eax
  408ca9:	inc    esi
  408caa:	xlat   BYTE PTR ds:[ebx]
  408cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cac:	inc    ecx
  408cad:	mov    DWORD PTR [ebp-0x59f26b45],0x90c37b57
  408cb7:	push   cs
  408cb8:	mov    bh,0x63
  408cba:	test   dl,ah
  408cbc:	into   
  408cbd:	aad    0xe5
  408cbf:	je     0x408cb8
  408cc1:	jmp    0xbc3b0947
  408cc6:	enter  0x2635,0x94
  408cca:	cmc    
  408ccb:	sbb    bl,ah
  408ccd:	inc    eax
  408cce:	mov    ds:0x6785fce1,eax
  408cd3:	scas   al,BYTE PTR es:[edi]
  408cd4:	loopne 0x408d54
  408cd6:	jle    0x408c97
  408cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd9:	(bad)  
  408cda:	adc    DWORD PTR [ecx],esp
  408cdc:	mov    bh,0x68
  408cde:	bound  ebx,QWORD PTR [edi-0x2f3e656c]
  408ce4:	push   ebp
  408ce5:	ja     0x408cf6
  408ce7:	mov    bh,0x4
  408ce9:	nop
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x5fa3
  408d20:	repz rol edx,0x39
  408d24:	das    
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408d8d
  408d2c:	pop    edi
  408d2d:	cdq    
  408d2e:	jns    0x408d3e
  408d30:	jl     0x408d19
  408d32:	scas   eax,DWORD PTR es:[edi]
  408d33:	jle    0x408cd8
  408d35:	sbb    BYTE PTR [esi+ebx*8],dh
  408d38:	cmp    ax,0xf227
  408d3c:	jmp    DWORD PTR [ebp+0x70]
  408d3f:	shl    DWORD PTR [ebx+0xa],cl
  408d42:	icebp  
  408d43:	jg     0x408d46
  408d45:	pop    ecx
  408d46:	aas    
  408d47:	mov    edx,0x7254b1b6
  408d4c:	test   BYTE PTR [ecx+0x5b],dh
  408d4f:	cmp    eax,0x3763125e
  408d54:	and    BYTE PTR [edx],ah
  408d56:	jnp    0x408dc6
  408d58:	mov    bl,0x8b
  408d5a:	cmp    eax,0x65bec59c
  408d5f:	xor    BYTE PTR [ecx+0x22338649],0x7c
  408d66:	test   BYTE PTR [edi+eiz*4-0x74],dl
  408d6a:	sbb    DWORD PTR [edi+ebp*2],edx
  408d6d:	jne    0x408d3e
  408d6f:	inc    edx
  408d70:	mov    edi,0xeabbc20f
  408d75:	aas    
  408d76:	ds std 
  408d78:	xchg   DWORD PTR [ebp-0x3bf3e806],edi
  408d7e:	push   0xdbd9b7e1
  408d83:	push   ds
  408d84:	xchg   dl,al
  408d86:	dec    esi
  408d87:	mov    esi,0x6d9f1071
  408d8c:	iret   
  408d8d:	xchg   ebx,eax
  408d8e:	call   0x9950:0x7721a5f
  408d95:	push   ecx
  408d96:	aas    
  408d97:	jle    0x408de2
  408d99:	pop    esi
  408d9a:	dec    ecx
  408d9b:	sub    DWORD PTR [ecx-0x1f],ebp
  408d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d9f:	cld    
  408da0:	sub    al,0x0
  408da3:	xor    dh,BYTE PTR [ecx+edx*4]
  408da6:	imul   edx,DWORD PTR [eax],0x6e58c8e4
  408dac:	int    0xd8
  408dae:	clc    
  408daf:	xlat   BYTE PTR ds:[ebx]
  408db0:	jmp    0x8e6f:0x9a26dfea
  408db7:	sti    
  408db8:	fsub   QWORD PTR [ebx+0x429cf372]
  408dbe:	push   cs
  408dbf:	jmp    0x408dcd
  408dc1:	xor    BYTE PTR [esi+eiz*8+0x2a29b1b7],bh
  408dc8:	fcom   DWORD PTR [eax+0x34]
  408dcb:	mov    esi,0x67414a55
  408dd0:	dec    eax
  408dd1:	xor    DWORD PTR [edi],edx
  408dd3:	stos   DWORD PTR es:[edi],eax
  408dd4:	mov    eax,ds:0x46352c8f
  408dd9:	xchg   BYTE PTR [ebp+0x7e0190f9],ah
  408ddf:	sti    
  408de0:	mov    eax,ds:0x40ee51b1
  408de5:	inc    sp
  408de7:	mov    ah,0xce
  408de9:	aaa    
  408dea:	xor    ebx,DWORD PTR [ecx-0x77]
  408ded:	out    dx,eax
  408dee:	cmp    bh,BYTE PTR [eax+ebp*2+0x40510a19]
  408df5:	call   0xf408:0x59f1df87
  408dfc:	adc    edi,DWORD PTR gs:[ecx+0x6b323ff2]
  408e03:	jecxz  0x408e7b
  408e05:	xor    bh,cl
  408e07:	dec    esi
  408e08:	(bad)  
  408e09:	push   ds
  408e0a:	inc    esp
  408e0b:	adc    bh,BYTE PTR [edx]
  408e0d:	in     al,dx
  408e0e:	iret   
  408e0f:	aad    0xa3
  408e11:	jno    0x408e88
  408e13:	mov    eax,0x3780a57
  408e18:	jecxz  0x408db0
  408e1a:	js     0x408e76
  408e1c:	mov    esp,0x88a008d0
  408e21:	mov    bh,0x90
  408e23:	lock jnp 0x408df1
  408e26:	add    DWORD PTR [esi+0x5561cfef],edi
  408e2c:	rcl    DWORD PTR [edi-0x27],cl
  408e2f:	push   ebp
  408e30:	jle    0x408df6
  408e32:	mov    bh,BYTE PTR [eax+0x3d83c47]
  408e38:	(bad)  
  408e39:	mov    DWORD PTR [edx],eax
  408e3b:	jmp    0x408f64
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0xc72de2b
  408e4e:	or     eax,eax
  408e50:	xor    eax,0xa7e7e2c
  408e55:	jg     0x408ed5
  408e57:	jle    0x408e81
  408e59:	iret   
  408e5a:	cwde   
  408e5b:	mov    fs,WORD PTR [esi+0x26162995]
  408e61:	retf   0x5cf1
  408e64:	mov    dh,0x87
  408e66:	sub    DWORD PTR [edx+0x3ddcd5c7],esp
  408e6c:	in     al,dx
  408e6d:	pushf  
  408e6e:	ins    BYTE PTR es:[edi],dx
  408e6f:	push   ss
  408e70:	out    dx,al
  408e71:	sub    DWORD PTR [eax+edi*8+0x28f4b100],ecx
  408e78:	mov    ah,0xde
  408e7a:	sub    eax,edi
  408e7c:	sar    BYTE PTR [ebx],0xa1
  408e7f:	bound  ebx,QWORD PTR [esi]
  408e81:	xlat   BYTE PTR ds:[ebx]
  408e82:	xchg   ebx,eax
  408e83:	gs mov esp,0xeb52d346
  408e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e8a:	mov    bl,0x4a
  408e8c:	in     al,0x3a
  408e8e:	jl     0x408eac
  408e90:	sub    ch,dl
  408e92:	jmp    0xe87555ec
  408e97:	ja     0x408e46
  408e99:	inc    eax
  408e9a:	outs   dx,DWORD PTR ds:[esi]
  408e9b:	pop    ecx
  408e9c:	(bad)  
  408e9e:	sub    ch,cl
  408ea0:	ret    0xa3e6
  408ea3:	fwait
  408ea4:	in     al,0x9f
  408ea6:	push   edx
  408ea7:	int3   
  408ea8:	cmp    cl,BYTE PTR [ecx-0x16]
  408eab:	scas   eax,DWORD PTR es:[edi]
  408eac:	inc    esp
  408ead:	mov    WORD PTR [ebp+0x5e],ds
  408eb0:	das    
  408eb1:	sub    esi,ebp
  408eb3:	jp     0x408ef3
  408eb5:	xchg   BYTE PTR [eax-0x563df99c],cl
  408ebb:	hlt    
  408ebc:	pop    ebp
  408ebd:	lahf   
  408ebe:	jl     0x408ef7
  408ec0:	and    DWORD PTR [esi-0x39],0x4a
  408ec4:	mov    ebx,0xd87123be
  408ec9:	cmp    ecx,esp
  408ecb:	push   esi
  408ecc:	fwait
  408ecd:	adc    dl,BYTE PTR [ebx-0x4a00703a]
  408ed3:	xchg   ecx,eax
  408ed4:	cwde   
  408ed5:	lods   al,BYTE PTR ds:[esi]
  408ed6:	je     0x408eba
  408ed8:	(bad)  
  408ed9:	mov    DWORD PTR [eax-0x32],esp
  408edc:	sbb    al,0xaa
  408ede:	pushf  
  408edf:	(bad)  
  408ee0:	into   
  408ee1:	leave  
  408ee2:	sbb    di,dx
  408ee5:	xchg   ebx,eax
  408ee6:	push   ecx
  408ee7:	mov    BYTE PTR [edx],dl
  408ee9:	mov    WORD PTR [esi-0x7d28428b],?
  408eef:	repnz sbb edi,edx
  408ef2:	mov    edx,es
  408ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef5:	mov    ebx,0x66f8502f
  408efa:	gs iret 
  408efc:	and    esi,DWORD PTR [edx-0x17]
  408eff:	scas   al,BYTE PTR es:[edi]
  408f00:	test   edx,edi
  408f02:	inc    esi
  408f03:	adc    eax,0x62ba2b4b
  408f08:	clc    
  408f09:	pop    es
  408f0a:	add    eax,0x22898e4a
  408f0f:	pop    edi
  408f10:	xchg   ebx,eax
  408f11:	imul   eax,DWORD PTR [ebp+0x54fa173f],0xb60a8f84
  408f1b:	test   eax,0x9b14f4bb
  408f20:	repz fnstcw WORD PTR [esp+edi*1+0x2c]
  408f25:	inc    esi
  408f26:	mov    dl,0x4c
  408f28:	pmaxub mm7,QWORD PTR [ecx+0x19]
  408f2c:	imul   esi,DWORD PTR [ebx+0x68],0xffffffb1
  408f30:	xchg   eax,ebx
  408f32:	pusha  
  408f33:	sahf   
  408f34:	xchg   ecx,eax
  408f35:	adc    BYTE PTR [edx+0x7a],bh
  408f38:	leave  
  408f39:	stos   BYTE PTR es:[edi],al
  408f3a:	sub    eax,0x73e921b7
  408f3f:	cmp    BYTE PTR [edi-0x3d31da42],bh
  408f45:	rol    DWORD PTR [ecx+0x6e7fa3e1],cl
  408f4b:	jge    0x408edb
  408f4d:	fidivr DWORD PTR [edi+0x587176c]
  408f53:	cmp    bl,BYTE PTR [edi]
  408f55:	mov    ah,0xd4
  408f57:	pop    ecx
  408f58:	rep ins BYTE PTR es:[edi],dx
  408f5a:	jno    0x408f82
  408f5c:	sbb    DWORD PTR [edi+esi*8-0x141aaa4a],ebx
  408f63:	sahf   
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0x5edcb935
  408fab:	ret    0xc180
  408fae:	sub    eax,0x7f0a7e7e
  408fb3:	jle    0x409033
  408fb5:	jmp    0x408f98
  408fb7:	int3   
  408fb8:	stos   DWORD PTR es:[edi],eax
  408fb9:	or     esi,DWORD PTR [edx+edi*2+0x2f7c87d]
  408fc0:	push   edx
  408fc1:	nop
  408fc2:	out    0x57,eax
  408fc4:	test   DWORD PTR [edi+0xefa120d],ebp
  408fca:	pop    eax
  408fcb:	push   ecx
  408fcc:	xchg   edi,eax
  408fcd:	fst    DWORD PTR [edi-0x5d]
  408fd0:	or     eax,0x338f5070
  408fd5:	fwait
  408fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fd7:	push   ecx
  408fd8:	(bad)  
  408fd9:	pop    esi
  408fda:	jno    0x408f9b
  408fdc:	add    al,0xd0
  408fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fdf:	push   0x9a671c52
  408fe4:	fnstsw WORD PTR [ecx-0x6eaf458c]
  408fea:	out    0x9c,eax
  408fec:	mov    ebx,0xa1026f2f
  408ff1:	jbe    0x408fcf
  408ff3:	xchg   esp,eax
  408ff4:	inc    esp
  408ff5:	and    al,0x73
  408ff7:	or     eax,0x4fa41db
  408ffc:	fs xchg ebx,eax
  408ffe:	push   es
  408fff:	add    ebx,edx
  409001:	std    
  409002:	or     eax,ebx
  409004:	inc    ecx
  409005:	or     DWORD PTR [edi+0x15],ecx
  409008:	std    
  409009:	outs   dx,DWORD PTR ds:[esi]
  40900a:	add    eax,0xf3d9db14
  40900f:	xlat   BYTE PTR ds:[ebx]
  409010:	and    bh,BYTE PTR ds:0x85ca3535
  409016:	test   BYTE PTR [esi+0x6350a826],dl
  40901c:	mov    ds:0x5d32aaeb,al
  409021:	mov    edi,DWORD PTR [ecx]
  409023:	xor    dl,bh
  409025:	(bad)  
  409026:	adc    eax,DWORD PTR [ecx-0x61f6986e]
  40902c:	push   ecx
  40902d:	dec    edx
  40902e:	mov    ds:0x81963f37,al
  409033:	pop    eax
  409034:	mov    ecx,0x1e923df1
  409039:	mov    eax,ds:0x36ed61f4
  40903e:	push   0x54724c80
  409043:	jns    0x408fff
  409045:	(bad)  
  409046:	stos   BYTE PTR es:[edi],al
  409047:	mov    dh,0x1c
  409049:	popf   
  40904a:	cwde   
  40904b:	lea    ebx,[esi+0x4]
  40904e:	pop    ss
  40904f:	cdq    
  409050:	xchg   ecx,eax
  409051:	push   esi
  409052:	ds push ds
  409054:	fdivr  st(5),st
  409056:	mov    edx,DWORD PTR [ebx+0x1d818c7f]
  40905c:	mov    ds:0x4a312300,eax
  409061:	xchg   edx,eax
  409062:	xchg   ebp,eax
  409063:	lahf   
  409064:	pop    ds
  409065:	add    esi,DWORD PTR [edx+edx*8]
  409068:	jae    0x409061
  40906a:	dec    edx
  40906b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40906c:	jecxz  0x409055
  40906e:	in     al,0x49
  409070:	ficom  DWORD PTR [ebp+eiz*2-0x2a]
  409074:	pop    esi
  409075:	jmp    0x4090a4
  409077:	ror    al,cl
  409079:	push   eax
  40907a:	cdq    
  40907b:	bnd ja 0x4090c5
  40907e:	jo     0x40906d
  409080:	or     al,0x88
  409082:	ins    DWORD PTR es:[edi],dx
  409083:	and    BYTE PTR [edx],bl
  409085:	enter  0x4d15,0xb
  409089:	push   ebx
  40908a:	fnstenv [eax+0xe]
  40908d:	stos   BYTE PTR es:[edi],al
  40908e:	das    
  40908f:	cdq    
  409090:	lahf   
  409091:	sahf   
  409092:	xchg   ecx,eax
  409093:	mov    eax,ds:0xf7486e86
  409098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409099:	pop    ebx
  40909a:	rol    eax,cl
  40909c:	or     ebx,DWORD PTR [esi]
  40909e:	(bad)  
  40909f:	fld    TBYTE PTR [esi+0x3b]
  4090a2:	aam    0xad
  4090a4:	aad    0x11
  4090a6:	hlt    
  4090a7:	pop    es
  4090a8:	push   eax
  4090a9:	and    eax,0xd40d3102
  4090ae:	add    BYTE PTR [eax+0x4d13cfd],dh
  4090b4:	pop    es
  4090b5:	xchg   ebp,eax
  4090b6:	or     cl,BYTE PTR [ebx-0x33b2206f]
  4090bc:	loopne 0x409120
  4090be:	(bad)  
  4090bf:	outs   dx,DWORD PTR ds:[esi]
  4090c0:	xchg   edi,eax
  4090c1:	movsx  edx,BYTE PTR [edx]
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	fiadd  DWORD PTR [ebx+ecx*1]
  4090fd:	mov    ds:0x7e7e22dd,al
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x4090a3
  409107:	xchg   ebx,eax
  409108:	jge    0x409133
  40910a:	ins    BYTE PTR es:[edi],dx
  40910b:	fsubr  DWORD PTR [ecx-0x420c5f8e]
  409111:	retf   0x4421
  409114:	and    eax,DWORD PTR ds:0xdf5985be
  40911a:	add    al,BYTE PTR [ecx+0x325e5f58]
  409120:	mov    ds:0x12ed453a,al
  409125:	sbb    eax,0xf13cd58d
  40912a:	push   es
  40912b:	into   
  40912c:	add    ecx,DWORD PTR ds:0x58ee93b8
  409132:	jg     0x4091a0
  409134:	icebp  
  409135:	mov    ebx,0x624390a4
  40913a:	cmp    al,0xf2
  40913c:	add    bl,bh
  40913e:	cmp    BYTE PTR [edi],cl
  409140:	ins    DWORD PTR es:[edi],dx
  409141:	(bad)  
  409142:	dec    eax
  409143:	add    BYTE PTR [edx+ebx*1+0x2bfa8025],0x66
  40914b:	mov    ebp,0x8bf21eb1
  409150:	cs push edx
  409152:	and    al,0x72
  409154:	aas    
  409155:	sub    bh,dh
  409157:	xchg   eax,ebx
  409159:	jl     0x409157
  40915b:	dec    edi
  40915c:	daa    
  40915d:	xchg   edi,eax
  40915e:	mov    ah,0x2
  409160:	sub    DWORD PTR [ecx+0x4a],ecx
  409163:	dec    edx
  409164:	es popa 
  409166:	mov    eax,ds:0x2b69f6a6
  40916b:	push   0xb
  40916d:	hlt    
  40916e:	mov    ah,0x7b
  409170:	lahf   
  409171:	xchg   esi,eax
  409172:	call   DWORD PTR [esi]
  409174:	fucomi st,st(1)
  409176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409177:	push   cs
  409178:	ret    0x12db
  40917b:	dec    ebp
  40917c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40917d:	mov    bl,0x1b
  40917f:	adc    edx,eax
  409181:	mov    al,ds:0xe5288cdf
  409186:	mov    BYTE PTR [eax+0x368dc1ec],bh
  40918c:	nop
  40918d:	pop    esp
  40918e:	sbb    DWORD PTR [ecx],0x2d
  409191:	in     eax,dx
  409192:	xchg   edi,eax
  409193:	pushf  
  409194:	jmp    0x2358:0x7bff67
  40919b:	popf   
  40919c:	pop    es
  40919d:	mov    dl,0x38
  40919f:	out    0xb8,eax
  4091a1:	push   cs
  4091a2:	sbb    cx,bx
  4091a5:	xor    edi,DWORD PTR [eax]
  4091a7:	cli    
  4091a8:	mov    esi,0xa6e9c2a7
  4091ad:	push   ebx
  4091ae:	sub    dl,ch
  4091b0:	mov    eax,ds:0xb703c88e
  4091b5:	xchg   edx,eax
  4091b6:	leave  
  4091b7:	jne    0x40915f
  4091b9:	sub    eax,0x8f3d9f8f
  4091be:	out    0xa8,eax
  4091c0:	mov    fs,WORD PTR [eax]
  4091c2:	in     al,dx
  4091c3:	push   0x3c
  4091c5:	iret   
  4091c6:	daa    
  4091c7:	inc    ebp
  4091c8:	test   al,0x3
  4091ca:	bswap  edi
  4091cc:	out    dx,eax
  4091cd:	jo     0x409228
  4091cf:	sbb    ebp,edi
  4091d1:	and    eax,0x39d19e40
  4091d6:	pop    esp
  4091d7:	or     esp,esp
  4091d9:	test   eax,0x18852e4c
  4091de:	mov    dl,0x36
  4091e0:	ret    0xc37
  4091e3:	loope  0x4091bf
  4091e5:	cmp    al,0xb4
  4091e7:	aas    
  4091e8:	push   edi
  4091e9:	cmp    DWORD PTR [edx-0x66],edi
  4091ec:	add    al,0xa8
  4091ee:	push   ebx
  4091ef:	pop    ss
  4091f0:	ins    BYTE PTR es:[edi],dx
  4091f1:	cmp    al,0x26
  4091f3:	inc    ebx
  4091f4:	xor    DWORD PTR [ecx],esp
  4091f6:	fisub  WORD PTR [esi+eiz*1]
  4091f9:	sbb    BYTE PTR [edx-0x6c6eb518],cl
  4091ff:	pop    eax
  409200:	mov    BYTE PTR [edx-0x66ebb9f1],dl
  409206:	enter  0xcbc7,0xe6
  40920a:	sahf   
  40920b:	ret    
  40920c:	aaa    
  40920d:	push   0xf
  40920f:	pop    eax
  409210:	sub    al,BYTE PTR [ecx+0x3308558b]
  409216:	ror    DWORD PTR [ebp+0x729f1084],0x32
  40921d:	add    BYTE PTR [ecx+0x45ff0845],cl
  409223:	or     al,0xe9
  409225:	inc    ebp
  409226:	std    
  409227:	(bad)  
  409228:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x78785839]
  409240:	mov    cl,0x6d
  409242:	xor    cl,ch
  409244:	and    edi,DWORD PTR [esi+0x7e]
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x40928f
  40924c:	inc    ecx
  40924d:	or     BYTE PTR [ebx],cl
  40924f:	sbb    ecx,esi
  409251:	mov    edx,es
  409253:	sub    al,cl
  409255:	jnp    0x409254
  409257:	cwde   
  409258:	call   0xd176:0x9cd56bf4
  40925f:	xchg   ecx,eax
  409260:	fbld   TBYTE PTR [esi-0x36afc59e]
  409266:	aad    0x84
  409268:	mov    ebp,0xa399c53f
  40926d:	ins    BYTE PTR es:[edi],dx
  40926e:	int3   
  40926f:	inc    ebp
  409270:	sar    DWORD PTR [edx+0x3f7053e6],1
  409276:	adc    ch,ah
  409278:	jne    0x4092e4
  40927a:	push   es
  40927b:	xchg   ebp,eax
  40927c:	or     bl,ch
  40927e:	or     eax,0xc78bb61c
  409283:	es out dx,al
  409285:	cwde   
  409286:	add    BYTE PTR [ecx+0x75],cl
  409289:	sub    al,0x61
  40928b:	cmp    al,0xf1
  40928d:	clc    
  40928e:	mov    ah,0x31
  409290:	and    dh,BYTE PTR [edx+ebp*8]
  409293:	idiv   DWORD PTR [ebx-0x53]
  409296:	mov    al,0x4d
  409298:	les    eax,FWORD PTR [ecx+esi*4-0x85f90d7]
  40929f:	pop    eax
  4092a0:	(bad)  
  4092a1:	popa   
  4092a2:	sbb    al,0xea
  4092a4:	or     cl,BYTE PTR [edx]
  4092a6:	fdivr  st,st(6)
  4092a8:	inc    esp
  4092a9:	adc    bl,0xaa
  4092ac:	jo     0x40927d
  4092ae:	mov    bl,0xbd
  4092b0:	mov    eax,0xff52caeb
  4092b5:	dec    dh
  4092b7:	ror    al,0x86
  4092ba:	adc    eax,edi
  4092bc:	mov    al,ds:0x524d613f
  4092c1:	jle    0x4092b5
  4092c3:	shl    DWORD PTR [edx-0x7cd87bb9],0xcd
  4092ca:	fbstp  TBYTE PTR [ebx]
  4092cc:	mov    edi,DWORD PTR [ecx]
  4092ce:	inc    edx
  4092cf:	int    0xf1
  4092d1:	and    al,0xb5
  4092d3:	mov    ch,0x4f
  4092d5:	mov    ebx,0x1ef03b6d
  4092da:	pop    ss
  4092db:	jmp    0xa4fe7e65
  4092e0:	jb     0x4092ca
  4092e2:	imul   ecx,DWORD PTR [edi+0x21646ed0],0xe2a9af66
  4092ec:	je     0x4092fd
  4092ee:	mov    ch,0x6f
  4092f0:	xor    ecx,ecx
  4092f2:	cld    
  4092f3:	aas    
  4092f4:	cmp    eax,0x12f9d95f
  4092f9:	and    ebx,edx
  4092fb:	es ds push ebp
  4092fe:	sahf   
  4092ff:	add    al,0x4f
  409301:	inc    edi
  409302:	enter  0xbc2,0x8a
  409306:	xchg   ecx,eax
  409307:	call   0xf6dd:0xc0890fe6
  40930e:	fld    st(0)
  409310:	adc    al,0xb4
  409312:	(bad)  [esi-0x48]
  409315:	pop    eax
  409316:	xchg   edi,eax
  409317:	xchg   esp,eax
  409318:	jb     0x409357
  40931a:	xor    ecx,DWORD PTR [esp+edi*2+0x49e95f24]
  409321:	fadd   DWORD PTR [esi-0x650632aa]
  409327:	dec    esi
  409328:	and    edx,DWORD PTR [ebx]
  40932a:	arpl   WORD PTR [edi],di
  40932c:	sub    al,0xd
  40932e:	lods   eax,DWORD PTR ds:[esi]
  40932f:	stos   BYTE PTR es:[edi],al
  409330:	jmp    0x409322
  409332:	rcl    DWORD PTR [esi-0x7d8ba1b7],0x12
  409339:	mov    ebx,0x9337a018
  40933e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40933f:	sti    
  409340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409341:	adc    bh,BYTE PTR [ebp+0x34]
  409344:	dec    esi
  409345:	dec    ebp
  409346:	ds jae 0x40938e
  409349:	enter  0x45e0,0x38
  40934d:	sub    al,0x9d
  40934f:	mov    cl,0x7f
  409351:	ret    0xa428
  409354:	call   0x310:0x4d8b6f45
  40935b:	(bad)  
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4245c6,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x41235c,0x4245c6
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x412368,0x417e41
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4245be,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4245be
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4245be,edx
  4093bd:	cmp    DWORD PTR ds:0x4245be,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4245be,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41237c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x412360
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41abda,0x417e49
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412398
  409412:	mov    esi,DWORD PTR ds:0x421896
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x412368,0x19
  409430:	cmp    DWORD PTR ds:0x412368,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x412368,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x412368
  40945a:	dec    eax
  40945b:	mov    ds:0x412368,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x17ee7d61
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	pop    esp
  40948f:	test   al,0xe
  409491:	xchg   BYTE PTR [ecx],bh
  409493:	fwait
  409494:	icebp  
  409495:	sub    BYTE PTR [ebx-0x6a8e6a92],ah
  40949b:	je     0x40948f
  40949d:	add    ebp,edi
  40949f:	pop    edx
  4094a0:	cmp    esi,ecx
  4094a2:	inc    edi
  4094a3:	repnz xchg esi,eax
  4094a5:	xchg   edx,eax
  4094a6:	imul   ebx,esi,0xffffffd6
  4094a9:	push   cs
  4094aa:	pop    ds
  4094ab:	jp     0x4094f7
  4094ad:	mov    ch,0x7e
  4094af:	sbb    eax,0xed7967aa
  4094b4:	pop    ds
  4094b5:	test   al,0x81
  4094b7:	and    bh,ah
  4094b9:	sub    al,0xfc
  4094bb:	aas    
  4094bc:	arpl   ax,cx
  4094be:	xor    BYTE PTR [edx],dh
  4094c0:	sar    BYTE PTR [ebp-0x4c8cdccd],0x6e
  4094c7:	lods   al,BYTE PTR ds:[esi]
  4094c8:	in     al,0x57
  4094ca:	pop    edi
  4094cb:	fstp   st(6)
  4094cd:	sub    eax,0xbadd8836
  4094d2:	cmp    eax,0x2f02357a
  4094d7:	icebp  
  4094d8:	sub    DWORD PTR [esi+0x444bc0a8],edx
  4094de:	in     al,dx
  4094df:	xlat   BYTE PTR ds:[ebx]
  4094e0:	into   
  4094e1:	retf   0x6d2e
  4094e4:	jo     0x4094aa
  4094e6:	or     cl,dh
  4094e8:	repnz xchg ebx,eax
  4094ea:	xchg   ebp,eax
  4094eb:	xor    al,0xa7
  4094ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ee:	pop    ecx
  4094ef:	sub    DWORD PTR [ebp-0x5ed88f1],esp
  4094f5:	dec    eax
  4094f6:	sahf   
  4094f7:	rcl    BYTE PTR [esi+0x39],cl
  4094fa:	inc    esp
  4094fb:	dec    esi
  4094fc:	and    bl,BYTE PTR [ebp+0x1cd53d2f]
  409502:	inc    esi
  409503:	mov    WORD PTR [ebx-0x7b384f],?
  409509:	adc    eax,0xd0ba9ae7
  40950e:	(bad)  
  40950f:	sbb    bl,al
  409511:	sub    eax,DWORD PTR [ecx]
  409513:	xchg   esp,eax
  409514:	adc    DWORD PTR [eax-0x5b],eax
  409517:	nop
  409518:	inc    esp
  409519:	cli    
  40951a:	inc    esp
  40951b:	mov    bl,al
  40951d:	sub    DWORD PTR [ecx-0x745475bf],0x75
  409524:	adc    BYTE PTR [ecx-0x3f74efba],cl
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    bl,dh
  40953f:	and    eax,0x21095bb0
  409544:	jle    0x4095c4
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	jo     0x409596
  40954c:	pusha  
  40954d:	std    
  40954e:	xor    BYTE PTR [eax],ah
  409550:	jno    0x40952b
  409552:	mov    ch,0xa2
  409554:	leave  
  409555:	push   edi
  409556:	test   BYTE PTR [eax+0x30],dh
  409559:	jb     0x40954b
  40955b:	jne    0x4095ba
  40955d:	push   cs
  40955e:	jecxz  0x4095de
  409560:	jecxz  0x409582
  409562:	mov    dl,0xa3
  409564:	jns    0x409552
  409566:	dec    esi
  409567:	mov    ah,0x66
  409569:	bound  edi,QWORD PTR [ebp-0x2a78a20b]
  40956f:	or     bl,cl
  409571:	add    edi,DWORD PTR [eax-0x26]
  409574:	cwde   
  409575:	aad    0x54
  409577:	sub    BYTE PTR ds:0xc807394e,dl
  40957d:	adc    BYTE PTR [eax-0x78],al
  409580:	inc    ebx
  409581:	in     eax,0x65
  409583:	pop    esp
  409584:	pop    ds
  409585:	test   BYTE PTR [ecx+0x583dc28b],dl
  40958b:	mov    WORD PTR [edx+ebp*1],ss
  40958e:	jo     0x409569
  409590:	or     eax,0xc686adac
  409595:	outs   dx,DWORD PTR ds:[esi]
  409596:	xchg   ebx,eax
  409597:	push   esp
  409598:	jno    0x4095e4
  40959a:	mov    edx,0xd04d1bf8
  40959f:	fnstsw WORD PTR [esi-0x4ff96df0]
  4095a5:	cld    
  4095a6:	xor    BYTE PTR [edi+edi*1-0x686bc2ac],dh
  4095ad:	jne    0x409553
  4095af:	push   esp
  4095b0:	push   edi
  4095b1:	mov    ds:0x22640f67,eax
  4095b6:	cwde   
  4095b7:	jne    0x409547
  4095b9:	mov    ?,edx
  4095bb:	inc    esi
  4095bc:	loope  0x4095ba
  4095be:	ret    0xd4d5
  4095c1:	mov    ebx,0xdf0a35f9
  4095c6:	jge    0x409561
  4095c8:	adc    eax,0x4af8cb93
  4095cd:	out    0x65,al
  4095cf:	aaa    
  4095d0:	shl    BYTE PTR [esi-0x399291c4],cl
  4095d6:	ret    
  4095d7:	pop    ebp
  4095d8:	cmp    eax,0xa04ce6b0
  4095dd:	ss xor eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    ecx,DWORD PTR [edi-0x6d]
  40961d:	fnstenv [ebx-0x63]
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x409697
  409628:	mov    bl,0xb4
  40962a:	pushf  
  40962b:	adc    DWORD PTR [ebx],esi
  40962d:	or     eax,0x8b227a81
  409632:	unpcklps xmm3,xmm1
  409635:	sub    DWORD PTR [ecx-0x1d],edx
  409638:	lock lods eax,DWORD PTR ds:[esi]
  40963a:	fwait
  40963b:	adc    DWORD PTR [edi+0x5efa50a1],eax
  409641:	xchg   edi,eax
  409642:	cmp    al,0xc7
  409644:	arpl   WORD PTR [edi-0x79],bp
  409647:	hlt    
  409648:	lds    eax,FWORD PTR [ebx+0x6eeb5c83]
  40964e:	pop    ds
  40964f:	ds (bad) 
  409651:	jmp    0xcad8da5d
  409656:	mov    ah,0x13
  409658:	xchg   esp,eax
  409659:	sub    DWORD PTR [ebx-0x1f379df],edi
  40965f:	je     0x4095ea
  409661:	sub    BYTE PTR [edi-0x28],cl
  409664:	jmp    0x6480:0xb1af6af2
  40966b:	add    DWORD PTR [eax-0x7e],esp
  40966e:	data16 cmp dl,cl
  409671:	mov    eax,0x5851c9c9
  409676:	pop    edi
  409677:	pop    eax
  409678:	dec    ebx
  409679:	repnz adc esp,DWORD PTR [esi-0x6a442c5c]
  409680:	xor    ebp,0xffffff82
  409683:	into   
  409684:	dec    ebp
  409685:	jmp    FWORD PTR [esi]
  409687:	and    DWORD PTR [ebp+0x4e66a3f8],edi
  40968d:	pop    ss
  40968e:	mov    ebp,0x6b75acbf
  409693:	xchg   esp,eax
  409694:	test   edx,ecx
  409696:	scas   eax,DWORD PTR es:[edi]
  409697:	mov    es,WORD PTR es:[edx+0x24]
  40969b:	xchg   edx,eax
  40969c:	lock pop ecx
  40969e:	xlat   BYTE PTR ds:[ebx]
  40969f:	clc    
  4096a0:	pop    ds
  4096a1:	add    eax,0xc02e27b
  4096a6:	outs   dx,BYTE PTR ds:[esi]
  4096a7:	test   eax,0x37f63371
  4096ac:	inc    esp
  4096ad:	imul   bh
  4096af:	je     0x40970d
  4096b1:	retf   
  4096b2:	adc    bh,BYTE PTR [edi-0x3a]
  4096b5:	ds mov ebx,0xf2250ce0
  4096bb:	lods   eax,DWORD PTR ds:[esi]
  4096bc:	icebp  
  4096bd:	push   ebp
  4096be:	mov    bh,0x5
  4096c0:	dec    ebp
  4096c1:	pop    ebp
  4096c2:	idiv   BYTE PTR [ecx+0x47f8974]
  4096c8:	jge    0x4096f4
  4096ca:	int    0xb
  4096cc:	lds    eax,FWORD PTR [eax-0x68ffea90]
  4096d2:	jmp    0x409751
  4096d4:	scas   al,BYTE PTR es:[edi]
  4096d5:	push   es
  4096d6:	mov    bl,0xf3
  4096d8:	xchg   edi,eax
  4096d9:	int    0xf4
  4096db:	sub    dh,BYTE PTR [edi+0x64]
  4096de:	es pop esi
  4096e0:	jno    0x409664
  4096e2:	mov    esp,0x662a50b8
  4096e7:	mov    al,ds:0xf41a635f
  4096ec:	(bad)  
  4096ed:	fwait
  4096ee:	jb     0x409679
  4096f0:	jne    0x40971b
  4096f2:	mov    al,ds:0xe3a6d723
  4096f7:	mov    WORD PTR [ebx+0x7b],ss
  4096fa:	daa    
  4096fb:	cwde   
  4096fc:	add    bl,bh
  4096fe:	push   ds
  4096ff:	out    dx,al
  409700:	cwde   
  409701:	das    
  409702:	xchg   BYTE PTR [ebx+0x17],bl
  409705:	xchg   BYTE PTR [ecx+0x5e4b2bb2],cl
  40970b:	mov    edi,0xefa45334
  409710:	mov    al,ds:0x8200a054
  409715:	(bad)
  409718:	and    eax,0xfa39d1e2
  40971d:	jbe    0x40977a
  40971f:	adc    ch,dh
  409721:	jg     0x409718
  409723:	loop   0x409732
  409725:	push   ds
  409726:	scas   al,BYTE PTR es:[edi]
  409727:	ins    BYTE PTR es:[edi],dx
  409728:	ins    BYTE PTR es:[edi],dx
  409729:	xor    BYTE PTR [eax+0x19e29f0b],ah
  40972f:	mov    cl,0xd5
  409731:	cmp    esi,DWORD PTR [ebp+0x581618a]
  409737:	fnsave [edx-0x21]
  40973a:	jb     0x409757
  40973c:	shl    BYTE PTR [edx+0xc],cl
  40973f:	mov    ah,BYTE PTR [ebp+0xb81ec57]
  409745:	cmc    
  409746:	jne    0x409767
  409748:	sub    BYTE PTR [edi+esi*8-0x4e],bh
  40974c:	pushf  
  40974d:	retf   
  40974e:	cli    
  40974f:	push   ecx
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4245ae,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412370,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41abd6
  409776:	adc    DWORD PTR ds:0x4245ca,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417e59,0x412370
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x41235c,0x41abd2
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415115,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4245ba
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	out    dx,al
  4097c0:	mov    DWORD PTR [ebx+0x7e26b58c],0x7e7f167e
  4097ca:	jle    0x40980e
  4097cc:	sbb    eax,0x9bc08dcf
  4097d1:	fcom   DWORD PTR [edx]
  4097d3:	ja     0x409776
  4097d5:	aas    
  4097d6:	inc    edi
  4097d7:	mov    dh,0x2b
  4097d9:	pop    eax
  4097da:	addr16 test al,0x19
  4097dd:	das    
  4097de:	cld    
  4097df:	or     esi,DWORD PTR [esi+ecx*4-0x43]
  4097e3:	sub    bl,BYTE PTR [ecx+0x10fff3b2]
  4097e9:	call   0x6b070a83
  4097ee:	repz mov al,ds:0xa06ed489
  4097f4:	rcl    DWORD PTR [esi*1+0x1f8b0536],1
  4097fb:	cmp    eax,0xf57d4993
  409800:	mov    al,cs:0xc8850af6
  409806:	ins    DWORD PTR es:[edi],dx
  409807:	je     0x40978e
  409809:	pop    esi
  40980a:	lods   eax,DWORD PTR ds:[esi]
  40980b:	cli    
  40980c:	sub    DWORD PTR cs:[ebp-0x1],esi
  409810:	mov    cl,0x23
  409812:	jp     0x40985e
  409814:	sahf   
  409815:	add    eax,0x4d946c3d
  40981a:	repnz sub eax,0xfffffff0
  40981e:	mov    esi,0xe05e421
  409823:	and    eax,0xf8fc26c
  409828:	in     eax,0x1d
  40982a:	jnp    0x40985d
  40982c:	xchg   ecx,eax
  40982d:	int    0x5
  40982f:	call   0x4da3:0x4bd00b0
  409836:	inc    edi
  409837:	cmp    ecx,edi
  409839:	(bad)  
  40983a:	fdiv   DWORD PTR [eax+0x8e474e0]
  409840:	jge    0x409861
  409842:	out    0x25,eax
  409844:	fstp   TBYTE PTR [esi+0x2]
  409847:	sub    DWORD PTR [ecx-0x73],ebp
  40984a:	aaa    
  40984b:	into   
  40984c:	(bad)  
  40984e:	pop    edx
  409850:	or     dl,bl
  409852:	nop
  409853:	(bad)  
  409854:	add    DWORD PTR [eax-0x32219178],esp
  40985a:	(bad)  
  40985b:	xchg   BYTE PTR [edi+0x3f1f4091],bl
  409861:	ficom  DWORD PTR [ecx+0x4f85f346]
  409868:	sbb    DWORD PTR [ebp+0x68ce2326],ebp
  40986e:	(bad)  
  40986f:	push   ss
  409870:	lds    ebx,FWORD PTR [edx+0x6c]
  409873:	sbb    ah,BYTE PTR [esp+ecx*4-0x71a6ccc7]
  40987a:	push   eax
  40987b:	xchg   ecx,eax
  40987c:	push   ds
  40987d:	sbb    al,0x7b
  40987f:	or     eax,0x1b295fb5
  409884:	lahf   
  409885:	rcr    BYTE PTR [edx+0x31caf659],0x41
  40988c:	dec    edi
  40988d:	push   ebp
  40988e:	outs   dx,DWORD PTR ds:[esi]
  40988f:	in     eax,0xcb
  409891:	inc    edi
  409892:	cmp    eax,0xc2c09fe8
  409897:	arpl   WORD PTR [ebp+edx*2+0x4bf78134],dx
  40989e:	pop    ebx
  40989f:	test   esp,0xc4103985
  4098a5:	shl    DWORD PTR cs:[edx],cl
  4098a8:	add    DWORD PTR [eax+0x5d99488c],0xffffffd1
  4098af:	lods   al,BYTE PTR gs:[esi]
  4098b1:	dec    DWORD PTR [edx-0x35]
  4098b4:	je     0x40987c
  4098b6:	fimul  DWORD PTR [ebp+0x1047ab1f]
  4098bc:	xchg   BYTE PTR [ecx+eax*2-0x1fbc4ec0],bh
  4098c3:	inc    esi
  4098c4:	xchg   esp,eax
  4098c5:	inc    ecx
  4098c6:	stos   DWORD PTR es:[edi],eax
  4098c7:	adc    ch,dl
  4098c9:	fwait
  4098ca:	test   eax,0x48e7ec81
  4098cf:	pop    edx
  4098d0:	add    BYTE PTR [esi+0x29],ah
  4098d3:	and    edi,ecx
  4098d5:	pop    ss
  4098d6:	popf   
  4098d7:	cmp    DWORD PTR [ebp+0x1f],edx
  4098da:	je     0x40987c
  4098dc:	in     al,0xd8
  4098de:	pusha  
  4098df:	retf   
  4098e0:	add    DWORD PTR [ecx-0x76],esi
  4098e3:	imul   BYTE PTR [eax+0x5be54d67]
  4098e9:	jo     0x40992b
  4098eb:	dec    edi
  4098ec:	out    0x72,al
  4098ee:	lods   eax,DWORD PTR ds:[esi]
  4098ef:	pop    ds
  4098f0:	stc    
  4098f1:	ja     0x409885
  4098f3:	mov    eax,DWORD PTR [ebp+0x14]
  4098f6:	and    DWORD PTR ds:0x412364,0x0
  409900:	mov    edx,DWORD PTR ds:0x412364
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x412364,edx
  40990d:	cmp    DWORD PTR ds:0x412364,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x412364,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x412364
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x412364,edx
  40994a:	cmp    DWORD PTR ds:0x412364,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0x444fab4c
  409977:	push   0x6d
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x409985
  409981:	mov    edx,0xbcbf41ca
  409986:	xchg   edx,eax
  409987:	jo     0x40990d
  409989:	repz es add eax,0x2194ccc
  409990:	lock js 0x40998d
  409993:	ds loop 0x409925
  409996:	fadd   QWORD PTR [edx+eiz*1+0x46]
  40999a:	and    al,0xc
  40999c:	iret   
  40999d:	mov    dl,0x44
  40999f:	in     al,dx
  4099a0:	inc    edx
  4099a1:	xchg   BYTE PTR ds:0xfbe526d7,dl
  4099a7:	into   
  4099a8:	jle    0x4099ab
  4099aa:	mov    edx,0xc6e0300b
  4099af:	xor    eax,0x6049b08a
  4099b4:	push   cs
  4099b5:	xchg   esp,eax
  4099b6:	mov    DWORD PTR [eax],esp
  4099b8:	jecxz  0x4099c2
  4099ba:	inc    eax
  4099bb:	cmp    al,0xad
  4099bd:	aad    0x75
  4099bf:	xor    esi,ebx
  4099c1:	int3   
  4099c2:	pop    eax
  4099c3:	mov    bh,0xb1
  4099c5:	(bad)  
  4099c7:	shl    cl,cl
  4099c9:	hlt    
  4099ca:	jmp    0x787c:0x108c623
  4099d1:	aas    
  4099d2:	inc    eax
  4099d3:	mov    al,ds:0x21f2e07c
  4099d8:	sub    ecx,ebp
  4099da:	cs and ch,ch
  4099dd:	(bad)  
  4099de:	cmp    al,0xea
  4099e0:	mov    cl,0x48
  4099e2:	sbb    eax,0x6fe59da0
  4099e7:	push   eax
  4099e8:	push   esp
  4099e9:	dec    edi
  4099ea:	mov    ecx,0x80835b0a
  4099ef:	retf   
  4099f0:	add    ecx,DWORD PTR [ebx]
  4099f2:	sbb    al,0xb2
  4099f4:	ds retf 
  4099f6:	mov    esi,0xcab3eb98
  4099fb:	push   edx
  4099fc:	mov    WORD PTR [esi],?
  4099fe:	push   eax
  4099ff:	dec    ebp
  409a00:	push   ebx
  409a01:	cdq    
  409a02:	pop    esi
  409a03:	mov    ds:0x20632444,al
  409a08:	pusha  
  409a09:	jge    0x409993
  409a0b:	mov    ebp,0x744c1316
  409a10:	push   ss
  409a11:	repz leave 
  409a13:	sbb    bl,BYTE PTR [esi]
  409a15:	inc    ecx
  409a16:	rol    edi,1
  409a18:	popa   
  409a19:	mov    ecx,0x8645c7ff
  409a1e:	sbb    al,BYTE PTR [esi+edi*4+0x22]
  409a22:	aad    0x54
  409a24:	and    dl,BYTE PTR [edi]
  409a26:	mov    eax,0xee4e2cb8
  409a2b:	(bad)  
  409a2c:	mov    dl,0x5f
  409a2e:	outs   dx,BYTE PTR ds:[esi]
  409a2f:	into   
  409a30:	sub    dl,BYTE PTR [esi]
  409a32:	inc    esi
  409a33:	pushf  
  409a34:	or     al,0x9b
  409a36:	test   al,0x6b
  409a38:	neg    BYTE PTR [ebp+0x71391a6d]
  409a3e:	sbb    ch,BYTE PTR [esi]
  409a40:	pop    ds
  409a41:	(bad)  
  409a42:	mov    BYTE PTR [edx],bh
  409a44:	fist   DWORD PTR [eax+0x41]
  409a47:	lock cmp BYTE PTR [esi],bl
  409a4a:	jmp    0x409a7e
  409a4c:	pop    ebp
  409a4d:	mov    ?,ecx
  409a4f:	inc    ecx
  409a50:	mov    WORD PTR [ebp-0x4e],cs
  409a53:	add    dl,BYTE PTR [ecx-0x46]
  409a56:	push   es
  409a57:	aas    
  409a58:	fild   DWORD PTR [eax-0x6]
  409a5b:	add    DWORD PTR [edi],esp
  409a5d:	pop    ecx
  409a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a5f:	add    DWORD PTR [ebp+eiz*4+0x29cebfce],esp
  409a66:	cmp    eax,0xbeaa7d0b
  409a6b:	pop    ds
  409a6c:	jge    0x409a26
  409a6e:	jp     0x409a14
  409a70:	bound  edx,QWORD PTR [ebp-0x3de873a2]
  409a76:	and    esp,0x40
  409a79:	pop    esp
  409a7a:	ret    
  409a7b:	jns    0x409a1f
  409a7d:	rcr    cl,1
  409a7f:	mov    eax,ds:0x4ea392c2
  409a84:	dec    ebp
  409a85:	das    
  409a86:	aas    
  409a87:	int    0x7b
  409a89:	pop    esp
  409a8a:	jge    0x409a21
  409a8c:	xor    BYTE PTR [ecx],dl
  409a8e:	mov    edx,0x92be06b5
  409a93:	pop    ebp
  409a94:	and    DWORD PTR [ebp-0x11af31c6],esp
  409a9a:	lock sub cl,ah
  409a9d:	add    cl,BYTE PTR ds:0xba3f13ef
  409aa3:	ins    DWORD PTR es:[edi],dx
  409aa4:	mov    ecx,0x89a33226
  409aa9:	inc    edx
  409aaa:	or     BYTE PTR [ebx+0x558b1c45],cl
  409ab0:	adc    BYTE PTR [ecx+0x458b0c42],cl
  409ab6:	and    BYTE PTR [ebx+0x42891055],cl
  409abc:	adc    BYTE PTR [ebx+0x14458bc0],cl
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417e4d,0x412378
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4245b6
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415111,0x412368
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415115,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412378,0x417e41
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4245c2,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415119,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412378,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415101,0x415109
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4245c2,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417e41
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x412354,0x4245b2
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x412354,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41abda
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4245c2,0x417e4d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41abca,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41abca
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41abca,ecx
  409bf0:	cmp    DWORD PTR ds:0x41abca,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41abca,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412370,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412370,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412370,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41abe2
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412370
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412370,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4245b2,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415119,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x412364,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41510d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41abda,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415105,0x41abe2
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412374,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415101,0x11
  409cf2:	cmp    DWORD PTR ds:0x415101,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415101,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415101,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415101
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415101,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415101
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415101,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41abd6,0x12
  409d50:	cmp    DWORD PTR ds:0x41abd6,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41abd6,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41ad52
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41abd6,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41abd6
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41abd6,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41abd6
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41abd6,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x412364
  409db9:	xor    edx,DWORD PTR ds:0x4245ae
  409dbf:	mov    DWORD PTR ds:0x412364,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415105,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415115
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4245ae,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x412360,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417e4d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417e4d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417e4d,edx
  409e22:	cmp    DWORD PTR ds:0x417e4d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41ad5b
  409e3c:	push   0x41adfd
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417e4d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417e4d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417e4d,edx
  409e68:	cmp    DWORD PTR ds:0x417e4d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417eaa
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41abda,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412374
  409e8f:	sub    DWORD PTR ds:0x415111,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4245ba,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x4150fd,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412370,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x4150fd,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x4150fd
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x4150fd,ecx
  409eee:	cmp    DWORD PTR ds:0x4150fd,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x4150fd,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417e59,0x412378
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x412360,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x412360
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x412360,edx
  409f3f:	cmp    DWORD PTR ds:0x412360,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x412360,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415119
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4245b6,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x412358,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4245ca,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417e55,0x10
  409fd4:	cmp    DWORD PTR ds:0x417e55,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417e55,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4245ca
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ada3
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417e55
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417e55,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417eba
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417e51
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417e49,0x1d
  40a055:	cmp    DWORD PTR ds:0x417e49,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417e49,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417e49,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417e49
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417e49,edx
  40a094:	mov    edx,DWORD PTR ds:0x417e49
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417e49,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417e45,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41abda,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415111,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4245c2,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x41236c,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417e59
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4245be,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417e55
  40a12f:	xor    DWORD PTR ds:0x4245c6,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4245b6,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41abd6,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4245ae,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x412358,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417e59
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x412360,0x14
  40a18a:	cmp    DWORD PTR ds:0x412360,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x412360,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x412360
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x412360,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41abe2,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41abe2,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41abe2,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41abf4
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41abe2,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41abe2
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41abe2,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41abe2
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41abe2,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41abd2
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4245b6,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41510d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x412354,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417e49,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x412354,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41237c,0x412364
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4245c2,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x412368,0x0
  40a63d:	mov    eax,ds:0x412368
  40a642:	inc    eax
  40a643:	mov    ds:0x412368,eax
  40a648:	cmp    DWORD PTR ds:0x412368,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x41236c
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x412368,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x412368
  40a675:	inc    eax
  40a676:	mov    ds:0x412368,eax
  40a67b:	cmp    DWORD PTR ds:0x412368,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417e41,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417e41,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417e41,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417e41,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417e41
  40a721:	dec    eax
  40a722:	mov    ds:0x417e41,eax
  40a727:	mov    eax,ds:0x417e41
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417e41,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x412358,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x412358
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x412358,edx
  40a761:	cmp    DWORD PTR ds:0x412358,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x412358,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4245ae,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	sbb    BYTE PTR [eax+0x2505500e],0x7e
  40a7bb:	jle    0x40a782
  40a7bd:	jg     0x40a83d
  40a7bf:	jle    0x40a75d
  40a7c1:	sub    eax,0x386f29ff
  40a7c6:	mov    bl,0x16
  40a7c8:	pusha  
  40a7c9:	(bad)  
  40a7ca:	and    DWORD PTR [eax+0x220675cb],eax
  40a7d0:	adc    al,0xd
  40a7d2:	sar    DWORD PTR [eax+0x192f99b1],1
  40a7d8:	push   es
  40a7d9:	aad    0x54
  40a7db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7dc:	mov    ebp,0x5c41655f
  40a7e1:	add    BYTE PTR [esi+0x7c],ah
  40a7e4:	popa   
  40a7e5:	retf   0x9444
  40a7e8:	mov    ecx,0xee29e0ac
  40a7ed:	xchg   edi,eax
  40a7ee:	lock (bad) 
  40a7f1:	call   0xedaa8eec
  40a7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f7:	adc    al,0x74
  40a7f9:	dec    ebx
  40a7fa:	adc    al,0x53
  40a7fc:	call   DWORD PTR [ebp+0x3b]
  40a7ff:	sub    esp,DWORD PTR [edx+0x1f]
  40a802:	sti    
  40a803:	add    DWORD PTR [ebp-0x8],esi
  40a806:	dec    edx
  40a807:	in     al,0xdb
  40a809:	or     DWORD PTR ds:0x15a123b9,0x2f13e47a
  40a813:	out    dx,eax
  40a814:	scas   eax,DWORD PTR es:[edi]
  40a815:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a817:	push   esp
  40a818:	scas   eax,DWORD PTR es:[edi]
  40a819:	dec    eax
  40a81a:	shl    BYTE PTR [esi],cl
  40a81c:	sbb    eax,0xa683ac5a
  40a821:	shl    esi,0x4e
  40a824:	and    al,0x8e
  40a826:	repnz in eax,dx
  40a828:	xor    edi,DWORD PTR [eax-0x72]
  40a82b:	sahf   
  40a82c:	cmp    eax,0xe5d05f88
  40a831:	sbb    edi,esi
  40a833:	hlt    
  40a834:	aaa    
  40a835:	cmp    dl,BYTE PTR [edx+0x620263fa]
  40a83b:	out    dx,eax
  40a83c:	lods   al,BYTE PTR ds:[esi]
  40a83d:	clc    
  40a83e:	add    BYTE PTR [esi+edi*2-0x6a22c6d4],0x2b
  40a846:	dec    eax
  40a847:	lods   eax,DWORD PTR ds:[esi]
  40a848:	js     0x40a8c1
  40a84a:	ret    
  40a84b:	jne    0x40a892
  40a84d:	cmp    ch,BYTE PTR [ecx]
  40a84f:	pop    edx
  40a850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a851:	xchg   edx,eax
  40a852:	test   DWORD PTR [edi-0x12],ebx
  40a855:	in     eax,dx
  40a856:	mov    esi,0x184f9785
  40a85b:	jnp    0x40a89b
  40a85d:	xchg   ebp,eax
  40a85e:	dec    edi
  40a85f:	jne    0x40a834
  40a861:	xchg   BYTE PTR [edx+0x34da51ba],dl
  40a867:	pop    es
  40a868:	lahf   
  40a869:	jno    0x40a823
  40a86b:	retf   
  40a86c:	adc    al,0x5f
  40a86e:	adc    DWORD PTR [ecx],eax
  40a870:	retf   0x79fe
  40a873:	in     eax,0x3c
  40a875:	add    ebp,ecx
  40a877:	mov    ecx,ss
  40a879:	fsub   st(3),st
  40a87b:	daa    
  40a87c:	cmc    
  40a87d:	add    al,0x32
  40a87f:	(bad)  
  40a880:	std    
  40a881:	dec    eax
  40a882:	xchg   ecx,eax
  40a883:	pusha  
  40a884:	fst    DWORD PTR [ecx-0x3c]
  40a887:	or     BYTE PTR [ecx+edi*4+0x1d4c8155],dl
  40a88e:	sub    al,0x30
  40a890:	shr    ch,0x67
  40a893:	sub    ebp,esp
  40a895:	sub    dl,BYTE PTR fs:[ecx+0x52]
  40a899:	cmp    eax,0x1cccbc87
  40a89e:	cmp    DWORD PTR [bx+0x5e],esp
  40a8a2:	sub    BYTE PTR [esi-0xb],bl
  40a8a5:	int3   
  40a8a6:	(bad)  
  40a8a7:	xchg   esp,eax
  40a8a8:	mov    edi,0xe6b3a87d
  40a8ad:	jne    0x40a894
  40a8af:	or     ch,ah
  40a8b1:	lods   eax,DWORD PTR ds:[esi]
  40a8b2:	inc    ebx
  40a8b3:	or     al,0x2c
  40a8b5:	sbb    bh,BYTE PTR [edi-0x80]
  40a8b8:	sub    BYTE PTR [edx],0x2b
  40a8bb:	(bad)  
  40a8bc:	push   esi
  40a8bd:	jmp    0x40a91b
  40a8bf:	or     BYTE PTR [eax+0x3f],bl
  40a8c2:	mov    BYTE PTR [esi+eiz*4+0xf],dh
  40a8c6:	fs push 0x3c
  40a8c9:	push   ecx
  40a8ca:	adc    eax,esp
  40a8cc:	dec    eax
  40a8cd:	ret    
  40a8ce:	pop    es
  40a8cf:	out    dx,al
  40a8d0:	call   0xa946:0x48fde582
  40a8d7:	test   BYTE PTR [edi-0x2dd8aac2],dh
  40a8dd:	call   0x417e8a2e
  40a8e2:	outs   dx,DWORD PTR ds:[esi]
  40a8e3:	jmp    0x40a91a
  40a8e5:	aad    0x8c
  40a8e7:	repnz dec esp
  40a8e9:	aam    0xe9
  40a8eb:	call   0xa079:0xa3e006b7
  40a8f2:	pop    esi
  40a8f3:	xor    eax,ebp
  40a8f5:	jecxz  0x40a972
  40a8f7:	pop    ebx
  40a8f8:	fistp  WORD PTR [ecx]
  40a8fa:	fbstp  TBYTE PTR [ebx+eiz*8]
  40a8fd:	fmulp  st(6),st
  40a8ff:	bndstx fs:[edx-0x54],bnd1
  40a904:	pop    eax
  40a905:	xchg   edi,eax
  40a906:	shl    BYTE PTR [ecx-0x26ea5d5b],0xfe
  40a90d:	pusha  
  40a90e:	stos   DWORD PTR es:[edi],eax
  40a90f:	mov    cl,0x18
  40a911:	mov    dl,0x51
  40a913:	and    edi,0xa9c6ab02
  40a919:	cmp    DWORD PTR [ecx+0x56fc458b],eax
  40a91f:	or     DWORD PTR ds:0x41abe2,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412370,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412370
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412370,ecx
  40a93f:	cmp    DWORD PTR ds:0x412370,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412370,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	sbb    al,0x7d
  40a9a8:	mov    ?,edx
  40a9aa:	loopne 0x40a9e6
  40a9ac:	jle    0x40aa2c
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40aa31
  40a9b3:	and    DWORD PTR [edi-0x40],0xffffffb8
  40a9b7:	mov    edi,0x23a8993
  40a9bc:	jge    0x40a961
  40a9be:	int    0xf2
  40a9c0:	xor    eax,0x7b895265
  40a9c5:	(bad)  
  40a9c7:	xor    eax,0xf573d282
  40a9cc:	sub    DWORD PTR [esi-0x7c44478a],edx
  40a9d2:	sbb    esp,DWORD PTR [ebp-0x2d]
  40a9d5:	xchg   esp,eax
  40a9d6:	sub    ch,BYTE PTR [esi]
  40a9d8:	adc    eax,0x1adb1dff
  40a9dd:	mov    eax,0x3f5f2bd5
  40a9e2:	fadd   QWORD PTR [edi-0x80eab30]
  40a9e8:	jae    0x40aa14
  40a9ea:	outs   dx,BYTE PTR ds:[esi]
  40a9eb:	push   edx
  40a9ec:	(bad)
  40a9f0:	ja     0x40aa68
  40a9f2:	sti    
  40a9f3:	jecxz  0x40aa29
  40a9f5:	jbe    0x40a9a4
  40a9f7:	enter  0xe7f2,0x6c
  40a9fb:	xor    bh,BYTE PTR [esi]
  40a9fd:	xor    al,0x8b
  40a9ff:	dec    edi
  40aa00:	inc    ebx
  40aa01:	jo     0x40a9fa
  40aa03:	js     0x40a9b6
  40aa05:	pop    esi
  40aa06:	test   DWORD PTR [ecx-0x3b124be9],0xbf13cab1
  40aa10:	es scas al,BYTE PTR es:[edi]
  40aa12:	xor    eax,0x110c1a50
  40aa17:	mov    al,ds:0xfe60c2a8
  40aa1c:	ret    0xcc62
  40aa1f:	jle    0x40a9ea
  40aa21:	ror    BYTE PTR [ebx-0x78e7fe5e],cl
  40aa27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa28:	mov    al,0x56
  40aa2a:	xchg   edi,eax
  40aa2b:	in     eax,dx
  40aa2c:	lods   eax,DWORD PTR ds:[esi]
  40aa2d:	pusha  
  40aa2e:	inc    esp
  40aa2f:	cs mov dh,0x93
  40aa32:	or     ebp,ebx
  40aa34:	cs mov ss,ebx
  40aa37:	cmp    eax,0x6d033a30
  40aa3c:	in     al,0xfc
  40aa3e:	and    ebp,DWORD PTR [esi+0x237bd04d]
  40aa44:	sbb    DWORD PTR [eax+0x30],eax
  40aa47:	stc    
  40aa48:	cmp    ebp,DWORD PTR [edx]
  40aa4a:	jbe    0x40aaac
  40aa4c:	and    DWORD PTR [ebp-0x29e8b979],ebp
  40aa52:	mov    ecx,0x484e1811
  40aa57:	cmp    eax,0xe6ed82fa
  40aa5c:	cmp    ch,BYTE PTR [ecx]
  40aa5e:	in     al,dx
  40aa5f:	arpl   cx,si
  40aa61:	sbb    al,0x4e
  40aa63:	inc    edx
  40aa64:	push   esp
  40aa65:	sub    DWORD PTR [edx+0x4eb55165],ebx
  40aa6b:	adc    cl,BYTE PTR [edx+0x1afb3349]
  40aa71:	test   DWORD PTR ds:0x9348e0cf,0x58806550
  40aa7b:	sbb    ebx,DWORD PTR [edi]
  40aa7d:	sbb    DWORD PTR [ecx+0x67],esp
  40aa80:	mov    BYTE PTR [ebp-0x51],dh
  40aa83:	retf   
  40aa84:	inc    eax
  40aa85:	loop   0x40aa9e
  40aa87:	aaa    
  40aa88:	jp     0x40aab9
  40aa8a:	mov    ebp,0x8c6ecc55
  40aa8f:	add    al,0x4a
  40aa91:	out    dx,al
  40aa92:	mov    ch,BYTE PTR [esi+0x60c9cbf1]
  40aa98:	xchg   ebp,eax
  40aa99:	cwde   
  40aa9a:	hlt    
  40aa9b:	jbe    0x40aaa2
  40aa9d:	push   ecx
  40aa9e:	cmp    esp,edx
  40aaa0:	and    eax,0x65746a1a
  40aaa5:	cld    
  40aaa6:	mov    ecx,0x2908f7f2
  40aaab:	jle    0x40aac0
  40aaad:	pusha  
  40aaae:	sbb    al,0x61
  40aab0:	adc    BYTE PTR [esi],al
  40aab2:	pop    ecx
  40aab3:	inc    edx
  40aab4:	dec    eax
  40aab5:	jnp    0x40ab0b
  40aab7:	mov    cl,0x1c
  40aab9:	and    bh,BYTE PTR [ebx-0x410f41a7]
  40aabf:	jmp    0xec1365ec
  40aac4:	loope  0x40aad4
  40aac6:	out    0x5d,al
  40aac8:	(bad)  
  40aac9:	xor    bh,BYTE PTR [eax]
  40aacb:	retf   0xd12
  40aace:	ror    DWORD PTR [eax+0x71],cl
  40aad1:	lods   eax,DWORD PTR ds:[esi]
  40aad2:	daa    
  40aad3:	call   edx
  40aad5:	and    dl,BYTE PTR ds:[esi-0x2]
  40aad9:	push   cs
  40aada:	enter  0xdace,0xd9
  40aade:	jns    0x40ab55
  40aae0:	mov    ebx,0x11a0482
  40aae5:	add    BYTE PTR [esi],dl
  40aae7:	mov    al,0xa2
  40aae9:	adc    ebp,DWORD PTR [esi+eiz*1]
  40aaec:	aaa    
  40aaed:	mov    ds:0xce405638,al
  40aaf2:	enter  0x4c4f,0x41
  40aaf6:	adc    eax,0x24f17512
  40aafb:	mov    ?,WORD PTR [edi+0x47]
  40aafe:	jmp    0x3caf80d2
  40ab03:	push   ds
  40ab04:	add    ecx,esi
  40ab06:	imul   ebp,DWORD PTR [edi],0xee80ef48
  40ab0c:	les    esi,FWORD PTR [ebx]
  40ab0e:	ret    0xf233
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0xa912ac8b
  40ab26:	loope  0x40aaec
  40ab28:	dec    edi
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40ab97
  40ab31:	mov    DWORD PTR [esi+0x2a],ecx
  40ab34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab35:	jmp    0x40ab77
  40ab37:	xor    DWORD PTR [edx],0x57c6a313
  40ab3d:	push   0x8280e5c7
  40ab42:	mov    edi,0x2b27a16c
  40ab47:	and    eax,0xaa75362e
  40ab4c:	sub    bl,BYTE PTR [eax-0x11]
  40ab4f:	aaa    
  40ab50:	mov    eax,0x56daef37
  40ab55:	enter  0xbfef,0xf2
  40ab59:	add    bl,BYTE PTR ds:0x958ff235
  40ab5f:	(bad)  
  40ab60:	fstp   QWORD PTR [ecx]
  40ab62:	les    esi,FWORD PTR [esi+ebp*4-0x52403c2f]
  40ab69:	call   0x3824:0x7c7ca09d
  40ab70:	shl    DWORD PTR [ebx-0x71],cl
  40ab73:	cld    
  40ab74:	or     al,0xe
  40ab76:	cmp    dh,BYTE PTR [eax]
  40ab78:	mov    ecx,0x30980ea4
  40ab7d:	jbe    0x40abc2
  40ab7f:	jle    0x40ab43
  40ab81:	push   ebp
  40ab82:	mov    al,0x54
  40ab84:	mov    cl,0xc1
  40ab86:	push   ds
  40ab87:	sti    
  40ab88:	inc    eax
  40ab89:	xor    eax,0xd6c94ac2
  40ab8e:	push   edx
  40ab8f:	jb     0x40ab89
  40ab91:	inc    esp
  40ab92:	loopne 0x40ab7b
  40ab94:	xchg   ebp,eax
  40ab95:	xchg   bh,ch
  40ab97:	add    BYTE PTR [esi+0x30],dh
  40ab9a:	in     al,dx
  40ab9b:	scas   al,BYTE PTR es:[edi]
  40ab9c:	cmp    BYTE PTR [ebx],cl
  40ab9e:	push   eax
  40ab9f:	or     al,0xa1
  40aba1:	push   edi
  40aba2:	adc    al,0x1a
  40aba4:	test   al,0x42
  40aba6:	(bad)  
  40aba7:	stos   DWORD PTR es:[edi],eax
  40aba8:	das    
  40aba9:	ins    DWORD PTR es:[edi],dx
  40abaa:	adc    ah,BYTE PTR [ebp+0x121db6e4]
  40abb0:	rol    dh,1
  40abb2:	xor    dl,BYTE PTR [ecx]
  40abb4:	xor    bh,dl
  40abb6:	dec    esp
  40abb7:	fnstenv ds:[edi]
  40abba:	add    DWORD PTR gs:[edi-0x6b],esp
  40abbe:	pop    eax
  40abbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abc0:	sahf   
  40abc1:	inc    edi
  40abc2:	xlat   BYTE PTR ds:[ebx]
  40abc3:	scas   eax,DWORD PTR es:[edi]
  40abc4:	mov    ecx,0xcff16bc3
  40abc9:	leave  
  40abca:	xor    BYTE PTR [edx+0x420f188c],dh
  40abd0:	ins    BYTE PTR es:[edi],dx
  40abd1:	pop    es
  40abd2:	sar    ch,1
  40abd4:	mov    ds:0xb9b741a5,al
  40abd9:	(bad)  [edi-0x11]
  40abdc:	or     bl,BYTE PTR [esi]
  40abde:	mov    gs,ebx
  40abe0:	icebp  
  40abe1:	aad    0x70
  40abe3:	jb     0x40ab69
  40abe5:	test   BYTE PTR [edx+0x52],bl
  40abe8:	sbb    DWORD PTR ds:[eax+0x56f4eac2],ebx
  40abef:	mov    ebp,0x87a87924
  40abf4:	ss int 0xd1
  40abf7:	dec    edi
  40abf8:	pop    edx
  40abf9:	jecxz  0x40abfd
  40abfb:	pop    edi
  40abfc:	sbb    DWORD PTR [ebp+0x37],ecx
  40abff:	jbe    0x40ab95
  40ac01:	packuswb mm5,mm3
  40ac04:	and    DWORD PTR [ecx-0x4e91e83c],ecx
  40ac0a:	into   
  40ac0b:	in     eax,dx
  40ac0c:	clc    
  40ac0d:	cmp    BYTE PTR [eax],ah
  40ac0f:	test   BYTE PTR [esi+0x5d5a1334],al
  40ac15:	popa   
  40ac16:	lods   eax,DWORD PTR ds:[esi]
  40ac17:	leave  
  40ac18:	hlt    
  40ac19:	enter  0xfe42,0x1d
  40ac1d:	sbb    eax,0x2157e8d8
  40ac22:	push   ecx
  40ac23:	pop    edx
  40ac24:	(bad)  
  40ac25:	push   esi
  40ac26:	int    0x49
  40ac28:	mov    eax,0x7e75c7
  40ac2d:	into   
  40ac2e:	pop    ss
  40ac2f:	int    0xb
  40ac31:	and    DWORD PTR [eax-0x2cfb47f4],ebx
  40ac37:	xchg   edi,eax
  40ac38:	xchg   ebx,eax
  40ac39:	or     BYTE PTR [ecx-0x3c],ch
  40ac3c:	sub    dl,BYTE PTR ds:0x10749435
  40ac42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac43:	dec    esi
  40ac44:	ins    BYTE PTR es:[edi],dx
  40ac45:	or     BYTE PTR [edi-0xc],bl
  40ac48:	jbe    0x40ac76
  40ac4a:	dec    eax
  40ac4b:	repz jp 0x40ac6f
  40ac4e:	pop    esi
  40ac4f:	and    ah,bh
  40ac51:	or     ah,0x7b
  40ac54:	add    dl,BYTE PTR [esi-0x4aeea893]
  40ac5a:	pop    esp
  40ac5b:	mov    al,0x8a
  40ac5d:	mov    al,0x85
  40ac5f:	cdq    
  40ac60:	(bad)  
  40ac61:	or     edx,DWORD PTR [edx+0x28]
  40ac64:	outs   dx,BYTE PTR ds:[esi]
  40ac65:	or     eax,0x3ee2471d
  40ac6a:	or     al,0x2f
  40ac6c:	cld    
  40ac6d:	mov    al,0xbd
  40ac6f:	mov    al,ds:0x7cf8a8c1
  40ac74:	or     ebx,DWORD PTR [eax+0x2e]
  40ac77:	les    ebx,FWORD PTR [eax+0x5e136061]
  40ac7d:	gs data16 loope 0x40ac8a
  40ac81:	test   BYTE PTR [ebx],0x6f
  40ac84:	and    BYTE PTR [ebx],ch
  40ac86:	stos   BYTE PTR es:[edi],al
  40ac87:	out    0x13,al
  40ac89:	mov    ch,0x7f
  40ac8b:	add    esi,ecx
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    eax,DWORD PTR ds:0x2a9bb8d0
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ad05
  40acc8:	adc    ecx,ecx
  40acca:	call   0x74b5:0xa64ceb02
  40acd1:	fsub   QWORD PTR [ebp+0x6254d4cc]
  40acd7:	les    ebp,FWORD PTR [ecx-0x2746a719]
  40acdd:	jne    0x40acd4
  40acdf:	sahf   
  40ace0:	jmp    0x40ac7c
  40ace2:	inc    ebx
  40ace3:	inc    ebx
  40ace4:	mov    ebx,0x82c6dc31
  40ace9:	cli    
  40acea:	fs repz cmp eax,0x14185e8
  40acf1:	push   0xffffffba
  40acf3:	ds int 0x42
  40acf6:	or     esp,eax
  40acf8:	ret    
  40acf9:	pop    ebp
  40acfa:	lods   al,BYTE PTR ds:[esi]
  40acfb:	sar    DWORD PTR [ebp-0x37],1
  40acfe:	sub    al,0x47
  40ad00:	sbb    dh,dh
  40ad02:	dec    edi
  40ad03:	cwde   
  40ad04:	js     0x40aca4
  40ad06:	outs   dx,DWORD PTR ds:[esi]
  40ad07:	lds    esp,FWORD PTR [eax-0x43]
  40ad0a:	push   ss
  40ad0b:	hlt    
  40ad0c:	rol    BYTE PTR [edx],cl
  40ad0e:	push   ecx
  40ad0f:	gs ja  0x40acbc
  40ad12:	pop    es
  40ad13:	xchg   esp,eax
  40ad14:	lea    edx,[edi+0x65]
  40ad17:	dec    ebx
  40ad18:	sbb    eax,0x3679f7b9
  40ad1d:	dec    eax
  40ad1e:	push   0x2545bd73
  40ad23:	push   edi
  40ad24:	data16 test BYTE PTR [esi+0x342a3b3e],dl
  40ad2b:	mov    bl,BYTE PTR [esp+ebx*2]
  40ad2e:	into   
  40ad2f:	jno    0x40ad07
  40ad31:	adc    BYTE PTR [edi+0x7c],bl
  40ad34:	lods   al,BYTE PTR ds:[esi]
  40ad35:	in     eax,dx
  40ad36:	stos   DWORD PTR es:[edi],eax
  40ad37:	ins    BYTE PTR es:[edi],dx
  40ad38:	int3   
  40ad39:	mov    dl,0x53
  40ad3b:	cmp    dl,dh
  40ad3d:	mov    ecx,0x37db50d3
  40ad42:	jbe    0x40adbf
  40ad44:	inc    eax
  40ad45:	mov    ds:0xe8d5d1e6,al
  40ad4a:	mov    al,0x2c
  40ad4c:	push   0xcceab9b3
  40ad51:	add    eax,0xc16b6049
  40ad56:	inc    ebp
  40ad57:	fwait
  40ad58:	and    dh,BYTE PTR [eax]
  40ad5a:	fmul   st,st(1)
  40ad5c:	dec    ebp
  40ad5d:	lea    esi,[edi-0x7]
  40ad60:	or     eax,0x7729518d
  40ad65:	lods   eax,DWORD PTR ds:[esi]
  40ad66:	ss sub eax,0x3d59c4f9
  40ad6c:	cmp    eax,0x358fe2c5
  40ad71:	call   0x449c:0xe2fae881
  40ad78:	(bad)  [edx-0x605683aa]
  40ad7e:	mov    dl,0xd5
  40ad80:	(bad)  
  40ad82:	cmovo  ebx,ecx
  40ad85:	pusha  
  40ad86:	loopne 0x40adb5
  40ad88:	inc    edx
  40ad89:	mov    ebp,0x707a061e
  40ad8e:	sbb    DWORD PTR [eax],0x188724ac
  40ad94:	mov    ebx,0x523799c9
  40ad99:	popa   
  40ad9a:	ret    
  40ad9b:	(bad)  
  40ad9c:	pusha  
  40ad9d:	fcomip st,st(4)
  40ad9f:	push   edi
  40ada0:	fnsave [edi-0x584a7465]
  40ada6:	mov    esi,0x9f348aac
  40adab:	mov    ebp,0x3321d246
  40adb0:	jp     0x40ae21
  40adb2:	adc    DWORD PTR [edx-0x54],ebx
  40adb5:	or     DWORD PTR [edi-0x63793d36],ecx
  40adbb:	mov    ds:0x1be394e8,al
  40adc0:	jb     0x40ade5
  40adc2:	fwait
  40adc3:	daa    
  40adc4:	xor    ecx,DWORD PTR [ebp-0x69]
  40adc7:	and    ah,BYTE PTR [ebx+0x5fcde221]
  40adcd:	xchg   esp,eax
  40adce:	mov    esp,0x53924d9b
  40add3:	or     ebx,0x893cd64f
  40add9:	sub    DWORD PTR [edx],eax
  40addb:	loopne 0x40ae39
  40addd:	mov    al,bh
  40addf:	mov    al,0x29
  40ade1:	pop    ecx
  40ade2:	cwde   
  40ade3:	mov    ebx,0xcc1b1770
  40ade8:	jmp    0x469c:0x616e38d0
  40adef:	out    0x43,eax
  40adf1:	jg     0x40addb
  40adf3:	push   eax
  40adf4:	inc    ebx
  40adf5:	leave  
  40adf6:	call   0x2ae3:0xeb35408f
  40adfd:	sbb    ah,BYTE PTR [edi-0x57d45b75]
  40ae03:	call   0xa275:0xde9cfca2
  40ae0a:	ror    bh,1
  40ae0c:	mov    esi,0xf717c3a1
  40ae11:	pop    esi
  40ae12:	adc    eax,0x635c5e83
  40ae17:	addr16 inc ebp
  40ae19:	mov    al,0xdd
  40ae1b:	cmp    DWORD PTR [edi-0x768fe45b],esp
  40ae21:	cmc    
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41abce,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41abde
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0x81268d5d
  40ae94:	enter  0xd560,0xf1
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	sbb    bl,BYTE PTR [eax]
  40aea1:	jmp    0xb283d18e
  40aea6:	in     eax,dx
  40aea7:	out    dx,al
  40aea8:	pop    ss
  40aea9:	xlat   BYTE PTR ds:[ebx]
  40aeaa:	sbb    dh,bh
  40aeac:	ja     0x40ae4f
  40aeae:	or     BYTE PTR [edx-0x56],bh
  40aeb1:	push   es
  40aeb2:	es int3 
  40aeb4:	stos   DWORD PTR es:[edi],eax
  40aeb5:	fmul   QWORD PTR [edx-0xe0e1b1e]
  40aebb:	dec    ebp
  40aebc:	sub    eax,0x1540740f
  40aec1:	in     eax,0x1d
  40aec3:	push   0x88024902
  40aec8:	sbb    eax,0xb351ebb2
  40aecd:	shl    BYTE PTR [edi-0x709e8da2],0xdb
  40aed4:	add    BYTE PTR [eax+0x25],dl
  40aed7:	xor    al,0x8e
  40aed9:	mov    BYTE PTR [ecx-0x3d4359ca],ah
  40aedf:	in     al,0x92
  40aee1:	sahf   
  40aee2:	popf   
  40aee3:	sahf   
  40aee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee5:	mov    dl,0x6f
  40aee7:	(bad)  
  40aee8:	in     al,0xdf
  40aeea:	jns    0x40ae99
  40aeec:	retf   0x31dd
  40aeef:	mov    ah,0x43
  40aef1:	adc    al,0x9e
  40aef3:	push   es
  40aef4:	adc    al,0xe4
  40aef6:	neg    BYTE PTR [esi+0x19]
  40aef9:	pop    edx
  40aefa:	rcl    ecx,cl
  40aefc:	push   ebx
  40aefd:	fdivr  st,st(6)
  40aeff:	fcomp  DWORD PTR [ebp+0x758bafd3]
  40af05:	and    eax,0xb3177b01
  40af0a:	mov    edx,0x804e0947
  40af0f:	out    0x20,eax
  40af11:	xor    al,0x2a
  40af14:	jmp    0x40af4a
  40af16:	inc    ecx
  40af17:	lods   al,BYTE PTR ds:[esi]
  40af18:	adc    ebp,DWORD PTR [esi+ebp*1]
  40af1b:	xchg   esp,ecx
  40af1d:	mov    bh,ah
  40af1f:	aad    0x7a
  40af21:	cs mov dl,0x35
  40af24:	inc    edi
  40af25:	arpl   WORD PTR [ebx*4+0x373f745b],bp
  40af2c:	sbb    DWORD PTR [eax],0x5e
  40af2f:	pusha  
  40af30:	shl    esp,0x79
  40af33:	dec    esp
  40af34:	xlat   BYTE PTR ds:[ebx]
  40af35:	sbb    eax,0x9c99e510
  40af3a:	leave  
  40af3b:	jns    0x40aefb
  40af3d:	mov    esp,0xd1a35bf8
  40af42:	jns    0x40af88
  40af44:	xchg   ecx,eax
  40af45:	or     ah,BYTE PTR [ebx]
  40af47:	lock xor DWORD PTR [edi+0x4d],ecx
  40af4b:	mov    ds:0xbf53d6d7,al
  40af50:	sub    eax,0x28988a95
  40af55:	add    eax,0x306168e1
  40af5a:	sbb    eax,0xfb58b39e
  40af5f:	dec    ebx
  40af60:	add    eax,0xaea9d8ba
  40af65:	pop    eax
  40af66:	(bad)  
  40af67:	mov    ebx,0x32729f
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412370,0x41abce
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x41235c,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41abe6,0x41235c
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41510d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417e3d
  40afb5:	and    DWORD PTR ds:0x417e41,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412374,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41abe2,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41abe2
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41abe2,esi
  40afe0:	cmp    DWORD PTR ds:0x41abe2,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41abe2,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41abca,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41abca
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41abca,edi
  40b02a:	cmp    DWORD PTR ds:0x41abca,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41abca,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4245b2,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41238c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417e49,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x412368
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4245ae
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41abd6
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41510d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx-0x3e]
  40b0b6:	fdiv   DWORD PTR [eax+0x7e3fc982]
  40b0bc:	jle    0x40b074
  40b0be:	jle    0x40b13e
  40b0c0:	jle    0x40b128
  40b0c2:	mov    ebp,0xbec45a64
  40b0c7:	(bad)  
  40b0c8:	push   ecx
  40b0c9:	ja     0x40b0cf
  40b0cb:	inc    ecx
  40b0cc:	xchg   esi,eax
  40b0cd:	inc    ecx
  40b0ce:	and    BYTE PTR [ebx-0x5c],0x6c
  40b0d2:	jns    0x40b144
  40b0d4:	mov    dh,0x61
  40b0d6:	jle    0x40b152
  40b0d8:	jmp    0xbd0cbed4
  40b0dd:	pop    esp
  40b0de:	mov    WORD PTR [edx],?
  40b0e0:	inc    esp
  40b0e1:	fwait
  40b0e2:	push   0x63
  40b0e4:	icebp  
  40b0e5:	mov    al,ds:0x5a749ef1
  40b0ea:	iret   
  40b0eb:	cmp    DWORD PTR [ebx+0x12],ebp
  40b0ee:	outs   dx,BYTE PTR ds:[esi]
  40b0ef:	push   edx
  40b0f0:	sbb    ecx,DWORD PTR [esi]
  40b0f2:	pop    ecx
  40b0f3:	dec    edx
  40b0f4:	mov    eax,0xd46ca404
  40b0f9:	xlat   BYTE PTR ds:[ebx]
  40b0fa:	push   ds
  40b0fb:	lods   al,BYTE PTR ds:[esi]
  40b0fc:	dec    edx
  40b0fd:	out    0x9f,al
  40b0ff:	into   
  40b100:	cmp    eax,0xa063e0fc
  40b105:	addr16 mov dh,0x99
  40b108:	lea    ecx,[eax+0x22]
  40b10b:	dec    ebx
  40b10c:	stos   BYTE PTR es:[edi],al
  40b10d:	adc    cl,BYTE PTR [edi+0x2]
  40b110:	dec    edx
  40b111:	mov    BYTE PTR [eax+0x12],dh
  40b114:	or     DWORD PTR [edx],ebp
  40b116:	leave  
  40b117:	sub    DWORD PTR [ecx-0x1cb311d8],edx
  40b11d:	xor    bh,cl
  40b11f:	adc    cl,0xef
  40b122:	push   0xb6cf3099
  40b127:	cmp    bl,dl
  40b129:	sub    eax,0xe626cd9b
  40b12e:	bound  ecx,QWORD PTR [ecx]
  40b130:	add    eax,0x286059fc
  40b135:	sub    BYTE PTR ds:0xcc47c3ad,al
  40b13b:	inc    esi
  40b13c:	sti    
  40b13d:	(bad)  
  40b13e:	jge    0x40b175
  40b140:	lea    esi,cs:[esi+0x2f5e5db4]
  40b147:	loope  0x40b1ac
  40b149:	test   al,0x33
  40b14c:	out    dx,al
  40b14d:	call   0xdff094c3
  40b152:	into   
  40b153:	sub    eax,0xc5b65f41
  40b158:	jmp    0x104c270f
  40b15d:	ins    BYTE PTR es:[edi],dx
  40b15e:	pop    es
  40b15f:	mov    BYTE PTR [ecx-0x45a294d2],0x2c
  40b166:	jo     0x40b13e
  40b168:	sub    ebp,DWORD PTR [esi]
  40b16a:	or     cl,BYTE PTR [eax+0x48277bcf]
  40b170:	loope  0x40b19b
  40b172:	loope  0x40b1ee
  40b174:	nop
  40b175:	je     0x40b129
  40b177:	sub    al,BYTE PTR [edi+0x4e]
  40b17a:	push   ss
  40b17b:	jno    0x40b1b5
  40b17d:	pop    edi
  40b17e:	push   ds
  40b17f:	gs das 
  40b181:	mov    WORD PTR [edx],ds
  40b183:	imul   esp,DWORD PTR [edx-0x18],0xffffffec
  40b187:	mov    ah,0x1b
  40b189:	mov    DWORD PTR [ebp-0x8],esi
  40b18c:	movzx  ecx,BYTE PTR ds:0x41abce
  40b193:	and    DWORD PTR ds:0x415115,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x24
  40b1ab:	push   ds
  40b1ac:	xor    bl,BYTE PTR [edi+0x1]
  40b1af:	cmp    al,0x7e
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b14d
  40b1b7:	lock lds ebp,FWORD PTR [eax+eiz*8]
  40b1bb:	loop   0x40b171
  40b1bd:	imul   edx,edx,0xfffffff1
  40b1c0:	jae    0x40b237
  40b1c2:	jle    0x40b14f
  40b1c4:	cmp    cl,dh
  40b1c6:	adc    edx,esp
  40b1c8:	jmp    0x40b1cf
  40b1ca:	sub    DWORD PTR [ebp-0xefdfa37],edi
  40b1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d1:	lds    ecx,FWORD PTR [ebp+0x7ce3ad33]
  40b1d7:	xor    bh,ah
  40b1d9:	push   edx
  40b1da:	aad    0xd4
  40b1dc:	std    
  40b1dd:	mov    edx,DWORD PTR [esi+ecx*2+0x1a8acbe2]
  40b1e4:	jp     0x40b245
  40b1e6:	xor    ebp,edx
  40b1e8:	scas   al,BYTE PTR es:[edi]
  40b1e9:	xchg   ecx,eax
  40b1ea:	fidivr WORD PTR [ecx+ebp*8]
  40b1ed:	inc    edi
  40b1ee:	enter  0x91c1,0xf1
  40b1f2:	stos   BYTE PTR es:[edi],al
  40b1f3:	push   ss
  40b1f4:	or     BYTE PTR [ebx],dh
  40b1f6:	push   ds
  40b1f7:	lock neg BYTE PTR [edi*2-0xe4fb01]
  40b1ff:	mov    cs,edx
  40b201:	or     DWORD PTR [ebx],0x7
  40b204:	jmp    0xeea74ec4
  40b209:	lock call 0x581f:0x39d338b8
  40b211:	cmp    esp,DWORD PTR [ebx+0x7721257c]
  40b217:	(bad)  
  40b218:	jp     0x40b222
  40b21a:	or     BYTE PTR [ecx+0x75],0x5b
  40b21e:	xchg   DWORD PTR [edx+0x1e],esi
  40b221:	imul   ebx,DWORD PTR [eax-0x413c473d],0xbbcda727
  40b22b:	cmp    ecx,esi
  40b22d:	or     DWORD PTR [ecx-0x355ead18],ecx
  40b233:	arpl   si,si
  40b235:	xor    BYTE PTR [edx+0x5afb254f],0x38
  40b23c:	add    DWORD PTR [ebx],edx
  40b23e:	mov    ebx,0x7f4d202
  40b243:	dec    edx
  40b244:	(bad)  
  40b245:	cs call 0x2b05c692
  40b24b:	inc    ebx
  40b24c:	sbb    DWORD PTR [ebx-0x5b],0x22
  40b250:	sbb    esp,DWORD PTR [edi-0x2c]
  40b253:	xchg   edx,eax
  40b254:	pop    edi
  40b255:	sahf   
  40b256:	aam    0xc4
  40b258:	lods   eax,DWORD PTR ds:[esi]
  40b259:	ror    BYTE PTR [ecx+0x18e77233],0x82
  40b260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b261:	aad    0x19
  40b263:	sub    ah,BYTE PTR [esi+ebp*1]
  40b266:	(bad)  
  40b267:	jb     0x40b21a
  40b269:	les    eax,FWORD PTR [esi-0xd]
  40b26c:	jmp    DWORD PTR [edx+0x32]
  40b26f:	lahf   
  40b270:	cld    
  40b271:	in     eax,dx
  40b272:	call   0x90cc:0xdc105c29
  40b279:	jb     0x40b2e9
  40b27b:	(bad)  
  40b27c:	int3   
  40b27d:	adc    DWORD PTR [ebx+0x2d81e84d],ecx
  40b283:	std    
  40b284:	push   eax
  40b285:	inc    ecx
  40b286:	add    dl,bl
  40b288:	stos   DWORD PTR es:[edi],eax
  40b289:	inc    ecx
  40b28a:	add    BYTE PTR [ebx],dh
  40b28c:	enter  0xff33,0x9
  40b290:	cmp    eax,0x41236c
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415105
  40b2aa:	xor    DWORD PTR ds:0x412354,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4245ae,0x412358
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4245ae,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0x6f19a5cd],edx
  40b2e2:	xor    al,0xde
  40b2e4:	mov    ds:0x7e7e3c59,al
  40b2e9:	mov    dh,0x7e
  40b2eb:	jle    0x40b36b
  40b2ed:	mov    dh,0xae
  40b2ef:	loope  0x40b2d0
  40b2f1:	dec    ebx
  40b2f2:	sub    BYTE PTR [edx+0x29eabfe],ch
  40b2f8:	mov    ds:0xf7d6fab3,al
  40b2fd:	dec    esp
  40b2fe:	pop    edi
  40b2ff:	(bad)  
  40b300:	and    bh,bh
  40b302:	xchg   DWORD PTR [ecx],esp
  40b304:	and    al,0x86
  40b306:	int    0x9f
  40b308:	cwde   
  40b309:	or     eax,0x5d942a64
  40b30e:	adc    ch,ah
  40b310:	pop    edi
  40b311:	inc    esi
  40b312:	fidiv  DWORD PTR ds:0x19387d82
  40b318:	cmp    ah,ah
  40b31a:	inc    esi
  40b31b:	stc    
  40b31c:	fwait
  40b31d:	sahf   
  40b31e:	push   ebp
  40b31f:	cmp    DWORD PTR [edi+0x5c],0xe04d74cf
  40b326:	inc    edi
  40b327:	das    
  40b328:	mov    cl,BYTE PTR [eax+0x3c918625]
  40b32e:	add    DWORD PTR ds:0x4f4e7ec7,ebx
  40b334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b335:	push   edx
  40b336:	lods   eax,DWORD PTR ds:[esi]
  40b337:	shl    DWORD PTR [edx-0x3c40c397],cl
  40b33d:	xor    al,0x86
  40b33f:	adc    ebp,esp
  40b341:	sub    bl,BYTE PTR [ecx]
  40b343:	(bad)  
  40b344:	(bad)  
  40b345:	jnp    0x40b351
  40b347:	pop    es
  40b348:	in     al,0xc0
  40b34a:	pop    ds
  40b34b:	lods   eax,DWORD PTR ds:[esi]
  40b34c:	cmc    
  40b34d:	in     al,dx
  40b34e:	inc    eax
  40b34f:	pop    ecx
  40b350:	lahf   
  40b351:	stos   DWORD PTR es:[edi],eax
  40b352:	mov    BYTE PTR [ebx],cl
  40b354:	aad    0x32
  40b356:	pop    ebp
  40b357:	add    cl,0x8e
  40b35a:	mov    eax,ds:0xe91ddbe
  40b35f:	cmp    BYTE PTR [eax],0xe1
  40b362:	sub    eax,0x5c0f25a5
  40b367:	fdivr  QWORD PTR [esi+edi*2+0x491a8050]
  40b36e:	jbe    0x40b3dc
  40b370:	or     edx,eax
  40b372:	popa   
  40b373:	mov    al,0xc
  40b375:	(bad)  
  40b376:	push   edi
  40b377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b378:	jg     0x40b3ab
  40b37a:	dec    ebx
  40b37b:	pop    ebx
  40b37c:	sbb    BYTE PTR [edx+0x55],cl
  40b37f:	pushf  
  40b380:	cli    
  40b381:	int3   
  40b382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b383:	sbb    esi,DWORD PTR [eax-0x41603dad]
  40b389:	mov    dh,0xae
  40b38b:	sub    al,0xe5
  40b38d:	test   eax,0xf36b9a0f
  40b392:	and    DWORD PTR [eax],edx
  40b394:	data16 lahf 
  40b396:	push   0x3f5ec04d
  40b39b:	pop    esi
  40b39c:	xor    eax,0x381c2b20
  40b3a1:	imul   edi,esp,0xffffffa6
  40b3a4:	and    al,0xa9
  40b3a6:	call   0xa9cd:0xf71b1757
  40b3ad:	or     eax,0xe4130878
  40b3b2:	and    al,0xb2
  40b3b4:	iret   
  40b3b5:	jne    0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41abe2,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41237c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41237c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41237c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41237c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41237c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415101,0x17
  40b41d:	cmp    DWORD PTR ds:0x415101,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415101,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415101
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415101,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4245c2,0x0
  40b45f:	mov    eax,ds:0x4245c2
  40b464:	inc    eax
  40b465:	mov    ds:0x4245c2,eax
  40b46a:	cmp    DWORD PTR ds:0x4245c2,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41ad5b
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4245c2,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4245c2
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4245c2,eax
  40b4a0:	cmp    DWORD PTR ds:0x4245c2,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41abca,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41abca,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41abca,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41abca
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41abca,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41abd6,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4245b6,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	cmp    DWORD PTR [eax+0x3d91c3fa],ebx
  40b53f:	jle    0x40b5bf
  40b541:	mov    dh,0x7e
  40b543:	jle    0x40b5c3
  40b545:	(bad)
  40b549:	jo     0x40b4d2
  40b54b:	in     al,dx
  40b54c:	repnz mov eax,0xeb7db813
  40b552:	xchg   edi,eax
  40b553:	mov    edi,0x80eb2b5
  40b558:	jecxz  0x40b525
  40b55a:	lods   al,BYTE PTR ds:[si]
  40b55c:	popf   
  40b55d:	call   FWORD PTR [ebx]
  40b55f:	ret    
  40b560:	ficom  DWORD PTR [ebp-0x60]
  40b563:	or     al,0xfd
  40b565:	loop   0x40b4f2
  40b567:	mov    al,ds:0xfc143284
  40b56c:	mov    DWORD PTR [ebx+0x52f7eca],eax
  40b572:	sbb    BYTE PTR [ebx+0x6cec86c],dh
  40b578:	popa   
  40b579:	pop    ds
  40b57a:	repz fdivr QWORD PTR ds:0x4c2d15a9
  40b581:	jg     0x40b5a4
  40b583:	sub    DWORD PTR [ebp+0x13],0x7c875078
  40b58a:	mov    al,ds:0x296aa50d
  40b58f:	xchg   ecx,eax
  40b590:	pop    ss
  40b591:	or     BYTE PTR [esp+eiz*8-0x6e3f8f40],bl
  40b598:	sub    al,0x15
  40b59a:	dec    ebx
  40b59b:	jle    0x40b546
  40b59d:	push   cs
  40b59e:	mov    eax,0x5258d111
  40b5a3:	in     al,dx
  40b5a4:	into   
  40b5a5:	(bad)  
  40b5a6:	jg     0x40b54c
  40b5a8:	mov    al,0x4c
  40b5aa:	pop    esp
  40b5ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ac:	cs sub al,0x8b
  40b5af:	fwait
  40b5b0:	iret   
  40b5b1:	in     eax,dx
  40b5b2:	sub    DWORD PTR [esi-0x26],esi
  40b5b5:	popf   
  40b5b6:	ins    BYTE PTR es:[edi],dx
  40b5b7:	hlt    
  40b5b8:	xchg   ecx,eax
  40b5b9:	pop    edi
  40b5ba:	rol    BYTE PTR [ecx+0x4a],cl
  40b5bd:	xchg   esi,eax
  40b5be:	(bad)  
  40b5bf:	test   al,0xd5
  40b5c1:	adc    ecx,DWORD PTR [ebx-0x4ea18fcd]
  40b5c7:	pop    ds
  40b5c8:	push   ebx
  40b5c9:	shl    DWORD PTR [edx-0x4124a82b],1
  40b5cf:	sbb    dh,BYTE PTR [esi*2+0x1030b8be]
  40b5d6:	(bad)  
  40b5d8:	test   edi,ecx
  40b5da:	ja     0x40b63a
  40b5dc:	inc    ecx
  40b5dd:	jo     0x40b56d
  40b5df:	test   DWORD PTR [edi+eiz*8-0x76156699],esi
  40b5e6:	push   0x46b138b
  40b5eb:	mov    ebx,0xf79378b2
  40b5f0:	sub    ax,0xc533
  40b5f4:	pusha  
  40b5f5:	dec    ebx
  40b5f6:	push   ds
  40b5f7:	pop    ebp
  40b5f8:	imul   edi,DWORD PTR [edi],0x772305f5
  40b5fe:	pusha  
  40b5ff:	xchg   edx,eax
  40b600:	sub    al,0xd2
  40b602:	xlat   BYTE PTR ds:[ebx]
  40b603:	rcr    dh,1
  40b605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b606:	cs sahf 
  40b608:	addr16 push edx
  40b60a:	ss int3 
  40b60c:	jae    0x40b61d
  40b60e:	test   BYTE PTR [edx+0x5],al
  40b611:	add    BYTE PTR [eax],al
  40b613:	sbb    DWORD PTR ds:0x415115,0x412368
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x5f,al
  40b632:	icebp  
  40b633:	out    0x59,al
  40b635:	jmp    0xb6bf346c
  40b63a:	jle    0x40b6ba
  40b63c:	jle    0x40b5d3
  40b63e:	mov    ch,BYTE PTR [esp+ebp*1-0x78]
  40b642:	sbb    dh,BYTE PTR [edi+ebp*8-0x6c]
  40b646:	jo     0x40b5e6
  40b648:	pusha  
  40b649:	adc    eax,0x5f857712
  40b64e:	shl    DWORD PTR [edi+edx*8-0x5aa5798b],1
  40b655:	leave  
  40b656:	mov    ch,0xdd
  40b658:	sahf   
  40b659:	mov    ds:0xabe40cc3,al
  40b65e:	outs   dx,BYTE PTR ds:[esi]
  40b65f:	loopne 0x40b632
  40b661:	(bad)  
  40b662:	out    dx,al
  40b663:	and    ebp,DWORD PTR [ebx-0x30681778]
  40b669:	and    BYTE PTR ds:0xc8a9433c,ch
  40b66f:	fdivp  st(0),st
  40b671:	xchg   ebp,eax
  40b672:	push   0xe83d21f8
  40b677:	jae    0x40b6ef
  40b679:	pop    esi
  40b67a:	sbb    eax,0xc2fdfb22
  40b67f:	loope  0x40b663
  40b681:	cmp    eax,0xea384e22
  40b686:	out    dx,eax
  40b687:	test   eax,0x82582f7a
  40b68d:	lods   eax,DWORD PTR ds:[esi]
  40b68e:	sbb    eax,0x40a75cd
  40b693:	rcr    cl,cl
  40b695:	es (bad) 
  40b697:	xor    DWORD PTR [ebp-0x5e],ecx
  40b69a:	loop   0x40b636
  40b69c:	pop    es
  40b69d:	cs pop ecx
  40b69f:	pop    esp
  40b6a0:	and    cl,BYTE PTR [esi]
  40b6a2:	das    
  40b6a3:	push   0x460dc67d
  40b6a8:	int3   
  40b6a9:	add    al,0xfe
  40b6ab:	xchg   esi,eax
  40b6ac:	nop
  40b6ad:	hlt    
  40b6ae:	mov    bh,0xed
  40b6b0:	leave  
  40b6b1:	cmp    cl,BYTE PTR [edi-0x7ad1817]
  40b6b7:	inc    ebx
  40b6b8:	add    eax,0xdf04d6ee
  40b6bd:	cmp    BYTE PTR [edx-0x2f],0x9a
  40b6c1:	pop    eax
  40b6c2:	xchg   esi,eax
  40b6c3:	aad    0xab
  40b6c5:	and    eax,DWORD PTR [ebx+0x742c4857]
  40b6cb:	push   edx
  40b6cc:	and    eax,0xfb3aca6d
  40b6d1:	lahf   
  40b6d2:	lock mov ah,0xf4
  40b6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d6:	jno    0x40b68b
  40b6d8:	fs mov dh,0xe8
  40b6db:	jmp    0x40b752
  40b6dd:	(bad)  
  40b6df:	jo     0x40b6c8
  40b6e1:	add    edi,DWORD PTR [edi+0x32]
  40b6e4:	sub    ebx,0x17
  40b6e7:	jecxz  0x40b71b
  40b6e9:	and    edx,ecx
  40b6eb:	mov    esi,0xef2d1ea2
  40b6f0:	jbe    0x40b700
  40b6f2:	sub    BYTE PTR [ecx-0x4a075f54],ch
  40b6f8:	pop    esp
  40b6f9:	mov    eax,0xfb84d6bc
  40b6fe:	inc    edi
  40b6ff:	retf   
  40b700:	inc    esp
  40b701:	inc    edx
  40b702:	jns    0x40b73b
  40b704:	ins    DWORD PTR es:[edi],dx
  40b705:	push   DWORD PTR [ebp+0x8]
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41abde,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412370
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4245ba,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415111,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x412364,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417e49,0x0
  40b756:	mov    eax,ds:0x417e49
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417e49,eax
  40b761:	cmp    DWORD PTR ds:0x417e49,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415115
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415111
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41adfd
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417e49,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417e4d
  40b7b2:	sbb    DWORD PTR ds:0x41237c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412390
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417eaa
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4245b6,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x41235c,0x415101
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417e59,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417e59,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417e59,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417e59,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417e59
  40b835:	dec    eax
  40b836:	mov    ds:0x417e59,eax
  40b83b:	mov    eax,ds:0x417e59
  40b840:	dec    eax
  40b841:	mov    ds:0x417e59,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0x623323e6
  40b867:	pop    ds
  40b868:	and    DWORD PTR gs:[ebx],esi
  40b86b:	jle    0x40b8eb
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	cli    
  40b872:	xchg   BYTE PTR [esi],cl
  40b874:	imul   esp,DWORD PTR [ebx+0x16a04dfc],0xd7070973
  40b87e:	test   DWORD PTR [esi],edx
  40b880:	xor    DWORD PTR [ecx],0x92685485
  40b886:	rcr    BYTE PTR [edx+0x621852ba],0x3a
  40b88d:	mov    esi,0x2841fc3d
  40b892:	and    bl,BYTE PTR [edi+esi*1]
  40b895:	scas   eax,DWORD PTR es:[edi]
  40b896:	add    DWORD PTR [ebx+0x6c],0x2e
  40b89a:	jne    0x40b832
  40b89c:	cmc    
  40b89d:	outs   dx,BYTE PTR ds:[esi]
  40b89e:	mov    ebp,0xd882b1f1
  40b8a3:	or     BYTE PTR [edi],al
  40b8a5:	cwde   
  40b8a6:	int    0x3c
  40b8a8:	jnp    0x40b8d2
  40b8aa:	mov    cl,0x2b
  40b8ac:	dec    esp
  40b8ad:	imul   eax,DWORD PTR [ebx+0x7dc0e98f],0x6a
  40b8b4:	cmp    al,0x32
  40b8b6:	mov    edx,0xd2df196e
  40b8bb:	pop    ebx
  40b8bc:	jno    0xb4da7b12
  40b8c2:	mov    esp,0x3aadd72c
  40b8c7:	xchg   esi,eax
  40b8c8:	mov    ecx,0xeb208f1
  40b8cd:	dec    esi
  40b8ce:	sar    dl,cl
  40b8d0:	pop    ebp
  40b8d1:	ins    DWORD PTR es:[edi],dx
  40b8d2:	repnz pop ebp
  40b8d4:	dec    ebp
  40b8d5:	fdivr  QWORD PTR [esi-0x3d]
  40b8d8:	arpl   cx,si
  40b8da:	fnstenv [esp+esi*1+0x689e8c2]
  40b8e1:	sbb    DWORD PTR [esi+0x5e],esi
  40b8e4:	mov    dh,0x58
  40b8e6:	xchg   ebx,eax
  40b8e7:	mov    ebx,ecx
  40b8e9:	add    dl,BYTE PTR [ebp-0xf]
  40b8ec:	xchg   edi,eax
  40b8ed:	(bad)  
  40b8ee:	sub    eax,0xb0c551da
  40b8f3:	or     eax,edi
  40b8f5:	hlt    
  40b8f6:	sbb    ebp,ebx
  40b8f8:	(bad)  
  40b8f9:	rcl    cl,1
  40b8fb:	(bad)  
  40b8fc:	in     al,0xa5
  40b8fe:	jmp    0x40b8b1
  40b900:	pop    ebx
  40b901:	xor    esi,esp
  40b903:	outs   dx,BYTE PTR ds:[esi]
  40b904:	pop    es
  40b905:	jecxz  0x40b8f4
  40b907:	pop    ss
  40b908:	bound  ebx,QWORD PTR [eax+0x4dee105f]
  40b90e:	repz adc al,0x75
  40b911:	fmulp  st(0),st
  40b913:	pop    ds
  40b914:	inc    eax
  40b915:	sahf   
  40b916:	adc    dh,BYTE PTR [ecx+0x2c40201f]
  40b91c:	and    ebp,0x4b5b4c28
  40b922:	push   ebp
  40b923:	jo     0x40b8f5
  40b925:	ja     0x40b961
  40b927:	int    0x7e
  40b929:	pop    edi
  40b92a:	mov    al,0x9
  40b92c:	pop    es
  40b92d:	out    0x4b,eax
  40b92f:	test   BYTE PTR [edi+ecx*2],bh
  40b932:	js     0x40b9a8
  40b934:	lds    ebp,FWORD PTR [ebp-0x766b0875]
  40b93a:	dec    ebp
  40b93b:	aam    0x8b
  40b93d:	inc    ebp
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	inc    ebx
  40b965:	xchg   esp,eax
  40b966:	dec    esp
  40b967:	into   
  40b968:	jns    0x40b99d
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	stos   BYTE PTR es:[edi],al
  40b971:	loope  0x40b94d
  40b973:	cwde   
  40b974:	push   eax
  40b975:	mov    bl,0xe2
  40b977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b978:	adc    eax,0x493cbc43
  40b97d:	jbe    0x40b99c
  40b97f:	ins    BYTE PTR es:[edi],dx
  40b980:	mov    al,ds:0xfd93245a
  40b985:	and    al,BYTE PTR [eax+0x15fefbcc]
  40b98b:	jle    0x40b9b6
  40b98d:	into   
  40b98e:	hlt    
  40b98f:	aas    
  40b990:	adc    esp,esp
  40b992:	sub    bh,BYTE PTR [esi]
  40b994:	add    edi,ebx
  40b996:	mov    al,ds:0x2737192e
  40b99b:	mov    ds:0x120e658a,eax
  40b9a0:	dec    ecx
  40b9a1:	cmp    eax,0x3baac2c1
  40b9a6:	cmp    dh,cl
  40b9a8:	pushf  
  40b9a9:	adc    dl,BYTE PTR [edx+0x7a4fa203]
  40b9af:	ror    ch,1
  40b9b1:	sbb    bh,bl
  40b9b3:	out    0x67,al
  40b9b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b6:	popf   
  40b9b7:	cmp    eax,DWORD PTR [edi]
  40b9b9:	sti    
  40b9ba:	push   0x2
  40b9bc:	pop    ds
  40b9bd:	(bad)  
  40b9be:	push   ebp
  40b9bf:	or     al,0xed
  40b9c1:	icebp  
  40b9c2:	fld    QWORD PTR [ebx]
  40b9c4:	mov    dl,0x63
  40b9c6:	sbb    eax,DWORD PTR [esi-0x4e]
  40b9c9:	sahf   
  40b9ca:	fstp   st(5)
  40b9cc:	jo     0x40b94e
  40b9ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9cf:	hlt    
  40b9d0:	push   ss
  40b9d1:	mov    bl,0x27
  40b9d3:	or     esp,DWORD PTR [ebx+0x1e]
  40b9d6:	jo     0x40b9e1
  40b9d8:	jle    0x40b984
  40b9da:	dec    ebx
  40b9db:	or     al,0xf7
  40b9dd:	sbb    al,0x5
  40b9df:	cmp    eax,0xfff007b8
  40b9e4:	xchg   edx,eax
  40b9e5:	add    al,BYTE PTR [ecx]
  40b9e7:	gs dec ebp
  40b9e9:	loop   0x40b9b6
  40b9eb:	jle    0x40b9cb
  40b9ed:	cmp    ecx,ecx
  40b9ef:	adc    ah,BYTE PTR [ecx]
  40b9f1:	scas   eax,DWORD PTR es:[edi]
  40b9f2:	mov    bh,dl
  40b9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f5:	mov    ds:0x99b76238,al
  40b9fa:	cld    
  40b9fb:	add    ch,BYTE PTR [esi]
  40b9fd:	adc    DWORD PTR [ecx],ebx
  40b9ff:	sbb    DWORD PTR [ebx],esp
  40ba01:	arpl   WORD PTR [esi-0x5135047a],cx
  40ba07:	push   eax
  40ba08:	mov    eax,ds:0xc791f050
  40ba0d:	xchg   edx,eax
  40ba0e:	pop    esp
  40ba0f:	jns    0x40ba0f
  40ba11:	je     0x40ba4d
  40ba13:	loope  0x40ba82
  40ba15:	mov    edx,0x4a9655d5
  40ba1a:	rcl    BYTE PTR [ecx-0x34],0xcc
  40ba1e:	lea    eax,[eax-0x22]
  40ba21:	push   esp
  40ba22:	or     eax,0x331c7263
  40ba27:	nop
  40ba28:	mov    ah,0x14
  40ba2a:	aaa    
  40ba2b:	lds    edi,FWORD PTR [edi+ebx*2+0x74]
  40ba2f:	imul   ebx,ebp,0x69
  40ba32:	adc    al,0x5d
  40ba34:	jnp    0x40b9e3
  40ba36:	adc    eax,0xf8458d57
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock push 0x5e
  40ba75:	inc    edi
  40ba76:	sbb    DWORD PTR [ecx-0x498181d0],esi
  40ba7c:	jle    0x40bafc
  40ba7e:	jle    0x40baeb
  40ba80:	push   ecx
  40ba81:	inc    ebp
  40ba82:	xchg   edi,eax
  40ba83:	jmp    0x242a:0x9235b4a7
  40ba8a:	out    0x8c,al
  40ba8c:	pop    edx
  40ba8d:	dec    edi
  40ba8e:	push   ebx
  40ba8f:	push   esi
  40ba90:	cmp    DWORD PTR [edi],ecx
  40ba92:	adc    eax,0xde238f43
  40ba97:	ds dec eax
  40ba99:	imul   ecx,ebx,0x38a22dfc
  40ba9f:	mov    ebx,0x2d3f1ee4
  40baa4:	mov    ds:0xa91dc0a2,eax
  40baa9:	pop    ebx
  40baaa:	inc    edi
  40baab:	hlt    
  40baac:	test   DWORD PTR [esi*2+0x3952fa31],edx
  40bab3:	sbb    al,0xcd
  40bab5:	cli    
  40bab6:	psrld  mm4,mm2
  40bab9:	scas   eax,DWORD PTR es:[edi]
  40baba:	into   
  40babb:	add    DWORD PTR [ebx+0x1407a42a],0xab1dc1d
  40bac5:	jg     0x40bab8
  40bac7:	inc    eax
  40bac8:	loop   0x40bb12
  40baca:	lea    ebx,[edi-0xa]
  40bacd:	mov    BYTE PTR [ebx+0x6e9a87e4],al
  40bad3:	inc    edx
  40bad4:	mov    cl,0xf5
  40bad6:	dec    eax
  40bad7:	pushf  
  40bad8:	adc    eax,0x7e308192
  40badd:	pop    eax
  40bade:	popa   
  40badf:	aad    0xb7
  40bae1:	scas   al,BYTE PTR es:[edi]
  40bae2:	sahf   
  40bae3:	test   DWORD PTR [eax-0x71],esi
  40bae6:	cmp    edx,ebp
  40bae8:	ficom  WORD PTR [eax]
  40baea:	popf   
  40baeb:	xchg   ebx,eax
  40baec:	xor    DWORD PTR [edi],edx
  40baee:	aad    0x6a
  40baf0:	repnz (bad) 
  40baf2:	fmul   DWORD PTR [ecx+eax*8]
  40baf5:	inc    esi
  40baf6:	mov    bl,0xad
  40baf8:	in     eax,0x8f
  40bafa:	mov    ebp,0xa7cce53c
  40baff:	and    al,0xf8
  40bb01:	(bad)  
  40bb03:	cmp    eax,0xa0ad4c9f
  40bb08:	pushf  
  40bb09:	lods   eax,DWORD PTR ds:[esi]
  40bb0a:	mov    ch,0x1e
  40bb0c:	cwde   
  40bb0d:	mov    esi,0x841fbfb0
  40bb12:	xor    BYTE PTR ds:0x531d6c27,al
  40bb18:	jne    0x40bac3
  40bb1a:	mov    ah,0xf2
  40bb1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb1d:	pop    edi
  40bb1e:	inc    edi
  40bb1f:	sbb    bl,cl
  40bb21:	xchg   ecx,eax
  40bb22:	add    edx,edx
  40bb24:	push   ebx
  40bb25:	mov    eax,ss
  40bb27:	lahf   
  40bb28:	xor    al,0x2b
  40bb2a:	mov    ebp,0x24365921
  40bb2f:	add    dl,BYTE PTR [eax]
  40bb31:	fnop   
  40bb33:	or     eax,0xeadd6d7f
  40bb38:	add    ebp,DWORD PTR [ebx-0x41bc98e0]
  40bb3e:	fnstenv [edi]
  40bb40:	push   ecx
  40bb41:	xchg   edx,eax
  40bb42:	add    al,0x9c
  40bb44:	push   ds
  40bb45:	daa    
  40bb46:	sub    al,0x47
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	aas    
  40bbc2:	xchg   esi,eax
  40bbc3:	(bad)  
  40bbc4:	xchg   edi,eax
  40bbc5:	mov    DWORD PTR [ecx],esi
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	push   edx
  40bbce:	fidivr DWORD PTR [ebx]
  40bbd0:	pop    es
  40bbd1:	mov    esi,0xe8deb487
  40bbd6:	ret    
  40bbd7:	jge    0x40bb93
  40bbd9:	adc    BYTE PTR [edx],cl
  40bbdb:	sti    
  40bbdc:	cmp    DWORD PTR [ebp-0x21],edi
  40bbdf:	adc    ecx,DWORD PTR [edx]
  40bbe1:	lea    ebx,[ebx+ebp*1-0x172310b9]
  40bbe8:	out    0xe8,al
  40bbea:	cmp    al,0x9
  40bbec:	add    esp,esp
  40bbee:	jne    0x40bc12
  40bbf0:	in     eax,dx
  40bbf1:	lock xor dl,dl
  40bbf4:	add    esp,DWORD PTR [edx-0x2ad9866c]
  40bbfa:	pop    esi
  40bbfb:	add    ecx,DWORD PTR [ecx+0x22]
  40bbfe:	push   cs
  40bbff:	sbb    eax,eax
  40bc01:	sub    BYTE PTR [esi-0x3d],0xd0
  40bc05:	cmp    ecx,DWORD PTR [ecx-0x7ef8b527]
  40bc0b:	inc    esi
  40bc0c:	inc    esp
  40bc0d:	adc    ebx,DWORD PTR [ebx+0x46]
  40bc10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc11:	test   al,0xe0
  40bc13:	push   ds
  40bc14:	int    0xa
  40bc16:	mov    al,0x32
  40bc18:	std    
  40bc19:	mov    ?,WORD PTR [edi]
  40bc1b:	(bad)  
  40bc1c:	cmp    BYTE PTR [ebx],dh
  40bc1e:	stos   DWORD PTR es:[edi],eax
  40bc1f:	cmp    al,0x2c
  40bc21:	adc    DWORD PTR [eax+edi*4],ecx
  40bc24:	pushf  
  40bc25:	mov    edx,0x3d62b01d
  40bc2a:	mov    eax,DWORD PTR [edx-0x20f77590]
  40bc30:	stos   BYTE PTR es:[edi],al
  40bc31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc32:	dec    edi
  40bc33:	(bad)  
  40bc34:	cmc    
  40bc35:	xlat   BYTE PTR ds:[ebx]
  40bc36:	adc    al,BYTE PTR [esp+edx*1]
  40bc39:	pop    ss
  40bc3a:	fmul   DWORD PTR [edi+0x4e]
  40bc3d:	pop    ss
  40bc3e:	jbe    0x40bc47
  40bc40:	sub    DWORD PTR [ebx-0x76],ecx
  40bc43:	sbb    edi,DWORD PTR [ecx-0x35]
  40bc46:	adc    al,BYTE PTR [eax+0x1ba8018d]
  40bc4c:	rcr    BYTE PTR [eax+eiz*2-0x57],1
  40bc50:	mov    al,0x4d
  40bc52:	scas   eax,DWORD PTR es:[edi]
  40bc53:	sub    eax,0x25df06d4
  40bc58:	pop    edi
  40bc59:	arpl   cx,dx
  40bc5b:	pop    ebp
  40bc5c:	sub    dh,BYTE PTR [edi-0x7a]
  40bc5f:	(bad)  
  40bc61:	jne    0x40bc7b
  40bc63:	add    eax,DWORD PTR [ecx]
  40bc65:	mul    DWORD PTR [ebx-0x56a01100]
  40bc6b:	cmp    esi,DWORD PTR [ecx]
  40bc6d:	outs   dx,DWORD PTR ds:[esi]
  40bc6e:	fstp   TBYTE PTR [edx+0x3c]
  40bc71:	ja     0x40bc82
  40bc73:	je     0x40bc85
  40bc75:	cmp    esp,DWORD PTR [ebx-0x4a]
  40bc78:	jecxz  0x40bc16
  40bc7a:	or     eax,0x89a23e01
  40bc7f:	loop   0x40bca5
  40bc81:	jg     0x40bcef
  40bc83:	pop    ebx
  40bc84:	(bad)  
  40bc85:	jmp    0xe437:0x2b9ebd5b
  40bc8c:	int3   
  40bc8d:	pop    ebx
  40bc8e:	dec    ecx
  40bc8f:	les    ebx,FWORD PTR [ebp-0xa8eaf8]
  40bc95:	pop    ebx
  40bc96:	xchg   ebx,ecx
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	(bad)  
  40bcc2:	daa    
  40bcc3:	cwde   
  40bcc4:	ret    0x36c1
  40bcc7:	jle    0x40bd47
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	and    dh,bl
  40bccf:	jg     0x40bc6e
  40bcd1:	ja     0x40bcc6
  40bcd3:	cmp    BYTE PTR [edx],0x9c
  40bcd6:	mov    eax,0x623e7451
  40bcdb:	retf   
  40bcdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcdd:	mov    ah,0x95
  40bcdf:	ja     0x40bc8c
  40bce1:	cwde   
  40bce2:	daa    
  40bce3:	test   eax,0xc5a5464e
  40bce8:	mov    cl,0xa9
  40bcea:	mov    ch,0xd6
  40bcec:	cwde   
  40bced:	mov    bh,dh
  40bcef:	or     BYTE PTR [esi-0x42],dh
  40bcf2:	aad    0xbd
  40bcf4:	shl    ch,1
  40bcf6:	outs   dx,BYTE PTR ds:[esi]
  40bcf7:	mov    eax,edi
  40bcf9:	jl     0x40bd01
  40bcfb:	in     eax,dx
  40bcfc:	shr    BYTE PTR [ebx-0x71],cl
  40bcff:	sbb    DWORD PTR [edi-0x781e2441],ebx
  40bd05:	aad    0xde
  40bd07:	ror    DWORD PTR [ebp+0x48],1
  40bd0a:	dec    edx
  40bd0b:	popf   
  40bd0c:	call   0x8a89:0x741f0f18
  40bd13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd14:	sub    esi,DWORD PTR [edx]
  40bd16:	xor    eax,0xbf977861
  40bd1b:	icebp  
  40bd1c:	sbb    DWORD PTR [ebp-0x8],edx
  40bd1f:	inc    edi
  40bd20:	dec    ebx
  40bd21:	dec    edi
  40bd22:	push   edi
  40bd23:	xchg   edx,eax
  40bd24:	push   esp
  40bd25:	jmp    0x49868189
  40bd2a:	pop    edi
  40bd2b:	ins    BYTE PTR es:[edi],dx
  40bd2c:	add    eax,0x69ca93bb
  40bd31:	ret    
  40bd32:	dec    esp
  40bd33:	mov    ?,WORD PTR [esi]
  40bd35:	arpl   WORD PTR [edi],ax
  40bd37:	out    dx,eax
  40bd38:	push   ecx
  40bd39:	loope  0x40bcfe
  40bd3b:	fwait
  40bd3c:	and    DWORD PTR [eax-0x4da73e73],esi
  40bd42:	stos   DWORD PTR es:[edi],eax
  40bd43:	imul   ecx,DWORD PTR [ecx-0x709201b8],0x5712daa4
  40bd4d:	retf   
  40bd4e:	push   0x5d
  40bd50:	mov    WORD PTR [ecx+0x77],ds
  40bd53:	mov    ecx,0xc2ad254d
  40bd58:	(bad)  
  40bd59:	mov    eax,0x7dfc7558
  40bd5e:	push   ebx
  40bd5f:	daa    
  40bd60:	daa    
  40bd61:	ins    DWORD PTR es:[edi],dx
  40bd62:	outs   dx,BYTE PTR ds:[esi]
  40bd63:	add    al,0xf1
  40bd65:	jl     0x40bdbf
  40bd67:	rol    DWORD PTR [ebp-0x5bd092f],0xc7
  40bd6e:	adc    esi,DWORD PTR [edi-0x33]
  40bd71:	nop
  40bd72:	test   BYTE PTR [ecx-0x6e],al
  40bd75:	mul    DWORD PTR [edx]
  40bd77:	lds    eax,FWORD PTR [eax+0x77]
  40bd7a:	and    al,0xa6
  40bd7c:	je     0x40bdd5
  40bd7e:	mov    al,0x42
  40bd80:	mov    ch,0x59
  40bd82:	pop    es
  40bd83:	xor    DWORD PTR [ecx+0x23f41eda],ebx
  40bd89:	fsubrp st(2),st
  40bd8b:	add    ebp,DWORD PTR [ebx+esi*2-0xe]
  40bd8f:	mov    al,dl
  40bd91:	fwait
  40bd92:	cmp    al,0xf8
  40bd94:	shl    BYTE PTR [ebx],cl
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	hlt    
  40bdbd:	jne    0x40bdee
  40bdbf:	and    ebx,DWORD PTR [ecx]
  40bdc1:	aaa    
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	retf   0x8ef1
  40bdcb:	loop   0x40bddb
  40bdcd:	and    eax,esp
  40bdcf:	xor    bl,BYTE PTR ds:0x38971584
  40bdd5:	repz rcl BYTE PTR [si-0x6a],1
  40bdda:	pop    es
  40bddb:	pop    ss
  40bddc:	or     BYTE PTR [edx+0x6c],bh
  40bddf:	lods   al,BYTE PTR ds:[esi]
  40bde0:	data16 add al,0x6d
  40bde3:	ins    BYTE PTR es:[edi],dx
  40bde4:	add    DWORD PTR [ecx+0x17206ad7],ecx
  40bdea:	jge    0x40bdad
  40bdec:	fiadd  WORD PTR [ecx-0x39]
  40bdef:	sbb    al,0xd0
  40bdf1:	and    al,0x63
  40bdf3:	xlat   BYTE PTR ds:[ebx]
  40bdf4:	mov    eax,ds:0xd720bc07
  40bdf9:	jnp    0x40bdcf
  40bdfb:	iret   
  40bdfc:	xchg   edi,eax
  40bdfd:	jmp    0x13f2:0xdd9d49b2
  40be04:	add    al,0x60
  40be06:	pusha  
  40be07:	sub    BYTE PTR [ecx],ch
  40be09:	enter  0xcb64,0x2d
  40be0d:	out    0x13,al
  40be0f:	data16 (bad) 
  40be11:	inc    BYTE PTR [ecx+ebp*8]
  40be14:	(bad)  
  40be16:	jle    0x40bdeb
  40be18:	cmp    edi,DWORD PTR [ebx+0x767676fe]
  40be1e:	frstor [ecx-0x5d]
  40be21:	in     eax,0x47
  40be23:	lea    ecx,[esi-0x6df603f5]
  40be29:	es das 
  40be2b:	jmp    0x7d35aae6
  40be30:	mov    ebp,0x24533afd
  40be35:	adc    eax,0x2388ab39
  40be3a:	aam    0xec
  40be3c:	cld    
  40be3d:	jg     0x40be64
  40be3f:	sub    al,0x73
  40be41:	add    bl,BYTE PTR [edi-0x54a6a4ca]
  40be47:	test   edi,0xb66ba7a6
  40be4d:	sti    
  40be4e:	adc    dl,bh
  40be50:	dec    esp
  40be51:	mov    es,WORD PTR [edi+0x49]
  40be54:	jmp    0x40be95
  40be56:	idiv   DWORD PTR [ebp-0x25]
  40be59:	cmp    DWORD PTR [esi-0x5a],edx
  40be5c:	and    eax,0xfa58ddcb
  40be61:	sub    eax,0x99d96582
  40be66:	sbb    ch,BYTE PTR [edi+esi*2]
  40be69:	shl    DWORD PTR [ecx+0x1ab99c52],0x85
  40be70:	cmp    al,0xa9
  40be72:	jo     0x40be24
  40be74:	and    al,0xe6
  40be76:	pop    esi
  40be77:	dec    esp
  40be78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be79:	enter  0x79e8,0x77
  40be7d:	rol    esp,0x78
  40be80:	mov    eax,0x7d5e1d8a
  40be85:	add    al,bh
  40be87:	and    eax,0xcbe001ef
  40be8c:	bound  edx,QWORD PTR [ecx-0x31]
  40be8f:	mov    ds:0xe902af0f,al
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0x84a17640
  40bea6:	dec    ecx
  40bea7:	jno    0x40befa
  40bea9:	aaa    
  40beaa:	jle    0x40bf2a
  40beac:	mov    dh,0x7e
  40beae:	jle    0x40bf2e
  40beb0:	push   0xbac9582a
  40beb5:	mov    al,0x72
  40beb7:	ja     0x40be71
  40beb9:	mov    eax,ds:0x28c45416
  40bebe:	push   cs
  40bebf:	rol    BYTE PTR [edx+ecx*1-0x5aa03714],0x41
  40bec7:	ja     0x40be50
  40bec9:	mov    eax,ds:0x36f7a4fd
  40bece:	mov    ecx,0x907fd526
  40bed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed4:	sub    eax,0x64ccfafa
  40bed9:	jbe    0x40bf01
  40bedb:	cmp    DWORD PTR [esi],esp
  40bedd:	scas   al,BYTE PTR es:[edi]
  40bede:	sbb    eax,0xc3c7cc0e
  40bee3:	or     dl,dl
  40bee5:	push   eax
  40bee6:	mov    esi,0x84f261c1
  40beeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beec:	xchg   esp,eax
  40beed:	mov    ecx,0x6d5a52ae
  40bef2:	cmp    al,0xc6
  40bef4:	dec    esi
  40bef5:	sub    eax,0x2aeda873
  40befa:	pusha  
  40befb:	pop    esp
  40befc:	sbb    al,0xa5
  40befe:	lahf   
  40beff:	pop    esp
  40bf00:	dec    ebp
  40bf01:	popa   
  40bf02:	xchg   esi,eax
  40bf03:	aad    0x2c
  40bf05:	xor    eax,0xcbf31e08
  40bf0a:	sar    BYTE PTR [ebp-0x36a95275],cl
  40bf10:	dec    ebp
  40bf11:	xor    esi,esp
  40bf13:	lods   eax,DWORD PTR ds:[esi]
  40bf14:	xchg   ebx,eax
  40bf15:	adc    al,0x58
  40bf17:	cmp    al,0xc9
  40bf19:	popf   
  40bf1a:	push   ebp
  40bf1b:	xor    DWORD PTR [ecx-0x63525384],0x74555025
  40bf25:	and    ah,BYTE PTR [edi-0x553c8ee4]
  40bf2b:	mov    esp,0xa43c568
  40bf30:	ret    
  40bf31:	xor    edx,ebx
  40bf33:	sbb    BYTE PTR [eax+0x14],cl
  40bf36:	or     BYTE PTR [ecx],bh
  40bf38:	stos   DWORD PTR es:[edi],eax
  40bf39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf3a:	sub    ebx,DWORD PTR [edi]
  40bf3c:	test   eax,0x858ac6b3
  40bf41:	adc    al,0x70
  40bf43:	add    ch,BYTE PTR [edx]
  40bf45:	mul    eax
  40bf47:	mov    cl,ch
  40bf49:	cmc    
  40bf4a:	sub    cl,BYTE PTR [eax-0x37d27878]
  40bf50:	jle    0x40bf6b
  40bf52:	je     0x40bf3c
  40bf54:	mov    esi,0xa120fca9
  40bf59:	and    ebp,DWORD PTR [edx+0x37]
  40bf5c:	inc    esi
  40bf5d:	cmp    ecx,DWORD PTR [ecx]
  40bf5f:	ret    0xe67d
  40bf62:	test   al,0x20
  40bf64:	xor    eax,0x12ec9c2f
  40bf69:	or     eax,DWORD PTR [ecx-0x47]
  40bf6c:	clc    
  40bf6d:	xor    BYTE PTR [edx+0x230afec0],bh
  40bf73:	sti    
  40bf74:	nop
  40bf75:	retf   
  40bf76:	arpl   bx,bx
  40bf78:	mov    edx,DWORD PTR [ebp-0x4]
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	pop    eax
  40bfae:	adc    eax,0x34a9f912
  40bfb3:	jle    0x40c033
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	inc    esp
  40bfba:	jno    0x40bfb4
  40bfbc:	push   cs
  40bfbd:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40bfbf:	mov    bh,0xf5
  40bfc1:	lea    ebx,[ecx+0x4c]
  40bfc4:	adc    al,0x80
  40bfc6:	in     al,dx
  40bfc7:	jg     0x40bf76
  40bfc9:	cs aaa 
  40bfcb:	in     eax,dx
  40bfcc:	fistp  QWORD PTR [edi+0x24]
  40bfcf:	xor    cl,BYTE PTR [edi-0x80]
  40bfd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfd3:	inc    esi
  40bfd4:	xor    al,BYTE PTR [ecx-0x447e01db]
  40bfda:	dec    esp
  40bfdb:	jge    0x40bfe5
  40bfdd:	(bad)  
  40bfde:	ss rol bh,cl
  40bfe1:	cmp    al,0x4c
  40bfe3:	push   0x11bbb091
  40bfe8:	enter  0x2dca,0x80
  40bfec:	mov    edx,cs
  40bfee:	sar    BYTE PTR [ebx],0x1a
  40bff1:	jno    0x40bf8e
  40bff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bff4:	test   BYTE PTR [edi+0x1c],bl
  40bff7:	icebp  
  40bff8:	push   esp
  40bff9:	xchg   edi,eax
  40bffa:	fisttp WORD PTR [esi-0x3f]
  40bffd:	mov    ah,0x2a
  40bfff:	push   esi
  40c000:	jp     0x40c00c
  40c002:	(bad)  
  40c004:	push   0x2d597156
  40c009:	repz test eax,0x544add92
  40c00f:	rol    BYTE PTR [esi+0x3e1078da],1
  40c015:	enter  0xdad6,0x20
  40c019:	adc    DWORD PTR [edi-0x172fa381],ebx
  40c01f:	push   ebp
  40c020:	xor    DWORD PTR [esi+0x3],ebx
  40c023:	mov    eax,0xb6de14f9
  40c028:	push   esi
  40c029:	dec    edx
  40c02a:	jmp    0xd2a1:0x6e66f7e1
  40c031:	xlat   BYTE PTR ds:[ebx]
  40c032:	aaa    
  40c033:	aad    0x4a
  40c035:	lock (bad) 
  40c038:	int    0x41
  40c03a:	(bad)  
  40c03b:	(bad)  
  40c03c:	call   0x8cdd:0xfa6e4e1a
  40c043:	or     al,0x5f
  40c045:	jo     0x40c021
  40c047:	out    0x51,eax
  40c049:	stos   DWORD PTR es:[edi],eax
  40c04a:	mov    esp,0xdb149c08
  40c04f:	jecxz  0x40c02f
  40c051:	bnd jp 0x40c01d
  40c054:	sub    cl,BYTE PTR [ecx]
  40c056:	mov    ecx,0x6a04db9a
  40c05b:	movsx  esp,al
  40c05e:	pop    edi
  40c05f:	jmp    0xb16b:0x75a82802
  40c066:	aam    0x75
  40c068:	xor    DWORD PTR [ecx-0x26],esi
  40c06b:	scas   eax,DWORD PTR es:[edi]
  40c06c:	lods   eax,DWORD PTR ds:[esi]
  40c06d:	xchg   edi,eax
  40c06e:	iret   
  40c06f:	pop    eax
  40c070:	add    eax,0x942b6b17
  40c075:	dec    edx
  40c076:	sbb    dl,ah
  40c078:	pop    ss
  40c079:	jge    0x40c056
  40c07b:	cdq    
  40c07c:	jno    0x40c06e
  40c07e:	repz or al,0x99
  40c081:	mov    ecx,0x7510859
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	adc    eax,0xe151f4f4
  40c0e5:	xor    eax,0x7eb67e7e
  40c0ea:	jle    0x40c16a
  40c0ec:	and    DWORD PTR [edx],ebp
  40c0ee:	lods   eax,DWORD PTR ds:[esi]
  40c0ef:	in     eax,0x41
  40c0f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0f2:	mov    al,ds:0x331c5a10
  40c0f7:	cdq    
  40c0f8:	push   esi
  40c0f9:	int    0x1f
  40c0fb:	adc    eax,0x7cee433d
  40c100:	rdpmc  
  40c102:	cmp    al,0x7e
  40c104:	outs   dx,BYTE PTR ds:[esi]
  40c105:	jmp    0x40c096
  40c107:	add    bh,BYTE PTR [ecx-0x48]
  40c10a:	sub    BYTE PTR [ebx+0x13],0x6c
  40c10e:	jnp    0x40c159
  40c110:	repz mov ds:0x653a5949,eax
  40c116:	popf   
  40c117:	and    al,0x9
  40c119:	push   esi
  40c11a:	xor    ebx,DWORD PTR [ebx]
  40c11c:	cld    
  40c11d:	mov    edx,0x13fb0dd0
  40c122:	add    eax,0xd802f4c1
  40c127:	and    BYTE PTR [ecx+0x3b5a7d3],dl
  40c12d:	xor    eax,0xcbba43e0
  40c132:	xor    eax,DWORD PTR [eax+0x11]
  40c135:	into   
  40c136:	jecxz  0x40c19b
  40c138:	dec    edi
  40c139:	retf   0x5efe
  40c13c:	popa   
  40c13d:	xor    eax,0x6c058d42
  40c142:	out    0x47,eax
  40c144:	fsubrp st(2),st
  40c146:	ins    DWORD PTR es:[edi],dx
  40c147:	xor    al,0x24
  40c149:	pop    ebp
  40c14a:	outs   dx,BYTE PTR ds:[esi]
  40c14b:	adc    eax,0x7721f205
  40c150:	push   0x4d
  40c152:	mov    esi,ss
  40c154:	mov    ecx,0xa63fa870
  40c159:	adc    DWORD PTR [eax-0x61c7a895],0xffffffbb
  40c160:	iret   
  40c161:	mov    ebx,DWORD PTR [eax+0x72cbd274]
  40c167:	(bad)  
  40c168:	rcl    BYTE PTR [ecx],1
  40c16a:	fisub  WORD PTR [eax]
  40c16c:	pop    ds
  40c16d:	sub    eax,0xf5ad519e
  40c172:	fimul  DWORD PTR [eax-0x65dc0635]
  40c178:	fisttp WORD PTR [ecx+edx*8-0x46]
  40c17c:	fisttp QWORD PTR [edx]
  40c17e:	xor    ah,BYTE PTR [ecx+0x624fc0d]
  40c184:	das    
  40c185:	pshufw mm6,mm1,0x36
  40c189:	mov    ecx,0x43c0ea20
  40c18e:	out    0xe6,al
  40c190:	pextrw esp,(bad),0xc5
  40c192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c193:	mov    ch,0x37
  40c195:	xor    al,0x3d
  40c197:	fwait
  40c198:	lea    esp,[eax+0x1c]
  40c19b:	lock lds ebx,FWORD PTR [esi]
  40c19e:	vfnmsub231ps xmm2,xmm2,xmm5
  40c1a3:	and    DWORD PTR [ebp+0x4e],ebx
  40c1a6:	sub    cl,ah
  40c1a8:	aam    0xc1
  40c1aa:	pop    ebp
  40c1ab:	icebp  
  40c1ac:	cmp    al,0x98
  40c1ae:	push   ecx
  40c1af:	push   ebp
  40c1b0:	cdq    
  40c1b1:	mov    esp,0x8c8dce94
  40c1b6:	or     bl,BYTE PTR [edi+0x3b003272]
  40c1bc:	enter  0x850f,0xcc
  40c1c0:	std    
  40c1c1:	(bad)  
  40c1c2:	dec    DWORD PTR [ebx+0xeae9de]
  40c1c8:	add    BYTE PTR [eax],al
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx-0x78bc928f]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	cmp    al,0x7c
  40c1ee:	and    ah,cl
  40c1f0:	add    dh,bh
  40c1f2:	xchg   ecx,eax
  40c1f3:	push   edi
  40c1f4:	cmp    DWORD PTR [esi+0x1de6fae4],ecx
  40c1fa:	and    al,0xc6
  40c1fc:	out    dx,eax
  40c1fd:	sub    bl,ah
  40c1ff:	outs   dx,DWORD PTR ds:[esi]
  40c200:	push   ecx
  40c201:	jbe    0x40c236
  40c203:	out    dx,eax
  40c204:	pop    ebp
  40c205:	dec    ebx
  40c206:	hlt    
  40c207:	aad    0xa7
  40c209:	sub    ecx,DWORD PTR [edx]
  40c20b:	out    dx,eax
  40c20c:	pop    edi
  40c20d:	lods   al,BYTE PTR ds:[esi]
  40c20e:	lods   eax,DWORD PTR ds:[esi]
  40c20f:	cli    
  40c210:	jae    0x40c1ad
  40c212:	sub    BYTE PTR [ebx+0x4a],bl
  40c215:	xchg   esp,eax
  40c216:	adc    DWORD PTR [eax-0x3e],eax
  40c219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c21a:	in     al,0x8e
  40c21c:	outs   dx,DWORD PTR ds:[esi]
  40c21d:	mov    ebp,0xa15802f1
  40c222:	jnp    0x40c1cd
  40c224:	add    al,0xe
  40c226:	jg     0x40c214
  40c228:	dec    ecx
  40c229:	int    0xef
  40c22b:	pusha  
  40c22c:	jnp    0x40c271
  40c22e:	loope  0x40c29a
  40c230:	xor    ebp,eax
  40c232:	daa    
  40c233:	data16 aaa 
  40c235:	jle    0x40c215
  40c237:	fadd   QWORD PTR [eax+0x5e]
  40c23a:	and    BYTE PTR [ecx],dh
  40c23c:	test   BYTE PTR [eax+eiz*4-0x30285f77],0x6f
  40c244:	inc    edx
  40c245:	inc    ebp
  40c246:	nop
  40c247:	push   es
  40c248:	fwait
  40c249:	cmc    
  40c24a:	lahf   
  40c24b:	mov    eax,0x4ab98c11
  40c250:	and    BYTE PTR ds:0x11ad299c,dl
  40c256:	or     eax,0xde853b71
  40c25b:	pop    edi
  40c25c:	push   ebp
  40c25d:	dec    esi
  40c25e:	stos   DWORD PTR es:[edi],eax
  40c25f:	dec    eax
  40c260:	add    DWORD PTR [eax+0x37f4ca9],esp
  40c266:	mov    ebx,0x3965ddee
  40c26b:	jnp    0x40c264
  40c26d:	cmc    
  40c26e:	loop   0x40c230
  40c270:	xor    al,0xf1
  40c272:	lods   al,BYTE PTR ds:[esi]
  40c273:	sar    WORD PTR [ebx+eiz*2-0x23b063b0],cl
  40c27b:	xchg   ebx,ebx
  40c27d:	push   DWORD PTR [edi+0x6cd71a82]
  40c283:	dec    edx
  40c284:	sub    BYTE PTR [esi+ecx*4-0x3198b25d],0xa7
  40c28c:	inc    esp
  40c28d:	in     eax,dx
  40c28e:	dec    ebp
  40c28f:	scas   eax,DWORD PTR es:[edi]
  40c290:	inc    esi
  40c291:	jae    0x40c2f8
  40c293:	leave  
  40c294:	repz rol BYTE PTR [esi+0x67644197],1
  40c29b:	and    esp,DWORD PTR [ebp+0x1b]
  40c29e:	pop    esi
  40c29f:	outs   dx,BYTE PTR ds:[esi]
  40c2a0:	mov    dl,0x69
  40c2a2:	jo     0x40c307
  40c2a4:	add    eax,0xac5596a8
  40c2a9:	or     esi,DWORD PTR [esi-0x1444983c]
  40c2af:	add    BYTE PTR [edx-0x747947cb],0x45
  40c2b6:	cld    
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	mov    al,ds:0x71e63e04
  40c2de:	retf   
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	mul    DWORD PTR ds:0xe7940481
  40c2eb:	mov    dl,0xe3
  40c2ed:	jmp    0x94ca:0x1b5801c6
  40c2f4:	adc    ah,BYTE PTR [esi-0x33172843]
  40c2fa:	and    eax,0xa90a5120
  40c2ff:	jmp    0x7891e6a7
  40c304:	add    ah,ch
  40c306:	fldenv [bp-0x4f]
  40c30a:	(bad)  
  40c30b:	stc    
  40c30c:	dec    edx
  40c30d:	cdq    
  40c30e:	push   esp
  40c30f:	pop    ecx
  40c310:	sbb    DWORD PTR [ebp+0x50],esi
  40c313:	push   0x41bf418e
  40c318:	xor    DWORD PTR [eax-0xb],0x72b3e240
  40c31f:	jns    0x40c318
  40c321:	sub    ecx,ecx
  40c323:	cwde   
  40c324:	and    DWORD PTR [esi],ebx
  40c326:	mov    ds:0x6bc02cd2,al
  40c32b:	fstp   st(7)
  40c32d:	pop    esi
  40c32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c32f:	imul   edx,DWORD PTR [esi-0x110034ae],0x72e0dc79
  40c339:	fadd   DWORD PTR [edx]
  40c33b:	inc    edx
  40c33c:	lds    edi,FWORD PTR [esi+0xf47194]
  40c342:	jnp    0x40c335
  40c344:	lds    ecx,FWORD PTR [eax-0x1bc786a]
  40c34a:	inc    edx
  40c34b:	(bad)  
  40c34c:	out    dx,al
  40c34d:	inc    esp
  40c34e:	mov    dl,0x28
  40c350:	jmp    0x35dc14a4
  40c355:	lods   eax,DWORD PTR ds:[esi]
  40c356:	rcr    DWORD PTR [edx+edx*1-0x36e044cb],0xb3
  40c35e:	mov    ebx,0xeeb3c5e0
  40c363:	and    esi,DWORD PTR [ecx]
  40c365:	jp     0x40c350
  40c367:	ret    
  40c368:	jmp    esp
  40c36a:	into   
  40c36b:	mov    al,0x74
  40c36d:	in     eax,dx
  40c36e:	dec    eax
  40c36f:	jge    0x40c35f
  40c371:	pop    ecx
  40c372:	or     al,0x82
  40c374:	imul   ecx,DWORD PTR [edx+0x7bae0758],0x5996ab11
  40c37e:	fdivr  DWORD PTR [esi+0x77]
  40c381:	mov    esi,0xfa43b0d3
  40c386:	test   ch,bl
  40c388:	pop    esp
  40c389:	lods   al,BYTE PTR ds:[esi]
  40c38a:	out    dx,al
  40c38b:	jecxz  0x40c3aa
  40c38d:	xor    al,0xc7
  40c38f:	loope  0x40c35f
  40c391:	ss enter 0x887e,0x53
  40c396:	pushf  
  40c397:	push   ss
  40c398:	dec    edx
  40c399:	mov    ds:0x36dbded1,al
  40c39e:	daa    
  40c39f:	inc    edi
  40c3a0:	dec    esi
  40c3a1:	scas   eax,DWORD PTR es:[edi]
  40c3a2:	pop    es
  40c3a3:	ds push eax
  40c3a5:	(bad)  
  40c3a6:	dec    esp
  40c3a7:	pop    edi
  40c3a9:	es scas al,BYTE PTR es:[edi]
  40c3ab:	xor    ch,BYTE PTR [esi]
  40c3ad:	call   ebx
  40c3af:	xor    ebx,ebx
  40c3b1:	jmp    0x40c496
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x522e5fee,ecx
  40c3c3:	mov    eax,0xcb4967bd
  40c3c8:	jle    0x40c448
  40c3ca:	mov    dh,0x7e
  40c3cc:	jle    0x40c44c
  40c3ce:	xor    eax,0xfd160062
  40c3d3:	aad    0x83
  40c3d5:	mov    edx,0x5586f8eb
  40c3da:	repnz lds ecx,FWORD PTR [esi+0x63]
  40c3de:	sti    
  40c3df:	aaa    
  40c3e0:	int3   
  40c3e1:	das    
  40c3e2:	(bad)  
  40c3e4:	mov    eax,ds:0xf82638e1
  40c3e9:	sbb    DWORD PTR [ecx+0x26],edx
  40c3ec:	jae    0x40c3ef
  40c3ee:	dec    ebp
  40c3ef:	pop    ebp
  40c3f0:	mov    cl,0x1b
  40c3f2:	pop    esi
  40c3f3:	out    dx,al
  40c3f4:	xor    al,0x8a
  40c3f6:	sub    eax,0x3254fd20
  40c3fc:	jecxz  0x40c41d
  40c3fe:	lock test DWORD PTR [ebx-0x55e493e0],esp
  40c405:	adc    al,0xc0
  40c407:	sbb    BYTE PTR [edx+0x6add14a6],al
  40c40d:	push   cs
  40c40e:	cmp    BYTE PTR [esi+0x42],0x9a
  40c412:	mov    eax,0x3c6dc264
  40c417:	loopne 0x40c3f6
  40c419:	ds hlt 
  40c41b:	jmp    0x9007:0x4a77985
  40c422:	xchg   edx,eax
  40c423:	pop    ebp
  40c424:	push   ebp
  40c425:	sub    esi,esp
  40c427:	fistp  DWORD PTR [ecx+0x66480ea7]
  40c42d:	push   ebx
  40c42e:	push   esp
  40c42f:	mov    ds:0xaba6f958,eax
  40c434:	mov    ch,0xc2
  40c436:	les    esi,FWORD PTR [ecx-0xf]
  40c439:	data16 jb 0x40c483
  40c43c:	cdq    
  40c43d:	mov    eax,0x34b47904
  40c442:	mov    DWORD PTR [ecx+edx*8],esp
  40c445:	clc    
  40c446:	dec    ecx
  40c447:	mov    di,WORD PTR [edi-0x15]
  40c44b:	sahf   
  40c44c:	je     0x40c3f1
  40c44e:	and    dh,BYTE PTR ds:0xaece9a2a
  40c454:	sbb    eax,0xc88ce33
  40c459:	sbb    cl,BYTE PTR [eax-0x7e]
  40c45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c45d:	scas   eax,DWORD PTR es:[edi]
  40c45e:	xor    dl,BYTE PTR [ebp-0x5460f53f]
  40c464:	enter  0xd7b6,0x2
  40c468:	icebp  
  40c469:	pusha  
  40c46a:	test   al,0x34
  40c46c:	mov    ebx,0xf9950a3f
  40c471:	ins    DWORD PTR es:[edi],dx
  40c472:	xchg   esp,eax
  40c473:	retf   
  40c474:	pop    esi
  40c475:	lds    esp,FWORD PTR [eax+edi*4+0x44762ea0]
  40c47c:	icebp  
  40c47d:	jecxz  0x40c48f
  40c47f:	push   0xffffffd9
  40c481:	cmp    cl,BYTE PTR [eax]
  40c483:	dec    ebx
  40c484:	test   BYTE PTR [eax-0x7f],0xdd
  40c488:	test   BYTE PTR [ecx],al
  40c48a:	dec    ebx
  40c48b:	jp     0x40c449
  40c48d:	push   esp
  40c48e:	jo     0x40c4f9
  40c490:	xlat   BYTE PTR ds:[ebx]
  40c491:	mov    ebp,0x5918670a
  40c496:	inc    ebx
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	mov    gs:0x81e8308d,al
  40c4b0:	enter  0x7e7e,0xb6
  40c4b4:	jle    0x40c534
  40c4b6:	jle    0x40c48f
  40c4b8:	cs jne 0x40c52a
  40c4bb:	popa   
  40c4bc:	stc    
  40c4bd:	neg    dh
  40c4bf:	push   0x5
  40c4c1:	arpl   WORD PTR [ebp-0x445fb457],sp
  40c4c7:	push   cs
  40c4c8:	mov    ecx,0x108cd8c5
  40c4cd:	aad    0xac
  40c4cf:	push   esi
  40c4d0:	lods   eax,DWORD PTR ds:[esi]
  40c4d1:	(bad)  
  40c4d2:	xlat   BYTE PTR ds:[ebx]
  40c4d3:	push   edi
  40c4d4:	adc    DWORD PTR [edx+0x35],edi
  40c4d7:	or     al,0x7c
  40c4d9:	loope  0x40c4aa
  40c4db:	jecxz  0x40c4a8
  40c4dd:	pop    ss
  40c4de:	clc    
  40c4df:	out    dx,al
  40c4e0:	aam    0xc0
  40c4e2:	mov    BYTE PTR [ecx-0x54332cea],dl
  40c4e8:	add    al,0x4b
  40c4ea:	fst    QWORD PTR [ebp+0x4d]
  40c4ed:	mov    edx,0x1dc9e161
  40c4f2:	mov    bl,0x65
  40c4f4:	or     BYTE PTR [edi+0x66],dl
  40c4f7:	jne    0x40c53d
  40c4f9:	push   es
  40c4fa:	out    dx,eax
  40c4fb:	mov    edi,0xec1baeee
  40c500:	mov    ah,0x8e
  40c502:	das    
  40c503:	out    0xe6,eax
  40c505:	mov    WORD PTR [edx+0x9],es
  40c508:	ret    
  40c509:	iret   
  40c50a:	mov    edi,0xe9308130
  40c50f:	add    eax,0x9fc16a67
  40c514:	jmp    0x40c512
  40c516:	mov    DWORD PTR [eax-0x475173b9],esp
  40c51c:	mov    al,0x7f
  40c51e:	pop    ss
  40c51f:	imul   esi,DWORD PTR [esi+0x5a],0x68
  40c523:	aam    0xc9
  40c525:	sbb    al,BYTE PTR [eax]
  40c527:	clc    
  40c528:	push   ss
  40c529:	loop   0x40c500
  40c52b:	mov    ds:0x52b30e13,al
  40c530:	cld    
  40c531:	leave  
  40c532:	jp     0x40c4c2
  40c534:	xchg   BYTE PTR [ebp-0x27],bh
  40c537:	fwait
  40c538:	jle    0x40c4c7
  40c53a:	or     bl,BYTE PTR [eax+0x79]
  40c53d:	cmp    eax,DWORD PTR [ebx-0x138ac7da]
  40c543:	iret   
  40c544:	inc    esi
  40c545:	ret    0xde4e
  40c548:	jle    0x40c540
  40c54a:	stos   BYTE PTR es:[edi],al
  40c54b:	test   bh,0xdf
  40c54e:	pop    esi
  40c54f:	jo     0x40c529
  40c551:	aas    
  40c552:	add    bl,dh
  40c554:	mov    al,ds:0x62d6c675
  40c559:	mov    edx,0xb7067585
  40c55e:	sahf   
  40c55f:	and    ah,BYTE PTR [edi]
  40c561:	sti    
  40c562:	(bad)  
  40c563:	mov    ah,0x6d
  40c565:	mov    ch,0x4b
  40c567:	scas   al,BYTE PTR es:[edi]
  40c568:	sub    ah,BYTE PTR [ecx]
  40c56a:	cmc    
  40c56b:	mov    BYTE PTR [edx+0x3a8c8c9c],ch
  40c571:	std    
  40c572:	call   0xf07ce14e
  40c577:	push   0xc5bb5491
  40c57c:	sbb    bh,BYTE PTR [esi+ebx*1+0xf]
  40c580:	test   ch,bh
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0xf059f5af
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	mov    ah,0x84
  40c5b2:	pushf  
  40c5b3:	dec    edi
  40c5b4:	outs   dx,BYTE PTR ds:[esi]
  40c5b5:	or     al,0xf6
  40c5b7:	inc    ebp
  40c5b8:	jmp    0x43469827
  40c5bd:	xchg   edi,eax
  40c5be:	bound  esp,QWORD PTR [esi-0x6ae815be]
  40c5c4:	(bad)  
  40c5c7:	mov    gs,edx
  40c5c9:	mov    bl,0x96
  40c5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5cc:	aam    0xa3
  40c5ce:	repz or ch,bh
  40c5d1:	clc    
  40c5d2:	ret    0xa8d9
  40c5d5:	je     0x40c58a
  40c5d7:	in     al,0x6a
  40c5d9:	aas    
  40c5da:	pop    edx
  40c5db:	push   eax
  40c5dc:	popa   
  40c5dd:	xrelease xchg BYTE PTR [esi+0x54b0bd53],ah
  40c5e4:	(bad)  
  40c5e5:	test   eax,0xc7e3ac95
  40c5ea:	call   0x3fd8e3c4
  40c5ef:	jp     0x40c5b2
  40c5f1:	add    DWORD PTR [edi],esp
  40c5f3:	aad    0x11
  40c5f5:	jp     0x40c626
  40c5f7:	out    0xf9,eax
  40c5f9:	out    dx,al
  40c5fa:	inc    edx
  40c5fb:	jno    0x40c5da
  40c5fd:	(bad)  
  40c5ff:	pop    ecx
  40c600:	jne    0x40c58c
  40c602:	not    DWORD PTR [ebx]
  40c604:	sub    al,0x7f
  40c606:	mov    bl,0xc
  40c608:	mov    DWORD PTR gs:[ebp+0x32d7754d],edi
  40c60f:	das    
  40c610:	inc    ebp
  40c611:	and    eax,0xc5f3646a
  40c616:	ret    
  40c617:	test   bl,bh
  40c619:	(bad)  
  40c61b:	push   0x5e
  40c61d:	js     0x40c643
  40c61f:	xor    DWORD PTR [esi],eax
  40c621:	sbb    al,0xd6
  40c623:	ins    DWORD PTR es:[edi],dx
  40c624:	add    eax,0xe9e62393
  40c629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c62a:	mov    ds:0xc25e3c64,eax
  40c62f:	dec    ecx
  40c630:	cdq    
  40c631:	ret    0xaaff
  40c634:	lods   eax,DWORD PTR ds:[esi]
  40c635:	or     BYTE PTR [eax+0x66],ah
  40c638:	lds    edx,FWORD PTR es:[ebp-0x676d902f]
  40c63f:	sub    eax,0xe8ef1fec
  40c644:	out    dx,eax
  40c645:	test   DWORD PTR [esi+edi*8+0x0],ebx
  40c649:	lods   eax,DWORD PTR ds:[esi]
  40c64a:	push   0x9f5409ac
  40c64f:	hlt    
  40c650:	xchg   BYTE PTR [ecx],cl
  40c652:	test   ch,bl
  40c654:	dec    ecx
  40c655:	sub    bl,dl
  40c657:	jg     0x40c614
  40c659:	inc    esp
  40c65a:	retf   0xc8fd
  40c65d:	add    eax,0x614e572
  40c662:	sub    bh,BYTE PTR [ecx-0x226b397]
  40c668:	sbb    al,0x24
  40c66a:	arpl   bp,cx
  40c66c:	sar    DWORD PTR [edx-0x2a6bf5cc],1
  40c672:	or     esp,DWORD PTR [ebp+0x2eb0c2c2]
  40c678:	dec    ecx
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
