
14aeaed4ce4a4e00f2b8719f2ed8695594896e40e962a89183f18d0d7cb5281a.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	cli    
  411001:	sbb    DWORD PTR [edx-0x23836620],edi
  411007:	xchg   ebx,eax
  411008:	rcl    BYTE PTR [edx],cl
  41100a:	ss pop ecx
  41100c:	or     BYTE PTR [edx+0x61],bh
  41100f:	in     al,0xdf
  411011:	and    al,0x3b
  411013:	jne    0x410fde
  411015:	loopne 0x411057
  411017:	addr16 loopne 0x411055
  41101a:	or     eax,0xf116aa21
  41101f:	mov    DWORD PTR [ebx-0x2a13ce7b],edx
  411025:	shl    BYTE PTR [eax-0x64051cbc],1
  41102b:	inc    eax
  41102c:	out    dx,eax
  41102d:	hlt    
  41102e:	mov    ah,0xf6
  411030:	mov    ch,0xd8
  411032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411033:	cld    
  411034:	neg    DWORD PTR [eax]
  411036:	xchg   edx,eax
  411037:	inc    ebp
  411038:	test   eax,0xab38459d
  41103d:	inc    esp
  41103e:	ja     0x410fca
  411040:	(bad)
  411043:	mov    es,WORD PTR [edx+0x6a6d0158]
  411049:	adc    ecx,esp
  41104b:	lods   eax,DWORD PTR ds:[esi]
  41104c:	jle    0x410feb
  41104e:	and    ebp,eax
  411050:	addr16 dec esp
  411052:	push   ecx
  411053:	in     al,0xe
  411055:	jno    0x410fdd
  411057:	push   es
  411058:	cld    
  411059:	repnz or DWORD PTR gs:[ebx],ebx
  41105d:	ins    DWORD PTR es:[edi],dx
  41105e:	(bad)  
  41105f:	popa   
  411060:	(bad)  
  411061:	addr16 sbb ah,ah
  411064:	and    dh,BYTE PTR [edx-0x1c]
  411067:	pop    ds
  411068:	adc    BYTE PTR [edx],0xe0
  41106b:	fbstp  TBYTE PTR [edi]
  41106d:	mov    ebx,DWORD PTR [eax-0x687f8c5f]
  411073:	out    0xf8,eax
  411075:	sbb    DWORD PTR [edi+0x33],eax
  411078:	fwait
  411079:	jmp    0xadcc:0x3bda08a4
  411080:	inc    ebp
  411081:	or     al,0xd6
  411083:	mov    dh,0x5f
  411085:	cmc    
  411086:	pop    ecx
  411087:	mov    ds:0x6c9bc72f,al
  41108c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108d:	stos   BYTE PTR es:[edi],al
  41108e:	pop    ecx
  41108f:	iret   
  411090:	outs   dx,DWORD PTR ds:[esi]
  411091:	sahf   
  411092:	test   BYTE PTR [esi],dh
  411094:	sti    
  411095:	int3   
  411096:	fst    DWORD PTR [ebx]
  411098:	nop
  411099:	jmp    0x93edb748
  41109e:	xor    eax,DWORD PTR [edi-0x6]
  4110a1:	jl     0x411063
  4110a3:	or     BYTE PTR ds:0x6bbb9c8c,al
  4110a9:	xchg   dh,bl
  4110ab:	test   dh,al
  4110ad:	inc    eax
  4110ae:	aas    
  4110af:	lods   al,BYTE PTR ds:[esi]
  4110b0:	push   ebp
  4110b1:	jle    0x411089
  4110b3:	adc    al,dh
  4110b5:	cmp    esp,DWORD PTR [esi]
  4110b7:	cmp    DWORD PTR [esi],ebx
  4110b9:	fwait
  4110ba:	inc    ebx
  4110bb:	mov    bl,0xa5
  4110bd:	cmp    eax,0xf857062
  4110c2:	(bad)  
  4110c3:	push   0x1d3854d0
  4110c8:	push   ss
  4110c9:	iret   
  4110ca:	data16 es mov dh,0xb
  4110ce:	lods   eax,DWORD PTR ds:[esi]
  4110cf:	lods   eax,DWORD PTR ds:[esi]
  4110d0:	ret    
  4110d1:	and    edx,DWORD PTR [esi+0x4accdee2]
  4110d7:	rol    BYTE PTR [edx+0x7f],cl
  4110da:	cmp    ebx,DWORD PTR [ecx-0x68]
  4110dd:	xchg   ebp,eax
  4110de:	mov    ds:0x851eec2a,eax
  4110e3:	in     eax,0x44
  4110e5:	das    
  4110e6:	sahf   
  4110e7:	lahf   
  4110e8:	xlat   BYTE PTR ds:[ebx]
  4110e9:	jmp    FWORD PTR [edx]
  4110eb:	sub    BYTE PTR [esp+ecx*4-0x655f9244],0xde
  4110f3:	test   eax,0xafe9d8a
  4110f8:	into   
  4110f9:	adc    eax,0xbbd7eafa
  4110fe:	in     al,0x1b
  411100:	sub    ebp,DWORD PTR [ecx+edi*1-0x1a]
  411104:	les    ebp,FWORD PTR [esp+ecx*1+0xb]
  411108:	lock cmp bl,al
  41110b:	pop    ebp
  41110c:	push   cs
  41110d:	xchg   ah,ah
  41110f:	pop    esp
  411110:	push   ecx
  411111:	inc    BYTE PTR [ecx+0x1a13a8dc]
  411117:	push   ebx
  411118:	xchg   BYTE PTR [ebx-0x17],cl
  41111b:	xchg   ecx,eax
  41111c:	and    ebx,DWORD PTR [esi+0x5e2c1eab]
  411122:	icebp  
  411123:	cdq    
  411124:	pop    ecx
  411125:	inc    esp
  411126:	mov    ss,WORD PTR [edx+0x17]
  411129:	test   eax,0x316aca80
  41112e:	push   ebp
  41112f:	(bad)  
  411130:	fnstcw WORD PTR [esp+edi*2]
  411133:	adc    DWORD PTR ds:0x7b3683d6,esi
  411139:	cwde   
  41113a:	pop    esi
  41113b:	mov    cs,WORD PTR [eax+0x40]
  41113e:	cli    
  41113f:	inc    ebp
  411140:	or     eax,DWORD PTR [ebx-0x3edace0b]
  411146:	add    eax,0x7e58d682
  41114b:	xchg   ebp,eax
  41114c:	out    0x3f,eax
  41114e:	jmp    0x15a3:0x24fa1f42
  411155:	jne    0x411157
  411157:	pop    eax
  411158:	inc    eax
  411159:	or     esp,edi
  41115b:	adc    al,0xff
  41115d:	scas   eax,DWORD PTR es:[edi]
  41115e:	les    ebx,FWORD PTR [edi-0x3bc79d92]
  411164:	dec    esp
  411165:	xchg   edi,eax
  411166:	(bad)  
  411168:	xchg   ebx,eax
  411169:	(bad)  
  41116a:	repnz aas 
  41116c:	packuswb mm5,QWORD PTR [edi]
  41116f:	jle    0x411178
  411171:	fwait
  411172:	shl    BYTE PTR [eax+0x51481db1],cl
  411178:	add    ah,BYTE PTR [esi-0x71364332]
  41117e:	push   ecx
  41117f:	pop    ebp
  411180:	add    DWORD PTR [esi],esp
  411182:	push   esp
  411183:	jl     0x411118
  411185:	(bad)  
  411186:	clc    
  411187:	push   0xffffffce
  411189:	(bad)  
  41118a:	dec    ebx
  41118b:	call   0x1fdb:0xfc6d24da
  411192:	mov    eax,ebx
  411194:	jle    0x4111fc
  411196:	jg     0x4111e9
  411198:	sbb    al,0xd3
  41119a:	cld    
  41119b:	xchg   ebx,eax
  41119c:	mov    al,ds:0x94f9ed18
  4111a1:	(bad)  [edi-0x2e4e2e4d]
  4111a7:	jbe    0x411216
  4111a9:	sar    dl,cl
  4111ab:	push   esi
  4111ac:	(bad)  
  4111ae:	mov    DWORD PTR [eax-0x49b71f8d],edx
  4111b4:	ds int3 
  4111b6:	jnp    0x41113a
  4111b8:	mov    edx,0xb8f5186f
  4111bd:	or     al,0xa1
  4111bf:	mov    ds:0xeef159d2,al
  4111c4:	popa   
  4111c5:	clc    
  4111c6:	dec    ebx
  4111c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c8:	loope  0x4111c1
  4111ca:	imul   ebx,esp,0xffffff9f
  4111cd:	push   ebp
  4111ce:	leave  
  4111cf:	in     eax,0x6e
  4111d1:	imul   BYTE PTR [ecx+0x4]
  4111d4:	std    
  4111d5:	and    eax,0x968148b9
  4111da:	xor    DWORD PTR [esi+0x5e],ebp
  4111dd:	or     dl,0x40
  4111e0:	iret   
  4111e1:	or     ch,BYTE PTR [edi]
  4111e3:	xor    al,BYTE PTR [ebp*2+0x7a2678d0]
  4111ea:	popa   
  4111eb:	add    al,0x22
  4111ed:	out    dx,eax
  4111ee:	xor    dh,bl
  4111f0:	jne    0x4111d9
  4111f2:	pop    edx
  4111f3:	sbb    BYTE PTR [edx],al
  4111f5:	pop    edi
  4111f6:	and    eax,ecx
  4111f8:	int    0xcd
  4111fa:	jbe    0x411249
  4111fc:	adc    eax,0xfc51fd65
  411201:	mov    ecx,0x7a29f554
  411206:	pusha  
  411207:	into   
  411208:	and    dh,BYTE PTR [esi-0x50]
  41120b:	mov    eax,0xcee06ab9
  411210:	jle    0x411205
  411212:	adc    DWORD PTR [esi],ecx
  411214:	cmp    ebp,esi
  411216:	retf   0x1917
  411219:	adc    al,0x7b
  41121b:	lock cmp DWORD PTR [esi],edx
  41121e:	sub    eax,0xe918419a
  411223:	mov    dh,0x4f
  411225:	loopne 0x4111f0
  411227:	cmp    eax,0x8e513540
  41122c:	mov    WORD PTR [edx-0x2c08aded],es
  411232:	xchg   BYTE PTR [edx+0x6f725828],al
  411238:	cmp    dh,dh
  41123a:	xor    eax,0xd7ac9188
  41123f:	pushf  
  411240:	lock adc ebx,DWORD PTR [edx]
  411243:	stos   DWORD PTR es:[edi],eax
  411244:	push   ss
  411245:	pop    edi
  411246:	adc    DWORD PTR [edi-0x2c],0x25
  41124a:	mov    cl,0x74
  41124c:	sub    DWORD PTR [edx-0x62c7d74c],ecx
  411252:	or     BYTE PTR [edx],dh
  411254:	mov    ch,0x30
  411256:	sub    eax,0xe8889e81
  41125b:	add    edi,DWORD PTR [edi-0x7f53686f]
  411261:	(bad)  
  411262:	stos   BYTE PTR es:[edi],al
  411263:	mov    ch,0x3e
  411265:	mov    al,0x19
  411267:	shr    ecx,0x36
  41126a:	shr    BYTE PTR [di+0x4d],cl
  41126e:	int3   
  41126f:	dec    eax
  411270:	xchg   DWORD PTR [ebx+0x1dc4b57c],esi
  411276:	ja     0x411281
  411278:	mov    dh,0x6d
  41127a:	mov    esi,0x1441a967
  41127f:	cmp    DWORD PTR [edi],0x86d650bc
  411285:	jge    0x4112cc
  411287:	(bad)  
  41128a:	xchg   ecx,eax
  41128b:	cmp    DWORD PTR [ecx-0x5c],edi
  41128e:	xor    bl,0x74
  411291:	xor    ecx,DWORD PTR [esi]
  411293:	xchg   ecx,eax
  411294:	cdq    
  411295:	pop    eax
  411296:	xchg   esp,eax
  411297:	shl    BYTE PTR [ebx-0xa101214],0xc1
  41129e:	int    0xa9
  4112a0:	loop   0x41129c
  4112a2:	mov    BYTE PTR [ecx],cl
  4112a4:	cmp    BYTE PTR [edi+0x4],cl
  4112a7:	(bad)  
  4112a8:	jle    0x411234
  4112aa:	jne    0x41127e
  4112ac:	or     al,0xda
  4112ae:	mov    ss,WORD PTR [edi]
  4112b0:	dec    ecx
  4112b1:	fdiv   DWORD PTR [ebx-0x21]
  4112b4:	cmp    DWORD PTR ds:[ebx-0x78],edx
  4112b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112b9:	add    esi,DWORD PTR [edx]
  4112bb:	add    DWORD PTR [esi-0x6f4b045e],ebp
  4112c1:	mov    ds:0xa20a8f18,eax
  4112c6:	iret   
  4112c7:	jp     0x411270
  4112c9:	xor    cl,ah
  4112cb:	int3   
  4112cc:	imul   esp,DWORD PTR [ebx],0x6f
  4112cf:	jmp    0x4112d8
  4112d1:	mul    DWORD PTR [ecx+0x2e]
  4112d4:	inc    edi
  4112d5:	cmc    
  4112d6:	int3   
  4112d7:	icebp  
  4112d8:	sub    DWORD PTR [ebx-0x52],ebx
  4112db:	xor    edx,eax
  4112dd:	add    edi,ebx
  4112df:	and    eax,0x8666b5e6
  4112e4:	dec    BYTE PTR [bp+di]
  4112e7:	mov    ebx,0x185a90d
  4112ec:	shl    DWORD PTR [edi+edi*4-0x13649079],0xb0
  4112f4:	push   DWORD PTR [eax-0x9]
  4112f7:	xchg   ebx,eax
  4112f8:	lods   eax,DWORD PTR ds:[esi]
  4112f9:	loop   0x411314
  4112fb:	mov    edi,0x94912d3c
  411300:	shl    BYTE PTR [eax+0x1d],cl
  411303:	mov    eax,ds:0x9746d836
  411308:	and    esi,eax
  41130a:	xchg   DWORD PTR [eax],ecx
  41130c:	loope  0x41130e
  41130e:	mov    ah,0x92
  411310:	cmc    
  411311:	(bad)  
  411312:	sbb    al,0x53
  411314:	cwde   
  411315:	push   esp
  411316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411317:	int    0x34
  411319:	mov    ch,0x6a
  41131b:	sbb    DWORD PTR [esi-0xd4aab74],esp
  411321:	or     eax,0x3b411a3e
  411326:	clc    
  411327:	test   eax,0xef8135d6
  41132c:	ret    0xfa09
  41132f:	or     ah,BYTE PTR [edx+0x65]
  411332:	lds    ebx,FWORD PTR [ecx-0x62]
  411335:	jno    0x411391
  411337:	jp     0x41130c
  411339:	std    
  41133a:	jge    0x4112fe
  41133c:	aam    0xd8
  41133e:	(bad)  
  41133f:	jecxz  0x4113a3
  411341:	add    bh,BYTE PTR [esi+edx*4+0x11]
  411345:	inc    esi
  411346:	js     0x41134c
  411348:	dec    esp
  411349:	sub    DWORD PTR [eax],eax
  41134b:	mov    bl,0x8
  41134d:	adc    al,0xc1
  41134f:	and    eax,0x1cf60640
  411354:	push   es
  411355:	mov    eax,0x1a817ea1
  41135a:	sub    al,0x5b
  41135c:	aas    
  41135d:	and    eax,esi
  41135f:	call   0x7ed2:0x841d93a8
  411366:	pop    edi
  411367:	adc    DWORD PTR [ebx+0x74],edx
  41136a:	fld    TBYTE PTR [ecx+ecx*2+0x16]
  41136e:	(bad)  
  41136f:	push   ecx
  411370:	mov    edi,0xc97ac6ee
  411375:	pop    ds
  411376:	mov    esi,0x9cba8684
  41137b:	fidivr WORD PTR [ebx-0x5dbf3fbc]
  411381:	leave  
  411382:	fisub  WORD PTR [ecx+ebp*2]
  411385:	mov    dl,BYTE PTR [edi-0x75]
  411388:	outs   dx,BYTE PTR ds:[esi]
  411389:	adc    esi,ebx
  41138b:	stc    
  41138c:	hlt    
  41138d:	popf   
  41138e:	jo     0x4113db
  411390:	xchg   edx,eax
  411391:	mov    edx,0x460c5978
  411396:	jmp    0xa72945d0
  41139b:	scas   eax,DWORD PTR es:[edi]
  41139c:	int3   
  41139d:	sahf   
  41139e:	loopne 0x411347
  4113a0:	mov    dl,0xb7
  4113a2:	pop    ecx
  4113a3:	dec    ecx
  4113a4:	sti    
  4113a5:	xchg   ah,dh
  4113a7:	push   eax
  4113a8:	mov    esp,0xbf6365c6
  4113ad:	mov    WORD PTR [ebp-0x6f],ss
  4113b0:	xchg   esi,eax
  4113b1:	or     eax,0x7080c0ed
  4113b6:	shr    DWORD PTR ds:0x2de72fc2,cl
  4113bc:	retf   0xed3f
  4113bf:	jmp    0x648f:0x27711e79
  4113c6:	or     dh,ah
  4113c8:	fwait
  4113c9:	inc    ebx
  4113ca:	loop   0x41141f
  4113cc:	jmp    0x37a01204
  4113d1:	mov    cl,0xe6
  4113d3:	popf   
  4113d4:	sbb    BYTE PTR [eax+edx*2-0x41f67eb8],0x1
  4113dc:	call   0x5a5c:0x9cb0885f
  4113e3:	loop   0x4113c9
  4113e5:	daa    
  4113e6:	repnz (bad) 
  4113e8:	loope  0x41139c
  4113ea:	xor    edi,DWORD PTR [ebx-0x52]
  4113ed:	cmp    esp,DWORD PTR [ebp+0xd]
  4113f0:	stc    
  4113f1:	inc    BYTE PTR [ecx]
  4113f3:	sub    al,0xa0
  4113f5:	cmp    al,0x63
  4113f7:	test   BYTE PTR [ecx],0x25
  4113fa:	cmp    DWORD PTR [edi-0x1d],edi
  4113fd:	sahf   
  4113fe:	les    ebp,FWORD PTR [eax]
  411400:	mov    al,0xe6
  411402:	(bad)  
  411403:	push   0xffffffe9
  411405:	push   ss
  411406:	in     eax,0x3b
  411408:	aaa    
  411409:	jle    0x411484
  41140b:	cmp    eax,0x731fecfc
  411410:	xlat   BYTE PTR ds:[ebx]
  411411:	sbb    al,0x57
  411413:	and    DWORD PTR [esi-0x1efa4f49],esp
  411419:	std    
  41141a:	(bad)  [esi]
  41141c:	dec    ecx
  41141d:	xchg   edx,eax
  41141e:	xor    DWORD PTR ds:0x3c17ec8a,ebp
  411424:	ror    bh,0xc3
  411427:	mov    esp,0xf9eaa733
  41142c:	add    eax,0x265b2d15
  411431:	rcl    WORD PTR [ecx-0x40],1
  411435:	out    0xf2,eax
  411437:	ror    eax,cl
  411439:	push   cs
  41143a:	loopne 0x4114b1
  41143c:	sbb    bl,BYTE PTR ds:0x78653450
  411442:	es mov dl,0xb0
  411445:	xor    edx,DWORD PTR [eax+0x2c]
  411448:	add    al,BYTE PTR gs:[eax+edx*2+0x3d]
  41144d:	adc    cl,BYTE PTR [edi+0x23]
  411450:	mov    esi,0xf97eed77
  411455:	xchg   edi,eax
  411456:	mov    ds:0x1028ad9c,eax
  41145b:	pop    ss
  41145c:	(bad)  
  41145d:	jo     0x4114ba
  41145f:	xor    DWORD PTR [edx+0x22132854],ebx
  411465:	mov    ch,0xf5
  411467:	clc    
  411468:	pop    edi
  411469:	addr16 fwait
  41146b:	jo     0x41140c
  41146d:	or     edi,DWORD PTR [esi]
  41146f:	pushf  
  411470:	cwde   
  411471:	jecxz  0x411464
  411473:	mov    bh,0xaa
  411475:	fld    DWORD PTR [ecx-0x34]
  411478:	aas    
  411479:	popa   
  41147a:	es jge 0x411449
  41147d:	cmp    al,BYTE PTR [ecx]
  41147f:	jns    0x4114b5
  411481:	loopne 0x41140e
  411483:	dec    ecx
  411484:	or     al,0x78
  411486:	ret    
  411487:	xor    DWORD PTR [esi+ebx*2],esp
  41148a:	jg     0x41148a
  41148c:	dec    ecx
  41148d:	sbb    al,0x29
  41148f:	imul   ebp,DWORD PTR [edi],0xa1aaaac6
  411495:	jp     0x4114cf
  411497:	inc    esp
  411498:	mov    eax,0x483dec5b
  41149d:	dec    eax
  41149e:	inc    edi
  41149f:	cmp    ch,0x71
  4114a2:	pop    ecx
  4114a3:	jne    0x411483
  4114a5:	dec    esp
  4114a6:	test   eax,0xa969892b
  4114ab:	pop    esi
  4114ac:	sub    al,dh
  4114ae:	sahf   
  4114af:	cld    
  4114b0:	pop    ds
  4114b1:	xor    ah,al
  4114b3:	xchg   edx,eax
  4114b4:	adc    BYTE PTR ss:[ebx],ch
  4114b7:	lods   eax,DWORD PTR ds:[esi]
  4114b8:	xor    BYTE PTR [ecx-0x1f],dh
  4114bb:	mov    al,0x89
  4114bd:	xor    eax,0xc0ca6e49
  4114c2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4114c4:	pop    ebx
  4114c5:	je     0x4114be
  4114c7:	in     al,0x93
  4114c9:	jl     0x411502
  4114cb:	call   0x4cd8:0x855359b0
  4114d2:	retf   0xe4ae
  4114d5:	mov    edi,0xf3c90ec7
  4114da:	rcr    BYTE PTR [ecx-0x20c80438],1
  4114e0:	repz and DWORD PTR [esi-0x1d],ebx
  4114e4:	and    dl,BYTE PTR [ebp-0x14]
  4114e7:	mov    WORD PTR ss:[ecx+0x1d],cs
  4114eb:	(bad)  
  4114ec:	adc    DWORD PTR [edx],ecx
  4114ee:	imul   esi,DWORD PTR [eax+0x5d],0x942c52e2
  4114f5:	push   eax
  4114f6:	or     DWORD PTR [ebx+0xc],eax
  4114f9:	test   BYTE PTR [eax+esi*8+0x660d2401],bl
  411500:	in     eax,dx
  411501:	mov    ebx,0xf422ce30
  411506:	ss icebp 
  411508:	retf   
  411509:	mov    gs,WORD PTR [eax+0xbf90255]
  41150f:	cld    
  411510:	stos   BYTE PTR es:[edi],al
  411511:	add    al,0x2c
  411513:	inc    edx
  411514:	fisttp DWORD PTR [ebx*1+0x4a0bb051]
  41151b:	add    DWORD PTR [esi+0x3],0x5e66b475
  411522:	leave  
  411523:	retf   
  411524:	aad    0xc8
  411526:	add    eax,0xcb85366c
  41152b:	mov    dl,BYTE PTR [ecx]
  41152d:	retf   
  41152e:	inc    eax
  41152f:	fisub  WORD PTR [ecx+0x1c]
  411532:	(bad)  
  411533:	test   eax,0xa0d8be45
  411538:	adc    eax,0xd74c9602
  41153d:	scas   eax,DWORD PTR es:[edi]
  41153e:	xchg   ecx,eax
  41153f:	out    dx,al
  411540:	repnz retf 0xa865
  411544:	outs   dx,BYTE PTR ds:[esi]
  411545:	mov    WORD PTR [esi],gs
  411547:	mov    al,ds:0x2f6db3ba
  41154c:	mov    ebx,0xc71bd566
  411551:	nop
  411552:	mov    bl,0xcb
  411554:	fcomp  DWORD PTR [edi-0x3e6a850b]
  41155a:	clc    
  41155b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41155c:	imul   edx,DWORD PTR [ebx-0x31],0x50680558
  411563:	inc    esi
  411564:	add    DWORD PTR [ecx-0x112d497],esp
  41156a:	mov    ds:0x6e59d5f2,al
  41156f:	dec    eax
  411570:	in     eax,0xac
  411572:	mov    ecx,0xe325efc2
  411577:	jae    0x411547
  411579:	and    eax,0x460bee4f
  41157e:	cmp    eax,0x1c9fb63f
  411583:	popa   
  411584:	mov    eax,ds:0xcd133589
  411589:	jns    0x411545
  41158b:	out    dx,eax
  41158c:	mov    al,ds:0xe9e332df
  411591:	lea    ecx,[ebx]
  411593:	loop   0x41151f
  411595:	icebp  
  411596:	jmp    0xde55d6f7
  41159b:	mov    ds:0x17a32376,al
  4115a0:	dec    esi
  4115a1:	js     0x411553
  4115a3:	and    dh,0x7b
  4115a6:	inc    edi
  4115a7:	shl    BYTE PTR [ecx+0x55],0xc2
  4115ab:	aad    0x7e
  4115ad:	loope  0x41160a
  4115af:	adc    BYTE PTR [edi-0xa],0xa5
  4115b3:	les    ebp,FWORD PTR [esi+ebp*8+0x4998b3b7]
  4115ba:	mov    ebx,0x5b1b94c7
  4115bf:	and    DWORD PTR [edx-0x12],0x9dc46141
  4115c6:	jle    0x4115c8
  4115c8:	ja     0x411567
  4115ca:	out    dx,eax
  4115cb:	cli    
  4115cc:	lods   eax,DWORD PTR ds:[esi]
  4115cd:	mov    bh,BYTE PTR [edx+ecx*8]
  4115d0:	call   0x70b1:0x3f7165bc
  4115d7:	(bad)  
  4115d8:	(bad)  
  4115d9:	aas    
  4115da:	loopne 0x41155f
  4115dc:	aad    0x1d
  4115de:	mov    ecx,0x7dce7913
  4115e3:	mov    ecx,0x4bfec7a
  4115e8:	dec    ebp
  4115e9:	(bad)  
  4115ea:	cmp    dh,BYTE PTR [edx-0x17]
  4115ed:	js     0x411629
  4115ef:	add    esp,DWORD PTR [ebx-0x3b]
  4115f2:	inc    BYTE PTR [ebx+ecx*4-0x36]
  4115f6:	(bad)  
  4115f9:	(bad)  
  4115fa:	mov    edi,0xa98d8e98
  4115ff:	mov    ebx,0xbadcc7a8
  411604:	mov    esi,0x9e97ca7f
  411609:	pop    es
  41160a:	inc    edx
  41160b:	out    0xc3,eax
  41160d:	stos   BYTE PTR es:[edi],al
  41160e:	and    dh,BYTE PTR [edi+0x7f]
  411611:	jge    0x41164c
  411613:	add    BYTE PTR [eax],ch
  411615:	ins    DWORD PTR es:[edi],dx
  411616:	outs   dx,DWORD PTR ds:[esi]
  411617:	and    dh,ch
  411619:	popa   
  41161a:	data16 daa 
  41161c:	dec    ebx
  41161d:	les    eax,FWORD PTR [edx+eax*2-0x18]
  411621:	outs   dx,BYTE PTR ds:[esi]
  411622:	imul   eax,DWORD PTR [ebx],0xffffffd8
  411625:	xchg   BYTE PTR [edx-0x31dfcc10],dh
  41162b:	mov    ecx,0xc7bca4ed
  411630:	mov    ebp,0xdf5ceb3
  411635:	inc    eax
  411636:	enter  0xa40b,0xc9
  41163a:	and    DWORD PTR [edi],ebp
  41163c:	leave  
  41163d:	repnz sar BYTE PTR [edi-0x3770442f],cl
  411644:	dec    ebx
  411645:	xor    BYTE PTR [edx+0x35578e21],bh
  41164b:	cs repz iret 
  41164e:	les    esp,FWORD PTR [edi]
  411650:	mov    ds:0x3297ac4b,al
  411655:	ins    DWORD PTR es:[edi],dx
  411656:	aaa    
  411657:	loopne 0x411635
  411659:	lock icebp 
  41165b:	ins    BYTE PTR es:[edi],dx
  41165c:	mov    eax,ds:0x45121b6c
  411661:	mov    al,ds:0x69edb2d5
  411666:	out    0x1d,al
  411668:	dec    esi
  411669:	or     DWORD PTR [eax-0x5f8b68e2],esi
  41166f:	push   ss
  411670:	inc    ebx
  411671:	sub    al,dh
  411673:	sub    al,0xc6
  411675:	jmp    0x4116f3
  411677:	rol    BYTE PTR ds:0x3d03ecc0,0x72
  41167e:	xchg   DWORD PTR [edi],ebx
  411680:	pop    ebp
  411681:	test   BYTE PTR [ebx-0x69839447],ah
  411687:	xchg   edi,eax
  411688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411689:	fst    QWORD PTR [esi+0x1d03d6dd]
  41168f:	xor    edi,ebp
  411691:	fild   QWORD PTR [ebx-0x5cee03de]
  411697:	mov    ch,0xe7
  411699:	mov    ebp,0x5f8ae345
  41169e:	mov    edx,edi
  4116a0:	repnz in eax,dx
  4116a2:	push   es
  4116a3:	jns    0x4116f9
  4116a5:	in     al,0x1b
  4116a7:	pop    esi
  4116a8:	cdq    
  4116a9:	and    eax,0x1717dd28
  4116ae:	sub    BYTE PTR [ebx+eax*2-0x3ccd69b4],al
  4116b5:	lods   al,BYTE PTR ds:[esi]
  4116b6:	jecxz  0x411711
  4116b8:	repz cmp ebp,DWORD PTR [edi-0x25]
  4116bc:	call   0xb2d7ef16
  4116c1:	pop    ss
  4116c2:	test   DWORD PTR [ecx],0xa3cb321c
  4116c8:	ds push ebp
  4116ca:	pop    ebx
  4116cb:	adc    al,0xdd
  4116cd:	mov    al,ds:0xdd9a84a1
  4116d2:	std    
  4116d3:	test   BYTE PTR [eax+0x77abc89],al
  4116d9:	test   al,0x1
  4116db:	shl    DWORD PTR [ebp-0x29e7301],cl
  4116e1:	jo     0x4116a2
  4116e3:	jge    0x411680
  4116e5:	mov    bl,0xb7
  4116e7:	adc    DWORD PTR [ebx],eax
  4116e9:	repz out dx,eax
  4116eb:	imul   eax,DWORD PTR [edx-0x46924e5b],0x63c1938a
  4116f5:	dec    edi
  4116f6:	shl    edi,1
  4116f8:	sbb    BYTE PTR [edi],bl
  4116fa:	call   0x956b4e74
  4116ff:	xor    esp,edx
  411701:	adc    eax,0x995b45cb
  411706:	clc    
  411707:	mov    edx,0xf28cba42
  41170c:	popf   
  41170d:	stos   BYTE PTR es:[edi],al
  41170e:	je     0x411780
  411710:	jle    0x411741
  411712:	sbb    al,0xee
  411714:	and    eax,ecx
  411716:	jae    0x41176f
  411718:	mov    WORD PTR [eax-0x6b7d1ea0],gs
  41171e:	pop    ds
  41171f:	repz retf 0x1958
  411723:	dec    edi
  411724:	es and eax,0xbf8c1be1
  41172a:	xlat   BYTE PTR ds:[ebx]
  41172b:	mov    al,ds:0xfbda705
  411730:	(bad)  
  411731:	out    dx,al
  411732:	jle    0x4117a3
  411734:	mov    WORD PTR [ebp+0x57f4c088],?
  41173a:	add    ch,dl
  41173c:	sti    
  41173d:	cli    
  41173e:	jae    0x411771
  411740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411741:	xchg   ecx,eax
  411742:	test   eax,0x2f3572db
  411747:	push   esi
  411748:	aas    
  411749:	sbb    ah,BYTE PTR [ebx+0x3806d21f]
  41174f:	pop    ecx
  411750:	or     al,0xcd
  411752:	mov    DWORD PTR ds:0x20c5833f,ecx
  411758:	cmp    bl,BYTE PTR [esi+eax*2+0x44]
  41175c:	push   ds
  41175d:	loop   0x4116ea
  41175f:	mov    ebp,0x48bd3036
  411764:	(bad)
  411767:	xchg   ecx,eax
  411768:	mov    ch,0x8b
  41176a:	pusha  
  41176b:	pop    ds
  41176c:	xchg   esp,eax
  41176d:	mov    dl,0x89
  41176f:	jmp    0xc7bf:0xbe69e517
  411776:	out    dx,eax
  411777:	sbb    bh,BYTE PTR [ebp+0x520a667f]
  41177d:	test   BYTE PTR [esi],bl
  41177f:	daa    
  411780:	dec    ebp
  411781:	xor    eax,0x9bb36f12
  411786:	add    eax,DWORD PTR ds:0xb729a16c
  41178c:	lahf   
  41178d:	repz push esi
  41178f:	add    BYTE PTR [eax-0x25],bh
  411792:	mov    dh,0xa1
  411794:	xchg   edx,eax
  411795:	pop    eax
  411796:	jmp    edi
  411798:	lds    esp,FWORD PTR [esi-0x4b56fcb7]
  41179e:	aaa    
  41179f:	inc    esp
  4117a0:	std    
  4117a1:	dec    ebx
  4117a2:	inc    eax
  4117a3:	mov    bl,0x3a
  4117a5:	loop   0x411755
  4117a7:	adc    BYTE PTR [ebx],ah
  4117a9:	lds    edx,FWORD PTR [ebp-0x58673adc]
  4117af:	mov    ebx,0x4bdfffb2
  4117b4:	sbb    eax,0x43119b7c
  4117b9:	scas   eax,DWORD PTR es:[edi]
  4117ba:	cli    
  4117bb:	sbb    DWORD PTR [edi+0x7f5b3091],edx
  4117c1:	sbb    al,0xe4
  4117c3:	pop    es
  4117c4:	jns    0x41183d
  4117c6:	pop    eax
  4117c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c8:	and    esp,DWORD PTR [ebp+0x11]
  4117cb:	fstp   DWORD PTR [edi]
  4117cd:	rcl    BYTE PTR [ebx],1
  4117cf:	mov    bl,0x91
  4117d1:	jl     0x411818
  4117d3:	push   cs
  4117d4:	popf   
  4117d5:	fdivr  QWORD PTR ds:0x726fd711
  4117db:	xchg   ecx,eax
  4117dc:	rep lods eax,DWORD PTR ds:[esi]
  4117de:	lods   al,BYTE PTR ds:[esi]
  4117df:	add    al,0xbc
  4117e1:	cmp    BYTE PTR [ebp+0x3f],bh
  4117e4:	call   0x12686ba9
  4117e9:	jge    0x411825
  4117eb:	js     0x41180a
  4117ed:	mov    dh,0x5a
  4117ef:	dec    esp
  4117f0:	adc    bh,BYTE PTR [ebx-0x603b470d]
  4117f6:	jmp    0xd487:0x2d6cad92
  4117fd:	outs   dx,DWORD PTR ds:[esi]
  4117fe:	or     eax,0xd3a69204
  411803:	mov    dl,dl
  411805:	ds loope 0x411834
  411808:	ss and al,0xca
  41180b:	mov    esp,0xf2cd58b3
  411810:	mov    WORD PTR [ebx-0x20],gs
  411813:	adc    al,0xef
  411815:	call   0x71ab54de
  41181a:	xlat   BYTE PTR ds:[ebx]
  41181b:	in     al,dx
  41181c:	ja     0x411800
  41181e:	icebp  
  41181f:	push   0x48084f6b
  411824:	dec    edx
  411825:	ins    DWORD PTR es:[edi],dx
  411826:	fild   QWORD PTR [ebp-0x3b]
  411829:	or     BYTE PTR [ecx],dl
  41182b:	shl    BYTE PTR [ecx+ebp*4],1
  41182e:	inc    edx
  41182f:	dec    esi
  411830:	fstp   DWORD PTR [esi-0x46]
  411833:	or     BYTE PTR [ecx],cl
  411835:	mov    bh,0xc3
  411837:	xchg   esi,eax
  411838:	mov    ch,0x85
  41183a:	lahf   
  41183b:	sbb    edi,edi
  41183d:	or     ch,dl
  41183f:	or     DWORD PTR [edx+0x6c],ebp
  411842:	aaa    
  411843:	dec    ecx
  411844:	dec    esi
  411845:	in     eax,0xf1
  411847:	sbb    cl,BYTE PTR [ebp-0x6b830b5]
  41184d:	sbb    dl,BYTE PTR [esi]
  41184f:	sbb    esi,DWORD PTR [edi-0x61b0d7ee]
  411855:	xchg   esi,eax
  411856:	lods   eax,DWORD PTR ds:[esi]
  411857:	push   eax
  411858:	nop
  411859:	mov    edx,0x81ccab66
  41185e:	push   edi
  41185f:	lds    ecx,FWORD PTR [ebx]
  411861:	mov    al,ds:0x1532025b
  411866:	xor    BYTE PTR [ebx-0x4a],0x9b
  41186a:	inc    esi
  41186b:	lds    ebx,FWORD PTR [edx]
  41186d:	and    DWORD PTR [esi+0x33432a65],edx
  411873:	aas    
  411874:	out    0x1f,eax
  411876:	pop    esp
  411877:	add    al,0xb0
  411879:	jo     0x411860
  41187b:	push   ebx
  41187c:	and    eax,esp
  41187e:	sbb    BYTE PTR [ecx+0x103fe593],cl
  411884:	push   ebp
  411885:	cmp    esi,DWORD PTR [eax+0x21]
  411888:	scas   al,BYTE PTR es:[edi]
  411889:	or     eax,0x7ab1c394
  41188e:	pop    edi
  41188f:	rol    BYTE PTR [edi],0x29
  411892:	addr16 xchg esp,eax
  411894:	pusha  
  411895:	rol    BYTE PTR [eax-0x3c],1
  411898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411899:	mov    ebx,0x7d09a5c3
  41189e:	sbb    esp,ebp
  4118a0:	xchg   BYTE PTR [edi+0x7c],al
  4118a3:	xor    al,0x98
  4118a5:	push   esi
  4118a6:	jns    0x41184e
  4118a8:	idiv   DWORD PTR [eax]
  4118aa:	mov    al,0xac
  4118ac:	jge    0x411887
  4118ae:	push   ecx
  4118af:	repnz dec edx
  4118b1:	dec    esi
  4118b2:	push   cs
  4118b3:	mov    ch,0xcd
  4118b5:	add    bh,cl
  4118b7:	push   ebx
  4118b8:	inc    DWORD PTR [edx-0x1f3e22d4]
  4118be:	pop    ds
  4118bf:	dec    edi
  4118c0:	mov    WORD PTR [ebp+edi*2+0x36],fs
  4118c4:	retf   
  4118c5:	mov    bh,0xb3
  4118c7:	fwait
  4118c8:	loope  0x41189a
  4118ca:	add    DWORD PTR [edi-0x69],esp
  4118cd:	mov    al,0x74
  4118cf:	mov    ?,eax
  4118d1:	mov    dh,0x88
  4118d3:	rol    DWORD PTR [ebx+0x28738e93],1
  4118d9:	mov    ds:0xa75b8d8f,eax
  4118de:	cmp    DWORD PTR [eax-0x4c],ebx
  4118e1:	(bad)  
  4118e2:	mov    dh,0xbe
  4118e4:	pop    esi
  4118e5:	fld    QWORD PTR [esi-0x7e617158]
  4118eb:	cmp    eax,0x67b17775
  4118f0:	xlat   BYTE PTR ds:[ebx]
  4118f1:	rcl    BYTE PTR [ebx],cl
  4118f3:	cld    
  4118f4:	pop    ss
  4118f5:	mov    edx,0x305d494f
  4118fa:	adc    cl,BYTE PTR [edi+0x54]
  4118fd:	inc    eax
  4118fe:	or     bh,BYTE PTR [ebx]
  411900:	(bad)  [eax+0x2d]
  411903:	push   eax
  411904:	cli    
  411905:	(bad)  
  411906:	addr16 mov edi,es
  411909:	xchg   esi,eax
  41190a:	mov    al,ds:0x37ce3427
  41190f:	pop    ebx
  411910:	cmp    BYTE PTR [edi-0x33668a8c],al
  411916:	mov    edx,0x3ca23b66
  41191b:	or     dl,BYTE PTR ds:0xa03d73d7
  411921:	sub    DWORD PTR [eax+eiz*1],ebp
  411924:	inc    esi
  411925:	test   al,0x6a
  411927:	jecxz  0x411959
  411929:	out    dx,eax
  41192a:	add    DWORD PTR [edx+0x7f],ebp
  41192d:	dec    esi
  41192e:	cmp    al,0x47
  411930:	div    DWORD PTR [edi-0x3b]
  411933:	push   ss
  411934:	or     al,0x3d
  411936:	push   ecx
  411937:	ins    DWORD PTR es:[edi],dx
  411938:	pop    ecx
  411939:	pusha  
  41193a:	jmp    DWORD PTR [edx+0x20]
  41193d:	sub    ecx,edx
  41193f:	and    al,0x59
  411941:	pusha  
  411942:	jb     0x411965
  411944:	ret    
  411945:	jne    0x4118ee
  411947:	jns    0x411980
  411949:	cld    
  41194a:	mov    al,0xf7
  41194c:	pop    ss
  41194d:	out    0x0,eax
  41194f:	xor    BYTE PTR [ebx],bh
  411951:	xor    al,0xe3
  411953:	dec    edx
  411954:	sub    al,0x66
  411956:	in     eax,0x5d
  411958:	ds stc 
  41195a:	add    DWORD PTR ds:0x50b5968a,edi
  411960:	pop    ecx
  411961:	dec    esi
  411962:	ja     0x41199f
  411964:	aaa    
  411965:	int    0x2f
  411967:	pusha  
  411968:	sbb    eax,0x4b56abe5
  41196d:	cmp    al,al
  41196f:	cld    
  411970:	cmp    al,0x1b
  411972:	dec    esp
  411973:	aam    0xe6
  411975:	fbstp  TBYTE PTR [edi+0x50983ab8]
  41197b:	in     al,dx
  41197c:	push   ebp
  41197d:	lods   al,BYTE PTR ds:[esi]
  41197e:	(bad)  
  41197f:	aad    0x62
  411981:	inc    eax
  411982:	lods   al,BYTE PTR ds:[esi]
  411983:	push   0xfffffff2
  411985:	jns    0x4119dd
  411987:	shr    DWORD PTR [edi-0x41],1
  41198a:	mov    eax,0x1cdae3c2
  41198f:	pushf  
  411990:	push   ds
  411991:	rol    DWORD PTR [ebp-0x5a],cl
  411994:	leave  
  411995:	mov    ebx,0x556e86e2
  41199a:	push   ebx
  41199b:	pop    esp
  41199c:	aad    0x1f
  41199e:	loop   0x4119f9
  4119a0:	jg     0x4119ad
  4119a2:	rcl    BYTE PTR [ebx+ecx*8+0xc64c6cf],0x1d
  4119aa:	cli    
  4119ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ac:	imul   ebx,esp,0x0
  4119af:	inc    esi
  4119b0:	int    0x24
  4119b2:	adc    cl,0xf7
  4119b5:	or     BYTE PTR [esp+eiz*2-0x7b],bh
  4119b9:	lods   al,BYTE PTR ds:[esi]
  4119ba:	leave  
  4119bb:	enter  0x7f14,0x10
  4119bf:	cmc    
  4119c0:	(bad)  
  4119c1:	ss stos BYTE PTR es:[edi],al
  4119c3:	sbb    BYTE PTR [ebx],dh
  4119c5:	inc    edi
  4119c6:	lea    edx,[eax+eiz*8-0x47aaf960]
  4119cd:	fs mov ebx,0x46aa03ec
  4119d3:	sub    DWORD PTR [ecx-0x80],esp
  4119d6:	lock sub DWORD PTR [ebp+0x7bc519c8],esi
  4119dd:	push   0xffffffdd
  4119df:	gs ret 0x7840
  4119e3:	(bad)  
  4119e5:	pusha  
  4119e6:	pop    edi
  4119e7:	ror    DWORD PTR [edx-0x12a562e6],cl
  4119ed:	xor    DWORD PTR [ebp-0x38],ebx
  4119f0:	mov    dh,0x7d
  4119f2:	loopne 0x4119b9
  4119f4:	pop    ecx
  4119f5:	inc    edx
  4119f6:	fistp  WORD PTR [esp+ebp*4-0xc395ca6]
  4119fd:	lea    edx,[edx-0x24]
  411a00:	std    
  411a01:	mov    edx,0x52c71990
  411a06:	xor    eax,0x69e97b72
  411a0b:	shl    dl,cl
  411a0d:	or     cl,al
  411a0f:	xchg   edx,eax
  411a10:	in     eax,dx
  411a11:	adc    al,0xa5
  411a13:	mov    ds,WORD PTR [edx+0x7c2e773e]
  411a19:	sub    DWORD PTR [edi-0x3a],ebx
  411a1c:	inc    esi
  411a1d:	dec    edi
  411a1e:	sbb    DWORD PTR [esi+0x60f094a1],ebp
  411a24:	mov    ecx,0xeab80f2
  411a29:	(bad)  
  411a2a:	repnz out 0x1c,al
  411a2d:	and    al,0x97
  411a2f:	mov    ds:0x11a968cf,al
  411a34:	arpl   bx,dx
  411a36:	cld    
  411a37:	mov    ebx,0x7371e278
  411a3c:	pop    esp
  411a3d:	xor    eax,0xced02290
  411a42:	sub    eax,0x8a2e0caa
  411a47:	mov    bl,0xd3
  411a49:	add    DWORD PTR [eax+0x72],ebx
  411a4c:	xchg   edi,eax
  411a4d:	add    ebp,esp
  411a4f:	mov    edx,0x97a5d652
  411a54:	in     eax,dx
  411a55:	and    BYTE PTR [eax+0x752f2f45],0xa6
  411a5c:	je     0x4119f4
  411a5e:	or     eax,0xfc7de6c8
  411a63:	dec    edx
  411a64:	scas   al,BYTE PTR es:[edi]
  411a65:	mov    ds:0x29faacff,al
  411a6a:	es adc ebp,ebp
  411a6d:	imul   ebp,ecx,0x139969d
  411a73:	(bad)  
  411a74:	into   
  411a75:	inc    esp
  411a76:	in     al,dx
  411a77:	mov    ah,0xa9
  411a79:	jle    0x411ab6
  411a7b:	pop    ds
  411a7c:	je     0x411a57
  411a7e:	adc    eax,0x1151dad7
  411a83:	call   0x650a:0xd13360ac
  411a8a:	sbb    DWORD PTR [esi+0x69ce5a96],ebp
  411a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a91:	mov    esp,0x61f529a2
  411a96:	jae    0x411a22
  411a98:	mov    ebx,0x92fea08f
  411a9d:	push   edi
  411a9e:	scas   al,BYTE PTR es:[edi]
  411a9f:	add    esi,DWORD PTR [edi+eiz*8]
  411aa2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aa4:	cs dec edi
  411aa6:	pusha  
  411aa7:	sbb    al,BYTE PTR [ebx-0x2593a5cf]
  411aad:	mov    edx,0xe69ecee4
  411ab2:	add    dh,BYTE PTR [ebx+ebx*1+0xea6d04b]
  411ab9:	aaa    
  411aba:	pop    eax
  411abb:	fwait
  411abc:	ret    
  411abd:	xor    bh,ah
  411abf:	and    eax,0xe54af747
  411ac4:	push   esi
  411ac5:	and    ah,BYTE PTR [edi+eax*8+0x568ea06c]
  411acc:	mov    cl,0xae
  411ace:	mov    cl,0x44
  411ad0:	sbb    DWORD PTR [eax-0x27],edx
  411ad3:	xor    DWORD PTR [ecx],esi
  411ad5:	sub    eax,edi
  411ad7:	inc    eax
  411ad8:	mov    eax,ds:0x4806cd6a
  411add:	push   edx
  411ade:	jge    0x411b46
  411ae0:	in     eax,0x82
  411ae2:	shl    DWORD PTR [eax-0x74],cl
  411ae5:	dec    edx
  411ae6:	dec    esp
  411ae7:	xchg   ebp,eax
  411ae8:	or     ch,al
  411aea:	outs   dx,BYTE PTR ds:[esi]
  411aeb:	inc    eax
  411aec:	outs   dx,DWORD PTR ds:[esi]
  411aed:	push   0x27a95d74
  411af2:	mov    eax,ds:0x7b7fdd33
  411af7:	aam    0x62
  411af9:	sbb    cl,BYTE PTR [esi]
  411afb:	retf   0xe9c0
  411afe:	jbe    0x411b1a
  411b00:	test   cl,bh
  411b02:	mov    ch,0xaf
  411b04:	push   eax
  411b05:	test   BYTE PTR [esi+0x1796b64d],bh
  411b0b:	(bad)  
  411b0c:	(bad)  
  411b0d:	enter  0x83e9,0xcb
  411b11:	jl     0x411a95
  411b13:	lods   eax,DWORD PTR ds:[esi]
  411b14:	mov    al,BYTE PTR [ebx+0x17]
  411b17:	inc    esi
  411b18:	bound  eax,QWORD PTR [edx-0x59668333]
  411b1e:	adc    BYTE PTR [edi],dh
  411b20:	jmp    0x411b3a
  411b22:	push   ss
  411b23:	shl    BYTE PTR [eax-0x2d65730],cl
  411b29:	ret    
  411b2a:	in     al,dx
  411b2b:	sub    al,0x75
  411b2d:	inc    esi
  411b2e:	mov    ?,WORD PTR ds:[ebx-0x10e88f1c]
  411b35:	fist   DWORD PTR ds:0xa98deb44
  411b3b:	or     dl,0x64
  411b3e:	aam    0x2f
  411b40:	in     eax,dx
  411b41:	sbb    al,0x29
  411b43:	ja     0x411b2e
  411b45:	sub    ebp,DWORD PTR [esi-0x64]
  411b48:	cs popa 
  411b4a:	inc    edi
  411b4b:	jne    0x411bbc
  411b4d:	test   eax,0x6c440afc
  411b52:	ret    
  411b53:	xchg   BYTE PTR ds:0x7bccda1c,ah
  411b59:	and    eax,0xc4064141
  411b5e:	fcmovnb st,st(3)
  411b60:	push   ebp
  411b61:	fisub  WORD PTR [edi-0x15d7c2cc]
  411b67:	cmp    BYTE PTR [edx],0x88
  411b6a:	dec    edi
  411b6b:	pop    esi
  411b6c:	sbb    al,0x15
  411b6e:	sub    al,0xd7
  411b70:	xchg   ecx,eax
  411b71:	stos   BYTE PTR es:[edi],al
  411b72:	cli    
  411b73:	xchg   edx,eax
  411b74:	repz pop ss
  411b76:	xchg   esi,eax
  411b77:	fadd   st(0),st
  411b79:	shl    ebp,1
  411b7b:	xchg   ebx,eax
  411b7c:	inc    esp
  411b7d:	fst    QWORD PTR [esi]
  411b7f:	jae    0x9bc079a4
  411b85:	mov    dl,0xc0
  411b87:	jb     0x411bf3
  411b89:	call   0x8035eddf
  411b8e:	loop   0x411b9d
  411b90:	stos   DWORD PTR es:[edi],eax
  411b91:	xchg   edx,eax
  411b92:	or     DWORD PTR cs:[esi+0x51],esp
  411b96:	jno    0x411b6f
  411b98:	adc    ch,BYTE PTR [edi-0x8]
  411b9b:	gs dec ebx
  411b9d:	add    eax,eax
  411b9f:	test   al,0xde
  411ba1:	ret    0x3f54
  411ba4:	adc    al,BYTE PTR [edx-0x6b688046]
  411baa:	call   0x43836582
  411baf:	mov    WORD PTR [ecx-0x3e],?
  411bb2:	or     al,BYTE PTR [esi-0x55]
  411bb5:	push   esp
  411bb6:	xor    DWORD PTR [esi],esi
  411bb8:	retf   
  411bb9:	mov    ds:0xfdf459f3,al
  411bbe:	mov    esi,0xfb68584a
  411bc3:	push   ebp
  411bc4:	fiadd  WORD PTR [edx+0x1a]
  411bc7:	lea    esi,[ebp+0x35]
  411bca:	mov    edi,0xd71ae7ea
  411bcf:	(bad)  [eax]
  411bd1:	jb     0x411b9c
  411bd3:	mov    edx,0xae96e46f
  411bd8:	xchg   edi,eax
  411bd9:	arpl   dx,cx
  411bdb:	aad    0x8e
  411bdd:	cmp    DWORD PTR [ebx+edx*4],edx
  411be0:	cs clc 
  411be2:	ret    0x8147
  411be5:	add    DWORD PTR [ebp-0x6136b4af],ecx
  411beb:	and    esi,DWORD PTR [edi-0x6e]
  411bee:	fwait
  411bef:	or     al,0x72
  411bf1:	inc    edx
  411bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf3:	or     al,0x9f
  411bf5:	mov    dh,0xcb
  411bf7:	les    edx,FWORD PTR [edi-0x8f9658]
  411bfd:	inc    esp
  411bfe:	add    cl,dh
  411c00:	inc    ebp
  411c01:	dec    eax
  411c02:	cmp    ebx,DWORD PTR [edx+edx*4+0x307cc5c1]
  411c09:	sbb    eax,0x25cb3035
  411c0e:	gs dec edi
  411c10:	mov    al,ds:0x6b0ebd0
  411c15:	inc    esi
  411c16:	ror    DWORD PTR [edi+ebp*1-0x7eb2f6b7],0x56
  411c1e:	mov    eax,ds:0xae5e036f
  411c23:	and    edi,DWORD PTR [edi+eax*4+0x5a200324]
  411c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c2b:	dec    ebx
  411c2c:	fiadd  DWORD PTR [edi+0x2bfc41a]
  411c32:	push   0xb7cfcb69
  411c37:	add    al,BYTE PTR [eax]
  411c39:	mov    ah,0x96
  411c3b:	push   ss
  411c3c:	in     al,0xb8
  411c3e:	pop    eax
  411c3f:	inc    esp
  411c40:	pop    eax
  411c41:	pop    ecx
  411c42:	rol    ecx,cl
  411c44:	sbb    BYTE PTR [ecx-0x7f],0x76
  411c48:	and    al,BYTE PTR [edi+0x9]
  411c4b:	mov    ds:0x8e87e751,al
  411c50:	das    
  411c51:	inc    edi
  411c52:	xchg   edx,eax
  411c53:	mov    BYTE PTR [edi+0x3dd3e00],bh
  411c59:	or     esi,DWORD PTR [edi]
  411c5b:	sub    dl,BYTE PTR [edi-0x1e144c29]
  411c61:	or     cl,BYTE PTR [ebx]
  411c63:	(bad)  
  411c64:	popf   
  411c65:	and    eax,eax
  411c67:	mov    dl,0x51
  411c69:	push   eax
  411c6a:	scas   eax,DWORD PTR es:[edi]
  411c6b:	push   0x90da6119
  411c70:	pop    eax
  411c71:	mov    bh,0x5c
  411c73:	shr    DWORD PTR [edi+0x6c44a4a1],1
  411c79:	jle    0x411bfd
  411c7b:	stc    
  411c7c:	jae    0x411c9f
  411c7e:	bound  ebx,QWORD PTR [edi]
  411c80:	sahf   
  411c81:	pop    esi
  411c82:	mov    esp,DWORD PTR [esi]
  411c84:	and    DWORD PTR ds:0x8a1ef89c,esi
  411c8a:	pop    DWORD PTR [eax+0x6d]
  411c8d:	xchg   ecx,eax
  411c8e:	or     eax,0xeacf2fb7
  411c93:	out    0x78,eax
  411c95:	fsubr  st(7),st
  411c97:	or     BYTE PTR [eax],ah
  411c99:	inc    ecx
  411c9a:	xchg   edx,ebx
  411c9c:	jle    0x411c33
  411c9e:	cmp    al,0x9a
  411ca0:	int3   
  411ca1:	push   esi
  411ca2:	icebp  
  411ca3:	xchg   edx,eax
  411ca4:	mov    ds:0x330442b9,al
  411ca9:	test   BYTE PTR [edx],al
  411cab:	fsub   QWORD PTR [ecx-0x73]
  411cae:	xchg   edx,eax
  411caf:	jl     0x411cd4
  411cb1:	sahf   
  411cb2:	inc    eax
  411cb3:	xor    al,BYTE PTR [eax]
  411cb5:	mov    ch,0xbe
  411cb7:	aaa    
  411cb8:	mov    esi,0x50e81815
  411cbd:	stos   DWORD PTR es:[edi],eax
  411cbe:	(bad)
  411cc1:	in     al,0x43
  411cc3:	clc    
  411cc4:	imul   DWORD PTR [edx-0x6226b4b2]
  411cca:	clc    
  411ccb:	int    0xd3
  411ccd:	cmp    edx,esi
  411ccf:	xchg   edi,eax
  411cd0:	mov    ch,0x8b
  411cd2:	mov    bl,0x17
  411cd4:	sub    al,0x6a
  411cd6:	je     0x411d21
  411cd8:	in     eax,0x63
  411cda:	(bad)  [ebx]
  411cdc:	ficomp WORD PTR [ebx+0x6c79eccc]
  411ce2:	mov    esi,DWORD PTR [eax+0x475d97c0]
  411ce8:	adc    ecx,DWORD PTR [ecx-0x74f3242a]
  411cee:	iret   
  411cef:	(bad)  
  411cf0:	shl    BYTE PTR [eax],0xae
  411cf3:	cmp    eax,0x571bffd7
  411cf8:	jecxz  0x411cb2
  411cfa:	cmp    al,0x2
  411cfc:	add    bl,BYTE PTR [ebp+0x19]
  411cff:	mov    BYTE PTR [edx+0x148834c2],ah
  411d05:	mov    ah,dl
  411d07:	xchg   edi,eax
  411d08:	repz xchg edi,ebx
  411d0b:	xchg   esp,eax
  411d0c:	push   ss
  411d0d:	fucompp 
  411d0f:	in     eax,0xdc
  411d11:	cmp    DWORD PTR [ecx+0x4af620a6],0xdccdd12
  411d1b:	sub    edi,DWORD PTR [edx]
  411d1d:	out    dx,al
  411d1e:	enter  0xca0d,0xa8
  411d22:	push   0x17
  411d24:	xchg   DWORD PTR [eax-0x4c],esp
  411d27:	and    bh,BYTE PTR [edi]
  411d29:	and    al,0xae
  411d2b:	and    al,0xf6
  411d2d:	retf   
  411d2e:	(bad)  
  411d2f:	dec    edx
  411d30:	push   edx
  411d31:	pushf  
  411d32:	aam    0xf5
  411d34:	in     eax,0xc9
  411d36:	sub    eax,0x7b29e34a
  411d3b:	std    
  411d3c:	xchg   ebp,eax
  411d3d:	inc    ebx
  411d3e:	mov    dh,0xf9
  411d40:	loope  0x411d49
  411d42:	xchg   DWORD PTR [edi-0x6f],ebp
  411d45:	das    
  411d46:	push   ss
  411d47:	adc    DWORD PTR [ebx],edx
  411d49:	(bad)  
  411d4a:	sub    BYTE PTR [ecx-0x57d962fa],0xc0
  411d51:	nop
  411d52:	or     eax,0x7a392982
  411d57:	push   esi
  411d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d59:	shr    DWORD PTR [esi+0x46],1
  411d5c:	pushf  
  411d5d:	cli    
  411d5e:	retf   0xc86e
  411d61:	cmc    
  411d62:	popf   
  411d63:	or     ecx,DWORD PTR [esi+0x65]
  411d66:	sar    edi,0x38
  411d69:	adc    eax,0xdcc35a92
  411d6e:	inc    edi
  411d6f:	je     0x411dbe
  411d71:	xchg   edi,eax
  411d72:	loope  0x411d78
  411d74:	pop    es
  411d75:	jmp    0x411dd9
  411d77:	addr16 loop 0x411d6c
  411d7a:	inc    ecx
  411d7b:	jmp    0x411d41
  411d7d:	addr16 sub al,0x76
  411d80:	out    dx,al
  411d81:	inc    ebp
  411d82:	fcom   QWORD PTR [edx+ebx*2+0x7c]
  411d86:	add    BYTE PTR [esi-0x65],bl
  411d89:	sub    eax,DWORD PTR [edi-0x260f71e5]
  411d8f:	adc    al,bh
  411d91:	jns    0x411d4f
  411d93:	pop    ss
  411d94:	fcmovnb st,st(5)
  411d96:	out    0x39,al
  411d98:	lahf   
  411d99:	je     0x411d8e
  411d9b:	sbb    ah,BYTE PTR [edi-0x4a564073]
  411da1:	fimul  DWORD PTR [esi-0x281dab94]
  411da7:	push   ebp
  411da8:	test   eax,0x47b7d78
  411dad:	mov    ebp,ds
  411daf:	pop    ss
  411db0:	(bad)  
  411db2:	mov    edi,0x97736eb6
  411db7:	imul   ebx,eax,0xffffffb8
  411dba:	gs test eax,0xc429f5e8
  411dc0:	pop    ebp
  411dc1:	int    0xaf
  411dc3:	or     eax,0x44e1525c
  411dc8:	mov    DWORD PTR [ecx+0x3c535154],ecx
  411dce:	cmp    DWORD PTR [ebx],ecx
  411dd0:	xchg   ebp,eax
  411dd1:	jg     0x411e33
  411dd3:	in     al,dx
  411dd4:	lahf   
  411dd5:	pop    es
  411dd6:	popa   
  411dd7:	repnz pop es
  411dd9:	dec    ebx
  411dda:	push   0xffffffb0
  411ddc:	mov    ch,0xd8
  411dde:	jnp    0x411db9
  411de0:	mov    edx,0xfcc02851
  411de5:	xchg   ebp,eax
  411de6:	(bad)  
  411de7:	cmp    DWORD PTR [eax+0x33d6c4ae],ebx
  411ded:	xor    DWORD PTR [eax+0x38],edi
  411df0:	cmc    
  411df1:	xlat   BYTE PTR ds:[ebx]
  411df2:	push   es
  411df3:	cmc    
  411df4:	sub    eax,0x6ec5b9b2
  411df9:	bound  ebx,QWORD PTR [edi-0x5b2207d4]
  411dff:	and    BYTE PTR ds:0xda4559b,0xbb
  411e06:	jge    0x411e26
  411e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e09:	(bad)  
  411e0a:	or     al,BYTE PTR [eax+0x28499b09]
  411e10:	xor    DWORD PTR [edx],esp
  411e12:	xchg   ecx,eax
  411e13:	sub    al,0xa
  411e15:	or     eax,0xbd4978da
  411e1a:	inc    ecx
  411e1b:	or     ebp,DWORD PTR gs:[edi+edx*1+0x78]
  411e20:	out    dx,al
  411e21:	sbb    BYTE PTR [esi+edi*1-0x5af174fd],cl
  411e28:	push   ds
  411e29:	jg     0x411e32
  411e2b:	jbe    0x411e22
  411e2d:	mov    bl,0x4c
  411e2f:	loope  0x411dec
  411e31:	sbb    dh,BYTE PTR [ecx+0x5be27f96]
  411e37:	push   eax
  411e38:	dec    ebp
  411e39:	add    DWORD PTR [esp+edx*8-0x78],ebp
  411e3d:	or     al,0x16
  411e3f:	test   bh,ah
  411e41:	or     eax,0x7709e22b
  411e46:	or     DWORD PTR [ebp-0x67],eax
  411e49:	inc    edx
  411e4a:	popa   
  411e4b:	push   ebx
  411e4c:	and    ecx,edi
  411e4e:	test   ah,dh
  411e50:	mov    ch,BYTE PTR [edx+0x6c457fe1]
  411e56:	or     DWORD PTR [ebp-0x1f],ecx
  411e59:	mov    edi,0x348b9b26
  411e5e:	aad    0x83
  411e60:	fwait
  411e61:	sbb    eax,ebp
  411e63:	lods   al,BYTE PTR ds:[esi]
  411e64:	jecxz  0x411eca
  411e66:	adc    bh,BYTE PTR ds:0xefc8502
  411e6c:	(bad)  
  411e6d:	loopne 0x411ec2
  411e6f:	es das 
  411e71:	add    dl,BYTE PTR [ebp+0x2039544c]
  411e77:	pusha  
  411e78:	sbb    eax,0x33741a0
  411e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7e:	inc    edi
  411e7f:	jg     0x411ee4
  411e81:	arpl   WORD PTR [ecx],sp
  411e83:	imul   ebx,DWORD PTR [eax-0x9],0xffffffaf
  411e87:	sbb    BYTE PTR [edi],bl
  411e89:	xchg   BYTE PTR [ebx],dl
  411e8b:	lods   al,BYTE PTR ds:[esi]
  411e8c:	jmp    0x411ee2
  411e8e:	mov    al,ds:0x27606b30
  411e93:	and    dh,BYTE PTR [edx*2+0x2ee7800]
  411e9a:	retf   0xcf56
  411e9d:	cwde   
  411e9e:	mov    edi,0xfb956fa5
  411ea3:	xor    esp,esi
  411ea5:	sti    
  411ea6:	add    al,0xde
  411ea8:	in     eax,dx
  411ea9:	lock add BYTE PTR [esi+0x487b62c7],al
  411eb0:	dec    esi
  411eb1:	add    bl,BYTE PTR [edi-0x6fa7b9a4]
  411eb7:	call   0xb241:0xf94ac66a
  411ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ebf:	sbb    ebx,ecx
  411ec1:	repz sub al,0x82
  411ec4:	into   
  411ec5:	cdq    
  411ec6:	push   DWORD PTR [edx+0x197ef8e7]
  411ecc:	outs   dx,BYTE PTR ds:[esi]
  411ecd:	xchg   esp,eax
  411ece:	pop    ebx
  411ecf:	icebp  
  411ed0:	jbe    0x411e75
  411ed2:	aam    0xd1
  411ed4:	cmc    
  411ed5:	dec    edx
  411ed6:	and    dh,cl
  411ed8:	xchg   ebp,eax
  411ed9:	xchg   edx,eax
  411eda:	jae    0x411f07
  411edc:	cmp    DWORD PTR [edx-0x3a07b0fe],ebp
  411ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ee3:	es cli 
  411ee5:	xor    ah,BYTE PTR [ebx+eiz*4-0x3d]
  411ee9:	mov    ecx,0x89231f81
  411eee:	arpl   WORD PTR [ecx],di
  411ef0:	inc    edi
  411ef1:	mov    ebx,0x70260936
  411ef6:	cli    
  411ef7:	call   0x2a51:0x32fa6f46
  411efe:	pop    esi
  411eff:	pop    es
  411f00:	xchg   cl,bh
  411f02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f03:	mov    BYTE PTR [ecx+0x78977df],0x2b
  411f0a:	in     eax,0xfe
  411f0c:	sbb    al,0x3f
  411f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0f:	fst    QWORD PTR [ebx+0x17]
  411f12:	add    BYTE PTR [esi-0x30],dl
  411f15:	mov    ebx,0x9a0d1399
  411f1a:	test   DWORD PTR [eax+0x47d7912f],0xbb4adae5
  411f24:	push   esp
  411f25:	retf   0xbbc0
  411f28:	xor    eax,0x4944155c
  411f2d:	stc    
  411f2e:	or     DWORD PTR [edx+0x342c0583],esp
  411f34:	xor    al,0xe
  411f36:	sbb    ebx,DWORD PTR [ebx+0x61]
  411f39:	(bad)  
  411f3a:	or     DWORD PTR [eax-0x20],ebp
  411f3d:	loopne 0x411f49
  411f3f:	cs push ds
  411f41:	xor    BYTE PTR [edi-0xa22b4d3],al
  411f47:	pop    esp
  411f48:	lods   eax,DWORD PTR ds:[esi]
  411f49:	xchg   edx,eax
  411f4a:	inc    ebx
  411f4b:	mov    esp,0xae923e35
  411f50:	lea    ebp,[edi-0x14]
  411f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f54:	push   edx
  411f55:	mov    ebx,ebp
  411f57:	push   ss
  411f58:	mov    ebp,0x1b22e1c5
  411f5d:	(bad)
  411f60:	into   
  411f61:	jmp    0x3b75:0x7fc98ab3
  411f68:	mov    bh,0xb2
  411f6a:	gs inc edx
  411f6c:	jg     0x411f87
  411f6e:	xchg   ecx,eax
  411f6f:	fiadd  WORD PTR [eax+edx*4-0x30]
  411f73:	(bad)  
  411f74:	pusha  
  411f75:	aam    0x3c
  411f77:	fs jo  0x411f4e
  411f7a:	and    ecx,ebp
  411f7c:	and    BYTE PTR [ecx],ah
  411f7e:	mov    ecx,0x7eeaae53
  411f83:	xor    DWORD PTR [edx],ebp
  411f85:	in     al,dx
  411f86:	mov    ebx,0x3e4bcb3f
  411f8b:	dec    edi
  411f8c:	jne    0x411fdb
  411f8e:	mov    bl,0x66
  411f90:	repz mov al,0x5e
  411f93:	sar    DWORD PTR gs:[edi+0x6c63de7d],cl
  411f9a:	inc    ebx
  411f9b:	mov    cl,0x9c
  411f9d:	dec    edx
  411f9e:	sti    
  411f9f:	xchg   edi,eax
  411fa0:	dec    esp
  411fa1:	lds    esp,FWORD PTR [edx]
  411fa3:	push   edx
  411fa4:	aam    0xb
  411fa6:	dec    esp
  411fa7:	pop    edi
  411fa8:	xlat   BYTE PTR ds:[ebx]
  411fa9:	and    BYTE PTR ds:0xb3a7415e,dl
  411faf:	jp     0x411ff1
  411fb1:	or     BYTE PTR [esi],bh
  411fb3:	or     dl,cl
  411fb5:	jne    0x411f49
  411fb7:	lds    ebp,FWORD PTR [ecx+ebx*4-0x58]
  411fbb:	mov    bl,BYTE PTR [ebx+0x636b5265]
  411fc1:	jecxz  0x411fd9
  411fc3:	xchg   esi,eax
  411fc4:	xacquire lock not BYTE PTR [ecx+0x52de838c]
  411fcc:	mov    al,ds:0xd0631bfe
  411fd1:	repnz cmp cl,BYTE PTR [ebx]
  411fd4:	hlt    
  411fd5:	out    0xae,eax
  411fd7:	xor    DWORD PTR [edx],ecx
  411fd9:	cmp    edi,eax
  411fdb:	fadd   QWORD PTR [ebx-0x66b1bf35]
  411fe1:	into   
  411fe2:	out    dx,eax
  411fe3:	loop   0x411fb0
  411fe5:	call   0x4979:0x18b3811d
  411fec:	push   edx
  411fed:	mov    edi,ecx
  411fef:	sub    eax,0x3a15e118
  411ff4:	mov    esp,0x5d2af606
  411ff9:	into   
  411ffa:	ins    DWORD PTR es:[edi],dx
  411ffb:	imul   eax,DWORD PTR [ecx-0x70],0xae10413c
  412002:	cmc    
  412003:	stos   DWORD PTR es:[edi],eax
  412004:	pop    eax
  412005:	fbld   TBYTE PTR [edi-0x20]
  412008:	in     eax,dx
  412009:	cmp    eax,0xe69dff53
  41200e:	sbb    BYTE PTR [edx+0x34],0xda
  412012:	cmc    
  412013:	in     al,dx
  412014:	xor    esi,DWORD PTR ds:0xf9e02698
  41201a:	shl    DWORD PTR cs:[ebx-0x1c6cf171],0xd5
  412022:	xor    DWORD PTR ds:0x6f391a9b,ebx
  412028:	pop    eax
  412029:	es cmp eax,0x3aa2faeb
  41202f:	dec    edx
  412030:	mov    al,ds:0x888b144a
  412035:	push   es
  412036:	adc    ah,BYTE PTR [eax]
  412038:	dec    ecx
  412039:	cmp    al,0xee
  41203b:	add    BYTE PTR [ecx+0xb],0xaf
  41203f:	ret    0x14ef
  412042:	mov    ecx,0xd8a5f746
  412047:	repz push ds
  412049:	mov    WORD PTR [edi+0x75],es
  41204c:	lods   al,BYTE PTR ds:[esi]
  41204d:	or     al,0x2b
  41204f:	adc    al,0x24
  412051:	lods   eax,DWORD PTR ds:[esi]
  412052:	push   esp
  412053:	es push ebp
  412055:	push   0x43
  412057:	mov    dh,0x16
  412059:	jbe    0x4120b8
  41205b:	pusha  
  41205c:	loope  0x4120ac
  41205e:	cmp    al,BYTE PTR [ecx-0x8]
  412061:	mov    BYTE PTR [ebp-0x45],ah
  412064:	jecxz  0x41205a
  412066:	mov    bh,0xee
  412068:	je     0x41200c
  41206a:	fst    DWORD PTR [eax-0x3f]
  41206d:	cmp    al,0x9b
  41206f:	mov    DWORD PTR [esi-0x7e1ec8fb],edx
  412075:	push   ds
  412076:	mov    eax,ds:0x78e2251a
  41207b:	test   BYTE PTR [ebp+0x7e],al
  41207e:	jbe    0x412043
  412080:	jnp    0x4120dd
  412082:	mov    edx,DWORD PTR ds:0x6353461a
  412088:	adc    edx,edx
  41208a:	dec    edx
  41208b:	pop    esp
  41208c:	sub    eax,edx
  41208e:	out    dx,al
  41208f:	scas   al,BYTE PTR es:[edi]
  412090:	push   0x5eeb000d
  412095:	xlat   BYTE PTR ds:[ebx]
  412096:	dec    ebp
  412097:	in     eax,dx
  412098:	dec    esi
  412099:	cmp    al,0x55
  41209b:	inc    esi
  41209c:	cli    
  41209d:	imul   ebx,DWORD PTR [ecx],0x22
  4120a0:	xchg   ebp,eax
  4120a1:	xchg   BYTE PTR [edi],ah
  4120a3:	adc    DWORD PTR gs:[edi+0x744669ab],ebx
  4120aa:	lahf   
  4120ab:	in     al,dx
  4120ac:	leave  
  4120ad:	mov    bx,0x6b9a
  4120b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120b2:	stos   BYTE PTR es:[edi],al
  4120b3:	push   es
  4120b4:	adc    BYTE PTR [esi+esi*2],dl
  4120b7:	xchg   edx,eax
  4120b8:	or     al,0x83
  4120ba:	or     eax,0x5e25929a
  4120bf:	add    BYTE PTR [edi],ah
  4120c1:	call   FWORD PTR [eax]
  4120c3:	push   edi
  4120c4:	push   eax
  4120c5:	adc    ebx,DWORD PTR [ebx-0x6b]
  4120c8:	pop    esi
  4120c9:	pop    ebx
  4120ca:	ret    
  4120cb:	jmp    0x907271de
  4120d0:	sub    DWORD PTR [bx+si-0x7b41],esp
  4120d5:	jmp    0x6c23:0xb9bea5b
  4120dc:	fwait
  4120dd:	xchg   esi,eax
  4120de:	les    ebp,FWORD PTR [edx+0x5d6caf1f]
  4120e4:	rcr    cl,cl
  4120e6:	sbb    eax,0x53c275b1
  4120eb:	jbe    0x4120fd
  4120ed:	lock das 
  4120ef:	and    BYTE PTR [edi-0x4da1b8b9],ch
  4120f5:	jno    0x4120d0
  4120f7:	mov    ds:0x5f86ea5,al
  4120fc:	adc    DWORD PTR [edx],0x468c7612
  412102:	inc    esp
  412103:	adc    eax,0x9e35f7d9
  412108:	or     BYTE PTR [edi],dh
  41210a:	(bad)  
  41210b:	out    dx,eax
  41210c:	ja     0x41214d
  41210e:	repnz pushf 
  412110:	(bad)  
  412111:	mov    dh,0x86
  412113:	pop    eax
  412114:	into   
  412115:	inc    esi
  412116:	mov    edx,DWORD PTR [ebp+0x285378ea]
  41211c:	mov    edi,0xf367b347
  412121:	sub    ah,0x35
  412124:	jo     0x4120e0
  412126:	je     0x4120e2
  412128:	clc    
  412129:	imul   eax,esi,0xac174b67
  41212f:	sbb    BYTE PTR ds:0x15a23dc9,ch
  412135:	mov    DWORD PTR es:[edx-0x703eeb62],ebx
  41213c:	inc    ebp
  41213d:	sar    bh,cl
  41213f:	dec    ebx
  412140:	or     DWORD PTR [esi-0x280bea6d],edi
  412146:	pop    ds
  412147:	lods   al,BYTE PTR ds:[esi]
  412148:	(bad)  
  412149:	mov    esp,0x637875fc
  41214e:	xchg   ecx,eax
  41214f:	push   esi
  412150:	rol    DWORD PTR [ecx],0x1d
  412153:	xlat   BYTE PTR ds:[ebx]
  412154:	mov    ds:0x5a0b663c,al
  412159:	adc    al,0xc9
  41215b:	retf   0x53dc
  41215e:	dec    BYTE PTR [eax+0x3e]
  412161:	shl    DWORD PTR [ebx-0x24],0xad
  412165:	dec    ebx
  412166:	dec    ebx
  412167:	xor    eax,0x3b95a97d
  41216c:	outs   dx,BYTE PTR ds:[esi]
  41216d:	mov    cl,0x72
  412170:	retf   
  412171:	push   cs
  412172:	out    0x5c,al
  412174:	cdq    
  412175:	cmc    
  412176:	push   es
  412177:	test   DWORD PTR [ebp+eax*2+0x7c],edi
  41217b:	dec    edi
  41217c:	dec    ebp
  41217d:	jmp    0x6e4d:0xee33399c
  412184:	int    0x4b
  412186:	icebp  
  412187:	pop    ecx
  412188:	test   ebp,ecx
  41218a:	mov    bl,0xc5
  41218c:	or     ch,ah
  41218e:	pusha  
  41218f:	ja     0x412146
  412191:	pop    esp
  412192:	pop    ss
  412193:	daa    
  412194:	pop    edi
  412195:	mov    ebx,0x55f9c5e7
  41219a:	push   edi
  41219b:	gs xchg esp,eax
  41219d:	hlt    
  41219e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41219f:	lods   al,BYTE PTR ds:[esi]
  4121a0:	add    al,0xe8
  4121a2:	inc    ecx
  4121a3:	iret   
  4121a4:	test   dh,0xea
  4121a7:	xchg   DWORD PTR [ebx],esi
  4121a9:	mov    edi,0x8e0b684b
  4121ae:	cmp    eax,0x6309382
  4121b3:	loopne 0x4121c5
  4121b5:	or     al,0x41
  4121b7:	adc    edx,edx
  4121b9:	shr    DWORD PTR [ecx],cl
  4121bb:	clc    
  4121bc:	test   al,0x65
  4121be:	push   edx
  4121bf:	or     ecx,DWORD PTR [edi-0x39]
  4121c2:	pop    ds
  4121c3:	xchg   esi,eax
  4121c4:	call   0xa7d1:0x37f621fe
  4121cb:	inc    ecx
  4121cc:	dec    ebp
  4121cd:	test   BYTE PTR [esi-0xd],ch
  4121d0:	sub    DWORD PTR [ecx+0x43d4566c],0xa1719d22
  4121da:	scas   al,BYTE PTR es:[edi]
  4121db:	loopne 0x41215f
  4121dd:	add    BYTE PTR [ebx-0x35],0xd6
  4121e1:	adc    DWORD PTR [ecx],eax
  4121e3:	mov    esi,0x3651b5b4
  4121e8:	pop    ebp
  4121e9:	cli    
  4121ea:	push   ecx
  4121eb:	add    dl,BYTE PTR [eax]
  4121ed:	iret   
  4121ee:	sub    DWORD PTR [ebx],0x9cda397f
  4121f4:	jo     0x41219c
  4121f6:	mov    esp,DWORD PTR [edi-0x1ad9d0c6]
  4121fc:	hlt    
  4121fd:	ds ret 0x40c
  412201:	arpl   ax,di
  412203:	push   0xab1e2746
  412208:	(bad)  
  41220a:	sbb    al,0xc9
  41220c:	jg     0x412287
  41220e:	dec    ecx
  41220f:	(bad)  
  412210:	xor    edi,DWORD PTR [ecx+0x6b]
  412213:	adc    ebx,DWORD PTR [ecx+0x34b6d2f4]
  412219:	adc    BYTE PTR [ebx+0x58],0x2
  41221d:	loopne 0x412252
  41221f:	xchg   BYTE PTR [eax+0x6948a50],ch
  412225:	fwait
  412226:	sub    BYTE PTR [ebx+0x29913ff8],cl
  41222c:	mov    dl,0xe7
  41222e:	stos   BYTE PTR es:[edi],al
  41222f:	jbe    0x4121c1
  412231:	mov    ds:0x1ec74cb2,eax
  412236:	mov    eax,ebx
  412238:	mov    BYTE PTR [ebx],bh
  41223a:	les    ebp,FWORD PTR [esi+ecx*4]
  41223d:	and    edx,ecx
  41223f:	add    eax,0x2013dcf1
  412244:	sub    edx,DWORD PTR [ebp+0x170bf410]
  41224a:	mov    edx,0xfb863319
  41224f:	mov    dl,0x96
  412251:	ds xchg edi,eax
  412253:	dec    ebx
  412254:	test   eax,0xc08a01b4
  412259:	sub    dh,BYTE PTR [ecx-0x44b29641]
  41225f:	sub    edx,DWORD PTR [edi-0x3b]
  412262:	pop    edi
  412263:	xor    ebp,edi
  412265:	popf   
  412266:	retf   0xaefc
  412269:	inc    DWORD PTR [ecx+0x2bc3d565]
  41226f:	mov    DWORD PTR [ebx-0x43],esp
  412272:	xrelease mov BYTE PTR [ecx-0x612f9856],bl
  412279:	xor    ecx,DWORD PTR [ebp-0x421ec6f9]
  41227f:	repz enter 0xf912,0x42
  412284:	mov    bh,0xa0
  412286:	pop    ecx
  412287:	mov    bh,0xd2
  412289:	mov    dh,0xfd
  41228b:	mov    eax,ds:0x3529e152
  412290:	cdq    
  412291:	(bad)  
  412292:	arpl   WORD PTR [esi+0x13],sp
  412295:	sbb    esp,DWORD PTR [ecx+0x22]
  412298:	addr16 mov edi,0xbe7451ae
  41229e:	fisubr WORD PTR [ecx+0x4f848206]
  4122a4:	lods   eax,DWORD PTR ds:[esi]
  4122a5:	jno    0x412284
  4122a7:	test   eax,0x8f6ec32f
  4122ac:	rcl    BYTE PTR [ebx+0x1d24c33d],1
  4122b2:	sbb    ah,BYTE PTR [edi+ebx*2+0x50]
  4122b6:	out    dx,al
  4122b7:	push   esi
  4122b8:	mov    bh,0x13
  4122ba:	adc    ah,dl
  4122bc:	(bad)  
  4122be:	fwait
  4122bf:	xchg   ebp,eax
  4122c0:	xchg   esi,eax
  4122c1:	popa   
  4122c2:	aas    
  4122c3:	fist   DWORD PTR [esi+0x41]
  4122c6:	fist   WORD PTR [esi]
  4122c8:	retf   0x41fc
  4122cb:	push   esp
  4122cc:	aas    
  4122cd:	lock jno 0x412314
  4122d0:	and    al,0x47
  4122d2:	mov    ds:0x3cd0e2c,al
  4122d7:	mov    ecx,0x152831b8
  4122dc:	mov    esp,DWORD PTR [ebx+esi*8]
  4122df:	in     al,0x1f
  4122e1:	mov    ds:0x86e13a41,al
  4122e6:	test   dl,cl
  4122e8:	xor    al,0x2a
  4122ea:	push   ebx
  4122eb:	xchg   esp,eax
  4122ec:	sbb    bh,BYTE PTR [edi-0x17]
  4122ef:	ja     0x41236e
  4122f1:	dec    ecx
  4122f2:	fucomip st,st(5)
  4122f4:	mov    al,ds:0xcff1b959
  4122f9:	xlat   BYTE PTR ds:[ebx]
  4122fa:	int    0x6a
  4122fc:	in     eax,dx
  4122fd:	pop    ds
  4122fe:	dec    esp
  4122ff:	scas   eax,DWORD PTR es:[edi]
  412300:	les    ecx,FWORD PTR [edx+0x7a]
  412303:	sub    eax,0xbc9ec8e9
  412308:	les    ebp,FWORD PTR [ecx]
  41230a:	(bad)  
  41230b:	mov    eax,ds:0x6f749bf6
  412310:	xor    esp,esp
  412312:	mov    edi,0x724bea1b
  412317:	aaa    
  412318:	ins    DWORD PTR es:[edi],dx
  412319:	mov    al,ah
  41231b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41231c:	push   ebx
  41231d:	sub    bh,BYTE PTR [ebx+edx*8-0x72dccad0]
  412324:	push   esi
  412325:	add    eax,0x7790d801
  41232a:	enter  0x7bf4,0x36
  41232e:	adc    bh,BYTE PTR [edi]
  412330:	retf   0x255
  412333:	js     0x4123a5
  412335:	mov    bh,BYTE PTR [eax]
  412337:	(bad)
  41233a:	and    esp,esi
  41233c:	cli    
  41233d:	push   edx
  41233e:	fs call 0x94a1ed0
  412344:	mov    ds:0x51de8301,eax
  412349:	or     DWORD PTR [edi+0x10],edi
  41234c:	scas   eax,DWORD PTR es:[edi]
  41234d:	dec    ecx
  41234e:	int    0xd8
  412350:	jecxz  0x4123c5
  412352:	nop
  412353:	adc    ecx,ebx
  412355:	sbb    DWORD PTR ds:0x2f48b59d,0x30
  41235c:	sbb    DWORD PTR [edx],0x15
  41235f:	mov    cs,WORD PTR [ecx-0x2c]
  412362:	xchg   ecx,eax
  412363:	inc    eax
  412364:	jne    0x4123e5
  412366:	mov    dl,0x8
  412368:	popf   
  412369:	push   ebp
  41236a:	ss mov eax,0xa239d965
  412370:	mov    esp,0x7e43931f
  412375:	sti    
  412376:	pop    edx
  412377:	ror    DWORD PTR [eax],1
  412379:	push   ds
  41237a:	aad    0xed
  41237c:	cmc    
  41237d:	ja     0x412338
  41237f:	mov    ds:0xd68c382b,eax
  412384:	sub    ecx,edx
  412386:	dec    edi
  412387:	push   es
  412388:	mov    cl,0x23
  41238a:	shl    BYTE PTR [edx+0x637312f4],0x25
  412391:	pop    esp
  412392:	jl     0x4123f4
  412394:	mov    es,WORD PTR [ecx-0xd]
  412397:	push   ss
  412398:	retf   
  412399:	xor    eax,0x607109ca
  41239e:	xchg   DWORD PTR [esi+eax*1-0x5a1ecc26],esp
  4123a5:	jge    0x4123da
  4123a7:	jmp    0xd559c692
  4123ac:	jle    0x412358
  4123ae:	add    bl,BYTE PTR [ecx]
  4123b0:	adc    eax,0xeb682351
  4123b5:	js     0x412388
  4123b7:	fwait
  4123b8:	mov    WORD PTR [edi],?
  4123ba:	aaa    
  4123bb:	fimul  DWORD PTR [edx-0x20]
  4123be:	sbb    DWORD PTR [ebx-0x79],ebp
  4123c1:	push   es
  4123c2:	xor    esi,DWORD PTR [edx+0x2ddb6ba8]
  4123c8:	adc    bl,BYTE PTR [ecx+0x1b15d982]
  4123ce:	mov    ah,0x2e
  4123d0:	ja     0x4123a8
  4123d2:	add    ebx,esp
  4123d4:	and    al,0x68
  4123d6:	(bad)  
  4123d7:	jns    0x41238a
  4123d9:	lea    esp,[ebx+0x2887e268]
  4123df:	mov    edx,0x593ef2c4
  4123e4:	test   dh,bl
  4123e6:	jge    0x4123fe
  4123e8:	cld    
  4123e9:	xor    al,0x5b
  4123eb:	adc    al,0xd3
  4123ed:	and    eax,0xff1a203
  4123f2:	ja     0x412445
  4123f4:	cwde   
  4123f5:	adc    DWORD PTR [ecx+ebp*4-0x2cfcd523],0x3cbc066a
  412400:	js     0x4123ef
  412402:	cmp    bh,BYTE PTR [esi]
  412404:	sub    edx,DWORD PTR [ecx]
  412406:	arpl   WORD PTR [ecx-0x5c1927f9],cx
  41240c:	xchg   ecx,eax
  41240d:	push   ecx
  41240e:	ror    bl,1
  412410:	mov    eax,ds:0x88a11b44
  412415:	and    ah,BYTE PTR ds:0xd7d574af
  41241b:	jp     0x4123fc
  41241d:	jmp    0x486eab82
  412422:	mov    ds:0x3b107018,eax
  412427:	scas   eax,DWORD PTR es:[edi]
  412428:	mov    esp,0xc7180987
  41242d:	mov    ds:0xb7581ebe,eax
  412432:	inc    edx
  412433:	test   BYTE PTR [ebx+0x55d7fcf6],0xf5
  41243a:	and    ch,ah
  41243c:	out    dx,eax
  41243d:	adc    eax,0x68cbb77f
  412442:	or     BYTE PTR [edx+edx*2],dh
  412445:	jecxz  0x4124bb
  412447:	in     eax,0xa1
  412449:	xor    dh,cl
  41244b:	sar    esi,cl
  41244d:	push   edi
  41244e:	repz mov esi,0x867654de
  412454:	add    BYTE PTR [ecx+ebp*4-0x7e3902bc],al
  41245b:	out    dx,eax
  41245c:	retf   0x7a8f
  41245f:	push   0x2f
  412461:	outs   dx,DWORD PTR gs:[esi]
  412463:	jl     0x412470
  412465:	mov    ebp,0x3274b599
  41246a:	imul   edx,DWORD PTR [ebx+0x2e07f16d],0x7a20a325
  412474:	xor    al,0x1e
  412476:	cwde   
  412477:	mov    eax,0xec6e0324
  41247c:	ret    
  41247d:	iret   
  41247e:	stos   DWORD PTR es:[edi],eax
  41247f:	add    eax,0x84e3e50b
  412484:	sti    
  412485:	dec    edx
  412486:	xchg   ebx,eax
  412487:	mov    bh,0x9a
  412489:	cmp    BYTE PTR [ebp+esi*1+0xc48d48f],ah
  412490:	rol    edi,1
  412492:	pop    eax
  412493:	mov    dh,BYTE PTR [ebp-0x16]
  412496:	sbb    BYTE PTR [eax],cl
  412498:	(bad)  
  412499:	sub    BYTE PTR [ecx+0x59f0b024],cl
  41249f:	bound  ebx,QWORD PTR [ebx-0x56]
  4124a2:	or     bl,dl
  4124a4:	iret   
  4124a5:	jo     0x412502
  4124a7:	sbb    al,0xb4
  4124a9:	in     al,dx
  4124aa:	dec    ecx
  4124ab:	add    ah,bh
  4124ad:	xchg   DWORD PTR [ecx],esp
  4124af:	cmp    al,al
  4124b1:	mov    bl,dl
  4124b3:	das    
  4124b4:	cwde   
  4124b5:	stc    
  4124b6:	push   ebx
  4124b7:	je     0x4124b8
  4124b9:	fucomi st,st(4)
  4124bb:	ror    dh,1
  4124bd:	aam    0x23
  4124bf:	mov    ds:0x500622ef,al
  4124c4:	lods   al,BYTE PTR ds:[esi]
  4124c5:	mov    WORD PTR [esi],cs
  4124c7:	mov    dl,0x3c
  4124c9:	push   es
  4124ca:	mov    WORD PTR [eax+0x8],gs
  4124cd:	loop   0x4124a5
  4124cf:	pop    edi
  4124d0:	imul   edx,DWORD PTR [ebp-0x31],0xffffffb9
  4124d4:	xor    edx,DWORD PTR [edx+0x74]
  4124d7:	add    eax,esp
  4124d9:	jecxz  0x41245b
  4124db:	test   al,0xde
  4124dd:	call   0x7cd4:0xd037aba
  4124e4:	je     0x4124aa
  4124e6:	and    BYTE PTR [eax],0x6d
  4124e9:	jne    0x4124b8
  4124eb:	nop
  4124ec:	pop    esp
  4124ed:	adc    bl,cl
  4124ef:	cmp    eax,0xab29a596
  4124f4:	pop    edi
  4124f5:	(bad)  
  4124f6:	das    
  4124f7:	popa   
  4124f8:	out    0xdf,al
  4124fa:	xor    ch,bh
  4124fc:	ins    BYTE PTR es:[edi],dx
  4124fd:	or     DWORD PTR [ebp-0x233af628],ecx
  412503:	lods   al,BYTE PTR ds:[esi]
  412504:	or     dh,0x43
  412507:	add    BYTE PTR [edi],dl
  412509:	test   DWORD PTR [edx],ebx
  41250b:	sbb    esi,DWORD PTR [ecx-0x218bde28]
  412511:	mov    ds:0x1ef46b9d,al
  412516:	es (bad) 
  412518:	push   ebx
  412519:	inc    eax
  41251a:	inc    esp
  41251b:	mov    DWORD PTR [edx],edx
  41251d:	pop    eax
  41251e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41251f:	lds    ebx,FWORD PTR [ecx+ebx*1+0x52]
  412523:	adc    eax,0x86379c8e
  412528:	fldcw  WORD PTR [ebx]
  41252a:	outs   dx,DWORD PTR ds:[esi]
  41252b:	jo     0x412544
  41252d:	jb     0x412534
  41252f:	add    ah,BYTE PTR [ecx-0x7519056]
  412535:	xchg   ebp,eax
  412536:	pop    es
  412537:	daa    
  412538:	int3   
  412539:	adc    BYTE PTR [ebx+ebx*2-0x7b],ch
  41253d:	iret   
  41253e:	sbb    BYTE PTR [esi-0x363deea7],bh
  412544:	inc    eax
  412545:	inc    ecx
  412546:	outs   dx,BYTE PTR ds:[esi]
  412547:	retf   0xca44
  41254a:	push   eax
  41254b:	sbb    BYTE PTR [edi],dh
  41254d:	(bad)  
  41254e:	adc    DWORD PTR [edx-0x4eeff1d],ebp
  412554:	sbb    ebp,DWORD PTR [edx-0x4c]
  412557:	dec    ebx
  412558:	mov    eax,ds:0xde40d842
  41255d:	adc    esp,ebp
  41255f:	imul   ecx,DWORD PTR [edi+0x4ca4496d],0xffffff9e
  412566:	repnz mov ds:0x84b7e055,eax
  41256c:	inc    ecx
  41256d:	aaa    
  41256e:	push   0x39
  412570:	dec    ebp
  412571:	in     al,dx
  412572:	sbb    edi,eax
  412574:	inc    edx
  412575:	repz lea ecx,[ebp-0x67908584]
  41257c:	pusha  
  41257d:	int    0xa
  41257f:	test   BYTE PTR [ebx+0x42],cl
  412582:	and    BYTE PTR [edi*1-0x1746f3c7],ch
  412589:	mov    esi,0xa2610b50
  41258e:	push   ecx
  41258f:	jl     0x4125fe
  412591:	and    eax,0x238b5644
  412596:	push   0x4f
  412598:	arpl   cx,cx
  41259a:	add    al,0xab
  41259c:	jecxz  0x4125fa
  41259e:	push   esi
  41259f:	test   BYTE PTR [ebx+ecx*4-0x74e063d],ch
  4125a6:	xchg   ebp,eax
  4125a7:	mov    edx,0x3953be32
  4125ac:	mov    BYTE PTR [edx],bh
  4125ae:	test   eax,0xbf263e52
  4125b3:	pop    esp
  4125b4:	mov    cl,dl
  4125b6:	sub    BYTE PTR [ebx-0x12],bl
  4125b9:	loopne 0x4125ee
  4125bb:	add    BYTE PTR [ebp+0x158ef825],al
  4125c1:	xchg   ebp,eax
  4125c2:	cmp    DWORD PTR [ecx+0x4a9a633a],edi
  4125c8:	push   0xfffffffb
  4125ca:	leave  
  4125cb:	fidivr WORD PTR [ecx-0x1e]
  4125ce:	jmp    0x4125e3
  4125d0:	pop    es
  4125d1:	or     BYTE PTR [esi-0x41],ah
  4125d4:	mov    ds:0x66d305e8,al
  4125d9:	sbb    edx,DWORD PTR ds:0xdcaca0db
  4125df:	or     eax,0x21c2eea8
  4125e4:	ret    0xb5b7
  4125e7:	test   BYTE PTR [edi+0x4d],cl
  4125ea:	sbb    cl,BYTE PTR [eax+0x4d9e98c2]
  4125f0:	mov    ds:0xdfe71977,al
  4125f5:	adc    BYTE PTR [eax+0x24],bl
  4125f8:	and    BYTE PTR [edx+0x36887dec],dh
  4125fe:	mov    ebx,gs
  412600:	(bad)  
  412601:	ror    DWORD PTR [edx],1
  412603:	cmp    ah,BYTE PTR [edx+0x1e]
  412606:	add    esi,DWORD PTR [eax+0x27beebd]
  41260c:	jae    0x412646
  41260e:	(bad)  
  41260f:	hlt    
  412610:	outs   dx,BYTE PTR ds:[esi]
  412611:	lods   al,BYTE PTR ds:[esi]
  412612:	jnp    0x4125a4
  412614:	fist   WORD PTR ss:[esi]
  412617:	lea    ebx,[edi]
  412619:	xor    dl,BYTE PTR [esp+esi*1+0x22fcafd7]
  412620:	mov    eax,0x309449f5
  412625:	fnsave [ebx+0x3dbe5849]
  41262b:	mov    edi,0xb4ee9ab4
  412630:	(bad)  
  412631:	sub    ecx,DWORD PTR [edx]
  412633:	js     0x412622
  412635:	aas    
  412636:	add    edx,DWORD PTR [edx]
  412638:	ret    0x748f
  41263b:	xor    eax,0xfbaf4eda
  412640:	inc    ebp
  412641:	mov    bh,0xe7
  412643:	fbstp  TBYTE PTR [ecx+0x7d]
  412646:	ds inc esi
  412648:	aaa    
  412649:	jmp    0x5c30:0xc97ec09
  412650:	out    dx,al
  412651:	xchg   esi,eax
  412652:	add    al,0x5d
  412654:	add    esp,0x4c
  412657:	dec    eax
  412658:	jmp    0x5d65db5b
  41265d:	mov    eax,ds:0xe825471d
  412662:	loope  0x412699
  412664:	dec    eax
  412665:	aad    0xf8
  412667:	out    dx,al
  412668:	into   
  412669:	push   ds
  41266a:	test   al,0x6
  41266c:	or     dh,BYTE PTR ds:0x34349d99
  412672:	mov    ebp,0xb50c4100
  412677:	fs mov ah,0xd1
  41267a:	mov    ch,0x32
  41267c:	sub    bh,BYTE PTR [edi-0xea62f9b]
  412682:	and    BYTE PTR [eax-0x6f],dh
  412685:	cs icebp 
  412687:	xor    BYTE PTR [ebx],bh
  412689:	loopne 0x412666
  41268b:	mov    BYTE PTR [edx-0x32a047eb],0x29
  412692:	retf   0xfb8d
  412695:	aaa    
  412696:	jp     0x41263c
  412698:	outs   dx,DWORD PTR ds:[esi]
  412699:	call   0xe99740f7
  41269e:	mov    ch,0xc5
  4126a0:	jnp    0x41270b
  4126a2:	bnd js 0x4126bc
  4126a5:	in     al,0xd3
  4126a7:	inc    edi
  4126a8:	adc    ecx,DWORD PTR [edi+esi*1+0x79]
  4126ac:	bound  ebp,QWORD PTR [ebx]
  4126ae:	sbb    BYTE PTR [edi+0x71],bl
  4126b1:	sbb    esi,ebx
  4126b3:	push   edi
  4126b4:	bound  esp,QWORD PTR [edx+0x5b453a7c]
  4126ba:	add    al,0xcd
  4126bc:	mov    ecx,0x539764f5
  4126c1:	jle    0x412667
  4126c3:	and    esi,DWORD PTR ds:0xb9f60bd2
  4126c9:	sub    bl,BYTE PTR [ebp+ebx*4+0x45edb16a]
  4126d0:	adc    dh,BYTE PTR [ebp-0xeba5aa6]
  4126d6:	add    bl,BYTE PTR [ebp+0x5d]
  4126d9:	push   eax
  4126da:	cmp    bl,BYTE PTR [ecx+0x25f26131]
  4126e0:	cmp    BYTE PTR [ecx+0x29],ch
  4126e3:	stos   DWORD PTR es:[edi],eax
  4126e4:	out    0x68,eax
  4126e6:	jnp    0x412668
  4126e8:	mov    ds:0x8444a296,eax
  4126ed:	sbb    ecx,DWORD PTR [ecx-0xe8bae64]
  4126f3:	aaa    
  4126f4:	inc    ecx
  4126f5:	push   0x4a3b801
  4126fa:	in     al,0xec
  4126fc:	add    al,0xa4
  4126fe:	outs   dx,BYTE PTR ds:[esi]
  4126ff:	scas   al,BYTE PTR es:[edi]
  412700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412701:	pop    esi
  412702:	fdiv   DWORD PTR [esp+eax*8-0x26692a36]
  412709:	retf   0xabca
  41270c:	sbb    DWORD PTR [ebx],ecx
  41270e:	inc    eax
  41270f:	pop    ecx
  412710:	sub    eax,0xa6a94c5e
  412715:	push   edx
  412716:	jl     0x4126c7
  412718:	or     al,0x2d
  41271a:	pusha  
  41271b:	cmp    BYTE PTR [edi-0x46],bh
  41271e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412720:	cmp    ecx,esp
  412722:	sahf   
  412723:	dec    edx
  412724:	div    DWORD PTR [ecx]
  412726:	scas   al,BYTE PTR es:[edi]
  412727:	xchg   ecx,eax
  412728:	fnsave [ebp+ecx*8+0x2d48623f]
  41272f:	mov    eax,ds:0x9781a204
  412734:	xor    bl,cl
  412736:	dec    ecx
  412737:	push   esi
  412738:	(bad)  
  412739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273a:	mov    ds:0xe86b53b,eax
  41273f:	call   0x256:0x38fb35b5
  412746:	cmp    al,0x30
  412748:	retf   
  412749:	out    dx,eax
  41274a:	cmp    DWORD PTR [eax+0x7b5fc51a],esp
  412750:	outs   dx,BYTE PTR ds:[esi]
  412751:	mov    ds:0x275131e3,eax
  412756:	sub    ah,ah
  412758:	sar    DWORD PTR [edi],0xe2
  41275b:	bound  esi,QWORD PTR [edx]
  41275d:	adc    eax,DWORD PTR [ecx+eax*2]
  412760:	inc    esp
  412761:	ins    BYTE PTR es:[edi],dx
  412762:	cmp    eax,0x7b7c98b6
  412767:	xchg   ecx,esp
  412769:	and    BYTE PTR [eax-0x3c5ec3e6],dl
  41276f:	inc    ebx
  412770:	jbe    0x412749
  412772:	or     ebp,DWORD PTR [edx]
  412774:	popf   
  412775:	test   al,0xa3
  412777:	xchg   BYTE PTR [di-0x325c],al
  41277c:	addr16 dec esi
  41277e:	sub    al,0x5e
  412780:	dec    esp
  412781:	pop    edi
  412782:	push   0xffffffee
  412784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412785:	mov    al,ds:0xdc4040c7
  41278a:	loopne 0x41279e
  41278c:	mov    DWORD PTR [eax+eiz*4+0x46],edx
  412790:	(bad)  
  412791:	js     0x41274a
  412793:	sahf   
  412794:	aaa    
  412795:	xchg   edi,eax
  412796:	repz inc esp
  412798:	and    eax,0x1530cea7
  41279d:	push   eax
  41279e:	push   0xffffffd8
  4127a0:	push   cs
  4127a1:	imul   BYTE PTR ds:0xf1f58b04
  4127a7:	xor    edi,ebp
  4127a9:	test   bh,0x8d
  4127ac:	jle    0x412776
  4127ae:	dec    ebx
  4127af:	cli    
  4127b0:	mov    eax,ds:0x1c355fa0
  4127b5:	jle    0x41275c
  4127b7:	mov    bh,0x5e
  4127b9:	imul   ebp,DWORD PTR [edx-0xf],0x4c
  4127bd:	sub    esi,edx
  4127bf:	sbb    eax,0xbfdaea05
  4127c4:	sbb    ecx,edi
  4127c6:	arpl   WORD PTR [edi],sp
  4127c8:	arpl   WORD PTR [esi+ecx*8-0x3b087b37],di
  4127cf:	jo     0x4127a2
  4127d1:	(bad)  
  4127d2:	and    ah,dh
  4127d4:	xor    ah,BYTE PTR [esi]
  4127d6:	mov    cl,0x80
  4127d8:	mov    ebp,0xe74a0466
  4127dd:	xor    cl,dh
  4127df:	icebp  
  4127e0:	mov    al,0x3f
  4127e2:	std    
  4127e3:	adc    bl,BYTE PTR [esp+esi*1-0x46]
  4127e7:	retf   
  4127e8:	or     al,0x42
  4127ea:	out    0x45,al
  4127ec:	rcr    esp,1
  4127ee:	dec    eax
  4127ef:	lock outs dx,BYTE PTR ds:[esi]
  4127f1:	jnp    0x412862
  4127f3:	sub    ebp,eax
  4127f5:	mov    ah,0xff
  4127f7:	pop    ds
  4127f8:	in     eax,0x8c
  4127fa:	xchg   ecx,eax
  4127fb:	adc    eax,0x59cec67
  412800:	inc    esi
  412801:	xchg   bl,ah
  412803:	ror    ebx,0xd7
  412806:	(bad)  
  412808:	bound  ecx,QWORD PTR [ecx-0x7f]
  41280b:	mov    edx,0x7a2feaee
  412810:	mov    ebx,0xa7cc3a50
  412815:	cmp    eax,0xdea3b4d4
  41281a:	jns    0x41289b
  41281c:	sub    eax,0x297adbfe
  412821:	imul   edi,DWORD PTR [eax-0x6a],0xfffffff5
  412825:	and    ebp,DWORD PTR [ebp+0x37]
  412828:	cdq    
  412829:	(bad)  
  41282a:	out    dx,eax
  41282b:	push   esi
  41282c:	pusha  
  41282d:	or     ch,BYTE PTR [edi-0x467a0c21]
  412833:	call   0x2dca42f
  412838:	xchg   ebx,eax
  412839:	cs out dx,eax
  41283b:	xor    eax,0x907969cd
  412840:	cmc    
  412841:	jno    0x4128a2
  412843:	leave  
  412844:	shr    DWORD PTR [ebx],cl
  412846:	add    edx,edi
  412848:	jl     0x412822
  41284a:	push   cs
  41284b:	sub    eax,0x77490f39
  412850:	mov    eax,esp
  412852:	mov    eax,0x13359622
  412857:	xchg   ecx,eax
  412858:	push   ebx
  412859:	jmp    0x5262:0x222c195f
  412860:	cmp    eax,0xc55865e2
  412865:	xchg   ebx,eax
  412866:	sub    al,0x74
  412868:	xor    al,0xed
  41286a:	pop    ds
  41286b:	mov    edi,0x454c6ba4
  412870:	ds clc 
  412872:	sbb    DWORD PTR cs:[edx-0x4ed921b2],edi
  412879:	jecxz  0x4128d8
  41287b:	push   es
  41287c:	stos   DWORD PTR es:[edi],eax
  41287d:	xor    DWORD PTR [ecx+edx*8],edi
  412880:	fs into 
  412882:	(bad)  
  412883:	div    BYTE PTR [esi]
  412885:	push   esp
  412886:	dec    eax
  412887:	cmp    esp,esi
  412889:	cmp    DWORD PTR [ecx+0x8747ea4],edi
  41288f:	repnz pop edx
  412891:	or     DWORD PTR [ebp+0x3],ebp
  412894:	pop    edi
  412895:	push   eax
  412896:	fs int3 
  412898:	fwait
  412899:	dec    esi
  41289a:	jmp    0x82291f9
  41289f:	(bad)  
  4128a1:	mov    dl,0xeb
  4128a3:	jg     0x412875
  4128a5:	cmp    DWORD PTR [esp+eax*8+0x7f],esp
  4128a9:	vpavgw xmm0,xmm0,XMMWORD PTR [ebx-0x51]
  4128ae:	js     0x412897
  4128b0:	lea    ecx,ds:[ebx+ebp*2+0x42]
  4128b5:	arpl   WORD PTR ds:[edi],dx
  4128b8:	jl     0x4128d3
  4128ba:	popf   
  4128bb:	and    al,0xe5
  4128bd:	sbb    eax,0x9c640828
  4128c2:	push   eax
  4128c3:	ja     0x412861
  4128c5:	hlt    
  4128c6:	cmp    dl,BYTE PTR [esi-0x47]
  4128c9:	cmp    DWORD PTR [ebx-0x3e00d6b1],eax
  4128cf:	push   edx
  4128d0:	xor    DWORD PTR [eax],edi
  4128d2:	out    0xc,al
  4128d4:	rcl    DWORD PTR [esi+0x76],0x59
  4128d8:	or     ebx,DWORD PTR [edx-0x80]
  4128db:	xor    cl,BYTE PTR [esi+eax*8-0x4f8c20b2]
  4128e2:	scas   al,BYTE PTR es:[edi]
  4128e3:	mov    DWORD PTR [esi+0x24bc7ea7],esi
  4128e9:	es sti 
  4128eb:	mov    dh,BYTE PTR [eax+0x237e8ad2]
  4128f1:	mov    bh,0x29
  4128f3:	mov    dl,0x41
  4128f5:	mov    cl,0x7f
  4128f7:	cmp    eax,DWORD PTR [ebx-0x68]
  4128fa:	(bad)  
  4128fc:	push   ebx
  4128fd:	jno    0x41297a
  4128ff:	test   al,0x4b
  412901:	je     0x41288f
  412903:	or     al,BYTE PTR [edx-0x37f03f5e]
  412909:	xchg   BYTE PTR ds:0xa3df4264,bh
  41290f:	and    eax,0xde17037e
  412914:	ret    
  412915:	push   edx
  412916:	es repnz xchg esp,eax
  412919:	jecxz  0x412900
  41291b:	inc    ebp
  41291c:	or     DWORD PTR [ecx],ecx
  41291e:	xchg   ebx,eax
  41291f:	xchg   ebp,eax
  412920:	cmp    DWORD PTR [ebx],esi
  412922:	(bad)  
  412924:	enter  0x3e51,0xc5
  412928:	mov    WORD PTR [edi+0x34],cs
  41292b:	(bad)  
  41292c:	cmp    BYTE PTR [eax+eax*2-0x6f],ch
  412930:	jl     0x41290c
  412932:	stos   BYTE PTR es:[edi],al
  412933:	and    ebx,ebx
  412935:	retf   
  412936:	cmp    al,0xb2
  412938:	hlt    
  412939:	in     eax,dx
  41293a:	(bad)  
  41293b:	xlat   BYTE PTR ds:[ebx]
  41293c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41293d:	push   eax
  41293e:	or     edx,DWORD PTR [ecx+0x78]
  412941:	mov    ds:0x4d0d0dc8,al
  412946:	adc    DWORD PTR [ebp+eax*8+0x7325a57d],0xc9a2669a
  412951:	test   al,0xf3
  412953:	jg     0x4129d3
  412955:	pop    esp
  412956:	in     eax,0xcc
  412958:	leave  
  412959:	ficom  WORD PTR [ecx-0x2f]
  41295c:	jmp    DWORD PTR [esi]
  41295e:	inc    ebx
  41295f:	adc    DWORD PTR [edx+edi*2+0x6e00f9aa],0xe3e8c462
  41296a:	ss mov esi,0x751f4f2b
  412970:	jecxz  0x4129c3
  412972:	pusha  
  412973:	sbb    esp,edi
  412975:	mov    WORD PTR [ecx],ds
  412977:	gs push edx
  412979:	out    dx,al
  41297a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41297b:	fld    TBYTE PTR gs:[edi+0x37]
  41297f:	stos   BYTE PTR es:[edi],al
  412980:	shl    DWORD PTR [edx+edi*8],cl
  412983:	push   edi
  412984:	in     al,dx
  412985:	jg     0x41293b
  412987:	xor    edi,DWORD PTR [ecx+edi*8-0x37]
  41298b:	push   esi
  41298c:	sub    ebp,DWORD PTR ds:0x4e901465
  412992:	fild   DWORD PTR [edi+0x1986433d]
  412998:	scas   al,BYTE PTR es:[edi]
  412999:	cli    
  41299a:	xor    ah,0x1b
  41299d:	call   DWORD PTR [edi-0x5e]
  4129a0:	shl    BYTE PTR [ebx+0x1ad99852],cl
  4129a6:	jns    0x412a0f
  4129a8:	loopne 0x4129b6
  4129aa:	rcr    DWORD PTR [esi],cl
  4129ac:	jg     0x412976
  4129ae:	push   0xffffffde
  4129b0:	dec    edi
  4129b1:	aaa    
  4129b2:	aas    
  4129b3:	jbe    0x4129d1
  4129b5:	or     ecx,ebp
  4129b7:	cmp    eax,0xe36195a1
  4129bc:	mov    ds:0x59a976af,eax
  4129c1:	call   0x5667:0x97a0ccb
  4129c8:	inc    eax
  4129c9:	loop   0x4129ea
  4129cb:	pop    edx
  4129cc:	int3   
  4129cd:	sbb    eax,0xe21f98bc
  4129d2:	sbb    cl,dl
  4129d4:	inc    edx
  4129d5:	shr    DWORD PTR ds:0xdd41d85d,1
  4129db:	mov    ebp,0xb1bf5368
  4129e0:	ins    DWORD PTR es:[edi],dx
  4129e1:	adc    DWORD PTR [edi+0x41],ecx
  4129e4:	test   al,0x31
  4129e6:	add    eax,0x849afb72
  4129eb:	repnz pushf 
  4129ed:	stos   BYTE PTR es:[edi],al
  4129ee:	mov    edx,DWORD PTR [esi+0x3f]
  4129f1:	ins    DWORD PTR es:[edi],dx
  4129f2:	mov    ebp,0x74b103ff
  4129f7:	fnstenv [edi+0x76]
  4129fa:	pop    esi
  4129fb:	mov    dh,0xed
  4129fd:	xchg   bp,ax
  4129ff:	fwait
  412a00:	or     dh,bh
  412a02:	inc    edi
  412a03:	ret    
  412a04:	inc    edi
  412a05:	xchg   ebp,eax
  412a06:	pushf  
  412a07:	pop    edi
  412a08:	jns    0x412a1d
  412a0a:	enter  0x7d7a,0xcd
  412a0e:	sbb    al,0xbc
  412a10:	lea    ebp,[eax-0x31863a43]
  412a16:	repz adc eax,0xfc4990a2
  412a1c:	imul   edi,DWORD PTR [ebx],0xfffffff2
  412a1f:	xchg   esi,eax
  412a20:	fld    DWORD PTR [edx-0x58]
  412a23:	sbb    eax,0x15122a03
  412a28:	ficomp DWORD PTR [esi]
  412a2a:	dec    ecx
  412a2b:	outs   dx,DWORD PTR ds:[esi]
  412a2c:	data16 daa 
  412a2e:	ins    BYTE PTR es:[edi],dx
  412a2f:	sti    
  412a30:	push   ecx
  412a31:	mov    bl,0x76
  412a33:	dec    esi
  412a34:	inc    eax
  412a35:	aam    0x4
  412a37:	fstp   DWORD PTR [ebx+eax*2+0x10]
  412a3b:	mov    eax,0x2d61db81
  412a40:	std    
  412a41:	lea    ebp,[esi+eiz*2-0x7e7b3d88]
  412a48:	mov    ecx,0x183e4e53
  412a4d:	leave  
  412a4e:	adc    BYTE PTR [ebx],al
  412a50:	jb     0x4129e8
  412a52:	fmul   DWORD PTR [ebp+0x474c2bde]
  412a58:	ja     0x412aa0
  412a5a:	ret    
  412a5b:	mov    ds:0x6238c34c,eax
  412a60:	and    eax,0x876b79e5
  412a65:	repz push edi
  412a67:	jne    0x412a05
  412a69:	sbb    eax,0x7b763cae
  412a6e:	bound  edi,QWORD PTR [ecx-0x3c]
  412a71:	fiadd  DWORD PTR [edx]
  412a73:	stc    
  412a74:	pop    esi
  412a75:	sub    bl,bl
  412a77:	sbb    eax,0x52cf5920
  412a7c:	jno    0x412a92
  412a7e:	jmp    0x924:0xbcb6307c
  412a85:	and    al,bh
  412a87:	rol    BYTE PTR [ebx+0x6f51b346],cl
  412a8d:	rol    BYTE PTR [ebx+0x36],0x5c
  412a91:	or     al,0xa
  412a93:	inc    eax
  412a94:	push   edi
  412a95:	push   0x6d
  412a97:	xchg   ebp,eax
  412a98:	add    esi,DWORD PTR [esi]
  412a9a:	fiadd  WORD PTR [ebx]
  412a9c:	xor    al,0xe6
  412a9e:	push   eax
  412a9f:	pushf  
  412aa0:	pop    esp
  412aa1:	(bad)  
  412aa2:	mov    esp,DWORD PTR [eax+0x64]
  412aa5:	adc    ecx,esi
  412aa7:	and    eax,esp
  412aa9:	jno    0x412b01
  412aab:	and    DWORD PTR [ecx],ebx
  412aad:	out    0x8f,al
  412aaf:	sbb    al,dh
  412ab1:	loopne 0x412a5a
  412ab3:	adc    ch,0x1c
  412ab6:	fisubr DWORD PTR [ebx+eiz*4-0x39362783]
  412abd:	ins    DWORD PTR es:[edi],dx
  412abe:	dec    esp
  412abf:	(bad)  
  412ac2:	lock cwde 
  412ac4:	mov    cl,0xb6
  412ac6:	sbb    DWORD PTR [edx],edx
  412ac8:	xchg   edx,eax
  412ac9:	lahf   
  412aca:	xchg   ebx,eax
  412acb:	das    
  412acc:	cld    
  412acd:	hlt    
  412ace:	push   ebx
  412acf:	pop    ebx
  412ad0:	mov    WORD PTR [ebp+0x26],es
  412ad3:	mov    al,ds:0xd136bc6b
  412ad8:	inc    di
  412ada:	dec    edi
  412adb:	jno    0x412adb
  412add:	jo     0x412ad0
  412adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ae0:	sar    DWORD PTR [edx+0x4e],cl
  412ae3:	mov    ebp,0x781f214d
  412ae8:	ins    DWORD PTR es:[edi],dx
  412ae9:	and    DWORD PTR [edi+ecx*2+0x55],0xffffffec
  412aee:	imul   esi,ebp,0x53
  412af1:	out    dx,al
  412af2:	clc    
  412af3:	arpl   WORD PTR [edx+0xc],ax
  412af6:	std    
  412af7:	sub    cl,0x35
  412afa:	cmp    eax,0x644907f0
  412aff:	(bad)
  412b02:	xchg   edi,eax
  412b03:	in     al,dx
  412b04:	inc    edx
  412b05:	push   cs
  412b06:	cmp    al,0xb0
  412b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b09:	jle    0x412ad2
  412b0b:	jnp    0x412b89
  412b0d:	fisttp QWORD PTR [edx+0x74867f12]
  412b13:	neg    ah
  412b15:	mov    dl,0x94
  412b17:	(bad)  
  412b18:	fwait
  412b19:	sar    DWORD PTR [edi+0x2],0x4c
  412b1d:	inc    eax
  412b1e:	push   0x5b4b1bf0
  412b23:	add    al,BYTE PTR [ecx-0x58dab354]
  412b29:	mov    eax,ds:0x63797e1b
  412b2e:	ss pop esi
  412b30:	jb     0x412aff
  412b32:	fisubr DWORD PTR [ebp-0x6f5ab178]
  412b38:	lahf   
  412b39:	sub    ebp,DWORD PTR [edx-0x6d7aceb4]
  412b3f:	jle    0x412b3c
  412b41:	addr16 xor ah,bh
  412b44:	and    eax,0xd4db73fc
  412b49:	pusha  
  412b4a:	les    edi,FWORD PTR [eax+0x9]
  412b4d:	and    cl,BYTE PTR [ecx-0x6cfa6b3]
  412b53:	daa    
  412b54:	ret    
  412b55:	sub    ecx,DWORD PTR [edi-0x2]
  412b58:	xchg   esi,eax
  412b59:	jo     0x412b4a
  412b5b:	mov    BYTE PTR [eax+0x711be08c],cl
  412b61:	push   ss
  412b62:	loopne 0x412b72
  412b64:	popf   
  412b65:	pop    ss
  412b66:	fsub   st,st(6)
  412b68:	dec    ebp
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	adc    ecx,DWORD PTR [eax+0x16]
  412b6e:	jb     0x412b6c
  412b70:	inc    eax
  412b71:	loop   0x412ba9
  412b73:	outs   dx,DWORD PTR ds:[esi]
  412b74:	imul   edi,DWORD PTR ds:0x403e41d,0x79df42fc
  412b7e:	lods   al,BYTE PTR ds:[esi]
  412b7f:	ins    BYTE PTR es:[edi],dx
  412b80:	stos   DWORD PTR es:[edi],eax
  412b81:	std    
  412b82:	mov    BYTE PTR [edi-0x1eeaa3b5],ch
  412b88:	push   eax
  412b89:	or     eax,0x80966be7
  412b8e:	pop    edi
  412b8f:	xor    ebx,ebp
  412b91:	(bad)  
  412b92:	and    BYTE PTR [ebp+0x3a],dh
  412b95:	clc    
  412b96:	lock (bad) 
  412b98:	jp     0x412b5f
  412b9a:	test   eax,0x7032d78c
  412b9f:	fwait
  412ba0:	int3   
  412ba1:	push   edi
  412ba2:	into   
  412ba3:	or     eax,DWORD PTR [edx+0x519bf178]
  412ba9:	push   es
  412baa:	dec    esi
  412bab:	stos   DWORD PTR es:[edi],eax
  412bac:	fidiv  DWORD PTR ds:0x1a16ed3c
  412bb2:	dec    ebx
  412bb3:	inc    ebp
  412bb4:	dec    edi
  412bb5:	(bad)  
  412bb6:	xor    esi,DWORD PTR [edx-0x56]
  412bb9:	ss mov ecx,0x987e7955
  412bbf:	cdq    
  412bc0:	xor    al,0xb
  412bc2:	test   al,0xf2
  412bc4:	dec    ebx
  412bc5:	mov    al,0x8d
  412bc7:	add    BYTE PTR [bx-0x7466],bl
  412bcc:	inc    esi
  412bcd:	or     dl,BYTE PTR [ecx+edi*8-0x71ac4613]
  412bd4:	cli    
  412bd5:	pop    DWORD PTR [ebp+0x6c]
  412bd8:	sub    BYTE PTR [ebp-0x2b50dea4],dh
  412bde:	int3   
  412bdf:	(bad)  
  412be0:	xor    eax,0x567d48f1
  412be5:	inc    esi
  412be6:	(bad)  
  412be7:	iret   
  412be8:	adc    eax,0x38a5d327
  412bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bee:	ds jp  0x412ba1
  412bf1:	mov    edi,DWORD PTR [edi+0x2d]
  412bf4:	inc    esi
  412bf5:	adc    al,BYTE PTR [edx-0x49fb25ca]
  412bfb:	adc    al,0x99
  412bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bfe:	stos   DWORD PTR es:[edi],eax
  412bff:	dec    edx
  412c00:	pop    eax
  412c01:	pop    esi
  412c02:	das    
  412c03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c04:	das    
  412c05:	ds pop ebp
  412c07:	test   eax,0xc1febaa8
  412c0c:	ret    
  412c0d:	mov    ch,0x38
  412c0f:	inc    esp
  412c10:	loopne 0x412bd6
  412c12:	dec    ebp
  412c13:	cld    
  412c14:	pop    edx
  412c15:	xor    DWORD PTR [edx+0x6a196704],edi
  412c1b:	rcl    BYTE PTR [ebx],0x23
  412c1e:	add    DWORD PTR [ecx],0x47362511
  412c24:	adc    DWORD PTR [ecx],edx
  412c26:	pushf  
  412c27:	gs hlt 
  412c29:	jbe    0x412c5a
  412c2b:	mov    bl,0xd5
  412c2d:	bnd call 0x4442ae15
  412c33:	mov    al,ds:0x71cd03a3
  412c38:	les    edx,FWORD PTR [edi]
  412c3a:	push   ss
  412c3b:	es xchg ah,al
  412c3e:	dec    edi
  412c3f:	out    dx,al
  412c40:	or     eax,0x570ff7f3
  412c45:	sbb    al,0x35
  412c47:	int    0x50
  412c49:	mov    ch,0x1a
  412c4b:	sbb    eax,0x4312e65
  412c50:	push   ebx
  412c51:	ror    BYTE PTR [esi],cl
  412c53:	or     edi,0x54
  412c56:	stos   BYTE PTR es:[edi],al
  412c57:	pop    es
  412c58:	adc    eax,0xea70374a
  412c5d:	das    
  412c5e:	out    dx,eax
  412c5f:	mov    ecx,0x2d997d5b
  412c64:	mov    ecx,0x1028c7a1
  412c69:	mov    ch,BYTE PTR [ecx+0x36787e2d]
  412c6f:	mov    al,ds:0x476054f5
  412c74:	adc    ecx,esp
  412c76:	sbb    ebp,ebp
  412c78:	inc    ecx
  412c79:	cmp    cl,BYTE PTR ds:0xb54c7883
  412c7f:	jns    0x412c1c
  412c81:	mov    ah,0x8b
  412c83:	sbb    ebx,0x4e3adb7d
  412c89:	aam    0x98
  412c8b:	test   DWORD PTR [eiz*2+0xb55c9e3],0x51bbc011
  412c96:	xor    al,0xc2
  412c98:	and    bh,BYTE PTR ds:0x42212177
  412c9e:	sub    dh,dl
  412ca0:	je     0x412c52
  412ca2:	aad    0xbc
  412ca4:	pop    ss
  412ca5:	std    
  412ca6:	or     eax,0xd244b13f
  412cab:	sbb    BYTE PTR [ecx+0x2ac0085e],bh
  412cb1:	in     al,dx
  412cb2:	and    al,0xfa
  412cb4:	in     eax,dx
  412cb5:	mov    ebp,0xb0e4a681
  412cba:	sahf   
  412cbb:	fnstsw WORD PTR [esi]
  412cbd:	fimul  DWORD PTR [edx]
  412cbf:	add    al,0xbb
  412cc1:	shl    DWORD PTR [ebx-0x64834797],0x4e
  412cc8:	ret    0x54a0
  412ccb:	fadd   QWORD PTR [eax+0x22f173e9]
  412cd1:	xchg   ebx,esp
  412cd3:	fwait
  412cd4:	(bad)  
  412cd5:	leave  
  412cd6:	cmp    al,0x1b
  412cd8:	data16 mov ?,WORD PTR [edi+0x25]
  412cdc:	mov    bl,0x93
  412cde:	jnp    0x412c82
  412ce0:	mov    ds:0xcd8a10ce,al
  412ce5:	iret   
  412ce6:	jnp    0x412cf7
  412ce8:	xchg   edx,eax
  412ce9:	add    eax,0x83b78030
  412cee:	pop    esi
  412cef:	aam    0xfe
  412cf1:	int    0x13
  412cf3:	je     0x412d3c
  412cf5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf7:	or     DWORD PTR [edx+0x10674cce],0xffffff99
  412cfe:	(bad)  
  412cff:	cli    
  412d00:	mov    edx,0xbba2a0c4
  412d05:	inc    ecx
  412d06:	jne    0x412cda
  412d08:	and    eax,0x922d3486
  412d0d:	mov    eax,0x607aaaf0
  412d12:	jmp    0x89d4d919
  412d17:	leave  
  412d18:	ss push ebx
  412d1a:	imul   ebp,DWORD PTR [ecx-0x834945e],0xffffffd4
  412d21:	loopne 0x412d91
  412d23:	mov    ch,0xd4
  412d25:	sbb    BYTE PTR [edx+0x17],al
  412d28:	mov    ds:0xb8d236e0,eax
  412d2d:	mov    ebx,0xc18f9019
  412d32:	xchg   ecx,eax
  412d33:	jge    0x412d5d
  412d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d36:	fidivr WORD PTR [esi-0x52917fdc]
  412d3c:	dec    ebx
  412d3d:	scas   eax,DWORD PTR es:[edi]
  412d3e:	lds    ebx,FWORD PTR ss:[ebx+0x7be25873]
  412d45:	(bad)  
  412d47:	xchg   ecx,eax
  412d48:	imul   ebx,esp,0x25
  412d4b:	out    dx,al
  412d4c:	xchg   DWORD PTR [edx+0x21],eax
  412d4f:	fs loopne 0x412cec
  412d52:	jns    0x412d65
  412d54:	push   ebp
  412d55:	fistp  DWORD PTR [edx+0x39]
  412d58:	pop    ebx
  412d59:	pusha  
  412d5a:	aad    0xd9
  412d5c:	retf   0xf6f6
  412d5f:	gs mov ecx,0xe0b66fc
  412d65:	paddsw mm1,QWORD PTR [esi-0x25]
  412d69:	jle    0x412d92
  412d6b:	outs   dx,BYTE PTR ds:[esi]
  412d6c:	jbe    0x412dd2
  412d6e:	xor    DWORD PTR [esi],esi
  412d70:	push   eax
  412d71:	xor    esi,DWORD PTR [eax]
  412d73:	int    0x95
  412d75:	hlt    
  412d76:	or     eax,0xe9057300
  412d7b:	mov    WORD PTR [ecx],cs
  412d7d:	pop    es
  412d7e:	rol    BYTE PTR [eax+0x6f5c276],1
  412d84:	inc    edx
  412d85:	mov    esi,0x648ee747
  412d8a:	mov    eax,gs:0xfa0b4af6
  412d90:	mov    edx,?
  412d92:	or     DWORD PTR [eax+0x7c59edaf],edx
  412d98:	sbb    ebp,DWORD PTR [eax]
  412d9a:	push   esi
  412d9b:	push   esi
  412d9c:	pusha  
  412d9d:	fst    DWORD PTR [ebp+0x47]
  412da0:	out    dx,al
  412da1:	sub    edx,DWORD PTR [edi+edi*2]
  412da4:	sub    eax,0xe30caad1
  412da9:	adc    DWORD PTR [esi+eiz*4-0x1a],edi
  412dad:	mov    ebx,0xca415108
  412db2:	or     al,dh
  412db4:	add    al,0x31
  412db6:	loop   0x412df3
  412db8:	or     eax,0x7c18bd5e
  412dbd:	fild   WORD PTR [ecx+ebx*2]
  412dc0:	push   ebp
  412dc1:	pop    ecx
  412dc2:	push   ds
  412dc3:	dec    edx
  412dc4:	fwait
  412dc5:	inc    ecx
  412dc6:	ins    BYTE PTR es:[edi],dx
  412dc7:	mov    ch,0xce
  412dc9:	sub    DWORD PTR [edi],esp
  412dcb:	cld    
  412dcc:	std    
  412dcd:	pop    ss
  412dce:	mov    ebp,0xdcef3a0e
  412dd3:	cmp    BYTE PTR [ebp-0x65],ah
  412dd6:	push   eax
  412dd7:	test   al,0xcb
  412dd9:	mov    dl,0x53
  412ddb:	push   ebx
  412ddc:	(bad)  
  412ddd:	jmp    0x412d94
  412ddf:	pop    edx
  412de0:	pusha  
  412de1:	push   esi
  412de2:	xchg   esp,eax
  412de3:	shr    DWORD PTR [edi-0x421e7016],0x6e
  412dea:	cmp    eax,0x65386147
  412def:	cmp    esp,ecx
  412df1:	push   0xe
  412df3:	inc    ecx
  412df4:	cmp    eax,0x374aaf3c
  412df9:	js     0x412dae
  412dfb:	sub    al,0x1d
  412dfd:	inc    edx
  412dfe:	(bad)  
  412dff:	mov    edx,0xd096902c
  412e04:	sbb    DWORD PTR [ebx-0x18c7ce5],ecx
  412e0a:	add    DWORD PTR [ebp-0x5b],esi
  412e0d:	std    
  412e0e:	mov    BYTE PTR [edx+0x8],cl
  412e11:	daa    
  412e12:	das    
  412e13:	cwde   
  412e14:	lds    ebp,FWORD PTR [ecx+0xe]
  412e17:	fiadd  DWORD PTR [esi-0x1c]
  412e1a:	xor    DWORD PTR [edi-0x45bee7ac],0x2df75ba9
  412e24:	(bad)  
  412e25:	sbb    DWORD PTR [eax-0x1a26e273],eax
  412e2b:	pop    esi
  412e2c:	cdq    
  412e2d:	cmp    DWORD PTR [edx+0x36],0xc47e8ae2
  412e34:	jbe    0x412e31
  412e36:	test   eax,0x9f933aa2
  412e3b:	repz dec edx
  412e3d:	pop    ecx
  412e3e:	data16 sti 
  412e40:	mov    eax,0x7a7e9f78
  412e45:	aas    
  412e46:	mov    bh,0xc6
  412e48:	(bad)  
  412e49:	cmp    eax,0x5caba4be
  412e4e:	adc    al,0xa3
  412e50:	repz pop es
  412e52:	mov    dh,0x55
  412e54:	daa    
  412e55:	les    ebp,FWORD PTR ds:0x793cc870
  412e5b:	xor    DWORD PTR [edi],ebp
  412e5d:	int3   
  412e5e:	mov    bh,0xce
  412e60:	inc    esp
  412e61:	xchg   edx,eax
  412e62:	inc    edx
  412e63:	xor    ah,ch
  412e65:	fidivr DWORD PTR [esi-0x15f06988]
  412e6b:	out    dx,eax
  412e6c:	sub    bh,BYTE PTR [edi+0x13]
  412e6f:	cmp    ah,dh
  412e71:	ret    
  412e72:	leave  
  412e73:	enter  0x5807,0xde
  412e77:	cld    
  412e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e79:	int3   
  412e7a:	cli    
  412e7b:	mov    eax,ds:0x81e8728b
  412e80:	pop    edx
  412e81:	dec    esp
  412e82:	je     0x412e56
  412e84:	jg     0x412e3c
  412e86:	int3   
  412e87:	lock inc edi
  412e89:	mov    dh,0xc5
  412e8b:	div    BYTE PTR [ecx+0x21944728]
  412e91:	pushf  
  412e92:	stc    
  412e93:	into   
  412e94:	mov    edi,0x8c14a9d4
  412e99:	mov    ch,0x0
  412e9b:	enter  0x65e3,0x41
  412e9f:	jmp    0x24ea2a98
  412ea4:	cmp    BYTE PTR [ecx+0x22],ch
  412ea7:	sti    
  412ea8:	cmp    al,0x48
  412eaa:	mov    ebp,0xd40ac000
  412eaf:	sbb    al,0xb9
  412eb1:	add    eax,0x70ed6232
  412eb6:	mov    ah,0xe3
  412eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eb9:	mov    bl,0xe8
  412ebb:	sub    ebp,DWORD PTR [ebx+0x44]
  412ebe:	mov    ebx,0x533bb664
  412ec3:	push   0x50
  412ec5:	gs xchg ebx,eax
  412ec7:	pushf  
  412ec8:	mov    cs,WORD PTR [eax]
  412eca:	in     al,0xe8
  412ecc:	pop    ss
  412ecd:	fsub   DWORD PTR [edi-0x19]
  412ed0:	pop    ebp
  412ed1:	mov    esp,0xb24d61c5
  412ed6:	push   ebx
  412ed7:	fbstp  TBYTE PTR [edx+0x37adcf1c]
  412edd:	and    al,0xaa
  412edf:	xchg   ebx,eax
  412ee0:	lock lods al,BYTE PTR ds:[esi]
  412ee2:	mov    ds:0x8f344c6d,ax
  412ee8:	mov    eax,0xa7b6a4a7
  412eed:	pop    ebp
  412eee:	cmp    eax,0x5c85b2ca
  412ef3:	imul   esp,DWORD PTR [edx],0xffffffa3
  412ef6:	push   es
  412ef7:	mov    dh,0x45
  412ef9:	and    al,0x73
  412efb:	ret    0xc5ab
  412efe:	out    0x76,al
  412f00:	ins    DWORD PTR es:[edi],dx
  412f01:	pop    ebx
  412f02:	push   eax
  412f03:	pop    ebx
  412f04:	stc    
  412f05:	xchg   edi,eax
  412f06:	loop   0x412f60
  412f08:	scas   al,BYTE PTR es:[edi]
  412f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f0a:	mov    eax,0x5a64c91b
  412f0f:	fwait
  412f10:	pop    ebx
  412f11:	jbe    0x412f47
  412f13:	mov    ah,cl
  412f15:	inc    ecx
  412f16:	jbe    0x412f24
  412f18:	mov    dl,0x6b
  412f1a:	jbe    0x412ec1
  412f1c:	mov    ds:0x447c28a3,al
  412f21:	xor    dl,cl
  412f23:	jb     0x412ef6
  412f25:	jmp    0xb4ef:0xf04c00a5
  412f2c:	sbb    dh,BYTE PTR [ecx]
  412f2e:	dec    edx
  412f2f:	and    al,0xb3
  412f31:	lods   al,BYTE PTR ds:[esi]
  412f32:	iret   
  412f33:	sub    esi,DWORD PTR [ecx+0x249ff474]
  412f39:	inc    ecx
  412f3a:	fsubr  st(5),st
  412f3c:	fs sub al,0xa1
  412f3f:	rcl    ebp,1
  412f41:	mov    esi,0xd978734b
  412f46:	and    edi,esp
  412f48:	xor    al,bl
  412f4a:	pop    esp
  412f4b:	add    esi,0xf56f5d54
  412f51:	mov    dh,0xe0
  412f53:	dec    edx
  412f54:	fild   WORD PTR [esi+0x7d]
  412f57:	retf   
  412f58:	jp     0x412ef0
  412f5a:	lds    ebp,FWORD PTR [edi+0x430ae07]
  412f60:	jae    0x412fa7
  412f62:	fdiv   st,st(4)
  412f64:	sbb    eax,DWORD PTR [edx+0x7f]
  412f67:	sbb    edx,DWORD PTR [esi-0x71a15581]
  412f6d:	adc    BYTE PTR [edx],dl
  412f6f:	push   si
  412f71:	add    bh,0x91
  412f74:	sti    
  412f75:	sahf   
  412f76:	or     eax,0x5b86c9d4
  412f7b:	cmp    DWORD PTR ds:[edi+0x73df3181],0x1e
  412f83:	xchg   edi,eax
  412f84:	add    al,0xbf
  412f86:	mov    ?,WORD PTR [esi]
  412f88:	add    eax,0xceaab84
  412f8d:	add    ch,BYTE PTR [edx+0x5]
  412f90:	mov    DWORD PTR [eax+ecx*8],esi
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	in     al,0xe5
  412f96:	sub    DWORD PTR [esp+esi*1],edx
  412f99:	ret    0x644f
  412f9c:	pop    sp
  412f9e:	sub    BYTE PTR [edi+ecx*2-0x1dda5012],ah
  412fa5:	aas    
  412fa6:	in     al,dx
  412fa7:	imul   edx,DWORD PTR [ebx],0xffffffb9
  412faa:	cmp    al,0xa9
  412fac:	popf   
  412fad:	out    dx,eax
  412fae:	add    DWORD PTR [ebx+0x4908f48b],eax
  412fb4:	jnp    0x412fa6
  412fb6:	test   al,0x78
  412fb8:	daa    
  412fb9:	stos   DWORD PTR es:[edi],eax
  412fba:	mov    al,ds:0xcba0e1dc
  412fbf:	(bad)  
  412fc0:	xchg   ecx,eax
  412fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc2:	stc    
  412fc3:	shl    DWORD PTR [ebp-0x5b],1
  412fc6:	sbb    eax,0x3d7662d0
  412fcb:	push   esp
  412fcc:	cwde   
  412fcd:	dec    edi
  412fce:	inc    ebx
  412fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd0:	inc    ebx
  412fd1:	cwde   
  412fd2:	cs add ebx,eax
  412fd5:	push   0x29edd7b7
  412fda:	loop   0x412f75
  412fdc:	int    0xa5
  412fde:	add    BYTE PTR [edi-0x20b24772],dl
  412fe4:	jno    0x412f92
  412fe6:	int    0xa
  412fe8:	push   sp
  412fea:	loopne 0x412f89
  412fec:	sbb    edi,DWORD PTR [edx+0x29455602]
  412ff2:	adc    DWORD PTR [ebx+eiz*2+0x75392ef5],ebx
  412ff9:	or     eax,0xdad708cb
  412ffe:	or     al,0xf0
  413000:	imul   ebp,DWORD PTR [edi],0x38bdb0fa
  413006:	push   esi
  413007:	jl     0x412fe7
  413009:	cmc    
  41300a:	cwde   
  41300b:	loop   0x413023
  41300d:	adc    ebp,DWORD PTR [esi+0x41]
  413010:	cmp    al,0x68
  413012:	out    dx,eax
  413013:	jp     0x412fc5
  413015:	jg     0x41307e
  413017:	add    eax,0x54d2e2a8
  41301c:	jbe    0x412fe6
  41301e:	and    BYTE PTR [ecx+edi*1-0x75],dh
  413022:	inc    esi
  413023:	adc    ch,al
  413025:	test   BYTE PTR [edx+0x5fc7c38a],ah
  41302b:	inc    ebp
  41302c:	inc    esi
  41302d:	jmp    DWORD PTR [esi]
  41302f:	leave  
  413030:	mov    bl,BYTE PTR [esi-0x67]
  413033:	mov    ebx,0x42960325
  413038:	out    dx,eax
  413039:	xor    DWORD PTR [edx],ebx
  41303b:	ds inc ebp
  41303d:	xchg   esi,eax
  41303e:	sbb    al,0x30
  413040:	(bad)  [edi-0x4a]
  413043:	mov    esp,0x629ea5c3
  413048:	fmul   DWORD PTR [edi+ebp*2+0x54]
  41304c:	pop    esp
  41304d:	cmp    DWORD PTR [edi+edi*2],edx
  413050:	and    DWORD PTR [ecx],esi
  413052:	(bad)  
  413053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413054:	push   0x2f1e28cb
  413059:	pop    edx
  41305a:	sbb    BYTE PTR [edi],0xa3
  41305d:	dec    ecx
  41305e:	or     ah,BYTE PTR [ecx+0xc]
  413061:	pop    esi
  413062:	retf   0x44fb
  413065:	jge    0x413067
  413067:	repnz mov esi,0xadb30b18
  41306d:	test   eax,0xe4fdc141
  413072:	sub    al,0x64
  413074:	pop    esi
  413075:	data16 and al,0x6f
  413078:	xchg   edi,eax
  413079:	push   ecx
  41307a:	rol    dl,0x78
  41307d:	and    DWORD PTR ds:0xc8c0f43a,edi
  413083:	(bad)  
  413084:	scas   eax,DWORD PTR es:[edi]
  413085:	enter  0x3aca,0x92
  413089:	scas   eax,DWORD PTR es:[edi]
  41308a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41308b:	mov    ch,0xf7
  41308d:	cmp    ch,al
  41308f:	out    0x51,al
  413091:	jne    0x4130a3
  413093:	xor    edi,DWORD PTR [esi+0x7a282262]
  413099:	add    eax,DWORD PTR [ebx]
  41309b:	sub    al,0x42
  41309d:	stos   DWORD PTR es:[edi],eax
  41309e:	pop    edx
  41309f:	clc    
  4130a0:	mov    DWORD PTR [ebp-0x48],ebx
  4130a3:	mov    BYTE PTR [ebp+0x47],ah
  4130a6:	out    dx,eax
  4130a7:	or     dh,BYTE PTR [ebx]
  4130a9:	mov    esi,0xb5483c27
  4130ae:	addr16 (bad) 
  4130b0:	lahf   
  4130b1:	inc    ebx
  4130b2:	pop    ecx
  4130b3:	(bad)  
  4130b4:	and    esi,DWORD PTR [eax+0x10]
  4130b7:	div    DWORD PTR [ecx+0x6ce85198]
  4130bd:	nop
  4130be:	mov    cl,0x2c
  4130c0:	mov    dl,0x8c
  4130c2:	in     eax,0x7a
  4130c4:	arpl   WORD PTR [edx+0x2e635dc6],ax
  4130ca:	adc    ebx,DWORD PTR [ecx+0x5f]
  4130cd:	retf   
  4130ce:	jp     0x4130fd
  4130d0:	cwde   
  4130d1:	int3   
  4130d2:	iret   
  4130d3:	jecxz  0x4130fb
  4130d5:	or     al,0x2b
  4130d7:	or     edi,DWORD PTR ds:0x3212ecf6
  4130dd:	cld    
  4130de:	jge    0x413094
  4130e0:	dec    esp
  4130e1:	mov    ebx,0xd81794f3
  4130e6:	jo     0x41311d
  4130e8:	cmp    DWORD PTR [eax+0x6fec456b],edi
  4130ee:	mov    ah,0xa8
  4130f0:	shl    BYTE PTR [edi-0x9f7a965],0x6
  4130f7:	add    al,0x82
  4130f9:	lds    eax,FWORD PTR [eax+0x7]
  4130fc:	imul   BYTE PTR [ecx-0x2f]
  4130ff:	xor    DWORD PTR [ebx+eiz*4-0x6a],esi
  413103:	mov    cl,0x15
  413105:	inc    esi
  413106:	xor    BYTE PTR [ebx],0xb8
  413109:	push   esp
  41310a:	sub    bh,dl
  41310c:	push   esi
  41310d:	xchg   ecx,eax
  41310e:	add    cl,BYTE PTR [edx+0x4183a0d7]
  413114:	repz stc 
  413116:	mov    edi,0x2b93c91b
  41311b:	(bad)  
  41311c:	sbb    DWORD PTR [eax+0xd],edi
  41311f:	push   es
  413120:	jbe    0x4130e7
  413122:	add    DWORD PTR [ebx+eax*2],ecx
  413125:	mov    WORD PTR [ecx+0x79751d7],cs
  41312b:	and    cl,BYTE PTR [ebx-0x5b1e1db7]
  413131:	sbb    edx,DWORD PTR [ecx]
  413133:	sbb    DWORD PTR [esi],ecx
  413135:	mov    ch,BYTE PTR [ebx]
  413137:	bnd jp 0x413101
  41313a:	and    al,0xab
  41313c:	jbe    0x41317d
  41313e:	push   ecx
  41313f:	jg     0x413125
  413141:	cmp    al,0x7a
  413143:	cwde   
  413144:	lea    edi,[edx-0x747c3781]
  41314a:	pop    ecx
  41314b:	leave  
  41314c:	outs   dx,DWORD PTR ds:[esi]
  41314d:	push   ebp
  41314e:	push   esp
  41314f:	nop
  413150:	(bad)  
  413151:	push   edi
  413152:	arpl   WORD PTR [eax+edi*8],dx
  413155:	in     al,dx
  413156:	pop    ecx
  413157:	jge    0x41316a
  413159:	sbb    eax,0x39c9a255
  41315e:	cmp    edi,esi
  413160:	call   0x455:0x5952ff1a
  413167:	add    BYTE PTR [ebp+eiz*2-0x106da3b8],dh
  41316e:	jge    0x413153
  413170:	enter  0xafc4,0x38
  413174:	xchg   esi,eax
  413175:	dec    edx
  413176:	lock jno 0x41319d
  413179:	std    
  41317a:	and    BYTE PTR [ecx],dl
  41317c:	and    DWORD PTR [ecx+0x77],edx
  41317f:	inc    ebx
  413180:	inc    BYTE PTR [ebp+0x4b20b8f5]
  413186:	push   0x25
  413188:	in     eax,0x94
  41318a:	cmp    al,0x3
  41318c:	push   0xffffffc5
  41318e:	or     ch,BYTE PTR [esi+0x6a]
  413191:	cli    
  413192:	mov    ah,dh
  413194:	or     dh,ah
  413196:	mov    dh,0x3f
  413198:	add    cl,BYTE PTR [edi-0x72]
  41319b:	aas    
  41319c:	call   0xd592027
  4131a1:	imul   esp,DWORD PTR [edi],0xe
  4131a4:	mov    ch,0x57
  4131a6:	lahf   
  4131a7:	out    0x6,eax
  4131a9:	lock jns 0x41312d
  4131ac:	dec    eax
  4131ad:	xchg   esp,eax
  4131ae:	mov    fs,WORD PTR [edi+0x7e]
  4131b1:	stos   DWORD PTR es:[edi],eax
  4131b2:	in     eax,0x6a
  4131b4:	or     al,0x9b
  4131b6:	cmp    BYTE PTR [edi-0x1d],dl
  4131b9:	pusha  
  4131ba:	outs   dx,BYTE PTR ds:[esi]
  4131bb:	mov    esp,0x6804b122
  4131c0:	das    
  4131c1:	dec    esi
  4131c2:	cwde   
  4131c3:	std    
  4131c4:	dec    ebp
  4131c5:	cli    
  4131c6:	les    ebx,FWORD PTR [edx-0x51]
  4131c9:	jmp    0x5c12bc39
  4131ce:	ins    BYTE PTR es:[edi],dx
  4131cf:	ds adc ebp,edi
  4131d2:	fisubr WORD PTR [ecx+edx*4-0x4847ad07]
  4131d9:	jmp    0x413238
  4131db:	xor    BYTE PTR [edi],bh
  4131dd:	jnp    0x4131f9
  4131df:	or     BYTE PTR [edx+edi*2-0x45],ch
  4131e3:	cld    
  4131e4:	xor    al,0x34
  4131e6:	xor    bh,BYTE PTR cs:[eax-0x45315242]
  4131ed:	inc    eax
  4131ee:	mov    dl,0xbd
  4131f0:	icebp  
  4131f1:	add    BYTE PTR [edx],dl
  4131f3:	int    0xe8
  4131f5:	lods   eax,DWORD PTR ds:[esi]
  4131f6:	mov    eax,ds:0x9aa5126c
  4131fb:	mov    dh,0xa9
  4131fd:	pop    ss
  4131fe:	mov    al,BYTE PTR [edi]
  413200:	sbb    al,0x51
  413202:	loop   0x4131cf
  413204:	pop    eax
  413205:	pop    esi
  413206:	stos   DWORD PTR es:[edi],eax
  413207:	dec    edi
  413208:	push   ebx
  413209:	mov    bh,0xe9
  41320b:	jb     0x413247
  41320d:	add    edx,DWORD PTR [esi-0x7e]
  413210:	and    al,dl
  413212:	hlt    
  413213:	bound  eax,QWORD PTR [ebx-0x44]
  413216:	adc    dh,bl
  413218:	loop   0x413227
  41321a:	xor    DWORD PTR [edx-0x52],ebp
  41321d:	cmc    
  41321e:	(bad)  
  41321f:	outs   dx,BYTE PTR ds:[esi]
  413220:	jne    0x413270
  413222:	mov    esp,0x4ba2ea18
  413227:	lock daa 
  413229:	call   0x6dc01101
  41322e:	(bad)  [ebx]
  413230:	das    
  413231:	mov    cl,cl
  413233:	sbb    BYTE PTR es:[ecx+0x15],0x9e
  413238:	fwait
  413239:	jmp    0x4131cb
  41323b:	sub    BYTE PTR [ecx],bl
  41323d:	std    
  41323e:	pop    ebx
  41323f:	icebp  
  413240:	nop
  413241:	or     DWORD PTR [ebx-0x47],ecx
  413244:	dec    ebp
  413245:	fnstcw WORD PTR [edx+eax*2+0x3e29586c]
  41324c:	dec    BYTE PTR [ecx-0x65]
  41324f:	adc    bh,BYTE PTR [ebp+edx*2+0x11]
  413253:	hlt    
  413254:	lahf   
  413255:	xchg   edx,eax
  413256:	inc    edi
  413257:	les    ebp,FWORD PTR [edx+0x63]
  41325a:	mov    WORD PTR [ebp+0x6c],fs
  41325d:	daa    
  41325e:	jp     0x4131ee
  413260:	add    eax,0x90516919
  413265:	addr16 popa 
  413267:	jg     0x413204
  413269:	test   al,0xf4
  41326b:	cmp    BYTE PTR [ecx],dh
  41326d:	adc    al,0xe6
  41326f:	sar    ecx,1
  413271:	push   esp
  413272:	ffree  st(3)
  413274:	add    ebx,0xd
  413277:	in     eax,0x12
  413279:	pop    edi
  41327a:	out    0xc8,al
  41327c:	lods   al,BYTE PTR ds:[esi]
  41327d:	cld    
  41327e:	and    bh,ah
  413280:	mov    bl,0xd5
  413282:	or     eax,0x2193f943
  413287:	or     eax,0xf48b288a
  41328c:	pop    ebx
  41328d:	pop    eax
  41328e:	pop    esp
  41328f:	pop    esp
  413290:	cmp    esp,DWORD PTR [edi-0x3]
  413293:	(bad)  
  413294:	shr    DWORD PTR [ebx+0x73],cl
  413297:	mov    ebx,ss
  413299:	mov    esi,0x2aaf5200
  41329e:	xchg   edi,eax
  41329f:	mov    esi,0x7c28ab64
  4132a4:	jae    0x413264
  4132a6:	xor    ah,bl
  4132a8:	imul   esi,ecx,0xffffffde
  4132ab:	xor    esp,ebp
  4132ad:	fwait
  4132ae:	rcl    BYTE PTR es:[ebx+0x7993ea6c],cl
  4132b5:	mov    ecx,esp
  4132b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b8:	xchg   edi,eax
  4132b9:	pop    ebp
  4132ba:	ja     0x413246
  4132bc:	call   0xa2afd96f
  4132c1:	and    al,0xff
  4132c3:	push   ss
  4132c4:	mov    ch,0x75
  4132c6:	jecxz  0x41331c
  4132c8:	or     dh,ch
  4132ca:	xchg   esp,eax
  4132cb:	or     ah,BYTE PTR [edi-0x4479dc74]
  4132d1:	sbb    bh,BYTE PTR [edx]
  4132d3:	sbb    al,cl
  4132d5:	xor    BYTE PTR [edi+0x4bf0fd8],0xf
  4132dc:	je     0x4132dc
  4132de:	pop    ebx
  4132df:	sbb    ebx,eax
  4132e1:	adc    BYTE PTR [edi],dh
  4132e3:	adc    ah,BYTE PTR [edx+0x47a71324]
  4132e9:	mov    ebp,0xc1b9e61
  4132ee:	cli    
  4132ef:	aam    0xa9
  4132f1:	add    eax,0x7aee074f
  4132f6:	add    eax,ebp
  4132f8:	mov    edx,eax
  4132fa:	jmp    0xe31cdbd4
  4132ff:	retf   0x4ba0
  413302:	xchg   ebx,eax
  413303:	and    BYTE PTR [ebp-0x4ff31fd],ah
  413309:	ins    DWORD PTR es:[edi],dx
  41330a:	inc    edx
  41330b:	mov    eax,0xbeb22481
  413310:	ret    0xcb6b
  413313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413314:	hlt    
  413315:	dec    esi
  413316:	sub    edx,DWORD PTR [ebx+0x3ca654ec]
  41331c:	imul   esi,DWORD PTR [esi+0x550eb7b5],0xd19e97ec
  413326:	(bad)  
  413327:	je     0x413375
  413329:	mov    dh,0xbc
  41332b:	icebp  
  41332c:	int3   
  41332d:	test   al,0xb8
  41332f:	or     dh,ah
  413331:	add    ch,bl
  413333:	shr    DWORD PTR [edx-0x356e546c],cl
  413339:	test   DWORD PTR [edx],edx
  41333b:	and    ebp,ebx
  41333d:	loope  0x413315
  41333f:	imul   ebp,DWORD PTR [ecx],0x1af12050
  413345:	and    BYTE PTR ds:0x7b11dab1,0x2
  41334c:	call   esi
  41334e:	jmp    0x28b8a4f5
  413353:	adc    ebp,esp
  413355:	lahf   
  413356:	rcr    eax,1
  413358:	and    DWORD PTR [ebx],esp
  41335a:	cmp    DWORD PTR [esi-0x7e],esp
  41335d:	sbb    DWORD PTR [ebp-0x15],edi
  413360:	int3   
  413361:	int3   
  413362:	les    ecx,FWORD PTR [eax+0x4]
  413365:	scas   eax,DWORD PTR es:[edi]
  413366:	cmp    DWORD PTR [edi-0x7b],ebx
  413369:	mov    al,0x94
  41336b:	dec    esp
  41336c:	leave  
  41336d:	ins    DWORD PTR es:[edi],dx
  41336e:	jp     0x4133d4
  413370:	pop    edx
  413371:	jle    0x413337
  413373:	loop   0x413397
  413375:	nop
  413376:	out    0x9b,eax
  413378:	add    eax,0x5fa880b8
  41337d:	push   ecx
  41337e:	aam    0x2c
  413380:	fwait
  413381:	jnp    0x4133a8
  413383:	cmp    DWORD PTR [edx],eax
  413385:	mov    ecx,0x23e34a86
  41338a:	or     ecx,DWORD PTR ss:[edi]
  41338d:	pop    ebx
  41338e:	adc    eax,0xcc751aed
  413393:	imul   edx,esp,0x9deb79b7
  413399:	mov    ds,WORD PTR [edx+0x552ec622]
  41339f:	and    esi,DWORD PTR [ebp+ebp*4-0x31]
  4133a3:	shl    BYTE PTR [ebx],1
  4133a5:	bound  edi,QWORD PTR [esi]
  4133a7:	add    ch,BYTE PTR [ebx-0x41]
  4133aa:	push   0xffffff9c
  4133ac:	xor    DWORD PTR [ebx+0x58],0x20
  4133b0:	push   eax
  4133b1:	push   edx
  4133b2:	retf   
  4133b3:	or     al,0xf0
  4133b5:	or     al,0x46
  4133b7:	jmp    0xfb5aed87
  4133bc:	mov    eax,0x35a0f9fc
  4133c1:	in     al,0x7
  4133c3:	push   esi
  4133c4:	hlt    
  4133c5:	retf   
  4133c6:	jecxz  0x413421
  4133c8:	sbb    BYTE PTR [esi-0x7c],0xc4
  4133cc:	js     0x413443
  4133ce:	iret   
  4133cf:	mov    eax,0x3a1821c
  4133d4:	xchg   ebx,eax
  4133d5:	jmp    0x41344d
  4133d7:	push   ds
  4133d8:	adc    edx,DWORD PTR [esi+ecx*8-0x7d]
  4133dc:	sbb    ebp,esi
  4133de:	cmc    
  4133df:	mov    eax,0xe7869d1f
  4133e4:	mov    ?,esi
  4133e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e7:	clc    
  4133e8:	pop    edx
  4133e9:	cld    
  4133ea:	xchg   esp,eax
  4133eb:	add    DWORD PTR [ecx],ebp
  4133ed:	add    eax,0x4847a818
  4133f2:	aaa    
  4133f3:	and    ecx,DWORD PTR [ecx-0x108be8e5]
  4133f9:	pop    ecx
  4133fa:	jne    0x413389
  4133fc:	test   al,0x33
  4133fe:	push   ebp
  4133ff:	and    eax,0xc4c39847
  413404:	mov    edi,DWORD PTR [ebp+0x520adc14]
  41340a:	mov    ds:0xc9f847a,al
  41340f:	push   esp
  413410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413412:	jno    0x4133ea
  413414:	xchg   esp,eax
  413415:	adc    ebx,DWORD PTR [eax+0x38]
  413418:	std    
  413419:	or     DWORD PTR [esi-0x4718ada1],eax
  41341f:	cmp    BYTE PTR [edx-0x67],cl
  413422:	loope  0x41341b
  413424:	pop    ss
  413425:	fldcw  WORD PTR [ecx+0x77]
  413428:	arpl   WORD PTR [ecx-0x29365000],cx
  41342e:	shl    DWORD PTR [edi+0x57d5c5f1],1
  413434:	cmp    dh,0xac
  413437:	imul   edi,esp,0xffffff91
  41343a:	or     DWORD PTR [eax-0x4c],esi
  41343d:	out    dx,al
  41343e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343f:	mov    ch,0x70
  413441:	(bad)  
  413442:	hlt    
  413443:	xor    BYTE PTR ds:0xa30d5af,al
  413449:	pop    edi
  41344a:	mov    ebp,0x5d4fe696
  41344f:	push   ds
  413450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413451:	dec    DWORD PTR [edi-0x38]
  413454:	fs in  eax,dx
  413456:	inc    ebp
  413457:	jl     0x41340a
  413459:	shr    DWORD PTR ds:0x13330fd5,1
  41345f:	mov    al,0x1d
  413461:	mov    al,ds:0x478f00a6
  413466:	add    dl,BYTE PTR [ecx+0x49fd0f0a]
  41346c:	add    al,0x8
  41346e:	xor    BYTE PTR [ebp+0x500960a0],0x7b
  413475:	inc    esi
  413476:	xlat   BYTE PTR ds:[ebx]
  413477:	push   ebp
  413478:	lahf   
  413479:	and    ah,dh
  41347b:	and    DWORD PTR [eax-0x5c560082],ebp
  413481:	sub    edx,DWORD PTR [ebx-0xb]
  413484:	ret    0x4745
  413487:	xchg   ebx,eax
  413488:	pop    ebx
  413489:	cmp    eax,0xbae025c0
  41348e:	add    BYTE PTR [edi],al
  413490:	xlat   BYTE PTR ds:[ebx]
  413491:	sub    al,0x43
  413493:	imul   edi,DWORD PTR [esp+edi*2],0x8edd0289
  41349a:	or     dh,dh
  41349c:	in     eax,dx
  41349d:	push   edi
  41349e:	out    dx,eax
  41349f:	pushf  
  4134a0:	inc    ebx
  4134a1:	clc    
  4134a2:	push   esi
  4134a3:	mov    ebx,0x885424af
  4134a8:	xchg   esi,eax
  4134a9:	pop    edx
  4134aa:	in     eax,0x2a
  4134ac:	xchg   ebp,eax
  4134ad:	into   
  4134ae:	out    dx,al
  4134af:	fwait
  4134b0:	test   DWORD PTR [ebp+edi*1+0xb232cdc],ebp
  4134b7:	fwait
  4134b8:	sahf   
  4134b9:	push   ebx
  4134ba:	mov    ebp,0xa2b4a96f
  4134bf:	add    ch,BYTE PTR [esi+0x193fa804]
  4134c5:	aas    
  4134c6:	sbb    bl,ah
  4134c8:	call   0xdc24:0x3c0f74a4
  4134cf:	stos   DWORD PTR es:[edi],eax
  4134d0:	fdiv   QWORD PTR [edi+0x66]
  4134d3:	cs xchg edi,eax
  4134d5:	mov    DWORD PTR [ebx+0x7e],eax
  4134d8:	mov    BYTE PTR [edx+0x2],cl
  4134db:	xchg   esp,eax
  4134dc:	jmp    0x77464467
  4134e1:	(bad)  [eax+0x156c50bf]
  4134e7:	int3   
  4134e8:	dec    esp
  4134e9:	mov    bh,0x73
  4134eb:	inc    edi
  4134ec:	mov    BYTE PTR [ebx+eiz*2-0x3d],ah
  4134f0:	and    al,0xec
  4134f2:	adc    BYTE PTR [edx-0x6fc06440],cl
  4134f8:	sub    dl,BYTE PTR [ebx]
  4134fa:	sub    ebp,DWORD PTR [edi-0x711077cc]
  413500:	cdq    
  413501:	dec    DWORD PTR [ebx]
  413503:	or     BYTE PTR [ebp+0x4107d9b7],cl
  413509:	adc    al,0x2f
  41350b:	mov    ebp,DWORD PTR [eax*2-0x5e6839bb]
  413512:	ret    0x21ee
  413515:	pop    ds
  413516:	xchg   esi,eax
  413517:	adc    al,0x20
  413519:	mov    WORD PTR [ebp+0x18],cs
  41351c:	test   eax,esi
  41351e:	sbb    BYTE PTR [ecx+0x49e64344],0xef
  413525:	pop    ds
  413526:	dec    edx
  413527:	stos   DWORD PTR es:[edi],eax
  413528:	mov    ecx,0x224bae51
  41352d:	shl    DWORD PTR [esi+0xf1fe3bb],0xd0
  413534:	mov    ecx,0x3a99b611
  413539:	or     al,0x83
  41353b:	or     DWORD PTR ds:0xe10367fe,edi
  413541:	(bad)  
  413542:	retf   0x55aa
  413545:	sqrtps xmm0,xmm1
  413548:	dec    ebp
  413549:	push   ebx
  41354a:	jp     0x4134fa
  41354c:	inc    ecx
  41354d:	test   DWORD PTR [edx],eax
  41354f:	sbb    BYTE PTR [esi+0x3],ah
  413552:	and    DWORD PTR [ecx+0xb359a3d],0x3a92c0fb
  41355c:	jmp    0xabccaca9
  413561:	test   eax,0xd19b694c
  413566:	and    dh,dl
  413568:	loopne 0x41351b
  41356a:	xchg   esp,eax
  41356b:	imul   ecx,DWORD PTR [ecx+0x3a],0x368a8cbe
  413572:	mov    dl,0x6d
  413574:	cmc    
  413575:	(bad)  
  413576:	mov    ebx,0x73e4d306
  41357b:	push   es
  41357c:	mov    ch,0x74
  41357e:	iret   
  41357f:	mov    ds:0x974bd443,eax
  413584:	push   ss
  413585:	leave  
  413586:	jnp    0x41351e
  413588:	(bad)  
  413589:	mov    ch,0x85
  41358b:	and    edi,DWORD PTR [ebx-0x42]
  41358e:	inc    edx
  41358f:	out    0xf3,eax
  413591:	nop
  413592:	mov    ebp,0xf424e596
  413597:	or     DWORD PTR [esi-0x43],0x72
  41359b:	xadd   DWORD PTR [eax],eax
  41359e:	jno    0x4135e7
  4135a0:	iret   
  4135a1:	sahf   
  4135a2:	sbb    eax,0x2ac6b9e3
  4135a7:	int3   
  4135a8:	std    
  4135a9:	out    0xa7,al
  4135ab:	lock pop ecx
  4135ad:	adc    eax,0xc1f620b6
  4135b2:	jae    0x4135de
  4135b4:	aam    0x4e
  4135b6:	clc    
  4135b7:	hlt    
  4135b8:	nop
  4135b9:	pushf  
  4135ba:	add    al,0x41
  4135bc:	mov    DWORD PTR [edx+0x7a1a2fb9],ebp
  4135c2:	jl     0x413569
  4135c4:	lds    ebp,FWORD PTR [edi+0x5f]
  4135c7:	xchg   ebp,eax
  4135c8:	mov    ch,0xef
  4135ca:	icebp  
  4135cb:	lahf   
  4135cc:	in     al,dx
  4135cd:	ret    0xa88d
  4135d0:	rol    BYTE PTR [esi+0x74cdf808],cl
  4135d6:	das    
  4135d7:	mov    dl,0x72
  4135d9:	jns    0x4135ed
  4135db:	sti    
  4135dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135dd:	cli    
  4135de:	mov    ebx,0xc6d2cfb2
  4135e3:	cs xor eax,0xbd14042d
  4135e9:	repz xlat BYTE PTR ds:[ebx]
  4135eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ec:	cmp    BYTE PTR [ebp-0x55],0x86
  4135f0:	mov    edx,0x3baa1f1b
  4135f5:	fdiv   QWORD PTR [edx+0x2e]
  4135f8:	pop    ecx
  4135f9:	mov    DWORD PTR [esp+eax*8-0x7ad72d54],ebp
  413600:	mov    ecx,0xf05c0dde
  413605:	cmp    dh,BYTE PTR [ebx+0x4ff6fb07]
  41360b:	mov    DWORD PTR [eax+0x19d91216],esp
  413611:	jno    0x41363d
  413613:	stos   BYTE PTR es:[edi],al
  413614:	inc    ebx
  413615:	test   al,0x20
  413617:	fsubrp st(2),st
  413619:	adc    esp,DWORD PTR ds:0xf1add7b9
  41361f:	call   0x4b7f:0x70f63dce
  413626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413627:	lods   eax,DWORD PTR ds:[esi]
  413628:	(bad)  
  413629:	fdivp  st(3),st
  41362b:	and    esp,DWORD PTR [ebx]
  41362d:	jbe    0x41364e
  41362f:	ja     0x41368a
  413631:	(bad)  
  413632:	aam    0xa3
  413634:	fimul  DWORD PTR [edi+0x33ab8af4]
  41363a:	adc    BYTE PTR [edx+0x7ecdb135],0x7b
  413641:	cmp    BYTE PTR cs:[edi],dh
  413644:	in     al,dx
  413645:	ret    0xd18e
  413648:	sub    ebp,0xffffffe8
  41364b:	mov    eax,0x897e709e
  413650:	sti    
  413651:	cmp    al,0x5a
  413653:	mov    ecx,ebx
  413655:	aad    0x35
  413657:	add    DWORD PTR [ebx],eax
  413659:	cmp    BYTE PTR [eax-0x20],bh
  41365c:	clc    
  41365d:	mov    al,ds:0xcf16d2af
  413662:	aaa    
  413663:	push   ecx
  413664:	dec    ebp
  413665:	sub    eax,0xc5b8414
  41366a:	test   dl,bl
  41366c:	push   ebp
  41366d:	adc    edi,DWORD PTR ds:0xdd903caf
  413673:	mov    eax,0xcadc3c03
  413678:	mov    ebp,0xa5297ad0
  41367d:	mov    es,esi
  41367f:	push   cs
  413680:	jbe    0x4136aa
  413682:	and    edx,DWORD PTR [ebx+0xa19cfd1]
  413688:	cs aad 0x5f
  41368b:	xor    dl,BYTE PTR [eax+0x3f]
  41368e:	imul   ebx,DWORD PTR [eax-0x30],0xffffffd5
  413692:	add    al,0xc1
  413694:	mov    WORD PTR [eax+0x7d3ff912],?
  41369a:	dec    esi
  41369b:	xchg   edi,eax
  41369c:	enter  0x674a,0xdf
  4136a0:	sbb    ebx,DWORD PTR [eax+0xf]
  4136a3:	scas   eax,DWORD PTR es:[edi]
  4136a4:	pop    edx
  4136a5:	lods   al,BYTE PTR ds:[esi]
  4136a6:	inc    ecx
  4136a7:	mov    dh,0xd
  4136a9:	xchg   ebx,eax
  4136aa:	lea    esi,[edi+0x1f7b5803]
  4136b0:	cmp    DWORD PTR [edx+0x26ac67b2],0xffffffb0
  4136b7:	and    ecx,DWORD PTR [eax+ebp*8+0x3a4ccc33]
  4136be:	or     BYTE PTR [edi+0x2fe25039],dh
  4136c4:	jmp    0x41371e
  4136c6:	jg     0x41366c
  4136c8:	and    BYTE PTR [edi],ch
  4136ca:	int    0x8f
  4136cc:	sahf   
  4136cd:	pop    esp
  4136ce:	ds pop ebp
  4136d0:	jne    0x4136a1
  4136d2:	mov    eax,DWORD PTR [edi-0x4ca19805]
  4136d8:	test   eax,0xbad23edb
  4136dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136de:	rcl    BYTE PTR [ecx+0x44],1
  4136e1:	and    dh,BYTE PTR [eax-0x613ad5b3]
  4136e7:	pop    edx
  4136e8:	out    0x75,eax
  4136ea:	(bad)  
  4136eb:	in     eax,dx
  4136ec:	mov    edi,DWORD PTR [ebx]
  4136ee:	add    DWORD PTR [edx-0x14e80949],eax
  4136f4:	loop   0x41375f
  4136f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f7:	push   eax
  4136f8:	shl    ch,1
  4136fa:	add    eax,edi
  4136fc:	loop   0x413709
  4136fe:	xor    bl,ch
  413700:	aas    
  413701:	xchg   esp,eax
  413702:	mov    ebx,0xe2153495
  413707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413708:	dec    esp
  413709:	mov    esi,0x19dff394
  41370e:	mov    dh,0xd8
  413710:	xchg   esi,eax
  413711:	scas   eax,DWORD PTR es:[edi]
  413712:	mov    ecx,0x2409abaa
  413717:	iret   
  413718:	aas    
  413719:	fcomp  DWORD PTR [si-0x3b]
  41371d:	dec    eax
  41371e:	cmp    BYTE PTR [ebp-0x53a3cb64],al
  413724:	inc    eax
  413725:	sub    BYTE PTR [edi+0x5680917e],cl
  41372b:	mov    eax,ds:0xea2a2d74
  413730:	popa   
  413731:	jae    0x4136d9
  413733:	fs call 0x818382da
  413739:	dec    ebp
  41373a:	mov    esp,0x7d745124
  41373f:	call   0xbd00759b
  413744:	out    0xfb,al
  413746:	not    ebx
  413748:	lods   al,BYTE PTR ds:[esi]
  413749:	xchg   ebp,eax
  41374a:	pop    ds
  41374b:	inc    edi
  41374c:	arpl   WORD PTR [ebp-0x40ad1fa0],dx
  413752:	outs   dx,BYTE PTR ds:[esi]
  413753:	push   esi
  413754:	data16 fisub DWORD PTR [ebp+0x16]
  413758:	bound  edi,QWORD PTR [eax+0x56]
  41375b:	pop    ss
  41375c:	sub    DWORD PTR [esi-0x60],esp
  41375f:	push   ebp
  413760:	fcom   QWORD PTR [eax]
  413762:	aam    0x31
  413764:	lock or bh,BYTE PTR [edx]
  413767:	inc    ebp
  413768:	scas   al,BYTE PTR es:[edi]
  413769:	sub    edi,DWORD PTR [eax+0x50]
  41376c:	(bad)  
  41376d:	jmp    0x17c1:0xe6b706b8
  413774:	shr    BYTE PTR [esp+ebx*4-0x3],cl
  413778:	int3   
  413779:	or     BYTE PTR [ebx-0x4ca7c771],ah
  41377f:	cwde   
  413780:	push   eax
  413781:	(bad)  
  413782:	xchg   esp,eax
  413783:	mov    ebx,0x42893afe
  413788:	jge    0x4137c4
  41378a:	imul   DWORD PTR [edx+0x50caa6f5]
  413790:	push   edx
  413791:	mov    edx,0xc0a23c6c
  413796:	rol    DWORD PTR [edi],cl
  413798:	(bad)  
  413799:	imul   esi
  41379b:	jge    0x413748
  41379d:	dec    edi
  41379e:	or     eax,0x511a991e
  4137a3:	rol    BYTE PTR [eax],0x3a
  4137a6:	pop    ecx
  4137a7:	ffreep st(4)
  4137a9:	fnstcw WORD PTR [ecx+ebp*2]
  4137ac:	into   
  4137ad:	and    al,0x8e
  4137af:	stc    
  4137b0:	mov    esi,0x5ee38314
  4137b5:	sub    DWORD PTR [ebx-0x8],0x62a1949b
  4137bc:	xchg   esi,eax
  4137bd:	adc    edx,esp
  4137bf:	xchg   BYTE PTR [esi+0x68594a13],dl
  4137c5:	push   es
  4137c6:	je     0x41375d
  4137c8:	or     DWORD PTR [esi],esi
  4137ca:	popf   
  4137cb:	xchg   ebx,eax
  4137cc:	in     al,dx
  4137cd:	jmp    0x4137cd
  4137cf:	mov    eax,ds:0x40e93d0a
  4137d4:	mov    es,WORD PTR [di-0xebe]
  4137d9:	add    al,0x4d
  4137db:	pop    ds
  4137dc:	cs push ebx
  4137de:	fsub   QWORD PTR [ebp-0x5b]
  4137e1:	mov    BYTE PTR [ebx],al
  4137e3:	fcmovnb st,st(7)
  4137e5:	clc    
  4137e6:	repz inc esi
  4137e8:	lods   al,BYTE PTR ds:[esi]
  4137e9:	fdiv   DWORD PTR [ecx+0x53]
  4137ec:	or     eax,DWORD PTR [edx-0x39a14791]
  4137f2:	call   0xa1e72c68
  4137f7:	mov    ecx,0x1eee1f6f
  4137fc:	or     BYTE PTR [edx-0x2113ce8d],ch
  413802:	sub    eax,edx
  413804:	sbb    eax,0xe757886
  413809:	clc    
  41380a:	and    al,0x7b
  41380c:	inc    edi
  41380d:	or     esi,DWORD PTR [esi]
  41380f:	mov    al,ds:0xf7ed68ec
  413814:	(bad)  
  413815:	adc    dl,BYTE PTR [ecx]
  413817:	pop    ebx
  413818:	bound  edi,QWORD PTR [ecx-0x140aed81]
  41381e:	mov    dl,0x2b
  413820:	and    al,0xf7
  413822:	loope  0x4137dc
  413824:	sar    DWORD PTR [edi+0x3d],0xa5
  413828:	push   esi
  413829:	sub    edx,eax
  41382b:	icebp  
  41382c:	out    dx,al
  41382d:	push   ds
  41382e:	stos   BYTE PTR es:[edi],al
  41382f:	adc    BYTE PTR [ebx-0x68282bfa],0x8b
  413836:	(bad)  
  413837:	enter  0xfd1f,0xef
  41383b:	push   ecx
  41383c:	sbb    BYTE PTR [edx],dh
  41383e:	push   ds
  41383f:	(bad)  
  413840:	fild   QWORD PTR ds:0xb59a7305
  413846:	cmp    al,0x29
  413848:	pop    ebx
  413849:	mov    esp,ebp
  41384b:	popa   
  41384c:	out    dx,eax
  41384d:	call   0x246c:0xfb6f979b
  413854:	int3   
  413855:	cmp    ah,BYTE PTR [edx+0x3175068e]
  41385b:	jl     0x4138d4
  41385d:	ja     0x4138a2
  41385f:	loope  0x4137f6
  413861:	sbb    cl,ch
  413863:	test   al,0x9
  413865:	daa    
  413866:	mov    ch,0x62
  413868:	rol    BYTE PTR [ebx-0x4a77450d],cl
  41386e:	mov    esi,DWORD PTR [ecx-0x6cdb17be]
  413874:	test   eax,0xdafc5a11
  413879:	add    al,BYTE PTR [eax+0x40]
  41387c:	popfw  
  41387e:	add    dl,BYTE PTR [ebx]
  413880:	jle    0x413814
  413882:	mov    ebp,0x2fe7dac4
  413887:	das    
  413888:	mov    dl,dh
  41388a:	or     al,0xc2
  41388c:	test   al,0xc5
  41388e:	out    0xdb,al
  413890:	outs   dx,BYTE PTR ds:[esi]
  413891:	xchg   BYTE PTR [edx+0xeee463],ah
  413897:	and    BYTE PTR [ebx+0x72],ah
  41389a:	addr16 jle 0x41383b
  41389d:	mov    ch,0xd8
  41389f:	jb     0x41388d
  4138a1:	xor    DWORD PTR [esi+eiz*8],edx
  4138a4:	gs enter 0xc44d,0xb4
  4138a9:	outs   dx,BYTE PTR ds:[esi]
  4138aa:	scas   al,BYTE PTR es:[edi]
  4138ab:	leave  
  4138ac:	ret    0x6775
  4138af:	inc    esi
  4138b0:	nop
  4138b1:	dec    cx
  4138b3:	mov    bl,0x4e
  4138b5:	xchg   esp,eax
  4138b6:	xor    eax,0x7ee3b447
  4138bb:	push   esp
  4138bc:	ins    BYTE PTR es:[edi],dx
  4138bd:	push   esp
  4138be:	and    ah,BYTE PTR [edi]
  4138c0:	nop
  4138c1:	pop    esi
  4138c2:	iret   
  4138c3:	cwde   
  4138c4:	pushf  
  4138c5:	test   al,0xe6
  4138c7:	cmp    bh,BYTE PTR [edx]
  4138c9:	or     dl,al
  4138cb:	ret    0x4c83
  4138ce:	or     BYTE PTR [edx+0x4b],0xe7
  4138d2:	sbb    DWORD PTR [ebx+edi*4-0x5d],esi
  4138d6:	jp     0x41391c
  4138d8:	out    dx,eax
  4138d9:	jecxz  0x413926
  4138db:	sbb    edx,DWORD PTR [esi]
  4138dd:	adc    eax,0xee11ef01
  4138e2:	ret    0x916
  4138e5:	dec    eax
  4138e6:	pop    es
  4138e7:	jg     0x413873
  4138e9:	scas   eax,DWORD PTR es:[edi]
  4138ea:	mov    esi,0xac0abb6b
  4138ef:	jb     0x4138e5
  4138f1:	cmc    
  4138f2:	outs   dx,DWORD PTR ds:[esi]
  4138f3:	dec    esp
  4138f4:	outs   dx,DWORD PTR ds:[esi]
  4138f5:	pop    ds
  4138f6:	push   ebx
  4138f7:	scas   al,BYTE PTR es:[edi]
  4138f8:	pop    ebp
  4138f9:	ja     0x41393d
  4138fb:	jmp    DWORD PTR [esi+eiz*1]
  4138fe:	out    0x1a,eax
  413900:	xchg   BYTE PTR [esi+0x7fd05e13],al
  413906:	or     al,0x0
  413908:	fisub  WORD PTR [edi]
  41390a:	add    al,0xa4
  41390c:	push   es
  41390d:	jp     0x413966
  41390f:	cdq    
  413910:	push   ebp
  413911:	cwde   
  413912:	xchg   bl,ah
  413914:	stc    
  413915:	lock iret 
  413917:	xchg   ebp,eax
  413918:	or     al,0x8d
  41391a:	add    eax,ebp
  41391c:	mov    eax,0x7fce5ef9
  413921:	adc    DWORD PTR [edi],ebp
  413923:	jbe    0x4138e5
  413925:	push   edi
  413926:	adc    eax,0x1300b627
  41392b:	add    dl,BYTE PTR [edx+0xe]
  41392e:	and    DWORD PTR [eax+0x65c276fb],eax
  413934:	loope  0x41390e
  413936:	cld    
  413937:	lods   eax,DWORD PTR ds:[esi]
  413938:	dec    ecx
  413939:	ins    BYTE PTR es:[edi],dx
  41393a:	shl    cl,0x2d
  41393d:	leave  
  41393e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393f:	jge    0x413930
  413941:	mov    dl,0xd4
  413943:	pop    ds
  413944:	mov    cl,0x47
  413946:	lahf   
  413947:	sbb    ebx,DWORD PTR [ecx]
  413949:	sbb    eax,0xd538e173
  41394e:	loopne 0x413929
  413950:	cwde   
  413951:	std    
  413952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413953:	mov    ebx,0xe2340f72
  413958:	pop    esp
  413959:	mov    ds:0x23a5d3b5,al
  41395e:	jae    0x4139bd
  413960:	outs   dx,BYTE PTR ds:[esi]
  413961:	mov    al,0x8f
  413963:	jae    0x4138f5
  413965:	pop    eax
  413966:	push   eax
  413967:	and    al,0x9f
  413969:	or     al,0x1c
  41396b:	jl     0x41398d
  41396d:	mov    edx,0x1a74210
  413972:	pop    edx
  413973:	cdq    
  413974:	dec    eax
  413975:	push   cs
  413976:	hlt    
  413977:	cmp    bh,BYTE PTR ds:0xeec70063
  41397d:	add    BYTE PTR [eax-0x4b],0x7b
  413981:	(bad)  
  413982:	fs pop ss
  413984:	sub    DWORD PTR [ecx],0x63
  413987:	lods   al,BYTE PTR ds:[esi]
  413988:	or     BYTE PTR [edi+0x66],0xd7
  41398c:	inc    edi
  41398d:	cmp    edi,0x9f56c586
  413993:	lds    ebx,FWORD PTR [ebp-0x27]
  413996:	add    eax,0x2de1aec9
  41399b:	sub    cl,BYTE PTR ds:0x2d7d53cc
  4139a1:	xchg   DWORD PTR [eax-0x391f0f62],edx
  4139a7:	push   cs
  4139a8:	cdq    
  4139a9:	or     ah,ch
  4139ab:	fisttp WORD PTR [eax]
  4139ad:	push   0xfee15750
  4139b2:	neg    DWORD PTR [ecx+0x371549b4]
  4139b8:	xchg   ebp,eax
  4139b9:	ret    
  4139ba:	jge    0x413960
  4139bc:	repnz xchg edx,eax
  4139be:	mov    bh,0x8f
  4139c0:	sub    cl,BYTE PTR [esi]
  4139c2:	scas   al,BYTE PTR es:[edi]
  4139c3:	or     BYTE PTR ds:0x7b18244e,0xca
  4139ca:	in     eax,0x5b
  4139cc:	dec    al
  4139ce:	ja     0x4139e0
  4139d0:	out    dx,al
  4139d1:	ffreep st(2)
  4139d3:	fmul   st(0),st
  4139d5:	pop    esp
  4139d6:	inc    edi
  4139d7:	ficomp WORD PTR [edx+0x60]
  4139da:	(bad)  
  4139dc:	inc    esp
  4139dd:	jp     0x4139e7
  4139df:	cmp    DWORD PTR [edx-0x68],eax
  4139e2:	mov    eax,0x2f545bd9
  4139e7:	aaa    
  4139e8:	or     BYTE PTR [edi+0x1ef9a6a],dl
  4139ee:	mov    ecx,0xa253c66f
  4139f3:	mov    bl,0xaf
  4139f5:	stos   BYTE PTR es:[edi],al
  4139f6:	mul    BYTE PTR [ecx+0x6cdc0f31]
  4139fc:	mov    bh,0x29
  4139fe:	shl    DWORD PTR [eax+0x1f5561e4],0x14
  413a05:	stos   BYTE PTR es:[edi],al
  413a06:	dec    ebx
  413a07:	sti    
  413a08:	(bad)  [esi+0x579e387c]
  413a0e:	mov    ebp,0x822291d8
  413a13:	dec    eax
  413a14:	push   edi
  413a15:	xchg   BYTE PTR [edi],ch
  413a17:	in     eax,0xf4
  413a19:	in     al,0x3f
  413a1b:	sbb    al,0x83
  413a1d:	out    dx,al
  413a1e:	lea    edi,[edi]
  413a20:	ja     0x413a05
  413a22:	inc    eax
  413a23:	int3   
  413a24:	add    edx,DWORD PTR [ebx+ecx*4-0xf0edee4]
  413a2b:	and    eax,0x7129921b
  413a30:	mov    eax,0x3614aa42
  413a35:	dec    edx
  413a36:	sahf   
  413a37:	or     DWORD PTR [eax-0x151dc498],esi
  413a3d:	fnstsw WORD PTR [eax+0x1959cb3d]
  413a43:	pop    ebx
  413a44:	pop    eax
  413a45:	cli    
  413a46:	push   esi
  413a47:	cmp    DWORD PTR [ebx+edx*2+0x4e],edx
  413a4b:	jns    0x413a18
  413a4d:	xchg   BYTE PTR [edi],al
  413a4f:	ins    BYTE PTR es:[edi],dx
  413a50:	lods   eax,DWORD PTR ds:[esi]
  413a51:	push   esp
  413a52:	fstp   TBYTE PTR [ebx-0x1c8e4bea]
  413a58:	sub    ah,BYTE PTR [edx+esi*2+0x75cfc193]
  413a5f:	sbb    al,0x99
  413a61:	dec    ebx
  413a62:	dec    esp
  413a63:	cmp    ecx,DWORD PTR [eax-0x7c1ddc25]
  413a69:	mov    dl,0xe8
  413a6b:	ret    
  413a6c:	cmp    DWORD PTR [edx-0x75],ebx
  413a6f:	inc    eax
  413a70:	lods   al,BYTE PTR ds:[esi]
  413a71:	mov    edx,0x465da151
  413a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a77:	cmp    al,0xbe
  413a79:	pusha  
  413a7a:	mov    ds:0x703736d0,eax
  413a7f:	icebp  
  413a80:	adc    eax,0xc540ad93
  413a85:	sbb    al,0xd7
  413a87:	mov    edx,0x5dadf9b1
  413a8c:	loopne 0x413a92
  413a8e:	push   ebp
  413a8f:	dec    ebx
  413a90:	(bad)  
  413a92:	outs   dx,BYTE PTR ds:[esi]
  413a93:	or     eax,0x3cb671a3
  413a98:	sar    BYTE PTR [ebp+0x45],cl
  413a9b:	ins    BYTE PTR es:[edi],dx
  413a9c:	inc    eax
  413a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a9e:	inc    ah
  413aa0:	sub    DWORD PTR [ebp-0x43],esp
  413aa3:	retf   
  413aa4:	outs   dx,BYTE PTR ds:[esi]
  413aa5:	sar    ecx,0x61
  413aa8:	test   BYTE PTR [ebp-0x2eb230ae],0xa9
  413aaf:	xchg   esi,eax
  413ab0:	pop    edi
  413ab1:	aaa    
  413ab2:	inc    esi
  413ab3:	out    dx,al
  413ab4:	sbb    al,0xa1
  413ab6:	out    dx,al
  413ab7:	scas   al,BYTE PTR es:[edi]
  413ab8:	push   ebx
  413ab9:	cmp    ecx,DWORD PTR [eax-0x52]
  413abc:	outs   dx,DWORD PTR ds:[esi]
  413abd:	call   0x62f0:0xae437729
  413ac4:	imul   esp,DWORD PTR [edi],0xffffffe4
  413ac7:	aas    
  413ac8:	(bad)  
  413ac9:	aas    
  413aca:	cdq    
  413acb:	arpl   WORD PTR [ebp-0x32],dx
  413ace:	mov    ds:0x962ba89c,eax
  413ad3:	je     0x413b22
  413ad5:	jmp    0x413b27
  413ad7:	retf   
  413ad8:	sbb    esp,DWORD PTR [ebx]
  413ada:	sti    
  413adb:	retf   
  413adc:	jle    0x413ac9
  413ade:	es xor al,0x2d
  413ae1:	scas   eax,DWORD PTR es:[edi]
  413ae2:	loop   0x413a83
  413ae4:	inc    esi
  413ae5:	sbb    BYTE PTR [ebx-0x3afc7275],dh
  413aeb:	dec    esp
  413aec:	js     0x413a8f
  413aee:	cdq    
  413aef:	test   eax,0x45b3f074
  413af4:	sbb    edi,esp
  413af6:	lods   eax,DWORD PTR ds:[esi]
  413af7:	stos   BYTE PTR es:[edi],al
  413af8:	sbb    dh,BYTE PTR [ebx-0x3e32d587]
  413afe:	mov    esp,0x3af2e4a6
  413b03:	push   0xffffffef
  413b05:	stc    
  413b06:	push   0x52
  413b08:	and    edx,DWORD PTR [ecx+0x2980145d]
  413b0e:	imul   esp,DWORD PTR cs:[eax],0x2b714e7b
  413b15:	add    BYTE PTR [ebx-0x1de26130],0x4c
  413b1c:	pop    ecx
  413b1d:	aad    0xeb
  413b1f:	aas    
  413b20:	push   esi
  413b21:	pusha  
  413b22:	cdq    
  413b23:	test   DWORD PTR [eax],ebx
  413b25:	add    DWORD PTR [edx+0x225d3d91],0x339523c3
  413b2f:	xchg   ecx,eax
  413b30:	into   
  413b31:	jmp    0x5517f02f
  413b36:	ins    BYTE PTR es:[edi],dx
  413b37:	jg     0x413b77
  413b39:	xchg   esi,eax
  413b3a:	pop    ds
  413b3b:	cmp    ebx,DWORD PTR [eax+edx*4-0x1d]
  413b3f:	add    BYTE PTR [esi-0x71],bh
  413b42:	sbb    eax,0x750edeba
  413b47:	dec    edi
  413b48:	scas   al,BYTE PTR es:[edi]
  413b49:	retf   0x9dc5
  413b4c:	jno    0x413b07
  413b4e:	xor    ecx,eax
  413b50:	jmp    0x1fb7:0x4a8c033f
  413b57:	push   edx
  413b58:	add    BYTE PTR ss:[edx-0x69259465],bl
  413b5f:	push   eax
  413b60:	jns    0x413aec
  413b62:	ret    0x9caa
  413b65:	mov    al,ds:0x7f5b032d
  413b6a:	rcl    DWORD PTR [eax+ebp*2+0x4dba693b],0x39
  413b72:	xchg   ecx,eax
  413b73:	leave  
  413b74:	daa    
  413b75:	mov    ds:0xff2704d1,al
  413b7a:	int3   
  413b7b:	stc    
  413b7c:	add    DWORD PTR [esi-0x5e5ed961],eax
  413b82:	dec    esi
  413b83:	sbb    esp,DWORD PTR [ebx+ebp*8-0x28eebb74]
  413b8a:	div    BYTE PTR [eax]
  413b8c:	sub    bh,0x49
  413b8f:	lds    ebx,FWORD PTR [ebx-0x4f]
  413b92:	(bad)  
  413b93:	in     eax,0xff
  413b95:	in     al,0x50
  413b97:	sbb    DWORD PTR [edi+0xd62605e],ebp
  413b9d:	xchg   edi,eax
  413b9e:	pop    edx
  413b9f:	jle    0x413b24
  413ba1:	pushf  
  413ba2:	ins    DWORD PTR es:[edi],dx
  413ba3:	icebp  
  413ba4:	test   eax,0xe224652c
  413ba9:	dec    ecx
  413baa:	dec    edi
  413bab:	inc    al
  413bad:	nop
  413bae:	into   
  413baf:	(bad)  
  413bb0:	xchg   edi,eax
  413bb1:	scas   al,BYTE PTR es:[edi]
  413bb2:	sbb    ah,bh
  413bb4:	js     0x413c21
  413bb6:	adc    BYTE PTR [edi+ebx*1],cl
  413bb9:	daa    
  413bba:	shr    BYTE PTR [esi],1
  413bbc:	pop    eax
  413bbd:	aam    0xa8
  413bbf:	iret   
  413bc0:	adc    ah,dh
  413bc2:	add    al,0x85
  413bc4:	xor    ch,BYTE PTR [ebp+0x69e1be0e]
  413bca:	push   0x6b
  413bcc:	adc    BYTE PTR [edi+0x781bf666],0x2e
  413bd3:	push   0xbf3973b7
  413bd8:	or     edx,DWORD PTR [ecx-0x118c1354]
  413bde:	outs   dx,BYTE PTR ds:[esi]
  413bdf:	and    BYTE PTR [ecx-0x3ca5f3cf],al
  413be5:	cmp    ebx,edx
  413be7:	clc    
  413be8:	repnz xchg ecx,eax
  413bea:	inc    ebp
  413beb:	jae    0x413b7f
  413bed:	push   ss
  413bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bef:	repz jmp 0x5d9e:0xf875da64
  413bf7:	push   0x3c
  413bf9:	data16 stos BYTE PTR es:[edi],al
  413bfb:	in     al,0xee
  413bfd:	mov    dh,0x90
  413bff:	lock ret 
  413c01:	cli    
  413c02:	xchg   edx,eax
  413c03:	pop    ebx
  413c04:	mov    al,ds:0x8f1aaf3b
  413c09:	sub    eax,0xb537259e
  413c0e:	mov    al,BYTE PTR ds:0x8c2a65d2
  413c14:	(bad)  
  413c15:	aad    0x64
  413c17:	test   BYTE PTR [ecx+0x1f900582],al
  413c1d:	cwde   
  413c1e:	sbb    dh,dl
  413c20:	icebp  
  413c21:	call   0x695b:0x17ade1be
  413c28:	inc    eax
  413c29:	mov    esi,0xd5e80fbf
  413c2e:	add    edi,DWORD PTR [esi-0x5ac5712e]
  413c34:	pop    edx
  413c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c36:	fmul   QWORD PTR [esi]
  413c38:	xchg   esp,eax
  413c39:	mov    ebx,0xb6cc5b20
  413c3e:	or     cl,BYTE PTR [edi+ecx*8+0x52c197d1]
  413c45:	mov    eax,ds:0x7f804b19
  413c4a:	jl     0x413bf3
  413c4c:	dec    edx
  413c4d:	cmp    al,0x3f
  413c4f:	out    0x61,eax
  413c51:	jne    0x413c7e
  413c53:	inc    ebx
  413c54:	push   cs
  413c55:	inc    esp
  413c56:	sub    eax,0x1da7eae9
  413c5b:	addr16 test eax,0x9931a317
  413c61:	inc    ebx
  413c62:	cmc    
  413c63:	or     eax,edi
  413c65:	jb     0x413ca2
  413c67:	mov    bh,0xe9
  413c69:	dec    esi
  413c6a:	xor    al,BYTE PTR [edi-0x221153c6]
  413c70:	call   DWORD PTR [ecx-0xd]
  413c73:	dec    ebp
  413c74:	sti    
  413c75:	push   ds
  413c76:	xchg   edi,eax
  413c77:	xchg   esi,eax
  413c78:	gs push 0xdf2ce9d4
  413c7e:	mov    edi,0xf70d0e9c
  413c83:	fucom  st(1)
  413c85:	in     al,0xb7
  413c87:	add    al,0x2
  413c89:	sti    
  413c8a:	fisubr WORD PTR [eax-0x7956117]
  413c90:	popf   
  413c91:	xchg   ecx,eax
  413c92:	popa   
  413c93:	cwde   
  413c94:	fiadd  WORD PTR [ebx+0x10]
  413c97:	cli    
  413c98:	fbld   TBYTE PTR [ecx-0x3b]
  413c9b:	js     0x413cdc
  413c9d:	adc    edi,DWORD PTR [edx+ebx*4-0x1]
  413ca1:	mov    eax,0x9efb7e68
  413ca6:	jle    0x413cd6
  413ca8:	fldlg2 
  413caa:	xchg   ebx,eax
  413cab:	daa    
  413cac:	aas    
  413cad:	call   0xaad90a77
  413cb2:	inc    ebx
  413cb3:	hlt    
  413cb4:	sbb    eax,0x346a4e18
  413cb9:	xlat   BYTE PTR ds:[ebx]
  413cba:	es cmp eax,0x74565d72
  413cc0:	test   eax,0x659b4230
  413cc5:	push   ebp
  413cc6:	adc    edi,DWORD PTR [ecx]
  413cc8:	sub    bh,BYTE PTR [edx-0x48]
  413ccb:	lgs    eax,FWORD PTR [edi]
  413cce:	out    0x98,al
  413cd0:	aas    
  413cd1:	cmp    BYTE PTR [ebx],bh
  413cd3:	inc    edx
  413cd4:	ja     0x413cac
  413cd6:	aaa    
  413cd7:	test   BYTE PTR [ecx-0x6df5a414],bl
  413cdd:	add    esi,DWORD PTR [eax-0x27c4945e]
  413ce3:	mov    ebp,esp
  413ce5:	sbb    al,0x72
  413ce7:	or     dh,BYTE PTR [esi+0x5e]
  413cea:	call   0xecf327e3
  413cef:	aad    0xd4
  413cf1:	ja     0x413cf8
  413cf3:	jecxz  0x413ce2
  413cf5:	adc    ebp,eax
  413cf7:	mov    cl,0x9
  413cf9:	push   esi
  413cfa:	mov    ds:0xbc15c7d2,al
  413cff:	xlat   BYTE PTR ds:[ebx]
  413d00:	dec    esp
  413d01:	xchg   edx,eax
  413d02:	adc    ebx,esp
  413d04:	cmp    ebx,DWORD PTR [esi]
  413d06:	jns    0x413d45
  413d08:	ins    BYTE PTR es:[edi],dx
  413d09:	mov    bh,0xca
  413d0b:	jp     0x413cea
  413d0d:	stos   DWORD PTR es:[edi],eax
  413d0e:	dec    edx
  413d0f:	or     bh,cl
  413d11:	pusha  
  413d12:	cmp    eax,0xc18bead7
  413d17:	cmp    BYTE PTR [edi+0x20b4ce2],ch
  413d1d:	(bad)  
  413d1e:	clc    
  413d1f:	call   0x380:0xced9d36b
  413d26:	loopne 0x413d67
  413d28:	inc    edx
  413d29:	outs   dx,DWORD PTR ds:[esi]
  413d2a:	xor    eax,0x4e70a747
  413d2f:	jmp    0x413cb8
  413d31:	inc    eax
  413d32:	lahf   
  413d33:	mov    ds:0x440f4064,al
  413d38:	sub    al,0x6b
  413d3a:	loope  0x413cf6
  413d3c:	scas   al,BYTE PTR es:[edi]
  413d3d:	int    0x82
  413d3f:	cmp    eax,0x8abe1d89
  413d44:	xor    eax,DWORD PTR [eax-0x4e]
  413d47:	(bad)  
  413d48:	outs   dx,BYTE PTR ds:[esi]
  413d49:	sbb    ebp,DWORD PTR [ecx-0x6b280679]
  413d4f:	loope  0x413ceb
  413d51:	rol    bl,cl
  413d53:	retf   0x1995
  413d56:	mov    BYTE PTR [ecx+0x43],0x8
  413d5a:	das    
  413d5b:	fst    QWORD PTR [eax]
  413d5d:	jp     0x413d9a
  413d5f:	sti    
  413d60:	pop    ecx
  413d61:	arpl   WORD PTR [edi+0x68a427b1],cx
  413d67:	xchg   ecx,eax
  413d68:	sbb    al,0x4b
  413d6a:	(bad)  
  413d6b:	sub    BYTE PTR [eax],ah
  413d6d:	rcr    BYTE PTR [edx],1
  413d6f:	mov    ecx,0xfb564849
  413d74:	test   DWORD PTR [ebp+esi*4-0x44],ecx
  413d78:	sub    al,0xc5
  413d7a:	rol    DWORD PTR [ebx],cl
  413d7c:	dec    eax
  413d7d:	sub    BYTE PTR ds:[ebp+edi*8+0x4a99e6ad],al
  413d85:	sbb    dh,bl
  413d87:	pusha  
  413d88:	push   edx
  413d89:	mov    ds:0x5e220ef6,eax
  413d8e:	push   esp
  413d8f:	ins    BYTE PTR es:[edi],dx
  413d90:	add    eax,0xa707231a
  413d95:	stc    
  413d96:	ss dec edx
  413d98:	fmul   QWORD PTR cs:[ebp-0x51]
  413d9c:	mov    DWORD PTR [eax+ebx*4],ebp
  413d9f:	clc    
  413da0:	icebp  
  413da1:	out    dx,al
  413da2:	mov    ebx,0x522425d3
  413da7:	mov    ebp,0xe2d6a24a
  413dac:	test   DWORD PTR [ebx+0x7],ebp
  413daf:	and    eax,0xcf8e819d
  413db4:	pop    ss
  413db5:	push   es
  413db6:	out    dx,eax
  413db7:	sbb    al,0x23
  413db9:	inc    edi
  413dba:	sbb    BYTE PTR [ebx+esi*2+0x6d],0x30
  413dbf:	jnp    0x413d95
  413dc1:	dec    ebp
  413dc2:	lods   al,BYTE PTR ds:[esi]
  413dc3:	xor    DWORD PTR [edx-0x4f],esi
  413dc6:	(bad)  
  413dc7:	mov    edx,0x316f3b98
  413dcc:	inc    ebx
  413dcd:	and    al,0x51
  413dcf:	inc    edx
  413dd0:	data16 mov bl,0x5d
  413dd3:	mov    WORD PTR [edi],?
  413dd5:	add    DWORD PTR [ebp-0x61b4525f],ecx
  413ddb:	lock xchg DWORD PTR gs:[eax-0x3597c368],edx
  413de3:	cmp    BYTE PTR [esi+0x34723012],cl
  413de9:	lods   eax,DWORD PTR ds:[esi]
  413dea:	xor    eax,0x95ea6063
  413def:	imul   eax,DWORD PTR [ebp-0x33],0x5b
  413df3:	fcomp  st(5)
  413df5:	outs   dx,BYTE PTR ds:[esi]
  413df6:	aam    0xf
  413df8:	mov    ds:0xd1475ed6,eax
  413dfd:	in     eax,0x2a
  413dff:	or     ah,dh
  413e01:	mov    WORD PTR [ecx-0x12],?
  413e04:	outs   dx,BYTE PTR ds:[esi]
  413e05:	daa    
  413e06:	stos   BYTE PTR es:[edi],al
  413e07:	fnstcw WORD PTR [ebx-0x4f474f69]
  413e0d:	(bad)  
  413e0e:	sbb    al,0xdd
  413e10:	fld    st(5)
  413e12:	xor    ecx,DWORD PTR [eax]
  413e14:	inc    ebp
  413e15:	xchg   ebp,eax
  413e16:	imul   eax,esi,0x9563791e
  413e1c:	cwde   
  413e1d:	sub    al,0xf7
  413e1f:	and    BYTE PTR [eax],cl
  413e21:	or     BYTE PTR [ebx+0x58],bl
  413e24:	fst    QWORD PTR [ecx]
  413e26:	leave  
  413e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e28:	repz dec edi
  413e2a:	xor    BYTE PTR [ecx],cl
  413e2c:	dec    eax
  413e2d:	aam    0xfd
  413e2f:	stc    
  413e30:	sbb    BYTE PTR [ebp+ecx*2+0x19],0xa8
  413e35:	in     eax,0xb2
  413e37:	(bad)  [esi+0x70]
  413e3a:	les    ecx,FWORD PTR [eax]
  413e3c:	inc    ecx
  413e3d:	shr    DWORD PTR [ebp-0x798ef61c],1
  413e43:	sti    
  413e44:	fwait
  413e45:	pop    ebp
  413e46:	(bad)  
  413e49:	add    edx,DWORD PTR [edi]
  413e4b:	pop    ebp
  413e4c:	dec    ebx
  413e4d:	mov    al,ds:0xc985961a
  413e52:	pop    ds
  413e53:	not    ch
  413e55:	test   esp,edi
  413e57:	jns    0x413de8
  413e59:	icebp  
  413e5a:	xchg   ebx,eax
  413e5b:	xor    al,0xa7
  413e5d:	mov    ebx,0xa8c091fd
  413e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e63:	xor    al,0xa6
  413e65:	adc    eax,0x8d763f54
  413e6a:	in     al,dx
  413e6b:	pop    ds
  413e6c:	pop    edx
  413e6d:	scas   eax,DWORD PTR es:[edi]
  413e6e:	nop    DWORD PTR ds:[ebp-0x225e37b0]
  413e76:	dec    eax
  413e77:	xlat   BYTE PTR ds:[ebx]
  413e78:	pop    esp
  413e79:	push   ecx
  413e7a:	xchg   ebp,eax
  413e7b:	sbb    ebp,DWORD PTR [esi+0x6c]
  413e7e:	xor    edx,ebx
  413e80:	ret    
  413e81:	adc    ah,cl
  413e83:	xchg   ecx,eax
  413e84:	mov    ecx,ecx
  413e86:	sar    BYTE PTR [ebp-0x47],1
  413e89:	aad    0x8
  413e8b:	jge    0x413e24
  413e8d:	inc    ebx
  413e8e:	sahf   
  413e8f:	inc    esi
  413e90:	in     eax,dx
  413e91:	in     al,0x89
  413e93:	gs in  eax,dx
  413e95:	je     0x413eb4
  413e97:	jnp    0x413e26
  413e99:	push   ecx
  413e9a:	popa   
  413e9b:	fdivrp st(2),st
  413e9d:	fwait
  413e9e:	aas    
  413e9f:	aam    0xd3
  413ea1:	sbb    eax,0x15dd76d6
  413ea6:	sbb    ebx,DWORD PTR [edx+edx*8-0x44e84ace]
  413ead:	xchg   ebp,eax
  413eae:	push   es
  413eaf:	xor    al,0xf
  413eb1:	test   BYTE PTR [esi],0xb8
  413eb4:	ins    DWORD PTR es:[edi],dx
  413eb5:	or     BYTE PTR [edx+0x7fbcf9eb],cl
  413ebb:	loope  0x413e6b
  413ebd:	xchg   bh,bh
  413ebf:	sub    BYTE PTR [ebx],0x3e
  413ec2:	adc    BYTE PTR [eax],ch
  413ec4:	sahf   
  413ec5:	fcmove st,st(5)
  413ec7:	mov    ecx,0xd17de02a
  413ecc:	fs xor ebp,ebx
  413ecf:	fucomi st,st(1)
  413ed1:	popa   
  413ed2:	inc    esp
  413ed3:	mov    edx,0xf69b11e5
  413ed8:	inc    ecx
  413ed9:	push   edi
  413eda:	and    bh,BYTE PTR [esi+0x1532ea46]
  413ee0:	jg     0x413eca
  413ee2:	(bad)  
  413ee3:	ret    0x5eee
  413ee6:	es mov al,0x2f
  413ee9:	add    edx,DWORD PTR [eax-0x5c]
  413eec:	les    esi,FWORD PTR [edi+0x15]
  413eef:	lods   eax,DWORD PTR ds:[esi]
  413ef0:	mov    ah,0x28
  413ef2:	inc    edi
  413ef3:	jo     0x413eab
  413ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef6:	mov    ch,0xc6
  413ef8:	jl     0x413f3d
  413efa:	inc    esi
  413efb:	sbb    edi,esi
  413efd:	mov    dl,0x2b
  413eff:	sahf   
  413f00:	add    ch,BYTE PTR [eax-0x30]
  413f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f04:	xchg   ecx,eax
  413f05:	mov    esi,0x101f6eeb
  413f0a:	mov    ebp,0x4badfaff
  413f0f:	ins    DWORD PTR es:[edi],dx
  413f10:	and    BYTE PTR [edi+eax*2-0x314de0c8],ch
  413f17:	and    al,0x66
  413f19:	jo     0x413f5f
  413f1b:	and    cl,BYTE PTR [esi+eiz*1+0x68]
  413f1f:	jmp    DWORD PTR [esp+ebx*1+0x6e311a2]
  413f26:	mov    ebp,0xec8c3e22
  413f2b:	aam    0x8b
  413f2d:	xlat   BYTE PTR ds:[ebx]
  413f2e:	pushf  
  413f2f:	aas    
  413f30:	es and edi,DWORD PTR ss:0xeed2f258
  413f38:	iret   
  413f39:	and    DWORD PTR [ebx+0x6d4f642f],esi
  413f3f:	cvttps2pi mm5,QWORD PTR [ebx+0x53aaf7fb]
  413f46:	in     eax,0x1b
  413f48:	adc    DWORD PTR [esi+eiz*4-0x30],edx
  413f4c:	ds jecxz 0x413f61
  413f4f:	test   eax,0xf246d7c
  413f54:	scas   eax,DWORD PTR es:[edi]
  413f55:	push   0xbfe285cf
  413f5a:	push   eax
  413f5b:	add    DWORD PTR [esp+ecx*8-0x16],edx
  413f5f:	sti    
  413f60:	jp     0x413f51
  413f62:	lods   eax,DWORD PTR ds:[esi]
  413f63:	add    dl,BYTE PTR [eax+0x60b5eea6]
  413f69:	popa   
  413f6a:	inc    ecx
  413f6b:	add    al,0x79
  413f6d:	scas   eax,DWORD PTR es:[edi]
  413f6e:	adc    DWORD PTR [ebp-0x7df63fc9],ebx
  413f74:	mov    al,ds:0x9db044f4
  413f79:	mov    ecx,DWORD PTR [edi+0x52]
  413f7c:	sbb    al,0x7d
  413f7e:	test   al,0x54
  413f80:	xchg   DWORD PTR [edx+0xb8942ff],edx
  413f86:	dec    ecx
  413f87:	popf   
  413f88:	es fwait
  413f8a:	popa   
  413f8b:	cmp    DWORD PTR [ecx+0x7f],eax
  413f8e:	sub    bl,bl
  413f90:	add    BYTE PTR [ecx],bl
  413f92:	and    al,0x1f
  413f94:	adc    ch,0xe5
  413f97:	mov    al,BYTE PTR [edi+ebp*4-0x75]
  413f9b:	xor    eax,0x267f1d7c
  413fa0:	jno    0x414014
  413fa2:	aad    0x14
  413fa4:	rcr    DWORD PTR [edx],1
  413fa6:	icebp  
  413fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa9:	jnp    0x413f57
  413fab:	mov    ah,0xcc
  413fad:	ret    0xb6a2
  413fb0:	push   edx
  413fb1:	and    al,0x74
  413fb3:	(bad)  
  413fb4:	mov    eax,0x8b8f327e
  413fb9:	out    dx,al
  413fba:	cdq    
  413fbb:	fs mov ch,0xfc
  413fbe:	mov    esi,0x703224c7
  413fc3:	das    
  413fc4:	mov    dh,0x3
  413fc6:	xchg   edx,eax
  413fc7:	shl    BYTE PTR [eax-0x45],0x33
  413fcb:	clc    
  413fcc:	ja     0x41402c
  413fce:	stos   DWORD PTR es:[edi],eax
  413fcf:	jmp    0xdb0d:0x14ab763d
  413fd6:	sub    eax,0xa6cfc86c
  413fdb:	arpl   WORD PTR [eax+esi*8],cx
  413fde:	aas    
  413fdf:	dec    esp
  413fe0:	jecxz  0x414021
  413fe2:	mov    ebp,0x80baeafb
  413fe7:	mov    dl,0xb1
  413fe9:	dec    esi
  413fea:	sub    DWORD PTR [esi+edi*1],esp
  413fed:	xchg   ecx,eax
  413fee:	inc    ebp
  413fef:	in     al,0xe4
  413ff1:	fdivr  DWORD PTR [edi-0x4a]
  413ff4:	inc    ebx
  413ff5:	fs iret 
  413ff7:	aaa    
  413ff8:	fldcw  WORD PTR [eax+edx*8]
  413ffb:	loopne 0x414077
  413ffd:	sbb    dl,bl
  413fff:	jecxz  0x413f8f
  414001:	jmp    0x6d40:0x9f216698
  414008:	outs   dx,DWORD PTR ds:[esi]
  414009:	xor    al,0x84
  41400b:	push   0x2b
  41400d:	push   eax
  41400e:	mov    ds:0x92bfc58f,eax
  414013:	dec    edx
  414014:	popf   
  414015:	cmp    al,BYTE PTR [edx]
  414017:	sbb    eax,0x3e82343
  41401c:	popa   
  41401d:	push   esp
  41401e:	mov    dl,0x6e
  414020:	nop
  414021:	mov    ebp,0x3903e35b
  414026:	mov    WORD PTR [ecx-0x6b],ss
  414029:	js     0x414008
  41402b:	and    esi,eax
  41402d:	fistp  QWORD PTR [ebx]
  41402f:	sbb    ch,dh
  414031:	xchg   esp,eax
  414032:	and    al,0x44
  414034:	xor    eax,0x8057226d
  414039:	pop    ds
  41403a:	dec    ebx
  41403b:	icebp  
  41403c:	cdq    
  41403d:	jmp    0x652100b3
  414042:	hlt    
  414043:	xchg   ecx,eax
  414044:	loop   0x413fdf
  414046:	push   edi
  414047:	jns    0x41408c
  414049:	mov    ebx,0xde1b2914
  41404e:	or     DWORD PTR [ecx+eiz*1],ecx
  414051:	dec    edi
  414052:	and    bh,ah
  414054:	sub    ch,BYTE PTR [edx-0xebb219c]
  41405a:	in     al,0xbc
  41405c:	dec    esi
  41405d:	push   ebp
  41405e:	test   eax,0x6e24ce07
  414063:	es xor cl,ah
  414066:	cli    
  414067:	pop    ss
  414068:	jnp    0x414089
  41406a:	push   cs
  41406b:	cmp    eax,0xa6013ed2
  414070:	cld    
  414071:	les    edi,FWORD PTR [ecx]
  414073:	ret    
  414074:	sub    ebp,DWORD PTR [esp+ebx*4+0x3c53fc37]
  41407b:	not    BYTE PTR [ebp+0x6]
  41407e:	bnd jo 0x4140f4
  414081:	scas   eax,DWORD PTR es:[edi]
  414082:	test   al,0x5c
  414084:	fidivr WORD PTR [esi]
  414086:	dec    eax
  414087:	adc    dl,BYTE PTR [ebp+0x12603d85]
  41408d:	scas   al,BYTE PTR es:[edi]
  41408e:	cwde   
  41408f:	adc    eax,0xf204d5cb
  414094:	cs ss leave 
  414097:	mov    DWORD PTR [edx-0x7f],0x92ce76bf
  41409e:	jp     0x4140f3
  4140a0:	shl    BYTE PTR [eax-0x60],1
  4140a3:	loop   0x414044
  4140a5:	add    ecx,DWORD PTR [ecx+0x1a]
  4140a8:	xchg   edi,eax
  4140a9:	je     0x414079
  4140ab:	fs xor al,0x96
  4140ae:	aam    0x45
  4140b0:	ds scas al,BYTE PTR es:[edi]
  4140b2:	push   esi
  4140b3:	es inc esp
  4140b5:	pop    ss
  4140b6:	rcr    DWORD PTR [esi],1
  4140b8:	stos   DWORD PTR es:[edi],eax
  4140b9:	inc    esi
  4140ba:	rol    DWORD PTR [esi-0x506cf1e5],1
  4140c0:	or     DWORD PTR [ebx-0x18],0x47297728
  4140c7:	ret    0xecbf
  4140ca:	push   edx
  4140cb:	pop    ebp
  4140cc:	dec    edx
  4140cd:	pop    ebx
  4140ce:	cli    
  4140cf:	push   0xa7a83f70
  4140d4:	out    0x57,al
  4140d6:	lahf   
  4140d7:	mov    al,ds:0xea7c90b8
  4140dc:	stc    
  4140dd:	push   ds
  4140de:	mov    dl,0x93
  4140e0:	sbb    al,0xd9
  4140e2:	outs   dx,BYTE PTR ds:[esi]
  4140e3:	idiv   BYTE PTR [ecx+esi*8-0x38b61bd5]
  4140ea:	aam    0x14
  4140ec:	add    edx,0xffffffc5
  4140ef:	cmp    al,0x8d
  4140f1:	sbb    eax,0x2d492ee3
  4140f6:	lods   al,BYTE PTR ds:[esi]
  4140f7:	pop    ebp
  4140f8:	mov    edi,0x7e17b262
  4140fd:	mov    esp,0xeeb59d35
  414102:	into   
  414103:	push   edx
  414104:	add    eax,0xb640786d
  414109:	scas   eax,DWORD PTR es:[edi]
  41410a:	imul   esi,eax,0xc4482eb1
  414110:	ss push esi
  414112:	pop    ebx
  414113:	fcmovnu st,st(7)
  414115:	mov    ecx,0x2c7b0f12
  41411a:	inc    esi
  41411b:	jmp    0xb3996d45
  414120:	js     0x41416f
  414122:	jge    0x414185
  414124:	in     al,0x99
  414126:	xchg   ebp,eax
  414127:	jge    0x41410d
  414129:	cmc    
  41412a:	into   
  41412b:	pop    edx
  41412c:	jle    0x41417c
  41412e:	or     al,0xb2
  414130:	fild   WORD PTR ss:[eax-0x5e9b11f3]
  414137:	xchg   esp,eax
  414138:	pop    esi
  414139:	sbb    BYTE PTR [ecx-0x1d],dl
  41413c:	fist   DWORD PTR [esi+0x13119dd3]
  414142:	dec    edi
  414143:	imul   ebx,DWORD PTR [ebx+0x52],0xd9b1dbfe
  41414a:	jb     0x414133
  41414c:	xchg   ebx,eax
  41414d:	lods   eax,DWORD PTR ds:[esi]
  41414e:	jmp    0xc4bda149
  414153:	cmp    BYTE PTR [ebx],ah
  414155:	dec    edx
  414156:	gs out dx,eax
  414158:	(bad)  
  414159:	mov    ds:0xf9bbe63f,eax
  41415e:	(bad)
  414162:	iret   
  414163:	test   eax,0xb64840e6
  414168:	stos   DWORD PTR es:[edi],eax
  414169:	js     0x41413c
  41416b:	lea    edi,[ecx+0x78]
  41416e:	add    DWORD PTR [edi],edx
  414170:	adc    BYTE PTR [ebx],ch
  414172:	jmp    0xb9c5f510
  414177:	or     ebx,edx
  414179:	icebp  
  41417a:	sbb    BYTE PTR [ecx-0x6b],ah
  41417d:	stos   DWORD PTR es:[edi],eax
  41417e:	int3   
  41417f:	in     eax,dx
  414180:	rol    DWORD PTR [edi],1
  414182:	jmp    DWORD PTR [edi+0x12]
  414185:	imul   ebp,DWORD PTR [eax+0x6c],0xffffffec
  414189:	mov    BYTE PTR [eax+0x27],dl
  41418c:	xchg   esi,eax
  41418d:	je     0x414118
  41418f:	mov    dl,0x44
  414191:	mov    bh,0x76
  414193:	out    dx,eax
  414194:	adc    ecx,DWORD PTR [edi-0x266e39ce]
  41419a:	xor    ch,BYTE PTR [ebp+0x20d1e44]
  4141a0:	sub    eax,0x824ee174
  4141a5:	aam    0x6a
  4141a7:	fnstsw WORD PTR [ecx+0x2d]
  4141aa:	mov    ah,0xf5
  4141ac:	in     al,0x56
  4141ae:	sar    BYTE PTR [edi+0x18],cl
  4141b1:	aaa    
  4141b2:	out    dx,eax
  4141b3:	cmp    dh,dh
  4141b5:	pop    edx
  4141b6:	jl     0x4141b3
  4141b8:	push   0x5c
  4141ba:	lds    esp,FWORD PTR [edi+0x60ffee3]
  4141c0:	xchg   edx,eax
  4141c1:	inc    eax
  4141c2:	scas   eax,DWORD PTR es:[edi]
  4141c3:	ret    
  4141c4:	sbb    DWORD PTR [edx],0xffffffa0
  4141c7:	cmp    eax,0xd4c5fa6e
  4141cc:	cmp    BYTE PTR [edi+0x34],al
  4141cf:	cs mov esi,0xc690e001
  4141d5:	(bad)  
  4141d6:	mov    ebx,0x2251817
  4141db:	cmc    
  4141dc:	adc    eax,0xf8cd89c6
  4141e1:	or     al,0x91
  4141e3:	cld    
  4141e4:	inc    esp
  4141e5:	mov    ebx,0xe6fc3ca8
  4141ea:	sub    eax,0xf5cc84bb
  4141ef:	jle    0x4141c9
  4141f1:	inc    esi
  4141f2:	(bad)  
  4141f3:	arpl   WORD PTR [ebx+0x3d],di
  4141f6:	dec    edi
  4141f7:	ins    DWORD PTR es:[edi],dx
  4141f8:	shr    DWORD PTR [ecx],1
  4141fa:	test   eax,0x19d755c7
  4141ff:	repz pop ds
  414201:	mov    ah,0x4e
  414203:	ss inc esp
  414205:	fnstcw WORD PTR [ecx+ecx*4]
  414208:	test   eax,0xb97181d1
  41420d:	inc    ecx
  41420e:	add    al,0xa2
  414210:	or     DWORD PTR [edi+0x43397468],eax
  414216:	das    
  414217:	mov    BYTE PTR [ebx+eax*4],dl
  41421a:	or     al,0x30
  41421c:	int    0x4d
  41421e:	pop    edx
  41421f:	xchg   ebp,eax
  414220:	pop    eax
  414221:	repnz out 0xa,al
  414224:	cld    
  414225:	pop    ebp
  414226:	clc    
  414227:	push   es
  414228:	or     DWORD PTR [eax-0x2f3756f7],ebx
  41422e:	xor    ecx,DWORD PTR [ebx+0x1a]
  414231:	shl    DWORD PTR [edi],0x47
  414234:	sbb    BYTE PTR [eax-0x6ace3614],0xe9
  41423b:	in     al,dx
  41423c:	add    ah,dh
  41423e:	nop
  41423f:	jle    0x4142b7
  414241:	out    0x77,al
  414243:	in     eax,0xe3
  414245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414246:	inc    eax
  414247:	mov    bl,0x30
  414249:	test   al,0xb
  41424b:	cs pop es
  41424d:	daa    
  41424e:	xchg   ecx,eax
  41424f:	iret   
  414250:	dec    edi
  414251:	push   ecx
  414252:	(bad)  ds:[esp+esi*1+0x14]
  414258:	add    al,dh
  41425a:	xchg   ebp,eax
  41425b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41425c:	xor    BYTE PTR [edx-0x323ce7b5],dh
  414262:	jne    0x4142bb
  414264:	sbb    BYTE PTR [edx+0x2f5a8f8],ch
  41426a:	fwait
  41426b:	das    
  41426c:	leave  
  41426d:	adc    BYTE PTR [esi+0x47],dh
  414270:	sbb    al,0xfa
  414272:	xor    eax,0x3d27da34
  414277:	pop    esp
  414278:	mov    bh,bl
  41427a:	lahf   
  41427b:	inc    eax
  41427c:	push   edi
  41427d:	lods   al,BYTE PTR ds:[esi]
  41427e:	and    ah,BYTE PTR [esi-0x4]
  414281:	sti    
  414282:	jle    0x4142d6
  414284:	dec    esi
  414285:	mov    ebx,0x861ca183
  41428a:	xchg   edi,eax
  41428b:	xor    eax,0xb20eb50b
  414290:	(bad)  
  414291:	loop   0x414299
  414293:	outs   dx,BYTE PTR ds:[esi]
  414294:	je     0x414281
  414296:	mov    eax,0xfcf85d84
  41429b:	cli    
  41429c:	adc    al,0xae
  41429e:	loop   0x414262
  4142a0:	pop    es
  4142a1:	test   DWORD PTR [edx+0x7],eax
  4142a4:	pop    ecx
  4142a5:	dec    edx
  4142a6:	jge    0x414254
  4142a8:	idiv   esp
  4142aa:	std    
  4142ab:	inc    edi
  4142ac:	adc    al,BYTE PTR gs:[edx]
  4142af:	icebp  
  4142b0:	adc    al,0x3b
  4142b2:	aad    0xf9
  4142b4:	jl     0x4142a6
  4142b6:	fistp  QWORD PTR [esi+0x5d7150f2]
  4142bc:	fistp  QWORD PTR [eax-0x1507b611]
  4142c2:	xchg   ebx,eax
  4142c3:	sahf   
  4142c4:	push   edx
  4142c5:	(bad)  
  4142c6:	jl     0x414327
  4142c8:	sahf   
  4142c9:	test   BYTE PTR [ecx+0x759fab0f],0x2c
  4142d0:	ja     0x4142eb
  4142d2:	or     bl,BYTE PTR [esi-0x3f]
  4142d5:	(bad)  
  4142d6:	sub    al,cl
  4142d8:	adc    BYTE PTR [ebx+0x7ac7cee5],0xd9
  4142df:	xchg   DWORD PTR [si+0x5d],edx
  4142e3:	cmp    BYTE PTR [ecx-0x8],dl
  4142e6:	mov    edi,DWORD PTR [esp+edi*8]
  4142e9:	(bad)  
  4142ea:	lahf   
  4142eb:	sbb    BYTE PTR [edx+0x3b],bh
  4142ee:	std    
  4142ef:	leave  
  4142f0:	dec    esp
  4142f1:	or     bl,BYTE PTR [ebp-0x41a2abe5]
  4142f7:	and    al,0x88
  4142f9:	sbb    ebp,DWORD PTR [ebp+0xf60880a]
  4142ff:	push   cs
  414300:	and    BYTE PTR [esi],dl
  414302:	clc    
  414303:	aas    
  414304:	bound  esp,QWORD PTR [ecx+0x74664b0f]
  41430a:	inc    ebp
  41430b:	enter  0x7218,0x15
  41430f:	scas   al,BYTE PTR es:[edi]
  414310:	mov    bl,0xe3
  414312:	in     al,0xf1
  414314:	mov    esp,0x667105ff
  414319:	fild   QWORD PTR [esi+0x14]
  41431c:	adc    eax,edi
  41431e:	xchg   esi,eax
  41431f:	push   0x24
  414321:	sbb    dl,dh
  414323:	stos   BYTE PTR es:[edi],al
  414324:	stos   DWORD PTR es:[edi],eax
  414325:	scas   eax,DWORD PTR es:[edi]
  414326:	jmp    0x817f6a49
  41432b:	test   eax,0xa2b72347
  414330:	clc    
  414331:	pop    es
  414332:	mov    BYTE PTR [ebp+0x46],dl
  414335:	cwde   
  414336:	shl    BYTE PTR [ecx-0x2da72066],0x82
  41433d:	inc    edi
  41433e:	mov    BYTE PTR [ebx],ch
  414340:	inc    ebp
  414341:	cmp    al,0x3
  414343:	retf   0xf380
  414346:	cdq    
  414347:	and    BYTE PTR [ebp+0x6f450f9e],dh
  41434d:	or     ch,dl
  41434f:	inc    edx
  414350:	jecxz  0x4143c2
  414352:	mov    cl,0x33
  414354:	ret    0xceb2
  414357:	xchg   ebx,eax
  414358:	lods   al,BYTE PTR ds:[esi]
  414359:	adc    al,0xf7
  41435b:	popf   
  41435c:	repz popf 
  41435e:	xor    ebx,ebx
  414360:	mov    bh,0x8c
  414362:	(bad)  
  414363:	adc    DWORD PTR [edx-0x5],ebx
  414366:	pop    edx
  414367:	mov    ah,0xd1
  414369:	lods   al,BYTE PTR ds:[esi]
  41436a:	pop    ecx
  41436b:	ret    0x28cf
  41436e:	ret    0x9fa5
  414371:	test   ebp,esi
  414373:	popf   
  414374:	and    dl,BYTE PTR [eax+0x6715da36]
  41437a:	jecxz  0x4143cb
  41437c:	js     0x41433a
  41437e:	lea    edx,[ebx-0x2193a838]
  414384:	push   ebx
  414385:	and    al,0x3f
  414387:	mov    al,ds:0x27580745
  41438c:	dec    edi
  41438d:	pusha  
  41438e:	bound  ebp,QWORD PTR [edx-0x1cd588a5]
  414394:	xchg   esp,eax
  414395:	dec    edx
  414396:	xchg   edi,eax
  414397:	xor    ecx,DWORD PTR ds:0x104c6ee1
  41439d:	add    DWORD PTR [ecx],ebx
  41439f:	push   ebx
  4143a0:	sbb    BYTE PTR [esi+0x6487c524],0xba
  4143a7:	mov    ds:0xa8024654,al
  4143ac:	or     esp,DWORD PTR [esi-0x31cadf5b]
  4143b2:	inc    ebp
  4143b3:	cmp    DWORD PTR [esi+eiz*2+0x15],esp
  4143b7:	lods   eax,DWORD PTR ds:[esi]
  4143b8:	mov    ds:0x75189cf3,eax
  4143bd:	sub    dh,BYTE PTR ds:0x49b97720
  4143c3:	aad    0x64
  4143c5:	shld   DWORD PTR [edi],eax,0x1e
  4143c9:	dec    ebx
  4143ca:	dec    ebx
  4143cb:	xor    dl,BYTE PTR [edi-0x68]
  4143ce:	daa    
  4143cf:	ds adc al,0x42
  4143d2:	inc    ecx
  4143d3:	cmp    al,0x60
  4143d5:	push   edx
  4143d6:	jle    0x414410
  4143d8:	pop    esp
  4143d9:	scas   eax,DWORD PTR es:[edi]
  4143da:	jge    0x414383
  4143dc:	xlat   BYTE PTR ds:[ebx]
  4143dd:	lods   al,BYTE PTR ds:[esi]
  4143de:	cmc    
  4143df:	out    0xa4,eax
  4143e1:	mov    edi,0x350f46ed
  4143e6:	enter  0xe63f,0x8b
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	pushf  
  4143ec:	cs icebp 
  4143ee:	adc    ah,cl
  4143f0:	in     al,0x4b
  4143f2:	dec    dl
  4143f4:	xchg   esi,eax
  4143f5:	stos   BYTE PTR es:[edi],al
  4143f6:	pop    ecx
  4143f7:	push   cs
  4143f8:	push   ebp
  4143f9:	jb     0x414382
  4143fb:	cmp    esp,DWORD PTR [edx+0x77]
  4143fe:	jo     0x414447
  414400:	scas   al,BYTE PTR es:[edi]
  414401:	clc    
  414402:	imul   esi,DWORD PTR [ebx-0x2d],0x3e
  414406:	inc    ebx
  414407:	mov    ch,0xfb
  414409:	mov    es,WORD PTR [esi]
  41440b:	arpl   WORD PTR [ecx-0x17763fb6],ax
  414411:	mov    DWORD PTR [edx+0x4e],esp
  414414:	fidiv  DWORD PTR [edx+esi*8-0x1103994a]
  41441b:	adc    BYTE PTR [ecx+0x292228c7],ch
  414421:	pop    ss
  414422:	lods   eax,DWORD PTR ds:[esi]
  414423:	out    dx,al
  414424:	xchg   edx,eax
  414425:	idiv   BYTE PTR [edi+0x2c824eeb]
  41442b:	mov    dh,0xb2
  41442d:	xor    eax,0x59f5f807
  414432:	mov    WORD PTR [eax-0x3ed96ecf],es
  414438:	icebp  
  414439:	out    dx,eax
  41443a:	pop    ebx
  41443b:	mov    ch,0xc5
  41443d:	int    0xa
  41443f:	cmp    edx,DWORD PTR [edi-0x30]
  414442:	outs   dx,DWORD PTR ds:[esi]
  414443:	adc    al,0x43
  414445:	mov    esp,0xce180f01
  41444a:	and    eax,0x5e3e9ca1
  41444f:	adc    dl,al
  414451:	(bad)  
  414452:	shl    DWORD PTR [eax-0x62],1
  414455:	and    BYTE PTR [esi],dh
  414457:	xor    eax,0x244327a9
  41445c:	jo     0x4143e5
  41445e:	int    0x1b
  414460:	(bad)  
  414462:	cwde   
  414463:	pop    esi
  414464:	lods   al,BYTE PTR ds:[esi]
  414465:	inc    esp
  414466:	xchg   edi,eax
  414467:	xchg   esp,eax
  414468:	xchg   DWORD PTR [edi+ecx*2+0x7b2c2e0],ecx
  41446f:	(bad)  
  414470:	adc    BYTE PTR [edx-0x76f978a0],dh
  414476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414477:	xchg   BYTE PTR ds:0x8b9feb96,dl
  41447d:	dec    edi
  41447e:	xor    eax,0x54f2c403
  414483:	out    0x29,al
  414485:	out    dx,eax
  414486:	loopne 0x4144dd
  414488:	shl    BYTE PTR [edx+eax*8-0x49383ca6],0xdd
  414490:	mov    ds:0xca0fbd75,eax
  414495:	into   
  414496:	jo     0x4144ef
  414498:	jne    0x414486
  41449a:	or     BYTE PTR [ebp+0x7df97611],ch
  4144a0:	jb     0x4144a7
  4144a2:	icebp  
  4144a3:	fwait
  4144a4:	jae    0x414520
  4144a6:	aaa    
  4144a7:	push   0xced572f4
  4144ac:	push   eax
  4144ad:	aas    
  4144ae:	xor    ebp,ebp
  4144b0:	lock std 
  4144b2:	push   esi
  4144b3:	sahf   
  4144b4:	pop    ecx
  4144b5:	sub    dh,bl
  4144b7:	mov    ch,0x41
  4144b9:	jb     0x41445c
  4144bb:	outs   dx,BYTE PTR ds:[esi]
  4144bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144bd:	push   es
  4144be:	adc    DWORD PTR [edx-0x44],0xffffffb2
  4144c2:	es dec esi
  4144c4:	dec    ebp
  4144c5:	pop    ebp
  4144c6:	pop    esi
  4144c7:	lahf   
  4144c8:	dec    ecx
  4144c9:	movsx  edi,BYTE PTR [eax]
  4144cc:	mov    ah,0xbb
  4144ce:	in     eax,dx
  4144cf:	out    dx,al
  4144d0:	je     0x41452d
  4144d2:	inc    edx
  4144d3:	jb     0x4144ab
  4144d5:	inc    edx
  4144d6:	inc    ecx
  4144d7:	mov    al,0x3b
  4144d9:	das    
  4144da:	or     esi,DWORD PTR [ebp-0x310906c9]
  4144e0:	mov    ebx,0x6b78f9c9
  4144e5:	dec    edx
  4144e6:	jae    0x4144c0
  4144e8:	bound  ecx,QWORD PTR [ecx+ebp*1+0x512b791]
  4144ef:	inc    edx
  4144f0:	mov    dl,0xd0
  4144f2:	std    
  4144f3:	ds jmp 0xb495ba6b
  4144f9:	mov    esi,edi
  4144fb:	cmp    dh,dl
  4144fd:	out    0xc5,al
  4144ff:	sahf   
  414500:	jns    0x4144dd
  414502:	mov    al,ds:0xb7ed14cb
  414507:	adc    BYTE PTR [ecx-0x48],al
  41450a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41450b:	xor    eax,0xd7c0992e
  414510:	push   edi
  414511:	sbb    edi,DWORD PTR [ebp+0x71447b2c]
  414517:	fld    TBYTE PTR [ecx+0x14]
  41451a:	push   esi
  41451b:	jae    0x41455f
  41451d:	aam    0xcd
  41451f:	dec    ecx
  414520:	call   0x8a05:0xefa03682
  414527:	cmp    BYTE PTR [esi-0x76c7a61d],0x2d
  41452e:	cs jo  0x4144f8
  414531:	jecxz  0x4144f3
  414533:	loopne 0x4145a7
  414535:	xchg   esp,eax
  414536:	pop    edx
  414537:	add    al,0x5e
  414539:	inc    esp
  41453a:	jl     0x414536
  41453c:	cld    
  41453d:	xchg   DWORD PTR [edi+0x33],esi
  414540:	push   0xd2eb91f7
  414545:	(bad)  
  414546:	repnz stos DWORD PTR es:[edi],eax
  414548:	mov    esp,0xeb474312
  41454d:	sahf   
  41454e:	(bad)  
  41454f:	and    ecx,ebp
  414551:	aaa    
  414552:	cmp    BYTE PTR [esi],bl
  414554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414555:	inc    edi
  414556:	fiadd  DWORD PTR ds:0xd8ba4666
  41455c:	shl    BYTE PTR [ecx],cl
  41455e:	in     al,0xa5
  414560:	shl    dl,1
  414562:	ficomp DWORD PTR [ebx-0x31]
  414565:	pop    ebx
  414566:	js     0x414575
  414568:	adc    BYTE PTR [edx+0x4b73abec],cl
  41456e:	out    dx,al
  41456f:	sbb    ebx,edx
  414571:	xchg   edx,eax
  414572:	cmp    DWORD PTR [ebx],esi
  414574:	mov    dl,0x9a
  414576:	adc    cl,0x6d
  414579:	ja     0x4145e2
  41457b:	cmp    edx,DWORD PTR [ebp+eiz*1-0x33]
  41457f:	(bad)  
  414580:	mov    cl,0x60
  414582:	out    dx,eax
  414583:	lea    esp,[ebx-0x13]
  414586:	ins    BYTE PTR es:[edi],dx
  414587:	cmp    ebp,edx
  414589:	and    dl,bl
  41458b:	fbstp  TBYTE PTR ds:0xde544a1
  414591:	or     dh,al
  414593:	imul   esi,DWORD PTR [edi+0x16],0x10bacabc
  41459a:	cs mov esi,0x147cec17
  4145a0:	outs   dx,DWORD PTR ds:[esi]
  4145a1:	pushf  
  4145a2:	xchg   edx,eax
  4145a3:	inc    ebx
  4145a4:	and    ch,BYTE PTR [ecx*8-0x7b4425ea]
  4145ab:	mov    esp,0x346c33db
  4145b0:	inc    eax
  4145b1:	sub    BYTE PTR gs:[edi],dl
  4145b4:	pop    ecx
  4145b5:	arpl   WORD PTR [ebx],sp
  4145b7:	(bad)  [esi+0x51]
  4145ba:	into   
  4145bb:	imul   ebp,DWORD PTR [esi+eiz*2+0x5e7d378e],0x54
  4145c3:	add    BYTE PTR [edi+0x72c2e54c],bl
  4145c9:	jns    0x414559
  4145cb:	cli    
  4145cc:	xchg   ecx,eax
  4145cd:	nop
  4145ce:	fst    QWORD PTR [ecx+0x58]
  4145d1:	add    eax,esi
  4145d3:	inc    eax
  4145d4:	jg     0x4145ac
  4145d6:	stc    
  4145d7:	xchg   ecx,eax
  4145d8:	lahf   
  4145d9:	and    al,0x99
  4145db:	mov    ch,0xff
  4145dd:	and    edi,esp
  4145df:	dec    esp
  4145e0:	push   0x710f6d3c
  4145e5:	inc    edx
  4145e6:	or     al,0x91
  4145e8:	stos   DWORD PTR es:[edi],eax
  4145e9:	pop    eax
  4145ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145eb:	pop    edi
  4145ec:	sbb    eax,0x81b88e86
  4145f1:	adc    bh,BYTE PTR [edi]
  4145f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f4:	sbb    ebp,ecx
  4145f6:	in     al,0xc7
  4145f8:	jp     0x414603
  4145fa:	adc    eax,0xbfa0a281
  4145ff:	ds popa 
  414601:	sub    al,0xf2
  414603:	push   eax
  414604:	xor    edx,0xffffffa1
  414607:	pop    eax
  414608:	pop    edi
  414609:	mov    eax,ds:0xcd62a61f
  41460e:	cmp    DWORD PTR [ebx],edi
  414610:	lock mov cl,0x6c
  414613:	lods   al,BYTE PTR ds:[esi]
  414614:	xchg   esi,eax
  414615:	dec    edx
  414616:	or     BYTE PTR [edi+eax*4],cl
  414619:	enter  0x6f8d,0x44
  41461d:	sbb    BYTE PTR [ecx],bl
  41461f:	xor    ah,BYTE PTR [edi+0x12db4714]
  414625:	int    0x39
  414627:	dec    edi
  414628:	shl    BYTE PTR [ebx+0x2e],1
  41462b:	and    al,0x3d
  41462d:	stc    
  41462e:	fadd   QWORD PTR [ebx]
  414630:	sbb    BYTE PTR [eax-0x1469be84],al
  414636:	fsubr  st(0),st
  414638:	imul   edi,DWORD PTR [edx+0x48],0x6571b79a
  41463f:	pop    ecx
  414640:	stos   BYTE PTR es:[edi],al
  414641:	in     al,dx
  414642:	cld    
  414643:	nop
  414644:	call   0xe5948bf0
  414649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41464a:	in     al,0xbf
  41464c:	jb     0x414646
  41464e:	daa    
  41464f:	adc    BYTE PTR [esi],ah
  414651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414652:	jmp    0x7128:0x7df8d4ae
  414659:	imul   ebp,DWORD PTR [eax-0x4d],0xf7530896
  414660:	sub    bh,BYTE PTR [ebx]
  414662:	xchg   edx,eax
  414663:	add    DWORD PTR [esi],0x8d540205
  414669:	ins    DWORD PTR es:[edi],dx
  41466a:	test   eax,0x622e66bc
  41466f:	aad    0x1d
  414671:	mov    bh,0xb
  414673:	jmp    0x4146e6
  414675:	loopne 0x4145fd
  414677:	aas    
  414678:	arpl   WORD PTR [edi-0x1d],bp
  41467b:	(bad)  
  41467c:	int3   
  41467d:	dec    ebp
  41467e:	add    DWORD PTR [edi],ebx
  414680:	xlat   BYTE PTR ds:[ebx]
  414681:	sub    DWORD PTR [edi-0x73],ecx
  414684:	dec    ebp
  414685:	lock and DWORD PTR [ebx-0x46],0x5c
  41468a:	jge    0x4146f5
  41468c:	lock icebp 
  41468e:	repnz stc 
  414690:	mov    es,WORD PTR [eax-0x70]
  414693:	pop    esp
  414694:	inc    ebp
  414695:	xchg   edi,eax
  414696:	sar    ebx,1
  414698:	stc    
  414699:	fldcw  WORD PTR [esi-0x281cb28c]
  41469f:	int3   
  4146a0:	push   eax
  4146a1:	daa    
  4146a2:	xchg   ebp,eax
  4146a3:	fcomip st,st(6)
  4146a5:	bound  esp,QWORD PTR [esi+0x11]
  4146a8:	and    edi,DWORD PTR [eax-0x51fbeef2]
  4146ae:	push   es
  4146af:	adc    edx,DWORD PTR [edi]
  4146b1:	es push esp
  4146b3:	scas   al,BYTE PTR es:[edi]
  4146b4:	sbb    al,0xd6
  4146b6:	mov    ebp,0xfb984557
  4146bb:	add    al,0x6d
  4146bd:	mov    DWORD PTR [ebx-0x73a57bb5],esp
  4146c3:	mov    DWORD PTR [esi-0x1043bdd3],ebp
  4146c9:	or     dh,bl
  4146cb:	mov    DWORD PTR [eax-0x43],0x68892b23
  4146d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146d3:	aas    
  4146d4:	mov    ds:0xc2804bbf,eax
  4146d9:	popf   
  4146da:	fsub   QWORD PTR [edi+0x3c]
  4146dd:	leave  
  4146de:	jno    0x41470a
  4146e0:	ret    
  4146e1:	jl     0x41472f
  4146e3:	inc    esi
  4146e4:	pop    edi
  4146e5:	add    eax,0xdf84c0c5
  4146ea:	sub    edx,DWORD PTR [esi]
  4146ec:	int3   
  4146ed:	nop
  4146ee:	test   bh,dl
  4146f0:	call   0x711d:0xa06164aa
  4146f7:	rcl    DWORD PTR [eax+0x35965333],0xf5
  4146fe:	push   esp
  4146ff:	xor    DWORD PTR [esi-0x3b69531a],edx
  414705:	out    dx,eax
  414706:	sub    ah,dl
  414708:	in     eax,dx
  414709:	cmc    
  41470a:	mov    edx,0x37da0a16
  41470f:	repnz mov bh,0x86
  414712:	mov    DWORD PTR ds:0x94d64acd,ecx
  414718:	sahf   
  414719:	xor    eax,0xac208044
  41471e:	call   0x6f33228d
  414723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414724:	shl    BYTE PTR [ecx],cl
  414726:	(bad)  
  414727:	xchg   edi,eax
  414728:	fadd   QWORD PTR [esi]
  41472a:	cdq    
  41472b:	push   ebx
  41472c:	sbb    eax,0xb247b50a
  414731:	stc    
  414732:	dec    edx
  414733:	pop    ecx
  414734:	lods   al,BYTE PTR ds:[esi]
  414735:	mov    dl,0x6d
  414737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414738:	ret    
  414739:	push   ds
  41473a:	mov    ebp,0xd61447ad
  41473f:	mov    edi,0x817c5847
  414744:	je     0x414775
  414746:	or     al,0xe1
  414748:	push   ecx
  414749:	adc    eax,0xfbfb19bf
  41474e:	pop    ebx
  41474f:	daa    
  414750:	push   es
  414751:	sub    esi,DWORD PTR [ebx-0x2271ce25]
  414757:	stc    
  414758:	aaa    
  414759:	pop    es
  41475a:	pop    ecx
  41475b:	push   0xfffffff2
  41475d:	imul   esi,DWORD PTR [edx-0xf],0xffffffac
  414761:	fst    QWORD PTR [ebx-0x23b34076]
  414767:	(bad)  
  414768:	inc    ecx
  414769:	jp     0x414727
  41476b:	dec    ecx
  41476c:	push   esp
  41476d:	jae    0x41472b
  41476f:	and    eax,0x5ba0d1f4
  414774:	aad    0x4
  414776:	test   DWORD PTR [ebx],ecx
  414778:	cmp    al,0xa1
  41477a:	pusha  
  41477b:	retf   0x24c4
  41477e:	outs   dx,DWORD PTR ds:[esi]
  41477f:	and    BYTE PTR [edi+0x48db7b0f],bl
  414785:	mov    WORD PTR [ebx-0x39],fs
  414788:	daa    
  414789:	add    eax,ebp
  41478b:	and    BYTE PTR [edi-0x6b],cl
  41478e:	outs   dx,DWORD PTR ds:[esi]
  41478f:	jmp    0xafca1185
  414794:	push   0xcd4997d6
  414799:	ins    BYTE PTR es:[edi],dx
  41479a:	mov    esi,0xd8684590
  41479f:	jb     0x41480b
  4147a1:	scas   al,BYTE PTR es:[edi]
  4147a2:	sub    dh,ah
  4147a4:	leave  
  4147a5:	adc    ch,ah
  4147a7:	pop    esi
  4147a8:	sub    edx,DWORD PTR [ebp+ebx*4-0x1331e70]
  4147af:	out    0x61,eax
  4147b1:	xchg   BYTE PTR [esi+0x68],bl
  4147b4:	pop    esi
  4147b5:	and    al,0x33
  4147b8:	mov    edi,0x28494d4a
  4147bd:	fadd   QWORD PTR [ebx+ecx*8+0x7d98cb40]
  4147c4:	cli    
  4147c5:	in     eax,0x51
  4147c7:	jo     0x414815
  4147c9:	fld    QWORD PTR [edx-0x4b]
  4147cc:	(bad)  
  4147ce:	ret    0x3f23
  4147d1:	aas    
  4147d2:	jb     0x414850
  4147d4:	xlat   BYTE PTR ds:[ebx]
  4147d5:	dec    eax
  4147d6:	cdq    
  4147d7:	mov    DWORD PTR [eax+0x42],ecx
  4147da:	btc    DWORD PTR [ecx-0x33],esp
  4147de:	test   DWORD PTR [eax+0xb682e2],edi
  4147e4:	cmp    ebp,eax
  4147e6:	and    ebp,edx
  4147e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ea:	sub    bl,BYTE PTR [esi-0x7126a7d6]
  4147f0:	mov    esi,ds
  4147f2:	stc    
  4147f3:	mov    eax,0xe56947b1
  4147f8:	push   0x3e
  4147fa:	mov    ds:0xf27ddd84,eax
  4147ff:	ja     0x4147f2
  414801:	mov    eax,0xb5d0d574
  414806:	fcmovbe st,st(4)
  414808:	xor    DWORD PTR [ebx],ecx
  41480a:	popf   
  41480b:	mov    edi,0x1302436a
  414810:	push   ecx
  414811:	lds    edx,FWORD PTR [ecx-0x9]
  414814:	mov    WORD PTR [edx],es
  414816:	dec    ebx
  414817:	push   ss
  414818:	test   al,0x5c
  41481a:	call   0xd00f:0xd8895fe2
  414821:	jmp    0x414849
  414823:	mov    ds,eax
  414825:	lds    edx,FWORD PTR [ebp-0x4f56ac6c]
  41482b:	push   esi
  41482c:	shl    DWORD PTR [eax+0x5361e58e],0xf6
  414833:	test   al,0x35
  414835:	xchg   ebp,eax
  414836:	scas   al,BYTE PTR es:[edi]
  414837:	imul   eax,DWORD PTR [ebx-0x7baf5e13],0xb854e85e
  414841:	data16 and ah,bl
  414844:	call   0x2e43:0x72306132
  41484b:	inc    edi
  41484c:	push   0xffffff89
  41484e:	ins    BYTE PTR es:[edi],dx
  41484f:	mov    bh,bl
  414851:	scas   al,BYTE PTR es:[edi]
  414852:	fwait
  414853:	jns    0x4147ef
  414855:	mov    ch,BYTE PTR ds:[ebx+0x4145c756]
  41485c:	sub    esi,DWORD PTR [ecx]
  41485e:	cmp    bh,dl
  414860:	lods   eax,DWORD PTR ds:[esi]
  414861:	pusha  
  414862:	in     eax,dx
  414863:	loopne 0x4148bb
  414865:	mov    dh,0x32
  414867:	jl     0x4148d4
  414869:	cmp    ebx,edx
  41486b:	xchg   edx,eax
  41486c:	sub    bh,bh
  41486e:	cmp    eax,0xdbeb14c8
  414873:	push   ebp
  414874:	inc    esp
  414875:	push   ecx
  414876:	xor    dh,BYTE PTR [edx+0x5b]
  414879:	push   ebp
  41487a:	dec    ecx
  41487b:	or     ecx,ecx
  41487d:	inc    esp
  41487e:	and    ebx,ecx
  414880:	loope  0x414813
  414882:	int3   
  414883:	test   al,0xe5
  414885:	and    edi,esp
  414887:	xor    dh,BYTE PTR [ebp-0x80]
  41488a:	and    eax,0x4e277754
  41488f:	push   0xffffffb4
  414891:	inc    esi
  414892:	sub    bh,BYTE PTR [esi-0x368f35e3]
  414898:	xor    ebx,DWORD PTR [ebx]
  41489a:	cwde   
  41489b:	pop    esp
  41489c:	stos   DWORD PTR es:[edi],eax
  41489d:	or     al,0xa
  41489f:	sub    eax,0x1996a1e
  4148a4:	or     edx,DWORD PTR [edx-0x44]
  4148a7:	out    dx,eax
  4148a8:	add    edi,ebp
  4148aa:	outs   dx,BYTE PTR ds:[esi]
  4148ab:	ror    BYTE PTR [edi],0x29
  4148ae:	inc    ebx
  4148af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b0:	cmp    eax,0x5a471e94
  4148b5:	mov    BYTE PTR [eax-0x7e],al
  4148b8:	adc    BYTE PTR [esi],ah
  4148ba:	and    cl,dh
  4148bc:	data16 add BYTE PTR [esi+0x1d],cl
  4148c0:	jo     0x4148a9
  4148c2:	data16 cmp BYTE PTR [ebx-0x6ff0a808],dl
  4148c9:	loop   0x4148cd
  4148cb:	or     eax,0x380b6192
  4148d0:	jecxz  0x414929
  4148d2:	mov    bh,0x74
  4148d4:	inc    al
  4148d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d7:	cmp    ah,dh
  4148d9:	xor    DWORD PTR [ebp-0x47],edi
  4148dc:	aam    0x4f
  4148de:	push   eax
  4148df:	(bad)  
  4148e0:	fnstenv [eax]
  4148e2:	out    dx,eax
  4148e3:	fcomp  QWORD PTR [ecx]
  4148e5:	das    
  4148e6:	add    ch,0xf
  4148e9:	fucomi st,st(3)
  4148eb:	pop    ebx
  4148ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ed:	dec    edi
  4148ee:	gs iret 
  4148f0:	add    ch,ch
  4148f2:	pop    ss
  4148f3:	dec    ebp
  4148f4:	pop    edi
  4148f5:	pop    esi
  4148f6:	inc    esp
  4148f7:	rcl    BYTE PTR [ebx],cl
  4148f9:	sahf   
  4148fa:	ds fcom st(5)
  4148fd:	push   esp
  4148fe:	mov    ch,0x2c
  414900:	xor    eax,0x3684c206
  414905:	mov    cl,0xff
  414907:	pop    ecx
  414908:	xchg   DWORD PTR [edx+edi*2],esp
  41490b:	or     ecx,DWORD PTR [eax]
  41490d:	into   
  41490e:	inc    esi
  41490f:	cmp    BYTE PTR [eax+0x5a],al
  414912:	loop   0x4148b7
  414914:	std    
  414915:	sbb    al,0x84
  414917:	jmp    0x406f:0x6bf32b06
  41491e:	repz jbe 0x41498a
  414921:	sti    
  414922:	arpl   dx,di
  414924:	out    dx,eax
  414925:	aas    
  414926:	cmp    eax,0xf38f7325
  41492b:	popf   
  41492c:	xchg   ebp,eax
  41492d:	(bad)  
  41492f:	xlat   BYTE PTR ds:[ebx]
  414930:	push   ebp
  414931:	xrelease mov DWORD PTR [edx+0xb6fdf0e],eax
  414938:	out    dx,eax
  414939:	push   esp
  41493a:	gs push edi
  41493c:	adc    BYTE PTR [eax-0x178c398b],0x52
  414943:	xlat   BYTE PTR ds:[ebx]
  414944:	mov    al,ds:0xef485d84
  414949:	mov    esp,?
  41494b:	into   
  41494c:	mov    esp,DWORD PTR [ebx-0x71]
  41494f:	mov    esi,0xce608882
  414954:	and    al,0x33
  414956:	out    dx,al
  414957:	retf   
  414958:	sbb    al,0x6c
  41495a:	lds    esi,FWORD PTR [esp+eiz*4]
  41495d:	icebp  
  41495e:	(bad)  
  414960:	mov    ds:0xe92dd67f,al
  414965:	xlat   BYTE PTR ds:[ebx]
  414966:	mov    dh,0xe6
  414968:	push   0xc10c0f37
  41496d:	pop    ecx
  41496e:	mov    eax,ds:0x74b83fb1
  414973:	arpl   ax,bx
  414975:	mov    ecx,0xc4f93d01
  41497a:	push   ebx
  41497b:	pop    ss
  41497c:	push   es
  41497d:	mov    ah,0x4c
  41497f:	out    dx,al
  414980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414981:	jne    0x4149c8
  414983:	mov    ebx,0x6e255edb
  414988:	into   
  414989:	inc    edi
  41498a:	das    
  41498b:	je     0x414994
  41498d:	in     eax,dx
  41498e:	mov    ebx,0xd525ffe8
  414993:	jmp    0xdb21:0x22d8b31f
  41499a:	sub    eax,ecx
  41499c:	arpl   cx,bx
  41499e:	and    edi,DWORD PTR [ecx-0x21d043d9]
  4149a4:	xor    dl,dl
  4149a6:	daa    
  4149a7:	retf   
  4149a8:	or     DWORD PTR [eax],esi
  4149aa:	xor    eax,0xf515e5e
  4149af:	jecxz  0x414953
  4149b1:	cmp    DWORD PTR [eax],ebx
  4149b3:	push   es
  4149b4:	sub    al,0x78
  4149b6:	push   esi
  4149b7:	arpl   WORD PTR [edx-0xd867c4a],si
  4149bd:	mov    ecx,0xf2aad703
  4149c2:	pop    edi
  4149c3:	ins    DWORD PTR es:[edi],dx
  4149c4:	fcomp  QWORD PTR [ebp+esi*1+0x5d]
  4149c8:	jo     0x41495b
  4149ca:	gs cdq 
  4149cc:	mov    al,ds:0xfb9288cc
  4149d1:	mov    edi,0x31663c56
  4149d6:	test   DWORD PTR ds:[ecx-0x2fc74814],ebp
  4149dd:	xchg   ebx,eax
  4149de:	es xchg ebp,eax
  4149e0:	fsubr  st,st(6)
  4149e2:	adc    al,BYTE PTR [ecx-0x53]
  4149e5:	jge    0x4149b4
  4149e7:	pop    ecx
  4149e8:	jmp    0x82a4:0x100e110e
  4149ef:	and    esi,esp
  4149f1:	jno    0x414a34
  4149f3:	(bad)  
  4149f4:	push   es
  4149f5:	pop    edi
  4149f6:	(bad)  
  4149f7:	sbb    DWORD PTR cs:[ecx+0x9],eax
  4149fb:	popa   
  4149fc:	adc    ah,BYTE PTR [ebx+eiz*8-0x4]
  414a00:	and    ch,dl
  414a02:	adc    BYTE PTR [ecx+0x2456fc18],al
  414a08:	xor    ah,BYTE PTR [esi]
  414a0a:	scas   al,BYTE PTR es:[edi]
  414a0b:	pop    ebp
  414a0c:	sbb    dl,cl
  414a0e:	pop    edx
  414a0f:	xor    BYTE PTR [eax-0x54],dl
  414a12:	ins    BYTE PTR es:[edi],dx
  414a13:	retf   0x6b2b
  414a16:	adc    BYTE PTR [eax],ah
  414a18:	fwait
  414a19:	add    DWORD PTR [esi],edi
  414a1b:	je     0x4149de
  414a1d:	cld    
  414a1e:	sbb    eax,DWORD PTR [edx]
  414a20:	xor    ah,dl
  414a22:	add    al,0xd9
  414a24:	bound  ebx,QWORD PTR [ebx-0x32]
  414a27:	xor    DWORD PTR [edi+ecx*2-0x70],ebp
  414a2b:	or     BYTE PTR [edi+0x37aa5ae1],0x89
  414a32:	daa    
  414a33:	aas    
  414a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a36:	mov    al,0xd9
  414a38:	pushf  
  414a39:	jg     0x4149c4
  414a3b:	pusha  
  414a3c:	pusha  
  414a3d:	shl    edi,cl
  414a3f:	(bad)  
  414a40:	pop    ebp
  414a41:	enter  0x45e,0x3c
  414a45:	pusha  
  414a46:	outs   dx,DWORD PTR ds:[esi]
  414a47:	push   edx
  414a48:	mov    dh,BYTE PTR [edi]
  414a4a:	mov    eax,ecx
  414a4c:	inc    ecx
  414a4d:	and    al,0x9b
  414a4f:	adc    esp,edi
  414a51:	or     eax,0xa16b66a8
  414a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a57:	push   ebx
  414a58:	or     BYTE PTR [ebx],bl
  414a5a:	add    BYTE PTR [ebx-0x6f],bh
  414a5d:	stos   BYTE PTR es:[di],al
  414a5f:	dec    esi
  414a60:	xchg   ecx,eax
  414a61:	std    
  414a62:	daa    
  414a63:	inc    esi
  414a64:	(bad)  
  414a66:	and    bl,ch
  414a68:	shl    DWORD PTR [edx],0x59
  414a6b:	call   FWORD PTR ds:0x102a7470
  414a71:	xor    eax,0xbb4b9286
  414a76:	mov    bh,0x55
  414a78:	dec    esp
  414a79:	loop   0x414adc
  414a7b:	inc    ebx
  414a7c:	in     eax,dx
  414a7d:	jnp    0x414a3f
  414a7f:	sbb    ch,ah
  414a81:	call   0x2addc7ce
  414a86:	(bad)  
  414a87:	cmovae esi,DWORD PTR [edx]
  414a8a:	sub    DWORD PTR [edx+0x3235bb26],esi
  414a90:	push   edx
  414a91:	mov    ah,0x99
  414a93:	les    esp,FWORD PTR [eax-0x4d13b469]
  414a99:	cmp    eax,0x9ac6df2e
  414a9e:	inc    esi
  414a9f:	test   al,0xd1
  414aa1:	sub    DWORD PTR [edi+0x3f],esp
  414aa4:	icebp  
  414aa5:	jmp    0x217e96b8
  414aaa:	push   0xffffffa3
  414aac:	ds in  al,0x4
  414aaf:	pop    esp
  414ab0:	jae    0x414afb
  414ab2:	out    0xca,al
  414ab4:	rol    DWORD PTR [ebp-0x2b06f403],0xf6
  414abb:	in     eax,dx
  414abc:	add    BYTE PTR ds:0x2da5d4bf,dh
  414ac2:	xor    BYTE PTR [ebp-0x303455c3],bh
  414ac8:	mov    dh,0x86
  414aca:	(bad)  
  414acc:	jmp    0x35d75844
  414ad1:	pop    esp
  414ad2:	xor    al,0x5a
  414ad4:	xor    ecx,DWORD PTR [eax]
  414ad6:	pmuludq mm5,QWORD PTR [eax+ecx*1+0x5e]
  414adb:	and    BYTE PTR [ecx+0x59],0xf0
  414adf:	call   0xc9d9:0x2eb66fc2
  414ae6:	js     0x414aff
  414ae8:	jle    0x414a83
  414aea:	jae    0x414ae7
  414aec:	jecxz  0x414a72
  414aee:	test   edx,ebx
  414af0:	repnz in eax,dx
  414af2:	std    
  414af3:	(bad)  
  414af4:	dec    ebp
  414af5:	mov    dh,0x8f
  414af7:	jmp    0xa8a9:0x3fdd0bce
  414afe:	push   es
  414aff:	je     0x414b20
  414b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b02:	or     al,0xa8
  414b04:	dec    esp
  414b05:	sub    BYTE PTR [ebx+0x5a2e8a13],0x3d
  414b0c:	(bad)  
  414b0d:	mul    al
  414b0f:	jns    0x414aaf
  414b11:	mov    WORD PTR [edx],ds
  414b13:	dec    eax
  414b14:	push   ds
  414b15:	sar    DWORD PTR [edi-0x2a],1
  414b18:	inc    esi
  414b19:	je     0x414a9d
  414b1b:	jbe    0x414b26
  414b1d:	xor    BYTE PTR [ecx],0x1f
  414b20:	ja     0x4e4d905c
  414b26:	ja     0x414ad7
  414b28:	mov    DWORD PTR [edx+ebx*2+0x3d],ecx
  414b2c:	xlat   BYTE PTR ds:[ebx]
  414b2d:	inc    BYTE PTR [edi-0x3e]
  414b30:	mov    ah,0xad
  414b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b33:	sbb    esp,DWORD PTR [edi+0x2a70c07a]
  414b39:	or     eax,ecx
  414b3b:	imul   ecx,DWORD PTR [ebx],0xe024e156
  414b41:	xchg   BYTE PTR [edi],dl
  414b43:	inc    ebp
  414b44:	std    
  414b45:	mov    bh,0x4
  414b47:	mov    ch,0x7a
  414b49:	sahf   
  414b4a:	xlat   BYTE PTR ds:[ebx]
  414b4b:	inc    edx
  414b4c:	gs inc edx
  414b4e:	stc    
  414b4f:	dec    ecx
  414b50:	daa    
  414b51:	lds    esp,FWORD PTR [esi]
  414b53:	sub    dl,al
  414b55:	push   edx
  414b56:	das    
  414b57:	cld    
  414b58:	loop   0x414bd7
  414b5a:	js     0x414b53
  414b5c:	mov    ah,cl
  414b5e:	idiv   BYTE PTR [edx]
  414b60:	fcom   DWORD PTR [edx-0x373da752]
  414b66:	push   eax
  414b67:	pop    ecx
  414b68:	and    bl,BYTE PTR [edx-0x1e8656b2]
  414b6e:	add    ecx,DWORD PTR [ebp+eiz*1+0x5a5f0f4b]
  414b75:	stos   DWORD PTR es:[edi],eax
  414b76:	out    dx,eax
  414b77:	into   
  414b78:	iret   
  414b79:	lods   eax,DWORD PTR ds:[esi]
  414b7a:	jno    0x414b91
  414b7c:	enter  0xd442,0x87
  414b80:	rdpmc  
  414b82:	pop    edx
  414b83:	dec    eax
  414b84:	sub    BYTE PTR [ebx+0x61],ch
  414b87:	retf   0x3042
  414b8a:	mov    ds:0x9206201e,eax
  414b8f:	test   eax,0x4acde36
  414b94:	sti    
  414b95:	adc    al,bh
  414b97:	inc    esp
  414b98:	js     0x414ba6
  414b9a:	sub    al,0x5e
  414b9c:	or     dh,dl
  414b9e:	push   0x34a61820
  414ba3:	psubusw mm2,mm3
  414ba6:	dec    edx
  414ba7:	xchg   edi,eax
  414ba8:	fnstcw WORD PTR [edx+0x49]
  414bab:	test   eax,0xd7b6a625
  414bb0:	adc    eax,0x1a4b3f84
  414bb5:	lea    ebp,[esp+esi*2-0x1bf646c3]
  414bbc:	sbb    DWORD PTR [esi],edx
  414bbe:	push   es
  414bbf:	(bad)  
  414bc0:	ror    BYTE PTR [ecx+0x7537a06e],cl
  414bc6:	cli    
  414bc7:	add    ebx,ebx
  414bc9:	sub    al,0xf5
  414bcb:	adc    eax,0x9ab0453
  414bd0:	popa   
  414bd1:	push   edi
  414bd2:	aam    0x44
  414bd4:	push   esp
  414bd5:	mov    ds:0xc5c88b9b,eax
  414bda:	outs   dx,DWORD PTR ds:[esi]
  414bdb:	mov    edi,0xaf58dae0
  414be0:	inc    esi
  414be1:	sti    
  414be2:	jg     0x414bd6
  414be4:	xor    bl,BYTE PTR [ebx-0x34]
  414be7:	daa    
  414be8:	mov    ebx,DWORD PTR [edx]
  414bea:	(bad)  
  414beb:	xchg   esp,eax
  414bec:	or     bl,BYTE PTR [ebx+0x7bb72e6d]
  414bf2:	sub    bl,BYTE PTR [eax+0x66]
  414bf5:	fwait
  414bf6:	imul   ecx,DWORD PTR [eax],0x3
  414bf9:	mov    ebx,edi
  414bfb:	cmp    dl,BYTE PTR [ebx+0x4a112cb8]
  414c01:	arpl   cx,ax
  414c03:	pop    es
  414c04:	retf   
  414c05:	push   ebx
  414c06:	inc    esi
  414c07:	ret    
  414c08:	into   
  414c09:	std    
  414c0a:	lock iret 
  414c0c:	scas   al,BYTE PTR es:[edi]
  414c0d:	mov    ecx,0xe4a852b0
  414c12:	push   edi
  414c13:	dec    ebp
  414c14:	push   es
  414c15:	ficom  DWORD PTR [esi-0x5]
  414c18:	(bad)  
  414c19:	sbb    ch,ch
  414c1b:	cs dec ecx
  414c1d:	je     0x414bf6
  414c1f:	sub    DWORD PTR [edi+0x4c0fdcef],0x37
  414c26:	in     al,0x45
  414c28:	stos   BYTE PTR es:[edi],al
  414c29:	dec    eax
  414c2a:	ret    0x3a28
  414c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c2e:	mov    bh,0xde
  414c30:	int3   
  414c31:	sub    DWORD PTR [ebx+eax*4-0x42d2cb04],ecx
  414c38:	mov    esp,0x643e6ea1
  414c3d:	std    
  414c3e:	repz push ds
  414c40:	out    0x83,eax
  414c42:	and    al,0x31
  414c44:	ins    DWORD PTR es:[edi],dx
  414c45:	xor    al,BYTE PTR es:0xbf492d9
  414c4c:	sbb    eax,0x707f6f2c
  414c51:	push   ecx
  414c52:	mov    edx,0xdc663654
  414c57:	sub    eax,0xbf740eb8
  414c5c:	xor    ecx,eax
  414c5e:	lea    eax,[ecx-0x18bb380e]
  414c64:	ins    DWORD PTR es:[edi],dx
  414c65:	xchg   edx,eax
  414c66:	push   edx
  414c67:	sub    BYTE PTR [ecx-0x66ab0f40],bh
  414c6d:	frstor [edx+0x29]
  414c70:	bound  ecx,QWORD PTR [ecx+0x4c]
  414c73:	lock adc DWORD PTR ds:0xf740b601,eax
  414c7a:	pop    ebp
  414c7b:	pop    ebx
  414c7c:	aad    0x68
  414c7e:	shl    DWORD PTR [edx+0x3],1
  414c81:	dec    DWORD PTR [edi]
  414c83:	pop    eax
  414c84:	jge    0x414cb8
  414c86:	jb     0x414c74
  414c88:	ror    DWORD PTR [edi+0x24688976],cl
  414c8e:	mov    eax,ds:0x6880414d
  414c93:	scas   al,BYTE PTR es:[edi]
  414c94:	pushf  
  414c95:	retf   0x9781
  414c98:	ret    
  414c99:	mov    ecx,DWORD PTR [esi+0x1bed925c]
  414c9f:	popa   
  414ca0:	in     eax,0xd4
  414ca2:	lea    esp,[ebx-0x26]
  414ca5:	clc    
  414ca6:	neg    dl
  414ca8:	sub    edi,DWORD PTR [esi+0x73833608]
  414cae:	imul   edi,edi,0x7a024ddf
  414cb4:	xchg   ebx,eax
  414cb5:	(bad)  
  414cb6:	xchg   esp,eax
  414cb7:	js     0x414cf9
  414cb9:	xlat   BYTE PTR ds:[ebx]
  414cba:	fmul   QWORD PTR [ecx-0x47]
  414cbd:	mov    DWORD PTR [edx+0xc],ecx
  414cc0:	cwde   
  414cc1:	and    esi,DWORD PTR [ecx-0x5b]
  414cc4:	push   ss
  414cc5:	or     eax,0x1a05da8e
  414cca:	shl    DWORD PTR [edx+0x3e],cl
  414ccd:	push   esi
  414cce:	cmp    ch,BYTE PTR [esi+0x37]
  414cd1:	outs   dx,BYTE PTR ds:[esi]
  414cd2:	jae    0x414cb8
  414cd4:	sub    bl,ah
  414cd6:	mov    esi,0xf8df548d
  414cdb:	out    0x83,eax
  414cdd:	push   edi
  414cde:	mov    edx,0xcb3111c6
  414ce3:	push   ecx
  414ce4:	adc    ch,BYTE PTR [eax]
  414ce6:	xor    cl,bl
  414ce8:	popa   
  414ce9:	dec    eax
  414cea:	mov    esi,0xcff159
  414cef:	popf   
  414cf0:	not    BYTE PTR [ebx+0x5f97ff94]
  414cf6:	pop    edi
  414cf7:	xchg   esi,eax
  414cf8:	push   cs
  414cf9:	adc    eax,0x2581d6b6
  414cfe:	iret   
  414cff:	jae    0x414cb0
  414d01:	adc    DWORD PTR [eax-0x59],edi
  414d04:	jo     0x414d4f
  414d06:	(bad)  
  414d07:	sub    al,ch
  414d09:	or     BYTE PTR [edx+ebx*4+0x35],0xf1
  414d0e:	sar    DWORD PTR [ebx-0x5a],1
  414d11:	das    
  414d12:	jecxz  0x414cb2
  414d14:	xor    bh,BYTE PTR [ecx+0x43]
  414d17:	xchg   esp,eax
  414d18:	and    BYTE PTR [ecx+0x48],al
  414d1b:	mov    ecx,0x408fb81a
  414d20:	stc    
  414d21:	addr16 sub esi,ebp
  414d24:	inc    esp
  414d25:	mov    edi,0x711d3b2e
  414d2a:	inc    esp
  414d2b:	test   DWORD PTR [ebp-0x7aaf6fa1],esp
  414d31:	mov    ecx,0x285e8f40
  414d36:	or     al,0x9a
  414d38:	mov    BYTE PTR [edi*8+0x347aab92],ch
  414d3f:	inc    ebx
  414d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d41:	leave  
  414d42:	xchg   BYTE PTR [edi+ebp*2+0x492aa69],bl
  414d49:	inc    esp
  414d4a:	repz pop esp
  414d4c:	(bad)  
  414d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d4e:	retf   0xce16
  414d51:	mov    ?,WORD PTR [eax]
  414d53:	imul   ecx,DWORD PTR [edx+0x1c],0xe06cf459
  414d5a:	loop   0x414cf2
  414d5c:	cli    
  414d5d:	add    DWORD PTR [ebp+0x68],esp
  414d60:	popa   
  414d61:	add    esi,0x7cfc0dc4
  414d67:	std    
  414d68:	add    eax,0xb7ff3c4e
  414d6d:	or     al,0xb0
  414d6f:	fneni(8087 only) 
  414d71:	sbb    edi,ebp
  414d73:	and    eax,0xd46d0b8
  414d78:	push   esp
  414d79:	imul   ebp,DWORD PTR [edx+ecx*1+0x18],0xffffffd7
  414d7e:	icebp  
  414d7f:	jp     0x414dc9
  414d81:	add    eax,0xc42f8011
  414d86:	fnstsw ax
  414d88:	daa    
  414d89:	jae    0x414d4c
  414d8b:	fsubr  DWORD PTR [edi-0x2cb540e4]
  414d91:	(bad)  [eax]
  414d93:	push   esp
  414d94:	sbb    BYTE PTR [edi+ebx*2],dh
  414d97:	pop    es
  414d98:	out    dx,al
  414d99:	mov    dl,0x72
  414d9b:	pop    edi
  414d9c:	das    
  414d9d:	adc    DWORD PTR [edx-0x54],0x42b687b
  414da4:	fdivr  QWORD PTR [esp+edi*4+0x56]
  414da8:	jbe    0x414d62
  414daa:	pop    esp
  414dab:	test   DWORD PTR [ebp+0x6e9835eb],edi
  414db1:	lahf   
  414db2:	push   edi
  414db3:	mov    al,0x3f
  414db5:	shl    BYTE PTR [eax+0x2dc17a9f],1
  414dbb:	mov    eax,ds:0xc2837842
  414dc0:	aas    
  414dc1:	rol    bl,0x3c
  414dc4:	outs   dx,DWORD PTR ds:[esi]
  414dc5:	(bad)  
  414dc6:	xchg   edi,eax
  414dc7:	push   edx
  414dc8:	jnp    0x414d62
  414dca:	inc    eax
  414dcb:	in     al,0x1b
  414dcd:	fild   WORD PTR [esi-0x5a2d2a4b]
  414dd3:	loopne 0x414e0d
  414dd5:	push   es
  414dd6:	aam    0xad
  414dd8:	sbb    ecx,ebx
  414dda:	cmp    ebx,ebx
  414ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ddd:	and    cl,bl
  414ddf:	(bad)  
  414de0:	inc    esp
  414de1:	jbe    0x414d99
  414de3:	or     DWORD PTR [ebx+ebp*2-0x793ec6fb],esi
  414dea:	pushf  
  414deb:	push   eax
  414dec:	mov    eax,DWORD PTR [edi-0x3099d4e5]
  414df2:	push   0x9a95273a
  414df7:	in     eax,0xb0
  414df9:	xchg   esi,eax
  414dfa:	add    al,0xeb
  414dfc:	fsub   QWORD PTR [ecx+edi*8+0x25]
  414e00:	add    eax,0x99b7657d
  414e05:	dec    ebp
  414e06:	push   ebx
  414e07:	add    eax,0x6b9818b7
  414e0c:	cli    
  414e0d:	dec    ecx
  414e0e:	ret    
  414e0f:	ds push esi
  414e11:	adc    dl,BYTE PTR [ebp+0x24d1958d]
  414e17:	ds fwait
  414e19:	push   edx
  414e1a:	jle    0x414e0a
  414e1c:	push   cs
  414e1d:	std    
  414e1e:	dec    ebp
  414e1f:	add    BYTE PTR [edi-0x71],ch
  414e22:	out    dx,al
  414e23:	mov    al,ds:0x908da186
  414e28:	(bad)  
  414e29:	push   edi
  414e2a:	or     ebx,DWORD PTR [ebp+ebp*2-0x31]
  414e2e:	cmc    
  414e2f:	lods   eax,DWORD PTR ds:[esi]
  414e30:	xchg   esp,eax
  414e31:	sbb    eax,0x30a569ab
  414e36:	imul   edi,esi,0xca72a066
  414e3c:	pop    edi
  414e3d:	hlt    
  414e3e:	out    dx,al
  414e3f:	mov    gs,eax
  414e41:	jmp    0x414e4a
  414e43:	lock add al,0x6b
  414e46:	ins    DWORD PTR es:[edi],dx
  414e47:	and    esi,esp
  414e49:	dec    ebx
  414e4a:	mov    cl,0xdc
  414e4c:	loope  0x414e06
  414e4e:	sbb    eax,DWORD PTR [ecx+0x59c09b0d]
  414e54:	(bad)  
  414e55:	mov    ah,0xab
  414e57:	dec    edx
  414e58:	aam    0x89
  414e5a:	push   cs
  414e5b:	inc    ebx
  414e5c:	mov    eax,ds:0xb3d52ecb
  414e61:	cmp    BYTE PTR [edx],ch
  414e63:	lock xchg ebx,eax
  414e65:	or     esi,DWORD PTR [esp+ebp*2]
  414e68:	sub    al,0xbf
  414e6a:	push   esi
  414e6b:	rcl    DWORD PTR [ecx-0x29],1
  414e6e:	add    al,0x22
  414e70:	aad    0x2b
  414e72:	aam    0x15
  414e74:	fnsave [edi]
  414e76:	mov    ebp,0x39753f2
  414e7b:	stc    
  414e7c:	xchg   ecx,eax
  414e7d:	xchg   edx,eax
  414e7e:	imul   edx,DWORD PTR [ebx-0x7e3a1e2b],0x16900dc2
  414e88:	and    BYTE PTR [esi-0x2dcae576],bh
  414e8e:	cmp    BYTE PTR [edi+0x53461a46],0xdc
  414e95:	pusha  
  414e96:	call   FWORD PTR [edx+edx*2-0x3d98edbe]
  414e9d:	ins    BYTE PTR es:[edi],dx
  414e9e:	retf   0xc85a
  414ea1:	data16 jle 0x414eeb
  414ea4:	xchg   BYTE PTR [edi-0x7d],bl
  414ea7:	sub    edi,DWORD PTR [ebx-0x2de8a6cc]
  414ead:	(bad)  
  414eaf:	add    eax,0x646a0e01
  414eb4:	or     al,0x8a
  414eb6:	(bad)  
  414eb7:	sbb    ebx,esi
  414eb9:	mov    al,0xdb
  414ebb:	jnp    0x414e4b
  414ebd:	mov    ecx,0xc8368f7b
  414ec2:	test   BYTE PTR [esp+edx*4+0x8],cl
  414ec6:	(bad)  
  414ec7:	mov    ebp,0xecb7edcd
  414ecc:	dec    edx
  414ecd:	scas   al,BYTE PTR es:[edi]
  414ece:	pop    es
  414ecf:	mov    ah,0x17
  414ed1:	in     al,0x42
  414ed3:	or     eax,0x4d97120f
  414ed8:	out    0x82,al
  414eda:	mov    dh,0xc0
  414edc:	jbe    0x414ef3
  414ede:	sub    eax,0x2b3c390e
  414ee3:	(bad)  
  414ee4:	pop    ds
  414ee5:	loope  0x414edf
  414ee7:	loopne 0x414ec2
  414ee9:	or     al,BYTE PTR [edi+0x28165b2b]
  414eef:	sub    ecx,DWORD PTR [ebp-0x6]
  414ef2:	scas   eax,DWORD PTR es:[edi]
  414ef3:	sti    
  414ef4:	and    al,0x53
  414ef6:	rol    BYTE PTR [edx],cl
  414ef8:	fistp  QWORD PTR [esi]
  414efa:	scas   al,BYTE PTR es:[edi]
  414efb:	sbb    ah,BYTE PTR [ebp-0x2d]
  414efe:	dec    esp
  414eff:	or     eax,0xf58ddf16
  414f04:	call   0xf30b:0xc485a644
  414f0b:	cmp    ah,ch
  414f0d:	mov    ecx,0x44121c50
  414f12:	js     0x414f0a
  414f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f15:	mov    ebp,0xacf45008
  414f1a:	(bad)  
  414f1b:	cs mov ah,cl
  414f1e:	in     eax,dx
  414f1f:	stos   BYTE PTR es:[edi],al
  414f20:	scas   al,BYTE PTR es:[edi]
  414f21:	xor    al,0x1e
  414f23:	scas   eax,DWORD PTR es:[edi]
  414f24:	sub    al,0x31
  414f26:	push   ebx
  414f27:	mov    eax,0x777d3f8f
  414f2c:	cli    
  414f2d:	cld    
  414f2e:	mov    DWORD PTR [eax],ecx
  414f30:	sub    esi,ebp
  414f32:	pop    ebx
  414f33:	lods   al,BYTE PTR ds:[esi]
  414f34:	lock rcr DWORD PTR es:[edx+ebx*4-0x70],cl
  414f3a:	inc    esp
  414f3b:	icebp  
  414f3c:	dec    edx
  414f3d:	xchg   esi,eax
  414f3e:	test   al,0x99
  414f40:	pop    ebx
  414f41:	cmp    bl,BYTE PTR ds:0x86cbe6a4
  414f47:	jne    0x414f86
  414f49:	fs push 0xe77c4a4e
  414f4f:	rol    DWORD PTR [ecx-0x16fe883c],cl
  414f55:	push   eax
  414f56:	adc    BYTE PTR [edi-0x46401c29],cl
  414f5c:	neg    BYTE PTR cs:[ecx+0x10]
  414f60:	and    al,0x14
  414f62:	pusha  
  414f63:	mov    ah,0xd0
  414f65:	jbe    0x414f5a
  414f67:	mov    WORD PTR [esi+0x1a1b3892],ds
  414f6d:	(bad)
  414f70:	adc    BYTE PTR ds:0x8b170f1b,0x46
  414f77:	rcl    BYTE PTR [edx+eiz*8+0x5cc12972],cl
  414f7e:	in     eax,dx
  414f7f:	push   eax
  414f80:	scas   eax,DWORD PTR es:[edi]
  414f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f82:	cmp    BYTE PTR [esi+eiz*4],bl
  414f85:	ficomp WORD PTR [ebx]
  414f87:	cmp    edx,DWORD PTR [eax-0x1c]
  414f8a:	daa    
  414f8b:	adc    eax,0xe448802a
  414f90:	aas    
  414f91:	xchg   BYTE PTR [eax],al
  414f93:	dec    edx
  414f94:	pop    ebx
  414f95:	pop    ds
  414f96:	bound  edx,QWORD PTR [eax-0x4bee2293]
  414f9c:	and    al,0x18
  414f9e:	xchg   edi,eax
  414f9f:	push   esp
  414fa0:	jns    0x414f5a
  414fa2:	loope  0x414ff5
  414fa4:	mov    bl,0x22
  414fa6:	adc    BYTE PTR [edx+0x7],bl
  414fa9:	cs in  eax,0xf7
  414fac:	add    BYTE PTR [edx],bl
  414fae:	cmc    
  414faf:	call   0xe6b7:0x558b3fe6
  414fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb7:	push   ebx
  414fb8:	inc    edi
  414fb9:	ret    
  414fba:	lods   eax,DWORD PTR ds:[esi]
  414fbb:	fimul  WORD PTR [eax-0x3534a24f]
  414fc1:	xchg   esp,eax
  414fc2:	adc    cl,BYTE PTR [ecx-0x74f8c21e]
  414fc8:	xchg   ebx,eax
  414fc9:	pusha  
  414fca:	and    cl,BYTE PTR [edi+0x7]
  414fcd:	sub    BYTE PTR [ebp+eiz*2+0x7b],al
  414fd1:	enter  0xdb23,0x8c
  414fd5:	or     BYTE PTR [ecx-0x50e38ef1],0x9e
  414fdc:	enter  0xfa5f,0xa6
  414fe0:	jge    0x41504a
  414fe2:	pushf  
  414fe3:	fs sahf 
  414fe5:	rcr    DWORD PTR [ecx],cl
  414fe7:	(bad)  
  414fe9:	mov    edi,0x4139040f
  414fee:	dec    ebx
  414fef:	gs xchg esp,eax
  414ff1:	cli    
  414ff2:	fadd   DWORD PTR [ecx]
  414ff4:	adc    dh,dl
  414ff6:	pop    ecx
  414ff7:	fiadd  DWORD PTR [edx-0x1f]
  414ffa:	lods   al,BYTE PTR ds:[esi]
  414ffb:	test   ebp,0x52f63ea1
  415001:	xchg   edi,eax
  415002:	inc    edi
  415003:	and    al,ah
  415005:	hlt    
  415006:	xor    esp,DWORD PTR [esi]
  415008:	mov    ah,0x7c
  41500a:	bound  eax,QWORD PTR [edi+0xc]
  41500d:	cmp    ebp,esp
  41500f:	into   
  415010:	push   ecx
  415011:	mov    cl,0x85
  415013:	stos   DWORD PTR es:[edi],eax
  415014:	imul   eax,DWORD PTR [ecx+0x71c99d15],0x30c992a2
  41501e:	pop    eax
  41501f:	popf   
  415020:	leave  
  415021:	retf   0x64dc
  415024:	stos   BYTE PTR es:[edi],al
  415025:	mov    bl,0xe1
  415027:	loope  0x4150a2
  415029:	mov    ecx,DWORD PTR [eax+0x46]
  41502c:	cli    
  41502d:	mov    BYTE PTR [ecx+0x2d7477e0],cl
  415033:	mov    bl,bl
  415035:	int    0x1d
  415037:	stc    
  415038:	inc    esi
  415039:	addr16 (bad) 
  41503b:	jmp    DWORD PTR [edx+0x2b]
  41503e:	adc    eax,DWORD PTR [ecx]
  415040:	inc    eax
  415041:	push   edx
  415042:	dec    esi
  415043:	es aaa 
  415045:	fild   WORD PTR [ebx+0x112d0770]
  41504b:	pop    esp
  41504c:	sti    
  41504d:	add    dh,BYTE PTR [edi-0x532b31e0]
  415053:	retf   0x2e99
  415056:	(bad)  
  415057:	repz data16 fucomp st(7)
  41505b:	add    DWORD PTR [edi+edx*1-0x47],edx
  41505f:	hlt    
  415060:	cmp    dh,0x5b
  415063:	pop    eax
  415064:	loope  0x415029
  415066:	dec    eax
  415067:	push   0x71
  415069:	push   cs
  41506a:	sti    
  41506b:	xor    edx,DWORD PTR [ecx+0x23]
  41506e:	mov    ebx,DWORD PTR [edi-0x77]
  415071:	scas   al,BYTE PTR es:[edi]
  415072:	std    
  415073:	mov    bl,BYTE PTR [edx]
  415075:	mov    dl,0x42
  415077:	pop    ds
  415078:	jbe    0x4150a3
  41507a:	int3   
  41507b:	out    0x96,al
  41507d:	in     al,dx
  41507e:	dec    ebp
  41507f:	sub    ebx,DWORD PTR [ecx]
  415081:	jne    0x4150d2
  415083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415084:	cmp    esi,DWORD PTR [esi+0x58954093]
  41508a:	sahf   
  41508b:	add    eax,0x47f8f5a
  415090:	ja     0x41503d
  415092:	pop    ss
  415093:	sub    bl,dl
  415095:	ins    BYTE PTR es:[edi],dx
  415096:	jno    0x4150c8
  415098:	repz (bad) 
  41509a:	test   al,0xd9
  41509c:	and    eax,0x3cfbba77
  4150a1:	outs   dx,DWORD PTR ds:[esi]
  4150a2:	cmp    eax,esi
  4150a4:	sbb    dl,BYTE PTR [edx-0x3d73e1c3]
  4150aa:	xor    BYTE PTR [ecx+esi*1-0x43cbed56],dl
  4150b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b2:	bound  eax,QWORD PTR [ecx+0x65]
  4150b5:	cdq    
  4150b6:	outs   dx,DWORD PTR ds:[esi]
  4150b7:	sub    DWORD PTR [edi+0x1c],eax
  4150ba:	lods   eax,DWORD PTR ds:[esi]
  4150bb:	inc    esp
  4150bc:	jmp    0x84a366c3
  4150c1:	dec    eax
  4150c2:	inc    edx
  4150c3:	inc    ebx
  4150c4:	pushf  
  4150c5:	cmp    dh,dh
  4150c7:	add    BYTE PTR [eax-0x14fb2350],0x8e
  4150ce:	adc    bh,BYTE PTR [ebx]
  4150d0:	or     al,dl
  4150d2:	lea    ecx,[edx+0x76]
  4150d5:	aad    0x79
  4150d7:	dec    ebp
  4150d8:	mov    ds:0x233c0a97,eax
  4150dd:	pop    ecx
  4150de:	test   al,0x95
  4150e0:	and    ebx,eax
  4150e2:	sbb    dh,BYTE PTR [eax-0x304e51d4]
  4150e8:	arpl   WORD PTR [esi+0x679edd1c],ax
  4150ee:	iret   
  4150ef:	jmp    0x261c:0x9429d8b7
  4150f6:	cmp    dl,BYTE PTR [ecx-0x5c]
  4150f9:	xor    al,0xf2
  4150fb:	inc    esp
  4150fc:	fbstp  TBYTE PTR [eax]
  4150fe:	das    
  4150ff:	dec    edx
  415100:	js     0x4150c7
  415102:	adc    ebp,DWORD PTR [ecx]
  415104:	push   eax
  415105:	inc    eax
  415106:	(bad)  
  415107:	retf   
  415108:	clc    
  415109:	je     0x415117
  41510b:	adc    al,BYTE PTR [ebx+0x19]
  41510e:	jmp    0x2cf9:0x32e8ea4c
  415115:	fadd   QWORD PTR [edx]
  415117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415118:	dec    ebx
  415119:	dec    ecx
  41511a:	loope  0x41518c
  41511c:	push   ss
  41511d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41511e:	sahf   
  41511f:	xor    BYTE PTR [ecx+0x6e491325],dh
  415125:	xchg   esi,eax
  415126:	icebp  
  415127:	into   
  415128:	jg     0x4150eb
  41512a:	push   ebp
  41512b:	xchg   esi,eax
  41512c:	mov    cl,BYTE PTR [edx]
  41512e:	add    BYTE PTR [esi+0x47],dh
  415131:	mov    eax,ds:0x4939d08e
  415136:	sti    
  415137:	shl    BYTE PTR [edx-0x621fef67],1
  41513d:	imul   esp,DWORD PTR [ecx],0x75
  415140:	imul   esp,DWORD PTR [edx-0x54fcaf3c],0xb
  415147:	mov    esp,0x6178572a
  41514c:	dec    esp
  41514d:	shr    DWORD PTR [esi+0x53],1
  415150:	mov    al,ds:0x32673ec9
  415155:	xchg   BYTE PTR [edi],dl
  415157:	adc    DWORD PTR [ebx],0xc1b436a1
  41515d:	call   0x498d:0xa71bbe00
  415164:	(bad)  
  415165:	jno    0x4151c1
  415167:	pop    ebx
  415168:	mov    ah,0xda
  41516a:	enter  0xb60b,0x5c
  41516e:	mov    ebx,eax
  415170:	lds    edx,FWORD PTR [ecx+0x5840d]
  415176:	jl     0x41514d
  415178:	addr16 mov ch,0x38
  41517b:	shr    DWORD PTR [edx+0x2756a24b],cl
  415181:	xchg   esi,eax
  415182:	add    BYTE PTR [ecx+ecx*2+0x5281079a],al
  415189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41518a:	retf   0xe7cb
  41518d:	hlt    
  41518e:	das    
  41518f:	pop    eax
  415190:	jae    0x415205
  415192:	and    BYTE PTR [ebp+0x67840216],0xae
  415199:	sbb    edi,0x38eacc52
  41519f:	inc    esi
  4151a0:	inc    edx
  4151a1:	jmp    0x91eb783b
  4151a6:	dec    esi
  4151a7:	cmp    dh,BYTE PTR [esi*2+0x304d5fce]
  4151ae:	mov    ebp,0x9a1ec6c8
  4151b3:	popa   
  4151b4:	lock fsub DWORD PTR [ecx]
  4151b7:	(bad)  
  4151b8:	push   esp
  4151b9:	imul   BYTE PTR [ebx]
  4151bb:	sbb    al,0x91
  4151bd:	and    eax,0xe385e118
  4151c2:	xchg   ebp,eax
  4151c3:	add    BYTE PTR [eax-0x52],al
  4151c6:	or     al,0x14
  4151c8:	test   DWORD PTR [ebp+0x4c],ebx
  4151cb:	ds jne 0x415175
  4151ce:	or     DWORD PTR fs:[edx],ebp
  4151d1:	sbb    BYTE PTR [ebx-0xd],bl
  4151d4:	cwde   
  4151d5:	cmc    
  4151d6:	jo     0x41518a
  4151d8:	mov    al,ds:0x9b267659
  4151dd:	xor    edi,DWORD PTR [eax+0x29]
  4151e0:	sar    DWORD PTR [edx-0x3d810c7a],0xf5
  4151e7:	mov    dh,0x5f
  4151e9:	mov    ds:0xab7f8192,eax
  4151ee:	adc    DWORD PTR [eax+eax*1+0x7fa8c31b],edi
  4151f5:	(bad)  
  4151f6:	sti    
  4151f7:	std    
  4151f8:	(bad)  
  4151f9:	rol    BYTE PTR [edi],1
  4151fb:	pop    esi
  4151fc:	inc    edx
  4151fd:	ret    
  4151fe:	cld    
  4151ff:	aad    0xfc
  415201:	sub    al,0x48
  415203:	(bad)  
  415204:	gs das 
  415206:	enter  0x15b,0xa0
  41520a:	dec    ebx
  41520b:	xor    eax,0xefa0c821
  415210:	outs   dx,DWORD PTR ds:[esi]
  415211:	and    edx,ebx
  415213:	retf   0x5e82
  415216:	pop    es
  415217:	push   esi
  415218:	push   edi
  415219:	mov    cl,0x5b
  41521b:	rol    BYTE PTR [ebx-0x30],0x33
  41521f:	rcl    DWORD PTR ds:[ecx],0xa9
  415223:	clc    
  415224:	ret    0xaba9
  415227:	mov    al,BYTE PTR [ebx+0x56]
  41522a:	xor    bh,dl
  41522c:	jmp    0x41521f
  41522e:	adc    bl,BYTE PTR [ebx-0x9bd8849]
  415234:	pop    esi
  415235:	jle    0x41524f
  415237:	adc    dl,BYTE PTR [ebp-0x4d]
  41523a:	ficom  DWORD PTR [edi+0x33fa7a96]
  415240:	xchg   bh,dh
  415242:	adc    DWORD PTR [eax],0x23
  415245:	neg    bl
  415247:	aas    
  415248:	ins    DWORD PTR es:[edi],dx
  415249:	in     al,dx
  41524a:	mov    edx,0x8a92388e
  41524f:	mov    ?,WORD PTR [esi]
  415251:	pop    ebx
  415252:	sub    esi,edi
  415254:	bswap  ebp
  415256:	dec    ecx
  415257:	dec    edi
  415258:	scas   al,BYTE PTR es:[edi]
  415259:	adc    ebp,edi
  41525b:	nop
  41525c:	stc    
  41525d:	or     al,0x58
  41525f:	test   eax,0xab5f8f49
  415264:	add    bl,BYTE PTR [eax+eiz*1]
  415267:	lea    ecx,[eax+eax*4+0x62]
  41526b:	or     al,0x8f
  41526d:	mov    bh,ah
  41526f:	and    ch,cl
  415271:	xchg   al,cl
  415273:	push   es
  415274:	adc    esp,eax
  415276:	scas   eax,DWORD PTR es:[edi]
  415277:	xchg   esp,eax
  415278:	jbe    0x415247
  41527a:	jl     0x415218
  41527c:	ins    BYTE PTR es:[edi],dx
  41527d:	mov    BYTE PTR [ecx-0x41cbc7e7],dl
  415283:	sbb    eax,0x8d0a7a7e
  415288:	imul   ebp,DWORD PTR [ebp+edi*2+0x57],0x685d82e3
  415290:	into   
  415291:	aas    
  415292:	push   ss
  415293:	fwait
  415294:	add    al,0x49
  415296:	(bad)  
  415297:	jge    0x41522b
  415299:	cld    
  41529a:	push   ebp
  41529b:	push   0x26
  41529d:	jle    0x4152d8
  41529f:	push   edi
  4152a0:	inc    ebp
  4152a1:	sub    BYTE PTR ds:0x489cc808,bh
  4152a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a8:	pop    ebx
  4152a9:	xor    al,0xd5
  4152ab:	ret    0xe3c7
  4152ae:	nop
  4152af:	push   edi
  4152b0:	(bad)  
  4152b1:	cwde   
  4152b2:	pcmpeqw mm6,QWORD PTR [eax+0x5505850f]
  4152b9:	lods   al,BYTE PTR ds:[esi]
  4152ba:	mov    WORD PTR [ebx],?
  4152bc:	inc    esp
  4152bd:	dec    eax
  4152be:	int    0xbd
  4152c0:	stos   DWORD PTR es:[edi],eax
  4152c1:	mov    ebx,0x7969e180
  4152c6:	and    DWORD PTR [ebx],edx
  4152c8:	mov    cl,0x50
  4152ca:	xor    al,ah
  4152cc:	pop    esp
  4152cd:	clc    
  4152ce:	mov    eax,0xe06b9c96
  4152d3:	xchg   esp,eax
  4152d4:	test   BYTE PTR [edx+0x48],al
  4152d7:	inc    ebp
  4152d8:	fisttp WORD PTR [edx-0x2a]
  4152db:	pop    edx
  4152dc:	out    0x8,al
  4152de:	mov    edx,0xd3d9ef73
  4152e3:	int3   
  4152e4:	ficomp WORD PTR [ebp-0x1d2993e0]
  4152ea:	or     BYTE PTR [esi+0x3a313fda],dl
  4152f0:	mov    esp,0xd0f665d3
  4152f5:	test   DWORD PTR [esi-0x59],esp
  4152f8:	push   ecx
  4152f9:	or     al,0xb3
  4152fb:	push   eax
  4152fc:	retf   
  4152fd:	fmul   DWORD PTR [ebx-0x3e]
  415300:	out    dx,eax
  415301:	pop    esp
  415302:	ds jno 0x4152a9
  415305:	mov    ds:0x4e5e286e,al
  41530a:	addr16 push ebp
  41530c:	enter  0x8d0d,0x38
  415310:	lea    esi,[ebx*4-0x2a12a9a2]
  415317:	fdivrp st(3),st
  415319:	dec    esi
  41531a:	mov    dl,0x42
  41531c:	xor    eax,0x3da4a870
  415321:	jo     0x4152d7
  415323:	jl     0x4152f3
  415325:	inc    edx
  415326:	(bad)  
  415328:	xor    DWORD PTR [edi+0x47407f56],0xffffffa4
  41532f:	mov    al,BYTE PTR [ebp+0x66]
  415332:	in     eax,0x7e
  415334:	pop    ss
  415335:	xor    DWORD PTR [edi-0x16be9222],edi
  41533b:	stc    
  41533c:	xchg   dh,ch
  41533e:	out    dx,eax
  41533f:	dec    eax
  415340:	push   ss
  415341:	stos   DWORD PTR es:[edi],eax
  415342:	leave  
  415343:	rcl    DWORD PTR [ecx+0x51],cl
  415346:	sub    ch,dh
  415348:	pop    edx
  415349:	imul   edi,DWORD PTR [edx+0x3e],0xfffffffc
  41534d:	das    
  41534e:	ins    BYTE PTR es:[edi],dx
  41534f:	pop    esi
  415350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415351:	adc    eax,0x61944388
  415356:	ficom  DWORD PTR [edi-0x23bae45b]
  41535c:	adc    BYTE PTR [ebx],0x99
  41535f:	popf   
  415360:	dec    ebx
  415361:	int    0xf8
  415363:	lods   al,BYTE PTR ds:[esi]
  415364:	cmp    BYTE PTR [edx-0x6e9d0ad0],ah
  41536a:	xchg   edx,eax
  41536b:	push   ecx
  41536c:	lods   eax,DWORD PTR ds:[esi]
  41536d:	xor    eax,0x689b9c7b
  415372:	retf   0x6cd1
  415375:	push   esp
  415376:	and    al,0xb7
  415378:	ret    0x91b0
  41537b:	nop
  41537c:	xchg   eax,esp
  41537e:	push   0x50a3b3f8
  415383:	pop    ecx
  415384:	imul   ebx,DWORD PTR [edi-0x77],0xf46d2734
  41538b:	stos   BYTE PTR es:[edi],al
  41538c:	test   ah,al
  41538e:	call   0x8e28:0xd82da4bf
  415395:	sahf   
  415396:	xor    ebp,0x2a0aa5ec
  41539c:	sar    BYTE PTR [esi+0x101e194c],cl
  4153a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153a3:	jecxz  0x415377
  4153a5:	pushf  
  4153a6:	mov    dh,0x63
  4153a8:	xor    eax,DWORD PTR [esi]
  4153aa:	out    0xc0,eax
  4153ac:	mov    ecx,gs
  4153ae:	xor    eax,DWORD PTR [esi+0x23c40269]
  4153b4:	xchg   esi,eax
  4153b5:	sub    BYTE PTR [ebx-0x59d444d4],dl
  4153bb:	pop    ebx
  4153bc:	or     al,0xf6
  4153be:	mul    ch
  4153c0:	mov    ebp,0x630ad4e3
  4153c5:	adc    al,0x16
  4153c7:	inc    eax
  4153c8:	(bad)
  4153cb:	sbb    BYTE PTR [edi-0x543779bd],ah
  4153d1:	leave  
  4153d2:	ja     0x415450
  4153d4:	imul   esi,DWORD PTR [ecx-0x1a0c6d23],0xffffffb1
  4153db:	je     0x41544c
  4153dd:	iret   
  4153de:	or     DWORD PTR [eax],0xdbcf3e20
  4153e4:	and    esi,ecx
  4153e6:	dec    edx
  4153e7:	inc    ebx
  4153e8:	cmp    BYTE PTR [ebp+0x37],cl
  4153eb:	mov    al,0xfd
  4153ed:	sar    ah,0x2b
  4153f0:	mov    dh,0xed
  4153f2:	mov    ebx,0x411fe55d
  4153f7:	jbe    0x4153b1
  4153f9:	daa    
  4153fa:	div    al
  4153fc:	xchg   ebp,eax
  4153fd:	fild   DWORD PTR ds:0x91f5787
  415403:	sbb    esi,esp
  415405:	mov    BYTE PTR [ebp+eax*2+0x72f5eed6],al
  41540c:	cdq    
  41540d:	(bad)  
  41540e:	in     al,dx
  41540f:	ficomp DWORD PTR [edx-0x62770cbf]
  415415:	or     BYTE PTR [edx-0x5a],ch
  415418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415419:	xchg   edi,ebp
  41541b:	out    dx,eax
  41541c:	cs icebp 
  41541e:	ja     0x415403
  415420:	(bad)  
  415422:	nop
  415423:	cmp    eax,0x5ae69252
  415428:	mov    esi,0xe7760374
  41542d:	jg     0x415418
  41542f:	mov    bl,0x6a
  415431:	mov    cs,WORD PTR ds:0x5b556e01
  415437:	mov    BYTE PTR [eax-0x3cf62910],al
  41543d:	daa    
  41543e:	addr16 and esi,edi
  415441:	cdq    
  415442:	ficomp WORD PTR [ecx+0x2149ced5]
  415448:	fsubr  QWORD PTR [eax+0x3d]
  41544b:	fbld   TBYTE PTR [ebp-0x6a]
  41544e:	pop    ebp
  41544f:	(bad)  
  415450:	loop   0x41540e
  415452:	jl     0x4154c6
  415454:	xchg   ecx,eax
  415455:	popa   
  415456:	(bad)  
  415457:	mov    dh,cl
  415459:	fcomp  DWORD PTR [eax]
  41545b:	aad    0x42
  41545d:	cmc    
  41545e:	xchg   ebx,eax
  41545f:	ret    
  415460:	pop    edx
  415461:	cdq    
  415462:	rcl    DWORD PTR [edx+0x57],0xf
  415466:	mov    esp,0x9cb565c3
  41546b:	push   0xffffff96
  41546d:	push   edx
  41546e:	shl    bh,0x5d
  415471:	stos   DWORD PTR es:[edi],eax
  415472:	sub    ebx,DWORD PTR [edx-0x76363aab]
  415478:	mov    al,BYTE PTR [esp+eax*4]
  41547b:	test   BYTE PTR [esi+0x4],dl
  41547e:	in     al,dx
  41547f:	sub    eax,0xdbebb203
  415484:	loope  0x415478
  415486:	test   BYTE PTR [ecx-0x32],dh
  415489:	xchg   edx,eax
  41548a:	sub    DWORD PTR [ebp+0x5782e08a],eax
  415490:	adc    DWORD PTR [edx],ebx
  415492:	pop    esi
  415493:	xchg   edi,eax
  415494:	test   eax,ebx
  415496:	xor    DWORD PTR [esi],eax
  415498:	push   0xba41791c
  41549d:	cmp    eax,0x299d9a63
  4154a2:	hlt    
  4154a3:	mov    al,ds:0x2058e9ff
  4154a8:	fmul   QWORD PTR [ebx+0x6d28c419]
  4154ae:	unpcklps xmm2,XMMWORD PTR [ecx-0x1f]
  4154b2:	ror    BYTE PTR [edx],1
  4154b4:	stos   DWORD PTR es:[edi],eax
  4154b5:	and    al,0xb1
  4154b7:	test   DWORD PTR [edi-0x73cb66f6],eax
  4154bd:	aaa    
  4154be:	stos   DWORD PTR es:[edi],eax
  4154bf:	imul   ebp,DWORD PTR [eax+0x67cfd613],0x36
  4154c6:	mov    bl,0x68
  4154c8:	inc    ebx
  4154c9:	or     eax,DWORD PTR [ebp-0x6b]
  4154cc:	daa    
  4154cd:	test   ecx,0xa48c25bb
  4154d3:	imul   ecx,DWORD PTR [esi-0x7520e18f],0x72
  4154da:	popa   
  4154db:	xor    eax,0x96f124fc
  4154e0:	cmp    dh,bh
  4154e2:	stos   DWORD PTR es:[edi],eax
  4154e3:	imul   eax,DWORD PTR [ebp+0x16acafa2],0xffffff90
  4154ea:	fnstsw WORD PTR [esi-0x7b]
  4154ed:	jmp    0x5a02:0x91d4dd75
  4154f4:	std    
  4154f5:	sub    eax,0x215cc450
  4154fa:	mov    al,ds:0x65480a2a
  4154ff:	sbb    eax,0xe32c8454
  415504:	xlat   BYTE PTR ds:[ebx]
  415505:	leave  
  415506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415507:	jno    0x41551e
  415509:	rcl    DWORD PTR [edi*2-0x483c83d],0xd5
  415511:	addr16 jmp 0x11b7335e
  415517:	jns    0x4154aa
  415519:	js     0x415512
  41551b:	addr16 xchg esp,eax
  41551d:	fist   DWORD PTR [ebx+0x10c4ddb9]
  415523:	or     DWORD PTR [edi+eiz*8+0x7],ecx
  415527:	or     ebp,eax
  415529:	xchg   esp,eax
  41552a:	push   0x14
  41552c:	nop
  41552d:	sub    WORD PTR [ebp+0xa75685a],dx
  415534:	out    0xcb,eax
  415536:	add    edx,DWORD PTR [edx+esi*2-0x22]
  41553a:	dec    ebx
  41553b:	mov    al,ds:0xa32442d
  415540:	mov    esp,0x543eb50a
  415545:	pop    ds
  415546:	call   0x147f:0xac7f0443
  41554d:	pop    esp
  41554e:	into   
  41554f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415550:	cmp    eax,0x9ddc5241
  415555:	mov    ebx,DWORD PTR [edi-0x3b59ef46]
  41555b:	aaa    
  41555c:	pop    ss
  41555d:	jne    0x415556
  41555f:	xchg   esi,eax
  415560:	sbb    al,bl
  415562:	nop
  415563:	es loop 0x41550d
  415566:	sbb    BYTE PTR [ecx],cl
  415568:	adc    esp,DWORD PTR [edx+0x5c03ff01]
  41556e:	mov    edx,0x7dc64f27
  415573:	pop    ebp
  415574:	dec    esi
  415575:	add    al,0x35
  415577:	sub    BYTE PTR [esi-0xaccf5e5],al
  41557d:	loopne 0x415541
  41557f:	mov    bl,0xc7
  415581:	(bad)  
  415582:	sahf   
  415583:	addr16 push es
  415585:	pop    ebp
  415586:	fstp   DWORD PTR [ebp+0x50]
  415589:	ins    BYTE PTR es:[edi],dx
  41558a:	mul    DWORD PTR [esi+0x4b]
  41558d:	aam    0xa6
  41558f:	aas    
  415590:	mov    ecx,DWORD PTR [edx]
  415592:	aas    
  415593:	xchg   esp,eax
  415594:	js     0x4155d5
  415596:	add    esp,eax
  415598:	mov    ch,0xbb
  41559a:	dec    edi
  41559b:	add    eax,0xdfbba162
  4155a0:	inc    BYTE PTR [edi+0x42]
  4155a3:	(bad)  
  4155a4:	imul   DWORD PTR [eax]
  4155a6:	imul   esi,DWORD PTR ds:[edi],0x1d
  4155aa:	add    al,0x45
  4155ac:	ror    BYTE PTR [esp+ebp*2+0x536e5f4b],1
  4155b3:	cwde   
  4155b4:	aas    
  4155b5:	inc    ebp
  4155b6:	jge    0x4155f1
  4155b8:	ss cmp eax,0xcc597281
  4155be:	or     BYTE PTR [ebx-0x160410af],dl
  4155c4:	fsqrt  
  4155c6:	shl    cl,cl
  4155c8:	or     cl,BYTE PTR [ebx-0x1390f356]
  4155ce:	mov    eax,ds:0x78a21763
  4155d3:	mov    ch,0x9b
  4155d5:	lods   eax,DWORD PTR ds:[esi]
  4155d6:	xlat   BYTE PTR ds:[ebx]
  4155d7:	sub    DWORD PTR [edi+ecx*1+0x78],0xe3a3ca88
  4155df:	das    
  4155e0:	fsub   QWORD PTR ds:0xf16f5f0e
  4155e6:	xchg   ecx,eax
  4155e7:	sub    eax,0x2054a557
  4155ec:	fcom   DWORD PTR [ebx-0x54]
  4155ef:	add    al,BYTE PTR [ecx]
  4155f1:	int3   
  4155f2:	sar    BYTE PTR [edx+edi*1],cl
  4155f5:	hlt    
  4155f6:	jb     0x415592
  4155f8:	mov    ebp,0xb33540e0
  4155fd:	out    dx,eax
  4155fe:	in     al,dx
  4155ff:	cmp    al,0x66
  415601:	ins    BYTE PTR es:[edi],dx
  415602:	jl     0x415672
  415604:	(bad)
  415607:	cmp    DWORD PTR [ebx],ecx
  415609:	dec    dx
  41560b:	pop    eax
  41560c:	retf   0x6593
  41560f:	mov    eax,ds:0xa5c589b1
  415614:	mov    eax,ds:0x65a0b8b8
  415619:	or     eax,0x7b2cf9f1
  41561e:	enter  0xf7b2,0xad
  415622:	xor    ecx,DWORD PTR [ebx*2-0x650dc44b]
  415629:	pop    ebx
  41562a:	push   ecx
  41562b:	mov    ch,BYTE PTR [edi-0x3d5e9c2a]
  415631:	inc    esp
  415632:	ret    0x27f7
  415635:	fnstsw WORD PTR [ecx+0x6e]
  415638:	out    0x92,al
  41563a:	inc    eax
  41563b:	push   ebp
  41563c:	or     al,0x8a
  41563e:	add    BYTE PTR [eax],bl
  415640:	xor    DWORD PTR [ecx-0x50],esp
  415643:	mov    ebp,0xd6dfdc2b
  415648:	scas   eax,DWORD PTR es:[edi]
  415649:	jae    0x4156b1
  41564b:	and    dh,bh
  41564d:	lds    esi,FWORD PTR [ecx]
  41564f:	das    
  415650:	mov    cl,0x37
  415652:	dec    ebp
  415653:	or     al,0x31
  415655:	out    dx,eax
  415656:	lea    ebx,[eax-0x65]
  415659:	cmp    al,0x7e
  41565b:	repz repnz retf 0xa69d
  415660:	and    cl,dh
  415662:	cmc    
  415663:	sbb    DWORD PTR [ebx+0x33f5c62],0x4f
  41566a:	adc    al,0x44
  41566c:	clc    
  41566d:	out    0x9c,eax
  41566f:	pminub mm2,QWORD PTR [ecx-0x470116de]
  415676:	adc    DWORD PTR [edi],ebp
  415678:	jo     0x4156b5
  41567a:	xchg   edx,eax
  41567b:	retf   
  41567c:	gs ret 0x5cd1
  415680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415681:	jne    0x415659
  415683:	repz retf 
  415685:	xchg   ecx,eax
  415686:	or     edi,DWORD PTR [esi-0xa]
  415689:	push   esi
  41568a:	adc    ecx,esp
  41568c:	xchg   ebp,eax
  41568d:	jp     0x4156d2
  41568f:	jbe    0x4156ca
  415691:	aaa    
  415692:	add    al,0xd4
  415694:	push   es
  415695:	push   es
  415696:	adc    ebp,DWORD PTR [esi]
  415698:	and    bl,BYTE PTR [ecx]
  41569a:	lods   al,BYTE PTR ds:[esi]
  41569b:	in     al,0x13
  41569d:	mov    dh,0x45
  41569f:	xchg   DWORD PTR [eax-0x56f506dc],esp
  4156a5:	ds inc esp
  4156a7:	pop    edi
  4156a8:	xchg   ebx,eax
  4156a9:	adc    DWORD PTR [ebx+0x35ee1d8a],0xf6ecfff6
  4156b3:	fsub   QWORD PTR [esi-0x7ffeeb7]
  4156b9:	fcmove st,st(3)
  4156bb:	inc    ecx
  4156bc:	jo     0x4156b0
  4156be:	sbb    bl,al
  4156c0:	mov    bl,0x72
  4156c2:	add    dh,BYTE PTR [ecx+0xd]
  4156c5:	out    0x16,eax
  4156c7:	jmp    0x415727
  4156c9:	cmc    
  4156ca:	inc    esi
  4156cb:	xchg   edi,eax
  4156cc:	mov    bl,0xbf
  4156ce:	pop    edx
  4156cf:	loop   0x415727
  4156d1:	inc    ecx
  4156d2:	xchg   edx,eax
  4156d3:	sbb    DWORD PTR [edi],esi
  4156d5:	add    eax,DWORD PTR [ecx]
  4156d7:	ret    0x2dca
  4156da:	xor    dl,BYTE PTR [eax-0x2f]
  4156dd:	adc    bh,al
  4156df:	leave  
  4156e0:	push   ebp
  4156e1:	mov    WORD PTR [edx-0x7],?
  4156e4:	(bad)  
  4156e5:	(bad)  
  4156e6:	add    bh,BYTE PTR [ebx-0x2225100c]
  4156ec:	mov    al,ds:0x271483bf
  4156f1:	repz mov ebp,0x8cac9c37
  4156f7:	mov    ah,BYTE PTR [ebx-0x4]
  4156fa:	or     BYTE PTR [ebp+0x372de59d],dl
  415700:	sar    BYTE PTR ds:0x79a7845b,1
  415706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415707:	xlat   BYTE PTR ds:[ebx]
  415708:	xor    BYTE PTR [eax],0x82
  41570b:	aas    
  41570c:	xor    BYTE PTR [eax],0x78
  41570f:	push   ss
  415710:	sub    DWORD PTR ds:0x65b76201,edi
  415716:	icebp  
  415717:	loop   0x415704
  415719:	dec    ebp
  41571a:	data16 js 0x415765
  41571d:	mov    al,0xe2
  41571f:	mov    esp,0xcc0b0645
  415724:	jo     0x41573a
  415726:	adc    ebp,edx
  415728:	(bad)  
  415729:	cmp    esi,edi
  41572b:	(bad)  
  41572c:	out    0x3e,eax
  41572e:	loopne 0x4156e7
  415730:	lods   al,BYTE PTR ds:[esi]
  415731:	cmp    DWORD PTR [ebp-0x73],esp
  415734:	dec    edx
  415735:	jmp    0xe5ad:0x45efd2fc
  41573c:	test   al,0x37
  41573e:	adc    cl,BYTE PTR [eax+0xf]
  415741:	mov    al,0x6f
  415743:	repnz pop ss
  415745:	imul   edx,edx,0xff88240c
  41574b:	cwde   
  41574c:	mov    bl,0xe2
  41574e:	test   al,0xde
  415750:	int    0x60
  415752:	sbb    edx,ebx
  415754:	jb     0x4156f8
  415756:	mov    eax,ds:0x382eded8
  41575b:	add    WORD PTR [ebp-0x6b],cx
  41575f:	xchg   edx,eax
  415760:	sahf   
  415761:	jae    0x415797
  415763:	cmp    DWORD PTR [edx],esi
  415765:	xchg   esp,eax
  415766:	test   esi,0x62af031f
  41576c:	push   esp
  41576d:	sub    edi,DWORD PTR [edx-0x11818ce5]
  415773:	jns    0x41578e
  415775:	push   cs
  415776:	or     ebx,DWORD PTR [edx+0x4c]
  415779:	repnz dec edx
  41577b:	add    eax,0xb8951d56
  415780:	xor    DWORD PTR [esi+0xc],esi
  415783:	pop    esi
  415784:	or     BYTE PTR [ecx],0xad
  415787:	sub    dh,BYTE PTR [eax-0x4abacfc3]
  41578d:	ud0    esp,esp
  415790:	or     eax,0x1fc5b189
  415795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415796:	dec    ecx
  415797:	mov    gs,ebx
  415799:	jae    0x415764
  41579b:	neg    BYTE PTR [esi]
  41579d:	(bad)
  4157a0:	out    0x1d,eax
  4157a2:	xlat   BYTE PTR ds:[ebx]
  4157a3:	jle    0x4157a6
  4157a5:	jge    0x415792
  4157a7:	enter  0xaf5b,0xb8
  4157ab:	mov    al,0x2a
  4157ad:	arpl   WORD PTR [eax-0x1e],sp
  4157b0:	lods   eax,DWORD PTR ds:[esi]
  4157b1:	mov    al,ds:0xeb4cd498
  4157b6:	mov    ebx,0x567a18e6
  4157bb:	or     DWORD PTR [ecx+0x2a],edi
  4157be:	jecxz  0x415832
  4157c0:	ret    0x8d65
  4157c3:	outs   dx,DWORD PTR ds:[esi]
  4157c4:	sub    edi,DWORD PTR ds:0xeadf74d
  4157ca:	jmp    0x9c9d4b6b
  4157cf:	sbb    BYTE PTR [ebp-0x47640492],dh
  4157d5:	test   eax,0x54a1ac34
  4157da:	push   es
  4157db:	sub    al,0xc4
  4157dd:	xor    ah,BYTE PTR [ebp-0x1]
  4157e0:	loopne 0x41584a
  4157e2:	or     eax,0xfff6e86b
  4157e7:	mov    ds:0x6b388612,al
  4157ec:	mov    ah,0xc
  4157ee:	jecxz  0x415809
  4157f0:	jmp    0x80c8981d
  4157f5:	cmp    cl,BYTE PTR [eax]
  4157f7:	rol    DWORD PTR [ecx-0x3d6f34ac],0x46
  4157fe:	and    ecx,ecx
  415800:	and    DWORD PTR [edi],esi
  415802:	or     ecx,DWORD PTR [esi+edx*8]
  415805:	fidivr DWORD PTR [ecx+0x12e7f8df]
  41580b:	popa   
  41580c:	test   BYTE PTR [eax+0x2ebbb99a],ch
  415812:	sub    BYTE PTR [ebp-0x5fd46325],ah
  415818:	in     al,0xc
  41581a:	dec    DWORD PTR ds:[ebp-0x61]
  41581e:	dec    ebp
  41581f:	sub    esp,DWORD PTR [esi+0x1c]
  415822:	fsubr  QWORD PTR ds:0x8ff748cb
  415828:	outs   dx,DWORD PTR ds:[esi]
  415829:	push   ebp
  41582a:	sbb    DWORD PTR [edx-0x7fd2c52],ecx
  415830:	iret   
  415831:	jmp    0x1187c504
  415836:	call   0x90c85d7
  41583b:	pop    ss
  41583c:	add    al,BYTE PTR [edi+0x2b8a4d96]
  415842:	xchg   edx,eax
  415843:	pop    edi
  415844:	sbb    dl,BYTE PTR [ebp-0x24]
  415847:	cwde   
  415848:	xor    ebx,DWORD PTR [edx-0x4a9e4928]
  41584e:	sbb    ch,0x20
  415851:	retf   0x11c3
  415854:	mov    esi,0x4d194d34
  415859:	bound  edi,QWORD PTR [ebp+0x6a404eda]
  41585f:	shl    dl,1
  415861:	or     eax,DWORD PTR [ebx+0x50]
  415864:	mov    WORD PTR ds:0xc0a33b82,ds
  41586a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41586b:	mov    edx,0xa229d433
  415870:	push   esp
  415871:	mov    dl,0xa8
  415873:	ret    0x45c9
  415876:	add    dl,dh
  415878:	loope  0x4158f8
  41587a:	stos   DWORD PTR es:[edi],eax
  41587b:	dec    ecx
  41587c:	or     DWORD PTR [eax+0xf76c707],esi
  415882:	or     DWORD PTR [esi],0x7c
  415885:	ret    0x41b7
  415888:	add    al,0x70
  41588b:	mov    DWORD PTR [eax-0x2e],ecx
  41588e:	ret    0x29b5
  415891:	xor    al,0x97
  415893:	and    eax,0x643c7246
  415898:	lea    edx,[ecx+0x23fce044]
  41589e:	mov    WORD PTR [esi-0x12],fs
  4158a1:	push   es
  4158a2:	inc    edi
  4158a3:	(bad)  
  4158a4:	call   0xb24686c2
  4158a9:	inc    esp
  4158aa:	lahf   
  4158ab:	inc    ebp
  4158ac:	inc    edi
  4158ad:	push   es
  4158ae:	sbb    BYTE PTR [ecx-0x2a],0xda
  4158b2:	adc    eax,0xb8eec8ed
  4158b7:	sub    eax,0x8303b49a
  4158bc:	mov    BYTE PTR [ebx+0x209984d8],bl
  4158c2:	adc    al,0xd
  4158c4:	clc    
  4158c5:	retf   
  4158c6:	pop    ecx
  4158c7:	(bad)  
  4158c8:	(bad)  
  4158ca:	and    eax,0x86c228a8
  4158cf:	ficom  WORD PTR [ebx]
  4158d1:	retf   0x93f2
  4158d4:	aaa    
  4158d5:	or     BYTE PTR [edi-0x63],ch
  4158d8:	cld    
  4158d9:	mov    edx,0x36f1b6d7
  4158de:	and    al,0xf8
  4158e0:	imul   eax,DWORD PTR [esi],0xdcd4e5b0
  4158e6:	sbb    al,ch
  4158e8:	test   eax,0xd1654324
  4158ed:	loopne 0x4158a7
  4158ef:	or     eax,0x40c05f42
  4158f4:	jp     0x415906
  4158f6:	mov    esi,0xd2483ae
  4158fb:	add    al,0x9c
  4158fd:	adc    DWORD PTR [ebx+0x1f5bff41],edi
  415903:	test   BYTE PTR [esi-0x44],bh
  415906:	xor    eax,0x597e032e
  41590c:	scas   eax,DWORD PTR es:[edi]
  41590d:	push   0xcf131c3b
  415912:	cmp    eax,0xbcc4bd3b
  415917:	sbb    ecx,DWORD PTR [edi+ebp*1]
  41591a:	cmp    cl,ah
  41591c:	pop    edi
  41591d:	sbb    DWORD PTR [edx-0x4df17268],edx
  415923:	jl     0x41599b
  415925:	enter  0x4bfc,0x86
  415929:	lods   eax,DWORD PTR ds:[esi]
  41592a:	and    bl,BYTE PTR [esi-0x10e76dfa]
  415930:	xchg   esi,eax
  415931:	(bad)  
  415932:	(bad)  
  415933:	mov    ds:0xa6288337,eax
  415938:	dec    esp
  415939:	mov    bl,BYTE PTR [eax]
  41593b:	rcl    DWORD PTR [ebp+0x55f93a3a],1
  415941:	sub    al,0xe3
  415943:	dec    ebp
  415944:	adc    BYTE PTR [ebp+ebp*2+0x78],al
  415948:	ret    
  415949:	rcr    BYTE PTR [ebx-0x3d],0xce
  41594d:	fnstenv [ecx-0x4]
  415950:	ds repnz mov ecx,0x9a66a798
  415957:	and    al,0xf8
  415959:	pop    edi
  41595a:	dec    edi
  41595b:	fistp  QWORD PTR [ecx]
  41595d:	dec    eax
  41595e:	or     esp,esi
  415960:	(bad)  
  415961:	test   dh,bh
  415963:	mov    ah,0xad
  415965:	mov    dh,0xef
  415967:	out    dx,eax
  415968:	(bad)  
  415969:	pop    ebp
  41596a:	jmp    0xbd3c2ee
  41596f:	or     esp,edx
  415971:	stos   BYTE PTR es:[edi],al
  415972:	mov    ds:0x57a7e7cc,al
  415977:	dec    edx
  415978:	jecxz  0x4159a2
  41597a:	leave  
  41597b:	cwde   
  41597c:	lods   eax,DWORD PTR ds:[esi]
  41597e:	mov    ebp,0x6e7f4abc
  415983:	ds (bad) 
  415985:	pop    ecx
  415986:	es jno 0x41596e
  415989:	xor    DWORD PTR [esi-0x63],eax
  41598c:	cmc    
  41598d:	outs   dx,DWORD PTR ds:[esi]
  41598e:	cmp    ah,al
  415990:	mov    ch,0x43
  415992:	jmp    0x4159a3
  415994:	ins    BYTE PTR es:[edi],dx
  415995:	add    DWORD PTR [esi],esi
  415997:	adc    eax,0xa08bb57e
  41599c:	scas   al,BYTE PTR es:[edi]
  41599d:	inc    ebp
  41599e:	dec    ebp
  41599f:	mov    ah,0xb5
  4159a1:	push   esp
  4159a2:	jns    0x4159fc
  4159a4:	push   eax
  4159a5:	stos   DWORD PTR es:[edi],eax
  4159a6:	dec    edi
  4159a7:	mov    eax,ds:0xfbe41f35
  4159ac:	push   ebp
  4159ad:	fist   DWORD PTR [ebp-0x434a566e]
  4159b3:	(bad)
  4159b7:	inc    esp
  4159b8:	jne    0x415a1e
  4159ba:	aad    0x40
  4159bc:	shl    DWORD PTR [ecx-0x24],cl
  4159bf:	hlt    
  4159c0:	adc    DWORD PTR [edx+edi*4+0x754e5480],eax
  4159c7:	loop   0x4159aa
  4159c9:	std    
  4159ca:	mov    eax,0x1f984605
  4159cf:	ret    
  4159d0:	mov    edx,0xabc5beab
  4159d5:	retf   0xd6b
  4159d8:	call   0x16423ee6
  4159dd:	jb     0x41598a
  4159df:	xchg   esp,eax
  4159e0:	mov    edi,DWORD PTR [ecx+0x20]
  4159e3:	mov    dl,dh
  4159e5:	push   esi
  4159e6:	jnp    0x415a46
  4159e8:	jmp    esp
  4159ea:	or     BYTE PTR [ebp+0x242a35f],dh
  4159f0:	and    dh,BYTE PTR [eax-0x68]
  4159f3:	(bad)  
  4159f4:	mov    ch,0x4c
  4159f6:	push   ebp
  4159f7:	push   esp
  4159f8:	pushf  
  4159f9:	sar    DWORD PTR [eax+0x2694f451],1
  4159ff:	dec    esi
  415a00:	cli    
  415a01:	sar    BYTE PTR [eax+0x6b],cl
  415a04:	adc    BYTE PTR [ebx],dl
  415a06:	repz adc DWORD PTR [eax+ecx*2],0x5635b541
  415a0e:	jae    0x415994
  415a10:	popf   
  415a11:	xchg   BYTE PTR [eax],bl
  415a13:	push   ebp
  415a14:	fiadd  WORD PTR [edx+0x7d]
  415a17:	hlt    
  415a18:	fdivr  st,st(4)
  415a1a:	sbb    cl,ah
  415a1c:	inc    edi
  415a1d:	pusha  
  415a1e:	and    al,0x75
  415a20:	vpaddusw ymm6,ymm1,YMMWORD PTR [edx+0x2eecf277]
  415a28:	(bad)  
  415a29:	call   0x9ed178e
  415a2e:	(bad)  
  415a2f:	loope  0x4159d1
  415a31:	xchg   edi,eax
  415a32:	mov    cl,BYTE PTR [esi]
  415a34:	pop    ecx
  415a35:	pop    edi
  415a36:	jp     0x415a1b
  415a38:	jp     0x4159f5
  415a3a:	retf   
  415a3b:	cmp    al,0x16
  415a3d:	mov    ecx,0xef0be51b
  415a42:	out    dx,eax
  415a43:	stos   DWORD PTR es:[edi],eax
  415a44:	cs jnp 0x415a3d
  415a47:	ret    
  415a48:	fs loop 0x4159eb
  415a4b:	jb     0x415aa2
  415a4d:	pop    eax
  415a4e:	mov    eax,ds:0x36824d67
  415a53:	mov    ah,0xc7
  415a55:	sbb    al,BYTE PTR [esi]
  415a57:	mov    BYTE PTR [ecx+esi*1-0x665d45c1],dl
  415a5e:	xchg   ebx,eax
  415a5f:	adc    eax,0x788731a5
  415a64:	or     ecx,eax
  415a66:	jge    0x415a8c
  415a68:	fs mov esp,0x5147f847
  415a6e:	lahf   
  415a6f:	aaa    
  415a70:	adc    BYTE PTR ds:0xd7d6a185,ah
  415a76:	jbe    0x415a0d
  415a78:	xchg   edi,eax
  415a79:	in     al,dx
  415a7a:	xchg   ebx,eax
  415a7b:	cmp    eax,DWORD PTR [eax+0x4cf58914]
  415a81:	mov    bl,0xa0
  415a83:	pop    esp
  415a84:	mov    edi,cs
  415a86:	and    esp,DWORD PTR [eax]
  415a88:	cmp    esp,DWORD PTR [eax+0x65]
  415a8b:	add    edx,DWORD PTR es:[ecx]
  415a8e:	or     al,0x57
  415a90:	retf   0x8815
  415a93:	xor    bh,bh
  415a95:	push   esp
  415a96:	jge    0x415a5f
  415a98:	pop    ds
  415a99:	mov    ch,cl
  415a9b:	adc    esi,ebp
  415a9d:	aam    0xa6
  415a9f:	dec    ebx
  415aa0:	popf   
  415aa1:	call   0x88b2:0x7b269a5c
  415aa8:	cmp    al,0x57
  415aaa:	(bad)  
  415aab:	int3   
  415aac:	stos   DWORD PTR es:[edi],eax
  415aad:	fld    QWORD PTR [eax-0x25]
  415ab0:	cmp    bl,BYTE PTR [edi+ecx*4]
  415ab3:	mov    bl,cl
  415ab5:	push   cs
  415ab6:	test   al,ah
  415ab8:	jne    0x415b14
  415aba:	mov    bh,0x6b
  415abc:	pop    edx
  415abd:	jne    0x415b20
  415abf:	loop   0x415a42
  415ac1:	inc    ebx
  415ac2:	int    0x10
  415ac4:	(bad)  
  415ac5:	(bad)  
  415ac6:	loop   0x415aec
  415ac8:	adc    eax,0x6c7e9929
  415acd:	lods   al,BYTE PTR ds:[esi]
  415ace:	jle    0x415b34
  415ad0:	mov    cl,0x2c
  415ad2:	pop    edi
  415ad3:	outs   dx,BYTE PTR ds:[esi]
  415ad4:	mov    ds:0xd2cdfd7f,eax
  415ad9:	(bad)  
  415ada:	pop    ebx
  415adb:	cmp    al,0xf5
  415add:	or     DWORD PTR [eax-0x32],esp
  415ae0:	adc    dl,BYTE PTR [esi]
  415ae2:	mov    ebp,0xf57cb0a
  415ae7:	xor    BYTE PTR [edi+0x13],ah
  415aea:	cmp    ebp,DWORD PTR [eax-0x3561af93]
  415af0:	xchg   ecx,eax
  415af1:	imul   ebx,DWORD PTR [ebx-0x20],0x36c01a7c
  415af8:	jbe    0x415a7f
  415afa:	jno    0x415b72
  415afc:	jae    0x415abc
  415afe:	mov    DWORD PTR [ebx-0x1a],ecx
  415b01:	cli    
  415b02:	loop   0x415b76
  415b04:	lds    ecx,FWORD PTR [ebx*1+0x454eabe1]
  415b0b:	sbb    al,0x57
  415b0d:	test   al,0xd6
  415b0f:	jnp    0x415aa7
  415b11:	inc    edi
  415b12:	add    al,0x29
  415b14:	push   edi
  415b15:	xchg   ecx,eax
  415b16:	inc    esp
  415b17:	std    
  415b18:	loopne 0x415b29
  415b1a:	add    DWORD PTR [edi-0x14],esp
  415b1d:	push   es
  415b1e:	cdq    
  415b1f:	sbb    eax,0x7dc1646c
  415b24:	ret    0xd0e4
  415b27:	sbb    dl,ch
  415b29:	pop    esi
  415b2a:	jbe    0x415ae1
  415b2c:	adc    esi,edi
  415b2e:	outs   dx,BYTE PTR ds:[esi]
  415b2f:	aad    0xb7
  415b31:	sbb    DWORD PTR [edx+0xb6ba356],ebp
  415b37:	rcr    DWORD PTR [ebp-0x5a42f295],1
  415b3d:	ins    DWORD PTR es:[edi],dx
  415b3e:	adc    BYTE PTR [ebx+0x71b326ce],bh
  415b44:	jg     0x415bb4
  415b46:	or     ax,0xdde8
  415b4a:	mov    bh,0x8a
  415b4c:	or     al,0x87
  415b4e:	mov    ebp,0x389808ce
  415b53:	lock xchg ebx,eax
  415b55:	jbe    0x415b61
  415b57:	call   DWORD PTR [esi-0x6b77b7ec]
  415b5d:	adc    al,0x4f
  415b5f:	dec    eax
  415b60:	sbb    DWORD PTR [eax+eax*4],0x940d1f6e
  415b67:	pop    edi
  415b68:	stos   DWORD PTR es:[edi],eax
  415b69:	mov    ss,WORD PTR [ecx]
  415b6b:	std    
  415b6c:	stos   BYTE PTR es:[edi],al
  415b6d:	mov    DWORD PTR [edi-0x2],esi
  415b70:	mov    al,0x19
  415b72:	push   0xffffff99
  415b74:	ror    ebx,cl
  415b76:	and    al,0x1e
  415b78:	inc    esi
  415b7a:	lahf   
  415b7b:	push   ss
  415b7c:	and    eax,0x14139212
  415b81:	sbb    edi,DWORD PTR [edx+0x2dde728d]
  415b87:	loopne 0x415bc4
  415b89:	loopne 0x415bea
  415b8b:	enter  0xd96f,0x15
  415b8f:	cmp    DWORD PTR [esi],esi
  415b91:	dec    ecx
  415b92:	lock shl BYTE PTR [ecx-0x49c48bb0],1
  415b99:	cmovne eax,ebx
  415b9c:	retf   0x9fa4
  415b9f:	ret    0xbf53
  415ba2:	push   edi
  415ba3:	push   esp
  415ba4:	dec    edx
  415ba5:	and    eax,0x3fb4e0ba
  415baa:	xchg   ebx,eax
  415bab:	sbb    dl,bh
  415bad:	or     eax,0xa6fa675b
  415bb2:	fdivr  QWORD PTR [ebx-0x4d]
  415bb5:	fcmovne st,st(6)
  415bb7:	pop    edi
  415bb8:	cmp    DWORD PTR [edi-0x4],esp
  415bbb:	das    
  415bbc:	clc    
  415bbd:	fst    QWORD PTR [ebx]
  415bbf:	and    eax,0xb3909b6c
  415bc4:	adc    ebp,ebp
  415bc6:	clc    
  415bc7:	push   esp
  415bc8:	test   edx,ecx
  415bca:	ret    
  415bcb:	inc    esp
  415bcc:	repnz rcr ch,cl
  415bcf:	sub    esi,0x72
  415bd2:	inc    ecx
  415bd3:	sbb    DWORD PTR [ecx],esp
  415bd5:	shl    BYTE PTR [ecx+ecx*2-0x7d],0xe9
  415bda:	stos   BYTE PTR es:[edi],al
  415bdb:	dec    edi
  415bdc:	mov    ch,0x65
  415bde:	mov    esi,0xc4d88645
  415be3:	push   ebx
  415be4:	outs   dx,BYTE PTR ds:[esi]
  415be5:	jmp    0x415bbb
  415be7:	mov    ah,0xeb
  415be9:	cmp    al,BYTE PTR [ebx]
  415beb:	add    dl,bh
  415bed:	fadd   QWORD PTR [esi]
  415bef:	into   
  415bf0:	or     ch,dl
  415bf2:	ds xchg edi,eax
  415bf4:	call   0x22a:0x6de3a15c
  415bfb:	pop    edi
  415bfc:	mov    dl,0xd
  415bfe:	lahf   
  415bff:	and    ecx,0x37
  415c02:	jne    0x415ba4
  415c04:	(bad)  
  415c05:	pop    esp
  415c06:	aad    0x30
  415c08:	ins    BYTE PTR es:[edi],dx
  415c09:	mov    cl,0xfd
  415c0b:	sbb    DWORD PTR [esi+0x34ac36a4],edx
  415c11:	jae    0x415c0c
  415c13:	pop    ecx
  415c14:	call   0xdf7672a0
  415c19:	(bad)  
  415c1a:	jmp    0x7aae5956
  415c1f:	adc    eax,0x1f9e4286
  415c24:	ss sti 
  415c26:	out    0xc9,al
  415c28:	jl     0x415c85
  415c2a:	mov    dl,0x4e
  415c2c:	in     al,dx
  415c2d:	aad    0x20
  415c2f:	scas   eax,DWORD PTR es:[edi]
  415c30:	jns    0x415c0c
  415c32:	adc    al,0x68
  415c34:	adc    al,0xb5
  415c36:	cmp    al,0x8e
  415c38:	jns    0x415c38
  415c3a:	scas   eax,DWORD PTR es:[edi]
  415c3b:	arpl   WORD PTR [esi],sp
  415c3d:	add    bh,al
  415c3f:	lahf   
  415c40:	mov    cl,0x90
  415c42:	mov    eax,ds:0xd2e1ac70
  415c47:	cwde   
  415c48:	dec    edi
  415c49:	in     al,0x81
  415c4b:	xchg   esi,eax
  415c4c:	test   eax,0x4fe5f1e1
  415c51:	inc    edx
  415c52:	inc    ecx
  415c53:	dec    cl
  415c55:	xchg   ebp,eax
  415c56:	xor    dl,BYTE PTR [edi+0x27f69419]
  415c5c:	pop    edx
  415c5d:	xor    bl,BYTE PTR [ebx]
  415c5f:	sbb    al,0x1c
  415c61:	sbb    cl,BYTE PTR [edi+0x15]
  415c64:	test   al,dh
  415c66:	repz or esp,DWORD PTR [edi]
  415c69:	cmp    BYTE PTR [ebp+0x6f],cl
  415c6c:	mov    eax,0x79cdf1f5
  415c71:	inc    ebx
  415c72:	lds    esp,FWORD PTR [edi]
  415c74:	xchg   dh,ch
  415c76:	jmp    0x415c02
  415c78:	pushf  
  415c79:	lods   al,BYTE PTR ds:[esi]
  415c7a:	and    eax,0xc232acf6
  415c7f:	dec    ecx
  415c80:	xor    eax,0xc6790d35
  415c85:	push   0x1a
  415c87:	xchg   esp,eax
  415c88:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c8a:	int3   
  415c8b:	icebp  
  415c8c:	dec    edi
  415c8d:	cmp    DWORD PTR [ecx-0x32],edi
  415c90:	jge    0x415ce9
  415c92:	maskmovq mm5,(bad)
  415c93:	imul   DWORD PTR [esi-0x35]
  415c96:	pop    esp
  415c97:	out    0x9b,eax
  415c99:	imul   ebp,DWORD PTR [ecx+0x2d],0xffffffa2
  415c9d:	jl     0x415cd1
  415c9f:	push   esp
  415ca0:	inc    edx
  415ca1:	xor    eax,DWORD PTR [esi]
  415ca3:	add    al,0x9
  415ca5:	(bad)  
  415ca7:	pusha  
  415ca8:	jae    0x415c60
  415caa:	mov    al,0xae
  415cac:	lahf   
  415cad:	pop    es
  415cae:	pop    es
  415caf:	ds das 
  415cb1:	xor    al,0x1f
  415cb3:	sahf   
  415cb4:	iret   
  415cb5:	in     eax,dx
  415cb6:	adc    BYTE PTR ds:[edi+0x6aecff40],dh
  415cbd:	fcomp  st(3)
  415cbf:	mov    cl,dh
  415cc1:	pop    edx
  415cc2:	scas   al,BYTE PTR es:[edi]
  415cc3:	scas   eax,DWORD PTR es:[edi]
  415cc4:	shl    BYTE PTR [eax],1
  415cc6:	ja     0x415c58
  415cc8:	stos   BYTE PTR es:[edi],al
  415cc9:	out    dx,al
  415cca:	jnp    0x415c88
  415ccc:	call   0xcd4b:0x41680930
  415cd3:	dec    esi
  415cd4:	cmp    edx,edx
  415cd6:	mov    dl,ah
  415cd8:	rol    DWORD PTR [ebx],cl
  415cda:	(bad)  
  415cdb:	dec    ebx
  415cdc:	pop    ebp
  415cdd:	adc    eax,0x5763e163
  415ce2:	in     al,dx
  415ce3:	pop    edx
  415ce4:	stos   BYTE PTR es:[edi],al
  415ce5:	xor    dl,BYTE PTR [edx]
  415ce7:	call   0xdfd2756f
  415cec:	test   al,0xb4
  415cee:	xchg   ecx,eax
  415cef:	popf   
  415cf0:	ret    0xbd3
  415cf3:	mov    ds,WORD PTR [eax+0x39]
  415cf6:	shl    DWORD PTR [esi+edx*2],1
  415cf9:	or     DWORD PTR [esi+0x3248aa6b],esi
  415cff:	and    DWORD PTR [esi+0xf],esi
  415d02:	pop    ebx
  415d03:	jne    0x415ca4
  415d05:	aad    0x86
  415d07:	repnz (bad) 
  415d0a:	sbb    al,0xb5
  415d0c:	ror    BYTE PTR [esi-0x5d],1
  415d0f:	xchg   edx,eax
  415d10:	scas   al,BYTE PTR es:[edi]
  415d11:	and    cl,0x2f
  415d14:	push   ds
  415d15:	cmp    DWORD PTR [edx+ebx*1+0x37d43f71],ebp
  415d1c:	addr16 ret 0x7365
  415d20:	lock cmp DWORD PTR [edi+edx*8-0x20],esp
  415d25:	dec    esp
  415d26:	add    eax,0x2494da9b
  415d2b:	and    ebx,DWORD PTR [ebx]
  415d2d:	cmp    esp,DWORD PTR [ebx-0x57]
  415d30:	mov    ds,WORD PTR [ebx-0x9]
  415d33:	xor    DWORD PTR [edx+eax*1-0x9],edx
  415d37:	fst    QWORD PTR [ecx+0x2]
  415d3a:	loop   0x415d60
  415d3c:	push   ds
  415d3d:	sub    cl,bl
  415d3f:	pop    edx
  415d40:	aaa    
  415d41:	pop    ecx
  415d42:	dec    eax
  415d43:	inc    ah
  415d45:	(bad)  
  415d46:	lds    sp,DWORD PTR [edx+0x259b70d5]
  415d4d:	mov    ch,0x51
  415d4f:	dec    esi
  415d50:	cwde   
  415d51:	push   ss
  415d52:	jae    0x415d66
  415d54:	clc    
  415d55:	(bad)  
  415d56:	jbe    0x415d2a
  415d58:	mov    ah,0x2d
  415d5a:	gs sbb esi,edi
  415d5d:	(bad)  
  415d5f:	adc    DWORD PTR [edx-0x69],ebp
  415d62:	jg     0x415d20
  415d64:	pop    es
  415d65:	pop    esp
  415d66:	popf   
  415d67:	mov    al,0x90
  415d69:	ss pop esp
  415d6b:	ret    
  415d6c:	pop    edi
  415d6d:	add    DWORD PTR ds:0xec8b288b,0xd39a6c74
  415d77:	mov    al,ds:0x30b51d41
  415d7c:	push   es
  415d7d:	in     eax,0x40
  415d7f:	mov    dh,BYTE PTR [esi]
  415d81:	inc    esi
  415d82:	jge    0x415d78
  415d84:	inc    ecx
  415d85:	xchg   ebp,eax
  415d86:	pop    esp
  415d87:	mov    bl,0xaa
  415d89:	mov    cl,0x85
  415d8b:	jle    0x415d1b
  415d8d:	fldcw  WORD PTR ds:0x91180bb9
  415d93:	or     al,0x63
  415d95:	sub    al,BYTE PTR [esi-0x4f7a01c1]
  415d9b:	stc    
  415d9c:	fisttp QWORD PTR [esi]
  415d9e:	mov    esi,DWORD PTR [esi-0x30567b88]
  415da4:	sub    al,0x36
  415da6:	jb     0x415d68
  415da8:	mov    ds:0xf375d54,eax
  415dad:	mov    cs,WORD PTR [edx]
  415daf:	in     eax,0x5d
  415db1:	add    DWORD PTR [edx],esp
  415db3:	cld    
  415db4:	fimul  DWORD PTR [edx+edx*2+0x2a]
  415db8:	or     ebx,DWORD PTR [ebp-0x584d22be]
  415dbe:	xchg   esi,eax
  415dbf:	push   es
  415dc0:	(bad)  
  415dc1:	cwde   
  415dc2:	loopne 0x415df7
  415dc4:	jp     0x415e1f
  415dc6:	pushf  
  415dc7:	inc    ebp
  415dc8:	ja     0x415ded
  415dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dcb:	or     DWORD PTR [eax],esi
  415dcd:	call   0x3da8:0xd27cfe68
  415dd4:	retf   0xe890
  415dd7:	(bad)  
  415dd8:	ja     0x415e54
  415dda:	dec    esp
  415ddb:	or     ecx,esp
  415ddd:	jnp    0x415e1e
  415ddf:	mov    dh,0x5e
  415de1:	add    eax,0xe3e94a3a
  415de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de7:	dec    ebx
  415de8:	enter  0x9e03,0x9
  415dec:	lods   al,BYTE PTR ds:[esi]
  415ded:	loope  0x415e44
  415def:	gs pop eax
  415df1:	les    edx,FWORD PTR [edx]
  415df3:	xor    al,0x80
  415df5:	pop    edx
  415df6:	pop    edi
  415df7:	addr16 mov esp,0x65c9e4b3
  415dfd:	mov    esp,0x955b246e
  415e02:	and    DWORD PTR [ecx+eax*1+0x4a],ecx
  415e06:	rcl    dl,cl
  415e08:	fidiv  DWORD PTR [ebp+0x19]
  415e0b:	(bad)  
  415e0c:	cwde   
  415e0d:	mov    ah,BYTE PTR [esi]
  415e0f:	out    dx,al
  415e10:	test   BYTE PTR [ebp+0x11],al
  415e13:	shr    BYTE PTR [ebx-0x4a801592],cl
  415e19:	aam    0x15
  415e1b:	cmp    al,0xe0
  415e1d:	sti    
  415e1e:	push   cs
  415e1f:	push   edx
  415e20:	dec    esp
  415e21:	je     0x415e0b
  415e23:	mov    bh,BYTE PTR [edx-0x5d]
  415e26:	pop    ss
  415e27:	fs jle 0x415e71
  415e2a:	bound  ebp,QWORD PTR [ebp-0x48]
  415e2d:	sub    ch,dh
  415e2f:	pop    edi
  415e30:	test   al,0xc3
  415e32:	cld    
  415e33:	int3   
  415e34:	dec    edx
  415e35:	popf   
  415e36:	rcr    DWORD PTR [eiz*4-0x2480ef2f],1
  415e3d:	dec    edi
  415e3e:	dec    ebp
  415e3f:	call   0x240d:0x6e5fcfa8
  415e46:	nop
  415e47:	jmp    0x167fe29e
  415e4c:	and    bh,BYTE PTR [edi-0x18]
  415e4f:	outs   dx,BYTE PTR ds:[esi]
  415e50:	mov    ebx,0xc58022fb
  415e55:	sbb    edx,0x3c8a57a4
  415e5b:	or     BYTE PTR [ebx],dl
  415e5d:	jmp    0x24b3a10c
  415e62:	stos   DWORD PTR es:[edi],eax
  415e63:	jl     0x415e3b
  415e65:	retf   0xec22
  415e68:	sbb    DWORD PTR [esi],0x4d
  415e6b:	out    dx,al
  415e6c:	sub    al,0x5d
  415e6e:	cmc    
  415e6f:	lds    edi,FWORD PTR [edx+ecx*8+0x6f]
  415e73:	or     esp,0xc192ffa4
  415e79:	xor    eax,0xbc1bc539
  415e7e:	sbb    BYTE PTR [esi-0x1ced4535],dh
  415e84:	in     eax,0xe2
  415e86:	bound  edi,QWORD PTR [eax]
  415e88:	mov    tr5,esp
  415e8b:	(bad)  [ecx+edi*4-0x1e]
  415e8f:	js     0x415e96
  415e91:	mov    es:0xa0055316,al
  415e97:	loop   0x415ed8
  415e99:	and    al,0x63
  415e9b:	mov    al,ds:0x9074f678
  415ea0:	mov    ebx,0x1838894d
  415ea5:	fs je  0x415e2a
  415ea8:	int    0x59
  415eaa:	clc    
  415eab:	in     al,dx
  415eac:	push   ss
  415ead:	loop   0x415ebb
  415eaf:	adc    BYTE PTR [edx-0x3b],al
  415eb2:	mov    DWORD PTR [edi],esp
  415eb4:	or     dh,0x2b
  415eb7:	out    0x1e,eax
  415eb9:	fisub  WORD PTR [esi-0x45]
  415ebc:	inc    esp
  415ebd:	mov    cl,0xd1
  415ebf:	mov    esp,edx
  415ec1:	aam    0xf4
  415ec3:	jb     0x415eab
  415ec5:	cmp    DWORD PTR [ebx+0x49fdde68],0x11cc2b8d
  415ecf:	inc    edx
  415ed0:	sub    BYTE PTR [ecx],bl
  415ed2:	jns    0x415e7c
  415ed4:	push   edx
  415ed5:	pop    esi
  415ed6:	mov    ds:0x1bed4ac2,al
  415edb:	dec    ebx
  415edc:	pop    edx
  415edd:	out    dx,al
  415ede:	add    al,0x56
  415ee0:	inc    ecx
  415ee1:	mov    ch,0xd2
  415ee3:	aam    0x5d
  415ee5:	cld    
  415ee6:	repnz cmc 
  415ee8:	(bad)  
  415eea:	cmp    eax,0xa1f1af67
  415eef:	xor    bl,BYTE PTR [esi-0x7e414b72]
  415ef5:	mov    al,ds:0xf77ee723
  415efa:	and    BYTE PTR [eax-0x4fc7f2c2],al
  415f00:	popa   
  415f01:	pop    esp
  415f02:	sbb    dl,BYTE PTR [eax-0x6c27fe59]
  415f08:	je     0x415eec
  415f0a:	call   0xb7fca6d0
  415f0f:	mov    al,ds:0x4613741e
  415f14:	andn   edi,edi,DWORD PTR [ecx]
  415f19:	iret   
  415f1a:	and    al,0x24
  415f1c:	pop    ebx
  415f1d:	sub    ch,BYTE PTR [eax]
  415f1f:	js     0x415f3f
  415f21:	sub    DWORD PTR [edx+0x4cb26aa4],edx
  415f27:	jle    0x415f72
  415f29:	or     eax,ecx
  415f2b:	dec    ebx
  415f2c:	pop    edi
  415f2d:	xchg   bl,dh
  415f2f:	ins    BYTE PTR es:[edi],dx
  415f30:	cli    
  415f31:	add    al,0xd0
  415f33:	add    al,0xf1
  415f35:	loop   0x415f24
  415f37:	int    0x8
  415f39:	sbb    edx,DWORD PTR [esi-0x52d15502]
  415f3f:	xor    BYTE PTR [ebx+esi*1],0x82
  415f43:	cs (bad) 
  415f45:	leave  
  415f46:	dec    edi
  415f47:	fadd   DWORD PTR ds:0xb86550ad
  415f4d:	xlat   BYTE PTR ds:[ebx]
  415f4e:	mov    al,ds:0x2e3fb3bf
  415f53:	push   ebp
  415f54:	in     al,dx
  415f55:	pushf  
  415f56:	sbb    DWORD PTR ds:0x99876d47,ebx
  415f5c:	das    
  415f5d:	xor    edx,DWORD PTR [ebp+0x65a9c6c0]
  415f63:	push   0xe
  415f65:	das    
  415f66:	sub    bl,BYTE PTR [esi]
  415f68:	xlat   BYTE PTR ds:[ebx]
  415f69:	ds call 0x28d9153e
  415f6f:	cmp    BYTE PTR [edx+0x52],dh
  415f72:	lea    eax,[esi]
  415f74:	add    ah,dh
  415f76:	jg     0x415f8a
  415f78:	test   eax,0xd4b67830
  415f7d:	mov    ah,BYTE PTR [ebx]
  415f7f:	nop
  415f80:	push   ecx
  415f81:	jne    0x415f75
  415f83:	jl     0x415f62
  415f85:	cld    
  415f86:	inc    ecx
  415f87:	rcl    DWORD PTR [eax],cl
  415f89:	sub    edx,edi
  415f8b:	out    dx,al
  415f8c:	mov    al,ds:0x2cf7db5f
  415f91:	lods   al,BYTE PTR ds:[esi]
  415f92:	add    bh,BYTE PTR [ebp+0xfb7b17e]
  415f98:	call   0xbc83f505
  415f9d:	loope  0x415fc6
  415f9f:	mov    bh,0x33
  415fa1:	iret   
  415fa2:	je     0x415f66
  415fa4:	jmp    0x11a6:0x72870ff9
  415fab:	push   0x98afde6e
  415fb0:	mov    ds:0x569ddff0,al
  415fb5:	lahf   
  415fb6:	cmp    BYTE PTR [ecx],bl
  415fb8:	xor    DWORD PTR [ebx-0x1b],0x33
  415fbc:	int    0xde
  415fbe:	retf   0x91d8
  415fc1:	cs sub al,0x55
  415fc4:	stos   DWORD PTR es:[edi],eax
  415fc5:	out    dx,eax
  415fc6:	add    BYTE PTR [eax+0x1e],ah
  415fc9:	std    
  415fca:	in     al,0x8b
  415fcc:	ds ins DWORD PTR es:[edi],dx
  415fce:	adc    al,0x97
  415fd0:	inc    edx
  415fd1:	push   0xb0607610
  415fd6:	in     al,dx
  415fd7:	or     eax,0xa31295c2
  415fdc:	cs in  al,dx
  415fde:	jecxz  0x41604d
  415fe0:	push   es
  415fe1:	jne    0x415f6e
  415fe3:	daa    
  415fe4:	pusha  
  415fe5:	loope  0x415fbb
  415fe7:	and    eax,0xe0dd30db
  415fec:	or     bh,al
  415fee:	adc    BYTE PTR [edx+0x78ef379b],ch
  415ff4:	mov    DWORD PTR [ecx+0x1634f9a2],ebx
  415ffa:	icebp  
  415ffb:	shl    DWORD PTR [ebx-0x7132d738],1
  416001:	(bad)  
  416002:	test   al,0x9c
  416004:	mov    eax,ds:0x72018a50
  416009:	add    edx,DWORD PTR [edi-0x404fbb35]
  41600f:	mov    al,0x2
  416011:	in     eax,0xbb
  416013:	mov    edx,0x85d5c1ee
  416018:	(bad)  
  416019:	out    dx,eax
  41601a:	test   al,0x3e
  41601c:	stos   DWORD PTR es:[edi],eax
  41601d:	in     al,dx
  41601e:	pusha  
  41601f:	push   esp
  416020:	fadd   QWORD PTR [ebp-0x2]
  416023:	div    BYTE PTR [esi+ecx*8]
  416026:	jl     0x416082
  416028:	rol    DWORD PTR [ecx+0x35],cl
  41602b:	call   0xec154a31
  416030:	pop    ebp
  416031:	cmp    dl,BYTE PTR [ecx-0x2d]
  416034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416035:	int    0xbf
  416037:	test   DWORD PTR [esi],edx
  416039:	xor    eax,0xb501f56a
  41603e:	das    
  41603f:	push   cs
  416040:	out    0x86,al
  416042:	mov    ds:0xb581e195,eax
  416047:	sbb    al,0xc9
  416049:	mov    dh,0x15
  41604b:	dec    ebx
  41604c:	xchg   ebx,eax
  41604d:	push   cs
  41604e:	xchg   BYTE PTR [edi],ch
  416050:	mov    eax,0x5508070d
  416055:	pusha  
  416056:	push   0xffffffa2
  416058:	das    
  416059:	and    esp,DWORD PTR [ebx+0x22]
  41605c:	cmp    bh,cl
  41605e:	scas   eax,DWORD PTR es:[edi]
  41605f:	jl     0x41606a
  416061:	cmp    DWORD PTR [ecx+0x20],0xa41a4e79
  416068:	sbb    DWORD PTR [edx-0x5e66c8e3],ecx
  41606e:	shl    esp,cl
  416070:	sbb    esp,eax
  416072:	std    
  416073:	call   DWORD PTR [ebp+edi*1+0x1a]
  416077:	icebp  
  416078:	icebp  
  416079:	add    BYTE PTR [esi+edi*8+0x535a336a],al
  416080:	dec    ecx
  416081:	add    ah,BYTE PTR [eax-0xca69cd3]
  416087:	or     eax,0x8ab1bb00
  41608c:	cdq    
  41608d:	and    DWORD PTR [esi-0x6e],ebp
  416090:	sbb    esi,DWORD PTR [edx-0x38f27254]
  416096:	leave  
  416097:	into   
  416098:	mov    ecx,0x95006f77
  41609d:	pop    ds
  41609e:	in     eax,0xc0
  4160a0:	fild   DWORD PTR [ebx]
  4160a2:	les    esi,FWORD PTR [esp+edx*4+0x567ee08e]
  4160a9:	push   cs
  4160aa:	ds xchg ch,al
  4160ad:	xor    ebx,0xfa52f1c0
  4160b3:	add    DWORD PTR ds:0x3740d96,ebp
  4160b9:	or     esi,DWORD PTR [esi+0x1ec0f21f]
  4160bf:	inc    eax
  4160c0:	sub    ecx,DWORD PTR [edx]
  4160c2:	fdiv   QWORD PTR [ebx+0x36]
  4160c5:	xchg   edi,eax
  4160c6:	ds std 
  4160c8:	and    edi,eax
  4160ca:	in     al,0x23
  4160cc:	and    dl,BYTE PTR [esi+ecx*1]
  4160cf:	cwde   
  4160d0:	or     al,0xc1
  4160d2:	mov    esi,0x6d421fca
  4160d7:	mov    WORD PTR [esi],fs
  4160d9:	(bad)  
  4160da:	mul    BYTE PTR [edx]
  4160dc:	outs   dx,DWORD PTR ds:[esi]
  4160dd:	clc    
  4160de:	call   0x155f:0xf44f9ab0
  4160e5:	das    
  4160e6:	call   0x3650:0x276f781f
  4160ed:	ss xor al,0x54
  4160f0:	daa    
  4160f1:	sub    al,0x9b
  4160f3:	fsub   DWORD PTR [ebp+0x8]
  4160f6:	push   ecx
  4160f7:	or     ebp,DWORD PTR [esi-0x13]
  4160fa:	mov    ebx,eax
  4160fc:	btc    DWORD PTR [esi+0x472da5c7],0x4
  416104:	in     eax,0xa1
  416106:	push   es
  416107:	sbb    DWORD PTR [edi+eax*8-0x67cd5940],0x7f
  41610f:	cmp    dh,bl
  416111:	xchg   esi,eax
  416112:	and    bh,BYTE PTR [edx+0x48ab3382]
  416118:	imul   edx,DWORD PTR [edi-0x51e6ba0d],0x31f025ac
  416122:	pop    ss
  416123:	addr16 inc esi
  416125:	cmp    ebx,ecx
  416127:	stc    
  416128:	and    eax,0x5b10f2bd
  41612d:	arpl   WORD PTR [ebp+0x5673325d],sp
  416133:	(bad)  
  416134:	repz pushf 
  416136:	or     eax,0x37fef0d7
  41613b:	cmp    eax,0xbb81560a
  416140:	jae    0x416117
  416142:	sbb    al,0xea
  416144:	inc    ebx
  416145:	cwde   
  416146:	retf   0xc5a1
  416149:	sahf   
  41614a:	mov    edi,0x5073215
  41614f:	jne    0x416192
  416151:	jae    0x41617e
  416153:	xchg   ebp,eax
  416154:	cmp    BYTE PTR [ebx-0x156db8fe],dl
  41615a:	repnz sbb ebp,eax
  41615d:	push   ebx
  41615e:	push   ds
  41615f:	cmp    ch,BYTE PTR [edi]
  416161:	mov    eax,ebx
  416163:	dec    esp
  416164:	ds cdq 
  416166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416167:	bound  esi,QWORD PTR [ebp+0x32]
  41616a:	test   DWORD PTR [esi],esp
  41616c:	mov    DWORD PTR [esi],edi
  41616e:	(bad)  
  41616f:	pusha  
  416170:	inc    esp
  416171:	retf   0x92bf
  416174:	or     BYTE PTR [edx],bh
  416176:	jp     0x4161ac
  416178:	mov    al,0xbf
  41617a:	adc    BYTE PTR [eax-0x35],bl
  41617d:	js     0x41614c
  41617f:	or     DWORD PTR [ebx-0x7d1ecc87],edx
  416185:	fstp   TBYTE PTR [ebx+ecx*4+0x4a]
  416189:	inc    ebp
  41618a:	cmp    ecx,DWORD PTR [ebx+0x5]
  41618d:	jmp    0x2625:0x11850f12
  416194:	jmp    0x58f53d09
  416199:	fldenv [ebx+0x2983cda6]
  41619f:	into   
  4161a0:	xchg   DWORD PTR [edx],eax
  4161a2:	cmp    BYTE PTR [edx],cl
  4161a4:	cmc    
  4161a5:	push   es
  4161a6:	gs jae 0x4161c4
  4161a9:	adc    ebp,DWORD PTR [esi]
  4161ab:	stos   BYTE PTR es:[edi],al
  4161ac:	or     DWORD PTR [eax-0x229fda3c],0xffffffb5
  4161b3:	pop    ebp
  4161b4:	das    
  4161b5:	xor    ecx,DWORD PTR [ebx]
  4161b7:	jmp    0x9bb8:0x727fba35
  4161be:	fisubr WORD PTR [edi]
  4161c0:	jl     0x416168
  4161c2:	mov    ss,edi
  4161c4:	fs mov edx,0xa6b3e73d
  4161ca:	scas   al,BYTE PTR es:[edi]
  4161cb:	in     al,dx
  4161cc:	cmc    
  4161cd:	adc    ebp,DWORD PTR [ebp+edi*1+0x3f2cf41b]
  4161d4:	mov    ebp,0xe8986645
  4161d9:	hlt    
  4161da:	sbb    DWORD PTR [eax-0x78],edi
  4161dd:	ret    
  4161de:	mov    ebx,0xc79e1555
  4161e3:	mov    eax,ds:0x2ac35936
  4161e8:	sbb    al,0x2d
  4161ea:	popf   
  4161eb:	push   ecx
  4161ec:	(bad)  
  4161ed:	inc    eax
  4161ee:	das    
  4161ef:	xor    al,0x16
  4161f1:	sub    eax,0x164806fe
  4161f6:	ret    0x8bdb
  4161f9:	mov    ch,0x90
  4161fb:	fbstp  TBYTE PTR [edx]
  4161fd:	test   eax,0x4b91aa59
  416202:	push   ds
  416203:	push   eax
  416204:	xchg   dl,dl
  416206:	dec    ebx
  416207:	leave  
  416208:	mov    bh,0x59
  41620a:	(bad)  
  41620b:	fdecstp 
  41620d:	ficomp WORD PTR [ebx+0x2f414d85]
  416213:	adc    DWORD PTR [edi-0x2b],eax
  416216:	mov    eax,0x6152be7f
  41621b:	bnd jo 0x41623b
  41621e:	js     0x4161fe
  416220:	sub    DWORD PTR [edi+0x4e],ecx
  416223:	cdq    
  416224:	shr    BYTE PTR [edx+0x6c9fe876],0x25
  41622b:	push   DWORD PTR ds:0xd8a0f1af
  416231:	(bad)  
  416232:	push   ds
  416233:	pop    ebx
  416234:	std    
  416235:	xor    BYTE PTR [ebx],0x9c
  416238:	es cli 
  41623a:	aas    
  41623b:	clc    
  41623c:	fld    QWORD PTR ds:0xd15d121e
  416242:	lds    ebp,FWORD PTR [eax+0x382b7dda]
  416248:	jne    0x41629a
  41624a:	hlt    
  41624b:	in     al,0xd3
  41624d:	xchg   DWORD PTR [edx],esp
  41624f:	enter  0xc489,0xda
  416253:	dec    edx
  416254:	pop    es
  416255:	std    
  416256:	dec    ebp
  416257:	fadd   QWORD PTR [eax-0x262ab17b]
  41625d:	mov    ah,0xc0
  41625f:	jecxz  0x41627d
  416261:	int3   
  416262:	dec    ebx
  416263:	mov    ds:0xf6751f,al
  416268:	xlat   BYTE PTR ds:[ebx]
  416269:	and    al,0xc5
  41626b:	adc    edi,esi
  41626d:	loop   0x41627d
  41626f:	pop    eax
  416270:	aaa    
  416271:	sbb    al,0x29
  416273:	mov    BYTE PTR [edi-0x60c761cf],bh
  416279:	iret   
  41627a:	jg     0x41621b
  41627c:	mov    esi,0x5355ade1
  416281:	fisttp WORD PTR [edx-0x60]
  416284:	lods   al,BYTE PTR ds:[esi]
  416285:	dec    ebx
  416286:	out    0xf1,al
  416288:	jmp    0x4855:0x19faf330
  41628f:	mov    ds:0x884d1096,eax
  416294:	and    cl,BYTE PTR [ebx+0x4c]
  416297:	push   ebp
  416298:	mov    ds:0xfab28799,eax
  41629d:	je     0x416279
  41629f:	mov    DWORD PTR [ebx-0x49],ebp
  4162a2:	xchg   DWORD PTR [edi+0x25],esp
  4162a5:	push   ebp
  4162a6:	fnstenv [edi-0x15f35624]
  4162ac:	adc    DWORD PTR [esi-0x13],esi
  4162af:	pop    edi
  4162b0:	ja     0x416263
  4162b2:	inc    esi
  4162b3:	rcr    BYTE PTR [edi+0x1e],1
  4162b6:	pop    es
  4162b7:	mov    BYTE PTR [esi+ecx*1+0x4575d44d],ch
  4162be:	sti    
  4162bf:	in     al,0x7c
  4162c1:	fadd   st,st(3)
  4162c3:	mov    ebp,0x86393f2a
  4162c8:	gs out 0x24,eax
  4162cb:	cdq    
  4162cc:	aam    0xb2
  4162ce:	imul   ecx,DWORD PTR [ecx-0x29c00421],0x27
  4162d5:	mov    esi,0x263f17c
  4162da:	add    eax,0xfbdb6463
  4162df:	outs   dx,DWORD PTR ds:[esi]
  4162e0:	outs   dx,BYTE PTR ds:[esi]
  4162e1:	in     al,0xef
  4162e3:	call   0x9f65:0x76254df6
  4162ea:	aas    
  4162eb:	ret    0xbed3
  4162ee:	push   0xffffffd2
  4162f0:	inc    edi
  4162f1:	cmp    dh,BYTE PTR [ecx-0x31]
  4162f4:	out    dx,eax
  4162f5:	adc    al,dl
  4162f7:	jnp    0x4162c0
  4162f9:	(bad)  
  4162fa:	js     0x4162f4
  4162fc:	arpl   WORD PTR ds:0x31980ec0,ax
  416302:	push   ebx
  416303:	in     eax,0x23
  416305:	loopne 0x416296
  416307:	mov    al,ds:0x9ec54c4b
  41630c:	fwait
  41630d:	pop    edi
  41630e:	and    ecx,DWORD PTR [esi]
  416310:	dec    esp
  416311:	outs   dx,BYTE PTR ds:[esi]
  416312:	add    BYTE PTR [ecx-0x14],al
  416315:	sbb    bl,bl
  416317:	jge    0x4162d3
  416319:	aaa    
  41631a:	adc    al,0xb1
  41631c:	add    ecx,DWORD PTR [edx]
  41631e:	lea    edx,[eax+0x27]
  416321:	sbb    esp,DWORD PTR [eax+0x40]
  416324:	cmp    bh,BYTE PTR [ecx-0x1381220e]
  41632a:	or     eax,0x3fcfcb25
  41632f:	sar    ebp,0xdf
  416332:	mov    bh,cl
  416334:	sbb    ecx,0xffffff84
  416337:	cmp    DWORD PTR [ebx+0x29],eax
  41633a:	xacquire xchg DWORD PTR [eax-0x15c591bd],ebx
  416341:	add    DWORD PTR [esi-0x7a],esp
  416344:	into   
  416345:	jmp    0xd5be6476
  41634a:	cs sar ecx,0x5b
  41634e:	mov    esp,0xd5be8cc0
  416353:	call   0xdcbd:0x4719b5c
  41635a:	mov    bh,0x61
  41635c:	or     BYTE PTR [ecx+0x46],bl
  41635f:	lds    ebx,FWORD PTR [ebx+ebp*8]
  416362:	popf   
  416363:	cmp    eax,0xb96c7e6b
  416368:	std    
  416369:	(bad)  
  41636a:	jae    0x4163ce
  41636c:	outs   dx,DWORD PTR ds:[esi]
  41636d:	scas   eax,DWORD PTR es:[edi]
  41636e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41636f:	cmp    al,0x3c
  416371:	inc    ebx
  416372:	clc    
  416373:	cmp    al,BYTE PTR [edx]
  416375:	aad    0xd7
  416377:	mov    esp,0x831b17ca
  41637c:	or     al,0x1c
  41637e:	ja     0x416380
  416380:	imul   ebp,DWORD PTR [eax+edx*8+0x7b9e9aa4],0x60619de9
  41638b:	mov    DWORD PTR [ecx+0x1],eax
  41638e:	adc    al,0x5
  416390:	(bad)  
  416391:	push   edi
  416392:	mov    ds:0xbdb2b428,eax
  416397:	jnp    0x416374
  416399:	push   ebx
  41639a:	stos   BYTE PTR es:[edi],al
  41639b:	mov    ecx,0xc4eba3b2
  4163a0:	mov    ecx,0xab7025c1
  4163a5:	test   cl,ch
  4163a7:	lods   eax,DWORD PTR ds:[esi]
  4163a8:	xchg   esi,eax
  4163a9:	push   ss
  4163aa:	and    eax,0xcd26f10a
  4163af:	and    BYTE PTR [ebp+ebx*1-0x6d9caa65],al
  4163b6:	adc    al,0x61
  4163b8:	out    dx,eax
  4163b9:	popa   
  4163ba:	es mov eax,0x6b21deb8
  4163c0:	(bad)  
  4163c1:	jne    0x416386
  4163c3:	ret    0xf616
  4163c6:	popa   
  4163c7:	int3   
  4163c8:	mov    WORD PTR [ebp+0x6f2473cc],fs
  4163ce:	xor    BYTE PTR [edx-0x58171885],0xaf
  4163d5:	add    esi,DWORD PTR [ecx+0x1d]
  4163d8:	sbb    BYTE PTR [eax],0x53
  4163db:	(bad)  
  4163dc:	cld    
  4163dd:	mov    ch,0x91
  4163df:	xchg   ebx,edx
  4163e1:	les    esp,FWORD PTR [ebx-0x5c1d9b80]
  4163e7:	jne    0x416459
  4163e9:	outs   dx,DWORD PTR ds:[esi]
  4163ea:	push   ss
  4163eb:	(bad)  
  4163ec:	and    BYTE PTR [esi],al
  4163ee:	push   esp
  4163ef:	jp     0x41646b
  4163f1:	cmp    al,0x5d
  4163f3:	or     al,0xd
  4163f5:	repz iret 
  4163f7:	xor    BYTE PTR [edi+0x20],al
  4163fa:	das    
  4163fb:	out    0x22,al
  4163fd:	fnstenv [edx-0x256c53b3]
  416403:	inc    esi
  416404:	sbb    al,0x32
  416406:	inc    esi
  416407:	out    dx,al
  416408:	pop    esp
  416409:	ss pushf 
  41640b:	xor    BYTE PTR ds:0x84cb9559,0x15
  416412:	or     DWORD PTR [ecx],esi
  416414:	jo     0x4163e5
  416416:	bound  eax,QWORD PTR [ecx-0xb]
  416419:	cmp    esi,DWORD PTR [esp+edx*1+0x47]
  41641d:	aam    0x86
  41641f:	div    BYTE PTR [eax+eax*2]
  416422:	cwde   
  416423:	dec    ebx
  416424:	push   esi
  416425:	sbb    ebx,DWORD PTR [ebx]
  416427:	adc    dl,ah
  416429:	push   ebx
  41642a:	xor    cl,BYTE PTR [ebp-0x6]
  41642d:	cmc    
  41642e:	xor    DWORD PTR [ebp+esi*8+0x1ee421da],esi
  416435:	inc    edi
  416436:	inc    esi
  416437:	or     al,0x5
  416439:	and    DWORD PTR [ecx+0xc],ebp
  41643c:	in     eax,dx
  41643d:	ss nop
  41643f:	mov    bl,0xd2
  416441:	jg     0x4163e5
  416443:	sahf   
  416444:	(bad)  
  416445:	xor    cl,BYTE PTR [esi]
  416447:	aaa    
  416448:	xchg   ecx,eax
  416449:	div    edi
  41644b:	or     BYTE PTR [ebx],bh
  41644d:	push   ebx
  41644e:	xchg   ebx,eax
  41644f:	dec    edx
  416450:	aaa    
  416451:	xor    eax,0x4fbbba02
  416456:	mov    bl,0x4e
  416458:	test   DWORD PTR [eax],edi
  41645a:	jo     0x416401
  41645c:	jbe    0x4164cf
  41645e:	dec    ebp
  41645f:	mov    bh,0x3
  416461:	push   esp
  416462:	inc    ecx
  416463:	inc    ecx
  416464:	mov    ds:0x43b56b6,eax
  416469:	cwde   
  41646a:	into   
  41646b:	js     0x4164b6
  41646d:	pop    eax
  41646e:	sub    al,0x51
  416470:	fxch   st(4)
  416472:	mov    bh,0xbc
  416474:	adc    DWORD PTR [ecx+esi*2+0x5440f019],eax
  41647b:	or     BYTE PTR [ebx-0x4ada834e],dh
  416481:	into   
  416482:	and    edi,DWORD PTR ds:0x3167644e
  416488:	jmp    0xc78a8626
  41648d:	push   eax
  41648e:	(bad)  
  416490:	mov    esi,0x2f414206
  416495:	loopne 0x4164e4
  416497:	shl    BYTE PTR [ebx],0x4e
  41649a:	mov    esp,DWORD PTR [ebp+0x9dea570]
  4164a0:	inc    ebp
  4164a1:	mov    bl,0xbd
  4164a3:	add    al,0xf9
  4164a5:	adc    ecx,edx
  4164a7:	aaa    
  4164a8:	inc    ebp
  4164a9:	rcl    BYTE PTR [ebx-0x5904b330],0x99
  4164b0:	sub    DWORD PTR [edx-0xf],0x28277f54
  4164b7:	repz mov es,WORD PTR [ebx+ebp*4+0x2d272c8c]
  4164bf:	sahf   
  4164c0:	jae    0x416444
  4164c2:	and    eax,DWORD PTR [eax]
  4164c4:	pop    esi
  4164c5:	jae    0x41646e
  4164c7:	and    eax,0x4087b044
  4164cc:	es add al,0xc3
  4164cf:	js     0x4164da
  4164d1:	pop    esp
  4164d2:	cmc    
  4164d3:	inc    eax
  4164d4:	sti    
  4164d5:	xor    esi,DWORD PTR [edi+ebx*4-0xe3ea009]
  4164dc:	cdq    
  4164dd:	or     DWORD PTR [edi+0x7a],0xffffffab
  4164e1:	cdq    
  4164e2:	mov    ds:0x97ebb3cd,al
  4164e7:	in     al,dx
  4164e8:	add    bl,dl
  4164ea:	(bad)  
  4164eb:	rol    BYTE PTR [ecx+edi*8+0x45],1
  4164ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f0:	or     cl,dl
  4164f2:	addr16 fucomp st(3)
  4164f5:	xchg   edi,eax
  4164f6:	mov    eax,0x3811deb0
  4164fb:	or     DWORD PTR [edx+0x4dc32b18],edi
  416501:	shr    DWORD PTR [ebx-0x2d],cl
  416504:	inc    edx
  416505:	mov    edi,0xd8805b4d
  41650a:	dec    ebp
  41650b:	xor    DWORD PTR [edi],esi
  41650d:	mov    edx,0x1d8947c4
  416512:	mov    ds:0x3933debd,eax
  416517:	in     eax,0x48
  416519:	repz mov esi,0x589a7d28
  41651f:	push   esi
  416520:	xor    al,0xaa
  416522:	mov    ecx,0x8dec2d8e
  416527:	cmp    ecx,DWORD PTR [esp+edi*2+0x4b]
  41652b:	push   cs
  41652c:	out    0x2e,eax
  41652e:	popa   
  41652f:	jmp    0x47f06aad
  416534:	mov    ebx,0xfbacda8f
  416539:	push   esi
  41653a:	(bad)  
  41653b:	cmp    al,0x92
  41653d:	xor    esi,eax
  41653f:	outs   dx,DWORD PTR ss:[esi]
  416541:	sub    al,0x43
  416543:	add    BYTE PTR [ebx+0x49],al
  416546:	lods   al,BYTE PTR ds:[esi]
  416547:	pop    ds
  416548:	call   0x399d:0xf4ac7c4b
  41654f:	pop    ss
  416550:	dec    eax
  416551:	pop    edx
  416552:	xor    BYTE PTR [ebx+0xa],dl
  416555:	inc    ebp
  416556:	test   DWORD PTR [ebx],esp
  416558:	les    edx,FWORD PTR [edi]
  41655a:	clc    
  41655b:	enter  0x7312,0xa5
  41655f:	sbb    BYTE PTR ds:0x260cd713,dh
  416565:	gs int 0x13
  416568:	call   0x4b264587
  41656d:	cwde   
  41656e:	sub    al,0x14
  416570:	pop    esi
  416571:	cmp    DWORD PTR [ecx+0x62],edi
  416574:	cmp    esi,DWORD PTR [edi+0x361ed269]
  41657a:	es jg  0x416514
  41657d:	into   
  41657e:	pusha  
  41657f:	xchg   edx,eax
  416580:	jb     0x416580
  416582:	iret   
  416583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416585:	shl    DWORD PTR [edi+ecx*8+0x11],cl
  416589:	shr    BYTE PTR [ecx+0x37],cl
  41658c:	not    DWORD PTR [eax-0x2e]
  41658f:	xchg   BYTE PTR [edi],al
  416591:	mov    dl,0xf
  416593:	add    eax,0xaf31b4c1
  416598:	inc    eax
  416599:	aad    0x42
  41659b:	or     eax,0x856f2556
  4165a0:	jecxz  0x4165cc
  4165a2:	pop    ebx
  4165a3:	pop    ebp
  4165a4:	xor    al,0x16
  4165a6:	mov    WORD PTR [esi+ecx*8-0x79],ss
  4165aa:	sub    DWORD PTR ds:0x3721bbe7,esi
  4165b0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4165b2:	mov    ebx,DWORD PTR [esi-0x3bc98938]
  4165b8:	call   0x17e0:0xd3246e5e
  4165bf:	ss ins DWORD PTR es:[edi],dx
  4165c1:	mov    BYTE PTR [edx-0x2b],bh
  4165c4:	push   edi
  4165c5:	ja     0x4165ea
  4165c7:	sbb    esp,DWORD PTR [edx-0x26]
  4165ca:	inc    edx
  4165cb:	lock xchg esp,eax
  4165cd:	das    
  4165ce:	sub    ebp,DWORD PTR [ebp+0x797384c9]
  4165d4:	adc    ebp,DWORD PTR [eax]
  4165d6:	or     eax,0xd2cfc9a8
  4165db:	sub    esp,edx
  4165dd:	ror    cl,cl
  4165df:	loopne 0x41664e
  4165e1:	int    0x4e
  4165e3:	mov    WORD PTR [edx],es
  4165e5:	call   0x6aa1:0x63125bf2
  4165ec:	dec    esp
  4165ed:	test   al,0xbc
  4165ef:	std    
  4165f0:	dec    ebx
  4165f1:	xor    ecx,DWORD PTR [ebx+0x9732342]
  4165f7:	and    al,0xf1
  4165f9:	mov    edx,0xdcedd82d
  4165fe:	push   edx
  4165ff:	pop    esp
  416600:	sub    DWORD PTR [ebx+edi*4+0x539fad5e],eax
  416607:	icebp  
  416608:	sahf   
  416609:	mov    ebx,0x8c3d5296
  41660e:	fidiv  WORD PTR [edi+0x5f]
  416611:	mov    edx,0x9feb3ff8
  416616:	aaa    
  416617:	cdq    
  416618:	dec    edx
  416619:	jmp    0x8e193433
  41661e:	dec    ecx
  41661f:	sub    al,0xb9
  416621:	js     0x41669f
  416623:	push   es
  416624:	fist   WORD PTR [edx+ecx*2+0x1b4d6d63]
  41662b:	or     eax,DWORD PTR [eax+ebx*1+0x29]
  41662f:	cmp    DWORD PTR [ebx+ecx*1],edi
  416632:	clc    
  416633:	mov    cl,0xab
  416635:	mov    cl,0xa9
  416637:	xchg   esp,eax
  416638:	adc    edi,ecx
  41663a:	leave  
  41663b:	mov    BYTE PTR [eax+0x7c],bl
  41663e:	dec    ebp
  41663f:	out    dx,eax
  416640:	call   0x2b27:0xf0f775ea
  416647:	jecxz  0x4166ac
  416649:	call   FWORD PTR [edi+edi*4-0x4a4eff6d]
  416650:	shl    esp,0x7e
  416653:	mov    al,0xdc
  416655:	push   esp
  416656:	loopne 0x41663a
  416658:	mov    edx,0x1998d45f
  41665d:	mov    dh,0xd5
  41665f:	xor    DWORD PTR [eax-0x4c],esp
  416662:	mov    esp,DWORD PTR [esi+ecx*4+0x16]
  416666:	inc    esp
  416667:	mov    dh,0xad
  416669:	retf   0xa55d
  41666c:	and    al,0x7d
  41666e:	add    eax,DWORD PTR [edx-0x19e4f8c2]
  416674:	icebp  
  416675:	xlat   BYTE PTR ds:[ebx]
  416676:	ja     0x4166e7
  416678:	std    
  416679:	sbb    al,0x7f
  41667b:	dec    eax
  41667c:	jle    0x41660d
  41667e:	and    eax,0x3d505a82
  416683:	jmp    0xb818:0x879fa460
  41668a:	lahf   
  41668b:	push   0xffffffa4
  41668d:	pop    edx
  41668e:	jmp    0x4166d0
  416690:	fst    DWORD PTR [ecx-0x6acc48b2]
  416696:	in     eax,dx
  416697:	xor    eax,0xf19fc0e7
  41669c:	ds cmp al,0xba
  41669f:	or     edi,DWORD PTR [edx]
  4166a1:	mov    esi,0xa8aa6de2
  4166a6:	jbe    0x416713
  4166a8:	test   cl,ch
  4166aa:	push   edi
  4166ab:	add    al,0x74
  4166ad:	int    0x10
  4166af:	data16 fidivr DWORD PTR [ebx]
  4166b2:	xlat   BYTE PTR ds:[ebx]
  4166b3:	add    edi,DWORD PTR [edi]
  4166b5:	ficom  DWORD PTR [ebp-0x5fb3a32c]
  4166bb:	pusha  
  4166bc:	sbb    eax,0x68171aed
  4166c1:	cmp    esp,DWORD PTR [ebx-0xc2fa692]
  4166c7:	push   esp
  4166c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166c9:	sbb    eax,0x5809d93d
  4166ce:	pop    ss
  4166cf:	push   edi
  4166d0:	in     al,0x6f
  4166d2:	sub    edi,edx
  4166d4:	daa    
  4166d5:	mov    DWORD PTR fs:[eax-0x32b901b6],edi
  4166dc:	shr    bl,0xbf
  4166df:	fsub   st,st(1)
  4166e1:	in     eax,0xd3
  4166e3:	sbb    al,0x46
  4166e5:	out    0xac,al
  4166e7:	mov    bh,0xc9
  4166e9:	adc    DWORD PTR [eax],ecx
  4166eb:	pusha  
  4166ec:	test   edx,0xe91d946
  4166f2:	pop    esi
  4166f3:	lods   al,BYTE PTR ds:[esi]
  4166f4:	sbb    bh,BYTE PTR [ecx+0x27]
  4166f7:	jle    0x416693
  4166f9:	iret   
  4166fa:	dec    edx
  4166fb:	das    
  4166fc:	rcl    BYTE PTR [edx-0x2e],1
  4166ff:	sbb    al,0xa0
  416701:	into   
  416702:	jnp    0x41671f
  416704:	mov    bh,0x7d
  416706:	(bad)
  416709:	or     DWORD PTR [eax-0x63a4f56e],esi
  41670f:	sbb    BYTE PTR [ebp+0x1a391388],cl
  416715:	lock mov al,ds:0x369de4dc
  41671b:	mov    ds:0xb08caff9,al
  416720:	mov    al,ds:0x80cd0684
  416725:	pop    ecx
  416726:	mov    bh,0xeb
  416728:	ret    
  416729:	mov    dh,0xe3
  41672b:	push   eax
  41672c:	and    ebx,DWORD PTR [esp+eax*1]
  41672f:	stos   DWORD PTR es:[edi],eax
  416730:	dec    esi
  416731:	mov    ch,0x80
  416733:	push   esi
  416734:	dec    ebp
  416735:	push   edx
  416736:	dec    ecx
  416737:	push   ebp
  416738:	mov    esp,0xbc240c09
  41673d:	xlat   BYTE PTR ds:[ebx]
  41673e:	stc    
  41673f:	in     eax,dx
  416740:	dec    edx
  416741:	pusha  
  416742:	fist   DWORD PTR [edi]
  416744:	mov    bl,0x6c
  416746:	add    DWORD PTR [eax],ebp
  416748:	sub    DWORD PTR [eax*2-0x5c63bc81],ecx
  41674f:	ins    DWORD PTR es:[edi],dx
  416750:	fisttp DWORD PTR [ebp+0x5ab6731c]
  416756:	jbe    0x416785
  416758:	cmp    al,0x43
  41675a:	or     BYTE PTR fs:[esi],cl
  41675d:	sbb    al,0x80
  41675f:	std    
  416760:	add    cl,ah
  416762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416763:	push   esp
  416764:	mov    esp,0x12af9b82
  416769:	mov    bh,BYTE PTR [ebx]
  41676b:	inc    edi
  41676c:	test   BYTE PTR [ebx+eiz*4-0x392e7289],dl
  416773:	nop
  416774:	cs test esi,edi
  416777:	xor    DWORD PTR es:[ebx],edx
  41677a:	sub    eax,0xb137e6fe
  41677f:	aad    0xa3
  416781:	pop    esi
  416782:	jmp    0x129e529d
  416787:	pop    es
  416788:	pop    eax
  416789:	adc    esi,edx
  41678b:	stos   DWORD PTR es:[edi],eax
  41678c:	cmp    dh,dl
  41678e:	loop   0x4167cf
  416790:	je     0x416782
  416792:	mov    bh,ch
  416794:	ja     0x41677e
  416796:	pop    ebx
  416797:	nop
  416798:	int3   
  416799:	inc    ecx
  41679a:	inc    esp
  41679b:	jnp    0x4167ff
  41679d:	idiv   DWORD PTR [ecx]
  41679f:	out    dx,al
  4167a0:	pop    edi
  4167a1:	and    BYTE PTR [eax-0x7d6cab4b],dh
  4167a7:	or     edi,ecx
  4167a9:	jg     0x4167ae
  4167ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ac:	xchg   esi,eax
  4167ad:	loope  0x41679f
  4167af:	and    edi,ebx
  4167b1:	scas   eax,DWORD PTR es:[edi]
  4167b2:	sti    
  4167b3:	stos   BYTE PTR es:[edi],al
  4167b4:	cwde   
  4167b5:	push   0x4b
  4167b7:	and    DWORD PTR [edx],esp
  4167b9:	sbb    dh,BYTE PTR [edx]
  4167bb:	mov    edx,DWORD PTR ds:0xaf66cdb8
  4167c1:	xchg   edx,eax
  4167c2:	jmp    0x3fe3:0x59898806
  4167c9:	push   ebp
  4167ca:	ins    DWORD PTR es:[edi],dx
  4167cb:	or     BYTE PTR [ebp-0x2e],0x7
  4167cf:	scas   eax,DWORD PTR es:[edi]
  4167d0:	sub    dh,BYTE PTR [ecx]
  4167d2:	gs add eax,0xd2aaddfc
  4167d8:	ins    BYTE PTR es:[edi],dx
  4167d9:	and    al,0x4a
  4167db:	fidivr WORD PTR [eax-0x69eb29fc]
  4167e1:	ror    DWORD PTR [edi+edx*1+0x5af3bde8],1
  4167e8:	sbb    al,0x81
  4167ea:	in     al,0xd5
  4167ec:	jmp    0xb3e47a19
  4167f1:	je     0x416795
  4167f3:	sbb    al,BYTE PTR [esi-0x7074de85]
  4167f9:	inc    esp
  4167fa:	push   ebp
  4167fb:	push   cs
  4167fc:	pop    eax
  4167fd:	inc    edx
  4167fe:	repnz shl DWORD PTR [edx],1
  416801:	xor    eax,0x5c3fa4b1
  416806:	pop    ebx
  416807:	pop    esp
  416808:	sub    DWORD PTR [ebx-0xd49c1ed],eax
  41680e:	icebp  
  41680f:	xlat   BYTE PTR ds:[ebx]
  416810:	mov    ds:0xb9209c94,eax
  416815:	cld    
  416816:	jbe    0x4167f5
  416818:	dec    esi
  416819:	es nop
  41681b:	popf   
  41681c:	(bad)  
  41681d:	fs mov esp,0x7b898df3
  416823:	rcl    BYTE PTR [edx+0x70d154fa],0xd8
  41682a:	mov    es,WORD PTR [edi-0x2686ab2c]
  416830:	xchg   edi,eax
  416831:	xor    DWORD PTR [bx+0x68],ecx
  416835:	xor    BYTE PTR [esi+ebp*8+0x6d],bl
  416839:	std    
  41683a:	pop    ecx
  41683b:	inc    edi
  41683c:	xchg   ebx,eax
  41683d:	or     al,0x9d
  41683f:	inc    ecx
  416840:	push   ecx
  416841:	call   0xf8ea:0x46e9063d
  416848:	pop    eax
  416849:	add    esi,DWORD PTR [edi-0x2bcaca7]
  41684f:	fucomp st(1)
  416851:	push   esi
  416852:	pop    ss
  416853:	les    esp,FWORD PTR [edi-0x4b]
  416856:	ret    
  416857:	xchg   esi,eax
  416858:	lea    ebp,[edi+0x50]
  41685b:	stc    
  41685c:	inc    ecx
  41685d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41685e:	xchg   edx,eax
  41685f:	dec    eax
  416860:	test   al,0x5d
  416862:	repz hlt 
  416864:	push   eax
  416865:	pusha  
  416866:	push   edi
  416867:	jb     0x416877
  416869:	sub    DWORD PTR [edi+0x4e5694fd],esi
  41686f:	adc    ah,BYTE PTR [edi+0x6b]
  416872:	lock mov WORD PTR [ebp-0x785a4b1e],fs
  416879:	(bad)  
  41687b:	add    al,0xf0
  41687d:	or     edx,DWORD PTR [edi+0x155bf0b]
  416883:	ins    DWORD PTR es:[edi],dx
  416884:	(bad)  
  416885:	fiadd  DWORD PTR [esi]
  416887:	rol    BYTE PTR [ebp+0x4e7ee83d],1
  41688d:	shl    BYTE PTR [ebx+0x5e],0x26
  416891:	mov    cl,0xf6
  416893:	int3   
  416894:	jo     0x41688b
  416896:	mov    dh,0xd9
  416898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416899:	push   0x46a80818
  41689e:	add    bl,BYTE PTR [edx]
  4168a0:	pop    ss
  4168a1:	test   eax,0xd7914207
  4168a6:	pop    edi
  4168a7:	int    0xb1
  4168a9:	pop    es
  4168aa:	pop    esp
  4168ab:	shl    BYTE PTR [ecx],0xff
  4168ae:	jmp    0x416838
  4168b0:	leave  
  4168b1:	or     al,0xf5
  4168b3:	mov    cl,0xf1
  4168b5:	jmp    0x416879
  4168b7:	pop    eax
  4168b8:	cmp    al,0x8e
  4168ba:	cmp    esi,DWORD PTR [edx+ecx*2-0x65]
  4168be:	or     bh,bh
  4168c0:	leave  
  4168c1:	rcl    DWORD PTR [ecx+edi*4-0x8553800],cl
  4168c8:	pop    eax
  4168c9:	dec    eax
  4168ca:	retf   0x9721
  4168cd:	call   0xca1e:0x1ac91e33
  4168d4:	ds dec edi
  4168d6:	xchg   BYTE PTR [edi-0x361e4dc5],ah
  4168dc:	pop    edi
  4168dd:	loopne 0x4168c0
  4168df:	iret   
  4168e0:	inc    eax
  4168e1:	mov    bh,0xc8
  4168e3:	pop    esi
  4168e4:	add    bh,dl
  4168e6:	enter  0xb943,0x6b
  4168ea:	inc    edi
  4168eb:	fsub   QWORD PTR [edx+0x3f7b2a82]
  4168f1:	pop    ecx
  4168f2:	mov    ah,0xfa
  4168f4:	sar    BYTE PTR [ebx-0x17],cl
  4168f7:	cli    
  4168f8:	sub    esi,DWORD PTR [ecx-0x3f7c3479]
  4168fe:	or     edx,DWORD PTR [edi-0x7e]
  416901:	dec    ebx
  416902:	dec    ebp
  416903:	hlt    
  416904:	add    BYTE PTR [esi],ah
  416906:	pop    esi
  416907:	mov    ebx,0xdf62c136
  41690c:	mov    bh,0x88
  41690e:	add    BYTE PTR [edx],cl
  416910:	xchg   edx,eax
  416911:	rcr    esi,1
  416913:	push   esi
  416914:	mov    al,BYTE PTR [ebx]
  416916:	inc    esi
  416917:	(bad)  
  416918:	clc    
  416919:	mov    DWORD PTR [edi-0x23],esi
  41691c:	icebp  
  41691d:	cld    
  41691e:	mov    BYTE PTR [eax-0x4c],bl
  416921:	sub    DWORD PTR [eax],0xffffffd0
  416924:	mov    bh,0x2d
  416926:	inc    eax
  416927:	call   0x5256:0xde98feb7
  41692e:	or     eax,0x3a98606c
  416933:	popf   
  416934:	mov    esp,DWORD PTR [ecx+ebx*2]
  416937:	shl    BYTE PTR [ecx-0x44],1
  41693a:	repz pop es
  41693c:	fdivr  st,st(1)
  41693e:	fistp  QWORD PTR ds:0x1b7aafb4
  416944:	push   ebx
  416945:	or     BYTE PTR [edi-0x7b],dl
  416948:	int    0x4e
  41694a:	ficom  WORD PTR [eax]
  41694c:	jmp    0x2944:0x894b9dd9
  416953:	rol    BYTE PTR [ebp+0xa36dcc8],cl
  416959:	pushf  
  41695a:	aad    0x6e
  41695c:	icebp  
  41695d:	out    0xaa,eax
  41695f:	adc    al,0x30
  416961:	sbb    DWORD PTR [esi],eax
  416963:	ins    BYTE PTR es:[edi],dx
  416964:	add    al,0x4c
  416966:	or     ah,ch
  416968:	sbb    al,0xaa
  41696a:	xchg   edx,eax
  41696b:	fisttp WORD PTR [edx]
  41696d:	loopne 0x4169b5
  41696f:	jp     0x416976
  416971:	xchg   esi,eax
  416972:	scas   eax,DWORD PTR es:[edi]
  416973:	dec    eax
  416974:	add    BYTE PTR [ebx],ch
  416976:	push   0x76
  416978:	das    
  416979:	(bad)  
  41697a:	fcmovu st,st(2)
  41697c:	cmp    al,0x8
  41697e:	xor    al,0x7d
  416980:	je     0x4169e1
  416982:	and    ebp,DWORD PTR [edi]
  416984:	mov    cl,0x6c
  416986:	adc    DWORD PTR es:[edi+0x3c],ebx
  41698a:	fadd   DWORD PTR [edx]
  41698c:	das    
  41698d:	rcl    DWORD PTR [ebp-0x20611fc4],0x63
  416994:	lahf   
  416995:	jb     0x416939
  416997:	jecxz  0x4169de
  416999:	out    dx,al
  41699a:	fidiv  WORD PTR [ecx+ecx*2+0x579778ba]
  4169a1:	cmp    edi,DWORD PTR [eax-0xd]
  4169a4:	push   0x29453c9b
  4169a9:	mov    ch,0x4
  4169ab:	xor    esi,DWORD PTR [ebx]
  4169ad:	test   eax,0x55b230e9
  4169b2:	and    al,0xcc
  4169b4:	push   edx
  4169b5:	retf   0x6daa
  4169b8:	mov    BYTE PTR [esi+0x46a7683c],ah
  4169be:	(bad)  
  4169bf:	sbb    al,0xe9
  4169c1:	sbb    bl,cl
  4169c3:	jns    0x4169ef
  4169c5:	loope  0x416a0b
  4169c7:	mov    ss,WORD PTR [ebx+0x3b]
  4169ca:	mov    dh,0x97
  4169cc:	inc    ebp
  4169cd:	out    0x1a,al
  4169cf:	fstp   DWORD PTR [ebp+esi*8-0x2b]
  4169d3:	dec    ecx
  4169d4:	daa    
  4169d5:	jge    0x416970
  4169d7:	pusha  
  4169d8:	sub    DWORD PTR [edx-0x46760cdb],edi
  4169de:	jmp    0x7f94:0x67d1019b
  4169e5:	add    esp,DWORD PTR [ebp+0x2f929bd]
  4169eb:	mov    al,0xe
  4169ed:	push   0xeeaf180d
  4169f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f3:	add    edi,DWORD PTR fs:[esi]
  4169f6:	outs   dx,BYTE PTR ds:[esi]
  4169f7:	ficomp DWORD PTR [edi+edx*8+0x34bd88a1]
  4169fe:	xor    eax,0x33419896
  416a03:	add    esp,DWORD PTR [ebx-0x10]
  416a06:	fisub  DWORD PTR [ebx]
  416a08:	and    al,0x8d
  416a0a:	jmp    edx
  416a0c:	add    ebp,eax
  416a0e:	mov    ah,0xcf
  416a10:	stos   BYTE PTR es:[edi],al
  416a11:	(bad)  
  416a12:	lahf   
  416a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a14:	inc    ebp
  416a15:	cmc    
  416a16:	aaa    
  416a17:	call   FWORD PTR [ecx]
  416a19:	out    0x49,eax
  416a1b:	jl     0x4169a7
  416a1d:	push   esp
  416a1e:	popf   
  416a1f:	mov    esp,0x87f3256a
  416a24:	pop    ds
  416a25:	jns    0x4169d6
  416a27:	retf   
  416a28:	repnz mov eax,0x330783d0
  416a2e:	aas    
  416a2f:	jb     0x4169da
  416a31:	jns    0x416a94
  416a33:	jl     0x416a39
  416a35:	sbb    DWORD PTR [esp+0x5c2cb7e1],eax
  416a3c:	xchg   edi,eax
  416a3d:	mov    ecx,0x23013c54
  416a42:	pop    ebx
  416a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a44:	mov    es:0xa299d310,al
  416a4a:	fsubr  QWORD PTR [esi+0x7d]
  416a4d:	pop    edi
  416a4e:	jmp    0x9cf9:0x58d70136
  416a55:	xchg   esp,eax
  416a56:	nop
  416a57:	and    BYTE PTR [ecx+0x1f1b57c4],bh
  416a5d:	xchg   edi,eax
  416a5e:	jecxz  0x416acf
  416a60:	push   esp
  416a61:	adc    cl,ah
  416a63:	pop    ds
  416a64:	imul   esi,DWORD PTR [edi+eiz*2-0x1f6a0a93],0xbb892ed7
  416a6f:	xchg   edx,eax
  416a70:	(bad)  
  416a71:	jmp    0x209e:0x232bdcbd
  416a78:	les    ecx,FWORD PTR [ebp+0x68fbb9ee]
  416a7e:	or     al,0x9c
  416a80:	jnp    0x416ae0
  416a82:	call   0x7ab8:0xd0520f1c
  416a89:	out    dx,al
  416a8a:	scas   al,BYTE PTR es:[edi]
  416a8b:	push   esp
  416a8c:	xchg   DWORD PTR [ecx+edx*2-0x17a7724b],ecx
  416a93:	(bad)  
  416a94:	repnz mov DWORD PTR [esi+0x5835f25e],ecx
  416a9b:	push   es
  416a9c:	mov    cl,0xf8
  416a9e:	cs imul ebp,esi,0x2c8a04f2
  416aa5:	cmp    cl,BYTE PTR [esp]
  416aa8:	cmp    BYTE PTR [esi],bh
  416aaa:	inc    eax
  416aab:	dec    ebx
  416aac:	push   ss
  416aad:	imul   esp,DWORD PTR [ebx+edx*1],0xf747e900
  416ab4:	and    al,0x6a
  416ab6:	sbb    DWORD PTR [edi],0xfffffff4
  416ab9:	fimul  DWORD PTR [ebx+0x69]
  416abc:	lock mov cl,0x7f
  416abf:	mov    bh,BYTE PTR [edx]
  416ac1:	adc    ch,BYTE PTR [eax+0x20]
  416ac4:	call   0x3b893e35
  416ac9:	xor    DWORD PTR [ecx],esp
  416acb:	sub    ah,BYTE PTR [esi-0x35caeb1e]
  416ad1:	xor    eax,0x638bd539
  416ad6:	xchg   esi,eax
  416ad7:	repnz out 0xdd,al
  416ada:	lea    ecx,[esi+0x1bd5cc83]
  416ae0:	xor    eax,0xb90dbd9
  416ae5:	xchg   DWORD PTR [eax-0x37556ccd],esi
  416aeb:	test   eax,0xe2b8ed1e
  416af0:	scas   al,BYTE PTR es:[edi]
  416af1:	test   DWORD PTR [ebp+0x25],eax
  416af4:	mov    ch,0x80
  416af6:	sbb    BYTE PTR [ebp+0x34abe4ca],ah
  416afc:	hlt    
  416afd:	lods   al,BYTE PTR ds:[esi]
  416afe:	sub    eax,0x9d695994
  416b03:	sub    edi,ecx
  416b05:	scas   al,BYTE PTR es:[edi]
  416b06:	pusha  
  416b07:	sbb    esi,DWORD PTR [eax-0x26]
  416b0a:	push   edx
  416b0b:	js     0x416b1f
  416b0d:	mov    gs,ebx
  416b0f:	mov    DWORD PTR [ebx+0x65374150],edx
  416b15:	adc    eax,0x3f085b12
  416b1a:	imul   esi,DWORD PTR [edx-0x3f96aa87],0xffffffd6
  416b21:	loope  0x416b76
  416b23:	dec    ecx
  416b24:	addr16 iret 
  416b26:	aad    0xc
  416b28:	outs   dx,BYTE PTR ds:[esi]
  416b29:	(bad)  
  416b2a:	dec    esi
  416b2b:	add    ah,bl
  416b2d:	xchg   ebx,eax
  416b2e:	shl    BYTE PTR [edx+0x72],cl
  416b31:	fmulp  st(3),st
  416b33:	sbb    cl,BYTE PTR [ecx]
  416b35:	xor    BYTE PTR [ebp+0x43a724ba],dl
  416b3b:	les    ecx,FWORD PTR [esi]
  416b3d:	ficomp WORD PTR [esi]
  416b3f:	mov    esi,0x40647061
  416b44:	in     al,dx
  416b45:	cmp    ebx,DWORD PTR [ebp-0x1b6da564]
  416b4b:	pop    ss
  416b4c:	pop    edx
  416b4d:	and    eax,0x840f0054
  416b52:	mov    dh,0x6b
  416b54:	xor    al,0xff
  416b56:	sub    esp,esi
  416b58:	sbb    DWORD PTR [ecx+eax*1+0x1c],eax
  416b5c:	retf   
  416b5d:	and    BYTE PTR [edx],0xfd
  416b60:	fadd   DWORD PTR [ebp+0x6]
  416b63:	or     eax,0xab5c51db
  416b68:	sahf   
  416b69:	mov    ds:0xc06c5863,al
  416b6e:	add    ebx,esi
  416b70:	cdq    
  416b71:	dec    edx
  416b72:	push   0xffffff8e
  416b74:	pop    esi
  416b75:	adc    bl,BYTE PTR [eax+0x39]
  416b78:	dec    ebx
  416b79:	out    0x11,al
  416b7b:	es adc al,0xa5
  416b7e:	js     0x416bd0
  416b80:	jmp    0x1087c9b8
  416b85:	and    eax,0x471eb2cd
  416b8a:	push   es
  416b8b:	or     ebp,DWORD PTR [esi]
  416b8d:	xor    DWORD PTR [ecx],esp
  416b8f:	sbb    BYTE PTR [esi],0x95
  416b92:	fstp   DWORD PTR [ebx]
  416b94:	popf   
  416b95:	loope  0x416bd0
  416b97:	sub    eax,DWORD PTR [ecx-0x48]
  416b9a:	jns    0x416b4d
  416b9c:	xor    eax,0xa57f16aa
  416ba1:	stos   DWORD PTR es:[edi],eax
  416ba2:	cs push edi
  416ba4:	int3   
  416ba5:	ret    
  416ba6:	(bad)  
  416ba7:	dec    ebx
  416ba8:	or     eax,0xefeb5111
  416bad:	retf   
  416bae:	push   ss
  416baf:	jae    0x416bcb
  416bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bb2:	mov    ecx,0x8471dfcd
  416bb7:	add    eax,0xeec272d0
  416bbc:	lds    esp,FWORD PTR [edx+0x4a8b0b1d]
  416bc2:	xchg   esp,eax
  416bc3:	jmp    0x982db65c
  416bc8:	xacquire xchg WORD PTR [edx],bp
  416bcc:	adc    eax,0x9d8014ae
  416bd1:	test   eax,0xdcfa2d79
  416bd6:	aaa    
  416bd7:	xor    eax,esp
  416bd9:	lahf   
  416bda:	push   ebx
  416bdb:	rcr    BYTE PTR [ebx-0x36],1
  416bde:	cmp    cl,BYTE PTR [edi]
  416be0:	repz (bad) 
  416be2:	(bad)  
  416be4:	test   edx,0xd5be0988
  416bea:	inc    esi
  416beb:	icebp  
  416bec:	das    
  416bed:	mov    ah,0xff
  416bef:	daa    
  416bf0:	and    DWORD PTR [ecx+0x56],0xffffffdb
  416bf4:	arpl   WORD PTR [edi-0x59],bx
  416bf7:	mov    ah,0x36
  416bf9:	sti    
  416bfa:	sbb    bl,BYTE PTR [eax]
  416bfc:	push   eax
  416bfd:	inc    ebp
  416bfe:	inc    ebx
  416bff:	lods   al,BYTE PTR ds:[esi]
  416c00:	out    0x3b,al
  416c02:	jae    0x416c2b
  416c04:	xor    DWORD PTR [ecx-0x15397fef],ecx
  416c0a:	jns    0x416c0c
  416c0c:	aas    
  416c0d:	mov    bl,0x79
  416c0f:	mov    WORD PTR [edi*1-0xdfd76aa],fs
  416c16:	mov    ds,WORD PTR [ecx+0x24494719]
  416c1c:	int    0xdc
  416c1e:	loop   0x416c79
  416c20:	or     BYTE PTR [eax-0x57],ch
  416c23:	and    DWORD PTR [edi-0x39e80700],0x4d
  416c2a:	jg     0x416c70
  416c2c:	mov    ?,WORD PTR [edx+0x28]
  416c2f:	push   0x6c39f916
  416c34:	out    0xb7,eax
  416c36:	sub    al,dh
  416c38:	inc    edi
  416c39:	jmp    0xd5c9:0x2afaeb5a
  416c40:	pop    edx
  416c41:	xor    eax,0xd6eef113
  416c46:	mov    al,0xb7
  416c48:	loope  0x416bfa
  416c4a:	mov    WORD PTR [ecx+0x38],ds
  416c4d:	hlt    
  416c4e:	cmp    al,0x97
  416c50:	inc    eax
  416c51:	mov    cs,edx
  416c53:	pop    esp
  416c54:	xor    dh,BYTE PTR [ecx+0x8]
  416c57:	leave  
  416c58:	sub    BYTE PTR [ebx-0x5c40b7b4],bh
  416c5e:	dec    edx
  416c5f:	in     al,dx
  416c60:	cmp    BYTE PTR es:[ebx-0x65],dl
  416c64:	addr16 fs push edi
  416c67:	ins    BYTE PTR es:[edi],dx
  416c68:	or     cl,BYTE PTR [edi]
  416c6a:	mov    edi,0xf99727e6
  416c6f:	fdivr  QWORD PTR [ecx+ebp*2-0x36]
  416c73:	fwait
  416c74:	fwait
  416c75:	jg     0x416ccd
  416c77:	mov    ds:0x3167b2a0,eax
  416c7c:	xor    dh,BYTE PTR [ebp+0x358ab0bc]
  416c82:	lods   al,BYTE PTR ds:[esi]
  416c83:	es (bad) 
  416c85:	pop    edx
  416c86:	jae    0x416c7f
  416c88:	inc    ebp
  416c89:	popa   
  416c8a:	and    DWORD PTR [edx+edx*2+0x514acde1],esp
  416c91:	das    
  416c92:	mov    ah,0x5c
  416c94:	and    ebp,DWORD PTR [esi+0x43656a41]
  416c9a:	pop    ecx
  416c9b:	push   edi
  416c9c:	shl    bl,0xd6
  416c9f:	jl     0x416ca7
  416ca1:	hlt    
  416ca2:	mov    cl,0xcc
  416ca4:	mov    cs,WORD PTR [ebp-0x16]
  416ca7:	add    edx,0xcdca396c
  416cad:	(bad)
  416cb0:	xchg   edx,eax
  416cb1:	xchg   DWORD PTR ss:[esi+0x70],ecx
  416cb5:	fwait
  416cb6:	rol    BYTE PTR [edx],0x7c
  416cb9:	adc    BYTE PTR [ebx-0x7c973c28],ch
  416cbf:	mov    DWORD PTR [esi-0x7e],edi
  416cc2:	mov    DWORD PTR [ecx+0xd],ebp
  416cc5:	dec    edx
  416cc6:	es jecxz 0x416c9b
  416cc9:	adc    DWORD PTR [ebx+edx*1-0x70],edx
  416ccd:	dec    ecx
  416cce:	mov    DWORD PTR ds:0x9d3cc4b4,ebp
  416cd4:	mov    ds:0x611b4056,al
  416cd9:	es xchg edx,eax
  416cdb:	test   edi,edx
  416cdd:	retf   
  416cde:	jbe    0x416d42
  416ce0:	cli    
  416ce1:	dec    ebp
  416ce2:	ja     0x416cf6
  416ce4:	mov    ah,0xda
  416ce6:	(bad)  
  416ce7:	idiv   edi
  416ce9:	or     al,0xfb
  416ceb:	jne    0x416d1b
  416ced:	adc    BYTE PTR [ebp+0x7f],ah
  416cf0:	fsubr  st,st(6)
  416cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf3:	xor    eax,0x4f6dfa4f
  416cf8:	mov    ecx,0x37f8d765
  416cfd:	fistp  DWORD PTR [edx-0x55]
  416d00:	dec    esp
  416d01:	xor    al,0x33
  416d03:	mov    DWORD PTR [edi+esi*4-0x2b],ebx
  416d07:	mov    esp,0x1619b725
  416d0c:	sbb    BYTE PTR [eax-0xd2f649d],cl
  416d12:	repnz xor BYTE PTR [esi-0x79],ah
  416d16:	fdivr  st,st(7)
  416d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d19:	fisub  WORD PTR [edx+0x47]
  416d1c:	sahf   
  416d1d:	mov    al,ds:0x12063ff2
  416d22:	adc    eax,0x74d0bede
  416d27:	mov    ebx,0x41d174b7
  416d2c:	test   eax,0x2039452c
  416d31:	cs jns 0x416cc2
  416d34:	int3   
  416d35:	fs push esi
  416d37:	xchg   al,al
  416d39:	push   ss
  416d3a:	dec    ecx
  416d3b:	cli    
  416d3c:	retf   
  416d3d:	xchg   dx,ax
  416d3f:	pop    es
  416d40:	bound  ebp,QWORD PTR [eax]
  416d42:	mov    bh,BYTE PTR [ebx+0xb017446]
  416d48:	sub    DWORD PTR [edx+ecx*8],edi
  416d4b:	pop    ecx
  416d4c:	retf   0x4dd7
  416d4f:	stc    
  416d50:	xor    cl,BYTE PTR ds:0x6969173d
  416d56:	js     0x416d3a
  416d58:	aad    0x78
  416d5a:	mov    al,BYTE PTR [edx+0x6ee72bff]
  416d60:	(bad)  
  416d61:	pop    esi
  416d62:	mov    al,ds:0x2fe0e315
  416d67:	dec    ecx
  416d68:	pusha  
  416d69:	leave  
  416d6a:	adc    BYTE PTR [ecx+0x2b],cl
  416d6d:	mov    ebp,0xb829d394
  416d72:	xchg   edx,eax
  416d73:	imul   ebx,DWORD PTR [ecx+0x79],0xfc65d205
  416d7a:	nop
  416d7b:	jnp    0x416dbc
  416d7d:	mov    ch,0xbe
  416d7f:	push   cs
  416d80:	adc    al,0xb2
  416d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d83:	bnd ret 
  416d85:	(bad)  
  416d86:	aaa    
  416d87:	lds    eax,FWORD PTR [edx]
  416d89:	es xchg ebx,eax
  416d8b:	test   al,dl
  416d8d:	stc    
  416d8e:	push   cs
  416d8f:	sbb    al,0x1c
  416d91:	add    BYTE PTR [ebx+0x7e92069e],bh
  416d97:	lahf   
  416d98:	adc    edx,DWORD PTR [edi-0x15]
  416d9b:	sub    cl,BYTE PTR [eax+eiz*1-0x7b]
  416d9f:	cld    
  416da0:	data16 jnp 0x416e05
  416da3:	or     al,0x43
  416da5:	push   0x1f4effb8
  416daa:	mov    esp,DWORD PTR [edx-0x67133172]
  416db0:	sbb    BYTE PTR [edi],cl
  416db2:	out    dx,al
  416db3:	jge    0x416e2b
  416db5:	inc    eax
  416db6:	sbb    eax,0x39dc1aac
  416dbb:	mov    ch,0x92
  416dbd:	push   es
  416dbe:	stos   DWORD PTR es:[edi],eax
  416dbf:	out    dx,eax
  416dc0:	xchg   esp,eax
  416dc1:	out    dx,al
  416dc2:	xchg   esp,eax
  416dc3:	xchg   ecx,eax
  416dc4:	into   
  416dc5:	lock mov ds:0xc7c5c427,eax
  416dcb:	ret    
  416dcc:	stos   DWORD PTR es:[edi],eax
  416dcd:	lahf   
  416dce:	pop    edx
  416dcf:	sub    eax,0x62ab7675
  416dd4:	retf   0xe988
  416dd7:	pop    ebx
  416dd8:	out    0xd8,al
  416dda:	dec    edi
  416ddb:	adc    BYTE PTR [eax+0x20],bl
  416dde:	cmp    al,BYTE PTR [esi+0x7e]
  416de1:	push   ds
  416de2:	dec    ebx
  416de3:	push   es
  416de4:	jg     0x416df3
  416de6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416de8:	stos   DWORD PTR es:[edi],eax
  416de9:	arpl   WORD PTR [ebp-0x78],bx
  416dec:	mov    esi,edi
  416dee:	test   eax,0x35f93f60
  416df3:	mov    bl,0x11
  416df5:	stc    
  416df6:	jmp    0xbe317817
  416dfb:	sbb    DWORD PTR [ecx],0xffffff9c
  416dfe:	pushf  
  416dff:	pop    eax
  416e00:	or     ebx,DWORD PTR [esi+0x48]
  416e03:	fwait
  416e04:	jno    0x416dfd
  416e06:	lods   al,BYTE PTR ds:[esi]
  416e07:	pop    ebp
  416e08:	leave  
  416e09:	fidiv  DWORD PTR [ebx-0x6cc75bd8]
  416e0f:	sub    edx,esp
  416e11:	inc    edi
  416e12:	mov    ebp,0xc1943687
  416e17:	pop    esp
  416e18:	push   0xe9aa8d81
  416e1d:	adc    eax,0xd8edce11
  416e22:	jecxz  0x416e90
  416e24:	cwde   
  416e25:	push   ds
  416e26:	fimul  WORD PTR [ebp-0x43b6442b]
  416e2c:	scas   al,BYTE PTR es:[edi]
  416e2d:	dec    ecx
  416e2e:	push   es
  416e2f:	int3   
  416e30:	or     DWORD PTR [edx],0x2ccee323
  416e36:	xlat   BYTE PTR ds:[ebx]
  416e37:	std    
  416e38:	inc    ebp
  416e39:	push   edi
  416e3a:	cmp    ch,BYTE PTR [edi]
  416e3c:	mov    bl,0xb9
  416e3e:	mov    ebx,0x270923e7
  416e43:	add    al,0x85
  416e45:	pop    edx
  416e46:	push   ds
  416e47:	add    ah,dh
  416e49:	call   0xbd2af740
  416e4e:	lock sub BYTE PTR [ecx+0x68],cl
  416e52:	or     al,0xfd
  416e54:	cli    
  416e55:	mov    bh,0x84
  416e57:	ror    DWORD PTR [edx+esi*8-0x7f],0x9b
  416e5c:	test   BYTE PTR [edx],al
  416e5e:	jno    0x416e0a
  416e60:	js     0x416e47
  416e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e63:	ins    DWORD PTR es:[edi],dx
  416e64:	pop    edx
  416e65:	xor    eax,0x95c60a2e
  416e6a:	ins    DWORD PTR es:[edi],dx
  416e6b:	jno    0x416ee4
  416e6d:	add    DWORD PTR [edx+0x1b],esi
  416e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e71:	pop    ebx
  416e72:	(bad)
  416e76:	cmp    bh,BYTE PTR [eax-0x25]
  416e79:	pop    ds
  416e7a:	es (bad) 
  416e7c:	(bad)  
  416e7d:	cld    
  416e7e:	scas   eax,DWORD PTR es:[edi]
  416e7f:	xchg   esi,eax
  416e80:	mov    edx,0xcfa2092d
  416e85:	lahf   
  416e86:	hlt    
  416e87:	sbb    DWORD PTR [ebx],ebp
  416e89:	pop    ss
  416e8a:	std    
  416e8b:	(bad)  
  416e8c:	cmp    al,0x89
  416e8e:	(bad)  
  416e8f:	ja     0x416ebb
  416e91:	xor    cl,0xae
  416e94:	out    0x45,eax
  416e96:	pop    edi
  416e97:	push   eax
  416e98:	push   edi
  416e99:	pop    esp
  416e9a:	mov    ds:0xd73745a1,al
  416e9f:	outs   dx,DWORD PTR ds:[esi]
  416ea0:	retf   0xbf13
  416ea3:	jne    0x416e9d
  416ea5:	mov    ds:0x2adf0393,al
  416eaa:	or     eax,0x398215e0
  416eaf:	scas   eax,DWORD PTR es:[edi]
  416eb0:	das    
  416eb1:	stos   BYTE PTR es:[edi],al
  416eb2:	sbb    al,0xbd
  416eb4:	add    eax,0xe695ad91
  416eb9:	lea    edx,[edi]
  416ebb:	shr    DWORD PTR [edi+0x4],0x6
  416ebf:	mov    ebx,0x49a7d63f
  416ec4:	mov    ecx,0x60753219
  416ec9:	lods   eax,DWORD PTR ds:[esi]
  416eca:	pop    eax
  416ecb:	gs retf 0xad00
  416ecf:	cmp    eax,0xd9130994
  416ed4:	dec    esp
  416ed5:	idiv   DWORD PTR [esi]
  416ed7:	setg   ah
  416eda:	and    eax,eax
  416edc:	cli    
  416edd:	xchg   edi,eax
  416ede:	cmp    al,bh
  416ee0:	aad    0x63
  416ee2:	mov    WORD PTR [edi+0x2521d8b4],cs
  416ee8:	and    eax,0xa502632
  416eed:	out    0x20,al
  416eef:	push   edx
  416ef0:	mov    ch,0x42
  416ef2:	pusha  
  416ef3:	cdq    
  416ef4:	lock and eax,0x48ad2c42
  416efa:	cmp    DWORD PTR [ecx-0x21],esi
  416efd:	pop    DWORD PTR [ecx+0x55]
  416f00:	loop   0x416f62
  416f02:	mov    BYTE PTR [ebp+0x75],cl
  416f05:	pop    eax
  416f06:	sub    cl,BYTE PTR [ebx]
  416f08:	mov    ch,0xf9
  416f0a:	idiv   BYTE PTR [edx]
  416f0c:	inc    edi
  416f0d:	out    0xc2,eax
  416f0f:	and    BYTE PTR [eax-0x194dcd4b],0xca
  416f16:	clc    
  416f17:	(bad)  
  416f18:	and    al,0x2b
  416f1a:	fstp   QWORD PTR [edi+eax*1]
  416f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f1e:	inc    esi
  416f1f:	ret    0xef3d
  416f22:	rcl    DWORD PTR [ecx+0x43],cl
  416f25:	mov    esi,0x6a27ff11
  416f2a:	(bad)  
  416f2b:	jne    0x416f6a
  416f2d:	sub    al,BYTE PTR [edi-0x16]
  416f30:	sbb    eax,0x4b89277a
  416f35:	ret    0x5fe0
  416f38:	xchg   edi,eax
  416f39:	loopne 0x416ef9
  416f3b:	xor    eax,0x79c0aefb
  416f40:	mov    WORD PTR [ebx-0x38],?
  416f43:	jno    0x416faa
  416f45:	pop    ds
  416f46:	outs   dx,DWORD PTR ds:[esi]
  416f47:	(bad)  
  416f48:	jae    0x416f5d
  416f4a:	push   ss
  416f4b:	mov    ecx,DWORD PTR [ebx]
  416f4d:	fimul  DWORD PTR [eax-0x63]
  416f50:	mov    cl,0xf2
  416f52:	jae    0x416f60
  416f54:	push   es
  416f55:	or     eax,0x9c4e51f5
  416f5a:	adc    ebp,ecx
  416f5c:	pop    ecx
  416f5d:	fs inc esp
  416f5f:	(bad)  
  416f60:	out    0x2c,eax
  416f62:	cli    
  416f63:	adc    BYTE PTR [ebp+0x2f],dh
  416f66:	adc    eax,0xdd0d16a6
  416f6b:	jbe    0x416fc4
  416f6d:	cmc    
  416f6e:	push   edx
  416f6f:	call   0xb965c501
  416f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f76:	push   cs
  416f77:	arpl   di,di
  416f79:	ror    BYTE PTR [ebx],cl
  416f7b:	jl     0x416f90
  416f7d:	in     al,0xf5
  416f7f:	shl    BYTE PTR [edi-0x3d2e6807],0x64
  416f86:	sbb    BYTE PTR [esi+0x37],bh
  416f89:	and    BYTE PTR [edi-0x6f],al
  416f8c:	inc    ebp
  416f8d:	push   esp
  416f8e:	dec    ebx
  416f8f:	cdq    
  416f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f91:	mov    ebp,0x98fb9f35
  416f96:	icebp  
  416f97:	jg     0x416fbb
  416f99:	mov    cl,0x56
  416f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f9c:	scas   al,BYTE PTR es:[edi]
  416f9d:	jg     0x416f5a
  416f9f:	mov    cl,0x23
  416fa1:	mov    BYTE PTR [edx+0x3a022887],ch
  416fa7:	sbb    al,0xef
  416fa9:	mov    ds:0x9842994a,eax
  416fae:	mov    WORD PTR [esi],fs
  416fb0:	ret    0xfdb0
  416fb3:	nop
  416fb4:	mov    esi,esp
  416fb6:	mov    DWORD PTR [eax-0x12701fc3],0xcc17f759
  416fc0:	imul   ebx,DWORD PTR [eax-0x52],0xffffffb4
  416fc4:	lock imul ecx,ecx,0xfad687b3
  416fcb:	push   cs
  416fcc:	sbb    BYTE PTR [ecx+0x4d6dbd61],bl
  416fd2:	or     cl,dh
  416fd4:	push   esi
  416fd5:	add    ebp,ecx
  416fd7:	xor    BYTE PTR [edx-0x37],dh
  416fda:	xchg   ebp,eax
  416fdb:	in     eax,0xf
  416fdd:	(bad)  
  416fde:	xchg   ebx,eax
  416fdf:	adc    eax,0x4b0432d
  416fe4:	cld    
  416fe5:	scas   eax,DWORD PTR es:[edi]
  416fe6:	adc    al,0x7
  416fe8:	and    edx,DWORD PTR [eax]
  416fea:	push   esp
  416feb:	aaa    
  416fec:	xchg   DWORD PTR [ecx+0x3d],eax
  416fef:	(bad)  
  416ff1:	int3   
  416ff2:	adc    BYTE PTR [edx],al
  416ff4:	lea    edx,[eax-0x76250f7d]
  416ffa:	pop    esi
  416ffb:	and    ebp,DWORD PTR [esi+0x1]
  416ffe:	addr16 pop es
  417000:	shl    eax,cl
  417002:	push   edx
  417003:	popf   
  417004:	jl     0x416fe3
  417006:	pop    ebx
  417007:	xor    al,0xd8
  417009:	pop    es
  41700a:	pop    ebp
  41700b:	or     cl,BYTE PTR [eax]
  41700d:	fwait
  41700e:	jle    0x41700f
  417010:	sbb    edx,0xffffffc0
  417013:	mov    ds:0x9d21e6d6,eax
  417018:	test   eax,0x3d781a9b
  41701d:	mov    ebx,0x1c9d5a4b
  417022:	push   cs
  417023:	xor    eax,DWORD PTR [eax-0x48f24fcb]
  417029:	retf   0x3104
  41702c:	daa    
  41702d:	xchg   edx,eax
  41702e:	mov    cl,0xe3
  417030:	sub    esi,DWORD PTR [esi-0x22ff599]
  417036:	pushf  
  417037:	jmp    0x9fb05f7a
  41703c:	mov    ah,0x78
  41703e:	xchg   esi,eax
  41703f:	sub    DWORD PTR [eax],eax
  417041:	aad    0xd6
  417043:	xchg   DWORD PTR [ebx+0x7a],eax
  417046:	push   ecx
  417047:	adc    DWORD PTR [eax+0x4ce0c7f2],esi
  41704d:	pop    eax
  41704e:	mov    al,ds:0x136399b7
  417053:	call   0xff1587da
  417058:	pop    ss
  417059:	mov    ah,BYTE PTR [edi+edi*1]
  41705c:	dec    edi
  41705d:	in     eax,0x15
  41705f:	call   0x5627afaa
  417064:	loope  0x4170b6
  417066:	retf   
  417067:	mov    ebp,0xc277b546
  41706c:	sbb    eax,0xe1160214
  417071:	fdiv   QWORD PTR [esi+0x5db6a533]
  417077:	dec    edx
  417078:	test   eax,0x72b6b83c
  41707d:	pusha  
  41707e:	loopne 0x4170a6
  417080:	fs mov esi,0x492e81a5
  417086:	jns    0x4170d8
  417088:	xchg   ebx,eax
  417089:	fs jmp 0xb29e0ccf
  41708f:	inc    edi
  417090:	test   BYTE PTR [ecx+ebx*2+0x2e],bl
  417094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417095:	imul   ecx,DWORD PTR [eax-0x39],0x8390bfe4
  41709c:	mov    al,0xf6
  41709e:	(bad)  
  41709f:	js     0x417114
  4170a1:	adc    BYTE PTR [esi-0x17],dl
  4170a4:	pop    ecx
  4170a5:	pop    edi
  4170a6:	jecxz  0x41706c
  4170a8:	sbb    al,0xec
  4170aa:	cmp    DWORD PTR [ebx-0x6dd9b4ee],esp
  4170b0:	iret   
  4170b1:	les    edi,FWORD PTR [edx]
  4170b3:	jb     0x417067
  4170b5:	xchg   ecx,eax
  4170b6:	js     0x41712b
  4170b8:	jb     0x417081
  4170ba:	cmc    
  4170bb:	out    0x59,eax
  4170bd:	mov    esp,0xd2f9d7a4
  4170c2:	push   ebp
  4170c3:	push   0xffffffab
  4170c5:	(bad)  
  4170c6:	mov    dl,0xf3
  4170c8:	mov    bl,dh
  4170ca:	push   esi
  4170cb:	frstor [edi+0x14ff2798]
  4170d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170d2:	aas    
  4170d3:	jmp    0xc66c:0x3c3b7cff
  4170da:	inc    ebp
  4170db:	das    
  4170dc:	pop    esp
  4170dd:	dec    esp
  4170de:	inc    edx
  4170df:	das    
  4170e0:	ja     0x41713c
  4170e2:	inc    edi
  4170e3:	fstp   DWORD PTR [ecx+esi*2]
  4170e6:	inc    esi
  4170e7:	fbstp  TBYTE PTR ds:0x59a84b78
  4170ed:	ret    
  4170ee:	pop    ebx
  4170ef:	aas    
  4170f0:	xor    BYTE PTR [ecx+0x73],0x9
  4170f4:	hlt    
  4170f5:	shr    BYTE PTR [ebx-0x297182ad],0xec
  4170fc:	jae    0x417084
  4170fe:	adc    DWORD PTR [edi],eax
  417100:	pushf  
  417101:	call   0x145e344c
  417106:	adc    esi,ecx
  417108:	adc    al,BYTE PTR [edx-0x3d]
  41710b:	vmread DWORD PTR [edx],ecx
  41710e:	push   edi
  41710f:	adc    bh,BYTE PTR [edi+0x15]
  417112:	(bad)  
  417113:	std    
  417114:	out    dx,al
  417115:	push   es
  417116:	nop
  417117:	cs je  0x417123
  41711a:	sti    
  41711b:	in     al,dx
  41711c:	xchg   cl,bh
  41711e:	aaa    
  41711f:	add    eax,DWORD PTR [edx+0x655b0471]
  417125:	xchg   edi,eax
  417127:	sbb    al,0x13
  417129:	jbe    0x560f6341
  41712f:	adc    eax,0x5a19927
  417134:	and    bl,BYTE PTR [edi]
  417136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417137:	jge    0x4170d4
  417139:	das    
  41713a:	(bad)  
  41713b:	pop    edi
  41713c:	ret    
  41713d:	mov    bh,0x98
  41713f:	mov    ah,0x8f
  417141:	ret    0x5955
  417144:	fidivr DWORD PTR [edi]
  417146:	inc    esp
  417147:	lahf   
  417148:	mov    ds:0x708f63b1,eax
  41714d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41714e:	mov    edx,0x2e29be26
  417153:	or     DWORD PTR ds:0xd559e04,edi
  417159:	test   BYTE PTR [ecx-0x7e33c9e9],bl
  41715f:	add    al,0xc7
  417161:	xchg   BYTE PTR [ecx+0x75],dh
  417164:	(bad)  
  417165:	cdq    
  417166:	or     al,0x20
  417168:	jbe    0x41715f
  41716a:	lods   al,BYTE PTR ds:[esi]
  41716b:	jle    0x417181
  41716d:	xchg   ecx,eax
  41716e:	int    0xec
  417170:	xchg   edx,eax
  417171:	cmp    esp,ecx
  417173:	push   es
  417174:	xor    al,BYTE PTR [ebx+0x5a]
  417177:	or     ecx,edi
  417179:	xchg   esi,eax
  41717a:	inc    ebp
  41717b:	ss in  eax,dx
  41717d:	cmp    al,0xc2
  41717f:	adc    al,0xbc
  417181:	push   ecx
  417182:	popa   
  417183:	icebp  
  417184:	pop    esi
  417185:	mov    ah,0x34
  417187:	push   ss
  417188:	add    edx,edx
  41718a:	push   ss
  41718b:	add    BYTE PTR [ebp+0x37bc6e21],0xbc
  417192:	rcl    cl,0xe3
  417195:	ins    DWORD PTR es:[edi],dx
  417196:	sbb    ebx,DWORD PTR [eax+esi*1]
  417199:	xor    BYTE PTR [ebx+0x21],bh
  41719c:	jbe    0x4171e6
  41719e:	int3   
  41719f:	dec    ebp
  4171a0:	call   0xc82fffe2
  4171a5:	dec    edi
  4171a6:	inc    bx
  4171a8:	and    DWORD PTR [ecx+0x16adacc0],ebp
  4171ae:	mov    ds,WORD PTR [ebp+0x18910736]
  4171b4:	fcom   st(7)
  4171b6:	xchg   ebp,eax
  4171b7:	pop    eax
  4171b8:	out    0x33,eax
  4171ba:	jns    0x417227
  4171bc:	sub    DWORD PTR [esi+0x67c9d2a],0x97e5e17b
  4171c6:	(bad)  
  4171c7:	rcr    DWORD PTR [edi-0x69],0x7d
  4171cb:	loop   0x4171fd
  4171cd:	cmp    eax,0x45c590b8
  4171d2:	mov    bl,0xb5
  4171d4:	cwde   
  4171d5:	(bad)  
  4171d6:	enter  0x7a4b,0xe2
  4171da:	cmp    al,0x15
  4171dc:	jge    0x4171bf
  4171de:	dec    esi
  4171df:	mov    esp,0xda1da495
  4171e4:	imul   ebp,DWORD PTR [esi+0x48],0x57
  4171e8:	retf   0xf7b1
  4171eb:	push   ebx
  4171ec:	xor    eax,0x15d7f024
  4171f1:	cdq    
  4171f2:	and    BYTE PTR [edi+0xf],dh
  4171f5:	(bad)  
  4171f6:	ins    BYTE PTR es:[edi],dx
  4171f7:	clc    
  4171f8:	push   edx
  4171f9:	outs   dx,DWORD PTR ds:[esi]
  4171fa:	rcr    bl,0xa9
  4171fd:	fnstenv [ebx]
  4171ff:	sahf   
  417200:	dec    esi
  417201:	xor    cl,dl
  417203:	cs gs mov dh,0x63
  417207:	sar    BYTE PTR [ecx+0x7ecfcd22],cl
  41720d:	pmaddwd mm3,QWORD PTR [edx]
  417210:	cdq    
  417211:	push   esp
  417212:	shr    DWORD PTR [edi],1
  417214:	jmp    0x4171c8
  417216:	adc    al,0xd1
  417218:	clc    
  417219:	xor    eax,DWORD PTR [ebx]
  41721b:	sbb    cl,BYTE PTR [eax]
  41721d:	frstor [edx-0x4f4a91b]
  417223:	xchg   ebx,eax
  417224:	mov    dl,0xc
  417226:	adc    eax,0xf2efed29
  41722b:	mov    ecx,0xd9523db1
  417230:	cwde   
  417231:	add    DWORD PTR [edx+0x39],esp
  417234:	div    DWORD PTR [ebx+0x13781da]
  41723a:	xchg   edi,eax
  41723b:	or     dh,BYTE PTR [eax+0xa4ccc2e]
  417241:	add    al,0xaf
  417243:	dec    ebp
  417244:	out    dx,eax
  417245:	xchg   esp,eax
  417246:	(bad)  
  417247:	hlt    
  417248:	mov    ebp,0x27e913c3
  41724d:	rcr    DWORD PTR [ebx-0x14],0x70
  417251:	nop
  417252:	int    0x51
  417254:	push   ds
  417255:	in     al,dx
  417256:	mov    eax,ds:0xe8ac73bf
  41725b:	push   ecx
  41725c:	push   0xf5781ee9
  417261:	scas   eax,DWORD PTR es:[edi]
  417262:	sub    al,0xf5
  417264:	in     al,0x4c
  417266:	int3   
  417267:	jge    0x417228
  417269:	stc    
  41726a:	xor    al,0xbb
  41726c:	mov    cl,0x8
  41726e:	xchg   edi,eax
  41726f:	push   es
  417270:	xlat   BYTE PTR ds:[ebx]
  417271:	sub    eax,0x9ac805a1
  417276:	adc    al,BYTE PTR [edi]
  417278:	loop   0x4172a0
  41727a:	out    dx,al
  41727b:	dec    ecx
  41727c:	mov    gs,WORD PTR [esi-0x309142b4]
  417282:	sbb    dh,ch
  417284:	(bad)  
  417286:	rcr    DWORD PTR [edx+0x1c61d7a3],0x3c
  41728d:	sub    esi,DWORD PTR [esi]
  41728f:	mov    ah,0xde
  417291:	pop    ebp
  417292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417293:	daa    
  417294:	and    bl,BYTE PTR [eax-0x4]
  417297:	(bad)  
  417298:	xor    eax,0xe42bc6f
  41729d:	and    BYTE PTR [ecx+0x71],dh
  4172a0:	jno    0x417228
  4172a2:	into   
  4172a3:	mov    al,0x10
  4172a5:	stos   DWORD PTR es:[edi],eax
  4172a6:	fbstp  TBYTE PTR [esi+0x66]
  4172a9:	sbb    eax,DWORD PTR [ebp+0x6b0c6020]
  4172af:	add    edx,ebp
  4172b1:	xchg   edx,eax
  4172b2:	pop    ebx
  4172b3:	les    ebp,FWORD PTR [esi-0x29]
  4172b6:	xor    DWORD PTR [ecx],ecx
  4172b8:	dec    esi
  4172b9:	fisub  WORD PTR [edx]
  4172bb:	int    0xb5
  4172bd:	icebp  
  4172be:	aam    0x54
  4172c0:	ret    
  4172c1:	ins    DWORD PTR es:[edi],dx
  4172c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c3:	in     al,dx
  4172c4:	fnstcw WORD PTR [edi+edi*8]
  4172c7:	in     al,0x53
  4172c9:	mov    cl,0xe7
  4172cb:	inc    edx
  4172cc:	rcl    BYTE PTR [edi],1
  4172ce:	outs   dx,BYTE PTR ds:[esi]
  4172cf:	pop    esi
  4172d0:	out    dx,eax
  4172d1:	sar    DWORD PTR [ebx-0x34],0xf2
  4172d5:	dec    esi
  4172d7:	clc    
  4172d8:	imul   ebx,esi,0x15
  4172db:	fwait
  4172dc:	in     eax,dx
  4172dd:	call   0x2c56:0xe1b03f2d
  4172e4:	dec    esi
  4172e5:	push   0x1f
  4172e7:	shr    esp,1
  4172e9:	add    DWORD PTR ds:[edx],ebx
  4172ec:	sbb    eax,0x76e7f6e2
  4172f1:	rcr    BYTE PTR [edx],cl
  4172f3:	jno    0x417321
  4172f5:	or     eax,0xe0d23759
  4172fa:	add    al,0x58
  4172fc:	fcomp  DWORD PTR [esi]
  4172fe:	mov    eax,ds:0x5dfc168a
  417303:	repz adc eax,0x8fc6651c
  417309:	gs jns 0x41730c
  41730c:	rcl    DWORD PTR [ecx+0x7471a216],cl
  417312:	ins    DWORD PTR es:[edi],dx
  417313:	xor    eax,DWORD PTR [esi]
  417315:	mov    bl,0xd1
  417317:	fist   WORD PTR [eax+ecx*2-0x76245439]
  41731e:	xchg   ebp,eax
  41731f:	inc    ebx
  417320:	jge    0x41732c
  417322:	scas   al,BYTE PTR es:[edi]
  417323:	jmp    0xc0c57cce
  417328:	call   DWORD PTR [eax+0x74]
  41732b:	push   esi
  41732c:	pop    edi
  41732d:	in     eax,dx
  41732e:	mov    dl,0xb4
  417330:	sar    esp,0xaa
  417333:	popf   
  417334:	repz out 0x85,al
  417337:	jp     0x4173ad
  417339:	fimul  DWORD PTR [edx]
  41733b:	out    dx,eax
  41733c:	fnop   
  41733e:	sbb    BYTE PTR [edi-0x1d],bl
  417341:	jle    0x417330
  417343:	cld    
  417344:	xchg   esp,eax
  417345:	mov    bh,0x55
  417347:	arpl   WORD PTR [eax],dx
  417349:	add    BYTE PTR [ecx-0xc],al
  41734c:	test   eax,0xb759156a
  417351:	pop    esi
  417352:	xchg   ebp,eax
  417353:	and    BYTE PTR [ecx-0x41],ch
  417356:	hlt    
  417357:	mov    ds:0x88b412ad,al
  41735c:	lds    ebp,FWORD PTR [eax+0x38]
  41735f:	cmp    ebx,DWORD PTR [ecx-0x4d]
  417362:	or     al,0x8e
  417364:	pop    esp
  417365:	add    eax,0x28ecd88b
  41736a:	mov    al,0x52
  41736c:	add    cl,0x1f
  41736f:	and    BYTE PTR [ecx-0x75e7ec78],bl
  417375:	lea    esp,[ebx]
  417377:	xchg   edx,eax
  417378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417379:	call   0xbcb0fc61
  41737e:	jl     0x417387
  417380:	xchg   ecx,eax
  417381:	xchg   ecx,eax
  417382:	cmp    eax,0xfbe33ce7
  417387:	stc    
  417388:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41738a:	jae    0x417310
  41738c:	mov    al,ds:0x71a13207
  417391:	mov    ds:0xf05de3f7,eax
  417396:	mov    ch,0x39
  417398:	iret   
  417399:	and    ch,dl
  41739b:	fild   WORD PTR [eax-0x1]
  41739e:	fsubr  QWORD PTR [ebx+0x40]
  4173a1:	xchg   edx,eax
  4173a2:	push   edx
  4173a3:	jl     0x417395
  4173a5:	idiv   BYTE PTR [edi+0x3844e151]
  4173ab:	cmc    
  4173ac:	jmp    0x6599ed4c
  4173b1:	and    al,0xec
  4173b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173b4:	into   
  4173b5:	jmp    0x30e9:0xa840cca5
  4173bc:	leave  
  4173bd:	in     al,dx
  4173be:	and    esp,DWORD PTR [eax]
  4173c0:	fisubr WORD PTR [ecx-0xc6ef258]
  4173c6:	mov    ecx,0xeb330ba5
  4173cb:	sbb    DWORD PTR [ebx+0x547d9984],0xf9fdd97f
  4173d5:	ds mov ah,0x6a
  4173d8:	adc    ebp,DWORD PTR [eax+0x43]
  4173db:	out    dx,eax
  4173dc:	shr    esi,0xb0
  4173df:	sub    BYTE PTR [ebx+0x4fdd4243],0xd9
  4173e6:	sub    ebx,0xffffffe1
  4173e9:	cmp    DWORD PTR [ebp+0x77391181],ebx
  4173ef:	iret   
  4173f0:	mov    ah,0x16
  4173f2:	mov    ch,0x1
  4173f4:	and    DWORD PTR [eax+ecx*4-0x54db1386],eax
  4173fb:	mov    al,ds:0xe8e00acd
  417400:	out    0xcb,al
  417402:	pop    edx
  417403:	xchg   ebp,eax
  417404:	enter  0x2cb8,0xc
  417408:	jnp    0x41746a
  41740a:	stos   BYTE PTR es:[edi],al
  41740b:	mov    ah,0x3d
  41740d:	in     eax,0xd5
  41740f:	fnstsw WORD PTR [esi+0x4f]
  417412:	mov    ecx,esi
  417414:	push   esi
  417415:	ins    BYTE PTR es:[edi],dx
  417416:	ds or  ah,ah
  417419:	sbb    ebp,DWORD PTR gs:[ebp+0xa]
  41741d:	xor    al,0x79
  41741f:	int    0xe4
  417421:	je     0x4173b0
  417423:	repz inc ebx
  417425:	cwde   
  417426:	mul    BYTE PTR [ecx+eiz*4-0x6a]
  41742a:	dec    ebx
  41742b:	dec    ecx
  41742c:	add    eax,eax
  41742e:	mov    ch,0x3d
  417430:	sub    BYTE PTR [ebx-0x776a1fe9],cl
  417436:	nop
  417437:	xchg   ebp,eax
  417438:	aas    
  417439:	ins    BYTE PTR es:[edi],dx
  41743a:	push   es
  41743b:	cmp    edx,ecx
  41743d:	push   ds
  41743e:	fwait
  41743f:	push   eax
  417440:	js     0x4173e2
  417442:	pop    edx
  417443:	dec    edx
  417444:	add    BYTE PTR [ebp-0x2d173ea7],ch
  41744a:	dec    ecx
  41744b:	lods   eax,DWORD PTR ds:[esi]
  41744c:	or     bl,dl
  41744e:	fisub  DWORD PTR [ecx-0x4329efb9]
  417454:	int    0x24
  417456:	sub    al,0x92
  417458:	(bad)  
  417459:	or     DWORD PTR [edx-0x7e],ebx
  41745c:	test   DWORD PTR [ecx+0x34],esi
  41745f:	dec    ebx
  417460:	test   ebx,esp
  417462:	ss loope 0x417488
  417465:	pop    ebp
  417466:	fidiv  DWORD PTR [ecx]
  417468:	cmp    BYTE PTR [edx+0x4e4b9544],0xd9
  41746f:	mov    cl,BYTE PTR [ebx-0x6d5a5922]
  417475:	sbb    BYTE PTR [ecx-0x4b],al
  417478:	gs mov dl,0xba
  41747b:	into   
  41747c:	and    DWORD PTR [ebx-0x3de04bbc],esi
  417482:	scas   eax,DWORD PTR es:[edi]
  417483:	sti    
  417484:	add    bh,bh
  417486:	pop    edi
  417487:	daa    
  417488:	mov    esi,0x5de3bb87
  41748d:	push   ebx
  41748e:	and    BYTE PTR [ebx+0x245a2d43],al
  417494:	xchg   ecx,eax
  417495:	inc    eax
  417496:	inc    edx
  417497:	mov    cs,WORD PTR [ebp+0x5f]
  41749a:	mov    ebx,ebx
  41749c:	lahf   
  41749d:	jl     0x417485
  41749f:	xchg   ecx,eax
  4174a0:	push   esp
  4174a1:	xor    BYTE PTR [ebx],dl
  4174a3:	sbb    al,0xb
  4174a5:	pop    esi
  4174a6:	fcmovnb st,st(4)
  4174a8:	lahf   
  4174a9:	dec    edx
  4174aa:	xlat   BYTE PTR ds:[ebx]
  4174ab:	mov    DWORD PTR [eax+0x585c3067],eax
  4174b1:	mov    BYTE PTR [eax+eax*2],bh
  4174b4:	and    esi,ebx
  4174b6:	mov    DWORD PTR [edx-0x4e],edx
  4174b9:	inc    ebx
  4174ba:	push   cs
  4174bb:	mov    cl,0x25
  4174bd:	mov    ds:0x6ee9c225,eax
  4174c2:	or     dh,dh
  4174c4:	push   edx
  4174c5:	pushf  
  4174c6:	sub    esi,DWORD PTR [eax+0x68]
  4174c9:	mov    edi,0x6c02a05b
  4174ce:	neg    al
  4174d0:	adc    dl,bh
  4174d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d3:	sub    eax,0x19cf87e7
  4174d8:	sub    dh,BYTE PTR ds:0x8484c264
  4174de:	xor    DWORD PTR [edi],edi
  4174e0:	cs (bad) 
  4174e2:	inc    edx
  4174e3:	idiv   BYTE PTR [esi-0x608077af]
  4174e9:	mov    ebp,0x70cd09f
  4174ee:	mov    edi,0x2cb6cb19
  4174f3:	xor    al,0xfc
  4174f5:	fld    TBYTE PTR [edi+0x3a]
  4174f8:	ss out 0xc4,eax
  4174fb:	jmp    0x4b1fc95f
  417500:	or     esi,DWORD PTR [ecx]
  417502:	loope  0x417544
  417504:	xchg   edi,eax
  417505:	dec    ebx
  417506:	adc    al,0xfc
  417508:	jg     0x4174b5
  41750a:	and    edx,DWORD PTR [eax-0x63]
  41750d:	lahf   
  41750e:	and    eax,0xfffffff9
  417511:	in     al,dx
  417512:	jl     0x4174fc
  417514:	push   edx
  417515:	mov    esp,0xb5601878
  41751a:	sub    dh,BYTE PTR ds:[ecx-0x2763a69c]
  417521:	outs   dx,BYTE PTR ds:[esi]
  417522:	pop    ebx
  417523:	(bad)  
  417524:	or     eax,0x58edf4ae
  417529:	pop    es
  41752a:	aaa    
  41752b:	mov    WORD PTR [edx+esi*8+0x6b],fs
  41752f:	push   ss
  417530:	lods   al,BYTE PTR ds:[esi]
  417531:	push   edi
  417532:	pusha  
  417533:	jl     0x4174c6
  417535:	in     al,0x56
  417537:	ret    0x7515
  41753a:	fcomp  st(4)
  41753c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41753d:	cli    
  41753e:	jbe    0x417575
  417540:	ss std 
  417542:	jle    0x417527
  417544:	and    eax,0xf402a456
  417549:	ins    DWORD PTR es:[edi],dx
  41754a:	adc    eax,0x565bde6d
  41754f:	add    eax,0x89a2f9a5
  417554:	sbb    al,0xc2
  417556:	pop    ss
  417557:	(bad)  
  417558:	cmp    bh,BYTE PTR [esi]
  41755a:	xchg   esp,eax
  41755b:	xchg   ebp,eax
  41755c:	aad    0x89
  41755e:	js     0x4175a6
  417560:	adc    bh,BYTE PTR [edi+0x19d953d7]
  417566:	cmp    al,0x76
  417568:	pop    esi
  417569:	dec    edx
  41756a:	xor    ch,BYTE PTR [eax+0x2223f8a]
  417570:	jl     0x417570
  417572:	push   cs
  417573:	fnstsw WORD PTR [ecx]
  417575:	jle    0x417559
  417577:	xor    BYTE PTR [ebp-0x73],bl
  41757a:	jl     0x41756d
  41757c:	(bad)  
  41757d:	xor    al,0x1e
  41757f:	out    dx,eax
  417580:	imul   edi,DWORD PTR [edi+0x42],0x48
  417584:	fwait
  417585:	push   es
  417586:	dec    esp
  417587:	cmp    al,0xf9
  417589:	sti    
  41758a:	ret    
  41758b:	stos   BYTE PTR es:[edi],al
  41758c:	push   ebp
  41758d:	out    dx,eax
  41758e:	je     0x417579
  417590:	adc    DWORD PTR [edx+0x35],eax
  417593:	dec    ebx
  417594:	iret   
  417595:	xchg   esi,eax
  417596:	mov    ebp,0x48385efc
  41759b:	lods   al,BYTE PTR ds:[esi]
  41759c:	or     BYTE PTR [edi-0x38],0x68
  4175a0:	hlt    
  4175a1:	push   ebx
  4175a2:	mov    ds:0xbaefbbb1,eax
  4175a7:	bound  esi,QWORD PTR [ecx]
  4175a9:	lods   al,BYTE PTR ds:[esi]
  4175aa:	xor    BYTE PTR [ecx],dl
  4175ac:	les    ecx,FWORD PTR [edi]
  4175ae:	xchg   esi,eax
  4175af:	fadd   QWORD PTR [esi-0x11]
  4175b2:	mov    ch,0x92
  4175b4:	push   ecx
  4175b5:	lds    ecx,FWORD PTR [edi]
  4175b7:	jo     0x4175d3
  4175b9:	int    0xdc
  4175bb:	and    ch,BYTE PTR [edx+0x1fb3ae7c]
  4175c1:	cwde   
  4175c2:	shl    BYTE PTR [edx],0xad
  4175c5:	jl     0x4175eb
  4175c7:	stc    
  4175c8:	xchg   edx,eax
  4175c9:	and    eax,0xa3de6c4
  4175ce:	lds    edi,FWORD PTR [ecx+0x2d]
  4175d1:	add    DWORD PTR [esi-0x70],0xffffffec
  4175d5:	out    0x41,eax
  4175d7:	lock into 
  4175d9:	call   0xfb79:0x717615a1
  4175e0:	inc    edx
  4175e1:	push   esi
  4175e2:	mov    ds:0xef640df8,eax
  4175e7:	and    bl,ch
  4175e9:	outs   dx,BYTE PTR ds:[esi]
  4175ea:	and    DWORD PTR [ebx+edx*8-0x15fc6574],0x5b
  4175f2:	in     eax,dx
  4175f3:	nop
  4175f4:	jl     0x41763f
  4175f6:	cmp    al,0x87
  4175f8:	push   ebp
  4175f9:	or     al,0xa3
  4175fb:	ss mov esp,eax
  4175fe:	sub    eax,0xa18234b4
  417603:	rcl    BYTE PTR [ecx-0xe144de3],0x1
  41760a:	cmc    
  41760b:	pop    edx
  41760c:	iret   
  41760d:	cwde   
  41760e:	pop    ebx
  41760f:	call   0x4bcd70b9
  417614:	xchg   esp,eax
  417615:	adc    esi,esi
  417617:	dec    ebx
  417618:	ret    0xf5f
  41761b:	in     al,0x6f
  41761d:	mov    BYTE PTR [eax+esi*2],0x2f
  417621:	or     al,0x23
  417623:	and    ah,BYTE PTR [eax+ecx*1-0x45]
  417627:	mov    ecx,0xaf82e79c
  41762c:	icebp  
  41762d:	or     cl,BYTE PTR [ebp+0x6dc9e4e5]
  417633:	jp     0x41763b
  417635:	bound  ebx,QWORD PTR [edi]
  417637:	jnp    0x417637
  417639:	fimul  DWORD PTR [edi+0x1797c791]
  41763f:	je     0x417695
  417641:	aas    
  417642:	arpl   WORD PTR [edx+0x763a92d9],bx
  417648:	mov    esi,0x701422d4
  41764d:	mov    ebx,0x5898b7fb
  417652:	into   
  417653:	ja     0x41763f
  417655:	mov    dh,BYTE PTR ds:0x1389de1
  41765b:	sbb    BYTE PTR fs:[edi],0x88
  41765f:	shr    DWORD PTR [esi-0x4bc168f7],1
  417665:	sbb    al,0xa1
  417667:	stos   DWORD PTR es:[edi],eax
  417668:	outs   dx,DWORD PTR ds:[esi]
  417669:	sub    DWORD PTR [ebx+eiz*8+0x12],edx
  41766d:	cs xchg ebx,eax
  41766f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417670:	sub    BYTE PTR [edi+0x9b44ea],dl
  417676:	shl    BYTE PTR [esi-0x1d973e9c],0x33
  41767d:	ds push 0x77df17af
  417683:	sub    eax,0x47d0c3a9
  417688:	mov    esp,0xe8594e04
  41768d:	xor    BYTE PTR [ecx-0x5e2ed419],bl
  417693:	xor    eax,0xdab01196
  417698:	push   esp
  417699:	dec    edx
  41769a:	jae    0x417648
  41769c:	dec    esp
  41769d:	or     esp,esp
  41769f:	add    esp,DWORD PTR ds:0xe8497a08
  4176a5:	gs push ds
  4176a7:	aam    0x3c
  4176a9:	jmp    0x31e:0x597da99e
  4176b0:	jne    0x417714
  4176b2:	mul    BYTE PTR [ebx]
  4176b4:	mov    bl,BYTE PTR [esi-0x7d]
  4176b7:	jmp    0x6694:0x91217bf6
  4176be:	mov    edi,0x4805b30d
  4176c3:	xor    al,0xd4
  4176c5:	fucomi st,st(3)
  4176c7:	mov    ds:0xec8f8b3c,eax
  4176cc:	jns    0x41770f
  4176ce:	add    DWORD PTR [esi+0x1c],ebx
  4176d1:	out    0x68,eax
  4176d3:	mov    di,0xa182
  4176d7:	sti    
  4176d8:	inc    esp
  4176d9:	mov    ds:0xbb50e321,eax
  4176de:	mov    esp,fs
  4176e0:	fsubr  st,st(2)
  4176e2:	xlat   BYTE PTR ds:[ebx]
  4176e3:	iret   
  4176e4:	dec    ebx
  4176e5:	jp     0x417761
  4176e7:	xor    ecx,DWORD PTR [esi-0x2a3e61ab]
  4176ed:	aam    0xec
  4176ef:	daa    
  4176f0:	xchg   esp,eax
  4176f1:	and    edx,esi
  4176f3:	int3   
  4176f4:	aam    0x18
  4176f6:	xchg   edx,eax
  4176f7:	icebp  
  4176f8:	push   esp
  4176f9:	add    BYTE PTR [ebp+eiz*1-0x39ac07c0],dh
  417700:	xor    DWORD PTR [esi-0x2d],0xbd926bc6
  417707:	out    dx,al
  417708:	scas   eax,DWORD PTR es:[edi]
  417709:	push   ebx
  41770a:	jns    0x4176df
  41770c:	push   0xffffffc1
  41770e:	popf   
  41770f:	data16 mov gs,WORD PTR [edx]
  417712:	jbe    0x4176f1
  417714:	inc    BYTE PTR [edx]
  417716:	cmc    
  417717:	ss in  al,0x60
  41771a:	push   0xfffffff8
  41771c:	add    esi,ecx
  41771e:	in     eax,0xc8
  417720:	or     esp,DWORD PTR [eax-0x5c42489]
  417726:	mov    al,0xa6
  417728:	data16 jp 0x4176bf
  41772b:	xchg   BYTE PTR [ecx+0x71],dl
  41772e:	out    0xc5,al
  417730:	shr    esp,cl
  417732:	push   edi
  417733:	inc    ecx
  417734:	adc    bl,BYTE PTR [ebp-0x1e636b49]
  41773a:	fdiv   QWORD PTR [ebx+0xb13ba3b]
  417740:	and    edi,DWORD PTR [edi+0x47a81b8b]
  417746:	sub    eax,0x2d04a4c2
  41774c:	es push ss
  41774e:	push   ss
  41774f:	adc    DWORD PTR [eax+edi*2],ebx
  417752:	cmp    DWORD PTR [ebx],eax
  417754:	push   ss
  417755:	mov    ecx,eax
  417757:	and    DWORD PTR [esi+0x3b],esp
  41775a:	rol    BYTE PTR [eax],cl
  41775c:	or     eax,0x3e93a513
  417761:	outs   dx,DWORD PTR ds:[esi]
  417762:	sub    al,0x88
  417764:	jl     0x4177df
  417766:	dec    edi
  417767:	sub    ebx,DWORD PTR [ecx]
  417769:	leave  
  41776a:	cs push es
  41776c:	jbe    0x417746
  41776e:	push   esi
  41776f:	fwait
  417770:	adc    BYTE PTR ds:0x948b5859,bl
  417776:	ficom  WORD PTR [ebp+edx*2+0x64d7691d]
  41777d:	out    0x6b,al
  41777f:	cmp    DWORD PTR [ebx+0x7d3d0d38],esi
  417785:	(bad)  
  417787:	stc    
  417788:	iret   
  417789:	scas   al,BYTE PTR es:[edi]
  41778a:	sub    ch,dl
  41778c:	leave  
  41778d:	not    DWORD PTR [eax+eax*8+0x54e9f286]
  417794:	dec    eax
  417795:	popf   
  417796:	in     eax,dx
  417797:	inc    edi
  417798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417799:	cli    
  41779a:	and    BYTE PTR [ecx-0x7f],ah
  41779d:	mov    esi,0x11713593
  4177a2:	sbb    eax,0x495cfc1f
  4177a7:	retf   
  4177a8:	stos   DWORD PTR es:[edi],eax
  4177a9:	pop    ebx
  4177aa:	bound  edi,QWORD PTR [esi]
  4177ac:	lds    edx,FWORD PTR gs:[eax]
  4177af:	enter  0xbfee,0x3b
  4177b3:	push   edi
  4177b4:	mov    dl,0xe5
  4177b6:	ror    BYTE PTR [eax+0x45],cl
  4177b9:	sub    al,0x32
  4177bb:	xchg   esp,eax
  4177bc:	rol    DWORD PTR [edi+0x2f8a3cb1],0xa2
  4177c3:	and    ecx,eax
  4177c5:	sbb    eax,0x5370e1cf
  4177ca:	mov    esi,0x3c129c25
  4177cf:	or     BYTE PTR [edi],ch
  4177d1:	sbb    edi,DWORD PTR [edi]
  4177d3:	jb     0x41775e
  4177d5:	shr    ch,cl
  4177d7:	mov    eax,0x7d72bdb9
  4177dc:	fcom   st(6)
  4177de:	stos   BYTE PTR es:[edi],al
  4177df:	xchg   edi,eax
  4177e0:	mov    bl,dh
  4177e2:	dec    esi
  4177e3:	mov    es,WORD PTR [edi+eax*1+0x691aab1a]
  4177ea:	leave  
  4177eb:	sub    DWORD PTR [ecx+0x62665399],0xffffffa4
  4177f2:	xor    BYTE PTR [edi+esi*1-0x58],bh
  4177f6:	pop    ds
  4177f7:	xchg   ebp,eax
  4177f8:	xchg   edx,eax
  4177f9:	fadd   DWORD PTR [edx]
  4177fb:	and    eax,0x6bf16365
  417800:	mov    eax,ds:0x49028000
  417805:	jne    0x4177cf
  417807:	mov    bh,0x7a
  417809:	mov    bl,0xb4
  41780b:	xlat   BYTE PTR ds:[ebx]
  41780c:	mov    WORD PTR [edi+edx*8+0x18],es
  417810:	imul   edx,DWORD PTR [edi+0x4ce7a5dc],0xffffffd2
  417817:	iret   
  417818:	or     cl,bh
  41781a:	stos   DWORD PTR es:[edi],eax
  41781b:	lods   eax,DWORD PTR ds:[esi]
  41781c:	sub    al,0xee
  41781e:	ins    DWORD PTR es:[edi],dx
  41781f:	add    DWORD PTR [ecx+0x67],edx
  417822:	mov    esp,ecx
  417824:	lahf   
  417825:	add    bh,BYTE PTR [eax+0x33]
  417828:	push   ebx
  417829:	imul   esp,edx,0x4ecf15e6
  41782f:	(bad)  
  417830:	pop    esp
  417831:	xor    DWORD PTR [edi-0x74],eax
  417834:	xchg   ebp,eax
  417835:	lods   al,BYTE PTR ds:[esi]
  417836:	hlt    
  417837:	mov    DWORD PTR [edi-0x12],ebp
  41783a:	adc    DWORD PTR [eax-0x37e2874e],ecx
  417840:	cmp    cl,BYTE PTR [ebx]
  417842:	dec    edx
  417843:	mov    esi,0xddbd21c8
  417848:	out    dx,al
  417849:	fld    QWORD PTR [edx]
  41784b:	cs push ecx
  41784d:	jmp    0x417808
  41784f:	inc    edx
  417850:	lds    ecx,FWORD PTR [ebx]
  417852:	js     0x41784e
  417854:	popf   
  417855:	aam    0xd8
  417857:	dec    eax
  417858:	test   BYTE PTR [esp+ecx*4+0xd8a173a],dh
  41785f:	inc    edi
  417860:	dec    edi
  417861:	add    dh,ah
  417863:	mov    ds:0x240aa7,eax
  417868:	das    
  417869:	jne    0x41788f
  41786b:	fst    QWORD PTR [ecx]
  41786d:	outs   dx,DWORD PTR ds:[esi]
  41786e:	push   ebx
  41786f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417870:	cmp    eax,0x87bfadd2
  417875:	ja     0x417836
  417877:	lods   al,BYTE PTR ds:[esi]
  417878:	xchg   ecx,eax
  417879:	(bad)  
  41787a:	mov    ds:0xf19550b4,al
  41787f:	xchg   bh,bl
  417881:	int    0xaa
  417883:	add    DWORD PTR [ebx],ebx
  417885:	pop    edx
  417886:	add    eax,0x685eced9
  41788b:	xchg   esi,eax
  41788c:	dec    esp
  41788d:	call   0x63fc7b99
  417892:	ja     0x417867
  417894:	repz jp 0x417886
  417897:	pop    eax
  417898:	xor    eax,0x7906950e
  41789d:	sub    BYTE PTR [ebx+0x39],bl
  4178a0:	sub    BYTE PTR [eax],bl
  4178a2:	xor    al,0x2a
  4178a4:	outs   dx,DWORD PTR ds:[esi]
  4178a5:	inc    ebp
  4178a6:	xor    ebp,DWORD PTR [ecx-0x4dd6763a]
  4178ac:	adc    cl,BYTE PTR [edx]
  4178ae:	inc    eax
  4178af:	nop
  4178b0:	mov    ah,0x11
  4178b2:	jle    0x417915
  4178b4:	mul    dh
  4178b6:	data16 das 
  4178b8:	(bad)  
  4178b9:	jmp    0x417867
  4178bb:	aad    0x17
  4178bd:	dec    esp
  4178be:	lock mov edx,0xbe81897e
  4178c4:	call   DWORD PTR [esi+0x72]
  4178c7:	fs fadd st,st(2)
  4178ca:	pop    edx
  4178cb:	mov    al,ds:0xe02a3afe
  4178d0:	pushf  
  4178d1:	lea    esi,ds:0x14d79230
  4178d7:	push   ds
  4178d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178d9:	pop    edx
  4178da:	and    eax,DWORD PTR [ecx]
  4178dc:	and    DWORD PTR [eax],edi
  4178de:	lods   al,BYTE PTR ds:[si]
  4178e0:	adc    al,0x40
  4178e2:	lods   eax,DWORD PTR ds:[esi]
  4178e3:	popf   
  4178e4:	xchg   esi,eax
  4178e5:	fwait
  4178e6:	imul   ebx,DWORD PTR [ebx],0xffffffa8
  4178e9:	das    
  4178ea:	mov    ecx,0xbab693f4
  4178ef:	adc    eax,0xa76c0a41
  4178f4:	xor    ebp,DWORD PTR [ebp+0x28]
  4178f7:	(bad)  
  4178f8:	fild   WORD PTR [eax]
  4178fa:	leave  
  4178fb:	mov    al,0x17
  4178fd:	test   BYTE PTR ds:0x8f28729,al
  417903:	test   esp,eax
  417905:	push   esi
  417906:	shr    esi,cl
  417908:	push   ss
  417909:	xchg   esp,eax
  41790a:	inc    edi
  41790b:	es stos DWORD PTR es:[edi],eax
  41790d:	bound  esi,QWORD PTR [ebx+ebx*2-0x61]
  417911:	out    dx,al
  417912:	popa   
  417913:	mov    BYTE PTR [ecx+0x16c54eda],ah
  417919:	xor    al,BYTE PTR [ebx+0x56]
  41791c:	push   0x2740c9e
  417921:	push   edx
  417922:	aaa    
  417923:	push   edx
  417924:	xor    ah,BYTE PTR [esi+edi*8-0x7a]
  417928:	repnz shl DWORD PTR [ebx-0x7ea87599],1
  41792f:	gs add ebp,edi
  417932:	adc    al,0xdd
  417934:	add    eax,ebp
  417936:	aaa    
  417937:	jl     0x417970
  417939:	(bad)  
  41793a:	addr16 in al,dx
  41793c:	cmc    
  41793d:	mov    dl,0x51
  41793f:	jle    0x417995
  417941:	nop
  417942:	inc    BYTE PTR [eax+0x1c9069db]
  417948:	pop    es
  417949:	dec    esp
  41794a:	push   esi
  41794b:	mov    ch,0xe9
  41794d:	pop    eax
  41794e:	inc    eax
  41794f:	cmp    al,BYTE PTR [edi-0x2e2abf1f]
  417955:	repz and eax,0x8f16a16e
  41795b:	(bad)  
  41795c:	mov    ds:0xf480881f,eax
  417961:	add    eax,0xee4b65e3
  417966:	popf   
  417967:	stos   BYTE PTR es:[edi],al
  417968:	cli    
  417969:	sub    al,BYTE PTR [eax-0x7823b0a4]
  41796f:	and    BYTE PTR [edx],bl
  417971:	cli    
  417972:	stos   DWORD PTR es:[edi],eax
  417973:	psubusb mm7,QWORD PTR [eax]
  417976:	jmp    DWORD PTR [ecx+0x7e]
  417979:	push   ss
  41797a:	jne    0x4179a8
  41797c:	dec    eax
  41797d:	mov    DWORD PTR [ebp+0x19],edx
  417980:	xchg   edx,eax
  417981:	or     ch,BYTE PTR gs:[ebx+esi*2+0x5ebfc381]
  417989:	fsubp  st(5),st
  41798b:	or     edx,eax
  41798d:	and    bl,BYTE PTR [ebx]
  41798f:	clc    
  417990:	mov    eax,ds:0x8d007686
  417995:	pop    esi
  417996:	push   es
  417997:	daa    
  417998:	mov    al,0xfc
  41799a:	fs lock es mov dh,0x72
  41799f:	int    0x77
  4179a1:	imul   edx,DWORD PTR [edx],0xffffff9d
  4179a4:	mov    dl,0xf2
  4179a6:	out    dx,al
  4179a7:	and    DWORD PTR [edi],ebp
  4179a9:	(bad)  
  4179aa:	lock push ecx
  4179ac:	mov    edx,0xc2af2798
  4179b1:	retf   0x9da
  4179b4:	shr    DWORD PTR [edx+0x3c70737d],cl
  4179ba:	dec    eax
  4179bb:	les    ecx,FWORD PTR ds:0x34c43620
  4179c1:	fsubr  QWORD PTR [ecx]
  4179c3:	cmp    BYTE PTR [edi+0x42a76e0b],ah
  4179c9:	out    0x5d,al
  4179cb:	pop    ebp
  4179cc:	and    al,0x1d
  4179ce:	xor    eax,DWORD PTR [ebx+eiz*1]
  4179d1:	push   ecx
  4179d2:	in     al,dx
  4179d3:	inc    ecx
  4179d4:	les    edx,FWORD PTR [edi-0x249e5eda]
  4179da:	mov    al,0x8a
  4179dc:	out    dx,eax
  4179dd:	lahf   
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	sbb    cl,BYTE PTR [ebx]
  4179e1:	sbb    al,0xc7
  4179e3:	(bad)  
  4179e4:	(bad)  
  4179e5:	js     0x417a52
  4179e7:	inc    ebp
  4179e8:	inc    esi
  4179e9:	push   0x69
  4179eb:	pop    edi
  4179ec:	pop    edx
  4179ed:	shl    DWORD PTR [ebp-0x24],0x76
  4179f1:	popa   
  4179f2:	rol    DWORD PTR [edx],0xaf
  4179f5:	test   al,0x6b
  4179f7:	pop    esp
  4179f8:	inc    esp
  4179f9:	jnp    0x4179d8
  4179fb:	lock std 
  4179fd:	(bad)  
  4179fe:	enter  0xaab4,0x19
  417a02:	pushf  
  417a03:	dec    ebp
  417a04:	hlt    
  417a05:	cmp    BYTE PTR [ecx],ah
  417a07:	xor    eax,0xdfc70282
  417a0c:	fisub  DWORD PTR [edx+0x67]
  417a0f:	add    al,0x3c
  417a11:	mov    cl,0xc3
  417a13:	pop    edi
  417a14:	inc    edx
  417a15:	mov    edx,0x409953a1
  417a1a:	pop    ecx
  417a1b:	dec    edi
  417a1c:	and    DWORD PTR [esi-0x31],esp
  417a1f:	aam    0x6c
  417a21:	push   ss
  417a22:	retf   0x631b
  417a25:	rcr    DWORD PTR [ebx],1
  417a27:	mov    esi,0x19816cf4
  417a2c:	push   edi
  417a2d:	jb     0x417a42
  417a2f:	sub    bh,BYTE PTR [edx]
  417a31:	shl    ah,cl
  417a33:	cmp    cl,BYTE PTR [ebp+ebp*1+0x7aeea6ae]
  417a3a:	pop    ss
  417a3b:	mov    cl,0xbf
  417a3d:	adc    al,0x98
  417a3f:	(bad)
  417a42:	sbb    al,0x9d
  417a44:	push   ecx
  417a45:	fcomp  DWORD PTR [edx-0x1c318632]
  417a4b:	mov    al,ds:0x7ac0da7e
  417a50:	or     ecx,eax
  417a52:	addr16 aam 0xc7
  417a55:	and    DWORD PTR [eax-0x57],eax
  417a58:	push   0xc0b513bc
  417a5d:	fnsave [edx]
  417a5f:	mov    ds:0x953d798d,eax
  417a64:	cmc    
  417a65:	lock sbb ecx,DWORD PTR [ecx]
  417a68:	(bad)  
  417a69:	xchg   esp,eax
  417a6a:	aas    
  417a6b:	cmp    dh,BYTE PTR [edi-0x7]
  417a6e:	or     esp,DWORD PTR [ebx-0x29cf4228]
  417a74:	pop    ss
  417a75:	cmp    bh,dh
  417a77:	jns    0x417acd
  417a79:	test   al,0x33
  417a7b:	mov    bl,0xed
  417a7d:	daa    
  417a7e:	jg     0x417a5f
  417a80:	push   ss
  417a81:	jno    0x417ac0
  417a83:	leave  
  417a84:	xor    eax,0x6aa86177
  417a89:	sub    cl,BYTE PTR [ecx]
  417a8b:	sar    dl,cl
  417a8d:	pop    edi
  417a8e:	push   ebx
  417a8f:	(bad)  
  417a90:	cdq    
  417a91:	or     al,0xcd
  417a93:	xchg   esi,eax
  417a94:	adc    al,0x7d
  417a96:	mov    ebx,0x3779e8ee
  417a9b:	ins    BYTE PTR es:[edi],dx
  417a9c:	outs   dx,BYTE PTR ds:[esi]
  417a9d:	mov    WORD PTR [esi],ds
  417a9f:	cdq    
  417aa0:	sub    BYTE PTR [eax*4-0x3f94880],dl
  417aa7:	push   edi
  417aa8:	mov    ds:0x60e40107,eax
  417aad:	fist   DWORD PTR [esi]
  417aaf:	pop    esp
  417ab0:	adc    al,0x68
  417ab2:	or     ecx,edx
  417ab4:	loope  0x417a36
  417ab6:	sbb    DWORD PTR [esi+ebx*1-0x76877764],ebp
  417abd:	mov    edx,0xeb459ee6
  417ac2:	imul   esi,DWORD PTR [ebp-0x11],0x1e
  417ac6:	mov    ah,0x48
  417ac8:	xchg   ebp,eax
  417ac9:	mov    edi,DWORD PTR [edi-0xdeb61c1]
  417acf:	adc    eax,DWORD PTR [edi+ecx*2+0x253133fc]
  417ad6:	mov    ch,dh
  417ad8:	(bad)  
  417ad9:	or     eax,0x49ae6efa
  417ade:	cmp    al,0x91
  417ae0:	xchg   BYTE PTR [edi],ah
  417ae2:	aaa    
  417ae3:	addr16 cmp bh,dh
  417ae6:	jge    0x417b53
  417ae8:	push   ss
  417ae9:	xchg   ebx,eax
  417aea:	out    0x9f,eax
  417aec:	(bad)  
  417aee:	dec    ebx
  417aef:	xchg   esp,eax
  417af0:	pop    ebx
  417af1:	dec    edx
  417af2:	out    dx,al
  417af3:	imul   esi,DWORD PTR [edx],0x3a
  417af6:	daa    
  417af7:	inc    eax
  417af8:	scas   eax,DWORD PTR es:[edi]
  417af9:	add    eax,0xa8721eeb
  417afe:	sub    al,BYTE PTR [ebx-0x591d7f80]
  417b04:	mov    edx,0xc2239835
  417b09:	add    eax,0x847d18a2
  417b0e:	dec    ebx
  417b0f:	jecxz  0x417b37
  417b11:	pop    ds
  417b12:	push   ecx
  417b13:	pop    ebp
  417b14:	(bad)  
  417b16:	mov    al,0x5c
  417b18:	cmp    DWORD PTR [edx-0x2b],ebx
  417b1b:	test   ah,ah
  417b1d:	in     al,dx
  417b1e:	lods   al,BYTE PTR ds:[esi]
  417b1f:	push   edx
  417b20:	aaa    
  417b21:	adc    BYTE PTR [ecx+0x78],ch
  417b24:	cdq    
  417b25:	fcomi  st,st(0)
  417b27:	mov    ebp,0xd9225c80
  417b2c:	leave  
  417b2d:	cs mov edi,0x225794f7
  417b33:	jl     0x417b25
  417b35:	es mov di,0x5736
  417b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b3b:	add    ah,cl
  417b3d:	jp     0x417b3a
  417b3f:	adc    eax,0x82591e55
  417b44:	mov    ebx,0xb5a03908
  417b49:	dec    edx
  417b4a:	pop    ds
  417b4b:	in     al,dx
  417b4c:	loop   0x417b5a
  417b4e:	(bad)  
  417b4f:	fild   QWORD PTR [eax+0x14]
  417b52:	ret    
  417b53:	mov    bl,0x1f
  417b55:	out    dx,eax
  417b56:	pop    ss
  417b57:	adc    al,0x55
  417b59:	sbb    edx,esp
  417b5b:	fild   DWORD PTR [ecx-0x4e]
  417b5e:	imul   edi,DWORD PTR [esi+0x3ab88654],0x5751e149
  417b68:	call   0x9947:0x3f9778e9
  417b6f:	add    esp,ebx
  417b71:	aas    
  417b72:	fst    DWORD PTR [edi-0x36]
  417b75:	cdq    
  417b76:	dec    eax
  417b77:	inc    eax
  417b78:	sub    cl,BYTE PTR [eax+0x7e]
  417b7b:	aad    0x6f
  417b7d:	and    ecx,DWORD PTR [ecx+eiz*2-0x59]
  417b81:	fcomi  st,st(5)
  417b83:	pusha  
  417b84:	dec    ebx
  417b85:	std    
  417b86:	inc    ebx
  417b87:	mov    ebp,0x80b2d784
  417b8c:	fadd   st(7),st
  417b8e:	in     eax,dx
  417b8f:	ret    
  417b90:	mov    esi,0xa81f675
  417b95:	call   0xd7a23fbb
  417b9a:	hlt    
  417b9b:	(bad)  
  417b9c:	(bad)  
  417b9d:	test   al,0x54
  417b9f:	int3   
  417ba0:	cmp    edx,esp
  417ba2:	nop
  417ba3:	cmc    
  417ba4:	push   ss
  417ba5:	jmp    0x7ee2:0x6766cb4f
  417bac:	ss daa 
  417bae:	mov    cl,0xa1
  417bb0:	mov    ebp,0xd1c6b6e1
  417bb5:	pop    ds
  417bb6:	popf   
  417bb7:	sub    BYTE PTR [edx-0x297a051a],cl
  417bbd:	jg     0x417c15
  417bbf:	fdiv   DWORD PTR [ebx+0x69]
  417bc2:	lds    ebx,FWORD PTR [esi+0x1e]
  417bc5:	std    
  417bc6:	inc    ebp
  417bc7:	xchg   edx,eax
  417bc8:	mov    ss,edi
  417bca:	jo     0x417b61
  417bcc:	dec    ecx
  417bcd:	add    ch,BYTE PTR [edx-0x4e87f356]
  417bd3:	and    bl,BYTE PTR [esi-0x17]
  417bd6:	test   DWORD PTR [edx+0x33d8e345],edx
  417bdc:	pop    es
  417bdd:	(bad)  
  417bde:	addr16 stc 
  417be0:	gs icebp 
  417be2:	pop    eax
  417be3:	call   0xcc394d0d
  417be8:	(bad)  
  417be9:	dec    ebp
  417bea:	lods   al,BYTE PTR ds:[esi]
  417beb:	sbb    al,0x6b
  417bed:	push   eax
  417bee:	mov    ebp,0x1d44c78e
  417bf3:	push   0xffffffd6
  417bf5:	dec    edx
  417bf6:	jp     0x417c0c
  417bf8:	stos   DWORD PTR es:[edi],eax
  417bf9:	inc    ebx
  417bfa:	ds jle 0x417c5e
  417bfd:	mov    esp,0x1972fbb6
  417c02:	rol    BYTE PTR [edi-0x2f],0x76
  417c06:	ret    
  417c07:	test   dl,ah
  417c09:	lods   eax,DWORD PTR ds:[esi]
  417c0a:	jne    0x417c61
  417c0c:	bound  esi,QWORD PTR [edx+0x22f73162]
  417c12:	add    DWORD PTR [ecx+0x7],eax
  417c15:	stc    
  417c16:	mov    ecx,0x5ef3b5cd
  417c1b:	inc    edx
  417c1c:	cmp    bh,bl
  417c1e:	sub    DWORD PTR [esi+0x391711e4],0x39
  417c25:	lahf   
  417c26:	mov    ebp,esp
  417c28:	fimul  DWORD PTR [esi]
  417c2a:	cwde   
  417c2b:	ins    DWORD PTR es:[edi],dx
  417c2c:	das    
  417c2d:	je     0x417c3d
  417c2f:	mov    esi,0x9edba5ba
  417c34:	rcr    BYTE PTR [esi+esi*4],1
  417c37:	sbb    al,0xa9
  417c39:	lahf   
  417c3a:	push   ebp
  417c3b:	pop    ds
  417c3c:	sub    eax,0x66371d39
  417c41:	test   DWORD PTR ds:0x64f40bcb,0x80d57f2e
  417c4b:	outs   dx,DWORD PTR ds:[esi]
  417c4c:	clc    
  417c4d:	add    DWORD PTR [eax+0x5921fb6b],ebx
  417c53:	inc    ebp
  417c54:	icebp  
  417c55:	ror    DWORD PTR [edx],1
  417c57:	cmc    
  417c58:	pop    ss
  417c59:	or     dl,BYTE PTR [ebp-0x1e]
  417c5c:	or     DWORD PTR [esi],0xc48ee5dd
  417c62:	test   al,0x9
  417c64:	dec    esp
  417c65:	aaa    
  417c66:	test   eax,0x207ff169
  417c6b:	jle    0x417c82
  417c6d:	iret   
  417c6e:	and    DWORD PTR [ebp-0x6c6643c1],edi
  417c74:	sub    eax,0x6415db4e
  417c79:	(bad)  
  417c7a:	fist   DWORD PTR [esi+0x418c8f75]
  417c80:	jns    0x417cd0
  417c82:	inc    eax
  417c83:	aas    
  417c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c85:	les    edi,FWORD PTR ss:[esi+0x6c]
  417c89:	int3   
  417c8a:	fstp   DWORD PTR [edi-0x73]
  417c8d:	shr    ebx,1
  417c8f:	fnstcw WORD PTR [edx]
  417c91:	mov    DWORD PTR [edx-0x47adafd2],ecx
  417c97:	out    dx,eax
  417c98:	mov    ah,0x9d
  417c9a:	push   esp
  417c9b:	out    0xab,al
  417c9d:	xor    al,0x58
  417c9f:	mov    bh,0x4a
  417ca1:	push   ebp
  417ca2:	push   ebx
  417ca3:	cmp    DWORD PTR [ecx],eax
  417ca5:	push   esp
  417ca6:	mov    esp,0xd2a931eb
  417cab:	cmc    
  417cac:	mov    edx,0xd592e337
  417cb1:	arpl   sp,bp
  417cb3:	jbe    0x417c9f
  417cb5:	xchg   esi,eax
  417cb6:	ins    BYTE PTR es:[edi],dx
  417cb7:	adc    DWORD PTR [ecx],esp
  417cb9:	bnd jp 0x417c5f
  417cbc:	push   edi
  417cbd:	add    ebp,ebp
  417cbf:	leave  
  417cc0:	push   edx
  417cc1:	mov    bl,BYTE PTR [ebx]
  417cc3:	nop
  417cc4:	mov    ah,0x73
  417cc6:	aam    0x11
  417cc8:	pop    ss
  417cc9:	jne    0x417cb7
  417ccb:	fld    st(6)
  417ccd:	gs xor eax,0x5138e770
  417cd3:	or     BYTE PTR [ebx],0xe4
  417cd6:	push   ds
  417cd7:	adc    dl,bl
  417cd9:	repz add BYTE PTR [edi],al
  417cdc:	and    esp,DWORD PTR [esi+0x7e]
  417cdf:	shr    BYTE PTR [edi-0x63],0x24
  417ce3:	or     DWORD PTR [edx+ebx*8],ecx
  417ce6:	jle    0x417cef
  417ce8:	push   0x5c
  417cea:	fstp   TBYTE PTR [ebx]
  417cec:	pop    es
  417ced:	outs   dx,DWORD PTR ds:[esi]
  417cee:	sub    BYTE PTR [esi-0x4e],bl
  417cf1:	ret    0xe4bc
  417cf4:	cs add al,0x4c
  417cf7:	popa   
  417cf8:	ficom  WORD PTR [eax+0x3856ba50]
  417cfe:	inc    ebp
  417cff:	push   edi
  417d00:	aam    0x9e
  417d02:	sbb    dh,BYTE PTR [ebp+0x7]
  417d05:	mov    ss,WORD PTR [ebx+0x33]
  417d08:	xor    ah,dl
  417d0a:	mov    bl,BYTE PTR [edi+0x2a]
  417d0d:	push   cs
  417d0e:	dec    ecx
  417d0f:	pushf  
  417d10:	mov    edx,0x9be23735
  417d15:	outs   dx,BYTE PTR ds:[esi]
  417d16:	push   ss
  417d17:	xor    BYTE PTR [edx-0x59678371],al
  417d1d:	cmp    BYTE PTR [ecx+0xd],0x82
  417d21:	dec    esp
  417d22:	mov    ah,0x30
  417d24:	sub    DWORD PTR [ebp+0x70],edx
  417d27:	(bad)  
  417d28:	adc    eax,0xe5646eaf
  417d2d:	sbb    bl,BYTE PTR [edi-0x27]
  417d30:	dec    ebx
  417d31:	data16 loop 0x417d0e
  417d34:	mov    bl,0xb4
  417d36:	inc    ecx
  417d37:	fwait
  417d38:	sub    eax,0xd566c7fe
  417d3d:	jno    0x417d96
  417d3f:	inc    eax
  417d40:	lea    ebx,[ecx+ebp*1-0x43d0bc5b]
  417d47:	pop    ds
  417d48:	cmp    DWORD PTR [ebx+ebp*4+0xd],eax
  417d4c:	call   0x1421ef6b
  417d51:	in     al,0xfa
  417d53:	das    
  417d54:	or     BYTE PTR [ebx+0x59],bh
  417d57:	xchg   edx,eax
  417d58:	je     0x417d20
  417d5a:	xor    ebx,DWORD PTR [edx-0x64a02179]
  417d60:	outs   dx,DWORD PTR ds:[esi]
  417d61:	mov    ds:0x46d44e93,eax
  417d66:	stos   DWORD PTR es:[edi],eax
  417d67:	or     ah,BYTE PTR [edi]
  417d69:	test   DWORD PTR [edi+0x46bfcade],edx
  417d6f:	fmul   DWORD PTR [ecx-0x7f]
  417d72:	or     DWORD PTR ds:0xcd1e9071,esi
  417d78:	pop    ds
  417d79:	cli    
  417d7a:	push   ss
  417d7b:	stos   BYTE PTR es:[edi],al
  417d7c:	test   bl,ch
  417d7e:	sbb    DWORD PTR [edx],edx
  417d80:	rcl    ch,1
  417d82:	push   cs
  417d83:	out    dx,eax
  417d84:	cmp    al,0x2a
  417d86:	and    al,0x1a
  417d88:	push   eax
  417d89:	push   esp
  417d8a:	ss aas 
  417d8c:	int    0xb4
  417d8e:	inc    eax
  417d8f:	ds sti 
  417d91:	add    DWORD PTR [ecx-0x36f7ca81],ebp
  417d97:	mov    eax,DWORD PTR [esi+0x49]
  417d9a:	dec    ebp
  417d9b:	loop   0x417dfc
  417d9d:	lods   eax,DWORD PTR ds:[esi]
  417d9e:	dec    esp
  417d9f:	retf   
  417da0:	das    
  417da1:	outs   dx,DWORD PTR ds:[esi]
  417da2:	add    al,0x50
  417da4:	push   eax
  417da5:	pop    edx
  417da6:	mov    dh,0xa6
  417da8:	sbb    ecx,DWORD PTR [edi+ecx*2+0x11f53cb1]
  417daf:	mov    esi,0x372cfbad
  417db4:	iret   
  417db5:	(bad)  
  417db6:	out    dx,al
  417db7:	sub    eax,0x90318bc2
  417dbc:	rep stos BYTE PTR es:[edi],al
  417dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dbf:	and    DWORD PTR [edi],0xffffffe3
  417dc2:	pop    edi
  417dc3:	loope  0x417d6d
  417dc5:	mov    WORD PTR [ebp+0x4d],fs
  417dc8:	and    eax,0xadd1cad7
  417dcd:	mov    bl,0x9e
  417dcf:	inc    edx
  417dd0:	dec    esi
  417dd1:	jg     0x417e38
  417dd3:	dec    ebp
  417dd4:	mov    bl,0xf9
  417dd6:	sahf   
  417dd7:	pop    eax
  417dd8:	inc    edi
  417dd9:	mov    BYTE PTR [edi],ch
  417ddb:	pop    ecx
  417ddc:	inc    ebp
  417ddd:	pop    ecx
  417dde:	jno    0x417dd3
  417de0:	or     DWORD PTR [eax+0x5d5c9b49],esi
  417de6:	and    ch,al
  417de8:	arpl   WORD PTR [ebx],sp
  417dea:	loop   0x417e60
  417dec:	jne    0x417dd2
  417dee:	(bad)  
  417def:	int3   
  417df0:	jge    0x417e47
  417df2:	out    dx,eax
  417df3:	sbb    BYTE PTR [edx],ch
  417df5:	mov    ecx,DWORD PTR [eax+0x2e]
  417df8:	repz inc edx
  417dfa:	clc    
  417dfb:	cwde   
  417dfc:	pop    ds
  417dfd:	stos   DWORD PTR es:[edi],eax
  417dfe:	jmp    0x3ab1:0x6215517
  417e05:	fdivr  QWORD PTR [ecx+ebp*4]
  417e08:	dec    esi
  417e09:	test   eax,0x88594992
  417e0e:	inc    eax
  417e0f:	pop    esi
  417e10:	lds    ecx,FWORD PTR [eax+0x65099729]
  417e16:	lds    edi,FWORD PTR [edi]
  417e18:	push   eax
  417e19:	fidiv  WORD PTR [esi]
  417e1b:	adc    DWORD PTR [ecx],0xc6ebb338
  417e21:	mov    esp,0x61451cdc
  417e26:	xor    ch,al
  417e28:	fbstp  TBYTE PTR [edi]
  417e2a:	mov    ch,0x16
  417e2c:	dec    ebx
  417e2d:	sbb    bh,BYTE PTR [eax]
  417e2f:	(bad)  
  417e30:	dec    ecx
  417e31:	xor    bl,bl
  417e33:	test   eax,0xa8fc8c3f
  417e38:	lock lea esp,[ecx]
  417e3b:	jg     0x417dc1
  417e3d:	mov    ebp,0x8981261c
  417e42:	adc    eax,0x7e78b7ed
  417e47:	cmc    
  417e48:	pop    ecx
  417e49:	imul   esp,esi,0x93a00b42
  417e4f:	ds or  al,0x5a
  417e52:	shr    DWORD PTR [ecx],0x29
  417e55:	outs   dx,DWORD PTR ds:[esi]
  417e56:	adc    eax,0xd5ab21ea
  417e5b:	leave  
  417e5c:	clc    
  417e5d:	inc    ebx
  417e5e:	rol    BYTE PTR [eax+0x1e],1
  417e61:	sbb    edi,DWORD PTR [edx+0xf6a205]
  417e67:	xor    edx,DWORD PTR [esi+0x7cadc94c]
  417e6d:	mov    esp,0xa3aa945e
  417e72:	add    BYTE PTR [edx],dh
  417e74:	(bad)  
  417e75:	lahf   
  417e76:	outs   dx,DWORD PTR ds:[esi]
  417e77:	push   0x3f
  417e79:	je     0x417e93
  417e7b:	adc    sp,bp
  417e7e:	in     eax,dx
  417e7f:	out    dx,al
  417e80:	fadd   st,st(1)
  417e82:	xchg   ebx,eax
  417e83:	enter  0xb1eb,0xf9
  417e87:	or     dl,dh
  417e89:	adc    edx,DWORD PTR [edx-0x2da74f62]
  417e8f:	sbb    eax,0xe1ef8700
  417e94:	cs pop ds
  417e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e97:	dec    ecx
  417e98:	jns    0x417f13
  417e9a:	or     eax,0x76acd2be
  417e9f:	sbb    eax,0xb20269f7
  417ea4:	push   esp
  417ea5:	mov    ah,0xbd
  417ea7:	loop   0x417f0f
  417ea9:	or     edi,esp
  417eab:	pop    ebx
  417eac:	fucomp st(2)
  417eae:	sbb    eax,0x94e00dd5
  417eb3:	cmp    ch,cl
  417eb5:	add    eax,0x6a508ab2
  417eba:	fistp  DWORD PTR [ebp+0x5cdf41fe]
  417ec0:	add    bl,BYTE PTR [esi-0x2f]
  417ec3:	ds ins BYTE PTR es:[edi],dx
  417ec5:	repz add eax,0xbb5109e8
  417ecb:	xor    eax,0xffffff80
  417ece:	add    al,0x49
  417ed0:	mov    al,ds:0x3fd1dbb
  417ed5:	sub    BYTE PTR [esi+0x70],0x9d
  417ed9:	mov    fs,WORD PTR [esi+ebx*2]
  417edc:	and    al,0xbb
  417ede:	mov    ebp,0xefb875f5
  417ee3:	scas   al,BYTE PTR es:[edi]
  417ee4:	lods   eax,DWORD PTR ds:[esi]
  417ee5:	jg     0x417ec5
  417ee7:	int    0x63
  417ee9:	retf   
  417eea:	fisttp QWORD PTR [ebx]
  417eec:	mov    ch,0x20
  417eee:	and    BYTE PTR [eax+eiz*2],dh
  417ef1:	idiv   DWORD PTR [ebx+0x6244739c]
  417ef7:	push   ds
  417ef8:	test   eax,0xa2b80783
  417efd:	mov    BYTE PTR [edi+0x306a98d7],dl
  417f03:	gs test eax,0xb343956b
  417f09:	int    0x47
  417f0b:	cmp    esi,ebx
  417f0d:	jmp    0x8a11:0x7f8a0f08
  417f14:	cs stos DWORD PTR es:[edi],eax
  417f16:	add    DWORD PTR [eax-0x1c],esi
  417f19:	sbb    bh,al
  417f1b:	in     eax,dx
  417f1c:	add    al,BYTE PTR [eax+eiz*8-0x40906f6c]
  417f23:	sub    DWORD PTR [edi],esi
  417f25:	or     dh,ah
  417f27:	cld    
  417f28:	jnp    0x417eab
  417f2a:	in     al,0x50
  417f2c:	out    dx,al
  417f2d:	call   DWORD PTR [edi+0xa9c72e5]
  417f33:	push   ebp
  417f34:	or     DWORD PTR ds:[edx-0x1e],0x36
  417f39:	push   eax
  417f3a:	out    0x9e,eax
  417f3c:	out    0xe2,eax
  417f3e:	repnz cld 
  417f40:	ss push ebp
  417f42:	cdq    
  417f43:	mov    dh,0xf0
  417f45:	pop    ebp
  417f46:	jg     0x417ecc
  417f48:	ja     0x417ed5
  417f4a:	xchg   ecx,eax
  417f4b:	outs   dx,BYTE PTR ds:[esi]
  417f4c:	jle    0x417f65
  417f4e:	rcr    cl,cl
  417f50:	sbb    ch,dl
  417f52:	in     al,dx
  417f53:	(bad)  
  417f54:	xor    ecx,edx
  417f56:	ins    BYTE PTR es:[edi],dx
  417f57:	mov    ds:0xc574fba4,eax
  417f5c:	dec    edx
  417f5d:	mov    al,0xec
  417f5f:	aad    0xef
  417f61:	mov    ebp,0x10727173
  417f66:	mov    dl,0xd1
  417f68:	inc    DWORD PTR [eax+0x7f]
  417f6b:	mov    esi,0xeb86cdd8
  417f70:	or     eax,0xfcc11d37
  417f75:	int3   
  417f76:	cmp    DWORD PTR [edi+0x2c],ebp
  417f79:	into   
  417f7a:	jo     0x417fde
  417f7c:	push   cs
  417f7d:	gs and al,0xa7
  417f80:	ja     0x417fb1
  417f82:	call   0x945c:0x4e2edad1
  417f89:	and    al,0x6d
  417f8b:	jbe    0x417f30
  417f8d:	jb     0x417f52
  417f8f:	aas    
  417f90:	pop    ebp
  417f91:	into   
  417f92:	push   edi
  417f93:	adc    al,0x94
  417f96:	cld    
  417f97:	cmp    BYTE PTR [edi-0x3e],bh
  417f9a:	jae    0x417fff
  417f9c:	jo     0x417f88
  417f9e:	sbb    esi,DWORD PTR [esi+0x33]
  417fa1:	or     BYTE PTR [ecx+eiz*8-0x54a6989b],dl
  417fa8:	jo     0x417fcb
  417faa:	sub    BYTE PTR [edi+0x11],0x62
  417fae:	pop    es
  417faf:	and    BYTE PTR [edi+0x4c],bl
  417fb2:	pop    eax
  417fb3:	fidivr DWORD PTR ds:0xb9fb985d
  417fb9:	mov    bh,0xad
  417fbb:	adc    ebx,ebx
  417fbd:	in     al,0x72
  417fbf:	cmc    
  417fc0:	rol    edi,0x96
  417fc3:	test   edx,ebp
  417fc5:	popf   
  417fc6:	lods   eax,DWORD PTR ds:[esi]
  417fc7:	sti    
  417fc8:	add    eax,0xf441f7d
  417fcd:	out    0xc8,al
  417fcf:	in     al,0x59
  417fd1:	pop    esp
  417fd2:	ret    
  417fd3:	int    0xce
  417fd5:	sar    DWORD PTR [esi+0x6],0x42
  417fd9:	dec    edx
  417fda:	jnp    0x417fc7
  417fdc:	(bad)  
  417fde:	stos   BYTE PTR es:[edi],al
  417fdf:	or     ebx,esi
  417fe1:	xlat   BYTE PTR ds:[ebx]
  417fe2:	outs   dx,BYTE PTR ds:[esi]
  417fe3:	rol    BYTE PTR [ebp+0x320fa82d],cl
  417fe9:	sub    al,0x8a
  417feb:	call   0xd379:0x29ab9bc8
  417ff2:	push   ebp
  417ff3:	mov    eax,DWORD PTR [edx]
  417ff5:	lods   al,BYTE PTR ds:[esi]
  417ff6:	es mov bl,0x3f
  417ff9:	aaa    
  417ffa:	enter  0xe866,0xcb
  417ffe:	push   ebx
  417fff:	ret    
  418000:	jnp    0x417fb1
  418002:	test   BYTE PTR [ebx],bh
  418004:	cld    
  418005:	adc    ebx,DWORD PTR [ecx]
  418007:	adc    DWORD PTR [edx+0x396ce80e],esi
  41800d:	sbb    al,0xf1
  41800f:	add    al,0x6f
  418011:	inc    ebp
  418012:	fimul  DWORD PTR [ecx]
  418014:	mov    di,0x20cd
  418018:	jnp    0x417fcf
  41801a:	push   edi
  41801b:	jb     0x417fbc
  41801d:	jmp    0xd6609abd
  418022:	push   edx
  418023:	lock sub esi,DWORD PTR [ebx]
  418026:	jp     0x41803d
  418028:	out    dx,al
  418029:	outs   dx,DWORD PTR ds:[esi]
  41802a:	out    dx,al
  41802b:	adc    al,0x6e
  41802d:	push   0x9
  41802f:	test   BYTE PTR [ecx],ch
  418031:	in     al,dx
  418032:	int    0x65
  418034:	ror    edx,1
  418036:	loope  0x418038
  418038:	scas   eax,DWORD PTR es:[edi]
  418039:	dec    eax
  41803a:	jno    0x41801e
  41803c:	pop    ss
  41803d:	mov    cl,0x80
  41803f:	jbe    0x418075
  418041:	cmp    eax,0x408f84a1
  418046:	dec    ebx
  418047:	ret    0x9eec
  41804a:	add    al,0x1e
  41804c:	xor    eax,0x98e00924
  418051:	sbb    DWORD PTR [ebx],edi
  418053:	mov    ecx,0x9b2ff0ae
  418058:	ret    
  418059:	jnp    0x418029
  41805b:	hlt    
  41805c:	(bad)  
  41805d:	std    
  41805e:	mov    ah,0x2b
  418060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418061:	add    BYTE PTR [edi],0x89
  418064:	retf   
  418065:	sahf   
  418066:	and    DWORD PTR [edx],esp
  418068:	loop   0x418029
  41806a:	cwde   
  41806b:	icebp  
  41806c:	mov    eax,ds:0x6de027a5
  418071:	dec    esi
  418072:	test   DWORD PTR [ebp+ecx*2+0x7ff62eb3],ecx
  418079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41807a:	icebp  
  41807b:	and    ebx,edi
  41807d:	pop    esp
  41807e:	add    ecx,ecx
  418080:	dec    edx
  418081:	test   eax,0xe240a7c8
  418086:	sbb    BYTE PTR [ebx],ch
  418088:	push   ss
  418089:	test   dh,ah
  41808b:	ss je  0x41802d
  41808e:	daa    
  41808f:	mov    esp,0x3bc1405d
  418094:	stos   BYTE PTR es:[edi],al
  418095:	cmp    esi,DWORD PTR [ebp+0xc]
  418098:	adc    DWORD PTR [esi+0x62],ebx
  41809b:	add    BYTE PTR [ebp+ebp*1-0x8],ah
  41809f:	dec    edi
  4180a0:	xchg   ecx,eax
  4180a1:	xchg   ebx,eax
  4180a2:	xchg   DWORD PTR [edi+0x2],esp
  4180a5:	xchg   ebx,eax
  4180a6:	pop    ds
  4180a7:	mov    cl,0x7d
  4180a9:	outs   dx,BYTE PTR ds:[esi]
  4180aa:	push   ecx
  4180ab:	xchg   ebp,eax
  4180ac:	test   DWORD PTR [edx+0x4474421e],ecx
  4180b2:	in     eax,dx
  4180b3:	int3   
  4180b4:	popf   
  4180b5:	dec    eax
  4180b6:	das    
  4180b7:	dec    ebp
  4180b8:	push   cs
  4180b9:	mov    bl,0x83
  4180bb:	xchg   DWORD PTR [ebx-0x7a],edx
  4180be:	fistp  DWORD PTR [edx+0x69]
  4180c1:	jno    0x4180fe
  4180c3:	fistp  WORD PTR [esi]
  4180c5:	mov    esi,0x25b0f6c8
  4180ca:	sub    eax,0xdca66297
  4180cf:	in     eax,dx
  4180d0:	push   es
  4180d1:	(bad)  
  4180d2:	sar    BYTE PTR [edi+0x478adf39],0x28
  4180d9:	pop    esi
  4180da:	or     edi,DWORD PTR [eax+0x48]
  4180dd:	mov    ah,0x17
  4180df:	(bad)  
  4180e0:	pusha  
  4180e1:	icebp  
  4180e2:	add    al,0xb8
  4180e4:	retf   
  4180e5:	mov    dl,0x4
  4180e7:	mov    dl,bl
  4180e9:	fldcw  WORD PTR [edi]
  4180eb:	xchg   ebx,eax
  4180ec:	cld    
  4180ed:	mov    ds:0x6aa8c332,al
  4180f2:	mov    eax,ds:0x9169cdc
  4180f7:	jae    0x418109
  4180f9:	ins    DWORD PTR es:[edi],dx
  4180fa:	cmp    eax,0x2eb23459
  4180ff:	scas   al,BYTE PTR es:[edi]
  418100:	mov    edx,0xba20cfa8
  418105:	stos   DWORD PTR es:[edi],eax
  418106:	push   0xfffffffd
  418108:	lahf   
  418109:	ins    BYTE PTR es:[edi],dx
  41810a:	sub    edx,DWORD PTR [ecx+0x71e8e4fc]
  418110:	or     BYTE PTR [ebx],ah
  418112:	or     eax,0xd3345f18
  418117:	push   0x5f13dc62
  41811c:	or     al,0x74
  41811e:	mov    edx,0xe0fb570c
  418123:	addr16 jge 0x418175
  418126:	cmp    ecx,ebp
  418128:	stc    
  418129:	pop    DWORD PTR [esp+eiz*4-0x35591d40]
  418130:	ins    BYTE PTR es:[edi],dx
  418131:	inc    ebx
  418132:	(bad)  
  418134:	push   ss
  418135:	jl     0x4180db
  418137:	xor    eax,0x181e195f
  41813c:	fs popa 
  41813e:	push   0xffffff9c
  418140:	inc    eax
  418141:	fldenv [ecx-0x6b843075]
  418147:	test   DWORD PTR [eax+0x3c],ecx
  41814a:	adc    edi,DWORD PTR [edi-0x20]
  41814d:	(bad)  
  41814e:	(bad)  
  41814f:	faddp  st(1),st
  418151:	xor    al,0x35
  418153:	and    al,0x67
  418155:	jns    0x418186
  418157:	xor    BYTE PTR [eax-0x58],0x4a
  41815b:	mov    eax,0x9d30d769
  418160:	leave  
  418161:	xor    DWORD PTR [ecx-0x12b36960],edx
  418167:	or     BYTE PTR [edx+0x1c19a062],ah
  41816d:	div    BYTE PTR [eax]
  41816f:	ja     0x4180f1
  418171:	mov    edi,eax
  418173:	mov    dh,0xa
  418175:	lds    esi,FWORD PTR [eax]
  418177:	outs   dx,BYTE PTR ds:[esi]
  418178:	xlat   BYTE PTR ds:[ebx]
  418179:	xchg   ebx,eax
  41817a:	dec    esi
  41817b:	jp     0x4181f3
  41817d:	pop    ebp
  41817e:	pop    esi
  41817f:	mov    edx,0x88915b1c
  418184:	fsub   DWORD PTR [ecx-0x75]
  418187:	test   eax,0x87ee6940
  41818c:	mov    eax,DWORD PTR [edi]
  41818e:	xlat   BYTE PTR ds:[ebx]
  41818f:	adc    edi,eax
  418191:	ficomp WORD PTR [edx+0x1e]
  418194:	fstp   TBYTE PTR [ecx-0x5d]
  418197:	and    BYTE PTR [ebx-0x16283b72],bl
  41819d:	rcr    BYTE PTR [eax+0x26793257],0x9b
  4181a4:	or     BYTE PTR [edi+0x42],bh
  4181a7:	mov    bx,0xcf84
  4181ab:	popa   
  4181ac:	sub    dl,BYTE PTR [esi]
  4181ae:	les    edi,FWORD PTR [edx]
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	sbb    BYTE PTR ds:0xe67a0387,dh
  4181b7:	or     DWORD PTR [ecx+0xb],ecx
  4181ba:	cs jecxz 0x41813e
  4181bd:	adc    BYTE PTR [esi+0x36c355fc],al
  4181c3:	xchg   BYTE PTR [eax+0xe5a815b],bl
  4181c9:	or     BYTE PTR [eax+0x53aad504],bl
  4181cf:	push   ebx
  4181d0:	shl    ecx,0xf9
  4181d3:	outs   dx,DWORD PTR ds:[esi]
  4181d4:	in     eax,dx
  4181d5:	xchg   edi,eax
  4181d6:	and    bl,BYTE PTR [ecx+0x51]
  4181d9:	test   eax,0xb1b89ebc
  4181de:	adc    eax,0x8a89b749
  4181e3:	rol    dh,cl
  4181e5:	out    0x7c,eax
  4181e7:	ins    DWORD PTR es:[edi],dx
  4181e8:	mov    ebp,0xa43fa2e6
  4181ed:	out    0x17,al
  4181ef:	pop    ss
  4181f0:	mov    DWORD PTR [ebp-0x3ee416c],0x33e99f5b
  4181fa:	pop    ebp
  4181fb:	int3   
  4181fc:	dec    ecx
  4181fd:	sbb    esi,DWORD PTR [ebx+eax*1]
  418200:	sahf   
  418201:	dec    ebp
  418202:	test   eax,0x869b0b4b
  418207:	pop    ds
  418208:	in     al,0xe2
  41820a:	leave  
  41820b:	jae    0x418265
  41820d:	scas   al,BYTE PTR es:[edi]
  41820e:	loopne 0x41825c
  418210:	int    0xbf
  418212:	lods   eax,DWORD PTR ds:[esi]
  418213:	ins    DWORD PTR es:[edi],dx
  418214:	mov    cl,0xc
  418216:	xchg   edi,eax
  418217:	cmc    
  418218:	xor    BYTE PTR [ebp+edx*4+0x7890965c],bh
  41821f:	arpl   WORD PTR [esi+0xc],ax
  418222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418223:	nop
  418224:	sahf   
  418225:	shl    BYTE PTR [esi-0x3be24686],cl
  41822b:	jmp    0x8b24:0x2737b4db
  418232:	loope  0x41825f
  418234:	jmp    0x4181e6
  418236:	push   esi
  418237:	ret    
  418238:	dec    eax
  418239:	cmp    cl,BYTE PTR [eax+0x5b]
  41823c:	pop    edi
  41823d:	inc    esp
  41823e:	mov    al,0x14
  418240:	mov    ch,0xe8
  418242:	sbb    BYTE PTR [ebx],0x8a
  418245:	scas   al,BYTE PTR es:[edi]
  418246:	xor    al,0x48
  418248:	dec    ecx
  418249:	mov    cl,0xa3
  41824b:	pop    edi
  41824c:	xchg   ebp,eax
  41824d:	fild   WORD PTR [edx+0x5f]
  418250:	cdq    
  418251:	jne    0x4182b4
  418253:	std    
  418254:	jl     0x418232
  418256:	punpcklbw mm1,DWORD PTR [edx-0x2cfea5a8]
  41825d:	imul   edi
  41825f:	xor    cl,BYTE PTR [ebp+eax*2+0x37]
  418263:	sbb    al,BYTE PTR [edi+0x2c77eb15]
  418269:	push   ds
  41826a:	pop    edx
  41826b:	leave  
  41826c:	test   DWORD PTR [ebx],0x25f87681
  418272:	ficom  DWORD PTR [esi]
  418274:	fistp  QWORD PTR [eax+0x41]
  418277:	add    BYTE PTR [edi-0x55b430b],dl
  41827d:	out    dx,al
  41827e:	popa   
  41827f:	loope  0x4182d8
  418281:	(bad)  
  418282:	arpl   WORD PTR [edi+0x3f9d4334],di
  418288:	jp     0x4182c5
  41828a:	sbb    esi,DWORD PTR [edi+eax*8-0x30]
  41828e:	sbb    eax,0xa0baa062
  418293:	neg    DWORD PTR [eax-0x378d4131]
  418299:	pop    esi
  41829a:	les    ecx,FWORD PTR [esi+ebx*8+0x1c]
  41829e:	jge    0x4182d4
  4182a0:	or     DWORD PTR [edx+0x24f2bd2e],0x7a6bfdda
  4182aa:	cmp    al,0x9f
  4182ac:	mov    al,0x4d
  4182ae:	in     al,0x4e
  4182b0:	outs   dx,DWORD PTR ds:[esi]
  4182b1:	and    DWORD PTR [ebp+0x7c4ba848],esp
  4182b7:	cli    
  4182b8:	pop    ebx
  4182b9:	push   esp
  4182ba:	cdq    
  4182bb:	popa   
  4182bc:	cmp    al,0xe4
  4182be:	xchg   DWORD PTR ds:0xe4a0e50c,esp
  4182c4:	add    al,0xa9
  4182c6:	sbb    eax,0xf2f81595
  4182cb:	sahf   
  4182cc:	cmp    al,0x3e
  4182ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182cf:	stos   BYTE PTR es:[edi],al
  4182d0:	ret    0x9ff2
  4182d3:	jns    0x418266
  4182d5:	mov    dh,BYTE PTR [ebx+0x1330f5aa]
  4182db:	test   al,0xdb
  4182dd:	fsubrp st(0),st
  4182df:	fld    QWORD PTR [ecx-0x5]
  4182e2:	push   ecx
  4182e3:	push   es
  4182e4:	push   esp
  4182e5:	sub    DWORD PTR [ebx],0x41cb92c4
  4182eb:	nop
  4182ec:	pop    edx
  4182ed:	or     esp,DWORD PTR [edi-0x57]
  4182f0:	pop    ss
  4182f1:	mov    esi,DWORD PTR [esi-0x5c]
  4182f4:	or     al,0x2
  4182f6:	push   edx
  4182f7:	hlt    
  4182f8:	push   ebx
  4182f9:	cmp    al,dh
  4182fb:	in     al,dx
  4182fc:	cmp    eax,0x4a7911e2
  418301:	sbb    BYTE PTR [edi],0xe7
  418304:	xor    BYTE PTR [ecx+0x6d21dea9],dh
  41830a:	enter  0xf922,0x89
  41830e:	inc    ecx
  41830f:	xor    DWORD PTR [edi-0x22],eax
  418312:	mov    ebx,0xcdcf30b3
  418317:	push   ebp
  418318:	mov    esp,0x630bd0ba
  41831d:	mov    al,ds:0x33ab3fb3
  418322:	adc    DWORD PTR [esp+ebp*2+0x11],esi
  418326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418327:	dec    ebx
  418328:	(bad)  
  418329:	dec    eax
  41832a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41832b:	sub    dl,BYTE PTR [edx-0x2a9a3cb0]
  418331:	(bad)  
  418332:	xor    dh,bh
  418334:	les    edx,FWORD PTR [eax+0x62]
  418337:	sbb    DWORD PTR [edx-0x37],esi
  41833a:	push   0x29c0f62c
  41833f:	les    eax,FWORD PTR [eax]
  418341:	pop    ebp
  418342:	mov    al,ds:0x88a8e333
  418347:	popf   
  418348:	push   ds
  418349:	pop    ecx
  41834a:	jecxz  0x41833b
  41834c:	mov    esp,0x9c2737a
  418351:	sub    al,0x62
  418353:	jecxz  0x418321
  418355:	mov    ecx,0x8311f10
  41835a:	repnz mov esp,0xaac00562
  418360:	ret    0x79c0
  418363:	ins    BYTE PTR es:[edi],dx
  418364:	(bad)  [eax]
  418366:	mov    DWORD PTR [esi-0x3b9c7746],ebp
  41836c:	jo     0x4183d5
  41836e:	mov    al,ds:0xff074d49
  418373:	js     0x4183b7
  418375:	mov    ah,0xb5
  418377:	sahf   
  418378:	xchg   esi,eax
  418379:	imul   esp,DWORD PTR [edx-0x26],0xffffffbd
  41837d:	sbb    al,0x6f
  41837f:	sahf   
  418380:	jb     0x41837d
  418382:	xor    dh,BYTE PTR [eax+ebp*4+0x2d]
  418386:	add    al,0xb7
  418388:	jbe    0x418338
  41838a:	adc    bl,BYTE PTR [ebx-0x73]
  41838d:	or     DWORD PTR [edx],esi
  41838f:	lods   eax,DWORD PTR ds:[esi]
  418390:	(bad)  
  418391:	mov    bl,0x47
  418393:	loop   0x4183f8
  418395:	mov    ebp,0x993f889
  41839a:	jle    0x4183bf
  41839c:	dec    edx
  41839d:	mov    ebp,0xdf3baf3f
  4183a2:	mov    bh,BYTE PTR [edi-0x7446a32b]
  4183a8:	iret   
  4183a9:	sbb    eax,0xac7ac0bf
  4183ae:	adc    eax,0xcd238fab
  4183b3:	sahf   
  4183b4:	and    BYTE PTR [edi+0x34],bh
  4183b7:	cwde   
  4183b8:	push   ss
  4183b9:	fadd   st(1),st
  4183bb:	and    ebx,DWORD PTR [edx-0x51]
  4183be:	cmp    BYTE PTR [ebx-0x7aa62a68],bh
  4183c4:	xchg   edx,eax
  4183c5:	daa    
  4183c6:	das    
  4183c7:	int    0xf0
  4183c9:	(bad)  
  4183ca:	push   ebx
  4183cb:	adc    dl,dh
  4183cd:	fidiv  DWORD PTR [eax+0x6c]
  4183d0:	stos   BYTE PTR es:[edi],al
  4183d1:	mov    bh,0xc2
  4183d3:	retf   0xb921
  4183d6:	shl    BYTE PTR [esi+eiz*8-0x1775f5fc],0x34
  4183de:	lods   eax,DWORD PTR ds:[esi]
  4183df:	(bad)  
  4183e0:	mov    edx,0xc918062d
  4183e5:	fimul  WORD PTR [edx]
  4183e7:	jns    0x41838f
  4183e9:	ss push esp
  4183eb:	aaa    
  4183ec:	mov    ebp,0xe9081b8
  4183f1:	retf   0x7985
  4183f4:	imul   DWORD PTR ds:0x459403e2
  4183fa:	addr16 in al,dx
  4183fc:	ds jbe 0x4183fa
  4183ff:	jmp    0xdd80:0xf9f63369
  418406:	cwde   
  418407:	dec    edx
  418408:	sbb    eax,DWORD PTR [edx+ebp*8+0x3d]
  41840c:	ret    0x9d
  41840f:	fdiv   QWORD PTR [ebx]
  418411:	adc    dl,BYTE PTR [ebx-0xa]
  418414:	sahf   
  418415:	sbb    dh,BYTE PTR [ecx+edi*1-0x2c4a9bdd]
  41841c:	push   ss
  41841d:	mov    ecx,0x2e931902
  418422:	xchg   ebp,eax
  418423:	cwde   
  418424:	sbb    ah,BYTE PTR [ebx+0x4a8828dc]
  41842a:	jnp    0x4183bf
  41842c:	mov    cl,0x30
  41842e:	push   es
  41842f:	das    
  418430:	jle    0x418487
  418432:	es mov ebx,0xe4a76fad
  418438:	push   eax
  418439:	jecxz  0x41846f
  41843b:	mov    eax,ds:0xa95f5598
  418440:	or     eax,0x3a07f6a3
  418445:	outs   dx,DWORD PTR ds:[esi]
  418446:	aas    
  418447:	fcomip st,st(3)
  418449:	push   0x96bf7524
  41844e:	or     BYTE PTR [esi+0x41],bl
  418451:	test   DWORD PTR [esi],esi
  418453:	add    DWORD PTR [edi-0x48222d64],edx
  418459:	sub    BYTE PTR [eax+0x7c920f57],bh
  41845f:	add    eax,0xd8213a45
  418464:	fcom   QWORD PTR [edi+eiz*2]
  418467:	xchg   esp,eax
  418468:	push   eax
  418469:	pop    edx
  41846a:	fwait
  41846b:	and    al,BYTE PTR [esi+0x75203dd1]
  418471:	popf   
  418472:	shl    ah,0xfc
  418475:	es jnp 0x4184ce
  418478:	xlat   BYTE PTR ds:[ebx]
  418479:	popf   
  41847a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847b:	xchg   edx,eax
  41847c:	inc    eax
  41847d:	(bad)  
  41847e:	iret   
  41847f:	aas    
  418480:	dec    edx
  418481:	out    dx,al
  418482:	test   DWORD PTR [edi],ebx
  418484:	sti    
  418485:	mov    eax,ds:0x57427259
  41848a:	into   
  41848b:	sbb    al,0x99
  41848d:	sbb    DWORD PTR [esi+0x11],eax
  418490:	bound  ebp,QWORD PTR [ebx]
  418492:	add    DWORD PTR [eax],esp
  418494:	or     DWORD PTR [ebp+0x5327e0f0],edi
  41849a:	pop    esi
  41849b:	cmp    DWORD PTR [ecx+0x4449c9a5],ebp
  4184a1:	int    0x3f
  4184a3:	jp     0x4184e5
  4184a5:	inc    edx
  4184a6:	outs   dx,BYTE PTR ds:[esi]
  4184a7:	icebp  
  4184a8:	pop    esp
  4184a9:	add    BYTE PTR [ebx+edx*4-0x25bb0b0a],0xf3
  4184b1:	test   al,0x2e
  4184b3:	aam    0xba
  4184b5:	mov    ds:0x63eabc51,al
  4184ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184bb:	int    0xcf
  4184bd:	in     al,dx
  4184be:	outs   dx,DWORD PTR ds:[esi]
  4184bf:	in     al,0xbe
  4184c1:	pop    edx
  4184c2:	pop    es
  4184c3:	inc    edi
  4184c4:	and    al,0x6e
  4184c6:	div    DWORD PTR [esi]
  4184c8:	retf   
  4184c9:	scas   eax,DWORD PTR es:[edi]
  4184ca:	mov    esi,0x1ff0ba75
  4184cf:	inc    ebx
  4184d0:	(bad)  
  4184d1:	aaa    
  4184d2:	aas    
  4184d3:	inc    esp
  4184d4:	xor    eax,0x863308b0
  4184d9:	in     eax,dx
  4184da:	ret    0xf0c4
  4184dd:	int3   
  4184de:	dec    eax
  4184df:	or     DWORD PTR [esi],ebx
  4184e1:	call   0x11a9:0xa49d0ee6
  4184e8:	(bad)  
  4184e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184ea:	icebp  
  4184eb:	test   DWORD PTR [eax],edi
  4184ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184ee:	jo     0x4184dd
  4184f0:	inc    edi
  4184f1:	or     dl,al
  4184f3:	pop    edx
  4184f4:	fwait
  4184f5:	mul    BYTE PTR [eax+ebp*8-0x3f4f03b9]
  4184fc:	mov    edi,0x9423ac70
  418501:	int3   
  418502:	xor    edi,esp
  418504:	call   0xdae7:0x50379812
  41850b:	mov    ebx,0xf8343d31
  418510:	cmp    DWORD PTR [edi+ebx*8-0x1d1bb209],edi
  418517:	or     al,0x29
  418519:	sbb    eax,DWORD PTR [eax-0x730b1d08]
  41851f:	inc    eax
  418520:	xchg   ebp,eax
  418521:	call   0xc9a523ba
  418526:	ret    
  418527:	std    
  418528:	mov    esp,0x65c969a
  41852d:	outs   dx,DWORD PTR ds:[esi]
  41852e:	push   ebx
  41852f:	pop    edx
  418530:	cmp    al,BYTE PTR [ecx]
  418532:	push   es
  418533:	add    eax,0xeaccbc77
  418538:	pushf  
  418539:	cdq    
  41853a:	shr    DWORD PTR [edx],0x4c
  41853d:	cmp    BYTE PTR [eax+0x4],dl
  418540:	in     al,0x95
  418542:	jno    0x418501
  418544:	lahf   
  418545:	out    0xd4,eax
  418547:	adc    DWORD PTR [esi+eiz*8],edx
  41854a:	xchg   edx,eax
  41854b:	jno    0x4185be
  41854d:	mov    esi,0x27ad8067
  418552:	fadd   DWORD PTR [edi+ebx*1-0x3]
  418556:	sub    BYTE PTR [esi-0x652d5bfc],bh
  41855c:	repnz pop ebp
  41855e:	xchg   ebx,eax
  41855f:	push   0xffffff87
  418561:	pop    edx
  418562:	aad    0x29
  418564:	pusha  
  418565:	add    eax,0x5ee00867
  41856a:	add    DWORD PTR ds:0x8052a7f0,ecx
  418570:	inc    ecx
  418571:	xor    al,0x87
  418573:	cli    
  418574:	or     eax,DWORD PTR [edi+0x27d4f5d1]
  41857a:	pop    ebp
  41857b:	fwait
  41857c:	xchg   ebp,eax
  41857d:	fistp  QWORD PTR [esp+ebp*4]
  418580:	les    edx,FWORD PTR [eax-0x6b]
  418583:	jns    0x4185c0
  418585:	push   ss
  418586:	fidivr DWORD PTR [edx]
  418588:	ror    DWORD PTR [eax-0x26],0x59
  41858c:	push   ecx
  41858d:	inc    esp
  41858e:	sti    
  41858f:	xchg   edi,eax
  418590:	dec    ebp
  418591:	xor    eax,0x1ff21466
  418596:	neg    BYTE PTR [esi]
  418598:	adc    BYTE PTR [edx+0x552ef66a],ah
  41859e:	das    
  41859f:	sub    DWORD PTR [edx+0x54ab5253],0xf93fe1ba
  4185a9:	sub    ah,bh
  4185ab:	mov    bl,BYTE PTR [edi]
  4185ad:	cli    
  4185ae:	aas    
  4185af:	(bad)  
  4185b0:	xchg   esp,eax
  4185b1:	and    eax,0x157a8617
  4185b6:	cmp    BYTE PTR [eax-0x59],0x8f
  4185ba:	jle    0x4185ee
  4185bc:	pop    ds
  4185bd:	into   
  4185be:	adc    eax,0xe24e8d34
  4185c3:	xchg   ebx,eax
  4185c4:	adc    dl,BYTE PTR [ecx-0x22]
  4185c7:	inc    edx
  4185c8:	aad    0xf5
  4185ca:	dec    eax
  4185cb:	sub    esp,ebp
  4185cd:	xlat   BYTE PTR fs:[ebx]
  4185cf:	lahf   
  4185d0:	or     DWORD PTR [eax+esi*2-0x40db1897],ecx
  4185d7:	mov    ah,0xe7
  4185d9:	mov    ecx,0x51f453d
  4185de:	cmp    DWORD PTR [eax+0x6d],esp
  4185e1:	lea    esi,[edi+0xc]
  4185e4:	jg     0x41860d
  4185e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185e7:	popf   
  4185e8:	fadd   st,st(6)
  4185ea:	xor    ebx,esp
  4185ec:	dec    eax
  4185ed:	leave  
  4185ee:	hlt    
  4185ef:	jne    0x41865f
  4185f1:	sub    BYTE PTR ds:0xb43b14a8,dh
  4185f7:	sub    BYTE PTR [ebx+edi*2-0x7e],0x58
  4185fc:	out    dx,al
  4185fd:	jmp    0xe437:0xf31d1adb
  418604:	mov    ds,WORD PTR [eax+0x10bd351b]
  41860a:	push   fs
  41860c:	loop   0x418621
  41860e:	push   ss
  41860f:	inc    edx
  418610:	lock sahf 
  418612:	call   0x6393d571
  418617:	mov    ds:0x3759c107,al
  41861c:	push   ebx
  41861d:	das    
  41861e:	and    eax,0x87daae42
  418623:	jb     0x418666
  418625:	aam    0xb1
  418627:	jne    0x418632
  418629:	or     BYTE PTR [ebx],0x2a
  41862c:	mov    ebx,ds
  41862e:	xor    BYTE PTR [edi-0x146cf15d],al
  418634:	movntq (bad),mm7
  418635:	out    0xfc,eax
  418637:	hlt    
  418638:	hlt    
  418639:	pop    edx
  41863a:	pop    ebx
  41863b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41863c:	out    dx,eax
  41863d:	xchg   esi,eax
  41863e:	scas   al,BYTE PTR es:[edi]
  41863f:	or     cl,BYTE PTR [ecx-0x33]
  418642:	sbb    DWORD PTR [esi-0x1a8e5b03],0xf88cfdd1
  41864c:	xor    edx,DWORD PTR [esi]
  41864e:	rol    DWORD PTR [edx+0x32],0x4b
  418652:	shl    eax,1
  418654:	add    ebp,DWORD PTR ds:0x6f969f48
  41865a:	xor    BYTE PTR cs:[edx],dl
  41865d:	(bad)  
  41865e:	(bad)  
  41865f:	xor    edx,esp
  418661:	pop    esi
  418662:	mov    dh,0x17
  418664:	mov    al,BYTE PTR [edi-0x212a388d]
  41866a:	sbb    eax,DWORD PTR [esi]
  41866c:	xor    al,0xa0
  41866e:	test   BYTE PTR [esi-0x317f37d3],ch
  418674:	mov    edi,0x13b22b8
  418679:	push   edx
  41867a:	fucomp st(6)
  41867c:	jns    0x41861b
  41867e:	int    0xeb
  418680:	shr    BYTE PTR [eax+eiz*1+0x3f],1
  418684:	sbb    eax,ecx
  418686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418687:	jb     0x4186c9
  418689:	mov    eax,DWORD PTR [ecx+0x11754516]
  41868f:	adc    edx,DWORD PTR [eax]
  418691:	mov    ah,0xf6
  418693:	js     0x4186e6
  418695:	adc    edi,ecx
  418697:	enter  0xb3a,0xab
  41869b:	mov    edx,0xb37a4208
  4186a0:	ds pushf 
  4186a2:	adc    BYTE PTR [ebp-0x1a],0x2c
  4186a6:	aam    0xbf
  4186a8:	jo     0x41866f
  4186aa:	inc    ecx
  4186ab:	adc    DWORD PTR [edx+0x21],edx
  4186ae:	jecxz  0x41871b
  4186b0:	xor    al,0x9b
  4186b2:	inc    esi
  4186b3:	icebp  
  4186b4:	dec    ebp
  4186b5:	fbstp  TBYTE PTR [eax]
  4186b7:	and    ebp,ebx
  4186b9:	out    dx,al
  4186ba:	sbb    BYTE PTR [edx+0x29e21b09],al
  4186c0:	pop    ss
  4186c1:	enter  0x305a,0x7e
  4186c5:	lods   eax,DWORD PTR ds:[si]
  4186c7:	jmp    0x4a5c:0x271ababb
  4186ce:	and    BYTE PTR ds:0x680f12a9,dh
  4186d4:	mov    edx,0x34360637
  4186d9:	in     eax,0xcd
  4186db:	or     eax,DWORD PTR [edi+0x38ff7451]
  4186e1:	cs test eax,0xb6027595
  4186e7:	sub    ecx,DWORD PTR [eax+ebx*4+0x755c76ab]
  4186ee:	inc    ebx
  4186ef:	sar    bl,0x22
  4186f2:	xor    ecx,ebp
  4186f4:	push   ss
  4186f5:	rol    DWORD PTR [edx],1
  4186f7:	and    BYTE PTR fs:[edi],bl
  4186fa:	dec    BYTE PTR [eax]
  4186fc:	adc    bh,BYTE PTR [ecx+0x3c81702d]
  418702:	lea    ebx,[esi+0x14]
  418705:	mov    eax,ds:0xd98a00d5
  41870a:	out    0x12,al
  41870c:	aad    0xe1
  41870e:	std    
  41870f:	mov    ah,0x50
  418711:	xchg   ebp,eax
  418712:	mov    ecx,0xc4a60ae1
  418717:	adc    DWORD PTR [esi],ebp
  418719:	fild   QWORD PTR [ecx]
  41871b:	inc    edi
  41871c:	add    al,0x80
  41871e:	test   BYTE PTR [edi+0x33f5a5dd],ah
  418724:	mov    ebp,0x5e274722
  418729:	pushf  
  41872a:	xor    DWORD PTR [edi+0xa],edx
  41872d:	clc    
  41872e:	inc    edx
  41872f:	xor    al,0xc0
  418731:	dec    edx
  418732:	add    BYTE PTR [ebx],0xc0
  418735:	xchg   esi,eax
  418736:	sub    al,0x68
  418738:	ret    0x9663
  41873b:	test   DWORD PTR [ebp+0x584556b4],0x1751ae60
  418745:	jae    0x418772
  418747:	and    cl,ah
  418749:	sub    cl,BYTE PTR [eax+0xe]
  41874c:	push   cs
  41874d:	call   0x3014:0x25b03683
  418754:	jns    0x418723
  418756:	jg     0x418737
  418758:	xor    BYTE PTR [edx-0xe6e272d],ah
  41875e:	mov    DWORD PTR [esi+ebp*4],edi
  418761:	mov    DWORD PTR [ebx+eax*1+0x72257f61],ebx
  418768:	dec    edx
  418769:	lods   eax,DWORD PTR ds:[esi]
  41876a:	imul   ebp,DWORD PTR [ebx],0xfffffffa
  41876d:	push   cs
  41876e:	xchg   dl,bl
  418770:	and    DWORD PTR [ecx],eax
  418772:	into   
  418773:	lock or edi,DWORD PTR [ecx+0x1696d003]
  41877a:	arpl   ax,di
  41877c:	test   BYTE PTR [ebx],0xc
  41877f:	or     al,0xf1
  418781:	sar    BYTE PTR [edx-0x50],0xa
  418785:	sbb    esp,DWORD PTR [edx+0x6c506f2d]
  41878b:	mov    al,0x1c
  41878d:	rol    eax,0xa
  418790:	adc    ebp,edi
  418792:	dec    DWORD PTR [edx+0x3e19161]
  418798:	inc    edi
  418799:	mov    al,ds:0x41fc1fe3
  41879e:	ins    DWORD PTR es:[edi],dx
  41879f:	mov    DWORD PTR [eax+ebx*8],edi
  4187a2:	neg    DWORD PTR ss:[ecx]
  4187a5:	shl    BYTE PTR [edi-0x76],1
  4187a8:	les    ebx,FWORD PTR [edx+0xc04487e]
  4187ae:	mov    ah,0x67
  4187b0:	fs sbb eax,0x81f5de80
  4187b6:	push   ecx
  4187b7:	mov    ds:0x11151015,eax
  4187bc:	mov    ds:0x3764e091,eax
  4187c1:	popf   
  4187c2:	xchg   esp,eax
  4187c3:	adc    edx,DWORD PTR [eax+ebp*8-0x43f61d2b]
  4187ca:	jne    0x418770
  4187cc:	lea    ebp,[edx+0x56f5c768]
  4187d2:	mov    esi,0x3dae9e1a
  4187d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187d8:	sahf   
  4187d9:	sub    eax,0x20e881d2
  4187de:	and    DWORD PTR [ecx-0x12],ecx
  4187e1:	lock leave 
  4187e3:	out    dx,eax
  4187e4:	es mov edi,0xbe7e6dc5
  4187ea:	test   eax,0x43c89f2
  4187ef:	dec    eax
  4187f0:	mov    edx,0xa3b25d35
  4187f5:	or     dl,BYTE PTR [edi]
  4187f7:	mov    esi,0xa457a599
  4187fc:	xor    BYTE PTR ds:0x38e451a4,bh
  418802:	inc    eax
  418803:	retf   
  418804:	data16 xor ah,BYTE PTR [eax]
  418807:	(bad)  
  418809:	out    dx,eax
  41880a:	xchg   DWORD PTR [esi-0x2bd668ec],esi
  418810:	popf   
  418811:	sbb    DWORD PTR [edi],esi
  418813:	into   
  418814:	sub    DWORD PTR [esi-0x6b678c52],esp
  41881a:	lahf   
  41881b:	sbb    eax,0xac4e76c7
  418820:	xor    BYTE PTR [ecx+0x57808eb9],0xe0
  418827:	and    al,0xb4
  418829:	ins    DWORD PTR es:[edi],dx
  41882a:	sbb    edx,ebx
  41882c:	mov    edi,0x30df6eb4
  418831:	fisub  DWORD PTR [edi+0x4e]
  418834:	or     BYTE PTR [ecx+0x50],bl
  418837:	or     ecx,DWORD PTR [ecx+0x1c19cb8c]
  41883d:	retf   0x6d4a
  418840:	(bad)  
  418841:	sbb    BYTE PTR [eax+0x4a69d321],al
  418847:	xor    BYTE PTR [eax-0x3c],0x7b
  41884b:	in     eax,dx
  41884c:	sbb    BYTE PTR [esi+0xf],0x7e
  418850:	push   0xffffffa1
  418852:	loope  0x4187e3
  418854:	xchg   edi,eax
  418855:	push   ebx
  418856:	xor    al,0x28
  418858:	dec    esi
  418859:	mov    ah,0xf2
  41885b:	dec    ebp
  41885c:	jmp    ebx
  41885e:	xor    ah,BYTE PTR [edx+0x75]
  418861:	sub    BYTE PTR [ecx-0x1d],al
  418864:	push   eax
  418865:	outs   dx,BYTE PTR ds:[esi]
  418866:	daa    
  418867:	jecxz  0x41883b
  418869:	jae    0x41882a
  41886b:	ds adc eax,0xad817685
  418871:	stos   BYTE PTR es:[edi],al
  418872:	outs   dx,BYTE PTR ds:[esi]
  418873:	mov    edi,0xea7a5798
  418878:	and    DWORD PTR [edx+0x7b],ebp
  41887b:	mov    ds,WORD PTR [esi-0x73308ee0]
  418881:	cld    
  418882:	sub    bl,ch
  418884:	fwait
  418885:	std    
  418886:	push   0x76
  418888:	outs   dx,BYTE PTR ds:[esi]
  418889:	fnstcw WORD PTR [edi]
  41888b:	mov    esp,0x15c5d091
  418890:	mov    esi,0xf296273a
  418895:	and    BYTE PTR [ecx+0x57],bh
  418898:	dec    ebx
  418899:	hlt    
  41889a:	adc    ebp,0x3dc9ed23
  4188a0:	or     eax,0x39cf2702
  4188a5:	push   edx
  4188a6:	dec    edi
  4188a7:	mov    ch,0x23
  4188a9:	jo     0x4188bf
  4188ab:	scas   al,BYTE PTR es:[edi]
  4188ac:	mov    eax,DWORD PTR [ebp+0x49]
  4188af:	add    ebp,DWORD PTR [ebp+0x77]
  4188b2:	mov    dh,0x35
  4188b4:	jmp    DWORD PTR [ebp-0x48]
  4188b7:	out    0xcf,eax
  4188b9:	dec    esi
  4188ba:	jmp    0xb8732562
  4188bf:	mov    ds:0x5d22969b,eax
  4188c4:	shl    BYTE PTR [edx+0x14],cl
  4188c7:	pop    es
  4188c8:	dec    eax
  4188c9:	ror    BYTE PTR [edx],cl
  4188cb:	cmp    bh,bh
  4188cd:	loope  0x418871
  4188cf:	cmp    al,0x39
  4188d1:	mov    edi,ds
  4188d3:	adc    cl,bh
  4188d5:	fnstenv [edi]
  4188d7:	jno    0x41886b
  4188d9:	scas   al,BYTE PTR es:[edi]
  4188da:	adc    bh,0x7f
  4188dd:	lock mov ds:0x4fb9d61,eax
  4188e3:	add    BYTE PTR [ebx-0x54],dl
  4188e6:	(bad)  
  4188e7:	fwait
  4188e8:	rcl    DWORD PTR ds:0x26198e99,1
  4188ee:	loop   0x4188d9
  4188f0:	nop
  4188f1:	inc    esi
  4188f2:	mov    ds:0x3f2a47a2,eax
  4188f7:	mov    ecx,0x7b57d856
  4188fc:	dec    ecx
  4188fd:	sbb    al,0xf9
  4188ff:	repnz inc esi
  418901:	data16 (bad) 
  418903:	pop    ebx
  418904:	mov    ebp,0xa190e74e
  418909:	pusha  
  41890a:	int3   
  41890b:	adc    al,0x2e
  41890d:	retf   0xc20b
  418910:	adc    DWORD PTR [esi-0x73],eax
  418913:	in     eax,0x69
  418915:	sbb    al,0x57
  418917:	fbld   TBYTE PTR [edx+ecx*1+0x79]
  41891b:	pop    ebx
  41891c:	push   0x2fe0cbd3
  418921:	mov    edx,0x2b72ddf
  418926:	in     al,0x36
  418928:	inc    esi
  418929:	int3   
  41892a:	inc    ecx
  41892b:	cmp    DWORD PTR [ebx+ecx*8+0x78847f67],edx
  418932:	fidiv  WORD PTR ds:0x739208bf
  418938:	inc    edx
  418939:	arpl   WORD PTR [ebp-0x55],cx
  41893c:	out    0x1f,eax
  41893e:	lds    ebx,FWORD PTR [ebx-0x7e334e45]
  418944:	adc    BYTE PTR [esi-0x27],al
  418947:	ret    
  418948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418949:	adc    DWORD PTR [ecx+0x59],esi
  41894c:	fstp   DWORD PTR [ecx-0x39]
  41894f:	sbb    al,BYTE PTR [ecx+0xf9c48e0]
  418955:	(bad)  
  418956:	xchg   BYTE PTR [eax+esi*2+0x3e76ecc9],bh
  41895d:	and    ah,BYTE PTR [edx-0x8]
  418960:	inc    edx
  418961:	or     esp,DWORD PTR [edi+0x6a]
  418964:	inc    esp
  418965:	cmp    edi,DWORD PTR [ebp-0x40]
  418968:	push   edi
  418969:	jle    0x418901
  41896b:	fnstenv [edi+0x780136c1]
  418971:	mov    BYTE PTR [edx+0x47],al
  418974:	popa   
  418975:	jae    0x4189bb
  418977:	cdq    
  418978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418979:	dec    esi
  41897a:	cmp    ebx,DWORD PTR [ebx]
  41897c:	rol    eax,cl
  41897e:	cli    
  41897f:	sbb    eax,0xaab2e3b2
  418984:	inc    ebp
  418985:	jae    0x4189e7
  418987:	sbb    BYTE PTR [edx+0x41a6ca5b],cl
  41898d:	ret    0x4f29
  418990:	add    dh,cl
  418992:	xor    cl,BYTE PTR [edi-0x6e38dbe2]
  418998:	pop    eax
  418999:	cmc    
  41899a:	adc    ch,0xc8
  41899d:	xor    DWORD PTR [edx+0x7e4f0f27],0x46ab3aed
  4189a7:	mov    ebp,0x5c438200
  4189ac:	mov    ds:0x135738e1,al
  4189b1:	aam    0xbe
  4189b3:	and    al,0xa9
  4189b5:	push   ebx
  4189b6:	xchg   DWORD PTR [eax+ebp*4+0x4974554e],edx
  4189bd:	iret   
  4189be:	loope  0x418a14
  4189c0:	cs cld 
  4189c2:	mov    eax,ds:0xdf9b4800
  4189c7:	test   bl,al
  4189c9:	(bad)  
  4189ca:	sub    eax,0xeef4ab62
  4189cf:	inc    edi
  4189d0:	adc    ah,cl
  4189d2:	mov    dh,bl
  4189d4:	test   DWORD PTR [esi+0x9],edx
  4189d7:	jb     0x4189a4
  4189d9:	bsf    esp,edx
  4189dc:	aaa    
  4189dd:	(bad)  
  4189df:	mov    cl,0x3a
  4189e1:	pop    es
  4189e2:	xor    al,0x1d
  4189e4:	mov    BYTE PTR [ecx],cl
  4189e6:	pushf  
  4189e7:	xchg   DWORD PTR [edx+0x46f4212a],esi
  4189ed:	hlt    
  4189ee:	ss cli 
  4189f0:	and    eax,0xd1e55e9a
  4189f5:	jb     0x418a14
  4189f7:	xor    BYTE PTR [ebx+0x6d],cl
  4189fa:	jp     0x418a37
  4189fc:	test   al,0x72
  4189fe:	dec    eax
  4189ff:	push   ss
  418a00:	je     0x41899a
  418a02:	fcomip st,st(5)
  418a04:	sti    
  418a05:	jl     0x418a1d
  418a07:	(bad)  
  418a09:	jl     0x418a79
  418a0b:	fld    st(3)
  418a0d:	(bad)  
  418a0e:	jmp    0x4189b1
  418a10:	push   esp
  418a11:	cs adc al,0xd2
  418a14:	jae    0x418a24
  418a16:	sub    DWORD PTR [ebp-0x1],ebp
  418a19:	pushf  
  418a1a:	ficom  DWORD PTR [esp+edx*2+0x59fa9d4]
  418a21:	in     eax,dx
  418a22:	aam    0xa
  418a24:	or     al,0x18
  418a26:	mov    dh,BYTE PTR [ebx-0x48]
  418a29:	pop    esi
  418a2a:	sbb    DWORD PTR [ecx],esp
  418a2c:	jb     0x4189ed
  418a2e:	stc    
  418a2f:	fnstenv ds:[esi+0x3913e1df]
  418a36:	retf   
  418a37:	sbb    al,0xb9
  418a39:	leave  
  418a3a:	cmp    DWORD PTR [ebp+0x2c257420],0xcd04619e
  418a44:	inc    esi
  418a45:	in     al,0xa5
  418a47:	retf   
  418a48:	jmp    0x7aebe82b
  418a4d:	pushf  
  418a4e:	mov    WORD PTR [ebp-0x67],ss
  418a51:	sub    eax,0xac833538
  418a56:	cwde   
  418a57:	pusha  
  418a58:	sub    DWORD PTR [edi-0x7f],0x2
  418a5c:	pop    edi
  418a5d:	ss jae 0x4189e7
  418a60:	xor    ebp,DWORD PTR [esi+0x69a5862]
  418a66:	(bad)
  418a6a:	adc    eax,0x9da81325
  418a6f:	fwait
  418a70:	push   edi
  418a71:	pop    esp
  418a72:	dec    ebp
  418a73:	and    al,0x6d
  418a75:	and    edx,DWORD PTR [edi+0x623135d2]
  418a7b:	dec    edi
  418a7c:	dec    edx
  418a7d:	xlat   BYTE PTR ss:[ebx]
  418a7f:	xchg   edi,eax
  418a80:	and    edi,DWORD PTR [eax-0x67c25fe2]
  418a86:	mov    BYTE PTR [esi+0x9],ah
  418a89:	pop    ecx
  418a8a:	fimul  DWORD PTR [ecx]
  418a8c:	pop    ebx
  418a8d:	and    ah,bl
  418a8f:	mov    eax,ds:0x4835e14d
  418a94:	retf   0x4428
  418a97:	ror    edx,0x3a
  418a9a:	pop    eax
  418a9b:	jg     0x418ade
  418a9d:	out    dx,al
  418a9e:	sbb    BYTE PTR [esi+edi*4-0x76f71643],dl
  418aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa6:	sbb    ch,bl
  418aa8:	stos   DWORD PTR es:[edi],eax
  418aa9:	sbb    edx,edx
  418aab:	shl    BYTE PTR [ebx+ebx*2+0x6be6ced6],cl
  418ab2:	mov    ch,0xb7
  418ab4:	jecxz  0x418a90
  418ab6:	mov    ch,0x97
  418ab8:	lods   al,BYTE PTR ds:[esi]
  418ab9:	add    DWORD PTR ds:0x22992445,0xbc5a4e7e
  418ac3:	xlat   BYTE PTR ds:[ebx]
  418ac4:	mov    ds:0x15b45844,al
  418ac9:	call   0x529f:0x37287d79
  418ad0:	ins    BYTE PTR es:[edi],dx
  418ad1:	xor    al,0x57
  418ad3:	(bad)  
  418ad4:	fstp   DWORD PTR [ecx+ebp*4-0x9afc9ea]
  418adb:	ret    0xe64f
  418ade:	cmp    al,0x73
  418ae0:	lea    ebx,[esi+eax*8-0x517ac4d5]
  418ae7:	inc    esi
  418ae8:	sbb    ebp,DWORD PTR [eax]
  418aea:	jnp    0x418b30
  418aec:	jg     0x418ab6
  418aee:	(bad)  
  418aef:	les    eax,FWORD PTR [ebx-0x1d]
  418af2:	mov    esp,0x498d02f9
  418af7:	in     eax,0x37
  418af9:	pop    esp
  418afa:	sti    
  418afb:	outs   dx,DWORD PTR ds:[esi]
  418afc:	mov    al,0x3a
  418afe:	add    ch,cl
  418b00:	scas   eax,DWORD PTR es:[edi]
  418b01:	pop    ebx
  418b02:	or     DWORD PTR [ecx+0x77265849],edi
  418b08:	aas    
  418b09:	retf   0x215b
  418b0c:	sahf   
  418b0d:	in     al,dx
  418b0e:	ins    DWORD PTR es:[edi],dx
  418b0f:	mov    al,0xcf
  418b11:	in     eax,0x4a
  418b13:	ret    
  418b14:	neg    BYTE PTR [edi-0x6d897624]
  418b1a:	clc    
  418b1b:	mov    ebp,0xa89c9b82
  418b20:	cwde   
  418b21:	dec    ecx
  418b22:	jge    0x418b04
  418b24:	jmp    DWORD PTR [esi-0x66]
  418b27:	xchg   ebp,eax
  418b28:	lea    eax,[edx+0x69]
  418b2b:	not    BYTE PTR [edx+0x3]
  418b2e:	mov    edx,0xdc043baf
  418b33:	xor    DWORD PTR ds:0x77b6eed,ebp
  418b39:	fisub  DWORD PTR [ebp-0x59]
  418b3c:	cmp    DWORD PTR [eax],edx
  418b3e:	mov    esi,0x5d75f6d0
  418b43:	or     ecx,DWORD PTR [eax-0x13]
  418b46:	test   DWORD PTR [ecx],esp
  418b48:	inc    edi
  418b49:	push   0x344c9ce6
  418b4e:	enter  0x7e4b,0xc3
  418b52:	int3   
  418b53:	or     esp,DWORD PTR [edx+0x5722eae6]
  418b59:	in     eax,0x8c
  418b5b:	adc    eax,0x6b68b5c7
  418b60:	xor    ecx,DWORD PTR [ebx-0x6e]
  418b63:	sub    eax,0x3ef50c40
  418b68:	sub    ecx,ebx
  418b6a:	(bad)  
  418b6b:	pop    ds
  418b6c:	popf   
  418b6d:	ficomp DWORD PTR [ebx]
  418b6f:	sub    al,0x63
  418b71:	adc    esi,DWORD PTR [ebp+0x3061c87c]
  418b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b78:	sbb    eax,0xbee22a51
  418b7d:	lock popf 
  418b7f:	popf   
  418b80:	adc    eax,0x7c
  418b83:	push   DWORD PTR [edx+0x1c1a1be3]
  418b89:	(bad)  
  418b8b:	sbb    bh,BYTE PTR [ebx]
  418b8d:	dec    edi
  418b8e:	out    0xb4,eax
  418b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b91:	pop    ecx
  418b92:	call   0x439eaf3e
  418b97:	push   ss
  418b98:	pop    esi
  418b99:	shl    BYTE PTR [ebx+0x58],cl
  418b9c:	mov    ch,0xd6
  418b9e:	or     DWORD PTR [edx+0x1c],0x39
  418ba2:	jno    0x418b9a
  418ba4:	fstp   DWORD PTR [edi+0x2db7390f]
  418baa:	sbb    eax,0x2cf22f34
  418baf:	in     eax,dx
  418bb0:	stos   DWORD PTR es:[edi],eax
  418bb1:	and    al,BYTE PTR [eax-0x43a7849e]
  418bb7:	sbb    edx,DWORD PTR [eax]
  418bb9:	fimul  DWORD PTR [ecx-0x4f]
  418bbc:	or     BYTE PTR [esi+0x57],ch
  418bbf:	add    cl,BYTE PTR ds:0x89534ee7
  418bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc6:	adc    BYTE PTR [ebp+0x36a9738a],bl
  418bcc:	jmp    0x418c1f
  418bce:	cld    
  418bcf:	stos   BYTE PTR es:[edi],al
  418bd0:	mov    ecx,0xfe2ce9e0
  418bd5:	and    al,0xb3
  418bd7:	ins    BYTE PTR es:[edi],dx
  418bd8:	jnp    0x418c08
  418bda:	inc    edi
  418bdb:	pop    ebp
  418bdc:	dec    ecx
  418bdd:	test   BYTE PTR [edi+0x6b03f468],ah
  418be3:	mov    WORD PTR [esi-0x33373b06],fs
  418be9:	adc    BYTE PTR [ebp-0xf969679],0x7e
  418bf0:	iret   
  418bf1:	jae    0x418b9c
  418bf3:	adc    DWORD PTR [edi+ebx*8],ecx
  418bf6:	lahf   
  418bf7:	push   eax
  418bf8:	inc    eax
  418bf9:	iret   
  418bfa:	xchg   edi,eax
  418bfb:	inc    edi
  418bfc:	mov    ecx,0x59662e04
  418c01:	jno    0x418c15
  418c03:	sbb    eax,0xf314ef12
  418c08:	in     eax,dx
  418c09:	rol    DWORD PTR [edi+0x2b19270d],0xc7
  418c10:	dec    ecx
  418c11:	mov    ebx,0x31d00518
  418c16:	out    dx,eax
  418c17:	lea    edx,[edx-0x7f]
  418c1a:	jae    0x418bf1
  418c1c:	and    ebx,DWORD PTR [eax-0x1da19280]
  418c22:	mov    ebp,0xc3cf6763
  418c27:	xor    eax,0x24c5e804
  418c2c:	xchg   ebp,eax
  418c2d:	mov    edx,DWORD PTR [eax-0x42339e82]
  418c33:	jne    0x418bf6
  418c35:	push   eax
  418c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c37:	enter  0x715c,0xc5
  418c3b:	mov    ds:0x42753fd5,al
  418c40:	jns    0x418bd4
  418c42:	and    BYTE PTR [edi],ah
  418c44:	ret    
  418c45:	cdq    
  418c46:	sbb    DWORD PTR [esi],0x48962eae
  418c4c:	or     bl,BYTE PTR [edx]
  418c4e:	cmp    DWORD PTR [ecx],edi
  418c50:	clc    
  418c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c52:	iret   
  418c53:	adc    edi,DWORD PTR [edx+ecx*1-0x35c85dbf]
  418c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c5b:	push   edi
  418c5c:	fsub   QWORD PTR [ecx-0x3c]
  418c5f:	jle    0x418c7c
  418c61:	jecxz  0x418c24
  418c63:	idiv   DWORD PTR [ebx+ebx*8]
  418c66:	sahf   
  418c67:	ins    DWORD PTR es:[edi],dx
  418c68:	or     eax,0x1a5f39cb
  418c6d:	popa   
  418c6e:	push   ss
  418c6f:	hlt    
  418c70:	mov    WORD PTR [ecx],cs
  418c72:	jecxz  0x418cc5
  418c74:	fisub  WORD PTR [edi]
  418c76:	fwait
  418c77:	push   eax
  418c78:	pop    ebx
  418c79:	push   esp
  418c7a:	fcmovu st,st(2)
  418c7c:	xor    edx,ebp
  418c7e:	fwait
  418c7f:	adc    ah,BYTE PTR [ebx-0x4b]
  418c82:	and    DWORD PTR [ecx],ebp
  418c84:	fidivr DWORD PTR [edi]
  418c86:	inc    esp
  418c87:	clc    
  418c88:	xor    esi,DWORD PTR [ebx-0x5331a325]
  418c8e:	mov    bh,dh
  418c90:	out    0xce,al
  418c92:	mov    edi,0x78878674
  418c97:	pop    ecx
  418c98:	lea    edx,ds:0x31bb88eb
  418c9e:	scas   eax,DWORD PTR es:[edi]
  418c9f:	in     al,dx
  418ca0:	xchg   DWORD PTR [edi],edx
  418ca2:	lds    edi,FWORD PTR [eax+0xfa70ee7]
  418ca8:	(bad)  
  418ca9:	(bad)  
  418cab:	fld    QWORD PTR [eax+edi*1+0x7e17c12a]
  418cb2:	inc    edx
  418cb3:	ja     0x418c4e
  418cb5:	pop    ss
  418cb6:	adc    eax,0x3d78f2a0
  418cbb:	(bad)  
  418cbc:	xchg   ecx,eax
  418cbd:	cdq    
  418cbe:	loope  0x418d03
  418cc0:	xchg   edi,eax
  418cc1:	jl     0x418ca7
  418cc3:	lock retf 0x8d5
  418cc7:	imul   DWORD PTR [esp+ebx*8+0x0]
  418ccb:	arpl   WORD PTR [edi],sp
  418ccd:	fstp   QWORD PTR [ecx-0xa37c9c8]
  418cd3:	xchg   esi,eax
  418cd4:	pop    es
  418cd5:	mov    DWORD PTR ds:0xc465eddc,eax
  418cdb:	faddp  st(7),st
  418cdd:	inc    eax
  418cde:	sub    eax,0xce49bbc
  418ce3:	fistp  QWORD PTR [edi-0x47]
  418ce6:	jmp    0x418cb2
  418ce8:	pop    edx
  418ce9:	iret   
  418cea:	pusha  
  418ceb:	lock shr DWORD PTR [eax+0x48],cl
  418cef:	loope  0x418d70
  418cf1:	fsub   DWORD PTR [eax+0x3d]
  418cf4:	in     eax,dx
  418cf5:	stos   DWORD PTR es:[edi],eax
  418cf6:	push   edi
  418cf7:	xchg   ebx,eax
  418cf8:	pop    es
  418cf9:	jb     0x418d33
  418cfb:	rcr    DWORD PTR [edi-0x46],1
  418cfe:	xor    al,0xab
  418d00:	in     al,dx
  418d01:	test   al,0x7f
  418d03:	out    0xa7,al
  418d05:	outs   dx,DWORD PTR ds:[esi]
  418d06:	jb     0x418d7a
  418d08:	stc    
  418d09:	pop    ecx
  418d0a:	aaa    
  418d0b:	fisub  WORD PTR [eax+0x719a55c7]
  418d11:	(bad)  
  418d12:	in     eax,0x19
  418d14:	fwait
  418d15:	mov    WORD PTR fs:0xe040c2bd,?
  418d1c:	sbb    edi,DWORD PTR [esi]
  418d1e:	pop    esi
  418d1f:	mov    bl,0x83
  418d21:	and    DWORD PTR [edi],0xf
  418d24:	cli    
  418d25:	fbld   TBYTE PTR [ecx+0x7b4af355]
  418d2b:	mov    dh,0xb0
  418d2d:	rcl    DWORD PTR [edx+0x19d155eb],1
  418d33:	add    eax,0x24b73470
  418d38:	je     0x418d38
  418d3a:	cmp    cl,BYTE PTR [ebp-0x6a67b088]
  418d40:	jmp    0xa1f2b24
  418d45:	mov    al,ds:0x37fb1bef
  418d4a:	xor    eax,DWORD PTR [edi-0x49]
  418d4d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  418d4f:	and    eax,0xf554f81d
  418d54:	stc    
  418d55:	sub    BYTE PTR [eax-0x71],cl
  418d58:	xor    BYTE PTR [ecx],ah
  418d5a:	pop    esi
  418d5b:	je     0x418d94
  418d5d:	das    
  418d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d5f:	and    BYTE PTR [esi-0x4e],bl
  418d62:	ret    0x659c
  418d65:	scas   al,BYTE PTR es:[edi]
  418d66:	retf   
  418d67:	loop   0x418d8a
  418d69:	(bad)  [bx-0x598]
  418d6e:	in     eax,0xc6
  418d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d71:	xor    DWORD PTR [ecx],eax
  418d73:	inc    eax
  418d74:	pop    edi
  418d75:	mov    eax,0xb3815320
  418d7a:	inc    edi
  418d7b:	push   ds
  418d7c:	inc    ecx
  418d7d:	lods   eax,DWORD PTR ds:[esi]
  418d7e:	ror    DWORD PTR [ecx],cl
  418d80:	pop    esp
  418d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d82:	mov    ah,0x12
  418d84:	mov    WORD PTR [edx],es
  418d86:	fisttp WORD PTR [esi]
  418d88:	push   0x39
  418d8a:	or     al,0x9e
  418d8c:	or     eax,0x28feff51
  418d91:	xchg   edx,eax
  418d92:	fisubr WORD PTR [esi+ebx*1-0x13ddd638]
  418d99:	lods   al,BYTE PTR ds:[esi]
  418d9a:	jmp    0xe33b76ce
  418d9f:	stc    
  418da0:	outs   dx,BYTE PTR ds:[esi]
  418da1:	cld    
  418da2:	push   edx
  418da3:	jno    0x418e22
  418da5:	jg     0x418daa
  418da7:	lock mov bh,0x82
  418daa:	mov    eax,0x1e3134ac
  418daf:	adc    DWORD PTR [edi],edx
  418db1:	mov    ds:0x17b80d8d,al
  418db6:	and    edx,eax
  418db8:	mov    cl,BYTE PTR [eax+0x18]
  418dbb:	outs   dx,BYTE PTR ds:[esi]
  418dbc:	inc    eax
  418dbd:	jno    0x418da8
  418dbf:	fs gs cwde 
  418dc2:	das    
  418dc3:	push   eax
  418dc4:	xchg   ecx,eax
  418dc5:	out    0x35,eax
  418dc7:	dec    ecx
  418dc8:	test   al,0x3a
  418dca:	imul   ebx,esi,0xfedb33ec
  418dd0:	fnstenv [eax+0x404ee211]
  418dd6:	in     eax,dx
  418dd7:	xor    al,0x28
  418dd9:	test   al,0x1a
  418ddb:	rcr    BYTE PTR [eax],cl
  418ddd:	call   0x1ae6:0xbebb9829
  418de4:	inc    ebp
  418de5:	aaa    
  418de6:	add    al,BYTE PTR gs:[edx-0x4d9c9b19]
  418ded:	(bad)  
  418dee:	mov    ebp,0x5fae63f8
  418df3:	xchg   BYTE PTR [esi],al
  418df5:	ret    0x2323
  418df8:	adc    al,0x3c
  418dfa:	inc    esp
  418dfb:	cdq    
  418dfc:	sub    bl,BYTE PTR [edi+0x1d49ece]
  418e02:	pushf  
  418e03:	out    dx,al
  418e04:	cmp    ah,ch
  418e06:	dec    eax
  418e07:	aaa    
  418e08:	inc    esi
  418e09:	add    eax,0x8bf7b4e5
  418e0e:	adc    al,0xa4
  418e10:	mov    ch,0x76
  418e12:	push   cs
  418e13:	call   0x2474:0xb18b1d4b
  418e1a:	push   ecx
  418e1b:	jno    0x418e6d
  418e1d:	mov    esi,0x8e05b862
  418e22:	fadd   DWORD PTR [esi+0x4dc10c]
  418e28:	js     0x418dec
  418e2a:	jmp    0xb8e7:0x56f822f3
  418e31:	adc    dh,bh
  418e33:	or     DWORD PTR [esi-0x38],esp
  418e36:	push   0x71364211
  418e3b:	or     BYTE PTR [ebx+0x3d],dh
  418e3e:	sub    al,0x95
  418e40:	push   ds
  418e41:	rcl    cl,1
  418e43:	popa   
  418e44:	pop    ebp
  418e45:	cwde   
  418e46:	adc    al,0xc1
  418e48:	mov    eax,0x7d32c8f9
  418e4d:	lea    ebp,[ecx+0x355241ed]
  418e53:	outs   dx,BYTE PTR ds:[esi]
  418e54:	jle    0x418e34
  418e56:	push   esi
  418e57:	jnp    0x418de2
  418e59:	and    eax,0xf230674
  418e5e:	mov    esi,0xa9f3ea9c
  418e63:	pop    edx
  418e64:	or     DWORD PTR [eax+edx*8+0xb01fd4c],eax
  418e6b:	or     ch,BYTE PTR [esi+0x36426862]
  418e71:	in     eax,0x4f
  418e73:	adc    edx,DWORD PTR [esi+0x1c]
  418e76:	pushf  
  418e77:	pop    eax
  418e78:	cmp    al,0xc8
  418e7a:	mov    eax,0x9f9e9cac
  418e7f:	or     bl,ah
  418e81:	xor    cl,BYTE PTR [eax+0x165d3de1]
  418e87:	int    0x84
  418e89:	in     eax,0x8f
  418e8b:	xor    eax,DWORD PTR [edx-0x12]
  418e8e:	sub    BYTE PTR [edi+0x716ba94f],ah
  418e94:	jle    0x418e85
  418e96:	pop    ecx
  418e97:	mov    ds:0xe452bc77,al
  418e9c:	mov    dl,0x16
  418e9e:	(bad)  
  418e9f:	dec    edi
  418ea0:	push   ebp
  418ea1:	sar    BYTE PTR [ecx-0x557ca71e],1
  418ea7:	mov    edx,0x55104cf4
  418eac:	cwde   
  418ead:	mov    esp,0x3b3816c9
  418eb2:	int3   
  418eb3:	pop    edx
  418eb4:	mov    cl,0x94
  418eb6:	mov    al,0xdc
  418eb8:	jb     0x418e51
  418eba:	and    DWORD PTR [eax-0x59765e90],ebp
  418ec0:	in     eax,dx
  418ec1:	mov    esp,0x16334f17
  418ec6:	jnp    0x418e6d
  418ec8:	pushf  
  418ec9:	in     al,dx
  418eca:	cmp    DWORD PTR [edx],edi
  418ecc:	pop    ds
  418ecd:	mov    al,0xd7
  418ecf:	add    BYTE PTR [ebp-0x1a],0x9e
  418ed3:	mov    ecx,0x809dc64f
  418ed8:	into   
  418ed9:	or     DWORD PTR [eax+eiz*1-0x2a355f15],eax
  418ee0:	xchg   esi,eax
  418ee1:	pop    ds
  418ee2:	dec    ecx
  418ee3:	popf   
  418ee4:	mov    cl,0xe3
  418ee6:	dec    esi
  418ee7:	xor    DWORD PTR [ecx],esi
  418ee9:	repz ret 0xf49c
  418eed:	(bad)  
  418eee:	shl    DWORD PTR [edx],cl
  418ef0:	sahf   
  418ef1:	dec    esi
  418ef2:	fisubr WORD PTR [esi]
  418ef4:	hlt    
  418ef5:	lods   eax,DWORD PTR ds:[esi]
  418ef6:	ja     0x418ec4
  418ef8:	jae    0x418f34
  418efa:	mov    esi,0x19f83325
  418eff:	jae    0x418efa
  418f01:	xor    DWORD PTR [edi],esp
  418f03:	jnp    0x418f13
  418f05:	sub    ah,BYTE PTR [si+0x62]
  418f09:	in     eax,dx
  418f0a:	jo     0x418ea5
  418f0c:	push   es
  418f0d:	aas    
  418f0e:	std    
  418f0f:	imul   BYTE PTR [ecx+0x2fe206f0]
  418f15:	scas   eax,DWORD PTR es:[edi]
  418f16:	or     DWORD PTR [edx+0x62],ebx
  418f19:	leave  
  418f1a:	test   eax,0x15ab6028
  418f1f:	xchg   edx,eax
  418f20:	adc    edi,ecx
  418f22:	push   ebp
  418f23:	js     0x418f0a
  418f25:	fisttp QWORD PTR [eax]
  418f27:	inc    DWORD PTR [eax]
  418f29:	ss xchg esi,eax
  418f2b:	outs   dx,BYTE PTR ds:[esi]
  418f2c:	sbb    edi,DWORD PTR ds:0xbc06f1e6
  418f32:	sub    al,0x69
  418f34:	pop    esi
  418f35:	cmp    DWORD PTR es:[edi+0x4e8a764d],ebp
  418f3c:	mov    ah,BYTE PTR [ecx]
  418f3e:	adc    esi,DWORD PTR [ebp+0x17]
  418f41:	push   edx
  418f42:	sahf   
  418f43:	int    0xf8
  418f45:	cld    
  418f46:	lea    edi,[eax]
  418f48:	mov    dl,0xd6
  418f4a:	jmp    0x418f16
  418f4c:	movd   mm5,DWORD PTR [eax]
  418f4f:	cmp    al,0x22
  418f51:	mov    ebx,0xd473fbf7
  418f56:	(bad)  
  418f57:	sub    ecx,DWORD PTR [edx]
  418f59:	adc    eax,0xb84e6049
  418f5e:	sbb    bl,BYTE PTR [ebp+0x21d787d5]
  418f64:	jne    0x418f7a
  418f66:	pop    ecx
  418f67:	pop    edi
  418f68:	icebp  
  418f69:	sub    ebx,ecx
  418f6b:	jnp    0x418f1a
  418f6d:	and    dl,al
  418f6f:	rcl    BYTE PTR [ecx],1
  418f71:	xor    bl,BYTE PTR [edx]
  418f73:	lock xor eax,0xce17c177
  418f79:	cld    
  418f7a:	xchg   edi,eax
  418f7b:	push   ecx
  418f7c:	das    
  418f7d:	mov    ebp,0x63f205c5
  418f82:	dec    edx
  418f83:	enter  0x5765,0xd8
  418f87:	out    dx,al
  418f88:	mov    edi,0xe1b34b09
  418f8d:	cmc    
  418f8e:	sub    bl,BYTE PTR [esi]
  418f90:	inc    di
  418f92:	xchg   ebx,eax
  418f93:	mov    ecx,0xda8b449d
  418f98:	mov    esp,0x25ca2e6c
  418f9d:	call   0x47fe395e
  418fa2:	add    cl,BYTE PTR [ecx-0x51]
  418fa5:	pop    eax
  418fa6:	(bad)
  418fa9:	arpl   WORD PTR [ebp-0x6cbf21a1],bx
  418faf:	test   DWORD PTR [esi+eax*8],ebp
  418fb2:	jecxz  0x418fa0
  418fb4:	jbe    0x418f7f
  418fb6:	jno    0x418f67
  418fb8:	psubq  mm1,QWORD PTR ds:0x1f85adab
  418fbf:	mov    esp,gs
  418fc1:	dec    ebx
  418fc2:	mov    al,0x63
  418fc4:	(bad)  
  418fc6:	pushf  
  418fc7:	pop    edi
  418fc8:	loop   0x418ff3
  418fca:	jae    0x418fc6
  418fcc:	fisubr DWORD PTR [ebx]
  418fce:	mov    esi,0x575d8e6d
  418fd3:	enter  0x5a7c,0x71
  418fd7:	ja     0x418fc5
  418fd9:	sahf   
  418fda:	add    BYTE PTR [edi],dh
  418fdc:	stc    
  418fdd:	push   eax
  418fde:	test   eax,0xdff28598
  418fe3:	sbb    ecx,ebx
  418fe5:	mov    eax,ds:0xfc61d964
  418fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418feb:	jecxz  0x418fda
  418fed:	jmp    0xce46:0x4ff61e50
  418ff4:	(bad)  
  418ff5:	inc    DWORD PTR [edx+0x7a873dc5]
  418ffb:	mov    edi,0x58d3541a
  419000:	ret    
  419001:	jl     0x419022
  419003:	cmp    BYTE PTR [esi],ah
  419005:	in     al,0x2f
  419007:	dec    esi
  419008:	fisttp QWORD PTR [ebp-0x69c7a66b]
  41900e:	push   ss
  41900f:	mov    dl,BYTE PTR [ebx+0x5e5c8150]
  419015:	adc    dh,bl
  419017:	xlat   BYTE PTR ds:[ebx]
  419018:	je     0x418fbf
  41901a:	mov    bl,0xd
  41901c:	in     eax,0xb5
  41901e:	push   edi
  41901f:	sbb    eax,0xe6e37a98
  419024:	cmp    DWORD PTR [edx-0x63],esi
  419027:	jecxz  0x419098
  419029:	add    DWORD PTR [esi+esi*8-0x5f],edx
  41902d:	mov    dh,0xa3
  41902f:	retf   0x9687
  419032:	cmp    BYTE PTR [ebx-0x2],dl
  419035:	push   eax
  419036:	sub    ecx,esp
  419038:	imul   ebx,DWORD PTR [ecx],0xffffff83
  41903b:	dec    ebx
  41903c:	and    bh,al
  41903e:	dec    eax
  41903f:	aas    
  419040:	inc    esi
  419041:	hlt    
  419042:	sti    
  419043:	sub    al,0xb2
  419045:	pushf  
  419046:	retf   0x102c
  419049:	push   ecx
  41904a:	movsx  esi,WORD PTR [eax+0x2d393a98]
  419051:	jge    0x419018
  419053:	ja     0x418fdf
  419055:	fsubr  st,st(5)
  419057:	lock leave 
  419059:	pop    ecx
  41905a:	inc    edi
  41905b:	push   es
  41905c:	ins    DWORD PTR es:[edi],dx
  41905d:	bound  edi,QWORD PTR [eax]
  41905f:	test   bh,0xd1
  419062:	sar    DWORD PTR [esi-0x5add6773],1
  419068:	push   edx
  419069:	cwde   
  41906a:	js     0x418ff6
  41906c:	call   0x112a:0x746ab7a4
  419073:	cmp    dh,BYTE PTR [edx]
  419075:	push   ds
  419076:	cwde   
  419077:	les    ebp,FWORD PTR [ebp-0x3fe7fc66]
  41907d:	jno    0x4190c8
  41907f:	add    dh,BYTE PTR [edi-0x37d7573b]
  419085:	(bad)  
  419086:	les    ebx,FWORD PTR [ebp-0x60c36664]
  41908c:	or     ah,BYTE PTR [eax-0xf]
  41908f:	mov    ecx,0xa015c70a
  419094:	mov    dh,0xed
  419096:	ror    DWORD PTR [edx+0x31],0xd
  41909a:	dec    ecx
  41909b:	daa    
  41909c:	mov    al,ds:0x92a162fd
  4190a1:	mov    ah,dh
  4190a3:	arpl   WORD PTR [ecx],bp
  4190a5:	cmp    BYTE PTR [ecx-0x560cfd92],dl
  4190ab:	xor    eax,DWORD PTR [ebx+0x2e]
  4190ae:	sub    ah,0x9
  4190b1:	and    ah,BYTE PTR [eax-0xaaa502a]
  4190b7:	test   al,0x8d
  4190b9:	pop    ss
  4190ba:	fsub   st,st(5)
  4190bc:	scas   al,BYTE PTR es:[edi]
  4190bd:	xor    DWORD PTR [ebp-0x5],eax
  4190c0:	xlat   BYTE PTR ds:[ebx]
  4190c1:	cmp    ecx,ebx
  4190c3:	sbb    eax,0x12ab07e7
  4190c8:	daa    
  4190c9:	jg     0x4190b7
  4190cb:	scas   al,BYTE PTR es:[edi]
  4190cc:	cs push edx
  4190ce:	adc    eax,0x803c9f1d
  4190d3:	loopne 0x4190f1
  4190d5:	(bad)  
  4190d6:	call   0xd0308780
  4190db:	jb     0x419132
  4190dd:	adc    ebp,DWORD PTR [ecx]
  4190df:	and    BYTE PTR [eax+0x746e238b],bl
  4190e5:	retf   
  4190e6:	fidivr WORD PTR [edi]
  4190e8:	pop    ecx
  4190e9:	sbb    eax,0xade603a0
  4190ee:	add    al,0x5d
  4190f0:	mov    al,ds:0x5e1d9b3b
  4190f5:	js     0x419103
  4190f7:	dec    esi
  4190f8:	ins    BYTE PTR es:[edi],dx
  4190f9:	jl     0x419130
  4190fb:	adc    ebx,edi
  4190fd:	dec    edx
  4190fe:	arpl   WORD PTR [edi],dx
  419100:	fidivr DWORD PTR [ebx-0x4bd51a87]
  419106:	xor    ebp,ebp
  419108:	arpl   dx,sp
  41910a:	pop    esp
  41910b:	frstor [eax-0x60]
  41910e:	cli    
  41910f:	ja     0x419182
  419111:	aaa    
  419112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419113:	sbb    esp,DWORD PTR [ebx-0x7b1f6cb1]
  419119:	add    eax,DWORD PTR [eax]
  41911b:	bound  edi,QWORD PTR [ecx+0x6b]
  41911e:	push   edi
  41911f:	dec    ebx
  419120:	jp     0x41912a
  419122:	ds mov bh,0x23
  419125:	ror    DWORD PTR [esi+0x2072bffb],cl
  41912b:	jae    0x4190ec
  41912d:	pop    ecx
  41912e:	cli    
  41912f:	into   
  419130:	ja     0x4191b0
  419132:	push   eax
  419133:	imul   edx,ebx,0x30a5e26e
  419139:	push   ss
  41913a:	test   eax,0x196dcd82
  41913f:	dec    esp
  419140:	enter  0x7421,0xa3
  419144:	jb     0x419117
  419146:	pusha  
  419147:	fidiv  WORD PTR [esi-0x3b]
  41914a:	jb     0x4190e9
  41914c:	sbb    eax,0xee592ff4
  419151:	rcr    BYTE PTR [ecx-0x22bf902b],0x57
  419158:	scas   eax,DWORD PTR es:[edi]
  419159:	or     eax,DWORD PTR ds:0x6bc0ae89
  41915f:	add    dh,BYTE PTR [esi+0x664f0e8e]
  419165:	jmp    0x97f9:0xc5912035
  41916c:	pop    ds
  41916d:	sahf   
  41916e:	jl     0x419126
  419170:	add    eax,ebp
  419172:	ret    
  419173:	aad    0xd9
  419175:	or     al,0xe7
  419177:	fisubr DWORD PTR [edx]
  419179:	das    
  41917a:	aam    0x45
  41917c:	add    ecx,DWORD PTR [ecx]
  41917e:	rcl    DWORD PTR [eax+0x69],cl
  419181:	adc    al,BYTE PTR [eax+0x23395561]
  419187:	inc    ebp
  419188:	(bad)  
  419189:	xor    DWORD PTR [edx-0x4b],edx
  41918c:	imul   ecx,DWORD PTR [esp+ebx*4+0x6e961988],0x39965cee
  419197:	jo     0x4191c7
  419199:	push   esi
  41919a:	shl    eax,cl
  41919c:	pop    esi
  41919d:	(bad)  
  41919e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41919f:	loopne 0x4191da
  4191a1:	mov    ecx,0x1a612a5
  4191a6:	dec    ebp
  4191a7:	pop    esp
  4191a8:	inc    edx
  4191a9:	xor    eax,0xe0638d73
  4191ae:	adc    BYTE PTR [esi-0x4bc2561e],0x3e
  4191b5:	fcmovnb st,st(7)
  4191b7:	pop    eax
  4191b8:	inc    eax
  4191b9:	and    BYTE PTR [esi-0x2d0bb99],ah
  4191bf:	jno    0x419165
  4191c1:	and    DWORD PTR [edi+0x75],ebp
  4191c4:	fmul   DWORD PTR [edi-0x639df6e2]
  4191ca:	(bad)  
  4191cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191cc:	sbb    edx,ebp
  4191ce:	cwde   
  4191cf:	mov    ds:0x67b14987,al
  4191d4:	sahf   
  4191d5:	push   0xffffffa9
  4191d7:	cld    
  4191d8:	daa    
  4191d9:	xchg   DWORD PTR [edx],ebp
  4191db:	call   0x30cbfc2f
  4191e0:	ds retf 
  4191e2:	aam    0x73
  4191e4:	dec    ecx
  4191e5:	loopne 0x4191a7
  4191e7:	mov    es,WORD PTR [ebp+0x77e4c97e]
  4191ed:	xlat   BYTE PTR ds:[ebx]
  4191ee:	shl    DWORD PTR [ebp-0x71],cl
  4191f1:	push   ebp
  4191f2:	sbb    dl,BYTE PTR [ecx+0x5a8a9805]
  4191f8:	call   0xfd68:0xe384cf91
  4191ff:	and    BYTE PTR [edi+0x25],0xc
  419203:	fadd   st,st(0)
  419205:	in     al,dx
  419206:	jl     0x4191d8
  419208:	sub    al,ah
  41920a:	mov    al,0x9b
  41920c:	dec    ebx
  41920d:	jne    0x4191b5
  41920f:	mov    ebp,0x1f3955ba
  419214:	pop    ss
  419215:	jbe    0x419199
  419217:	mov    DWORD PTR [esi+esi*4+0x58],ecx
  41921b:	add    BYTE PTR [esi-0xc],dl
  41921e:	and    bh,BYTE PTR [esi]
  419220:	out    0x5e,al
  419222:	xlat   BYTE PTR ds:[ebx]
  419223:	outs   dx,DWORD PTR ds:[esi]
  419224:	lea    ebx,[eax-0x6d8622fd]
  41922a:	pop    ecx
  41922b:	adc    ebx,DWORD PTR [ecx]
  41922d:	loopne 0x419279
  41922f:	adc    dh,BYTE PTR [eax*1-0x224e9259]
  419236:	pop    esp
  419237:	push   es
  419238:	retf   
  419239:	pushf  
  41923a:	sbb    esp,ebx
  41923c:	(bad)  
  41923d:	add    DWORD PTR [eax-0x7736c8b5],ebp
  419243:	pop    esp
  419244:	call   0x8bd3aea9
  419249:	out    0x12,eax
  41924b:	adc    edi,DWORD PTR [edx+0x27]
  41924e:	mov    ds:0x6ee23d6d,al
  419253:	fs jmp 0x3b69:0xc7c587c5
  41925b:	dec    edx
  41925c:	test   al,0x3e
  41925e:	inc    esp
  41925f:	mov    esi,0x2dbfe33d
  419264:	pop    eax
  419265:	push   0x3ac09cf9
  41926a:	push   es
  41926b:	xchg   esi,eax
  41926c:	jmp    0x35aa783c
  419271:	or     eax,0xeb5c3b67
  419276:	fimul  DWORD PTR [eax+0x4a]
  419279:	cmp    BYTE PTR ds:0x98fd38b2,al
  41927f:	loop   0x4192b9
  419281:	cmp    al,0xa9
  419283:	xor    DWORD PTR [edx-0x249d56b9],ebx
  419289:	clc    
  41928a:	loopne 0x419291
  41928c:	out    0x8,al
  41928e:	mov    ds:0x9eac5408,eax
  419293:	stos   DWORD PTR es:[edi],eax
  419294:	clc    
  419295:	and    BYTE PTR [ecx],ch
  419297:	ja     0x419296
  419299:	pushf  
  41929a:	sbb    edi,DWORD PTR [ebx+0x4c]
  41929d:	mov    ebx,0xde1d282b
  4192a2:	xchg   ebx,eax
  4192a3:	sbb    BYTE PTR [edi+ebp*4-0x19],bh
  4192a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192a8:	dec    edx
  4192a9:	scas   al,BYTE PTR es:[edi]
  4192aa:	into   
  4192ab:	xchg   esp,eax
  4192ac:	cmp    ebp,edx
  4192ae:	sti    
  4192af:	sub    DWORD PTR [ebx],0x9
  4192b2:	mov    BYTE PTR [edi-0x3d],al
  4192b5:	dec    esi
  4192b6:	cmp    esp,ebp
  4192b8:	aam    0x72
  4192ba:	push   ss
  4192bb:	jl     0x4192e2
  4192bd:	icebp  
  4192be:	cwde   
  4192bf:	pop    ebx
  4192c0:	sub    al,0xc1
  4192c2:	jmp    0x41932e
  4192c4:	and    BYTE PTR [esi+0x1b],ah
  4192c7:	pop    esi
  4192c8:	sbb    ecx,DWORD PTR [esi-0x15c140a2]
  4192ce:	and    BYTE PTR [esi],ch
  4192d0:	adc    ebp,DWORD PTR [ebx]
  4192d2:	idiv   BYTE PTR [ebp+0x51083b7f]
  4192d8:	push   esp
  4192d9:	rcl    BYTE PTR [ecx+0x7],0x5e
  4192dd:	int3   
  4192de:	mov    edx,0xe2f1c53
  4192e3:	mov    bh,0x41
  4192e5:	and    ebp,DWORD PTR [ebp-0x50]
  4192e8:	mov    ecx,ecx
  4192ea:	call   0xa520:0x7a375f34
  4192f1:	jnp    0x41935b
  4192f3:	mov    edi,DWORD PTR [eax]
  4192f5:	out    dx,al
  4192f6:	mov    gs,WORD PTR [ebp+0x5b7d2b77]
  4192fc:	sub    al,bl
  4192fe:	pop    ss
  4192ff:	lods   eax,DWORD PTR ds:[esi]
  419300:	retf   0xd1a2
  419303:	inc    edi
  419304:	fwait
  419305:	jl     0x419330
  419307:	dec    ebx
  419308:	mov    al,0x1d
  41930a:	sahf   
  41930b:	adc    ecx,DWORD PTR [ebp+0x7b]
  41930e:	test   al,0xe0
  419310:	dec    ecx
  419311:	pop    ebp
  419312:	add    al,0x8d
  419314:	cmp    al,BYTE PTR [edx-0x37]
  419317:	and    bh,dl
  419319:	fs pop es
  41931b:	retf   
  41931c:	jg     0x4192b3
  41931e:	div    DWORD PTR [ebx]
  419320:	out    dx,al
  419321:	test   eax,0x8e1abd6a
  419326:	out    0x8c,al
  419328:	stc    
  419329:	and    DWORD PTR [ebx-0x33],0xd5371340
  419330:	call   0x78a9:0xefeb8cf0
  419337:	int    0x39
  419339:	das    
  41933a:	jmp    DWORD PTR [edi-0x7dccb661]
  419340:	sbb    DWORD PTR [ebp+0x5b799cc7],ebp
  419346:	cmp    ebx,ebx
  419348:	fsub   st,st(3)
  41934a:	lods   eax,DWORD PTR ds:[esi]
  41934b:	jae    0x41931f
  41934d:	dec    edx
  41934e:	xor    al,0x8e
  419350:	adc    al,0x83
  419352:	or     ecx,DWORD PTR ds:[ebp-0x14f8ba4e]
  419359:	cmp    dh,al
  41935b:	repz sbb ebp,esp
  41935e:	xchg   esp,eax
  41935f:	dec    ecx
  419360:	jmp    0x770a:0x17e14238
  419367:	pop    es
  419368:	adc    BYTE PTR [edx],bl
  41936a:	(bad)  
  41936c:	push   es
  41936d:	cmp    al,cl
  41936f:	call   FWORD PTR [ebp-0x37f4e874]
  419375:	sbb    al,al
  419377:	push   esi
  419378:	jmp    0x419385
  41937a:	ret    
  41937b:	lea    ebp,[edx-0x7e]
  41937e:	adc    eax,0x8f4a31cc
  419383:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419385:	loopne 0x4193b8
  419387:	test   eax,0x43a80177
  41938c:	das    
  41938d:	sahf   
  41938e:	(bad)  [edx+0x18]
  419391:	cld    
  419392:	jnp    0x41937d
  419394:	js     0x41933d
  419396:	retf   
  419397:	sbb    bh,cl
  419399:	push   esi
  41939a:	sbb    ecx,eax
  41939c:	cmp    al,0x50
  41939e:	push   ebx
  41939f:	sbb    eax,0x43f192b4
  4193a4:	xchg   ebp,edx
  4193a6:	add    ebp,DWORD PTR [ebx+0x66975630]
  4193ac:	xchg   edx,eax
  4193ad:	push   ebx
  4193ae:	push   ecx
  4193af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193b0:	daa    
  4193b1:	stos   DWORD PTR es:[edi],eax
  4193b2:	iret   
  4193b3:	lds    esi,FWORD PTR [edi+ebx*1]
  4193b6:	(bad)  
  4193b7:	and    BYTE PTR [eax-0x33525ffe],ch
  4193bd:	out    dx,eax
  4193be:	aaa    
  4193bf:	daa    
  4193c0:	xor    eax,0x4a252000
  4193c5:	cdq    
  4193c6:	dec    edi
  4193c7:	int    0x3c
  4193c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ca:	and    al,0xdb
  4193cc:	add    ecx,DWORD PTR [esi-0x1786403b]
  4193d2:	sti    
  4193d3:	xor    BYTE PTR [ebx],dl
  4193d5:	cmpps  xmm3,XMMWORD PTR [esi+0x5a98eb3d],0xd3
  4193dd:	adc    DWORD PTR [esi],ebx
  4193df:	mov    ch,0x7f
  4193e1:	into   
  4193e2:	add    esp,DWORD PTR [edi-0x179e0b96]
  4193e8:	aas    
  4193e9:	fucomip st,st(5)
  4193eb:	ret    
  4193ec:	pop    eax
  4193ed:	loope  0x4193f9
  4193ef:	pop    DWORD PTR [edx-0x47a6f455]
  4193f5:	and    DWORD PTR [ebx],0xfffffff5
  4193f8:	in     al,0x16
  4193fa:	xlat   BYTE PTR ds:[ebx]
  4193fb:	pushf  
  4193fc:	dec    eax
  4193fd:	dec    ecx
  4193fe:	xlat   BYTE PTR ds:[ebx]
  4193ff:	(bad)  
  419400:	jmp    0xb7cf:0x36afe1ca
  419407:	adc    al,0xd4
  419409:	inc    ebp
  41940a:	pop    es
  41940b:	call   0x225f:0xcf924f24
  419412:	fstp   DWORD PTR [edx+0x7f]
  419415:	xchg   ecx,eax
  419416:	cmp    DWORD PTR [esi],ecx
  419418:	test   BYTE PTR [ebp+0x35],bl
  41941b:	and    ecx,DWORD PTR [ecx+0x313b96a6]
  419421:	lea    ebp,cs:[eax]
  419424:	xor    esi,DWORD PTR [ebx+0x63616fc]
  41942a:	out    0x10,al
  41942c:	je     0x41941a
  41942e:	les    edx,FWORD PTR [edx+0x10]
  419431:	pusha  
  419432:	sbb    esi,DWORD PTR [eax-0x77]
  419435:	mov    BYTE PTR [ecx],dh
  419437:	mov    ecx,edi
  419439:	jge    0x419439
  41943b:	fdiv   QWORD PTR [ebp-0x80]
  41943e:	mov    ebp,0xf1a335a
  419443:	shr    DWORD PTR [ecx-0x19],cl
  419446:	test   BYTE PTR [edi-0x7b],dh
  419449:	inc    edx
  41944a:	les    esp,FWORD PTR [eax+0x365659f7]
  419450:	jmp    0x419496
  419452:	jae    0x41948b
  419454:	mov    esp,?
  419456:	cli    
  419457:	sar    DWORD PTR [esi],1
  419459:	add    cl,BYTE PTR [edi]
  41945b:	in     al,dx
  41945c:	fimul  DWORD PTR [edi+0x7d]
  41945f:	out    0xff,eax
  419461:	retf   0xab8c
  419464:	xor    DWORD PTR [edi+ebp*2-0x18820bda],edx
  41946b:	mov    cl,0xfa
  41946d:	xor    al,0xd4
  41946f:	cli    
  419470:	adc    DWORD PTR [eax+0x1d6f5abe],eax
  419476:	and    DWORD PTR [ebp+0x5cd26db4],ebp
  41947c:	and    eax,DWORD PTR [ebx-0x40]
  41947f:	aas    
  419480:	push   ds
  419481:	bound  esi,QWORD PTR [ecx+0x50df3889]
  419487:	mov    ds:0x77d6a1f1,al
  41948c:	lahf   
  41948d:	mov    cl,0xcd
  41948f:	ret    
  419490:	push   ebx
  419491:	popf   
  419492:	lock mov bh,0x96
  419495:	jbe    0x419491
  419497:	sahf   
  419498:	xor    eax,0xce0fcd6e
  41949d:	das    
  41949e:	jno    0x4194bf
  4194a0:	popa   
  4194a1:	call   0x956c:0xc5bdd892
  4194a8:	inc    ecx
  4194a9:	dec    edi
  4194aa:	mov    edi,0x30993113
  4194af:	jecxz  0x4194e6
  4194b1:	arpl   WORD PTR [eax-0x56],dx
  4194b4:	cmp    edi,DWORD PTR [edx+0x6f]
  4194b7:	sbb    DWORD PTR [edx-0xc],0xffffff88
  4194bb:	mov    ebx,0xf24e712c
  4194c0:	mov    DWORD PTR [eax-0x7a],edi
  4194c3:	and    ch,BYTE PTR [ebx-0x70]
  4194c6:	jae    0x41950f
  4194c8:	xor    BYTE PTR [ebx-0x3c],bh
  4194cb:	in     al,dx
  4194cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194cd:	sar    DWORD PTR [ebp+0x5d],cl
  4194d0:	cmp    eax,0x2b76474d
  4194d5:	or     ebp,DWORD PTR [ebx]
  4194d7:	out    0xf2,al
  4194d9:	cmp    bh,BYTE PTR [edx+0x5f]
  4194dc:	adc    al,0x1
  4194de:	pop    edi
  4194df:	pop    esi
  4194e0:	test   eax,0x36ee0219
  4194e5:	cmp    cl,BYTE PTR fs:[ecx-0xbb12471]
  4194ec:	adc    bh,bl
  4194ee:	add    al,BYTE PTR ds:0x3d1b7a16
  4194f4:	cld    
  4194f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f6:	fcmovnb st,st(5)
  4194f8:	inc    esi
  4194f9:	and    cl,bl
  4194fb:	and    DWORD PTR [esi+0x15],eax
  4194fe:	ror    DWORD PTR [esi+0x25],cl
  419501:	xor    al,0x5e
  419503:	push   edi
  419504:	pmulhw mm1,QWORD PTR [esi-0x350d6801]
  41950b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41950c:	or     eax,0xa1b839dd
  419511:	add    al,0x9
  419513:	mov    ah,BYTE PTR [edx+0x1]
  419516:	xlat   BYTE PTR ds:[ebx]
  419517:	jae    0x4194af
  419519:	mov    ch,0xa6
  41951b:	jmp    0xa9a1:0xb5c02914
  419522:	mov    al,0x3f
  419524:	in     eax,0x64
  419526:	cmp    DWORD PTR [esi],esi
  419528:	lea    ebx,[ecx-0x15b138cd]
  41952e:	ret    0x2fe5
  419531:	sub    al,0x48
  419533:	cs imul ebx,esi,0x550677af
  41953a:	xlat   BYTE PTR ds:[ebx]
  41953b:	cmp    dl,bl
  41953d:	jnp    0x4194cd
  41953f:	inc    esi
  419540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419541:	mov    eax,?
  419543:	mov    ch,BYTE PTR [esi+0xfed9df6]
  419549:	enter  0x941d,0xf4
  41954d:	inc    ebx
  41954e:	ret    0x6094
  419551:	stos   DWORD PTR es:[edi],eax
  419552:	dec    edi
  419553:	outs   dx,DWORD PTR ds:[esi]
  419554:	push   0x4b4ff661
  419559:	inc    ebx
  41955a:	call   0xc72b8400
  41955f:	mov    dl,0x89
  419561:	push   edi
  419562:	dec    esp
  419563:	add    eax,0x972b510e
  419568:	gs test al,0x72
  41956b:	cmp    al,0xc8
  41956d:	push   0xa2eae9db
  419572:	repz and BYTE PTR [ebx],dh
  419575:	sbb    eax,0x416cb3e2
  41957a:	ror    BYTE PTR [edx-0x30],1
  41957d:	mov    ecx,0xaa6a9bde
  419582:	fmul   st(3),st
  419584:	sub    DWORD PTR [ebx-0x67],ecx
  419587:	lea    edi,[ebp+0x432f1ae5]
  41958d:	(bad)  
  41958f:	fdiv   QWORD PTR [esi+0x23]
  419592:	leave  
  419593:	and    al,0xa0
  419595:	outs   dx,DWORD PTR ds:[esi]
  419596:	iret   
  419597:	mov    bh,0x75
  419599:	mov    cl,BYTE PTR [ecx]
  41959b:	ret    
  41959c:	or     al,0xbd
  41959e:	xor    eax,0x875b1127
  4195a3:	in     al,0x10
  4195a5:	jp     0x41960c
  4195a7:	aas    
  4195a8:	sub    ecx,DWORD PTR [ebp-0x68209cf8]
  4195ae:	pusha  
  4195af:	pushw  ss
  4195b1:	sbb    eax,0x34f3e8a5
  4195b6:	ins    DWORD PTR es:[edi],dx
  4195b7:	imul   DWORD PTR [esi]
  4195b9:	dec    esp
  4195ba:	mov    ch,BYTE PTR [ecx+0x44]
  4195bd:	sub    al,0x94
  4195bf:	lods   al,BYTE PTR ds:[esi]
  4195c0:	jo     0x419635
  4195c2:	test   al,0x6f
  4195c4:	add    edx,DWORD PTR [ebx]
  4195c6:	repnz cmc 
  4195c8:	(bad)  
  4195c9:	pop    ebp
  4195ca:	mov    ch,0xb6
  4195cc:	push   cs
  4195cd:	mov    dh,0x4e
  4195cf:	pop    ebp
  4195d0:	pusha  
  4195d1:	mul    bl
  4195d3:	xor    al,0xe8
  4195d5:	std    
  4195d6:	scas   eax,DWORD PTR es:[edi]
  4195d7:	sbb    BYTE PTR [edi-0x17580076],bh
  4195dd:	sbb    bh,BYTE PTR [edx+0x49]
  4195e0:	scas   eax,DWORD PTR es:[edi]
  4195e1:	xchg   edi,eax
  4195e2:	mov    dh,0x30
  4195e4:	jl     0x419660
  4195e6:	mov    WORD PTR [eax-0x3963ec8d],?
  4195ec:	jg     0x419659
  4195ee:	dec    eax
  4195ef:	loop   0x41966b
  4195f1:	call   0x9af03bf7
  4195f6:	add    al,0xd3
  4195f8:	outs   dx,DWORD PTR ds:[esi]
  4195f9:	pop    ds
  4195fa:	push   esi
  4195fb:	mov    bh,0xdf
  4195fd:	loope  0x419606
  4195ff:	mov    esp,0xea8b1673
  419604:	adc    dh,ah
  419606:	outs   dx,BYTE PTR ds:[esi]
  419607:	(bad)  
  419608:	mov    ds:0x627e3d1,al
  41960d:	sub    BYTE PTR [eax-0x5f37036c],dl
  419613:	aaa    
  419614:	idiv   DWORD PTR [edi]
  419616:	sub    eax,0x3e16e2f7
  41961b:	cli    
  41961c:	push   ebx
  41961d:	pop    ebx
  41961e:	mov    ebp,ecx
  419620:	xor    bh,BYTE PTR [edi+0x3c0bf7b6]
  419626:	inc    esi
  419627:	data16 jecxz 0x41965a
  41962a:	data16 out dx,al
  41962c:	adc    BYTE PTR ds:0x8370829f,cl
  419632:	or     ecx,DWORD PTR ds:0x1a5f4023
  419638:	push   ds
  419639:	mov    BYTE PTR [esi-0x1c32842f],ch
  41963f:	jae    0x419684
  419641:	cmpps  xmm5,XMMWORD PTR [edi+ebx*2+0x6a386ea6],0xd5
  41964a:	in     eax,dx
  41964b:	mov    ah,0x43
  41964d:	and    DWORD PTR [ebx-0x50562111],0xec0edb46
  419657:	repz cs (bad) 
  41965a:	pusha  
  41965b:	or     eax,0x5572add
  419660:	or     ebp,DWORD PTR [ecx-0x4acfec87]
  419666:	fadd   QWORD PTR [edx]
  419668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419669:	fwait
  41966a:	push   ds
  41966b:	push   esi
  41966c:	pop    ecx
  41966d:	sbb    edi,DWORD PTR ds:0xde126f1d
  419673:	inc    edx
  419674:	out    0xe7,eax
  419676:	add    ebp,esi
  419678:	cmp    DWORD PTR [esi],esi
  41967a:	and    DWORD PTR [ebp+0x38c27bf3],0xffffffb9
  419681:	sbb    al,0xd9
  419683:	loop   0x4196df
  419685:	std    
  419686:	repnz daa 
  419688:	jo     0x41966e
  41968a:	pop    ecx
  41968b:	mov    bl,0xac
  41968d:	add    al,0x33
  41968f:	and    edi,DWORD PTR [ecx]
  419691:	adc    eax,0x1d03627d
  419696:	inc    edx
  419697:	test   eax,0x27e0a009
  41969c:	in     eax,0xb9
  41969e:	cdq    
  41969f:	outs   dx,BYTE PTR ds:[esi]
  4196a0:	cwde   
  4196a1:	sbb    cl,ch
  4196a3:	stos   BYTE PTR es:[edi],al
  4196a4:	mov    esi,0xd24d3a00
  4196a9:	push   es
  4196aa:	loope  0x41962f
  4196ac:	test   eax,0x3e190a06
  4196b1:	pop    es
  4196b2:	dec    ebp
  4196b3:	pop    edi
  4196b4:	not    DWORD PTR [edi]
  4196b6:	adc    al,0xf4
  4196b8:	mov    dl,0xfa
  4196ba:	lods   al,BYTE PTR ds:[esi]
  4196bb:	pop    edx
  4196bc:	jae    0x41972c
  4196be:	icebp  
  4196bf:	lea    edx,ds:0x9f056076
  4196c5:	xlat   BYTE PTR ds:[ebx]
  4196c6:	fst    DWORD PTR [edx-0x252ebe4b]
  4196cc:	loop   0x419725
  4196ce:	sahf   
  4196cf:	mov    edx,0x33d652cb
  4196d4:	inc    ebx
  4196d5:	in     al,dx
  4196d6:	mov    ds:0xb5027956,al
  4196db:	cwde   
  4196dc:	inc    ebx
  4196dd:	inc    edx
  4196de:	dec    ebp
  4196df:	fimul  DWORD PTR [esi+0x10]
  4196e2:	(bad)  
  4196e3:	mov    ebp,0xfe4a6a8d
  4196e8:	out    dx,al
  4196e9:	sbb    eax,0x982d3117
  4196ee:	push   eax
  4196ef:	outs   dx,BYTE PTR ds:[esi]
  4196f0:	push   0xd8f84fbb
  4196f5:	mov    ecx,0xd60f2793
  4196fa:	loop   0x4196b5
  4196fc:	int    0xf4
  4196fe:	adc    edx,ebp
  419700:	inc    eax
  419701:	popf   
  419702:	sti    
  419703:	pop    ebp
  419704:	dec    ebp
  419705:	daa    
  419706:	lods   eax,DWORD PTR ds:[esi]
  419707:	fdiv   QWORD PTR ds:0xae06dedd
  41970d:	mov    ah,0xb2
  41970f:	in     al,0x8c
  419711:	jecxz  0x4196d3
  419713:	or     DWORD PTR [edx+0x31],ebx
  419716:	es pop esi
  419718:	loop   0x41972b
  41971a:	lods   al,BYTE PTR ds:[esi]
  41971b:	push   esi
  41971c:	(bad)  
  41971d:	mov    eax,0x96bf5c98
  419722:	fwait
  419723:	retf   0x7c8
  419726:	xor    edi,DWORD PTR [ecx+ebp*4+0x715f504c]
  41972d:	cmp    bh,bl
  41972f:	fptan  
  419731:	int3   
  419732:	xchg   ebx,eax
  419733:	push   0xffffffa3
  419735:	push   edi
  419736:	pop    ds
  419737:	jmp    0x3ffd:0x42bd7a47
  41973e:	pushf  
  41973f:	mov    al,0x29
  419741:	imul   esp,edi,0x1aad0ba2
  419747:	arpl   WORD PTR [edi+0x41],bp
  41974a:	xchg   edi,eax
  41974b:	into   
  41974c:	adc    al,0xcd
  41974e:	adc    eax,DWORD PTR [esi]
  419750:	lea    eax,[ebx-0x1b138c61]
  419756:	ja     0x4196f7
  419758:	mov    dl,0x4d
  41975a:	sub    eax,0x5e6f4bf2
  41975f:	xchg   edx,eax
  419760:	cdq    
  419761:	xrelease xchg BYTE PTR es:[edx+0x2e645e4a],cl
  419769:	clc    
  41976a:	adc    al,0xa1
  41976c:	jmp    0xedfa:0x73da5691
  419773:	or     eax,0x7fda238e
  419778:	fs in  eax,0x9b
  41977b:	mov    edx,0xe3be59ee
  419780:	pop    ds
  419781:	pop    edx
  419782:	icebp  
  419783:	and    ebx,DWORD PTR [edx+0x63]
  419786:	push   cs
  419787:	sub    al,0x41
  419789:	aad    0xe0
  41978b:	iret   
  41978c:	scas   eax,DWORD PTR es:[edi]
  41978d:	ret    
  41978e:	sub    bl,0x94
  419791:	mov    bh,0x2a
  419793:	pop    eax
  419794:	(bad)  [eax+ecx*1-0x31e85617]
  41979b:	mov    eax,ds:0x363bbe0e
  4197a0:	dec    edx
  4197a1:	push   edi
  4197a2:	dec    esi
  4197a3:	mov    DWORD PTR [esi],ebx
  4197a5:	mov    al,ds:0x14dc41f8
  4197aa:	mov    bl,0x25
  4197ac:	xor    edi,eax
  4197ae:	jns    0x419801
  4197b0:	or     eax,0xb35e6fe6
  4197b5:	lahf   
  4197b6:	push   ebx
  4197b7:	sub    dh,BYTE PTR [ecx+0x1958ca71]
  4197bd:	pop    eax
  4197be:	xor    bh,BYTE PTR [edi]
  4197c0:	pop    ds
  4197c1:	scas   al,BYTE PTR es:[edi]
  4197c2:	cdq    
  4197c3:	stos   DWORD PTR es:[edi],eax
  4197c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197c5:	inc    ebp
  4197c6:	inc    edx
  4197c7:	lock or BYTE PTR ds:0x97a3b368,bh
  4197ce:	push   eax
  4197cf:	enter  0xabe,0x7
  4197d3:	push   ebp
  4197d4:	xor    al,0x75
  4197d6:	call   0x6b8d:0x58e5663b
  4197dd:	sbb    ecx,DWORD PTR [eax-0x78cdc268]
  4197e3:	sbb    DWORD PTR [edx-0x50],eax
  4197e6:	stc    
  4197e7:	mov    ds:0xf7fd85df,eax
  4197ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ed:	pop    ecx
  4197ee:	in     eax,0xa
  4197f0:	mov    ch,0x2c
  4197f2:	ficom  DWORD PTR [edx]
  4197f4:	cld    
  4197f5:	sbb    edi,DWORD PTR gs:[ebp+ecx*1-0x3d44c381]
  4197fd:	mov    cl,0x2
  4197ff:	inc    eax
  419800:	pop    ebx
  419801:	sub    ecx,edx
  419803:	xor    DWORD PTR [ebp-0x68d900b0],0xffffff88
  41980a:	lods   eax,DWORD PTR ds:[esi]
  41980b:	push   ss
  41980c:	ss sbb cl,cl
  41980f:	mov    ecx,0xbc59e473
  419814:	dec    esp
  419815:	adc    DWORD PTR [eax*2+0x625a1b0c],ebx
  41981c:	nop
  41981d:	cmc    
  41981e:	xlat   BYTE PTR ds:[ebx]
  41981f:	mov    eax,0x708b2cc3
  419824:	push   es
  419825:	repz enter 0x5e98,0xbc
  41982a:	scas   eax,DWORD PTR es:[edi]
  41982b:	mov    esi,0x338a1b53
  419830:	dec    ecx
  419831:	mov    ds:0xd0e63f9d,al
  419836:	cmp    eax,0x307c2994
  41983b:	push   ss
  41983c:	shl    BYTE PTR [ebx-0x327df439],0xc4
  419843:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419845:	push   eax
  419846:	(bad)  
  419848:	mov    ecx,eax
  41984a:	leave  
  41984b:	jecxz  0x41985a
  41984d:	sub    BYTE PTR [ecx+0x25],0x46
  419851:	les    edx,FWORD PTR fs:[esi-0x69278746]
  419858:	aam    0x75
  41985a:	fldenv [eax+0xd]
  41985d:	cdq    
  41985e:	in     al,0xc3
  419860:	mov    ch,0x3f
  419862:	inc    esp
  419863:	xor    ebx,DWORD PTR [edx]
  419865:	xor    al,0x61
  419867:	xchg   ecx,eax
  419868:	mov    ah,cl
  41986a:	fisubr DWORD PTR [edi+0x4]
  41986d:	cmp    eax,0x68958bf8
  419872:	ror    DWORD PTR [ebx],cl
  419874:	inc    ebx
  419875:	sbb    BYTE PTR [esp+edx*1+0x7c96c397],0x3b
  41987d:	mov    al,ds:0xd556d185
  419882:	imul   edx,DWORD PTR [edi+0x44],0xd588dabe
  419889:	jl     0x4198c8
  41988b:	dec    ecx
  41988c:	dec    esp
  41988d:	es daa 
  41988f:	mov    ecx,0x4f81caec
  419894:	or     ah,BYTE PTR cs:[eax-0x4033623c]
  41989b:	stos   BYTE PTR es:[edi],al
  41989c:	mov    ds,WORD PTR [ebx]
  41989e:	test   eax,0xb5cfdedc
  4198a3:	mov    BYTE PTR [ebp-0x4f],dl
  4198a6:	jne    0x4198b5
  4198a8:	push   edi
  4198a9:	jl     0x4198ad
  4198ab:	(bad)  
  4198ac:	lahf   
  4198ad:	iret   
  4198ae:	pop    es
  4198af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b0:	test   al,0xc9
  4198b2:	mov    dh,0xc0
  4198b4:	dec    ebx
  4198b5:	xor    DWORD PTR [edx-0x70429ee1],0xffffffa6
  4198bc:	xchg   ecx,eax
  4198bd:	aam    0x20
  4198bf:	sbb    ebp,DWORD PTR [eax+0x717146be]
  4198c5:	daa    
  4198c6:	call   FWORD PTR [edi+0x65]
  4198c9:	ins    DWORD PTR es:[edi],dx
  4198ca:	imul   ebx,ebx,0xa558e437
  4198d0:	rcl    bh,0xf9
  4198d3:	cmp    eax,0x5627378f
  4198d8:	cmp    al,0x94
  4198da:	stc    
  4198db:	mov    ebx,0xc6fb0def
  4198e0:	mov    DWORD PTR [esi-0x67fb7151],edx
  4198e6:	cmp    eax,ebp
  4198e8:	sahf   
  4198e9:	jno    0x4198e4
  4198eb:	into   
  4198ec:	add    al,BYTE PTR [ecx]
  4198ee:	dec    esi
  4198ef:	fadd   QWORD PTR [ebx-0x1a19aead]
  4198f5:	out    dx,eax
  4198f6:	(bad)
  4198f9:	popa   
  4198fa:	shr    DWORD PTR gs:[ebp-0x520457b9],1
  419901:	cmp    edi,DWORD PTR [edx]
  419903:	adc    ah,BYTE PTR [esi+edi*4+0xe]
  419907:	inc    eax
  419908:	mov    bl,0x3f
  41990a:	cdq    
  41990b:	xchg   edx,eax
  41990c:	test   DWORD PTR [ebx+0x3e],esp
  41990f:	push   ss
  419910:	jmp    0x643597b9
  419915:	pop    esi
  419916:	int3   
  419917:	push   esp
  419918:	hlt    
  419919:	loopne 0x419952
  41991b:	jbe    0x4198cf
  41991d:	push   edx
  41991e:	cmc    
  41991f:	test   eax,0x2a12e2c4
  419924:	dec    edx
  419925:	stos   DWORD PTR es:[edi],eax
  419926:	stos   BYTE PTR es:[edi],al
  419927:	aaa    
  419928:	mov    dh,bh
  41992a:	xor    BYTE PTR [ebp-0x4b],0x2e
  41992e:	adc    eax,0x89c345f6
  419933:	popa   
  419934:	or     BYTE PTR [edi-0x26],al
  419937:	adc    bh,bl
  419939:	int    0x46
  41993b:	loope  0x4198ee
  41993d:	xlat   BYTE PTR ds:[ebx]
  41993e:	dec    esi
  41993f:	enter  0x297a,0x25
  419943:	out    0x33,eax
  419945:	sub    al,0x3b
  419947:	dec    edx
  419948:	jo     0x419970
  41994a:	jp     0x419913
  41994c:	push   0xffffffbc
  41994e:	mov    dh,0xd5
  419950:	pop    edx
  419951:	jb     0x419981
  419953:	iret   
  419954:	or     eax,0x70757d85
  419959:	xchg   edx,eax
  41995a:	imul   esp,esi,0x68
  41995d:	sub    DWORD PTR [eax+0x20],0x40b9d650
  419964:	repnz cld 
  419966:	mov    dl,0x83
  419968:	jl     0x41993b
  41996a:	mov    esi,0x11a8405b
  41996f:	loopne 0x419959
  419971:	outs   dx,DWORD PTR ds:[esi]
  419972:	cdq    
  419973:	popf   
  419974:	jg     0x419992
  419976:	arpl   WORD PTR [edx+eax*4+0x6a],bx
  41997a:	cld    
  41997b:	xchg   esp,eax
  41997c:	lea    eax,[eax-0x4e]
  41997f:	lods   al,BYTE PTR ds:[esi]
  419980:	scas   al,BYTE PTR es:[edi]
  419981:	retf   0xe216
  419984:	sub    eax,0x28a1dd1c
  419989:	sub    BYTE PTR [ecx-0x1ba1a5c1],al
  41998f:	jnp    0x41994c
  419991:	sub    al,BYTE PTR [esi+eax*2-0x675e7372]
  419998:	ss push ecx
  41999a:	fnstcw WORD PTR [esi+0x112912b8]
  4199a0:	es mov ch,0x5b
  4199a3:	aaa    
  4199a4:	arpl   WORD PTR [ecx+eax*4+0x15],dx
  4199a8:	fwait
  4199a9:	mov    ch,0xc2
  4199ab:	fisttp WORD PTR ds:0x8ba3b57e
  4199b1:	mov    ch,0xe2
  4199b3:	ficom  WORD PTR [edi-0x4b]
  4199b6:	xlat   BYTE PTR ds:[ebx]
  4199b7:	ss pop ss
  4199b9:	aaa    
  4199ba:	xor    BYTE PTR [ecx-0x75e55ab3],ch
  4199c0:	js     0x4199bc
  4199c2:	or     BYTE PTR [ecx+eiz*2-0x52a793c0],ch
  4199c9:	test   al,0xf9
  4199cb:	sbb    al,0x56
  4199cd:	lds    ebp,FWORD PTR [edx+0x3d6edc41]
  4199d3:	pop    esi
  4199d4:	fs mov bh,0xed
  4199d7:	div    DWORD PTR [edx]
  4199d9:	mov    bh,BYTE PTR [edx]
  4199db:	in     al,dx
  4199dc:	int3   
  4199dd:	in     al,0x83
  4199df:	jnp    0x4199d2
  4199e1:	sub    esp,DWORD PTR [ecx-0x669380df]
  4199e7:	shl    esi,0xd0
  4199ea:	jo     0x4199d6
  4199ec:	push   esi
  4199ed:	xor    DWORD PTR [esi+eiz*4-0x37],ebp
  4199f1:	mov    esp,0xd0cb20fb
  4199f6:	pop    edx
  4199f7:	mov    BYTE PTR [edi],bl
  4199f9:	sub    al,BYTE PTR [ebx-0x20]
  4199fc:	push   ecx
  4199fd:	inc    ebx
  4199fe:	pop    es
  4199ff:	inc    esi
  419a00:	daa    
  419a01:	in     al,dx
  419a02:	and    ch,ch
  419a04:	mov    dh,0x92
  419a06:	push   cs
  419a07:	fcom   DWORD PTR [edi-0x6c]
  419a0a:	pop    edx
  419a0b:	add    al,BYTE PTR [eax-0x4fa10abb]
  419a11:	sub    ecx,DWORD PTR [eax]
  419a13:	push   edx
  419a14:	pushf  
  419a15:	daa    
  419a16:	fsubr  DWORD PTR [ebx+eax*2-0x5e4179f9]
  419a1d:	mov    ebp,0x837a20d7
  419a22:	xchg   ecx,eax
  419a23:	dec    edx
  419a24:	popw   es
  419a26:	xor    ah,bl
  419a28:	in     al,0x1b
  419a2a:	pop    ecx
  419a2b:	fbld   TBYTE PTR [edx+0x66]
  419a2e:	loop   0x419a12
  419a30:	adc    DWORD PTR [esi-0x26],edi
  419a33:	push   esp
  419a34:	mov    eax,ds:0x9c548d58
  419a39:	add    BYTE PTR [edx-0x7b],bl
  419a3c:	xor    dh,BYTE PTR [ecx+0x67]
  419a3f:	daa    
  419a40:	outs   dx,DWORD PTR ds:[esi]
  419a41:	test   eax,0xb3af2e2d
  419a46:	loope  0x419a86
  419a48:	or     eax,0x65be52a8
  419a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a4e:	cmp    BYTE PTR [ebx+0x75],bh
  419a51:	fist   WORD PTR [eax-0x148c4332]
  419a57:	ret    0x3e40
  419a5a:	add    BYTE PTR [ebx],ah
  419a5c:	pop    esp
  419a5d:	push   ebp
  419a5e:	or     BYTE PTR [eax],al
  419a60:	imul   esp,DWORD PTR [esi+0x5b],0x53ecc8b7
  419a67:	repz retf 
  419a69:	sahf   
  419a6a:	dec    ebx
  419a6b:	cmp    eax,0x5e33f513
  419a70:	std    
  419a71:	mov    bl,cl
  419a73:	pop    esi
  419a74:	or     ebp,eax
  419a76:	push   esp
  419a77:	cmp    al,0x66
  419a79:	lahf   
  419a7a:	mov    eax,ds:0x66804af4
  419a7f:	(bad)  
  419a80:	xchg   ecx,eax
  419a81:	or     dl,BYTE PTR [ebx]
  419a83:	fimul  DWORD PTR [edi]
  419a85:	adc    DWORD PTR [edx],0x9c193b3f
  419a8b:	xor    eax,0xf678850c
  419a90:	int    0xa6
  419a92:	loope  0x419aa9
  419a94:	mov    edx,0xbc418279
  419a99:	ror    BYTE PTR [esi-0x7b3714e2],1
  419a9f:	mov    DWORD PTR [ebp+eiz*1-0x2d],ebp
  419aa3:	add    BYTE PTR [esi+0x32],bl
  419aa6:	jno    0x419a7c
  419aa8:	xchg   BYTE PTR [ebp+0xc],dl
  419aab:	retf   
  419aac:	iret   
  419aad:	pop    ss
  419aae:	retf   
  419aaf:	push   eax
  419ab0:	mov    ds:0x4cd5c91c,al
  419ab5:	into   
  419ab6:	adc    BYTE PTR [edi-0x3a],al
  419ab9:	pop    ebp
  419aba:	sti    
  419abb:	lds    ebp,FWORD PTR [eax+0x1f74591d]
  419ac1:	iret   
  419ac2:	cmp    BYTE PTR [esi*2+0x1b1d96a5],ch
  419ac9:	push   0x32
  419acb:	mov    esi,0xbbef8ae5
  419ad0:	enter  0x510c,0x37
  419ad4:	xor    BYTE PTR [eax+ebx*8+0x5f],cl
  419ad8:	push   0x90c18b6c
  419add:	ss xchg edx,eax
  419adf:	bound  sp,DWORD PTR [edi+0xed08d17]
  419ae6:	(bad)  
  419ae7:	sbb    ecx,DWORD PTR [edi+0x7a]
  419aea:	imul   esp,DWORD PTR ds:0xf2b4f5ff,0x27
  419af1:	jo     0x419b70
  419af3:	mov    dh,0x7e
  419af5:	mov    DWORD PTR [edx],edi
  419af7:	outs   dx,BYTE PTR ds:[esi]
  419af8:	sbb    DWORD PTR [eax],edx
  419afa:	pop    esi
  419afb:	(bad)  
  419afc:	nop/reserved BYTE PTR [eax+esi*2+0x165b1c3d]
  419b04:	inc    edi
  419b05:	mov    esi,0x4465aacc
  419b0a:	lods   al,BYTE PTR ds:[esi]
  419b0b:	adc    ah,0x8b
  419b0e:	daa    
  419b0f:	pop    eax
  419b10:	sti    
  419b11:	cli    
  419b12:	jmp    0xbbef:0xf776c84c
  419b19:	cld    
  419b1a:	mov    dh,0xee
  419b1c:	into   
  419b1d:	mov    dh,0x30
  419b1f:	sbb    DWORD PTR [ecx+0x285ce782],edx
  419b25:	mov    DWORD PTR [ecx+0xc],ebx
  419b28:	xchg   ebp,eax
  419b29:	fild   DWORD PTR [ebx+0x6d]
  419b2c:	mov    esp,ss
  419b2e:	sbb    esp,edi
  419b30:	mov    ds:0x496e47b9,al
  419b35:	add    DWORD PTR [eax],0xffffff8b
  419b38:	mov    edx,0xf609abbf
  419b3d:	mov    ecx,0x521330a2
  419b42:	sbb    al,dl
  419b44:	stos   DWORD PTR es:[edi],eax
  419b45:	push   edx
  419b46:	(bad)  
  419b47:	lds    esi,FWORD PTR ds:0x2f84692d
  419b4d:	dec    edx
  419b4e:	dec    ebx
  419b4f:	(bad)  
  419b50:	mov    ch,0xff
  419b52:	in     eax,dx
  419b53:	(bad)  
  419b54:	mov    ch,0x50
  419b56:	(bad)  
  419b57:	daa    
  419b58:	pop    ebp
  419b59:	icebp  
  419b5a:	dec    ebp
  419b5b:	push   esi
  419b5c:	sbb    al,0x9d
  419b5e:	push   cs
  419b5f:	idiv   DWORD PTR [edi]
  419b61:	add    al,0x9f
  419b63:	leave  
  419b64:	cmp    al,0x76
  419b66:	fdiv   DWORD PTR [edx-0x65]
  419b69:	xchg   ebp,eax
  419b6a:	push   ss
  419b6b:	das    
  419b6c:	mov    ds:0xf7644f79,eax
  419b71:	bnd jg 0x419b75
  419b74:	fcomip st,st(4)
  419b76:	hlt    
  419b77:	test   eax,0xa7522f69
  419b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b7d:	and    al,0x2f
  419b7f:	fwait
  419b80:	push   cs
  419b81:	push   edi
  419b82:	cmp    esp,DWORD PTR [eax-0x14093ac8]
  419b88:	leave  
  419b89:	imul   eax,edx,0xa3540990
  419b8f:	lahf   
  419b90:	ja     0x419b2d
  419b92:	mov    BYTE PTR [edi+0x2],0xa7
  419b96:	xor    al,0xa8
  419b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b99:	xchg   BYTE PTR [esi+0x7f8eeca0],dl
  419b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba0:	daa    
  419ba1:	jae    0x419bcc
  419ba3:	xchg   ebp,eax
  419ba4:	ins    DWORD PTR es:[edi],dx
  419ba5:	or     ecx,ecx
  419ba7:	sub    BYTE PTR [esi+0x75],0x62
  419bab:	and    al,0xb5
  419bad:	cmc    
  419bae:	iret   
  419baf:	aad    0x4d
  419bb1:	and    eax,0x5ccb92db
  419bb6:	sub    ch,cl
  419bb8:	mov    bl,0x84
  419bba:	ins    DWORD PTR es:[edi],dx
  419bbb:	and    edi,DWORD PTR [eax+edx*8-0x4d7e1bcd]
  419bc2:	dec    ebx
  419bc3:	js     0x419c39
  419bc5:	mov    eax,0xeafbfbb4
  419bca:	add    bh,cl
  419bcc:	aas    
  419bcd:	sub    al,0x9c
  419bd0:	sbb    ebp,DWORD PTR [esi]
  419bd2:	or     BYTE PTR fs:[edx-0x10],cl
  419bd6:	adc    ecx,DWORD PTR [eax+0x5e]
  419bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bda:	dec    esi
  419bdb:	stos   DWORD PTR es:[edi],eax
  419bdc:	mov    bh,0xa7
  419bde:	xor    eax,0x1fa00b3d
  419be3:	icebp  
  419be4:	pusha  
  419be5:	mov    ds:0x142e9148,eax
  419bea:	sub    ch,cl
  419bec:	mov    ch,bl
  419bee:	push   0xffffffed
  419bf0:	aad    0x48
  419bf2:	cdq    
  419bf3:	xchg   ebx,eax
  419bf4:	pop    esi
  419bf5:	(bad)  
  419bf6:	cmp    BYTE PTR [ebp+0x40],bh
  419bf9:	das    
  419bfa:	pop    ecx
  419bfb:	scas   al,BYTE PTR es:[edi]
  419bfc:	out    dx,eax
  419bfd:	xchg   esp,eax
  419bfe:	aaa    
  419bff:	jl     0x419c62
  419c01:	push   esi
  419c02:	test   al,0xd9
  419c04:	mov    al,0x90
  419c06:	(bad)  
  419c08:	leave  
  419c09:	adc    DWORD PTR [ebp-0x67],esp
  419c0c:	pop    esp
  419c0d:	or     cl,BYTE PTR [ebx]
  419c0f:	jl     0x419be2
  419c11:	nop
  419c12:	mov    ?,WORD PTR [eax-0x14507b92]
  419c18:	xor    ch,BYTE PTR [ebp+0x44]
  419c1b:	pop    ds
  419c1c:	push   esi
  419c1d:	shl    BYTE PTR [eax+0x73ef7fc8],cl
  419c23:	mov    al,ds:0x29e86a55
  419c28:	sahf   
  419c29:	xchg   edx,edi
  419c2b:	adc    esi,DWORD PTR [edx+0x25]
  419c2e:	mov    ch,0x96
  419c30:	ss lahf 
  419c32:	pop    ecx
  419c33:	data16 sbb BYTE PTR [esi+0x29],bh
  419c37:	add    ebx,ebp
  419c39:	jno    0x419c6b
  419c3b:	inc    edi
  419c3c:	out    0x7b,al
  419c3e:	jcxz   0x419c69
  419c41:	adc    al,0x18
  419c43:	call   0xa65385ac
  419c48:	add    al,0x34
  419c4a:	ss (bad) 
  419c4c:	xchg   edi,eax
  419c4d:	or     DWORD PTR [ecx+0x2b],0xffffffb8
  419c51:	cdq    
  419c52:	xchg   esp,eax
  419c53:	inc    eax
  419c54:	out    dx,eax
  419c55:	fld    TBYTE PTR [ebp-0x3d652b94]
  419c5b:	icebp  
  419c5c:	adc    DWORD PTR [ebx-0x641e2239],eax
  419c62:	mov    WORD PTR [edx+0x79978507],gs
  419c68:	cmp    BYTE PTR ds:0x452127d2,0x6e
  419c6f:	push   esi
  419c70:	dec    ecx
  419c71:	mov    ecx,0x1dfb08d3
  419c76:	mov    ds:0xf5414586,al
  419c7b:	(bad)
  419c7e:	mov    BYTE PTR [eax-0x56dea3cf],0xd0
  419c85:	sbb    edi,eax
  419c87:	lods   al,BYTE PTR ds:[esi]
  419c88:	xchg   edi,eax
  419c89:	adc    ch,cl
  419c8b:	push   ss
  419c8c:	ret    0xc003
  419c8f:	adc    esi,esp
  419c91:	push   es
  419c92:	jmp    DWORD PTR [ecx-0x19]
  419c96:	adc    DWORD PTR [ebx-0x2b],ebx
  419c99:	(bad)  
  419c9a:	pushf  
  419c9b:	dec    eax
  419c9c:	jne    0x419c4b
  419c9e:	sbb    ebp,esi
  419ca0:	add    BYTE PTR [edi],bl
  419ca2:	and    DWORD PTR es:[ebx],edx
  419ca5:	lods   eax,DWORD PTR ds:[esi]
  419ca6:	or     DWORD PTR [ebx+0xf],0xd9735f62
  419cad:	call   0x72052d9e
  419cb2:	cmp    bh,ah
  419cb4:	shl    DWORD PTR [edx],cl
  419cb6:	dec    edi
  419cb7:	stos   DWORD PTR es:[edi],eax
  419cb8:	or     eax,0x57dae27b
  419cbd:	in     al,dx
  419cbe:	inc    edi
  419cbf:	pop    ebx
  419cc0:	(bad)
  419cc3:	push   edi
  419cc4:	(bad)  
  419cc5:	xor    al,0x2b
  419cc7:	mov    esi,0x644067bb
  419ccc:	jbe    0x419d48
  419cce:	test   al,0x6f
  419cd0:	aad    0x7
  419cd2:	xlat   BYTE PTR ds:[ebx]
  419cd3:	adc    al,0xee
  419cd5:	push   esp
  419cd6:	in     eax,dx
  419cd7:	ss mov cl,0x51
  419cda:	rcr    BYTE PTR [ecx+0x7aac7b97],0x63
  419ce1:	pushf  
  419ce2:	mov    ch,0x26
  419ce4:	les    esp,FWORD PTR [eax]
  419ce6:	(bad)  
  419ce7:	jns    0x419c9c
  419ce9:	loop   0x419cd9
  419ceb:	sub    al,0xcd
  419ced:	dec    esi
  419cee:	cmc    
  419cef:	dec    dx
  419cf1:	hlt    
  419cf2:	jmp    FWORD PTR [ecx+eiz*4]
  419cf5:	sub    BYTE PTR [ecx+0xf1601f],ah
  419cfb:	ds mov ebp,0x51999fa5
  419d01:	mov    ss:0x71108f38,eax
  419d07:	sbb    al,0x96
  419d09:	mov    ecx,0x603e4c98
  419d0e:	xchg   esp,eax
  419d0f:	xchg   DWORD PTR [eax-0x4a519bac],esi
  419d15:	add    al,0xb7
  419d17:	pop    DWORD PTR [ecx+0x35b158b0]
  419d1d:	nop
  419d1e:	sub    al,0xad
  419d20:	fmul   DWORD PTR [edi-0x12b275d5]
  419d26:	mov    cl,0xc9
  419d28:	loopne 0x419d72
  419d2a:	sti    
  419d2b:	(bad)  
  419d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d2d:	div    BYTE PTR [eax]
  419d2f:	nop
  419d30:	clc    
  419d31:	dec    eax
  419d32:	mov    ebp,0x2e8bc87c
  419d37:	je     0x419d13
  419d39:	jmp    0x9dd7:0xac468a63
  419d40:	enter  0x2297,0x29
  419d44:	cdq    
  419d45:	int3   
  419d46:	mov    cl,0x8a
  419d48:	jns    0x419da3
  419d4a:	dec    eax
  419d4b:	adc    edx,DWORD PTR [edi-0x1f573fde]
  419d51:	out    dx,al
  419d52:	inc    esi
  419d53:	mov    ebx,0x6febc91e
  419d58:	rcl    BYTE PTR [ebx],0x67
  419d5b:	mov    al,ds:0xa9245fb5
  419d60:	pop    ebx
  419d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d62:	icebp  
  419d63:	clc    
  419d64:	xor    DWORD PTR ss:[ebx+0x6],eax
  419d68:	mov    esi,0xf4b4a43f
  419d6d:	dec    edx
  419d6e:	in     eax,0xf5
  419d70:	xor    eax,0x75
  419d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d74:	stos   BYTE PTR es:[edi],al
  419d75:	push   edi
  419d76:	nop
  419d77:	mov    ?,WORD PTR [eax-0x25]
  419d7a:	mov    ebx,0x4d51fce8
  419d7f:	adc    eax,edx
  419d81:	push   0x3d
  419d83:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d85:	sbb    BYTE PTR [edi+edx*1+0x6a82ec54],0x35
  419d8d:	mov    al,ds:0xf3d05b40
  419d92:	adc    eax,0x3f8e57bd
  419d97:	xchg   esp,eax
  419d98:	int3   
  419d99:	mov    bh,0x92
  419d9b:	(bad)  
  419d9c:	cdq    
  419d9d:	lods   eax,DWORD PTR ds:[esi]
  419d9e:	bound  esi,QWORD PTR [ebp-0x42fe37fd]
  419da4:	and    al,0xe5
  419da6:	mov    eax,0xf8d8171c
  419dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dac:	xchg   ecx,eax
  419dad:	adc    edx,DWORD PTR [ecx-0x1f]
  419db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db1:	inc    ebx
  419db2:	xchg   edx,eax
  419db3:	xor    BYTE PTR [eax],al
  419db5:	push   cs
  419db6:	and    BYTE PTR cs:[ebx+0x66],ch
  419dba:	not    BYTE PTR fs:[edi]
  419dbd:	std    
  419dbe:	dec    eax
  419dbf:	sbb    ah,ah
  419dc1:	or     bl,BYTE PTR [ebx+0x1a78cd4d]
  419dc7:	(bad)  
  419dc8:	mov    esi,0xa1e4f85e
  419dcd:	jae    0x419e1e
  419dcf:	push   ecx
  419dd0:	inc    eax
  419dd1:	cdq    
  419dd2:	push   es
  419dd3:	sub    DWORD PTR [ebx],0xa8f911de
  419dd9:	push   0x9ca1c1fe
  419dde:	inc    eax
  419ddf:	outs   dx,BYTE PTR ds:[esi]
  419de0:	mov    bl,0x62
  419de2:	nop
  419de3:	lods   al,BYTE PTR ds:[esi]
  419de4:	xor    al,BYTE PTR [ecx-0x2ae33aee]
  419dea:	or     eax,0x3bdde2e4
  419def:	lock pop es
  419df1:	out    0x58,al
  419df3:	or     ch,BYTE PTR [edx+0x58]
  419df6:	fs ins DWORD PTR es:[edi],dx
  419df8:	or     DWORD PTR [esp+ecx*1-0x30ebe7c6],eax
  419dff:	fcom   QWORD PTR [edi-0x54147f0]
  419e05:	pop    ds
  419e06:	shl    DWORD PTR [ebp+0x70],0x62
  419e0a:	sbb    dh,BYTE PTR [ecx-0x27]
  419e0d:	mov    dh,0xe7
  419e0f:	xor    BYTE PTR [eax+0x5adbc897],ch
  419e15:	pop    edi
  419e16:	imul   edi,edx,0xffffffe0
  419e19:	inc    edi
  419e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e1b:	xor    DWORD PTR ds:0x58eb4739,ebp
  419e21:	mov    ah,0xe9
  419e23:	outs   dx,BYTE PTR ds:[esi]
  419e24:	popa   
  419e25:	add    al,0xeb
  419e27:	xor    edi,DWORD PTR [ebx+0x0]
  419e2a:	jmp    0x74315ef3
  419e2f:	xor    eax,0xea5f2c3a
  419e34:	jb     0x419e6f
  419e36:	call   eax
  419e38:	adc    dl,BYTE PTR [ebx-0x56]
  419e3b:	out    0xb,eax
  419e3d:	(bad)  
  419e3e:	cmp    dh,BYTE PTR [ebp+0x7e7e8580]
  419e44:	sbb    eax,0x5e114ef8
  419e49:	push   ecx
  419e4a:	not    ebx
  419e4c:	pushf  
  419e4d:	adc    BYTE PTR [ebx+0x55],ah
  419e50:	fst    QWORD PTR ds:0x2de5a420
  419e56:	scas   al,BYTE PTR es:[edi]
  419e57:	mov    ebx,0x9df90a30
  419e5c:	stos   DWORD PTR es:[edi],eax
  419e5d:	pop    ebp
  419e5e:	mov    edi,DWORD PTR [ebx+0x15]
  419e61:	cdq    
  419e62:	cs push ebp
  419e64:	das    
  419e65:	std    
  419e66:	loopne 0x419e62
  419e68:	loop   0x419eb3
  419e6a:	inc    edi
  419e6b:	sbb    BYTE PTR [edi+0x75502123],bh
  419e71:	mov    bl,ch
  419e73:	mov    ecx,0xa5f1eb8d
  419e78:	or     cl,0x43
  419e7b:	mov    ds:0x5cdaafcb,eax
  419e80:	push   eax
  419e81:	cmp    BYTE PTR [esi+0x4f3f081a],dh
  419e87:	inc    esp
  419e88:	aaa    
  419e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e8a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e8c:	cmc    
  419e8d:	jo     0x419e92
  419e8f:	mov    ecx,0x38fe336b
  419e94:	push   ss
  419e95:	aam    0x66
  419e97:	inc    esp
  419e98:	shl    BYTE PTR [eax+0x52650cab],cl
  419e9e:	sbb    ebx,eax
  419ea0:	stos   BYTE PTR es:[edi],al
  419ea1:	int3   
  419ea2:	dec    edx
  419ea3:	mov    dh,0xae
  419ea5:	adc    BYTE PTR [edx],cl
  419ea7:	fild   WORD PTR [edx]
  419ea9:	and    al,0x85
  419eab:	inc    edi
  419eac:	xor    eax,0xbbbe3eb1
  419eb1:	push   DWORD PTR [ebp-0x775feebc]
  419eb7:	jl     0x419ec6
  419eb9:	and    al,0x3
  419ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ebc:	arpl   bx,cx
  419ebe:	stos   DWORD PTR es:[edi],eax
  419ebf:	js     0x419eff
  419ec1:	mov    ds:0xe2c0bbb2,eax
  419ec6:	sub    al,0xf5
  419ec8:	sub    ebp,ebx
  419eca:	out    0xf9,eax
  419ecc:	mov    DWORD PTR [ebp-0x3f],0x4567580e
  419ed3:	sbb    DWORD PTR [esi-0x1e7a05fe],esi
  419ed9:	and    ah,al
  419edb:	pushf  
  419edc:	aas    
  419edd:	shl    BYTE PTR [esp+edx*4-0x7f],cl
  419ee1:	mov    cl,0xa6
  419ee3:	cmp    BYTE PTR [edx+edx*1-0x7e],ah
  419ee7:	cld    
  419ee8:	xchg   edx,eax
  419ee9:	jne    0x419f41
  419eeb:	in     eax,dx
  419eec:	and    bl,BYTE PTR [eax+0x65f686cd]
  419ef2:	or     DWORD PTR [ebp-0x16],ebp
  419ef5:	push   eax
  419ef6:	nop
  419ef7:	imul   ebp,DWORD PTR [edx-0x7ba9e1b8],0xffffffc7
  419efe:	cli    
  419eff:	cli    
  419f00:	dec    edi
  419f01:	pop    ebp
  419f02:	mov    esi,0xc86ff984
  419f07:	and    BYTE PTR [ebx+0x1284da28],bl
  419f0d:	and    bp,si
  419f10:	ret    0x2d53
  419f13:	add    eax,DWORD PTR [ebp+0x2f]
  419f16:	lods   al,BYTE PTR ds:[esi]
  419f17:	mov    dl,0xae
  419f19:	mov    bh,0xfd
  419f1b:	add    bh,dh
  419f1d:	retf   
  419f1e:	loope  0x419f44
  419f20:	aaa    
  419f21:	test   al,0xb8
  419f23:	jmp    0xe583:0x9a9c990c
  419f2a:	imul   esi,DWORD PTR [ebp+0x38],0x3136ca08
  419f31:	(bad)  
  419f32:	out    dx,eax
  419f33:	sbb    BYTE PTR [esp+eiz*2+0x41],bh
  419f37:	aas    
  419f38:	imul   edx,DWORD PTR [esi],0xd7cf48e9
  419f3e:	pop    ebx
  419f3f:	iret   
  419f40:	xchg   ecx,eax
  419f41:	add    esp,edi
  419f43:	push   es
  419f44:	fcmovbe st,st(2)
  419f46:	ret    
  419f47:	out    dx,al
  419f48:	add    bl,BYTE PTR ds:0xe4be11e1
  419f4e:	xor    ah,ah
  419f50:	xor    DWORD PTR [esi+ebx*2-0x62b8b15a],esi
  419f57:	je     0x419f2d
  419f59:	outs   dx,BYTE PTR ds:[esi]
  419f5a:	mov    cl,0x1c
  419f5c:	jmp    0x45c91a2f
  419f61:	inc    esi
  419f62:	test   ecx,eax
  419f64:	cmp    eax,0x31ac14a6
  419f69:	xor    DWORD PTR [edx-0x271d3599],esp
  419f6f:	mov    bh,ch
  419f71:	pop    ecx
  419f72:	inc    esi
  419f73:	mov    bl,0xe1
  419f75:	scas   eax,DWORD PTR es:[edi]
  419f76:	aaa    
  419f77:	je     0x419f51
  419f79:	out    dx,al
  419f7a:	xor    DWORD PTR [eax+0x3e12ae5b],edi
  419f80:	and    dl,dl
  419f82:	jmp    DWORD PTR ds:0x104f2af3
  419f88:	fdivr  st(1),st
  419f8a:	jne    0x419f2b
  419f8c:	lock shl ah,0xfc
  419f90:	jge    0x419fe1
  419f92:	and    ebp,DWORD PTR [ebx]
  419f94:	mov    al,ds:0xd48db97d
  419f99:	lods   al,BYTE PTR ds:[esi]
  419f9a:	popf   
  419f9b:	aad    0x8d
  419f9d:	mov    ecx,0xf56b64af
  419fa2:	xor    ebx,esp
  419fa4:	retf   
  419fa5:	pop    ds
  419fa6:	push   ecx
  419fa7:	gs xchg ecx,eax
  419fa9:	xor    DWORD PTR ds:0x41028d69,eax
  419faf:	icebp  
  419fb0:	icebp  
  419fb1:	pop    edx
  419fb2:	cdq    
  419fb3:	push   ebx
  419fb4:	aaa    
  419fb5:	inc    edx
  419fb6:	ins    BYTE PTR es:[edi],dx
  419fb7:	mov    ch,0xac
  419fb9:	and    esp,DWORD PTR [esi+0x72d8625f]
  419fbf:	push   0x5b582f24
  419fc4:	jg     0x419f4f
  419fc6:	gs fcmovnb st,st(4)
  419fc9:	outs   dx,DWORD PTR ds:[esi]
  419fca:	mov    eax,ds:0xb379243f
  419fcf:	and    al,0x27
  419fd1:	jl     0x419fdd
  419fd3:	inc    edi
  419fd4:	loopne 0x419ff6
  419fd6:	push   ecx
  419fd7:	stc    
  419fd8:	sbb    BYTE PTR es:[esi],dh
  419fdb:	or     DWORD PTR [esi-0x24],edi
  419fde:	xchg   esp,eax
  419fdf:	int    0x7c
  419fe1:	fbld   TBYTE PTR [ebp-0x39f9e1dd]
  419fe7:	std    
  419fe8:	outs   dx,DWORD PTR ds:[esi]
  419fe9:	fnsave [eax-0x53b51b54]
  419fef:	pop    ebp
  419ff0:	lods   al,BYTE PTR ds:[esi]
  419ff1:	ficom  WORD PTR [ebx]
  419ff3:	pop    DWORD PTR [eax]
  419ff5:	inc    edi
  419ff6:	in     al,0x5c
  419ff8:	mov    esi,0xa535834b
  419ffd:	push   esp
  419ffe:	xchg   edi,eax
  419fff:	mov    al,0x15
  41a001:	jnp    0x419fb9
  41a003:	inc    edi
  41a004:	pop    edx
  41a005:	cwde   
  41a006:	or     BYTE PTR [edi],ch
  41a008:	cmc    
  41a009:	cld    
  41a00a:	test   esp,0x1d83bae0
  41a010:	mov    eax,0x2ce65d73
  41a015:	or     eax,0xb2d1295b
  41a01a:	jb     0x41a06b
  41a01c:	dec    edi
  41a01d:	clc    
  41a01e:	ja     0x41a054
  41a020:	push   edi
  41a021:	mov    DWORD PTR [ecx],0xbd38c23b
  41a027:	xchg   BYTE PTR [eax],ah
  41a029:	icebp  
  41a02a:	cmp    al,0x9a
  41a02c:	mov    bh,0x97
  41a02e:	push   eax
  41a02f:	mov    gs,eax
  41a031:	jne    0x41a092
  41a033:	pop    ebp
  41a034:	sub    eax,0x889f27f8
  41a039:	(bad)  
  41a03a:	jmp    0x55474c17
  41a03f:	arpl   WORD PTR [eax+0x2eda6b8a],ax
  41a045:	out    0x90,al
  41a047:	mov    eax,0xc90df54b
  41a04c:	xlat   BYTE PTR ds:[ebx]
  41a04d:	pop    ds
  41a04e:	sub    BYTE PTR [edi+ebx*1-0x17],0xee
  41a053:	call   0xacb958b8
  41a058:	mov    ah,0x3a
  41a05a:	fcom   DWORD PTR [esi+0x14]
  41a05d:	pop    ebp
  41a05e:	pusha  
  41a05f:	enter  0xb6ef,0x2e
  41a063:	or     ah,dh
  41a065:	and    eax,0x46597a06
  41a06a:	jb     0x41a098
  41a06c:	push   ebp
  41a06d:	inc    ebp
  41a06e:	and    BYTE PTR ds:0xe11a91fc,0xf5
  41a075:	sahf   
  41a076:	ror    DWORD PTR [edi-0x57],0x5d
  41a07a:	out    0x8b,eax
  41a07c:	dec    esp
  41a07d:	call   0x2ebb:0xa2cae297
  41a084:	mov    edi,0xd008493f
  41a089:	jge    0x41a0c0
  41a08b:	push   es
  41a08c:	je     0x41a04b
  41a08e:	sub    bl,bh
  41a090:	push   edx
  41a091:	mov    ch,0x5a
  41a093:	mov    dh,0x78
  41a095:	ret    
  41a096:	xchg   ecx,eax
  41a097:	xchg   edx,eax
  41a098:	sahf   
  41a099:	(bad)  
  41a09a:	dec    edi
  41a09b:	call   0xc41b4036
  41a0a0:	xor    esi,ebp
  41a0a2:	outs   dx,DWORD PTR ds:[esi]
  41a0a3:	xor    BYTE PTR [edi+0xf249936],al
  41a0a9:	pop    ss
  41a0aa:	pop    ecx
  41a0ab:	push   eax
  41a0ac:	push   cs
  41a0ad:	rol    DWORD PTR [edi+0x48],0x91
  41a0b1:	repz mov edx,0xc035115
  41a0b7:	frstor ds:[eax-0x3c]
  41a0bb:	push   ds
  41a0bc:	test   DWORD PTR [ecx],0x473cf28
  41a0c2:	pop    eax
  41a0c3:	les    edx,FWORD PTR [esi-0x4757f669]
  41a0c9:	(bad)  
  41a0ca:	xchg   edi,eax
  41a0cb:	das    
  41a0cc:	aaa    
  41a0cd:	jno    0x41a0db
  41a0cf:	or     al,0x7
  41a0d1:	bound  ebx,QWORD PTR ds:0x82dd0038
  41a0d7:	jl     0x41a0ae
  41a0d9:	sub    al,0x88
  41a0db:	dec    eax
  41a0dc:	jmp    0x41a140
  41a0de:	nop
  41a0df:	mov    ds:0x952828a4,al
  41a0e4:	sbb    DWORD PTR [ebx],ecx
  41a0e6:	pusha  
  41a0e7:	lods   eax,DWORD PTR ds:[esi]
  41a0e8:	pop    esp
  41a0e9:	jno    0x41a0d1
  41a0eb:	cmp    DWORD PTR [esi],ebx
  41a0ed:	jecxz  0x41a072
  41a0ef:	icebp  
  41a0f0:	pop    ds
  41a0f1:	jno    0x41a113
  41a0f3:	jg     0x41a159
  41a0f5:	cmp    BYTE PTR [eax+esi*1-0x6f42e23f],dh
  41a0fc:	in     eax,0x7d
  41a0fe:	loopne 0x41a157
  41a100:	xchg   ecx,eax
  41a101:	xor    DWORD PTR [edi+0x5fb9ba87],esi
  41a107:	scas   al,BYTE PTR es:[edi]
  41a108:	sub    al,0xc9
  41a10a:	mov    ds:0xa9bf8abb,al
  41a10f:	mov    cl,0x57
  41a111:	cmp    eax,0x387bad74
  41a116:	std    
  41a117:	sahf   
  41a118:	cli    
  41a119:	dec    ebp
  41a11a:	mov    cl,0x6d
  41a11c:	jle    0x41a0cb
  41a11e:	cmc    
  41a11f:	push   esi
  41a120:	adc    eax,0x19358f1a
  41a125:	dec    eax
  41a126:	enter  0xf49a,0xf1
  41a12a:	test   eax,0x99d76a12
  41a12f:	retf   
  41a130:	xchg   ebp,eax
  41a131:	xchg   edi,eax
  41a132:	dec    ecx
  41a133:	or     BYTE PTR [edx+edx*4-0x75],cl
  41a137:	ds jo  0x41a128
  41a13a:	mov    cl,0xa4
  41a13c:	sar    BYTE PTR [ecx-0x59b52635],cl
  41a142:	push   cs
  41a143:	mov    esi,0x895989de
  41a148:	jmp    0x411a:0xcc761ad4
  41a14f:	stos   BYTE PTR es:[edi],al
  41a150:	dec    esp
  41a151:	rol    edi,cl
  41a153:	mov    ah,0xca
  41a155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a156:	shl    DWORD PTR [esi+ebp*4+0x0],1
  41a15a:	sbb    al,0xa2
  41a15c:	fwait
  41a15d:	pusha  
  41a15e:	lds    esp,FWORD PTR [edi-0x61]
  41a161:	xlat   BYTE PTR ds:[ebx]
  41a162:	push   0xff6e9a46
  41a167:	xor    ch,BYTE PTR [ecx]
  41a169:	dec    eax
  41a16a:	jbe    0x41a165
  41a16c:	test   eax,0x754921a2
  41a171:	dec    edx
  41a172:	movq   mm0,mm0
  41a175:	add    esp,edx
  41a177:	jmp    0x7e0fa278
  41a17c:	jnp    0x41a1a6
  41a17e:	into   
  41a17f:	jg     0x41a1eb
  41a181:	aas    
  41a182:	xchg   esp,eax
  41a183:	sub    BYTE PTR [esi],dl
  41a185:	ins    DWORD PTR es:[edi],dx
  41a186:	test   BYTE PTR [edi-0x7ea6d7aa],dl
  41a18c:	mov    ds:0x6d44f0c9,al
  41a191:	jns    0x41a149
  41a193:	xchg   edx,eax
  41a194:	(bad)  
  41a195:	fwait
  41a196:	mov    esi,DWORD PTR [ebp-0x5ca267cd]
  41a19c:	imul   ecx,DWORD PTR [esi],0xffffffb9
  41a19f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a0:	aaa    
  41a1a1:	xor    dh,BYTE PTR [ebx-0x7c77e14a]
  41a1a7:	pop    eax
  41a1a9:	jmp    0xb25a:0xd7091bd2
  41a1b0:	retf   
  41a1b1:	cmp    esi,DWORD PTR [edx-0xb]
  41a1b4:	mov    eax,ds:0x41c01d95
  41a1b9:	mov    ds:0x48e09fe6,al
  41a1be:	mov    edx,0x18e7a4b7
  41a1c3:	jb     0x41a15c
  41a1c5:	sub    eax,DWORD PTR [esi-0x70]
  41a1c8:	fild   DWORD PTR [ebp+0x743f343b]
  41a1ce:	daa    
  41a1cf:	retf   
  41a1d0:	jno    0x41a1c9
  41a1d2:	add    BYTE PTR [ebp-0x3272a8c3],al
  41a1d8:	pop    esi
  41a1d9:	hlt    
  41a1da:	jmp    0x8f7c35a9
  41a1df:	dec    ebx
  41a1e0:	adc    esi,DWORD PTR [edx+eiz*8-0x71fbd33c]
  41a1e7:	cmp    eax,0xbb70e80f
  41a1ec:	cld    
  41a1ed:	cmp    al,0xa4
  41a1ef:	fcmovbe st,st(5)
  41a1f1:	(bad)  
  41a1f2:	cmp    al,BYTE PTR [edx-0x3f]
  41a1f5:	lods   al,BYTE PTR ds:[esi]
  41a1f6:	aaa    
  41a1f7:	std    
  41a1f8:	test   al,0x52
  41a1fa:	in     al,0x96
  41a1fc:	js     0x41a1b0
  41a1fe:	mul    al
  41a200:	add    al,0xd7
  41a202:	sub    ebx,ecx
  41a204:	shl    DWORD PTR [ecx],0x3d
  41a207:	in     al,0x96
  41a209:	scas   eax,DWORD PTR es:[edi]
  41a20a:	stc    
  41a20b:	mov    ds:0xfebbc1c9,eax
  41a210:	xchg   ebp,eax
  41a211:	loop   0x41a26e
  41a213:	dec    ebx
  41a214:	inc    DWORD PTR [ecx-0x50]
  41a217:	jmp    0x5fa77574
  41a21c:	fadd   QWORD PTR [edx]
  41a21e:	ins    DWORD PTR es:[edi],dx
  41a21f:	stos   DWORD PTR es:[edi],eax
  41a220:	cld    
  41a221:	outs   dx,DWORD PTR ds:[esi]
  41a222:	out    0xe4,eax
  41a224:	int3   
  41a225:	push   edi
  41a226:	repnz in al,dx
  41a228:	sub    al,0xcc
  41a22a:	ret    
  41a22b:	adc    edx,DWORD PTR [ecx+0x74dbea1c]
  41a231:	inc    edi
  41a232:	adc    al,0xe3
  41a234:	test   eax,0x98055595
  41a239:	data16 sahf 
  41a23b:	lea    ecx,[edx]
  41a23d:	mov    ah,ah
  41a23f:	sar    BYTE PTR [eax+0x1a79ad9b],1
  41a245:	and    dl,al
  41a247:	mov    al,0xbe
  41a249:	adc    eax,0xf83e731b
  41a24e:	xor    dh,BYTE PTR [eax+0x59]
  41a251:	inc    edi
  41a252:	scas   al,BYTE PTR es:[edi]
  41a253:	fs in  al,0x14
  41a256:	add    DWORD PTR [ebx+edx*1],edi
  41a259:	or     DWORD PTR [ebx],edx
  41a25b:	xchg   DWORD PTR [ecx],esp
  41a25d:	xchg   BYTE PTR [eax+0x26],ah
  41a260:	sub    eax,0x60bd6eaf
  41a265:	enter  0x8e2f,0x43
  41a269:	mov    ebx,0x9a6c39cf
  41a26e:	lock jo 0x41a2bb
  41a271:	mov    dh,0x80
  41a273:	into   
  41a274:	jg     0x41a28b
  41a276:	jb     0x41a262
  41a278:	pop    ebp
  41a279:	aaa    
  41a27a:	rcl    eax,cl
  41a27c:	mov    esp,0x5c1b70f4
  41a281:	push   es
  41a282:	xor    al,0x4
  41a284:	fdivr  QWORD PTR [edx]
  41a286:	push   cs
  41a287:	push   esi
  41a288:	jbe    0x41a216
  41a28a:	xchg   edx,eax
  41a28b:	mov    bh,0xf7
  41a28d:	mov    fs,WORD PTR [edx+0x219e52db]
  41a293:	out    0x51,al
  41a295:	xor    al,0x79
  41a297:	adc    bh,BYTE PTR [ebx+0x1693a55f]
  41a29d:	jp     0x41a29e
  41a29f:	mov    dh,0x5a
  41a2a1:	jo     0x41a2a0
  41a2a3:	and    BYTE PTR [edi-0x39db08ae],cl
  41a2a9:	dec    eax
  41a2aa:	mov    ecx,0x20bbbab0
  41a2af:	inc    esp
  41a2b0:	jno    0x41a2fc
  41a2b2:	mov    BYTE PTR [edi-0x76],0xe6
  41a2b6:	adc    BYTE PTR [edi],0x57
  41a2b9:	mov    dh,0x85
  41a2bb:	push   0xffffffaf
  41a2bd:	mov    ebx,edi
  41a2bf:	inc    esp
  41a2c0:	push   es
  41a2c1:	or     eax,0x2984acf0
  41a2c6:	shl    dh,0xfd
  41a2c9:	mov    dh,0xd4
  41a2cb:	inc    DWORD PTR [edx-0x1a]
  41a2ce:	pop    ebx
  41a2cf:	dec    eax
  41a2d0:	mov    ecx,0x7c8d128f
  41a2d5:	sub    DWORD PTR [edi+0x67],esi
  41a2d8:	outs   dx,BYTE PTR ds:[esi]
  41a2d9:	ror    BYTE PTR [edi+0x2c],cl
  41a2dc:	dec    esp
  41a2dd:	and    eax,0x4a2c8e26
  41a2e2:	xchg   BYTE PTR [eax-0x78],dh
  41a2e5:	inc    eax
  41a2e6:	push   0x2a
  41a2e8:	ret    
  41a2e9:	(bad)
  41a2ec:	pop    es
  41a2ed:	popa   
  41a2ee:	and    al,ah
  41a2f0:	mov    ebx,0x42f44a
  41a2f5:	xbegin 0x86afbc81
  41a2fb:	dec    esp
  41a2fc:	mov    cl,0xe0
  41a2fe:	or     al,0xdc
  41a300:	xor    ebp,ebx
  41a302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a303:	jge    0x41a2e5
  41a305:	add    DWORD PTR [edi-0x1c],ebx
  41a308:	push   0xffffffa3
  41a30a:	lea    esi,[edi+esi*8]
  41a30d:	jne    0x41a349
  41a30f:	sbb    BYTE PTR [eax],dl
  41a311:	push   cs
  41a312:	imul   ebx,edi,0xc773e5eb
  41a318:	jl     0x41a327
  41a31a:	pop    esp
  41a31b:	je     0x41a2f6
  41a31d:	div    BYTE PTR ds:0x68421107
  41a323:	jo     0x41a2c9
  41a325:	adc    DWORD PTR [esi-0x70c7505e],edx
  41a32b:	cwde   
  41a32c:	popf   
  41a32d:	(bad)  
  41a32e:	xchg   esp,eax
  41a32f:	out    0x7e,eax
  41a331:	push   ecx
  41a332:	jmp    0xfba7:0x12fe197b
  41a339:	mov    ch,0xb3
  41a33b:	mov    ah,0xa8
  41a33d:	mov    bh,0x9a
  41a33f:	pop    ecx
  41a340:	cmc    
  41a341:	clc    
  41a342:	mov    cs,WORD PTR [ebx]
  41a344:	jno    0x41a37f
  41a346:	or     cl,dl
  41a348:	rcl    dh,1
  41a34a:	jge    0x41a38d
  41a34c:	ins    BYTE PTR es:[edi],dx
  41a34d:	call   0xc977:0xbb04fb12
  41a354:	xchg   esi,eax
  41a355:	adc    ebp,ebx
  41a357:	es mov ecx,0xc6dc811c
  41a35d:	cmc    
  41a35e:	inc    esi
  41a35f:	sub    DWORD PTR [ebp-0x468bc32e],ecx
  41a365:	xlat   BYTE PTR ds:[ebx]
  41a366:	and    ebx,DWORD PTR [edx-0x50]
  41a369:	ss xchg ecx,eax
  41a36b:	xchg   ecx,eax
  41a36c:	out    dx,eax
  41a36d:	xor    ch,BYTE PTR [esi]
  41a36f:	das    
  41a370:	adc    eax,0x8edb42d9
  41a375:	jbe    0x41a358
  41a377:	popf   
  41a378:	aaa    
  41a379:	fistp  DWORD PTR ds:[edi+0x6229be6]
  41a380:	add    eax,0x8d21e7c2
  41a385:	or     BYTE PTR [ecx],cl
  41a387:	pop    edi
  41a388:	adc    BYTE PTR [edx+0x10],dh
  41a38b:	cmc    
  41a38c:	in     eax,dx
  41a38d:	call   FWORD PTR [ebx]
  41a38f:	add    eax,0x1dafaeff
  41a394:	sbb    edx,DWORD PTR [ecx+ebp*4+0x40]
  41a398:	xchg   BYTE PTR [eax],dh
  41a39a:	retf   0xb45
  41a39d:	lods   al,BYTE PTR ds:[esi]
  41a39e:	scas   al,BYTE PTR es:[edi]
  41a39f:	jo     0x41a3d1
  41a3a1:	xchg   esi,eax
  41a3a2:	or     eax,0x618c84b8
  41a3a7:	push   ebp
  41a3a8:	xlat   BYTE PTR ds:[ebx]
  41a3a9:	inc    edx
  41a3aa:	ret    0xa428
  41a3ad:	test   al,0x53
  41a3af:	gs jecxz 0x41a3b6
  41a3b2:	jl     0x41a37c
  41a3b4:	mov    ah,0xad
  41a3b6:	adc    DWORD PTR [esp+esi*2+0x497e5953],edi
  41a3bd:	gs in  al,dx
  41a3bf:	jecxz  0x41a3f8
  41a3c1:	xchg   DWORD PTR [edi-0xc3140dc],ecx
  41a3c7:	sub    eax,0xb00dfdba
  41a3cc:	xlat   BYTE PTR ds:[ebx]
  41a3cd:	rol    BYTE PTR [eax],1
  41a3cf:	add    eax,0xca962c46
  41a3d4:	mov    bl,0x1a
  41a3d6:	fst    DWORD PTR [edx-0x202be86e]
  41a3dc:	nop
  41a3dd:	xchg   esi,eax
  41a3de:	cwde   
  41a3df:	mov    cl,BYTE PTR [edx]
  41a3e1:	sub    eax,0xe29e32d9
  41a3e6:	adc    ch,al
  41a3e8:	rcl    ebp,1
  41a3ea:	jge    0x41a377
  41a3ec:	jmp    FWORD PTR [edi]
  41a3ee:	cmp    al,0x33
  41a3f0:	in     al,0xa5
  41a3f2:	loopne 0x41a398
  41a3f4:	call   DWORD PTR [edi+edx*4]
  41a3f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3f8:	push   ebx
  41a3f9:	xchg   edx,ecx
  41a3fb:	pop    edx
  41a3fc:	(bad)  
  41a3fd:	cdq    
  41a3fe:	fistp  DWORD PTR [ecx]
  41a400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a401:	inc    ecx
  41a402:	outs   dx,DWORD PTR ds:[esi]
  41a403:	sbb    DWORD PTR [edi],ebp
  41a405:	aaa    
  41a406:	pop    edi
  41a407:	push   ss
  41a408:	enter  0x29a3,0xe5
  41a40c:	in     eax,0x91
  41a40e:	adc    DWORD PTR [ebx+0x4b5dd473],ebp
  41a414:	xor    BYTE PTR [eax],bh
  41a416:	mov    DWORD PTR [ecx],ecx
  41a418:	cdq    
  41a419:	push   eax
  41a41a:	js     0x41a43f
  41a41c:	push   0xffffff91
  41a41e:	and    ebp,DWORD PTR [edx]
  41a420:	call   0x3173:0x90248db3
  41a427:	sub    edx,edi
  41a429:	lea    esi,[ecx]
  41a42b:	int3   
  41a42c:	mov    dh,BYTE PTR [ebx]
  41a42e:	xchg   esi,eax
  41a42f:	test   eax,0xd672f9dd
  41a434:	fsubp  st(1),st
  41a436:	jmp    0x894da950
  41a43b:	jae    0x41a42b
  41a43d:	xchg   edi,eax
  41a43e:	iret   
  41a43f:	gs sub eax,0xe1eec80b
  41a445:	in     al,0x12
  41a447:	dec    ebx
  41a448:	cmp    eax,0xbdb44b1a
  41a44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a44e:	sub    BYTE PTR ds:0x4bd23986,dl
  41a454:	(bad)  
  41a455:	or     DWORD PTR [ebx],esi
  41a457:	pop    ebp
  41a458:	xchg   DWORD PTR [ebx-0x1f],ecx
  41a45b:	(bad)  
  41a45d:	ins    DWORD PTR es:[edi],dx
  41a45e:	cmc    
  41a45f:	retf   
  41a460:	pop    ecx
  41a461:	hlt    
  41a462:	das    
  41a463:	jg     0x41a48f
  41a465:	rcl    BYTE PTR [ebx+0x2f],cl
  41a468:	mov    esi,0x2250ec06
  41a46d:	dec    edx
  41a46e:	dec    edx
  41a46f:	in     al,dx
  41a470:	lea    edi,[edx-0x411edf8b]
  41a476:	gs jl  0x41a4f4
  41a479:	push   edi
  41a47a:	fldcw  WORD PTR [eax]
  41a47c:	outs   dx,BYTE PTR ds:[esi]
  41a47d:	dec    esi
  41a47e:	adc    dh,0xd9
  41a481:	cmp    DWORD PTR [ebx-0x4802b092],ebx
  41a487:	jns    0x41a48b
  41a489:	pop    esp
  41a48a:	outs   dx,BYTE PTR ds:[si]
  41a48c:	addr16 inc esi
  41a48e:	push   edx
  41a48f:	jne    0x41a476
  41a491:	jg     0x41a457
  41a493:	inc    eax
  41a494:	rol    DWORD PTR [ecx],cl
  41a496:	das    
  41a497:	shl    DWORD PTR [ecx-0x788d0933],0x58
  41a49e:	jl     0x41a499
  41a4a0:	push   esp
  41a4a1:	push   0xfffffff2
  41a4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4a4:	mov    ds:0xc58e6237,al
  41a4a9:	mov    ecx,0xdef950f
  41a4ae:	mov    al,ds:0xf55333c9
  41a4b3:	fs add eax,0x97d08c1d
  41a4b9:	jns    0x41a4e7
  41a4bb:	mov    al,ds:0x91f8a9ec
  41a4c0:	leave  
  41a4c1:	inc    esi
  41a4c2:	mov    ecx,0x7621289e
  41a4c7:	inc    esp
  41a4c8:	das    
  41a4c9:	inc    ecx
  41a4ca:	scas   eax,DWORD PTR es:[edi]
  41a4cb:	mov    edi,0xab2e7bb0
  41a4d0:	mov    cl,0xb0
  41a4d2:	xchg   edi,eax
  41a4d3:	sub    esi,edx
  41a4d5:	addr16 mov dl,0xf9
  41a4d8:	mov    edi,0x12f670a7
  41a4dd:	and    al,BYTE PTR [ebp+0x39]
  41a4e0:	dec    ebp
  41a4e1:	adc    bl,al
  41a4e3:	lods   eax,DWORD PTR ds:[esi]
  41a4e4:	out    dx,eax
  41a4e5:	(bad)  
  41a4e6:	mov    bl,0x3
  41a4e8:	(bad)
  41a4eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ec:	push   eax
  41a4ed:	test   BYTE PTR [edi-0x7d496b0e],bh
  41a4f3:	mov    eax,ds:0x4d4ad6a5
  41a4f8:	bound  esi,QWORD PTR [esi-0x724051ab]
  41a4fe:	pop    esp
  41a4ff:	and    edx,DWORD PTR [ecx+0x24725ba7]
  41a505:	adc    DWORD PTR [edx],ebp
  41a507:	retf   0x43ea
  41a50a:	aaa    
  41a50b:	rcr    BYTE PTR [ebx],cl
  41a50d:	sahf   
  41a50e:	jne    0x41a515
  41a510:	inc    esi
  41a511:	test   al,0x23
  41a513:	mov    dl,0x3
  41a515:	and    DWORD PTR [edi-0x72ee1691],0x3d
  41a51c:	std    
  41a51d:	mov    bl,0x20
  41a51f:	xchg   ebx,eax
  41a520:	lods   eax,DWORD PTR ds:[esi]
  41a521:	test   eax,0x6ab1389e
  41a526:	test   al,0x3b
  41a528:	jno    0x41a554
  41a52a:	mov    al,ds:0xb119eabd
  41a52f:	add    ah,BYTE PTR [esi]
  41a531:	(bad)  
  41a532:	jae    0x41a4c1
  41a534:	fimul  WORD PTR [ecx-0x6c]
  41a537:	jo     0x41a51d
  41a539:	mov    esi,?
  41a53b:	add    BYTE PTR [edi-0x34],al
  41a53e:	neg    bl
  41a540:	popf   
  41a541:	lds    esi,FWORD PTR [edx-0x12]
  41a544:	and    BYTE PTR [ebx+0x3ebba514],0xb4
  41a54b:	pop    eax
  41a54c:	pop    edx
  41a54d:	push   eax
  41a54f:	mul    BYTE PTR [ebp+0x7f]
  41a552:	loopne 0x41a4da
  41a554:	ins    BYTE PTR es:[edi],dx
  41a555:	(bad)  
  41a556:	stos   DWORD PTR es:[edi],eax
  41a557:	repz pop esp
  41a559:	std    
  41a55a:	fmul   DWORD PTR [eax+0x4]
  41a55d:	imul   edi,DWORD PTR [edi+0x27aa52ac],0xffffffd4
  41a564:	ret    0xe7ef
  41a567:	out    dx,eax
  41a568:	sbb    ah,BYTE PTR [esi]
  41a56a:	jecxz  0x41a52e
  41a56c:	call   0xd434beb4
  41a571:	mov    DWORD PTR [esp+edx*2+0x12],ebp
  41a575:	xor    al,0xaf
  41a577:	cmp    al,0x8b
  41a579:	rol    DWORD PTR [edi-0x5a],0x5a
  41a57d:	fsub   DWORD PTR [esi+0x21]
  41a580:	push   ebp
  41a581:	ror    edi,1
  41a583:	les    esi,FWORD PTR [eax]
  41a585:	shl    DWORD PTR [ecx+0x6f546dac],cl
  41a58b:	mov    esi,0x2e1a11ba
  41a590:	data16 arpl WORD PTR [eax],cx
  41a593:	jmp    0xc6fe:0x6ffc81f
  41a59a:	pushf  
  41a59b:	loope  0x41a555
  41a59d:	or     eax,0x67689726
  41a5a2:	add    cl,bh
  41a5a4:	pop    ebp
  41a5a5:	jmp    0x26eba376
  41a5aa:	sub    BYTE PTR [edi+0x14],al
  41a5ad:	xlat   BYTE PTR ds:[ebx]
  41a5ae:	and    eax,0x9a13d435
  41a5b3:	call   0xcd10f5c4
  41a5b8:	or     esi,DWORD PTR [esi-0xa8b828e]
  41a5be:	cwde   
  41a5bf:	push   esi
  41a5c0:	mov    edx,0x64e4587b
  41a5c5:	bound  edi,QWORD PTR [ecx+eax*1+0x12]
  41a5c9:	lds    ebp,FWORD PTR [eax-0xd]
  41a5cc:	jno    0x41a597
  41a5ce:	aam    0xc2
  41a5d0:	sbb    esi,ebx
  41a5d2:	sbb    dl,BYTE PTR [eax-0x7c657416]
  41a5d8:	popa   
  41a5d9:	data16 test BYTE PTR [edi+0x6b4fc328],dh
  41a5e0:	shl    BYTE PTR [esp+edx*1],0x1a
  41a5e4:	xor    al,0xeb
  41a5e6:	cdq    
  41a5e7:	xchg   ebx,eax
  41a5e8:	xchg   BYTE PTR fs:[ebp-0xe45c98f],al
  41a5ef:	mov    ecx,0x92a49910
  41a5f4:	sbb    dh,cl
  41a5f6:	dec    edx
  41a5f7:	push   cs
  41a5f8:	jne    0x41a640
  41a5fa:	icebp  
  41a5fb:	in     al,0x99
  41a5fd:	je     0x41a5b5
  41a5ff:	push   esi
  41a600:	jbe    0x41a630
  41a602:	adc    al,0x4a
  41a604:	js     0x41a660
  41a606:	jle    0x41a5de
  41a608:	in     eax,0xe8
  41a60a:	bnd jno 0x41a5fc
  41a60d:	(bad)  
  41a60e:	lods   al,BYTE PTR ds:[esi]
  41a60f:	sti    
  41a610:	lods   eax,DWORD PTR ds:[esi]
  41a611:	fdiv   QWORD PTR [ebx+0x6]
  41a614:	enter  0x79ea,0xa
  41a618:	mov    edi,0xcc889e1d
  41a61d:	arpl   WORD PTR [edi+esi*1-0x14056b7a],bp
  41a624:	test   BYTE PTR [esi],ah
  41a626:	xchg   ecx,eax
  41a627:	jp     0x41a606
  41a629:	add    DWORD PTR [ebx],ecx
  41a62b:	mov    dh,0x9e
  41a62d:	hlt    
  41a62e:	pop    ss
  41a62f:	shl    DWORD PTR [esi-0x2a],0xb0
  41a633:	cwde   
  41a634:	rcl    BYTE PTR [edx+ebx*2+0x6a],1
  41a638:	pop    eax
  41a639:	enter  0xfafe,0x41
  41a63d:	ss dec edx
  41a63f:	test   al,0x69
  41a641:	enter  0xc7d4,0x77
  41a645:	jmp    0x8c719e4f
  41a64a:	dec    edi
  41a64b:	test   BYTE PTR [ebp-0x18],ch
  41a64e:	mov    bl,0xa5
  41a650:	clc    
  41a651:	dec    edi
  41a652:	xchg   ebx,eax
  41a653:	pop    eax
  41a654:	jmp    0x1be5:0x9fa6a24c
  41a65b:	fwait
  41a65c:	loope  0x41a6ac
  41a65e:	test   DWORD PTR [edi-0x4b891d10],esp
  41a664:	mov    dl,0x26
  41a666:	push   ss
  41a667:	push   ecx
  41a668:	sub    dl,BYTE PTR [edi+0x54d99cd6]
  41a66e:	popa   
  41a66f:	push   ecx
  41a670:	(bad)  
  41a671:	mov    ecx,DWORD PTR [esi+edx*1]
  41a674:	mov    esp,0x1bf2cbd7
  41a679:	enter  0xa7c6,0x1e
  41a67d:	(bad)  
  41a67e:	or     al,0xf0
  41a680:	xchg   ebx,eax
  41a681:	in     al,dx
  41a682:	nop
  41a683:	fwait
  41a684:	mov    cl,0x2b
  41a686:	ror    DWORD PTR [ebx],0x81
  41a689:	pop    ecx
  41a68a:	mov    ecx,0x810ab5aa
  41a68f:	sbb    ecx,DWORD PTR [eax+0x785210a6]
  41a695:	jb     0x41a706
  41a697:	inc    ecx
  41a698:	sbb    ebp,DWORD PTR [ecx]
  41a69a:	popf   
  41a69b:	jecxz  0x41a70b
  41a69d:	mov    ds:0x8b421ba2,al
  41a6a2:	je     0x41a68e
  41a6a4:	pop    esi
  41a6a5:	jns    0x41a65b
  41a6a7:	pushf  
  41a6a8:	cmp    edx,eax
  41a6aa:	push   esp
  41a6ab:	lds    esp,FWORD PTR [edi]
  41a6ad:	jle    0x41a72a
  41a6af:	jno    0x41a65b
  41a6b1:	lea    esi,[ebx]
  41a6b3:	add    ah,bl
  41a6b5:	pop    esi
  41a6b6:	push   edi
  41a6b7:	out    0x9,eax
  41a6b9:	mov    DWORD PTR [edx+0x3a],ebp
  41a6bc:	mov    ebx,0x466c0269
  41a6c1:	fild   WORD PTR ds:0x4d351959
  41a6c8:	ss xor al,0xd5
  41a6cb:	bound  esp,QWORD PTR [edx+0xf3931b0]
  41a6d1:	inc    ebp
  41a6d2:	or     BYTE PTR [ebp+0x4b],bl
  41a6d5:	imul   ecx,DWORD PTR [edx-0x8],0xf76854b
  41a6dc:	jmp    0x22ff0a66
  41a6e1:	retf   
  41a6e2:	and    BYTE PTR [edx],al
  41a6e4:	adc    eax,ebp
  41a6e6:	push   ebx
  41a6e7:	jb     0x41a6d8
  41a6e9:	push   0xf5042bb0
  41a6ee:	js     0x41a70e
  41a6f0:	fldenv [edx]
  41a6f2:	inc    ecx
  41a6f3:	in     eax,dx
  41a6f4:	(bad)  
  41a6f5:	call   0xfa1046c9
  41a6fa:	sbb    al,0xb9
  41a6fc:	adc    BYTE PTR [ebp+0x48],0xd7
  41a700:	adc    al,0x98
  41a702:	fstp   DWORD PTR [ebp-0x21]
  41a705:	fld    TBYTE PTR [ebx]
  41a707:	fdivrp st(7),st
  41a709:	xor    al,0x25
  41a70b:	mov    edx,0x99e44c96
  41a710:	aad    0xc0
  41a712:	pop    esi
  41a713:	or     DWORD PTR [eax-0x37],ebp
  41a716:	adc    eax,0x985af4aa
  41a71b:	repz jg 0x41a738
  41a71e:	pop    esp
  41a71f:	out    dx,al
  41a720:	mov    edi,0x27dd8ef7
  41a725:	jno    0x41a6d5
  41a727:	lds    ebx,FWORD PTR [edx-0x25]
  41a72a:	jle    0x41a6ac
  41a72c:	or     DWORD PTR [ecx+0x5b376f6e],esp
  41a732:	repnz sbb DWORD PTR [edi+eax*8+0x7487e102],eax
  41a73a:	in     eax,0x6e
  41a73c:	jno    0x41a730
  41a73e:	jns    0x41a793
  41a740:	enter  0x75cd,0xd
  41a744:	ins    DWORD PTR es:[edi],dx
  41a745:	fisubr DWORD PTR [ebp-0x47]
  41a748:	sar    BYTE PTR [ecx+0x3],0x15
  41a74c:	(bad)  
  41a74d:	mov    eax,ds:0xf4794feb
  41a752:	std    
  41a753:	fs aaa 
  41a755:	adc    edi,edx
  41a757:	xchg   ecx,eax
  41a758:	jnp    0x41a765
  41a75a:	data16 das 
  41a75c:	push   esp
  41a75d:	test   eax,0x8efc8b26
  41a762:	mov    bh,0x45
  41a764:	lods   al,BYTE PTR ds:[esi]
  41a765:	cwd    
  41a767:	xchg   BYTE PTR [ecx-0x7c9002c],bl
  41a76d:	mov    eax,DWORD PTR [edx+0x3fe8c130]
  41a773:	ds data16 lahf 
  41a776:	push   0xffffffc3
  41a778:	ins    BYTE PTR es:[edi],dx
  41a779:	and    DWORD PTR ds:0xb3fdbc21,esp
  41a77f:	or     ebx,DWORD PTR [eax+edi*2]
  41a782:	or     edi,DWORD PTR [esi+0x61c41440]
  41a788:	fst    DWORD PTR [eax-0x48]
  41a78b:	push   esi
  41a78c:	aaa    
  41a78d:	xlat   BYTE PTR ds:[ebx]
  41a78e:	mov    ds:0x2e0d8f87,al
  41a793:	loop   0x41a7ca
  41a795:	int    0xac
  41a797:	inc    DWORD PTR [esp+ebx*4-0x646b55bf]
  41a79e:	ret    0x8866
  41a7a1:	lods   eax,DWORD PTR ds:[esi]
  41a7a2:	mov    DWORD PTR [ebx+0x6d],ebp
  41a7a5:	jmp    0x5be26b5f
  41a7aa:	jmp    0x7a39fb5c
  41a7af:	aaa    
  41a7b0:	in     eax,0x65
  41a7b2:	xor    al,0x77
  41a7b4:	push   esi
  41a7b5:	repz shr BYTE PTR [ecx],cl
  41a7b8:	jne    0x41a7a8
  41a7ba:	add    al,0xc0
  41a7bc:	push   ebx
  41a7bd:	and    bl,dh
  41a7bf:	data16 gs or ah,ch
  41a7c3:	push   0x6e
  41a7c5:	outs   dx,BYTE PTR ds:[esi]
  41a7c6:	sub    BYTE PTR [esi+0x3a1ecf9a],0x6e
  41a7cd:	or     eax,0x28869d1e
  41a7d2:	mov    DWORD PTR [ebp+0x69],edx
  41a7d5:	in     al,0x3c
  41a7d7:	push   DWORD PTR gs:[ecx-0x30]
  41a7db:	loopne 0x41a7b3
  41a7dd:	rcl    BYTE PTR [esp+ecx*1+0x13],0xdd
  41a7e2:	push   ds
  41a7e3:	outs   dx,BYTE PTR ds:[esi]
  41a7e4:	add    edx,DWORD PTR [eax]
  41a7e6:	adc    DWORD PTR [ebp+0x37],eax
  41a7e9:	push   ds
  41a7ea:	dec    esi
  41a7eb:	and    BYTE PTR [edx+0x53],0xf8
  41a7ef:	sub    DWORD PTR [eax],eax
  41a7f1:	jbe    0x41a80a
  41a7f3:	jo     0x41a78e
  41a7f5:	fcomp  DWORD PTR [edx-0x5b]
  41a7f8:	mov    edx,0x76f2dbd9
  41a7fd:	mul    DWORD PTR [edx+ebp*8]
  41a800:	xor    BYTE PTR [eax-0x61662f1d],dl
  41a806:	int    0xf3
  41a808:	mov    ebx,fs
  41a80a:	out    0x5f,eax
  41a80c:	pop    es
  41a80d:	dec    edx
  41a80e:	or     BYTE PTR [edx+0x3f],0x89
  41a812:	or     BYTE PTR [edi+ebp*1+0x1e56bdc],dl
  41a819:	(bad)  
  41a81a:	mov    ch,0xdb
  41a81c:	and    al,0xa7
  41a81e:	idiv   esi
  41a820:	xchg   BYTE PTR [ebp+0x2e8b4785],al
  41a826:	call   0xc07:0x8787b871
  41a82d:	pop    esp
  41a82e:	or     DWORD PTR [ebx+0x7fa9d1b2],ebp
  41a834:	std    
  41a835:	add    cl,BYTE PTR [edx]
  41a837:	dec    edx
  41a838:	pop    esp
  41a839:	cmp    DWORD PTR [edx-0x9],0x5c
  41a83d:	add    bl,BYTE PTR [ebp-0x22ffbc86]
  41a843:	push   0x7e
  41a845:	sahf   
  41a846:	cld    
  41a847:	lahf   
  41a848:	sub    DWORD PTR [edi],ecx
  41a84a:	or     eax,DWORD PTR [esi+0x4e]
  41a84d:	cmp    BYTE PTR [esi+0x4d6c3385],0x74
  41a854:	push   esp
  41a855:	aaa    
  41a856:	hlt    
  41a857:	retf   
  41a858:	cmp    ecx,esi
  41a85a:	cmp    edi,DWORD PTR [ebx+0x3b164669]
  41a860:	push   edi
  41a861:	sub    BYTE PTR [edi-0x5],al
  41a864:	cli    
  41a865:	ins    BYTE PTR es:[edi],dx
  41a866:	mov    esp,0x31271fdf
  41a86b:	and    bl,ah
  41a86d:	sub    al,0x10
  41a86f:	test   al,0x9f
  41a871:	lock dec edx
  41a873:	outs   dx,BYTE PTR ds:[esi]
  41a874:	in     eax,dx
  41a875:	pop    ecx
  41a876:	pop    es
  41a877:	repz jge 0x41a894
  41a87a:	push   0x63d9ad6b
  41a87f:	dec    ebp
  41a880:	int3   
  41a881:	ret    
  41a882:	ret    0x25c4
  41a885:	add    ebp,edi
  41a887:	(bad)  
  41a889:	bound  ebp,QWORD PTR [esi-0x4]
  41a88c:	jo     0x41a8e8
  41a88e:	outs   dx,BYTE PTR ds:[esi]
  41a88f:	out    dx,eax
  41a890:	imul   ebp,DWORD PTR [edi+eiz*8-0x65],0xdc6016ec
  41a898:	mov    al,ds:0xddd878d4
  41a89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a89e:	pop    DWORD PTR [edi]
  41a8a0:	sub    ah,ch
  41a8a2:	sahf   
  41a8a3:	dec    eax
  41a8a4:	jmp    0x41a8cc
  41a8a6:	mov    eax,ds:0xbeb1ab59
  41a8ab:	bound  ecx,QWORD PTR [edi-0x7e0cb7ff]
  41a8b1:	shl    BYTE PTR ds:[esi-0x34],0x73
  41a8b6:	test   DWORD PTR [esi-0x23871b7],ebx
  41a8bc:	jg     0x41a852
  41a8be:	inc    ebp
  41a8bf:	pushf  
  41a8c0:	and    al,0xfc
  41a8c2:	push   eax
  41a8c3:	outs   dx,DWORD PTR ds:[esi]
  41a8c4:	out    dx,eax
  41a8c5:	shl    BYTE PTR [ecx+0x52],cl
  41a8c8:	cmc    
  41a8c9:	stos   DWORD PTR es:[edi],eax
  41a8ca:	iret   
  41a8cb:	mov    ebx,0xc7bd1afd
  41a8d0:	call   0x2800:0x104db931
  41a8d7:	cli    
  41a8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8d9:	push   ss
  41a8da:	mov    edi,0xe7c48da2
  41a8df:	mov    ah,0xc9
  41a8e1:	out    dx,al
  41a8e2:	nop
  41a8e3:	jmp    FWORD PTR [ebp-0x71283d8f]
  41a8e9:	mov    bl,0x4b
  41a8eb:	jb     0x41a886
  41a8ed:	dec    edi
  41a8ee:	add    BYTE PTR [eax-0x1f49b03a],bl
  41a8f4:	outs   dx,BYTE PTR ds:[esi]
  41a8f5:	mov    edx,0x8c5f5326
  41a8fa:	add    DWORD PTR [ebp-0x423da54b],0x927dee88
  41a904:	lds    esp,FWORD PTR [eax]
  41a906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a907:	loope  0x41a94b
  41a909:	sub    BYTE PTR [ecx-0x70],0x39
  41a90d:	jecxz  0x41a972
  41a90f:	or     dl,dh
  41a911:	scas   eax,DWORD PTR es:[edi]
  41a912:	jo     0x41a8ef
  41a914:	popa   
  41a915:	pop    ecx
  41a916:	outs   dx,BYTE PTR ds:[esi]
  41a917:	fadd   DWORD PTR ss:[ebx]
  41a91a:	lock pop es
  41a91c:	push   0x51
  41a91e:	xor    DWORD PTR [ebx-0xecac04e],ecx
  41a924:	in     al,dx
  41a925:	pop    ecx
  41a926:	aaa    
  41a927:	sub    DWORD PTR fs:[edx-0x76d98464],eax
  41a92e:	aam    0xef
  41a930:	lea    edi,cs:[eax+eax*8+0x3e492a33]
  41a938:	in     al,dx
  41a939:	sbb    ah,BYTE PTR [esi+edx*2]
  41a93c:	mov    BYTE PTR [eax-0x67050559],ah
  41a942:	sub    al,0x2c
  41a944:	int3   
  41a945:	xchg   edi,eax
  41a946:	(bad)  
  41a947:	push   esi
  41a948:	inc    esp
  41a949:	push   0x66
  41a94b:	pop    edx
  41a94c:	and    eax,0x1b073ed9
  41a951:	ficomp WORD PTR [esi]
  41a953:	or     ch,BYTE PTR [eax]
  41a955:	xor    DWORD PTR [ebp+ebx*1+0x4e],esi
  41a959:	shl    DWORD PTR [ebp+0x7c],0x1
  41a95d:	das    
  41a95e:	push   edx
  41a95f:	jne    0x41a96f
  41a961:	dec    ebx
  41a962:	xchg   ebp,eax
  41a963:	adc    BYTE PTR [edi+0x66],dh
  41a966:	mov    al,ds:0x9335ed53
  41a96b:	xor    eax,0x5e7bd475
  41a970:	mov    esp,0xa5d0c161
  41a975:	int3   
  41a976:	cwde   
  41a977:	lahf   
  41a978:	and    cl,BYTE PTR [ecx-0x45]
  41a97b:	sti    
  41a97c:	jecxz  0x41a93a
  41a97e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a97f:	xchg   ebp,eax
  41a980:	mov    edx,0x19cb6320
  41a985:	pop    esi
  41a986:	push   0x594958a3
  41a98b:	cmp    bh,BYTE PTR [esi+0x5]
  41a98e:	mov    edi,0x275de2bf
  41a993:	(bad)  
  41a994:	in     eax,0x76
  41a996:	sub    cl,dh
  41a998:	mov    cl,0xd1
  41a99a:	scas   eax,DWORD PTR es:[edi]
  41a99b:	mov    BYTE PTR [edx],dl
  41a99d:	and    BYTE PTR [edi-0x11],ch
  41a9a0:	push   cs
  41a9a1:	add    eax,0xc103b252
  41a9a6:	retf   
  41a9a7:	test   eax,0xaae7607
  41a9ac:	dec    eax
  41a9ad:	push   eax
  41a9ae:	and    al,0x45
  41a9b0:	fdivr  QWORD PTR [edx+0x72]
  41a9b3:	jmp    0x41a9cf
  41a9b5:	mov    ds:0x7001e89f,al
  41a9ba:	inc    ebp
  41a9bb:	ss sub al,0xa2
  41a9be:	scas   al,BYTE PTR es:[edi]
  41a9bf:	push   eax
  41a9c0:	or     esp,ebp
  41a9c2:	mov    ebp,DWORD PTR [ebx-0x43705b00]
  41a9c8:	pop    ecx
  41a9c9:	inc    edi
  41a9ca:	lahf   
  41a9cb:	dec    ebp
  41a9cc:	cmc    
  41a9cd:	mov    ecx,0xcc00f4c5
  41a9d2:	fwait
  41a9d3:	adc    al,0x7a
  41a9d5:	bound  edi,QWORD PTR [ebx+0x213b590a]
  41a9db:	sbb    al,BYTE PTR [eax+ecx*2]
  41a9de:	adc    eax,0x4b347de0
  41a9e3:	hlt    
  41a9e4:	mov    eax,0x597a49c
  41a9e9:	sbb    ecx,eax
  41a9eb:	popf   
  41a9ec:	push   esp
  41a9ed:	jne    0x41a990
  41a9ef:	fiadd  DWORD PTR [edi]
  41a9f1:	or     ah,ah
  41a9f3:	in     eax,0xc5
  41a9f5:	es (bad) 
  41a9f8:	shl    BYTE PTR [edx+0x1d],cl
  41a9fb:	jl     0x41aa44
  41a9fd:	adc    BYTE PTR [edx+0x1f61f5fc],bh
  41aa03:	ins    DWORD PTR es:[edi],dx
  41aa04:	outs   dx,DWORD PTR ds:[esi]
  41aa05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa06:	jns    0x41a9e7
  41aa08:	mov    BYTE PTR [edi-0x11],dl
  41aa0b:	inc    edi
  41aa0c:	sahf   
  41aa0d:	mov    ds:0xc447a5b,eax
  41aa12:	pushf  
  41aa13:	dec    edx
  41aa14:	push   cs
  41aa15:	fild   DWORD PTR [esp+eax*8+0x702afcd7]
  41aa1c:	sbb    al,0xe8
  41aa1e:	mov    ds,WORD PTR [esi+0x9]
  41aa21:	xchg   esi,eax
  41aa22:	pushf  
  41aa23:	jp     0x41aa4a
  41aa25:	(bad)  
  41aa26:	sbb    DWORD PTR [ebp-0x2eee3ac0],ecx
  41aa2c:	rcl    DWORD PTR [eax],0x69
  41aa2f:	pushf  
  41aa30:	mov    bh,0x7c
  41aa32:	jg     0x41aa6f
  41aa34:	ret    
  41aa35:	sar    BYTE PTR ds:0xea3a1fd6,cl
  41aa3b:	loopne 0x41a9ea
  41aa3d:	bound  edi,QWORD PTR [edx]
  41aa3f:	push   es
  41aa40:	mov    esp,0x81bc5052
  41aa45:	pushf  
  41aa46:	and    cl,bl
  41aa48:	xor    DWORD PTR [ebp+0x6089d825],ecx
  41aa4e:	aaa    
  41aa4f:	mov    bl,0xb4
  41aa51:	mov    ds:0x6239c2fc,eax
  41aa56:	rol    esi,1
  41aa58:	test   al,0xf0
  41aa5a:	rol    ebp,1
  41aa5c:	pop    ebp
  41aa5d:	pusha  
  41aa5e:	in     al,dx
  41aa5f:	(bad)  
  41aa60:	aam    0xf8
  41aa62:	xchg   ecx,eax
  41aa63:	mov    ebx,0xe475b6bf
  41aa68:	or     ch,BYTE PTR [edi-0x7b845d5e]
  41aa6e:	out    0x2a,eax
  41aa70:	les    esp,FWORD PTR [edx+eax*4+0x56]
  41aa74:	in     al,0xee
  41aa76:	mov    ebx,0xa85e70f8
  41aa7b:	push   esi
  41aa7c:	mov    edi,edi
  41aa7e:	ins    BYTE PTR es:[edi],dx
  41aa7f:	xchg   esp,eax
  41aa80:	fisttp QWORD PTR [eax]
  41aa82:	mov    al,ds:0xa4404482
  41aa87:	adc    edx,edi
  41aa89:	repz ja 0x41aa45
  41aa8c:	sti    
  41aa8d:	xchg   ebx,eax
  41aa8e:	or     eax,0xebae3f66
  41aa93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa94:	inc    ecx
  41aa95:	jmp    0xfcd0b0b1
  41aa9a:	popf   
  41aa9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa9c:	cli    
  41aa9d:	cmp    edx,edx
  41aa9f:	xchg   esp,eax
  41aaa0:	jb     0x41ab03
  41aaa2:	adc    ebp,DWORD PTR [edi-0x51]
  41aaa5:	jns    0x41aa68
  41aaa7:	cmp    eax,ebx
  41aaa9:	dec    ecx
  41aaaa:	or     dh,BYTE PTR [ebx-0x4a]
  41aaad:	inc    BYTE PTR [ebp*2+0x4f58827e]
  41aab4:	inc    eax
  41aab5:	(bad)  
  41aab6:	jae    0x41aabc
  41aab8:	pop    ss
  41aab9:	retf   
  41aaba:	pop    ss
  41aabb:	dec    edi
  41aabc:	dec    edx
  41aabd:	inc    edi
  41aabe:	jmp    0x41aaf6
  41aac0:	pop    edi
  41aac1:	adc    al,0x9a
  41aac3:	call   0x6179d02b
  41aac8:	aaa    
  41aac9:	mov    dl,0xca
  41aacb:	push   ebp
  41aacc:	xor    eax,0xf5076116
  41aad1:	mov    ds:0x540c41a1,al
  41aad6:	mov    dh,0x7a
  41aad8:	xor    DWORD PTR [esp+eax*2+0x72],eax
  41aadc:	inc    edi
  41aadd:	adc    BYTE PTR [esi-0x7de3466],dh
  41aae3:	in     al,0x1f
  41aae5:	inc    esp
  41aae6:	popf   
  41aae7:	adc    al,0xfa
  41aae9:	int3   
  41aaea:	jl     0x41aaa6
  41aaec:	sbb    eax,0x9d5eb1d6
  41aaf1:	mov    ecx,cs
  41aaf3:	xchg   DWORD PTR [ebp+ebx*2-0x260ab05d],eax
  41aafa:	dec    esi
  41aafb:	(bad)  
  41aafc:	and    al,0xba
  41aafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab00:	aas    
  41ab01:	daa    
  41ab02:	pop    es
  41ab03:	xor    BYTE PTR [edx-0x7f1885ee],bl
  41ab09:	adc    al,0xe1
  41ab0b:	cld    
  41ab0c:	into   
  41ab0d:	fsubr  QWORD PTR [ebp+0x1cfee3d0]
  41ab13:	push   0x673affe5
  41ab18:	or     DWORD PTR [eax-0x2d713b36],ebx
  41ab1e:	mov    ds:0xcabacbd4,eax
  41ab23:	imul   esp,DWORD PTR [ebx+0x11],0x46dfb5d7
  41ab2a:	xchg   ecx,eax
  41ab2b:	fs dec edi
  41ab2d:	xor    BYTE PTR ds:0xecd2eb9e,bl
  41ab33:	mov    ebp,0x5ca5d31c
  41ab38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab39:	sub    ecx,DWORD PTR [esi]
  41ab3b:	mov    ds,WORD PTR [ecx-0x2d]
  41ab3e:	cmp    DWORD PTR [edi-0x26bd472],0x63
  41ab45:	rol    DWORD PTR [edx],cl
  41ab47:	aaa    
  41ab48:	adc    al,cl
  41ab4a:	dec    eax
  41ab4b:	xchg   edx,ebx
  41ab4d:	xchg   ebp,eax
  41ab4e:	jmp    0x958a64c3
  41ab53:	rol    BYTE PTR [ecx+0x7e],0xc3
  41ab57:	jp     0x41ab0f
  41ab59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab5a:	test   eax,0x28924cbe
  41ab5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab60:	ret    0xcbaf
  41ab63:	out    0x8d,al
  41ab65:	cmp    al,0x70
  41ab67:	neg    BYTE PTR fs:[edi]
  41ab6a:	mov    dl,0x5
  41ab6c:	leave  
  41ab6d:	dec    esi
  41ab6e:	sti    
  41ab6f:	shl    DWORD PTR [ecx+ebp*2-0x31eabdba],cl
  41ab76:	shl    DWORD PTR [ecx-0x437fac74],1
  41ab7c:	aam    0x85
  41ab7e:	inc    ebx
  41ab7f:	mov    DWORD PTR [edx+0x37],eax
  41ab82:	inc    esi
  41ab83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab84:	mov    ebx,0x53fe8b08
  41ab89:	dec    ebp
  41ab8a:	jne    0x41ab0c
  41ab8c:	pop    ecx
  41ab8d:	arpl   WORD PTR [edx],di
  41ab8f:	fldenv [eax]
  41ab91:	add    DWORD PTR [edx],esi
  41ab93:	test   eax,0x4486a7ca
  41ab98:	pop    ebx
  41ab99:	pop    edx
  41ab9a:	stos   DWORD PTR es:[edi],eax
  41ab9b:	or     al,0xb2
  41ab9d:	ss add ah,0x53
  41aba1:	push   ecx
  41aba2:	and    esp,DWORD PTR [edi-0x51221c66]
  41aba8:	push   ecx
  41aba9:	and    BYTE PTR [edi-0x4af972e1],cl
  41abaf:	ss sub DWORD PTR gs:[ebp+0x3455cd4a],eax
  41abb7:	sbb    WORD PTR [edx-0x5335236b],0xdac7
  41abc0:	xchg   DWORD PTR [esi-0x29d22801],eax
  41abc6:	pop    es
  41abc7:	retf   0x7d4f
  41abca:	cmp    BYTE PTR [ebx-0x76efc4b4],dh
  41abd0:	shl    DWORD PTR [esi+0x60c6ae89],1
  41abd6:	nop
  41abd7:	mov    ds:0xb74a662f,al
  41abdc:	xchg   ebp,eax
  41abdd:	inc    edx
  41abde:	je     0x41ab7f
  41abe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe1:	into   
  41abe2:	mov    eax,0xa57adfb4
  41abe7:	hlt    
  41abe8:	jl     0x41ac23
  41abea:	repnz mov edx,0x95296de4
  41abf0:	mov    ah,0xe6
  41abf2:	in     al,0x3
  41abf4:	aam    0x5d
  41abf6:	iret   
  41abf7:	es and eax,0x826fe3b3
  41abfd:	ins    BYTE PTR es:[edi],dx
  41abfe:	out    dx,eax
  41abff:	mov    bh,0x4a
  41ac01:	imul   ebx,DWORD PTR [esi],0x5ebd203d
  41ac07:	imul   esp,DWORD PTR [eax+ebp*8-0x33],0x4a
  41ac0c:	sub    eax,0xdf7ac8e
  41ac11:	sub    bl,bh
  41ac13:	push   0x6d
  41ac15:	fistp  QWORD PTR [eax+ebp*1-0x32]
  41ac19:	pusha  
  41ac1a:	enter  0x1cf0,0xac
  41ac1e:	jb     0x41abe4
  41ac20:	mov    WORD PTR [ebx],?
  41ac22:	jg     0x41ac84
  41ac24:	pop    esp
  41ac25:	jbe    0x41abfe
  41ac27:	fcomp  QWORD PTR [eax-0x4a6713d]
  41ac2d:	in     al,0xe2
  41ac2f:	std    
  41ac30:	mov    dh,0xc5
  41ac32:	adc    DWORD PTR [edx+0x62],esi
  41ac35:	sub    edi,eax
  41ac37:	push   0x12
  41ac39:	pop    edi
  41ac3a:	cmc    
  41ac3b:	ror    ebx,cl
  41ac3d:	fisttp QWORD PTR [ecx+0x54]
  41ac40:	aas    
  41ac41:	cmp    al,0xd7
  41ac43:	adc    ecx,DWORD PTR [esi+0x3d815c0d]
  41ac49:	xchg   ecx,eax
  41ac4a:	aad    0x47
  41ac4c:	and    eax,0x5f0f627b
  41ac51:	xchg   esp,eax
  41ac52:	fisubr DWORD PTR [edx+0x5ceeeeb2]
  41ac58:	das    
  41ac59:	je     0x41accb
  41ac5b:	sbb    DWORD PTR [ebp+0x665f5264],ecx
  41ac61:	add    eax,0xcb97d01c
  41ac66:	int3   
  41ac67:	retf   0xcda2
  41ac6a:	dec    edi
  41ac6b:	cld    
  41ac6c:	daa    
  41ac6d:	cmp    ecx,DWORD PTR ds:0xf66cd1a3
  41ac73:	jge    0x41ac35
  41ac75:	jecxz  0x41acaa
  41ac77:	and    DWORD PTR [esi],edi
  41ac79:	mov    dl,BYTE PTR [ebx+0x4e3d6e5e]
  41ac7f:	and    esp,DWORD PTR [ecx]
  41ac81:	cli    
  41ac82:	dec    eax
  41ac83:	adc    eax,0x90424a1c
  41ac88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac89:	mov    al,ds:0x6b35e191
  41ac8e:	not    BYTE PTR [esi]
  41ac90:	loope  0x41acc7
  41ac92:	cwde   
  41ac93:	adc    dl,BYTE PTR [ebx]
  41ac95:	mov    ss:0x6cece3e5,al
  41ac9b:	mov    ebp,0x59302228
  41aca0:	fsub   st(5),st
  41aca2:	pop    esp
  41aca3:	xchg   ebp,eax
  41aca4:	lea    esp,[esi+0x584685bb]
  41acaa:	arpl   WORD PTR [ebx+0x3431215d],cx
  41acb0:	shl    esp,0x38
  41acb3:	cmp    DWORD PTR [eax+0x4808ae02],0xfffffff0
  41acba:	scas   eax,DWORD PTR es:[edi]
  41acbb:	mov    esi,DWORD PTR [ebp-0x26]
  41acbe:	div    BYTE PTR [edi]
  41acc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc1:	xchg   ecx,edi
  41acc3:	jg     0x41ad21
  41acc5:	add    ch,bl
  41acc7:	sbb    al,BYTE PTR [edx]
  41acc9:	sbb    esi,DWORD PTR [ebx-0x4c]
  41accc:	push   esp
  41accd:	cli    
  41acce:	add    esp,eax
  41acd0:	jbe    0x41ad03
  41acd2:	(bad)  
  41acd3:	(bad)  
  41acd5:	cs mov ecx,0xef1a682e
  41acdb:	inc    edi
  41acdc:	loopne 0x41acb1
  41acde:	mov    cl,BYTE PTR [esi]
  41ace0:	js     0x41acef
  41ace2:	sub    eax,0xe11e9649
  41ace7:	dec    esp
  41ace8:	in     eax,dx
  41ace9:	int3   
  41acea:	and    dl,ah
  41acec:	cmp    al,0xf5
  41acee:	lahf   
  41acef:	mov    ds:0x6fdf57c9,al
  41acf4:	adc    al,0x5
  41acf6:	clc    
  41acf7:	xor    ebp,esp
  41acf9:	or     dl,BYTE PTR ds:0x4a756069
  41acff:	imul   ebx,esp,0x7a
  41ad02:	int    0x82
  41ad04:	(bad)  
  41ad05:	cdq    
  41ad06:	hlt    
  41ad07:	xor    BYTE PTR [edi-0x3eadb845],dl
  41ad0d:	sahf   
  41ad0e:	(bad)  
  41ad0f:	add    al,0xcd
  41ad11:	pop    di
  41ad13:	xor    DWORD PTR [eax+edx*4+0x1c04a4f9],0x1a
  41ad1b:	arpl   WORD PTR ds:0x1fc88337,cx
  41ad21:	mov    esi,0x90f2219
  41ad26:	mov    al,ds:0xf0dddeb3
  41ad2b:	into   
  41ad2c:	lock int 0xf7
  41ad2f:	pop    ebp
  41ad30:	ins    DWORD PTR es:[edi],dx
  41ad31:	data16 into 
  41ad33:	inc    ebx
  41ad34:	jns    0x41ad19
  41ad36:	mov    ebp,edx
  41ad38:	data16 mov ds:0x4743f666,al
  41ad3e:	je     0x41ad10
  41ad40:	stc    
  41ad41:	je     0x41ad97
  41ad43:	pop    ebx
  41ad44:	add    al,0x8d
  41ad46:	iret   
  41ad47:	jnp    0x41ad7c
  41ad49:	dec    ecx
  41ad4a:	(bad)  
  41ad4b:	sbb    edi,DWORD PTR [ebx]
  41ad4d:	loopne 0x41ad86
  41ad4f:	pop    ebp
  41ad50:	fadd   QWORD PTR [ebx-0xa53b4a]
  41ad56:	cs pop ds
  41ad58:	imul   edx,DWORD PTR [ecx+edx*2-0x71],0x5a
  41ad5d:	and    eax,0xac684d48
  41ad62:	popf   
  41ad63:	sbb    DWORD PTR [eax],ecx
  41ad65:	pusha  
  41ad66:	popa   
  41ad67:	inc    ebp
  41ad68:	popf   
  41ad69:	es adc cl,al
  41ad6c:	lahf   
  41ad6d:	or     edi,edx
  41ad6f:	sub    eax,0xc14024ad
  41ad74:	out    0xd6,al
  41ad76:	push   0x15939742
  41ad7b:	test   edx,ebp
  41ad7d:	pop    edx
  41ad7e:	addr16 push eax
  41ad80:	pop    ebp
  41ad81:	pop    eax
  41ad82:	pop    esi
  41ad83:	mov    bh,0x75
  41ad85:	call   0x1462:0x9fc08b34
  41ad8c:	push   cs
  41ad8d:	fcomp  QWORD PTR [edx]
  41ad8f:	iret   
  41ad90:	push   cs
  41ad91:	(bad)  
  41ad92:	push   ss
  41ad93:	jnp    0x41ad2b
  41ad95:	ret    0x6dcc
  41ad98:	xchg   edx,eax
  41ad99:	sub    eax,0x1406762f
  41ad9e:	push   esi
  41ad9f:	fs dec edi
  41ada1:	in     al,0x9e
  41ada3:	add    eax,0x982bf7d5
  41ada8:	xchg   ecx,esi
  41adaa:	push   ds
  41adab:	sbb    eax,0xfa35d6bb
  41adb0:	xchg   BYTE PTR [ebx+ebx*2+0x928d67e],dh
  41adb7:	mov    esi,0xa5617d12
  41adbc:	mov    ebx,0x3d73b98
  41adc1:	pushf  
  41adc2:	mov    edi,0x346fa15
  41adc7:	xchg   DWORD PTR [eax-0x6a],eax
  41adca:	sub    BYTE PTR [esp-0x4b],ch
  41adce:	mov    ds:0xe2bf7b96,al
  41add3:	rcr    DWORD PTR [esi-0x3d],1
  41add6:	rcl    DWORD PTR [eax],0x5c
  41add9:	cld    
  41adda:	(bad)  
  41addb:	in     eax,dx
  41addc:	je     0x41ae2f
  41adde:	sbb    al,0x89
  41ade0:	lods   eax,DWORD PTR ds:[esi]
  41ade1:	lods   eax,DWORD PTR ds:[esi]
  41ade2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade3:	hlt    
  41ade4:	cld    
  41ade5:	les    edx,FWORD PTR [ecx-0x7d]
  41ade8:	add    al,0x45
  41adea:	loop   0x41adf2
  41adec:	je     0x41adc1
  41adee:	jmp    0x11d2:0x3ec553f5
  41adf5:	or     al,0x35
  41adf7:	imul   ebp
  41adf9:	or     al,0x42
  41adfb:	js     0x41adb7
  41adfd:	fistp  WORD PTR [edx]
  41adff:	addr16 inc esi
  41ae01:	mov    bl,0xaf
  41ae03:	ret    
  41ae04:	shl    DWORD PTR [edx],0x78
  41ae07:	cmp    ah,bl
  41ae09:	mov    bl,0x3b
  41ae0b:	outs   dx,BYTE PTR ds:[esi]
  41ae0c:	ds push esi
  41ae0e:	cld    
  41ae0f:	jp     0x41add8
  41ae11:	mov    esp,0xc9c241ff
  41ae16:	xor    bh,BYTE PTR [esi+ebx*4+0x53]
  41ae1a:	adc    ch,ch
  41ae1c:	inc    edi
  41ae1d:	inc    ecx
  41ae1e:	iret   
  41ae1f:	cmp    al,0xed
  41ae21:	add    bl,BYTE PTR [eax-0x3d7578bf]
  41ae27:	dec    edx
  41ae28:	pop    ecx
  41ae29:	jne    0x41ae4c
  41ae2b:	jae    0x41ae8c
  41ae2d:	mov    al,ds:0xf597af40
  41ae32:	test   DWORD PTR [ecx-0x68],ebp
  41ae35:	and    DWORD PTR [eax],0x5918217d
  41ae3b:	repnz test edi,esi
  41ae3e:	mov    ebx,cs
  41ae40:	pop    esp
  41ae41:	out    dx,al
  41ae42:	test   eax,0xeba101ec
  41ae47:	xor    eax,0x26b6b47d
  41ae4c:	inc    ebx
  41ae4d:	cmp    eax,0xcd3355eb
  41ae52:	hlt    
  41ae53:	mov    edi,0xc3427c69
  41ae58:	(bad)  
  41ae59:	jle    0x41ae20
  41ae5b:	or     eax,0x3a2443ca
  41ae60:	add    cl,BYTE PTR [ecx+ebx*8]
  41ae63:	cli    
  41ae64:	test   eax,0x962c5036
  41ae69:	arpl   WORD PTR [edi-0x64],cx
  41ae6c:	adc    al,0xec
  41ae6e:	cmp    DWORD PTR [ebx],eax
  41ae70:	jne    0x41ae70
  41ae72:	not    BYTE PTR [ebx-0x7f63ebdd]
  41ae78:	iret   
  41ae79:	scas   eax,DWORD PTR es:[edi]
  41ae7a:	gs jmp 0x41ae29
  41ae7d:	pop    ds
  41ae7e:	xor    esp,DWORD PTR [ebx]
  41ae80:	push   ebp
  41ae81:	jge    0x41ae4a
  41ae83:	jl     0x41aec3
  41ae85:	aas    
  41ae86:	mov    ecx,0x5fd285f7
  41ae8b:	(bad)  
  41ae8c:	out    dx,al
  41ae8d:	dec    esp
  41ae8e:	cmp    ebx,DWORD PTR [esi-0x3321f8b8]
  41ae94:	(bad)  
  41ae95:	out    dx,eax
  41ae96:	lahf   
  41ae97:	jl     0x41ae8e
  41ae99:	jmp    0x3db4:0x1655ea03
  41aea0:	sub    BYTE PTR [edi-0x800a271],al
  41aea6:	sbb    eax,0x182a41db
  41aeab:	inc    ebp
  41aeac:	mov    ebx,0xf0bfc929
  41aeb1:	jmp    0x2f92:0x3cd91f9e
  41aeb8:	imul   ecx,DWORD PTR [ecx],0xe4951358
  41aebe:	retf   0x166f
  41aec1:	arpl   WORD PTR [edi-0x127efd13],dx
  41aec7:	aad    0x82
  41aec9:	mov    bl,0x39
  41aecb:	inc    esp
  41aecc:	xor    esi,ebp
  41aece:	push   edi
  41aecf:	xchg   ecx,eax
  41aed0:	lock shr DWORD PTR [esi+0x11],0xeb
  41aed5:	pusha  
  41aed6:	inc    eax
  41aed7:	push   es
  41aed8:	ins    DWORD PTR es:[edi],dx
  41aed9:	mov    dh,0x86
  41aedb:	jg     0x41ae7a
  41aedd:	(bad)  
  41aede:	cmc    
  41aedf:	sar    DWORD PTR [ebx-0x55],0x64
  41aee3:	inc    esi
  41aee4:	jmp    0x41af3d
  41aee6:	iret   
  41aee7:	cmp    edx,ecx
  41aee9:	retf   
  41aeea:	and    eax,0x4ea5ee78
  41aeef:	test   dh,bh
  41aef1:	push   ecx
  41aef2:	cld    
  41aef3:	adc    BYTE PTR [ecx],bl
  41aef5:	dec    edi
  41aef6:	lock outs dx,BYTE PTR ds:[esi]
  41aef8:	call   0x857b2f1f
  41aefd:	jg     0x41af67
  41aeff:	cmp    al,0x81
  41af01:	inc    ecx
  41af02:	cmp    eax,DWORD PTR [edx-0xb865417]
  41af08:	adc    al,0xab
  41af0a:	dec    edx
  41af0b:	mov    ebx,DWORD PTR [edi+0x43]
  41af0e:	jmp    0x65428707
  41af13:	stc    
  41af14:	mov    ebp,0x2e0e8d98
  41af19:	pusha  
  41af1a:	fwait
  41af1b:	in     al,0xc3
  41af1d:	cmp    BYTE PTR [ecx],cl
  41af1f:	dec    esi
  41af20:	in     al,dx
  41af21:	call   0xbc6d9e54
  41af26:	and    dh,BYTE PTR [ebx+ebp*1]
  41af29:	inc    esi
  41af2a:	add    edi,edx
  41af2c:	imul   eax,DWORD PTR [ebx+ecx*2-0x80]
  41af31:	sbb    BYTE PTR [ebx-0x153f2000],al
  41af37:	rcl    BYTE PTR [ecx+0x53],cl
  41af3a:	sub    ch,0x73
  41af3d:	sub    eax,DWORD PTR [ecx]
  41af3f:	into   
  41af40:	imul   esp,DWORD PTR [eax],0xc021942b
  41af46:	jae    0x41af63
  41af48:	sbb    eax,0xc432408c
  41af4d:	cwde   
  41af4e:	sbb    ah,BYTE PTR ds:0x35343f79
  41af54:	lods   al,BYTE PTR ds:[esi]
  41af55:	jo     0x41af9a
  41af57:	and    al,0x7a
  41af59:	in     eax,dx
  41af5a:	aaa    
  41af5b:	fnsave [eax+0x27db8f16]
  41af61:	xchg   edi,eax
  41af62:	das    
  41af63:	mov    al,ds:0xfb9946c0
  41af68:	arpl   bp,cx
  41af6a:	push   cs
  41af6b:	(bad)  
  41af6c:	ficom  WORD PTR [edi+0x41]
  41af6f:	lahf   
  41af70:	nop
  41af71:	mov    ch,0x16
  41af73:	aad    0xc
  41af75:	and    BYTE PTR [ebx+0x40b589c2],cl
  41af7b:	int    0xb6
  41af7d:	mov    ?,edi
  41af7f:	in     al,dx
  41af80:	aas    
  41af81:	mov    ch,0x25
  41af83:	retf   0x59a4
  41af86:	icebp  
  41af87:	and    al,0xa9
  41af89:	jnp    0x41afd0
  41af8b:	or     al,0xd4
  41af8d:	fdivrp st(2),st
  41af8f:	sbb    BYTE PTR [ecx+ebp*2+0x4ece6f76],ah
  41af96:	jle    0x41af3e
  41af98:	enter  0x516e,0xbf
  41af9c:	mov    ds:0xf26060ff,eax
  41afa1:	jp     0x41afb4
  41afa3:	mov    eax,ds:0x86ad92c9
  41afa8:	sbb    eax,0x5d8ea1b
  41afad:	lods   al,BYTE PTR ds:[esi]
  41afae:	rol    ecx,1
  41afb0:	js     0x41af8d
  41afb2:	aaa    
  41afb3:	push   edx
  41afb4:	and    edi,ebx
  41afb6:	and    al,0xc0
  41afb8:	hlt    
  41afb9:	cld    
  41afba:	dec    ebx
  41afbb:	mov    ebp,0x1a3e8aa
  41afc0:	test   DWORD PTR [edi-0x4a],ecx
  41afc3:	xchg   edi,eax
  41afc4:	aam    0xf4
  41afc6:	adc    eax,0x63dcc341
  41afcb:	pusha  
  41afcc:	add    eax,0xa4fa16b4
  41afd1:	inc    esp
  41afd2:	ror    DWORD PTR [edx+edi*8],0x43
  41afd6:	xor    eax,0x1d682ad2
  41afdb:	(bad)  
  41afdc:	fwait
  41afdd:	push   cs
  41afde:	inc    edx
  41afdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe0:	pop    ss
  41afe1:	jnp    0x41af69
  41afe3:	(bad)  
  41afe4:	(bad)  
  41afe5:	out    dx,al
  41afe6:	xchg   esp,eax
  41afe7:	push   ebx
  41afe8:	outs   dx,DWORD PTR ds:[esi]
  41afe9:	push   ebp
  41afea:	adc    esp,ebx
  41afec:	xor    bh,bh
  41afee:	adc    al,0x8f
  41aff0:	enter  0x3276,0x21
  41aff4:	aas    
  41aff5:	and    dl,BYTE PTR [ebp+0x43]
  41aff8:	xchg   esi,edi
  41affa:	or     bl,BYTE PTR [ebp+0x15339887]
  41b000:	(bad)  
  41b001:	ja     0x41b055
  41b003:	xor    al,0x20
  41b005:	repz dec edx
  41b008:	lock mov ds:0x9fe62805,eax
  41b00e:	mov    dh,0x8f
  41b010:	outs   dx,DWORD PTR ds:[esi]
  41b011:	test   eax,0xbec4dc33
  41b016:	dec    edi
  41b017:	xlat   BYTE PTR ds:[ebx]
  41b018:	xor    bl,ah
  41b01a:	cld    
  41b01b:	adc    edx,esi
  41b01d:	out    dx,eax
  41b01e:	test   BYTE PTR es:[ecx+0x76],0x2d
  41b023:	add    al,0x4b
  41b025:	push   cs
  41b026:	rcr    DWORD PTR [eax+edx*1-0x7f],0xd0
  41b02b:	das    
  41b02c:	inc    edi
  41b02d:	or     DWORD PTR [eax-0x2d86053e],eax
  41b033:	je     0x41afc6
  41b035:	adc    eax,0x3cd3a2db
  41b03a:	lahf   
  41b03b:	push   ecx
  41b03c:	pop    es
  41b03d:	(bad)  
  41b03e:	cvtdq2ps xmm7,XMMWORD PTR ds:0xaab8958f
  41b045:	arpl   WORD PTR [edi+eiz*4+0x204bd7b3],bp
  41b04c:	outs   dx,DWORD PTR ds:[esi]
  41b04d:	stos   BYTE PTR es:[edi],al
  41b04e:	jp     0x41b00d
  41b050:	sub    bl,BYTE PTR es:[eax]
  41b053:	or     ecx,DWORD PTR [ebp-0x2e5966c0]
  41b059:	dec    edx
  41b05a:	(bad)  
  41b05c:	dec    esp
  41b05d:	inc    ecx
  41b05e:	push   es
  41b05f:	stos   BYTE PTR es:[edi],al
  41b060:	cmc    
  41b061:	test   eax,0x829b8e8d
  41b066:	pushf  
  41b067:	mov    BYTE PTR [esp+esi*4],dl
  41b06a:	ins    BYTE PTR es:[edi],dx
  41b06b:	retf   
  41b06c:	push   esi
  41b06d:	xchg   DWORD PTR ds:0xa56b0247,ebx
  41b073:	jl     0x41b001
  41b075:	ins    BYTE PTR es:[edi],dx
  41b076:	add    eax,0x94e05056
  41b07b:	addr16 cld 
  41b07d:	cmc    
  41b07e:	lock push edx
  41b080:	ss mov bl,0xa9
  41b083:	popa   
  41b084:	and    esp,DWORD PTR [edi-0x2c]
  41b087:	jae    0x41b04d
  41b089:	cmova  edi,DWORD PTR ds:0xc794d6a9
  41b090:	(bad)  
  41b091:	out    0xb7,eax
  41b093:	(bad)  
  41b094:	fldenv [edi+0x2f6fa717]
  41b09a:	inc    ecx
  41b09b:	jbe    0x41b093
  41b09d:	mov    ecx,0x7807d069
  41b0a2:	pop    ss
  41b0a3:	xor    DWORD PTR [edi-0x45d62e3c],eax
  41b0a9:	mov    bl,BYTE PTR [ecx]
  41b0ab:	inc    edx
  41b0ac:	and    al,0xd2
  41b0ae:	inc    esp
  41b0af:	fsubr  DWORD PTR [edx-0x567c890e]
  41b0b5:	mov    WORD PTR [ebp+0x5cc506bd],cs
  41b0bb:	jl     0x41b0e7
  41b0bd:	dec    ebx
  41b0be:	cmp    eax,0x81bcb931
  41b0c3:	push   DWORD PTR [edx]
  41b0c5:	and    DWORD PTR [ebp-0xe],ebp
  41b0c8:	adc    bl,BYTE PTR [ebx-0x3e7f48d6]
  41b0ce:	xor    BYTE PTR [ecx-0x33],dh
  41b0d1:	push   cs
  41b0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d3:	aaa    
  41b0d4:	fdivr  DWORD PTR [eax-0x15c3610a]
  41b0da:	ror    BYTE PTR [esi+0x54f6bee6],1
  41b0e0:	jns    0x41b0a5
  41b0e2:	xchg   esp,eax
  41b0e3:	xor    al,0x94
  41b0e5:	push   cs
  41b0e6:	mov    dh,0x5c
  41b0e8:	xchg   ecx,eax
  41b0e9:	cdq    
  41b0ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0eb:	inc    esp
  41b0ec:	je     0x41b078
  41b0ee:	gs enter 0xa020,0xaa
  41b0f3:	sbb    ah,BYTE PTR [ecx+0x1734bab8]
  41b0f9:	cmp    eax,0x601be5ff
  41b0fe:	cmp    eax,0x65eebe43
  41b103:	and    al,0xaa
  41b105:	int3   
  41b106:	mov    ah,BYTE PTR [edx+0x4fd86d33]
  41b10c:	pop    esi
  41b10d:	mov    bh,0xfb
  41b10f:	(bad)  
  41b110:	push   ebx
  41b111:	aam    0x19
  41b113:	mov    ds:0xec19ec5a,eax
  41b118:	xchg   edi,eax
  41b119:	pop    ss
  41b11a:	pop    edi
  41b11b:	mov    ebp,0x7d4e0f15
  41b120:	push   ss
  41b121:	dec    esp
  41b122:	je     0x41b0e6
  41b124:	sti    
  41b125:	lods   al,BYTE PTR ds:[esi]
  41b126:	jecxz  0x41b172
  41b128:	jns    0x41b0b9
  41b12a:	aam    0x7e
  41b12c:	(bad)  
  41b12d:	xor    edx,ebp
  41b12f:	std    
  41b130:	push   ss
  41b131:	rcl    DWORD PTR [edx+0x1d21f418],cl
  41b137:	nop
  41b138:	jbe    0x41b14b
  41b13a:	repnz mov edi,0x3950f4e5
  41b140:	dec    edx
  41b141:	(bad)  
  41b142:	out    0x68,eax
  41b144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b145:	mov    esp,0x5b53b791
  41b14a:	mov    esi,0x656e981f
  41b14f:	jne    0x41b14d
  41b151:	xchg   ecx,eax
  41b152:	loope  0x41b18a
  41b154:	cmp    eax,0xcf881b8f
  41b159:	push   ebx
  41b15a:	test   BYTE PTR [ebp-0x49],0x7d
  41b15e:	(bad)  
  41b15f:	mov    ah,0xac
  41b161:	aam    0x5a
  41b163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b164:	mov    ds:0xd452b04c,al
  41b169:	push   ds
  41b16a:	call   0x9d35:0xe7b86052
  41b171:	sbb    eax,0xe4d01dac
  41b176:	push   edx
  41b177:	and    DWORD PTR [edx-0x560e1158],ecx
  41b17d:	mov    cl,0x3f
  41b17f:	pop    ss
  41b180:	inc    ecx
  41b181:	shl    BYTE PTR [ecx-0x3f],cl
  41b184:	outs   dx,DWORD PTR ds:[esi]
  41b185:	int    0xe0
  41b187:	popa   
  41b188:	pop    ecx
  41b189:	or     BYTE PTR [esi+eax*2-0x50],0xd8
  41b18e:	push   ds
  41b18f:	push   edi
  41b190:	jle    0x41b1ff
  41b192:	inc    edi
  41b193:	(bad)  
  41b194:	cs enter 0xb26e,0xa1
  41b199:	mov    ch,0xe4
  41b19b:	pop    eax
  41b19c:	jge    0x41b1e1
  41b19e:	add    DWORD PTR [edx-0x4f059eaa],esp
  41b1a4:	outs   dx,DWORD PTR ds:[esi]
  41b1a5:	enter  0xc679,0x78
  41b1a9:	loopne 0x41b1b9
  41b1ab:	sub    al,0xa7
  41b1ad:	xor    al,0xba
  41b1af:	push   ebp
  41b1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1b1:	jmp    0x41b220
  41b1b3:	es cmp eax,0xe38734e8
  41b1b9:	adc    al,0xcf
  41b1bb:	pop    ecx
  41b1bc:	add    al,0xd9
  41b1be:	mov    cl,0xff
  41b1c0:	repnz arpl WORD PTR [ecx-0x57],dx
  41b1c4:	mov    eax,ds:0xa355babf
  41b1c9:	mov    bh,0x7b
  41b1cb:	out    0xf8,al
  41b1cd:	js     0x41b165
  41b1cf:	mov    ebx,0xcc60dfcd
  41b1d4:	sar    edi,1
  41b1d6:	cwde   
  41b1d7:	jmp    0xb3a2:0xa18aa48e
  41b1de:	or     DWORD PTR [ecx+0x3b],edi
  41b1e1:	sar    BYTE PTR [ebx-0x5eeaca52],0x5f
  41b1e8:	sbb    al,0x82
  41b1ea:	nop
  41b1eb:	or     ebp,esi
  41b1ed:	test   eax,0xbec2af8e
  41b1f2:	sbb    al,0xd7
  41b1f4:	mov    ch,BYTE PTR [eax-0x48f5f893]
  41b1fa:	lods   eax,DWORD PTR ds:[esi]
  41b1fb:	jle    0x41b1e7
  41b1fd:	push   ebp
  41b1fe:	mov    bl,0xc4
  41b200:	jl     0x41b231
  41b202:	dec    ecx
  41b203:	das    
  41b204:	jp     0x41b233
  41b206:	inc    edx
  41b207:	add    eax,0x654086fa
  41b20c:	(bad)  
  41b20d:	ficom  WORD PTR ds:0x6495198f
  41b213:	add    BYTE PTR [ebx-0x53],bl
  41b216:	loop   0x41b1cf
  41b218:	cmp    BYTE PTR [eax+0x68374ae8],0xf9
  41b21f:	and    ah,cl
  41b221:	call   0xdbe9:0x9e198f3a
  41b228:	call   0x217e:0x284207a0
  41b22f:	bound  edx,QWORD PTR [edi-0xd091932]
  41b235:	imul   ecx,DWORD PTR [edi+eax*4],0x1312e2aa
  41b23c:	xlat   BYTE PTR ds:[ebx]
  41b23d:	xchg   ebp,eax
  41b23e:	jl     0x41b2a5
  41b240:	fs sub eax,0xe82acc42
  41b246:	sar    DWORD PTR [edi-0x52],cl
  41b249:	psubsw mm1,QWORD PTR [esi+edi*2-0x66]
  41b24e:	dec    edx
  41b24f:	cmp    BYTE PTR [eax],ch
  41b251:	aam    0x4
  41b253:	pop    ecx
  41b254:	xchg   esi,eax
  41b255:	cmc    
  41b256:	frstor [edi]
  41b258:	and    bl,bh
  41b25a:	in     eax,dx
  41b25b:	pushf  
  41b25c:	pushf  
  41b25d:	and    dh,BYTE PTR [ecx]
  41b25f:	pop    edi
  41b260:	dec    edx
  41b261:	mov    bl,0xc9
  41b263:	xlat   BYTE PTR ds:[ebx]
  41b264:	jno    0x41b24d
  41b266:	stos   DWORD PTR es:[edi],eax
  41b267:	push   ss
  41b268:	jge    0x82359cb9
  41b26e:	dec    ebp
  41b26f:	lea    ebp,[ebx-0xf]
  41b272:	jb     0x41b210
  41b274:	(bad)  
  41b275:	jo     0x41b2b9
  41b277:	(bad)  
  41b278:	mov    eax,ds:0x9a9a4d80
  41b27d:	xlat   BYTE PTR ds:[ebx]
  41b27e:	mov    esi,0xb9406de5
  41b283:	rep lods al,BYTE PTR ds:[esi]
  41b285:	and    DWORD PTR ds:0xb637ba36,eax
  41b28b:	cdq    
  41b28c:	pop    ss
  41b28d:	pushf  
  41b28e:	mov    al,0xaf
  41b290:	mov    BYTE PTR [edx-0x64376ec1],dh
  41b296:	mov    ebp,0x1a9be1c1
  41b29b:	jns    0x41b223
  41b29d:	jbe    0x41b28e
  41b29f:	aam    0xa6
  41b2a1:	fld    TBYTE PTR [ecx]
  41b2a3:	pop    ebx
  41b2a4:	xor    ebx,ebp
  41b2a6:	push   eax
  41b2a7:	mov    ch,0x6
  41b2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2aa:	(bad)  
  41b2ab:	aam    0xf4
  41b2ad:	jle    0x41b2e4
  41b2af:	and    al,0xec
  41b2b1:	adc    BYTE PTR [ecx],ch
  41b2b3:	mov    cl,0xf0
  41b2b5:	cmp    bh,BYTE PTR [ecx+0x16dce314]
  41b2bb:	dec    DWORD PTR [esi-0x69]
  41b2be:	imul   BYTE PTR [eax]
  41b2c0:	imul   edi,esi,0x72abf7fe
  41b2c6:	inc    edx
  41b2c7:	mov    ch,0xa6
  41b2c9:	add    eax,ebx
  41b2cb:	out    dx,eax
  41b2cc:	mov    al,0xac
  41b2ce:	push   cs
  41b2cf:	adc    esp,DWORD PTR [ecx]
  41b2d1:	or     DWORD PTR [eax+edi*2],edi
  41b2d4:	cmp    BYTE PTR [ecx+0x163dca7b],bh
  41b2da:	pusha  
  41b2db:	inc    esp
  41b2dc:	jns    0x41b2f1
  41b2de:	or     BYTE PTR [ebx+0x14],ah
  41b2e1:	test   eax,0xdd4601ee
  41b2e6:	lahf   
  41b2e7:	in     al,dx
  41b2e8:	xor    ax,dx
  41b2eb:	(bad)  
  41b2ec:	xchg   edx,eax
  41b2ed:	and    eax,0x8f1176d2
  41b2f2:	mov    al,0x2b
  41b2f4:	dec    ebp
  41b2f5:	into   
  41b2f6:	pop    edi
  41b2f7:	mov    ds:0xc94d79a9,eax
  41b2fc:	addr16 inc esp
  41b2fe:	sub    al,0x8
  41b300:	add    al,0x55
  41b302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b303:	loopne 0x41b376
  41b305:	pushf  
  41b306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b307:	cs push edi
  41b309:	jne    0x41b2f3
  41b30b:	shr    DWORD PTR [eax-0x1],1
  41b30e:	dec    BYTE PTR [ecx-0x5a]
  41b311:	loope  0x41b365
  41b313:	mov    esi,0xe7fb6889
  41b318:	jne    0x41b393
  41b31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b31b:	call   0x7e78:0x573ae8a8
  41b322:	cmp    edi,esp
  41b324:	xchg   ebx,eax
  41b325:	lea    edx,[esi+0x57c20520]
  41b32b:	mov    ch,0x11
  41b32d:	loop   0x41b37f
  41b32f:	sub    al,0x8d
  41b331:	data16 out 0x38,al
  41b334:	mov    ?,WORD PTR ds:0x3ece8cea
  41b33a:	repnz dec ebp
  41b33c:	cmp    al,0x5f
  41b33e:	in     eax,dx
  41b33f:	cmp    BYTE PTR [ebx-0x6be9bd46],dh
  41b345:	push   es
  41b346:	pop    ss
  41b347:	dec    ecx
  41b348:	test   al,0x40
  41b34a:	test   al,0xa0
  41b34c:	(bad)  
  41b34d:	loop   0x41b2fa
  41b34f:	dec    edi
  41b350:	jg     0x41b31b
  41b352:	shr    BYTE PTR [eax-0x5c],1
  41b355:	push   cs
  41b356:	mov    ebx,ds
  41b358:	or     BYTE PTR [edi+eiz*2],ah
  41b35b:	(bad)  
  41b35c:	sbb    DWORD PTR [edi],ebx
  41b35e:	sub    esp,edi
  41b360:	xor    eax,0x5123b825
  41b365:	push   esp
  41b366:	and    bh,bh
  41b368:	pop    ebx
  41b369:	loope  0x41b344
  41b36b:	aaa    
  41b36c:	lahf   
  41b36d:	arpl   WORD PTR [esi-0x3df5bdc2],bx
  41b373:	pop    edi
  41b374:	test   ebp,esp
  41b376:	stos   DWORD PTR es:[edi],eax
  41b377:	jge    0x41b351
  41b379:	mov    edx,0x76a3ee4d
  41b37e:	and    edi,DWORD PTR [eax+ebx*2]
  41b381:	repnz hlt 
  41b383:	xor    eax,0x9920dd3b
  41b388:	pushf  
  41b389:	cmp    DWORD PTR es:[ebp+0x7f],esi
  41b38d:	daa    
  41b38e:	out    dx,al
  41b38f:	lock into 
  41b391:	into   
  41b392:	int    0xb4
  41b394:	in     eax,0xb
  41b396:	fbld   TBYTE PTR ds:[ecx-0x21022c98]
  41b39d:	fs (bad) 
  41b39f:	(bad)  [eax-0x3df95d41]
  41b3a5:	fmul   DWORD PTR [ebp-0x35]
  41b3a8:	loop   0x41b36c
  41b3aa:	and    DWORD PTR [ebx],edi
  41b3ac:	mov    esp,0xbaba4fc7
  41b3b1:	mov    ch,0x51
  41b3b3:	retf   0xe5e0
  41b3b6:	in     al,0xd2
  41b3b8:	inc    eax
  41b3b9:	mov    ch,0xf0
  41b3bb:	(bad)
  41b3be:	inc    edx
  41b3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3c0:	ins    BYTE PTR es:[edi],dx
  41b3c1:	mov    DWORD PTR [ebx+0x7a],eax
  41b3c4:	(bad)  
  41b3c5:	jno    0x41b38f
  41b3c7:	je     0x41b38b
  41b3c9:	fcom   QWORD PTR [edx+0x27]
  41b3cc:	add    ecx,esp
  41b3ce:	retf   0x8b5c
  41b3d1:	shl    BYTE PTR [ebx+0x1e],1
  41b3d4:	mov    dl,0x20
  41b3d6:	and    ecx,DWORD PTR [eax+0x0]
  41b3d9:	hlt    
  41b3da:	lahf   
  41b3db:	or     eax,0x3ce44803
  41b3e0:	push   0x46
  41b3e2:	clc    
  41b3e3:	jl     0x41b400
  41b3e5:	in     eax,dx
  41b3e6:	or     BYTE PTR [eax+esi*8-0x15b33cc7],bh
  41b3ed:	inc    edi
  41b3ee:	sub    DWORD PTR [ecx+0x4ef91519],0xfffffff0
  41b3f5:	jl     0x41b43d
  41b3f7:	in     eax,dx
  41b3f8:	pop    ebx
  41b3f9:	adc    al,0x45
  41b3fb:	dec    esp
  41b3fc:	xor    eax,0xd8b51d59
  41b401:	inc    edx
  41b402:	icebp  
  41b403:	inc    edi
  41b404:	aam    0x91
  41b406:	jno    0x41b404
  41b408:	xlat   BYTE PTR ds:[ebx]
  41b409:	das    
  41b40a:	dec    eax
  41b40b:	rol    BYTE PTR [esi],cl
  41b40d:	and    BYTE PTR [esi],cl
  41b40f:	nop
  41b410:	hlt    
  41b411:	sub    eax,0x45c0848a
  41b416:	pop    ecx
  41b417:	stos   BYTE PTR es:[edi],al
  41b418:	push   ebx
  41b419:	sub    eax,0x14adfa2a
  41b41e:	jbe    0x41b46a
  41b420:	fwait
  41b421:	cs cmp eax,0xb4729bcc
  41b427:	aam    0x74
  41b429:	inc    ecx
  41b42a:	test   dh,bl
  41b42c:	retf   0xb71e
  41b42f:	mov    ecx,0x6f0d1bda
  41b434:	lock add BYTE PTR [edi+0xb],ah
  41b438:	adc    edi,DWORD PTR [edi-0x14563ed]
  41b43e:	push   esp
  41b43f:	sub    dh,al
  41b441:	mov    esi,0xd15b4e44
  41b446:	js     0x41b456
  41b448:	xor    ah,al
  41b44a:	scas   al,BYTE PTR es:[edi]
  41b44b:	xor    BYTE PTR [edi-0x53dc41d5],0xfa
  41b452:	mov    cl,BYTE PTR ds:[edi+0x63]
  41b456:	xchg   ecx,eax
  41b457:	jb     0x41b446
  41b459:	mov    ebx,0xbcef2a84
  41b45e:	iret   
  41b45f:	mov    ds,WORD PTR ds:[ebx+esi*8+0x13c21015]
  41b467:	push   ss
  41b468:	mov    al,ds:0xbc8ab710
  41b46d:	repz or dl,dl
  41b470:	cmp    bl,bh
  41b472:	fdiv   DWORD PTR [eax]
  41b474:	addr16 in al,0x33
  41b477:	jmp    0x41b416
  41b479:	cmp    cl,BYTE PTR [ebp+0x3736f69f]
  41b47f:	loope  0x41b471
  41b481:	rcr    al,cl
  41b483:	inc    edx
  41b484:	push   esp
  41b485:	lods   eax,DWORD PTR ds:[esi]
  41b486:	loop   0x41b491
  41b488:	xor    eax,0xd843649
  41b48d:	xchg   bh,al
  41b48f:	push   edx
  41b490:	sbb    eax,0xe4c0c137
  41b495:	push   eax
  41b496:	test   bh,bh
  41b498:	mov    gs,ebp
  41b49a:	mov    edi,0xae9e5dc0
  41b49f:	lods   eax,DWORD PTR ds:[esi]
  41b4a0:	pop    eax
  41b4a1:	aaa    
  41b4a2:	mov    edx,0xcf1c485c
  41b4a7:	jp     0x41b49d
  41b4a9:	and    esi,DWORD PTR [eax]
  41b4ab:	leave  
  41b4ac:	addr16 pop edi
  41b4ae:	out    0xc7,eax
  41b4b0:	adc    dh,al
  41b4b2:	mov    ebp,0x8733b9c4
  41b4b7:	je     0x41b503
  41b4b9:	daa    
  41b4ba:	cmp    ebx,DWORD PTR ds:0x96dae420
  41b4c0:	fmul   QWORD PTR [ebx]
  41b4c2:	aad    0xe9
  41b4c4:	cmp    ch,dl
  41b4c6:	push   ebp
  41b4c7:	cmp    BYTE PTR [ebp+0x1f],ah
  41b4ca:	pop    edx
  41b4cb:	aaa    
  41b4cc:	adc    al,0x23
  41b4ce:	rcr    BYTE PTR [edi+0x54fdda54],1
  41b4d4:	retw   0xf359
  41b4d8:	dec    esi
  41b4d9:	repnz aas 
  41b4db:	hlt    
  41b4dc:	cld    
  41b4dd:	in     al,0xcf
  41b4df:	pop    edx
  41b4e0:	ja     0x41b540
  41b4e2:	mov    bl,0xa7
  41b4e4:	xor    BYTE PTR [ebp+0x2d4a0ece],dl
  41b4ea:	test   eax,0xa3e34a83
  41b4ef:	fist   WORD PTR [esi-0x21]
  41b4f2:	fs call 0x2b67:0x4d1b897a
  41b4fa:	pop    ebp
  41b4fb:	mov    ch,0x1e
  41b4fd:	sar    BYTE PTR [eax+ebx*4+0x16],1
  41b501:	sbb    cl,BYTE PTR [edi-0x18c9ec0b]
  41b507:	mov    edx,0x13064f68
  41b50c:	push   0xffffff9a
  41b50e:	fsubr  st(2),st
  41b510:	dec    esi
  41b511:	mov    cl,0x74
  41b513:	scas   eax,DWORD PTR es:[edi]
  41b514:	mov    ebx,0x597ab43f
  41b519:	ja     0x41b4ef
  41b51b:	out    dx,eax
  41b51c:	or     eax,0xc764f593
  41b521:	push   ebx
  41b522:	imul   ebx,DWORD PTR [ecx-0x4f],0xc437563f
  41b529:	xchg   DWORD PTR [edx-0x6e],edi
  41b52c:	cmp    BYTE PTR [ebx],0xe6
  41b52f:	dec    eax
  41b530:	inc    eax
  41b531:	xchg   esp,eax
  41b532:	pop    esi
  41b533:	das    
  41b534:	push   ebx
  41b535:	mul    BYTE PTR [eax-0x10]
  41b538:	jne    0x41b4e9
  41b53a:	lods   al,BYTE PTR ds:[esi]
  41b53b:	add    ecx,DWORD PTR [ebx+ebp*1-0x271c29d5]
  41b542:	inc    ebx
  41b543:	inc    esp
  41b544:	xor    bl,dh
  41b546:	ja     0x41b527
  41b548:	and    eax,DWORD PTR [ebp+0x6]
  41b54b:	int3   
  41b54c:	xchg   ecx,eax
  41b54d:	loopne 0x41b527
  41b54f:	cmp    eax,0x1ca76be6
  41b554:	call   0x6d37:0x6185734a
  41b55b:	xchg   BYTE PTR [esi],dl
  41b55d:	jge    0x41b54b
  41b55f:	or     eax,0xe350f829
  41b564:	aam    0x93
  41b566:	push   ss
  41b567:	push   0x57bedb21
  41b56c:	or     dl,BYTE PTR [ecx+0x18]
  41b56f:	cmp    edi,DWORD PTR [edx-0x5cdf7353]
  41b575:	call   0x607e:0x1153eb00
  41b57c:	inc    eax
  41b57d:	cdq    
  41b57e:	nop
  41b57f:	sub    dl,dl
  41b581:	js     0x41b5e7
  41b583:	(bad)  
  41b584:	jp     0x41b5e4
  41b586:	mov    ebx,0x9ea53cf2
  41b58b:	push   ds
  41b58c:	push   esi
  41b58d:	aas    
  41b58e:	pop    esp
  41b58f:	push   ebx
  41b590:	leave  
  41b591:	or     ch,BYTE PTR [ecx]
  41b593:	ja     0x41b552
  41b595:	adc    edi,edi
  41b597:	jmp    0x41b5c5
  41b599:	or     eax,0x799f3f71
  41b59e:	fcomp  DWORD PTR [ebx-0x2a]
  41b5a1:	out    dx,eax
  41b5a2:	fs push ss
  41b5a4:	cmp    BYTE PTR [eax+0x10d270d8],0x97
  41b5ab:	xor    edx,ebp
  41b5ad:	sahf   
  41b5ae:	jge    0x41b617
  41b5b0:	call   0xe9a7856f
  41b5b5:	mov    ebx,edi
  41b5b7:	xor    BYTE PTR [ebp+0x38acf659],ah
  41b5bd:	les    esp,FWORD PTR ds:0x5fec244d
  41b5c3:	cmp    bl,dh
  41b5c5:	sbb    bh,BYTE PTR [edx-0x6f]
  41b5c8:	push   edi
  41b5c9:	js     0x41b5cf
  41b5cb:	sbb    DWORD PTR [ebx+0x55],0xbcfb3f0f
  41b5d2:	fadd   st(0),st
  41b5d4:	inc    ebx
  41b5d5:	ss xor eax,0xf362a91b
  41b5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5dc:	jmp    0xfb753fb8
  41b5e1:	test   eax,0x1a6e1917
  41b5e6:	ret    0x69ee
  41b5e9:	jmp    0x41b5c6
  41b5eb:	outs   dx,BYTE PTR ds:[esi]
  41b5ec:	leave  
  41b5ed:	test   DWORD PTR [edi+esi*2],0x2c695e21
  41b5f4:	(bad)  
  41b5f5:	loop   0x41b600
  41b5f7:	mov    esi,0x34482e57
  41b5fc:	out    dx,eax
  41b5fd:	or     BYTE PTR [edi+0x3],bh
  41b600:	gs xchg ebx,eax
  41b602:	cdq    
  41b603:	mov    DWORD PTR [edx-0x61],edi
  41b606:	neg    dh
  41b608:	jns    0x41b5fd
  41b60a:	adc    eax,0x1c98064f
  41b60f:	test   DWORD PTR [ecx+0x11e6d8f7],ebp
  41b615:	xor    al,0xf
  41b617:	dec    ecx
  41b618:	into   
  41b619:	mov    eax,0x86ec94c9
  41b61e:	push   ebp
  41b61f:	add    DWORD PTR [ecx],0xb6dee5a9
  41b625:	ss push eax
  41b627:	sub    BYTE PTR [edx-0x79c781c9],bl
  41b62d:	pop    es
  41b62e:	and    BYTE PTR [eax-0x68],cl
  41b631:	dec    ecx
  41b632:	imul   ebx,DWORD PTR [eax-0x26a6ad39],0x61
  41b639:	jae    0x41b671
  41b63b:	hlt    
  41b63c:	pop    ecx
  41b63d:	int3   
  41b63e:	inc    ebp
  41b63f:	mov    edi,0x60278362
  41b644:	cmc    
  41b645:	cmp    eax,ebx
  41b647:	in     eax,0x22
  41b649:	jl     0x41b5e1
  41b64b:	fmul   QWORD PTR cs:[eax]
  41b64e:	sub    BYTE PTR [ebx],bl
  41b650:	mov    ds:0x788596c2,al
  41b655:	xchg   ecx,eax
  41b656:	daa    
  41b657:	icebp  
  41b658:	inc    ebp
  41b659:	pop    ebx
  41b65a:	rcl    BYTE PTR [edx-0x6d],0x33
  41b65e:	push   edx
  41b65f:	mov    esp,0xdfe65b45
  41b664:	cmp    DWORD PTR [edi+0x12],0x33947274
  41b66b:	xor    eax,0x982fd410
  41b670:	addr16 dec ebp
  41b672:	xlat   BYTE PTR ds:[ebx]
  41b673:	int    0x9e
  41b675:	dec    ebx
  41b676:	imul   edx,DWORD PTR [eax+eiz*2],0xffffffc3
  41b67a:	repnz daa 
  41b67c:	jl     0x41b661
  41b67e:	mov    dh,ch
  41b680:	(bad)  
  41b681:	test   BYTE PTR [ebx],0xcc
  41b684:	jl     0x548ebdc7
  41b68a:	ja     0x41b663
  41b68c:	mov    WORD PTR [edi-0x621fb1f7],fs
  41b692:	sahf   
  41b693:	mov    edx,0x3222c9f5
  41b698:	inc    ecx
  41b69a:	and    eax,0x4a88ef38
  41b69f:	aam    0xf5
  41b6a1:	xchg   BYTE PTR [eax],dl
  41b6a3:	ret    
  41b6a4:	fnstcw WORD PTR [edi+0x21]
  41b6a7:	mov    dh,0xc9
  41b6a9:	adc    DWORD PTR [ebx+0x21e16cfa],0x4a
  41b6b0:	sbb    DWORD PTR [esi-0x57],0xffffffc9
  41b6b4:	faddp  st(6),st
  41b6b6:	inc    eax
  41b6b7:	test   eax,0x1a6b4ee7
  41b6bc:	out    dx,eax
  41b6bd:	jbe    0x41b723
  41b6bf:	scas   eax,DWORD PTR es:[edi]
  41b6c0:	inc    ebp
  41b6c1:	in     al,0x7c
  41b6c3:	rol    BYTE PTR [ebp+0x642f4fbe],cl
  41b6c9:	xchg   BYTE PTR [esp+ebx*8+0x74],bh
  41b6cd:	aas    
  41b6ce:	(bad)  
  41b6cf:	test   BYTE PTR [ebx+edi*4],0x83
  41b6d3:	xchg   BYTE PTR ds:[ebx],bh
  41b6d6:	lahf   
  41b6d7:	pop    ebx
  41b6d8:	push   eax
  41b6d9:	mov    eax,DWORD PTR [edi+0x19]
  41b6dc:	or     BYTE PTR [esp+ebx*1-0x15],cl
  41b6e0:	nop
  41b6e1:	jne    0x41b6bd
  41b6e3:	(bad)  
  41b6e4:	xchg   BYTE PTR [eax+0x53],bh
  41b6e7:	mov    ebp,0xcce14577
  41b6ec:	dec    eax
  41b6ed:	cmp    DWORD PTR [edi+0x6e],ebp
  41b6f0:	or     esp,DWORD PTR [ecx-0x61]
  41b6f3:	xor    ah,BYTE PTR [ebx]
  41b6f5:	dec    esi
  41b6f6:	retf   0x48b8
  41b6f9:	add    BYTE PTR [edx-0x36],al
  41b6fc:	mov    cl,0x67
  41b6fe:	xchg   DWORD PTR [ebp-0x6a],edx
  41b701:	scas   eax,DWORD PTR es:[di]
  41b703:	sar    BYTE PTR [esi],1
  41b705:	inc    edi
  41b706:	xchg   edi,eax
  41b707:	enter  0x4983,0x4d
  41b70b:	fistp  QWORD PTR [eax]
  41b70d:	shl    BYTE PTR [ecx],cl
  41b70f:	inc    ecx
  41b710:	pop    ds
  41b711:	push   es
  41b712:	mov    eax,0xb9c811b5
  41b717:	jo     0x41b703
  41b719:	sub    ebp,edi
  41b71b:	ins    DWORD PTR es:[edi],dx
  41b71c:	mov    ebx,0x16167735
  41b721:	fs pop edi
  41b723:	mov    ebp,0xbe884f52
  41b728:	stos   BYTE PTR es:[edi],al
  41b729:	jno    0x41b6e7
  41b72b:	mov    ds:0x64781973,eax
  41b730:	dec    esi
  41b731:	test   DWORD PTR ds:0xd15cb4bd,eax
  41b737:	ss nop
  41b739:	adc    dl,BYTE PTR [edx-0x3]
  41b73c:	add    eax,0xf73c7ee3
  41b741:	clc    
  41b742:	and    BYTE PTR [eax-0x1e],bh
  41b745:	xchg   edi,eax
  41b746:	ret    0x7cc3
  41b749:	dec    esp
  41b74a:	popf   
  41b74b:	iret   
  41b74c:	and    cl,BYTE PTR [ebx-0x497058a0]
  41b752:	outs   dx,DWORD PTR ds:[esi]
  41b753:	into   
  41b754:	ins    DWORD PTR es:[edi],dx
  41b755:	jp     0x41b737
  41b757:	sub    BYTE PTR [ecx+0x312ed88],dh
  41b75d:	inc    ebx
  41b75e:	or     esp,DWORD PTR [edi+eiz*8]
  41b761:	push   ds
  41b762:	add    DWORD PTR ds:0x7c098994,ebp
  41b768:	add    ebx,esi
  41b76a:	cld    
  41b76b:	and    ebx,edi
  41b76d:	mov    BYTE PTR [ebx],ah
  41b76f:	stos   BYTE PTR es:[edi],al
  41b770:	fidivr DWORD PTR [eax+0x4b]
  41b773:	aam    0xa2
  41b775:	mov    dl,0xc9
  41b777:	mov    ?,WORD PTR [eax-0x25]
  41b77a:	inc    ecx
  41b77b:	xchg   ecx,eax
  41b77c:	xchg   esp,eax
  41b77d:	jbe    0x41b737
  41b77f:	xor    BYTE PTR [ecx],bl
  41b781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b782:	push   ebp
  41b783:	out    0xc,al
  41b785:	cmp    eax,0x98c2ef42
  41b78a:	xchg   esi,eax
  41b78b:	rol    BYTE PTR es:[edx+edi*2-0x51dd2008],cl
  41b793:	popa   
  41b794:	adc    eax,0xc8beb684
  41b799:	gs inc ebp
  41b79b:	push   esi
  41b79c:	pop    ecx
  41b79d:	mov    esp,0xd1303e0d
  41b7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7a3:	enter  0xc56d,0x63
  41b7a7:	or     ebp,eax
  41b7a9:	call   0xe0da:0x3c70e71a
  41b7b0:	lea    esi,[edx-0x62737136]
  41b7b6:	jns    0x41b81c
  41b7b8:	mov    esp,0x30640036
  41b7bd:	jmp    0xe11237ad
  41b7c2:	int3   
  41b7c3:	and    DWORD PTR [esi],0x7d5a7b2f
  41b7c9:	or     ebp,DWORD PTR [edi]
  41b7cb:	and    esi,DWORD PTR es:[edx+0x53c3101d]
  41b7d2:	inc    eax
  41b7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d4:	inc    eax
  41b7d5:	xlat   BYTE PTR ds:[ebx]
  41b7d6:	push   ecx
  41b7d7:	fnstcw WORD PTR [edx+edi*2-0x41]
  41b7db:	inc    dx
  41b7dd:	into   
  41b7de:	ds xor eax,0x699d8483
  41b7e4:	ss mov eax,0x73bfd2f0
  41b7ea:	outs   dx,BYTE PTR ds:[esi]
  41b7eb:	fisub  WORD PTR [ecx]
  41b7ed:	lods   eax,DWORD PTR ds:[esi]
  41b7ee:	xor    eax,ecx
  41b7f0:	sbb    eax,0xf2576724
  41b7f5:	adc    al,0x3b
  41b7f7:	push   ebp
  41b7f8:	aam    0x70
  41b7fa:	repz pop es
  41b7fc:	out    dx,eax
  41b7fd:	sub    BYTE PTR [ebp-0x1d552b23],al
  41b803:	and    dh,0xe1
  41b806:	retf   0xac19
  41b809:	sub    eax,0x139ae9dc
  41b80e:	fisubr WORD PTR [ebx+0xc]
  41b811:	loope  0x41b865
  41b813:	lea    esp,[ebx-0x75]
  41b816:	bound  edi,QWORD PTR [ebp+0x37]
  41b819:	retf   0x4fef
  41b81c:	dec    esp
  41b81d:	xor    DWORD PTR [edi],esi
  41b81f:	cmp    al,0xb9
  41b821:	nop
  41b822:	call   0x4f9a:0x94493d3b
  41b829:	inc    esi
  41b82a:	sub    al,0x68
  41b82d:	mov    bh,0xa7
  41b82f:	(bad)  
  41b830:	sbb    esp,DWORD PTR [edx-0x30d7bf02]
  41b836:	pushf  
  41b837:	cmp    ecx,DWORD PTR [ecx+0x3a]
  41b83a:	xor    BYTE PTR [ebp-0x29],0x38
  41b83e:	fist   WORD PTR [ebp-0x8e3c8b2]
  41b844:	in     al,dx
  41b845:	popa   
  41b846:	mov    dl,0x87
  41b848:	int    0xeb
  41b84a:	mov    al,0xe8
  41b84c:	rcl    dl,1
  41b84e:	push   ss
  41b84f:	mov    ?,WORD PTR [ebp+0x15983031]
  41b855:	mov    edi,0x26cb2595
  41b85a:	(bad)  
  41b85c:	lahf   
  41b85d:	idiv   DWORD PTR [ebp+0x47]
  41b860:	iret   
  41b861:	adc    DWORD PTR [ecx-0xf560239],edi
  41b867:	mov    esi,0xe66e646f
  41b86c:	pop    edi
  41b86d:	sahf   
  41b86e:	or     DWORD PTR [esi],esp
  41b870:	fwait
  41b871:	add    esp,edi
  41b873:	out    dx,eax
  41b874:	adc    ebp,edx
  41b876:	leave  
  41b877:	inc    ebx
  41b879:	imul   ebp,ebp,0x74
  41b87c:	or     eax,0x45774633
  41b881:	mov    ecx,0xd9d06f90
  41b886:	dec    esp
  41b887:	pop    ss
  41b888:	and    DWORD PTR [edi],0x60597fc7
  41b88e:	and    ch,al
  41b890:	cmc    
  41b891:	push   esi
  41b892:	call   0xa7400038
  41b897:	mov    DWORD PTR [edi-0x62281072],ebx
  41b89d:	mov    cl,0x3
  41b89f:	mov    eax,ds:0x5514e2a9
  41b8a4:	jne    0x41b91a
  41b8a6:	cmp    ah,dl
  41b8a8:	dec    ebx
  41b8a9:	aam    0x55
  41b8ab:	xor    DWORD PTR [ebp+0x23],ebx
  41b8ae:	xor    dh,BYTE PTR [edi+0x10]
  41b8b1:	sub    ecx,DWORD PTR [ecx-0x471ed322]
  41b8b7:	into   
  41b8b8:	(bad)  [eax+0x3a]
  41b8bb:	fmul   DWORD PTR [ebx+0x371c914a]
  41b8c1:	clc    
  41b8c2:	call   0x1415:0xd51778
  41b8c9:	push   edi
  41b8ca:	add    DWORD PTR [ebx],edi
  41b8cc:	cmc    
  41b8cd:	ja     0x41b8fb
  41b8cf:	push   esi
  41b8d0:	mov    ebx,ebp
  41b8d2:	ins    BYTE PTR es:[edi],dx
  41b8d3:	jae    0x41b91a
  41b8d5:	dec    ecx
  41b8d6:	pop    ebx
  41b8d7:	pop    edi
  41b8d8:	cmp    al,0x41
  41b8da:	cmp    DWORD PTR [ecx+esi*2+0x4f],edi
  41b8de:	imul   ecx,DWORD PTR [eax],0x7ad6aadf
  41b8e4:	mov    cl,0xf
  41b8e6:	push   esp
  41b8e7:	arpl   WORD PTR [edx+0x5a7179f8],di
  41b8ed:	sbb    ecx,DWORD PTR [ebx]
  41b8ef:	mov    ss,WORD PTR [esi]
  41b8f1:	pusha  
  41b8f2:	gs push ebp
  41b8f4:	push   cs
  41b8f5:	lods   al,BYTE PTR ds:[esi]
  41b8f6:	push   ss
  41b8f7:	cli    
  41b8f8:	sub    dh,BYTE PTR [ebp-0x46a02c8f]
  41b8fe:	jb     0x41b8ab
  41b900:	mov    WORD PTR [edi+0x10],cs
  41b903:	mov    ah,0x24
  41b905:	add    DWORD PTR [edx+0x1204fea2],esi
  41b90b:	call   0xc6de8b67
  41b910:	aam    0x58
  41b912:	in     eax,0xf7
  41b914:	mov    cl,BYTE PTR [ebp-0x13]
  41b917:	call   0x5e67:0x79b28726
  41b91e:	and    dh,al
  41b920:	push   eax
  41b921:	cmp    BYTE PTR gs:[edx-0x1b],ch
  41b925:	xchg   esp,eax
  41b926:	and    ecx,esi
  41b928:	mov    dh,0x2e
  41b92a:	test   DWORD PTR [eax-0x13f12ebe],esp
  41b930:	mov    al,ds:0xd0dcc726
  41b935:	mov    cl,0x25
  41b937:	pop    ebx
  41b938:	mov    cl,0xef
  41b93a:	(bad)  
  41b93c:	inc    ebp
  41b93d:	xor    cl,BYTE PTR [ebp+0x0]
  41b940:	mov    bh,0x42
  41b942:	out    0x3d,al
  41b944:	cwde   
  41b945:	cmp    eax,0x17908158
  41b94a:	lea    ecx,[ebx]
  41b94c:	cmp    DWORD PTR [ecx-0x35180871],0xaa039f36
  41b956:	pop    eax
  41b957:	push   ds
  41b958:	push   0xfffffffe
  41b95a:	jb     0x41b90b
  41b95c:	stos   DWORD PTR es:[edi],eax
  41b95d:	sbb    DWORD PTR [ecx+0x23],0x6
  41b961:	ins    DWORD PTR es:[edi],dx
  41b962:	push   esp
  41b963:	dec    edi
  41b964:	out    dx,al
  41b965:	mov    BYTE PTR [ecx+0x3742ba05],ah
  41b96b:	lods   al,BYTE PTR ds:[esi]
  41b96c:	loope  0x41b92f
  41b96e:	mov    ds:0x4633c8b5,al
  41b973:	in     al,dx
  41b974:	mov    esp,0x7ca38031
  41b979:	and    ebx,eax
  41b97b:	mov    ecx,0x11e0bdf2
  41b980:	in     al,dx
  41b981:	nop
  41b982:	push   ecx
  41b983:	(bad)  
  41b984:	js     0x41b9af
  41b986:	push   edi
  41b987:	repz int 0x76
  41b98a:	leave  
  41b98b:	aam    0x55
  41b98d:	pop    edi
  41b98e:	iret   
  41b98f:	pop    esp
  41b990:	mov    edi,0x4b7dcc3
  41b995:	loop   0x41b98c
  41b997:	cmp    al,0x34
  41b999:	iret   
  41b99a:	xchg   esi,edi
  41b99c:	mov    bh,0x2b
  41b99e:	sbb    cl,BYTE PTR [esp+ebp*4]
  41b9a1:	sub    eax,0xed970b0b
  41b9a6:	xor    dh,BYTE PTR [eax+0x9b6b7d2]
  41b9ac:	push   0x1f
  41b9ae:	shl    BYTE PTR [eax],0xef
  41b9b1:	ror    BYTE PTR ds:0xb65a6ac8,1
  41b9b7:	xchg   edx,eax
  41b9b8:	push   0x6f8ae131
  41b9bd:	sub    ch,BYTE PTR [eax]
  41b9bf:	sbb    ah,ah
  41b9c1:	pop    ebx
  41b9c2:	in     eax,dx
  41b9c3:	xor    eax,0x89e2c33f
  41b9c8:	add    BYTE PTR [eax],al
  41b9ca:	inc    eax
  41b9cb:	xor    esi,esi
  41b9cd:	int3   
  41b9ce:	add    edi,edx
  41b9d0:	bound  esp,QWORD PTR [esi+0x18461944]
  41b9d6:	xchg   ecx,eax
  41b9d7:	xchg   esi,eax
  41b9d8:	scas   eax,DWORD PTR es:[edi]
  41b9d9:	dec    esp
  41b9da:	iret   
  41b9db:	das    
  41b9dc:	sbb    ax,0xd42
  41b9e0:	inc    edx
  41b9e1:	and    al,0x31
  41b9e3:	(bad)
  41b9e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9e8:	mov    edi,0xa10049a6
  41b9ed:	xor    al,0x40
  41b9ef:	inc    esp
  41b9f0:	jge    0x41b9c0
  41b9f2:	mov    gs,edi
  41b9f4:	jecxz  0x41b988
  41b9f6:	loope  0x41b97c
  41b9f8:	mov    ebx,0xfbe61711
  41b9fd:	jp     0x41b9d2
  41b9ff:	dec    edx
  41ba00:	pop    ecx
  41ba01:	fs pop edi
  41ba03:	in     al,0x92
  41ba05:	lock dec eax
  41ba07:	rcr    dh,0x4a
  41ba0a:	bnd call 0x503a0fb
  41ba10:	mov    ebx,0x7f771c29
  41ba15:	cmp    esi,DWORD PTR [ebx]
  41ba17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba18:	xor    al,0xd2
  41ba1a:	push   ds
  41ba1b:	dec    edx
  41ba1c:	inc    esi
  41ba1d:	lds    edi,FWORD PTR [eax+eax*4+0x71]
  41ba21:	call   0xbc75:0x1a6c3e6d
  41ba28:	push   esp
  41ba29:	loopne 0x41ba2c
  41ba2b:	in     eax,0x3a
  41ba2d:	aad    0xc2
  41ba2f:	mov    eax,ds:0x3d7f37d0
  41ba34:	lea    eax,[ebx-0x4362732b]
  41ba3a:	mov    ah,ah
  41ba3c:	in     al,dx
  41ba3d:	or     dl,bh
  41ba3f:	(bad)  
  41ba40:	xor    edi,esi
  41ba42:	inc    ebx
  41ba43:	dec    edx
  41ba44:	inc    ebx
  41ba45:	int    0x99
  41ba47:	mov    esp,0x7d124681
  41ba4c:	popa   
  41ba4d:	sti    
  41ba4e:	and    ecx,DWORD PTR [esi+edi*1+0x4263a814]
  41ba55:	nop
  41ba56:	cld    
  41ba57:	jmp    0x9770:0xbb6a35b
  41ba5e:	add    eax,0x6ee6aeae
  41ba63:	call   FWORD PTR [esp+esi*1-0x78e7d8c]
  41ba6a:	dec    ecx
  41ba6b:	mov    ds:0xe1d6f8d8,al
  41ba70:	xchg   ebp,eax
  41ba71:	(bad)  
  41ba72:	ins    DWORD PTR es:[edi],dx
  41ba73:	je     0x41ba12
  41ba75:	fidiv  WORD PTR [ebp+edx*2-0x5ff25cd6]
  41ba7c:	jp     0x41ba5a
  41ba7e:	dec    esi
  41ba7f:	out    0x72,eax
  41ba81:	cmp    bh,BYTE PTR [edx]
  41ba83:	jb     0x41ba3c
  41ba85:	lds    esp,FWORD PTR [eax-0x44]
  41ba88:	stos   DWORD PTR es:[edi],eax
  41ba89:	mov    al,ds:0x4ccc8f6b
  41ba8e:	dec    edx
  41ba8f:	xchg   esp,eax
  41ba90:	aaa    
  41ba91:	jne    0x41ba9c
  41ba93:	push   esp
  41ba94:	xor    eax,0xf0675a1c
  41ba99:	mov    dl,0x2f
  41ba9b:	mov    ch,0xc7
  41ba9d:	inc    ebx
  41ba9e:	(bad)  
  41ba9f:	sbb    ebx,DWORD PTR [eiz*4-0x2df493c2]
  41baa6:	dec    ebp
  41baa7:	inc    edi
  41baa8:	ins    BYTE PTR es:[edi],dx
  41baa9:	cmp    bl,0xd3
  41baac:	jns    0x41baa0
  41baae:	or     al,BYTE PTR [edi-0x58d099f3]
  41bab4:	pop    esp
  41bab5:	add    BYTE PTR [edi],al
  41bab7:	inc    eax
  41bab8:	pop    es
  41bab9:	ja     0x41bb05
  41babb:	add    BYTE PTR [edx+eax*2],0x68
  41babf:	fdiv   DWORD PTR [ebx+0x56]
  41bac2:	fisubr WORD PTR [edx+0x16]
  41bac5:	push   ecx
  41bac6:	xor    edi,esi
  41bac8:	sahf   
  41bac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baca:	sbb    BYTE PTR [esi-0x123ee203],bh
  41bad0:	mov    esi,0xba9f4aff
  41bad5:	dec    ebp
  41bad6:	or     bl,BYTE PTR [ebp+eax*1-0x1f3cd03f]
  41badd:	sbb    bh,BYTE PTR [esi]
  41badf:	jp     0x41baca
  41bae1:	inc    eax
  41bae2:	(bad)  
  41bae3:	inc    edi
  41bae4:	mov    ebx,0x457fade2
  41bae9:	dec    ebx
  41baea:	or     dh,BYTE PTR [ebp-0x63d5cc9]
  41baf0:	or     edi,DWORD PTR [esi-0x6c]
  41baf3:	test   DWORD PTR [ebp+ebp*8-0x9e66408],esi
  41bafa:	test   eax,0xf453391e
  41baff:	aas    
  41bb00:	xchg   ebx,eax
  41bb01:	sbb    dl,BYTE PTR [ebx]
  41bb03:	inc    esi
  41bb04:	xchg   esi,eax
  41bb05:	xchg   ebx,eax
  41bb06:	(bad)  
  41bb07:	cmp    eax,0x11c0ce2
  41bb0c:	fcmovb st,st(7)
  41bb0e:	fs dec edx
  41bb10:	jg     0x41baa9
  41bb12:	jbe    0x41bad5
  41bb14:	xchg   esi,eax
  41bb15:	add    BYTE PTR [eax+0x7678df9f],al
  41bb1b:	out    0xea,eax
  41bb1d:	lods   al,BYTE PTR ds:[esi]
  41bb1e:	mov    edx,0x62a51e00
  41bb23:	imul   ebx,DWORD PTR [esi+0x3d8be0a4],0xdd2c0e02
  41bb2d:	push   ds
  41bb2e:	and    eax,0x367241c0
  41bb33:	sub    eax,0xd5f8c846
  41bb38:	mov    esi,esp
  41bb3a:	mov    ebp,0x8c1cb410
  41bb3f:	std    
  41bb40:	adc    eax,0xdbbda17a
  41bb45:	jo     0x41bb92
  41bb47:	cmc    
  41bb48:	sub    ah,0xda
  41bb4b:	add    eax,0x6a6a14c9
  41bb50:	pop    ebp
  41bb51:	call   0xbf110181
  41bb56:	xor    esi,DWORD PTR [edx+0x3b]
  41bb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb5a:	adc    eax,ebp
  41bb5c:	sbb    al,0x23
  41bb5e:	(bad)  
  41bb5f:	xchg   ebp,eax
  41bb60:	popf   
  41bb61:	push   eax
  41bb62:	push   0xc657e221
  41bb67:	inc    eax
  41bb68:	pop    esp
  41bb69:	or     DWORD PTR [esi+0x5],esi
  41bb6c:	or     BYTE PTR [ebx],dh
  41bb6e:	ffreep st(0)
  41bb70:	fistp  QWORD PTR ds:[edi-0x6f1348b4]
  41bb77:	(bad)  
  41bb78:	test   BYTE PTR [esi],ah
  41bb7a:	inc    ebx
  41bb7b:	dec    edi
  41bb7c:	aas    
  41bb7d:	push   ss
  41bb7e:	cmc    
  41bb7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb80:	in     eax,0xce
  41bb82:	or     ebp,DWORD PTR [edx+0x11a49259]
  41bb88:	daa    
  41bb89:	sbb    BYTE PTR [edi-0x1d],ch
  41bb8c:	out    dx,eax
  41bb8d:	ins    DWORD PTR es:[edi],dx
  41bb8e:	retf   
  41bb8f:	lds    esp,FWORD PTR [edx+0x33]
  41bb92:	out    dx,eax
  41bb93:	jb     0x41bbe3
  41bb95:	or     DWORD PTR [esi+0x58d58560],0x6ac34586
  41bb9f:	data16 sub BYTE PTR [edi-0xd28c14],bl
  41bba6:	sub    eax,0xa2ca794
  41bbab:	mov    ds:0x5bafc243,al
  41bbb0:	loope  0x41bb6b
  41bbb2:	sbb    eax,0xcb1c7629
  41bbb7:	pop    eax
  41bbb8:	mov    bh,0x82
  41bbba:	ror    BYTE PTR [edi],1
  41bbbc:	sbb    eax,0x40d489ac
  41bbc1:	imul   esi,DWORD PTR [esp+edx*8-0xb],0xffffff80
  41bbc6:	cmp    esp,DWORD PTR [edx]
  41bbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc9:	out    dx,al
  41bbca:	sti    
  41bbcb:	icebp  
  41bbcc:	or     DWORD PTR [edx],0xe3f38d8
  41bbd2:	lahf   
  41bbd3:	int    0xca
  41bbd5:	adc    eax,0x179a9368
  41bbda:	call   0x768c:0x216a0256
  41bbe1:	push   ecx
  41bbe2:	ret    0xc2c3
  41bbe5:	into   
  41bbe6:	and    BYTE PTR ss:0x6fc99de0,dh
  41bbed:	cmp    DWORD PTR [ebx-0x7e],edi
  41bbf0:	je     0x41bb87
  41bbf2:	stc    
  41bbf3:	sahf   
  41bbf4:	lods   al,BYTE PTR ds:[esi]
  41bbf5:	jae    0x41bbc3
  41bbf7:	mov    esi,0xd3c8910c
  41bbfc:	dec    esp
  41bbfd:	xchg   ebx,eax
  41bbfe:	repz retf 
  41bc00:	inc    eax
  41bc01:	dec    ebx
  41bc02:	fdivrp st(3),st
  41bc04:	pop    ebp
  41bc05:	xlat   BYTE PTR ds:[ebx]
  41bc06:	imul   esp,DWORD PTR [esi-0x67],0xfffffffd
  41bc0a:	sub    al,0xdf
  41bc0c:	lahf   
  41bc0d:	or     DWORD PTR [eax+0x40],esp
  41bc10:	cmp    dl,BYTE PTR [edi+0x2c]
  41bc13:	shr    BYTE PTR [ecx],cl
  41bc15:	int    0xba
  41bc17:	loopne 0x41bc3f
  41bc19:	adc    dh,dh
  41bc1b:	mov    WORD PTR [esi-0x23],ds
  41bc1e:	stos   DWORD PTR es:[edi],eax
  41bc1f:	loope  0x41bbde
  41bc21:	aam    0xa4
  41bc23:	bound  ebp,QWORD PTR [ebx+ebp*2]
  41bc26:	and    DWORD PTR [ecx],edi
  41bc28:	data16 jo 0x41bc33
  41bc2b:	cld    
  41bc2c:	mov    eax,0x98d5b1eb
  41bc31:	lds    ebp,FWORD PTR [edx]
  41bc33:	inc    edx
  41bc34:	loope  0x41bbd1
  41bc36:	pop    ss
  41bc37:	sub    DWORD PTR [eax],0xa9b2242
  41bc3d:	jbe    0x41bc4c
  41bc3f:	or     BYTE PTR [ecx],al
  41bc41:	inc    ecx
  41bc42:	ror    DWORD PTR [edi-0x7868d18c],cl
  41bc48:	jb     0x41bbd7
  41bc4a:	ins    DWORD PTR es:[edi],dx
  41bc4b:	fisub  WORD PTR [esi+0x73]
  41bc4e:	push   edi
  41bc4f:	jae    0x41bc29
  41bc51:	outs   dx,BYTE PTR ds:[esi]
  41bc52:	mov    bl,cl
  41bc54:	dec    eax
  41bc55:	pop    edi
  41bc56:	adc    DWORD PTR [ebx*4+0x5e8cc6af],esi
  41bc5d:	out    dx,eax
  41bc5e:	sub    DWORD PTR [eax+0x7a],edx
  41bc61:	inc    esi
  41bc62:	(bad)  
  41bc63:	(bad)  
  41bc64:	and    esp,DWORD PTR [edi-0x1d]
  41bc67:	push   ebp
  41bc68:	and    BYTE PTR [ecx-0x1c257066],cl
  41bc6e:	fwait
  41bc6f:	cmp    al,0x13
  41bc71:	xor    eax,0xd521dda6
  41bc76:	mov    ebx,0x4256aa71
  41bc7b:	push   ds
  41bc7c:	xchg   dh,ch
  41bc7e:	or     BYTE PTR [ebp+0x136f3a1c],ch
  41bc84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc85:	dec    edi
  41bc86:	(bad)  
  41bc87:	push   0x3a9c5902
  41bc8c:	clc    
  41bc8d:	mov    WORD PTR [eax-0x73],es
  41bc90:	fsub   DWORD PTR [ebx-0x2a]
  41bc93:	mov    ds:0xe4e0c5ac,al
  41bc98:	pop    ss
  41bc99:	dec    eax
  41bc9a:	cmp    al,0x8f
  41bc9c:	and    DWORD PTR [esi-0x26],0xffffffe6
  41bca0:	lock mov DWORD PTR [edi-0x77],ebp
  41bca4:	mov    edi,0x86f14263
  41bca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcaa:	xlat   BYTE PTR ds:[ebx]
  41bcab:	and    eax,0xe050ca35
  41bcb0:	dec    ecx
  41bcb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb2:	pop    ebp
  41bcb3:	or     al,0x63
  41bcb5:	mov    bh,0xd9
  41bcb7:	int3   
  41bcb8:	cwde   
  41bcb9:	mov    edi,DWORD PTR [edx-0x18e39901]
  41bcbf:	fwait
  41bcc0:	dec    eax
  41bcc1:	pop    edx
  41bcc2:	adc    edi,DWORD PTR [ebp+ebp*8+0x7]
  41bcc6:	push   ebx
  41bcc7:	add    DWORD PTR fs:[eax+0x6ffa2fb0],edx
  41bcce:	scas   al,BYTE PTR es:[edi]
  41bccf:	jne    0x41bc55
  41bcd1:	lods   eax,DWORD PTR ds:[esi]
  41bcd2:	mov    al,ds:0x43e347c5
  41bcd7:	sbb    eax,0xc4fddd75
  41bcdc:	js     0x41bd5d
  41bcde:	xor    eax,DWORD PTR [esi]
  41bce0:	iret   
  41bce1:	divps  xmm3,xmm7
  41bce4:	mov    cl,0x5f
  41bce6:	das    
  41bce7:	sbb    eax,0xd9057be6
  41bcec:	inc    ebx
  41bced:	dec    ebx
  41bcee:	inc    edi
  41bcef:	sub    ebp,ebp
  41bcf1:	lahf   
  41bcf2:	scas   eax,DWORD PTR es:[edi]
  41bcf3:	xor    DWORD PTR [esi+0xfa3bc9f],esp
  41bcf9:	mov    BYTE PTR [ebx],ah
  41bcfb:	add    ah,ah
  41bcfd:	sub    BYTE PTR [ecx+ebp*1-0x531aa220],bh
  41bd04:	mov    DWORD PTR [ecx+0x38],eax
  41bd07:	sub    al,0xe7
  41bd09:	xchg   edx,eax
  41bd0a:	cmp    edx,DWORD PTR [esi]
  41bd0c:	and    al,0xd8
  41bd0e:	push   0x6d37fb6b
  41bd13:	mov    ebx,0xd3bbfba8
  41bd18:	icebp  
  41bd19:	xchg   edx,eax
  41bd1a:	lods   eax,DWORD PTR ds:[esi]
  41bd1b:	push   ss
  41bd1c:	stos   BYTE PTR es:[edi],al
  41bd1d:	sbb    ah,BYTE PTR [ebx]
  41bd1f:	fldenv [edx]
  41bd21:	fstp   TBYTE PTR [edi+0x5d]
  41bd24:	cmp    DWORD PTR [eax-0x562dbbdc],esp
  41bd2a:	out    dx,al
  41bd2b:	gs das 
  41bd2d:	and    al,0xc6
  41bd2f:	lea    edx,[eax]
  41bd31:	sub    DWORD PTR [ebx+ecx*4],0x9c467d20
  41bd38:	aaa    
  41bd39:	cmp    al,0x8b
  41bd3b:	mov    eax,ds:0x7a1ed3e0
  41bd40:	cld    
  41bd41:	and    ah,ch
  41bd43:	lahf   
  41bd44:	fsub   QWORD PTR fs:[ecx+eiz*2+0x551de366]
  41bd4c:	add    DWORD PTR [eax-0x39],edx
  41bd4f:	ja     0x41bd8c
  41bd51:	xor    eax,0xb10b6382
  41bd56:	jne    0x41bcfb
  41bd58:	into   
  41bd59:	or     bl,dl
  41bd5b:	sbb    DWORD PTR [ebp+0x7b00ceda],ebx
  41bd61:	in     eax,0xc0
  41bd63:	push   eax
  41bd64:	jnp    0x41bd28
  41bd66:	xlat   BYTE PTR cs:[ebx]
  41bd68:	addr16 (bad) 
  41bd6a:	adc    DWORD PTR [ebp-0x31b2a83d],edx
  41bd70:	inc    ebx
  41bd71:	call   0xbb25d5a5
  41bd76:	hlt    
  41bd77:	pop    eax
  41bd78:	aaa    
  41bd79:	test   dh,0x97
  41bd7c:	out    0xdf,al
  41bd7e:	and    BYTE PTR [edi+0x69],dl
  41bd81:	(bad)  
  41bd82:	mov    ch,0x2
  41bd84:	aad    0x1a
  41bd86:	adc    DWORD PTR [edx],esp
  41bd88:	repnz mov ecx,0x1edf5ea
  41bd8e:	mov    dl,0x93
  41bd90:	pop    esi
  41bd91:	(bad)  
  41bd92:	fcmovnbe st,st(7)
  41bd94:	(bad)  
  41bd95:	mov    edi,0x77e7b82c
  41bd9a:	mov    esi,0x91cbb3eb
  41bd9f:	or     DWORD PTR [edx],ecx
  41bda1:	pop    ebp
  41bda2:	push   ecx
  41bda3:	cmp    ebx,DWORD PTR [esp+edi*4-0x36]
  41bda7:	ss pusha 
  41bda9:	cli    
  41bdaa:	mov    ds:0x8e570bf4,eax
  41bdaf:	xor    BYTE PTR [eax],ch
  41bdb1:	dec    eax
  41bdb2:	adc    esp,DWORD PTR [eax-0x24021b9b]
  41bdb8:	or     ch,BYTE PTR es:[edx-0x3076ea02]
  41bdbf:	xor    edx,DWORD PTR [eax-0x8]
  41bdc2:	xchg   DWORD PTR [ecx+0x5a877820],eax
  41bdc8:	jns    0x41be08
  41bdca:	add    esi,DWORD PTR [eax]
  41bdcc:	clc    
  41bdcd:	in     al,0xd5
  41bdcf:	repz push ebx
  41bdd1:	sti    
  41bdd2:	loopne 0x41bdb9
  41bdd4:	lahf   
  41bdd5:	jne    0x41be2f
  41bdd7:	popa   
  41bdd8:	sahf   
  41bdd9:	jp     0x41bdc3
  41bddb:	and    bh,BYTE PTR [ebp+0x51ae931f]
  41bde1:	mov    ecx,DWORD PTR [esi]
  41bde3:	nop
  41bde4:	xchg   ch,bl
  41bde6:	ja     0x41bd8e
  41bde8:	jp     0x41bd95
  41bdea:	add    ecx,eax
  41bdec:	push   eax
  41bded:	stos   BYTE PTR es:[edi],al
  41bdee:	retf   0x63b7
  41bdf1:	dec    ebp
  41bdf2:	leave  
  41bdf3:	retf   0xc590
  41bdf6:	pop    edi
  41bdf7:	clc    
  41bdf8:	(bad)
  41bdfb:	in     eax,0xe4
  41bdfd:	out    0xe7,al
  41bdff:	test   eax,0xde483c11
  41be04:	pop    ebp
  41be05:	(bad)  
  41be07:	push   cs
  41be08:	mov    esi,DWORD PTR [eax+eiz*1+0x7887c59d]
  41be0f:	adc    dl,BYTE PTR [eax+0x3315f9a9]
  41be15:	inc    ecx
  41be16:	xchg   DWORD PTR [eax+eax*2+0x33],ebx
  41be1a:	dec    edx
  41be1b:	push   esp
  41be1c:	jo     0x41bdae
  41be1e:	adc    esp,edi
  41be20:	(bad)  
  41be21:	fild   QWORD PTR [ebx]
  41be23:	mov    edi,0xeff83546
  41be28:	ficomp WORD PTR [ebx+0x7b39dd4]
  41be2e:	test   al,0x73
  41be30:	aam    0xc5
  41be32:	jno    0x41be39
  41be34:	jle    0x41be7c
  41be36:	fidiv  WORD PTR [ebp+ebx*1+0x7e579874]
  41be3d:	stc    
  41be3e:	enter  0x5fc9,0xf4
  41be42:	bound  ebp,QWORD PTR [eax]
  41be44:	or     eax,DWORD PTR [edx]
  41be46:	int    0x59
  41be48:	sub    ecx,DWORD PTR [ecx-0x10]
  41be4b:	pop    edx
  41be4c:	jno    0x41beab
  41be4e:	cmp    DWORD PTR [edi],esi
  41be50:	fnsave [ecx+0x5c]
  41be53:	push   esi
  41be54:	cwde   
  41be55:	push   edx
  41be56:	inc    edx
  41be57:	js     0x41bea7
  41be59:	and    DWORD PTR [ebx-0x6368207c],esi
  41be5f:	and    al,0xc5
  41be61:	popf   
  41be62:	jle    0x41be6c
  41be64:	xchg   edi,eax
  41be65:	retf   0x9e47
  41be68:	stos   BYTE PTR es:[edi],al
  41be69:	repnz push ecx
  41be6b:	std    
  41be6c:	jmp    0xd7d6:0x3a9b429a
  41be73:	cmp    edx,DWORD PTR [ebx-0x35]
  41be76:	cmp    ebp,ebp
  41be78:	inc    edi
  41be79:	jo     0x41be1b
  41be7b:	add    edi,ebx
  41be7d:	sbb    eax,0x7ee51872
  41be82:	call   0x7a94:0x5443baf
  41be89:	int3   
  41be8a:	pop    edi
  41be8b:	neg    DWORD PTR [esi+eax*1+0x0]
  41be8f:	mov    BYTE PTR [edi-0x167b1462],0xb8
  41be96:	inc    ecx
  41be97:	cwde   
  41be98:	neg    BYTE PTR [esi]
  41be9a:	call   0x94b37de1
  41be9f:	sbb    eax,0x45d10089
  41bea4:	add    al,0x39
  41bea6:	dec    ebp
  41bea7:	ja     0x41be81
  41bea9:	std    
  41beaa:	fidivr DWORD PTR [ecx-0x30]
  41bead:	aas    
  41beae:	aas    
  41beaf:	mov    ah,0xd0
  41beb1:	ficom  WORD PTR [esi+0x6c]
  41beb4:	inc    esp
  41beb5:	cmp    cl,BYTE PTR [ebp+eax*8+0x10]
  41beb9:	add    BYTE PTR [ecx+0x1b8fc65d],bl
  41bebf:	(bad)  
  41bec0:	(bad)  
  41bec1:	fcomp  QWORD PTR [eax]
  41bec3:	les    edi,FWORD PTR [edx+0x3c]
  41bec6:	out    dx,eax
  41bec7:	iret   
  41bec8:	ds loopne 0x41be78
  41becb:	not    BYTE PTR [edx-0x23]
  41bece:	mul    DWORD PTR [eax+edx*8-0x1815437a]
  41bed5:	sub    al,0x54
  41bed7:	enter  0xd4fb,0x45
  41bedb:	and    DWORD PTR [eax-0x70dfbd17],ebx
  41bee1:	addr16 dec edi
  41bee3:	mov    ?,WORD PTR [eax+0x1a]
  41bee6:	mov    esp,0xcd9c9952
  41beeb:	inc    ebx
  41beec:	retf   0x554e
  41beef:	sbb    dl,BYTE PTR [esi+0x54ae6d30]
  41bef5:	(bad)  
  41bef7:	adc    eax,0x11e58bf
  41befc:	sub    dl,BYTE PTR [esi-0x2d]
  41beff:	pop    ebp
  41bf00:	lahf   
  41bf01:	sbb    eax,0x5cf7ee1a
  41bf06:	xchg   edx,eax
  41bf07:	clc    
  41bf08:	(bad)  
  41bf09:	cld    
  41bf0a:	rcl    BYTE PTR [ebp-0x3645cc4],0xfa
  41bf11:	call   0x4411b5fa
  41bf16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf17:	int3   
  41bf18:	test   ah,0xad
  41bf1b:	push   edi
  41bf1c:	cli    
  41bf1d:	lahf   
  41bf1e:	push   es
  41bf1f:	mov    ebx,0x305b1cca
  41bf24:	mov    WORD PTR [ebp+0xbcebc73],es
  41bf2a:	fdiv   QWORD PTR [esi]
  41bf2c:	aas    
  41bf2d:	arpl   WORD PTR [ebx-0x19],bx
  41bf30:	mov    fs,WORD PTR ds:0x7af9bd1b
  41bf36:	push   ecx
  41bf37:	xor    eax,0x49bf4897
  41bf3c:	push   esi
  41bf3d:	fwait
  41bf3e:	push   cs
  41bf3f:	sbb    DWORD PTR ds:0x25d1b10c,ebx
  41bf45:	dec    ecx
  41bf46:	rol    bl,1
  41bf48:	push   ebx
  41bf49:	cwde   
  41bf4a:	cld    
  41bf4b:	adc    eax,0xdb75ef55
  41bf50:	in     eax,0xb2
  41bf52:	jns    0x41bf9f
  41bf54:	jle    0x41bedb
  41bf56:	jae    0x41bfa9
  41bf58:	sub    DWORD PTR [eax],0x4c
  41bf5b:	in     eax,0x5
  41bf5d:	jo     0x41bf34
  41bf5f:	push   eax
  41bf60:	sbb    BYTE PTR [esi+eiz*1],dl
  41bf63:	daa    
  41bf64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf65:	jbe    0x41bf38
  41bf67:	and    BYTE PTR [eax-0x53],al
  41bf6a:	xchg   bl,ah
  41bf6c:	cmp    esi,DWORD PTR ss:[ebp+0x232410e0]
  41bf73:	add    al,0x5f
  41bf75:	(bad)  
  41bf76:	into   
  41bf77:	xor    al,0x71
  41bf79:	loop   0x41bfe8
  41bf7b:	and    DWORD PTR ds:[ebp+eax*1-0x433a8e85],eax
  41bf83:	inc    ebp
  41bf84:	clc    
  41bf85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf86:	call   0x412b4cd5
  41bf8b:	icebp  
  41bf8c:	and    DWORD PTR [edx+0x8],ecx
  41bf8f:	lock mov ds:0xb0667225,eax
  41bf95:	and    DWORD PTR [eax-0x69c129ea],ecx
  41bf9b:	test   BYTE PTR [ebx],0x17
  41bf9e:	call   0x9451c293
  41bfa3:	mov    eax,ds:0x21d79e25
  41bfa8:	in     eax,dx
  41bfa9:	dec    esi
  41bfaa:	aaa    
  41bfab:	mov    esi,0x5bb789dd
  41bfb0:	xlat   BYTE PTR ds:[ebx]
  41bfb1:	adc    eax,0x56b37c9
  41bfb6:	jp     0x41bf5c
  41bfb8:	in     eax,0x80
  41bfba:	xchg   BYTE PTR [ebp+0x17],bh
  41bfbd:	mov    eax,0xa2687692
  41bfc2:	xor    esp,DWORD PTR [ebp+edi*2-0x62]
  41bfc6:	sub    eax,0x7bf20fbc
  41bfcb:	jo     0x41bfae
  41bfcd:	int    0x7b
  41bfcf:	jmp    0xb8be58ca
  41bfd4:	lds    edx,FWORD PTR [edx]
  41bfd6:	or     eax,DWORD PTR [eax-0xd]
  41bfd9:	jle    0x41bf75
  41bfdb:	inc    esp
  41bfdc:	and    DWORD PTR [eax-0x58],esi
  41bfdf:	push   edx
  41bfe0:	test   al,0xb3
  41bfe2:	add    DWORD PTR [edi+0x222a1cc0],ecx
  41bfe8:	mov    eax,ds:0xfdccc6e1
  41bfed:	cmp    al,0xe
  41bfef:	xchg   ecx,eax
  41bff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff1:	push   ebp
  41bff2:	enter  0x36e3,0xa7
  41bff6:	mov    dl,0xb8
  41bff8:	cmp    dh,BYTE PTR [eax-0x7de2d4a2]
  41bffe:	pop    es
  41bfff:	fidivr DWORD PTR [ebp+0x1c9bdc7a]
  41c005:	mov    ch,BYTE PTR [edi-0x5a]
  41c008:	aaa    
  41c009:	out    0xbd,eax
  41c00b:	and    bl,BYTE PTR [eax-0x3]
  41c00e:	(bad)  
  41c00f:	cwde   
  41c010:	out    0x39,eax
  41c012:	fistp  DWORD PTR [ebp+0x6d]
  41c015:	call   0xcdee:0x6410c916
  41c01c:	jmp    0x10adc34
  41c021:	fs rcr cl,0x7c
  41c025:	and    ebx,DWORD PTR [ebp-0x7881ec70]
  41c02b:	je     0x41c075
  41c02d:	sub    al,0x12
  41c02f:	dec    ebx
  41c030:	cmp    al,0xe
  41c032:	push   ebp
  41c033:	cli    
  41c034:	adc    ecx,DWORD PTR [ecx+0x9368dee]
  41c03a:	cs and al,ah
  41c03d:	or     DWORD PTR [ebp+0x65],esi
  41c040:	mov    eax,ds:0x1e43dca2
  41c045:	push   esi
  41c046:	popf   
  41c047:	dec    esi
  41c048:	stc    
  41c049:	jae    0x41bfdb
  41c04b:	cmp    DWORD PTR [ecx-0x40],esp
  41c04e:	mov    ds:0x5d9b6ac3,eax
  41c053:	mov    esp,0x46e1c188
  41c058:	xchg   ecx,eax
  41c059:	stc    
  41c05a:	jno    0x41c089
  41c05c:	adc    cl,bl
  41c05e:	lock mov esi,0xba1f8de1
  41c064:	and    cl,bl
  41c066:	adc    ecx,DWORD PTR ds:0x84313091
  41c06c:	imul   ecx,DWORD PTR [edx-0x6e086549],0xb3e0cbe8
  41c076:	clc    
  41c077:	pop    ebp
  41c078:	push   eax
  41c079:	push   ecx
  41c07a:	out    0xb7,eax
  41c07c:	lds    ebx,FWORD PTR [edi]
  41c07e:	mov    ebx,0x13b809e5
  41c083:	dec    ebx
  41c084:	mov    ch,0x5
  41c086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c087:	in     eax,dx
  41c088:	push   es
  41c089:	out    dx,al
  41c08a:	xor    al,BYTE PTR es:[edi]
  41c08d:	xor    BYTE PTR [eax+0x71737010],ch
  41c093:	mov    dl,0x66
  41c095:	sbb    eax,0x8e1616af
  41c09a:	pop    ecx
  41c09b:	daa    
  41c09c:	cmp    al,0x9c
  41c09e:	jg     0x41c084
  41c0a0:	jbe    0x41c10c
  41c0a2:	mov    bl,0xd2
  41c0a4:	xor    DWORD PTR [edx-0x6],esi
  41c0a7:	loopne 0x41c113
  41c0a9:	ficomp WORD PTR [edi]
  41c0ab:	and    BYTE PTR [edx-0x13],ch
  41c0ae:	mov    eax,0x9a489ef7
  41c0b3:	stos   BYTE PTR es:[edi],al
  41c0b4:	mul    edi
  41c0b6:	mov    sp,0xcd8a
  41c0ba:	(bad)  
  41c0bb:	aam    0x2d
  41c0bd:	rcr    DWORD PTR [ebp+eax*8-0x4f33522f],0x28
  41c0c5:	sbb    al,0x6d
  41c0c7:	xchg   ebx,eax
  41c0c8:	ret    
  41c0c9:	sbb    eax,0x39d2123c
  41c0ce:	pop    edx
  41c0cf:	inc    ecx
  41c0d0:	jecxz  0x41c14f
  41c0d2:	shl    DWORD PTR [edx-0x2901c957],1
  41c0d8:	push   0x5b
  41c0da:	or     BYTE PTR [eax],dl
  41c0dc:	retf   
  41c0dd:	dec    ecx
  41c0de:	add    ecx,DWORD PTR [edi+edi*1]
  41c0e1:	call   0x44e1:0xf87da5a1
  41c0e8:	inc    esi
  41c0e9:	cs (bad) 
  41c0eb:	mov    edx,gs
  41c0ed:	xor    al,0x9a
  41c0ef:	call   0xb72918b5
  41c0f4:	outs   dx,DWORD PTR ds:[esi]
  41c0f5:	popa   
  41c0f6:	sub    eax,0x41099f25
  41c0fb:	or     al,0x6
  41c0fd:	xor    al,0x8f
  41c0ff:	jne    0x41c13b
  41c101:	sahf   
  41c102:	retf   
  41c103:	shl    DWORD PTR [esi-0x1bdd225f],0x7b
  41c10a:	ins    DWORD PTR es:[edi],dx
  41c10b:	and    edi,eax
  41c10d:	arpl   WORD PTR [ecx+0x65e0ed01],si
  41c113:	int    0xe5
  41c115:	mov    DWORD PTR [ebx+0x39],esp
  41c118:	stos   BYTE PTR es:[edi],al
  41c119:	dec    esp
  41c11a:	in     al,dx
  41c11b:	adc    esp,ebp
  41c11d:	pop    edi
  41c11e:	adc    dh,BYTE PTR [esi+0x12bb3d6b]
  41c124:	push   ecx
  41c125:	sbb    eax,0x76b67cf6
  41c12a:	xor    cl,BYTE PTR [eax]
  41c12c:	cmp    eax,DWORD PTR [ebp-0xbd70444]
  41c132:	jg     0x41c0de
  41c134:	nop
  41c135:	test   BYTE PTR [edi+0x5e02a35a],ah
  41c13b:	pop    ecx
  41c13c:	test   BYTE PTR [ebx-0x543ccf96],0x63
  41c143:	fst    QWORD PTR [edx+0xfeda1fb]
  41c149:	into   
  41c14a:	push   ss
  41c14b:	cwde   
  41c14c:	dec    esi
  41c14d:	push   es
  41c14e:	cmp    BYTE PTR [esi],ch
  41c150:	arpl   WORD PTR [eax-0x4555152e],bx
  41c156:	pop    ss
  41c157:	retf   0x2e8b
  41c15a:	jno    0x41c1d8
  41c15c:	(bad)  
  41c15d:	out    dx,eax
  41c15e:	xchg   ecx,eax
  41c15f:	or     eax,0x6679ee14
  41c164:	repz repnz push ds
  41c167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c168:	aas    
  41c169:	lock out 0x53,eax
  41c16c:	ret    0xa96f
  41c16f:	mov    bl,0x25
  41c171:	push   ebx
  41c172:	ret    
  41c173:	aaa    
  41c174:	ja     0x41c15f
  41c176:	adc    BYTE PTR [edi],al
  41c178:	xor    eax,0x4f95ae04
  41c17d:	sar    BYTE PTR [eax-0x315bb5ba],cl
  41c183:	into   
  41c184:	cs dec ecx
  41c186:	and    esp,DWORD PTR [esi+0x22ae1038]
  41c18c:	xor    BYTE PTR [ebx+eiz*1-0x11],al
  41c190:	loop   0x41c1cd
  41c192:	mov    eax,0xa728c212
  41c197:	sahf   
  41c198:	hlt    
  41c199:	lea    eax,[esi]
  41c19b:	mov    al,0x2e
  41c19d:	pop    ds
  41c19e:	dec    ebx
  41c19f:	inc    edx
  41c1a0:	adc    DWORD PTR [ebp+0x3301f0dd],ecx
  41c1a6:	xchg   BYTE PTR [ebp-0x13],dh
  41c1a9:	cmp    dl,cl
  41c1ab:	mov    ch,0x18
  41c1ad:	xchg   DWORD PTR [eax+0x6b],esi
  41c1b0:	clc    
  41c1b1:	mov    dl,0x56
  41c1b3:	xchg   edi,eax
  41c1b4:	fidiv  DWORD PTR [edx]
  41c1b6:	repz mov ?,WORD PTR [edx-0xa]
  41c1ba:	sar    ebp,0xea
  41c1bd:	sahf   
  41c1be:	test   BYTE PTR [bp+0x4a],dl
  41c1c2:	out    dx,al
  41c1c3:	mov    esp,0xbe1f4053
  41c1c8:	nop
  41c1c9:	cdq    
  41c1ca:	mov    ecx,cs
  41c1cc:	mov    ah,0xf5
  41c1ce:	jb     0x41c1fe
  41c1d0:	aam    0xe7
  41c1d2:	adc    al,0x43
  41c1d4:	cli    
  41c1d5:	js     0x41c1c9
  41c1d7:	push   ss
  41c1d8:	xchg   edx,eax
  41c1d9:	loop   0x41c1ac
  41c1db:	inc    edx
  41c1dc:	pop    esp
  41c1dd:	test   eax,0x7c4eabe7
  41c1e2:	lods   eax,DWORD PTR ds:[esi]
  41c1e3:	pop    ds
  41c1e4:	cmp    al,BYTE PTR [ebp-0x49]
  41c1e7:	test   al,0xfb
  41c1e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ea:	sub    eax,0x9cb1de92
  41c1ef:	ret    0x8404
  41c1f2:	adc    eax,0xc31dc3d0
  41c1f7:	ror    DWORD PTR [edi-0x13df9ed0],0xc3
  41c1fe:	mov    bl,0xe1
  41c200:	fsubr  st,st(7)
  41c202:	and    eax,0xa519638a
  41c207:	pop    es
  41c208:	mov    ecx,0x50204206
  41c20d:	pop    ss
  41c20e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c20f:	or     eax,0xd42988a2
  41c214:	test   DWORD PTR [edi-0x4a],edx
  41c217:	mov    al,ds:0xa1eccdf5
  41c21c:	inc    esi
  41c21d:	jb     0x41c1d7
  41c21f:	jg     0x41c29e
  41c221:	inc    esp
  41c222:	pop    ss
  41c223:	dec    ecx
  41c224:	and    BYTE PTR [edi+0xb23edc6],dl
  41c22a:	jmp    0x41c20d
  41c22c:	jbe    0x41c21d
  41c22e:	add    ebx,DWORD PTR [ecx+0x1390b7f0]
  41c234:	push   edi
  41c235:	test   al,0x79
  41c237:	sbb    al,0x63
  41c239:	cli    
  41c23a:	and    ebx,ebx
  41c23c:	and    BYTE PTR [ecx+0x4fad63f9],cl
  41c242:	lods   eax,DWORD PTR ds:[esi]
  41c243:	pop    ss
  41c244:	inc    eax
  41c245:	inc    ebx
  41c246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c247:	les    edx,FWORD PTR [edi+0x285de710]
  41c24d:	cmp    ah,ah
  41c24f:	xchg   ecx,eax
  41c250:	pop    ebx
  41c251:	mov    eax,ds:0x43cef251
  41c256:	lea    ebx,[ecx-0x6a41a70a]
  41c25c:	outs   dx,BYTE PTR ds:[esi]
  41c25d:	imul   ebx,DWORD PTR [edx+0x4b],0xffffffeb
  41c261:	repz shr DWORD PTR [edi],1
  41c264:	or     ch,BYTE PTR [edi-0x35333d01]
  41c26a:	sub    ah,BYTE PTR [edx]
  41c26c:	lahf   
  41c26d:	daa    
  41c26e:	pop    ebx
  41c26f:	je     0x41c2cf
  41c271:	sbb    eax,0xa711e53d
  41c276:	sbb    eax,0x585cde3c
  41c27b:	add    al,0x2
  41c27d:	int    0xd9
  41c27f:	xchg   esp,eax
  41c280:	pop    edx
  41c281:	jp     0x41c2d1
  41c283:	(bad)  
  41c284:	mov    ebp,0xa84de161
  41c289:	rcl    BYTE PTR [ebx+eax*4+0xd63e0fc],0xfc
  41c291:	pushf  
  41c292:	mov    ebx,0x97ee66c1
  41c297:	inc    ebp
  41c298:	jp     0x41c306
  41c29a:	les    eax,FWORD PTR [edi+0x7a]
  41c29d:	jae    0x41c21f
  41c29f:	gs mov esi,0x523ec4b9
  41c2a5:	inc    esp
  41c2a6:	fadd   DWORD PTR [ebx-0x7d]
  41c2a9:	mov    esp,0x6a5edf37
  41c2ae:	dec    edi
  41c2af:	ds jge 0x41c27d
  41c2b2:	push   es
  41c2b3:	and    DWORD PTR [eax],ecx
  41c2b5:	pop    ebp
  41c2b6:	jae    0x41c2fe
  41c2b8:	xor    BYTE PTR [eax+0xa],dl
  41c2bb:	ss hlt 
  41c2bd:	icebp  
  41c2be:	jg     0x41c244
  41c2c0:	(bad)  
  41c2c2:	adc    bh,0x2e
  41c2c5:	pop    esp
  41c2c6:	pop    edx
  41c2c7:	dec    esi
  41c2c8:	pusha  
  41c2c9:	and    DWORD PTR [edx+0xd],edx
  41c2cc:	mov    bl,0xb9
  41c2ce:	pusha  
  41c2cf:	push   eax
  41c2d0:	or     eax,0x3c3dcd0b
  41c2d5:	sbb    ch,BYTE PTR [ebx+0x2d]
  41c2d8:	cmp    ebp,esp
  41c2da:	das    
  41c2db:	lds    esp,FWORD PTR [edi-0xd]
  41c2de:	lock add eax,0xb1d25695
  41c2e4:	movaps XMMWORD PTR [esi-0x70b5e13a],xmm0
  41c2eb:	xchg   DWORD PTR [edi],esi
  41c2ed:	sbb    eax,0x1cdeffea
  41c2f2:	mov    eax,ds:0xe990d17f
  41c2f7:	shl    BYTE PTR ds:0x457a4c7f,0xa
  41c2fe:	pusha  
  41c2ff:	pop    esi
  41c300:	repnz (bad) 
  41c302:	inc    DWORD PTR [ebx-0x2d]
  41c305:	ins    BYTE PTR es:[edi],dx
  41c306:	xor    al,0x18
  41c308:	ror    eax,cl
  41c30a:	ret    0xe242
  41c30d:	push   ecx
  41c30e:	imul   ecx,DWORD PTR [eax],0xd0bbd7f1
  41c314:	sub    DWORD PTR [ecx-0x431d7f86],ebx
  41c31a:	aaa    
  41c31b:	int    0x83
  41c31d:	repz pop ds
  41c31f:	dec    ebx
  41c320:	jl     0x41c352
  41c322:	pop    eax
  41c323:	cmp    BYTE PTR [esi],0x96
  41c326:	xchg   esi,eax
  41c327:	push   eax
  41c328:	pusha  
  41c329:	jno    0x41c2e7
  41c32b:	push   cs
  41c32c:	or     eax,0xf7f24e80
  41c331:	fst    QWORD PTR [ebx+0x717d945d]
  41c337:	pop    ss
  41c338:	mov    al,ds:0x5f006067
  41c33d:	retf   0x1ff2
  41c340:	das    
  41c341:	ret    0x2537
  41c344:	inc    eax
  41c345:	lods   eax,DWORD PTR ds:[esi]
  41c346:	test   eax,0xf5d30951
  41c34b:	or     DWORD PTR [esi-0x12],edi
  41c34e:	mov    edi,0xf0a2f538
  41c353:	inc    ebp
  41c354:	push   cs
  41c355:	xchg   DWORD PTR [ebp+0x1a],ebx
  41c358:	jle    0x41c399
  41c35a:	mov    esp,0x1eeb7cdf
  41c35f:	dec    ebp
  41c360:	clc    
  41c361:	cdq    
  41c362:	xchg   esp,eax
  41c363:	jo     0x41c378
  41c365:	sbb    eax,0x82aa5a7c
  41c36a:	push   0xbf146cd5
  41c36f:	ss adc eax,0xabafad82
  41c375:	xor    eax,0x6a5c9c36
  41c37a:	fadd   DWORD PTR [ebx]
  41c37c:	or     eax,0xc618620
  41c381:	xor    BYTE PTR [edx+0x28],0xe3
  41c385:	xchg   esp,eax
  41c386:	clc    
  41c387:	idiv   bl
  41c389:	call   eax
  41c38b:	and    eax,DWORD PTR [eax-0x1920b2da]
  41c391:	clc    
  41c392:	push   ds
  41c393:	popa   
  41c394:	lock push ss
  41c396:	pop    edx
  41c397:	inc    eax
  41c398:	fstp   QWORD PTR [esp+eiz*2]
  41c39b:	fadd   DWORD PTR [edx-0x49c410da]
  41c3a1:	repnz push eax
  41c3a3:	out    dx,al
  41c3a4:	ret    
  41c3a5:	cdq    
  41c3a6:	sbb    ebp,0x43163526
  41c3ac:	imul   DWORD PTR [esi+0x359e68fc]
  41c3b2:	cwde   
  41c3b3:	cmp    edx,DWORD PTR [edx+0x5cef43cf]
  41c3b9:	jb     0x41c3a8
  41c3bb:	(bad)  
  41c3bc:	es xchg ebp,eax
  41c3be:	push   edx
  41c3bf:	add    al,0x40
  41c3c1:	push   edi
  41c3c2:	jge    0x41c35e
  41c3c4:	mov    ds:0x6cb01886,al
  41c3c9:	(bad)  
  41c3ca:	std    
  41c3cb:	push   ebx
  41c3cc:	inc    esi
  41c3cd:	or     ah,BYTE PTR [ecx+0x29]
  41c3d0:	aas    
  41c3d1:	ds lock xor eax,0x1e3206f4
  41c3d8:	inc    edx
  41c3d9:	inc    esi
  41c3da:	lods   al,BYTE PTR ds:[esi]
  41c3db:	jmp    0x56a061a8
  41c3e0:	jp     0x41c3a5
  41c3e2:	cmp    BYTE PTR [ebx+edi*2],al
  41c3e5:	je     0x41c42b
  41c3e7:	vsqrtsd xmm4,xmm7,QWORD PTR [ebp-0x27]
  41c3ec:	mov    ds:0xfff0ee9f,eax
  41c3f1:	(bad)  
  41c3f2:	es jae 0x41c447
  41c3f5:	call   0x83d16ad2
  41c3fa:	sbb    BYTE PTR [edx+0x4c],ch
  41c3fd:	mov    eax,0x51964137
  41c402:	lock test DWORD PTR [esp+esi*1],ebx
  41c406:	das    
  41c407:	add    ah,BYTE PTR [ebx-0x4bee01f7]
  41c40d:	fcomp  DWORD PTR [edi]
  41c40f:	cmp    BYTE PTR [edi],cl
  41c411:	int3   
  41c412:	(bad)  
  41c413:	hlt    
  41c414:	lahf   
  41c415:	mov    al,0x39
  41c417:	dec    eax
  41c418:	push   ebp
  41c419:	loope  0x41c3cb
  41c41b:	inc    esi
  41c41c:	lock sub eax,0x2f87b636
  41c422:	(bad)  
  41c423:	nop
  41c424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c425:	popf   
  41c426:	jbe    0x41c49e
  41c428:	inc    eax
  41c429:	(bad)  
  41c42a:	hlt    
  41c42b:	inc    esi
  41c42c:	pop    ebp
  41c42d:	aad    0xf
  41c42f:	cmp    al,0xf2
  41c431:	call   0xf29c:0xd81bb1f2
  41c438:	mov    edi,0xefd9a097
  41c43d:	iret   
  41c43e:	mov    bh,0x54
  41c440:	lods   al,BYTE PTR ds:[esi]
  41c441:	mov    eax,0x7c90b81
  41c446:	mov    al,ds:0xfaf6e0f5
  41c44b:	mov    ebp,0xb7a9ef9c
  41c450:	inc    ebx
  41c451:	jns    0x41c4c3
  41c453:	int3   
  41c454:	push   ebx
  41c456:	jg     0x41c4d5
  41c458:	ret    
  41c459:	bound  esi,QWORD PTR [edi+0x1093fc82]
  41c45f:	sbb    eax,0x4f50257c
  41c464:	or     al,0x31
  41c466:	sub    ebp,DWORD PTR [ecx+0x60]
  41c469:	(bad)  
  41c46a:	or     ecx,DWORD PTR [eax]
  41c46c:	sbb    BYTE PTR [edi-0x3c655e99],ah
  41c472:	clc    
  41c473:	mov    DWORD PTR [ebp-0x4c],ebp
  41c476:	fild   WORD PTR [ecx+0x5b597f70]
  41c47c:	sub    ebp,DWORD PTR [ecx+0x712985e3]
  41c482:	(bad)  [ebx+0x67]
  41c485:	dec    eax
  41c486:	sti    
  41c487:	cmc    
  41c488:	dec    edx
  41c489:	in     al,dx
  41c48a:	and    DWORD PTR [esi+0x25c3a0dc],esp
  41c490:	ret    
  41c491:	or     al,0xda
  41c493:	push   edx
  41c494:	mov    bl,bh
  41c496:	(bad)  
  41c497:	fidivr WORD PTR [eax+0x45]
  41c49a:	retf   
  41c49b:	loope  0x41c428
  41c49d:	not    ebx
  41c49f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a0:	xor    ebx,DWORD PTR [ebx]
  41c4a2:	inc    esi
  41c4a3:	pop    eax
  41c4a4:	in     eax,0x59
  41c4a6:	add    eax,0x7c2da4b9
  41c4ab:	data16 out dx,al
  41c4ad:	das    
  41c4ae:	rcr    edi,cl
  41c4b0:	add    BYTE PTR [edx-0x52841c7e],cl
  41c4b6:	cmp    eax,0x538757d3
  41c4bb:	sbb    al,0x34
  41c4bd:	push   edi
  41c4be:	inc    ecx
  41c4bf:	mov    ebp,0xa4303f97
  41c4c4:	mov    ecx,0x99a0ea56
  41c4c9:	inc    edi
  41c4ca:	add    eax,DWORD PTR ds:0x47cb3201
  41c4d0:	xchg   BYTE PTR [esi-0xe],al
  41c4d3:	jle    0x41c48f
  41c4d5:	fdiv   DWORD PTR [eax-0x2f]
  41c4d8:	adc    BYTE PTR [esp+ebx*4],bh
  41c4db:	daa    
  41c4dc:	mov    edx,0xe08f0035
  41c4e1:	icebp  
  41c4e2:	neg    BYTE PTR [ebx-0x10f873c2]
  41c4e8:	shl    BYTE PTR [ebx],0x4b
  41c4eb:	xor    DWORD PTR [ecx],0x1d
  41c4ee:	inc    edx
  41c4ef:	out    dx,al
  41c4f0:	jno    0x41c4db
  41c4f2:	aam    0xe1
  41c4f4:	push   0x291dafab
  41c4f9:	stc    
  41c4fa:	sbb    al,0xa3
  41c4fc:	clc    
  41c4fd:	jb     0x41c523
  41c4ff:	jbe    0x41c568
  41c501:	loop   0x41c582
  41c503:	pop    edi
  41c504:	cli    
  41c505:	cwde   
  41c506:	adc    eax,0x6f44eeef
  41c50b:	out    0x25,eax
  41c50d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c50e:	xor    BYTE PTR [ebp-0x22],ch
  41c511:	xor    al,0x6d
  41c513:	int3   
  41c514:	xchg   edi,eax
  41c515:	pop    edx
  41c516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c517:	adc    bh,BYTE PTR [ebx-0x55]
  41c51a:	jge    0x41c4e0
  41c51c:	stos   BYTE PTR es:[edi],al
  41c51d:	imul   esp,DWORD PTR [ecx+0x72],0x3c2a2f4c
  41c524:	or     eax,0x4bd069d2
  41c529:	popf   
  41c52a:	and    eax,0x915ec8a0
  41c52f:	bound  ebp,QWORD PTR [edi]
  41c531:	fsubr  DWORD PTR [esp+eax*1-0x76a27ec1]
  41c538:	scas   al,BYTE PTR es:[edi]
  41c539:	cs inc esp
  41c53b:	mov    cl,0xe3
  41c53d:	sbb    eax,0x5a90ff79
  41c542:	push   esp
  41c543:	and    BYTE PTR [ecx],ch
  41c545:	sub    BYTE PTR [ebx+0x515df20],al
  41c54b:	stos   DWORD PTR es:[edi],eax
  41c54c:	cmp    al,0x8e
  41c54e:	lahf   
  41c54f:	in     eax,0x40
  41c551:	sbb    DWORD PTR [edx-0x42],edi
  41c554:	push   ds
  41c555:	mov    ebp,0x6b9c8727
  41c55a:	mov    ch,0xc2
  41c55c:	nop
  41c55d:	dec    edi
  41c55e:	mov    eax,ds:0x283ec8b3
  41c563:	sahf   
  41c564:	pop    esi
  41c565:	inc    edx
  41c566:	dec    ebp
  41c567:	sbb    eax,0x4822b0b1
  41c56c:	dec    edx
  41c56d:	in     al,dx
  41c56e:	sahf   
  41c56f:	mov    DWORD PTR [esi-0x6],esp
  41c572:	in     eax,dx
  41c573:	das    
  41c574:	fincstp 
  41c576:	xor    cl,BYTE PTR [esi-0x18]
  41c579:	inc    ecx
  41c57a:	mov    ebp,0xc69ad681
  41c57f:	frstor [esi+0x7e]
  41c582:	jl     0x41c5cc
  41c584:	(bad)  
  41c585:	mov    bh,0x57
  41c587:	jnp    0x41c5ad
  41c589:	test   eax,0x9939efb8
  41c58e:	jb     0x41c51e
  41c590:	(bad)  
  41c591:	and    ecx,DWORD PTR [edx+0x7ecfa40c]
  41c597:	dec    ebp
  41c598:	adc    al,0xa2
  41c59a:	sti    
  41c59b:	mov    cl,0x9e
  41c59d:	and    ah,BYTE PTR [edi+0x5208723d]
  41c5a3:	lahf   
  41c5a4:	aad    0x1e
  41c5a6:	or     BYTE PTR [ebp+0x4e34e810],dh
  41c5ac:	mov    ds:0xf7d2230f,al
  41c5b1:	inc    ebp
  41c5b2:	xlat   BYTE PTR ds:[ebx]
  41c5b3:	arpl   WORD PTR [ebx+edi*4],cx
  41c5b6:	adc    eax,0x8390b70
  41c5bb:	pop    esi
  41c5bc:	xor    cl,dl
  41c5be:	pop    ecx
  41c5bf:	aad    0xbc
  41c5c1:	pavgb  mm4,QWORD PTR [ecx]
  41c5c4:	stos   BYTE PTR es:[edi],al
  41c5c5:	mov    dl,BYTE PTR [esp+edx*4+0x6f913450]
  41c5cc:	pop    ss
  41c5cd:	xchg   esp,eax
  41c5ce:	je     0x41c5ae
  41c5d0:	popf   
  41c5d1:	adc    BYTE PTR [edi-0x61c0690f],al
  41c5d7:	mov    WORD PTR [esi+edx*8-0x4d],ds
  41c5db:	mov    edi,0x70c0bbfb
  41c5e0:	test   al,0x2c
  41c5e2:	ror    BYTE PTR ds:0x448a8c6e,cl
  41c5e8:	mov    ch,0xc9
  41c5ea:	jae    0x41c5f3
  41c5ec:	sub    bl,BYTE PTR ds:0x75698871
  41c5f2:	and    BYTE PTR [edi+0x4b1b4d49],ch
  41c5f8:	fucompp 
  41c5fa:	enter  0x8665,0x31
  41c5fe:	ret    0xf606
  41c601:	mov    bl,0x7
  41c603:	lea    edx,[ebp-0x275c3a27]
  41c609:	mov    al,0x4f
  41c60b:	dec    edx
  41c60c:	xor    DWORD PTR [esi-0x742ed909],0x5af65da3
  41c616:	mov    es,WORD PTR [edi+0x31]
  41c619:	pop    ds
  41c61a:	lahf   
  41c61b:	(bad)  
  41c61c:	inc    edx
  41c61d:	scas   al,BYTE PTR es:[edi]
  41c61e:	mov    ch,0x5
  41c620:	cli    
  41c621:	rcr    BYTE PTR [eax],1
  41c623:	clc    
  41c624:	sub    DWORD PTR [esi-0x3e546420],ebp
  41c62a:	xlat   BYTE PTR ds:[ebx]
  41c62b:	xor    al,0x96
  41c62d:	mov    eax,ds:0xde6f529c
  41c632:	push   edx
  41c633:	mov    cl,0xb
  41c635:	fwait
  41c636:	mov    cl,0x17
  41c638:	addr16 in eax,0x2d
  41c63b:	sbb    eax,0x2ccfd70b
  41c640:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c642:	xchg   ebx,eax
  41c643:	pushf  
  41c644:	pop    es
  41c645:	push   ss
  41c646:	xor    edi,DWORD PTR [ebx-0x2d]
  41c649:	add    DWORD PTR [edx],eax
  41c64b:	or     eax,0xe3cab96b
  41c650:	pop    eax
  41c651:	mov    ebx,DWORD PTR [edi]
  41c653:	fwait
  41c654:	add    eax,0x4cf47a57
  41c659:	(bad)  
  41c65a:	mov    cl,0x6f
  41c65c:	jb     0x41c5e7
  41c65e:	sbb    BYTE PTR [ebp-0x5725c3c3],bl
  41c664:	mov    dh,0xd3
  41c666:	(bad)  
  41c668:	enter  0xb75f,0xa
  41c66c:	imul   edi,ecx,0xfffffff0
  41c66f:	sbb    bl,dl
  41c671:	fsubr  st,st(2)
  41c673:	and    dh,BYTE PTR [edx+0x53fce558]
  41c679:	xor    eax,0x1d25db4e
  41c67e:	push   cs
  41c67f:	into   
  41c680:	add    DWORD PTR [edx+0x15e460a7],0xe4978766
  41c68a:	xchg   ecx,eax
  41c68b:	call   0x7885:0xf1185a58
  41c692:	scas   al,BYTE PTR es:[edi]
  41c693:	xchg   edx,ecx
  41c695:	xchg   ch,bl
  41c697:	and    al,0x26
  41c699:	mov    eax,0xa3045773
  41c69e:	sub    cl,BYTE PTR [esi+0x3d]
  41c6a1:	cmp    DWORD PTR [esi-0x5ea6fc10],ecx
  41c6a7:	(bad)  
  41c6a8:	add    eax,0xccd4f2bc
  41c6ad:	popf   
  41c6ae:	aad    0x63
  41c6b0:	sbb    eax,0x8bd5fa8d
  41c6b5:	popf   
  41c6b6:	fst    QWORD PTR [ecx+0x24]
  41c6b9:	add    DWORD PTR [edx-0x1],ebx
  41c6bc:	arpl   WORD PTR [ecx],bp
  41c6be:	xor    BYTE PTR [eax],ch
  41c6c0:	sub    al,0x3b
  41c6c2:	pop    edi
  41c6c3:	ficom  WORD PTR [ebp+0x30f47df6]
  41c6c9:	test   eax,0x5a3e8e56
  41c6ce:	je     0x41c6cb
  41c6d0:	push   esp
  41c6d1:	loope  0x41c68f
  41c6d3:	cmp    BYTE PTR ds:0x87a706c3,dh
  41c6d9:	inc    ebp
  41c6da:	push   edx
  41c6db:	daa    
  41c6dc:	mov    ebx,0x628ce65
  41c6e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c6e4:	nop
  41c6e5:	das    
  41c6e6:	add    edx,DWORD PTR [ebx]
  41c6e8:	cmp    eax,0x82bf4295
  41c6ed:	cli    
  41c6ee:	mov    edi,0x4635695c
  41c6f3:	inc    edx
  41c6f4:	imul   esp,DWORD PTR [ebx],0xffffffb2
  41c6f7:	xlat   BYTE PTR ds:[ebx]
  41c6f8:	aaa    
  41c6f9:	xchg   ebx,eax
  41c6fa:	inc    ebp
  41c6fb:	test   eax,0xd9f676af
  41c700:	cs inc ecx
  41c702:	ds int3 
  41c704:	and    al,0xec
  41c706:	xchg   ebx,eax
  41c707:	xor    ebx,0xaee16504
  41c70d:	loop   0x41c73f
  41c70f:	pop    ecx
  41c710:	or     al,0xd6
  41c712:	jg     0x41c6bc
  41c714:	cmp    DWORD PTR [esi],edx
  41c716:	aad    0x88
  41c718:	dec    esp
  41c719:	jg     0x41c78a
  41c71b:	stos   DWORD PTR es:[edi],eax
  41c71c:	xor    edx,edx
  41c71e:	cmp    DWORD PTR [esi],ebx
  41c720:	out    0x1a,eax
  41c722:	mov    ecx,0x68aa39c9
  41c727:	dec    esp
  41c728:	mov    al,0xc8
  41c72a:	dec    edx
  41c72b:	add    eax,0x40f30ce5
  41c730:	test   al,0x63
  41c732:	cmp    al,0xb3
  41c734:	xchg   edi,eax
  41c735:	repnz bound esi,QWORD PTR [esi-0xf]
  41c739:	(bad)  
  41c73a:	fidivr DWORD PTR [esi]
  41c73c:	cmp    edi,ecx
  41c73e:	push   ebx
  41c73f:	mov    cl,BYTE PTR [ebp-0x30]
  41c742:	cmp    bl,ah
  41c744:	dec    esp
  41c745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c746:	push   es
  41c747:	fisubr WORD PTR [edx]
  41c749:	data16 lods al,BYTE PTR ds:[esi]
  41c74b:	pop    edx
  41c74c:	lahf   
  41c74d:	jp     0x41c6e1
  41c74f:	cmp    al,0xa8
  41c751:	inc    ebx
  41c752:	loop   0x41c787
  41c754:	sbb    dl,BYTE PTR [ebp+0x21b4e316]
  41c75a:	js     0x41c770
  41c75c:	adc    dl,BYTE PTR [eax-0x55]
  41c75f:	sbb    BYTE PTR [ebp-0x9],ch
  41c762:	(bad)  
  41c763:	arpl   WORD PTR [esi],dx
  41c765:	xchg   esi,eax
  41c766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c767:	adc    cl,BYTE PTR [ebp-0x18]
  41c76a:	fadd   QWORD PTR [ebx+0x2376104c]
  41c770:	lods   eax,DWORD PTR ds:[esi]
  41c771:	frstor [esi]
  41c773:	outs   dx,DWORD PTR ds:[esi]
  41c774:	sbb    al,0xe5
  41c776:	xor    eax,0x6f327ced
  41c77b:	leave  
  41c77c:	fisub  DWORD PTR [eax-0x77df276a]
  41c782:	mov    ?,WORD PTR [ebp-0x612dbde7]
  41c788:	xor    DWORD PTR [esi+0x24ec2f17],ebp
  41c78e:	inc    ebx
  41c78f:	xchg   ebp,eax
  41c790:	mov    edi,0x422dd1d0
  41c795:	dec    ebx
  41c796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c797:	rcl    BYTE PTR [esi+0x1a655eb0],1
  41c79d:	sbb    bl,0x74
  41c7a0:	gs push 0x7c0a5ced
  41c7a6:	repnz dec ebx
  41c7a8:	push   ss
  41c7a9:	fcom   DWORD PTR [eax-0x5cce3893]
  41c7af:	retf   
  41c7b0:	add    edx,DWORD PTR [ebx+0xb]
  41c7b3:	push   cs
  41c7b4:	dec    di
  41c7b6:	and    ebp,DWORD PTR fs:[eax]
  41c7b9:	ficomp DWORD PTR [eax]
  41c7bb:	mov    ebx,0x2f22efea
  41c7c0:	aaa    
  41c7c1:	xor    al,0xe0
  41c7c3:	xchg   ch,bh
  41c7c5:	arpl   WORD PTR [edx],sp
  41c7c7:	(bad)  
  41c7c9:	pop    ecx
  41c7ca:	sub    al,al
  41c7cc:	add    al,0x32
  41c7ce:	jb     0x41c847
  41c7d0:	mov    ds:0xd9fe16c0,eax
  41c7d5:	xchg   bh,ch
  41c7d7:	stos   DWORD PTR es:[edi],eax
  41c7d8:	sbb    al,0x22
  41c7da:	les    esi,FWORD PTR [ebp-0x1657c06]
  41c7e0:	mov    edx,0xb86afa16
  41c7e5:	or     edi,edi
  41c7e7:	and    esi,DWORD PTR [edx+0xe]
  41c7ea:	add    edi,0xffffffbf
  41c7ed:	mov    ebp,0x278a0ee6
  41c7f2:	(bad)  
  41c7f3:	repz fsubrp st(7),st
  41c7f6:	dec    ebx
  41c7f7:	imul   ebx,DWORD PTR [ebp+0x35129bdc],0x1903fdf
  41c801:	mul    DWORD PTR [edi-0x36]
  41c804:	out    0xb5,al
  41c806:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c808:	or     ecx,DWORD PTR [esi+edi*2-0x44382c30]
  41c80f:	mov    al,BYTE PTR [ebp+0x72]
  41c812:	xor    ch,BYTE PTR [ecx]
  41c814:	xchg   esp,eax
  41c815:	test   eax,0xb89770ac
  41c81a:	jle    0x41c81b
  41c81c:	dec    edx
  41c81d:	aas    
  41c81e:	es pop edi
  41c820:	rol    DWORD PTR [bp+di],0xe2
  41c824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c825:	les    esp,FWORD PTR [edi+eiz*1]
  41c828:	mov    al,BYTE PTR [edi]
  41c82a:	jns    0x41c7c7
  41c82c:	dec    esp
  41c82d:	shl    DWORD PTR [edx+0x7d],cl
  41c830:	lock dec ecx
  41c832:	cld    
  41c833:	jne    0x41c833
  41c835:	add    al,0x14
  41c837:	adc    al,BYTE PTR [eax-0x26]
  41c83a:	dec    esi
  41c83b:	sbb    esp,DWORD PTR [edi+0x28]
  41c83e:	popf   
  41c83f:	mov    ebx,0x5c95aa84
  41c844:	sub    eax,0x90688811
  41c849:	fld    QWORD PTR [edx-0x43b0af51]
  41c84f:	pop    es
  41c850:	adc    bl,BYTE PTR cs:[esi-0x6b]
  41c854:	dec    ebx
  41c855:	(bad)  
  41c857:	dec    edx
  41c858:	jne    0x41c82d
  41c85a:	cdq    
  41c85b:	adc    DWORD PTR [ebp-0x62b471d8],ebx
  41c861:	push   esi
  41c862:	retf   
  41c863:	pusha  
  41c864:	addr16 jmp 0x3c6b:0xeb468ff6
  41c86c:	outs   dx,BYTE PTR ds:[esi]
  41c86d:	popa   
  41c86e:	push   0x734b008
  41c873:	jmp    0x1583:0x59f2a915
  41c87a:	add    BYTE PTR [edx],ch
  41c87c:	sete   BYTE PTR [esi+ebx*4]
  41c880:	lods   al,BYTE PTR ds:[esi]
  41c881:	xchg   esi,eax
  41c882:	xor    dh,cl
  41c884:	inc    eax
  41c885:	or     DWORD PTR [edx-0x47],esp
  41c888:	add    al,0xdb
  41c88a:	repnz pop edx
  41c88c:	mov    ecx,?
  41c88e:	stc    
  41c88f:	outs   dx,BYTE PTR ds:[esi]
  41c890:	xchg   esp,eax
  41c891:	fcom   QWORD PTR ds:[edx]
  41c894:	mov    ss,WORD PTR [ebx-0x2b]
  41c897:	outs   dx,BYTE PTR ds:[esi]
  41c898:	mov    ebx,0x2ef39b76
  41c89d:	js     0x41c876
  41c89f:	repnz mov al,ds:0x78fbf169
  41c8a5:	jo     0x41c872
  41c8a7:	ins    BYTE PTR es:[edi],dx
  41c8a8:	xor    esi,ebp
  41c8aa:	cmp    eax,0x28e0b10c
  41c8af:	xchg   BYTE PTR [ecx],bh
  41c8b1:	sub    eax,0xdb5ecedf
  41c8b6:	sbb    al,0x78
  41c8b8:	or     eax,0xae1ff9d
  41c8bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8be:	fcom   QWORD PTR [ebp+0x386d478a]
  41c8c4:	sti    
  41c8c5:	cmp    eax,0xa1367fb
  41c8ca:	pop    esi
  41c8cb:	mov    ecx,0x60efbb75
  41c8d0:	mov    cl,0x2e
  41c8d2:	adc    dh,dh
  41c8d4:	aam    0xb0
  41c8d6:	test   al,0x1f
  41c8d8:	imul   esi,DWORD PTR [edx-0x35e07472],0xffffffb5
  41c8df:	inc    eax
  41c8e0:	cmp    cl,dh
  41c8e2:	pop    edi
  41c8e3:	or     BYTE PTR [esi-0x7f9a09f4],bl
  41c8e9:	and    ebp,DWORD PTR [ebx]
  41c8eb:	mov    dl,0xfc
  41c8ed:	dec    edx
  41c8ee:	pop    ebp
  41c8ef:	xor    ah,dh
  41c8f1:	inc    esi
  41c8f2:	daa    
  41c8f3:	test   eax,0x6e8b0399
  41c8f8:	push   es
  41c8f9:	inc    edi
  41c8fa:	das    
  41c8fb:	pop    edx
  41c8fc:	xchg   DWORD PTR [ecx],ebx
  41c8fe:	cmc    
  41c8ff:	add    al,0x7d
  41c901:	sahf   
  41c902:	fwait
  41c903:	gs jnp 0x41c8d6
  41c906:	ins    DWORD PTR es:[edi],dx
  41c907:	adc    eax,0xe25bdd11
  41c90c:	(bad)
  41c90f:	and    ah,bh
  41c911:	xchg   esp,eax
  41c912:	imul   ebp,esi,0x10932804
  41c918:	jae    0x41c95a
  41c91a:	(bad)  
  41c91b:	dec    ebp
  41c91c:	call   DWORD PTR [edx+0x72a68f29]
  41c922:	xchg   ebp,eax
  41c923:	imul   eax,DWORD PTR [ebp+0x25514957],0x7d
  41c92a:	sbb    eax,0x656e49c9
  41c92f:	mov    edi,0xac38f3eb
  41c934:	fisubr WORD PTR [edi-0x12]
  41c937:	xor    al,0x88
  41c939:	pop    edi
  41c93a:	rcl    al,1
  41c93c:	xor    DWORD PTR [ebp-0x46],ebp
  41c93f:	dec    esp
  41c940:	(bad)  
  41c941:	and    dh,ch
  41c943:	push   es
  41c944:	pop    ss
  41c945:	pop    esi
  41c946:	add    cl,BYTE PTR [eax]
  41c948:	pop    esp
  41c949:	mov    ebp,0x3f55993a
  41c94e:	mov    ah,0x5
  41c950:	mov    bl,0x58
  41c952:	add    BYTE PTR ds:0x7a3a70b8,al
  41c958:	mov    edx,0xf7b23938
  41c95d:	idiv   BYTE PTR [esi]
  41c95f:	pop    eax
  41c960:	add    eax,edi
  41c962:	fwait
  41c963:	scas   al,BYTE PTR es:[edi]
  41c964:	(bad)  
  41c965:	fild   QWORD PTR [esi+0x6dbdf082]
  41c96b:	lds    ecx,FWORD PTR [ecx-0x4f]
  41c96e:	jp     0x41c9bc
  41c970:	aam    0xd9
  41c972:	ins    BYTE PTR es:[edi],dx
  41c973:	bound  esp,QWORD PTR [ebp+ecx*4+0x51]
  41c977:	mov    gs:0x7e982a08,ax
  41c97e:	mov    dh,0x33
  41c980:	pop    edi
  41c981:	mov    ds:0x644ecfd5,eax
  41c986:	jb     0x41c965
  41c988:	jb     0x41c9a2
  41c98a:	ror    DWORD PTR [ebp+edx*4-0x5a],cl
  41c98e:	xchg   edi,eax
  41c98f:	enter  0x5bc8,0x1
  41c993:	push   edx
  41c994:	imul   DWORD PTR [eax-0x43]
  41c997:	popf   
  41c998:	jle    0x41c990
  41c99a:	outs   dx,BYTE PTR ds:[esi]
  41c99b:	fstp   DWORD PTR [edx]
  41c99d:	nop
  41c99e:	retf   0x7912
  41c9a1:	test   ecx,ebp
  41c9a3:	jg     0x41c974
  41c9a5:	pop    ebx
  41c9a6:	pop    edx
  41c9a7:	cmp    DWORD PTR [ebx],ebx
  41c9a9:	jno    0x41c9a8
  41c9ab:	imul   esp,DWORD PTR [esi+edi*4+0x27],0xffffffa7
  41c9b0:	sbb    ch,cl
  41c9b2:	mov    ds:0x534690d7,al
  41c9b7:	popa   
  41c9b8:	ret    0x8e6b
  41c9bb:	rcl    cl,0x47
  41c9be:	jne    0x41c959
  41c9c0:	xor    al,0x63
  41c9c2:	dec    edx
  41c9c3:	sub    eax,0x1811353f
  41c9c8:	fdivr  st,st(0)
  41c9ca:	stos   DWORD PTR es:[edi],eax
  41c9cb:	retf   0x9630
  41c9ce:	and    ch,dh
  41c9d0:	mov    dh,0x3f
  41c9d2:	adc    eax,0xa444edd6
  41c9d7:	push   edx
  41c9d8:	push   0x9be6aa92
  41c9dd:	sub    al,0x20
  41c9df:	lods   al,BYTE PTR ds:[esi]
  41c9e0:	test   al,0x27
  41c9e2:	sbb    BYTE PTR [ecx+esi*4-0x7e],dh
  41c9e6:	ret    
  41c9e7:	mov    dh,0xf6
  41c9e9:	sub    BYTE PTR fs:[edx-0x5a],ah
  41c9ed:	out    dx,eax
  41c9ee:	adc    ebx,DWORD PTR [ebp-0x5ec42e5e]
  41c9f4:	add    eax,0x7f428115
  41c9f9:	inc    esp
  41c9fa:	test   al,0x22
  41c9fc:	call   0xef9719af
  41ca01:	sbb    al,0x50
  41ca03:	push   0x1aca1398
  41ca08:	(bad)  
  41ca09:	mov    esi,0x21d0ccf3
  41ca0e:	in     eax,0x88
  41ca10:	(bad)
  41ca14:	icebp  
  41ca15:	cwde   
  41ca16:	scas   al,BYTE PTR es:[edi]
  41ca17:	xchg   DWORD PTR [ebx+ebx*8-0x4ecc34ea],esp
  41ca1e:	xchg   edx,eax
  41ca1f:	mov    ch,0x2f
  41ca21:	add    eax,DWORD PTR [esi-0x63]
  41ca24:	nop
  41ca25:	les    esp,FWORD PTR [ebp-0x4e6b9df0]
  41ca2b:	pop    eax
  41ca2c:	xor    al,BYTE PTR [eax-0xee05ecb]
  41ca32:	push   ebp
  41ca33:	sub    al,0xee
  41ca35:	mov    ch,0xa4
  41ca37:	lahf   
  41ca38:	popf   
  41ca39:	mov    ah,0x2
  41ca3b:	call   0xbf45:0x41ac0626
  41ca42:	ss call 0x70d5673e
  41ca48:	das    
  41ca49:	leave  
  41ca4a:	jmp    0x2ceec586
  41ca4f:	pusha  
  41ca50:	jl     0x41ca2a
  41ca52:	mov    eax,ds:0x46717c90
  41ca57:	and    ah,BYTE PTR [eax-0x72588d5a]
  41ca5d:	jmp    edi
  41ca5f:	nop
  41ca60:	dec    ecx
  41ca61:	inc    eax
  41ca63:	pop    ecx
  41ca64:	lahf   
  41ca65:	dec    ecx
  41ca66:	inc    edx
  41ca67:	lods   al,BYTE PTR ds:[esi]
  41ca68:	lods   al,BYTE PTR ds:[esi]
  41ca69:	mov    eax,ds:0xdefc2f4c
  41ca6e:	cmp    eax,0x6c852cf2
  41ca73:	test   al,0x27
  41ca75:	pop    ebx
  41ca76:	pop    ebp
  41ca77:	jb     0x41ca32
  41ca79:	adc    bl,ah
  41ca7b:	sar    DWORD PTR [ebx-0x9cc9890],0x7c
  41ca82:	mov    ebp,gs
  41ca84:	test   DWORD PTR [ebx],edi
  41ca86:	push   0xffffff8f
  41ca88:	popa   
  41ca89:	rcr    bh,1
  41ca8b:	int    0xe0
  41ca8d:	and    al,ah
  41ca8f:	or     esp,edi
  41ca91:	es jbe 0x41ca2c
  41ca94:	adc    cl,BYTE PTR ds:0x9b85b188
  41ca9a:	stc    
  41ca9b:	out    dx,al
  41ca9c:	mulps  xmm4,XMMWORD PTR [edx-0x59]
  41caa0:	mov    ecx,0x3e2a6dc9
  41caa5:	and    cl,ch
  41caa7:	add    bh,BYTE PTR [eax]
  41caa9:	xor    edi,DWORD PTR cs:[edx+edx*1+0x55]
  41caae:	test   al,0x69
  41cab0:	sbb    BYTE PTR [edi-0x1f8605c3],dh
  41cab6:	pop    ss
  41cab7:	sbb    bh,BYTE PTR [edi]
  41cab9:	pop    ebx
  41caba:	ja     0x41ca42
  41cabc:	sub    DWORD PTR [edx-0x3e],0x2a
  41cac0:	and    BYTE PTR [eax+0x45eb36ba],dl
  41cac6:	jmp    0x41ca92
  41cac8:	pop    esi
  41cac9:	test   BYTE PTR [ebx],ah
  41cacb:	jnp    0x41ca74
  41cacd:	sub    cl,BYTE PTR [edx*4+0x1df23173]
  41cad4:	sbb    edi,esp
  41cad6:	sbb    al,0x9c
  41cad8:	push   ebx
  41cad9:	mov    ah,0x87
  41cadb:	retf   
  41cadc:	iret   
  41cadd:	mov    eax,ds:0x1688875
  41cae2:	fmul   DWORD PTR [esi-0x67ec514a]
  41cae8:	mov    dh,0x13
  41caea:	shr    edx,cl
  41caec:	enter  0xf2c3,0x5d
  41caf0:	in     al,dx
  41caf1:	and    al,0xc7
  41caf3:	fnsave [edi]
  41caf5:	push   ecx
  41caf6:	mov    ebp,eax
  41caf8:	pusha  
  41caf9:	dec    edi
  41cafa:	xor    bl,BYTE PTR [esi+0x2b]
  41cafd:	mov    ecx,edi
  41caff:	jb     0x41cb6b
  41cb01:	out    dx,eax
  41cb02:	fs xor ch,cl
  41cb05:	cmp    eax,0x2c9b4c01
  41cb0a:	mov    esi,0x8947303
  41cb0f:	and    al,0x60
  41cb11:	and    al,0xd
  41cb13:	jnp    0x41cb6d
  41cb15:	push   ss
  41cb16:	daa    
  41cb17:	push   esp
  41cb18:	dec    eax
  41cb19:	add    BYTE PTR [esi],dl
  41cb1b:	push   es
  41cb1c:	fdivr  st(2),st
  41cb1e:	cmp    eax,0x53555e71
  41cb23:	xor    ax,0x495e
  41cb27:	lock dec eax
  41cb29:	rol    DWORD PTR [ebp-0x67b47126],cl
  41cb2f:	adc    eax,0xa0acd1f4
  41cb34:	sub    BYTE PTR [ebp+0x143cdb2d],al
  41cb3a:	repnz sub al,0x72
  41cb3d:	(bad)  
  41cb3e:	mov    bh,0xdc
  41cb40:	xchg   ebx,eax
  41cb41:	ins    BYTE PTR es:[edi],dx
  41cb42:	sti    
  41cb43:	fistp  DWORD PTR [edi]
  41cb45:	sbb    al,0x6b
  41cb47:	jl     0x41cb70
  41cb49:	cli    
  41cb4a:	push   ecx
  41cb4b:	mov    cl,BYTE PTR [esi+0x1c]
  41cb4e:	mov    DWORD PTR [ebp+0x16994f5c],0x8c444942
  41cb58:	sbb    ch,BYTE PTR [edi+esi*4-0x5e89966b]
  41cb5f:	ror    eax,0x9a
  41cb62:	je     0x41caf5
  41cb64:	(bad)  
  41cb65:	cmp    DWORD PTR ds:0xe962a8d,eax
  41cb6b:	sub    al,0x81
  41cb6d:	stc    
  41cb6e:	ins    DWORD PTR es:[edi],dx
  41cb6f:	push   ecx
  41cb70:	stos   DWORD PTR es:[edi],eax
  41cb71:	shl    BYTE PTR [edi+0x5dd666a3],cl
  41cb77:	inc    esp
  41cb78:	adc    DWORD PTR fs:[ebx+0x64],ecx
  41cb7c:	cwde   
  41cb7d:	lods   al,BYTE PTR ds:[esi]
  41cb7e:	push   0xffffffbf
  41cb80:	nop
  41cb81:	call   FWORD PTR [edx]
  41cb83:	push   edx
  41cb84:	(bad)  
  41cb85:	ret    0x84a3
  41cb88:	arpl   WORD PTR [esi+0x38],di
  41cb8b:	sub    al,0xf6
  41cb8d:	dec    ebp
  41cb8e:	cmp    esp,esp
  41cb90:	cdq    
  41cb91:	cmp    dl,BYTE PTR [esi-0x4f]
  41cb94:	dec    esp
  41cb95:	mov    ds:0x63b33a4f,eax
  41cb9a:	retf   0x8879
  41cb9d:	call   0x27c19e00
  41cba2:	test   al,0x6
  41cba4:	mov    esp,0x36a4db77
  41cba9:	sbb    al,0x8
  41cbab:	fiadd  DWORD PTR [ecx-0x54f56f95]
  41cbb1:	cli    
  41cbb2:	fs mov ch,0xd6
  41cbb5:	dec    edi
  41cbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb7:	push   ss
  41cbb8:	fwait
  41cbb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbba:	pop    esp
  41cbbb:	mov    esp,0x9571ad44
  41cbc0:	in     eax,dx
  41cbc1:	(bad)  
  41cbc2:	sbb    BYTE PTR [eax-0x29],cl
  41cbc5:	aad    0x52
  41cbc7:	(bad)  
  41cbc8:	aam    0x6a
  41cbca:	push   0x10
  41cbcc:	xlat   BYTE PTR ds:[ebx]
  41cbcd:	xor    al,0x38
  41cbcf:	imul   eax,DWORD PTR [eax-0x25],0x3a1a4666
  41cbd6:	in     eax,dx
  41cbd7:	data16 arpl sp,si
  41cbda:	push   cs
  41cbdb:	mov    eax,ds:0x13e31876
  41cbe0:	jmp    0xbcfdf623
  41cbe5:	stc    
  41cbe6:	add    BYTE PTR [edi-0x1a],cl
  41cbe9:	pop    ebx
  41cbea:	shr    DWORD PTR [eax+0x24fa2d07],cl
  41cbf0:	pop    es
  41cbf1:	ja     0x41cba8
  41cbf3:	dec    ebx
  41cbf4:	sub    ebx,DWORD PTR [esi+0x7]
  41cbf7:	sub    BYTE PTR [edi-0x5d022fc9],0xad
  41cbfe:	xchg   si,ax
  41cc00:	fld    st(7)
  41cc02:	retf   
  41cc03:	aaa    
  41cc04:	xor    eax,0x7388f01d
  41cc09:	mov    edi,0x38089841
  41cc0e:	jae    0x41cc67
  41cc10:	sub    dh,al
  41cc12:	pop    ebx
  41cc13:	dec    esp
  41cc14:	push   ecx
  41cc15:	mov    BYTE PTR [esp+ebp*8],dh
  41cc18:	jns    0x41cc12
  41cc1a:	pop    edx
  41cc1b:	push   edx
  41cc1c:	push   0x5f44e13d
  41cc21:	mov    ds:0xaa311aa5,al
  41cc26:	xor    eax,0xb7931045
  41cc2b:	in     al,0xb7
  41cc2d:	hlt    
  41cc2e:	lods   eax,DWORD PTR ds:[esi]
  41cc2f:	jbe    0x41cca4
  41cc31:	mov    dh,0x41
  41cc33:	pop    ecx
  41cc34:	mov    bl,0xae
  41cc36:	xlat   BYTE PTR ds:[ebx]
  41cc37:	dec    eax
  41cc38:	inc    edi
  41cc39:	not    dh
  41cc3b:	in     al,0xc2
  41cc3d:	push   ss
  41cc3e:	js     0x41cc8e
  41cc40:	mov    WORD PTR [eax+0x33],ss
  41cc43:	retf   
  41cc44:	add    eax,0x15a50d14
  41cc49:	and    ch,BYTE PTR [ecx-0x2d]
  41cc4c:	(bad)  
  41cc4d:	test   DWORD PTR [edx],0x46eb1c03
  41cc53:	fs xchg esp,eax
  41cc55:	mov    esi,0x8b2ab63a
  41cc5a:	les    edx,FWORD PTR [edi+0x500d0a35]
  41cc60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc61:	fidivr DWORD PTR [ebx+eax*1+0x2fb29290]
  41cc68:	(bad)  
  41cc6a:	push   ecx
  41cc6b:	mov    ?,WORD PTR [esi+0x3d]
  41cc6e:	dec    edi
  41cc6f:	pop    esi
  41cc70:	jae    0x41ccbb
  41cc72:	cmp    BYTE PTR [edx+0x6d4c6e81],al
  41cc78:	dec    ebp
  41cc79:	mov    ecx,DWORD PTR [edi+0x29]
  41cc7c:	jmp    0x28d1600b
  41cc81:	pop    DWORD PTR [edx]
  41cc83:	mov    DWORD PTR [ebx+0x5c781604],ecx
  41cc89:	(bad)
  41cc8c:	cli    
  41cc8d:	mov    bl,0x37
  41cc8f:	in     al,0x8f
  41cc91:	inc    eax
  41cc92:	sub    al,0xb9
  41cc94:	cmp    eax,0x5e1d6730
  41cc99:	cmp    dh,ah
  41cc9b:	test   dl,0xd9
  41cc9e:	jge    0x41cc87
  41cca0:	in     eax,dx
  41cca1:	push   edx
  41cca2:	mov    dl,BYTE PTR [edi-0x488bf6ec]
  41cca8:	imul   BYTE PTR [edx+esi*1+0x2d]
  41ccac:	idiv   ecx
  41ccae:	push   edx
  41ccaf:	push   0x1dbb530e
  41ccb4:	mov    BYTE PTR [eax-0x77],ah
  41ccb7:	sub    al,0xac
  41ccb9:	aas    
  41ccba:	push   DWORD PTR [ecx+0x34b3a1db]
  41ccc0:	adc    DWORD PTR ds:0xf8050321,esi
  41ccc6:	test   al,0xd6
  41ccc8:	icebp  
  41ccc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccca:	jmp    0xd188af36
  41cccf:	int3   
  41ccd0:	fwait
  41ccd1:	dec    edi
  41ccd2:	jg     0x41cc99
  41ccd4:	cmp    BYTE PTR [edi+eiz*1],bl
  41ccd7:	imul   edx,DWORD PTR [esi],0xc2eb4014
  41ccdd:	je     0x41cd17
  41ccdf:	aaa    
  41cce0:	sbb    BYTE PTR [edi],bl
  41cce2:	mov    es,WORD PTR [esi]
  41cce4:	dec    ecx
  41cce5:	jecxz  0x41ccc7
  41cce7:	adc    bl,BYTE PTR [ecx+esi*4]
  41ccea:	add    BYTE PTR [eax+0x8a7e7a9],ah
  41ccf0:	jmp    0xfd7a:0xd3fba29f
  41ccf7:	and    DWORD PTR [ebp-0x60],edx
  41ccfa:	das    
  41ccfb:	outs   dx,BYTE PTR ds:[esi]
  41ccfc:	int    0xb6
  41ccfe:	cld    
  41ccff:	out    dx,al
  41cd00:	out    dx,al
  41cd01:	lock xchg ebp,eax
  41cd03:	sbb    ebp,DWORD PTR [esi-0x76]
  41cd06:	adc    eax,0x9131aa7d
  41cd0b:	fstp   TBYTE PTR [esi+0x51c453d0]
  41cd11:	test   eax,0x8a191ac6
  41cd16:	jp     0x41cca3
  41cd18:	ins    DWORD PTR es:[edi],dx
  41cd19:	mov    ebp,0xc273576e
  41cd1e:	js     0x41ccf4
  41cd20:	mov    al,0x3a
  41cd22:	sub    BYTE PTR [edi+ebp*8-0x2f],cl
  41cd26:	push   edx
  41cd27:	loopne 0x41cd71
  41cd29:	mov    WORD PTR [ebx-0x3f],fs
  41cd2c:	scas   eax,DWORD PTR es:[edi]
  41cd2d:	or     BYTE PTR [eax-0x75225e44],0x6e
  41cd34:	sub    al,0xab
  41cd36:	add    ah,BYTE PTR [ebx]
  41cd38:	jmp    0x3b2d68cc
  41cd3d:	nop
  41cd3e:	jecxz  0x41cd80
  41cd40:	dec    ebp
  41cd41:	mov    ecx,0xf6fa3c91
  41cd46:	xchg   edi,eax
  41cd47:	adc    ch,BYTE PTR fs:[ebp-0x5d4a81c0]
  41cd4e:	sub    eax,0xeb9b68b4
  41cd53:	scas   al,BYTE PTR es:[edi]
  41cd54:	push   ebp
  41cd55:	cmp    DWORD PTR [edx],ecx
  41cd57:	dec    edx
  41cd58:	scas   eax,DWORD PTR es:[edi]
  41cd59:	mov    ds:0xb13195a3,eax
  41cd5e:	adc    bl,bl
  41cd60:	jmp    FWORD PTR [esi+0x7e]
  41cd63:	mov    bh,0xc6
  41cd65:	addr16 hlt 
  41cd67:	or     al,0xba
  41cd69:	mov    WORD PTR [ebx+0x6ae52d7f],es
  41cd6f:	scas   al,BYTE PTR es:[edi]
  41cd70:	gs inc esp
  41cd72:	xor    BYTE PTR [eax-0x1ecc4d5d],bh
  41cd78:	cs jo  0x41cdb6
  41cd7b:	fwait
  41cd7c:	jle    0x41cd78
  41cd7e:	add    esi,esp
  41cd80:	or     DWORD PTR [ecx],edi
  41cd82:	fst    DWORD PTR [ecx]
  41cd84:	sbb    eax,0xbfc9ccb4
  41cd89:	mov    dh,bl
  41cd8b:	mul    BYTE PTR [edi+0x705559aa]
  41cd91:	repnz in eax,0xed
  41cd94:	das    
  41cd95:	mov    al,0xc9
  41cd97:	or     dl,dl
  41cd99:	dec    eax
  41cd9a:	adc    BYTE PTR [ecx-0x1f5804b4],bl
  41cda0:	inc    ecx
  41cda1:	jbe    0x41cd6d
  41cda3:	(bad)  
  41cda4:	fmul   DWORD PTR [esi]
  41cda6:	in     eax,dx
  41cda7:	inc    ebx
  41cda8:	(bad)  
  41cdaa:	popf   
  41cdab:	scas   eax,DWORD PTR es:[edi]
  41cdac:	in     eax,dx
  41cdad:	or     al,0x8e
  41cdaf:	xchg   esp,eax
  41cdb0:	aaa    
  41cdb1:	stc    
  41cdb2:	outs   dx,BYTE PTR ds:[esi]
  41cdb3:	mov    cl,0x7c
  41cdb5:	out    dx,al
  41cdb6:	fist   DWORD PTR [ebp+0x7e14fd6f]
  41cdbc:	outs   dx,DWORD PTR ds:[esi]
  41cdbd:	jp     0x41cd96
  41cdbf:	xchg   esi,eax
  41cdc0:	pop    esp
  41cdc1:	call   DWORD PTR [ebp-0x46]
  41cdc4:	loop   0x41cd80
  41cdc6:	dec    edi
  41cdc7:	mov    cs,WORD PTR [ebp+0x22b67d1c]
  41cdcd:	lods   eax,DWORD PTR ds:[esi]
  41cdce:	into   
  41cdcf:	mov    bh,0xf9
  41cdd1:	ret    0x9f7a
  41cdd4:	test   al,0x4b
  41cdd6:	(bad)  
  41cdd7:	into   
  41cdd8:	loopne 0x41cdca
  41cdda:	scas   eax,DWORD PTR es:[edi]
  41cddb:	pusha  
  41cddc:	stos   BYTE PTR es:[edi],al
  41cddd:	test   eax,0xe56a2d99
  41cde2:	les    edx,FWORD PTR [ebx]
  41cde4:	lahf   
  41cde5:	(bad)  
  41cde6:	fst    DWORD PTR [edi-0x47]
  41cde9:	pop    eax
  41cdea:	gs test cl,dh
  41cded:	mov    BYTE PTR [eax],ch
  41cdef:	jb     0x41cd8f
  41cdf1:	and    eax,esi
  41cdf3:	inc    esi
  41cdf4:	push   ebx
  41cdf5:	ins    BYTE PTR es:[edi],dx
  41cdf6:	test   BYTE PTR [ebx+0x3a],ch
  41cdf9:	mov    ds:0xb94c136a,al
  41cdfe:	xlat   BYTE PTR ds:[ebx]
  41cdff:	xchg   ebx,eax
  41ce00:	aas    
  41ce01:	test   BYTE PTR [ebp-0x720d65f2],bl
  41ce07:	push   ecx
  41ce08:	lea    edi,[edi+0x6b202d75]
  41ce0e:	test   ecx,esi
  41ce10:	push   eax
  41ce11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce12:	adc    DWORD PTR [eax*2-0x6b534c6d],0xffffff93
  41ce1a:	ds mov bl,0xb2
  41ce1d:	jecxz  0x41ce4a
  41ce1f:	inc    edx
  41ce20:	jns    0x41ce51
  41ce22:	sbb    al,0xb2
  41ce24:	xchg   edx,eax
  41ce25:	addr16 loop 0x41ce06
  41ce28:	adc    al,0xe0
  41ce2b:	psllq  mm5,mm7
  41ce2e:	mov    cl,cl
  41ce30:	push   edi
  41ce31:	xchg   ecx,eax
  41ce32:	cwde   
  41ce33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce34:	mov    ah,0x98
  41ce36:	sub    ah,BYTE PTR [eax-0x2d]
  41ce39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3a:	adc    bl,cl
  41ce3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce3d:	jmp    0x41ce95
  41ce3f:	into   
  41ce40:	and    BYTE PTR [edx],al
  41ce42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce43:	cdq    
  41ce44:	sahf   
  41ce45:	mov    esi,0xb4d385c7
  41ce4a:	sub    DWORD PTR [edi+0x31a6c8b8],0x76859818
  41ce54:	push   eax
  41ce55:	jbe    0x41ced3
  41ce57:	rcr    BYTE PTR [ebp-0x5484e1f5],1
  41ce5d:	sbb    DWORD PTR [edx-0x68],edx
  41ce60:	dec    edx
  41ce61:	cld    
  41ce62:	or     BYTE PTR [ebx-0x6b],dl
  41ce65:	mov    BYTE PTR [eax],dh
  41ce67:	call   0x2aa2:0x39f68bd
  41ce6e:	pusha  
  41ce6f:	mov    ah,0x90
  41ce71:	xchg   ebp,eax
  41ce72:	add    dl,BYTE PTR [edi-0x22]
  41ce75:	out    0x20,eax
  41ce77:	dec    eax
  41ce78:	mov    ecx,0x9aa6f030
  41ce7d:	sbb    ebp,DWORD PTR [edx+0x38d2566b]
  41ce83:	push   ss
  41ce84:	adc    al,0xdd
  41ce86:	mov    eax,?
  41ce88:	enter  0xf082,0x54
  41ce8c:	and    ecx,DWORD PTR [eax]
  41ce8e:	(bad)  
  41ce90:	aaa    
  41ce91:	mov    al,ds:0xff26242e
  41ce96:	popa   
  41ce97:	xor    ecx,DWORD PTR [ecx-0x44]
  41ce9a:	mov    es,WORD PTR ds:0x6a26c65b
  41cea0:	xchg   esp,eax
  41cea1:	pop    ecx
  41cea2:	cmp    ah,BYTE PTR [ebx]
  41cea4:	mov    ah,0x4d
  41cea6:	cmp    al,0x55
  41cea8:	xor    BYTE PTR [ecx+0x5ee51eb2],0xa0
  41ceaf:	outs   dx,BYTE PTR ds:[esi]
  41ceb0:	iret   
  41ceb1:	out    0xd5,eax
  41ceb3:	pop    edx
  41ceb4:	jns    0x41ce72
  41ceb6:	jge    0x41cf26
  41ceb8:	push   ecx
  41ceba:	fidivr WORD PTR [ebp-0x89361d5]
  41cec0:	mov    dl,0x5b
  41cec2:	xchg   edi,eax
  41cec3:	sbb    al,0x46
  41cec5:	and    eax,0x666f0a22
  41ceca:	out    dx,al
  41cecb:	sbb    dl,cl
  41cecd:	nop
  41cece:	push   0xffffff9a
  41ced0:	ins    BYTE PTR es:[edi],dx
  41ced1:	loop   0x41ce91
  41ced3:	in     eax,dx
  41ced4:	inc    edx
  41ced5:	retf   
  41ced6:	fwait
  41ced7:	(bad)  
  41ced8:	xchg   ebp,eax
  41ced9:	fs inc edx
  41cedb:	je     0x41cedb
  41cedd:	adc    eax,0x4bb5517b
  41cee2:	mov    ds:0x2d4dad7f,al
  41cee7:	pop    edx
  41cee8:	sbb    BYTE PTR [esi+0x5b],al
  41ceeb:	push   0xffffffdf
  41ceed:	sub    dh,dl
  41ceef:	inc    eax
  41cef0:	xchg   BYTE PTR [esp+ecx*8-0x152f375d],ch
  41cef7:	and    DWORD PTR [ebx+edi*4-0x1b],0xa1300dd6
  41ceff:	addr16 push ss
  41cf01:	mov    al,0xf7
  41cf03:	jbe    0x41cf7b
  41cf05:	xor    DWORD PTR [edx+0x43050328],esp
  41cf0b:	loope  0x41ceea
  41cf0d:	inc    ebp
  41cf0e:	cmp    ebp,DWORD PTR [ebp+0x6b]
  41cf11:	jne    0x41cf2e
  41cf13:	push   ss
  41cf14:	pop    esi
  41cf15:	inc    edi
  41cf16:	test   DWORD PTR gs:[edi],0xa763839
  41cf1d:	out    dx,eax
  41cf1e:	fild   DWORD PTR [ebp+0x26]
  41cf21:	mov    BYTE PTR gs:[di],0x61
  41cf26:	xor    eax,0x3f4846dc
  41cf2b:	imul   esp,DWORD PTR [edi-0x6f],0xa
  41cf2f:	es inc ebx
  41cf31:	cmp    BYTE PTR ss:[eax+0x4d63a7fe],0x9a
  41cf39:	cwde   
  41cf3a:	(bad)  
  41cf3b:	pusha  
  41cf3c:	lods   al,BYTE PTR ds:[esi]
  41cf3d:	xor    bh,0xfe
  41cf40:	call   0x81315e13
  41cf45:	imul   esi,DWORD PTR [edx],0xf46c914d
  41cf4b:	retf   0x457d
  41cf4e:	aad    0x19
  41cf50:	pop    eax
  41cf51:	xchg   edi,eax
  41cf52:	fs inc edx
  41cf54:	sar    DWORD PTR [ebx-0x5e],0xce
  41cf58:	mov    al,0xc1
  41cf5a:	and    al,0x25
  41cf5c:	popa   
  41cf5d:	stc    
  41cf5e:	(bad)  
  41cf5f:	push   edx
  41cf60:	data16 sub BYTE PTR [eax-0x2c],dl
  41cf64:	into   
  41cf65:	jmp    0xa13a6f46
  41cf6a:	push   cs
  41cf6b:	cmp    eax,0x9b7ec2b0
  41cf70:	dec    ebx
  41cf71:	pushf  
  41cf72:	mov    edx,0x6eb73a78
  41cf77:	xchg   edi,eax
  41cf78:	loop   0x41cfdc
  41cf7a:	push   ebx
  41cf7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf7c:	aam    0x90
  41cf7e:	xchg   esp,eax
  41cf7f:	lea    esp,[esi+ebx*1+0x5f97e47d]
  41cf86:	pop    ebx
  41cf87:	bound  esp,QWORD PTR [esi-0x23ee10cc]
  41cf8d:	rcl    DWORD PTR [eax+ebp*2+0x3b],1
  41cf91:	enter  0xbc2b,0xad
  41cf95:	out    0xe5,al
  41cf97:	mov    cl,0x82
  41cf99:	or     al,0xc9
  41cf9b:	lods   eax,DWORD PTR ds:[esi]
  41cf9c:	jmp    0x802c98eb
  41cfa1:	jae    0x41cf35
  41cfa3:	sub    DWORD PTR [ebx],edx
  41cfa5:	out    0x49,eax
  41cfa7:	inc    eax
  41cfa8:	push   DWORD PTR [ebx-0x14]
  41cfab:	pop    ebx
  41cfac:	enter  0xfc33,0xd3
  41cfb0:	aad    0x9e
  41cfb2:	enter  0xe452,0xa5
  41cfb6:	pop    edi
  41cfb7:	pushf  
  41cfb8:	shl    DWORD PTR [eax],1
  41cfba:	call   0x2d04:0xf342b1e3
  41cfc1:	div    DWORD PTR [edi-0x50]
  41cfc4:	icebp  
  41cfc5:	sti    
  41cfc6:	xchg   edx,eax
  41cfc7:	popf   
  41cfc8:	repnz clc 
  41cfca:	loop   0x41cfeb
  41cfcc:	mov    WORD PTR [esi+0x12],fs
  41cfcf:	out    dx,eax
  41cfd0:	or     al,0x5a
  41cfd2:	adc    al,0x9a
  41cfd4:	or     eax,DWORD PTR [edx+0x46f89e90]
  41cfda:	shl    BYTE PTR [ebx-0x46],1
  41cfdd:	test   DWORD PTR [edx+0x45f9e1e4],0x71d81939
  41cfe7:	dec    eax
  41cfe8:	sbb    BYTE PTR [ebx],dh
  41cfea:	push   ss
  41cfeb:	inc    ecx
  41cfec:	or     BYTE PTR ss:[ebx],dh
  41cfef:	fistp  QWORD PTR [edi-0x13744a5a]
  41cff5:	xor    eax,0x567ffd53
  41cffa:	fstp   DWORD PTR [edi+ebp*4+0x56bbe558]
  41d001:	adc    DWORD PTR [edi],ebp
  41d003:	int    0xd0
  41d005:	xlat   BYTE PTR ds:[ebx]
  41d006:	and    eax,edi
  41d008:	cld    
  41d009:	xchg   bh,dh
  41d00b:	jge    0x41cffc
  41d00d:	lahf   
  41d00e:	rcr    edx,cl
  41d010:	mov    cl,BYTE PTR [edi]
  41d012:	loopne 0x41d05f
  41d014:	ins    DWORD PTR es:[edi],dx
  41d015:	or     DWORD PTR [esi-0xb1cb896],edx
  41d01b:	iret   
  41d01c:	sub    al,0xe8
  41d01e:	sub    ecx,edx
  41d020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d021:	xlat   BYTE PTR ds:[ebx]
  41d022:	mov    ecx,0x97a7d6df
  41d028:	in     eax,0xaf
  41d02a:	add    BYTE PTR [esi-0x37016804],0x5d
  41d031:	adc    edi,DWORD PTR [edx+0x5743f65]
  41d037:	add    DWORD PTR [edx+0x3b],edx
  41d03a:	inc    esp
  41d03b:	xor    eax,0x76b53224
  41d040:	shl    BYTE PTR [edx],0x58
  41d043:	loopne 0x41cffb
  41d045:	jns    0x41d051
  41d047:	aas    
  41d048:	(bad)  
  41d049:	xlat   BYTE PTR ds:[ebx]
  41d04a:	popa   
  41d04b:	mov    al,ds:0x20d7f15b
  41d050:	cdq    
  41d051:	sub    cl,BYTE PTR [esi+ebx*1]
  41d054:	fcom   st(3)
  41d056:	dec    edi
  41d057:	and    BYTE PTR [esi-0x41f2b01b],dl
  41d05d:	mov    ebx,0x65ed180c
  41d062:	jg     0x41cff1
  41d064:	sbb    esi,DWORD PTR [ebp-0x2a]
  41d067:	dec    eax
  41d068:	test   eax,0xb36d532b
  41d06d:	pop    ebp
  41d06e:	xchg   ebx,eax
  41d06f:	hlt    
  41d070:	mov    ebx,0xff127f44
  41d075:	jl     0x41d0ce
  41d077:	(bad)  
  41d078:	push   ds
  41d079:	inc    edi
  41d07a:	sbb    edx,DWORD PTR [ebp-0x2c]
  41d07d:	cmp    edi,esp
  41d07f:	dec    esi
  41d080:	pop    edi
  41d081:	aam    0xe3
  41d083:	push   esp
  41d084:	fiadd  DWORD PTR [ecx+0x2c5b1fe8]
  41d08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d08b:	cmp    edx,DWORD PTR [ebp*4-0x6d0f7c04]
  41d092:	xchg   ecx,eax
  41d093:	loop   0x41d0d3
  41d095:	mov    al,0x9b
  41d097:	repnz mov dl,0xbe
  41d09a:	push   ss
  41d09b:	fstp   QWORD PTR [ebx+0xe0e22ce]
  41d0a1:	sub    ebp,DWORD PTR [edi-0x2461d302]
  41d0a7:	outs   dx,BYTE PTR ds:[esi]
  41d0a8:	ja     0x41d0a9
  41d0aa:	cmp    DWORD PTR [ebp+0x46],ebx
  41d0ad:	(bad)  
  41d0ae:	xchg   esi,eax
  41d0af:	lock push 0x24c37b19
  41d0b5:	jno    0x41d132
  41d0b7:	sub    DWORD PTR [edx+eax*2-0x26],0x82e77b9e
  41d0bf:	into   
  41d0c0:	adc    DWORD PTR [edx-0x1244abb5],esp
  41d0c6:	add    esp,DWORD PTR [eax+0x14f71877]
  41d0cc:	cmp    eax,0x4bf717ee
  41d0d1:	sbb    ebx,esp
  41d0d3:	addr16 js 0x41d0de
  41d0d6:	and    eax,0x35a07b5d
  41d0db:	mov    edi,DWORD PTR [edi+0x443036dc]
  41d0e1:	jns    0x41d0af
  41d0e3:	mov    ds:0xbb65aebb,al
  41d0e8:	in     al,dx
  41d0e9:	pop    ecx
  41d0ea:	int    0xa8
  41d0ec:	add    BYTE PTR [edx-0x15ab3ed7],dh
  41d0f2:	pop    di
  41d0f4:	ja     0x41d10c
  41d0f6:	enter  0x4fb,0x86
  41d0fa:	jo     0x41d14d
  41d0fc:	mov    dh,0x5c
  41d0fe:	(bad)  
  41d0ff:	jecxz  0x41d135
  41d101:	mov    dl,0x8a
  41d103:	push   es
  41d104:	test   eax,0xb6cb63da
  41d109:	jmp    0xb030:0x86019839
  41d110:	inc    edx
  41d111:	adc    al,0x1a
  41d113:	outs   dx,DWORD PTR ds:[esi]
  41d114:	popf   
  41d115:	shr    eax,0x96
  41d118:	xchg   esp,eax
  41d119:	aad    0x8d
  41d11b:	ret    0xc46b
  41d11e:	aaa    
  41d11f:	mov    ah,0x70
  41d121:	xlat   BYTE PTR ds:[ebx]
  41d122:	lahf   
  41d123:	xchg   edx,eax
  41d124:	push   ebx
  41d125:	sti    
  41d126:	pop    edx
  41d127:	pop    es
  41d128:	cmp    edx,DWORD PTR [ebp+0x1b0717b5]
  41d12e:	mov    ch,0x9d
  41d130:	rol    BYTE PTR [ecx+0x3ca9f2df],0x79
  41d137:	pusha  
  41d138:	aas    
  41d139:	(bad)  
  41d13a:	popf   
  41d13b:	jnp    0x41d133
  41d13d:	aas    
  41d13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d13f:	cld    
  41d140:	cli    
  41d141:	adc    BYTE PTR [esi-0x46],cl
  41d144:	push   ebx
  41d145:	sti    
  41d146:	xor    eax,0xf94f50e9
  41d14b:	mov    DWORD PTR [ebx],esi
  41d14d:	cmp    edx,edi
  41d14f:	jno    0x41d0f6
  41d151:	lahf   
  41d152:	jmp    0x9594:0xd327bf5a
  41d159:	jle    0x41d161
  41d15b:	mov    WORD PTR [esi],cs
  41d15d:	xor    al,0x50
  41d15f:	cmp    eax,0x4dd734fe
  41d164:	adc    DWORD PTR [edx],esp
  41d166:	and    al,0x73
  41d168:	jo     0x41d189
  41d16a:	daa    
  41d16b:	mov    ebx,0x48d49615
  41d170:	sbb    BYTE PTR [edi-0x60a1a6c5],cl
  41d176:	cmp    BYTE PTR [ecx-0x7c2d38f9],bh
  41d17c:	shl    DWORD PTR [esi+0x5b],cl
  41d17f:	mov    cl,0xb8
  41d181:	jl     0x41d1e0
  41d183:	ins    BYTE PTR es:[edi],dx
  41d184:	and    al,0x39
  41d186:	push   ds
  41d187:	fcmovbe st,st(4)
  41d189:	sbb    eax,esp
  41d18b:	xchg   esi,edx
  41d18d:	dec    ebx
  41d18e:	sub    eax,ebx
  41d190:	dec    esp
  41d191:	mov    ds:0x9cff3fc9,al
  41d196:	pop    ebx
  41d197:	ja     0x41d1fd
  41d199:	stos   BYTE PTR es:[edi],al
  41d19a:	mov    ebp,0x8affeb36
  41d19f:	arpl   WORD PTR [edx+0x26f16a34],bx
  41d1a5:	mov    bl,0x8a
  41d1a7:	pop    ebx
  41d1a8:	retf   0x7a2d
  41d1ab:	(bad)  
  41d1ac:	cmp    al,0x24
  41d1ae:	xor    ebp,DWORD PTR ds:0x8ffce99
  41d1b4:	test   ah,dl
  41d1b6:	mov    cl,0x21
  41d1b8:	retf   0x8ca
  41d1bb:	or     BYTE PTR ds:[esi+0x74ab20f5],cl
  41d1c2:	inc    edx
  41d1c3:	or     bh,BYTE PTR [ebx+0x5c]
  41d1c6:	pop    ecx
  41d1c7:	xchg   edi,eax
  41d1c8:	pop    esp
  41d1c9:	dec    ebx
  41d1ca:	dec    ebx
  41d1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cd:	aam    0xc8
  41d1cf:	mov    esp,0xbb86d2fc
  41d1d4:	pusha  
  41d1d5:	jg     0x41d186
  41d1d7:	les    edi,FWORD PTR ds:0x7c537f8a
  41d1dd:	js     0x41d213
  41d1df:	and    eax,0xa898947b
  41d1e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1e5:	retf   0x8203
  41d1e8:	adc    BYTE PTR [eax+eiz*2-0x5a],bh
  41d1ec:	push   ds
  41d1ed:	pop    ss
  41d1ee:	cli    
  41d1ef:	sbb    eax,0xcb5638e9
  41d1f4:	pushf  
  41d1f5:	cwde   
  41d1f6:	xchg   bh,al
  41d1f8:	retf   
  41d1f9:	sahf   
  41d1fa:	mov    ebx,0x86761600
  41d1ff:	or     cl,BYTE PTR [esi+ecx*2+0x3924478b]
  41d206:	call   0xc596a91a
  41d20b:	sub    BYTE PTR [esi-0x28118463],bh
  41d211:	cli    
  41d212:	push   ebx
  41d213:	mov    esp,0x5f94213b
  41d218:	shl    DWORD PTR [edi-0x5caa9fc7],1
  41d21e:	out    0x73,eax
  41d220:	out    dx,ax
  41d222:	and    ebp,esi
  41d224:	test   eax,0x91093498
  41d229:	or     DWORD PTR [ecx],eax
  41d22b:	shl    BYTE PTR [edi+0x7bfa480d],0xba
  41d232:	cmc    
  41d233:	enter  0x5015,0xa4
  41d237:	pop    eax
  41d238:	out    dx,eax
  41d239:	mov    ah,0x2a
  41d23b:	xchg   ecx,ebx
  41d23d:	dec    esi
  41d23e:	das    
  41d23f:	or     cl,ch
  41d241:	adc    bh,BYTE PTR [eax]
  41d243:	(bad)  
  41d244:	push   cs
  41d245:	mov    dl,0x8c
  41d247:	cmp    bh,BYTE PTR [eax]
  41d249:	mov    cl,0xd2
  41d24b:	hlt    
  41d24c:	imul   esi,DWORD PTR [ebp-0x69291811],0xffffffd9
  41d253:	jg     0x41d2b0
  41d255:	lahf   
  41d256:	ins    DWORD PTR es:[edi],dx
  41d257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d258:	test   al,0x8e
  41d25a:	jno    0x41d280
  41d25c:	pop    esp
  41d25d:	jle    0x41d231
  41d25f:	sub    DWORD PTR [ebx+0x35],esp
  41d262:	fistp  WORD PTR [ebx]
  41d264:	cmc    
  41d265:	jno    0x41d28e
  41d267:	jae    0x41d1fc
  41d269:	mov    al,ds:0xa708248a
  41d26e:	xchg   edx,eax
  41d26f:	inc    eax
  41d270:	push   ebx
  41d271:	daa    
  41d272:	or     eax,0xfd26955e
  41d277:	mov    ds:0xbb4a53ef,al
  41d27c:	jge    0x41d2a3
  41d27e:	imul   esi,DWORD PTR [eax+0x73],0xffffffcd
  41d282:	xchg   edx,eax
  41d283:	sbb    DWORD PTR [ebp-0x4d9cf25b],ebx
  41d289:	mov    eax,ds:0x1743ff7c
  41d28e:	mov    al,ds:0x962ab824
  41d293:	pop    eax
  41d294:	lods   eax,DWORD PTR ds:[esi]
  41d295:	jns    0x41d283
  41d297:	xchg   ebx,eax
  41d298:	sbb    dl,BYTE PTR [eax]
  41d29a:	and    DWORD PTR [ebx-0x1e],esp
  41d29d:	jle    0x41d261
  41d29f:	les    edx,FWORD PTR [eax+0x352811f6]
  41d2a5:	in     al,0x38
  41d2a7:	jo     0x41d2e8
  41d2a9:	ror    BYTE PTR [esi+0xbcb6311],0xec
  41d2b0:	gs daa 
  41d2b2:	sub    al,0xa1
  41d2b4:	outs   dx,BYTE PTR ds:[esi]
  41d2b5:	xlat   BYTE PTR ds:[ebx]
  41d2b6:	stc    
  41d2b7:	add    BYTE PTR [edi-0x67],ch
  41d2ba:	fist   DWORD PTR [ecx]
  41d2bc:	mov    BYTE PTR [eax-0x22],cl
  41d2bf:	out    dx,al
  41d2c0:	inc    esp
  41d2c1:	cdq    
  41d2c2:	xchg   edx,eax
  41d2c3:	push   ebx
  41d2c4:	jmp    0xfd27:0xe9ad8192
  41d2cb:	mov    dh,0xad
  41d2cd:	mov    DWORD PTR [ecx-0x75],edx
  41d2d0:	dec    ebx
  41d2d1:	out    0xa3,eax
  41d2d3:	sbb    DWORD PTR [ebp-0x5fc71e72],edi
  41d2d9:	rol    ebp,0x99
  41d2dc:	dec    ecx
  41d2dd:	imul   ebp,DWORD PTR [eax-0x24],0xffffffc6
  41d2e1:	mov    ebx,0xdd3bebde
  41d2e6:	out    dx,eax
  41d2e7:	xchg   esp,eax
  41d2e8:	push   cs
  41d2e9:	inc    eax
  41d2ea:	jmp    0x7043:0x71f5eb7d
  41d2f1:	sub    eax,0x58d972c9
  41d2f6:	adc    ah,BYTE PTR [esi+0x65ac3a04]
  41d2fc:	sub    al,0x50
  41d2fe:	mov    esp,DWORD PTR [esi+0x357d6237]
  41d304:	fsubr  QWORD PTR [esi+0x6e]
  41d307:	cmp    bh,dl
  41d309:	inc    DWORD PTR [ebp-0x9d49f18]
  41d30f:	xlat   BYTE PTR ds:[ebx]
  41d310:	lock add al,0xca
  41d313:	repz add al,0x73
  41d316:	rol    cl,cl
  41d318:	out    0x25,al
  41d31a:	xchg   ebx,eax
  41d31b:	clc    
  41d31c:	nop
  41d31d:	ret    0x4870
  41d320:	fisubr WORD PTR [edi-0x687b88ad]
  41d326:	adc    eax,0xd9e3bc93
  41d32b:	push   0x990ac494
  41d330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d331:	outs   dx,DWORD PTR ds:[esi]
  41d332:	ficomp DWORD PTR [ecx]
  41d334:	mov    ecx,0xc6511b9c
  41d339:	out    0xed,eax
  41d33b:	fwait
  41d33c:	pop    edi
  41d33d:	sbb    eax,0x7ef1c23
  41d342:	pop    ebx
  41d343:	adc    DWORD PTR [edx-0x3fb5c3e5],edi
  41d349:	popf   
  41d34a:	aad    0xad
  41d34c:	xor    eax,0x14a5c25
  41d351:	aaa    
  41d352:	inc    ebx
  41d353:	push   DWORD PTR [ebx+0x155d2de2]
  41d359:	pop    esi
  41d35a:	add    al,0xba
  41d35c:	mov    ecx,0x3fc764c9
  41d361:	repnz shl DWORD PTR [eax-0x13aab36f],0x4f
  41d369:	mov    al,0xc6
  41d36b:	jmp    0x163c:0x8708d568
  41d372:	je     0x41d33b
  41d374:	rcl    ecx,cl
  41d376:	dec    eax
  41d377:	repnz pop esp
  41d379:	addr16 mov ds:0x93df,eax
  41d37d:	xor    al,0x2f
  41d37f:	enter  0x46c3,0x48
  41d383:	dec    esp
  41d384:	cmp    eax,0x7dad3baa
  41d389:	lods   al,BYTE PTR ds:[esi]
  41d38a:	xchg   esi,eax
  41d38b:	jmp    0x17910936
  41d390:	stos   DWORD PTR es:[edi],eax
  41d391:	(bad)  
  41d392:	dec    esp
  41d393:	push   edx
  41d394:	push   ss
  41d395:	inc    ecx
  41d396:	test   al,dl
  41d398:	sub    ebp,DWORD PTR [eax+ecx*4]
  41d39b:	push   ds
  41d39c:	mov    ch,0xf1
  41d39e:	sahf   
  41d39f:	or     edi,edx
  41d3a1:	(bad)  
  41d3a3:	jbe    0x41d409
  41d3a5:	rol    DWORD PTR [ebp+0x11cdba50],1
  41d3ab:	dec    edx
  41d3ac:	push   edx
  41d3ad:	leave  
  41d3ae:	or     BYTE PTR [edi],dl
  41d3b0:	lea    edi,[edx]
  41d3b2:	mov    al,0x63
  41d3b4:	push   ebx
  41d3b5:	pop    esi
  41d3b6:	cmp    ch,al
  41d3b8:	push   ds
  41d3b9:	and    DWORD PTR [ebx-0x42],0xffffff85
  41d3bd:	shl    DWORD PTR [ebx],0x55
  41d3c0:	adc    DWORD PTR [ecx],ebp
  41d3c2:	mov    esp,0x41cf624e
  41d3c7:	outs   dx,DWORD PTR ds:[esi]
  41d3c8:	cli    
  41d3c9:	mov    eax,ds:0xd9ffed98
  41d3ce:	sbb    eax,0x855ed96
  41d3d3:	shr    al,1
  41d3d5:	aas    
  41d3d6:	adc    ah,al
  41d3d8:	inc    ebx
  41d3d9:	mov    dl,0xaa
  41d3db:	push   ds
  41d3dc:	popw   es
  41d3de:	adc    BYTE PTR ds:[ebx+esi*1],bl
  41d3e2:	sub    DWORD PTR [ebx+esi*8],0x15
  41d3e6:	sbb    eax,0xdff4bff2
  41d3eb:	test   DWORD PTR [eax-0x31fb11bb],eax
  41d3f1:	(bad)  
  41d3f2:	arpl   WORD PTR [esi+0x21a69472],sp
  41d3f8:	push   eax
  41d3f9:	ins    DWORD PTR es:[edi],dx
  41d3fa:	jge    0x41d43a
  41d3fc:	push   esi
  41d3fd:	jmp    0x41d3fd
  41d3ff:	xor    edi,esi
  41d401:	hlt    
  41d402:	minps  xmm2,XMMWORD PTR ss:[ebx+0x63]
  41d407:	scas   al,BYTE PTR es:[edi]
  41d408:	in     eax,0x1e
  41d40a:	push   0xce9ab486
  41d40f:	push   ds
  41d410:	iret   
  41d411:	xchg   edi,eax
  41d412:	call   0xd762:0xdf224c67
  41d419:	push   eax
  41d41a:	cs xchg edx,eax
  41d41c:	mov    ecx,0xc6ceac72
  41d421:	jbe    0x41d405
  41d423:	add    DWORD PTR [ecx],ecx
  41d425:	stos   DWORD PTR es:[edi],eax
  41d426:	mov    eax,ds:0x2fea4b32
  41d42b:	rcr    bl,1
  41d42d:	add    al,0x8d
  41d42f:	in     al,dx
  41d430:	add    esp,DWORD PTR ds:0xac1a3d45
  41d436:	or     DWORD PTR ds:0x982c8cf6,0xe03e57ef
  41d440:	mov    cl,0xb9
  41d442:	(bad)  
  41d443:	sbb    DWORD PTR [ebp-0x23],edx
  41d446:	pop    ecx
  41d447:	push   cs
  41d448:	je     0x41d3f7
  41d44a:	pop    ss
  41d44b:	pop    esp
  41d44c:	and    eax,0xde3dd7ac
  41d451:	cmc    
  41d452:	push   edx
  41d453:	leave  
  41d454:	jecxz  0x41d477
  41d456:	sub    eax,0xaff300f0
  41d45b:	dec    ebx
  41d45c:	lahf   
  41d45d:	hlt    
  41d45e:	sub    eax,0xd0d39fb3
  41d463:	mov    ebx,0xa890d0e0
  41d468:	xchg   ebx,eax
  41d469:	mov    ebp,0x1e7e0065
  41d46e:	jge    0x41d44d
  41d470:	enter  0x3a87,0x67
  41d474:	popf   
  41d475:	xor    dl,BYTE PTR [esi]
  41d477:	mov    dl,0x29
  41d479:	icebp  
  41d47a:	out    dx,eax
  41d47b:	inc    ebp
  41d47c:	mov    WORD PTR [ecx],ss
  41d47e:	sbb    BYTE PTR [ecx-0x7b],al
  41d481:	jmp    0x41d4a8
  41d483:	not    DWORD PTR [esi+0x6d5d5759]
  41d489:	mov    ds:0x32a739fc,eax
  41d48e:	push   0xffffff9e
  41d490:	addr16 mov ds:0xfb5c,al
  41d494:	and    ch,BYTE PTR [ebp-0x66]
  41d497:	inc    DWORD PTR [ecx+0x61]
  41d49a:	pusha  
  41d49b:	test   BYTE PTR [edi+ebx*2],cl
  41d49e:	gs shl ch,1
  41d4a1:	enter  0xd8f5,0xa9
  41d4a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4a6:	icebp  
  41d4a7:	jmp    0x83339245
  41d4ac:	mov    eax,0x1b6a2972
  41d4b1:	dec    eax
  41d4b2:	int    0x3a
  41d4b4:	test   al,0x7f
  41d4b6:	adc    al,0x33
  41d4b8:	pop    esp
  41d4b9:	sbb    eax,0x104ef641
  41d4be:	pop    ds
  41d4bf:	xchg   edi,eax
  41d4c0:	xchg   esp,eax
  41d4c1:	das    
  41d4c2:	leave  
  41d4c3:	cwde   
  41d4c4:	jecxz  0x41d53c
  41d4c6:	outs   dx,DWORD PTR ds:[esi]
  41d4c7:	in     al,0xf2
  41d4c9:	fnclex 
  41d4cb:	dec    edi
  41d4cc:	daa    
  41d4cd:	push   edx
  41d4ce:	hlt    
  41d4cf:	call   0x60c2:0x57d0089b
  41d4d6:	test   BYTE PTR [eax-0x4f],ch
  41d4d9:	les    esp,FWORD PTR [esi-0x29]
  41d4dc:	fild   QWORD PTR [edi-0x6290f641]
  41d4e2:	jnp    0x41d4b2
  41d4e4:	pop    ss
  41d4e5:	arpl   si,di
  41d4e7:	adc    DWORD PTR [edx],ebx
  41d4e9:	mov    dh,0x82
  41d4eb:	or     eax,0xb4398098
  41d4f0:	nop
  41d4f1:	cmp    eax,0xb641ac11
  41d4f6:	stos   DWORD PTR es:[edi],eax
  41d4f7:	in     eax,0x43
  41d4f9:	imul   ecx,DWORD PTR [eax+0x34cdc155],0xf3d992ee
  41d503:	(bad)  
  41d505:	xchg   ebp,eax
  41d506:	xchg   ebp,eax
  41d507:	push   0x54
  41d509:	sbb    al,0xb2
  41d50b:	push   esi
  41d50c:	adc    ecx,0x9f0ceef9
  41d512:	repz jo 0x41d4c4
  41d515:	xchg   edx,eax
  41d516:	aaa    
  41d517:	xchg   esp,eax
  41d518:	call   FWORD PTR [edx+esi*4-0x1a]
  41d51c:	daa    
  41d51d:	mov    edx,edx
  41d51f:	cmp    al,0x6f
  41d521:	mov    BYTE PTR ds:0x60ab8bfc,ah
  41d527:	xchg   ebx,eax
  41d528:	jne    0x41d4e7
  41d52a:	ins    DWORD PTR es:[edi],dx
  41d52b:	push   esp
  41d52c:	mov    ax,0xd52b
  41d530:	mov    dl,0xa6
  41d532:	scas   al,BYTE PTR es:[edi]
  41d533:	scas   eax,DWORD PTR es:[edi]
  41d534:	add    BYTE PTR [esi+0x608071d6],dl
  41d53a:	repz out dx,eax
  41d53c:	xchg   esi,ebx
  41d53e:	and    al,0x8a
  41d540:	daa    
  41d541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d542:	cmp    bh,0xfa
  41d545:	cwde   
  41d546:	jle    0x41d558
  41d548:	cmp    eax,0xe333d314
  41d54d:	lods   eax,DWORD PTR ds:[esi]
  41d54e:	dec    ebx
  41d54f:	repz mov di,0xcbc7
  41d554:	lock cmp eax,0x7ceeaec5
  41d55a:	in     al,0x1c
  41d55c:	int3   
  41d55d:	data16 jb 0x41d4ea
  41d560:	pop    es
  41d561:	adc    DWORD PTR [esi],ebp
  41d563:	push   cs
  41d564:	xchg   ecx,eax
  41d565:	jno    0x41d551
  41d567:	adc    al,0xcd
  41d569:	int3   
  41d56a:	daa    
  41d56b:	mov    esi,0x6b9656b7
  41d570:	xchg   ebp,eax
  41d571:	je     0x41d5e3
  41d573:	out    0x50,eax
  41d575:	pop    es
  41d576:	std    
  41d577:	mov    eax,0x9ebad11e
  41d57c:	pop    ss
  41d57d:	mov    eax,ds:0xb0d3a593
  41d582:	imul   BYTE PTR ds:0x21ad80eb
  41d588:	pop    edx
  41d589:	mov    ebp,0x73ac613d
  41d58e:	xor    al,0xbb
  41d590:	cs sti 
  41d592:	jl     0x41d601
  41d594:	push   0xbb06011b
  41d599:	bound  ebp,QWORD PTR [esi+0x37]
  41d59c:	xchg   edi,eax
  41d59e:	or     ecx,DWORD PTR [edx]
  41d5a0:	stc    
  41d5a1:	lea    ebx,[ecx+0x41]
  41d5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a5:	jae    0x41d55f
  41d5a7:	shl    cl,0x24
  41d5aa:	cmp    BYTE PTR [edx],0x40
  41d5ad:	fidivr DWORD PTR [edx]
  41d5af:	stos   BYTE PTR es:[edi],al
  41d5b0:	push   esp
  41d5b1:	fisttp DWORD PTR [edi]
  41d5b3:	add    DWORD PTR [eax+0x2807b411],edx
  41d5b9:	loope  0x41d591
  41d5bb:	fisubr WORD PTR [ebx-0x7e]
  41d5be:	or     DWORD PTR [eax+0x6aba6c04],0x3bc923c6
  41d5c8:	push   ebx
  41d5c9:	mov    ebx,0x85bcbdff
  41d5ce:	stc    
  41d5cf:	jmp    FWORD PTR [ebx-0x4312bca9]
  41d5d5:	loope  0x41d563
  41d5d7:	fldenv [ecx+0x53]
  41d5da:	loope  0x41d624
  41d5dc:	ds inc ebp
  41d5de:	mov    ds:0x31fc37fb,al
  41d5e3:	aam    0x73
  41d5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5e6:	mov    edx,0x8cd445b5
  41d5eb:	imul   eax,DWORD PTR [esp+ebx*4+0x17fe89ea],0xfffffffe
  41d5f3:	loope  0x41d575
  41d5f5:	adc    al,0x21
  41d5f7:	mov    esi,0xa393a16f
  41d5fc:	outs   dx,BYTE PTR ds:[esi]
  41d5fd:	aad    0xa9
  41d5ff:	imul   ebp,DWORD PTR [ebp+0x734a7f90],0x1ef4c46b
  41d609:	mov    eax,ds:0xba117079
  41d60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d60f:	popa   
  41d610:	mov    DWORD PTR [ecx],eax
  41d612:	es cdq 
  41d614:	xor    edx,eax
  41d616:	into   
  41d617:	lea    esp,[ecx]
  41d619:	add    eax,DWORD PTR [eax+0x2c]
  41d61c:	in     eax,0x3d
  41d61e:	loop   0x41d641
  41d620:	lahf   
  41d621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d622:	inc    ebp
  41d623:	shl    DWORD PTR [eax+eax*1-0x3f46f868],1
  41d62a:	lea    ecx,[esi+0x71]
  41d62d:	mov    esi,0x3419b9fc
  41d632:	mov    esi,0xb9a95402
  41d637:	xor    al,0x97
  41d639:	mov    dh,0xc7
  41d63b:	lods   eax,DWORD PTR ds:[esi]
  41d63c:	mov    DWORD PTR [edx],edi
  41d63e:	fbld   TBYTE PTR [edx-0x358f999f]
  41d644:	mov    esp,0xd0f6138f
  41d649:	jae    0x41d67a
  41d64b:	or     ebp,edi
  41d64d:	retf   
  41d64e:	add    eax,0xec476abe
  41d653:	popf   
  41d654:	lahf   
  41d655:	mov    ds:0x858d1407,al
  41d65a:	sub    dh,al
  41d65c:	sub    BYTE PTR [edi],bl
  41d65e:	pop    eax
  41d65f:	push   ecx
  41d660:	mov    ?,WORD PTR [eax+ecx*2+0x18]
  41d664:	out    dx,eax
  41d665:	push   esp
  41d666:	and    al,BYTE PTR [eax-0x7a]
  41d669:	leave  
  41d66a:	daa    
  41d66b:	or     DWORD PTR [bp+0x8b6],0x48
  41d671:	xchg   edi,eax
  41d672:	jo     0x41d643
  41d674:	mov    al,ds:0x7d9284fc
  41d679:	mov    ss,WORD PTR [eax-0x28]
  41d67c:	mov    al,0x3c
  41d67e:	push   eax
  41d67f:	fwait
  41d680:	in     al,0x22
  41d682:	cmp    esp,DWORD PTR [edi+0x3d9d898d]
  41d688:	inc    ebx
  41d689:	call   DWORD PTR [ebp-0x6b]
  41d68c:	mov    DWORD PTR [ecx],edx
  41d68e:	imul   edx,DWORD PTR [edi-0x12],0x837b2857
  41d695:	jnp    0x41d67f
  41d697:	sbb    eax,0xc198ea85
  41d69c:	into   
  41d69d:	push   0xa251a1e9
  41d6a2:	mov    ecx,0x6d7c54e0
  41d6a7:	fnsave [edx]
  41d6a9:	mov    cl,0x0
  41d6ab:	dec    edi
  41d6ac:	in     eax,0x3f
  41d6ae:	sub    al,0xf
  41d6b0:	(bad)  
  41d6b2:	xor    DWORD PTR [edx+0x545ac8e2],eax
  41d6b8:	icebp  
  41d6b9:	pop    edi
  41d6ba:	(bad)  
  41d6bb:	pop    eax
  41d6bc:	(bad)  
  41d6bd:	lea    eax,[edi+edx*4+0x45725e1d]
  41d6c4:	test   BYTE PTR [edi-0x6a2a4559],bh
  41d6ca:	ja     0x41d6cb
  41d6cc:	dec    edi
  41d6cd:	jg     0x41d702
  41d6cf:	or     edi,edx
  41d6d1:	addr16 clc 
  41d6d3:	scas   eax,DWORD PTR es:[edi]
  41d6d4:	push   ds
  41d6d5:	add    eax,0xbddc03aa
  41d6da:	ret    
  41d6db:	rcr    DWORD PTR [eax-0x283de1b0],0xd0
  41d6e2:	es mov cl,0x1
  41d6e5:	or     BYTE PTR [edx-0x3c],dh
  41d6e8:	adc    BYTE PTR [edx+0xa],bl
  41d6eb:	ds inc ebp
  41d6ed:	xor    eax,0x35841076
  41d6f2:	mov    ebx,0xe9b40722
  41d6f7:	icebp  
  41d6f8:	jno    0x41d6f9
  41d6fa:	outs   dx,BYTE PTR ds:[esi]
  41d6fb:	nop
  41d6fc:	ss mov dl,0x16
  41d6ff:	push   DWORD PTR [edx]
  41d701:	mov    bl,BYTE PTR [edi+0x73]
  41d704:	mov    ch,0x4b
  41d706:	dec    edx
  41d707:	imul   edx,DWORD PTR [ebx],0x6e9ced99
  41d70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d70e:	sbb    dh,dl
  41d710:	not    BYTE PTR [ebp-0x61]
  41d713:	out    dx,al
  41d714:	push   0xcf2d44cd
  41d719:	add    ah,cl
  41d71b:	mov    al,0x78
  41d71d:	(bad)  
  41d71e:	in     eax,dx
  41d71f:	cmp    DWORD PTR [ebx],ebx
  41d721:	out    dx,al
  41d722:	cli    
  41d723:	in     eax,dx
  41d724:	or     eax,0xa06d4954
  41d729:	push   eax
  41d72a:	adc    ah,BYTE PTR [ecx]
  41d72c:	jle    0x41d722
  41d72e:	xlat   BYTE PTR ds:[ebx]
  41d72f:	push   ebp
  41d730:	stos   DWORD PTR es:[edi],eax
  41d731:	or     eax,0xb45f4f81
  41d736:	mov    cl,0xda
  41d738:	iret   
  41d739:	inc    ecx
  41d73a:	scas   al,BYTE PTR es:[edi]
  41d73b:	and    dl,BYTE PTR [ecx]
  41d73d:	(bad)  
  41d73e:	les    ebx,FWORD PTR [ecx-0x61]
  41d741:	mov    ss,WORD PTR [edx-0x2cd68913]
  41d747:	js     0x41d78c
  41d749:	sub    eax,DWORD PTR [eax+0x51acea2a]
  41d74f:	and    eax,DWORD PTR [esi-0x3d]
  41d752:	push   ecx
  41d753:	outs   dx,DWORD PTR ds:[esi]
  41d754:	fs std 
  41d756:	xchg   esi,eax
  41d757:	inc    ebx
  41d758:	pop    edx
  41d759:	addr16 sub edi,ecx
  41d75c:	dec    esi
  41d75d:	dec    edi
  41d75e:	push   esp
  41d75f:	fld    QWORD PTR [edx]
  41d761:	xchg   edx,eax
  41d762:	inc    ebx
  41d763:	xor    eax,0x70bbcfa5
  41d768:	nop
  41d769:	ret    0xc82d
  41d76c:	js     0x41d7ce
  41d76e:	rcr    DWORD PTR [eax],cl
  41d770:	inc    edi
  41d771:	daa    
  41d772:	sbb    eax,0x8d3453a5
  41d777:	and    ah,BYTE PTR [edi]
  41d779:	scas   eax,DWORD PTR es:[edi]
  41d77a:	cmp    BYTE PTR fs:[ebp+edi*1-0x7d],bh
  41d77f:	cmp    eax,0x7f7148dc
  41d784:	inc    ebx
  41d785:	jge    0x41d743
  41d787:	leave  
  41d788:	sbb    al,0x77
  41d78a:	xor    bl,bh
  41d78c:	jmp    0xec83439
  41d791:	retf   0xbacb
  41d794:	or     eax,DWORD PTR [esi-0x52248432]
  41d79a:	lock sbb eax,ebp
  41d79d:	push   es
  41d79e:	sbb    BYTE PTR [ebx-0x1ddd1fde],ah
  41d7a4:	data16 jnp 0x41d745
  41d7a7:	call   0x5c36c210
  41d7ac:	adc    ah,BYTE PTR [ebx]
  41d7ae:	rcr    BYTE PTR [ebx],0xfc
  41d7b1:	aas    
  41d7b2:	jno    0x41d7be
  41d7b4:	cmp    DWORD PTR [eax+ecx*8-0x32],eax
  41d7b8:	sbb    BYTE PTR [edx+esi*2+0x4f],dl
  41d7bc:	rol    DWORD PTR [ecx+0x9],1
  41d7bf:	jp     0x41d7f2
  41d7c1:	call   0x6479:0x25d2715c
  41d7c8:	(bad)  
  41d7c9:	out    dx,al
  41d7ca:	sub    al,0xfd
  41d7cc:	xchg   ebx,eax
  41d7cd:	nop
  41d7ce:	mov    ?,esp
  41d7d0:	cmp    al,0x29
  41d7d2:	xchg   DWORD PTR [eax-0x3d],ebx
  41d7d5:	adc    BYTE PTR [esi],cl
  41d7d7:	sub    ebp,DWORD PTR ds:0x709b70e1
  41d7dd:	out    0x3c,eax
  41d7df:	test   BYTE PTR [edi+0x5b7848d6],bl
  41d7e5:	fsub   QWORD PTR [ecx]
  41d7e7:	imul   ebp,ebp,0xffffffad
  41d7ea:	and    BYTE PTR [esi+0x3d],dl
  41d7ed:	imul   edx,DWORD PTR [ecx-0x23a68d7c],0xffffffe6
  41d7f4:	ins    BYTE PTR es:[edi],dx
  41d7f5:	and    eax,0x61e84e5a
  41d7fa:	xchg   esi,eax
  41d7fb:	pop    eax
  41d7fc:	sub    dh,BYTE PTR [eax+eax*4]
  41d7ff:	jecxz  0x41d7c4
  41d801:	test   DWORD PTR [esp+eiz*8+0x5fcf3599],eax
  41d808:	push   ds
  41d809:	jg     0x41d880
  41d80b:	ret    
  41d80c:	in     eax,0xe0
  41d80e:	(bad)  
  41d80f:	call   0x981d:0x4944660c
  41d816:	outs   dx,BYTE PTR ds:[esi]
  41d817:	xchg   ebp,eax
  41d818:	pop    esp
  41d819:	test   BYTE PTR [eax-0x56488817],bh
  41d81f:	test   cl,bl
  41d821:	leave  
  41d822:	std    
  41d823:	into   
  41d824:	dec    esi
  41d825:	xor    eax,0xb2f00545
  41d82a:	scas   eax,DWORD PTR es:[edi]
  41d82b:	(bad)  
  41d82c:	cli    
  41d82d:	and    al,0x28
  41d82f:	aad    0xb
  41d831:	cmp    al,0x43
  41d833:	dec    edx
  41d834:	jge    0x41d7ce
  41d836:	sti    
  41d837:	xchg   ebx,eax
  41d838:	daa    
  41d839:	adc    edi,eax
  41d83b:	jge    0x41d81b
  41d83d:	pop    ecx
  41d83e:	clc    
  41d83f:	test   eax,0x3c7424db
  41d844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d845:	jg     0x41d88e
  41d847:	dec    esi
  41d848:	push   0xffffff8a
  41d84a:	je     0x41d805
  41d84c:	pop    ebp
  41d84d:	mov    dl,0xf
  41d84f:	lods   al,BYTE PTR ds:[esi]
  41d850:	xor    dl,dh
  41d852:	(bad)  
  41d853:	xor    DWORD PTR [esi+ecx*4+0x269cade5],esp
  41d85a:	ins    BYTE PTR es:[edi],dx
  41d85b:	and    BYTE PTR [ebx],cl
  41d85d:	xor    al,0x6d
  41d85f:	fs repz out dx,al
  41d862:	and    DWORD PTR [ebp+edi*8-0xa],0x76
  41d867:	repz xchg esi,eax
  41d869:	stos   DWORD PTR es:[edi],eax
  41d86a:	js     0x41d875
  41d86c:	xor    eax,0x20844128
  41d871:	dec    edx
  41d872:	cwde   
  41d873:	sub    BYTE PTR [ebx-0x7f5e8020],bh
  41d879:	call   0xfa6faa96
  41d87e:	pop    ebx
  41d87f:	lea    ebp,[ecx+ecx*4]
  41d882:	mov    bl,bh
  41d884:	sub    eax,0xa28e30d9
  41d889:	mov    DWORD PTR [ecx-0x4ff5497f],0x8cdb9269
  41d893:	adc    dh,BYTE PTR [esi-0x63de30b8]
  41d899:	outs   dx,BYTE PTR ds:[esi]
  41d89a:	mov    esi,0x9ef544ce
  41d89f:	push   cs
  41d8a0:	mov    dl,ch
  41d8a2:	call   0x894967ac
  41d8a7:	mov    DWORD PTR [esi],ebx
  41d8a9:	inc    eax
  41d8aa:	jae    0x41d838
  41d8ac:	and    BYTE PTR [edx],bh
  41d8ae:	iret   
  41d8af:	mov    WORD PTR [ebx-0x73353c08],fs
  41d8b5:	jmp    0x51550d9f
  41d8ba:	cmp    eax,0xf4c020af
  41d8bf:	imul   BYTE PTR [edi+0x2b]
  41d8c2:	jns    0x41d8b9
  41d8c4:	out    0x2c,al
  41d8c6:	push   ebp
  41d8c7:	xchg   ebx,eax
  41d8c8:	add    dh,BYTE PTR [esi+0x1b8fb8a]
  41d8ce:	pop    eax
  41d8cf:	cld    
  41d8d0:	mov    eax,0x8fda6668
  41d8d5:	daa    
  41d8d6:	aad    0xb2
  41d8d8:	in     al,0xd6
  41d8da:	adc    eax,0xc2c3f03a
  41d8df:	call   0x18bc:0x52ced8b
  41d8e6:	pop    ss
  41d8e7:	xor    al,0x68
  41d8e9:	or     ch,cl
  41d8eb:	(bad)  
  41d8ec:	repnz mov edx,0xe12b6e20
  41d8f2:	retf   0xb132
  41d8f5:	imul   ebp,DWORD PTR [esi+0x38],0x1e
  41d8f9:	cld    
  41d8fa:	xor    ebp,DWORD PTR [esi-0x4b]
  41d8fd:	lds    ecx,FWORD PTR [ebx+0x18c3a4d6]
  41d903:	or     eax,0x3d80582b
  41d908:	shr    DWORD PTR [esi+0x77e8d529],cl
  41d90e:	cvttps2pi mm7,QWORD PTR [eax]
  41d911:	loope  0x41d96a
  41d913:	aam    0x20
  41d915:	cmp    BYTE PTR [edx],dh
  41d917:	std    
  41d918:	in     eax,dx
  41d919:	and    eax,0x93aee4a8
  41d91e:	pop    ebx
  41d91f:	inc    esp
  41d920:	push   ecx
  41d921:	and    edi,ecx
  41d923:	in     al,0x36
  41d925:	std    
  41d926:	sbb    ch,dh
  41d928:	push   ebp
  41d929:	out    0xcd,eax
  41d92b:	jmp    0x41d8dd
  41d92d:	addr16 xchg esp,eax
  41d92f:	push   edi
  41d930:	or     edi,DWORD PTR [edi+0xd9d0288]
  41d936:	in     eax,0x22
  41d938:	adc    ebp,DWORD PTR [eax+0x20]
  41d93b:	dec    DWORD PTR [ecx-0x71]
  41d93e:	in     eax,dx
  41d93f:	imul   esp,DWORD PTR [eax],0x73
  41d942:	es xchg esp,eax
  41d944:	loopne 0x41d9a0
  41d946:	enter  0x423a,0x8a
  41d94a:	outs   dx,DWORD PTR ds:[esi]
  41d94b:	or     eax,0xc252c9ad
  41d950:	xchg   esp,eax
  41d951:	call   0xe314:0xd404e3b3
  41d958:	xor    al,0x49
  41d95a:	adc    DWORD PTR [edi-0x2dc222d0],edi
  41d960:	mov    esp,0x72de814f
  41d965:	in     al,0x6e
  41d967:	mov    ecx,0x3ed8e64
  41d96c:	xor    dh,BYTE PTR [ecx-0x28]
  41d96f:	jb     0x41d920
  41d971:	cmc    
  41d972:	mov    eax,0x3cce37d2
  41d977:	retf   0x23d5
  41d97a:	mov    dh,0x7b
  41d97c:	ror    BYTE PTR [edi+0x505a1eee],0xad
  41d983:	pop    edi
  41d984:	fwait
  41d985:	mov    eax,ds:0x54d0cc9a
  41d98a:	inc    esi
  41d98b:	xor    al,0x45
  41d98d:	in     eax,dx
  41d98e:	mov    eax,ds:0xee60d169
  41d993:	cs out dx,al
  41d995:	scas   eax,DWORD PTR es:[edi]
  41d996:	outs   dx,BYTE PTR ds:[esi]
  41d997:	or     BYTE PTR [ebp+0x66],0xb
  41d99b:	jge    0x41d953
  41d99d:	sbb    eax,0xd5e24201
  41d9a2:	cwde   
  41d9a3:	ret    0xd64f
  41d9a6:	jmp    0xd1959dcb
  41d9ab:	shl    BYTE PTR [eax],0x7
  41d9ae:	inc    ecx
  41d9af:	scas   al,BYTE PTR es:[edi]
  41d9b0:	mov    dh,0xe5
  41d9b2:	iret   
  41d9b3:	jl     0x41d9d8
  41d9b5:	adc    DWORD PTR [ecx+ecx*4-0x7e],ebx
  41d9b9:	xchg   ecx,eax
  41d9ba:	div    dh
  41d9bc:	out    0x31,al
  41d9be:	xor    al,BYTE PTR [ebx+0x4919b089]
  41d9c4:	int3   
  41d9c5:	xchg   esi,eax
  41d9c6:	inc    edx
  41d9c7:	rol    BYTE PTR [esi+edx*4+0x13f9e684],1
  41d9ce:	pop    ebp
  41d9cf:	(bad)  
  41d9d0:	out    dx,eax
  41d9d1:	clc    
  41d9d2:	aam    0x4f
  41d9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d6:	in     eax,0xdd
  41d9d8:	mov    cl,0x69
  41d9da:	or     DWORD PTR [ebp+0x21b867d3],ecx
  41d9e0:	jmp    0x41d975
  41d9e2:	dec    ecx
  41d9e3:	ss stos BYTE PTR es:[edi],al
  41d9e5:	ins    DWORD PTR es:[edi],dx
  41d9e6:	xor    eax,0xc474ed40
  41d9eb:	jne    0x41d9f2
  41d9ed:	mov    esi,edi
  41d9ef:	mov    esi,0xc72ed6c0
  41d9f4:	int    0x1f
  41d9f6:	mov    edi,0x7d6100b1
  41d9fb:	dec    ebx
  41d9fc:	imul   ecx,DWORD PTR [edx-0x35b747a6],0x49a8e939
  41da06:	ret    0x42d0
  41da09:	sahf   
  41da0a:	in     eax,dx
  41da0b:	or     eax,0xe0345c7c
  41da10:	xlat   BYTE PTR ds:[ebx]
  41da11:	cmp    cl,al
  41da13:	jno    0x41da08
  41da15:	jnp    0x41d9e7
  41da17:	pop    es
  41da18:	hlt    
  41da19:	aaa    
  41da1a:	retf   0x4b5
  41da1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da1e:	adc    eax,0x1d0bd09d
  41da23:	dec    eax
  41da24:	popf   
  41da25:	and    BYTE PTR [esi-0x124249b0],0x5
  41da2c:	xchg   ecx,eax
  41da2d:	(bad)  
  41da2e:	or     al,0x3e
  41da30:	jne    0x41d9f1
  41da32:	aaa    
  41da33:	push   ecx
  41da34:	das    
  41da35:	mov    dl,0x37
  41da37:	ror    BYTE PTR [ebx],1
  41da39:	retf   
  41da3a:	aas    
  41da3b:	in     al,dx
  41da3c:	fiadd  WORD PTR [esp+ecx*2-0x6d4198d0]
  41da43:	repnz sahf 
  41da45:	jb     0x41d9da
  41da47:	ins    DWORD PTR es:[edi],dx
  41da48:	arpl   WORD PTR [eax],bx
  41da4a:	in     al,dx
  41da4b:	dec    edx
  41da4c:	(bad)  
  41da4d:	icebp  
  41da4e:	nop
  41da4f:	sahf   
  41da50:	sbb    DWORD PTR [ecx+0x57],ebp
  41da53:	jmp    0x9064:0xa15edf43
  41da5a:	imul   eax,DWORD PTR [esi+0x77],0x6f
  41da5e:	adc    ecx,ecx
  41da60:	and    BYTE PTR ss:[eax-0x343ea6cf],ah
  41da67:	mov    al,BYTE PTR [eax-0x5a]
  41da6a:	gs int 0xf1
  41da6d:	mov    DWORD PTR [edx],edi
  41da6f:	inc    esp
  41da70:	shl    DWORD PTR [ecx],0x1c
  41da73:	sbb    ecx,DWORD PTR [esi]
  41da75:	add    eax,0x97abfbb0
  41da7a:	add    eax,0x252119ad
  41da7f:	daa    
  41da80:	xchg   ebp,eax
  41da81:	jbe    0x41db00
  41da83:	repz fcomp DWORD PTR [eax]
  41da86:	in     eax,dx
  41da87:	gs js  0x41dad8
  41da8a:	lods   al,BYTE PTR ds:[esi]
  41da8b:	mov    bl,0xe6
  41da8d:	sbb    ah,bl
  41da8f:	repnz pop esp
  41da91:	dec    ebx
  41da92:	ret    
  41da93:	dec    edi
  41da94:	jo     0x41da22
  41da96:	aad    0x91
  41da98:	fidivr WORD PTR [eax+0x49c1d3fe]
  41da9e:	je     0x41da85
  41daa0:	outs   dx,DWORD PTR ds:[esi]
  41daa1:	repnz sbb al,0x66
  41daa4:	jo     0x41da5e
  41daa6:	push   0xc39a9bb
  41daab:	pop    esi
  41daac:	and    cl,BYTE PTR [eax-0x70]
  41daaf:	lods   al,BYTE PTR ds:[esi]
  41dab0:	xor    DWORD PTR [edx+0x4d],edx
  41dab3:	pop    ss
  41dab4:	daa    
  41dab5:	push   edi
  41dab6:	(bad)  
  41dab7:	jb     0x41db0c
  41dab9:	dec    eax
  41daba:	fsubrp st(5),st
  41dabc:	mov    ecx,0x3d4055e4
  41dac1:	sub    eax,0x2a9bf771
  41dac6:	jge    0x41db14
  41dac8:	xor    al,0xa7
  41daca:	jl     0x41dae4
  41dacc:	out    0x11,al
  41dace:	and    eax,0x65f7b000
  41dad3:	clc    
  41dad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dad5:	or     DWORD PTR [edi],edx
  41dad7:	neg    edi
  41dad9:	js     0x41da8f
  41dadb:	addps  xmm2,XMMWORD PTR [eax+eiz*1+0x48]
  41dae0:	imul   ebp,ebx,0xffffffc9
  41dae3:	aam    0x65
  41dae5:	and    eax,0x52373ad3
  41daea:	loopne 0x41db5c
  41daec:	out    0xb6,eax
  41daee:	mov    ss,WORD PTR [edx-0x4a]
  41daf1:	sub    dl,dh
  41daf3:	sub    eax,DWORD PTR [edx+0x23c8a6cf]
  41daf9:	neg    DWORD PTR [edx]
  41dafb:	fsub   QWORD PTR [ecx+0x9715f66]
  41db01:	or     dh,BYTE PTR [eax+0xf]
  41db04:	add    al,0x58
  41db06:	mul    BYTE PTR [esi-0x35]
  41db09:	adc    ecx,eax
  41db0b:	xor    DWORD PTR [ecx+0x20ae0c99],ebp
  41db11:	cdq    
  41db12:	xchg   edi,eax
  41db13:	in     al,dx
  41db14:	je     0x41dac6
  41db16:	outs   dx,DWORD PTR ds:[esi]
  41db17:	in     eax,dx
  41db18:	xor    DWORD PTR [ebx-0x180296bb],0xffffff8b
  41db1f:	outs   dx,DWORD PTR ds:[esi]
  41db20:	imul   esp,DWORD PTR [edi],0x10
  41db23:	ficom  DWORD PTR [edi+eax*4-0x14]
  41db27:	and    DWORD PTR [esp+ecx*1-0x758a740e],edi
  41db2e:	cmp    al,0x35
  41db30:	cmp    edi,DWORD PTR [ebp+0x4b]
  41db33:	mov    al,ds:0x8a12c035
  41db38:	lds    ecx,FWORD PTR ds:0x7e64da32
  41db3e:	cmp    al,0x79
  41db40:	shl    edx,1
  41db42:	push   esp
  41db43:	imul   ebp,DWORD PTR [edi],0xb08c888d
  41db49:	dec    eax
  41db4a:	pop    edx
  41db4b:	cld    
  41db4c:	mov    eax,ds:0xfb658b0c
  41db51:	sub    dl,BYTE PTR [ecx+edx*1-0x46418b59]
  41db58:	xchg   bh,ah
  41db5a:	fstp   QWORD PTR [esi-0xdcd79ed]
  41db60:	ja     0x41dbaf
  41db62:	pop    ebx
  41db63:	pop    es
  41db64:	mov    dl,0x51
  41db66:	lods   eax,DWORD PTR ds:[esi]
  41db67:	sbb    BYTE PTR ds:0x635efa71,dh
  41db6d:	or     al,0x78
  41db6f:	dec    edi
  41db70:	jno    0x41db64
  41db72:	aas    
  41db73:	sub    BYTE PTR [esp+ebx*8+0x2815dc59],dl
  41db7a:	pop    ds
  41db7b:	pop    esp
  41db7c:	hlt    
  41db7d:	pop    es
  41db7e:	out    dx,al
  41db7f:	xor    eax,0x8dc9fe05
  41db84:	addr16 or esp,eax
  41db87:	dec    ebp
  41db88:	or     DWORD PTR [eax+0x6dcf5eab],ecx
  41db8e:	test   al,0x31
  41db90:	add    edi,esp
  41db92:	cmp    al,0x9c
  41db94:	jae    0x41db47
  41db96:	into   
  41db97:	ins    BYTE PTR es:[edi],dx
  41db98:	outs   dx,DWORD PTR ds:[esi]
  41db99:	push   esi
  41db9a:	sbb    DWORD PTR [ecx+0x3d],esi
  41db9d:	push   cs
  41db9e:	push   ebp
  41db9f:	aaa    
  41dba0:	daa    
  41dba1:	stc    
  41dba2:	in     al,0xe2
  41dba4:	mov    ch,cl
  41dba6:	sbb    BYTE PTR [ecx-0xf5bb620],0x60
  41dbad:	(bad)  
  41dbb0:	adc    al,0x91
  41dbb2:	mov    DWORD PTR [esi],esp
  41dbb4:	adc    ebx,edx
  41dbb6:	adc    eax,0xfb70f5d4
  41dbbb:	and    BYTE PTR [ebp+0x5ec8b806],0xf8
  41dbc2:	mov    esp,0x7d321db1
  41dbc7:	adc    BYTE PTR [ecx],ah
  41dbc9:	jle    0x41db80
  41dbcb:	les    esp,FWORD PTR [esi-0x36d3a47c]
  41dbd1:	mov    ebx,0x3d357a2c
  41dbd6:	dec    eax
  41dbd7:	into   
  41dbd8:	push   0xffffffa6
  41dbda:	stos   DWORD PTR es:[edi],eax
  41dbdb:	mov    eax,ds:0x1ca1390b
  41dbe0:	lahf   
  41dbe1:	(bad)  
  41dbe2:	lock ja 0x41db70
  41dbe5:	mov    ecx,0xdb14afce
  41dbea:	pop    esp
  41dbeb:	fs add al,0x15
  41dbee:	mov    ds:0x8d16ac77,al
  41dbf3:	fadd   st,st(6)
  41dbf5:	hlt    
  41dbf6:	xchg   DWORD PTR [esi],edx
  41dbf8:	xchg   ebp,eax
  41dbf9:	mov    al,0xee
  41dbfb:	dec    esp
  41dbfc:	ins    DWORD PTR es:[edi],dx
  41dbfd:	push   edi
  41dbfe:	call   0xd14b:0xa75a37b7
  41dc05:	dec    esp
  41dc06:	enter  0x15d5,0x88
  41dc0a:	sub    ch,BYTE PTR [eax+0x59]
  41dc0d:	xor    DWORD PTR [edi-0x4b],edx
  41dc10:	in     al,dx
  41dc11:	push   ebx
  41dc12:	(bad)  
  41dc14:	fs int3 
  41dc16:	int3   
  41dc17:	or     eax,DWORD PTR [ebx+0x64efd573]
  41dc1d:	test   BYTE PTR fs:[ebx+edi*1-0x50],0xae
  41dc23:	out    dx,al
  41dc24:	add    ch,cl
  41dc26:	push   esi
  41dc27:	stc    
  41dc28:	ror    eax,0x71
  41dc2b:	loopne 0x41dbdf
  41dc2d:	je     0x41dc14
  41dc2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc30:	mov    cl,0x6b
  41dc32:	pusha  
  41dc33:	push   ds
  41dc34:	das    
  41dc35:	ins    BYTE PTR es:[edi],dx
  41dc36:	retf   0x7383
  41dc39:	shl    edx,1
  41dc3b:	int3   
  41dc3c:	fwait
  41dc3d:	pop    ds
  41dc3e:	push   edi
  41dc3f:	pop    esp
  41dc40:	adc    ecx,DWORD PTR [edi+edi*2+0x7d87d015]
  41dc47:	inc    eax
  41dc48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc49:	push   esi
  41dc4a:	mov    ebp,0x9d471d84
  41dc4f:	in     eax,dx
  41dc50:	pop    edx
  41dc51:	dec    ecx
  41dc52:	outs   dx,DWORD PTR ds:[esi]
  41dc53:	pop    edi
  41dc54:	sub    bl,bh
  41dc56:	adc    dh,dh
  41dc58:	mov    al,ds:0x6789192b
  41dc5d:	jae    0x41dc11
  41dc5f:	pop    esi
  41dc60:	mov    ebx,0xcfc6baca
  41dc65:	pop    ebp
  41dc66:	rcpps  xmm6,XMMWORD PTR [ebx+0x2a11cde0]
  41dc6d:	(bad)  
  41dc6e:	call   0x3360:0x5b024e3f
  41dc75:	jo     0x41dc17
  41dc77:	adc    edi,DWORD PTR ds:[ecx+ebp*4]
  41dc7b:	rol    BYTE PTR [esi-0x7c8fe41b],cl
  41dc81:	mov    ah,0x60
  41dc83:	add    BYTE PTR [esi],0xe7
  41dc86:	in     al,0x16
  41dc88:	daa    
  41dc89:	arpl   WORD PTR [ebp-0x398d971c],sp
  41dc8f:	leave  
  41dc90:	rol    dl,0x44
  41dc93:	adc    esi,DWORD PTR [edx]
  41dc95:	or     BYTE PTR [ebx+ebp*8],bh
  41dc98:	aad    0xb4
  41dc9a:	add    al,BYTE PTR [esp+eax*1+0xb5f3da4]
  41dca1:	mov    ebx,0x5e0427f5
  41dca6:	repz xor esp,DWORD PTR [ebx-0x7c79fcb3]
  41dcad:	jb     0x41dcb6
  41dcaf:	sbb    al,0x8c
  41dcb1:	and    esp,DWORD PTR ds:0xfdb60a74
  41dcb7:	mov    edi,0xf6c03404
  41dcbc:	jg     0x41dc98
  41dcbe:	fstp   TBYTE PTR [ecx+edx*2+0x30]
  41dcc2:	(bad)  
  41dcc4:	or     BYTE PTR [edx-0x24],bh
  41dcc7:	push   ecx
  41dcc8:	shr    DWORD PTR [ecx-0x49e6fc2a],0xd9
  41dccf:	cld    
  41dcd0:	xchg   ebp,eax
  41dcd1:	push   ss
  41dcd2:	out    0xc9,al
  41dcd4:	lds    ebx,FWORD PTR [esi+0x19]
  41dcd7:	hlt    
  41dcd8:	rol    edx,0xec
  41dcdb:	rol    BYTE PTR [edi-0x59],0x4c
  41dcdf:	sub    eax,ecx
  41dce1:	inc    ebp
  41dce2:	sub    edi,esp
  41dce4:	or     bl,BYTE PTR [ecx]
  41dce6:	mov    esp,0xf16614cc
  41dceb:	dec    edi
  41dcec:	jle    0x41dcd3
  41dcee:	jmp    0x371c:0xae0daf5a
  41dcf5:	mov    bh,0x99
  41dcf7:	mov    bl,0x19
  41dcf9:	les    eax,FWORD PTR [ebx-0x5d6a492]
  41dcff:	xor    cl,bh
  41dd01:	dec    ebp
  41dd02:	into   
  41dd03:	xchg   esp,eax
  41dd04:	or     BYTE PTR [edx],ch
  41dd06:	jne    0x41dd16
  41dd08:	aam    0xb
  41dd0a:	dec    ebp
  41dd0b:	(bad)  
  41dd0c:	mov    dh,0xdc
  41dd0e:	pop    ss
  41dd0f:	pusha  
  41dd10:	mov    dh,0x32
  41dd12:	loope  0x41dd03
  41dd14:	pop    ecx
  41dd15:	inc    eax
  41dd16:	xor    eax,0x10c6711
  41dd1b:	and    esp,DWORD PTR [ebp+0x60]
  41dd1e:	jmp    0x41dd69
  41dd20:	push   ss
  41dd21:	cwde   
  41dd22:	loope  0x41dd38
  41dd24:	das    
  41dd25:	pop    ebp
  41dd26:	or     al,BYTE PTR [eax+0x7a]
  41dd29:	sbb    eax,0xe75207c
  41dd2e:	push   0x598fca2c
  41dd33:	jmp    0x41dd92
  41dd35:	inc    ebp
  41dd36:	ror    DWORD PTR [esi+ecx*8],1
  41dd39:	mov    edi,0x5d3740d5
  41dd3e:	or     eax,0xcc681930
  41dd43:	xchg   ebp,eax
  41dd44:	es (bad) 
  41dd46:	in     al,0x6a
  41dd48:	test   al,0xab
  41dd4a:	dec    BYTE PTR [ecx-0x34]
  41dd4d:	sbb    BYTE PTR [edx+ebp*4],ch
  41dd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd51:	fs aad 0x8
  41dd54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd55:	cld    
  41dd56:	pop    esp
  41dd57:	cmc    
  41dd58:	(bad)  
  41dd59:	jbe    0x41dd5c
  41dd5b:	daa    
  41dd5c:	or     eax,0xae6f2f12
  41dd61:	sub    dh,BYTE PTR [eax+0x5]
  41dd64:	dec    ebp
  41dd65:	and    ecx,DWORD PTR [ebx+0x2b]
  41dd68:	aaa    
  41dd69:	dec    edx
  41dd6a:	xchg   BYTE PTR [ebp+esi*1+0x6f3a3ab6],al
  41dd71:	retf   0xe227
  41dd74:	mov    esi,DWORD PTR [esi*1-0x721cf318]
  41dd7b:	mov    bl,0x5
  41dd7d:	stc    
  41dd7e:	cmp    edx,DWORD PTR [edi+0x3124574b]
  41dd84:	pop    ecx
  41dd85:	sub    BYTE PTR [ebx+ebx*8],dl
  41dd88:	sub    eax,0xed6139e6
  41dd8d:	sti    
  41dd8e:	inc    esi
  41dd8f:	fucomip st,st(4)
  41dd91:	jg     0x41dd3b
  41dd93:	add    dl,ah
  41dd95:	pushf  
  41dd96:	call   0x33e1:0xf0204428
  41dd9d:	repz jmp 0x2139:0x2f196901
  41dda5:	dec    cl
  41dda7:	cmp    edi,DWORD PTR [esi+0x78d1c35b]
  41ddad:	mov    al,ds:0xbbafdbae
  41ddb2:	mov    dh,0x13
  41ddb4:	(bad)  
  41ddb5:	fsub   st(4),st
  41ddb7:	mov    esi,0x683bb15
  41ddbc:	cmp    eax,0x23e73f95
  41ddc1:	jmp    DWORD PTR [esi-0x19b45809]
  41ddc7:	adc    edi,DWORD PTR ds:0x67f2952
  41ddcd:	xlat   BYTE PTR ds:[ebx]
  41ddce:	in     eax,dx
  41ddcf:	test   eax,0xdffb0514
  41ddd4:	stos   BYTE PTR es:[edi],al
  41ddd5:	rcr    DWORD PTR [edx],cl
  41ddd7:	hlt    
  41ddd8:	jmp    0xa1e63e54
  41dddd:	ret    0xe6c2
  41dde0:	loopne 0x41ddb4
  41dde2:	mov    eax,0x5507a249
  41dde7:	test   BYTE PTR [bx+si-0x5629],dh
  41ddec:	mov    WORD PTR [eax-0x780dced7],?
  41ddf2:	mov    dh,0xdf
  41ddf4:	and    eax,0x3b6db61c
  41ddf9:	xchg   ebp,eax
  41ddfa:	psrlw  mm6,QWORD PTR [ecx-0x450f44e0]
  41de01:	xchg   ebp,eax
  41de02:	fmul   QWORD PTR [ebp+0x2647c623]
  41de08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de09:	mov    al,ds:0x91afb60d
  41de0e:	rol    BYTE PTR [edx+0x7769d278],0x47
  41de15:	push   edx
  41de16:	jno    0x41ddbf
  41de18:	cwde   
  41de19:	scas   eax,DWORD PTR es:[edi]
  41de1a:	pushf  
  41de1b:	fist   WORD PTR [ebp+0x4368ae33]
  41de21:	les    edx,FWORD PTR [ecx]
  41de23:	mov    ecx,0xc92b49af
  41de28:	pop    ss
  41de29:	mov    eax,ds:0x194931f9
  41de2e:	outs   dx,BYTE PTR ds:[esi]
  41de2f:	push   ebx
  41de30:	add    DWORD PTR [edi],ebp
  41de32:	mov    dh,0x76
  41de34:	jmp    0x41de16
  41de36:	jmp    0x41de89
  41de38:	or     eax,0x5ca1e921
  41de3d:	mov    WORD PTR [esi-0x200fbfaf],ds
  41de43:	pop    ebx
  41de44:	cmp    BYTE PTR ss:[ecx],al
  41de47:	cmp    BYTE PTR [ebx+0x77c5e0ea],dl
  41de4d:	inc    edi
  41de4e:	push   eax
  41de4f:	loop   0x41de68
  41de51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de52:	fstp   st(2)
  41de54:	jne    0x41de79
  41de56:	xchg   ebx,eax
  41de57:	ins    BYTE PTR es:[edi],dx
  41de58:	loop   0x41de45
  41de5a:	call   0xff696b60
  41de5f:	scas   eax,DWORD PTR es:[edi]
  41de60:	jl     0x41de1c
  41de62:	dec    esi
  41de63:	xchg   esp,eax
  41de64:	stc    
  41de65:	xor    eax,0x848033ef
  41de6a:	test   BYTE PTR [edi+eax*4-0x3f31db9b],dh
  41de71:	mov    gs,WORD PTR [ecx+ebp*8]
  41de74:	jp     0x41dee7
  41de76:	popf   
  41de77:	push   edx
  41de78:	sahf   
  41de79:	clc    
  41de7a:	xor    edi,DWORD PTR [eax]
  41de7c:	imul   DWORD PTR [edi]
  41de7e:	pop    ebx
  41de7f:	inc    edx
  41de80:	rol    BYTE PTR [edi],cl
  41de82:	cmc    
  41de83:	pop    es
  41de84:	or     edx,DWORD PTR [edi+eiz*8-0x5828c5cb]
  41de8b:	lods   al,BYTE PTR ds:[esi]
  41de8c:	sbb    al,0xaf
  41de8e:	retf   
  41de8f:	cmp    ecx,0x4a
  41de92:	dec    edi
  41de93:	fadd   DWORD PTR [esi-0x14]
  41de96:	adc    al,0xec
  41de98:	fs idiv edi
  41de9b:	sbb    edx,DWORD PTR [esi+0x1c]
  41de9e:	pop    ebx
  41de9f:	mov    eax,0x70d4c4f3
  41dea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dea5:	mov    edx,0x44b82d50
  41deaa:	jb     0x41dec7
  41deac:	je     0x41df29
  41deae:	out    0xf1,eax
  41deb0:	xor    al,0x35
  41deb2:	out    dx,al
  41deb3:	out    dx,al
  41deb4:	fst    DWORD PTR [ecx]
  41deb6:	sbb    ebp,esp
  41deb8:	mov    ebp,0xfc0177ae
  41debd:	call   0x6d6a:0x75743d88
  41dec4:	repz (bad) 
  41dec6:	lock push edx
  41dec8:	xor    al,0xfd
  41deca:	fsubr  DWORD PTR ds:0x94637abd
  41ded0:	inc    edx
  41ded1:	inc    ebx
  41ded2:	and    ebp,esi
  41ded4:	pop    edi
  41ded5:	and    al,0x8f
  41ded7:	lock test al,0x13
  41deda:	(bad)  
  41dedb:	loope  0x41df44
  41dedd:	sbb    al,0x1e
  41dedf:	lock mov bl,0x17
  41dee2:	jb     0x41df47
  41dee4:	mov    ah,0x59
  41dee6:	jo     0x41df14
  41dee8:	scas   eax,DWORD PTR es:[edi]
  41dee9:	jae    0x41de6e
  41deeb:	add    eax,0x95ee7aea
  41def0:	mov    dl,0xaa
  41def2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def3:	push   ebp
  41def4:	dec    edi
  41def5:	xor    ah,BYTE PTR [ebx-0x135e99f3]
  41defb:	(bad)  
  41defc:	pop    edi
  41defd:	jbe    0x41df4d
  41deff:	mov    WORD PTR [edx],ss
  41df01:	sub    dh,BYTE PTR [ecx-0x295e18d5]
  41df07:	leave  
  41df08:	push   ebp
  41df09:	jns    0x41de8d
  41df0b:	(bad)  
  41df0d:	js     0x41dea9
  41df0f:	jmp    DWORD PTR [esi+0x7a]
  41df12:	fisub  WORD PTR ds:0x33355420
  41df18:	add    ah,BYTE PTR [ebx]
  41df1a:	xor    DWORD PTR [edx-0x782614ff],0xac2d8ae3
  41df24:	cmc    
  41df25:	cmp    eax,ebx
  41df27:	cli    
  41df28:	pop    ebx
  41df29:	aaa    
  41df2a:	xchg   esp,eax
  41df2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df2d:	xchg   esp,eax
  41df2e:	call   0xcbdf0ee8
  41df33:	loop   0x41dfab
  41df35:	in     al,dx
  41df36:	sti    
  41df37:	popf   
  41df38:	add    BYTE PTR [ebx-0x66ffbf47],bh
  41df3e:	mov    eax,0x28286882
  41df43:	call   0xaf5c:0xae14885e
  41df4a:	daa    
  41df4b:	icebp  
  41df4c:	repnz fisub DWORD PTR [edx+eiz*8]
  41df50:	aad    0x8a
  41df52:	outs   dx,DWORD PTR ds:[esi]
  41df53:	out    0x48,eax
  41df55:	adc    DWORD PTR [edi],edx
  41df57:	pop    edi
  41df58:	loopne 0x41def4
  41df5a:	aam    0x3b
  41df5c:	xorps  xmm7,xmm1
  41df5f:	xor    DWORD PTR [ebp-0x2b],eax
  41df62:	mov    edx,0xa537b73f
  41df67:	(bad)  
  41df68:	out    dx,eax
  41df69:	cmp    BYTE PTR [esi+0x12f55a0e],bh
  41df6f:	mov    BYTE PTR [eax+0x33],dl
  41df72:	addr16 xor ah,dl
  41df75:	mov    eax,ds:0xccbb122d
  41df7a:	mov    ds:0x2af32245,eax
  41df7f:	int    0x98
  41df81:	out    0x0,al
  41df83:	adc    ebx,DWORD PTR [esi-0x50cdad3e]
  41df89:	mov    edi,0xcf4527cc
  41df8e:	loopne 0x41df88
  41df90:	fist   WORD PTR [esi]
  41df92:	lods   al,BYTE PTR ds:[esi]
  41df93:	loopne 0x41df1c
  41df95:	cmp    ebx,ecx
  41df97:	sbb    BYTE PTR [eax+ebp*2-0x16],ch
  41df9b:	int    0x74
  41df9d:	sub    BYTE PTR [esi],ah
  41df9f:	pop    ss
  41dfa0:	lods   eax,DWORD PTR ds:[esi]
  41dfa1:	(bad)  
  41dfa3:	xor    dl,BYTE PTR [ecx+0x7]
  41dfa6:	std    
  41dfa7:	gs mov bh,0x57
  41dfaa:	xchg   edx,eax
  41dfab:	dec    ebp
  41dfac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfad:	aaa    
  41dfae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfaf:	fld    TBYTE PTR [eax-0x7924a460]
  41dfb5:	mov    edx,0x63872ca9
  41dfba:	sub    edx,DWORD PTR [ebp-0x6969c0db]
  41dfc0:	pusha  
  41dfc1:	fsub   DWORD PTR [ebp+0x60]
  41dfc4:	xor    eax,0x37caaf29
  41dfc9:	test   dl,bh
  41dfcb:	xor    DWORD PTR [ebx-0x741c70d3],0x79
  41dfd2:	and    DWORD PTR [eax],0x1322c452
  41dfd8:	inc    ebx
  41dfd9:	daa    
  41dfda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfdb:	fwait
  41dfdc:	ror    DWORD PTR [ebp+0x42],1
  41dfdf:	mov    al,ds:0x96d2fd44
  41dfe4:	mov    edx,0x9b292db0
  41dfe9:	dec    esp
  41dfea:	mov    fs,WORD PTR [edx-0x7ad8c4de]
  41dff0:	mov    dh,0x72
  41dff2:	pusha  
  41dff3:	mov    cl,0xe1
  41dff5:	mov    cl,0xaa
  41dff7:	push   ss
  41dff8:	out    dx,al
  41dff9:	or     al,0x30
  41dffb:	xchg   edx,eax
  41dffc:	test   bl,0x9a
  41dfff:	xor    esp,DWORD PTR [ebx+edx*1-0x2083b906]
  41e006:	mov    edx,0xa8ac951f
  41e00b:	mov    ch,0x3a
  41e00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e00e:	icebp  
  41e00f:	dec    ebp
  41e010:	dec    edi
  41e011:	stc    
  41e012:	xchg   ebp,eax
  41e013:	dec    ecx
  41e014:	(bad)  
  41e015:	arpl   WORD PTR [ebp-0x3f1fb393],bx
  41e01b:	push   esi
  41e01c:	(bad)  
  41e01d:	push   ds
  41e01e:	out    dx,eax
  41e01f:	jmp    0x2c4f3396
  41e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e025:	cmp    al,0xa3
  41e027:	and    esp,DWORD PTR [ebx]
  41e029:	fcom   DWORD PTR [ebp+0x29]
  41e02c:	sub    eax,0xdb75ad46
  41e031:	adc    BYTE PTR [edi-0x70422740],dl
  41e037:	push   esi
  41e038:	das    
  41e039:	or     al,0x2b
  41e03b:	aam    0x56
  41e03d:	fsubr  QWORD PTR [eax]
  41e03f:	outs   dx,BYTE PTR ds:[esi]
  41e040:	or     DWORD PTR [ebx-0xb],0xbb086f80
  41e047:	(bad)  
  41e048:	inc    esi
  41e049:	fisubr WORD PTR [eax-0x5e]
  41e04c:	mov    esp,0xa7c23c0f
  41e051:	popf   
  41e052:	call   0x6999:0x574f4f64
  41e059:	sbb    DWORD PTR [edx],ecx
  41e05b:	pop    ecx
  41e05c:	push   ss
  41e05d:	xchg   esi,eax
  41e05e:	data16 je 0x41e050
  41e061:	push   ds
  41e062:	loopne 0x41e035
  41e064:	mov    ds:0x249991c3,eax
  41e069:	fs test eax,0xfaec9275
  41e06f:	data16 into 
  41e071:	rcl    DWORD PTR [esi+0x231762d5],1
  41e077:	loopne 0x41e0ba
  41e079:	iret   
  41e07a:	sbb    ebp,DWORD PTR [ebp-0x5da220cf]
  41e080:	dec    ebx
  41e081:	repnz mov ds:0x4496a682,al
  41e087:	dec    edi
  41e088:	jp     0x41e08a
  41e08a:	jp     0x41e051
  41e08c:	jae    0x41e022
  41e08e:	ds sub al,BYTE PTR gs:[edx-0x46]
  41e093:	push   ds
  41e094:	push   cs
  41e095:	lods   eax,DWORD PTR ds:[esi]
  41e096:	xchg   ch,dh
  41e098:	xor    esi,DWORD PTR [ecx+0x2a8c127e]
  41e09e:	jmp    0x41e08c
  41e0a0:	mov    ch,0x92
  41e0a2:	(bad)  [edi]
  41e0a4:	mov    ch,BYTE PTR [ebx-0x72061185]
  41e0aa:	push   ebp
  41e0ab:	push   edi
  41e0ac:	xchg   edi,eax
  41e0ad:	(bad)  
  41e0ae:	jno    0x41e0ab
  41e0b0:	pushf  
  41e0b1:	xlat   BYTE PTR ds:[ebx]
  41e0b2:	stos   DWORD PTR es:[edi],eax
  41e0b3:	adc    eax,0x8a9c93cc
  41e0b8:	call   0xf1120b35
  41e0bd:	fbstp  TBYTE PTR [ecx-0x13]
  41e0c0:	xchg   ecx,eax
  41e0c1:	lds    ecx,FWORD PTR [edi+0x73]
  41e0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0c5:	sti    
  41e0c6:	retf   0xd9ed
  41e0c9:	in     al,0xb1
  41e0cb:	out    dx,al
  41e0cc:	sbb    al,0x72
  41e0ce:	mov    WORD PTR [ebx],?
  41e0d0:	repnz inc edi
  41e0d2:	xor    eax,0xd8cc91e2
  41e0d7:	or     eax,0xb851972c
  41e0dc:	and    esi,ebp
  41e0de:	xchg   esp,eax
  41e0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e0:	cld    
  41e0e1:	push   edi
  41e0e2:	cmp    bh,dl
  41e0e4:	push   ecx
  41e0e5:	int    0xb3
  41e0e7:	jno    0x41e0b0
  41e0e9:	push   esi
  41e0ea:	scas   al,BYTE PTR es:[edi]
  41e0eb:	scas   al,BYTE PTR es:[edi]
  41e0ec:	fcmovne st,st(0)
  41e0ee:	(bad)  
  41e0ef:	xor    bl,ch
  41e0f1:	jmp    0xc5bc:0x3b915709
  41e0f8:	cmc    
  41e0f9:	adc    eax,0x81f39014
  41e0fe:	inc    eax
  41e0ff:	inc    ecx
  41e100:	cmp    ch,BYTE PTR [esi+ecx*4+0x61bf492c]
  41e107:	adc    BYTE PTR [ebp+0x1b],ah
  41e10a:	enter  0x9b2b,0xc0
  41e10e:	data16 (bad) 
  41e110:	dec    edx
  41e111:	mov    al,0x6b
  41e113:	cli    
  41e114:	cmp    eax,0xbc69fbb5
  41e119:	adc    eax,0x1d55367
  41e11e:	loope  0x41e194
  41e120:	sbb    ah,dl
  41e122:	mov    dh,0xb2
  41e124:	fcmove st,st(6)
  41e126:	ja     0x41e183
  41e128:	push   ebp
  41e129:	pop    ecx
  41e12a:	mov    dl,0x3a
  41e12c:	call   0xcd1d9b03
  41e131:	aam    0xac
  41e133:	loopne 0x41e1ae
  41e135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e136:	ins    BYTE PTR es:[edi],dx
  41e137:	int3   
  41e138:	pop    ds
  41e139:	fcmovnbe st,st(0)
  41e13b:	rcr    edx,0xa5
  41e13e:	adc    DWORD PTR [ebp-0x6b],edi
  41e141:	xor    DWORD PTR [eax+0x4aea2940],esp
  41e147:	std    
  41e148:	test   BYTE PTR [ebp-0x61],ah
  41e14b:	cmp    eax,0xd643b732
  41e150:	or     eax,0x9f6a3d11
  41e155:	fsubrp st(3),st
  41e157:	std    
  41e158:	add    DWORD PTR [ebx-0x32],0xffffff86
  41e15c:	or     DWORD PTR [ebp-0x7b98b35c],0xdc66844
  41e166:	cmc    
  41e167:	sub    eax,0xd6673004
  41e16c:	out    0xe9,al
  41e16e:	addr16 mov edx,0xf27f71cd
  41e174:	cwde   
  41e175:	cdq    
  41e176:	mov    WORD PTR [edx-0x29],?
  41e179:	int3   
  41e17a:	lods   eax,DWORD PTR ds:[esi]
  41e17b:	daa    
  41e17c:	sbb    dh,dh
  41e17e:	ja     0x41e1d3
  41e180:	pushf  
  41e181:	sbb    edi,DWORD PTR [edx]
  41e183:	stc    
  41e184:	fst    DWORD PTR ds:0x8912b4f6
  41e18a:	mov    ecx,0xcce715ce
  41e18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e190:	stos   BYTE PTR es:[edi],al
  41e191:	mov    esp,0x47759fb1
  41e196:	xor    al,0x4c
  41e198:	pop    eax
  41e199:	and    eax,0xcab26c3b
  41e19e:	cmp    eax,0xebe203cf
  41e1a3:	xchg   DWORD PTR [edi+0x572a29be],edx
  41e1a9:	mov    ecx,0x89eedd43
  41e1ae:	add    esp,ebp
  41e1b0:	adc    eax,DWORD PTR fs:0x2a4a513c
  41e1b7:	addr16 jno 0x41e1ac
  41e1ba:	xchg   ecx,eax
  41e1bb:	js     0x41e1e7
  41e1bd:	jmp    0x41e16f
  41e1bf:	sbb    bl,BYTE PTR [edi+0x65]
  41e1c2:	(bad)  
  41e1c3:	jns    0x41e1ec
  41e1c5:	aaa    
  41e1c6:	(bad)  
  41e1c7:	stc    
  41e1c8:	inc    edx
  41e1c9:	ins    BYTE PTR es:[edi],dx
  41e1ca:	sbb    BYTE PTR [ebp+0x5d],ah
  41e1cd:	cmp    ah,ch
  41e1cf:	ret    0xb22
  41e1d2:	loop   0x41e24c
  41e1d4:	mov    ecx,0x654ddaa3
  41e1d9:	and    ecx,DWORD PTR [edi+eax*4+0x69daa4aa]
  41e1e0:	dec    ecx
  41e1e1:	dec    edi
  41e1e2:	ret    0x83db
  41e1e5:	out    dx,al
  41e1e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1e7:	mul    DWORD PTR [ecx]
  41e1e9:	cwde   
  41e1ea:	sbb    ah,cl
  41e1ec:	mov    dl,BYTE PTR [eax+0x71ca3afd]
  41e1f2:	mov    WORD PTR [eax+0x53],fs
  41e1f5:	aas    
  41e1f6:	(bad)  
  41e1f7:	into   
  41e1f8:	les    eax,FWORD PTR [esi+esi*2]
  41e1fb:	jmp    0x6d5e:0xce832584
  41e202:	fst    st(6)
  41e204:	mov    edx,0x1f67cd28
  41e209:	aas    
  41e20a:	sbb    eax,DWORD PTR [eax+0x4b]
  41e20d:	inc    edi
  41e20e:	scas   eax,DWORD PTR es:[edi]
  41e20f:	jg     0x41e1a9
  41e211:	or     al,0x18
  41e213:	cwde   
  41e214:	clc    
  41e215:	jns    0x41e245
  41e217:	jge    0x41e24e
  41e219:	out    0x3b,al
  41e21b:	adc    esi,esp
  41e21d:	or     BYTE PTR [edx-0x32],ch
  41e220:	pcmpgtd mm0,QWORD PTR [esi+0x476ab4e8]
  41e227:	ret    0x886c
  41e22a:	repnz sub BYTE PTR [ebx-0x6e],0x60
  41e22f:	xchg   BYTE PTR [edi+ebp*2-0x6b],al
  41e233:	dec    eax
  41e234:	das    
  41e235:	jle    0x41e29c
  41e237:	push   cs
  41e238:	jl     0x41e1ef
  41e23a:	pop    eax
  41e23b:	jns    0x41e26c
  41e23d:	jle    0x41e2b1
  41e23f:	adc    DWORD PTR ds:0x87e30640,0xffffffbd
  41e246:	pop    esp
  41e247:	shl    edi,cl
  41e249:	js     0x41e292
  41e24b:	dec    eax
  41e24c:	cmc    
  41e24d:	repnz push di
  41e250:	add    dh,BYTE PTR [edi-0x1b]
  41e253:	mov    esp,0xd102aecf
  41e258:	or     eax,esi
  41e25a:	(bad)  
  41e25b:	jmp    DWORD PTR [edx+0x3d]
  41e25e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e25f:	ins    BYTE PTR es:[edi],dx
  41e260:	pushf  
  41e261:	cmp    ebp,DWORD PTR [esi+0x5a]
  41e264:	adc    al,0xe7
  41e266:	stos   DWORD PTR es:[edi],eax
  41e267:	sub    BYTE PTR [edi],cl
  41e269:	ds xchg esp,eax
  41e26b:	test   BYTE PTR [ebx+0x26],bl
  41e26e:	sub    ah,bh
  41e270:	xchg   DWORD PTR ds:0xb8b24001,edi
  41e276:	and    ebp,DWORD PTR [ecx-0x67]
  41e279:	scas   al,BYTE PTR es:[edi]
  41e27a:	or     ebx,DWORD PTR [edi-0x6d]
  41e27d:	add    eax,0x7b044318
  41e282:	jmp    FWORD PTR [ecx]
  41e284:	push   esp
  41e285:	push   eax
  41e286:	in     al,dx
  41e287:	imul   ebp,ebx,0xffffffdd
  41e28a:	pop    ebx
  41e28b:	pop    esi
  41e28c:	lahf   
  41e28d:	int3   
  41e28e:	stos   BYTE PTR es:[edi],al
  41e28f:	rcl    DWORD PTR ds:0x451498a2,1
  41e295:	cmc    
  41e296:	add    BYTE PTR [ebp+0x33],0x17
  41e29a:	stc    
  41e29b:	imul   ecx,DWORD PTR [ecx-0x46],0xffffffb9
  41e29f:	add    al,BYTE PTR [ebx-0x3d]
  41e2a2:	rcr    BYTE PTR [edi],0xd7
  41e2a5:	loope  0x41e2b4
  41e2a7:	pop    esi
  41e2a8:	enter  0xc3a6,0x1
  41e2ac:	cmp    bl,bl
  41e2ae:	xchg   ecx,eax
  41e2af:	test   BYTE PTR [esi],dl
  41e2b1:	fcomp  DWORD PTR [ecx-0x59]
  41e2b4:	xchg   BYTE PTR [edx+0x10],dl
  41e2b7:	add    BYTE PTR [ebp+0x42],cl
  41e2ba:	pushf  
  41e2bb:	cmp    al,0x97
  41e2bd:	and    cl,al
  41e2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c0:	int    0xfe
  41e2c2:	cmp    eax,0x5113a9e7
  41e2c7:	pop    ebx
  41e2c8:	xchg   esp,eax
  41e2c9:	shl    BYTE PTR [edi-0x51],1
  41e2cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2cd:	pop    es
  41e2ce:	cs jno 0x41e2b5
  41e2d1:	popa   
  41e2d2:	cmc    
  41e2d3:	call   0x18fd38be
  41e2d8:	pop    esi
  41e2d9:	or     esp,DWORD PTR fs:[esi]
  41e2dc:	sbb    eax,0xb98c527d
  41e2e1:	stos   BYTE PTR es:[edi],al
  41e2e2:	and    al,0x99
  41e2e4:	xchg   edx,eax
  41e2e5:	jge    0x41e28f
  41e2e7:	(bad)  
  41e2e8:	lahf   
  41e2e9:	pop    es
  41e2ea:	into   
  41e2eb:	mov    edx,eax
  41e2ed:	dec    edi
  41e2ee:	sbb    BYTE PTR [esi+0x5],ch
  41e2f1:	fcomp  DWORD PTR [esi+0x62]
  41e2f4:	mov    ch,0xac
  41e2f6:	dec    esi
  41e2f7:	push   ds
  41e2f8:	sbb    DWORD PTR ds:0x9a670864,ebp
  41e2fe:	mov    eax,ds:0x20ffa422
  41e303:	sbb    al,0x6
  41e305:	add    BYTE PTR [edx],0x6e
  41e308:	xchg   edi,eax
  41e309:	jp     0x41e2bd
  41e30b:	add    bh,BYTE PTR [eax-0x4b]
  41e30e:	cmp    al,0x3d
  41e310:	sub    cl,BYTE PTR [edx-0x20]
  41e313:	dec    edi
  41e314:	stos   DWORD PTR es:[edi],eax
  41e315:	add    esp,0x2786179f
  41e31b:	fwait
  41e31c:	mul    DWORD PTR [eax]
  41e31e:	or     ebx,ebp
  41e320:	and    ecx,DWORD PTR ds:0x2d7fdcbc
  41e326:	aaa    
  41e327:	mov    WORD PTR [ebx+ebx*4-0x33],gs
  41e32b:	leave  
  41e32c:	leave  
  41e32d:	mov    ebx,0xa930fb64
  41e332:	out    dx,eax
  41e333:	cmp    BYTE PTR [ebp-0x34179ef7],al
  41e339:	scas   al,BYTE PTR es:[edi]
  41e33a:	mov    edi,DWORD PTR [edx-0x42]
  41e33d:	aas    
  41e33e:	push   esp
  41e33f:	loope  0x41e3bb
  41e341:	ja     0x41e384
  41e343:	push   ecx
  41e344:	psubsw mm7,QWORD PTR [ebx-0x43]
  41e348:	in     al,0x13
  41e34a:	outs   dx,BYTE PTR ds:[esi]
  41e34b:	adc    cl,BYTE PTR [edi+0x27]
  41e34e:	hlt    
  41e34f:	adc    BYTE PTR [eax],dh
  41e351:	jnp    0x41e337
  41e353:	jl     0x41e306
  41e355:	cmp    al,0x8f
  41e357:	jno    0x41e35f
  41e359:	jno    0x41e2ee
  41e35b:	test   eax,0xdd9b1685
  41e360:	mov    bl,0xdf
  41e362:	leave  
  41e363:	fninit 
  41e365:	jo     0x41e399
  41e367:	cdq    
  41e368:	sbb    bh,0x40
  41e36b:	xchg   edx,eax
  41e36c:	mov    eax,0xaedd6340
  41e371:	(bad)  
  41e372:	stc    
  41e373:	dec    eax
  41e374:	and    eax,0x95cb9cdb
  41e379:	pushf  
  41e37a:	fbld   TBYTE PTR [edx]
  41e37c:	jp     0x41e3e2
  41e37e:	sar    DWORD PTR [esi-0x65],cl
  41e381:	iret   
  41e382:	xchg   ebp,eax
  41e383:	daa    
  41e384:	ins    BYTE PTR es:[edi],dx
  41e385:	stos   BYTE PTR es:[edi],al
  41e386:	xchg   ecx,eax
  41e387:	scas   al,BYTE PTR es:[edi]
  41e388:	fistp  WORD PTR [ecx+0x9]
  41e38b:	retf   
  41e38c:	xchg   ecx,eax
  41e38d:	pop    ss
  41e38e:	ds jo  0x41e36a
  41e391:	in     al,0x4e
  41e393:	mov    ds:0xbf5813a0,eax
  41e398:	shl    BYTE PTR [eax-0x731f7013],1
  41e39e:	xchg   esi,eax
  41e39f:	out    0x2d,eax
  41e3a1:	mov    ah,0xe5
  41e3a3:	jl     0x41e3c2
  41e3a5:	lahf   
  41e3a6:	cmp    al,0xce
  41e3a8:	mov    esi,DWORD PTR [edi]
  41e3aa:	ins    BYTE PTR es:[edi],dx
  41e3ab:	jae    0x41e3a0
  41e3ad:	in     eax,dx
  41e3ae:	mov    ebp,DWORD PTR [edx]
  41e3b0:	ret    
  41e3b1:	mov    DWORD PTR [eax+0x6093d9a1],edi
  41e3b7:	(bad)  
  41e3b8:	sti    
  41e3b9:	xchg   BYTE PTR [ebp+ebp*1-0x6fb5afc6],cl
  41e3c0:	mov    cl,0x85
  41e3c2:	aas    
  41e3c3:	repnz aas 
  41e3c5:	outs   dx,BYTE PTR ds:[esi]
  41e3c6:	(bad)  
  41e3c7:	xchg   ebx,eax
  41e3c8:	loope  0x41e43e
  41e3ca:	xchg   esp,eax
  41e3cb:	bound  edx,QWORD PTR [ebp-0x71]
  41e3ce:	jnp    0x41e373
  41e3d0:	jae    0x41e3c7
  41e3d2:	adc    al,0xc8
  41e3d4:	jecxz  0x41e40e
  41e3d6:	push   ebx
  41e3d7:	and    BYTE PTR [eax+ebp*4-0x3a],ch
  41e3db:	pushf  
  41e3dc:	popa   
  41e3dd:	dec    eax
  41e3de:	add    DWORD PTR [ecx-0x27e43853],ebx
  41e3e4:	push   ss
  41e3e5:	push   ds
  41e3e6:	mov    edi,0xa7ca12ad
  41e3eb:	inc    eax
  41e3ec:	out    dx,eax
  41e3ed:	jmp    0xab00d9a
  41e3f2:	and    eax,esp
  41e3f4:	xchg   BYTE PTR ds:0x58dbf9fa,ah
  41e3fa:	xchg   ebx,eax
  41e3fb:	jbe    0x41e3dc
  41e3fd:	adc    ebx,DWORD PTR [ecx-0x51]
  41e400:	(bad)  
  41e401:	lock adc ebx,DWORD PTR [esi]
  41e404:	jmp    0x41e3ad
  41e406:	xchg   edi,eax
  41e407:	push   edi
  41e408:	push   ecx
  41e409:	enter  0x6825,0x33
  41e40d:	jnp    0x41e474
  41e40f:	dec    ebp
  41e410:	cmp    eax,esp
  41e412:	repz xchg ecx,eax
  41e414:	or     eax,0x82423b8a
  41e419:	cmp    al,0xca
  41e41b:	push   esp
  41e41c:	jge    0x41e485
  41e41e:	and    bl,BYTE PTR [edi]
  41e420:	pop    es
  41e421:	mov    al,0xcd
  41e423:	cmp    cl,BYTE PTR [ebp+0x100d6118]
  41e429:	and    al,0xfe
  41e42b:	sbb    DWORD PTR [edx-0x76ee416a],esp
  41e431:	or     al,0x64
  41e433:	into   
  41e434:	sbb    al,0x1
  41e436:	inc    edx
  41e437:	sub    eax,0x9109e3d
  41e43c:	int    0x46
  41e43e:	xor    dl,BYTE PTR [edi+eiz*8]
  41e441:	adc    bh,dh
  41e443:	stos   BYTE PTR es:[edi],al
  41e444:	cmc    
  41e445:	and    eax,0x323cf2be
  41e44a:	add    BYTE PTR [edi],ah
  41e44c:	pop    ebx
  41e44d:	push   ds
  41e44e:	repnz xchg ebx,eax
  41e450:	aad    0x9a
  41e452:	lock es push ds
  41e455:	cvtps2pi mm1,QWORD PTR [ecx-0x40]
  41e459:	(bad)  
  41e45a:	xor    ebx,edx
  41e45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45d:	cli    
  41e45e:	sar    DWORD PTR [eax+0x451d7a15],1
  41e464:	mov    BYTE PTR [ebx],0x3f
  41e467:	pop    esi
  41e468:	repz test eax,0x3ad04c15
  41e46e:	jno    0x41e4e2
  41e470:	loop   0x41e43b
  41e472:	outs   dx,BYTE PTR ds:[esi]
  41e473:	jmp    0x41e4a4
  41e475:	mov    ah,0x81
  41e477:	clc    
  41e478:	cmp    al,0x62
  41e47a:	inc    esi
  41e47b:	cmp    al,0x57
  41e47d:	jnp    0x41e4d4
  41e47f:	data16 lahf 
  41e481:	xor    al,0x99
  41e483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e484:	sub    edx,DWORD PTR [eax+0x4f92268a]
  41e48a:	neg    BYTE PTR [esi+0x15]
  41e48d:	pop    ebp
  41e48e:	fisttp DWORD PTR [esi]
  41e490:	mov    ds:0x511a4dc4,eax
  41e495:	fcomp  QWORD PTR [bp+0x49ca]
  41e49a:	into   
  41e49b:	and    eax,0x7354aa6f
  41e4a0:	sar    BYTE PTR [ecx],1
  41e4a2:	xchg   edi,eax
  41e4a3:	rcl    DWORD PTR [edx],cl
  41e4a5:	jns    0x41e49a
  41e4a7:	mov    ah,BYTE PTR [edx]
  41e4a9:	xor    eax,0x92575810
  41e4ae:	add    bx,si
  41e4b1:	push   esp
  41e4b2:	inc    eax
  41e4b3:	add    esi,esp
  41e4b5:	xchg   ecx,eax
  41e4b6:	imul   ebp,DWORD PTR [ebp-0x556cefe1],0xffffffdf
  41e4bd:	inc    ebp
  41e4be:	jecxz  0x41e4a6
  41e4c0:	dec    ebx
  41e4c1:	sbb    edi,DWORD PTR [eax-0x30672f9c]
  41e4c7:	mov    dl,0x1f
  41e4c9:	and    eax,0x3980c8fa
  41e4ce:	fiadd  DWORD PTR [esi-0x7]
  41e4d1:	mov    al,ds:0xa2208f80
  41e4d6:	sbb    DWORD PTR ds:0xb7b4b22f,0xea47f802
  41e4e0:	adc    ebx,esi
  41e4e2:	ret    0xad43
  41e4e5:	div    BYTE PTR cs:[edi+0x536b37a6]
  41e4ec:	das    
  41e4ed:	inc    ebp
  41e4ee:	xlat   BYTE PTR ds:[ebx]
  41e4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4f1:	bound  eax,QWORD PTR [edi]
  41e4f3:	mov    edx,0xf5a557ac
  41e4f8:	outs   dx,DWORD PTR ds:[esi]
  41e4f9:	int3   
  41e4fa:	lahf   
  41e4fb:	mov    eax,0x2baca36e
  41e500:	sar    DWORD PTR [ecx],0x7e
  41e503:	push   ecx
  41e504:	and    eax,0xe2a854a0
  41e509:	aam    0x16
  41e50b:	push   ss
  41e50c:	mov    dh,0xe0
  41e50e:	inc    esp
  41e50f:	test   al,0x94
  41e511:	and    esi,DWORD PTR [esi+0x60]
  41e514:	xchg   esi,eax
  41e515:	loopne 0x41e523
  41e517:	xchg   esi,eax
  41e518:	cmp    ebp,DWORD PTR [edx-0x2c544b6c]
  41e51e:	fisub  DWORD PTR [ebx-0x29a83dd2]
  41e524:	add    ebp,DWORD PTR [edx+0x4d]
  41e527:	or     esp,DWORD PTR [ecx]
  41e529:	pop    ds
  41e52a:	cmp    eax,0x9f120551
  41e52f:	push   0xffffffa9
  41e531:	cmp    eax,esi
  41e533:	inc    esp
  41e534:	ud1    esi,DWORD PTR [ecx-0x5]
  41e538:	retf   
  41e539:	cmp    ah,ah
  41e53b:	inc    eax
  41e53c:	test   BYTE PTR [eax+0x10],ch
  41e53f:	dec    eax
  41e540:	jne    0x41e594
  41e542:	(bad)  
  41e543:	fld    TBYTE PTR [eax]
  41e545:	cmc    
  41e546:	jmp    0x5c79:0xb905edb3
  41e54d:	jo     0x41e559
  41e54f:	jne    0x41e58a
  41e551:	xor    al,0xbf
  41e553:	fidiv  WORD PTR [esi+0x42e4eca8]
  41e559:	mov    edi,0x1468af7d
  41e55e:	lahf   
  41e55f:	xchg   esp,eax
  41e560:	aam    0x25
  41e562:	ja     0x41e526
  41e564:	data16 fbstp TBYTE PTR fs:[edx+0x5049996b]
  41e56c:	std    
  41e56d:	(bad)  [esi]
  41e56f:	xor    BYTE PTR [ebx+0x41],bl
  41e572:	jmp    0xdd76:0xd5ea2477
  41e579:	pop    ds
  41e57a:	cld    
  41e57b:	inc    ebp
  41e57c:	lods   eax,DWORD PTR ds:[esi]
  41e57d:	enter  0xb1db,0xc
  41e581:	bound  ebx,QWORD PTR [ecx-0x5d]
  41e584:	aam    0x9
  41e586:	jge    0x41e5ac
  41e588:	popf   
  41e589:	iret   
  41e58a:	js     0x41e54d
  41e58c:	lods   eax,DWORD PTR ds:[esi]
  41e58d:	sbb    BYTE PTR [edi-0xe],al
  41e590:	fild   QWORD PTR [esi]
  41e592:	xor    DWORD PTR [ecx],eax
  41e594:	lea    edi,[eax+ebp*2-0x5fa90d78]
  41e59b:	test   al,0x84
  41e59d:	outs   dx,BYTE PTR ds:[esi]
  41e59e:	popa   
  41e59f:	cmp    ch,al
  41e5a1:	(bad)  
  41e5a2:	call   0x1e21:0xea4e7874
  41e5a9:	sub    eax,edx
  41e5ab:	dec    ebx
  41e5ac:	inc    edx
  41e5ad:	rol    DWORD PTR [edx-0x51fbffb6],0xf2
  41e5b4:	mov    al,ds:0xdd5bd482
  41e5b9:	sbb    bl,BYTE PTR [esi+0x51e82cc4]
  41e5bf:	pop    edx
  41e5c0:	pop    edi
  41e5c1:	mov    dh,0x52
  41e5c3:	add    edi,DWORD PTR [ecx]
  41e5c5:	into   
  41e5c6:	mov    ebp,0x227e4a9
  41e5cb:	cmp    ecx,DWORD PTR [ebx-0x4ddb6711]
  41e5d1:	out    dx,eax
  41e5d2:	mov    cl,0x92
  41e5d4:	cli    
  41e5d5:	ret    0x31d9
  41e5d8:	adc    DWORD PTR [ecx+0x7c],ebp
  41e5db:	fisttp DWORD PTR fs:[ebx+edx*1]
  41e5df:	sbb    DWORD PTR [ebx+esi*4-0x50de6ce4],0x55e69556
  41e5ea:	mov    ecx,DWORD PTR [ecx+0x79134aea]
  41e5f0:	and    ch,BYTE PTR [ecx]
  41e5f2:	adc    BYTE PTR [esi-0x1e27591f],al
  41e5f8:	out    dx,al
  41e5f9:	fcom   QWORD PTR [esi]
  41e5fb:	sub    BYTE PTR [edi],0x33
  41e5fe:	xchg   ecx,eax
  41e5ff:	sbb    cl,BYTE PTR [edx+0x1c]
  41e602:	jl     0x41e5ba
  41e604:	xor    BYTE PTR [ecx],0x26
  41e607:	push   ecx
  41e608:	leave  
  41e609:	imul   esi,DWORD PTR ss:[esi-0x7a],0xcf88b1dd
  41e611:	xchg   esp,eax
  41e612:	add    dl,BYTE PTR [esi]
  41e614:	outs   dx,BYTE PTR ds:[esi]
  41e615:	inc    esp
  41e616:	add    DWORD PTR [ecx+eax*2-0x62],ecx
  41e61a:	sub    ah,BYTE PTR [eax]
  41e61c:	push   0x2e
  41e61e:	adc    DWORD PTR [eax+eiz*4+0x4198f55c],esp
  41e625:	jle    0x41e5c0
  41e627:	cmp    eax,0xffefaefa
  41e62c:	or     DWORD PTR [eax+0x65],ebx
  41e62f:	dec    esi
  41e630:	outs   dx,DWORD PTR ds:[esi]
  41e631:	or     BYTE PTR [ecx-0x6a],ah
  41e634:	sti    
  41e635:	push   edi
  41e636:	mov    bl,0xa5
  41e638:	jno    0x41e5ec
  41e63a:	int3   
  41e63b:	mov    ch,0x9c
  41e63d:	enter  0xbd97,0x1d
  41e641:	mov    ebp,0x6bf27e8e
  41e646:	cld    
  41e647:	add    BYTE PTR [edx+esi*4-0x25c23d73],dh
  41e64e:	leave  
  41e64f:	mov    dl,BYTE PTR [edi]
  41e651:	or     BYTE PTR [edi+ebp*1-0xc],ch
  41e655:	mov    edx,0x646c8485
  41e65a:	xor    BYTE PTR [edi],0xfc
  41e65d:	push   cs
  41e65e:	and    cl,BYTE PTR [edx-0x52dc6c24]
  41e664:	adc    eax,0xc85c7bd5
  41e669:	cmp    esi,edi
  41e66b:	test   DWORD PTR [edx],esi
  41e66d:	aad    0x6
  41e66f:	int    0x34
  41e671:	pusha  
  41e672:	push   ebp
  41e673:	jbe    0x41e6b1
  41e675:	fcmovnu st,st(0)
  41e677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e678:	lds    esi,FWORD PTR [ebx]
  41e67a:	push   DWORD PTR [eax+0x41c6a8b8]
  41e680:	sbb    al,0xf2
  41e682:	popf   
  41e683:	mov    ebp,0xce21d3dc
  41e688:	and    al,0x71
  41e68a:	jns    0x41e692
  41e68c:	stc    
  41e68d:	or     BYTE PTR [ecx+0x267116c7],ch
  41e693:	sub    esi,ebp
  41e695:	or     al,0xa8
  41e697:	popf   
  41e698:	xor    bh,0xb
  41e69b:	fadd   QWORD PTR [edx]
  41e69d:	or     bh,BYTE PTR [ebx]
  41e69f:	scas   eax,DWORD PTR es:[edi]
  41e6a0:	int    0xa9
  41e6a2:	daa    
  41e6a3:	jmp    0x9fb0b580
  41e6a8:	mov    edx,0x8067bfdb
  41e6ad:	or     dl,BYTE PTR [ebx+0x7d]
  41e6b0:	adc    al,0xbb
  41e6b2:	push   0xffffff93
  41e6b4:	mov    edi,0x1fafa1f8
  41e6b9:	add    al,0xb
  41e6bb:	mov    ds:0x42d8ce61,al
  41e6c0:	pop    ds
  41e6c1:	mov    bh,0xab
  41e6c3:	jne    0x41e718
  41e6c5:	es std 
  41e6c7:	xor    BYTE PTR [edx],ah
  41e6c9:	mov    DWORD PTR [ebp+0x2e],0x9732d3e0
  41e6d0:	aas    
  41e6d1:	hlt    
  41e6d2:	inc    ecx
  41e6d3:	and    edx,esp
  41e6d5:	ss jno 0x41e704
  41e6d8:	sub    BYTE PTR [edx-0x77],bh
  41e6db:	mov    esp,0xc04fd9f
  41e6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e1:	lods   al,BYTE PTR ds:[esi]
  41e6e2:	je     0x41e708
  41e6e4:	dec    DWORD PTR [esi+0x0]
  41e6e7:	or     ebx,ebp
  41e6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6ea:	xchg   DWORD PTR [ebp+0x1411996b],ecx
  41e6f0:	xchg   ebx,eax
  41e6f1:	shr    DWORD PTR [ecx+0x21952627],0x62
  41e6f8:	push   edi
  41e6f9:	aas    
  41e6fa:	adc    eax,0x76ac6219
  41e6ff:	pop    es
  41e700:	retf   0x6af
  41e703:	daa    
  41e704:	pop    ss
  41e705:	push   es
  41e706:	add    eax,0x76e4e63a
  41e70b:	and    al,BYTE PTR ds:0x9af6
  41e710:	clc    
  41e711:	xchg   ebp,eax
  41e712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e713:	inc    edx
  41e714:	lea    esp,[esi-0x28e04bf0]
  41e71a:	pop    ebp
  41e71b:	gs mov ah,0xe
  41e71e:	popf   
  41e71f:	xchg   esi,eax
  41e720:	jl     0x41e6b2
  41e722:	pop    ds
  41e723:	mov    cl,BYTE PTR [edx-0xe582c3b]
  41e729:	sbb    DWORD PTR [edx-0x25],esi
  41e72c:	push   esp
  41e72d:	into   
  41e72e:	and    DWORD PTR [eax-0x66cd2e7e],0xc
  41e735:	pop    eax
  41e736:	in     eax,dx
  41e737:	dec    ebx
  41e738:	xchg   ebp,eax
  41e739:	test   al,0xe3
  41e73b:	lods   eax,DWORD PTR ds:[esi]
  41e73c:	cdq    
  41e73d:	retf   0x2fb4
  41e740:	gs hlt 
  41e742:	add    edx,ebp
  41e744:	xor    ah,cl
  41e746:	mov    ecx,0x98a9cd77
  41e74b:	mov    ch,0xe1
  41e74d:	pop    ebp
  41e74e:	inc    ecx
  41e74f:	dec    edx
  41e750:	add    al,0x87
  41e752:	scas   al,BYTE PTR es:[edi]
  41e753:	stos   DWORD PTR es:[edi],eax
  41e754:	popa   
  41e755:	enter  0xb0b4,0xe3
  41e759:	jbe    0x41e77b
  41e75b:	xchg   esi,eax
  41e75c:	shr    DWORD PTR [edi],0xda
  41e75f:	loope  0x41e72a
  41e761:	and    BYTE PTR [edx],bh
  41e763:	shl    DWORD PTR [ebp*1-0x6c44dcfb],0x42
  41e76b:	jmp    0x41e70c
  41e76d:	leave  
  41e76e:	jo     0x41e7e4
  41e770:	adc    al,ch
  41e772:	inc    eax
  41e773:	mov    esi,0x712cbaaa
  41e778:	mov    dh,0x30
  41e77a:	push   ss
  41e77b:	mov    esi,0x68e192ea
  41e780:	cmp    eax,DWORD PTR [edi]
  41e782:	out    0xa7,eax
  41e784:	out    dx,al
  41e785:	push   cs
  41e786:	inc    edi
  41e787:	popa   
  41e788:	fcmovbe st,st(2)
  41e78b:	xchg   edi,eax
  41e78c:	mov    cl,0xaf
  41e78e:	push   ss
  41e78f:	mov    bh,0xac
  41e791:	pop    ebp
  41e792:	xchg   ecx,eax
  41e793:	sahf   
  41e794:	adc    edi,esi
  41e796:	and    DWORD PTR [edi+0x24],esi
  41e799:	lea    edi,[esp+edx*4+0x61]
  41e79d:	dec    ecx
  41e79e:	jmp    0x41e766
  41e7a0:	(bad)  
  41e7a1:	and    eax,0x4263615e
  41e7a6:	fsub   QWORD PTR [esi+0x5a75fdbf]
  41e7ac:	inc    eax
  41e7ad:	and    bl,BYTE PTR [ecx+0x4b]
  41e7b0:	stos   DWORD PTR es:[edi],eax
  41e7b1:	adc    BYTE PTR [esi],bh
  41e7b3:	mov    cl,0x24
  41e7b5:	or     DWORD PTR [esi+eax*2],edx
  41e7b8:	mov    eax,ds:0xdb1d6cbf
  41e7bd:	shr    DWORD PTR [eax],1
  41e7bf:	(bad)  
  41e7c0:	(bad)  
  41e7c2:	int3   
  41e7c3:	mov    esp,0xac192526
  41e7c8:	das    
  41e7c9:	scas   al,BYTE PTR es:[edi]
  41e7ca:	jg     0x41e80f
  41e7cc:	fnstsw WORD PTR [edx]
  41e7ce:	mov    esp,0xb8e78bd3
  41e7d3:	dec    ebx
  41e7d4:	jmp    0x41e7f1
  41e7d6:	ret    0x2db0
  41e7d9:	neg    BYTE PTR [edx]
  41e7db:	arpl   WORD PTR [edi+edx*2+0x63],sp
  41e7df:	and    dh,bh
  41e7e1:	dec    cx
  41e7e3:	sub    al,0xe
  41e7e5:	jno    0x41e822
  41e7e7:	(bad)  
  41e7e8:	sbb    cl,cl
  41e7ea:	add    eax,edx
  41e7ec:	fsub   QWORD PTR [ebp-0x31b6ab2]
  41e7f2:	xor    DWORD PTR [esi+ebx*2-0x633f3af7],ecx
  41e7f9:	sub    al,0x34
  41e7fb:	pop    ebx
  41e7fc:	iret   
  41e7fd:	add    al,0x43
  41e7ff:	je     0x41e78e
  41e801:	mov    eax,es:0x3bc6fbc8
  41e807:	rol    bl,1
  41e809:	mov    al,0x4a
  41e80b:	mov    eax,ds:0x618d8dfa
  41e810:	cli    
  41e811:	fdivr  QWORD PTR [ecx+ebx*8]
  41e814:	dec    edi
  41e815:	mov    ds:0x586ec645,al
  41e81a:	loope  0x41e864
  41e81c:	pop    es
  41e81d:	loop   0x41e84f
  41e81f:	inc    ecx
  41e820:	scas   eax,DWORD PTR es:[edi]
  41e821:	sar    BYTE PTR [edi-0x74],cl
  41e824:	or     al,0x9f
  41e826:	sub    esp,ebp
  41e828:	jge    0x41e864
  41e82a:	aas    
  41e82b:	aaa    
  41e82c:	cmc    
  41e82d:	or     DWORD PTR [esi-0x4d],edx
  41e830:	cmp    eax,0x5c121fca
  41e835:	or     BYTE PTR [esi],dl
  41e837:	mov    ah,0x4
  41e839:	repnz stc 
  41e83b:	mov    bh,0x76
  41e83d:	jmp    DWORD PTR [edi+0x52727c0f]
  41e843:	and    al,BYTE PTR [ecx+edx*4]
  41e846:	fdivr  QWORD PTR [eax]
  41e848:	fnstenv [ecx-0x74ddb22b]
  41e84e:	outs   dx,BYTE PTR ds:[esi]
  41e84f:	stos   DWORD PTR es:[edi],eax
  41e850:	hlt    
  41e851:	push   ebp
  41e852:	and    al,BYTE PTR [ebp+0x1b]
  41e855:	into   
  41e856:	sbb    DWORD PTR ds:0xba215056,esi
  41e85c:	mov    dl,0xcd
  41e85e:	mov    ch,0x2b
  41e860:	jno    0x41e856
  41e862:	mov    cl,0x81
  41e864:	or     DWORD PTR [edi+0x67],edi
  41e867:	fwait
  41e868:	out    dx,al
  41e869:	dec    ecx
  41e86a:	mov    esi,0x7d2f7d87
  41e86f:	cmp    BYTE PTR [ebp+0x177f06ad],bh
  41e875:	jne    0x41e879
  41e877:	push   ds
  41e878:	mov    esp,esp
  41e87a:	sbb    BYTE PTR [ebx+0x2c],bh
  41e87d:	rcr    DWORD PTR [ebx-0x8653d12],cl
  41e883:	bound  ebp,QWORD PTR [ebx+eiz*2]
  41e886:	jp     0x41e827
  41e888:	lock sbb BYTE PTR [ebp-0x5cfd7e09],bh
  41e88f:	mov    BYTE PTR [ecx],bh
  41e891:	sbb    esi,edi
  41e893:	in     eax,0x40
  41e895:	inc    esi
  41e896:	add    ebp,ebx
  41e898:	add    BYTE PTR [edi+esi*1+0x479ec191],ah
  41e89f:	aas    
  41e8a0:	cwde   
  41e8a1:	repnz cmp cl,BYTE PTR [esi+0x72]
  41e8a5:	jbe    0x41e8c8
  41e8a7:	aad    0x36
  41e8a9:	mov    esi,0x1f2aeca0
  41e8ae:	int    0x5
  41e8b0:	and    DWORD PTR [eax+0x41a085fc],ecx
  41e8b6:	xor    eax,0x9be5b03d
  41e8bb:	and    ecx,esp
  41e8bd:	xor    DWORD PTR [edx+0x7f],esp
  41e8c0:	mov    dl,0xc4
  41e8c2:	inc    BYTE PTR [edi]
  41e8c4:	sub    DWORD PTR [eax],edi
  41e8c6:	repnz sub al,0x1d
  41e8c9:	fdiv   QWORD PTR [ebp+0x29]
  41e8cc:	fs inc esi
  41e8ce:	push   ebx
  41e8cf:	cwde   
  41e8d0:	or     DWORD PTR [ebx],esp
  41e8d2:	mov    ah,0xe3
  41e8d4:	nop
  41e8d5:	lahf   
  41e8d6:	push   es
  41e8d7:	gs mov ebx,0x24c3c07
  41e8dd:	pop    edx
  41e8de:	(bad)  
  41e8df:	aam    0xcc
  41e8e1:	jno    0x41e916
  41e8e3:	mov    ah,0x7b
  41e8e5:	mov    WORD PTR [eax+0x6d],ss
  41e8e8:	inc    esi
  41e8e9:	xor    BYTE PTR cs:[edx+0x56],cl
  41e8ed:	mov    al,0xf7
  41e8ef:	pop    ebp
  41e8f0:	and    al,0xdf
  41e8f2:	or     ch,BYTE PTR [esi-0x2c]
  41e8f5:	add    DWORD PTR [edi-0x4e903a78],ecx
  41e8fb:	push   edx
  41e8fc:	push   ss
  41e8fd:	scas   al,BYTE PTR es:[edi]
  41e8fe:	mov    BYTE PTR [ebp+esi*2+0x18210e14],bl
  41e905:	ins    DWORD PTR es:[edi],dx
  41e906:	retf   
  41e907:	lods   eax,DWORD PTR ds:[esi]
  41e908:	sub    al,0x7f
  41e90a:	js     0x41e949
  41e90c:	pusha  
  41e90d:	jnp    0x41e90e
  41e90f:	icebp  
  41e910:	push   esi
  41e911:	xor    DWORD PTR [eax+eax*2],0xffffff97
  41e915:	or     DWORD PTR [ebp-0x5215850],edi
  41e91b:	call   0x1485:0xb7669a48
  41e922:	cmp    eax,0x429a38a1
  41e927:	jl     0x41e8e0
  41e929:	je     0x41e951
  41e92b:	call   0x26b6:0x62d8f794
  41e932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e933:	add    DWORD PTR [ebp-0xdbeccfd],0x10
  41e93a:	into   
  41e93b:	das    
  41e93c:	scas   al,BYTE PTR es:[edi]
  41e93d:	jmp    0x41e91b
  41e93f:	cmp    ah,BYTE PTR [edi+0x37]
  41e942:	imul   eax,DWORD PTR ds:0x5d379f14,0x34db6458
  41e94c:	xchg   al,cl
  41e94e:	mov    ah,0x20
  41e950:	lahf   
  41e951:	out    0x7f,eax
  41e953:	or     DWORD PTR [edi+0x65],ecx
  41e956:	in     eax,dx
  41e957:	enter  0x70d6,0x4d
  41e95b:	xor    BYTE PTR [edi+ebx*1+0x20cfd13e],al
  41e962:	add    al,0x10
  41e964:	cmp    DWORD PTR [ecx+0x44],edx
  41e967:	retf   
  41e968:	scas   eax,DWORD PTR es:[edi]
  41e969:	repz xchg ebx,eax
  41e96b:	int    0x7a
  41e96d:	or     DWORD PTR [ebx],ebx
  41e96f:	jae    0x41e9ee
  41e971:	sbb    BYTE PTR [ebp-0x5],dl
  41e974:	lods   al,BYTE PTR ds:[esi]
  41e975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e976:	and    eax,0x944af4e5
  41e97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e97c:	jl     0x41e9c0
  41e97e:	cmp    eax,0xee9d18b4
  41e983:	sub    DWORD PTR [eax-0x1f],ebp
  41e986:	jne    0x41e925
  41e988:	push   esi
  41e989:	adc    esi,DWORD PTR [ebx]
  41e98b:	sbb    bh,BYTE PTR [ecx+0x59070704]
  41e991:	sbb    eax,esp
  41e993:	mov    ecx,0x7216df58
  41e998:	mov    ecx,0x11d6b857
  41e99d:	int    0x1d
  41e99f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9a0:	add    BYTE PTR [ecx],ah
  41e9a2:	int    0xbe
  41e9a4:	push   ss
  41e9a5:	fimul  WORD PTR [esi]
  41e9a7:	and    DWORD PTR [edx+0x6a6a9f4a],edx
  41e9ad:	jmp    0xd461:0x7c6248f4
  41e9b4:	add    eax,0x7713eef6
  41e9b9:	xor    DWORD PTR [ecx],ecx
  41e9bb:	fucomi st,st(6)
  41e9bd:	(bad)  
  41e9be:	cli    
  41e9bf:	and    al,0x6a
  41e9c1:	pop    esi
  41e9c2:	sbb    DWORD PTR cs:[ebx+0xe],edx
  41e9c6:	fiadd  DWORD PTR [ecx-0x4919489c]
  41e9cc:	and    ebx,DWORD PTR [esi+ebp*2-0x1bb2c69b]
  41e9d3:	dec    ecx
  41e9d4:	fsub   DWORD PTR [eax+0x63]
  41e9d7:	push   esi
  41e9d8:	lahf   
  41e9d9:	add    DWORD PTR [ebx-0xc],edx
  41e9dc:	pop    esp
  41e9dd:	pop    esp
  41e9de:	dec    esi
  41e9df:	lods   eax,DWORD PTR ds:[esi]
  41e9e0:	mov    eax,0xbaf1938f
  41e9e5:	sbb    eax,0xf85f2904
  41e9ea:	sahf   
  41e9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ec:	xchg   ebx,eax
  41e9ed:	adc    DWORD PTR [esi+0x6c],0x46fe170b
  41e9f4:	or     eax,0x45983410
  41e9f9:	adc    eax,0x9a35545a
  41e9fe:	jmp    0x41ea51
  41ea00:	(bad)  
  41ea01:	jo     0x41e9da
  41ea03:	fidivr WORD PTR cs:[ecx+0x126dceb2]
  41ea0a:	jge    0x41e98e
  41ea0c:	xor    ch,BYTE PTR [edx]
  41ea0e:	xchg   esp,eax
  41ea0f:	in     eax,0x7e
  41ea11:	dec    ecx
  41ea12:	xor    BYTE PTR ds:[ebp+0x60],bl
  41ea16:	cdq    
  41ea17:	daa    
  41ea18:	sub    eax,DWORD PTR [ebx+0x2f]
  41ea1b:	jmp    DWORD PTR [edi-0x3669fe60]
  41ea21:	cli    
  41ea22:	pushf  
  41ea23:	xchg   ecx,eax
  41ea24:	into   
  41ea25:	xchg   BYTE PTR [esi+edx*1-0x18],dh
  41ea29:	xor    BYTE PTR [esi+0x8],bh
  41ea2c:	add    bh,BYTE PTR [ebx]
  41ea2e:	pop    ecx
  41ea2f:	popa   
  41ea30:	cmp    ah,BYTE PTR [ecx-0x763805fb]
  41ea36:	pop    ds
  41ea37:	mov    bl,BYTE PTR [ebp-0x5fca1f47]
  41ea3d:	ins    DWORD PTR es:[edi],dx
  41ea3e:	mov    edx,0x10477d00
  41ea43:	pop    ecx
  41ea44:	fidiv  WORD PTR [ebp+0x65]
  41ea47:	pop    edx
  41ea48:	aam    0x9f
  41ea4a:	pop    ds
  41ea4b:	jns    0x41eab7
  41ea4d:	into   
  41ea4e:	mov    esp,0xed71f114
  41ea53:	js     0x41ea3d
  41ea55:	pop    edx
  41ea56:	sbb    eax,0x5426c3fa
  41ea5b:	lods   eax,DWORD PTR ds:[esi]
  41ea5c:	not    BYTE PTR [ebx-0x5c14f40c]
  41ea62:	cmp    ecx,DWORD PTR [ecx+ebx*8+0x6f07d4f3]
  41ea69:	adc    DWORD PTR [ebx-0x677ad4cc],ebp
  41ea6f:	cld    
  41ea70:	push   eax
  41ea71:	cmp    DWORD PTR [eax-0x26ff328a],ebp
  41ea77:	mov    ebp,0x467cb083
  41ea7c:	test   ah,bh
  41ea7e:	mov    ebx,0x73af6fe
  41ea83:	cdq    
  41ea84:	add    esp,DWORD PTR [eax-0x67aea6ab]
  41ea8a:	sub    DWORD PTR [edi],edx
  41ea8c:	fnstcw WORD PTR [ecx+esi*4+0x43]
  41ea90:	daa    
  41ea91:	shl    BYTE PTR [ecx-0x34],0x7b
  41ea95:	sahf   
  41ea96:	(bad)  
  41ea97:	push   ecx
  41ea98:	sbb    edi,DWORD PTR fs:[eax+0x22]
  41ea9c:	add    al,0xfb
  41ea9e:	fadd   QWORD PTR [edx-0xf7c9e38]
  41eaa4:	dec    BYTE PTR [ebp+0x722151e2]
  41eaaa:	leave  
  41eaab:	retf   0x70bd
  41eaae:	mov    ebp,0x8bfc93b1
  41eab3:	xchg   esi,eax
  41eab4:	je     0x41eb06
  41eab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eab7:	xor    eax,0x3691af1e
  41eabc:	mov    ebp,0x21c6dc44
  41eac1:	lock shr BYTE PTR [edx+eiz*4],0xbf
  41eac6:	mov    WORD PTR [eax-0x6f],?
  41eac9:	in     al,0x7f
  41eacb:	push   0x8f04376
  41ead0:	fsub   DWORD PTR [ebx]
  41ead2:	cs aas 
  41ead4:	outs   dx,BYTE PTR ds:[esi]
  41ead5:	cli    
  41ead6:	xchg   esp,eax
  41ead7:	or     ah,BYTE PTR [edx+0x5f]
  41eada:	dec    eax
  41eadb:	pusha  
  41eadc:	cwde   
  41eadd:	call   0xb1a1:0x7a044a8b
  41eae4:	rcl    BYTE PTR [ebx-0x351ce745],cl
  41eaea:	adc    esp,DWORD PTR [esi]
  41eaec:	in     eax,0xbe
  41eaee:	test   DWORD PTR [ecx+0x2a],ebx
  41eaf1:	sbb    eax,DWORD PTR [eax+esi*1]
  41eaf4:	xor    eax,0x98cbf39d
  41eaf9:	add    al,0x4a
  41eafb:	mov    edi,0x5abd5578
  41eb00:	mov    ah,0x5c
  41eb02:	jge    0x41eb37
  41eb04:	iret   
  41eb05:	mov    dh,0xb9
  41eb07:	and    ecx,DWORD PTR ds:0x79a99ec2
  41eb0d:	inc    ecx
  41eb0e:	sbb    eax,0x28d01058
  41eb13:	sbb    DWORD PTR [edx+0x70],0x4bc002a8
  41eb1a:	dec    ax
  41eb1c:	dec    esi
  41eb1d:	aaa    
  41eb1e:	mov    DWORD PTR [ebx-0x368a25ac],ebp
  41eb24:	cmp    DWORD PTR [esi-0x44],eax
  41eb27:	ins    DWORD PTR es:[edi],dx
  41eb28:	cs xchg esi,eax
  41eb2a:	int    0x2b
  41eb2c:	push   0xffffff95
  41eb2e:	jns    0x41eab8
  41eb30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb31:	addr16 xchg ebx,eax
  41eb33:	inc    edi
  41eb34:	mov    cl,0xca
  41eb36:	nop
  41eb37:	mov    al,ds:0xce2e8fee
  41eb3c:	test   eax,0x9ea7165c
  41eb41:	test   al,0x11
  41eb43:	outs   dx,DWORD PTR ds:[esi]
  41eb44:	lea    edx,[eax]
  41eb46:	pop    esp
  41eb47:	xor    dl,ch
  41eb49:	jb     0x41eb6d
  41eb4b:	dec    ebx
  41eb4c:	xchg   esi,eax
  41eb4d:	pop    ss
  41eb4e:	and    BYTE PTR [ebp-0x10d4d150],dl
  41eb54:	lock data16 adc BYTE PTR [edi-0x68],al
  41eb59:	in     eax,0x84
  41eb5b:	shl    BYTE PTR [edx-0x7c],cl
  41eb5e:	jbe    0x41eb5f
  41eb60:	inc    ecx
  41eb61:	retf   
  41eb62:	xor    bh,ch
  41eb64:	popa   
  41eb65:	hlt    
  41eb66:	fiadd  DWORD PTR [edi+0x1a]
  41eb69:	(bad)  [eax]
  41eb6b:	mov    al,ds:0x994be0be
  41eb70:	lods   al,BYTE PTR ds:[esi]
  41eb71:	add    al,0x9b
  41eb73:	(bad)  
  41eb74:	mov    bh,0xe7
  41eb76:	sbb    al,0x31
  41eb78:	test   BYTE PTR [eax+eiz*1+0x44],al
  41eb7c:	int3   
  41eb7d:	xchg   ebp,eax
  41eb7e:	adc    dl,bh
  41eb80:	(bad)
  41eb83:	sahf   
  41eb84:	popf   
  41eb85:	dec    ebp
  41eb86:	imul   esi,DWORD PTR [esi+0x3a],0x96269097
  41eb8d:	and    al,0x48
  41eb8f:	sub    DWORD PTR [esi+0x2f],0x70
  41eb93:	std    
  41eb94:	add    edi,ebx
  41eb96:	and    al,0x21
  41eb98:	je     0x41eb79
  41eb9a:	add    al,0x67
  41eb9c:	pop    ebp
  41eb9d:	adc    DWORD PTR [edi+0x2286382],esp
  41eba3:	add    eax,0xd899abab
  41eba8:	dec    eax
  41eba9:	idiv   BYTE PTR [edx+0xd]
  41ebac:	les    edi,FWORD PTR [esi+0x1f]
  41ebaf:	add    ch,BYTE PTR [ebx-0x5e24a2bf]
  41ebb5:	stos   BYTE PTR es:[edi],al
  41ebb6:	and    ecx,DWORD PTR [esi+0x2a]
  41ebb9:	cmp    DWORD PTR [edi-0x74],ebx
  41ebbc:	xchg   edi,eax
  41ebbd:	fwait
  41ebbe:	aaa    
  41ebbf:	pushf  
  41ebc0:	lahf   
  41ebc1:	js     0x41ec1b
  41ebc3:	dec    eax
  41ebc4:	popa   
  41ebc5:	(bad)  
  41ebc6:	fwait
  41ebc7:	sub    al,0xd9
  41ebc9:	(bad)  
  41ebca:	imul   edi,DWORD PTR [eax],0xffffffdb
  41ebcd:	ins    BYTE PTR es:[edi],dx
  41ebce:	rol    edi,0x9e
  41ebd1:	cwde   
  41ebd2:	inc    ebx
  41ebd3:	xor    cl,BYTE PTR [esp+edx*2]
  41ebd6:	ds in  eax,0xb2
  41ebd9:	gs fwait
  41ebdb:	sbb    al,0x82
  41ebdd:	push   edx
  41ebde:	in     eax,0x9c
  41ebe0:	adc    BYTE PTR [ecx],0xd8
  41ebe3:	(bad)  
  41ebe5:	loope  0x41ebb9
  41ebe7:	(bad)  
  41ebe8:	shl    BYTE PTR [edi],cl
  41ebea:	cmp    eax,0xd908ea3a
  41ebef:	call   0xc6f:0x570338b2
  41ebf6:	fcmovbe st,st(1)
  41ebf8:	enter  0xb70d,0xcb
  41ebfc:	mov    ecx,0x61ddf201
  41ec01:	sub    dl,BYTE PTR [eax]
  41ec03:	adc    cl,BYTE PTR [edi+ebx*8]
  41ec06:	pop    es
  41ec07:	dec    esi
  41ec08:	or     BYTE PTR [esi+0x7c372a67],dh
  41ec0e:	call   0x9200:0x14d17e91
  41ec15:	mov    al,ds:0x18e8ede4
  41ec1a:	inc    esi
  41ec1b:	pop    ebp
  41ec1c:	int    0xb0
  41ec1e:	push   es
  41ec1f:	imul   esp,DWORD PTR [edx-0x60],0x168d1f5
  41ec26:	rcl    DWORD PTR [eax],1
  41ec28:	int    0x58
  41ec2a:	pop    ebx
  41ec2b:	push   ebp
  41ec2c:	mov    ds:0xbb0d771b,al
  41ec31:	mov    edi,0x3f98d250
  41ec36:	fcom   DWORD PTR [eax-0x24]
  41ec39:	jp     0x41ec0d
  41ec3b:	data16 or BYTE PTR ds:0x19d44d9c,cl
  41ec42:	outs   dx,BYTE PTR ds:[esi]
  41ec43:	add    dl,dl
  41ec45:	lahf   
  41ec46:	fwait
  41ec47:	icebp  
  41ec48:	and    BYTE PTR [edx],0x5a
  41ec4b:	jg     0x41ecb6
  41ec4d:	pop    ds
  41ec4e:	push   ecx
  41ec4f:	scas   al,BYTE PTR es:[edi]
  41ec50:	lea    edi,[ecx-0x45cb4d07]
  41ec56:	fcmovne st,st(5)
  41ec58:	fwait
  41ec59:	ins    BYTE PTR es:[edi],dx
  41ec5a:	add    ebx,DWORD PTR [eax]
  41ec5c:	sub    bh,BYTE PTR [ecx+0x59]
  41ec5f:	xchg   edx,eax
  41ec60:	inc    ebp
  41ec61:	jmp    0x4a3b:0x8320029f
  41ec68:	cdq    
  41ec69:	les    eax,FWORD PTR [esi]
  41ec6b:	cmp    eax,0xe53f720
  41ec70:	cmp    eax,0x1f43303b
  41ec75:	clc    
  41ec76:	mov    ecx,0xea882927
  41ec7b:	cmp    DWORD PTR [ebx+eax*4+0x18],ecx
  41ec7f:	mov    ebx,0x5c93730b
  41ec84:	inc    ebx
  41ec85:	cwde   
  41ec86:	arpl   bx,bp
  41ec88:	test   eax,0xdcf01345
  41ec8d:	test   BYTE PTR [ebp+0x6d],bh
  41ec90:	and    bl,BYTE PTR [edx-0x7aa3e7b4]
  41ec96:	or     al,0x6a
  41ec98:	mov    ecx,0xc719cf0f
  41ec9d:	push   esp
  41ec9e:	arpl   WORD PTR ds:0x1ab8,bp
  41eca3:	iret   
  41eca4:	mov    ecx,0xe979c7a1
  41eca9:	push   ebx
  41ecaa:	xchg   ebx,eax
  41ecab:	not    ebx
  41ecad:	add    DWORD PTR [esi+0x59e07888],ecx
  41ecb3:	or     bl,BYTE PTR [ecx+0x16]
  41ecb6:	das    
  41ecb7:	shl    DWORD PTR [edx],cl
  41ecb9:	int3   
  41ecba:	cmp    ecx,edi
  41ecbc:	dec    edi
  41ecbd:	mov    bh,0xf7
  41ecbf:	jg     0x41ecaa
  41ecc1:	das    
  41ecc2:	rol    ah,1
  41ecc4:	mov    ecx,0xf9028a59
  41ecc9:	mov    DWORD PTR [eax-0x6b9207c6],ecx
  41eccf:	adc    eax,0x8a13e0a
  41ecd4:	sbb    eax,DWORD PTR [esp+ecx*1+0x71]
  41ecd8:	jns    0x41ece2
  41ecda:	jo     0x41ecc1
  41ecdc:	jae    0x41ecd1
  41ecde:	adc    BYTE PTR [edx],0xcd
  41ece1:	(bad)  
  41ece2:	(bad)  [edi]
  41ece4:	or     BYTE PTR [edx+0x4a4de5ce],al
  41ecea:	call   0x66df3b30
  41ecef:	sti    
  41ecf0:	push   ebp
  41ecf1:	inc    esp
  41ecf2:	nop
  41ecf3:	fucomi st,st(7)
  41ecf5:	dec    edx
  41ecf6:	push   0x6c
  41ecf8:	fsincos 
  41ecfa:	cdq    
  41ecfb:	push   ss
  41ecfc:	push   cs
  41ecfd:	test   al,0xdf
  41ecff:	push   0xffffffb6
  41ed01:	mov    ds,esi
  41ed03:	cwde   
  41ed04:	dec    eax
  41ed05:	je     0x41ed7e
  41ed07:	inc    esi
  41ed08:	mov    eax,0x65a81f3a
  41ed0d:	call   edi
  41ed0f:	cld    
  41ed10:	test   BYTE PTR [edx-0x5d],0xe
  41ed14:	mov    dh,0x7b
  41ed16:	mov    esi,0xd4c9691
  41ed1b:	iret   
  41ed1c:	push   ebp
  41ed1d:	in     al,0xa6
  41ed1f:	sub    dl,BYTE PTR [edi-0x4daece8a]
  41ed25:	dec    ebx
  41ed26:	adc    ah,BYTE PTR [edi-0x6bfbaf71]
  41ed2c:	sub    BYTE PTR [ebx],cl
  41ed2e:	jbe    0x41ece1
  41ed30:	dec    ebp
  41ed31:	dec    esi
  41ed32:	mov    cl,0xb0
  41ed34:	mov    dh,0x26
  41ed36:	(bad)  
  41ed37:	ins    BYTE PTR es:[edi],dx
  41ed38:	cmp    bh,ah
  41ed3a:	lahf   
  41ed3b:	sahf   
  41ed3c:	les    esi,FWORD PTR [esp+ecx*1-0x22]
  41ed40:	mov    dl,0xf6
  41ed42:	xchg   ebx,eax
  41ed43:	test   al,0x59
  41ed45:	push   esp
  41ed46:	pop    ebx
  41ed47:	call   0x1fd6:0x6a6a0a6a
  41ed4e:	and    eax,DWORD PTR [edx]
  41ed50:	adc    bh,BYTE PTR [edx]
  41ed52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed53:	push   ss
  41ed54:	jecxz  0x41ed15
  41ed56:	xchg   edx,eax
  41ed57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed58:	gs cmp eax,0x5c49aa2d
  41ed5e:	jno    0x41ed3d
  41ed60:	bound  ebx,QWORD PTR [esi+eiz*1]
  41ed63:	int3   
  41ed64:	pop    eax
  41ed65:	cmc    
  41ed66:	mov    esi,DWORD PTR [edi-0x6490111e]
  41ed6c:	out    0x83,al
  41ed6e:	mov    es,WORD PTR [esi]
  41ed70:	xor    al,0xcb
  41ed72:	lods   al,BYTE PTR ds:[esi]
  41ed73:	sub    al,0x87
  41ed75:	and    al,0x6c
  41ed77:	ja     0x41edb8
  41ed79:	daa    
  41ed7a:	outs   dx,DWORD PTR ds:[esi]
  41ed7b:	and    ebp,DWORD PTR ds:0xece2a75
  41ed81:	adc    al,0x9f
  41ed83:	daa    
  41ed84:	cmp    dh,bl
  41ed86:	stos   DWORD PTR es:[edi],eax
  41ed87:	jo     0x41ed1d
  41ed89:	int    0xf1
  41ed8b:	imul   ebp,DWORD PTR [ebx+ebp*1-0x17],0x72
  41ed90:	inc    ebx
  41ed91:	dec    eax
  41ed92:	jmp    0xacab:0xeaa64772
  41ed99:	(bad)  
  41ed9a:	cld    
  41ed9b:	ret    0x3b
  41ed9e:	jb     0x41edb0
  41eda0:	mov    eax,0x48e8e009
  41eda5:	cdq    
  41eda6:	xlat   BYTE PTR ds:[ebx]
  41eda7:	daa    
  41eda8:	fsubr  DWORD PTR [ebp-0x46e9c7ce]
  41edae:	xchg   DWORD PTR [edx+eiz*1-0x5d],ebp
  41edb2:	shl    BYTE PTR [eax+edi*1+0x3],1
  41edb6:	adc    DWORD PTR [edi-0x3be89f03],esi
  41edbc:	jmp    0x41ee13
  41edbe:	pop    ds
  41edbf:	shl    BYTE PTR [ebp+0x2d],cl
  41edc2:	loope  0x41edc0
  41edc4:	inc    esi
  41edc5:	mov    ebp,0xf4fc5f68
  41edca:	(bad)  
  41edcb:	das    
  41edcc:	mov    esp,0xb80275aa
  41edd1:	cmp    BYTE PTR [ebx+eax*8-0x61e95e7c],ch
  41edd8:	pop    ebx
  41edd9:	in     eax,0xe4
  41eddb:	mov    eax,0x9f95ee3a
  41ede0:	test   edi,ecx
  41ede2:	icebp  
  41ede3:	jnp    0x41edd6
  41ede5:	(bad)  
  41ede6:	add    DWORD PTR [eax],0x4ce2af74
  41edec:	int3   
  41eded:	lods   eax,DWORD PTR ds:[esi]
  41edee:	pop    ebp
  41edef:	leave  
  41edf0:	sub    al,0xd9
  41edf2:	mov    al,0x60
  41edf4:	and    eax,0xa7f36db6
  41edf9:	lods   eax,DWORD PTR ds:[si]
  41edfb:	jb     0x41ee61
  41edfd:	outs   dx,BYTE PTR ds:[esi]
  41edfe:	int3   
  41edff:	stc    
  41ee00:	and    DWORD PTR [ecx],ebp
  41ee02:	sbb    al,0x78
  41ee04:	mov    eax,0xdc473a30
  41ee09:	stos   BYTE PTR es:[edi],al
  41ee0a:	fisubr DWORD PTR [ecx-0x7801041e]
  41ee10:	sahf   
  41ee11:	pop    ds
  41ee12:	js     0x41ee30
  41ee14:	xor    esi,DWORD PTR [edi]
  41ee16:	and    eax,0xe6cb1a85
  41ee1b:	adc    BYTE PTR [eax+0x6cb7e2f7],bl
  41ee21:	pop    esi
  41ee22:	pop    eax
  41ee23:	lea    esi,ds:0x75c99374
  41ee29:	fldenv [esi+0x9]
  41ee2c:	aas    
  41ee2d:	push   ebx
  41ee2e:	ins    BYTE PTR es:[edi],dx
  41ee2f:	jb     0x41ee23
  41ee31:	ss mov esi,0x3f53f8a6
  41ee38:	or     DWORD PTR [edi],0x3
  41ee3b:	xchg   ecx,eax
  41ee3c:	popf   
  41ee3d:	inc    DWORD PTR [edx-0x641c3880]
  41ee43:	loope  0x41ee10
  41ee45:	not    DWORD PTR [ebx]
  41ee47:	mov    esi,ebx
  41ee49:	fsub   QWORD PTR [esp+ebx*8-0x1a]
  41ee4d:	outs   dx,BYTE PTR ds:[esi]
  41ee4e:	ins    DWORD PTR es:[edi],dx
  41ee4f:	lods   al,BYTE PTR ds:[esi]
  41ee50:	iret   
  41ee51:	int3   
  41ee52:	mov    ch,0xca
  41ee54:	xchg   edx,eax
  41ee55:	ins    DWORD PTR es:[edi],dx
  41ee56:	adc    al,0xa9
  41ee58:	jmp    0xbc6e3994
  41ee5d:	in     al,dx
  41ee5e:	aad    0x48
  41ee60:	adc    esp,esp
  41ee62:	out    dx,eax
  41ee63:	fbld   TBYTE PTR ds:0x923b6f38
  41ee69:	(bad)  
  41ee6a:	(bad)  
  41ee6c:	push   edx
  41ee6d:	mov    edi,0x48f06e0b
  41ee72:	push   ss
  41ee73:	jmp    0x628ed340
  41ee78:	faddp  st(0),st
  41ee7a:	fild   WORD PTR [edx+0x68]
  41ee7d:	jnp    0x41eebf
  41ee7f:	jg     0x41ee46
  41ee81:	xor    al,0xb8
  41ee83:	sub    al,0xdf
  41ee85:	jge    0x41ee25
  41ee87:	push   ecx
  41ee88:	xchg   esp,eax
  41ee89:	xchg   edi,eax
  41ee8a:	popaw  
  41ee8c:	adc    eax,0x6579239d
  41ee91:	and    eax,DWORD PTR [edi+0x20b2c5d0]
  41ee97:	lods   eax,DWORD PTR ds:[esi]
  41ee98:	xor    eax,0x46494a07
  41ee9d:	(bad)  
  41ee9e:	sbb    eax,0xb1af7b26
  41eea3:	mul    DWORD PTR [ebp-0x5a]
  41eea6:	xor    ah,BYTE PTR [ebx]
  41eea8:	fwait
  41eea9:	hlt    
  41eeaa:	bound  edx,QWORD PTR [ecx-0x11]
  41eead:	push   0x58
  41eeaf:	jl     0x41ee43
  41eeb1:	es or  ebp,ebp
  41eeb4:	jno    0x41ef11
  41eeb6:	(bad)  
  41eeb7:	cmp    al,0x61
  41eeb9:	nop
  41eeba:	jge    0x41ef32
  41eebc:	cmp    eax,0x54094842
  41eec1:	jmp    0xd316:0xb77d8758
  41eec8:	xchg   edi,eax
  41eec9:	mov    esp,0x3a360abe
  41eece:	jge    0x41eeae
  41eed0:	out    dx,eax
  41eed1:	in     eax,0xdb
  41eed3:	add    ebp,0x30
  41eed6:	hlt    
  41eed7:	in     eax,dx
  41eed8:	adc    DWORD PTR [ebp+0x18cf2fbb],esp
  41eede:	dec    eax
  41eedf:	sahf   
  41eee0:	scas   al,BYTE PTR es:[edi]
  41eee1:	call   0x1f0b24
  41eee6:	mov    ecx,0xa74e66aa
  41eeeb:	sbb    al,0x3a
  41eeed:	pop    edi
  41eeee:	shl    BYTE PTR [eax-0x20d57427],0x98
  41eef5:	stc    
  41eef6:	int    0x49
  41eef8:	pop    esp
  41eef9:	mov    ds:0x80afb155,al
  41eefe:	rol    DWORD PTR [edx],cl
  41ef00:	add    al,BYTE PTR [edi+0x4d]
  41ef03:	iret   
  41ef04:	and    DWORD PTR [ecx+edx*4-0x6652f8e7],edx
  41ef0b:	pop    esi
  41ef0c:	push   ebp
  41ef0d:	xor    ah,BYTE PTR [edi-0x753f43a0]
  41ef13:	and    ecx,edi
  41ef15:	into   
  41ef16:	and    DWORD PTR [edx-0x1c34aed7],edx
  41ef1c:	(bad)  
  41ef1d:	and    al,BYTE PTR [esi-0x24]
  41ef20:	mov    ebp,edx
  41ef22:	fnstcw WORD PTR [ebx+0x7d0506b7]
  41ef28:	push   ss
  41ef29:	popa   
  41ef2a:	mov    WORD PTR [ebx+0x2851808f],gs
  41ef30:	call   0xa49685c3
  41ef35:	les    ebx,FWORD PTR [esi+0x63]
  41ef38:	xchg   dl,al
  41ef3a:	stos   DWORD PTR es:[edi],eax
  41ef3b:	std    
  41ef3c:	and    al,0x87
  41ef3e:	xor    DWORD PTR [ebx-0x7b40f35a],0xcb04e4ea
  41ef48:	jne    0x41ef5e
  41ef4a:	vdivpd xmm3,xmm3,xmm3
  41ef4e:	dec    esp
  41ef4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef50:	mov    ah,BYTE PTR [ebx]
  41ef52:	cmc    
  41ef53:	or     BYTE PTR [esi+0x72f2b77],bl
  41ef59:	mov    edi,0xbdf5a5f1
  41ef5e:	sbb    eax,0x94528181
  41ef63:	outs   dx,BYTE PTR ds:[esi]
  41ef64:	and    dh,BYTE PTR [esi+0x70f62e20]
  41ef6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef6b:	fidiv  WORD PTR [ecx-0x7d3d9113]
  41ef71:	push   eax
  41ef72:	mov    esp,0xcb072462
  41ef77:	mov    WORD PTR [esi+0x43],fs
  41ef7a:	(bad)  
  41ef7b:	out    0x49,al
  41ef7d:	movntq (bad),mm6
  41ef7e:	out    0xf6,eax
  41ef80:	add    BYTE PTR [eax+edi*1-0x6f5cbfd7],al
  41ef87:	dec    ebx
  41ef88:	int    0xb
  41ef8a:	in     eax,0x57
  41ef8c:	dec    esp
  41ef8d:	mov    ecx,0x98989065
  41ef92:	mov    es,ebp
  41ef94:	mov    ah,0x40
  41ef96:	push   ds
  41ef97:	sbb    al,0x47
  41ef9a:	jbe    0x41f002
  41ef9c:	add    DWORD PTR [ebx+0x2e],0xffffff97
  41efa0:	(bad)  
  41efa1:	adc    eax,0x419062af
  41efa6:	inc    eax
  41efa7:	add    al,0xfd
  41efa9:	or     dh,bl
  41efab:	mov    bl,0x41
  41efad:	xchg   edi,eax
  41efae:	add    al,0x3f
  41efb0:	sub    BYTE PTR [edx],dh
  41efb2:	ins    DWORD PTR es:[edi],dx
  41efb3:	xor    dl,bh
  41efb5:	pop    ebp
  41efb6:	add    BYTE PTR [ecx+0x1e],dl
  41efb9:	push   edx
  41efba:	cmp    eax,0x2e0fc33b
  41efbf:	pop    esi
  41efc0:	or     BYTE PTR [edx-0x1866d2cf],bh
  41efc6:	inc    ebx
  41efc7:	add    esi,DWORD PTR [eax-0x3bfe1ec8]
  41efcd:	popa   
  41efce:	adc    esi,ecx
  41efd0:	cwde   
  41efd1:	lods   al,BYTE PTR ds:[esi]
  41efd2:	hlt    
  41efd3:	push   0x51356d9a
  41efd8:	ret    
  41efd9:	ds leave 
  41efdb:	mov    edx,0x2a7d5b32
  41efe0:	pop    ebx
  41efe1:	stc    
  41efe2:	int3   
  41efe3:	loope  0x41ef8e
  41efe5:	push   0xa1a5fa5d
  41efea:	dec    ebp
  41efeb:	mov    DWORD PTR [ecx+0x38],edx
  41efee:	sbb    edx,esp
  41eff0:	(bad)  [esi+0x35ce3131]
  41eff6:	xlat   BYTE PTR ds:[ebx]
  41eff7:	aaa    
  41eff8:	pop    edi
  41eff9:	sbb    DWORD PTR [edi-0x26a26076],eax
  41efff:	cdq    
  41f000:	dec    ebx
  41f001:	and    eax,ebp
  41f003:	sbb    BYTE PTR [edi*2+0x240d5737],bl
  41f00a:	loope  0x41f042
  41f00c:	inc    DWORD PTR [edi-0x52]
  41f00f:	mov    BYTE PTR [edi],bh
  41f011:	ds cdq 
  41f013:	push   0xc4790f64
  41f018:	cmp    al,0x82
  41f01a:	xchg   DWORD PTR [ebx],ebx
  41f01c:	iret   
  41f01d:	repnz iret 
  41f01f:	popf   
  41f020:	mov    edx,0x1349b2f9
  41f025:	sbb    DWORD PTR [esi+0x6d],ebx
  41f028:	bound  eax,QWORD PTR [edi+0x283822ad]
  41f02e:	rcr    DWORD PTR [edx-0xd374dc9],0xc
  41f035:	mov    bh,0x66
  41f038:	(bad)  
  41f039:	hlt    
  41f03a:	popf   
  41f03b:	mov    ebx,0xed35d627
  41f040:	rcl    BYTE PTR [ebx+0x76],cl
  41f043:	mov    ebx,0xf1fdc7f4
  41f048:	jb     0x41efda
  41f04a:	ss mov ebp,0xa88cdecd
  41f050:	in     eax,dx
  41f051:	repnz mov ebx,0x541a8db3
  41f057:	(bad)  
  41f058:	mov    edi,0xa7a56c5b
  41f05d:	aas    
  41f05e:	call   0xdbd5:0x8d5d95fb
  41f065:	xor    eax,DWORD PTR [edi]
  41f067:	mov    edi,0xd6087daf
  41f06c:	xor    BYTE PTR [edx],ch
  41f06e:	pop    ebp
  41f06f:	inc    edi
  41f070:	inc    ebp
  41f071:	xor    edx,DWORD PTR [eax-0xb]
  41f074:	lds    edi,FWORD PTR [esi]
  41f076:	cwde   
  41f077:	das    
  41f078:	dec    edi
  41f079:	lods   al,BYTE PTR ds:[esi]
  41f07a:	dec    esp
  41f07b:	stc    
  41f07c:	cmp    eax,0x3c535d50
  41f081:	or     bh,BYTE PTR [eax]
  41f083:	sub    edx,DWORD PTR [eax]
  41f085:	add    DWORD PTR [ebx+0x3c2d23d5],ebx
  41f08b:	adc    BYTE PTR [eax-0x5a],cl
  41f08e:	mov    ebx,0xabc66268
  41f093:	arpl   WORD PTR [edx+edi*4-0x10d7a427],di
  41f09a:	sbb    edi,DWORD PTR [ebp-0x532eb91b]
  41f0a0:	je     0x41f052
  41f0a2:	jb     0x41f0e8
  41f0a4:	mov    DWORD PTR [edx+0x22a8980],esp
  41f0aa:	mov    ds:0x1de89705,eax
  41f0af:	sub    bh,BYTE PTR [ebx+0x20242bfa]
  41f0b5:	fisub  WORD PTR [edi-0x77e81e45]
  41f0bb:	clc    
  41f0bc:	fs test al,0xa8
  41f0bf:	pusha  
  41f0c0:	lock lock push edi
  41f0c3:	je     0x41f098
  41f0c5:	cwde   
  41f0c6:	popa   
  41f0c7:	push   ecx
  41f0c8:	(bad)  
  41f0c9:	xor    ebp,ebx
  41f0cb:	fnstenv [ebx]
  41f0cd:	loopne 0x41f07c
  41f0cf:	inc    ebp
  41f0d0:	(bad)  
  41f0d1:	fs gs mov ebp,0x2ce347a1
  41f0d8:	mov    cl,0x51
  41f0da:	lahf   
  41f0db:	mov    ch,0x12
  41f0dd:	rcr    BYTE PTR [ecx+eiz*8-0x74],cl
  41f0e1:	xor    DWORD PTR [ebp+0x709cf66b],ebp
  41f0e7:	mov    ds:0x2c26c78c,eax
  41f0ec:	mov    eax,?
  41f0ee:	rcl    DWORD PTR [ebp+0x64229a59],cl
  41f0f4:	inc    ebp
  41f0f5:	and    ebp,DWORD PTR [ecx-0x74225468]
  41f0fb:	in     eax,0x84
  41f0fd:	push   eax
  41f0fe:	push   edx
  41f0ff:	cmp    eax,DWORD PTR [edi]
  41f101:	fwait
  41f102:	jecxz  0x41f163
  41f104:	sbb    esi,DWORD PTR [edi+0x60]
  41f107:	inc    edx
  41f108:	jg     0x41f154
  41f10a:	test   DWORD PTR [ebp-0x4a],0x48f2b72c
  41f111:	jge    0x41f0f0
  41f113:	das    
  41f114:	aam    0x6e
  41f116:	inc    ecx
  41f117:	push   0x1a
  41f119:	dec    ebp
  41f11a:	sbb    al,0x77
  41f11c:	rcl    DWORD PTR [edi-0x4],cl
  41f11f:	sub    al,0x7d
  41f121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f122:	popa   
  41f123:	add    al,0xcc
  41f125:	xchg   esp,eax
  41f126:	fcom   QWORD PTR [edi+0x3]
  41f129:	clc    
  41f12a:	sbb    edi,ebx
  41f12c:	stc    
  41f12d:	ja     0x41f0fc
  41f12f:	add    DWORD PTR [ecx-0x6e],esi
  41f132:	xor    edi,DWORD PTR [esi-0x1d]
  41f135:	int3   
  41f136:	ins    BYTE PTR es:[edi],dx
  41f137:	mov    dl,0xd
  41f139:	dec    ebx
  41f13a:	(bad)  
  41f13b:	xchg   ecx,eax
  41f13c:	call   0xa00d1d8f
  41f141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f142:	push   DWORD PTR [ebp+0x7625b6a0]
  41f148:	pop    edx
  41f149:	push   esp
  41f14a:	cmp    al,BYTE PTR [ebx-0x72]
  41f14d:	les    ebp,FWORD PTR [edi-0x17712298]
  41f153:	gs pop ebx
  41f155:	sbb    DWORD PTR [ebx+0x7a],ebp
  41f158:	lea    esi,[ebp-0x2b6c6509]
  41f15e:	adc    BYTE PTR [edi+0x6a11364c],cl
  41f164:	mov    eax,0x55d02ef1
  41f169:	arpl   WORD PTR [esi],di
  41f16b:	das    
  41f16c:	adc    cl,ah
  41f16e:	jg     0x41f1b7
  41f170:	test   eax,0x956568bc
  41f175:	cmc    
  41f176:	(bad)  
  41f177:	push   esp
  41f178:	mov    BYTE PTR [edi+0x15000729],cl
  41f17e:	mov    edx,DWORD PTR [edx-0x50]
  41f181:	shr    BYTE PTR [esi-0x4c8557d0],0xc2
  41f188:	cli    
  41f189:	das    
  41f18a:	xchg   esp,eax
  41f18b:	js     0x41f140
  41f18d:	ficomp WORD PTR ds:0xc0a894b6
  41f193:	cmp    al,0xe9
  41f195:	ds imul ebx
  41f198:	push   edx
  41f199:	or     edi,DWORD PTR [ebx-0x55]
  41f19c:	adc    eax,0x5f3207ba
  41f1a1:	(bad)  
  41f1a2:	mov    WORD PTR [ebx],ss
  41f1a4:	ficom  WORD PTR [ecx+0x23]
  41f1a7:	add    esp,DWORD PTR [edx+0x4c59ade7]
  41f1ad:	scas   al,BYTE PTR es:[edi]
  41f1ae:	mov    bh,0xd2
  41f1b0:	and    edi,edx
  41f1b2:	pop    esp
  41f1b3:	fcmovnbe st,st(6)
  41f1b5:	out    dx,eax
  41f1b6:	mov    dl,BYTE PTR [ebp+0x2c38d35e]
  41f1bc:	cwde   
  41f1bd:	call   0x19a1:0xebf73371
  41f1c4:	(bad)  
  41f1c5:	mov    WORD PTR [ebp+0x16b9a7c5],?
  41f1cb:	sbb    DWORD PTR [esp+esi*1],ebx
  41f1ce:	jo     0x41f238
  41f1d0:	mov    esi,0x47f8c327
  41f1d5:	inc    esi
  41f1d6:	jmp    0xbcc7:0xf2cd31c5
  41f1dd:	sbb    BYTE PTR es:[edx+ebx*4],0x2b
  41f1e2:	push   es
  41f1e3:	push   ds
  41f1e4:	clc    
  41f1e5:	fdiv   st,st(6)
  41f1e7:	add    edx,DWORD PTR [ebp-0x68]
  41f1ea:	mov    DWORD PTR [esi-0x5f99230d],eax
  41f1f0:	aad    0xf8
  41f1f2:	mov    WORD PTR ds:0x7320844d,cs
  41f1f8:	or     si,di
  41f1fb:	dec    ecx
  41f1fc:	add    al,0xe0
  41f1fe:	idiv   esi
  41f200:	(bad)  
  41f201:	cs mov eax,0xe7a328e6
  41f207:	jecxz  0x41f1ea
  41f209:	imul   ebp,DWORD PTR ds:0x357c4717,0xa755cee5
  41f213:	fimul  WORD PTR [edi+0x66]
  41f216:	dec    esi
  41f217:	fsub   DWORD PTR [edi+0x2]
  41f21a:	cmp    DWORD PTR [ebx+0x287c7b9d],0xa9a69af9
  41f224:	aaa    
  41f225:	cmp    al,0xcd
  41f227:	adc    BYTE PTR [esi+0x27],al
  41f22a:	mov    ss,WORD PTR [ecx-0x3b91725b]
  41f230:	loope  0x41f1cd
  41f232:	sbb    ebp,esp
  41f234:	aam    0x68
  41f236:	mov    cl,0x8c
  41f238:	mov    ebp,0x975f86b6
  41f23d:	mov    dh,0x28
  41f23f:	jb     0x41f251
  41f241:	leave  
  41f242:	or     eax,DWORD PTR [eax+ecx*2-0xe1ad2db]
  41f249:	pop    edi
  41f24a:	loopne 0x41f26e
  41f24c:	sbb    BYTE PTR [edi],0xe6
  41f24f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f250:	fwait
  41f251:	mov    BYTE PTR cs:[edi-0xd584ded],0x9b
  41f259:	xchg   BYTE PTR [ebx-0x38f34a28],ah
  41f25f:	add    eax,0xc5a7e078
  41f264:	inc    eax
  41f265:	clc    
  41f266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f267:	jg     0x41f2d5
  41f269:	xchg   DWORD PTR [bp+0x63],ebx
  41f26d:	pop    esp
  41f26e:	sbb    bh,BYTE PTR [eax+0x5d02ac5d]
  41f274:	mov    ch,0xb3
  41f276:	sub    ecx,edx
  41f278:	pop    edx
  41f279:	fist   WORD PTR [edx-0x6dfcd591]
  41f27f:	xchg   edi,eax
  41f280:	mov    WORD PTR [ebp+0x45],es
  41f283:	mov    esi,0x66fc5921
  41f288:	(bad)  
  41f289:	mov    ecx,0x554b424f
  41f28e:	or     bl,ah
  41f290:	stc    
  41f291:	loopne 0x41f2e6
  41f293:	mov    edi,edx
  41f295:	jnp    0x41f2c1
  41f297:	fstp   QWORD PTR [esi-0x7a]
  41f29a:	or     DWORD PTR [edx],edi
  41f29c:	stc    
  41f29d:	scas   al,BYTE PTR es:[edi]
  41f29e:	pop    eax
  41f29f:	test   BYTE PTR [esi-0x6],dh
  41f2a2:	ror    BYTE PTR [edi-0x19],1
  41f2a5:	dec    esp
  41f2a6:	test   eax,0x941b9eff
  41f2ab:	jmp    0x41f2cb
  41f2ad:	or     DWORD PTR [edx],esp
  41f2af:	adc    al,BYTE PTR [edi+ebx*2]
  41f2b2:	mov    ?,WORD PTR [ebx-0x69]
  41f2b5:	mov    al,0x4b
  41f2b7:	mov    DWORD PTR [esi-0x5dbff13a],ebx
  41f2bd:	nop
  41f2be:	icebp  
  41f2bf:	test   DWORD PTR cs:[edi+0xe],esi
  41f2c3:	popa   
  41f2c4:	jb     0x41f2c1
  41f2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c7:	loop   0x41f2a8
  41f2c9:	inc    esp
  41f2ca:	les    ebx,FWORD PTR [esi+0x1e]
  41f2cd:	fdivrp st(3),st
  41f2cf:	mov    bh,0x71
  41f2d1:	test   al,0xa1
  41f2d3:	mov    BYTE PTR [edi],bl
  41f2d5:	xor    eax,0x6148cae2
  41f2da:	dec    ebx
  41f2db:	sub    eax,0xfff85ef6
  41f2e0:	pusha  
  41f2e1:	je     0x41f316
  41f2e3:	dec    edx
  41f2e4:	sub    eax,0x150efe18
  41f2e9:	push   eax
  41f2ea:	icebp  
  41f2eb:	jg     0x41f32a
  41f2ed:	pop    edi
  41f2ee:	push   ds
  41f2ef:	pop    ecx
  41f2f0:	sbb    al,0x7f
  41f2f2:	jp     0x41f329
  41f2f4:	pop    ecx
  41f2f5:	in     al,0x77
  41f2f7:	outs   dx,DWORD PTR fs:[esi]
  41f2f9:	rol    dl,1
  41f2fb:	not    DWORD PTR [edi+0x55ea22fe]
  41f301:	mov    DWORD PTR [edi],ebp
  41f303:	(bad)  [ebx-0x40fc6b8d]
  41f309:	push   edx
  41f30a:	mov    dh,0x75
  41f30c:	jmp    0x41f2b4
  41f30e:	mov    edx,0xb9280a8b
  41f313:	mov    ecx,0xc0a01efa
  41f318:	cmp    al,0xd4
  41f31a:	cmovs  esi,DWORD PTR [edx+eax*2+0x5764cb34]
  41f322:	adc    bl,0xaa
  41f325:	lods   eax,DWORD PTR ds:[esi]
  41f326:	pop    ecx
  41f327:	arpl   WORD PTR [ebp+0x76],bp
  41f32a:	loope  0x41f36f
  41f32c:	out    dx,al
  41f32d:	mov    edi,DWORD PTR [edx-0x7a]
  41f330:	(bad)  
  41f332:	cmp    BYTE PTR [ecx+0x7c],ch
  41f335:	test   eax,0xe55d11f8
  41f33a:	xchg   edi,eax
  41f33b:	(bad)  
  41f33c:	(bad)  [eiz*2+0x28bb05c0]
  41f343:	scas   al,BYTE PTR es:[edi]
  41f344:	xchg   esi,edx
  41f346:	adc    BYTE PTR [edx+0x4d199b6c],0x62
  41f34d:	aam    0x9e
  41f34f:	mov    ds,edx
  41f351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f352:	sub    edi,DWORD PTR [ebp+0xbe6270a]
  41f358:	jmp    0x41f397
  41f35a:	int    0x4f
  41f35c:	(bad)  
  41f35d:	push   esi
  41f35e:	xor    eax,0xfd9d4da1
  41f363:	imul   eax,eax,0x3f2a8d9b
  41f369:	push   ss
  41f36a:	pop    edx
  41f36b:	test   eax,0x2f78ff40
  41f370:	(bad)  
  41f371:	(bad)  
  41f372:	test   DWORD PTR [esp],eax
  41f375:	or     ebx,esi
  41f377:	xor    BYTE PTR [eax-0x3c550ba0],0x43
  41f37e:	out    dx,eax
  41f37f:	js     0x41f3db
  41f381:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f383:	cmc    
  41f384:	pusha  
  41f385:	mov    ah,0x71
  41f387:	adc    al,0xc0
  41f389:	mov    ah,0xce
  41f38b:	fs ins DWORD PTR es:[edi],dx
  41f38d:	int3   
  41f38e:	ss ffreep st(7)
  41f391:	mov    dl,0x4b
  41f393:	cmp    dl,BYTE PTR [ebx]
  41f395:	push   edi
  41f396:	mov    dl,0x89
  41f398:	adc    al,0x6f
  41f39a:	ja     0x41f3fe
  41f39c:	xchg   ebx,eax
  41f39d:	gs and dh,ch
  41f3a0:	daa    
  41f3a1:	xchg   ebx,eax
  41f3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a3:	fcomi  st,st(6)
  41f3a5:	adc    al,0xc
  41f3a7:	ret    
  41f3a8:	dec    esi
  41f3a9:	adc    eax,0x23bb3f74
  41f3ae:	mov    al,ds:0x622cf7fe
  41f3b3:	or     BYTE PTR [ecx],ch
  41f3b5:	mov    BYTE PTR [ecx*4-0xae2cb1d],0x16
  41f3bd:	mov    bl,0x8d
  41f3bf:	pop    si
  41f3c1:	data16 test BYTE PTR [esi+eiz*2-0x371a6bf3],al
  41f3c9:	pop    edi
  41f3ca:	pop    DWORD PTR [edx+0x76bad7a5]
  41f3d0:	test   bl,bl
  41f3d2:	add    BYTE PTR [ecx+0x5e],bh
  41f3d5:	mov    cl,0xcf
  41f3d7:	xchg   edi,eax
  41f3d8:	fcmovne st,st(4)
  41f3da:	mov    ecx,0x7576510f
  41f3df:	pop    eax
  41f3e0:	bound  esp,QWORD PTR [ebx+0x1e404cfc]
  41f3e6:	inc    edi
  41f3e7:	adc    ch,dl
  41f3e9:	push   edi
  41f3ea:	dec    esi
  41f3eb:	ss in  eax,0x92
  41f3ee:	mov    ah,0x94
  41f3f0:	test   al,0x1e
  41f3f2:	rcl    BYTE PTR [edi-0x689037ca],1
  41f3f8:	dec    BYTE PTR [eax+ebp*4]
  41f3fb:	sbb    eax,ecx
  41f3fd:	xor    esp,DWORD PTR [ebx-0x2e]
  41f400:	dec    edi
  41f401:	or     eax,0xa325e6b2
  41f406:	cmp    DWORD PTR [edx-0x39ab9ad8],esi
  41f40c:	adc    eax,0x647c0e4f
  41f411:	aaa    
  41f412:	adc    ebx,DWORD PTR [ecx+0x2d]
  41f415:	xor    BYTE PTR [edi-0x23],dl
  41f418:	test   al,0xa
  41f41a:	ins    BYTE PTR es:[edi],dx
  41f41b:	push   esp
  41f41c:	mov    ecx,0xe2d1c358
  41f421:	fadd   st,st(6)
  41f423:	pop    ss
  41f424:	mov    bh,0x2e
  41f426:	outs   dx,BYTE PTR ds:[esi]
  41f427:	ja     0x41f45d
  41f429:	int    0x24
  41f42b:	adc    al,0xa2
  41f42d:	add    esp,esp
  41f42f:	sub    eax,0x4beb5e32
  41f434:	jne    0x41f428
  41f436:	mov    edi,ss
  41f438:	std    
  41f439:	push   esp
  41f43b:	and    DWORD PTR [edi+0x1c],edx
  41f43e:	mov    edx,0xc03b5d7c
  41f443:	jae    0x41f492
  41f445:	jmp    0x982d441a
  41f44a:	aaa    
  41f44b:	mov    eax,ds:0x8490ee9b
  41f450:	call   0xbcef723
  41f455:	inc    edi
  41f456:	dec    ebx
  41f457:	cld    
  41f458:	jle    0x41f42b
  41f45a:	out    dx,al
  41f45b:	outs   dx,DWORD PTR ds:[esi]
  41f45c:	xchg   BYTE PTR [esi],dh
  41f45e:	xor    BYTE PTR [ecx-0x7b],ah
  41f461:	mov    bh,0x2b
  41f463:	inc    ebx
  41f464:	cwde   
  41f465:	pusha  
  41f466:	jno    0x41f48f
  41f468:	sub    al,BYTE PTR [edi+0x1d05f7cb]
  41f46e:	add    BYTE PTR [edi+0x35798cea],dl
  41f474:	retf   0xefd8
  41f477:	dec    ebx
  41f478:	js     0x41f47b
  41f47a:	jmp    0x41f497
  41f47c:	jae    0x41f493
  41f47e:	mov    bl,0x2f
  41f480:	pop    eax
  41f481:	cmp    eax,0xdcbcd5e7
  41f486:	call   FWORD PTR [ecx+0x7]
  41f489:	adc    eax,0x428df54b
  41f48e:	in     eax,0x53
  41f490:	add    BYTE PTR [ecx+0x25],dh
  41f493:	or     DWORD PTR [eax-0xc],ebx
  41f496:	pop    ebx
  41f497:	push   ecx
  41f498:	imul   BYTE PTR [ecx+0x6cc9756c]
  41f49e:	lods   eax,DWORD PTR ds:[esi]
  41f49f:	retf   0x35a6
  41f4a2:	dec    ebx
  41f4a3:	sub    al,al
  41f4a5:	add    edi,DWORD PTR [esi-0x50]
  41f4a8:	dec    esp
  41f4a9:	lods   eax,DWORD PTR ds:[esi]
  41f4aa:	fs push edx
  41f4ac:	jg     0x41f519
  41f4ae:	js     0x41f4e6
  41f4b0:	xchg   DWORD PTR [ebp+edx*8+0x16f95854],ecx
  41f4b7:	retf   
  41f4b8:	test   DWORD PTR [esi+0x629c12f2],esi
  41f4be:	call   0x8c18fed0
  41f4c3:	js     0x41f470
  41f4c5:	cwde   
  41f4c6:	and    BYTE PTR [esi+0x50],ch
  41f4c9:	iret   
  41f4ca:	add    ch,BYTE PTR [ebx]
  41f4cc:	add    eax,DWORD PTR [edi]
  41f4ce:	call   0x52d0:0x196ea7ac
  41f4d5:	jp     0x41f4e0
  41f4d7:	popf   
  41f4d8:	mov    eax,ds:0x8172c6d5
  41f4dd:	add    BYTE PTR [edi],0xc5
  41f4e0:	ss xchg ebp,ebp
  41f4e3:	ret    0x4a24
  41f4e6:	ror    BYTE PTR [eax-0x45],1
  41f4e9:	mov    bl,0x3c
  41f4eb:	push   edx
  41f4ec:	fs (bad) 
  41f4ee:	mov    esp,0xecf7bb9d
  41f4f3:	(bad)  
  41f4f4:	in     eax,dx
  41f4f5:	adc    eax,0xc4f1ce0f
  41f4fa:	cmp    al,0xcd
  41f4fc:	daa    
  41f4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4fe:	scas   al,BYTE PTR es:[edi]
  41f4ff:	mov    edi,0xe5eb1326
  41f504:	daa    
  41f505:	stc    
  41f506:	mov    al,ds:0xc925d754
  41f50b:	std    
  41f50c:	jle    0x41f496
  41f50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50f:	mov    ch,0x4a
  41f511:	cmp    BYTE PTR [esi+0x1e],al
  41f514:	xchg   ecx,eax
  41f515:	dec    ecx
  41f516:	(bad)  
  41f517:	in     al,0x93
  41f519:	jae    0x41f532
  41f51b:	pop    edx
  41f51c:	sbb    esi,DWORD PTR [edi]
  41f51e:	std    
  41f51f:	mov    esp,0x34e4160a
  41f524:	add    BYTE PTR [edx+0x3f82f3a],ch
  41f52a:	mov    esp,DWORD PTR [edx]
  41f52c:	inc    ecx
  41f52d:	and    DWORD PTR [esi],ebp
  41f52f:	sti    
  41f530:	xchg   ecx,eax
  41f531:	add    ah,BYTE PTR [ebx-0x32328118]
  41f537:	cmp    BYTE PTR [ecx+ecx*8+0x18],cl
  41f53b:	cmc    
  41f53c:	xchg   esi,eax
  41f53d:	jno    0x41f529
  41f53f:	adc    eax,0x86e17171
  41f544:	out    dx,eax
  41f545:	fwait
  41f546:	lods   al,BYTE PTR ds:[esi]
  41f547:	jl     0x41f53f
  41f549:	xchg   ebp,eax
  41f54a:	stos   DWORD PTR es:[edi],eax
  41f54b:	push   cs
  41f54c:	mov    ds:0x2be8a66b,eax
  41f551:	sahf   
  41f552:	mov    ah,0xa3
  41f554:	push   ecx
  41f555:	pop    esp
  41f556:	or     ebp,DWORD PTR [eax]
  41f558:	adc    DWORD PTR [eax],ebp
  41f55a:	leave  
  41f55b:	bound  ecx,QWORD PTR [edx+0x4]
  41f55e:	fucompp 
  41f560:	add    al,0x88
  41f562:	les    ebx,FWORD PTR [edi+0x4a]
  41f565:	(bad)  
  41f566:	jne    0x41f59a
  41f568:	mov    esi,edx
  41f56a:	shl    esi,0xf5
  41f56d:	inc    eax
  41f56e:	int3   
  41f56f:	pop    esi
  41f570:	inc    esp
  41f571:	sbb    bl,dl
  41f573:	jg     0x41f5b9
  41f575:	ret    
  41f576:	and    al,0xa9
  41f578:	jbe    0x41f57f
  41f57a:	test   DWORD PTR [esi+0x66],eax
  41f57d:	clc    
  41f57e:	or     ch,0xe9
  41f581:	out    0xad,al
  41f583:	je     0x41f558
  41f585:	or     al,0xe7
  41f587:	fadd   QWORD PTR [esi+ebp*4-0x5e]
  41f58b:	push   eax
  41f58c:	or     DWORD PTR [ebx],ecx
  41f58e:	xor    eax,0xf7aa58d5
  41f593:	lds    esi,FWORD PTR [ebx-0x6d]
  41f596:	outs   dx,DWORD PTR ds:[esi]
  41f597:	pop    ds
  41f598:	xor    eax,ebp
  41f59a:	std    
  41f59b:	cmp    ebp,DWORD PTR [ebp+0x58e24859]
  41f5a1:	dec    ebx
  41f5a2:	sbb    DWORD PTR [ebx-0x7373b158],esp
  41f5a8:	shr    bh,1
  41f5aa:	sub    ch,cl
  41f5ac:	adc    BYTE PTR [ebp-0x5fa81db4],cl
  41f5b2:	cmp    al,0x0
  41f5b4:	ss sub esp,ebx
  41f5b7:	pushf  
  41f5b8:	or     al,BYTE PTR [ebp+0x25976720]
  41f5be:	or     ch,bl
  41f5c0:	lods   al,BYTE PTR ds:[esi]
  41f5c1:	push   esi
  41f5c2:	dec    esi
  41f5c3:	ror    BYTE PTR [ebx-0x4e8ae64f],0xff
  41f5ca:	jl     0x41f5aa
  41f5cc:	mov    bl,BYTE PTR [ebx]
  41f5ce:	add    al,0x14
  41f5d0:	mov    bh,0x17
  41f5d2:	mov    dh,BYTE PTR [edi]
  41f5d4:	mov    ch,0x75
  41f5d6:	push   esp
  41f5d7:	or     eax,edi
  41f5d9:	int3   
  41f5da:	in     eax,0x0
  41f5dc:	outs   dx,DWORD PTR ds:[esi]
  41f5dd:	dec    esp
  41f5de:	aas    
  41f5df:	cli    
  41f5e0:	(bad)  
  41f5e1:	push   ebx
  41f5e2:	xor    DWORD PTR cs:[edi-0x49],esp
  41f5e6:	stos   DWORD PTR es:[edi],eax
  41f5e7:	and    DWORD PTR [ebx+0x398956ad],0x91090289
  41f5f1:	xor    BYTE PTR [esi-0x4f6b1ae1],ch
  41f5f7:	pop    edx
  41f5f8:	jb     0x41f626
  41f5fa:	jno    0x41f614
  41f5fc:	cmp    esp,0xffffffe4
  41f5ff:	xor    ecx,DWORD PTR [ecx]
  41f601:	mov    eax,ds:0x268b7cf1
  41f606:	int    0x4
  41f608:	(bad)  
  41f609:	mov    eax,edi
  41f60b:	jmp    0x25dd856d
  41f610:	sub    ah,al
  41f612:	adc    eax,0x8fae9568
  41f617:	jns    0x41f623
  41f619:	mov    ch,0x36
  41f61b:	add    DWORD PTR [ebp+0x4b],edx
  41f61e:	stos   BYTE PTR es:[edi],al
  41f61f:	test   DWORD PTR [edi+0x74],0x9feb276b
  41f626:	adc    ebx,DWORD PTR [eax-0xca53662]
  41f62c:	or     DWORD PTR [ecx+0x714cb317],0x64
  41f633:	(bad)  
  41f634:	fmul   DWORD PTR [ebp-0x594c4eed]
  41f63a:	lock cvtdq2ps xmm4,XMMWORD PTR [eax-0x3b]
  41f63f:	mov    gs,WORD PTR [edi+0x1bf2ff39]
  41f645:	and    al,0x1
  41f647:	xchg   ebp,eax
  41f648:	int    0x32
  41f64a:	cwde   
  41f64b:	fstp   QWORD PTR [edx]
  41f64d:	call   0x1be21d25
  41f652:	ins    DWORD PTR es:[edi],dx
  41f653:	sbb    al,0x69
  41f655:	inc    edi
  41f656:	les    edx,FWORD PTR [ebx+0x28]
  41f659:	cmp    al,0x99
  41f65b:	aaa    
  41f65c:	add    ecx,eax
  41f65e:	jl     0x41f6bd
  41f660:	or     DWORD PTR [ecx],esi
  41f662:	pop    edi
  41f663:	and    DWORD PTR [ebx-0x4e6df402],edi
  41f669:	ja     0x41f699
  41f66b:	add    dl,BYTE PTR [ecx]
  41f66d:	cmp    DWORD PTR [ebx+edx*2+0x2e],esp
  41f671:	mov    al,0xf7
  41f673:	jecxz  0x41f637
  41f675:	sub    edi,ebp
  41f677:	and    cl,BYTE PTR [eax-0x45]
  41f67a:	in     al,0x70
  41f67c:	jmp    0xa15d4906
  41f681:	push   ebp
  41f682:	les    edx,FWORD PTR [eax+esi*2-0x8]
  41f686:	(bad)  
  41f688:	retf   
  41f689:	pop    ds
  41f68a:	adc    eax,0x9d3f30d0
  41f68f:	lds    esi,FWORD PTR [ecx+0x56]
  41f692:	cmp    BYTE PTR [ebx+0x60],cl
  41f695:	test   BYTE PTR [ecx],ch
  41f697:	jne    0x41f6b7
  41f699:	and    eax,ecx
  41f69b:	dec    ebp
  41f69c:	ss dec ebx
  41f69e:	bnd jl 0x41f70b
  41f6a1:	sub    eax,0x8a367551
  41f6a6:	adc    eax,0xda1d8d5b
  41f6ab:	test   eax,0xacd984c5
  41f6b0:	sub    al,0x9f
  41f6b2:	call   0x91a0:0xe5ff915c
  41f6b9:	iret   
  41f6ba:	pop    ss
  41f6bb:	inc    ebx
  41f6bc:	mov    cl,0x9b
  41f6be:	inc    esi
  41f6bf:	mov    dl,0xcf
  41f6c1:	push   es
  41f6c2:	pop    eax
  41f6c3:	and    ebx,esi
  41f6c5:	dec    ebx
  41f6c6:	lock les edx,FWORD PTR [ebx]
  41f6c9:	mov    ah,0xe7
  41f6cb:	(bad)  
  41f6cc:	ret    
  41f6cd:	aas    
  41f6ce:	imul   edi,ebx,0x2c331b3f
  41f6d4:	sbb    BYTE PTR [edx-0x6d],0x83
  41f6d8:	dec    eax
  41f6d9:	das    
  41f6da:	push   ebp
  41f6db:	ror    ecx,1
  41f6dd:	jae    0x41f691
  41f6df:	(bad)  
  41f6e0:	mov    ebx,0xcfc92fbe
  41f6e5:	jns    0x41f751
  41f6e7:	gs popf 
  41f6e9:	adc    bh,BYTE PTR [eax]
  41f6eb:	sub    eax,0x1f6e383a
  41f6f0:	(bad)  
  41f6f1:	test   eax,0xd52c75d6
  41f6f6:	xor    eax,0xf51cfc95
  41f6fb:	pop    DWORD PTR ds:0xb5630c9e
  41f701:	fidiv  DWORD PTR [esi-0xacbfff1]
  41f707:	cmp    esi,DWORD PTR [esi+0x7a]
  41f70a:	pop    ebp
  41f70b:	mov    esi,0xebb4dede
  41f710:	adc    BYTE PTR [ebp-0x1324507f],bl
  41f716:	mov    ds:0x22e2469d,al
  41f71b:	inc    ebp
  41f71c:	shl    DWORD PTR ds:0x3ed39305,0x4d
  41f723:	and    al,bl
  41f725:	imul   edx,DWORD PTR [edx+0x55],0x7da2e5d1
  41f72c:	cdq    
  41f72d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f72e:	and    eax,0x2f867217
  41f733:	aad    0x88
  41f735:	mov    DWORD PTR [ecx+0x2118c08b],ebx
  41f73b:	xchg   dl,ch
  41f73d:	mov    al,bh
  41f73f:	je     0x41f6f1
  41f741:	jo     0x41f74f
  41f743:	sub    DWORD PTR [esp+esi*1+0x2d67f592],edi
  41f74a:	push   ss
  41f74b:	jbe    0x41f731
  41f74d:	pop    ebp
  41f74e:	or     BYTE PTR [ebx+0x4c],bl
  41f751:	ror    DWORD PTR [edi-0xb62f2d3],cl
  41f757:	hlt    
  41f758:	mov    ch,0x73
  41f75a:	sub    DWORD PTR [edx],edx
  41f75c:	loop   0x41f7d2
  41f75e:	dec    ecx
  41f75f:	cmp    bl,BYTE PTR [ebp+0x166b5d15]
  41f765:	test   eax,0x22ebb1e3
  41f76a:	aas    
  41f76b:	cmp    ebp,eax
  41f76d:	xor    cl,dl
  41f76f:	pop    esi
  41f770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f771:	test   BYTE PTR [edx-0x51],dh
  41f774:	jge    0x41f732
  41f776:	fld    DWORD PTR [edi-0x2073d602]
  41f77c:	cmp    ecx,eax
  41f77e:	mov    ch,0x8c
  41f780:	outs   dx,BYTE PTR ds:[esi]
  41f781:	sub    al,0x15
  41f783:	pushf  
  41f784:	jmp    0x41f7fa
  41f786:	push   ds
  41f787:	sbb    BYTE PTR [eax],0xff
  41f78a:	lods   eax,DWORD PTR ds:[esi]
  41f78b:	je     0x41f753
  41f78d:	mov    DWORD PTR [ebx+esi*4],ebx
  41f790:	xchg   BYTE PTR [ecx+ebp*2],bh
  41f793:	pop    edi
  41f794:	jge    0x41f7cb
  41f796:	pushf  
  41f797:	jae    0x41f7f2
  41f799:	adc    esp,DWORD PTR ds:0xa0690871
  41f79f:	int3   
  41f7a0:	dec    edi
  41f7a1:	idiv   DWORD PTR [edx+0x552f1f41]
  41f7a7:	mov    eax,ds:0x237cddcc
  41f7ac:	push   0xc628093f
  41f7b1:	test   al,0xb5
  41f7b3:	dec    ebx
  41f7b4:	add    al,ch
  41f7b6:	pop    esi
  41f7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7b8:	jb     0x41f7fe
  41f7ba:	jg     0x41f7e1
  41f7bc:	loop   0x41f7b2
  41f7be:	test   DWORD PTR [ebp-0x38],esi
  41f7c1:	cmp    esi,DWORD PTR [ebp+0x39616b7]
  41f7c7:	out    dx,al
  41f7c8:	cwde   
  41f7c9:	out    0xd3,eax
  41f7cb:	cmp    ebx,DWORD PTR ds:0xe781af6b
  41f7d1:	mov    ebx,0x7b79057e
  41f7d6:	dec    ebx
  41f7d7:	inc    esi
  41f7d8:	push   0x7a
  41f7da:	rcl    DWORD PTR [eax+0x78c3151e],0xbe
  41f7e1:	jecxz  0x41f820
  41f7e3:	mov    cl,0x24
  41f7e5:	mov    BYTE PTR [edx-0x19],cl
  41f7e8:	fdivp  st(5),st
  41f7ea:	call   0xafb6:0xf8fa37fd
  41f7f1:	cmp    dl,BYTE PTR [eax+0x87dc25a]
  41f7f7:	popf   
  41f7f8:	xor    eax,0xede1770e
  41f7fd:	cs push ebx
  41f7ff:	cmc    
  41f800:	jns    0x41f867
  41f802:	cmp    BYTE PTR [edi],0x77
  41f805:	popf   
  41f806:	gs mov ebp,0x1af6129c
  41f80c:	icebp  
  41f80d:	sub    eax,0x68c19737
  41f812:	and    DWORD PTR [edx+eiz*4-0x5c],0xb92e0283
  41f81a:	dec    edi
  41f81b:	fisubr DWORD PTR ds:0xdf7fdbbf
  41f821:	pop    edx
  41f822:	jbe    0x41f88f
  41f824:	mov    edx,0xa56640ff
  41f829:	or     ebx,DWORD PTR ds:0x8994
  41f82e:	loop   0x41f891
  41f830:	fwait
  41f831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f832:	hlt    
  41f833:	mov    bh,0x79
  41f835:	fild   DWORD PTR [esi-0x6cb66145]
  41f83b:	rcr    BYTE PTR [edx+0x4d],0xe4
  41f83f:	test   BYTE PTR [edi],dl
  41f841:	mov    cl,0xf2
  41f843:	push   0x4d
  41f845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f846:	cmp    ah,BYTE PTR [esi]
  41f848:	mov    edi,0x3c7488c5
  41f84d:	clc    
  41f84e:	leave  
  41f84f:	sti    
  41f850:	mov    ecx,0xa0e694ce
  41f855:	mov    edx,0x4559519
  41f85a:	in     eax,dx
  41f85b:	sub    BYTE PTR [edx+0x3351d90c],dl
  41f861:	int3   
  41f862:	stc    
  41f863:	cmp    al,BYTE PTR [eax+esi*1+0x3c220fb0]
  41f86a:	push   ebx
  41f86b:	les    ebp,FWORD PTR [edx+0x36]
  41f86e:	or     bh,BYTE PTR [esi]
  41f870:	sbb    eax,0x6acfd978
  41f875:	lidtd  [ebp+0x5c]
  41f879:	aad    0xe7
  41f87b:	ja     0x41f84d
  41f87d:	mov    bh,0xd2
  41f87f:	push   ss
  41f880:	test   al,0x3a
  41f882:	ret    0x249a
  41f885:	mov    ebp,0x6b928f72
  41f88a:	fwait
  41f88b:	std    
  41f88c:	leave  
  41f88d:	mov    ch,0x39
  41f88f:	mov    ebp,0x4a8e4425
  41f894:	stos   DWORD PTR es:[edi],eax
  41f895:	push   cs
  41f896:	ret    
  41f897:	nop
  41f898:	mov    al,ds:0x2dd8a679
  41f89d:	mov    edi,eax
  41f89f:	cli    
  41f8a0:	adc    BYTE PTR gs:[edi+0x6ffc706b],ch
  41f8a7:	popa   
  41f8a8:	inc    edi
  41f8a9:	sub    eax,0xcd301569
  41f8ae:	clc    
  41f8af:	jle    0x41f834
  41f8b1:	test   al,0xe5
  41f8b3:	bound  edx,QWORD PTR [ecx]
  41f8b5:	push   eax
  41f8b6:	mov    ecx,0x856b755e
  41f8bb:	inc    esp
  41f8bc:	into   
  41f8bd:	aad    0x62
  41f8bf:	sbb    BYTE PTR [edx-0x37dc2f34],ch
  41f8c5:	das    
  41f8c6:	jp     0x41f864
  41f8c8:	out    dx,al
  41f8c9:	mov    ebp,0x622ae20e
  41f8ce:	inc    ebx
  41f8cf:	jns    0x41f91c
  41f8d1:	jbe    0x41f892
  41f8d3:	std    
  41f8d4:	sub    BYTE PTR [ecx],bh
  41f8d6:	pop    es
  41f8d7:	push   esp
  41f8d8:	mov    edx,DWORD PTR [ebp+ebp*2+0x70]
  41f8dc:	test   DWORD PTR [ebp+0x6c],0xa2c9f020
  41f8e3:	(bad)  
  41f8e4:	xchg   ebx,eax
  41f8e5:	adc    ecx,DWORD PTR [eax-0x35e4e0b5]
  41f8eb:	cmp    esp,DWORD PTR [ecx+0x718fbfa2]
  41f8f1:	inc    ebp
  41f8f2:	sbb    al,0x3e
  41f8f4:	fcmovne st,st(3)
  41f8f6:	ins    DWORD PTR es:[edi],dx
  41f8f7:	cli    
  41f8f8:	mov    ch,0xf2
  41f8fa:	aad    0x12
  41f8fc:	mov    cl,0x6
  41f8fe:	mov    bh,0xea
  41f900:	lods   eax,DWORD PTR ds:[esi]
  41f901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f902:	inc    esi
  41f903:	mov    edi,ecx
  41f905:	sub    DWORD PTR [edi],ebp
  41f907:	leave  
  41f908:	stos   BYTE PTR es:[edi],al
  41f909:	mov    ebx,0x11594589
  41f90e:	(bad)  [edi-0x30e4c4c1]
  41f914:	jbe    0x41f94c
  41f916:	push   edx
  41f917:	mov    eax,ds:0x2c71bdaa
  41f91c:	repnz cwde 
  41f91e:	cmp    eax,0x4e155f56
  41f923:	dec    BYTE PTR [ebx+ecx*1-0x20690de7]
  41f92a:	push   esp
  41f92b:	ficomp WORD PTR [ebx-0x55]
  41f92e:	push   0x410ca19b
  41f933:	ins    DWORD PTR es:[edi],dx
  41f934:	in     eax,0x42
  41f936:	dec    ecx
  41f937:	xor    bh,0x9c
  41f93a:	xor    DWORD PTR [eax+0x3b],ebp
  41f93d:	sub    edi,ecx
  41f93f:	lods   al,BYTE PTR ds:[esi]
  41f940:	mov    eax,ds:0xb2179d03
  41f945:	imul   ecx,DWORD PTR [edi-0x5ede16aa],0x350469c3
  41f94f:	dec    esi
  41f950:	fimul  DWORD PTR [ecx+ebx*1+0x2b]
  41f954:	stc    
  41f955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f956:	out    0x8f,eax
  41f958:	scas   al,BYTE PTR es:[edi]
  41f959:	clc    
  41f95a:	pop    DWORD PTR [esi-0x51]
  41f95d:	and    DWORD PTR [esi+edx*8],eax
  41f960:	test   eax,0xad197f5
  41f965:	mov    WORD PTR [edi],es
  41f967:	das    
  41f968:	sahf   
  41f969:	xchg   BYTE PTR [edx],dh
  41f96b:	outs   dx,DWORD PTR ds:[esi]
  41f96c:	(bad)  
  41f96e:	add    DWORD PTR [eax-0x25eb4b48],edx
  41f974:	int    0x8d
  41f976:	mov    edx,es
  41f978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f979:	dec    edi
  41f97a:	call   0xc894ba3a
  41f97f:	cli    
  41f980:	cld    
  41f981:	sub    esi,ebp
  41f983:	sbb    ecx,DWORD PTR [esi]
  41f985:	imul   esp,DWORD PTR [eax],0xffffffb3
  41f988:	retf   0xa7a1
  41f98b:	shl    DWORD PTR ss:[eax],1
  41f98e:	icebp  
  41f98f:	int3   
  41f990:	xor    eax,0x5823cd4
  41f995:	ret    
  41f996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f997:	out    0x48,eax
  41f999:	fnsave [esi+0x7a]
  41f99c:	jge    0x41fa14
  41f99e:	xor    eax,0xbc9bc000
  41f9a3:	adc    BYTE PTR [edi-0x105f79aa],0xf2
  41f9aa:	fst    DWORD PTR [edx+0x23]
  41f9ad:	(bad)  [edi-0x264a385a]
  41f9b3:	rcl    cl,0x81
  41f9b6:	aaa    
  41f9b7:	(bad)  
  41f9b8:	in     eax,0xf1
  41f9ba:	cmp    eax,0xb95cb4cb
  41f9bf:	cli    
  41f9c0:	jno    0x41f96c
  41f9c2:	ficomp WORD PTR [ebx-0x69df3393]
  41f9c8:	push   eax
  41f9c9:	mov    fs,WORD PTR [ebx-0x2392f576]
  41f9cf:	les    ecx,FWORD PTR [ecx+0x5b96f1e5]
  41f9d5:	retf   
  41f9d6:	les    ebx,FWORD PTR [eax]
  41f9d8:	push   es
  41f9d9:	dec    edi
  41f9da:	fisubr WORD PTR [eax]
  41f9dc:	sbb    eax,0x2c6ac226
  41f9e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9e2:	sbb    dh,BYTE PTR [ebx-0x547afcb0]
  41f9e8:	dec    ecx
  41f9e9:	jmp    0x41f9c3
  41f9eb:	test   eax,0xb51304b0
  41f9f0:	mov    bl,BYTE PTR [edi-0x69bcda14]
  41f9f6:	pop    esi
  41f9f7:	es xor eax,0x7ac1cfd4
  41f9fd:	and    edx,DWORD PTR [esi-0x4b]
  41fa00:	add    BYTE PTR [edx+ecx*4-0x7c7ba4d],ch
  41fa07:	mov    BYTE PTR [edi],dh
  41fa09:	add    DWORD PTR [edx-0x67f08bf8],0x31d025a2
  41fa13:	repnz sbb ebx,ecx
  41fa16:	pop    edi
  41fa17:	js     0x41fa90
  41fa19:	mov    edi,0x2c298556
  41fa1e:	iret   
  41fa1f:	mov    bh,0x67
  41fa21:	jb     0x41fa80
  41fa23:	mov    al,ds:0xd96b80e6
  41fa28:	pop    ebx
  41fa29:	cld    
  41fa2a:	arpl   bx,sp
  41fa2c:	mov    BYTE PTR [ecx],cl
  41fa2e:	(bad)  [ecx+eiz*4]
  41fa31:	jmp    0x41fa3b
  41fa33:	dec    BYTE PTR [eax+0x4dbdb137]
  41fa39:	jmp    0x41f9cd
  41fa3b:	fcomp  DWORD PTR [ecx]
  41fa3d:	ins    DWORD PTR es:[edi],dx
  41fa3e:	xchg   BYTE PTR [esi-0xd7210c7],dl
  41fa44:	out    0x16,al
  41fa46:	fmul   QWORD PTR [eax-0x5e26c981]
  41fa4c:	hlt    
  41fa4d:	mov    al,0x27
  41fa4f:	inc    ebx
  41fa50:	adc    eax,0x7df7144b
  41fa55:	pop    esi
  41fa56:	cdq    
  41fa57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa58:	ja     0x41fa18
  41fa5a:	lahf   
  41fa5b:	xchg   esi,eax
  41fa5c:	mov    ah,0x5
  41fa5e:	jle    0x41faa7
  41fa60:	pushf  
  41fa61:	sbb    al,0xe2
  41fa63:	push   ecx
  41fa64:	add    dh,BYTE PTR [ecx-0x520110c2]
  41fa6a:	pop    ecx
  41fa6b:	jnp    0x41fa18
  41fa6d:	enter  0xf6b0,0x9d
  41fa71:	push   ecx
  41fa72:	pop    esi
  41fa73:	sar    DWORD PTR [edx+0x49fb0219],0xff
  41fa7a:	pop    ebp
  41fa7b:	mov    ds:0xd14bfc9d,eax
  41fa80:	xor    eax,0x7018a401
  41fa85:	or     edi,DWORD PTR [edi+0x22d1ad58]
  41fa8b:	shl    BYTE PTR [ebp+0x2ff455fc],0x5a
  41fa92:	in     al,dx
  41fa93:	out    dx,al
  41fa94:	mov    ebp,0x659efb20
  41fa99:	bound  esi,QWORD PTR [ebx-0xb9d4e46]
  41fa9f:	retf   
  41faa0:	adc    al,0xdb
  41faa2:	jns    0x41fa79
  41faa4:	pop    eax
  41faa5:	sbb    eax,0x261bac63
  41faaa:	cli    
  41faab:	mov    esi,DWORD PTR [edx+0x71dd2745]
  41fab1:	arpl   WORD PTR [edx],ax
  41fab3:	or     al,0xee
  41fab5:	cmp    BYTE PTR [ebx+0x1103be1d],0xdb
  41fabc:	push   esp
  41fabd:	xchg   ecx,eax
  41fabe:	(bad)  
  41fabf:	xlat   BYTE PTR ds:[ebx]
  41fac0:	gs mov dl,0x57
  41fac3:	sbb    al,0x43
  41fac5:	jo     0x41faab
  41fac7:	jbe    0x41faf7
  41fac9:	ja     0x41faf2
  41facb:	add    BYTE PTR [edi],al
  41facd:	xchg   BYTE PTR [eax],dh
  41facf:	call   0xd4b5:0x2e31e3ea
  41fad6:	pop    ebx
  41fad7:	neg    DWORD PTR [edx]
  41fad9:	clc    
  41fada:	(bad)  
  41fadb:	xchg   edx,eax
  41fadc:	and    ebp,esp
  41fade:	imul   BYTE PTR [edx+0x4b80c0ab]
  41fae4:	mov    edx,0xdce9c513
  41fae9:	lds    ecx,FWORD PTR [ecx-0x6f]
  41faec:	and    eax,DWORD PTR [ecx+edx*1+0x5b]
  41faf0:	and    eax,0x8676f04b
  41faf5:	ret    
  41faf6:	shr    BYTE PTR [esi-0x33],cl
  41faf9:	mov    DWORD PTR [edx+edx*2-0x7a0d60f5],0xe438c2b8
  41fb04:	ja     0x41fadb
  41fb06:	jecxz  0x41fae3
  41fb08:	sub    edi,esi
  41fb0a:	neg    edi
  41fb0c:	sub    eax,0x80f1f438
  41fb11:	mov    eax,0xc7943532
  41fb16:	in     al,dx
  41fb17:	loope  0x41fac0
  41fb19:	mov    WORD PTR [edx],fs
  41fb1b:	jns    0x41fb09
  41fb1d:	xor    ch,BYTE PTR [edx-0x45]
  41fb20:	sbb    al,0xa
  41fb22:	cs mov edi,0xf3ea27b9
  41fb28:	pop    es
  41fb29:	arpl   WORD PTR [ecx+0x5ddba4a],ax
  41fb2f:	add    DWORD PTR [eax+0x255e1f6a],edi
  41fb35:	and    BYTE PTR [edi],ah
  41fb37:	in     al,0x14
  41fb39:	ror    esi,0x2
  41fb3c:	mov    edx,0xc13758bf
  41fb41:	ins    BYTE PTR es:[edi],dx
  41fb42:	mov    eax,ds:0xd70cdbb6
  41fb47:	(bad)  
  41fb49:	fiadd  DWORD PTR [eax+edx*4-0x2a0ebf5]
  41fb50:	sbb    edi,edi
  41fb52:	ror    BYTE PTR [ebp-0x6481aba3],cl
  41fb58:	push   ebx
  41fb59:	jnp    0x41fb82
  41fb5b:	pop    es
  41fb5c:	(bad)  
  41fb5e:	fst    DWORD PTR [edi-0x12f42acb]
  41fb64:	sub    BYTE PTR [esp+edx*1],0xea
  41fb68:	sbb    edi,DWORD PTR [ebx+0x15]
  41fb6b:	test   BYTE PTR [esi+esi*8+0x4d],cl
  41fb6f:	retf   
  41fb70:	or     al,bh
  41fb72:	push   ds
  41fb73:	scas   al,BYTE PTR es:[edi]
  41fb74:	adc    DWORD PTR [edx+0x10cd7cef],0x21c8d5ea
  41fb7e:	js     0x41fbb7
  41fb80:	xor    dh,BYTE PTR [edi]
  41fb82:	cli    
  41fb83:	retf   
  41fb84:	and    al,0x2b
  41fb86:	mov    gs,WORD PTR [ebp-0x46610a0]
  41fb8c:	fmul   DWORD PTR [edi+0x99b83d7]
  41fb92:	adc    dh,al
  41fb94:	ret    0x709
  41fb97:	(bad)  
  41fb98:	ins    BYTE PTR es:[edi],dx
  41fb99:	test   eax,0x25485b59
  41fb9e:	loop   0x41fb95
  41fba0:	dec    edx
  41fba1:	mov    cl,0xcc
  41fba3:	xor    bl,dl
  41fba5:	sub    al,0xe7
  41fba7:	aad    0x7b
  41fba9:	out    0x4f,al
  41fbab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbac:	scas   al,BYTE PTR es:[edi]
  41fbad:	aas    
  41fbae:	int    0xb2
  41fbb0:	inc    edx
  41fbb1:	(bad)  
  41fbb2:	popa   
  41fbb3:	ja     0x41fc26
  41fbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb6:	in     eax,0x17
  41fbb8:	sahf   
  41fbb9:	push   ebx
  41fbba:	push   0x1e
  41fbbc:	sbb    eax,0xac6a2712
  41fbc1:	mov    edi,0xc7764631
  41fbc6:	scas   al,BYTE PTR es:[edi]
  41fbc7:	xor    al,0xf0
  41fbc9:	test   DWORD PTR [eax-0x324e2e63],ecx
  41fbcf:	inc    ebx
  41fbd0:	push   eax
  41fbd1:	xlat   BYTE PTR ds:[ebx]
  41fbd2:	in     al,0x18
  41fbd4:	sub    eax,0x47679519
  41fbd9:	mov    eax,0x9d57f197
  41fbde:	in     al,0xbe
  41fbe0:	jo     0x41fc15
  41fbe2:	aas    
  41fbe3:	mov    eax,DWORD PTR [esi]
  41fbe5:	lea    esi,[eax]
  41fbe7:	ret    0x2233
  41fbea:	jns    0x41fc0c
  41fbec:	neg    cl
  41fbee:	pop    esi
  41fbef:	pop    ds
  41fbf0:	mov    al,ds:0x7e522fbc
  41fbf5:	xor    eax,0x5b779052
  41fbfa:	sbb    ah,bl
  41fbfc:	or     DWORD PTR [ecx],0xc2763c36
  41fc02:	sub    ch,cl
  41fc04:	lods   eax,DWORD PTR ds:[esi]
  41fc05:	popa   
  41fc06:	and    eax,0xeeb8d014
  41fc0b:	xchg   ebx,eax
  41fc0c:	jp     0x76f80630
  41fc12:	pop    edx
  41fc13:	sbb    eax,0x9658c877
  41fc18:	rol    BYTE PTR [ebx+ebx*8],cl
  41fc1b:	or     BYTE PTR [ebx],al
  41fc1d:	push   eax
  41fc1e:	ins    BYTE PTR es:[edi],dx
  41fc1f:	cli    
  41fc20:	stc    
  41fc21:	mov    eax,0xe1622a0b
  41fc26:	out    0x63,eax
  41fc28:	jecxz  0x41fc9a
  41fc2a:	or     al,0x75
  41fc2c:	xor    eax,0x79671b2
  41fc31:	repnz test BYTE PTR [esi],dh
  41fc34:	mov    DWORD PTR [ebx+0x3eba3f7e],esp
  41fc3a:	pop    eax
  41fc3b:	ins    BYTE PTR es:[edi],dx
  41fc3c:	dec    ebx
  41fc3d:	sub    DWORD PTR [ecx+0x4d9d56b2],ecx
  41fc43:	dec    esp
  41fc44:	push   es
  41fc45:	pop    esp
  41fc46:	dec    esp
  41fc47:	and    DWORD PTR [ebx],eax
  41fc49:	pop    esp
  41fc4a:	rdtsc  
  41fc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4d:	inc    edx
  41fc4e:	mov    bl,0x99
  41fc50:	test   ecx,esi
  41fc52:	push   edi
  41fc53:	pop    eax
  41fc54:	mov    edx,0x9a906d4b
  41fc59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc5a:	push   ss
  41fc5b:	imul   ebx,DWORD PTR [ecx+0x6077ac8d],0xac7447bc
  41fc65:	(bad)  
  41fc66:	ds stos BYTE PTR es:[edi],al
  41fc68:	fcmovb st,st(3)
  41fc6a:	out    dx,al
  41fc6b:	mov    bl,0x6a
  41fc6d:	adc    eax,0x850263f7
  41fc72:	cmc    
  41fc73:	rcl    BYTE PTR [edx+0x4d1d790e],0x83
  41fc7a:	aas    
  41fc7b:	into   
  41fc7c:	dec    ebx
  41fc7d:	dec    ebx
  41fc7e:	in     al,dx
  41fc7f:	push   0x44e4654c
  41fc84:	into   
  41fc85:	aaa    
  41fc86:	in     al,0x43
  41fc88:	daa    
  41fc89:	ds nop
  41fc8b:	adc    eax,0x60725ce5
  41fc90:	aam    0x38
  41fc92:	dec    ecx
  41fc93:	test   DWORD PTR [esi+0x20],ebp
  41fc96:	cli    
  41fc97:	jmp    0xe574a6cb
  41fc9c:	jp     0x41fc3d
  41fc9e:	cmp    eax,0x6f8eed1e
  41fca3:	dec    esp
  41fca4:	push   esi
  41fca5:	push   0xe87abbf7
  41fcaa:	call   0xb6a8:0x57a27ed1
  41fcb1:	cmp    cl,ch
  41fcb3:	mov    esp,0xdc3c51e3
  41fcb8:	and    cl,0x12
  41fcbb:	(bad)  
  41fcbc:	inc    edx
  41fcbd:	mov    bh,0x9b
  41fcbf:	sub    ebp,eax
  41fcc1:	xor    al,0x73
  41fcc3:	ins    BYTE PTR es:[edi],dx
  41fcc4:	shl    DWORD PTR [esp+edi*2-0x4e],1
  41fcc8:	cmp    eax,0x6102e1
  41fccd:	add    ebx,edi
  41fccf:	mov    dl,0xae
  41fcd1:	inc    ecx
  41fcd2:	add    al,0x1d
  41fcd4:	inc    edi
  41fcd5:	mov    bh,BYTE PTR [ebx]
  41fcd7:	dec    eax
  41fcd8:	fwait
  41fcd9:	aas    
  41fcda:	sbb    edx,ecx
  41fcdc:	out    0x71,al
  41fcde:	aam    0xb9
  41fce0:	push   ecx
  41fce1:	push   eax
  41fce2:	lahf   
  41fce3:	or     DWORD PTR [ebx+0x27],edx
  41fce6:	xchg   ebx,eax
  41fce7:	test   eax,0x26671463
  41fcec:	sbb    ch,BYTE PTR [ecx-0x13]
  41fcef:	jp     0x41fd6a
  41fcf1:	into   
  41fcf2:	mov    ecx,0x83872627
  41fcf7:	jmp    FWORD PTR [ebp+0x2ad12761]
  41fcfd:	adc    BYTE PTR [ecx+0x6fe6b943],ah
  41fd03:	stos   BYTE PTR es:[edi],al
  41fd04:	mov    dh,0x8e
  41fd06:	xchg   edi,eax
  41fd07:	mov    ebx,0x1de6f4f6
  41fd0c:	inc    ebx
  41fd0d:	xchg   esi,eax
  41fd0e:	hlt    
  41fd0f:	sbb    BYTE PTR [ebx+0x70db4262],dh
  41fd15:	rol    DWORD PTR [eax-0x6d6385e1],cl
  41fd1b:	xchg   edx,eax
  41fd1c:	or     edi,DWORD PTR [ebp+0x74]
  41fd1f:	bnd jnp 0x41fd95
  41fd22:	mov    ah,0x89
  41fd24:	cmp    al,0x63
  41fd26:	xchg   BYTE PTR [edi],cl
  41fd28:	in     eax,dx
  41fd29:	fdiv   QWORD PTR [eax]
  41fd2b:	in     al,0xf1
  41fd2d:	addr16 jmp 0x41fd10
  41fd30:	aaa    
  41fd31:	dec    eax
  41fd32:	stc    
  41fd33:	push   es
  41fd34:	jae    0x41fdaa
  41fd36:	mov    esp,0xdfa7f45d
  41fd3b:	mov    ecx,0x6db945ad
  41fd40:	or     al,0x7
  41fd42:	or     ah,dh
  41fd44:	mov    ebp,0xe56a6d6f
  41fd49:	adc    eax,0x96ef1752
  41fd4e:	stos   BYTE PTR es:[edi],al
  41fd4f:	jmp    0x46fa:0xb325160e
  41fd56:	sbb    esp,DWORD PTR [ebp-0x6f]
  41fd59:	dec    ebx
  41fd5a:	sub    DWORD PTR [esi],edx
  41fd5c:	mov    ds:0xf37f9f1d,al
  41fd61:	adc    al,0x15
  41fd63:	push   ecx
  41fd64:	pop    esi
  41fd65:	in     al,dx
  41fd66:	and    al,0x27
  41fd68:	fisubr WORD PTR [eax]
  41fd6a:	xlat   BYTE PTR ds:[ebx]
  41fd6b:	fcom   QWORD PTR [esi]
  41fd6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd6e:	pop    esp
  41fd6f:	outs   dx,BYTE PTR ds:[esi]
  41fd70:	jbe    0x41fdb9
  41fd72:	xchg   edx,eax
  41fd73:	ss sub ebp,edx
  41fd76:	nop
  41fd77:	sar    BYTE PTR [ecx],1
  41fd79:	(bad)  
  41fd7a:	(bad)
  41fd7e:	jbe    0x41fd42
  41fd80:	xor    al,0xcb
  41fd82:	pop    edx
  41fd83:	retf   
  41fd84:	mov    al,0xcc
  41fd86:	outs   dx,BYTE PTR ds:[esi]
  41fd87:	out    0xfc,al
  41fd89:	cmp    DWORD PTR [edi],0xff4609af
  41fd8f:	out    dx,eax
  41fd90:	nop
  41fd91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd92:	adc    DWORD PTR cs:[esi-0x2a],ebx
  41fd96:	pop    es
  41fd97:	pop    ds
  41fd98:	fnstenv [eax-0x6603a89]
  41fd9e:	bound  edx,QWORD PTR [ebx+0x23397b33]
  41fda4:	xor    cl,BYTE PTR [ecx-0x7d]
  41fda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda8:	xchg   BYTE PTR [ecx],dl
  41fdaa:	cwde   
  41fdab:	adc    eax,ecx
  41fdad:	sub    ch,BYTE PTR [eax-0x2eb7c4b]
  41fdb3:	add    ebx,DWORD PTR [ebp+0x55]
  41fdb6:	jo     0x41fde9
  41fdb8:	ins    DWORD PTR es:[edi],dx
  41fdb9:	pop    edx
  41fdba:	bound  eax,QWORD PTR [edx+0x6e]
  41fdbd:	jno    0x41fd5b
  41fdbf:	je     0x41fde9
  41fdc1:	daa    
  41fdc2:	in     eax,0x65
  41fdc4:	outs   dx,DWORD PTR ds:[esi]
  41fdc5:	test   BYTE PTR [esi],ch
  41fdc7:	cli    
  41fdc8:	outs   dx,BYTE PTR ds:[esi]
  41fdc9:	jne    0x41fdc3
  41fdcb:	mov    BYTE PTR ds:0xabd8ede8,0x68
  41fdd2:	les    esi,FWORD PTR [eax]
  41fdd4:	imul   eax,DWORD PTR ds:0x30c4ca1b,0x15047566
  41fdde:	push   0xdfddb146
  41fde3:	push   cs
  41fde4:	add    DWORD PTR [ebp-0x70f09c81],0x6c0b7345
  41fdee:	adc    eax,0x89fae1ad
  41fdf3:	addr16 dec esi
  41fdf5:	cld    
  41fdf6:	repz call 0xf288:0x497eb5fb
  41fdfe:	sub    al,0xdc
  41fe00:	sbb    ah,BYTE PTR [eax-0x46c2a205]
  41fe06:	xchg   bl,ch
  41fe08:	adc    ch,ah
  41fe0a:	cmp    esp,DWORD PTR [eax-0x2598f214]
  41fe10:	and    edi,edx
  41fe12:	iret   
  41fe13:	or     al,0xdf
  41fe15:	xor    BYTE PTR ds:0x163fd219,cl
  41fe1b:	pop    es
  41fe1c:	enter  0x38ad,0x1c
  41fe20:	cmp    dh,BYTE PTR [eax]
  41fe22:	(bad)  
  41fe23:	hlt    
  41fe24:	mov    al,0x7a
  41fe26:	pop    edx
  41fe27:	push   cs
  41fe28:	sbb    esp,edi
  41fe2a:	and    ebx,0x6bf476f2
  41fe30:	cdq    
  41fe31:	sahf   
  41fe32:	scas   eax,DWORD PTR es:[edi]
  41fe33:	and    bh,BYTE PTR [esi-0x5a]
  41fe36:	jl     0x41feb6
  41fe38:	fsub   QWORD PTR [edi+0x3a041c8f]
  41fe3e:	push   ds
  41fe3f:	mov    gs,WORD PTR [ecx]
  41fe41:	cwde   
  41fe42:	mov    ecx,0x4b56991a
  41fe47:	fsubr  QWORD PTR [ebp+0x546e0726]
  41fe4d:	push   ds
  41fe4e:	mov    bh,0xd9
  41fe50:	xchg   edx,eax
  41fe51:	jne    0x41fe94
  41fe53:	lods   eax,DWORD PTR ds:[esi]
  41fe54:	xor    al,0xf1
  41fe56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe57:	iret   
  41fe58:	mov    dh,0xec
  41fe5a:	xor    al,0xdd
  41fe5c:	xchg   esi,eax
  41fe5d:	pop    esp
  41fe5e:	inc    edx
  41fe5f:	cdq    
  41fe60:	xor    eax,0x2a0002ba
  41fe65:	jmp    0x83be:0x1efd0a1
  41fe6c:	cli    
  41fe6d:	mov    ah,0xee
  41fe6f:	adc    eax,0xca435e48
  41fe74:	mov    dh,0x82
  41fe76:	xor    DWORD PTR [edi+0x3216722f],ecx
  41fe7c:	add    BYTE PTR [ecx],bh
  41fe7e:	dec    ebx
  41fe7f:	sub    DWORD PTR [edx+0x0],0x6
  41fe83:	enter  0x8c16,0x2a
  41fe87:	push   esp
  41fe88:	cs sub dl,dh
  41fe8b:	dec    ebp
  41fe8c:	inc    edi
  41fe8d:	sub    ecx,esi
  41fe8f:	jb     0x41fe9f
  41fe91:	cmp    BYTE PTR [esi-0x5f],ch
  41fe94:	(bad)  
  41fe95:	sub    esp,DWORD PTR [edx+0x6]
  41fe98:	sub    esi,ebx
  41fe9a:	jns    0x41fe99
  41fe9c:	xchg   edx,eax
  41fe9d:	mov    ebx,0x66d8427e
  41fea2:	sub    BYTE PTR [ebx-0x34],bl
  41fea5:	daa    
  41fea6:	dec    esi
  41fea7:	adc    bl,BYTE PTR [ecx-0x4a483544]
  41fead:	push   edx
  41feae:	stos   DWORD PTR es:[edi],eax
  41feaf:	rcr    BYTE PTR [edx-0x21],cl
  41feb2:	pop    eax
  41feb3:	pop    edi
  41feb4:	dec    edx
  41feb5:	ins    DWORD PTR es:[edi],dx
  41feb6:	fadd   QWORD PTR [eax-0x73]
  41feb9:	cwde   
  41feba:	fisub  DWORD PTR ds:0x555e8d94
  41fec0:	int    0xe0
  41fec2:	adc    ecx,DWORD PTR [ecx]
  41fec4:	mov    bh,0xa
  41fec6:	pop    ebp
  41fec7:	aad    0x13
  41fec9:	aad    0xa9
  41fecb:	or     DWORD PTR [edx-0x5],0xfffffff4
  41fecf:	loopne 0x41fef7
  41fed1:	inc    ebx
  41fed2:	rep lods al,BYTE PTR ds:[esi]
  41fed4:	xchg   ebp,eax
  41fed5:	scas   eax,DWORD PTR es:[edi]
  41fed6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fed8:	and    eax,0x926f6ad1
  41fedd:	push   es
  41fede:	retf   0xdd0a
  41fee1:	std    
  41fee2:	in     al,0x13
  41fee4:	leave  
  41fee5:	lock (bad) 
  41fee7:	call   0xe6efd4ff
  41feec:	jbe    0x41feef
  41feee:	cmp    al,BYTE PTR [edi]
  41fef0:	cli    
  41fef1:	or     DWORD PTR ds:0xa49ca9a5,ecx
  41fef7:	fucom  st(6)
  41fef9:	mov    ds:0xafa93907,al
  41fefe:	repnz or BYTE PTR [esi+0x2c2be37a],al
  41ff05:	mov    ebp,0x16034150
  41ff0a:	popf   
  41ff0b:	sub    eax,0x19a73005
  41ff10:	and    ecx,ecx
  41ff12:	xchg   ebx,eax
  41ff13:	retf   
  41ff14:	(bad)  
  41ff15:	out    dx,al
  41ff16:	imul   ecx,DWORD PTR [esi],0x72b847ee
  41ff1c:	dec    esi
  41ff1d:	ja     0x41ff7c
  41ff1f:	div    BYTE PTR [eax]
  41ff21:	pop    ss
  41ff22:	lea    edx,[ebx+0x32]
  41ff25:	lods   al,BYTE PTR ds:[esi]
  41ff26:	mov    ecx,0x8e9970b4
  41ff2b:	dec    esi
  41ff2c:	push   edi
  41ff2d:	push   edi
  41ff2e:	push   ebx
  41ff2f:	xchg   edx,eax
  41ff30:	xor    ebp,edx
  41ff32:	test   DWORD PTR [edx],eax
  41ff34:	jmp    DWORD PTR [edx+0xf]
  41ff37:	(bad)  
  41ff38:	fisttp QWORD PTR [ecx-0x4eb408ff]
  41ff3e:	icebp  
  41ff3f:	loopne 0x41ff22
  41ff41:	and    DWORD PTR [ebp+0x16],ebx
  41ff44:	push   es
  41ff45:	xlat   BYTE PTR ds:[ebx]
  41ff46:	push   0x8
  41ff48:	fstp   TBYTE PTR [edx]
  41ff4a:	jle    0x41ff9f
  41ff4c:	test   BYTE PTR [eax-0x72],cl
  41ff4f:	mov    eax,eax
  41ff51:	xor    al,BYTE PTR [ecx+0x67f77b56]
  41ff57:	pop    edi
  41ff58:	loopne 0x41ff6f
  41ff5a:	mov    esp,0x280e5ff3
  41ff5f:	jbe    0x41ff84
  41ff61:	xor    al,0xd1
  41ff63:	fwait
  41ff64:	scas   al,BYTE PTR es:[edi]
  41ff65:	cdq    
  41ff66:	push   cs
  41ff67:	jmp    0x2f68:0x84fb69c3
  41ff6e:	push   ebx
  41ff6f:	hlt    
  41ff70:	repnz lahf 
  41ff72:	imul   esi,DWORD PTR [ebp-0x743eb8],0xffffffa4
  41ff79:	std    
  41ff7a:	(bad)  
  41ff7b:	icebp  
  41ff7c:	mov    edx,0x810fca31
  41ff81:	push   es
  41ff82:	ror    BYTE PTR [ebp+0x4355da82],0x34
  41ff89:	pop    edi
  41ff8a:	pinsrw mm6,WORD PTR [esp+ebx*1+0x639df651],0x70
  41ff93:	int    0xdb
  41ff95:	push   ebx
  41ff96:	ja     0x41ff97
  41ff98:	imul   esp,DWORD PTR [esi*1+0x4674b49c],0x14
  41ffa0:	dec    esi
  41ffa1:	xchg   esp,eax
  41ffa2:	je     0x41ffb5
  41ffa4:	pop    ebp
  41ffa5:	rol    DWORD PTR [ecx+0x19c14e91],0x45
  41ffac:	jne    0x41ff59
  41ffae:	(bad)  
  41ffaf:	fimul  WORD PTR [edx-0x6c98c638]
  41ffb5:	inc    eax
  41ffb6:	repz loope 0x41ffa1
  41ffb9:	lea    esi,[edi-0x2f]
  41ffbc:	(bad)  
  41ffbd:	jb     0x41ff6e
  41ffbf:	hlt    
  41ffc0:	add    ecx,DWORD PTR [eax+0x5b]
  41ffc3:	stos   BYTE PTR es:[edi],al
  41ffc4:	test   BYTE PTR [ebp-0x55],0x83
  41ffc8:	sbb    eax,0x620da113
  41ffcd:	mov    bh,0xbd
  41ffcf:	call   0x58b0:0xc0f78197
  41ffd6:	aam    0xb1
  41ffd8:	(bad)  
  41ffd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffdb:	jne    0x41ffa2
  41ffdd:	std    
  41ffde:	mov    esi,0xdfffce77
  41ffe3:	jmp    0xd20bb909
  41ffe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe9:	push   cs
  41ffea:	pop    esi
  41ffeb:	daa    
  41ffec:	mov    bh,BYTE PTR [ebx]
  41ffee:	pop    ds
  41ffef:	in     al,0xea
  41fff1:	int    0x9e
  41fff3:	out    0x3c,eax
  41fff5:	push   esi
  41fff6:	(bad)
  41fff9:	or     eax,0xaec88ed6
  41fffe:	inc    ecx
  41ffff:	pop    esi
  420000:	cmc    
  420001:	fs sbb al,0x93
  420004:	add    bl,BYTE PTR [ebx+0x45]
  420007:	fisttp DWORD PTR [edx+0x6bc9a6e7]
  42000d:	adc    bl,BYTE PTR [esi-0x7a]
  420010:	mov    ds:0x62abe934,eax
  420015:	test   BYTE PTR [esi-0x8],0x45
  420019:	mov    ds:0xef18cebb,eax
  42001e:	mov    dl,0x56
  420020:	push   esp
  420021:	xchg   ebx,eax
  420022:	jg     0x41ffb8
  420024:	inc    ebx
  420025:	repnz in al,0x2f
  420028:	push   0xd441a019
  42002d:	(bad)  
  42002e:	outs   dx,DWORD PTR ds:[esi]
  42002f:	mov    cs,esi
  420031:	xor    bl,BYTE PTR [esi-0x12]
  420034:	pop    ebx
  420035:	(bad)  
  420036:	and    eax,0xd29e2ae9
  42003b:	push   eax
  42003c:	adc    al,0xbe
  42003e:	(bad)  
  42003f:	mov    dh,0xc6
  420041:	mov    esi,0x96c221ea
  420046:	popf   
  420047:	pop    eax
  420048:	adc    eax,0x56cdd848
  42004d:	and    eax,0x6c03223a
  420052:	cmp    esi,DWORD PTR [ebx+ebx*4+0x72]
  420056:	jno    0x4200ba
  420058:	xchg   BYTE PTR [esi+esi*2-0x1c],dl
  42005c:	mov    ah,ch
  42005e:	imul   edx,DWORD PTR [ebx-0x2e53a13b],0x9229025c
  420068:	mov    ch,0xe9
  42006a:	mov    ebx,0x2153331f
  42006f:	scas   eax,DWORD PTR es:[edi]
  420070:	fidiv  WORD PTR [edi-0x64]
  420073:	and    edi,eax
  420075:	jl     0x42005f
  420077:	imul   DWORD PTR [edx+0x52dd1ea7]
  42007d:	outs   dx,DWORD PTR ds:[esi]
  42007e:	cmp    al,0xe0
  420080:	xchg   ecx,eax
  420081:	add    dl,BYTE PTR [ebx]
  420083:	mov    dh,0xbd
  420085:	adc    BYTE PTR [ecx-0x68a7cc52],dl
  42008b:	outs   dx,BYTE PTR ds:[esi]
  42008c:	fisub  WORD PTR [esi+0x27]
  42008f:	xor    BYTE PTR [ebp-0x69],ch
  420092:	mov    ebp,0xb1bd2cf4
  420097:	mov    cl,0x51
  420099:	stos   DWORD PTR es:[edi],eax
  42009a:	add    eax,0xfda96717
  42009f:	sti    
  4200a0:	dec    edi
  4200a1:	rcl    BYTE PTR [edi-0xf4fd4a0],cl
  4200a7:	ror    BYTE PTR [ecx-0x29],1
  4200aa:	mov    edi,0xce99da9c
  4200af:	push   0x16
  4200b1:	leave  
  4200b2:	clc    
  4200b3:	aam    0xf
  4200b5:	lock fild QWORD PTR [ebp-0x20]
  4200b9:	or     eax,0x5c7e087b
  4200be:	push   ss
  4200bf:	rcl    ebx,cl
  4200c1:	xchg   esp,eax
  4200c2:	(bad)  
  4200c3:	jo     0x420093
  4200c5:	enter  0x6b1b,0xea
  4200c9:	mov    dl,0xb
  4200cb:	imul   eax,DWORD PTR [edi-0x7e730a71],0xc
  4200d2:	ss cli 
  4200d4:	pop    esi
  4200d5:	loopne 0x4200f0
  4200d7:	dec    edx
  4200d8:	and    dh,BYTE PTR [ecx+0x62]
  4200db:	(bad)  
  4200dc:	mov    esp,0x9c01ed79
  4200e1:	iret   
  4200e2:	stos   DWORD PTR es:[edi],eax
  4200e3:	push   0xf5e9e04
  4200e8:	push   esp
  4200e9:	jmp    0xa8fc52c9
  4200ee:	add    edi,ebp
  4200f0:	jp     0x4200a0
  4200f2:	pushf  
  4200f3:	mov    edi,0x76a735c7
  4200f8:	lods   al,BYTE PTR ds:[esi]
  4200f9:	push   bp
  4200fb:	je     0x420080
  4200fd:	rcr    DWORD PTR [edi-0x43c8c3eb],1
  420103:	inc    esi
  420104:	mov    esi,0x58595162
  420109:	cli    
  42010a:	sbb    BYTE PTR [esi-0x5a],0x42
  42010e:	mov    BYTE PTR [ebx+ebp*1-0x2ba8dcda],al
  420115:	mov    bh,BYTE PTR [edi+edx*8-0x6b]
  420119:	je     0x420142
  42011b:	fimul  DWORD PTR [ecx]
  42011d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42011e:	xchg   esp,eax
  42011f:	cdq    
  420120:	lds    esp,FWORD PTR [esi+eax*1]
  420123:	es jb  0x4200cb
  420126:	pop    edx
  420127:	dec    edi
  420128:	or     BYTE PTR [ebx+0x78051d22],bl
  42012e:	jl     0x4200c8
  420130:	cmp    eax,0x3a558493
  420135:	cwde   
  420136:	mov    ds:0xca70f38d,eax
  42013b:	aaa    
  42013c:	in     al,0x9e
  42013e:	ins    BYTE PTR es:[edi],dx
  42013f:	inc    edx
  420140:	xor    ebp,DWORD PTR ds:0x23d05864
  420146:	mov    esp,0x6351556a
  42014b:	cmp    BYTE PTR [ecx],0xb1
  42014e:	inc    ebx
  42014f:	cmp    al,0x9f
  420151:	xchg   ebx,eax
  420152:	fs cmp al,0x70
  420155:	mov    cl,0x99
  420157:	sbb    BYTE PTR [edi+0x44],0xea
  42015b:	lea    esi,[ebx-0x6e]
  42015e:	(bad)  
  42015f:	mov    edx,0xa690c647
  420164:	in     eax,dx
  420165:	nop
  420166:	mov    ds:0xb989a672,eax
  42016b:	iret   
  42016c:	pop    eax
  42016d:	push   0xafafb22c
  420172:	lahf   
  420173:	aas    
  420174:	repnz call 0x824d:0xf6dfd3d3
  42017c:	pop    ebp
  42017d:	inc    ebp
  42017e:	int3   
  42017f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420180:	mov    dh,0xe2
  420182:	jne    0x4201a4
  420184:	imul   bh
  420186:	or     al,0xd7
  420188:	push   eax
  420189:	(bad)  
  42018a:	loop   0x4201d5
  42018c:	add    ah,dl
  42018e:	clc    
  42018f:	pop    esp
  420190:	and    bl,BYTE PTR [ebp+0x75de044a]
  420196:	push   eax
  420197:	sar    BYTE PTR [edi-0x9],0xf3
  42019b:	mov    bl,0xe4
  42019d:	xchg   esp,eax
  42019e:	xchg   dl,ah
  4201a0:	mov    ch,0x5f
  4201a2:	leave  
  4201a3:	(bad)  
  4201a4:	fwait
  4201a5:	push   ebx
  4201a6:	jl     0x42012c
  4201a8:	mov    ecx,cs
  4201aa:	xor    edx,esp
  4201ac:	call   0x20eb:0x27cdd234
  4201b3:	jle    0x42014d
  4201b5:	xchg   edx,eax
  4201b6:	mov    dh,0x8b
  4201b8:	pop    ds
  4201b9:	lahf   
  4201ba:	repnz sbb eax,0x269130b6
  4201c0:	cmp    DWORD PTR [ebx-0x4f1f8929],edi
  4201c6:	adc    ebp,ecx
  4201c8:	aam    0x46
  4201ca:	sbb    al,0xf2
  4201cc:	jle    0x42015f
  4201ce:	popf   
  4201cf:	repnz aam 0x80
  4201d2:	(bad)  
  4201d3:	pop    ds
  4201d4:	xor    edi,DWORD PTR [esi]
  4201d6:	add    BYTE PTR es:[eax+eiz*1],bh
  4201da:	mov    ecx,0x56717048
  4201df:	lock punpcklbw mm3,DWORD PTR [ecx]
  4201e3:	mov    edx,0x78c24834
  4201e8:	and    eax,0x1eb36f51
  4201ed:	or     ebp,DWORD PTR [eax+0x3]
  4201f0:	outs   dx,DWORD PTR ds:[esi]
  4201f1:	push   ebx
  4201f2:	call   0xf1e90b07
  4201f7:	add    BYTE PTR [edi],ch
  4201f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201fa:	push   eax
  4201fb:	xchg   ebx,eax
  4201fc:	xor    eax,0x8bcf1214
  420201:	shr    DWORD PTR [esi+0x4c4b2315],0xa5
  420208:	fwait
  420209:	jo     0x4201c1
  42020b:	data16 cld 
  42020d:	ja     0x42024a
  42020f:	fld    TBYTE PTR [esi+0x46b80072]
  420215:	push   ebp
  420216:	out    dx,al
  420217:	mov    ah,0x7d
  420219:	int    0xd
  42021b:	test   ebp,esi
  42021d:	imul   esp,DWORD PTR [ebp-0x36c39a25],0xfe058fd2
  420227:	dec    eax
  420228:	mov    ds:0xf962774a,al
  42022d:	outs   dx,BYTE PTR ds:[esi]
  42022e:	pop    ebx
  42022f:	mov    edi,0x221e0152
  420234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420235:	adc    al,BYTE PTR [edi]
  420237:	cmc    
  420238:	fnstcw WORD PTR [edi+0xa0c1dd3]
  42023e:	xchg   esp,eax
  42023f:	arpl   WORD PTR [esp+esi*2+0x2ec09c71],ax
  420246:	arpl   sp,dx
  420248:	arpl   WORD PTR [ebx],bx
  42024a:	adc    eax,0x80ca6917
  42024f:	pop    edi
  420250:	loope  0x4201fc
  420252:	int    0xf5
  420254:	jmp    0x45e1cdca
  420259:	jo     0x420290
  42025b:	imul   ebp,DWORD PTR [eax-0x72],0xa9d6959d
  420262:	cli    
  420263:	jbe    0x420283
  420265:	sar    DWORD PTR [ecx],cl
  420267:	xchg   esi,eax
  420268:	dec    edx
  420269:	jne    0x420290
  42026b:	or     al,0xe6
  42026d:	jbe    0x420222
  42026f:	gs sbb dl,cl
  420272:	fild   DWORD PTR es:[eax]
  420275:	pop    ds
  420276:	loop   0x4202ca
  420278:	shl    ecx,0xb
  42027b:	sbb    bh,BYTE PTR [eax-0x36209cb8]
  420281:	das    
  420282:	dec    ecx
  420283:	mov    edi,0x15f5986f
  420288:	rcl    DWORD PTR [edx],0xa2
  42028b:	(bad)  
  42028d:	gs nop
  42028f:	push   es
  420290:	or     al,0x71
  420292:	ss gs cs dec esi
  420296:	clc    
  420297:	popa   
  420298:	into   
  420299:	or     DWORD PTR [ecx],esp
  42029b:	xchg   edi,eax
  42029c:	leave  
  42029d:	jo     0x4202f0
  42029f:	pushf  
  4202a0:	and    DWORD PTR [ebp+esi*1+0x78],ebx
  4202a4:	sar    DWORD PTR [eax-0x375e5dfd],1
  4202aa:	jbe    0x4202da
  4202ac:	pop    esi
  4202ad:	jb     0x42031d
  4202af:	aam    0x24
  4202b1:	pop    ebp
  4202b2:	pop    ds
  4202b3:	ja     0x42031b
  4202b5:	add    ebx,DWORD PTR [esi+0x647f7e28]
  4202bb:	out    dx,al
  4202bc:	jbe    0x42031c
  4202be:	jbe    0x420314
  4202c0:	cmp    eax,0xfb5c193f
  4202c5:	shl    BYTE PTR [eax],cl
  4202c7:	in     eax,dx
  4202c8:	jae    0x42030e
  4202ca:	dec    esi
  4202cb:	mov    cs,WORD PTR [ecx+0x73]
  4202ce:	push   edx
  4202cf:	into   
  4202d0:	push   ecx
  4202d1:	(bad)  
  4202d2:	loop   0x4202c6
  4202d4:	inc    edi
  4202d5:	push   cs
  4202d6:	xchg   BYTE PTR [edx],bl
  4202d8:	mov    ebp,0x56d1cb32
  4202dd:	adc    al,BYTE PTR [esi+0x542ce0ad]
  4202e3:	test   BYTE PTR [ecx+0x2e49cf2f],bh
  4202e9:	loopne 0x42028b
  4202eb:	inc    esi
  4202ec:	jnp    0x420344
  4202ee:	adc    BYTE PTR [ebp-0x31],dl
  4202f1:	pop    ds
  4202f2:	inc    eax
  4202f3:	shl    ch,1
  4202f5:	ss inc edx
  4202f7:	fwait
  4202f8:	add    al,0xb3
  4202fa:	test   BYTE PTR [edi-0x2],dh
  4202fd:	mov    WORD PTR [edi],cs
  4202ff:	call   0x4833f670
  420304:	ret    0x169f
  420307:	or     eax,0x44b89521
  42030c:	retf   
  42030d:	sub    DWORD PTR [esi+0x509bf891],edi
  420313:	xor    BYTE PTR [edi+0x247e5bd1],ch
  420319:	jg     0x42037f
  42031b:	and    bh,BYTE PTR [esp+ecx*1-0x55]
  42031f:	mov    eax,ds:0x5534827c
  420324:	cs cmp ebp,ebx
  420327:	fmul   st,st(4)
  420329:	mov    esi,0x13960df7
  42032e:	repz xchg esp,eax
  420330:	aad    0xb7
  420332:	mov    DWORD PTR ds:0x6c7b3a11,ebp
  420338:	idiv   DWORD PTR ds:0x5dc70f6c
  42033e:	mov    BYTE PTR [ecx+ebp*1+0x305d3bbb],ah
  420345:	mov    dh,0x1d
  420347:	arpl   WORD PTR [eax],dx
  420349:	xchg   esi,eax
  42034b:	mov    dl,0x3c
  42034d:	cmp    al,BYTE PTR [edx+0x6921e0d5]
  420353:	dec    esp
  420354:	mov    ebx,0x1f608818
  420359:	mov    BYTE PTR [esi],bl
  42035b:	mov    BYTE PTR [eax-0x433ddcc9],al
  420361:	and    eax,0x22a5d5c8
  420366:	adc    ebx,esi
  420368:	pop    esi
  420369:	retf   
  42036a:	inc    edi
  42036b:	cli    
  42036c:	adc    BYTE PTR ds:0xb92cf231,cl
  420372:	ins    DWORD PTR es:[edi],dx
  420373:	inc    ebp
  420374:	push   DWORD PTR [esi]
  420376:	call   0xf95b:0x368a6846
  42037d:	lock nop
  42037f:	fxch   st(5)
  420381:	in     eax,0x49
  420383:	jmp    0x1d7d2629
  420388:	pop    edx
  420389:	sub    edi,DWORD PTR [edx]
  42038b:	push   ds
  42038c:	xor    al,0xde
  42038e:	inc    edx
  42038f:	(bad)  
  420390:	out    0xa,al
  420392:	outs   dx,DWORD PTR ds:[esi]
  420393:	popa   
  420394:	aas    
  420395:	sbb    esp,DWORD PTR [ebx+0x32]
  420398:	or     ebx,DWORD PTR [ebx+0xda3a631]
  42039e:	or     BYTE PTR es:[esp+ebp*1-0x39ef1040],bl
  4203a6:	xor    DWORD PTR [esi+0x59660733],ebx
  4203ac:	pop    ebx
  4203ad:	mov    ah,0xbb
  4203af:	sbb    al,0x32
  4203b1:	inc    eax
  4203b2:	sahf   
  4203b3:	or     eax,0xfd098850
  4203b8:	cli    
  4203b9:	cld    
  4203ba:	or     DWORD PTR [ecx-0x586bff80],0xff9869d
  4203c4:	aad    0xf6
  4203c6:	mov    edi,0xc766f162
  4203cb:	int    0xaa
  4203cd:	jno    0x420442
  4203cf:	sbb    DWORD PTR [edi],esi
  4203d1:	test   BYTE PTR [esi-0x9fe40ad],bl
  4203d7:	inc    esi
  4203d9:	in     al,dx
  4203da:	mov    edx,0x3dd2f025
  4203df:	jge    0x420371
  4203e1:	ss ins DWORD PTR es:[edi],dx
  4203e3:	imul   esi,edi,0x245f7e7d
  4203e9:	pcmpgtb mm5,QWORD PTR [ecx+esi*8]
  4203ed:	in     al,0xe3
  4203ef:	out    0x96,eax
  4203f1:	fbld   TBYTE PTR [esi+0x25c59173]
  4203f7:	xlat   BYTE PTR ds:[ebx]
  4203f8:	xchg   edi,eax
  4203f9:	adc    eax,0xbaf00b1e
  4203fe:	add    al,0xfa
  420400:	(bad)  
  420401:	aad    0x38
  420403:	hlt    
  420404:	and    eax,ebp
  420406:	add    al,0xed
  420408:	mov    eax,ds:0x1fef7610
  42040d:	or     DWORD PTR [edi-0x4f],esp
  420410:	push   0xd6ce2497
  420415:	or     BYTE PTR [ecx],dl
  420417:	in     al,dx
  420418:	jno    0x420467
  42041a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42041b:	ja     0x4203ce
  42041d:	adc    al,0xc4
  42041f:	jge    0x4203e5
  420421:	xchg   edx,eax
  420422:	xor    al,0xb
  420424:	mov    edx,0x3747499d
  420429:	mov    eax,ds:0xc8d83a7e
  42042e:	push   ds
  42042f:	jp     0x4203f4
  420431:	jmp    0x5edb668b
  420436:	adc    al,0x6e
  420438:	fadd   st,st(6)
  42043a:	inc    esp
  42043b:	cwde   
  42043c:	xchg   ecx,eax
  42043d:	jmp    0xe5a2d26a
  420442:	adc    ecx,DWORD PTR ds:0x38857d2e
  420448:	jg     0x42043a
  42044a:	sub    BYTE PTR [edx-0x1b],cl
  42044d:	sahf   
  42044e:	sub    bl,bh
  420450:	fs adc esi,edi
  420453:	imul   ebx,DWORD PTR [edx],0x1
  420456:	jnp    0x4204c7
  420458:	mov    cl,0x56
  42045a:	call   0x332a:0x96521176
  420461:	dec    edx
  420462:	retf   
  420463:	xchg   esi,eax
  420464:	add    al,0xe1
  420466:	outs   dx,WORD PTR ds:[esi]
  420468:	retf   
  420469:	mov    esp,0xa58f6265
  42046e:	cmp    DWORD PTR [esi-0x50f6160a],esp
  420474:	and    BYTE PTR [esi+0x317ef88d],ah
  42047a:	and    edi,DWORD PTR [ecx+0x33]
  42047d:	dec    edx
  42047e:	mov    eax,0x23216086
  420483:	xchg   ebx,eax
  420484:	int3   
  420485:	mov    esp,0xf1e01f8e
  42048a:	scas   al,BYTE PTR es:[edi]
  42048b:	push   ecx
  42048c:	mov    al,ds:0x8c729baa
  420491:	pop    es
  420492:	jae    0x4204a0
  420494:	mov    esp,0x2589693b
  420499:	ret    0xa677
  42049c:	jge    0x420448
  42049e:	mov    dl,0x2d
  4204a0:	xor    al,0xa6
  4204a2:	lods   al,BYTE PTR ds:[esi]
  4204a3:	add    al,BYTE PTR [ebx]
  4204a5:	inc    edi
  4204a6:	jmp    0xd9f49db4
  4204ab:	and    DWORD PTR [ecx-0x4ad39098],eax
  4204b1:	push   esp
  4204b2:	xchg   DWORD PTR [ecx-0x3803267d],eax
  4204b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204b9:	dec    edx
  4204ba:	cdq    
  4204bb:	xor    esp,edi
  4204bd:	ss popw ds
  4204c0:	jmp    0x5a9c:0x6cc1eb2b
  4204c7:	js     0x42044d
  4204c9:	daa    
  4204ca:	out    0xef,al
  4204cc:	out    0x57,eax
  4204ce:	test   DWORD PTR [edx],eax
  4204d0:	xor    DWORD PTR [edi-0x47],ecx
  4204d3:	mov    esi,ss
  4204d5:	mov    ds:0xa238091,eax
  4204da:	jno    0x420461
  4204dc:	mov    ebp,0x5763412b
  4204e1:	add    al,0x8d
  4204e3:	fidiv  WORD PTR [esi]
  4204e5:	lahf   
  4204e6:	in     eax,0x54
  4204e8:	int3   
  4204e9:	mov    esp,DWORD PTR [esi+0x7c7c67a7]
  4204ef:	mov    esi,0x77ad7154
  4204f4:	mov    edi,0x6649b81a
  4204f9:	push   edx
  4204fa:	fild   DWORD PTR [eax-0x1a]
  4204fd:	sbb    al,0x16
  4204ff:	xor    edx,DWORD PTR [ebp+0x22a23ad]
  420505:	aas    
  420506:	dec    edi
  420507:	scas   al,BYTE PTR es:[edi]
  420508:	mov    bh,0xcd
  42050a:	jns    0x4204fc
  42050c:	fsubr  DWORD PTR [ebp-0x77]
  42050f:	xor    esp,DWORD PTR [ebx]
  420511:	or     DWORD PTR [ebp+0x48a8599e],edi
  420517:	clc    
  420518:	mov    db0,esi
  42051b:	into   
  42051c:	dec    esp
  42051d:	xor    eax,0x1d63cad0
  420522:	sahf   
  420523:	call   0x2821:0x336ae3bd
  42052a:	jmp    0x42058d
  42052c:	sti    
  42052d:	into   
  42052e:	clc    
  42052f:	fadd   DWORD PTR [edi+ebp*4-0x2f]
  420533:	lahf   
  420534:	mov    DWORD PTR [edx+0x40fb7696],ebx
  42053a:	sbb    al,0xc8
  42053c:	lock push ecx
  42053e:	add    al,0x8a
  420540:	inc    ecx
  420541:	xchg   edx,eax
  420542:	and    al,0x53
  420544:	push   ebx
  420545:	xchg   ebx,eax
  420546:	and    ecx,DWORD PTR [ebp-0x45]
  420549:	cdq    
  42054a:	mov    eax,0x6c686aae
  42054f:	xchg   ebp,eax
  420550:	popa   
  420551:	out    0x11,eax
  420553:	cmp    DWORD PTR [ebx+0x3d],ebp
  420556:	mov    ah,0x7d
  420558:	pop    edx
  420559:	je     0x4204e9
  42055b:	mov    ah,BYTE PTR es:[edx-0x50]
  42055f:	imul   esp,esp,0x25b776d3
  420565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420566:	ret    
  420567:	pop    ss
  420568:	test   eax,0xbeb4fff8
  42056d:	ret    0x50e2
  420570:	aad    0x36
  420572:	pop    ebp
  420573:	lahf   
  420574:	jo     0x4205a7
  420576:	xchg   esp,eax
  420577:	or     bh,BYTE PTR [esp+ecx*2+0x65773e7c]
  42057e:	mov    edx,0x3d84d19d
  420583:	xchg   esi,eax
  420584:	push   edi
  420585:	or     al,0x44
  420587:	fidivr DWORD PTR [edi+0x180840f3]
  42058d:	push   0x56
  42058f:	stc    
  420590:	and    DWORD PTR [edi-0x49],ebx
  420593:	cdq    
  420594:	xchg   dh,bh
  420596:	arpl   WORD PTR [eax],bx
  420598:	es stc 
  42059a:	sbb    dl,BYTE PTR [edi-0x58a4f56e]
  4205a0:	out    dx,eax
  4205a1:	adc    BYTE PTR [eax-0x28e23d7e],bl
  4205a7:	iret   
  4205a8:	ror    DWORD PTR [edi-0x1],cl
  4205ab:	imul   ebp,DWORD PTR [eax+0x2f],0xffffff95
  4205af:	mov    ?,WORD PTR [ebx+0x1a398250]
  4205b5:	add    DWORD PTR [ebp-0x5b],ecx
  4205b8:	js     0x4205ba
  4205ba:	mov    ebx,0x28c239bc
  4205bf:	mov    al,0xef
  4205c1:	in     eax,0xd3
  4205c3:	inc    ebp
  4205c4:	sub    edi,DWORD PTR [ecx+eiz*2+0x1e1ebfde]
  4205cb:	or     dh,bl
  4205cd:	mov    BYTE PTR [ebp-0x5193086],ah
  4205d3:	mov    ah,0x8d
  4205d5:	adc    al,0xf0
  4205d7:	sub    DWORD PTR [eax+0x51e66227],eax
  4205dd:	dec    ebp
  4205de:	mov    edi,0xc3e1d602
  4205e3:	pop    ss
  4205e4:	jge    0x420662
  4205e6:	xor    DWORD PTR [ebp+0x584b8d2c],edi
  4205ec:	xchg   ebp,eax
  4205ed:	mov    esi,0xa6f9c3a7
  4205f2:	shl    BYTE PTR [ebx],cl
  4205f4:	imul   edi,DWORD PTR [ecx-0x2a11f0e4],0xffffff81
  4205fb:	sub    eax,0xae87086d
  420600:	sbb    BYTE PTR [eax+0x1d1ffc6a],dl
  420606:	jle    0x420626
  420608:	or     BYTE PTR [ecx],dh
  42060a:	jo     0x42061e
  42060c:	or     al,0x44
  42060e:	cmc    
  42060f:	inc    edx
  420610:	fwait
  420611:	stos   DWORD PTR es:[edi],eax
  420612:	jge    0x4205c4
  420614:	les    eax,FWORD PTR [edi-0x1a]
  420617:	(bad)  
  420618:	push   ds
  420619:	mov    ebp,0xba605453
  42061e:	jb     0x420645
  420620:	push   ds
  420621:	stos   BYTE PTR es:[edi],al
  420622:	into   
  420623:	lea    ebx,[eax-0x7794f59a]
  420629:	hlt    
  42062a:	xlat   BYTE PTR ds:[ebx]
  42062b:	outs   dx,BYTE PTR ds:[esi]
  42062c:	mov    esp,0x9edab5da
  420631:	jo     0x420697
  420633:	ins    DWORD PTR es:[edi],dx
  420634:	cmc    
  420635:	pop    eax
  420636:	mov    ah,0x78
  420638:	cmc    
  420639:	xor    BYTE PTR [edx+eiz*4+0x10],0xc9
  42063e:	xor    DWORD PTR [edi-0x3d79379c],ebx
  420644:	xchg   BYTE PTR [eax+0x3d6c3d71],dh
  42064a:	xor    ebx,esi
  42064c:	or     edx,DWORD PTR [ebx-0x241365e6]
  420652:	xor    ebx,DWORD PTR [esi+0x3a404c07]
  420658:	in     al,dx
  420659:	call   0xb97f2d87
  42065e:	bswap  edi
  420660:	xor    eax,0x9568dc0f
  420665:	add    DWORD PTR [esi+0x19],eax
  420668:	or     ebp,ecx
  42066a:	sbb    BYTE PTR [ebx+0x1d336554],al
  420670:	mov    al,ds:0xc056fe42
  420676:	sub    eax,0xf3c7266f
  42067b:	jmp    0x782:0x98f48b1c
  420682:	nop
  420683:	mov    ch,0xea
  420685:	sub    al,0x42
  420687:	jge    0x42069d
  420689:	clc    
  42068a:	or     eax,0x50b84bbe
  42068f:	jae    0x42065c
  420691:	jbe    0x420688
  420693:	outs   dx,DWORD PTR ds:[esi]
  420694:	hlt    
  420695:	jbe    0x420677
  420697:	pop    edi
  420698:	sub    al,0x58
  42069a:	sub    eax,0x65e10f3b
  42069f:	dec    edx
  4206a0:	mov    eax,ds:0xc53da233
  4206a5:	dec    esp
  4206a6:	lahf   
  4206a7:	shl    DWORD PTR [ebx+0x71],0x34
  4206ab:	outs   dx,DWORD PTR ds:[esi]
  4206ac:	es (bad) 
  4206ae:	in     al,0xe4
  4206b0:	mov    fs,WORD PTR [esi-0x47]
  4206b3:	mov    dl,0xa9
  4206b5:	xor    eax,0xc59f84c7
  4206ba:	popa   
  4206bb:	fs push edi
  4206bd:	jb     0x42065a
  4206bf:	cmp    esi,DWORD PTR [ebx-0x7a]
  4206c2:	sbb    al,0x8f
  4206c4:	in     al,0x7c
  4206c6:	cmp    al,0x29
  4206c8:	and    ch,BYTE PTR fs:[ecx-0x66]
  4206cc:	sahf   
  4206cd:	jmp    0xf6d6a2c8
  4206d2:	adc    esp,DWORD PTR [ebx+0x71264cc3]
  4206d8:	add    DWORD PTR [ebp-0x6e46b272],eax
  4206de:	sbb    esi,DWORD PTR [ecx+ebp*1-0x1e05ea6a]
  4206e5:	xlat   BYTE PTR ds:[ebx]
  4206e6:	pop    ds
  4206e7:	or     al,0xb6
  4206e9:	sub    al,BYTE PTR [ebx-0x7b]
  4206ec:	jne    0x4206e2
  4206ee:	sub    BYTE PTR [ecx-0x20],dl
  4206f1:	stos   BYTE PTR es:[edi],al
  4206f2:	mov    ecx,0xc87f519
  4206f7:	mov    ebx,0x378a2c08
  4206fc:	push   esi
  4206fd:	sti    
  4206fe:	fs in  eax,0xe
  420701:	test   al,0x80
  420703:	jne    0x420774
  420705:	mov    ch,0x90
  420707:	sub    edi,ebp
  420709:	fidivr DWORD PTR [ebx+0x2310278]
  42070f:	ret    
  420710:	fimul  WORD PTR [ecx+ecx*8-0x7aafef82]
  420717:	and    BYTE PTR [ecx+ecx*8],bh
  42071a:	pop    es
  42071b:	loop   0x42074f
  42071d:	sub    ebp,DWORD PTR ds:0x1c692791
  420723:	fist   WORD PTR [esi]
  420725:	mov    bl,0xef
  420727:	push   eax
  420728:	inc    eax
  420729:	rcl    DWORD PTR [edi+0x3223f83d],0xa9
  420730:	push   cs
  420731:	and    esp,edi
  420733:	mov    eax,0xa0ae14dc
  420738:	cmp    BYTE PTR [ebx],dh
  42073a:	add    al,0xbc
  42073c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42073d:	xor    edi,DWORD PTR [ebx]
  42073f:	outs   dx,DWORD PTR ds:[esi]
  420740:	jle    0x4206dd
  420742:	sbb    DWORD PTR [edx+0x521596d6],0x51c4ba7a
  42074c:	mov    ebp,0xf1ae239e
  420751:	or     al,BYTE PTR [ecx]
  420753:	dec    edi
  420754:	or     eax,0x2daaa926
  420759:	bound  eax,QWORD PTR [ebx+0x26]
  42075c:	and    esi,esp
  42075e:	xor    ebx,DWORD PTR [edx-0xf673de4]
  420764:	sbb    eax,0xf0c0a6cb
  420769:	leave  
  42076a:	mov    eax,ds:0x89d6450e
  42076f:	mov    al,0x84
  420771:	(bad)  
  420772:	mov    al,ds:0xf408890f
  420777:	pop    es
  420778:	xchg   edi,eax
  420779:	adc    al,0x4c
  42077b:	xlat   BYTE PTR ds:[ebx]
  42077c:	inc    edx
  42077d:	adc    esp,DWORD PTR [eax+0x56d694d5]
  420783:	es mov bh,0x58
  420786:	cdq    
  420787:	into   
  420788:	cdq    
  420789:	fcomp  QWORD PTR [ebx-0x64]
  42078c:	lods   eax,DWORD PTR ds:[esi]
  42078d:	push   cs
  42078e:	lock and DWORD PTR [esi-0x47],edi
  420792:	sbb    BYTE PTR [ecx],ah
  420794:	mov    fs,WORD PTR [ebp+0x70500ce2]
  42079a:	je     0x420766
  42079c:	fistp  QWORD PTR [ecx+0x7adbe98b]
  4207a2:	test   eax,0x4a10664d
  4207a7:	xor    esi,DWORD PTR [edi+0x71]
  4207aa:	lods   eax,DWORD PTR ds:[esi]
  4207ab:	stos   BYTE PTR es:[edi],al
  4207ac:	test   BYTE PTR [esi-0x6e],bl
  4207af:	(bad)  
  4207b1:	(bad)  
  4207b2:	popa   
  4207b3:	sub    al,0xa8
  4207b5:	xor    BYTE PTR [edi],bl
  4207b7:	sahf   
  4207b8:	jmp    0x42074b
  4207ba:	pop    es
  4207bb:	inc    ebx
  4207bc:	retf   0x824e
  4207bf:	shl    ebp,cl
  4207c1:	mov    eax,0x976196ac
  4207c6:	pop    ds
  4207c7:	int3   
  4207c8:	push   0xffffffe8
  4207ca:	iret   
  4207cb:	jnp    0x420808
  4207cd:	push   edx
  4207ce:	iret   
  4207cf:	cdq    
  4207d0:	stos   BYTE PTR es:[edi],al
  4207d1:	and    DWORD PTR [esi-0x558f4f14],eax
  4207d7:	stos   DWORD PTR es:[edi],eax
  4207d8:	and    eax,0x174d0ba0
  4207dd:	xchg   ecx,esi
  4207df:	adc    al,ch
  4207e1:	ins    BYTE PTR es:[edi],dx
  4207e2:	icebp  
  4207e3:	xor    BYTE PTR [ebp+0x6ded3aa3],cl
  4207e9:	shl    DWORD PTR [esp+eax*2-0x6dab4d9d],1
  4207f0:	(bad)
  4207f3:	gs ret 0x1521
  4207f7:	xchg   ebx,eax
  4207f8:	dec    edx
  4207f9:	imul   esi,DWORD PTR [ebx],0x47
  4207fc:	jns    0x420835
  4207fe:	add    al,dl
  420800:	push   ebp
  420801:	or     DWORD PTR [eax-0x5231f44b],eax
  420807:	add    DWORD PTR [ebp-0x75fca568],ebp
  42080d:	push   edx
  42080e:	adc    DWORD PTR [ecx+ebx*4],eax
  420811:	std    
  420812:	mov    ?,WORD PTR [eax+0x18]
  420815:	aad    0xb7
  420817:	into   
  420818:	cmp    al,0xd3
  42081a:	imul   edi,DWORD PTR [edx-0x16879514],0xfffffff5
  420821:	xchg   ebx,eax
  420822:	scas   eax,DWORD PTR es:[edi]
  420823:	in     al,0x29
  420825:	int    0x84
  420827:	imul   esi,ebp,0x6265b01c
  42082d:	hlt    
  42082e:	mov    es,WORD PTR [ebx]
  420830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420831:	mov    BYTE PTR [ecx],cl
  420833:	add    bh,cl
  420835:	jge    0x4207f2
  420837:	xor    DWORD PTR ds:0x36a15062,ebp
  42083d:	sbb    eax,0xcd9cc036
  420842:	xor    al,0x96
  420844:	mov    esp,0x29ce2400
  420849:	mov    ds:0xbf41a04d,eax
  42084e:	iret   
  42084f:	ret    0xcd6c
  420852:	sub    al,0x86
  420854:	ja     0x420861
  420856:	repz sbb BYTE PTR [eax+edi*4+0x3f769f88],ah
  42085e:	pusha  
  42085f:	ret    
  420860:	jl     0x42086a
  420862:	jnp    0x420891
  420864:	mov    esp,0x299c36dc
  420869:	ret    0xd5f1
  42086c:	pop    ecx
  42086d:	mov    esp,0x8e6a6aab
  420872:	mov    al,ds:0xf0325272
  420877:	out    0x84,al
  420879:	(bad)  
  42087a:	jg     0x4208c1
  42087c:	sti    
  42087d:	sub    eax,0x96714de5
  420882:	lods   al,BYTE PTR ds:[esi]
  420883:	(bad)  
  420884:	fcomp  st(2)
  420886:	push   ebp
  420887:	pop    edx
  420888:	jmp    DWORD PTR [edi]
  42088a:	fst    DWORD PTR [ecx-0x53]
  42088d:	add    ebp,DWORD PTR [esi+0x65]
  420890:	sub    dh,BYTE PTR [edi-0x66]
  420893:	xchg   BYTE PTR [eax],al
  420895:	xchg   edx,eax
  420896:	shl    DWORD PTR [esi+0x36],cl
  420899:	jl     0x420852
  42089b:	adc    al,ch
  42089d:	(bad)  
  42089e:	xor    DWORD PTR [edi],edx
  4208a0:	mov    ds:0xae37fdde,eax
  4208a5:	mov    bl,cl
  4208a7:	and    eax,edx
  4208a9:	scas   eax,DWORD PTR es:[edi]
  4208aa:	setbe  bl
  4208ad:	dec    esi
  4208ae:	test   bl,0xcc
  4208b1:	xchg   edi,eax
  4208b2:	in     al,dx
  4208b3:	xchg   ecx,eax
  4208b4:	mov    WORD PTR [ebp+0x32],?
  4208b7:	add    edx,DWORD PTR [edx+0x35f339b4]
  4208bd:	out    0xc5,al
  4208bf:	dec    esp
  4208c0:	icebp  
  4208c1:	int    0xa
  4208c3:	adc    dh,BYTE PTR [ebx]
  4208c5:	pop    es
  4208c6:	sar    BYTE PTR [ebp-0x9ad308a],1
  4208cc:	cdq    
  4208cd:	xor    bl,cl
  4208cf:	cs sub ch,ah
  4208d2:	push   eax
  4208d3:	out    dx,eax
  4208d4:	(bad)  
  4208d7:	lahf   
  4208d8:	fild   QWORD PTR [ebx-0x7c]
  4208db:	mov    edi,0x2e19a827
  4208e0:	push   ecx
  4208e1:	repz test BYTE PTR [eax],bl
  4208e4:	nop
  4208e5:	mov    dl,0x41
  4208e7:	add    al,0x43
  4208e9:	sub    BYTE PTR [edi-0x6ee1f34f],0x77
  4208f0:	aaa    
  4208f1:	sahf   
  4208f2:	dec    ebp
  4208f3:	out    0x59,eax
  4208f5:	cdq    
  4208f6:	push   ds
  4208f7:	push   ds
  4208f8:	cmp    al,BYTE PTR [ecx-0x23e29024]
  4208fe:	in     al,dx
  4208ff:	mov    edi,0x28889c48
  420904:	and    DWORD PTR [eax+0x4f787717],0xee57ffa5
  42090e:	pop    edi
  42090f:	mov    DWORD PTR [esi+0x3f],esp
  420912:	gs push ecx
  420914:	pop    eax
  420915:	jmp    0x7115d9fe
  42091a:	pop    esi
  42091b:	xchg   esi,eax
  42091c:	pusha  
  42091d:	lods   eax,DWORD PTR ds:[esi]
  42091e:	pop    ecx
  42091f:	sti    
  420920:	call   0x5ccc:0xdc920064
  420927:	or     BYTE PTR [esi+0x4b],0xeb
  42092b:	adc    eax,esp
  42092d:	mov    bl,0x71
  42092f:	xchg   ebx,eax
  420930:	retf   0x2709
  420933:	dec    ecx
  420934:	push   ebp
  420935:	rol    edx,0x21
  420938:	pushf  
  420939:	and    DWORD PTR [edx-0x1f0542fe],ebp
  42093f:	hlt    
  420940:	sub    eax,0xc5d1d26b
  420945:	jecxz  0x4208dc
  420947:	gs jge 0x420910
  42094a:	ja     0x4208eb
  42094c:	xchg   BYTE PTR [ecx-0x11],bl
  42094f:	(bad)  
  420950:	not    BYTE PTR [ebp+0xd]
  420953:	adc    al,0x48
  420955:	jle    0x420910
  420957:	in     eax,dx
  420958:	mov    esi,0x89d829a1
  42095d:	dec    edi
  42095e:	cmp    dl,bh
  420960:	ret    0x496d
  420963:	cli    
  420964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420965:	inc    esi
  420966:	xchg   esi,eax
  420967:	clc    
  420968:	retf   
  420969:	lods   al,BYTE PTR ds:[esi]
  42096a:	mov    ds,WORD PTR [ecx-0x558f5d42]
  420970:	sub    DWORD PTR [ebx-0x38],edi
  420973:	jmp    0xc121a75e
  420978:	push   ebp
  420979:	sbb    DWORD PTR [edi-0x65],ecx
  42097c:	dec    esi
  42097d:	xchg   esi,eax
  42097e:	fmul   DWORD PTR [eax+0x5bf4686a]
  420984:	adc    al,0x31
  420986:	ja     0x420975
  420988:	test   eax,0xc575058a
  42098d:	push   0x96abc1a8
  420992:	push   0x687f39e3
  420997:	rdpmc  
  420999:	mov    ecx,0xa5e6b3f3
  42099e:	ror    DWORD PTR ds:0xf22f764f,0x34
  4209a5:	sti    
  4209a6:	inc    esp
  4209a7:	push   edi
  4209a8:	mov    ebx,0xb94884e5
  4209ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ae:	call   0xcbf0f0b4
  4209b3:	scas   al,BYTE PTR es:[edi]
  4209b4:	mov    ch,0x76
  4209b6:	(bad)  
  4209b7:	xor    eax,eax
  4209b9:	lods   al,BYTE PTR ds:[esi]
  4209ba:	out    0x20,al
  4209bc:	clc    
  4209bd:	mov    ds:0x305e720f,eax
  4209c2:	les    ebx,FWORD PTR [ebp-0x12]
  4209c5:	cmp    BYTE PTR [esi],dl
  4209c7:	ja     0x4209f4
  4209c9:	xchg   ecx,eax
  4209ca:	jl     0x420963
  4209cc:	or     esi,DWORD PTR [esi]
  4209ce:	jmp    0xc368:0x95f5217e
  4209d5:	pop    eax
  4209d6:	lahf   
  4209d7:	inc    esp
  4209d8:	and    esi,DWORD PTR [ebx-0x3ad60de6]
  4209de:	pop    ebp
  4209df:	mov    ds:0xbcf2caf,al
  4209e4:	rcl    DWORD PTR [esi],0x12
  4209e7:	mov    DWORD PTR [esi],edx
  4209e9:	(bad)  
  4209ea:	ins    DWORD PTR es:[edi],dx
  4209eb:	cli    
  4209ec:	sbb    DWORD PTR [ebp+0x56],edx
  4209ef:	loop   0x4209ef
  4209f1:	ins    BYTE PTR es:[edi],dx
  4209f2:	sbb    ebp,DWORD PTR [esi-0x38]
  4209f5:	push   ebp
  4209f6:	push   ebx
  4209f7:	loopne 0x42098a
  4209f9:	pop    es
  4209fa:	cmp    esp,esp
  4209fc:	(bad)  
  4209fd:	aad    0xda
  4209ff:	popf   
  420a00:	in     al,dx
  420a01:	stos   BYTE PTR es:[edi],al
  420a02:	repnz inc esp
  420a04:	xchg   edi,eax
  420a05:	aaa    
  420a06:	cmp    esp,ebx
  420a08:	pop    es
  420a09:	std    
  420a0a:	mov    cl,BYTE PTR [eax]
  420a0c:	loop   0x420a29
  420a0e:	leave  
  420a0f:	scas   al,BYTE PTR es:[edi]
  420a10:	dec    esi
  420a11:	(bad)  
  420a12:	stos   DWORD PTR es:[edi],eax
  420a13:	data16 rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a16:	enter  0x499b,0x3b
  420a1a:	pop    edx
  420a1b:	ret    
  420a1c:	cvtdq2ps xmm1,XMMWORD PTR [esi-0x526dd86f]
  420a23:	(bad)  
  420a25:	mov    cl,0x40
  420a27:	icebp  
  420a28:	call   0x6f6a253a
  420a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a2e:	icebp  
  420a2f:	push   ebp
  420a30:	sbb    DWORD PTR [eax+0x30],0xfffffffb
  420a34:	(bad)  
  420a35:	mov    ebp,DWORD PTR [edx+0x41c31565]
  420a3b:	repz jae 0x4209ed
  420a3e:	xlat   BYTE PTR ds:[ebx]
  420a3f:	arpl   WORD PTR [edi+0x53],sp
  420a42:	cmp    ecx,ecx
  420a44:	aas    
  420a45:	out    0x9c,eax
  420a47:	test   BYTE PTR [eax],0xf2
  420a4a:	cld    
  420a4b:	outs   dx,BYTE PTR ds:[esi]
  420a4c:	arpl   WORD PTR [edx+0x6b9f3305],dx
  420a52:	leave  
  420a53:	pop    esp
  420a54:	cs es fwait
  420a57:	jns    0x4209fa
  420a59:	mov    ds:0x9ecd0c04,al
  420a5e:	and    DWORD PTR [edx],esi
  420a60:	xor    edi,DWORD PTR [edx-0x42]
  420a63:	xchg   ebx,eax
  420a64:	mov    al,cl
  420a66:	mov    DWORD PTR [edx+0x5f53d038],esi
  420a6c:	lock scas eax,DWORD PTR es:[edi]
  420a6e:	dec    edi
  420a6f:	scas   eax,DWORD PTR es:[edi]
  420a70:	ror    DWORD PTR [ebx+0x58],0xa1
  420a74:	adc    ch,BYTE PTR [edx+0x3eae2d19]
  420a7a:	push   ds
  420a7b:	push   ss
  420a7c:	and    ah,BYTE PTR [edi+ecx*1-0x14]
  420a80:	mov    ch,BYTE PTR [esp+eax*1]
  420a83:	xchg   ebx,eax
  420a84:	push   esp
  420a85:	push   0xce5c09d7
  420a8a:	xchg   DWORD PTR [ecx-0x2d],edi
  420a8d:	add    BYTE PTR ds:0xd8b06477,cl
  420a93:	stos   DWORD PTR es:[edi],eax
  420a94:	mov    edi,DWORD PTR ds:0xd1d888d0
  420a9a:	pop    edi
  420a9b:	and    dl,BYTE PTR [edx-0x2d784805]
  420aa1:	ror    BYTE PTR [eax],1
  420aa3:	adc    ah,dh
  420aa5:	jne    0x420a3a
  420aa7:	xor    dh,ah
  420aa9:	jle    0x420abf
  420aab:	jl     0x420b19
  420aad:	outs   dx,DWORD PTR ds:[esi]
  420aae:	mov    ebp,0x675ecb3e
  420ab3:	lock ja 0x420a94
  420ab6:	rol    DWORD PTR [ecx+0xc],cl
  420ab9:	fdiv   DWORD PTR [edx-0x29]
  420abc:	jae    0x420ad9
  420abe:	xchg   esp,eax
  420abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac2:	add    bl,BYTE PTR [eax]
  420ac4:	dec    edx
  420ac5:	adc    DWORD PTR [edx+0x66a1f216],0xffffffed
  420acc:	loopne 0x420a57
  420ace:	inc    edi
  420acf:	mov    esi,0x8019b596
  420ad4:	push   edx
  420ad5:	mov    esi,0xae6ffeab
  420ada:	pop    edi
  420adb:	dec    ebx
  420adc:	sbb    ecx,esp
  420ade:	ret    0x9bab
  420ae1:	sti    
  420ae2:	and    esp,DWORD PTR [edx+0x69eaccf9]
  420ae8:	std    
  420ae9:	out    dx,al
  420aea:	jmp    0xa0f27bd
  420aef:	popf   
  420af0:	mov    eax,ds:0x90fca091
  420af5:	cmc    
  420af6:	fistp  QWORD PTR [ecx-0x6b]
  420af9:	xchg   ebp,eax
  420afa:	fsubr  DWORD PTR [ebx+0x15ea66d3]
  420b00:	imul   ecx,DWORD PTR [edi+ecx*1],0xffffffe5
  420b04:	mov    esp,0x3a93a718
  420b09:	(bad)  
  420b0b:	add    BYTE PTR [esi],cl
  420b0d:	mov    ch,0x39
  420b0f:	pop    edi
  420b10:	adc    edi,eax
  420b12:	mov    ds,WORD PTR [eax-0x4]
  420b15:	(bad)  
  420b16:	mov    DWORD PTR [edi+0x543dbab4],edx
  420b1c:	int    0x8c
  420b1e:	and    BYTE PTR [ebp*4-0x222d0190],al
  420b25:	push   edx
  420b26:	test   BYTE PTR [ebp-0x3c03bad],al
  420b2c:	cld    
  420b2d:	jle    0x420b6c
  420b2f:	outs   dx,BYTE PTR ds:[esi]
  420b30:	fs das 
  420b32:	or     DWORD PTR [ecx-0x72889896],edx
  420b38:	pop    eax
  420b39:	mov    al,ds:0xf9e4cce3
  420b3e:	outs   dx,BYTE PTR ds:[esi]
  420b3f:	rol    BYTE PTR [eax+0xf],0x27
  420b43:	dec    ebx
  420b44:	or     al,0x77
  420b46:	lahf   
  420b47:	call   0x2f848678
  420b4c:	sub    bl,al
  420b4e:	mov    dl,0xb4
  420b50:	sar    BYTE PTR [edi],1
  420b52:	out    dx,eax
  420b53:	scas   al,BYTE PTR es:[edi]
  420b54:	icebp  
  420b55:	(bad)  
  420b56:	call   0x4fd4cc49
  420b5b:	mov    edi,0xb25d94ba
  420b60:	and    BYTE PTR [edx],dl
  420b62:	popf   
  420b63:	sub    DWORD PTR [eax],edx
  420b65:	pop    DWORD PTR [edx+0x2afaf797]
  420b6b:	add    DWORD PTR [edx+ecx*8-0xa8c8686],ebx
  420b72:	in     eax,dx
  420b73:	shl    eax,0xeb
  420b76:	mov    cs,WORD PTR [eax+0x12316667]
  420b7c:	adc    esp,ebp
  420b7e:	xor    BYTE PTR [ebx+0x49],0xcc
  420b82:	or     ecx,DWORD PTR [edx-0x295fe920]
  420b88:	xor    eax,DWORD PTR [eax]
  420b8a:	loope  0x420b61
  420b8c:	push   edx
  420b8d:	xchg   ebp,eax
  420b8e:	pop    ss
  420b8f:	sub    al,0x6b
  420b91:	mov    bh,0x1b
  420b93:	jmp    0xebaacb23
  420b98:	inc    eax
  420b99:	(bad)  
  420b9a:	clc    
  420b9b:	jns    0x420be5
  420b9d:	dec    edx
  420b9e:	mov    dh,0x86
  420ba0:	mov    esi,0x901b0347
  420ba5:	xor    al,0x95
  420ba7:	jmp    0x5594:0x91268034
  420bae:	xor    eax,0xfeb51cf7
  420bb3:	fstp   DWORD PTR ds:0xb74c0300
  420bb9:	lods   al,BYTE PTR ds:[esi]
  420bba:	test   BYTE PTR [eax+0x8fdc953],cl
  420bc0:	das    
  420bc1:	cld    
  420bc2:	call   0xa6ea7191
  420bc7:	mov    ecx,0xdc0744ce
  420bcc:	mov    WORD PTR [esi],ss
  420bce:	mov    edx,DWORD PTR [edi]
  420bd0:	sbb    BYTE PTR [ebp-0x290816b7],0x89
  420bd7:	jl     0x420bc9
  420bd9:	daa    
  420bda:	jnp    0x420bc2
  420bdc:	sub    ebp,edi
  420bde:	es (bad) 
  420be0:	int    0xb4
  420be2:	pop    es
  420be3:	mov    edi,0xfdacd196
  420be8:	in     eax,dx
  420be9:	test   DWORD PTR [esp+ecx*8+0x19],ebx
  420bed:	cli    
  420bee:	sti    
  420bef:	lods   eax,DWORD PTR ds:[esi]
  420bf0:	adc    BYTE PTR [ebp-0x67b6b918],dl
  420bf6:	and    BYTE PTR [edx-0x50154f63],bl
  420bfc:	repnz adc BYTE PTR [ebp+0x70],dh
  420c00:	pop    ss
  420c01:	pusha  
  420c02:	mov    dl,0x60
  420c04:	stc    
  420c05:	int3   
  420c06:	dec    esi
  420c07:	xchg   ecx,eax
  420c08:	mov    esi,DWORD PTR [ebx]
  420c0a:	push   ebp
  420c0b:	jle    0x420c7d
  420c0d:	mov    esi,0x855b3a48
  420c12:	pusha  
  420c13:	fcmovnbe st,st(2)
  420c15:	cmp    BYTE PTR [esi-0x3f],ch
  420c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c19:	aaa    
  420c1a:	aad    0xf2
  420c1c:	sub    eax,DWORD PTR [esi-0x43]
  420c1f:	or     edi,DWORD PTR [esi+0x5f]
  420c22:	loope  0x420c8c
  420c24:	adc    BYTE PTR [ecx+0x6f],ch
  420c27:	sahf   
  420c28:	and    esp,DWORD PTR [eax]
  420c2a:	loopne 0x420c05
  420c2c:	into   
  420c2d:	cld    
  420c2e:	ja     0x420be2
  420c30:	gs sbb edx,ebp
  420c33:	jmp    0x420bbb
  420c35:	cmp    bl,BYTE PTR [esi]
  420c37:	sub    BYTE PTR [edx+0x6b0d0135],0x29
  420c3e:	stc    
  420c3f:	loope  0x420c48
  420c41:	cdq    
  420c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c43:	and    ch,BYTE PTR [edx-0x128ff771]
  420c49:	pop    esp
  420c4a:	mov    ecx,0xb78c2327
  420c4f:	(bad)
  420c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c55:	loop   0x420c87
  420c57:	call   0xdbf725cc
  420c5c:	cmc    
  420c5d:	ins    BYTE PTR es:[edi],dx
  420c5e:	aaa    
  420c5f:	daa    
  420c60:	pop    ss
  420c61:	ins    BYTE PTR es:[edi],dx
  420c62:	push   ecx
  420c63:	push   0x53e2bc33
  420c68:	dec    ecx
  420c69:	jo     0x420cbc
  420c6b:	or     DWORD PTR [edx-0xa2d985c],ebx
  420c71:	mov    ?,WORD PTR [edi+0x21a8d7f1]
  420c77:	test   eax,0xb1b16c64
  420c7c:	loopne 0x420ccc
  420c7e:	leave  
  420c7f:	out    dx,al
  420c80:	outs   dx,DWORD PTR ds:[esi]
  420c81:	hlt    
  420c82:	das    
  420c83:	jmp    0x420cb0
  420c85:	mov    WORD PTR [edx+0x46],cs
  420c88:	ficom  DWORD PTR [ecx]
  420c8a:	(bad)  
  420c8c:	sub    al,0x6b
  420c8e:	push   esp
  420c8f:	enter  0xd4d4,0x24
  420c93:	fwait
  420c94:	and    edx,edi
  420c96:	inc    ecx
  420c97:	inc    edi
  420c98:	lods   eax,DWORD PTR ds:[esi]
  420c99:	jmp    0x420cac
  420c9b:	push   eax
  420c9c:	sbb    edi,eax
  420c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c9f:	xor    BYTE PTR [eax-0x2a6740b1],ah
  420ca5:	loopne 0x420ca0
  420ca7:	jmp    0xc3a0:0xa735ec2
  420cae:	sub    eax,0x592b53fa
  420cb3:	adc    edi,DWORD PTR [ebx+0x25]
  420cb6:	sub    eax,0xce64fe77
  420cbb:	fidivr WORD PTR [eax+ebp*4-0x4d]
  420cbf:	adc    al,0x3f
  420cc1:	and    eax,0x6f794e1d
  420cc6:	jbe    0x420d39
  420cc8:	fs mov ebp,0x2e7336b8
  420cce:	repnz mov eax,0x4e0d6fec
  420cd4:	xchg   ecx,eax
  420cd5:	repz push 0x7ced0bdc
  420cdb:	mov    bl,0x2f
  420cdd:	cdq    
  420cde:	shl    edi,1
  420ce0:	test   bh,ah
  420ce2:	(bad)  
  420ce3:	lea    esp,[esi]
  420ce5:	sti    
  420ce6:	outs   dx,DWORD PTR ds:[esi]
  420ce7:	ins    BYTE PTR es:[edi],dx
  420ce8:	push   ecx
  420ce9:	fisub  WORD PTR [ebx+0x5e]
  420cec:	es inc ebp
  420cee:	pop    ebx
  420cef:	stc    
  420cf0:	fs mov esi,0xf2d19124
  420cf6:	pop    ss
  420cf7:	add    al,0x51
  420cf9:	test   cl,dl
  420cfb:	xchg   esi,eax
  420cfc:	loope  0x420d42
  420cfe:	fild   DWORD PTR [ebx+0x1a]
  420d01:	inc    ebx
  420d02:	pushf  
  420d03:	dec    BYTE PTR [ebx]
  420d05:	pop    ebp
  420d06:	pop    edi
  420d07:	mov    dl,0x5b
  420d09:	mov    BYTE PTR [eax-0x10],al
  420d0c:	add    ch,bl
  420d0e:	pusha  
  420d0f:	xor    eax,0x56cd0512
  420d14:	sti    
  420d15:	shr    DWORD PTR [eax+ebp*2],1
  420d18:	push   eax
  420d19:	or     al,BYTE PTR [edx-0x3b001ec0]
  420d1f:	lods   al,BYTE PTR ds:[esi]
  420d20:	and    esp,DWORD PTR [ecx+0x665e0368]
  420d26:	cmp    ch,BYTE PTR [edi+0x335687a2]
  420d2c:	cmp    ebx,DWORD PTR [esp+edi*8-0x77]
  420d30:	ins    BYTE PTR es:[edi],dx
  420d31:	dec    eax
  420d32:	jmp    0x8c3e5ccb
  420d37:	pop    eax
  420d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d39:	jl     0x420ccb
  420d3b:	xchg   esi,eax
  420d3c:	xor    DWORD PTR [edx+0x10497b03],ecx
  420d42:	dec    eax
  420d43:	mov    dl,0x5f
  420d45:	push   ebp
  420d46:	loopne 0x420cec
  420d48:	test   al,0x2e
  420d4a:	xchg   esi,eax
  420d4b:	rcr    al,0x14
  420d4e:	pop    esi
  420d4f:	jmp    0xa089e259
  420d54:	push   0x13ce87
  420d59:	adc    BYTE PTR [esi+esi*8+0x6521d51a],bl
  420d60:	fstp   TBYTE PTR [edi]
  420d62:	imul   esp,DWORD PTR ds:0xe3336c74,0x6
  420d69:	mov    ebx,0x992f0f66
  420d6e:	xchg   DWORD PTR [edx-0x40],ebp
  420d71:	and    DWORD PTR [esi],edx
  420d73:	sbb    ebx,DWORD PTR [ecx+ebx*2-0x1f513491]
  420d7a:	cmp    esi,DWORD PTR [ebp+0x31a767b2]
  420d80:	(bad)  
  420d81:	fist   WORD PTR [ebp+0x23e49ff0]
  420d87:	xchg   ebx,eax
  420d88:	scas   eax,DWORD PTR es:[edi]
  420d89:	rcr    ebx,1
  420d8b:	cmc    
  420d8c:	jae    0x420d65
  420d8e:	pop    es
  420d8f:	sub    BYTE PTR [edi+0x52],dh
  420d92:	jge    0x420d61
  420d94:	push   eax
  420d95:	push   esp
  420d96:	inc    esp
  420d97:	leave  
  420d98:	shr    DWORD PTR es:[edx-0x2f],cl
  420d9c:	mov    dl,0x6d
  420d9e:	mov    WORD PTR [edx+edi*1-0x6e],gs
  420da2:	fldcw  WORD PTR [esi+0x6be240bd]
  420da8:	test   ebx,esp
  420daa:	or     BYTE PTR [esi+esi*8-0x4e115996],bl
  420db1:	sub    DWORD PTR [edx+0x63],ebx
  420db4:	popf   
  420db5:	cmp    edi,DWORD PTR [edi+0x23c6534a]
  420dbb:	cs jge 0x420d59
  420dbe:	lods   al,BYTE PTR ds:[esi]
  420dbf:	mov    cl,0xc0
  420dc1:	xchg   ecx,eax
  420dc2:	rol    BYTE PTR [ecx+eiz*8],1
  420dc5:	rcl    esp,1
  420dc7:	mov    bh,0x53
  420dc9:	mov    ebp,0x7be1792
  420dce:	jmp    0xf2700f3
  420dd3:	jbe    0x420dac
  420dd5:	adc    al,0xe7
  420dd7:	ss pushf 
  420dd9:	sub    esp,DWORD PTR [ebx-0x23]
  420ddc:	rcl    dl,0xa
  420ddf:	mov    WORD PTR [ebx-0x4e9f80f6],fs
  420de5:	fldcw  WORD PTR [esi+0x67759d4]
  420deb:	cli    
  420dec:	dec    edi
  420ded:	ins    BYTE PTR es:[edi],dx
  420dee:	sub    bl,BYTE PTR [ebx+0x43]
  420df1:	stc    
  420df2:	sub    al,0xb0
  420df4:	in     eax,0x45
  420df6:	ss ret 0x1394
  420dfa:	cmp    esp,DWORD PTR [ecx-0x3d]
  420dfd:	xor    DWORD PTR [edi+0x67],0xad70d980
  420e04:	jne    0x420df7
  420e06:	mov    cl,BYTE PTR [edi-0x36]
  420e09:	mov    eax,0x8fb649d3
  420e0e:	loopne 0x420e37
  420e10:	out    0x5f,al
  420e12:	cmp    DWORD PTR [ecx+eax*1],ebx
  420e15:	sub    eax,DWORD PTR [ebp+0x7c]
  420e18:	rol    DWORD PTR [edi+0x5a8b0190],0x81
  420e1f:	mov    WORD PTR [ebp-0x13fac309],?
  420e25:	inc    edi
  420e26:	(bad)  
  420e27:	cmp    eax,esp
  420e29:	push   cs
  420e2a:	test   al,0x5d
  420e2c:	jo     0x420e58
  420e2e:	jmp    DWORD PTR [eax-0x6a43f518]
  420e34:	mov    ch,0x93
  420e36:	retf   
  420e37:	dec    ebx
  420e38:	fnstenv [ecx-0x4255be46]
  420e3e:	ror    DWORD PTR [ebx+0x65d4709],cl
  420e44:	sbb    esi,DWORD PTR [edi+0x544ae26]
  420e4a:	pop    ebp
  420e4b:	int    0x37
  420e4d:	xor    DWORD PTR [ebx-0x74],0x3a
  420e51:	(bad)  
  420e52:	scas   eax,DWORD PTR es:[edi]
  420e53:	retf   
  420e54:	arpl   WORD PTR [edi],di
  420e56:	mov    ds:0x2a39665b,al
  420e5b:	mov    ss,WORD PTR [ecx]
  420e5d:	(bad)  
  420e5e:	fidiv  DWORD PTR [ebx-0x23c8c164]
  420e64:	cli    
  420e65:	jbe    0x420eb9
  420e67:	push   eax
  420e68:	mov    cl,0x17
  420e6a:	out    dx,eax
  420e6b:	loopne 0x420e9b
  420e6d:	dec    esp
  420e6e:	push   ss
  420e6f:	jbe    0x420e6e
  420e71:	std    
  420e72:	mov    eax,0x955b7cb7
  420e77:	test   BYTE PTR [eax+edi*8],cl
  420e7a:	add    ecx,DWORD PTR [edx+edi*4]
  420e7d:	and    cl,dh
  420e7f:	jp     0x420e36
  420e81:	push   ebp
  420e82:	push   0x9cb0b056
  420e87:	jle    0x420ecf
  420e89:	xchg   ebx,eax
  420e8a:	push   edi
  420e8b:	shr    bh,1
  420e8d:	daa    
  420e8e:	xchg   esp,eax
  420e8f:	(bad)  
  420e91:	clc    
  420e92:	cmp    edi,DWORD PTR fs:[edi]
  420e95:	or     BYTE PTR [ebx+0x58],ah
  420e98:	push   es
  420e99:	inc    ecx
  420e9a:	mov    ah,0xb9
  420e9c:	cwde   
  420e9d:	cmp    DWORD PTR [edx],edx
  420e9f:	shl    BYTE PTR [eax+0x58],cl
  420ea2:	loope  0x420efb
  420ea4:	push   ecx
  420ea5:	adc    esi,ebx
  420ea7:	jnp    0x420e49
  420ea9:	inc    edi
  420eaa:	cld    
  420eab:	mov    eax,0x7cdc6aff
  420eb0:	lods   al,BYTE PTR ds:[esi]
  420eb1:	mov    ds:0xe877054e,eax
  420eb6:	inc    ebp
  420eb7:	ins    DWORD PTR es:[edi],dx
  420eb8:	test   al,0x36
  420eba:	mov    al,0x8b
  420ebc:	imul   edx,DWORD PTR [ebx+esi*1+0x1f],0x8771bf4c
  420ec4:	and    ah,ah
  420ec6:	mov    eax,0xebc8d919
  420ecb:	aas    
  420ecc:	fmulp  st(0),st
  420ece:	mov    dh,0xff
  420ed0:	add    eax,0xf446bf83
  420ed5:	outs   dx,DWORD PTR ds:[esi]
  420ed6:	ret    0x1d83
  420ed9:	xor    bl,BYTE PTR [esp+eiz*4+0x73]
  420edd:	add    ecx,DWORD PTR [edi+edi*2]
  420ee0:	mov    dl,0x5a
  420ee2:	xchg   ecx,eax
  420ee3:	mov    ch,ah
  420ee5:	loope  0x420ee4
  420ee7:	jge    0x420e6b
  420ee9:	push   esi
  420eea:	mov    al,ds:0x2c7d70d2
  420eef:	mov    al,0x75
  420ef1:	cwde   
  420ef2:	test   eax,0x73ef5f4d
  420ef7:	es ins DWORD PTR es:[edi],dx
  420ef9:	retf   0x556c
  420efc:	xchg   edx,eax
  420efd:	xor    DWORD PTR [ebp-0x45829237],ecx
  420f03:	je     0x420eff
  420f05:	loopne 0x420f47
  420f07:	int    0x95
  420f09:	sub    BYTE PTR [edx],bh
  420f0b:	aam    0xde
  420f0d:	(bad)  
  420f0e:	js     0x420f7b
  420f10:	mov    ebp,DWORD PTR [ebx-0x56]
  420f13:	cmp    ebp,eax
  420f15:	jae    0x420f13
  420f17:	idiv   BYTE PTR ds:0xfb5502ae
  420f1d:	and    bh,0x7b
  420f20:	jns    0x420ee2
  420f22:	lahf   
  420f23:	jo     0x420f55
  420f25:	in     al,0x67
  420f27:	adc    al,0x64
  420f29:	add    al,dl
  420f2b:	xlat   BYTE PTR ds:[ebx]
  420f2c:	fisubr DWORD PTR [esi-0x6]
  420f2f:	lock ret 0x3e61
  420f33:	jnp    0x420ec2
  420f35:	shl    DWORD PTR [edx],cl
  420f37:	mov    BYTE PTR [ebx+0x13],cl
  420f3a:	ja     0x420ef6
  420f3c:	jbe    0x420ed7
  420f3e:	adc    ebp,eax
  420f40:	jno    0x420f8c
  420f42:	add    BYTE PTR [ebx-0x1c],al
  420f45:	call   FWORD PTR [edx+0x2f7a518b]
  420f4b:	mov    ds:0xbc619f71,eax
  420f50:	and    bh,BYTE PTR [edx]
  420f52:	or     edx,DWORD PTR [ecx-0x3d]
  420f55:	inc    ebx
  420f56:	rcl    BYTE PTR [esi+0x6a],1
  420f59:	or     bl,dh
  420f5b:	inc    ebp
  420f5c:	xor    al,0x8
  420f5e:	push   eax
  420f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f60:	loopne 0x420f3f
  420f62:	idiv   BYTE PTR [ebx+0x4b91449e]
  420f68:	xor    eax,0xcb688bd0
  420f6d:	xchg   esp,eax
  420f6e:	mov    ds:0x8cb35030,al
  420f74:	jno    0x420fdc
  420f76:	mov    dl,0xa3
  420f78:	mov    ebx,0xe8a0e3f4
  420f7d:	jge    0x420f60
  420f7f:	ins    DWORD PTR es:[edi],dx
  420f80:	or     ebp,edx
  420f82:	dec    ebx
  420f83:	or     al,0x3f
  420f85:	or     BYTE PTR [edi+0x7710286e],bl
  420f8b:	(bad)  
  420f8c:	cmp    al,0x44
  420f8e:	int    0x87
  420f90:	cs cmp ecx,eax
  420f93:	mov    cl,0x3
  420f95:	(bad)  
  420f96:	(bad)  
  420f97:	sub    al,0xde
  420f99:	(bad)  
  420f9a:	fld    TBYTE PTR [ecx+0x2c]
  420f9d:	pop    esi
  420f9e:	push   ss
  420f9f:	into   
  420fa0:	inc    esi
  420fa1:	ja     0x420f85
  420fa3:	pop    es
  420fa4:	mov    ds:0x47347dfb,eax
  420fa9:	dec    ecx
  420faa:	nop
  420fab:	and    al,0x3b
  420fad:	je     0x420ff7
  420faf:	mov    cl,0x90
  420fb1:	stc    
  420fb2:	xchg   ebp,eax
  420fb3:	push   esi
  420fb4:	cmp    edx,DWORD PTR [eax-0x62f6b86f]
  420fba:	loop   0x420fcf
  420fbc:	fbld   TBYTE PTR [edi]
  420fbe:	adc    ebx,DWORD PTR [edi]
  420fc0:	lahf   
  420fc1:	out    dx,al
  420fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fc3:	fwait
  420fc4:	ins    BYTE PTR es:[edi],dx
  420fc5:	xor    DWORD PTR [ecx-0x27fab51c],ebx
  420fcb:	ins    DWORD PTR es:[edi],dx
  420fcc:	pop    eax
  420fcd:	push   ebx
  420fce:	cmp    DWORD PTR ds:0x9b44084c,edi
  420fd4:	mov    WORD PTR [edi],?
  420fd6:	test   eax,0x73ef93e9
  420fdb:	(bad)  
  420fdc:	js     0x421029
  420fde:	add    DWORD PTR [eax],ebx
  420fe0:	stos   BYTE PTR es:[edi],al
  420fe1:	push   ebx
  420fe2:	leave  
  420fe3:	fdivp  st(1),st
  420fe5:	cli    
  420fe6:	jle    0x42104d
  420fe8:	scas   al,BYTE PTR es:[edi]
  420fe9:	add    al,0x4b
  420feb:	loopne 0x420fc9
  420fed:	jmp    0x51105f98
  420ff2:	jmp    0x420fd2
  420ff4:	out    dx,eax
  420ff5:	mov    ah,0x2e
  420ff7:	add    edi,DWORD PTR [ecx+0x7e]
  420ffa:	fist   DWORD PTR [ebp-0x730ad419]
  421000:	jmp    0x556a016a
  421005:	ins    DWORD PTR es:[edi],dx
  421006:	push   esi
  421007:	push   edx
  421008:	inc    ecx
  421009:	and    ah,al
  42100b:	add    al,0x35
  42100d:	lods   al,BYTE PTR ds:[esi]
  42100e:	adc    DWORD PTR [edi-0x1dac30ca],edi
  421014:	or     al,0x4f
  421016:	test   DWORD PTR [esi+0x3f],edx
  421019:	push   edx
  42101a:	push   es
  42101b:	cld    
  42101c:	mov    DWORD PTR [ecx],esp
  42101e:	or     DWORD PTR [eax],ecx
  421020:	cwde   
  421021:	adc    DWORD PTR ds:0x2f4d7714,ebp
  421027:	mov    eax,0xfdc4f8d5
  42102c:	repnz fidiv WORD PTR [ebx]
  42102f:	test   BYTE PTR [esi],dl
  421031:	inc    eax
  421032:	push   esi
  421033:	pause  
  421035:	jg     0x420fc0
  421037:	out    dx,al
  421038:	and    dh,BYTE PTR [ebx]
  42103a:	jnp    0x42103e
  42103c:	jl     0x420feb
  42103e:	enter  0x110c,0xff
  421042:	or     eax,0xe02aca3a
  421047:	mov    al,ds:0xf94485ad
  42104c:	imul   ebx,DWORD PTR [ebx-0x6391c812],0x1e
  421053:	ja     0x421017
  421055:	xor    DWORD PTR [ecx],edx
  421057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421058:	inc    ebx
  421059:	(bad)
  42105d:	sti    
  42105e:	sti    
  42105f:	or     eax,0x73c66c61
  421064:	push   cs
  421065:	pop    esp
  421066:	rcr    BYTE PTR [edx],cl
  421068:	fcmovnbe st,st(3)
  42106a:	xor    al,0x35
  42106c:	inc    edi
  42106d:	inc    esi
  42106e:	sbb    eax,0xba543ef1
  421073:	push   esp
  421074:	jmp    0x19320391
  421079:	add    BYTE PTR [eax-0x51],dh
  42107c:	mov    dl,0xe
  42107e:	jecxz  0x4210db
  421080:	cmp    al,0x6
  421082:	cld    
  421083:	retf   
  421084:	xchg   ebx,eax
  421085:	xor    al,BYTE PTR [ebx+0x50]
  421088:	mov    bl,0x32
  42108a:	jmp    0x4210c9
  42108c:	mov    ebx,?
  42108e:	or     BYTE PTR [ebx+0x7b86a89c],cl
  421094:	mov    eax,0xdf279996
  421099:	mov    ecx,0x13b92e6b
  42109e:	lods   eax,DWORD PTR ds:[esi]
  42109f:	in     eax,dx
  4210a0:	xchg   ebx,eax
  4210a1:	cmp    ch,dh
  4210a3:	mov    eax,0xf54e6adc
  4210a8:	cmp    esi,DWORD PTR ds:0x8750d528
  4210ae:	add    edx,DWORD PTR [esi-0x442b0ec2]
  4210b4:	int    0xf9
  4210b6:	es add eax,0x97339c2f
  4210bc:	mov    dh,0xb4
  4210be:	scas   eax,DWORD PTR es:[edi]
  4210bf:	sub    eax,0x559b9880
  4210c4:	push   eax
  4210c5:	mov    BYTE PTR [eax],bh
  4210c7:	dec    eax
  4210c8:	rol    ebx,cl
  4210ca:	mov    ebp,0x2630fc54
  4210cf:	mov    fs,edi
  4210d1:	mov    eax,DWORD PTR [ebp+eax*8+0x6e7812bd]
  4210d8:	(bad)  
  4210d9:	in     al,0x26
  4210db:	popa   
  4210dc:	jle    0x4210e8
  4210de:	dec    esi
  4210df:	and    DWORD PTR [edi],esp
  4210e1:	mov    ss,WORD PTR [eax+esi*4-0x6f]
  4210e5:	aaa    
  4210e6:	pop    edi
  4210e7:	fadd   st,st(1)
  4210e9:	mov    edi,0x1547ed9c
  4210ee:	push   eax
  4210ef:	pop    edx
  4210f0:	xor    DWORD PTR [ebp-0x3c],eax
  4210f3:	add    bh,BYTE PTR [ebx+0x5b]
  4210f6:	mov    bl,0x48
  4210f8:	xor    al,0x72
  4210fa:	or     eax,0x49190d06
  4210ff:	cwde   
  421100:	mov    ds:0x628454a0,al
  421105:	call   0x62aad945
  42110a:	(bad)  
  42110b:	dec    esi
  42110c:	in     eax,dx
  42110d:	pop    edi
  42110e:	dec    ebp
  42110f:	icebp  
  421110:	pushf  
  421111:	jg     0x42118a
  421113:	call   0xc8e7:0x42bfc7b6
  42111a:	ror    BYTE PTR [edx-0x33d191a7],1
  421120:	rcl    BYTE PTR [ebp-0x2c905a3e],0x17
  421127:	stos   DWORD PTR es:[edi],eax
  421128:	adc    eax,DWORD PTR [ecx-0x611490a5]
  42112e:	js     0x42118e
  421130:	stc    
  421131:	(bad)  
  421132:	sub    eax,0xfc2bd482
  421137:	fnstcw WORD PTR [ebp+0x662c94d1]
  42113d:	nop
  42113e:	test   al,0x7b
  421140:	stos   BYTE PTR es:[edi],al
  421141:	push   0x2ee7c3c8
  421146:	mov    al,0xa7
  421148:	mov    dl,0x51
  42114a:	xor    al,0x34
  42114c:	sbb    BYTE PTR [ebx-0x71cda9a],0x45
  421153:	pop    ebp
  421154:	mov    ebx,0xfdb425c7
  421159:	sub    al,BYTE PTR [ebx+edi*4]
  42115c:	xchg   ecx,eax
  42115d:	sahf   
  42115e:	daa    
  42115f:	leave  
  421160:	inc    edi
  421161:	cmp    dh,BYTE PTR gs:[ebp+edx*2+0x1b]
  421166:	out    0x74,al
  421168:	pop    edx
  421169:	adc    DWORD PTR [ebx+0x70ec7eae],ebx
  42116f:	cmp    dh,BYTE PTR [ecx]
  421171:	or     BYTE PTR [ebp+0x50176a],bh
  421177:	xchg   ebx,eax
  421178:	cli    
  421179:	les    esp,FWORD PTR [ebp-0x3b]
  42117c:	inc    esp
  42117d:	cmp    dh,BYTE PTR [edx-0x3addf148]
  421183:	jae    0x42111d
  421185:	(bad)  
  421186:	fwait
  421187:	cld    
  421188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421189:	xor    DWORD PTR [eax],0x2fa7d08
  42118f:	dec    esi
  421190:	inc    eax
  421191:	mov    DWORD PTR [esi],esi
  421193:	xchg   BYTE PTR [eax-0x15],cl
  421196:	or     DWORD PTR [ecx],ebx
  421198:	sbb    DWORD PTR [ecx+0x3a],esi
  42119b:	cdq    
  42119c:	pop    ss
  42119d:	jae    0x421123
  42119f:	fisubr WORD PTR [eax-0x1b]
  4211a2:	iret   
  4211a3:	sub    eax,DWORD PTR [esi+eiz*8+0x3e711ed0]
  4211aa:	xor    DWORD PTR [edx*2-0x2570115a],ecx
  4211b1:	mov    BYTE PTR ds:0x7498fa09,dl
  4211b7:	ss ja  0x4211cf
  4211ba:	out    0x80,al
  4211bc:	out    0xc4,al
  4211be:	lahf   
  4211bf:	jp     0x4211e3
  4211c1:	mov    eax,ds:0xf02f9804
  4211c6:	lahf   
  4211c7:	aas    
  4211c8:	mov    ds:0xe0895e4f,eax
  4211cd:	loope  0x42117d
  4211cf:	(bad)  
  4211d0:	mov    ds:0x241502ca,al
  4211d5:	popa   
  4211d6:	outs   dx,DWORD PTR ds:[esi]
  4211d7:	xchg   ecx,eax
  4211d8:	or     bh,bh
  4211da:	mov    ecx,0x25930a94
  4211df:	inc    esi
  4211e0:	adc    cl,dl
  4211e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e3:	icebp  
  4211e4:	retf   
  4211e5:	pop    ebx
  4211e6:	in     eax,dx
  4211e7:	outs   dx,DWORD PTR ds:[esi]
  4211e8:	jne    0x42118b
  4211ea:	and    al,0xa
  4211ec:	sub    BYTE PTR [edx+0x33],dh
  4211ef:	test   al,0x54
  4211f1:	loop   0x421175
  4211f3:	fldenv [ebx]
  4211f5:	or     DWORD PTR [edx-0x34920400],0xd689d601
  4211ff:	enter  0x2e39,0xbf
  421203:	jle    0x421239
  421205:	or     DWORD PTR [ecx+0x9ca8679],ecx
  42120b:	popf   
  42120c:	popf   
  42120d:	in     al,dx
  42120e:	sti    
  42120f:	into   
  421210:	pop    ecx
  421211:	pop    ebx
  421212:	sub    bl,ch
  421214:	call   0x51cc:0xb6846e21
  42121b:	add    dh,al
  42121d:	ror    DWORD PTR [edx+0x7d],0x90
  421221:	inc    edi
  421222:	sub    BYTE PTR [esi-0x10],al
  421225:	aas    
  421226:	mov    eax,ds:0xee701487
  42122b:	push   0x849bea11
  421230:	shl    DWORD PTR [ebx-0x47ed3439],1
  421236:	push   ebx
  421237:	or     eax,0x267c0833
  42123c:	lods   al,BYTE PTR cs:[esi]
  42123e:	xlat   BYTE PTR ds:[ebx]
  42123f:	mov    edx,0x27460299
  421244:	xor    dh,BYTE PTR [eax-0x6a]
  421247:	push   ds
  421248:	call   0x6feb:0x9980e556
  42124f:	pop    ecx
  421250:	push   0xffffffd0
  421252:	in     eax,0x30
  421254:	xchg   esi,eax
  421255:	imul   ebx,DWORD PTR gs:[edx],0xd5f9ffd5
  42125c:	aam    0x1b
  42125e:	xchg   ebx,eax
  42125f:	(bad)  
  421261:	jo     0x421254
  421263:	and    ch,al
  421265:	(bad)  
  421266:	mov    edi,0x16557f0e
  42126b:	sar    DWORD PTR [edi+0x22],0xf9
  42126f:	xchg   BYTE PTR [edi],al
  421271:	xchg   ecx,eax
  421272:	mov    BYTE PTR [ecx+0x75dabff1],al
  421278:	mov    bh,0x71
  42127a:	xchg   esi,eax
  42127b:	jg     0x421278
  42127d:	add    edx,DWORD PTR [esi]
  42127f:	push   0x6a215d58
  421284:	mov    cl,0x9
  421286:	outs   dx,BYTE PTR ds:[esi]
  421287:	and    dl,dl
  421289:	xor    eax,0x583d6843
  42128e:	in     al,dx
  42128f:	pop    esp
  421290:	jnp    0x421288
  421292:	inc    edi
  421293:	sbb    eax,0x9fdded72
  421298:	(bad)  
  421299:	loope  0x421229
  42129b:	aas    
  42129c:	mov    bl,0x62
  42129e:	mov    WORD PTR [ecx+0x29],gs
  4212a1:	je     0x421232
  4212a3:	xchg   dl,dh
  4212a5:	inc    eax
  4212a6:	test   DWORD PTR [ebx],edi
  4212a8:	add    ebx,DWORD PTR [esi+ecx*1]
  4212ab:	icebp  
  4212ac:	ins    BYTE PTR es:[edi],dx
  4212ad:	xchg   ecx,eax
  4212ae:	ficom  DWORD PTR cs:[edi+0x53446a50]
  4212b5:	pop    ecx
  4212b6:	inc    ebx
  4212b7:	push   ds
  4212b8:	push   cs
  4212b9:	and    cl,dh
  4212bb:	rcl    BYTE PTR [ebx],0x2d
  4212be:	xor    bl,bh
  4212c0:	jae    0x4212df
  4212c2:	jnp    0x4212d4
  4212c4:	ror    ebx,1
  4212c6:	out    dx,al
  4212c7:	shr    BYTE PTR [esi],0x85
  4212ca:	dec    eax
  4212cb:	inc    edx
  4212cc:	in     al,dx
  4212cd:	in     al,0xb6
  4212cf:	jne    0x421326
  4212d1:	ret    
  4212d2:	mov    ds,WORD PTR [edi+ebx*1+0x7e]
  4212d6:	fnstsw WORD PTR [ecx+0x51a4045c]
  4212dc:	xchg   esi,eax
  4212dd:	and    DWORD PTR [eax+0x0],esi
  4212e0:	pop    esi
  4212e1:	sbb    BYTE PTR [ebx-0x13325a06],dh
  4212e7:	pop    ecx
  4212e8:	mov    dh,0x70
  4212ea:	cmp    al,0xcd
  4212ec:	(bad)  
  4212ed:	jns    0x421297
  4212ef:	arpl   WORD PTR [ecx+edx*2-0x3bcf75f8],bx
  4212f6:	push   esi
  4212f7:	das    
  4212f8:	ret    
  4212f9:	sahf   
  4212fa:	cmp    DWORD PTR [ebp+eiz*1-0x593dd987],0x764e4cf5
  421305:	js     0x421287
  421307:	outs   dx,BYTE PTR ds:[esi]
  421308:	sbb    BYTE PTR [esi],cl
  42130a:	test   eax,0xc274d3ee
  42130f:	call   0x3b23:0xaad79c1
  421316:	pop    esp
  421317:	ficomp WORD PTR [edi]
  421319:	sti    
  42131a:	(bad)
  42131d:	pop    ebp
  42131e:	xor    al,0xa3
  421320:	adc    bl,BYTE PTR [ebx]
  421322:	cmp    BYTE PTR [eax],dh
  421324:	mov    esp,0xbe76a025
  421329:	fwait
  42132a:	push   ds
  42132b:	sti    
  42132c:	mov    ecx,0x88e36986
  421331:	or     al,0xaa
  421333:	jbe    0x421353
  421335:	scas   al,BYTE PTR es:[edi]
  421336:	mov    ds:0x6afef4aa,al
  42133b:	mov    ch,0x5a
  42133d:	pop    edx
  42133e:	xchg   ebp,eax
  42133f:	sub    al,0x6c
  421341:	push   ss
  421342:	icebp  
  421343:	es icebp 
  421345:	ret    0x6b8b
  421348:	pop    ds
  421349:	xchg   esp,eax
  42134a:	leave  
  42134b:	std    
  42134c:	mov    ah,0x9d
  42134e:	test   BYTE PTR [esi-0x55f9d392],0x1d
  421355:	xor    eax,0xfa20acc7
  42135a:	push   0x89356cef
  42135f:	mov    esi,0x3ecd46c8
  421364:	sbb    esp,ebx
  421366:	arpl   sp,cx
  421368:	cmp    al,0xab
  42136a:	repz mov eax,ds:0xe1b16b43
  421370:	fs clc 
  421372:	fadd   QWORD PTR [edi]
  421374:	in     al,0xe4
  421376:	add    eax,0xdd755e89
  42137b:	sub    BYTE PTR [ebp+0x107fd9b1],al
  421381:	ds aam 0xad
  421384:	mov    eax,0x1d2e1596
  421389:	int    0xcb
  42138b:	inc    ebp
  42138c:	and    DWORD PTR [edi],edx
  42138e:	std    
  42138f:	repnz fxch st(2)
  421392:	fs cmp al,0x38
  421395:	addr16 stc 
  421397:	mov    ecx,0x118d62ce
  42139c:	sbb    DWORD PTR [ecx+0x3bb4d199],eax
  4213a2:	xchg   edx,eax
  4213a3:	outs   dx,BYTE PTR ds:[esi]
  4213a4:	cmp    BYTE PTR [edx],0xc2
  4213a7:	fstp   DWORD PTR [edx]
  4213a9:	(bad)  [edx]
  4213ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ac:	cmp    eax,0x14c684c7
  4213b1:	jp     0x421342
  4213b3:	fsubrp st(5),st
  4213b5:	(bad)  
  4213b7:	or     bh,BYTE PTR [ecx-0x60e620ce]
  4213bd:	rol    al,1
  4213bf:	scas   al,BYTE PTR es:[edi]
  4213c0:	loopne 0x4213e7
  4213c2:	mov    ch,0xed
  4213c4:	out    0xd4,eax
  4213c6:	pop    eax
  4213c7:	dec    ecx
  4213c8:	jbe    0x4213a6
  4213ca:	and    DWORD PTR [edx-0x451e20dc],esi
  4213d0:	push   ss
  4213d1:	ret    
  4213d2:	xchg   edx,eax
  4213d3:	leave  
  4213d4:	call   FWORD PTR [eax+ebp*1-0x30291556]
  4213db:	lds    eax,FWORD PTR [edx+0x26c95c08]
  4213e1:	loope  0x42143a
  4213e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213e4:	mov    DWORD PTR [esi+0x68f13674],eax
  4213ea:	psubq  mm3,QWORD PTR [ebx+0x5dcea35d]
  4213f1:	ret    
  4213f2:	ds jnp 0x42140f
  4213f5:	je     0x4213d4
  4213f7:	stos   BYTE PTR es:[edi],al
  4213f8:	fbld   TBYTE PTR [edi]
  4213fa:	js     0x4213fd
  4213fc:	pop    esp
  4213fd:	mov    WORD PTR [ebx+ebx*1+0x55311c63],es
  421404:	(bad)  
  421405:	rcr    DWORD PTR [esp+edi*2+0xe28f809],cl
  42140c:	or     dl,BYTE PTR [ecx]
  42140e:	xchg   esi,eax
  42140f:	xchg   edi,eax
  421410:	or     BYTE PTR [eax+0x65],dh
  421413:	mov    cl,0x3e
  421415:	pop    esp
  421416:	leave  
  421417:	xchg   edx,eax
  421418:	jecxz  0x42146c
  42141a:	es jne 0x421480
  42141d:	add    BYTE PTR [eax],bh
  42141f:	or     dh,BYTE PTR [edi+0x6cb51dbf]
  421425:	rol    DWORD PTR [esi-0x14f2736d],cl
  42142b:	repnz add ecx,DWORD PTR [ebp-0x39b47a15]
  421432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421433:	retf   0x41b3
  421436:	les    esi,FWORD PTR [ebx]
  421438:	xor    al,BYTE PTR [ebp+0x625a6a82]
  42143e:	pop    esi
  42143f:	pop    esi
  421440:	cmp    DWORD PTR [edi-0x36030028],edx
  421446:	xchg   ecx,eax
  421447:	push   ebx
  421448:	fadd   st,st(5)
  42144a:	mov    bl,0x6c
  42144c:	mov    WORD PTR [edi-0x6983cb16],es
  421452:	sbb    dh,ah
  421454:	push   edx
  421455:	push   edx
  421456:	in     al,0xaa
  421458:	or     DWORD PTR [esi-0x47187f4b],0x7f
  42145f:	ret    
  421460:	and    ebp,DWORD PTR [ebx-0x21]
  421463:	inc    esp
  421464:	xlat   BYTE PTR ds:[ebx]
  421465:	push   ds
  421466:	cld    
  421467:	sub    al,0x9b
  421469:	(bad)  
  42146a:	cli    
  42146b:	inc    ebp
  42146c:	(bad)  
  42146d:	adc    dl,BYTE PTR [ebp-0x49]
  421470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421471:	dec    eax
  421472:	retf   
  421473:	retf   
  421474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421475:	neg    DWORD PTR [ebx+edi*4]
  421478:	lock mov ds:0x8b67927,eax
  42147e:	ss pushf 
  421480:	sbb    DWORD PTR [edi-0x18],edx
  421483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421484:	cmp    eax,0xde624e93
  421489:	in     al,0x67
  42148b:	lahf   
  42148c:	out    dx,al
  42148d:	and    eax,0x78ad8d84
  421492:	cmp    al,0x32
  421494:	cdq    
  421495:	and    ebx,ebx
  421497:	pop    edx
  421498:	and    ch,0x8c
  42149b:	cli    
  42149c:	mov    al,0x2a
  42149e:	stos   BYTE PTR es:[edi],al
  42149f:	pushf  
  4214a0:	popf   
  4214a1:	shr    ah,1
  4214a3:	inc    ebx
  4214a4:	les    eax,FWORD PTR [ebx+0x7e3812d9]
  4214aa:	out    0xf0,eax
  4214ac:	ror    al,0xb4
  4214af:	pop    ds
  4214b0:	or     ah,BYTE PTR es:[ebp-0x4c]
  4214b4:	imul   edi,DWORD PTR [eax-0x7],0xdbbfb995
  4214bb:	adc    cl,BYTE PTR [ebx-0x62]
  4214be:	ret    
  4214bf:	push   ebp
  4214c0:	or     esi,DWORD PTR [esi]
  4214c2:	ins    BYTE PTR es:[edi],dx
  4214c3:	hlt    
  4214c4:	pop    ds
  4214c5:	retf   0x2a9
  4214c8:	xchg   ecx,eax
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xd0216089
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xe8991720
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   DWORD PTR [edi+0x78]
  421830:	lds    eax,FWORD PTR [ebx-0x7c]
  421833:	int    0xca
  421835:	adc    al,0x8b
  421837:	enter  0x5676,0x57
  42183b:	in     eax,0x22
  42183d:	push   ebp
  42183e:	sti    
  42183f:	xchg   ebp,ecx
  421841:	retf   0x8f14
  421844:	enter  0x1676,0xa8
  421848:	sbb    ah,BYTE PTR [edx]
  42184a:	push   ebp
  42184b:	inc    ebx
  42184c:	xchg   ebp,ecx
  42184e:	retf   0x8f14
  421851:	enter  0x5676,0xa8
  421855:	sbb    ah,BYTE PTR [edx]
  421857:	push   ebp
  421858:	inc    ebx
  421859:	xchg   ebp,ecx
  42185b:	retf   0x8f14
  42185e:	enter  0x5676,0xa8
  421862:	sbb    ah,BYTE PTR [edx]
  421864:	push   ebp
  421865:	inc    ebx
  421866:	xchg   ebp,ecx
  421868:	retf   0x7714
  42186b:	enter  0x5676,0xa6
  42186f:	add    eax,0x33435b98
  421874:	les    eax,FWORD PTR [edi]
  421876:	xor    eax,0x9b3ac937
  42187b:	mov    DWORD PTR [esi+0x4a],ecx
  42187e:	cmp    al,0x30
  421880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421881:	mov    ebp,0xbae87bb8
  421886:	pop    ss
  421887:	cmp    ecx,DWORD PTR [eax+0x2d3b4379]
  42188d:	call   0xeab9034b
  421892:	call   0x3b083b9b
  421897:	dec    ebx
  421898:	cmp    esp,DWORD PTR [ebx-0x3d]
  42189b:	sbb    BYTE PTR [ecx+0x12a7e234],0x33
  4218a2:	xchg   BYTE PTR [edi],dl
  4218a4:	das    
  4218a5:	pop    edi
  4218a6:	addr16 xchg ebp,ecx
  4218a9:	retf   0x8f14
  4218ac:	enter  0x5176,0x31
  4218b0:	out    0x7b,al
  4218b2:	push   ss
  4218b3:	mov    ebx,0xec89c715
  4218b8:	sbb    eax,0x3aae35c2
  4218bd:	adc    BYTE PTR [edx+0x30],bh
  4218c0:	dec    edi
  4218c1:	lea    edx,[edx-0x6f7a79ce]
  4218c7:	adc    ebp,DWORD PTR [esi-0x5e]
  4218ca:	fcomp  st(2)
  4218cc:	(bad)  
  4218cd:	dec    ecx
  4218ce:	fild   QWORD PTR [eax+0x30e71ef3]
  4218d4:	in     al,0x5c
  4218d6:	test   BYTE PTR [ebx+ebx*1+0x5f7f055f],dl
  4218dd:	rcr    BYTE PTR [esi+0xf],0xd9
  4218e1:	jl     0x4218ff
  4218e3:	push   eax
  4218e4:	mov    BYTE PTR [eax],ch
  4218e6:	pop    ds
  4218e7:	ret    
  4218e8:	xchg   bh,al
  4218ea:	xchg   edx,eax
  4218eb:	in     al,dx
  4218ec:	sbb    eax,0x3bae35c2
  4218f1:	adc    BYTE PTR [edx],cl
  4218f3:	lods   al,BYTE PTR ds:[esi]
  4218f4:	ror    DWORD PTR [ebp-0x7a6bed8e],1
  4218fa:	test   DWORD PTR [esi+0x4742a2c4],ecx
  421900:	push   0x58358f49
  421905:	push   ds
  421906:	xlat   BYTE PTR ds:[ebx]
  421907:	lods   eax,DWORD PTR ds:[esi]
  421908:	jle    0x421966
  42190a:	jmp    0xc2e2:0x1b5fb0e2
  421911:	rcl    BYTE PTR [esi+0x77],0x5a
  421915:	jl     0x42191b
  421917:	sar    DWORD PTR [ecx+0x4a],0x16
  42191b:	mov    ebx,0x14cac715
  421920:	(bad)
  421924:	test   al,0x1a
  421926:	jb     0x421938
  421928:	inc    ebx
  421929:	xchg   DWORD PTR [ecx+0x688f16cb],eax
  42192f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421930:	cmp    eax,0x55221ae7
  421935:	inc    ebx
  421936:	xchg   ebp,ecx
  421938:	retf   0x6f14
  42193b:	enter  0x5775,0xa3
  42193f:	sbb    ebp,DWORD PTR [eax]
  421941:	push   ebp
  421942:	inc    ebx
  421943:	imul   ecx,ecx,0xce3314ca
  421949:	jbe    0x4219a1
  42194b:	test   al,0x1a
  42194d:	and    al,BYTE PTR [esi+edi*8-0x79]
  421951:	int    0xca
  421953:	add    al,0x8f
  421955:	enter  0x5676,0xad
  421959:	sbb    ah,BYTE PTR [edx]
  42195b:	push   ebp
  42195c:	add    al,BYTE PTR [edi-0x70eb2533]
  421962:	enter  0x5674,0xa8
  421966:	pop    ds
  421967:	and    dl,BYTE PTR [ebx+eax*2-0x79]
  42196b:	int    0xca
  42196d:	adc    al,0x8a
  42196f:	enter  0x5677,0xa8
  421973:	sbb    ah,BYTE PTR [edx]
  421975:	push   ebp
  421976:	inc    ebx
  421977:	xlat   BYTE PTR ds:[ebx]
  421978:	ror    edx,0x14
  42197b:	mov    ecx,eax
  42197d:	jbe    0x4219d6
  42197f:	dec    esp
  421980:	pop    ds
  421981:	and    dl,BYTE PTR [edi+0x43]
  421984:	xchg   DWORD PTR [ebp-0x36],ecx
  421987:	adc    al,0x9f
  421989:	enter  0x4676,0xa8
  42198d:	sbb    ah,BYTE PTR [edx]
  42198f:	push   ebp
  421990:	push   ebx
  421991:	xchg   ebp,ecx
  421993:	ficom  DWORD PTR [edi+ecx*4]
  421996:	enter  0x5676,0xa8
  42199a:	or     ah,BYTE PTR [edx]
  42199c:	push   ebp
  42199d:	inc    ebx
  42199e:	xchg   ebp,ecx
  4219a0:	retf   0x8f14
  4219a3:	enter  0x5676,0x5c
  4219a7:	and    ebp,DWORD PTR [esi]
  4219a9:	push   ebp
  4219aa:	sub    al,BYTE PTR [ebp+ecx*8-0x3c80eb36]
  4219b1:	jbe    0x4219cc
  4219b3:	loope  0x4219cf
  4219b5:	and    dl,BYTE PTR [ebp+0x43]
  4219b8:	xchg   ebp,ecx
  4219ba:	retf   0x8f14
  4219bd:	enter  0x5676,0xa8
  4219c1:	sbb    ah,BYTE PTR [edx]
  4219c3:	push   ebp
  4219c4:	inc    ebx
  4219c5:	xchg   ebp,ecx
  4219c7:	retf   0x8f14
  4219ca:	enter  0x5676,0xa8
  4219ce:	sbb    ah,BYTE PTR [edx]
  4219d0:	push   ebp
  4219d1:	inc    ebx
  4219d2:	xchg   ebp,ecx
  4219d4:	retf   0x8f14
  4219d7:	enter  0x5676,0xa8
  4219db:	sbb    ah,BYTE PTR [edx]
  4219dd:	push   ebp
  4219de:	inc    ebx
  4219df:	xchg   ebp,ecx
  4219e1:	retf   0x8f14
  4219e4:	enter  0x5676,0xa8
  4219e8:	sbb    ah,BYTE PTR [edx]
  4219ea:	push   ebp
  4219eb:	inc    ebx
  4219ec:	xchg   ebp,ecx
  4219ee:	retf   0x8f14
  4219f1:	enter  0x5676,0xa8
  4219f5:	sbb    ah,BYTE PTR [edx]
  4219f7:	push   ebp
  4219f8:	inc    ebx
  4219f9:	xchg   ebp,ecx
  4219fb:	retf   0x8f14
  4219fe:	enter  0x5676,0xa8
  421a02:	sbb    ah,BYTE PTR [edx]
  421a04:	push   ebp
  421a05:	inc    ebx
  421a06:	xchg   ebp,ecx
  421a08:	retf   0x8f14
  421a0b:	enter  0x5676,0xa8
  421a0f:	sbb    ah,BYTE PTR [edx]
  421a11:	push   ebp
  421a12:	inc    ebx
  421a13:	xchg   ebp,ecx
  421a15:	retf   0x8f14
  421a18:	enter  0x5676,0xa8
  421a1c:	sbb    ah,BYTE PTR [edx]
  421a1e:	jnp    0x421a57
  421a20:	loop   0x4219d7
  421a22:	mov    esi,0x76c88f14
  421a27:	mov    dh,0xa3
  421a29:	sbb    ah,BYTE PTR [edx]
  421a2b:	inc    ebp
  421a2c:	inc    ebx
  421a2d:	xchg   ebp,ecx
  421a2f:	push   ds
  421a30:	adc    BYTE PTR [edi-0x57a98d38],cl
  421a36:	dec    edx
  421a37:	addr16 push ss
  421a39:	jno    0x421a0e
  421a3b:	or     dl,0x14
  421a3e:	(bad)
  421a42:	mov    BYTE PTR [edx],bl
  421a44:	and    dh,BYTE PTR [ebp-0x47410a93]
  421a4a:	ja     0x4219db
  421a4c:	enter  0x5676,0xc8
  421a50:	sbb    ah,BYTE PTR [edx]
  421a52:	push   ebp
  421a53:	mov    bl,0x8c
  421a55:	int    0xca
  421a57:	dec    esi
  421a58:	vpmacssdd ymm5,ymm1,YMMWORD PTR [edx+ebx*1-0x78bcaade],ymm4
  421a63:	retf   0x8f14
  421a66:	enter  0x5676,0xa8
  421a6a:	cmp    ah,BYTE PTR [edx]
  421a6c:	push   ebp
  421a6d:	mov    ds:0x14cacd87,eax
  421a72:	(bad)
  421a76:	test   al,0x1a
  421a78:	and    dl,BYTE PTR [ebp+0x43]
  421a7b:	xchg   ebp,ecx
  421a7d:	retf   0x8f14
  421a80:	enter  0x5676,0xa8
  421a84:	sbb    ah,BYTE PTR [edx]
  421a86:	push   ebp
  421a87:	inc    ebx
  421a88:	xchg   ebp,ecx
  421a8a:	retf   0x8f14
  421a8d:	enter  0x5676,0xa8
  421a91:	sbb    ah,BYTE PTR [edx]
  421a93:	push   ebp
  421a94:	inc    ebx
  421a95:	xchg   ebp,ecx
  421a97:	retf   0x8f14
  421a9a:	enter  0x5676,0xa8
  421a9e:	sbb    ah,BYTE PTR [edx]
  421aa0:	push   ebp
  421aa1:	inc    ebx
  421aa2:	xchg   ebp,ecx
  421aa4:	retf   0x8f14
  421aa7:	enter  0x5676,0xa8
  421aab:	sbb    ah,BYTE PTR [edx]
  421aad:	push   ebp
  421aae:	inc    ebx
  421aaf:	xchg   ebp,ecx
  421ab1:	retf   0x8f14
  421ab4:	enter  0x5676,0xa8
  421ab8:	sbb    ah,BYTE PTR [edx]
  421aba:	push   ebp
  421abb:	inc    ebx
  421abc:	xchg   ebp,ecx
  421abe:	retf   0x8f14
  421ac1:	enter  0x5676,0xa8
  421ac5:	sbb    ah,BYTE PTR [edx]
  421ac7:	push   ebp
  421ac8:	inc    ebx
  421ac9:	xchg   ebp,ecx
  421acb:	retf   0x8f14
  421ace:	enter  0x5676,0xa8
  421ad2:	sbb    ah,BYTE PTR [edx]
  421ad4:	push   ebp
  421ad5:	inc    ebx
  421ad6:	xchg   ebp,ecx
  421ad8:	retf   0x8f14
  421adb:	enter  0x5676,0xa8
  421adf:	sbb    ah,BYTE PTR [edx]
  421ae1:	push   ebp
  421ae2:	inc    ebx
  421ae3:	xchg   ebp,ecx
  421ae5:	retf   0x8f14
  421ae8:	enter  0x5676,0xa8
  421aec:	sbb    ah,BYTE PTR [edx]
  421aee:	push   ebp
  421aef:	inc    ebx
  421af0:	xchg   ebp,ecx
  421af2:	retf   0x8f14
  421af5:	enter  0x5676,0xa8
  421af9:	sbb    ah,BYTE PTR [edx]
  421afb:	push   ebp
  421afc:	inc    ebx
  421afd:	xchg   ebp,ecx
  421aff:	retf   0x8f14
  421b02:	enter  0x5676,0xa8
  421b06:	sbb    ah,BYTE PTR [edx]
  421b08:	push   ebp
  421b09:	inc    ebx
  421b0a:	xchg   ebp,ecx
  421b0c:	retf   0x8f14
  421b0f:	enter  0x5676,0xa8
  421b13:	sbb    ah,BYTE PTR [edx]
  421b15:	push   ebp
  421b16:	inc    ebx
  421b17:	xchg   ebp,ecx
  421b19:	retf   0x8f14
  421b1c:	enter  0x5676,0xa8
  421b20:	sbb    ah,BYTE PTR [edx]
  421b22:	push   ebp
  421b23:	inc    ebx
  421b24:	xchg   ebp,ecx
  421b26:	retf   0x8f14
  421b29:	enter  0x5676,0xa8
  421b2d:	sbb    ah,BYTE PTR [edx]
  421b2f:	push   ebp
  421b30:	inc    ebx
  421b31:	xchg   ebp,ecx
  421b33:	retf   0x8f14
  421b36:	enter  0x5676,0xa8
  421b3a:	sbb    ah,BYTE PTR [edx]
  421b3c:	push   ebp
  421b3d:	inc    ebx
  421b3e:	xchg   ebp,ecx
  421b40:	retf   0x8f14
  421b43:	enter  0x5676,0xa8
  421b47:	sbb    ah,BYTE PTR [edx]
  421b49:	push   ebp
  421b4a:	inc    ebx
  421b4b:	xchg   ebp,ecx
  421b4d:	retf   0x8f14
  421b50:	enter  0x5676,0xa8
  421b54:	sbb    ah,BYTE PTR [edx]
  421b56:	push   ebp
  421b57:	inc    ebx
  421b58:	xchg   ebp,ecx
  421b5a:	retf   0x8f14
  421b5d:	enter  0x5676,0xa8
  421b61:	sbb    ah,BYTE PTR [edx]
  421b63:	push   ebp
  421b64:	inc    ebx
  421b65:	xchg   ebp,ecx
  421b67:	retf   0x8f14
  421b6a:	enter  0x5676,0xa8
  421b6e:	sbb    ah,BYTE PTR [edx]
  421b70:	push   ebp
  421b71:	inc    ebx
  421b72:	xchg   ebp,ecx
  421b74:	retf   0x8f14
  421b77:	enter  0x5676,0xa8
  421b7b:	sbb    ah,BYTE PTR [edx]
  421b7d:	push   ebp
  421b7e:	inc    ebx
  421b7f:	xchg   ebp,ecx
  421b81:	retf   0x8f14
  421b84:	enter  0x5676,0xa8
  421b88:	sbb    ah,BYTE PTR [edx]
  421b8a:	push   ebp
  421b8b:	inc    ebx
  421b8c:	xchg   ebp,ecx
  421b8e:	retf   0x8f14
  421b91:	enter  0x5676,0xa8
  421b95:	sbb    ah,BYTE PTR [edx]
  421b97:	push   ebp
  421b98:	inc    ebx
  421b99:	xchg   ebp,ecx
  421b9b:	retf   0x8f14
  421b9e:	enter  0x5676,0xa8
  421ba2:	sbb    ah,BYTE PTR [edx]
  421ba4:	push   ebp
  421ba5:	inc    ebx
  421ba6:	xchg   ebp,ecx
  421ba8:	retf   0x8f14
  421bab:	enter  0x5676,0xa8
  421baf:	sbb    ah,BYTE PTR [edx]
  421bb1:	push   ebp
  421bb2:	inc    ebx
  421bb3:	xchg   ebp,ecx
  421bb5:	retf   0x8f14
  421bb8:	enter  0x5676,0xa8
  421bbc:	sbb    ah,BYTE PTR [edx]
  421bbe:	push   ebp
  421bbf:	inc    ebx
  421bc0:	xchg   ebp,ecx
  421bc2:	retf   0x8f14
  421bc5:	enter  0x5676,0xa8
  421bc9:	sbb    ah,BYTE PTR [edx]
  421bcb:	push   ebp
  421bcc:	inc    ebx
  421bcd:	xchg   ebp,ecx
  421bcf:	retf   0x8f14
  421bd2:	enter  0x5676,0xa8
  421bd6:	sbb    ah,BYTE PTR [edx]
  421bd8:	push   ebp
  421bd9:	inc    ebx
  421bda:	xchg   ebp,ecx
  421bdc:	retf   0x8f14
  421bdf:	enter  0x5676,0xa8
  421be3:	sbb    ah,BYTE PTR [edx]
  421be5:	push   ebp
  421be6:	inc    ebx
  421be7:	xchg   ebp,ecx
  421be9:	retf   0x8f14
  421bec:	enter  0x5676,0xa8
  421bf0:	sbb    ah,BYTE PTR [edx]
  421bf2:	push   ebp
  421bf3:	inc    ebx
  421bf4:	xchg   ebp,ecx
  421bf6:	retf   0x8f14
  421bf9:	enter  0x5676,0xa8
  421bfd:	sbb    ah,BYTE PTR [edx]
  421bff:	push   ebp
  421c00:	inc    ebx
  421c01:	xchg   ebp,ecx
  421c03:	retf   0x8f14
  421c06:	enter  0x5676,0xa8
  421c0a:	sbb    ah,BYTE PTR [edx]
  421c0c:	push   ebp
  421c0d:	inc    ebx
  421c0e:	xchg   ebp,ecx
  421c10:	retf   0x8f14
  421c13:	enter  0x5676,0xa8
  421c17:	sbb    ah,BYTE PTR [edx]
  421c19:	push   ebp
  421c1a:	inc    ebx
  421c1b:	xchg   ebp,ecx
  421c1d:	retf   0x8f14
  421c20:	enter  0x5676,0xa8
  421c24:	sbb    ah,BYTE PTR [edx]
  421c26:	push   ebp
  421c27:	inc    ebx
  421c28:	xchg   ebp,ecx
  421c2a:	retf   0x8f14
  421c2d:	enter  0xfe19,0xa3
  421c31:	sbb    cl,BYTE PTR ds:0xcd974355
  421c37:	retf   0x2d3e
  421c3a:	adc    al,BYTE PTR [edi]
  421c3c:	xor    BYTE PTR [edi+0x37],dl
  421c3f:	mov    esp,0xfb6a13d2
  421c44:	and    al,BYTE PTR [edi]
  421c46:	cmp    ebx,DWORD PTR [ebp+0x10]
  421c49:	daa    
  421c4a:	sub    al,0x40
  421c4c:	xor    esp,esp
  421c4e:	hlt    
  421c4f:	xchg   ecx,eax
  421c50:	mov    al,ds:0xe0e9e2e
  421c55:	pop    eax
  421c56:	xor    al,0x38
  421c58:	and    eax,0x360c661b
  421c5d:	(bad)  
  421c5f:	adc    al,0xa8
  421c61:	outs   dx,DWORD PTR ds:[esi]
  421c62:	inc    BYTE PTR [ebx]
  421c64:	stc    
  421c65:	ja     0x421bf2
  421c67:	addr16 jle 0x421cc4
  421c6a:	fnstcw WORD PTR [ebx+0x74]
  421c6d:	adc    BYTE PTR [esi],0x52
  421c70:	in     eax,dx
  421c71:	in     al,0xc9
  421c73:	out    0x7a,eax
  421c75:	mov    ebx,0x7025c719
  421c7a:	scas   eax,DWORD PTR es:[edi]
  421c7b:	imul   edi,DWORD PTR [ecx-0x59],0x2
  421c7f:	aaa    
  421c80:	addr16 sub eax,0x48ed605
  421c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c87:	leave  
  421c88:	loope  0x421c95
  421c8a:	retf   
  421c8b:	sub    DWORD PTR [eax-0x40],eax
  421c8e:	push   edx
  421c8f:	test   DWORD PTR ds:0xaef0a1fe,0xc8dd1738
  421c99:	mov    esp,0x2ca47936
  421c9e:	in     eax,0x81
  421ca0:	repz mov al,0x68
  421ca3:	ins    DWORD PTR es:[edi],dx
  421ca4:	or     DWORD PTR [edx],ebx
  421ca6:	mov    al,ds:0xae38e964
  421cab:	(bad)  
  421cac:	in     al,0xeb
  421cae:	mov    esi,0xa7e1baf9
  421cb3:	je     0x421c35
  421cb5:	or     edi,esi
  421cb7:	stos   BYTE PTR es:[edi],al
  421cb8:	(bad)  
  421cb9:	(bad)  
  421cba:	rcr    BYTE PTR [edx],1
  421cbc:	cmp    ecx,0x5609cc65
  421cc2:	shr    BYTE PTR [ebx-0x3b],cl
  421cc5:	xchg   ecx,eax
  421cc6:	dec    esp
  421cc7:	test   eax,0xda7c3aa2
  421ccc:	stc    
  421ccd:	add    dl,BYTE PTR [ecx+0x3dcdec53]
  421cd3:	rcr    BYTE PTR [ebp+0x7a6e87cf],1
  421cd9:	push   ds
  421cda:	lock call 0x7e45:0x3c116f2f
  421ce2:	mov    edi,0xdd515cdd
  421ce7:	jno    0x421cb9
  421ce9:	in     eax,0x7d
  421ceb:	adc    eax,0x86e8010e
  421cf0:	(bad)  
  421cf1:	hlt    
  421cf2:	xchg   esp,eax
  421cf3:	jne    0x421ca3
  421cf5:	add    DWORD PTR [edx+0x451c58ec],edi
  421cfb:	cmp    al,0xd9
  421cfd:	push   es
  421cfe:	stos   BYTE PTR es:[edi],al
  421cff:	ret    0x60bf
  421d02:	pop    ds
  421d03:	mov    ds:0x6a39c04d,eax
  421d08:	pop    es
  421d09:	add    al,0x65
  421d0b:	retf   
  421d0c:	shl    DWORD PTR [eax],0x19
  421d0f:	jg     0x421cce
  421d11:	mov    ah,0xff
  421d13:	fild   WORD PTR [esi-0x66c996fa]
  421d19:	push   es
  421d1a:	pop    eax
  421d1b:	xchg   edx,eax
  421d1c:	push   ebx
  421d1d:	mov    esi,0x2b117352
  421d22:	xor    al,0xed
  421d24:	adc    al,0x6f
  421d26:	jb     0x421cfd
  421d28:	push   eax
  421d29:	retf   
  421d2a:	imul   eax,eax,0x47f9f65f
  421d30:	or     DWORD PTR [ecx+eiz*4-0x5b51f35f],esp
  421d37:	call   FWORD PTR [ebp-0x34]
  421d3a:	add    al,0x54
  421d3c:	push   ebp
  421d3d:	dec    edi
  421d3e:	out    dx,al
  421d3f:	mov    eax,0x5cb919f1
  421d44:	icebp  
  421d45:	sbb    DWORD PTR [edi],edx
  421d47:	xor    ebp,eax
  421d49:	or     BYTE PTR [ebx+ecx*8],bh
  421d4c:	dec    edx
  421d4d:	iret   
  421d4e:	aam    0x57
  421d50:	pop    ss
  421d51:	int3   
  421d52:	inc    ebx
  421d53:	push   ebx
  421d54:	int3   
  421d55:	mov    ds:0xe139584f,eax
  421d5a:	pop    ecx
  421d5b:	sub    eax,0x7294e660
  421d60:	jl     0x421da9
  421d62:	or     al,0x91
  421d64:	into   
  421d65:	mov    ecx,0x5d727891
  421d6a:	shl    esp,cl
  421d6c:	mov    edx,0x1104dc26
  421d71:	xor    eax,0x6418033c
  421d76:	test   DWORD PTR cs:[edx],0x8639f993
  421d7d:	mov    esi,0xa41f44be
  421d82:	nop
  421d83:	xor    eax,0x89d8f25f
  421d88:	jecxz  0x421d84
  421d8a:	mov    esp,0x426915e4
  421d8f:	ins    BYTE PTR es:[edi],dx
  421d90:	push   esi
  421d91:	push   es
  421d92:	mov    al,0x98
  421d94:	out    dx,eax
  421d95:	ret    0x8695
  421d98:	enter  0x8ed1,0x3
  421d9c:	scas   al,BYTE PTR es:[edi]
  421d9d:	xchg   esi,eax
  421d9e:	loope  0x421e1c
  421da0:	test   edx,ebp
  421da2:	mov    edx,0x5430777b
  421da7:	(bad)  
  421da9:	ins    BYTE PTR es:[edi],dx
  421daa:	push   edi
  421dab:	imul   ebp,DWORD PTR [ebx+0x35],0x41b40926
  421db2:	stos   DWORD PTR es:[edi],eax
  421db3:	lahf   
  421db4:	and    bh,BYTE PTR [ebx-0x5a]
  421db7:	xchg   ebx,eax
  421db8:	or     al,0x1f
  421dbb:	sub    eax,0xa112c31c
  421dc0:	mov    ebx,0x52d8a8c9
  421dc5:	pop    ebp
  421dc6:	jecxz  0x421d9a
  421dc8:	leave  
  421dc9:	cdq    
  421dca:	jge    0x421de8
  421dcc:	(bad)  
  421dcd:	mov    edx,0x38ac10b1
  421dd2:	pop    ebx
  421dd3:	(bad)  
  421dd4:	popa   
  421dd5:	in     al,0xd4
  421dd7:	loopne 0x421e02
  421dd9:	pusha  
  421dda:	cs or  bh,ch
  421ddd:	rcr    DWORD PTR [eax-0x9daefd7],0x4b
  421de4:	pop    eax
  421de5:	jmp    0x421dcd
  421de7:	imul   ecx,DWORD PTR [edx+edi*4],0x2869387e
  421dee:	shl    esi,1
  421df0:	ror    BYTE PTR [edi-0x213a8ce6],cl
  421df6:	enter  0x1822,0x67
  421dfa:	lds    edi,FWORD PTR [ebx]
  421dfc:	xchg   DWORD PTR [eax+0x1e4b93a3],ebx
  421e02:	push   edi
  421e03:	enter  0x9773,0x25
  421e07:	ret    
  421e08:	cdq    
  421e09:	xor    bl,bl
  421e0b:	call   0xc652:0xeb1e308f
  421e12:	jb     0x421dac
  421e14:	aas    
  421e15:	stos   DWORD PTR es:[edi],eax
  421e16:	fnsave [ecx+0x3dca4e12]
  421e1c:	test   ecx,0xe4db29fb
  421e22:	call   0xdb615ff2
  421e27:	cld    
  421e28:	or     cl,BYTE PTR [edi]
  421e2a:	jle    0x421e76
  421e2c:	pop    ss
  421e2d:	iret   
  421e2e:	enter  0x49cf,0x1c
  421e32:	mov    cl,0x66
  421e34:	pop    es
  421e35:	mov    al,0xfe
  421e37:	call   0x84a6:0xd5eb2353
  421e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e3f:	ds pop eax
  421e41:	inc    edx
  421e42:	xlat   BYTE PTR ds:[ebx]
  421e43:	inc    ebp
  421e44:	nop
  421e45:	xchg   ecx,eax
  421e46:	add    ecx,DWORD PTR [eax+0x7018049]
  421e4c:	inc    ebp
  421e4d:	test   al,0x84
  421e4f:	in     al,0x64
  421e51:	inc    edi
  421e52:	pop    es
  421e53:	push   esp
  421e54:	addr16 int 0x6d
  421e57:	rcl    DWORD PTR [eax],cl
  421e59:	xchg   DWORD PTR [eax],esp
  421e5b:	cld    
  421e5c:	(bad)  
  421e5d:	xchg   edi,eax
  421e5e:	adc    eax,0x49c241a4
  421e63:	cmc    
  421e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e65:	jmp    0x35c8:0x89000af2
  421e6c:	fadd   QWORD PTR [edi]
  421e6e:	stos   DWORD PTR es:[edi],eax
  421e6f:	popa   
  421e70:	xchg   ebp,eax
  421e71:	adc    BYTE PTR [edx],dl
  421e73:	xchg   ebp,eax
  421e74:	pop    es
  421e75:	popf   
  421e76:	mov    fs,WORD PTR [eax+0x73de794b]
  421e7c:	mov    esp,0xccf5c2e2
  421e81:	sbb    esi,esp
  421e83:	arpl   WORD PTR [esi],si
  421e85:	jo     0x421e63
  421e87:	ret    
  421e88:	jp     0x421e80
  421e8a:	pop    eax
  421e8b:	(bad)
  421e8e:	enter  0x9783,0xe7
  421e92:	data16 add bh,BYTE PTR [edi+0x3f]
  421e96:	push   0xc1337f00
  421e9b:	and    dl,BYTE PTR [ebx+ebp*4-0x46ae4eb7]
  421ea2:	(bad)  
  421ea3:	sub    dl,BYTE PTR [esi-0x2]
  421ea6:	xor    ebx,DWORD PTR [edx+0x3e071713]
  421eac:	stc    
  421ead:	jae    0x421e9f
  421eaf:	dec    esi
  421eb0:	sub    DWORD PTR [edi-0x3fa472c5],edi
  421eb6:	mov    ch,0xc3
  421eb8:	int3   
  421eb9:	inc    edx
  421eba:	or     ah,BYTE PTR [ecx-0x12]
  421ebd:	xor    esi,edi
  421ebf:	repz daa 
  421ec1:	pop    edx
  421ec2:	imul   eax,esp,0x18
  421ec5:	cmp    al,0x2e
  421ec7:	adc    BYTE PTR [esi-0x67d6462f],bl
  421ecd:	dec    edx
  421ece:	xchg   BYTE PTR [edx+0x791d7c0],dl
  421ed4:	add    eax,0xfe55b412
  421ed9:	push   ds
  421eda:	addr16 mov ebp,0x7440959e
  421ee0:	pop    edi
  421ee1:	jmp    0xb7df27d8
  421ee6:	les    eax,FWORD PTR [ecx+esi*2+0x4664db47]
  421eed:	std    
  421eee:	mov    bl,0x6a
  421ef0:	mov    DWORD PTR [edx+0x3a],0x794703e2
  421ef7:	cdq    
  421ef8:	test   DWORD PTR [eax+0x7ac943d1],edi
  421efe:	inc    esi
  421eff:	adc    al,0xe3
  421f01:	iret   
  421f02:	fld    TBYTE PTR [esp+esi*8+0x52f2fd49]
  421f09:	or     eax,0xaf86cf02
  421f0e:	adc    eax,0xdf786e4e
  421f13:	push   ss
  421f14:	stc    
  421f15:	stos   DWORD PTR es:[edi],eax
  421f16:	mov    DWORD PTR [edx+0x30],esi
  421f19:	push   eax
  421f1a:	and    BYTE PTR ds:0xcf55f035,0x8
  421f21:	hlt    
  421f22:	into   
  421f23:	or     BYTE PTR [edi+0x21],dl
  421f26:	cld    
  421f27:	fldcw  WORD PTR [ecx]
  421f29:	popf   
  421f2a:	xchg   esi,eax
  421f2b:	pop    ss
  421f2c:	and    ch,BYTE PTR [ebp-0x350df6a0]
  421f32:	dec    ebx
  421f33:	sub    eax,DWORD PTR [edi]
  421f35:	rcl    ch,1
  421f37:	arpl   sp,bp
  421f39:	and    BYTE PTR [esi+0x71],bh
  421f3c:	cmp    ah,ch
  421f3e:	cld    
  421f3f:	in     al,0xcb
  421f41:	sti    
  421f42:	dec    esi
  421f43:	mov    DWORD PTR [esi],esi
  421f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f46:	adc    eax,edx
  421f48:	pop    eax
  421f49:	sahf   
  421f4a:	add    BYTE PTR [eax+0xb955643],ch
  421f50:	dec    edi
  421f51:	cmp    al,0x4c
  421f53:	push   es
  421f54:	out    dx,al
  421f55:	mov    ecx,0xb92437cc
  421f5a:	es ja  0x421f0f
  421f5d:	inc    edx
  421f5e:	leave  
  421f5f:	fsub   QWORD PTR [ebx+0x11]
  421f62:	outs   dx,BYTE PTR ds:[esi]
  421f63:	bound  esi,QWORD PTR [edi+ecx*1-0x77]
  421f67:	mov    DWORD PTR gs:[esi+edx*1],eax
  421f6b:	push   ebx
  421f6c:	adc    cl,BYTE PTR [edi+0x34]
  421f6f:	mov    dh,BYTE PTR [ebp+0x56]
  421f72:	add    ah,BYTE PTR fs:[ebx-0x1cf4f0e9]
  421f79:	xor    al,dh
  421f7b:	into   
  421f7c:	adc    dh,BYTE PTR [ecx-0x7360218]
  421f82:	dec    eax
  421f83:	loopne 0x421ff2
  421f85:	iretw  
  421f87:	push   esp
  421f88:	pop    esi
  421f89:	add    DWORD PTR [esp+edx*4+0x78eea946],0x2efc0cd5
  421f94:	sar    BYTE PTR [ecx-0x20],0x5a
  421f98:	adc    al,0x58
  421f9a:	pop    ebp
  421f9b:	cwde   
  421f9c:	xor    DWORD PTR [edi+esi*2-0x3],eax
  421fa0:	cmp    edi,ecx
  421fa2:	mov    BYTE PTR [edx],0xe2
  421fa5:	inc    edx
  421fa6:	pop    ebp
  421fa7:	mov    edi,0x7be28c34
  421fac:	sub    bh,BYTE PTR [ecx-0xba442e7]
  421fb2:	dec    edx
  421fb3:	mov    al,ds:0x803c9cb8
  421fb8:	cs mov bh,0xe3
  421fbb:	das    
  421fbc:	std    
  421fbd:	shl    DWORD PTR ds:0xc385d30c,0x94
  421fc4:	xchg   DWORD PTR [eax+0x179a89c9],edx
  421fca:	or     ecx,DWORD PTR [ebx+0x45]
  421fcd:	add    ebx,0xffffffad
  421fd0:	outs   dx,BYTE PTR ds:[esi]
  421fd1:	mov    al,0x71
  421fd3:	pop    ecx
  421fd4:	stc    
  421fd5:	pop    ebx
  421fd6:	cld    
  421fd7:	cmp    ecx,DWORD PTR [eax]
  421fd9:	and    DWORD PTR [esi+edi*4+0x55],ecx
  421fdd:	pop    esp
  421fde:	scas   al,BYTE PTR es:[edi]
  421fdf:	es xchg ecx,edi
  421fe2:	sub    eax,0xb7b87ae
  421fe7:	push   ecx
  421fe8:	mov    ds:0x401e94bb,eax
  421fed:	rcl    edi,0x42
  421ff0:	cs pop esi
  421ff2:	adc    bh,BYTE PTR [ebp-0x26]
  421ff5:	add    DWORD PTR [ecx+0x303b773c],edi
  421ffb:	rol    DWORD PTR [ecx+0x2],1
  421ffe:	ret    0x1a9e
  422001:	aas    
  422002:	lods   eax,DWORD PTR ds:[esi]
  422003:	xor    DWORD PTR [eax-0x28],esi
  422006:	adc    dl,al
  422008:	inc    esp
  422009:	mov    DWORD PTR [eax-0xa],ebx
  42200c:	inc    esi
  42200d:	mov    ebp,0xb908a13c
  422012:	jmp    0xe565:0xa55e7df0
  422019:	jno    0x421fbe
  42201b:	mov    al,0xfa
  42201d:	retf   
  42201e:	push   ss
  42201f:	and    dh,BYTE PTR [eax]
  422021:	ins    DWORD PTR es:[edi],dx
  422022:	pop    ecx
  422023:	mov    esi,0xc44b277c
  422028:	or     ecx,edx
  42202a:	pop    ebx
  42202b:	sbb    BYTE PTR [edx],cl
  42202d:	lea    ecx,[esi]
  42202f:	cwde   
  422030:	rcl    DWORD PTR [ecx+0x9],1
  422033:	data16 adc ch,BYTE PTR fs:[edi+0x1a]
  422038:	mov    al,BYTE PTR [ebx-0x6e]
  42203b:	inc    ebx
  42203c:	xchg   esi,eax
  42203d:	or     DWORD PTR [esp],ebx
  422040:	jle    0x422037
  422042:	(bad)  
  422044:	fcomp  DWORD PTR [esi-0x27acced9]
  42204a:	out    dx,al
  42204b:	adc    dh,al
  42204d:	pop    esp
  42204e:	sbb    al,0xb8
  422050:	mov    eax,DWORD PTR [edx+0x1109878]
  422056:	stos   BYTE PTR es:[edi],al
  422057:	lods   al,BYTE PTR ds:[esi]
  422058:	in     eax,dx
  422059:	cmp    BYTE PTR ds:0x9b85cb0f,ah
  42205f:	xchg   edx,eax
  422060:	sti    
  422061:	aas    
  422062:	jge    0x4220c6
  422064:	stos   DWORD PTR es:[edi],eax
  422065:	fmul   QWORD PTR ds:0x6e8bb725
  42206b:	fdiv   QWORD PTR [edi-0x79a5b7a2]
  422071:	pop    esi
  422072:	call   0x385f30d9
  422077:	push   cs
  422078:	inc    edi
  422079:	cwde   
  42207a:	sub    BYTE PTR gs:[esi+0x3f],cl
  42207e:	lahf   
  42207f:	sbb    al,0x42
  422081:	rcl    BYTE PTR [ebx],cl
  422083:	xor    al,0xdb
  422085:	scas   eax,DWORD PTR es:[edi]
  422086:	dec    ebx
  422087:	std    
  422088:	inc    ebp
  422089:	cs pop eax
  42208b:	pushf  
  42208c:	ins    BYTE PTR es:[edi],dx
  42208d:	or     al,0x87
  42208f:	ss rcl esp,1
  422092:	test   DWORD PTR [esi+0x64],edi
  422095:	in     al,0xbf
  422097:	sbb    al,0x14
  422099:	loope  0x4220f7
  42209b:	ret    
  42209c:	int    0x48
  42209e:	stos   DWORD PTR es:[edi],eax
  42209f:	sub    ebp,DWORD PTR [eax]
  4220a1:	(bad)  
  4220a2:	leave  
  4220a3:	inc    eax
  4220a4:	sbb    eax,0x863a2adb
  4220a9:	mov    ds:0x93101eef,al
  4220ae:	dec    edx
  4220af:	aas    
  4220b0:	push   edi
  4220b1:	xor    al,0x26
  4220b3:	fadd   DWORD PTR [edi+0x6e522323]
  4220b9:	stos   BYTE PTR es:[edi],al
  4220ba:	call   0xacfd:0x4cbfba12
  4220c1:	icebp  
  4220c2:	fstp   DWORD PTR [eax+esi*1-0x36]
  4220c6:	and    edx,0x2f99c6ae
  4220cc:	ins    BYTE PTR es:[edi],dx
  4220cd:	xchg   edx,eax
  4220ce:	xor    BYTE PTR [ebp+0x3df552e1],0xd2
  4220d5:	push   esp
  4220d6:	jmp    0x4e29:0x8c248087
  4220dd:	aam    0xc5
  4220df:	and    BYTE PTR [edi+0x36],ch
  4220e2:	(bad)  
  4220e3:	bound  esp,QWORD PTR es:[ebx-0x1c]
  4220e7:	bound  ebx,QWORD PTR [ecx]
  4220e9:	or     al,0x25
  4220eb:	mov    ebp,0xc4fb22a3
  4220f0:	and    eax,0xf206b0ac
  4220f5:	xor    BYTE PTR [ebp+0x5b56f623],dh
  4220fb:	pop    edx
  4220fc:	pop    ebp
  4220fd:	hlt    
  4220fe:	std    
  4220ff:	pushf  
  422100:	imul   eax,DWORD PTR [edx-0x25],0xf63428de
  422107:	dec    edx
  422108:	xlat   BYTE PTR ds:[ebx]
  422109:	mov    al,ds:0x642936df
  42210e:	fisttp DWORD PTR [esi+edx*4-0x1e]
  422112:	mov    dl,0xd6
  422114:	mov    ecx,0xa1a93153
  422119:	mov    dl,bl
  42211b:	cli    
  42211c:	pop    esi
  42211d:	sbb    ch,BYTE PTR [esi]
  42211f:	sub    esp,DWORD PTR ds:0x3d9bc136
  422125:	in     eax,dx
  422126:	vphaddwq ymm0,xmm1
  42212b:	retf   
  42212c:	movzx  ebp,di
  42212f:	retf   0xcc7c
  422132:	imul   eax,DWORD PTR ss:[ebp-0x4d],0x1b
  422137:	scas   al,BYTE PTR es:[edi]
  422138:	sub    bh,BYTE PTR [edi]
  42213a:	sbb    al,0x10
  42213c:	add    ebp,DWORD PTR [ecx-0x22e91d21]
  422142:	shl    DWORD PTR [edx+0x28],cl
  422145:	inc    ebp
  422146:	sub    eax,0xc071fbf6
  42214b:	and    BYTE PTR [ebx+0x48],cl
  42214e:	fdivr  QWORD PTR [edi-0x70de8e00]
  422154:	les    ecx,FWORD PTR [esi]
  422156:	(bad)  
  422157:	into   
  422158:	out    0x19,eax
  42215a:	dec    esi
  42215b:	jg     0x42213c
  42215d:	scas   eax,DWORD PTR es:[edi]
  42215e:	dec    edi
  42215f:	mov    ebp,DWORD PTR [esi]
  422161:	sbb    BYTE PTR [ecx],dh
  422163:	retf   0xc3c5
  422166:	xchg   esi,eax
  422167:	pop    esi
  422168:	jge    0x422162
  42216a:	out    0xa9,al
  42216c:	sbb    DWORD PTR [eax+0x28],ebp
  42216f:	pop    esp
  422170:	clc    
  422171:	js     0x422138
  422173:	dec    ecx
  422174:	js     0x4221ab
  422176:	mov    cl,ch
  422178:	fs xor ah,bh
  42217b:	aaa    
  42217c:	sub    DWORD PTR [ecx],edx
  42217e:	push   ds
  42217f:	lahf   
  422180:	lods   al,BYTE PTR ds:[esi]
  422181:	sbb    ecx,DWORD PTR [ebp-0x55241927]
  422187:	dec    edi
  422188:	fs mov ch,0x3a
  42218b:	test   al,0x71
  42218d:	into   
  42218e:	jmp    0xdf7b:0x43a7413d
  422195:	mov    ds:0xb27e8a33,al
  42219a:	scas   eax,DWORD PTR es:[edi]
  42219b:	sbb    dh,cl
  42219d:	or     eax,0x117ceb44
  4221a2:	mov    BYTE PTR [ecx-0x64],ah
  4221a5:	ret    0x7ca1
  4221a8:	imul   ebx,DWORD PTR [eax],0x12
  4221ab:	retf   0x5cc5
  4221ae:	es pop ebp
  4221b0:	outs   dx,BYTE PTR ds:[esi]
  4221b1:	popa   
  4221b2:	adc    al,0x49
  4221b4:	sbb    BYTE PTR [eax+ebp*2-0x5d42e05a],0xd9
  4221bc:	xor    eax,0xcf2e6a4f
  4221c1:	mov    ecx,0xe158e4f3
  4221c6:	jbe    0x42215e
  4221c8:	xor    al,0x96
  4221ca:	xchg   ebp,eax
  4221cb:	add    DWORD PTR [esi+0x77],eax
  4221ce:	dec    eax
  4221cf:	jae    0x42220d
  4221d1:	fs ins BYTE PTR es:[edi],dx
  4221d3:	dec    eax
  4221d4:	jge    0x422219
  4221d6:	mov    bl,0x52
  4221d8:	fwait
  4221d9:	mov    bh,0x7a
  4221db:	xchg   esp,eax
  4221dc:	or     al,0x94
  4221de:	call   0x230b050e
  4221e3:	mov    bh,BYTE PTR ds:0xe4b382b5
  4221e9:	daa    
  4221ea:	fs jmp 0x3623f332
  4221f0:	mov    ch,0x86
  4221f2:	je     0x422201
  4221f4:	mov    ecx,0x3f8bbeec
  4221f9:	push   eax
  4221fa:	stos   BYTE PTR es:[edi],al
  4221fb:	sub    DWORD PTR gs:[ebp+ebx*4-0x1f],esi
  422200:	imul   ebp,DWORD PTR [eax+ecx*2],0x11
  422204:	js     0x422267
  422206:	fs into 
  422208:	aad    0xd
  42220a:	or     ah,dl
  42220c:	adc    cl,BYTE PTR [esi]
  42220e:	outs   dx,BYTE PTR ds:[esi]
  42220f:	out    dx,eax
  422210:	dec    edx
  422211:	fistp  DWORD PTR [ebx+eax*8-0x31171c4c]
  422218:	repz jmp 0x42219f
  42221b:	lahf   
  42221c:	popa   
  42221d:	jecxz  0x42227d
  42221f:	je     0x4221a6
  422221:	shr    edx,1
  422223:	mov    gs,WORD PTR [esp+edi*2]
  422226:	xor    al,0x72
  422228:	jae    0x42228a
  42222a:	inc    ecx
  42222b:	cmc    
  42222c:	shl    DWORD PTR [ebp-0x5e25d7c7],cl
  422232:	jle    0x42227d
  422234:	inc    ebp
  422235:	fadd   QWORD PTR [edx+0x62]
  422238:	xchg   esi,eax
  422239:	(bad)  [edx]
  42223b:	ins    BYTE PTR es:[edi],dx
  42223c:	imul   ebp,ecx,0x29
  42223f:	inc    esp
  422240:	test   DWORD PTR [ecx-0x1b],esp
  422243:	mov    ebp,0x5a544764
  422248:	push   cs
  422249:	pop    eax
  42224a:	jae    0x42229e
  42224c:	into   
  42224d:	aaa    
  42224e:	in     eax,0x31
  422250:	nop
  422251:	xor    al,0x56
  422253:	jno    0x422201
  422255:	jne    0x422211
  422257:	sbb    al,0xd4
  422259:	sahf   
  42225a:	xchg   edx,eax
  42225b:	inc    edx
  42225c:	mov    bh,0xfc
  42225e:	jg     0x422244
  422260:	mov    edi,DWORD PTR [edx-0xb]
  422263:	and    eax,0x9de7bc52
  422268:	pop    ecx
  422269:	cs dec ebp
  42226b:	mov    edi,0xeaa54025
  422270:	dec    ebp
  422271:	test   BYTE PTR [edi],ch
  422273:	jo     0x42220f
  422275:	xchg   ebp,eax
  422276:	pop    ss
  422277:	data16 aaa 
  422279:	or     esi,ebx
  42227b:	add    DWORD PTR ss:[esi+0x50],edx
  42227f:	es jecxz 0x422222
  422282:	lods   al,BYTE PTR ds:[esi]
  422283:	fcomp  DWORD PTR [edi+0xb]
  422286:	push   ecx
  422287:	shl    BYTE PTR [ebx+0x30],cl
  42228a:	push   eax
  42228b:	sub    DWORD PTR [esi+0x3],esi
  42228e:	cwde   
  42228f:	jnp    0x4222c7
  422291:	inc    eax
  422292:	sub    BYTE PTR ds:0x226a32a,bh
  422298:	fstp   TBYTE PTR [ecx+esi*8-0x3fddb872]
  42229f:	and    edi,DWORD PTR [edi]
  4222a1:	sub    eax,0x432f3090
  4222a6:	gs pop edi
  4222a8:	mov    ecx,0xac25c305
  4222ad:	cmc    
  4222ae:	and    edi,DWORD PTR [ebx+0x77766af9]
  4222b4:	sahf   
  4222b5:	and    al,0xfb
  4222b7:	into   
  4222b8:	fimul  DWORD PTR [ebp+0x1f0d722c]
  4222be:	jge    0x422325
  4222c0:	(bad)  
  4222c1:	out    0xd1,al
  4222c3:	test   DWORD PTR [edx+ebp*8],esi
  4222c6:	call   0xb9a4:0x48b1fb2f
  4222cd:	jns    0x4222df
  4222cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222d0:	inc    esi
  4222d1:	pop    ss
  4222d2:	cwde   
  4222d3:	retf   
  4222d4:	mov    eax,0xec80cc82
  4222d9:	inc    esi
  4222da:	sahf   
  4222db:	and    BYTE PTR [edi],al
  4222dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222de:	add    ecx,DWORD PTR [esi+0x50]
  4222e1:	(bad)  
  4222e2:	addr16 cdq 
  4222e4:	xor    esp,ecx
  4222e6:	mov    edi,gs
  4222e8:	xor    bl,cl
  4222ea:	aaa    
  4222eb:	pop    esi
  4222ec:	sti    
  4222ed:	pop    ecx
  4222ee:	dec    esp
  4222ef:	lock adc dh,BYTE PTR [esp+ecx*2+0x58cba525]
  4222f7:	push   esp
  4222f8:	iret   
  4222f9:	sbb    DWORD PTR [eax-0x515f169a],esi
  4222ff:	inc    edx
  422300:	mov    dl,BYTE PTR [eax]
  422302:	outs   dx,BYTE PTR ds:[esi]
  422303:	xchg   esp,eax
  422304:	repz jne 0x42231d
  422307:	cdq    
  422308:	in     eax,dx
  422309:	or     BYTE PTR ds:0x6dae9b74,bl
  42230f:	inc    edi
  422310:	mov    bl,0x52
  422312:	add    BYTE PTR [ebx+0x18681833],al
  422318:	outs   dx,BYTE PTR ds:[esi]
  422319:	adc    BYTE PTR [edi+ebp*2],ch
  42231c:	imul   edx,DWORD PTR ds:0x7e4b59d9,0x6fa24dd9
  422326:	jl     0x4222e6
  422328:	or     al,0x10
  42232a:	adc    al,ah
  42232c:	inc    ebx
  42232d:	test   DWORD PTR [eax-0x2d],eax
  422330:	jmp    0x36d42f1c
  422335:	loop   0x422321
  422337:	in     eax,dx
  422338:	xchg   BYTE PTR [esi+0x6192e973],bh
  42233e:	dec    esi
  42233f:	inc    edx
  422340:	sub    BYTE PTR [ecx],al
  422342:	inc    edi
  422343:	shl    DWORD PTR [ebp+0x35edf744],cl
  422349:	push   edi
  42234a:	mov    ebp,0xdd744055
  42234f:	push   eax
  422350:	jbe    0x42230b
  422352:	retf   
  422353:	repnz mov bl,bh
  422356:	rcr    BYTE PTR [esi],1
  422358:	les    ebp,FWORD PTR [edx-0x2e]
  42235b:	bound  esi,QWORD PTR [eax+0x32]
  42235e:	jge    0x422309
  422360:	lahf   
  422361:	sub    eax,0x58490c07
  422366:	and    eax,0x500c9c1e
  42236b:	push   ebx
  42236c:	scas   al,BYTE PTR es:[edi]
  42236d:	cmp    esi,esi
  42236f:	jecxz  0x42239b
  422371:	mov    eax,0xfe51473c
  422376:	out    dx,al
  422377:	jg     0x42237e
  422379:	xchg   ecx,eax
  42237a:	addr16 jge 0x4223a3
  42237d:	mov    dh,0x2b
  42237f:	in     al,dx
  422380:	ror    edi,1
  422382:	daa    
  422383:	cmc    
  422384:	sbb    DWORD PTR [edi],0x1d
  422387:	cmp    esp,DWORD PTR ds:0xf05efb3c
  42238d:	out    dx,eax
  42238e:	(bad)  
  42238f:	pop    ss
  422390:	cli    
  422391:	xchg   edx,eax
  422392:	imul   edi,DWORD PTR [esi],0x24225742
  422398:	jbe    0x42233f
  42239a:	into   
  42239b:	popf   
  42239c:	add    al,0xf9
  42239e:	mov    bl,cl
  4223a0:	imul   eax,DWORD PTR [eax-0x8],0x4374d1a2
  4223a7:	jg     0x4223aa
  4223a9:	popf   
  4223aa:	dec    ebp
  4223ab:	cli    
  4223ac:	out    0xc5,al
  4223ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223af:	cmp    ecx,eax
  4223b1:	out    0x62,al
  4223b3:	mov    edx,0x5138d53d
  4223b8:	dec    ebp
  4223b9:	jnp    0x422374
  4223bb:	scas   eax,DWORD PTR es:[edi]
  4223bc:	mov    dh,BYTE PTR [ebx-0x7663dc7d]
  4223c2:	pop    ss
  4223c3:	xchg   edx,eax
  4223c4:	mov    bh,0x82
  4223c6:	dec    esi
  4223c7:	cmc    
  4223c8:	ja     0x4223d8
  4223ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223cb:	ret    0xb43f
  4223ce:	mov    ecx,DWORD PTR [ebx-0x336a4c0a]
  4223d4:	sbb    DWORD PTR [edi-0x6d],edi
  4223d7:	fsubp  st(0),st
  4223d9:	lods   eax,DWORD PTR ds:[esi]
  4223da:	cld    
  4223db:	push   edx
  4223dc:	add    dh,BYTE PTR [edi+eax*4+0x774f648a]
  4223e3:	ins    DWORD PTR es:[edi],dx
  4223e4:	shr    BYTE PTR [edx],1
  4223e6:	mov    bh,0x6a
  4223e8:	fisttp WORD PTR [edi-0x14a15660]
  4223ee:	push   0xffffffba
  4223f0:	stos   BYTE PTR es:[edi],al
  4223f1:	test   DWORD PTR [eax],0x158da63a
  4223f7:	daa    
  4223f8:	push   0x38
  4223fa:	jbe    0x4223af
  4223fc:	xchg   ebp,eax
  4223fd:	ja     0x422419
  4223ff:	or     ebp,esi
  422401:	mov    ebx,0xb9a25ddc
  422407:	push   es
  422408:	sub    cl,BYTE PTR [esp+esi*8-0x498ca214]
  42240f:	xchg   esp,eax
  422410:	shl    BYTE PTR [ebx+0x7c54df2c],1
  422416:	call   0x2372a293
  42241b:	lock mov ds:0xeaa2af6d,al
  422421:	sub    eax,0x689c800f
  422426:	mov    dh,0xe9
  422428:	ficom  WORD PTR [esi+0x6c]
  42242b:	sbb    BYTE PTR gs:[esi-0x50],cl
  42242f:	inc    edi
  422430:	enter  0xb592,0x88
  422434:	jnp    0x4223f2
  422436:	ret    
  422437:	jnp    0x42249f
  422439:	std    
  42243a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42243b:	pop    es
  42243c:	test   al,0x5
  42243e:	or     eax,0xc931f85d
  422443:	aaa    
  422444:	sub    DWORD PTR [ecx+0x7d],ebp
  422447:	cwde   
  422448:	fwait
  422449:	dec    ecx
  42244a:	push   edx
  42244b:	mov    ch,0xd4
  42244d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42244e:	xchg   esp,eax
  42244f:	scas   eax,DWORD PTR es:[edi]
  422450:	push   esp
  422451:	test   DWORD PTR [ecx-0x35],0xf644787f
  422458:	bound  esi,QWORD PTR [ecx+0x4]
  42245b:	mov    bh,0x5c
  42245d:	jge    0x422472
  42245f:	(bad)  
  422460:	fcompp 
  422462:	aas    
  422463:	(bad)  
  422464:	cmc    
  422465:	pop    ebx
  422466:	repnz stos DWORD PTR es:[edi],eax
  422468:	jmp    0x1018181f
  42246d:	daa    
  42246e:	outs   dx,DWORD PTR ds:[esi]
  42246f:	mov    DWORD PTR [esi],0x9e849b7c
  422475:	aad    0xe3
  422477:	out    dx,eax
  422478:	aas    
  422479:	xchg   edi,eax
  42247a:	lea    eax,[ebx]
  42247c:	leave  
  42247d:	adc    BYTE PTR [ecx],ah
  42247f:	out    dx,al
  422480:	sbb    al,0xdc
  422482:	cs iret 
  422484:	mov    WORD PTR ds:0x70faa2b3,?
  42248a:	in     al,0xd2
  42248c:	mov    bh,0x6b
  42248e:	add    esi,DWORD PTR [ecx]
  422490:	mov    ds:0xc28dce8a,eax
  422495:	xlat   BYTE PTR ds:[ebx]
  422496:	jmp    0x7ab8:0xbfd51f32
  42249d:	xor    DWORD PTR [edi],ebp
  42249f:	jb     0x422481
  4224a1:	nop
  4224a2:	mov    DWORD PTR [edi-0x4b],eax
  4224a5:	sub    dh,BYTE PTR [eax]
  4224a7:	xchg   ecx,eax
  4224a8:	shr    BYTE PTR [edi+ecx*2],1
  4224ab:	pop    ebp
  4224ac:	xor    edi,DWORD PTR [eax+esi*2-0x45]
  4224b0:	mov    esp,0x60b1618
  4224b5:	xor    DWORD PTR [ebx],ecx
  4224b7:	in     eax,0x4
  4224b9:	inc    ebp
  4224ba:	cmp    eax,0x29fa2430
  4224bf:	addr16 fxch st(7)
  4224c2:	ret    0xf2d8
  4224c5:	dec    ecx
  4224c6:	or     dh,ch
  4224c8:	mov    bh,0xd9
  4224ca:	or     al,0xd5
  4224cc:	sub    esi,DWORD PTR [edi]
  4224ce:	std    
  4224cf:	imul   ebx,DWORD PTR [esi-0x5649f0b1],0x214d2e2e
  4224d9:	sahf   
  4224da:	cmc    
  4224db:	hlt    
  4224dc:	iret   
  4224dd:	push   ecx
  4224de:	xor    BYTE PTR [ebx+edi*2-0x33],bh
  4224e2:	push   0xffffff86
  4224e4:	adc    eax,0xc60d3850
  4224e9:	out    dx,eax
  4224ea:	retf   
  4224eb:	and    DWORD PTR [edx+esi*8-0x80],0x62662ba6
  4224f3:	mov    eax,0x4bb393c5
  4224f8:	inc    edi
  4224f9:	stos   BYTE PTR es:[edi],al
  4224fa:	fist   WORD PTR [edx+ebx*4]
  4224fd:	leave  
  4224fe:	mov    dh,0x4e
  422500:	pop    ecx
  422501:	shl    DWORD PTR [ecx-0x524d9a73],0x19
  422508:	jnp    0x4224a4
  42250a:	xor    eax,0xbe58eb8
  42250f:	push   ss
  422510:	cmp    DWORD PTR [edi-0xb],esi
  422513:	add    DWORD PTR [ebp-0xf53961e],ebx
  422519:	jle    0x422581
  42251b:	lock sbb eax,0x546fa639
  422521:	dec    esi
  422522:	or     al,0x66
  422524:	lock xor esi,DWORD PTR [ebx-0x3a8ecc41]
  42252b:	or     DWORD PTR [esi-0x4211dbad],eax
  422531:	sar    ebx,cl
  422533:	cmp    al,0xc8
  422535:	(bad)  
  422536:	es imul esi,edx,0x17
  42253a:	loopne 0x4224de
  42253c:	js     0x4224da
  42253e:	aas    
  42253f:	add    eax,0x157ff43b
  422544:	aad    0x28
  422546:	adc    BYTE PTR [edx],dl
  422548:	sbb    ebp,esi
  42254a:	addr16 aad 0x3c
  42254d:	or     DWORD PTR [edx],edx
  42254f:	sahf   
  422550:	in     al,0x3f
  422552:	lds    edx,FWORD PTR [ecx-0x37]
  422555:	or     eax,0x2f5c803f
  42255a:	push   ss
  42255b:	dec    ecx
  42255c:	or     DWORD PTR [ebp+0x24ada383],0x4f5a8cc
  422566:	lods   al,BYTE PTR ds:[esi]
  422567:	jecxz  0x42251b
  422569:	outs   dx,BYTE PTR ds:[esi]
  42256a:	dec    edx
  42256b:	push   ebx
  42256c:	or     BYTE PTR [ecx-0x37],dl
  42256f:	cmp    ecx,esi
  422571:	jns    0x422559
  422573:	mov    BYTE PTR [edi-0x19],bh
  422576:	lahf   
  422577:	fbld   TBYTE PTR [ebp+eiz*1+0x46856fb9]
  42257e:	in     al,0xa9
  422580:	jno    0x422516
  422582:	outs   dx,DWORD PTR ds:[esi]
  422583:	call   0x5251e881
  422588:	lods   eax,DWORD PTR ds:[esi]
  422589:	dec    DWORD PTR [edx+ebx*1-0x16dc730]
  422590:	inc    ebx
  422591:	mov    dl,0xd5
  422593:	hlt    
  422594:	push   esp
  422595:	inc    esp
  422596:	cmp    edx,esi
  422598:	fcmovnbe st,st(6)
  42259a:	addr16 jbe 0x4225bd
  42259d:	jb     0x42252f
  42259f:	stos   BYTE PTR es:[edi],al
  4225a0:	call   0x4c6a:0x6f437439
  4225a7:	mov    esp,0x9767681e
  4225ac:	and    BYTE PTR [ecx],ch
  4225ae:	arpl   WORD PTR [eax-0xd],bx
  4225b1:	and    ebx,ebp
  4225b3:	data16 fld DWORD PTR [eax-0x2fcc5ef9]
  4225ba:	add    al,0x26
  4225bc:	call   0x92bc6fa7
  4225c1:	icebp  
  4225c2:	push   ecx
  4225c3:	xor    eax,0x6ea4c3ef
  4225c8:	lds    ebx,FWORD PTR [edx]
  4225ca:	rol    BYTE PTR [ecx+0x61],cl
  4225cd:	in     al,dx
  4225ce:	pop    esp
  4225cf:	jle    0x422616
  4225d1:	lock add al,0x5a
  4225d4:	sbb    DWORD PTR [eax+edi*4-0x396b7c54],0x8051164c
  4225df:	je     0x422633
  4225e1:	data16 addr16 sbb dh,al
  4225e5:	pop    esp
  4225e6:	push   esp
  4225e7:	sbb    DWORD PTR [esi+0x2d],ecx
  4225ea:	retf   0x2e98
  4225ed:	in     eax,0x18
  4225ef:	and    edx,DWORD PTR [esi-0x4f9a3f39]
  4225f5:	push   ss
  4225f6:	shl    ch,cl
  4225f8:	aaa    
  4225f9:	pop    eax
  4225fa:	mov    eax,0xfb9032c1
  4225ff:	retf   
  422600:	pusha  
  422601:	adc    eax,0xb1905f87
  422606:	out    0x66,eax
  422608:	test   DWORD PTR [eax-0x413cd499],ebx
  42260e:	xchg   ah,cl
  422610:	sti    
  422611:	inc    eax
  422612:	mov    ebp,0x18dde5a
  422617:	pop    edi
  422618:	lods   eax,DWORD PTR ds:[esi]
  422619:	shr    al,1
  42261b:	mov    BYTE PTR [esi],cl
  42261d:	push   ds
  42261e:	cmp    ebx,DWORD PTR [ecx-0xd5987d5]
  422624:	out    0x5b,eax
  422626:	mov    cl,BYTE PTR [ebp+0x1ae030fe]
  42262c:	test   BYTE PTR [ecx],al
  42262e:	fsubr  QWORD PTR [eax-0x34]
  422631:	and    al,0xd2
  422633:	in     al,dx
  422634:	arpl   di,bp
  422636:	inc    eax
  422637:	cmp    DWORD PTR [esp+ebp*1-0x22],esi
  42263b:	mov    ch,0xa3
  42263d:	retf   0x8434
  422640:	fisubr DWORD PTR [esp+eax*1-0x63a71401]
  422647:	adc    DWORD PTR [ecx-0x74],esi
  42264a:	test   al,0xc1
  42264c:	pop    eax
  42264d:	out    dx,eax
  42264e:	fld    TBYTE PTR [eax]
  422650:	sub    BYTE PTR [edi-0x32b2bf6b],dh
  422656:	fsub   DWORD PTR [eax]
  422658:	push   es
  422659:	outs   dx,BYTE PTR ds:[esi]
  42265a:	add    ebp,DWORD PTR [edi+0x66]
  42265d:	shr    DWORD PTR [edx-0x6f],0x36
  422661:	pop    es
  422662:	(bad)  
  422663:	ss add al,0xb7
  422666:	xor    BYTE PTR [ebp+0x5f],dh
  422669:	adc    eax,0x9c15f04e
  42266e:	mov    al,0x2a
  422670:	int    0x9e
  422672:	mov    al,ds:0x12e870fa
  422677:	pop    edx
  422678:	jno    0x42268f
  42267a:	leave  
  42267b:	jns    0x42266f
  42267d:	in     al,0x73
  42267f:	pop    ebx
  422680:	lds    esp,FWORD PTR ds:0x44ca774e
  422686:	mov    gs,edx
  422688:	mov    edi,0x9d006c48
  42268d:	cmc    
  42268e:	mov    bh,0x5d
  422690:	mov    ebp,0xda2dafef
  422695:	xor    al,0x32
  422697:	lods   al,BYTE PTR ds:[esi]
  422698:	add    eax,0x74001292
  42269d:	js     0x422625
  42269f:	mov    ah,0x97
  4226a1:	outs   dx,DWORD PTR ds:[esi]
  4226a2:	xor    al,BYTE PTR [ebp+0x64676e54]
  4226a8:	in     eax,dx
  4226a9:	push   ecx
  4226aa:	out    0x6,al
  4226ac:	jmp    0x7245:0xeb198c5b
  4226b3:	out    dx,al
  4226b4:	aam    0x76
  4226b6:	xchg   edx,eax
  4226b7:	mov    DWORD PTR ds:0xd33905e2,ecx
  4226bd:	ins    BYTE PTR es:[edi],dx
  4226be:	shr    dh,1
  4226c0:	or     eax,0x71523b1a
  4226c5:	nop
  4226c6:	xchg   BYTE PTR [edx-0x48cd127c],bl
  4226cc:	(bad)  
  4226cd:	fiadd  DWORD PTR [edx-0x2d304019]
  4226d3:	sahf   
  4226d4:	stos   DWORD PTR es:[edi],eax
  4226d5:	sub    BYTE PTR [edi+0x2c95f391],dh
  4226db:	push   eax
  4226dc:	inc    ebp
  4226dd:	mov    ds:0xc10464b2,eax
  4226e2:	retf   0xb44e
  4226e5:	mov    ch,0xf2
  4226e7:	mov    al,ds:0xa88e83c4
  4226ec:	and    ebx,0xd74c991
  4226f2:	into   
  4226f3:	mov    ds:0xbea6ca9f,al
  4226f8:	mov    cl,0xf2
  4226fa:	cs fucomp st(0)
  4226fd:	frstor [eax-0x4b336e47]
  422703:	add    BYTE PTR [ebx-0x12],dh
  422706:	or     BYTE PTR [ebx+0x37],0xe
  42270a:	pop    ss
  42270b:	mov    eax,ds:0xfd5ca7dc
  422710:	sbb    ch,al
  422712:	jp     0x4226f5
  422714:	pop    ecx
  422715:	dec    ecx
  422716:	call   0xbaaf08da
  42271b:	sbb    DWORD PTR [ecx],0x83c789c1
  422721:	adc    eax,DWORD PTR [esi+0x1d32b7ba]
  422727:	inc    eax
  422728:	cli    
  422729:	mov    eax,ds:0x8e6cc791
  42272e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42272f:	jae    0x422726
  422731:	jge    0x42270b
  422733:	cld    
  422734:	icebp  
  422735:	enter  0x5c7a,0x72
  422739:	into   
  42273a:	and    al,0x2d
  42273c:	push   0x42cd67a8
  422741:	iret   
  422742:	xlat   BYTE PTR ds:[ebx]
  422743:	std    
  422744:	js     0x42278d
  422746:	leave  
  422747:	mov    cl,0x53
  422749:	(bad)  
  42274a:	lea    edx,ds:0xd1e8ab7
  422750:	fwait
  422751:	hlt    
  422752:	pop    es
  422753:	mov    edx,0x7faa2637
  422758:	fldcw  WORD PTR ds:0xa11bc9ee
  42275e:	mov    DWORD PTR [eax+ebp*4+0x9],esi
  422762:	iret   
  422763:	fdiv   DWORD PTR [ebp-0x22]
  422766:	shr    DWORD PTR [ebp+0x45],cl
  422769:	cmp    BYTE PTR [edi+0x3d],0xc5
  42276d:	inc    edi
  42276e:	je     0x422784
  422770:	aaa    
  422771:	nop
  422772:	sub    eax,0x8441f9dd
  422777:	ss test eax,0xebadcbd2
  42277d:	or     esi,esi
  42277f:	je     0x422796
  422781:	adc    BYTE PTR [ebx+0x70e73700],ah
  422787:	(bad)  
  422788:	iret   
  422789:	into   
  42278a:	les    ebp,FWORD PTR [edi]
  42278c:	aaa    
  42278d:	repz fcom DWORD PTR [ebx]
  422790:	and    BYTE PTR [eax],0x14
  422793:	aaa    
  422794:	sub    esp,DWORD PTR [ebx-0x3dbb9dfe]
  42279a:	dec    ebp
  42279b:	test   BYTE PTR ds:0x9895e5d,0xa3
  4227a2:	sub    DWORD PTR [ecx-0x74],ebx
  4227a5:	stos   DWORD PTR es:[edi],eax
  4227a6:	aaa    
  4227a7:	mov    WORD PTR [ebx],cs
  4227a9:	push   ds
  4227aa:	fs cmc 
  4227ac:	sub    DWORD PTR [edi],esi
  4227ae:	push   0x28
  4227b0:	popf   
  4227b1:	fild   QWORD PTR [eax+eiz*8]
  4227b4:	push   eax
  4227b5:	xchg   edx,eax
  4227b6:	fwait
  4227b7:	je     0x4227e7
  4227b9:	imul   ecx,DWORD PTR [ecx+0x68e2992a],0x8ec2d2af
  4227c3:	ror    DWORD PTR ds:0x6789dfbb,1
  4227c9:	repz stc 
  4227cb:	arpl   WORD PTR gs:[edx+0x2f],ax
  4227cf:	xchg   edx,eax
  4227d0:	shl    DWORD PTR [esi+0x7d],1
  4227d3:	and    esi,DWORD PTR [ebx]
  4227d5:	dec    esp
  4227d6:	jmp    0x1b6b503a
  4227db:	inc    ebp
  4227dc:	stos   DWORD PTR es:[edi],eax
  4227dd:	cmp    cl,BYTE PTR [ebx]
  4227df:	mov    DWORD PTR [ebx],esi
  4227e1:	es jne 0x4227f4
  4227e4:	or     esp,DWORD PTR [edx-0xd880111]
  4227ea:	inc    esp
  4227eb:	fadd   st(7),st
  4227ed:	mov    dh,0x1d
  4227ef:	ins    DWORD PTR es:[edi],dx
  4227f0:	fld    DWORD PTR [esi-0x2]
  4227f3:	stc    
  4227f4:	fwait
  4227f5:	pop    es
  4227f6:	js     0x42280b
  4227f8:	xor    eax,0x5e16d6fe
  4227fd:	fmul   QWORD PTR [edx-0x34]
  422800:	jbe    0x4227fb
  422802:	cli    
  422803:	mov    ah,0xe6
  422805:	repnz fwait
  422807:	stc    
  422808:	lea    ecx,[esi]
  42280a:	mov    edi,0xbe93672f
  42280f:	dec    ecx
  422810:	jb     0x422842
  422812:	mov    edi,0x35330872
  422817:	pusha  
  422818:	pop    edx
  422819:	sub    eax,0xe343f581
  42281e:	sbb    cl,BYTE PTR [esp+ebp*4]
  422821:	adc    BYTE PTR [ecx],bh
  422823:	loopne 0x422858
  422825:	and    al,0x64
  422827:	shl    DWORD PTR [ebx],cl
  422829:	fiadd  WORD PTR [ecx-0x5d]
  42282c:	add    bl,bl
  42282e:	and    ecx,eax
  422830:	mov    edx,0x94dfe652
  422835:	shl    BYTE PTR [ebx],0xb5
  422838:	mov    al,0xac
  42283a:	call   DWORD PTR [eax+0x45]
  42283d:	inc    ebp
  42283e:	(bad)  
  42283f:	mov    eax,ds:0x9a550d08
  422844:	repnz call 0x2c3c:0x1a4fefa
  42284c:	push   ebx
  42284d:	xor    eax,0x38da211c
  422852:	pop    esp
  422853:	(bad)  
  422854:	outs   dx,BYTE PTR ds:[esi]
  422855:	mov    cs,WORD PTR [ecx-0x18450350]
  42285b:	imul   eax,ebx,0xffffff8b
  42285e:	retf   0xfd8f
  422861:	mov    eax,gs:0x52748180
  422867:	bound  edi,QWORD PTR [edi+0x4ff58075]
  42286d:	imul   BYTE PTR [ebx-0x75]
  422870:	xchg   DWORD PTR [edx+0x38],eax
  422873:	xchg   esp,eax
  422874:	cmc    
  422875:	fist   DWORD PTR [edx+0x28]
  422878:	(bad)  
  422879:	and    al,0x5d
  42287b:	in     eax,dx
  42287c:	mov    ah,0xff
  42287e:	imul   esi,DWORD PTR [eax-0xfd8f846],0x6a
  422885:	out    dx,eax
  422886:	stos   DWORD PTR es:[edi],eax
  422887:	lods   eax,DWORD PTR ds:[esi]
  422888:	push   cs
  422889:	xchg   esi,eax
  42288a:	pop    esp
  42288b:	mov    BYTE PTR [edi],al
  42288d:	push   0x8a6274a6
  422892:	mov    bl,0xc8
  422894:	pop    esi
  422895:	mov    ebp,0x8b2f8e20
  42289a:	mov    ss,WORD PTR [edi-0x1da3db62]
  4228a0:	mov    ds:0x7ebd2ab1,al
  4228a5:	pop    ss
  4228a6:	outs   dx,DWORD PTR ds:[esi]
  4228a7:	mov    ecx,0xa6f10d20
  4228ac:	fisttp QWORD PTR [edx+0x71d1543c]
  4228b2:	jae    0x422912
  4228b4:	arpl   WORD PTR ds:0x89b0e98d,bp
  4228ba:	mov    ebx,0x599e6491
  4228bf:	(bad)  
  4228c0:	or     BYTE PTR [ecx-0x48357261],al
  4228c6:	and    DWORD PTR [edx+0x7f],esi
  4228c9:	pop    edi
  4228ca:	cmp    eax,0x4b
  4228cd:	mov    DWORD PTR [esi],ebx
  4228cf:	jne    0x422933
  4228d1:	ss cs mov ch,0x7d
  4228d5:	adc    DWORD PTR [esi+ebp*8+0x26],0x17ca0c8f
  4228dd:	add    BYTE PTR [ecx-0x4c],cl
  4228e0:	xor    edx,DWORD PTR [eax+eax*4-0x4d]
  4228e4:	xchg   ecx,eax
  4228e5:	out    0xcf,al
  4228e7:	ret    0xc806
  4228ea:	rol    BYTE PTR [edx+0x8],cl
  4228ed:	mov    ebp,0x98aee281
  4228f2:	or     DWORD PTR [esi-0x36],esp
  4228f5:	mov    bl,cl
  4228f7:	mov    esi,0x5a75751
  4228fc:	scas   eax,DWORD PTR es:[edi]
  4228fd:	xor    eax,0x16702f3a
  422902:	fldcw  WORD PTR [edx]
  422904:	out    dx,eax
  422905:	ins    BYTE PTR es:[edi],dx
  422906:	loop   0x422935
  422908:	push   edx
  422909:	mov    fs,WORD PTR [esi-0x46]
  42290c:	jmp    0x42292d
  42290e:	loop   0x422939
  422910:	std    
  422911:	repz xor bh,BYTE PTR ss:[esi+0x34e6f617]
  422919:	outs   dx,BYTE PTR ds:[esi]
  42291a:	push   cs
  42291b:	mov    eax,ds:0xf54a34a1
  422920:	and    ebp,edi
  422922:	jbe    0x4228c5
  422924:	jno    0x42296e
  422926:	adc    dl,bl
  422928:	popa   
  422929:	inc    eax
  42292a:	pop    edi
  42292b:	inc    esp
  42292c:	xor    DWORD PTR gs:0xb948f20,esp
  422933:	mov    ah,0x81
  422935:	jb     0x422912
  422937:	push   edx
  422938:	dec    ecx
  422939:	inc    esi
  42293a:	adc    BYTE PTR [eax],al
  42293c:	xor    al,0xd2
  42293e:	lods   al,BYTE PTR ds:[esi]
  42293f:	cs lahf 
  422941:	cwde   
  422942:	mov    ds:0x11d25243,al
  422947:	je     0x4228de
  422949:	push   ebx
  42294a:	xchg   esp,eax
  42294b:	or     eax,0xb9c95b67
  422950:	adc    eax,0xa3ae5691
  422955:	nop
  422956:	xor    ebx,DWORD PTR [edi]
  422958:	pushf  
  422959:	mov    esp,0xc483c033
  42295e:	adc    dl,al
  422960:	adc    BYTE PTR [eax],al
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
