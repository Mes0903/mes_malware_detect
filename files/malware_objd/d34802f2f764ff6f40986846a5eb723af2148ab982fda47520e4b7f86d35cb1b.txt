
d34802f2f764ff6f40986846a5eb723af2148ab982fda47520e4b7f86d35cb1b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	cs xchg esp,eax
  411002:	mul    dh
  411004:	jp     0x410fc5
  411006:	mov    edi,0x43a5324b
  41100b:	dec    ebx
  41100c:	lock scas al,BYTE PTR es:[edi]
  41100e:	in     al,dx
  41100f:	test   al,0xd9
  411011:	xbegin 0xf741212d
  411017:	adc    dh,dl
  411019:	ret    
  41101a:	fldcw  WORD PTR [esi+eiz*8-0xfb5edf0]
  411021:	pop    ebp
  411022:	rcr    DWORD PTR [ebx-0x60],1
  411025:	ret    0x9048
  411028:	outs   dx,BYTE PTR ds:[esi]
  411029:	mov    dh,0x9d
  41102b:	mov    ds:0x166c972c,eax
  411030:	add    ch,BYTE PTR [ebp-0x6adcfb4b]
  411036:	fiadd  WORD PTR [ebx+0x4a]
  411039:	pop    esi
  41103a:	es loopne 0x411088
  41103d:	repz add bl,BYTE PTR [eax-0x3d06efc3]
  411044:	test   BYTE PTR [ebx-0xc4df13e],bh
  41104a:	jnp    0x411024
  41104c:	ins    BYTE PTR es:[edi],dx
  41104d:	mul    DWORD PTR gs:[ebp+0x2b]
  411051:	dec    edx
  411052:	mov    dl,0x27
  411054:	ins    DWORD PTR es:[edi],dx
  411055:	test   eax,0x7789b166
  41105a:	or     bl,ch
  41105c:	xchg   esi,eax
  41105d:	and    eax,edx
  41105f:	adc    BYTE PTR ds:0x9504c004,0x7
  411066:	mul    bh
  411068:	push   esp
  411069:	lahf   
  41106a:	lods   al,BYTE PTR ds:[esi]
  41106b:	(bad)  
  41106d:	dec    eax
  41106e:	sti    
  41106f:	jns    0x411004
  411071:	aaa    
  411072:	loop   0x411069
  411074:	add    ch,cl
  411076:	retf   0x9d7f
  411079:	or     DWORD PTR [edi+0x6b],esp
  41107c:	add    bl,bl
  41107e:	jnp    0x411058
  411080:	push   edi
  411081:	hlt    
  411082:	add    bh,BYTE PTR [ebx]
  411084:	adc    esi,ebx
  411086:	mov    edx,0x7b1f4c61
  41108b:	fcmovnbe st,st(0)
  41108d:	mov    eax,0xd2e21ba1
  411092:	adc    ch,0x38
  411095:	scas   eax,DWORD PTR es:[edi]
  411096:	add    ebx,esi
  411098:	daa    
  411099:	pushf  
  41109a:	mov    eax,0x7f1e785e
  41109f:	inc    ecx
  4110a0:	sbb    DWORD PTR [edi+0x3be5d0a3],edi
  4110a6:	jmp    0x5393a454
  4110ab:	enter  0xa3c0,0xfc
  4110af:	iret   
  4110b0:	lea    ebx,[esi-0x3c1d9a9f]
  4110b6:	repnz mov ah,0x52
  4110b9:	popf   
  4110ba:	mov    al,ds:0x82e5c670
  4110bf:	(bad)  
  4110c0:	lock sbb eax,0x185dbc3e
  4110c6:	ds (bad) 
  4110c8:	aad    0xac
  4110ca:	mov    esi,0xbf7e01c6
  4110cf:	push   ebp
  4110d0:	pop    ss
  4110d1:	scas   al,BYTE PTR es:[edi]
  4110d2:	(bad)  
  4110d4:	cmp    eax,0xa20a290f
  4110d9:	enter  0x4b4e,0x60
  4110dd:	inc    ecx
  4110de:	cs jmp 0x9c86:0x46fd
  4110e5:	iret   
  4110e6:	sub    edx,ebp
  4110e8:	lds    eax,FWORD PTR [edi]
  4110ea:	dec    BYTE PTR [edi]
  4110ec:	loopne 0x411078
  4110ee:	pop    edi
  4110ef:	scas   al,BYTE PTR es:[edi]
  4110f0:	ret    
  4110f1:	inc    edx
  4110f2:	ds push ds
  4110f4:	dec    DWORD PTR [edi+0x5943de06]
  4110fa:	cld    
  4110fb:	or     DWORD PTR [eax+ebx*8],edx
  4110fe:	cmp    al,0xfb
  411100:	pushf  
  411101:	sbb    DWORD PTR [ebx],ebp
  411103:	push   ds
  411104:	adc    cl,ah
  411106:	inc    eax
  411107:	or     eax,0x85bbf913
  41110c:	out    dx,al
  41110d:	xor    DWORD PTR [ecx+0xc2aa94e],edx
  411113:	nop
  411114:	scas   al,BYTE PTR es:[edi]
  411115:	lock fnstenv [eax]
  411118:	pop    esi
  411119:	stos   DWORD PTR es:[edi],eax
  41111a:	pop    esi
  41111b:	in     al,0x31
  41111d:	data16 jg 0x4110b3
  411120:	pusha  
  411121:	pop    eax
  411122:	adc    bl,BYTE PTR [edx+0x3a]
  411125:	pushf  
  411126:	outs   dx,BYTE PTR ds:[esi]
  411127:	in     eax,0x62
  411129:	mov    ebx,0x7de71e78
  41112e:	push   ebx
  41112f:	sbb    DWORD PTR [edx],0x82f1a45f
  411135:	mov    ds:0x15afce91,eax
  41113a:	adc    cl,BYTE PTR [eax-0x62667c55]
  411140:	jmp    0x411176
  411142:	and    BYTE PTR [ebx],0xdd
  411145:	adc    eax,0xbbd0ce88
  41114a:	mov    ebp,0x5ddf3ff6
  41114f:	aaa    
  411150:	or     eax,0x592ef002
  411155:	jae    0x41113a
  411157:	fwait
  411158:	and    edx,ebx
  41115a:	pop    es
  41115b:	mov    ds:0x4b3cbd8a,eax
  411160:	jecxz  0x411190
  411162:	ds daa 
  411164:	(bad)  
  411165:	hlt    
  411166:	xlat   BYTE PTR ds:[ebx]
  411167:	lds    esp,FWORD PTR [ebx+esi*4]
  41116a:	loopne 0x411133
  41116c:	fucomi st,st(2)
  41116e:	arpl   WORD PTR [eax-0x1c],di
  411171:	pop    eax
  411172:	mov    cl,0x68
  411174:	push   ecx
  411175:	stos   BYTE PTR es:[edi],al
  411176:	cmp    eax,0x4372fa43
  41117b:	lock iret 
  41117d:	ins    DWORD PTR es:[edi],dx
  41117e:	xchg   edx,eax
  41117f:	ds fld st(6)
  411182:	jecxz  0x41118d
  411184:	xor    DWORD PTR [ebp+0x2c],0xa8c082e7
  41118b:	pop    ecx
  41118c:	mov    ecx,0xae4b8dfc
  411191:	or     eax,0x2af30c71
  411196:	jns    0x41114a
  411198:	fbstp  TBYTE PTR [eax+0x6d177324]
  41119e:	inc    DWORD PTR [ecx]
  4111a0:	inc    eax
  4111a1:	push   esp
  4111a2:	ret    
  4111a3:	mov    ch,0x32
  4111a5:	jb     0x411159
  4111a7:	scas   al,BYTE PTR es:[edi]
  4111a8:	lea    esp,[ebp-0x71]
  4111ab:	inc    esp
  4111ac:	or     DWORD PTR es:[esp+ebx*8],eax
  4111b0:	jne    0x4111b5
  4111b2:	mov    edx,ebp
  4111b4:	out    0x2c,al
  4111b6:	int3   
  4111b7:	imul   DWORD PTR [eax-0xb873369]
  4111bd:	or     al,BYTE PTR [edx+0x61]
  4111c0:	mov    cl,0x81
  4111c2:	adc    DWORD PTR [ecx+0x14],ebx
  4111c5:	jmp    0x3f6d:0xbb6c72b3
  4111cc:	pop    esp
  4111cd:	adc    DWORD PTR ss:0xfc7b83d9,eax
  4111d4:	sub    DWORD PTR [eax+0x55624ef5],ebp
  4111da:	push   edx
  4111db:	mov    dh,0xbe
  4111dd:	aaa    
  4111de:	mov    edi,0xa2de3752
  4111e3:	jle    0x4111e7
  4111e5:	mov    ss,WORD PTR [ebx]
  4111e7:	sbb    edi,esi
  4111e9:	call   0x7ee6:0x173071d6
  4111f0:	cmp    ecx,esp
  4111f2:	mov    ecx,0xc18761db
  4111f7:	jg     0x4111b1
  4111f9:	fisttp WORD PTR [esi-0x4d66767]
  4111ff:	mov    dl,0x3f
  411201:	fimul  DWORD PTR [ebp+edx*1+0x36720f9e]
  411208:	idiv   bl
  41120a:	cld    
  41120b:	mov    esi,0x1683a95a
  411210:	sahf   
  411211:	inc    esp
  411212:	fs sbb al,0xc3
  411215:	cmp    al,BYTE PTR [edi+0x5b]
  411218:	pop    ds
  411219:	idiv   DWORD PTR [eax-0x65091e6d]
  41121f:	out    dx,eax
  411220:	push   ebx
  411221:	loopne 0x411260
  411223:	cmp    eax,DWORD PTR [ebx]
  411225:	out    0x2a,al
  411227:	(bad)  
  411228:	and    ebp,ebp
  41122a:	mov    cl,0x39
  41122c:	stc    
  41122d:	nop
  41122e:	jmp    0x4111b6
  411230:	jp     0x4111d1
  411232:	and    BYTE PTR [ecx-0x15],0x3b
  411236:	stos   BYTE PTR es:[edi],al
  411237:	(bad)  
  411238:	lea    eax,[ebx+0x21457027]
  41123e:	fwait
  41123f:	call   0xe8f6:0x7379d013
  411246:	test   BYTE PTR [ebp+0x2c],0xf1
  41124a:	cmp    al,0x38
  41124c:	das    
  41124d:	imul   esi,DWORD PTR [edi+0x4b],0x47bf7de0
  411254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411255:	enter  0xcf9,0xd2
  411259:	mov    cs,WORD PTR [ebx]
  41125b:	rcr    ah,0x49
  41125e:	ja     0x41127b
  411260:	cmc    
  411261:	aad    0x52
  411263:	popa   
  411264:	mov    bl,0xfc
  411266:	pop    ds
  411267:	and    ch,BYTE PTR [edx]
  411269:	push   ebp
  41126a:	mov    edi,0xde38da32
  41126f:	mov    al,0x53
  411271:	xor    BYTE PTR ds:[ebx-0x2eeb21d9],dh
  411278:	push   esi
  411279:	fcmove st,st(3)
  41127b:	jne    0x4112ce
  41127d:	xchg   ebp,eax
  41127e:	cdq    
  41127f:	int    0x39
  411281:	pop    edi
  411282:	xchg   ebx,eax
  411283:	mov    ch,0x5e
  411285:	popf   
  411286:	repnz mov al,0xe8
  411289:	sti    
  41128a:	inc    ebp
  41128b:	mov    ah,0x35
  41128d:	mov    ds:0xeb173063,al
  411292:	out    dx,al
  411293:	es in  al,dx
  411295:	dec    edx
  411296:	ins    BYTE PTR es:[edi],dx
  411297:	adc    al,0x2e
  411299:	mov    al,ds:0xa2360ceb
  41129e:	adc    eax,0x9a8f5549
  4112a3:	icebp  
  4112a4:	in     al,dx
  4112a5:	ret    0xc048
  4112a8:	popf   
  4112a9:	dec    ecx
  4112aa:	push   ss
  4112ab:	or     ch,ah
  4112ad:	ins    DWORD PTR es:[edi],dx
  4112ae:	sti    
  4112af:	add    eax,0x93fe0cb1
  4112b4:	cmp    dl,bl
  4112b6:	nop
  4112b7:	jmp    0x411335
  4112b9:	jecxz  0x411240
  4112bb:	je     0x411279
  4112bd:	pop    edx
  4112be:	das    
  4112bf:	cmp    esp,ebx
  4112c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c2:	sti    
  4112c3:	dec    esp
  4112c4:	imul   edi,DWORD PTR [edx+0x2f],0x1922d2cd
  4112cb:	sbb    dh,ah
  4112cd:	outs   dx,DWORD PTR ds:[esi]
  4112ce:	imul   ecx,DWORD PTR [eax],0xceb994c4
  4112d4:	lock sbb dh,0x9
  4112d8:	std    
  4112d9:	(bad)  
  4112da:	loop   0x411311
  4112dc:	xor    eax,eax
  4112de:	cwde   
  4112df:	std    
  4112e0:	push   es
  4112e1:	add    dl,BYTE PTR [ebx]
  4112e3:	xchg   esp,eax
  4112e4:	lahf   
  4112e5:	sub    al,BYTE PTR [esi+0x464a0bf7]
  4112eb:	bound  ebx,QWORD PTR [ecx]
  4112ed:	inc    esp
  4112ee:	or     dl,dh
  4112f0:	jge    0x411355
  4112f2:	cmp    BYTE PTR ds:0x501476b3,bh
  4112f8:	into   
  4112f9:	cmp    bh,cl
  4112fb:	or     BYTE PTR [ecx+0x3f],cl
  4112fe:	imul   eax,DWORD PTR [eax+0x5f],0xf5421b2c
  411305:	mov    ebx,0x8594779e
  41130a:	xchg   ebp,eax
  41130b:	lock xor eax,0x1694f88d
  411311:	adc    eax,0xe3788b7f
  411316:	rcr    bh,cl
  411318:	int3   
  411319:	popa   
  41131a:	out    0x55,eax
  41131c:	mov    al,ds:0x2ad6976f
  411321:	in     eax,dx
  411322:	mov    DWORD PTR [edi+0x53],ebp
  411325:	ret    
  411326:	sub    al,0x24
  411328:	call   0x1ad1:0xa12c6233
  41132f:	mov    ebp,0x8d3d7717
  411334:	adc    edi,DWORD PTR ds:0x9e10995c
  41133a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133b:	and    ah,BYTE PTR [ebx-0x53]
  41133e:	lahf   
  41133f:	sbb    esi,DWORD PTR [esi-0xd6fcf71]
  411345:	test   DWORD PTR [ebx],ebx
  411347:	fsubr  QWORD PTR [esi+ebx*4-0x3f0f5e8b]
  41134e:	dec    esp
  41134f:	imul   eax,DWORD PTR [esi-0x1b],0x58de7f35
  411356:	push   ss
  411357:	or     edx,DWORD PTR [ebx+0x73d6f8e2]
  41135d:	daa    
  41135e:	adc    ebx,DWORD PTR [ecx-0x35]
  411361:	dec    ebx
  411362:	std    
  411363:	xor    esp,DWORD PTR [edi-0x213a5894]
  411369:	cmp    ch,bl
  41136b:	(bad)
  41136f:	mov    cl,0x8
  411371:	fwait
  411372:	aam    0x82
  411374:	sbb    eax,0x6582f292
  411379:	jns    0x41137a
  41137b:	push   es
  41137c:	pop    ebx
  41137d:	repz mov ch,0x52
  411380:	pop    edx
  411381:	sbb    eax,0x696f6853
  411386:	xchg   esp,eax
  411387:	call   0x8c860742
  41138c:	out    0x65,al
  41138e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138f:	(bad)  
  411390:	fidivr WORD PTR [ebx+ebx*4+0x99e6f9a]
  411397:	add    BYTE PTR [edi-0x6],0x5e
  41139b:	jnp    0x4113de
  41139d:	shl    dh,cl
  41139f:	inc    esp
  4113a0:	jno    0x411376
  4113a2:	sub    DWORD PTR [ecx-0x57190cb4],0x65294b68
  4113ac:	pop    esp
  4113ad:	dec    edi
  4113ae:	ss dec ecx
  4113b0:	jbe    0x41136c
  4113b2:	cwde   
  4113b3:	sar    BYTE PTR [eax-0x5c],cl
  4113b6:	pop    esi
  4113b7:	popa   
  4113b8:	(bad)  
  4113b9:	int3   
  4113ba:	and    al,0x4e
  4113bc:	adc    bl,bh
  4113be:	pop    edx
  4113bf:	lahf   
  4113c0:	imul   esp,esi,0xffffffa5
  4113c3:	stos   BYTE PTR es:[edi],al
  4113c4:	ret    
  4113c5:	(bad)  
  4113c6:	jmp    0x4113ed
  4113c8:	clc    
  4113c9:	fwait
  4113ca:	add    ah,ah
  4113cc:	pushf  
  4113cd:	and    DWORD PTR [esi],eax
  4113cf:	mov    bh,BYTE PTR [edx+0x417ee0fd]
  4113d5:	dec    DWORD PTR [eax-0x5383c958]
  4113db:	stc    
  4113dc:	dec    esi
  4113dd:	rol    ah,cl
  4113df:	mov    dh,0x7f
  4113e1:	lahf   
  4113e2:	cmp    DWORD PTR [edx],edi
  4113e4:	add    al,0x90
  4113e6:	xchg   DWORD PTR [edi+0x37be6619],ebx
  4113ec:	test   al,0xd8
  4113ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ef:	outs   dx,BYTE PTR ds:[esi]
  4113f0:	and    DWORD PTR [esi],ebx
  4113f2:	mov    dh,0x59
  4113f4:	mov    dl,0xc4
  4113f6:	mov    bh,0x7b
  4113f8:	inc    ebp
  4113f9:	and    ebx,edx
  4113fb:	mov    esp,0x9f244680
  411400:	(bad)
  411403:	mov    esi,0xd8e35a64
  411408:	hlt    
  411409:	sbb    eax,0x994bdda1
  41140e:	or     eax,0x1b91038b
  411413:	daa    
  411414:	inc    ebp
  411415:	je     0x4113ea
  411417:	fld    QWORD PTR [ecx]
  411419:	dec    edx
  41141a:	test   al,0x3c
  41141c:	mov    cl,0x46
  41141e:	mov    esp,0xd40f8c61
  411423:	pop    edi
  411424:	sbb    BYTE PTR [edi],ch
  411426:	je     0x4113f1
  411428:	and    DWORD PTR [edi+0x3e],ebx
  41142b:	je     0x411476
  41142d:	adc    ecx,esi
  41142f:	cwde   
  411430:	inc    ebp
  411431:	mov    esi,0xf5b5e631
  411436:	or     al,BYTE PTR [edi]
  411438:	inc    ebp
  411439:	inc    edx
  41143a:	out    0x96,al
  41143c:	fnstcw WORD PTR [esi-0x78]
  41143f:	aam    0xd2
  411441:	or     eax,0xbe644a34
  411446:	sbb    al,0x2a
  411448:	xchg   cl,al
  41144a:	daa    
  41144b:	mov    ch,bl
  41144d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41144e:	cmp    dh,BYTE PTR [ecx]
  411450:	inc    esi
  411451:	mov    ds:0x74ff3260,eax
  411456:	pusha  
  411457:	push   DWORD PTR [ebp-0x38]
  41145a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41145b:	(bad)  
  41145c:	aad    0x88
  41145e:	(bad)  
  41145f:	mov    esp,0xd0cb52d6
  411464:	inc    ecx
  411465:	ins    DWORD PTR es:[edi],dx
  411466:	adc    eax,0x63752a4f
  41146b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41146c:	adc    al,BYTE PTR [edi+0x38]
  41146f:	jg     0x4114cc
  411471:	sub    BYTE PTR [ecx],0x57
  411474:	sbb    eax,0xeb3453ac
  411479:	in     al,dx
  41147a:	push   0x7b
  41147c:	das    
  41147d:	stc    
  41147e:	bound  esp,QWORD PTR [ecx+0x5bfe57d4]
  411484:	hlt    
  411485:	lods   al,BYTE PTR ds:[esi]
  411486:	dec    esi
  411487:	jge    0x4114ab
  411489:	mov    ebp,0xfc919dbc
  41148e:	sahf   
  41148f:	sbb    al,0x3d
  411491:	ds jle 0x4114bb
  411494:	in     eax,dx
  411495:	jl     0x411472
  411497:	xchg   ebx,ebx
  411499:	or     DWORD PTR [edx+ecx*4],0x3d
  41149d:	pop    edx
  41149e:	mov    edi,0x5f3d7054
  4114a3:	xchg   esi,eax
  4114a4:	sbb    eax,0x3ecb712f
  4114a9:	sbb    al,0xbb
  4114ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ac:	cld    
  4114ad:	jge    0x411481
  4114af:	cli    
  4114b0:	cld    
  4114b1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b3:	dec    edx
  4114b4:	(bad)  
  4114b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b6:	pop    esi
  4114b7:	mov    edi,0xfc6ca5c8
  4114bc:	(bad)  
  4114bd:	(bad)  
  4114be:	mov    cl,BYTE PTR ds:0xd2d02012
  4114c4:	dec    ecx
  4114c5:	mov    WORD PTR [ebx],fs
  4114c7:	imul   ebx,edi,0xd359d47a
  4114cd:	xor    DWORD PTR [ebx+0x325ead32],0xc1f3697a
  4114d7:	in     eax,dx
  4114d8:	or     dl,BYTE PTR [eax-0x718086f8]
  4114de:	and    eax,0x12ac2727
  4114e3:	in     eax,0xc1
  4114e5:	xchg   esi,eax
  4114e6:	(bad)  
  4114e7:	out    dx,al
  4114e8:	ins    BYTE PTR es:[edi],dx
  4114e9:	(bad)  
  4114ea:	push   0xe4dee99d
  4114ef:	cmp    al,0x5b
  4114f1:	add    DWORD PTR [ecx-0x414fb3b1],edx
  4114f7:	ss push ds
  4114f9:	jl     0x411543
  4114fb:	jge    0x41154a
  4114fd:	and    ch,dh
  4114ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411500:	mov    fs,WORD PTR [ebx-0x30]
  411503:	jns    0x41155c
  411505:	out    0xce,al
  411507:	and    eax,0xb6aec246
  41150c:	rcr    DWORD PTR [edx+0x711d1cd3],0x3e
  411513:	mov    edx,0x5751810f
  411518:	push   ebx
  411519:	enter  0x5929,0xa6
  41151d:	mov    ah,0x0
  41151f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411520:	sahf   
  411521:	mov    al,BYTE PTR [edi+eax*4-0x2d]
  411525:	sub    eax,esi
  411527:	pmaxsw mm4,QWORD PTR [ebp+0x7c]
  41152b:	inc    DWORD PTR [ebx]
  41152d:	xor    edx,DWORD PTR [ebx+edx*2+0x6a1d1a2d]
  411534:	data16 cmp BYTE PTR es:[edi],dl
  411538:	pusha  
  411539:	adc    BYTE PTR [esi-0x68],ch
  41153c:	pop    edx
  41153d:	jecxz  0x4114d6
  41153f:	or     eax,0x48bda931
  411544:	fyl2xp1 
  411546:	cmp    al,0x58
  411548:	outs   dx,BYTE PTR ds:[esi]
  411549:	and    DWORD PTR ds:[ecx],ebp
  41154c:	pop    eax
  41154d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41154e:	mov    dh,0xc3
  411550:	daa    
  411551:	daa    
  411552:	(bad)  
  411553:	fldenv [eax]
  411555:	dec    ebx
  411556:	js     0x41158e
  411558:	xchg   ebx,eax
  411559:	and    bh,BYTE PTR [ebx]
  41155b:	(bad)  
  41155c:	mov    cl,0xb3
  41155e:	js     0x41158d
  411560:	pop    ss
  411561:	nop
  411562:	test   bl,cl
  411564:	dec    ebp
  411565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411566:	mov    ch,al
  411568:	mov    fs,WORD PTR [esi]
  41156a:	inc    edx
  41156b:	inc    ebp
  41156c:	mov    al,ds:0x689c964b
  411571:	loopne 0x411532
  411573:	and    DWORD PTR [esi+eax*2],ebp
  411576:	cmp    edx,DWORD PTR [ebx+0x165d5079]
  41157c:	(bad)  
  41157e:	jno    0x4115b9
  411580:	push   ebp
  411581:	pop    esp
  411582:	jg     0x41153d
  411584:	inc    ecx
  411585:	ds inc eax
  411587:	add    DWORD PTR ds:0xa6a337ad,esi
  41158d:	cmp    al,0xf1
  41158f:	xor    BYTE PTR [ecx],0x6d
  411592:	mov    esp,0x3d099897
  411597:	ror    DWORD PTR [ebp+0x15613d12],1
  41159d:	sti    
  41159e:	inc    ebx
  41159f:	mov    al,ds:0x54486a3b
  4115a4:	imul   esi,DWORD PTR [edi],0x41
  4115a7:	and    esp,DWORD PTR [edx-0x36cae5ca]
  4115ad:	xchg   esp,eax
  4115ae:	dec    ecx
  4115af:	js     0x411534
  4115b1:	jnp    0x41159c
  4115b3:	ret    0x2d4f
  4115b6:	aam    0x6b
  4115b8:	js     0x4115b8
  4115ba:	into   
  4115bb:	aad    0x6c
  4115bd:	iret   
  4115be:	(bad)  
  4115bf:	int    0x64
  4115c1:	or     eax,0x7d1c0282
  4115c6:	leave  
  4115c7:	jne    0x41162e
  4115c9:	cmp    esi,DWORD PTR gs:[edi-0x1f]
  4115cd:	mov    edi,ds
  4115cf:	or     ecx,edi
  4115d1:	fs test esi,eax
  4115d4:	dec    edx
  4115d5:	mov    ds:0x734ab688,eax
  4115da:	out    0x60,al
  4115dc:	push   ss
  4115dd:	jle    0x411640
  4115df:	repz into 
  4115e1:	mov    ebx,0x61ae416f
  4115e6:	repz add ch,BYTE PTR [esi+0x9aa5904]
  4115ed:	iret   
  4115ee:	dec    edi
  4115ef:	adc    DWORD PTR [ebx-0x72f78cef],ebx
  4115f5:	sub    DWORD PTR [eax-0x44],ebx
  4115f8:	add    BYTE PTR [edi+0x8],ch
  4115fb:	in     eax,dx
  4115fc:	pushf  
  4115fd:	jne    0x41167c
  4115ff:	ss in  al,0xc1
  411602:	aas    
  411603:	jns    0x4115e2
  411605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411606:	sub    ah,BYTE PTR [eax]
  411608:	jmp    0x41161f
  41160a:	mov    edx,0x24e64e33
  41160f:	xchg   esp,eax
  411610:	mov    esp,0x9fe0e11e
  411615:	sbb    BYTE PTR [ebp-0x26],bh
  411618:	and    esp,ebp
  41161a:	sub    ah,BYTE PTR [ecx]
  41161c:	test   al,0x7
  41161e:	daa    
  41161f:	call   0x5220:0x111ed908
  411626:	aas    
  411627:	mov    esp,0xda0dc335
  41162c:	xor    eax,0xafb20b44
  411631:	dec    ebx
  411632:	sbb    bh,BYTE PTR [eax+0x41]
  411635:	inc    esi
  411636:	sub    ecx,eax
  411638:	(bad)  
  411639:	adc    ecx,eax
  41163b:	cwde   
  41163c:	mov    esp,0x5c6b2ae0
  411641:	test   DWORD PTR [ecx+0x6253882b],0x272239c1
  41164b:	(bad)  
  41164c:	daa    
  41164d:	inc    edx
  41164e:	mov    BYTE PTR [ecx],ah
  411650:	inc    ecx
  411651:	mov    bh,cl
  411653:	dec    edi
  411654:	rcr    dl,cl
  411656:	inc    edx
  411657:	repnz and al,0x24
  41165a:	jl     0x41167c
  41165c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41165d:	(bad)  
  41165e:	fdiv   DWORD PTR [ecx-0x63]
  411661:	inc    eax
  411662:	(bad)  
  411663:	(bad)  
  411664:	call   DWORD PTR [ecx+0xf029032]
  41166a:	push   ebx
  41166b:	(bad)  
  41166d:	lods   al,BYTE PTR ds:[esi]
  41166e:	inc    eax
  41166f:	mov    eax,ds:0xf83e3836
  411674:	dec    ebx
  411675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411676:	jp     0x41169b
  411678:	(bad)  
  411679:	mov    ds:0x78ae334,eax
  41167e:	xchg   ebp,eax
  41167f:	out    0x89,eax
  411681:	or     edi,ebp
  411683:	mov    edi,0x4ff5bf88
  411688:	inc    ebp
  411689:	push   0xffffffe3
  41168b:	iret   
  41168c:	xlat   BYTE PTR cs:[ebx]
  41168e:	nop
  41168f:	jge    0x41167a
  411691:	cmp    al,0x68
  411693:	inc    ecx
  411694:	and    al,0xf1
  411696:	adc    al,0xc0
  411698:	cmc    
  411699:	inc    ebp
  41169a:	xchg   ecx,eax
  41169b:	outs   dx,BYTE PTR ds:[esi]
  41169c:	(bad)  
  41169d:	pop    ecx
  41169e:	push   0x39
  4116a0:	xchg   ecx,eax
  4116a1:	xor    eax,0xf621cee6
  4116a6:	jecxz  0x411632
  4116a8:	adc    al,0x69
  4116aa:	cs ds aam 0x74
  4116ae:	lock fs hlt 
  4116b1:	cmp    DWORD PTR [edx+ecx*8+0x5faf2117],eax
  4116b8:	adc    al,bh
  4116ba:	or     al,0x3
  4116bc:	or     dl,ah
  4116be:	lods   eax,DWORD PTR ds:[esi]
  4116bf:	test   BYTE PTR [edx-0x3d],cl
  4116c2:	jp     0x411711
  4116c4:	sbb    dl,cl
  4116c6:	or     al,al
  4116c8:	out    0xb5,al
  4116ca:	in     al,dx
  4116cb:	popa   
  4116cc:	iret   
  4116cd:	pop    eax
  4116ce:	jne    0x4116d9
  4116d0:	(bad)  
  4116d1:	fistp  DWORD PTR [esi]
  4116d3:	inc    edi
  4116d4:	jecxz  0x411727
  4116d6:	pop    esp
  4116d7:	int    0x72
  4116d9:	mov    edx,0xb33807f9
  4116de:	mov    al,BYTE PTR [edx-0x6298ecc2]
  4116e4:	sub    al,0xc6
  4116e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116e7:	jmp    0x6fe495c3
  4116ec:	popa   
  4116ed:	data16 shl BYTE PTR [ebp-0x2c19c2a7],cl
  4116f4:	fwait
  4116f5:	fwait
  4116f6:	pop    esp
  4116f7:	stos   DWORD PTR es:[edi],eax
  4116f8:	push   ds
  4116f9:	cld    
  4116fa:	sub    edx,DWORD PTR [esi]
  4116fc:	out    dx,eax
  4116fd:	retf   0x4422
  411700:	(bad)  
  411701:	in     eax,dx
  411702:	pop    ds
  411703:	enter  0x9f17,0x1b
  411707:	jns    0x41172a
  411709:	bound  ebp,QWORD PTR [ebp+eax*2-0x18]
  41170d:	mov    eax,0x63f3a48c
  411712:	sbb    cl,BYTE PTR ds:0xb7aba2e0
  411718:	cmp    ebx,ebp
  41171a:	jb     0x411735
  41171c:	push   esi
  41171d:	sbb    DWORD PTR [ebx-0xb],edx
  411720:	sub    DWORD PTR [ebx-0x6d396886],ebx
  411726:	xchg   esp,eax
  411727:	or     DWORD PTR [ebx+ebp*2+0x5a],esi
  41172b:	in     al,dx
  41172c:	add    eax,DWORD PTR [esi+edi*2+0x6c]
  411730:	mov    edx,0x9e1ac90e
  411735:	dec    ebp
  411736:	pop    esp
  411737:	dec    ebp
  411738:	mov    eax,0x9816e351
  41173d:	and    dl,BYTE PTR [ebx+0x5183d186]
  411743:	ud0    edi,DWORD PTR [ecx+0x29]
  411747:	mov    ch,0xfc
  411749:	jns    0x4117c6
  41174b:	jmp    DWORD PTR [ebp+0x73]
  41174e:	sub    ah,BYTE PTR [ecx+0xbc540d8]
  411754:	fadd   QWORD PTR [eax-0x5a]
  411757:	clc    
  411758:	(bad)  
  41175a:	xor    edx,DWORD PTR [esi-0x1a]
  41175d:	ss push es
  41175f:	icebp  
  411760:	xor    bl,dl
  411762:	jle    0x41178f
  411764:	sbb    eax,0xa7e43b2f
  411769:	jae    0x41171f
  41176b:	xchg   edx,eax
  41176c:	fdiv   DWORD PTR [edx+ebp*2-0x76c28bd7]
  411773:	or     edx,ecx
  411775:	aad    0x17
  411777:	into   
  411778:	xor    BYTE PTR [ebx],dh
  41177a:	pusha  
  41177b:	jmp    0xc807ff11
  411780:	cli    
  411781:	inc    eax
  411782:	add    BYTE PTR [edi+0x34f1667],dl
  411788:	(bad)  
  411789:	bound  ecx,QWORD PTR [edx+0x6f]
  41178c:	jg     0x4117d2
  41178e:	and    edx,DWORD PTR [edx]
  411790:	or     BYTE PTR [edi],0x3b
  411793:	in     eax,dx
  411794:	xchg   esp,eax
  411795:	mov    ebx,0x461d843c
  41179a:	(bad)  
  41179b:	jbe    0x411758
  41179d:	dec    esp
  41179e:	jecxz  0x411769
  4117a0:	mov    cl,0x4d
  4117a2:	mov    ds:0x4e3a5970,eax
  4117a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a8:	push   esi
  4117a9:	xlat   BYTE PTR ds:[ebx]
  4117aa:	ins    DWORD PTR es:[edi],dx
  4117ab:	lock dec eax
  4117ad:	aam    0xa1
  4117af:	pop    eax
  4117b0:	jno    0x41174e
  4117b2:	pop    es
  4117b3:	stos   DWORD PTR es:[edi],eax
  4117b4:	stos   BYTE PTR es:[edi],al
  4117b5:	or     DWORD PTR [ecx-0x49dd6817],ecx
  4117bb:	pop    ds
  4117bc:	je     0x411810
  4117be:	push   ebx
  4117bf:	sbb    DWORD PTR [edi-0x7eea6e55],0xffffffa3
  4117c6:	aad    0xea
  4117c8:	and    eax,0xc7bad286
  4117cd:	xor    BYTE PTR [esi+eax*8-0x7c6e7b7d],ah
  4117d4:	rcr    edx,1
  4117d6:	(bad)  
  4117d8:	mov    ah,0xb7
  4117da:	xchg   edx,eax
  4117db:	xchg   BYTE PTR es:[edi+0x7431d054],bh
  4117e2:	jnp    0x4117c0
  4117e4:	sub    esp,DWORD PTR [ebx+0x8a5c78b]
  4117ea:	sub    BYTE PTR [eax+0x4a163bc9],al
  4117f0:	icebp  
  4117f1:	js     0x411783
  4117f3:	pusha  
  4117f4:	and    al,0x28
  4117f6:	lahf   
  4117f7:	adc    BYTE PTR [ebp-0x48],0xa0
  4117fb:	retf   
  4117fc:	ror    BYTE PTR [esi+ecx*8+0x64464a67],cl
  411803:	inc    eax
  411805:	(bad)  
  411806:	xor    eax,0x29227aa1
  41180b:	jg     0x4117dd
  41180d:	sub    BYTE PTR ds:0x1879f945,0xc0
  411814:	bound  esp,QWORD PTR [edx+eax*8+0xf12a9df]
  41181b:	or     al,0xc0
  41181d:	xchg   edi,eax
  41181e:	jecxz  0x4117b0
  411820:	mov    edi,0xa94e44c2
  411825:	scas   al,BYTE PTR es:[edi]
  411826:	mov    esp,0x64bf25b5
  41182b:	ret    0x7dcc
  41182e:	iret   
  41182f:	add    bl,bh
  411831:	mov    ebp,0x57d16b79
  411836:	je     0x41181b
  411838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411839:	jge    0x411886
  41183b:	xchg   esi,eax
  41183c:	mov    bl,0xe
  41183e:	ss retf 0xb409
  411842:	xlat   BYTE PTR ds:[ebx]
  411843:	(bad)  
  411844:	cmp    esi,edi
  411846:	or     esi,ecx
  411848:	add    BYTE PTR [edi],al
  41184a:	leave  
  41184b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184c:	cmp    bh,BYTE PTR [ecx-0x32]
  41184f:	sti    
  411850:	add    BYTE PTR [edi+0x3a],ah
  411853:	mov    bh,0x4a
  411855:	sbb    esp,ecx
  411857:	push   esi
  411858:	jae    0x4118d3
  41185a:	add    eax,0x22362c73
  41185f:	xlat   BYTE PTR ds:[ebx]
  411860:	repz je 0x411839
  411863:	dec    esi
  411864:	xor    al,0xf6
  411866:	inc    ebx
  411867:	adc    BYTE PTR [esi+0x7b],ch
  41186a:	icebp  
  41186b:	mov    al,0x8
  41186d:	fld    DWORD PTR [edx-0x18]
  411870:	inc    bp
  411872:	sar    ah,1
  411874:	test   bh,al
  411876:	mov    esp,0x1d62c5b3
  41187b:	xchg   DWORD PTR [esp+ebp*4-0x79af95e2],ebp
  411882:	out    0xf0,eax
  411884:	loop   0x4118d4
  411886:	(bad)  
  411887:	fnstcw WORD PTR [edx-0x80]
  41188a:	fadd   st,st(5)
  41188c:	push   edx
  41188d:	mov    ecx,0x9ee7183c
  411892:	adc    al,BYTE PTR [esi-0x7732fb68]
  411898:	mov    ds:0xd1c60058,eax
  41189d:	popf   
  41189e:	scas   al,BYTE PTR es:[edi]
  41189f:	cdq    
  4118a0:	xchg   esp,eax
  4118a1:	mov    edi,0x50d4b9a8
  4118a6:	call   0x81b:0x50e09465
  4118ad:	retf   
  4118ae:	test   eax,0x802c726
  4118b3:	push   esi
  4118b4:	push   cs
  4118b5:	popa   
  4118b6:	and    DWORD PTR [ebx+0x253ef748],esi
  4118bc:	adc    eax,0x6f49536d
  4118c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c2:	push   ds
  4118c3:	out    dx,al
  4118c4:	sub    eax,DWORD PTR [eax]
  4118c6:	(bad)  
  4118c7:	mov    DWORD PTR [ecx],ebx
  4118c9:	add    al,0x8c
  4118cb:	sub    edx,DWORD PTR [ecx+0x28edb753]
  4118d1:	push   esi
  4118d2:	aas    
  4118d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d4:	xchg   ecx,eax
  4118d5:	imul   ebx,DWORD PTR [edx-0x2],0x64
  4118d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118da:	ins    BYTE PTR es:[edi],dx
  4118db:	dec    esi
  4118dc:	cmp    BYTE PTR [edi-0x27],bh
  4118df:	out    dx,eax
  4118e0:	rol    esp,0x4e
  4118e3:	push   0xffffffd3
  4118e5:	xchg   ecx,eax
  4118e6:	or     BYTE PTR [ebx+0x4d],0xfd
  4118ea:	pop    ecx
  4118eb:	ffree  st(2)
  4118ed:	add    ah,BYTE PTR [ebx+0x5f5f039f]
  4118f3:	cli    
  4118f4:	hlt    
  4118f5:	jns    0x411923
  4118f7:	xchg   ecx,eax
  4118f8:	mov    ebp,0xac5d6787
  4118fd:	xchg   esp,eax
  4118fe:	xchg   DWORD PTR [edi-0x25],esi
  411901:	mov    ebp,esi
  411903:	xor    esp,DWORD PTR [edx]
  411905:	es sar cl,1
  411908:	aad    0x6e
  41190a:	je     0x4118b6
  41190c:	js     0x4118d6
  41190e:	aam    0x98
  411910:	pop    ebx
  411911:	pop    edi
  411912:	xchg   esp,eax
  411913:	ret    0xdeec
  411916:	inc    edx
  411917:	mov    dl,0xb6
  411919:	out    dx,al
  41191a:	cmp    ch,cl
  41191c:	(bad)  
  41191d:	mov    ah,0xab
  41191f:	fst    QWORD PTR [edi]
  411921:	pop    esp
  411922:	fcom   DWORD PTR ds:[edx-0x2c1ad9db]
  411929:	sub    al,0x62
  41192b:	mov    dl,0x9f
  41192d:	stc    
  41192e:	dec    ecx
  41192f:	push   ebp
  411930:	bt     DWORD PTR [eax+0x5a],ecx
  411934:	or     bl,dh
  411936:	xchg   edx,eax
  411937:	push   cs
  411938:	add    DWORD PTR [eax-0x2ccde8b8],0x6615a91e
  411942:	xchg   ecx,eax
  411943:	loop   0x4118e5
  411945:	lods   eax,DWORD PTR ds:[esi]
  411946:	inc    edi
  411947:	into   
  411948:	inc    edx
  411949:	out    dx,al
  41194a:	dec    eax
  41194b:	and    ebx,DWORD PTR [edx-0x72cf955]
  411951:	push   edi
  411952:	cmp    ebp,DWORD PTR [edx-0x5a08ec65]
  411958:	jmp    0xd655:0x693b4d74
  41195f:	mov    BYTE PTR [ecx-0x30d6fd07],bh
  411965:	sbb    DWORD PTR [edx+0x68061b2c],esp
  41196b:	xor    eax,0x8977da93
  411970:	cs jecxz 0x41190b
  411973:	pop    ecx
  411974:	stos   BYTE PTR es:[edi],al
  411975:	fst    DWORD PTR [ebx+edi*2+0x59]
  411979:	inc    eax
  41197a:	mov    al,0x5b
  41197c:	and    BYTE PTR [esi+0xcef012e],bh
  411982:	stos   BYTE PTR es:[edi],al
  411983:	mov    DWORD PTR [ecx],esi
  411985:	sbb    cl,BYTE PTR [esi-0x553527cf]
  41198b:	cmp    dh,BYTE PTR [edi]
  41198d:	push   edi
  41198e:	push   eax
  41198f:	call   0xc29:0x7e2610fd
  411996:	xchg   edi,eax
  411997:	xchg   esp,eax
  411998:	xchg   esi,eax
  411999:	sbb    esi,0x21fcd310
  41199f:	cmp    ah,BYTE PTR [edi-0x261e8815]
  4119a5:	aaa    
  4119a6:	adc    ch,cl
  4119a8:	inc    eax
  4119a9:	sbb    ebx,DWORD PTR [ecx]
  4119ab:	or     BYTE PTR fs:[eax+eiz*8],al
  4119af:	icebp  
  4119b0:	mov    eax,0x7a057a36
  4119b5:	inc    esp
  4119b6:	jp     0x41193f
  4119b8:	inc    esi
  4119b9:	iret   
  4119ba:	adc    DWORD PTR [eax],ebp
  4119bc:	mov    ds:0x5b0d020a,eax
  4119c1:	mov    ebx,0x84d01ee6
  4119c6:	out    dx,al
  4119c7:	dec    esp
  4119c8:	add    BYTE PTR [edi],dl
  4119ca:	jae    0x411a13
  4119cc:	inc    eax
  4119cd:	mov    al,0x36
  4119cf:	mov    al,ds:0x4a854905
  4119d4:	mov    ecx,0xa75c4760
  4119d9:	xor    ch,cl
  4119db:	dec    eax
  4119dc:	aaa    
  4119dd:	ins    BYTE PTR es:[edi],dx
  4119de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e0:	mov    eax,ds:0x8a689898
  4119e5:	jb     0x41198e
  4119e7:	pop    es
  4119e8:	pop    es
  4119e9:	push   esi
  4119ea:	fwait
  4119eb:	mov    ecx,0x2885522e
  4119f0:	add    DWORD PTR [eax],ecx
  4119f2:	repnz cmp eax,0x9a93cf8d
  4119f8:	dec    edi
  4119f9:	cdq    
  4119fa:	rcr    BYTE PTR [esi],0x13
  4119fd:	cmp    ah,BYTE PTR [edi]
  4119ff:	into   
  411a00:	add    eax,0xc1551d6e
  411a05:	mov    cl,0xf6
  411a07:	adc    DWORD PTR [ebx-0xf5821f7],esp
  411a0d:	lock adc eax,0x4612a11f
  411a13:	dec    ebp
  411a14:	stc    
  411a15:	out    0x97,al
  411a17:	cdq    
  411a18:	or     DWORD PTR [ebx],edi
  411a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1b:	adc    cl,bl
  411a1d:	add    ebx,DWORD PTR [edi]
  411a1f:	dec    ebp
  411a20:	(bad)  
  411a21:	imul   DWORD PTR [eax]
  411a23:	or     BYTE PTR [esi],0x87
  411a26:	xchg   edx,eax
  411a27:	push   ebx
  411a28:	fimul  DWORD PTR [edx-0x42]
  411a2b:	loopne 0x411a2c
  411a2d:	out    0xf4,eax
  411a2f:	jp     0x411a60
  411a31:	(bad)  
  411a33:	add    ebx,DWORD PTR [ebx+0x7ef77107]
  411a39:	add    DWORD PTR [edx+0x27d58410],esi
  411a3f:	push   edi
  411a40:	ret    0xf936
  411a43:	daa    
  411a44:	inc    eax
  411a45:	sub    BYTE PTR [ecx+0x70],ch
  411a48:	mov    al,0xd9
  411a4a:	mov    eax,0x1d13e2c5
  411a4f:	outs   dx,BYTE PTR ds:[esi]
  411a50:	fistp  WORD PTR [edx-0x1cd18b5d]
  411a56:	js     0x4119fd
  411a58:	cwde   
  411a59:	pop    edx
  411a5a:	addr16 pop esi
  411a5c:	mov    al,ds:0x5ce411b
  411a61:	mov    esi,0x154e929f
  411a66:	mov    bh,BYTE PTR [esi+0x5fabfd02]
  411a6c:	jmp    0x4119f8
  411a6e:	sub    bh,dh
  411a70:	dec    esi
  411a71:	fnstenv [esi+0x38bcdc17]
  411a77:	cmp    ebp,esp
  411a79:	js     0x411a53
  411a7b:	fcom   QWORD PTR [edi]
  411a7d:	add    ebp,esi
  411a7f:	pusha  
  411a80:	scas   eax,DWORD PTR es:[edi]
  411a81:	inc    ebx
  411a82:	jmp    0x356d3bd5
  411a87:	xor    cl,cl
  411a89:	push   es
  411a8a:	ror    DWORD PTR [esi+0x21],0x2f
  411a8e:	fcom   QWORD PTR [ecx+0x2fee3171]
  411a94:	push   ss
  411a95:	mov    ds:0x385b5210,al
  411a9a:	aad    0xec
  411a9c:	push   0xffffff83
  411a9e:	and    ecx,DWORD PTR [edi+0x32]
  411aa1:	add    al,0xa5
  411aa3:	(bad)
  411aa6:	xlat   BYTE PTR ds:[ebx]
  411aa7:	outs   dx,DWORD PTR ds:[esi]
  411aa8:	xchg   ecx,eax
  411aa9:	leave  
  411aaa:	mov    fs,ecx
  411aac:	xchg   esi,eax
  411aad:	mov    esp,0x3efd0d07
  411ab2:	loop   0x411ab7
  411ab4:	outs   dx,BYTE PTR ds:[esi]
  411ab5:	pop    ecx
  411ab6:	sub    BYTE PTR [edx-0x7d],dh
  411ab9:	jnp    0x411b19
  411abb:	js     0x411abd
  411abd:	push   ecx
  411abe:	and    al,0xc5
  411ac0:	lock sbb BYTE PTR [eax+0x1d],0x82
  411ac5:	scas   eax,DWORD PTR es:[edi]
  411ac6:	call   0xeda4aa8c
  411acb:	mov    ss,WORD PTR [ecx+0x19]
  411ace:	les    edx,FWORD PTR [esi-0x1f]
  411ad1:	test   BYTE PTR [ebp+edi*2+0x37],dl
  411ad5:	retf   0x233b
  411ad8:	jns    0x411a64
  411ada:	jp     0x411b4f
  411adc:	pop    edx
  411add:	stos   BYTE PTR es:[edi],al
  411ade:	test   eax,0x3084a9eb
  411ae3:	mov    ds:0x22ac92ef,eax
  411ae8:	jg     0x411ae4
  411aea:	xchg   esi,eax
  411aeb:	xchg   esp,eax
  411aec:	loop   0x411b12
  411aee:	jb     0x411aae
  411af0:	push   0x44
  411af2:	jns    0x411ac7
  411af4:	push   0xa
  411af6:	imul   ebp,DWORD PTR [esi+esi*4],0x23cc4297
  411afd:	sub    dl,BYTE PTR ds:0xc04e64c2
  411b03:	mov    ebp,0x13350a8
  411b08:	mov    al,0x75
  411b0a:	aam    0x1
  411b0c:	sbb    al,0x28
  411b0e:	pop    esi
  411b0f:	neg    cl
  411b11:	test   BYTE PTR [esi+0x20],dl
  411b14:	mov    BYTE PTR [ebp-0xc],0x85
  411b18:	add    DWORD PTR [edx+0x2d],ebx
  411b1b:	retf   
  411b1c:	in     al,dx
  411b1d:	mov    ah,0xe8
  411b1f:	jecxz  0x411b87
  411b21:	push   esp
  411b22:	adc    BYTE PTR [ecx],dh
  411b24:	jae    0x411ad9
  411b26:	jo     0x411af1
  411b28:	dec    edx
  411b29:	mov    dh,0xfe
  411b2b:	aam    0xa1
  411b2d:	retf   
  411b2e:	jb     0x411ab8
  411b30:	push   eax
  411b31:	daa    
  411b32:	adc    ecx,edi
  411b34:	(bad)  
  411b36:	pusha  
  411b37:	push   esi
  411b38:	adc    ebx,DWORD PTR [ecx+0x24]
  411b3b:	into   
  411b3c:	int3   
  411b3d:	xchg   DWORD PTR [edi],edx
  411b3f:	dec    esp
  411b40:	xor    eax,0xfb029efc
  411b45:	sar    DWORD PTR [edx-0x5b989def],cl
  411b4b:	mov    dh,0xc
  411b4d:	jno    0x411b6b
  411b4f:	mov    ebp,0x523b7e31
  411b54:	test   al,0x50
  411b56:	fsubr  QWORD PTR [edi]
  411b58:	mov    eax,0xb1a19946
  411b5d:	mov    cl,0xc9
  411b5f:	cmp    eax,DWORD PTR [ecx-0x21cd14ad]
  411b65:	jmp    0x411af0
  411b67:	pop    edx
  411b68:	fidivr DWORD PTR [edi]
  411b6a:	cmp    cl,BYTE PTR [esp+eiz*8-0x3f]
  411b6e:	mov    eax,ds:0x3949979b
  411b73:	icebp  
  411b74:	sub    esi,edi
  411b76:	and    DWORD PTR [ecx+0x1e3129d2],ebp
  411b7c:	or     bl,bl
  411b7e:	cmc    
  411b7f:	int3   
  411b80:	loopne 0x411b49
  411b82:	mov    esi,0x38a0eec8
  411b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b88:	out    0xa4,eax
  411b8a:	push   edi
  411b8b:	xor    DWORD PTR [edi],esi
  411b8d:	sbb    al,0x3a
  411b8f:	in     eax,dx
  411b90:	sbb    al,0xe7
  411b92:	cmp    al,0xf1
  411b94:	mov    dl,0xdc
  411b96:	cmp    eax,0x9bacf1d1
  411b9b:	mov    ebp,0xbab5b4ab
  411ba0:	es push ss
  411ba2:	fnstenv [ebx+0x14]
  411ba5:	popa   
  411ba6:	jns    0x411bc4
  411ba8:	dec    edi
  411ba9:	je     0x411c0a
  411bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bac:	pop    ebx
  411bad:	mov    edx,0xc43d0197
  411bb2:	jmp    0xd1cde43c
  411bb7:	cmp    DWORD PTR [esi+0x798d0bb0],0x9ba9b8b1
  411bc1:	or     esp,DWORD PTR [ebx]
  411bc3:	mov    ch,0x69
  411bc5:	aaa    
  411bc6:	or     BYTE PTR [ebp-0x5f],dh
  411bc9:	mov    eax,0xd904ecf3
  411bce:	mov    ah,0x1
  411bd0:	call   0x97e9d89a
  411bd5:	xor    BYTE PTR [ebx],bl
  411bd7:	loop   0x411b6a
  411bd9:	or     BYTE PTR [ecx],0xb6
  411bdc:	push   esi
  411bdd:	fldenv [ebx+0x16003ce6]
  411be3:	retf   0x7cd
  411be6:	outs   dx,BYTE PTR ds:[esi]
  411be7:	xchg   edx,eax
  411be8:	sub    BYTE PTR [ecx],dl
  411bea:	jle    0x411b80
  411bec:	add    al,BYTE PTR [eax+0xeffd863]
  411bf2:	mov    ds:0x13d55cef,eax
  411bf7:	and    al,0x20
  411bf9:	fnstsw WORD PTR [ebx-0x78]
  411bfc:	sub    ecx,ecx
  411bfe:	dec    esi
  411bff:	enter  0x8ba6,0x58
  411c03:	inc    esp
  411c04:	jb     0x411c7c
  411c06:	mov    al,0x6e
  411c08:	enter  0xb8c9,0x7c
  411c0c:	int    0xc6
  411c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c0f:	sub    al,0x78
  411c11:	xor    BYTE PTR [ebp+eax*8+0x14],bl
  411c15:	mov    esi,0x4f630115
  411c1a:	jmp    0x76d8:0x418ee28e
  411c21:	dec    esp
  411c22:	push   esi
  411c23:	div    DWORD PTR [ecx]
  411c25:	retf   
  411c26:	and    ah,al
  411c28:	jecxz  0x411c63
  411c2a:	jl     0x411bd7
  411c2c:	ins    DWORD PTR es:[edi],dx
  411c2d:	repnz or BYTE PTR [ebx+ebp*2],bh
  411c31:	(bad)  
  411c32:	and    al,0x6f
  411c34:	sub    BYTE PTR [esp+edx*8],cl
  411c37:	(bad)  
  411c39:	add    esp,ebx
  411c3b:	add    al,0x1c
  411c3d:	ins    BYTE PTR es:[edi],dx
  411c3e:	aad    0x8
  411c40:	pop    esi
  411c41:	mov    edx,0xb95aa210
  411c46:	add    esi,DWORD PTR ss:[eax]
  411c49:	mov    edi,0xe11d2fdd
  411c4e:	fs dec ebp
  411c50:	dec    esp
  411c51:	lahf   
  411c52:	jb     0x411c93
  411c54:	retf   0xc612
  411c57:	or     DWORD PTR [esi+0x54c93147],ecx
  411c5d:	mov    ah,0x6b
  411c5f:	or     edx,DWORD PTR [esi+0x7f]
  411c62:	sbb    DWORD PTR [esi],edi
  411c64:	dec    ecx
  411c65:	lods   al,BYTE PTR ds:[esi]
  411c66:	mov    WORD PTR [edx+esi*4-0x64f336d],?
  411c6d:	(bad)  
  411c6e:	scas   eax,DWORD PTR es:[edi]
  411c6f:	and    BYTE PTR [eax-0x56622e9d],0x42
  411c76:	addr16 daa 
  411c78:	mov    ah,0x9e
  411c7a:	xor    eax,0xb6d9618c
  411c7f:	xchg   edx,eax
  411c80:	rcr    BYTE PTR [eax+0x68],cl
  411c83:	in     eax,0x42
  411c85:	in     eax,dx
  411c86:	jl     0x411cd7
  411c88:	imul   ebx,DWORD PTR [eax-0x221f6b89],0xb
  411c8f:	push   esp
  411c90:	in     al,dx
  411c91:	lods   al,BYTE PTR ds:[esi]
  411c92:	xor    al,BYTE PTR [edi]
  411c94:	iret   
  411c95:	test   eax,0xccf4f0f5
  411c9a:	retf   
  411c9b:	fcomp  QWORD PTR [ebp+0x2c425f56]
  411ca1:	loope  0x411c27
  411ca3:	sbb    BYTE PTR [edx+0x6d],0xcf
  411ca7:	dec    eax
  411ca8:	xor    eax,0xb9bfc167
  411cad:	ins    DWORD PTR es:[edi],dx
  411cae:	and    eax,0x94663109
  411cb3:	mov    edi,0xf45db34c
  411cb8:	(bad)  
  411cba:	clc    
  411cbb:	pop    edi
  411cbc:	and    eax,0x8a153db9
  411cc1:	test   al,0x45
  411cc3:	sbb    esi,DWORD PTR [ecx+ecx*8]
  411cc6:	xchg   esi,eax
  411cc7:	stos   DWORD PTR es:[edi],eax
  411cc8:	outs   dx,BYTE PTR ds:[esi]
  411cc9:	call   0xb44852b8
  411cce:	mov    esi,0xd0485691
  411cd3:	iret   
  411cd4:	int3   
  411cd5:	fld    QWORD PTR [ecx]
  411cd7:	pop    ebx
  411cd8:	sbb    eax,0xd84754b7
  411cdd:	js     0x411cee
  411cdf:	(bad)  
  411ce0:	mov    eax,ds:0xd2c53c8c
  411ce5:	outs   dx,DWORD PTR ds:[esi]
  411ce6:	mov    edx,ecx
  411ce8:	pop    edi
  411ce9:	(bad)  
  411cea:	xor    eax,0x2f536f18
  411cef:	cmp    dh,BYTE PTR [ebp+0x5ae95622]
  411cf5:	mov    bl,0x1d
  411cf7:	mov    ah,0x20
  411cf9:	fnsetpm(287 only) 
  411cfb:	loop   0x411cb2
  411cfd:	sub    BYTE PTR [ebx],cl
  411cff:	jo     0x411d77
  411d01:	dec    edi
  411d02:	js     0x411c92
  411d04:	test   DWORD PTR [ebx-0x49],0xaa30134f
  411d0b:	xchg   dh,ch
  411d0d:	push   cs
  411d0e:	fs test eax,0xc57a62da
  411d14:	clc    
  411d15:	push   ss
  411d16:	std    
  411d17:	addr16 iret 
  411d19:	xor    al,0xd9
  411d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d1c:	jbe    0x411d06
  411d1e:	sub    ecx,esi
  411d20:	test   eax,0xf2a08a70
  411d25:	jb     0x411d73
  411d27:	div    BYTE PTR [edx+0x35c7a868]
  411d2d:	test   al,0x1e
  411d2f:	stos   BYTE PTR es:[edi],al
  411d30:	in     eax,0xe9
  411d32:	(bad)  
  411d33:	or     eax,0x4c614431
  411d38:	add    dl,ch
  411d3a:	sbb    BYTE PTR ds:0xebc3f475,ah
  411d40:	sbb    ebx,edx
  411d42:	or     ah,BYTE PTR [ebx]
  411d44:	xchg   edi,eax
  411d45:	int3   
  411d46:	aad    0x72
  411d48:	retf   
  411d49:	ss xor eax,0xf26514dc
  411d4f:	and    eax,0x41ee968c
  411d54:	dec    edx
  411d55:	loope  0x411cf1
  411d57:	loope  0x411d29
  411d59:	ret    
  411d5a:	xchg   esi,eax
  411d5b:	xchg   edx,eax
  411d5c:	adc    DWORD PTR [esi-0x69f47234],esi
  411d62:	inc    ebp
  411d63:	jmp    0x411d5e
  411d65:	adc    bl,dl
  411d67:	pop    es
  411d68:	in     al,dx
  411d69:	cwde   
  411d6a:	ficomp WORD PTR [eax+eiz*1+0x1f]
  411d6e:	and    al,0xac
  411d70:	lods   eax,DWORD PTR ds:[esi]
  411d71:	and    BYTE PTR [esi+edx*1+0x2bef3fff],dl
  411d78:	in     al,0x11
  411d7a:	or     BYTE PTR [eax+0x39b871c],0xfc
  411d81:	mov    ebp,0x7a16d908
  411d86:	jecxz  0x411d25
  411d88:	clc    
  411d89:	rep lods al,BYTE PTR ds:[si]
  411d8c:	sti    
  411d8d:	loop   0x411db0
  411d8f:	(bad)  
  411d90:	dec    edx
  411d91:	xor    eax,0xa618f4ba
  411d96:	fldcw  WORD PTR ds:[eax]
  411d99:	add    ecx,esp
  411d9b:	loop   0x411e10
  411d9d:	add    bl,dh
  411d9f:	scas   eax,DWORD PTR es:[edi]
  411da0:	push   esi
  411da1:	sbb    ebp,ebp
  411da3:	mov    ah,0xb4
  411da5:	push   ebp
  411da6:	mov    ds:0xf0ac5147,al
  411dab:	aaa    
  411dac:	add    ch,BYTE PTR [edi+0x1e]
  411daf:	je     0x411db8
  411db1:	aaa    
  411db2:	or     bl,al
  411db4:	jl     0x411d41
  411db6:	inc    ebx
  411db7:	out    0x94,al
  411db9:	mov    esi,0x2d8b6a86
  411dbe:	leave  
  411dbf:	jae    0x411de9
  411dc1:	fist   WORD PTR [edi-0x27]
  411dc4:	rcr    DWORD PTR [esi],1
  411dc6:	out    0xa7,eax
  411dc8:	dec    edx
  411dc9:	jmp    0xf32b:0x49e4b18c
  411dd0:	inc    ecx
  411dd1:	repnz sub al,0xea
  411dd4:	jl     0x411d9a
  411dd6:	add    ch,BYTE PTR [edx]
  411dd8:	out    0xfc,eax
  411dda:	pop    ds
  411ddb:	mov    ds:0x95f60c4d,al
  411de0:	mov    esp,0x24a3ebb2
  411de5:	jne    0x411e2f
  411de7:	dec    esp
  411de8:	mov    dl,BYTE PTR [esi+0x10]
  411deb:	pop    ebx
  411dec:	jg     0x411e25
  411dee:	fwait
  411def:	sti    
  411df0:	xchg   esi,eax
  411df1:	(bad)  
  411df3:	inc    edx
  411df4:	pop    eax
  411df5:	mov    al,ds:0x2ee31141
  411dfa:	cdq    
  411dfb:	iret   
  411dfc:	cmp    edi,DWORD PTR [esi-0x116d9f84]
  411e02:	inc    edi
  411e03:	pop    esp
  411e04:	fnstenv [esi]
  411e06:	xor    DWORD PTR [eax],ebx
  411e08:	inc    edi
  411e09:	add    eax,0x2ce95869
  411e0e:	cmp    al,0x3a
  411e10:	leave  
  411e11:	neg    BYTE PTR [eax+eiz*2]
  411e14:	or     al,0xee
  411e16:	sbb    DWORD PTR [ebx],ebx
  411e18:	xchg   ecx,eax
  411e19:	pop    ebp
  411e1a:	not    BYTE PTR [eax]
  411e1c:	sbb    DWORD PTR [ebx+eax*8+0x6f1ea2f5],edx
  411e23:	std    
  411e24:	pusha  
  411e25:	push   ebx
  411e26:	out    dx,al
  411e27:	adc    ch,BYTE PTR [ebx+0x6d]
  411e2a:	jmp    DWORD PTR [edx+0x24aff78]
  411e30:	js     0x411eab
  411e32:	imul   esi,DWORD PTR [esi-0x38],0x99a84997
  411e39:	mov    WORD PTR [eax],fs
  411e3b:	shr    BYTE PTR [ebx-0x31],cl
  411e3e:	jne    0x411e9c
  411e40:	pop    es
  411e41:	mov    edx,0xa3f1f05e
  411e46:	test   BYTE PTR [ecx],cl
  411e48:	lahf   
  411e49:	mov    eax,ds:0x2ffb30a2
  411e4e:	xor    eax,DWORD PTR [ecx-0xdcaad68]
  411e54:	or     DWORD PTR [edx-0x16],ebp
  411e57:	mov    es,WORD PTR [edx-0x1d33999]
  411e5d:	es sub eax,0xc3571657
  411e63:	dec    edi
  411e64:	and    BYTE PTR [edi],al
  411e66:	retf   0xb5dd
  411e69:	lock out dx,al
  411e6b:	imul   BYTE PTR [edx]
  411e6d:	ins    DWORD PTR es:[edi],dx
  411e6e:	pop    ds
  411e6f:	and    ah,cl
  411e71:	shl    esi,0x94
  411e74:	mov    ah,0x8e
  411e76:	push   ebp
  411e77:	jb     0x411e5e
  411e79:	je     0x411e47
  411e7b:	jnp    0x411e82
  411e7d:	inc    esi
  411e7e:	test   BYTE PTR [ebx+edi*4],bl
  411e81:	adc    DWORD PTR [esi+0x7b0f4a1e],0xffffff95
  411e88:	push   ebx
  411e89:	xor    al,0x6f
  411e8c:	mov    BYTE PTR [eax+eax*2-0x208de179],cl
  411e93:	idiv   BYTE PTR [ecx+0x2d9b0619]
  411e99:	popa   
  411e9a:	adc    dh,BYTE PTR [esi+0x5daded78]
  411ea0:	mov    ebx,0x535b718
  411ea5:	cmp    BYTE PTR [edi+0x6],ah
  411ea8:	or     eax,0x3f947547
  411ead:	mov    dh,0xf6
  411eaf:	add    al,0x48
  411eb1:	loope  0x411f0f
  411eb3:	aas    
  411eb4:	sahf   
  411eb5:	mov    eax,0x3e78ef27
  411eba:	sahf   
  411ebb:	je     0x411eca
  411ebd:	mov    ah,0x44
  411ebf:	fdivr  DWORD PTR [edx-0x44ca33d5]
  411ec5:	mov    eax,DWORD PTR [edi]
  411ec7:	pushw  0xffb4
  411eca:	js     0x411ec6
  411ecc:	lods   eax,DWORD PTR ds:[esi]
  411ecd:	test   DWORD PTR [ebx-0x39293eef],0x6ec72129
  411ed7:	div    DWORD PTR [esi+0x51]
  411eda:	adc    bl,dh
  411edc:	fstp   DWORD PTR ds:0x11005d77
  411ee2:	sub    ebp,DWORD PTR [edx-0x4]
  411ee5:	shl    DWORD PTR [edi+0x36591bc0],1
  411eeb:	push   0x31
  411eed:	jno    0x411ea6
  411eef:	mov    ah,0xb
  411ef1:	mov    ebp,0xa845cad5
  411ef6:	sbb    ch,BYTE PTR ds:0xe6027d33
  411efc:	fsub   QWORD PTR [esi+0x58]
  411eff:	in     al,0x45
  411f01:	call   0x7165:0xaa36267c
  411f08:	shl    DWORD PTR [esi-0x3000757],cl
  411f0e:	les    eax,FWORD PTR ds:0x4475a0b3
  411f14:	sub    BYTE PTR [edi+0x14],ch
  411f17:	pop    edi
  411f18:	or     edi,DWORD PTR [ecx+0x34]
  411f1b:	jmp    0x411f14
  411f1d:	jno    0x411f7f
  411f1f:	xor    dh,bh
  411f21:	and    bl,BYTE PTR [esi+0x23cc1836]
  411f27:	js     0x411f7f
  411f29:	test   ch,dh
  411f2b:	repz cmp al,0xeb
  411f2e:	icebp  
  411f2f:	jbe    0x411f3f
  411f31:	dec    ecx
  411f32:	sub    dl,bh
  411f34:	imul   DWORD PTR [ebp-0x3d]
  411f37:	mov    ebx,0x901bb2d6
  411f3c:	xor    al,0x6d
  411f3e:	inc    esi
  411f3f:	sub    ch,bh
  411f41:	repz in al,0xf5
  411f44:	stos   DWORD PTR es:[edi],eax
  411f45:	push   0xffffff80
  411f47:	dec    esi
  411f48:	push   ebp
  411f49:	inc    esi
  411f4a:	into   
  411f4b:	lock xor ebx,ebp
  411f4e:	push   ecx
  411f4f:	int    0x55
  411f51:	(bad)  
  411f52:	pop    ebx
  411f53:	rol    DWORD PTR [eax+0x71],1
  411f56:	aas    
  411f57:	fwait
  411f58:	icebp  
  411f59:	ret    
  411f5a:	add    ah,cl
  411f5c:	js     0x411f7b
  411f5e:	daa    
  411f5f:	mov    esi,0x5e4bf8bb
  411f64:	inc    esp
  411f65:	xor    esi,DWORD PTR [ebx-0x28]
  411f68:	je     0x411f3b
  411f6a:	mov    ebp,0x836cc8a2
  411f6f:	es nop
  411f71:	sbb    eax,0x1783c19c
  411f76:	pop    edi
  411f77:	mov    esp,0xdf566390
  411f7c:	fdiv   st,st(5)
  411f7e:	xor    al,0x1f
  411f80:	test   al,0x9
  411f82:	mov    ebp,0xc0cf252
  411f87:	dec    edx
  411f88:	fnstenv [ebx+0x4b39c2ea]
  411f8e:	push   eax
  411f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f90:	nop
  411f91:	push   0xada6d2be
  411f96:	test   DWORD PTR [edx],ecx
  411f98:	out    dx,al
  411f99:	and    BYTE PTR [ebp+0x52],al
  411f9c:	pop    edi
  411f9d:	sub    DWORD PTR [ebx],esp
  411f9f:	ja     0x411f9c
  411fa1:	mov    al,0x30
  411fa3:	stos   BYTE PTR es:[edi],al
  411fa4:	add    BYTE PTR [esi-0x1ccba700],al
  411faa:	jbe    0x411f32
  411fac:	mov    eax,ds:0xb868c610
  411fb1:	fdiv   QWORD PTR [ebx+0x5196cc44]
  411fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fb8:	mov    ah,0x79
  411fba:	pop    ds
  411fbb:	dec    DWORD PTR [ecx+0x2fe6869d]
  411fc1:	in     eax,0xf5
  411fc3:	push   ebp
  411fc4:	xchg   ecx,eax
  411fc5:	sub    BYTE PTR [esi],dl
  411fc7:	es stc 
  411fc9:	xchg   ecx,eax
  411fca:	xchg   BYTE PTR es:0x13801db2,ch
  411fd1:	xchg   ecx,eax
  411fd2:	loop   0x411fbf
  411fd4:	inc    ebx
  411fd5:	xchg   edx,eax
  411fd6:	mov    esp,0x8bb4dec9
  411fdb:	fisub  DWORD PTR [eax+0x8]
  411fde:	and    edx,DWORD PTR [esi-0xf658687]
  411fe4:	xor    ecx,DWORD PTR [esi-0x70]
  411fe7:	int    0xb5
  411fe9:	sti    
  411fea:	mov    edx,0x78698a2a
  411fef:	pop    eax
  411ff0:	or     bl,BYTE PTR [ecx]
  411ff2:	shl    DWORD PTR [edi-0x16eaff10],0x3e
  411ff9:	push   ss
  411ffa:	(bad)  
  411ffb:	fidiv  WORD PTR [edx+eax*4]
  411ffe:	les    edx,FWORD PTR [ebp+0x48f3e29d]
  412004:	fwait
  412005:	mov    esp,0x485a00bf
  41200a:	inc    ecx
  41200b:	pop    es
  41200c:	dec    ecx
  41200d:	imul   ecx,esp,0x5c
  412010:	xlat   BYTE PTR ds:[ebx]
  412011:	sbb    DWORD PTR [esi-0x127d2ccc],edx
  412017:	xor    al,0x18
  412019:	sub    eax,0x6ca58da3
  41201e:	int    0xf0
  412020:	cmp    esi,DWORD PTR ds:0xe2896886
  412026:	in     eax,dx
  412027:	loop   0x41203d
  412029:	and    dh,bl
  41202b:	sub    BYTE PTR [ecx-0x2a022586],bl
  412031:	pop    eax
  412032:	in     al,dx
  412033:	pop    edi
  412034:	add    eax,0x8ac3144a
  412039:	pop    edi
  41203a:	ss (bad) 
  41203c:	idiv   BYTE PTR [esi-0x43]
  41203f:	cmp    bh,BYTE PTR [ebx]
  412041:	cdq    
  412042:	cmc    
  412043:	inc    eax
  412044:	adc    al,0x66
  412046:	mov    ebx,0x323bfe2b
  41204b:	addr16 push esp
  41204d:	fsub   DWORD PTR [esi-0x68b1dda8]
  412053:	inc    ebp
  412054:	lea    ecx,[edx-0x71fb3c0c]
  41205a:	mov    ebp,ebp
  41205c:	lods   eax,DWORD PTR ds:[esi]
  41205d:	dec    eax
  41205e:	fld    DWORD PTR [edx+0xc85509b]
  412064:	xchg   esi,eax
  412065:	out    0x4f,al
  412067:	cmp    bh,cl
  412069:	out    dx,al
  41206a:	fbstp  TBYTE PTR [ebx+0x69435f02]
  412070:	and    DWORD PTR [eax+0x25],esi
  412073:	sbb    DWORD PTR [ebp-0x6d],edx
  412076:	in     eax,dx
  412077:	sbb    al,0xc6
  412079:	and    DWORD PTR [ebx],ebx
  41207b:	pop    esp
  41207c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41207d:	leave  
  41207e:	add    edx,ecx
  412080:	or     DWORD PTR [edi-0x5ae3a6fa],0xffffff90
  412087:	add    bl,cl
  412089:	xor    bh,ch
  41208b:	sub    DWORD PTR [ecx],edi
  41208d:	cmp    bh,BYTE PTR [edx]
  41208f:	and    esp,DWORD PTR [ebx+ecx*1]
  412092:	jecxz  0x4120bc
  412094:	cmp    eax,0x3b5aad0f
  412099:	lods   eax,DWORD PTR cs:[esi]
  41209b:	xchg   edx,eax
  41209c:	ja     0x4120c5
  41209e:	pop    ds
  41209f:	rcl    DWORD PTR [esi-0x1b],0xff
  4120a3:	test   DWORD PTR [esi-0x6d6e4616],esp
  4120a9:	stc    
  4120aa:	shr    edx,cl
  4120ac:	sub    ah,BYTE PTR [ebp+0x118b42d8]
  4120b2:	fist   WORD PTR [eax+ebp*8]
  4120b5:	sar    bl,0xde
  4120b8:	or     ah,BYTE PTR [eax-0x32]
  4120bb:	stc    
  4120bc:	dec    edx
  4120bd:	vpcmpeqw xmm6,xmm2,XMMWORD PTR ds:0x1cdacc07
  4120c5:	adc    eax,0x833d56b8
  4120ca:	and    ebx,DWORD PTR [esi+0x7b]
  4120cd:	inc    ebx
  4120ce:	leave  
  4120cf:	inc    esp
  4120d0:	jmp    0x8389:0x475ca665
  4120d7:	or     ch,BYTE PTR [esi+edi*2]
  4120da:	xor    DWORD PTR [edi+ecx*2-0x35377e5],edx
  4120e1:	ins    BYTE PTR es:[edi],dx
  4120e2:	jne    0xa3a98f1a
  4120e8:	lea    edx,[esi]
  4120ea:	fidivr WORD PTR [edx]
  4120ec:	push   ss
  4120ed:	adc    ebp,esp
  4120ef:	inc    ebx
  4120f0:	ja     0x412099
  4120f2:	lock sub esp,DWORD PTR [eax-0x16d0f277]
  4120f9:	push   0xcae2c61b
  4120fe:	repnz sar ecx,0x54
  412102:	mov    esp,0x33bb54c1
  412107:	jge    0x4120d4
  412109:	push   esp
  41210a:	pop    ds
  41210b:	xadd   BYTE PTR [edx-0x20],cl
  41210f:	adc    edi,DWORD PTR fs:[ebx]
  412112:	retf   0x2d5e
  412115:	test   eax,ebp
  412117:	dec    ebp
  412118:	or     cl,bh
  41211a:	cmp    al,BYTE PTR es:[edi-0x6d]
  41211e:	ds sub esi,ebp
  412121:	arpl   WORD PTR [edi],bp
  412123:	push   esi
  412124:	test   al,0x5a
  412126:	ret    
  412127:	iret   
  412128:	jmp    0x4f11:0x7ea1291
  41212f:	fisttp DWORD PTR [esi+0x11]
  412132:	fst    QWORD PTR ds:0x4e713460
  412138:	adc    ebx,DWORD PTR [eax-0x39]
  41213b:	ins    BYTE PTR es:[edi],dx
  41213c:	xchg   BYTE PTR [ecx-0x344154d9],dh
  412142:	sub    ebp,0xaa535a20
  412148:	xor    eax,0x98ad9f7f
  41214d:	aam    0xe4
  41214f:	inc    esp
  412150:	cmp    ebp,edx
  412152:	nop
  412153:	fwait
  412154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412155:	fbld   TBYTE PTR [ebp+0x7ef48268]
  41215b:	mov    edi,0xc52aabce
  412160:	jb     0x412129
  412162:	nop
  412163:	pop    ds
  412164:	into   
  412165:	xchg   ebx,eax
  412166:	stos   DWORD PTR es:[edi],eax
  412167:	or     BYTE PTR [eax],0xbb
  41216a:	ins    DWORD PTR es:[edi],dx
  41216b:	out    dx,eax
  41216c:	jecxz  0x4120f8
  41216e:	(bad)  
  41216f:	xchg   ecx,eax
  412170:	or     BYTE PTR [ebp+0x3e],ch
  412173:	mov    esp,0x7d14802e
  412178:	test   al,0xc8
  41217a:	xor    BYTE PTR [ecx-0x52],cl
  41217d:	sub    edi,edi
  41217f:	loope  0x412154
  412181:	pop    ecx
  412182:	cmp    BYTE PTR [ebp+esi*1-0x61],bh
  412186:	jl     0x41219d
  412188:	sub    DWORD PTR [esi],0x70
  41218b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218c:	rol    BYTE PTR ds:0xa4a702d7,1
  412192:	ret    
  412193:	stos   BYTE PTR es:[edi],al
  412194:	adc    edi,DWORD PTR [ebp-0x7265f9fc]
  41219a:	mov    bh,0xd2
  41219c:	loope  0x412184
  41219e:	pop    esi
  41219f:	js     0x41212a
  4121a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a2:	inc    edi
  4121a3:	sub    al,0x35
  4121a5:	lods   eax,DWORD PTR ds:[esi]
  4121a6:	xor    ah,BYTE PTR [edi-0x7c]
  4121a9:	retf   0x9059
  4121ac:	fild   WORD PTR [ebx]
  4121ae:	jno    0x412134
  4121b0:	jo     0x4121a5
  4121b2:	gs cmp al,dh
  4121b5:	mov    ebx,0x72a0134
  4121ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121bb:	mov    ah,0xae
  4121bd:	xchg   BYTE PTR [ecx-0x57d86898],dl
  4121c3:	jecxz  0x41214d
  4121c5:	push   es
  4121c6:	cmc    
  4121c7:	jnp    0x412244
  4121c9:	xlat   BYTE PTR ds:[ebx]
  4121ca:	inc    esp
  4121cb:	sub    BYTE PTR [esi],0x5c
  4121ce:	mov    es,WORD PTR [esp+esi*8-0x45]
  4121d2:	xchg   esp,eax
  4121d3:	sbb    BYTE PTR [ecx+0xf],0x24
  4121d7:	jle    0x41218b
  4121d9:	ret    0x76
  4121dc:	xor    eax,0x23351f5
  4121e1:	pushf  
  4121e2:	dec    ebp
  4121e3:	mov    eax,0xee327657
  4121e8:	mov    ebp,0xe810244d
  4121ed:	sbb    ecx,DWORD PTR [edi+eiz*2]
  4121f0:	jns    0x4121cc
  4121f2:	sbb    edi,edi
  4121f4:	test   al,0x46
  4121f6:	cmp    al,0xd2
  4121f8:	sub    bh,dl
  4121fa:	repnz push 0xcf2138b8
  412200:	addr16 mov ebx,0x3533df18
  412206:	out    0x7f,al
  412208:	push   ebx
  412209:	popf   
  41220a:	sbb    ch,BYTE PTR [edx]
  41220c:	mov    esp,0x8436911a
  412211:	or     al,0x79
  412213:	jmp    0x412262
  412215:	jns    0x4121b5
  412217:	mov    al,0xd7
  412219:	inc    ebx
  41221a:	xor    BYTE PTR [eax-0x6bb9a81e],al
  412220:	push   eax
  412221:	test   BYTE PTR [edi],al
  412223:	fadd   DWORD PTR [eax]
  412225:	js     0x412212
  412227:	call   0x5c68014c
  41222c:	mov    al,ds:0xdcfb7e1f
  412231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412232:	push   ecx
  412233:	(bad)  
  412234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412235:	(bad)  
  412236:	imul   esi,DWORD PTR [ebp+edi*8+0x29],0x3c
  41223b:	clc    
  41223c:	add    ebp,DWORD PTR [edi-0x29]
  41223f:	out    0x32,al
  412241:	mov    edi,0xe09cc0cb
  412246:	add    cl,BYTE PTR [edi+ebx*8]
  412249:	call   0x6a98:0x45d01ff6
  412250:	jbe    0x4121db
  412252:	loop   0x4122ad
  412254:	push   ecx
  412255:	pusha  
  412256:	mov    esi,es
  412258:	(bad)  
  412259:	leave  
  41225a:	jb     0x412238
  41225c:	mov    cl,0xad
  41225e:	or     al,0x5e
  412260:	inc    ebp
  412261:	cmp    eax,0x9bb1bc8b
  412266:	sub    DWORD PTR [edi],edi
  412268:	int    0x27
  41226a:	popa   
  41226b:	shl    BYTE PTR [eax-0x11a22c2f],cl
  412271:	icebp  
  412272:	cmc    
  412273:	imul   ebx,DWORD PTR [edx-0x37],0xffffffbf
  412277:	xor    BYTE PTR [ecx],ch
  412279:	inc    esi
  41227a:	lahf   
  41227b:	(bad)  
  41227c:	in     eax,dx
  41227d:	ins    BYTE PTR es:[edi],dx
  41227e:	icebp  
  41227f:	cmc    
  412280:	sub    edx,ecx
  412282:	call   0x2aa5:0x2c17579a
  412289:	bound  esi,QWORD PTR [eax-0x13]
  41228c:	push   esp
  41228d:	add    ch,dl
  41228f:	push   esi
  412290:	inc    ecx
  412291:	push   ds
  412292:	aam    0x13
  412294:	add    ebx,esp
  412296:	mov    ch,0xaf
  412298:	sub    edi,DWORD PTR [ecx+0x6617924d]
  41229e:	ds push ds
  4122a0:	jae    0x412232
  4122a2:	jl     0x41223f
  4122a4:	and    BYTE PTR ds:0xa0ec4adb,bh
  4122aa:	mov    dh,0x6f
  4122ac:	addr16 out 0x2f,al
  4122af:	cmp    esi,eax
  4122b1:	nop
  4122b2:	push   esi
  4122b3:	bound  edi,QWORD PTR [ebx+edx*4-0x5ba87173]
  4122ba:	lock and DWORD PTR [bp+si],eax
  4122be:	push   ss
  4122bf:	fst    DWORD PTR [eax-0x7147037e]
  4122c5:	mov    eax,ds:0x4d86368
  4122ca:	xchg   ebp,eax
  4122cb:	fnstenv [ebx-0xa]
  4122ce:	xchg   edx,eax
  4122cf:	xchg   DWORD PTR [edi-0x61],eax
  4122d2:	inc    edx
  4122d3:	fwait
  4122d4:	jnp    0x4122b5
  4122d6:	sti    
  4122d7:	ins    DWORD PTR es:[edi],dx
  4122d8:	xor    eax,0x48f62e7d
  4122dd:	inc    edi
  4122de:	sub    eax,DWORD PTR [eax+ebp*4]
  4122e1:	xlat   BYTE PTR ds:[ebx]
  4122e2:	push   ebx
  4122e3:	ret    0xb35
  4122e6:	enter  0xd7cc,0xe9
  4122ea:	xor    BYTE PTR [edx+edi*8-0x38],cl
  4122ee:	pushf  
  4122ef:	test   DWORD PTR gs:[ebp-0x45595eae],ebx
  4122f6:	jp     0x41228a
  4122f8:	pop    ss
  4122f9:	aaa    
  4122fa:	jp     0x41231b
  4122fc:	jmp    edi
  4122fe:	cwde   
  4122ff:	and    cl,BYTE PTR [eax-0x751166b4]
  412305:	adc    BYTE PTR [esi+0xb],bh
  412308:	mov    cl,0x3b
  41230a:	ds jne 0x412388
  41230d:	xlat   BYTE PTR ds:[ebx]
  41230e:	jb     0x41229c
  412310:	lock xchg DWORD PTR [edi-0x5],esp
  412314:	pop    ebp
  412315:	ds pusha 
  412317:	iret   
  412318:	mov    ecx,0xb0a38807
  41231d:	jmp    0x83112f01
  412322:	push   esi
  412323:	lahf   
  412324:	scas   al,BYTE PTR es:[edi]
  412325:	ror    DWORD PTR [esp+edx*4-0x68f46b6a],1
  41232c:	mov    ds:0xd84aa5d6,eax
  412331:	lods   eax,DWORD PTR ds:[esi]
  412332:	(bad)  
  412333:	cmc    
  412334:	cmp    al,0x8c
  412336:	fild   DWORD PTR [esi]
  412338:	(bad)  
  412339:	jp     0x4122fc
  41233b:	inc    ebx
  41233c:	pop    DWORD PTR [eax-0x64]
  41233f:	cmp    al,0x1
  412341:	mov    bh,0xe
  412343:	jmp    0x7ce6:0x3e5b6260
  41234a:	ins    DWORD PTR es:[edi],dx
  41234b:	call   0xdec2e7cb
  412350:	add    BYTE PTR [eax+0x3439c9f3],dh
  412356:	push   0xa29c4d8f
  41235b:	jl     0x4122e2
  41235d:	stc    
  41235e:	(bad)  
  41235f:	in     eax,dx
  412360:	xchg   ecx,eax
  412361:	xor    al,0x26
  412363:	xor    eax,0x85668767
  412368:	rcl    DWORD PTR [ebx-0x2b],1
  41236b:	jnp    0x412373
  41236d:	add    ecx,ebx
  41236f:	adc    eax,0x976b0dc9
  412374:	repz mov bh,0x5c
  412377:	xor    cl,bl
  412379:	jge    0x412388
  41237b:	or     eax,0x5bab0242
  412380:	push   DWORD PTR [ebp+0x12cad0c0]
  412386:	sub    al,0xde
  412388:	push   ecx
  412389:	xchg   esp,eax
  41238a:	mov    ch,0xb0
  41238c:	or     al,0xc6
  41238e:	(bad)  
  41238f:	das    
  412390:	and    edi,DWORD PTR [edi-0x5ea9fc41]
  412396:	inc    esp
  412397:	arpl   cx,bx
  412399:	int    0x1e
  41239b:	test   BYTE PTR ds:0x65676466,bh
  4123a1:	add    dl,bl
  4123a3:	push   esi
  4123a4:	shr    BYTE PTR [edi-0x35],1
  4123a7:	cmp    eax,0x361eee6b
  4123ac:	mov    ebp,0xa2f9dac9
  4123b1:	and    al,0x31
  4123b3:	nop
  4123b4:	aas    
  4123b5:	cmc    
  4123b6:	popf   
  4123b7:	popf   
  4123b8:	outs   dx,DWORD PTR ds:[esi]
  4123b9:	cld    
  4123ba:	push   esp
  4123bb:	add    ch,BYTE PTR [edx+0x7f796c57]
  4123c1:	sar    BYTE PTR [esi+0x1888aefe],cl
  4123c7:	dec    esi
  4123c8:	retf   0x3579
  4123cb:	lods   al,BYTE PTR ds:[esi]
  4123cc:	pop    es
  4123cd:	jecxz  0x41242f
  4123cf:	mov    ds:0x20e2d03b,eax
  4123d4:	inc    edi
  4123d5:	mov    al,0x1f
  4123d7:	into   
  4123d8:	les    ebx,FWORD PTR [edi-0x349043a5]
  4123de:	cs pop ecx
  4123e0:	pop    es
  4123e1:	xchg   ecx,eax
  4123e2:	out    0xb9,al
  4123e4:	xor    ebp,DWORD PTR [ebx-0x46d71191]
  4123ea:	pop    ss
  4123eb:	adc    dh,BYTE PTR [eax]
  4123ed:	out    0x60,al
  4123ef:	jp     0x412402
  4123f1:	mov    eax,0x55604302
  4123f6:	sbb    ebp,esp
  4123f8:	fcmovne st,st(1)
  4123fa:	shl    BYTE PTR [eax+0x490be6b2],0x6a
  412401:	adc    eax,0x1767b3ee
  412406:	or     BYTE PTR [edx+0x64],0x0
  41240a:	push   es
  41240b:	adc    al,0xe4
  41240d:	inc    ebx
  41240e:	sub    BYTE PTR [edi],bl
  412410:	sub    al,0x8
  412412:	sbb    eax,0xfd414b42
  412417:	dec    edi
  412418:	ret    
  412419:	mov    al,ds:0x640b82c5
  41241e:	sub    al,0x81
  412420:	into   
  412421:	mov    eax,eax
  412423:	rcl    BYTE PTR [eax+0x44bd4ea7],0x53
  41242a:	test   BYTE PTR [ecx+eax*8+0x40],dl
  41242e:	jge    0x4124ad
  412430:	adc    BYTE PTR [edi-0xb],0x83
  412434:	xchg   ecx,eax
  412435:	push   cs
  412436:	sub    BYTE PTR [edx+0x19],bl
  412439:	repz ret 
  41243b:	es mov ebp,cs
  41243e:	lahf   
  41243f:	add    BYTE PTR [esi-0x201f0f86],bh
  412445:	scas   eax,DWORD PTR es:[edi]
  412446:	jb     0x41244e
  412448:	bound  edx,QWORD PTR [ecx+0x29]
  41244b:	xor    ecx,DWORD PTR [ecx+0x22]
  41244e:	loope  0x412496
  412450:	or     bl,cl
  412452:	cmp    al,BYTE PTR [eax-0x6335b81d]
  412458:	sbb    eax,0x32fdf471
  41245d:	pop    ebx
  41245e:	mul    DWORD PTR [esi]
  412460:	sub    DWORD PTR [esi+0x5dd31fac],eax
  412466:	shl    BYTE PTR cs:[esi-0x36],0xbd
  41246b:	push   ds
  41246c:	and    edi,esi
  41246e:	in     al,0xed
  412470:	inc    esi
  412471:	jnp    0x412433
  412473:	int    0x41
  412475:	or     al,0x60
  412477:	ins    BYTE PTR es:[edi],dx
  412478:	test   eax,0xf684f
  41247d:	lods   al,BYTE PTR ds:[esi]
  41247e:	jae    0x412465
  412480:	mov    esp,0x2f7cf190
  412485:	(bad)  
  412486:	fbstp  TBYTE PTR [ecx-0x12380487]
  41248c:	outs   dx,DWORD PTR ds:[esi]
  41248d:	arpl   WORD PTR ds:0xd513291e,di
  412493:	(bad)  
  412494:	jae    0x41249f
  412496:	fld    TBYTE PTR [ebx+0xe]
  412499:	enter  0x513e,0xa2
  41249d:	or     BYTE PTR [ebp-0x1653e811],cl
  4124a3:	sbb    DWORD PTR [eax+ebp*4-0x13e5445],ebp
  4124aa:	mov    cl,0xd4
  4124ac:	jno    0x412479
  4124ae:	daa    
  4124af:	fild   DWORD PTR [ebx]
  4124b1:	jmp    0x8c70f3b8
  4124b6:	inc    ecx
  4124b7:	mov    WORD PTR [ebx],gs
  4124b9:	push   esi
  4124ba:	mov    al,ds:0x40172dd6
  4124bf:	jp     0x4124d0
  4124c1:	xchg   ebp,eax
  4124c2:	jae    0x412506
  4124c4:	push   esp
  4124c5:	pop    eax
  4124c6:	cmp    esi,0x3a
  4124c9:	in     eax,0x4f
  4124cb:	or     edx,eax
  4124cd:	add    ah,BYTE PTR [ecx+0x2a]
  4124d0:	jns    0x41247f
  4124d2:	sbb    esi,DWORD PTR [edi+edi*2]
  4124d5:	push   esp
  4124d6:	xchg   edi,eax
  4124d7:	shl    BYTE PTR [edi-0x54e09fc5],0x88
  4124de:	inc    edx
  4124df:	scas   al,BYTE PTR es:[edi]
  4124e0:	mov    es,WORD PTR [ecx-0x2e]
  4124e3:	lahf   
  4124e4:	mov    bh,0xa7
  4124e6:	pop    edx
  4124e7:	rcr    dl,0x0
  4124ea:	fild   QWORD PTR [eax-0x78]
  4124ed:	lahf   
  4124ee:	xchg   ebp,eax
  4124ef:	cmp    esi,DWORD PTR [ebp+0x66]
  4124f2:	dec    edx
  4124f3:	jae    0x4124b4
  4124f5:	jo     0x412551
  4124f7:	jae    0x412517
  4124f9:	or     edi,DWORD PTR [edi+0x4eea6aa3]
  4124ff:	mov    ebx,0xd96b25d1
  412504:	xchg   edx,eax
  412505:	ss xchg edi,eax
  412507:	lea    ebx,[ebx-0x7d]
  41250a:	stc    
  41250b:	fcom   st(2)
  41250d:	add    cl,al
  41250f:	ret    
  412510:	stos   DWORD PTR es:[edi],eax
  412511:	mov    al,0x65
  412513:	mov    edi,0x25205279
  412518:	nop
  412519:	and    ebx,DWORD PTR [ecx+ebp*2+0x3db42da5]
  412520:	mov    BYTE PTR [esi+ebx*1+0x545f6d13],dl
  412527:	pop    esi
  412528:	cmp    DWORD PTR [edx+ebx*1-0x7759109e],ebx
  41252f:	dec    esi
  412530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412531:	dec    ecx
  412532:	lods   al,BYTE PTR ds:[esi]
  412533:	int    0x20
  412535:	jne    0x4124e7
  412537:	push   edx
  412538:	fsubp  st(0),st
  41253a:	mov    eax,0xfbc9c9d6
  41253f:	jge    0x41257b
  412541:	leave  
  412542:	and    bh,BYTE PTR [esi+0x35]
  412545:	push   ebx
  412546:	xchg   esi,eax
  412547:	push   ds
  412548:	leave  
  412549:	xchg   BYTE PTR [esi-0x5],dl
  41254c:	hlt    
  41254d:	popf   
  41254e:	leave  
  41254f:	dec    edx
  412550:	push   esp
  412551:	jne    0x412556
  412553:	add    ecx,edi
  412555:	out    0xf8,eax
  412557:	dec    ebp
  412558:	inc    edx
  412559:	cmp    DWORD PTR [ebx-0x6659c168],0xc4b97779
  412563:	call   0xc072a2b2
  412568:	lea    eax,[eax]
  41256a:	add    cl,dh
  41256c:	push   ebx
  41256d:	iret   
  41256e:	mov    esi,0xfaea01b4
  412573:	add    al,0x21
  412575:	sub    ebp,DWORD PTR [ebp+0x3a]
  412578:	or     DWORD PTR [eax-0x69],ebp
  41257b:	dec    esp
  41257c:	in     eax,dx
  41257d:	or     DWORD PTR [edi+eiz*2],0xccf82188
  412584:	mov    cl,BYTE PTR [esi+ebx*1+0x41]
  412588:	cmp    al,0x33
  41258a:	sbb    al,0xd
  41258c:	and    BYTE PTR [ecx+0x32],0xa4
  412590:	lea    edx,[edx-0x88cbbcf]
  412596:	out    0x3,eax
  412598:	gs sub al,bh
  41259b:	enter  0xbc3b,0xe1
  41259f:	icebp  
  4125a0:	mov    esi,0xfd741773
  4125a5:	(bad)  
  4125a6:	jbe    0x412621
  4125a8:	push   ecx
  4125a9:	data16 mov bl,0x8e
  4125ac:	std    
  4125ad:	sub    BYTE PTR [ecx-0x7a],dl
  4125b0:	mov    bl,0x6a
  4125b2:	mov    ecx,0xf0b24bbf
  4125b7:	mov    ebx,0xf8219559
  4125bc:	push   ecx
  4125bd:	test   al,0xb4
  4125bf:	mov    dh,dh
  4125c1:	push   esi
  4125c2:	pop    edx
  4125c3:	popa   
  4125c4:	fcmovbe st,st(4)
  4125c6:	out    dx,eax
  4125c7:	pop    eax
  4125c8:	xchg   edx,eax
  4125c9:	das    
  4125ca:	inc    esp
  4125cb:	xchg   edx,eax
  4125cc:	jg     0x4125cf
  4125ce:	sub    BYTE PTR [eax-0x21],dh
  4125d1:	call   0x10f1f0a7
  4125d6:	rcr    DWORD PTR [esi+0x2a],1
  4125d9:	sbb    eax,0x74c318f6
  4125de:	cmp    al,0xba
  4125e0:	(bad)  
  4125e2:	cmp    dh,ch
  4125e4:	dec    edi
  4125e5:	sti    
  4125e6:	mov    bl,0x67
  4125e8:	mov    WORD PTR [esi],gs
  4125ea:	ret    0x7568
  4125ed:	in     eax,dx
  4125ee:	mov    WORD PTR [ebp-0x1eaa058a],?
  4125f4:	cmp    al,0xd3
  4125f6:	cmp    edi,esp
  4125f8:	rol    BYTE PTR ds:0xe2706f99,0x1
  4125ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412600:	mov    DWORD PTR [edx],esi
  412602:	leave  
  412603:	pop    ecx
  412604:	mov    edx,0xafc5b4fe
  412609:	push   ss
  41260a:	scas   eax,DWORD PTR es:[edi]
  41260b:	(bad)  
  41260c:	aas    
  41260d:	ds and al,0x37
  412610:	or     eax,0x43279b74
  412615:	int    0xee
  412617:	pop    ecx
  412618:	xchg   edx,eax
  412619:	jle    0x4125ad
  41261b:	xlat   BYTE PTR ds:[ebx]
  41261c:	adc    al,0xcc
  41261e:	and    al,0xc2
  412620:	jo     0x51259281
  412626:	dec    DWORD PTR [edi-0x45]
  412629:	jge    0x412689
  41262b:	addr16 push esp
  41262d:	sub    eax,0xff2ea69b
  412632:	xchg   DWORD PTR [ebx+ebp*8],esi
  412635:	fadd   st(0),st
  412637:	jno    0x412653
  412639:	outs   dx,DWORD PTR ds:[esi]
  41263a:	ret    
  41263b:	inc    eax
  41263c:	enter  0x7bb6,0x76
  412640:	or     DWORD PTR [ecx-0x5aede3fc],esi
  412646:	fdivrp st(1),st
  412648:	inc    edx
  412649:	clc    
  41264a:	icebp  
  41264b:	cmp    BYTE PTR [edx],bl
  41264d:	inc    eax
  41264e:	ss mov edi,0xbddcf52d
  412654:	xor    al,0xb1
  412656:	pop    esi
  412657:	mov    al,0x3d
  412659:	jae    0x412653
  41265b:	and    bh,BYTE PTR [esi-0x3a60819e]
  412661:	pop    edi
  412662:	xchg   esp,eax
  412663:	daa    
  412664:	mov    al,0x1
  412666:	jne    0x41260a
  412668:	enter  0x6bfd,0x65
  41266c:	rcl    ch,cl
  41266e:	cs call 0x8daaf29a
  412674:	or     eax,0xd7a7560a
  412679:	or     DWORD PTR [ebp-0x7b],edx
  41267c:	pop    edi
  41267d:	lods   eax,DWORD PTR ds:[esi]
  41267e:	popf   
  41267f:	add    al,0xd4
  412681:	mov    ebp,0x4d529326
  412686:	sub    eax,edx
  412688:	mov    WORD PTR [ebp-0x67a9c137],ss
  41268e:	hlt    
  41268f:	pop    ecx
  412690:	cs jmp 0xb60f:0x801b55a9
  412698:	xchg   edi,eax
  412699:	cmp    al,0xd4
  41269b:	push   esi
  41269c:	push   eax
  41269d:	or     dh,BYTE PTR [esi-0x5a]
  4126a0:	mov    ds:0x50d4589,eax
  4126a5:	sbb    al,0x7
  4126a7:	retf   0x4a5f
  4126aa:	aam    0xba
  4126ac:	add    ebx,esi
  4126ae:	clc    
  4126af:	call   0x834c2fb8
  4126b4:	out    dx,eax
  4126b5:	out    dx,al
  4126b6:	jp     0x412691
  4126b8:	xchg   BYTE PTR [eax],bh
  4126ba:	fsubr  QWORD PTR ds:0x6f76800e
  4126c0:	xchg   ebx,esi
  4126c2:	call   0x6852fcec
  4126c7:	cs pop ecx
  4126c9:	popf   
  4126ca:	jmp    0x60a6b95e
  4126cf:	or     DWORD PTR [esi+edx*2],edx
  4126d2:	cdq    
  4126d3:	(bad)  
  4126d4:	popf   
  4126d5:	adc    DWORD PTR [ebp-0x1157b0d8],esi
  4126db:	adc    al,0x7d
  4126dd:	addr16 adc esi,esp
  4126e0:	pop    ebx
  4126e1:	mov    cl,0xc9
  4126e3:	sbb    al,0x92
  4126e5:	jp     0x41266a
  4126e7:	push   esp
  4126e8:	fisub  DWORD PTR cs:[edi+eiz*4+0x7c517847]
  4126f0:	out    0x1,al
  4126f2:	jecxz  0x4126c3
  4126f4:	xchg   ebp,eax
  4126f5:	in     eax,0x4d
  4126f7:	mov    esi,0x3487c740
  4126fc:	in     al,0x13
  4126fe:	sbb    edi,DWORD PTR [esi+ebx*2-0x3d07aa76]
  412705:	sub    DWORD PTR [esi],edx
  412707:	cmc    
  412708:	add    DWORD PTR [edx],ebp
  41270a:	jge    0x4126ea
  41270c:	or     esi,ebx
  41270e:	xchg   esp,eax
  41270f:	aam    0x61
  412711:	pop    eax
  412712:	scas   eax,DWORD PTR es:[edi]
  412713:	push   0xffffffc5
  412715:	mov    bl,BYTE PTR [eax+ebx*1-0x1367c087]
  41271c:	repnz div ch
  41271f:	inc    esi
  412720:	clc    
  412721:	scas   eax,DWORD PTR es:[edi]
  412722:	inc    esi
  412723:	stos   BYTE PTR es:[edi],al
  412724:	inc    eax
  412725:	inc    esp
  412726:	mov    esp,0x81390969
  41272b:	cmp    DWORD PTR [ecx-0x1b86b175],eax
  412731:	adc    eax,0x1fc885f4
  412736:	les    ebx,FWORD PTR [edx]
  412738:	rol    DWORD PTR [esi+0x60],0x58
  41273c:	ins    DWORD PTR es:[edi],dx
  41273d:	mov    cx,0xa7ef
  412741:	int    0x2f
  412743:	mov    ch,0x1a
  412745:	add    al,0xdf
  412747:	repz test al,0x37
  41274a:	fst    DWORD PTR [edi]
  41274c:	outs   dx,DWORD PTR ds:[esi]
  41274d:	xlat   BYTE PTR ds:[ebx]
  41274e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41274f:	scas   eax,DWORD PTR es:[edi]
  412750:	jecxz  0x412741
  412752:	in     eax,0xd2
  412754:	xchg   edx,eax
  412755:	inc    esp
  412756:	repnz add al,0x76
  412759:	dec    edx
  41275a:	lock call 0xafa7:0x47489ee6
  412762:	pop    esi
  412763:	outs   dx,BYTE PTR ds:[esi]
  412764:	js     0x412731
  412766:	push   cs
  412767:	xchg   ebp,eax
  412768:	sbb    esp,esi
  41276a:	sbb    eax,0x423a56
  41276f:	and    BYTE PTR [esi-0x70a043c9],ch
  412775:	push   eax
  412776:	ja     0x412762
  412778:	retf   0x4783
  41277b:	push   cs
  41277c:	add    al,0x96
  41277e:	int3   
  41277f:	jmp    0x3ad374bd
  412784:	sub    ebp,esp
  412786:	shl    DWORD PTR [ebx-0xdc7407d],0x3e
  41278d:	and    DWORD PTR [edx-0x40afd42],esi
  412793:	cwde   
  412794:	aam    0x54
  412796:	nop
  412797:	pushf  
  412798:	lds    edx,FWORD PTR [eax]
  41279a:	mov    ebx,0xe784ed22
  41279f:	xchg   esp,eax
  4127a0:	or     BYTE PTR ds:0x155367ee,dl
  4127a6:	inc    esi
  4127a7:	inc    esi
  4127a8:	out    dx,eax
  4127a9:	push   cs
  4127aa:	sbb    eax,DWORD PTR [eax]
  4127ac:	xor    cl,dh
  4127ae:	test   al,0x39
  4127b0:	ret    0xbf78
  4127b3:	sub    BYTE PTR [ecx+0x6c],0x5d
  4127b7:	arpl   bx,dx
  4127b9:	daa    
  4127ba:	ins    BYTE PTR es:[edi],dx
  4127bb:	adc    cl,BYTE PTR [edi-0x4d02d5b8]
  4127c1:	lahf   
  4127c2:	enter  0xcf47,0x42
  4127c6:	das    
  4127c7:	and    DWORD PTR [eax+0x6411ad7f],eax
  4127cd:	inc    eax
  4127ce:	mov    cl,0x62
  4127d0:	sub    DWORD PTR [ebx],edx
  4127d2:	scas   eax,DWORD PTR es:[edi]
  4127d3:	stos   BYTE PTR es:[edi],al
  4127d4:	xor    al,0xc5
  4127d6:	jb     0x4127bb
  4127d8:	xchg   BYTE PTR gs:[ebx+0x25c8f53f],dh
  4127df:	jl     0x4127dd
  4127e1:	cmp    DWORD PTR [esi],ebx
  4127e3:	sar    DWORD PTR [edi],1
  4127e5:	in     al,dx
  4127e6:	pop    edx
  4127e7:	jl     0x412862
  4127e9:	push   eax
  4127ea:	push   ds
  4127eb:	xchg   ecx,eax
  4127ec:	pop    esp
  4127ed:	nop
  4127ee:	dec    esi
  4127ef:	adc    ebp,DWORD PTR [ebp+0x5fcbb718]
  4127f5:	shr    ebp,0xe7
  4127f8:	xor    DWORD PTR [ecx],eax
  4127fa:	fst    QWORD PTR [ebx]
  4127fc:	test   BYTE PTR [edi],ch
  4127fe:	(bad)  
  4127ff:	frstor [esi+0x33d39631]
  412805:	add    edx,DWORD PTR [edi-0x4e]
  412808:	fs stos BYTE PTR es:[edi],al
  41280a:	inc    edx
  41280b:	fnstenv [esi]
  41280d:	or     bl,BYTE PTR [eax-0x115756f1]
  412813:	inc    ecx
  412814:	jmp    0x412851
  412816:	aaa    
  412817:	ja     0x4127d9
  412819:	push   es
  41281a:	cdq    
  41281b:	enter  0xec58,0x23
  41281f:	scas   al,BYTE PTR es:[edi]
  412820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412821:	daa    
  412822:	jle    0x412899
  412824:	ss inc eax
  412826:	mov    ch,0xd7
  412828:	cs mov dl,0xfd
  41282b:	scas   al,BYTE PTR es:[edi]
  41282c:	mov    ah,0x87
  41282e:	jecxz  0x412809
  412830:	adc    BYTE PTR [esi-0x26],al
  412833:	xor    BYTE PTR [edi],dl
  412835:	int3   
  412836:	out    dx,al
  412837:	adc    BYTE PTR [ebx-0x6],ch
  41283a:	bound  edi,QWORD PTR [ecx-0x35]
  41283d:	mov    bh,BYTE PTR [edx-0x176ed20d]
  412843:	mov    esp,0x77d5d3c1
  412848:	xor    dh,bl
  41284a:	in     eax,dx
  41284b:	out    dx,al
  41284c:	pop    edx
  41284d:	xlat   BYTE PTR ds:[ebx]
  41284e:	test   eax,0x40f2fcc0
  412853:	neg    BYTE PTR [ebx]
  412855:	jns    0x41286c
  412857:	jb     0x4127e9
  412859:	mov    DWORD PTR [edi+0x70579bf9],eax
  41285f:	stos   BYTE PTR es:[edi],al
  412860:	jmp    0x269f51d4
  412865:	push   eax
  412866:	dec    edi
  412867:	lods   al,BYTE PTR ds:[esi]
  412868:	aam    0x5a
  41286a:	push   0xffffffad
  41286c:	pop    esp
  41286d:	mov    edi,0x1b3809c1
  412872:	in     eax,dx
  412873:	jp     0x4128d7
  412875:	scas   al,BYTE PTR es:[edi]
  412876:	imul   edx,DWORD PTR [ebx-0x5d],0xe78b891b
  41287d:	aaa    
  41287e:	fist   WORD PTR [edx]
  412880:	pop    es
  412881:	push   ss
  412882:	and    al,0x41
  412884:	inc    ebx
  412885:	inc    esi
  412886:	mov    al,0xed
  412888:	jns    0x4128ff
  41288a:	mov    edi,0xd017bd47
  41288f:	adc    ch,ch
  412891:	jl     0x412912
  412893:	sti    
  412894:	mov    ebx,ebp
  412896:	sub    dl,cl
  412898:	js     0x412827
  41289a:	mov    al,BYTE PTR [edx+0x1d725689]
  4128a0:	(bad)  
  4128a1:	data16 xor dx,si
  4128a5:	fisub  DWORD PTR [edi+0x4e25a7a7]
  4128ab:	xchg   esi,eax
  4128ac:	push   ecx
  4128ad:	push   edi
  4128ae:	lods   al,BYTE PTR ds:[esi]
  4128af:	push   0x72
  4128b1:	mov    ebp,DWORD PTR [edi-0x7c19de58]
  4128b7:	mov    al,ds:0xf0650b09
  4128bc:	push   0xa7eb2e51
  4128c1:	dec    DWORD PTR [eax+0x28812b97]
  4128c7:	scas   al,BYTE PTR es:[edi]
  4128c8:	ins    DWORD PTR es:[edi],dx
  4128c9:	mov    ah,0xcf
  4128cb:	dec    ecx
  4128cc:	retf   0xa23c
  4128cf:	mov    dl,cl
  4128d1:	(bad)  
  4128d2:	xchg   ebx,eax
  4128d3:	push   ds
  4128d4:	cmp    DWORD PTR [edx-0x46f2ea05],eax
  4128da:	inc    ebx
  4128db:	push   ecx
  4128dc:	push   esp
  4128dd:	es stc 
  4128df:	stos   BYTE PTR es:[edi],al
  4128e0:	popa   
  4128e1:	dec    eax
  4128e2:	jp     0x4128e8
  4128e4:	cli    
  4128e5:	mov    eax,ds:0xfe477f9d
  4128ea:	sbb    edi,DWORD PTR ds:0xaa72c0c5
  4128f0:	scas   al,BYTE PTR es:[edi]
  4128f1:	sti    
  4128f2:	das    
  4128f3:	push   ecx
  4128f4:	adc    dl,0xa7
  4128f7:	fcomi  st,st(4)
  4128f9:	in     eax,dx
  4128fa:	int    0x4
  4128fc:	xchg   esp,edi
  4128fe:	aaa    
  4128ff:	scas   al,BYTE PTR es:[edi]
  412900:	test   al,0xb7
  412902:	out    dx,eax
  412903:	shl    BYTE PTR [edx+0x15],cl
  412906:	mov    ch,0x1d
  412908:	xor    BYTE PTR [edx-0x50],dl
  41290b:	sub    BYTE PTR [esp+edi*1+0x60],al
  41290f:	inc    esi
  412910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412911:	jecxz  0x4128b3
  412913:	stos   DWORD PTR es:[edi],eax
  412914:	shr    DWORD PTR [edx-0x1a27800e],1
  41291a:	push   es
  41291b:	xchg   BYTE PTR [edx-0x2f],ch
  41291e:	jae    0x412942
  412920:	dec    esp
  412921:	and    DWORD PTR [edx],esp
  412923:	and    DWORD PTR [ebp+0x1d],eax
  412926:	cmp    BYTE PTR [esi],ah
  412928:	dec    edi
  412929:	sub    al,0xec
  41292b:	pop    ds
  41292c:	(bad)  
  41292d:	sbb    DWORD PTR [edx+0x69],edx
  412930:	test   al,0x57
  412932:	out    0x27,al
  412934:	cmp    BYTE PTR [eax],cl
  412936:	pop    edi
  412937:	push   0x14
  412939:	pop    edx
  41293a:	mov    dl,0xc5
  41293c:	pop    ebp
  41293d:	test   BYTE PTR [esi+0xb417e1d],al
  412943:	outs   dx,BYTE PTR ds:[esi]
  412944:	aad    0xad
  412946:	ss loope 0x412920
  412949:	test   DWORD PTR [ecx-0x58],esi
  41294c:	aas    
  41294d:	pushf  
  41294e:	test   DWORD PTR [ecx-0x56],esp
  412951:	jo     0x412966
  412953:	enter  0x4e0b,0x1d
  412957:	sbb    BYTE PTR [edx+edx*4+0x57],al
  41295b:	xor    bh,BYTE PTR [eax*2+0xf23619b]
  412962:	mov    eax,0x2ee3d401
  412967:	ret    0x200b
  41296a:	push   ebp
  41296b:	retfw  
  41296d:	clc    
  41296e:	push   0x67
  412970:	sbb    eax,DWORD PTR [ebp+0x6ffa55ed]
  412976:	fiadd  DWORD PTR [esi]
  412978:	mov    cl,BYTE PTR [esi]
  41297a:	adc    BYTE PTR [eax],dl
  41297c:	leave  
  41297d:	xchg   edi,eax
  41297e:	jecxz  0x4129a7
  412980:	lahf   
  412981:	xor    bl,BYTE PTR [ecx]
  412983:	xchg   esp,eax
  412984:	(bad)  
  412985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412986:	push   esp
  412987:	test   BYTE PTR [ecx],cl
  412989:	jmp    0x4129bc
  41298b:	and    BYTE PTR [esi+0x53f76361],0x2d
  412992:	add    esp,DWORD PTR [edi-0x76]
  412995:	ss xchg esp,eax
  412997:	loope  0x412a13
  412999:	ja     0x412969
  41299b:	repnz clc 
  41299d:	cmp    al,0x34
  41299f:	jp     0x4129d3
  4129a1:	adc    al,0x27
  4129a3:	mov    ah,BYTE PTR [ecx]
  4129a5:	into   
  4129a6:	hlt    
  4129a7:	sub    esp,esi
  4129a9:	out    dx,eax
  4129aa:	adc    BYTE PTR [ebp-0x59],bh
  4129ad:	sub    ch,bl
  4129af:	stos   DWORD PTR es:[edi],eax
  4129b0:	pop    ebp
  4129b1:	iret   
  4129b2:	jmp    0x4129af
  4129b4:	push   eax
  4129b5:	(bad)  
  4129b7:	inc    dl
  4129b9:	dec    ebp
  4129ba:	adc    DWORD PTR [esi+edx*8-0x43],0xd6d47d8e
  4129c2:	int    0xef
  4129c4:	mov    ecx,0xf7b6bf6a
  4129c9:	xchg   edi,eax
  4129ca:	or     eax,0xf09018a2
  4129cf:	sahf   
  4129d0:	cld    
  4129d1:	and    DWORD PTR [ecx+0x12],edi
  4129d4:	mov    ds:0x204f5866,al
  4129d9:	xchg   ebp,eax
  4129da:	push   eax
  4129db:	icebp  
  4129dc:	outs   dx,BYTE PTR ds:[esi]
  4129dd:	mov    al,0x7c
  4129df:	shl    BYTE PTR [ebp-0x45cb070f],cl
  4129e5:	leave  
  4129e6:	sar    edi,1
  4129e8:	mov    bh,0x9c
  4129ea:	addr16 xor edi,edi
  4129ed:	jb     0x412a5a
  4129ef:	loope  0x412a3b
  4129f1:	jg     0x412a38
  4129f3:	sub    ecx,DWORD PTR [esi-0x4bc58d03]
  4129f9:	adc    eax,0x135a5686
  4129fe:	xchg   DWORD PTR [ebx-0x22],esp
  412a01:	jp     0x412a0e
  412a03:	lds    esp,FWORD PTR [esi+edx*2-0x5b667801]
  412a0a:	mov    ebp,0x91198568
  412a0f:	lock mov ecx,DWORD PTR [ebx+0x7e]
  412a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a14:	mov    eax,ds:0xb060442e
  412a19:	push   0x3d27719d
  412a1e:	adc    DWORD PTR [ebp-0x46],edx
  412a21:	call   0xc1ea:0x3876aa48
  412a28:	push   edi
  412a29:	push   edx
  412a2a:	dec    edi
  412a2b:	mov    WORD PTR [ebp-0x19e44bbc],fs
  412a31:	(bad)  
  412a32:	fs mov dh,0x94
  412a35:	pop    ecx
  412a36:	dec    eax
  412a37:	fistp  QWORD PTR [edi+0x61607380]
  412a3d:	ins    BYTE PTR es:[edi],dx
  412a3e:	adc    al,0x3f
  412a40:	add    eax,0x7e2a2159
  412a45:	and    DWORD PTR [edi-0x1e],eax
  412a48:	popa   
  412a49:	mov    bl,0xf9
  412a4b:	dec    ebx
  412a4c:	or     dh,BYTE PTR [ecx]
  412a4e:	les    ecx,FWORD PTR [esi+0x4e3b903e]
  412a54:	mov    ebp,0x2f0acf3
  412a59:	push   esp
  412a5a:	cmp    esi,DWORD PTR [edi-0x3f]
  412a5d:	(bad)  
  412a5e:	ds and esi,0x308ba186
  412a65:	xchg   BYTE PTR [ebp-0x73],al
  412a68:	dec    eax
  412a69:	nop
  412a6a:	loop   0x412aa6
  412a6c:	xchg   ebp,eax
  412a6d:	mov    eax,0x6d24a101
  412a72:	ja     0x412a5f
  412a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a75:	(bad)  
  412a76:	push   esi
  412a77:	push   ecx
  412a78:	es mov edx,0xf4a9310c
  412a7e:	pop    ebp
  412a7f:	or     DWORD PTR [edx],esp
  412a81:	dec    esi
  412a82:	push   0x1b2645a9
  412a87:	adc    eax,esp
  412a89:	sahf   
  412a8a:	push   ebx
  412a8b:	out    0x1a,al
  412a8d:	sar    BYTE PTR [ebx+0xc40d1e2],cl
  412a93:	mov    ds:0x75b50994,eax
  412a98:	mov    ah,0x43
  412a9a:	int3   
  412a9b:	sti    
  412a9c:	loopne 0x412b09
  412a9e:	sbb    al,0x9a
  412aa0:	mov    edi,0x84b8e815
  412aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa6:	mov    ebx,0xdba53c31
  412aab:	ins    DWORD PTR es:[edi],dx
  412aac:	pop    ds
  412aad:	add    eax,0x1e794c
  412ab2:	adc    ch,dh
  412ab4:	(bad)  
  412ab5:	in     al,0xe
  412ab7:	and    edi,ebp
  412ab9:	jnp    0x412af6
  412abb:	or     ah,BYTE PTR [ebp-0x708d534b]
  412ac1:	cmp    DWORD PTR [eax],ecx
  412ac3:	dec    esp
  412ac4:	cmp    al,0xfa
  412ac6:	pop    ds
  412ac7:	icebp  
  412ac8:	push   ecx
  412ac9:	cld    
  412aca:	dec    ebx
  412acb:	iret   
  412acc:	dec    ebx
  412acd:	add    DWORD PTR [ecx-0x5d],0xa66ac858
  412ad4:	mov    BYTE PTR [edi+0x55],bh
  412ad7:	or     DWORD PTR [esi+0x6633af0],eax
  412add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ade:	jl     0x412ac9
  412ae0:	aad    0x99
  412ae2:	(bad)  
  412ae3:	ficom  WORD PTR [ebp+0x7f0da8c1]
  412ae9:	jnp    0x412a9b
  412aeb:	ret    0xea19
  412aee:	mov    BYTE PTR [esi],dh
  412af0:	xor    BYTE PTR [esi],dh
  412af2:	sbb    ah,dl
  412af4:	aaa    
  412af5:	push   ds
  412af6:	add    eax,0x3b796454
  412afb:	adc    eax,esp
  412afd:	sub    bh,BYTE PTR [ebp+eiz*1+0x1485f276]
  412b04:	xchg   esi,eax
  412b05:	xor    DWORD PTR [eax-0x4a],0x46
  412b09:	mov    ebp,0x6a9ca3a4
  412b0e:	inc    DWORD PTR [eax]
  412b10:	xchg   DWORD PTR [edx-0x7],edx
  412b13:	mov    edx,0xa55751da
  412b18:	inc    ebx
  412b19:	and    eax,ecx
  412b1b:	ja     0x412b7b
  412b1d:	mov    eax,0x4d577dbc
  412b22:	mov    eax,0xac74e2c1
  412b27:	xchg   edx,eax
  412b28:	shl    BYTE PTR [ebx+0x2ff4aae3],cl
  412b2e:	xor    BYTE PTR [ebp+0x4d02aeb1],bh
  412b34:	aas    
  412b35:	cmp    esi,DWORD PTR [edi-0x1959b498]
  412b3b:	dec    edx
  412b3c:	rol    BYTE PTR [esi-0xf],cl
  412b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b40:	sbb    edx,eax
  412b42:	inc    ebp
  412b43:	out    dx,al
  412b44:	(bad)  [eax]
  412b46:	(bad)  
  412b47:	xchg   edi,eax
  412b48:	rol    BYTE PTR [ebx-0x3d2ee4f9],cl
  412b4e:	cmp    BYTE PTR ds:[ebx-0x38],cl
  412b52:	sub    eax,0xac2d8faa
  412b57:	cmp    eax,0x3f0fa8f5
  412b5c:	std    
  412b5d:	sahf   
  412b5e:	sbb    bh,cl
  412b60:	cld    
  412b61:	pop    edx
  412b62:	out    0xed,al
  412b64:	pop    esi
  412b65:	je     0x412b67
  412b67:	push   es
  412b68:	cli    
  412b69:	adc    BYTE PTR [ebx+ebp*8-0x64],bh
  412b6d:	fwait
  412b6e:	ds cli 
  412b70:	mov    ds:0x89b75521,eax
  412b75:	mov    ch,BYTE PTR [eax-0xa]
  412b78:	sti    
  412b79:	shl    BYTE PTR [ecx+0xe],1
  412b7c:	fstp   DWORD PTR [edx+0x1d730f6f]
  412b82:	aas    
  412b83:	ficomp DWORD PTR [ecx-0x5c]
  412b86:	shr    DWORD PTR [esp+ebx*1+0xb],0x4
  412b8b:	test   al,0xf5
  412b8d:	pop    eax
  412b8e:	mov    edi,0xd8d4a884
  412b93:	mov    eax,ds:0x6cf6b4b7
  412b98:	mov    ecx,0x606c71a6
  412b9d:	inc    edi
  412b9e:	bound  esp,QWORD PTR [ebx+0x18]
  412ba1:	fiadd  DWORD PTR [edx-0x6d449ef3]
  412ba7:	inc    ebx
  412ba8:	mov    cl,0xb1
  412baa:	cmp    edi,DWORD PTR [ecx-0x5e4e1ede]
  412bb0:	adc    cl,bh
  412bb2:	mov    BYTE PTR [esi],ah
  412bb4:	xchg   edi,eax
  412bb5:	daa    
  412bb6:	test   BYTE PTR [edi],al
  412bb8:	mov    eax,0x35d86dce
  412bbd:	js     0x412c3a
  412bbf:	pop    edx
  412bc0:	push   edi
  412bc1:	ror    DWORD PTR [eax+0x45],cl
  412bc4:	mov    ds:0xd38db375,al
  412bca:	pushf  
  412bcb:	push   0x194c6985
  412bd0:	pop    edx
  412bd1:	int3   
  412bd2:	inc    ecx
  412bd3:	jbe    0x412c03
  412bd5:	add    cl,BYTE PTR [ecx]
  412bd7:	push   0xffffffcb
  412bd9:	jbe    0x412c1a
  412bdb:	stc    
  412bdc:	dec    edi
  412bdd:	arpl   WORD PTR [ecx-0x3ada323c],di
  412be3:	xor    DWORD PTR [eax-0x5b],edx
  412be6:	dec    esp
  412be7:	lods   al,BYTE PTR ds:[esi]
  412be8:	int    0xc7
  412bea:	shr    BYTE PTR fs:[edx],1
  412bed:	pop    ebp
  412bee:	jmp    0x25ee:0x9c8dfcf7
  412bf5:	retf   0x8162
  412bf8:	scas   eax,DWORD PTR es:[edi]
  412bf9:	push   ss
  412bfa:	dec    esi
  412bfb:	rcl    BYTE PTR [edx+ebp*8],0xad
  412bff:	test   eax,0x45f73d9b
  412c04:	cwde   
  412c05:	dec    ebx
  412c06:	dec    edi
  412c07:	push   ecx
  412c08:	jl     0x412c41
  412c0a:	mov    dl,0xc7
  412c0c:	and    BYTE PTR [esi+0x5b],dh
  412c0f:	pushf  
  412c10:	add    BYTE PTR [ebx+0x38],dh
  412c13:	out    dx,al
  412c14:	mov    ds:0x614837e5,al
  412c19:	cli    
  412c1a:	test   eax,0x36c3cba3
  412c1f:	je     0x412c24
  412c21:	fucom  st(2)
  412c23:	retf   0x175d
  412c26:	jg     0x412bce
  412c28:	xchg   edi,eax
  412c29:	scas   al,BYTE PTR es:[edi]
  412c2a:	iret   
  412c2b:	add    al,0xa0
  412c2d:	loopne 0x412c3f
  412c2f:	ss or  al,0x4d
  412c32:	inc    edx
  412c33:	inc    ebx
  412c34:	pusha  
  412c35:	pusha  
  412c36:	adc    eax,0x4627391
  412c3b:	ficom  WORD PTR [edx+0x49]
  412c3e:	add    ebp,eax
  412c40:	out    dx,al
  412c41:	xor    BYTE PTR [edi+edx*8-0x20bf5449],dl
  412c48:	test   al,0x61
  412c4a:	xchg   edi,eax
  412c4b:	push   ecx
  412c4c:	arpl   bp,cx
  412c4e:	repnz mov esi,DWORD PTR [bp+si]
  412c52:	mov    ecx,0x7eacddf6
  412c57:	mov    bl,BYTE PTR [ecx+0x4c]
  412c5a:	aam    0xb3
  412c5c:	mov    edi,esi
  412c5e:	femms  
  412c60:	outs   dx,DWORD PTR cs:[esi]
  412c62:	popa   
  412c63:	stc    
  412c64:	xor    al,0xed
  412c66:	ror    ebx,0xd3
  412c69:	jmp    0xe0af9df
  412c6e:	and    al,0x58
  412c70:	and    ecx,ebx
  412c72:	sub    al,0x41
  412c74:	repnz and bh,BYTE PTR [eax+0x35]
  412c78:	mov    eax,ds:0x8091788d
  412c7d:	cwde   
  412c7e:	cmp    BYTE PTR ds:0xe248579d,dh
  412c84:	add    ebx,DWORD PTR [ebp+0x2c5c4f6c]
  412c8a:	dec    esp
  412c8b:	jp     0x412cd5
  412c8d:	arpl   WORD PTR [eax],ax
  412c8f:	or     dh,BYTE PTR [esi]
  412c91:	shl    ecx,cl
  412c93:	ja     0x412c63
  412c95:	inc    ebx
  412c96:	int3   
  412c97:	push   ss
  412c98:	scas   eax,DWORD PTR es:[edi]
  412c99:	jno    0x412d0c
  412c9b:	ret    0x21e2
  412c9e:	lock ss ret 
  412ca1:	(bad)
  412ca4:	ret    
  412ca5:	jo     0x412ce8
  412ca7:	cmp    DWORD PTR [edx-0x79],edx
  412caa:	mov    cl,0xc0
  412cac:	pop    ecx
  412cad:	jmp    0x3913ff2f
  412cb2:	test   eax,0x425eebb6
  412cb7:	lds    edi,FWORD PTR [eax+edx*2]
  412cba:	sub    DWORD PTR [eax-0x7621ddd4],ebp
  412cc0:	test   edi,0xa4dbaa40
  412cc6:	jnp    0x412cc1
  412cc8:	mov    bh,0xb2
  412cca:	lods   al,BYTE PTR ds:[esi]
  412ccb:	or     BYTE PTR ds:0xe11275a5,cl
  412cd1:	in     al,0x3b
  412cd3:	jnp    0x412d36
  412cd5:	mov    esp,0x3b2e32e
  412cda:	xor    esp,DWORD PTR [ebx]
  412cdc:	push   eax
  412cdd:	push   eax
  412cde:	sbb    BYTE PTR [edx+0x42],bh
  412ce1:	jns    0x412d48
  412ce3:	cwde   
  412ce4:	xor    eax,0x9443f61b
  412ce9:	out    0xf3,al
  412ceb:	jecxz  0x412d5c
  412ced:	arpl   cx,bp
  412cef:	mov    eax,ds:0xf9c735ec
  412cf4:	or     esi,esp
  412cf6:	inc    edi
  412cf7:	inc    eax
  412cf8:	jmp    0x6611d913
  412cfd:	mov    esi,DWORD PTR [edi+0x2e]
  412d00:	aaa    
  412d01:	mov    BYTE PTR [esi-0x52dd87bf],ah
  412d07:	xor    dl,BYTE PTR [edx+0x46d526f3]
  412d0d:	xor    eax,0xa399acbc
  412d12:	mov    bl,dl
  412d14:	dec    esp
  412d15:	and    al,0xfc
  412d17:	fcmovne st,st(6)
  412d19:	xchg   esi,esp
  412d1b:	in     eax,0xa4
  412d1d:	mov    BYTE PTR [eax],cl
  412d1f:	xchg   esp,eax
  412d20:	or     al,0x0
  412d22:	fld    st(0)
  412d24:	(bad)  
  412d25:	loopne 0x412cbd
  412d27:	call   0x63db:0x11d5e6ef
  412d2e:	stc    
  412d2f:	daa    
  412d30:	cli    
  412d31:	shr    DWORD PTR [ecx-0x57],cl
  412d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d35:	jmp    0x4db6:0xe3e75dd8
  412d3c:	cld    
  412d3d:	fisub  DWORD PTR [edi*1-0x1beb01b1]
  412d44:	cwde   
  412d45:	sbb    al,0xb7
  412d47:	dec    ecx
  412d48:	mov    ebp,DWORD PTR [ebx+0x50]
  412d4b:	cld    
  412d4c:	jg     0x412ce4
  412d4e:	lods   al,BYTE PTR ds:[esi]
  412d4f:	sub    dh,ah
  412d51:	jns    0x412d0d
  412d53:	jb     0x412ce2
  412d55:	cmp    ebp,ebp
  412d57:	dec    esp
  412d58:	dec    ecx
  412d59:	cwde   
  412d5a:	add    DWORD PTR [esi+eax*4-0x10],edx
  412d5e:	adc    eax,0x8624daa6
  412d63:	mov    esp,0x9a151d7b
  412d68:	push   esi
  412d69:	xor    ah,BYTE PTR [ecx]
  412d6b:	lea    esi,[ebp-0x182916f9]
  412d71:	inc    esi
  412d72:	and    dh,BYTE PTR ds:0x6417941
  412d78:	nop
  412d79:	(bad)  
  412d7a:	mov    dl,BYTE PTR [ecx+ebp*8-0x50]
  412d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d7f:	xchg   edx,eax
  412d80:	mov    ss,WORD PTR [esi]
  412d82:	js     0x412dce
  412d84:	inc    esp
  412d85:	pop    ebp
  412d86:	test   BYTE PTR [esi+edx*2-0x1b2b2d7c],al
  412d8d:	mov    dl,0xdf
  412d8f:	ja     0x412d51
  412d91:	cld    
  412d92:	jmp    0x6ecb:0xb935cc53
  412d99:	cmp    ch,BYTE PTR [esi+0x5395ed82]
  412d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da0:	sub    eax,0x9a9fcc48
  412da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da6:	mov    eax,0x309c37f4
  412dab:	mov    al,ds:0x896b7805
  412db0:	mov    eax,ds:0xfce27d7d
  412db5:	in     eax,0x6f
  412db7:	ja     0x412dc4
  412db9:	mov    ebp,0x3fa47b7e
  412dbe:	mov    bl,0x2c
  412dc0:	inc    edi
  412dc1:	mov    eax,ds:0x47d7c7ca
  412dc6:	(bad)  
  412dc7:	jbe    0x412d76
  412dc9:	icebp  
  412dca:	(bad)  
  412dcb:	dec    ebx
  412dcc:	mov    BYTE PTR ds:0xa3b7da45,al
  412dd2:	fcmovu st,st(3)
  412dd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd5:	clc    
  412dd6:	mov    BYTE PTR [eax+0x7c],cl
  412dd9:	mov    DWORD PTR [ecx-0x55],0x5cf96659
  412de0:	adc    DWORD PTR [ebp+0x5d4f19f7],0xfffffffa
  412de7:	repz inc ebp
  412de9:	mov    edx,0xdb670bb0
  412dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412def:	pop    eax
  412df0:	cmp    DWORD PTR [edx-0x3bd0cb47],ecx
  412df6:	jnp    0x412dbf
  412df8:	jnp    0x412e78
  412dfa:	push   eax
  412dfb:	out    dx,eax
  412dfc:	jle    0x412d98
  412dfe:	outs   dx,DWORD PTR ds:[esi]
  412dff:	or     eax,0x46e8259
  412e04:	xchg   esp,eax
  412e05:	(bad)  
  412e06:	sbb    eax,0xd99db060
  412e0b:	xchg   ebp,eax
  412e0c:	adc    cl,BYTE PTR [eax-0x55234d66]
  412e12:	arpl   WORD PTR [esi+0x26daa26],bx
  412e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e19:	push   ebx
  412e1a:	hlt    
  412e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1c:	lods   al,BYTE PTR ds:[esi]
  412e1d:	int3   
  412e1e:	int3   
  412e1f:	imul   BYTE PTR [edi+0x574e34b8]
  412e25:	stc    
  412e26:	aaa    
  412e27:	clc    
  412e28:	mov    ecx,db6
  412e2b:	rcl    ebp,cl
  412e2d:	xchg   DWORD PTR [ecx-0x61ad7e0b],ebx
  412e33:	jae    0x412e38
  412e35:	jmp    0xdff8a48b
  412e3a:	cdq    
  412e3b:	adc    BYTE PTR [ecx+0xf1bbe3a],cl
  412e41:	or     eax,0xb2ae868d
  412e46:	sti    
  412e47:	rcr    BYTE PTR ds:0x4b7cddfe,0xeb
  412e4e:	popa   
  412e4f:	mov    cl,0xb
  412e51:	sar    DWORD PTR [ebx],cl
  412e53:	sbb    DWORD PTR [ecx],esp
  412e55:	daa    
  412e56:	out    dx,al
  412e57:	adc    edx,DWORD PTR [eax]
  412e59:	fmul   st(6),st
  412e5b:	inc    esp
  412e5c:	cmp    eax,0x8436334
  412e61:	xchg   esp,eax
  412e62:	mov    eax,ds:0x5e0286f1
  412e67:	iret   
  412e68:	jecxz  0x412e87
  412e6a:	adc    bh,BYTE PTR [ebx]
  412e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e6d:	xor    edx,DWORD PTR ds:0x11a037db
  412e73:	sub    BYTE PTR [eax+0x7004cc2d],dh
  412e79:	inc    ecx
  412e7a:	mov    dh,0xa7
  412e7c:	push   0xba598bb1
  412e81:	sti    
  412e82:	add    eax,eax
  412e84:	xchg   DWORD PTR [edx+0x41],esp
  412e87:	mov    esp,0x95065541
  412e8c:	imul   ecx,eax,0x6433e1f0
  412e92:	sub    eax,0x4ad2f343
  412e97:	xlat   BYTE PTR ds:[ebx]
  412e98:	out    dx,eax
  412e99:	ins    DWORD PTR es:[edi],dx
  412e9a:	loopne 0x412f1b
  412e9c:	xchg   esi,eax
  412e9d:	ja     0x412e58
  412e9f:	cmp    eax,0xc7aeb779
  412ea4:	sti    
  412ea5:	or     bh,dl
  412ea7:	sbb    ecx,DWORD PTR [ebx+0x14f8af3d]
  412ead:	xchg   DWORD PTR [eax+0x51c65a1a],ebx
  412eb3:	mov    edx,0xf1c1c70d
  412eb8:	pop    esi
  412eb9:	addr16 gs ins DWORD PTR es:[di],dx
  412ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ebe:	js     0x412ec7
  412ec0:	outs   dx,BYTE PTR ds:[esi]
  412ec1:	fnsetpm(287 only) 
  412ec3:	pop    ds
  412ec4:	inc    edx
  412ec5:	popf   
  412ec6:	inc    edi
  412ec7:	adc    edx,eax
  412ec9:	push   cs
  412eca:	pop    es
  412ecb:	sub    esi,DWORD PTR [eax+eax*1-0x79]
  412ecf:	push   eax
  412ed0:	sub    BYTE PTR [esi-0x13f4ac3],ch
  412ed6:	push   ebp
  412ed7:	cmp    al,0x71
  412ed9:	jg     0x412ef2
  412edb:	dec    ebp
  412edc:	adc    BYTE PTR [ecx-0x48],0x6b
  412ee0:	and    al,0x21
  412ee2:	sub    ah,BYTE PTR [ebp+0x57578f8e]
  412ee8:	pop    eax
  412ee9:	adc    cl,dl
  412eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eec:	pop    edi
  412eed:	mov    DWORD PTR [eax-0x60994b7a],esi
  412ef3:	or     dl,bh
  412ef5:	inc    ebx
  412ef6:	mov    cl,0xc3
  412ef8:	push   edi
  412ef9:	fsub   QWORD PTR [edi+0x5c3e74f]
  412eff:	mov    ch,0xe
  412f01:	xor    DWORD PTR [eax+0x1a858cec],0xffffff8c
  412f08:	and    ebp,ecx
  412f0a:	mov    esi,0x82070af8
  412f0f:	jnp    0x412efd
  412f11:	add    esp,DWORD PTR [esi]
  412f13:	jb     0x412f4a
  412f15:	int3   
  412f16:	cmp    cl,BYTE PTR [edx]
  412f18:	push   ecx
  412f19:	test   al,0x15
  412f1b:	jge    0x412f5f
  412f1d:	adc    al,0x5d
  412f1f:	outs   dx,BYTE PTR ds:[esi]
  412f20:	mov    esp,0xd73e5ce6
  412f25:	or     DWORD PTR [esi+0x63],esp
  412f28:	xchg   esp,eax
  412f29:	adc    BYTE PTR [eax-0x3f],bl
  412f2c:	or     cl,cl
  412f2e:	sahf   
  412f2f:	test   eax,0xe82caaff
  412f34:	shr    BYTE PTR [esp+edx*1+0x24535128],cl
  412f3b:	xor    ecx,ebp
  412f3d:	pusha  
  412f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f3f:	xor    dl,BYTE PTR [esi]
  412f41:	fst    QWORD PTR [ebx+0x33accf93]
  412f47:	pop    ds
  412f48:	out    0x4e,al
  412f4a:	adc    BYTE PTR [edi-0x48c168db],al
  412f50:	adc    eax,0x27589501
  412f55:	xchg   edx,eax
  412f56:	lock xchg DWORD PTR [ebp+esi*2+0x6],edi
  412f5b:	int3   
  412f5c:	fisttp WORD PTR [esi-0x79]
  412f5f:	jno    0x412fc2
  412f61:	mov    ebp,0x4457790c
  412f66:	pushf  
  412f67:	fdiv   st,st(5)
  412f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f6a:	dec    edx
  412f6b:	jmp    0xb32b326b
  412f70:	fcmovne st,st(6)
  412f72:	shl    DWORD PTR [edx+0x38],0xfd
  412f76:	aad    0x34
  412f78:	jle    0x412f6d
  412f7a:	dec    ecx
  412f7b:	(bad)  
  412f7c:	push   edi
  412f7d:	xor    cl,ch
  412f7f:	aaa    
  412f80:	cmp    al,0xb0
  412f82:	jge    0x412fd3
  412f84:	in     al,0x8
  412f86:	sti    
  412f87:	and    al,0xfd
  412f89:	push   eax
  412f8a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412f8c:	or     ah,cl
  412f8e:	test   eax,0x7fd45166
  412f93:	sbb    dh,dh
  412f95:	sbb    eax,0xc47899fd
  412f9a:	lods   al,BYTE PTR ds:[esi]
  412f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f9c:	add    eax,0x3a13c884
  412fa1:	cld    
  412fa2:	push   edi
  412fa3:	icebp  
  412fa4:	outs   dx,DWORD PTR ds:[esi]
  412fa5:	jae    0x412f91
  412fa7:	mov    al,dl
  412fa9:	(bad)  
  412fab:	dec    ecx
  412fac:	sub    bl,BYTE PTR [edx+0x795f7b13]
  412fb2:	inc    esp
  412fb3:	dec    edi
  412fb4:	cwde   
  412fb5:	xor    ecx,ebx
  412fb7:	mov    al,ds:0xced51cc7
  412fbc:	sbb    DWORD PTR [esi+eax*2-0x3d],esi
  412fc0:	xchg   edi,eax
  412fc1:	inc    esp
  412fc2:	cmp    dh,BYTE PTR [edx-0x5a55ba43]
  412fc8:	jo     0x412f58
  412fca:	jmp    0xa08b04a8
  412fcf:	data16 and BYTE PTR [eax-0x32],al
  412fd3:	mov    dh,0xb6
  412fd5:	jp     0x413026
  412fd7:	add    esp,DWORD PTR [eax+0x65]
  412fda:	in     al,0x7a
  412fdc:	push   cs
  412fdd:	(bad)  
  412fde:	fdiv   DWORD PTR [edi+0x39]
  412fe1:	int    0x5f
  412fe3:	daa    
  412fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe5:	and    DWORD PTR [ecx-0x7c687af4],eax
  412feb:	inc    ebp
  412fec:	sti    
  412fed:	or     eax,0xfdbd4477
  412ff2:	pushf  
  412ff3:	shl    BYTE PTR [ebp+0x16],1
  412ff6:	in     eax,dx
  412ff7:	pop    edx
  412ff8:	lods   eax,DWORD PTR ds:[esi]
  412ff9:	in     eax,dx
  412ffa:	jl     0x413079
  412ffc:	lds    esp,FWORD PTR [edx]
  412ffe:	fdivr  DWORD PTR [ebp+0x25]
  413001:	sub    DWORD PTR [ecx],ebx
  413003:	jae    0x412fe3
  413005:	loopne 0x412fbd
  413007:	retf   
  413008:	stos   DWORD PTR es:[edi],eax
  413009:	out    0x60,eax
  41300b:	ss fwait
  41300d:	pop    edi
  41300e:	push   0x370bffa2
  413013:	call   0x6f7c:0xfd750a07
  41301a:	sahf   
  41301b:	push   edx
  41301c:	xchg   ebp,eax
  41301d:	or     eax,DWORD PTR [ebx-0x54]
  413020:	fnstcw WORD PTR [ebx+esi*1]
  413023:	add    BYTE PTR [eax],dl
  413025:	push   eax
  413026:	das    
  413027:	mov    ch,0x24
  41302a:	pushf  
  41302b:	es sahf 
  41302d:	pop    ds
  41302e:	xchg   ecx,eax
  41302f:	mov    esp,0x364da698
  413034:	imul   eax,DWORD PTR ds:0xe98c8175,0x843089fa
  41303e:	in     al,0xe4
  413040:	push   eax
  413041:	and    esi,DWORD PTR [eax+0x46c6005f]
  413047:	sub    BYTE PTR [edi+0x39],0x7d
  41304b:	lods   al,BYTE PTR ds:[esi]
  41304c:	mov    BYTE PTR [eax+ebx*2-0x130d3d87],dh
  413053:	jl     0x412fdd
  413055:	jl     0x4130b4
  413057:	or     al,0xd7
  413059:	mov    cs,WORD PTR ds:0xc9aaa553
  41305f:	add    dl,ah
  413061:	mov    esi,0x85568e7d
  413066:	aam    0x7f
  413068:	repnz push ds
  41306a:	call   0xa1b2fedf
  41306f:	jbe    0x412ff9
  413071:	not    ah
  413073:	mov    al,0xd3
  413075:	sub    ah,BYTE PTR [edx]
  413077:	mov    WORD PTR [edx+esi*1+0x18],ss
  41307b:	and    cl,bh
  41307d:	push   esp
  41307e:	das    
  41307f:	ret    0x4d20
  413082:	test   al,bh
  413084:	dec    esp
  413085:	or     ebp,DWORD PTR [ecx-0x2ee78d1e]
  41308b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41308c:	pmaxsw mm4,QWORD PTR [ebp-0x56]
  413090:	push   edi
  413091:	xchg   esi,eax
  413092:	rcl    DWORD PTR [eax+0x66],cl
  413095:	adc    BYTE PTR [ebp-0x280497a3],0xa1
  41309c:	push   cs
  41309d:	lods   eax,DWORD PTR ds:[esi]
  41309e:	mov    ecx,0x5885ea3b
  4130a3:	aas    
  4130a4:	adc    BYTE PTR [ebp+0x17],dl
  4130a7:	fidivr WORD PTR [esi-0x7420de0e]
  4130ad:	(bad)  
  4130ae:	mov    edi,0x4b362826
  4130b3:	ds idiv ebp
  4130b6:	pop    esp
  4130b7:	icebp  
  4130b8:	push   edx
  4130b9:	pop    ebx
  4130ba:	xor    dh,BYTE PTR [eax]
  4130bc:	mov    WORD PTR [edi],fs
  4130be:	les    edi,FWORD PTR [esi]
  4130c0:	dec    edx
  4130c1:	pop    eax
  4130c2:	push   0x5616536
  4130c7:	ds mov ebx,0x4d2ca4ce
  4130cd:	xor    ebp,DWORD PTR [esi+0x2ccad4a0]
  4130d3:	and    BYTE PTR [ebp-0x2c],al
  4130d6:	retf   
  4130d7:	mov    esp,0xc614e448
  4130dc:	mov    edi,0x8f577bb0
  4130e1:	fsubr  DWORD PTR [ebx]
  4130e3:	je     0x413085
  4130e5:	lods   eax,DWORD PTR ds:[esi]
  4130e6:	(bad)  
  4130e7:	int    0xed
  4130e9:	xor    eax,0xac0f4327
  4130ee:	xlat   BYTE PTR ds:[ebx]
  4130ef:	jo     0x413111
  4130f1:	adc    dh,ch
  4130f3:	inc    esp
  4130f4:	lock and cl,BYTE PTR [ebx-0x7cd97bb8]
  4130fb:	fs mov DWORD PTR cs:[esi+0x44],esp
  413100:	pop    bx
  413102:	inc    edx
  413103:	cmp    al,0x59
  413105:	inc    eax
  413106:	arpl   ax,si
  413108:	fisttp DWORD PTR [eax+ecx*8-0x57cdca0]
  41310f:	pop    esi
  413110:	pop    edx
  413111:	in     al,dx
  413112:	test   DWORD PTR [edx-0x49865d0],esp
  413118:	jle    0x413100
  41311a:	cmp    DWORD PTR [esi],edi
  41311c:	int    0xf5
  41311e:	inc    ecx
  41311f:	add    BYTE PTR [ebp-0x5c2b9dfa],dl
  413125:	cmp    edi,esp
  413127:	lds    ebp,FWORD PTR [ecx-0x729175bd]
  41312d:	stos   BYTE PTR es:[edi],al
  41312e:	and    DWORD PTR [edx+0x6ca6fb7c],eax
  413134:	sbb    al,0x72
  413136:	(bad)  
  413137:	jg     0x41316f
  413139:	rol    edi,0x68
  41313c:	adc    eax,0x91c8b1e7
  413141:	or     BYTE PTR cs:[eax+eax*1-0xa],0x79
  413147:	sub    eax,DWORD PTR [eax-0x18]
  41314a:	sub    DWORD PTR [ecx],0x684620d8
  413150:	adc    ebx,edx
  413152:	das    
  413153:	adc    bl,BYTE PTR [ebx]
  413155:	das    
  413156:	cmp    ah,BYTE PTR [ebp-0x4fdf550f]
  41315c:	xor    ebp,ebp
  41315e:	mov    dh,0xb2
  413160:	pushf  
  413161:	stc    
  413162:	cmp    al,0x31
  413164:	xor    DWORD PTR [ebp-0x62598a4d],0xe9ded19c
  41316e:	sahf   
  41316f:	and    BYTE PTR [ebx-0x1c70b0e4],ch
  413175:	pop    eax
  413176:	or     BYTE PTR [ebp-0xdd94e57],ah
  41317c:	loop   0x4131b0
  41317e:	scas   eax,DWORD PTR es:[edi]
  41317f:	mov    ds:0x40e7f049,eax
  413184:	hlt    
  413185:	(bad)  
  413186:	and    eax,DWORD PTR es:[esi]
  413189:	push   edi
  41318a:	pop    edi
  41318b:	fisttp DWORD PTR [edx-0x6d83808e]
  413191:	cs pop es
  413193:	stos   BYTE PTR es:[edi],al
  413194:	or     al,0x17
  413196:	jne    0x4131f4
  413198:	fisubr DWORD PTR [edi+0x7efa4a39]
  41319e:	cmp    bl,BYTE PTR [edx-0x323b92bf]
  4131a4:	(bad)  
  4131a5:	(bad)  
  4131a6:	jg     0x4131f8
  4131a8:	jae    0x41318c
  4131aa:	adc    DWORD PTR [ebp-0x3b],0xbd8488d8
  4131b1:	enter  0x8a3d,0xbb
  4131b5:	out    dx,al
  4131b6:	sub    ch,BYTE PTR [edi-0x45dd12c9]
  4131bc:	shl    DWORD PTR [edx+0x67],0xb0
  4131c0:	iret   
  4131c1:	stc    
  4131c2:	in     eax,dx
  4131c3:	out    dx,eax
  4131c4:	mov    ch,0x2e
  4131c6:	dec    ecx
  4131c7:	push   ss
  4131c8:	test   eax,0x9e9a80a
  4131cd:	mov    ebx,0x5034bdb
  4131d2:	or     ah,BYTE PTR [ecx]
  4131d4:	(bad)  
  4131d6:	mov    cl,0x7b
  4131d8:	aam    0x33
  4131da:	mov    ebp,0xe2694a87
  4131df:	fsubr  st(1),st
  4131e1:	ss mov ebp,0xf657f71f
  4131e7:	ror    BYTE PTR [edi],cl
  4131e9:	retf   
  4131ea:	mov    edi,0xfecd6e36
  4131ef:	mov    ebx,0x1571c312
  4131f4:	or     BYTE PTR [edx],bl
  4131f6:	aam    0x7e
  4131f8:	jmp    0x49f4:0xaffa1771
  4131ff:	les    esi,FWORD PTR fs:[ecx-0x59b541ab]
  413206:	jg     0x4131ca
  413208:	pop    ds
  413209:	mov    cl,0xa
  41320b:	mov    cl,0x59
  41320d:	(bad)  [esi+0xcc25535]
  413213:	mov    dh,0xce
  413215:	lock adc al,0x10
  413218:	and    DWORD PTR [esi-0x17],ebp
  41321b:	mov    bl,BYTE PTR [ecx]
  41321d:	adc    ch,0x96
  413220:	mov    eax,ds:0x91ef0c3
  413225:	popa   
  413226:	sub    BYTE PTR [eax],ch
  413228:	(bad)  
  413229:	pop    edi
  41322a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41322b:	int3   
  41322c:	xchg   BYTE PTR [ecx+0x69294754],bh
  413232:	or     al,BYTE PTR [ebp+0x5a]
  413235:	mov    ecx,0x1389eba2
  41323a:	inc    esp
  41323b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41323c:	push   ebp
  41323d:	sti    
  41323e:	mov    eax,0xabd1f332
  413243:	push   cs
  413244:	cmp    bl,cl
  413246:	inc    esp
  413247:	xchg   esi,eax
  413248:	loope  0x41325e
  41324a:	das    
  41324b:	fnstsw WORD PTR ds:0xcbf2432a
  413251:	and    BYTE PTR [ebx],al
  413253:	or     al,0x4b
  413255:	pop    ds
  413256:	or     eax,edx
  413258:	mov    DWORD PTR [eax-0x6f734211],esp
  41325e:	setl   ch
  413261:	int    0xe4
  413263:	sbb    eax,0x1ca28496
  413268:	inc    ebx
  413269:	dec    eax
  41326a:	inc    ebx
  41326b:	dec    ebp
  41326c:	and    ebp,esp
  41326e:	xor    bl,BYTE PTR [ebp+esi*4+0x52]
  413272:	ds add al,ah
  413275:	sbb    ebp,ebp
  413277:	push   edx
  413278:	addr16 dec ebp
  41327a:	push   ds
  41327b:	sbb    al,0x21
  41327d:	mov    al,0x26
  41327f:	add    al,0x70
  413281:	mov    dh,0xd5
  413283:	mov    ds:0xf533e64e,eax
  413288:	pop    esi
  413289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41328a:	(bad)  
  41328b:	repnz mov eax,0xdb843f9b
  413291:	ror    BYTE PTR [eax-0x140d42c],1
  413297:	rcl    ch,0x5d
  41329a:	ret    
  41329b:	xor    DWORD PTR [edi-0x36],esi
  41329e:	and    bl,cl
  4132a0:	jbe    0x4132f5
  4132a2:	cld    
  4132a3:	icebp  
  4132a4:	aas    
  4132a5:	mov    eax,0x29081fd3
  4132aa:	xchg   BYTE PTR ds:[ecx+0x1e06de89],bl
  4132b1:	and    ah,ch
  4132b3:	jo     0x41326f
  4132b5:	call   0x286176ce
  4132ba:	gs jb  0x4132f9
  4132bd:	and    ebp,edx
  4132bf:	push   0xce9ce741
  4132c4:	push   ebp
  4132c5:	ret    0x4696
  4132c8:	lock cmp bl,BYTE PTR [ecx]
  4132cb:	inc    esi
  4132cc:	mov    eax,ds:0x63e5e06f
  4132d1:	cli    
  4132d2:	lea    ebp,[ebp-0x26]
  4132d5:	jp     0x41333a
  4132d7:	push   ebp
  4132d8:	inc    ebx
  4132d9:	mov    ecx,0x2617cce7
  4132de:	mov    ebx,0xcf02adac
  4132e3:	(bad)  
  4132e4:	das    
  4132e5:	push   0xde844415
  4132ea:	mov    ecx,0xe879ac7e
  4132ef:	sub    al,0x7d
  4132f1:	mov    BYTE PTR [ebx],al
  4132f3:	add    DWORD PTR ds:0x6b3062b9,ecx
  4132f9:	addr16 pushf 
  4132fb:	(bad)  
  4132fc:	push   eax
  4132fd:	movq   mm0,QWORD PTR [esi+0x4350a8a6]
  413304:	jge    0x4132e9
  413306:	jns    0x41337d
  413308:	jmp    0xcd76c9a2
  41330d:	and    dl,BYTE PTR [ecx+0x7d]
  413310:	mov    eax,ds:0x81102bb3
  413315:	pop    esp
  413316:	rol    DWORD PTR [edi+0x61],cl
  413319:	sbb    BYTE PTR [eax+0x6dd5aadf],ah
  41331f:	push   edi
  413320:	mov    ecx,0x4a6ffe20
  413325:	pop    esp
  413326:	mov    dh,BYTE PTR [edx-0x51]
  413329:	jne    0x41330a
  41332b:	sub    DWORD PTR [edi+ebx*1],ebp
  41332e:	int    0x18
  413330:	or     al,0xd6
  413332:	data16 lahf 
  413334:	lods   al,BYTE PTR ds:[esi]
  413335:	ja     0x41339f
  413337:	repnz adc ah,BYTE PTR [ebp-0x5b]
  41333b:	push   esp
  41333c:	iret   
  41333d:	sbb    DWORD PTR [edx],eax
  41333f:	in     al,0x65
  413341:	push   esi
  413342:	ret    
  413343:	xor    bh,BYTE PTR [ecx+0x5a]
  413346:	lds    eax,FWORD PTR [esi]
  413348:	scas   eax,DWORD PTR es:[edi]
  413349:	add    eax,DWORD PTR [ebx-0x10658d2a]
  41334f:	inc    ecx
  413350:	mov    dl,0x14
  413352:	lock repz pop ebx
  413355:	jmp    0x6075:0xaef520c3
  41335c:	popa   
  41335d:	ficomp DWORD PTR [esi]
  41335f:	xor    ebp,DWORD PTR [ebx+edi*2]
  413362:	mov    cl,0x5a
  413364:	cld    
  413365:	jnp    0x41331b
  413367:	adc    eax,DWORD PTR [ebx+0x112f5753]
  41336d:	(bad)  
  41336e:	int    0x11
  413370:	dec    eax
  413371:	xchg   BYTE PTR [eax],dl
  413373:	outs   dx,DWORD PTR ds:[esi]
  413374:	outs   dx,BYTE PTR ds:[esi]
  413375:	xchg   esi,eax
  413376:	add    al,0x58
  413378:	pushaw 
  41337a:	pusha  
  41337b:	pop    ds
  41337c:	sub    al,BYTE PTR [ebx+0x2c]
  41337f:	clc    
  413380:	push   ss
  413381:	aaa    
  413382:	and    ebx,edx
  413384:	rcr    edx,0x5e
  413387:	stos   BYTE PTR es:[edi],al
  413388:	push   esp
  413389:	push   esi
  41338a:	and    al,0xf3
  41338c:	fcmovnbe st,st(6)
  41338e:	pop    ecx
  41338f:	jmp    0x41338a
  413391:	mov    dh,0xaf
  413393:	mov    cl,0x34
  413395:	add    BYTE PTR [ecx+edi*8],cl
  413398:	gs pop edx
  41339a:	pop    ss
  41339b:	outs   dx,BYTE PTR ds:[esi]
  41339c:	ror    ch,0x96
  41339f:	inc    eax
  4133a0:	lods   al,BYTE PTR ds:[esi]
  4133a1:	dec    ebp
  4133a2:	js     0x413349
  4133a4:	xor    DWORD PTR [edx-0x46d87016],ebx
  4133aa:	mov    DWORD PTR [edi-0x20],ebx
  4133ad:	stos   DWORD PTR es:[edi],eax
  4133ae:	mov    eax,0x33402597
  4133b3:	fdivr  DWORD PTR [ebp+0x40]
  4133b6:	inc    eax
  4133b7:	or     cl,BYTE PTR [eax]
  4133b9:	fcmovb st,st(1)
  4133bb:	sbb    ecx,DWORD PTR [edi]
  4133bd:	mov    ebx,ebp
  4133bf:	pop    eax
  4133c0:	loope  0x41342b
  4133c2:	dec    ebx
  4133c3:	push   eax
  4133c4:	pop    ss
  4133c5:	or     BYTE PTR [eax-0xe169d7f],al
  4133cb:	(bad)  
  4133cc:	and    BYTE PTR [ecx+0x611af442],0x62
  4133d3:	pusha  
  4133d4:	dec    ebx
  4133d5:	or     eax,ecx
  4133d7:	imul   eax,DWORD PTR [ecx],0xffffffac
  4133da:	sbb    cl,BYTE PTR [esi]
  4133dc:	push   ebp
  4133dd:	repz push ss
  4133df:	jnp    0x41345d
  4133e1:	inc    ebp
  4133e2:	push   ax
  4133e4:	sti    
  4133e5:	in     al,0x5c
  4133e7:	sub    al,0xd7
  4133e9:	mov    al,0x92
  4133eb:	loop   0x4133d7
  4133ed:	data16 ror BYTE PTR [eax-0x10],0x3d
  4133f2:	and    eax,0x5b965ddb
  4133f7:	jb     0x413405
  4133f9:	call   0x3720:0x84485516
  413400:	mov    edi,0x8d884e4c
  413405:	pop    esi
  413406:	xlat   BYTE PTR ds:[ebx]
  413407:	mov    edi,0xf15b2d2
  41340c:	xchg   esi,eax
  41340d:	addr16 fcomp st(1)
  413410:	jb     0x4133b4
  413412:	xchg   edx,eax
  413413:	adc    eax,0x8fb8cbf7
  413418:	mov    BYTE PTR [ebx],bl
  41341a:	jle    0x4133a7
  41341c:	fild   QWORD PTR [ebx-0x5762442]
  413422:	cmp    DWORD PTR [edi],edx
  413424:	mov    al,ds:0xb78f7bac
  413429:	add    al,0x4c
  41342b:	mov    dh,0x2a
  41342d:	adc    eax,0x72117fb2
  413432:	mov    al,ds:0x212a7845
  413437:	daa    
  413438:	cli    
  413439:	jb     0x413405
  41343b:	adc    ebp,DWORD PTR [esi+ecx*1+0x13]
  41343f:	shl    BYTE PTR [edx+0x6],0x20
  413443:	mov    ebp,0xf336a949
  413448:	imul   eax,DWORD PTR [edi+0x5d93215d],0xb329caa5
  413452:	dec    ecx
  413453:	sub    esp,DWORD PTR [edi+0x69c9d8e]
  413459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41345a:	aas    
  41345b:	sub    eax,0xb65fbedb
  413460:	(bad)  
  413461:	arpl   bp,ax
  413463:	fsubr  DWORD PTR [edi-0x10]
  413466:	ja     0x4133eb
  413468:	repnz (bad) [eax+0x5]
  41346c:	add    ch,bl
  41346e:	inc    ebx
  41346f:	(bad)  
  413470:	js     0x4133f2
  413472:	mov    esi,0x3be6925
  413477:	fcom   st(3)
  413479:	es pop ss
  41347b:	loop   0x413448
  41347d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41347e:	pop    ds
  41347f:	push   ds
  413480:	(bad)  
  413481:	cmp    DWORD PTR [ebx+0x41094f21],ebp
  413487:	jo     0x413421
  413489:	pop    esi
  41348a:	sbb    ch,al
  41348c:	push   edi
  41348d:	iret   
  41348e:	adc    bh,bh
  413490:	add    esp,DWORD PTR [ecx-0x402090f1]
  413496:	jmp    0x15e4:0x7d393dda
  41349d:	and    DWORD PTR [edx-0x30],0x45
  4134a1:	sbb    edx,DWORD PTR [ebp-0x1c3b8828]
  4134a7:	std    
  4134a8:	test   BYTE PTR [edx-0x372658cf],ah
  4134ae:	or     eax,0xdd74e658
  4134b3:	imul   ebx,DWORD PTR [ecx+0x31],0xfffffff3
  4134b7:	dec    edi
  4134b8:	adc    ebx,DWORD PTR [edi]
  4134ba:	mov    ebx,0x7ad76a8c
  4134bf:	loop   0x4134da
  4134c1:	jno    0x41347d
  4134c3:	(bad)  
  4134c4:	int    0xb2
  4134c6:	push   esi
  4134c7:	fidivr DWORD PTR [ecx+0x67]
  4134ca:	pop    ss
  4134cb:	xlat   BYTE PTR ds:[ebx]
  4134cc:	fcom   QWORD PTR [ebx-0x5cdb4657]
  4134d2:	jmp    0x413536
  4134d4:	xchg   ecx,eax
  4134d5:	push   0xffffff80
  4134d7:	sbb    eax,0xe1b5aa50
  4134dc:	sti    
  4134dd:	jle    0x4134ba
  4134df:	mov    BYTE PTR [ebx],bh
  4134e1:	fisttp DWORD PTR [ebx+0x7c]
  4134e4:	xor    esi,DWORD PTR [ebp+esi*8-0x745ac685]
  4134eb:	xchg   ebx,eax
  4134ec:	add    eax,0xe7206528
  4134f1:	(bad)
  4134f5:	out    dx,al
  4134f6:	sub    eax,0x679efe68
  4134fb:	test   eax,0x568c4bd7
  413500:	jns    0x41354a
  413502:	jle    0x41351e
  413504:	jne    0x413569
  413506:	push   esp
  413507:	dec    ebx
  413508:	inc    edi
  413509:	imul   esp
  41350b:	call   0xb433db04
  413510:	test   DWORD PTR [ecx+0x16],ebx
  413513:	arpl   WORD PTR [ebp+0x19],bp
  413516:	jne    0x4134ef
  413518:	inc    ebx
  413519:	push   esp
  41351a:	lods   eax,DWORD PTR ds:[esi]
  41351b:	scas   eax,DWORD PTR es:[edi]
  41351c:	lock loop 0x413597
  41351f:	dec    ebp
  413520:	leave  
  413521:	pavgb  mm5,QWORD PTR [edx+0x4b927c2c]
  413528:	push   cs
  413529:	and    al,0xbc
  41352b:	mov    bl,0xf6
  41352d:	dec    esp
  41352e:	jmp    0x5908:0x6cdc00bd
  413535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413536:	ret    
  413537:	mov    eax,edx
  413539:	fmul   DWORD PTR [esi]
  41353b:	inc    ebp
  41353c:	cmp    ebx,DWORD PTR ds:0x243960a4
  413542:	jge    0x413523
  413544:	inc    edi
  413545:	test   DWORD PTR [ebp-0x66aafeb4],0xe25d226d
  41354f:	scas   eax,DWORD PTR es:[edi]
  413550:	adc    edx,DWORD PTR [ecx]
  413552:	jns    0x4135c9
  413554:	mov    al,0xd6
  413556:	xor    ebp,eax
  413558:	cmp    BYTE PTR [ebx+0x3d5eda4a],ah
  41355e:	gs jae 0x4135e0
  413561:	and    al,0x0
  413563:	outs   dx,DWORD PTR ds:[esi]
  413564:	js     0x413578
  413566:	inc    ecx
  413567:	sub    al,BYTE PTR [eax]
  413569:	push   es
  41356a:	loope  0x4135e7
  41356c:	mov    cl,0xee
  41356e:	xor    eax,eax
  413570:	mov    ebp,ss
  413572:	jno    0x413582
  413574:	sub    eax,0xc1730c1f
  413579:	sbb    al,0xa7
  41357b:	mov    edi,ecx
  41357d:	jb     0x4135ab
  41357f:	pusha  
  413580:	and    BYTE PTR [ebx+ebp*4],cl
  413583:	and    BYTE PTR [ebx-0x25],ah
  413586:	add    DWORD PTR [edx+0x5b],0xfffffff9
  41358a:	add    eax,0xffffffb8
  41358d:	fstp   QWORD PTR [edx-0x501abbf9]
  413593:	outs   dx,BYTE PTR ds:[esi]
  413594:	xor    DWORD PTR [ecx+0x7ead85b8],ebp
  41359a:	adc    edi,edx
  41359c:	and    DWORD PTR [edi+0x4a375504],esi
  4135a2:	nop
  4135a3:	scas   eax,DWORD PTR es:[edi]
  4135a4:	mov    edi,0x25afe925
  4135a9:	push   es
  4135aa:	adc    BYTE PTR [ebp-0x529d12b5],al
  4135b0:	mov    edx,0xb7e990c7
  4135b5:	xchg   esi,eax
  4135b6:	sbb    BYTE PTR [ebx-0x1b],al
  4135b9:	mov    ?,esp
  4135bb:	xchg   ebp,eax
  4135bc:	add    al,0xe6
  4135be:	mov    edi,0xa419d9cc
  4135c3:	inc    ebp
  4135c4:	jb     0x4135e0
  4135c6:	dec    ebp
  4135c7:	ins    DWORD PTR es:[edi],dx
  4135c8:	popa   
  4135c9:	bound  edi,QWORD PTR [ebp-0x11fef067]
  4135cf:	jo     0x413603
  4135d1:	xor    DWORD PTR [ebp-0x16],edi
  4135d4:	xor    eax,0x74fea2a0
  4135d9:	call   0xc70c:0x1a7c98d1
  4135e0:	(bad)  [edx]
  4135e2:	adc    ah,BYTE PTR [ebx-0x2818d487]
  4135e8:	fisubr WORD PTR [ebx]
  4135ea:	aaa    
  4135eb:	adc    ebp,esi
  4135ed:	outs   dx,DWORD PTR ds:[esi]
  4135ee:	push   ebx
  4135ef:	push   edx
  4135f0:	aaa    
  4135f1:	push   edi
  4135f2:	sbb    DWORD PTR [ecx-0x8],ecx
  4135f5:	mov    edi,0xfceeceaa
  4135fa:	mov    esi,0x645f783c
  4135ff:	sbb    DWORD PTR [edx+0x1d],0x6e
  413603:	test   BYTE PTR [eax],dl
  413605:	(bad)  
  413606:	(bad)  
  413607:	adc    eax,0xc5c22203
  41360c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41360d:	cmc    
  41360e:	sar    DWORD PTR [edx-0x20626e3f],1
  413614:	push   ecx
  413615:	push   eax
  413616:	hlt    
  413617:	push   ebx
  413618:	scas   al,BYTE PTR es:[edi]
  413619:	adc    eax,0x75b47ac6
  41361e:	adc    DWORD PTR ds:0xa40e2fbb,ebp
  413624:	repnz pop es
  413626:	mov    ds:0x23bda14e,eax
  41362b:	ret    
  41362c:	xchg   esp,eax
  41362d:	add    ecx,DWORD PTR ds:0x984b8d8f
  413633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413634:	cmp    DWORD PTR [edi+edx*4+0x52],ecx
  413638:	dec    ebx
  413639:	test   bh,dh
  41363b:	or     ch,0x65
  41363e:	inc    eax
  41363f:	xor    bh,BYTE PTR [ebp-0x33]
  413642:	sti    
  413643:	push   esp
  413644:	xor    al,0x22
  413646:	cmp    DWORD PTR [ecx+edx*4-0x2dcac3eb],esp
  41364d:	jbe    0x4135ec
  41364f:	dec    edx
  413650:	cwde   
  413651:	in     al,0xba
  413653:	cmp    al,0xbe
  413655:	(bad)  
  413656:	int    0xd5
  413658:	mov    ?,WORD PTR [esi+edi*2+0x3]
  41365c:	cmp    eax,ebx
  41365e:	ja     0x413692
  413660:	mov    eax,ds:0x99a925ba
  413665:	mov    al,ds:0xcfb88258
  41366a:	out    0x2,eax
  41366c:	mov    ch,0xa4
  41366e:	dec    eax
  41366f:	mov    ebp,0xf45044c4
  413674:	add    eax,0x65a91fdf
  413679:	xor    ch,cl
  41367b:	pop    esp
  41367c:	mov    bh,0x76
  41367e:	adc    al,BYTE PTR [ebx+0x50c02e3a]
  413684:	mov    dl,0x17
  413686:	stc    
  413687:	mov    ebp,0xe6a7c75b
  41368c:	fnsave [ebx+0x6d]
  41368f:	mov    ebx,0x21dcb613
  413694:	cmp    ecx,ebp
  413696:	add    BYTE PTR [ecx],al
  413698:	jmp    0x41368a
  41369a:	add    dl,BYTE PTR [ecx+0x704892b]
  4136a0:	sti    
  4136a1:	out    dx,eax
  4136a2:	jp     0x413661
  4136a4:	mov    ds:0xbfacc78,al
  4136a9:	jo     0x4136f9
  4136ab:	aam    0xdb
  4136ad:	mov    eax,0x42916acc
  4136b2:	jmp    0xe053:0x20e0
  4136b8:	out    dx,eax
  4136b9:	xor    bl,dl
  4136bb:	jnp    0x4136f6
  4136bd:	sub    al,dh
  4136bf:	arpl   WORD PTR [esp+ebx*1+0x3b28cce4],si
  4136c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136c7:	inc    esp
  4136c8:	xchg   edi,eax
  4136c9:	pop    edx
  4136ca:	fbstp  TBYTE PTR [edi+0x4a]
  4136cd:	shl    DWORD PTR [edx+0x5b],1
  4136d0:	xchg   esi,eax
  4136d1:	or     al,0xe8
  4136d3:	pop    edi
  4136d4:	sbb    edx,eax
  4136d6:	sub    esp,DWORD PTR [ecx-0x614cf0af]
  4136dc:	mov    esp,0x9c321347
  4136e1:	ret    0x3807
  4136e4:	cmp    BYTE PTR ds:0x73abd74a,bh
  4136ea:	and    eax,0xe1e3e82e
  4136ef:	xor    eax,0x3fefe4c2
  4136f4:	outs   dx,DWORD PTR ds:[esi]
  4136f5:	and    eax,0x9613b3a0
  4136fa:	(bad)  [edi]
  4136fc:	push   ebp
  4136fd:	jle    0x41371f
  4136ff:	and    eax,0x93f719eb
  413704:	xlat   BYTE PTR ds:[ebx]
  413705:	(bad)  
  413706:	cmp    DWORD PTR [esp+ebp*4+0x9],0xcd27e1e1
  41370e:	cmp    edx,DWORD PTR [eax+edx*4+0x73c97a4c]
  413715:	jmp    0x9f6ef1ad
  41371a:	or     al,0xd1
  41371c:	mov    DWORD PTR [esi-0x25],ecx
  41371f:	inc    esi
  413720:	(bad)  
  413721:	in     al,dx
  413722:	mov    esp,0x773a351b
  413727:	stos   BYTE PTR es:[edi],al
  413728:	sbb    al,0xcc
  41372a:	push   eax
  41372b:	inc    edx
  41372c:	mov    bh,0x4e
  41372e:	repnz or dl,dh
  413731:	push   es
  413732:	mov    ah,0x9c
  413734:	cmp    al,0x2c
  413736:	pop    es
  413737:	inc    esp
  413738:	bound  ecx,QWORD PTR [esi-0x3c4e0321]
  41373e:	or     dl,bh
  413740:	scas   eax,DWORD PTR es:[edi]
  413741:	jmp    0xb034:0x18e0f032
  413748:	je     0x4137bf
  41374a:	test   al,0x32
  41374c:	jno    0x4137bb
  41374e:	mov    ah,0x6d
  413750:	push   ds
  413751:	mov    ecx,0x205958d
  413756:	test   DWORD PTR [ecx-0x3c5195e9],esp
  41375c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41375d:	sub    ah,BYTE PTR [esi+0xc731fb6]
  413763:	rol    DWORD PTR [edi+0x7f],1
  413766:	sub    BYTE PTR [ebp+0x5634a67a],bh
  41376c:	and    al,0x29
  41376e:	fcmovnu st,st(6)
  413770:	push   edi
  413771:	push   ecx
  413772:	mov    ah,0x5
  413774:	sub    bh,BYTE PTR [eax-0x14354eef]
  41377a:	pusha  
  41377b:	in     al,dx
  41377c:	loopne 0x413736
  41377e:	add    al,0xed
  413780:	inc    edx
  413781:	cs inc eax
  413783:	ss mov dl,0x3c
  413786:	push   0xffffff81
  413788:	push   ds
  413789:	loop   0x4137a2
  41378b:	sbb    eax,0x8432b480
  413790:	fcomip st,st(6)
  413792:	push   0xffffffdf
  413794:	popa   
  413795:	mov    ds:0x8270e70b,eax
  41379a:	cld    
  41379b:	test   DWORD PTR [edi-0x3e],edi
  41379e:	inc    ecx
  41379f:	sbb    BYTE PTR [edx-0x27],bh
  4137a2:	xor    bl,BYTE PTR [eax]
  4137a4:	loopne 0x413733
  4137a6:	sub    al,0xcd
  4137a8:	cmp    al,0xd
  4137aa:	mov    cl,0x25
  4137ac:	enter  0x4dc7,0x9a
  4137b0:	data16 hlt 
  4137b2:	xor    al,0x96
  4137b4:	dec    esp
  4137b5:	jns    0x413776
  4137b7:	jne    0x413790
  4137b9:	xchg   edx,eax
  4137ba:	inc    edx
  4137bb:	mov    eax,ds:0x3134cbf5
  4137c0:	jecxz  0x4137c3
  4137c2:	mov    dl,0x8d
  4137c4:	in     eax,0x4a
  4137c6:	jb     0x41383e
  4137c8:	retf   0x4555
  4137cb:	jae    0x413828
  4137cd:	sahf   
  4137ce:	in     al,dx
  4137cf:	pop    ecx
  4137d0:	fidiv  WORD PTR [eax+0x4d8446a5]
  4137d6:	out    0x9a,al
  4137d8:	adc    DWORD PTR [ebx-0x7829f2c8],esi
  4137de:	push   ecx
  4137df:	sub    DWORD PTR [ebx+0x1fb8c06b],esp
  4137e5:	sbb    BYTE PTR [ebx+esi*1-0x42],al
  4137e9:	and    BYTE PTR [ebp-0x737bb822],ah
  4137ef:	jnp    0x41382e
  4137f1:	push   ds
  4137f2:	or     dh,al
  4137f4:	xor    DWORD PTR [edi+0x53e26d59],0xc9cbfde8
  4137fe:	stos   DWORD PTR es:[edi],eax
  4137ff:	rcr    DWORD PTR [ebx-0x55],1
  413802:	cmp    ebp,DWORD PTR [eax]
  413804:	leave  
  413805:	or     esi,DWORD PTR [ebx+esi*2]
  413808:	in     eax,dx
  413809:	cmp    eax,DWORD PTR [edi-0x5d]
  41380c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41380d:	mov    esp,0xbc14b243
  413812:	pusha  
  413813:	mov    ebx,0x38d2f1f8
  413818:	mov    edx,0xe767c859
  41381d:	adc    esp,DWORD PTR [esi-0x5a]
  413820:	push   0xa27b02f1
  413825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413826:	fst    QWORD PTR [edx]
  413828:	and    edi,DWORD PTR [ebx]
  41382a:	cmp    ah,BYTE PTR ds:0x63ac5263
  413830:	push   eax
  413831:	gs or  al,0x37
  413834:	and    dh,bh
  413836:	aad    0x30
  413838:	retf   
  413839:	jo     0x4137de
  41383b:	push   edi
  41383c:	sti    
  41383d:	icebp  
  41383e:	jge    0x4137fa
  413840:	aas    
  413841:	call   0x65b1:0x61626170
  413848:	pop    ebp
  413849:	push   0x2f
  41384b:	add    dh,BYTE PTR [edi]
  41384d:	jp     0x41387b
  41384f:	loop   0x4138ce
  413851:	add    edi,DWORD PTR [eax+0x413c80a9]
  413857:	dec    ebp
  413858:	lods   eax,DWORD PTR gs:[esi]
  41385a:	ror    ebx,1
  41385c:	add    ah,BYTE PTR [ebp-0x45]
  41385f:	xor    eax,0x4bcb5618
  413864:	retf   0x6d44
  413867:	and    BYTE PTR [ebp-0xa],0xe1
  41386b:	inc    edx
  41386c:	pop    esp
  41386d:	cmp    bh,al
  41386f:	mov    bh,0xa1
  413871:	sub    eax,DWORD PTR [edi+0x4b]
  413874:	dec    ecx
  413875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413876:	das    
  413877:	out    dx,al
  413878:	and    dl,dh
  41387a:	int    0xc
  41387c:	pusha  
  41387d:	jle    0x413840
  41387f:	jo     0x413827
  413881:	jb     0x41388d
  413883:	mov    cl,0xc8
  413885:	pop    ds
  413886:	sti    
  413887:	mov    ds:0x1eff4c4,al
  41388c:	retf   
  41388d:	sbb    eax,0x941b6c06
  413892:	pop    edx
  413893:	mov    bh,0x69
  413895:	mov    ds:0x11a0c306,al
  41389a:	mov    edi,0xcac0299e
  41389f:	mov    bh,BYTE PTR [eax]
  4138a1:	mov    esp,0xb86e058
  4138a6:	cs sbb al,0x54
  4138a9:	(bad)  
  4138ab:	fstp   TBYTE PTR [edx]
  4138ad:	mov    eax,ds:0x85960aea
  4138b2:	mov    dl,al
  4138b4:	xchg   esi,eax
  4138b5:	je     0x413839
  4138b7:	xor    ah,BYTE PTR [esi+0x20d9aa1b]
  4138bd:	push   edx
  4138be:	shl    esp,0xf3
  4138c1:	xchg   BYTE PTR [edi],ch
  4138c3:	das    
  4138c4:	jmp    0xb82f5783
  4138c9:	inc    esp
  4138ca:	les    esp,FWORD PTR [ecx]
  4138cc:	inc    eax
  4138cd:	das    
  4138ce:	pop    edx
  4138cf:	stos   BYTE PTR es:[edi],al
  4138d0:	cld    
  4138d1:	xchg   edx,eax
  4138d2:	or     ecx,DWORD PTR [edi+ebp*2+0xc42362e]
  4138d9:	and    BYTE PTR [eax],ch
  4138db:	ret    
  4138dc:	mul    BYTE PTR [edx+0x3ae9fd74]
  4138e2:	dec    edi
  4138e3:	pop    edx
  4138e4:	bts    esp,eax
  4138e7:	sbb    al,0x52
  4138e9:	dec    edi
  4138ea:	or     DWORD PTR [esi],ebx
  4138ec:	test   eax,0xb8ff78f2
  4138f1:	repz mov WORD PTR [edi+0x19b3c70c],cs
  4138f8:	sub    BYTE PTR [ebp-0x46],ah
  4138fb:	sub    ebp,DWORD PTR [ecx+0x45f9e16a]
  413901:	in     eax,0xcb
  413903:	mov    esi,0xf81e0a67
  413908:	or     ch,BYTE PTR [edx-0x461a5db8]
  41390e:	xor    al,0x41
  413910:	mov    ch,0x2f
  413912:	repz icebp 
  413914:	add    DWORD PTR [edx+eax*2],esp
  413917:	(bad)  [edx]
  413919:	outs   dx,BYTE PTR ds:[esi]
  41391a:	shl    BYTE PTR [esi-0x4416e6a0],0x6d
  413921:	jmp    0x51ce3521
  413926:	mul    ah
  413928:	aad    0xd8
  41392a:	repz mov ch,0x27
  41392d:	sbb    al,0xd9
  41392f:	push   esp
  413930:	jbe    0x41396c
  413932:	les    eax,FWORD PTR [esi+0x4d24bb22]
  413938:	(bad)  
  413939:	sbb    edx,edx
  41393b:	or     ecx,edi
  41393d:	inc    esp
  41393e:	jmp    0x4139bb
  413940:	or     al,0x71
  413942:	mov    bh,0xc7
  413944:	push   ecx
  413945:	lock jmp 0x3ead:0xfec9e109
  41394d:	and    edi,DWORD PTR ss:[edx-0x31eee2c0]
  413954:	pusha  
  413955:	mul    eax
  413957:	outs   dx,DWORD PTR ds:[esi]
  413958:	adc    BYTE PTR [esi+edx*2-0x6c0439f0],ah
  41395f:	jmp    0x141d:0xa777a21b
  413966:	push   esi
  413967:	(bad)  
  413968:	pop    esp
  413969:	outs   dx,DWORD PTR ds:[esi]
  41396a:	les    ebx,FWORD PTR [edi+edx*4+0x73ba02cf]
  413971:	mov    WORD PTR [esi],ss
  413973:	lahf   
  413974:	stos   DWORD PTR es:[edi],eax
  413975:	int    0x97
  413977:	loop   0x413956
  413979:	aam    0x75
  41397b:	aad    0x16
  41397d:	push   esp
  41397e:	int    0xf9
  413980:	jge    0x4139a7
  413982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413983:	je     0x4139e0
  413985:	leave  
  413986:	aam    0xd9
  413988:	xchg   edx,eax
  413989:	mov    bh,0xb2
  41398b:	pop    edx
  41398c:	or     eax,DWORD PTR [edi-0x7159bae4]
  413992:	jg     0x413a06
  413994:	sub    bl,cl
  413996:	std    
  413997:	sbb    eax,0xc92bad23
  41399c:	into   
  41399d:	scas   eax,DWORD PTR es:[edi]
  41399e:	mov    ebx,DWORD PTR [ebp+0x6682f29a]
  4139a4:	and    al,0x6d
  4139a6:	mov    cl,BYTE PTR [eax]
  4139a8:	jp     0x413975
  4139aa:	pop    DWORD PTR [edi]
  4139ac:	call   0x19865f90
  4139b1:	sub    bh,BYTE PTR [edx-0x2b]
  4139b4:	mov    dl,0xaa
  4139b6:	(bad)  
  4139b7:	push   esp
  4139b8:	dec    ebp
  4139b9:	and    ecx,edx
  4139bb:	shl    eax,1
  4139bd:	push   0x63
  4139bf:	add    ah,BYTE PTR [esi+0x8]
  4139c2:	dec    ebp
  4139c3:	inc    ecx
  4139c4:	outs   dx,BYTE PTR ds:[esi]
  4139c5:	xchg   esi,eax
  4139c6:	les    ebp,FWORD PTR [edi-0x70e227f2]
  4139cc:	jae    0x413952
  4139ce:	jno    0x4139c3
  4139d0:	sub    eax,0x7f3c1abc
  4139d5:	sub    DWORD PTR [ebp+0x26],edx
  4139d8:	mov    gs,ebp
  4139da:	nop
  4139db:	fisub  DWORD PTR [edi-0x5d1e9447]
  4139e1:	das    
  4139e2:	int    0xcb
  4139e4:	mov    ds:0xe7ba280,eax
  4139e9:	je     0x413994
  4139eb:	stc    
  4139ec:	aaa    
  4139ed:	loope  0x4139fd
  4139ef:	sbb    dl,ah
  4139f1:	stos   DWORD PTR es:[edi],eax
  4139f2:	jbe    0x413a32
  4139f4:	jecxz  0x4139a2
  4139f6:	adc    eax,0x3cd75262
  4139fb:	fcmovnb st,st(2)
  4139fd:	cmp    edi,DWORD PTR [ecx]
  4139ff:	je     0x413a6a
  413a01:	sub    eax,0xc9d7fc53
  413a06:	xchg   ebx,eax
  413a07:	sbb    ebp,DWORD PTR [edx-0x25]
  413a0a:	outs   dx,BYTE PTR ds:[esi]
  413a0b:	ror    BYTE PTR [edx-0x26],0xf1
  413a0f:	fidiv  WORD PTR [edx-0x1f]
  413a12:	loope  0x4139a4
  413a14:	mov    bh,0x31
  413a16:	pop    edx
  413a17:	test   DWORD PTR [eax+esi*1],0xd8550b2
  413a1e:	dec    esi
  413a1f:	pop    esp
  413a20:	scas   eax,DWORD PTR es:[edi]
  413a21:	add    esi,edi
  413a23:	mov    ecx,0x915f6c11
  413a28:	ins    DWORD PTR es:[edi],dx
  413a29:	not    DWORD PTR [ebx]
  413a2b:	out    0x78,al
  413a2d:	dec    edx
  413a2e:	leave  
  413a2f:	(bad)  
  413a30:	int    0x50
  413a32:	push   edx
  413a33:	sar    BYTE PTR [ebx+0x73ea9806],0xb
  413a3a:	jecxz  0x413a3e
  413a3c:	pop    ebp
  413a3d:	test   al,0xaa
  413a3f:	lds    ebx,FWORD PTR [edi]
  413a41:	aam    0x55
  413a43:	pop    ebp
  413a44:	mov    ebx,0xb4e13539
  413a49:	in     al,0x3b
  413a4b:	imul   esi,DWORD PTR [ebx],0x52
  413a4e:	mov    ah,BYTE PTR [eax]
  413a50:	stos   DWORD PTR es:[edi],eax
  413a51:	mov    bh,0x18
  413a53:	fmul   st,st(6)
  413a55:	push   esp
  413a56:	(bad)  
  413a57:	xchg   esi,eax
  413a58:	cmp    BYTE PTR [esi+eiz*4+0x1e],bl
  413a5c:	(bad)  
  413a5d:	leave  
  413a5e:	xchg   esi,eax
  413a5f:	(bad)  
  413a61:	xchg   ebx,eax
  413a62:	lods   al,BYTE PTR ds:[esi]
  413a63:	mov    ebp,?
  413a65:	leave  
  413a66:	(bad)  [esi]
  413a68:	push   cs
  413a69:	(bad)  
  413a6a:	out    dx,al
  413a6b:	and    dl,bh
  413a6d:	cmp    DWORD PTR [ebx-0x60],edx
  413a70:	sbb    ecx,edi
  413a72:	inc    ebx
  413a73:	pop    ecx
  413a74:	mov    ebx,ecx
  413a76:	call   0xc0e497b5
  413a7b:	or     dh,dl
  413a7d:	add    BYTE PTR ds:0x2047ede3,0xc
  413a84:	ret    
  413a85:	call   DWORD PTR [ecx+ebx*8]
  413a88:	imul   ebx,DWORD PTR [ecx],0xfcf2281a
  413a8e:	add    esi,0xce8dd595
  413a94:	shr    BYTE PTR [ecx+0x6fa78b56],0xbd
  413a9b:	mov    eax,0x27f8eacd
  413aa0:	jmp    0xebb4:0xd92b6506
  413aa7:	cdq    
  413aa8:	and    cl,BYTE PTR [eax]
  413aaa:	push   ds
  413aab:	leave  
  413aac:	scas   al,BYTE PTR es:[edi]
  413aad:	adc    cl,dl
  413aaf:	dec    esi
  413ab0:	mov    edi,0xe4fc3380
  413ab5:	jne    0x413b1a
  413ab7:	loop   0x413b0e
  413ab9:	fmul   DWORD PTR [ebx-0x61854833]
  413abf:	add    dl,BYTE PTR [ecx+0x56]
  413ac2:	and    al,0xef
  413ac4:	daa    
  413ac5:	and    DWORD PTR [edi],eax
  413ac7:	cld    
  413ac8:	in     al,dx
  413ac9:	out    0x79,eax
  413acb:	aam    0x20
  413acd:	fcomp  QWORD PTR [ebx+0x48]
  413ad0:	and    eax,0x8e979067
  413ad5:	mov    BYTE PTR [eax-0x16a953d5],cl
  413adb:	xor    ebp,DWORD PTR [edx-0x31cd959a]
  413ae1:	ins    BYTE PTR es:[edi],dx
  413ae2:	add    DWORD PTR [edi-0x5a],0x7599c6af
  413ae9:	xlat   BYTE PTR ds:[ebx]
  413aea:	dec    eax
  413aeb:	add    BYTE PTR [esi+0x42],bh
  413aee:	pop    edx
  413aef:	retf   0x10ac
  413af2:	add    al,0x30
  413af4:	or     ebx,DWORD PTR [edi]
  413af6:	jns    0x413b1f
  413af8:	push   esi
  413af9:	mov    ch,0x9a
  413afb:	jmp    0x119d54ae
  413b00:	xchg   ecx,eax
  413b01:	loopne 0x413ac5
  413b03:	mov    esi,0xb16cb562
  413b08:	loopne 0x413afc
  413b0a:	test   esp,esi
  413b0c:	aaa    
  413b0d:	pop    esp
  413b0e:	cmp    al,0x91
  413b10:	hlt    
  413b11:	test   BYTE PTR [edx],0x77
  413b14:	enter  0xe043,0x8
  413b18:	jle    0x413ac4
  413b1a:	xchg   edi,eax
  413b1b:	pop    esi
  413b1c:	mov    eax,ds:0x50736601
  413b21:	sbb    DWORD PTR [edx-0x1a],0xffffffc0
  413b25:	popa   
  413b26:	xor    eax,0xf6a52fe4
  413b2b:	dec    esi
  413b2c:	outs   dx,DWORD PTR ds:[esi]
  413b2d:	xchg   ebx,eax
  413b2e:	rcl    BYTE PTR [edx-0x53],1
  413b31:	xor    DWORD PTR [ecx],ebx
  413b33:	add    esp,DWORD PTR [ebx-0x4c546bba]
  413b39:	ficomp DWORD PTR [ecx]
  413b3b:	fcomp  DWORD PTR [edi-0x361fc40d]
  413b41:	cli    
  413b42:	cmovb  ecx,DWORD PTR [edx]
  413b45:	cmp    DWORD PTR [ecx],0x49
  413b48:	dec    ebp
  413b49:	or     DWORD PTR [esi+0x440e9145],esp
  413b4f:	rcl    DWORD PTR [edx],cl
  413b51:	jmp    0x413ae1
  413b53:	ror    BYTE PTR [esp+edx*2-0x24],0x31
  413b58:	out    dx,al
  413b59:	loopne 0x413b88
  413b5b:	out    dx,al
  413b5c:	jns    0x413b80
  413b5e:	inc    edx
  413b5f:	fnsave ds:0xff69218c
  413b65:	js     0x413b34
  413b67:	mov    ah,0x2e
  413b69:	ins    DWORD PTR es:[edi],dx
  413b6a:	cmp    DWORD PTR [eax-0x1b],eax
  413b6d:	ja     0x413bde
  413b6f:	pop    ecx
  413b70:	mov    ds,WORD PTR [edx+0x49]
  413b73:	sub    DWORD PTR [eax-0xc033c29],edx
  413b79:	jb     0x413afb
  413b7b:	jmp    edx
  413b7d:	inc    ebp
  413b7e:	cld    
  413b7f:	inc    BYTE PTR [ecx+0x16]
  413b82:	cmp    ecx,DWORD PTR [ecx]
  413b84:	pop    esp
  413b85:	aas    
  413b86:	add    DWORD PTR [eax],ecx
  413b88:	pop    ss
  413b89:	xor    al,0x35
  413b8b:	push   ebx
  413b8c:	pop    edx
  413b8d:	paddd  mm6,QWORD PTR [eax+0x68b64949]
  413b94:	mov    bl,0xe2
  413b96:	mov    bl,0xda
  413b98:	int3   
  413b99:	xchg   BYTE PTR [eax-0x5d7a872b],al
  413b9f:	stos   BYTE PTR es:[edi],al
  413ba0:	push   cs
  413ba1:	shr    BYTE PTR [ebx+0x12],1
  413ba4:	push   0x4f
  413ba6:	mov    ebp,0x5d3c55c4
  413bab:	push   es
  413bac:	adc    al,0x1d
  413bae:	add    cl,0x74
  413bb1:	ins    DWORD PTR es:[edi],dx
  413bb2:	jnp    0x413bd8
  413bb4:	cwde   
  413bb5:	fsub   QWORD PTR [ebp+0x1e]
  413bb8:	out    0xf3,eax
  413bba:	pop    ebp
  413bbb:	bound  ebx,QWORD PTR [esi+0x37]
  413bbe:	imul   ebp,DWORD PTR [edx+ecx*8+0x20f0b306],0x55
  413bc6:	fidiv  DWORD PTR [ebx]
  413bc8:	lods   eax,DWORD PTR ds:[esi]
  413bc9:	outs   dx,DWORD PTR ds:[esi]
  413bca:	mov    DWORD PTR [eax+0x41864fe3],ebp
  413bd0:	outs   dx,BYTE PTR ds:[esi]
  413bd1:	push   0xffffffd6
  413bd3:	mov    esp,0x5c3f3f3a
  413bd8:	enter  0x74f2,0xc
  413bdc:	les    ebx,FWORD PTR [ebx-0x43aa2784]
  413be2:	inc    eax
  413be3:	pop    esp
  413be4:	and    al,bh
  413be6:	mov    ecx,0x30261220
  413beb:	popa   
  413bec:	push   0xffffffc2
  413bee:	sub    DWORD PTR [edi+0x161987ec],edi
  413bf4:	and    BYTE PTR [esi-0x16],bh
  413bf7:	pop    ds
  413bf8:	cs sahf 
  413bfa:	jle    0x413c65
  413bfc:	mov    ds:0xa03373b0,al
  413c01:	and    dh,BYTE PTR [edx-0x14]
  413c04:	aad    0x29
  413c06:	push   edi
  413c07:	into   
  413c08:	add    ah,BYTE PTR [ecx-0x68]
  413c0b:	(bad)  
  413c0c:	hlt    
  413c0d:	(bad)  
  413c0e:	push   edx
  413c0f:	in     eax,0x65
  413c11:	adc    BYTE PTR [eax],bh
  413c13:	je     0x413c27
  413c15:	pop    eax
  413c16:	sub    BYTE PTR [edx+0x48664162],al
  413c1c:	jmp    FWORD PTR [edi]
  413c1e:	outs   dx,DWORD PTR ds:[esi]
  413c1f:	loopne 0x413c2a
  413c21:	dec    esi
  413c22:	xor    ebp,DWORD PTR [ebp+0xa98f4ab]
  413c28:	cwde   
  413c29:	pop    esi
  413c2a:	or     BYTE PTR [edx-0x6],bh
  413c2d:	sub    eax,0x889e33d7
  413c32:	fldenv [esi+0x39]
  413c35:	jg     0x413c73
  413c37:	mov    ecx,0x8fd8a9e1
  413c3c:	inc    ecx
  413c3d:	cli    
  413c3e:	or     al,0x6f
  413c40:	or     al,0xb2
  413c42:	dec    edi
  413c43:	and    ebp,esp
  413c45:	aam    0xb
  413c47:	mov    bl,0x54
  413c49:	repnz xor BYTE PTR [ecx+0x3f5cffa9],ah
  413c50:	add    edx,0x90f6515e
  413c56:	mov    al,ds:0xde44eca5
  413c5b:	add    al,0x71
  413c5d:	not    DWORD PTR [esp+eax*2]
  413c60:	mov    edi,DWORD PTR [ebx+0x748b8621]
  413c66:	fdiv   DWORD PTR [edx+ecx*4-0x6a]
  413c6a:	shl    BYTE PTR [eax],cl
  413c6c:	dec    edi
  413c6d:	mov    esi,0x1d720916
  413c72:	cmc    
  413c73:	scas   al,BYTE PTR es:[edi]
  413c74:	cmp    BYTE PTR [ebp+0x4f],bh
  413c77:	jbe    0x413c4b
  413c79:	sbb    eax,0x52f811c6
  413c7e:	repz call 0x5301:0x594ceed
  413c86:	ret    0xfa16
  413c89:	das    
  413c8a:	push   ebx
  413c8b:	in     al,0xef
  413c8d:	jge    0x413c38
  413c8f:	fwait
  413c90:	inc    ebp
  413c91:	jno    0x413c69
  413c93:	in     eax,dx
  413c94:	int3   
  413c95:	mov    ebx,0x679377c4
  413c9a:	es mov ebx,0x2d9ccb5c
  413ca0:	mov    ch,BYTE PTR [edx-0x2d895570]
  413ca6:	js     0x413c75
  413ca8:	sbb    cl,BYTE PTR [edi-0x627738b5]
  413cae:	xlat   BYTE PTR ds:[ebx]
  413caf:	xor    eax,0xf20f2743
  413cb4:	(bad)  
  413cb5:	fld    TBYTE PTR ds:0x5360d4b2
  413cbb:	das    
  413cbc:	mov    cl,BYTE PTR [ecx-0x2c50c725]
  413cc2:	cmp    eax,0x4ca4b5bd
  413cc8:	cmp    BYTE PTR [edx+0x1f9826c],al
  413cce:	add    eax,0xdbe05c5b
  413cd3:	cmc    
  413cd4:	add    al,ah
  413cd6:	iret   
  413cd7:	push   eax
  413cd8:	adc    al,0xa0
  413cda:	pop    ebp
  413cdb:	jmp    0x42a99d31
  413ce0:	fmul   QWORD PTR [esi-0x36]
  413ce3:	jno    0x413d16
  413ce5:	xchg   ecx,eax
  413ce6:	ds or  al,0x95
  413ce9:	popf   
  413cea:	mov    ebp,DWORD PTR [edx+ecx*1]
  413ced:	push   es
  413cee:	cdq    
  413cef:	(bad)  
  413cf0:	sub    al,0xa3
  413cf2:	mov    BYTE PTR [edi-0x2dd40f15],ch
  413cf8:	shl    DWORD PTR [esi-0x122a58eb],1
  413cfe:	push   0xf294005a
  413d03:	and    BYTE PTR [eax-0x3a],bl
  413d06:	cdq    
  413d07:	mov    bl,BYTE PTR [ecx]
  413d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0a:	xor    ch,BYTE PTR [esi-0x14b318b0]
  413d10:	or     al,0x3
  413d12:	in     eax,0x37
  413d14:	pop    ebp
  413d15:	(bad)  
  413d16:	rol    eax,cl
  413d18:	jnp    0x413d89
  413d1a:	add    BYTE PTR ds:0x429b07e1,cl
  413d20:	mov    esp,DWORD PTR [esp+ebp*4-0x24]
  413d24:	js     0x413cfd
  413d26:	ins    DWORD PTR es:[edi],dx
  413d27:	jae    0x413d6d
  413d29:	mov    esi,?
  413d2b:	and    al,0x7f
  413d2d:	nop
  413d2e:	stc    
  413d2f:	sahf   
  413d30:	xchg   ebp,eax
  413d31:	mov    eax,0x46282f4b
  413d36:	in     al,dx
  413d37:	xchg   DWORD PTR [edi-0x4d],ecx
  413d3a:	add    DWORD PTR ds:0xe97adfdb,ecx
  413d40:	add    al,0x51
  413d42:	mov    eax,0x6a23f069
  413d47:	push   ds
  413d48:	fldcw  WORD PTR [esi-0x45]
  413d4b:	jg     0x413d7a
  413d4d:	pop    edx
  413d4e:	fsub   st,st(7)
  413d50:	jns    0x413d63
  413d52:	mov    al,ds:0xb3ae7512
  413d57:	push   ebx
  413d58:	mov    ebx,0x1691a2dc
  413d5d:	cdq    
  413d5e:	clc    
  413d5f:	cwde   
  413d60:	add    DWORD PTR [ebx+0x5c35c438],0x4d501cbc
  413d6a:	xor    eax,0xfa0843eb
  413d6f:	push   cs
  413d70:	cmp    al,0x5a
  413d72:	scas   al,BYTE PTR es:[edi]
  413d73:	das    
  413d74:	or     BYTE PTR [eax],al
  413d76:	mov    bl,0x5f
  413d78:	out    dx,eax
  413d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d7a:	or     esp,ebx
  413d7c:	dec    DWORD PTR [ebx+0x3a]
  413d7f:	jl     0x413daa
  413d81:	and    BYTE PTR [edx-0x6f265661],ch
  413d87:	mov    eax,0x1c8314b2
  413d8c:	fimul  DWORD PTR [edx-0x6fcdf27]
  413d92:	loopne 0x413df8
  413d94:	jg     0x413daf
  413d96:	cmp    DWORD PTR [edi],0x2299243c
  413d9c:	lds    ebp,FWORD PTR [edx]
  413d9e:	jnp    0x413ddb
  413da0:	xchg   edx,eax
  413da1:	ss pop ebx
  413da3:	fs push eax
  413da5:	ss stos BYTE PTR es:[edi],al
  413da7:	imul   eax,edi,0x4601d0ee
  413dad:	or     bh,bl
  413daf:	lds    ebp,FWORD PTR [edx]
  413db1:	hlt    
  413db2:	pushf  
  413db3:	aaa    
  413db4:	ret    
  413db5:	mov    esp,DWORD PTR [ebx-0x1c7b3fe6]
  413dbb:	test   BYTE PTR [ebx+0x2c6945da],dl
  413dc1:	cdq    
  413dc2:	and    DWORD PTR [ebp+0x74],edi
  413dc5:	push   edx
  413dc6:	cmp    eax,0xd8db40d9
  413dcb:	inc    esp
  413dcc:	push   ecx
  413dcd:	fadd   QWORD PTR [ebp-0x414ad531]
  413dd3:	dec    edi
  413dd4:	pop    esp
  413dd5:	fldcw  WORD PTR [ebp+0x16]
  413dd8:	fcomp  DWORD PTR [ecx+0x66]
  413ddb:	mov    cl,0x7d
  413ddd:	retf   
  413dde:	xchg   esi,eax
  413ddf:	jnp    0x413de0
  413de1:	or     edx,DWORD PTR [edx]
  413de3:	fdivr  DWORD PTR [ecx]
  413de5:	and    cl,BYTE PTR [bp+si+0x20e0]
  413dea:	jns    0x413e51
  413dec:	sub    DWORD PTR [ecx],0xfffffff6
  413def:	mov    bl,0xa5
  413df1:	jp     0x413e21
  413df3:	retf   0xba25
  413df6:	pop    ecx
  413df7:	inc    ebx
  413df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df9:	xor    eax,0x509249d
  413dfe:	popf   
  413dff:	jge    0x413de7
  413e01:	je     0x413db0
  413e03:	arpl   WORD PTR [edx],sp
  413e05:	and    DWORD PTR [ecx+0x1a],ecx
  413e08:	fmul   DWORD PTR [edi+0x50]
  413e0b:	pextrw edx,mm5,0xe4
  413e0f:	or     DWORD PTR [ecx+ecx*4+0x35],edx
  413e13:	jmp    0x413d9b
  413e15:	div    BYTE PTR [ecx+0x710ca926]
  413e1b:	ins    DWORD PTR es:[edi],dx
  413e1c:	dec    esp
  413e1d:	mov    eax,ds:0xcbeb26bb
  413e22:	cmp    BYTE PTR [eax-0x4a4359c3],al
  413e28:	or     ebx,DWORD PTR [ebx+0x374e45bd]
  413e2e:	ds call 0x1dba:0x6cfabc5a
  413e36:	push   si
  413e38:	sub    dh,BYTE PTR [esi+0x27]
  413e3b:	retf   
  413e3c:	and    cl,BYTE PTR [ecx]
  413e3e:	dec    ebp
  413e3f:	push   ebx
  413e40:	jl     0x413ea5
  413e42:	jle    0x413e73
  413e44:	push   ss
  413e45:	adc    DWORD PTR [ebp-0x309feec4],ebx
  413e4b:	mov    ebp,0x6e08d5fc
  413e50:	push   ecx
  413e51:	inc    esp
  413e52:	push   ebx
  413e53:	lock ss inc esi
  413e56:	lahf   
  413e57:	mov    eax,ds:0x26e6466f
  413e5c:	pop    edi
  413e5d:	outs   dx,DWORD PTR ds:[esi]
  413e5e:	jo     0x413e3d
  413e60:	(bad)  
  413e61:	dec    ebx
  413e62:	push   di
  413e64:	jle    0x413e5b
  413e66:	jecxz  0x413eb2
  413e68:	fs jne 0x413ea3
  413e6b:	xchg   edx,eax
  413e6c:	push   ss
  413e6d:	test   eax,0x5d7eccdd
  413e72:	mov    al,0x7f
  413e74:	aam    0xcf
  413e76:	mov    al,0x3
  413e78:	rcr    DWORD PTR ds:0xfadf893,1
  413e7e:	jmp    0xf3a8b2bd
  413e83:	imul   ebx,DWORD PTR [ebp+0x44],0x165a7b9c
  413e8a:	imul   esp,DWORD PTR [ebp+0x54ebf477],0x15
  413e91:	xor    BYTE PTR [ecx+ebp*1],al
  413e94:	jmp    0x413e2d
  413e96:	ficomp WORD PTR [eax]
  413e98:	push   ebp
  413e99:	mov    cl,0xd6
  413e9b:	stos   DWORD PTR es:[edi],eax
  413e9c:	loopne 0x413f01
  413e9e:	jmp    0x413ef9
  413ea0:	lahf   
  413ea1:	sbb    esi,DWORD PTR ds:0xfbcdbeb5
  413ea7:	sub    esp,DWORD PTR [edi+0x36c34d20]
  413ead:	fld    DWORD PTR [eax]
  413eaf:	xlat   BYTE PTR ds:[ebx]
  413eb0:	int3   
  413eb1:	xchg   ebp,eax
  413eb2:	ficomp WORD PTR [eax-0x26]
  413eb5:	jge    0x413e4f
  413eb7:	adc    ebp,DWORD PTR ds:0x4de73331
  413ebd:	inc    ebp
  413ebe:	pushf  
  413ebf:	pop    eax
  413ec0:	retf   
  413ec1:	mov    DWORD PTR [ebp+0x3a],esp
  413ec4:	pushw  cs
  413ec6:	inc    eax
  413ec7:	cmc    
  413ec8:	sub    al,0x3
  413eca:	mov    esi,0x5cd3bcb2
  413ecf:	scas   al,BYTE PTR es:[edi]
  413ed0:	sti    
  413ed1:	cdq    
  413ed2:	nop
  413ed3:	aaa    
  413ed4:	test   eax,0x22357817
  413ed9:	pop    edx
  413edb:	or     DWORD PTR [ebx],esi
  413edd:	clc    
  413ede:	retf   0xf2c1
  413ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ee2:	shl    BYTE PTR [ecx],1
  413ee4:	sub    eax,0x9850fe3d
  413ee9:	jbe    0x413f2d
  413eeb:	pop    esp
  413eec:	adc    dl,bh
  413eee:	pop    ecx
  413eef:	stos   DWORD PTR es:[edi],eax
  413ef0:	push   edi
  413ef1:	jmp    0x413f17
  413ef3:	test   al,0x56
  413ef5:	adc    eax,eax
  413ef7:	aam    0x84
  413ef9:	xchg   edi,eax
  413efa:	retf   
  413efb:	push   edi
  413efc:	clc    
  413efd:	push   ecx
  413efe:	call   0x67ca1a00
  413f03:	rol    BYTE PTR [ebx+0x53e33f46],1
  413f09:	push   ss
  413f0a:	pop    esi
  413f0b:	cmp    al,0x99
  413f0d:	jne    0x413eba
  413f0f:	ficom  DWORD PTR [ebp-0x42]
  413f12:	mov    edi,0xc8fe92ec
  413f17:	(bad)  
  413f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f19:	adc    ebx,DWORD PTR [edx+eax*8+0x77a53fb]
  413f20:	jo     0x413eb3
  413f22:	out    dx,al
  413f23:	pop    ss
  413f24:	add    ch,al
  413f26:	fdivp  st(2),st
  413f28:	fidivr WORD PTR [ebx]
  413f2a:	cdq    
  413f2b:	(bad)  
  413f2c:	jae    0x413f31
  413f2e:	adc    DWORD PTR [ebx+0x20],esi
  413f31:	aad    0xe0
  413f33:	pop    esi
  413f34:	adc    BYTE PTR [edx],0x65
  413f37:	fstp   st(1)
  413f3a:	addr16 mov ds:0x4928,al
  413f3e:	mov    cs,esp
  413f40:	dec    edi
  413f41:	jae    0x413f5e
  413f43:	inc    eax
  413f44:	fild   WORD PTR [ecx+0x1d]
  413f47:	iret   
  413f48:	pushf  
  413f49:	sbb    BYTE PTR [eax-0x357f02cd],ah
  413f4f:	dec    ecx
  413f50:	retf   
  413f51:	sbb    BYTE PTR [esi],dh
  413f53:	idiv   DWORD PTR [ebx-0x1b]
  413f56:	add    DWORD PTR [ebx-0x26cc83ff],0xffffffb4
  413f5d:	jnp    0x413efe
  413f5f:	jmp    0x4e617ae6
  413f64:	xchg   esi,eax
  413f65:	inc    ebp
  413f66:	sub    eax,0xf681b8d6
  413f6b:	jno    0x413fd8
  413f6d:	push   edi
  413f6e:	lds    edx,FWORD PTR [eax]
  413f70:	jnp    0x413f38
  413f72:	jmp    0xe807:0xa42cc341
  413f79:	cdq    
  413f7a:	mov    bh,0x86
  413f7c:	xchg   ecx,eax
  413f7d:	xor    DWORD PTR [esi+0x27f144b7],ebp
  413f83:	mov    ds:0x655b7e3e,al
  413f88:	repnz push ss
  413f8a:	sub    eax,0x4bbca23f
  413f8f:	add    esp,eax
  413f91:	scas   al,BYTE PTR es:[edi]
  413f92:	push   ecx
  413f93:	or     eax,0xc6680178
  413f98:	inc    edx
  413f99:	dec    esp
  413f9a:	dec    eax
  413f9b:	push   esi
  413f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f9d:	std    
  413f9e:	enter  0x6353,0x8a
  413fa2:	add    DWORD PTR [ecx+0x65121c9d],ebx
  413fa8:	(bad)  
  413fa9:	mov    ds:0xd0b9034c,eax
  413fae:	pop    edx
  413faf:	(bad)  
  413fb0:	fild   QWORD PTR [eax+0x72]
  413fb3:	and    eax,0x6fea1d7b
  413fb8:	cmp    al,0x9b
  413fba:	mov    ebx,DWORD PTR [ecx+eiz*2-0x383e0d8f]
  413fc1:	icebp  
  413fc2:	adc    esi,edi
  413fc4:	push   esi
  413fc5:	mov    ah,0xe7
  413fc7:	ror    BYTE PTR [eax+0x71b4be6f],cl
  413fcd:	mov    ebp,0x96e58968
  413fd2:	sbb    al,0x61
  413fd4:	pop    ds
  413fd5:	and    edi,ecx
  413fd7:	loope  0x413f5d
  413fd9:	leave  
  413fda:	inc    ebp
  413fdb:	mov    al,ds:0xfbdf286f
  413fe0:	xchg   esi,eax
  413fe1:	sub    eax,0xf6672f45
  413fe6:	xchg   BYTE PTR [ecx+0x72],dl
  413fe9:	sub    eax,0xe489c4f1
  413fee:	push   edi
  413fef:	sbb    al,0x30
  413ff1:	push   ebp
  413ff2:	xor    esi,DWORD PTR [eax-0x10535860]
  413ff8:	cmp    DWORD PTR [ebx-0x337d0d5b],ebx
  413ffe:	push   edi
  413fff:	scas   eax,DWORD PTR es:[edi]
  414000:	mov    BYTE PTR [ecx],cl
  414002:	pop    ebx
  414003:	add    eax,0x18f77ff9
  414008:	jge    0x413fd6
  41400a:	push   eax
  41400b:	out    0x67,eax
  41400d:	push   esi
  41400e:	inc    eax
  41400f:	dec    esp
  414010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414011:	addr16 jb 0x414011
  414014:	call   0xcf0b3a41
  414019:	outs   dx,DWORD PTR ds:[esi]
  41401a:	out    dx,al
  41401b:	loopne 0x413fbf
  41401d:	aaa    
  41401e:	push   0xffffff8e
  414020:	daa    
  414021:	enter  0x1b49,0xd7
  414025:	mov    ah,0xc0
  414027:	push   edi
  414028:	jbe    0x413fe5
  41402a:	mov    esi,0x4e6810fb
  41402f:	or     BYTE PTR [esi],dl
  414031:	inc    eax
  414032:	test   eax,0xe18e3308
  414037:	xor    al,0x58
  414039:	(bad)  
  41403a:	cld    
  41403b:	test   BYTE PTR [ebx-0x6cb25aef],cl
  414041:	bound  edx,QWORD PTR [edi]
  414043:	push   edx
  414044:	add    DWORD PTR [ecx-0x49],0xeca936ce
  41404b:	std    
  41404c:	xchg   esi,eax
  41404d:	xchg   edx,eax
  41404e:	pxor   mm4,mm2
  414051:	sub    al,0xfa
  414053:	sbb    al,0x9d
  414055:	fbstp  TBYTE PTR [esi+0x26]
  414058:	nop
  414059:	jl     0x414003
  41405b:	mov    edx,0xdfca96ad
  414060:	cs xchg ebx,eax
  414062:	sbb    esi,DWORD PTR [eax+ecx*8]
  414065:	xor    eax,0xfc7d5b77
  41406a:	int    0x5e
  41406c:	or     bl,dh
  41406e:	mov    dh,0xd3
  414070:	out    dx,al
  414071:	cmp    al,0xed
  414073:	dec    esi
  414074:	stos   BYTE PTR es:[di],al
  414076:	jg     0x41406c
  414078:	lahf   
  414079:	mov    ebx,esp
  41407b:	inc    ecx
  41407c:	and    BYTE PTR [edx+ecx*1],dl
  41407f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414080:	(bad)  
  414081:	jecxz  0x414031
  414083:	mov    edi,0xf2905d1d
  414088:	and    dh,al
  41408a:	das    
  41408b:	cwde   
  41408c:	(bad)  
  41408d:	and    edx,esp
  41408f:	adc    ebp,DWORD PTR [eax]
  414091:	push   ss
  414092:	addr16 sub cl,dh
  414095:	cmp    DWORD PTR [ebp+edx*8+0x3a3255ba],0x30b971c8
  4140a0:	or     BYTE PTR [eax-0x47268e9],al
  4140a6:	popf   
  4140a7:	xchg   edi,eax
  4140a8:	(bad)  [edx+0x2d]
  4140ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ac:	push   edi
  4140ad:	dec    esi
  4140ae:	xor    al,0xf2
  4140b0:	dec    ebx
  4140b1:	mov    esp,0x5bc9f2ae
  4140b6:	xlat   BYTE PTR ds:[ebx]
  4140b7:	std    
  4140b8:	push   0xac660925
  4140bd:	jnp    0x414040
  4140bf:	push   edi
  4140c0:	push   ebp
  4140c1:	(bad)  
  4140c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140c3:	cs xchg esp,eax
  4140c5:	jmp    0x4f27:0x5b5f1a24
  4140cc:	mov    dl,0x8f
  4140ce:	ja     0x4140f4
  4140d0:	jbe    0x4140ae
  4140d2:	imul   eax,esp,0x3e
  4140d5:	mov    bh,0x28
  4140d7:	aad    0xaa
  4140d9:	push   0x18b567a8
  4140de:	push   ecx
  4140df:	push   eax
  4140e0:	jg     0x4140e3
  4140e2:	mov    es,WORD PTR [ecx-0x37]
  4140e5:	jecxz  0x4140ba
  4140e7:	xor    ah,al
  4140e9:	mov    edx,edx
  4140eb:	test   DWORD PTR [eax-0x5f],0x683adc1d
  4140f2:	icebp  
  4140f3:	(bad)  
  4140f4:	popf   
  4140f5:	mov    al,ds:0xa15c5be0
  4140fa:	ror    edi,1
  4140fc:	sahf   
  4140fd:	or     eax,DWORD PTR [eax-0x71]
  414100:	dec    ebp
  414101:	cmp    al,BYTE PTR [ebx+0x1e]
  414104:	add    ecx,DWORD PTR [esi+0x4f6e23bb]
  41410a:	fiadd  WORD PTR [ebp+0x499cd6a3]
  414110:	jp     0x414162
  414112:	mov    eax,0xf261bc18
  414117:	mov    eax,0x3dbe3e0e
  41411c:	test   al,0x60
  41411e:	pop    esi
  41411f:	push   eax
  414120:	mov    ebx,0x5381a52e
  414125:	in     al,dx
  414126:	xchg   DWORD PTR [ebp+0x5c827830],eax
  41412c:	popf   
  41412d:	lea    ebp,[edi+0x6a]
  414130:	(bad)  
  414131:	push   0xb0161ff5
  414136:	sub    al,0xd8
  414138:	pop    eax
  414139:	sti    
  41413a:	xchg   edx,eax
  41413b:	add    BYTE PTR [ebx],0x76
  41413e:	fs call 0xe4dd2c47
  414144:	pop    ss
  414145:	push   esp
  414146:	sbb    eax,0x9201d218
  41414b:	push   eax
  41414c:	out    0xbf,al
  41414e:	adc    DWORD PTR [edx],esp
  414150:	shl    BYTE PTR [eax],cl
  414152:	ret    0xe0db
  414155:	sub    DWORD PTR [ebp+0x2dd6700f],edi
  41415b:	push   ds
  41415c:	outs   dx,DWORD PTR ds:[esi]
  41415d:	je     0x4140e7
  41415f:	in     eax,0x72
  414161:	in     eax,dx
  414162:	lods   al,BYTE PTR ds:[esi]
  414163:	jno    0x41416b
  414165:	idiv   DWORD PTR ds:0x5cac53a4
  41416b:	sar    DWORD PTR [edi-0x65],0xc2
  41416f:	je     0x414139
  414171:	retf   
  414172:	pop    esi
  414173:	in     al,dx
  414174:	mov    eax,ds:0x96866d7c
  414179:	idiv   ebx
  41417b:	mov    ds:0x5a2c73f6,al
  414180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414181:	adc    eax,0x279fb307
  414186:	outs   dx,BYTE PTR ds:[esi]
  414187:	(bad)  
  414188:	das    
  414189:	jmp    0x414113
  41418b:	(bad)  
  41418c:	and    DWORD PTR [ecx],eax
  41418e:	fwait
  41418f:	dec    edx
  414190:	nop
  414191:	cmp    bh,BYTE PTR [edx]
  414193:	jmp    0x1e928e88
  414198:	jno    0x414208
  41419a:	inc    edi
  41419b:	mov    edi,0x4e80cabc
  4141a0:	sub    edx,DWORD PTR [edi+0x345a2d22]
  4141a6:	(bad)  [eax+0x7860d56b]
  4141ac:	test   al,0x50
  4141ae:	xor    DWORD PTR [ebx+edi*2-0x7c72f011],edi
  4141b5:	dec    eax
  4141b6:	test   BYTE PTR [edi],ch
  4141b8:	out    0x10,eax
  4141ba:	ret    
  4141bb:	inc    esp
  4141bc:	and    BYTE PTR [ebp+0x3525e6d7],bl
  4141c2:	mov    ebp,0xec97573b
  4141c7:	cmp    ecx,DWORD PTR [ebp-0x27f359c7]
  4141cd:	lock inc ecx
  4141cf:	cmp    al,0x46
  4141d1:	aad    0x6d
  4141d3:	fadd   st(0),st
  4141d5:	sbb    eax,0xc5c07478
  4141da:	mov    ch,0x80
  4141dc:	pop    es
  4141dd:	ds pop ebp
  4141df:	inc    eax
  4141e0:	mov    ah,0xa
  4141e2:	jb     0x414223
  4141e4:	daa    
  4141e5:	arpl   WORD PTR [eax-0x75],cx
  4141e8:	mov    esp,esi
  4141ea:	aad    0x6f
  4141ec:	or     DWORD PTR [eax+0x251b9df3],eax
  4141f2:	es or  esp,0x48
  4141f6:	pop    ebp
  4141f7:	xchg   ebp,eax
  4141f8:	add    eax,0xb6c1e5a4
  4141fd:	adc    al,0x7a
  4141ff:	sub    edi,edi
  414201:	add    edi,DWORD PTR [ebx]
  414203:	and    al,0xbc
  414205:	or     eax,0x32afc5b1
  41420a:	inc    edx
  41420b:	adc    ah,BYTE PTR [ecx-0x5f]
  41420e:	mov    bl,0xd7
  414210:	sbb    edi,DWORD PTR [edi-0x44]
  414213:	stc    
  414214:	jne    0x41425b
  414216:	int3   
  414217:	dec    ebx
  414218:	ja     0x414275
  41421a:	in     al,dx
  41421b:	xchg   DWORD PTR [eax-0x2abe5da1],edi
  414221:	mov    esi,0x3e3fe9e0
  414226:	and    dh,ah
  414228:	mov    esi,0x1c511bed
  41422d:	pop    ebp
  41422e:	jg     0x41427d
  414230:	stc    
  414231:	add    al,BYTE PTR [edi+ebx*4+0x62]
  414235:	das    
  414236:	cdq    
  414237:	fcmovne st,st(1)
  414239:	inc    ecx
  41423a:	mov    al,fs:0x1d531706
  414240:	scas   al,BYTE PTR es:[edi]
  414241:	push   es
  414242:	rcl    BYTE PTR [eax+0x3e945ff1],0x7c
  414249:	scas   al,BYTE PTR es:[edi]
  41424a:	call   0x7240a73c
  41424f:	js     0x41428b
  414251:	inc    ebx
  414252:	arpl   dx,bp
  414254:	push   eax
  414255:	and    BYTE PTR [edx],dh
  414257:	test   ecx,0x87444da5
  41425d:	(bad)  
  41425e:	pop    ecx
  41425f:	loopne 0x414278
  414261:	inc    eax
  414262:	cmp    DWORD PTR [ecx-0x5],edx
  414265:	imul   ebx,DWORD PTR [ebx-0x114aea90],0xfbc4313d
  41426f:	or     ebx,DWORD PTR [edx]
  414271:	sbb    esi,esi
  414273:	push   edi
  414274:	add    al,bh
  414276:	mov    ch,BYTE PTR [ecx]
  414278:	cwde   
  414279:	add    ecx,DWORD PTR [ebx-0x33]
  41427c:	sbb    ebp,DWORD PTR [edx+0x239fa5c1]
  414282:	sahf   
  414283:	in     eax,0x3b
  414285:	test   eax,0xca91757b
  41428a:	xchg   ecx,eax
  41428b:	(bad)  
  41428c:	enter  0xd6d6,0x52
  414290:	dec    ecx
  414291:	xchg   edi,eax
  414292:	adc    al,0x96
  414294:	mov    al,ds:0xbe82f466
  414299:	cmp    ebx,DWORD PTR [edi-0x68e60bde]
  41429f:	sar    bh,1
  4142a1:	push   ecx
  4142a2:	iret   
  4142a3:	dec    ebx
  4142a4:	pop    edi
  4142a5:	test   eax,0x1c2fcfbe
  4142aa:	dec    edx
  4142ab:	xor    dh,BYTE PTR [edi-0x16]
  4142ae:	(bad)  
  4142af:	jl     0x414309
  4142b1:	cmp    eax,0x281f3a36
  4142b6:	aas    
  4142b7:	or     DWORD PTR [edi+0x52898942],eax
  4142bd:	hlt    
  4142be:	jmp    0x4bca7e6d
  4142c3:	jle    0x4142aa
  4142c5:	mov    ebp,DWORD PTR [esi-0x59]
  4142c8:	dec    edx
  4142c9:	jnp    0x414298
  4142cb:	or     DWORD PTR [eax+0x5c],ecx
  4142ce:	push   ss
  4142cf:	hlt    
  4142d0:	xchg   edi,eax
  4142d1:	scas   al,BYTE PTR es:[edi]
  4142d2:	jg     0x414320
  4142d4:	cmp    DWORD PTR [edx],eax
  4142d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d7:	test   BYTE PTR [eax+esi*2-0x65e052da],al
  4142de:	outs   dx,BYTE PTR ds:[esi]
  4142df:	adc    dl,BYTE PTR [ebp+0x1db589ac]
  4142e5:	(bad)  
  4142e6:	push   0x7f579fff
  4142eb:	scas   eax,DWORD PTR es:[edi]
  4142ec:	movaps XMMWORD PTR ds:0x9b46c11d,xmm0
  4142f3:	clc    
  4142f4:	xchg   edi,eax
  4142f5:	les    di,DWORD PTR ds:[edi]
  4142f9:	outs   dx,BYTE PTR ds:[esi]
  4142fa:	mov    edi,0x43ed5cf2
  4142ff:	or     bl,al
  414301:	aad    0x9b
  414303:	out    0x82,eax
  414305:	push   ss
  414306:	jp     0x414361
  414308:	sahf   
  414309:	mov    al,ds:0x911e84c8
  41430e:	(bad)  
  41430f:	int    0x6b
  414311:	add    edx,DWORD PTR [ebx-0x7c]
  414314:	scas   al,BYTE PTR es:[edi]
  414315:	pop    es
  414316:	sar    esp,1
  414318:	sub    bl,cl
  41431a:	(bad)  
  41431b:	xlat   BYTE PTR ds:[ebx]
  41431c:	jb     0x41433e
  41431e:	jbe    0x4142fd
  414320:	push   ecx
  414321:	or     cl,BYTE PTR [edx]
  414323:	jle    0x41434b
  414325:	jecxz  0x414316
  414327:	std    
  414328:	in     al,0x5d
  41432a:	pop    ecx
  41432b:	dec    ecx
  41432c:	lock push esi
  41432e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41432f:	pop    edx
  414330:	sub    al,0x8a
  414332:	les    edx,FWORD PTR [ebx-0x5b]
  414335:	pop    ebx
  414336:	mov    ds:0x2d687a69,eax
  41433b:	sar    BYTE PTR [edx-0x6d],0x5
  41433f:	addr16 inc ebx
  414341:	ffreep st(0)
  414343:	test   eax,0x552e1358
  414348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414349:	data16 fcmovne st,st(0)
  41434c:	and    ecx,DWORD PTR [esi]
  41434e:	add    DWORD PTR ss:[eax-0x487bae58],0x214736a0
  414359:	pop    eax
  41435a:	icebp  
  41435b:	jle    0x41438d
  41435d:	(bad)  
  41435e:	jmp    0x41439b
  414360:	add    cl,bh
  414362:	(bad)  
  414363:	jmp    0xb257b9f6
  414368:	xor    ch,BYTE PTR [edi+0x3a]
  41436b:	sbb    ch,BYTE PTR [edi]
  41436d:	lahf   
  41436e:	mov    bh,0xb7
  414370:	addr16 push ecx
  414372:	js     0x414345
  414374:	and    al,0x73
  414376:	cmc    
  414377:	mov    ecx,0x3a5487cd
  41437c:	push   0x44
  41437e:	pop    ecx
  41437f:	push   ds
  414380:	test   BYTE PTR [ecx-0x71],dl
  414383:	sbb    eax,0x17dffc30
  414388:	xor    BYTE PTR ds:0x2cc2f3a0,dl
  41438e:	fs dec ecx
  414390:	cwde   
  414391:	adc    al,0xf2
  414393:	add    esp,DWORD PTR [ebx]
  414395:	aas    
  414396:	test   ebx,ecx
  414398:	fldcw  WORD PTR [edx+eiz*1+0x4a]
  41439c:	repz ret 0x8b7a
  4143a0:	bound  ebp,QWORD PTR [ecx]
  4143a2:	push   ecx
  4143a3:	xlat   BYTE PTR ds:[ebx]
  4143a4:	jg     0x414356
  4143a6:	aaa    
  4143a7:	out    dx,al
  4143a8:	push   edx
  4143a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143aa:	ror    ebx,0xd3
  4143ad:	inc    esi
  4143ae:	adc    dl,BYTE PTR [ebp+0x27]
  4143b1:	ss xchg ecx,eax
  4143b3:	mov    ah,0x28
  4143b5:	pusha  
  4143b6:	imul   BYTE PTR [esi-0x40]
  4143b9:	sub    edi,DWORD PTR [edi+ebp*4+0x0]
  4143bd:	cmp    ch,cl
  4143bf:	hlt    
  4143c0:	cli    
  4143c1:	cmc    
  4143c2:	dec    edi
  4143c3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4143c5:	ins    BYTE PTR es:[edi],dx
  4143c6:	jl     0x4143af
  4143c8:	test   eax,0x83ca593e
  4143cd:	adc    eax,0x81f7386b
  4143d2:	and    ah,ah
  4143d4:	and    ch,0xb
  4143d7:	sub    ah,BYTE PTR [ebx+edi*2+0x4fd1ebf0]
  4143de:	test   BYTE PTR ss:[edi+ebx*2+0x5a],bh
  4143e3:	xor    ebx,DWORD PTR ds:0xaab21ccd
  4143e9:	lea    ecx,[edi+0x5f]
  4143ec:	dec    ebp
  4143ed:	sub    eax,esi
  4143ef:	jnp    0x414382
  4143f1:	pop    ecx
  4143f2:	push   es
  4143f3:	push   ds
  4143f4:	sbb    esp,esi
  4143f6:	pop    edi
  4143f7:	in     eax,dx
  4143f8:	xchg   esi,eax
  4143f9:	adc    DWORD PTR [edi-0x25],ebx
  4143fc:	aad    0x2
  4143fe:	bound  edi,QWORD PTR [edi+0x7527757a]
  414404:	xor    ch,bh
  414406:	and    BYTE PTR [ebp+0x1b],ch
  414409:	cmp    DWORD PTR [ebx+0x71],esi
  41440c:	jns    0x4143ac
  41440e:	dec    ebp
  41440f:	(bad)
  414412:	mov    eax,ds:0x4554022d
  414417:	ret    
  414418:	je     0x41441e
  41441a:	cmp    bl,BYTE PTR [ebp-0x1e343e1b]
  414420:	dec    edx
  414421:	iret   
  414422:	dec    ebp
  414423:	pop    ecx
  414424:	out    0xe4,eax
  414426:	inc    edi
  414427:	aas    
  414428:	ret    
  414429:	into   
  41442a:	sub    dl,BYTE PTR [ebp+0x71]
  41442d:	push   esi
  41442e:	fistp  WORD PTR [eax]
  414430:	inc    edx
  414431:	sub    al,0x9e
  414433:	js     0x41441a
  414435:	sbb    al,0x6a
  414437:	(bad)  
  414438:	adc    ch,BYTE PTR [eax+edi*1]
  41443b:	ins    DWORD PTR es:[edi],dx
  41443c:	and    eax,0xaf297f7a
  414441:	add    al,0xe2
  414443:	pop    eax
  414444:	inc    ebp
  414445:	pop    edi
  414446:	ret    0xc06c
  414449:	cs xchg edx,eax
  41444b:	aam    0x8e
  41444d:	(bad)  
  41444e:	mov    bl,BYTE PTR [ebp-0x5ccd7472]
  414454:	std    
  414455:	clc    
  414456:	(bad)  
  414457:	sbb    ah,0x35
  41445a:	mov    ebx,0xcbcbfdf0
  41445f:	clc    
  414460:	int3   
  414461:	inc    edi
  414462:	inc    eax
  414463:	mov    esi,0x6c85311b
  414468:	push   ebx
  414469:	add    DWORD PTR [ebx],eax
  41446b:	out    0x21,al
  41446d:	jno    0x4144d3
  41446f:	pop    ds
  414470:	lock add eax,0x5dfe9515
  414476:	sub    ecx,edx
  414478:	adc    esi,DWORD PTR [ebp+0x28]
  41447b:	cld    
  41447c:	push   ebx
  41447d:	scas   eax,DWORD PTR es:[edi]
  41447e:	xor    BYTE PTR [esi-0x2a],0xa
  414482:	sub    BYTE PTR [ebx+0x65],0xe9
  414486:	add    edx,DWORD PTR [esi-0x12dd835d]
  41448c:	mov    dh,0xd5
  41448e:	dec    esi
  41448f:	or     DWORD PTR [esi],ebp
  414491:	cmp    DWORD PTR [ebx-0x5752f614],edi
  414497:	mov    bh,0xc2
  414499:	cdq    
  41449a:	sbb    dl,BYTE PTR [ebp-0x3b]
  41449d:	sti    
  41449e:	mov    ch,0x7b
  4144a0:	xchg   ecx,eax
  4144a1:	(bad)  
  4144a2:	xchg   edx,eax
  4144a3:	inc    ebx
  4144a4:	xchg   ebx,eax
  4144a5:	int    0x42
  4144a7:	jp     0x4144b5
  4144a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144aa:	pop    eax
  4144ab:	adc    BYTE PTR [esi-0x24],0xf0
  4144af:	mov    gs,WORD PTR [eax]
  4144b1:	sbb    eax,0xd24bebe1
  4144b6:	daa    
  4144b7:	cmp    BYTE PTR ds:0xc7ad4274,cl
  4144bd:	fisub  WORD PTR [ebx-0x1b]
  4144c0:	leave  
  4144c1:	mov    al,ds:0x11c09ade
  4144c6:	pop    eax
  4144c7:	jl     0x414453
  4144c9:	ins    BYTE PTR es:[edi],dx
  4144ca:	data16 fadd DWORD PTR [ebx]
  4144cd:	into   
  4144ce:	call   DWORD PTR [esi]
  4144d0:	mov    al,ds:0x35740ed6
  4144d5:	and    DWORD PTR [edx],0x7e98db68
  4144db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144dc:	iret   
  4144dd:	sub    eax,0x2abd827b
  4144e2:	cmp    bl,BYTE PTR [ebx]
  4144e4:	mov    bl,0xaa
  4144e6:	les    ebp,FWORD PTR [ebp+0x1cfd7470]
  4144ec:	sti    
  4144ed:	adc    al,0xe6
  4144ef:	adc    ecx,0x9c891d08
  4144f5:	pusha  
  4144f6:	lea    eax,[eax-0x26073ac7]
  4144fc:	xor    DWORD PTR [ebp-0x513181e3],eax
  414502:	mov    dl,0x33
  414504:	shl    BYTE PTR [eax-0x5],0x16
  414508:	mov    ds:0xceedc57b,al
  41450d:	cs mov ch,0xc5
  414510:	scas   eax,DWORD PTR es:[edi]
  414511:	iret   
  414512:	xor    BYTE PTR [eax+0x7d],ah
  414515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414516:	mov    dl,0xb8
  414518:	mov    cl,0xf4
  41451a:	loope  0x414522
  41451c:	push   eax
  41451d:	sub    al,0x19
  41451f:	(bad)  
  414520:	(bad)  
  414521:	test   ch,dl
  414523:	arpl   WORD PTR [ebp+ebx*8-0xe34c896],cx
  41452a:	mov    eax,ds:0x286104ec
  41452f:	xchg   ebx,eax
  414530:	add    al,0x80
  414532:	sbb    BYTE PTR [eax],al
  414534:	(bad)
  414537:	cld    
  414538:	mov    cl,cl
  41453a:	xor    ah,bh
  41453c:	pop    ds
  41453d:	inc    esp
  41453e:	adc    al,0xeb
  414540:	mov    BYTE PTR [eax-0x1c],al
  414543:	stc    
  414544:	sub    al,BYTE PTR [edx]
  414546:	jg     0x41452f
  414548:	mov    edx,0x332480f1
  41454d:	jle    0x4145c0
  41454f:	push   esp
  414550:	sti    
  414551:	iret   
  414552:	in     al,dx
  414553:	xchg   ebx,eax
  414554:	call   0x6077e9a
  414559:	sahf   
  41455a:	pop    edx
  41455b:	outs   dx,DWORD PTR ds:[esi]
  41455c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41455d:	and    ebx,DWORD PTR [ecx+esi*2]
  414560:	pop    ebp
  414561:	mov    esi,0x380cb8dc
  414566:	mov    al,ds:0xfeffa7ed
  41456b:	push   ebx
  41456c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456d:	(bad)  
  41456e:	mov    ds:0x5a51301f,al
  414573:	jmp    0x4145c7
  414575:	sub    eax,0xa395c3f5
  41457a:	jmp    0x69b5:0xec65277
  414581:	sbb    BYTE PTR [eax-0x8],0x71
  414585:	adc    eax,0x2699b4b8
  41458a:	cmp    DWORD PTR [esi+edx*2],ebx
  41458d:	jns    0x414533
  41458f:	push   edx
  414590:	js     0x4145ac
  414592:	ds mov ebp,0x29ba5afa
  414598:	jns    0x41460d
  41459a:	neg    BYTE PTR [esi-0x60]
  41459d:	cdq    
  41459e:	outs   dx,BYTE PTR ds:[esi]
  41459f:	in     al,dx
  4145a0:	mov    ebx,0xc145de11
  4145a5:	out    dx,eax
  4145a6:	scas   al,BYTE PTR es:[edi]
  4145a7:	into   
  4145a8:	cmp    cl,BYTE PTR [ecx+esi*8]
  4145ab:	scas   al,BYTE PTR es:[edi]
  4145ac:	and    esp,edi
  4145ae:	loope  0x414628
  4145b0:	inc    esi
  4145b1:	xchg   bl,ch
  4145b3:	je     0x414536
  4145b5:	adc    DWORD PTR [eax+ebp*4-0x19e55684],0xffffffe0
  4145bd:	pusha  
  4145be:	ins    DWORD PTR es:[edi],dx
  4145bf:	hlt    
  4145c0:	push   ds
  4145c1:	xchg   BYTE PTR [edi+esi*4+0x161d5eea],dh
  4145c8:	push   DWORD PTR ds:0xf3521988
  4145ce:	add    eax,0xe274efb1
  4145d3:	mov    eax,0x97b55bab
  4145d8:	jl     0x4145c1
  4145da:	cli    
  4145db:	ins    DWORD PTR es:[edi],dx
  4145dc:	pop    ds
  4145dd:	xchg   esp,eax
  4145de:	mov    DWORD PTR [esi-0x70],ebx
  4145e1:	call   0xa1b889c6
  4145e6:	iret   
  4145e7:	bnd jae 0x4145a2
  4145ea:	adc    BYTE PTR [edx],ch
  4145ec:	movd   DWORD PTR [edx+0x35],mm3
  4145f0:	int    0x14
  4145f2:	fsub   QWORD PTR [ebp+0x78]
  4145f5:	xor    DWORD PTR [eax+esi*2],eax
  4145f8:	nop    ebp
  4145fb:	push   ebp
  4145fc:	das    
  4145fd:	in     al,dx
  4145fe:	mov    ecx,0x2a4fa2dd
  414603:	mov    al,0x34
  414605:	xchg   DWORD PTR [ebx+0x532c8ba0],esi
  41460b:	mov    al,ds:0xe35a0e81
  414610:	adc    BYTE PTR [esi],al
  414612:	sbb    DWORD PTR [esi+0x40859e6e],edi
  414618:	sub    DWORD PTR [ebx],0xf89c0c4e
  41461e:	scas   al,BYTE PTR es:[edi]
  41461f:	inc    edi
  414620:	mov    ch,0xec
  414622:	xchg   ebx,eax
  414623:	push   esi
  414624:	pop    esi
  414625:	retf   
  414626:	fimul  DWORD PTR [ebx+esi*4+0x4893ceab]
  41462d:	jmp    0x414653
  41462f:	xlat   BYTE PTR ds:[ebx]
  414630:	xchg   ebp,eax
  414631:	int3   
  414632:	jp     0x4145d6
  414634:	push   ebp
  414635:	mov    BYTE PTR [eax+eax*1],al
  414638:	fimul  WORD PTR [edi]
  41463a:	pop    edx
  41463b:	bound  esp,QWORD PTR [ebx-0x4]
  41463e:	sub    DWORD PTR [edi+0x49],ebx
  414641:	das    
  414642:	lahf   
  414643:	dec    eax
  414644:	or     BYTE PTR [eax],dl
  414646:	xor    BYTE PTR [ecx+0x1d],al
  414649:	jno    0x4146b4
  41464b:	repz je 0x414669
  41464e:	in     al,0x73
  414650:	inc    BYTE PTR [edi+0x5d]
  414653:	fcmovnb st,st(6)
  414655:	add    BYTE PTR [ecx-0x7490c25b],ch
  41465b:	jo     0x414652
  41465d:	shl    BYTE PTR [ebx+0x6a295f40],1
  414663:	push   ebp
  414664:	mov    ecx,DWORD PTR [ecx+0x4]
  414667:	mov    bh,0x4e
  414669:	push   cs
  41466a:	jno    0x4146c8
  41466c:	rcr    DWORD PTR [ebx+0x70],1
  41466f:	sub    eax,0xed473ac9
  414674:	xchg   edx,eax
  414675:	and    esp,ebp
  414677:	out    0x83,eax
  414679:	fcom   DWORD PTR [esi-0x7366cb2a]
  41467f:	push   ebx
  414680:	ror    edx,1
  414682:	mov    esi,gs
  414684:	xchg   ebp,eax
  414685:	adc    BYTE PTR [esi+edx*1],dh
  414688:	test   al,0xa4
  41468a:	test   eax,0x11f7bce4
  41468f:	cmp    ch,ch
  414691:	cwde   
  414692:	jo     0x41467f
  414694:	xor    BYTE PTR [ebp-0x6a8bd0d7],al
  41469a:	test   al,0x97
  41469c:	mov    es,WORD PTR [eax+0x52e72c0f]
  4146a2:	xchg   DWORD PTR [edi],esp
  4146a4:	and    ch,bh
  4146a6:	sub    dl,BYTE PTR [edi]
  4146a8:	sar    BYTE PTR [ebx+0x6d],0xc9
  4146ac:	in     al,0x19
  4146ae:	jae    0x4146b1
  4146b0:	out    dx,eax
  4146b1:	repnz (bad) 
  4146b4:	sbb    dh,BYTE PTR ds:0x789d347e
  4146ba:	dec    esp
  4146bb:	jno    0x41473c
  4146bd:	jno    0x414736
  4146bf:	(bad)  
  4146c0:	enter  0x6f5c,0x4a
  4146c4:	int    0xf5
  4146c6:	mov    ds:0x261a9a0b,al
  4146cb:	adc    ecx,ebp
  4146cd:	icebp  
  4146ce:	and    eax,0x7f0b4ac8
  4146d3:	fist   WORD PTR [edx+ecx*8]
  4146d6:	pop    ecx
  4146d7:	js     0x4146ef
  4146d9:	adc    BYTE PTR [eax+0x120adf61],dl
  4146df:	repnz and ecx,ebx
  4146e2:	cmp    DWORD PTR [edi+eiz*4-0x2f],edx
  4146e6:	dec    eax
  4146e7:	mov    WORD PTR [edx+0x1475e83c],es
  4146ed:	jo     0x414722
  4146ef:	mov    ds:0xecb05288,al
  4146f4:	in     al,dx
  4146f5:	sbb    edx,DWORD PTR [edx-0x4c140cfe]
  4146fb:	and    DWORD PTR [eax-0x19],eax
  4146fe:	lods   al,BYTE PTR ds:[esi]
  4146ff:	in     eax,0x1b
  414701:	stos   BYTE PTR es:[edi],al
  414702:	stos   BYTE PTR es:[edi],al
  414703:	jne    0x41470c
  414705:	mov    edx,?
  414707:	add    bl,BYTE PTR [edx-0x80]
  41470a:	test   al,0xee
  41470c:	ficom  WORD PTR [edi+0x7b]
  41470f:	hlt    
  414710:	push   esp
  414711:	inc    ebp
  414712:	jmp    0x6686:0xa3fd2dd5
  414719:	loope  0x4146e4
  41471b:	int3   
  41471c:	es dec edi
  41471e:	sub    ecx,DWORD PTR [ecx]
  414720:	add    edx,DWORD PTR [ecx]
  414722:	(bad)  
  414724:	ror    cl,0x2a
  414727:	sbb    dl,BYTE PTR [eax+0x7e907a00]
  41472d:	rcl    BYTE PTR [ebp-0x10],cl
  414730:	(bad)  
  414731:	jmp    0x4146e5
  414733:	lea    esp,[ecx]
  414735:	(bad)  
  414736:	imul   eax,DWORD PTR [ebp+0x0],0x7d
  41473a:	gs dec ebp
  41473c:	lock popa 
  41473e:	les    eax,FWORD PTR [edi-0x6d]
  414741:	aad    0x30
  414743:	xchg   DWORD PTR [edi-0x4ec69014],edx
  414749:	mov    ds:0x2f030bca,al
  41474e:	(bad)  
  41474f:	imul   eax,DWORD PTR [eax],0xffffffc8
  414752:	jo     0x41470c
  414754:	jmp    0x25cdb1c7
  414759:	dec    DWORD PTR [ebp-0x6e924119]
  41475f:	xor    cl,bh
  414761:	add    eax,0x5eca3d73
  414766:	and    al,0x2
  414768:	int3   
  414769:	ss mov edx,0x641097aa
  41476f:	lds    eax,FWORD PTR [ebx-0x5c]
  414772:	mov    dl,0xa3
  414774:	add    DWORD PTR [ecx+0x62df0dc9],ecx
  41477a:	add    edx,DWORD PTR [edx]
  41477c:	and    al,0x93
  41477e:	sbb    dh,BYTE PTR [edx]
  414780:	addr16 fcomi st,st(6)
  414783:	xchg   edi,eax
  414784:	dec    esi
  414785:	outs   dx,DWORD PTR ds:[esi]
  414786:	mov    al,ds:0x5fe1ffa4
  41478b:	push   ebp
  41478c:	pop    ebp
  41478d:	ins    DWORD PTR es:[edi],dx
  41478e:	mov    ebx,0x6bcfbd64
  414793:	ins    BYTE PTR es:[edi],dx
  414794:	or     ecx,DWORD PTR [esi]
  414796:	ja     0x414796
  414798:	mov    eax,0xc844467e
  41479d:	and    al,0xde
  41479f:	xchg   ecx,eax
  4147a0:	test   eax,0x7e14f2cd
  4147a5:	mul    DWORD PTR gs:[esi-0x692ee601]
  4147ac:	add    cl,BYTE PTR [edi]
  4147ae:	popf   
  4147af:	aas    
  4147b0:	xor    DWORD PTR [ecx],0x54a67a2b
  4147b6:	ins    DWORD PTR es:[edi],dx
  4147b7:	jg     0x414772
  4147b9:	test   eax,0x3cf02a8e
  4147be:	xor    edi,DWORD PTR [esi-0xfb3ccae]
  4147c4:	mov    dh,0xe3
  4147c6:	mov    dl,0xb3
  4147c8:	das    
  4147c9:	add    eax,0xc7aa02a2
  4147ce:	cmp    dh,bh
  4147d0:	mov    dl,0x73
  4147d2:	je     0x414773
  4147d4:	adc    al,0x2b
  4147d6:	inc    ecx
  4147d7:	imul   edi,edi,0xb5431d37
  4147dd:	inc    eax
  4147de:	leave  
  4147df:	mov    esi,0xd8d54101
  4147e4:	fistp  DWORD PTR [edi+0x56]
  4147e7:	clc    
  4147e8:	pop    esp
  4147e9:	jae    0x414792
  4147eb:	shr    BYTE PTR [ebx+edi*4],cl
  4147ee:	sbb    ch,ch
  4147f0:	push   esp
  4147f1:	ds dec esi
  4147f3:	int    0xa3
  4147f5:	mov    edi,0x382668bd
  4147fa:	inc    eax
  4147fb:	inc    edi
  4147fc:	mov    esi,0x84c012a5
  414801:	stos   BYTE PTR es:[edi],al
  414802:	mov    WORD PTR [ecx],es
  414804:	pop    ebp
  414805:	stc    
  414806:	fdiv   QWORD PTR [edi]
  414808:	repnz push 0x36dd5f45
  41480e:	adc    bl,ch
  414810:	test   DWORD PTR [eax+0x1d],ecx
  414813:	icebp  
  414814:	outs   dx,DWORD PTR ds:[esi]
  414815:	shr    DWORD PTR [eax],0xce
  414818:	dec    eax
  414819:	jmp    0x41480a
  41481b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41481d:	pop    ebp
  41481e:	push   ebp
  41481f:	inc    ebx
  414820:	(bad)  
  414821:	or     ch,ah
  414823:	in     eax,dx
  414824:	add    BYTE PTR ds:0x5141e122,ah
  41482a:	fisttp DWORD PTR fs:[ebp+0x2266da6]
  414831:	mov    edx,DWORD PTR [esi]
  414833:	pop    ds
  414834:	inc    eax
  414835:	xchg   DWORD PTR [esi-0x43],edx
  414838:	push   cs
  414839:	mov    eax,ds:0x3d47b3a7
  41483e:	xor    BYTE PTR [edi+ecx*1+0x4e1b3013],dh
  414845:	mov    edi,0x8091362d
  41484a:	dec    ebp
  41484b:	lahf   
  41484c:	mov    bh,BYTE PTR [esi]
  41484e:	sbb    DWORD PTR [edx+0x35167a27],ebx
  414854:	pushf  
  414855:	fisttp QWORD PTR [ecx-0x38]
  414858:	mov    fs,WORD PTR [edi]
  41485a:	repnz xor al,0x39
  41485d:	leave  
  41485e:	in     al,dx
  41485f:	pop    edx
  414860:	loope  0x4148c8
  414862:	push   cs
  414863:	and    esi,DWORD PTR ds:0x1ecbd26e
  414869:	sub    DWORD PTR [edx],esp
  41486b:	inc    esi
  41486c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41486d:	mov    bl,0x3b
  41486f:	sub    edx,edi
  414871:	mov    BYTE PTR [ebx],al
  414873:	mov    ch,0xf3
  414875:	and    al,0x20
  414877:	mov    cl,BYTE PTR [edi+0x2a0d05d8]
  41487d:	xchg   DWORD PTR [edx+0x13],eax
  414880:	add    DWORD PTR [esi],esp
  414882:	mov    ecx,0x6af51dba
  414887:	jle    0x4148fc
  414889:	arpl   si,sp
  41488b:	aaa    
  41488c:	scas   eax,DWORD PTR es:[edi]
  41488d:	(bad)  
  41488e:	stc    
  41488f:	pop    ds
  414890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414891:	mov    esi,0xcc5133fe
  414896:	xchg   ebx,eax
  414897:	or     dl,BYTE PTR [eax-0x3d]
  41489a:	js     0x414887
  41489c:	ficomp WORD PTR [esi]
  41489e:	repnz stc 
  4148a0:	xchg   ebx,eax
  4148a1:	es lahf 
  4148a3:	loop   0x41486d
  4148a5:	xor    DWORD PTR [edi+ecx*1-0x4c],esp
  4148a9:	mov    BYTE PTR [eax+edi*1-0x25],bh
  4148ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ae:	push   fs
  4148b0:	ficom  WORD PTR [edi+0x7d]
  4148b3:	lahf   
  4148b4:	mov    edx,0xe890353f
  4148b9:	repnz scas eax,DWORD PTR es:[edi]
  4148bb:	and    BYTE PTR [eax-0x1d],0x8d
  4148bf:	jle    0x414869
  4148c1:	pop    es
  4148c2:	ror    DWORD PTR [ebp-0x7f],1
  4148c5:	add    BYTE PTR [ebx-0x1e1b237e],al
  4148cb:	into   
  4148cc:	icebp  
  4148cd:	mov    ecx,0x45968feb
  4148d2:	dec    edi
  4148d3:	mov    al,ds:0xd9a08c73
  4148d8:	and    eax,0x6359a552
  4148dd:	cmp    al,BYTE PTR [edx+0x2e]
  4148e0:	or     eax,0xfadaa3bd
  4148e5:	in     al,dx
  4148e6:	jecxz  0x414905
  4148e8:	out    dx,eax
  4148e9:	ins    BYTE PTR es:[edi],dx
  4148ea:	sahf   
  4148eb:	dec    ecx
  4148ec:	pop    ebp
  4148ed:	fwait
  4148ee:	call   0xd44f4d76
  4148f3:	xchg   DWORD PTR cs:[esi+0x6601a7f3],edi
  4148fa:	jmp    0x56ef:0x56529955
  414901:	fisub  WORD PTR [edx]
  414903:	xor    eax,DWORD PTR [ebx-0x5d]
  414906:	pop    es
  414907:	lea    ecx,[edx]
  414909:	push   0xadcbe87c
  41490e:	sahf   
  41490f:	fdiv   st,st(7)
  414911:	das    
  414912:	lock pop ebx
  414914:	sub    DWORD PTR [ecx-0x171a1338],edx
  41491a:	nop
  41491b:	mov    bl,0x8f
  41491d:	test   DWORD PTR [esi-0x11d06e9c],0xfedce9b6
  414927:	inc    esi
  414928:	stos   DWORD PTR es:[edi],eax
  414929:	outs   dx,DWORD PTR ds:[esi]
  41492a:	inc    esp
  41492b:	call   0x5a7270b7
  414930:	sbb    ebp,esi
  414932:	push   0x41
  414934:	ins    DWORD PTR es:[edi],dx
  414935:	pop    es
  414936:	(bad)  
  414937:	mov    esp,0x839d469a
  41493c:	paddusb mm6,QWORD PTR [ebx+0x25]
  414940:	mov    al,0x8b
  414942:	mov    dh,BYTE PTR [edi]
  414944:	pop    ss
  414945:	icebp  
  414946:	dec    edi
  414947:	mov    al,0x3b
  414949:	add    DWORD PTR [eax-0x135f9738],esi
  41494f:	bound  di,DWORD PTR [edi]
  414952:	adc    eax,0x63e7dcdc
  414957:	xchg   DWORD PTR [edx],ebx
  414959:	pop    DWORD PTR [esi]
  41495b:	push   edi
  41495c:	jl     0x41496f
  41495e:	push   0xffffff86
  414960:	mov    al,0x87
  414962:	add    ah,BYTE PTR [eax+0x2555d1a5]
  414968:	or     ebp,edi
  41496a:	out    dx,eax
  41496b:	mov    ebx,0x65594bb4
  414970:	mov    dl,0xf4
  414972:	jb     0x4148f4
  414974:	sbb    ebx,edx
  414976:	(bad)  
  414978:	dec    esi
  414979:	mov    cl,0x41
  41497b:	out    dx,eax
  41497c:	sar    BYTE PTR [ecx],cl
  41497e:	add    al,ch
  414980:	inc    esp
  414981:	mov    dh,0x26
  414983:	arpl   WORD PTR [ebx],di
  414985:	jmp    0x9377c5da
  41498a:	mov    ds:0x780e0138,al
  41498f:	mov    esp,DWORD PTR [edi]
  414991:	lds    esp,FWORD PTR [edx-0x61]
  414994:	or     eax,0x6daf0c4b
  414999:	(bad)  
  41499b:	or     eax,DWORD PTR [eax]
  41499d:	add    ebx,eax
  41499f:	push   cs
  4149a0:	push   edx
  4149a1:	scas   al,BYTE PTR es:[edi]
  4149a2:	xlat   BYTE PTR ds:[ebx]
  4149a3:	or     bh,BYTE PTR [edi-0x35d7de62]
  4149a9:	push   ebx
  4149aa:	in     eax,dx
  4149ab:	mov    esi,0x1b1d24e9
  4149b0:	jbe    0x414966
  4149b2:	push   esp
  4149b3:	add    bh,cl
  4149b5:	mov    ebx,0x152bb35
  4149ba:	imul   BYTE PTR [ebx+0xa]
  4149bd:	ins    DWORD PTR es:[edi],dx
  4149be:	mov    ds,WORD PTR [ebx+0xe9c11ac]
  4149c4:	add    al,0xbc
  4149c6:	sub    BYTE PTR [eax],0x62
  4149c9:	imul   esi,DWORD PTR [ecx+0x6bcaec14],0xb6679851
  4149d3:	mov    edx,DWORD PTR [ebx]
  4149d5:	and    eax,esi
  4149d7:	push   ecx
  4149d8:	and    al,0xa0
  4149da:	mov    cl,0xdb
  4149dc:	adc    esi,eax
  4149de:	(bad)  
  4149df:	jne    0x414a50
  4149e1:	fwait
  4149e2:	add    BYTE PTR [ecx+0x5f81f079],bh
  4149e8:	or     ebp,ecx
  4149ea:	jb     0x4149c2
  4149ec:	lock adc esi,edi
  4149ef:	xor    DWORD PTR [eiz*4-0x43ff6534],ecx
  4149f6:	add    eax,0xbea1c14d
  4149fb:	adc    al,0x0
  4149fd:	pushf  
  4149fe:	aaa    
  4149ff:	jno    0x414a6d
  414a01:	shl    ebx,cl
  414a03:	inc    edx
  414a04:	jnp    0x414a2a
  414a06:	mov    dh,0x93
  414a08:	inc    edi
  414a09:	xor    al,0x56
  414a0b:	mov    DWORD PTR [ebp-0x6c2ca37a],edx
  414a11:	iret   
  414a12:	mov    ah,0x2a
  414a14:	pushf  
  414a15:	push   ds
  414a16:	add    bl,al
  414a18:	dec    edi
  414a19:	mov    WORD PTR [edx+0x72],?
  414a1c:	and    bh,BYTE PTR [edi]
  414a1e:	js     0x4149fa
  414a20:	rcl    BYTE PTR [ebp+0x71],cl
  414a23:	retf   
  414a24:	call   0x53ac:0x6a7d438f
  414a2b:	loope  0x414a84
  414a2d:	add    ebp,ebp
  414a2f:	fbld   TBYTE PTR ds:0xe8b2f371
  414a35:	mov    ds:0xa7ff1a53,eax
  414a3a:	imul   edx,edi,0x20fc115
  414a40:	rol    BYTE PTR [eax+ebx*2-0x48fc0019],1
  414a47:	mov    dl,0x3d
  414a49:	inc    edx
  414a4a:	cdq    
  414a4b:	cmp    DWORD PTR [ebp+0x1f17d7a9],edx
  414a51:	into   
  414a52:	retf   
  414a53:	mov    esi,0x41d0168b
  414a58:	lock iret 
  414a5a:	lea    esi,[edi]
  414a5c:	xchg   edi,eax
  414a5d:	test   BYTE PTR [ecx+0x2d],ch
  414a60:	dec    ecx
  414a61:	sbb    eax,0xbcf3390
  414a66:	hlt    
  414a67:	lea    sp,[edx+edi*4]
  414a6b:	cmp    al,0x7e
  414a6d:	test   al,0x94
  414a6f:	popf   
  414a70:	gs daa 
  414a72:	jle    0x414aba
  414a74:	(bad)  
  414a75:	div    DWORD PTR [ecx-0x467e704a]
  414a7b:	mov    ds:0xe0d20e5a,eax
  414a80:	xor    DWORD PTR [ebp+0x4],esp
  414a83:	jnp    0x414b04
  414a85:	jmp    0x85e5223f
  414a8a:	pop    esp
  414a8b:	mov    al,ds:0x7eb86fde
  414a90:	push   esp
  414a91:	push   edi
  414a92:	pop    edx
  414a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a94:	js     0x414b0d
  414a96:	cld    
  414a97:	cdq    
  414a98:	mov    al,ds:0x8a52fac5
  414a9d:	pushf  
  414a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9f:	imul   esi,DWORD PTR [edx-0x7b77780f],0xfffffffb
  414aa6:	neg    BYTE PTR [eax+0x406c6db0]
  414aac:	std    
  414aad:	xchg   esp,ebx
  414aaf:	mov    esp,0x32f43cc4
  414ab4:	adc    eax,0x1a0db108
  414ab9:	pop    ss
  414aba:	xchg   ebp,eax
  414abb:	xor    eax,0xc6ca82e0
  414ac0:	pop    ebp
  414ac1:	stc    
  414ac2:	mov    ebp,0x8493bf1
  414ac7:	lods   al,BYTE PTR ds:[esi]
  414ac8:	outs   dx,BYTE PTR ds:[esi]
  414ac9:	ins    WORD PTR es:[edi],dx
  414acb:	popf   
  414acc:	sti    
  414acd:	mov    ebx,ecx
  414acf:	sbb    edi,DWORD PTR [ecx+0x5a]
  414ad2:	xlat   BYTE PTR ds:[ebx]
  414ad3:	cdq    
  414ad4:	push   eax
  414ad5:	shr    bh,1
  414ad7:	inc    ebx
  414ad8:	sbb    DWORD PTR [edx],ebx
  414ada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414adb:	push   esi
  414adc:	in     al,dx
  414add:	adc    eax,0xc0179f6
  414ae2:	outs   dx,BYTE PTR ds:[esi]
  414ae3:	into   
  414ae4:	outs   dx,BYTE PTR ds:[esi]
  414ae5:	mov    esp,0x14aaef6a
  414aea:	aas    
  414aeb:	std    
  414aec:	add    BYTE PTR [edi-0x1a],al
  414aef:	add    dl,BYTE PTR [edx]
  414af1:	pop    edx
  414af2:	mov    ah,al
  414af4:	mov    ch,0x62
  414af6:	add    ah,BYTE PTR [esi+0x5c1ee8c8]
  414afc:	jno    0x414b46
  414afe:	mov    cl,0x1
  414b00:	or     eax,0x25d85e
  414b05:	test   BYTE PTR [eax-0x30],cl
  414b08:	jmp    0xf8cc0603
  414b0d:	in     al,0x18
  414b0f:	lods   eax,DWORD PTR ds:[esi]
  414b10:	adc    eax,eax
  414b12:	sbb    al,0xab
  414b14:	fnsave [edx+0x1f136a7]
  414b1a:	nop
  414b1b:	mov    ds,ebp
  414b1d:	or     eax,0x44ec197d
  414b22:	push   ebp
  414b23:	popf   
  414b24:	in     al,dx
  414b25:	stc    
  414b26:	add    bh,BYTE PTR [ebp+0x71d79871]
  414b2c:	rcr    DWORD PTR ds:0x4d6ca184,1
  414b32:	adc    ebp,DWORD PTR [esi-0x4b]
  414b35:	adc    BYTE PTR [edi*8-0x55d4f09a],0x68
  414b3d:	mov    es,WORD PTR [ecx]
  414b3f:	xchg   ebx,eax
  414b40:	xchg   ebp,eax
  414b41:	xchg   esp,eax
  414b42:	out    dx,eax
  414b43:	xchg   ecx,eax
  414b44:	jo     0x414b41
  414b46:	add    dl,BYTE PTR [esi-0x47]
  414b49:	std    
  414b4a:	cpuid  
  414b4c:	shl    BYTE PTR [edi],cl
  414b4e:	jmp    0x414b01
  414b50:	repz dec eax
  414b52:	push   0x2c
  414b54:	xor    edx,DWORD PTR [ecx-0x35fddbb4]
  414b5a:	or     eax,0x7b3572e5
  414b5f:	jbe    0x414b3f
  414b61:	jno    0x414bd0
  414b63:	cmp    ebx,DWORD PTR [edx]
  414b65:	sub    bh,ah
  414b67:	sub    al,0x30
  414b69:	bound  ebx,QWORD PTR [edx-0x1f18cadc]
  414b6f:	dec    edi
  414b70:	inc    esi
  414b71:	xchg   ebx,eax
  414b72:	out    dx,eax
  414b73:	call   0x1a5904a7
  414b78:	inc    edx
  414b79:	loope  0x414bf2
  414b7b:	test   BYTE PTR [ebx],0x21
  414b7e:	or     al,0x67
  414b80:	mov    eax,0xfcb04846
  414b85:	out    0x2d,al
  414b87:	int3   
  414b88:	mov    eax,ds:0xc0c6c0f3
  414b8d:	mov    cl,0xe7
  414b8f:	mov    ebx,0x48210ace
  414b94:	std    
  414b95:	icebp  
  414b96:	add    al,0x27
  414b98:	mov    al,ds:0x182b9bec
  414b9d:	or     bh,BYTE PTR [ebp+ebp*4-0x33285fac]
  414ba4:	mov    edx,0xac20aa0b
  414ba9:	push   0xeaa87db1
  414bae:	mov    al,0x34
  414bb0:	(bad)  
  414bb1:	out    0xe7,eax
  414bb3:	stos   DWORD PTR es:[edi],eax
  414bb4:	lods   eax,DWORD PTR ds:[esi]
  414bb5:	clc    
  414bb6:	mov    esi,0x4534e98c
  414bbb:	loop   0x414bb7
  414bbd:	aad    0x65
  414bbf:	push   ds
  414bc0:	xor    bh,BYTE PTR [esi]
  414bc2:	sbb    esi,DWORD PTR [edx+0x4f77a1cf]
  414bc8:	(bad)  
  414bca:	ss jbe 0x414b58
  414bcd:	in     al,0x1c
  414bcf:	jl     0x414c44
  414bd1:	scas   eax,DWORD PTR es:[edi]
  414bd2:	add    cl,cl
  414bd4:	sbb    BYTE PTR [ebp+0x1dab4878],ah
  414bda:	(bad)
  414bde:	mov    al,ds:0x79b7cb7b
  414be3:	adc    ecx,esi
  414be5:	cmp    BYTE PTR [edi+eax*8],dl
  414be8:	cmp    al,0x6f
  414bea:	les    ebp,FWORD PTR [esi+ebx*8+0x16]
  414bee:	and    DWORD PTR [eax],ebp
  414bf0:	push   esp
  414bf1:	mov    eax,0x2c868049
  414bf6:	push   ds
  414bf7:	sbb    bh,bl
  414bf9:	pop    ebp
  414bfa:	jbe    0x414c72
  414bfc:	xchg   ebp,eax
  414bfd:	pop    ebx
  414bfe:	out    dx,eax
  414bff:	jb     0x414b93
  414c01:	xor    DWORD PTR [esi+0x72],0xffffffd9
  414c05:	stos   DWORD PTR es:[edi],eax
  414c06:	xchg   edx,eax
  414c07:	dec    esi
  414c08:	cmp    bl,0x13
  414c0b:	or     al,0xcd
  414c0d:	popa   
  414c0e:	push   eax
  414c0f:	in     eax,0xdd
  414c11:	imul   BYTE PTR [edi+0x50968b99]
  414c17:	sbb    BYTE PTR ds:0xfece3579,bh
  414c1d:	add    ebp,eax
  414c1f:	jnp    0x414c9c
  414c21:	bound  edx,QWORD PTR [eax-0x780b50f7]
  414c27:	popf   
  414c28:	dec    edx
  414c29:	push   DWORD PTR [edi+0x3a70c23a]
  414c2f:	xchg   edx,eax
  414c30:	retf   0x4fca
  414c33:	loopne 0x414c59
  414c35:	aam    0x9a
  414c37:	enter  0x59ae,0xba
  414c3b:	mov    bl,0x28
  414c3d:	sti    
  414c3e:	adc    ch,bl
  414c40:	test   BYTE PTR [ebx-0x3c],bl
  414c43:	xchg   BYTE PTR [eax],bl
  414c45:	xor    al,0xca
  414c47:	rcl    DWORD PTR [esi+ebx*8-0xe],1
  414c4b:	call   0x9ff89c2e
  414c50:	(bad)  
  414c51:	and    al,0xa8
  414c53:	lods   al,BYTE PTR ds:[esi]
  414c54:	loop   0x414c41
  414c56:	nop
  414c57:	sub    ebx,DWORD PTR [ebx-0x33]
  414c5a:	pop    ss
  414c5b:	shl    DWORD PTR [bp-0x8],1
  414c5f:	xchg   ebx,eax
  414c60:	or     dl,BYTE PTR [ebx]
  414c62:	leave  
  414c63:	stos   DWORD PTR es:[edi],eax
  414c64:	imul   esi,DWORD PTR [ecx-0x6f],0x4b
  414c68:	popa   
  414c69:	and    BYTE PTR [edi+0x21],al
  414c6c:	mov    esp,DWORD PTR ds:0x4f2ea4b6
  414c72:	scas   eax,DWORD PTR es:[edi]
  414c73:	xor    esi,DWORD PTR [edx-0x23]
  414c76:	loope  0x414c79
  414c78:	xor    eax,0x588fa5e5
  414c7d:	and    al,0xd7
  414c7f:	xchg   ecx,eax
  414c80:	rcr    BYTE PTR [edi+edx*8+0x6047cab8],0x14
  414c88:	pop    es
  414c89:	add    bh,BYTE PTR [edx]
  414c8b:	(bad)  
  414c8c:	mov    esp,edi
  414c8e:	ret    0xa195
  414c91:	aaa    
  414c92:	sbb    eax,0xc1e64bc
  414c97:	fcmovnb st,st(5)
  414c99:	push   0xd4a3f4d
  414c9e:	lods   al,BYTE PTR ds:[esi]
  414c9f:	adc    al,0xf7
  414ca1:	sub    al,0x59
  414ca3:	out    dx,al
  414ca4:	xchg   esi,eax
  414ca5:	(bad)  
  414ca6:	adc    eax,0xe8664819
  414cab:	xor    esi,0x522b9161
  414cb1:	add    DWORD PTR [ecx+ebx*4],eax
  414cb4:	push   eax
  414cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cb6:	dec    esp
  414cb7:	cwde   
  414cb8:	mul    DWORD PTR [edx+0x46db1ce]
  414cbe:	push   es
  414cbf:	or     bh,BYTE PTR [ebx-0x20]
  414cc2:	adc    bh,BYTE PTR [ebp-0xa]
  414cc5:	mov    edx,0xcefdc8fb
  414cca:	pop    esi
  414ccb:	cmp    BYTE PTR ds:[ebp-0x7110f207],dh
  414cd2:	les    edx,FWORD PTR [ecx+0x6a1b3a]
  414cd8:	sbb    cl,bl
  414cda:	sbb    esp,DWORD PTR [eax+eiz*8]
  414cdd:	(bad)  
  414cde:	pop    edx
  414cdf:	jno    0x414d45
  414ce1:	and    esi,DWORD PTR [ebx]
  414ce3:	test   DWORD PTR [edi-0x5dd7cb9c],ebx
  414ce9:	sub    esp,DWORD PTR [esi-0x47]
  414cec:	inc    esi
  414ced:	mov    edx,0x1e226512
  414cf2:	fdivr  st,st(1)
  414cf4:	je     0x414c92
  414cf6:	cmp    al,0x4e
  414cf8:	out    dx,al
  414cf9:	mov    ds:0xf179c4c3,al
  414cfe:	inc    edx
  414cff:	aas    
  414d00:	test   eax,0xa8c4bbf2
  414d05:	test   eax,0x7ad75f49
  414d0a:	cwde   
  414d0b:	pop    ss
  414d0c:	jns    0x414d05
  414d0e:	xor    bh,BYTE PTR [eax+0x2903f7c5]
  414d14:	inc    edi
  414d15:	imul   edi,DWORD PTR [ebx+0x4e0dad40],0x5a
  414d1c:	(bad)  
  414d1e:	push   edi
  414d1f:	mov    al,ds:0xd39124e
  414d24:	nop
  414d25:	xor    ah,BYTE PTR [edx+0x3d]
  414d28:	(bad)  
  414d29:	mov    dl,0x27
  414d2b:	pop    ebp
  414d2c:	inc    ebp
  414d2d:	call   0x6dbe9017
  414d32:	int    0xc3
  414d34:	pop    eax
  414d35:	retf   
  414d36:	iret   
  414d37:	stc    
  414d38:	push   eax
  414d39:	int3   
  414d3a:	dec    edx
  414d3b:	out    0xb9,eax
  414d3d:	and    al,0xce
  414d40:	jmp    0xca0b314
  414d45:	mov    cl,0x4a
  414d47:	and    eax,0x880b5671
  414d4c:	dec    edx
  414d4d:	jmp    0x414d1b
  414d4f:	cmc    
  414d50:	or     eax,0xfd89e0ed
  414d55:	imul   ecx,DWORD PTR [ebx+0xc],0x90ae6db8
  414d5c:	sbb    edx,eax
  414d5e:	push   es
  414d5f:	mov    al,0x81
  414d61:	ss mov bl,0xd6
  414d64:	cmc    
  414d65:	sub    cl,dh
  414d67:	mov    cl,0x3
  414d69:	lods   eax,DWORD PTR ds:[esi]
  414d6a:	call   FWORD PTR [edi+ebp*2-0xd51f814]
  414d71:	jecxz  0x414d9c
  414d73:	test   al,0xf4
  414d75:	(bad)  
  414d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d77:	into   
  414d78:	aaa    
  414d79:	mov    bl,0x8c
  414d7b:	mov    ebp,0xae09c56d
  414d80:	lds    ecx,FWORD PTR [ecx+0x17]
  414d83:	arpl   sp,bp
  414d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d86:	pop    es
  414d87:	add    BYTE PTR [eax+0x7b20d306],dl
  414d8d:	xchg   ecx,eax
  414d8e:	repz dec esp
  414d90:	xor    BYTE PTR [eax],bl
  414d92:	push   ebx
  414d93:	mov    eax,?
  414d95:	sub    DWORD PTR [edx],0x15
  414d98:	push   ss
  414d99:	call   WORD PTR [ebx]
  414d9c:	sub    DWORD PTR [edx-0x6f],esp
  414d9f:	iret   
  414da0:	mov    ds:0xce719c88,eax
  414da5:	test   BYTE PTR [eax-0x25],ch
  414da8:	cmp    bh,BYTE PTR [esi+0x33de46bf]
  414dae:	aad    0x2f
  414db0:	sbb    ecx,DWORD PTR [ebp-0x634d9b51]
  414db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db7:	jl     0x414d72
  414db9:	mov    ds:0xdf541f5,al
  414dbe:	xchg   ecx,eax
  414dbf:	cmp    ch,bl
  414dc1:	dec    ebp
  414dc2:	(bad)  
  414dc3:	cmp    cl,BYTE PTR [ebp+edx*1+0x2f9b8af4]
  414dca:	xor    eax,0xb0be3f6
  414dcf:	stc    
  414dd0:	shl    DWORD PTR [ecx],cl
  414dd2:	and    ax,0xffe6
  414dd6:	arpl   ax,bx
  414dd8:	or     DWORD PTR [ebx],esi
  414dda:	in     eax,dx
  414ddb:	push   esi
  414ddc:	jmp    0x56ae:0x27152824
  414de3:	mov    esi,0xedfd79c1
  414de8:	dec    esp
  414de9:	retf   0xb39a
  414dec:	dec    eax
  414ded:	in     al,0xc3
  414def:	retf   
  414df0:	sar    DWORD PTR [edx+0x18f3c27a],1
  414df6:	(bad)  
  414df7:	jecxz  0x414e4c
  414df9:	push   ebp
  414dfa:	xor    edi,DWORD PTR [si]
  414dfd:	ror    DWORD PTR [edi+esi*1-0x4175603],cl
  414e04:	lahf   
  414e05:	scas   al,BYTE PTR es:[edi]
  414e06:	nop
  414e07:	outs   dx,WORD PTR ds:[esi]
  414e09:	clc    
  414e0a:	das    
  414e0b:	push   ds
  414e0c:	call   0x1af465c2
  414e11:	adc    al,0x76
  414e13:	dec    esi
  414e14:	test   BYTE PTR [ecx],0xc4
  414e17:	mov    esi,ebp
  414e19:	inc    eax
  414e1a:	xchg   BYTE PTR [edx],bh
  414e1c:	xor    DWORD PTR [ecx-0x13531cb5],0x36
  414e23:	inc    eax
  414e24:	xor    esp,edx
  414e26:	lahf   
  414e27:	push   0x5a47da2a
  414e2c:	mov    cs,WORD PTR [esi+edx*4]
  414e2f:	jne    0x414ea5
  414e31:	stos   BYTE PTR es:[edi],al
  414e32:	fidivr WORD PTR [ebx+0x5d]
  414e35:	in     al,0xe4
  414e37:	mov    dl,0x60
  414e39:	inc    ebx
  414e3a:	mov    cl,0xa9
  414e3c:	xchg   DWORD PTR [ecx+ebx*2],edx
  414e3f:	sti    
  414e40:	cli    
  414e41:	adc    edx,ebx
  414e43:	jge    0x414e8d
  414e45:	ins    DWORD PTR es:[edi],dx
  414e46:	mov    fs,eax
  414e48:	xchg   edi,eax
  414e49:	xchg   ebx,eax
  414e4a:	push   ecx
  414e4b:	imul   edx,DWORD PTR [edx+ebp*4-0x287faa1d],0xffffffc6
  414e53:	mov    edx,0xaa73d704
  414e58:	arpl   sp,di
  414e5a:	sbb    al,0xbb
  414e5c:	jne    0x414ea4
  414e5e:	(bad)  
  414e60:	push   eax
  414e61:	sti    
  414e62:	dec    ecx
  414e63:	sub    BYTE PTR [ebx-0x44],dh
  414e66:	inc    ecx
  414e67:	jle    0x414e3d
  414e69:	imul   ebx,ebx,0xffffff9d
  414e6c:	push   edi
  414e6d:	xor    al,0xc7
  414e6f:	inc    ecx
  414e70:	or     eax,0xcf6063cb
  414e75:	iret   
  414e76:	imul   edi,DWORD PTR [edi+0x1f],0xf23ae091
  414e7d:	dec    edx
  414e7e:	mov    DWORD PTR [eax+eiz*4],esp
  414e81:	repz cmp eax,0x96414f55
  414e87:	cmc    
  414e88:	jecxz  0x414e67
  414e8a:	push   edx
  414e8b:	cli    
  414e8c:	and    BYTE PTR [edi-0x686db86e],0xa
  414e93:	push   ebp
  414e94:	aas    
  414e95:	mov    ds:0xf5b2449c,eax
  414e9a:	addr16 jne 0x414ed7
  414e9d:	mov    eax,0x85ce1647
  414ea2:	mov    ebp,0x34bf5e24
  414ea7:	pop    esi
  414ea8:	test   eax,0x9e9a8dcc
  414ead:	or     DWORD PTR [eax-0x75299d3a],edx
  414eb3:	sar    DWORD PTR [ecx-0x68],cl
  414eb6:	ds iret 
  414eb8:	push   ebx
  414eb9:	cld    
  414eba:	fstp   QWORD PTR [eax+0x6fa3da4d]
  414ec0:	cmp    DWORD PTR [ebp-0x7abf4b6a],0x2e2ebbb3
  414eca:	aam    0x34
  414ecc:	stos   BYTE PTR es:[edi],al
  414ecd:	sbb    DWORD PTR [edx-0x5a],esi
  414ed0:	out    dx,eax
  414ed1:	xor    bh,cl
  414ed3:	inc    ecx
  414ed4:	or     ecx,esi
  414ed6:	push   esp
  414ed7:	cs bound eax,QWORD PTR ds:[ecx]
  414edb:	mov    ch,0x64
  414edd:	in     eax,dx
  414ede:	stc    
  414edf:	xor    DWORD PTR [ebp+0x3a],0xffffffc8
  414ee3:	add    al,0x7c
  414ee5:	cmp    DWORD PTR [eax],ebx
  414ee7:	push   edi
  414ee8:	lods   al,BYTE PTR ds:[esi]
  414ee9:	sbb    BYTE PTR [edi-0x1],bh
  414eec:	(bad)  
  414eed:	pop    edx
  414eee:	cs enter 0x998e,0x77
  414ef3:	sbb    edx,DWORD PTR [ebx+0xbfac026]
  414ef9:	mov    bl,0xe2
  414efb:	sbb    al,0x86
  414efd:	adc    BYTE PTR [edi],ch
  414eff:	aad    0xf6
  414f01:	push   0x9062e7f8
  414f06:	sub    ecx,ecx
  414f08:	ret    0x30e8
  414f0b:	pop    ecx
  414f0c:	cmp    eax,0x69e759
  414f11:	mov    esp,0xbbea7bac
  414f16:	jmp    0x414eab
  414f18:	xchg   edi,eax
  414f19:	je     0x414f51
  414f1b:	cdq    
  414f1c:	push   ebx
  414f1e:	adc    eax,0x1878237e
  414f23:	dec    esp
  414f24:	out    dx,eax
  414f25:	push   edx
  414f26:	mov    ebx,DWORD PTR [eax+0x38]
  414f29:	dec    edx
  414f2a:	outs   dx,DWORD PTR ds:[esi]
  414f2b:	(bad)  
  414f2c:	cs jno 0x414ef4
  414f2f:	push   cs
  414f30:	retf   0x382d
  414f33:	je     0x414f45
  414f35:	xchg   ecx,eax
  414f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f37:	dec    esi
  414f38:	bound  eax,QWORD PTR [ecx+ecx*8-0x43]
  414f3c:	dec    esp
  414f3d:	jne    0x414faa
  414f3f:	cli    
  414f40:	sbb    edx,0xffffffaa
  414f43:	shl    esp,1
  414f45:	xor    edx,DWORD PTR [edx-0x8]
  414f48:	jno    0x414fac
  414f4a:	mov    ecx,DWORD PTR [ebp+0x6407a429]
  414f50:	hlt    
  414f51:	(bad)  
  414f52:	(bad)  
  414f53:	aad    0x64
  414f55:	sbb    al,0x16
  414f57:	ins    BYTE PTR es:[edi],dx
  414f58:	adc    al,0x80
  414f5a:	addr16 pop ecx
  414f5c:	cdq    
  414f5d:	or     DWORD PTR [ebx-0x18],0xfffffff0
  414f61:	cdq    
  414f62:	sub    al,0xb2
  414f64:	xor    esi,DWORD PTR [ebp+0x257e5490]
  414f6a:	dec    ebp
  414f6b:	or     edx,esp
  414f6d:	adc    DWORD PTR [ebp-0x50],ebx
  414f70:	xchg   dh,dh
  414f72:	fsubr  DWORD PTR [edi+ecx*8+0x6b]
  414f76:	icebp  
  414f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f78:	xchg   BYTE PTR [edx],bl
  414f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f7c:	lea    ebx,[edx+0xe]
  414f7f:	xchg   ebx,eax
  414f80:	int3   
  414f81:	jg     0x414f5b
  414f83:	stos   DWORD PTR es:[edi],eax
  414f84:	ror    esp,cl
  414f86:	jecxz  0x414f77
  414f88:	(bad)  [eax-0x1c1609df]
  414f8e:	nop
  414f8f:	add    al,0x88
  414f91:	repz adc dh,BYTE PTR [edx-0x69d16d71]
  414f98:	mov    ds,WORD PTR [esi]
  414f9a:	jb     0x415008
  414f9c:	les    ebp,FWORD PTR [edi+0x6c8146e2]
  414fa2:	ins    BYTE PTR es:[edi],dx
  414fa3:	sbb    eax,0x39d3c1b5
  414fa8:	(bad)  
  414faa:	push   edx
  414fab:	adc    BYTE PTR [edx],0xe2
  414fae:	and    DWORD PTR [edi],edx
  414fb0:	stos   BYTE PTR es:[edi],al
  414fb1:	cmp    DWORD PTR [eax-0x6a],ebp
  414fb4:	aam    0x3e
  414fb6:	inc    esi
  414fb7:	in     al,0x32
  414fb9:	rcl    DWORD PTR [ebp+0xa],1
  414fbc:	add    eax,0x9285bfd
  414fc1:	test   edx,0x15485569
  414fc7:	jae    0x415010
  414fc9:	in     eax,dx
  414fca:	outs   dx,BYTE PTR ds:[esi]
  414fcb:	dec    ecx
  414fcc:	in     al,0xeb
  414fce:	daa    
  414fcf:	mov    ebp,0xc9567f9b
  414fd4:	je     0x41502c
  414fd6:	add    al,0x43
  414fd8:	ja     0x414fd9
  414fda:	ins    BYTE PTR es:[edi],dx
  414fdb:	std    
  414fdc:	adc    BYTE PTR [edi-0x6f902cb3],bh
  414fe2:	dec    eax
  414fe3:	jmp    0x1a3c25ba
  414fe8:	call   0xb353:0x4cb3ef67
  414fef:	mov    cl,0x19
  414ff1:	mov    dh,0xde
  414ff3:	loop   0x414fc6
  414ff5:	xchg   ecx,eax
  414ff6:	cmp    DWORD PTR [edx],0xfbe94f5
  414ffc:	sbb    DWORD PTR [edx+esi*2],ebp
  414fff:	lock mov cl,0x54
  415002:	and    al,0xfa
  415004:	and    al,0x43
  415006:	inc    esi
  415007:	xor    al,0x4c
  415009:	test   al,0xef
  41500b:	or     ecx,DWORD PTR [edx]
  41500d:	fisub  DWORD PTR [esi]
  41500f:	lods   eax,DWORD PTR ds:[esi]
  415010:	mov    DWORD PTR [ecx+0x32],edx
  415013:	fidivr WORD PTR [ebx+0x79]
  415016:	rcl    DWORD PTR [eax],0x85
  415019:	ja     0x41505c
  41501b:	push   ecx
  41501c:	stos   BYTE PTR es:[edi],al
  41501d:	call   0xd8fd7ada
  415022:	and    al,0xb0
  415024:	daa    
  415025:	jmp    edi
  415027:	add    bh,BYTE PTR [edx+0x4da690e8]
  41502d:	std    
  41502e:	fwait
  41502f:	sbb    BYTE PTR [ebx+0x388c61f9],ah
  415035:	push   cs
  415036:	jle    0x415059
  415038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415039:	shl    BYTE PTR [ebx-0x61006513],1
  41503f:	dec    ebp
  415040:	inc    esi
  415041:	mov    cl,0x8d
  415043:	inc    ebp
  415044:	out    dx,eax
  415045:	aas    
  415046:	xor    al,0x5
  415048:	adc    eax,0xb7d1c5d5
  41504d:	add    al,0x54
  41504f:	jecxz  0x414ffe
  415051:	or     al,0x4c
  415053:	jge    0x415041
  415055:	cmp    al,0x3f
  415057:	daa    
  415058:	jmp    0x414feb
  41505a:	jmp    0x61b5e841
  41505f:	adc    al,0x37
  415061:	mov    ecx,DWORD PTR [ecx-0x60]
  415064:	xor    eax,0x926c044e
  415069:	int    0x98
  41506b:	jmp    0x41501e
  41506d:	xchg   esp,eax
  41506e:	dec    BYTE PTR [ebp+0x71]
  415071:	jp     0x4150e3
  415073:	(bad)  
  415074:	sbb    al,0x51
  415076:	cmp    DWORD PTR [esi+ebp*4-0x37],0x1484937b
  41507e:	cdq    
  41507f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415080:	push   ebp
  415081:	jae    0x41502f
  415083:	fs pop eax
  415085:	outs   dx,BYTE PTR ds:[esi]
  415086:	jae    0x41507f
  415088:	loopne 0x4150d4
  41508a:	rcl    di,1
  41508d:	ret    
  41508e:	jns    0x415077
  415090:	mov    ah,0xc8
  415092:	iret   
  415093:	retf   0x196d
  415096:	arpl   ax,cx
  415098:	daa    
  415099:	pop    ebx
  41509a:	in     al,0xdf
  41509c:	(bad)  
  41509d:	mov    ah,0xd9
  41509f:	and    ebx,esp
  4150a1:	fmul   DWORD PTR [edx+eiz*8-0x1e]
  4150a5:	inc    esi
  4150a6:	mov    al,0x52
  4150a8:	mov    ah,BYTE PTR [ecx]
  4150aa:	repz imul ecx
  4150ad:	dec    edx
  4150ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150af:	inc    ecx
  4150b0:	scas   al,BYTE PTR es:[edi]
  4150b1:	pop    esp
  4150b2:	mov    dh,0xcc
  4150b4:	sub    DWORD PTR [edi-0x3bdb1574],ebx
  4150ba:	dec    ebp
  4150bb:	repz pushf 
  4150bd:	adc    dh,ch
  4150bf:	mov    dh,0x9
  4150c1:	add    al,0x44
  4150c3:	mov    al,ds:0x602e595f
  4150c8:	aaa    
  4150c9:	(bad)
  4150cc:	aas    
  4150cd:	add    ebx,DWORD PTR [esi+0x3d]
  4150d0:	jmp    0x96d43ed6
  4150d5:	bound  ecx,QWORD PTR [edi+ebx*2]
  4150d8:	pop    ebx
  4150d9:	inc    ebx
  4150da:	xchg   DWORD PTR [eax+0x25],esi
  4150dd:	mov    edx,0x23f9f66b
  4150e2:	lods   eax,DWORD PTR ds:[esi]
  4150e3:	lds    edi,FWORD PTR [esi]
  4150e5:	push   esi
  4150e6:	gs inc edx
  4150e8:	das    
  4150e9:	cmp    bh,0x1e
  4150ec:	std    
  4150ed:	mov    edi,0xcac25d2f
  4150f2:	rol    DWORD PTR [eax-0x6f],1
  4150f5:	push   0x3c
  4150f7:	mov    dl,0x67
  4150f9:	push   edi
  4150fa:	sub    ah,BYTE PTR [eax+ebp*2-0x534dc2bb]
  415101:	dec    eax
  415102:	pop    edi
  415103:	das    
  415104:	mov    bl,0x83
  415106:	mov    ch,0x13
  415108:	sbb    bl,al
  41510a:	jns    0x41510c
  41510c:	mov    ebx,0xec0067cd
  415111:	or     esi,ecx
  415113:	call   0xb159:0xd0b53cf4
  41511a:	xor    eax,0x7da35afd
  41511f:	repz sar ch,cl
  415122:	repz (bad) 
  415124:	sbb    eax,DWORD PTR [ecx+ecx*1+0x538df21a]
  41512b:	jne    0x415176
  41512d:	imul   ebx,eax,0x9cd4f096
  415133:	sub    ch,ch
  415135:	les    esi,FWORD PTR [edi+0x735a41d6]
  41513b:	cmp    BYTE PTR [ebp-0x24],bh
  41513e:	push   esp
  41513f:	addr16 xchg ebx,eax
  415141:	jbe    0x41518c
  415143:	sbb    al,0x5
  415145:	dec    eax
  415146:	enter  0xf2df,0xb7
  41514a:	iret   
  41514b:	adc    al,0x5e
  41514d:	sub    DWORD PTR [edx-0x22301322],edi
  415153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415154:	push   ecx
  415155:	pop    esi
  415156:	div    DWORD PTR [esi]
  415158:	data16 mov bl,0xce
  41515b:	pusha  
  41515c:	dec    esp
  41515d:	(bad)  
  41515e:	push   es
  41515f:	pop    ebp
  415160:	fadd   st,st(4)
  415162:	push   ebp
  415163:	test   eax,0xa3480449
  415168:	pusha  
  415169:	push   edi
  41516a:	test   BYTE PTR ds:0xe89f55,cl
  415170:	and    eax,0xfd967826
  415175:	aam    0xf1
  415177:	cdq    
  415178:	popa   
  415179:	push   esi
  41517a:	sti    
  41517b:	mov    al,0x72
  41517d:	stos   DWORD PTR es:[edi],eax
  41517e:	adc    eax,0xd46e3523
  415183:	or     DWORD PTR ds:0x3142e49c,eax
  415189:	jge    0x4151b5
  41518b:	jl     0x41511f
  41518d:	out    0xd7,al
  41518f:	mov    esi,?
  415191:	aas    
  415192:	test   BYTE PTR [esi-0x2b],al
  415195:	popa   
  415196:	pop    esp
  415197:	xchg   DWORD PTR [ecx],ebx
  415199:	hlt    
  41519a:	int    0xaa
  41519c:	sbb    BYTE PTR [edi+0x74],ah
  41519f:	inc    eax
  4151a0:	mov    eax,ds:0x4afef62a
  4151a5:	cmp    ebp,DWORD PTR es:[eax]
  4151a8:	int3   
  4151a9:	mov    eax,ds:0xd34b1343
  4151ae:	jle    0x41515b
  4151b0:	push   ds
  4151b1:	(bad)  
  4151b2:	sub    eax,0xf520e214
  4151b7:	dec    edx
  4151b8:	sbb    al,dh
  4151ba:	enter  0xf2df,0xfd
  4151be:	clc    
  4151bf:	push   esi
  4151c0:	lock icebp 
  4151c2:	ins    DWORD PTR es:[edi],dx
  4151c3:	aam    0xcd
  4151c5:	loop   0x4151d1
  4151c7:	test   DWORD PTR [esi+0x3e],0xd2c2de94
  4151ce:	jbe    0x4151c1
  4151d0:	(bad)  
  4151d1:	xchg   ebp,eax
  4151d2:	pop    ss
  4151d3:	cmc    
  4151d4:	jnp    0x41520c
  4151d6:	adc    ebp,DWORD PTR [edx+0x40]
  4151d9:	out    dx,al
  4151da:	add    esi,DWORD PTR [ebx+eiz*2]
  4151dd:	out    0xf5,eax
  4151df:	gs (bad) 
  4151e1:	pop    ecx
  4151e2:	inc    ebp
  4151e3:	nop
  4151e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e5:	and    al,BYTE PTR [edx-0x3d]
  4151e8:	dec    ebp
  4151e9:	pop    ebx
  4151ea:	inc    esi
  4151eb:	or     al,0x33
  4151ed:	lods   eax,DWORD PTR ds:[esi]
  4151ee:	bnd jg 0x415254
  4151f1:	ret    
  4151f2:	and    ebx,DWORD PTR [edi]
  4151f4:	or     al,ah
  4151f6:	add    ebp,DWORD PTR [ecx]
  4151f8:	add    bl,BYTE PTR [ecx+eax*1+0x24a081bd]
  4151ff:	xor    eax,0x775a594b
  415204:	mov    cl,0xa2
  415206:	test   BYTE PTR [ebp-0x1e],bl
  415209:	arpl   WORD PTR [eax],bp
  41520b:	in     eax,dx
  41520c:	sar    DWORD PTR [edi-0x2b],0xfd
  415210:	xchg   edi,eax
  415211:	cmc    
  415212:	push   edi
  415213:	xchg   BYTE PTR [ebp+edi*4+0x518f35c4],al
  41521a:	in     al,dx
  41521b:	mov    ch,0x51
  41521d:	sub    bh,ah
  41521f:	mov    bl,0x8d
  415221:	pop    ss
  415222:	dec    edx
  415223:	cmp    esp,DWORD PTR [ecx+0x363d4b71]
  415229:	inc    esp
  41522a:	enter  0x6603,0xbd
  41522e:	adc    al,0x78
  415230:	je     0x415246
  415232:	call   0x81ea:0xa0be916
  415239:	ds xchg esi,eax
  41523b:	xchg   ecx,eax
  41523c:	jne    0x4151f7
  41523e:	cdq    
  41523f:	jmp    0x4152a7
  415241:	inc    eax
  415242:	test   BYTE PTR [edx],0xdb
  415245:	and    dl,BYTE PTR [esi+0x73]
  415248:	imul   ecx,DWORD PTR [edi],0x79
  41524b:	in     eax,dx
  41524c:	loopne 0x4152c0
  41524e:	cmp    eax,0xffa324fb
  415253:	jp     0x415298
  415255:	retf   
  415256:	stos   BYTE PTR es:[edi],al
  415257:	mov    ebp,cs
  415259:	leave  
  41525a:	sbb    eax,0xa01e8c27
  41525f:	jge    0x415225
  415261:	ret    
  415262:	pop    ecx
  415263:	dec    eax
  415264:	sar    DWORD PTR [edi-0x8],0x6d
  415268:	sti    
  415269:	cmc    
  41526a:	jo     0x415260
  41526c:	pop    ebx
  41526d:	pop    es
  41526e:	mov    al,0x26
  415270:	cs inc ebp
  415272:	stos   DWORD PTR es:[edi],eax
  415273:	fdivrp st(3),st
  415275:	push   edi
  415276:	fiadd  DWORD PTR [esi-0x2f0ee672]
  41527c:	push   0x6b
  41527e:	push   edx
  41527f:	jp     0x415261
  415281:	aam    0x9
  415283:	push   0xde826c
  415288:	and    eax,0x80949e6a
  41528d:	pop    edx
  41528e:	mov    ebp,0xee2dbbdf
  415293:	dec    edi
  415294:	mov    DWORD PTR ds:0x9f519ef8,eax
  41529a:	lea    ecx,[edx-0x50d4f46f]
  4152a0:	xchg   ecx,eax
  4152a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152a2:	jno    0x4152b2
  4152a4:	sub    ebx,DWORD PTR [edi+0x2b]
  4152a7:	jge    0x415264
  4152a9:	and    DWORD PTR [eax+0x1d373fd0],0x1b
  4152b0:	sar    DWORD PTR [ebx-0x34],0x16
  4152b4:	push   0x477032ef
  4152b9:	push   esp
  4152ba:	pop    eax
  4152bb:	mov    esi,0x7e2e4e08
  4152c0:	enter  0x6063,0x56
  4152c4:	sbb    al,0x6b
  4152c6:	fld    st(7)
  4152c8:	cmp    al,0x1c
  4152ca:	xor    al,0x27
  4152cc:	lahf   
  4152cd:	fwait
  4152ce:	pusha  
  4152cf:	jbe    0x4152fc
  4152d1:	push   ds
  4152d2:	repnz ins BYTE PTR es:[edi],dx
  4152d4:	push   eax
  4152d5:	iret   
  4152d6:	add    al,0x43
  4152d8:	cmp    al,0x89
  4152da:	mov    ch,0x82
  4152dc:	push   es
  4152dd:	mov    edi,0xd1761cf
  4152e2:	pop    esi
  4152e3:	sbb    al,0x7e
  4152e6:	jecxz  0x4152f7
  4152e8:	push   cs
  4152e9:	add    bh,BYTE PTR [edi-0x1a38371d]
  4152ef:	mov    bh,0xf0
  4152f1:	aad    0x86
  4152f3:	xor    eax,0x10865db3
  4152f8:	and    al,0x1e
  4152fa:	dec    ebx
  4152fb:	test   BYTE PTR [esi-0x6c],al
  4152fe:	dec    ebp
  4152ff:	and    DWORD PTR [edi+edi*1],ebp
  415302:	out    0x91,al
  415304:	adc    edx,edi
  415306:	jl     0x4152d8
  415308:	mov    al,bl
  41530a:	sub    edx,DWORD PTR [ebx+0x2b]
  41530d:	into   
  41530e:	out    dx,al
  41530f:	loopne 0x41537e
  415311:	sub    eax,0x4c
  415314:	scas   al,BYTE PTR es:[edi]
  415315:	cmp    DWORD PTR [eax-0x6e],ebx
  415318:	cmc    
  415319:	lods   eax,DWORD PTR ds:[esi]
  41531a:	jno    0x41533d
  41531c:	in     eax,dx
  41531d:	nop
  41531e:	pop    ds
  41531f:	shr    DWORD PTR [edi],1
  415321:	mov    BYTE PTR [eax-0xf],ah
  415324:	add    BYTE PTR [esp+ebp*8-0x41],0xe0
  415329:	outs   dx,DWORD PTR ds:[esi]
  41532a:	mov    dh,0xc8
  41532c:	xor    eax,0xc85e5c55
  415331:	sub    ah,bl
  415333:	popf   
  415334:	aam    0x52
  415336:	fidiv  DWORD PTR ds:[si]
  41533a:	sti    
  41533b:	add    DWORD PTR [edx+0x63],edx
  41533e:	mov    ds:0xaa68f54e,eax
  415343:	or     esi,DWORD PTR [ecx-0x5d03a01a]
  415349:	mov    edi,0xccfa72f7
  41534e:	scas   eax,DWORD PTR es:[edi]
  41534f:	cmp    eax,0x363ff57d
  415354:	xchg   BYTE PTR [ecx+0x1de91a0e],bl
  41535a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41535b:	pop    ds
  41535c:	jecxz  0x415329
  41535e:	jns    0x41538a
  415360:	fild   WORD PTR ds:[eax]
  415363:	js     0x41531a
  415365:	out    dx,al
  415366:	ss push ss
  415368:	mov    eax,ds:0x1ab14af2
  41536d:	inc    eax
  41536e:	imul   esp,DWORD PTR [edi+ecx*2-0x1b],0x978fd786
  415376:	inc    edi
  415377:	outs   dx,DWORD PTR ds:[esi]
  415378:	and    al,BYTE PTR [edi]
  41537a:	in     al,0x82
  41537c:	jg     0x4153b2
  41537e:	in     eax,0xb4
  415380:	mov    ch,0x40
  415382:	xchg   ebx,eax
  415383:	cmp    dh,BYTE PTR [ecx+0x35413ebf]
  415389:	xchg   ebp,eax
  41538a:	and    BYTE PTR [edi],ah
  41538c:	enter  0x79c2,0x7c
  415390:	(bad)  
  415391:	cmc    
  415392:	cmp    BYTE PTR [edi+0x21798cfb],bl
  415398:	popa   
  415399:	jmp    0xdd531caa
  41539e:	xchg   esp,eax
  41539f:	stc    
  4153a0:	test   eax,0x61bb565
  4153a5:	adc    edx,edi
  4153a7:	gs rol ch,1
  4153aa:	test   BYTE PTR [eax],bl
  4153ac:	ins    BYTE PTR es:[edi],dx
  4153ad:	pop    esi
  4153ae:	inc    esi
  4153af:	xchg   esp,eax
  4153b0:	xchg   ecx,eax
  4153b1:	(bad)  
  4153b2:	dec    ecx
  4153b3:	outs   dx,DWORD PTR ds:[esi]
  4153b4:	nop
  4153b5:	retf   
  4153b6:	push   eax
  4153b7:	dec    edi
  4153b8:	arpl   bx,cx
  4153ba:	adc    DWORD PTR [esi],ebp
  4153bc:	push   ds
  4153bd:	push   cs
  4153be:	and    ch,BYTE PTR [eax-0xf]
  4153c1:	in     eax,0x37
  4153c3:	leave  
  4153c4:	add    ah,cl
  4153c6:	div    bh
  4153c8:	mov    al,0xf2
  4153ca:	adc    ah,cl
  4153cc:	sub    cl,BYTE PTR [edi]
  4153ce:	sub    BYTE PTR [ebx],0x68
  4153d1:	stos   BYTE PTR es:[edi],al
  4153d2:	scas   eax,DWORD PTR es:[edi]
  4153d3:	pushf  
  4153d4:	fadd   st(4),st
  4153d6:	iret   
  4153d7:	push   0x27
  4153d9:	push   0xc8c72fd
  4153de:	loop   0x4153b0
  4153e0:	ror    BYTE PTR [ecx+0x1ad9c9ba],0xc7
  4153e7:	(bad)  
  4153e9:	scas   al,BYTE PTR es:[edi]
  4153ea:	hlt    
  4153eb:	shl    DWORD PTR ds:0xa45e4b20,cl
  4153f1:	adc    eax,0x19a9d06f
  4153f6:	mov    ds:0x16ffdbb5,al
  4153fb:	inc    edi
  4153fc:	loopne 0x4153c7
  4153fe:	std    
  4153ff:	push   ebx
  415400:	ficom  DWORD PTR [ebx+0xf]
  415403:	cli    
  415404:	and    eax,0x61a55ceb
  415409:	fwait
  41540a:	out    0x8a,eax
  41540c:	dec    ebp
  41540d:	dec    edx
  41540e:	mov    al,ds:0x908279dc
  415413:	push   eax
  415414:	jge    0x4153d5
  415416:	pop    ds
  415417:	mov    ah,0x5f
  415419:	push   ebx
  41541a:	bound  esp,QWORD PTR [ebx-0x7f4bedd8]
  415420:	mov    edx,0x40482701
  415425:	push   0x32
  415427:	xlat   BYTE PTR ds:[ebx]
  415428:	bnd jb 0x41540b
  41542b:	mov    ch,0x84
  41542d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41542e:	or     DWORD PTR [edi+ebx*1],eax
  415431:	pushf  
  415432:	cmc    
  415433:	aad    0xe3
  415435:	sbb    DWORD PTR [ebp+0x6b],ebx
  415438:	inc    ebx
  415439:	xchg   ebx,eax
  41543a:	push   cs
  41543b:	jmp    0xdbb6a6b4
  415440:	and    edx,DWORD PTR [edx+edx*4]
  415443:	lahf   
  415444:	ss or  eax,0xdf3cf92a
  41544a:	dec    eax
  41544b:	int    0x9d
  41544d:	inc    edx
  41544e:	ror    BYTE PTR [ebx+0x11bf5fe4],1
  415454:	dec    ecx
  415455:	and    DWORD PTR [ecx-0x3],0x58cc20dc
  41545c:	push   cs
  41545d:	repz jo 0x415460
  415460:	cmp    DWORD PTR [ecx+0x21],eax
  415463:	in     eax,0x22
  415465:	sbb    eax,0xf9e81744
  41546a:	call   0xea07:0x18315589
  415471:	fidivr WORD PTR [ecx]
  415473:	bound  eax,QWORD PTR [ecx+0x698f8548]
  415479:	(bad)  
  41547a:	out    0x5c,eax
  41547c:	mov    dh,0xb3
  41547e:	cdq    
  41547f:	aas    
  415480:	sti    
  415481:	data16 xchg di,ax
  415484:	out    0x11,eax
  415486:	inc    edi
  415487:	adc    dl,BYTE PTR [esi]
  415489:	jb     0x415429
  41548b:	lock cwde 
  41548d:	sbb    BYTE PTR [esi-0x26],dl
  415490:	pop    ebp
  415491:	sbb    al,0xbd
  415493:	push   esp
  415494:	out    0x0,al
  415496:	shl    DWORD PTR [ecx-0x6a7ef1e3],1
  41549c:	aaa    
  41549d:	jno    0x415504
  41549f:	jns    0x4154ff
  4154a1:	dec    edx
  4154a2:	sub    al,0x40
  4154a4:	dec    eax
  4154a5:	pushf  
  4154a6:	dec    edx
  4154a7:	fmul   DWORD PTR [eax]
  4154a9:	push   es
  4154aa:	push   ebp
  4154ab:	ret    0xaecb
  4154ae:	ins    BYTE PTR es:[edi],dx
  4154af:	int3   
  4154b0:	mov    cl,0x56
  4154b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154b3:	sbb    BYTE PTR [ebx-0x10],dl
  4154b6:	cmp    al,0xc9
  4154b8:	sub    ecx,0xd754575a
  4154be:	sbb    al,0x1e
  4154c0:	mov    edx,0x2b4202eb
  4154c5:	xor    BYTE PTR [eax-0x55],dl
  4154c8:	and    bl,dl
  4154ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154cb:	and    dl,BYTE PTR [edx-0x1b]
  4154ce:	cmp    DWORD PTR [edi-0x58],ebp
  4154d1:	shl    BYTE PTR [edx-0x39edb278],0x3f
  4154d8:	cmp    eax,0x28cd7307
  4154dd:	test   eax,0x3ddb90bd
  4154e2:	enter  0x65b3,0x15
  4154e6:	fidivr DWORD PTR [esi+0x325044ee]
  4154ec:	or     DWORD PTR [ecx],0xffffffb6
  4154ef:	mov    esi,0x2fb5710c
  4154f4:	out    dx,eax
  4154f5:	aad    0x84
  4154f7:	dec    ecx
  4154f8:	adc    BYTE PTR [edi],ah
  4154fa:	inc    ebx
  4154fb:	jmp    0xaac6e569
  415500:	and    DWORD PTR [esi-0x7aa5c82c],edx
  415506:	mov    al,ds:0xcca2d692
  41550b:	popf   
  41550c:	je     0x415550
  41550e:	outs   dx,BYTE PTR ds:[esi]
  41550f:	add    eax,DWORD PTR [ecx]
  415511:	jmp    0xa172:0xb63d41a5
  415518:	jno    0x4154e9
  41551a:	xor    BYTE PTR [ebp+0x6c],0xf
  41551e:	push   ds
  41551f:	cmc    
  415520:	(bad)  [edi]
  415522:	shr    DWORD PTR [edx-0x6c],cl
  415525:	pop    es
  415526:	mov    al,0x7e
  415528:	cli    
  415529:	ins    BYTE PTR es:[edi],dx
  41552a:	mov    esi,0xca60dc99
  41552f:	push   esi
  415530:	cmp    DWORD PTR [eax-0x266d426b],esi
  415536:	sti    
  415537:	cmp    bh,0x92
  41553a:	dec    ebp
  41553b:	inc    ebx
  41553c:	out    dx,al
  41553d:	daa    
  41553e:	jmp    0x80c6:0xa77f0bea
  415545:	xchg   edx,eax
  415546:	(bad)  
  415547:	inc    ebp
  415548:	out    0xbc,eax
  41554a:	iret   
  41554b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41554c:	hlt    
  41554d:	jmp    0x41550a
  41554f:	mov    bh,0xc5
  415551:	xchg   ebp,eax
  415552:	fist   WORD PTR [eax-0x26a39765]
  415558:	enter  0x7346,0x42
  41555c:	add    eax,0x561b238d
  415561:	lds    esi,FWORD PTR [ebx-0x1b]
  415564:	cmp    DWORD PTR [edi-0x8],0xf9b066be
  41556b:	sub    ecx,DWORD PTR [esi-0x733b43f0]
  415571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415573:	mov    ebp,0xd02771f9
  415578:	push   edx
  415579:	xchg   esi,eax
  41557a:	inc    esi
  41557b:	xor    eax,0x6ba12316
  415580:	daa    
  415581:	jo     0x41556e
  415583:	jne    0x415583
  415585:	mov    DWORD PTR [ecx+edx*1+0x56],edx
  415589:	(bad)  
  41558a:	xor    al,0x5
  41558c:	xchg   ebx,eax
  41558d:	xor    al,0x11
  41558f:	dec    edx
  415590:	cdq    
  415591:	bnd jmp 0x4155ad
  415594:	xor    al,0x39
  415596:	loop   0x41559f
  415598:	(bad)  
  415599:	arpl   WORD PTR [edi+0x43b317b2],bp
  41559f:	or     esi,DWORD PTR [ebx+0xb]
  4155a2:	inc    esp
  4155a3:	sbb    eax,0x8be64b34
  4155a8:	sub    BYTE PTR [eax+0x16],0xbd
  4155ac:	add    al,0x1
  4155ae:	and    BYTE PTR [ebp-0x44],cl
  4155b1:	lods   eax,DWORD PTR ds:[esi]
  4155b2:	xor    BYTE PTR [eax-0x21],al
  4155b5:	repnz or BYTE PTR [ebx],ch
  4155b8:	into   
  4155b9:	jmp    0x2fa093ca
  4155be:	retf   
  4155bf:	lock mov DWORD PTR [edi],ecx
  4155c2:	dec    esp
  4155c3:	pushf  
  4155c4:	retf   
  4155c5:	add    al,BYTE PTR [esi]
  4155c7:	ins    BYTE PTR es:[edi],dx
  4155c8:	inc    esi
  4155c9:	lea    ecx,[ecx-0x31]
  4155cc:	or     al,0x34
  4155ce:	inc    ecx
  4155cf:	aam    0x62
  4155d1:	mov    al,0x80
  4155d3:	popa   
  4155d4:	push   ss
  4155d5:	loope  0x4155a8
  4155d7:	bound  ebp,QWORD PTR [edi+0x7d68a06c]
  4155dd:	(bad)  
  4155de:	icebp  
  4155df:	xlat   BYTE PTR ds:[ebx]
  4155e0:	or     BYTE PTR [eax+0x328c5942],ch
  4155e6:	repnz cmc 
  4155e8:	mov    bh,0x12
  4155ea:	and    DWORD PTR [edx],esi
  4155ec:	and    BYTE PTR [edi+0x2f074e21],al
  4155f2:	adc    DWORD PTR [edi-0x1e],ebx
  4155f5:	adc    al,0xc5
  4155f7:	out    dx,eax
  4155f8:	scas   eax,DWORD PTR es:[edi]
  4155f9:	sbb    BYTE PTR [eax+edi*4-0xf01601],dl
  415600:	add    eax,0xb0d99cb4
  415605:	shl    BYTE PTR [ecx-0x13],0x86
  415609:	sub    cl,BYTE PTR [ebx+edi*4+0x9]
  41560d:	lock mov ebp,0xd7fc0641
  415613:	pop    ebp
  415614:	jne    0x41564b
  415616:	hlt    
  415617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415618:	xchg   dh,cl
  41561a:	xchg   edx,eax
  41561b:	and    esp,ecx
  41561d:	int3   
  41561e:	mov    ebp,0xbe790fa0
  415623:	inc    eax
  415624:	pop    ebx
  415625:	push   esi
  415626:	clc    
  415627:	xchg   ecx,eax
  415628:	inc    edx
  415629:	mov    ebx,0x2ebdffe6
  41562e:	mov    bh,0x2c
  415630:	mov    es,WORD PTR [edx+0x21]
  415633:	xor    al,0x44
  415635:	add    eax,0x8093d999
  41563a:	mov    eax,0x6c68181
  41563f:	sti    
  415640:	repnz add ch,BYTE PTR [eax+0x5d]
  415644:	pushf  
  415645:	test   eax,0xfe7b2ecd
  41564a:	sub    ah,BYTE PTR [esp+edx*1]
  41564d:	push   es
  41564e:	push   edx
  41564f:	not    DWORD PTR [ecx-0x80]
  415652:	cmp    BYTE PTR [esi],bl
  415654:	leave  
  415655:	cmp    eax,DWORD PTR [eax]
  415657:	adc    al,0x9d
  415659:	fistp  QWORD PTR [ebp+0x2a2a2a90]
  41565f:	shl    DWORD PTR [edx],cl
  415661:	or     DWORD PTR [ecx],esp
  415663:	push   cs
  415664:	xlat   BYTE PTR ds:[ebx]
  415665:	fs mov edi,0xf49760fc
  41566b:	repz (bad) 
  41566d:	cmc    
  41566e:	fist   DWORD PTR fs:[edi-0x23]
  415672:	and    al,0xa
  415674:	cmp    eax,0xc7cfc9db
  415679:	dec    esi
  41567a:	xor    BYTE PTR [ebx],0xb1
  41567d:	dec    edi
  41567e:	popf   
  41567f:	pop    edx
  415680:	inc    esi
  415681:	mov    dh,0xb5
  415683:	sub    ebp,DWORD PTR [ebx]
  415685:	es jle 0x4156f4
  415688:	push   cs
  415689:	sbb    BYTE PTR [ebp+ebp*4+0x15809993],0xe1
  415691:	xlat   BYTE PTR ds:[ebx]
  415692:	mov    bl,0xa1
  415694:	adc    al,0xfe
  415696:	(bad)  
  415697:	mov    ds:0x274f1f6e,eax
  41569c:	jo     0x41570c
  41569e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41569f:	xor    ch,dl
  4156a1:	ss add esi,ebx
  4156a4:	and    al,0x72
  4156a6:	inc    edx
  4156a7:	mov    esp,0x6a4be250
  4156ac:	stos   BYTE PTR es:[edi],al
  4156ad:	fwait
  4156ae:	daa    
  4156af:	push   cs
  4156b0:	sub    esp,DWORD PTR [ecx-0x46]
  4156b3:	fiadd  DWORD PTR [ebp-0x76]
  4156b6:	jb     0x415690
  4156b8:	sbb    BYTE PTR [ebp-0x42],ch
  4156bb:	push   ebx
  4156bc:	mov    BYTE PTR [esi],ah
  4156be:	xchg   edi,eax
  4156bf:	xchg   esp,eax
  4156c0:	mov    ch,0x91
  4156c2:	rcl    DWORD PTR [edx],0xd5
  4156c5:	pop    es
  4156c6:	mov    eax,ds:0x920d4c9e
  4156cb:	sbb    bh,bh
  4156cd:	mov    ecx,0x993521b9
  4156d2:	jb     0x415682
  4156d4:	inc    edx
  4156d5:	adc    ecx,edi
  4156d7:	push   ss
  4156d8:	inc    edi
  4156d9:	popa   
  4156da:	xor    al,0xb3
  4156dc:	adc    dh,BYTE PTR [ecx+0x20]
  4156df:	sub    edx,esp
  4156e1:	stc    
  4156e2:	push   0x4e5b1201
  4156e7:	mov    ebp,0x5b92c17
  4156ec:	inc    eax
  4156ed:	or     dh,dh
  4156ef:	push   es
  4156f0:	fbld   TBYTE PTR [edi]
  4156f2:	xor    BYTE PTR [ebx-0x66],bh
  4156f5:	dec    edi
  4156f6:	dec    edi
  4156f7:	jmp    0xe10073b7
  4156fc:	(bad)  
  4156fd:	sbb    eax,0x3b9cbaf9
  415702:	mov    eax,0x47a1c447
  415707:	pusha  
  415708:	mul    DWORD PTR [edx]
  41570a:	jp     0x4156f7
  41570c:	or     eax,0xeaf57e7c
  415711:	pop    esi
  415712:	fld    DWORD PTR [edx+0x1ae31000]
  415718:	aas    
  415719:	shr    BYTE PTR [edx],0x7e
  41571c:	stos   DWORD PTR es:[edi],eax
  41571d:	jae    0x4156a0
  41571f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  415721:	mov    cl,0x7e
  415723:	fimul  WORD PTR [eax-0x6596140]
  415729:	fidivr DWORD PTR ds:0x57de3fec
  41572f:	ret    0xc1be
  415732:	mov    cl,0x0
  415734:	push   es
  415735:	in     al,dx
  415736:	pop    ds
  415737:	adc    DWORD PTR [ebp+ebx*4+0x25dd524d],ecx
  41573e:	jmp    0xd411:0x69fc829c
  415745:	or     cl,BYTE PTR [edx]
  415747:	in     al,dx
  415748:	xchg   ebx,eax
  415749:	std    
  41574a:	in     eax,dx
  41574b:	pusha  
  41574c:	outs   dx,DWORD PTR ds:[si]
  41574e:	in     al,0xd8
  415750:	mov    cs:0x1592027a,eax
  415756:	aam    0xca
  415758:	es cli 
  41575a:	mov    ch,0x2a
  41575c:	pop    es
  41575d:	scas   al,BYTE PTR es:[edi]
  41575e:	push   esi
  41575f:	icebp  
  415760:	inc    esi
  415761:	xchg   ebx,eax
  415762:	or     DWORD PTR [eax+eiz*1+0x6c],0x23
  415767:	dec    ebx
  415768:	push   ebx
  415769:	add    eax,0xf337a14c
  41576e:	pop    edx
  41576f:	lods   al,BYTE PTR ds:[esi]
  415770:	push   es
  415771:	ins    BYTE PTR es:[edi],dx
  415772:	push   ss
  415773:	lods   eax,DWORD PTR ds:[esi]
  415774:	xchg   esp,eax
  415775:	inc    edx
  415776:	or     eax,0x92918fb9
  41577b:	in     eax,0xe1
  41577d:	push   0xfbe54087
  415782:	inc    eax
  415783:	pop    eax
  415784:	popa   
  415785:	retf   0xf2ce
  415788:	push   eax
  415789:	mov    al,BYTE PTR [ebp+0x57]
  41578c:	dec    ebp
  41578d:	(bad)  [edx-0x58]
  415790:	or     ebp,DWORD PTR [edx+0x72]
  415793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415794:	mov    DWORD PTR [ebp-0x2],0x1d8bf9fb
  41579b:	jnp    0x4157ef
  41579d:	ret    
  41579e:	cmp    ch,bl
  4157a0:	test   ch,al
  4157a2:	aaa    
  4157a3:	leave  
  4157a4:	je     0x415815
  4157a6:	adc    ebx,DWORD PTR [esi+edx*8]
  4157a9:	jecxz  0x415769
  4157ab:	push   ebx
  4157ac:	jmp    0x1a440fb1
  4157b1:	aad    0x8a
  4157b3:	sub    al,0x98
  4157b5:	mul    ax
  4157b8:	sti    
  4157b9:	mov    ecx,0x9d99d135
  4157be:	xchg   esi,eax
  4157bf:	pusha  
  4157c0:	cmp    dh,BYTE PTR [ecx-0x21d2dd00]
  4157c6:	mov    ss,WORD PTR [ebp+esi*2-0x1e16a112]
  4157cd:	mov    ds:0x68f99548,eax
  4157d2:	sbb    BYTE PTR [eax-0x25],bl
  4157d5:	jno    0x4157ab
  4157d7:	sbb    edx,esp
  4157d9:	inc    esi
  4157da:	(bad)  
  4157db:	clc    
  4157dc:	dec    ecx
  4157dd:	jle    0x415842
  4157df:	sbb    al,0x23
  4157e1:	or     edx,ebp
  4157e3:	mov    ebx,DWORD PTR [edi-0x7d]
  4157e6:	in     eax,dx
  4157e7:	pop    edx
  4157e8:	(bad)  
  4157e9:	or     esi,DWORD PTR [ebp+ebp*2+0x57]
  4157ed:	iret   
  4157ee:	add    cl,0x9
  4157f1:	lahf   
  4157f2:	xor    eax,0x85ee7895
  4157f7:	lea    eax,[edi+0x1af308b7]
  4157fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157fe:	xchg   esi,eax
  4157ff:	mov    esp,0x81dfcf33
  415804:	call   0xf23f:0x9b1c5adc
  41580b:	(bad)  
  41580c:	icebp  
  41580d:	mov    edx,0x62366d62
  415812:	cs inc esi
  415814:	sbb    bh,bh
  415816:	repz inc eax
  415818:	push   ebx
  415819:	jns    0x415847
  41581b:	pop    es
  41581c:	cdq    
  41581d:	adc    al,BYTE PTR [ecx]
  41581f:	sub    eax,0xf5bfdf85
  415824:	sub    edi,edi
  415826:	sbb    BYTE PTR [ebp-0x396b7e69],0xa8
  41582d:	xor    cl,al
  41582f:	fwait
  415830:	pop    ss
  415831:	or     DWORD PTR [ecx+0x19],edi
  415834:	push   esp
  415835:	jmp    0xcda26976
  41583a:	jmp    0x415810
  41583c:	popa   
  41583d:	pop    edi
  41583e:	jbe    0x41583a
  415840:	(bad)  
  415841:	cmp    DWORD PTR [edx-0x75],ebp
  415844:	xchg   edi,eax
  415845:	sbb    edx,ebx
  415847:	jnp    0x415839
  415849:	stc    
  41584a:	add    BYTE PTR [esi-0x2a],dl
  41584d:	rcl    BYTE PTR [eax-0x70b80bdb],0x17
  415854:	pop    ebp
  415855:	imul   DWORD PTR [esi]
  415857:	shr    DWORD PTR [ebp-0x4937372b],0x94
  41585e:	out    0x9c,eax
  415860:	in     al,0xe8
  415862:	xor    BYTE PTR [ebx],0x54
  415865:	std    
  415866:	xor    eax,0x7238b14e
  41586b:	aaa    
  41586c:	jg     0x415840
  41586e:	retf   0x3761
  415871:	push   0x48
  415873:	jne    0x415831
  415875:	push   edi
  415876:	cli    
  415877:	add    ch,BYTE PTR [edx+esi*1-0x53]
  41587b:	stos   BYTE PTR es:[edi],al
  41587c:	retf   0xdfd3
  41587f:	daa    
  415880:	sar    DWORD PTR [edx-0x6f],0xf6
  415884:	test   al,0x4f
  415886:	sti    
  415887:	inc    edi
  415888:	arpl   WORD PTR [ebx],ax
  41588a:	adc    edx,DWORD PTR [ecx-0x58]
  41588d:	gs mov bh,0xa7
  415890:	shl    eax,1
  415892:	sbb    ch,BYTE PTR [ecx+0x40]
  415895:	xchg   ecx,eax
  415896:	inc    DWORD PTR [edi]
  415898:	push   ebp
  415899:	jno    0x41588e
  41589b:	xchg   ebp,eax
  41589c:	out    dx,al
  41589d:	fistp  DWORD PTR [eax-0x15]
  4158a0:	mov    ds:0x8b04a400,al
  4158a5:	ror    esi,0xb2
  4158a8:	(bad)  
  4158a9:	push   esi
  4158aa:	addr16 xchg ecx,eax
  4158ac:	retf   0x844a
  4158af:	mov    edx,0xdcdb915
  4158b4:	jg     0x415851
  4158b6:	stos   BYTE PTR es:[edi],al
  4158b7:	aad    0x4e
  4158b9:	cmp    DWORD PTR [edi-0x7b],ecx
  4158bc:	imul   ebx,DWORD PTR [eax-0x45],0x5c
  4158c0:	jns    0x415859
  4158c2:	popa   
  4158c3:	pop    ds
  4158c4:	add    BYTE PTR [edi],bl
  4158c6:	aam    0x8a
  4158c8:	fist   DWORD PTR [eax]
  4158ca:	out    0xcb,al
  4158cc:	lock and dh,BYTE PTR [ecx]
  4158cf:	stos   DWORD PTR es:[edi],eax
  4158d0:	add    DWORD PTR [edx],esi
  4158d2:	es push ds
  4158d4:	jnp    0x4158e4
  4158d6:	mov    WORD PTR [esi-0x61],ds
  4158d9:	bound  esi,QWORD PTR [edi]
  4158db:	add    DWORD PTR [esp+0x4ae42cdc],eax
  4158e2:	mov    dh,0x6
  4158e4:	pop    ss
  4158e5:	mov    edi,0x511e25c2
  4158ea:	push   ecx
  4158eb:	popf   
  4158ec:	add    eax,0xa10bf46d
  4158f1:	pushf  
  4158f2:	mov    ds:0xcba79a98,eax
  4158f7:	mov    esp,0x4880f07b
  4158fc:	call   0xa8bb:0x272278f2
  415903:	icebp  
  415904:	ins    BYTE PTR es:[edi],dx
  415905:	inc    esp
  415906:	push   ebp
  415907:	jge    0x41596b
  415909:	add    eax,0xb0cc9a9d
  41590e:	fld    TBYTE PTR [ebx-0x103a229a]
  415914:	xor    BYTE PTR [eax+0x4ccff8ba],cl
  41591a:	loopne 0x41591d
  41591c:	call   0x59a1d98d
  415921:	cmp    esi,0x7a
  415924:	xchg   ebp,eax
  415925:	or     ebx,DWORD PTR [edi+0x571a6693]
  41592b:	mov    esi,?
  41592d:	inc    esi
  41592e:	xchg   ebp,eax
  41592f:	mov    ds:0xc0052790,eax
  415934:	out    dx,eax
  415935:	arpl   WORD PTR [edi-0x338da12d],bx
  41593b:	pop    esp
  41593c:	fnstcw WORD PTR [ecx+ebx*8]
  41593f:	cmp    dh,BYTE PTR [esi]
  415941:	hlt    
  415942:	add    edi,edx
  415944:	gs push esi
  415946:	xchg   ebp,eax
  415947:	lods   al,BYTE PTR ds:[esi]
  415948:	dec    esi
  415949:	mov    WORD PTR [ebp+0x20],ds
  41594c:	or     eax,0x891ca9ba
  415951:	xchg   DWORD PTR [ebx-0x29148ca0],ebp
  415957:	and    bl,BYTE PTR [ebx]
  415959:	pushf  
  41595a:	sub    al,0x7
  41595c:	fcos   
  41595e:	jl     0x415946
  415960:	cs push eax
  415962:	jae    0x41595c
  415964:	stos   DWORD PTR es:[edi],eax
  415965:	push   ebp
  415966:	sub    al,0x8c
  415968:	pop    ds
  415969:	mov    ebp,0x6a7b0a5e
  41596e:	fild   WORD PTR [esi+0xf41acae]
  415974:	test   BYTE PTR [edi-0x49],bh
  415977:	std    
  415978:	xchg   esi,eax
  415979:	cmp    dh,BYTE PTR [ecx]
  41597b:	dec    esp
  41597c:	mov    bl,0xe1
  41597e:	mov    ebx,0xb61c895f
  415983:	fimul  WORD PTR [ecx+0x2c]
  415986:	xor    al,0x89
  415988:	xor    DWORD PTR [edx+ecx*1+0x59ac169b],edi
  41598f:	cmp    BYTE PTR [ebp-0xc],dl
  415992:	sahf   
  415993:	sbb    eax,0x59bbd594
  415998:	js     0x4159f0
  41599a:	dec    eax
  41599b:	ret    
  41599c:	jbe    0x415943
  41599e:	cli    
  41599f:	shl    DWORD PTR [edi+0x1cd5adac],0xad
  4159a6:	lods   al,BYTE PTR ds:[esi]
  4159a7:	bound  edx,QWORD PTR [esi-0x39]
  4159aa:	add    al,0x4c
  4159ac:	and    cl,cl
  4159ae:	ins    DWORD PTR es:[edi],dx
  4159af:	inc    esi
  4159b0:	and    al,0xf9
  4159b2:	mov    edx,0x8bf28b6c
  4159b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159b8:	ret    0xc711
  4159bb:	mov    eax,0xf290fc07
  4159c0:	repnz inc edi
  4159c2:	fstp   DWORD PTR [eax-0x4c]
  4159c5:	stc    
  4159c6:	add    al,dh
  4159c8:	sbb    DWORD PTR [ecx],ebp
  4159ca:	xor    eax,0xdc7b4049
  4159cf:	mov    al,ds:0xb0094b62
  4159d4:	mov    ecx,0xa480bf32
  4159d9:	clts   
  4159db:	ret    
  4159dc:	jne    0x415988
  4159de:	dec    ebx
  4159df:	and    edi,esi
  4159e1:	imul   ebx,eax,0x5c
  4159e4:	jg     0x415a00
  4159e6:	jge    0x4159a5
  4159e8:	cmp    al,0x87
  4159ea:	rcl    BYTE PTR [ebp-0x18],1
  4159ed:	(bad)  
  4159ee:	push   eax
  4159ef:	cli    
  4159f0:	idiv   ch
  4159f2:	aam    0xc1
  4159f4:	push   esi
  4159f5:	(bad)  
  4159f6:	mov    WORD PTR ss:[esi+eiz*2-0x33],?
  4159fb:	inc    ebx
  4159fc:	or     al,0x40
  4159fe:	stos   DWORD PTR es:[edi],eax
  4159ff:	add    bh,ah
  415a01:	xor    DWORD PTR [ebx+0x44f3c808],edi
  415a07:	hlt    
  415a08:	push   es
  415a09:	mov    al,0x95
  415a0b:	cmp    BYTE PTR [ecx+0x50],bh
  415a0e:	nop
  415a0f:	inc    edi
  415a10:	(bad)  
  415a11:	pop    esi
  415a12:	clc    
  415a13:	loop   0x4159c0
  415a15:	push   eax
  415a16:	test   DWORD PTR [eax],esp
  415a18:	push   ebp
  415a19:	mov    al,0x1e
  415a1b:	add    al,BYTE PTR [ebx+eax*1-0x7f8d6a04]
  415a22:	iret   
  415a23:	dec    edx
  415a24:	mov    ds:0x1c28a07f,eax
  415a29:	sub    eax,DWORD PTR [ebx]
  415a2b:	gs dec ebx
  415a2d:	mov    esi,0x4358f3b2
  415a32:	pop    es
  415a33:	inc    edx
  415a34:	pop    edi
  415a35:	mov    esp,0x5ba280b9
  415a3a:	jl     0x415a85
  415a3c:	add    al,0x41
  415a3e:	iret   
  415a3f:	push   0x680ce947
  415a44:	dec    ebp
  415a45:	mov    ds:0xf0117416,eax
  415a4a:	pop    eax
  415a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4c:	fcom   DWORD PTR [edi+eiz*4]
  415a4f:	test   BYTE PTR [esi+0x7054eee1],cl
  415a55:	outs   dx,DWORD PTR ds:[esi]
  415a56:	adc    al,0x70
  415a58:	inc    eax
  415a59:	mov    esp,0x5a41bc73
  415a5e:	lock int 0x45
  415a61:	xchg   dl,dh
  415a63:	push   0xfffffff3
  415a65:	sbb    al,0xf0
  415a67:	push   0x9b845f62
  415a6c:	lahf   
  415a6d:	mov    cl,0x28
  415a6f:	inc    edx
  415a70:	add    bl,ch
  415a72:	push   ecx
  415a73:	sub    al,0x9a
  415a75:	rcl    DWORD PTR [ebp+0x7334f456],1
  415a7b:	mov    ebp,?
  415a7d:	push   es
  415a7e:	jno    0x415aa1
  415a80:	sar    edi,0xa6
  415a83:	mov    edi,0xc0fbac4f
  415a88:	mov    WORD PTR ds:0x9cd7de77,ss
  415a8e:	inc    eax
  415a8f:	push   ecx
  415a90:	sub    esi,edx
  415a92:	jmp    0x415a7c
  415a94:	pop    ds
  415a95:	jecxz  0x415a9f
  415a97:	aad    0xe7
  415a99:	pop    esp
  415a9a:	inc    eax
  415a9b:	pop    edi
  415a9c:	repz aaa 
  415a9e:	sub    BYTE PTR gs:[ebp+0x7a],al
  415aa2:	jmp    0x415a93
  415aa4:	xor    al,0x83
  415aa6:	add    ax,0x5170
  415aaa:	daa    
  415aab:	bswap  eax
  415aad:	add    eax,0xe4f6ca0
  415ab2:	ja     0x415b10
  415ab4:	inc    esi
  415ab5:	inc    edx
  415ab6:	add    BYTE PTR [ebx],0xb6
  415ab9:	cmp    DWORD PTR [edi-0x75],ebp
  415abc:	in     eax,dx
  415abd:	add    BYTE PTR [ebx+0x1a],dh
  415ac0:	push   ebp
  415ac1:	into   
  415ac2:	adc    DWORD PTR [esi],0xfc813d1d
  415ac8:	cmc    
  415ac9:	sahf   
  415aca:	in     al,dx
  415acb:	ins    BYTE PTR es:[edi],dx
  415acc:	xchg   esp,eax
  415acd:	js     0x415ac2
  415acf:	sub    BYTE PTR [edi+0x7b0d9ccf],dh
  415ad5:	lahf   
  415ad6:	dec    edx
  415ad7:	mov    eax,0xb18f77c0
  415adc:	mov    ecx,0x710d830f
  415ae1:	into   
  415ae2:	pop    ebp
  415ae3:	mov    ebp,0xe4f745be
  415ae8:	jmp    0x4633:0xae4b3d5f
  415aef:	sub    ah,BYTE PTR [esi]
  415af1:	sbb    al,0x49
  415af3:	sbb    BYTE PTR [eax-0x6acf7369],ch
  415af9:	inc    esi
  415afa:	adc    ch,BYTE PTR [esi+0x59fc0993]
  415b00:	push   ds
  415b01:	outs   dx,DWORD PTR cs:[esi]
  415b03:	ds ret 
  415b05:	out    dx,eax
  415b06:	fiadd  WORD PTR [edx+0x69f2ae73]
  415b0c:	inc    ebp
  415b0d:	push   eax
  415b0e:	add    dh,dh
  415b10:	fiadd  DWORD PTR [ecx-0x19]
  415b13:	jmp    0x1d95:0x4aa44934
  415b1a:	stc    
  415b1b:	mov    bl,0x61
  415b1d:	dec    edx
  415b1e:	lahf   
  415b1f:	(bad)  
  415b20:	scas   eax,DWORD PTR es:[edi]
  415b21:	pop    es
  415b22:	sbb    DWORD PTR [ebp-0x1d3d6e8b],ebx
  415b28:	add    ebx,edx
  415b2a:	cmp    dh,BYTE PTR [ebx+0xd0d3df2]
  415b30:	push   edi
  415b31:	scas   al,BYTE PTR es:[edi]
  415b32:	fild   WORD PTR [ebx+ebx*2-0x41]
  415b36:	xchg   BYTE PTR [ebp-0x21317765],bl
  415b3c:	jge    0x415acb
  415b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b3f:	into   
  415b40:	(bad)  
  415b42:	addr16 cld 
  415b44:	xor    ebp,DWORD PTR [eax-0x7b]
  415b47:	into   
  415b48:	mov    eax,DWORD PTR ds:0x95793d57
  415b4e:	inc    ebp
  415b4f:	sbb    al,BYTE PTR [ebp+0x50133ed4]
  415b55:	adc    eax,0x61211fd2
  415b5a:	pop    edx
  415b5b:	jo     0x415b9d
  415b5d:	cdq    
  415b5e:	add    ecx,DWORD PTR [esi+0x62]
  415b61:	(bad)  
  415b63:	mov    dh,0xff
  415b65:	mov    edx,0x5a534de1
  415b6a:	pushf  
  415b6b:	mov    cl,0xac
  415b6d:	push   0xffffffb4
  415b6f:	popf   
  415b70:	push   0xc1ecddf9
  415b75:	xor    esi,eax
  415b77:	xchg   ebx,eax
  415b78:	mov    bl,0xc0
  415b7a:	jl     0x415b51
  415b7c:	inc    esi
  415b7d:	retf   0xa472
  415b80:	popa   
  415b81:	or     DWORD PTR [edx+0x59],eax
  415b84:	call   DWORD PTR [edx-0x7c07fcd5]
  415b8a:	xchg   DWORD PTR [eax],ebp
  415b8c:	fsubr  DWORD PTR [edi+eax*1-0x433b1d3f]
  415b93:	(bad)  
  415b94:	inc    edx
  415b95:	xchg   ebx,eax
  415b96:	pop    ss
  415b97:	jecxz  0x415bef
  415b99:	mov    eax,0x7032d130
  415b9e:	adc    cl,BYTE PTR [esi+0x37945c55]
  415ba4:	xchg   edx,eax
  415ba5:	lds    ecx,FWORD PTR ds:0x47c7a695
  415bab:	xchg   edi,eax
  415bac:	fwait
  415bad:	or     edi,DWORD PTR [eax+0x3c7e99a4]
  415bb3:	int3   
  415bb4:	(bad)  
  415bb5:	leave  
  415bb6:	mov    esi,DWORD PTR ss:[ebx+ebp*1-0x41c43306]
  415bbe:	retf   
  415bbf:	(bad)
  415bc2:	or     BYTE PTR [ebx-0x3b],0x60
  415bc6:	mov    ah,0x52
  415bc8:	or     WORD PTR [eax-0x579aed64],sp
  415bcf:	xchg   ecx,eax
  415bd0:	push   ss
  415bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bd2:	int3   
  415bd3:	push   ebp
  415bd4:	daa    
  415bd5:	and    esp,DWORD PTR [edi+0x1d095b2a]
  415bdb:	cmp    ah,BYTE PTR [edi-0x35379563]
  415be1:	fisub  WORD PTR [edi]
  415be3:	nop
  415be4:	or     eax,0x9e033433
  415be9:	sub    bl,bh
  415beb:	aam    0x77
  415bed:	nop
  415bee:	add    BYTE PTR ds:0x77e6b6cb,ch
  415bf4:	sub    eax,0xb91bb329
  415bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bfa:	dec    esi
  415bfb:	pop    ecx
  415bfc:	push   ecx
  415bfd:	into   
  415bfe:	cld    
  415bff:	pop    ebx
  415c00:	add    DWORD PTR [eax-0x77c04e00],eax
  415c06:	pop    eax
  415c07:	jl     0x415c73
  415c09:	push   edx
  415c0a:	ds jp  0x415c5b
  415c0d:	inc    esp
  415c0e:	sbb    ecx,0xd42d8b26
  415c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c15:	xor    ebp,0x91fbcf6
  415c1b:	or     BYTE PTR [eax+0xbc1827e],0xe
  415c22:	cwde   
  415c23:	cld    
  415c24:	cmc    
  415c25:	cwde   
  415c26:	ds sub ebx,ecx
  415c29:	mov    al,cs:0x6c5838b6
  415c2f:	test   eax,0xb077199a
  415c34:	hlt    
  415c35:	add    cl,BYTE PTR [ecx-0x64]
  415c38:	sub    DWORD PTR [edx],0xe1202f22
  415c3e:	cmp    edi,esp
  415c40:	imul   esi,DWORD PTR [eax+0x16],0x619be05
  415c47:	adc    eax,0x5562e203
  415c4c:	retf   0x1139
  415c4f:	push   edx
  415c50:	cmp    dl,BYTE PTR [eax-0x47]
  415c53:	sub    al,BYTE PTR [ecx+ebx*8+0x34]
  415c57:	je     0x415c33
  415c59:	imul   DWORD PTR [esi]
  415c5b:	(bad)  
  415c5c:	in     eax,dx
  415c5d:	inc    edi
  415c5e:	or     esp,esp
  415c60:	enter  0x397,0x13
  415c64:	xor    edx,DWORD PTR [bx+si-0x382d]
  415c69:	(bad)  
  415c6a:	cmp    BYTE PTR [ebp+0x40],bh
  415c6d:	and    DWORD PTR [ecx+eax*4+0x7f],edi
  415c71:	mov    al,ds:0xe5e4406
  415c76:	pop    esp
  415c77:	dec    DWORD PTR [esi-0x1f840eac]
  415c7d:	xor    al,0x21
  415c7f:	mov    dl,BYTE PTR [esi-0x13]
  415c82:	in     eax,dx
  415c83:	into   
  415c84:	mov    bl,0x78
  415c86:	loop   0x415cc8
  415c88:	jge    0x415c74
  415c8a:	retf   0x8c12
  415c8d:	pop    edx
  415c8e:	mov    eax,ds:0x1d22ca2e
  415c93:	(bad)  
  415c95:	inc    esi
  415c96:	adc    cl,ah
  415c98:	js     0x415c42
  415c9a:	or     dh,ch
  415c9c:	inc    edx
  415c9d:	retf   
  415c9e:	inc    edi
  415c9f:	inc    esi
  415ca0:	mov    edx,0xf488be7
  415ca5:	cmp    eax,0x56ab031c
  415caa:	pop    es
  415cab:	fisttp DWORD PTR [ebp+0x63b3d3ff]
  415cb1:	xor    bh,ah
  415cb3:	pop    ebp
  415cb4:	lods   al,BYTE PTR ds:[esi]
  415cb5:	xor    eax,0x52c2a7de
  415cba:	pop    es
  415cbb:	cmp    bh,ah
  415cbd:	xchg   esp,eax
  415cbe:	(bad)  [ebx+0x32]
  415cc1:	cmp    DWORD PTR [esi+0x4f],esi
  415cc4:	addr16 push ebp
  415cc6:	gs push 0xba37637e
  415ccc:	jns    0x415cc1
  415cce:	push   0xffffffb0
  415cd0:	mov    eax,ds:0xc35cb8fc
  415cd5:	push   es
  415cd6:	pop    es
  415cd7:	cwde   
  415cd8:	aad    0xe0
  415cda:	dec    esp
  415cdb:	sub    BYTE PTR [ebp+0x7194d4f5],al
  415ce1:	scas   eax,DWORD PTR es:[edi]
  415ce2:	cmp    bh,dl
  415ce4:	out    0x34,al
  415ce6:	icebp  
  415ce7:	sub    esp,eax
  415ce9:	shl    BYTE PTR [ecx+0x68],0xdd
  415ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cee:	imul   ecx,DWORD PTR [ecx+0x4f],0x9b6d0d9f
  415cf5:	pop    edx
  415cf6:	or     esp,eax
  415cf8:	loope  0x415d76
  415cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cfb:	xchg   ebx,eax
  415cfc:	jle    0x415cc3
  415cfe:	jle    0x415d27
  415d00:	xchg   ebp,eax
  415d01:	int3   
  415d02:	cmp    BYTE PTR [ebp-0x1f0c9d81],ch
  415d08:	and    al,0x5
  415d0a:	xchg   ecx,eax
  415d0b:	stc    
  415d0c:	(bad)  
  415d0d:	lods   eax,DWORD PTR ds:[esi]
  415d0e:	pusha  
  415d0f:	icebp  
  415d10:	jbe    0x415d72
  415d12:	push   esi
  415d13:	pop    edx
  415d14:	or     al,0xc1
  415d16:	js     0x415caf
  415d18:	cmp    eax,0x4f43739
  415d1d:	sbb    al,BYTE PTR [ebp-0x63d47a3c]
  415d23:	add    ebp,DWORD PTR [ebp+0x0]
  415d26:	add    edi,DWORD PTR [eax+0x19]
  415d29:	idiv   esp
  415d2b:	ret    
  415d2c:	lods   al,BYTE PTR ds:[esi]
  415d2d:	dec    esi
  415d2e:	jno    0x415d81
  415d30:	pop    edx
  415d31:	(bad)  
  415d32:	mov    ebx,0x94c1b737
  415d37:	add    eax,0x3697b5b1
  415d3c:	out    0xfe,al
  415d3e:	inc    esi
  415d3f:	push   ss
  415d40:	xor    DWORD PTR [edx+0x271c9d8b],edi
  415d46:	shl    DWORD PTR [eax+0x16a42db0],1
  415d4c:	imul   esi,DWORD PTR [ebx-0x3104724e],0x9d8da593
  415d56:	mov    es,WORD PTR [esi]
  415d58:	cmp    DWORD PTR [ecx+0x63],esp
  415d5b:	cli    
  415d5c:	cmp    eax,0xddf124b8
  415d61:	loop   0x415dd0
  415d63:	inc    esp
  415d64:	rcl    ecx,cl
  415d66:	shl    DWORD PTR [esi+0x1b3ff573],1
  415d6c:	mov    edi,0xd0997036
  415d71:	pop    edi
  415d72:	popa   
  415d73:	cmp    BYTE PTR [edx+0x79],ch
  415d76:	adc    bl,al
  415d78:	cdq    
  415d79:	std    
  415d7a:	add    al,BYTE PTR [ebp+0x14]
  415d7d:	sbb    eax,0x407a0794
  415d82:	sahf   
  415d83:	aaa    
  415d84:	and    cl,BYTE PTR [ebp-0x44]
  415d87:	add    al,0xdf
  415d89:	mov    ds:0x9503aa7d,eax
  415d8e:	sub    ebx,DWORD PTR [edx-0x38]
  415d91:	jnp    0x415ddc
  415d93:	in     al,dx
  415d94:	aam    0x5f
  415d96:	xchg   esp,eax
  415d97:	(bad)  
  415d98:	sub    cl,BYTE PTR [eax]
  415d9a:	cld    
  415d9b:	(bad)  
  415d9c:	ds int 0xe8
  415d9f:	outs   dx,BYTE PTR ds:[esi]
  415da0:	cwde   
  415da1:	xor    ebx,esp
  415da3:	fst    st(4)
  415da5:	loop   0x415da6
  415da7:	mov    WORD PTR [ebp-0x28ab6149],fs
  415dad:	outs   dx,BYTE PTR ds:[esi]
  415dae:	mov    ebp,0xf6f94f90
  415db3:	jno    0x415d4b
  415db5:	dec    edx
  415db6:	mov    cl,0xe9
  415db8:	push   0xc76aa245
  415dbd:	mov    ch,0x6e
  415dbf:	ror    BYTE PTR [ebx-0x2c],cl
  415dc2:	out    0xd0,al
  415dc4:	mov    ecx,0xc0a5443a
  415dc9:	push   esi
  415dca:	mov    dh,0xf1
  415dcc:	in     al,0x17
  415dce:	and    al,0xf8
  415dd0:	lahf   
  415dd1:	adc    ebx,ecx
  415dd3:	in     eax,0x2a
  415dd5:	daa    
  415dd6:	popf   
  415dd7:	aam    0x8f
  415dd9:	scas   al,BYTE PTR es:[edi]
  415dda:	rol    DWORD PTR [ebp-0x19],0x98
  415dde:	cld    
  415ddf:	aad    0x86
  415de1:	in     eax,0x8d
  415de3:	aas    
  415de4:	sti    
  415de5:	sbb    esi,DWORD PTR [ecx-0x3a]
  415de8:	test   BYTE PTR ds:0x39cfca7d,al
  415dee:	mov    ch,0xd2
  415df0:	sub    eax,0xde0ead6
  415df5:	push   ss
  415df6:	pop    ecx
  415df7:	test   BYTE PTR [edi-0x30],bh
  415dfa:	cmp    al,0x29
  415dfc:	ror    cl,cl
  415dfe:	jl     0x415ddc
  415e00:	(bad)  
  415e01:	sbb    BYTE PTR [ebp+0x4a],ch
  415e04:	loop   0x415d8f
  415e06:	mov    cl,0xa
  415e08:	cmp    al,dl
  415e0a:	ins    BYTE PTR es:[edi],dx
  415e0b:	aam    0x60
  415e0d:	pop    esi
  415e0e:	stos   DWORD PTR es:[edi],eax
  415e0f:	mov    ds:0xb1d2a682,al
  415e14:	jae    0x415da4
  415e16:	pop    ebp
  415e17:	or     ah,BYTE PTR [edi-0x534e3ed4]
  415e1d:	std    
  415e1e:	in     eax,dx
  415e1f:	xchg   ecx,eax
  415e20:	das    
  415e21:	lods   al,BYTE PTR ds:[esi]
  415e22:	or     BYTE PTR ds:0xb0efb10f,bh
  415e28:	repz or esp,DWORD PTR [esi+ecx*4+0x7b]
  415e2d:	dec    ecx
  415e2e:	ss mov edi,0x34eeb61f
  415e34:	sahf   
  415e35:	adc    BYTE PTR [ebp+0x7312461a],bl
  415e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e3c:	cmp    edi,eax
  415e3e:	cmp    BYTE PTR [eax+0x22d21b50],cl
  415e44:	or     eax,edi
  415e46:	push   ebx
  415e47:	mov    cl,BYTE PTR [edx+0x30638964]
  415e4d:	xchg   DWORD PTR [ebx+eiz*8],edi
  415e50:	idiv   ebp
  415e52:	rol    DWORD PTR [ebx-0x5a],0x59
  415e56:	cmp    dl,BYTE PTR [ebx]
  415e58:	and    bl,BYTE PTR [eax-0x5a61233c]
  415e5e:	lods   al,BYTE PTR ds:[esi]
  415e5f:	mov    eax,ds:0x9c7347b1
  415e64:	popa   
  415e65:	mov    edi,0x93571430
  415e6a:	add    eax,ebp
  415e6c:	iret   
  415e6d:	sahf   
  415e6e:	xchg   esi,eax
  415e6f:	sbb    eax,0x931a7d9c
  415e74:	xor    al,0x70
  415e76:	jb     0x415e56
  415e78:	(bad)  
  415e79:	(bad)  
  415e7a:	cli    
  415e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e7c:	ret    
  415e7d:	pop    esp
  415e7e:	scas   eax,DWORD PTR es:[edi]
  415e7f:	ret    
  415e80:	fld    DWORD PTR [edx-0x3a]
  415e83:	outs   dx,BYTE PTR ds:[esi]
  415e84:	test   eax,0x6cfb81e4
  415e89:	dec    BYTE PTR [esp+ebp*2]
  415e8c:	add    DWORD PTR [ebx+0x6a88ac1a],ebp
  415e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e93:	cmc    
  415e94:	nop
  415e95:	data16 js 0x415e9a
  415e98:	mov    BYTE PTR [ecx+0x71],dl
  415e9b:	pop    eax
  415e9c:	lods   al,BYTE PTR ds:[esi]
  415e9d:	jnp    0x415ed7
  415e9f:	xchg   esi,eax
  415ea0:	pop    eax
  415ea1:	mov    gs,edx
  415ea3:	loopne 0x415e9d
  415ea5:	rol    DWORD PTR [ecx],cl
  415ea7:	nop
  415ea8:	xor    eax,0x10a0758d
  415ead:	add    edi,ecx
  415eaf:	jae    0x415e4b
  415eb1:	and    eax,0x3690523e
  415eb6:	jmp    FWORD PTR [edx+0x52]
  415eb9:	fadd   DWORD PTR [ebp+0x31692778]
  415ebf:	mov    eax,ds:0x6ba60cc6
  415ec5:	int    0xbd
  415ec7:	mov    ebx,DWORD PTR ds:0x9c6d919e
  415ecd:	mov    ecx,0x94fcba03
  415ed2:	xor    eax,0xc19db1ae
  415ed7:	sbb    ch,BYTE PTR [edx-0x5da691a6]
  415edd:	cmp    cl,BYTE PTR [ecx+0x1156471a]
  415ee3:	mov    bh,0x85
  415ee5:	sbb    al,0x45
  415ee7:	or     ch,0x34
  415eea:	jmp    0x433942d9
  415eef:	icebp  
  415ef0:	std    
  415ef1:	push   esi
  415ef2:	push   esp
  415ef3:	or     esp,esi
  415ef5:	mov    dl,0xdb
  415ef7:	xor    esi,ebx
  415ef9:	mov    ebx,0x6efd6326
  415efe:	loopne 0x415f50
  415f00:	(bad)  
  415f01:	sub    DWORD PTR [eax],ecx
  415f03:	push   0x95948c73
  415f08:	xchg   edi,eax
  415f09:	and    DWORD PTR [ebx-0x3df358e7],ecx
  415f0f:	mov    dl,0xe6
  415f11:	mov    al,ds:0x21c20a9e
  415f16:	ret    
  415f17:	xchg   ecx,eax
  415f18:	loope  0x415f49
  415f1a:	xchg   ebx,eax
  415f1b:	push   ecx
  415f1c:	dec    ecx
  415f1d:	sar    ah,cl
  415f1f:	cmc    
  415f20:	push   edx
  415f21:	das    
  415f22:	jno    0x415f8b
  415f24:	or     DWORD PTR [edx-0x54],ebp
  415f27:	leave  
  415f28:	cmp    al,0x19
  415f2a:	cmp    DWORD PTR [edi-0x700a352e],ebx
  415f30:	cmp    DWORD PTR [edi+0x8],esp
  415f33:	in     al,0x46
  415f35:	xchg   edi,eax
  415f36:	push   DWORD PTR ds:0xf8da96dc
  415f3c:	dec    ecx
  415f3d:	in     eax,dx
  415f3e:	into   
  415f3f:	pop    edx
  415f40:	aam    0x84
  415f42:	idiv   DWORD PTR [edx+ebx*4]
  415f45:	sbb    eax,0x4e0394c2
  415f4a:	xchg   ebx,eax
  415f4b:	push   es
  415f4c:	pusha  
  415f4d:	aaa    
  415f4e:	pop    ss
  415f4f:	retf   0xc7a1
  415f52:	cli    
  415f53:	fsub   DWORD PTR [eax+0x24defa9a]
  415f59:	mov    ch,0x67
  415f5b:	cs pop edx
  415f5d:	and    DWORD PTR [ebp+0x14],ebp
  415f60:	dec    ebx
  415f61:	in     eax,0x63
  415f63:	mov    ebp,ecx
  415f65:	dec    esp
  415f66:	repnz (bad) 
  415f68:	pusha  
  415f69:	dec    ebx
  415f6a:	cli    
  415f6b:	aaa    
  415f6c:	popa   
  415f6d:	sbb    ah,BYTE PTR [esi+edi*1-0x6f]
  415f71:	xchg   ecx,eax
  415f72:	out    dx,al
  415f73:	fsubrp st(2),st
  415f75:	push   ecx
  415f76:	or     al,BYTE PTR [eax]
  415f78:	push   ecx
  415f79:	in     al,0xf5
  415f7b:	cli    
  415f7c:	shr    BYTE PTR [ecx-0x20],cl
  415f7f:	xrelease mov DWORD PTR [ebp+0x4cf0945],edx
  415f86:	xchg   ebp,eax
  415f87:	pop    esi
  415f88:	pop    esp
  415f89:	das    
  415f8a:	sbb    DWORD PTR ds:0x403b87c3,ebp
  415f90:	pop    ecx
  415f91:	mov    esi,0xfdf369fa
  415f96:	mov    cl,0xec
  415f98:	sub    ecx,DWORD PTR [ebx]
  415f9a:	dec    ebp
  415f9b:	mov    ds:0x4f35940b,al
  415fa0:	out    0x42,eax
  415fa2:	cmp    ah,al
  415fa4:	or     DWORD PTR [edx],edi
  415fa6:	ins    BYTE PTR es:[edi],dx
  415fa7:	pop    edi
  415fa8:	xchg   edx,eax
  415fa9:	adc    DWORD PTR [edx+edi*2-0x6a],esp
  415fad:	or     ah,BYTE PTR [edx]
  415faf:	aam    0xa4
  415fb1:	adc    ebx,DWORD PTR [esi+edi*8]
  415fb4:	mov    ?,WORD PTR [edi-0x71]
  415fb7:	ins    BYTE PTR es:[edi],dx
  415fb8:	xchg   ecx,eax
  415fb9:	mov    esi,DWORD PTR [ecx]
  415fbb:	mov    esi,0x1b29d881
  415fc0:	repnz test ah,0xe2
  415fc4:	fdivp  st(5),st
  415fc6:	clc    
  415fc7:	mov    ah,0x93
  415fc9:	mov    cl,0xe2
  415fcb:	push   0x77cc0efd
  415fd0:	cmc    
  415fd1:	sbb    eax,0x3db48e02
  415fd6:	mov    al,ds:0x7156210b
  415fdb:	jnp    0x415fab
  415fdd:	pop    ebx
  415fde:	xchg   esi,eax
  415fdf:	jg     0x415fdf
  415fe1:	mov    eax,ds:0x2666b06
  415fe6:	pop    ss
  415fe7:	inc    esi
  415fe8:	add    edx,eax
  415fea:	push   0xffffff95
  415fec:	sbb    bh,BYTE PTR [edi]
  415fee:	les    esp,FWORD PTR [edi]
  415ff0:	xlat   BYTE PTR ds:[ebx]
  415ff1:	xor    DWORD PTR [ebx+edi*4],ecx
  415ff4:	jmp    0x904:0x414e4241
  415ffb:	add    eax,0x2e2e843e
  416000:	dec    ebp
  416001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416002:	jo     0x416080
  416004:	push   ss
  416005:	and    eax,0x8ea6f998
  41600a:	fcmovne st,st(5)
  41600c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41600d:	jae    0x415feb
  41600f:	push   0xa8ce52e2
  416014:	push   ss
  416015:	adc    eax,0xc8bc958
  41601a:	imul   ebx,DWORD PTR [ebp+0x73],0xc
  41601e:	xlat   BYTE PTR ds:[ebx]
  41601f:	and    esi,ecx
  416021:	mov    ebp,0xc8787b2a
  416026:	lahf   
  416027:	cdq    
  416028:	mov    al,0x99
  41602a:	aad    0x5f
  41602c:	je     0x416026
  41602e:	sub    edi,DWORD PTR [edi]
  416030:	shl    BYTE PTR [esi+0x57],1
  416033:	xor    BYTE PTR [esi+ebp*4+0x67],ah
  416037:	mov    eax,gs:0xd50d7840
  41603d:	cmp    BYTE PTR [ebx+0x8],ah
  416040:	add    eax,0x14dc045
  416045:	ror    BYTE PTR ss:[esi],0x31
  416049:	bound  ebx,QWORD PTR [eax+0x45ed9507]
  41604f:	dec    esp
  416050:	pusha  
  416051:	in     eax,dx
  416052:	mov    al,0x7d
  416054:	inc    edi
  416055:	cwde   
  416056:	mov    esi,0x8025632f
  41605b:	loope  0x4160b8
  41605d:	pop    ss
  41605e:	dec    edi
  41605f:	retf   
  416060:	jl     0x415ff5
  416062:	xor    esp,0x471c02f4
  416068:	fucompp 
  41606a:	(bad)
  41606d:	aam    0xc1
  41606f:	sbb    al,0xcf
  416071:	ins    DWORD PTR es:[edi],dx
  416072:	mov    cl,0xf9
  416074:	mov    bh,0xfe
  416076:	jns    0x4160a1
  416078:	adc    DWORD PTR [edi-0x186d130f],esi
  41607e:	xlat   BYTE PTR ds:[ebx]
  41607f:	pop    ds
  416080:	dec    edi
  416081:	loope  0x4160e6
  416083:	dec    esi
  416084:	mov    ebx,0x127844b9
  416089:	inc    ebx
  41608a:	gs pop es
  41608c:	aad    0x27
  41608e:	lea    edx,[ecx+0x78]
  416091:	push   0x4c
  416093:	cmp    bh,BYTE PTR [eax-0x2b]
  416096:	xor    DWORD PTR [edx],ebx
  416098:	xor    al,0x3b
  41609a:	imul   esp,ebx,0x203d7c56
  4160a0:	ins    BYTE PTR es:[edi],dx
  4160a1:	jbe    0x416079
  4160a3:	dec    esp
  4160a4:	inc    eax
  4160a5:	add    ebp,DWORD PTR [eax+edi*2+0x5e5dcdb5]
  4160ac:	and    eax,0x9d28636
  4160b1:	xchg   BYTE PTR [edi+0x4d],dh
  4160b4:	sub    esi,DWORD PTR [ebp-0x32]
  4160b7:	pop    ss
  4160b8:	fucomi st,st(3)
  4160ba:	add    DWORD PTR [edx-0x20],ebp
  4160bd:	cmp    dl,cl
  4160bf:	int    0x67
  4160c1:	or     al,0x3f
  4160c3:	mov    al,0x55
  4160c5:	dec    edi
  4160c6:	fimul  WORD PTR [edx+0x56]
  4160c9:	jmp    0x7b08:0x58aff71c
  4160d0:	iret   
  4160d1:	mov    ds:0x37a82a66,al
  4160d6:	jg     0x41614c
  4160d8:	repnz add bh,BYTE PTR [edx-0x6c473dc]
  4160df:	push   0x4d81f87a
  4160e4:	in     eax,dx
  4160e5:	sti    
  4160e6:	pop    ss
  4160e7:	push   ebx
  4160e8:	jle    0x416076
  4160ea:	in     al,0x33
  4160ec:	out    dx,al
  4160ed:	(bad)  
  4160ee:	and    DWORD PTR [ecx],0x35
  4160f1:	aam    0x4f
  4160f3:	push   ebp
  4160f4:	sub    DWORD PTR [esi],ecx
  4160f6:	mov    dl,0xc8
  4160f8:	or     eax,0x7a746935
  4160fd:	test   al,0x46
  4160ff:	adc    ebp,DWORD PTR [eax]
  416101:	popa   
  416102:	inc    ecx
  416103:	out    0x26,eax
  416105:	ret    0x63de
  416108:	sub    esi,DWORD PTR [edx+0x15e65ed2]
  41610e:	xor    edi,DWORD PTR [esi]
  416110:	cmp    eax,0x62624155
  416115:	test   dh,bl
  416117:	pop    edx
  416118:	xchg   ecx,eax
  416119:	inc    ebx
  41611a:	jle    0x416125
  41611c:	pop    ds
  41611d:	dec    ebp
  41611e:	outs   dx,DWORD PTR ds:[esi]
  41611f:	inc    esi
  416120:	sub    cl,dl
  416122:	mov    al,ds:0xdc35412
  416127:	je     0x416192
  416129:	mov    ebx,0xbb38d311
  41612e:	inc    ebp
  41612f:	jmp    0xd07e:0x12ae6147
  416136:	or     esi,DWORD PTR [ebx+esi*1]
  416139:	popf   
  41613a:	out    dx,eax
  41613b:	fnstsw WORD PTR [ebp-0x58bc6cdd]
  416141:	pop    eax
  416142:	push   eax
  416143:	in     al,dx
  416144:	mov    al,ds:0x2579a95b
  416149:	sub    edx,ecx
  41614b:	pop    es
  41614c:	retf   0x88d3
  41614f:	cmp    DWORD PTR [edi-0x70],eax
  416152:	call   0xb5b5424d
  416157:	xor    al,BYTE PTR [eax-0x766bd9ee]
  41615d:	push   ebp
  41615e:	std    
  41615f:	stc    
  416160:	dec    esp
  416161:	push   ebx
  416162:	and    edi,ebx
  416164:	dec    ebx
  416165:	mov    ebx,DWORD PTR [edi-0x4a]
  416168:	clc    
  416169:	jle    0x4160ee
  41616b:	lds    ecx,FWORD PTR [edx+0x5d]
  41616e:	es xor bl,0xbf
  416172:	lods   eax,DWORD PTR ds:[esi]
  416173:	push   0xffffffdc
  416175:	mov    bh,0x36
  416177:	xor    dl,BYTE PTR [ebx+0x7c]
  41617a:	jae    0x4160fc
  41617c:	sub    ecx,edi
  41617e:	mov    eax,0xbead6b1b
  416183:	lods   eax,DWORD PTR ds:[esi]
  416184:	test   BYTE PTR [eax],bh
  416186:	mov    edi,0x8ca592e8
  41618b:	ds pop ss
  41618d:	adc    al,dh
  41618f:	or     cl,0x17
  416192:	(bad)  
  416193:	in     eax,0x8a
  416195:	test   al,0x3b
  416197:	add    al,0x2d
  416199:	retf   
  41619a:	pop    ebx
  41619b:	jb     0x4161dd
  41619d:	iret   
  41619e:	das    
  41619f:	sub    eax,0xeae06144
  4161a4:	inc    edx
  4161a5:	jae    0x41621e
  4161a7:	mov    ecx,edi
  4161a9:	sahf   
  4161aa:	bound  ebp,QWORD PTR [eax+eiz*2-0x7f0258b5]
  4161b1:	push   0xffffffc0
  4161b3:	dec    edi
  4161b4:	xlat   BYTE PTR ds:[ebx]
  4161b5:	out    0x86,eax
  4161b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b8:	xor    ebx,DWORD PTR [ecx-0x44]
  4161bb:	adc    DWORD PTR [eax+0x7b],esp
  4161be:	imul   ebx,DWORD PTR [edx+0x6e],0x285a5a5e
  4161c5:	mov    esp,0x7ed024de
  4161ca:	dec    esi
  4161cb:	pop    ebx
  4161cc:	add    BYTE PTR [ecx],0x54
  4161cf:	jmp    0xdc6c1a6a
  4161d4:	jle    0x4161fc
  4161d6:	mov    esi,0xb815f78
  4161db:	sbb    BYTE PTR [esi+ecx*2-0x9],0x53
  4161e0:	neg    BYTE PTR [ebp-0x5c]
  4161e3:	jns    0x4161bb
  4161e5:	out    dx,al
  4161e6:	mov    dh,0x38
  4161e8:	in     al,0xf9
  4161ea:	adc    BYTE PTR ds:0x57eca3d0,bl
  4161f0:	into   
  4161f1:	int    0x49
  4161f3:	jae    0x41624f
  4161f5:	out    dx,al
  4161f6:	push   ss
  4161f7:	push   esi
  4161f8:	(bad)  
  4161f9:	mov    bl,0x73
  4161fb:	sbb    al,0x51
  4161fd:	jno    0x4161b8
  4161ff:	sbb    eax,0x84e659e4
  416204:	or     ebx,DWORD PTR [esi+0x3a742a4d]
  41620a:	push   ds
  41620b:	cmp    DWORD PTR [ecx-0x55],eax
  41620e:	mov    DWORD PTR [ebp-0x67],edi
  416211:	int3   
  416212:	arpl   WORD PTR [edi],dx
  416214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416215:	push   ss
  416216:	(bad)  [edi-0x1feb1aa2]
  41621c:	mov    cl,cl
  41621e:	cmc    
  41621f:	xchg   edx,eax
  416220:	das    
  416221:	lods   al,BYTE PTR ds:[esi]
  416222:	(bad)  
  416223:	cli    
  416224:	sbb    BYTE PTR [edx-0x3f],cl
  416227:	popf   
  416228:	lea    edx,[ecx+esi*8+0x12a97972]
  41622f:	arpl   WORD PTR [ebx-0x771301a9],di
  416235:	xchg   edx,eax
  416236:	retf   
  416237:	dec    eax
  416238:	stos   DWORD PTR es:[edi],eax
  416239:	mov    dh,0x39
  41623b:	sbb    ebx,DWORD PTR [esi]
  41623d:	data16 (bad) 
  41623f:	repnz jmp 0x67f0:0xe50d7a4
  416247:	ds xchg esi,eax
  416249:	xchg   ebx,eax
  41624a:	xchg   edi,eax
  41624b:	cmp    al,0x33
  41624d:	xor    BYTE PTR [edi-0x26],dl
  416250:	jno    0x416262
  416252:	push   edi
  416253:	push   es
  416254:	add    DWORD PTR [esi],ebx
  416256:	mov    ?,WORD PTR [edi-0x5f069aa8]
  41625c:	retf   
  41625d:	dec    esp
  41625e:	adc    al,0x6e
  416260:	push   eax
  416261:	retf   0x61a8
  416264:	jl     0x416213
  416266:	push   ss
  416267:	mov    bh,0xa2
  416269:	ss cmp eax,0x8ae73c7
  41626f:	mov    ebx,0x68f17ff4
  416274:	or     BYTE PTR [esp+ecx*4-0x40],al
  416278:	dec    ebx
  416279:	inc    edx
  41627a:	xor    ebx,DWORD PTR [ecx-0x7231dda3]
  416280:	mov    bl,0x68
  416282:	aas    
  416283:	mov    dl,0x54
  416285:	lahf   
  416286:	imul   edi,DWORD PTR [ebp-0x66cf2c14],0xffffffc1
  41628d:	mov    ch,0xff
  41628f:	(bad)  
  416290:	test   al,ch
  416292:	cdq    
  416293:	add    eax,0x96af4d6e
  416298:	rol    BYTE PTR [ecx+0x67],0x5
  41629c:	(bad)  
  41629d:	data16 and bl,BYTE PTR [ebp-0x1a]
  4162a1:	sti    
  4162a2:	add    DWORD PTR [esi+eiz*8+0x6b570136],0xc5121edc
  4162ad:	sti    
  4162ae:	mov    eax,ds:0x25729459
  4162b3:	or     BYTE PTR [edi+0x549a72a9],bh
  4162b9:	fcmovb st,st(0)
  4162bb:	cwde   
  4162bc:	jae    0x416264
  4162be:	cmp    BYTE PTR [edi-0x378bc75c],al
  4162c4:	cmp    bh,al
  4162c6:	in     eax,dx
  4162c7:	or     ebp,DWORD PTR [ecx]
  4162c9:	loope  0x416292
  4162cb:	pop    edx
  4162cc:	mov    bh,0x6a
  4162ce:	mov    edi,DWORD PTR [esi]
  4162d0:	stos   BYTE PTR es:[edi],al
  4162d1:	jmp    0xf2eb659d
  4162d6:	jp     0x4162ea
  4162d8:	mov    al,ds:0xd383dd61
  4162dd:	scas   al,BYTE PTR es:[edi]
  4162de:	jmp    0xa3ab1d7a
  4162e3:	pushf  
  4162e4:	adc    eax,0x85ae468e
  4162e9:	sub    BYTE PTR [edx-0x30],cl
  4162ec:	sub    ebp,DWORD PTR [edx-0x19]
  4162ef:	sahf   
  4162f0:	inc    ecx
  4162f1:	fnstenv [edx+0x75f237ac]
  4162f7:	push   cs
  4162f8:	aad    0x77
  4162fa:	lods   al,BYTE PTR ds:[esi]
  4162fb:	jne    0x41632c
  4162fd:	add    esp,DWORD PTR [ebx]
  4162ff:	int    0xfb
  416301:	jmp    0xf297b5b9
  416306:	ja     0x41637c
  416308:	mov    BYTE PTR [eax],0xc3
  41630b:	jge    0x416365
  41630d:	cmp    al,0xfb
  41630f:	out    dx,al
  416310:	sti    
  416311:	sbb    edx,DWORD PTR [edx]
  416313:	mov    ecx,0x7b979538
  416318:	pop    ecx
  416319:	hlt    
  41631a:	ja     0x416385
  41631c:	jecxz  0x4162db
  41631e:	clc    
  41631f:	inc    edx
  416320:	(bad)  
  416322:	in     eax,dx
  416323:	or     al,0x3c
  416325:	pop    edx
  416326:	xor    DWORD PTR [esi+0x50ba0ca6],edi
  41632c:	fnstenv [edi]
  41632e:	jmp    0x41637c
  416330:	mov    cl,0xd9
  416332:	imul   edi,DWORD PTR [edx],0x8e6401e0
  416338:	cmp    ecx,DWORD PTR ss:[edx]
  41633b:	push   ebx
  41633c:	adc    eax,0x29d9680f
  416341:	bound  edi,QWORD PTR [esi+0x3e9c7966]
  416347:	stc    
  416348:	test   eax,0x1ac76258
  41634d:	cwde   
  41634e:	fistp  WORD PTR [eax]
  416350:	ins    BYTE PTR es:[edi],dx
  416351:	or     DWORD PTR [eax-0x3b05b78],esp
  416357:	dec    eax
  416358:	mov    ebx,0xd002743f
  41635d:	mov    ecx,0x130eb0f1
  416362:	dec    ecx
  416363:	mov    al,0x27
  416365:	js     0x4162f6
  416367:	jp     0x416307
  416369:	push   cs
  41636a:	xchg   ebx,eax
  41636b:	aad    0x1a
  41636d:	mov    ebp,0xfb1e85c
  416372:	(bad)  
  416373:	fld    st(1)
  416375:	mov    dh,0xf
  416377:	pop    esp
  416378:	jge    0x4163dc
  41637a:	or     DWORD PTR [ebx-0x28],edi
  41637d:	xchg   ecx,eax
  41637e:	cmp    eax,DWORD PTR [esi]
  416380:	mov    ch,BYTE PTR [edi-0x4d]
  416383:	jl     0x4163ff
  416385:	sub    DWORD PTR [esi],ecx
  416387:	sti    
  416388:	gs mov ch,0xed
  41638b:	lds    eax,FWORD PTR [edi-0x1e]
  41638e:	xlat   BYTE PTR ds:[ebx]
  41638f:	pushw  cs
  416391:	mov    bh,0x14
  416393:	pop    ebp
  416394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416395:	dec    edx
  416396:	imul   esi,esi,0x7a495597
  41639c:	sar    DWORD PTR [ebx+0xb],1
  41639f:	jae    0x41636d
  4163a1:	rcr    ebp,cl
  4163a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163a4:	es enter 0x4eef,0x55
  4163a9:	jne    0x4163a8
  4163ab:	jmp    0x9050:0xd8df5346
  4163b2:	xlat   BYTE PTR ds:[ebx]
  4163b3:	push   ebx
  4163b4:	adc    BYTE PTR [ecx+0x77],0xb9
  4163b8:	(bad)  
  4163ba:	push   ebx
  4163bb:	stos   BYTE PTR es:[edi],al
  4163bc:	inc    eax
  4163bd:	or     ch,BYTE PTR [edi+eiz*1-0x5eff693f]
  4163c4:	into   
  4163c5:	push   ss
  4163c6:	(bad)  
  4163c7:	mov    ecx,0xfe185d9e
  4163cc:	push   0x18716169
  4163d1:	aas    
  4163d2:	or     BYTE PTR [eax],dl
  4163d4:	ficom  DWORD PTR [ecx]
  4163d6:	mov    ecx,ecx
  4163d8:	andps  xmm2,XMMWORD PTR [ebp+0x35]
  4163dc:	aas    
  4163dd:	(bad)  
  4163de:	dec    ecx
  4163df:	addr16 fs mov cl,0xb1
  4163e3:	js     0x416395
  4163e5:	outs   dx,DWORD PTR ds:[esi]
  4163e6:	out    dx,eax
  4163e7:	jae    0x41637c
  4163e9:	lods   al,BYTE PTR ds:[esi]
  4163ea:	jne    0x41640b
  4163ec:	shl    BYTE PTR [ecx-0x177d97df],0xd0
  4163f3:	inc    eax
  4163f4:	or     edx,DWORD PTR [eax]
  4163f6:	or     al,0x53
  4163f8:	lahf   
  4163f9:	rcr    BYTE PTR [eax+0x66213093],0xc0
  416400:	loopne 0x416397
  416402:	cmp    DWORD PTR [ebp+0x59a6ea7f],eax
  416408:	sub    DWORD PTR [esp+eiz*2],esp
  41640b:	push   esi
  41640c:	mov    eax,0x47289315
  416411:	jbe    0x4163e4
  416413:	rol    edi,1
  416415:	mov    edx,0xb621b970
  41641a:	cmp    BYTE PTR [edx],dl
  41641c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41641d:	pop    ss
  41641e:	in     eax,0x2e
  416420:	aam    0xf7
  416422:	in     eax,dx
  416423:	pop    ecx
  416424:	scas   al,BYTE PTR es:[edi]
  416425:	iret   
  416426:	xchg   esi,eax
  416427:	pop    esi
  416428:	shl    BYTE PTR [eax+0x15222ef1],cl
  41642e:	xchg   cl,al
  416430:	out    0x22,eax
  416432:	cmc    
  416433:	imul   edx,DWORD PTR [edx+0x41],0xf966cfa5
  41643a:	mov    DWORD PTR [ebx+0x67682498],edi
  416440:	pop    edi
  416441:	xor    esp,DWORD PTR [ebp+edi*2-0x2829aeeb]
  416448:	es and ch,0xf0
  41644c:	out    dx,eax
  41644d:	(bad)  
  41644f:	dec    esp
  416450:	aam    0xf6
  416452:	popa   
  416453:	bound  ebx,QWORD PTR [ebx-0x8]
  416456:	(bad)  
  416457:	pop    esp
  416458:	jge    0x416446
  41645a:	std    
  41645b:	jmp    0xd4cff6d0
  416460:	(bad)  [esi+esi*8-0x7db14ecc]
  416467:	mov    dh,0x48
  416469:	sahf   
  41646a:	sub    eax,0xcc802abb
  41646f:	out    0xac,al
  416471:	fimul  WORD PTR [edi+0x68]
  416474:	pushf  
  416475:	enter  0xfa77,0x33
  416479:	and    ecx,DWORD PTR [eax+ebp*8-0x229138fc]
  416480:	popa   
  416481:	inc    ebx
  416482:	outs   dx,DWORD PTR ds:[esi]
  416483:	cmp    ebp,DWORD PTR [ebp+0x9e904a7]
  416489:	cs push esp
  41648b:	pop    ebx
  41648c:	aas    
  41648d:	test   BYTE PTR [edx-0x7f],dl
  416490:	mov    eax,0xf72281e5
  416495:	add    dl,bh
  416497:	mov    ch,0x31
  416499:	mov    dh,0x5f
  41649b:	sub    BYTE PTR [ebx+eiz*4],bh
  41649e:	cmp    eax,0x5d6b26ca
  4164a3:	mov    bl,0x8c
  4164a5:	add    ebp,DWORD PTR [ecx]
  4164a7:	jecxz  0x416471
  4164a9:	mov    WORD PTR [ebp+0x7e988f33],ss
  4164af:	jns    0x4164e7
  4164b1:	pop    ds
  4164b2:	jecxz  0x416460
  4164b4:	stos   DWORD PTR es:[edi],eax
  4164b5:	stos   BYTE PTR es:[edi],al
  4164b6:	fs cmc 
  4164b8:	ins    DWORD PTR es:[edi],dx
  4164b9:	inc    edi
  4164ba:	enter  0xcc54,0x90
  4164be:	pop    eax
  4164bf:	mov    WORD PTR [ebx+0x584cae56],cs
  4164c5:	nop
  4164c6:	fs inc esi
  4164c8:	pushf  
  4164c9:	push   eax
  4164ca:	xor    BYTE PTR ds:0xf517fc34,dh
  4164d0:	inc    ebp
  4164d1:	pop    edx
  4164d2:	push   ss
  4164d3:	sbb    DWORD PTR [eax-0x7dd7ab15],0x4d
  4164da:	cmp    DWORD PTR ds:0x9949cf14,esp
  4164e0:	push   0x42d7afa
  4164e5:	sahf   
  4164e6:	test   DWORD PTR [esi+edx*8],edx
  4164e9:	push   edi
  4164ea:	mov    dl,dh
  4164ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164ed:	cmp    ah,BYTE PTR [esi]
  4164ef:	jle    0x4164d9
  4164f1:	data16 adc cl,bh
  4164f4:	adc    eax,DWORD PTR [ebx+0x35]
  4164f7:	cld    
  4164f8:	fdiv   st,st(2)
  4164fa:	sti    
  4164fb:	push   0x62
  4164fd:	clc    
  4164fe:	pushf  
  4164ff:	mov    dh,0x5f
  416501:	sub    edi,DWORD PTR [edi-0x5146f1a2]
  416507:	cwde   
  416508:	jecxz  0x41650a
  41650a:	lods   eax,DWORD PTR ds:[esi]
  41650b:	xchg   BYTE PTR [edx-0x58],al
  41650e:	cmp    al,0x93
  416510:	add    al,0x51
  416512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416513:	pop    esi
  416514:	sbb    eax,0xff05e150
  416519:	xchg   BYTE PTR [eax+edx*8+0x501417a9],ch
  416520:	xlat   BYTE PTR ds:[ebx]
  416521:	imul   ebx,edx,0xf85bcd56
  416527:	sub    DWORD PTR [eax+ebp*4-0x321ebd3a],esi
  41652e:	mov    ds:0x18e5a18a,al
  416533:	xor    ch,BYTE PTR [ecx-0x48def189]
  416539:	push   eax
  41653a:	sbb    eax,0x10ebf1ff
  41653f:	sbb    DWORD PTR [edx],0xced4bb3e
  416545:	add    eax,0x2859fcaa
  41654a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654b:	dec    esp
  41654c:	inc    ebx
  41654d:	call   0xd7de547d
  416552:	jl     0x4165a9
  416554:	jmp    0x253d4bdf
  416559:	mov    al,ds:0xa7eada8d
  41655e:	sub    BYTE PTR [ebx+esi*1-0x10],dl
  416562:	adc    al,0x6f
  416564:	inc    BYTE PTR [ebp-0x1d059986]
  41656a:	xor    al,0x69
  41656c:	push   es
  41656d:	sahf   
  41656e:	iret   
  41656f:	xlat   BYTE PTR ds:[ebx]
  416570:	cmp    eax,0x4ed599e1
  416575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416576:	xchg   ecx,eax
  416577:	push   es
  416578:	xchg   ebx,eax
  416579:	jp     0x41659b
  41657b:	pushf  
  41657c:	push   esp
  41657d:	lods   eax,DWORD PTR ds:[esi]
  41657e:	mov    eax,0xdd8bc572
  416583:	(bad)  
  416584:	jno    0x4165e4
  416586:	cmp    cl,cl
  416588:	repnz adc DWORD PTR [edx],ecx
  41658b:	out    dx,eax
  41658c:	pop    ss
  41658d:	out    0xa7,eax
  41658f:	xchg   esp,eax
  416590:	jmp    DWORD PTR [esi-0x7e]
  416593:	dec    ecx
  416594:	(bad)  
  416595:	push   edi
  416596:	repnz int3 
  416598:	cwde   
  416599:	xor    eax,0xdd4478f5
  41659e:	mov    ebx,0xb82caf08
  4165a3:	sahf   
  4165a4:	push   edi
  4165a5:	into   
  4165a6:	ins    BYTE PTR es:[edi],dx
  4165a7:	jecxz  0x416564
  4165a9:	xchg   ebp,eax
  4165aa:	shl    ecx,1
  4165ac:	push   0xfffffff7
  4165ae:	daa    
  4165af:	aam    0xf5
  4165b1:	les    edx,FWORD PTR [ebx+0x7e]
  4165b4:	jg     0x4165b9
  4165b6:	and    al,0x3c
  4165b8:	dec    esi
  4165b9:	shl    DWORD PTR [edx],cl
  4165bb:	and    dh,BYTE PTR [eax]
  4165bd:	and    esi,DWORD PTR [esi+ebp*8-0x73]
  4165c1:	aas    
  4165c2:	xsaves [edi+0x6457aea3]
  4165c9:	cmp    DWORD PTR [ecx-0x6330b36d],eax
  4165cf:	fcomp  st(3)
  4165d1:	jl     0x41657a
  4165d3:	hlt    
  4165d4:	pop    edi
  4165d5:	cs out dx,al
  4165d7:	imul   ebp,DWORD PTR [edx-0x6863cde9],0xffffffc0
  4165de:	xor    DWORD PTR [eax+eiz*8],esi
  4165e1:	or     DWORD PTR [eax+0x6f],0xbb2af9c1
  4165e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165e9:	push   ss
  4165ea:	mov    bl,0x92
  4165ec:	cwde   
  4165ed:	and    eax,0xf0a8fbf0
  4165f2:	call   0x7d062991
  4165f7:	or     DWORD PTR ss:[esi-0x60],ebp
  4165fb:	xchg   esp,eax
  4165fc:	jmp    0x41663d
  4165fe:	xchg   ecx,eax
  4165ff:	aas    
  416600:	icebp  
  416601:	fs or  al,0x2b
  416604:	mov    edi,0xd27c8767
  416609:	mov    ebp,0x545e9175
  41660e:	shr    BYTE PTR ds:[edx],0xa8
  416612:	add    bl,ch
  416614:	shl    WORD PTR [ecx],cl
  416617:	jp     0x4165a2
  416619:	mov    cl,ch
  41661b:	cs pusha 
  41661d:	clc    
  41661e:	pop    ebx
  41661f:	aam    0x6d
  416621:	cmc    
  416622:	xor    BYTE PTR [eax],al
  416624:	cmp    al,0x57
  416626:	sub    DWORD PTR [ebx+0x196efa8d],edi
  41662c:	mov    esp,0x3a75a4cc
  416631:	call   0x51b53871
  416636:	push   ds
  416637:	loope  0x41663a
  416639:	add    DWORD PTR ds:0xae7a1405,ebx
  41663f:	sub    al,0xf9
  416641:	xor    dl,BYTE PTR [ebp-0x2cca7ac0]
  416647:	aaa    
  416648:	out    dx,al
  416649:	mov    bl,0x9a
  41664b:	pop    esp
  41664c:	push   eax
  41664d:	arpl   WORD PTR [ecx+0x55],bp
  416650:	jbe    0x4165e3
  416652:	ins    BYTE PTR es:[edi],dx
  416653:	dec    eax
  416654:	or     cl,bl
  416656:	lods   al,BYTE PTR ds:[esi]
  416657:	in     al,0x59
  416659:	pushf  
  41665a:	mov    bh,0x40
  41665c:	stc    
  41665d:	add    DWORD PTR [eax+0x6609823],esp
  416663:	sub    BYTE PTR [eax+0x75d587f5],cl
  416669:	sub    ch,dl
  41666b:	shl    BYTE PTR [esi],1
  41666d:	test   edi,edx
  41666f:	(bad)  
  416671:	add    eax,edi
  416673:	and    eax,0xd8970f92
  416678:	mov    BYTE PTR [esi],cl
  41667a:	xchg   DWORD PTR [ebx+esi*8-0x669edc3d],ebx
  416681:	xor    esp,ebp
  416683:	or     dl,bh
  416685:	ror    DWORD PTR [ebp-0x2cca3381],1
  41668b:	ins    BYTE PTR es:[edi],dx
  41668c:	inc    edi
  41668d:	cdq    
  41668e:	mov    BYTE PTR [eax-0x5ac4d9c7],bl
  416694:	retf   
  416695:	inc    ecx
  416696:	pusha  
  416697:	jns    0x41667a
  416699:	and    ebx,DWORD PTR [edx+edx*4-0x1a]
  41669d:	fmul   QWORD PTR ds:0x3646287e
  4166a3:	loopne 0x41668b
  4166a5:	scas   al,BYTE PTR es:[edi]
  4166a6:	xchg   ebp,eax
  4166a7:	test   al,0xe7
  4166a9:	xor    DWORD PTR [edi-0x1720fe4d],esi
  4166af:	mov    dl,0x57
  4166b1:	ja     0x416684
  4166b3:	loopne 0x4166b1
  4166b5:	mov    ecx,0x39eb344d
  4166ba:	mov    dl,0x98
  4166bc:	leave  
  4166bd:	pusha  
  4166be:	push   esi
  4166bf:	adc    DWORD PTR [ebx-0x46493f08],ecx
  4166c5:	xchg   BYTE PTR [bp+0x5e],al
  4166c9:	leave  
  4166ca:	mov    al,0x95
  4166cc:	btc    esp,edx
  4166cf:	xor    al,0x3c
  4166d1:	(bad)  
  4166d2:	sahf   
  4166d3:	mov    ds:0x355d9c35,al
  4166d8:	push   es
  4166d9:	clc    
  4166da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166db:	push   cs
  4166dc:	mov    ds:0x946f5f33,eax
  4166e1:	imul   DWORD PTR [ebx]
  4166e3:	enter  0xaacb,0xaa
  4166e7:	push   esp
  4166e8:	or     dh,BYTE PTR [edx-0x30]
  4166eb:	add    BYTE PTR [eax-0x49],0x54
  4166ef:	and    DWORD PTR [ebp-0x7d],eax
  4166f2:	adc    ch,BYTE PTR [edx-0x59bb4507]
  4166f8:	jp     0x416772
  4166fa:	aas    
  4166fb:	cmp    eax,0x505f8628
  416700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416701:	sub    eax,0x9d6f78b8
  416706:	jb     0x41668f
  416708:	into   
  416709:	icebp  
  41670a:	fs pop ds
  41670c:	inc    esi
  41670d:	pop    ebp
  41670e:	jg     0x4166eb
  416710:	out    dx,al
  416711:	push   eax
  416712:	repz mov gs,WORD PTR [edi-0x1e]
  416716:	pop    eax
  416717:	or     BYTE PTR [ecx-0x2f],ch
  41671a:	xor    BYTE PTR [ecx+0x3a],al
  41671d:	int3   
  41671e:	push   esp
  41671f:	push   eax
  416720:	pop    ss
  416721:	icebp  
  416722:	adc    al,0x35
  416724:	push   esp
  416725:	aam    0xfb
  416727:	in     eax,dx
  416728:	and    BYTE PTR [ebp-0x80],dh
  41672b:	mov    bl,al
  41672d:	stos   DWORD PTR es:[edi],eax
  41672e:	jno    0x4166e9
  416730:	mov    dh,0x61
  416732:	or     eax,0x8ab14b1a
  416737:	ss fs jmp 0x2fefb8f9
  41673e:	sub    eax,0x38660660
  416743:	aam    0xd0
  416745:	mov    ah,0xe1
  416747:	lahf   
  416748:	pop    esp
  416749:	push   ds
  41674a:	mov    ebp,0xa5d0ceab
  41674f:	mov    ds,WORD PTR [eax]
  416751:	out    dx,al
  416752:	les    edx,FWORD PTR [ebx-0x2a9bd0ff]
  416758:	call   0xed4f902b
  41675d:	(bad)  
  41675f:	and    eax,0x46d256e0
  416764:	inc    esp
  416765:	push   esi
  416766:	push   ss
  416767:	jecxz  0x41677d
  416769:	imul   edi,eax,0x14745c24
  41676f:	add    bl,BYTE PTR [edi+0x621d1229]
  416775:	sbb    DWORD PTR ds:0xcdcb52e5,0x49
  41677c:	xchg   ebx,eax
  41677d:	and    eax,0x122e0149
  416782:	out    dx,eax
  416783:	cmc    
  416784:	sub    BYTE PTR [edi],bh
  416786:	retf   0xefe7
  416789:	les    edx,FWORD PTR fs:[ebx-0x14]
  41678d:	pop    ebx
  41678e:	scas   al,BYTE PTR es:[edi]
  41678f:	cmp    DWORD PTR [edi-0x68da16cd],edx
  416795:	pop    edi
  416796:	xor    BYTE PTR cs:[edx*4+0x146437c9],0xfa
  41679f:	lea    eax,[edi+0x46c007c0]
  4167a5:	imul   edx,DWORD PTR [esi-0x7c],0xffffff83
  4167a9:	jns    0x41678b
  4167ab:	data16 cmc 
  4167ad:	cmp    DWORD PTR [eax],edx
  4167af:	xchg   esp,eax
  4167b0:	mov    ?,WORD PTR [ebp+0x26157e03]
  4167b6:	dec    ebp
  4167b7:	ret    0x79e1
  4167ba:	jmp    0x7b9e:0xdfcda26b
  4167c1:	pop    ds
  4167c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c3:	add    BYTE PTR [ebx+0x4a],ch
  4167c6:	cmp    bh,BYTE PTR [ebx]
  4167c8:	(bad)  
  4167ca:	sbb    BYTE PTR [eax-0x1c75f94b],dl
  4167d0:	sub    al,0xd2
  4167d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d3:	data16 and al,0x3d
  4167d6:	sbb    eax,0x9edc7ea7
  4167db:	push   ebx
  4167dc:	hlt    
  4167dd:	add    dh,BYTE PTR ds:0x6c09f5d7
  4167e3:	mov    al,ds:0x8e0baf9d
  4167e8:	xchg   ecx,eax
  4167e9:	int    0xe2
  4167eb:	sub    cl,BYTE PTR ss:[ebx-0x36]
  4167ef:	inc    ebx
  4167f0:	add    al,0x1
  4167f2:	mov    al,0xe2
  4167f4:	push   edx
  4167f5:	imul   BYTE PTR [ebp-0x73]
  4167f8:	ins    BYTE PTR es:[edi],dx
  4167f9:	xchg   DWORD PTR [esi],esi
  4167fb:	(bad)  
  4167fc:	mov    eax,0xdac387f5
  416801:	loope  0x41683f
  416803:	call   0x3fda2741
  416808:	icebp  
  416809:	arpl   WORD PTR [ebx+ecx*2+0x5a250aa4],sp
  416810:	out    dx,eax
  416811:	xchg   edx,eax
  416812:	jg     0x4167f7
  416814:	fisub  DWORD PTR [esi+edx*4]
  416817:	push   0x3b
  416819:	xor    al,0x68
  41681b:	dec    ecx
  41681c:	dec    ebx
  41681d:	sub    BYTE PTR [edx-0x5c15b1f0],bh
  416823:	and    BYTE PTR ds:0xa429468f,ah
  416829:	push   ebp
  41682a:	ret    0x3781
  41682d:	xchg   edi,eax
  41682e:	sbb    al,BYTE PTR [ecx]
  416830:	ja     0x416802
  416832:	inc    esp
  416833:	pop    ebp
  416834:	nop
  416835:	in     al,0xd1
  416837:	mov    ds:0x249a1e6b,al
  41683c:	dec    ebx
  41683d:	in     al,dx
  41683e:	sub    dh,BYTE PTR [ebx+eax*2]
  416841:	(bad)  
  416842:	jmp    0x9820dd2
  416847:	cmp    edi,DWORD PTR [ebx]
  416849:	fist   DWORD PTR [edi-0x12]
  41684c:	es push ecx
  41684e:	add    eax,0x111a6409
  416853:	daa    
  416854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416855:	(bad)  
  416856:	sbb    esi,DWORD PTR [esi+0x3a]
  416859:	sbb    al,BYTE PTR [edx+0x1]
  41685c:	xchg   ebp,eax
  41685d:	sub    ebx,esi
  41685f:	dec    esi
  416860:	dec    ebx
  416861:	sahf   
  416862:	nop
  416863:	sub    al,0xb0
  416865:	xlat   BYTE PTR ds:[ebx]
  416866:	and    ah,BYTE PTR [eax-0xa]
  416869:	std    
  41686a:	cmp    dh,BYTE PTR [ecx+0x718db592]
  416870:	mov    edi,0xb7f9478b
  416875:	sbb    ah,BYTE PTR [eax+0x28]
  416878:	retf   
  416879:	fstp   QWORD PTR [ebx]
  41687b:	(bad)  
  41687c:	xchg   ebx,eax
  41687d:	shl    DWORD PTR [edi-0x44],cl
  416880:	retf   0xf947
  416883:	mov    ecx,0x33009672
  416888:	inc    esi
  416889:	pop    esi
  41688a:	xor    BYTE PTR [esi-0x599e4a07],bl
  416890:	repnz cmp al,0xba
  416893:	retf   0x3693
  416896:	aad    0x1
  416898:	inc    edi
  416899:	fild   QWORD PTR [ebp+0x1a]
  41689c:	push   eax
  41689d:	xchg   edx,eax
  41689e:	(bad)  
  41689f:	push   esi
  4168a0:	adc    DWORD PTR [edx-0x3c],ecx
  4168a3:	and    DWORD PTR [ecx+0x37],ecx
  4168a6:	call   0x89410c63
  4168ab:	dec    ebp
  4168ac:	ins    DWORD PTR es:[edi],dx
  4168ad:	stc    
  4168ae:	or     BYTE PTR [ebx-0x56],cl
  4168b1:	aam    0x15
  4168b3:	push   es
  4168b4:	test   cl,bh
  4168b6:	cmp    cl,BYTE PTR [ecx+esi*4-0x7668c23e]
  4168bd:	clc    
  4168be:	rcr    BYTE PTR [edi],cl
  4168c0:	jle    0x416868
  4168c2:	xchg   BYTE PTR [ecx-0x2c],al
  4168c5:	inc    ebp
  4168c6:	out    0xf1,al
  4168c8:	mov    ebx,0x77f9a98b
  4168cd:	sub    eax,0xce310c46
  4168d2:	xchg   ebx,eax
  4168d3:	xchg   BYTE PTR [eax],bh
  4168d5:	lods   al,BYTE PTR ds:[esi]
  4168d6:	inc    ebp
  4168d7:	(bad)
  4168db:	mov    esp,0x4235184d
  4168e0:	or     al,0xb1
  4168e2:	sub    ebx,DWORD PTR [ebp-0xbd7f09d]
  4168e8:	int3   
  4168e9:	jns    0x4168aa
  4168eb:	or     BYTE PTR [edi],ch
  4168ed:	into   
  4168ee:	sub    al,0x98
  4168f0:	cld    
  4168f1:	cmp    ch,BYTE PTR [edx+ebx*1+0x65]
  4168f5:	push   cs
  4168f6:	sti    
  4168f7:	add    bh,bh
  4168f9:	cmp    al,0xcb
  4168fb:	int    0x60
  4168fd:	add    ebp,DWORD PTR [eax-0x71]
  416900:	(bad)  
  416901:	cld    
  416902:	cmp    dh,ah
  416904:	clc    
  416905:	repnz shl edi,cl
  416908:	xor    BYTE PTR [edx],ah
  41690a:	mov    eax,ds:0xb7686fbc
  41690f:	jg     0x416891
  416911:	sub    DWORD PTR [edx],ecx
  416913:	fcmovnb st,st(6)
  416915:	add    eax,0x519b4ca5
  41691a:	xchg   edi,eax
  41691b:	push   0xffffff84
  41691d:	out    dx,al
  41691e:	jo     0x4168ac
  416920:	cmp    edi,ecx
  416922:	xor    esi,DWORD PTR cs:[esi+ecx*2-0x68]
  416927:	jp     0x416929
  416929:	mov    ecx,DWORD PTR [edx+0x41df8226]
  41692f:	push   0xffffff83
  416931:	pop    ebx
  416932:	pop    ecx
  416933:	inc    ebp
  416934:	imul   edx,DWORD PTR [ebx+0x6899c22c],0x7e
  41693b:	dec    ebx
  41693c:	ficomp WORD PTR [edx]
  41693e:	sbb    al,0x5e
  416940:	ins    BYTE PTR es:[edi],dx
  416941:	dec    edi
  416942:	int    0x6e
  416944:	inc    ecx
  416945:	lock or DWORD PTR [eax],0xffffff81
  416949:	dec    eax
  41694a:	cmp    eax,0x7d0189d3
  41694f:	cld    
  416950:	cld    
  416951:	push   esi
  416952:	rol    DWORD PTR [esi],1
  416954:	or     BYTE PTR [edx+ebx*8+0xdffc9d5],al
  41695b:	mov    es,WORD PTR [esi-0x6e]
  41695e:	mov    eax,0x4a94e4ec
  416963:	push   0xffffffe7
  416965:	(bad)  
  416966:	imul   esi,DWORD PTR [esp+edi*8],0x1d
  41696a:	out    0xcd,eax
  41696c:	repnz xor al,0xcb
  41696f:	add    esi,DWORD PTR ss:[ebp+0x6c]
  416973:	sub    ebx,eax
  416975:	retf   
  416976:	fld    QWORD PTR [ebx]
  416978:	cmp    eax,0x70570e3c
  41697d:	push   cs
  41697e:	xlat   BYTE PTR ds:[ebx]
  41697f:	mov    esi,0x98c38717
  416984:	les    edi,FWORD PTR [esi-0x22]
  416987:	(bad)
  41698a:	fsubrp st(1),st
  41698c:	in     al,dx
  41698d:	mov    ds:0xeb57dc4d,al
  416992:	int    0x9b
  416994:	dec    ebx
  416995:	(bad)  
  416996:	out    dx,al
  416997:	in     eax,0xa6
  416999:	sub    eax,0xda96cbd
  41699e:	or     eax,0xf5efaf85
  4169a3:	mov    edi,0x26ff786e
  4169a8:	icebp  
  4169a9:	push   ebp
  4169aa:	mov    bl,0x46
  4169ac:	and    DWORD PTR [ecx+0x3d],edx
  4169af:	mov    ebp,0xfc753fe
  4169b4:	xor    DWORD PTR [edx],edx
  4169b6:	dec    edx
  4169b7:	(bad)  
  4169b9:	mov    ah,0xc4
  4169bb:	mov    esp,0xff890a2a
  4169c0:	sub    bh,BYTE PTR [ebx+0x13]
  4169c3:	cdq    
  4169c4:	popf   
  4169c5:	xchg   esp,eax
  4169c6:	push   esi
  4169c7:	jbe    0x416950
  4169c9:	mov    dh,0xfa
  4169cb:	xchg   ecx,eax
  4169cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169cd:	and    eax,0x42bc0179
  4169d2:	mov    al,ds:0x14a9df5b
  4169d7:	sub    al,0x2f
  4169d9:	pop    ecx
  4169da:	out    0x90,al
  4169dc:	push   ecx
  4169dd:	pop    ecx
  4169de:	pop    ebp
  4169df:	out    dx,al
  4169e0:	adc    ebp,DWORD PTR [ecx]
  4169e2:	mov    bl,0x19
  4169e4:	xor    eax,DWORD PTR ds:0x214a7e46
  4169ea:	loop   0x4169f3
  4169ec:	jnp    0x416a68
  4169ee:	cmc    
  4169ef:	int3   
  4169f0:	and    ah,BYTE PTR [edx+0x5dc087a3]
  4169f6:	mov    dh,0x3a
  4169f8:	sub    esp,DWORD PTR [edx-0x46968f4d]
  4169fe:	jns    0x416990
  416a00:	jnp    0x416984
  416a02:	push   eax
  416a03:	fild   DWORD PTR [ebx-0x23ce50b9]
  416a09:	pop    ecx
  416a0a:	jb     0x4169ba
  416a0c:	pop    es
  416a0d:	es ja  0x4169bc
  416a10:	jb     0x416a39
  416a12:	sub    al,dl
  416a14:	push   edi
  416a15:	or     eax,0xe15572e3
  416a1a:	stos   BYTE PTR es:[edi],al
  416a1b:	mov    edi,0xb7d8ce9
  416a20:	pop    ds
  416a21:	aaa    
  416a22:	or     edx,DWORD PTR [ebx-0x6e]
  416a25:	xor    eax,0xdb3128a9
  416a2a:	or     BYTE PTR [ebx-0x50],ah
  416a2d:	inc    esi
  416a2e:	sub    eax,0x2df47d8a
  416a33:	jp     0x416a1c
  416a35:	(bad)  
  416a37:	cld    
  416a38:	add    DWORD PTR [eax],eax
  416a3a:	pop    ecx
  416a3b:	dec    esi
  416a3c:	outs   dx,DWORD PTR ds:[esi]
  416a3d:	ins    DWORD PTR es:[edi],dx
  416a3e:	fnstenv [eax+0x7]
  416a41:	rcr    BYTE PTR [eax-0x58bd013b],0xa6
  416a48:	mov    ebx,DWORD PTR [edx+0x8]
  416a4b:	jecxz  0x416a7e
  416a4d:	pop    ecx
  416a4e:	or     ebp,esi
  416a50:	bound  ecx,QWORD PTR [edi]
  416a52:	mov    eax,0x6886e94e
  416a57:	hlt    
  416a58:	xor    al,0x88
  416a5a:	push   ecx
  416a5b:	clc    
  416a5c:	fdivr  st(4),st
  416a5e:	cmp    ecx,DWORD PTR [edi-0x1821981d]
  416a64:	mov    ebp,0x166b2b39
  416a69:	push   esi
  416a6a:	or     DWORD PTR [edi],0xffffffce
  416a6d:	ds into 
  416a6f:	cmp    BYTE PTR [esi+edi*1],0x30
  416a73:	nop
  416a74:	sub    eax,0x1c435dc0
  416a79:	ins    DWORD PTR es:[edi],dx
  416a7a:	pop    ecx
  416a7b:	int3   
  416a7c:	jmp    0x37534311
  416a81:	pop    eax
  416a82:	jns    0x416a63
  416a84:	ins    BYTE PTR es:[edi],dx
  416a85:	mov    dh,BYTE PTR [eax]
  416a87:	(bad)  
  416a88:	paddb  mm2,QWORD PTR [esi-0x80]
  416a8c:	or     al,al
  416a8e:	push   edi
  416a8f:	push   esi
  416a90:	dec    esi
  416a91:	cmp    esi,DWORD PTR [eax]
  416a93:	es inc ebp
  416a95:	cld    
  416a96:	pushf  
  416a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a98:	es mov eax,0x3b520014
  416a9e:	dec    ebp
  416a9f:	mov    cl,0xe
  416aa1:	inc    ebp
  416aa2:	jno    0x416a3c
  416aa4:	aam    0xee
  416aa6:	sub    DWORD PTR [eax+0x3e],0xce2883dd
  416aad:	mov    DWORD PTR [ebx-0x6ceeed9a],edx
  416ab3:	jp     0x416b1d
  416ab5:	ins    BYTE PTR es:[edi],dx
  416ab6:	pusha  
  416ab7:	fcom   QWORD PTR [edi-0x7a2154fe]
  416abd:	mov    ds:0x5eb75e87,eax
  416ac2:	outs   dx,BYTE PTR ds:[esi]
  416ac3:	ret    
  416ac4:	sub    ecx,DWORD PTR [edi]
  416ac6:	or     esp,DWORD PTR [edi-0x2dccbb74]
  416acc:	jb     0x416b3d
  416ace:	pop    eax
  416acf:	xor    ebp,DWORD PTR [ecx]
  416ad1:	neg    BYTE PTR [edx+0xd]
  416ad4:	imul   edx,esp,0xffffffe3
  416ad7:	loopne 0x416af7
  416ad9:	or     DWORD PTR [eax],eax
  416adb:	ret    0x2f85
  416ade:	push   ss
  416adf:	js     0x416ace
  416ae1:	cmp    DWORD PTR [ebp+eiz*8+0x19],ebp
  416ae5:	jg     0x416b4b
  416ae7:	mov    esi,0x6a2bacdf
  416aec:	jge    0x416b23
  416aee:	pop    eax
  416aef:	push   ebp
  416af0:	fist   DWORD PTR [edi-0x33c70e43]
  416af6:	push   ds
  416af7:	inc    esi
  416af8:	or     DWORD PTR [edi-0x26bc2b8d],eax
  416afe:	aas    
  416aff:	ins    BYTE PTR es:[edi],dx
  416b00:	(bad)  
  416b01:	in     al,0xd1
  416b03:	sub    eax,0xc3036d1a
  416b08:	nop
  416b09:	ins    DWORD PTR es:[edi],dx
  416b0a:	daa    
  416b0b:	push   0xffffffea
  416b0d:	pop    edx
  416b0e:	lds    dx,DWORD PTR [ebp-0x42ab7d4d]
  416b15:	cmc    
  416b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b17:	cs sbb al,bh
  416b1a:	mov    edi,0x8a53353f
  416b1f:	add    esi,DWORD PTR [ebp+0x12feb339]
  416b25:	(bad)  ds:0x488ae3d8
  416b2b:	loope  0x416b4d
  416b2d:	lock or dl,BYTE PTR [edx-0x1d26543b]
  416b34:	fnstsw WORD PTR [ebp+0x64c7bcd9]
  416b3a:	and    BYTE PTR [esi+ebp*8],bl
  416b3d:	imul   ebp,DWORD PTR [ebx-0x54],0xce9a499
  416b44:	jmp    0x5372:0x82ff5ed8
  416b4b:	bound  ecx,QWORD PTR [eax-0x23]
  416b4e:	or     BYTE PTR [ebp-0x57aa7dbd],0x57
  416b55:	daa    
  416b56:	retf   
  416b57:	push   ecx
  416b58:	ins    BYTE PTR es:[edi],dx
  416b59:	push   esi
  416b5a:	stc    
  416b5b:	enter  0xcc46,0x24
  416b5f:	push   ds
  416b60:	sbb    esp,DWORD PTR [esi]
  416b62:	fsubp  st(5),st
  416b64:	ins    BYTE PTR es:[edi],dx
  416b65:	and    al,0x4e
  416b67:	push   ebx
  416b68:	dec    edx
  416b69:	das    
  416b6a:	das    
  416b6b:	pop    esi
  416b6c:	pop    DWORD PTR [ebx]
  416b6e:	bound  ebp,QWORD PTR [ebx]
  416b70:	jns    0x416b6f
  416b72:	pop    ds
  416b73:	pushf  
  416b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b75:	(bad)  
  416b76:	aad    0x75
  416b78:	dec    ebp
  416b79:	add    eax,0x45cc45d2
  416b7e:	iret   
  416b7f:	and    eax,0xcb8acbfb
  416b84:	pop    esp
  416b85:	and    ebp,DWORD PTR [esi]
  416b87:	jno    0x416c06
  416b89:	lahf   
  416b8a:	out    0xbc,al
  416b8c:	pop    ebx
  416b8d:	and    ebx,ecx
  416b8f:	push   esi
  416b90:	xchg   ebx,eax
  416b91:	(bad)  
  416b93:	clc    
  416b94:	pop    esi
  416b95:	and    cl,0xcb
  416b98:	test   ch,0x6b
  416b9b:	dec    ecx
  416b9c:	loope  0x416bc5
  416b9e:	pop    edx
  416b9f:	jns    0x416be7
  416ba1:	push   0x742c8f4d
  416ba6:	mov    dl,0x59
  416ba8:	cmc    
  416ba9:	(bad)
  416bac:	jmp    0xc25240d9
  416bb1:	inc    esi
  416bb2:	push   cs
  416bb3:	mov    eax,0x885089cd
  416bb8:	pushf  
  416bb9:	je     0x416bdc
  416bbb:	sub    eax,0xbcfd7aa6
  416bc0:	(bad)  
  416bc1:	pop    eax
  416bc2:	ins    BYTE PTR es:[edi],dx
  416bc3:	cmp    eax,0x74ea0619
  416bc8:	xor    DWORD PTR ds:0xdba2ca5f,eax
  416bce:	push   es
  416bcf:	js     0x416c1a
  416bd1:	and    al,0x35
  416bd3:	sub    ebx,DWORD PTR [ecx]
  416bd5:	pop    ds
  416bd6:	push   esp
  416bd7:	jmp    0xc26793dc
  416bdc:	mov    ds:0xf543b71e,eax
  416be1:	daa    
  416be2:	push   ds
  416be3:	xchg   edi,eax
  416be4:	das    
  416be5:	sub    bh,BYTE PTR [edi]
  416be7:	jl     0x416b95
  416be9:	sub    eax,0xb2637c92
  416bee:	sbb    al,0xe4
  416bf0:	loopne 0x416bab
  416bf2:	mov    dh,0x6c
  416bf4:	push   ss
  416bf5:	dec    ebp
  416bf6:	pop    edi
  416bf7:	pusha  
  416bf8:	mov    ebx,0x93fb1cb7
  416bfd:	es fwait
  416bff:	dec    esp
  416c00:	push   ecx
  416c01:	dec    esi
  416c02:	popa   
  416c03:	(bad)  
  416c05:	add    al,0x5d
  416c07:	xchg   BYTE PTR ds:0xdfd81a29,ah
  416c0d:	add    al,0xc
  416c0f:	sahf   
  416c10:	fsub   st(1),st
  416c12:	fcmovnb st,st(5)
  416c14:	add    al,0x11
  416c16:	dec    ebp
  416c17:	cli    
  416c18:	shl    DWORD PTR [edi+0x24df51fe],0x36
  416c1f:	aam    0x44
  416c21:	outs   dx,BYTE PTR ds:[esi]
  416c22:	dec    edx
  416c23:	inc    eax
  416c24:	(bad)  
  416c25:	fcomp  DWORD PTR [ecx]
  416c27:	mov    al,ds:0x90875fb3
  416c2c:	add    esi,DWORD PTR [esi]
  416c2e:	cs mov edx,ebp
  416c31:	call   0x83a:0xc2508ce1
  416c38:	xchg   ebx,eax
  416c39:	addr16 push ss
  416c3b:	in     eax,dx
  416c3c:	sbb    ecx,ebp
  416c3e:	stos   BYTE PTR es:[edi],al
  416c3f:	or     eax,0xe36682ba
  416c44:	push   ss
  416c45:	add    bh,BYTE PTR ds:0x4f53e7fb
  416c4b:	cmp    ah,al
  416c4d:	adc    al,0x8b
  416c4f:	loop   0x416ca3
  416c51:	jbe    0x416c71
  416c53:	sar    DWORD PTR [esi+0x77],1
  416c56:	jmp    0x416c62
  416c58:	dec    ebx
  416c59:	arpl   WORD PTR [edi+edi*8+0x38b2b1ca],bp
  416c60:	stos   DWORD PTR es:[edi],eax
  416c61:	je     0x416cb8
  416c63:	js     0x416c09
  416c65:	pop    es
  416c66:	(bad)  
  416c67:	mov    WORD PTR [ebp-0xce15286],?
  416c6d:	sbb    dh,BYTE PTR [ebp-0x56556026]
  416c73:	inc    ebx
  416c74:	jnp    0x416c3e
  416c76:	and    esi,DWORD PTR [ecx+0x7dea6658]
  416c7c:	xor    al,0x56
  416c7e:	jg     0x416c53
  416c80:	push   edx
  416c81:	aad    0x1b
  416c83:	push   ebx
  416c84:	in     al,dx
  416c85:	mov    ds:0x67097aa7,al
  416c8a:	ret    0x3167
  416c8d:	cmp    DWORD PTR ds:0x4c3d24fd,ebp
  416c93:	mov    BYTE PTR [esi-0x5976b81e],ch
  416c99:	and    BYTE PTR [ecx-0x3b798849],al
  416c9f:	test   dl,dl
  416ca1:	jns    0x416ca0
  416ca3:	retf   0x8e6d
  416ca6:	mov    DWORD PTR [ecx+0x22],ebx
  416ca9:	fisttp DWORD PTR [eax+ebx*8+0x35]
  416cad:	adc    DWORD PTR [eax-0xb],ebx
  416cb0:	xchg   esp,eax
  416cb1:	aad    0x44
  416cb3:	sub    eax,0x77777ba8
  416cb8:	outs   dx,BYTE PTR ds:[esi]
  416cb9:	call   0x6ed0c23d
  416cbe:	pusha  
  416cbf:	dec    edx
  416cc0:	sbb    eax,0x78de695a
  416cc5:	pop    eax
  416cc6:	fidiv  WORD PTR [edi]
  416cc8:	pop    edi
  416cc9:	pop    ebp
  416cca:	push   edx
  416ccb:	lock push ebx
  416ccd:	sub    dl,BYTE PTR [ecx-0x33]
  416cd0:	add    esi,DWORD PTR [ecx-0x24899ad2]
  416cd6:	or     al,0x1d
  416cd8:	and    ch,0xf1
  416cdb:	pop    ebp
  416cdc:	aaa    
  416cdd:	jl     0x416ce2
  416cdf:	jo     0x416ce3
  416ce1:	cdq    
  416ce2:	cli    
  416ce3:	pop    esi
  416ce4:	mov    dl,0x39
  416ce6:	pop    es
  416ce7:	xchg   esp,eax
  416ce8:	daa    
  416ce9:	in     al,dx
  416cea:	dec    esp
  416ceb:	add    BYTE PTR [eax+ebp*8],bh
  416cee:	mov    cl,0xf2
  416cf0:	xchg   esp,eax
  416cf1:	call   0x226e633c
  416cf6:	(bad)  
  416cf7:	clc    
  416cf8:	int3   
  416cf9:	ja     0x416d2a
  416cfb:	sub    al,0xba
  416cfd:	xchg   edi,eax
  416cfe:	pop    esp
  416cff:	dec    eax
  416d00:	(bad)  
  416d01:	push   edi
  416d02:	jmp    0x416d6d
  416d04:	jmp    0x416cc8
  416d06:	mov    DWORD PTR [ecx+esi*8+0x3a],0x4bfb1055
  416d0e:	add    BYTE PTR [ebx+0x30],al
  416d11:	inc    ebp
  416d12:	xchg   DWORD PTR [edx],esp
  416d14:	sahf   
  416d15:	push   ebx
  416d16:	push   ebp
  416d17:	mov    bl,0xa3
  416d19:	cmp    eax,0x404624a1
  416d1e:	inc    ebp
  416d1f:	dec    edx
  416d20:	adc    al,0xea
  416d22:	rcl    DWORD PTR [ebx-0xe],0xd6
  416d26:	xchg   edi,eax
  416d27:	js     0x416cfd
  416d29:	lods   al,BYTE PTR ds:[esi]
  416d2a:	xor    esi,esi
  416d2c:	fdivr  QWORD PTR [esi]
  416d2e:	mov    ebp,0x7f62aded
  416d33:	ins    DWORD PTR es:[edi],dx
  416d34:	sysret 
  416d36:	mov    fs,WORD PTR [esi+0x77]
  416d39:	arpl   WORD PTR [ebx+0x2],bx
  416d3c:	pop    ds
  416d3d:	jmp    0x416d1d
  416d3f:	add    DWORD PTR [ecx-0x599c1615],eax
  416d45:	ret    
  416d46:	je     0x416d61
  416d48:	shr    eax,1
  416d4a:	inc    edi
  416d4b:	adc    eax,0x9a8e34cc
  416d50:	jmp    0xac91:0x7b628aed
  416d57:	outs   dx,DWORD PTR ds:[esi]
  416d58:	cdq    
  416d59:	jle    0x416dc4
  416d5b:	inc    ecx
  416d5c:	pushf  
  416d5d:	repz pop es
  416d5f:	fsqrt  
  416d61:	dec    esp
  416d62:	pop    eax
  416d63:	shr    DWORD PTR [esi-0x54],0x29
  416d67:	stos   BYTE PTR es:[edi],al
  416d68:	mov    ds:0x9ca9c8aa,eax
  416d6d:	enter  0x2b86,0xfd
  416d71:	xor    eax,0xbaba6fde
  416d76:	data16 or al,BYTE PTR [ebp-0x38961ab5]
  416d7d:	popa   
  416d7e:	xor    eax,DWORD PTR [edx+0x12]
  416d81:	push   ecx
  416d82:	fs xchg ecx,eax
  416d84:	sbb    ebp,DWORD PTR [edi-0x80]
  416d87:	mov    al,0x10
  416d89:	fiadd  WORD PTR [edi+0x9]
  416d8c:	pushf  
  416d8d:	(bad)  
  416d8e:	in     eax,dx
  416d8f:	fistp  QWORD PTR [edi-0x28]
  416d92:	pop    ebx
  416d93:	sub    DWORD PTR [ebx-0x80],esi
  416d96:	xchg   BYTE PTR [ebx-0x62],cl
  416d99:	sbb    ebp,ebp
  416d9b:	leave  
  416d9c:	pop    DWORD PTR [ebx+0x5d]
  416d9f:	sbb    al,0xd1
  416da1:	push   cs
  416da2:	jo     0x416d98
  416da4:	xchg   edi,eax
  416da5:	in     eax,0xf4
  416da7:	stc    
  416da8:	lods   eax,DWORD PTR ds:[esi]
  416da9:	fsub   st(0),st
  416dab:	jp     0x416e1b
  416dad:	jns    0x416d48
  416daf:	mov    ah,al
  416db1:	(bad)  [ebx+0x31]
  416db4:	jo     0x416d59
  416db6:	fmulp  st(7),st
  416db8:	ret    0x8e3c
  416dbb:	rol    BYTE PTR [eax-0x279d8002],0xe8
  416dc2:	ja     0x416e16
  416dc4:	lods   eax,DWORD PTR ds:[esi]
  416dc5:	sub    BYTE PTR [ebx-0x70],al
  416dc8:	mov    cl,0xd7
  416dca:	aas    
  416dcb:	pop    ss
  416dcc:	rcr    DWORD PTR es:[esi+ecx*8-0x4a],cl
  416dd1:	adc    eax,0xfd7d8273
  416dd6:	sti    
  416dd7:	mov    ds:0x16035532,eax
  416ddc:	mov    ebx,0x9e9e59e3
  416de1:	test   eax,0xd987143e
  416de6:	stos   DWORD PTR es:[edi],eax
  416de7:	jmp    0xebdfee99
  416dec:	push   ecx
  416ded:	push   ds
  416dee:	push   ds
  416def:	adc    eax,0x3ee1012d
  416df4:	pop    ebp
  416df5:	dec    DWORD PTR [edx]
  416df7:	fild   QWORD PTR [ecx+0x28]
  416dfa:	pop    ebp
  416dfb:	xor    al,0x6c
  416dfd:	mov    fs,WORD PTR [esp+ecx*4-0x7a]
  416e01:	adc    cl,BYTE PTR [esi+0x78]
  416e04:	mov    dl,0x94
  416e06:	je     0x416dc5
  416e08:	jle    0x416db9
  416e0a:	mov    eax,ds:0xdfb570d0
  416e0f:	sub    eax,0x5fde8437
  416e14:	(bad)  
  416e15:	and    esi,DWORD PTR [esi+ecx*2-0x19ffaa70]
  416e1c:	out    dx,eax
  416e1d:	not    dl
  416e1f:	lods   eax,DWORD PTR ds:[esi]
  416e20:	xor    eax,0x8a195438
  416e25:	out    0xa,al
  416e27:	add    BYTE PTR [ecx-0x32805543],bl
  416e2d:	xchg   ecx,eax
  416e2e:	out    0x7b,al
  416e30:	hlt    
  416e31:	sbb    bl,bl
  416e33:	aaa    
  416e34:	inc    ebx
  416e35:	pusha  
  416e36:	rcr    DWORD PTR [esi],1
  416e38:	xchg   BYTE PTR [edx+eiz*8],dh
  416e3b:	iret   
  416e3c:	add    al,0xcc
  416e3e:	test   eax,0x6b84f71f
  416e43:	add    ah,BYTE PTR [esi-0x67]
  416e46:	jge    0x416e22
  416e48:	push   es
  416e49:	pop    edi
  416e4a:	xchg   DWORD PTR [edx+0x647d6811],ebx
  416e50:	dec    edi
  416e51:	mov    ecx,edi
  416e53:	sahf   
  416e54:	and    dl,BYTE PTR [edi+0x33]
  416e57:	mov    ah,0x5e
  416e59:	or     dl,BYTE PTR [ebp+0x16]
  416e5c:	enter  0x9204,0x69
  416e60:	sbb    edi,DWORD PTR ds:0x272fda46
  416e66:	(bad)  
  416e67:	fimul  WORD PTR [ebx-0x27]
  416e6a:	imul   edx,DWORD PTR [edx-0x4559d4c],0x13
  416e71:	cs (bad) 
  416e73:	cmp    cl,BYTE PTR [ebx]
  416e75:	sub    DWORD PTR [esi+0x7e],esi
  416e78:	cmp    ah,bl
  416e7a:	inc    ebp
  416e7b:	push   cs
  416e7c:	outs   dx,DWORD PTR ds:[esi]
  416e7d:	dec    ebx
  416e7e:	fiadd  DWORD PTR [edx+eax*2-0x36117b07]
  416e85:	jl     0x416ebe
  416e87:	jp     0x416e7c
  416e89:	test   DWORD PTR [edx-0x4d],0xfa02712e
  416e90:	data16 test BYTE PTR [edx],dl
  416e93:	ins    DWORD PTR es:[edi],dx
  416e94:	test   BYTE PTR [ebp+0x4e22e7bf],bl
  416e9a:	pop    edx
  416e9b:	jne    0x416e65
  416e9d:	jnp    0x416e70
  416e9f:	mov    WORD PTR [ecx],cs
  416ea1:	jo     0x416f0a
  416ea3:	xchg   ebp,eax
  416ea4:	dec    edi
  416ea5:	xlat   BYTE PTR ds:[ebx]
  416ea6:	cmp    ebx,0xe641a70b
  416eac:	test   BYTE PTR [ecx+0x5a],0x77
  416eb0:	iret   
  416eb1:	sbb    eax,0x45fdaf69
  416eb6:	and    cl,bl
  416eb8:	loopne 0x416f28
  416eba:	aam    0xa2
  416ebc:	mov    bh,0xe4
  416ebe:	mov    cl,0xce
  416ec0:	sub    eax,0xf5c4732e
  416ec5:	pop    ds
  416ec6:	shl    DWORD PTR [esi-0x2d478afd],1
  416ecc:	mov    edi,0x19e95512
  416ed1:	inc    ebp
  416ed2:	adc    eax,0xe6948f3a
  416ed7:	out    dx,eax
  416ed8:	sub    BYTE PTR [ecx+0x1a2e3831],ah
  416ede:	jbe    0x416ea1
  416ee0:	mov    al,ss:0x6f5457ef
  416ee6:	push   esp
  416ee7:	aaa    
  416ee8:	fucom  st(6)
  416eea:	stos   DWORD PTR es:[edi],eax
  416eeb:	sbb    al,0xc
  416eed:	add    eax,0xa26d31e3
  416ef2:	xlat   BYTE PTR ds:[ebx]
  416ef3:	in     al,dx
  416ef4:	loop   0x416ed3
  416ef6:	xchg   esi,eax
  416ef7:	mov    eax,ds:0xb2da4ee1
  416efc:	mov    esp,0x97e2a157
  416f01:	jb     0x416f73
  416f03:	cdq    
  416f04:	clc    
  416f05:	adc    al,0x2c
  416f07:	call   0xda700982
  416f0c:	lock xchg edx,eax
  416f0e:	sar    BYTE PTR [eax+0x74],1
  416f11:	cmp    BYTE PTR [esi-0x4c],bh
  416f14:	add    eax,0xc41e9b09
  416f19:	pushf  
  416f1a:	test   al,0xe
  416f1c:	push   DWORD PTR [edx-0x35]
  416f1f:	mov    ?,WORD PTR [ebx]
  416f21:	or     al,0x10
  416f23:	xor    bl,BYTE PTR [ebx+0x358aa65e]
  416f29:	xchg   edx,eax
  416f2a:	add    bh,al
  416f2c:	jno    0x416f5a
  416f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f2f:	sub    DWORD PTR [esi-0x5e],edi
  416f32:	(bad)  
  416f33:	ds rcr BYTE PTR ds:[eax],1
  416f37:	mov    ebx,DWORD PTR [edx]
  416f39:	lods   al,BYTE PTR ds:[esi]
  416f3a:	mov    eax,0x18cd38d6
  416f3f:	cdq    
  416f40:	cmp    eax,DWORD PTR [esi]
  416f42:	fimul  DWORD PTR [ecx-0x76dc6d4f]
  416f48:	nop
  416f49:	shl    BYTE PTR [ebp+0x53],1
  416f4c:	jmp    0x416fbb
  416f4e:	cmp    eax,0xfe26498f
  416f53:	inc    eax
  416f54:	add    dh,ch
  416f56:	xor    dl,BYTE PTR ss:[esi+0x4b9ca47c]
  416f5d:	pushf  
  416f5e:	nop
  416f5f:	jae    0x416f0c
  416f61:	sub    bl,BYTE PTR [ecx]
  416f63:	rcl    DWORD PTR [esi],cl
  416f65:	div    ebp
  416f67:	adc    DWORD PTR [ebx+0x1f],esp
  416f6a:	and    eax,0x54b9daa2
  416f6f:	or     ecx,DWORD PTR [esi+0x36]
  416f72:	cld    
  416f73:	pop    ecx
  416f74:	adc    dl,cl
  416f76:	sbb    al,0x9b
  416f78:	sub    ebx,DWORD PTR [edi+0x47]
  416f7b:	jp     0x416f6d
  416f7d:	daa    
  416f7e:	xchg   esi,eax
  416f7f:	sbb    BYTE PTR [edi+0x4e],al
  416f82:	loop   0x416f47
  416f84:	cmp    dh,BYTE PTR [eax-0x3ccecd6b]
  416f8a:	test   dl,dh
  416f8c:	popf   
  416f8d:	mov    ah,0xfc
  416f8f:	in     al,dx
  416f90:	mov    ch,0x45
  416f92:	loope  0x416fa6
  416f94:	mov    bh,0x9e
  416f96:	adc    bh,BYTE PTR [ecx+eax*2-0x24ee4997]
  416f9d:	ins    DWORD PTR es:[edi],dx
  416f9e:	inc    ebx
  416f9f:	gs scas al,BYTE PTR es:[edi]
  416fa1:	les    ebp,FWORD PTR [esp+eiz*2-0x31d9e15]
  416fa8:	pop    eax
  416fa9:	(bad)  
  416faa:	pop    eax
  416fab:	popa   
  416fac:	xchg   esi,eax
  416fad:	adc    eax,0x732120c0
  416fb2:	sahf   
  416fb3:	dec    eax
  416fb4:	imul   eax,DWORD PTR [ebx-0x4e],0xffffff92
  416fb8:	lds    esi,FWORD PTR [edx+eax*1]
  416fbb:	mov    eax,ds:0xafd4145f
  416fc0:	mov    bl,0xb8
  416fc2:	sbb    ecx,eax
  416fc4:	loop   0x416f57
  416fc6:	sbb    eax,0x19d0cb3e
  416fcb:	int    0x7b
  416fcd:	inc    ecx
  416fce:	or     DWORD PTR [edx],0x1af25f18
  416fd4:	fisttp DWORD PTR [ebp-0x35]
  416fd7:	shl    DWORD PTR [ecx-0x47fab256],cl
  416fdd:	mov    eax,DWORD PTR [ecx-0x3310613]
  416fe3:	add    bl,BYTE PTR [edi]
  416fe5:	ins    BYTE PTR es:[edi],dx
  416fe6:	ja     0x416fc7
  416fe8:	ret    
  416fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fea:	and    DWORD PTR ds:0x95b0957f,esp
  416ff0:	jmp    0x55a34324
  416ff5:	jo     0x41702b
  416ff7:	test   eax,ecx
  416ff9:	jno    0x416f85
  416ffb:	scas   al,BYTE PTR es:[edi]
  416ffc:	and    al,BYTE PTR [edi]
  416ffe:	test   ah,al
  417000:	mov    al,0x28
  417002:	mov    dl,0x2a
  417004:	or     edi,ecx
  417006:	mov    ds:0x5b4b55e0,eax
  41700b:	jmp    0x1fe868db
  417010:	xor    al,0xaf
  417012:	rcr    BYTE PTR [ebx+0x2],cl
  417015:	imul   ebp,DWORD PTR [ebp-0x65],0x4a
  417019:	pop    eax
  41701a:	jns    0x416fbc
  41701c:	fisttp QWORD PTR [esi+edi*1]
  41701f:	dec    eax
  417020:	gs enter 0x7f83,0x86
  417025:	(bad)  
  417026:	jae    0x417096
  417028:	outs   dx,DWORD PTR ds:[esi]
  417029:	sub    dh,BYTE PTR [ebx+0x656a3544]
  41702f:	outs   dx,BYTE PTR ds:[esi]
  417030:	addr16 mov al,0x84
  417033:	leave  
  417034:	mov    bl,0x25
  417036:	jl     0x417096
  417038:	dec    ebx
  417039:	std    
  41703a:	xchg   esi,eax
  41703b:	dec    ebx
  41703c:	cmp    DWORD PTR [eax+edx*4],esi
  41703f:	retf   0xb6c3
  417042:	push   cs
  417043:	addr16 hlt 
  417045:	cmovae ebp,ecx
  417048:	fs jg  0x416fd6
  41704b:	out    0xaf,al
  41704d:	fwait
  41704e:	ret    
  41704f:	outs   dx,DWORD PTR ds:[esi]
  417050:	jns    0x417026
  417052:	data16 cli 
  417054:	jp     0x417019
  417056:	pop    ecx
  417057:	mov    dl,0x11
  417059:	imul   esp,edi,0xa205975c
  41705f:	popf   
  417060:	push   esp
  417061:	(bad)  
  417062:	xor    bl,al
  417064:	lods   eax,DWORD PTR ds:[esi]
  417065:	push   esi
  417066:	sub    BYTE PTR [esi+0x25],bh
  417069:	ins    DWORD PTR es:[edi],dx
  41706a:	xchg   edi,eax
  41706b:	jne    0x4170d5
  41706d:	push   es
  41706e:	cli    
  41706f:	ret    0x906c
  417072:	mov    al,0xd0
  417074:	data16 aad 0x85
  417077:	stos   BYTE PTR es:[edi],al
  417078:	push   ds
  417079:	dec    ecx
  41707a:	stos   BYTE PTR es:[edi],al
  41707b:	dec    esi
  41707c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41707d:	in     eax,dx
  41707e:	lods   al,BYTE PTR ds:[esi]
  41707f:	and    BYTE PTR [edi-0x31a63983],al
  417085:	dec    BYTE PTR [edx+eax*2]
  417088:	imul   esi,DWORD PTR [eax-0x4065f39c],0x71
  41708f:	and    al,0x5c
  417091:	mov    esp,0x91b55bee
  417096:	pushf  
  417097:	dec    edx
  417098:	test   al,0xb9
  41709a:	jae    0x4170dc
  41709c:	shr    DWORD PTR [esi],cl
  41709e:	push   ds
  41709f:	iret   
  4170a0:	push   es
  4170a1:	add    ch,BYTE PTR [esi-0x1aec2bc3]
  4170a7:	daa    
  4170a8:	fisttp WORD PTR [edi+0x3ea543e1]
  4170ae:	xor    al,0x6a
  4170b0:	sbb    ecx,DWORD PTR [ecx+0x76]
  4170b3:	je     0x417106
  4170b5:	push   edx
  4170b6:	sbb    ebp,DWORD PTR [ebx-0xa7f8f6e]
  4170bc:	mov    eax,ds:0xff9b2968
  4170c1:	xor    DWORD PTR [esi+0x5277309],edx
  4170c7:	xchg   BYTE PTR [edx-0x14af7df5],bl
  4170cd:	sahf   
  4170ce:	les    edi,FWORD PTR [edi+esi*2]
  4170d1:	jge    0x4170b2
  4170d3:	pop    ebp
  4170d4:	mov    ch,BYTE PTR [esi-0x3d]
  4170d7:	call   0xcc84fbbd
  4170dc:	lahf   
  4170dd:	das    
  4170de:	call   0xc821:0x552fc0cf
  4170e5:	cld    
  4170e6:	or     bl,cl
  4170e8:	(bad)  
  4170e9:	mov    ebx,0x74b97028
  4170ee:	cs sub eax,0x45fea57a
  4170f4:	repnz and ebp,DWORD PTR [eax+0x30]
  4170f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f9:	outs   dx,BYTE PTR ds:[esi]
  4170fa:	popa   
  4170fb:	cdq    
  4170fc:	popa   
  4170fd:	jle    0x4170c4
  4170ff:	mov    dl,al
  417101:	out    dx,al
  417102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417103:	add    BYTE PTR [edi-0x34],bh
  417106:	icebp  
  417107:	jns    0x417170
  417109:	push   eax
  41710a:	cmp    ebx,ebx
  41710c:	cmc    
  41710d:	inc    esi
  41710e:	push   ecx
  41710f:	icebp  
  417110:	mov    esp,0x591d5776
  417115:	jae    0x417099
  417117:	(bad)  
  417118:	mov    al,ds:0x65eab784
  41711d:	cmp    dl,BYTE PTR [ebx+ebx*8+0x62]
  417121:	(bad)  
  417122:	jno    0x41716d
  417124:	popf   
  417125:	push   ebx
  417126:	dec    edx
  417127:	push   eax
  417128:	adc    eax,0x2a7145ec
  41712d:	sub    eax,0x613560e2
  417132:	jne    0x4170bc
  417134:	outs   dx,BYTE PTR ds:[esi]
  417135:	sbb    DWORD PTR [esi+edi*4-0x8],eax
  417139:	mul    DWORD PTR [esi]
  41713b:	call   0x60a216f6
  417140:	add    cl,BYTE PTR [esi+0x5c19ba53]
  417146:	pushf  
  417147:	jg     0x41715d
  417149:	les    esi,FWORD PTR [ecx+0x77]
  41714c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41714d:	sub    dh,dh
  41714f:	and    BYTE PTR [ebp-0x16],bl
  417152:	dec    ebp
  417153:	rcr    ebp,1
  417155:	mov    bl,0xeb
  417157:	inc    edi
  417158:	cmc    
  417159:	push   eax
  41715a:	adc    al,0x5b
  41715c:	xor    BYTE PTR [edi],ch
  41715e:	inc    edx
  41715f:	addr16 pop ds
  417161:	data16 mov BYTE PTR [eax],0xd4
  417165:	popa   
  417166:	fsubr  DWORD PTR [ebp-0x42b00cc6]
  41716c:	ja     0x4171b7
  41716e:	sub    eax,0x1929e75b
  417173:	sar    BYTE PTR [edi+0x3aea5c0f],cl
  417179:	cmc    
  41717a:	popf   
  41717b:	(bad)  
  41717c:	pop    edx
  41717d:	dec    ecx
  41717e:	shr    ah,1
  417180:	push   0xbdf72ddc
  417185:	ja     0x4171de
  417187:	into   
  417188:	loope  0x4171ef
  41718a:	arpl   WORD PTR [edx-0xf1c0a83],dx
  417190:	xor    DWORD PTR [edi+0x3],ebx
  417193:	mov    dl,0x3b
  417195:	lea    ebp,[ecx+ebp*2-0x535037de]
  41719c:	cmp    cl,BYTE PTR [esi+0x2f]
  41719f:	mov    cs,WORD PTR [ebx-0x4da6911b]
  4171a5:	pop    ebp
  4171a6:	sahf   
  4171a7:	xchg   edi,eax
  4171a8:	lods   al,BYTE PTR ds:[esi]
  4171a9:	in     eax,0xc6
  4171ab:	dec    edi
  4171ac:	outs   dx,BYTE PTR ds:[esi]
  4171ad:	jne    0x417205
  4171af:	jge    0x417132
  4171b1:	jb     0x417136
  4171b3:	loopne 0x4171c1
  4171b5:	pop    edx
  4171b6:	fstp   DWORD PTR [esi+0x4]
  4171b9:	lock sbb dh,BYTE PTR [ebx-0x70a0e69f]
  4171c0:	test   dl,dl
  4171c2:	imul   BYTE PTR [ebp-0x5dea8b1d]
  4171c8:	xchg   DWORD PTR [edi-0x36],esi
  4171cb:	xchg   edi,eax
  4171cc:	and    al,ch
  4171ce:	ins    BYTE PTR es:[edi],dx
  4171cf:	sbb    eax,0x76504389
  4171d4:	sti    
  4171d5:	push   ebp
  4171d6:	sub    ah,bh
  4171d8:	(bad)  
  4171da:	(bad)
  4171de:	dec    eax
  4171df:	pop    edi
  4171e0:	push   esi
  4171e1:	mov    ebp,0x5a1bdc3a
  4171e7:	scas   eax,DWORD PTR es:[edi]
  4171e8:	push   ds
  4171e9:	cmp    al,0xbb
  4171eb:	push   ebp
  4171ec:	(bad)  
  4171ed:	out    0x93,eax
  4171ef:	pmaddwd mm5,QWORD PTR [esi]
  4171f2:	push   ebp
  4171f3:	test   DWORD PTR gs:[edx],0x8c54b4e1
  4171fa:	add    edi,DWORD PTR [eax-0x147bc68f]
  417200:	pop    esp
  417201:	enter  0xa305,0x29
  417205:	mov    al,0x80
  417207:	adc    edx,ebx
  417209:	cli    
  41720a:	sub    eax,0xd1d0b78
  41720f:	into   
  417210:	adc    al,0x18
  417212:	xlat   BYTE PTR ds:[ebx]
  417213:	int3   
  417214:	sub    cl,dl
  417216:	int3   
  417217:	xor    DWORD PTR [edi+0x46],ecx
  41721a:	adc    edx,esp
  41721c:	fcom   QWORD PTR [eax-0x12]
  41721f:	jecxz  0x4171d6
  417221:	enter  0x4b98,0x52
  417225:	mov    ebx,0x3b153b60
  41722a:	jg     0x417221
  41722c:	mov    bh,0xde
  41722e:	xchg   ecx,eax
  41722f:	mov    edx,0x4cd5e140
  417234:	in     eax,0x4b
  417236:	push   cs
  417237:	or     al,0x7b
  417239:	pop    es
  41723a:	je     0x417205
  41723c:	shl    esi,cl
  41723e:	sub    al,0xfb
  417240:	jg     0x417258
  417242:	push   edi
  417243:	cdq    
  417244:	(bad)  
  417245:	fcom   st(0)
  417247:	pop    ss
  417248:	jle    0x4171ea
  41724a:	retf   
  41724b:	or     DWORD PTR [eax-0x5bebb64c],edx
  417251:	sbb    eax,0x2ffd5781
  417256:	ret    0x9367
  417259:	sbb    ebx,DWORD PTR [ebp-0x6cc26fbd]
  41725f:	xor    al,0xf3
  417261:	dec    esp
  417262:	out    dx,eax
  417263:	xchg   esi,eax
  417264:	cmp    al,0xac
  417266:	jnp    0x417270
  417268:	lods   eax,DWORD PTR ds:[esi]
  417269:	add    eax,esp
  41726b:	ss std 
  41726d:	push   cs
  41726e:	je     0x417235
  417270:	mov    ah,0xf5
  417272:	inc    ecx
  417273:	mov    dl,0xbd
  417275:	mov    dl,ch
  417277:	shr    DWORD PTR [edi+0x6a],cl
  41727a:	call   0x950ec029
  41727f:	pop    ebp
  417280:	fnstcw WORD PTR [edx+0x580a0d08]
  417286:	lea    ebx,[eax+eax*2-0x233bfdec]
  41728d:	pushf  
  41728e:	inc    ebx
  41728f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417290:	mov    DWORD PTR es:[eax],ebp
  417293:	imul   esp,DWORD PTR [ebx+edi*4],0x3f
  417297:	mov    ch,0xed
  417299:	(bad)  
  41729a:	or     esi,DWORD PTR [edi]
  41729c:	sbb    al,0xd8
  41729e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729f:	cld    
  4172a0:	cmp    eax,0x73732d80
  4172a5:	jae    0x4172e6
  4172a7:	rcl    DWORD PTR [ebx],0x9
  4172aa:	jge    0x4172a0
  4172ac:	in     eax,dx
  4172ad:	inc    eax
  4172ae:	ins    DWORD PTR es:[edi],dx
  4172af:	loop   0x4172da
  4172b1:	icebp  
  4172b2:	and    DWORD PTR [ecx+ebx*8],0xffffffa2
  4172b6:	and    esi,ecx
  4172b8:	call   0xb732:0x56cb6e53
  4172bf:	mov    WORD PTR [ebx],fs
  4172c1:	fcmovbe st,st(3)
  4172c3:	(bad)  
  4172c4:	and    eax,ebp
  4172c6:	jb     0x417270
  4172c8:	push   ebp
  4172c9:	push   edx
  4172ca:	and    al,0x21
  4172cc:	or     bh,dh
  4172ce:	fldcw  WORD PTR [ebx]
  4172d0:	std    
  4172d1:	cmp    DWORD PTR [edi+0x2df9be41],ebp
  4172d7:	cmp    ecx,DWORD PTR [eax]
  4172d9:	push   es
  4172da:	cmc    
  4172db:	sub    al,0x98
  4172dd:	mov    ch,dl
  4172df:	jmp    0x41731e
  4172e1:	lods   eax,DWORD PTR ds:[esi]
  4172e2:	push   eax
  4172e3:	iret   
  4172e4:	lea    ecx,[ecx]
  4172e6:	(bad)  
  4172e7:	xor    DWORD PTR [ebx+0x4b],ebx
  4172ea:	adc    esp,edx
  4172ec:	leave  
  4172ed:	outs   dx,DWORD PTR ds:[esi]
  4172ee:	mov    edx,0x791195e1
  4172f3:	test   eax,0x252cbacc
  4172f8:	sub    dh,BYTE PTR [ecx+ecx*4]
  4172fb:	adc    al,0xde
  4172fd:	std    
  4172fe:	(bad)  
  4172ff:	jmp    0x872b8fd2
  417304:	pop    es
  417305:	in     al,0xb1
  417307:	dec    ebx
  417308:	ret    
  417309:	arpl   WORD PTR [edx-0x9b64f3d],bx
  41730f:	adc    eax,0xe7956604
  417314:	mov    edi,edi
  417316:	xlat   BYTE PTR ds:[ebx]
  417317:	cmp    al,0x57
  417319:	sub    ebx,DWORD PTR [edi]
  41731b:	dec    ebx
  41731c:	ins    BYTE PTR es:[edi],dx
  41731d:	cld    
  41731e:	xchg   DWORD PTR [ebx-0x101d7857],edi
  417324:	inc    ebp
  417325:	retf   0x18e7
  417328:	pop    ds
  417329:	out    0x1,eax
  41732b:	inc    esp
  41732c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41732d:	cmp    DWORD PTR [edi],edi
  41732f:	clc    
  417330:	(bad)  
  417331:	pop    ds
  417332:	imul   edi,esi,0xf32062b
  417338:	data16 and bl,dh
  41733b:	bound  edx,QWORD PTR [ebp-0x7f63042a]
  417341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417342:	or     eax,0xada5e14b
  417347:	mov    bh,0x9d
  417349:	dec    esp
  41734a:	inc    edi
  41734b:	pop    ss
  41734c:	push   0x9
  41734e:	int    0xb9
  417350:	add    BYTE PTR [ebx],ch
  417352:	xchg   eax,ebx
  417354:	mov    ebp,0x4ea4b832
  417359:	rcl    edi,1
  41735b:	push   eax
  41735c:	and    eax,0xa1294ddf
  417361:	addr16 add edx,0xbb48e65a
  417368:	xor    al,0xc8
  41736a:	pop    es
  41736b:	daa    
  41736c:	xchg   edx,eax
  41736d:	cmp    ebx,ecx
  41736f:	lods   eax,DWORD PTR ds:[esi]
  417370:	aad    0x8e
  417372:	lock fucomi st,st(1)
  417375:	push   ebp
  417376:	ret    
  417377:	and    eax,0x5c1bfad3
  41737c:	loop   0x41736e
  41737e:	jp     0x417364
  417380:	push   edx
  417381:	repnz in eax,0x7
  417384:	mov    edx,DWORD PTR [esi+0x2a2401e9]
  41738a:	aas    
  41738b:	add    BYTE PTR [ebx-0x3c],0x51
  41738f:	jns    0x417322
  417391:	adc    al,0x82
  417393:	icebp  
  417394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417395:	and    al,0x38
  417397:	jne    0x417362
  417399:	shr    DWORD PTR [ecx],0xbc
  41739c:	cwde   
  41739d:	pop    ds
  41739e:	imul   ebx,DWORD PTR [esi],0x52
  4173a1:	push   0xffffff86
  4173a3:	icebp  
  4173a4:	mov    esp,0x82925cf0
  4173a9:	pushf  
  4173aa:	fadd   DWORD PTR [edx-0x64]
  4173ad:	mov    DWORD PTR [ecx-0x15971774],eax
  4173b3:	inc    esp
  4173b4:	or     eax,0xf72c7d89
  4173b9:	(bad)  
  4173bb:	enter  0x611d,0x6f
  4173bf:	es cmp eax,0x71d5cb6a
  4173c5:	inc    esp
  4173c6:	int3   
  4173c7:	mov    bh,0xf3
  4173c9:	out    0x66,eax
  4173cb:	int    0x9d
  4173cd:	addr16 pop edx
  4173cf:	push   ds
  4173d0:	mov    WORD PTR [edi-0x39147792],ds
  4173d6:	pusha  
  4173d7:	out    0x5f,eax
  4173d9:	outs   dx,BYTE PTR ds:[esi]
  4173da:	mov    al,ds:0x5036a22c
  4173df:	xor    eax,0x9ba51de
  4173e4:	ret    0x8595
  4173e7:	or     BYTE PTR [edx],ah
  4173e9:	pop    edx
  4173ea:	inc    ebp
  4173eb:	popa   
  4173ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ed:	dec    esp
  4173ee:	gs aaa 
  4173f0:	pusha  
  4173f1:	fwait
  4173f2:	stc    
  4173f3:	pop    es
  4173f4:	ret    0xeb47
  4173f7:	mov    ds:0xb2de930c,al
  4173fc:	xor    eax,0xe0a46dde
  417401:	sub    BYTE PTR [ecx-0x64a7ef0a],bl
  417407:	jns    0x417472
  417409:	cwde   
  41740a:	jle    0x417445
  41740c:	jno    0x4173f1
  41740e:	ss push ds
  417410:	sbb    eax,0x23466997
  417415:	jle    0x4173dd
  417417:	fisubr WORD PTR [ecx+0x29]
  41741a:	sbb    eax,0xa157c98e
  41741f:	sub    eax,0xb9f0153
  417424:	xchg   edi,eax
  417425:	adc    eax,0x554262ba
  41742a:	sub    BYTE PTR [ecx+0x2fc077e1],dl
  417430:	rcr    BYTE PTR [edi-0x66],1
  417433:	lods   al,BYTE PTR ds:[esi]
  417434:	xchg   ebx,eax
  417435:	imul   edx,DWORD PTR [ebx-0xa],0xffffffe7
  417439:	mov    WORD PTR [ecx+0x4fe6c34e],?
  41743f:	fnsave [esi+eiz*4]
  417442:	mov    ecx,0xb9756389
  417447:	jbe    0x4173e6
  417449:	shl    BYTE PTR [ecx-0x23607a87],0x42
  417450:	test   BYTE PTR [ebx+0xe],dh
  417453:	pop    esp
  417454:	jp     0x4174a7
  417456:	ds push 0x12
  417459:	test   BYTE PTR [esi],dl
  41745b:	test   BYTE PTR [esi-0x4e],ah
  41745e:	push   edi
  41745f:	xchg   ebx,eax
  417460:	gs push esp
  417462:	inc    ebx
  417463:	repz fisttp DWORD PTR [ecx+0x59867d57]
  41746a:	xchg   esi,esi
  41746c:	xchg   ebx,eax
  41746d:	scas   al,BYTE PTR es:[edi]
  41746e:	outs   dx,BYTE PTR ds:[esi]
  41746f:	call   FWORD PTR [ecx-0x21d78dda]
  417475:	push   ds
  417476:	mov    ds:0x5a6a0676,al
  41747b:	jns    0x4174d1
  41747d:	mov    eax,ds:0x8e9260bc
  417482:	test   eax,0x879cc118
  417487:	(bad)  
  417488:	or     edx,esi
  41748a:	test   eax,0x6cde891b
  41748f:	test   DWORD PTR [eax+0x71fc39ee],esp
  417495:	div    DWORD PTR [edi]
  417497:	pushf  
  417498:	mov    ch,0x8b
  41749a:	push   es
  41749b:	xchg   edi,eax
  41749c:	cdq    
  41749d:	lahf   
  41749e:	and    eax,0xa4d08cf2
  4174a3:	imul   ebx,DWORD PTR [ecx],0xd3490fa6
  4174a9:	dec    esp
  4174aa:	xor    al,0x4a
  4174ac:	jecxz  0x41746d
  4174ae:	shr    bl,1
  4174b0:	sub    eax,0xac94c49a
  4174b5:	xchg   edx,eax
  4174b6:	(bad)  
  4174b7:	mov    cl,0x71
  4174b9:	and    dh,dl
  4174bb:	push   ecx
  4174bc:	xchg   edx,eax
  4174bd:	(bad)  
  4174be:	aaa    
  4174bf:	cmp    bh,BYTE PTR ds:0xb1f046e3
  4174c5:	pop    edi
  4174c6:	dec    eax
  4174c7:	test   al,0x88
  4174c9:	or     BYTE PTR [esi],ch
  4174cb:	mov    dl,0xfa
  4174cd:	mov    eax,0x1916947b
  4174d2:	gs dec esi
  4174d4:	aas    
  4174d5:	addr16 js 0x417544
  4174d8:	cmp    ch,cl
  4174da:	mov    al,0x4f
  4174dc:	enter  0xd282,0xfc
  4174e0:	dec    ebp
  4174e1:	push   cs
  4174e2:	mov    ds:0x7043cb41,al
  4174e7:	stos   DWORD PTR es:[edi],eax
  4174e8:	adc    dh,cl
  4174ea:	cdq    
  4174eb:	xor    ecx,edi
  4174ed:	fs addr16 stc 
  4174f0:	jl     0x4174b5
  4174f2:	ds int3 
  4174f4:	sub    BYTE PTR [esi+0x23],dl
  4174f7:	cmp    al,0xd5
  4174f9:	and    al,0xa7
  4174fb:	xor    DWORD PTR [edi-0xca7541d],edi
  417501:	in     eax,0x6c
  417503:	or     al,0x91
  417505:	test   al,0xd7
  417507:	lahf   
  417508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417509:	dec    ebx
  41750a:	xchg   esp,eax
  41750b:	and    eax,0x6d57678f
  417510:	mov    ch,0xea
  417512:	lahf   
  417513:	sub    esi,DWORD PTR [ecx]
  417515:	fs cwde 
  417517:	scas   eax,DWORD PTR es:[edi]
  417518:	adc    eax,0x3cfec6a7
  41751d:	sub    BYTE PTR [edi+0x7f],bl
  417520:	sbb    ecx,DWORD PTR ds:0xdbba2783
  417526:	out    0x15,al
  417528:	mov    WORD PTR [edx+0x31878a7b],cs
  41752e:	or     dh,cl
  417530:	dec    esp
  417531:	loopne 0x417548
  417533:	outs   dx,BYTE PTR ds:[esi]
  417534:	imul   esi,DWORD PTR [eax],0x96138edb
  41753a:	sbb    edi,DWORD PTR [edi+0x40c11a7c]
  417540:	and    al,0x5
  417542:	stos   BYTE PTR es:[edi],al
  417543:	outs   dx,BYTE PTR ds:[esi]
  417544:	imul   edx,DWORD PTR [eax+0x47],0xf5b597c1
  41754b:	fisubr DWORD PTR [ebx+0x28d1ae49]
  417551:	mov    ch,0xa4
  417553:	push   0xffffffdf
  417555:	mov    eax,ds:0x4b8d27cf
  41755a:	xchg   BYTE PTR [ebp+0x1],ch
  41755d:	add    al,0x34
  41755f:	inc    eax
  417560:	icebp  
  417561:	jl     0x417517
  417563:	mov    edi,DWORD PTR [ecx]
  417565:	scas   al,BYTE PTR es:[edi]
  417566:	dec    ecx
  417567:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417569:	sahf   
  41756a:	mov    edi,0xe1dc8ce4
  41756f:	popa   
  417570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417571:	push   ds
  417572:	mov    ecx,0x36862ba8
  417577:	mov    ebp,0x329f8b11
  41757c:	popf   
  41757d:	in     al,dx
  41757e:	(bad)  
  41757f:	pop    eax
  417580:	push   ds
  417581:	ins    DWORD PTR es:[edi],dx
  417582:	mov    edx,0x4a4a169c
  417587:	fistp  QWORD PTR [edx]
  417589:	cwde   
  41758a:	sbb    ecx,DWORD PTR [edx-0x1e]
  41758d:	call   0x4d79:0xcfc51166
  417594:	sub    al,0x55
  417596:	fisub  WORD PTR [esi+edi*4]
  417599:	(bad)  
  41759a:	cmp    eax,0x459b7abe
  41759f:	and    al,0xf2
  4175a1:	mov    al,0x60
  4175a3:	shl    BYTE PTR [ebx+0xf],cl
  4175a6:	or     eax,0xe4542317
  4175ab:	pushf  
  4175ac:	mov    BYTE PTR [ecx],cl
  4175ae:	jne    0x4175cf
  4175b0:	and    eax,0x24255537
  4175b5:	xlat   BYTE PTR ds:[ebx]
  4175b6:	mul    DWORD PTR [edi+edx*4+0x69c1da81]
  4175bd:	pop    ds
  4175be:	jbe    0x417613
  4175c0:	test   al,0xed
  4175c2:	rcr    dl,cl
  4175c4:	jns    0x4175b7
  4175c6:	push   0xa7e671ff
  4175cb:	fnstsw WORD PTR ds:[ebp+0x57d56bb0]
  4175d2:	retf   
  4175d3:	fsub   st(2),st
  4175d5:	add    al,0x82
  4175d7:	xchg   ebx,eax
  4175d8:	push   ss
  4175d9:	jp     0x4175f1
  4175db:	pusha  
  4175dc:	mov    DWORD PTR fs:[ebp+0x40500e76],ebp
  4175e3:	cmp    ebp,DWORD PTR [esi-0x44]
  4175e6:	setne  BYTE PTR [eax+0x5e707b7c]
  4175ed:	rcr    BYTE PTR [eax+eiz*8+0x70353829],0xcb
  4175f5:	cmp    al,0x2e
  4175f7:	jg     0x41757a
  4175f9:	sub    edi,0x4e236830
  4175ff:	ins    BYTE PTR es:[edi],dx
  417600:	aam    0x35
  417602:	aam    0xd2
  417604:	imul   ecx,ecx,0xe2f7a73f
  41760a:	cmp    DWORD PTR ss:[edi],edx
  41760d:	js     0x4175fb
  41760f:	popf   
  417610:	mov    bh,0x2
  417612:	pop    edi
  417613:	(bad)  
  417614:	fcom   DWORD PTR ds:0x87a18815
  41761a:	out    dx,eax
  41761b:	push   ebx
  41761c:	sbb    dl,ah
  41761e:	cld    
  41761f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417620:	mov    ds:0xa7c12540,al
  417625:	imul   esp,DWORD PTR [ebx+0x59],0x2b
  417629:	xchg   edx,eax
  41762a:	nop
  41762b:	push   edi
  41762c:	and    eax,0x7e3c187
  417631:	or     cl,BYTE PTR [esi]
  417633:	mov    ds:0x696ad5e6,al
  417638:	push   es
  417639:	push   cs
  41763a:	add    bl,ch
  41763c:	shl    DWORD PTR [esp+edx*8+0x17],0x8c
  417641:	(bad)  
  417643:	out    dx,eax
  417644:	retf   
  417645:	push   0xffffffee
  417647:	sti    
  417648:	repnz rol cl,cl
  41764b:	xlat   BYTE PTR ds:[ebx]
  41764c:	adc    esp,DWORD PTR [ebx+0x1b]
  41764f:	add    ch,ch
  417651:	dec    edx
  417652:	mov    ss:0x233c667,eax
  417658:	pop    esi
  417659:	pop    ebx
  41765a:	fld    DWORD PTR [ebp+esi*1+0x7a299a6a]
  417661:	test   bl,bl
  417663:	cmp    BYTE PTR [edi-0x21],dl
  417666:	ret    0x8f73
  417669:	sahf   
  41766a:	and    ecx,esi
  41766c:	jmp    0x2974:0x2ee81efa
  417673:	daa    
  417674:	inc    ebx
  417675:	loopne 0x4176ee
  417677:	ret    
  417678:	jbe    0x4176b3
  41767a:	mov    esp,0x8b387f6f
  41767f:	ins    BYTE PTR es:[edi],dx
  417680:	je     0x417689
  417682:	xchg   edi,eax
  417683:	call   0x4831:0x9328d1dc
  41768a:	dec    eax
  41768b:	mov    edx,0x741532b
  417690:	pushf  
  417691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417692:	mov    bl,0xcd
  417694:	inc    edx
  417695:	pushf  
  417696:	cld    
  417697:	fdiv   QWORD PTR [edi-0x538bef77]
  41769d:	mov    esi,0xdcdd1191
  4176a2:	test   DWORD PTR ds:0xb7dd86ee,0xdc290ae4
  4176ac:	outs   dx,DWORD PTR ds:[esi]
  4176ad:	mov    eax,ds:0x64398eca
  4176b2:	adc    eax,0x6386e9e0
  4176b7:	pop    ebp
  4176b8:	sub    DWORD PTR [ecx-0x27],0x45
  4176bc:	sbb    DWORD PTR [edx],ebp
  4176be:	mov    ecx,0x906670ee
  4176c3:	aam    0x63
  4176c5:	scas   al,BYTE PTR es:[edi]
  4176c6:	stc    
  4176c7:	pop    ebx
  4176c8:	call   0x9b2c39d3
  4176cd:	and    BYTE PTR [edx-0x7a],0xfc
  4176d1:	push   eax
  4176d2:	sbb    eax,0x2c564774
  4176d7:	mov    bh,0x42
  4176d9:	inc    eax
  4176da:	loop   0x41765c
  4176dc:	mov    BYTE PTR [ebx+0x3b],bl
  4176df:	xchg   ecx,eax
  4176e0:	retf   0x312
  4176e3:	inc    edx
  4176e4:	pop    es
  4176e5:	jl     0x417680
  4176e7:	lock in eax,dx
  4176e9:	lea    edi,[esi+0x76]
  4176ec:	mov    al,ds:0x19f314c6
  4176f1:	outs   dx,DWORD PTR ds:[esi]
  4176f2:	shr    BYTE PTR [edi],1
  4176f4:	pop    ss
  4176f5:	jnp    0x417741
  4176f7:	adc    ebx,esp
  4176f9:	jne    0x4176a1
  4176fb:	fst    QWORD PTR [ebp+esi*2-0x4a9d3fe1]
  417702:	mov    al,0x1e
  417704:	mov    esp,DWORD PTR ds:0x8757fcc8
  41770a:	hlt    
  41770b:	lahf   
  41770c:	ins    BYTE PTR es:[edi],dx
  41770d:	and    bl,BYTE PTR [esi+0x5]
  417710:	push   esi
  417711:	retf   0xa8c1
  417714:	in     al,dx
  417715:	cli    
  417716:	and    DWORD PTR [ebx+0x3b8966a8],edi
  41771c:	pusha  
  41771d:	sub    DWORD PTR ds:0x8fb27e7f,eax
  417723:	movzx  esi,BYTE PTR [esi+0x19a545b6]
  41772a:	dec    esp
  41772b:	data16 out 0x4,al
  41772e:	hlt    
  41772f:	cmp    eax,0x471b6107
  417734:	icebp  
  417735:	pop    esi
  417736:	aam    0x4c
  417738:	jl     0x417790
  41773a:	test   eax,0x9e6ec3a1
  41773f:	inc    edi
  417740:	and    eax,0x7078485c
  417745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417746:	ss popf 
  417748:	rcr    BYTE PTR [eax+edx*8-0x60],1
  41774c:	push   0x10
  41774e:	cmc    
  41774f:	sar    BYTE PTR [edi-0x60],cl
  417752:	fnstenv [ebx+eiz*2-0x140acf67]
  417759:	ja     0x41772f
  41775b:	jecxz  0x41772b
  41775d:	jo     0x4177dc
  41775f:	jae    0x4176ea
  417761:	sbb    bh,BYTE PTR [esi]
  417763:	jo     0x41770d
  417765:	hlt    
  417766:	add    ebp,DWORD PTR ds:0xde4d0afa
  41776c:	xchg   esi,eax
  41776d:	outs   dx,DWORD PTR ds:[esi]
  41776e:	and    ecx,DWORD PTR [ecx+0x14d4c9e8]
  417774:	lea    esi,[edi+0x1d]
  417777:	test   DWORD PTR [ebp+0x76a2defd],0xffb4bf1e
  417781:	ds out dx,al
  417783:	(bad)  
  417784:	push   ds
  417785:	add    al,0x3a
  417787:	dec    esi
  417788:	mov    edx,0x443ed2bc
  41778d:	mov    ebx,0x91452392
  417792:	xor    DWORD PTR [edi+edi*8+0x73bfffe8],esi
  417799:	ja     0x417807
  41779b:	bound  edi,QWORD PTR [di-0x10]
  41779f:	in     eax,dx
  4177a0:	xchg   ecx,eax
  4177a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a2:	push   0xc488040d
  4177a7:	xchg   DWORD PTR [ebp-0x42a25e48],ebp
  4177ad:	and    eax,0x47fcbda7
  4177b2:	out    dx,eax
  4177b3:	(bad)  
  4177b5:	jecxz  0x4177e8
  4177b7:	mov    esp,DWORD PTR [esi]
  4177b9:	hlt    
  4177ba:	shl    BYTE PTR [ebx],cl
  4177bc:	mov    ah,0x95
  4177be:	dec    ecx
  4177bf:	call   0xc2e5dacb
  4177c4:	add    bh,BYTE PTR [esi+0x17]
  4177c7:	add    edi,eax
  4177c9:	lods   al,BYTE PTR es:[esi]
  4177cb:	fisttp QWORD PTR [eax-0x61]
  4177ce:	jo     0x4177de
  4177d0:	int3   
  4177d1:	fcomp  DWORD PTR [edx+ebp*4+0x69]
  4177d5:	gs cwde 
  4177d7:	stos   BYTE PTR es:[edi],al
  4177d8:	inc    ecx
  4177d9:	imul   edi,edi,0x6935de31
  4177df:	hlt    
  4177e0:	push   edx
  4177e1:	ds stc 
  4177e3:	sti    
  4177e4:	xchg   esi,eax
  4177e5:	dec    esi
  4177e7:	es push esi
  4177e9:	outs   dx,DWORD PTR ds:[esi]
  4177ea:	sub    al,BYTE PTR [eax-0x36]
  4177ed:	inc    ecx
  4177ee:	mov    bl,0xd1
  4177f0:	pop    ss
  4177f1:	mov    dh,0xc8
  4177f3:	test   al,0xba
  4177f5:	in     al,0x19
  4177f7:	jbe    0x41784a
  4177f9:	mov    ebx,0x16d2c5da
  4177fe:	jecxz  0x417793
  417800:	jne    0x41778f
  417802:	int3   
  417803:	add    al,0xaa
  417805:	mov    dh,0xab
  417807:	outs   dx,DWORD PTR ds:[esi]
  417808:	call   0x5a90:0x74c5c104
  41780f:	push   esp
  417810:	ins    DWORD PTR es:[edi],dx
  417811:	je     0x417832
  417813:	(bad)  
  417814:	aas    
  417815:	lods   al,BYTE PTR ds:[esi]
  417816:	gs mov edx,0x207f011a
  41781c:	pusha  
  41781d:	call   0xbf743ab0
  417822:	imul   edi,DWORD PTR [ebx-0x16],0xdee78010
  417829:	and    eax,0xacd605e4
  41782e:	xchg   esi,eax
  41782f:	push   ds
  417830:	jmp    0x417876
  417832:	push   ebp
  417833:	je     0x417876
  417835:	and    DWORD PTR [eax+0x722d8c8f],edi
  41783b:	push   eax
  41783c:	push   edx
  41783d:	iret   
  41783e:	push   0xc7dfc2da
  417843:	repnz into 
  417845:	ret    0xbe7e
  417848:	ss cmp eax,0x13435bb5
  41784e:	ins    DWORD PTR es:[edi],dx
  41784f:	iret   
  417850:	mov    DWORD PTR ds:0xcfe399b,ecx
  417856:	cmp    bh,bh
  417858:	icebp  
  417859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41785a:	je     0x41784a
  41785c:	call   0x3e63:0x8ca40bc6
  417863:	inc    ebx
  417864:	adc    BYTE PTR [edi+0x36],bh
  417867:	clc    
  417868:	sti    
  417869:	clc    
  41786a:	push   0x30acf2db
  41786f:	jl     0x41784e
  417871:	fsubr  DWORD PTR gs:[ebp-0x1fcd5c81]
  417878:	xchg   edi,eax
  417879:	and    al,0x61
  41787b:	xlat   BYTE PTR ds:[ebx]
  41787c:	mov    BYTE PTR [ebp+0x46],dh
  41787f:	repz int 0x35
  417882:	jle    0x417810
  417884:	push   edi
  417885:	pop    esp
  417886:	out    0x1a,al
  417888:	lods   eax,DWORD PTR ds:[esi]
  417889:	xchg   BYTE PTR [eax-0x5c6df],cl
  41788f:	xlat   BYTE PTR ds:[ebx]
  417890:	ss das 
  417892:	jno    0x4178c4
  417894:	xor    BYTE PTR [ecx],bl
  417896:	aaa    
  417897:	mov    eax,0xfe877b82
  41789c:	lods   eax,DWORD PTR ds:[esi]
  41789d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41789e:	pop    ss
  41789f:	aas    
  4178a0:	retf   
  4178a1:	fist   DWORD PTR [edi-0xe]
  4178a4:	(bad)  
  4178a5:	repnz inc esi
  4178a7:	mov    ebx,0xfea45d3e
  4178ac:	adc    al,0xe9
  4178ae:	xor    ebx,0x6c
  4178b1:	icebp  
  4178b2:	leave  
  4178b3:	adc    al,0xe4
  4178b5:	push   ds
  4178b6:	mov    dl,0xa2
  4178b8:	ret    
  4178b9:	in     eax,dx
  4178ba:	dec    edi
  4178bb:	push   ss
  4178bc:	je     0x417852
  4178be:	adc    BYTE PTR ds:0x6a799b0b,cl
  4178c4:	jb     0x4178e0
  4178c6:	je     0x41784f
  4178c8:	sbb    esp,DWORD PTR [ecx+0x4f494082]
  4178ce:	cmp    BYTE PTR [eax],bl
  4178d0:	dec    eax
  4178d1:	add    BYTE PTR [ecx+0x36],bh
  4178d4:	jno    0x4178ea
  4178d6:	ja     0x41789e
  4178d8:	inc    edi
  4178d9:	in     eax,dx
  4178da:	push   esi
  4178db:	adc    ebx,ecx
  4178dd:	in     al,dx
  4178de:	jmp    0x4efe:0x6ea312e0
  4178e5:	jnp    0x4178c3
  4178e7:	outs   dx,BYTE PTR ds:[esi]
  4178e8:	mov    edx,0xdf796dd7
  4178ed:	mov    al,0x59
  4178ef:	(bad)  
  4178f0:	and    dl,dl
  4178f2:	mov    WORD PTR [eax],ss
  4178f4:	inc    esi
  4178f5:	jg     0x4178c7
  4178f7:	pop    ebx
  4178f8:	push   edx
  4178f9:	dec    esp
  4178fa:	iret   
  4178fb:	push   ebx
  4178fc:	aam    0xe7
  4178fe:	(bad)  
  417900:	xor    BYTE PTR [edi-0x24ef82e6],al
  417906:	lahf   
  417907:	call   0xfe65d101
  41790c:	dec    ebx
  41790d:	aad    0x1
  41790f:	dec    ecx
  417910:	addr16 cmp ch,ah
  417913:	les    esp,FWORD PTR [edi-0x315972c7]
  417919:	shl    ah,cl
  41791b:	and    edi,DWORD PTR [edx+0x66]
  41791e:	fdivr  st,st(1)
  417920:	dec    esi
  417921:	push   esp
  417922:	aam    0x91
  417924:	push   ecx
  417925:	mov    esp,0xc387311e
  41792a:	pop    ebx
  41792b:	mov    bl,0x7
  41792d:	sbb    eax,DWORD PTR [edi-0x33613d7a]
  417933:	cmp    eax,0x8425b0b4
  417938:	jecxz  0x417995
  41793a:	sub    ebp,edx
  41793c:	push   ss
  41793d:	jno    0x417971
  41793f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417940:	mov    ah,0x27
  417942:	mov    edx,DWORD PTR [edx+0x501dbd23]
  417948:	add    DWORD PTR [edi-0x47ce296b],ebp
  41794e:	test   DWORD PTR [edi-0x6b],0x9d589419
  417955:	cmc    
  417956:	(bad)  
  417957:	lods   eax,DWORD PTR ds:[esi]
  417958:	ret    0x6fce
  41795b:	cmp    dh,dl
  41795d:	or     eax,0x49795470
  417962:	in     eax,0x86
  417964:	mov    BYTE PTR [ebp+0x5f4d4a45],cl
  41796a:	xchg   edx,eax
  41796b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41796c:	fwait
  41796d:	push   ecx
  41796e:	retf   
  41796f:	es stc 
  417971:	cmp    eax,ecx
  417973:	xlat   BYTE PTR ds:[ebx]
  417974:	cmp    BYTE PTR [edi-0x3d798c76],cl
  41797a:	clc    
  41797b:	pusha  
  41797c:	dec    esi
  41797d:	push   0xffffff96
  41797f:	jp     0x4179cb
  417981:	test   DWORD PTR [ebp+0x177961d9],edi
  417987:	xor    dl,BYTE PTR [edx]
  417989:	fmul   DWORD PTR [esi]
  41798b:	enter  0xfab3,0xfb
  41798f:	dec    edi
  417990:	aam    0x94
  417992:	mov    ss,esp
  417994:	add    BYTE PTR [edx],dl
  417996:	add    ah,al
  417998:	jae    0x417939
  41799a:	mov    esp,0x60c39110
  41799f:	xor    eax,0x9b5ee6a3
  4179a4:	push   ecx
  4179a5:	xor    DWORD PTR [ebp-0x7a2a3007],ecx
  4179ab:	inc    ebx
  4179ac:	inc    edx
  4179ad:	dec    esp
  4179ae:	stos   BYTE PTR es:[edi],al
  4179af:	jecxz  0x417975
  4179b1:	sub    DWORD PTR [ecx],ebx
  4179b3:	push   0xb
  4179b5:	dec    edx
  4179b6:	retf   0x6206
  4179b9:	les    ebx,FWORD PTR [ecx+ecx*2+0x7d52641]
  4179c0:	push   edi
  4179c1:	add    al,0xc9
  4179c3:	(bad)  
  4179c4:	rcr    BYTE PTR [ecx],cl
  4179c6:	xchg   esi,eax
  4179c7:	jae    0x417998
  4179c9:	stos   BYTE PTR es:[edi],al
  4179ca:	pop    ebx
  4179cb:	mov    esi,0xe4eb7ee7
  4179d0:	xchg   esp,eax
  4179d1:	and    al,0xfe
  4179d3:	mov    ecx,0xa76a1a10
  4179d8:	sbb    BYTE PTR [eax],0xd3
  4179db:	push   edx
  4179dc:	movaps xmm2,xmm3
  4179df:	or     bl,dh
  4179e1:	enter  0x8a4a,0xd0
  4179e5:	fwait
  4179e6:	test   al,0x26
  4179e8:	sahf   
  4179e9:	mov    bl,dh
  4179eb:	sub    cl,BYTE PTR [eax+0x39]
  4179ee:	mov    eax,ds:0x22673a51
  4179f3:	ror    esp,0x70
  4179f6:	mov    ebp,ebx
  4179f8:	xor    DWORD PTR [ecx+0x25],ebp
  4179fb:	and    al,0x70
  4179fd:	mov    cl,dh
  4179ff:	push   edi
  417a00:	imul   edi,DWORD PTR [edx+0x44],0x334d43ad
  417a07:	int    0x56
  417a09:	(bad)  
  417a0a:	mov    ebx,ecx
  417a0c:	cmp    DWORD PTR [ecx+0x6dcdc04],esp
  417a12:	mov    dh,0x4d
  417a14:	mov    edx,0x9f1f2c6e
  417a19:	mov    ds:0x86f92c9a,eax
  417a1e:	js     0x4179c1
  417a20:	jle    0x417a10
  417a22:	push   ds
  417a23:	xchg   esi,eax
  417a24:	das    
  417a25:	xlat   BYTE PTR ds:[ebx]
  417a26:	clc    
  417a27:	jge    0x4179c0
  417a29:	mov    ah,0x61
  417a2b:	scas   al,BYTE PTR es:[edi]
  417a2c:	and    ah,BYTE PTR [eax-0x15]
  417a2f:	(bad)  
  417a30:	mov    bh,0x9e
  417a32:	repnz (bad) [edi+0x4e]
  417a36:	jbe    0x417a7e
  417a38:	pop    ecx
  417a39:	syscall 
  417a3b:	dec    ecx
  417a3c:	imul   ebx,DWORD PTR [ecx-0xce83c2c],0x7f
  417a43:	inc    ebp
  417a44:	mov    cl,0x6f
  417a46:	out    dx,eax
  417a47:	fadd   QWORD PTR [ecx+0x78ec6e1a]
  417a4d:	cmp    DWORD PTR [ebx],eax
  417a4f:	sbb    ecx,edx
  417a51:	and    eax,edx
  417a53:	mov    eax,ds:0x2494d9d5
  417a58:	and    al,0xba
  417a5a:	lock jbe 0x417a00
  417a5d:	add    eax,0x6bf814d2
  417a62:	lds    eax,FWORD PTR [ecx+0x78]
  417a65:	mov    esp,0xf704ea1d
  417a6a:	out    0xda,eax
  417a6c:	ror    BYTE PTR [ecx+ebx*1+0x7c300c5b],0xd0
  417a74:	hlt    
  417a75:	stc    
  417a76:	popf   
  417a77:	mov    eax,ds:0xa1461fb4
  417a7c:	adc    eax,0x1093f2f3
  417a81:	xchg   edx,eax
  417a82:	(bad)  
  417a83:	stos   BYTE PTR es:[edi],al
  417a84:	in     eax,dx
  417a85:	xchg   edi,eax
  417a86:	(bad)  
  417a87:	fnstsw WORD PTR [eax-0x2e]
  417a8a:	fstp   QWORD PTR [edi-0x4a]
  417a8d:	pop    ecx
  417a8e:	mov    al,0x4c
  417a90:	cli    
  417a91:	aam    0x2d
  417a93:	and    DWORD PTR [ecx+0x6f],esp
  417a96:	inc    ebx
  417a97:	cmp    ah,BYTE PTR [ebp+0x35]
  417a9a:	xor    DWORD PTR [edi+0x79c6efad],ecx
  417aa0:	lahf   
  417aa1:	popa   
  417aa2:	xchg   edi,eax
  417aa3:	js     0x417b08
  417aa5:	mov    esi,DWORD PTR [eax+0x62c44051]
  417aab:	cmp    al,0x80
  417aad:	ins    BYTE PTR es:[edi],dx
  417aae:	arpl   WORD PTR [esi-0x14],cx
  417ab1:	mov    esp,0x63e79d84
  417ab6:	fcmove st,st(7)
  417ab8:	(bad)  
  417ab9:	jl     0x417afa
  417abb:	or     eax,0x1332429b
  417ac0:	or     ebp,ebp
  417ac2:	mov    BYTE PTR [esi-0xab3974],dh
  417ac8:	loopne 0x417a63
  417aca:	inc    edi
  417acb:	jmp    0x417ae0
  417acd:	pop    eax
  417ace:	hlt    
  417acf:	lock inc edi
  417ad1:	sub    al,0x24
  417ad3:	rol    DWORD PTR [esi+0x130d9a50],cl
  417ad9:	xor    BYTE PTR [esi+0x5f8a4d68],0x49
  417ae0:	xchg   ax,ax
  417ae2:	inc    edx
  417ae3:	jne    0x417aa7
  417ae5:	sub    dh,al
  417ae7:	daa    
  417ae8:	adc    BYTE PTR [eax+0x24],dh
  417aeb:	cld    
  417aec:	add    al,BYTE PTR [edi]
  417aee:	cld    
  417aef:	loope  0x417b3a
  417af1:	mov    dl,0x3a
  417af3:	out    0x7e,al
  417af5:	cmp    al,0xc4
  417af7:	or     esp,0xffffffdd
  417afa:	or     ebp,DWORD PTR [ecx+0x57d2ba07]
  417b00:	or     eax,0x7945e4cc
  417b05:	push   esi
  417b06:	inc    eax
  417b07:	ret    
  417b08:	jne    0x417b7a
  417b0a:	mov    al,0xe0
  417b0c:	test   eax,0xc5e50709
  417b11:	fdiv   QWORD PTR [edx]
  417b13:	test   edi,ebp
  417b15:	mov    ebp,0x8ec14ec5
  417b1a:	pop    eax
  417b1b:	enter  0xfe2,0x6f
  417b1f:	xor    edi,ebp
  417b21:	lock fimul WORD PTR ds:0x3024238b
  417b28:	int3   
  417b29:	pop    edx
  417b2a:	rcr    DWORD PTR [edx],0xaa
  417b2d:	neg    BYTE PTR [edi+0x40]
  417b30:	loope  0x417b77
  417b32:	fisubr DWORD PTR [eax+0x5c202a7d]
  417b38:	cmc    
  417b39:	xor    al,0x7d
  417b3b:	loop   0x417b93
  417b3d:	psubsw mm5,mm5
  417b40:	adc    DWORD PTR [ebx-0x34a77beb],0xfd55785a
  417b4a:	push   0xfffffffe
  417b4c:	sbb    bl,al
  417b4e:	pop    ebx
  417b4f:	xchg   ebx,eax
  417b50:	outs   dx,BYTE PTR ds:[esi]
  417b51:	test   DWORD PTR [eax],0xa00fc7d0
  417b57:	popa   
  417b58:	inc    edi
  417b59:	loope  0x417b91
  417b5b:	push   esi
  417b5c:	or     eax,0x377d8ab4
  417b61:	pop    esi
  417b62:	pop    eax
  417b63:	lea    edi,[ebx+esi*8]
  417b66:	test   eax,0x7ea51783
  417b6b:	je     0x417b69
  417b6d:	and    al,0x41
  417b6f:	loope  0x417bdc
  417b71:	dec    edx
  417b72:	retf   
  417b73:	scas   eax,DWORD PTR es:[edi]
  417b74:	push   ds
  417b75:	adc    al,0x4
  417b77:	inc    esi
  417b78:	leave  
  417b79:	mov    ebx,DWORD PTR ds:0x39948f0d
  417b7f:	jae    0x417be0
  417b81:	vmread DWORD PTR [ecx*2+0x5cde801e],ebp
  417b89:	aaa    
  417b8a:	add    eax,0x393fcef5
  417b8f:	dec    esi
  417b90:	bnd jae 0x417ba8
  417b93:	inc    edx
  417b94:	imul   esi,DWORD PTR [eax],0xc51573c1
  417b9a:	or     al,0x59
  417b9c:	dec    edx
  417b9d:	in     al,0x52
  417b9f:	das    
  417ba0:	cli    
  417ba1:	or     DWORD PTR [eax+0x15],0x335d9fa1
  417ba8:	mov    dl,0xea
  417baa:	scas   al,BYTE PTR es:[edi]
  417bab:	js     0x417b82
  417bad:	in     al,0xd2
  417baf:	jns    0x417c0e
  417bb1:	push   esi
  417bb2:	ret    
  417bb3:	aam    0x29
  417bb5:	retf   
  417bb6:	adc    BYTE PTR [esp+ecx*4+0x5],ah
  417bba:	cmp    esi,esp
  417bbc:	push   cs
  417bbd:	lahf   
  417bbe:	loope  0x417b6d
  417bc0:	popa   
  417bc1:	xchg   ecx,eax
  417bc2:	adc    ebx,edx
  417bc4:	push   edx
  417bc5:	sti    
  417bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc7:	push   ecx
  417bc8:	in     eax,dx
  417bc9:	seto   BYTE PTR [edx]
  417bcc:	cmp    al,0x10
  417bce:	push   edx
  417bcf:	jle    0x417b52
  417bd1:	xor    al,0xb7
  417bd3:	rcr    DWORD PTR [ebp-0xd8da276],0x96
  417bda:	retf   0xd3cb
  417bdd:	pop    ebx
  417bde:	sub    edi,edi
  417be0:	xchg   BYTE PTR [edx],dh
  417be2:	cmp    esi,DWORD PTR [eax]
  417be4:	lds    esp,FWORD PTR [esi-0x7e]
  417be7:	fldcw  WORD PTR [esi]
  417be9:	cdq    
  417bea:	and    DWORD PTR [eax+0x6d],edx
  417bed:	mov    bl,0x7e
  417bef:	in     eax,dx
  417bf0:	pop    ds
  417bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf2:	stos   BYTE PTR es:[edi],al
  417bf3:	pop    ds
  417bf4:	les    esi,FWORD PTR [edx+0x45e799ae]
  417bfa:	fnstsw WORD PTR [ebp+0x4c566402]
  417c00:	pop    es
  417c01:	or     edi,DWORD PTR [eax]
  417c03:	xchg   ebx,eax
  417c04:	pop    esp
  417c05:	cmp    al,ch
  417c07:	addr16 and esi,ecx
  417c0a:	lods   eax,DWORD PTR ds:[esi]
  417c0b:	mov    ch,0xd5
  417c0d:	(bad)  
  417c0e:	jo     0x417bd9
  417c10:	and    ebp,DWORD PTR [edi+0x3ae4474d]
  417c16:	ficom  DWORD PTR ds:0x502b4455
  417c1c:	ror    BYTE PTR [ebx],0xe
  417c1f:	loop   0x417c03
  417c21:	repnz aam 0x5a
  417c24:	loope  0x417ca5
  417c26:	ds nop
  417c28:	enter  0x4cf6,0xe0
  417c2c:	arpl   WORD PTR [edx-0x13],si
  417c2f:	jge    0x417c0a
  417c31:	jge    0x417c6e
  417c33:	sub    DWORD PTR [ebp+0x24c84e0e],esp
  417c39:	rcl    DWORD PTR [ebx-0x4],cl
  417c3c:	out    dx,al
  417c3d:	pop    edx
  417c3e:	(bad)
  417c41:	adc    BYTE PTR [edi],0x33
  417c44:	fistp  QWORD PTR [ecx+0x28]
  417c47:	sub    BYTE PTR [esi+edx*1-0x49e7481d],bl
  417c4e:	in     eax,dx
  417c4f:	jns    0x417c54
  417c51:	cmc    
  417c52:	aam    0x9
  417c54:	div    DWORD PTR [edx]
  417c56:	leave  
  417c57:	xchg   esi,eax
  417c58:	iret   
  417c59:	jmp    0x6809:0xf69397e2
  417c60:	ret    0x4bc2
  417c63:	retf   0xef2f
  417c66:	dec    ecx
  417c67:	fiadd  WORD PTR [ebp+ebp*2-0x7c675528]
  417c6e:	daa    
  417c6f:	pop    esi
  417c70:	cld    
  417c71:	fild   WORD PTR [ecx+0x73]
  417c74:	call   0x9772:0xb0edc93b
  417c7b:	nop
  417c7c:	xchg   esi,eax
  417c7d:	dec    esp
  417c7e:	out    dx,eax
  417c7f:	cdq    
  417c80:	cdq    
  417c81:	stc    
  417c82:	xor    eax,0x49e25f2d
  417c87:	xor    ch,BYTE PTR [edx+0x2f]
  417c8a:	sbb    bh,BYTE PTR [edx*2+0x28ac5c31]
  417c91:	jno    0x417cf1
  417c93:	mov    ds:0x2c5b541c,eax
  417c98:	xlat   BYTE PTR ds:[ebx]
  417c99:	inc    ebp
  417c9a:	mov    ah,0x51
  417c9c:	fisub  WORD PTR [esi]
  417c9e:	mov    al,ds:0x5519c763
  417ca3:	fcmovb st,st(2)
  417ca5:	aaa    
  417ca6:	or     eax,DWORD PTR fs:[esi+0x6e0dc0dc]
  417cad:	mov    edx,0xa03694af
  417cb2:	(bad)  
  417cb3:	scas   al,BYTE PTR es:[edi]
  417cb4:	or     ah,BYTE PTR [ecx]
  417cb6:	sbb    DWORD PTR [ebx],eax
  417cb8:	fldenv [esi]
  417cba:	imul   edi
  417cbc:	push   ecx
  417cbd:	loop   0x417ced
  417cbf:	stos   BYTE PTR es:[edi],al
  417cc0:	mov    ch,BYTE PTR [edx-0x54]
  417cc3:	in     eax,0xa6
  417cc5:	mov    eax,DWORD PTR [eax]
  417cc7:	pushf  
  417cc8:	pop    ebx
  417cc9:	jae    0x417cda
  417ccb:	sbb    ah,BYTE PTR [ebp-0x6d382a43]
  417cd1:	sub    ch,BYTE PTR [ecx+0x18a88656]
  417cd7:	repz sbb DWORD PTR [eax+0x1394e7d8],edx
  417cde:	ins    BYTE PTR es:[edi],dx
  417cdf:	cmp    BYTE PTR [ebx-0x10f097f0],bh
  417ce5:	sbb    DWORD PTR ds:0xaeeb8adf,ebx
  417ceb:	sub    edi,edi
  417ced:	mov    ebx,0x21b412a5
  417cf2:	jg     0x417c7b
  417cf4:	mul    ah
  417cf6:	sti    
  417cf7:	adc    al,0xcc
  417cf9:	push   0x3e1a3784
  417cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cff:	xchg   esp,eax
  417d00:	mov    bh,0x46
  417d02:	cli    
  417d03:	ret    0x9c72
  417d06:	stos   DWORD PTR es:[edi],eax
  417d07:	out    0xbd,eax
  417d09:	cwde   
  417d0a:	mov    WORD PTR [ecx+ebp*8+0xd7c916d],?
  417d11:	inc    eax
  417d12:	and    eax,0x5ae34f1a
  417d17:	ss popa 
  417d19:	dec    esp
  417d1a:	pop    ds
  417d1b:	inc    eax
  417d1c:	inc    esi
  417d1d:	aaa    
  417d1e:	or     al,0x1f
  417d20:	jp     0x417cba
  417d22:	cmp    DWORD PTR [edi+ebp*1-0x4a],edi
  417d26:	mov    bl,0xa5
  417d28:	int    0x4f
  417d2a:	fst    DWORD PTR [ecx]
  417d2c:	mul    edx
  417d2e:	mov    edx,DWORD PTR [edi+eax*1+0x60]
  417d32:	add    DWORD PTR [ecx],ebx
  417d34:	shr    BYTE PTR [ecx+eiz*4+0x2c],1
  417d38:	pop    eax
  417d39:	in     al,dx
  417d3a:	aas    
  417d3b:	mov    dl,0x58
  417d3d:	cmp    eax,0xff4ea351
  417d42:	icebp  
  417d43:	inc    ebp
  417d44:	hlt    
  417d45:	pop    edx
  417d46:	scas   al,BYTE PTR es:[edi]
  417d47:	out    0xed,eax
  417d49:	leave  
  417d4a:	out    0xb,eax
  417d4c:	or     ebx,ecx
  417d4e:	adc    DWORD PTR [eax],edi
  417d50:	repz push ebx
  417d52:	(bad)  
  417d53:	cmp    eax,0xded4aff0
  417d58:	jb     0x417d7f
  417d5a:	lock stc 
  417d5c:	pop    edi
  417d5d:	ds call 0x479cfb51
  417d63:	ret    
  417d64:	cwde   
  417d65:	inc    eax
  417d66:	dec    eax
  417d67:	leave  
  417d68:	inc    esp
  417d69:	pop    ebp
  417d6a:	ja     0x417dd5
  417d6c:	mov    edi,0xc40cbead
  417d71:	int    0xf
  417d73:	(bad)  
  417d74:	mov    dl,0xf3
  417d76:	(bad)  
  417d77:	sub    eax,0x52048fa8
  417d7c:	push   eax
  417d7d:	push   bp
  417d7f:	adc    al,0x33
  417d81:	push   ss
  417d82:	ins    DWORD PTR es:[edi],dx
  417d83:	aaa    
  417d84:	fcomp  QWORD PTR [ebp-0x7f57f7af]
  417d8a:	mov    ebx,0x8357cb73
  417d8f:	pop    ebp
  417d90:	and    esp,ecx
  417d92:	push   ds
  417d93:	or     ah,BYTE PTR [edi]
  417d95:	lock sbb eax,0xae4f0a06
  417d9b:	and    DWORD PTR [esi*2+0x7d5a7cac],edi
  417da2:	cld    
  417da3:	test   ch,bl
  417da5:	push   ss
  417da6:	mov    al,0x45
  417da8:	fsubr  st,st(7)
  417daa:	xchg   edi,eax
  417dab:	push   ecx
  417dac:	mov    eax,DWORD PTR [eax+0x76794603]
  417db2:	pusha  
  417db3:	xor    DWORD PTR [edx*1+0x3c22f58d],ebp
  417dba:	inc    esp
  417dbb:	or     BYTE PTR [ebx],0x7e
  417dbe:	sub    bh,cl
  417dc0:	and    DWORD PTR [eax],eax
  417dc2:	pushf  
  417dc3:	xor    BYTE PTR [eax+0x6c],0xd2
  417dc7:	cmp    BYTE PTR [edi],dh
  417dc9:	das    
  417dca:	push   ds
  417dcb:	pop    esp
  417dcc:	loope  0x417d83
  417dce:	jge    0x417d51
  417dd0:	sub    eax,0xc6fa85a7
  417dd5:	jmp    0x417e3d
  417dd7:	mov    edx,cs
  417dd9:	les    ebp,FWORD PTR [ecx]
  417ddb:	mov    edx,0x13a93a86
  417de0:	mov    esi,0x88635bc5
  417de5:	shr    BYTE PTR [esi-0x12],1
  417de8:	and    al,0x81
  417deb:	lods   al,BYTE PTR ds:[esi]
  417dec:	xchg   ebp,eax
  417ded:	push   ebx
  417dee:	mov    bl,0xde
  417df0:	test   DWORD PTR [ecx+0x682c5462],eax
  417df6:	mov    ecx,DWORD PTR [ebp+0x2b]
  417df9:	mov    ds:0x530ded4f,al
  417dfe:	ds call 0x459:0x72e52719
  417e06:	fcomp  QWORD PTR [esi]
  417e08:	cmp    edi,DWORD PTR [ebx-0x3b2b6296]
  417e0e:	inc    esi
  417e0f:	mov    ebp,0x77f1eb06
  417e14:	mov    esi,0x84c7d710
  417e19:	push   ebx
  417e1a:	jp     0x417da3
  417e1c:	repnz sti 
  417e1e:	shl    BYTE PTR [ebx],1
  417e20:	or     ebp,DWORD PTR es:[ecx-0x404a42f2]
  417e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e28:	(bad)  
  417e2a:	jbe    0x417ea1
  417e2c:	xchg   ebx,eax
  417e2d:	cli    
  417e2e:	(bad)  
  417e2f:	mov    dl,0x5b
  417e31:	retf   0x240f
  417e34:	jae    0x417dc0
  417e36:	pop    ds
  417e37:	imul   edx,DWORD PTR [ebx-0xe373eab],0xffffffaf
  417e3e:	in     al,0xf2
  417e40:	or     al,0xc5
  417e42:	adc    ecx,DWORD PTR [esi]
  417e44:	je     0x417e61
  417e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e47:	adc    eax,0xbaf41cee
  417e4c:	fild   QWORD PTR ds:0x99ef38df
  417e52:	mov    ds:0x60d8c9f1,al
  417e57:	clc    
  417e58:	fnstcw WORD PTR [edi+0x58]
  417e5b:	test   esi,edi
  417e5d:	mov    al,ds:0xfbc62313
  417e62:	or     eax,0xd40eb070
  417e67:	mov    esi,0x6e2a4ada
  417e6c:	pop    ds
  417e6d:	fs mov esi,0xf8b1df23
  417e73:	out    0x2,al
  417e75:	shr    DWORD PTR [ecx-0x77],cl
  417e78:	cld    
  417e79:	pop    ss
  417e7a:	rol    BYTE PTR [esi+0x16ff99a6],0xc
  417e81:	dec    esp
  417e82:	(bad)  
  417e84:	or     BYTE PTR [edx-0x66],dh
  417e87:	shl    BYTE PTR [esi],cl
  417e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e8a:	out    0x8c,eax
  417e8c:	dec    eax
  417e8d:	mov    WORD PTR [edi+0x51],ds
  417e90:	push   es
  417e91:	fs sub al,0x82
  417e94:	idiv   bh
  417e96:	adc    DWORD PTR [ebx+ebp*2],edi
  417e99:	sbb    ecx,0x95aa9e33
  417e9f:	ficom  WORD PTR [ecx+esi*4-0x59defa1e]
  417ea6:	inc    ebp
  417ea7:	ss jmp 0x417eef
  417eaa:	loope  0x417e64
  417eac:	push   ds
  417ead:	mov    ebp,eax
  417eaf:	xor    eax,0xc28695ba
  417eb4:	cmp    eax,0xb38cfe88
  417eb9:	test   eax,0xf61e45b8
  417ebe:	stos   BYTE PTR es:[edi],al
  417ebf:	dec    esi
  417ec0:	cli    
  417ec1:	mov    bl,BYTE PTR [edx+esi*2+0x6a]
  417ec5:	adc    dh,al
  417ec7:	mov    edx,ecx
  417ec9:	mov    cl,0xc
  417ecb:	mul    dl
  417ecd:	js     0x417e9f
  417ecf:	(bad)  
  417ed0:	in     al,dx
  417ed1:	mov    ebp,0x58603efe
  417ed6:	mov    es,edi
  417ed8:	call   0xa9cc5b79
  417edd:	idiv   DWORD PTR [ebx+0x37dbb616]
  417ee3:	dec    esi
  417ee4:	sbb    cl,BYTE PTR [edx]
  417ee6:	int3   
  417ee7:	xor    eax,0xd9146b7
  417eec:	push   esi
  417eed:	jecxz  0x417f32
  417eef:	in     al,dx
  417ef0:	add    BYTE PTR [eax-0x32],0x8e
  417ef4:	mov    edx,DWORD PTR [eax+0x60af52ef]
  417efa:	(bad)  
  417efb:	fstp   TBYTE PTR [edx+0x68]
  417efe:	and    BYTE PTR [edx-0x171b6d76],ah
  417f04:	in     eax,0x6d
  417f06:	jbe    0x417e88
  417f08:	rcl    BYTE PTR ds:0xf8ab8ea7,1
  417f0e:	lock fild DWORD PTR [edi]
  417f11:	xor    edx,DWORD PTR [edi]
  417f13:	imul   ebp,ebp,0x5390d9c8
  417f19:	ins    DWORD PTR es:[edi],dx
  417f1a:	aad    0x15
  417f1c:	(bad)  
  417f1d:	or     DWORD PTR [edx+edx*4-0xe23538d],ebp
  417f24:	xlat   BYTE PTR ds:[ebx]
  417f25:	mov    edi,0x5583ee93
  417f2a:	imul   ebx,DWORD PTR [eax+ebp*8],0xaa86541c
  417f31:	jl     0x417ef0
  417f33:	and    BYTE PTR [ebx+edi*2],ch
  417f36:	sahf   
  417f37:	outs   dx,DWORD PTR ds:[esi]
  417f38:	jp     0x417f90
  417f3a:	add    al,0x5d
  417f3c:	test   BYTE PTR [edx],bh
  417f3e:	adc    cl,BYTE PTR [ebx+0x43]
  417f41:	inc    edi
  417f42:	popa   
  417f43:	bound  edi,QWORD PTR [ebp+0x11]
  417f46:	jns    0x417faf
  417f48:	mov    ah,0xe8
  417f4a:	dec    ecx
  417f4b:	mov    cs,ecx
  417f4d:	(bad)  
  417f4e:	shl    BYTE PTR [ecx],0xcc
  417f51:	pop    eax
  417f52:	mov    al,ds:0xf09d0f8
  417f57:	jnp    0x417f9d
  417f59:	dec    esp
  417f5a:	add    edi,edx
  417f5c:	mov    dl,0x64
  417f5e:	popa   
  417f5f:	cdq    
  417f60:	jmp    0xaa542fc3
  417f65:	lock add eax,0xabb8eda4
  417f6b:	xor    edx,DWORD PTR [ebx+ecx*8-0x1091d79b]
  417f72:	std    
  417f73:	jbe    0x417efe
  417f75:	faddp  st(1),st
  417f77:	mov    ebx,0x817682a1
  417f7c:	int    0x6
  417f7e:	cld    
  417f7f:	inc    edi
  417f80:	rcr    BYTE PTR [edx-0x78],0x29
  417f84:	push   cs
  417f85:	mov    ds:0xe7775a02,eax
  417f8a:	push   cs
  417f8b:	scas   al,BYTE PTR es:[edi]
  417f8c:	inc    ebx
  417f8d:	lds    esi,FWORD PTR [esi-0x25e55ad3]
  417f93:	into   
  417f94:	(bad)  
  417f95:	ja     0x417fd6
  417f97:	pop    ebx
  417f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f99:	and    al,ah
  417f9b:	push   ss
  417f9c:	bound  edx,QWORD PTR [edx]
  417f9e:	iret   
  417f9f:	sti    
  417fa0:	jg     0x417fb0
  417fa2:	ja     0x417fc6
  417fa4:	push   es
  417fa5:	mov    edi,0x33051cb9
  417faa:	js     0x417f67
  417fac:	pushf  
  417fad:	cs add ebx,eax
  417fb0:	pushf  
  417fb1:	das    
  417fb2:	cmp    BYTE PTR [edx],0x8a
  417fb5:	sub    BYTE PTR [edx-0x1ec592fd],cl
  417fbb:	adc    eax,0x2d112738
  417fc0:	and    DWORD PTR [eax-0x1d],esi
  417fc3:	xchg   edi,eax
  417fc4:	adc    cl,BYTE PTR [ecx+0x20]
  417fc7:	mov    bh,0x3
  417fc9:	sahf   
  417fca:	fsub   QWORD PTR [edi]
  417fcc:	xlat   BYTE PTR ds:[ebx]
  417fcd:	push   es
  417fce:	jg     0x417f61
  417fd0:	dec    ebx
  417fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fd2:	pop    ss
  417fd3:	inc    eax
  417fd4:	add    bh,0x9d
  417fd7:	lds    esp,FWORD PTR [ecx]
  417fd9:	xchg   edx,eax
  417fda:	fwait
  417fdb:	pop    esp
  417fdc:	scas   eax,DWORD PTR es:[edi]
  417fdd:	jmp    0x418031
  417fdf:	fist   WORD PTR [ebx-0x65]
  417fe2:	push   0x704e4631
  417fe7:	out    dx,eax
  417fe8:	test   DWORD PTR [ecx-0x68],ebx
  417feb:	bound  ebx,QWORD PTR [esi+edx*1]
  417fee:	out    0x2f,eax
  417ff0:	call   0x531b:0xe2533610
  417ff7:	mov    eax,ds:0x2a45e3c7
  417ffc:	out    dx,al
  417ffd:	sub    BYTE PTR [eax+0x334fa3a0],dl
  418003:	dec    esi
  418004:	out    dx,al
  418005:	jmp    0x417fd4
  418007:	pushf  
  418008:	dec    BYTE PTR [eax]
  41800a:	or     ebp,DWORD PTR [edi-0x4cee3ba6]
  418010:	sbb    dl,BYTE PTR [edi+0x22]
  418013:	fucomp st(3)
  418015:	repz retf 
  418017:	ret    
  418018:	mov    eax,0x28928fd6
  41801d:	pushf  
  41801e:	mov    edx,esp
  418020:	retf   
  418021:	pop    ebx
  418022:	push   ds
  418023:	test   al,0xf0
  418026:	sbb    ebp,ecx
  418028:	push   cs
  418029:	fcomp  DWORD PTR [ebx-0x7b4169fa]
  41802f:	enter  0xf2f,0xe
  418033:	push   es
  418034:	or     DWORD PTR [edx],ebp
  418036:	push   esi
  418037:	jne    0x417ff6
  418039:	mov    al,0xa5
  41803b:	outs   dx,DWORD PTR ds:[esi]
  41803c:	pop    ebx
  41803d:	mov    bh,0x63
  41803f:	mov    ch,0x57
  418041:	in     eax,0x41
  418043:	xor    edi,edx
  418045:	push   edx
  418046:	mov    bl,0x16
  418048:	popa   
  418049:	rol    BYTE PTR [edx],cl
  41804b:	std    
  41804c:	test   BYTE PTR [edi-0x2f],0x0
  418050:	das    
  418051:	ins    BYTE PTR es:[edi],dx
  418052:	sub    DWORD PTR [ecx+0x7a],eax
  418055:	jge    0x4180ba
  418057:	popf   
  418058:	and    BYTE PTR [eax+0x4a272cad],bh
  41805e:	sar    DWORD PTR [ecx],0x5d
  418061:	push   esi
  418062:	mov    al,ch
  418064:	int    0x7d
  418066:	loop   0x4180a9
  418068:	cmp    bl,BYTE PTR [edi+0x2f]
  41806b:	test   BYTE PTR [ebx+0x216df35d],dh
  418071:	dec    eax
  418072:	dec    di
  418074:	cs imul ecx,esi,0x41
  418078:	or     dh,BYTE PTR [ebp+0x1052f709]
  41807e:	add    eax,0x10ca892a
  418083:	inc    edi
  418084:	not    DWORD PTR [edi+0x9c2d30a]
  41808a:	stos   BYTE PTR es:[edi],al
  41808b:	xor    BYTE PTR [edi-0x429bbba4],dl
  418091:	div    DWORD PTR [ecx+ebp*1+0x40f8ef52]
  418098:	pop    ss
  418099:	mov    ebp,0xcdbc63a1
  41809e:	dec    edi
  41809f:	cmp    al,BYTE PTR [ebx+0x4eea536b]
  4180a5:	xchg   ebp,eax
  4180a6:	cld    
  4180a7:	jb     0x4180c7
  4180a9:	mov    dh,0xb1
  4180ab:	and    dh,al
  4180ad:	cwde   
  4180ae:	out    0x96,al
  4180b0:	stc    
  4180b1:	or     bl,ch
  4180b3:	das    
  4180b4:	pop    esi
  4180b5:	sub    esi,edi
  4180b7:	lods   eax,DWORD PTR ds:[esi]
  4180b8:	mov    ecx,0x877f91c6
  4180bd:	or     edx,DWORD PTR [edi+0x58b28a5c]
  4180c3:	pop    es
  4180c4:	dec    BYTE PTR [ecx]
  4180c6:	mov    ebp,0xa0f148e4
  4180cb:	(bad)  [ebp+eax*2+0x1f]
  4180cf:	mov    ds,esi
  4180d1:	ins    DWORD PTR es:[edi],dx
  4180d2:	ja     0x41809e
  4180d4:	sub    esp,DWORD PTR [edi]
  4180d6:	pop    esi
  4180d7:	retf   0x5864
  4180da:	call   0xf7adac9a
  4180df:	popa   
  4180e0:	adc    eax,0x466cfce3
  4180e5:	inc    BYTE PTR [edx]
  4180e7:	imul   edx,DWORD PTR [eax],0x4b73f7ba
  4180ed:	xlat   BYTE PTR ds:[ebx]
  4180ee:	and    BYTE PTR [ebx],bh
  4180f0:	jl     0x4180d9
  4180f2:	in     eax,dx
  4180f3:	fidivr DWORD PTR [edi-0x2b]
  4180f6:	push   0xffffffab
  4180f8:	lock fimul DWORD PTR [eax+0x4b]
  4180fc:	int3   
  4180fd:	mov    ds:0xc4bbce2,ax
  418103:	inc    ebx
  418104:	bound  ecx,QWORD PTR [ebx-0x23]
  418107:	mov    BYTE PTR [ebp-0x4fe3006c],cl
  41810d:	loop   0x41811a
  41810f:	mov    dl,0x6b
  418111:	sti    
  418112:	in     eax,dx
  418113:	scas   eax,DWORD PTR es:[edi]
  418114:	sub    ah,BYTE PTR [esi]
  418116:	sub    edi,DWORD PTR [edi+ebp*8-0x3043ea70]
  41811d:	pop    ss
  41811e:	(bad)  
  41811f:	in     al,dx
  418120:	loopne 0x4180b0
  418122:	repnz lahf 
  418124:	test   eax,0x1aef75c2
  418129:	dec    esp
  41812a:	out    0x7c,eax
  41812c:	and    BYTE PTR [ebp-0x2d],dl
  41812f:	fcom   DWORD PTR [edi+edx*4-0x60ef4bae]
  418136:	addr16 push esi
  418138:	xchg   ecx,edi
  41813a:	test   eax,0xbe99766d
  41813f:	adc    DWORD PTR [edi+ebx*8],ecx
  418142:	inc    edx
  418143:	dec    eax
  418144:	lods   al,BYTE PTR ds:[esi]
  418145:	mov    ds:0x2e3d3274,eax
  41814a:	jmp    0x4180f7
  41814c:	ins    DWORD PTR es:[edi],dx
  41814d:	mov    bl,0xf9
  41814f:	cmp    eax,0xc4ed5702
  418154:	ror    BYTE PTR [edi*1+0x625a478],1
  41815b:	mov    esi,0x4553148a
  418160:	sub    DWORD PTR [esi-0x67914d1c],eax
  418166:	pusha  
  418167:	inc    esp
  418168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418169:	and    DWORD PTR [ebx+0x7a],0x28716c4
  418170:	xchg   edx,eax
  418171:	jae    0x41819f
  418173:	cmp    eax,DWORD PTR [esi-0x3d]
  418176:	shr    DWORD PTR [ebp-0x3251b44c],cl
  41817c:	add    ecx,DWORD PTR [edi-0x5a]
  41817f:	outs   dx,BYTE PTR ds:[esi]
  418180:	xchg   ecx,eax
  418181:	pop    ss
  418182:	xchg   edi,eax
  418183:	imul   ebx,DWORD PTR [ebx],0x2
  418186:	push   ebx
  418187:	dec    ecx
  418188:	neg    DWORD PTR [esp+edi*8]
  41818b:	jg     0x4181ec
  41818d:	mov    bl,BYTE PTR [ebx+0x391d2417]
  418193:	(bad)  
  418194:	cmp    ecx,esi
  418196:	(bad)  
  418197:	xor    ah,BYTE PTR [ebx+0x5a]
  41819a:	dec    ecx
  41819b:	fwait
  41819c:	out    dx,eax
  41819d:	and    ebx,DWORD PTR [ebx+0x34]
  4181a0:	jmp    0x9687:0x1aee9199
  4181a7:	jmp    0x4181a0
  4181a9:	sub    BYTE PTR [edx+eiz*4],0x49
  4181ad:	into   
  4181ae:	and    al,0x8d
  4181b0:	mov    ds:0x8e53cd0a,al
  4181b5:	ss loopne 0x4181a2
  4181b8:	mov    ch,BYTE PTR [eax-0xa]
  4181bb:	add    esi,DWORD PTR [esi]
  4181bd:	gs xchg esp,eax
  4181bf:	add    al,0x81
  4181c1:	dec    esi
  4181c2:	jp     0x418144
  4181c4:	jnp    0x41815e
  4181c6:	loop   0x41814a
  4181c8:	out    dx,al
  4181c9:	mov    edi,0x7e2d16ed
  4181ce:	ficomp WORD PTR [edi]
  4181d0:	mov    DWORD PTR [edx],0x77350c3a
  4181d6:	xchg   ebp,eax
  4181d7:	sub    al,0x43
  4181d9:	push   ecx
  4181da:	push   0xf6b7f413
  4181df:	mov    dl,ah
  4181e1:	push   ecx
  4181e2:	push   0x65
  4181e4:	mov    bl,0xf5
  4181e6:	test   BYTE PTR [ecx-0x235b55d0],bh
  4181ec:	addr16 test edi,ecx
  4181ef:	div    DWORD PTR [eax-0x10]
  4181f2:	xchg   BYTE PTR [esi-0x3b],al
  4181f5:	jno    0x41820e
  4181f7:	cdq    
  4181f8:	or     dh,al
  4181fa:	ds adc al,0xa9
  4181fd:	lods   al,BYTE PTR ds:[esi]
  4181fe:	inc    ecx
  4181ff:	adc    DWORD PTR [esi-0x67],esp
  418202:	and    al,0x7
  418204:	or     eax,0x3c7c4578
  418209:	add    bh,BYTE PTR [esi+0x6]
  41820c:	dec    edx
  41820d:	push   esi
  41820e:	xor    al,0xc1
  418210:	cmp    DWORD PTR [ecx-0x2b2d51b2],0xae454277
  41821a:	ins    DWORD PTR es:[edi],dx
  41821b:	mov    BYTE PTR [ebx],bl
  41821d:	fdivr  QWORD PTR [esi-0x80]
  418220:	test   DWORD PTR [edi+0x7d],ebp
  418223:	jo     0x41824e
  418225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418226:	mov    ah,0x82
  418228:	ins    DWORD PTR es:[edi],dx
  418229:	nop
  41822a:	mov    ah,ch
  41822c:	cmp    BYTE PTR [edi+0x54],dh
  41822f:	inc    esp
  418231:	cmp    al,0x94
  418233:	cmp    DWORD PTR [ebx],edx
  418235:	fisttp DWORD PTR fs:[edi+0x388bd94e]
  41823c:	xchg   DWORD PTR [edi+eax*1+0x5610a761],esp
  418243:	xchg   esi,eax
  418244:	(bad)  
  418245:	test   al,0xd7
  418247:	mov    ebp,DWORD PTR [edx]
  418249:	imul   eax,DWORD PTR [ebx-0x18],0x8bbacde0
  418250:	adc    al,0x39
  418252:	addr16 push ds
  418254:	mov    edi,0x3d80d7bf
  418259:	sub    eax,0x7a07f948
  41825e:	mov    ds:0x5486af34,eax
  418263:	ret    0xa267
  418266:	sahf   
  418267:	gs aam 0xca
  41826a:	xlat   BYTE PTR ds:[ebx]
  41826b:	test   ecx,esi
  41826d:	call   0xc56197b4
  418272:	ins    DWORD PTR es:[edi],dx
  418273:	arpl   bp,cx
  418275:	adc    BYTE PTR [ebp+0x5ff3db8d],0x67
  41827c:	cdq    
  41827d:	adc    DWORD PTR ss:[esi+0x22],0xb96b9b9d
  418285:	setnp  ah
  418288:	mov    ecx,0x7094c358
  41828d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41828e:	setp   BYTE PTR [edi+esi*1-0x14]
  418293:	icebp  
  418294:	jnp    0x4182a2
  418296:	(bad)  [edx+0x5eb1e928]
  41829c:	es enter 0x78f0,0x87
  4182a1:	imul   ebp,ebp,0x6dc42ade
  4182a7:	mov    BYTE PTR [ecx-0x7e],bh
  4182aa:	call   0x78d7ec1
  4182af:	lea    ecx,[ecx+edi*8]
  4182b2:	inc    ebp
  4182b3:	(bad)  
  4182b4:	fstp   QWORD PTR [ecx-0x7c]
  4182b7:	cs (bad) 
  4182b9:	sbb    BYTE PTR [edi+0x5f87ff82],bl
  4182bf:	lds    edi,FWORD PTR [ebx-0x2fe34d70]
  4182c5:	and    al,0x51
  4182c7:	xchg   ebx,eax
  4182c8:	idiv   BYTE PTR [ebx]
  4182ca:	xchg   ecx,eax
  4182cb:	inc    esi
  4182cc:	fmul   QWORD PTR [ecx+0x263ab8d2]
  4182d2:	adc    dh,BYTE PTR ds:0xc9706997
  4182d8:	sub    eax,0xc9dda4d0
  4182dd:	es xor al,0x50
  4182e0:	or     eax,0x37c5b2fd
  4182e5:	pop    ecx
  4182e6:	retf   
  4182e7:	jae    0x4182d0
  4182e9:	fnstcw WORD PTR [ecx+0x6147d744]
  4182ef:	dec    edx
  4182f0:	aam    0xe8
  4182f2:	scas   al,BYTE PTR es:[edi]
  4182f3:	inc    esp
  4182f4:	mov    ebx,0x870c4077
  4182f9:	mov    bh,0x8a
  4182fb:	jmp    0x37aa:0xa17221de
  418302:	push   0xfffffff5
  418304:	enter  0x2465,0x92
  418308:	daa    
  418309:	mov    cs,WORD PTR [ebx]
  41830b:	inc    ecx
  41830c:	and    DWORD PTR [ecx-0xa],ebp
  41830f:	inc    esp
  418310:	push   ebp
  418311:	outs   dx,DWORD PTR es:[esi]
  418313:	ds jl  0x4182df
  418316:	cs xchg esi,eax
  418318:	fbld   TBYTE PTR [edx+0x30]
  41831b:	mov    esp,0xeb4bb216
  418320:	es jg  0x41833a
  418323:	xchg   edi,eax
  418324:	scas   eax,DWORD PTR es:[edi]
  418325:	jb     0x4183a4
  418327:	stos   DWORD PTR es:[edi],eax
  418328:	popa   
  418329:	cmp    eax,0xdd46d2b6
  41832e:	(bad)  
  41832f:	arpl   WORD PTR [esi],si
  418331:	dec    esp
  418332:	push   ebx
  418333:	es and al,0xe7
  418336:	pop    ss
  418337:	or     ecx,DWORD PTR [edx-0xf9f1ae3]
  41833d:	and    ebp,edx
  41833f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418340:	fdivr  DWORD PTR [ebp+0x50f14617]
  418346:	pop    esp
  418347:	adc    BYTE PTR [edx+0x5f],dl
  41834a:	add    BYTE PTR [edi+ebx*8],ch
  41834d:	mov    ds:0x3e7c7593,al
  418352:	call   0xf2fc:0x16f54137
  418359:	imul   ebp,DWORD PTR [edx],0x5c
  41835c:	aad    0x70
  41835e:	rcl    BYTE PTR [edx+0x16],cl
  418361:	dec    ebp
  418362:	xor    eax,0xeacb3a6a
  418367:	jbe    0x4183c3
  418369:	aas    
  41836a:	push   ss
  41836b:	(bad)  
  41836c:	mov    BYTE PTR [ebx-0x1bb4fad3],dh
  418372:	cmp    al,0x1b
  418374:	call   0xb693:0x84eb0254
  41837b:	push   edi
  41837c:	icebp  
  41837d:	sbb    cl,BYTE PTR [ebp+ebx*2-0x3c2ddcef]
  418384:	fnstsw WORD PTR [edi]
  418386:	cld    
  418387:	arpl   bx,di
  418389:	loop   0x41839f
  41838b:	mov    eax,0x4dea6a4e
  418390:	jno    0x418358
  418392:	push   ebp
  418393:	sbb    dh,BYTE PTR [edi+0x70fec530]
  418399:	retf   0xfb1d
  41839c:	stos   BYTE PTR es:[edi],al
  41839d:	or     cl,BYTE PTR [edx-0x43]
  4183a0:	ret    
  4183a1:	or     eax,DWORD PTR [edi]
  4183a3:	repz sar DWORD PTR [edi-0x2e81786],cl
  4183aa:	or     BYTE PTR [ebp+0x26c15468],dh
  4183b0:	ret    
  4183b1:	and    eax,0xa7435d2e
  4183b6:	aam    0x2f
  4183b8:	arpl   si,cx
  4183ba:	cmp    edi,esi
  4183bc:	xlat   BYTE PTR ds:[ebx]
  4183bd:	jecxz  0x4183fd
  4183bf:	pop    eax
  4183c0:	pop    ebx
  4183c1:	mov    dh,0x81
  4183c3:	gs and eax,0x24353d52
  4183c9:	dec    ebx
  4183ca:	pop    ds
  4183cb:	push   ss
  4183cc:	adc    DWORD PTR [ecx],ebx
  4183ce:	adc    esi,DWORD PTR [edx+ecx*2-0x26274900]
  4183d5:	ins    DWORD PTR es:[edi],dx
  4183d6:	dec    ebp
  4183d7:	call   0xea0b6bbc
  4183dc:	xor    ah,dl
  4183de:	sbb    dh,BYTE PTR [ebx-0x6a2d2a58]
  4183e4:	test   eax,ebx
  4183e6:	jmp    0xb53049a5
  4183eb:	or     al,0xaa
  4183ee:	jns    0x418434
  4183f0:	add    DWORD PTR [esi+0x4e349a83],0x3a
  4183f7:	jecxz  0x41841c
  4183f9:	xor    BYTE PTR [ebp+0x14],dh
  4183fc:	jmp    0x95f0:0x8aecb7fb
  418403:	and    DWORD PTR [eax+0x6a],esp
  418406:	in     eax,dx
  418407:	pop    eax
  418408:	jecxz  0x41839a
  41840a:	addr16 jno 0x4183d1
  41840d:	jle    0x4183d2
  41840f:	mov    edi,0x83e4f2eb
  418414:	mov    edx,fs
  418416:	pusha  
  418417:	mov    ah,0x6f
  418419:	bound  edx,QWORD PTR [esi+0x10]
  41841c:	jne    0x41847f
  41841e:	loop   0x4183ce
  418420:	out    0x3c,al
  418422:	ins    DWORD PTR es:[edi],dx
  418423:	dec    esp
  418424:	xchg   edi,eax
  418425:	out    dx,eax
  418426:	fcmove st,st(3)
  418428:	dec    ebx
  418429:	sub    DWORD PTR [ebx+0x14450673],esp
  41842f:	xlat   BYTE PTR ds:[ebx]
  418430:	stos   BYTE PTR es:[edi],al
  418431:	fsubr  DWORD PTR [edx-0x43]
  418434:	dec    esi
  418435:	lods   al,BYTE PTR ds:[esi]
  418436:	les    edi,FWORD PTR [eax+esi*4]
  418439:	push   esp
  41843a:	inc    ecx
  41843b:	mov    bl,0x60
  41843d:	adc    edx,0x35400be5
  418443:	fs loop 0x4183d5
  418446:	mov    BYTE PTR [edx-0x70f6f1f],ch
  41844c:	pause  
  41844e:	jmp    0x4183ed
  418450:	and    bl,BYTE PTR [ebp-0x2a]
  418453:	mov    dh,0xe2
  418455:	mov    gs,WORD PTR [edx]
  418457:	or     DWORD PTR [edx],edi
  418459:	fs mov esi,0xa4f1ccb4
  41845f:	in     eax,0xf2
  418461:	dec    edi
  418462:	xor    esp,DWORD PTR [eax]
  418464:	or     BYTE PTR [ecx-0x664c6dd5],bl
  41846a:	clc    
  41846b:	cli    
  41846c:	data16 dec ax
  41846f:	xor    cl,BYTE PTR [ebp-0x557b2b7]
  418475:	lds    edi,FWORD PTR [eax+0x137d0f35]
  41847b:	out    0x52,eax
  41847d:	call   0xdc66:0xe806b21b
  418484:	cwde   
  418485:	jns    0x418440
  418487:	lds    esi,FWORD PTR [edi]
  418489:	inc    ebp
  41848a:	ss enter 0x5514,0x40
  41848f:	repnz mov eax,ds:0xbec0d948
  418495:	enter  0x18e2,0xf3
  418499:	ficom  WORD PTR [edx]
  41849b:	aas    
  41849c:	dec    edx
  41849d:	data16 stos BYTE PTR es:[edi],al
  41849f:	xchg   ecx,eax
  4184a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a1:	jp     0x4184ed
  4184a3:	push   0xbde396b8
  4184a8:	pop    edx
  4184a9:	popa   
  4184aa:	inc    edi
  4184ab:	lock cs adc al,0xf3
  4184af:	scas   eax,DWORD PTR es:[edi]
  4184b0:	loope  0x418502
  4184b2:	cli    
  4184b3:	pop    ecx
  4184b4:	mul    BYTE PTR [edx+esi*4+0x45bb897f]
  4184bb:	jp     0x418477
  4184bd:	(bad)  
  4184be:	xchg   edi,eax
  4184bf:	xor    BYTE PTR [ebx],dh
  4184c1:	push   ss
  4184c2:	add    DWORD PTR [edi+eiz*8+0x7cd62f0d],esp
  4184c9:	fisubr DWORD PTR [ebp+ecx*4+0x45537d6e]
  4184d0:	sbb    eax,0xd59c5cf4
  4184d5:	pop    es
  4184d6:	jge    0x4184f9
  4184d8:	jle    0x418513
  4184da:	dec    edi
  4184db:	mov    dh,dh
  4184dd:	das    
  4184de:	mov    ebp,DWORD PTR [edx-0x3a]
  4184e1:	jp     0x418534
  4184e3:	jnp    0x418474
  4184e5:	pop    esp
  4184e6:	jge    0x418484
  4184e8:	mov    dl,0xa2
  4184ea:	adc    al,BYTE PTR [esi+0x5b]
  4184ed:	jge    0x41847f
  4184ef:	pop    edx
  4184f0:	xor    bl,BYTE PTR [eax]
  4184f2:	sub    BYTE PTR [esi+0xba2ba16],cl
  4184f8:	test   BYTE PTR [edi+0x5082068],bl
  4184fe:	mov    esi,0x7d4140db
  418503:	loope  0x41857e
  418505:	sar    ebx,1
  418507:	out    dx,eax
  418508:	mov    al,0x50
  41850a:	scas   eax,DWORD PTR es:[edi]
  41850b:	test   eax,0xb4b9e9c9
  418510:	aas    
  418511:	pop    edi
  418512:	sbb    al,0x94
  418514:	xchg   ebp,eax
  418515:	add    al,0x55
  418517:	jns    0x418554
  418519:	jecxz  0x41856f
  41851b:	jne    0x4184cb
  41851d:	repnz outs dx,DWORD PTR ds:[esi]
  41851f:	xor    esi,0x30
  418522:	je     0x41854d
  418524:	push   ss
  418525:	fstp   TBYTE PTR [ebx]
  418527:	sub    DWORD PTR [ecx],esi
  418529:	(bad)  
  41852a:	nop
  41852b:	mov    edi,0xba8b0cc5
  418530:	lea    esi,[esp+edx*1-0x3]
  418534:	mov    ds:0x7fec8031,eax
  418539:	pop    edx
  41853a:	mov    ds:0x258facf2,al
  41853f:	push   ss
  418540:	sbb    al,0x41
  418542:	cld    
  418543:	icebp  
  418544:	cdq    
  418545:	add    al,0x17
  418547:	jb     0x418515
  418549:	push   es
  41854a:	and    eax,0xb3466304
  41854f:	or     eax,0x873b21e1
  418554:	jl     0x41857b
  418556:	enter  0x7109,0xb6
  41855a:	sub    cl,BYTE PTR [esi+0x7f]
  41855d:	adc    DWORD PTR [ebp+0xd394489],edx
  418563:	leave  
  418564:	xlat   BYTE PTR ds:[ebx]
  418565:	jo     0x4185dc
  418567:	lock xor al,0xd3
  41856a:	dec    ebp
  41856b:	or     edx,DWORD PTR [ebx]
  41856d:	xor    DWORD PTR fs:[eax-0x5f],ebx
  418571:	xor    edx,0xffffffe8
  418574:	repz push ebx
  418576:	pop    esp
  418577:	mov    ecx,0xf89ec4d2
  41857c:	dec    ebp
  41857d:	aas    
  41857e:	mov    ebx,ecx
  418580:	(bad)  
  418581:	test   al,0x41
  418583:	hlt    
  418584:	ja     0x418596
  418586:	cmp    ecx,edi
  418588:	mov    ds:0x24ee3a90,al
  41858d:	push   esi
  41858e:	add    eax,DWORD PTR [ebx-0x40]
  418591:	jns    0x4185f3
  418593:	div    DWORD PTR [ecx]
  418595:	jl     0x4185c5
  418597:	(bad)  
  418598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418599:	xlat   BYTE PTR ds:[ebx]
  41859a:	js     0x4185aa
  41859c:	cli    
  41859d:	fsub   DWORD PTR [ebx-0x79]
  4185a0:	dec    ecx
  4185a1:	nop
  4185a2:	xor    DWORD PTR [ebx-0x4c],esi
  4185a5:	or     eax,0xfe012d94
  4185aa:	push   0xffffffc6
  4185ac:	sbb    DWORD PTR [ecx],ebx
  4185ae:	cld    
  4185af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b0:	dec    esp
  4185b1:	lds    esp,FWORD PTR [eax+0x54ed68f3]
  4185b7:	cmc    
  4185b8:	jmp    0x418543
  4185ba:	popf   
  4185bb:	icebp  
  4185bc:	jl     0x4185d4
  4185be:	cmc    
  4185bf:	cmp    eax,0x5c
  4185c2:	sbb    al,BYTE PTR [edi-0x61]
  4185c5:	sbb    eax,0x9616a1d8
  4185ca:	nop
  4185cb:	leave  
  4185cc:	pop    ebx
  4185cd:	adc    ebp,eax
  4185cf:	fld    QWORD PTR [bx+di]
  4185d2:	cmp    al,0x6f
  4185d4:	add    al,0xe7
  4185d6:	fsubr  QWORD PTR [edi+eax*1+0xe]
  4185da:	dec    eax
  4185db:	push   edi
  4185dc:	out    0xd1,eax
  4185de:	mov    ah,0x2c
  4185e0:	imul   ebp,DWORD PTR [esi-0x4c],0x6f
  4185e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185e5:	(bad)  
  4185e6:	adc    ch,al
  4185e8:	retf   0xe53e
  4185eb:	outs   dx,BYTE PTR ds:[esi]
  4185ec:	add    al,0xcf
  4185ee:	pop    ss
  4185ef:	mov    dh,0xd
  4185f1:	lock aad 0x1f
  4185f4:	popa   
  4185f5:	sub    DWORD PTR [esi+edx*2-0x1f],ecx
  4185f9:	aaa    
  4185fa:	test   BYTE PTR [ebx-0x5fc76d3],bh
  418600:	stos   BYTE PTR es:[edi],al
  418601:	xchg   BYTE PTR ds:0x57155a1c,ah
  418607:	xor    ebx,DWORD PTR [esi-0x2d]
  41860a:	ins    BYTE PTR es:[edi],dx
  41860b:	js     0x41860f
  41860d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41860e:	arpl   WORD PTR [eax+0x8],dx
  418611:	dec    edx
  418612:	gs push ss
  418614:	dec    ecx
  418615:	mov    cl,0xa0
  418617:	rcr    edi,0x21
  41861a:	out    dx,al
  41861b:	inc    edx
  41861c:	inc    ecx
  41861d:	xlat   BYTE PTR ds:[ebx]
  41861e:	icebp  
  41861f:	iret   
  418620:	loop   0x4185fe
  418622:	fs mov cl,0x22
  418625:	or     al,0x51
  418627:	ret    0x927c
  41862a:	repz inc BYTE PTR [ecx]
  41862d:	xchg   edi,eax
  41862e:	ss fs pusha 
  418631:	ins    DWORD PTR es:[edi],dx
  418632:	dec    ebx
  418633:	or     edi,DWORD PTR [eax+0x200cee92]
  418639:	xlat   BYTE PTR ds:[ebx]
  41863a:	pop    ss
  41863b:	mov    ds:0xd2cd550c,eax
  418640:	test   eax,0x58cf47a
  418645:	jo     0x418643
  418647:	test   eax,0x9b4f1ed7
  41864c:	jmp    0x418644
  41864e:	jbe    0x418687
  418650:	and    BYTE PTR [ebx+0x2b4f6d05],dh
  418656:	stos   DWORD PTR es:[edi],eax
  418657:	pop    esp
  418658:	cmc    
  418659:	mov    bh,0xce
  41865b:	xchg   DWORD PTR [edi+0x70],esp
  41865e:	cs out 0x59,eax
  418661:	adc    dh,BYTE PTR [eax-0x541bb60c]
  418667:	daa    
  418668:	bound  ebp,QWORD PTR [ebx+0x2de0fe09]
  41866e:	enter  0xcea8,0xb
  418672:	jecxz  0x41868a
  418674:	pop    edi
  418675:	xorps  xmm5,XMMWORD PTR [ecx]
  418678:	stc    
  418679:	xchg   BYTE PTR [eax-0x5e],dl
  41867c:	jg     0x4186fc
  41867e:	push   cs
  41867f:	mov    BYTE PTR [eax],cl
  418681:	mov    WORD PTR [edi+0x73300b4a],ss
  418687:	dec    DWORD PTR [ecx*4-0x52d92a9e]
  41868e:	icebp  
  41868f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418690:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  418692:	push   cs
  418693:	lods   al,BYTE PTR ds:[esi]
  418694:	fcomp  QWORD PTR [ebp-0x37]
  418697:	sub    edi,ecx
  418699:	push   0x37bf5a73
  41869e:	push   0xcc11ea4b
  4186a3:	push   ebx
  4186a4:	add    eax,0x9067b7ef
  4186a9:	jb     0x4186df
  4186ab:	add    ebp,DWORD PTR [edx+0x32276ef5]
  4186b1:	js     0x418638
  4186b3:	xchg   edx,eax
  4186b4:	xchg   ebp,eax
  4186b5:	aas    
  4186b6:	xchg   DWORD PTR [edi+ecx*8+0x16],edx
  4186ba:	int3   
  4186bb:	cmovne ebx,DWORD PTR ds:0x1074ea01
  4186c2:	mov    edx,0x55750b87
  4186c7:	ds neg BYTE PTR ss:[esp+eax*8]
  4186cc:	lahf   
  4186cd:	sub    eax,edi
  4186cf:	aad    0x1e
  4186d1:	addr16 sbb eax,0x4aba6e90
  4186d7:	xor    bh,dl
  4186d9:	es scas al,BYTE PTR es:[edi]
  4186db:	shl    DWORD PTR [edi-0x1a],cl
  4186de:	add    ebp,ebp
  4186e0:	sar    dl,0x24
  4186e3:	fnstenv [ebx-0x1f]
  4186e6:	jne    0x418730
  4186e8:	push   esp
  4186e9:	js     0x418707
  4186eb:	add    ecx,DWORD PTR [esi-0x73]
  4186ee:	xchg   edi,eax
  4186ef:	dec    ebp
  4186f0:	mov    bh,0x24
  4186f2:	shr    BYTE PTR [edx],cl
  4186f4:	jne    0x4186ff
  4186f6:	loop   0x4186cb
  4186f8:	push   ebp
  4186f9:	or     eax,0xf59fdc06
  4186fe:	sub    edx,DWORD PTR [ebx-0x41aaa0be]
  418704:	mov    ds:0x5ef8c7d4,eax
  418709:	push   esp
  41870a:	stos   BYTE PTR es:[edi],al
  41870b:	adc    al,0x36
  41870d:	and    bl,BYTE PTR [esi-0x33dd4f94]
  418713:	repz bnd jb 0x418760
  418717:	pop    ebp
  418718:	sub    BYTE PTR [edx+ebp*8],bh
  41871b:	and    al,0xdc
  41871d:	pusha  
  41871e:	xor    edx,edx
  418720:	iret   
  418721:	pop    ebp
  418722:	and    DWORD PTR [esi-0x1b5bdb0f],edi
  418728:	cmp    eax,0x7fe0d144
  41872d:	jmp    0xe086:0x64de0ba
  418734:	add    esi,ebp
  418736:	hlt    
  418737:	mov    BYTE PTR [ebp+0x16],dh
  41873a:	test   BYTE PTR [edi],cl
  41873c:	pop    ecx
  41873d:	cmp    DWORD PTR [edx],ebx
  41873f:	inc    ebx
  418740:	mov    ebx,0xf789cda3
  418745:	les    ebx,FWORD PTR [esi+0x32]
  418748:	sbb    esi,edi
  41874a:	lds    eax,FWORD PTR [edx+0x8]
  41874d:	jns    0x41878f
  41874f:	push   ebp
  418750:	push   0x6b45a3c5
  418755:	xor    eax,0xa47c52ab
  41875a:	xor    BYTE PTR [ebx],bl
  41875c:	repnz sub DWORD PTR [ecx-0x75],ebp
  418760:	fistp  DWORD PTR [ebx+0x33ecd764]
  418766:	and    edx,DWORD PTR [ecx-0x344c3177]
  41876c:	dec    ebp
  41876d:	jnp    0x418703
  41876f:	and    dh,ch
  418771:	mov    WORD PTR [edx+0x607ae8f6],es
  418777:	or     BYTE PTR [esi-0x5f],dh
  41877a:	push   ss
  41877b:	jmp    0x23f7:0x4081df0e
  418782:	mov    ecx,0x15fbd2d3
  418787:	pop    eax
  418788:	jge    0x418732
  41878a:	mov    eax,0x23c7503d
  41878f:	leave  
  418790:	jo     0x4187c9
  418792:	pop    ds
  418793:	cmp    eax,0xd7198314
  418798:	retf   0xe5ec
  41879b:	cld    
  41879c:	aas    
  41879d:	and    dh,BYTE PTR [ebp+0x24ad8b69]
  4187a3:	bswap  ebp
  4187a5:	pop    ebp
  4187a6:	sub    ecx,DWORD PTR [edi+eiz*1-0x1b6fe2a7]
  4187ad:	mov    ebx,0xc99c75c1
  4187b2:	or     eax,0x9262f392
  4187b7:	ror    ch,0xf0
  4187ba:	mov    ds:0x3469b164,al
  4187bf:	jmp    0xd0b9233f
  4187c4:	div    DWORD PTR [eax]
  4187c6:	xor    eax,0x8dae7c55
  4187cb:	jo     0x4187cd
  4187cd:	out    0x6e,al
  4187cf:	and    al,0x36
  4187d1:	xor    eax,0xdb29fa66
  4187d6:	das    
  4187d7:	pop    edi
  4187d8:	dec    edx
  4187d9:	mov    al,ds:0xe30b879e
  4187de:	inc    edx
  4187df:	xchg   ecx,eax
  4187e0:	push   cs
  4187e1:	inc    edi
  4187e2:	mov    esp,0x486bdefd
  4187e7:	and    DWORD PTR [eax+0x5d],edi
  4187ea:	push   0xffffff91
  4187ec:	push   ecx
  4187ed:	fdiv   QWORD PTR [ebx-0x763257c3]
  4187f3:	aas    
  4187f4:	out    dx,eax
  4187f5:	or     al,0xf4
  4187f7:	jge    0x4187f3
  4187f9:	jge    0x4187b2
  4187fb:	adc    eax,DWORD PTR [ebp+0x2f]
  4187fe:	pop    esp
  4187ff:	test   DWORD PTR [ecx+0x74],ebp
  418802:	inc    esi
  418803:	sub    BYTE PTR [ebp+0x693ef851],ah
  418809:	call   0xd265:0x1ac04e95
  418810:	jle    0x4187ec
  418812:	push   esp
  418813:	push   ss
  418814:	leave  
  418815:	adc    ebx,ebx
  418817:	popa   
  418818:	pusha  
  418819:	inc    eax
  41881a:	adc    dl,BYTE PTR [ecx-0x3f]
  41881d:	xchg   ebp,eax
  41881e:	(bad)  
  41881f:	iret   
  418820:	pop    eax
  418821:	push   ecx
  418822:	push   cs
  418823:	sti    
  418824:	xchg   edx,eax
  418825:	scas   eax,DWORD PTR es:[edi]
  418826:	xor    al,0xa9
  418828:	clc    
  418829:	imul   edi,edx,0x19
  41882c:	fsubr  QWORD PTR [esi+ecx*4+0x68]
  418830:	inc    ebp
  418831:	enter  0x9a9f,0x85
  418835:	adc    eax,0xef4ae856
  41883a:	adc    edi,ecx
  41883c:	stos   DWORD PTR es:[edi],eax
  41883d:	mov    edi,0x95129558
  418842:	int3   
  418843:	daa    
  418844:	xor    BYTE PTR [edx+0x73905a29],ch
  41884a:	push   cs
  41884b:	(bad)  
  41884c:	jp     0x4187d8
  41884e:	xor    BYTE PTR [edx],0x6c
  418851:	inc    edx
  418852:	and    ch,ah
  418854:	dec    edi
  418855:	mov    bl,0x83
  418857:	pop    ebp
  418858:	pop    esp
  418859:	dec    esp
  41885a:	shl    BYTE PTR es:[ebx+0x16a1d1e5],0xf0
  418862:	mov    eax,ds:0xdf7c2554
  418867:	aaa    
  418868:	pop    edi
  418869:	aas    
  41886a:	mov    ecx,0xaee6d6dd
  41886f:	popa   
  418870:	sbb    bl,bh
  418872:	jl     0x4188bb
  418874:	dec    esp
  418875:	fidiv  DWORD PTR [esi]
  418877:	in     al,dx
  418878:	ret    0x18a9
  41887b:	push   esi
  41887c:	jle    0x418815
  41887e:	add    al,0xdd
  418880:	je     0x4188aa
  418882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418884:	popf   
  418885:	push   ds
  418886:	test   eax,0x8839b615
  41888b:	leave  
  41888c:	sub    DWORD PTR [eax],0x11
  41888f:	cwde   
  418890:	repnz cmp al,0xc4
  418893:	push   ebp
  418894:	xchg   ecx,eax
  418895:	clc    
  418896:	cdq    
  418897:	loopne 0x4188d7
  418899:	out    0x79,al
  41889b:	add    DWORD PTR [esi-0x3121305f],ebp
  4188a1:	popa   
  4188a2:	jmp    FWORD PTR [edi]
  4188a4:	mov    fs,WORD PTR [edi]
  4188a6:	pop    ebp
  4188a7:	dec    ebp
  4188a8:	idiv   ebp
  4188aa:	pop    eax
  4188ab:	test   al,0x68
  4188ad:	xchg   BYTE PTR [edx],ch
  4188af:	fisttp DWORD PTR [ebp+0x727c3c0]
  4188b5:	mov    cl,0x35
  4188b7:	stos   DWORD PTR es:[edi],eax
  4188b8:	leave  
  4188b9:	lods   eax,DWORD PTR ds:[esi]
  4188ba:	sub    al,al
  4188bc:	inc    esp
  4188bd:	ror    DWORD PTR [edi],1
  4188bf:	(bad)  
  4188c0:	mov    DWORD PTR [esi-0xa],ebp
  4188c3:	rcr    BYTE PTR [esi+0x2bc4f764],1
  4188c9:	or     ch,dl
  4188cb:	(bad)
  4188cf:	call   0xf41b4988
  4188d4:	cmp    bh,BYTE PTR [edx-0x24da6e11]
  4188da:	xchg   edx,eax
  4188db:	das    
  4188dc:	stos   DWORD PTR es:[edi],eax
  4188dd:	jge    0x4188ce
  4188df:	addr16 jle 0x41891a
  4188e2:	fdiv   DWORD PTR [bp+di-0x4ce5]
  4188e7:	mov    DWORD PTR [ecx],ebp
  4188e9:	rcl    DWORD PTR [edx+eax*8],0x1f
  4188ed:	lds    esp,FWORD PTR [ecx]
  4188ef:	mov    cl,BYTE PTR [eax-0x5a]
  4188f2:	adc    al,0xd7
  4188f4:	push   ebp
  4188f5:	shr    bl,cl
  4188f7:	xor    al,0x1a
  4188f9:	fidiv  WORD PTR [eax+edi*4+0x4519c42a]
  418900:	xor    esi,DWORD PTR [edi+edi*1-0x71]
  418904:	xor    BYTE PTR [edx],al
  418906:	loope  0x41897b
  418908:	bound  eax,QWORD PTR [ebx]
  41890a:	adc    al,0xf4
  41890c:	cdq    
  41890d:	mov    edi,0xcbc53a19
  418912:	shl    ebx,0x8a
  418915:	fbstp  TBYTE PTR [edi+eax*1]
  418918:	test   BYTE PTR [ebp+0x790490c],bh
  41891e:	inc    esi
  41891f:	lods   al,BYTE PTR ds:[esi]
  418920:	sub    DWORD PTR [ecx+0x1c],ebx
  418923:	dec    esi
  418924:	outs   dx,DWORD PTR ds:[esi]
  418925:	loop   0x41897a
  418927:	inc    ebx
  418928:	push   esp
  418929:	xor    al,0x95
  41892b:	mov    ah,0xd8
  41892d:	int    0x84
  41892f:	mov    esp,0x823ea0e7
  418934:	retf   0x6a1a
  418937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418938:	iret   
  418939:	das    
  41893a:	dec    ebx
  41893b:	dec    eax
  41893c:	and    al,0x7c
  41893e:	sbb    eax,0xdec40c7b
  418943:	jns    0x418909
  418945:	retf   
  418946:	xchg   ebp,eax
  418947:	lds    eax,FWORD PTR [edi-0x2e]
  41894a:	adc    al,BYTE PTR [ecx+0x8b2ee39]
  418950:	jns    0x418986
  418952:	(bad)
  418955:	xor    eax,0x29a8df45
  41895a:	pop    ebx
  41895b:	add    ebp,DWORD PTR [edx+ebx*8]
  41895e:	mov    dh,0x75
  418960:	push   cs
  418961:	or     eax,0xe327a984
  418966:	popf   
  418967:	ja     0x41898b
  418969:	ins    BYTE PTR es:[edi],dx
  41896a:	outs   dx,BYTE PTR ds:[esi]
  41896b:	or     eax,0xe2308d3a
  418970:	mov    ebx,0xd6a79aeb
  418975:	push   es
  418976:	push   esi
  418977:	popa   
  418978:	jo     0x41893d
  41897a:	ja     0x418999
  41897c:	xor    BYTE PTR [ebx],al
  41897e:	cdq    
  41897f:	lds    edx,FWORD PTR [edx+0x54]
  418982:	(bad)  
  418983:	mov    eax,0x54eda7bd
  418988:	mov    WORD PTR [eax+0x2299c509],?
  41898e:	sahf   
  41898f:	cmp    dl,BYTE PTR [edx]
  418991:	ss out 0x2,al
  418994:	push   edx
  418995:	and    ah,BYTE PTR [edx+edx*2]
  418998:	cmp    ebp,DWORD PTR ds:0x93bd6262
  41899e:	dec    edx
  41899f:	repz add BYTE PTR [ebx],0x78
  4189a3:	push   cs
  4189a4:	stc    
  4189a5:	enter  0x5d9e,0xb7
  4189a9:	not    DWORD PTR [ecx-0x5c]
  4189ac:	jbe    0x418a1a
  4189ae:	je     0x418a01
  4189b0:	lock pop ss
  4189b2:	(bad)  
  4189b4:	dec    ecx
  4189b5:	in     al,0xf2
  4189b7:	xchg   BYTE PTR [eax-0x66],dl
  4189ba:	fdivr  DWORD PTR [eax]
  4189bc:	dec    edi
  4189bd:	sub    al,0x22
  4189bf:	aaa    
  4189c0:	neg    BYTE PTR [esi+edx*1]
  4189c3:	jne    0x418a1f
  4189c5:	arpl   WORD PTR [ebx],cx
  4189c7:	or     DWORD PTR [edi-0x375e313f],ecx
  4189cd:	sub    al,0xe
  4189cf:	lock fidiv WORD PTR gs:[eax+0xa]
  4189d4:	or     BYTE PTR [edx],bl
  4189d6:	setno  BYTE PTR [eax]
  4189d9:	ins    BYTE PTR es:[edi],dx
  4189da:	add    al,BYTE PTR fs:[eax-0x11b63d55]
  4189e1:	mov    bh,BYTE PTR [eax+0x1b]
  4189e4:	imul   ecx,edx,0xffffffff
  4189e7:	pop    edi
  4189e8:	push   edx
  4189e9:	popf   
  4189ea:	push   esp
  4189eb:	out    0xbe,al
  4189ed:	and    BYTE PTR [ebx-0x6286dc4a],bh
  4189f3:	xchg   BYTE PTR [ecx],cl
  4189f5:	xchg   edx,eax
  4189f6:	stos   BYTE PTR es:[edi],al
  4189f7:	inc    ebp
  4189f8:	pop    ecx
  4189f9:	xchg   ebp,eax
  4189fa:	scas   al,BYTE PTR es:[edi]
  4189fb:	mov    dh,0xe4
  4189fd:	je     0x4189aa
  4189ff:	aad    0x17
  418a01:	inc    eax
  418a02:	aas    
  418a03:	inc    edx
  418a04:	mov    gs,WORD PTR [esi-0x12]
  418a07:	or     esi,DWORD PTR [ecx+0x30]
  418a0a:	push   0x339c003a
  418a0f:	inc    ecx
  418a10:	jecxz  0x418a6d
  418a12:	push   es
  418a13:	sub    ah,BYTE PTR [edi+0x1c6b6583]
  418a19:	pop    edi
  418a1a:	mov    ecx,0xdc63b44c
  418a1f:	(bad)  
  418a20:	std    
  418a21:	cmp    DWORD PTR [ecx+0x46],ebx
  418a24:	or     bh,bl
  418a26:	dec    ecx
  418a27:	adc    BYTE PTR [eax-0x42],ah
  418a2a:	scas   al,BYTE PTR es:[edi]
  418a2b:	push   esp
  418a2c:	pusha  
  418a2d:	inc    edi
  418a2e:	sub    eax,0x3cb095b3
  418a33:	and    dh,BYTE PTR [eax-0x1f]
  418a36:	sub    ebp,DWORD PTR [ebx+0x6979dbcc]
  418a3c:	lods   eax,DWORD PTR ds:[esi]
  418a3d:	cmp    BYTE PTR [ebx],ah
  418a3f:	iret   
  418a40:	pop    ebp
  418a41:	add    bl,ah
  418a43:	sub    eax,0x33b791f1
  418a48:	cmp    eax,0x99ac1153
  418a4d:	pop    edi
  418a4e:	out    dx,eax
  418a4f:	lea    edi,[ecx-0x66]
  418a52:	dec    ebp
  418a53:	daa    
  418a54:	jnp    0x418ace
  418a56:	adc    eax,0x428c852c
  418a5b:	popa   
  418a5c:	xchg   esi,edx
  418a5e:	(bad)  
  418a5f:	repnz and DWORD PTR [esi-0x4a],edx
  418a63:	aad    0xd6
  418a65:	add    BYTE PTR [ecx+ebp*2-0xa],ch
  418a69:	in     eax,dx
  418a6a:	cmc    
  418a6b:	xchg   edx,eax
  418a6c:	mov    dx,0x4f65
  418a70:	ficom  DWORD PTR [eax]
  418a72:	dec    ebx
  418a73:	(bad)  
  418a74:	scas   al,BYTE PTR es:[edi]
  418a75:	inc    eax
  418a76:	dec    edi
  418a77:	xor    al,BYTE PTR [edx-0x61488fbc]
  418a7d:	mov    ebx,0x7bc0919b
  418a82:	jge    0x418afc
  418a84:	(bad)  [edi]
  418a86:	std    
  418a87:	je     0x418a7a
  418a89:	lea    edx,[edi+0x45]
  418a8c:	pop    ebp
  418a8d:	ret    
  418a8e:	pop    ds
  418a8f:	ret    0x195
  418a92:	cmp    BYTE PTR ds:0x4c90d0d8,0x86
  418a99:	cmp    al,0xbb
  418a9b:	mov    esp,0x23f83622
  418aa0:	retf   
  418aa1:	scas   eax,DWORD PTR es:[edi]
  418aa2:	adc    esp,ebx
  418aa4:	add    al,0xe9
  418aa6:	push   ds
  418aa7:	ds push 0x3320a7a
  418aad:	les    esi,FWORD PTR cs:[esi]
  418ab0:	xor    ah,dh
  418ab2:	stc    
  418ab3:	mov    cl,0x0
  418ab5:	sbb    esi,edx
  418ab7:	dec    edi
  418ab8:	dec    esp
  418ab9:	ss jo  0x418b13
  418abc:	fmul   QWORD PTR [ebp-0x51]
  418abf:	xor    cl,BYTE PTR [eax-0x47]
  418ac2:	jg     0x418a78
  418ac4:	jp     0x418a6a
  418ac6:	out    dx,eax
  418ac7:	rol    DWORD PTR [edi],0x62
  418aca:	lods   eax,DWORD PTR ds:[esi]
  418acb:	lock xor DWORD PTR fs:[ecx+edx*4+0xf],edi
  418ad1:	in     al,dx
  418ad2:	mov    bh,0x49
  418ad4:	lods   al,BYTE PTR ds:[esi]
  418ad5:	mov    ss,WORD PTR [ecx-0x3e]
  418ad8:	mov    ebx,0x8c21f01c
  418add:	test   esp,esp
  418adf:	xchg   ebx,eax
  418ae0:	cmp    ch,cl
  418ae2:	aam    0xd3
  418ae4:	out    dx,eax
  418ae5:	or     dl,ah
  418ae7:	inc    eax
  418ae8:	clc    
  418ae9:	jmp    0x418b03
  418aeb:	pushf  
  418aec:	lahf   
  418aed:	jg     0x418ae7
  418aef:	(bad)  
  418af0:	mov    ebx,0x4b53137
  418af5:	outs   dx,BYTE PTR ds:[esi]
  418af6:	mov    al,BYTE PTR [esi+0x1a4cbcef]
  418afc:	mov    ds:0xe364d6c2,al
  418b01:	pop    ebp
  418b02:	jmp    0x4ac0:0xc6802a7a
  418b09:	fsub   DWORD PTR [ebx+0x6ba013f5]
  418b0f:	push   ebx
  418b10:	or     al,0x86
  418b12:	xchg   edx,eax
  418b13:	and    eax,DWORD PTR [ecx-0x16]
  418b16:	into   
  418b17:	jno    0x418abb
  418b19:	pop    ds
  418b1a:	mov    ah,0xbb
  418b1c:	popa   
  418b1d:	pop    eax
  418b1e:	push   DWORD PTR [eax+0x78]
  418b21:	dec    BYTE PTR [eax]
  418b23:	repnz pop es
  418b25:	mov    dl,0x17
  418b27:	(bad)  [ebx-0x756a555f]
  418b2d:	jecxz  0x418b3c
  418b2f:	fisubr DWORD PTR [ecx]
  418b31:	cld    
  418b32:	or     BYTE PTR [ecx+eiz*2+0x64b88deb],bh
  418b39:	add    al,BYTE PTR [ebp+0x46024c10]
  418b3f:	add    al,0x7b
  418b41:	cmp    DWORD PTR [ebx-0x18],ebx
  418b44:	mov    ecx,DWORD PTR [esi+0x1df0c15d]
  418b4a:	hlt    
  418b4b:	fs cwde 
  418b4d:	mov    ecx,0x9d4d84
  418b52:	scas   eax,DWORD PTR es:[edi]
  418b53:	rol    DWORD PTR [edx+0x51],cl
  418b56:	lahf   
  418b57:	xor    BYTE PTR [edi-0x3ea6fecf],ch
  418b5d:	push   esi
  418b5e:	stos   DWORD PTR es:[edi],eax
  418b5f:	or     bl,ch
  418b61:	stos   DWORD PTR es:[edi],eax
  418b62:	and    eax,0x21f45258
  418b67:	mov    bl,0x67
  418b69:	int    0x24
  418b6b:	fdiv   st(6),st
  418b6d:	add    bh,bl
  418b6f:	fwait
  418b70:	push   ss
  418b71:	add    DWORD PTR [ebp-0x58],ecx
  418b74:	inc    ebp
  418b75:	sub    eax,0x32de4736
  418b7a:	repnz add cl,BYTE PTR [ecx]
  418b7d:	test   DWORD PTR [edi+0x305d5765],ecx
  418b83:	stc    
  418b84:	push   ecx
  418b85:	and    BYTE PTR [eax-0x3e],bh
  418b88:	cld    
  418b89:	ins    DWORD PTR es:[edi],dx
  418b8a:	mov    BYTE PTR [eax],cl
  418b8c:	ret    
  418b8d:	fwait
  418b8e:	push   0xfffffff8
  418b90:	mov    al,ds:0xfbc42bba
  418b95:	mov    ebp,0x2a4c63f4
  418b9a:	mov    bh,0xd5
  418b9c:	stc    
  418b9d:	shl    BYTE PTR [eax-0x77],1
  418ba0:	jg     0x418b83
  418ba2:	xchg   ecx,eax
  418ba3:	inc    ecx
  418ba4:	lods   al,BYTE PTR ds:[esi]
  418ba5:	(bad)  
  418ba6:	imul   ebp
  418ba8:	cmp    ah,BYTE PTR [ecx+0x1b]
  418bab:	xlat   BYTE PTR ds:[ebx]
  418bac:	in     al,dx
  418bad:	xchg   ecx,eax
  418bae:	hlt    
  418baf:	or     eax,0x9a92571c
  418bb4:	scas   eax,DWORD PTR es:[edi]
  418bb5:	aad    0xf0
  418bb7:	sbb    eax,0x692a19f3
  418bbc:	call   0xf551ae9a
  418bc1:	xor    eax,ebx
  418bc3:	pop    ds
  418bc4:	pop    DWORD PTR [ebp-0x2d]
  418bc7:	(bad)  
  418bc8:	push   edx
  418bc9:	xchg   ebx,eax
  418bca:	push   ds
  418bcb:	inc    ebx
  418bcc:	stc    
  418bcd:	test   eax,0xe6f52728
  418bd2:	or     ch,bh
  418bd4:	popf   
  418bd5:	cld    
  418bd6:	push   ebx
  418bd7:	fisttp DWORD PTR [esi]
  418bd9:	cmp    al,0xbf
  418bdb:	mov    esp,eax
  418bdd:	enter  0x8ba1,0x37
  418be1:	pusha  
  418be2:	mov    bl,0x6c
  418be4:	adc    DWORD PTR [edi+0xd1830d6],ecx
  418bea:	fld    DWORD PTR [ecx-0x596c5576]
  418bf0:	das    
  418bf1:	(bad)  
  418bf2:	fadd   QWORD PTR [ebx]
  418bf4:	hlt    
  418bf5:	or     edx,DWORD PTR [edx]
  418bf7:	sbb    al,0x46
  418bf9:	sub    al,0x54
  418bfb:	and    al,0x61
  418bfd:	in     al,0x99
  418bff:	adc    ecx,DWORD PTR [ebx-0x77]
  418c02:	(bad)  
  418c03:	nop
  418c04:	pop    esi
  418c05:	jmp    0x19cfbd01
  418c0a:	addr16 mov edx,0x13d30b52
  418c10:	(bad)  
  418c11:	neg    DWORD PTR [esi]
  418c13:	out    0x13,al
  418c15:	push   edx
  418c16:	aaa    
  418c17:	ins    DWORD PTR es:[edi],dx
  418c18:	in     eax,0xf4
  418c1a:	popa   
  418c1b:	sub    eax,0x6bcc15f7
  418c20:	mov    ebp,0x87bbde21
  418c25:	js     0x418bdd
  418c27:	daa    
  418c28:	cld    
  418c29:	cmp    al,0x48
  418c2b:	push   0x1d536893
  418c30:	mov    ecx,0xd3000a2c
  418c35:	test   al,0x73
  418c37:	inc    ebp
  418c38:	adc    BYTE PTR [edi+0x26],dh
  418c3b:	popa   
  418c3c:	mov    dh,0xe7
  418c3e:	xchg   ebp,eax
  418c3f:	cmc    
  418c40:	or     al,0x80
  418c42:	fdiv   st,st(3)
  418c44:	dec    esi
  418c45:	aad    0x87
  418c47:	std    
  418c48:	ins    DWORD PTR es:[edi],dx
  418c49:	dec    ebp
  418c4a:	dec    esi
  418c4b:	test   al,0xbd
  418c4d:	outs   dx,DWORD PTR ds:[esi]
  418c4e:	sub    eax,ecx
  418c50:	sub    al,0x2b
  418c52:	adc    DWORD PTR ds:0x7a22c95f,0xffffffd7
  418c59:	jge    0x418c2d
  418c5b:	inc    ebp
  418c5c:	and    al,0xb5
  418c5e:	dec    ecx
  418c5f:	xor    bl,BYTE PTR ds:0xe4940200
  418c65:	cmp    ebp,DWORD PTR [ecx]
  418c67:	sbb    BYTE PTR [edi],bl
  418c69:	xor    ebp,ebp
  418c6b:	rcl    BYTE PTR [esi+0x67],cl
  418c6e:	cmc    
  418c6f:	aaa    
  418c70:	out    dx,eax
  418c71:	rol    DWORD PTR [ebx],1
  418c73:	out    0xab,al
  418c75:	xor    eax,0x18d68463
  418c7a:	fdivr  QWORD PTR [ecx]
  418c7c:	repnz mov DWORD PTR [ebx-0xe],eax
  418c80:	aam    0xc0
  418c82:	xor    edx,ecx
  418c84:	push   cs
  418c85:	mov    dl,0x8
  418c87:	(bad)  
  418c88:	shl    BYTE PTR [eax-0x48],1
  418c8b:	test   BYTE PTR [esi],ch
  418c8d:	sbb    edi,edi
  418c8f:	in     al,dx
  418c90:	push   ds
  418c91:	sbb    dh,BYTE PTR [edx]
  418c93:	cmp    BYTE PTR [eax+0x553abb64],al
  418c99:	cmc    
  418c9a:	pop    esp
  418c9b:	std    
  418c9c:	test   eax,0xcb617bc9
  418ca1:	adc    DWORD PTR [esi],esp
  418ca3:	jnp    0x418c29
  418ca5:	(bad)  
  418ca6:	inc    edi
  418ca7:	mov    eax,0x923cc17
  418cac:	or     DWORD PTR [esp+ebp*1+0x22],esi
  418cb0:	aam    0x1d
  418cb2:	call   0x2658:0x7622e97
  418cb9:	cmc    
  418cba:	jno    0x418cb4
  418cbc:	jb     0x418d18
  418cbe:	sbb    BYTE PTR [ebx-0x1d6e3489],0x32
  418cc5:	add    DWORD PTR [ebp-0x3cc09545],eax
  418ccb:	add    bh,bh
  418ccd:	cmp    eax,0x30244d2e
  418cd2:	and    DWORD PTR [ebx],ebx
  418cd4:	dec    ebx
  418cd5:	(bad)  
  418cd6:	out    0x1f,al
  418cd8:	mov    ?,WORD PTR [ebp+0x52b26924]
  418cde:	aad    0x68
  418ce0:	push   ss
  418ce1:	test   al,0xa
  418ce3:	cmp    al,0xbc
  418ce5:	fidiv  DWORD PTR [ebx]
  418ce7:	sub    ch,ch
  418ce9:	mov    edx,0xe5070872
  418cee:	add    al,0xe7
  418cf0:	pushf  
  418cf1:	sbb    eax,DWORD PTR [ebx]
  418cf3:	in     eax,0xd
  418cf5:	sbb    al,0x22
  418cf7:	cmp    edi,0x599db5a6
  418cfd:	pop    ecx
  418cfe:	test   eax,0x93c84834
  418d04:	mov    ch,0x97
  418d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d07:	push   DWORD PTR [ebp-0x3ce22ba1]
  418d0d:	pop    ds
  418d0e:	mov    ch,0x2d
  418d10:	add    al,0x70
  418d12:	sbb    eax,0x8a2816cd
  418d17:	(bad)  
  418d18:	jle    0x418cbb
  418d1a:	cwde   
  418d1b:	add    BYTE PTR [ebx+ecx*2+0xe574b4c],ch
  418d22:	imul   ecx,DWORD PTR [ecx],0x19
  418d25:	sbb    al,0xc2
  418d27:	lea    edx,[ebx]
  418d29:	std    
  418d2a:	push   cs
  418d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d2c:	dec    eax
  418d2d:	add    eax,0x3253a71f
  418d32:	fisub  DWORD PTR [esi-0x58]
  418d35:	aam    0x0
  418d37:	push   ecx
  418d38:	pushw  es
  418d3a:	out    dx,al
  418d3b:	add    BYTE PTR [ecx+ecx*2],dh
  418d3e:	jnp    0x418d96
  418d40:	mov    al,BYTE PTR [edi]
  418d42:	jge    0x418dae
  418d44:	jl     0x418cf8
  418d46:	pop    ss
  418d47:	iret   
  418d48:	jbe    0x418dc5
  418d4a:	xor    eax,0x7e4574a4
  418d4f:	lds    ebp,FWORD PTR [edx+0x2d0d468d]
  418d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d56:	add    al,0x89
  418d58:	shl    edx,cl
  418d5a:	cmp    eax,0xd298d7ac
  418d5f:	xor    ah,BYTE PTR [esi+0x63d04f66]
  418d65:	dec    ebp
  418d66:	or     BYTE PTR [ecx-0x25957807],al
  418d6c:	jp     0x418d70
  418d6e:	xor    DWORD PTR [ebx-0x16],ecx
  418d71:	aaa    
  418d72:	loop   0x418cf7
  418d74:	cmp    al,0x60
  418d76:	shl    ah,0xf4
  418d79:	mov    eax,ds:0xe1cccabf
  418d7e:	aad    0xea
  418d80:	lahf   
  418d81:	les    ebp,FWORD PTR [edx+esi*8+0x3b]
  418d85:	ja     0x418d54
  418d87:	idiv   BYTE PTR [esi-0x1167bf4c]
  418d8d:	xchg   edx,eax
  418d8e:	pushf  
  418d8f:	es enter 0xab25,0xbe
  418d94:	out    0x1c,al
  418d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d97:	outs   dx,BYTE PTR ds:[esi]
  418d98:	jmp    0x5519:0x314c2a4f
  418d9f:	mov    WORD PTR [esp+eax*1-0x7a],?
  418da3:	cld    
  418da4:	xor    DWORD PTR [ecx-0x20],edi
  418da7:	xor    edx,esp
  418da9:	pop    edx
  418daa:	pop    eax
  418dab:	sbb    eax,DWORD PTR [ecx+0x23]
  418dae:	out    0xc5,al
  418db0:	call   0xfb74:0x7bee8bee
  418db7:	xor    BYTE PTR ds:0x94960a3d,bh
  418dbd:	cld    
  418dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dbf:	bound  eax,QWORD PTR [esi+0x71884c5b]
  418dc5:	push   eax
  418dc6:	inc    eax
  418dc7:	pop    ebx
  418dc8:	push   eax
  418dc9:	out    dx,al
  418dca:	in     al,0x92
  418dcc:	jmp    0xa650:0x19d18d0
  418dd3:	xchg   edi,eax
  418dd4:	pop    esp
  418dd5:	mov    eax,0xae64b939
  418dda:	stc    
  418ddb:	adc    DWORD PTR [ebx+0x42],edi
  418dde:	leave  
  418ddf:	das    
  418de0:	into   
  418de1:	lods   al,BYTE PTR ds:[esi]
  418de2:	push   ds
  418de3:	into   
  418de4:	enter  0x637b,0xe1
  418de8:	inc    ecx
  418de9:	test   BYTE PTR [ebx+eax*4+0xaf8a05],bh
  418df0:	mov    bh,0x23
  418df2:	adc    eax,DWORD PTR [eax-0x4bffe1b]
  418df8:	hlt    
  418df9:	mov    esi,DWORD PTR [ecx]
  418dfb:	mov    edx,edx
  418dfd:	dec    ebx
  418dfe:	inc    ebx
  418dff:	rcl    dl,cl
  418e01:	loop   0x418e62
  418e03:	(bad)  
  418e04:	loopne 0x418e12
  418e06:	inc    DWORD PTR [edx+0x54]
  418e09:	std    
  418e0a:	xor    DWORD PTR [ecx],edi
  418e0c:	mov    ebx,0xd667f78d
  418e11:	scas   al,BYTE PTR es:[edi]
  418e12:	out    dx,al
  418e13:	sub    eax,0x65730f3e
  418e18:	stc    
  418e19:	push   0xdd939257
  418e1e:	mov    edx,0xcafbb258
  418e23:	jle    0x418dfd
  418e25:	dec    esp
  418e26:	add    DWORD PTR [esi],eax
  418e28:	fwait
  418e29:	add    DWORD PTR [ecx+0x234fc22b],ecx
  418e2f:	cmc    
  418e30:	inc    eax
  418e31:	(bad)  
  418e32:	jp     0x418e79
  418e34:	pusha  
  418e35:	sub    ebp,DWORD PTR [ebx-0x3929658e]
  418e3b:	jge    0x418e9e
  418e3d:	(bad)  
  418e40:	push   edx
  418e41:	(bad)  
  418e42:	xor    ah,BYTE PTR [edx+0x76f4403e]
  418e48:	int    0xeb
  418e4a:	xor    dh,ah
  418e4c:	lock shr DWORD PTR [edi-0x12ce7df2],0x8e
  418e54:	leave  
  418e55:	stos   DWORD PTR es:[edi],eax
  418e56:	inc    esp
  418e57:	sbb    DWORD PTR [ebp-0x58],0x38
  418e5b:	add    al,al
  418e5d:	int3   
  418e5e:	fld    QWORD PTR [edx+ecx*1+0x44]
  418e62:	fmul   QWORD PTR [eax-0xf]
  418e65:	push   eax
  418e66:	pop    ebp
  418e67:	add    bl,bh
  418e69:	loop   0x418e33
  418e6b:	imul   esi,DWORD PTR [esi-0x7e],0x1d2437df
  418e72:	fwait
  418e73:	sahf   
  418e74:	sbb    bl,BYTE PTR [edx]
  418e76:	jg     0x418e13
  418e78:	pop    edi
  418e79:	adc    BYTE PTR [eax+0x1b],bl
  418e7c:	jmp    0x6f1df60d
  418e81:	jle    0x418e11
  418e83:	add    bh,dh
  418e85:	ds into 
  418e87:	sub    eax,0xcb9d9033
  418e8c:	xchg   esi,eax
  418e8d:	arpl   WORD PTR [ecx+eiz*4-0x54],sp
  418e91:	push   0x8
  418e93:	test   eax,0xb02c589e
  418e98:	(bad)
  418e9c:	mov    ah,0xf5
  418e9e:	add    eax,0xe308d2c
  418ea3:	xchg   edi,eax
  418ea4:	dec    edx
  418ea5:	jnp    0x418f25
  418ea7:	aaa    
  418ea8:	mov    eax,0xfb96f34a
  418ead:	sub    DWORD PTR fs:[ecx-0x71cbd6b3],esp
  418eb4:	cmp    al,0xd8
  418eb6:	mov    dh,0x3f
  418eb8:	mov    cl,0xf4
  418eba:	stc    
  418ebb:	dec    eax
  418ebc:	(bad)  
  418ebd:	aam    0x9b
  418ebf:	pop    esi
  418ec0:	cmp    DWORD PTR [ecx],esi
  418ec2:	pop    ebx
  418ec3:	dec    ecx
  418ec4:	rcl    ch,1
  418ec6:	sbb    BYTE PTR [ebp+0x7c],bh
  418ec9:	pop    ebx
  418eca:	dec    esp
  418ecb:	sub    bh,ah
  418ecd:	fs pop edx
  418ecf:	into   
  418ed0:	inc    ebx
  418ed1:	add    eax,0x2697da5d
  418ed6:	sub    dh,ch
  418ed8:	fdivr  st(1),st
  418eda:	push   eax
  418edb:	lods   eax,DWORD PTR ds:[esi]
  418edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ede:	sub    DWORD PTR [esi],edx
  418ee0:	cmc    
  418ee1:	(bad)  
  418ee2:	test   eax,0xb6f1c42a
  418ee7:	in     eax,0xbc
  418ee9:	mov    edi,0xa4377fc4
  418eee:	or     eax,edx
  418ef0:	sub    DWORD PTR [ebx],edi
  418ef2:	int3   
  418ef3:	(bad)  
  418ef4:	and    BYTE PTR [eax],ah
  418ef6:	cmp    ecx,edx
  418ef8:	nop
  418ef9:	stc    
  418efa:	(bad)  
  418efc:	ror    DWORD PTR [edi+0x6c],cl
  418eff:	popa   
  418f00:	add    ebp,esp
  418f02:	stos   BYTE PTR es:[edi],al
  418f03:	aaa    
  418f04:	or     BYTE PTR [ecx+ebp*8-0x38f245f9],al
  418f0b:	in     al,dx
  418f0c:	adc    al,0xc7
  418f0e:	sub    DWORD PTR [ebx-0x1b],edi
  418f11:	mul    ch
  418f13:	and    DWORD PTR [edi+esi*2-0x17],ecx
  418f17:	in     eax,dx
  418f18:	pop    ss
  418f19:	fist   DWORD PTR [ecx-0x4]
  418f1c:	in     eax,dx
  418f1d:	out    0x13,eax
  418f1f:	jno    0x418ef1
  418f21:	call   0x71a:0xa852988d
  418f28:	aam    0xbb
  418f2a:	fisubr DWORD PTR [eax-0x8]
  418f2d:	inc    BYTE PTR [ebp+0x590be629]
  418f33:	jnp    0x418edb
  418f35:	repnz mov ah,0xe3
  418f38:	dec    ebx
  418f39:	xchg   ebp,eax
  418f3a:	dec    ecx
  418f3b:	sub    eax,0xa4c152
  418f40:	add    eax,0xb4404aaa
  418f45:	cli    
  418f46:	outs   dx,BYTE PTR ds:[esi]
  418f47:	sti    
  418f48:	ror    DWORD PTR [esi],1
  418f4a:	or     edi,DWORD PTR [ebp+0x7a]
  418f4d:	jl     0x418f1f
  418f4f:	call   0x19338703
  418f54:	mov    al,0xb7
  418f56:	push   edi
  418f57:	retf   
  418f58:	mov    ebp,0x9a985b60
  418f5d:	xor    eax,0x44369b56
  418f62:	mov    ah,0xf9
  418f64:	xchg   ebp,eax
  418f65:	mov    ds:0xff094d2c,eax
  418f6a:	push   esp
  418f6b:	aaa    
  418f6c:	stos   DWORD PTR es:[edi],eax
  418f6d:	rcl    DWORD PTR [ebx],0xb3
  418f70:	leave  
  418f71:	shr    BYTE PTR [ebp+0x158f2785],cl
  418f77:	call   0x654c:0x9274fa82
  418f7e:	and    eax,0xb27187b2
  418f83:	sbb    al,0xe8
  418f85:	sbb    ebx,esi
  418f87:	or     eax,0x53936a7c
  418f8c:	push   esi
  418f8d:	cmp    BYTE PTR [eax],0xe6
  418f90:	mov    dl,0xca
  418f92:	fistp  QWORD PTR [edi+0x2e8877e]
  418f98:	pop    esp
  418f99:	fistp  DWORD PTR [ebx-0x28]
  418f9c:	fnstsw WORD PTR [ecx+esi*1]
  418f9f:	in     eax,0xba
  418fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fa2:	shr    DWORD PTR [edx],0x77
  418fa5:	mov    eax,0x9bf78572
  418faa:	dec    ecx
  418fab:	rcl    BYTE PTR [edx+0x4f467046],cl
  418fb1:	push   ds
  418fb2:	add    ebx,DWORD PTR [ebx+0x3]
  418fb5:	fisttp DWORD PTR [ecx+0xbb7827b]
  418fbb:	dec    eax
  418fbc:	outs   dx,BYTE PTR ds:[esi]
  418fbd:	out    0xc7,al
  418fbf:	ins    BYTE PTR es:[edi],dx
  418fc0:	pop    ebx
  418fc1:	mov    ds:0xd0b4db9b,al
  418fc7:	pop    ecx
  418fc8:	add    edx,ebp
  418fca:	adc    BYTE PTR [edx],ah
  418fcc:	cmp    bl,BYTE PTR [ebx+ecx*8-0x25768981]
  418fd3:	test   BYTE PTR [edx-0x47],bh
  418fd6:	mov    dl,0x14
  418fd8:	xor    al,0x7e
  418fda:	mov    bh,0x42
  418fdc:	jmp    0x418f86
  418fde:	jge    0x418ff5
  418fe0:	leave  
  418fe1:	hlt    
  418fe2:	cmp    al,0xda
  418fe4:	mov    edx,0x146e8479
  418fe9:	out    dx,al
  418fea:	pop    ebp
  418feb:	aaa    
  418fec:	pusha  
  418fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fee:	push   esi
  418fef:	std    
  418ff0:	xor    eax,0x612e9e2c
  418ff5:	mov    dl,BYTE PTR [eax+0x360ae93d]
  418ffb:	mov    ecx,0x80b097f9
  419000:	and    ecx,ebx
  419002:	push   0x2a
  419004:	fidiv  WORD PTR [eax]
  419006:	mov    ds:0x566edb02,al
  41900b:	cmp    ah,al
  41900d:	jbe    0x418fb0
  41900f:	inc    DWORD PTR [ecx+0x12d155a8]
  419015:	adc    al,0x10
  419017:	adc    al,0x17
  419019:	jge    0x41906e
  41901b:	mov    edx,0xc9afa790
  419020:	adc    eax,0xfa05e536
  419025:	adc    DWORD PTR [ebp+0x3],eax
  419028:	fdiv   DWORD PTR [esi+eax*2+0xe]
  41902c:	jne    0x419069
  41902e:	out    dx,eax
  41902f:	int3   
  419030:	fs push ebp
  419032:	pop    ebx
  419033:	mov    ebx,DWORD PTR [esi]
  419035:	out    0x5e,eax
  419037:	ficom  WORD PTR [ebx+0x24070ecd]
  41903d:	sbb    ecx,DWORD PTR [ebx+0x4c149e5c]
  419043:	pop    ecx
  419044:	mov    al,ds:0x5ca11e64
  419049:	push   edi
  41904a:	in     al,dx
  41904b:	jl     0x419020
  41904d:	inc    eax
  41904e:	fimul  DWORD PTR [esi-0x5cc290a8]
  419054:	pop    es
  419055:	xchg   esp,eax
  419056:	jmp    0x41906b
  419058:	or     bh,BYTE PTR [edx]
  41905a:	lahf   
  41905b:	out    0xda,al
  41905d:	pop    ss
  41905e:	sub    cl,BYTE PTR [esi]
  419060:	sbb    ebx,DWORD PTR [ebp+ebx*4-0x48]
  419064:	outs   dx,BYTE PTR ds:[esi]
  419065:	pop    ebx
  419066:	inc    ecx
  419067:	jge    0x41901b
  419069:	das    
  41906a:	or     eax,0x3a706298
  41906f:	es jb  0x41903b
  419072:	rcr    BYTE PTR [ecx-0x16],cl
  419075:	(bad)  
  419076:	das    
  419077:	mov    cl,0xbf
  419079:	(bad)  
  41907a:	xlat   BYTE PTR ds:[ebx]
  41907b:	xchg   ebp,eax
  41907c:	mov    WORD PTR [edi-0x56],?
  41907f:	rcl    esp,0x1d
  419082:	dec    eax
  419083:	lahf   
  419084:	mov    ebp,0x11493c70
  419089:	aad    0x3a
  41908b:	jl     0x419056
  41908d:	add    ebp,DWORD PTR [ecx]
  41908f:	pop    ecx
  419090:	mov    ebp,0x625807b2
  419095:	pusha  
  419096:	lea    ecx,[edx+edx*8-0x32]
  41909a:	sub    bh,bh
  41909c:	inc    eax
  41909d:	dec    edx
  41909e:	pop    ss
  41909f:	mov    bl,0x6a
  4190a1:	pop    esp
  4190a2:	jns    0x4190d3
  4190a4:	das    
  4190a5:	fist   DWORD PTR [edx+0xd]
  4190a8:	ficom  DWORD PTR [ebx]
  4190aa:	push   ds
  4190ab:	inc    esi
  4190ac:	push   ecx
  4190ad:	(bad)  
  4190ae:	push   esp
  4190af:	popa   
  4190b0:	inc    ebp
  4190b1:	and    al,0x43
  4190b3:	adc    eax,0x1f158dcc
  4190b8:	clc    
  4190b9:	add    eax,0x7d233120
  4190be:	inc    ebx
  4190bf:	sbb    BYTE PTR [edx+ebx*2],dl
  4190c2:	add    ebp,edi
  4190c4:	push   eax
  4190c5:	jb     0x419080
  4190c7:	jmp    0x91cd:0xa8a0f2f3
  4190ce:	jbe    0x419095
  4190d0:	jg     0x41905d
  4190d2:	cmc    
  4190d3:	repnz in al,0x12
  4190d6:	gs jmp 0x114d9ecc
  4190dc:	(bad)  
  4190dd:	repz sahf 
  4190df:	push   ebp
  4190e0:	mov    dh,BYTE PTR [ebx-0x9]
  4190e3:	jecxz  0x41911d
  4190e5:	int    0x3d
  4190e7:	cld    
  4190e8:	cmp    al,ch
  4190ea:	inc    eax
  4190eb:	mov    ah,0x93
  4190ed:	mov    edi,0x772d89fc
  4190f2:	popf   
  4190f3:	(bad)  
  4190f4:	popf   
  4190f5:	sbb    edx,esp
  4190f7:	scas   al,BYTE PTR es:[edi]
  4190f8:	fisttp DWORD PTR [ecx]
  4190fa:	daa    
  4190fb:	jmp    0x1171582f
  419100:	cmp    DWORD PTR [eax+0x1a],edi
  419103:	cmp    eax,0xff4603ca
  419108:	fwait
  419109:	rcl    DWORD PTR ss:[ecx+0x14394366],1
  419110:	test   eax,0xb16e11d7
  419115:	mov    bh,0x47
  419117:	ins    DWORD PTR es:[edi],dx
  419118:	enter  0xe305,0xa1
  41911c:	sbb    dh,BYTE PTR [ebx+0x1a0ffcb7]
  419122:	(bad)  
  419123:	arpl   WORD PTR [esi+0x7c18889f],bp
  419129:	adc    eax,edi
  41912b:	xchg   ebx,eax
  41912c:	or     BYTE PTR [eax+ebp*8],ch
  41912f:	mov    ss:0x306f1cf3,eax
  419135:	lods   eax,DWORD PTR ds:[esi]
  419136:	cmp    DWORD PTR [ebp-0x30],0x3590dca1
  41913d:	mov    ecx,0xc2ce0094
  419142:	mov    bh,0xc0
  419144:	stos   BYTE PTR es:[edi],al
  419145:	xor    edi,edx
  419147:	stos   DWORD PTR es:[edi],eax
  419148:	fs cmp eax,0xf25110a6
  41914e:	int3   
  41914f:	call   0x521a:0x6279188d
  419156:	and    eax,0x3472283
  41915b:	push   0x6d
  41915d:	mov    ds:0xfb01e2b3,eax
  419162:	sbb    al,0xb7
  419164:	mov    dl,0x67
  419166:	jns    0x41918e
  419168:	jb     0x419170
  41916a:	call   0xfba4:0x929ff4f
  419171:	adc    DWORD PTR [esi-0x67],ecx
  419174:	fucomip st,st(7)
  419176:	and    al,0xb9
  419178:	repnz iret 
  41917a:	arpl   WORD PTR [eax],si
  41917c:	adc    ecx,esi
  41917e:	pop    es
  41917f:	frstor ds:0x36a26314
  419185:	loope  0x41914a
  419187:	repnz mov esp,DWORD PTR [ebx]
  41918a:	stos   BYTE PTR es:[edi],al
  41918b:	popa   
  41918c:	in     al,0xc0
  41918e:	call   0xeb0e:0xb6f5da6b
  419195:	jecxz  0x4191c2
  419197:	mov    dl,bh
  419199:	fistp  DWORD PTR [edi-0x38ea420a]
  41919f:	cmp    cl,bl
  4191a1:	push   cs
  4191a2:	rol    BYTE PTR [eax],1
  4191a4:	pop    esi
  4191a5:	aad    0xc0
  4191a7:	adc    BYTE PTR [esi+edx*8-0x50],al
  4191ab:	out    dx,al
  4191ac:	mov    ebx,0xf0e33500
  4191b1:	push   ecx
  4191b2:	jmp    0x251f03f0
  4191b7:	fwait
  4191b8:	and    edi,eax
  4191ba:	inc    esi
  4191bb:	shl    BYTE PTR [ecx],1
  4191bd:	cmp    eax,0x6d29a505
  4191c2:	imul   edx,DWORD PTR [esi-0x163913e5],0x5ed5e9d5
  4191cc:	int    0x67
  4191ce:	aam    0xa4
  4191d0:	fs mov dl,dl
  4191d3:	mov    edi,0xeedcdd7e
  4191d8:	fist   WORD PTR [ebx-0x59]
  4191db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191dc:	dec    ecx
  4191dd:	mov    DWORD PTR [ecx+0x53],ecx
  4191e0:	out    0x2b,al
  4191e2:	arpl   WORD PTR [esi],ax
  4191e4:	pop    ebx
  4191e5:	sbb    BYTE PTR [ebx+eax*1],dl
  4191e8:	leave  
  4191e9:	js     0x419215
  4191eb:	daa    
  4191ec:	adc    al,0xf
  4191ee:	xor    eax,edx
  4191f0:	cli    
  4191f1:	inc    edi
  4191f2:	loop   0x419239
  4191f4:	mov    ah,dl
  4191f6:	mov    WORD PTR [ecx+0x6417f259],?
  4191fc:	push   esp
  4191fd:	sbb    eax,0xa8b37aef
  419202:	inc    eax
  419203:	fisub  WORD PTR [ebx]
  419205:	das    
  419206:	pop    ds
  419207:	or     dl,cl
  419209:	jae    0x4191d0
  41920b:	mov    DWORD PTR [ebx-0x430ed45f],esi
  419211:	mov    dh,0xfa
  419213:	jl     0x4191e4
  419215:	xchg   esi,eax
  419216:	xor    eax,0x8c4e5efc
  41921b:	lea    ebx,[edx]
  41921d:	repnz sar ebp,0x85
  419221:	xchg   BYTE PTR [edi],dh
  419223:	fdivr  st,st(0)
  419225:	mov    bh,bl
  419227:	or     esp,esi
  419229:	ficomp WORD PTR [edi-0x10]
  41922c:	fiadd  DWORD PTR [ebx+0x7083f292]
  419232:	mov    ch,0x95
  419234:	gs push eax
  419236:	adc    BYTE PTR [eax],al
  419238:	sub    BYTE PTR [edi+0x78],bl
  41923b:	cmp    esi,DWORD PTR [esi]
  41923d:	mov    dh,0xdd
  41923f:	pop    ecx
  419240:	iret   
  419241:	sbb    eax,0x83ee1005
  419246:	fcomip st,st(1)
  419248:	push   ebx
  419249:	pop    es
  41924a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41924b:	pushw  0x76df
  41924f:	loopne 0x4192c2
  419251:	in     al,0x8d
  419253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419254:	mov    DWORD PTR ds:0x7bb27267,ebx
  41925a:	ret    
  41925b:	sahf   
  41925c:	and    eax,0xfe5d4272
  419261:	and    BYTE PTR [edi-0x33],0xef
  419265:	sbb    eax,0xb71464eb
  41926a:	dec    edx
  41926b:	nop
  41926c:	or     cl,BYTE PTR [eax]
  41926e:	xchg   BYTE PTR [eax+0x2912bad5],dh
  419274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419275:	aas    
  419276:	push   edi
  419277:	add    al,0x4c
  419279:	fcmovnb st,st(6)
  41927b:	shl    eax,1
  41927d:	sbb    eax,0xc42a972f
  419282:	jge    0x419240
  419284:	(bad)  
  419285:	inc    ecx
  419286:	dec    edx
  419287:	mov    eax,ds:0xb20020b8
  41928c:	xchg   ebx,eax
  41928d:	sbb    bl,BYTE PTR [ebx-0x24]
  419290:	fchs   
  419292:	cwde   
  419293:	dec    eax
  419294:	cmp    eax,DWORD PTR [ebx-0xf]
  419297:	xchg   edi,eax
  419298:	dec    edx
  419299:	jmp    0x36da15a7
  41929e:	addr16 cs (bad) 
  4192a1:	sbb    eax,0x189cc0f0
  4192a6:	xchg   edx,eax
  4192a7:	mov    ch,0xb2
  4192a9:	jp     0x4192ee
  4192ab:	fdivr  DWORD PTR [edi]
  4192ad:	ss cmp al,ah
  4192b0:	repz jmp 0xb712c4f5
  4192b6:	out    dx,eax
  4192b7:	push   0xbff57498
  4192bc:	inc    esi
  4192bd:	sub    DWORD PTR [eax-0x14],edi
  4192c0:	pop    ecx
  4192c1:	rcl    DWORD PTR [ebx],cl
  4192c3:	mov    esi,0xbd1d2aad
  4192c8:	fsubr  st,st(5)
  4192ca:	xchg   BYTE PTR [edi-0x77],bl
  4192cd:	lahf   
  4192ce:	xor    dl,dh
  4192d0:	(bad)  
  4192d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d2:	mov    edx,0x6bf89cbb
  4192d7:	mov    DWORD PTR [edi+esi*2+0x18a61524],esi
  4192de:	aaa    
  4192df:	pop    ds
  4192e0:	sbb    cl,ah
  4192e2:	int    0xd4
  4192e4:	cdq    
  4192e5:	ret    
  4192e6:	fcmovb st,st(5)
  4192e8:	fwait
  4192e9:	xor    DWORD PTR [esi-0x47],ecx
  4192ec:	adc    esi,DWORD PTR [ecx]
  4192ee:	cdq    
  4192ef:	jecxz  0x4192b7
  4192f1:	mov    ds:0xfc4d3c88,eax
  4192f6:	jbe    0x419371
  4192f8:	cli    
  4192f9:	addr16 jnp 0x4192b4
  4192fc:	jmp    0x4192b9
  4192fe:	iret   
  4192ff:	dec    ebp
  419300:	jge    0x4192d9
  419302:	ret    
  419303:	mov    edi,0x4d65f14f
  419308:	push   ebx
  419309:	fdivp  st(5),st
  41930b:	retf   
  41930c:	lods   eax,DWORD PTR ds:[esi]
  41930d:	int3   
  41930e:	(bad)  
  419310:	mov    cl,0x89
  419312:	mov    ecx,eax
  419314:	cmp    al,0xa1
  419316:	or     al,BYTE PTR [ecx+0x22]
  419319:	test   BYTE PTR [eax+0x236d6dbe],dh
  41931f:	mov    esi,0x7e89afa2
  419324:	jns    0x41937c
  419326:	push   es
  419327:	cmp    ecx,DWORD PTR [ebx+edx*4+0x5fcd199b]
  41932e:	xor    DWORD PTR [esi],esi
  419330:	pop    ecx
  419331:	xchg   ebx,eax
  419332:	push   esp
  419333:	or     ebx,DWORD PTR [eax-0x24]
  419336:	push   0x35
  419338:	in     eax,dx
  419339:	mov    ds:0x8a7ca1b3,al
  41933e:	push   eax
  41933f:	pop    edx
  419340:	stc    
  419341:	sbb    dh,BYTE PTR [edx-0x4b707e72]
  419347:	xchg   edi,eax
  419348:	fiadd  WORD PTR [eax]
  41934a:	outs   dx,BYTE PTR ds:[esi]
  41934b:	adc    BYTE PTR [edx],cl
  41934d:	stos   BYTE PTR es:[edi],al
  41934e:	cmp    ebx,0x6
  419351:	jnp    0x41933d
  419353:	xchg   cl,al
  419355:	mov    ah,0xa6
  419357:	les    ecx,FWORD PTR [eax+0x6e4410e2]
  41935d:	(bad)  
  41935e:	ins    BYTE PTR es:[edi],dx
  41935f:	popf   
  419360:	addr16 je 0x4193a7
  419363:	add    dl,ah
  419365:	imul   ebp,DWORD PTR [edi+0x1d6fa7e7],0x84b5d23f
  41936f:	stc    
  419370:	jle    0x4193c1
  419372:	je     0x419347
  419374:	sub    BYTE PTR [ebp-0x20ecbb4b],ch
  41937a:	dec    esi
  41937b:	shr    DWORD PTR [ecx+eiz*2-0x2a],0xaf
  419380:	jmp    0xb784cc2f
  419385:	sbb    ch,ah
  419387:	and    al,0x3b
  419389:	pop    es
  41938a:	dec    ebx
  41938b:	or     BYTE PTR [esi+eax*2+0x39],0xfd
  419390:	ins    DWORD PTR es:[edi],dx
  419391:	out    dx,al
  419392:	cmp    DWORD PTR ds:0xf9cdebf5,0x3a
  419399:	xor    eax,0x258b21c1
  41939e:	inc    ecx
  41939f:	in     eax,0x60
  4193a1:	pop    ds
  4193a2:	mov    ebp,0x60166445
  4193a7:	jae    0x419379
  4193a9:	loope  0x41938d
  4193ab:	je     0x419417
  4193ad:	xchg   esp,ebx
  4193af:	jmp    0x4193d2
  4193b1:	dec    eax
  4193b2:	or     al,0xa6
  4193b4:	in     al,dx
  4193b5:	jmp    DWORD PTR [ecx+0x55]
  4193b8:	mov    edx,0x802074fa
  4193bd:	jmp    0xd8987896
  4193c2:	rcl    BYTE PTR [edx+0x19b78b3f],0xb1
  4193c9:	jmp    0xee01cbf0
  4193ce:	sbb    eax,0xe99dce5f
  4193d3:	enter  0x82c7,0x8e
  4193d7:	cwde   
  4193d8:	fisubr WORD PTR [eax]
  4193da:	sti    
  4193db:	xor    BYTE PTR [ebx],0xa6
  4193de:	imul   esp,DWORD PTR [edi-0x1471e579],0x6c
  4193e5:	pop    ss
  4193e6:	mov    ds:0x5a3fe78b,al
  4193eb:	mov    dh,0x4a
  4193ed:	sbb    esi,ebx
  4193ef:	add    cl,dh
  4193f1:	lods   eax,DWORD PTR ds:[esi]
  4193f2:	call   0xc39d6f91
  4193f7:	inc    edx
  4193f8:	xchg   ecx,eax
  4193f9:	add    al,0x2f
  4193fb:	dec    eax
  4193fc:	lds    eax,FWORD PTR ds:0xa9291dd1
  419402:	cmp    DWORD PTR [edi-0x7f],ecx
  419405:	mov    edx,0xc800eca5
  41940a:	dec    ebx
  41940b:	pushf  
  41940c:	(bad)  
  41940d:	mov    ecx,?
  41940f:	pop    ss
  419410:	mov    edi,0x8748ac95
  419415:	inc    ebp
  419416:	mov    ah,0x42
  419418:	cmp    BYTE PTR [esi+0x465140f6],0x21
  41941f:	dec    esi
  419420:	and    edx,esi
  419422:	pop    ecx
  419423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419424:	jg     0x4193db
  419426:	pop    ds
  419427:	aad    0x55
  419429:	fiadd  WORD PTR [esi]
  41942b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942c:	add    esi,edi
  41942e:	cmp    al,0x86
  419430:	popf   
  419431:	sub    al,0x1d
  419433:	xchg   ebx,eax
  419434:	dec    edx
  419435:	jmp    0x419420
  419437:	imul   ecx,DWORD PTR [esi+0x8],0xda124ec
  41943e:	icebp  
  41943f:	pop    esp
  419440:	rcr    cl,1
  419442:	ins    BYTE PTR es:[edi],dx
  419443:	or     ecx,DWORD PTR [ecx+0x7d65f150]
  419449:	xchg   esi,eax
  41944a:	dec    ecx
  41944b:	in     al,dx
  41944c:	icebp  
  41944d:	mov    edx,0xa4335595
  419452:	les    eax,FWORD PTR [edx-0x62]
  419455:	add    al,0x2e
  419457:	pop    esp
  419458:	jb     0x41945e
  41945a:	in     al,dx
  41945b:	das    
  41945c:	mov    ecx,0x8a509d97
  419461:	fdiv   DWORD PTR [edi+edi*2-0x44]
  419465:	fsubr  DWORD PTR [ecx-0x3b]
  419468:	aaa    
  419469:	push   ds
  41946a:	aas    
  41946b:	push   ecx
  41946c:	dec    ebp
  41946d:	inc    ecx
  41946e:	mov    BYTE PTR [edx],0xc5
  419471:	or     eax,0xde8c5cf2
  419476:	inc    edx
  419477:	jne    0x4194cd
  419479:	fisub  DWORD PTR [edi+0x4d97db4e]
  41947f:	jae    0x419499
  419481:	xor    DWORD PTR [edx-0x16],0xd7e73fe0
  419488:	jecxz  0x4194e3
  41948a:	add    bh,dl
  41948c:	shl    DWORD PTR [edi+0x4530002e],cl
  419492:	adc    BYTE PTR [eax],al
  419494:	jecxz  0x4194fa
  419496:	add    cl,BYTE PTR [edx-0x48]
  419499:	and    cl,bl
  41949b:	in     al,dx
  41949c:	or     eax,0xd6ffa94c
  4194a1:	out    dx,eax
  4194a2:	and    BYTE PTR [eax],0x69
  4194a5:	dec    eax
  4194a6:	and    BYTE PTR [ebx-0x3423735e],dl
  4194ac:	shr    DWORD PTR [esi],1
  4194ae:	inc    ebp
  4194af:	icebp  
  4194b0:	int    0xb7
  4194b2:	fucom  st(6)
  4194b4:	cmp    eax,0x82e0ac99
  4194b9:	adc    al,0x3f
  4194bb:	into   
  4194bc:	mov    DWORD PTR ds:[edx+0x657ec57f],ebx
  4194c3:	loope  0x4194cd
  4194c5:	dec    eax
  4194c6:	xchg   ebx,eax
  4194c7:	lock inc ebp
  4194c9:	imul   edi,DWORD PTR [eax+edi*1],0xbe7b9f29
  4194d0:	(bad)  
  4194d1:	cs lahf 
  4194d3:	xchg   esi,eax
  4194d4:	pushf  
  4194d5:	jle    0x419510
  4194d7:	push   ds
  4194d8:	es mov bh,0x36
  4194db:	pop    ecx
  4194dc:	test   edx,0xae49863c
  4194e2:	ja     0x4194e0
  4194e4:	into   
  4194e5:	mov    al,0xb7
  4194e7:	lds    ecx,FWORD PTR [ecx-0x376872c8]
  4194ed:	aas    
  4194ee:	mov    ch,0x70
  4194f0:	add    al,0x82
  4194f2:	iret   
  4194f3:	mov    al,0xb0
  4194f5:	mov    ds:0xf8250638,al
  4194fa:	cmp    DWORD PTR [esi-0x65d4f8cd],edx
  419500:	test   al,0x78
  419502:	pop    eax
  419503:	mov    ah,0xcc
  419505:	xchg   BYTE PTR [esi+0x1f],dl
  419508:	and    BYTE PTR [edi+0x50d95dd8],al
  41950e:	jne    0x4194ce
  419510:	inc    edx
  419511:	(bad)  
  419512:	push   0x52
  419514:	xor    BYTE PTR [esi+0x616e61a2],0x2b
  41951b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41951c:	adc    cl,dl
  41951e:	add    edx,esi
  419520:	jns    0x41956b
  419522:	pop    es
  419523:	dec    edx
  419524:	neg    DWORD PTR [ebp+ebp*8-0x2f603e45]
  41952b:	add    al,0x2d
  41952d:	xor    ah,BYTE PTR [edx]
  41952f:	push   edx
  419530:	pop    edx
  419531:	ds mov al,0xfa
  419534:	in     al,0x92
  419536:	test   eax,0xf36c594
  41953b:	fisub  DWORD PTR [esi+ecx*1-0x64]
  41953f:	mov    esi,0x8cb40170
  419544:	dec    ebp
  419545:	xor    eax,0x7fef35fe
  41954a:	push   0x4f970c86
  41954f:	fsub   DWORD PTR [esi+0x48]
  419552:	mov    WORD PTR [eax+esi*4],cs
  419555:	add    DWORD PTR [ecx+0x3a],0x2c3cbb59
  41955c:	mov    ds:0xea7125ef,al
  419561:	(bad)  
  419562:	lods   al,BYTE PTR ds:[esi]
  419563:	mov    dl,0x7b
  419565:	inc    ebx
  419566:	rol    DWORD PTR [ebx-0x18],cl
  419569:	in     al,0x74
  41956b:	fisttp WORD PTR [ebx]
  41956d:	or     eax,DWORD PTR [ebx]
  41956f:	or     DWORD PTR [ebp-0x29],ebx
  419572:	loope  0x41954c
  419574:	out    0x90,eax
  419576:	scas   al,BYTE PTR es:[edi]
  419577:	mov    ch,0x8f
  419579:	xor    BYTE PTR [ebx-0x54f1cf6e],0x89
  419580:	xchg   edx,eax
  419581:	jle    0x4195d4
  419583:	xchg   DWORD PTR [edi],ebp
  419585:	test   al,0x5a
  419587:	out    dx,al
  419588:	gs add eax,0x27515aad
  41958e:	push   cs
  41958f:	push   ecx
  419590:	cmp    ah,BYTE PTR ds:0xb7c3e72a
  419596:	das    
  419597:	add    BYTE PTR [eax],al
  419599:	cwde   
  41959a:	icebp  
  41959b:	pop    ss
  41959c:	xor    ecx,0x38d2c433
  4195a2:	pop    edi
  4195a3:	add    al,0xa7
  4195a5:	emms   
  4195a7:	(bad)  
  4195a8:	inc    DWORD PTR [eax]
  4195aa:	inc    esp
  4195ab:	gs cmp al,0x54
  4195ae:	add    edi,DWORD PTR [esi-0x52f550a]
  4195b4:	or     esp,eax
  4195b6:	loopne 0x419573
  4195b8:	sub    BYTE PTR [edi-0x3363f5b7],ch
  4195be:	and    ebx,ecx
  4195c0:	bound  ecx,QWORD PTR [ebx+0x154fe27c]
  4195c6:	adc    DWORD PTR [esi],esi
  4195c8:	mov    ch,0x85
  4195ca:	push   ebp
  4195cb:	add    DWORD PTR [ebx-0x5c],edi
  4195ce:	mov    dh,0x89
  4195d0:	in     eax,dx
  4195d1:	mov    edx,0x9e2bd7e5
  4195d6:	ja     0x4195d0
  4195d8:	or     bh,bh
  4195da:	in     eax,dx
  4195db:	pop    edi
  4195dc:	cmp    al,0x97
  4195de:	ss dec edi
  4195e0:	dec    esp
  4195e1:	push   esp
  4195e2:	aad    0xe8
  4195e4:	pushf  
  4195e5:	int    0xf9
  4195e7:	stos   BYTE PTR es:[edi],al
  4195e8:	mov    eax,edi
  4195ea:	adc    DWORD PTR [edx-0x7e747787],ecx
  4195f0:	mov    ds:0xbcd3b608,al
  4195f5:	(bad)  
  4195f6:	rcr    BYTE PTR [esi+0x23],1
  4195f9:	sbb    DWORD PTR [ebp-0x18c6438c],esi
  4195ff:	or     eax,DWORD PTR [esi]
  419601:	add    al,0x73
  419603:	ds lahf 
  419605:	mov    eax,0xb2613568
  41960a:	cmp    eax,edi
  41960c:	mov    cl,0x5d
  41960e:	sub    BYTE PTR [eax+ebp*1+0x45],0xec
  419613:	xor    DWORD PTR [esp+edi*8],edx
  419616:	dec    esi
  419617:	das    
  419618:	add    ah,BYTE PTR [ecx-0x705417b5]
  41961e:	push   es
  41961f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419620:	xor    al,0x5c
  419622:	jne    0x4195b8
  419624:	rcr    esp,cl
  419626:	icebp  
  419627:	adc    esi,ecx
  419629:	enter  0x63b2,0x5c
  41962d:	or     edi,DWORD PTR [ecx+eax*2+0x13]
  419631:	pop    ebx
  419632:	jmp    0x4195ee
  419634:	push   esi
  419635:	push   edx
  419636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419637:	into   
  419638:	xchg   ebx,eax
  419639:	les    ebp,FWORD PTR [eax+0x3baeb832]
  41963f:	xchg   ebx,eax
  419640:	hlt    
  419641:	jp     0x419613
  419643:	push   esp
  419644:	mov    ebp,DWORD PTR [ebx]
  419646:	and    bh,BYTE PTR [esi]
  419648:	mov    DWORD PTR [esi],edx
  41964a:	mov    gs,WORD PTR [ebx+eiz*4+0x36]
  41964e:	(bad)  
  41964f:	std    
  419650:	es jge 0x419675
  419653:	or     bl,ch
  419655:	in     eax,dx
  419656:	das    
  419657:	nop
  419658:	div    BYTE PTR [esi]
  41965a:	xlat   BYTE PTR ds:[ebx]
  41965b:	js     0x41962c
  41965d:	rol    BYTE PTR [ebx-0x6550b878],cl
  419663:	rcl    BYTE PTR [ebx+0x6d],1
  419666:	cmp    al,0xb5
  419668:	ror    BYTE PTR [ecx+0x57d482e6],1
  41966e:	cmp    edi,esi
  419670:	lods   al,BYTE PTR ds:[esi]
  419671:	jno    0x419679
  419673:	mov    ds:0xd139250,al
  419678:	in     eax,dx
  419679:	mov    ebx,0xb810a3cf
  41967e:	mov    eax,ds:0xacab59e0
  419683:	lock mov ds:0x766b7f29,al
  419689:	pop    es
  41968a:	call   0x2b56:0x84e474d0
  419691:	in     eax,dx
  419692:	test   eax,0xa11b4fef
  419697:	push   0x6a
  419699:	js     0x41969b
  41969b:	nop
  41969c:	nop
  41969d:	stos   DWORD PTR es:[edi],eax
  41969e:	popa   
  41969f:	mov    edx,0x49cb5615
  4196a4:	jge    0x419709
  4196a6:	loop   0x419655
  4196a8:	gs jae 0x41969e
  4196ab:	jnp    0x41972a
  4196ad:	mov    eax,DWORD PTR [esi+0x1f]
  4196b0:	ffree  st(4)
  4196b2:	xchg   DWORD PTR cs:[edi],edx
  4196b5:	mov    al,ds:0x2e4ae661
  4196ba:	and    DWORD PTR [esi],edx
  4196bc:	jne    0x41964b
  4196be:	xor    ch,dh
  4196c0:	int    0x96
  4196c2:	xlat   BYTE PTR ds:[ebx]
  4196c3:	jo     0x419652
  4196c5:	das    
  4196c6:	or     eax,0x3247f91f
  4196cb:	sbb    DWORD PTR [ecx-0x41f28171],eax
  4196d1:	inc    eax
  4196d2:	cs out 0xce,eax
  4196d5:	mov    al,ds:0x61bab5a4
  4196da:	ins    DWORD PTR es:[edi],dx
  4196db:	js     0x4196d1
  4196dd:	aaa    
  4196de:	pop    edi
  4196df:	and    bl,BYTE PTR [edx+0x6ebbb29d]
  4196e5:	test   eax,0xaa0e2629
  4196ea:	bound  esp,QWORD PTR [ebx]
  4196ec:	aad    0x4c
  4196ee:	frstor [edx]
  4196f0:	outs   dx,BYTE PTR ds:[esi]
  4196f1:	pop    eax
  4196f2:	mov    WORD PTR [ebx+0x52245900],ds
  4196f8:	sbb    eax,0x8134362e
  4196fd:	repnz lock push ss
  419700:	and    eax,DWORD PTR [ebp+0x1b]
  419703:	jmp    0x91b8:0x8553538
  41970a:	fsub   st,st(5)
  41970c:	ins    DWORD PTR es:[edi],dx
  41970d:	xlat   BYTE PTR ds:[ebx]
  41970e:	push   0x4
  419710:	cmp    edx,DWORD PTR [esi-0x43710e2e]
  419716:	push   0x58
  419718:	add    edx,edx
  41971a:	iret   
  41971b:	mov    fs,WORD PTR [edi]
  41971d:	paddsw mm1,QWORD PTR [esi+0x47]
  419721:	inc    edx
  419722:	push   ss
  419723:	xchg   dh,cl
  419725:	in     al,0xf0
  419727:	fbstp  TBYTE PTR [ecx-0x54]
  41972a:	out    0x2a,eax
  41972c:	arpl   ax,ax
  41972e:	or     edx,DWORD PTR [esi+edi*4-0x36]
  419732:	jo     0x4196dd
  419734:	ror    BYTE PTR [edi+0x68325dff],0x45
  41973b:	xchg   esi,eax
  41973c:	jo     0x4197b1
  41973e:	call   0xbc42:0x3f0aea53
  419745:	fmul   DWORD PTR [eax]
  419747:	fwait
  419748:	mov    ebx,0xf7c8dbcc
  41974d:	push   cs
  41974e:	jo     0x41972e
  419750:	ins    DWORD PTR es:[edi],dx
  419751:	xor    al,0xea
  419753:	popa   
  419754:	adc    al,0x30
  419756:	cli    
  419757:	shl    DWORD PTR [esi+ebp*4-0x706c6e12],cl
  41975e:	jmp    0xf24d234a
  419763:	or     eax,esi
  419765:	dec    esp
  419766:	mov    ebp,0xf4204da7
  41976b:	push   ss
  41976c:	lahf   
  41976d:	sub    DWORD PTR [esi-0x144901f2],0xffffffee
  419774:	dec    ebp
  419775:	inc    eax
  419776:	add    bl,BYTE PTR [edi+0x428990d3]
  41977c:	cmp    dl,ah
  41977e:	repnz in eax,0xfc
  419781:	cdq    
  419782:	xchg   edx,eax
  419783:	sti    
  419784:	mov    edx,0xb93e7bd4
  419789:	add    DWORD PTR [ebp-0x7d],ebp
  41978c:	test   eax,0x4c884320
  419791:	push   edi
  419792:	popf   
  419793:	sub    eax,0x64dc5cc9
  419798:	in     eax,0x11
  41979a:	sub    eax,0xdb666d62
  41979f:	cmp    DWORD PTR [edi],0x935db645
  4197a5:	in     al,dx
  4197a6:	(bad)  
  4197a7:	mov    ds:0xc56b771f,al
  4197ac:	xchg   BYTE PTR [edx+0x6bd9a96b],dh
  4197b2:	and    ebx,DWORD PTR [eax+0x50]
  4197b5:	pop    esp
  4197b6:	xor    dl,dh
  4197b8:	push   ecx
  4197b9:	(bad)  
  4197ba:	mov    edi,0xbf8ce14a
  4197bf:	jae    0x4197da
  4197c1:	dec    ebp
  4197c2:	pop    edx
  4197c3:	enter  0xa57e,0xf5
  4197c7:	test   DWORD PTR [edx],ebx
  4197c9:	lds    edi,FWORD PTR [esi+edi*1+0xbb391ef]
  4197d0:	fst    st(2)
  4197d2:	out    0xe2,eax
  4197d4:	inc    ecx
  4197d5:	addr16 (bad) 
  4197d7:	out    dx,eax
  4197d8:	jmp    0x419783
  4197da:	pop    esi
  4197db:	outs   dx,BYTE PTR ds:[esi]
  4197dc:	test   al,0x78
  4197de:	push   eax
  4197df:	js     0x41976b
  4197e1:	inc    edi
  4197e2:	xchg   ebp,eax
  4197e3:	loope  0x41977b
  4197e5:	cmp    eax,0x463ca5b5
  4197ea:	sahf   
  4197eb:	das    
  4197ec:	inc    ebp
  4197ed:	out    dx,al
  4197ee:	nop
  4197ef:	sbb    BYTE PTR [ebp-0x8],cl
  4197f2:	push   edi
  4197f3:	pop    esi
  4197f4:	cli    
  4197f5:	xchg   al,bl
  4197f7:	(bad)  
  4197f9:	lahf   
  4197fa:	mov    ecx,esi
  4197fc:	ror    BYTE PTR [ecx-0x2a],1
  4197ff:	int    0x17
  419801:	sub    eax,0x88d64029
  419806:	pop    ds
  419807:	xchg   ecx,eax
  419808:	loop   0x4197a4
  41980a:	push   ebp
  41980b:	ret    0x56bb
  41980e:	iret   
  41980f:	pop    edx
  419810:	mov    al,0x87
  419812:	sbb    DWORD PTR [ebx+edi*8+0x64],0x96d8bd0e
  41981a:	push   ss
  41981b:	fs jae 0x419854
  41981e:	mov    ah,0x60
  419820:	and    ebx,DWORD PTR [ebx+0x27fe62fe]
  419826:	inc    ebp
  419827:	aam    0x58
  419829:	pop    edi
  41982a:	ins    BYTE PTR es:[edi],dx
  41982b:	fisttp QWORD PTR [ebx+0x5b463dfb]
  419831:	pop    edx
  419832:	dec    ecx
  419833:	mov    dl,0xaa
  419835:	(bad)  
  419836:	ficom  WORD PTR [edi+0x4a]
  419839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41983a:	shl    BYTE PTR [ecx-0x20c05e4b],1
  419840:	jno    0x33a81e08
  419846:	add    bl,BYTE PTR [esi]
  419848:	cmp    al,0xbd
  41984a:	fistp  DWORD PTR [ebx]
  41984c:	(bad)  ds:0xa7a52325
  419852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419853:	dec    esi
  419854:	pop    edx
  419855:	iret   
  419856:	lods   eax,DWORD PTR ds:[esi]
  419857:	test   BYTE PTR [ecx+eiz*4],ch
  41985a:	push   esp
  41985b:	sub    al,0xb
  41985d:	jp     0x419886
  41985f:	mov    al,ds:0x46f3df6d
  419864:	or     ah,cl
  419866:	mov    ch,0x1c
  419868:	(bad)  
  419869:	out    0x39,eax
  41986b:	lods   al,BYTE PTR ds:[esi]
  41986c:	addr16 in eax,0x18
  41986f:	cmp    al,0xe0
  419871:	jp     0x41989e
  419873:	(bad)  
  419875:	into   
  419876:	call   0x8c9c:0x4ea054f7
  41987d:	aad    0x97
  41987f:	sub    DWORD PTR [edx-0x58aedaa8],eax
  419885:	jge    0x419840
  419887:	push   eax
  419888:	xor    eax,0xb45b48cb
  41988d:	repnz stos BYTE PTR es:[edi],al
  41988f:	cmc    
  419890:	jmp    0x17ea:0xf62c4229
  419897:	mov    cl,0x8f
  419899:	xor    al,0x6b
  41989b:	daa    
  41989c:	ret    0x4a1d
  41989f:	pop    ds
  4198a0:	mov    ebp,0x203f5517
  4198a5:	mov    ds:0x30dad98d,eax
  4198aa:	add    al,0x24
  4198ac:	pop    esp
  4198ad:	lods   al,BYTE PTR ds:[esi]
  4198ae:	fild   WORD PTR [esi+0x1f]
  4198b1:	mov    esp,0xe9f38a4
  4198b6:	(bad)  
  4198b7:	sbb    DWORD PTR [edx+0x717eec7e],eax
  4198bd:	arpl   WORD PTR [ebp+0x9],dx
  4198c0:	push   eax
  4198c1:	push   0xffffffcb
  4198c3:	cmp    eax,0x3c3cc477
  4198c8:	mov    ebp,0x25aede8d
  4198cd:	sbb    al,0x8c
  4198cf:	sub    BYTE PTR [ecx+edx*8-0x101301e6],cl
  4198d6:	(bad)  
  4198d7:	loope  0x419922
  4198d9:	xchg   BYTE PTR [ecx],al
  4198db:	outs   dx,DWORD PTR ds:[esi]
  4198dc:	bound  eax,QWORD PTR [ecx-0x3]
  4198df:	and    eax,0x6e77f54a
  4198e4:	mov    bl,0xed
  4198e6:	sub    DWORD PTR ds:0xc8b5fc4a,edi
  4198ec:	loope  0x4198b0
  4198ee:	sub    eax,0x24e46304
  4198f3:	hlt    
  4198f4:	sbb    eax,0xd198483b
  4198f9:	and    BYTE PTR [esi+0x1fa775b2],0x8e
  419900:	mov    edi,0x289feec3
  419905:	mov    eax,0xe7d083ed
  41990a:	jns    0x419931
  41990c:	lock jno 0x4198d5
  41990f:	ret    0xe864
  419912:	clc    
  419913:	adc    BYTE PTR [eax+0x43b4143d],ah
  419919:	xchg   ebp,eax
  41991a:	and    eax,0xb9df668e
  41991f:	scas   eax,DWORD PTR es:[edi]
  419920:	daa    
  419921:	and    DWORD PTR [ecx-0xe],esi
  419924:	stos   BYTE PTR es:[edi],al
  419925:	sbb    al,0xdf
  419927:	and    eax,0x390f2372
  41992c:	mov    bl,0xcd
  41992e:	(bad)  
  41992f:	xchg   ebp,eax
  419930:	popf   
  419931:	and    edi,DWORD PTR [esi]
  419933:	adc    al,0x1a
  419935:	mov    edi,0xcb939d0e
  41993a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41993b:	and    dl,dl
  41993d:	clflush BYTE PTR [edi+0xf]
  419941:	cmp    ebx,ebp
  419943:	xor    edi,DWORD PTR [esi-0x4c56c2a0]
  419949:	inc    ebp
  41994a:	mov    ds:0xa4c9dd27,al
  41994f:	sub    eax,0xc962ff8e
  419954:	out    dx,al
  419955:	inc    esi
  419956:	push   ds
  419957:	lods   eax,DWORD PTR ds:[esi]
  419958:	nop
  419959:	and    eax,0x5590f41e
  41995e:	in     eax,0x6c
  419960:	push   esi
  419961:	xor    eax,0x1c2a237a
  419966:	add    eax,0x6a296ef6
  41996b:	(bad)  
  41996c:	or     al,0xae
  41996e:	repnz and ecx,DWORD PTR [ebx+0xa2a79b7]
  419975:	push   cs
  419976:	fwait
  419977:	mov    BYTE PTR [edi],cl
  419979:	es cli 
  41997b:	ja     0x4199cb
  41997d:	and    ebp,DWORD PTR [edx+0x4c]
  419980:	sbb    DWORD PTR [edi-0x6e06e5fc],edi
  419986:	xchg   ecx,eax
  419987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419988:	retf   
  419989:	jmp    0x41996d
  41998b:	out    0xba,eax
  41998d:	jmp    0xfe850323
  419992:	or     DWORD PTR [edx],ecx
  419994:	mov    BYTE PTR [edi+0x62],ch
  419997:	sti    
  419998:	out    dx,al
  419999:	mov    cl,0x6e
  41999b:	retf   
  41999c:	stos   BYTE PTR es:[edi],al
  41999d:	jmp    0xf4b8:0xb36a9cfd
  4199a4:	add    BYTE PTR [ecx+eiz*2+0x3aa7eea2],cl
  4199ab:	or     eax,DWORD PTR [eax+0x4840b332]
  4199b1:	(bad)  
  4199b2:	cmp    bh,BYTE PTR [esi]
  4199b4:	loopne 0x419976
  4199b6:	(bad)
  4199b9:	mov    edx,0x66aeaf7c
  4199be:	jns    0x419a12
  4199c0:	cwde   
  4199c1:	dec    ebp
  4199c2:	jge    0x419982
  4199c4:	cdq    
  4199c5:	xchg   esp,eax
  4199c6:	loope  0x4199dc
  4199c8:	stos   DWORD PTR es:[edi],eax
  4199c9:	dec    ebx
  4199ca:	cmp    bh,BYTE PTR [edi-0x72]
  4199cd:	and    eax,0x96ce341d
  4199d2:	jmp    0xef2c2aa
  4199d7:	xor    al,0x51
  4199d9:	push   edx
  4199da:	ficomp DWORD PTR [ebx-0x47]
  4199dd:	idiv   BYTE PTR [ebx-0x51]
  4199e0:	jl     0x419a49
  4199e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199e3:	ret    0xfbc
  4199e6:	inc    ecx
  4199e7:	and    DWORD PTR [ecx-0x5b],edx
  4199ea:	bound  edx,QWORD PTR [edx]
  4199ec:	cmp    BYTE PTR [eax+eiz*1-0x6780d560],0xf8
  4199f4:	sub    esp,DWORD PTR [edi+0x2f]
  4199f7:	call   0xa057:0xaccefee7
  4199fe:	les    esp,FWORD PTR ds:0x98970cff
  419a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a05:	push   0xffffffda
  419a07:	push   ebp
  419a08:	sbb    edx,DWORD PTR [edx-0x621c3e47]
  419a0e:	adc    eax,0xf039c5e9
  419a13:	xchg   BYTE PTR [ecx],dl
  419a15:	imul   ebx,esi,0x4f
  419a18:	and    BYTE PTR [esi+ebx*2+0x5e],0x16
  419a1d:	enter  0xd8c5,0xae
  419a21:	push   cs
  419a22:	fisttp QWORD PTR [ebp+eax*4-0x3c]
  419a26:	push   ebx
  419a27:	add    al,0x4
  419a29:	lods   al,BYTE PTR ds:[esi]
  419a2a:	sub    al,0xcd
  419a2c:	call   0x199d:0x17ae6fb2
  419a33:	aaa    
  419a34:	jns    0x4199ee
  419a36:	cmp    ah,BYTE PTR [ecx]
  419a38:	mov    ?,eax
  419a3a:	mov    cs,WORD PTR [eax]
  419a3c:	jle    0x419ab5
  419a3e:	test   ah,ah
  419a40:	or     al,0x71
  419a42:	int    0x99
  419a44:	fisub  DWORD PTR [ecx-0x1b7f15e7]
  419a4a:	push   esp
  419a4b:	pop    ebp
  419a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a4d:	(bad)  
  419a4e:	loopne 0x4199eb
  419a50:	ret    0x82aa
  419a53:	ss push 0xa3c4a7fe
  419a59:	std    
  419a5a:	arpl   bx,di
  419a5c:	mov    esp,0x91127de2
  419a61:	mov    dl,0xd6
  419a63:	sti    
  419a64:	into   
  419a65:	seto   BYTE PTR [eax+0x48fc7e13]
  419a6c:	add    DWORD PTR ds:0x8eb1d3e7,ecx
  419a72:	sub    BYTE PTR [ebp-0x744be296],bl
  419a78:	adc    ecx,DWORD PTR [ebp-0x3338dfa7]
  419a7e:	pusha  
  419a7f:	and    al,0x52
  419a81:	imul   ecx,ebx,0xf4b83a
  419a87:	(bad)  
  419a88:	out    dx,eax
  419a89:	xchg   esp,eax
  419a8a:	shl    BYTE PTR [ebx],1
  419a8c:	out    dx,eax
  419a8d:	inc    esi
  419a8e:	sbb    ebp,DWORD PTR [esi]
  419a90:	sub    eax,0x42079411
  419a95:	lods   eax,DWORD PTR ds:[esi]
  419a96:	prefetch BYTE PTR [edx+0x337d4d33]
  419a9d:	sub    BYTE PTR [ebx],dh
  419a9f:	cld    
  419aa0:	jle    0x419a7f
  419aa2:	pop    es
  419aa3:	lea    edx,[edx]
  419aa5:	xor    al,0x92
  419aa7:	pop    ss
  419aa8:	in     eax,0x8d
  419aaa:	in     al,dx
  419aab:	jl     0x419a67
  419aad:	add    eax,0x502f8433
  419ab2:	iret   
  419ab3:	ss (bad) 
  419ab5:	lods   eax,DWORD PTR ds:[esi]
  419ab6:	enter  0x71a7,0x28
  419aba:	jmp    0x15d216fc
  419abf:	jb     0x419abd
  419ac1:	or     al,0x5b
  419ac3:	hlt    
  419ac4:	xchg   ebp,eax
  419ac5:	adc    ah,bl
  419ac7:	pavgw  mm7,QWORD PTR [esi+0x69e3f2bf]
  419ace:	sub    al,0xd8
  419ad0:	adc    ah,ch
  419ad2:	out    0x42,al
  419ad4:	and    dh,BYTE PTR [esp+ecx*1+0x686a24d2]
  419adb:	add    dh,bl
  419add:	out    dx,al
  419ade:	jb     0x419ab1
  419ae0:	pop    ss
  419ae1:	mov    ch,0xef
  419ae3:	pop    ecx
  419ae4:	pop    ebp
  419ae5:	inc    edx
  419ae6:	sar    al,0x8c
  419ae9:	sbb    DWORD PTR [ebx-0x597fb73b],esi
  419aef:	or     dh,bl
  419af1:	std    
  419af2:	xor    DWORD PTR [eax-0x49a6b563],esi
  419af8:	stc    
  419af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419afa:	sub    edx,ebp
  419afc:	test   esp,0xff3b3c31
  419b02:	cwde   
  419b03:	jne    0x419aa4
  419b05:	pop    esi
  419b06:	jnp    0x419ae7
  419b08:	ja     0x419ac6
  419b0a:	js     0x419b1b
  419b0c:	cwde   
  419b0d:	(bad)  
  419b0e:	les    ebx,FWORD PTR [ebx-0x4f5dd68]
  419b14:	mov    ebp,0x363b0f64
  419b19:	mov    al,0xb0
  419b1b:	or     eax,0xf9e8d50d
  419b20:	es div ebp
  419b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b24:	cld    
  419b25:	add    al,0x15
  419b27:	or     dh,BYTE PTR [esi+0x18]
  419b2a:	and    BYTE PTR [ebp-0xa919c94],dh
  419b30:	pop    edx
  419b31:	ins    DWORD PTR es:[edi],dx
  419b32:	retf   0x4f22
  419b35:	pusha  
  419b36:	ret    
  419b37:	call   0x7c5dfa9e
  419b3c:	in     al,0x41
  419b3e:	jbe    0x419afd
  419b40:	pop    edi
  419b41:	push   esp
  419b42:	sti    
  419b43:	adc    ecx,eax
  419b45:	mov    dh,BYTE PTR [esi]
  419b47:	jb     0x419b89
  419b49:	aas    
  419b4a:	xchg   ecx,eax
  419b4b:	push   eax
  419b4c:	mov    ds:0x766c4d06,al
  419b51:	pushf  
  419b52:	xor    eax,0xd4250226
  419b57:	fisttp WORD PTR [ecx-0xaffe84]
  419b5d:	pop    esi
  419b5e:	ins    DWORD PTR es:[edi],dx
  419b5f:	das    
  419b60:	fbstp  TBYTE PTR [ebx-0x5d3b2416]
  419b66:	push   ebp
  419b67:	ds popf 
  419b69:	jbe    0x419b40
  419b6b:	dec    esp
  419b6c:	jnp    0x419b07
  419b6e:	clc    
  419b6f:	adc    ebp,esp
  419b71:	or     ch,BYTE PTR [ebx+0x17f2938c]
  419b77:	push   0xa
  419b79:	div    DWORD PTR [edx-0x28c92df0]
  419b7f:	dec    edi
  419b80:	sbb    DWORD PTR [ebx],0x3d
  419b83:	inc    ebx
  419b84:	sti    
  419b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b86:	or     edi,DWORD PTR cs:[esi+0x1c]
  419b8a:	shr    BYTE PTR [eax-0x23],1
  419b8d:	(bad)  
  419b8f:	cdq    
  419b90:	xchg   esp,eax
  419b91:	pop    eax
  419b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b93:	lahf   
  419b94:	loop   0x419ba6
  419b96:	inc    ecx
  419b97:	mov    edx,0xec1b525d
  419b9c:	jmp    0x9e93:0xffc7bc6d
  419ba3:	loopne 0x419c24
  419ba5:	repz sbb eax,0x8173220d
  419bab:	out    0xd6,eax
  419bad:	sub    eax,0x3738622f
  419bb2:	and    eax,DWORD PTR [esi+0x46]
  419bb5:	adc    BYTE PTR [edx+ecx*1],ch
  419bb8:	jo     0x419ba1
  419bba:	mov    ch,0xc3
  419bbc:	or     esp,DWORD PTR [ebp+0x3f551c21]
  419bc2:	pop    es
  419bc3:	jle    0x419b5c
  419bc5:	jnp    0x419b9e
  419bc7:	and    ebx,DWORD PTR [ebx]
  419bc9:	pop    ebp
  419bca:	ja     0x419bb7
  419bcc:	(bad)  
  419bcd:	push   esp
  419bce:	rcr    BYTE PTR gs:0x926ba7cd,1
  419bd5:	adc    BYTE PTR [ebp+edi*1+0x269a5c4c],ah
  419bdc:	sti    
  419bdd:	mov    eax,ds:0x7868fed6
  419be2:	inc    DWORD PTR [esi+0x15]
  419be5:	mov    cl,0xb0
  419be7:	inc    ebp
  419be8:	mov    ds:0x492e2e58,eax
  419bed:	mov    BYTE PTR [edx-0x74c29df3],dh
  419bf3:	imul   ecx,DWORD PTR [edx-0x5c848ba5],0xffffffec
  419bfa:	cmp    dh,BYTE PTR [esi+0xf]
  419bfd:	and    eax,DWORD PTR [edx+0x6e]
  419c00:	cdq    
  419c01:	and    BYTE PTR ds:0xcc73b695,0x69
  419c08:	adc    ecx,esi
  419c0a:	shr    ah,cl
  419c0c:	dec    esi
  419c0d:	repnz fcomip st,st(1)
  419c10:	popf   
  419c11:	xchg   esi,eax
  419c12:	ins    DWORD PTR es:[edi],dx
  419c13:	jnp    0x419c22
  419c15:	pop    esp
  419c16:	dec    edi
  419c17:	pop    esp
  419c18:	inc    edi
  419c19:	jg     0x419bd7
  419c1b:	retf   
  419c1c:	fistp  DWORD PTR [esi-0x7343d44a]
  419c22:	stos   DWORD PTR es:[edi],eax
  419c23:	inc    eax
  419c24:	loop   0x419c45
  419c26:	cli    
  419c27:	ror    DWORD PTR [edx+0xa],1
  419c2a:	mov    dh,0x15
  419c2c:	xchg   ecx,eax
  419c2d:	out    0xd6,al
  419c2f:	dec    esi
  419c30:	(bad)  
  419c31:	sub    BYTE PTR [esp+esi*2],ch
  419c34:	loopne 0x419be0
  419c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c37:	dec    edi
  419c38:	fist   DWORD PTR [edx-0x64c1db0d]
  419c3e:	rcl    BYTE PTR [esi+0x65ccec3a],1
  419c44:	sub    bh,ch
  419c46:	repnz gs addr16 in al,dx
  419c4a:	(bad)  
  419c4b:	jno    0x419c2f
  419c4d:	xchg   ecx,eax
  419c4e:	mov    cl,0xff
  419c50:	xor    eax,0x2ca392d5
  419c55:	mov    eax,0xef638c75
  419c5a:	ror    BYTE PTR [ecx],1
  419c5c:	lds    ecx,FWORD PTR [esi]
  419c5e:	mov    ebx,ebx
  419c60:	add    bl,BYTE PTR [eax-0x11]
  419c63:	jb     0x419c4c
  419c65:	xor    ah,dl
  419c67:	imul   edi,DWORD PTR [eax-0x17],0x5f
  419c6b:	imul   esp,DWORD PTR [edi],0xffffffa6
  419c6e:	lods   eax,DWORD PTR ds:[esi]
  419c6f:	xor    eax,0x7d645991
  419c74:	jmp    0x94d135e
  419c79:	inc    edi
  419c7a:	push   ss
  419c7b:	push   es
  419c7c:	mov    WORD PTR [ecx],es
  419c7e:	es aaa 
  419c80:	inc    esp
  419c81:	dec    esi
  419c82:	fnstcw WORD PTR [ebp+0x5d]
  419c85:	push   ebp
  419c86:	ror    DWORD PTR [edi+0x54],0x71
  419c8a:	xor    esi,esi
  419c8c:	jne    0x419d04
  419c8e:	shr    cl,cl
  419c90:	xor    cl,BYTE PTR [ebx+0x248af92a]
  419c96:	jb     0x419c1b
  419c98:	xor    eax,0x8d5ae938
  419c9d:	jns    0x419c33
  419c9f:	mov    ecx,0x42e5fc06
  419ca4:	retf   
  419ca5:	dec    ebp
  419ca6:	ss ds sbb eax,0x95fe8b9a
  419cad:	out    dx,al
  419cae:	rcpps  xmm4,XMMWORD PTR [eax-0x59b42557]
  419cb5:	xor    BYTE PTR [edi-0x1bc87f81],dh
  419cbb:	cmp    DWORD PTR [edi+ecx*4-0x408d4461],edx
  419cc2:	mov    esi,0x67b902af
  419cc7:	mov    eax,0xbc23a458
  419ccc:	xchg   esi,eax
  419ccd:	int    0xdd
  419ccf:	jge    0x419cfe
  419cd1:	rcr    DWORD PTR [edx+0x58],cl
  419cd4:	call   0x6996cb90
  419cd9:	mov    cl,0x77
  419cdb:	in     al,dx
  419cdc:	test   DWORD PTR [ebx-0x65d00888],eax
  419ce2:	push   esi
  419ce3:	in     eax,0xa7
  419ce5:	clc    
  419ce6:	outs   dx,DWORD PTR ds:[esi]
  419ce7:	into   
  419ce8:	(bad)  
  419ce9:	lock push ss
  419ceb:	clc    
  419cec:	inc    eax
  419ced:	add    dh,bl
  419cef:	test   DWORD PTR [ecx+0x16cc2797],ecx
  419cf5:	pop    ebp
  419cf6:	mov    bl,0xe7
  419cf8:	mov    ah,0x7c
  419cfa:	dec    esp
  419cfb:	cmp    BYTE PTR [esi+0x66],bl
  419cfe:	cld    
  419cff:	inc    ecx
  419d00:	mov    cl,0x81
  419d02:	(bad)  
  419d03:	sub    dh,BYTE PTR [edi-0x3c]
  419d06:	cld    
  419d07:	push   eax
  419d08:	nop
  419d09:	pop    edx
  419d0a:	pop    ebx
  419d0b:	das    
  419d0c:	out    0x80,al
  419d0e:	and    esi,edx
  419d10:	mov    ds:0xf923b0ac,al
  419d15:	add    dl,BYTE PTR [esp+ecx*2-0x1e]
  419d19:	push   0x824006b8
  419d1e:	aam    0x79
  419d20:	push   ebp
  419d21:	ret    
  419d22:	sub    eax,0x698e8e69
  419d27:	sub    DWORD PTR [edi+0x3d],edx
  419d2a:	jmp    0x7cbd0d35
  419d2f:	xchg   esi,eax
  419d30:	sbb    ecx,DWORD PTR [ebx+0x3c28a4de]
  419d36:	pop    ebx
  419d37:	data16 and bh,BYTE PTR [esi]
  419d3a:	out    dx,al
  419d3b:	mov    BYTE PTR [eax+0x4f],0x14
  419d3f:	(bad)  
  419d40:	adc    BYTE PTR [edi-0x6b],dh
  419d43:	pop    esp
  419d44:	mov    esi,DWORD PTR [eiz*2-0x54a0caf9]
  419d4b:	shl    ah,1
  419d4d:	cli    
  419d4e:	and    BYTE PTR [edi],bl
  419d50:	xchg   ebp,eax
  419d51:	cld    
  419d52:	mov    esi,0xed85936f
  419d57:	mov    WORD PTR [ebx],es
  419d59:	jo     0x419d1a
  419d5b:	inc    eax
  419d5c:	add    ch,BYTE PTR [edx]
  419d5e:	ss push ecx
  419d60:	(bad)
  419d64:	aad    0xf2
  419d66:	and    dh,bl
  419d68:	pop    esi
  419d69:	mov    cl,dl
  419d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d6c:	or     al,0x9e
  419d6e:	push   0xb61385b9
  419d73:	lds    esi,FWORD PTR [edx-0x49]
  419d76:	daa    
  419d77:	sti    
  419d78:	push   0x23
  419d7a:	outs   dx,DWORD PTR ds:[esi]
  419d7b:	gs mov al,0x57
  419d7e:	scas   al,BYTE PTR es:[edi]
  419d7f:	shl    BYTE PTR [ebx-0x2db8224e],cl
  419d85:	xchg   edx,eax
  419d86:	fs ret 
  419d88:	fldenv [eax-0x3c09767c]
  419d8e:	cwde   
  419d8f:	mov    ebx,0x45078667
  419d94:	add    DWORD PTR [ebx],0x73
  419d97:	xchg   edx,eax
  419d98:	das    
  419d99:	je     0x419d8c
  419d9b:	es jns 0x419db8
  419d9e:	pop    ss
  419d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419da0:	sti    
  419da1:	sbb    al,0x8c
  419da3:	icebp  
  419da4:	and    al,BYTE PTR [esi]
  419da6:	jnp    0x419e27
  419da8:	iret   
  419da9:	cmp    BYTE PTR [edi-0x2e],cl
  419dac:	sub    ebx,0xffffff85
  419daf:	ins    BYTE PTR es:[edi],dx
  419db0:	jmp    0xced6:0x63f37145
  419db7:	xchg   edi,eax
  419db8:	push   ds
  419db9:	je     0x419d57
  419dbb:	and    bl,BYTE PTR [edx+0x27f94eb1]
  419dc1:	imul   eax,DWORD PTR [ebx-0x53],0x7080d7a
  419dc8:	push   0xffffffd3
  419dca:	mov    ah,0xe2
  419dcc:	inc    edx
  419dcd:	mov    al,0x2c
  419dcf:	mov    DWORD PTR [eax-0x2c6c8cd2],esp
  419dd5:	or     bl,BYTE PTR [ebp+esi*4-0x5dc27452]
  419ddc:	jns    0x419e5a
  419dde:	neg    DWORD PTR [ebx]
  419de0:	mov    eax,ds:0x7e21449a
  419de5:	xchg   ecx,esi
  419de7:	push   es
  419de8:	jg     0x419df7
  419dea:	in     eax,dx
  419deb:	push   ebx
  419dec:	xchg   edi,eax
  419ded:	iret   
  419dee:	ret    
  419def:	and    al,0x8a
  419df1:	stos   BYTE PTR es:[edi],al
  419df2:	pop    esi
  419df3:	jmp    0x8dfdd9a1
  419df8:	mov    esi,0xccc21ef1
  419dfd:	cdq    
  419dfe:	sbb    edx,0x74
  419e01:	rcr    ebx,cl
  419e03:	data16 sbb ch,BYTE PTR [eax-0x4977884c]
  419e0a:	xchg   edi,eax
  419e0b:	cmp    eax,0x532455df
  419e10:	jo     0x419e89
  419e12:	jg     0x419dc2
  419e14:	dec    eax
  419e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e16:	mov    edi,0x4641ac77
  419e1b:	repnz dec esi
  419e1d:	loope  0x419dc6
  419e1f:	pop    esp
  419e20:	sub    eax,0xecba11a6
  419e25:	dec    eax
  419e26:	in     eax,dx
  419e27:	sar    BYTE PTR [eax+0x77243163],1
  419e2d:	call   0xec13:0xa1eecd61
  419e34:	xchg   ecx,eax
  419e35:	cli    
  419e36:	pushf  
  419e37:	or     dl,dh
  419e39:	in     al,0xdf
  419e3b:	cmc    
  419e3c:	repz sub dh,BYTE PTR [edi-0x42997907]
  419e43:	sbb    eax,0x64f918c5
  419e48:	dec    esp
  419e49:	test   eax,0x16d05e23
  419e4e:	adc    BYTE PTR [esi+0x13c0cdbe],0x90
  419e55:	aas    
  419e56:	push   esi
  419e57:	outs   dx,DWORD PTR ds:[esi]
  419e58:	mov    ebp,0x687eff46
  419e5d:	ds push ebx
  419e5f:	fwait
  419e60:	mov    ds:0xfbad3cec,al
  419e65:	jo     0x419e13
  419e67:	cld    
  419e68:	add    DWORD PTR [edx-0x6ba03fdc],ecx
  419e6e:	push   esp
  419e6f:	inc    edx
  419e70:	lea    ebx,[esi+0x50]
  419e73:	cmc    
  419e74:	mov    ecx,DWORD PTR [eax]
  419e76:	xor    al,dh
  419e78:	pop    eax
  419e79:	sub    esp,esi
  419e7b:	(bad)  
  419e7c:	fst    DWORD PTR [edi+0xe]
  419e7f:	rcr    DWORD PTR [esi+edi*1],1
  419e82:	push   ebp
  419e83:	fldcw  WORD PTR [ebx-0x19]
  419e86:	scas   eax,DWORD PTR es:[edi]
  419e87:	repz inc edx
  419e89:	mov    dh,0x8
  419e8b:	jo     0x419f05
  419e8d:	cmp    al,0x5
  419e8f:	pop    edx
  419e90:	test   al,0x50
  419e92:	fsub   DWORD PTR es:[ecx+0x6bc74a1]
  419e99:	sub    eax,0x91860ae7
  419e9e:	js     0x419ea0
  419ea0:	dec    edx
  419ea1:	jnp    0x419ee2
  419ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea4:	push   esi
  419ea5:	les    eax,FWORD PTR [edi+0x46c70493]
  419eab:	and    al,0xed
  419ead:	push   ecx
  419eae:	mov    ebx,ecx
  419eb0:	test   eax,0x5dc96107
  419eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb6:	imul   edi,DWORD PTR [edi+0x13e3fc6e],0x16
  419ebd:	fst    DWORD PTR [ebx-0x54]
  419ec0:	mov    bl,0xef
  419ec2:	mov    ah,0x58
  419ec4:	add    eax,DWORD PTR [ecx-0x5761ea0c]
  419eca:	cmc    
  419ecb:	add    DWORD PTR [ebx],edx
  419ecd:	enter  0x88d,0xbb
  419ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ed2:	rcl    DWORD PTR es:[esi-0x4b],0x8f
  419ed7:	xchg   edi,eax
  419ed8:	sbb    esp,esi
  419eda:	dec    ecx
  419edb:	sar    BYTE PTR [ecx],1
  419edd:	xor    DWORD PTR [edi+0x115159f7],esp
  419ee3:	dec    ebp
  419ee4:	jbe    0x419ed0
  419ee6:	push   esi
  419ee7:	jno    0x419ec7
  419ee9:	jae    0x419ea0
  419eeb:	cs inc ecx
  419eed:	inc    eax
  419eee:	sub    eax,0xf1778331
  419ef3:	mov    ecx,0x88961c67
  419ef8:	imul   ebp,DWORD PTR [ebx],0xb233b6c6
  419efe:	call   0xf3123a05
  419f03:	sbb    BYTE PTR [edx],0xac
  419f06:	stos   DWORD PTR es:[edi],eax
  419f07:	clc    
  419f08:	jnp    0x419ea9
  419f0a:	scas   eax,DWORD PTR es:[edi]
  419f0b:	xchg   esi,eax
  419f0c:	jmp    0xeeb0:0xc4a2aeb2
  419f13:	pusha  
  419f14:	popf   
  419f15:	iret   
  419f16:	sbb    eax,edi
  419f18:	mov    esp,0xb28f294f
  419f1d:	int    0x2
  419f1f:	out    0x54,eax
  419f21:	jo     0x419f7b
  419f23:	pop    ebp
  419f24:	jns    0x419eb1
  419f26:	fs dec esi
  419f28:	push   cs
  419f29:	test   eax,0x6bfb966f
  419f2e:	adc    dl,dh
  419f30:	xchg   BYTE PTR [edx-0x16571f03],dh
  419f36:	or     eax,0x8ad58a39
  419f3b:	nop
  419f3c:	das    
  419f3d:	pusha  
  419f3e:	(bad)  cs:[ecx-0x2b]
  419f42:	jno    0x419f8e
  419f44:	fdiv   QWORD PTR [ecx]
  419f46:	add    BYTE PTR [ebp+0x6456fdda],cl
  419f4c:	lods   al,BYTE PTR ds:[esi]
  419f4d:	sbb    al,0xe4
  419f4f:	imul   edi,DWORD PTR [ebp-0x4e],0x9f2d65bd
  419f56:	jge    0x419f1b
  419f58:	mov    eax,ds:0x64c8497c
  419f5d:	cmp    BYTE PTR [esp+eiz*2-0x7a],0x25
  419f62:	pop    ebp
  419f63:	and    DWORD PTR [edx-0x1aabf92d],ecx
  419f69:	mov    esp,0x212961ee
  419f6e:	mov    ebx,0x33ee1d52
  419f73:	mov    eax,ds:0x38ba7b19
  419f78:	fimul  WORD PTR ds:0x4e83dbf2
  419f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f7f:	dec    ebx
  419f80:	xor    BYTE PTR [edx],ch
  419f82:	sub    ebp,DWORD PTR [eax-0x2c53d341]
  419f88:	mov    edi,0x85289529
  419f8d:	ror    BYTE PTR [eax+ebp*1],cl
  419f90:	lock add esp,DWORD PTR ds:0x611e63c8
  419f97:	ins    DWORD PTR es:[edi],dx
  419f98:	arpl   cx,bx
  419f9a:	(bad)  
  419f9b:	sub    eax,0x62e33459
  419fa0:	mov    BYTE PTR [esi],dh
  419fa2:	push   eax
  419fa3:	add    al,0x2b
  419fa5:	test   al,0x24
  419fa7:	ja     0x41a012
  419fa9:	in     eax,0x88
  419fab:	and    eax,0x9282e18b
  419fb0:	sub    DWORD PTR [edx-0x45dad9d2],edi
  419fb6:	mov    eax,0x4525e038
  419fbb:	pushf  
  419fbc:	add    DWORD PTR [eax],eax
  419fbe:	xchg   edx,eax
  419fbf:	fist   WORD PTR [ecx+0x3d]
  419fc2:	mov    al,ds:0x63c5f28f
  419fc7:	cmp    BYTE PTR [edi],al
  419fc9:	or     al,0x79
  419fcb:	fist   WORD PTR [ebx-0xc235ef4]
  419fd1:	icebp  
  419fd2:	inc    esi
  419fd3:	inc    ecx
  419fd4:	add    esp,ebx
  419fd6:	xor    ah,BYTE PTR [ecx]
  419fd8:	(bad)  
  419fd9:	scas   eax,DWORD PTR es:[edi]
  419fda:	inc    ebx
  419fdb:	sbb    eax,DWORD PTR [esi+0x7a811908]
  419fe1:	cmp    al,0x66
  419fe3:	inc    eax
  419fe4:	(bad)  
  419fe5:	out    0x71,al
  419fe7:	mov    BYTE PTR [ebp+0x25],bh
  419fea:	and    DWORD PTR fs:[eax-0x3061b0b4],ebp
  419ff1:	push   es
  419ff2:	repz cmp BYTE PTR [ebp+0x55],dh
  419ff6:	sbb    al,0x88
  419ff8:	xor    eax,DWORD PTR [edi]
  419ffa:	test   esi,edx
  419ffc:	data16 aaa 
  419ffe:	dec    edi
  419fff:	push   eax
  41a000:	mov    ds:0x8ebfa40e,al
  41a005:	adc    eax,0x3f162944
  41a00a:	xchg   esp,eax
  41a00b:	sbb    al,0x0
  41a00d:	or     eax,0xa7400ff6
  41a012:	shr    BYTE PTR [edx+0x4a98ee2a],1
  41a018:	or     DWORD PTR [edx-0x3b],edx
  41a01b:	cmp    bl,BYTE PTR [ebp+0x0]
  41a01e:	mov    ds:0xe2c11bb9,eax
  41a023:	clc    
  41a024:	mov    eax,ds:0x55315de0
  41a029:	jecxz  0x419fef
  41a02b:	dec    esi
  41a02c:	cmp    bl,bl
  41a02e:	push   esi
  41a02f:	ins    DWORD PTR es:[edi],dx
  41a030:	sub    edx,DWORD PTR [esi]
  41a032:	xchg   DWORD PTR [ebp+0x67358d9a],edi
  41a038:	pop    esp
  41a039:	jb     0x419fe0
  41a03b:	fimul  WORD PTR [eax-0x3a]
  41a03e:	ss mov ebx,0xc81e3d60
  41a044:	(bad)  
  41a045:	xor    bl,BYTE PTR ds:0xce164df4
  41a04b:	stos   BYTE PTR es:[edi],al
  41a04c:	ud0    esi,DWORD PTR ds:0x3a110d19
  41a053:	gs sub al,0xbe
  41a056:	xchg   esp,eax
  41a057:	outs   dx,DWORD PTR ds:[esi]
  41a058:	xlat   BYTE PTR ds:[ebx]
  41a059:	loop   0x41a093
  41a05b:	loope  0x41a0be
  41a05d:	dec    edi
  41a05e:	cwde   
  41a05f:	sbb    al,0x62
  41a061:	cli    
  41a062:	sub    cl,ch
  41a064:	and    eax,0xee9ade46
  41a069:	xor    esp,DWORD PTR [eax-0x2c]
  41a06c:	or     eax,0x521f23ce
  41a072:	jns    0x41a0ad
  41a074:	adc    eax,0x515db429
  41a079:	mov    DWORD PTR [edx-0x39],ebp
  41a07c:	dec    edx
  41a07d:	jns    0x41a0d3
  41a07f:	adc    DWORD PTR [edx],0xad5b0c42
  41a085:	(bad)  
  41a086:	popf   
  41a087:	test   DWORD PTR [ebx+edi*2+0x6517c5d6],ebx
  41a08e:	retf   0x2768
  41a091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a092:	mov    ds:0x978ff562,al
  41a097:	jno    0x41a0f6
  41a099:	in     al,dx
  41a09a:	xchg   edi,eax
  41a09b:	or     BYTE PTR [ecx],ah
  41a09d:	jmp    0x3623:0x63e53bcb
  41a0a4:	fs cmc 
  41a0a6:	cli    
  41a0a7:	cld    
  41a0a8:	out    dx,eax
  41a0a9:	mov    al,ds:0x15f6422c
  41a0ae:	retf   0x9704
  41a0b1:	adc    BYTE PTR [ecx+0x76],bh
  41a0b4:	mov    ebx,esp
  41a0b6:	mov    ebx,0x1098cf4b
  41a0bb:	xchg   ebx,eax
  41a0bc:	mov    ebx,0x100ccb0f
  41a0c1:	fdivr  QWORD PTR [eax-0xe7a1c8d]
  41a0c7:	jl     0x41a0fe
  41a0c9:	mov    dl,0x91
  41a0cb:	int3   
  41a0cc:	hlt    
  41a0cd:	adc    dl,ah
  41a0cf:	in     al,dx
  41a0d0:	mov    al,0x17
  41a0d2:	xadd   ah,dl
  41a0d5:	push   eax
  41a0d6:	into   
  41a0d7:	jp     0x41a10f
  41a0d9:	out    dx,eax
  41a0da:	jmp    0x41a06c
  41a0dc:	or     edx,ebp
  41a0de:	in     eax,0xb0
  41a0e0:	pop    esp
  41a0e1:	cld    
  41a0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e3:	fstp   DWORD PTR [edi]
  41a0e5:	call   0x91c66f8d
  41a0ea:	push   ecx
  41a0eb:	dec    esp
  41a0ec:	or     al,0x1b
  41a0ee:	push   edi
  41a0ef:	jl     0x41a144
  41a0f1:	ja     0x41a0b6
  41a0f3:	mov    esp,0x8754e007
  41a0f8:	mov    ah,0xf
  41a0fa:	inc    ebp
  41a0fb:	inc    esp
  41a0fc:	push   0x52b4e631
  41a101:	push   edx
  41a102:	outs   dx,DWORD PTR ds:[esi]
  41a103:	addr16 or eax,0xf8564dcc
  41a109:	inc    esp
  41a10a:	out    dx,al
  41a10b:	mov    ebp,0x69ca7c69
  41a110:	mov    bh,0x8a
  41a112:	add    DWORD PTR [edi-0x2d8f137d],edi
  41a118:	cld    
  41a119:	scas   al,BYTE PTR es:[edi]
  41a11a:	jb     0x41a12a
  41a11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a11d:	dec    ebp
  41a11e:	inc    edx
  41a11f:	and    eax,DWORD PTR [edi]
  41a121:	loop   0x41a17e
  41a123:	mov    eax,0x592b4e55
  41a128:	xchg   edi,eax
  41a129:	sub    DWORD PTR [ecx-0x5b],ecx
  41a12c:	pop    ds
  41a12d:	lds    esp,FWORD PTR [ecx+0x1f]
  41a130:	sbb    bl,bl
  41a132:	dec    edi
  41a133:	jmp    0x41a0c4
  41a135:	icebp  
  41a136:	push   ebx
  41a137:	faddp  st(7),st
  41a139:	fwait
  41a13a:	mov    ds:0x8734065c,eax
  41a13f:	fild   QWORD PTR [ecx+0x3e666d65]
  41a145:	ds sub al,0x9b
  41a148:	adc    al,BYTE PTR [eax]
  41a14a:	xchg   edi,eax
  41a14b:	cmp    cl,dl
  41a14d:	stc    
  41a14e:	or     cl,0x94
  41a151:	xor    esi,DWORD PTR [eax-0x3f]
  41a154:	fcomp  DWORD PTR [esi+0x5]
  41a157:	jmp    0x6240a83e
  41a15c:	clc    
  41a15d:	mov    eax,0xc5ead025
  41a162:	nop
  41a163:	xchg   edx,eax
  41a164:	pop    ss
  41a165:	and    bh,cl
  41a167:	shr    edx,1
  41a169:	sub    ebp,DWORD PTR [esi+0x33d71e19]
  41a16f:	mov    cl,0xa1
  41a171:	mov    DWORD PTR [ebx+0x69],0x3181c023
  41a178:	sbb    al,0xb7
  41a17a:	mov    ebx,0x43fc836f
  41a17f:	xor    ebp,DWORD PTR [esp+ebx*8+0x57]
  41a183:	dec    ebx
  41a184:	into   
  41a185:	lea    esi,[ebx]
  41a187:	loop   0x41a1cd
  41a189:	ror    BYTE PTR [ebp+0x13cfee0c],1
  41a18f:	xchg   DWORD PTR [esi],ecx
  41a191:	mov    eax,ds:0x89b22556
  41a196:	jae    0x41a1f9
  41a198:	mov    esi,0xa8405bd4
  41a19d:	ins    DWORD PTR es:[edi],dx
  41a19e:	popa   
  41a19f:	inc    esp
  41a1a0:	add    BYTE PTR [edi-0x5f],0x4e
  41a1a4:	retf   0xcf05
  41a1a7:	mov    DWORD PTR [ebx],esp
  41a1a9:	sub    DWORD PTR [ecx+0x2f60e9c3],esi
  41a1af:	mov    al,ds:0xb9ffef33
  41a1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1b5:	jbe    0x41a195
  41a1b7:	mov    ds:0xea514299,eax
  41a1bc:	repnz mov al,0x6e
  41a1bf:	cmp    ch,al
  41a1c1:	loope  0x41a1be
  41a1c3:	mov    cl,0xf4
  41a1c5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1c7:	daa    
  41a1c8:	scas   al,BYTE PTR es:[edi]
  41a1c9:	xchg   edi,eax
  41a1ca:	ret    
  41a1cb:	loopne 0x41a17f
  41a1cd:	cmp    BYTE PTR [ecx],ah
  41a1cf:	sub    BYTE PTR [edx-0x759a276c],dh
  41a1d5:	and    bl,BYTE PTR [edi-0x5a8675cb]
  41a1db:	int3   
  41a1dc:	jo     0x41a1d7
  41a1de:	in     al,dx
  41a1df:	xchg   ebx,eax
  41a1e0:	repz add edx,DWORD PTR [edi+0x3d0d4d6]
  41a1e7:	jno    0x41a1f2
  41a1e9:	or     esi,DWORD PTR [ebx+0x13dc24d8]
  41a1ef:	scas   eax,DWORD PTR es:[edi]
  41a1f0:	(bad)  
  41a1f1:	cs out dx,al
  41a1f3:	iret   
  41a1f4:	lea    ebp,[edx-0x7534c12c]
  41a1fa:	add    al,0x21
  41a1fc:	or     eax,0x89340ea0
  41a201:	fwait
  41a202:	das    
  41a203:	sub    BYTE PTR [edx],al
  41a205:	push   edx
  41a206:	in     eax,0x4
  41a208:	and    edx,ebx
  41a20a:	jmp    0x41a267
  41a20c:	sbb    eax,0x76f8f74c
  41a211:	and    DWORD PTR [eax],edi
  41a213:	xchg   ebx,eax
  41a214:	pop    ds
  41a215:	test   ch,0xfb
  41a218:	mov    al,ds:0xda13e807
  41a21d:	loope  0x41a1cd
  41a21f:	enter  0x8f24,0x50
  41a223:	xchg   ecx,eax
  41a224:	fisubr WORD PTR [edi-0x359f9eda]
  41a22a:	and    al,dl
  41a22c:	repnz les ecx,FWORD PTR [edx]
  41a22f:	ins    BYTE PTR es:[edi],dx
  41a230:	add    DWORD PTR [ebp-0x14],edx
  41a233:	aaa    
  41a234:	and    al,0xd9
  41a236:	push   ebx
  41a237:	out    0x5b,al
  41a239:	add    eax,0xffbd6d46
  41a23e:	imul   BYTE PTR [eax]
  41a240:	ins    BYTE PTR es:[edi],dx
  41a241:	push   ss
  41a242:	loope  0x41a2c3
  41a244:	stc    
  41a245:	loope  0x41a1fa
  41a247:	push   0x616ea25e
  41a24c:	(bad)  
  41a24d:	sub    al,0xbf
  41a24f:	cmp    al,0x5f
  41a251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a252:	ins    DWORD PTR es:[edi],dx
  41a253:	pop    es
  41a254:	cmp    al,0xf4
  41a256:	mov    dh,0x49
  41a258:	add    ecx,esi
  41a25a:	(bad)  
  41a25b:	or     ch,BYTE PTR [ebp-0x80]
  41a25e:	and    ebp,0x4e
  41a261:	ja     0x41a1f1
  41a263:	or     dl,BYTE PTR ds:0xce5ad7da
  41a269:	test   ecx,0x28f9afda
  41a26f:	nop
  41a270:	std    
  41a271:	ret    
  41a272:	xchg   edx,eax
  41a273:	ss stos DWORD PTR es:[edi],eax
  41a275:	cwde   
  41a276:	ds in  al,dx
  41a278:	mov    esi,0x5c08b0f4
  41a27d:	inc    ebx
  41a27e:	add    eax,0xb9d2a409
  41a283:	dec    eax
  41a284:	fcmovu st,st(1)
  41a286:	int    0x35
  41a288:	scas   al,BYTE PTR es:[edi]
  41a289:	ins    BYTE PTR es:[edi],dx
  41a28a:	and    eax,0x7676e5c2
  41a28f:	push   esi
  41a290:	push   ds
  41a291:	cwde   
  41a292:	ret    0x3225
  41a295:	in     al,dx
  41a296:	cdq    
  41a297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a298:	into   
  41a299:	dec    ebp
  41a29a:	pop    ebp
  41a29b:	inc    edi
  41a29c:	fwait
  41a29d:	ss stc 
  41a29f:	push   ebp
  41a2a0:	cdq    
  41a2a1:	adc    esp,DWORD PTR ds:0xe52738c0
  41a2a7:	fcom   QWORD PTR [edx]
  41a2a9:	(bad)
  41a2ac:	pop    ecx
  41a2ad:	js     0x41a2f2
  41a2af:	pushf  
  41a2b0:	xchg   ecx,eax
  41a2b1:	std    
  41a2b2:	mov    bl,0x55
  41a2b4:	jb     0x41a2e8
  41a2b6:	or     eax,0x4655515b
  41a2bb:	or     DWORD PTR [edi+0x69],esi
  41a2be:	dec    esp
  41a2bf:	xor    DWORD PTR [esi*8+0x2fc82124],edx
  41a2c6:	and    esp,DWORD PTR ds:0x48346e9e
  41a2cc:	aaa    
  41a2cd:	hlt    
  41a2ce:	mov    ds:0x14c3349c,eax
  41a2d3:	outs   dx,BYTE PTR ds:[esi]
  41a2d4:	mov    edi,0xd987af4a
  41a2d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2da:	pop    ebp
  41a2db:	aam    0x98
  41a2dd:	test   al,0x6a
  41a2df:	mov    bh,cl
  41a2e1:	mov    ebp,esp
  41a2e3:	test   al,0x68
  41a2e5:	neg    DWORD PTR [edi]
  41a2e7:	cmp    BYTE PTR [ebx],bh
  41a2e9:	adc    DWORD PTR [ebp-0x6f],edi
  41a2ec:	add    DWORD PTR [edx-0x559c581f],eax
  41a2f2:	inc    ebx
  41a2f3:	aaa    
  41a2f4:	adc    bh,BYTE PTR [edi]
  41a2f6:	sub    al,0xb
  41a2f8:	push   ebp
  41a2f9:	push   0x38d28f65
  41a2fe:	in     al,dx
  41a2ff:	imul   eax,DWORD PTR [esi-0x7],0x5d
  41a303:	test   eax,0x7594d6d
  41a308:	test   eax,0x40d455c0
  41a30d:	add    BYTE PTR [eax],ch
  41a30f:	loopne 0x41a2d5
  41a311:	and    DWORD PTR ds:0x102608d9,0x1f
  41a318:	pushf  
  41a319:	mov    edx,0x22216629
  41a31e:	mov    eax,0xaba1174b
  41a323:	adc    edi,DWORD PTR [ecx+esi*8+0x21]
  41a327:	xlat   BYTE PTR ds:[ebx]
  41a328:	mov    ebp,0xd1155bc0
  41a32d:	shl    DWORD PTR [edi+0x24],0x1d
  41a331:	mov    DWORD PTR [edx],ecx
  41a333:	int3   
  41a334:	ins    BYTE PTR es:[edi],dx
  41a335:	in     al,dx
  41a336:	jmp    0x6b57:0xb5f97673
  41a33d:	aam    0x42
  41a33f:	mov    ecx,0xf39c8d42
  41a344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a345:	mov    ah,0x46
  41a347:	int3   
  41a348:	xor    edx,DWORD PTR ds:0x2d8c991e
  41a34e:	addr16 jmp 0x863c1350
  41a354:	nop
  41a355:	lock sub BYTE PTR [ebp+0x61],al
  41a359:	cld    
  41a35a:	ss test eax,0xa4920dd4
  41a360:	rcl    esp,0xdf
  41a363:	mov    bh,0xda
  41a365:	(bad)  
  41a367:	in     eax,dx
  41a368:	lds    esp,FWORD PTR [ecx+ebp*2]
  41a36b:	inc    ebp
  41a36c:	bound  edi,QWORD PTR [esi+0x28]
  41a36f:	int3   
  41a370:	(bad)  
  41a371:	mov    edx,0x3393b9a
  41a376:	repz gs jecxz 0x41a32d
  41a37a:	xchg   edi,eax
  41a37b:	cdq    
  41a37c:	add    eax,0xe5de4158
  41a381:	jne    0x41a315
  41a383:	xor    esi,DWORD PTR [ebp-0x24]
  41a386:	test   BYTE PTR [ebx],dl
  41a388:	push   ss
  41a389:	xchg   ecx,eax
  41a38a:	rcl    DWORD PTR [esi+0x70ac1f35],cl
  41a390:	in     eax,dx
  41a391:	push   esi
  41a392:	jnp    0x41a324
  41a394:	push   edi
  41a395:	push   edx
  41a396:	dec    edx
  41a397:	and    ebp,0xffffffe8
  41a39a:	sub    dh,dl
  41a39c:	jle    0x41a35c
  41a39e:	push   esi
  41a39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3a0:	mov    ebp,0x475b0bda
  41a3a5:	out    dx,eax
  41a3a6:	mov    ecx,0xd03760b5
  41a3ab:	shl    BYTE PTR [eax+0x25],1
  41a3ae:	pop    ds
  41a3af:	arpl   WORD PTR [eax],ax
  41a3b1:	(bad)  
  41a3b2:	pop    ds
  41a3b3:	adc    BYTE PTR [edx+ebx*1+0x64],dl
  41a3b7:	scas   al,BYTE PTR es:[edi]
  41a3b8:	mov    WORD PTR [edi-0x79b0cd2c],es
  41a3be:	das    
  41a3bf:	sub    bh,0x67
  41a3c2:	cmp    BYTE PTR [ecx-0x53],dl
  41a3c5:	ss daa 
  41a3c7:	mov    al,ds:0x73eefbf6
  41a3cc:	mov    ah,0x8
  41a3ce:	loopne 0x41a382
  41a3d0:	xor    edi,DWORD PTR [esi]
  41a3d2:	outs   dx,BYTE PTR ds:[esi]
  41a3d3:	push   ds
  41a3d4:	ds push esi
  41a3d6:	fbstp  TBYTE PTR [ecx+0x51]
  41a3d9:	je     0x41a3e7
  41a3db:	aas    
  41a3dc:	daa    
  41a3dd:	jecxz  0x41a369
  41a3df:	jb     0x41a3bf
  41a3e1:	mov    al,ds:0x217d3495
  41a3e6:	jno    0x41a418
  41a3e8:	xor    DWORD PTR [edx+0x8],esp
  41a3eb:	cdq    
  41a3ec:	pop    es
  41a3ed:	sti    
  41a3ee:	mov    cl,0x7f
  41a3f0:	loop   0x41a438
  41a3f2:	and    eax,edi
  41a3f4:	daa    
  41a3f5:	hlt    
  41a3f6:	and    cl,dl
  41a3f8:	inc    ecx
  41a3f9:	jg     0x41a419
  41a3fb:	xlat   BYTE PTR ds:[ebx]
  41a3fc:	ret    
  41a3fd:	lahf   
  41a3fe:	cmp    dl,bl
  41a400:	les    ebx,FWORD PTR [ecx+0x255aae8f]
  41a406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a407:	ret    0xef45
  41a40a:	das    
  41a40b:	push   es
  41a40c:	es repnz leave 
  41a40f:	dec    ebx
  41a410:	les    esp,FWORD PTR [ecx-0x4a1b4cb1]
  41a416:	lds    ecx,FWORD PTR [edi]
  41a418:	jp     0x41a3ad
  41a41a:	sbb    edi,ebx
  41a41c:	mov    ah,BYTE PTR [esi]
  41a41e:	push   esi
  41a41f:	cmp    BYTE PTR [edx+0x67],ah
  41a422:	add    BYTE PTR [eax-0x6a],ch
  41a425:	nop
  41a426:	repnz dec edx
  41a428:	and    ch,BYTE PTR [ebp-0x7a]
  41a42b:	mov    ecx,0x2442cb98
  41a430:	xchg   ecx,eax
  41a431:	call   DWORD PTR [ecx+0x931bd15]
  41a437:	mov    ds:0xa7711e70,al
  41a43c:	arpl   bx,bx
  41a43e:	leave  
  41a43f:	xchg   dh,ch
  41a441:	push   0x91560e10
  41a446:	add    BYTE PTR [ebx-0x4df86817],dh
  41a44c:	pop    esi
  41a44d:	addr16 dec ebx
  41a44f:	int    0x66
  41a451:	mov    fs,WORD PTR [edi-0x4122c1a7]
  41a457:	adc    DWORD PTR [ecx+0x2eb922a8],eax
  41a45d:	lea    eax,[edx-0x42]
  41a460:	dec    ebx
  41a461:	or     al,0xfb
  41a463:	repnz data16 aam 0xb0
  41a467:	in     al,dx
  41a468:	fstp   st(6)
  41a46a:	or     al,0xe7
  41a46c:	push   edi
  41a46d:	pop    eax
  41a46e:	mov    dl,0x38
  41a470:	add    dh,dh
  41a472:	jae    0x41a437
  41a474:	and    bl,ch
  41a476:	mov    ebp,0xcb22cc9c
  41a47b:	sar    BYTE PTR [edx+0x3ad0cec3],1
  41a481:	cli    
  41a482:	clc    
  41a483:	mov    dh,0xaf
  41a485:	dec    edx
  41a486:	ret    0xfa6b
  41a489:	mov    dl,ch
  41a48b:	and    ah,BYTE PTR [ecx-0x5b]
  41a48e:	xchg   ecx,eax
  41a48f:	push   ss
  41a490:	cmp    eax,0xc135739f
  41a495:	stc    
  41a496:	sti    
  41a497:	dec    esp
  41a498:	std    
  41a499:	retf   
  41a49a:	adc    eax,0x9c80e4b1
  41a49f:	dec    esi
  41a4a0:	and    DWORD PTR [eax+0xa],edi
  41a4a3:	jo     0x41a4d4
  41a4a5:	jnp    0x41a50b
  41a4a7:	ins    DWORD PTR es:[edi],dx
  41a4a8:	push   es
  41a4a9:	fcmovbe st,st(7)
  41a4ab:	jne    0x41a505
  41a4ad:	js     0x41a461
  41a4af:	xor    edi,esp
  41a4b1:	fidivr WORD PTR [ecx-0x1021199e]
  41a4b7:	or     BYTE PTR [edi-0x32],dh
  41a4ba:	pop    ecx
  41a4bb:	mov    dl,0x14
  41a4bd:	jge    0x41a534
  41a4bf:	(bad)  
  41a4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c2:	jp     0x41a4c1
  41a4c4:	lock rol ecx,0x31
  41a4c8:	cmp    eax,0xfc327bb9
  41a4cd:	jge    0x41a49c
  41a4cf:	push   0x9c7768d2
  41a4d4:	xchg   DWORD PTR [ebp+0x4a],esi
  41a4d7:	sub    eax,0x1576eb32
  41a4dc:	rol    DWORD PTR [ecx-0x63],1
  41a4df:	fsqrt  
  41a4e1:	rcl    DWORD PTR gs:[ebp+0x3b],1
  41a4e5:	dec    edx
  41a4e6:	inc    DWORD PTR ds:0x7f080326
  41a4ec:	mov    al,0x33
  41a4ee:	retf   0x6ce0
  41a4f1:	bound  ecx,QWORD PTR [edi]
  41a4f3:	in     eax,dx
  41a4f4:	mov    ds:0xba2e8935,eax
  41a4f9:	push   esi
  41a4fa:	loop   0x41a4d7
  41a4fc:	lods   eax,DWORD PTR ds:[esi]
  41a4fd:	jne    0x41a487
  41a4ff:	scas   al,BYTE PTR es:[edi]
  41a500:	frstor [ecx-0x36b84e48]
  41a506:	retf   0x9f7d
  41a509:	push   ecx
  41a50a:	iret   
  41a50b:	push   es
  41a50c:	xchg   esi,eax
  41a50d:	shl    BYTE PTR [ebx-0x1a],cl
  41a510:	test   ebx,ecx
  41a512:	sti    
  41a513:	push   edx
  41a514:	mov    ah,0xf6
  41a516:	mov    ch,0x97
  41a518:	cmp    eax,0x1e3bc19c
  41a51d:	jo     0x41a562
  41a51f:	dec    ebx
  41a520:	dec    ebp
  41a521:	push   ds
  41a522:	jmp    0x41a54e
  41a524:	dec    ecx
  41a525:	mov    esi,0xc9777725
  41a52a:	arpl   si,bx
  41a52c:	xor    bh,cl
  41a52e:	push   es
  41a52f:	ja     0x41a565
  41a531:	push   es
  41a532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a533:	add    BYTE PTR [edx-0x784c88b1],dl
  41a539:	push   esp
  41a53a:	push   ss
  41a53b:	mov    bh,0x32
  41a53d:	fimul  WORD PTR [esi]
  41a53f:	movups xmm1,XMMWORD PTR [ecx-0x3fbef28c]
  41a546:	int3   
  41a547:	inc    ebp
  41a548:	or     al,0x4b
  41a54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a54b:	mov    al,ds:0xf0bc728e
  41a550:	xchg   BYTE PTR [ebx+eax*4-0x218f73a2],bh
  41a557:	loope  0x41a4fd
  41a559:	sub    DWORD PTR [ebp+0x4],edx
  41a55c:	add    cl,BYTE PTR [eax+0x4a8acf7c]
  41a562:	nop
  41a563:	mov    eax,ds:0x623317d0
  41a568:	push   esi
  41a569:	and    BYTE PTR [eax],al
  41a56b:	add    DWORD PTR [ebx-0x59bb0665],ecx
  41a571:	fwait
  41a572:	xchg   esp,eax
  41a573:	sbb    BYTE PTR [edi+0x48dfa978],0xa2
  41a57a:	lahf   
  41a57b:	inc    esi
  41a57c:	in     eax,dx
  41a57d:	lods   eax,DWORD PTR ds:[esi]
  41a57e:	je     0x41a559
  41a580:	sbb    DWORD PTR [ebx+eax*4-0x3e],0x74c210d3
  41a588:	(bad)  
  41a589:	jecxz  0x41a5a5
  41a58b:	lods   al,BYTE PTR ds:[esi]
  41a58c:	inc    edx
  41a58d:	lds    edx,FWORD PTR [edi-0x347f9f9e]
  41a593:	mov    edi,eax
  41a595:	sub    BYTE PTR [eax+0x73],cl
  41a598:	in     al,dx
  41a599:	ds dec eax
  41a59b:	ins    BYTE PTR es:[edi],dx
  41a59c:	hlt    
  41a59d:	or     eax,ebp
  41a59f:	push   esp
  41a5a0:	or     edi,DWORD PTR [edi-0x4d7b120]
  41a5a6:	xor    al,0x29
  41a5a8:	and    al,0x6a
  41a5aa:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a5ac:	xlat   BYTE PTR ds:[ebx]
  41a5ad:	mov    ah,0xfd
  41a5af:	aad    0x63
  41a5b1:	data16 mov BYTE PTR [eax],dl
  41a5b4:	fcomp  st(5)
  41a5b6:	or     edx,0xffffffe8
  41a5b9:	jne    0x41a5cc
  41a5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5bc:	xchg   esp,eax
  41a5bd:	inc    edx
  41a5be:	in     eax,dx
  41a5bf:	inc    esp
  41a5c0:	inc    edx
  41a5c1:	scas   eax,DWORD PTR es:[edi]
  41a5c2:	aad    0xa8
  41a5c4:	bound  eax,QWORD PTR [ecx+0x25ca62bf]
  41a5ca:	fild   WORD PTR [esi+0x4f003163]
  41a5d0:	push   edi
  41a5d1:	cmc    
  41a5d2:	stc    
  41a5d3:	push   ebx
  41a5d4:	mov    DWORD PTR [ebx+0x7a],edx
  41a5d7:	xor    al,0x14
  41a5d9:	je     0x41a657
  41a5db:	arpl   WORD PTR [ebp+0x388498f],sp
  41a5e1:	push   edi
  41a5e2:	int3   
  41a5e3:	cli    
  41a5e4:	sbb    DWORD PTR [esi+0xbb06b8b],0xffffffc9
  41a5eb:	ja     0x41a5c2
  41a5ed:	jns    0x41a581
  41a5ef:	popa   
  41a5f0:	lock rol DWORD PTR cs:[eax+0x42c71ae0],1
  41a5f8:	jae    0x41a59f
  41a5fa:	xor    al,BYTE PTR [edi+0x23019441]
  41a600:	fs (bad) 
  41a602:	rol    bh,0x34
  41a605:	pop    esp
  41a606:	popf   
  41a607:	adc    eax,0xc6123086
  41a60c:	call   0x7590:0x202f54ec
  41a613:	in     eax,0xb
  41a615:	mov    DWORD PTR [ecx-0x7397f716],esp
  41a61b:	jo     0x41a635
  41a61d:	out    dx,al
  41a61e:	loopne 0x41a651
  41a620:	gs push edi
  41a622:	cdq    
  41a623:	xor    esp,DWORD PTR [ecx+edx*4-0x1c]
  41a627:	push   0xfa86d525
  41a62c:	cwde   
  41a62d:	pop    ss
  41a62e:	aam    0xa2
  41a630:	scas   al,BYTE PTR es:[edi]
  41a631:	ss pop es
  41a633:	in     eax,dx
  41a634:	ret    0x8eac
  41a637:	out    0x14,eax
  41a639:	into   
  41a63a:	sbb    eax,0xaaee2239
  41a63f:	pop    ds
  41a640:	sbb    al,0xda
  41a642:	sub    al,0x13
  41a644:	cli    
  41a645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a646:	add    ebx,DWORD PTR [ebx]
  41a648:	in     al,dx
  41a649:	out    dx,eax
  41a64a:	xchg   edi,eax
  41a64b:	ficomp DWORD PTR fs:[ebp-0x3dd3a25f]
  41a652:	fistp  WORD PTR [esi+0x9]
  41a655:	pop    ecx
  41a657:	jle    0x41a6d8
  41a659:	push   edx
  41a65a:	outs   dx,BYTE PTR ds:[esi]
  41a65b:	mov    DWORD PTR [ecx],ebx
  41a65d:	call   0xd7b5:0x1f6eb08
  41a664:	push   0xffffffc6
  41a666:	mov    eax,ds:0x26f3824
  41a66b:	adc    DWORD PTR [ebp-0x5b6d7dae],edx
  41a671:	push   ebx
  41a672:	in     al,dx
  41a673:	mov    eax,ds:0x2633c5c9
  41a678:	xchg   esi,eax
  41a679:	test   al,al
  41a67b:	inc    esp
  41a67c:	fnsave [ebp-0x66dbef2c]
  41a682:	and    BYTE PTR [ebx+0x65],0xa6
  41a686:	lea    ecx,ds:0x72da9a62
  41a68c:	push   ebp
  41a68d:	mov    ebp,0x727009f4
  41a692:	popf   
  41a693:	push   ds
  41a694:	jle    0x41a627
  41a696:	lods   al,BYTE PTR ds:[esi]
  41a697:	and    al,bl
  41a699:	leave  
  41a69a:	sub    dl,BYTE PTR [esi-0x6989a584]
  41a6a0:	push   cs
  41a6a1:	lea    edx,[edi+0x54a13d29]
  41a6a7:	sub    ecx,DWORD PTR [eax+edx*8-0x54]
  41a6ab:	adc    DWORD PTR [edx+0x69927d32],ebp
  41a6b1:	out    dx,al
  41a6b2:	jmp    0x41a694
  41a6b4:	imul   ebp,DWORD PTR [ebx],0x45
  41a6b7:	pop    ds
  41a6b8:	fld    QWORD PTR [esi+eiz*1]
  41a6bb:	cmp    al,0x58
  41a6bd:	stos   BYTE PTR es:[edi],al
  41a6be:	popa   
  41a6bf:	mov    ah,0xa6
  41a6c1:	sub    al,0xaa
  41a6c3:	pop    ss
  41a6c4:	mov    eax,ds:0x3001b8cd
  41a6c9:	xlat   BYTE PTR ds:[ebx]
  41a6ca:	push   ss
  41a6cb:	add    DWORD PTR [edx+0x50],edi
  41a6ce:	xchg   BYTE PTR [ebp+ebx*1-0x43],cl
  41a6d2:	(bad)  
  41a6d4:	pop    es
  41a6d5:	outs   dx,DWORD PTR ds:[esi]
  41a6d6:	test   eax,0x965d283b
  41a6db:	mov    eax,0x699b979c
  41a6e0:	scas   eax,DWORD PTR es:[edi]
  41a6e1:	xchg   DWORD PTR [esi],esp
  41a6e3:	loope  0x41a6b7
  41a6e5:	mov    ecx,DWORD PTR [ebx-0x5de2a76e]
  41a6eb:	rcl    eax,cl
  41a6ed:	js     0x41a723
  41a6ef:	sbb    BYTE PTR [edx],bh
  41a6f1:	loope  0x41a715
  41a6f3:	xor    eax,0x8dba5f26
  41a6f8:	ss sub eax,0xb684f591
  41a6fe:	mov    esi,DWORD PTR [esp+ecx*8-0x32d79188]
  41a705:	and    edi,edi
  41a707:	push   ebx
  41a708:	mov    ebx,0xf579c632
  41a70d:	xchg   esp,eax
  41a70e:	add    al,0x2e
  41a710:	mov    al,ds:0xe5dda6d2
  41a715:	test   DWORD PTR [ebx],edx
  41a717:	dec    ecx
  41a718:	aaa    
  41a719:	cmp    DWORD PTR [eax+0x13],eax
  41a71c:	enter  0x4e6f,0x16
  41a720:	imul   edi,DWORD PTR [edx-0x3e],0xffffffdb
  41a724:	les    esi,FWORD PTR [edx+0x6cba1dcd]
  41a72a:	or     edx,DWORD PTR [edx+0x23e375f1]
  41a730:	xor    DWORD PTR [eax+0x275c7a31],edi
  41a736:	mov    ch,0x94
  41a738:	xchg   ebp,eax
  41a739:	mov    WORD PTR [ecx],?
  41a73b:	jecxz  0x41a77a
  41a73d:	hlt    
  41a73e:	call   0x18ba:0x9515ab90
  41a745:	enter  0x6d95,0x4d
  41a749:	xor    eax,0xc205f605
  41a74e:	xor    ebp,DWORD PTR [edi-0x63107e32]
  41a754:	jecxz  0x41a6f2
  41a756:	fwait
  41a757:	xchg   edi,eax
  41a758:	cwde   
  41a759:	enter  0xf705,0xb4
  41a75d:	push   ds
  41a75e:	push   ebx
  41a75f:	cdq    
  41a760:	add    al,0x5a
  41a762:	cmp    cl,BYTE PTR [ecx]
  41a764:	stos   BYTE PTR es:[edi],al
  41a765:	test   DWORD PTR [edx-0x1b],ebx
  41a768:	inc    ecx
  41a769:	xor    al,0x48
  41a76b:	inc    ebx
  41a76c:	jmp    0xdcee:0x8dbd5673
  41a773:	std    
  41a774:	add    eax,0x19748a47
  41a779:	xor    ebx,ebp
  41a77b:	cmc    
  41a77c:	xor    DWORD PTR [ecx+0x1bdfe8b5],esi
  41a782:	rcr    DWORD PTR [esi-0x9],cl
  41a785:	popa   
  41a786:	(bad)  
  41a787:	cdq    
  41a788:	or     eax,0xd450f4dd
  41a78d:	adc    al,0xc1
  41a78f:	pop    edi
  41a790:	outs   dx,DWORD PTR ds:[esi]
  41a791:	mov    edx,0x19cdf05b
  41a796:	and    DWORD PTR [ebx-0x367d807e],esi
  41a79c:	dec    esp
  41a79d:	jnp    0x41a814
  41a79f:	adc    ebx,DWORD PTR [edx+0x21e65d55]
  41a7a5:	out    dx,eax
  41a7a6:	push   esi
  41a7a7:	add    bl,al
  41a7a9:	or     DWORD PTR [ecx],0x1a
  41a7ac:	es jmp 0x9432:0x2968e381
  41a7b4:	xchg   ebp,eax
  41a7b5:	nop
  41a7b6:	or     cl,cl
  41a7b8:	ret    0x169b
  41a7bb:	cmp    BYTE PTR [edi-0x799f4053],al
  41a7c1:	retf   
  41a7c2:	(bad)  
  41a7c3:	mov    dl,0x8e
  41a7c5:	fprem1 
  41a7c7:	mov    esp,0x76931b62
  41a7cc:	push   0x5efeddee
  41a7d1:	enter  0x203e,0x7b
  41a7d5:	sbb    al,0xe8
  41a7d7:	call   0x23751f8f
  41a7dc:	mov    ch,0x18
  41a7de:	mov    ah,0xbb
  41a7e0:	iretw  
  41a7e2:	out    0xba,al
  41a7e4:	mov    ds,WORD PTR [edi+edx*1-0x5a]
  41a7e8:	hlt    
  41a7e9:	jge    0x41a781
  41a7eb:	pusha  
  41a7ec:	aad    0x26
  41a7ee:	jmp    0x7a76:0x5bfbd4d1
  41a7f5:	sbb    edi,DWORD PTR [ecx]
  41a7f7:	jge    0x41a853
  41a7f9:	outs   dx,BYTE PTR ds:[esi]
  41a7fa:	scas   al,BYTE PTR es:[edi]
  41a7fb:	loopne 0x41a78b
  41a7fd:	and    ebp,DWORD PTR [ecx+0x207336a6]
  41a803:	mov    bl,0x41
  41a805:	jle    0x41a881
  41a807:	xchg   BYTE PTR [esi+0x4bd2331b],bl
  41a80d:	dec    esp
  41a80e:	arpl   WORD PTR [ecx+0x23e8515c],cx
  41a814:	pop    edx
  41a815:	into   
  41a816:	xchg   ebx,eax
  41a817:	xor    DWORD PTR [ebx+ecx*4-0x3b18c74d],ecx
  41a81e:	das    
  41a81f:	push   ds
  41a820:	xor    eax,esi
  41a822:	xchg   edi,eax
  41a823:	mov    edi,0x77d6a35f
  41a828:	pop    ebx
  41a829:	inc    esp
  41a82a:	in     al,0xdf
  41a82c:	in     al,dx
  41a82d:	jmp    0x41a8ab
  41a82f:	mov    ecx,0x3324054a
  41a834:	sti    
  41a835:	loope  0x41a800
  41a837:	sub    DWORD PTR [ebx+eiz*2-0x5b17d33],eax
  41a83e:	dec    ecx
  41a83f:	test   DWORD PTR [edi],0x1da93e06
  41a845:	inc    esi
  41a846:	sbb    al,0x28
  41a848:	pop    esp
  41a849:	sbb    eax,0xcec392f3
  41a84e:	mov    eax,0x950ff066
  41a853:	xchg   esp,eax
  41a854:	jecxz  0x41a898
  41a856:	out    0x33,al
  41a858:	in     eax,dx
  41a859:	jl     0x41a8d2
  41a85b:	mov    ebp,0xe375858a
  41a860:	mov    bh,0x9f
  41a862:	xor    ch,cl
  41a864:	add    bh,BYTE PTR [eax-0x3be66ccf]
  41a86a:	repnz inc ebx
  41a86c:	cmp    ecx,esp
  41a86e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86f:	fisttp QWORD PTR [ebp-0x5e1c61f8]
  41a875:	pop    edi
  41a876:	in     al,0x30
  41a878:	push   ds
  41a879:	ret    0xdc88
  41a87c:	fmul   st,st(3)
  41a87e:	fwait
  41a87f:	cdq    
  41a880:	inc    ecx
  41a881:	pop    esp
  41a883:	daa    
  41a884:	out    0x60,al
  41a886:	aaa    
  41a887:	cmp    eax,0x47c1743
  41a88c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88d:	xlat   BYTE PTR ds:[ebx]
  41a88e:	and    ch,cl
  41a890:	mov    ch,BYTE PTR [edi-0x5ef3bc7c]
  41a896:	adc    eax,0xf50058ce
  41a89b:	xchg   esp,eax
  41a89c:	fild   DWORD PTR [edi+0x4c]
  41a89f:	fs repnz add eax,0xdef93d29
  41a8a6:	jne    0x41a87c
  41a8a8:	out    0xb7,eax
  41a8aa:	pop    ebp
  41a8ab:	mov    eax,ds:0x44a8d9ec
  41a8b0:	hlt    
  41a8b1:	sub    al,0x38
  41a8b3:	mov    dl,0x41
  41a8b5:	aas    
  41a8b6:	cmp    DWORD PTR [ebp-0x76],0xffffffed
  41a8ba:	pop    ds
  41a8bb:	sbb    eax,0x6457e1c8
  41a8c0:	lock jno 0x41a8df
  41a8c3:	imul   ecx,DWORD PTR [ecx+edx*1],0x1c158a12
  41a8ca:	mov    edx,0x30ce05a9
  41a8cf:	mov    ebx,DWORD PTR [edx+edx*8-0x1f37d186]
  41a8d6:	lahf   
  41a8d7:	(bad)  
  41a8d8:	mov    bh,0xee
  41a8da:	imul   ebp,DWORD PTR [edi],0xffffffc1
  41a8dd:	ret    0x7704
  41a8e0:	stos   BYTE PTR es:[edi],al
  41a8e1:	ss jo  0x41a92c
  41a8e4:	fsub   DWORD PTR [ebx+0x3a]
  41a8e7:	add    eax,DWORD PTR [ebx]
  41a8e9:	dec    DWORD PTR [ebp-0x6f]
  41a8ec:	pop    edx
  41a8ed:	sub    al,0xd8
  41a8ef:	js     0x41a962
  41a8f1:	cmp    ah,BYTE PTR [eax+ebx*1+0x556a37ba]
  41a8f8:	mov    esp,0x555de24f
  41a8fd:	in     eax,dx
  41a8fe:	mov    bh,0xaf
  41a900:	jo     0x41a93c
  41a902:	lock faddp st(3),st
  41a905:	ret    
  41a906:	sbb    BYTE PTR [bp+si-0x21a0],0xe5
  41a90c:	sub    ebx,DWORD PTR [ebx]
  41a90e:	mov    bh,0x85
  41a910:	mov    esi,0x21893a9
  41a915:	or     DWORD PTR [esi+0x811ad81],0x371de7d3
  41a91f:	push   0x11ed5c71
  41a924:	pop    ebx
  41a925:	sub    al,0x25
  41a927:	pushf  
  41a928:	std    
  41a929:	(bad)  
  41a92b:	jge    0x41a8f2
  41a92d:	dec    edx
  41a92e:	mov    bh,0x37
  41a930:	into   
  41a931:	cmp    cl,cl
  41a933:	ror    bl,cl
  41a935:	inc    ah
  41a937:	jb     0x41a923
  41a939:	stc    
  41a93a:	out    0x35,eax
  41a93c:	push   eax
  41a93d:	inc    eax
  41a93e:	adc    BYTE PTR [edi-0x5e079f18],cl
  41a944:	adc    BYTE PTR [ecx-0x4dd86ae3],0x86
  41a94b:	in     eax,dx
  41a94c:	push   eax
  41a94d:	retf   
  41a94e:	(bad)  
  41a94f:	rcl    DWORD PTR [esi-0x1416e76e],cl
  41a955:	push   edx
  41a956:	lods   al,BYTE PTR ds:[esi]
  41a957:	std    
  41a958:	stc    
  41a959:	mov    ah,0x67
  41a95b:	test   ch,dl
  41a95d:	mov    ds:0x88ed731e,al
  41a962:	test   al,0x97
  41a965:	rcl    ebp,1
  41a967:	inc    ecx
  41a968:	adc    eax,0x73791ee1
  41a96d:	aaa    
  41a96e:	mov    eax,0x7681643d
  41a973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a974:	mov    bh,0x34
  41a976:	dec    esp
  41a977:	adc    ch,BYTE PTR [esi+0x4f]
  41a97a:	pop    eax
  41a97b:	cmp    BYTE PTR [eax-0x30ddb89c],al
  41a981:	xor    bl,BYTE PTR [ebx+0x6e12941f]
  41a987:	inc    eax
  41a988:	fwait
  41a989:	sub    al,BYTE PTR [ecx-0x528f3626]
  41a98f:	inc    edi
  41a990:	shr    BYTE PTR ss:[ebx-0x30],1
  41a994:	push   es
  41a995:	mov    ch,0x4b
  41a997:	sub    DWORD PTR [ecx+0x66],edx
  41a99a:	ficomp DWORD PTR [edx-0x5c1d0b16]
  41a9a0:	or     dh,ah
  41a9a2:	xchg   ecx,eax
  41a9a3:	rcr    ebx,1
  41a9a5:	and    DWORD PTR [esp+ebx*8+0x15],edi
  41a9a9:	mov    ?,WORD PTR [edx-0x79]
  41a9ac:	add    al,0x56
  41a9ae:	mov    DWORD PTR [esi+0x5c92a2bf],0x3c67b06f
  41a9b8:	mov    WORD PTR [ebx+eax*2],?
  41a9bb:	aad    0xef
  41a9bd:	shl    DWORD PTR [esi-0x50],0xbc
  41a9c1:	nop
  41a9c2:	cdq    
  41a9c3:	push   ebx
  41a9c4:	aam    0x28
  41a9c6:	ret    
  41a9c7:	mov    edx,0x95fc84ba
  41a9cc:	adc    eax,0xf8e6b00e
  41a9d1:	sbb    BYTE PTR [esi],dl
  41a9d3:	pop    eax
  41a9d4:	jl     0x41a957
  41a9d6:	js     0x41aa41
  41a9d8:	sbb    ebx,0xb0166f96
  41a9de:	shr    DWORD PTR [ebp+0x31],0x32
  41a9e2:	test   al,0x37
  41a9e4:	fild   DWORD PTR [esp+eax*2+0x20]
  41a9e8:	jo     0x41a9f5
  41a9ea:	cmp    DWORD PTR [ecx-0x27],ecx
  41a9ed:	cmp    DWORD PTR [edi+0x3c69c439],esp
  41a9f3:	add    eax,0x1acb5372
  41a9f8:	push   es
  41a9f9:	call   DWORD PTR [ecx+0x7a]
  41a9fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9fd:	rcr    ecx,cl
  41a9ff:	and    al,0x15
  41aa01:	(bad)  
  41aa02:	push   0x7f
  41aa04:	xchg   edi,eax
  41aa05:	jb     0x41a9fb
  41aa07:	xchg   ebx,eax
  41aa08:	mov    ?,WORD PTR [esp+ebp*1-0x13bcb9dc]
  41aa0f:	orps   xmm6,xmm4
  41aa12:	dec    eax
  41aa13:	mov    DWORD PTR [edx-0x23],0x24b40767
  41aa1a:	retf   0x69c7
  41aa1d:	cli    
  41aa1e:	jbe    0x41a9aa
  41aa20:	test   dl,bl
  41aa22:	call   0xf76d:0xc19de699
  41aa29:	mov    al,0x3
  41aa2b:	sub    DWORD PTR ds:0x549a259d,edx
  41aa31:	mov    edi,0x6523e31c
  41aa36:	dec    eax
  41aa37:	(bad)  
  41aa38:	out    0xee,eax
  41aa3a:	lods   al,BYTE PTR ds:[si]
  41aa3c:	stos   DWORD PTR es:[edi],eax
  41aa3d:	cmp    ecx,0xe7b26465
  41aa43:	leave  
  41aa44:	xchg   ebx,eax
  41aa45:	test   BYTE PTR fs:[esi+0x7d],0x8b
  41aa4a:	(bad)  
  41aa4b:	sbb    ebp,edx
  41aa4d:	mov    eax,0xb1c104d7
  41aa52:	add    al,0x16
  41aa54:	mov    ah,0x2e
  41aa56:	xlat   BYTE PTR ds:[ebx]
  41aa57:	and    eax,0x2509936b
  41aa5c:	jmp    0xdd75:0x6fe15
  41aa63:	mov    ebp,0x3c16755c
  41aa68:	jmp    0x6a50:0x83b0d718
  41aa6f:	retw   0x4187
  41aa73:	xor    eax,0x8d0c0e3c
  41aa78:	bound  esp,QWORD PTR [esi-0x63a2484]
  41aa7e:	(bad)  
  41aa7f:	push   edi
  41aa80:	mov    esi,0x313540d0
  41aa85:	push   edx
  41aa86:	pop    esp
  41aa87:	lds    esi,FWORD PTR [edi-0x41]
  41aa8a:	jno    0x41aae6
  41aa8c:	cmp    al,dh
  41aa8e:	aad    0x86
  41aa90:	mov    bl,bl
  41aa92:	stc    
  41aa93:	pop    esi
  41aa94:	xchg   ebp,eax
  41aa95:	fs pop ebx
  41aa97:	add    BYTE PTR [edi+edi*1-0x2],ch
  41aa9b:	jge    0x41aab7
  41aa9d:	mov    fs,WORD PTR [edi-0x614a757a]
  41aaa3:	and    ebp,DWORD PTR [ecx+0x1b58029a]
  41aaa9:	test   eax,0x6a406bd
  41aaae:	shl    al,1
  41aab0:	xor    al,BYTE PTR [ebx+edi*4-0x6ca8dc74]
  41aab7:	mov    bl,0x62
  41aab9:	(bad)  
  41aabb:	fwait
  41aabc:	(bad)  
  41aabd:	or     ebp,ebp
  41aabf:	aad    0x9c
  41aac1:	ja     0x41ab05
  41aac3:	or     ah,dl
  41aac5:	push   eax
  41aac6:	sub    bl,BYTE PTR [ecx+0x53863fe3]
  41aacc:	(bad)  
  41aacd:	aad    0x2
  41aacf:	fist   WORD PTR ds:0xf453d415
  41aad5:	cmp    BYTE PTR [ebx],0x36
  41aad8:	aaa    
  41aad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aada:	xchg   DWORD PTR [ecx],edx
  41aadc:	lahf   
  41aadd:	lock add edi,ebp
  41aae0:	(bad)  
  41aae2:	sub    al,0x69
  41aae4:	push   ebx
  41aae5:	inc    edx
  41aae6:	jle    0x41aabf
  41aae8:	cdq    
  41aae9:	adc    al,0x9c
  41aaeb:	or     eax,0x8a49c468
  41aaf0:	adc    al,al
  41aaf2:	iret   
  41aaf3:	fs inc edi
  41aaf5:	ds jnp 0x41aaa7
  41aaf8:	inc    edx
  41aaf9:	lods   al,BYTE PTR ds:[esi]
  41aafa:	pop    esp
  41aafb:	ja     0x41aaed
  41aafd:	aaa    
  41aafe:	call   0x652687a4
  41ab03:	call   0xf5515082
  41ab08:	js     0x41aaca
  41ab0a:	ins    BYTE PTR es:[edi],dx
  41ab0b:	mov    al,0xc8
  41ab0d:	aas    
  41ab0e:	outs   dx,BYTE PTR ds:[esi]
  41ab0f:	mov    bl,0x3b
  41ab11:	push   ds
  41ab12:	stos   DWORD PTR es:[edi],eax
  41ab13:	sbb    eax,0xeaee07f7
  41ab18:	inc    ebp
  41ab19:	sahf   
  41ab1a:	sub    DWORD PTR [edi],eax
  41ab1c:	in     eax,dx
  41ab1d:	or     al,BYTE PTR [ebx+0x63]
  41ab20:	mov    esi,0xeebd32a8
  41ab25:	pop    ebp
  41ab26:	rcl    DWORD PTR [esi+0x1c],1
  41ab29:	and    eax,0x45f88449
  41ab2e:	pcmpgtd mm7,QWORD PTR [edi]
  41ab31:	pop    edi
  41ab32:	mov    al,ds:0xc610ffbb
  41ab37:	test   BYTE PTR [ebp-0x64],al
  41ab3a:	jnp    0x41aad8
  41ab3c:	mov    eax,ds:0x88f30e07
  41ab41:	enter  0x9e57,0xbb
  41ab45:	xor    esi,DWORD PTR [ebp-0x63cffdbe]
  41ab4b:	or     dl,BYTE PTR [esi-0x254cf56d]
  41ab51:	nop
  41ab52:	jne    0x41abcb
  41ab54:	xor    al,0x6c
  41ab56:	cmp    ebp,DWORD PTR [esi+0x5dafea3b]
  41ab5c:	(bad)  
  41ab5d:	icebp  
  41ab5e:	lock inc edi
  41ab60:	jne    0x41ab3c
  41ab62:	fstp   DWORD PTR [esi]
  41ab64:	pop    ecx
  41ab65:	mov    cl,0x3c
  41ab67:	bound  edx,QWORD PTR ds:0x29ddd1dc
  41ab6d:	stc    
  41ab6e:	mov    es,ecx
  41ab70:	pop    esp
  41ab71:	mov    ebp,0x2d130ecb
  41ab76:	adc    dl,dl
  41ab78:	push   esp
  41ab79:	mov    bl,0x37
  41ab7b:	leave  
  41ab7c:	(bad)  
  41ab7d:	jge    0x41ab16
  41ab7f:	add    al,0xe
  41ab81:	xor    DWORD PTR [ebp+0x6bd0d865],esp
  41ab87:	dec    ecx
  41ab88:	es pop edi
  41ab8a:	lea    edx,[esp+edx*8+0x2f]
  41ab8e:	cmp    al,0x3a
  41ab90:	jecxz  0x41abf4
  41ab92:	jmp    0x8fbc:0x94d27d49
  41ab99:	xlat   BYTE PTR ds:[ebx]
  41ab9a:	out    0xa,eax
  41ab9c:	push   ecx
  41ab9d:	cmc    
  41ab9e:	jecxz  0x41abbc
  41aba0:	mov    bl,0xe6
  41aba2:	push   esi
  41aba3:	mov    ch,0x62
  41aba5:	aaa    
  41aba6:	push   eax
  41aba7:	loop   0x41ac00
  41aba9:	ret    
  41abaa:	dec    esp
  41abab:	jl     0x41ac02
  41abad:	out    0x2,al
  41abaf:	inc    ebx
  41abb0:	ja     0x41ab83
  41abb2:	push   ecx
  41abb3:	mov    DWORD PTR [ecx-0x1d5a28ad],0xbf6b7542
  41abbd:	mov    esi,0xca0a0e3f
  41abc2:	stc    
  41abc3:	xor    al,0xee
  41abc5:	mov    ch,0xdf
  41abc7:	sub    bh,al
  41abc9:	or     BYTE PTR [edx],ch
  41abcb:	dec    ebx
  41abcc:	cwde   
  41abcd:	mov    dh,0x5c
  41abcf:	(bad)  
  41abd0:	xor    dh,BYTE PTR [ebp-0x16]
  41abd3:	jbe    0x41abfb
  41abd5:	xlat   BYTE PTR ds:[ebx]
  41abd6:	in     eax,0xb0
  41abd8:	xlat   BYTE PTR ds:[ebx]
  41abd9:	mov    dl,0xc7
  41abdb:	sti    
  41abdc:	xchg   ebx,eax
  41abdd:	mov    eax,ds:0x2e7dfcb7
  41abe2:	xadd   ebp,ecx
  41abe5:	xor    BYTE PTR [ecx+0x79],0x30
  41abe9:	aas    
  41abea:	adc    DWORD PTR [ecx-0x79],edi
  41abed:	mov    ch,0xc9
  41abef:	and    al,cl
  41abf1:	hlt    
  41abf2:	sbb    al,0xd7
  41abf4:	pop    ecx
  41abf5:	adc    ecx,ecx
  41abf7:	(bad)
  41abfa:	cmp    ecx,DWORD PTR [edi+0x4ffd1935]
  41ac00:	sahf   
  41ac01:	in     al,0x52
  41ac03:	cmp    eax,ebx
  41ac05:	jle    0x41ac44
  41ac07:	mov    bl,0x84
  41ac09:	pop    edi
  41ac0a:	mov    eax,0x215ad558
  41ac0f:	mov    ebx,0x938cb0b
  41ac14:	mov    ch,0x3f
  41ac16:	retf   
  41ac17:	pop    ebp
  41ac18:	fcomp  QWORD PTR [eax-0x55af82e4]
  41ac1e:	xchg   ecx,eax
  41ac1f:	pop    es
  41ac20:	out    dx,eax
  41ac21:	jmp    0x41abc2
  41ac23:	xlat   BYTE PTR ds:[ebx]
  41ac24:	sub    DWORD PTR [edi+ebp*1+0x8],esp
  41ac28:	adc    eax,0x38ba888f
  41ac2d:	xchg   DWORD PTR [edx],edi
  41ac2f:	sbb    eax,0x8a03b001
  41ac34:	mov    dh,0xa4
  41ac36:	mov    ebp,DWORD PTR [ecx+esi*8-0x64]
  41ac3a:	xchg   esi,eax
  41ac3b:	or     ebp,DWORD PTR [ebx]
  41ac3d:	push   0x3c
  41ac3f:	inc    esi
  41ac40:	(bad)  
  41ac41:	call   0xeeca0ba0
  41ac46:	lahf   
  41ac47:	loop   0x41ac2e
  41ac49:	jno    0x41acad
  41ac4b:	xor    dh,BYTE PTR [edi]
  41ac4d:	xor    DWORD PTR [esi+0x39921382],0x69
  41ac54:	shl    DWORD PTR [esi],1
  41ac56:	push   cs
  41ac57:	jmp    0x41acb3
  41ac59:	data16 mov ch,cl
  41ac5c:	add    BYTE PTR [eax],ch
  41ac5e:	push   esp
  41ac5f:	mov    esp,0x30c466a5
  41ac64:	and    BYTE PTR [esi+0x407632de],bh
  41ac6a:	add    edi,edx
  41ac6c:	(bad)  
  41ac6d:	clc    
  41ac6e:	outs   dx,BYTE PTR ds:[esi]
  41ac6f:	jnp    0x41aca2
  41ac71:	fild   DWORD PTR [ebx-0x41c8c791]
  41ac77:	ins    DWORD PTR es:[edi],dx
  41ac78:	cmp    BYTE PTR [ecx+0x50],ch
  41ac7b:	cmp    eax,0x56f9ddb6
  41ac80:	xor    eax,DWORD PTR [edx]
  41ac82:	pushf  
  41ac83:	cwde   
  41ac84:	push   eax
  41ac85:	dec    esp
  41ac86:	mov    eax,ds:0x7178c553
  41ac8b:	push   esi
  41ac8c:	inc    eax
  41ac8d:	jns    0x41ac9d
  41ac8f:	ret    0x796c
  41ac92:	sahf   
  41ac93:	icebp  
  41ac94:	rcl    BYTE PTR [ebp+0x7a],1
  41ac97:	add    eax,0x457e9954
  41ac9c:	cld    
  41ac9d:	scas   eax,DWORD PTR es:[edi]
  41ac9e:	jl     0x41acff
  41aca0:	aas    
  41aca1:	cs aas 
  41aca3:	dec    ebp
  41aca4:	ins    DWORD PTR es:[edi],dx
  41aca5:	adc    esi,ecx
  41aca7:	xchg   edi,eax
  41aca8:	mov    esi,0x5bc7ee8c
  41acad:	ret    0x57f2
  41acb0:	sbb    DWORD PTR [edi+ecx*4],eax
  41acb3:	imul   BYTE PTR [edx+0x4857afa]
  41acb9:	test   BYTE PTR [eax+ecx*2+0x16],0x2
  41acbe:	push   ss
  41acbf:	adc    bl,0x95
  41acc2:	add    DWORD PTR [ebx-0x624b32f],ebp
  41acc8:	sar    DWORD PTR [eax-0x55],0x54
  41accc:	jecxz  0x41ac5d
  41acce:	adc    DWORD PTR [eax],ebx
  41acd0:	mov    ds:0x1bd988bc,al
  41acd5:	in     eax,dx
  41acd6:	(bad)  
  41acd8:	mov    BYTE PTR [ebp+0x718559a],ch
  41acde:	pop    es
  41acdf:	inc    edx
  41ace0:	jle    0x41acd0
  41ace2:	out    dx,al
  41ace3:	sub    cl,BYTE PTR [esi-0x2]
  41ace6:	push   esi
  41ace7:	cmp    edi,edi
  41ace9:	xor    al,0xf6
  41aceb:	pop    ecx
  41acec:	jo     0x41ace1
  41acee:	jl     0x41ad51
  41acf0:	stos   BYTE PTR es:[edi],al
  41acf1:	(bad)  
  41acf2:	aas    
  41acf3:	fsub   DWORD PTR [ecx+0x17]
  41acf6:	add    ch,ah
  41acf8:	push   0xa38a1346
  41acfd:	push   ss
  41acfe:	xchg   edx,eax
  41acff:	mov    ebp,DWORD PTR [ebx+0xf]
  41ad02:	fistp  QWORD PTR [edx+0x13]
  41ad05:	adc    al,0xb8
  41ad07:	ss je  0x41ad82
  41ad0a:	and    al,0x8a
  41ad0c:	and    DWORD PTR [ecx],ebp
  41ad0e:	mov    ds:0xd2b23516,eax
  41ad13:	iret   
  41ad14:	mov    dl,0x73
  41ad16:	cmp    al,bh
  41ad18:	fdiv   st(4),st
  41ad1a:	lods   eax,DWORD PTR ds:[esi]
  41ad1b:	push   ss
  41ad1c:	pop    ds
  41ad1d:	iret   
  41ad1e:	push   edi
  41ad1f:	inc    ebp
  41ad20:	push   ebx
  41ad21:	mov    eax,0xd16ce1fa
  41ad26:	inc    eax
  41ad27:	add    al,0xab
  41ad29:	iret   
  41ad2a:	or     BYTE PTR [edx],bl
  41ad2c:	jge    0x41acaf
  41ad2e:	icebp  
  41ad2f:	mov    esi,0xa31605ae
  41ad34:	into   
  41ad35:	xchg   esi,eax
  41ad36:	cdq    
  41ad37:	adc    dh,BYTE PTR [edx-0x5f0fd5d1]
  41ad3d:	test   BYTE PTR [edi],dl
  41ad3f:	or     BYTE PTR [ecx],bl
  41ad41:	ret    
  41ad42:	and    DWORD PTR [ecx-0x4],ecx
  41ad45:	pop    ecx
  41ad46:	inc    edx
  41ad47:	aaa    
  41ad48:	xor    eax,0xe37804aa
  41ad4d:	add    BYTE PTR [eax+0x627bce28],al
  41ad53:	dec    ecx
  41ad54:	push   ss
  41ad55:	stc    
  41ad56:	int    0xdc
  41ad58:	or     BYTE PTR [ecx+esi*4-0x4fc8d0c8],cl
  41ad5f:	cdq    
  41ad60:	in     eax,0xe0
  41ad62:	fwait
  41ad63:	cli    
  41ad64:	retf   
  41ad65:	add    edi,DWORD PTR [ecx+0x2532aa5]
  41ad6b:	cmp    DWORD PTR [ebx-0x7a],ecx
  41ad6e:	mov    dh,0x2b
  41ad70:	dec    esi
  41ad71:	out    0x23,eax
  41ad73:	sbb    DWORD PTR [esi],eax
  41ad75:	popa   
  41ad76:	sbb    eax,0x98476f50
  41ad7b:	leave  
  41ad7c:	in     al,dx
  41ad7d:	mov    ecx,0xb88533a4
  41ad82:	jmp    0xe0a41549
  41ad87:	push   es
  41ad88:	mov    WORD PTR [ecx+0x46dd781],ds
  41ad8e:	cli    
  41ad8f:	js     0x41ae0c
  41ad91:	(bad)  
  41ad92:	out    dx,al
  41ad93:	scas   eax,DWORD PTR es:[edi]
  41ad94:	sbb    ecx,DWORD PTR [esi+0x4e518eca]
  41ad9a:	not    DWORD PTR [esi-0x63bb9e4f]
  41ada0:	fwait
  41ada1:	imul   edx,edx,0x48343603
  41ada7:	inc    eax
  41ada8:	addr16 inc esi
  41adaa:	imul   ecx,DWORD PTR [edi],0x43
  41adad:	add    bh,BYTE PTR [eax-0x67a87f4a]
  41adb3:	sbb    eax,0xcbbec80e
  41adb8:	add    BYTE PTR [ebp-0x6108d74b],al
  41adbe:	fcom   DWORD PTR [eax+eiz*2]
  41adc1:	inc    esp
  41adc2:	pop    edi
  41adc3:	mov    ds:0x53fb548f,al
  41adc8:	int    0xda
  41adca:	cs (bad) 
  41adcc:	out    0xd6,eax
  41adce:	jp     0x41ae46
  41add0:	int3   
  41add1:	retf   0x29f0
  41add4:	mov    cl,BYTE PTR [esi-0x73]
  41add7:	push   ss
  41add8:	mov    edi,0x9435013f
  41addd:	out    0x69,al
  41addf:	fwait
  41ade0:	push   ebp
  41ade1:	jns    0x41ae0e
  41ade3:	mov    eax,0xe09227fa
  41ade8:	fsub   QWORD PTR [ebp+0x2b667355]
  41adee:	ds js  0x41ae10
  41adf1:	ret    
  41adf2:	fst    QWORD PTR [ecx]
  41adf4:	jb     0x41adca
  41adf6:	aad    0x40
  41adf8:	cwde   
  41adf9:	push   ds
  41adfa:	mov    edx,0x1c9337ac
  41adff:	test   BYTE PTR [ebp+0x762377d0],al
  41ae05:	inc    edi
  41ae06:	push   0xffffffc0
  41ae08:	or     BYTE PTR [esi],bh
  41ae0a:	ja     0x41ae74
  41ae0c:	fst    QWORD PTR [ebp+0xb27a29f]
  41ae12:	mov    dl,BYTE PTR [ebx+0x3a]
  41ae15:	sbb    eax,0xb09830bf
  41ae1a:	ror    DWORD PTR [esi+0x4978a19f],1
  41ae20:	(bad)  
  41ae21:	cli    
  41ae22:	dec    esp
  41ae23:	int3   
  41ae24:	retf   
  41ae25:	mov    WORD PTR [ecx],fs
  41ae27:	mov    DWORD PTR [edx],edi
  41ae29:	lods   eax,DWORD PTR ds:[esi]
  41ae2a:	rol    esp,0x2a
  41ae2d:	mov    dl,0xb8
  41ae2f:	jnp    0x41ae4b
  41ae31:	mov    ecx,0xe25b8a83
  41ae36:	clc    
  41ae37:	popf   
  41ae38:	xchg   esi,eax
  41ae39:	ins    DWORD PTR es:[edi],dx
  41ae3a:	dec    ebx
  41ae3b:	or     dl,BYTE PTR [ecx+0x7a]
  41ae3e:	ror    ch,0xbf
  41ae41:	sub    eax,0x16e134ca
  41ae46:	sahf   
  41ae47:	daa    
  41ae48:	test   DWORD PTR [eax+0x3b],esp
  41ae4b:	push   0x45
  41ae4d:	fisubr WORD PTR [eax]
  41ae4f:	ss jmp 0x41ae7f
  41ae52:	inc    ebx
  41ae53:	retf   0x847b
  41ae56:	xchg   esi,eax
  41ae57:	dec    esi
  41ae58:	ret    
  41ae59:	js     0x41ae81
  41ae5b:	into   
  41ae5c:	test   eax,0x778dc49b
  41ae61:	push   ds
  41ae62:	and    DWORD PTR [esi],ebp
  41ae64:	and    al,0x7a
  41ae66:	push   esi
  41ae67:	iret   
  41ae68:	push   ebp
  41ae69:	add    BYTE PTR [edi+0x2b99a37c],dl
  41ae6f:	sti    
  41ae70:	mov    eax,ds:0xc095ba73
  41ae75:	xlat   BYTE PTR ds:[ebx]
  41ae76:	call   FWORD PTR [eax+0x2f]
  41ae79:	sbb    BYTE PTR [eax],dl
  41ae7b:	stc    
  41ae7c:	push   esp
  41ae7d:	retf   
  41ae7e:	mov    esi,0x49e536f
  41ae83:	pop    ds
  41ae84:	out    0xdf,al
  41ae86:	push   cs
  41ae87:	adc    BYTE PTR [edi-0x5dfd74d6],0x4a
  41ae8e:	fcomp  DWORD PTR [ebp+0x2b]
  41ae91:	fistp  QWORD PTR [esi]
  41ae93:	jnp    0x41ae8d
  41ae95:	std    
  41ae96:	addr16 test al,0x78
  41ae99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae9a:	add    eax,0x6c759609
  41ae9f:	fstp   QWORD PTR [edi+0x2ba59df2]
  41aea5:	jp     0x41aef8
  41aea7:	frstor [edx+0x5b9d7be9]
  41aead:	sahf   
  41aeae:	mov    esp,0x133e08ad
  41aeb3:	push   ebx
  41aeb4:	(bad)  
  41aeb6:	push   ecx
  41aeb7:	dec    esp
  41aeb8:	mov    cl,0xe9
  41aeba:	out    dx,eax
  41aebb:	xchg   WORD PTR [esi+ebx*1],bx
  41aebf:	loop   0x41af1b
  41aec1:	gs je  0x41aef2
  41aec4:	popa   
  41aec5:	pop    ecx
  41aec6:	or     eax,0xc1a1f762
  41aecb:	nop
  41aecc:	mov    esp,0x337251a2
  41aed1:	mov    ds:0x155cf1b6,al
  41aed6:	push   edx
  41aed7:	(bad)  
  41aed8:	mov    ecx,0x7e79ca3b
  41aedd:	cmp    eax,0x1c9b1996
  41aee2:	adc    DWORD PTR [ebx+edx*1-0x7d],edx
  41aee6:	inc    edx
  41aee7:	ja     0x41aec0
  41aee9:	sub    dh,ah
  41aeeb:	sbb    esi,DWORD PTR [esi]
  41aeed:	inc    ebp
  41aeee:	stc    
  41aeef:	icebp  
  41aef0:	in     al,dx
  41aef1:	test   eax,0x49559d28
  41aef6:	adc    ebp,DWORD PTR [ebp-0x719f0575]
  41aefc:	lock ins DWORD PTR es:[edi],dx
  41aefe:	nop
  41aeff:	call   0x617ebc10
  41af04:	sub    cl,al
  41af06:	mov    eax,ds:0x58dea314
  41af0b:	jae    0x41ae98
  41af0d:	into   
  41af0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af0f:	repnz xor al,0xc3
  41af12:	push   es
  41af13:	and    DWORD PTR [ebp+0x2f],ebx
  41af16:	clc    
  41af17:	sbb    al,0xd6
  41af19:	mov    ah,0x16
  41af1b:	test   al,0xc5
  41af1d:	fcmovne st,st(2)
  41af1f:	sub    eax,0x9a990834
  41af24:	cmp    DWORD PTR [esi+esi*8-0x47],eax
  41af28:	addr16 inc eax
  41af2a:	loopne 0x41af65
  41af2c:	ins    BYTE PTR es:[edi],dx
  41af2d:	ja     0x41aed3
  41af2f:	cld    
  41af30:	cmc    
  41af31:	or     bh,BYTE PTR [ebx-0x2c]
  41af34:	ins    DWORD PTR es:[edi],dx
  41af35:	mov    esp,gs
  41af37:	xor    DWORD PTR [edx-0x3bf2a7d0],edx
  41af3d:	pop    esi
  41af3e:	adc    esi,DWORD PTR [esi]
  41af40:	mov    ebp,0xc29267ad
  41af45:	add    edx,DWORD PTR [eax]
  41af47:	ret    
  41af48:	std    
  41af49:	cmp    esi,DWORD PTR ds:0x974c3c20
  41af4f:	imul   edi,DWORD PTR [edi-0x24],0x907456f7
  41af56:	hlt    
  41af57:	push   ecx
  41af58:	push   0xfc50e315
  41af5d:	adc    BYTE PTR [eax+ebx*1+0x44],ch
  41af61:	dec    edi
  41af62:	iret   
  41af63:	pop    ss
  41af64:	mov    ch,0x54
  41af66:	popa   
  41af67:	das    
  41af68:	out    dx,al
  41af69:	or     DWORD PTR [eax],0x99341d81
  41af6f:	jg     0x41af98
  41af71:	rol    BYTE PTR [ebp*1-0x3b385228],0x6a
  41af79:	jbe    0x41af9e
  41af7b:	adc    eax,0xfe823956
  41af80:	(bad)  
  41af81:	popa   
  41af82:	test   al,0x86
  41af84:	mov    ds:0x714732ba,al
  41af89:	fwait
  41af8a:	bnd jns 0x41af53
  41af8d:	es es xchg ebp,eax
  41af90:	call   0xadee4504
  41af95:	xchg   esi,eax
  41af96:	sahf   
  41af97:	adc    DWORD PTR [ebp+0x2e6ba97c],edi
  41af9d:	mov    bl,0x66
  41af9f:	xor    DWORD PTR [ecx],0x19
  41afa2:	leave  
  41afa3:	inc    ecx
  41afa4:	jle    0x41af8d
  41afa6:	mov    edi,0xa696c97e
  41afab:	fsubrp st(6),st
  41afad:	outs   dx,DWORD PTR ds:[esi]
  41afae:	mov    dl,0x19
  41afb0:	cwde   
  41afb1:	ins    BYTE PTR es:[edi],dx
  41afb2:	inc    edx
  41afb3:	inc    eax
  41afb4:	fld    TBYTE PTR [edi]
  41afb6:	test   eax,0x881ff28c
  41afbb:	fidiv  WORD PTR [edx+0x8]
  41afbe:	adc    al,0x74
  41afc0:	xchg   edi,eax
  41afc1:	mov    bh,0x62
  41afc3:	sbb    bl,BYTE PTR [eax-0x5f7d090e]
  41afc9:	add    al,0x83
  41afcb:	xlat   BYTE PTR ds:[ebx]
  41afcc:	jo     0x41af74
  41afce:	out    dx,al
  41afcf:	sub    DWORD PTR cs:[eax],ecx
  41afd2:	(bad)  
  41afd3:	out    dx,eax
  41afd4:	cmp    DWORD PTR [eax],esp
  41afd6:	in     eax,dx
  41afd7:	xor    bl,BYTE PTR [ebp+0x4f2e0f1d]
  41afdd:	or     DWORD PTR [esi],0xffffffa0
  41afe0:	hlt    
  41afe1:	mov    eax,0x59821fe5
  41afe6:	loope  0x41b029
  41afe8:	xchg   edi,eax
  41afe9:	sbb    DWORD PTR [esi-0x28e3cb51],0x859610ec
  41aff3:	push   esp
  41aff4:	sub    eax,0xcbce81da
  41aff9:	clc    
  41affa:	jmp    0xd382945d
  41afff:	mov    ds:0xe0aa65b2,al
  41b004:	lods   eax,DWORD PTR ds:[esi]
  41b005:	mov    edi,0xc03329f9
  41b00a:	(bad)  
  41b00c:	push   ecx
  41b00d:	jmp    0xda7f:0x24bb77a4
  41b014:	daa    
  41b015:	jge    0x41b043
  41b017:	psrld  mm5,QWORD PTR [ebx-0x77]
  41b01b:	add    ecx,DWORD PTR [edx]
  41b01d:	cmp    ebp,DWORD PTR [ebx-0x116ab846]
  41b023:	addr16 xchg ebx,eax
  41b025:	out    dx,al
  41b026:	jbe    0x41b051
  41b028:	add    bh,BYTE PTR [ecx+0x4]
  41b02b:	mov    ds:0x1630f0b,al
  41b030:	cdq    
  41b031:	mov    eax,ds:0x7e4c332
  41b036:	and    esi,DWORD PTR [esi+0x5e]
  41b039:	jo     0x41afd4
  41b03b:	mov    dl,0xc4
  41b03d:	in     al,dx
  41b03e:	xlat   BYTE PTR ds:[ebx]
  41b03f:	mov    ebx,0x4087fa8a
  41b044:	jle    0x41b034
  41b046:	loopne 0x41afe9
  41b048:	push   eax
  41b049:	adc    al,0x28
  41b04b:	clc    
  41b04c:	(bad)  
  41b04d:	sbb    eax,0xfedeaf0f
  41b052:	xchg   ebp,eax
  41b053:	inc    edi
  41b054:	mov    esp,DWORD PTR [ebx-0x55f63aa6]
  41b05a:	ins    DWORD PTR es:[edi],dx
  41b05b:	sbb    BYTE PTR [esi-0x47],0xd2
  41b05f:	daa    
  41b060:	mov    ecx,0xf84d6eaf
  41b065:	pop    edx
  41b066:	jl     0x41b0a7
  41b068:	popa   
  41b069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06a:	xchg   esp,eax
  41b06b:	pop    ds
  41b06c:	fcmovne st,st(3)
  41b06e:	sbb    esp,DWORD PTR [ecx+eax*8+0x3b9c7d08]
  41b075:	sbb    DWORD PTR [edi],edx
  41b077:	scas   al,BYTE PTR es:[edi]
  41b078:	test   BYTE PTR [ebp-0x28],ch
  41b07b:	popa   
  41b07c:	pop    ds
  41b07d:	ss xchg ebx,eax
  41b07f:	mov    dl,dh
  41b081:	add    al,0xdc
  41b083:	jae    0x41b060
  41b085:	mov    bl,0x59
  41b087:	aas    
  41b088:	ret    0x84ec
  41b08b:	pop    esi
  41b08c:	jno    0x41b0c4
  41b08e:	and    esi,DWORD PTR [edx+0x2631fd6]
  41b094:	xchg   ebp,eax
  41b095:	mov    eax,ds:0xf70c64f4
  41b09a:	mov    eax,ds:0x91ab83c1
  41b09f:	add    al,0x8a
  41b0a1:	xor    al,0x11
  41b0a3:	rol    BYTE PTR [edi+eiz*4+0x9],cl
  41b0a7:	leave  
  41b0a8:	or     eax,0xf0ba0bff
  41b0ad:	pop    edi
  41b0ae:	or     dh,bl
  41b0b0:	dec    ecx
  41b0b1:	xor    DWORD PTR ds:0xf83b495b,edx
  41b0b7:	scas   eax,DWORD PTR es:[edi]
  41b0b8:	(bad)  
  41b0b9:	adc    ecx,edx
  41b0bb:	xor    BYTE PTR [eax+ebp*4],ch
  41b0be:	(bad)  
  41b0bf:	push   edx
  41b0c0:	popa   
  41b0c1:	pop    esp
  41b0c2:	mov    ah,BYTE PTR ss:[eax]
  41b0c5:	fnstcw WORD PTR [ecx-0x3662a181]
  41b0cb:	je     0x41b0b0
  41b0cd:	sbb    eax,edx
  41b0cf:	(bad)  
  41b0d0:	mov    eax,0x55e35d1c
  41b0d5:	hlt    
  41b0d6:	lock jge 0x41b0d8
  41b0d9:	mov    DWORD PTR [eax],ecx
  41b0db:	outs   dx,BYTE PTR ds:[esi]
  41b0dc:	push   ecx
  41b0dd:	retf   
  41b0de:	in     al,0xac
  41b0e0:	lods   eax,DWORD PTR ds:[esi]
  41b0e1:	dec    esi
  41b0e2:	fdiv   DWORD PTR [edx]
  41b0e4:	ja     0x41b0b3
  41b0e6:	aad    0x84
  41b0e8:	jno    0x41b118
  41b0ea:	rcl    BYTE PTR [esi-0x74],1
  41b0ed:	pop    esi
  41b0ee:	call   0x6984d777
  41b0f3:	jns    0x41b16e
  41b0f5:	pop    eax
  41b0f6:	or     eax,0x2bc50541
  41b0fb:	push   0x80de6657
  41b100:	fnsave [esi]
  41b102:	test   DWORD PTR [ebx+0x7672dedf],edx
  41b108:	mov    esi,0x9dacde21
  41b10d:	aam    0x23
  41b10f:	es in  al,0xa1
  41b112:	or     ebx,DWORD PTR [ebx-0x72]
  41b115:	popa   
  41b116:	push   ebp
  41b117:	jmp    0xb8f5:0x653cd474
  41b11e:	cmp    ebp,DWORD PTR [edi-0x12]
  41b121:	cwde   
  41b122:	stc    
  41b123:	mov    ?,ebp
  41b125:	dec    edi
  41b126:	and    BYTE PTR [ecx],ch
  41b128:	mov    eax,ds:0xc40b636f
  41b12d:	leave  
  41b12e:	ds jo  0x41b18b
  41b131:	aad    0x71
  41b133:	fist   DWORD PTR [edi+0x327fdf9]
  41b139:	add    ecx,DWORD PTR [edx]
  41b13b:	imul   ebp,DWORD PTR [eax-0x48],0x56
  41b13f:	fimul  DWORD PTR [ecx+0x11883fa4]
  41b145:	leave  
  41b146:	or     DWORD PTR [edi-0x79],0xffffffd6
  41b14a:	repnz sbb DWORD PTR [ebx-0x53],edi
  41b14e:	push   es
  41b14f:	lods   eax,DWORD PTR ds:[esi]
  41b150:	sbb    al,0x26
  41b152:	xchg   esp,eax
  41b153:	and    al,0xc5
  41b155:	pop    ebx
  41b156:	xchg   esi,eax
  41b157:	(bad)  
  41b158:	leave  
  41b159:	mov    al,0x35
  41b15b:	outs   dx,DWORD PTR es:[esi]
  41b15d:	popf   
  41b15e:	jno    0x41b121
  41b160:	mov    esi,0xee298e2c
  41b165:	dec    edx
  41b166:	push   ebx
  41b167:	xchg   ecx,eax
  41b168:	mov    bh,0xc6
  41b16a:	jp     0x41b151
  41b16c:	adc    eax,0x10e11faa
  41b171:	push   ecx
  41b172:	stos   BYTE PTR es:[edi],al
  41b173:	(bad)  
  41b174:	adc    eax,DWORD PTR [edi-0x22c23e76]
  41b17a:	cld    
  41b17b:	or     DWORD PTR [ebp+0x3c],edi
  41b17e:	jae    0x41b191
  41b180:	mov    ds:0x8f190211,al
  41b185:	jp     0x41b11c
  41b187:	jae    0x41b12a
  41b189:	push   esp
  41b18a:	ror    DWORD PTR [edx],0xb6
  41b18d:	cmp    ebx,ebp
  41b18f:	xor    al,0xa6
  41b191:	(bad)  
  41b192:	lock mov bl,0x3c
  41b195:	xor    BYTE PTR [edx+0x7b3ed3f],bh
  41b19b:	fwait
  41b19c:	push   ds
  41b19d:	fwait
  41b19e:	loope  0x41b1b5
  41b1a0:	and    esi,DWORD PTR [ebx+0x2]
  41b1a3:	fs loop 0x41b12a
  41b1a6:	jg     0x41b1cd
  41b1a8:	mov    ebx,0x10ccd683
  41b1ad:	inc    ecx
  41b1ae:	test   al,0xad
  41b1b0:	jo     0x41b218
  41b1b2:	and    DWORD PTR [eax],esp
  41b1b4:	fisubr WORD PTR [ebx]
  41b1b6:	push   edi
  41b1b7:	pop    edi
  41b1b8:	add    esp,DWORD PTR [ebx+0xdfc4bba]
  41b1be:	cmp    al,0xb3
  41b1c0:	hlt    
  41b1c1:	adc    BYTE PTR [edx+0xd5f79ca],0x20
  41b1c8:	mov    cl,0x4f
  41b1ca:	scas   eax,DWORD PTR es:[edi]
  41b1cb:	imul   esi,DWORD PTR [esi+edi*2+0x7ae7875],0xffffff80
  41b1d3:	jnp    0x41b179
  41b1d5:	in     eax,dx
  41b1d6:	pusha  
  41b1d7:	ds add ebp,eax
  41b1da:	mov    WORD PTR [edx+0x61],es
  41b1dd:	rcl    cl,1
  41b1df:	cdq    
  41b1e0:	mov    WORD PTR [ebp-0x671ea957],?
  41b1e6:	in     eax,dx
  41b1e7:	pop    ecx
  41b1e8:	inc    DWORD PTR [ecx-0xd]
  41b1eb:	ror    DWORD PTR [esi],cl
  41b1ed:	push   ds
  41b1ee:	sti    
  41b1ef:	mov    ebp,0x9b916a3a
  41b1f4:	mov    WORD PTR [ebx-0x52],cs
  41b1f7:	rcl    BYTE PTR fs:[edi+0x1a],cl
  41b1fb:	or     edi,eax
  41b1fd:	lods   eax,DWORD PTR ds:[esi]
  41b1fe:	addr16 dec ecx
  41b200:	xor    BYTE PTR [ecx],ch
  41b202:	stos   BYTE PTR es:[edi],al
  41b203:	in     al,dx
  41b204:	sbb    ebp,esi
  41b206:	mov    ds:0xb8948fb2,al
  41b20b:	mov    cl,0x4b
  41b20d:	xchg   edx,eax
  41b20e:	adc    ebp,DWORD PTR [edx+ebx*8-0xa]
  41b212:	mov    esp,0xf0d8ece0
  41b217:	dec    edi
  41b218:	push   esp
  41b219:	xor    eax,0xabd44ca4
  41b21e:	call   0xe19d:0x4f2d01fa
  41b225:	dec    edx
  41b226:	fs xchg edi,eax
  41b228:	pushf  
  41b229:	inc    ebx
  41b22a:	les    esp,FWORD PTR [ecx]
  41b22c:	lock sahf 
  41b22e:	xchg   esi,eax
  41b22f:	pop    ss
  41b230:	test   DWORD PTR [esi],esi
  41b232:	xor    bh,BYTE PTR [ebx-0x42]
  41b235:	outs   dx,DWORD PTR ds:[esi]
  41b236:	out    dx,eax
  41b237:	inc    esp
  41b238:	leave  
  41b239:	cmp    dh,dl
  41b23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b23c:	mov    ds:0xe9b18487,al
  41b241:	popa   
  41b242:	inc    esp
  41b243:	das    
  41b244:	jmp    0x19e0bdd4
  41b249:	jp     0x41b246
  41b24b:	mov    ah,0xaa
  41b24d:	pop    ss
  41b24e:	push   es
  41b24f:	ds retf 
  41b251:	pop    ss
  41b252:	xor    DWORD PTR [bp+0x42],0x2fd835a8
  41b25a:	pusha  
  41b25b:	rcr    BYTE PTR [edx-0x6dc30d3f],1
  41b261:	push   ebx
  41b262:	jle    0x41b206
  41b264:	arpl   WORD PTR [edi],bx
  41b266:	jg     0x41b203
  41b268:	inc    ebx
  41b269:	mov    ebp,DWORD PTR [eax-0x52a66fd7]
  41b26f:	cmp    bl,BYTE PTR [esi]
  41b271:	jecxz  0x41b1fd
  41b273:	dec    eax
  41b274:	jae    0x41b2b2
  41b276:	inc    esp
  41b277:	and    al,0x62
  41b279:	jecxz  0x41b210
  41b27b:	jp     0x41b2aa
  41b27d:	mov    ds:0xcdb91dac,al
  41b282:	cmc    
  41b283:	cmc    
  41b284:	dec    edi
  41b285:	loop   0x41b2ed
  41b287:	out    dx,al
  41b288:	pop    edx
  41b289:	add    bl,0x8b
  41b28c:	out    dx,eax
  41b28d:	dec    eax
  41b28e:	cmp    eax,0xfc518ee3
  41b293:	repnz adc BYTE PTR [ebx+0xa],bh
  41b297:	mov    ah,0xf3
  41b299:	arpl   si,cx
  41b29b:	hlt    
  41b29c:	retf   0xc70
  41b29f:	pop    ss
  41b2a0:	lds    eax,FWORD PTR [ebx]
  41b2a2:	leave  
  41b2a3:	in     al,dx
  41b2a4:	inc    esp
  41b2a5:	stc    
  41b2a6:	test   al,0x61
  41b2a8:	mov    ebp,edx
  41b2aa:	mov    DWORD PTR [edi],esi
  41b2ac:	aaa    
  41b2ad:	sbb    eax,0x655bc4ed
  41b2b2:	cmp    ecx,DWORD PTR [ecx+0x24]
  41b2b5:	mov    bh,0xf5
  41b2b7:	adc    al,BYTE PTR [eax]
  41b2b9:	pop    ds
  41b2ba:	jne    0x41b2e3
  41b2bc:	scas   al,BYTE PTR es:[edi]
  41b2bd:	and    BYTE PTR [ebx+0x732a913a],al
  41b2c3:	mov    ebx,0xd68191ad
  41b2c8:	jle    0x41b2ab
  41b2ca:	outs   dx,DWORD PTR ds:[esi]
  41b2cb:	call   0xf6d:0x9eda54a2
  41b2d2:	fistp  QWORD PTR [ebx+0x7d9b615b]
  41b2d8:	dec    eax
  41b2d9:	add    al,0x98
  41b2db:	nop
  41b2dc:	hlt    
  41b2dd:	pop    edi
  41b2de:	push   cs
  41b2df:	adc    bh,0xca
  41b2e2:	ss loope 0x41b2d6
  41b2e5:	test   al,0x8d
  41b2e7:	adc    al,0xb2
  41b2e9:	mov    esp,0xe671c09c
  41b2ee:	mov    cl,0xae
  41b2f0:	icebp  
  41b2f1:	cmp    ch,al
  41b2f3:	cmp    DWORD PTR [ebp-0x50102de6],esi
  41b2f9:	call   0x7d9b:0xa4bfaa8e
  41b300:	push   ss
  41b301:	lods   eax,DWORD PTR ds:[esi]
  41b302:	jb     0x41b371
  41b304:	cmp    eax,0x34ed449a
  41b309:	lods   eax,DWORD PTR ds:[esi]
  41b30a:	or     BYTE PTR [esi+0x1d],ah
  41b30d:	in     eax,dx
  41b30e:	push   es
  41b30f:	popf   
  41b310:	sub    ebp,DWORD PTR [ebp+0xb4a5d54]
  41b316:	and    eax,DWORD PTR [edi]
  41b318:	ret    0xb50c
  41b31b:	bound  edi,QWORD PTR [ebp+eiz*2+0x76]
  41b31f:	push   ecx
  41b320:	fwait
  41b321:	mov    ebp,0x3a732458
  41b326:	jecxz  0x41b35a
  41b328:	std    
  41b329:	push   ss
  41b32a:	(bad)  
  41b32c:	pop    ss
  41b32d:	add    DWORD PTR [ebx+0x5186554f],edx
  41b333:	dec    ebp
  41b334:	pushf  
  41b335:	int    0x3e
  41b337:	add    DWORD PTR [edx+0x5f8e1138],eax
  41b33d:	xchg   DWORD PTR ds:0xbaa8c68f,ecx
  41b343:	ret    0x4a19
  41b346:	adc    DWORD PTR [edx+0x4070236b],ebp
  41b34c:	popa   
  41b34d:	xchg   edi,eax
  41b34e:	mov    ecx,0x9c44abb7
  41b353:	outs   dx,BYTE PTR ds:[esi]
  41b354:	inc    edi
  41b355:	int    0xef
  41b357:	add    ebp,eax
  41b359:	xchg   ebx,eax
  41b35a:	adc    ch,ah
  41b35c:	loope  0x41b329
  41b35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b35f:	mov    al,0x33
  41b361:	(bad)  
  41b362:	jnp    0x41b3a4
  41b364:	mov    DWORD PTR [ebp+edx*4+0xd19498a],esi
  41b36b:	mov    edx,0xfd7d65d3
  41b370:	and    edx,edx
  41b372:	and    ch,al
  41b374:	lock not DWORD PTR [ebx-0x57]
  41b378:	push   ebp
  41b379:	test   BYTE PTR [ebx+0xd],0x60
  41b37d:	adc    eax,0x87efdcfb
  41b382:	out    0xcd,al
  41b384:	out    dx,eax
  41b385:	push   eax
  41b386:	ins    BYTE PTR es:[edi],dx
  41b387:	lahf   
  41b388:	jg     0x41b36f
  41b38a:	pop    edx
  41b38b:	lods   eax,DWORD PTR ds:[esi]
  41b38c:	lahf   
  41b38d:	nop
  41b38e:	fwait
  41b38f:	loop   0x41b3c7
  41b391:	sbb    al,BYTE PTR [eax-0x8]
  41b394:	jecxz  0x41b37e
  41b396:	std    
  41b397:	mov    esp,0x88648879
  41b39c:	int3   
  41b39d:	pushf  
  41b39e:	pop    ecx
  41b39f:	push   esi
  41b3a0:	in     al,dx
  41b3a1:	mov    ecx,0xa1c541
  41b3a6:	lods   eax,DWORD PTR ds:[esi]
  41b3a7:	jl     0x41b340
  41b3a9:	rcr    cl,1
  41b3ab:	out    dx,eax
  41b3ac:	xor    DWORD PTR [ebx-0x2986a6b7],ecx
  41b3b2:	mov    DWORD PTR [edx],ebp
  41b3b4:	push   edi
  41b3b5:	nop
  41b3b6:	imul   BYTE PTR [edx]
  41b3b8:	xchg   esp,eax
  41b3b9:	cmp    BYTE PTR [ebx+eax*8+0x7d216408],bh
  41b3c0:	mov    WORD PTR [esi],?
  41b3c2:	ss push 0x3845a53e
  41b3c8:	les    edi,FWORD PTR [edi]
  41b3ca:	xchg   ecx,eax
  41b3cb:	inc    esp
  41b3cc:	fld    DWORD PTR [ecx]
  41b3ce:	jge    0x41b3f9
  41b3d0:	cdq    
  41b3d1:	sub    BYTE PTR [edi-0x3fd9016d],dh
  41b3d7:	mov    esp,DWORD PTR [ebx+0x2c]
  41b3da:	jg     0x41b396
  41b3dc:	jbe    0x41b438
  41b3de:	sbb    al,0xe8
  41b3e0:	out    0xa,eax
  41b3e2:	(bad)  
  41b3e3:	lahf   
  41b3e4:	fmul   DWORD PTR [esi+0x4c475cd0]
  41b3ea:	shl    DWORD PTR [esi+edi*1-0x5503036],1
  41b3f1:	(bad)  
  41b3f2:	call   0xa3ff:0x33cb1096
  41b3f9:	ror    al,0x0
  41b3fc:	xor    edi,DWORD PTR [edx-0x5dff2922]
  41b402:	inc    esi
  41b403:	xor    al,dh
  41b405:	imul   esp,DWORD PTR [ebp-0x54d6648f],0xeef86511
  41b40f:	daa    
  41b410:	cmp    DWORD PTR [edi],0x94d5072
  41b416:	pop    edi
  41b417:	dec    ecx
  41b418:	nop
  41b419:	dec    esi
  41b41a:	repnz sbb bl,BYTE PTR [edx]
  41b41d:	popa   
  41b41e:	fs mov dl,0x4f
  41b421:	mov    ds:0xb178ca71,eax
  41b426:	xlat   BYTE PTR ds:[ebx]
  41b427:	or     al,0x94
  41b429:	div    cl
  41b42b:	int3   
  41b42c:	xor    cl,dl
  41b42e:	cmp    dh,ch
  41b430:	fdiv   st(0),st
  41b432:	into   
  41b433:	or     al,0x28
  41b435:	loopne 0x41b407
  41b437:	jle    0x41b43a
  41b439:	inc    edi
  41b43a:	(bad)  
  41b43b:	adc    esi,esi
  41b43d:	clc    
  41b43e:	mov    bh,0xeb
  41b440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b441:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b443:	stc    
  41b444:	cs ret 
  41b446:	sbb    dl,0xbd
  41b449:	mov    BYTE PTR [eax+0x66487463],ch
  41b44f:	ret    
  41b450:	sbb    ecx,DWORD PTR [edi-0x11648dd4]
  41b456:	fnsave [esi+ecx*1+0x78]
  41b45a:	out    0xf2,eax
  41b45c:	ud2    
  41b45e:	mov    edx,0x7e48762c
  41b463:	pop    ecx
  41b464:	push   ss
  41b465:	and    eax,edx
  41b467:	jne    0x41b4e1
  41b469:	lock add bh,bh
  41b46c:	scas   al,BYTE PTR es:[edi]
  41b46d:	or     ebx,esi
  41b46f:	pop    edi
  41b470:	je     0x41b46f
  41b472:	cmp    esi,ebx
  41b474:	add    al,0x3c
  41b476:	rcr    DWORD PTR [eax+ebp*8+0x28],cl
  41b47a:	jne    0x41b4c7
  41b47c:	jnp    0x41b4f8
  41b47e:	xor    DWORD PTR [edx],eax
  41b480:	xor    esi,DWORD PTR [ecx-0x271c5e00]
  41b486:	lock icebp 
  41b488:	loope  0x41b44e
  41b48a:	jp     0x41b40e
  41b48c:	out    dx,al
  41b48d:	inc    ebp
  41b48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b48f:	mov    bh,ch
  41b491:	xor    BYTE PTR [edx+edx*8-0x4cf67be4],0x88
  41b499:	push   cs
  41b49a:	jl     0x41b43f
  41b49c:	test   DWORD PTR [esi+0x19],edi
  41b49f:	fmul   DWORD PTR [edx-0x31]
  41b4a2:	outs   dx,BYTE PTR ds:[esi]
  41b4a3:	rol    DWORD PTR [edx+ebx*1],1
  41b4a6:	sub    al,0xb9
  41b4a8:	xchg   edi,eax
  41b4a9:	sti    
  41b4aa:	sar    BYTE PTR [esi+0x12],1
  41b4ad:	dec    ebp
  41b4ae:	pop    ds
  41b4af:	adc    ebx,DWORD PTR [edi+0x7a27bbbc]
  41b4b5:	push   eax
  41b4b6:	pop    edi
  41b4b7:	xchg   esp,eax
  41b4b8:	std    
  41b4b9:	push   edx
  41b4ba:	sub    ebp,esp
  41b4bc:	hlt    
  41b4bd:	imul   edx,DWORD PTR [esi-0x4937c070],0x2062d831
  41b4c7:	sub    bl,BYTE PTR [ebp+0x127bd7cb]
  41b4cd:	rcl    BYTE PTR [ebx],0xfc
  41b4d0:	mov    WORD PTR [edx],?
  41b4d2:	dec    edx
  41b4d3:	and    DWORD PTR [edx+edi*1-0x73],esi
  41b4d7:	jle    0x41b4db
  41b4d9:	hlt    
  41b4da:	fdiv   QWORD PTR [edi]
  41b4dc:	lahf   
  41b4dd:	cmp    al,0x2f
  41b4df:	in     eax,dx
  41b4e0:	add    cl,BYTE PTR [ebx+ecx*2+0x73]
  41b4e4:	mov    ebp,0x89edc8d9
  41b4e9:	dec    esi
  41b4ea:	jno    0x41b54f
  41b4ec:	std    
  41b4ed:	xchg   esi,eax
  41b4ee:	mov    cl,0x27
  41b4f0:	adc    BYTE PTR [edx+0x28],0x9c
  41b4f4:	cdq    
  41b4f5:	dec    edx
  41b4f6:	js     0x41b48d
  41b4f8:	xchg   DWORD PTR [eax+ebp*1-0xefb1959],ebx
  41b4ff:	aam    0x10
  41b501:	stc    
  41b502:	dec    esp
  41b503:	xchg   esi,eax
  41b504:	retf   
  41b505:	(bad)  
  41b506:	push   eax
  41b507:	iret   
  41b508:	jp     0x41b4c1
  41b50a:	rcr    BYTE PTR [esi+0x213f9c26],cl
  41b510:	sub    eax,0xce189469
  41b515:	sub    eax,0x3bd4ae4c
  41b51a:	ror    BYTE PTR [esi+ecx*8],cl
  41b51d:	lock sub eax,0x7b267084
  41b523:	mov    eax,ds:0x311ab265
  41b528:	daa    
  41b529:	inc    esp
  41b52a:	sbb    DWORD PTR [edx+0x62],ecx
  41b52d:	mov    WORD PTR [ebx-0x2cbf47a6],ss
  41b533:	arpl   WORD PTR [ebp+0x15],dx
  41b536:	mov    ds:0x1b4fad93,eax
  41b53b:	jbe    0x41b4db
  41b53d:	sar    edi,cl
  41b53f:	pop    ebx
  41b540:	scas   eax,DWORD PTR es:[edi]
  41b541:	fisub  WORD PTR [eax-0x68d4ac79]
  41b547:	push   0x18fe5756
  41b54c:	sbb    al,0xac
  41b54e:	(bad)  
  41b550:	and    eax,0x2dfc7f08
  41b555:	aas    
  41b556:	popa   
  41b557:	jge    0x41b50e
  41b559:	mov    edx,0xbef58021
  41b55e:	(bad)  
  41b55f:	aad    0xc9
  41b561:	dec    edi
  41b562:	and    eax,0x9b472cf1
  41b567:	and    al,0x27
  41b569:	cmp    BYTE PTR [ebp+0x34],bh
  41b56c:	shl    BYTE PTR [ecx+0x55a84eaf],cl
  41b572:	pop    eax
  41b573:	lods   eax,DWORD PTR ds:[esi]
  41b574:	out    dx,eax
  41b575:	pushf  
  41b576:	jecxz  0x41b5a0
  41b578:	xor    cl,cl
  41b57a:	sahf   
  41b57b:	xlat   BYTE PTR ds:[ebx]
  41b57c:	xor    eax,0x5ffc688b
  41b581:	xor    al,0x62
  41b583:	and    eax,0x12633db9
  41b588:	mov    edx,eax
  41b58a:	mov    esi,fs
  41b58c:	xor    BYTE PTR [edx-0x36d5aaf0],0x4a
  41b593:	scas   eax,DWORD PTR es:[edi]
  41b594:	pop    ebp
  41b595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b596:	mov    bh,cl
  41b598:	aam    0xd9
  41b59a:	cld    
  41b59b:	jae    0x41b536
  41b59d:	call   0x63d3:0xf0e381b
  41b5a4:	xchg   edx,eax
  41b5a5:	inc    eax
  41b5a6:	or     al,0xfd
  41b5a8:	sahf   
  41b5a9:	push   ss
  41b5aa:	je     0x41b59c
  41b5ac:	mov    dh,0x46
  41b5ae:	popf   
  41b5af:	rcr    BYTE PTR [ebp+0x64b137a8],1
  41b5b5:	vpsrlq ymm4,ymm0,XMMWORD PTR [esi+0x3a]
  41b5ba:	cs dec esp
  41b5bc:	(bad)  
  41b5bd:	mov    cl,0x37
  41b5bf:	mov    ch,0xf0
  41b5c1:	popa   
  41b5c2:	adc    edi,DWORD PTR [edi*1-0x48b6e627]
  41b5c9:	iret   
  41b5ca:	jno    0x41b55f
  41b5cc:	mov    ds:0xfd738281,eax
  41b5d1:	pop    edi
  41b5d2:	pop    ds
  41b5d3:	mov    ds:0x6e82d69b,eax
  41b5d8:	mov    ebx,0xa529279a
  41b5dd:	shr    DWORD PTR [edx-0x10],1
  41b5e0:	cwde   
  41b5e1:	jno    0x41b5da
  41b5e3:	scas   al,BYTE PTR es:[edi]
  41b5e4:	sbb    ecx,DWORD PTR [eax]
  41b5e6:	cmp    bh,BYTE PTR [edx]
  41b5e8:	in     al,0xa7
  41b5ea:	fisttp QWORD PTR [ebp-0x68236bf6]
  41b5f0:	xchg   esi,eax
  41b5f1:	sub    edi,DWORD PTR [ebx-0x2c]
  41b5f4:	add    ch,BYTE PTR [edi+0x45]
  41b5f7:	mov    eax,0xec2bedb4
  41b5fc:	movsx  ecx,WORD PTR [edx]
  41b5ff:	adc    DWORD PTR [ebp+0x7cc51447],ebx
  41b605:	jl     0x41b63c
  41b607:	mov    ebp,0x3aa213a1
  41b60c:	adc    al,0x60
  41b60e:	enter  0xe508,0xf1
  41b612:	cmp    esp,DWORD PTR ds:0xfeefec72
  41b618:	mov    ebx,0x614031aa
  41b61d:	retf   0x6253
  41b620:	ret    0x3dca
  41b623:	add    DWORD PTR ds:[ebx+0x42],eax
  41b627:	ror    BYTE PTR [esi-0x46],1
  41b62a:	xor    bh,BYTE PTR [esi]
  41b62c:	les    eax,FWORD PTR gs:[ebx-0x70]
  41b630:	js     0x41b630
  41b632:	push   ds
  41b633:	mov    bh,BYTE PTR [edi]
  41b635:	xchg   ah,dl
  41b637:	xchg   ebp,eax
  41b638:	addr16 nop
  41b63a:	cmc    
  41b63b:	xchg   edi,eax
  41b63c:	sub    DWORD PTR [edx+esi*8],0xf37b70ca
  41b643:	in     eax,dx
  41b644:	mov    ecx,0x4126203d
  41b649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b64a:	jbe    0x41b5e5
  41b64c:	test   eax,0x2fcfd01a
  41b651:	mov    ss,WORD PTR [eax-0xd449a]
  41b657:	adc    edx,esi
  41b659:	shr    BYTE PTR cs:[edx-0x45e141b9],cl
  41b660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b661:	cwde   
  41b662:	test   DWORD PTR [edi],eax
  41b664:	popa   
  41b665:	enter  0x6667,0x8a
  41b669:	inc    eax
  41b66a:	mov    esi,0xec371679
  41b66f:	sti    
  41b670:	mov    edi,0x8cb860ad
  41b675:	mov    bl,0xbf
  41b677:	cdq    
  41b678:	sub    al,0xc5
  41b67a:	adc    esp,esp
  41b67c:	pop    ds
  41b67d:	cmp    ebp,DWORD PTR [eax+0x59]
  41b680:	mov    dl,0xe4
  41b682:	repz sbb BYTE PTR [edx-0x711bc440],al
  41b689:	aaa    
  41b68a:	scas   eax,DWORD PTR es:[edi]
  41b68b:	aaa    
  41b68c:	cmp    edx,edx
  41b68e:	sbb    esi,DWORD PTR [esi-0x432defcc]
  41b694:	push   ss
  41b695:	or     al,BYTE PTR [ecx-0x16]
  41b698:	pop    ds
  41b699:	jbe    0x41b6eb
  41b69b:	sub    dl,BYTE PTR [edi]
  41b69d:	pop    esp
  41b69e:	(bad)  
  41b69f:	cwde   
  41b6a0:	repz shl DWORD PTR gs:[eax-0x3c6960ff],cl
  41b6a8:	fstp   TBYTE PTR [ebx+0x47]
  41b6ab:	ja     0x41b6cd
  41b6ad:	out    0xc2,eax
  41b6af:	mov    eax,esp
  41b6b1:	xchg   BYTE PTR [ecx+0x7e],cl
  41b6b4:	stos   DWORD PTR es:[edi],eax
  41b6b5:	aam    0xb8
  41b6b7:	jge    0x41b723
  41b6b9:	add    ch,BYTE PTR [ebp-0x7]
  41b6bc:	sub    al,0x15
  41b6be:	mov    esp,0x6e91f24f
  41b6c3:	sub    dl,BYTE PTR [ecx+0x33]
  41b6c6:	add    ebp,DWORD PTR [ecx]
  41b6c8:	xchg   DWORD PTR [ebp+0x1f],eax
  41b6cb:	add    al,0x94
  41b6cd:	mov    BYTE PTR [ecx+0xe6ff4e4],dh
  41b6d3:	jb     0x41b655
  41b6d5:	fcomp  DWORD PTR [eax+edi*1-0x78]
  41b6d9:	imul   esi,eax,0x6c
  41b6dc:	sbb    dh,BYTE PTR [eax+ecx*8+0x3973dc66]
  41b6e3:	adc    eax,0xab3a0e5
  41b6e8:	add    dl,BYTE PTR [edi+0x19]
  41b6eb:	sbb    ch,al
  41b6ed:	jne    0x41b758
  41b6ef:	(bad)  
  41b6f0:	enter  0x4702,0xd2
  41b6f4:	xchg   esp,eax
  41b6f5:	cmp    ebx,eax
  41b6f7:	inc    eax
  41b6f8:	pushf  
  41b6f9:	lea    ecx,[esi]
  41b6fb:	int3   
  41b6fc:	push   edx
  41b6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6fe:	in     al,0x8d
  41b700:	jbe    0x41b6d2
  41b702:	fcmovb st,st(2)
  41b704:	(bad)  
  41b705:	xchg   ebx,eax
  41b706:	sbb    al,BYTE PTR [ebp+eax*4-0x1f437156]
  41b70d:	xor    dl,BYTE PTR [esi+0x6cfe0d34]
  41b713:	cmp    BYTE PTR [ebp-0x32],bl
  41b716:	pop    edx
  41b717:	mov    bl,0x89
  41b719:	icebp  
  41b71a:	sbb    eax,0x8f27ceda
  41b71f:	ret    0x289b
  41b722:	pop    ecx
  41b723:	pop    esi
  41b724:	xchg   ecx,eax
  41b725:	sub    al,0x50
  41b727:	pop    esi
  41b728:	sbb    eax,0xa75bae04
  41b72d:	xchg   esp,eax
  41b72e:	xor    al,0x62
  41b730:	lods   eax,DWORD PTR ds:[esi]
  41b731:	inc    esi
  41b732:	gs push sp
  41b735:	jmp    0x41b6db
  41b737:	and    al,0x68
  41b739:	(bad)  
  41b73a:	fbstp  TBYTE PTR [ecx+0x5fbd0003]
  41b740:	das    
  41b741:	sbb    BYTE PTR [edi+0x166ff00d],dl
  41b747:	dec    esi
  41b748:	xor    BYTE PTR [edx+0x7e],cl
  41b74b:	or     al,0x41
  41b74d:	push   ebx
  41b74e:	adc    BYTE PTR [eax],0xfa
  41b751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b752:	xchg   edi,eax
  41b753:	sbb    ah,al
  41b755:	ss out 0xcb,al
  41b758:	jb     0x41b745
  41b75a:	xor    eax,0x1936b4f2
  41b75f:	fdiv   QWORD PTR [ebx]
  41b761:	xchg   ebx,eax
  41b762:	dec    ebp
  41b763:	sub    esi,DWORD PTR [edi+0x4a]
  41b766:	push   0xffffffa4
  41b768:	jecxz  0x41b7d3
  41b76a:	mov    DWORD PTR [ecx],esi
  41b76c:	daa    
  41b76d:	pop    esp
  41b76e:	scas   al,BYTE PTR es:[edi]
  41b76f:	out    0xdc,al
  41b771:	fwait
  41b772:	mov    BYTE PTR [edi-0x481ad86],dh
  41b778:	bound  esp,QWORD PTR [ebx]
  41b77a:	xchg   ebp,eax
  41b77b:	sbb    al,0xd8
  41b77d:	jo     0x41b7da
  41b77f:	repz jp 0x41b7ff
  41b782:	mov    ch,0x51
  41b784:	jns    0x41b7b5
  41b786:	mov    edx,0x90d44f3b
  41b78b:	lds    edx,FWORD PTR [ecx]
  41b78d:	out    0xa2,eax
  41b78f:	sbb    BYTE PTR [eax+0x57],ch
  41b792:	mov    esp,0xfa09c199
  41b797:	mov    eax,0x8e26a62b
  41b79c:	mov    ecx,0xc82c780b
  41b7a1:	add    eax,0x266b842b
  41b7a6:	mov    al,ds:0xad7a1d6a
  41b7ab:	xchg   edx,eax
  41b7ac:	(bad)  
  41b7ad:	les    ecx,FWORD PTR [esi]
  41b7af:	ins    DWORD PTR es:[edi],dx
  41b7b0:	shl    DWORD PTR [ecx+ebp*1-0x66ba10b3],0xd3
  41b7b8:	leave  
  41b7b9:	and    al,0xf8
  41b7bb:	mov    al,0xbd
  41b7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7be:	in     eax,dx
  41b7bf:	pushf  
  41b7c0:	adc    eax,DWORD PTR [ebx+0x5a916114]
  41b7c6:	imul   esp,DWORD PTR [edx+0x206386a9],0xc87e71c0
  41b7d0:	and    esp,esp
  41b7d2:	xor    eax,0xdc03b8b6
  41b7d7:	xchg   ebp,eax
  41b7d8:	jp     0x41b773
  41b7da:	jl     0x41b7e1
  41b7dc:	call   0x497c:0x9140892e
  41b7e3:	in     al,0x7a
  41b7e5:	mov    esi,0xabdc1113
  41b7ea:	mov    gs,WORD PTR [ecx+0x54]
  41b7ed:	mov    edi,0x68901cc9
  41b7f2:	popa   
  41b7f3:	mov    ah,0x31
  41b7f5:	ja     0x41b7da
  41b7f7:	mov    ch,0x63
  41b7f9:	add    eax,0xa53bffe1
  41b7fe:	leave  
  41b7ff:	(bad)  [edi]
  41b801:	imul   eax,DWORD PTR [ecx-0x40a9f9a6],0x51f9540b
  41b80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b80c:	pushf  
  41b80d:	lock sbb eax,0xe501d408
  41b813:	clc    
  41b814:	jno    0x41b889
  41b816:	mov    dh,0xf0
  41b818:	jnp    0x41b7e6
  41b81a:	or     al,0x8c
  41b81c:	das    
  41b81d:	jmp    0x830e43f9
  41b822:	(bad)  
  41b823:	out    dx,eax
  41b824:	mov    al,0x5
  41b826:	xchg   edx,eax
  41b827:	jns    0x41b7b5
  41b829:	and    eax,0xc2df085a
  41b82e:	mov    ch,0x3e
  41b830:	iret   
  41b831:	das    
  41b832:	mov    dl,0x46
  41b834:	retf   
  41b835:	or     al,0xff
  41b837:	jecxz  0x41b7e2
  41b839:	(bad)  
  41b83a:	cmc    
  41b83b:	addr16 das 
  41b83d:	in     al,dx
  41b83e:	push   edx
  41b83f:	(bad)  [eax-0x2c]
  41b842:	fist   WORD PTR [esp+esi*1-0x200dfa7f]
  41b849:	adc    esp,DWORD PTR [ebp+eiz*2-0x64]
  41b84d:	aam    0xf5
  41b84f:	dec    ebp
  41b850:	(bad)  
  41b851:	jmp    0xada1e826
  41b856:	ins    DWORD PTR es:[edi],dx
  41b857:	icebp  
  41b858:	inc    esi
  41b859:	push   0xffffffdd
  41b85b:	sbb    ebx,DWORD PTR [esp+edx*4-0x5b]
  41b85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b860:	js     0x41b8c6
  41b862:	stos   DWORD PTR es:[edi],eax
  41b863:	aas    
  41b864:	sub    DWORD PTR [esp+edi*4],esp
  41b867:	mov    eax,0x3e0da78c
  41b86c:	mov    edi,0x63347c29
  41b871:	aad    0x71
  41b873:	mov    ds:0x9c0a3617,eax
  41b878:	sbb    ecx,DWORD PTR [ebx-0x34e0fea6]
  41b87e:	xchg   edx,eax
  41b87f:	cli    
  41b880:	or     DWORD PTR [edi+0x1b3ac73],edi
  41b886:	lods   al,BYTE PTR ds:[esi]
  41b887:	mov    al,ds:0xab3f35f4
  41b88c:	aam    0x2c
  41b88e:	es es ss xor eax,0x8bf04130
  41b896:	mov    ah,0x71
  41b898:	dec    ebx
  41b899:	add    esp,DWORD PTR [ebx+0x60727ed1]
  41b89f:	jns    0x41b8ea
  41b8a1:	push   ebp
  41b8a2:	popa   
  41b8a3:	inc    edi
  41b8a4:	lea    esp,[eax+0x374daeb7]
  41b8aa:	xchg   esi,eax
  41b8ab:	push   edx
  41b8ac:	test   ebx,eax
  41b8ae:	test   DWORD PTR [edx],eax
  41b8b0:	add    dl,bl
  41b8b2:	pop    ebp
  41b8b3:	push   ebx
  41b8b4:	pusha  
  41b8b5:	out    0x5b,eax
  41b8b7:	or     eax,0x6fdab8b8
  41b8bc:	(bad)  
  41b8bd:	pop    eax
  41b8be:	imul   ecx,eax,0x9b9cb4ba
  41b8c4:	aam    0xb6
  41b8c6:	fdiv   st,st(5)
  41b8c8:	mov    ds:0x21c31322,eax
  41b8cd:	cli    
  41b8ce:	pusha  
  41b8cf:	push   eax
  41b8d0:	push   0xa5ab0f1e
  41b8d5:	(bad)  
  41b8d6:	cs dec ebp
  41b8d8:	les    edx,FWORD PTR [ebp-0x5388cf4c]
  41b8de:	stos   BYTE PTR es:[edi],al
  41b8df:	imul   eax,DWORD PTR [edi],0x4a
  41b8e2:	popa   
  41b8e3:	bt     edi,esi
  41b8e6:	sub    dh,0xf6
  41b8e9:	(bad)  
  41b8ea:	call   0x6339:0xebc339b2
  41b8f1:	jb     0x41b890
  41b8f3:	add    DWORD PTR [ebx-0x16e6ef20],0xe833a9d6
  41b8fd:	int3   
  41b8fe:	pusha  
  41b8ff:	push   ebx
  41b900:	pop    eax
  41b901:	ret    0xb25c
  41b904:	mov    edx,0xb31e7ad1
  41b90a:	addr16 cli 
  41b90c:	scas   eax,DWORD PTR es:[edi]
  41b90d:	push   es
  41b90e:	adc    DWORD PTR [edx-0x6bd9442e],ecx
  41b914:	push   edx
  41b915:	lods   eax,DWORD PTR ds:[esi]
  41b916:	pop    edx
  41b917:	out    dx,eax
  41b918:	xor    al,0x7f
  41b91a:	data16 hlt 
  41b91c:	sub    ebx,DWORD PTR [eax-0x3f]
  41b91f:	xor    esi,DWORD PTR [ebx]
  41b921:	mov    ebp,0x8690ddd8
  41b926:	fistp  DWORD PTR [edx]
  41b928:	cmp    esp,DWORD PTR [edx-0x7d]
  41b92b:	inc    ebx
  41b92c:	xor    DWORD PTR [edx+0x53170cd6],0x3c0424d5
  41b936:	imul   ebx,DWORD PTR [ebp+0x52],0xa50dba2c
  41b93d:	test   DWORD PTR [eax],edi
  41b93f:	adc    cl,BYTE PTR [edi-0x6a]
  41b942:	imul   esi,DWORD PTR [ecx-0x62],0xffffffde
  41b946:	fwait
  41b947:	loop   0x41b991
  41b949:	idiv   DWORD PTR [edx]
  41b94b:	jle    0x41b8e0
  41b94d:	inc    ecx
  41b94e:	pop    ebx
  41b94f:	jp     0x41b8fc
  41b951:	int3   
  41b952:	aad    0x5c
  41b954:	pusha  
  41b955:	jb     0x41b90f
  41b957:	test   eax,0x7b8aec1f
  41b95c:	es iret 
  41b95e:	pop    edi
  41b95f:	rol    ch,0xe
  41b962:	mov    WORD PTR [edi-0x24c02a7],gs
  41b968:	outs   dx,BYTE PTR ds:[esi]
  41b969:	iret   
  41b96a:	jnp    0x41b916
  41b96c:	add    al,BYTE PTR [edx]
  41b96e:	shr    DWORD PTR [ebp+0x28],0x84
  41b972:	xor    edi,esi
  41b974:	inc    esp
  41b975:	in     eax,0xd
  41b977:	out    dx,eax
  41b978:	jp     0x41b93c
  41b97a:	add    dl,bl
  41b97c:	sub    bl,BYTE PTR [ebp+0x57]
  41b97f:	fs (bad) 
  41b981:	push   0x2f347285
  41b986:	mov    ah,0x30
  41b988:	scas   al,BYTE PTR es:[edi]
  41b989:	scas   al,BYTE PTR es:[edi]
  41b98a:	sub    DWORD PTR [ebx+0x20],esp
  41b98d:	dec    ebp
  41b98e:	aaa    
  41b98f:	mov    BYTE PTR [edx],dh
  41b991:	(bad)  
  41b992:	ficom  DWORD PTR [edi+eax*8-0x7f]
  41b996:	sub    eax,0x95ba83dc
  41b99b:	push   es
  41b99c:	arpl   WORD PTR [esi-0x11b0f5aa],sp
  41b9a2:	push   0x475a77d3
  41b9a7:	mov    ds:0x453b632a,al
  41b9ac:	ins    BYTE PTR es:[edi],dx
  41b9ad:	cld    
  41b9ae:	add    eax,DWORD PTR [ebx+0x37]
  41b9b1:	xor    BYTE PTR [edx+0x62a278bd],bh
  41b9b7:	pop    ds
  41b9b8:	and    al,0x37
  41b9ba:	add    cl,BYTE PTR [ecx+0xc]
  41b9bd:	repnz enter 0x91af,0x49
  41b9c2:	adc    eax,0xe48fb2e1
  41b9c7:	push   0xffffffc3
  41b9c9:	arpl   WORD PTR [eax+0x11b941d3],bx
  41b9cf:	add    dh,BYTE PTR [esi-0x5ae0f7d5]
  41b9d5:	fcomi  st,st(2)
  41b9d7:	dec    esi
  41b9d8:	dec    edi
  41b9d9:	sti    
  41b9da:	mov    edx,0xcfc99e3d
  41b9df:	inc    ecx
  41b9e0:	inc    esp
  41b9e1:	(bad)  
  41b9e2:	repnz in al,dx
  41b9e4:	push   ecx
  41b9e5:	shl    BYTE PTR [esi-0x2d],1
  41b9e8:	lods   eax,DWORD PTR ds:[esi]
  41b9e9:	pop    esi
  41b9ea:	popf   
  41b9eb:	(bad)  
  41b9ec:	in     eax,dx
  41b9ed:	xor    ah,BYTE PTR [ebx+0x6e161e87]
  41b9f3:	pop    eax
  41b9f4:	xchg   esi,eax
  41b9f5:	sbb    BYTE PTR [ecx],0x50
  41b9f8:	ss pop ebp
  41b9fa:	adc    DWORD PTR ds:0xaa0b1938,eax
  41ba00:	out    dx,al
  41ba01:	adc    DWORD PTR [ebp+0x1c],ecx
  41ba04:	inc    esi
  41ba05:	jge    0x41ba0b
  41ba07:	(bad)  
  41ba08:	cmp    eax,0xb309189
  41ba0d:	push   ecx
  41ba0e:	mov    ah,0x16
  41ba10:	inc    ebx
  41ba11:	std    
  41ba12:	xchg   ecx,eax
  41ba13:	cmp    edi,DWORD PTR [ecx-0x28]
  41ba16:	lock (bad) 
  41ba18:	in     al,dx
  41ba19:	xor    ch,BYTE PTR [ecx-0x57c2abc1]
  41ba1f:	or     eax,0xfd8e9c3d
  41ba24:	cmpps  xmm2,XMMWORD PTR [ebp-0x60ddef5],0x31
  41ba2c:	mov    bh,0x99
  41ba2e:	les    eax,FWORD PTR [edx+0x13]
  41ba31:	push   esp
  41ba32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba33:	fnstsw WORD PTR [edx]
  41ba35:	test   bh,0x74
  41ba38:	dec    ecx
  41ba39:	xor    esi,eax
  41ba3b:	loop   0x41ba4c
  41ba3d:	leave  
  41ba3e:	mov    ah,0x1e
  41ba40:	rol    DWORD PTR [eax+0x36],1
  41ba43:	pop    eax
  41ba44:	mov    ebx,0x87f01419
  41ba49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba4a:	rcr    DWORD PTR [esi],1
  41ba4c:	mov    ecx,0x2cf9941b
  41ba51:	in     al,dx
  41ba52:	jl     0x41ba42
  41ba54:	push   cs
  41ba55:	xchg   esi,eax
  41ba56:	pop    ds
  41ba57:	sub    DWORD PTR [eax],edi
  41ba59:	jnp    0x41bab1
  41ba5b:	mov    esp,0x7afd8505
  41ba60:	and    ebp,DWORD PTR [edx+0x575f1c68]
  41ba66:	lods   al,BYTE PTR ds:[esi]
  41ba67:	(bad)  
  41ba68:	(bad)  
  41ba69:	lea    ebx,[ebx+0x5a]
  41ba6c:	or     al,0x75
  41ba6e:	call   0x7dac:0xe1576e7
  41ba75:	imul   eax,ecx,0x8077d247
  41ba7b:	in     al,dx
  41ba7c:	jl     0x41babd
  41ba7e:	lea    eax,[edx+ebp*4-0x5af87226]
  41ba85:	cmp    eax,0xa6e731b4
  41ba8a:	mov    BYTE PTR [edi+ebp*4-0x6c],cl
  41ba8e:	stos   BYTE PTR es:[edi],al
  41ba8f:	and    eax,DWORD PTR [edx+0x67]
  41ba92:	icebp  
  41ba93:	cmp    BYTE PTR [eax+0x33845c50],0xd1
  41ba9a:	not    DWORD PTR [ebp+0x70]
  41ba9d:	(bad)
  41baa2:	jb     0x41bb0e
  41baa4:	call   0x8ce0e8ba
  41baa9:	xor    eax,0x2681c18e
  41baae:	xchg   ebx,ecx
  41bab0:	or     eax,DWORD PTR [ebp-0x1f7b3b14]
  41bab6:	mov    al,0x35
  41bab8:	adc    eax,0x480f9e8f
  41babd:	inc    esp
  41babe:	mov    ebx,DWORD PTR [ebx]
  41bac0:	adc    BYTE PTR [esi+0x4363dd3e],cl
  41bac6:	retf   
  41bac7:	sub    dl,BYTE PTR [ebx]
  41bac9:	call   0x7e8017ec
  41bace:	sbb    DWORD PTR ds:0x67588a09,ecx
  41bad4:	outs   dx,BYTE PTR ds:[esi]
  41bad5:	rol    BYTE PTR [esi-0x66],0xe6
  41bad9:	add    cl,BYTE PTR [ebx+ebx*1+0x0]
  41badd:	lods   eax,DWORD PTR ds:[esi]
  41bade:	dec    ebx
  41badf:	push   0xb5b9411
  41bae4:	mov    ebp,0x9d1c6e01
  41bae9:	stos   DWORD PTR es:[edi],eax
  41baea:	mov    ebp,0x165b25c0
  41baef:	je     0x41bb38
  41baf1:	js     0x41bb6a
  41baf3:	inc    esi
  41baf4:	xlat   BYTE PTR ds:[ebx]
  41baf5:	xor    eax,0xe46c2c18
  41bafa:	push   ecx
  41bafb:	retf   0x1fb4
  41bafe:	repnz fcom QWORD PTR [eax+0x79]
  41bb02:	retf   
  41bb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb04:	and    esi,esp
  41bb06:	in     al,dx
  41bb07:	lds    esi,FWORD PTR [esi]
  41bb09:	adc    DWORD PTR [eax+0x7],0x92070439
  41bb10:	lahf   
  41bb11:	and    BYTE PTR [ebx],al
  41bb13:	shr    DWORD PTR [esi-0x2c],cl
  41bb16:	or     eax,0xb59bd9d3
  41bb1b:	test   BYTE PTR [edx],dh
  41bb1d:	dec    esp
  41bb1e:	or     eax,0xb65d0c75
  41bb23:	in     al,0xd2
  41bb25:	mov    ds:0xda5e4803,al
  41bb2a:	out    dx,al
  41bb2b:	fwait
  41bb2c:	test   al,0xc
  41bb2e:	fst    QWORD PTR [esp+ecx*8]
  41bb31:	ds xor dh,cl
  41bb34:	test   DWORD PTR [ebx-0x7ec3cae0],ebp
  41bb3a:	scas   eax,DWORD PTR es:[edi]
  41bb3b:	call   0xfc024ca0
  41bb40:	idiv   BYTE PTR [ecx-0x38c49a3e]
  41bb46:	ds out 0x78,eax
  41bb49:	cmp    BYTE PTR [edi+0x49],dl
  41bb4c:	iret   
  41bb4d:	imul   DWORD PTR [ecx-0x63f77af7]
  41bb53:	xor    ebx,ebp
  41bb55:	inc    esi
  41bb56:	out    0xff,eax
  41bb58:	ja     0x41bafa
  41bb5a:	repnz sub edi,DWORD PTR [edi-0x5]
  41bb5e:	ss and ch,al
  41bb61:	inc    edx
  41bb62:	nop
  41bb63:	cmc    
  41bb64:	outs   dx,DWORD PTR ds:[esi]
  41bb65:	sbb    eax,eax
  41bb67:	mov    ds:0xe5ae6a9f,eax
  41bb6c:	mov    edi,0xea38cd46
  41bb71:	push   edx
  41bb72:	repz dec edx
  41bb74:	push   esp
  41bb75:	das    
  41bb76:	repz push cs
  41bb78:	fs xchg ecx,eax
  41bb7a:	ss pop ebp
  41bb7c:	mov    edx,0x2de3eb78
  41bb82:	enter  0x81c9,0x72
  41bb86:	adc    esp,DWORD PTR [ebp+esi*1-0x20]
  41bb8a:	mov    ebx,0x286ba36e
  41bb8f:	push   es
  41bb90:	add    ebx,ebp
  41bb92:	pextrw edi,(bad),0xc5
  41bb94:	cmp    edx,DWORD PTR [ebx-0x66f74b8a]
  41bb9a:	pop    esi
  41bb9b:	xchg   BYTE PTR gs:[eax-0x1560794e],ah
  41bba2:	dec    BYTE PTR [ebx-0x6d9e8d07]
  41bba8:	inc    esp
  41bba9:	out    dx,eax
  41bbaa:	imul   edi,DWORD PTR [edx-0x5d],0x1949da75
  41bbb1:	ins    DWORD PTR es:[edi],dx
  41bbb2:	nop
  41bbb3:	gs jo  0x41bbb5
  41bbb6:	or     BYTE PTR [ebx],bh
  41bbb8:	outs   dx,DWORD PTR ds:[esi]
  41bbb9:	bound  esp,QWORD PTR [edi+0x7a]
  41bbbc:	andps  xmm3,XMMWORD PTR [ebp+0x59]
  41bbc0:	or     al,0x6d
  41bbc2:	xchg   edi,eax
  41bbc3:	pop    ss
  41bbc4:	xchg   esi,eax
  41bbc5:	pop    eax
  41bbc6:	fist   DWORD PTR [ebp+0x2503fcd0]
  41bbcc:	or     al,0x46
  41bbce:	(bad)  
  41bbd0:	cld    
  41bbd1:	ins    DWORD PTR es:[edi],dx
  41bbd2:	inc    edi
  41bbd3:	sub    eax,0x6b7a607d
  41bbd8:	dec    esi
  41bbd9:	call   0x5442:0xa9e150d6
  41bbe0:	xchg   esi,eax
  41bbe1:	out    0xb7,al
  41bbe3:	sar    DWORD PTR [edx],1
  41bbe5:	sbb    bh,BYTE PTR [ebx+0x5e03336c]
  41bbeb:	stos   BYTE PTR es:[edi],al
  41bbec:	mov    bh,0xd9
  41bbee:	int3   
  41bbef:	mul    DWORD PTR [esi+0x6d]
  41bbf2:	sub    eax,0x2f75e013
  41bbf7:	jge    0x41bc68
  41bbf9:	dec    ecx
  41bbfa:	sub    BYTE PTR [ecx+edi*1-0x7f],ah
  41bbfe:	or     ebx,DWORD PTR [edi]
  41bc00:	int    0x7
  41bc02:	fcom   DWORD PTR [eax]
  41bc04:	sahf   
  41bc05:	mov    ah,0xb3
  41bc07:	xchg   BYTE PTR [esi],ch
  41bc09:	mov    BYTE PTR [esi],bh
  41bc0b:	daa    
  41bc0c:	dec    ebx
  41bc0d:	test   BYTE PTR [esi+eax*2],ch
  41bc10:	fst    DWORD PTR [edi+ecx*2-0x308536f6]
  41bc17:	repnz faddp st(6),st
  41bc1a:	jnp    0x41bbdc
  41bc1c:	pop    eax
  41bc1d:	ds push 0x13346582
  41bc23:	pop    ss
  41bc24:	ds xchg ebx,eax
  41bc26:	cmc    
  41bc27:	mov    ah,0x2a
  41bc29:	jbe    0x41bc16
  41bc2b:	aas    
  41bc2c:	(bad)  [ebx]
  41bc2e:	push   ecx
  41bc2f:	(bad)  
  41bc30:	in     eax,dx
  41bc31:	xlat   BYTE PTR ds:[ebx]
  41bc32:	rcl    BYTE PTR [esi+0x6211d76c],cl
  41bc38:	jmp    0x41bc5b
  41bc3a:	cli    
  41bc3b:	jnp    0x41bbfa
  41bc3d:	add    ebx,DWORD PTR [edi]
  41bc3f:	lock aad 0xcc
  41bc42:	lahf   
  41bc43:	mov    DWORD PTR [edi-0x6da00b13],edx
  41bc49:	cmp    bl,BYTE PTR [eax]
  41bc4b:	int3   
  41bc4c:	sahf   
  41bc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc4e:	fidivr DWORD PTR [edi]
  41bc50:	fimul  WORD PTR [ebp-0x406f45b7]
  41bc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc57:	inc    ecx
  41bc58:	(bad)  
  41bc59:	push   edi
  41bc5a:	adc    al,BYTE PTR [ecx]
  41bc5c:	adc    ch,cl
  41bc5e:	retf   0x1993
  41bc61:	sahf   
  41bc62:	push   ds
  41bc63:	popa   
  41bc64:	push   esi
  41bc65:	jne    0x41bc82
  41bc67:	sub    DWORD PTR [ebp+0x196c9cc5],0xa4dc4380
  41bc71:	inc    eax
  41bc72:	mov    ah,0x25
  41bc74:	cmc    
  41bc75:	pop    eax
  41bc76:	div    DWORD PTR [edi+0x49]
  41bc79:	xchg   ebp,eax
  41bc7a:	and    esi,eax
  41bc7c:	pop    cx
  41bc7e:	jge    0x41bc3f
  41bc80:	in     al,0xee
  41bc82:	loop   0x41bce3
  41bc84:	mov    eax,ds:0xda0b04ac
  41bc89:	mov    ecx,0x74ea4f2b
  41bc8e:	xchg   esp,eax
  41bc8f:	add    BYTE PTR [ebp+eiz*2+0x1dcf6135],dl
  41bc96:	add    BYTE PTR [ebx+0x62],dl
  41bc99:	pop    edx
  41bc9a:	les    ebx,FWORD PTR [ebx+0xe]
  41bc9d:	sub    bl,ah
  41bc9f:	add    eax,0x69b7ea33
  41bca4:	or     BYTE PTR [esi],dl
  41bca6:	push   eax
  41bca7:	or     DWORD PTR [edx+0x2a],edx
  41bcaa:	fwait
  41bcab:	and    edx,esi
  41bcad:	or     DWORD PTR [ebx],esi
  41bcaf:	cmp    BYTE PTR [ecx-0x64e1d7ed],ch
  41bcb5:	arpl   WORD PTR [eax+eax*4-0x62],dx
  41bcb9:	push   0xfcbe9c79
  41bcbe:	push   eax
  41bcbf:	out    dx,al
  41bcc0:	pop    edx
  41bcc1:	mov    ds:0x1a1f1c7,al
  41bcc6:	mov    al,0xa7
  41bcc8:	bound  ecx,QWORD PTR [eax+0x50]
  41bccb:	cwde   
  41bccc:	(bad)  
  41bccd:	jge    0x41bd25
  41bccf:	mov    eax,ds:0x26a6e109
  41bcd4:	test   BYTE PTR [eax-0x573d0265],al
  41bcda:	out    dx,eax
  41bcdb:	cmp    al,0xac
  41bcdd:	bnd jg 0x41bce0
  41bce0:	sub    al,0xcc
  41bce2:	cmp    eax,0x5ae85107
  41bce7:	nop    DWORD PTR [edi-0x57ba6a78]
  41bcee:	test   BYTE PTR [edx+0x35],cl
  41bcf1:	jg     0x41bd0b
  41bcf3:	inc    esp
  41bcf4:	mov    ah,0x67
  41bcf6:	push   0xc08e432e
  41bcfb:	ret    
  41bcfc:	xchg   eax,esi
  41bcfe:	pop    esp
  41bcff:	sahf   
  41bd00:	xchg   ebp,eax
  41bd01:	dec    edi
  41bd02:	sbb    eax,0x3e0d0478
  41bd07:	iret   
  41bd08:	and    al,0xf1
  41bd0a:	jecxz  0x41bd02
  41bd0c:	xchg   ebx,eax
  41bd0d:	lods   eax,DWORD PTR ds:[esi]
  41bd0e:	jp     0x41bca3
  41bd10:	das    
  41bd11:	mov    edx,0x384bbd21
  41bd16:	fmul   DWORD PTR [ebx]
  41bd18:	adc    DWORD PTR ds:0xce5204d8,esp
  41bd1e:	scas   al,BYTE PTR es:[edi]
  41bd1f:	xchg   ebp,eax
  41bd20:	and    al,0x38
  41bd22:	mov    esp,0x9340e13e
  41bd27:	xor    eax,eax
  41bd29:	push   ecx
  41bd2a:	cmp    ch,al
  41bd2c:	arpl   WORD PTR [edx],sp
  41bd2e:	and    eax,0xcc59734e
  41bd33:	cmp    al,0x55
  41bd35:	outs   dx,DWORD PTR ds:[esi]
  41bd36:	mov    esi,0x8d70ba48
  41bd3b:	inc    edx
  41bd3c:	and    esi,DWORD PTR [eax+0x574b9ac6]
  41bd42:	mul    DWORD PTR [edi-0x50]
  41bd45:	push   ecx
  41bd46:	call   0x7e6242b2
  41bd4b:	(bad)  
  41bd4c:	loope  0x41bd35
  41bd4e:	mov    dl,0x65
  41bd50:	ret    
  41bd51:	loope  0x41bd62
  41bd53:	das    
  41bd54:	or     eax,0x16c0b652
  41bd59:	call   0x22d129c2
  41bd5e:	sbb    cl,BYTE PTR [ebp-0x6cdc1cc9]
  41bd64:	sbb    BYTE PTR [edx],bl
  41bd66:	into   
  41bd67:	pusha  
  41bd68:	adc    bl,BYTE PTR [ebp+0x1b4e41e9]
  41bd6e:	dec    ebx
  41bd6f:	sub    eax,0xf8f78b80
  41bd74:	push   ebx
  41bd75:	iret   
  41bd76:	out    0xa0,al
  41bd78:	jecxz  0x41bdf5
  41bd7a:	mov    dl,BYTE PTR [ecx-0x70bce3fb]
  41bd80:	mov    DWORD PTR [ecx-0x40],esi
  41bd83:	adc    BYTE PTR ds:0xf46e9cce,ch
  41bd89:	pop    edx
  41bd8a:	sub    DWORD PTR [esi-0x19fa1ecb],edx
  41bd90:	dec    esp
  41bd91:	call   0x7bcf:0xb98a5a0f
  41bd98:	test   BYTE PTR [edi-0x2639a3a2],ch
  41bd9e:	imul   ebx,ebp,0xd8571187
  41bda4:	lahf   
  41bda5:	fist   WORD PTR [edx]
  41bda7:	(bad)  
  41bda8:	xlat   BYTE PTR ds:[ebx]
  41bda9:	(bad)  
  41bdaa:	mov    cl,0xc
  41bdac:	(bad)  
  41bdae:	ret    0xcb36
  41bdb1:	mov    esi,DWORD PTR [eax+0x78]
  41bdb4:	test   DWORD PTR [ebx-0x78],edx
  41bdb7:	leave  
  41bdb8:	(bad)  
  41bdba:	daa    
  41bdbb:	mov    dl,0x13
  41bdbd:	push   0xc
  41bdbf:	push   eax
  41bdc0:	mov    BYTE PTR [eax],bl
  41bdc2:	xor    ah,dh
  41bdc4:	xor    al,BYTE PTR [eax+0x3835d753]
  41bdca:	loopne 0x41bdbf
  41bdcc:	fwait
  41bdcd:	cmp    al,0x35
  41bdcf:	inc    esp
  41bdd0:	es jmp 0x3953eeee
  41bdd6:	pop    esi
  41bdd7:	sbb    BYTE PTR [ebp+0x19],0x30
  41bddb:	ret    0x6a0a
  41bdde:	adc    DWORD PTR [esi-0x7b],0x65964206
  41bde5:	push   ds
  41bde6:	adc    al,0x7e
  41bde8:	call   0x477e:0xa8da761c
  41bdef:	sti    
  41bdf0:	gs scas al,BYTE PTR es:[edi]
  41bdf2:	or     ch,BYTE PTR [ecx-0x7217dab8]
  41bdf8:	xlat   BYTE PTR ds:[ebx]
  41bdf9:	daa    
  41bdfa:	mov    bh,0x68
  41bdfc:	test   al,0xe0
  41bdfe:	add    al,0x6a
  41be00:	jb     0x41bde6
  41be02:	test   al,0x69
  41be04:	sub    ch,cl
  41be06:	add    bl,dl
  41be08:	push   es
  41be09:	clc    
  41be0a:	es jle 0x41be13
  41be0d:	in     al,0xa0
  41be0f:	repnz daa 
  41be11:	fsub   st(3),st
  41be13:	in     eax,dx
  41be14:	out    0xcc,eax
  41be16:	retf   
  41be17:	pop    edx
  41be18:	mov    ds:0x908c29f0,eax
  41be1d:	daa    
  41be1e:	data16 cmc 
  41be20:	call   0x3bd6:0x40f3a60b
  41be27:	mov    WORD PTR [esi],es
  41be29:	jnp    0x41be8e
  41be2b:	call   0xfebebdd1
  41be30:	cwde   
  41be31:	ret    
  41be32:	xchg   edx,eax
  41be33:	(bad)  
  41be34:	sbb    eax,0x68033e9e
  41be39:	pushaw 
  41be3b:	xor    ebx,0xffffffb5
  41be3e:	into   
  41be3f:	sub    bl,BYTE PTR [edi+edx*4+0x77bcc8ba]
  41be46:	fbld   TBYTE PTR [ecx+0x5cbcc4ff]
  41be4c:	xchg   edx,eax
  41be4d:	sahf   
  41be4e:	pop    edx
  41be4f:	out    dx,eax
  41be50:	cmp    eax,0x604429c6
  41be55:	xchg   bh,cl
  41be57:	xor    al,0x48
  41be59:	ret    0xe770
  41be5c:	pop    es
  41be5d:	ja     0x41be8a
  41be5f:	push   ecx
  41be60:	xlat   BYTE PTR ds:[ebx]
  41be61:	gs stos BYTE PTR es:[edi],al
  41be63:	test   ebx,ebx
  41be65:	int3   
  41be66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be67:	pop    ebp
  41be68:	leave  
  41be69:	sub    dh,BYTE PTR [ecx-0x457760b6]
  41be6f:	dec    edi
  41be70:	mov    bh,0x9a
  41be72:	rcr    eax,1
  41be74:	nop
  41be75:	test   al,0xe1
  41be77:	or     eax,0xf9b205f0
  41be7c:	or     edx,DWORD PTR [eax-0x42f9e1c2]
  41be82:	stc    
  41be83:	ja     0x41be60
  41be85:	repz jo 0x41be0e
  41be88:	sbb    BYTE PTR [eax],0xd2
  41be8b:	mov    ebx,0xa5c3e55a
  41be90:	pop    edi
  41be91:	jle    0x41beef
  41be93:	icebp  
  41be94:	sti    
  41be95:	inc    eax
  41be96:	xchg   ebp,eax
  41be97:	adc    eax,0x810b18ba
  41be9c:	fsubr  QWORD PTR [ecx+0x12fcaa74]
  41bea2:	sub    DWORD PTR [ecx-0x6bb48a77],edx
  41bea8:	sbb    ebx,DWORD PTR [esi+0x4a679902]
  41beae:	sub    eax,0x1a53044c
  41beb3:	push   0xffffffa7
  41beb5:	stc    
  41beb6:	das    
  41beb7:	sbb    eax,0x4fecb7f0
  41bebc:	ds pop ebx
  41bebe:	xchg   esi,eax
  41bebf:	mov    edx,eax
  41bec1:	aas    
  41bec2:	(bad)  [edi-0x45a7235e]
  41bec8:	sub    al,0x18
  41beca:	jns    0x41bf47
  41becc:	push   ds
  41becd:	fist   DWORD PTR [edi+eiz*2]
  41bed0:	mov    bl,0x5e
  41bed2:	pop    esp
  41bed3:	pop    ebp
  41bed4:	xchg   edx,eax
  41bed5:	lods   al,BYTE PTR ds:[esi]
  41bed7:	sbb    al,0x76
  41bed9:	cwde   
  41beda:	inc    ebx
  41bedb:	ret    0x8a5b
  41bede:	call   0xa476:0x5d1238c0
  41bee5:	xchg   edi,eax
  41bee6:	lock push esp
  41bee8:	jp     0x41bf49
  41beea:	scas   al,BYTE PTR es:[edi]
  41beeb:	fwait
  41beec:	sub    bh,cl
  41beee:	and    BYTE PTR [eax],cl
  41bef0:	outs   dx,BYTE PTR ds:[esi]
  41bef1:	in     al,0xe0
  41bef3:	loop   0x41bf47
  41bef5:	aas    
  41bef6:	sbb    esi,DWORD PTR [esi+0x67]
  41bef9:	mov    eax,0xae3874a9
  41befe:	pop    es
  41beff:	rcl    bl,1
  41bf01:	sbb    edi,ecx
  41bf03:	sub    eax,0x4f728494
  41bf08:	pop    ss
  41bf09:	out    dx,al
  41bf0a:	cmp    BYTE PTR [ecx-0x4f],al
  41bf0d:	out    dx,eax
  41bf0e:	popf   
  41bf0f:	pop    ds
  41bf10:	cmp    DWORD PTR [ebx+0x3678163c],ecx
  41bf16:	mov    ch,0x34
  41bf18:	and    al,BYTE PTR [ecx-0x1f]
  41bf1b:	push   ecx
  41bf1c:	sbb    DWORD PTR [ebp+eiz*2+0x63],ebx
  41bf20:	sub    ch,BYTE PTR [ebx+0x5174222e]
  41bf26:	(bad)  
  41bf27:	lock enter 0x1fe8,0x55
  41bf2c:	out    0x83,eax
  41bf2e:	in     al,dx
  41bf2f:	xchg   edx,eax
  41bf30:	pushf  
  41bf31:	(bad)  
  41bf33:	xor    BYTE PTR [ebp-0xb094d84],dh
  41bf39:	nop
  41bf3a:	pop    edi
  41bf3b:	(bad)  
  41bf3c:	and    ecx,DWORD PTR [ecx+0x4090cdf6]
  41bf42:	mov    bh,0x32
  41bf44:	out    0x2a,al
  41bf46:	or     BYTE PTR [ebx],ah
  41bf48:	in     al,0xed
  41bf4a:	out    dx,al
  41bf4b:	in     eax,dx
  41bf4c:	and    DWORD PTR [edx+0x39],0x1a7106dd
  41bf53:	xchg   ebx,eax
  41bf54:	sahf   
  41bf55:	xor    al,BYTE PTR [esi]
  41bf57:	inc    ebx
  41bf58:	jnp    0x41bf56
  41bf5a:	shr    DWORD PTR [ecx+0x33169303],0xc0
  41bf61:	hlt    
  41bf62:	xchg   ecx,eax
  41bf63:	push   edx
  41bf64:	mov    ah,0x8e
  41bf66:	add    eax,0x65ab0cad
  41bf6b:	and    BYTE PTR [ebp-0x1d],dl
  41bf6e:	push   ebp
  41bf6f:	push   edi
  41bf70:	gs ss fcmovnbe st,st(0)
  41bf74:	ror    BYTE PTR [ebx-0x7e4d2838],cl
  41bf7a:	mov    ch,0xde
  41bf7c:	xchg   esi,eax
  41bf7d:	icebp  
  41bf7e:	pop    ss
  41bf7f:	and    DWORD PTR [ebp+0x1b43f048],0x65
  41bf86:	mov    edx,DWORD PTR [edx-0x1ccaa193]
  41bf8c:	fstp   DWORD PTR [esi-0x395a437b]
  41bf92:	mov    cl,0x5
  41bf94:	push   0xc4633fc1
  41bf99:	mov    BYTE PTR [edx+0x7b],0x47
  41bf9d:	adc    DWORD PTR [ebx],ecx
  41bf9f:	xor    esp,DWORD PTR [ecx-0x38]
  41bfa2:	je     0x41bfba
  41bfa4:	push   eax
  41bfa5:	mov    WORD PTR [edi],gs
  41bfa7:	cmc    
  41bfa8:	pusha  
  41bfa9:	add    dh,BYTE PTR [ecx]
  41bfab:	pop    ebp
  41bfac:	push   ds
  41bfad:	jmp    0xcfdb:0x6060bb6f
  41bfb4:	mov    edi,0x6a23688
  41bfb9:	inc    ebx
  41bfba:	in     eax,0xa5
  41bfbc:	test   DWORD PTR [edi],0x769064e7
  41bfc2:	mov    esi,0xee7d7b28
  41bfc7:	(bad)  
  41bfc9:	adc    cl,ah
  41bfcb:	add    eax,0x64af35f3
  41bfd0:	mov    edx,0xa67b9f9e
  41bfd5:	retf   0xf7eb
  41bfd8:	xchg   BYTE PTR [edx+eiz*2-0x70],ch
  41bfdc:	lods   al,BYTE PTR ds:[esi]
  41bfdd:	cmp    al,0xae
  41bfdf:	mov    cl,0x6b
  41bfe1:	rcr    cl,1
  41bfe3:	outs   dx,DWORD PTR ds:[esi]
  41bfe4:	ja     0x41c04f
  41bfe6:	cmp    dl,bl
  41bfe8:	jne    0x41c056
  41bfea:	mov    cl,dl
  41bfec:	push   ds
  41bfed:	jmp    FWORD PTR [ebp+0x49]
  41bff0:	inc    esi
  41bff1:	loop   0x41bfb0
  41bff3:	icebp  
  41bff4:	into   
  41bff5:	jae    0x41c036
  41bff7:	hlt    
  41bff8:	cmp    al,0x53
  41bffa:	popf   
  41bffb:	dec    eax
  41bffc:	lds    esp,FWORD PTR [edx-0x50]
  41bfff:	scas   eax,DWORD PTR es:[edi]
  41c000:	scas   eax,DWORD PTR es:[edi]
  41c001:	or     BYTE PTR [eax],0x16
  41c004:	push   eax
  41c005:	mov    WORD PTR [ebp+eiz*2-0x6aa2c0ac],cs
  41c00c:	sub    eax,0x6a4c3eef
  41c011:	jne    0x41bff0
  41c013:	mov    esi,0x29cef9ae
  41c018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c019:	adc    esp,edi
  41c01b:	xor    eax,0xcf509e3d
  41c020:	jecxz  0x41bfc9
  41c022:	mov    ds:0xe8949c01,eax
  41c027:	sub    bl,0xaa
  41c02a:	or     bh,BYTE PTR [eax]
  41c02c:	dec    esi
  41c02d:	iret   
  41c02e:	shr    DWORD PTR [eax],1
  41c030:	in     al,0xee
  41c032:	loop   0x41bfc3
  41c034:	add    DWORD PTR [ecx+0x3a],esi
  41c037:	add    BYTE PTR [edx+0xf],bh
  41c03a:	int    0xe3
  41c03c:	adc    ecx,0xffffff95
  41c03f:	rcl    ah,cl
  41c041:	mov    al,0x24
  41c043:	xchg   edi,eax
  41c044:	xchg   ebx,eax
  41c045:	sbb    bl,BYTE PTR [ebx+0x48103aad]
  41c04b:	(bad)  
  41c04d:	mov    ch,0xb1
  41c04f:	cmp    edi,DWORD PTR [esi+0x6bba1116]
  41c055:	add    al,BYTE PTR [edx+0x44e719e]
  41c05b:	aas    
  41c05c:	call   0xe8343d6e
  41c061:	outs   dx,BYTE PTR ds:[esi]
  41c062:	(bad)  
  41c064:	cli    
  41c065:	sub    esp,DWORD PTR [eax+edi*2+0x9e5c883]
  41c06c:	and    eax,0x9459548c
  41c071:	dec    ecx
  41c072:	or     BYTE PTR [ebp+edx*4-0x5f],bh
  41c076:	add    BYTE PTR [ecx+0x54e11ddd],cl
  41c07c:	push   es
  41c07d:	jl     0x41c0e2
  41c07f:	add    eax,0xb301cdbe
  41c084:	popa   
  41c085:	mov    cl,ch
  41c087:	jmp    0x41c06e
  41c089:	sub    eax,0x87e7ea45
  41c08e:	fld    QWORD PTR [edx]
  41c090:	mov    BYTE PTR [edi-0x19f0104],ah
  41c096:	ins    BYTE PTR es:[edi],dx
  41c097:	jne    0x41c067
  41c099:	outs   dx,BYTE PTR ds:[esi]
  41c09a:	out    dx,al
  41c09b:	push   edx
  41c09c:	cs fs stos DWORD PTR es:[edi],eax
  41c09f:	imul   edi,DWORD PTR [edx],0x5211506c
  41c0a5:	stos   BYTE PTR es:[edi],al
  41c0a6:	sbb    dl,BYTE PTR [edi+0x1f]
  41c0a9:	int3   
  41c0aa:	out    0xf4,eax
  41c0ac:	out    0xa1,eax
  41c0ae:	mov    esi,0x422b5d14
  41c0b3:	dec    edx
  41c0b4:	inc    eax
  41c0b5:	xchg   edx,eax
  41c0b6:	je     0x41c0fc
  41c0b8:	pop    esi
  41c0b9:	inc    eax
  41c0ba:	cs ror dh,cl
  41c0bd:	add    bh,bh
  41c0bf:	sbb    eax,0xa2b91a31
  41c0c4:	ror    al,1
  41c0c6:	loopne 0x41c0a7
  41c0c8:	(bad)  
  41c0cb:	jno    0x41c0d7
  41c0cd:	fldln2 
  41c0cf:	xor    al,0xf1
  41c0d1:	test   DWORD PTR ds:0x1d30e52f,eax
  41c0d7:	adc    eax,0xa7e88309
  41c0dc:	mov    esi,0xb2d8fb5b
  41c0e1:	(bad)  
  41c0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e3:	inc    esi
  41c0e4:	mov    esi,0xf1a4399b
  41c0e9:	pop    ebx
  41c0ea:	les    esi,FWORD PTR [esi+edi*1-0x47]
  41c0ee:	(bad)  
  41c0ef:	out    dx,al
  41c0f0:	and    dl,BYTE PTR [esp+eax*4+0x58d68f6e]
  41c0f7:	aaa    
  41c0f8:	addr16 (bad) 
  41c0fb:	inc    eax
  41c0fc:	add    bh,dl
  41c0fe:	dec    esp
  41c0ff:	push   ss
  41c100:	loop   0x41c180
  41c102:	jl     0x41c0b8
  41c104:	mov    ah,0x59
  41c106:	or     DWORD PTR [edi-0x1d718258],ebp
  41c10c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c10d:	mov    ebx,0xf298b651
  41c112:	popf   
  41c113:	sbb    DWORD PTR [eax-0x3b],ebp
  41c116:	fisubr DWORD PTR gs:[ecx+0x2f]
  41c11a:	xor    al,0xf1
  41c11c:	pop    ebx
  41c11d:	sub    al,BYTE PTR [eax]
  41c11f:	dec    esi
  41c120:	mov    edi,0xb214f7b0
  41c125:	ficom  WORD PTR [ebp+0x47c156a4]
  41c12b:	sbb    al,bl
  41c12d:	push   ecx
  41c12e:	xor    DWORD PTR [edi-0x3643e8d2],esi
  41c134:	dec    eax
  41c135:	adc    BYTE PTR fs:[edi],ch
  41c138:	mov    cl,0xfa
  41c13a:	mov    dl,ah
  41c13c:	mov    edx,0xa0f38985
  41c141:	jae    0x41c0c6
  41c143:	push   0xffffffe7
  41c145:	jmp    0x82c3faa3
  41c14a:	adc    BYTE PTR [ebx-0x73],bh
  41c14d:	gs loopne 0x41c11e
  41c150:	aam    0xed
  41c152:	rcl    BYTE PTR [edx],0x7e
  41c155:	aaa    
  41c156:	pop    ebx
  41c157:	int3   
  41c158:	push   0x6fa412ed
  41c15d:	pop    eax
  41c15e:	in     al,0x1f
  41c160:	in     al,dx
  41c161:	cmp    dh,ah
  41c163:	sub    dh,ch
  41c165:	adc    ebp,ebx
  41c167:	(bad)  
  41c168:	out    0x10,eax
  41c16a:	push   eax
  41c16b:	rcl    BYTE PTR es:[edi+0x55693e7d],1
  41c172:	and    ah,dh
  41c174:	adc    al,0x31
  41c176:	lock mov al,0x40
  41c179:	push   ss
  41c17a:	push   esi
  41c17b:	inc    ecx
  41c17c:	ret    0xbe9e
  41c17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c180:	mov    edi,eax
  41c182:	push   ss
  41c183:	cs cdq 
  41c185:	cmp    al,0x31
  41c187:	pop    esi
  41c188:	in     al,dx
  41c189:	popf   
  41c18a:	loop   0x41c1b0
  41c18c:	rol    DWORD PTR [edi-0x73fdc8c0],cl
  41c192:	int    0x0
  41c194:	cmp    bh,ah
  41c196:	sub    dl,dl
  41c198:	repnz outs dx,BYTE PTR ds:[esi]
  41c19a:	(bad)
  41c19d:	(bad)  
  41c19e:	cld    
  41c19f:	aaa    
  41c1a0:	add    esi,DWORD PTR [ebp+0x9]
  41c1a3:	jge    0x41c1f2
  41c1a5:	xor    eax,0xe08eb665
  41c1aa:	sub    al,BYTE PTR [edx]
  41c1ac:	ins    DWORD PTR es:[edi],dx
  41c1ad:	xchg   ebp,eax
  41c1ae:	mov    BYTE PTR [edi+0x7450fe75],bh
  41c1b4:	sbb    DWORD PTR [ecx+0x2b],edx
  41c1b7:	outs   dx,BYTE PTR ds:[esi]
  41c1b8:	lds    eax,FWORD PTR [ebx+0x133e05d3]
  41c1be:	sub    eax,DWORD PTR [edx+0x648d89b5]
  41c1c4:	mov    bl,0xf7
  41c1c6:	push   0xffffffac
  41c1c8:	push   0xb285014d
  41c1cd:	push   ss
  41c1ce:	mov    cl,0x4d
  41c1d0:	or     al,0x7
  41c1d2:	mov    ds:0x2680e836,eax
  41c1d7:	fsubrp st(4),st
  41c1da:	xor    al,BYTE PTR [ecx+0x1c07713f]
  41c1e0:	cmp    ebp,DWORD PTR [esi+0x55]
  41c1e3:	retf   
  41c1e4:	mov    bh,0x9
  41c1e6:	mov    cl,0x4b
  41c1e8:	cmp    ch,al
  41c1ea:	cmc    
  41c1eb:	jb     0x41c256
  41c1ed:	les    ecx,FWORD PTR [esi+0x5909d03a]
  41c1f3:	(bad)  
  41c1f4:	and    dh,bl
  41c1f6:	mov    al,ds:0x14876f19
  41c1fb:	xor    dl,BYTE PTR [edi+edx*1]
  41c1fe:	lods   eax,DWORD PTR ds:[esi]
  41c200:	fimul  WORD PTR [esi+eiz*8]
  41c203:	jmp    0x7254bbc3
  41c208:	stos   DWORD PTR es:[edi],eax
  41c209:	(bad)  
  41c20a:	xchg   esi,eax
  41c20b:	lods   eax,DWORD PTR ds:[esi]
  41c20c:	sbb    al,0x11
  41c20e:	inc    esp
  41c20f:	into   
  41c210:	rcl    DWORD PTR [eax-0x37],0x63
  41c214:	lock inc ebp
  41c216:	dec    esi
  41c217:	je     0x41c291
  41c219:	sub    edx,0x60118542
  41c21f:	lahf   
  41c220:	retf   0x531
  41c223:	mov    cl,0xf4
  41c225:	sbb    cl,BYTE PTR [edx-0x77373f15]
  41c22b:	cmp    DWORD PTR [esi+0x88b7658],edx
  41c231:	arpl   WORD PTR ds:0xba4b515f,bx
  41c237:	jg     0x41c1f4
  41c239:	sbb    dl,BYTE PTR [esi+ebp*4-0x11d28ece]
  41c240:	loope  0x41c28b
  41c242:	dec    esi
  41c243:	aam    0x23
  41c245:	fwait
  41c246:	inc    edi
  41c247:	jae    0x41c22b
  41c249:	add    bl,BYTE PTR [edi]
  41c24b:	mov    DWORD PTR [ebp-0x678d1d8a],esp
  41c251:	ret    0x1289
  41c254:	jns    0x41c28c
  41c256:	lahf   
  41c257:	popa   
  41c258:	and    dl,ch
  41c25a:	repnz xchg ebx,eax
  41c25c:	lea    ebp,[eax+0x440b9339]
  41c262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c263:	cmp    eax,0x8e727bf2
  41c268:	retf   0xe929
  41c26b:	inc    ecx
  41c26c:	inc    edi
  41c26d:	(bad)  
  41c26e:	in     al,dx
  41c26f:	add    DWORD PTR [ebp+eiz*8-0x17],ecx
  41c273:	push   0xfffea15d
  41c278:	mov    ebp,0x77b3b884
  41c27d:	fbld   TBYTE PTR [ecx]
  41c27f:	inc    eax
  41c280:	xlat   BYTE PTR ds:[ebx]
  41c281:	ss dec eax
  41c283:	and    al,0x7e
  41c285:	add    bh,BYTE PTR [ecx]
  41c287:	lods   eax,DWORD PTR ds:[esi]
  41c288:	pop    ds
  41c289:	mov    ch,0x86
  41c28b:	jnp    0x41c2b5
  41c28d:	ins    DWORD PTR es:[edi],dx
  41c28e:	das    
  41c28f:	or     ebx,DWORD PTR [edi]
  41c291:	pop    edi
  41c292:	fcomp  DWORD PTR [ecx]
  41c294:	xchg   BYTE PTR [ecx-0x1e],bl
  41c297:	push   edi
  41c298:	cmp    BYTE PTR [eax-0x6f83f4b7],0x43
  41c29f:	push   es
  41c2a0:	pop    cx
  41c2a2:	jae    0x41c2ef
  41c2a4:	inc    eax
  41c2a5:	mov    esp,0xbacfce0c
  41c2aa:	aam    0x1c
  41c2ac:	cmp    eax,0x889afb2
  41c2b1:	fsin   
  41c2b3:	cmc    
  41c2b4:	test   DWORD PTR [ecx],edx
  41c2b6:	jne    0x41c25d
  41c2b8:	repz xor edx,edx
  41c2bb:	(bad)  
  41c2bc:	inc    ebx
  41c2bd:	test   BYTE PTR [ebp+0x7c],ch
  41c2c0:	or     BYTE PTR [ebp-0x32],dl
  41c2c3:	ror    ebp,1
  41c2c5:	lahf   
  41c2c6:	cmp    DWORD PTR [esi+0x1f279680],edx
  41c2cc:	dec    ebx
  41c2cd:	ins    DWORD PTR es:[edi],dx
  41c2ce:	in     eax,dx
  41c2cf:	sbb    al,0xb
  41c2d1:	call   0xfb2620e4
  41c2d6:	fcomp  QWORD PTR [eax+0x29]
  41c2d9:	adc    al,0xfb
  41c2db:	dec    eax
  41c2dc:	sub    esi,ebp
  41c2de:	adc    eax,esi
  41c2e0:	test   BYTE PTR [esi+0x3b7a0632],0x7e
  41c2e7:	adc    dl,BYTE PTR [ebx-0xb9b76fa]
  41c2ed:	jle    0x41c321
  41c2ef:	pop    ds
  41c2f0:	imul   ebp,DWORD PTR [ecx-0x4d],0xa51d0587
  41c2f7:	(bad)  
  41c2f8:	(bad)  
  41c2f9:	mov    esp,0xbda5a22f
  41c2fe:	adc    eax,0x72120a4c
  41c303:	pmullw mm1,QWORD PTR [edi+0x280b7bf7]
  41c30a:	jne    0x41c343
  41c30c:	lock test eax,0xd1bd85bd
  41c312:	pop    eax
  41c313:	adc    ecx,DWORD PTR [edx+0x41]
  41c316:	call   0xe19:0xcfae9737
  41c31d:	mov    edi,0x53bfa819
  41c322:	and    BYTE PTR [eax-0x77],0xe3
  41c326:	test   BYTE PTR [eax+0x8f0fcb4],ch
  41c32c:	out    dx,al
  41c32d:	inc    ebx
  41c32e:	sub    eax,0xe66a172a
  41c333:	dec    edi
  41c334:	ins    BYTE PTR es:[edi],dx
  41c335:	test   eax,0x84a65bfc
  41c33a:	mov    ds:0x452a8763,eax
  41c33f:	push   0x3d
  41c341:	cmp    ah,bl
  41c343:	test   al,0xc
  41c345:	stos   DWORD PTR es:[edi],eax
  41c346:	dec    edx
  41c347:	xchg   edx,eax
  41c348:	push   0xb
  41c34a:	adc    eax,0x47fc0bbe
  41c34f:	in     al,dx
  41c350:	js     0x41c340
  41c352:	mul    BYTE PTR [esi-0x57a1b33]
  41c358:	leave  
  41c359:	dec    edx
  41c35a:	scas   al,BYTE PTR es:[edi]
  41c35b:	daa    
  41c35c:	test   al,0x66
  41c35e:	push   edx
  41c35f:	dec    ebx
  41c360:	sbb    ebx,DWORD PTR [edx-0x9]
  41c363:	test   al,0xf3
  41c365:	stos   BYTE PTR es:[edi],al
  41c366:	or     DWORD PTR [eax+0x52],ecx
  41c369:	push   esi
  41c36a:	in     eax,0x99
  41c36c:	push   0xfffffff7
  41c36e:	jl     0x41c3c5
  41c370:	int    0x62
  41c372:	sbb    bl,dl
  41c374:	mov    ecx,0x1011e2cd
  41c379:	ins    BYTE PTR es:[edi],dx
  41c37a:	cmp    eax,eax
  41c37c:	outs   dx,BYTE PTR ds:[esi]
  41c37d:	clc    
  41c37e:	data16 (bad) 
  41c380:	jns    0x41c314
  41c382:	mov    bh,ah
  41c384:	outs   dx,BYTE PTR ds:[esi]
  41c385:	fdivr  st,st(6)
  41c387:	adc    eax,0xc3089c38
  41c38c:	aaa    
  41c38d:	push   ebx
  41c38e:	pop    edi
  41c38f:	daa    
  41c390:	xor    dh,BYTE PTR [ebp+0x52]
  41c393:	addr16 adc edx,ebp
  41c396:	cmp    DWORD PTR [eax-0x35ee54c3],ebx
  41c39c:	jp     0x41c390
  41c39e:	bound  esi,QWORD PTR [edi-0x50]
  41c3a1:	adc    DWORD PTR [ebx+0x36791b8d],edx
  41c3a7:	test   al,0x34
  41c3a9:	int    0xc2
  41c3ab:	into   
  41c3ac:	mov    ebx,0xfdab1fa8
  41c3b1:	in     eax,dx
  41c3b2:	js     0x41c340
  41c3b4:	out    0xdd,eax
  41c3b6:	mov    ebx,0xeb3ed13b
  41c3bb:	xor    eax,0xe48af6e5
  41c3c0:	mul    DWORD PTR [edx]
  41c3c2:	outs   dx,DWORD PTR ds:[esi]
  41c3c3:	bound  esi,QWORD PTR [esi+0xb]
  41c3c6:	push   esp
  41c3c7:	mov    dh,0x8f
  41c3c9:	dec    esi
  41c3ca:	sahf   
  41c3cb:	mov    esp,DWORD PTR [esi-0x38c4eb43]
  41c3d1:	jmp    0x7df1:0xe5f2797d
  41c3d8:	call   0x8a65:0xda9c1ba6
  41c3df:	(bad)  [esi]
  41c3e1:	(bad)
  41c3e4:	sbb    BYTE PTR [esp+eiz*4-0x62bc498e],ch
  41c3eb:	or     eax,0x13e8d32e
  41c3f0:	cmp    al,0x9d
  41c3f2:	(bad)  
  41c3f3:	xchg   ebx,eax
  41c3f4:	in     eax,0x9d
  41c3f6:	retf   0x5b5e
  41c3f9:	push   cs
  41c3fa:	push   esp
  41c3fb:	ins    BYTE PTR es:[edi],dx
  41c3fc:	scas   eax,DWORD PTR es:[edi]
  41c3fd:	jnp    0x41c453
  41c3ff:	cdq    
  41c400:	jbe    0x41c3e8
  41c402:	test   DWORD PTR [edi+0x4ea2e0e4],edx
  41c408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c409:	jmp    0x4da8:0x386c723d
  41c410:	sbb    eax,0xd3791034
  41c415:	mov    dh,0xda
  41c417:	mov    esi,DWORD PTR [esi]
  41c419:	cmp    DWORD PTR [eax-0xf],edx
  41c41c:	test   DWORD PTR [edi],edi
  41c41e:	into   
  41c41f:	bound  ecx,QWORD PTR [edx]
  41c421:	arpl   ax,dx
  41c423:	jae    0x41c48c
  41c425:	(bad)  
  41c426:	scas   al,BYTE PTR es:[edi]
  41c427:	xchg   esi,eax
  41c428:	mul    DWORD PTR [ebx+0x5889bee6]
  41c42e:	inc    ebx
  41c42f:	cmp    dl,BYTE PTR [ecx]
  41c431:	pop    ecx
  41c432:	xchg   ecx,eax
  41c433:	imul   edi,ebx,0x47e0e96f
  41c439:	inc    ebx
  41c43a:	sub    eax,0x742ce995
  41c43f:	aaa    
  41c440:	je     0x41c49a
  41c442:	ss jle 0x41c420
  41c445:	push   DWORD PTR [eax+edi*2-0x54]
  41c449:	lock sbb DWORD PTR [esi-0x1],edi
  41c44d:	aaa    
  41c44e:	dec    ecx
  41c44f:	add    BYTE PTR [esi],dh
  41c451:	imul   ecx,DWORD PTR [eax+0x79bf7218],0xffffff9e
  41c458:	add    BYTE PTR [ecx],al
  41c45a:	outs   dx,DWORD PTR ds:[esi]
  41c45b:	bound  ecx,QWORD PTR [ebx-0x1a]
  41c45e:	add    ah,ch
  41c460:	test   al,0xa8
  41c462:	sbb    al,0x49
  41c464:	out    dx,eax
  41c465:	repnz dec eax
  41c467:	mov    cl,0x80
  41c469:	jno    0x41c4e9
  41c46b:	sbb    ah,al
  41c46d:	jae    0x41c459
  41c46f:	in     eax,dx
  41c470:	pushf  
  41c471:	and    BYTE PTR [ebx],bh
  41c473:	jmp    0x8762:0xf46854b5
  41c47a:	(bad)  
  41c47b:	(bad)  
  41c47c:	scas   eax,DWORD PTR es:[di]
  41c47e:	add    BYTE PTR [esi+0x4a],al
  41c481:	test   eax,0x5a12dc3d
  41c486:	add    esp,DWORD PTR [ecx]
  41c488:	(bad)  
  41c489:	mov    al,ds:0xc31f4527
  41c48e:	sbb    eax,ebp
  41c490:	je     0x41c50b
  41c492:	enter  0x5caa,0x76
  41c496:	mov    dl,0xd8
  41c498:	fwait
  41c499:	xchg   BYTE PTR [eax-0x59bf94c7],ch
  41c49f:	mov    ch,0xcb
  41c4a1:	iret   
  41c4a2:	retf   
  41c4a3:	adc    al,0xe3
  41c4a5:	mov    edx,0xcd7cdac6
  41c4aa:	retf   
  41c4ab:	adc    edi,esp
  41c4ad:	xlat   BYTE PTR ds:[ebx]
  41c4ae:	pop    es
  41c4af:	push   edx
  41c4b0:	dec    esp
  41c4b1:	mov    WORD PTR [ecx+0x20],fs
  41c4b4:	sbb    BYTE PTR [ebp-0x23],dh
  41c4b7:	and    dl,BYTE PTR fs:[ebp+0x1bb9c8ab]
  41c4be:	inc    edi
  41c4bf:	pop    esi
  41c4c0:	push   esp
  41c4c1:	pop    esp
  41c4c2:	call   0xf864d30b
  41c4c7:	pop    eax
  41c4c8:	dec    ebp
  41c4c9:	retf   0x34f
  41c4cc:	loop   0x41c4bf
  41c4ce:	test   al,0x9f
  41c4d0:	data16 icebp 
  41c4d2:	xchg   DWORD PTR [edx+eax*2+0xc],ebp
  41c4d6:	std    
  41c4d7:	popf   
  41c4d8:	push   ss
  41c4d9:	fistp  WORD PTR [edi+0x44]
  41c4dc:	(bad)  
  41c4dd:	aad    0xb7
  41c4df:	cli    
  41c4e0:	repnz or DWORD PTR [edx],esp
  41c4e3:	push   ss
  41c4e4:	jb     0x41c470
  41c4e6:	in     al,0x2c
  41c4e8:	mov    ds:0x4434abfb,eax
  41c4ed:	btc    DWORD PTR [edx],0xfc
  41c4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4f2:	rol    BYTE PTR [edx],cl
  41c4f4:	stos   DWORD PTR es:[edi],eax
  41c4f5:	enter  0xfd77,0x9e
  41c4f9:	mov    WORD PTR [esi],cs
  41c4fb:	pop    ebx
  41c4fc:	sub    al,0xff
  41c4fe:	push   0x1c218470
  41c503:	xchg   DWORD PTR [edx],ebx
  41c505:	das    
  41c506:	pusha  
  41c507:	std    
  41c508:	push   ss
  41c509:	nop
  41c50a:	loop   0x41c4b7
  41c50c:	and    eax,DWORD PTR [ebp-0xd]
  41c50f:	push   cs
  41c510:	push   es
  41c511:	aam    0xda
  41c513:	mov    ecx,0x9f73a285
  41c518:	aaa    
  41c519:	lods   eax,DWORD PTR ds:[esi]
  41c51a:	sahf   
  41c51b:	pop    es
  41c51c:	leave  
  41c51d:	mov    cl,0x81
  41c51f:	lds    edi,FWORD PTR [ecx]
  41c521:	cmp    eax,0x9e80e8d2
  41c526:	outs   dx,DWORD PTR ds:[esi]
  41c527:	xor    ecx,DWORD PTR [eax+0x7f40fdfe]
  41c52d:	sub    eax,DWORD PTR [ebx-0x1faa0466]
  41c533:	add    bl,ah
  41c535:	inc    edx
  41c536:	ds push ecx
  41c538:	dec    esi
  41c539:	cdq    
  41c53a:	xor    DWORD PTR [ebx-0x4c0b36e5],esp
  41c540:	xchg   esi,eax
  41c541:	mov    ecx,0xc8f14397
  41c546:	xor    al,0x55
  41c548:	int    0xed
  41c54a:	shl    DWORD PTR [esi],1
  41c54c:	jo     0x41c4d6
  41c54e:	jl     0x41c576
  41c550:	and    eax,ecx
  41c552:	call   0x1153:0xdfaf6b09
  41c559:	daa    
  41c55a:	mov    bl,0x21
  41c55c:	push   ebx
  41c55d:	sub    al,0x79
  41c55f:	push   ebx
  41c560:	jg     0x41c5ad
  41c562:	cmp    ah,BYTE PTR [esi-0x76]
  41c565:	iret   
  41c566:	add    DWORD PTR [ebx],ebx
  41c568:	push   edx
  41c569:	jae    0x41c5ac
  41c56b:	nop
  41c56c:	stos   BYTE PTR es:[edi],al
  41c56d:	pop    ebx
  41c56e:	jmp    0x41c50b
  41c570:	sahf   
  41c571:	cs pusha 
  41c573:	arpl   di,bx
  41c575:	adc    al,0xf1
  41c577:	sub    eax,0xf40aa130
  41c57c:	les    esp,FWORD PTR [edx+0x12]
  41c57f:	push   eax
  41c580:	sub    bh,BYTE PTR [eax-0x61]
  41c583:	mov    ebp,esp
  41c585:	outs   dx,DWORD PTR ds:[esi]
  41c586:	mov    bh,0xcc
  41c588:	push   ecx
  41c589:	mov    ebx,0xd5b43b40
  41c58e:	je     0x41c5fd
  41c590:	add    eax,0x13ec5240
  41c595:	mov    edx,0x2fc0b56c
  41c59a:	mov    bh,0xb7
  41c59c:	jge    0x41c57f
  41c59e:	(bad)  
  41c59f:	in     eax,0x92
  41c5a1:	mov    edi,0xca2d8d27
  41c5a6:	test   ecx,edi
  41c5a8:	push   ss
  41c5a9:	or     esi,edi
  41c5ab:	sub    eax,0xa794ef7a
  41c5b0:	in     eax,0xbd
  41c5b2:	add    ebp,esi
  41c5b4:	inc    eax
  41c5b5:	mov    ebp,0xe168b3f6
  41c5ba:	call   0xa21a0da8
  41c5bf:	add    DWORD PTR [ecx],esi
  41c5c1:	inc    ebx
  41c5c2:	out    0xc2,al
  41c5c4:	imul   ebp,ecx,0x41e7744c
  41c5ca:	adc    DWORD PTR [edi-0x27c7e63d],0x7e
  41c5d1:	shl    esp,cl
  41c5d3:	sub    DWORD PTR [esi-0x78],esi
  41c5d6:	jmp    0x41c576
  41c5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5d9:	add    bh,BYTE PTR [esi]
  41c5db:	repz std 
  41c5dd:	pop    eax
  41c5de:	add    edx,DWORD PTR [ebx]
  41c5e0:	jo     0x41c5ae
  41c5e2:	gs js  0x41c661
  41c5e5:	je     0x41c645
  41c5e7:	leave  
  41c5e8:	stc    
  41c5e9:	iret   
  41c5ea:	nop
  41c5eb:	les    ecx,FWORD PTR [ecx-0x3b]
  41c5ee:	xchg   ecx,eax
  41c5ef:	aas    
  41c5f0:	sbb    al,0x67
  41c5f2:	fdivr  DWORD PTR [ebx-0x3c]
  41c5f5:	add    DWORD PTR ds:0x108a19a8,ebx
  41c5fb:	test   DWORD PTR [ecx],esi
  41c5fd:	inc    esp
  41c5fe:	sar    dh,1
  41c600:	and    bh,BYTE PTR [esi]
  41c602:	dec    ebx
  41c603:	mov    esi,DWORD PTR [esi+0x1a]
  41c606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c607:	jnp    0x41c641
  41c609:	pop    es
  41c60a:	cmp    bl,BYTE PTR [eax+0x79]
  41c60d:	bound  edi,QWORD PTR [edx+0x6a]
  41c610:	xlat   BYTE PTR ds:[ebx]
  41c611:	push   0xba2e3e60
  41c616:	cmp    DWORD PTR [edx],esi
  41c618:	and    esp,edi
  41c61a:	dec    ebx
  41c61b:	pop    ebx
  41c61c:	push   cs
  41c61d:	test   al,0x56
  41c61f:	(bad)  
  41c620:	cdq    
  41c621:	or     al,bh
  41c623:	dec    edi
  41c624:	pop    esp
  41c625:	mov    esp,0x8d264f18
  41c62a:	rcl    edi,1
  41c62c:	push   ebp
  41c62d:	ret    0xb244
  41c630:	fsubr  DWORD PTR [ebx+0x16df4940]
  41c636:	std    
  41c637:	adc    DWORD PTR [esi+eiz*1+0x60ebc54e],eax
  41c63e:	mov    edx,0x1e73083e
  41c643:	rol    BYTE PTR [ecx],1
  41c645:	cmc    
  41c646:	lock sbb BYTE PTR [ebx],cl
  41c649:	loope  0x41c600
  41c64b:	js     0x41c6c6
  41c64d:	inc    ecx
  41c64e:	push   ds
  41c64f:	outs   dx,BYTE PTR ds:[esi]
  41c650:	adc    al,0x8d
  41c652:	cld    
  41c653:	pop    eax
  41c654:	data16 (bad) 
  41c656:	call   0xffbb:0x49d43943
  41c65d:	lds    ebx,FWORD PTR [esi]
  41c65f:	jle    0x41c65f
  41c661:	pop    edi
  41c662:	add    cl,BYTE PTR [eax+0x1]
  41c665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c666:	into   
  41c667:	sub    ebx,DWORD PTR [edx+edx*8]
  41c66a:	sti    
  41c66b:	or     al,0x88
  41c66d:	cmp    dl,BYTE PTR [ebx-0x6090c53e]
  41c673:	xor    BYTE PTR [edx-0x74],cl
  41c676:	push   0x8dd655b0
  41c67b:	mov    eax,0xbbb9fdfd
  41c680:	xchg   ebx,eax
  41c681:	jp     0x41c6f6
  41c683:	in     eax,dx
  41c684:	test   al,0x13
  41c686:	test   DWORD PTR [esp+esi*8+0x3c],eax
  41c68a:	jno    0x41c6b9
  41c68c:	sub    eax,0x825e048
  41c691:	xor    al,0xa8
  41c693:	fs or  ebp,esp
  41c696:	add    eax,0x61cd91c4
  41c69b:	scas   eax,DWORD PTR es:[edi]
  41c69c:	shr    BYTE PTR [esi],1
  41c69e:	dec    ax
  41c6a0:	fdivp  st(2),st
  41c6a2:	in     eax,dx
  41c6a3:	sub    bl,ah
  41c6a5:	out    dx,al
  41c6a6:	aam    0xc4
  41c6a8:	std    
  41c6a9:	push   0x7eca987f
  41c6ae:	push   ss
  41c6af:	add    ch,al
  41c6b1:	ins    DWORD PTR es:[edi],dx
  41c6b2:	dec    ebp
  41c6b3:	mov    al,ds:0xdc096599
  41c6b8:	push   0x3cb907
  41c6bd:	icebp  
  41c6be:	rcr    BYTE PTR [edi+0xaa72959],1
  41c6c4:	sbb    BYTE PTR [edx-0x350ce885],bh
  41c6ca:	mov    gs,WORD PTR [esi-0x77]
  41c6cd:	das    
  41c6ce:	add    ax,WORD PTR [eax-0x29c10f94]
  41c6d5:	add    BYTE PTR [ebp+0x7f],ah
  41c6d8:	addr16 repnz daa 
  41c6db:	xor    eax,0x6443b143
  41c6e0:	add    BYTE PTR [eax-0x72],ch
  41c6e3:	jae    0x41c72d
  41c6e5:	iret   
  41c6e6:	mov    ah,0x66
  41c6e8:	das    
  41c6e9:	ins    DWORD PTR es:[edi],dx
  41c6ea:	xchg   esi,eax
  41c6eb:	xor    cl,dh
  41c6ed:	cld    
  41c6ee:	pop    esp
  41c6ef:	lahf   
  41c6f0:	or     ch,ch
  41c6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f3:	cmc    
  41c6f4:	push   ds
  41c6f5:	xor    DWORD PTR [edx+0x3],ecx
  41c6f8:	mov    edx,0x6c4a43df
  41c6fd:	adc    eax,0x3499392e
  41c702:	sub    al,0x34
  41c704:	lock popa 
  41c706:	fild   WORD PTR [edi+0x3906c710]
  41c70c:	dec    esi
  41c70d:	push   ebp
  41c70e:	inc    ebp
  41c70f:	dec    ebx
  41c710:	hlt    
  41c711:	add    dh,dl
  41c713:	in     al,0x3f
  41c715:	cmc    
  41c716:	push   ss
  41c717:	jmp    0x41c6ad
  41c719:	lahf   
  41c71a:	fcomp  st(6)
  41c71c:	and    ebp,DWORD PTR [edx]
  41c71e:	in     eax,dx
  41c71f:	xchg   ebx,eax
  41c720:	stos   DWORD PTR es:[edi],eax
  41c721:	sbb    al,0x5a
  41c723:	or     bl,BYTE PTR [edx+0x72]
  41c726:	mov    bl,bh
  41c728:	(bad)
  41c72b:	shr    DWORD PTR [eax+0x40],1
  41c72e:	cmc    
  41c72f:	mov    ds:0x53e4006b,eax
  41c734:	and    BYTE PTR [edi+0x258e70],al
  41c73a:	xchg   esi,eax
  41c73b:	cmp    al,bl
  41c73d:	cmp    dh,BYTE PTR [eax]
  41c73f:	push   edx
  41c740:	lods   eax,DWORD PTR ds:[esi]
  41c741:	addr16 dec edi
  41c743:	into   
  41c744:	mov    ah,0x72
  41c746:	mov    edx,DWORD PTR [edx+0x396f852c]
  41c74c:	inc    edi
  41c74d:	call   0xbe36:0xbbba4925
  41c754:	push   esi
  41c755:	xchg   ebx,eax
  41c756:	cmc    
  41c757:	and    bh,dl
  41c759:	stc    
  41c75a:	cwde   
  41c75b:	mov    ds:0xcc534267,eax
  41c760:	loopne 0x41c71d
  41c762:	rol    BYTE PTR [eax-0xd830a2b],0xfa
  41c769:	popf   
  41c76a:	into   
  41c76b:	jnp    0x41c705
  41c76d:	popf   
  41c76e:	cmp    ah,BYTE PTR ds:0xb7451e4e
  41c774:	cld    
  41c775:	push   edx
  41c776:	inc    eax
  41c777:	inc    DWORD PTR [esi+eiz*8+0x43dc85e2]
  41c77e:	push   ebp
  41c77f:	mov    ebx,0xc03968f8
  41c784:	or     edi,DWORD PTR [edx-0x5782ecfa]
  41c78a:	hlt    
  41c78b:	in     al,dx
  41c78c:	(bad)  
  41c78d:	cld    
  41c78e:	mov    ds:0x29c2ca22,eax
  41c793:	stc    
  41c794:	iret   
  41c795:	pop    es
  41c796:	mov    eax,ds:0x86d35533
  41c79b:	test   DWORD PTR [ebp-0x4e73360b],ebp
  41c7a1:	in     eax,0xa1
  41c7a3:	pop    edx
  41c7a4:	jmp    0xf6d55968
  41c7a9:	outs   dx,DWORD PTR ds:[esi]
  41c7aa:	in     eax,0x7f
  41c7ac:	aas    
  41c7ad:	in     eax,0x2e
  41c7af:	xchg   DWORD PTR ds:0xbe6dc8b0,eax
  41c7b5:	scas   eax,DWORD PTR es:[edi]
  41c7b6:	rcl    DWORD PTR [esi+0x3a],cl
  41c7b9:	and    cl,ah
  41c7bb:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c7bd:	jmp    0xec96b483
  41c7c2:	add    BYTE PTR [ecx],dh
  41c7c4:	mov    BYTE PTR [ecx-0x26],dh
  41c7c7:	or     DWORD PTR [ebp+0x15],edi
  41c7ca:	sub    al,0x23
  41c7cc:	(bad)  
  41c7cd:	push   ecx
  41c7ce:	stos   BYTE PTR es:[edi],al
  41c7cf:	xchg   edi,eax
  41c7d0:	adc    al,0xb5
  41c7d2:	add    al,0x6
  41c7d4:	or     eax,0xffada30b
  41c7d9:	loope  0x41c782
  41c7db:	ins    DWORD PTR es:[edi],dx
  41c7dc:	sbb    dh,BYTE PTR [edi+ebp*8]
  41c7df:	in     al,dx
  41c7e0:	inc    edx
  41c7e1:	ret    0x2677
  41c7e4:	mov    esi,0xaa403ce8
  41c7e9:	out    dx,al
  41c7ea:	xor    al,0xb2
  41c7ec:	lods   eax,DWORD PTR ds:[esi]
  41c7ed:	inc    ebp
  41c7ee:	xor    al,BYTE PTR [ebx+0x303521c6]
  41c7f4:	mov    ebp,0xe8deab3f
  41c7f9:	into   
  41c7fa:	arpl   si,ax
  41c7fc:	mov    eax,0xc2733993
  41c801:	xchg   esp,eax
  41c802:	mov    edi,0x24c0512a
  41c807:	pop    esi
  41c808:	fild   WORD PTR [ecx]
  41c80a:	xor    dl,dh
  41c80c:	xor    BYTE PTR [eax+ebx*8],al
  41c80f:	push   edx
  41c810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c811:	lds    eax,FWORD PTR [edi+0x3b]
  41c814:	ins    BYTE PTR es:[edi],dx
  41c815:	jge    0x41c838
  41c817:	cmp    al,0x91
  41c819:	pop    ebx
  41c81a:	mov    ebp,0x91df929c
  41c81f:	sub    dh,BYTE PTR [ebp+0x39]
  41c822:	xlat   BYTE PTR ds:[ebx]
  41c823:	outs   dx,DWORD PTR ds:[esi]
  41c824:	call   0xea268feb
  41c829:	fistp  WORD PTR [ecx-0x753ec6d4]
  41c82f:	test   eax,0x96fa057d
  41c834:	cmp    eax,0xf7f2cc67
  41c839:	scas   eax,DWORD PTR es:[edi]
  41c83a:	pop    esp
  41c83b:	jecxz  0x41c7f0
  41c83d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c83e:	sar    DWORD PTR [ebp-0x7b099699],1
  41c844:	int    0xa6
  41c846:	std    
  41c847:	jp     0x41c8b1
  41c849:	or     DWORD PTR [edi],ecx
  41c84b:	jecxz  0x41c8a3
  41c84d:	lods   al,BYTE PTR ds:[esi]
  41c84e:	jg     0x41c8b4
  41c850:	div    dl
  41c852:	jmp    0xee392237
  41c857:	(bad)  
  41c858:	cmp    ebp,edx
  41c85a:	jp     0x41c82e
  41c85c:	(bad)  
  41c85d:	lock outs dx,BYTE PTR ds:[esi]
  41c85f:	cld    
  41c860:	call   0xeaf5fba9
  41c865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c866:	lock ins BYTE PTR es:[edi],dx
  41c868:	test   DWORD PTR [eax+0x14d9dcb3],ecx
  41c86e:	jp     0x41c860
  41c870:	fs mov ecx,0x6af6ec4b
  41c876:	xchg   ecx,eax
  41c877:	and    DWORD PTR [ebx-0x5e],0x40f73875
  41c87e:	mov    edx,edx
  41c880:	stos   BYTE PTR es:[edi],al
  41c881:	jne    0x41c874
  41c883:	xchg   edx,eax
  41c884:	cwde   
  41c885:	jmp    0x2358955f
  41c88a:	xlat   BYTE PTR es:[ebx]
  41c88c:	shl    bh,0x1a
  41c88f:	lods   eax,DWORD PTR ds:[esi]
  41c890:	mul    esi
  41c892:	cmp    al,0xa5
  41c894:	sti    
  41c895:	inc    ecx
  41c896:	sub    eax,0x9d3a36ba
  41c89b:	adc    ch,ch
  41c89d:	sbb    ecx,DWORD PTR [edi]
  41c89f:	adc    dl,BYTE PTR [edi]
  41c8a1:	sbb    al,0xe3
  41c8a3:	add    ebp,DWORD PTR [ebp+edi*8+0x2dd26a87]
  41c8aa:	pop    esi
  41c8ab:	aam    0x51
  41c8ad:	push   edi
  41c8ae:	pop    ebp
  41c8af:	xchg   esp,eax
  41c8b0:	sar    ecx,0x52
  41c8b3:	sbb    BYTE PTR [eax+0x38],0xdf
  41c8b7:	sbb    edx,ebp
  41c8b9:	jge    0x41c903
  41c8bb:	xchg   esp,eax
  41c8bc:	sbb    BYTE PTR [eax+ecx*1+0x18],bl
  41c8c0:	mov    BYTE PTR [ecx-0x72],0xfb
  41c8c4:	cwde   
  41c8c5:	in     eax,0x1b
  41c8c7:	shl    BYTE PTR [esi+0x18],1
  41c8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8cb:	ins    DWORD PTR es:[edi],dx
  41c8cc:	clc    
  41c8cd:	imul   ecx
  41c8cf:	xor    DWORD PTR [edx+0x4d],0xffffffca
  41c8d3:	push   ss
  41c8d4:	arpl   bp,ax
  41c8d6:	mov    edx,0xc23fbfe7
  41c8db:	(bad)  
  41c8dc:	cld    
  41c8dd:	or     esi,edx
  41c8df:	cwde   
  41c8e0:	fadd   DWORD PTR [esi+0x2a]
  41c8e3:	sbb    ah,BYTE PTR [esi-0x28]
  41c8e6:	jnp    0x41c911
  41c8e8:	xchg   al,al
  41c8ea:	call   0xeaebedc0
  41c8ef:	inc    ebp
  41c8f0:	out    0xbe,al
  41c8f2:	repz and al,0xd5
  41c8f5:	add    eax,0x9f65ad68
  41c8fa:	iret   
  41c8fb:	in     eax,dx
  41c8fc:	repnz or ecx,DWORD PTR ds:0x9dd2f0d0
  41c903:	xchg   BYTE PTR [eax-0x590a4a4d],bh
  41c909:	test   al,0x49
  41c90b:	sbb    dl,BYTE PTR [ecx]
  41c90d:	popa   
  41c90e:	int3   
  41c90f:	and    al,0x4
  41c911:	push   edi
  41c912:	or     dh,BYTE PTR [esi]
  41c914:	in     al,0x9f
  41c916:	out    0x2,al
  41c918:	mov    edx,DWORD PTR [ebx+ebx*2-0x158e06ff]
  41c91f:	in     al,dx
  41c920:	jle    0x41c8b4
  41c922:	and    bl,BYTE PTR [esi]
  41c924:	xchg   edi,eax
  41c925:	scas   eax,DWORD PTR es:[edi]
  41c926:	popf   
  41c927:	fsubr  QWORD PTR [ecx+0x7b]
  41c92a:	dec    BYTE PTR [edx]
  41c92c:	sub    dh,BYTE PTR [esi-0x1e61f77b]
  41c932:	sar    BYTE PTR [eax+0x53],0x23
  41c936:	call   0x87e1512
  41c93b:	xor    BYTE PTR [esi+0x13b4a818],al
  41c941:	lods   eax,DWORD PTR ds:[esi]
  41c942:	mov    ds:0x619df400,al
  41c947:	sar    BYTE PTR [edx+ecx*1-0x145274b1],1
  41c94e:	cmp    DWORD PTR [ecx-0x4b],ecx
  41c951:	mov    ebx,0x906066c3
  41c956:	lea    ecx,[edi]
  41c958:	test   al,0xc0
  41c95a:	in     eax,dx
  41c95b:	aas    
  41c95c:	mov    ebx,0x609bddf0
  41c961:	pop    ds
  41c962:	jnp    0x41c97d
  41c964:	mov    bl,0xcd
  41c966:	push   esi
  41c967:	push   esi
  41c968:	jge    0x41c95b
  41c96a:	imul   esp,DWORD PTR [esi],0xffffff8a
  41c96d:	shl    BYTE PTR [edx+0x7eac63ac],cl
  41c973:	call   0x6086:0x601d00b0
  41c97a:	imul   esi,edx,0x78
  41c97d:	leave  
  41c97e:	ret    
  41c97f:	and    DWORD PTR [edi+0x48835877],esp
  41c985:	xchg   DWORD PTR [ecx+0x64f8aabe],esi
  41c98b:	cmp    DWORD PTR [edi-0x7bbabca2],eax
  41c991:	pop    ebp
  41c992:	loop   0x41c925
  41c994:	xchg   esp,eax
  41c995:	mov    al,0x5d
  41c997:	sub    cl,BYTE PTR [ebx]
  41c999:	in     al,0x96
  41c99b:	or     eax,0xf1ccdc97
  41c9a0:	mov    edx,0x789f31e6
  41c9a5:	cs dec eax
  41c9a7:	ror    edi,0xfc
  41c9aa:	mov    cl,0x6d
  41c9ac:	xchg   DWORD PTR [ebp+0x44],edi
  41c9af:	jg     0x41c9a9
  41c9b1:	jp     0x41c98a
  41c9b3:	lds    ebp,FWORD PTR [eax-0x6e]
  41c9b6:	fisubr WORD PTR ds:0xa34d88c4
  41c9bc:	or     DWORD PTR [edi-0x64d9133e],esp
  41c9c2:	sahf   
  41c9c3:	mov    al,ds:0xdbf23373
  41c9c8:	mov    ebx,0x457d4b20
  41c9cd:	test   dl,bl
  41c9cf:	cmp    bh,BYTE PTR [ebx]
  41c9d1:	jae    0x41c9e6
  41c9d3:	xor    eax,0xb27c272e
  41c9d8:	(bad)  
  41c9da:	mov    eax,0x6ca14f1e
  41c9df:	stos   BYTE PTR es:[edi],al
  41c9e0:	dec    ebx
  41c9e1:	in     al,0x7b
  41c9e3:	lods   al,BYTE PTR ds:[esi]
  41c9e4:	push   ecx
  41c9e5:	xor    eax,0xb00ea4b6
  41c9ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9eb:	mov    al,cs:0x7afed00c
  41c9f1:	xor    DWORD PTR [esp+edx*8-0x30aa12e9],ecx
  41c9f8:	xor    eax,DWORD PTR [edx+0x4b]
  41c9fb:	loope  0x41c988
  41c9fd:	jbe    0x41c9ae
  41c9ff:	loop   0x41c99b
  41ca01:	push   cs
  41ca02:	test   al,0xbc
  41ca04:	adc    eax,0x3cf9cc5f
  41ca09:	(bad)  [ebx]
  41ca0b:	sub    al,0x67
  41ca0d:	push   esp
  41ca0e:	div    DWORD PTR [eax+0x10]
  41ca11:	dec    edi
  41ca12:	or     BYTE PTR [ecx+0x12],dl
  41ca15:	pop    ebx
  41ca16:	int    0x5f
  41ca18:	inc    esp
  41ca19:	ins    BYTE PTR es:[edi],dx
  41ca1a:	arpl   cx,bx
  41ca1c:	retf   
  41ca1d:	gs pop ds
  41ca1f:	stc    
  41ca20:	sub    eax,esp
  41ca22:	test   esi,edi
  41ca24:	dec    eax
  41ca25:	and    al,0x12
  41ca27:	gs jo  0x41ca96
  41ca2a:	gs aad 0x7e
  41ca2d:	xchg   dh,dl
  41ca2f:	bound  edi,QWORD PTR [ecx+ebp*1-0x4b]
  41ca33:	fwait
  41ca34:	fwait
  41ca35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca36:	pop    esp
  41ca37:	dec    ebx
  41ca38:	adc    al,bh
  41ca3a:	add    al,0x79
  41ca3c:	in     eax,0x65
  41ca3e:	je     0x41c9e1
  41ca40:	repnz retf 0x1024
  41ca44:	and    dl,BYTE PTR [ecx]
  41ca46:	fbstp  TBYTE PTR [esi-0x34]
  41ca49:	or     cl,BYTE PTR [edx+0x591b1bef]
  41ca4f:	jb     0x41c9d5
  41ca51:	or     al,0x2c
  41ca53:	fdivr  QWORD PTR [edx-0x6e]
  41ca56:	test   DWORD PTR [ecx+0x78],eax
  41ca59:	inc    esi
  41ca5a:	(bad)
  41ca5d:	pop    es
  41ca5e:	xor    ebx,DWORD PTR ds:0x9a23f905
  41ca64:	cld    
  41ca65:	xchg   ecx,eax
  41ca66:	mov    ds:0xb4b3d91b,al
  41ca6b:	sti    
  41ca6c:	jno    0x41ca00
  41ca6e:	cmp    edx,DWORD PTR [ecx]
  41ca70:	out    dx,eax
  41ca71:	out    0xb4,al
  41ca73:	dec    eax
  41ca74:	nop
  41ca75:	cs dec edi
  41ca77:	mov    ch,BYTE PTR [ebp-0x61]
  41ca7a:	nop
  41ca7b:	(bad)  
  41ca7c:	pop    eax
  41ca7d:	mov    bl,0x4
  41ca7f:	jmp    0x41ca97
  41ca81:	retf   
  41ca82:	stc    
  41ca83:	(bad)  
  41ca84:	jge    0x41ca75
  41ca86:	out    0xc3,eax
  41ca88:	xor    ebx,DWORD PTR [si]
  41ca8b:	scas   al,BYTE PTR es:[edi]
  41ca8c:	cmp    al,al
  41ca8e:	push   edi
  41ca8f:	jl     0x41ca7f
  41ca91:	fisub  WORD PTR [edx+0x6b0b5e15]
  41ca97:	jb     0x41ca7f
  41ca99:	inc    ebx
  41ca9a:	sbb    DWORD PTR [ecx+0x7a],ebx
  41ca9d:	dec    ebx
  41ca9e:	call   0xfdc9:0x6b853473
  41caa5:	inc    ebx
  41caa6:	xor    edx,esp
  41caa8:	(bad)  
  41caa9:	pop    ebx
  41caaa:	and    DWORD PTR [esi+eax*8-0x4901b28],eax
  41cab1:	je     0x41cb11
  41cab3:	and    bl,BYTE PTR [ecx-0x38f79da9]
  41cab9:	(bad)  
  41caba:	cli    
  41cabb:	retf   0x8985
  41cabe:	add    DWORD PTR [ecx-0x8],ecx
  41cac1:	jo     0x41cad0
  41cac3:	inc    ebx
  41cac4:	stc    
  41cac5:	mov    ebp,0x8212473f
  41caca:	sar    BYTE PTR [eax+0x22ecf2c4],0x6
  41cad1:	and    ecx,DWORD PTR [edx]
  41cad3:	leave  
  41cad4:	xchg   esi,eax
  41cad5:	mov    al,0x1a
  41cad7:	jg     0x41ca69
  41cad9:	xlat   BYTE PTR ds:[ebx]
  41cada:	pop    edi
  41cadb:	sub    edi,DWORD PTR [eax-0x2c]
  41cade:	addr16 jo 0x41ca9d
  41cae1:	mov    WORD PTR [eax+ecx*4+0x40706d55],ss
  41cae8:	push   esi
  41cae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caeb:	clc    
  41caec:	xor    BYTE PTR [edi],dl
  41caee:	jg     0x41cb01
  41caf0:	jmp    0x3cb1:0xefbe04c7
  41caf7:	popf   
  41caf8:	jb     0x41cab1
  41cafa:	out    0xd3,al
  41cafc:	addr16 (bad) 
  41cafe:	sbb    dh,BYTE PTR [ecx-0x7a7bc8f7]
  41cb04:	pushf  
  41cb05:	das    
  41cb06:	stc    
  41cb07:	cwde   
  41cb08:	push   ss
  41cb09:	pusha  
  41cb0a:	mov    eax,0xd0f7b0e0
  41cb0f:	(bad)  
  41cb10:	xlat   BYTE PTR ds:[ebx]
  41cb11:	push   ecx
  41cb12:	pop    ds
  41cb13:	or     DWORD PTR [ebx+ebx*4-0x3c54ad95],0x75
  41cb1b:	fidivr WORD PTR [eax*2-0x7e599cb8]
  41cb22:	fisubr WORD PTR [edx]
  41cb24:	xor    edi,DWORD PTR [ebp+0x3390938a]
  41cb2a:	xor    ch,BYTE PTR [edi-0x67b34c64]
  41cb30:	mov    eax,0x4b634fd7
  41cb35:	pop    ebp
  41cb36:	int    0x6c
  41cb38:	dec    ecx
  41cb39:	push   es
  41cb3a:	or     bh,al
  41cb3c:	dec    DWORD PTR [ebx+0xf503fb1]
  41cb42:	and    edi,DWORD PTR [ebx]
  41cb44:	test   al,0x69
  41cb46:	jns    0x41cacc
  41cb48:	repz ja 0x41cb68
  41cb4b:	mov    WORD PTR [ebp-0x43a25b21],gs
  41cb51:	clc    
  41cb52:	in     al,dx
  41cb53:	add    al,0xba
  41cb55:	popf   
  41cb56:	leave  
  41cb57:	rcr    BYTE PTR [edi+ecx*2],0x74
  41cb5b:	div    BYTE PTR [ecx-0x254be96a]
  41cb61:	bound  esp,QWORD PTR [eax-0x19c04ce4]
  41cb67:	dec    esi
  41cb68:	dec    ecx
  41cb69:	dec    esi
  41cb6a:	out    dx,al
  41cb6b:	fwait
  41cb6c:	hlt    
  41cb6d:	jmp    0x41cb04
  41cb6f:	test   DWORD PTR [esi],esp
  41cb71:	sahf   
  41cb72:	mov    eax,ds:0x85b5a540
  41cb77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb78:	shl    DWORD PTR [ecx+ebx*2-0x64],cl
  41cb7c:	dec    esp
  41cb7d:	and    DWORD PTR [esi],esp
  41cb7f:	mov    ecx,0x8a793c73
  41cb84:	ss jne 0x41cb5d
  41cb87:	xchg   esi,eax
  41cb88:	fwait
  41cb89:	stos   BYTE PTR es:[edi],al
  41cb8a:	mov    ch,0x60
  41cb8c:	lock scas al,BYTE PTR es:[edi]
  41cb8e:	clc    
  41cb8f:	xchg   DWORD PTR [ecx-0x26],eax
  41cb92:	loope  0x41cb58
  41cb94:	pop    esi
  41cb95:	pop    ebx
  41cb96:	fwait
  41cb97:	mov    bh,0xff
  41cb99:	sub    DWORD PTR gs:[edx+0x65be30eb],edi
  41cba0:	or     dh,BYTE PTR ds:0x3b31d250
  41cba6:	fld    QWORD PTR [edi-0xb]
  41cba9:	jg     0x41cb7b
  41cbab:	cmp    dh,BYTE PTR [esi]
  41cbad:	push   ds
  41cbae:	xor    dl,0x7f
  41cbb1:	ja     0x41cbdb
  41cbb3:	mov    bl,0x35
  41cbb5:	mov    ebp,es
  41cbb7:	into   
  41cbb8:	jnp    0x41cbca
  41cbba:	sub    DWORD PTR [esi-0x26038644],ebp
  41cbc0:	jmp    0x41cbf7
  41cbc2:	fld    TBYTE PTR [ebx]
  41cbc4:	sysexit 
  41cbc6:	in     eax,0xb2
  41cbc8:	(bad)  
  41cbc9:	xchg   edx,eax
  41cbca:	mov    esi,0xdb329b9d
  41cbcf:	stos   BYTE PTR es:[edi],al
  41cbd0:	and    eax,DWORD PTR [ebx]
  41cbd2:	xchg   cl,dh
  41cbd4:	outs   dx,DWORD PTR ds:[esi]
  41cbd5:	sub    BYTE PTR ds:0x8b8eeb2,dl
  41cbdb:	inc    edx
  41cbdc:	mov    ch,0x7b
  41cbde:	cmp    esi,ebx
  41cbe0:	pop    esi
  41cbe1:	dec    ebx
  41cbe2:	cmp    BYTE PTR [eax+ebp*2+0x74],al
  41cbe6:	dec    esp
  41cbe7:	dec    ecx
  41cbe8:	add    eax,0xe770b098
  41cbed:	call   0x738:0xa3ff368f
  41cbf4:	sub    eax,0x77e3c4bd
  41cbf9:	xlat   BYTE PTR ds:[ebx]
  41cbfa:	mov    BYTE PTR [bx+si-0x4dab],dh
  41cbff:	sbb    edx,DWORD PTR [ebp+0x56f428c1]
  41cc05:	lds    edx,FWORD PTR [eax]
  41cc07:	aas    
  41cc08:	push   es
  41cc09:	lods   eax,DWORD PTR ds:[esi]
  41cc0a:	mov    ecx,0x7574854c
  41cc0f:	mov    ah,0xe9
  41cc11:	xchg   ebx,eax
  41cc12:	sub    DWORD PTR [esi+eiz*8-0x52ebd903],0x75
  41cc1a:	push   ss
  41cc1b:	push   esp
  41cc1c:	mov    edi,esi
  41cc1e:	sbb    BYTE PTR [edi+edi*4-0x36f72feb],0x7e
  41cc26:	mov    eax,0x74701609
  41cc2b:	xchg   DWORD PTR [edi+0x14],ebp
  41cc2e:	sbb    al,BYTE PTR [ebx]
  41cc30:	popa   
  41cc31:	dec    esi
  41cc32:	xchg   ebp,eax
  41cc33:	aam    0xff
  41cc35:	test   al,0x34
  41cc37:	mov    esp,DWORD PTR [esi+ebp*1]
  41cc3a:	ss push ebx
  41cc3c:	mov    bh,0x4
  41cc3e:	sbb    BYTE PTR [edx+0x28351c01],0xc6
  41cc45:	ja     0x41cc1c
  41cc47:	inc    ebp
  41cc48:	mov    ds:0x592b7b57,al
  41cc4d:	jp     0x41cc95
  41cc4f:	add    eax,0xbc2528ff
  41cc54:	je     0x41cc5f
  41cc56:	dec    edi
  41cc57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc58:	rcr    BYTE PTR [edi+0x49],cl
  41cc5b:	(bad)  [ebx]
  41cc5d:	jmp    0x3abf0030
  41cc62:	or     esi,DWORD PTR [esi-0x7e]
  41cc65:	push   0x66
  41cc67:	mov    ds:0x4db2e197,al
  41cc6c:	adc    eax,0x6e9afe5
  41cc71:	pop    ebx
  41cc72:	rcl    BYTE PTR [esi+0xc],0x22
  41cc76:	dec    edx
  41cc77:	mov    cs,WORD PTR [esi+0x5ec997e8]
  41cc7d:	inc    DWORD PTR [ecx+0x4e02fc77]
  41cc83:	(bad)
  41cc87:	mov    al,ds:0xa49472bc
  41cc8c:	add    ah,BYTE PTR [edi-0x46]
  41cc8f:	test   al,0x89
  41cc91:	mov    ds:0xd0e5daef,eax
  41cc96:	shr    BYTE PTR [eax+0x4c],1
  41cc99:	shl    BYTE PTR [edx],0x7b
  41cc9c:	mov    ds,edi
  41cc9e:	sahf   
  41cc9f:	and    al,0x8e
  41cca1:	mov    ch,BYTE PTR [edx+0x20]
  41cca4:	popa   
  41cca5:	sbb    ecx,DWORD PTR [ebx+eiz*2-0x31cbdf85]
  41ccac:	xor    al,0x9a
  41ccae:	mov    cl,BYTE PTR [eax-0x1a56d947]
  41ccb4:	pop    esp
  41ccb5:	in     eax,dx
  41ccb6:	lds    ebp,FWORD PTR [edx]
  41ccb8:	dec    edi
  41ccb9:	cld    
  41ccba:	pushf  
  41ccbb:	imul   edi,DWORD PTR [ebx],0xe926c616
  41ccc1:	loope  0x41cc6f
  41ccc3:	dec    edi
  41ccc4:	add    ebx,DWORD PTR [ebx]
  41ccc6:	imul   esi,DWORD PTR [ebp+0x125e4529],0xfffffff0
  41cccd:	mov    esi,0x49d74105
  41ccd2:	pushf  
  41ccd3:	push   es
  41ccd4:	pop    ebx
  41ccd5:	(bad)  
  41ccd6:	(bad)  
  41ccd7:	fisub  WORD PTR [ebx+0x6]
  41ccda:	mov    eax,0x3e384f3f
  41ccdf:	aam    0xdb
  41cce1:	jl     0x41cd39
  41cce3:	out    0xfe,al
  41cce5:	xchg   esi,eax
  41cce6:	repnz jmp 0x244a:0xa64c3cc8
  41ccee:	(bad)  
  41ccef:	ror    BYTE PTR [edx],1
  41ccf1:	sub    bh,dl
  41ccf3:	jmp    0x6db27b23
  41ccf8:	push   ebx
  41ccf9:	inc    ebx
  41ccfa:	in     al,dx
  41ccfb:	or     eax,0x9b4b5615
  41cd00:	cld    
  41cd01:	or     BYTE PTR [ecx-0x6a],al
  41cd04:	and    cl,BYTE PTR [esi+esi*8+0x71e9c9be]
  41cd0b:	ins    BYTE PTR es:[edi],dx
  41cd0c:	retf   
  41cd0d:	ret    0x10ab
  41cd10:	fsubr  st(5),st
  41cd12:	sar    cl,0xda
  41cd15:	jmp    0xc91c38bc
  41cd1a:	jl     0x41cccb
  41cd1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd1d:	dec    edi
  41cd1e:	xor    al,0xd2
  41cd20:	push   ebx
  41cd21:	stc    
  41cd22:	dec    ebx
  41cd23:	xchg   esp,eax
  41cd24:	pcmpgtd mm4,QWORD PTR [edi]
  41cd27:	repnz mov al,0x58
  41cd2a:	out    dx,al
  41cd2b:	lea    ebp,[ecx+0x79df4b61]
  41cd31:	cmp    eax,0x533e1b3d
  41cd36:	(bad)  
  41cd37:	scas   al,BYTE PTR es:[edi]
  41cd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd39:	mov    DWORD PTR [eax+0x28],edi
  41cd3c:	pop    ecx
  41cd3d:	dec    eax
  41cd3e:	add    esi,edi
  41cd40:	cmp    BYTE PTR [ebx-0x45881797],ch
  41cd46:	xchg   ecx,eax
  41cd47:	xchg   ecx,edx
  41cd49:	into   
  41cd4a:	cwde   
  41cd4b:	sahf   
  41cd4c:	add    dl,bh
  41cd4e:	aas    
  41cd4f:	dec    esp
  41cd50:	mov    esp,0xb6a8a716
  41cd55:	cli    
  41cd56:	imul   edx,DWORD PTR [edx-0x7829ebb1],0x979d65c9
  41cd60:	stc    
  41cd61:	lea    edi,[ebp+0x43871ed4]
  41cd67:	jns    0x41cd11
  41cd69:	je     0x41cdc2
  41cd6b:	repnz popa 
  41cd6d:	jecxz  0x41ccf8
  41cd6f:	ins    DWORD PTR es:[edi],dx
  41cd70:	push   es
  41cd71:	pushf  
  41cd72:	ror    BYTE PTR [edi],1
  41cd74:	(bad)  
  41cd75:	mov    al,ds:0x3ca335cb
  41cd7a:	cmp    eax,0xd999bd78
  41cd7f:	push   es
  41cd80:	mov    esi,0xc9e9cb4c
  41cd85:	cmp    DWORD PTR [eax-0x42b4a331],eax
  41cd8b:	cs inc edi
  41cd8d:	sbb    eax,0x2688472c
  41cd92:	push   0xa5329a1
  41cd97:	imul   ecx,DWORD PTR [edx],0xffffffa8
  41cd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd9b:	in     al,dx
  41cd9c:	pop    esi
  41cd9d:	add    esi,DWORD PTR [ebx+0x6d]
  41cda0:	or     eax,0xbb4c2970
  41cda5:	(bad)  
  41cda6:	or     eax,0x65347af4
  41cdab:	jnp    0x41ce0d
  41cdad:	inc    eax
  41cdae:	mov    BYTE PTR [edi-0xc],dh
  41cdb1:	call   0x6dc9:0x9bcb51b6
  41cdb8:	mov    ebx,0x8c785870
  41cdbd:	mov    ecx,0x48bc4eb4
  41cdc2:	and    BYTE PTR [eax-0x3d3d91e6],ch
  41cdc8:	mov    edi,edi
  41cdca:	mov    esi,0x794dfad5
  41cdcf:	ret    0x3aeb
  41cdd2:	scas   al,BYTE PTR es:[edi]
  41cdd3:	adc    ah,ah
  41cdd5:	dec    ebp
  41cdd6:	daa    
  41cdd7:	or     eax,0xd74f2883
  41cddc:	fistp  QWORD PTR [ebx-0x5618069f]
  41cde2:	ret    0x5cf0
  41cde5:	mov    ch,0x1
  41cde7:	mov    bh,0xe
  41cde9:	sub    eax,0x5257c77
  41cdee:	fs je  0x41ce6e
  41cdf1:	loop   0x41cd86
  41cdf3:	sahf   
  41cdf4:	mov    bl,0xdb
  41cdf6:	icebp  
  41cdf7:	jns    0x41cdbb
  41cdf9:	jbe    0x41cde2
  41cdfb:	pop    edi
  41cdfc:	dec    edx
  41cdfd:	pop    edx
  41cdfe:	adc    al,0xf0
  41ce00:	out    0x64,eax
  41ce02:	sub    bh,BYTE PTR [ebx-0x78]
  41ce05:	or     bl,BYTE PTR [ecx-0x24]
  41ce08:	sar    DWORD PTR [ecx-0x4cbc116a],0x65
  41ce0f:	inc    esi
  41ce10:	and    eax,0xc8c07bb4
  41ce15:	fbstp  TBYTE PTR [ebp-0x190fa8b1]
  41ce1b:	push   ebx
  41ce1c:	add    eax,0xadba3996
  41ce21:	mov    ds:0xa471b450,al
  41ce26:	add    DWORD PTR [esi],0x1d956760
  41ce2c:	or     edi,DWORD PTR [ebx]
  41ce2e:	pop    es
  41ce2f:	test   DWORD PTR [ecx+0x72],edx
  41ce32:	pop    ebx
  41ce33:	les    ebp,FWORD PTR [eax+edi*2-0x63]
  41ce37:	adc    eax,0x54c65cc1
  41ce3c:	jmp    0x46da:0x430db5ed
  41ce43:	cs jmp 0x41cdf2
  41ce46:	aas    
  41ce47:	push   ecx
  41ce48:	pop    esi
  41ce49:	clc    
  41ce4a:	xchg   DWORD PTR [ebx+edi*2-0x55],ecx
  41ce4e:	jle    0x41ce21
  41ce50:	scas   eax,DWORD PTR es:[edi]
  41ce51:	in     eax,dx
  41ce52:	xchg   edi,eax
  41ce53:	mov    es,WORD PTR [ebx+edi*8-0x378129d0]
  41ce5a:	jge    0x41cdff
  41ce5c:	dec    ebx
  41ce5d:	scas   al,BYTE PTR es:[edi]
  41ce5e:	daa    
  41ce5f:	mov    dh,BYTE PTR [edx-0x6ce07ad8]
  41ce65:	imul   esi,ebx,0xfffffff9
  41ce68:	mov    BYTE PTR gs:[eax],ch
  41ce6b:	jbe    0x41ce1d
  41ce6d:	shl    BYTE PTR [ecx+edi*1-0x6b1e6c24],cl
  41ce74:	mov    ebp,0xccffc03f
  41ce79:	and    cl,BYTE PTR [eax]
  41ce7b:	jb     0x41ce94
  41ce7d:	push   edi
  41ce7e:	lods   al,BYTE PTR ds:[esi]
  41ce7f:	mov    BYTE PTR [ebp-0x5c091f4f],dl
  41ce85:	test   al,0x9e
  41ce87:	add    BYTE PTR [edi+ecx*1],bl
  41ce8a:	mov    esp,0xbfcbc052
  41ce8f:	or     eax,0x365b17d7
  41ce94:	fisubr WORD PTR [ebx]
  41ce96:	in     al,dx
  41ce97:	jg     0x41cee8
  41ce99:	pop    edi
  41ce9a:	dec    ebp
  41ce9b:	and    WORD PTR [esi],0xff91
  41ce9f:	pop    ds
  41cea0:	xchg   BYTE PTR [ecx+0x4bf8aeee],ah
  41cea6:	fist   WORD PTR [esi-0x56ad961d]
  41ceac:	nop
  41cead:	dec    esp
  41ceae:	pop    eax
  41ceaf:	mov    edx,0xb9d3ab42
  41ceb4:	mov    edx,0x488ea5df
  41ceb9:	test   ah,cl
  41cebb:	inc    ebp
  41cebc:	call   DWORD PTR [ebx]
  41cebe:	and    cl,dh
  41cec0:	push   ecx
  41cec1:	cwde   
  41cec2:	hlt    
  41cec3:	les    esp,FWORD PTR [esi-0x68e7a86e]
  41cec9:	mov    dl,0x63
  41cecb:	push   esi
  41cecc:	xlat   BYTE PTR ds:[ebx]
  41cecd:	jae    0x41ce78
  41cecf:	stc    
  41ced0:	mov    ah,0x2
  41ced2:	or     DWORD PTR [eax+0x4b4f3350],ebx
  41ced8:	fldenv [edx-0x5f]
  41cedb:	mov    bh,0x9d
  41cedd:	int    0x9b
  41cedf:	out    0xc0,al
  41cee1:	pop    ecx
  41cee2:	pop    edx
  41cee3:	stos   DWORD PTR es:[edi],eax
  41cee4:	and    BYTE PTR [ecx],al
  41cee6:	sub    edi,DWORD PTR [ecx-0x757cda25]
  41ceec:	push   0x52b8c45d
  41cef1:	and    DWORD PTR [eax-0x76ecd45b],eax
  41cef7:	pop    ecx
  41cef8:	test   BYTE PTR [eax+edx*4],cl
  41cefb:	(bad)  
  41cefc:	cmc    
  41cefd:	in     al,0x2c
  41ceff:	sub    edx,DWORD PTR [eax]
  41cf01:	push   ebx
  41cf02:	xor    al,0x15
  41cf04:	scas   al,BYTE PTR es:[edi]
  41cf05:	rcl    DWORD PTR ds:0x97fd115d,1
  41cf0b:	ins    BYTE PTR es:[edi],dx
  41cf0c:	xchg   ecx,eax
  41cf0d:	inc    ebx
  41cf0e:	fsubr  DWORD PTR [esi-0x5e0452f8]
  41cf14:	sub    edx,DWORD PTR [ebp-0x63]
  41cf17:	and    ecx,DWORD PTR [edx-0x366ac18b]
  41cf1d:	mov    WORD PTR [ebx],es
  41cf1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf20:	xchg   ecx,eax
  41cf21:	adc    BYTE PTR [ebp+0x3e],dh
  41cf24:	shr    esp,1
  41cf26:	jns    0x41cf02
  41cf28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf29:	mov    ebx,DWORD PTR [ebx+esi*4-0x79]
  41cf2d:	es jg  0x41cf64
  41cf30:	mov    ebx,0xf8f40fe2
  41cf35:	inc    esp
  41cf36:	mov    al,ds:0x6178422e
  41cf3b:	adc    eax,0x73237abe
  41cf40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf41:	enter  0x2c6d,0xe3
  41cf45:	mov    cl,0xd2
  41cf47:	cli    
  41cf48:	in     al,0x7e
  41cf4a:	or     al,0x1e
  41cf4c:	lock or ebx,edx
  41cf4f:	cli    
  41cf50:	fwait
  41cf51:	hlt    
  41cf52:	mov    esp,0xb00e76a2
  41cf57:	ss fs dec esp
  41cf5a:	push   0xa53a8223
  41cf5f:	mov    al,BYTE PTR [esi+0x36c6259f]
  41cf65:	cmp    eax,0x43fed351
  41cf6a:	int    0x5e
  41cf6c:	push   0x59eec922
  41cf71:	outs   dx,BYTE PTR fs:[esi]
  41cf73:	cmc    
  41cf74:	jbe    0x41cf27
  41cf76:	lea    edx,[ecx+eax*4-0x46]
  41cf7a:	mov    bl,0x10
  41cf7c:	mov    eax,ds:0x29596c82
  41cf81:	push   edx
  41cf82:	jnp    0x41cf8b
  41cf84:	push   esp
  41cf85:	cmp    al,0x83
  41cf87:	adc    BYTE PTR [ecx],0x41
  41cf8a:	std    
  41cf8b:	jmp    0x6e5a2b98
  41cf90:	fmul   DWORD PTR [ebx]
  41cf92:	dec    eax
  41cf93:	fs dec ebp
  41cf95:	push   ecx
  41cf96:	nop
  41cf97:	mov    ds:0xe144d87a,eax
  41cf9c:	out    dx,eax
  41cf9d:	test   eax,0x93a7890a
  41cfa2:	and    eax,0x9d1f015c
  41cfa7:	int    0xb3
  41cfa9:	jne    0x41cfba
  41cfab:	cwde   
  41cfac:	stos   DWORD PTR es:[edi],eax
  41cfad:	jmp    0x41cfcb
  41cfaf:	mov    al,fs:0x6986308c
  41cfb5:	jmp    0x43544f13
  41cfba:	inc    edx
  41cfbb:	add    eax,DWORD PTR [esi]
  41cfbd:	aaa    
  41cfbe:	loope  0x41cfbc
  41cfc0:	stc    
  41cfc1:	jp     0x41cffe
  41cfc3:	mov    dh,0x12
  41cfc5:	cmp    cl,dh
  41cfc7:	inc    ebp
  41cfc8:	adc    cl,BYTE PTR [edi-0x69]
  41cfcb:	or     eax,0xa39fb274
  41cfd0:	or     bh,BYTE PTR [ecx+0x62d3f9d7]
  41cfd6:	daa    
  41cfd7:	jmp    0x41cfc3
  41cfd9:	mov    esi,0xf1f6fe04
  41cfde:	imul   esp,DWORD PTR [edi],0x8ea52182
  41cfe4:	ins    BYTE PTR es:[edi],dx
  41cfe5:	retf   0x9c89
  41cfe8:	xchg   ebp,eax
  41cfe9:	jg     0x41cffb
  41cfeb:	mov    ds:0x3feb6bf5,al
  41cff0:	or     bl,dl
  41cff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cff3:	jae    0x41d02d
  41cff5:	mov    eax,0x959cfb1f
  41cffa:	mov    edx,0x90ef4f44
  41cfff:	test   eax,0x81a2c5ae
  41d004:	(bad)  
  41d005:	xor    al,0xe0
  41d007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d008:	and    al,0x66
  41d00a:	inc    eax
  41d00b:	or     ch,bh
  41d00d:	addr16 pop es
  41d00f:	push   edi
  41d010:	(bad)  
  41d011:	or     DWORD PTR [ebx],eax
  41d013:	mov    BYTE PTR [esi],cl
  41d015:	shl    DWORD PTR [esi-0x23],1
  41d018:	xor    dh,cl
  41d01a:	or     al,0x1b
  41d01c:	mov    eax,ds:0x67322fa4
  41d021:	mov    ah,0x1f
  41d023:	and    DWORD PTR [eax-0x5d],ebp
  41d026:	mov    ch,0x6f
  41d028:	xor    DWORD PTR [edx],esp
  41d02a:	int3   
  41d02b:	sbb    BYTE PTR [edi],0x54
  41d02e:	popf   
  41d02f:	adc    BYTE PTR [ebp-0x3888305c],bh
  41d035:	mov    al,ds:0xd8544d88
  41d03a:	xchg   DWORD PTR [esi-0x4],edx
  41d03d:	rol    BYTE PTR [edx],cl
  41d03f:	add    edx,edx
  41d041:	retf   0x6d8c
  41d044:	cli    
  41d045:	jg     0x41d030
  41d047:	cld    
  41d048:	out    dx,al
  41d049:	jno    0x3024fe66
  41d04f:	hlt    
  41d050:	adc    al,0x66
  41d052:	or     bh,ch
  41d054:	sbb    esi,DWORD PTR [eax-0x6fde3f69]
  41d05a:	pop    ebp
  41d05b:	cmc    
  41d05c:	push   0x36
  41d05e:	inc    eax
  41d05f:	push   ds
  41d060:	push   cs
  41d061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d062:	sbb    al,0x55
  41d064:	sti    
  41d065:	ret    0x5aa3
  41d068:	push   ecx
  41d069:	(bad)  
  41d06a:	fisub  WORD PTR [ecx]
  41d06c:	mov    ch,0xbe
  41d06e:	push   eax
  41d06f:	xchg   edi,eax
  41d070:	arpl   WORD PTR [eax+ecx*8-0x7c7b1299],sp
  41d077:	jae    0x41d0cb
  41d079:	inc    ecx
  41d07a:	clc    
  41d07b:	xchg   esi,eax
  41d07c:	mov    bh,0xe3
  41d07e:	sbb    al,0xf9
  41d080:	sub    al,dh
  41d082:	sbb    eax,DWORD PTR [eax-0x31132a9]
  41d088:	cwde   
  41d089:	dec    edi
  41d08a:	jge    0x41d067
  41d08c:	mov    ds:0x247beed8,eax
  41d091:	pop    ds
  41d092:	fucom  st(4)
  41d094:	fnsave [ebx-0x8]
  41d097:	sub    dl,BYTE PTR [edx+0x9]
  41d09a:	arpl   di,cx
  41d09c:	arpl   WORD PTR [edx],bx
  41d09e:	scas   eax,DWORD PTR es:[edi]
  41d09f:	inc    edx
  41d0a0:	or     al,cl
  41d0a2:	ins    BYTE PTR es:[edi],dx
  41d0a3:	popf   
  41d0a4:	hlt    
  41d0a5:	jle    0x41d113
  41d0a7:	sbb    esp,DWORD PTR [ebp+0x7]
  41d0aa:	in     eax,dx
  41d0ab:	ror    BYTE PTR [edx],1
  41d0ad:	shl    BYTE PTR [ebp+0x33],0xb
  41d0b1:	rcr    DWORD PTR [ebx-0x7c9cae8c],0x55
  41d0b8:	loope  0x41d0c8
  41d0ba:	fdivr  QWORD PTR [ebp-0x48]
  41d0bd:	test   BYTE PTR [edx+0x2e],bl
  41d0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c1:	xlat   BYTE PTR ds:[ebx]
  41d0c2:	pop    ecx
  41d0c3:	lods   al,BYTE PTR ds:[esi]
  41d0c4:	outs   dx,DWORD PTR ds:[esi]
  41d0c5:	pusha  
  41d0c6:	dec    edi
  41d0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0c8:	xchg   esp,eax
  41d0c9:	fist   DWORD PTR [esp+ecx*8-0x1a9da623]
  41d0d0:	mov    bl,0xcf
  41d0d2:	push   ecx
  41d0d3:	sub    edi,DWORD PTR [esi-0x15]
  41d0d6:	out    0x3e,al
  41d0d8:	mov    ds:0xadfe8240,eax
  41d0dd:	and    al,0xe2
  41d0df:	mov    ebp,0x612f7f08
  41d0e4:	fdiv   DWORD PTR [esi-0x7b]
  41d0e7:	or     al,0x99
  41d0e9:	dec    ebx
  41d0ea:	xor    eax,0x2ffe8d7c
  41d0ef:	and    dl,BYTE PTR [edi-0x3f404177]
  41d0f5:	arpl   dx,bx
  41d0f7:	add    edx,eax
  41d0f9:	or     edi,DWORD PTR [edi+edx*2]
  41d0fc:	push   ebp
  41d0fd:	lahf   
  41d0fe:	out    dx,al
  41d0ff:	cmp    edx,esp
  41d101:	add    eax,0xe5114ff
  41d106:	out    dx,al
  41d107:	xchg   DWORD PTR [eax-0x260405f7],esi
  41d10d:	xchg   bp,ax
  41d110:	push   eax
  41d111:	in     al,dx
  41d112:	into   
  41d113:	loop   0x41d0e6
  41d115:	(bad)  
  41d116:	or     edx,DWORD PTR [ebp-0x9]
  41d119:	or     eax,0xd61e756d
  41d11e:	iret   
  41d11f:	pusha  
  41d120:	std    
  41d121:	fwait
  41d122:	cdq    
  41d123:	jno    0x41d0b5
  41d125:	cwde   
  41d126:	and    bh,0x8c
  41d129:	loopne 0x41d0d2
  41d12b:	out    dx,eax
  41d12c:	rcl    DWORD PTR [esi+0x42239bf9],cl
  41d132:	mov    esp,0xc8b492a
  41d137:	jb     0x41d100
  41d139:	adc    dl,BYTE PTR [eax]
  41d13b:	aaa    
  41d13c:	lock fsub QWORD PTR [edi-0x61]
  41d140:	and    dh,al
  41d142:	stc    
  41d143:	iret   
  41d144:	inc    ecx
  41d145:	add    esp,ecx
  41d147:	fs sbb al,0x49
  41d14a:	sbb    cl,BYTE PTR [edx+0x50]
  41d14d:	jecxz  0x41d186
  41d14f:	(bad)  
  41d150:	ror    BYTE PTR [ebp+0x6b328e12],1
  41d156:	aad    0x77
  41d158:	push   esi
  41d159:	sbb    eax,0x41b96cde
  41d15e:	inc    edx
  41d15f:	lds    ebp,FWORD PTR [edx]
  41d161:	mov    ecx,0xe1f24b9b
  41d166:	inc    edi
  41d167:	stos   DWORD PTR es:[edi],eax
  41d168:	nop
  41d169:	test   al,0x52
  41d16b:	test   eax,0x45942ed
  41d170:	push   ds
  41d171:	ins    BYTE PTR es:[edi],dx
  41d172:	clc    
  41d173:	cmp    al,BYTE PTR [esi+0x15cc8f7f]
  41d179:	aas    
  41d17a:	push   es
  41d17b:	push   cs
  41d17c:	lahf   
  41d17d:	pusha  
  41d17e:	mov    eax,0xbda4db72
  41d183:	fist   DWORD PTR [ecx+0x2b]
  41d186:	out    0xe,al
  41d188:	pop    ecx
  41d189:	push   edi
  41d18a:	ret    0x1564
  41d18d:	sub    cl,dh
  41d18f:	cmp    bl,bh
  41d191:	xlat   BYTE PTR ds:[ebx]
  41d192:	fcmovnb st,st(7)
  41d194:	sub    edx,DWORD PTR [ecx]
  41d196:	pop    ss
  41d197:	jno    0x41d120
  41d199:	imul   ebx,esi,0xff480bee
  41d19f:	jno    0x41d203
  41d1a1:	loopne 0x41d18a
  41d1a3:	mov    ebp,0x38495020
  41d1a8:	adc    cl,ch
  41d1aa:	int    0xfa
  41d1ac:	cs fsubr st(7),st
  41d1af:	mov    al,ds:0xcb1cc8d5
  41d1b4:	out    0xc,eax
  41d1b6:	push   ecx
  41d1b7:	xchg   esi,eax
  41d1b8:	mov    edi,0x85eaf0d8
  41d1bd:	ret    0xc3f3
  41d1c0:	push   0xccea9a17
  41d1c5:	sub    DWORD PTR [ebx+0x6f],ecx
  41d1c8:	mov    dh,al
  41d1ca:	pop    es
  41d1cb:	cmp    BYTE PTR [ebp+0x17],al
  41d1ce:	stos   DWORD PTR es:[edi],eax
  41d1cf:	fs sbb al,0x65
  41d1d2:	repz test eax,0x8822ab98
  41d1d8:	cmp    ebp,DWORD PTR [ecx-0x44]
  41d1db:	xor    BYTE PTR [eax+ebx*4+0x6c695083],ah
  41d1e2:	dec    esp
  41d1e3:	and    eax,0x41e0ccea
  41d1e8:	jae    0x41d18e
  41d1ea:	adc    BYTE PTR [ecx],0x6b
  41d1ed:	add    eax,0x7464c902
  41d1f2:	push   eax
  41d1f3:	sub    BYTE PTR [edi-0x5],bl
  41d1f6:	pop    esi
  41d1f7:	daa    
  41d1f8:	jl     0x41d1e5
  41d1fa:	test   eax,0xcafbc2f8
  41d1ff:	or     al,0x6f
  41d201:	(bad)  
  41d202:	call   0x9dd096a6
  41d207:	sbb    eax,0x6448802f
  41d20c:	mov    eax,0xf8db87e
  41d211:	sbb    ah,ah
  41d213:	leave  
  41d214:	sub    ecx,ebx
  41d216:	inc    eax
  41d217:	rcr    BYTE PTR [ebp+0x36a3dab1],cl
  41d21d:	jnp    0x41d226
  41d21f:	les    edx,FWORD PTR [ebx]
  41d221:	std    
  41d222:	fstp   TBYTE PTR [edx]
  41d224:	and    al,0xd4
  41d226:	xor    ch,dl
  41d228:	push   edx
  41d229:	push   0xffffffd9
  41d22b:	and    BYTE PTR [eax],al
  41d22d:	js     0x41d289
  41d22f:	add    ch,BYTE PTR [edi-0x93146c9]
  41d235:	xchg   ebx,eax
  41d236:	mov    DWORD PTR [eax-0x6aa0fcf1],0x46a29a21
  41d240:	retf   
  41d241:	icebp  
  41d242:	sti    
  41d243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d244:	(bad)  
  41d245:	push   edx
  41d246:	cmp    ecx,DWORD PTR [edi+0x2a]
  41d249:	dec    ecx
  41d24a:	push   es
  41d24b:	jns    0x41d274
  41d24d:	mov    bl,0xc
  41d24f:	and    al,0xb5
  41d251:	dec    esi
  41d252:	cmp    eax,ecx
  41d254:	lea    edx,cs:[ebp+0x77c22573]
  41d25b:	(bad)  
  41d25c:	lahf   
  41d25d:	sbb    eax,0x40d4c90a
  41d262:	int    0xe3
  41d264:	and    esp,edi
  41d266:	imul   esi,DWORD PTR [ebp+0x70],0x63
  41d26a:	jmp    0xe752bb6b
  41d26f:	push   edx
  41d270:	stos   DWORD PTR es:[edi],eax
  41d271:	repz adc BYTE PTR [edx],0x93
  41d275:	lds    edi,FWORD PTR [esi]
  41d277:	shl    DWORD PTR [edi],0xb3
  41d27a:	std    
  41d27b:	into   
  41d27c:	outs   dx,DWORD PTR ds:[esi]
  41d27d:	fnstsw WORD PTR [edi+0x71cb3ffd]
  41d283:	(bad)  
  41d285:	jge    0x41d274
  41d287:	aam    0xc7
  41d289:	mov    bl,0x84
  41d28b:	sub    ecx,esi
  41d28d:	pop    ebx
  41d28e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d28f:	(bad)  
  41d290:	jnp    0x41d2db
  41d292:	dec    esi
  41d293:	mov    eax,0x6bfe0c1a
  41d298:	into   
  41d299:	popf   
  41d29a:	ins    DWORD PTR es:[edi],dx
  41d29b:	add    DWORD PTR gs:[ebp+0x41701ca1],edi
  41d2a2:	fs cmp cl,ch
  41d2a5:	xor    BYTE PTR [ebp+0x4d23393c],dh
  41d2ab:	jb     0x41d268
  41d2ad:	sub    edi,DWORD PTR [ecx+ebx*4+0x2cf8df77]
  41d2b4:	and    dl,cl
  41d2b6:	sbb    al,bl
  41d2b8:	or     al,0x41
  41d2ba:	cmp    esp,DWORD PTR [esi+0x3a265afd]
  41d2c0:	leave  
  41d2c1:	aad    0x94
  41d2c3:	mov    al,0x29
  41d2c5:	icebp  
  41d2c6:	pop    ecx
  41d2c7:	dec    ebp
  41d2c8:	pop    esi
  41d2c9:	push   edx
  41d2ca:	out    dx,eax
  41d2cb:	dec    esi
  41d2cc:	jns    0x41d2d2
  41d2ce:	sbb    eax,0xc024a88d
  41d2d3:	rcr    DWORD PTR [ebp+0x39],0x94
  41d2d7:	sub    bl,BYTE PTR [eax+0x15]
  41d2da:	dec    eax
  41d2db:	aad    0x4f
  41d2dd:	mov    BYTE PTR [ebx+0x695b1ebf],ch
  41d2e3:	sahf   
  41d2e4:	sub    DWORD PTR ds:0x4642193b,esp
  41d2ea:	or     DWORD PTR [esi-0xb6ed278],edi
  41d2f0:	add    eax,0x54a6313f
  41d2f5:	adc    al,0x14
  41d2f7:	inc    ebp
  41d2f8:	(bad)  
  41d2f9:	pop    ecx
  41d2fa:	je     0x41d281
  41d2fc:	fwait
  41d2fd:	and    eax,0xefe35e99
  41d302:	xor    DWORD PTR [ebx],esi
  41d304:	aas    
  41d305:	lods   eax,DWORD PTR ds:[esi]
  41d306:	or     eax,0xf04837e0
  41d30b:	cli    
  41d30c:	cwde   
  41d30d:	(bad)  
  41d30e:	jnp    0x41d2ab
  41d310:	mul    bh
  41d312:	or     DWORD PTR [eax-0x4b9a6c24],edx
  41d318:	hlt    
  41d319:	fld    QWORD PTR [edi+0x75]
  41d31c:	fadd   st(4),st
  41d31e:	xchg   ebx,eax
  41d31f:	mov    edi,DWORD PTR [ebp-0xe3f4c89]
  41d325:	test   ebp,ebp
  41d327:	inc    edi
  41d328:	xor    DWORD PTR [edi-0x58a87421],ebp
  41d32e:	sar    BYTE PTR [ecx+0x10],cl
  41d331:	sbb    cl,al
  41d333:	loope  0x41d3a2
  41d335:	adc    DWORD PTR [edi+0x57],edx
  41d338:	and    eax,0xbf438e24
  41d33d:	stos   BYTE PTR es:[edi],al
  41d33e:	push   esi
  41d33f:	push   cs
  41d340:	pop    ss
  41d341:	rcl    esi,cl
  41d343:	pop    ebp
  41d344:	mov    esp,0x1829fff8
  41d349:	jge    0x41d3ad
  41d34b:	fsub   DWORD PTR [edi]
  41d34d:	fisttp QWORD PTR [eax-0x5fceb239]
  41d353:	cmp    al,0xd0
  41d355:	cmp    cl,ch
  41d357:	jmp    0x8534:0x6efc4c60
  41d35e:	bound  esp,QWORD PTR [esp+edi*8]
  41d361:	xchg   ecx,eax
  41d362:	sbb    DWORD PTR [eax+0x26],edx
  41d365:	cmp    DWORD PTR [edi+0x14],eax
  41d368:	fwait
  41d369:	cmp    eax,0x168bec8a
  41d36e:	imul   ebx,DWORD PTR [edi-0x24],0xffffffa1
  41d372:	add    ebp,edx
  41d374:	sub    eax,DWORD PTR ds:0x845abec5
  41d37a:	pusha  
  41d37b:	mov    esp,0xbd98d44b
  41d380:	sar    DWORD PTR [esi-0x538e3e64],1
  41d386:	fsubr  DWORD PTR [esi+0x1e]
  41d389:	je     0x41d401
  41d38b:	pop    esi
  41d38c:	shl    DWORD PTR [edi],cl
  41d38e:	mov    bh,0xc3
  41d390:	es ret 
  41d392:	dec    edx
  41d393:	mov    cl,0xd5
  41d395:	and    bl,BYTE PTR [eax+esi*1-0x64]
  41d399:	pop    ecx
  41d39a:	call   0x190d:0xd27c61e6
  41d3a1:	sbb    BYTE PTR [esi+ebp*4+0x42f06684],bl
  41d3a8:	inc    edx
  41d3a9:	sbb    DWORD PTR [esi+eax*1+0x74cb2a54],ebx
  41d3b0:	push   ebp
  41d3b1:	fiadd  DWORD PTR [edi]
  41d3b3:	push   ss
  41d3b4:	inc    ecx
  41d3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3b6:	in     al,dx
  41d3b7:	dec    eax
  41d3b8:	push   edx
  41d3b9:	test   DWORD PTR [eax-0x3ce61983],eax
  41d3bf:	loop   0x41d425
  41d3c1:	cmp    eax,DWORD PTR [edx+ebx*4-0x11]
  41d3c5:	add    DWORD PTR [edi-0x74],0x39
  41d3c9:	ret    0xd40
  41d3cc:	dec    eax
  41d3cd:	lods   al,BYTE PTR ds:[esi]
  41d3ce:	movd   mm7,DWORD PTR [ecx]
  41d3d1:	fadd   DWORD PTR [esi+edx*8+0xb]
  41d3d5:	cld    
  41d3d6:	jae    0x41d3f4
  41d3d8:	mov    ds:0x9e0cdf05,eax
  41d3dd:	shl    DWORD PTR [ebx+0x40d01a5c],cl
  41d3e3:	dec    edi
  41d3e4:	sub    esi,ebp
  41d3e6:	stos   BYTE PTR es:[edi],al
  41d3e7:	xchg   DWORD PTR [ebp-0x33f7f4f4],ebp
  41d3ed:	inc    ebx
  41d3ee:	or     eax,0x8357adc7
  41d3f3:	adc    DWORD PTR [edi],eax
  41d3f5:	xchg   BYTE PTR [esi-0xb],bl
  41d3f8:	frstor [ecx]
  41d3fa:	jnp    0x41d3d9
  41d3fc:	xchg   ebp,eax
  41d3fd:	mov    BYTE PTR [esi],ah
  41d3ff:	rol    DWORD PTR [eax-0x7f],1
  41d402:	and    al,0xf7
  41d404:	mov    esi,ebx
  41d406:	das    
  41d407:	test   al,0x6
  41d409:	fisttp QWORD PTR [ebx]
  41d40b:	pop    esi
  41d40c:	push   esp
  41d40d:	sub    eax,0x43370cbb
  41d412:	pop    ss
  41d413:	sub    ecx,DWORD PTR [edx-0x3f]
  41d416:	sbb    al,0x1
  41d418:	cmpxchg BYTE PTR [ecx+0x788aabe7],bl
  41d41f:	inc    ebx
  41d420:	mov    dh,BYTE PTR [eax+0x1]
  41d423:	ret    0x736a
  41d426:	inc    ecx
  41d427:	test   DWORD PTR [esi],edi
  41d429:	clc    
  41d42a:	xlat   BYTE PTR ds:[ebx]
  41d42b:	add    al,0x56
  41d42d:	dec    eax
  41d42e:	mov    ecx,DWORD PTR [edi]
  41d430:	rol    BYTE PTR [esi-0x63],0xdd
  41d434:	lods   eax,DWORD PTR ds:[esi]
  41d435:	fst    DWORD PTR [ebx+0x600122f5]
  41d43b:	sahf   
  41d43c:	or     al,0x94
  41d43e:	pop    ebp
  41d43f:	cmp    BYTE PTR [ecx+0xe],dl
  41d442:	mov    ds:0xd409ad0b,eax
  41d447:	inc    edx
  41d448:	jb     0x41d498
  41d44a:	aam    0x3f
  41d44c:	std    
  41d44d:	dec    esp
  41d44e:	pusha  
  41d44f:	dec    eax
  41d450:	int3   
  41d451:	or     eax,0x27af4486
  41d456:	into   
  41d457:	xor    esp,DWORD PTR [ebx+0x2b]
  41d45a:	dec    edi
  41d45b:	cld    
  41d45c:	jmp    0xd69f:0x1267d5e6
  41d463:	pop    eax
  41d464:	and    esi,DWORD PTR [ebx-0x37dbb7b8]
  41d46a:	ja     0x41d464
  41d46c:	stos   BYTE PTR es:[edi],al
  41d46d:	xchg   ebx,eax
  41d46e:	xor    ebx,ebx
  41d470:	sub    eax,DWORD PTR [ecx+ebx*2-0x41]
  41d474:	jge    0x41d3fb
  41d476:	arpl   WORD PTR [eax+0x96225d1],sp
  41d47c:	mov    dh,dl
  41d47e:	(bad)  [edx]
  41d480:	pop    ebp
  41d481:	or     edx,DWORD PTR [edx-0x7c5e7b7e]
  41d487:	shl    BYTE PTR [ecx],1
  41d489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d48a:	pop    ds
  41d48b:	cli    
  41d48c:	(bad)  
  41d48d:	jmp    0x2fa4:0xb012298a
  41d494:	scas   eax,DWORD PTR es:[edi]
  41d495:	and    DWORD PTR [esp+ebx*1+0x64b80282],ebx
  41d49c:	mov    ebx,0x2128772a
  41d4a1:	inc    ebp
  41d4a2:	mov    ecx,0x92674ade
  41d4a7:	xor    DWORD PTR [ecx+0xa],edi
  41d4aa:	test   BYTE PTR [eax+0x26a4a640],dl
  41d4b0:	sbb    eax,0x70590eab
  41d4b5:	lahf   
  41d4b6:	mov    ds:0x95e54e46,eax
  41d4bb:	jnp    0x41d4bf
  41d4bd:	push   ss
  41d4be:	cld    
  41d4bf:	push   esp
  41d4c0:	div    edi
  41d4c2:	sub    DWORD PTR [edi],ebp
  41d4c4:	xchg   esi,eax
  41d4c5:	fs xchg edi,eax
  41d4c7:	xor    BYTE PTR [edi-0x69],bh
  41d4ca:	in     al,0xac
  41d4cc:	in     al,0x31
  41d4ce:	sub    al,0x7a
  41d4d0:	sub    al,0x7d
  41d4d2:	ret    0x16af
  41d4d5:	in     eax,dx
  41d4d6:	enter  0x526e,0x7
  41d4da:	add    eax,0xca183f0f
  41d4df:	sbb    edx,DWORD PTR [edi+0x1182f649]
  41d4e5:	cmp    BYTE PTR ds:0x3556c272,0x78
  41d4ec:	mov    bh,BYTE PTR [eax-0x13]
  41d4ef:	cmp    esp,ebx
  41d4f1:	cmp    esi,edx
  41d4f3:	outs   dx,DWORD PTR ds:[esi]
  41d4f4:	and    ch,BYTE PTR [esi+0x4b]
  41d4f7:	push   edx
  41d4f8:	ss jnp 0x41d56b
  41d4fb:	or     DWORD PTR [ecx+eax*4+0x32],0x2bba510d
  41d503:	cmp    eax,0x9287e04c
  41d508:	adc    BYTE PTR [ecx+0x126250fe],0x9a
  41d50f:	ss in  al,dx
  41d511:	sub    BYTE PTR [esi-0x45b9a89e],al
  41d517:	fdivr  st,st(1)
  41d519:	mov    edi,0x6bff8571
  41d51e:	gs dec ecx
  41d520:	jge    0x41d592
  41d522:	icebp  
  41d523:	jno    0x41d4ec
  41d525:	lods   eax,DWORD PTR ds:[esi]
  41d526:	adc    DWORD PTR [eax+0x16],0x65
  41d52a:	(bad)  
  41d52b:	jecxz  0x41d540
  41d52d:	stos   BYTE PTR es:[edi],al
  41d52e:	rol    DWORD PTR [ecx],cl
  41d530:	aas    
  41d531:	jmp    0x910e:0xf5c34ca8
  41d538:	aaa    
  41d539:	adc    eax,0x535317e1
  41d53e:	push   0xe366c48c
  41d543:	daa    
  41d544:	sbb    ch,BYTE PTR [edi]
  41d546:	or     eax,DWORD PTR [edx]
  41d548:	vdivps xmm7,xmm7,XMMWORD PTR [edi-0x1b]
  41d54d:	dec    esi
  41d54e:	mov    BYTE PTR ds:0xbe705f2b,al
  41d554:	loop   0x41d51b
  41d556:	adc    DWORD PTR [ebx],esp
  41d558:	mov    ds:0xafdf077a,al
  41d55d:	mov    esi,0x3723d92
  41d562:	(bad)  
  41d563:	ficomp DWORD PTR [edi*1-0x50f10814]
  41d56a:	call   FWORD PTR [esi+0x0]
  41d56d:	and    eax,DWORD PTR [ebx+edx*4-0x1ec306bf]
  41d574:	mov    bl,0xc4
  41d576:	sahf   
  41d577:	pusha  
  41d578:	(bad)  
  41d579:	iretw  
  41d57b:	mov    edi,gs
  41d57d:	jne    0x41d59d
  41d57f:	jmp    0x4e772959
  41d584:	xor    esp,DWORD PTR [eax+0x1a]
  41d587:	push   esp
  41d588:	dec    eax
  41d589:	inc    ebp
  41d58a:	jmp    0xd7b7b67b
  41d58f:	js     0x41d5de
  41d591:	and    ebx,DWORD PTR [edx+ebx*8-0x2d06f6e3]
  41d598:	ss cs push 0xd3a444d4
  41d59f:	jmp    0xfe70:0xb94bf84e
  41d5a6:	hlt    
  41d5a7:	mov    BYTE PTR [edx],0xe7
  41d5aa:	loope  0x41d58e
  41d5ac:	mov    al,ds:0xacb84f6d
  41d5b1:	jb     0x78346c04
  41d5b7:	lock add DWORD PTR fs:[ecx-0x55],esp
  41d5bc:	jns    0x41d638
  41d5be:	push   ebp
  41d5bf:	add    eax,0xa9596a48
  41d5c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5c5:	sti    
  41d5c6:	sub    DWORD PTR [esi+eiz*1+0x316907a9],ecx
  41d5cd:	leave  
  41d5ce:	call   FWORD PTR [eax+ebp*2]
  41d5d1:	xor    al,0x9b
  41d5d3:	or     eax,0x219e940b
  41d5d8:	mov    ch,0xde
  41d5da:	lods   eax,DWORD PTR ds:[esi]
  41d5db:	dec    esi
  41d5dc:	fld    QWORD PTR [esi+0x4bd723c1]
  41d5e2:	inc    esp
  41d5e3:	(bad)  
  41d5e4:	mov    esi,DWORD PTR [eax+0x37]
  41d5e7:	stc    
  41d5e8:	inc    ebx
  41d5e9:	aaa    
  41d5ea:	dec    edi
  41d5eb:	or     BYTE PTR [esp+edi*2+0x5d],bl
  41d5ef:	cld    
  41d5f0:	in     al,dx
  41d5f1:	out    dx,eax
  41d5f2:	sub    ch,BYTE PTR [esp+ecx*8+0x12]
  41d5f6:	ret    0xc7d
  41d5f9:	jns    0x41d66e
  41d5fb:	adc    al,0x1b
  41d5fd:	(bad)  
  41d5fe:	push   ecx
  41d5ff:	mov    ebp,0xa979dc20
  41d604:	mov    al,0x8
  41d606:	sbb    al,0x14
  41d608:	test   eax,0xc5886bd4
  41d60d:	aaa    
  41d60e:	jmp    0x41d677
  41d610:	push   0xffffffc2
  41d612:	inc    ebp
  41d613:	inc    ecx
  41d614:	shl    DWORD PTR [edi-0x45],cl
  41d617:	lahf   
  41d618:	(bad)  
  41d61a:	int    0x60
  41d61c:	jecxz  0x41d5fc
  41d61e:	and    DWORD PTR [edx+0x47],eax
  41d621:	inc    ebp
  41d622:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d625:	clc    
  41d626:	dec    esp
  41d627:	mov    dh,ch
  41d629:	(bad)  
  41d62a:	outs   dx,BYTE PTR ds:[esi]
  41d62b:	lea    edx,[edx]
  41d62d:	data16 sbb al,0xe
  41d630:	ins    BYTE PTR es:[edi],dx
  41d631:	es inc esi
  41d633:	(bad)  
  41d634:	fxam   
  41d636:	mov    edi,0x1fd554d7
  41d63b:	dec    ebp
  41d63c:	ds dec edi
  41d63e:	int    0x5a
  41d640:	mov    ch,0xeb
  41d642:	cmp    al,0xcc
  41d644:	pop    edi
  41d645:	dec    esp
  41d646:	jo     0x41d676
  41d648:	xor    ah,al
  41d64a:	pop    edx
  41d64b:	sbb    DWORD PTR [edi],edx
  41d64d:	pop    ds
  41d64e:	mov    dl,dh
  41d650:	ins    BYTE PTR es:[edi],dx
  41d651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d652:	das    
  41d653:	inc    BYTE PTR [edi+0x42]
  41d656:	mov    al,0x61
  41d658:	lahf   
  41d659:	jge    0x41d657
  41d65b:	dec    ebx
  41d65c:	sbb    DWORD PTR fs:[ebx-0x575b126e],edi
  41d663:	scas   eax,DWORD PTR es:[edi]
  41d664:	call   0x2185:0xb94da46
  41d66b:	test   BYTE PTR [eax-0x13],al
  41d66e:	outs   dx,BYTE PTR ds:[esi]
  41d66f:	call   0x37a4b973
  41d674:	je     0x41d6e7
  41d676:	enter  0x9e94,0x4d
  41d67a:	xor    eax,DWORD PTR [eax]
  41d67c:	push   eax
  41d67d:	mov    esp,DWORD PTR ds:0xb6f61c89
  41d683:	jmp    0x41d610
  41d685:	push   0x5e
  41d687:	pop    esi
  41d688:	fwait
  41d689:	pop    ds
  41d68a:	loop   0x41d66c
  41d68c:	fwait
  41d68d:	jmp    0x51e4b14f
  41d692:	retf   
  41d693:	mov    eax,0xaa08a3e0
  41d698:	lock clc 
  41d69a:	pusha  
  41d69b:	adc    eax,0x42ef2443
  41d6a0:	xchg   edx,eax
  41d6a1:	shl    DWORD PTR [ecx+0x0],0xe3
  41d6a5:	or     DWORD PTR [edi+0x25],edi
  41d6a8:	out    0x3c,al
  41d6aa:	dec    esp
  41d6ab:	dec    ecx
  41d6ac:	push   es
  41d6ad:	cld    
  41d6ae:	dec    edi
  41d6af:	xlat   BYTE PTR ds:[ebx]
  41d6b0:	cmp    dl,BYTE PTR [ebx+0x44]
  41d6b3:	nop
  41d6b4:	sbb    bl,BYTE PTR [edi+edx*8]
  41d6b7:	sbb    bh,dh
  41d6b9:	mov    esp,0x6d0e3b05
  41d6be:	xor    esp,edx
  41d6c0:	(bad)  
  41d6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c3:	enter  0xb9c8,0x44
  41d6c7:	jns    0x41d67f
  41d6c9:	dec    ebp
  41d6ca:	xchg   edi,eax
  41d6cb:	dec    eax
  41d6cc:	cmp    ch,BYTE PTR [ebp-0x35]
  41d6cf:	fstp   QWORD PTR [edx+0x2b]
  41d6d2:	dec    BYTE PTR [ebp+ebx*8+0x66]
  41d6d6:	jb     0x41d6bb
  41d6d8:	imul   ecx,eax,0xffffffd1
  41d6db:	cmp    DWORD PTR [ebp+ebx*8+0x52],ecx
  41d6df:	les    esi,FWORD PTR [ebx+edx*1]
  41d6e2:	inc    ebp
  41d6e3:	imul   esp,ecx,0xe8d607bf
  41d6e9:	mov    es,WORD PTR [edi-0x4a29bc8e]
  41d6ef:	jae    0x41d74d
  41d6f1:	aad    0xc
  41d6f3:	push   edi
  41d6f4:	adc    eax,0x3d7c3d4c
  41d6f9:	stc    
  41d6fa:	lea    edx,[ebx+0x55]
  41d6fd:	push   0xfffffff6
  41d6ff:	dec    eax
  41d700:	inc    edi
  41d701:	cwde   
  41d702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d704:	cmp    BYTE PTR [edi],al
  41d706:	dec    esp
  41d707:	mov    dl,al
  41d709:	cli    
  41d70a:	xor    eax,0x8d2d97c
  41d70f:	or     ah,BYTE PTR [edx]
  41d711:	fcom   st(3)
  41d713:	call   0xf568e5a3
  41d718:	das    
  41d719:	mov    ch,0x94
  41d71b:	mov    ds:0x7560b680,al
  41d720:	sbb    eax,0xd58e390d
  41d725:	mov    ah,0xfe
  41d727:	sbb    BYTE PTR [edx+0x32acc6a8],dh
  41d72d:	repnz xor al,0x96
  41d730:	enter  0x61d5,0xf8
  41d734:	sub    ah,BYTE PTR [esi+0xd420e49]
  41d73a:	test   al,0xc1
  41d73c:	rol    BYTE PTR [ecx],cl
  41d73e:	sbb    al,0xb9
  41d740:	sub    bl,bh
  41d742:	adc    BYTE PTR ds:0x7e9fa4a2,0xa0
  41d749:	call   0x1b4cca31
  41d74e:	and    al,0x31
  41d750:	mov    esi,0x6223dc17
  41d755:	push   ds
  41d756:	push   ebp
  41d757:	and    BYTE PTR [edx+0x5cba9e87],al
  41d75d:	mov    bh,0x80
  41d75f:	push   eax
  41d760:	dec    esi
  41d761:	xchg   esp,eax
  41d762:	mov    al,ds:0x5b17c6f6
  41d767:	(bad)  
  41d768:	in     eax,0xd0
  41d76a:	aad    0x1c
  41d76c:	cmc    
  41d76d:	sub    al,0xd5
  41d76f:	sti    
  41d770:	test   BYTE PTR [ebp+eax*8+0x45],al
  41d774:	in     al,0x41
  41d776:	lahf   
  41d777:	(bad)  
  41d779:	and    ch,BYTE PTR [eax]
  41d77b:	ds lahf 
  41d77d:	(bad)  
  41d77e:	loopne 0x41d765
  41d780:	cmp    al,0xff
  41d782:	add    al,0x6d
  41d784:	mov    ebx,0x1a8531a9
  41d789:	xchg   esp,eax
  41d78a:	repz cwde 
  41d78c:	xor    DWORD PTR [eax-0x15],ecx
  41d78f:	repz sbb al,0x32
  41d792:	pop    ds
  41d793:	aaa    
  41d794:	inc    edi
  41d795:	sub    BYTE PTR ds:0x1075b8b8,0xac
  41d79c:	mov    al,0x14
  41d79e:	loopne 0x41d817
  41d7a0:	scas   eax,DWORD PTR es:[edi]
  41d7a1:	lods   al,BYTE PTR ds:[esi]
  41d7a2:	and    al,0x1
  41d7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7a5:	sbb    BYTE PTR [esi+0x8],al
  41d7a8:	rcr    DWORD PTR [edi-0x51395c1a],cl
  41d7ae:	mov    WORD PTR ds:0xd212fc1f,ds
  41d7b4:	fpatan 
  41d7b6:	mov    ebp,0xff80e0dc
  41d7bb:	add    edx,edi
  41d7bd:	mov    ds:0x7ae919ca,al
  41d7c2:	jmp    0x41d7c8
  41d7c4:	rcr    ch,0xad
  41d7c7:	jmp    0x3f11c07e
  41d7cc:	lock dec eax
  41d7ce:	outs   dx,BYTE PTR ds:[esi]
  41d7cf:	dec    ebx
  41d7d0:	dec    ecx
  41d7d1:	cmp    edi,DWORD PTR [edi-0x74]
  41d7d4:	dec    esi
  41d7d5:	pop    esp
  41d7d6:	or     al,cl
  41d7d8:	out    dx,al
  41d7d9:	sub    BYTE PTR [eax+0x2e92c77b],0x7c
  41d7e0:	dec    ebx
  41d7e1:	pop    ebx
  41d7e2:	add    al,0x7e
  41d7e4:	mov    eax,0xdb3421f
  41d7e9:	sbb    dl,BYTE PTR [ebp+0x44]
  41d7ec:	lds    edi,FWORD PTR [edi-0x458b37e4]
  41d7f2:	pop    ds
  41d7f3:	test   DWORD PTR [ebp+eax*8-0x6605c413],esi
  41d7fa:	inc    edx
  41d7fb:	aad    0x66
  41d7fd:	xor    ah,BYTE PTR [ebx+0x20]
  41d800:	mov    al,ds:0xec53645d
  41d805:	daa    
  41d806:	aaa    
  41d807:	mov    edx,DWORD PTR [ebx+0x26207333]
  41d80d:	sbb    DWORD PTR [esi],0x7a
  41d810:	mov    ebx,0xc9b15613
  41d815:	adc    eax,0x47bf9322
  41d81a:	(bad)  [ecx]
  41d81c:	xchg   edi,eax
  41d81d:	add    ah,bl
  41d81f:	xchg   esi,eax
  41d820:	and    DWORD PTR ds:0xd6488270,ebx
  41d826:	xchg   BYTE PTR [esi+0x28],ah
  41d829:	push   edx
  41d82a:	sbb    BYTE PTR [edx+0x58fcdce8],dh
  41d830:	inc    edi
  41d831:	cmp    ah,BYTE PTR [eax+0x1b401e89]
  41d837:	and    al,0x52
  41d839:	add    DWORD PTR [eax],eax
  41d83b:	test   eax,0x4afe1553
  41d840:	sbb    BYTE PTR [edi-0x54],al
  41d843:	fcom   QWORD PTR [ebx]
  41d845:	or     dl,BYTE PTR [ebp-0x4a]
  41d848:	mov    esi,0xbebf3807
  41d84d:	jno    0x41d8bb
  41d84f:	je     0x41d821
  41d851:	inc    ebp
  41d852:	mov    dl,0x23
  41d854:	pop    esp
  41d855:	pop    edx
  41d856:	push   0xafc59ae1
  41d85b:	inc    ebx
  41d85c:	rcl    esp,cl
  41d85e:	ficom  DWORD PTR [ecx]
  41d860:	loope  0x41d878
  41d862:	push   edi
  41d863:	jmp    0x30d7c919
  41d868:	cmc    
  41d869:	jae    0x41d803
  41d86b:	mov    esi,0x50b93a40
  41d870:	lods   eax,DWORD PTR ds:[esi]
  41d871:	push   es
  41d872:	sahf   
  41d873:	retf   
  41d874:	js     0x41d7f9
  41d876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d877:	inc    ecx
  41d878:	aaa    
  41d879:	popf   
  41d87a:	or     ch,BYTE PTR [edx]
  41d87c:	stc    
  41d87d:	ja     0x41d896
  41d87f:	mov    ecx,edi
  41d881:	dec    edx
  41d882:	jmp    0x45b0a58e
  41d887:	pushf  
  41d888:	pop    edx
  41d889:	adc    ecx,DWORD PTR [ecx*8+0xa73e9b0]
  41d890:	dec    edx
  41d891:	cmp    edi,DWORD PTR [ebx]
  41d893:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d895:	mov    al,0x1b
  41d897:	lods   al,BYTE PTR ds:[esi]
  41d898:	shr    BYTE PTR [eax+0x5d],1
  41d89b:	or     eax,0xb97e2d27
  41d8a0:	inc    edi
  41d8a2:	adc    cl,dl
  41d8a4:	add    cl,BYTE PTR [ebx-0x71]
  41d8a7:	push   0xffffffdd
  41d8a9:	and    ebp,DWORD PTR [ebx-0x22b06894]
  41d8af:	je     0x41d928
  41d8b1:	jne    0x41d842
  41d8b3:	int3   
  41d8b4:	outs   dx,DWORD PTR ds:[esi]
  41d8b5:	sub    al,BYTE PTR [esi+0x48e6f3ec]
  41d8bb:	mov    ebp,0xba7914d8
  41d8c0:	imul   ecx,eax,0xcc3e96ba
  41d8c6:	loop   0x41d8ae
  41d8c8:	adc    BYTE PTR [esi+0x5e],cl
  41d8cb:	jbe    0x41d8c1
  41d8cd:	pop    es
  41d8ce:	mov    ebx,0x86b0db3f
  41d8d3:	ins    DWORD PTR es:[edi],dx
  41d8d4:	cli    
  41d8d5:	xor    eax,0x9a69662d
  41d8da:	adc    ebx,ecx
  41d8dc:	xor    esp,DWORD PTR [eax-0x67c385e6]
  41d8e2:	ds std 
  41d8e4:	push   0x8b325b95
  41d8e9:	leave  
  41d8ea:	mov    cl,BYTE PTR [esi]
  41d8ec:	adc    cl,BYTE PTR ds:0x35d37c55
  41d8f2:	inc    edi
  41d8f3:	jle    0x41d8ac
  41d8f5:	mov    BYTE PTR [ebp-0x7be339a5],ch
  41d8fb:	sbb    esp,DWORD PTR [edi-0x17a4a0c3]
  41d901:	(bad)  
  41d904:	dec    eax
  41d905:	and    BYTE PTR [eax-0x76],0xa6
  41d909:	mov    esp,0x3b6501d1
  41d90e:	or     edi,ecx
  41d910:	sti    
  41d911:	or     BYTE PTR [edi+0x204d9734],0x5
  41d918:	cmp    DWORD PTR [eax+0x504de2e4],ebp
  41d91e:	cmp    BYTE PTR [ecx+esi*4-0x3109736c],bl
  41d925:	sub    DWORD PTR [ebp+0xe0453b9],edx
  41d92b:	mov    BYTE PTR [eax-0x79],ch
  41d92e:	and    esp,DWORD PTR [edx]
  41d930:	sbb    DWORD PTR [edi+0x5c],eax
  41d933:	(bad)  
  41d934:	ror    DWORD PTR [ebx],1
  41d936:	push   es
  41d937:	loope  0x41d9a9
  41d939:	mov    al,0xc0
  41d93b:	dec    eax
  41d93c:	cmp    al,0x9d
  41d93e:	adc    eax,0x203fadbf
  41d943:	ja     0x41d968
  41d945:	cmp    DWORD PTR [eax],edx
  41d947:	(bad)  
  41d949:	(bad)  
  41d94a:	jge    0x41d941
  41d94c:	jns    0x41d992
  41d94e:	push   ds
  41d94f:	les    esi,FWORD PTR [edi+0x59]
  41d952:	sar    BYTE PTR [ebx],1
  41d954:	in     al,0x63
  41d956:	popa   
  41d957:	icebp  
  41d958:	int3   
  41d959:	popf   
  41d95a:	pushf  
  41d95b:	repz ss ds (bad) 
  41d95f:	mov    cl,0x64
  41d961:	scas   eax,DWORD PTR es:[edi]
  41d962:	ss stos DWORD PTR es:[edi],eax
  41d964:	pusha  
  41d965:	sbb    al,0xba
  41d967:	xor    al,0x28
  41d969:	mov    BYTE PTR [esi],cl
  41d96b:	rcl    BYTE PTR [ecx-0x57],0x38
  41d96f:	(bad)
  41d972:	inc    eax
  41d973:	push   es
  41d974:	mov    edx,0x16293a82
  41d979:	inc    eax
  41d97a:	outs   dx,BYTE PTR ds:[esi]
  41d97b:	fwait
  41d97c:	ja     0x41d978
  41d97e:	cld    
  41d97f:	out    0x8e,al
  41d981:	fucom  st(1)
  41d983:	pop    ecx
  41d984:	js     0x41d9e8
  41d986:	stc    
  41d987:	adc    al,0x30
  41d989:	jecxz  0x41d9be
  41d98b:	es mov ebp,0xd7252c39
  41d991:	sub    DWORD PTR ds:0xd94f364d,0xfffffff7
  41d998:	pop    edi
  41d999:	sahf   
  41d99a:	fcomip st,st(0)
  41d99c:	cli    
  41d99d:	sbb    esp,edx
  41d99f:	add    DWORD PTR [ecx+0x3a75780d],0x49f411c4
  41d9a9:	pop    ds
  41d9aa:	xlat   BYTE PTR ds:[ebx]
  41d9ab:	and    esp,ebx
  41d9ad:	fs cdq 
  41d9af:	dec    esi
  41d9b0:	add    DWORD PTR [eax-0x63087b23],edx
  41d9b6:	adc    BYTE PTR [edi+0x2e955261],cl
  41d9bc:	push   es
  41d9bd:	xchg   BYTE PTR [edi-0x6f],al
  41d9c0:	jno    0x41da26
  41d9c2:	xchg   esp,eax
  41d9c3:	add    eax,0xb38175ca
  41d9c8:	pop    esp
  41d9c9:	jbe    0x41d9fe
  41d9cb:	xchg   ebx,eax
  41d9cc:	jmp    0x41d9b9
  41d9ce:	mov    DWORD PTR [ebx-0x5d],ebx
  41d9d1:	(bad)  
  41d9d2:	aaa    
  41d9d3:	mov    ebp,es
  41d9d5:	jge    0x41d9dc
  41d9d7:	push   0xffffffc4
  41d9d9:	jnp    0x41d9cc
  41d9db:	pop    ecx
  41d9dc:	pop    esi
  41d9dd:	sub    edi,DWORD PTR [esi-0x6e0fd73e]
  41d9e3:	(bad)  
  41d9e4:	sbb    eax,0x39b82718
  41d9e9:	stc    
  41d9ea:	mov    BYTE PTR [ebx-0x1a],dh
  41d9ed:	dec    edx
  41d9ee:	popf   
  41d9ef:	data16 and BYTE PTR [ecx+0x5b],ah
  41d9f3:	aad    0x35
  41d9f5:	retf   
  41d9f6:	xor    bh,ch
  41d9f8:	push   es
  41d9f9:	cmp    BYTE PTR [esi-0x12954ed8],0xcd
  41da00:	pop    edx
  41da01:	xor    ch,ch
  41da03:	fs in  al,0x4f
  41da06:	and    DWORD PTR [ebx],edx
  41da08:	and    DWORD PTR [esi+0xd],eax
  41da0b:	mov    edx,0x34cc4e09
  41da10:	pop    edx
  41da11:	je     0x41d9da
  41da13:	xchg   edx,eax
  41da14:	xor    BYTE PTR [eax],bl
  41da16:	or     bh,ah
  41da18:	inc    ebx
  41da19:	inc    edx
  41da1a:	fmul   DWORD PTR [ebp-0x30]
  41da1d:	sub    BYTE PTR [ecx-0x65],bl
  41da20:	xor    ecx,eax
  41da22:	jle    0x41d9b4
  41da24:	jge    0x41da5b
  41da26:	rol    DWORD PTR [edx+0x4e],cl
  41da29:	imul   esp,DWORD PTR [eax+0x49],0x5dcf2497
  41da30:	lods   eax,DWORD PTR ds:[esi]
  41da31:	pop    edi
  41da32:	and    BYTE PTR [edi*1+0x475de34a],0xcd
  41da3a:	fsubr  QWORD PTR [edi]
  41da3c:	mov    ebp,0x1287ac5c
  41da41:	lods   al,BYTE PTR ds:[esi]
  41da42:	push   0x26
  41da44:	adc    edi,DWORD PTR [esi]
  41da46:	xchg   ebp,eax
  41da47:	mov    fs,WORD PTR [eax+0x38aa347b]
  41da4d:	test   BYTE PTR [edx+0x1be4cd66],al
  41da53:	in     al,dx
  41da54:	mov    al,ds:0x84793d1c
  41da59:	daa    
  41da5a:	push   ds
  41da5b:	push   esp
  41da5c:	(bad)  
  41da5d:	mov    ebx,0xc330859e
  41da62:	arpl   WORD PTR [edx-0x7f],dx
  41da65:	and    DWORD PTR [edi+edi*8+0x52],edi
  41da69:	pop    esi
  41da6a:	mov    cl,0x40
  41da6c:	mov    ebp,0xa287d98f
  41da71:	jmp    0x17bd8772
  41da76:	dec    eax
  41da77:	das    
  41da78:	fild   DWORD PTR es:[ebx]
  41da7b:	dec    esi
  41da7c:	fiadd  DWORD PTR [edx-0x3]
  41da7f:	(bad)  
  41da80:	and    al,BYTE PTR [ebx]
  41da82:	outs   dx,DWORD PTR ds:[esi]
  41da83:	or     ecx,DWORD PTR [edx*4-0x72649c5f]
  41da8a:	iret   
  41da8b:	imul   eax,DWORD PTR [esi],0xffffffad
  41da8e:	xchg   esi,eax
  41da8f:	loopne 0x41da35
  41da91:	lahf   
  41da92:	dec    esi
  41da93:	add    esi,DWORD PTR [esi+0x6f]
  41da96:	push   ss
  41da97:	repnz push es
  41da99:	pop    eax
  41da9a:	dec    ecx
  41da9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da9c:	shl    DWORD PTR [ecx-0xbdc9760],cl
  41daa2:	jmp    DWORD PTR [ebp+0xc886013]
  41daa8:	fsubr  QWORD PTR [ebx]
  41daaa:	hlt    
  41daab:	mov    ch,BYTE PTR [edi-0xdb069fc]
  41dab1:	xor    DWORD PTR [ebp-0x3bdd6f09],edx
  41dab7:	mov    al,BYTE PTR [edi+0x5ae392c5]
  41dabd:	daa    
  41dabe:	ss cwde 
  41dac0:	fstp   QWORD PTR [edx-0x19c1afc]
  41dac6:	lock add BYTE PTR [edx],dh
  41dac9:	inc    esp
  41daca:	mov    edi,0x92f13e7b
  41dacf:	jne    0x41da73
  41dad1:	cmpxchg DWORD PTR [ebp-0x17],esi
  41dad5:	pmuludq mm6,QWORD PTR [esp+edi*4]
  41dad9:	mov    al,ds:0x462db854
  41dade:	fcomp  DWORD PTR [esi+eiz*8-0x59c83059]
  41dae5:	inc    esi
  41dae6:	or     ebx,edx
  41dae8:	and    BYTE PTR [edi],0xf2
  41daeb:	mov    BYTE PTR [ebx],dh
  41daed:	cmp    eax,edx
  41daef:	push   esp
  41daf0:	push   ebp
  41daf1:	jmp    0x78a4ceab
  41daf6:	rcr    edx,cl
  41daf8:	(bad)  [ebx]
  41dafa:	xchg   edi,eax
  41dafb:	nop
  41dafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dafd:	test   DWORD PTR [edx+edx*1+0x7ac7ead1],ebx
  41db04:	push   ss
  41db05:	mov    al,ds:0x1787eb22
  41db0a:	and    dh,dl
  41db0c:	retf   0xec41
  41db0f:	sbb    DWORD PTR [ebp-0x75],edx
  41db12:	outs   dx,DWORD PTR ds:[esi]
  41db13:	cmp    cl,bh
  41db15:	cld    
  41db16:	imul   ecx,DWORD PTR [esi],0x899dd040
  41db1c:	dec    edx
  41db1d:	xchg   edx,eax
  41db1e:	cdq    
  41db1f:	xchg   edi,eax
  41db20:	mov    edi,0xb7dc5caa
  41db25:	inc    esp
  41db26:	(bad)  
  41db27:	stc    
  41db28:	pop    esp
  41db29:	mov    ebx,0x5e8d9987
  41db2e:	mov    cl,0x79
  41db30:	cmp    eax,0xedc3889e
  41db35:	and    BYTE PTR [ebp-0x190a2801],ah
  41db3b:	push   edi
  41db3c:	sub    BYTE PTR [eax-0x21],bh
  41db3f:	mov    edx,0xdeb43ab2
  41db44:	pop    edx
  41db45:	lahf   
  41db46:	jo     0x41dba0
  41db48:	cmp    eax,0x621f5c04
  41db4d:	outs   dx,DWORD PTR ds:[esi]
  41db4e:	push   ebx
  41db4f:	test   DWORD PTR [edi+ebx*2-0x7a],ecx
  41db53:	jmp    0xc034d4cb
  41db58:	gs and al,0xbe
  41db5b:	inc    esi
  41db5c:	repz xor DWORD PTR [edi-0x20],eax
  41db60:	(bad)  
  41db61:	cdq    
  41db62:	(bad)  
  41db63:	dec    ebx
  41db64:	mov    ah,0xb2
  41db66:	outs   dx,BYTE PTR ds:[esi]
  41db67:	jnp    0x41db56
  41db69:	xchg   ecx,eax
  41db6a:	dec    ebp
  41db6b:	sub    esi,DWORD PTR [ecx-0xc]
  41db6e:	lods   al,BYTE PTR ds:[esi]
  41db6f:	ret    0xf43d
  41db72:	fsub   st(3),st
  41db74:	test   DWORD PTR [ecx+edi*4],0xe73a606b
  41db7b:	mov    BYTE PTR [ecx+0x4b],bh
  41db7e:	call   0x11dfa259
  41db83:	ins    DWORD PTR es:[edi],dx
  41db84:	sar    BYTE PTR [esi+edx*8-0x4b],1
  41db88:	fld    QWORD PTR ds:0xae2c58e7
  41db8e:	retf   
  41db8f:	jmp    0x8e8b2c75
  41db94:	mov    esp,DWORD PTR [ebp+0x43]
  41db97:	and    BYTE PTR [ecx-0x4b],ch
  41db9a:	ficom  DWORD PTR [edx]
  41db9c:	in     eax,0xee
  41db9e:	loop   0x41dbe2
  41dba0:	xor    eax,0xc46f3001
  41dba5:	retf   
  41dba6:	popa   
  41dba7:	pop    edx
  41dba8:	adc    DWORD PTR [ecx-0x28eab8bc],0x2
  41dbaf:	fstp   QWORD PTR [ecx-0x2d3a7023]
  41dbb5:	mov    al,0xcd
  41dbb7:	xor    al,0x42
  41dbb9:	add    eax,0x8b717ae9
  41dbbe:	hlt    
  41dbbf:	into   
  41dbc0:	mov    ebp,0xfd69df3b
  41dbc5:	test   DWORD PTR [eax],ecx
  41dbc7:	add    bl,cl
  41dbc9:	stos   BYTE PTR es:[edi],al
  41dbca:	cmp    BYTE PTR [eax+0x4f9867a0],cl
  41dbd0:	adc    DWORD PTR [ebx-0x65],ebx
  41dbd3:	(bad)  
  41dbd5:	lds    ebx,FWORD PTR [ebx+eax*2+0x6248a026]
  41dbdc:	push   0xeaab41e1
  41dbe1:	les    ecx,FWORD PTR [eax]
  41dbe3:	mov    ds:0x4cc8f506,eax
  41dbe8:	xlat   BYTE PTR ds:[ebx]
  41dbe9:	mov    eax,0x60b38484
  41dbee:	mov    al,0x8f
  41dbf0:	js     0x41db8d
  41dbf2:	rcr    esi,0x25
  41dbf5:	aaa    
  41dbf6:	in     al,0xce
  41dbf8:	jne    0x41dc01
  41dbfa:	fwait
  41dbfb:	pop    esi
  41dbfc:	xchg   ebp,eax
  41dbfd:	adc    DWORD PTR [edi],0xfffffffb
  41dc00:	xor    DWORD PTR [ecx-0x53f6d79c],edi
  41dc06:	jg     0x41dba8
  41dc08:	pop    es
  41dc09:	jo     0x41dc09
  41dc0b:	in     eax,0x15
  41dc0d:	aaa    
  41dc0e:	mov    ah,0x76
  41dc10:	(bad)  
  41dc11:	mov    edi,DWORD PTR [edx]
  41dc13:	inc    ebx
  41dc14:	adc    esi,ebx
  41dc16:	xor    al,0xdf
  41dc18:	push   cs
  41dc19:	aas    
  41dc1a:	ror    DWORD PTR [edi+eiz*4],cl
  41dc1d:	pop    es
  41dc1e:	lods   al,BYTE PTR cs:[esi]
  41dc20:	mov    ebp,es
  41dc22:	mov    esp,0x1a64d616
  41dc27:	jmp    DWORD PTR [edx]
  41dc29:	or     edx,DWORD PTR [edx]
  41dc2b:	cmp    BYTE PTR [edx-0x3d],dl
  41dc2e:	nop
  41dc2f:	mov    dh,0x49
  41dc31:	mov    edi,0x8f2952ed
  41dc36:	or     eax,esp
  41dc38:	stos   DWORD PTR es:[edi],eax
  41dc39:	xor    DWORD PTR [ebp-0x47],edx
  41dc3c:	mov    edi,esp
  41dc3e:	adc    ecx,0x5f
  41dc41:	mov    bl,BYTE PTR [esi+edx*8-0x862a04d]
  41dc48:	rol    DWORD PTR [ebp+eax*2+0x50],cl
  41dc4c:	nop
  41dc4d:	or     ebx,DWORD PTR [ebx-0x48d566f2]
  41dc53:	mov    edi,0xe008e9f
  41dc58:	je     0x41dc00
  41dc5a:	push   ebp
  41dc5b:	pop    DWORD PTR [eax+esi*4+0x7d5b86d1]
  41dc62:	iret   
  41dc63:	aam    0x37
  41dc65:	mov    DWORD PTR [edx+0xe03b51f],eax
  41dc6b:	jb     0x41dc5f
  41dc6d:	outs   dx,DWORD PTR ds:[esi]
  41dc6e:	sub    eax,0x8ffa5c4a
  41dc73:	in     eax,dx
  41dc74:	jg     0x41dcec
  41dc76:	inc    ebx
  41dc77:	std    
  41dc78:	jo     0x41dc5e
  41dc7a:	dec    ecx
  41dc7b:	gs repz mul ebx
  41dc7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc80:	push   cs
  41dc81:	clc    
  41dc82:	data16 arpl bp,ax
  41dc85:	test   BYTE PTR [esi+esi*8],bh
  41dc88:	nop
  41dc89:	push   ss
  41dc8a:	mov    bh,0x1c
  41dc8c:	mov    esp,0x23cf8aff
  41dc91:	add    DWORD PTR [edi],esp
  41dc93:	retf   
  41dc94:	sar    BYTE PTR [edi+0x602df949],cl
  41dc9a:	(bad)
  41dc9e:	(bad)  
  41dc9f:	cmp    al,0xd3
  41dca1:	pop    ebx
  41dca2:	inc    edx
  41dca3:	push   edx
  41dca4:	push   ss
  41dca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dca6:	daa    
  41dca7:	mov    esi,0x45e04bef
  41dcac:	loopne 0x41dc58
  41dcae:	out    0xab,eax
  41dcb0:	stc    
  41dcb1:	xor    ebp,ebx
  41dcb3:	mov    al,ds:0x5cfbfa87
  41dcb8:	(bad)  
  41dcb9:	push   edi
  41dcba:	sbb    BYTE PTR [esi],dl
  41dcbc:	enter  0xc9af,0x84
  41dcc0:	test   DWORD PTR [ebp-0x4614266b],edi
  41dcc6:	mov    edi,0xa31e2189
  41dccb:	adc    ecx,esp
  41dccd:	bound  edx,QWORD PTR [eax+esi*4-0x6d]
  41dcd1:	cmc    
  41dcd2:	and    eax,0xaebe1daa
  41dcd7:	adc    ebx,0xb4d383a
  41dcdd:	mov    eax,ds:0x9da2e8af
  41dce2:	retf   
  41dce3:	dec    ebx
  41dce4:	jg     0x41dcf1
  41dce6:	inc    esp
  41dce7:	sbb    BYTE PTR [ecx-0x425308d6],bl
  41dced:	xchg   BYTE PTR [edx],dh
  41dcef:	mov    edx,0xe4bc7818
  41dcf4:	jecxz  0x41dd30
  41dcf6:	aad    0xb5
  41dcf8:	cli    
  41dcf9:	pop    es
  41dcfa:	loopne 0x41dcb2
  41dcfc:	mov    ebx,0x37208f9e
  41dd01:	cdq    
  41dd02:	inc    ebx
  41dd03:	fmul   DWORD PTR [esi]
  41dd05:	leave  
  41dd06:	mov    dh,0x6d
  41dd08:	or     al,0xeb
  41dd0a:	cli    
  41dd0b:	mov    bl,0xa4
  41dd0d:	and    al,0xc3
  41dd0f:	in     eax,dx
  41dd10:	cli    
  41dd11:	xor    al,0x2
  41dd13:	sub    al,0x3a
  41dd15:	cwde   
  41dd16:	aad    0xa6
  41dd18:	adc    bl,BYTE PTR [esi]
  41dd1a:	stc    
  41dd1b:	imul   eax
  41dd1d:	sub    al,0xed
  41dd1f:	stos   BYTE PTR es:[edi],al
  41dd20:	aad    0xfb
  41dd22:	cmp    esp,esi
  41dd24:	cwde   
  41dd25:	sub    BYTE PTR [eax],bl
  41dd27:	mov    eax,0x263090ae
  41dd2c:	xchg   esi,eax
  41dd2d:	int    0xb
  41dd2f:	hlt    
  41dd30:	sub    bh,BYTE PTR [eax]
  41dd32:	sub    al,0xf9
  41dd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd35:	xchg   ecx,eax
  41dd36:	pop    esp
  41dd37:	inc    eax
  41dd38:	enter  0x165c,0x23
  41dd3c:	out    dx,eax
  41dd3d:	mov    ebp,0x900b45ba
  41dd42:	sbb    BYTE PTR [eax],bl
  41dd44:	push   0xffffff89
  41dd46:	pop    es
  41dd47:	test   eax,0xfe1e73cb
  41dd4c:	mov    ecx,0x287ed40a
  41dd51:	sub    bl,dl
  41dd53:	jmp    0x41ddba
  41dd55:	lahf   
  41dd56:	test   BYTE PTR ds:0xdf130361,dl
  41dd5c:	fstp   DWORD PTR [edi-0x16b2969d]
  41dd62:	adc    ebx,ebp
  41dd64:	lods   eax,DWORD PTR ds:[esi]
  41dd65:	xchg   esp,eax
  41dd66:	ds cmp edi,ecx
  41dd69:	sahf   
  41dd6a:	or     ecx,eax
  41dd6c:	xor    edx,DWORD PTR [ebp-0x7]
  41dd6f:	pop    ecx
  41dd70:	mov    bh,0x2a
  41dd72:	nop
  41dd73:	xchg   edi,eax
  41dd74:	cdq    
  41dd75:	int3   
  41dd76:	loope  0x41dddd
  41dd78:	inc    eax
  41dd79:	in     eax,0x6e
  41dd7b:	jo     0x41dde3
  41dd7d:	and    ebx,ebx
  41dd7f:	and    BYTE PTR [esi],bh
  41dd81:	inc    ebp
  41dd82:	fsubr  st(5),st
  41dd84:	aam    0x64
  41dd86:	adc    bh,BYTE PTR [eax]
  41dd88:	out    dx,al
  41dd89:	test   ecx,esp
  41dd8b:	sbb    DWORD PTR [edx-0x72],0xf2382754
  41dd92:	in     al,0x4
  41dd94:	aaa    
  41dd95:	pop    edi
  41dd96:	stc    
  41dd97:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd99:	xchg   edi,eax
  41dd9a:	test   ebx,esi
  41dd9c:	retf   
  41dd9d:	daa    
  41dd9e:	addr16 dec ebp
  41dda0:	outs   dx,DWORD PTR ds:[esi]
  41dda1:	cli    
  41dda2:	in     al,dx
  41dda3:	pop    edx
  41dda4:	stc    
  41dda5:	push   ds
  41dda6:	jle    0x41ddf6
  41dda8:	lods   al,BYTE PTR ds:[esi]
  41dda9:	mov    ds:0xa6345c17,eax
  41ddae:	dec    ebp
  41ddaf:	sbb    ah,cl
  41ddb1:	arpl   WORD PTR [esi-0x5c],dx
  41ddb4:	pop    ss
  41ddb5:	into   
  41ddb6:	adc    al,0x6a
  41ddb8:	cwde   
  41ddb9:	test   DWORD PTR [ebp-0x1809011b],0xb48a9407
  41ddc3:	(bad)  
  41ddc5:	(bad)  
  41ddc6:	stos   BYTE PTR es:[edi],al
  41ddc7:	adc    eax,0xa74a91de
  41ddcc:	out    0x60,al
  41ddce:	cwde   
  41ddcf:	mov    ebx,0x9376d1ec
  41ddd4:	lods   al,BYTE PTR ds:[esi]
  41ddd5:	xor    cl,bl
  41ddd7:	xchg   edi,eax
  41ddd8:	xor    DWORD PTR [edi+0x3ab3d1d7],edx
  41ddde:	push   ss
  41dddf:	imul   ebp,DWORD PTR [esp+edx*8-0x203e75a5],0xffffffb5
  41dde7:	shl    cl,1
  41dde9:	mov    ds:0xfc017d2f,al
  41ddee:	das    
  41ddef:	shl    BYTE PTR [ecx],cl
  41ddf1:	in     al,0x6e
  41ddf3:	aas    
  41ddf4:	xchg   edx,eax
  41ddf5:	imul   esp,DWORD PTR [ebp+edx*4-0x28bce711],0x28d8e352
  41de00:	pop    edx
  41de01:	and    ch,BYTE PTR [ecx-0x35ed2461]
  41de07:	push   0xffffffa2
  41de09:	inc    ebx
  41de0a:	into   
  41de0b:	aad    0x77
  41de0d:	jno    0x41de86
  41de0f:	imul   DWORD PTR [edx+0x2a]
  41de12:	mov    ebp,0x92540bfa
  41de17:	fs sti 
  41de19:	ja     0x41de97
  41de1b:	push   0xbc5621e0
  41de20:	into   
  41de21:	mov    BYTE PTR [edi],dl
  41de23:	pop    edx
  41de24:	ins    BYTE PTR es:[edi],dx
  41de25:	sub    dh,bl
  41de27:	sub    DWORD PTR [eax-0x6236142c],esp
  41de2d:	xchg   esp,eax
  41de2e:	and    dl,BYTE PTR [ebp-0x1e]
  41de31:	in     al,dx
  41de32:	aad    0xae
  41de34:	or     edx,DWORD PTR [edi-0x62]
  41de37:	inc    ebx
  41de38:	cmc    
  41de39:	cmc    
  41de3a:	fs in  eax,dx
  41de3c:	pop    edx
  41de3d:	outs   dx,DWORD PTR ds:[esi]
  41de3e:	pop    ebp
  41de3f:	xor    bl,BYTE PTR [eax+0x242e6810]
  41de45:	rcl    ch,0xb5
  41de48:	fucomip st,st(4)
  41de4a:	add    eax,DWORD PTR [esi]
  41de4c:	adc    al,0x9f
  41de4e:	mov    al,0x55
  41de50:	bound  esi,QWORD PTR [edi+0x6ff80e25]
  41de56:	xchg   ebp,eax
  41de57:	(bad)  
  41de58:	and    DWORD PTR [eax+0x523ae130],ecx
  41de5e:	in     eax,dx
  41de5f:	push   edi
  41de60:	test   al,0x37
  41de62:	add    dl,BYTE PTR [edx-0x147309e6]
  41de68:	pusha  
  41de69:	xor    esi,ecx
  41de6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de6c:	jg     0x41de1f
  41de6e:	test   eax,0xef6dc682
  41de73:	mov    ah,BYTE PTR [edx-0x73d8d56f]
  41de79:	add    bh,ah
  41de7b:	mov    ch,0xbb
  41de7d:	sub    DWORD PTR [eax+0x15dfb181],edi
  41de83:	mov    al,0x7e
  41de85:	xchg   BYTE PTR [edi],bl
  41de87:	loope  0x41de40
  41de89:	fwait
  41de8a:	mov    eax,ds:0x13ccdf4f
  41de8f:	arpl   WORD PTR [esi+0x3f],cx
  41de92:	pop    ebp
  41de93:	and    BYTE PTR [edx-0x7815a79f],dl
  41de99:	xor    al,0x9c
  41de9b:	ret    
  41de9c:	mov    dh,0xab
  41de9e:	cs stos BYTE PTR es:[edi],al
  41dea0:	or     edx,DWORD PTR [eax]
  41dea2:	pop    ecx
  41dea3:	cmp    al,0xa3
  41dea5:	pop    ecx
  41dea6:	xchg   ebx,eax
  41dea7:	dec    esi
  41dea8:	pusha  
  41dea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deaa:	lds    ebp,FWORD PTR [esi+0x66]
  41dead:	xor    DWORD PTR [ebx],0x7c
  41deb0:	js     0x41dee5
  41deb2:	or     eax,0xf9c9ba2d
  41deb7:	push   edx
  41deb8:	enter  0x8fbc,0xd5
  41debc:	jno    0x41de94
  41debe:	mov    ds,esi
  41dec0:	mov    bh,0x16
  41dec2:	mov    dl,0x8d
  41dec4:	inc    esp
  41dec5:	mov    bl,0xe2
  41dec7:	stos   BYTE PTR es:[edi],al
  41dec8:	loopne 0x41df3a
  41deca:	xchg   esp,eax
  41decb:	sub    ebx,DWORD PTR [esi-0x47]
  41dece:	add    BYTE PTR [edx+eiz*4-0xc],cl
  41ded2:	push   esp
  41ded3:	out    0xa7,eax
  41ded5:	lock add bh,BYTE PTR [esi+ebp*4-0x407dfb10]
  41dedd:	cld    
  41dede:	test   eax,0xa6efa185
  41dee3:	out    dx,al
  41dee4:	clc    
  41dee5:	pop    edi
  41dee6:	xchg   ebx,eax
  41dee7:	out    dx,eax
  41dee8:	int3   
  41dee9:	stos   DWORD PTR es:[edi],eax
  41deea:	arpl   WORD PTR [edx+0x4116689f],si
  41def0:	aas    
  41def1:	out    0xa1,al
  41def3:	mov    dh,0x8c
  41def5:	push   ecx
  41def6:	jnp    0x41dee5
  41def8:	rcl    esp,1
  41defa:	(bad)  
  41defb:	cs mov edi,ebx
  41defe:	add    cl,BYTE PTR [edx-0xc2d160f]
  41df04:	pop    es
  41df05:	push   ss
  41df06:	mov    ds:0xfadaddb,eax
  41df0b:	nop
  41df0c:	ficomp WORD PTR [ebx-0x654163a7]
  41df12:	imul   edx,DWORD PTR [eax+0x32],0x4ebee1ac
  41df19:	and    eax,0x33627162
  41df1e:	cmp    DWORD PTR [eax],esi
  41df20:	xchg   esi,eax
  41df21:	cwde   
  41df22:	aad    0x78
  41df24:	js     0x41df9d
  41df26:	lds    ebx,FWORD PTR [ecx]
  41df28:	cwde   
  41df29:	push   esp
  41df2a:	dec    esp
  41df2b:	inc    edi
  41df2c:	adc    ah,cl
  41df2e:	cli    
  41df2f:	dec    ebp
  41df30:	sti    
  41df31:	adc    BYTE PTR [edi-0x67d06a1c],al
  41df37:	inc    ebp
  41df38:	loopne 0x41df46
  41df3a:	int3   
  41df3b:	push   edx
  41df3c:	clc    
  41df3d:	dec    ebp
  41df3e:	xor    eax,0xebcb6ece
  41df43:	stc    
  41df44:	xchg   BYTE PTR [eax-0x5d],ch
  41df47:	fisttp DWORD PTR [esi+0x57]
  41df4a:	repz jl 0x41df0b
  41df4d:	fadd   st(7),st
  41df4f:	and    DWORD PTR [esi+0x3d508f52],esi
  41df55:	add    ebp,edi
  41df57:	mov    ebp,DWORD PTR [ebp-0x2a]
  41df5a:	rcr    al,cl
  41df5c:	int3   
  41df5d:	xor    al,0x21
  41df5f:	shl    edx,1
  41df61:	mov    al,ds:0xba63c7a8
  41df66:	jmp    0xde3cebf6
  41df6b:	(bad)  
  41df6c:	mov    edx,0xa89a6742
  41df71:	out    0xea,eax
  41df73:	jl     0x41df47
  41df75:	inc    edx
  41df76:	out    dx,al
  41df77:	jno    0x41dfdc
  41df79:	sub    al,0x14
  41df7b:	xor    BYTE PTR [eax],dh
  41df7d:	or     edi,esi
  41df7f:	inc    eax
  41df80:	aam    0xe0
  41df82:	jecxz  0x41df54
  41df84:	std    
  41df85:	sbb    dh,BYTE PTR [edx+0x34adda85]
  41df8b:	repz enter 0xe683,0x1b
  41df90:	sbb    al,0x75
  41df92:	je     0x41df94
  41df94:	xor    BYTE PTR [ecx+ebx*8-0x20],cl
  41df98:	mov    eax,0x97cba6e5
  41df9d:	jmp    0x41dfe4
  41df9f:	iret   
  41dfa0:	dec    ebp
  41dfa1:	ins    DWORD PTR es:[edi],dx
  41dfa2:	and    DWORD PTR [eax],0x2970d3a9
  41dfa8:	mov    cl,0xb4
  41dfaa:	push   ecx
  41dfab:	cs jg  0x41df85
  41dfae:	adc    BYTE PTR [esi+0x568f58ba],ch
  41dfb4:	retf   0x4abc
  41dfb7:	out    dx,eax
  41dfb8:	in     al,0xbb
  41dfba:	retf   
  41dfbb:	and    dl,BYTE PTR [eax+0x2d]
  41dfbe:	outs   dx,BYTE PTR ds:[esi]
  41dfbf:	inc    edx
  41dfc0:	in     eax,dx
  41dfc1:	xchg   esp,eax
  41dfc2:	arpl   WORD PTR [ebx+0x2a774af6],ax
  41dfc8:	xor    cl,0xe8
  41dfcb:	jnp    0x41e034
  41dfcd:	mov    al,ds:0xba68e5c3
  41dfd2:	loop   0x41dfcc
  41dfd4:	mov    dl,0x73
  41dfd6:	push   edi
  41dfd7:	add    DWORD PTR [ebx-0x2828d50d],edi
  41dfdd:	scas   al,BYTE PTR es:[edi]
  41dfde:	add    ebx,0xe3651d9c
  41dfe4:	test   al,0x48
  41dfe6:	stc    
  41dfe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe8:	xlat   BYTE PTR ds:[ebx]
  41dfe9:	dec    edx
  41dfea:	ins    DWORD PTR es:[edi],dx
  41dfeb:	popa   
  41dfec:	inc    ecx
  41dfed:	jecxz  0x41dfb6
  41dfef:	xor    al,bl
  41dff1:	pusha  
  41dff2:	cwde   
  41dff3:	gs ins BYTE PTR es:[edi],dx
  41dff5:	std    
  41dff6:	lods   al,BYTE PTR ds:[esi]
  41dff7:	cmc    
  41dff8:	sub    eax,0x4172e86f
  41dffd:	mov    dh,0x88
  41dfff:	retf   
  41e000:	jo     0x41dfa0
  41e002:	mov    dh,0x40
  41e004:	lahf   
  41e005:	sbb    al,0xd9
  41e007:	(bad)  
  41e008:	jne    0x41e025
  41e00a:	frstor [edi+0x17c71c2]
  41e010:	dec    ecx
  41e011:	sbb    dl,BYTE PTR [esi+0x2a]
  41e014:	pop    ds
  41e015:	sub    DWORD PTR [edx],0x18
  41e018:	pop    esi
  41e019:	sbb    BYTE PTR [ebx+ebx*8],dl
  41e01c:	mov    bl,BYTE PTR [eax]
  41e01e:	or     al,0x2a
  41e020:	adc    DWORD PTR [ebx+0x2ed09bed],ecx
  41e026:	pop    ebx
  41e027:	imul   DWORD PTR [esi-0x1135ac6c]
  41e02d:	and    eax,0x656c9575
  41e032:	test   DWORD PTR [eax],edi
  41e034:	or     al,0x30
  41e036:	ret    
  41e037:	push   eax
  41e038:	int3   
  41e039:	iret   
  41e03a:	dec    eax
  41e03b:	or     al,0xb6
  41e03d:	imul   ebx,DWORD PTR [ebp+0x7c],0x79
  41e041:	lahf   
  41e042:	js     0x41e010
  41e044:	imul   ebp,ebx,0x3e9eb578
  41e04a:	(bad)  
  41e04c:	scas   al,BYTE PTR es:[edi]
  41e04d:	imul   eax
  41e04f:	dec    edi
  41e050:	jmp    0x41dfed
  41e052:	jns    0x41dffb
  41e054:	sub    al,0x97
  41e056:	mov    bh,0x2e
  41e058:	sbb    al,0xb
  41e05a:	repnz lea ebx,[ebx+0x2c9760da]
  41e061:	jge    0x41e09b
  41e063:	xor    DWORD PTR [esi+esi*4],edx
  41e066:	and    DWORD PTR [ecx-0x10],0xffffffe9
  41e06a:	in     eax,0x73
  41e06c:	jno    0x41e09d
  41e06e:	cdq    
  41e06f:	mov    esi,0xc7e3662e
  41e074:	call   0xd82c:0x47acaec3
  41e07b:	into   
  41e07c:	jmp    0x5a19cac0
  41e081:	or     dh,BYTE PTR [esi+0xf]
  41e084:	jmp    0x9ad8:0x198ca790
  41e08b:	jb     0x41e093
  41e08d:	xchg   dh,al
  41e08f:	mov    cl,0xa7
  41e091:	push   cs
  41e092:	mov    esp,0x5ececdfd
  41e097:	adc    eax,0xea6cc484
  41e09c:	pop    eax
  41e09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e09f:	jmp    0x1c6a:0xefb85156
  41e0a6:	push   cs
  41e0a7:	cld    
  41e0a8:	add    DWORD PTR [ecx-0x28],ebx
  41e0ab:	sbb    edx,DWORD PTR [ecx+0x4498b225]
  41e0b1:	aaa    
  41e0b2:	sbb    al,0x60
  41e0b4:	fisubr WORD PTR [ebx+0x48]
  41e0b7:	pop    es
  41e0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b9:	jle    0x41e084
  41e0bb:	adc    edx,DWORD PTR [ebx-0x1ba56ef9]
  41e0c1:	xlat   BYTE PTR ds:[ebx]
  41e0c2:	mov    bh,0xa7
  41e0c4:	sub    DWORD PTR [edi-0x78e5f134],esi
  41e0ca:	imul   ecx,DWORD PTR [esi],0xcb9e07ab
  41e0d0:	es retf 0xe479
  41e0d4:	jb     0x41e0e5
  41e0d6:	mov    ebx,0x2420ccd5
  41e0db:	stos   BYTE PTR es:[edi],al
  41e0dc:	(bad)  [ecx]
  41e0de:	sbb    ecx,ebp
  41e0e0:	cli    
  41e0e1:	mov    ah,0xf9
  41e0e3:	cdq    
  41e0e4:	mov    DWORD PTR ds:0xaed50404,ebp
  41e0ea:	jp     0x41e10f
  41e0ec:	xchg   edi,eax
  41e0ed:	into   
  41e0ee:	and    eax,0xe93288f3
  41e0f3:	loopne 0x41e0d9
  41e0f5:	sub    DWORD PTR [ecx+edx*1+0x78],eax
  41e0f9:	pop    ecx
  41e0fa:	adc    dh,BYTE PTR [ebx+0x30]
  41e0fd:	loop   0x41e097
  41e0ff:	mov    eax,ds:0xd49cd98d
  41e104:	popf   
  41e105:	xor    ch,BYTE PTR ds:0xabd88616
  41e10b:	repz jnp 0x41e185
  41e10e:	adc    edx,esp
  41e110:	mov    dl,0x64
  41e112:	out    0xb6,al
  41e114:	cmp    edx,DWORD PTR [esi+0x38]
  41e117:	or     ah,BYTE PTR [ebp+esi*8-0x30]
  41e11b:	es (bad) 
  41e11d:	stc    
  41e11e:	xor    eax,0x55d254f9
  41e123:	jno    0x41e0de
  41e125:	push   ss
  41e126:	xchg   edi,eax
  41e127:	in     al,dx
  41e128:	and    BYTE PTR [ebx+0x4a],cl
  41e12b:	out    dx,al
  41e12c:	gs sahf 
  41e12e:	mov    edi,0x74b70f38
  41e133:	add    dh,cl
  41e135:	sar    BYTE PTR [esi+0x34],1
  41e138:	retf   
  41e139:	push   esi
  41e13a:	pushf  
  41e13b:	(bad)  
  41e13c:	cmp    DWORD PTR [esi+0x72],esp
  41e13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e140:	jne    0x41e0c8
  41e142:	aad    0x52
  41e144:	sar    DWORD PTR [esi],1
  41e146:	(bad)  
  41e147:	mov    cl,0x82
  41e149:	xchg   BYTE PTR [esi+ebx*2-0x16],bl
  41e14d:	push   edi
  41e14e:	hlt    
  41e14f:	mov    ds:0xe7e9e91f,eax
  41e154:	rcr    eax,cl
  41e156:	add    BYTE PTR [esi],bh
  41e158:	loopne 0x41e0f5
  41e15a:	cs xor esp,esi
  41e15d:	lahf   
  41e15e:	pop    esp
  41e15f:	cwde   
  41e160:	jmp    0x2d6e:0x58b42c8
  41e167:	int    0xb3
  41e169:	inc    ebp
  41e16a:	jne    0x41e19a
  41e16c:	xor    ah,BYTE PTR [ebx+ebp*1-0x44]
  41e170:	cs mov dl,0x1c
  41e173:	sub    bh,BYTE PTR [eax+0x2e]
  41e176:	stc    
  41e177:	push   0x6b20182f
  41e17c:	push   ds
  41e17d:	adc    eax,0xfb4430b4
  41e182:	lea    ecx,[ebx+ecx*8+0x5e3922ed]
  41e189:	(bad)  
  41e18a:	pop    edx
  41e18b:	or     eax,0x102c3f76
  41e190:	fild   QWORD PTR [esi+0xbf84b49]
  41e196:	xor    ch,BYTE PTR [edi-0x731cb965]
  41e19c:	add    eax,0xd7372fbf
  41e1a1:	outs   dx,DWORD PTR ds:[esi]
  41e1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1a3:	xor    DWORD PTR [ebp+edi*2+0x4a],0x360eb7f2
  41e1ab:	iret   
  41e1ac:	push   ss
  41e1ad:	pop    ebp
  41e1ae:	mov    gs,WORD PTR [ecx+0x5fc6f062]
  41e1b4:	mov    DWORD PTR [edx+0xa63129d],ebp
  41e1ba:	inc    ebp
  41e1bb:	cmc    
  41e1bc:	in     ax,dx
  41e1be:	push   ebx
  41e1bf:	fnstcw WORD PTR [edi*4+0x2552ce27]
  41e1c6:	ds sub eax,0x861e20cf
  41e1cc:	sahf   
  41e1cd:	pop    ecx
  41e1ce:	cmp    eax,0xf07e9522
  41e1d3:	sub    BYTE PTR [ebp+0x2e],0x96
  41e1d7:	dec    ebx
  41e1d8:	xchg   al,ah
  41e1da:	out    dx,eax
  41e1db:	pop    edi
  41e1dc:	dec    edx
  41e1dd:	adc    ebp,DWORD PTR [edi+0x4f9bb17b]
  41e1e3:	xchg   edi,eax
  41e1e4:	test   DWORD PTR ds:0x78f99467,ecx
  41e1ea:	scas   eax,DWORD PTR es:[edi]
  41e1eb:	mov    ecx,0xb7296898
  41e1f0:	xchg   BYTE PTR [edi+0x6f],dh
  41e1f3:	mov    ds:0x7924e730,eax
  41e1f8:	mov    cl,0x16
  41e1fa:	mov    ?,WORD PTR [esi]
  41e1fc:	or     DWORD PTR [ecx-0x7b],ebp
  41e1ff:	sub    eax,0x36050e9d
  41e204:	or     eax,0xcb9fdf5d
  41e209:	mov    dl,0x57
  41e20b:	inc    esi
  41e20c:	test   al,0x84
  41e20e:	int3   
  41e20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e210:	js     0x41e1cd
  41e212:	ins    DWORD PTR es:[edi],dx
  41e213:	mov    al,BYTE PTR [eax]
  41e215:	lods   eax,DWORD PTR ds:[esi]
  41e216:	mov    ds:0xf8053331,eax
  41e21b:	jb     0x41e25b
  41e21d:	call   0x9e5f9dff
  41e222:	push   edx
  41e223:	gs clc 
  41e225:	ins    BYTE PTR es:[edi],dx
  41e226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e227:	add    DWORD PTR [edi],ecx
  41e229:	push   eax
  41e22a:	adc    dh,BYTE PTR [edi]
  41e22c:	push   ds
  41e22d:	sbb    BYTE PTR [eax-0x6cdc36ae],0xab
  41e234:	in     al,dx
  41e235:	sbb    eax,0xc0cbeebd
  41e23a:	dec    edx
  41e23b:	cmp    ebx,0xf6853ef3
  41e241:	and    DWORD PTR [ebp+0x3b],0x67
  41e245:	or     ch,BYTE PTR [ecx]
  41e247:	rcr    DWORD PTR [edi],0xac
  41e24a:	retf   0xf304
  41e24d:	test   DWORD PTR [ecx],esi
  41e24f:	xor    al,0xda
  41e251:	xchg   edi,eax
  41e252:	push   edx
  41e253:	leave  
  41e254:	fst    QWORD PTR [esi-0x2a]
  41e257:	pop    esp
  41e258:	inc    edi
  41e259:	shr    BYTE PTR [esp+edi*1+0x1],0xe5
  41e25e:	inc    ebp
  41e25f:	fucomi st,st(1)
  41e261:	sub    DWORD PTR [esi-0x52546672],edx
  41e267:	retf   
  41e268:	int3   
  41e269:	pop    ebp
  41e26a:	dec    esp
  41e26b:	fs in  al,dx
  41e26d:	push   ebx
  41e26e:	cmp    al,BYTE PTR [ebx+edx*2]
  41e271:	mov    al,0x4d
  41e273:	inc    esi
  41e274:	push   ecx
  41e275:	jnp    0x41e2b7
  41e277:	mov    cl,0x79
  41e279:	sbb    DWORD PTR [esi+0x4d],edi
  41e27c:	imul   edx,ecx,0xffffff95
  41e27f:	lar    ebx,WORD PTR [eax-0x4f73b5c4]
  41e286:	pop    ebx
  41e287:	push   ds
  41e288:	stc    
  41e289:	and    eax,0xcad3d38f
  41e28e:	dec    ecx
  41e28f:	adc    dh,BYTE PTR [esi+0x7a]
  41e292:	js     0x41e237
  41e294:	xor    bh,ah
  41e296:	js     0x41e229
  41e298:	mov    esi,0x8a88ff5b
  41e29d:	fldenv [ecx-0x1e]
  41e2a0:	hlt    
  41e2a1:	mov    dh,0xd2
  41e2a3:	out    0x3,eax
  41e2a5:	ins    BYTE PTR es:[edi],dx
  41e2a6:	inc    ecx
  41e2a7:	pop    eax
  41e2a8:	sub    esp,DWORD PTR [ebp-0x60]
  41e2ab:	(bad)  
  41e2ad:	ins    BYTE PTR es:[edi],dx
  41e2ae:	in     al,0x96
  41e2b0:	out    dx,al
  41e2b1:	or     al,0xd4
  41e2b3:	jmp    0x41e235
  41e2b5:	mov    cl,0xd3
  41e2b7:	arpl   WORD PTR [ebp-0x7ab6d45e],dx
  41e2bd:	ficomp DWORD PTR [ebx+ebp*1]
  41e2c0:	cmp    eax,0xcbca24de
  41e2c6:	mov    cl,0xec
  41e2c8:	loope  0x41e28c
  41e2ca:	(bad)  
  41e2cb:	jnp    0x41e2f8
  41e2cd:	dec    ebx
  41e2ce:	sub    BYTE PTR [edx+0x82d0227],dl
  41e2d4:	push   ecx
  41e2d5:	and    BYTE PTR [ecx+0x47e98ae0],ch
  41e2db:	and    dh,bh
  41e2dd:	mov    esi,0x1d595431
  41e2e2:	push   ecx
  41e2e3:	mov    ebp,DWORD PTR [edx-0x57]
  41e2e6:	and    eax,0xde4998a
  41e2eb:	jmp    0x2017:0x1bafaf1a
  41e2f2:	mov    ch,bh
  41e2f4:	stc    
  41e2f5:	stos   BYTE PTR es:[edi],al
  41e2f6:	lods   eax,DWORD PTR ds:[esi]
  41e2f7:	fnstsw WORD PTR [edx-0xb]
  41e2fa:	test   BYTE PTR [edi-0x9a677ee],bh
  41e300:	sub    DWORD PTR [ebx-0x1c3a00da],esi
  41e306:	fimul  DWORD PTR [esi-0x55ff0e0]
  41e30c:	lods   al,BYTE PTR ds:[esi]
  41e30d:	cmp    BYTE PTR [eax+0x3b],dh
  41e310:	leave  
  41e311:	mov    DWORD PTR [ebx-0x4ec9b469],eax
  41e317:	(bad)  
  41e318:	out    dx,eax
  41e319:	push   edx
  41e31a:	stos   BYTE PTR es:[edi],al
  41e31b:	xlat   BYTE PTR ds:[ebx]
  41e31c:	icebp  
  41e31d:	ret    
  41e31e:	enter  0xfbbe,0xed
  41e322:	or     ebp,DWORD PTR [ecx+0x1e3d56d]
  41e328:	and    BYTE PTR [ebp+0x63aa0a2e],bl
  41e32e:	test   BYTE PTR [ebp+eax*2-0x45],cl
  41e332:	pop    ss
  41e333:	in     al,dx
  41e334:	or     BYTE PTR [ebp+0x67],al
  41e337:	or     ecx,DWORD PTR [eax]
  41e339:	int    0x53
  41e33b:	call   0xfaae:0x19464a09
  41e342:	or     eax,0x182aec57
  41e347:	gs add al,0xa4
  41e34a:	sbb    eax,DWORD PTR [eax]
  41e34c:	mov    bh,0xf3
  41e34e:	jns    0x41e3ac
  41e350:	ss cwde 
  41e352:	daa    
  41e353:	pop    ds
  41e354:	imul   ebx,esp,0x89140438
  41e35a:	inc    edi
  41e35b:	and    al,0xc9
  41e35d:	adc    BYTE PTR [eax+0x1e],bh
  41e360:	rol    BYTE PTR [edi],1
  41e362:	sub    DWORD PTR [esi+edx*4+0x62],ebp
  41e366:	retf   0xd4d
  41e369:	xchg   ebx,eax
  41e36a:	inc    esi
  41e36b:	jno    0x41e3e8
  41e36d:	and    edi,DWORD PTR [ebx-0x14e8e6c3]
  41e373:	mov    al,0xf1
  41e375:	push   esi
  41e376:	ror    ch,1
  41e378:	jbe    0x41e3d9
  41e37a:	mov    esp,0xa6d39afa
  41e37f:	ins    BYTE PTR es:[edi],dx
  41e380:	arpl   WORD PTR [ebx],bx
  41e382:	sbb    BYTE PTR [ebx+0x6a],ch
  41e385:	dec    ecx
  41e386:	push   edx
  41e387:	int    0x7
  41e389:	mov    ecx,0xef83bebe
  41e38e:	jmp    0xc360:0xade295fd
  41e395:	retf   
  41e396:	mov    eax,0x15a2a508
  41e39b:	pop    ebx
  41e39c:	ins    DWORD PTR es:[edi],dx
  41e39d:	rcl    BYTE PTR [eax+0x3dd7ee04],0x9c
  41e3a4:	stos   BYTE PTR es:[edi],al
  41e3a5:	jmp    0x7520:0xba5f362e
  41e3ac:	adc    BYTE PTR [esi],ch
  41e3ae:	call   0xcd8007a5
  41e3b3:	mov    bl,0x21
  41e3b5:	inc    edi
  41e3b6:	in     eax,dx
  41e3b7:	ret    
  41e3b8:	std    
  41e3b9:	gs dec edi
  41e3bb:	dec    esi
  41e3bc:	loop   0x41e36e
  41e3be:	std    
  41e3bf:	in     eax,0xa3
  41e3c1:	jge    0x41e3ae
  41e3c3:	jg     0x41e438
  41e3c5:	push   0xac825035
  41e3ca:	je     0x41e3a1
  41e3cc:	and    BYTE PTR [ebp-0x4601887d],bl
  41e3d2:	adc    ch,BYTE PTR [ebx]
  41e3d4:	and    BYTE PTR [ebx-0x75],bl
  41e3d7:	rcr    bl,0xdd
  41e3da:	aam    0x64
  41e3dc:	mov    ch,0xc5
  41e3de:	dec    ebp
  41e3df:	lahf   
  41e3e0:	dec    esi
  41e3e1:	add    al,0x78
  41e3e3:	add    dh,dh
  41e3e5:	test   eax,0x1eeabfca
  41e3ea:	sub    cl,BYTE PTR [ecx+ebp*8]
  41e3ed:	or     ch,BYTE PTR [ebx+0x4a]
  41e3f0:	mov    dh,0xea
  41e3f2:	xchg   esi,eax
  41e3f3:	xchg   ebp,eax
  41e3f4:	xchg   esp,eax
  41e3f5:	(bad)  [esi]
  41e3f7:	je     0x41e390
  41e3f9:	pop    esi
  41e3fa:	jo     0x41e3b1
  41e3fc:	mov    esp,0xb118b9cb
  41e401:	loop   0x41e3ee
  41e403:	retf   0xeb66
  41e406:	xchg   ecx,eax
  41e407:	mov    ah,0x92
  41e409:	stos   DWORD PTR es:[edi],eax
  41e40a:	std    
  41e40b:	mov    BYTE PTR [esi+ecx*1+0x6dedb577],al
  41e412:	mov    edi,0x5849ee97
  41e417:	call   0xb385:0x46bf8b62
  41e41e:	scas   eax,DWORD PTR es:[edi]
  41e41f:	push   ebx
  41e420:	add    DWORD PTR [ebx+0xe],edx
  41e423:	pop    ecx
  41e424:	push   ebp
  41e425:	clc    
  41e426:	(bad)  
  41e427:	js     0x41e42b
  41e429:	fsubr  QWORD PTR [edx]
  41e42b:	xchg   esp,eax
  41e42c:	out    dx,al
  41e42d:	nop
  41e42e:	pop    ebp
  41e42f:	shr    dl,cl
  41e431:	aam    0x84
  41e433:	jns    0x41e49e
  41e435:	adc    edi,DWORD PTR [edx+0x16d2b0f9]
  41e43b:	jmp    0x6750:0xf4ea250e
  41e442:	in     al,dx
  41e443:	push   edx
  41e444:	and    DWORD PTR [eax-0xe200b0e],ebp
  41e44a:	arpl   di,di
  41e44c:	mov    ebx,0x2d8187a9
  41e451:	dec    esi
  41e452:	jge    0x41e4be
  41e454:	sbb    ah,ch
  41e456:	out    dx,al
  41e457:	sub    bl,BYTE PTR [eax]
  41e459:	outs   dx,DWORD PTR ds:[esi]
  41e45a:	test   BYTE PTR [edi+0x350502b5],ch
  41e460:	pop    ecx
  41e461:	jl     0x41e461
  41e463:	xchg   BYTE PTR [ebp-0x79162025],ah
  41e469:	mov    ebx,0x765d98ed
  41e46e:	ja     0x41e401
  41e470:	and    DWORD PTR [edx-0x3e67f44a],ebp
  41e476:	xchg   ebx,eax
  41e477:	add    al,ch
  41e479:	out    dx,eax
  41e47a:	or     bh,BYTE PTR [edx]
  41e47c:	mov    ah,0xb8
  41e47e:	ss mov esi,0xb4ec837f
  41e484:	rol    DWORD PTR [edi+eax*1+0x6a],cl
  41e488:	xchg   esp,eax
  41e489:	lods   al,BYTE PTR ds:[esi]
  41e48a:	xor    eax,0x6cbdcd3d
  41e48f:	jnp    0x41e442
  41e491:	cmp    al,0x99
  41e493:	xchg   edi,eax
  41e494:	sbb    eax,0xa95d3f61
  41e499:	xchg   ecx,eax
  41e49a:	cs xchg edx,eax
  41e49c:	sbb    bh,BYTE PTR [eax+0x755da7ac]
  41e4a2:	xchg   ecx,eax
  41e4a3:	xor    cl,dl
  41e4a5:	sbb    ch,BYTE PTR [ebx]
  41e4a7:	push   0xffffff95
  41e4a9:	inc    eax
  41e4aa:	add    ah,BYTE PTR [eax+0x72a1f83]
  41e4b0:	adc    BYTE PTR [edi+0x2606d923],dl
  41e4b6:	push   ds
  41e4b7:	mov    edi,0xe61ec4e7
  41e4bc:	fldenv [esi-0x46c7ae0]
  41e4c2:	movups xmm2,xmm0
  41e4c5:	pusha  
  41e4c6:	sbb    edi,DWORD PTR [edi]
  41e4c8:	push   ebx
  41e4c9:	and    ebx,DWORD PTR [ecx]
  41e4cb:	or     esp,ebx
  41e4cd:	loope  0x41e509
  41e4cf:	icebp  
  41e4d0:	mov    WORD PTR [edx-0x1152a488],?
  41e4d6:	xchg   esi,edi
  41e4d8:	in     al,dx
  41e4d9:	shr    DWORD PTR [edi+edx*2-0x4b],1
  41e4dd:	lea    edx,[ebp+0x12]
  41e4e0:	(bad)  
  41e4e1:	push   ebx
  41e4e2:	mov    es,WORD PTR [ebp+0x4e]
  41e4e5:	in     eax,dx
  41e4e6:	xchg   ebp,eax
  41e4e7:	outs   dx,DWORD PTR ds:[esi]
  41e4e8:	inc    esi
  41e4e9:	sbb    BYTE PTR [esi],0x41
  41e4ec:	xlat   BYTE PTR ds:[ebx]
  41e4ed:	xchg   ecx,eax
  41e4ee:	pop    edx
  41e4ef:	jmp    0x41e491
  41e4f1:	add    esp,0x12b774d9
  41e4f7:	cmp    BYTE PTR [ebp+0x34],0x4b
  41e4fb:	xor    eax,0xe84fa522
  41e500:	mov    ds:0x50e69ee1,al
  41e505:	mov    dl,0xac
  41e507:	jl     0x41e578
  41e509:	cwde   
  41e50a:	adc    ch,dh
  41e50c:	jne    0x41e491
  41e50e:	pushf  
  41e50f:	dec    eax
  41e510:	and    edx,DWORD PTR [esi+0x64]
  41e513:	cwde   
  41e514:	inc    edx
  41e515:	ins    DWORD PTR es:[edi],dx
  41e516:	inc    eax
  41e517:	nop
  41e518:	fsubr  DWORD PTR [ecx-0x9]
  41e51b:	ins    BYTE PTR es:[edi],dx
  41e51c:	dec    ebx
  41e51d:	fs scas eax,DWORD PTR es:[edi]
  41e51f:	mov    cl,0xd6
  41e521:	push   ss
  41e522:	ficomp DWORD PTR [edx+0x688e8905]
  41e528:	stc    
  41e529:	dec    DWORD PTR [edx+0x4bea1724]
  41e52f:	out    0xe5,eax
  41e531:	aas    
  41e532:	adc    eax,DWORD PTR [edi+0x4c91616c]
  41e538:	mov    esi,0x9941c2a
  41e53d:	and    al,0x16
  41e53f:	stos   DWORD PTR es:[edi],eax
  41e540:	mov    dh,0x31
  41e542:	sbb    al,0x3b
  41e544:	lahf   
  41e545:	cmp    al,0x4b
  41e548:	cmp    DWORD PTR [eax-0x4c40800b],ecx
  41e54e:	imul   ebp,DWORD PTR [ebp-0x33357c27],0xa8617c4e
  41e558:	inc    esp
  41e559:	pop    esp
  41e55a:	mov    esi,0x28f4b0cc
  41e55f:	loope  0x41e527
  41e561:	frstor [ebx+0x3c60284f]
  41e567:	jno    0x41e571
  41e569:	inc    ecx
  41e56a:	test   eax,0xdec988e7
  41e56f:	in     al,0xd6
  41e571:	or     eax,0x89e794ec
  41e576:	or     eax,0xee6a6a96
  41e57b:	mov    ebp,0xb7974579
  41e580:	out    dx,eax
  41e581:	mov    eax,ds:0xbe347b3a
  41e586:	or     BYTE PTR [esi],dh
  41e588:	gs sbb esi,ebp
  41e58b:	lea    ebp,[ebx+0x79184fb]
  41e591:	into   
  41e592:	xchg   BYTE PTR [edi+ebx*4+0x44],dh
  41e596:	mov    esp,0x4350be05
  41e59b:	imul   esp,edi,0xffffffb6
  41e59e:	or     DWORD PTR [ebp-0x5f9d3b63],0xc2ec02f5
  41e5a8:	fisttp QWORD PTR [edx+0x8]
  41e5ab:	stos   DWORD PTR es:[edi],eax
  41e5ac:	cmc    
  41e5ad:	mov    ah,0x90
  41e5af:	mov    dl,0xd4
  41e5b1:	mov    edx,esp
  41e5b3:	hlt    
  41e5b4:	inc    ebx
  41e5b5:	inc    ecx
  41e5b6:	mov    bh,0x83
  41e5b8:	cmp    eax,0xd4d6ebad
  41e5bd:	cmp    al,0xdc
  41e5bf:	push   ss
  41e5c0:	pop    ecx
  41e5c1:	push   ebp
  41e5c2:	xchg   ecx,eax
  41e5c3:	pusha  
  41e5c4:	loope  0x41e5f4
  41e5c6:	or     bl,ah
  41e5c8:	neg    bh
  41e5ca:	(bad)  
  41e5cb:	mov    dh,0xc7
  41e5cd:	jmp    0x3813cd4d
  41e5d2:	push   ecx
  41e5d3:	and    eax,0xe521d08f
  41e5d8:	pushf  
  41e5d9:	and    eax,0x6f18877a
  41e5de:	retf   
  41e5df:	popa   
  41e5e0:	sub    eax,esi
  41e5e2:	push   cs
  41e5e3:	imul   esi,ebp,0x22
  41e5e6:	sbb    dl,BYTE PTR [ebx+0x51e89605]
  41e5ec:	or     bh,ch
  41e5ee:	imul   bx,dx,0xfffd
  41e5f2:	popf   
  41e5f3:	retf   0x45e7
  41e5f6:	sbb    eax,DWORD PTR [edx-0xa5ec3ca]
  41e5fc:	cmp    eax,0x69745cb
  41e601:	sbb    bl,BYTE PTR [edi-0x39161e8b]
  41e607:	out    0xbc,al
  41e609:	and    al,0x91
  41e60b:	mov    ds:0x6bb7910b,al
  41e610:	or     al,0xf7
  41e612:	(bad)  
  41e614:	fnstenv [ecx]
  41e616:	adc    esi,DWORD PTR [ebp+edx*4-0x76d999ed]
  41e61d:	in     eax,dx
  41e61e:	jb     0x41e69c
  41e620:	inc    eax
  41e621:	jmp    0x41e5a3
  41e623:	mov    bh,BYTE PTR [ecx-0x38eeb56]
  41e629:	dec    ebp
  41e62a:	sub    al,0x9c
  41e62c:	sar    DWORD PTR [eax-0xf82c42e],1
  41e632:	mov    ch,0x1b
  41e634:	mov    bh,0x51
  41e636:	push   eax
  41e637:	data16 adc ch,BYTE PTR [edx+0x2c]
  41e63b:	add    ch,cl
  41e63d:	fisubr DWORD PTR [edi+0x69]
  41e640:	nop
  41e641:	icebp  
  41e642:	mov    BYTE PTR [ebp-0x1fdbf7cf],bl
  41e648:	add    eax,edi
  41e64a:	lahf   
  41e64b:	cmp    ch,cl
  41e64d:	push   edi
  41e64e:	test   DWORD PTR [esp+esi*8+0x14f70fcb],ecx
  41e655:	or     eax,0xb09496f0
  41e65a:	(bad)  
  41e65c:	cli    
  41e65d:	in     eax,dx
  41e65e:	loope  0x41e649
  41e660:	add    al,0x73
  41e662:	xchg   esp,eax
  41e663:	fadd   DWORD PTR [edi]
  41e665:	sub    eax,0x3f84d1af
  41e66a:	sbb    eax,0xe60d5146
  41e66f:	jp     0x41e6b2
  41e671:	jb     0x41e620
  41e673:	mov    ds:0x46de97b1,al
  41e678:	push   es
  41e679:	push   eax
  41e67a:	daa    
  41e67b:	push   eax
  41e67c:	paddusw mm2,mm4
  41e67f:	mov    ecx,0xbbd17fc8
  41e684:	aas    
  41e685:	adc    BYTE PTR [edx+0x16],al
  41e688:	(bad)  
  41e689:	(bad)  
  41e68a:	or     al,0x14
  41e68c:	add    esp,ebx
  41e68e:	and    al,0x8b
  41e690:	adc    BYTE PTR [edx-0x13d2b71b],dl
  41e696:	pop    ds
  41e697:	call   0x5220f62e
  41e69c:	dec    esi
  41e69d:	or     al,0xd8
  41e69f:	ins    BYTE PTR es:[edi],dx
  41e6a0:	scas   al,BYTE PTR es:[edi]
  41e6a1:	jno    0x41e66a
  41e6a3:	pop    esi
  41e6a4:	lods   eax,DWORD PTR ds:[esi]
  41e6a5:	fcom   QWORD PTR [esi-0x4668c8b5]
  41e6ab:	test   BYTE PTR [ebx+0x69],al
  41e6ae:	mov    ebx,DWORD PTR [ebp+0x6b78cea3]
  41e6b4:	imul   esi,DWORD PTR [ebp-0x13],0xffffffa9
  41e6b8:	cld    
  41e6b9:	(bad)  
  41e6ba:	push   0xad79817a
  41e6bf:	push   eax
  41e6c0:	out    0x63,eax
  41e6c2:	cmp    DWORD PTR es:[ebp-0x3b],edx
  41e6c6:	ds push ebx
  41e6c8:	cli    
  41e6c9:	daa    
  41e6ca:	repnz pop ebx
  41e6cc:	repnz sub esp,esi
  41e6cf:	sbb    dh,BYTE PTR [ebx-0xe]
  41e6d2:	mov    ds:0x91eeb7e0,al
  41e6d7:	fwait
  41e6d8:	pop    ebp
  41e6d9:	push   0xb1126871
  41e6de:	add    ch,bh
  41e6e0:	fs iret 
  41e6e2:	lods   al,BYTE PTR ds:[esi]
  41e6e3:	les    ecx,FWORD PTR [eax+0x3b]
  41e6e6:	adc    dh,cl
  41e6e8:	aas    
  41e6e9:	sub    ebx,ecx
  41e6eb:	mov    ecx,DWORD PTR [eax+0x73cc725a]
  41e6f1:	jbe    0x41e6cf
  41e6f3:	xor    eax,0x2eac41de
  41e6f8:	push   ecx
  41e6f9:	(bad)  
  41e6fb:	jp     0x41e6b7
  41e6fd:	dec    esp
  41e6fe:	shl    DWORD PTR [edx-0x28],0x57
  41e702:	shr    BYTE PTR [edx-0x619ffa5],cl
  41e708:	test   DWORD PTR [esi+edx*4],edi
  41e70b:	rcl    BYTE PTR [edi+0x14],1
  41e70e:	push   cs
  41e70f:	dec    esi
  41e710:	jne    0x41e6eb
  41e712:	mov    ds:0xc8c54ea1,eax
  41e717:	push   esp
  41e718:	test   al,0xa2
  41e71a:	dec    edi
  41e71b:	popf   
  41e71c:	pusha  
  41e71d:	adc    ecx,0xffffff90
  41e720:	lahf   
  41e721:	push   ebx
  41e722:	jl     0x41e776
  41e724:	push   0x72
  41e726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e727:	mov    ch,0x9
  41e729:	int    0xff
  41e72b:	xchg   edi,eax
  41e72c:	push   edx
  41e72d:	sub    eax,0x315ac340
  41e732:	test   esp,ebp
  41e734:	push   ds
  41e735:	mov    al,ds:0xaed9c639
  41e73a:	add    BYTE PTR [esi-0x6],ch
  41e73d:	adc    dl,BYTE PTR [eax+ebx*4+0x10]
  41e741:	out    0xfb,al
  41e743:	add    DWORD PTR [ebp+0xe94bf80],edi
  41e749:	retf   0x5540
  41e74c:	push   esi
  41e74d:	sub    BYTE PTR [ebx-0x4e],dl
  41e750:	ror    BYTE PTR [edx],1
  41e752:	loop   0x41e701
  41e754:	or     BYTE PTR [ebx],0xd7
  41e757:	push   0x8455c103
  41e75c:	cmp    ebx,edi
  41e75e:	push   edi
  41e75f:	lods   eax,DWORD PTR ds:[esi]
  41e760:	iret   
  41e761:	ret    
  41e762:	stc    
  41e763:	mov    ds:0x56b2cdec,al
  41e768:	test   eax,0xd366966b
  41e76d:	iret   
  41e76e:	xchg   ebx,eax
  41e76f:	mov    bh,0x73
  41e771:	xor    BYTE PTR [eax-0x2b5720f7],ah
  41e777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e778:	cmp    edi,DWORD PTR [eax+edx*1+0x5d]
  41e77c:	sub    ecx,esi
  41e77e:	cmp    DWORD PTR [eax+0x5ff5728c],ecx
  41e784:	cmp    al,BYTE PTR [ebx+0x1978670b]
  41e78a:	mov    cl,0x4f
  41e78c:	push   ecx
  41e78d:	sbb    BYTE PTR [ebx-0x5b],ah
  41e790:	push   esp
  41e791:	mov    DWORD PTR [edx+edx*8],ebx
  41e794:	adc    eax,0xfc14e21d
  41e799:	ins    DWORD PTR es:[edi],dx
  41e79a:	retf   
  41e79b:	loope  0x41e810
  41e79d:	mov    cl,0x3f
  41e79f:	dec    ebx
  41e7a0:	mov    dl,0x23
  41e7a2:	mov    ebp,0x3c9a00a2
  41e7a7:	adc    edx,ecx
  41e7a9:	out    dx,eax
  41e7aa:	lea    ecx,[esi-0x57a09133]
  41e7b0:	push   0x9351e673
  41e7b5:	jl     0x41e7bd
  41e7b7:	mov    esi,0x1b203275
  41e7bc:	cmp    BYTE PTR [edx],dl
  41e7be:	dec    ebx
  41e7bf:	push   ebp
  41e7c0:	cmp    DWORD PTR [ecx-0x47],esp
  41e7c3:	scas   al,BYTE PTR es:[edi]
  41e7c4:	fdivrp st(1),st
  41e7c6:	xchg   esp,eax
  41e7c7:	loopne 0x41e7f2
  41e7c9:	dec    ebp
  41e7ca:	mov    esp,0xbda0520
  41e7cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7d0:	cdq    
  41e7d1:	pop    ds
  41e7d2:	ins    BYTE PTR es:[edi],dx
  41e7d3:	(bad)  
  41e7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7d5:	sbb    eax,0x2e4e7321
  41e7da:	cli    
  41e7db:	aam    0x11
  41e7dd:	inc    ebp
  41e7de:	fwait
  41e7df:	hlt    
  41e7e0:	jae    0x41e80c
  41e7e2:	dec    edi
  41e7e3:	iret   
  41e7e4:	int    0x12
  41e7e6:	jecxz  0x41e80e
  41e7e8:	lods   eax,DWORD PTR ds:[esi]
  41e7e9:	mov    esp,0x28083a11
  41e7ee:	add    dl,BYTE PTR [ebx+0x54523f07]
  41e7f4:	mov    esi,0x64d2b0be
  41e7f9:	clc    
  41e7fa:	mov    ecx,0x80e7c917
  41e7ff:	pop    ss
  41e800:	push   ebp
  41e801:	(bad)  
  41e802:	push   ss
  41e803:	mov    ebp,0x5def3ee9
  41e808:	(bad)  
  41e809:	mov    dh,0xa9
  41e80b:	bound  ebx,QWORD PTR [ecx-0x702992ab]
  41e811:	into   
  41e812:	les    ecx,FWORD PTR ds:0x2543eec2
  41e818:	lods   eax,DWORD PTR ds:[esi]
  41e819:	cmp    edi,DWORD PTR [ecx]
  41e81b:	test   al,0xb0
  41e81d:	xchg   edi,eax
  41e81e:	and    bh,BYTE PTR [ecx-0x75cca085]
  41e824:	out    dx,eax
  41e825:	pop    esp
  41e826:	dec    eax
  41e827:	cmp    eax,0x254a8d9d
  41e82c:	or     eax,0x3bffdbdd
  41e831:	sub    esp,ebx
  41e833:	jno    0x41e7b9
  41e835:	call   0xa58a9db
  41e83a:	sub    eax,0x44f93a3a
  41e83f:	int3   
  41e840:	pop    ds
  41e841:	stos   BYTE PTR es:[edi],al
  41e842:	mov    dl,0x95
  41e844:	jno    0x41e7c9
  41e846:	and    al,0xec
  41e848:	push   esp
  41e849:	std    
  41e84a:	shr    DWORD PTR [esi+0x4bb6e8e1],cl
  41e850:	inc    ebx
  41e851:	and    BYTE PTR [eax],dh
  41e853:	mov    ebp,0x335543cf
  41e858:	mov    ch,0x93
  41e85a:	inc    edx
  41e85b:	bound  edx,QWORD PTR [edx+0x7a]
  41e85e:	sar    BYTE PTR [ecx],0x89
  41e861:	and    BYTE PTR [ecx*8-0x75b63f1],bh
  41e868:	ss test eax,0xd76ff209
  41e86e:	test   eax,0xe5abf1b5
  41e873:	mov    esp,0xa9e2ad74
  41e878:	cld    
  41e879:	mul    al
  41e87b:	scas   eax,DWORD PTR es:[edi]
  41e87c:	mov    eax,ds:0x10d9d9f
  41e881:	stc    
  41e882:	das    
  41e883:	sbb    BYTE PTR [ebx+0x24676816],0x95
  41e88a:	icebp  
  41e88b:	icebp  
  41e88c:	(bad)  
  41e88e:	rcl    BYTE PTR [eax-0x27],0xac
  41e892:	xor    bh,0xb8
  41e895:	xchg   edx,eax
  41e896:	mov    fs,WORD PTR [edi-0xd0bb8fa]
  41e89c:	sbb    DWORD PTR [esi-0x10],edi
  41e89f:	dec    edx
  41e8a0:	mov    cl,BYTE PTR [edx]
  41e8a2:	out    dx,al
  41e8a3:	ret    
  41e8a4:	ds jo  0x41e869
  41e8a7:	push   ss
  41e8a8:	push   ebp
  41e8a9:	inc    ax
  41e8ab:	pop    ebx
  41e8ac:	pop    edi
  41e8ad:	or     eax,0xc4acd135
  41e8b2:	cli    
  41e8b3:	data16 arpl WORD PTR [edx],sp
  41e8b6:	in     eax,dx
  41e8b7:	fld    QWORD PTR [edi]
  41e8b9:	nop
  41e8ba:	mov    ecx,ebx
  41e8bc:	xor    eax,0x51792ebc
  41e8c1:	pop    es
  41e8c2:	popf   
  41e8c3:	(bad)  
  41e8c5:	pop    DWORD PTR [edi-0x7f71ac2]
  41e8cb:	bound  esp,QWORD PTR gs:[ebp-0x3c2e0470]
  41e8d2:	add    edx,DWORD PTR [esi-0x172d987e]
  41e8d8:	test   DWORD PTR [ecx],0x82618fdf
  41e8de:	daa    
  41e8df:	arpl   WORD PTR [ecx-0x99f349d],di
  41e8e5:	rcl    BYTE PTR [esi-0x72],0x85
  41e8e9:	dec    ebp
  41e8ea:	call   0xe607ca99
  41e8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f0:	lock push edx
  41e8f2:	inc    esi
  41e8f3:	push   0x50ecc237
  41e8f8:	and    eax,0xee40c4d8
  41e8fd:	jp     0x41e904
  41e8ff:	shl    BYTE PTR [ebx-0x9],1
  41e902:	int    0x42
  41e904:	ror    BYTE PTR [ebp-0x78c12784],0xac
  41e90b:	mov    al,0x2c
  41e90d:	jge    0x41e92b
  41e90f:	xor    dh,BYTE PTR ds:0xe2f7d45b
  41e915:	sbb    eax,DWORD PTR [ebp+0x64]
  41e918:	sub    dl,BYTE PTR [edx-0x6748604]
  41e91e:	mov    esi,0x2f613257
  41e923:	pop    ecx
  41e924:	in     al,dx
  41e925:	pop    ss
  41e926:	push   cs
  41e927:	jp     0x41e97d
  41e929:	mov    bh,0x45
  41e92b:	inc    edx
  41e92c:	je     0x41e96e
  41e92e:	lods   eax,DWORD PTR ds:[esi]
  41e92f:	jo     0x41e97f
  41e931:	repnz sub edi,ecx
  41e934:	and    eax,0xfffffff0
  41e937:	and    ch,BYTE PTR [edx]
  41e939:	lock jns 0x41e996
  41e93c:	mov    esp,0x2bb70813
  41e941:	xor    DWORD PTR [edx-0x28b8883a],ecx
  41e947:	jmp    0x840b:0xe023762d
  41e94e:	mov    dl,0xc3
  41e950:	pop    esp
  41e951:	test   BYTE PTR [edi-0xef0717],ah
  41e957:	xor    BYTE PTR [edx],al
  41e959:	std    
  41e95a:	add    DWORD PTR [esi],esi
  41e95c:	fcomp  QWORD PTR [di+0x9]
  41e960:	das    
  41e961:	xchg   edi,eax
  41e962:	jno    0x41e966
  41e964:	rol    DWORD PTR [ebp+0x10a987c9],0x50
  41e96b:	scas   al,BYTE PTR es:[edi]
  41e96c:	mov    ds:0x6f06ace9,al
  41e971:	loopne 0x41e8f4
  41e973:	jbe    0x41e955
  41e975:	mov    ds:0x929726c6,al
  41e97a:	je     0x41e98d
  41e97c:	or     DWORD PTR [eax-0x3b],edx
  41e97f:	pusha  
  41e980:	xchg   ebp,eax
  41e981:	shr    eax,1
  41e983:	retf   0x82ab
  41e986:	lods   eax,DWORD PTR ds:[esi]
  41e987:	jge    0x41e96a
  41e989:	and    dx,sp
  41e98c:	ins    DWORD PTR es:[edi],dx
  41e98d:	mov    DWORD PTR [ebx+0x1],ecx
  41e990:	mov    edx,0xb86183da
  41e995:	push   0x83416063
  41e99a:	xor    eax,0xde2e179a
  41e99f:	(bad)
  41e9a2:	jp     0x41e96f
  41e9a4:	add    al,0x26
  41e9a6:	fisubr DWORD PTR [esi+ebx*8+0x9a97c4c]
  41e9ad:	xor    dl,BYTE PTR [edi+edi*8]
  41e9b0:	pop    ss
  41e9b1:	outs   dx,BYTE PTR ds:[esi]
  41e9b2:	cdq    
  41e9b3:	add    BYTE PTR [eax-0x4b0f1746],cl
  41e9b9:	push   edx
  41e9ba:	sar    DWORD PTR [ebx],1
  41e9bc:	pop    ecx
  41e9bd:	pop    ss
  41e9be:	call   0x6315a89f
  41e9c3:	pop    ds
  41e9c4:	mov    al,0xcd
  41e9c6:	mov    ecx,0x93008459
  41e9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9cc:	fisttp DWORD PTR [eax-0x1d]
  41e9cf:	sub    DWORD PTR [edi],edi
  41e9d1:	scas   al,BYTE PTR es:[edi]
  41e9d2:	daa    
  41e9d3:	sub    al,BYTE PTR [eax]
  41e9d5:	adc    ah,0x23
  41e9d8:	(bad)  
  41e9d9:	stc    
  41e9da:	xchg   DWORD PTR [ecx+0x10],edi
  41e9dd:	pop    edx
  41e9de:	lods   eax,DWORD PTR ds:[esi]
  41e9df:	outs   dx,BYTE PTR ds:[esi]
  41e9e0:	fist   DWORD PTR [edi+0x73]
  41e9e3:	inc    esi
  41e9e4:	iret   
  41e9e5:	paddb  mm7,mm5
  41e9e8:	shl    BYTE PTR [eax+ebx*4-0x711dafbb],cl
  41e9ef:	mov    WORD PTR [edx+eiz*2-0x62264114],?
  41e9f6:	js     0x41e996
  41e9f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f9:	(bad)  
  41e9fa:	cmp    DWORD PTR [ebp+edx*8+0x77439e2d],ecx
  41ea01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea02:	pop    edx
  41ea03:	(bad)  
  41ea04:	fcomp  DWORD PTR [edx+0x71]
  41ea07:	lods   eax,DWORD PTR ds:[esi]
  41ea08:	mov    ch,0xf2
  41ea0a:	retf   0x20f7
  41ea0d:	rol    BYTE PTR [eax+0x68],cl
  41ea10:	xor    cl,BYTE PTR [edi-0x23]
  41ea13:	repz ds mov eax,0x515e9079
  41ea1a:	xlat   BYTE PTR ds:[ebx]
  41ea1b:	sub    ebp,DWORD PTR [edx]
  41ea1d:	in     al,dx
  41ea1e:	pop    es
  41ea1f:	jne    0x41ea2b
  41ea21:	cdq    
  41ea22:	inc    esp
  41ea23:	jno    0x41ea9e
  41ea25:	repz data16 out dx,al
  41ea28:	cmp    al,0xbd
  41ea2a:	xor    cl,BYTE PTR [esi]
  41ea2c:	loope  0x41ea26
  41ea2e:	cmp    bh,BYTE PTR [ecx-0x178fe926]
  41ea34:	aas    
  41ea35:	pop    ebp
  41ea36:	xchg   edx,eax
  41ea37:	(bad)  
  41ea38:	fwait
  41ea39:	pop    edx
  41ea3a:	and    edx,DWORD PTR [esi+0x78]
  41ea3d:	lea    ecx,ds:0xc4bf6f75
  41ea43:	aam    0x92
  41ea45:	jae    0x41e9cd
  41ea47:	cdq    
  41ea48:	mov    bh,0x47
  41ea4a:	dec    esi
  41ea4c:	pop    ds
  41ea4d:	fadd   QWORD PTR [eax+eax*8+0x7c]
  41ea51:	cmp    eax,0x392b9beb
  41ea56:	lds    ebx,FWORD PTR [edx]
  41ea58:	je     0x41eaad
  41ea5a:	inc    esi
  41ea5b:	push   ebp
  41ea5c:	and    bl,BYTE PTR [esi]
  41ea5e:	mov    eax,0x5860080d
  41ea63:	push   esp
  41ea64:	cmp    DWORD PTR [ecx+eiz*4+0x15],eax
  41ea68:	xchg   edi,eax
  41ea69:	lds    esp,FWORD PTR [esi]
  41ea6b:	js     0x41ea9a
  41ea6d:	pop    bx
  41ea6f:	lahf   
  41ea70:	mov    cl,bl
  41ea72:	pop    ds
  41ea73:	add    ebx,edi
  41ea75:	clc    
  41ea76:	or     eax,0x9fb6cf30
  41ea7b:	test   edi,esp
  41ea7d:	and    al,0x5b
  41ea7f:	dec    ecx
  41ea80:	sub    DWORD PTR [eax],0xffffffff
  41ea83:	dec    ebp
  41ea84:	mov    gs,esp
  41ea86:	push   ebx
  41ea87:	mov    edx,0xf7f1fb92
  41ea8c:	outs   dx,BYTE PTR ds:[esi]
  41ea8d:	or     DWORD PTR [ebx+0x3d4df3bb],esp
  41ea93:	retf   0x5d98
  41ea96:	mov    ch,0x89
  41ea98:	test   BYTE PTR [ebp+ecx*1+0x512ffc30],ch
  41ea9f:	into   
  41eaa0:	into   
  41eaa1:	add    BYTE PTR [eax-0x6d],0x26
  41eaa5:	ins    DWORD PTR es:[edi],dx
  41eaa6:	push   ebp
  41eaa7:	and    al,0x33
  41eaa9:	mov    bl,BYTE PTR ds:0x5e76f147
  41eaaf:	jb     0x41eaa1
  41eab1:	and    al,0x6b
  41eab3:	and    DWORD PTR [ecx],eax
  41eab5:	inc    edx
  41eab6:	pop    ebp
  41eab7:	loope  0x41ea4c
  41eab9:	jecxz  0x41ea52
  41eabb:	aad    0x7e
  41eabd:	daa    
  41eabe:	add    al,0x26
  41eac0:	xchg   esi,eax
  41eac1:	test   edx,edx
  41eac3:	aam    0x76
  41eac5:	xor    al,al
  41eac7:	jle    0x41eb3b
  41eac9:	daa    
  41eaca:	sbb    al,0xb0
  41eacc:	xchg   esi,eax
  41eacd:	hlt    
  41eace:	test   DWORD PTR [edx],ebx
  41ead0:	and    bh,dh
  41ead2:	mov    ds:0x57196873,eax
  41ead7:	imul   edi,DWORD PTR [edx-0x75ea0041],0x48c75f62
  41eae1:	jl     0x41eb25
  41eae3:	jb     0x41ea96
  41eae5:	dec    ebx
  41eae6:	pop    ebx
  41eae7:	scas   eax,DWORD PTR es:[edi]
  41eae8:	xchg   esi,eax
  41eae9:	fsubr  st,st(3)
  41eaeb:	repnz push 0xe9ba83f2
  41eaf1:	js     0x41eacf
  41eaf3:	rol    BYTE PTR [edx+0x4c33e1e8],1
  41eaf9:	mov    DWORD PTR [esi],eax
  41eafb:	mov    ecx,0x82de969b
  41eb00:	push   esp
  41eb01:	jmp    0x41eb0b
  41eb03:	and    DWORD PTR [edi],esi
  41eb05:	bound  esi,QWORD PTR [edi+ebp*2]
  41eb08:	or     esp,DWORD PTR [ecx]
  41eb0a:	pop    ebp
  41eb0b:	retf   0xa1a1
  41eb0e:	stos   BYTE PTR es:[edi],al
  41eb0f:	sub    eax,0xcfc2802
  41eb14:	push   ss
  41eb15:	jbe    0x41eb62
  41eb17:	shl    DWORD PTR [ebx+0x3bff8693],0x25
  41eb1e:	jno    0x41eb9f
  41eb20:	fst    DWORD PTR [esi+0x25fa2a73]
  41eb26:	lea    ebx,fs:[ecx-0x412c201d]
  41eb2d:	sbb    BYTE PTR ds:0xf0a4468e,dh
  41eb33:	lahf   
  41eb34:	push   ecx
  41eb35:	jge    0x41eb1c
  41eb37:	mov    dl,0x16
  41eb39:	pop    ebx
  41eb3a:	mov    ds:0xd5bfaf82,eax
  41eb3f:	les    eax,FWORD PTR [esi+0x48]
  41eb42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb43:	sbb    bl,BYTE PTR [edi-0x66407718]
  41eb49:	je     0x41eb0c
  41eb4b:	mov    ch,dh
  41eb4d:	iret   
  41eb4e:	shl    BYTE PTR [edx],0xc5
  41eb51:	cmp    al,0xd3
  41eb53:	cmp    edi,DWORD PTR [ebp+0x2a]
  41eb56:	push   ss
  41eb57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb58:	pop    ebx
  41eb59:	xchg   BYTE PTR [edx+esi*1-0x2b],bl
  41eb5d:	icebp  
  41eb5e:	fs pop es
  41eb60:	xchg   ebp,eax
  41eb61:	inc    esi
  41eb62:	jle    0x41eb5f
  41eb64:	xor    BYTE PTR [edi],0xb9
  41eb67:	lahf   
  41eb68:	cli    
  41eb69:	outs   dx,BYTE PTR ds:[esi]
  41eb6a:	jge    0x41eb1e
  41eb6c:	inc    esi
  41eb6d:	xor    al,0xc6
  41eb6f:	aad    0xaa
  41eb71:	out    0x58,eax
  41eb73:	mov    ch,0x6f
  41eb75:	pop    es
  41eb76:	stos   DWORD PTR es:[edi],eax
  41eb77:	inc    esp
  41eb78:	xchg   esi,eax
  41eb79:	mov    esp,0x9380c9f4
  41eb7e:	repz cmp DWORD PTR [esi-0x17d68ed5],esp
  41eb85:	pop    edi
  41eb86:	xchg   ecx,eax
  41eb87:	mov    ds:0xc596dbb7,al
  41eb8c:	push   ebp
  41eb8d:	inc    edi
  41eb8e:	nop
  41eb8f:	arpl   cx,bx
  41eb91:	pop    edx
  41eb92:	bound  eax,QWORD PTR ds:0x276876d7
  41eb98:	xchg   edi,eax
  41eb99:	sbb    al,0x67
  41eb9b:	mov    edi,0x90d2a6bd
  41eba0:	fwait
  41eba1:	cld    
  41eba2:	(bad)
  41eba6:	pop    edx
  41eba7:	mov    ebx,0x78cd1690
  41ebac:	(bad)  
  41ebad:	xchg   bl,cl
  41ebaf:	(bad)  
  41ebb0:	out    0x47,eax
  41ebb2:	mov    esi,0xc372c218
  41ebb7:	stc    
  41ebb8:	pop    edi
  41ebb9:	sub    esp,DWORD PTR [edi+0x31d71a58]
  41ebbf:	jg     0x41ec1d
  41ebc1:	sbb    eax,DWORD PTR [eax-0x764c2958]
  41ebc7:	aam    0xd
  41ebc9:	jae    0x41ebf2
  41ebcb:	cmp    BYTE PTR ds:[edi+0x2f7e1fa2],ch
  41ebd2:	ss and ah,dh
  41ebd5:	xor    BYTE PTR [ebx+0x5886b4a9],0x7f
  41ebdc:	pop    edx
  41ebdd:	mov    dl,0x52
  41ebdf:	jmp    0x524ed574
  41ebe4:	mov    bh,0xe7
  41ebe6:	xor    DWORD PTR [edi],eax
  41ebe8:	mov    cl,0xff
  41ebea:	fisttp QWORD PTR [ebp+0x4e211a9f]
  41ebf0:	aas    
  41ebf1:	je     0x41ebf8
  41ebf3:	mov    ah,0xac
  41ebf5:	outs   dx,DWORD PTR ds:[esi]
  41ebf6:	add    dh,BYTE PTR [ecx]
  41ebf8:	jg     0x41ec72
  41ebfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebfb:	xor    ebp,DWORD PTR [ebp-0x74]
  41ebfe:	mov    esi,0x73e982db
  41ec03:	retf   0x68ec
  41ec06:	jb     0x41ec64
  41ec08:	lock (bad) 
  41ec0a:	jmp    0xa6f2:0x599f3166
  41ec11:	xor    DWORD PTR [ebx+0x30588075],esp
  41ec17:	pusha  
  41ec18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec19:	push   ds
  41ec1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec1b:	sahf   
  41ec1c:	scas   al,BYTE PTR es:[edi]
  41ec1d:	push   0xb217dee6
  41ec22:	or     eax,0xd74de505
  41ec27:	repz push cs
  41ec29:	cmp    eax,DWORD PTR [ebx+0x656e15b5]
  41ec2f:	cmc    
  41ec30:	outs   dx,DWORD PTR ds:[esi]
  41ec31:	xor    bl,BYTE PTR [esp+edx*8]
  41ec34:	jnp    0x41ec32
  41ec36:	mov    ebx,0xa7cd3c88
  41ec3b:	je     0x41ec2d
  41ec3d:	fst    DWORD PTR [ecx]
  41ec3f:	add    edx,edx
  41ec41:	cli    
  41ec42:	lods   eax,DWORD PTR ds:[esi]
  41ec43:	popa   
  41ec44:	or     bh,BYTE PTR [edi+0x2c]
  41ec47:	test   BYTE PTR [eax+0x25f28eda],dl
  41ec4d:	sbb    DWORD PTR [edx+0x1961ee6d],esi
  41ec53:	add    eax,0x1923a841
  41ec58:	push   ss
  41ec59:	and    BYTE PTR ds:0x811ae9fb,al
  41ec5f:	jb     0x41ec53
  41ec61:	lahf   
  41ec62:	(bad)  
  41ec63:	cli    
  41ec64:	hlt    
  41ec65:	push   cs
  41ec66:	ja     0x41ecb4
  41ec68:	jp     0x41ec71
  41ec6a:	gs in  eax,0xc0
  41ec6d:	inc    eax
  41ec6e:	es sbb al,0xc5
  41ec71:	out    dx,eax
  41ec72:	mov    ebp,0x7a1b190f
  41ec77:	inc    esp
  41ec78:	icebp  
  41ec79:	push   0x7b5e4c5d
  41ec7e:	int3   
  41ec7f:	ss inc edi
  41ec81:	jne    0x41ecf3
  41ec83:	lahf   
  41ec84:	and    BYTE PTR [eax-0x7d],al
  41ec87:	pop    esp
  41ec88:	fcom   QWORD PTR [edi-0x15]
  41ec8b:	and    al,0x51
  41ec8d:	enter  0x8e7b,0xe1
  41ec91:	stc    
  41ec92:	xchg   esp,eax
  41ec93:	clc    
  41ec94:	jmp    0x41ec86
  41ec96:	push   ds
  41ec97:	xchg   edx,eax
  41ec98:	ins    DWORD PTR es:[edi],dx
  41ec99:	add    BYTE PTR [ebx+0x497241f],0xbb
  41eca0:	into   
  41eca1:	movq   mm3,mm5
  41eca4:	inc    ecx
  41eca5:	jne    0x41ecf1
  41eca7:	xor    eax,0x9450b0ef
  41ecac:	or     esp,ecx
  41ecae:	cmp    ebp,edi
  41ecb0:	push   0x18
  41ecb2:	lea    eax,[edi+0x10cc1015]
  41ecb8:	inc    ecx
  41ecb9:	adc    al,0xd9
  41ecbb:	dec    esi
  41ecbc:	cmp    ah,BYTE PTR [ebp+0x6364ab0f]
  41ecc2:	(bad)  
  41ecc3:	daa    
  41ecc4:	jp     0x41ed00
  41ecc6:	push   edx
  41ecc7:	loop   0x41ed17
  41ecc9:	cld    
  41ecca:	call   0xe913:0xd8e02cc2
  41ecd1:	std    
  41ecd2:	ret    0xfbd0
  41ecd5:	repz jns 0x41ed3b
  41ecd8:	sbb    esp,0x1075a9fd
  41ecde:	inc    ecx
  41ecdf:	jno    0x41ecf6
  41ece1:	push   ds
  41ece2:	ins    BYTE PTR es:[edi],dx
  41ece3:	push   edx
  41ece4:	sbb    bh,BYTE PTR [edx+0x1a]
  41ece7:	push   0x820b4c01
  41ecec:	sub    eax,0x204c8645
  41ecf1:	push   esi
  41ecf2:	push   0x6c06620f
  41ecf7:	(bad)  
  41ecf8:	sbb    bl,BYTE PTR [eax-0x224609bf]
  41ecfe:	int    0x92
  41ed00:	bound  eax,QWORD PTR [ebx]
  41ed02:	xchg   edx,eax
  41ed03:	sahf   
  41ed04:	stos   DWORD PTR es:[edi],eax
  41ed05:	mov    bh,0x14
  41ed07:	sahf   
  41ed08:	pop    eax
  41ed09:	lea    ebp,[edx-0x46]
  41ed0c:	popf   
  41ed0d:	sub    ebx,DWORD PTR [edx-0x50]
  41ed10:	lock mov eax,ds:0x9b6e6d60
  41ed16:	or     esp,esp
  41ed18:	test   BYTE PTR [ecx+ebx*8+0x45e21942],dh
  41ed1f:	jmp    0xe7139c18
  41ed24:	(bad)  
  41ed25:	pop    ecx
  41ed26:	jmp    0xeb77:0x21c0273
  41ed2d:	push   0x3bfa51ae
  41ed32:	mov    ds:0x8aab6248,eax
  41ed37:	push   0xffffffdb
  41ed39:	and    al,0xfc
  41ed3b:	inc    esi
  41ed3c:	and    al,0xc3
  41ed3e:	jns    0x41ed0c
  41ed40:	dec    edx
  41ed41:	and    bl,BYTE PTR [esi]
  41ed43:	in     al,0x5f
  41ed45:	mov    bh,0x98
  41ed47:	stc    
  41ed48:	mov    dl,0xea
  41ed4a:	fstp   QWORD PTR [edi]
  41ed4c:	(bad)  
  41ed4d:	out    0xf7,eax
  41ed4f:	(bad)  
  41ed50:	pop    esi
  41ed51:	cmp    al,0x44
  41ed53:	aad    0x80
  41ed55:	addr16 jb 0x41ed68
  41ed58:	adc    BYTE PTR [edi],ch
  41ed5a:	aad    0x7e
  41ed5c:	les    edx,FWORD PTR [eax]
  41ed5e:	ja     0x41ed9e
  41ed60:	mov    eax,ds:0xef2cfe7f
  41ed65:	sbb    BYTE PTR [ecx+0x2363364f],0x9d
  41ed6c:	add    eax,0xd4deed40
  41ed71:	jl     0x41ed4c
  41ed73:	ds jg  0x41ed66
  41ed76:	loope  0x41edb3
  41ed78:	cmp    esp,eax
  41ed7a:	lods   al,BYTE PTR ds:[esi]
  41ed7b:	inc    eax
  41ed7c:	cmc    
  41ed7d:	xchg   ebp,eax
  41ed7e:	popf   
  41ed7f:	mov    ebx,0xaa4bec1c
  41ed84:	jbe    0x41ed7b
  41ed86:	dec    eax
  41ed87:	mov    bl,0xf7
  41ed89:	adc    eax,0x3919dc11
  41ed8e:	adc    DWORD PTR [esi-0x6e13fb32],esp
  41ed94:	test   ch,al
  41ed96:	xor    cl,BYTE PTR [ebx+0x1b]
  41ed99:	mov    bl,0xee
  41ed9b:	cmp    ch,bh
  41ed9d:	lea    edi,[esi]
  41ed9f:	push   ss
  41eda0:	pop    ebx
  41eda1:	retf   0x3083
  41eda4:	test   al,0x2e
  41eda6:	mov    ds:0xbf792035,al
  41edab:	je     0x41edbd
  41edad:	pop    edx
  41edae:	inc    esp
  41edaf:	psubd  mm0,QWORD PTR [ebx+0x67]
  41edb3:	adc    DWORD PTR [edx],ebp
  41edb5:	sti    
  41edb6:	lds    edi,FWORD PTR [edx]
  41edb8:	mov    cl,0x66
  41edba:	hlt    
  41edbb:	pop    es
  41edbc:	mov    BYTE PTR [ebp+0x3f0065ff],cl
  41edc2:	sbb    DWORD PTR [eax],ebp
  41edc4:	retf   
  41edc5:	icebp  
  41edc6:	outs   dx,BYTE PTR ds:[esi]
  41edc7:	mov    esp,0xcf0e973f
  41edcc:	or     ebx,edi
  41edce:	addr16 cli 
  41edd0:	ins    BYTE PTR es:[edi],dx
  41edd1:	mov    ch,0xe0
  41edd3:	lds    esp,FWORD PTR [edi+0x62]
  41edd6:	jne    0x41ee1e
  41edd8:	mov    ebx,0xc2aa9152
  41eddd:	cmp    bl,BYTE PTR [eax]
  41eddf:	rol    DWORD PTR [ebx+0x2918322c],cl
  41ede5:	ss ss jne 0x41ee4f
  41ede9:	push   edi
  41edea:	rol    DWORD PTR ss:[eax+0x4f0abeab],0x1
  41edf2:	push   eax
  41edf3:	xlat   BYTE PTR ds:[ebx]
  41edf4:	push   eax
  41edf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edf6:	xchg   ebp,eax
  41edf7:	daa    
  41edf8:	sub    ch,BYTE PTR [ebx]
  41edfa:	stos   DWORD PTR es:[edi],eax
  41edfb:	xchg   ecx,eax
  41edfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edfd:	or     eax,0x5c961914
  41ee02:	push   cs
  41ee03:	sub    BYTE PTR [ebp+edi*4+0x76],0x41
  41ee08:	aas    
  41ee09:	imul   edi,DWORD PTR [ecx-0x74b3fd8f],0xf5cb6695
  41ee13:	push   eax
  41ee14:	xor    eax,0xc2e6e6d4
  41ee19:	sub    edx,DWORD PTR [ecx+0x65]
  41ee1c:	mov    cl,BYTE PTR [edi]
  41ee1e:	cmp    ah,BYTE PTR ss:[eax]
  41ee21:	pop    eax
  41ee22:	mov    ebx,0x73ac564e
  41ee27:	jle    0x41ee29
  41ee29:	retf   
  41ee2a:	sahf   
  41ee2b:	fnsave [edx+0x31916a1f]
  41ee31:	push   ebp
  41ee32:	pop    ds
  41ee33:	adc    DWORD PTR es:[ebp-0x7da838bf],ecx
  41ee3a:	dec    edi
  41ee3b:	xchg   edi,eax
  41ee3c:	jle    0x41ee7a
  41ee3e:	loope  0x41ee98
  41ee40:	daa    
  41ee41:	push   esp
  41ee42:	out    dx,al
  41ee43:	repz xor esp,DWORD PTR [ebx]
  41ee46:	sahf   
  41ee47:	(bad)  
  41ee48:	cmc    
  41ee49:	aas    
  41ee4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee4b:	mov    edi,0xd9da8e3e
  41ee50:	fnsave [ecx+eiz*2]
  41ee53:	inc    edi
  41ee54:	fisubr WORD PTR [ebx-0x9]
  41ee57:	push   0xffffff8a
  41ee59:	out    dx,eax
  41ee5a:	stos   DWORD PTR es:[edi],eax
  41ee5b:	fwait
  41ee5c:	leave  
  41ee5d:	(bad)  
  41ee5e:	sub    eax,0xe9a89c9c
  41ee63:	cmp    al,0xe6
  41ee65:	pop    ebx
  41ee66:	mov    bh,0xdb
  41ee68:	and    eax,0x8608c8b3
  41ee6d:	xor    al,BYTE PTR [edi+0x68]
  41ee70:	adc    ecx,DWORD PTR [ebx+0x53283175]
  41ee76:	cmp    DWORD PTR [eax+0x26],esi
  41ee79:	adc    al,0x52
  41ee7b:	push   cs
  41ee7c:	outs   dx,BYTE PTR ds:[esi]
  41ee7d:	cwde   
  41ee7e:	sbb    DWORD PTR [ebx*1-0x32a6f02c],0xffffff85
  41ee86:	dec    edx
  41ee87:	(bad)  
  41ee89:	xchg   ecx,eax
  41ee8a:	test   DWORD PTR [edx-0x313cba8a],esp
  41ee90:	adc    BYTE PTR [ecx],dh
  41ee92:	jg     0x41ee98
  41ee94:	dec    eax
  41ee95:	(bad)  
  41ee96:	es dec esi
  41ee98:	mul    BYTE PTR [edx+edx*4-0x57]
  41ee9c:	icebp  
  41ee9d:	cli    
  41ee9e:	pmaxub mm5,QWORD PTR [edi-0x790e02de]
  41eea5:	gs push ecx
  41eea7:	sti    
  41eea8:	jnp    0x41eeed
  41eeaa:	pop    ss
  41eeab:	inc    ebx
  41eeac:	pop    ss
  41eead:	mov    esi,0xc59430d5
  41eeb2:	retf   0xa98e
  41eeb5:	mov    ebx,0x68734948
  41eeba:	test   eax,0xab4471fb
  41eebf:	retf   0x3237
  41eec2:	mov    eax,0xeea50830
  41eec7:	pop    es
  41eec8:	sbb    dh,al
  41eeca:	mov    eax,0xa559f5e9
  41eecf:	ds pop eax
  41eed1:	nop
  41eed2:	leave  
  41eed3:	jnp    0x41eee6
  41eed5:	mov    ebp,0x66f2ebb8
  41eeda:	fdiv   st,st(7)
  41eedc:	das    
  41eedd:	scas   eax,DWORD PTR es:[edi]
  41eede:	cmp    eax,0xb33c568c
  41eee3:	push   eax
  41eee4:	fistp  DWORD PTR [edx+edi*2]
  41eee7:	leave  
  41eee8:	mov    esi,0x286910ae
  41eeed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeee:	adc    al,0x3d
  41eef0:	xchg   ebp,eax
  41eef1:	(bad)  
  41eef2:	leave  
  41eef3:	sbb    al,0xfb
  41eef5:	and    DWORD PTR ds:0xadb029fe,ebp
  41eefb:	gs and cl,ah
  41eefe:	aad    0xe1
  41ef00:	shl    DWORD PTR [edx*4-0x7c1e69d1],0xe1
  41ef08:	shl    DWORD PTR [eax],cl
  41ef0a:	aad    0x58
  41ef0c:	mov    dh,0xf1
  41ef0e:	les    edi,FWORD PTR [eax+0x33ff775c]
  41ef14:	add    DWORD PTR [edx],ebx
  41ef16:	lods   al,BYTE PTR ds:[esi]
  41ef17:	fisubr WORD PTR [edi]
  41ef19:	mov    dl,0x8
  41ef1b:	or     BYTE PTR [esi],0xc2
  41ef1e:	icebp  
  41ef1f:	test   eax,0x360d2d9b
  41ef24:	sti    
  41ef25:	add    dh,ah
  41ef27:	mov    esi,0x1c6cb975
  41ef2c:	cli    
  41ef2d:	xchg   edx,eax
  41ef2e:	test   eax,0x90c265fc
  41ef33:	mov    bh,0x67
  41ef35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef36:	xchg   BYTE PTR [ebx+0x5b9b731],al
  41ef3c:	lock or cl,ch
  41ef3f:	mov    ch,0x45
  41ef41:	iret   
  41ef42:	fcomp  QWORD PTR [edx+ecx*1+0x53]
  41ef46:	jno    0x41ef21
  41ef48:	(bad)  
  41ef49:	ror    BYTE PTR [eax-0x53],0x58
  41ef4d:	cmp    BYTE PTR [edi+0x42c352c6],cl
  41ef53:	jge    0x41eee1
  41ef55:	(bad)  
  41ef56:	jmp    DWORD PTR [edx+0x6612b94b]
  41ef5c:	xchg   esi,eax
  41ef5d:	gs std 
  41ef5f:	ss hlt 
  41ef61:	inc    eax
  41ef62:	ins    BYTE PTR es:[edi],dx
  41ef63:	mov    edx,0xcd26faaf
  41ef68:	xor    eax,0x63e7d13
  41ef6d:	cwde   
  41ef6e:	jl     0x41efaa
  41ef70:	push   esi
  41ef71:	(bad)  
  41ef73:	fs mov esp,0xf48654a8
  41ef7a:	clc    
  41ef7b:	hlt    
  41ef7c:	mov    cl,0xdb
  41ef7e:	push   0xffffffba
  41ef80:	push   es
  41ef81:	addr16 sti 
  41ef83:	dec    edx
  41ef84:	cwde   
  41ef85:	inc    ebx
  41ef86:	daa    
  41ef87:	ds fcomip st,st(3)
  41ef8a:	xor    edx,ebx
  41ef8c:	add    BYTE PTR [edi+0x40fb5386],bh
  41ef92:	outs   dx,BYTE PTR ds:[esi]
  41ef93:	jb     0x41ef56
  41ef95:	push   edx
  41ef96:	out    0x56,al
  41ef98:	push   ebp
  41ef99:	or     esi,DWORD PTR [eax-0x7b]
  41ef9c:	inc    eax
  41ef9d:	and    dh,dh
  41ef9f:	ja     0x41f012
  41efa1:	pusha  
  41efa2:	mov    ebp,0xccc449a
  41efa7:	add    bl,BYTE PTR [esi]
  41efa9:	retf   
  41efaa:	mov    ebp,0x7120a16b
  41efaf:	sub    eax,0x7ee0e6d0
  41efb4:	sar    DWORD PTR [esi-0x4d39cd3d],1
  41efba:	mov    cl,BYTE PTR [esi-0x2f]
  41efbd:	idiv   edx
  41efbf:	rol    DWORD PTR [esp+edi*4-0x2e],cl
  41efc3:	out    dx,al
  41efc4:	cli    
  41efc5:	aas    
  41efc6:	mov    ds:0x192ac5b4,eax
  41efcb:	aad    0x49
  41efcd:	sub    eax,0xcf5b2d17
  41efd2:	sub    al,0x88
  41efd4:	sub    eax,0x17a92718
  41efd9:	mov    bl,0x85
  41efdb:	mov    esp,0xf21e98d1
  41efe0:	mov    ebx,0x51f3b94e
  41efe5:	mov    esp,0x42a3b6d0
  41efea:	mov    gs,edx
  41efec:	mov    eax,ebx
  41efee:	scas   al,BYTE PTR es:[edi]
  41efef:	xchg   edi,eax
  41eff0:	iret   
  41eff1:	push   esi
  41eff2:	in     eax,0xbc
  41eff4:	xor    BYTE PTR [ebx],0x34
  41eff7:	hlt    
  41eff8:	cmp    al,0xc1
  41effa:	addr16 cmp eax,0x4d214fea
  41f000:	(bad)  
  41f001:	outs   dx,DWORD PTR ds:[esi]
  41f002:	ret    
  41f003:	sti    
  41f004:	fistp  WORD PTR [esi]
  41f006:	out    dx,eax
  41f007:	mov    bh,0xba
  41f009:	push   ecx
  41f00a:	repz into 
  41f00c:	sub    ecx,edx
  41f00e:	loop   0x41ef9e
  41f010:	fdiv   st(5),st
  41f012:	cli    
  41f013:	mov    al,0x84
  41f015:	mov    eax,0x56c4d60c
  41f01a:	or     dl,BYTE PTR [edi-0x37]
  41f01d:	adc    DWORD PTR [esi+edi*8],ecx
  41f020:	bound  ebx,QWORD PTR [ecx]
  41f022:	add    eax,0x8ae1013c
  41f027:	loopne 0x41f057
  41f029:	or     DWORD PTR [esi-0x1f],0x2d21f05b
  41f030:	inc    edx
  41f031:	mov    al,ds:0x8a812630
  41f036:	rol    DWORD PTR [ebp+0x5b459704],0x90
  41f03d:	mov    ds:0xde061527,eax
  41f042:	cmp    bh,BYTE PTR [ebp+0x299e0417]
  41f048:	xchg   edx,eax
  41f049:	daa    
  41f04a:	inc    ebx
  41f04b:	scas   eax,DWORD PTR es:[edi]
  41f04c:	xor    eax,0xebe4010a
  41f051:	adc    DWORD PTR [eax-0x30],edi
  41f054:	push   ebp
  41f055:	cli    
  41f056:	jecxz  0x41efe3
  41f058:	lods   eax,DWORD PTR ds:[esi]
  41f059:	mov    ds:0x39eb28b8,eax
  41f05e:	jns    0x41f098
  41f060:	test   BYTE PTR [ebp+0x21ae626d],0xff
  41f067:	imul   esp,DWORD PTR [edx],0x31
  41f06a:	push   cs
  41f06b:	xor    eax,0xa78549f3
  41f070:	repnz inc esi
  41f072:	inc    edx
  41f073:	or     eax,0x29d4b311
  41f078:	lods   al,BYTE PTR ds:[esi]
  41f079:	outs   dx,DWORD PTR ds:[esi]
  41f07a:	das    
  41f07b:	and    ebp,ebx
  41f07d:	out    0x28,eax
  41f07f:	inc    ecx
  41f080:	(bad)  
  41f081:	fidiv  WORD PTR [ebp+0x58e21667]
  41f087:	mov    dh,0xfb
  41f089:	int    0x8b
  41f08b:	gs pop edx
  41f08d:	pop    esi
  41f08e:	outs   dx,DWORD PTR ds:[esi]
  41f08f:	in     eax,0x2e
  41f091:	ror    BYTE PTR [eax-0x60],0xdf
  41f095:	bound  edi,QWORD PTR [ecx]
  41f097:	in     al,dx
  41f098:	pop    ebp
  41f099:	std    
  41f09a:	jecxz  0x41f105
  41f09c:	push   0xb74fd70a
  41f0a1:	shr    DWORD PTR [edx-0x6d28c15c],cl
  41f0a7:	jno    0x41f0a7
  41f0a9:	(bad)  
  41f0aa:	out    dx,eax
  41f0ab:	add    esi,DWORD PTR [ebx+ebp*1+0x7e]
  41f0af:	repnz pop ebx
  41f0b1:	dec    ebp
  41f0b2:	pop    esi
  41f0b3:	fmul   DWORD PTR ss:[edx]
  41f0b6:	sub    dh,bh
  41f0b8:	out    0xf4,eax
  41f0ba:	dec    ebx
  41f0bb:	fwait
  41f0bc:	mov    esp,0xe2151f48
  41f0c1:	or     BYTE PTR [ebx-0x7d616007],al
  41f0c7:	xchg   edx,eax
  41f0c8:	popf   
  41f0c9:	jmp    0x41f0d6
  41f0cb:	outs   dx,BYTE PTR ds:[esi]
  41f0cc:	inc    esi
  41f0cd:	repnz push ebp
  41f0cf:	xchg   ecx,eax
  41f0d0:	pop    ebx
  41f0d1:	sub    BYTE PTR [ebx+0x5e],ah
  41f0d4:	bound  esp,QWORD PTR [ebx+edi*1]
  41f0d7:	int3   
  41f0d8:	push   es
  41f0d9:	and    al,0x8d
  41f0db:	dec    ebp
  41f0dc:	(bad)  
  41f0dd:	pop    edi
  41f0de:	adc    bh,ah
  41f0e0:	outs   dx,DWORD PTR ds:[esi]
  41f0e1:	repnz into 
  41f0e3:	mov    bl,0x16
  41f0e5:	sub    eax,DWORD PTR ds:0xab1374b1
  41f0eb:	pusha  
  41f0ec:	mov    dl,BYTE PTR [ebx]
  41f0ee:	adc    dh,dh
  41f0f0:	cmp    DWORD PTR [edx-0x6b],0x7ddb5711
  41f0f7:	adc    eax,0x2668dbe7
  41f0fc:	out    0x88,eax
  41f0fe:	mov    dl,0x8c
  41f100:	jb     0x41f08b
  41f102:	sbb    ecx,DWORD PTR [ebx-0x5e99c46a]
  41f108:	mov    esp,0x1a52f29
  41f10d:	pop    ecx
  41f10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10f:	or     bl,BYTE PTR [eax+esi*8-0x52c8d66f]
  41f116:	and    dh,BYTE PTR [edx+0x6569fafa]
  41f11c:	sub    eax,DWORD PTR [ebx+0x477b6071]
  41f122:	mov    ds:0x6b741467,al
  41f127:	and    dl,BYTE PTR [ecx]
  41f129:	add    ch,cl
  41f12b:	push   edx
  41f12c:	mov    ch,0x71
  41f12e:	cs ret 0x4a12
  41f132:	ror    ecx,cl
  41f134:	xchg   esi,eax
  41f135:	ficom  WORD PTR [esi+eiz*2+0x72890780]
  41f13c:	sub    ebp,DWORD PTR ds:0xd3282bf4
  41f142:	in     eax,dx
  41f143:	dec    ebp
  41f144:	je     0x41f181
  41f146:	imul   esi,DWORD PTR [eax-0x47],0x6e9b5997
  41f14d:	jae    0x41f129
  41f14f:	jp     0x41f176
  41f151:	pop    edx
  41f152:	sub    DWORD PTR gs:[ebp-0x6],ebx
  41f156:	test   al,0x19
  41f158:	push   ebp
  41f159:	push   ebp
  41f15a:	inc    eax
  41f15b:	out    dx,eax
  41f15c:	sub    DWORD PTR [esp+eax*8],0xf2300002
  41f163:	test   eax,0x67ce29db
  41f168:	and    BYTE PTR [ecx-0x3a],dh
  41f16b:	sti    
  41f16c:	popf   
  41f16d:	lods   eax,DWORD PTR ds:[esi]
  41f16e:	jns    0x41f114
  41f170:	push   0xffffffdf
  41f172:	mov    al,0x85
  41f174:	and    al,BYTE PTR [eax+0x25cacd4]
  41f17a:	gs add ebx,esp
  41f17d:	(bad)  
  41f17e:	call   0xdbb9420d
  41f183:	and    dl,BYTE PTR [eax-0x52]
  41f186:	ds mov ?,esp
  41f189:	int3   
  41f18a:	push   edi
  41f18b:	sbb    ebp,DWORD PTR [ebx+0x3e]
  41f18e:	stos   BYTE PTR es:[edi],al
  41f18f:	ret    
  41f190:	xchg   BYTE PTR [eax+0x14],dl
  41f193:	mov    cl,0xa5
  41f195:	cmp    BYTE PTR [eax+ebp*1],dl
  41f198:	xor    ebx,edx
  41f19a:	fwait
  41f19b:	sbb    al,0x60
  41f19d:	test   al,0xff
  41f19f:	out    0xd2,al
  41f1a1:	mov    ecx,DWORD PTR [edx-0x4cde210]
  41f1a7:	jecxz  0x41f1be
  41f1a9:	xchg   edx,eax
  41f1aa:	mov    edi,0xfb2398a1
  41f1af:	aam    0xc2
  41f1b1:	adc    al,0x3f
  41f1b3:	add    esi,DWORD PTR [esi]
  41f1b5:	pop    eax
  41f1b6:	inc    DWORD PTR [edi+0x60b507a6]
  41f1bc:	sahf   
  41f1bd:	jns    0x41f171
  41f1bf:	push   eax
  41f1c0:	das    
  41f1c1:	or     edx,DWORD PTR [esi]
  41f1c3:	ins    BYTE PTR es:[edi],dx
  41f1c4:	aad    0x74
  41f1c6:	imul   ecx,DWORD PTR [eax-0x15],0x7fdaf5bf
  41f1cd:	in     al,dx
  41f1ce:	nop
  41f1cf:	(bad)  
  41f1d1:	xor    eax,0xaca2c3b
  41f1d6:	in     al,dx
  41f1d7:	es repnz scas al,BYTE PTR es:[edi]
  41f1da:	sub    ah,BYTE PTR [edi]
  41f1dc:	or     edx,DWORD PTR [ebx-0x6e]
  41f1df:	in     al,0x4e
  41f1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1e2:	dec    edx
  41f1e3:	sbb    BYTE PTR [ebx],bl
  41f1e5:	sbb    edx,DWORD PTR [ebp-0x3d04a25]
  41f1eb:	xchg   esp,eax
  41f1ec:	or     ecx,DWORD PTR [eax]
  41f1ee:	jmp    0x41f1dc
  41f1f0:	rcr    DWORD PTR [ebx],cl
  41f1f2:	dec    edi
  41f1f3:	outs   dx,BYTE PTR ds:[esi]
  41f1f4:	xchg   ebp,eax
  41f1f5:	fs xchg edi,eax
  41f1f7:	push   es
  41f1f8:	je     0x41f1ed
  41f1fa:	and    eax,esp
  41f1fc:	dec    eax
  41f1fd:	out    0x14,al
  41f1ff:	cmp    eax,0x5158f6ec
  41f204:	pop    ebp
  41f205:	mov    cl,0x1f
  41f207:	aaa    
  41f208:	ins    BYTE PTR es:[edi],dx
  41f209:	and    eax,0x1f84f42b
  41f20e:	in     eax,dx
  41f20f:	add    eax,0x26b52079
  41f214:	fwait
  41f215:	jmp    0x41f219
  41f217:	fiadd  WORD PTR [ecx+eax*8-0x33829c1e]
  41f21e:	or     DWORD PTR [edx],edi
  41f220:	add    DWORD PTR [esi+0x2b],ecx
  41f223:	in     eax,0x31
  41f225:	fisttp WORD PTR [esi]
  41f227:	jae    0x41f1c7
  41f229:	(bad)  
  41f22a:	cmp    esp,esp
  41f22c:	mov    bh,0x75
  41f22e:	mov    edx,0xfa9dad49
  41f233:	es mov bh,0xb0
  41f236:	push   ecx
  41f237:	cmp    ecx,eax
  41f239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23a:	jle    0x41f1c7
  41f23c:	sbb    bh,dl
  41f23e:	cs xchg ecx,eax
  41f240:	shr    DWORD PTR [edx+0x50ff64d3],cl
  41f246:	aas    
  41f247:	sbb    eax,0x24acd225
  41f24c:	arpl   sp,bx
  41f24e:	test   DWORD PTR [esi+0x7b],edi
  41f251:	cdq    
  41f252:	mov    bl,0x95
  41f254:	jmp    0x41f2bc
  41f256:	sub    bh,BYTE PTR [esi-0x449f9a63]
  41f25c:	ins    DWORD PTR es:[edi],dx
  41f25d:	in     al,dx
  41f25e:	jo     0x41f2d0
  41f260:	push   0x18
  41f262:	jae    0x41f2ac
  41f264:	or     al,0xfe
  41f266:	inc    esp
  41f267:	mov    esp,0xe967bf0f
  41f26c:	push   ss
  41f26d:	dec    esi
  41f26e:	loop   0x41f2dc
  41f270:	shl    al,1
  41f272:	add    al,0xbe
  41f274:	jbe    0x41f246
  41f276:	repz sub ch,ch
  41f279:	stos   BYTE PTR es:[edi],al
  41f27a:	adc    BYTE PTR [edi-0x6e217102],0x6f
  41f281:	xchg   BYTE PTR [esi],ah
  41f283:	shr    si,0x89
  41f287:	je     0x41f28f
  41f289:	ins    DWORD PTR es:[edi],dx
  41f28a:	ret    0x4d0e
  41f28d:	mov    dh,0xc9
  41f28f:	mov    edi,0xfee40021
  41f294:	call   0x1292f11c
  41f299:	sub    dl,0xf9
  41f29c:	call   0x28e8:0x333b876
  41f2a3:	fwait
  41f2a4:	push   0x0
  41f2a6:	scas   eax,DWORD PTR es:[edi]
  41f2a7:	sbb    al,0x5d
  41f2a9:	js     0x41f2f7
  41f2ab:	or     ebp,DWORD PTR [ecx-0x2f15cf84]
  41f2b1:	rol    dl,cl
  41f2b3:	jge    0x41f329
  41f2b5:	jae    0x41f2df
  41f2b7:	push   ecx
  41f2b8:	jle    0x41f32b
  41f2ba:	jnp    0x41f30e
  41f2bc:	pop    edx
  41f2bd:	inc    esp
  41f2be:	jl     0x41f322
  41f2c0:	adc    DWORD PTR [ebp+ecx*8+0x131baa02],0xffffff97
  41f2c8:	int    0xbc
  41f2ca:	adc    bl,dl
  41f2cc:	push   edx
  41f2cd:	fcom   DWORD PTR [eax]
  41f2cf:	je     0x41f2e3
  41f2d1:	jo     0x41f314
  41f2d3:	aas    
  41f2d4:	push   0x27
  41f2d6:	sbb    bl,BYTE PTR [esi]
  41f2d8:	lds    ebp,FWORD PTR ds:0x3d35ce4d
  41f2de:	and    BYTE PTR [edi],bl
  41f2e0:	xlat   BYTE PTR ds:[ebx]
  41f2e1:	add    DWORD PTR [ecx],esp
  41f2e3:	mov    dl,0xf9
  41f2e5:	xchg   ebp,eax
  41f2e6:	mov    dl,0x8
  41f2e8:	not    BYTE PTR [ebx-0x1722586e]
  41f2ee:	imul   ecx,DWORD PTR [ebx-0x1c],0xffffffab
  41f2f2:	idiv   DWORD PTR [ecx+0x5f]
  41f2f5:	pop    es
  41f2f6:	mov    ah,0x7
  41f2f8:	mov    bh,0x30
  41f2fa:	jne    0x41f27e
  41f2fc:	test   DWORD PTR [esi],eax
  41f2fe:	mul    BYTE PTR [edi+0x19]
  41f301:	(bad)  
  41f302:	int3   
  41f303:	push   ds
  41f304:	enter  0x74ab,0xb4
  41f308:	retf   0x4e40
  41f30b:	mov    eax,ds:0x68bcea66
  41f310:	leave  
  41f311:	dec    ebx
  41f312:	popa   
  41f313:	pop    ecx
  41f314:	dec    ebp
  41f315:	imul   esi,DWORD PTR [edx+0x4359e838],0x4e
  41f31c:	push   edi
  41f31d:	adc    DWORD PTR [edi+0x13],0xc1f5e084
  41f324:	push   edx
  41f325:	jns    0x41f2fb
  41f327:	das    
  41f328:	imul   edx,DWORD PTR [ebp+0x6b362022],0xffffffcd
  41f32f:	repz enter 0xec0a,0xe4
  41f334:	xor    BYTE PTR [edi+0x3d3ed21b],ch
  41f33a:	ja     0x41f376
  41f33c:	scas   al,BYTE PTR es:[edi]
  41f33d:	es popf 
  41f33f:	adc    al,0x88
  41f341:	imul   DWORD PTR [esi]
  41f343:	dec    ebp
  41f344:	inc    esp
  41f345:	mov    ch,0x5a
  41f347:	jb     0x41f324
  41f349:	out    dx,al
  41f34a:	or     esi,DWORD PTR [ebp-0x772da64a]
  41f350:	cmp    DWORD PTR [esi+0x48],esp
  41f353:	gs jmp 0x40e9:0x13199390
  41f35b:	add    eax,eax
  41f35d:	mov    ch,0xf6
  41f35f:	ret    0x7d95
  41f362:	dec    edx
  41f363:	sbb    al,0xd2
  41f365:	arpl   WORD PTR [ecx-0x59],bx
  41f368:	jae    0x41f37a
  41f36a:	mov    ecx,0x9827236a
  41f36f:	cwde   
  41f370:	mov    bl,0xc4
  41f372:	jge    0x41f344
  41f374:	test   eax,0x7363f545
  41f379:	add    ebp,DWORD PTR [edx+ecx*2]
  41f37c:	je     0x41f3b4
  41f37e:	std    
  41f37f:	or     BYTE PTR [esi-0x7c0c1782],0x77
  41f386:	adc    cl,ah
  41f388:	and    BYTE PTR [ebx],al
  41f38a:	mov    ebx,0xbb189576
  41f38f:	xchg   ebx,eax
  41f390:	rcl    DWORD PTR [ecx-0x78],0x59
  41f394:	retf   
  41f395:	mov    bh,0x5
  41f397:	cld    
  41f398:	push   es
  41f399:	xchg   edi,eax
  41f39a:	mov    ds:0xc163dfef,eax
  41f39f:	ss inc esp
  41f3a1:	dec    ebx
  41f3a2:	inc    esi
  41f3a3:	ins    BYTE PTR es:[edi],dx
  41f3a4:	add    DWORD PTR [esi],0xfffffff4
  41f3a7:	pop    ss
  41f3a8:	ret    
  41f3a9:	pop    ecx
  41f3aa:	jb     0x41f388
  41f3ac:	js     0x41f3ee
  41f3ae:	js     0x41f3ce
  41f3b0:	inc    eax
  41f3b1:	pop    ecx
  41f3b2:	jo     0x41f3a4
  41f3b4:	std    
  41f3b5:	dec    ebx
  41f3b6:	dec    eax
  41f3b7:	mov    eax,DWORD PTR [eax]
  41f3b9:	idiv   DWORD PTR [esi+0x2d]
  41f3bc:	test   BYTE PTR [eax+edi*8],0x74
  41f3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c1:	mov    dl,0x9
  41f3c3:	enter  0xee60,0x57
  41f3c7:	xchg   BYTE PTR [eax],dl
  41f3c9:	mov    edi,0x2fb7f738
  41f3ce:	outs   dx,BYTE PTR ds:[esi]
  41f3cf:	sti    
  41f3d0:	enter  0xe3dd,0xba
  41f3d4:	cmp    eax,0xae202f69
  41f3d9:	fiadd  WORD PTR [ecx-0x25]
  41f3dc:	fdivr  QWORD PTR [edx]
  41f3de:	jae    0x41f39b
  41f3e0:	mov    eax,ds:0xf7ac24c0
  41f3e5:	imul   edx,DWORD PTR [ebp-0x16],0x3e
  41f3e9:	fiadd  DWORD PTR [edx]
  41f3eb:	xor    BYTE PTR [esi],al
  41f3ed:	push   ecx
  41f3ee:	xlat   BYTE PTR ds:[ebx]
  41f3ef:	dec    esp
  41f3f0:	dec    eax
  41f3f1:	test   eax,0x1cce85a5
  41f3f6:	loop   0x41f3d3
  41f3f8:	clc    
  41f3f9:	out    dx,eax
  41f3fa:	imul   edi,DWORD PTR [edx+0x10],0xffffffd3
  41f3fe:	aam    0xa7
  41f400:	pop    ebp
  41f401:	cmc    
  41f402:	imul   bp,WORD PTR [ecx-0x5b],0xffda
  41f407:	jno    0x41f454
  41f409:	mov    ebp,0x5d6071b4
  41f40e:	imul   BYTE PTR [eax-0x45ea8417]
  41f414:	out    dx,al
  41f415:	push   ebx
  41f416:	(bad)  
  41f417:	cmp    eax,0xac7e7f1f
  41f41c:	ins    DWORD PTR es:[edi],dx
  41f41d:	aad    0x8f
  41f41f:	xlat   BYTE PTR ds:[ebx]
  41f420:	add    DWORD PTR [ebx],ebx
  41f422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f423:	iret   
  41f424:	push   edi
  41f425:	cdq    
  41f426:	sbb    esp,DWORD PTR [ebp-0x34]
  41f429:	sbb    DWORD PTR [ecx+0x27e0a458],ebp
  41f42f:	dec    esi
  41f430:	jmp    0x580a:0x673e5cbe
  41f437:	pop    edx
  41f438:	mov    cl,0xf9
  41f43a:	pop    ss
  41f43b:	loop   0x41f471
  41f43d:	les    ebx,FWORD PTR [edx-0x35]
  41f440:	sub    BYTE PTR [ecx],ch
  41f442:	cmp    BYTE PTR [edi-0x53295a40],ah
  41f448:	sub    ah,dh
  41f44a:	out    dx,eax
  41f44b:	inc    ecx
  41f44c:	sub    al,0x9b
  41f44e:	cmp    BYTE PTR [esp+edi*1+0x43],0x4e
  41f453:	mov    ebp,eax
  41f455:	test   BYTE PTR [eax],ch
  41f457:	and    al,0x9e
  41f459:	data16 fwait
  41f45b:	jge    0x41f4db
  41f45d:	loop   0x41f41c
  41f45f:	sub    eax,0x20e85483
  41f464:	inc    eax
  41f465:	add    dh,0x52
  41f468:	cmp    BYTE PTR [edi+0x1f],bh
  41f46b:	jp     0x41f4b6
  41f46d:	sbb    esp,ebx
  41f46f:	push   esp
  41f470:	mov    DWORD PTR [ecx+ebx*4-0x7e],edx
  41f474:	mov    edi,0xf59f17ca
  41f479:	dec    ebp
  41f47a:	in     eax,dx
  41f47b:	clc    
  41f47c:	mov    al,0x76
  41f47e:	imul   ecx,edi,0xffffffef
  41f481:	dec    eax
  41f482:	cmc    
  41f483:	sub    eax,0x5fb35168
  41f488:	in     al,0xd6
  41f48a:	sub    BYTE PTR ds:0x4190f56d,ch
  41f490:	clc    
  41f491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f492:	test   al,0x45
  41f494:	pop    esi
  41f495:	pop    ss
  41f496:	cwde   
  41f497:	xor    ch,BYTE PTR [esi]
  41f499:	dec    ecx
  41f49a:	fild   DWORD PTR [eax]
  41f49c:	fist   DWORD PTR [ecx+edi*2-0x57cc15b9]
  41f4a3:	jmp    0x7e0d04b
  41f4a8:	cmp    DWORD PTR [edi+0x27f2869c],edi
  41f4ae:	jle    0x41f485
  41f4b0:	inc    esp
  41f4b1:	out    dx,eax
  41f4b2:	or     eax,0x48cefb4
  41f4b7:	xor    edx,DWORD PTR [ecx+0x3b]
  41f4ba:	mov    esi,0x8ba17f14
  41f4bf:	aad    0xea
  41f4c1:	pusha  
  41f4c2:	(bad)  
  41f4c3:	push   0x53
  41f4c5:	dec    esp
  41f4c6:	lods   eax,DWORD PTR ds:[esi]
  41f4c7:	and    dl,BYTE PTR [esi+0x2c]
  41f4ca:	ror    DWORD PTR [eax-0x25],0xe7
  41f4ce:	sub    eax,0xcd96b5d9
  41f4d3:	pop    ebp
  41f4d4:	push   ds
  41f4d5:	jl     0x41f4c1
  41f4d7:	pop    esi
  41f4d8:	ret    0x260d
  41f4db:	(bad)
  41f4de:	call   DWORD PTR [ecx]
  41f4e0:	mov    ebx,0xe721ebcb
  41f4e5:	sub    DWORD PTR [eax],ecx
  41f4e7:	test   al,0xc
  41f4e9:	(bad)  
  41f4ea:	cs stos BYTE PTR es:[edi],al
  41f4ec:	mov    al,0x73
  41f4ee:	lock fwait
  41f4f0:	pop    eax
  41f4f1:	xor    al,0x8f
  41f4f3:	pop    ds
  41f4f4:	or     eax,0x9dc7aa2
  41f4f9:	adc    BYTE PTR [ecx+0x6d472181],dh
  41f4ff:	fdiv   st(6),st
  41f501:	repz pop esp
  41f503:	nop
  41f504:	xor    eax,0x9bd97401
  41f509:	and    ebp,DWORD PTR [edx]
  41f50b:	ds sbb eax,0x3f024750
  41f511:	sub    bh,BYTE PTR [esi-0x3ffae336]
  41f517:	pop    es
  41f518:	push   eax
  41f519:	adc    bh,cl
  41f51b:	mov    edx,0x44ef42ac
  41f520:	ficomp WORD PTR [ebx+0x69e332a8]
  41f526:	pop    ecx
  41f527:	neg    DWORD PTR [eax]
  41f529:	mov    ah,0xfe
  41f52b:	xor    BYTE PTR [ecx-0x68485c0b],bh
  41f531:	loope  0x41f593
  41f533:	mov    esp,DWORD PTR [esi+0x5e4d7a2d]
  41f539:	xor    esp,ecx
  41f53b:	js     0x41f517
  41f53d:	ja     0x41f548
  41f53f:	(bad)  
  41f540:	adc    ch,BYTE PTR [ecx-0x7665ceff]
  41f546:	push   esp
  41f547:	test   al,0x7b
  41f549:	fldcw  WORD PTR [ebp+0x7e0860ed]
  41f54f:	or     BYTE PTR [ebx+ebp*8-0x2e7aa45a],bl
  41f556:	inc    edi
  41f557:	cs bnd jmp 0x41f505
  41f55b:	mov    edx,0xfbafb3aa
  41f560:	cld    
  41f561:	pop    esp
  41f562:	dec    ecx
  41f563:	adc    ecx,DWORD PTR [esp+ebp*2-0x4a]
  41f567:	push   ecx
  41f568:	push   ecx
  41f569:	ss jbe 0x41f4ff
  41f56c:	out    0xb8,eax
  41f56e:	sbb    bl,dl
  41f570:	or     BYTE PTR [esi],bl
  41f572:	xor    BYTE PTR [edi+eiz*1+0x31ec41b],bh
  41f579:	pop    ss
  41f57a:	jge    0x41f50e
  41f57c:	jmp    0x41f532
  41f57e:	xchg   BYTE PTR [esi],ch
  41f580:	sub    al,BYTE PTR [ebp+0x79649475]
  41f586:	cmc    
  41f587:	and    al,0x90
  41f589:	and    ebp,esi
  41f58b:	push   esi
  41f58c:	jmp    0x821d:0xb80d56c8
  41f593:	xlat   BYTE PTR ds:[ebx]
  41f594:	mov    eax,DWORD PTR [edi-0x1e]
  41f597:	push   ebx
  41f598:	aaa    
  41f599:	or     edi,DWORD PTR [esi]
  41f59b:	pop    eax
  41f59c:	jne    0x41f557
  41f59e:	call   DWORD PTR [edi+0x2ecdb34a]
  41f5a4:	in     al,0x48
  41f5a6:	outs   dx,DWORD PTR ds:[esi]
  41f5a7:	dec    edi
  41f5a8:	mov    bl,0x37
  41f5aa:	retf   0x655e
  41f5ad:	lahf   
  41f5ae:	mov    ah,0x36
  41f5b0:	(bad)  
  41f5b2:	cmp    ah,bl
  41f5b4:	cmc    
  41f5b5:	dec    edx
  41f5b6:	add    al,0x7c
  41f5b8:	mov    ebp,0x439f32f0
  41f5bd:	test   al,0x46
  41f5bf:	in     eax,dx
  41f5c0:	dec    edi
  41f5c1:	xchg   ebp,eax
  41f5c2:	sub    eax,0x6c066b18
  41f5c7:	addr16 dec ecx
  41f5c9:	sub    esi,ecx
  41f5cb:	xchg   edx,eax
  41f5cc:	mov    eax,?
  41f5ce:	(bad)  
  41f5cf:	ja     0x41f640
  41f5d1:	idiv   DWORD PTR ds:0x808da742
  41f5d7:	xchg   BYTE PTR [ebx+0xcc306ca],cl
  41f5dd:	xchg   esp,eax
  41f5de:	fisttp WORD PTR [ebp-0x6]
  41f5e1:	inc    ecx
  41f5e2:	(bad)  
  41f5e3:	in     eax,0xea
  41f5e5:	sti    
  41f5e6:	lods   eax,DWORD PTR ds:[esi]
  41f5e7:	bound  esp,QWORD PTR [eax-0x32]
  41f5ea:	mov    gs,WORD PTR [ecx-0x72]
  41f5ed:	cld    
  41f5ee:	adc    cl,dh
  41f5f0:	inc    ebp
  41f5f1:	mov    ebp,0x570619e2
  41f5f6:	rol    DWORD PTR [edx+0xa049b92],cl
  41f5fc:	jnp    0x41f626
  41f5fe:	imul   edi,DWORD PTR [edi+0xf],0x531f3242
  41f605:	(bad)  
  41f606:	jp     0x41f679
  41f608:	aam    0x73
  41f60a:	adc    esp,DWORD PTR [ecx+edx*1-0x77]
  41f60e:	js     0x41f5f6
  41f610:	dec    ebx
  41f611:	sbb    al,0xf5
  41f613:	fnstsw ax
  41f615:	mov    esp,0xf987ad77
  41f61a:	xor    dl,ah
  41f61c:	xchg   esi,eax
  41f61d:	sub    BYTE PTR [edx+0x17],dh
  41f620:	lock add DWORD PTR [ecx-0x21],edi
  41f624:	aas    
  41f625:	adc    bl,BYTE PTR [edi-0x62]
  41f628:	jge    0x41f634
  41f62a:	cmp    DWORD PTR [ebx],ebp
  41f62c:	arpl   WORD PTR [esi],di
  41f62e:	bound  esp,QWORD PTR [ecx-0x65165a4c]
  41f634:	fisubr WORD PTR [esi-0x30]
  41f637:	shr    BYTE PTR [ebx+0x46],cl
  41f63a:	inc    edi
  41f63b:	jp     0x41f686
  41f63d:	cwde   
  41f63e:	adc    DWORD PTR [ebx],eax
  41f640:	jecxz  0x41f681
  41f642:	sbb    al,0x31
  41f644:	js     0x41f642
  41f646:	loope  0x41f66a
  41f648:	mov    eax,0x97096020
  41f64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f64e:	aad    0xc5
  41f650:	arpl   WORD PTR [eax-0x4b],di
  41f653:	cld    
  41f654:	fidiv  WORD PTR [edx]
  41f656:	(bad)  
  41f657:	stos   DWORD PTR es:[edi],eax
  41f658:	cld    
  41f659:	mov    cl,0xd5
  41f65b:	xor    edx,esp
  41f65d:	add    bl,BYTE PTR [edi]
  41f65f:	test   ecx,ebp
  41f661:	xchg   BYTE PTR [edx],ch
  41f663:	xor    eax,DWORD PTR [ebx+0x2a]
  41f666:	xchg   dh,bl
  41f668:	mov    bh,0x94
  41f66a:	in     eax,dx
  41f66b:	popa   
  41f66c:	leave  
  41f66d:	(bad)  
  41f66f:	es cmp al,0x48
  41f672:	and    ebp,DWORD PTR [esi-0x72]
  41f675:	sub    eax,0x632be11e
  41f67a:	add    al,0xc7
  41f67c:	pushf  
  41f67d:	xchg   edi,eax
  41f67e:	stos   BYTE PTR es:[edi],al
  41f67f:	iret   
  41f680:	sub    al,0x19
  41f682:	ret    0xb3b7
  41f685:	fwait
  41f686:	add    al,BYTE PTR [esp+edi*2]
  41f689:	push   0x7
  41f68b:	sub    ah,ah
  41f68d:	mov    dl,0xd1
  41f68f:	ret    
  41f690:	xchg   edx,eax
  41f691:	xchg   ebp,eax
  41f692:	pop    ebx
  41f693:	xchg   ebx,eax
  41f694:	xor    BYTE PTR [ebx],0x5c
  41f697:	addr16 out 0xf5,al
  41f69a:	inc    ebp
  41f69b:	add    DWORD PTR [eax],esi
  41f69d:	test   al,0x31
  41f69f:	pop    ds
  41f6a0:	mov    dl,0xcd
  41f6a2:	out    0x0,al
  41f6a4:	and    al,0x72
  41f6a6:	rcl    esi,0xc1
  41f6a9:	sbb    edi,DWORD PTR [ecx]
  41f6ab:	push   0xffffffa6
  41f6ad:	pop    esp
  41f6ae:	cmp    DWORD PTR [ebx],ebx
  41f6b0:	pop    ecx
  41f6b1:	lea    esp,[edx-0x78]
  41f6b4:	sbb    al,0xb3
  41f6b6:	jecxz  0x41f6fb
  41f6b8:	push   edx
  41f6b9:	lods   al,BYTE PTR ds:[esi]
  41f6ba:	iret   
  41f6bb:	mov    ds:0x4a54ee06,eax
  41f6c0:	sbb    ecx,DWORD PTR [ebx-0x77c2daec]
  41f6c6:	xchg   ebx,eax
  41f6c7:	sbb    al,0xf3
  41f6c9:	add    edx,DWORD PTR [edx-0x1b14c43c]
  41f6cf:	mov    bh,0x39
  41f6d1:	clc    
  41f6d2:	lock dec edi
  41f6d4:	pop    edx
  41f6d5:	mov    edx,0xd75af624
  41f6da:	sbb    DWORD PTR [ebp+eax*4+0x75],0x66d83c51
  41f6e2:	iret   
  41f6e3:	jle    0x41f69f
  41f6e5:	imul   edx,DWORD PTR [edx+0x3e5e10b1],0xffffffce
  41f6ec:	stc    
  41f6ed:	pop    ebx
  41f6ee:	mov    dh,0xff
  41f6f0:	jo     0x41f6ce
  41f6f2:	les    ecx,FWORD PTR [ebp-0x6c86a708]
  41f6f8:	pop    ds
  41f6f9:	fist   WORD PTR [esi+0x7929e557]
  41f6ff:	jno    0x41f74e
  41f701:	push   cs
  41f702:	cmp    eax,DWORD PTR [ebx+0x6]
  41f705:	xlat   BYTE PTR ds:[ebx]
  41f706:	ss pop eax
  41f708:	scas   al,BYTE PTR es:[edi]
  41f709:	call   0x6660:0x26cccbea
  41f710:	pop    esp
  41f711:	fwait
  41f712:	bound  ebp,QWORD PTR [eax+edi*4+0x34]
  41f716:	inc    edx
  41f717:	sub    dh,BYTE PTR [ebx]
  41f719:	lock ficom DWORD PTR [ecx+0x7003794c]
  41f720:	adc    BYTE PTR [ebp-0x6b],bl
  41f723:	shr    BYTE PTR [edi+0x1c],0x40
  41f727:	lods   eax,DWORD PTR ds:[esi]
  41f728:	add    eax,0x7a7bee68
  41f72d:	addr16 inc esi
  41f72f:	iret   
  41f730:	xchg   edx,eax
  41f731:	xor    DWORD PTR [edx-0x39],ebx
  41f734:	jo     0x41f793
  41f736:	adc    al,0xc7
  41f738:	(bad)  
  41f739:	sti    
  41f73a:	loop   0x41f721
  41f73c:	xor    ch,BYTE PTR [eax+0x4f]
  41f73f:	add    DWORD PTR [edx-0xf5b2778],esp
  41f745:	xor    dh,BYTE PTR [ecx+0x36]
  41f748:	add    al,0xf5
  41f74a:	test   cl,0x91
  41f74d:	dec    edi
  41f74e:	lock pop ecx
  41f751:	lahf   
  41f752:	mov    esi,ecx
  41f754:	into   
  41f755:	(bad)  
  41f756:	sub    al,0x14
  41f758:	add    al,BYTE PTR [esi]
  41f75a:	cmp    ebp,edx
  41f75c:	ss stc 
  41f75e:	add    eax,0x3ed67e3c
  41f763:	mov    bl,0xf6
  41f765:	push   ds
  41f766:	xchg   esi,eax
  41f767:	mov    ds:0x75b2f613,eax
  41f76c:	ret    
  41f76d:	ror    DWORD PTR [ecx],1
  41f76f:	cmp    eax,0xdac5647f
  41f774:	outs   dx,DWORD PTR ds:[esi]
  41f775:	inc    esp
  41f776:	or     eax,0x6f2fb20a
  41f77b:	sbb    al,0x5a
  41f77d:	sbb    DWORD PTR [ebp+0x3b],edx
  41f780:	sbb    edi,DWORD PTR [esi]
  41f782:	in     eax,dx
  41f783:	dec    eax
  41f784:	data16 cmp BYTE PTR [eax],bl
  41f787:	arpl   bx,bx
  41f789:	pushf  
  41f78a:	jne    0x41f720
  41f78c:	jno    0x41f78a
  41f78e:	push   cs
  41f78f:	dec    ebx
  41f790:	push   edx
  41f791:	mov    cl,0x25
  41f793:	pop    ecx
  41f794:	sahf   
  41f795:	idiv   bh
  41f797:	stos   DWORD PTR es:[edi],eax
  41f798:	mov    ecx,0xf06350a4
  41f79d:	mov    ebp,0x1449802d
  41f7a2:	jns    0x41f7c6
  41f7a4:	(bad)  
  41f7a5:	iret   
  41f7a6:	loop   0x41f77c
  41f7a8:	fisub  WORD PTR ds:0x3924aea8
  41f7ae:	jmp    0x75fc:0x5570a5eb
  41f7b5:	cli    
  41f7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7b7:	jno    0x41f7b8
  41f7b9:	or     BYTE PTR [ecx-0x3a],bh
  41f7bc:	and    DWORD PTR [edi+0x4e7f955d],edx
  41f7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7c3:	dec    edi
  41f7c4:	ret    0x4f1b
  41f7c7:	call   0xe3f21c47
  41f7cc:	std    
  41f7cd:	(bad)  
  41f7cf:	xchg   ebx,eax
  41f7d0:	pop    ds
  41f7d1:	outs   dx,DWORD PTR ds:[esi]
  41f7d2:	repz dec ecx
  41f7d4:	jg     0x41f76e
  41f7d6:	mov    BYTE PTR ds:0xe5769ab2,ah
  41f7dc:	or     al,0xed
  41f7de:	pop    ss
  41f7df:	cmc    
  41f7e0:	repnz in eax,0xde
  41f7e3:	jb     0x41f82c
  41f7e5:	push   eax
  41f7e6:	stos   BYTE PTR es:[edi],al
  41f7e7:	push   eax
  41f7e8:	stos   DWORD PTR es:[edi],eax
  41f7e9:	out    dx,eax
  41f7ea:	bound  ebp,QWORD PTR [ecx]
  41f7ec:	mov    edx,0x6c55feb6
  41f7f1:	pop    ecx
  41f7f2:	dec    eax
  41f7f3:	mov    edx,0x651a0875
  41f7f8:	loope  0x41f77d
  41f7fa:	cmp    esp,edi
  41f7fc:	push   cs
  41f7fd:	in     eax,dx
  41f7fe:	xor    BYTE PTR ds:0x2df7d299,ch
  41f804:	(bad)
  41f808:	call   0x80cd:0x297935f1
  41f80f:	loop   0x41f7e4
  41f811:	nop
  41f812:	push   ebp
  41f813:	jmp    0xc1a29b06
  41f818:	dec    ebp
  41f819:	popa   
  41f81a:	scas   eax,DWORD PTR es:[edi]
  41f81b:	ins    DWORD PTR es:[edi],dx
  41f81c:	pop    eax
  41f81d:	lods   eax,DWORD PTR ds:[esi]
  41f81e:	and    ebp,DWORD PTR [ebx-0x778fe9ae]
  41f824:	jns    0x41f7c2
  41f826:	cwde   
  41f827:	xchg   BYTE PTR [edx],dl
  41f829:	adc    bl,BYTE PTR [ecx]
  41f82b:	out    0x40,al
  41f82d:	add    al,0xae
  41f82f:	addr16 js 0x41f897
  41f832:	xchg   edi,eax
  41f833:	outs   dx,DWORD PTR ds:[esi]
  41f834:	cdq    
  41f835:	ins    BYTE PTR es:[edi],dx
  41f836:	repz test eax,0x8c1e9d66
  41f83c:	pop    esp
  41f83d:	scas   al,BYTE PTR es:[edi]
  41f83e:	daa    
  41f83f:	out    0xcf,eax
  41f841:	push   ecx
  41f842:	inc    ebp
  41f843:	pop    ds
  41f844:	pop    edi
  41f845:	pop    esi
  41f846:	out    dx,al
  41f847:	stos   DWORD PTR es:[edi],eax
  41f848:	repz ret 
  41f84a:	imul   esi,DWORD PTR [edi+0x4c29205f],0xffffffcc
  41f851:	fsubr  QWORD PTR [edx+esi*1+0x2d]
  41f855:	neg    BYTE PTR [edi]
  41f857:	jbe    0x41f7ef
  41f859:	addr16 xor eax,0xcb7925c8
  41f85f:	test   eax,0x3cb541e7
  41f864:	addr16 repz rcl edi,cl
  41f868:	ret    0x268b
  41f86b:	(bad)  
  41f86c:	xchg   edx,eax
  41f86d:	loop   0x41f7f6
  41f86f:	jb     0x41f88c
  41f871:	fwait
  41f872:	sbb    ch,BYTE PTR [edx+esi*4+0x4e28b6ef]
  41f879:	sub    eax,0xb19cfa33
  41f87e:	xor    ebp,edx
  41f880:	retf   
  41f881:	loop   0x41f8a5
  41f883:	sub    eax,0x5b8aaf51
  41f888:	pop    ds
  41f889:	daa    
  41f88a:	popf   
  41f88b:	push   ds
  41f88c:	or     dl,dh
  41f88e:	loope  0x41f8ed
  41f890:	xchg   edx,eax
  41f891:	xor    DWORD PTR [edx+esi*4-0x69707c81],ebx
  41f898:	inc    ebx
  41f899:	mov    edx,0x3ccd00c5
  41f89e:	(bad)  
  41f89f:	call   0x2764bd41
  41f8a4:	jbe    0x41f8c5
  41f8a6:	lods   al,BYTE PTR ds:[esi]
  41f8a7:	add    bl,BYTE PTR [edi+0x2260decd]
  41f8ad:	xor    eax,0xaecff32c
  41f8b2:	push   es
  41f8b3:	mov    eax,ds:0xe9598872
  41f8b8:	add    BYTE PTR [ecx+0x7d],bh
  41f8bb:	nop
  41f8bc:	inc    ebx
  41f8bd:	cdq    
  41f8be:	fs sti 
  41f8c0:	imul   ebp,DWORD PTR [edi+0x5a7fc308],0x303a6468
  41f8ca:	inc    edx
  41f8cb:	in     al,0xc9
  41f8cd:	mov    eax,ds:0xc1aba120
  41f8d2:	retf   0xd0ef
  41f8d5:	in     eax,dx
  41f8d6:	mov    bl,BYTE PTR [eax]
  41f8d8:	lea    esi,[edi-0x52d0ec52]
  41f8de:	fist   DWORD PTR [ebp-0x1e]
  41f8e1:	xor    DWORD PTR [esi+0x4b],esi
  41f8e4:	fist   WORD PTR ds:0xc37c886b
  41f8ea:	sub    cl,BYTE PTR [esp+edx*8-0x3a4b850]
  41f8f1:	or     DWORD PTR [edx],ebx
  41f8f3:	fstp   QWORD PTR [eax]
  41f8f5:	test   al,0xb5
  41f8f7:	sbb    al,BYTE PTR [edx]
  41f8f9:	xchg   edi,eax
  41f8fb:	jmp    0x654e:0xecfb8b65
  41f902:	and    eax,0x5a9e2f51
  41f907:	fist   DWORD PTR [edx+0x6f]
  41f90a:	add    al,0x9
  41f90c:	pop    edi
  41f90d:	repnz sbb ch,ah
  41f910:	out    0xdb,eax
  41f912:	lods   al,BYTE PTR ds:[esi]
  41f913:	mov    edx,0x2c86ce64
  41f918:	out    0xbb,al
  41f91a:	xchg   edx,eax
  41f91b:	out    dx,eax
  41f91c:	xchg   ecx,eax
  41f91d:	inc    eax
  41f91e:	fucom  st(1)
  41f920:	sub    al,BYTE PTR [edi]
  41f922:	mov    dh,0x2a
  41f924:	add    DWORD PTR [edi+0x1f],eax
  41f927:	adc    DWORD PTR [ebp-0x44],edx
  41f92a:	mov    WORD PTR [esi],?
  41f92c:	in     al,dx
  41f92d:	fidivr WORD PTR [edx+0x63]
  41f930:	jne    0x41f8b3
  41f932:	or     eax,0x2a81066b
  41f937:	pop    eax
  41f938:	pop    ss
  41f939:	sub    eax,DWORD PTR [edx+edi*2-0x3d]
  41f93d:	std    
  41f93e:	inc    edx
  41f93f:	loopne 0x41f8e8
  41f941:	loopne 0x41f9a1
  41f943:	je     0x41f9af
  41f945:	mov    DWORD PTR [eax],edi
  41f947:	and    edi,ebx
  41f949:	fnstenv [ebp+0x4e]
  41f94c:	and    eax,0xb98dd602
  41f951:	xchg   esp,eax
  41f952:	stc    
  41f953:	pushf  
  41f954:	mov    WORD PTR [ebp-0x4bdca4e1],?
  41f95a:	mov    DWORD PTR [ebp+0x36dc426c],esp
  41f960:	push   ds
  41f961:	add    BYTE PTR [ebp+0x4b01de29],0x29
  41f968:	jge    0x41f9af
  41f96a:	push   ecx
  41f96b:	mov    bh,0xef
  41f96d:	mov    dh,BYTE PTR [edx+eax*4+0x40]
  41f971:	pusha  
  41f972:	cdq    
  41f973:	xchg   esi,eax
  41f974:	retf   
  41f975:	outs   dx,BYTE PTR ds:[esi]
  41f976:	dec    edi
  41f977:	mov    eax,ds:0xce5faf7f
  41f97c:	shr    BYTE PTR [edx+0x2fb0771c],cl
  41f982:	or     eax,0xc0b36dd8
  41f987:	add    al,0xbf
  41f989:	mov    bl,0x5f
  41f98b:	loop   0x41f9e9
  41f98d:	jl     0x41f986
  41f98f:	das    
  41f990:	div    BYTE PTR [edi-0x494d9d1c]
  41f996:	mov    bh,0x1f
  41f998:	pushf  
  41f999:	push   eax
  41f99a:	cmp    bh,BYTE PTR [esi+ebx*4-0x4b]
  41f99e:	push   esi
  41f99f:	fsub   DWORD PTR [eax]
  41f9a1:	sub    al,0xc9
  41f9a3:	nop
  41f9a4:	outs   dx,DWORD PTR ds:[esi]
  41f9a5:	or     BYTE PTR [ebx],0xec
  41f9a8:	jmp    0xfb7313be
  41f9ad:	cmp    edx,DWORD PTR [eax]
  41f9af:	rcl    ebp,cl
  41f9b1:	dec    ebp
  41f9b2:	or     eax,0xd4879d4d
  41f9b7:	add    al,0x86
  41f9b9:	sub    ebp,ebx
  41f9bb:	jl     0x41f97e
  41f9bd:	dec    esi
  41f9be:	inc    ecx
  41f9bf:	cs cld 
  41f9c1:	out    0xd8,al
  41f9c3:	js     0x41f973
  41f9c5:	scas   eax,DWORD PTR es:[edi]
  41f9c6:	clc    
  41f9c7:	jbe    0x41f9b0
  41f9c9:	sti    
  41f9ca:	mov    cl,0x72
  41f9cc:	fsubrp st(0),st
  41f9ce:	nop
  41f9cf:	ret    0x266a
  41f9d2:	xchg   edx,eax
  41f9d3:	dec    esi
  41f9d4:	mov    ebx,0xfe0ab17c
  41f9d9:	fwait
  41f9da:	push   ebx
  41f9db:	fs sbb eax,ebp
  41f9de:	add    DWORD PTR [ecx],ecx
  41f9e0:	hlt    
  41f9e1:	inc    esp
  41f9e2:	lods   eax,DWORD PTR ds:[esi]
  41f9e3:	mov    BYTE PTR [edx-0x5],0x51
  41f9e7:	es add eax,0xd36a3bed
  41f9ed:	fdivr  st(3),st
  41f9ef:	add    bh,bh
  41f9f1:	lea    edx,[ecx+esi*8]
  41f9f4:	into   
  41f9f5:	ficomp DWORD PTR [eax-0x3b]
  41f9f8:	div    BYTE PTR [edi+0x56cd2117]
  41f9fe:	inc    esp
  41f9ff:	dec    ebp
  41fa00:	aam    0x21
  41fa02:	(bad)  
  41fa03:	mov    ch,0xa6
  41fa05:	sti    
  41fa06:	fwait
  41fa07:	push   eax
  41fa08:	xlat   BYTE PTR ds:[ebx]
  41fa09:	neg    DWORD PTR ss:[edx]
  41fa0c:	mov    ebx,ds
  41fa0e:	adc    eax,0xf23323ee
  41fa13:	xchg   ecx,eax
  41fa14:	shr    DWORD PTR [ebx],0xe8
  41fa17:	or     eax,0x8824765
  41fa1c:	sub    ch,BYTE PTR gs:[esp+esi*2]
  41fa20:	add    al,0xaa
  41fa22:	mov    ebp,0x93929317
  41fa27:	or     eax,0x65b0d6
  41fa2c:	dec    ebx
  41fa2d:	push   0x5
  41fa2f:	int3   
  41fa30:	push   ss
  41fa31:	sahf   
  41fa32:	sbb    al,BYTE PTR [esi]
  41fa34:	pop    esp
  41fa35:	mov    edx,0x28aebbfd
  41fa3a:	icebp  
  41fa3b:	add    cl,bh
  41fa3d:	(bad)  
  41fa3f:	test   cl,al
  41fa41:	cmp    eax,DWORD PTR [eax]
  41fa43:	mov    esi,0xeb1ff5e0
  41fa48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa49:	(bad)  
  41fa4a:	outs   dx,BYTE PTR ds:[esi]
  41fa4b:	aam    0xe6
  41fa4d:	dec    eax
  41fa4e:	repz into 
  41fa50:	pop    ecx
  41fa51:	dec    ebp
  41fa52:	div    DWORD PTR [esi+ebx*1]
  41fa55:	xchg   BYTE PTR [ecx+0x12],bh
  41fa58:	add    ch,BYTE PTR [edi+eiz*2+0x78493942]
  41fa5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa60:	pop    edi
  41fa61:	jg     0x41fa9d
  41fa63:	mov    cl,0xb5
  41fa65:	les    ebp,FWORD PTR [edi+edx*1]
  41fa68:	sub    ah,BYTE PTR [eax]
  41fa6a:	adc    eax,0xd30b487d
  41fa6f:	cs jge 0x41fa58
  41fa72:	sub    edx,ebx
  41fa74:	inc    edx
  41fa75:	int    0x8f
  41fa77:	mov    bh,0x4f
  41fa79:	sbb    al,0x9e
  41fa7b:	rol    BYTE PTR [ebp+0x1c],0xfc
  41fa7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa80:	daa    
  41fa81:	stc    
  41fa82:	jo     0x41fa19
  41fa84:	cmp    al,0xd
  41fa86:	pop    esp
  41fa87:	fwait
  41fa88:	into   
  41fa89:	or     edx,eax
  41fa8b:	ja     0x41fa4d
  41fa8d:	out    dx,al
  41fa8e:	lods   eax,DWORD PTR ds:[esi]
  41fa8f:	and    BYTE PTR [edx+0x7e0dea16],ah
  41fa95:	inc    ebx
  41fa96:	and    edi,DWORD PTR [esi-0x2e]
  41fa99:	pop    ss
  41fa9a:	mov    eax,ds:0xb8ef6542
  41fa9f:	int    0xf7
  41faa1:	sbb    BYTE PTR [edx],bl
  41faa3:	or     eax,0xbe16aab8
  41faa8:	jecxz  0x41fa9c
  41faaa:	ja     0x41fa73
  41faac:	mov    ah,0xa6
  41faae:	in     al,0xbe
  41fab0:	test   eax,0xfc79b583
  41fab5:	jp     0x41fb26
  41fab7:	nop
  41fab8:	repnz add eax,0x493718f2
  41fabe:	push   ds
  41fabf:	pusha  
  41fac0:	adc    BYTE PTR [eax+0x3ccec8af],ah
  41fac6:	loop   0x41fa5d
  41fac8:	in     eax,dx
  41fac9:	adc    al,0xff
  41facb:	loopne 0x41fa7d
  41facd:	repz and ah,BYTE PTR [edx+0x3e]
  41fad1:	outs   dx,BYTE PTR ds:[esi]
  41fad2:	jge    0x41fafc
  41fad4:	push   esi
  41fad5:	pop    ss
  41fad6:	cmp    BYTE PTR [edi],ch
  41fad8:	cli    
  41fad9:	dec    edi
  41fada:	mov    eax,DWORD PTR [eax-0x1984c725]
  41fae0:	lods   eax,DWORD PTR ds:[esi]
  41fae1:	and    eax,DWORD PTR [ebx+0x28]
  41fae4:	(bad)  
  41fae6:	jb     0x41fa84
  41fae8:	into   
  41fae9:	cmp    eax,0x426f1c9d
  41faee:	repnz cwde 
  41faf0:	inc    esi
  41faf1:	xchg   ebx,eax
  41faf2:	adc    cl,al
  41faf4:	repz shr DWORD PTR [edx],1
  41faf7:	mov    edx,0xb1828b40
  41fafc:	enter  0x2afc,0x65
  41fb00:	movzx  ebp,WORD PTR [edx]
  41fb03:	sbb    al,0xa3
  41fb05:	pop    eax
  41fb06:	scas   eax,DWORD PTR es:[edi]
  41fb07:	(bad)  
  41fb09:	cmp    eax,0x8fcd0794
  41fb0e:	and    ebx,0x79bf6c78
  41fb14:	xchg   edx,eax
  41fb15:	and    al,0x2f
  41fb17:	cmp    BYTE PTR [edi+0x6c],0x95
  41fb1b:	or     al,0xfe
  41fb1d:	retf   0x36be
  41fb20:	push   eax
  41fb21:	or     al,0xcd
  41fb23:	jl     0x41faff
  41fb25:	dec    DWORD PTR [edx]
  41fb27:	inc    esp
  41fb28:	jb     0x41fb9b
  41fb2a:	jns    0x41faca
  41fb2c:	aaa    
  41fb2d:	xchg   ecx,eax
  41fb2e:	add    esp,edx
  41fb30:	jnp    0x41fb3b
  41fb32:	(bad)  
  41fb33:	mov    esi,0x1c355592
  41fb38:	ror    BYTE PTR [edx+eax*4+0x4],0x59
  41fb3d:	jl     0x41fb7a
  41fb3f:	out    dx,eax
  41fb40:	and    ebx,ebx
  41fb42:	aam    0xa4
  41fb44:	and    ebx,eax
  41fb46:	pop    edx
  41fb47:	xchg   edi,eax
  41fb48:	stc    
  41fb49:	cmp    DWORD PTR [edi-0xd],eax
  41fb4c:	shl    esp,cl
  41fb4e:	call   0x64904db
  41fb53:	add    BYTE PTR [ecx],dl
  41fb55:	push   edx
  41fb56:	popf   
  41fb57:	pop    eax
  41fb58:	xor    BYTE PTR [ebx-0x37564f39],ah
  41fb5e:	and    DWORD PTR [ebx-0x48],eax
  41fb61:	cdq    
  41fb62:	or     eax,0xcc4f430e
  41fb67:	or     ch,BYTE PTR [esi+ecx*1+0x7b987c07]
  41fb6e:	add    ebp,ecx
  41fb70:	jmp    0x41fbad
  41fb72:	jge    0x41fbea
  41fb74:	popa   
  41fb75:	and    eax,0xc4356e9a
  41fb7a:	addr16 cdq 
  41fb7c:	into   
  41fb7d:	ret    0x54bb
  41fb80:	jmp    0x5ad3:0x36be4dd7
  41fb87:	and    BYTE PTR [ecx+ebp*8],ch
  41fb8a:	jp     0x41fbc4
  41fb8c:	mov    ebx,0xee343757
  41fb91:	sbb    ebp,eax
  41fb93:	adc    cl,BYTE PTR [edi+0x45]
  41fb96:	add    DWORD PTR [edi+ebp*4-0x36],ebp
  41fb9a:	cmp    DWORD PTR [ebx+0xdf050ff],0x34803c9e
  41fba4:	cmp    edi,ebp
  41fba6:	test   BYTE PTR ds:0xb43a519b,cl
  41fbac:	push   esi
  41fbad:	jmp    0x41fbef
  41fbaf:	inc    BYTE PTR [esp+ebp*2-0x5e]
  41fbb3:	adc    al,0xa9
  41fbb5:	inc    esp
  41fbb6:	push   edx
  41fbb7:	bound  ecx,QWORD PTR [ebx+ebp*4+0x145193be]
  41fbbe:	les    ebp,FWORD PTR [ecx-0xe2e9831]
  41fbc4:	add    edx,ebp
  41fbc6:	push   esi
  41fbc7:	loopne 0x41fc46
  41fbc9:	leave  
  41fbca:	mov    ?,WORD PTR [esi+0x12]
  41fbcd:	rcl    BYTE PTR ds:0xf6a2e7a3,cl
  41fbd3:	loopne 0x41fbce
  41fbd5:	xchg   esp,eax
  41fbd6:	fldenv [ecx-0x5c]
  41fbd9:	jnp    0x41fbcf
  41fbdb:	sub    DWORD PTR [edi-0x77536ed6],esi
  41fbe1:	out    0xb2,eax
  41fbe3:	mov    DWORD PTR [eax],0xeba1f36e
  41fbe9:	ret    0x55ce
  41fbec:	in     al,0x21
  41fbee:	mov    dl,BYTE PTR [edx-0x6e334514]
  41fbf4:	sbb    eax,0x227b2ed
  41fbf9:	dec    ecx
  41fbfa:	loop   0x41fc33
  41fbfc:	or     al,0x45
  41fbfe:	xor    bh,bl
  41fc00:	mov    ch,0xa1
  41fc02:	repnz or DWORD PTR [edx],ebx
  41fc05:	adc    al,0x37
  41fc07:	in     al,dx
  41fc08:	add    al,0x35
  41fc0a:	mov    ds:0x7d49ec95,al
  41fc0f:	rcl    BYTE PTR [esi-0x3f],cl
  41fc12:	das    
  41fc13:	jg     0xd51cd135
  41fc19:	out    0x18,eax
  41fc1b:	imul   ebx,ebx,0xffffffb0
  41fc1e:	fisttp DWORD PTR [edi-0x5820bf15]
  41fc24:	cs out 0x4,eax
  41fc27:	mov    al,ds:0xc2eca880
  41fc2c:	inc    eax
  41fc2d:	mov    al,ds:0xbe8a4289
  41fc32:	adc    ch,0x4a
  41fc35:	shl    BYTE PTR [esi+0x4a4b0ddf],0x94
  41fc3c:	lahf   
  41fc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc3e:	lds    esi,FWORD PTR [ebp+esi*4-0x196bd1a2]
  41fc45:	jmp    0x41fc80
  41fc47:	xor    edi,ebx
  41fc49:	mov    BYTE PTR [edx+0x70a1a07d],al
  41fc4f:	cli    
  41fc50:	pop    ebp
  41fc51:	adc    eax,esp
  41fc53:	sub    eax,0x1db9b3a8
  41fc58:	(bad)  
  41fc59:	mov    al,ds:0x55faaaf5
  41fc5e:	dec    esp
  41fc5f:	rcl    BYTE PTR ds:0x21a0bfae,0x9a
  41fc66:	cmp    BYTE PTR [ecx+0x19],cl
  41fc69:	mov    al,ds:0x60dd5336
  41fc6e:	in     eax,0x9b
  41fc70:	(bad)  
  41fc71:	or     BYTE PTR [ecx+0x1acd71c6],bh
  41fc77:	lds    ebp,FWORD PTR [ebp-0x4c23b5cc]
  41fc7d:	lahf   
  41fc7e:	popa   
  41fc7f:	and    al,0x4a
  41fc81:	xchg   BYTE PTR [edi],ah
  41fc83:	daa    
  41fc84:	push   ss
  41fc85:	xlat   BYTE PTR ds:[ebx]
  41fc86:	push   ebx
  41fc87:	ss xor eax,0xa99844c6
  41fc8d:	pop    edx
  41fc8e:	xchg   ecx,eax
  41fc8f:	mov    ds:0x32a9e0b7,eax
  41fc94:	sbb    esi,DWORD PTR [edx]
  41fc96:	add    bh,BYTE PTR ds:0x634e6a2
  41fc9c:	mov    ecx,0x5afee5fc
  41fca1:	sti    
  41fca2:	jge    0x41fc58
  41fca4:	and    ch,0xbb
  41fca7:	mov    ebp,0x9f92b99
  41fcac:	sahf   
  41fcad:	adc    eax,0xec4eba22
  41fcb2:	fs lock in eax,0xb2
  41fcb6:	(bad)  
  41fcb7:	mov    edi,0xa3a50158
  41fcbc:	push   eax
  41fcbd:	dec    edi
  41fcbe:	dec    edi
  41fcbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc1:	xor    dl,BYTE PTR [eax-0x63534d51]
  41fcc7:	add    eax,0xb5faf348
  41fccc:	lea    ecx,[ebp-0x3]
  41fccf:	push   ecx
  41fcd0:	ins    DWORD PTR es:[edi],dx
  41fcd1:	and    bl,ah
  41fcd3:	std    
  41fcd4:	lock jmp FWORD PTR [ecx]
  41fcd7:	mov    al,0x4f
  41fcd9:	mov    dl,0x57
  41fcdb:	xlat   BYTE PTR ds:[ebx]
  41fcdc:	add    eax,0xb161b7b2
  41fce1:	out    0xea,eax
  41fce3:	sbb    ebp,DWORD PTR [ebx+0x65e51ef3]
  41fce9:	mul    DWORD PTR [ebp+eax*2+0xf5a89c2]
  41fcf0:	imul   esi,DWORD PTR [esi],0x6d
  41fcf3:	stos   BYTE PTR es:[edi],al
  41fcf4:	push   0xffffff81
  41fcf6:	pusha  
  41fcf7:	cmp    al,0xce
  41fcf9:	mov    ecx,0x25f66c7
  41fcfe:	pop    ecx
  41fcff:	xchg   edi,eax
  41fd00:	xor    al,0xaa
  41fd02:	imul   ecx,DWORD PTR [ecx+0x75],0x415b4fed
  41fd09:	xor    esp,0xb81b97e5
  41fd0f:	push   ds
  41fd10:	push   eax
  41fd11:	mov    eax,ds:0x64900321
  41fd16:	cmc    
  41fd17:	or     eax,0xde1f4882
  41fd1c:	or     eax,0xa391b79e
  41fd21:	xchg   ebx,eax
  41fd22:	add    edi,esp
  41fd24:	cs fwait
  41fd26:	push   edx
  41fd27:	and    BYTE PTR [ecx-0x6dd82c26],0xbf
  41fd2e:	or     edx,DWORD PTR [edi+0x42]
  41fd31:	pop    edx
  41fd32:	add    edx,edx
  41fd34:	(bad)  
  41fd35:	cmp    BYTE PTR [edx+0x7c437be],bh
  41fd3b:	pop    ecx
  41fd3c:	sbb    dh,BYTE PTR [eax]
  41fd3e:	stos   DWORD PTR es:[edi],eax
  41fd3f:	xchg   ebp,eax
  41fd40:	fmul   DWORD PTR [edx-0x53a10dbc]
  41fd46:	push   cs
  41fd47:	mov    dl,0x5
  41fd49:	mov    ds:0x42170527,al
  41fd4e:	daa    
  41fd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd50:	or     ch,dh
  41fd52:	out    0xd0,al
  41fd54:	and    ah,BYTE PTR [esi-0x4c7cef54]
  41fd5a:	std    
  41fd5b:	fwait
  41fd5c:	out    dx,al
  41fd5d:	sbb    edi,DWORD PTR [esp+edi*4-0x70]
  41fd61:	int3   
  41fd62:	cmc    
  41fd63:	out    0x2b,al
  41fd65:	(bad)  
  41fd66:	fdivr  st(3),st
  41fd68:	push   ebx
  41fd69:	sar    DWORD PTR fs:[edi],1
  41fd6c:	aad    0xc4
  41fd6e:	test   BYTE PTR [esi-0x317fcd3f],cl
  41fd74:	jmp    DWORD PTR [edi-0x24]
  41fd77:	(bad)  
  41fd78:	fiadd  DWORD PTR ds:0x5ead2ec
  41fd7e:	add    edx,eax
  41fd80:	int3   
  41fd81:	pop    ds
  41fd82:	xlat   BYTE PTR ds:[ebx]
  41fd83:	xchg   DWORD PTR [esi+0x2485ad2f],esi
  41fd89:	popa   
  41fd8a:	mov    dl,bl
  41fd8c:	sbb    edi,DWORD PTR [esi-0x5f239dd5]
  41fd92:	int    0xd2
  41fd94:	cmp    eax,0xaca8e70e
  41fd99:	mov    ds:0xb512118f,al
  41fd9e:	fs jo  0x41fd91
  41fda1:	sbb    cl,ah
  41fda3:	ret    
  41fda4:	test   DWORD PTR [ecx+edx*4],edi
  41fda7:	pop    esi
  41fda8:	push   edx
  41fda9:	pushf  
  41fdaa:	aam    0x15
  41fdac:	and    ch,cl
  41fdae:	retf   
  41fdaf:	ins    DWORD PTR es:[edi],dx
  41fdb0:	arpl   WORD PTR [ebx-0x7e5aee78],sp
  41fdb6:	std    
  41fdb7:	jge    0x41fe24
  41fdb9:	mov    ecx,0x91b621a1
  41fdbe:	sub    eax,DWORD PTR [ecx]
  41fdc0:	cmp    bl,bh
  41fdc2:	xor    eax,ebp
  41fdc4:	and    eax,DWORD PTR [edx-0x52f2c633]
  41fdca:	sbb    BYTE PTR [ecx+0x70],dh
  41fdcd:	cli    
  41fdce:	adc    eax,0xc224260c
  41fdd3:	shr    DWORD PTR [edx+0x732ac366],cl
  41fdd9:	inc    ebp
  41fdda:	je     0x41fd69
  41fddc:	rcr    BYTE PTR [eax+0x1e524024],1
  41fde2:	mov    esp,0xa3261d6
  41fde7:	jno    0x41fde0
  41fde9:	pop    ebx
  41fdea:	enter  0xd3f,0x8f
  41fdee:	(bad)  
  41fdef:	into   
  41fdf0:	cmp    DWORD PTR [edx],ebx
  41fdf2:	adc    bl,BYTE PTR ds:[esp+eax*1+0x27]
  41fdf7:	pop    ss
  41fdf8:	mov    bh,0xb3
  41fdfa:	popf   
  41fdfb:	mov    ch,bl
  41fdfd:	sub    cl,ah
  41fdff:	imul   ebp,DWORD PTR [edi-0x4e],0x3
  41fe03:	mov    DWORD PTR [eax-0x2ef77f0b],esi
  41fe09:	(bad)  
  41fe0a:	jecxz  0x41fe4c
  41fe0c:	pop    ebx
  41fe0d:	js     0x41fe84
  41fe0f:	and    dh,bh
  41fe11:	ja     0x41fd96
  41fe13:	or     bh,BYTE PTR [ebx+esi*8]
  41fe16:	outs   dx,BYTE PTR ds:[esi]
  41fe17:	shl    DWORD PTR [edx],0x88
  41fe1a:	arpl   WORD PTR ds:0x50b57930,dx
  41fe20:	cmp    al,0xd3
  41fe22:	dec    esi
  41fe23:	xchg   edi,eax
  41fe24:	push   0xb7bed9a
  41fe29:	add    al,0x55
  41fe2b:	outs   dx,BYTE PTR ds:[esi]
  41fe2c:	mov    esi,0xfaa81770
  41fe31:	inc    esi
  41fe32:	dec    edi
  41fe33:	xchg   ebp,eax
  41fe34:	or     esi,DWORD PTR [esp+eax*4-0x7614ae56]
  41fe3b:	inc    edi
  41fe3d:	pop    ecx
  41fe3e:	(bad)  
  41fe3f:	outs   dx,BYTE PTR ds:[esi]
  41fe40:	sahf   
  41fe41:	in     eax,dx
  41fe42:	stos   DWORD PTR es:[edi],eax
  41fe43:	loop   0x41fe92
  41fe45:	fild   DWORD PTR [edi]
  41fe47:	fimul  DWORD PTR [esi-0x1b]
  41fe4a:	fs mov dh,0xb4
  41fe4d:	test   eax,0xa16acbc2
  41fe52:	int3   
  41fe53:	loope  0x41fe87
  41fe55:	adc    ah,BYTE PTR [esi-0x54]
  41fe58:	outs   dx,BYTE PTR ds:[esi]
  41fe59:	or     al,0x83
  41fe5b:	test   al,0x84
  41fe5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe5e:	xchg   esi,eax
  41fe5f:	adc    al,0x79
  41fe61:	mov    esp,0x3249c3e1
  41fe66:	inc    ecx
  41fe67:	addr16 call 0xe8f8:0x77574613
  41fe6f:	test   BYTE PTR [ebx+0x12a9b3d],0xf7
  41fe76:	and    esi,DWORD PTR [edi-0x5]
  41fe79:	call   FWORD PTR [edx+0x34]
  41fe7c:	jecxz  0x41fe78
  41fe7e:	sub    BYTE PTR [ebx-0x76],bl
  41fe81:	mov    bh,0x73
  41fe83:	(bad)  
  41fe85:	pop    eax
  41fe86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe87:	sbb    BYTE PTR [eax],ch
  41fe89:	leave  
  41fe8a:	adc    eax,0x46c99f2e
  41fe8f:	pop    es
  41fe90:	sbb    al,0xc0
  41fe92:	mov    edx,0x812dc32c
  41fe97:	lds    ecx,FWORD PTR [edx+0x6]
  41fe9a:	cdq    
  41fe9b:	dec    edx
  41fe9c:	out    0xa9,eax
  41fe9e:	xchg   BYTE PTR [esi-0x47d1d5ab],dl
  41fea4:	cmove  edx,DWORD PTR [esi-0x2736d10e]
  41feab:	dec    edi
  41feac:	popa   
  41fead:	(bad)  
  41feaf:	aam    0xb9
  41feb1:	sbb    al,0x3b
  41feb3:	xchg   DWORD PTR [edx+0x7552a9da],ebp
  41feb9:	dec    esp
  41feba:	push   edi
  41febb:	imul   edx,DWORD PTR [edx+0x15369d6e],0xa57ca400
  41fec5:	repnz mov DWORD PTR [eax+0x5f],ebx
  41fec9:	ror    DWORD PTR [edx+0x40],cl
  41fecc:	sub    DWORD PTR [ebx],esp
  41fece:	adc    al,0x57
  41fed0:	push   ebx
  41fed1:	push   ecx
  41fed2:	or     edi,DWORD PTR [eax+0x18]
  41fed5:	jecxz  0x41fecc
  41fed7:	inc    ebp
  41fed8:	out    0xb2,al
  41feda:	mov    dl,0x8f
  41fedc:	and    eax,0x9f2d873
  41fee1:	jo     0x41fe8b
  41fee3:	adc    eax,0x30a7332a
  41fee8:	repz popa 
  41feea:	fdiv   st,st(4)
  41feec:	mov    ss,ebp
  41feee:	mov    bh,0x4b
  41fef0:	cld    
  41fef1:	jmp    0xa813:0x7c71c6ce
  41fef8:	hlt    
  41fef9:	pop    edx
  41fefa:	shl    DWORD PTR [ebp+eiz*8-0x1a34ee57],cl
  41ff01:	mov    ds:0xaf599c03,al
  41ff06:	test   al,0x95
  41ff08:	mov    ds,WORD PTR [edx-0x65]
  41ff0b:	into   
  41ff0c:	(bad)  
  41ff0d:	push   ebx
  41ff0e:	jg     0x41ff09
  41ff10:	xchg   esp,eax
  41ff11:	mov    esp,0x63b63381
  41ff16:	and    eax,0xdb840d08
  41ff1b:	stos   BYTE PTR es:[edi],al
  41ff1c:	scas   al,BYTE PTR es:[edi]
  41ff1d:	shr    BYTE PTR [eax],0xe4
  41ff20:	enter  0xc3,0x1f
  41ff24:	xor    al,0x4f
  41ff26:	jp     0x41feff
  41ff28:	test   al,0x79
  41ff2a:	cmp    DWORD PTR [ebx],edi
  41ff2c:	inc    ebp
  41ff2d:	scas   eax,DWORD PTR es:[edi]
  41ff2e:	xchg   DWORD PTR [edi],ebx
  41ff30:	jge    0x41ff05
  41ff32:	rcr    WORD PTR [edx+edi*4-0x64578f11],0xf9
  41ff3b:	and    eax,esi
  41ff3d:	std    
  41ff3e:	test   DWORD PTR [ebx],0xf6854222
  41ff44:	mov    cl,0xa2
  41ff46:	js     0x41ff38
  41ff48:	movzx  esi,WORD PTR [edx]
  41ff4b:	push   ebp
  41ff4c:	addr16 mov ebp,ebp
  41ff4f:	push   ecx
  41ff50:	and    BYTE PTR [ebp+0x238344f4],al
  41ff56:	jmp    0x8790:0x7ff6e613
  41ff5d:	out    dx,al
  41ff5e:	lahf   
  41ff5f:	add    esi,DWORD PTR [ecx]
  41ff61:	int3   
  41ff62:	add    eax,0xed9fe216
  41ff67:	sub    DWORD PTR [eax+0x1d331bb1],esp
  41ff6d:	cmp    eax,0xd37f20ab
  41ff72:	ins    DWORD PTR es:[edi],dx
  41ff73:	push   esi
  41ff74:	mov    esp,DWORD PTR [edx-0x77ece0ad]
  41ff7a:	les    ecx,FWORD PTR [ecx]
  41ff7c:	outs   dx,BYTE PTR ds:[esi]
  41ff7d:	mov    esp,0xc5620986
  41ff82:	mov    ds:0x206d6255,eax
  41ff87:	push   ecx
  41ff88:	int3   
  41ff89:	mov    eax,DWORD PTR [edx-0x6d004d78]
  41ff8f:	xchg   ebp,eax
  41ff90:	inc    ebp
  41ff91:	add    edi,0xffffffb8
  41ff94:	leave  
  41ff95:	stos   DWORD PTR es:[edi],eax
  41ff96:	mov    ds:0xd6222772,eax
  41ff9b:	pop    edi
  41ff9c:	xlat   BYTE PTR ds:[ebx]
  41ff9d:	lods   al,BYTE PTR ds:[esi]
  41ff9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff9f:	mov    ds:0xc58c863b,eax
  41ffa4:	ror    BYTE PTR [ebp-0x5d728d79],1
  41ffaa:	shl    DWORD PTR [ebp+0x269fdec2],0x5e
  41ffb1:	inc    ebp
  41ffb2:	jne    0x420015
  41ffb4:	jo     0x41ff39
  41ffb6:	nop
  41ffb7:	cmp    DWORD PTR [eax],ecx
  41ffb9:	cmp    al,BYTE PTR [edx]
  41ffbb:	ret    
  41ffbc:	push   es
  41ffbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffbe:	and    bh,BYTE PTR [eax-0x366754fb]
  41ffc4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41ffc6:	sbb    al,0xf6
  41ffc8:	por    mm6,QWORD PTR [ebp-0x80]
  41ffcc:	cs mov cl,0x5e
  41ffcf:	pop    ecx
  41ffd0:	hlt    
  41ffd1:	pop    ecx
  41ffd2:	pop    ss
  41ffd3:	ja     0x41ff9a
  41ffd5:	dec    edx
  41ffd6:	sub    al,0x65
  41ffd8:	jae    0x41ffc2
  41ffda:	mov    al,ds:0x669e0696
  41ffdf:	xchg   edi,eax
  41ffe0:	jns    0x41ff6c
  41ffe2:	int    0x11
  41ffe4:	cmc    
  41ffe5:	xor    al,0x85
  41ffe7:	xlat   BYTE PTR ds:[ebx]
  41ffe8:	inc    ebp
  41ffe9:	int    0x3d
  41ffeb:	jmp    FWORD PTR [edx-0x74]
  41ffee:	push   0xfffffff6
  41fff0:	adc    bl,BYTE PTR [ecx]
  41fff2:	adc    ebp,DWORD PTR [ebx-0x58f94ac6]
  41fff8:	ret    0x61ed
  41fffb:	sti    
  41fffc:	ficom  DWORD PTR [esi-0x6b]
  41ffff:	sar    DWORD PTR [ecx+0x6150ff62],cl
  420005:	and    DWORD PTR [ebp+0x5ef5ff6c],0x1d
  42000c:	out    0x5e,al
  42000e:	pop    eax
  42000f:	gs pusha 
  420011:	push   edi
  420012:	xor    DWORD PTR [ebx-0x2b],ecx
  420015:	adc    DWORD PTR [eax+eax*1-0x6f],0x2e
  42001a:	test   eax,0x8ed12cfb
  420020:	mov    ah,0x24
  420022:	or     al,BYTE PTR [esi+0x636926bb]
  420028:	outs   dx,BYTE PTR ds:[esi]
  420029:	cli    
  42002a:	arpl   WORD PTR [edx],sp
  42002c:	or     al,0x1e
  42002e:	fdivr  st,st(3)
  420030:	fmul   st(2),st
  420032:	mov    ah,BYTE PTR [ebx+0x17]
  420035:	rol    esi,0x2a
  420038:	dec    ecx
  420039:	inc    esi
  42003a:	xor    ah,bh
  42003c:	popa   
  42003d:	lods   al,BYTE PTR ds:[esi]
  42003e:	push   es
  42003f:	bound  ecx,QWORD PTR [ebx-0xe]
  420042:	in     al,dx
  420043:	ret    0xf501
  420046:	inc    ebp
  420047:	mov    eax,0x35ca3da2
  42004c:	sub    BYTE PTR [eax-0x501fdb8a],0x58
  420053:	lods   al,BYTE PTR ds:[esi]
  420054:	jnp    0x42001b
  420056:	add    al,0x70
  420058:	jle    0x41ffda
  42005a:	sti    
  42005b:	test   al,0x8c
  42005d:	push   es
  42005e:	stos   BYTE PTR es:[edi],al
  42005f:	lock sbb eax,0x4ea41bbe
  420065:	cli    
  420066:	std    
  420067:	pop    ds
  420068:	stc    
  420069:	out    dx,eax
  42006a:	pop    eax
  42006b:	fcom   QWORD PTR [eax-0x75]
  42006e:	rcr    DWORD PTR [eax],0xab
  420071:	gs div DWORD PTR fs:[ebp+0x30]
  420076:	out    dx,al
  420077:	adc    al,0x69
  420079:	(bad)  
  42007a:	(bad)  
  42007b:	cmp    eax,0x182e1ae5
  420080:	inc    ebp
  420081:	(bad)  
  420082:	pop    edi
  420083:	mov    al,0x5e
  420085:	shl    edx,cl
  420087:	jbe    0x42005c
  420089:	out    dx,eax
  42008a:	loop   0x420108
  42008c:	es mov dl,0xaa
  42008f:	jl     0x4200fc
  420091:	je     0x420111
  420093:	xchg   edi,eax
  420094:	hlt    
  420095:	pop    ebp
  420096:	push   es
  420097:	les    eax,FWORD PTR [ebx+0x53]
  42009a:	rcr    DWORD PTR [edx+0x381eaf2b],1
  4200a0:	sub    al,0xa
  4200a2:	ja     0x42007b
  4200a4:	pop    esi
  4200a5:	mov    ds:0x9bc40408,al
  4200aa:	mov    ecx,0x16fa197f
  4200af:	mov    ah,BYTE PTR [ecx-0x24d31544]
  4200b5:	jge    0x42004a
  4200b7:	imul   eax,DWORD PTR [ebx],0xffffffce
  4200ba:	sbb    al,dl
  4200bc:	sahf   
  4200bd:	jmp    0x420122
  4200bf:	shr    DWORD PTR [ebx],0x40
  4200c2:	add    bh,BYTE PTR [eax+ecx*8]
  4200c5:	sub    ebx,eax
  4200c7:	or     BYTE PTR [edx],dh
  4200c9:	push   edx
  4200ca:	mov    esp,0x2177951e
  4200cf:	add    ebp,ecx
  4200d1:	or     dl,ch
  4200d3:	cmp    DWORD PTR ds:0x57fdf938,edi
  4200d9:	arpl   WORD PTR [edx-0x14caceee],bx
  4200df:	loop   0x420140
  4200e1:	lods   al,BYTE PTR ds:[esi]
  4200e2:	jae    0x42006c
  4200e4:	mov    bl,0xeb
  4200e6:	dec    esp
  4200e7:	test   DWORD PTR [eax+0x59579764],0x9a37626b
  4200f1:	sbb    ecx,ebp
  4200f3:	lods   eax,DWORD PTR ds:[esi]
  4200f4:	aas    
  4200f5:	loope  0x420121
  4200f7:	cmp    ch,BYTE PTR [edx+0x5b179685]
  4200fd:	xor    DWORD PTR [eax],ebp
  4200ff:	pusha  
  420100:	cs iret 
  420102:	push   0xb264f2cb
  420107:	call   0x50d3:0xe962223b
  42010e:	jo     0x420160
  420110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420111:	push   0x25
  420113:	mov    ah,0x17
  420115:	jmp    0x16438be
  42011a:	xor    eax,0xd82add22
  42011f:	lahf   
  420120:	es out 0x65,eax
  420123:	(bad)  
  420124:	xchg   edx,eax
  420125:	adc    ch,BYTE PTR [edi]
  420127:	pop    ebp
  420128:	lock dec edi
  42012a:	scas   eax,DWORD PTR es:[edi]
  42012b:	push   ecx
  42012c:	add    ebx,DWORD PTR [ebx+0x73e5fbbf]
  420132:	xor    esp,DWORD PTR [eax]
  420134:	sub    BYTE PTR [eax+0x77],ah
  420137:	add    BYTE PTR [edi-0x780bd68a],bh
  42013d:	inc    esi
  42013e:	mov    ebp,?
  420140:	inc    esi
  420141:	aas    
  420142:	pushf  
  420143:	mov    WORD PTR [ebp+0x6f],ds
  420146:	mov    edx,0xbb329689
  42014b:	pusha  
  42014c:	mov    es,esp
  42014e:	push   ecx
  42014f:	les    ecx,FWORD PTR [ebx+0x1e]
  420152:	sub    BYTE PTR [edx],bh
  420154:	xchg   ebx,eax
  420155:	jb     0x420151
  420157:	pop    eax
  420158:	mov    edi,0x8b9f9ff3
  42015d:	inc    esi
  42015e:	dec    edx
  42015f:	test   BYTE PTR [ecx+0x25],0x53
  420163:	lds    esi,FWORD PTR ds:0xb4071470
  420169:	jno    0x4201d8
  42016b:	inc    edx
  42016c:	adc    al,0x6e
  42016e:	iret   
  42016f:	jno    0x42013d
  420171:	ja     0x4201f2
  420173:	mov    BYTE PTR [edi+0x52072b88],al
  420179:	mov    edx,0x269e614b
  42017e:	adc    al,0x46
  420180:	add    DWORD PTR [edi+0x6222d867],edx
  420186:	inc    eax
  420187:	shl    DWORD PTR [ebx-0x1f6e7eb2],1
  42018d:	arpl   WORD PTR [ebp-0x38b625b2],cx
  420193:	dec    eax
  420194:	fcom   DWORD PTR [esi+0x17a7a393]
  42019a:	inc    esp
  42019b:	(bad)  
  42019c:	imul   BYTE PTR [edx+edx*2+0x6f]
  4201a0:	stc    
  4201a1:	pop    ecx
  4201a2:	sub    cl,BYTE PTR [eax+edi*8-0x75]
  4201a6:	pushf  
  4201a7:	xor    edi,ecx
  4201a9:	fcmovne st,st(3)
  4201ab:	add    BYTE PTR [edi],dl
  4201ad:	js     0x420183
  4201af:	cs in  al,0x88
  4201b2:	clc    
  4201b3:	sahf   
  4201b4:	das    
  4201b5:	out    0xa4,eax
  4201b7:	jae    0x420184
  4201b9:	adc    bh,BYTE PTR [esi-0xd0caae5]
  4201bf:	(bad)  
  4201c0:	(bad)  [edx+eiz*4]
  4201c3:	sbb    BYTE PTR fs:[esp+ebx*4-0x7f],ah
  4201c8:	shl    BYTE PTR [ebp+0x71a691df],cl
  4201ce:	sub    al,BYTE PTR [edi-0x6da4873a]
  4201d4:	jg     0x42020e
  4201d6:	vmaxsd xmm7,xmm7,xmm0
  4201da:	pop    ecx
  4201db:	inc    DWORD PTR ds:0x8224ae63
  4201e1:	sub    al,0x1f
  4201e3:	pop    ecx
  4201e4:	imul   DWORD PTR [ebx]
  4201e6:	sbb    bl,BYTE PTR [eax+0x4b7d2492]
  4201ec:	retf   0x2486
  4201ef:	add    eax,0xc88b908c
  4201f4:	jmp    0xd7548609
  4201f9:	jae    0x4201d8
  4201fb:	fbstp  TBYTE PTR [ebx]
  4201fd:	not    ecx
  4201ff:	lods   al,BYTE PTR ds:[esi]
  420200:	push   ebx
  420201:	and    DWORD PTR [ecx],ebx
  420203:	pusha  
  420204:	xor    DWORD PTR [ebx+0x76d72898],esi
  42020a:	push   ebp
  42020b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42020c:	lahf   
  42020d:	scas   eax,DWORD PTR es:[edi]
  42020e:	fld    TBYTE PTR [ebx+ebx*8+0x60]
  420212:	clc    
  420213:	ins    BYTE PTR es:[edi],dx
  420214:	retf   
  420215:	sbb    eax,ebp
  420217:	push   edi
  420218:	mov    esi,0x4265d5ae
  42021d:	sbb    al,0xb7
  42021f:	and    esi,DWORD PTR [ecx+0x6cd485b1]
  420225:	(bad)  
  420226:	popf   
  420227:	nop
  420228:	inc    edx
  420229:	std    
  42022a:	add    dh,BYTE PTR [eax+0x1]
  42022d:	mov    edx,0xe254f3d6
  420232:	fld    QWORD PTR [ecx+0x7d]
  420235:	repnz mov al,0x80
  420238:	retf   
  420239:	inc    edi
  42023a:	pop    es
  42023b:	nop
  42023c:	inc    eax
  42023d:	or     al,0x77
  42023f:	mov    al,ds:0x2b91ace7
  420244:	mov    ch,0x3c
  420246:	fwait
  420247:	add    dh,ch
  420249:	push   edi
  42024a:	adc    esi,esp
  42024c:	stos   BYTE PTR es:[edi],al
  42024d:	test   eax,0xdf56bf58
  420252:	fisttp WORD PTR ds:0x9987fc3d
  420258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420259:	mov    bl,0x56
  42025b:	mov    cl,0x88
  42025d:	cmp    eax,ebp
  42025f:	xchg   DWORD PTR [esi],ebp
  420261:	jge    0x4202da
  420263:	cmp    bl,BYTE PTR [eax]
  420265:	xor    dl,bh
  420267:	cmc    
  420268:	xchg   edx,eax
  420269:	xchg   ebp,eax
  42026a:	xchg   edx,eax
  42026b:	jns    0x420261
  42026d:	mov    fs,WORD PTR [edi-0x18]
  420270:	push   esp
  420271:	int3   
  420272:	lds    ebx,FWORD PTR [eax]
  420274:	arpl   di,ax
  420276:	add    ah,ch
  420278:	mov    ah,0xf3
  42027a:	repz into 
  42027c:	xor    eax,0xa3c6504
  420281:	dec    esp
  420282:	xchg   ecx,eax
  420283:	pop    edi
  420284:	fsubr  st,st(5)
  420286:	out    0xed,eax
  420288:	adc    eax,0x2d9ee9f
  42028d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42028e:	repz fsubp st(4),st
  420291:	mov    BYTE PTR [ebx+0x77],0xd6
  420295:	call   0xf4e2:0xeac82d75
  42029c:	adc    DWORD PTR [eax-0x5bcc161a],edx
  4202a2:	loope  0x420299
  4202a4:	popf   
  4202a5:	mov    esi,0x10c261e0
  4202aa:	xchg   esi,eax
  4202ab:	cdq    
  4202ac:	sub    esp,DWORD PTR [eax-0x6a]
  4202af:	add    BYTE PTR [ecx-0x5a6be6ef],ch
  4202b5:	pusha  
  4202b6:	inc    esi
  4202b7:	enter  0xac9,0x76
  4202bb:	push   ss
  4202bc:	mov    ds:0xde523ad3,al
  4202c1:	cld    
  4202c2:	jp     0x420248
  4202c4:	sbb    esp,DWORD PTR [ebp+0x55]
  4202c7:	dec    DWORD PTR [ebx+0x4fc2c390]
  4202cd:	nop
  4202ce:	xchg   ecx,eax
  4202cf:	lods   eax,DWORD PTR ds:[esi]
  4202d0:	mov    DWORD PTR [edi],esp
  4202d2:	push   ebp
  4202d3:	xchg   DWORD PTR [ebp-0xa],edx
  4202d6:	push   edx
  4202d7:	xchg   edi,eax
  4202d8:	icebp  
  4202d9:	xor    al,0x28
  4202db:	adc    dh,BYTE PTR ds:0x951a66ca
  4202e1:	lods   al,BYTE PTR ds:[esi]
  4202e3:	push   eax
  4202e4:	xor    al,0x63
  4202e6:	leave  
  4202e7:	stos   BYTE PTR es:[edi],al
  4202e8:	in     eax,dx
  4202e9:	cmp    DWORD PTR [eax-0x5a],0xffffffcc
  4202ed:	and    eax,DWORD PTR [edx]
  4202ef:	lods   eax,DWORD PTR ds:[esi]
  4202f0:	sbb    edx,DWORD PTR [edx-0xaf929f4]
  4202f6:	and    DWORD PTR [ebx-0x1c],eax
  4202f9:	add    al,0xf1
  4202fb:	gs push es
  4202fd:	pop    eax
  4202fe:	and    BYTE PTR [edx+ebp*2+0x1a243210],0x7f
  420306:	mov    eax,ds:0x6c6d3378
  42030b:	leave  
  42030c:	xchg   DWORD PTR [edi],ebp
  42030e:	pop    ebp
  42030f:	push   edx
  420310:	fwait
  420311:	inc    ebx
  420312:	mov    al,0x87
  420314:	fcmovb st,st(3)
  420316:	mov    ds:0x6233a9aa,eax
  42031b:	sar    DWORD PTR [edi-0x34be8c91],0xf7
  420322:	lods   eax,DWORD PTR es:[esi]
  420324:	cli    
  420325:	mov    dh,0xa7
  420327:	fisubr WORD PTR [edi]
  420329:	jge    0x4202bf
  42032b:	aad    0x76
  42032d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42032e:	xchg   BYTE PTR [esi+0x6104632d],al
  420334:	pop    ss
  420335:	fnstcw WORD PTR [eax-0x2422d0f1]
  42033b:	jp     0x420312
  42033d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42033e:	pop    esp
  42033f:	sub    DWORD PTR [ebp-0x43],esp
  420342:	fcomp  DWORD PTR [esi-0x2b0291ad]
  420348:	gs xchg ebp,eax
  42034a:	ds data16 mov cl,0x76
  42034e:	test   BYTE PTR [esi],dh
  420350:	and    eax,DWORD PTR [edx-0x4f]
  420353:	lods   al,BYTE PTR ds:[esi]
  420354:	or     al,0x6d
  420356:	call   0x638e:0x5205cb98
  42035d:	hlt    
  42035e:	inc    eax
  42035f:	sbb    bl,BYTE PTR [edx+edx*4-0x43]
  420363:	(bad)  
  420364:	pop    ebp
  420365:	neg    BYTE PTR [edi+edi*4-0x667bd7a8]
  42036c:	enter  0x86ed,0x87
  420370:	ds inc ecx
  420372:	mov    ecx,0x7930b3c8
  420377:	test   DWORD PTR [ebx],ecx
  420379:	push   edx
  42037a:	(bad)  
  42037b:	in     al,dx
  42037c:	mov    edx,fs
  42037e:	push   0x4fa9400d
  420383:	or     ah,BYTE PTR [edx+0x41]
  420386:	jecxz  0x420385
  420388:	in     eax,dx
  420389:	pop    esi
  42038a:	sub    dh,ah
  42038c:	loopne 0x4203e1
  42038e:	push   cs
  42038f:	mov    DWORD PTR ds:0xdfb90cc9,eax
  420395:	lods   al,BYTE PTR ds:[esi]
  420396:	push   ss
  420397:	and    bl,dh
  420399:	dec    edi
  42039a:	mov    esp,0xe5eea5ea
  42039f:	imul   eax,DWORD PTR [esp+ecx*8+0x77],0xffffff9a
  4203a4:	add    bh,BYTE PTR [esi]
  4203a6:	in     eax,0x13
  4203a8:	jg     0x4203ab
  4203aa:	test   DWORD PTR [edx-0x54a493c8],ebx
  4203b0:	inc    edi
  4203b1:	push   edx
  4203b2:	data16 (bad) 
  4203b5:	les    ecx,FWORD PTR [edi]
  4203b7:	push   ds
  4203b8:	cmp    DWORD PTR [edi+0x75376959],ebx
  4203be:	xchg   BYTE PTR [edi+0x49],bl
  4203c1:	or     esi,DWORD PTR [ebp-0x23cac9f7]
  4203c7:	mov    edx,0xdfb2d111
  4203cc:	push   edx
  4203cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203ce:	(bad)  
  4203cf:	push   ebp
  4203d0:	xor    DWORD PTR [edi+0x5d],esp
  4203d3:	xor    BYTE PTR [edi-0x1f],ah
  4203d6:	inc    ecx
  4203d7:	mov    dl,ah
  4203d9:	adc    al,0x6e
  4203db:	test   al,0xbc
  4203dd:	aam    0xde
  4203df:	mov    esi,0xde8deef3
  4203e4:	sub    BYTE PTR [edi-0x7a],0x8b
  4203e8:	test   eax,0x32cf6243
  4203ed:	xchg   DWORD PTR [ebx],edi
  4203ef:	pop    es
  4203f0:	and    DWORD PTR [edx+0x48458bb4],ebp
  4203f6:	imul   edx,ecx,0xd37dd674
  4203fc:	adc    BYTE PTR ds:0x13fe871,cl
  420402:	mov    ch,0xb8
  420404:	and    eax,0x798ec726
  420409:	lock rcr DWORD PTR [edx+0x3cb3f10d],0x24
  420411:	xchg   ecx,eax
  420412:	(bad)  
  420413:	or     eax,0x5bf1d0b5
  420418:	add    al,0x5f
  42041a:	pop    esi
  42041b:	mov    ds:0x9ec2583c,eax
  420420:	pop    es
  420421:	icebp  
  420422:	in     al,dx
  420423:	jmp    0x420432
  420425:	call   0x2d25c385
  42042a:	xor    bh,BYTE PTR [ebx+edi*1]
  42042d:	or     edi,DWORD PTR [ebp-0x5e]
  420430:	and    ebx,DWORD PTR [esi+0x20]
  420433:	jo     0x420496
  420435:	mov    bl,BYTE PTR [ecx-0x78da21de]
  42043b:	sti    
  42043c:	dec    ecx
  42043d:	or     DWORD PTR [edi-0x38e28d45],ebx
  420443:	and    BYTE PTR [edx+0x7b],0x66
  420447:	sti    
  420448:	sbb    al,0x28
  42044a:	enter  0x90fd,0x8c
  42044e:	shr    BYTE PTR [edi],1
  420450:	jmp    0xd9caf5b4
  420455:	bound  esp,QWORD PTR [ebx-0x77dcf971]
  42045b:	mov    es,ebp
  42045d:	(bad)  
  42045f:	sub    al,0xd0
  420461:	mov    DWORD PTR [eax+0x1356e44e],ebp
  420467:	jge    0x42049c
  420469:	push   0x46892ee8
  42046e:	cli    
  42046f:	lds    ebp,FWORD PTR [esi]
  420471:	or     DWORD PTR [esi+0x595e32da],edi
  420477:	jne    0x4204ab
  420479:	aaa    
  42047a:	sar    BYTE PTR [edx+0x31589250],0x15
  420481:	xor    ebx,ebx
  420483:	inc    edi
  420484:	inc    ecx
  420485:	lock mov ah,bh
  420488:	and    edx,DWORD PTR [edx-0x20e84e8a]
  42048e:	mov    DWORD PTR [edx+0xa3f8a58],ecx
  420494:	pop    edi
  420495:	clc    
  420496:	or     dl,BYTE PTR [ecx-0x3b]
  420499:	jne    0x42049d
  42049b:	mov    ah,0x85
  42049d:	jle    0x4204de
  42049f:	popa   
  4204a0:	xor    al,BYTE PTR [ebp+0x6f]
  4204a3:	popa   
  4204a4:	(bad)  [edi+0x4a8b7c5e]
  4204aa:	or     eax,0x8c6ecdac
  4204af:	out    dx,eax
  4204b0:	(bad)  
  4204b1:	mov    WORD PTR [edi+0x36],fs
  4204b4:	test   bl,0x4
  4204b7:	adc    ebp,DWORD PTR [ecx]
  4204b9:	push   es
  4204ba:	lahf   
  4204bb:	shl    BYTE PTR [eax*1+0x5e5dffee],1
  4204c2:	stc    
  4204c3:	cmp    DWORD PTR [eax+0x677e1611],edi
  4204c9:	in     al,0x85
  4204cb:	aaa    
  4204cc:	pop    es
  4204cd:	loopne 0x4204bf
  4204cf:	adc    cl,cl
  4204d1:	fwait
  4204d2:	xor    al,0xc0
  4204d4:	rol    BYTE PTR [eax+0x52],1
  4204d7:	jecxz  0x4204d4
  4204d9:	jmp    0xee95:0xd3aff0c6
  4204e0:	sbb    eax,DWORD PTR [edx]
  4204e2:	outs   dx,BYTE PTR ds:[esi]
  4204e3:	sbb    eax,0xe3054755
  4204e8:	mov    ecx,0xea735e99
  4204ed:	xor    BYTE PTR [edx+0x5d],bh
  4204f0:	xchg   edi,eax
  4204f1:	adc    dh,BYTE PTR [ebp-0x69]
  4204f4:	or     BYTE PTR [edi-0x56],ch
  4204f7:	mov    cl,0xb2
  4204f9:	fist   WORD PTR [edi+0x75df0546]
  4204ff:	jmp    0x420576
  420501:	sbb    dl,BYTE PTR [esi+0x38]
  420504:	cli    
  420505:	jmp    0x4204c9
  420507:	loop   0x4204ba
  420509:	cs mov edx,0x3e8d0093
  42050f:	inc    esi
  420510:	xor    ecx,esi
  420512:	imul   edx,DWORD PTR [ebx],0x3babae15
  420518:	ins    BYTE PTR es:[edi],dx
  420519:	sti    
  42051a:	es jns 0x420556
  42051d:	daa    
  42051e:	sub    BYTE PTR [esi],bl
  420520:	out    dx,al
  420521:	push   ecx
  420522:	cwde   
  420523:	jns    0x4205a3
  420525:	xor    BYTE PTR [edx-0x6a2692d],0x99
  42052c:	das    
  42052d:	inc    ebx
  42052e:	mov    ah,0xde
  420530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420531:	ins    BYTE PTR es:[edi],dx
  420532:	mov    dl,0x47
  420534:	imul   ebp,DWORD PTR ds:0x940364e3,0xb2f68491
  42053e:	(bad)  
  42053f:	jmp    0x26d577dd
  420544:	inc    ecx
  420545:	imul   esi,edi,0xffffffc0
  420548:	neg    DWORD PTR [edi-0x4ff692a5]
  42054e:	mov    WORD PTR [edx],fs
  420550:	adc    al,0xf5
  420552:	jmp    0xb2b3ec44
  420557:	sahf   
  420558:	cdq    
  420559:	pop    ss
  42055a:	push   esi
  42055b:	(bad)  
  42055c:	cmp    eax,0x3091a217
  420561:	pop    esi
  420562:	cmp    dh,BYTE PTR [ecx-0x305f983a]
  420568:	dec    ecx
  420569:	dec    edi
  42056a:	mov    ah,BYTE PTR [esi+0x1c6f1646]
  420570:	rcl    ebp,cl
  420572:	sahf   
  420573:	cld    
  420574:	test   al,0xd1
  420576:	and    edi,DWORD PTR [edi-0x52]
  420579:	mov    ah,0xa8
  42057b:	mov    bl,0x3b
  42057d:	arpl   WORD PTR [ecx+0x5e],bx
  420580:	mov    dl,0x5c
  420582:	frstor [ecx]
  420584:	and    bl,BYTE PTR [esi]
  420586:	mov    esp,0x46bf320e
  42058b:	jmp    0x420568
  42058d:	or     DWORD PTR [esi-0x5ad569e7],ecx
  420593:	popa   
  420594:	push   edx
  420595:	jae    0x4205c6
  420597:	push   ds
  420598:	lds    edi,FWORD PTR [edx]
  42059a:	jns    0x4205eb
  42059c:	jb     0x42055b
  42059e:	cs mov ch,0x17
  4205a1:	les    edx,FWORD PTR ds:0x14fec4ce
  4205a7:	lods   al,BYTE PTR ds:[esi]
  4205a8:	or     ebp,DWORD PTR [edi-0x2885e1b8]
  4205ae:	inc    ecx
  4205af:	add    esi,edi
  4205b1:	push   esi
  4205b2:	popa   
  4205b3:	cli    
  4205b4:	jns    0x42058f
  4205b6:	lods   eax,DWORD PTR ds:[esi]
  4205b7:	adc    cl,BYTE PTR ds:0xb4684312
  4205bd:	mov    gs,WORD PTR [esi]
  4205bf:	push   ebx
  4205c0:	sub    al,0x86
  4205c2:	or     esp,DWORD PTR [ebp+0x2673c99c]
  4205c8:	imul   edx,DWORD PTR [ebx+0x4b100c52],0xffffffc6
  4205cf:	mov    ds:0xa68f512f,al
  4205d4:	jne    0x420596
  4205d6:	jge    0x42063d
  4205d8:	xchg   ah,al
  4205da:	mov    eax,ds:0x8ad8985
  4205df:	ja     0x4205a5
  4205e1:	sbb    DWORD PTR [edi],edx
  4205e3:	call   0x554f:0x7ed27a31
  4205ea:	stos   DWORD PTR es:[edi],eax
  4205eb:	out    dx,eax
  4205ec:	loopne 0x42059a
  4205ee:	pop    edi
  4205ef:	pop    ss
  4205f0:	je     0x4205dc
  4205f2:	aam    0xc0
  4205f4:	test   al,0xda
  4205f6:	(bad)  
  4205f7:	out    dx,eax
  4205f8:	pop    ecx
  4205f9:	mov    al,ds:0x85b9d593
  4205fe:	retf   
  4205ff:	test   al,0xfb
  420601:	push   ebx
  420602:	or     DWORD PTR [edi+edi*8],esp
  420605:	stos   BYTE PTR es:[edi],al
  420606:	or     ecx,DWORD PTR [eax+esi*8]
  420609:	in     eax,0xfd
  42060b:	pop    esi
  42060c:	or     ah,BYTE PTR [edi+0x4b432136]
  420612:	retf   0xd6c5
  420615:	mov    edi,0xbb525b32
  42061a:	mov    al,0x97
  42061c:	add    esp,DWORD PTR [edx-0x6e]
  42061f:	xchg   edx,eax
  420620:	imul   edi,DWORD PTR [eax+0x2a155936],0xc
  420627:	mov    BYTE PTR [ebx-0x69],cl
  42062a:	jle    0x22e9b53b
  420630:	dec    edx
  420631:	std    
  420632:	sub    BYTE PTR [ebx+0x16],ch
  420635:	fwait
  420636:	xlat   BYTE PTR ds:[ebx]
  420637:	mov    al,ds:0xb0013715
  42063c:	call   0x6315c25e
  420641:	sub    eax,DWORD PTR [ebp-0x5f]
  420644:	pop    esi
  420645:	push   eax
  420646:	(bad)  
  420647:	dec    eax
  420648:	jle    0x42060f
  42064a:	out    0x53,eax
  42064c:	inc    edi
  42064d:	xchg   ebp,eax
  42064e:	stc    
  42064f:	pop    ecx
  420650:	pop    DWORD PTR [ebx]
  420652:	shr    DWORD PTR [ecx],cl
  420654:	jb     0x4206b4
  420656:	mov    eax,0x2fa461ee
  42065b:	(bad)  
  42065c:	(bad)  
  42065d:	fcmovbe st,st(7)
  42065f:	das    
  420660:	cmp    BYTE PTR [edx-0x32],0x90
  420664:	inc    ecx
  420665:	mov    WORD PTR [edx],cs
  420667:	pop    ds
  420668:	jmp    0x46d2:0xb45b7b0e
  42066f:	shufps xmm6,XMMWORD PTR [edi+ecx*8-0x4e],0x50
  420675:	and    ebp,esi
  420677:	or     al,0xfe
  420679:	daa    
  42067a:	inc    esp
  42067b:	lahf   
  42067c:	push   cs
  42067d:	jae    0x42069f
  42067f:	adc    eax,0x767301ce
  420684:	mov    esp,esi
  420686:	mov    ds:0xf5ea61ca,al
  42068b:	push   0xffffffc6
  42068d:	hlt    
  42068e:	push   esi
  42068f:	nop
  420690:	or     BYTE PTR ds:0x3438f2d,dl
  420696:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420698:	clc    
  420699:	aad    0x61
  42069b:	cmp    eax,0x920622ec
  4206a0:	inc    ecx
  4206a1:	test   bh,dl
  4206a3:	das    
  4206a4:	cmp    eax,0x758d1298
  4206a9:	xchg   edx,eax
  4206aa:	test   DWORD PTR [esi+edi*8],0x9c915324
  4206b1:	sahf   
  4206b2:	ins    DWORD PTR es:[edi],dx
  4206b3:	aas    
  4206b4:	in     eax,0x33
  4206b6:	and    al,0x47
  4206b8:	cld    
  4206b9:	sbb    eax,0x6022d381
  4206be:	arpl   di,bp
  4206c0:	dec    dl
  4206c2:	sbb    ch,BYTE PTR [edi+eiz*1+0x1f]
  4206c6:	in     al,0xc9
  4206c8:	rcl    DWORD PTR [edi+0x7b],cl
  4206cb:	bound  ecx,QWORD PTR [edx+0x64]
  4206ce:	mov    edx,0x7035779d
  4206d3:	jnp    0x4206f8
  4206d5:	sti    
  4206d6:	push   ebx
  4206d7:	arpl   cx,di
  4206d9:	push   ecx
  4206da:	add    eax,DWORD PTR [ecx]
  4206dc:	mov    edi,0xf1d7d872
  4206e1:	jbe    0x420685
  4206e3:	(bad)  
  4206e4:	repz das 
  4206e6:	retf   
  4206e7:	cmp    edx,0x1646a02c
  4206ed:	sub    al,0xc8
  4206ef:	out    0x95,al
  4206f1:	mov    eax,0xcb78cd41
  4206f6:	or     bl,BYTE PTR [eax-0x35]
  4206f9:	dec    edi
  4206fa:	push   edx
  4206fb:	xlat   BYTE PTR ds:[ebx]
  4206fc:	loope  0x42068c
  4206fe:	jbe    0x42071d
  420700:	fisub  DWORD PTR ds:0x768c73cc
  420706:	repz repz sbb eax,0xfa6ace6d
  42070d:	in     eax,0x8f
  42070f:	(bad)  
  420710:	fsubr  DWORD PTR [edi+0xa]
  420713:	sbb    eax,0x5532b0c8
  420718:	cs xor ebx,edx
  42071b:	outs   dx,DWORD PTR ds:[esi]
  42071c:	jle    0x42074b
  42071e:	into   
  42071f:	push   edx
  420720:	inc    esp
  420721:	mov    cl,0xfc
  420723:	push   0x8417a163
  420728:	int    0x8d
  42072a:	xchg   ecx,eax
  42072b:	fidivr WORD PTR [ebx]
  42072d:	inc    eax
  42072e:	jmp    0x840:0xf556b949
  420735:	cdq    
  420736:	loop   0x4206de
  420738:	fcomi  st,st(0)
  42073a:	addr16 fs inc esi
  42073d:	test   BYTE PTR [esi+0x7d],cl
  420740:	xchg   BYTE PTR [edi+0xc],cl
  420743:	(bad)  
  420744:	shl    BYTE PTR [ebp-0x2a],1
  420747:	xor    DWORD PTR [edx-0x50db8ca6],esp
  42074d:	mul    WORD PTR [ebx]
  420750:	mov    ebp,0x6e8ce20c
  420755:	dec    BYTE PTR [ecx+0x1d]
  420758:	pop    eax
  420759:	jo     0x420716
  42075b:	repnz scas al,BYTE PTR es:[edi]
  42075d:	mov    eax,0xa1df7935
  420762:	inc    eax
  420763:	adc    BYTE PTR [edx+0x2438b4be],ch
  420769:	inc    esp
  42076a:	in     eax,dx
  42076b:	or     BYTE PTR [esi+0x6468ea15],ah
  420771:	cmp    ch,dl
  420773:	sbb    eax,0x4b79dc71
  420778:	xchg   ecx,eax
  420779:	test   DWORD PTR [edi+0x17f39ab4],0x822e86a0
  420783:	stos   DWORD PTR es:[edi],eax
  420784:	sti    
  420785:	pop    esi
  420786:	jp     0x420795
  420788:	cli    
  420789:	add    al,0xbb
  42078b:	sub    ebx,eax
  42078d:	sbb    al,0x8
  42078f:	cmc    
  420790:	repz cmc 
  420792:	push   ds
  420793:	ret    0xc64d
  420796:	cmp    ch,ah
  420798:	out    0x5,eax
  42079a:	data16 xor cl,BYTE PTR [ebx]
  42079d:	xor    al,0xc7
  42079f:	out    dx,eax
  4207a0:	cmp    BYTE PTR [ecx-0x58796a36],bh
  4207a6:	aas    
  4207a7:	and    DWORD PTR [edi-0x7d19df5b],ecx
  4207ad:	mov    ebp,0x6f09bf51
  4207b2:	(bad)  
  4207b3:	pop    ecx
  4207b4:	mov    edx,0xa713cbc8
  4207b9:	xchg   edi,eax
  4207ba:	in     al,0x80
  4207bc:	test   eax,0x90646296
  4207c1:	stos   BYTE PTR es:[edi],al
  4207c2:	push   esp
  4207c3:	inc    edx
  4207c4:	in     al,dx
  4207c5:	fistp  DWORD PTR [ecx]
  4207c7:	das    
  4207c8:	test   eax,0x8c9b178b
  4207cd:	daa    
  4207ce:	frstor [ecx+0x7e]
  4207d1:	lods   al,BYTE PTR ds:[esi]
  4207d2:	retf   0x53ea
  4207d5:	mov    bl,0xc9
  4207d7:	jae    0x42079e
  4207d9:	pop    ss
  4207da:	jle    0x42083b
  4207dc:	out    dx,eax
  4207dd:	push   ebx
  4207de:	jl     0x42083e
  4207e0:	ret    
  4207e1:	(bad)  
  4207e2:	xor    dl,BYTE PTR [ebx+0x55]
  4207e5:	inc    ebx
  4207e6:	lea    ebx,[eax-0x368fd681]
  4207ec:	das    
  4207ed:	mov    ah,0xb7
  4207ef:	push   ecx
  4207f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207f1:	xor    ebp,DWORD PTR [edi-0x2e]
  4207f4:	mov    bh,0x33
  4207f6:	in     eax,dx
  4207f7:	inc    edi
  4207f8:	(bad)  
  4207f9:	daa    
  4207fa:	xor    eax,0xd854baa4
  4207ff:	xor    dl,ah
  420801:	jl     0x420795
  420803:	dec    ebp
  420804:	fild   WORD PTR [ebx-0x1f]
  420807:	pop    es
  420808:	dec    esi
  420809:	pop    ebx
  42080a:	cmp    ebx,ebx
  42080c:	push   0xffffffe5
  42080e:	fs push ss
  420810:	popa   
  420811:	sub    DWORD PTR [ebx],eax
  420813:	cmp    al,0x1e
  420815:	ss je  0x4207c5
  420818:	in     al,0x33
  42081a:	fmul   st(7),st
  42081c:	(bad)  
  42081d:	xchg   edx,eax
  42081e:	lods   al,BYTE PTR ds:[esi]
  42081f:	fs mov ecx,0x4a274c95
  420825:	adc    eax,0xe80de64
  42082a:	dec    eax
  42082b:	mov    cl,0xef
  42082d:	mov    eax,0xeb67e088
  420832:	shl    eax,1
  420834:	js     0x42083e
  420836:	test   eax,0x1ceff9c9
  42083b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42083c:	aad    0xde
  42083e:	push   ebp
  42083f:	sbb    BYTE PTR [edx+edi*2+0x41],bh
  420843:	test   BYTE PTR [esp+edx*8-0x57],al
  420847:	sub    BYTE PTR [edi],0x40
  42084a:	mov    es,ebx
  42084c:	cdq    
  42084d:	pop    edi
  42084e:	js     0x420807
  420850:	jle    0x420887
  420852:	clc    
  420853:	or     edi,DWORD PTR [ebx]
  420855:	or     eax,0x60c7db10
  42085a:	push   0x982d0328
  42085f:	pop    ss
  420860:	icebp  
  420861:	inc    esp
  420862:	jge    0x420832
  420864:	jg     0x420825
  420866:	out    dx,al
  420867:	jl     0x420807
  420869:	mov    bh,0xe3
  42086b:	sub    eax,0x6ce7318d
  420870:	mov    DWORD PTR [ebp-0x3d],ecx
  420873:	stos   BYTE PTR es:[edi],al
  420874:	mov    dl,0x85
  420876:	test   esp,esi
  420878:	jl     0x42087c
  42087a:	repnz or ebp,edi
  42087d:	into   
  42087e:	es cs test eax,0xca171b76
  420885:	and    al,BYTE PTR [ecx+0x3a21b3d7]
  42088b:	xchg   edx,eax
  42088c:	into   
  42088d:	fisttp DWORD PTR [esi+0x62655fd2]
  420893:	push   edx
  420894:	(bad)  
  420895:	(bad)  
  420897:	test   ebp,esi
  420899:	pop    ds
  42089a:	outs   dx,DWORD PTR ds:[esi]
  42089b:	bnd jb 0x420841
  42089e:	and    ebp,edi
  4208a0:	ja     0x4208f5
  4208a2:	mov    cl,0x31
  4208a4:	dec    ebp
  4208a5:	dec    ebx
  4208a6:	test   al,0xfb
  4208a8:	and    bl,BYTE PTR [eax]
  4208aa:	jp     0x420830
  4208ac:	sbb    ebx,DWORD PTR [edx+0x74ca8f7b]
  4208b2:	das    
  4208b3:	repnz push esp
  4208b5:	xchg   ebp,eax
  4208b6:	test   DWORD PTR [esi-0x80],esi
  4208b9:	dec    esp
  4208ba:	in     eax,dx
  4208bb:	jle    0x420936
  4208bd:	loopne 0x4208e5
  4208bf:	(bad)  
  4208c0:	xchg   edx,eax
  4208c1:	adc    eax,0x1546a5ea
  4208c6:	sub    BYTE PTR [ecx-0x5],ch
  4208c9:	adc    DWORD PTR [ebp+edx*1+0x5a],0x51
  4208ce:	add    esi,ecx
  4208d0:	lahf   
  4208d1:	nop
  4208d2:	inc    edx
  4208d3:	pop    ss
  4208d4:	adc    DWORD PTR [edi-0x5b],esi
  4208d7:	cdq    
  4208d8:	cmp    al,0xa8
  4208da:	out    0x67,eax
  4208dc:	(bad)  
  4208dd:	pop    ds
  4208de:	ins    BYTE PTR es:[edi],dx
  4208df:	cmp    al,0xa9
  4208e1:	daa    
  4208e2:	or     DWORD PTR [esi+edx*4+0x51],edx
  4208e6:	and    BYTE PTR [edi-0x65],0x62
  4208ea:	sbb    ah,al
  4208ec:	push   ds
  4208ed:	out    0x45,al
  4208ef:	cli    
  4208f0:	jnp    0x42088a
  4208f2:	scas   al,BYTE PTR es:[edi]
  4208f3:	and    al,0x3a
  4208f5:	inc    ecx
  4208f6:	(bad)  
  4208f7:	test   eax,0xbb24934f
  4208fc:	nop
  4208fd:	nop
  4208fe:	jmp    0x36c8:0x50ff8b5c
  420905:	aad    0x5
  420907:	(bad)  
  420908:	lods   al,BYTE PTR ds:[esi]
  420909:	ret    0xf9e9
  42090c:	mov    ah,0x2d
  42090e:	cmp    al,0x51
  420910:	xchg   BYTE PTR [eax+0x3da04310],cl
  420916:	imul   ebx,DWORD PTR [ebp+edx*8-0x470a626d],0x888eee4d
  420921:	pushf  
  420922:	aam    0x1f
  420924:	nop
  420925:	retf   0x43bf
  420928:	sub    eax,0xb1a40b93
  42092d:	mov    eax,ds:0x45474789
  420932:	and    DWORD PTR [edx-0x3ee55d6a],ebp
  420938:	sub    edx,DWORD PTR [eax+edi*4-0x6]
  42093c:	imul   esi,DWORD PTR [edi-0x54],0xb1a8cef2
  420943:	or     DWORD PTR ds:0x8577e054,esp
  420949:	adc    bh,dl
  42094b:	rol    DWORD PTR [eax+0x2e012cba],cl
  420951:	mov    ch,0xba
  420953:	popa   
  420954:	pop    edx
  420955:	xchg   BYTE PTR [ebp+0x60],ch
  420958:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42095a:	retf   0xea1b
  42095d:	xchg   edi,eax
  42095e:	fmul   DWORD PTR [ebp-0x49]
  420961:	jg     0x420914
  420963:	sub    cl,BYTE PTR cs:[edx]
  420966:	nop
  420967:	sbb    ecx,DWORD PTR [eax]
  420969:	iret   
  42096a:	push   esi
  42096b:	jns    0x420976
  42096d:	xlat   BYTE PTR ds:[ebx]
  42096e:	bound  edx,QWORD PTR [edx-0x3]
  420971:	test   BYTE PTR [edi+ebp*8+0x18bc5e05],0xb5
  420979:	scas   al,BYTE PTR es:[edi]
  42097a:	cmp    cl,BYTE PTR [ecx-0x3baabd4a]
  420980:	ins    BYTE PTR es:[edi],dx
  420981:	mov    esi,DWORD PTR [edi]
  420983:	cmp    ah,cl
  420985:	rol    eax,1
  420987:	cwde   
  420988:	mov    ebx,0x89f8d172
  42098d:	outs   dx,BYTE PTR ds:[esi]
  42098e:	dec    ebx
  42098f:	add    cl,al
  420991:	dec    esi
  420992:	mov    BYTE PTR [esp+ecx*2+0x6d],dl
  420996:	nop
  420997:	fstp   TBYTE PTR [esi+0x2550f5f5]
  42099d:	(bad)  
  42099e:	sbb    ebp,ebp
  4209a0:	clc    
  4209a1:	add    edi,DWORD PTR ds:0x876e00a
  4209a7:	push   ecx
  4209a8:	pop    eax
  4209a9:	es out 0x90,eax
  4209ac:	pop    ecx
  4209ad:	adc    BYTE PTR [ebp+0x467a1f13],bl
  4209b3:	loop   0x420968
  4209b5:	xchg   ebp,eax
  4209b6:	cmp    eax,0x514c1850
  4209bb:	push   ebp
  4209bc:	jmp    0x2736:0x12ffdb5b
  4209c3:	sahf   
  4209c4:	(bad)  
  4209c5:	loopne 0x4209bd
  4209c7:	rcr    BYTE PTR [esi-0x7d],0x84
  4209cb:	inc    ebx
  4209cc:	xchg   BYTE PTR [edx-0x14],bh
  4209cf:	popf   
  4209d0:	loop   0x420968
  4209d2:	dec    ebp
  4209d3:	mov    BYTE PTR [ebp+ebp*1-0x73],dh
  4209d7:	mov    esp,0xf4563ef7
  4209dc:	retf   0x3e06
  4209df:	jp     0x420a30
  4209e1:	fwait
  4209e2:	mov    edx,0x9fc23919
  4209e7:	lds    edx,FWORD PTR [eax]
  4209e9:	sbb    eax,0xb5c199ae
  4209ee:	loope  0x420987
  4209f0:	in     al,dx
  4209f1:	xchg   esp,eax
  4209f2:	iret   
  4209f3:	jecxz  0x420979
  4209f5:	push   ebx
  4209f6:	mov    al,0x23
  4209f8:	repnz (bad) 
  4209fb:	push   ebx
  4209fc:	mov    cl,0xc7
  4209fe:	and    cl,BYTE PTR [ecx+0x61]
  420a01:	out    0xf4,al
  420a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a04:	push   esp
  420a05:	push   esp
  420a06:	jecxz  0x420a0b
  420a08:	mov    al,0x88
  420a0a:	cwde   
  420a0b:	lock ss xchg esi,eax
  420a0e:	test   DWORD PTR [eax-0x4137fa53],ebp
  420a14:	adc    edx,DWORD PTR [ebx]
  420a16:	mov    ebp,0xd7efb189
  420a1b:	(bad)
  420a1f:	repnz push DWORD PTR [edx+0x1a]
  420a23:	lods   al,BYTE PTR ds:[esi]
  420a24:	leave  
  420a25:	dec    ecx
  420a26:	xchg   esp,eax
  420a27:	jl     0x4209cd
  420a29:	or     edi,eax
  420a2b:	jmp    0x420a39
  420a2d:	jge    0x420a40
  420a2f:	loop   0x420a27
  420a31:	dec    edx
  420a32:	enter  0x22f,0xc7
  420a36:	lods   al,BYTE PTR ds:[esi]
  420a37:	xchg   dh,dl
  420a39:	mov    al,ds:0xdac41399
  420a3e:	lds    ebx,FWORD PTR [ebx-0x3088214d]
  420a44:	fsub   QWORD PTR [edi+edi*8]
  420a47:	cs call 0x9bbe9392
  420a4d:	inc    esi
  420a4e:	mov    BYTE PTR [edi-0x67],bh
  420a51:	mov    BYTE PTR [edx],cl
  420a53:	aas    
  420a54:	test   dh,0x2c
  420a57:	or     al,0xb3
  420a59:	pop    edx
  420a5a:	rol    BYTE PTR [ecx-0xe3d677f],1
  420a60:	push   eax
  420a61:	mov    ds:0xd3ff245e,al
  420a66:	jno    0x420ace
  420a68:	mov    ch,0x9c
  420a6a:	push   ebp
  420a6b:	mov    esp,0x4f97cc33
  420a70:	jbe    0x420ab0
  420a72:	dec    edx
  420a73:	pop    ecx
  420a74:	(bad)  
  420a75:	daa    
  420a76:	push   ebp
  420a77:	sub    ecx,DWORD PTR [ebp-0x3]
  420a7a:	jge    0x420a4a
  420a7c:	ret    0x7ad3
  420a7f:	(bad)  
  420a80:	jb     0x420a7a
  420a82:	mov    edi,ebx
  420a84:	push   edx
  420a85:	mov    edx,DWORD PTR [edx+ebp*2]
  420a88:	test   BYTE PTR [esi],ch
  420a8a:	xor    BYTE PTR [ecx+eax*8],cl
  420a8d:	clc    
  420a8e:	fsqrt  
  420a90:	sub    BYTE PTR [esi-0x1a1797c5],dh
  420a96:	xor    BYTE PTR [edi],bh
  420a98:	lods   eax,DWORD PTR ds:[esi]
  420a99:	ret    
  420a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a9b:	neg    BYTE PTR [edi]
  420a9d:	mov    bh,0xb1
  420a9f:	adc    DWORD PTR fs:[ebx+0x43f0d0],esi
  420aa6:	or     edx,0x7a58f320
  420aac:	(bad)  
  420aad:	lods   al,BYTE PTR ds:[esi]
  420aae:	fsubrp st(6),st
  420ab0:	sub    ebp,ecx
  420ab2:	adc    ah,dl
  420ab4:	(bad)
  420ab8:	or     bh,BYTE PTR [ebx]
  420aba:	mov    cl,0xb4
  420abc:	stos   DWORD PTR es:[edi],eax
  420abd:	sti    
  420abe:	and    edx,edx
  420ac0:	mov    bh,0x5d
  420ac2:	(bad)  
  420ac3:	xchg   ebp,eax
  420ac4:	push   es
  420ac5:	test   DWORD PTR [ecx-0x2b],esi
  420ac8:	xchg   ecx,eax
  420ac9:	jns    0x420a51
  420acb:	pop    edx
  420acc:	xchg   ebp,eax
  420acd:	fwait
  420ace:	mov    edi,0x1ff91b6a
  420ad3:	arpl   WORD PTR [ecx-0x27e18c23],dx
  420ad9:	fisttp DWORD PTR [ebp-0x4d]
  420adc:	int    0x6c
  420ade:	mov    gs,WORD PTR [ebp+0x7a403878]
  420ae4:	sbb    DWORD PTR [ebx-0x61],edi
  420ae7:	jnp    0x420aee
  420ae9:	cmp    ah,BYTE PTR [edx+eax*4+0x1a]
  420aed:	cs retf 0x79fe
  420af1:	jno    0x420b0a
  420af3:	mov    DWORD PTR [edx-0x260bf4f3],eax
  420af9:	xchg   ebx,eax
  420afa:	cmp    ebp,DWORD PTR [eax-0x50]
  420afd:	mov    esi,0x1e1ea20a
  420b02:	div    DWORD PTR [ecx]
  420b04:	xor    DWORD PTR [ecx+eiz*4+0x70],edx
  420b08:	stc    
  420b09:	mov    edx,0xc0b9e00f
  420b0e:	sub    esp,DWORD PTR [edi+0x5ec24ac5]
  420b14:	pop    ds
  420b15:	add    eax,0xd544fea
  420b1a:	dec    eax
  420b1b:	inc    esi
  420b1c:	xor    eax,0xab48ad58
  420b21:	xchg   ebx,eax
  420b22:	cmp    eax,0x33b205b1
  420b27:	lock inc ecx
  420b29:	cmp    al,0xeb
  420b2b:	jno    0x420add
  420b2d:	js     0x420b0d
  420b2f:	lods   eax,DWORD PTR ds:[esi]
  420b30:	pop    es
  420b31:	imul   ecx
  420b33:	es pop ds
  420b35:	jne    0x420ac6
  420b37:	pop    ecx
  420b38:	aad    0xec
  420b3a:	in     eax,0x2f
  420b3c:	daa    
  420b3d:	call   0xb335:0x7af720b6
  420b44:	fdivr  st,st(2)
  420b46:	shr    esi,cl
  420b48:	iret   
  420b49:	mov    eax,0x6fcaf721
  420b4e:	(bad)  
  420b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b50:	sub    bl,ch
  420b52:	(bad)
  420b57:	lea    ebx,[eax]
  420b59:	jb     0x420b53
  420b5b:	retf   0x6ca8
  420b5e:	mov    DWORD PTR [edi],edi
  420b60:	ins    BYTE PTR es:[edi],dx
  420b61:	adc    al,0x7e
  420b63:	jmp    0xe882:0x20625773
  420b6a:	rcl    ch,cl
  420b6c:	adc    DWORD PTR [esi-0x694f6584],eax
  420b72:	xor    eax,0x9c9e4721
  420b77:	jo     0x420b2c
  420b79:	jmp    0x420bf8
  420b7b:	adc    al,0xf0
  420b7d:	es jecxz 0x420b2b
  420b80:	test   eax,0x18987e7b
  420b85:	ret    0x9a2d
  420b88:	xor    eax,0x8ab622e3
  420b8d:	jne    0x420b2f
  420b8f:	pop    ecx
  420b90:	jns    0x420be1
  420b92:	iret   
  420b93:	fs (bad) 
  420b95:	mov    ecx,0x2723288b
  420b9a:	sbb    dh,cl
  420b9c:	cmp    eax,0x33524e58
  420ba1:	or     eax,DWORD PTR ds:0x4d5753f8
  420ba7:	or     al,BYTE PTR [ebx+0x406934f5]
  420bad:	fdivr  DWORD PTR [ecx-0xf]
  420bb0:	push   DWORD PTR [esi-0x63]
  420bb3:	add    ebp,edi
  420bb5:	mov    bh,0x76
  420bb7:	pop    esi
  420bb8:	dec    edi
  420bb9:	js     0x420bc4
  420bbb:	les    edx,FWORD PTR [ebp+0x2a]
  420bbe:	ds imul esi,edi,0x1c
  420bc2:	pop    edi
  420bc3:	mov    edi,0x34725077
  420bc8:	add    BYTE PTR [edx-0x1c],0x1f
  420bcc:	out    dx,eax
  420bcd:	into   
  420bce:	imul   esp,DWORD PTR [eax+0x3db18ff7],0x7a
  420bd5:	call   0x6a3:0x44339f8f
  420bdc:	pushf  
  420bdd:	call   0xb94b:0x39193e34
  420be4:	jne    0x420bf8
  420be6:	iret   
  420be7:	and    eax,0xde29320d
  420bec:	loope  0x420c1c
  420bee:	jbe    0x420bd1
  420bf0:	push   ss
  420bf1:	jbe    0x420c1e
  420bf3:	and    eax,0xef977891
  420bf8:	(bad)
  420bfc:	mov    esi,0x74b39616
  420c01:	mov    eax,0xde8cd752
  420c06:	mov    dh,0x45
  420c08:	push   es
  420c09:	jg     0x420c5e
  420c0b:	popf   
  420c0c:	mov    bl,0xdd
  420c0e:	nop
  420c0f:	(bad)  
  420c11:	lock jb 0x420c37
  420c14:	push   es
  420c15:	mov    ch,0x22
  420c17:	mov    DWORD PTR [ebp-0xc],0xf1cb2ab6
  420c1e:	enter  0x8619,0x8b
  420c22:	ins    BYTE PTR es:[edi],dx
  420c23:	and    al,0x16
  420c25:	mov    ch,BYTE PTR [ebp+edi*8-0x53a83f05]
  420c2c:	fadd   QWORD PTR [ebx+eiz*4]
  420c2f:	aas    
  420c30:	sub    DWORD PTR ds:0xe2e52836,ebx
  420c36:	(bad)  
  420c37:	xor    eax,0xd9f927df
  420c3c:	out    0x65,al
  420c3e:	inc    DWORD PTR [edx]
  420c40:	(bad)  
  420c41:	cli    
  420c42:	jge    0x420c06
  420c44:	sbb    eax,0x39881afa
  420c49:	shl    ebp,1
  420c4b:	and    eax,eax
  420c4d:	dec    edi
  420c4e:	aam    0xba
  420c50:	and    edx,esi
  420c52:	or     ebp,DWORD PTR [ecx]
  420c54:	pop    edi
  420c55:	ss mov ebp,0x76fa76a4
  420c5b:	mov    eax,0x52808c2d
  420c60:	add    eax,0x7fe58594
  420c65:	mov    edx,0xa82a9001
  420c6a:	mov    cl,0xbe
  420c6c:	out    dx,eax
  420c6d:	mov    dh,0x9f
  420c6f:	push   es
  420c70:	js     0x420c34
  420c72:	mov    cl,0x12
  420c74:	adc    al,0xcb
  420c76:	stc    
  420c77:	dec    ecx
  420c78:	rcr    DWORD PTR [ecx],cl
  420c7a:	mov    ds:0x85c33449,eax
  420c7f:	call   0x338e4410
  420c84:	retf   
  420c85:	cmp    edi,DWORD PTR [edi]
  420c87:	push   esp
  420c88:	and    al,ch
  420c8a:	push   edx
  420c8b:	xchg   esp,eax
  420c8c:	sub    cl,BYTE PTR [eax+0x340cab97]
  420c92:	xchg   ebx,eax
  420c93:	out    dx,al
  420c94:	xor    DWORD PTR [edi],ebp
  420c96:	xchg   ebp,eax
  420c97:	retf   0xede1
  420c9a:	repnz xchg ebx,eax
  420c9c:	js     0x420cbe
  420c9e:	inc    esp
  420c9f:	xchg   ebp,edx
  420ca1:	pop    ebp
  420ca2:	inc    edi
  420ca3:	dec    esp
  420ca4:	pop    eax
  420ca5:	lods   al,BYTE PTR ds:[esi]
  420ca6:	dec    DWORD PTR [ecx]
  420ca8:	add    DWORD PTR ds:0xb617eaab,edi
  420cae:	aas    
  420caf:	add    al,BYTE PTR [edi-0x67eaea5a]
  420cb5:	out    0x4e,al
  420cb7:	scas   eax,DWORD PTR es:[edi]
  420cb8:	push   ds
  420cb9:	sar    DWORD PTR [ebx+0x3e7c84cc],cl
  420cbf:	pop    eax
  420cc0:	cmp    esi,eax
  420cc2:	fisubr WORD PTR ds:0x4c18fa1
  420cc8:	jbe    0x420d0f
  420cca:	ins    BYTE PTR es:[edi],dx
  420ccb:	mov    ebx,0x7b11283f
  420cd0:	(bad)  
  420cd1:	mov    bh,0xed
  420cd3:	stc    
  420cd4:	in     al,0xe1
  420cd6:	nop
  420cd7:	or     BYTE PTR [esi-0x13af855f],al
  420cdd:	cli    
  420cde:	or     DWORD PTR [edi],edx
  420ce0:	xor    edx,DWORD PTR [edx+0x76f2759d]
  420ce6:	and    ebp,DWORD PTR [edx-0x4e]
  420ce9:	sbb    eax,0xf2c68600
  420cee:	cs jmp 0x420c8d
  420cf1:	push   0xffffffa9
  420cf3:	fst    st(7)
  420cf5:	adc    esp,edx
  420cf7:	mov    DWORD PTR [si+0x66],esp
  420cfb:	jecxz  0x420cf0
  420cfd:	mov    esp,0x4556ce0f
  420d02:	jg     0x420d41
  420d04:	push   0x2e05bf85
  420d09:	call   0xd666:0x918d24b8
  420d10:	shl    DWORD PTR [esi+0x15],1
  420d13:	mov    dh,0x4c
  420d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d16:	ds nop
  420d18:	test   BYTE PTR [edi+0x3c0246ce],al
  420d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d1f:	je     0x420ce4
  420d21:	push   ss
  420d22:	sbb    eax,0xb7b2a611
  420d27:	jecxz  0x420ccd
  420d29:	fs xchg ebp,eax
  420d2b:	push   eax
  420d2c:	jecxz  0x420cea
  420d2e:	dec    ebx
  420d2f:	cld    
  420d30:	jle    0x420ce2
  420d32:	cmp    eax,0x68fa0319
  420d37:	fwait
  420d38:	les    esp,FWORD PTR [eax+esi*2-0x467bbdf]
  420d3f:	scas   eax,DWORD PTR es:[edi]
  420d40:	les    ebx,FWORD PTR [esi+ecx*2+0x51]
  420d44:	pushf  
  420d45:	cmp    BYTE PTR ss:[edi+ebx*1+0x5b],al
  420d4a:	test   BYTE PTR [eax],bh
  420d4c:	or     al,0x99
  420d4e:	adc    ch,bh
  420d50:	out    0x16,al
  420d52:	and    al,0x78
  420d54:	mov    BYTE PTR [eax],dh
  420d56:	mov    ebx,0x11c4f801
  420d5b:	mov    edx,0x6e2361c
  420d60:	add    ebx,edi
  420d62:	fcom   QWORD PTR [eax+0x66]
  420d65:	xchg   esp,eax
  420d66:	out    0x6e,eax
  420d68:	dec    edx
  420d69:	mov    ebp,0x414ccc85
  420d6e:	fnsave [di-0x11cd]
  420d73:	iret   
  420d74:	adc    DWORD PTR ds:0x836d2869,edx
  420d7a:	jecxz  0x420dd1
  420d7c:	add    eax,0x2c9b512
  420d81:	push   edx
  420d82:	fdecstp 
  420d84:	jl     0x420dad
  420d86:	inc    eax
  420d87:	dec    ebx
  420d88:	dec    edi
  420d89:	data16 scas al,BYTE PTR es:[edi]
  420d8b:	out    0x8b,eax
  420d8d:	add    ecx,DWORD PTR [edx-0x414e8e9c]
  420d93:	scas   al,BYTE PTR es:[edi]
  420d94:	mov    BYTE PTR [ebx+esi*8-0x41d4cb44],dh
  420d9b:	pop    esp
  420d9c:	(bad)  
  420d9d:	imul   ebp,DWORD PTR [edi-0x51],0x59
  420da1:	dec    edx
  420da2:	cmp    DWORD PTR [ecx],ebx
  420da4:	enter  0x1a52,0xbf
  420da8:	or     BYTE PTR [edi+0x9357f0e],ch
  420dae:	jle    0x420dbe
  420db0:	push   es
  420db1:	pop    esp
  420db2:	dec    eax
  420db3:	fwait
  420db4:	dec    ecx
  420db5:	mov    dh,0xf3
  420db7:	dec    esp
  420db8:	mov    al,0x5
  420dba:	inc    eax
  420dbb:	neg    BYTE PTR [ebp+0x38a3d92c]
  420dc1:	inc    ebp
  420dc2:	pop    ebp
  420dc3:	dec    eax
  420dc4:	out    0x32,eax
  420dc6:	pop    ss
  420dc7:	aam    0x8b
  420dc9:	pop    ebp
  420dca:	and    eax,0x3dffac62
  420dcf:	lods   eax,DWORD PTR ds:[esi]
  420dd0:	mov    edi,0xb4b5ede2
  420dd5:	int3   
  420dd6:	pop    es
  420dd7:	sub    ecx,0x4d099b39
  420ddd:	sahf   
  420dde:	or     al,0x6f
  420de0:	pusha  
  420de1:	imul   esp,DWORD PTR [edi-0x4353f980],0x4afa8d2c
  420deb:	cld    
  420dec:	lods   al,BYTE PTR ds:[esi]
  420ded:	scas   eax,DWORD PTR es:[edi]
  420dee:	dec    ecx
  420def:	and    DWORD PTR [ebx+0x1da2594e],0xffffff91
  420df6:	mov    ebx,0xf8f0928e
  420dfb:	add    bl,BYTE PTR [ebx]
  420dfd:	popa   
  420dfe:	rcl    BYTE PTR [edx],0x92
  420e01:	and    DWORD PTR [eax+eiz*1-0x739608c7],esp
  420e08:	test   eax,0xc3fe3360
  420e0d:	popf   
  420e0e:	sbb    bl,dh
  420e10:	imul   edx,DWORD PTR [ebx],0x3f
  420e13:	inc    edx
  420e15:	dec    eax
  420e16:	popf   
  420e17:	pushf  
  420e18:	jbe    0x420e0c
  420e1a:	cmp    cl,0x5f
  420e1d:	xlat   BYTE PTR ds:[ebx]
  420e1e:	int    0x8a
  420e20:	pop    esi
  420e21:	xor    al,0x5f
  420e23:	fisttp QWORD PTR [eax+esi*8]
  420e26:	mov    ch,BYTE PTR [ebx]
  420e28:	sbb    dl,bl
  420e2a:	and    eax,0x3cc97611
  420e2f:	ret    
  420e30:	xor    dl,ch
  420e32:	or     esp,eax
  420e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e35:	imul   ebx,DWORD PTR [edi],0xffffffc6
  420e38:	xchg   ebp,eax
  420e39:	mov    bh,0x59
  420e3b:	or     cl,0x65
  420e3e:	xor    edi,DWORD PTR [esp+edi*2]
  420e41:	push   ebp
  420e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e43:	rcl    BYTE PTR [esi-0x78b2df05],cl
  420e49:	test   WORD PTR ds:0x7461f680,bp
  420e50:	out    dx,al
  420e51:	add    ah,bl
  420e53:	int    0x80
  420e55:	cld    
  420e56:	rol    DWORD PTR [ebx-0x63a0717a],0xe9
  420e5d:	adc    dl,BYTE PTR [edi-0x1]
  420e60:	call   0xe596:0x22bff4dd
  420e67:	and    eax,0x6d3befa3
  420e6c:	bound  ecx,QWORD PTR [edx-0xb]
  420e6f:	mov    ch,0x9e
  420e71:	and    eax,0x49090058
  420e76:	ins    DWORD PTR es:[edi],dx
  420e77:	push   eax
  420e78:	xor    DWORD PTR [ebp+eax*1+0x294379ef],0x7a20029a
  420e83:	scas   al,BYTE PTR es:[edi]
  420e84:	fs cmp eax,0x50a578d0
  420e8a:	xor    al,0x8
  420e8c:	seto   cl
  420e8f:	int    0x7
  420e91:	sub    al,0xe9
  420e93:	ja     0x420ece
  420e95:	jmp    0x420e37
  420e97:	cmp    ebx,esi
  420e99:	mov    eax,ds:0xc18acc03
  420e9e:	(bad)  
  420e9f:	pop    edi
  420ea0:	sub    al,0x5e
  420ea2:	add    dl,BYTE PTR [edx+esi*1-0x2a33ec35]
  420ea9:	push   ebp
  420eaa:	add    al,0x6c
  420eac:	jb     0x420ed4
  420eae:	ficomp DWORD PTR [edi-0x1a693f91]
  420eb4:	rcr    BYTE PTR [ebp-0x44836aa9],0xfc
  420ebb:	lea    ecx,[edx-0x5338af69]
  420ec1:	or     BYTE PTR [edx*4+0x553530da],al
  420ec8:	fild   QWORD PTR [ebx]
  420eca:	sub    BYTE PTR [esi+eax*1+0x28],bl
  420ece:	add    DWORD PTR [edx-0x349484e9],ecx
  420ed4:	mov    eax,0x7e402169
  420ed9:	jmp    0xabf4:0x110613bc
  420ee0:	aas    
  420ee1:	push   ss
  420ee2:	xchg   edi,eax
  420ee3:	imul   esp,DWORD PTR [esi],0xffffff82
  420ee6:	and    eax,0xb223359d
  420eeb:	sub    ah,BYTE PTR [eax+esi*8+0x5b96b660]
  420ef2:	retf   0xbf95
  420ef5:	pop    eax
  420ef6:	push   es
  420ef7:	xor    al,0x95
  420ef9:	push   ds
  420efa:	loope  0x420f15
  420efc:	xchg   esp,eax
  420efd:	ror    BYTE PTR [esi-0x56],cl
  420f00:	mov    ch,0x9d
  420f02:	or     eax,0x9418e801
  420f07:	inc    eax
  420f08:	fldcw  WORD PTR [esi]
  420f0a:	fst    DWORD PTR [edi]
  420f0c:	mov    ebp,0xfedc9826
  420f11:	jns    0x420f65
  420f13:	out    dx,eax
  420f14:	gs aas 
  420f16:	cli    
  420f17:	adc    eax,0xb5dacdfe
  420f1c:	dec    esp
  420f1d:	div    ebp
  420f1f:	sub    DWORD PTR [ebp-0x2c892cb3],0x27
  420f26:	add    al,0xcc
  420f28:	test   BYTE PTR [ebp-0x45dd3a49],dh
  420f2e:	ja     0x420eec
  420f30:	les    eax,FWORD PTR [edx+0x335518fd]
  420f36:	test   ebp,edi
  420f38:	pop    ecx
  420f39:	jmp    0x420ede
  420f3b:	aaa    
  420f3c:	cmp    bl,BYTE PTR [edi-0x6dedf90e]
  420f42:	loopne 0x420f38
  420f44:	xchg   ecx,eax
  420f45:	in     eax,dx
  420f46:	bound  ebx,QWORD PTR [edi-0x24]
  420f49:	sub    DWORD PTR ss:[eax-0x4e],eax
  420f4d:	cld    
  420f4e:	mov    ecx,0x194f955c
  420f53:	test   eax,0x509cce17
  420f58:	mov    ecx,ecx
  420f5a:	mov    ebp,0x25bfd49d
  420f5f:	mov    dh,0x18
  420f61:	or     DWORD PTR [ebx-0x9],edi
  420f64:	cwde   
  420f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f66:	push   edx
  420f67:	sub    ch,ch
  420f69:	xor    BYTE PTR [ebx*1+0x2fea6cd9],bh
  420f70:	jl     0x420fc8
  420f72:	push   eax
  420f73:	dec    edi
  420f74:	adc    bh,BYTE PTR [esi-0x1931ebae]
  420f7a:	sbb    esi,DWORD PTR [ebp+eiz*2+0x31]
  420f7e:	out    0x8e,eax
  420f80:	enter  0x9389,0xec
  420f84:	mov    BYTE PTR [ebp-0x73],bh
  420f87:	xchg   esi,eax
  420f88:	cld    
  420f89:	popf   
  420f8a:	cmp    eax,eax
  420f8c:	fild   WORD PTR [edi-0x7131a052]
  420f92:	mov    ah,0xa3
  420f94:	sti    
  420f95:	adc    BYTE PTR [ebx+0x60],cl
  420f98:	fsubr  DWORD PTR [esi+0x18]
  420f9b:	or     dh,ah
  420f9d:	mov    esi,0x8f54bba1
  420fa2:	ss mov ch,bh
  420fa5:	std    
  420fa6:	sahf   
  420fa7:	mul    DWORD PTR [ecx+edx*4]
  420faa:	jo     0x420f3f
  420fac:	dec    esi
  420fad:	data16 mov al,0x65
  420fb0:	sbb    eax,0xf8b593b5
  420fb5:	repz dec ecx
  420fb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fb8:	mov    esi,0xbebf0e8
  420fbd:	stos   BYTE PTR es:[edi],al
  420fbe:	pop    edi
  420fbf:	sbb    DWORD PTR [ebp+ebp*1-0x3a],edi
  420fc3:	inc    ebx
  420fc4:	mov    WORD PTR [esi-0x2e4d0914],es
  420fca:	push   ebp
  420fcb:	and    DWORD PTR [esi-0x50],ebx
  420fce:	cli    
  420fcf:	pop    esi
  420fd0:	xchg   esp,eax
  420fd1:	call   0xc7e0fec9
  420fd6:	jge    0x42103c
  420fd8:	fucomip st,st(1)
  420fda:	nop
  420fdb:	add    al,0x1b
  420fdd:	xchg   ebx,eax
  420fde:	loope  0x420f8f
  420fe0:	fild   WORD PTR [ecx+0x31]
  420fe3:	or     dh,BYTE PTR [esi+esi*4+0x78]
  420fe7:	xchg   BYTE PTR [ebp+0x67],ch
  420fea:	xchg   ebx,eax
  420feb:	add    BYTE PTR [ebx-0x64],ch
  420fee:	mov    ah,0xb7
  420ff0:	sbb    bl,ch
  420ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ff3:	fmul   DWORD PTR [edi+esi*2]
  420ff6:	dec    ebp
  420ff7:	fistp  DWORD PTR [ecx+0x1f87aec9]
  420ffd:	(bad)  
  420ffe:	js     0x420fc0
  421000:	out    dx,eax
  421001:	xchg   BYTE PTR [edx],dh
  421003:	inc    esp
  421004:	lea    ecx,[ebp-0x27acd81f]
  42100a:	adc    BYTE PTR [ecx+0x7cf2aa79],cl
  421010:	push   ebp
  421011:	pop    ss
  421012:	mov    bl,0x55
  421014:	jns    0x421073
  421016:	jge    0x420f9a
  421018:	mov    dl,0x1e
  42101a:	add    BYTE PTR [edi],bl
  42101c:	dec    edx
  42101d:	inc    edx
  42101e:	shr    eax,1
  421020:	das    
  421021:	fs aas 
  421023:	in     al,dx
  421024:	mov    ds:0x36be63c0,eax
  421029:	cmp    esp,DWORD PTR [edi+0x46691225]
  42102f:	xchg   esi,eax
  421030:	out    dx,al
  421031:	xchg   esp,eax
  421032:	fstp   TBYTE PTR [edi-0x72b5636a]
  421038:	cli    
  421039:	ror    esp,cl
  42103b:	ja     0x4210ab
  42103d:	push   ebp
  42103e:	sbb    al,0x81
  421040:	pop    ebp
  421041:	stc    
  421042:	out    dx,al
  421043:	stc    
  421044:	test   eax,0xd81700f2
  421049:	xchg   edi,eax
  42104a:	mov    esp,0xe8d7e62d
  42104f:	aam    0xad
  421051:	inc    esi
  421053:	xchg   edi,eax
  421054:	jne    0x42109a
  421056:	add    ebx,DWORD PTR [ebp-0x69]
  421059:	dec    ecx
  42105a:	scas   al,BYTE PTR es:[edi]
  42105b:	or     eax,0xd59838a9
  421060:	sbb    ebx,0x88f661b3
  421066:	pop    edi
  421067:	push   esi
  421068:	fnsave [eax]
  42106a:	not    DWORD PTR [esi-0x61]
  42106d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42106e:	stos   BYTE PTR es:[edi],al
  42106f:	test   BYTE PTR [esp+ebp*4],ch
  421072:	outs   dx,BYTE PTR ds:[esi]
  421073:	fldenv [ebp+0x7b2c101e]
  421079:	fcom   DWORD PTR [eax+0x1b1cc718]
  42107f:	(bad)  
  421080:	mov    cl,0x4a
  421082:	cli    
  421083:	sub    BYTE PTR [eax+0x51],dl
  421086:	fwait
  421087:	mov    al,0x4
  421089:	inc    edi
  42108a:	stc    
  42108b:	lds    ebx,FWORD PTR [eax+0x7e]
  42108e:	inc    esp
  42108f:	lea    edi,[edi+0x6b]
  421092:	in     eax,0xa3
  421094:	pop    eax
  421095:	and    esp,ebp
  421097:	xor    eax,0x62e66d27
  42109c:	mov    edi,0x4b8e6ef0
  4210a1:	fadd   DWORD PTR [edx-0x33]
  4210a4:	into   
  4210a5:	xchg   edx,eax
  4210a6:	call   0x3316:0xcb337778
  4210ad:	pop    edi
  4210ae:	jecxz  0x4210d1
  4210b0:	dec    ebx
  4210b1:	jecxz  0x4210df
  4210b3:	outs   dx,DWORD PTR ds:[esi]
  4210b4:	inc    eax
  4210b5:	mov    ch,0x20
  4210b7:	out    0xec,al
  4210b9:	(bad)  
  4210ba:	jmp    0x421133
  4210bc:	add    ecx,eax
  4210be:	mov    ebp,0xd71554d5
  4210c3:	push   ebx
  4210c4:	mov    bl,0x4b
  4210c6:	pop    ebx
  4210c7:	nop
  4210c8:	xor    esi,DWORD PTR [eax+ecx*8+0x46]
  4210cc:	add    al,0xe4
  4210ce:	stos   DWORD PTR es:[edi],eax
  4210cf:	ret    0x68e1
  4210d2:	inc    edi
  4210d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210d4:	gs repnz iret 
  4210d7:	sbb    ebp,esp
  4210d9:	sbb    al,0xf2
  4210db:	in     al,dx
  4210dc:	xor    cl,BYTE PTR [ebp*4-0x4ba9bb1e]
  4210e3:	pop    es
  4210e4:	in     al,0x25
  4210e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e7:	or     al,0x4c
  4210e9:	repz call 0x86ba:0x8876840e
  4210f1:	xor    dh,dl
  4210f3:	cli    
  4210f4:	scas   eax,DWORD PTR es:[edi]
  4210f5:	(bad)  
  4210f6:	dec    DWORD PTR [esi-0x29]
  4210f9:	mov    cl,0x6e
  4210fb:	fsubp  st(5),st
  4210fd:	scas   al,BYTE PTR es:[edi]
  4210fe:	cmp    al,0x8a
  421100:	pop    edx
  421101:	je     0x4210dc
  421103:	enter  0xb64,0xf8
  421107:	stos   DWORD PTR es:[edi],eax
  421108:	mov    al,0x82
  42110a:	jo     0x421147
  42110c:	jmp    DWORD PTR [edi+0x79d07c99]
  421112:	xchg   esp,eax
  421113:	pop    ecx
  421114:	aad    0x1f
  421116:	pop    edi
  421117:	cmc    
  421118:	xchg   edx,eax
  421119:	fisubr DWORD PTR [eax]
  42111b:	pop    esi
  42111c:	aam    0x22
  42111e:	sub    BYTE PTR [edi],ch
  421120:	add    esi,esi
  421122:	sbb    al,BYTE PTR [ebp-0x28]
  421125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421126:	add    eax,0x170cc753
  42112b:	imul   ecx,DWORD PTR [eax],0x19861b5d
  421131:	popa   
  421132:	pop    eax
  421133:	nop
  421134:	sub    al,0xff
  421136:	jno    0x4210cd
  421138:	mov    ebx,0xbe4f5732
  42113d:	jo     0x42115e
  42113f:	push   cs
  421140:	mov    eax,0xab4e1c90
  421145:	sub    BYTE PTR [ebx+0x64],dl
  421148:	ror    DWORD PTR [ecx-0x76087c2c],1
  42114e:	sahf   
  42114f:	icebp  
  421150:	outs   dx,BYTE PTR ds:[esi]
  421151:	mov    ah,0x43
  421153:	mov    esi,0x54fda478
  421158:	dec    edx
  421159:	pop    edi
  42115a:	push   ss
  42115b:	inc    ebx
  42115c:	inc    ebp
  42115d:	adc    ebp,DWORD PTR [ebx-0x31]
  421160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421162:	pop    ecx
  421163:	lods   al,BYTE PTR ds:[esi]
  421164:	mov    ch,0xac
  421166:	xchg   ebx,eax
  421167:	data16 mov ds:0x78e216c5,al
  42116d:	btr    DWORD PTR [ecx-0x17],ebx
  421171:	call   0xa8473080
  421176:	aam    0x1e
  421178:	mov    dh,0xc2
  42117a:	xchg   BYTE PTR [esi],al
  42117c:	daa    
  42117d:	loop   0x4211d1
  42117f:	(bad)  
  421181:	xor    BYTE PTR ds:0x9d8a15a7,bh
  421187:	pop    ds
  421188:	addr16 loop 0x421173
  42118b:	call   0xb652a15a
  421190:	xchg   esp,eax
  421191:	add    al,0x7a
  421193:	sub    BYTE PTR [ebx-0x63e95d8],0xc6
  42119a:	dec    edi
  42119b:	mov    ebp,edi
  42119d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42119e:	or     DWORD PTR [edx+0x480c066e],edx
  4211a4:	pop    esp
  4211a5:	push   es
  4211a6:	imul   esp,DWORD PTR [bp+di-0x3a],0xffffffe5
  4211ab:	sbb    DWORD PTR [ecx],0xb94c0da0
  4211b1:	push   eax
  4211b2:	cmc    
  4211b3:	mov    esi,0xe28c8a8f
  4211b8:	cli    
  4211b9:	pop    ecx
  4211ba:	loopne 0x42121f
  4211bc:	and    eax,0x959a47a7
  4211c1:	aam    0x16
  4211c3:	pusha  
  4211c4:	sti    
  4211c5:	jge    0x42119a
  4211c7:	cmp    DWORD PTR [eax-0x74],eax
  4211ca:	cmp    eax,0xdb560051
  4211cf:	aam    0x5a
  4211d1:	push   ds
  4211d2:	(bad)  
  4211d3:	pop    ecx
  4211d4:	and    al,BYTE PTR [edx+0x1fd0f2ac]
  4211da:	push   cs
  4211db:	loope  0x4211f5
  4211dd:	imul   esi,ecx,0xffffffcb
  4211e0:	pop    esp
  4211e1:	xlat   BYTE PTR ds:[ebx]
  4211e2:	inc    esp
  4211e3:	xor    ch,BYTE PTR [eax+0xd80d83]
  4211e9:	mov    bl,0xdc
  4211eb:	fisub  WORD PTR [ebp-0x68b4cac2]
  4211f1:	sbb    DWORD PTR [edx+0x39],0xf898f494
  4211f8:	sub    al,ah
  4211fa:	xchg   DWORD PTR [edi],eax
  4211fc:	xor    eax,0xd910b54a
  421201:	cdq    
  421202:	retf   0xcc6c
  421205:	fld    QWORD PTR [esi*1-0x135d680]
  42120c:	inc    ebp
  42120d:	or     al,0x4c
  42120f:	mov    ebx,0x66fca34b
  421214:	(bad)  
  421215:	daa    
  421216:	lea    eax,[edi-0x2b]
  421219:	adc    al,0xb1
  42121b:	mov    ch,0x85
  42121d:	shl    DWORD PTR [edx+0x2e0b1da9],cl
  421223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421224:	xor    ebx,DWORD PTR [ecx+edi*2+0x67]
  421228:	mov    ds:0xc590fc05,eax
  42122d:	xlat   BYTE PTR ds:[bx]
  42122f:	xor    BYTE PTR [edx],0x70
  421232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421233:	adc    esi,edx
  421235:	(bad)  
  421237:	pop    ds
  421238:	retf   
  421239:	fdivr  st(1),st
  42123b:	push   0x28
  42123d:	dec    edi
  42123e:	adc    al,0xd9
  421240:	inc    ecx
  421241:	loop   0x421234
  421243:	push   edx
  421244:	and    BYTE PTR [eax+0x50d69342],cl
  42124a:	push   es
  42124b:	inc    ebx
  42124c:	cli    
  42124d:	xor    ecx,DWORD PTR [edi+0x1dc21fee]
  421253:	in     al,0x1b
  421255:	sub    DWORD PTR [edi-0x7],ebp
  421258:	push   ss
  421259:	pushf  
  42125a:	and    DWORD PTR ds:0x27816e63,esi
  421260:	sbb    edi,ebp
  421262:	mov    ebp,0xdc4c0b24
  421267:	(bad)  
  421268:	lahf   
  421269:	loop   0x4212ce
  42126b:	rol    DWORD PTR [edi+0x1ca74f6],cl
  421271:	jb     0x4212be
  421273:	loop   0x42129e
  421275:	pop    edi
  421276:	ins    DWORD PTR es:[edi],dx
  421277:	add    BYTE PTR [ebp-0x480dbd77],ah
  42127d:	add    eax,0x853babf5
  421282:	rcr    ebp,0xc4
  421285:	sbb    edx,DWORD PTR [esi+0x45795ff6]
  42128b:	mov    edi,esi
  42128d:	cmp    esi,DWORD PTR [esp+edi*4]
  421290:	int3   
  421291:	adc    DWORD PTR [ebp-0x1b],0xffffffa6
  421295:	pusha  
  421296:	xchg   ecx,eax
  421297:	cdq    
  421298:	xor    eax,0x53e7ed22
  42129d:	aad    0xf9
  42129f:	jnp    0x421272
  4212a1:	mov    al,ds:0xa3f4ca02
  4212a6:	inc    esi
  4212a7:	pop    eax
  4212a8:	(bad)  
  4212aa:	mov    ecx,0xfa697e84
  4212af:	push   edi
  4212b0:	fist   DWORD PTR [esi-0x77]
  4212b3:	xchg   DWORD PTR [eax],esi
  4212b5:	and    DWORD PTR [ebx+0x36307ba9],0x34619e14
  4212bf:	cmp    al,0xb0
  4212c1:	jle    0x421266
  4212c3:	lock mov si,0x38fc
  4212c8:	cli    
  4212c9:	or     BYTE PTR [esp+eax*2],al
  4212cc:	(bad)  
  4212ce:	aad    0xad
  4212d0:	mov    ch,0x74
  4212d2:	sti    
  4212d3:	dec    esi
  4212d4:	out    0xaa,eax
  4212d6:	push   eax
  4212d7:	cmc    
  4212d8:	pop    edx
  4212d9:	out    0x67,eax
  4212db:	xor    cl,BYTE PTR [esi-0x3f]
  4212de:	(bad)  
  4212df:	jne    0x42132d
  4212e1:	loopne 0x42134a
  4212e3:	ja     0x4212ce
  4212e5:	retf   
  4212e6:	setp   ch
  4212e9:	test   al,0xdc
  4212eb:	jp     0x4212a0
  4212ed:	imul   edx,DWORD PTR [eax-0x49],0x11
  4212f1:	sbb    eax,0xa7f3690e
  4212f6:	mov    cs,edi
  4212f8:	je     0x4212e5
  4212fa:	xchg   ebx,eax
  4212fb:	inc    esp
  4212fc:	icebp  
  4212fd:	hlt    
  4212fe:	push   0xffffffc4
  421300:	inc    ebp
  421301:	ss das 
  421303:	xchg   esi,eax
  421304:	xchg   esi,eax
  421305:	iret   
  421306:	cmc    
  421307:	jl     0x4212e9
  421309:	fisub  DWORD PTR [edx+eiz*4]
  42130c:	aad    0x97
  42130e:	add    ecx,edi
  421310:	sbb    DWORD PTR [ecx-0x3cce80e6],ebx
  421316:	mov    BYTE PTR [ebx+0x53],dl
  421319:	std    
  42131a:	es and bl,ch
  42131d:	test   esp,edx
  42131f:	adc    al,0x67
  421321:	or     eax,eax
  421323:	in     al,0x31
  421325:	imul   esp,DWORD PTR [esi-0x3907826b],0x7bf30e1b
  42132f:	sbb    ebx,DWORD PTR [ecx+eax*4-0x1a]
  421333:	jo     0x421332
  421335:	ins    DWORD PTR es:[edi],dx
  421336:	shl    DWORD PTR [edx+0x14],0x49
  42133a:	pop    ds
  42133b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42133c:	mov    ds:0x6a60188e,al
  421341:	cmc    
  421342:	xor    al,BYTE PTR [ebp+0x29]
  421345:	and    bh,BYTE PTR [esi+ebx*1]
  421348:	or     eax,0xf8701d6c
  42134d:	fwait
  42134e:	adc    eax,0xe6f40d45
  421353:	sbb    eax,0x783f2768
  421358:	lods   eax,DWORD PTR ds:[esi]
  421359:	mov    dh,0x6e
  42135b:	or     al,0xaf
  42135d:	push   esi
  42135e:	push   ecx
  42135f:	pop    esi
  421360:	jg     0x421395
  421362:	ffreep st(6)
  421364:	int    0x51
  421366:	das    
  421367:	retf   0x68df
  42136a:	nop
  42136b:	jns    0x421310
  42136d:	fadd   st(4),st
  42136f:	repz pushf 
  421371:	sub    al,0x51
  421373:	dec    ebx
  421374:	loop   0x42137d
  421376:	(bad)  
  421377:	jmp    0x4997:0x5d6a9586
  42137e:	or     eax,0x37385cf2
  421383:	outs   dx,BYTE PTR ds:[esi]
  421384:	fisttp DWORD PTR [esi-0xb]
  421387:	cdq    
  421388:	push   0xac9133df
  42138d:	pop    ebx
  42138e:	sti    
  42138f:	adc    DWORD PTR [edx],ebx
  421391:	test   eax,0x128fdcbc
  421396:	jmp    0x4213d9
  421398:	sbb    ch,bh
  42139a:	rcl    DWORD PTR [edi],0xfa
  42139d:	inc    edx
  42139e:	cli    
  42139f:	or     DWORD PTR [esp+ecx*4-0x19],edx
  4213a3:	jl     0x42141f
  4213a5:	out    dx,al
  4213a6:	dec    edi
  4213a7:	xchg   ebp,eax
  4213a8:	sbb    al,0x38
  4213aa:	icebp  
  4213ab:	(bad)
  4213ae:	xor    esi,DWORD PTR [ebx+0x535b8206]
  4213b4:	test   eax,0xdac904dd
  4213b9:	jmp    0x7a38:0xc2eaae3f
  4213c0:	ins    DWORD PTR es:[edi],dx
  4213c1:	imul   esi,DWORD PTR [ebx-0x7f48dbf2],0x33a9c1a9
  4213cb:	dec    edx
  4213cc:	lock push edx
  4213ce:	lods   eax,DWORD PTR ds:[esi]
  4213cf:	mov    esp,0x11f100f5
  4213d4:	pop    ds
  4213d5:	sub    ebx,DWORD PTR [ebp-0x48]
  4213d8:	adc    al,BYTE PTR [edx]
  4213da:	inc    edx
  4213db:	mov    DWORD PTR [ebx+ebp*8+0x1feaa9f],eax
  4213e2:	loopne 0x4213b7
  4213e4:	fwait
  4213e5:	jle    0x421387
  4213e7:	mov    ebx,0x38ec6ebd
  4213ec:	clc    
  4213ed:	test   DWORD PTR [ebx+0x79],eax
  4213f0:	sub    cl,dl
  4213f2:	(bad)  
  4213f3:	scas   eax,DWORD PTR es:[edi]
  4213f4:	xchg   edi,eax
  4213f5:	cmp    bl,bl
  4213f7:	dec    ecx
  4213f8:	sbb    al,0x44
  4213fa:	mov    al,ds:0x96f9ebe1
  4213ff:	jecxz  0x4213b8
  421401:	xchg   ecx,eax
  421402:	jge    0x421457
  421404:	ins    BYTE PTR es:[edi],dx
  421405:	adc    bh,bh
  421407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421408:	jmp    0xf25e715c
  42140d:	lds    ebx,FWORD PTR [ebx]
  42140f:	fisttp DWORD PTR [esi]
  421411:	xchg   ebx,eax
  421412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421413:	shl    dh,cl
  421415:	mov    esp,0xaaf1e77e
  42141a:	repnz clc 
  42141c:	das    
  42141d:	push   es
  42141e:	fcmovne st,st(1)
  421420:	aam    0x67
  421422:	std    
  421423:	add    bl,BYTE PTR [ecx]
  421425:	sar    DWORD PTR [esi+0x47],0x1
  421429:	inc    ecx
  42142a:	in     eax,dx
  42142b:	adc    eax,eax
  42142d:	out    dx,al
  42142e:	xor    esp,DWORD PTR [ebp-0x4]
  421431:	mov    bl,0xb5
  421433:	xor    ah,BYTE PTR [edi-0x34]
  421436:	mov    BYTE PTR ds:0xb2e146d1,dh
  42143c:	mov    edx,0xc14c2bd5
  421441:	inc    ebx
  421442:	push   ebp
  421443:	mov    bl,0xfa
  421445:	sub    dl,BYTE PTR [edx+0x30]
  421448:	add    BYTE PTR ds:0x7f9e1904,ah
  42144e:	ds mov ecx,0x37f99030
  421454:	xor    DWORD PTR [edx-0x6309e2fc],ecx
  42145a:	dec    ebp
  42145b:	push   esp
  42145c:	push   0xfffffff4
  42145e:	jns    0x421480
  421460:	loopne 0x42146a
  421462:	pop    es
  421463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421464:	pusha  
  421465:	imul   ebp,esi,0xffffffd4
  421468:	dec    edi
  421469:	jb     0x421421
  42146b:	inc    ebx
  42146c:	sbb    eax,0x476f36d1
  421471:	(bad)  
  421472:	mov    esi,0x91235cd9
  421477:	div    esi
  421479:	inc    eax
  42147a:	in     al,0x1a
  42147c:	outs   dx,BYTE PTR ds:[esi]
  42147d:	call   0xaf4dfe03
  421482:	cmp    al,0x2a
  421484:	jno    0x42141b
  421486:	lods   eax,DWORD PTR ds:[esi]
  421487:	mov    eax,ds:0x28873cbd
  42148c:	fwait
  42148d:	aaa    
  42148e:	jl     0x4214e9
  421490:	and    BYTE PTR [edx+edi*1],dh
  421493:	rcr    DWORD PTR [edx+0x42],1
  421496:	add    edi,DWORD PTR [edx+0x29e9037]
  42149c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42149e:	out    0x9a,al
  4214a0:	jle    0x4214b5
  4214a2:	(bad)  
  4214a3:	fwait
  4214a4:	and    al,0x34
  4214a6:	lods   al,BYTE PTR ds:[esi]
  4214a7:	add    al,al
  4214a9:	stos   BYTE PTR es:[edi],al
  4214aa:	push   0xffffffbc
  4214ac:	(bad)  
  4214ad:	sub    esi,DWORD PTR [edi+0x7c]
  4214b0:	(bad)  
  4214b1:	jmp    0x182d:0x807bc1d2
  4214b8:	cmc    
  4214b9:	mov    ecx,0x4628d138
  4214be:	and    esp,edx
  4214c0:	jle    0x4214e6
  4214c2:	xchg   esp,eax
  4214c3:	and    BYTE PTR [edx+0x52e1af86],dl
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0xd26ef65d
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xbb45d67
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	inc    DWORD PTR [ebp-0x80]
  421830:	adc    esi,ecx
  421832:	enter  0x29cb,0xd7
  421836:	call   0x2323ae4b
  42183b:	neg    edx
  42183d:	xor    DWORD PTR [esi-0x35],0xecd729cb
  421844:	adc    BYTE PTR [esi-0x25f7225f],dl
  42184a:	or     esi,0xd729cbcb
  421850:	in     al,dx
  421851:	adc    BYTE PTR [esi-0x25f7221f],dl
  421857:	or     esi,0xd729cbcb
  42185d:	in     al,dx
  42185e:	adc    BYTE PTR [esi-0x25f7221f],dl
  421864:	or     esi,0xd729cbcb
  42186a:	adc    al,0x10
  42186c:	xchg   esi,eax
  42186d:	loope  0x421842
  42186f:	pop    ss
  421870:	pusha  
  421871:	(bad)  
  421872:	into   
  421873:	jg     0x421837
  421875:	in     al,0xf6
  421877:	push   esp
  421878:	adc    edx,ebx
  42187a:	sub    al,0xfc
  42187c:	pop    esp
  42187d:	mov    dl,0xe8
  42187f:	mov    ebp,0xb85bbbeb
  421884:	mov    esp,DWORD PTR [edx-0x9]
  421887:	mov    ebp,?
  421889:	imul   edi,DWORD PTR [ebx-0x405b5f11],0x9
  421890:	mov    ch,0x89
  421892:	xor    ah,ah
  421894:	xchg   esp,eax
  421895:	mov    bl,0x28
  421897:	mov    bl,0xef
  421899:	out    dx,al
  42189a:	pop    DWORD PTR [edx+edi*2-0xd807e09]
  4218a1:	test   bl,dh
  4218a3:	add    eax,0xcbea8bd7
  4218a8:	retf   
  4218a9:	sub    edi,edx
  4218ab:	in     al,dx
  4218ac:	adc    BYTE PTR [esi-0x7c0bbb1a],dl
  4218b2:	ret    0x5936
  4218b5:	shr    DWORD PTR [edx+0x2f],0x7e
  4218b9:	sbb    dl,ch
  4218bb:	sbb    DWORD PTR [edi+0x2],ecx
  4218be:	and    ah,0xc2
  4218c1:	rcl    DWORD PTR [ecx+edx*8-0xcb719bb],0xd9
  4218c9:	xlat   BYTE PTR ds:[ebx]
  4218ca:	retf   0x1322
  4218cd:	les    edx,FWORD PTR [ebx-0x7b22ef52]
  4218d3:	call   0x873403dc
  4218d8:	jecxz  0x421865
  4218da:	mov    BYTE PTR [ebx],dh
  4218dc:	pop    ecx
  4218dd:	and    ebx,DWORD PTR [ebp-0x5463fe94]
  4218e3:	and    eax,0x4ecbd09a
  4218e8:	retf   0x71c1
  4218eb:	das    
  4218ec:	jle    0x421908
  4218ee:	aad    0x19
  4218f0:	dec    esi
  4218f1:	add    dh,dl
  4218f3:	js     0x421951
  4218f5:	shl    DWORD PTR [ecx+esi*8+0x57],0xe6
  4218fa:	pop    ebp
  4218fb:	outs   dx,BYTE PTR ds:[esi]
  4218fc:	jae    0x4218d5
  4218fe:	push   eax
  4218ff:	mov    edi,0x33c3c4bc
  421904:	mov    ebx,0x9e75b4dd
  421909:	jmp    0x4218aa
  42190b:	lock dec eax
  42190d:	mov    edx,DWORD PTR [esi-0x6adc3b52]
  421913:	adc    al,0x82
  421915:	pushf  
  421916:	mov    bl,0xb4
  421918:	imul   esi,DWORD PTR [edx-0x3ea6c93e],0x29
  42191f:	xlat   BYTE PTR ds:[ebx]
  421920:	in     al,dx
  421921:	adc    BYTE PTR [esi-0x75f7221f],dl
  421927:	(bad)  
  421928:	into   
  421929:	retf   
  42192a:	xchg   DWORD PTR [eax],ebp
  42192c:	aad    0xec
  42192e:	mov    al,0x46
  421930:	mov    dl,BYTE PTR [edx-0x317e25f8]
  421936:	retf   
  421937:	retf   
  421938:	sub    edi,edx
  42193a:	or     al,0x10
  42193c:	xchg   ebp,eax
  42193d:	loopne 0x421915
  42193f:	or     eax,edx
  421941:	or     esi,0xd729cf25
  421947:	push   eax
  421948:	push   ss
  421949:	xchg   esi,eax
  42194a:	loope  0x421929
  42194c:	or     dl,bl
  42194e:	nop
  42194f:	jae    0x42191c
  421951:	retf   
  421952:	sub    edi,eax
  421954:	in     al,dx
  421955:	adc    BYTE PTR [esi-0x25f7271f],dl
  42195b:	or     DWORD PTR [edi-0x28c63435],0xe19410ec
  421965:	fisttp QWORD PTR ds:0xcbce80da
  42196b:	retf   
  42196c:	sub    edi,edx
  42196e:	jmp    0xde23b083
  421973:	or     dl,bl
  421975:	or     esi,0xd729c79b
  42197b:	call   0x3a22af90
  421980:	or     eax,0xcbce83da
  421985:	dec    ebx
  421986:	sub    edi,edx
  421988:	cld    
  421989:	adc    BYTE PTR [esi-0x25f7220f],dl
  42198f:	sbb    esi,0xd739cbcb
  421995:	in     al,dx
  421996:	adc    BYTE PTR [esi-0x25e7221f],dl
  42199c:	or     esi,0xd729cbcb
  4219a2:	in     al,dx
  4219a3:	adc    BYTE PTR [esi-0x29ced61f],dl
  4219a9:	and    DWORD PTR [edi-0x28d63438],0xae961b1c
  4219b3:	xchg   esp,eax
  4219b4:	or     dl,bl
  4219b6:	or     esi,0xd729cbcb
  4219bc:	in     al,dx
  4219bd:	adc    BYTE PTR [esi-0x25f7221f],dl
  4219c3:	or     esi,0xd729cbcb
  4219c9:	in     al,dx
  4219ca:	adc    BYTE PTR [esi-0x25f7221f],dl
  4219d0:	or     esi,0xd729cbcb
  4219d6:	in     al,dx
  4219d7:	adc    BYTE PTR [esi-0x25f7221f],dl
  4219dd:	or     esi,0xd729cbcb
  4219e3:	in     al,dx
  4219e4:	adc    BYTE PTR [esi-0x25f7221f],dl
  4219ea:	or     esi,0xd729cbcb
  4219f0:	in     al,dx
  4219f1:	adc    BYTE PTR [esi-0x25f7221f],dl
  4219f7:	or     esi,0xd729cbcb
  4219fd:	in     al,dx
  4219fe:	adc    BYTE PTR [esi-0x25f7221f],dl
  421a04:	or     esi,0xd729cbcb
  421a0a:	in     al,dx
  421a0b:	adc    BYTE PTR [esi-0x25f7221f],dl
  421a11:	or     esi,0xd729cbcb
  421a17:	in     al,dx
  421a18:	adc    BYTE PTR [esi-0x25f7221f],dl
  421a1e:	scas   eax,DWORD PTR es:[edi]
  421a1f:	mov    edx,0xd75db3ae
  421a24:	in     al,dx
  421a25:	adc    BYTE PTR [esi-0x25f729ff],dl
  421a2b:	xchg   ecx,eax
  421a2c:	into   
  421a2d:	retf   
  421a2e:	retf   
  421a2f:	std    
  421a30:	shr    esp,cl
  421a32:	adc    BYTE PTR [edx-0x60a7221f],dl
  421a38:	ret    0x9ffc
  421a3b:	test   BYTE PTR [ecx],ch
  421a3d:	xlat   BYTE PTR ds:[ebx]
  421a3e:	in     al,dx
  421a3f:	adc    BYTE PTR [esi-0x25f7021f],dl
  421a45:	popa   
  421a46:	loopne 0x421a01
  421a48:	mov    eax,0x10ecb45b
  421a4d:	xchg   esi,eax
  421a4e:	loope  0x421a0d
  421a50:	or     dl,bl
  421a52:	cmp    DWORD PTR [esi],0x8d29cbc0
  421a58:	in     al,dx
  421a59:	adc    BYTE PTR [esi-0x25f726c7],dl
  421a5f:	or     esi,0xd729cbcb
  421a65:	in     al,dx
  421a66:	adc    BYTE PTR [esi-0x25d7221f],dl
  421a6c:	sub    DWORD PTR [esi],0xd729cbcb
  421a72:	in     al,dx
  421a73:	adc    BYTE PTR [esi-0x25f7221f],dl
  421a79:	or     esi,0xd729cbcb
  421a7f:	in     al,dx
  421a80:	adc    BYTE PTR [esi-0x25f7221f],dl
  421a86:	or     esi,0xd729cbcb
  421a8c:	in     al,dx
  421a8d:	adc    BYTE PTR [esi-0x25f7221f],dl
  421a93:	or     esi,0xd729cbcb
  421a99:	in     al,dx
  421a9a:	adc    BYTE PTR [esi-0x25f7221f],dl
  421aa0:	or     esi,0xd729cbcb
  421aa6:	in     al,dx
  421aa7:	adc    BYTE PTR [esi-0x25f7221f],dl
  421aad:	or     esi,0xd729cbcb
  421ab3:	in     al,dx
  421ab4:	adc    BYTE PTR [esi-0x25f7221f],dl
  421aba:	or     esi,0xd729cbcb
  421ac0:	in     al,dx
  421ac1:	adc    BYTE PTR [esi-0x25f7221f],dl
  421ac7:	or     esi,0xd729cbcb
  421acd:	in     al,dx
  421ace:	adc    BYTE PTR [esi-0x25f7221f],dl
  421ad4:	or     esi,0xd729cbcb
  421ada:	in     al,dx
  421adb:	adc    BYTE PTR [esi-0x25f7221f],dl
  421ae1:	or     esi,0xd729cbcb
  421ae7:	in     al,dx
  421ae8:	adc    BYTE PTR [esi-0x25f7221f],dl
  421aee:	or     esi,0xd729cbcb
  421af4:	in     al,dx
  421af5:	adc    BYTE PTR [esi-0x25f7221f],dl
  421afb:	or     esi,0xd729cbcb
  421b01:	in     al,dx
  421b02:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b08:	or     esi,0xd729cbcb
  421b0e:	in     al,dx
  421b0f:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b15:	or     esi,0xd729cbcb
  421b1b:	in     al,dx
  421b1c:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b22:	or     esi,0xd729cbcb
  421b28:	in     al,dx
  421b29:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b2f:	or     esi,0xd729cbcb
  421b35:	in     al,dx
  421b36:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b3c:	or     esi,0xd729cbcb
  421b42:	in     al,dx
  421b43:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b49:	or     esi,0xd729cbcb
  421b4f:	in     al,dx
  421b50:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b56:	or     esi,0xd729cbcb
  421b5c:	in     al,dx
  421b5d:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b63:	or     esi,0xd729cbcb
  421b69:	in     al,dx
  421b6a:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b70:	or     esi,0xd729cbcb
  421b76:	in     al,dx
  421b77:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b7d:	or     esi,0xd729cbcb
  421b83:	in     al,dx
  421b84:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b8a:	or     esi,0xd729cbcb
  421b90:	in     al,dx
  421b91:	adc    BYTE PTR [esi-0x25f7221f],dl
  421b97:	or     esi,0xd729cbcb
  421b9d:	in     al,dx
  421b9e:	adc    BYTE PTR [esi-0x25f7221f],dl
  421ba4:	or     esi,0xd729cbcb
  421baa:	in     al,dx
  421bab:	adc    BYTE PTR [esi-0x25f7221f],dl
  421bb1:	or     esi,0xd729cbcb
  421bb7:	in     al,dx
  421bb8:	adc    BYTE PTR [esi-0x25f7221f],dl
  421bbe:	or     esi,0xd729cbcb
  421bc4:	in     al,dx
  421bc5:	adc    BYTE PTR [esi-0x25f7221f],dl
  421bcb:	or     esi,0xd729cbcb
  421bd1:	in     al,dx
  421bd2:	adc    BYTE PTR [esi-0x25f7221f],dl
  421bd8:	or     esi,0xd729cbcb
  421bde:	in     al,dx
  421bdf:	adc    BYTE PTR [esi-0x25f7221f],dl
  421be5:	or     esi,0xd729cbcb
  421beb:	in     al,dx
  421bec:	adc    BYTE PTR [esi-0x25f7221f],dl
  421bf2:	or     esi,0xd729cbcb
  421bf8:	in     al,dx
  421bf9:	adc    BYTE PTR [esi-0x25f7221f],dl
  421bff:	or     esi,0xd729cbcb
  421c05:	in     al,dx
  421c06:	adc    BYTE PTR [esi-0x25f7221f],dl
  421c0c:	or     esi,0xd729cbcb
  421c12:	in     al,dx
  421c13:	adc    BYTE PTR [esi-0x25f7221f],dl
  421c19:	or     esi,0xd729cbcb
  421c1f:	in     al,dx
  421c20:	adc    BYTE PTR [esi-0x25f7221f],dl
  421c26:	or     esi,0xd729cbcb
  421c2c:	in     al,dx
  421c2d:	adc    cl,bh
  421c2f:	dec    ecx
  421c30:	(bad)  
  421c31:	or     ch,dh
  421c33:	or     esi,0xfd29cbdb
  421c39:	dec    esi
  421c3a:	retf   0x87e7
  421c3d:	and    ah,BYTE PTR ds:0x269e0644
  421c43:	std    
  421c44:	rol    esp,0x58
  421c47:	test   eax,esi
  421c49:	nop
  421c4a:	pop    ecx
  421c4b:	push   edx
  421c4c:	leave  
  421c4d:	xor    BYTE PTR [ecx-0x23],bh
  421c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c51:	int    0x5d
  421c53:	ins    DWORD PTR es:[edi],dx
  421c54:	(bad)  
  421c55:	mov    eax,0xe3374d83
  421c5a:	mov    dl,0x81
  421c5c:	jp     0x421c3a
  421c5e:	or     edx,edi
  421c60:	retf   
  421c61:	mov    bh,0x1e
  421c63:	mov    ah,0x8c
  421c65:	gs jae 0x421c1b
  421c68:	repz push ss
  421c6a:	fistp  WORD PTR [eax-0x4d311c49]
  421c70:	pop    edx
  421c71:	xchg   ecx,eax
  421c72:	fistp  DWORD PTR [edi]
  421c74:	scas   al,BYTE PTR es:[edi]
  421c75:	ss push ebp
  421c77:	rol    esi,0xb3
  421c7a:	int3   
  421c7b:	mov    bl,0x99
  421c7d:	adc    BYTE PTR [edi+0x25],dh
  421c80:	lahf   
  421c81:	stc    
  421c82:	mov    BYTE PTR [edx-0x55991878],bl
  421c88:	cmp    ebx,ebp
  421c8a:	jl     0x421ce8
  421c8c:	push   edx
  421c8d:	cmp    BYTE PTR [esi+0x42f8497a],al
  421c93:	xor    ecx,ebp
  421c95:	loopne 0x421c8e
  421c97:	push   0xffffffbd
  421c99:	scas   al,BYTE PTR es:[edi]
  421c9a:	into   
  421c9b:	lods   eax,DWORD PTR ds:[esi]
  421c9c:	sub    DWORD PTR [eax-0x1d],esp
  421c9f:	bound  esi,QWORD PTR [eax]
  421ca1:	shl    DWORD PTR [eax-0x4d904173],cl
  421ca7:	pushf  
  421ca8:	cmp    eax,0x789e2b5
  421cad:	sub    ch,bl
  421caf:	and    DWORD PTR [edx+0x56],ebx
  421cb2:	shl    BYTE PTR [esi+0x78],cl
  421cb5:	fbstp  TBYTE PTR [ebx-0x1a]
  421cb8:	shr    DWORD PTR [ebx+edx*1+0x79],0x59
  421cbd:	sbb    edx,edx
  421cbf:	mov    ecx,0xe606ae1b
  421cc4:	mov    DWORD PTR [edi-0x1d3e9551],edx
  421cca:	pushf  
  421ccb:	ins    DWORD PTR es:[edi],dx
  421ccc:	mov    WORD PTR [eax],ss
  421cce:	imul   eax,DWORD PTR [edi+0x333b8161],0x8e5fac5e
  421cd8:	int    0x6b
  421cda:	loop   0x421d3e
  421cdc:	sti    
  421cdd:	loop   0x421d3c
  421cdf:	cmp    ah,BYTE PTR [esi-0x43fa2343]
  421ce5:	out    0xa8,al
  421ce7:	arpl   WORD PTR [eax],bp
  421ce9:	xor    eax,esi
  421ceb:	pop    ecx
  421cec:	or     dl,ah
  421cee:	sub    esp,ebp
  421cf0:	push   cs
  421cf1:	adc    al,0x23
  421cf3:	add    BYTE PTR [ecx+edi*8+0x1a14616e],bh
  421cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cfb:	(bad)  
  421cfc:	mov    edx,0xca754ade
  421d01:	jb     0x421cea
  421d03:	ja     0x421cc5
  421d05:	mov    WORD PTR [edi],?
  421d07:	mov    esp,eax
  421d09:	addr16 mov ebp,0xb55762b
  421d0f:	xchg   DWORD PTR [ecx+0x39],ebp
  421d12:	mov    bl,0xd9
  421d14:	lds    ecx,FWORD PTR gs:[edx]
  421d17:	out    dx,al
  421d18:	jns    0x421ccb
  421d1a:	sub    eax,0xdf6aab80
  421d1f:	aas    
  421d20:	pop    ss
  421d21:	enter  0x8ef7,0xcc
  421d25:	pop    ebp
  421d27:	mov    al,ds:0x4dbd3342
  421d2c:	adc    esi,eax
  421d2e:	sbb    al,BYTE PTR [edx+ebp*2+0x7916417c]
  421d35:	mov    esp,0x80d02b5c
  421d3a:	add    dh,BYTE PTR [edi+0x58362c96]
  421d40:	inc    esi
  421d41:	ins    BYTE PTR es:[edi],dx
  421d42:	stos   DWORD PTR es:[edi],eax
  421d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d44:	and    eax,0x26375b94
  421d49:	retf   
  421d4a:	pop    edi
  421d4b:	adc    ebp,DWORD PTR [edx-0x10ba5e88]
  421d51:	sbb    dh,cl
  421d53:	pop    ds
  421d54:	retf   0x8c40
  421d57:	cmp    esp,ecx
  421d59:	add    esi,ebp
  421d5b:	pop    eax
  421d5c:	jb     0x421d7c
  421d5e:	inc    eax
  421d5f:	push   DWORD PTR [eax]
  421d61:	inc    ecx
  421d62:	out    dx,eax
  421d63:	push   edx
  421d64:	lods   eax,DWORD PTR ds:[esi]
  421d65:	popa   
  421d66:	jno    0x421d37
  421d68:	pop    es
  421d69:	dec    edi
  421d6a:	sub    esi,DWORD PTR [eax]
  421d6c:	aaa    
  421d6d:	push   0xffffffda
  421d6f:	out    0xd2,eax
  421d71:	push   esi
  421d72:	in     al,0xe3
  421d74:	scas   eax,DWORD PTR es:[edi]
  421d75:	adc    DWORD PTR [edi+ecx*1],edi
  421d78:	(bad)  
  421d79:	push   ds
  421d7a:	mov    ch,0x3f
  421d7c:	gs jge 0x421d5c
  421d7f:	pushf  
  421d80:	call   DWORD PTR [ebx]
  421d82:	in     eax,0x27
  421d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d85:	es push ebp
  421d87:	(bad)
  421d8a:	jg     0x421d13
  421d8c:	int    0x89
  421d8e:	cmc    
  421d8f:	sbb    DWORD PTR [esi+edi*8+0x64],eax
  421d93:	adc    eax,0x4576c4a3
  421d98:	stos   DWORD PTR es:[edi],eax
  421d99:	or     DWORD PTR [esi-0x4c],ebp
  421d9c:	fild   DWORD PTR [ecx+ebx*1-0x4359f758]
  421da3:	cwde   
  421da4:	mov    ah,0x53
  421da6:	mov    WORD PTR [edi+eiz*2],?
  421da9:	sbb    DWORD PTR [ebp-0x6f],eax
  421dac:	mov    edi,0x570f6ab8
  421db1:	or     al,0x47
  421db4:	ret    0xd3cc
  421db7:	cmp    DWORD PTR [edx+0x1c],0x201a6192
  421dbe:	rol    edx,1
  421dc0:	arpl   WORD PTR [ecx],bp
  421dc2:	pop    ds
  421dc3:	lods   eax,DWORD PTR ds:[esi]
  421dc4:	inc    eax
  421dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dc6:	aaa    
  421dc7:	pop    edi
  421dc8:	test   DWORD PTR [edi+0x629cdf9e],ebx
  421dce:	push   ecx
  421dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dd0:	fldcw  WORD PTR [edx]
  421dd2:	mov    ds:0xd2a8ec2a,eax
  421dd7:	add    ebp,edx
  421dd9:	add    esi,esi
  421ddb:	call   0xd1ccd238
  421de0:	les    ebp,FWORD PTR [eax+0x28bb4dba]
  421de6:	test   DWORD PTR [ecx+0x2a0b0dec],esi
  421dec:	xchg   ecx,eax
  421ded:	cld    
  421dee:	pop    esp
  421def:	stos   BYTE PTR es:[edi],al
  421df0:	aam    0x6c
  421df2:	fst    DWORD PTR [eax]
  421df4:	sbb    eax,0xa577f3e
  421df9:	lahf   
  421dfa:	adc    DWORD PTR [esi+0x50409ecb],esi
  421e00:	sub    dh,al
  421e02:	mov    bh,0x7f
  421e04:	push   es
  421e05:	test   ebp,ebx
  421e07:	pop    ss
  421e08:	adc    al,0x7c
  421e0a:	fnstsw WORD PTR [ecx+0x4c]
  421e0d:	push   ebx
  421e0e:	(bad)  
  421e0f:	or     esp,ebp
  421e11:	mov    bl,0x60
  421e13:	pusha  
  421e14:	jmp    0x421e3c
  421e16:	xchg   ecx,eax
  421e17:	mov    bh,0xf1
  421e19:	lea    ebp,[ecx-0x7181e81b]
  421e1f:	cmp    esp,DWORD PTR [ebx]
  421e21:	xor    BYTE PTR [ebp-0x79],ah
  421e24:	inc    edi
  421e25:	cld    
  421e26:	sbb    BYTE PTR [edi+0x3fc9efd2],bl
  421e2c:	add    eax,0x5421c37
  421e31:	sbb    dl,BYTE PTR [edx-0x5b]
  421e34:	fs push 0x31262d1e
  421e3a:	adc    eax,DWORD PTR [ecx]
  421e3c:	sub    ecx,eax
  421e3e:	mov    eax,ds:0xf219bdd
  421e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e44:	daa    
  421e45:	in     al,0x11
  421e47:	jo     0x421de6
  421e49:	or     eax,0x6ba6014d
  421e4e:	out    0x3c,eax
  421e50:	test   al,dh
  421e52:	jb     0x421e9a
  421e54:	lahf   
  421e55:	sbb    eax,esp
  421e57:	lahf   
  421e58:	push   ss
  421e59:	fs jecxz 0x421dfb
  421e5c:	push   cs
  421e5d:	ja     0x421e01
  421e5f:	rcl    DWORD PTR [ebx+0x3a],1
  421e62:	popf   
  421e63:	js     0x421e4e
  421e65:	in     al,dx
  421e66:	adc    ecx,ecx
  421e68:	arpl   WORD PTR [ecx+0x28],dx
  421e6b:	sub    BYTE PTR [ecx+0x18b55315],0x5c
  421e72:	adc    al,0x76
  421e74:	(bad)  
  421e75:	(bad)  
  421e76:	push   esi
  421e77:	inc    eax
  421e78:	cld    
  421e79:	or     al,0xcc
  421e7b:	mov    ebp,DWORD PTR [eax+0x6f]
  421e7e:	mov    ?,ebx
  421e80:	das    
  421e81:	fcom   DWORD PTR [edi-0x56382945]
  421e87:	rol    DWORD PTR [edx-0x35762ade],1
  421e8d:	jg     0x421e9a
  421e8f:	loopne 0x421ee0
  421e91:	pop    es
  421e92:	shl    DWORD PTR [edi+0x6d],1
  421e95:	(bad)  
  421e96:	mov    esp,0x2235338d
  421e9b:	loope  0x421e94
  421e9d:	jae    0x421e48
  421e9f:	push   es
  421ea0:	and    al,0xab
  421ea2:	cs (bad) 
  421ea4:	(bad)  [edx+0x74d07935]
  421eaa:	(bad)  
  421eac:	dec    esi
  421ead:	push   es
  421eae:	loop   0x421e66
  421eb0:	std    
  421eb1:	xor    dh,BYTE PTR [edi-0x75]
  421eb4:	mov    eax,0x2c1bd603
  421eb9:	cmc    
  421eba:	jg     0x421f2f
  421ebc:	push   ss
  421ebd:	out    0x7a,eax
  421ebf:	mov    edi,0xa7a8b921
  421ec4:	rcr    ah,0x99
  421ec7:	mov    WORD PTR gs:[ecx],gs
  421eca:	ins    DWORD PTR es:[edi],dx
  421ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ecc:	aam    0x4c
  421ece:	gs push ecx
  421ed0:	mov    ds:0x70b0710f,eax
  421ed5:	add    BYTE PTR [ecx+eax*4+0x73],cl
  421ed9:	push   edx
  421eda:	popa   
  421edb:	pop    esi
  421edc:	pop    ebp
  421edd:	neg    BYTE PTR [eax-0x1f63176c]
  421ee3:	lock dec ecx
  421ee5:	cmp    cl,BYTE PTR [eax-0x477b6d7e]
  421eeb:	mov    esp,0x78c64aa6
  421ef0:	aas    
  421ef1:	xchg   esi,eax
  421ef2:	mov    bh,0xae
  421ef4:	add    eax,0x5dfabaa4
  421ef9:	pop    eax
  421efa:	data16 fild DWORD PTR ss:[edx-0x3650666e]
  421f02:	cmp    BYTE PTR [edi-0x69],ch
  421f05:	xchg   ecx,eax
  421f06:	sbb    eax,0xfa1f2745
  421f0b:	sbb    ecx,DWORD PTR [ebx]
  421f0d:	jecxz  0x421f22
  421f0f:	lods   eax,DWORD PTR ds:[esi]
  421f10:	lods   eax,DWORD PTR ds:[esi]
  421f11:	sbb    eax,DWORD PTR [edi]
  421f13:	test   BYTE PTR [esi-0x22],0x9b
  421f17:	mov    ah,ah
  421f19:	(bad)  
  421f1b:	and    edx,esi
  421f1d:	xor    esi,DWORD PTR [esi]
  421f1f:	pop    ss
  421f20:	call   0xaf5cda68
  421f25:	cmc    
  421f26:	jno    0x421ebd
  421f28:	das    
  421f29:	jle    0x421f80
  421f2b:	je     0x421f27
  421f2d:	dec    ebp
  421f2e:	xlat   BYTE PTR ds:[ebx]
  421f2f:	jl     0x421f11
  421f31:	xor    bl,BYTE PTR [edi+0x36d64ba6]
  421f37:	mov    al,ds:0xc69ef88f
  421f3c:	dec    ebp
  421f3d:	inc    BYTE PTR [eax+esi*1]
  421f40:	inc    esi
  421f41:	mov    bh,0x48
  421f43:	push   0xfffffff5
  421f45:	(bad)
  421f48:	out    dx,eax
  421f49:	jmp    0x421f5d
  421f4b:	push   eax
  421f4c:	xchg   edi,eax
  421f4d:	fcmovnu st,st(1)
  421f4f:	or     eax,0xde2fffac
  421f54:	push   cs
  421f55:	push   cs
  421f56:	mov    ecx,0xab6ddc25
  421f5b:	cmp    esi,DWORD PTR [ecx+eiz*4-0xe4440f6]
  421f62:	fst    DWORD PTR [edi]
  421f64:	neg    WORD PTR [ebp-0x18]
  421f68:	lds    eax,FWORD PTR [edx]
  421f6a:	cmc    
  421f6b:	nop
  421f6c:	jno    0x421f05
  421f6e:	aam    0x3d
  421f70:	add    BYTE PTR [esp+ebx*4-0x2a],al
  421f74:	cs pop ebx
  421f76:	or     eax,ebp
  421f78:	and    BYTE PTR [ecx+0x1e],dl
  421f7b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  421f7d:	(bad)  
  421f7e:	cli    
  421f7f:	add    eax,0xe604751d
  421f84:	mov    fs,WORD PTR [ebp+0x36be8cac]
  421f8a:	icebp  
  421f8b:	xchg   BYTE PTR [esi-0x2ccb9c83],bh
  421f91:	out    dx,eax
  421f92:	aas    
  421f93:	dec    ebp
  421f94:	sbb    BYTE PTR [ecx-0x5ff9d0a9],bl
  421f9a:	mov    DWORD PTR ds:0x3e94427d,edx
  421fa0:	pop    edx
  421fa1:	pop    ss
  421fa2:	es mov ch,0x97
  421fa5:	push   eax
  421fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fa7:	imul   edi,DWORD PTR [ecx-0x16671b40],0xffffffda
  421fae:	rcr    DWORD PTR [ebp-0x14],0x81
  421fb2:	pop    eax
  421fb3:	pop    eax
  421fb4:	ins    BYTE PTR es:[edi],dx
  421fb5:	adc    DWORD PTR [eax-0x7a],esi
  421fb8:	int    0x74
  421fba:	xor    bh,0x1d
  421fbd:	jbe    0x42200f
  421fbf:	push   ds
  421fc0:	sub    edx,DWORD PTR [ecx+0x4e]
  421fc3:	fadd   DWORD PTR [ecx+0x42ea0a73]
  421fc9:	idiv   DWORD PTR [esi+edi*1+0x20177b57]
  421fd0:	and    dh,BYTE PTR [esi-0x7c65656e]
  421fd6:	sbb    al,0x8c
  421fd8:	jge    0x42200d
  421fda:	mov    ah,0x6a
  421fdc:	fcom   DWORD PTR [eax]
  421fde:	test   al,0xc5
  421fe0:	inc    esp
  421fe1:	call   0xa919:0xe304ef5
  421fe8:	ja     0x422020
  421fea:	fcomp  DWORD PTR [eax]
  421fec:	mov    ds:0xce9ab402,eax
  421ff1:	jmp    0xd5648f5d
  421ff6:	xor    al,0x70
  421ff8:	jno    0x421fd2
  421ffa:	repz mov dl,0x99
  421ffd:	loop   0x422074
  421fff:	jmp    0x422009
  422001:	(bad)  
  422002:	jns    0x421fc0
  422004:	cmp    al,0xde
  422006:	repz add DWORD PTR [edi],esp
  422009:	push   ecx
  42200a:	mov    eax,0xc4af3341
  42200f:	jne    0x421f96
  422011:	cmc    
  422012:	in     al,dx
  422013:	adc    edi,DWORD PTR [esi+0x52857d3d]
  422019:	add    al,0xb1
  42201b:	dec    eax
  42201c:	cs inc esi
  42201e:	pop    edx
  42201f:	and    al,0xd3
  422021:	scas   al,BYTE PTR es:[edi]
  422022:	cmp    ah,BYTE PTR [esi-0x64]
  422025:	nop
  422026:	ds (bad) 
  422028:	repz push ds
  42202a:	(bad)  
  42202b:	push   esp
  42202c:	or     al,0x6e
  42202e:	int    0xfb
  422030:	or     DWORD PTR [ecx-0x1589ec42],esi
  422036:	mov    ebx,0x7145c697
  42203b:	xor    ch,0xd1
  42203e:	cld    
  42203f:	xchg   ebx,eax
  422040:	or     esp,edi
  422042:	daa    
  422043:	xor    dl,BYTE PTR [ebp-0x2e]
  422046:	and    edx,edx
  422048:	nop
  422049:	mov    ebx,0x2947f236
  42204e:	push   cs
  42204f:	inc    eax
  422050:	pop    edi
  422051:	sysenter 
  422053:	sahf   
  422054:	repz ret 0x74c9
  422058:	or     eax,0x331d508f
  42205d:	push   ecx
  42205e:	push   ss
  42205f:	fdivp  st(5),st
  422061:	fdivr  QWORD PTR [esi-0x45c38cff]
  422067:	push   eax
  422068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422069:	jae    0x422025
  42206b:	push   ecx
  42206c:	sti    
  42206d:	pop    eax
  42206e:	stos   DWORD PTR es:[edi],eax
  42206f:	cdq    
  422070:	in     eax,0x86
  422072:	or     ch,dl
  422074:	gs xadd dl,bl
  422078:	retf   0x63d4
  42207b:	retf   
  42207c:	lea    ebx,[edi+eax*2-0x4]
  422080:	cmc    
  422081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422082:	add    esp,ecx
  422084:	mov    cr0,edi
  422087:	sti    
  422088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422089:	in     eax,dx
  42208a:	cmp    eax,DWORD PTR [esp+ecx*4-0x45]
  42208e:	repnz and al,0x29
  422091:	add    BYTE PTR [eax],cl
  422093:	xor    ah,BYTE PTR [edx+0x7]
  422096:	jl     0x422117
  422098:	int3   
  422099:	add    ebx,ebp
  42209b:	mov    dh,0xdf
  42209d:	mov    al,0x7f
  42209f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220a0:	shr    BYTE PTR fs:[edx],1
  4220a3:	cmp    DWORD PTR [esi+0x3],0xffffffca
  4220a7:	(bad)  
  4220a8:	repz mov al,0x17
  4220ab:	retf   0xdf9d
  4220ae:	dec    esp
  4220af:	fcom   QWORD PTR [edi+edx*2+0x563038fe]
  4220b6:	xor    DWORD PTR [edx+0x14d627ba],ebp
  4220bc:	pop    ecx
  4220bd:	jl     0x4220ee
  4220bf:	and    eax,0x4eac464c
  4220c4:	enter  0xc1e,0xae
  4220c8:	test   al,0x25
  4220ca:	pop    edx
  4220cb:	dec    esp
  4220cc:	mov    ah,0x72
  4220ce:	xor    eax,0x21aaf3c0
  4220d3:	mov    al,0x9e
  4220d5:	push   edx
  4220d6:	or     DWORD PTR [ebx+eiz*8-0x4],eax
  4220da:	ins    BYTE PTR es:[edi],dx
  4220db:	sahf   
  4220dc:	cmp    eax,esi
  4220de:	cmp    eax,0xc07ae2f4
  4220e3:	lds    esp,FWORD PTR [ecx-0x517dc400]
  4220e9:	jns    0x422122
  4220eb:	inc    ebp
  4220ec:	ja     0x42209d
  4220ee:	mov    bh,0xc2
  4220f0:	(bad)  
  4220f1:	outs   dx,DWORD PTR ds:[esi]
  4220f2:	rcr    esi,cl
  4220f4:	adc    al,BYTE PTR [edi-0x7df1ce40]
  4220fa:	(bad)  
  4220fb:	push   ss
  4220fc:	pop    ebx
  4220fd:	pop    ss
  4220fe:	push   DWORD PTR ds:[ecx+0x3aab6ca2]
  422105:	int3   
  422106:	and    al,bh
  422108:	fwait
  422109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42210a:	cmp    al,0xf5
  42210c:	dec    edx
  42210d:	mov    esp,0xf0e3fb3b
  422112:	dec    edx
  422113:	add    dh,BYTE PTR [edi+ebx*1]
  422116:	aaa    
  422117:	dec    edx
  422118:	(bad)  
  422119:	jmp    0x702b3b29
  42211e:	cmp    al,0xd3
  422120:	icebp  
  422121:	mov    ebx,0x2ede9d8d
  422126:	in     al,dx
  422127:	xor    DWORD PTR [eax+esi*2],ebx
  42212a:	mov    ah,0xd9
  42212c:	mul    DWORD PTR [ebx+0x62]
  42212f:	xchg   BYTE PTR [edx+0x2f],bh
  422132:	cmc    
  422133:	or     BYTE PTR [ebp+0x38dbac53],bl
  422139:	(bad)  
  42213a:	enter  0x4f9d,0xaf
  42213e:	cmp    al,0x21
  422140:	jne    0x422147
  422142:	xor    edx,ebp
  422144:	pop    ebp
  422145:	push   edi
  422146:	aad    0x22
  422148:	jbe    0x422187
  42214a:	mov    bl,0x88
  42214d:	sub    eax,DWORD PTR [edi+ebx*2]
  422150:	mov    bh,0x7
  422152:	xor    esi,DWORD PTR [edi+0x10]
  422155:	or     DWORD PTR [eax+0x2dda04c8],0xffffffa7
  42215c:	aas    
  42215d:	sbb    BYTE PTR [edx],bh
  42215f:	cdq    
  422160:	(bad)  
  422161:	int3   
  422162:	mov    esp,0x5520c386
  422167:	cmp    eax,0xdc5118a5
  42216c:	or     edx,DWORD PTR [eax+0x7eb4d1fc]
  422172:	mov    bl,BYTE PTR es:[ebx]
  422175:	in     eax,dx
  422176:	push   0x1f20115e
  42217b:	jecxz  0x422121
  42217d:	pop    ebp
  42217e:	sbb    BYTE PTR [edi+ebp*2+0x78],bh
  422182:	push   ebp
  422183:	cmp    DWORD PTR [ecx-0x52],edx
  422186:	mov    eax,0x7638b0b7
  42218b:	scas   al,BYTE PTR es:[edi]
  42218c:	xchg   edx,eax
  42218d:	or     eax,0x10a1e589
  422192:	imul   esp,DWORD PTR ss:[edi],0x78c6be76
  422199:	push   ecx
  42219a:	ins    BYTE PTR es:[edi],dx
  42219b:	jns    0x4221c6
  42219d:	in     eax,dx
  42219e:	repz sahf 
  4221a0:	outs   dx,BYTE PTR ds:[esi]
  4221a1:	jmp    0xc5130e02
  4221a6:	inc    edx
  4221a7:	mov    edi,0x7df2c008
  4221ac:	mov    al,0x4e
  4221ae:	fimul  WORD PTR [ecx-0x55edd21d]
  4221b4:	inc    ebx
  4221b5:	push   DWORD PTR [eax-0x4f3757ba]
  4221bb:	and    ecx,esp
  4221bd:	ret    0x2826
  4221c0:	sub    al,0x7a
  4221c2:	nop
  4221c3:	cmp    al,0xb8
  4221c5:	push   esi
  4221c6:	add    eax,DWORD PTR [esp+ecx*8+0x404d1842]
  4221cd:	xchg   esp,eax
  4221ce:	mov    edx,DWORD PTR [eax]
  4221d0:	in     al,0x84
  4221d2:	fstp   TBYTE PTR ds:0xdf67bb6f
  4221d8:	xlat   BYTE PTR ds:[ebx]
  4221d9:	mov    cl,0x99
  4221db:	push   edi
  4221dc:	outs   dx,DWORD PTR ds:[esi]
  4221dd:	dec    esp
  4221de:	or     BYTE PTR [esi+edx*4-0x4fa12526],bl
  4221e5:	stc    
  4221e6:	test   BYTE PTR [eax+0x27],dl
  4221e9:	inc    esp
  4221ea:	mov    esp,0xf3a4f509
  4221ef:	int    0x61
  4221f1:	or     edi,DWORD PTR [eax]
  4221f3:	or     ebx,DWORD PTR [edx+0x2f]
  4221f6:	fst    QWORD PTR [ebx-0x21]
  4221f9:	out    0xdf,eax
  4221fb:	ja     0x4221ce
  4221fd:	mov    al,ds:0xcf6dad10
  422202:	mov    esi,DWORD PTR [edx-0x60]
  422205:	adc    ebx,0xdcf5c7bb
  42220b:	pop    ecx
  42220c:	pop    esi
  42220d:	or     BYTE PTR [ebp+0x7c03292c],cl
  422213:	je     0x4221d6
  422215:	icebp  
  422216:	adc    BYTE PTR [edx],bl
  422218:	jle    0x4221c1
  42221a:	cmp    BYTE PTR [edx+eiz*4-0x80],0x86
  42221f:	xchg   esp,eax
  422220:	xor    ah,BYTE PTR [eax+edi*8+0x78f1f876]
  422227:	je     0x4221b9
  422229:	mov    ds:0x12332d22,eax
  42222e:	dec    esp
  42222f:	cmp    ah,BYTE PTR [edx]
  422231:	jne    0x422226
  422233:	add    eax,0x1813f43
  422238:	dec    esi
  422239:	cmp    eax,DWORD PTR [ebp-0x2ee86e7]
  42223f:	leave  
  422240:	leave  
  422241:	addr16 push es
  422243:	jle    0x42224c
  422245:	lahf   
  422246:	mov    ah,0xed
  422248:	jnp    0x422294
  42224a:	mov    eax,DWORD PTR [esi-0x2d1c84bd]
  422250:	push   ebx
  422251:	push   edi
  422252:	mov    ss,WORD PTR [ecx-0x1b57ffe5]
  422258:	add    BYTE PTR [ebx],dl
  42225a:	fiadd  WORD PTR [esp+edx*2+0x3f]
  42225e:	sbb    al,0x3c
  422260:	imul   ecx,ebp,0xffffff80
  422263:	aaa    
  422264:	stos   BYTE PTR es:[edi],al
  422265:	push   0xcd5fd16a
  42226a:	mov    ds,esp
  42226c:	std    
  42226d:	mov    al,ds:0x7c5f9f12
  422272:	sti    
  422273:	std    
  422274:	(bad)  
  422275:	xchg   ebx,eax
  422276:	hlt    
  422277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422278:	push   esp
  422279:	sar    DWORD PTR [esi],1
  42227b:	xor    DWORD PTR [esp+eax*2-0x58],0xaaec6ef2
  422283:	cmp    ebx,DWORD PTR [eax+ebp*2+0x45d43289]
  42228a:	inc    edx
  42228b:	shl    DWORD PTR [edx-0x2a822b72],1
  422291:	or     DWORD PTR [ebx-0x1b],0xffffffca
  422295:	adc    al,0x53
  422297:	adc    BYTE PTR [ebx],ah
  422299:	push   0xc141c27c
  42229e:	add    eax,DWORD PTR [eax-0x19]
  4222a1:	int    0x27
  4222a3:	inc    ebp
  4222a4:	cmp    eax,0xf5d2b1bb
  4222a9:	add    esp,DWORD PTR [eax]
  4222ab:	out    0xcf,al
  4222ad:	sub    eax,0x788c0cc3
  4222b2:	mov    fs,WORD PTR [ebx+0x2dfd6813]
  4222b8:	sbb    esi,ebp
  4222ba:	hlt    
  4222bb:	xchg   edx,eax
  4222bc:	mov    edx,0x599d6f6a
  4222c1:	imul   ebx,DWORD PTR [ebp-0x6d6287d],0xfffffff7
  4222c8:	sbb    eax,DWORD PTR [esi]
  4222ca:	cmp    eax,0x9dad41b6
  4222cf:	jmp    0x6260:0xa85bf440
  4222d6:	jnp    0x4222cd
  4222d8:	(bad)  
  4222d9:	mov    esi,0xa04bad4a
  4222de:	loopne 0x42226d
  4222e0:	xor    ebx,DWORD PTR [esi]
  4222e2:	xchg   DWORD PTR [esi],ebp
  4222e4:	inc    esi
  4222e5:	repz je 0x422323
  4222e8:	mov    edi,0x38bd3195
  4222ed:	cmp    dl,BYTE PTR [eax+edx*1-0x22a13e5b]
  4222f4:	jno    0x42233c
  4222f6:	adc    al,0x52
  4222f8:	sub    al,0xda
  4222fa:	sar    DWORD PTR [esi+0x50db1709],cl
  422300:	jb     0x4222c6
  422302:	jecxz  0x4222dc
  422304:	cmc    
  422305:	xchg   esi,eax
  422306:	aad    0xfa
  422308:	xor    eax,0x8901aae8
  42230d:	push   esi
  42230e:	mov    ecx,0xe354ffca
  422313:	inc    eax
  422314:	push   eax
  422315:	ror    BYTE PTR [eax-0x2bfde451],0xbb
  42231c:	in     al,0x59
  42231e:	fistp  QWORD PTR [edx-0x52fee278]
  422324:	adc    eax,0xd8466e1a
  422329:	popf   
  42232a:	pop    esp
  42232b:	out    0xa0,al
  42232d:	inc    esi
  42232e:	and    ecx,DWORD PTR [ebx]
  422330:	or     DWORD PTR [eax+0x7e],edx
  422333:	or     dh,0x36
  422336:	addr16 mov eax,ds:0x5d80
  42233a:	mov    al,0x8a
  42233c:	dec    edx
  42233d:	cmp    ecx,0x93f93a37
  422343:	pop    esi
  422344:	jmp    0x5670378b
  422349:	(bad)  
  42234a:	pop    ebp
  42234b:	loop   0x422382
  42234d:	and    ax,0xfb84
  422351:	cmc    
  422352:	int    0x11
  422354:	dec    ecx
  422355:	mov    esp,0x1f73fe08
  42235a:	rcr    BYTE PTR [edx-0x50ce405c],0x7c
  422361:	out    dx,al
  422362:	fs aam 0xa9
  422365:	out    dx,eax
  422366:	push   eax
  422367:	or     al,0x64
  422369:	fcomp  st(5)
  42236b:	pop    ds
  42236c:	test   al,0xd8
  42236e:	xor    eax,0x8b58f280
  422373:	xor    al,BYTE PTR [ebx+0x6]
  422376:	cmp    dh,dl
  422378:	dec    ecx
  422379:	xchg   edi,eax
  42237a:	test   BYTE PTR [esi+0x5bcb6e45],bh
  422380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422381:	fstp   st(7)
  422383:	and    DWORD PTR [esi],ecx
  422385:	push   ebx
  422386:	sbb    ebx,eax
  422388:	out    0x5f,al
  42238a:	and    edi,DWORD PTR [esi-0x102a65b9]
  422390:	cs pop ds
  422392:	and    eax,0x4194a138
  422397:	cld    
  422398:	xchg   esi,eax
  422399:	adc    bh,BYTE PTR [ebx+0x72dfc8f]
  42239f:	xchg   ebp,eax
  4223a0:	outs   dx,DWORD PTR ds:[esi]
  4223a1:	mov    ds:0x9409c13b,eax
  4223a6:	hlt    
  4223a7:	or     dl,BYTE PTR [ebx]
  4223a9:	gs cdq 
  4223ab:	ja     0x422357
  4223ad:	ret    
  4223ae:	inc    esi
  4223af:	clc    
  4223b0:	stos   DWORD PTR es:[edi],eax
  4223b1:	or     BYTE PTR ds:0x85c0c748,0xc0
  4223b9:	aaa    
  4223ba:	mov    edi,0x5bd0494c
  4223bf:	ret    
  4223c0:	sub    edi,esp
  4223c2:	add    eax,0x20f636a
  4223c7:	repz xchg esp,eax
  4223c9:	int    0xc7
  4223cb:	sbb    bl,bh
  4223cd:	add    edi,esi
  4223cf:	cdq    
  4223d0:	push   cs
  4223d1:	sbb    BYTE PTR [bx+si-0x63e1],al
  4223d6:	push   eax
  4223d7:	mov    ebp,0x274b4d30
  4223dc:	adc    BYTE PTR [ebx+edx*2+0x7],cl
  4223e0:	sub    BYTE PTR [ecx-0x6c],cl
  4223e3:	scas   al,BYTE PTR es:[edi]
  4223e4:	mov    bl,0xf2
  4223e6:	push   edi
  4223e7:	(bad)  [edx-0x2c82a763]
  4223ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ee:	ins    BYTE PTR es:[edi],dx
  4223ef:	pop    ecx
  4223f0:	imul   edx,DWORD PTR [eax+ebx*8+0x7f811da],0x3ab5bedf
  4223fb:	mov    ch,0x76
  4223fd:	mov    ah,0x79
  4223ff:	rcl    DWORD PTR ds:0xa5ceb670,1
  422405:	jbe    0x42243b
  422407:	dec    edx
  422408:	sub    al,0x6f
  42240a:	aaa    
  42240b:	pop    DWORD PTR [ebp-0x3d1efe6d]
  422411:	dec    ebx
  422412:	clc    
  422413:	push   edx
  422414:	sbb    BYTE PTR [edx+0xb],bh
  422417:	mov    ebx,0x47c3e81d
  42241c:	xlat   BYTE PTR ds:[ebx]
  42241d:	jg     0x422476
  42241f:	jbe    0x422488
  422421:	popa   
  422422:	or     DWORD PTR [ebx+0x5f],esp
  422425:	or     ebp,DWORD PTR [esi+0x9]
  422428:	imul   esp,DWORD PTR [ebx],0xc3cc9d7e
  42242e:	cld    
  42242f:	inc    ecx
  422430:	sub    edx,DWORD PTR [ecx-0x2a]
  422433:	push   eax
  422434:	fwait
  422435:	or     esi,DWORD PTR [esi+0x28299e69]
  42243b:	dec    ebx
  42243c:	scas   al,BYTE PTR es:[edi]
  42243d:	out    0xce,al
  42243f:	ds and cl,dl
  422442:	jle    0x422486
  422444:	cmp    edx,DWORD PTR [ecx+0x4fd715a9]
  42244a:	mov    cl,0x76
  42244c:	mov    bh,0x7f
  42244e:	je     0x422468
  422450:	and    ebp,esp
  422452:	mov    cl,0x1f
  422454:	repnz xor al,0x42
  422457:	adc    eax,0x57dc12a1
  42245c:	jmp    0x422466
  42245e:	add    DWORD PTR [edx-0x768cabf6],ebx
  422464:	push   ss
  422465:	cwde   
  422466:	xchg   ecx,eax
  422467:	jae    0x422472
  422469:	add    eax,0xf3f7c786
  42246e:	loop   0x4223fb
  422470:	add    BYTE PTR [edi+0x3546e758],bl
  422476:	push   esp
  422477:	call   0x1685:0x8e596f2d
  42247e:	ret    0x7f2d
  422481:	add    al,0xce
  422483:	js     0x42247e
  422485:	daa    
  422486:	dec    ebx
  422487:	jbe    0x422500
  422489:	cmp    al,0xe2
  42248b:	xor    DWORD PTR [eax+ecx*1-0x25],esi
  42248f:	rcl    DWORD PTR [edi+edi*8],1
  422492:	fdiv   QWORD PTR [ebp+0x16]
  422495:	pop    edx
  422496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422497:	xor    al,0xfc
  422499:	push   ss
  42249a:	fsub   QWORD PTR [eax-0x66]
  42249d:	xchg   BYTE PTR [edx+0x60],bl
  4224a0:	sbb    BYTE PTR [esp+eax*1+0xb],al
  4224a4:	mov    bl,0xc9
  4224a6:	repz repnz or ah,cl
  4224aa:	clc    
  4224ab:	sub    BYTE PTR [ecx],ah
  4224ad:	test   BYTE PTR [esi+esi*1-0x370ae110],ah
  4224b4:	gs jmp 0x57b377a5
  4224ba:	(bad)
  4224bd:	mov    dh,0x2f
  4224bf:	test   BYTE PTR [edx],bl
  4224c1:	lods   al,BYTE PTR ds:[esi]
  4224c2:	sbb    bh,BYTE PTR [eax]
  4224c4:	inc    ebp
  4224c5:	cmp    al,0x18
  4224c7:	or     eax,0xd3405463
  4224cc:	enter  0x9ef4,0xb1
  4224d0:	jle    0x4224ca
  4224d2:	jp     0x422478
  4224d4:	push   ecx
  4224d5:	cli    
  4224d6:	mov    ds:0x367d2701,eax
  4224db:	xchg   edi,eax
  4224dc:	pop    ss
  4224dd:	mov    cl,0x87
  4224df:	or     DWORD PTR [ecx+0x35],ebp
  4224e2:	mov    esi,0xdb56590b
  4224e7:	into   
  4224e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e9:	aaa    
  4224ea:	sub    esi,DWORD PTR [esi]
  4224ec:	adc    eax,esp
  4224ee:	js     0x422562
  4224f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224f1:	sub    ah,BYTE PTR [ebx+ebx*2+0x6]
  4224f5:	lock imul ebp,DWORD PTR [ebx-0x13322010],0x4e
  4224fd:	inc    esp
  4224fe:	cli    
  4224ff:	dec    eax
  422500:	mov    edx,0x8555c202
  422505:	add    eax,0x4e830bd8
  42250a:	mov    eax,0xc80688f4
  42250f:	jne    0x4224f2
  422511:	xchg   edi,eax
  422512:	inc    edx
  422513:	je     0x4224a4
  422515:	sbb    bh,BYTE PTR [ebp-0x7a8743df]
  42251b:	xor    edi,DWORD PTR [esi-0x1f]
  42251e:	inc    esi
  42251f:	fsub   DWORD PTR [ecx]
  422521:	pop    esp
  422522:	hlt    
  422523:	mov    dl,0x7d
  422525:	jg     0x4224dc
  422527:	pop    esp
  422528:	lock adc bl,BYTE PTR ds:0x362631e9
  42252f:	push   ss
  422530:	imul   ebx,DWORD PTR [esi-0x49],0x45042b3a
  422537:	mov    bl,0x12
  422539:	mov    al,ds:0x4880b095
  42253e:	mov    dl,0x49
  422540:	cmp    eax,0xd76bc17
  422545:	enter  0x67a7,0xb
  422549:	or     eax,0xf7058b3
  42254e:	icebp  
  42254f:	pop    ebp
  422550:	xchg   edi,esp
  422552:	and    eax,0xc71fbce6
  422557:	push   esp
  422558:	shl    DWORD PTR [ebx+0x10],1
  42255b:	stos   BYTE PTR es:[edi],al
  42255c:	inc    edx
  42255d:	out    dx,al
  42255e:	pop    ebx
  42255f:	inc    ebx
  422560:	sbb    dl,BYTE PTR [ecx-0x22]
  422563:	push   eax
  422564:	and    DWORD PTR [ecx-0x52ae1a20],ecx
  42256a:	sub    DWORD PTR [ebx+0x29bce6e8],ecx
  422570:	lods   eax,DWORD PTR ss:[esi]
  422572:	imul   eax,esp,0x79
  422575:	add    al,0x5c
  422577:	mov    esp,0x1a0ec57c
  42257c:	xchg   edi,eax
  42257d:	mov    esi,0x923d2430
  422582:	mov    WORD PTR [ebx],gs
  422584:	call   0x74ed:0xd8e5ef1a
  42258b:	into   
  42258c:	pop    ebp
  42258d:	je     0x422523
  42258f:	sbb    eax,0x140dd180
  422594:	jecxz  0x4225c7
  422596:	sub    ecx,DWORD PTR [edx]
  422598:	cvtdq2ps xmm5,XMMWORD PTR [ebx]
  42259b:	jo     0x422560
  42259d:	mov    cl,0xf3
  42259f:	jb     0x42261b
  4225a1:	mov    es,WORD PTR [ecx]
  4225a3:	push   ecx
  4225a4:	xchg   edi,eax
  4225a5:	mov    esi,0x8b18f0c1
  4225aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225ab:	hlt    
  4225ac:	clc    
  4225ad:	leave  
  4225ae:	aam    0x2d
  4225b0:	loope  0x42258b
  4225b2:	aas    
  4225b3:	jmp    0x42254a
  4225b5:	xchg   ah,ah
  4225b7:	bound  edx,QWORD PTR [eax+0x8]
  4225ba:	in     al,0x91
  4225bc:	popf   
  4225bd:	hlt    
  4225be:	mov    cl,0xae
  4225c0:	pop    ds
  4225c1:	mov    ebp,0xa02cd657
  4225c6:	jl     0x422556
  4225c8:	jb     0x422639
  4225ca:	sar    BYTE PTR [ecx+0x781061b5],0xa6
  4225d1:	xor    esp,DWORD PTR [edi-0x7e]
  4225d4:	popa   
  4225d5:	sub    ecx,ebp
  4225d7:	mov    esi,0x4b407b
  4225dc:	adc    BYTE PTR [edx-0x7975e8bd],dh
  4225e2:	shr    BYTE PTR [edi-0x1e],1
  4225e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e6:	adc    BYTE PTR [edx+eax*1+0x4d5b292b],0x3d
  4225ee:	clc    
  4225ef:	xchg   esp,eax
  4225f0:	jecxz  0x4225c7
  4225f2:	cmp    BYTE PTR [ecx+0x16d45a3d],dh
  4225f8:	hlt    
  4225f9:	cmp    esp,DWORD PTR [eax+0x21]
  4225fc:	test   ebp,esp
  4225fe:	jmp    0xcbdada36
  422603:	pop    ecx
  422604:	jae    0x422678
  422606:	test   BYTE PTR [esi+0x39122f65],bh
  42260c:	cmp    ebp,DWORD PTR [edx+0xb]
  42260f:	cmp    ch,0xa3
  422612:	jle    0x42264d
  422614:	push   es
  422615:	ins    DWORD PTR es:[edi],dx
  422616:	mov    dh,0x2a
  422618:	mov    edi,0x42053c28
  42261d:	sbb    al,bl
  42261f:	pop    edx
  422620:	dec    eax
  422621:	mov    al,ds:0x49924546
  422626:	jb     0x422681
  422628:	jae    0x4226a6
  42262a:	out    0xf9,al
  42262c:	inc    edi
  42262d:	bound  eax,QWORD PTR [eax+ecx*4]
  422630:	jnp    0x422683
  422632:	rcl    BYTE PTR [edi+esi*4],0x62
  422636:	or     al,0x3f
  422638:	xchg   edi,eax
  422639:	out    dx,eax
  42263a:	mov    ebp,0x417d436d
  42263f:	xchg   esi,eax
  422640:	and    bh,BYTE PTR [eax-0x77]
  422643:	mov    bl,0xed
  422645:	mov    ebx,0x6ca9725f
  42264a:	pop    ds
  42264b:	mov    ah,0x4a
  42264d:	pop    ss
  42264e:	shld   DWORD PTR [ecx+esi*4+0x76],esp,cl
  422653:	sub    DWORD PTR [esi],0x15
  422656:	cmp    BYTE PTR [edi-0x4404838d],dl
  42265c:	jmp    0x4225eb
  42265e:	ins    BYTE PTR es:[edi],dx
  42265f:	jb     0x422656
  422661:	fs es (bad) 
  422664:	mov    bl,0xc2
  422666:	and    cl,BYTE PTR [ebp-0x9fd6775]
  42266c:	neg    BYTE PTR [edi-0x2d]
  42266f:	repnz sub eax,0x88e8d529
  422675:	cmp    al,0x9f
  422677:	push   ss
  422678:	ja     0x422670
  42267a:	or     bl,BYTE PTR [edx]
  42267c:	sub    al,BYTE PTR [esp+eax*8]
  42267f:	xlat   BYTE PTR cs:[ebx]
  422681:	fstp   QWORD PTR [edx+0x6d4286fa]
  422687:	sub    esp,ebx
  422689:	nop
  42268a:	mov    WORD PTR [edi-0x76b01818],?
  422690:	xor    BYTE PTR [ebx+0x5719cea9],ah
  422696:	jmp    0xa0f8:0xe7b24c
  42269d:	cmc    
  42269e:	retf   0x74b2
  4226a1:	lods   al,BYTE PTR ds:[esi]
  4226a2:	push   ecx
  4226a3:	pop    ebp
  4226a4:	mov    ah,0xd9
  4226a6:	adc    dh,BYTE PTR [esi+0x15]
  4226a9:	test   DWORD PTR [ebx+0x4a],ebp
  4226ac:	in     al,dx
  4226ad:	mov    eax,0xa5337a4f
  4226b2:	lds    ebx,FWORD PTR [ebx+0x4468ec6]
  4226b8:	inc    ecx
  4226b9:	in     al,0xe6
  4226bb:	cli    
  4226bc:	mov    al,0xb4
  4226be:	xor    BYTE PTR [ecx+0x78],bl
  4226c1:	or     bl,al
  4226c3:	xchg   ah,bh
  4226c5:	fadd   QWORD PTR [eax-0x1571b887]
  4226cb:	push   edi
  4226cc:	popa   
  4226cd:	scas   eax,DWORD PTR es:[edi]
  4226ce:	nop
  4226cf:	pop    ds
  4226d0:	imul   eax,DWORD PTR [edx-0x62],0xffffff98
  4226d4:	dec    eax
  4226d5:	jmp    0x4226ab
  4226d7:	dec    ecx
  4226d8:	adc    esp,DWORD PTR [edx]
  4226da:	pop    ecx
  4226db:	inc    edx
  4226dc:	mov    ebp,0x2283f77
  4226e1:	and    cl,BYTE PTR [ecx]
  4226e3:	sub    eax,0xd545556c
  4226e8:	(bad)  
  4226e9:	jnp    0x422745
  4226eb:	and    eax,0xa72e5cd
  4226f0:	pop    ss
  4226f1:	aad    0x2e
  4226f3:	adc    eax,0x6a5ed8ea
  4226f8:	cmp    al,0xbe
  4226fa:	sub    BYTE PTR [esi],bh
  4226fc:	sub    edi,DWORD PTR [esi-0x46d9a688]
  422702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422703:	clc    
  422704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422705:	arpl   si,cx
  422707:	dec    ebp
  422708:	aam    0xcd
  42270a:	je     0x422785
  42270c:	cmp    al,0x10
  42270e:	sub    edi,ebp
  422710:	loop   0x42274e
  422712:	imul   DWORD PTR [ebp-0x23d455a1]
  422718:	cmp    DWORD PTR [ebp+ecx*1+0x5d390bf4],ecx
  42271f:	dec    edx
  422720:	iret   
  422721:	adc    eax,0xead47965
  422726:	std    
  422727:	test   DWORD PTR [edi-0x1eec964d],0x3690a0c2
  422731:	push   ds
  422732:	add    BYTE PTR [esi+eax*2],bl
  422735:	mov    ebp,0x43a6a468
  42273a:	push   0x46b8b2b
  42273f:	adc    eax,0xefa278a2
  422744:	adc    BYTE PTR [ebx+0x3555fd44],0x4e
  42274b:	jbe    0x4227bc
  42274d:	push   0xffffffa9
  42274f:	js     0x4226da
  422751:	or     al,0xd3
  422753:	aaa    
  422754:	jnp    0x422776
  422756:	dec    ecx
  422757:	mov    esp,0x7e0ef5ba
  42275c:	outs   dx,BYTE PTR ds:[esi]
  42275d:	mov    bl,0x71
  42275f:	mov    al,ds:0x3bc94525
  422764:	mov    dh,0xbd
  422766:	or     ecx,DWORD PTR [ebp-0x3a920a0e]
  42276c:	adc    edx,ecx
  42276e:	cmp    BYTE PTR [edx],dl
  422770:	aam    0x53
  422772:	dec    esi
  422773:	add    eax,0x24f1f619
  422778:	push   ecx
  422779:	push   es
  42277a:	inc    esi
  42277b:	loope  0x42276a
  42277d:	call   0xf10f3eb7
  422782:	adc    al,0x75
  422784:	and    eax,0x83efa41f
  422789:	enter  0xec27,0x54
  42278d:	sub    edi,DWORD PTR [eax]
  42278f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422790:	div    DWORD PTR [edx]
  422792:	in     al,dx
  422793:	jecxz  0x42273b
  422795:	out    dx,eax
  422796:	add    al,0x81
  422798:	xchg   DWORD PTR [ecx+0x28ba1695],esp
  42279e:	dec    esp
  42279f:	jno    0x42277e
  4227a1:	cs gs pop edi
  4227a4:	outs   dx,DWORD PTR ds:[esi]
  4227a5:	push   0xa9eb5454
  4227aa:	adc    edi,esp
  4227ac:	shl    ebx,1
  4227ae:	out    0x64,eax
  4227b0:	fwait
  4227b1:	cmp    al,0xef
  4227b3:	or     DWORD PTR [eax+0x3c012c72],0xffffff91
  4227ba:	pop    ebp
  4227bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227bc:	aad    0xe4
  4227be:	mov    ebp,DWORD PTR [ecx+esi*4+0x1a]
  4227c2:	outs   dx,BYTE PTR ds:[esi]
  4227c3:	data16 js 0x42276f
  4227c6:	daa    
  4227c7:	pop    ebp
  4227c8:	jmp    0xf721:0xa086ffbf
  4227cf:	jb     0x422837
  4227d1:	adc    ebp,DWORD PTR [edi-0x25]
  4227d4:	out    0xc1,eax
  4227d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d7:	pop    ecx
  4227d8:	retf   
  4227d9:	jmp    0x9b7e:0x8d4b9d78
  4227e0:	retf   
  4227e1:	repnz clc 
  4227e3:	pop    esp
  4227e4:	or     eax,0xaf9d2c41
  4227e9:	adc    dh,bl
  4227eb:	test   eax,0xe0c94ed5
  4227f0:	xchg   ebp,eax
  4227f1:	inc    eax
  4227f2:	sbb    eax,0x98dff83a
  4227f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227f8:	inc    eax
  4227f9:	in     al,dx
  4227fa:	cs ret 0x90d3
  4227fe:	dec    esp
  4227ff:	das    
  422800:	mov    ch,0x9a
  422802:	and    dl,BYTE PTR [ecx+edx*2-0x79]
  422806:	mov    DWORD PTR [ecx],eax
  422808:	pop    ecx
  422809:	xor    ebx,0x29
  42280c:	test   BYTE PTR [eax-0x23],dl
  42280f:	xchg   ecx,eax
  422810:	xchg   edx,eax
  422811:	xchg   edx,ecx
  422813:	pusha  
  422814:	lock out 0xb8,eax
  422817:	sub    al,0x5c
  422819:	into   
  42281a:	inc    edx
  42281b:	xchg   esi,eax
  42281c:	fwait
  42281d:	add    ebp,DWORD PTR [ebp-0x12174187]
  422823:	ins    DWORD PTR es:[edi],dx
  422824:	jg     0x422848
  422826:	xchg   DWORD PTR [eax],edx
  422828:	inc    eax
  422829:	push   es
  42282a:	mov    eax,ds:0xd9c97514
  42282f:	adc    eax,0x3ce01e37
  422834:	push   edi
  422835:	mov    ds:0xd90755eb,eax
  42283a:	in     eax,dx
  42283b:	test   al,0x91
  42283d:	enter  0xa78b,0xeb
  422841:	into   
  422842:	ss inc edx
  422844:	adc    ch,BYTE PTR ds:0xd55cec8f
  42284a:	mov    cl,0x60
  42284c:	push   ebp
  42284d:	(bad)  
  42284e:	fild   WORD PTR [edx+0x2]
  422851:	fsubr  st,st(3)
  422853:	mov    ds:0x3d5d767c,eax
  422858:	mov    al,0xbc
  42285a:	add    al,0xa8
  42285c:	mov    al,ds:0x88382a53
  422861:	ja     0x4228bc
  422863:	push   esp
  422864:	or     al,0x38
  422866:	push   esp
  422867:	cmp    DWORD PTR [esi+edx*1+0x58],0x7983f815
  42286f:	jae    0x4228c4
  422871:	iret   
  422872:	je     0x422806
  422874:	push   ss
  422875:	sbb    BYTE PTR [ecx],dh
  422877:	lock outs dx,DWORD PTR ds:[esi]
  422879:	xchg   ebx,eax
  42287a:	sub    bh,bh
  42287c:	dec    esp
  42287d:	sub    esp,esi
  42287f:	cld    
  422880:	mov    esp,0xb293e4e4
  422885:	nop    eax
  422888:	sbb    al,0x6e
  42288a:	mov    BYTE PTR ds:0xb7456e4b,al
  422890:	add    DWORD PTR [edx+0x53],edx
  422893:	jg     0x4228c0
  422895:	scas   eax,DWORD PTR es:[edi]
  422896:	fcomp  DWORD PTR [edx-0x5e]
  422899:	(bad)  
  42289a:	mov    BYTE PTR [ebp+ebx*2+0x47],dh
  42289e:	test   BYTE PTR [edx],al
  4228a0:	adc    eax,0xaa4538c4
  4228a5:	call   0x7e92:0xcec3bf23
  4228ac:	cmp    eax,0x2946493d
  4228b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228b2:	(bad)  
  4228b3:	adc    ah,BYTE PTR [ebp-0x32]
  4228b6:	dec    esi
  4228b7:	mov    ch,BYTE PTR [eax+0x69]
  4228ba:	or     al,0xe4
  4228bc:	jbe    0x422924
  4228be:	lea    ecx,[edx+0x44]
  4228c1:	xchg   DWORD PTR [esi+ecx*2-0x57],edi
  4228c5:	outs   dx,DWORD PTR ds:[esi]
  4228c6:	rol    ebp,0xa
  4228c9:	dec    ebp
  4228ca:	jnp    0x4228f8
  4228cc:	mov    ch,0x18
  4228cf:	xchg   esi,eax
  4228d0:	mov    eax,ds:0xca55f655
  4228d5:	hlt    
  4228d6:	inc    esi
  4228d7:	push   ss
  4228d8:	repnz add al,BYTE PTR [eax-0x34]
  4228dc:	hlt    
  4228dd:	ret    
  4228de:	sub    ch,BYTE PTR [ebx+edx*8-0x1d]
  4228e2:	cmc    
  4228e3:	mov    eax,ds:0x8e423269
  4228e8:	add    BYTE PTR [ebx],ch
  4228ea:	adc    DWORD PTR [ecx],esp
  4228ec:	rcr    BYTE PTR [ebp+0x36],1
  4228ef:	xchg   edi,eax
  4228f0:	mov    esp,0x86ebdd60
  4228f5:	mov    WORD PTR [edx],?
  4228f7:	jge    0x42292b
  4228f9:	pop    DWORD PTR [edi-0x4e]
  4228fc:	fisub  DWORD PTR [edi]
  4228fe:	ret    0xfdfb
  422901:	pop    edx
  422902:	(bad)  
  422904:	sub    al,0xf
  422906:	cmp    cl,ch
  422908:	in     eax,0xfb
  42290a:	je     0x42294e
  42290c:	aas    
  42290d:	xchg   edx,eax
  42290e:	scas   al,BYTE PTR es:[edi]
  42290f:	das    
  422910:	push   ds
  422911:	cmc    
  422912:	nop
  422913:	jmp    0xbacc:0xf483a05e
  42291a:	sub    ebp,0xffffffa7
  42291d:	xlat   BYTE PTR ds:[ebx]
  42291e:	mov    DWORD PTR [esi-0x2b3ee207],edx
  422924:	arpl   WORD PTR [eax+0x462d57c4],si
  42292a:	mov    esp,0xc5e90687
  42292f:	xchg   edi,eax
  422930:	cli    
  422931:	xchg   bl,dh
  422933:	pusha  
  422934:	or     al,0x3e
  422936:	fnsave [ecx-0x1f37da76]
  42293c:	and    DWORD PTR [edi+0x154bd6be],0xffffffee
  422943:	inc    ebp
  422944:	mov    cl,0x11
  422946:	jb     0x4228f4
  422948:	jne    0x42292e
  42294a:	loope  0x42296b
  42294c:	lahf   
  42294d:	pop    DWORD PTR [ebp+esi*8+0x13]
  422951:	jb     0x4228e8
  422953:	int    0x7b
  422955:	jo     0x4228db
  422957:	push   0xffffff8e
  422959:	inc    esp
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
